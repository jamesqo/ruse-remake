(p / photographer :arg1 (p2 / person :name (n / name :op1 "Seppo" :op2 "Sirkka")) :arg2 (t / tournament :quant 1982 :location (c / country :name (n2 / name :op1 "Argentina"))) :mod (o / only) :arg1-of (c2 / cause-01 :arg0 (a / and :op1 (c3 / coach :mod (s / secondary) :domain (p3 / person :name (n3 / name :op1 "Reino" :op2 "Kosonen") :arg0-of (h / have-org-role-91 :arg2 (l / legendary)))) :op2 (p4 / person :name (n4 / name :op1 "Jouni" :op2 "Parkkali") :arg0-of (h2 / have-org-role-91 :arg2 (a2 / agent))) :op3 (p5 / person :name (n5 / name :op1 "Jouni" :op2 "Parkkali") :arg0-of (h3 / have-org-role-91 :arg2 (a3 / agent) :time (n6 / nowadays))) :op4 (p6 / person :name (n7 / name :op1 "Jouni" :op2 "Parkkali") :arg0-of (h4 / have-org-role-91 :arg2 (a4 / agent) :time (n8 / nowadays))))))
(o / obligate-01 :arg2 (r / route :mod (u / unobstructed) :mod (u2 / unobstructed) :source (r2 / room :quant (a / all) :part-of (h / house))))
(h / hope-01 :arg0 (c / country :name (n / name :op1 "India")) :arg1 (d / deal-01 :arg0 (c2 / country) :arg1 (n2 / nation :quant 2) :arg2 (d2 / defend-01)) :arg1-of (r / report-01) :mod (a / also))
(l / look-01 :arg0 (p / person :name (n / name :op1 "Ailinn" :op2 "Solomons")) :arg1 (f / foot :part-of (s / she)) :mod (a / again :mod (a2 / alone)))
(d / diminished :arg1 (t / turnover :poss (s / store :name (n / name :op1 (h / hypermarkets)))) :arg2 (o / over :op1 (p / percentage-entity :value (N / N-A))) :time (y / year :ord (o2 / ordinal-entity :value 1) :part-of (a / and :op1 (s2 / store :name (n2 / name :op1 (j / july))) :op2 (t2 / turnover :mod (d2 / department)))))
(a / attract-01 :arg0 (a2 / and :op1 (a3 / art :mod (n / new)) :op2 (a4 / art :mod (v / visual))) :arg1 (a5 / audience :mod (r / record)) :arg2 (l / location :name (n2 / name :op1 "Mänttä")) :time (s / summer :mod (t / this)))
(a / and :op1 (f / flee-05 :arg0 (p / person :name (n / name :op1 "Thomas" :op2 "Thabane") :arg0-of (h / have-org-role-91 :arg2 (m / minister :mod (p2 / prime)))) :arg1 (c / country)) :op2 (s / say-01 :arg0 (p3 / person) :arg1 (a2 / and :op1 (s2 / surround-01 :arg0 (m2 / military :poss (c2 / country)) :arg1 (h2 / home :poss (c3 / country) :mod (o / official))) :op2 (s3 / seize-01 :arg0 (m3 / military) :arg1 (b / building :mod (g / government-organization :arg0-of (g2 / govern-01))) :location (p4 / peninsula :name (n2 / name :op1 "N-A"))))))
(r / referendum :prep-on (d / depend-01 :polarity - :arg0 (c / country :name (n / name :op1 "N-A"))) :time (o / ordinal-entity :value 18))
(l / leak-01 :arg0 (p / photo :topic (p2 / person :name (n / name :op1 "Jennifer" :op2 "Lawrence"))) :medium (o / online))
(a / and :op1 (t / thing :arg1-of (s / same-01 :arg2 (t2 / thing :mod (v / vast :mod (v2 / vast))))) :op2 (t3 / thing :arg1-of (a2 / achieve-01 :location (t4 / they :mod (b / both)))))
(s / say-01 :arg0 (o / organization :name (n / name :op1 "Mallorca" :op2 "Diario") :mod (d / day)) :arg1 (t / thing :arg0-of (p / prove-01 :arg1 (e / extortion :arg0 (p2 / policeman) :arg1 (p3 / person :mod (c / civil) :arg0-of (s2 / serve-01)) :location (o2 / office :poss (p4 / person :arg0-of (h / have-org-role-91 :arg2 (p5 / prosecute-01 :arg1 (p6 / person)))) :location (o3 / office :poss (p7 / person :arg0-of (h2 / have-org-role-91 :arg2 (p8 / prosecute-01 :arg1 (p9 / person))))))))))
(w / want-01 :arg0 (c / city) :arg1 (m / make-01 :arg0 (c2 / city) :arg1 (c3 / continuation :poss (a / activity-06 :arg1 (o / oppose-01 :arg1 (s / self))) :location (a2 / area :arg1-of (p / possible-01)))) :manner (p2 / plan-01 :arg1 (d / detail-01) :arg1-of (l / local-02)))
(m / multi-sentence :snt1 (l / lashed :arg0 (p / person :name (n / name :op1 "Seth" :op2 "Rogen")) :arg1 (p2 / person :arg0-of (h / hack-04)) :location (o / out :op1 (p3 / person :arg0-of (h2 / hack-04)))) :snt2 (d / differ-02 :polarity - :arg1 (p4 / post-01 :arg1 (p5 / post-01 :arg1 (p6 / phone :mod (c / cell)) :source (p7 / phone :mod (c2 / cell)))) :degree (r / really)))
(s / say-01 :arg1 (p / possible-01 :arg1 (h / he)) :arg2 (p2 / person :name (n / name :op1 "Kevern")))
(d / do-02 :arg0 (p / person :arg0-of (h / have-rel-role-91 :arg1 (h2 / he) :arg2 (f / father))) :arg1 (l / letter :mod (l2 / letter)) :time (a / always) :time (b / before :op1 (l3 / leave-15 :arg0 (p2 / person) :arg1 (l4 / lip :poss (p3 / person)))))
(a / allow-01 :arg0 (t / thing :arg1-of (d / decide-01 :arg0 (g / government-organization :name (n / name :op1 "National" :op2 "People's" :op3 "Congress") :poss (c / country)))) :arg1 (w / weed :arg0 (p / person :arg0-of (l / lead-02) :mod (c2 / communism)) :arg1 (c3 / candidate :mod (a2 / any) :arg1-of (l2 / loyalty :polarity - :arg2 (c4 / city :name (n2 / name :op1 "Beijing"))))) :mod (e / essential))
(a / and :op1 (h / has :arg1 (s / shirt :mod (n / nylon)) :arg2 (i / it)) :op2 (t / transmitted :arg1 (d / data) :arg2 (b / box :arg1-of (b2 / be-located-at-91 :arg2 (s2 / shirt)))) :op3 (g / go-01 :arg1 (d2 / data) :arg4 (o / or :op1 (s3 / smartphone) :op2 (t2 / tablets))))
FAILED_TO_PARSE#Failed to parse.
(p / play-02 :arg0 (h / he) :arg1 (m / match-03 :quant 35 :location (t / team :mod (n / nation) :location (l / location :name (n2 / name :op1 "Trinidad" :op2 "and" :op3 "Tobago")))))
(c / comment-01 :polarity - :arg0 (a / and :op1 (p / person :name (n / name :op1 "Palmer")) :op2 (p2 / person :name (n2 / name :op1 "Chuck")) :op3 (p3 / person :name (n3 / name :op1 "Strahovski") :arg0-of (h / have-org-role-91 :arg2 (s / suckers)))) :arg3 (p4 / picture :arg0-of (h2 / hack-04)) :time (y / yesterday))
(i / invest-01 :arg0 (a / apollo) :arg1 (m / monetary-quantity :quant 1 :unit (d / dollar)) :arg2 (m2 / monetary-quantity :quant 1 :unit (d2 / dollar)) :location (c / cruise :name (n / name :op1 (n2 / norwegian) :op2 2008 :op3 (c2 / cruise))))
(m / multi-sentence :snt1 (c / contrast-01 :arg1 (g / good :domain (s / struggle-01)) :arg2 (g2 / good :domain (s2 / struggle-01))) :snt2 (s3 / say-01 :arg0 (p / person :name (n / name :op1 "Teemu" :op2 "Mäkikyrö") :arg0-of (h / have-org-role-91 :arg2 (c2 / coach))) :arg1 (g3 / good :degree (m2 / more :degree (b / bit)) :domain (s4 / struggle-01))))
(p / present :mod (o / over :op1 (t / thing :arg1-of (k / know-02 :arg2 (t2 / thing :arg1-of (k2 / know-02 :arg2 (t3 / thing :arg1-of (k3 / know-02 :arg2 (t4 / thing :arg1-of (k4 / know-02 :arg2 (t5 / thing :arg1-of (k5 / know-02 :arg2 (n / name :op1 (i / it?s))))))))))))) :mod (l / little) :time (p2 / present))
(g / grow-03 :arg0 (s / sell-01 :arg1 (g2 / grocery)) :arg1 (p / percentage-entity :value (N / N-A)) :arg1-of (i / instead-of-91))
(d / do-02 :mode (i / imperative) :arg0 (y / you) :arg1 (t / that :mod (a / all)))
(m / multi-sentence :snt1 (v / viewpoints :mode (i / interrogative)) :snt2 (p / possible-01 :arg1 (e / explain-01 :arg0 (y / you) :arg1 (g / grow-01 :arg1 (g2 / group :mod (f / fan))) :manner (a / amr-unknown)) :degree (t / too)))
(a / attempt-01 :arg0 (a2 / authority :mod (i / island)) :arg1 (c / clamped :arg0 (a3 / authority) :arg1 (a4 / and :op1 (b / behave-01 :arg0 (a5 / authority) :arg1 (h / holiday :name (n / name :op1 (m / magaluf)))) :op2 (b2 / behave-01 :arg0 (h2 / holiday :name (n2 / name :op1 (m2 / magaluf))) :arg1 (h3 / holiday :name (n3 / name :op1 (m3 / magaluf) :op2 (m4 / magaluf) :op3 (b3 / bar)))))) :time (s / since))
(a / available-02 :arg2 (s / star :arg1-of (i / include-91 :arg2 (s2 / star)) :quant (s3 / some)) :arg3 (m / media :arg1-of (c / call-01 :arg2 (f / fair :mod (t / tv)))))
(s / sky :polarity - :mod (p / peaceful) :topic (p2 / part :part-of (c / country :name (n / name :op1 "Ukraine")) :mod (e / every)))
(m / meet-03 :arg0 (a / and :op1 (p / person :arg0-of (h / have-org-role-91 :arg1 (c / country :name (n / name :op1 "India")) :arg2 (m2 / minister :mod (p2 / prime) :mod (n2 / new)))) :op2 (p3 / person :name (n3 / name :op1 "Narendra" :op2 "Modi") :arg0-of (h2 / have-org-role-91 :arg1 (c2 / country) :arg2 (m3 / minister :mod (p4 / prime) :mod (n4 / new))))) :arg1 (a2 / and :op1 (r / rifle :poss (p5 / person) :mod (c3 / country)) :op2 (p6 / person :name (n5 / name :op1 "Shinzo" :op2 "Abe") :location (c4 / city :name (n6 / name :op1 "Tokyo")))) :purpose (d / discuss-01 :arg0 (p7 / person) :arg1 (a3 / and :op1 (t / tie-01 :arg1 (p8 / person) :arg2 (e / economy)) :op2 (t2 / tie-01 :arg1 (p9 / person) :arg2 (s / security)))) :time (s2 / since :op1 (w / win-01 :arg0 (p10 / person) :arg1-of (p11 / possible-01))))
(s / sign-01 :arg0 (p / person :name (n / name :op1 "Hull")) :arg1 (s2 / sum :mod (r / record)) :arg3 (p2 / person :name (n2 / name :op1 "Hernandez")))
(t / think-01 :arg0 (h / he) :arg1 (t2 / think-01 :arg0 (h2 / he) :arg1 (t3 / thing :arg1-of (d / do-02 :arg0 (y / you) :time (n / next))) :arg1-of (c / cause-01 :arg0 (f / feel-01 :arg0 (a / and :op1 (s / series :name (n2 / name :op1 (d2 / documentaries))) :op2 (s2 / series :name (n3 / name :op1 (d3 / documentaries) :op2 (s3 / series) :op3 (s4 / series)))) :arg1 (t4 / thing :arg1-of (d4 / do-02 :arg0 (y2 / you) :time (n4 / next))))) :arg1-of (c2 / cause-01 :arg0 (f2 / feel-01 :arg0 (a2 / and :op1 (s5 / series :name (n5 / name :op1 (m / marking)) :poss (h3 / he)) :op2 (s6 / series :mod (t5 / tv) :poss (h4 / he))) :arg1 (t6 / thing :arg1-of (d5 / do-02 :arg0 (y3 / you) :time (n6 / next)))))))
(f / fault-01 :polarity - :arg1 (i / i) :arg2 (a / and :op1 (w / want-01 :arg0 (t / they) :arg1 (t2 / take-01 :arg0 (t3 / they) :arg1 (p / position :mod (t4 / that)))) :op2 (t5 / take-01 :arg0 (t6 / they) :arg1 (a2 / advantage) :arg2 (o / opportunity))) :condition (w2 / want-01 :arg0 (t7 / they) :arg1 (t8 / take-01 :arg0 (t9 / they) :arg1 (p2 / position :mod (t10 / that)))))
(i / idea :mod (s / such) :arg1-of (d / discuss-01 :arg2 (d2 / department :mod (h / healthcare)) :time (t / time :mod (t2 / that))) :mod (a / apparent))
(g / guardian)
(p / protect-01 :arg0 (w / we) :arg1 (a / and :op1 (i / interest :poss (w2 / we)) :op2 (e / economy :poss (w3 / we)) :op3 (b / business :poss (w4 / we)) :op4 (b2 / business :poss (w5 / we))) :time (f / first))
(m / multi-sentence :snt1 (c / contrast-01 :arg2 (g / give-01 :arg0 (p / person :name (n / name :op1 "Salin")) :arg1 (c2 / credit :mod (a / all)) :arg2 (f / fan :mod (w / wolf)))) :snt2 (a2 / and :op1 (d / do-02 :mode (i / interrogative) :arg0 (p2 / person) :arg1 (c3 / credit) :arg2 (s / style)) :op2 (d2 / do-02 :arg0 (p3 / person) :arg1 (s2 / style))))
(s / suggest-01 :arg1 (t / this) :arg2 (s2 / suggest-01 :arg1 (p / patience :mod (i / infinite))))
(p / post-01 :arg0 (t / thing :arg1-of (p2 / post-01 :time (e / early :degree (m / more)))) :arg1 (i / image :arg1-of (c / convict-01 :arg2 (a / and :op1 (p3 / person :name (n / name :op1 "Rosemary" :op2 "Lehmberg") :arg0-of (h / have-org-role-91 :arg2 (a2 / attorney))) :op2 (p4 / person :arg1-of (c2 / convict-01 :arg2 (w / wisdom)))))) :time (e2 / early :degree (m2 / more)))
(d / die-01 :arg1 (f / fire-01) :mod (m / main) :location (d2 / dwellings))
(s / say-01 :arg0 (s2 / she) :arg1 (o / or :op1 (p / possible-01 :arg1 (h / have-03 :arg0 (p2 / person :mod (e / every) :arg0-of (s3 / study-01)) :arg1 (c / concept))) :op2 (s4 / say-01 :arg0 (p3 / person) :arg1 (t / thing :arg1-of (s5 / say-01 :arg0 (p4 / person))))))
(l / love-01 :arg0 (i / i) :arg1 (i2 / it) :mod (r / really))
(c / call-02 :arg0 (p / person :arg0-of (h / have-rel-role-91 :arg2 (r / relative))) :arg1 (p2 / police) :time (r2 / return-01 :polarity - :arg1 (p3 / person) :arg4 (h2 / home)))
(t / tell-01 :arg0 (p / person :name (n / name :op1 "Fats" :op2 "Waller") :arg1-of (c / call-01 :arg2 (n2 / name :op1 (j / jazz) :op2 (p2 / pianist)))) :arg1 (p3 / put-01 :arg0 (p4 / person) :arg1 (f / finger :quant 2) :arg2 (p5 / person :arg0-of (h / have-rel-role-91 :arg1 (h2 / he) :arg2 (g / girlfriend)))) :arg2 (s / she) :arg1-of (c2 / cause-01 :arg0 (p6 / popular :arg0 (p7 / pianist :mod (j2 / jazz) :arg1-of (c3 / call-01 :arg2 (n3 / name :op1 (j3 / jazz) :op2 (p8 / pianist)))) :arg1 (i / it))))
(i / issue-01 :arg0 (a / authority :mod (c / country :name (n / name :op1 "N-A"))) :arg1 (t / thing :arg1-of (s / state-01) :topic (a2 / arrest-01 :arg1 (s2 / sunday))))
(e / event :mod (c / coincidences))
(p / possible-01 :arg1 (m / make-02 :arg0 (y / you) :arg1 (f / featuring :arg0 (p2 / picture) :arg1 (o / or :op1 (p3 / person :arg1-of (f2 / fame-01)) :op2 (e / event :arg1-of (f3 / fame-01))))) :time (t / time :mod (t2 / that)))
(m / multi-sentence :snt1 (o / opera :mode (i / interrogative) :arg1-of (p / popular-02 :degree (m2 / most)) :mod (p2 / popular :degree (m3 / most)) :mod (p3 / popular :degree (m4 / most)) :time (t / time :mod (a / all))) :snt2 (a2 / and :op1 (b / bold :mode (i2 / interrogative)) :op2 (b2 / beautiful-02 :arg1 (i3 / i) :time (s / summer))))
(g / go-02 :arg0 (p / person :arg0-of (h / have-rel-role-91 :arg1 (c / child :arg0-of (h2 / have-rel-role-91 :arg1 (c2 / child :mod (i / israeli)) :arg2 (c3 / child))) :location (a / area :arg1-of (n / near-02 :arg2 (w / world-region))))) :arg4 (s / school) :time (a2 / after :op1 (s2 / spend-02 :arg0 (p2 / person) :arg1 (a3 / and :op1 (t / temporal-quantity :quant (N / N-A) :unit (y / year)) :op2 (t2 / temporal-quantity :quant (N2 / N-A) :unit (y2 / year))) :location (c4 / community :poss (p3 / person)) :time (w2 / war-01 :arg0 (p4 / person) :arg1 (c5 / community :poss (p5 / person)) :time (w3 / war-01 :arg0 (p6 / person) :arg1 (c6 / community :poss (p7 / person)) :time (w4 / war-01 :arg0 (p8 / person) :arg1 (c7 / community :poss (p9 / person)) :time (d / during :op1 (w5 / war))))))) :time (d2 / during :op1 (r / recover-01 :arg1 (f / fight-01 :arg2 (f2 / fight-01 :arg2 (f3 / fight-01))))))
(h / have-03 :arg0 (c / cameras :mod (p / point-and-shoot)) :arg1 (a / and :op1 (h2 / help-01 :arg1 (p2 / photo :mod (c2 / composed)) :arg2 (y / you)) :op2 (a2 / act-02 :polarity - :arg0 (y2 / you) :arg1-of (g / general-02))))
(a / and :op1 (c / cut-02 :arg0 (p / person :name (n / name :op1 "Perry")) :arg1 (f / fund :mod (s / state) :quant (m / monetary-quantity :quant 7.5 :unit (d / dollar)) :arg1-of (f2 / fund-01 :arg0 (s2 / state))) :arg2 (o / organization :name (n2 / name :op1 "Public" :op2 "Integrity" :op3 "Unit") :poss (s3 / state) :arg1-of (b / base-01 :location (a2 / and :op1 (l / laptop) :op2 (c2 / corrupt-01 :arg1-of (p2 / public-02)))))) :op2 (r / refuse-01 :arg0 (p3 / person :name (n3 / name :op1 "Lehmberg")) :arg1 (r2 / resign-01 :arg0 (p4 / person :name (n4 / name :op1 "Lehmberg")))))
(s / say-01 :arg0 (c / company :name (n / name :op1 "Areva")) :arg1 (d / delay-01 :arg0 (d2 / delay-01 :arg1 (p / project) :time (l / late :degree (m / most))) :arg1 (p2 / project) :mod (m2 / main) :arg1-of (c2 / cause-01 :arg0 (a / apply-02 :arg1 (a2 / accept-01 :arg1 (s2 / system :mod (a3 / automation) :mod (r / reactor?s)))))))
(t / think-01 :arg0 (p / person :name (n / name :op1 "Itkonen")) :arg1 (t2 / thing :arg1-of (q / question-01) :mod (g / good)) :arg1-of (c / cause-01 :arg0 (a / and :op1 (t3 / thing :arg1-of (q2 / question-01) :mod (g2 / good)) :op2 (t4 / thing :arg2-of (r / reply-01 :arg1 (w / way :mod (g3 / good) :arg1-of (s / signal-07 :arg0 (s2 / sports :mod (t5 / that)))) :arg1-of (n2 / need-01))))))
(e / exist-01 :arg1 (p / past :mod (p2 / past)) :arg1-of (c / cause-01 :arg0 (f / forget-01 :arg0 (w / we) :arg1 (i / it))))
(c / close-10 :arg1 (y / you) :arg2 (s / subject :poss (y2 / you)))
(h / have-condition-91 :arg1 (s / surprise-01 :arg0 (c / country :quant 1 :arg1-of (i / include-91 :arg2 (c2 / country :mod (t / that)))) :arg1 (w / win-01 :arg0 (c3 / country) :arg1-of (c4 / cause-01 :arg0 (q / qualify-02 :arg1 (c5 / country) :arg2 (q2 / qualify-02 :arg1 (c6 / country)))))) :arg2 (s2 / surprise-01 :polarity - :arg1 (c7 / country :name (n / name :op1 "US"))))
(p / play-02 :arg0 (m / match-03) :arg1 (o / or :op1 (h / hundreds :quant (o2 / over :op1 1000)) :op2 (t / thing :quant (o3 / over :op1 1000))) :location (a / and :op1 (b / basketball) :op2 (v / volleyball)))
(b / bent :arg0 (p / person :name (n / name :op1 "Vampula")) :arg1 (m / match-03) :arg2 (s / sets :quant 5 :destination (w / win-01 :quant (3 / 3-2) :arg0 (p2 / person))))
(a / and :op1 (s / score-01 :arg1 (p / person :name (n / name :op1 "Hernandez")) :arg2 (g / goal :quant 14) :time (s2 / season :mod (l / last)) :time (w / win-01 :arg0 (c / city :name (n2 / name :op1 "Palermo")) :arg1 (u / universe :mod (s3 / serie)))) :op2 (m / move-01 :arg1 (p2 / person) :arg2 (s4 / series :mod (m2 / main))))
(p / possible-01 :arg1 (s / say-01 :arg0 (h / he) :arg1 (c / contrast-01 :arg1 (l / love-01 :arg0 (h2 / he) :arg1 (y / you)) :arg2 (s2 / soon :degree (t / too) :prep-for (t2 / that) :domain (i / it)))))
(e / extract-01 :arg1 (a / and :op1 (l / love-01) :op2 (l2 / letter)) :manner (e2 / exclusive-02) :topic (a2 / and :op1 (l3 / love-01) :op2 (l4 / letter)))
(a / and :op2 (r / recommend-01 :arg1 (c / check-01 :arg0 (e / everyone) :arg1 (a2 / available-02 :arg2 (e2 / equipment :ord (o / ordinal-entity :value 1) :arg2-of (a3 / available-02)) :arg1-of (e3 / easy-05)))))
(e / e-books)
(w / want-01 :arg0 (c / city :arg1-of (i / include-91 :arg2 (l / location :name (n / name :op1 "Rovaniemi")))) :arg1 (c2 / confirm-01 :arg0 (c3 / city) :arg1 (p / plan-01 :arg0 (a / and :op1 (a2 / activity-06 :arg1 (o / oppose-01 :arg1 (c4 / country-region)) :arg1-of (l2 / local-02)) :op2 (a3 / activity-06 :location (p2 / peninsula :name (n2 / name :op1 "N-A"))) :arg1-of (b / be-located-at-91 :arg2 (n3 / next))) :location (p3 / peninsula :name (n4 / name :op1 "N-A")))))
(l / like-01 :arg0 (i / i) :arg1 (a / actor :arg1 (i2 / i)))
(a / and :op1 (b / base-01 :arg1 (p / person :arg0-of (b2 / bridge-01)) :location (l / location :name (n / name :op1 "Miami")) :mod (a2 / also)) :op2 (o / operate-01 :arg1 (s / ship :quant 8 :mod (c / cruise)) :arg4 (a3 / and :op1 (w / world-region :name (n2 / name :op1 "Scandinavia")) :op2 (c2 / country :name (n3 / name :op1 "Russia")) :op3 (p2 / person :arg0-of (t / travel-01 :arg2 (w2 / world-region :name (n4 / name :op1 "Scandinavia")))) :op4 (p3 / person :arg0-of (h / have-org-role-91 :arg2 (h2 / head-of-state))) :op5 (p4 / person :arg0-of (h3 / have-org-role-91 :arg2 (h4 / head-of-state))) :op6 (p5 / person :arg0-of (h5 / have-org-role-91 :arg2 (h6 / head-of-state))) :op7 (p6 / person :arg0-of (h7 / have-org-role-91 :arg2 (h8 / head-of-state))) :op7 (p7 / person :arg0-of (h9 / have-org-role-91 :arg2 (h10 / head-of-state))))))
(m / multi-sentence :snt1 (t / think-01 :arg0 (i / i) :arg1 (c / change-01 :arg1 (t2 / thing :quant 1 :arg1-of (t3 / think-01 :arg0 (i2 / i))))) :snt2 (c2 / change-01 :arg0 (y / you) :arg1 (o / oh :mode (e / expressive))))
(o / occupy-01 :arg0 (c / center :arg1-of (i / include-91 :arg2 (c2 / campaign-01 :arg0-of (f / favor-01 :arg1 (d / democracy)) :location (c3 / city :name (n / name :op1 "Hong" :op2 "Kong")))) :quant (m / much)) :arg1 (m2 / movement-07 :arg1 (a / and :op1 (l / love-01) :op2 (p / peace))) :arg1-of (c4 / cause-01 :arg0 (t / threaten-01 :arg0 (p2 / person :arg0-of (o2 / organize-01)) :arg1 (s / shut-down-05 :arg0 (p3 / person) :arg1 (d2 / district :mod (f2 / finance))) :condition (g / grant-01 :polarity - :arg0 (c5 / city :name (n2 / name :op1 "Beijing")) :arg1 (s2 / suffrage :mod (u / universal) :mod (a2 / authentic))))))
(s / specific-02 :arg1 (f / foot :part-of (y / you)) :manner (s2 / specific-02))
(a / arrest-01 :arg0 (c / country :name (n / name :op1 "France")) :arg1 (m / man :arg1-of (s / suspect-01 :arg2 (t / terrorism :location (p / peninsula :name (n2 / name :op1 "N-A"))))))
(a / and :op1 (m / manage-02 :arg0 (p / person :name (n / name :op1 "Nastola")) :arg1 (s / succeed-01 :arg0 (p2 / person) :arg1 (g / gift-01)) :frequency (s2 / sometimes)) :op2 (s3 / succeed-01 :arg0 (p3 / person) :arg1 (k / keep-01 :arg0 (p4 / person) :arg1 (a2 / athletes :arg1-of (s4 / succeed-01)) :location (m2 / municipal)) :frequency (s5 / sometimes)) :duration (o / over :op1 (t / temporal-quantity :quant (N / N-A) :unit (d / decade))))
(a / assure-01 :arg0 (o / organization :name (n / name :op1 "SPEK")) :arg1 (s / safe-01 :arg1 (f / fire) :location (h / home)))
(c / contrast-01 :arg2 (p / past :domain (a / amr-unknown) :condition (l / learn-01 :polarity - :arg1 (l2 / learn-01 :arg1 (i / it) :arg2 (i2 / it)))))
(e / except-01 :arg1 (b / big :degree (t / too) :domain (p / person :mod (b2 / big :degree (t2 / too)))))
(d / die-01 :arg1 (n / number :quant-of (f / fire-01)) :time (y / year :mod (s / same)))
(o / obligate-01 :arg2 (a / achieve-01 :arg1 (t / thing :arg1-of (s / save-01))) :mod (u / unanimous))
(c / contrast-01 :arg1 (s / show-01 :arg0 (f / figure :mod (d / data) :mod (r / rp)) :arg1 (m / monetary-quantity :arg2-of (p / price-01 :arg1 (h / home)) :location (c2 / city :name (n / name :op1 "Sydney"))) :arg2 (r2 / rate-entity-91 :arg1 16.1 :arg2 (t / temporal-quantity :quant (N / N-A) :unit (y / year))) :time (y2 / year :mod (p2 / past))) :arg2 (b / break-up-08 :arg1 (c3 / city :name (n2 / name :op1 "Melbourne")) :arg3 (r3 / rate-entity-91 :arg1 11.7 :arg2 (t2 / temporal-quantity :quant (N2 / N-A) :unit (y3 / year)))))
(s / say-01 :arg1 (p / possible-01 :arg1 (h / he)) :arg2 (p2 / person :name (n / name :op1 "Kevern")))
(s / say-01 :arg0 (t / thing :arg1-of (s2 / state-01 :arg0 (g / government-organization :arg0-of (g2 / govern-01)))) :arg1 (p / pay-01 :polarity - :arg0 (p2 / person :arg1-of (f / fail-01 :arg2 (r / register-02 :arg1 (p3 / person)) :time (a / after :op1 (n / now) :quant (u / up-to :op1 (t2 / temporal-quantity :quant (N / N-A) :unit (w / week))))))))
(s / say-01 :arg0 (p / person :arg0-of (p2 / prosecute-01)) :arg1 (d / drive-01 :arg0 (p3 / person :name (n / name :op1 "Stewart")) :arg1 (q / q3 :poss (p4 / person)) :manner (a / and :op1 (c / care-01 :arg0 (p5 / person)) :op2 (a2 / attend-02 :arg0 (p6 / person) :arg1 (g / girl))) :arg1-of (c2 / cause-01 :arg0 (a3 / and :op1 (c3 / care-03 :arg0 (p7 / person)) :op2 (a4 / attend-02 :arg0 (p8 / person) :arg1 (g2 / girl))))))
(c / child :polarity - :mod (a / all) :arg0-of (h / have-rel-role-91 :arg1 (c2 / child) :arg2 (c3 / child)) :direction (b / back) :destination (s / school) :location (c4 / country :name (n / name :op1 "Ukraine")))
(c / contrast-01 :arg1 (c2 / confirm-01 :arg1 (l / leave-15 :arg0 (p / person :name (n / name :op1 "Fernando" :op2 "Torres") :arg0-of (h / have-org-role-91 :arg1 (o / organization :name (n2 / name :op1 "Chelsea")))) :arg1 (o2 / organization :name (n3 / name :op1 "Chelsea")))) :arg2 (e / enter-01 :arg0 (p2 / person :arg0-of (p3 / play-01 :arg1 (r / replace-01))) :arg1 (c3 / club) :time (s / simultaneous :mod (n4 / near))))
(v / vented :arg0 (p / person :name (n / name :op1 "Geoffrey" :op2 "Edelsten")) :arg1 (d / disgust :poss (p2 / person)) :arg2 (p3 / person :arg0-of (h / hack-04)) :arg1-of (c / cause-01 :arg0 (a / and :op1 (s / steal-01 :arg0 (p4 / person) :arg1 (i / image :mod (m / monkey) :poss (p5 / person :name (n2 / name :op1 "Gabi" :op2 "Grecko") :arg0-of (h2 / have-org-role-91 :arg2 (f / fiancee))))) :op2 (p6 / person :arg0-of (h3 / have-org-role-91 :arg2 (c2 / city-district :name (n3 / name :op1 "Hollywood")))))))
(s / say-01 :arg0 (p / person :arg0-of (b / broker-01 :arg1 (t / tracking :poss (o / organization :name (n / name :op1 "Central" :op2 "Association" :op3 "of" :op4 "Finland?s" :op5 "Emergency" :op6 "Service" :op7 "Sector"))))) :arg1 (d / die-01 :arg1 (p2 / person :quant 55) :arg1-of (c / cause-01 :arg0 (s2 / shoot-02 :quant 49 :arg1-of (d2 / differ-02) :time (s3 / so-far)))))
(i / include-91 :arg1 (a / and :op1 (p / person :arg0-of (r / reside-01 :arg1 (p2 / person :mod (c / country :name (n / name :op1 "N-A")))) :quant (m / many)) :op2 (c2 / community :arg1-of (c3 / close-10 :arg2 (w / world-region :name (n2 / name :op1 "N-A")))) :op3 (c4 / community :arg1-of (k / kill-01 :arg0 (s / shell :mod (m2 / mortar) :mod (c5 / country))))) :arg2 (c6 / come-01 :arg1 (p3 / person) :direction (b / back)))
(m / multi-sentence :snt1 (c / contrast-01 :arg2 (g / give-01 :arg0 (p / person :name (n / name :op1 "Salin")) :arg1 (c2 / credit :mod (a / all)) :arg2 (f / fan :mod (w / wolf)))) :snt2 (a2 / and :op1 (d / do-02 :mode (i / interrogative) :arg0 (p2 / person) :arg1 (c3 / credit) :arg2 (s / style)) :op2 (d2 / do-02 :arg0 (p3 / person) :arg1 (s2 / style))))
(s / say-01 :arg0 (s2 / she) :arg1 (l / leave-11 :arg0 (p / person :name (n / name :op1 "Adam")) :arg1 (p2 / person :mod (g / garden))))
(a / and :op2 (r / recommend-01 :arg1 (c / check-01 :arg0 (e / everyone) :arg1 (a2 / available-02 :arg2 (e2 / equipment :ord (o / ordinal-entity :value 1) :arg2-of (a3 / available-02)) :arg1-of (e3 / easy-05)))))
(r / return-01 :arg1 (w / we) :arg1-of (n / need-01) :condition (h / help-01 :arg0 (t / they) :arg1 (i / i)))
(s / say-01 :arg0 (p / person :name (n / name :op1 "Billie") :arg0-of (h / have-rel-role-91 :arg1 (h2 / he) :arg2 (d / daughter))) :arg1 (e / enable-01 :arg0 (p2 / person) :arg1 (m / miss-02 :arg0 (p3 / person) :arg1 (l / love-01 :arg0 (p4 / person) :arg1 (p5 / person)) :arg2 (p6 / person)) :arg2 (p7 / person)) :arg2 (p8 / person :arg0-of (h3 / have-rel-role-91 :arg1 (h4 / he) :arg2 (d2 / daughter))))
(h / hard-02 :arg1 (i / it) :degree (v / very))
(s / say-01 :arg0 (p / person :name (n / name :op1 "Rodgers")) :arg1 (t / take-01 :arg0 (s2 / she) :arg1 (n2 / note :mod (m / medicine) :poss (s3 / she)) :time (a / age-01 :arg1 (s4 / she) :arg2 (t2 / temporal-quantity :quant (N / N-A) :unit (y / year))) :time (a2 / age-01 :arg1 (s5 / she) :arg2 (t3 / temporal-quantity :quant (N2 / N-A) :unit (y2 / year)))) :time (a3 / age-01 :arg1 (s6 / she) :arg2 (t4 / temporal-quantity :quant (N3 / N-A) :unit (y3 / year))) :arg0-of (c / cause-01 :arg1 (p2 / peak-01 :arg1 (n3 / note :mod (m2 / medicine) :poss (s7 / she))) :time (l / leave-15 :arg0 (p3 / person :arg0-of (h / have-rel-role-91 :arg1 (s8 / she) :arg2 (c2 / consultant))) :arg1 (r / room :arg0-of (s9 / say-01 :arg1 (s10 / suffer-01 :arg0 (s11 / she) :arg1 (s12 / suffer-01 :arg0 (s13 / she))))))))
(m / matter-01 :polarity - :arg1 (s / shop :location (a / around)))
(r / raise-01 :arg0 (t / thing :arg2-of (n / name-01 :arg1 (e / episode :mod (o / open-01)))) :arg1 (q / question-01))
(p / possible-01 :arg1 (c / claim-01 :arg0 (p2 / person :name (n / name :op1 "Esme") :arg0-of (' / '' :arg1 (i / interject :arg0 (p3 / person)))) :arg1 (a / acquit-01 :arg1 (p4 / person) :mod (a2 / as-well)) :condition (h / honest :domain (w / we) :prep-with (w2 / we)) :condition (h2 / honest :domain (w3 / we) :prep-with (w4 / we))))
(c / contrast-01 :arg1 (b / bring-01 :arg0 (s / school) :arg1 (s2 / sense-01 :arg0 (s3 / school) :arg1 (c2 / community :location (s4 / south :part-of (c3 / country :name (n / name :op1 "Israel")))))) :arg2 (s5 / signal-07 :arg1 (r / remain-01 :arg1 (f / fight-01) :arg3 (f2 / fresh-04))))
(s / say-01 :arg0 (s2 / she) :arg1 (a / and :op1 (t / time :mod (s3 / some)) :op2 (l / leave-15 :polarity - :arg0 (w / we) :arg1 (h / house :poss (w2 / we) :mod (a2 / at-all)))))
(j / judge-01 :arg0 (p / person :name (n / name :op1 "Lady" :op2 "Rae") :arg0-of (h / have-org-role-91 :arg3 (j2 / judge-01))) :arg1 (p2 / person :arg0-of (h2 / have-org-role-91 :arg3 (j3 / judge-01))) :time (d / date-entity :month 11 :day 17) :location (g / government-organization :name (n2 / name :op1 "High" :op2 "Court") :location (c / city :name (n3 / name :op1 "Edinburgh"))))
(m / multi-sentence :snt1 (h / have-concession-91 :arg1 (a / and :op1 (l / likely-01 :arg1 (d / die-01 :arg1 (w / woman :arg0-of (l2 / live-01 :location (o / outside :op1 (c / city))))) :degree (m2 / more)) :op2 (l3 / likely-01 :polarity - :arg1 (a2 / access-01 :arg1 (t / treat-03 :mod (g / good :degree (m3 / most)))))) :arg2 (d2 / design-01 :polarity - :arg1 (s / study) :arg3 (d3 / determine-01 :arg0 (s2 / study) :arg1 (a3 / amr-unknown :arg0-of (l4 / live-01 :location (o2 / outside :op1 (c2 / city))))) :degree (m4 / more))) :snt2 (p / possible-01 :polarity - :arg1 (f / factor :domain (a4 / access-01 :arg1 (t2 / treat-03 :mod (g2 / good :degree (m5 / most)))))))
(s / schools :arg0 (s2 / school :arg1-of (i / include-91 :arg2 (p / person :mod (c / country :name (n / name :op1 "Ukraine"))) :arg3 (m / most))) :arg1 (d / door :poss (s3 / school)) :time (a / after :op1 (h / holiday :mod (s4 / summer))) :time (a2 / after :op1 (h2 / holiday :mod (s5 / summer))))
(f / find-01 :arg0 (p / person :arg0-of (i / immigrate-01) :mod (h / hundred) :mod (o / one)) :location (w / wagon :location (c / country :name (n / name :op1 "Macedonia"))))
(c / cause-01 :arg0 (e / equipment :arg1-of (r / renew-01)) :arg1 (l / less :compared-to (o / old :domain (e2 / equipment :arg1-of (r2 / renew-01)))) :mod (a / also))
(i / include-91 :arg3 1 :arg1 (t / thing :arg0-of (k / kill-01 :arg1 (s / she))) :arg2 (i2 / it))
(s / say-01 :arg0 (p / person :arg0-of (p2 / prosecute-01)) :arg1 (d / drive-01 :arg0 (p3 / person :name (n / name :op1 "Stewart")) :arg1 (q / q3 :poss (p4 / person)) :manner (a / and :op1 (c / care-01 :arg0 (p5 / person)) :op2 (a2 / attend-02 :arg0 (p6 / person) :arg1 (g / girl))) :arg1-of (c2 / cause-01 :arg0 (a3 / and :op1 (c3 / care-03 :arg0 (p7 / person)) :op2 (a4 / attend-02 :arg0 (p8 / person) :arg1 (g2 / girl))))))
(a / and :op1 (p / positioned :arg0 (p2 / person :arg0-of (h / have-org-role-91 :arg1 (c / city :name (n / name :op1 "Liverpool")) :arg2 (p3 / person :arg0-of (m / manage-01 :arg1 (c2 / city))))) :arg1 (p4 / person :name (n2 / name :op1 "Balotelli")) :arg2 (r / role :poss (p5 / person :name (n3 / name :op1 "Luis" :op2 "Suarez")))) :op2 (t / travelled :arg0 (p6 / person) :arg1 (s / striker :ord (o / ordinal-entity :value 2) :accompanier (p7 / person :name (n4 / name :op1 "Daniel" :op2 "Sturridge")))))
(w / want-01 :arg0 (c / city :arg1-of (i / include-91 :arg2 (l / location :name (n / name :op1 "Rovaniemi")))) :arg1 (c2 / confirm-01 :arg0 (c3 / city) :arg1 (p / plan-01 :arg0 (a / and :op1 (a2 / activity-06 :arg1 (o / oppose-01 :arg1 (c4 / country-region)) :arg1-of (l2 / local-02)) :op2 (a3 / activity-06 :location (p2 / peninsula :name (n2 / name :op1 "N-A"))) :arg1-of (b / be-located-at-91 :arg2 (n3 / next))) :location (p3 / peninsula :name (n4 / name :op1 "N-A")))))
(o / organize-01 :arg0 (a / activist) :arg1 (r / referendum :topic (v / vote-01 :arg1 (r2 / right-05 :arg2 (v2 / vote-01) :arg0-of (d / draw-02 :arg1 (p / person :quant 780,000 :arg0-of (p2 / participate-01)) :degree (m / more :compared-to (p3 / person :arg0-of (v3 / vote-01 :arg1 (c / city :name (n / name :op1 "Hong" :op2 "Kong"))))))))) :time (s / summer :mod (t / this)))
(s / sorry-01 :arg1 (w / we) :arg2 (s2 / say-01 :arg0 (w2 / we) :arg1 (c / chance-02 :arg1 (d / dialogue-01) :mod (a / all)) :mod (d2 / definite) :time (t / today)) :degree (v / very))
(a / and :op1 (d / died :quant (l / lot) :time (a2 / after :op1 (d2 / die-01 :arg1 (p / person :arg0-of (h / have-rel-role-91 :arg1 (h2 / he) :arg2 (m / mother)))))) :op2 (r / reflective :arg0 (p2 / person :name (n / name :op1 "Henry")) :arg1 (r2 / relation-03 :arg0 (p3 / person) :arg2 (p4 / person :arg0-of (h3 / have-rel-role-91 :arg1 (h4 / he) :arg2 (f / father))))))
(h / have-condition-91 :arg1 (t / take-01 :mode (i / imperative) :arg0 (y / you) :arg1 (a / advantage) :arg2 (i2 / it)) :arg2 (h2 / have-03 :arg0 (c / camera :poss (y2 / you)) :arg1 (s / stick :mod (b / bracket))) :mod (a2 / also))
(a / and :op1 (t / time :time-of (s / stop-01 :arg1 (d / die-01 :arg1 (p / person :arg1-of (d2 / die-01))) :arg1-of (c / close-10 :arg2 (p2 / prison :mod (d3 / dolphin))))) :op2 (s2 / start-01 :arg1 (f / find-out-03 :arg0 (p3 / person) :arg1 (t2 / thing :manner-of (t3 / transfer-01 :arg1 (w / work-of-art :name (n / name :op1 "N-A") :poss (l / location :name (n2 / name :op1 "Tampere"))) :arg2 (a2 / area :mod (s3 / sea) :arg1-of (r / restrict-01) :mod (k / kind :mod (s4 / some)) :arg1-of (d4 / demand-01 :mod (k2 / kind :mod (s5 / some)))))))))
(a / and :op1 (k / keep-01 :arg0 (d / doctor) :arg1 (a2 / and :op1 (s / sedated :arg1 (s2 / she)) :op2 (s3 / supervise-01 :arg1 (s4 / she) :mod (c / close))) :manner (v / vehement) :time (u / until :op1 (c2 / comfortable-02 :arg1 (d2 / doctor) :degree (m / more)))) :op2 (r / remain-01 :arg1 (d3 / doctor) :arg3 (c3 / condition :poss (s5 / she)) :arg1-of (r2 / remain-01 :arg3 (s6 / serious :degree (m2 / more)))))
(a / atmosphere :mod (e / electric) :location (o / organization :name (n / name :op1 "White" :op2 "Hart" :op3 "Lane")) :time (h / host-01 :arg0 (p / person :location (c / city :name (n2 / name :op1 "Liverpool"))) :arg1 (p2 / person :name (n3 / name :op1 "Mario" :op2 "Balotelli"))))
(a / and :op1 (d / deliver-01 :arg0 (p / person :name (n / name :op1 "Henry")) :arg1 (l / line :quant 20) :arg3 (d2 / documentary) :mod (l2 / last)) :op2 (l3 / live-01 :arg0 (h / he)))
(l / listen-01 :mode (i / imperative) :arg0 (y / you) :arg1 (a / and :op1 (p / person :arg0-of (h / have-rel-role-91 :arg1 (y2 / you) :arg2 (g / girlfriend))) :op2 (p2 / person :arg0-of (h2 / have-rel-role-91 :arg1 (y3 / you) :arg2 (s / spouse))) :op3 (p3 / person :arg0-of (h3 / have-rel-role-91 :arg1 (y4 / you) :arg2 (s2 / spouse))) :op4 (p4 / person :arg0-of (h4 / have-rel-role-91 :arg1 (y5 / you) :arg2 (s3 / spouse))) :op5 (p5 / person :arg0-of (h5 / have-rel-role-91 :arg1 (y6 / you) :arg2 (s4 / spouse))) :op6 (p6 / person :arg0-of (l2 / listen-01 :arg1 (y7 / you))) :op6 (l3 / listen-01 :arg0 (p7 / person)) :op7 (l4 / listen-01 :arg0 (p8 / person)) :op8 (l5 / listen-01 :arg0 (p9 / person)) :op8 (l6 / listen-01 :arg0 (p10 / person)) :op8 (l7 / listen-01 :arg0 (p11 / person)) :op8 (a2 / apologize-01 :arg0 (p12 / person)) :op8 (a3 / apologize-01 :arg0 (p13 / person)) :op8 (a4 / apologize-01 :arg0 (p14 / person)) :op8 (a5 / apologize-01 :arg0 (p15 / person)) :op8 (e / et-cetera)))
(d / dawn :prep-with (c / country :name (n / name :op1 "N-A")))
(o / organize-01 :arg1 (e / event) :location (a / and :op1 (f / friday) :op2 (s / saturday)) :location (l / location :name (n / name :op1 "Rytmikorjaamo")))
(e / expect-01 :arg1 (b / benefit-01 :arg0 (r / rise-01 :arg1 (e2 / economy :mod (m / middle) :example (a / and :op1 (c / country :name (n / name :op1 "China")) :op2 (c2 / country :name (n2 / name :op1 "India"))))) :arg1 (i / industry) :time (y / year :arg1-of (c3 / come-01))))
(a / and :op1 (d / do-02 :arg0 (t / taste :arg1-of (p / popular-02)) :arg1 (t2 / thing :arg1-of (d2 / do-02 :time (e / ever :polarity -)))) :op2 (a2 / and :op1 (p2 / possible-01 :arg1 (d3 / do-02 :polarity - :arg0 (p3 / person :mod (c / country :name (n / name :op1 "N-A"))) :arg1 (a3 / and :op1 (m / memoirs) :op2 (c2 / cookbooks) :op3 (r / romances)) :time (c3 / come-12 :arg1 (b / book)))) :op2 (c4 / choose-01 :arg0 (p4 / person) :arg1 (a4 / and :op1 (m2 / memoirs) :op2 (c5 / cookbooks) :op3 (r2 / romances)) :time (c6 / come-12 :arg1 (m3 / music)) :time (c7 / come-12 :arg1 (m4 / music)))))
(p / publish-01 :arg0 (p2 / person :arg0-of (h / have-org-role-91 :arg2 (m / minister :mod (e / entertainment)))) :arg1 (c / comment-01 :arg1-of (i / issue-01 :arg1-of (p3 / possible-01 :polarity -)) :arg0-of (c2 / confirm-01 :arg1 (a / authenticity :poss (p4 / picture))) :arg1-of (i2 / issue-01 :arg1-of (a2 / anger-01))))
(c / contrast-01 :arg2 (g / give-01 :polarity - :arg0 (t / they) :arg1 (d / detail-01) :arg2 (t2 / they)) :arg1-of (c2 / cause-01 :arg0 (l / look-04 :arg0 (t3 / they) :arg1 (a / avoid-01 :arg0 (t4 / they) :arg1 (p / problem) :accompanier (a2 / authority)) :manner (a3 / apparent))))
(b / believe-01 :arg0 (i / i) :arg1 (o / oblige-02 :polarity - :arg1 (i2 / i) :arg2 (s / say-01 :arg0 (i3 / i) :arg1 (r / reply-01 :arg0 (p / person :name (n / name :op1 "Esme" :op2 "Nussbaum"))))))
(c / contrast-01 :arg2 (a / and :op1 (c2 / check-01 :arg1 (a2 / area)) :op2 (b / bring-up-02 :arg0 (p / person :arg0-of (i / investigate-01)) :arg1 (s / seismic-quantity :mod (a3 / any) :arg0-of (e / exceed-01 :arg1 (v / value :mod (g / guidelines)))))))
(h / have-org-role-91 :arg0 (p / person :arg0-of (h2 / have-org-role-91 :arg1 (o / organization :name (n / name :op1 "Helsinki" :op2 "Philharmonic" :op3 "Orchestra")) :arg2 (c / chief) :time (c2 / current))) :arg1 (p2 / person :name (n2 / name :op1 "John" :op2 "Storgårds")) :arg2 (c3 / chief))
(m / multi-sentence :snt1 (m2 / make-01 :arg0 (a / and :op1 (p / person :name (n / name :op1 "Veera" :op2 "Vento")) :op2 (p2 / person :name (n2 / name :op1 "Veeti" :op2 "Tikkanen")) :arg0-of (m3 / make-01 :arg1 (i / it) :arg4 (f / final))) :arg1 (i2 / it)) :snt2 (w / win-01 :arg0 (s / song :arg1 (s2 / song)) :arg2 (i3 / it)))
(a / and :op1 (f / feel-01 :arg0 (s / she) :arg1 (p / pang :beneficiary (h / he)) :arg2 (h2 / he)) :op2 (m / matter-01 :polarity - :arg1 (h3 / hand :part-of (t / they)) :arg2 (h4 / hand :part-of (t2 / they))))
(s / surprise-01 :arg0 (s2 / surprise-01) :time (a / already) :time (e / evening :time (e2 / early)))
(e / estimate-01 :arg0 (p / person :name (n / name :op1 "Sivonen")) :arg1 (c / close-10 :arg1 (a / amount :quant-of (p2 / person :arg0-of (v / visit-01) :location (o / organization :name (n2 / name :op1 "Serlachius" :op2 "Museums"))) :arg2-of (t / total-01)) :arg2 (y / year :quant (o2 / one) :mod (t2 / this))))
(s / score-01 :arg1 (p / person :mod (c / country :name (n / name :op1 "N-A")) :mod (c2 / country :name (n2 / name :op1 "N-A"))) :arg2 (o / ordinal-entity :value 7) :time (a / already) :time (m / minute :ord (o2 / ordinal-entity :value 7)))
(g / group :consist-of (p / person :quant 100 :location (l / location :name (n / name :op1 "Bilbao"))) :mod (f / finnish))
(a / and :op1 (p / positioned :arg0 (p2 / person :arg0-of (h / have-org-role-91 :arg1 (c / city :name (n / name :op1 "Liverpool")) :arg2 (p3 / person :arg0-of (m / manage-01 :arg1 (c2 / city))))) :arg1 (p4 / person :name (n2 / name :op1 "Balotelli")) :arg2 (r / role :poss (p5 / person :name (n3 / name :op1 "Luis" :op2 "Suarez")))) :op2 (t / travelled :arg0 (p6 / person) :arg1 (s / striker :ord (o / ordinal-entity :value 2) :accompanier (p7 / person :name (n4 / name :op1 "Daniel" :op2 "Sturridge")))))
(c / contrast-01 :arg2 (a / and :op1 (c2 / check-01 :arg1 (a2 / area)) :op2 (b / bring-up-02 :arg0 (p / person :arg0-of (i / investigate-01)) :arg1 (s / seismic-quantity :mod (a3 / any) :arg0-of (e / exceed-01 :arg1 (v / value :mod (g / guidelines)))))))
(i / include-91 :arg1 (p / person :name (n / name :op1 "Henry")) :arg2 (p2 / person :quant 1 :arg1-of (b / bear-02 :location (p3 / peninsula :name (n2 / name :op1 "N-A"))) :arg0-of (h / have-rel-role-91 :arg1 (p4 / person) :arg2 (c / child))) :location (p5 / peninsula :name (n3 / name :op1 "N-A")) :location (p6 / peninsula :name (n4 / name :op1 "N-A")))
(h / harping :mode (i / imperative) :arg0 (y / you) :arg1 (c / country :arg0-of (f / force-01 :arg1 (c2 / country) :arg2 (f2 / force :mod (e / essential) :mod (e2 / essential) :poss (c3 / country))) :condition (e3 / event :time (y2 / yesterday))) :condition (e4 / event :topic (e5 / event :mod (a / amr-unknown))) :mod (s / still))
(f / feature-01 :arg0 (u / url-entity :value (p / particulars)) :arg1 (p2 / picture-01 :arg1 (r / room :mod (l / live-01) :arg0-of (i / include-01 :arg1 (p3 / pig) :arg2 (r2 / resting :mod (h / head)) :medium (s / settee :mod (h2 / head))))))
(b / broken :arg1 (p / property :mod (c / commerce)) :location (l / location :name (n / name :op1 "Tikkapurontie")) :time (e / evening :mod (s / sunday)))
(c / contrast-01 :arg1 (b / bring-01 :arg0 (s / school) :arg1 (s2 / sense-01 :arg0 (s3 / school) :arg1 (c2 / community :location (s4 / south :part-of (c3 / country :name (n / name :op1 "Israel")))))) :arg2 (s5 / signal-07 :arg1 (r / remain-01 :arg1 (f / fight-01) :arg3 (f2 / fresh-04))))
(f / faithful :arg0 (p / person :name (n / name :op1 "Eric")) :arg1 (s / style :mod (s2 / shirt) :poss (p2 / person)))
(a / agree-01 :arg0 (a2 / and :op1 (c / country :name (n / name :op1 "Israel")) :op2 (o / organization :name (n2 / name :op1 "Hamas"))) :arg1 (t / truce :mod (o2 / open-ended) :mod (l / last)))
(s / say-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (o / organization :name (n / name :op1 "Grocery" :op2 "Trade" :op3 "Association")) :arg2 (f / finnish)) :arg0-of (h2 / have-org-role-91 :arg1 (o2 / organization :name (n2 / name :op1 "FGTA")) :arg3 (- / -lrb-))) :arg1 (c / continue-01 :arg1 (d / decline-01 :arg1 (t / trade-01 :arg1 (s2 / store :mod (d2 / department)))) :mod (a / also)))
(o / offer-01 :arg0 (c / company) :arg1 (o2 / option :mod (t / transport-01) :arg2-of (i / include-01 :arg1 (a / and :op1 (j / jet :name (n / name :op1 (p / phantom)) :arg1-of (p2 / private-03)) :op2 (p3 / phantom :poss (o3 / organization :name (n2 / name :op1 "Rolls-Royce"))) :op3 (p4 / person :name (n3 / name :op1 "Aston" :op2 "Martin") :arg0-of (h / have-org-role-91 :arg1 (o4 / organization) :arg3 (p5 / phantom))) :op4 (p6 / person :arg0-of (h2 / have-org-role-91 :arg1 (o5 / organization) :arg3 (p7 / phantom)))))) :mod (a2 / also))
(n / note :polarity - :topic (m / meet-03 :time (m2 / meet-03 :arg0 (p / person :name (n2 / name :op1 "Pauli" :op2 "Syyrakki") :arg0-of (h / have-org-role-91 :arg2 (m3 / mayor))))))
(d / do-02 :arg0 (p / person :name (n / name :op1 "Kari" :op2 "Kalin")) :arg1 (s / stretch :mod (s2 / some)) :arg2 (t / teammates :arg0 (p2 / person)) :manner (r / right))
(s / stay-01 :arg1 (o / or :op1 (l / lake) :op2 (l2 / lake) :op3 (t / thing :arg1-of (a / achieve-01 :arg0 (y / you)))) :condition (p / possible-01 :arg1 (s2 / stay-01)))
(m / multi-sentence :snt1 (n / need-01 :arg1 (s / say-01 :arg1 (m2 / more :polarity -))) :snt2 (a / agree-01 :arg0 (w / we)))
(e / event :mod (c / coincidences))
FAILED_TO_PARSE#Failed to parse.
(c / challenging :domain (l / learn-01 :arg1 (l2 / line :poss (h / he)) :arg2 (s / sunshine)))
(r / reeling :arg1 (l / location :name (n / name :op1 "Tinseltown")) :time (a / after :op1 (s / series :consist-of (p / photo) :quant (s2 / series) :arg0-of (s3 / show-01 :arg1 (h / hit-01 :arg0 (p2 / person :name (n2 / name :op1 "Jennifer" :op2 "Lawrence")) :arg1 (i / internet) :arg2 (s4 / scandal :arg1-of (m / major-02) :mod (c / celebrity)))))))
(r / rate-01 :arg1 (c / cameras :quant (s / some)) :arg2 (o / or :op1 (f / foot :quant (o2 / only :op1 5)) :op2 (o3 / other :quant (b / between :op1 50 :op2 60))))
(s / say-01 :arg0 (s2 / state :name (n / name :op1 "Texas")) :arg1 (t / thing :arg1-of (s3 / say-01 :arg0 (p / person :name (n2 / name :op1 "Perry")))))
FAILED_TO_PARSE#Two concepts in a row.
(p / provide-01 :arg0 (c / company :name (n / name :op1 "Areva")) :arg1 (- / -rrb- :arg1-of (u / update-01)) :arg2 (o / organization :name (n2 / name :op1 "Olkiluoto") :arg0-of (h / have-org-role-91 :arg1 (o2 / organization :name (n3 / name :op1 "Olkiluoto")))) :arg3 (s / schedule :arg1-of (u2 / update-01)))
(a / accuse-01 :arg0 (p / person :name (n / name :op1 "George" :op2 "Webster")) :arg1 (a2 / and :op1 (p2 / person :name (n2 / name :op1 "Nairn")) :op2 (h / hotel :mod (p3 / pitlochry))) :arg2 (r / rape-01 :arg1 (a3 / and)))
(f / find-02 :arg0 (a / audit-01 :time (e / early :op1 (y / year :mod (t / this)) :degree (m / more)) :degree (m2 / more)) :arg1 (l / lose-02 :arg1 (m3 / monetary-quantity :quant 700,000 :unit (d / dollar :mod (r / renminbi))) :arg3 (m4 / monetary-quantity :quant 700,000 :unit (d2 / dollar :mod (r2 / renminbi))) :arg3 (m5 / monetary-quantity :quant 700,000 :unit (d3 / dollar :mod (r3 / renminbi)))) :arg1-of (p / pay-01 :arg3 (m6 / monetary-quantity :quant 700,000 :unit (d4 / dollar :mod (r4 / renminbi)) :arg1-of (p2 / pay-01 :arg3 (a2 / and :op1 (p3 / person :arg0-of (w / work-01) :mod (d5 / distance-quantity :quant (N / N-A) :unit (i / inch))) :op2 (p4 / person :arg0-of (w2 / work-01) :mod (o / other) :mod (f2 / finance)))))))
(m / multi-sentence :snt1 (v / viewpoints :mode (i / interrogative)) :snt2 (p / possible-01 :arg1 (e / explain-01 :arg0 (y / you) :arg1 (g / grow-01 :arg1 (g2 / group :mod (f / fan))) :manner (a / amr-unknown)) :degree (t / too)))
(p / person :polarity - :arg0-of (l / live-01 :arg1 (c / council)) :arg1-of (c2 / cause-01 :arg0 (p2 / problem :mod (t / technical))))
(s / say-01 :arg0 (m / media :mod (s2 / some)) :arg1 (m2 / monetary-quantity :arg2-of (p / price-01 :arg1 (p2 / purchase-01))))
(k / keep-01 :arg0 (p / person :name (n / name :op1 "Joan" :op2 "Rivers")) :arg1 (f / family :arg1-of (h / have-org-role-91 :arg0 (p2 / person) :arg2 (m / member))))
(s / say-01 :arg0 (p / person :name (n / name :op1 "Susanna" :op2 "Mälkki")) :arg1 (s2 / start-01 :arg0 (s3 / she) :arg1 (a / and :op1 (h / happy :mod (t / task) :mod (n2 / new) :poss (s4 / she)) :op2 (p2 / pride-01 :arg0 (s5 / she)))))
(r / reminded :arg0 (p / person :name (n / name :op1 "Lavrov")) :arg1 (r2 / respond-01 :arg0 (c / country :name (n2 / name :op1 "Russia")) :arg1 (t / thing :arg2-of (s / sanction-02) :mod (e / economy) :mod (n3 / new))) :mod (a / also))
(m / multi-sentence :snt1 (c / cause-01 :arg0 (a / and :op1 (' / '') :op2 (h / head :part-of (y / you) :mod (t / thick))) :arg1 (i / i) :degree (v / very)) :snt2 (s / say-01 :arg0 (s2 / she) :arg1 (a2 / attract-01 :arg0 (t2 / thing :arg1-of (s3 / say-01 :arg0 (s4 / she))) :arg1 (i2 / i))))
(m / multi-sentence :snt1 (l / launch-01 :arg1 (c / career :mod (t / tv) :poss (h / he)) :location (m2 / mid-seventies :arg1-of (l2 / long-03 :arg2 (t2 / time :arg1-of (l3 / long-03 :degree (q / quite)))))) :snt2 (i / impressionist/comedian :mode (e / expressive) :arg1-of (l4 / long-03 :degree (q2 / quite)) :domain (i2 / i)))
(s / say-01 :arg0 (p / person :name (n / name :op1 "Lawless")) :arg1 (b / begin-01 :arg1 (r / rise-01 :arg1 (l / listing :consist-of (p2 / properties)) :arg3 (s2 / sell-01 :arg1 (p3 / properties) :time (o / over :op1 (f / few :op1 (t / temporal-quantity :quant (N / N-A) :unit (m / month)))) :arg1-of (t2 / test-01 :arg2 (m2 / market) :mod (r2 / real) :mod (r3 / real)))) :time (n2 / now)))
(f / find-01 :arg1 (s / shotguns :mod (s2 / sawn-off)) :location (c / car))
(a / allow-01 :arg0 (t / thing :arg1-of (d / decide-01 :arg0 (g / government-organization :name (n / name :op1 "National" :op2 "People's" :op3 "Congress") :poss (c / country)))) :arg1 (w / weed :arg0 (p / person :arg0-of (l / lead-02) :mod (c2 / communism)) :arg1 (c3 / candidate :mod (a2 / any) :arg1-of (l2 / loyalty :polarity - :arg2 (c4 / city :name (n2 / name :op1 "Beijing"))))) :mod (e / essential))
(c / contrast-01)
(s / say-01 :arg0 (p / person :name (n / name :op1 "Mary" :op2 "Elizabeth" :op3 "Winstead") :arg0-of (h / have-org-role-91 :arg2 (a / actress))) :arg1 (c / confirm-01 :arg0 (a2 / actress) :arg1 (r / real :domain (p2 / photograph-01))))
(s / say-01 :arg0 (n / note :arg1-of (s2 / send-01 :arg2 (c / company :name (n2 / name :op1 "Microsoft") :mod (m / media)))) :arg1 (t / tell-01 :arg0 (r / reason :arg0-of (c2 / cause-01 :arg1 (s3 / security))) :arg1 (l / location :arg2-of (b / be-located-at-91 :arg1 (d / data :poss (i / it) :quant (a / all)))) :arg1-of (c3 / cause-01 :arg0 (r2 / reason :mod (s4 / security)))))
(p / photographer :arg1 (p2 / person :name (n / name :op1 "Seppo" :op2 "Sirkka")) :arg2 (t / tournament :quant 1982 :location (c / country :name (n2 / name :op1 "Argentina"))) :mod (o / only) :arg1-of (c2 / cause-01 :arg0 (a / and :op1 (c3 / coach :mod (s / secondary) :domain (p3 / person :name (n3 / name :op1 "Reino" :op2 "Kosonen") :arg0-of (h / have-org-role-91 :arg2 (l / legendary)))) :op2 (p4 / person :name (n4 / name :op1 "Jouni" :op2 "Parkkali") :arg0-of (h2 / have-org-role-91 :arg2 (a2 / agent))) :op3 (p5 / person :name (n5 / name :op1 "Jouni" :op2 "Parkkali") :arg0-of (h3 / have-org-role-91 :arg2 (a3 / agent) :time (n6 / nowadays))) :op4 (p6 / person :name (n7 / name :op1 "Jouni" :op2 "Parkkali") :arg0-of (h4 / have-org-role-91 :arg2 (a4 / agent) :time (n8 / nowadays))))))
(s / say-01 :arg0 (c / company :name (n / name :op1 "Microsoft")) :arg1 (a / and :op1 (e / equip-01 :arg1 (p / province :name (n2 / name :op1 "N-A")) :arg2 (n3 / network) :degree (f / full) :time (a2 / already)) :op2 (c2 / connect-01 :arg1 (c3 / city) :arg2 (n4 / network))))
(m / multi-sentence :snt1 (p / possible-01 :arg1 (g / get-03 :arg1 (i / it) :arg2 (t / tough-03 :degree (m2 / more)))) :snt2 (p2 / person :name (n / name :op1 "Kosonen")))
(h / have-03 :arg0 (i / i) :arg1 (a / allergy :mod (r / real) :prep-to (p / person :name (n / name :op1 "Shakespeare"))))
(s / slagging :mode (i / imperative) :polarity - :arg0 (y / you) :arg1 (i2 / it) :condition (k / know-01 :polarity - :arg0 (y2 / you) :arg1 (t / thing :arg1-of (t2 / talk-01 :arg0 (y3 / you)))))
(m / multi-sentence :snt1 (c / contrast-01 :arg2 (p / put-01 :arg0 (p2 / person :name (n / name :op1 "Christiane" :op2 "Taubira") :arg0-of (h / have-org-role-91 :arg2 (m2 / minister :mod (j / justice)))) :arg1 (p3 / person :arg0-of (h2 / have-org-role-91 :arg2 (m3 / minister :mod (j2 / justice)))) :arg2 (a / and :op1 (m4 / meet-03 :arg0 (p4 / person) :arg1 (p5 / person :arg0-of (h3 / have-org-role-91 :arg1 (p6 / person :arg0-of (r / rebel-01) :mod (s / socialist) :arg0-of (r2 / rebel-01)) :arg2 (m5 / member)))) :op2 (c2 / criticise :arg0 (p7 / person) :arg1 (p8 / political-party :name (n2 / name :op1 "Socialist" :op2 "Party")) :arg2 (l / let-01 :arg0 (p9 / person) :arg1 (l2 / lose-02 :arg0 (p10 / person :mod (c3 / country)) :arg1 (f / faith :topic (f2 / future :poss (p11 / person))))))))) :snt2 (' / '' :mode (e / expressive)))
(w / want-01 :arg0 (i / i) :arg1 (w2 / watch-01 :arg0 (i2 / i) :arg1 (c / cricket)))
(r / round :quant 7 :domain (g / go-02 :arg4 (l / league :mod (v / veikkausliiga))) :mod (s / still) :arg0-of (c / cause-01 :arg1 (o / obligate-01 :arg1 (c2 / club :location (l2 / location :name (n / name :op1 "Espoo"))) :purpose (a / avoid-01 :arg0 (c3 / club) :arg1 (f / fall-07 :arg1 (c4 / club) :arg2 (d / division :ord (o2 / ordinal-entity :value 1) :ord (o3 / ordinal-entity :value 1)))) :mod (s2 / still))))
(w / warm-07 :degree (m / more) :compared-to (n / normal-02) :arg1-of (c / cause-01 :arg0 (w2 / weather :arg1-of (h / hot-05) :location (a / and :op1 (j / july) :op2 (a2 / august)))))
(c / cause-01 :arg0 (a / amr-unknown) :arg1 (l / love-01 :arg0 (p / person :arg0-of (h / have-rel-role-91 :arg1 (y / you) :arg2 (f / father))) :arg1 (s / something :arg1-of (r / resemble-01 :arg2 (t / that)))))
(o / obligate-01 :arg1 (i / i) :arg2 (g / grow-01 :arg1 (i2 / i) :location (e / eye :arg1-of (p / public-02))) :arg1-of (c / cause-01 :arg0 (o2 / obligate-01 :arg1 (i3 / i) :arg2 (l / learn-01 :arg0 (i4 / i) :arg1 (m / mechanism :arg1-of (e2 / efficient-01 :arg1-of (p2 / possible-01 :polarity -)) :arg1-of (e3 / efficient-01 :arg1-of (p3 / possible-01 :polarity -))))) :arg1-of (c2 / cause-01 :arg0 (a / and :op1 (s / star :domain (i5 / i)) :op2 (d / difficult :domain (s2 / star :prep-on (t / television)))))))
(c / contrast-01 :arg1 (l / look-01 :arg0 (p / person :name (n / name :op1 "Esme" :op2 "Nussbaum")) :arg1 (s / she)) :arg2 (s2 / speak-01 :arg0 (p2 / person :name (n2 / name :op1 "Rabinowitz"))))
(a / and :op1 (f / found-01 :arg1 (p / person :arg0-of (f2 / found-01 :arg1 (p2 / person :quant 1994)))) :op2 (o / oppose-01 :arg0 (p3 / person) :arg1 (a2 / and :op1 (e / employ-01 :polarity -) :op2 (e2 / exclusion) :op3 (p4 / passivity))))
(a / and :op2 (t / tedious :domain (i / it)))
(s / say-01 :arg0 (a / and :op1 (p / person :name (n / name :op1 "Tony" :op2 "Pidgley") :arg0-of (h / have-org-role-91 :arg1 (c / city :name (n2 / name :op1 "Berkeley") :arg0-of (h2 / have-org-role-91 :arg1 (u / upmarket))) :arg2 (c2 / chairman))) :op2 (p2 / person :arg0-of (h3 / have-org-role-91 :arg1 (u2 / upmarket) :arg2 (c3 / chairman))) :op3 (p3 / person :arg0-of (h4 / have-org-role-91 :arg1 (u3 / upmarket) :arg2 (c4 / chairman))) :op4 (p4 / person :arg0-of (h5 / have-org-role-91 :arg1 (o / organization) :arg2 (c5 / chairman))) :op5 (p5 / person :arg0-of (h6 / have-org-role-91 :arg1 (o2 / organization) :arg2 (c6 / chairman))) :op6 (p6 / person :arg0-of (h7 / have-org-role-91 :arg1 (o3 / organization) :arg2 (c7 / chairman))) :op6 (p7 / person :arg0-of (h8 / have-org-role-91 :arg1 (o4 / organization) :arg2 (c8 / chairman))) :op6 (p8 / person :arg0-of (h9 / have-org-role-91 :arg1 (o5 / organization) :arg2 (c9 / chairman))) :op6 (p9 / person :arg0-of (h10 / have-org-role-91 :arg1 (o6 / organization) :arg2 (c10 / chairman))) :op7 (p10 / person :arg0-of (h11 / have-org-role-91 :arg1 (o7 / organization) :arg2 (c11 / chairman)))) :arg1 (o8 / offered :arg0 (m / market) :arg1 (o9 / offer-01 :arg0 (m2 / market) :arg1 (e / environment :arg0-of (o10 / operate-01 :arg1-of (s2 / stable-03)) :arg1-of (s3 / stable-03)))) :time (s4 / since :op1 (s5 / start-01 :arg1 (y / year :mod (f / finance) :mod (f2 / finance)))))
(r / rise-01 :arg1 (m / manipulate-01 :arg1 (b / building :mod (a / apartment) :location (s / suburb :part-of (c / city :name (n / name :op1 "Paris"))))) :arg4 (s2 / score-entity :op1 8 :op2 8))
(c / contrast-01 :arg1 (r / ready-02 :arg1 (p / person :quant (b / bunch) :mod (t / this)) :arg2 (t2 / travelling :arg0 (p2 / person) :arg1 (c2 / championships :mod (g / great)) :purpose (h / have-03 :arg0 (p3 / person) :arg1 (e / experience-01 :mod (g2 / great))))) :arg2 (t3 / think-01 :arg0 (p4 / person) :arg1 (i / interest-01 :arg1 (s / series :mod (d / domestic)) :degree (t4 / too))))
(s / stay-01 :arg1 (o / or :op1 (l / lake) :op2 (l2 / lake) :op3 (t / thing :arg1-of (a / achieve-01 :arg0 (y / you)))) :condition (p / possible-01 :arg1 (s2 / stay-01)))
(m / multi-sentence :snt1 (g / go-01 :arg1 (y / you) :extent (f / far :degree (t / too))) :snt2 (a / and :op1 (g2 / go-02 :arg0 (y2 / you) :arg4 (f2 / far :degree (t2 / too))) :op2 (m2 / mistrust :arg0 (t3 / they) :arg1 (' / '' :arg0 (t4 / they) :arg1 (p / person :mod (o / other) :arg0-of (a2 / anger-01 :arg1 (t5 / they)))))))
(a / and :op1 (o / open-01 :arg1 (l / location :name (n / name :op1 "Gösta" :op2 "Museum") :mod (n2 / new)) :location (j / june)) :op2 (d / display-01 :arg0 (i / it) :arg1 (e / example :arg1-of (w / work-09 :arg2 (a2 / and :op1 (p / person :name (n3 / name :op1 "Andy" :op2 "Warhol")) :op2 (p2 / person :name (n4 / name :op1 "Roy" :op2 "Lichtenstein")))))))
(r / remember-01 :arg0 (i / i) :arg1 (m / match-03) :arg1-of (c / cause-01 :arg0 (p / present :domain (i2 / i))))
(o / occupy-01 :arg0 (c / center :arg1-of (i / include-91 :arg2 (c2 / campaign-01 :arg0-of (f / favor-01 :arg1 (d / democracy)) :location (c3 / city :name (n / name :op1 "Hong" :op2 "Kong")))) :quant (m / much)) :arg1 (m2 / movement-07 :arg1 (a / and :op1 (l / love-01) :op2 (p / peace))) :arg1-of (c4 / cause-01 :arg0 (t / threaten-01 :arg0 (p2 / person :arg0-of (o2 / organize-01)) :arg1 (s / shut-down-05 :arg0 (p3 / person) :arg1 (d2 / district :mod (f2 / finance))) :condition (g / grant-01 :polarity - :arg0 (c5 / city :name (n2 / name :op1 "Beijing")) :arg1 (s2 / suffrage :mod (u / universal) :mod (a2 / authentic))))))
(p / protest-01 :arg0 (p2 / person :arg1-of (o / oppose-01 :arg0 (s / summit :location (m / military :name (n / name :op1 "NATO"))))) :time (o2 / over :op1 (w / weekend)))
(c / come-01 :arg1 (g / guy :mod (g2 / german)) :arg4 (t / there) :time (s / soon :op1 (a / after :op1 (t2 / think-01 :arg0 (w / we) :arg1 (a2 / and :op1 (t3 / thing :arg1-of (d / do-02 :arg0 (g3 / guy) :arg2 (d2 / dog))) :op2 (c2 / carry-01 :arg0 (g4 / guy) :arg1 (a3 / arms :location (a4 / arm :part-of (w2 / we))) :time (w3 / while :op1 (w4 / while)) :arg1-of (t4 / tell-01 :arg0 (p / person :name (n / name :op1 "Soini")))))))))
(a / and :op1 (s / suffer-01 :arg0 (p / party :arg0-of (r / rule-03) :poss (c / country :name (n / name :op1 "France"))) :arg1 (e / elect-01 :location (c2 / city))) :op2 (c3 / come-out-09 :arg1 (o / organization :name (n2 / name :op1 "National" :op2 "Front") :mod (f / far-right)) :arg2 (t / top :location (e2 / elect-01 :mod (o2 / organization :name (n3 / name :op1 "EU"))) :arg1-of (p2 / possible-01))))
(m / multi-sentence :snt1 (c / cause-01 :arg0 (a / ankles :mod (t / thick) :poss (y / you)) :arg1 (a2 / attract-01 :arg0 (y2 / you) :arg1 (y3 / you)) :degree (v / very)) :snt2 (t2 / try-01 :arg0 (h / he) :arg1-of (i / instead-of-91)))
(b / bring-01 :arg0 (r / rise-01) :arg1 (t / thing :arg2-of (g / gain-02 :arg1 (a / and :op1 (j / june) :op2 (j2 / july) :op3 (a2 / august))) :arg2-of (t2 / total-01)) :arg2 (r2 / rate-entity-91 :arg1 (u / under :op1 (b2 / between :op1 (t3 / temporal-quantity :quant (N / N-A) :unit (m / month)) :op2 (t4 / temporal-quantity :quant (N2 / N-A) :unit (m2 / month)))) :arg2 (t5 / temporal-quantity :quant (N3 / N-A) :unit (m3 / month))))
(a / aim-01 :arg1 (c / continue-01 :arg1 (n / negotiate-01 :arg2 (p / pension) :arg1-of (a2 / actual-02)) :time (a3 / after :op1 (t / that))))
(r / reeling :arg1 (l / location :name (n / name :op1 "Tinseltown")) :time (a / after :op1 (s / series :consist-of (p / photo) :quant (s2 / series) :arg0-of (s3 / show-01 :arg1 (h / hit-01 :arg0 (p2 / person :name (n2 / name :op1 "Jennifer" :op2 "Lawrence")) :arg1 (i / internet) :arg2 (s4 / scandal :arg1-of (m / major-02) :mod (c / celebrity)))))))
(l / locate-01 :arg1 (g / gift-01) :location (l2 / location :name (n / name :op1 "Koiskala") :arg1-of (b / be-located-at-91 :arg2 (p / person :name (n2 / name :op1 "Kärkjärvi") :mod (l3 / lake)))))
(a / alternative :mod (i / ideal) :domain (s / service) :beneficiary (p / person :arg0-of (s2 / study-01) :arg0-of (h / have-03 :arg1 (b / belongings :poss (s3 / service)) :path (a2 / across :op1 (c / country)) :location (c2 / car :arg1-of (u / upgrade-02 :manner (d / dangerously))))))
(c / cause-01 :arg0 (e / equipment :arg1-of (r / renew-01)) :arg1 (l / less :compared-to (o / old :domain (e2 / equipment :arg1-of (r2 / renew-01)))) :mod (a / also))
(a / and :op1 (b / be-located-at-91 :arg1 (b2 / boat :prep-with (m / motor :mod (o / outboard))) :arg2 (e / email :mod (o2 / outboard))) :op2 (t / take-01 :arg1 (b3 / boat) :arg3 (b4 / boat)))
(c / content-01 :arg1 (m / man :mod (o / organization :name (n / name :op1 "Dortmund"))) :mod (a / again) :time (n2 / now))
(e / elevates :arg0 (p / person :name (n / name :op1 "Itkonen")) :arg1 (s / sport) :arg2 (p2 / part :part-of (c / culture :mod (p3 / popular))))
(a / address-03 :arg0 (p / person :name (n / name :op1 "Perry")) :arg1 (s / speculate-01) :arg2 (s2 / speculate-01 :arg1 (p2 / possible-01 :arg1 (c / call-01 :arg0 (p3 / person :name (n2 / name :op1 "Perry")) :arg1 (p4 / person) :arg2 (i / infringe-01 :arg1 (p5 / photo :topic (a2 / and :op1 (j / jogging :arg1 (p6 / person) :arg2 (l / lake)) :op2 (w / word :arg1-of (w2 / word-01)))))))) :time (a3 / after :op1 (c2 / campaign-01 :arg0 (p7 / person) :location (p8 / place :ord (o / ordinal-entity :value 5) :part-of (c3 / campaign-01 :arg0 (p9 / person))))))
(m / multi-sentence :snt1 (s / say-01 :arg0 (i / i) :arg1 (v / voice :mod (l / little) :location (i2 / inside :op1 (i3 / i)))) :snt2 (o / obligate-01 :arg1 (y / you) :arg2 (d / do-02 :arg0 (y2 / you) :arg1 (t / temporal-quantity :quant (N / N-A) :unit (m2 / minute)) :time (f / fix-02 :arg0 (y3 / you) :arg1 (c / computer)))))
(i / invest-01 :arg0 (a / apollo) :arg1 (m / monetary-quantity :quant 1 :unit (d / dollar)) :arg2 (m2 / monetary-quantity :quant 1 :unit (d2 / dollar)) :location (c / cruise :name (n / name :op1 (n2 / norwegian) :op2 2008 :op3 (c2 / cruise))))
(a / and :op2 (s / say-01 :arg0 (y / you) :arg1 (h / hate-01 :mode (i / interrogative) :arg0 (y2 / you) :arg1 (i2 / i))))
(c / contrast-01 :arg1 (a / and :op1 (w / weeps :arg0 (w2 / weeps :arg1-of (p / populace)) :arg1 (s / story :topic (o / overcome-01 :arg1 (a2 / and :op1 (m / marry-01) :op2 (l / life :mod (f / family)))))) :op2 (b / believe :arg0 (g / gorges) :arg1 (s2 / story :topic (o2 / overcome-01 :arg1 (a3 / and :op1 (m2 / marry-01) :op2 (f2 / family)))))) :arg2 (r / retain-01 :arg0 (b2 / brutishness :mod (o3 / old)) :arg1 (h / hold-01 :arg1 (c2 / community :mod (r2 / rural)) :location (c3 / community :mod (r3 / rural))) :arg0-of (s3 / suggest-01 :arg1 (a4 / and :op1 (s4 / scope :mod (n / new) :poss (a5 / and :op1 (q / quarrelsomeness :mod (n2 / new)) :op2 (q2 / quarrelsomeness :location (h2 / home))) :location (r4 / road :destination (f3 / field :mod (p2 / play-01 :arg0 (w3 / we))) :mod (e / even)))))))
(a / and :op1 (s / spotted :arg0 (d / dj) :arg1 (h / he) :time (s2 / stage :mod (s3 / stage))) :op2 (w / write-01 :arg0 (i / i) :arg1 (f / face-01 :arg0 (h2 / he) :arg1 (h3 / he) :mod (n / new))))
(t / take-01 :arg0 (s / she) :arg1 (p / picture :mod (t2 / that)) :time (b / before :op1 (n / now) :quant (t3 / temporal-quantity :quant (N / N-A) :unit (y / year))) :accompanier (p2 / person :arg0-of (h / have-rel-role-91 :arg1 (s2 / she) :arg2 (h2 / husband))))
(a / and :op1 (d / describe-01 :arg0 (p / person :name (n / name :op1 "Connells")) :arg1 (h / house :mod (m / meet-03) :time (f / former)) :arg2 (b / bedroom :mod (u / unique :degree (m2 / more :quant 1)))) :op2 (' / '' :arg0 (p2 / person) :arg1 (h2 / house)))
(s / say-01 :arg0 (p / person :name (n / name :op1 "Peskov")) :arg1 (p2 / possible-01 :arg1 (g / grant-01 :arg0 (g2 / government-organization :arg0-of (g3 / govern-01 :arg1 (c / country :name (n2 / name :op1 "N-A")))) :arg1 (r / region :mod (e / east)) :arg2 (c2 / city :arg1-of (n3 / need-01))) :mod (o / only)))
(a / appear-01 :arg1 (p / person :name (n / name :op1 "Henry")) :location (s / sunshine :mod (d / duchess)))
(b / ban-01 :polarity - :arg1 (b2 / ban-01 :arg1 (n / nothing) :mod (e / exact)) :arg1-of (b3 / ban-01) :mod (s / simple))
(e / expect-01 :arg0 (i / i) :arg1 (m / make-01 :arg0 (c / country :name (n / name :op1 "Finland")) :arg1 (i2 / it) :arg2 (r / round :ord (o / ordinal-entity :value 1) :mod (n2 / next))))
(c / continue-01 :arg1 (g / game) :time (s / sudden) :quant (a / all))
(m / multi-sentence :snt2 (c / cause-01 :arg0 (p / possible-01 :arg1 (t / thank-01 :arg0 (p2 / person :arg0-of (h / have-org-role-91 :arg1 (c2 / company :name (n / name :op1 "Facebook")))) :arg1 (p3 / person :arg0-of (h2 / have-org-role-91 :arg1 (c3 / company :name (n2 / name :op1 "Facebook")))))) :arg1 (p4 / possible-01 :arg1 (t2 / thank-01 :arg0 (p5 / person) :arg1 (p6 / person) :degree (m2 / more :time (o / once))))) :snt1 (l / look-01 :mode (i / interrogative) :arg0 (p7 / person :mod (i2 / international)) :arg1 (p8 / person) :mod (s / still)))
(c / contrast-01 :arg2 (o / obligate-01 :arg1 (p / person :name (n / name :op1 "Henry")) :arg2 (w / work-01 :arg0 (p2 / person) :manner (d / difficult :mod (d2 / difficult :mod (s / some))))))
(m / multi-sentence :snt1 (t / think-01 :arg0 (i / i) :arg1 (c / change-01 :arg1 (t2 / thing :quant 1 :arg1-of (t3 / think-01 :arg0 (i2 / i))))) :snt2 (c2 / change-01 :arg0 (y / you) :arg1 (o / oh :mode (e / expressive))))
(l / location :mod (g / good) :domain (p / park :mod (f / friendship)) :arg1-of (c / cause-01 :arg0 (p2 / possible-01 :arg1 (e / expand-01 :arg1 (a / activity-06 :arg0 (p3 / park)) :purpose (e2 / exemplify-01 :arg0 (a2 / area :location (l2 / location :name (n / name :op1 "Ounaspaviljonki"))))))))
(s / stipulate-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (g / government-organization :name (n / name :op1 "Kremlin")) :arg2 (s2 / spokesman))) :arg1 (a / and :op1 (a2 / approach-02 :arg0 (p2 / person :arg0-of (l / lead-02 :arg1 (c / country :name (n2 / name :op1 "N-A")))) :arg1 (d / deal-01 :arg0 (p3 / person) :arg2 (r / rebel-01 :arg0 (p4 / person) :arg1 (r2 / rebel-01 :arg0 (s3 / separatist)) :location (e / east)) :manner (d2 / differ-02))) :op2 (l2 / location :location-of (s4 / seize-01 :arg0 (p5 / person :quant (m / majority) :arg1-of (i / include-91 :arg2 (p6 / population :quant 2000000 :mod (e2 / ethnic)))) :arg1 (p7 / person)))))
(s / say-01 :arg0 (p / person :name (n / name :op1 "Putin")) :arg1 (a / and :op1 (b / believe-01 :arg0 (a2 / anyone :arg0-of (b2 / believe-01 :arg1 (p2 / peace))) :arg1 (t / talk-01 :arg1 (p3 / peace))) :op2 (c / contrast-01 :arg1 (a3 / attack-01 :arg0 (p4 / person :arg0-of (h / have-org-role-91 :arg1 (g / government-organization :arg0-of (g2 / govern-01)) :arg2 (t2 / troop))) :arg1 (c2 / community :mod (c3 / civilian)) :time (d / date-entity :month (O / Oct.) :day 26)) :arg2 (a4 / attack-01 :arg0 (p5 / person :arg0-of (h2 / have-org-role-91 :arg1 (g3 / government-organization :arg0-of (g4 / govern-01)) :arg2 (t3 / troop))) :arg1 (c4 / community :mod (c5 / civilian)) :location (r / region :mod (s2 / separatist-held))))))
(s / state-01 :arg1 (t / thing :arg1-of (p / perform-01)) :frequency (o / often) :medium (s2 / society))
(s / suggest-01 :arg0 (p / person :arg1-of (r / resemble-01 :arg2 (p2 / person :name (n / name :op1 "Ingrid" :op2 "Bracey") :arg0-of (h / have-org-role-91 :arg1 (o / organization :name (n2 / name :op1 "University" :op2 "of" :op3 "Massachusetts" :op4 "at" :op5 "Amherst" :op6 "'s" :op7 "College" :op8 "Without" :op9 "Walls")) :arg2 (d / director)))) :arg0-of (h2 / have-org-role-91 :arg1 (o2 / organization :name (n3 / name :op1 "University" :op2 "of" :op3 "Massachusetts" :op4 "at" :op5 "Amherst" :op6 "'s" :op7 "College" :op8 "Without" :op9 "Walls")) :arg2 (d2 / director))) :arg1 (c / check-01 :arg0 (p3 / person) :arg2 (p4 / person :arg0-of (h3 / have-org-role-91 :arg2 (p5 / professor :poss (p6 / person)))) :purpose (s2 / see-01 :arg0 (p7 / person) :condition (a / accept-01 :arg1 (e / edition :time (p8 / previous))))))
(p / possible-01 :arg1 (t / try-01 :arg1 (p2 / predict-01 :arg1 (a / affect-01 :arg0 (t2 / thing :arg1-of (e / effect-03)) :arg1 (t3 / thing :arg1-of (e2 / effect-03)) :time (s / stay-01 :arg1 (a2 / and :op1 (s2 / space :arg1-of (r / resemble-01)) :op2 (t4 / thing :arg1-of (e3 / explain-01 :arg0 (s3 / statesman)) :mod (n / new))))))) :manner (c / cause-01 :arg0 (e4 / effect) :arg1 (p3 / possible-01 :arg1 (p4 / predict-01 :arg1 (a3 / affect-01 :arg1 (t5 / thing :arg1-of (e5 / effect-03)))))))
(g / go-02 :arg0 (p / person :arg0-of (h / have-rel-role-91 :arg1 (c / child :arg0-of (h2 / have-rel-role-91 :arg1 (c2 / child :mod (i / israeli)) :arg2 (c3 / child))) :location (a / area :arg1-of (n / near-02 :arg2 (w / world-region))))) :arg4 (s / school) :time (a2 / after :op1 (s2 / spend-02 :arg0 (p2 / person) :arg1 (a3 / and :op1 (t / temporal-quantity :quant (N / N-A) :unit (y / year)) :op2 (t2 / temporal-quantity :quant (N2 / N-A) :unit (y2 / year))) :location (c4 / community :poss (p3 / person)) :time (w2 / war-01 :arg0 (p4 / person) :arg1 (c5 / community :poss (p5 / person)) :time (w3 / war-01 :arg0 (p6 / person) :arg1 (c6 / community :poss (p7 / person)) :time (w4 / war-01 :arg0 (p8 / person) :arg1 (c7 / community :poss (p9 / person)) :time (d / during :op1 (w5 / war))))))) :time (d2 / during :op1 (r / recover-01 :arg1 (f / fight-01 :arg2 (f2 / fight-01 :arg2 (f3 / fight-01))))))
(a / and :op1 (r / rowboat :domain (b / boat) :mod (k / kalapalta)) :op2 (c / coloured :arg1 (b2 / boat) :location (i / inside :op1 (i2 / inside))) :op3 (y / yellowish :arg1 (b3 / boat) :location (i3 / inside)))
(a / and :op1 (t / trekkers :quant 2 :purpose (w / walk-01 :arg0 (t2 / they))) :op2 (r / ready-02 :arg1 (t3 / they) :arg2 (h / help-01 :arg0 (t4 / they) :arg1 (a2 / and :op1 (p / person :name (n / name :op1 "Antti" :op2 "Soini")) :op2 (p2 / person :name (n2 / name :op1 "Tuomo") :arg0-of (h2 / have-rel-role-91 :arg1 (p3 / person) :arg2 (f / father)))) :arg2 (t5 / treaty :name (n3 / name :op1 "N-A")))) :manner (l / lucky))
(a / and :op1 (t / trouble-filled :arg1 (s / sell-01 :arg1 (a2 / and :op1 (h / home) :op2 (l / leisure))) :degree (m / most)) :op2 (f / fall-01 :arg1 (t2 / turnover :poss (s2 / sell-01)) :arg2 (p / percentage-entity :value (N / N-A)) :time (y / year :mod (l2 / last))))
(s / set-02 :arg0 (p / person :name (n / name :op1 "Charles" :op2 "Macnair") :arg0-of (h / have-org-role-91 :arg2 (s2 / sheriff))) :arg1 (d / date :mod (t / try-02)) :time (d2 / date-entity :season (N / N-A)))
(a / and :op1 (b / bear-02 :arg1 (p / person :name (n / name :op1 "Bottas")) :location (l / location :name (n2 / name :op1 "Nastola"))) :op2 (d / differ-02 :arg1 (s / situation :poss (p2 / person))) :op3 (b2 / believe-01 :arg0 (p3 / person) :arg1 (s2 / stay-01 :arg1 (p4 / person) :location (h / home :poss (p5 / person) :mod (h2 / home)))))
(h / have-purpose-91 :arg1 (s / seminar :mod (e / economy)) :arg2 (s2 / search-01 :arg1 (m / mean :mod (n / new)) :purpose (b / balance-01 :arg1 (e2 / economy))))
(m / multi-sentence :snt2 (b / be-located-at-91 :arg1 (a / area-quantity :quant (N / N-A) :unit (h / hectare) :quant (n / nearly :op1 1.5) :location (l / lake)) :arg2 (l2 / lake) :location (l3 / lake)))
(c / challenging :domain (l / learn-01 :arg1 (l2 / line :poss (h / he)) :arg2 (s / sunshine)))
(m / multi-sentence :snt1 (c / contrast-01 :arg1 (g / good :domain (s / struggle-01)) :arg2 (g2 / good :domain (s2 / struggle-01))) :snt2 (s3 / say-01 :arg0 (p / person :name (n / name :op1 "Teemu" :op2 "Mäkikyrö") :arg0-of (h / have-org-role-91 :arg2 (c2 / coach))) :arg1 (g3 / good :degree (m2 / more :degree (b / bit)) :domain (s4 / struggle-01))))
(e / estimate-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg2 (a / authority))) :arg1 (o / or :op1 (t / travelled :arg1 (o2 / or :op1 (c / citizen :mod (c2 / country :name (n / name :op1 "France"))) :op2 (p2 / person :prep-with (r / residence :location (c3 / country)))) :arg2 (c4 / country :name (n2 / name :op1 "Syria")) :time (l / late :degree (m / most))) :op2 (r2 / return-01 :arg1 (o3 / or) :arg4 (t2 / there)) :op3 (p3 / plan-01 :arg1 (g / go-02 :arg0 (o4 / or) :arg4 (t3 / there)) :time (c5 / current))))
(a / alternative :mod (i / ideal) :domain (s / service) :beneficiary (p / person :arg0-of (s2 / study-01) :arg0-of (h / have-03 :arg1 (b / belongings :poss (s3 / service)) :path (a2 / across :op1 (c / country)) :location (c2 / car :arg1-of (u / upgrade-02 :manner (d / dangerously))))))
(a / and :op1 (c / contact-01 :arg0 (a2 / authority) :arg1 (a3 / authority)) :op2 (p / prosecute-01 :arg0 (a4 / authority) :arg1 (a5 / anyone :arg0-of (p2 / post-01 :arg1 (p3 / photograph-01 :arg0 (p4 / person :name (n / name :op1 "Jennifer" :op2 "Lawrence")) :arg1-of (s / steal-01))))))
(e / equal-01 :arg2 7.1 :arg1 (p / profit-01))
FAILED_TO_PARSE#Two concepts in a row.
(s / seem-01 :arg1 (w / win-01 :arg0 (p / person :name (n / name :op1 "Lidl")) :arg1 (o / over :op1 (c / chain :consist-of (s2 / supermarket)))) :arg2 (p2 / person :arg0-of (b / believe-01 :arg1 (f / figure :arg1-of (p3 / profit-01))) :mod (a / at-least)) :time (d / date-entity :year 2014 :month (S / Sep)))
(t / think-01 :polarity - :arg0 (i / i) :arg1 (w / want-01 :arg0 (i2 / i) :arg1 (g / give-up-07 :arg0 (i3 / i) :arg1 (t2 / that)) :time (e / ever)) :arg1-of (c / cause-01 :arg0 (s / sit-01 :arg1 (t3 / thing :arg2-of (t4 / tattoo-01 :arg1 (s2 / sit-01 :arg2 (r / room :prep-with (p / person :arg0-of (h / have-org-role-91 :arg2 (d / director)))) :arg0-of (h2 / have-org-role-91 :arg2 (d2 / director))))) :arg2 (d3 / director))))
(t / take-01 :arg0 (s / she) :arg1 (p / picture :mod (t2 / that)) :time (b / before :op1 (n / now) :quant (t3 / temporal-quantity :quant (N / N-A) :unit (y / year))) :accompanier (p2 / person :arg0-of (h / have-rel-role-91 :arg1 (s2 / she) :arg2 (h2 / husband))))
(s / say-01 :arg0 (p / person :name (n / name :op1 "Megan" :op2 "Dunn") :arg0-of (h / have-org-role-91 :arg1 (o / organization :name (n2 / name :op1 "NUS")) :arg2 (p2 / president :mod (v / vice)))) :arg1 (s2 / seem-01 :arg1 (t / touch-01 :arg0 (s3 / scheme :mod (t2 / this)) :arg1 (l / life :poss (p3 / person :arg0-of (s4 / study-01)) :quant (m / majority))) :degree (i / incredible)))
(s / say-01 :arg0 (c / company :name (n / name :op1 "Microsoft")) :arg1 (a / and :op1 (e / equip-01 :arg1 (p / province :name (n2 / name :op1 "N-A")) :arg2 (n3 / network) :degree (f / full) :time (a2 / already)) :op2 (c2 / connect-01 :arg1 (c3 / city) :arg2 (n4 / network))))
(h / have-03 :arg0 (p / person :mod (c / country :name (n / name :op1 "N-A"))) :arg1 (b / between :op1 7,500-10 :op2 7,500-10))
(m / move-01 :arg1 (p / person :name (n / name :op1 "Lopez")) :arg2 (o / organization :name (n2 / name :op1 "Real" :op2 "Madrid")) :arg3 (o2 / organization :name (n3 / name :op1 "Real" :op2 "Madrid")) :time (s / season :mod (t / this)))
(s / send-01 :arg0 (i / i) :arg1 (i2 / it) :arg2 (c / contest))
(c / contrast-01 :arg1 (r / reply-01 :arg0 (p / person :name (n / name :op1 "Soinis")) :arg1 (s / sunday :arg0 (p2 / person) :arg1 (s2 / she))) :arg2 (r2 / reach-01 :arg1 (m / man :mod (g / german) :mod (g2 / german)) :time (y / yet)))
(i / include-91 :arg3 1 :arg1 (t / thing :arg0-of (k / kill-01 :arg1 (s / she))) :arg2 (i2 / it))
(o / offer-01 :arg0 (c / company) :arg1 (o2 / option :mod (t / transport-01) :arg2-of (i / include-01 :arg1 (a / and :op1 (j / jet :name (n / name :op1 (p / phantom)) :arg1-of (p2 / private-03)) :op2 (p3 / phantom :poss (o3 / organization :name (n2 / name :op1 "Rolls-Royce"))) :op3 (p4 / person :name (n3 / name :op1 "Aston" :op2 "Martin") :arg0-of (h / have-org-role-91 :arg1 (o4 / organization) :arg3 (p5 / phantom))) :op4 (p6 / person :arg0-of (h2 / have-org-role-91 :arg1 (o5 / organization) :arg3 (p7 / phantom)))))) :mod (a2 / also))
(a / and :op1 (t / think-01 :arg0 (i / i) :arg1 (b / be-located-at-91 :arg1 (i2 / i) :arg2 (u / under :op1 (v / value-interval :op1 18 :op2 25)))) :op2 (l / lose-02 :arg0 (i3 / i) :arg1 (c / capable-01 :arg1 (i4 / i) :quant (a2 / all)) :manner (g / gradual)))
(f / fall-01 :arg1 (i / improvisation) :arg2 (d / down-03 :arg1 (i2 / improvisation)))
(f / follow-01 :arg1 (a / authority :mod (c / country :name (n / name :op1 "N-A"))) :arg2 (a2 / action :mod (m / man?s)) :time (a3 / already) :time (a4 / already))
(m / multi-sentence :snt1 (w / win-01 :arg0 (p / person :name (n / name :op1 "Croze")) :arg1 (a / award :name (n2 / name :op1 "N-A")) :arg2 (a2 / actress :mod (g / good :degree (m2 / most)) :location (f / festival :quant 2003 :name (n3 / name :op1 (c / cannes))))) :snt2 (i / invade-01 :arg0 (i2 / invade-01 :mod (b / barbarians))))
(i / include-91 :arg1 (t / thing :arg2-of (r / request-01) :arg1-of (h / high-02 :degree (m / more))) :arg2 (l / list-01 :arg1 (r2 / request-01) :arg1-of (c / cause-01 :arg0 (d / discuss-01 :arg1 (p / person :name (n / name :op1 "Hristo" :op2 "Ivanov") :arg0-of (h2 / have-org-role-91 :arg2 (m2 / minister :mod (j / justice :mod (i2 / interim)))))))) :mod (a / also))
(p / protest-01 :arg0 (p2 / person :name (n / name :op1 "Esme")) :arg1 (r / right-05 :arg1 (p3 / person) :arg2 (a / and :op1 (p4 / privacy) :op2 (a2 / amusement-park :name (n2 / name :op1 "N-A")))) :mod (a3 / again))
(c / contrast-01 :arg2 (o / obligate-01 :arg1 (p / person :name (n / name :op1 "Henry")) :arg2 (w / work-01 :arg0 (p2 / person) :manner (d / difficult :mod (d2 / difficult :mod (s / some))))))
(a / and :op1 (f / feel-01 :arg0 (h / he) :arg1 (s / sorry-01 :arg1 (s2 / she) :arg2 (s3 / she))) :op2 (f2 / fear-01 :arg0 (h2 / he) :arg1 (a2 / and :op1 (a3 / account-01 :arg0 (t / thing :arg1-of (w / word-01 :arg0 (h3 / he))) :arg1 (t2 / thing :arg1-of (w2 / word-01 :arg0 (h4 / he)))) :op2 (f3 / fear-01 :arg0 (h5 / he) :arg1 (e / eye :part-of (s4 / she)) :time (m / moment :mod (s5 / standing :poss (s6 / she))) :beneficiary (h6 / he)))))
(c / contrast-01 :arg2 (e / event :location (c2 / country :name (n / name :op1 "Poland"))))
(m / multi-sentence :snt1 (c / contrast-01 :arg2 (o / obligate-01 :arg1 (y / you) :arg2 (a / adapt-01 :arg0 (y2 / you) :arg1 (y3 / you) :arg2 (e / everything)))) :snt2 (s / say-01 :arg0 (p / person :name (n / name :op1 "Viitala")) :time (a2 / after :op1 (d / defeat-01 :quant (1 / 1-2)))))
(i / infer-01 :arg1 (i2 / incarnation :mode (i3 / interrogative) :mod (n / new) :poss (h / he) :domain (t / this)))
(r / run-01 :arg0 (m / media :arg1-of (r2 / run-01 :arg0 (s / state))) :arg1 (p / person :arg0-of (h / have-org-role-91 :arg2 (a / activist :mod (d / democracy)))) :arg3 (p2 / person :arg0-of (h2 / have-org-role-91 :arg2 (a2 / activist :mod (d2 / democracy)))) :arg3 (p3 / person :arg0-of (h3 / have-org-role-91 :arg2 (a3 / agent :mod (d3 / democracy))) :arg1-of (d4 / direct-01 :arg0 (p4 / power :mod (w / west)))) :time (d5 / day :time (r3 / recent)) :mod (a4 / also))
(i / identify-01 :arg0 (r / report :name (n / name :op1 (h / hta))) :arg1 (p / period :mod (b / between :op1 (t / temporal-quantity :quant (N / N-A) :unit (y / year)) :op2 (t2 / temporal-quantity :quant (N2 / N-A) :unit (y2 / year)))) :prep-as (r2 / result-01 :arg1 (i2 / increase-01 :arg1 (a / and :op1 (o / own-01 :arg1 (h2 / home)) :op2 (p2 / prosper-01 :mod (e / economy))) :arg2 (a2 / and :op1 (o2 / own-01 :arg1 (h3 / home)) :op2 (p3 / prosper-01 :arg0 (p4 / person :quant (1 / 1980s)))))))
(a / and :op2 (i / include-91 :arg1 (t / they) :arg2 (t2 / they :quant (l / lot))))
(h / have-concession-91 :arg2 (r / reach-01 :arg0 (h2 / he) :arg1 (a / age-01 :arg1 (p / person :arg0-of (h3 / have-rel-role-91 :arg1 (p2 / person :name (n / name :op1 "Sammy" :op2 "Davis" :op3 "Junior")) :arg2 (f / father :mod (j / jazz)))) :arg2 (c / collection :mod (o / old) :poss (p3 / person :arg0-of (h4 / have-rel-role-91 :arg1 (p4 / person) :arg2 (f2 / father)))))))
(g / go-02 :arg0 (p / person :name (n / name :op1 "Lars" :op2 "von" :op3 "Trier") :arg0-of (h / have-org-role-91 :arg2 (d / director :mod (f / film)))) :arg4 (b / back) :purpose (m / make-01 :arg0 (p2 / person) :arg1 (s / series :mod (t / tv))))
(r / rented :arg0 (p / provide-01 :arg1 (l / license-01 :arg1 (e / electronics)) :arg2 (p2 / person :arg0-of (d / distribute-01) :example (a / and :op1 (o / organization :name (n / name :op1 "Amazon.com")) :op2 (c / country :name (n2 / name :op1 "N-A")) :op3 (o2 / organization :name (n3 / name :op1 "Barnes" :op2 "&" :op3 "Noble" :op4 "Inc"))))) :arg1 (b / book :mod (t / that) :frequency (s / sometimes)) :mod (e2 / essential) :frequency (s2 / sometimes))
(a / and :op1 (t / trouble-filled :arg1 (s / sell-01 :arg1 (a2 / and :op1 (h / home) :op2 (l / leisure))) :degree (m / most)) :op2 (f / fall-01 :arg1 (t2 / turnover :poss (s2 / sell-01)) :arg2 (p / percentage-entity :value (N / N-A)) :time (y / year :mod (l2 / last))))
(a / and :op1 (t / thing :arg1-of (s / same-01 :arg2 (t2 / thing :mod (v / vast :mod (v2 / vast))))) :op2 (t3 / thing :arg1-of (a2 / achieve-01 :location (t4 / they :mod (b / both)))))
(a / and :op1 (t / trekkers :quant 2 :purpose (w / walk-01 :arg0 (t2 / they))) :op2 (r / ready-02 :arg1 (t3 / they) :arg2 (h / help-01 :arg0 (t4 / they) :arg1 (a2 / and :op1 (p / person :name (n / name :op1 "Antti" :op2 "Soini")) :op2 (p2 / person :name (n2 / name :op1 "Tuomo") :arg0-of (h2 / have-rel-role-91 :arg1 (p3 / person) :arg2 (f / father)))) :arg2 (t5 / treaty :name (n3 / name :op1 "N-A")))) :manner (l / lucky))
(c / contrast-01 :arg1 (a / and :op1 (j / journalist) :op2 (p / person :arg0-of (h / have-rel-role-91 :arg2 (r / relative))) :op3 (p2 / person :arg0-of (h2 / have-rel-role-91 :arg2 (r2 / relative)))) :arg2 (f / fan :mod (a2 / also)) :location (l / location :name (n / name :op1 "Bilbao")))
(l / listen-01 :mode (i / imperative) :arg0 (y / you) :arg1 (a / and :op1 (p / person :arg0-of (h / have-rel-role-91 :arg1 (y2 / you) :arg2 (g / girlfriend))) :op2 (p2 / person :arg0-of (h2 / have-rel-role-91 :arg1 (y3 / you) :arg2 (s / spouse))) :op3 (p3 / person :arg0-of (h3 / have-rel-role-91 :arg1 (y4 / you) :arg2 (s2 / spouse))) :op4 (p4 / person :arg0-of (h4 / have-rel-role-91 :arg1 (y5 / you) :arg2 (s3 / spouse))) :op5 (p5 / person :arg0-of (h5 / have-rel-role-91 :arg1 (y6 / you) :arg2 (s4 / spouse))) :op6 (p6 / person :arg0-of (l2 / listen-01 :arg1 (y7 / you))) :op6 (l3 / listen-01 :arg0 (p7 / person)) :op7 (l4 / listen-01 :arg0 (p8 / person)) :op8 (l5 / listen-01 :arg0 (p9 / person)) :op8 (l6 / listen-01 :arg0 (p10 / person)) :op8 (l7 / listen-01 :arg0 (p11 / person)) :op8 (a2 / apologize-01 :arg0 (p12 / person)) :op8 (a3 / apologize-01 :arg0 (p13 / person)) :op8 (a4 / apologize-01 :arg0 (p14 / person)) :op8 (a5 / apologize-01 :arg0 (p15 / person)) :op8 (e / et-cetera)))
(s / start-01 :arg0 (e / event) :arg1 (p / presentation :poss (o / organization :name (n / name :op1 "Nelonen" :op2 "Media") :arg1-of (h / host-01 :arg0 (p2 / person :name (n2 / name :op1 "Sebastian" :op2 "Rejman"))))))
(c / contrast-01 :arg1 (l / look-01 :arg0 (p / person :name (n / name :op1 "Esme" :op2 "Nussbaum")) :arg1 (s / she)) :arg2 (s2 / speak-01 :arg0 (p2 / person :name (n2 / name :op1 "Rabinowitz"))))
(h / have-03 :arg0 (p / person :name (n / name :op1 "Mr" :op2 "Hollande")) :arg1 (s / socialists :mod (f / fellow) :poss (p2 / person)) :purpose (r / remain-01 :arg1 (p3 / person) :arg3 (' / '' :arg0 (p4 / person) :arg1 (g / government-organization :arg0-of (g2 / govern-01)))) :time (d / date-entity :dayperiod (N / N-A)))
(g / great :domain (p / possible-01 :arg1 (s / succeed-01 :arg0 (y / you) :prep-with (p2 / photograph-01 :mod (o / other))) :time (n / nowadays) :arg1-of (c / cause-01 :arg0 (a / as-long-as :op1 (h / have-03 :arg0 (y2 / you) :arg1 (a2 / and :op1 (i / idea :mod (s2 / some)) :op2 (t / twist :mod (v / visual)) :location (t2 / they)))))))
(b / be-located-at-91 :arg1 (n / night :mod (b2 / between :op1 (s / sunday) :op2 (m / monday))) :arg2 (w / way :poss (t / they) :direction (h / home)) :time (a / already))
(i / inhabit-01 :arg0 (p / person :arg0-of (i2 / inhabit-01) :quant (a / approximately :op1 11,000)) :location (l / location :name (n / name :op1 "Mänttä-Vilppula")) :arg1-of (c / cause-01 :arg0 (b / between :op1 (l2 / location :name (n2 / name :op1 "Tampere")) :op2 (p2 / person :name (n3 / name :op1 "Jyväskylä")))))
(l / like-01 :arg0 (n / nobody) :arg1 (e / eat-01 :arg1 (c / carrots)))
(m / multi-sentence :snt1 (f / fortunate-01 :polarity - :arg1 (h / have-03 :arg0 (y / you) :arg1 (t / tendency :arg1-of (f2 / fortunate-01 :polarity -)) :arg2 (o / overwrite))) :snt2 (s / say-01 :arg0 (s2 / supervisor :poss (s3 / she)) :time (r / read-01 :arg0 (h2 / he) :arg1 (r2 / report :mod (w / whole)))))
(h / have-03 :arg0 (s / sociologists :mod (s2 / sports)) :arg1 (t / time :arg1-of (h2 / hard-04)) :frequency (t2 / time :arg1-of (h3 / hard-04)))
(a / and :op1 (d / die-01 :arg1 (p / person :arg0-of (h / have-rel-role-91 :arg1 (h2 / he) :arg2 (f / father)))) :op2 (w / work-01 :arg0 (p2 / person) :location (f2 / factory)) :op3 (l / limit-01 :arg1 (r / relation-03 :arg0 (p3 / person))))
(a / and :op1 (k / known :domain (s / she) :location (i / international)) :op2 (r / receive-01 :arg0 (s2 / she) :arg1 (m / medal :name (n / name :op1 (f / finlandia) :op2 (m2 / medal) :op3 (m3 / medal)))))
(m / move-01 :arg1 (p / person :name (n / name :op1 "Lopez")) :arg2 (o / organization :name (n2 / name :op1 "Real" :op2 "Madrid")) :arg3 (o2 / organization :name (n3 / name :op1 "Real" :op2 "Madrid")) :time (s / season :mod (t / this)))
(h / have-concession-91 :arg1 (a / appear-02 :arg1 (m / material :mod (c / color)) :mod (s / still)) :arg2 (r / remove-01 :arg0 (a2 / agency) :arg1 (i / image) :arg2 (w / website :poss (a3 / agency))))
(l / late :domain (p / project) :time (l2 / late :op1 (t / temporal-quantity :quant (N / N-A) :unit (y / year))) :time (n / now))
(r / rise-01 :arg1 (p / profit-01 :arg0 (p2 / person :mod (u / ultra))) :arg2 (r2 / rate-entity-91 :arg1 40 :arg2 (t / temporal-quantity :quant (N / N-A) :unit (y / year))) :arg4 (r3 / rate-entity-91 :arg1 (m / monetary-quantity :quant (3 / 380m) :unit (p3 / pound)) :arg2 (t2 / temporal-quantity :quant (N2 / N-A) :unit (y2 / year))) :arg4 (r4 / rate-entity-91 :arg1 (m2 / monetary-quantity :quant (32 / 380m) :unit (p4 / pound)) :arg2 (t3 / temporal-quantity :quant (N3 / N-A) :unit (y3 / year))) :arg4 (r5 / rate-entity-91 :arg1 (m3 / monetary-quantity :quant (33 / 380m) :unit (p5 / pound)) :arg2 (t4 / temporal-quantity :quant (N4 / N-A) :unit (y4 / year))))
(e / estimate-01 :arg0 (p / person :name (n / name :op1 "Sivonen")) :arg1 (c / close-10 :arg1 (a / amount :quant-of (p2 / person :arg0-of (v / visit-01) :location (o / organization :name (n2 / name :op1 "Serlachius" :op2 "Museums"))) :arg2-of (t / total-01)) :arg2 (y / year :quant (o2 / one) :mod (t2 / this))))
(p / possible-01 :arg1 (w / watch-01 :arg1 (l / live-01 :location (c / company :name (n / name :op1 "N-A") :ord (o / ordinal-entity :value 13)))) :time (t / time :mod (n2 / next)))
FAILED_TO_PARSE#Two concepts in a row.
(p / participate-01 :arg0 (a / and :op1 (p2 / person :mod (m / male) :mod (m2 / male) :mod (m3 / male)) :op2 (p3 / person :quant 4 :mod (f / female))) :arg1 (e / experiment-01))
(a / and :op1 (b / become-01 :arg1 (v / video) :arg2 (p / popular-02 :arg1 (v2 / video) :arg2 (c / company :name (n / name :op1 "Facebook")) :degree (v3 / very))) :op2 (s / share-01 :arg1 (v4 / video) :location (c2 / company) :frequency (t / time :quant 10000)))
(r / resemble-01 :arg1 (a / approach-02 :arg0 (a2 / and :op1 (o / outlets :mod (o2 / online)) :op2 (a3 / approach-02 :mod (c / creative)))) :arg2 (i / increase-01 :arg1 (t / thing :arg1-of (c2 / choose-01 :arg0 (p / person :name (n / name :op1 "Schroeder")))) :arg3 (p2 / person :arg0-of (s / study-01))))
(a / and :op1 (i / include-91 :arg1 (a2 / and :op1 (p / person :arg0-of (h / have-org-role-91 :arg1 (c / country :name (n / name :op1 "N-A")) :arg2 (s / setter))) :op2 (p2 / person :name (n2 / name :op1 "Hillaelina" :op2 "Hämäläinen") :arg0-of (h2 / have-org-role-91 :arg2 (l / libero)))) :arg2 (g / good :degree (m / most))) :op2 (t / try-01 :arg0 (p3 / person) :arg1 (a3 / avoid-01 :arg0 (p4 / person) :arg1 (p5 / possible-01 :arg1 (a4 / avoid-01) :degree (e / equal) :compared-to (p6 / possible-01 :arg1 (a5 / avoid-01))))))
(p / publish-01 :arg1 (p2 / position :mod (o / other) :arg1-of (p3 / publish-01 :time (c / contest))))
(t / tell-01 :arg0 (p / person :name (n / name :op1 "Mikkelsen")) :arg1 (h / hurt-01 :arg0 (d / dog :arg0-of (h2 / have-rel-role-91 :arg1 (s / she) :arg2 (d2 / dd1))) :arg1 (p2 / person :arg0-of (h3 / have-rel-role-91 :arg1 (p3 / person) :arg2 (d3 / dd1))) :location (m / mountain :location (m2 / mountain :location (t2 / thursday)))) :arg2 (h4 / hurt-01 :arg0 (p4 / person) :arg1 (p5 / paw :poss (p6 / person))))
(a / and :op1 (g / guilty-01 :polarity - :arg1 (p / person :name (n / name :op1 "Perry")) :arg2 (g2 / guilty-01 :polarity - :arg1 (p2 / person))) :op2 (c / call-01 :arg0 (p3 / person) :arg1 (e / event :name (n2 / name :op1 "N-A") :mod (p4 / politics)) :arg2 (c2 / charge-05)))
(s / say-01 :arg0 (p / person :arg0-of (p2 / prosecute-01)) :arg1 (g / go-02 :arg0 (m / man) :arg4 (a / apartment) :accompanier (a2 / and :op1 (p3 / person :arg0-of (h / have-rel-role-91 :arg1 (m2 / man) :arg2 (p4 / partner))) :op2 (p5 / person :arg0-of (h2 / have-rel-role-91 :arg1 (m3 / man) :arg2 (c / child))) :op3 (p6 / person :arg0-of (h3 / have-rel-role-91 :arg1 (m4 / man) :arg2 (c2 / child))) :op4 (p7 / person :arg0-of (h4 / have-rel-role-91 :arg1 (m5 / man) :arg2 (c3 / child))) :op5 (p8 / person :arg0-of (h5 / have-rel-role-91 :arg1 (m6 / man) :arg2 (c4 / child))) :op6 (p9 / person :arg0-of (h6 / have-rel-role-91 :arg1 (m7 / man) :arg2 (c5 / child))) :op7 (p10 / person :arg0-of (t / take-01 :arg1 (d / drug))))))
(t / think-01 :arg0 (i / i) :arg1 (h / have-03 :arg0 (y / you) :arg1 (s / something :mod (l / less :degree (l2 / less :quant (l3 / lot))))))
(s / side-01 :arg0 (p / person :arg0-of (s2 / support-01 :arg1 (d / depend-01))) :location (s3 / side :arg0-of (l / lose-02)))
(s / say-01 :arg0 (p / person :name (n / name :op1 "Kevern")) :arg1 (i / insult-01 :polarity - :arg0 (t / they) :arg1 (t2 / they) :mod (r / really)) :arg1-of (s2 / say-01 :arg0 (p2 / person :mod (c / country :name (n2 / name :op1 "N-A")))))
(d / decide-01 :arg0 (p / parliament :arg0-of (h / have-org-role-91 :arg1 (c / country :name (n / name :op1 "China")) :arg2 (p2 / parliament))) :arg1 (o / oppose-01 :arg1 (l / let-01 :arg1 (n2 / nominate-01 :arg1 (c2 / candidate :arg0-of (n3 / nominate-01 :arg1 (c3 / candidate :quant 2017)))))) :concession (g / grow-03 :arg0 (p3 / parliament) :arg1 (a / agitation :purpose (r / reform-01 :arg1 (d2 / democracy)))))
(f / find-01 :arg0 (p / poll-01 :arg2 (o / organization :name (n / name :op1 "Journal" :op2 "du" :op3 "Dimanche") :location (c / country :name (n2 / name :op1 "N-A")))) :arg1 (r / rate-entity-91 :arg1 76 :arg2 (t / temporal-quantity :quant (N / N-A) :unit (y / year))) :arg1-of (c2 / cause-01 :arg0 (b / believe-01 :arg0 (p2 / person :mod (c3 / country)) :arg1 (r2 / risk-01 :arg0 (p3 / political-party :name (n3 / name :op1 "Socialist" :op2 "Party")) :arg2 (f2 / factions :arg0-of (r3 / rival-01) :quant (s / several)) :time (b2 / before :op1 (e / end-01 :arg1 (t2 / term :mod (t3 / term :quant 2017))))))))
(e / emerge-02 :arg0 (p / person :name (n / name :op1 "Henry") :arg0-of (h / have-rel-role-91 :arg1 (p2 / person) :arg2 (a / affection :mod (d / dear)))) :degree (l / less :quant (n2 / none)))
(- / -lrb- :arg0 (p / person :name (n / name :op1 "Recep" :op2 "Tayyip" :op3 "Erdogan") :arg0-of (h / have-org-role-91 :arg2 (m / minister :mod (p2 / prime)))) :arg1 (p3 / person :arg0-of (h2 / have-org-role-91 :arg2 (m2 / minister :mod (p4 / prime))) :arg0-of (h3 / have-org-role-91 :arg2 (m3 / minister :mod (p5 / prime))) :arg0-of (h4 / have-org-role-91 :arg2 (m4 / minister :mod (p6 / prime))) :arg0-of (h5 / have-org-role-91 :arg2 (m5 / minister :mod (p7 / prime))) :arg0-of (h6 / have-org-role-91 :arg2 (m6 / minister :mod (p8 / prime))) :arg0-of (h7 / have-org-role-91 :arg2 (m7 / minister :mod (p9 / prime))) :arg0-of (h8 / have-org-role-91 :arg2 (m8 / minister :mod (p10 / prime))) :arg0-of (h9 / have-org-role-91 :arg2 (m9 / minister :mod (p11 / prime))) :arg0-of (h10 / have-org-role-91 :arg2 (m10 / minister :mod (p12 / prime)))) :time (t / then))
(p / possible-01 :arg1 (s / say-01 :arg1 (f / forethoughtful :arg1 (p2 / person :name (n / name :op1 "Dettmann"))) :time (n2 / now) :concession (e / even-if :op1 (g / go-06 :arg0 (s2 / script) :arg1 (e2 / everything)))))
(f / find-01 :arg0 (p / poll-01 :arg2 (o / organization :name (n / name :op1 "Journal" :op2 "du" :op3 "Dimanche") :location (c / country :name (n2 / name :op1 "N-A")))) :arg1 (r / rate-entity-91 :arg1 76 :arg2 (t / temporal-quantity :quant (N / N-A) :unit (y / year))) :arg1-of (c2 / cause-01 :arg0 (b / believe-01 :arg0 (p2 / person :mod (c3 / country)) :arg1 (r2 / risk-01 :arg0 (p3 / political-party :name (n3 / name :op1 "Socialist" :op2 "Party")) :arg2 (f2 / factions :arg0-of (r3 / rival-01) :quant (s / several)) :time (b2 / before :op1 (e / end-01 :arg1 (t2 / term :mod (t3 / term :quant 2017))))))))
(a / and :op2 (s / say-01 :arg0 (c / candidate :mod (n / new) :arg0-of (l / love-01 :arg1 (c2 / country)) :mod (o / only)) :arg1 (a2 / allow-01 :arg1 (a3 / allow-01 :arg1 (' / '' :arg1 (c3 / city :name (n2 / name :op1 "Hong" :op2 "Kong")))))))
(r / rise-01 :arg1 (p / profit-01 :arg0 (p2 / person :mod (u / ultra))) :arg2 (r2 / rate-entity-91 :arg1 40 :arg2 (t / temporal-quantity :quant (N / N-A) :unit (y / year))) :arg4 (r3 / rate-entity-91 :arg1 (m / monetary-quantity :quant (3 / 380m) :unit (p3 / pound)) :arg2 (t2 / temporal-quantity :quant (N2 / N-A) :unit (y2 / year))) :arg4 (r4 / rate-entity-91 :arg1 (m2 / monetary-quantity :quant (32 / 380m) :unit (p4 / pound)) :arg2 (t3 / temporal-quantity :quant (N3 / N-A) :unit (y3 / year))) :arg4 (r5 / rate-entity-91 :arg1 (m3 / monetary-quantity :quant (33 / 380m) :unit (p5 / pound)) :arg2 (t4 / temporal-quantity :quant (N4 / N-A) :unit (y4 / year))))
(c / contrast-01 :arg1 (r / respond-01 :polarity - :arg0 (p / person :arg0-of (r2 / represent-01 :arg1 (p2 / person :arg0-of (r3 / represent-01)))) :arg1 (r4 / request-01 :arg0 (p3 / person) :arg1 (c2 / comment-01 :arg0 (p4 / person)))) :arg2 (d / decline-02 :arg0 (p5 / person :arg0-of (h / have-org-role-91 :arg1 (a / apollo) :arg2 (s / spokesman))) :arg1 (c3 / comment-01 :arg0 (p6 / person))))
(( / ( :( (n / name) :op1 "Europe")
(a / and :op1 (c / confirm-01 :arg0 (p / person :arg0-of (r / represent-01 :arg1 (s / star :poss (p2 / person :name (n / name :op1 "Lawrence"))))) :arg1 (r2 / real :domain (p3 / photograph-01))) :op2 (b / blasted :arg0 (p4 / person) :arg1 (p5 / person :arg0-of (h / hack-04)) :arg2 (v / violate-01 :arg0 (p6 / person) :arg1 (v2 / violate-01 :arg1 (p7 / privacy) :mod (f / flagrant)))))
(k / know-01 :arg0 (y / you) :arg1 (r / rule :poss (s / store) :arg2-of (i / include-01 :arg1 (a / and :op1 (p / possible-01 :arg1 (a2 / assessed :arg0 (y2 / you) :arg1 (n / note))) :op2 (h / highlight-01 :arg0 (y3 / you) :arg1 (n2 / note)) :op3 (w / wear-01 :arg0 (y4 / you) :arg1 (n3 / note)) :op4 (w2 / wear-01 :arg0 (y5 / you))))))
(s / say-01 :arg0 (p / person :name (n / name :op1 "Itkonen")) :arg1 (s2 / succeed-01 :arg0 (s3 / sports :mod (b / both)) :arg1 (s4 / sport :arg1-of (h / high-02 :degree (m / more))) :location (s5 / sport :location-of (w / work-09 :arg1 (t / trinity :mod (h2 / holy))))))
(a / and :op1 (s / sit-01 :arg1 (p / person :name (n / name :op1 "Kevern")) :arg2 (h / hold-01 :arg0 (p2 / person) :arg1 (h2 / hand :part-of (p3 / person)) :arg3 (p4 / person :name (n2 / name :op1 "Ailinn")) :time (g / grass :arg1-of (l / long-03)))) :op2 (e / enjoy-01 :arg0 (p5 / person) :arg1 (w / warm :arg0 (p6 / person) :arg1 (c / consolation :mod (u / utility) :arg0-of (s2 / supply-01 :arg1 (c2 / country) :arg2 (a2 / and :op1 (m / music :mod (s3 / soothing)) :op2 (n3 / news :mod (c3 / calming)))))) :time (s4 / sights :arg1 (l2 / leg :part-of (p7 / person)) :arg2 (s5 / song :mod (o / old) :arg1-of (l3 / liked :arg0 (p8 / person :arg0-of (h3 / have-rel-role-91 :arg1 (p9 / person) :arg2 (f / father))) :arg1-of (l4 / like-01 :arg0 (p10 / person)) :arg1-of (r / resemble-01 :arg2 (l5 / listening :arg1 (p11 / person))))))))
(s / so :arg0-of (b / bridge-01))
(m / move-01 :arg1 (p / person :name (n / name :op1 "Henrik" :op2 "Dettmann") :arg0-of (h / have-org-role-91 :arg2 (c / coach))) :arg2 (t / team :mod (t2 / tournament :mod (f / final))) :location (o / on :op1 (t3 / theater)))
(b / begin-01 :arg1 (w / word-01 :arg1 (a / and :op1 (p / put-01 :arg1 (f / finger :quant 2) :arg2 (f2 / finger :part-of (y / you))) :op2 (c / cost-01 :arg1 (f3 / finger) :arg2 (y2 / you)))) :arg2 (y3 / you))
(s / say-01 :arg0 (p / person :name (n / name :op1 "Lawless")) :arg1 (b / begin-01 :arg1 (r / rise-01 :arg1 (l / listing :consist-of (p2 / properties)) :arg3 (s2 / sell-01 :arg1 (p3 / properties) :time (o / over :op1 (f / few :op1 (t / temporal-quantity :quant (N / N-A) :unit (m / month)))) :arg1-of (t2 / test-01 :arg2 (m2 / market) :mod (r2 / real) :mod (r3 / real)))) :time (n2 / now)))
(s / specific-02 :arg1 (f / foot :part-of (y / you)) :manner (s2 / specific-02))
(p / protest-01 :arg0 (p2 / person :arg0-of (h / have-org-role-91 :arg2 (o / officer))) :arg1 (t / temporal-quantity :quant (N / N-A) :unit (h2 / hour) :arg0-of (d / demand-01 :arg1 (r / return-01 :arg1 (p3 / person) :arg4 (u / under :op1 (t2 / temporal-quantity :quant (N2 / N-A) :unit (h3 / hour)) :mod (o2 / old))))) :duration (t3 / temporal-quantity :quant (N3 / N-A) :unit (m / month)))
(a / assure-01 :arg0 (o / organization :name (n / name :op1 "SPEK")) :arg1 (s / safe-01 :arg1 (f / fire) :location (h / home)))
(i / invest-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (o / organization :name (n / name :op1 "Premier" :op2 "League")) :arg2 (c / club))) :arg1 (s / sum :mod (r / record)) :arg2 (s2 / sign-02 :arg1 (p2 / person :name (n2 / name :op1 "Abel" :op2 "Hernandez") :arg0-of (p3 / play-01 :arg1 (t / team :mod (n3 / nation) :mod (n4 / nation))))))
(p / person :arg0-of (s / serve-01) :mod (c / civil) :mod (c2 / country :name (n / name :op1 "Kenya")))
(t / tell-01 :arg0 (p / person :name (n / name :op1 "Anja" :op2 "Vaarma") :arg0-of (h / head-01 :arg1 (s / service :mod (f / food)))) :arg1 (a / and :op1 (v / valid-02 :polarity - :arg1 (n2 / note :arg1-of (v2 / valid-02 :arg2 (w / wall)))) :op2 (r / remove-01 :arg1 (n3 / note) :time (b / before :op1 (n4 / now) :quant (l / long)))) :arg2 (p2 / person :name (n5 / name :op1 "Yle")))
(c / contrast-01 :arg1 (o / offer-01 :arg0 (p / person :arg0-of (s / support-01 :arg1 (p2 / person :name (n / name :op1 "Kate")))) :arg1 (s2 / support-01 :arg0 (p3 / person) :arg1 (p4 / person))) :arg2 (h / handle-01 :arg0 (p5 / person) :arg1 (t / traumas :arg0-of (c2 / cause-01 :arg1 (r / relation-03 :arg0 (p6 / person) :arg1 (b / between :op1 (p7 / person :name (n2 / name :op1 "Brooke")) :op2 (p8 / person :name (n3 / name :op1 "Bill"))))))))
(t / take-10 :arg0 (t2 / that) :arg1 (t3 / temporal-quantity :quant (N / N-A) :unit (y / year) :mod (a / almost)))
(s / say-01 :arg0 (o / organization :name (n / name :op1 "Connells") :arg0-of (h / have-org-role-91 :arg1 (e / estate) :arg2 (a / agent :mod (e2 / estate)))) :arg1 (b / be-located-at-91 :arg1 (p / pig) :arg2 (c / company :name (n2 / name :op1 "N-A") :poss (p2 / person :arg0-of (o2 / own-01 :arg1 (h2 / home))))))
(s / say-01 :arg0 (d / doctor :poss (i / i)) :arg1 (g / get-22 :arg0 (y / you) :arg1 (r / radical :domain (y2 / you)) :time (a / and :op1 (b / become-01 :arg1 (i2 / i) :arg2 (v / very :degree (v2 / very))) :op2 (s2 / start-01 :arg0 (i3 / i) :arg1 (g2 / get-01 :arg0 (y3 / you) :arg1 (s3 / symptom :mod (d2 / diabetic)))))))
(m / make-01 :arg0 (p / person :name (n / name :op1 "Lidl")) :arg1 (m2 / mint :location (c / country :name (n2 / name :op1 "Finland"))))
(a / and :op1 (s / send-01 :arg1 (p / party :arg0-of (s2 / search-01) :arg2-of (i / involve-01 :arg1 (a2 / and :op1 (p2 / police :arg1-of (l / local-02)) :op2 (s3 / squad :purpose (r / rescue-01))))) :arg2 (o / out)) :op2 (f / find-01 :arg1 (t / thing :arg2-of (p3 / pair)) :location (n / near-02 :arg2 (l2 / location :name (n2 / name :op1 "Bridal" :op2 "Veil" :op3 "Falls")))))
(c / carried :arg1 (h / help-01 :arg0 (p / person :arg0-of (h2 / have-rel-role-91 :arg2 (d / dd1)))))
(a / and :op1 (c / capable-01 :arg1 (s / she) :arg2 (p / play-11 :arg0 (s2 / she))) :op2 (f / form-01 :arg0 (s3 / she) :arg1 (t / thing :arg1-of (e / explode-01 :arg1-of (p2 / powerful-02 :degree (m / most)))) :accompanier (p3 / person :name (n / name :op1 "Johanna" :op2 "Pekkarinen"))) :concession (h / have-03 :arg0 (p4 / person) :arg1 (i / injure-01 :mod (t2 / thumb))))
(b / believe-01 :arg1 (h / have-03 :arg0 (p / person :arg0-of (h2 / hack-04)) :arg1 (i / image :quant 30 :poss (p2 / person :name (n / name :op1 "Palmer"))) :accompanier (p3 / person :name (n2 / name :op1 "Scott" :op2 "Speedman") :arg0-of (h3 / have-org-role-91 :arg2 (e / ex-boyfriend))) :arg2-of (i2 / include-91 :arg1 (f / frames :quant 2 :arg2-of (i3 / include-91 :arg1 (f2 / frames :quant 2)) :arg2-of (i4 / include-91 :arg1 (f3 / frames :quant 2)))) :location (p4 / pool)))
(c / contract-02 :arg1 (t / team :mod (w / whole)))
(r / rented :arg0 (p / provide-01 :arg1 (l / license-01 :arg1 (e / electronics)) :arg2 (p2 / person :arg0-of (d / distribute-01) :example (a / and :op1 (o / organization :name (n / name :op1 "Amazon.com")) :op2 (c / country :name (n2 / name :op1 "N-A")) :op3 (o2 / organization :name (n3 / name :op1 "Barnes" :op2 "&" :op3 "Noble" :op4 "Inc"))))) :arg1 (b / book :mod (t / that) :frequency (s / sometimes)) :mod (e2 / essential) :frequency (s2 / sometimes))
(s / say-01 :arg0 (c / company :name (n / name :op1 "Areva")) :arg1 (d / delay-01 :arg0 (d2 / delay-01 :arg1 (p / project) :time (l / late :degree (m / most))) :arg1 (p2 / project) :mod (m2 / main) :arg1-of (c2 / cause-01 :arg0 (a / apply-02 :arg1 (a2 / accept-01 :arg1 (s2 / system :mod (a3 / automation) :mod (r / reactor?s)))))))
(i / include-01 :arg1 (a / and :op1 (f / fish) :op2 (c / chicken)) :arg2 (d / diet :mod (s / school)) :mod (v / vegetarian))
(m / multi-sentence :snt1 (n / need-01 :arg1 (s / say-01 :arg1 (m2 / more :polarity -))) :snt2 (a / agree-01 :arg0 (w / we)))
(s / say-01 :arg0 (p / person :name (n / name :op1 "Recep" :op2 "Tayyip" :op3 "Erdogan") :arg0-of (h / have-org-role-91 :arg2 (p2 / president :mod (v / vice)))) :arg1 (i / importance :domain (s2 / say-01 :arg0 (p3 / person :arg0-of (h2 / have-org-role-91 :arg2 (p4 / president))) :arg1 (i2 / importance :domain (s3 / spied :arg0 (c / country :quant (a / all) :arg1-of (m / major-02)) :arg1 (o / other :mod (e / each)))))))
(a / and :op1 (m / move-01 :arg1 (s / striker :source (t / team :name (n / name :op1 (i / ivory)) :mod (n2 / nation) :mod (c / country :name (n3 / name :op1 "N-A")))) :arg2 (l / location :name (n4 / name :op1 "French" :op2 "Lille"))) :op2 (e / estimate-01 :arg1 (s2 / sum :mod (t2 / transfer-01)) :arg2 (a2 / approximately :op1 (m2 / monetary-quantity :quant 3 :unit (e2 / euro)))))
(p / possible-01 :arg1 (c / cruel :domain (p2 / person :arg0-of (h / have-rel-role-91 :arg1 (h2 / he) :arg2 (f / father))) :arg1-of (i / intend-01)))
(t / try-02 :arg1 (m / man :mod (7 / 78-year-old)) :arg2 (t2 / try-02 :arg1 (m2 / man) :arg2 (r / run-02 :arg0 (m3 / man) :arg1 (g / girl :arg0-of (c / cross-02 :arg1 (p / pelicans))) :location (f / fife :mod (p2 / pelicans)))))
(c / close-10 :arg1 (y / you) :arg2 (s / subject :poss (y2 / you)))
(c / confirm-01 :arg0 (d / detective :mod (t / torres?s)) :arg1 (p / person :name (n / name :op1 "Kagawa")) :arg2 (c2 / country :name (n2 / name :op1 "N-A")))
(t / take-01 :arg1 (2 / 20-year-old :source (c / country :name (n / name :op1 "UK"))) :arg3 (h / hospital) :time (a / after :op1 (t2 / take-01 :arg0 (p / person) :arg1 (p2 / part) :location (c2 / craze :mod (l / lung) :location (t3 / tuesday)))))
(c / compete-02 :arg0 (a / and :op1 (p / product) :op2 (s / service)) :mod (f / fueling))
(m / multi-sentence :snt1 (p / person :name (n / name :op1 "Eugene") :arg0-of (l / lead-02 :arg1 (g / game)) :domain (p2 / person :arg0-of (p3 / play-01 :arg1 (g2 / game)) :arg1-of (k / key-02))) :snt2 (p4 / person :name (n2 / name :op1 "Pooh") :arg0-of (h / have-rel-role-91 :arg1 (p5 / person) :arg2 (s / sister))) :snt3 (b / become-01 :arg1 (p6 / person :name (n3 / name :op1 "Carmelita" :op2 "Jeter") :arg0-of (h2 / have-rel-role-91 :arg1 (p7 / person) :arg2 (s2 / sister))) :arg2 100 :arg1 (p8 / person) :time (b2 / before :op1 (n4 / now) :quant (t / temporal-quantity :quant (N / N-A) :unit (y / year)))))
(a / and :op2 (c / come-01 :arg1 (p / person :quant (a2 / around :op1 150)) :arg4 (t / together) :location (l / location :name (n / name :op1 "Cardiff")) :arg1-of (d / describe-01 :arg2 (t2 / thing :arg1-of (d2 / describe-01 :arg2 (c2 / counter-summit)))) :location (l2 / location :name (n2 / name :op1 "Cardiff"))))
(s / say-01 :arg0 (p / person :arg0-of (h / hack-04)) :arg1 (h2 / have-03 :arg0 (p2 / person :arg0-of (h3 / hack-04)) :arg1 (p3 / photograph-01 :quant 60 :consist-of (a / and :op1 (p4 / person :name (n / name :op1 "Lawrence") :arg0-of (h4 / have-rel-role-91 :arg2 (b / brother))) :op2 (p5 / person :name (n2 / name :op1 "Cara" :op2 "Delevingne") :arg0-of (h5 / have-org-role-91 :arg1 (a2 / and :op1 (p6 / person :name (n3 / name :op1 "Cara" :op2 "Delevingne")) :op2 (p7 / person :name (n4 / name :op1 "Cara" :op2 "Delevingne")) :op3 (p8 / person :name (n5 / name :op1 "Ariana" :op2 "Grande")) :op4 (p9 / person :name (n6 / name :op1 "Ariana" :op2 "Grande")) :op5 (p10 / person :name (n7 / name :op1 "Ariana" :op2 "Grande")) :op6 (p11 / person :name (n8 / name :op1 "Lea" :op2 "Michelle")) :op7 (p12 / person :name (n9 / name :op1 "Kirsten" :op2 "Dunst")))))))))
(c / cost-01 :arg1 (t / turnover) :arg2 (m / monetary-quantity :quant 960 :unit (e / euro)) :arg4 (m2 / monetary-quantity :quant 1.2 :unit (e2 / euro)))
(s / shook :arg0 (s2 / she) :arg1 (t / thing :arg1-of (e / envision-01 :arg0 (p / person :name (n / name :op1 "Kevern")))) :location (d / disbelief))
(b / bent :arg0 (p / person :name (n / name :op1 "Vampula")) :arg1 (m / match-03) :arg2 (s / sets :quant 5 :destination (w / win-01 :quant (3 / 3-2) :arg0 (p2 / person))))
(c / come-01 :arg1 (t / train) :arg3 (c2 / country :name (n / name :op1 "Greece")))
(a / and :op2 (t / turn-down-05 :arg0 (t2 / tens :mod (t3 / thousands)) :arg1 (d / demonstrate-01 :quant 1 :arg1-of (i / include-91 :arg2 (d2 / demonstrate-01 :arg0-of (f / favor-01 :arg1 (d3 / democracy)) :mod (l / large :degree (m / most)) :location (r / region))))))
(g / grow-01 :arg1 (t / thing :arg2-of (v / value-01 :arg1 (r / retail-01 :name (n / name :op1 (g2 / grocery))))) :arg1-of (i / instead-of-91 :arg2 (n2 / nearly :op1 (p / percentage-entity :value (N / N-A) :time (y / year :mod (l / last))))) :arg1-of (i2 / instead-of-91))
(a / and :op1 (l / likely-01 :arg1 (o / outlaw-01 :arg0 (m / move-02) :arg1 (p / protest-01 :arg1 (d / district :mod (b / business) :poss (c / city :name (n / name :op1 "Hong" :op2 "Kong")))))) :op2 (b2 / begin-01 :arg0 (a2 / activist) :arg1 (a3 / and :op1 (p2 / plan-01) :op2 (m2 / mobilize)) :time (a4 / after :op1 (a5 / announce-01) :quant (u / up-to :op1 (t / temporal-quantity :quant (N / N-A) :unit (h / hour))))))
(b / bent :arg0 (p / person :name (n / name :op1 "Vampula")) :arg1 (m / match-03) :arg2 (s / sets :quant 5 :destination (w / win-01 :quant (3 / 3-2) :arg0 (p2 / person))))
(s / score-01 :arg1 (p / person :name (n / name :op1 "Jeter")) :arg2 (l / location :name (n2 / name :op1 "Dominican" :op2 "Republic")) :arg3 (l2 / location :name (n3 / name :op1 "Dominican" :op2 "Republic")))
(o / obligate-01 :arg1 (h / he) :arg2 (e / explain-01 :arg0 (h2 / he) :arg1 (j / jazz)))
(a / and :op1 (f / follow-02 :arg0 (p / person :name (n / name :op1 "Stephen" :op2 "Fairclough")) :arg1 (d / develop-01 :arg2 (w / we) :time (w2 / weekend))) :op2 (s / speak-01 :arg0 (p2 / person) :arg2 (p3 / person :arg0-of (p4 / protest-01) :arg0-of (t / travelled :arg1 (p5 / person) :arg2 (c / country :name (n2 / name :op1 "Belgium"))))))
(s / say-01 :arg0 (a / and :op1 (p / person :name (n / name :op1 "Tony" :op2 "Pidgley") :arg0-of (h / have-org-role-91 :arg1 (c / city :name (n2 / name :op1 "Berkeley") :arg0-of (h2 / have-org-role-91 :arg1 (u / upmarket))) :arg2 (c2 / chairman))) :op2 (p2 / person :arg0-of (h3 / have-org-role-91 :arg1 (u2 / upmarket) :arg2 (c3 / chairman))) :op3 (p3 / person :arg0-of (h4 / have-org-role-91 :arg1 (u3 / upmarket) :arg2 (c4 / chairman))) :op4 (p4 / person :arg0-of (h5 / have-org-role-91 :arg1 (o / organization) :arg2 (c5 / chairman))) :op5 (p5 / person :arg0-of (h6 / have-org-role-91 :arg1 (o2 / organization) :arg2 (c6 / chairman))) :op6 (p6 / person :arg0-of (h7 / have-org-role-91 :arg1 (o3 / organization) :arg2 (c7 / chairman))) :op6 (p7 / person :arg0-of (h8 / have-org-role-91 :arg1 (o4 / organization) :arg2 (c8 / chairman))) :op6 (p8 / person :arg0-of (h9 / have-org-role-91 :arg1 (o5 / organization) :arg2 (c9 / chairman))) :op6 (p9 / person :arg0-of (h10 / have-org-role-91 :arg1 (o6 / organization) :arg2 (c10 / chairman))) :op7 (p10 / person :arg0-of (h11 / have-org-role-91 :arg1 (o7 / organization) :arg2 (c11 / chairman)))) :arg1 (o8 / offered :arg0 (m / market) :arg1 (o9 / offer-01 :arg0 (m2 / market) :arg1 (e / environment :arg0-of (o10 / operate-01 :arg1-of (s2 / stable-03)) :arg1-of (s3 / stable-03)))) :time (s4 / since :op1 (s5 / start-01 :arg1 (y / year :mod (f / finance) :mod (f2 / finance)))))
(c / contrast-01 :arg1 (p / promise-01 :arg0 (p2 / person :arg0-of (h / have-org-role-91 :arg1 (c2 / criminal-organization :name (n / name :op1 "N-A")))) :arg1 (t / thing :arg2-of (s / solve-01 :arg1 (c3 / career :mod (c4 / career))))) :arg2 (s2 / say-01 :arg0 (e / estimate-01 :time (l / late :degree (m / most))) :arg1 (a / achieve-01 :arg1 (w / week :mod (t2 / this)))))
(i / include-01 :arg1 (a / and :op1 (l / love-01) :op2 (h / honor) :op3 (p / person :name (n / name :op1 "Liam" :op2 "Hemsworth") :mod (o / opposite))) :arg2 (c / credit :mod (f / film) :poss (p2 / person)))
(a / and :op2 (t / turn-down-05 :arg0 (t2 / tens :mod (t3 / thousands)) :arg1 (d / demonstrate-01 :quant 1 :arg1-of (i / include-91 :arg2 (d2 / demonstrate-01 :arg0-of (f / favor-01 :arg1 (d3 / democracy)) :mod (l / large :degree (m / most)) :location (r / region))))))
(r / remove-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg2 (a / agent :mod (e / estate)))) :arg1 (p2 / picture-01 :arg1 (s / sell-01 :arg1 (s2 / sell-01 :location (u / university :name (n / name :op1 "Suffolk"))))) :arg2 (p3 / person :arg0-of (h2 / have-org-role-91 :arg2 (a2 / agent))) :time (e2 / emerge-02 :arg0 (p4 / person) :arg1 (s3 / show-01 :arg0 (p5 / person) :arg1 (p6 / pig :mod (l / large) :location (r2 / room :mod (l2 / live-01))))))
(f / fared :arg0 (m / market :mod (p / property) :location (c / city :name (n / name :op1 "London"))) :arg1 (m2 / market :mod (p2 / property) :location (c2 / city)) :manner (w / well) :time (d / downturn :arg1 (p3 / person :arg0-of (b / buy-01 :arg1 (f2 / foreign))) :arg2 (c3 / capital)))
(f / follow-01 :arg1 (c / call-02 :arg0 (p / person :name (n / name :op1 "Putin")) :arg1 (g / government-organization :arg0-of (g2 / govern-01 :arg1 (c2 / city :name (n2 / name :op1 "Kiev"))))) :arg2 (n3 / negotiate-01 :arg0 (g3 / government-organization) :arg1 (i / insurgent :mod (p2 / pro-russia)) :arg1-of (e / equal-01 :arg2 (s / strategy :mod (a / apparent) :arg1-of (f2 / follow-01 :arg2 (s2 / strategy :mod (a2 / apparent) :time (b / before :op1 (n4 / now) :quant (t / temporal-quantity :quant (N / N-A) :unit (m / month)))))))) :arg1-of (f3 / follow-01 :arg2 (a3 / and :op1 (h / help-01 :arg0 (h2 / help-01 :arg0 (s3 / separatist)) :arg1 (t2 / take-01 :arg0 (s4 / separatist) :arg1 (t3 / territory))) :op2 (f4 / force-01 :arg0 (g4 / government-organization) :arg1 (g5 / government-organization :arg0-of (g6 / govern-01 :arg1 (c3 / country :name (n5 / name :op1 "Russia")))) :arg2 (g7 / grant-01 :arg0 (g8 / government-organization) :arg1 (d / depend-01 :polarity - :arg0 (c4 / country) :arg1 (a4 / and :op1 (d2 / depend-01 :polarity - :arg0 (c5 / country) :arg1 (c6 / country)) :op2 (d3 / depend-01 :polarity - :arg0 (c7 / country) :arg1 (c8 / country))) :arg2 (c9 / country :name (n6 / name :op1 "Russia")) :arg1-of (i2 / instead-of-91 :arg2 (w / world-region :name (n7 / name :op1 "West")))))))))
(p / play-11 :polarity - :arg2 (j / jazz) :mod (t / too) :mod (t2 / too))
(a / and :op1 (g / gather-03 :arg0 (p / person :arg1-of (e / employ-01) :mod (s / salaried)) :purpose (d / discuss-01 :arg0 (p2 / person) :arg1 (i / issue-02 :arg0 (p3 / pension)))) :op2 (n / news :topic (a2 / affair :mod (d2 / domestic))))
(a / accuse-01 :arg0 (m / man) :arg1 (g / girl) :arg2 (k / knocking :arg0 (m2 / man) :arg1 (g2 / girl)))
(i / investigate-01 :arg0 (p / police) :arg1 (p2 / person :quant 4 :arg1-of (c / commit-02 :time (b / before :op1 (n / now) :duration (f / few :op1 (t / temporal-quantity :quant (N / N-A) :unit (d / day)))) :location (l / location :name (n2 / name :op1 "Kajaani")))))
(a / and :op1 (p / person :name (n / name :op1 "Croze")) :op2 (c / company :arg0-of (a2 / award-01) :mod (c2 / city :name (n2 / name :op1 "Cannes"))) :op3 (m / movie :mod (n3 / new) :mod (f / finnish)))
(r / rise-01 :arg1 (p / profit-01 :arg0 (p2 / person :mod (u / ultra))) :arg2 (r2 / rate-entity-91 :arg1 40 :arg2 (t / temporal-quantity :quant (N / N-A) :unit (y / year))) :arg4 (r3 / rate-entity-91 :arg1 (m / monetary-quantity :quant (3 / 380m) :unit (p3 / pound)) :arg2 (t2 / temporal-quantity :quant (N2 / N-A) :unit (y2 / year))) :arg4 (r4 / rate-entity-91 :arg1 (m2 / monetary-quantity :quant (32 / 380m) :unit (p4 / pound)) :arg2 (t3 / temporal-quantity :quant (N3 / N-A) :unit (y3 / year))) :arg4 (r5 / rate-entity-91 :arg1 (m3 / monetary-quantity :quant (33 / 380m) :unit (p5 / pound)) :arg2 (t4 / temporal-quantity :quant (N4 / N-A) :unit (y4 / year))))
(m / multi-sentence :snt1 (s / see-01 :polarity - :arg0 (y / you) :arg1 (f / face :part-of (h / he)) :time (e / ever)) :snt2 (h2 / hear-01 :arg0 (y2 / you) :arg1 (v / voice :poss (h3 / he)) :purpose (s2 / stop-01 :arg0 (y3 / you) :arg1 (s3 / sentiment))))
(h / have-concession-91 :arg2 (e / eye :part-of (h2 / he) :mod (k / kind)))
(o / opportunity :domain (s / study-01 :arg1 (t / thing :manner-of (s2 / study-01 :arg0 (w / we) :location (i / international)))) :mod (p / probable) :mod (s3 / still))
(s / say-01 :arg0 (p / person :name (n / name :op1 "Putin")) :arg1 (a / and :op1 (b / believe-01 :arg0 (a2 / anyone :arg0-of (b2 / believe-01 :arg1 (p2 / peace))) :arg1 (t / talk-01 :arg1 (p3 / peace))) :op2 (c / contrast-01 :arg1 (a3 / attack-01 :arg0 (p4 / person :arg0-of (h / have-org-role-91 :arg1 (g / government-organization :arg0-of (g2 / govern-01)) :arg2 (t2 / troop))) :arg1 (c2 / community :mod (c3 / civilian)) :time (d / date-entity :month (O / Oct.) :day 26)) :arg2 (a4 / attack-01 :arg0 (p5 / person :arg0-of (h2 / have-org-role-91 :arg1 (g3 / government-organization :arg0-of (g4 / govern-01)) :arg2 (t3 / troop))) :arg1 (c4 / community :mod (c5 / civilian)) :location (r / region :mod (s2 / separatist-held))))))
(c / carried :arg1 (h / help-01 :arg0 (p / person :arg0-of (h2 / have-rel-role-91 :arg2 (d / dd1)))))
(u / use-01 :arg1 (e / example :mod (n / nitromethane)) :arg2 (n2 / nitromethane))
(s / say-01 :arg0 (o / organization :name (n / name :op1 "W" :op2 "Connection" :op3 "FC")) :arg1 (m / make-01 :arg0 (o2 / organization :name (n2 / name :op1 "HJK")) :arg1 (d / deal-01 :arg2 (p / person :name (n3 / name :op1 "Joevin" :op2 "Jones")) :mod (l / loan-01))) :arg2 (p2 / person :name (n4 / name :op1 "Joevin" :op2 "Jones")))
(t / take-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg2 (p2 / premier))) :arg1 (f / family :arg1-of (h2 / have-org-role-91 :arg0 (p3 / person) :arg2 (m / member))) :arg4 (n / neighbor-01 :arg1 (p4 / person) :arg2 (c / country :name (n2 / name :op1 "South" :op2 "Africa"))) :time (a / after :op1 (s / say-01 :arg0 (p5 / person) :arg1 (r / receive-01 :arg0 (p6 / person) :arg1 (t2 / threat :mod (a2 / assassinate-01))))))
(p / participate-01 :arg0 (f / fan :mod (f2 / finnish) :quant (o / over :op1 8000)) :arg1 (f3 / fan :mod (f4 / finnish)) :location (c / championships :mod (w / world :mod (b / basketball))))
(a / and :op2 (s / say-01 :arg0 (c / candidate :mod (n / new) :arg0-of (l / love-01 :arg1 (c2 / country)) :mod (o / only)) :arg1 (a2 / allow-01 :arg1 (a3 / allow-01 :arg1 (' / '' :arg1 (c3 / city :name (n2 / name :op1 "Hong" :op2 "Kong")))))))
(m / multi-sentence :snt1 (c / contrast-01 :arg2 (g / give-01 :arg0 (p / person :name (n / name :op1 "Salin")) :arg1 (c2 / credit :mod (a / all)) :arg2 (f / fan :mod (w / wolf)))) :snt2 (a2 / and :op1 (d / do-02 :mode (i / interrogative) :arg0 (p2 / person) :arg1 (c3 / credit) :arg2 (s / style)) :op2 (d2 / do-02 :arg0 (p3 / person) :arg1 (s2 / style))))
(l / look-04 :arg0 (w / we) :arg1 (e / ensure-01 :arg0 (w2 / we) :arg1 (r / reach-01 :arg0 (p / person :arg0-of (s / study-01) :time (y / year :mod (t / this))) :arg1 (u / university) :manner (a / and :op1 (p2 / pale-03 :arg1 (p3 / person) :mod (m / minimum)) :op2 (m2 / maximum :op1 (l2 / luxury)) :mod (m3 / minimum))) :direction (f / forward)))
(s / say-01 :arg0 (c / company) :arg1 (e / expect-01 :arg1 (f / find-01 :arg0 (c2 / company) :arg1 (m / market :beneficiary (s2 / service))) :concession (f2 / face-01 :arg0 (p / person :arg0-of (s3 / study-01)) :arg1 (f3 / fee :mod (m2 / monetary-quantity :quant 9,000 :unit (d / dollar :mod (r / renminbi)))))) :mod (a / also))
(a / and :op1 (f / follow-02 :arg0 (p / person :name (n / name :op1 "Stephen" :op2 "Fairclough")) :arg1 (d / develop-01 :arg2 (w / we) :time (w2 / weekend))) :op2 (s / speak-01 :arg0 (p2 / person) :arg2 (p3 / person :arg0-of (p4 / protest-01) :arg0-of (t / travelled :arg1 (p5 / person) :arg2 (c / country :name (n2 / name :op1 "Belgium"))))))
FAILED_TO_PARSE#Couldn't convert to full AMR graph.
(m / multi-sentence :snt1 (f / fortunate-01 :polarity - :arg2 (e / expand-01 :arg1 (t / thing :arg1-of (o / opine-01)) :location (a / around :op1 (w / world))) :time (y / year :mod (l / last))) :snt2 (p / possible-01 :polarity - :arg1 (s / separate-01 :arg1 (t2 / thing :arg1-of (o2 / opine-01) :example (w2 / work-of-art :name (n / name :op1 "N-A")) :example (w3 / work-of-art :name (n2 / name :op1 "N-A"))) :arg2 (p2 / point :mod (v / view-01 :arg1 (a2 / and :op1 (p3 / protect-01 :arg1 (a3 / animal)) :op2 (e2 / ethically :arg1 (a4 / animal))))))))
(m / multi-sentence :snt1 (a / and :op1 (a2 / amr-unknown :domain (t / this) :topic (i / it)) :op2 (t2 / take-01 :mode (i2 / imperative) :arg0 (y / you) :arg1 (i3 / it) :manner (s / serious))) :snt2 (a3 / and :op1 (t3 / take-01 :mode (i4 / imperative) :arg0 (y2 / you) :arg1 (i5 / it) :manner (s2 / serious)) :op2 (l / learn-01 :mode (i6 / imperative) :arg0 (y3 / you) :arg1 (r / research-01 :arg1 (l2 / line :poss (y4 / you)))) :op3 (r2 / research-01 :mode (i7 / imperative) :arg0 (y5 / you) :arg1 (l3 / line :poss (y6 / you)))))
(a / assure-01 :arg0 (o / organization :name (n / name :op1 "SPEK")) :arg1 (s / safe-01 :arg1 (f / fire) :location (h / home)))
(n / number :quant-of (d / die-01 :arg1-of (c / cause-01 :arg0 (b / big :degree (m / most) :compared-to (y / year :mod (l / last))))))
(s / say-01 :arg0 (o / organization :name (n / name :op1 "Education" :op2 "Ministry")) :arg1 (r / return-02 :polarity - :arg1 (f / family :quant (a / about :op1 (N / N-A))) :mod (s2 / still)))
FAILED_TO_PARSE#Couldn't convert to full AMR graph.
(m / move-01)
FAILED_TO_PARSE#Couldn't convert to full AMR graph.
(m / multi-sentence :snt1 (b / basketball) :snt2 (m2 / much :degree (t / too :mode (e / expressive))) :snt3 (m3 / much :degree (t2 / too :mod (a / almost))))
(a / and :op1 (d / deliver-01 :arg0 (p / person :name (n / name :op1 "Henry")) :arg1 (l / line :quant 20) :arg3 (d2 / documentary) :mod (l2 / last)) :op2 (l3 / live-01 :arg0 (h / he)))
(t / try-01 :arg0 (i / i) :arg1 (a / and :op1 (s / shave-01 :arg0 (i2 / i) :arg1 (i3 / it) :frequency (m / many)) :op2 (p / pull-01 :arg0 (i4 / i) :arg1 (i5 / it) :arg2 (f / further :mod (l / little)))) :concession-of (h / held :arg0 (l2 / leg :part-of (p2 / person :name (n / name :op1 "Mikkelsen"))) :arg1 (i6 / it) :arg1-of (u / update-01) :mod (j / just)))
(a / and :op1 (r / renew-01 :arg1 (a2 / agree-01 :mod (r2 / rental)) :time (t / time :mod (l / last)) :location (s / spring :quant 2014)) :op2 (v / valid-02 :arg1 (a3 / agreement) :time (u / until :op1 (s2 / spring :quant 2018))))
(f / flat :arg1 (s / share :poss (c / city :name (n / name :op1 "Berkeley"))) :arg2 (m / monetary-quantity :quant 23.96 :unit (d / dollar :mod (c2 / city :name (n2 / name :op1 "London")))) :time (d2 / date-entity :year (N / N-A)))
(s / say-01 :arg0 (p / person :name (n / name :op1 "Socawarriors") :arg0-of (h / have-org-role-91 :arg1 (s2 / site :mod (f / football)) :arg2 (p2 / publish))) :arg1 (i / include-91 :arg1 (p3 / person :name (n2 / name :op1 "Jones")) :arg2 (p4 / person :quant 1 :arg1-of (i2 / include-91 :arg2 (p5 / person :arg0-of (p6 / play-08 :arg1 (l / league :mod (t / tt)))))) :arg3 (p7 / person :quant 1 :arg1-of (i3 / include-91 :arg2 (p8 / person :arg0-of (p9 / play-01 :arg1 (s3 / star))))) :location (s4 / seasons :quant 2 :mod (l2 / last))))
(s / say-01 :arg0 (o / organization :name (n / name :op1 "Charity" :op2 "CMT" :op3 "UK")) :arg1 (p / problem :mod (c / common) :domain (p2 / person :arg0-of (h / have-org-role-91 :arg1 (o2 / organization :name (n2 / name :op1 "CMT")))) :arg1-of (c2 / cause-01 :arg0 (k / know-02 :arg1 (l / little :degree (s2 / so)) :arg2 (c3 / condition)))))
(b / become-01 :arg1 (p / product :name (n / name :op1 "N-A")) :arg2 (t / thing :mod (i / internet) :arg1-of (s / share-01 :arg2 (a / and :op1 (c / company :name (n2 / name :op1 "Facebook")) :op2 (t2 / twitter)))))
(p / possible-01 :arg1 (o / one-third :arg1 (t / thing :arg2-of (p2 / price-01 :arg1 (b / book)) :mod (n / new) :quant (s / some)) :arg2 (t2 / thing :arg1-of (f / find-01 :arg0 (y / you) :location (b2 / bookstore :mod (c / campus)) :condition (g / go-02 :arg0 (y2 / you) :medium (o2 / online))))))
(c / contrast-01 :arg1 (c2 / confirm-01 :arg1 (l / leave-15 :arg0 (p / person :name (n / name :op1 "Fernando" :op2 "Torres") :arg0-of (h / have-org-role-91 :arg1 (o / organization :name (n2 / name :op1 "Chelsea")))) :arg1 (o2 / organization :name (n3 / name :op1 "Chelsea")))) :arg2 (e / enter-01 :arg0 (p2 / person :arg0-of (p3 / play-01 :arg1 (r / replace-01))) :arg1 (c3 / club) :time (s / simultaneous :mod (n4 / near))))
(p / pour :arg1 (w / water :consist-of (i / ice)) :arg2 (o / over :op1 (2 / 20-year-old)))
(s / subject-01 :arg1 (h / home :poss (p / person :arg0-of (h2 / have-org-role-91 :arg2 (c / capital)))) :arg2 (a / and :op1 (d / demand-01 :arg1 (a2 / and :op1 (d2 / demand-01) :op2 (w / world-region :name (n / name :op1 "N-A")))) :op2 (t / thing :arg2-of (p2 / price-01) :mod (w2 / world-region :name (n2 / name :op1 "N-A")))) :arg1-of (s2 / spread-02 :arg1-of (w3 / wide-02)) :arg1-of (c2 / cause-01 :arg0 (f / fear-01 :arg1 (p3 / prompting :arg1 (b / bank :mod (c3 / credit)) :arg2 (b2 / bank :poss (c4 / country)) :purpose (i / impose-01 :arg0 (b3 / bank) :arg1 (l / limit-01 :arg1 (t2 / thing :arg2-of (s3 / shelter-01 :arg3 (m / mortgage))) :location (j / june))) :arg1-of (w4 / wide-02)) :arg1-of (w5 / wide-02))))
(s / sure-02 :arg0 (i / i) :arg1 (k / know-01 :arg0 (t / they) :arg1 (h / have-manner-91 :arg1 (t2 / this) :arg2 (m / much :degree (s2 / so)) :beneficiary (i2 / i))) :mod (q / quite))
(t / tend-02 :arg1 (w / we) :arg2 (a / answer-01 :arg0 (w2 / we) :arg1 (d / demand-01 :mod (t2 / this)) :manner (l / launch-01 :arg0 (w3 / we) :arg1 (s / service :mod (t3 / travel-01) :ord (o / ordinal-entity :value 1) :poss (c / country :name (n / name :op1 "UK"))) :beneficiary (p / person :arg0-of (s2 / study-01)) :time (t4 / today))))
(s / say-01 :arg0 (p / person :name (n / name :op1 "Peskov")) :arg1 (p2 / possible-01 :arg1 (g / grant-01 :arg0 (g2 / government-organization :arg0-of (g3 / govern-01 :arg1 (c / country :name (n2 / name :op1 "N-A")))) :arg1 (r / region :mod (e / east)) :arg2 (c2 / city :arg1-of (n3 / need-01))) :mod (o / only)))
(e / enjoy-01 :arg0 (t / they :mod (b / both)) :arg1 (f / fruits :poss (p / person :arg0-of (h / have-org-role-91 :arg2 (h2 / head-of-state)))) :time (n / now))
(p / promise-01 :arg2 (p2 / promise-01 :arg2 (e / experience-01 :arg0 (j / journalist :mod (c / country :name (n / name :op1 "N-A"))) :arg1 (w / work-01 :arg0 (j2 / journalist) :arg1 (w2 / work-01 :arg0 (j3 / journalist) :arg1 (f / field :arg1-of (d / differ-02 :arg1-of (c2 / complete-02))) :arg2 (a / attitude :arg1-of (d2 / differ-02 :arg1-of (c3 / complete-02))))))))
(m / monetary-quantity :quant 61 :unit (d / dollar :mod (r / renminbi)) :duration (t / temporal-quantity :quant (N / N-A) :unit (m2 / month) :duration (t2 / temporal-quantity :quant (N2 / N-A) :unit (m3 / month)) :prep-for (a / about :op1 (m4 / monetary-quantity :quant 61 :unit (d2 / dollar)))))
(a / and :op1 (' / '' :arg0 (p / person :arg1-of (i / include-91 :arg2 (y / you) :arg3 (p2 / person :arg0-of (h / have-rel-role-91 :arg1 (i2 / i) :arg2 (h2 / husband))))) :arg1 (i3 / i) :arg2 (p3 / person :arg0-of (h3 / have-rel-role-91 :arg1 (i4 / i) :arg2 (h4 / husband))) :time (b / before :op1 (n / now) :quant (t / temporal-quantity :quant (N / N-A) :unit (y2 / year))) :location (p4 / privacy :poss (h5 / home :poss (w / we)))) :op2 (h6 / hope-01 :arg0 (i5 / i) :arg1 (f / feel-01 :arg0 (y3 / you) :arg1 (g / great :topic (p5 / person :name (n2 / name :op1 "Winstead"))))))
(m / multi-sentence :snt1 (r / receive-01 :arg0 (t / they) :arg1 (n / news :mod (g / good)) :arg2 (p / person :name (n2 / name :op1 "Mikkelsen"))) :snt2 (g2 / good :degree (m2 / more) :mod (a / apparent) :domain (o / organization :name (n3 / name :op1 "Cita")) :time (a2 / already)))
(h / hard-02 :arg1 (c / communicate-01 :arg2 (t / they :quant (m / most))))
(a / and :op1 (s / snog :arg0 (p / person :ord (o / ordinal-entity :value 1) :arg0-of (h / have-rel-role-91 :arg1 (s2 / she) :arg2 (s3 / snog))) :arg1 (b / become-01 :arg1 (p2 / person) :arg2 (e / expression :mod (c / common :degree (m / most)) :consist-of (p3 / person :arg0-of (h2 / have-rel-role-91 :arg1 (m2 / man) :arg2 (c2 / child)))))) :op2 (a2 / antidote :arg0 (p4 / person) :arg1 (b2 / ballads :mod (b3 / bland) :poss (l / love-01 :arg1 (p5 / pump :name (n / name :op1 (c3 / consolation))))) :time (l2 / late :degree (m3 / more))) :op3 (c4 / cuff :arg0 (p6 / person) :arg1 (s4 / she) :time (l3 / late :degree (m4 / more))))
(f / fire-01 :arg0 (a / and :op1 (p / person :arg0-of (h / have-org-role-91 :arg1 (o / organization :name (n / name :op1 "Hamas")) :arg2 (m / militant))) :op2 (p2 / person :arg0-of (h2 / have-org-role-91 :arg1 (c / country-region :name (n2 / name :op1 "Gaza")) :arg2 (m2 / militant))) :op3 (p3 / person :arg0-of (h3 / have-org-role-91 :arg1 (c2 / country-region :name (n3 / name :op1 "Gaza")) :arg2 (m3 / militant)))) :arg1 (a2 / and :op1 (r / rocket :quant 4,591) :op2 (r2 / rocket :quant 4,591)) :location (c3 / city :location (i / israeli)) :time (f2 / fight-01 :arg0 (a3 / and) :arg2 (f3 / fight-01 :location (s / south :part-of (s2 / south)))))
(d / discuss-01 :arg0 (a / and :op1 (p / person :arg0-of (h / have-org-role-91 :arg1 (o / organization :name (n / name :op1 "SAK") :arg1-of (e / employ-01 :mod (s / salaried))))) :op2 (o2 / organization :name (n2 / name :op1 "Akava")) :op3 (o3 / organization :name (n3 / name :op1 "STTK"))) :arg1 (s2 / situation :mod (n4 / negotiate-01)) :time (m / morning))
(a / and :op1 (' / '' :polarity -) :op2 ('2 / '' :polarity - :arg1 (w / we)))
(m / multi-sentence :snt1 (m2 / matter-01 :polarity - :arg1 (b / between :op1 (c / country :name (n / name :op1 "Ukraine")) :op2 (c2 / country :name (n2 / name :op1 "Russia")))) :snt2 (s / say-01 :arg0 (p / person :name (n3 / name :op1 "Peskov")) :arg1 (c3 / contrast-01 :arg1 (c4 / conflict-01 :polarity - :arg0 (c5 / country) :arg1 (c6 / country)) :arg2 (c7 / conflict-01 :polarity - :arg0 (c8 / country) :arg1 (c9 / country) :arg1-of (i / internal-02)))))
(l / like-01 :arg0 (n / nobody) :arg1 (e / eat-01 :arg1 (c / carrots)))
(l / lead-02 :polarity - :arg0 (o / office :poss (p / person :name (n / name :op1 "Lehmberg"))) :arg1 (i / investigate-01 :arg0 (j / jury :mod (g / grand)) :arg1 (p2 / person :name (n2 / name :op1 "Perry"))))
(p / promise-01 :arg2 (m / man :mod (y / young) :example (p2 / person :name (n / name :op1 "Hanno" :op2 "Möttölä"))))
(c / cause-01 :arg0 (t / target-01 :arg0 (a / agency :mod (i / intelligence) :mod (m / main) :poss (c2 / country :name (n / name :op1 "Germany"))) :arg1 (p / peninsula :name (n2 / name :op1 "N-A")) :mod (a2 / also)) :arg1 (d / draw-02 :arg0 (p2 / peninsula :name (n3 / name :op1 "N-A")) :arg1 (r / respond-01 :arg1 (g / government-organization :arg0-of (g2 / govern-01 :arg1 (c3 / country-region))) :arg1-of (a3 / anger-01 :degree (m2 / more))) :mod (a4 / also)))
(f / fun :domain (i / it) :mod (g / good))
(d / do-02 :arg0 (p / person :name (n / name :op1 "Kari" :op2 "Kalin")) :arg1 (s / stretch :mod (s2 / some)) :arg2 (t / teammates :arg0 (p2 / person)) :manner (r / right))
(m / multi-sentence :snt1 (i / include-01 :arg1 (j / journalist :arg0-of (p / play-08 :arg1 (j2 / journalist))) :arg2 (p2 / person :arg0-of (p3 / play-01))) :snt2 (p4 / person :arg0-of (h / have-rel-role-91 :arg2 (r / relative))) :snt3 (a / and :op1 (p5 / person :arg0-of (h2 / have-rel-role-91 :arg2 (r2 / relative))) :op2 (p6 / person :arg0-of (h3 / have-rel-role-91 :arg2 (r3 / relative)))))
(m / matter-01 :polarity - :arg1 (s / shop :location (a / around)))
(c / come-01 :arg1 (r / rule-01) :time (a / after :op1 (s / summer :arg0-of (f / feature-01 :arg1 (a2 / and :op1 (p / protest-01 :mod (l / large :degree (m / most))) :op2 (p2 / protest-01 :quant (m2 / most) :location (c2 / city :name (n / name :op1 "Hong" :op2 "Kong")))) :time (a3 / after :op1 (s2 / summer) :quant (s3 / some :op1 (t / temporal-quantity :quant (N / N-A) :unit (y / year))))))))
(s / sell-01 :arg0 (' / '' :name (n / name :op1 ('2 / '') :op2 (c / calculus))) :arg1 (m / monetary-quantity :quant 93.49 :unit (d / dollar) :arg1-of (u / use-01 :arg2 (c2 / chegg.com))))
(c / contrast-01 :arg1 (t / try-01 :arg0 (i / i) :arg1 (c2 / close-01 :arg0 (i2 / i) :arg1 (m / mouth :part-of (i3 / i)))) :arg2 (a / and :op1 (l / locked :arg1 (i4 / it)) :op2 (c3 / come-01 :arg1 (i5 / i) :arg4 (r / realize-01 :arg0 (i6 / i) :arg1 (d / depend-01 :arg1 (s / something))) :time (t2 / then))))
(s / serve-01 :arg0 (w / we) :arg1 (s2 / society :mod (p / prejudice-free)))
(p / premiere :arg1 (f / film) :location (c / country :name (n / name :op1 "Finland")) :time (d / date-entity :month 9 :year 2015))
(s / say-01 :arg0 (p / person :name (n / name :op1 "Pauli" :op2 "Sivonen") :arg0-of (h / have-org-role-91 :arg1 (o / organization :name (n2 / name :op1 "Serlachius" :op2 "Museum")) :arg2 (d / director))) :arg1 (f / flooding :domain (p2 / person) :mod (j / just)))
(r / rehearsing :arg0 (p / person :name (n / name :op1 "Henry")) :arg1 (c / comedy) :arg2 (r2 / record :arg1-of (r3 / rare-02) :poss (p2 / person :name (n2 / name :op1 "Rudy")) :arg1-of (b / base-02 :arg2 (a / and :op1 (c2 / converse-01 :arg0 (p3 / person) :arg1 (p4 / person :arg0-of (h / have-rel-role-91 :arg1 (p5 / person) :arg2 (f / father)))) :op2 (g / grow-03 :arg0 (p6 / person) :arg1 (s / series :quant 4))))))
(f / follow-01 :arg1 (a / apollo) :arg2 (m / majority :mod (r / rate-entity-91 :arg1 (m2 / monetary-quantity :quant 850 :unit (d / dollar)) :arg2 (v / volume-quantity :quant (N / N-A) :unit (g / gallon)))))
(a / and :op1 (w / warn-01 :arg0 (a2 / agent :mod (e / estate :location (c / city :name (n / name :op1 "London")))) :arg1 (d / decline-01 :arg1 (r / rate :arg1-of (l / low-04 :degree (m / more))) :mod (a3 / also)) :mod (a4 / also)) :op2 (o / overturn-01 :arg0 (a5 / agent) :arg1 (r2 / rate :arg1-of (l2 / low-04 :degree (m2 / more))) :mod (a6 / also) :time (a7 / and :op1 (t / transact-01 :arg1 (s / sell-01 :arg1 (p / property))) :op2 (t2 / thing :arg2-of (p2 / price-01))) :time (y / year :ord (o2 / ordinal-entity :value 2) :part-of (y2 / year :ord (o3 / ordinal-entity :value 2)))))
(m / multi-sentence :snt1 (e / end-up-03 :mode (i / interrogative) :arg1 (p / person :name (n / name :op1 "Jennifer" :op2 "Lawrence") :arg0-of (e2 / exemplify-01)) :arg2 (v / victim :arg0 (p2 / person) :arg1 (v2 / victim))) :snt2 (c / campaign :mode (i2 / interrogative) :mod (p3 / pic)))
(t / take-01 :arg0 (s / she) :arg1 (p / picture :mod (t2 / that)) :time (b / before :op1 (n / now) :quant (t3 / temporal-quantity :quant (N / N-A) :unit (y / year))) :accompanier (p2 / person :arg0-of (h / have-rel-role-91 :arg1 (s2 / she) :arg2 (h2 / husband))))
(a / and :op1 (r / rowboat :domain (b / boat) :mod (k / kalapalta)) :op2 (c / coloured :arg1 (b2 / boat) :location (i / inside :op1 (i2 / inside))) :op3 (y / yellowish :arg1 (b3 / boat) :location (i3 / inside)))
(c / converse-01 :polarity - :arg0 (i / i) :arg2 (h / he) :time (e / ever) :arg1-of (r / resemble-01 :arg2 (t / that)))
(i / i :quant 22 :domain (i2 / i))
(e / exist-01 :arg1 (p / past :mod (p2 / past)) :arg1-of (c / cause-01 :arg0 (f / forget-01 :arg0 (w / we) :arg1 (i / it))))
(a / and :op1 (r / rescued :arg1 (p / person :arg0-of (h / have-org-role-91 :arg2 (m / mp)))) :op2 (m2 / miss-01 :arg1 (p2 / person :quant 2) :mod (s / still)))
(a / and :op1 (r / reach-01 :polarity - :arg1 (a2 / agree-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (g / government-organization :arg0-of (g2 / govern-01 :arg1 (o / organization :name (n / name :op1 "Justice" :op2 "Ministry")))) :arg2 (p2 / person :arg0-of (r2 / represent-01 :arg1 (o2 / organization)))))) :concession (m / meet-03 :arg0 (a3 / and :op1 (p3 / person :arg0-of (h2 / have-org-role-91 :arg1 (p4 / prison) :arg2 (o3 / officer))) :op2 (p5 / person :arg0-of (r3 / represent-01 :arg1 (o4 / organization))) :op3 (p6 / person :arg0-of (r4 / represent-01 :arg1 (o5 / organization))))) :concession (m2 / meet-03 :arg0 (a4 / and :op1 (p7 / person :arg0-of (h3 / have-org-role-91 :arg1 (p8 / prison) :arg2 (o6 / officer))) :op2 (p9 / person :arg0-of (r5 / represent-01 :arg1 (o7 / organization)))))))
(c / contrast-01 :arg1 (h / have-03 :polarity - :arg0 (p / person :name (n / name :op1 "Francois" :op2 "Hollande" :op3 "the" :op4 "Emperor")) :arg1 (c2 / clothes)) :arg2 (h2 / have-03 :polarity - :arg0 (p2 / person) :arg1 (p3 / person :name (n2 / name :op1 "Manuel" :op2 "Valls") :arg0-of (f / force-01 :arg1 (p4 / person) :arg2 (p5 / put-01 :arg0 (p6 / person) :arg1 (g / government-organization :arg0-of (g2 / govern-01) :mod (n3 / new)) :arg2 (t / together) :time (s / survive-01 :polarity - :arg0 (p7 / person :quant 1) :mod (e / even) :time (s2 / summer)))))))
(a / adapt-01 :arg0 (c / child) :arg1 (p / person :arg0-of (h / have-rel-role-91 :arg1 (c2 / child) :arg2 (c3 / child))) :arg2 (a2 / and :op1 (p2 / person :arg0-of (h2 / have-rel-role-91 :arg1 (c4 / child) :arg2 (c5 / child))) :op2 (p3 / person :arg0-of (c6 / carry-01 :arg1 (b / balloons)) :arg0-of (c7 / carry-01 :arg1 (b2 / balloons))) :op3 (g / give-01 :arg1 (f / flower) :arg2 (p4 / person :arg0-of (t / teach-01 :arg1 (f2 / flower))))) :time (d / day :ord (o / ordinal-entity :value 1) :location (s / school)) :mod (t2 / tradition))
(l / learn-01 :arg0 (h / he) :arg1 (l2 / lesson :arg1-of (h2 / hard-04)))
FAILED_TO_PARSE#Couldn't convert to full AMR graph.
(d / draw-02 :arg0 (t / that) :arg1 (c / complain-01 :arg0 (g / group :mod (w / watchdog :mod (l / left-leaning))) :mod (f / formal)))
FAILED_TO_PARSE#Two concepts in a row.
(m / multi-sentence :snt1 (s / say-01 :arg0 (l / location :name (n / name :op1 "Mogwai")) :arg1 (r / referendum :domain (r2 / referendum))) :snt2 (o / opportunity :time (l2 / lifetime :duration (l3 / lifetime))))
(c / contrast-01 :arg2 (e / explain-01 :polarity - :arg0 (t / that) :arg1 (t2 / thing :arg0-of (c2 / cause-01 :arg1 (s / sing-01 :arg0 (y / you) :arg1 (i / it) :arg2 (i2 / i)))) :mod (s2 / still)))
(w / way :quant 101 :mod (g / good :degree (m / most)) :arg0-of (c / cause-01 :arg1 (d / deal)) :domain (h / here))
(c / contrast-01)
(p / photo :topic (f / fall-01 :arg1 (p2 / person :name (n / name :op1 "Lasse" :op2 "Virén")) :arg4 (g / game :mod (o / olympic) :location (c / city :name (n2 / name :op1 "Munich")))) :degree (m / most))
(t / then :time (t2 / then))
(g / great :domain (s / see-01 :arg1 (g2 / get-02 :arg0 (o / other) :arg1 (c / clue) :mod (a / also))) :time (n / now))
(m / multi-sentence :snt1 (w / win-01 :arg0 (p / person :name (n / name :op1 "Croze")) :arg1 (a / award :name (n2 / name :op1 "N-A")) :arg2 (a2 / actress :mod (g / good :degree (m2 / most)) :location (f / festival :quant 2003 :name (n3 / name :op1 (c / cannes))))) :snt2 (i / invade-01 :arg0 (i2 / invade-01 :mod (b / barbarians))))
(d / dived :arg0 (t / team :mod (b / basketball) :mod (n / nation)) :arg1-of (d2 / deep-02) :time (a / after :op1 (c / city :name (n2 / name :op1 "Athens"))))
(a / and :op2 (r / return-02 :arg0 (b / board :mod (c / city)) :arg1 (t / thing :arg1-of (p / propose-01) :arg1-of (p2 / prepare-01 :arg0 (b2 / board :mod (d / directors)))) :arg2 (b3 / board :mod (c2 / city))))
(m / make-01 :arg0 (p / person :mod (v / volleyball)) :arg1 (m2 / move :mod (s / same)) :time (e / early :degree (m3 / more) :degree (b / bit)))
(( / ( :( (n / name) :op1 "Seppo" :op2 "Sirkka")
(o / obligate-01 :arg2 (f / fight-01 :arg0 (w / we) :arg2 (s / sky :mod (p / peaceful))))
(t / try-01 :arg0 (i / i) :arg1 (c / carry-01 :arg0 (i2 / i) :arg1 (i3 / it)) :concession-of (o / obligate-01 :arg1 (i4 / i) :arg2 (l / let-01 :arg0 (i5 / i) :arg1 (b / be-02 :arg1 (i6 / it)))))
(a / and :op2 (s / say-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg2 (m / mayor))) :arg1 (d / do-02 :arg0 (h2 / he) :arg1 (s2 / so) :mod (a2 / also) :time (f / future))))
(s / see-01 :mode (i / imperative) :arg0 (y / you) :arg1 (p / photograph-01 :arg1 (e / ecstasy :mod (f / fan))))
(r / remove-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg2 (a / agent :mod (e / estate)))) :arg1 (p2 / picture-01 :arg1 (s / sell-01 :arg1 (s2 / sell-01 :location (u / university :name (n / name :op1 "Suffolk"))))) :arg2 (p3 / person :arg0-of (h2 / have-org-role-91 :arg2 (a2 / agent))) :time (e2 / emerge-02 :arg0 (p4 / person) :arg1 (s3 / show-01 :arg0 (p5 / person) :arg1 (p6 / pig :mod (l / large) :location (r2 / room :mod (l2 / live-01))))))
(o / own-01 :arg0 (m / municipal) :arg1 (a / area) :duration (t / temporal-quantity :quant (N / N-A) :unit (y / year)))
(c / contrast-01 :arg1 (s / shout-01 :arg0 (p / person :name (n / name :op1 "Isabelle" :op2 "Roberts") :source (c2 / country :name (n2 / name :op1 "UK"))) :arg1 (h / hard-02 :arg1 (i / install-01 :arg1 (w / water)))) :arg2 (d / damage-01 :arg0 (h2 / head :part-of (p2 / person)) :arg1 (s2 / structure :mod (b / bone :part-of (f / face :part-of (p3 / person))))))
(a / and :op1 (l / live-01 :arg0 (p / person :arg0-of (r / research-01)) :arg1 (r2 / rate-entity-91 :arg1 (m / more-than :op1 (m2 / monetary-quantity :quant (N / N-A))) :arg2 (t / temporal-quantity :quant (N2 / N-A) :unit (y / year))) :arg2 (c / cancer :mod (m3 / medicine) :mod (c2 / country :name (n / name :op1 "N-A")))) :op2 (f / find-01 :arg0 (p2 / person) :arg1 (r3 / rate-entity-91 :arg1 (u / under :op1 (t2 / temporal-quantity :quant (N3 / N-A) :unit (y2 / year)) :mod (j / just)) :arg2 (t3 / temporal-quantity :quant (N4 / N-A) :unit (y3 / year))) :time (a2 / after :op1 (w / war :name (n2 / name :op1 "N-A")))))
(a / and :op1 (d / damage-01 :arg1 (a2 / attack-01 :mod (i / israeli))) :op2 (d2 / destroy-01 :arg0 (a3 / attack-01) :arg1 (t / thousands :arg1 (h / home :location (c / country-region :name (n / name :op1 "Gaza"))))) :op3 (t2 / turn-02 :arg1 (p / person :quant 250,000 :arg1-of (e / estimate-01)) :arg2 (r / refuge)))
(s / say-01 :arg0 (p / person :arg0-of (r / report-01)) :arg1 (c / consider-02 :arg0 (p2 / person :arg0-of (r2 / report-01)) :arg1 (d / display-01 :arg0 (p3 / person) :arg1 (c2 / center) :mod (o / only) :prep-as (r3 / resort :mod (l / last))) :arg1-of (c3 / cause-01 :arg0 (a / and :op1 (c4 / chance-02 :arg1 (d2 / dialogue-01) :quant (a2 / all)) :op2 (c5 / choose-01 :polarity - :mod (o2 / other))))) :medium (s2 / statement :mod (o3 / online)))
(m / multi-sentence :snt1 (a / act-01 :mode (i / interrogative) :arg0 (s / she) :arg1 (e / exemplify-01 :arg0 (m2 / movie :mod (s2 / spielberg?s)))) :snt2 (a2 / and :op1 (s3 / some :mode (i2 / interrogative)) :op2 (b / butterfly :arg1 (f / film :mod (s4 / schnabel?s)))))
(m / multi-sentence :snt1 (l / launch-01 :arg1 (c / career :mod (t / tv) :poss (h / he)) :location (m2 / mid-seventies :arg1-of (l2 / long-03 :arg2 (t2 / time :arg1-of (l3 / long-03 :degree (q / quite)))))) :snt2 (i / impressionist/comedian :mode (e / expressive) :arg1-of (l4 / long-03 :degree (q2 / quite)) :domain (i2 / i)))
(c / contrast-01 :arg1 (k / know-01 :arg0 (i / i) :arg1 (e / event :mod (a / amr-unknown))) :arg2 (g / get-01 :arg0 (i2 / i) :arg1 (s / state :mod (f / flow-01 :arg1 (e2 / everything)) :arg1-of (s2 / succeed-01 :arg0 (i3 / i))) :mod (j / just)))
(s / say-01 :arg0 (p / person :name (n / name :op1 "Matt" :op2 "Casaday") :arg0-of (h / have-org-role-91 :arg1 (o / organization :name (n2 / name :op1 "Brigham" :op2 "Young" :op3 "University")) :arg2 (s2 / senior :mod (s3 / senior)))) :arg1 (p2 / pay-01 :arg0 (p3 / person) :arg1 (m / monetary-quantity :quant 42 :unit (c / cent)) :arg2 (o2 / organization :name (n3 / name :op1 "Amazon.com")) :purpose (t / thing :arg2-of (c2 / copy-01 :arg1 (t2 / thing :arg2-of (c3 / copy-01 :arg1 (t3 / thing :arg1-of (d / decide-01 :arg0 (m2 / media)) :mod (s4 / strategy) :mod (s5 / strategic))))) :arg1-of (u / use-01))))
(t / take-01 :arg1 (2 / 20-year-old :source (c / country :name (n / name :op1 "UK"))) :arg3 (h / hospital) :time (a / after :op1 (t2 / take-01 :arg0 (p / person) :arg1 (p2 / part) :location (c2 / craze :mod (l / lung) :location (t3 / tuesday)))))
(e / equal-01 :arg2 7.1 :arg1 (p / profit-01))
(a / and :op1 (h / home :domain (r / region :mod (e / email) :poss (c / country :name (n / name :op1 "Russia")))) :op2 (h2 / home :domain (a2 / and :op1 (o / openness) :op2 (f / factory) :op3 (f2 / foundries) :arg0-of (p / produce-01 :arg1 (c2 / component :mod (v / vital)) :beneficiary (m / military :mod (c3 / country :name (n2 / name :op1 "Russia")))))))
(a / and :op1 (u / urge-01 :arg0 (h / he) :arg1 (c / child) :arg2 (s / study-01 :arg0 (c2 / child) :arg1-of (h2 / hard-02))) :op2 (s2 / say-01 :arg0 (h3 / he) :arg1 (e / ensure-01 :arg0 (w / we) :arg1 (a2 / and :op1 (p / provide-01 :arg0 (c3 / child) :arg1 (t / thing :arg1-of (k / know-01))) :op2 (p2 / provide-01 :arg0 (w2 / we) :arg1 (s3 / security) :arg2 (y / you))))))
(m / multi-sentence :snt1 (k / keep-04 :arg1 (f / face :part-of (f2 / face)) :arg2 (a / and :op1 (p / person :name (n / name :op1 "Kirsti" :op2 "Alm-Siira")) :op2 (p2 / person :name (n2 / name :op1 "Nina" :op2 "Rahkola")))) :snt2 (a2 / and :op1 (p3 / person :name (n3 / name :op1 "Huomenta" :op2 "Suomi") :arg0-of (h / have-org-role-91 :arg2 (m2 / meteorologist))) :op2 (p4 / person :name (n4 / name :op1 "Pekka" :op2 "Pouta") :arg0-of (h2 / have-org-role-91 :arg2 (m3 / meteorologist))) :domain (a3 / and :op1 (p5 / person :name (n5 / name :op1 "Pekka" :op2 "Pouta") :arg0-of (h3 / have-org-role-91 :arg2 (m4 / meteorologist))) :op2 (p6 / person :name (n6 / name :op1 "Pekka" :op2 "Pouta") :arg0-of (h4 / have-org-role-91 :arg2 (m5 / meteorologist)))) :mod (d / definite)))
(c / check-out-05 :mode (i / imperative) :arg0 (y / you) :arg1 (a / and :op1 (g / guide-01 :arg1 (w / we)) :op2 (r / rate-01 :arg2 (c2 / cameras :mod (d / digital)) :purpose (a2 / and :op1 (m / model :mod (c3 / conventional)) :op2 (m2 / model :mod (w2 / waterproof)) :mod (b / both)))))
(a / and :op2 (c / come-01 :arg1 (p / person :quant (a2 / around :op1 150)) :arg4 (t / together) :location (l / location :name (n / name :op1 "Cardiff")) :arg1-of (d / describe-01 :arg2 (t2 / thing :arg1-of (d2 / describe-01 :arg2 (c2 / counter-summit)))) :location (l2 / location :name (n2 / name :op1 "Cardiff"))))
FAILED_TO_PARSE#Couldn't convert to full AMR graph.
(m / multi-sentence :snt1 (s / series :mode (i / interrogative) :domain (t / this)) :snt2 (l / live-01 :mode (i2 / interrogative) :arg0 (a / and :op1 (p / person :name (n / name :op1 "Vesa-Matti" :op2 "Loiri")) :op2 (p2 / person :name (n2 / name :op1 "Samuli" :op2 "Edelmann")) :op3 (p3 / person :name (n3 / name :op1 "Paula" :op2 "Koivuniemi")) :op4 (p4 / person :name (n4 / name :op1 "Paula" :op2 "Vesala")) :op5 (p5 / person :name (n5 / name :op1 "Jenni" :op2 "Vartiainen")) :op6 (p6 / person :name (n6 / name :op1 "Elastinen")) :op7 (p7 / person :name (n7 / name :op1 "Toni" :op2 "Wirtanen")))))
(f / fund-01 :arg0 (p / person :name (n / name :op1 "Perry")) :arg1 (o / office :poss (s / she)) :time (r / refuse-01 :arg0 (p2 / person) :arg1 (r2 / resign-01 :arg0 (p3 / person)) :arg1-of (l / lead-03 :arg2 (j / jury :mod (g / grand) :location (c / city :name (n2 / name :op1 "Austin"))) :arg1-of (l2 / lead-03 :arg2 (c2 / candidate :quant 2016 :mod (p4 / president :mod (p5 / potential)))))))
(l / love-01 :arg0 (i / i) :arg1 (r / room :mod (r2 / rehearsal)))
(m / multi-sentence :snt1 (i / it :polarity - :topic (m2 / make-01 :arg1 (m3 / money) :time (a / anymore)) :domain (i2 / it)) :snt2 (t / tell-01 :arg0 (b / businessman :quant (m4 / multiple :op1 1)) :arg1 (i3 / it) :arg2 (c / court)))
(d / demand-01 :arg0 (p / person :name (n / name :op1 "Vladimir" :op2 "Putin") :arg0-of (h / have-org-role-91 :arg1 (c / country :name (n2 / name :op1 "N-A")) :arg2 (p2 / president))) :arg1 (a / and :op1 (c2 / cease-01 :arg0 (c3 / cease-01 :arg0 (g / government-organization :arg0-of (g2 / govern-01 :arg1 (c4 / country :name (n3 / name :op1 "N-A")))) :arg1 (b / battle-01 :arg0 (g3 / government-organization) :arg1 (s / separatist) :location (e / east :part-of (c5 / country)))) :arg1 (c6 / cease-01 :arg0 (g4 / government-organization) :arg1 (n4 / negotiate-01 :arg0 (g5 / government-organization) :arg1 (s2 / separatist) :location (e2 / east :part-of (c7 / country))))) :op2 (b2 / begin-01 :arg0 (g6 / government-organization) :arg1 (n5 / negotiate-01 :arg0 (g7 / government-organization) :arg1 (s3 / statehood :location (r / region :name (n6 / name :op1 (' / ''))))) :time (i / immediate))))
(d / demand-01 :arg0 (p / person :name (n / name :op1 "Vladimir" :op2 "Putin") :arg0-of (h / have-org-role-91 :arg1 (c / country :name (n2 / name :op1 "N-A")) :arg2 (p2 / president))) :arg1 (a / and :op1 (c2 / cease-01 :arg0 (c3 / cease-01 :arg0 (g / government-organization :arg0-of (g2 / govern-01 :arg1 (c4 / country :name (n3 / name :op1 "N-A")))) :arg1 (b / battle-01 :arg0 (g3 / government-organization) :arg1 (s / separatist) :location (e / east :part-of (c5 / country)))) :arg1 (c6 / cease-01 :arg0 (g4 / government-organization) :arg1 (n4 / negotiate-01 :arg0 (g5 / government-organization) :arg1 (s2 / separatist) :location (e2 / east :part-of (c7 / country))))) :op2 (b2 / begin-01 :arg0 (g6 / government-organization) :arg1 (n5 / negotiate-01 :arg0 (g7 / government-organization) :arg1 (s3 / statehood :location (r / region :name (n6 / name :op1 (' / ''))))) :time (i / immediate))))
(p / person :polarity - :arg0-of (l / live-01 :arg1 (c / council)) :arg1-of (c2 / cause-01 :arg0 (p2 / problem :mod (t / technical))))
(b / be-located-at-91 :arg1 (l / location :name (n / name :op1 "Black" :op2 "Sea")) :arg2 (h / home) :time (b2 / before :op1 (n2 / now) :quant (t / temporal-quantity :quant (N / N-A) :unit (m / month))) :location (h2 / home :poss (c / country :name (n3 / name :op1 "Russia")) :mod (m2 / main) :example (a / and :op1 (f / facility :mod (s / sea :mod (c2 / commerce))) :op2 (f2 / facility :mod (s2 / sea) :mod (c3 / commerce) :mod (c4 / commerce)))))
(a / alternative :mod (v / vegetarian) :domain (o / offer-01 :arg0 (p / person :arg0-of (s / study-01)) :arg1 (p2 / permit-01 :arg0 (a2 / and :op1 (p3 / person :arg0-of (h / have-rel-role-91 :arg2 (p4 / parent))) :op2 (c / certificate :mod (v2 / vegetarian) :arg1-of (o2 / obtain-01 :arg2 (o3 / or :op1 (d / doctor) :op2 (p5 / person :arg0-of (h2 / have-org-role-91 :arg2 (n / nurse :mod (h3 / health)))))))) :arg1 (p6 / person :arg0-of (s2 / study-01)) :location (s3 / school) :mod (o4 / only))) :time (t / today))
(c / contrast-01 :arg1 (s / shout-01 :arg0 (p / person :name (n / name :op1 "Isabelle" :op2 "Roberts") :source (c2 / country :name (n2 / name :op1 "UK"))) :arg1 (h / hard-02 :arg1 (i / install-01 :arg1 (w / water)))) :arg2 (d / damage-01 :arg0 (h2 / head :part-of (p2 / person)) :arg1 (s2 / structure :mod (b / bone :part-of (f / face :part-of (p3 / person))))))
(s / say-01 :arg0 (h / he) :arg1 (a / and :op1 (r / remain-01 :arg1 (d / duty :poss (w / we)) :arg3 (s2 / side :poss (h2 / he))) :op2 (s3 / say-01 :arg0 (h3 / he) :arg1 (t / thing :arg1-of (s4 / say-01 :arg0 (h4 / he))))))
(b / boy :arg0-of (s / shock-01 :arg1 (i / image :mod (s2 / shock-01)) :time (a / after :op1 (c / come-01 :arg1 (s3 / siege)))))
FAILED_TO_PARSE#Couldn't convert to full AMR graph.
(i / important :domain (h / have-condition-91 :arg1 (h2 / have-03 :arg0 (y / you) :arg1 (a / and :op1 (d / device :arg1-of (f / fix-03)) :op2 (l / lenses :arg1-of (w / wide-02))) :frequency (o / often) :arg1-of (m / mean-01 :arg2 (o2 / obligate-01 :arg1 (y2 / you) :arg2 (g / get-01 :arg0 (y3 / you) :arg1 (m2 / more :compared-to (s / subject :poss (y4 / you)))) :condition (w2 / want-01 :arg0 (y5 / you) :arg1 (f2 / filled :arg0 (y6 / you) :arg1 (f3 / frame :part-of (p / picture))))))) :arg2 (s2 / shooting :mod (a2 / action))) :mod (p2 / particular))
(t / thing :arg0-of (p / play-12 :arg2 (p2 / person :name (n / name :op1 "Harvey"))) :mod (l / lotto))
(i / include-91 :arg1 (s / state :quant 11 :arg0-of (p / pass-01 :arg1 (l / law :arg1-of (r / resemble-01)))) :arg2 (s2 / state-01 :arg0 (c / court) :arg1 (l2 / law :arg1-of (r2 / resemble-01) :arg0-of (o / oppose-01 :arg1 (a / and :op1 (p2 / peninsula :name (n / name :op1 "N-A")) :op2 (a2 / aircraft-type :name (n2 / name :op1 "N-A"))) :time (r3 / recent)))))
(s / say-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (n / needles :mod (a / asbestos)) :arg2 (t / tissues :mod (l / lung)))) :arg1 (t2 / treasure :arg1 (a2 / act-02 :arg0 (s2 / slash :op1 (a3 / act-02 :arg0 (p2 / person)) :op2 (b / be-located-at-91 :arg1 (p3 / person) :arg2 (p4 / periphery)) :arg2-of (b2 / be-located-at-91 :arg1 (l2 / lining))))) :time (o / once :op1 (g / get-05 :arg1 (n2 / needle :mod (a4 / asbestos)) :arg2 (t3 / tissues :mod (l3 / lung)))))
(o / old :polarity - :domain (p / person :name (n / name :op1 "Andrew" :op2 "Lawson")))
(m / multi-sentence :snt1 (f / fear-01 :arg0 (w / we) :mod (l / little)) :snt2 (c / contrast-01 :arg1 (s / say-01 :arg0 (i / i) :arg1 (f2 / fear-01 :arg0 (w2 / we) :mod (l2 / little))) :arg2 (s2 / say-01 :arg0 (i2 / i) :arg1 (a / and :op1 (r / reside-01 :arg0 (p / person :name (n / name :op1 "Ronit" :op2 "Bart")) :arg1 (p2 / person :name (n2 / name :op1 "Kibbutz" :op2 "Saad"))) :op2 (r2 / reside-01 :arg0 (p3 / person) :arg1 (p4 / person :mod (c2 / country) :arg0-of (t / teach-01)) :location (s3 / school :poss (p5 / person)))))))
(c / contrast-01 :arg2 (p / possible-01 :arg1 (u / uncover :arg0 (w / we) :arg1 (d / dimension :arg1-of (m / mean-01 :arg2 (e / effort :mod (g / great) :mod (o / only)))) :arg2 (p2 / piece :mod (o2 / or :op1 (h / hair) :op2 (c2 / capillary))))))
(c / contrast-01 :arg1 (a / and :op1 (r / recommend-01 :arg0 (y / you) :arg1 (v / visit-01 :arg0 (y2 / you) :arg1 (d / doctor :mod (p / particular)) :mod (a2 / again))) :op2 (h / have-03 :arg0 (y3 / you) :arg1 (i / issue-02 :arg0 (d2 / doctor) :arg1-of (w / write-01)))) :arg2 (d3 / document :mod (o / only) :source (- / -rrb- :mod (p2 / physician))) :time (r2 / recommend-01 :arg1 (a3 / and :op1 (v2 / visit-01 :arg0 (y4 / you) :arg1 (d4 / doctor :mod (p3 / particular)) :mod (a4 / again)) :op2 (h2 / have-03 :arg0 (y5 / you) :arg1 (i2 / issue-02 :arg0 (d5 / doctor))))))
(p / price-01 :arg2 43,405 :mod (e / exact))
(a / and :op1 (g / gobsmacked :arg1 (i / i)) :op2 (b / be-located-at-91 :arg1 (i2 / i) :arg2 (s / state :arg1-of (b2 / bad-07 :degree (m / most)) :mod (p / panic-01 :manner (p2 / panic-01)))) :time (g2 / get-01 :arg0 (i3 / i) :arg1 (i4 / information)))
(a / and :op1 (r / realize-01 :arg0 (i / i) :arg1 (d / do-02 :arg0 (h / he) :arg1 (t / that) :duration (t2 / temporal-quantity :quant (N / N-A) :unit (y / year)) :purpose (p / put-01 :arg0 (h2 / he) :arg1 (f / food) :arg2 (t3 / table)))) :op2 (e / estimation :arg0 (i2 / i) :arg1 (t4 / thing :arg1-of (e2 / estimate-01 :arg0 (i3 / i) :arg2 (h3 / he)))) :time (w / walk-01 :arg0 (i4 / i) :destination (r2 / round)))
(l / landed :time (b / before :op1 (n / now) :quant (m / multiple :op1 (t / temporal-quantity :quant (N / N-A) :unit (y / year)))) :location (l2 / location :name (n2 / name :op1 "Dunkerque")))
(c / contrast-01 :arg1 (l / like-01 :arg0 (h / he) :arg1 (b / boy :arg1-of (l2 / like-01 :arg0 (h2 / he)))) :arg2 (t / take-01 :polarity - :arg0 (h3 / he) :arg1 (p / part) :arg1-of (c2 / cause-01 :arg0 (k / knee :arg0 (h4 / he)))))
(c / contrast-01 :arg2 (c2 / connect-01 :polarity - :arg1 (c3 / company :name (n / name :op1 "Abbott")) :arg2 (c4 / case :poss (h / he)) :time (t / then :mod (e / even))))
(h / have-concession-91 :arg1 (r / remember-01 :arg0 (i / i) :arg1 (s / shouting :arg1 (i2 / i) :arg2 (p / person :name (n / name :op1 "Damir") :arg0-of (r2 / run-02 :arg1 (h2 / he))))) :arg2 (s2 / sure-02 :arg0 (i3 / i) :arg1 (h3 / hear-01 :polarity - :arg0 (i4 / i) :arg1 (h4 / hear-01 :polarity - :arg0 (i5 / i) :arg1 (i6 / i)))))
(t / thing :mod (a / another) :arg0-of (t2 / translation :arg1 (w / write-01 :arg0 (p / person :mod (a2 / atheist) :mod (a3 / atheist) :mod (a4 / atheist)))) :mod (a5 / another))
(a / and :op1 (e / employ-01 :arg0 (p / person :arg1-of (e2 / employ-01 :arg0 (r / rocket))) :arg1 (t / thing :arg0-of (m / mark-01 :arg1 (r2 / rocket))) :location (o / off :op1 (v / value-interval :op1 (N / N-A) :op2 (k / kindergarten)))) :op2 (r3 / remove-01 :arg0 (p2 / person) :arg1 (t2 / thing :arg0-of (s / shield-01 :arg2 (s2 / shrapnel))) :location (a2 / ahead :op1 (p3 / person :arg0-of (s3 / study-01))) :time (a3 / arrive-01 :arg1 (p4 / person) :arg4 (a4 / ahead :op1 (p5 / person :arg0-of (s4 / study-01))))) :location (s5 / south :part-of (l / location :name (n / name :op1 "Ashdod"))))
(a / and :op1 (s / seem-01 :arg1 (e / expect-01 :arg0 (t / they) :arg1 (c / crash-01 :arg1 (c2 / car)))) :op2 (d / do-02 :polarity - :arg0 (t2 / they) :arg1 (c3 / car) :mod (q / quite)))
(f / feature-01 :arg0 (u / url-entity :value (p / particulars)) :arg1 (p2 / picture-01 :arg1 (r / room :mod (l / live-01) :arg0-of (i / include-01 :arg1 (p3 / pig) :arg2 (r2 / resting :mod (h / head)) :medium (s / settee :mod (h2 / head))))))
(a / and :op1 (f / focus-01 :arg0 (w / we) :arg2 (a2 / area :mod (s / small) :part-of (i / image :mod (p / previous)))) :op2 (e / enlarge :arg0 (w2 / we) :arg1 (c / cause-01 :arg1 (b / become-01 :arg1 (i2 / it) :arg2 (s2 / see-01 :arg0 (w3 / we))))) :medium (i3 / image :mod (s3 / subsequent :mod (e2 / each))))
(e / example :mod (g / good) :domain (e2 / example :mod (g2 / good)) :location (c / country :name (n / name :op1 "Italy")) :prep-with (b / board :quant 42 :arg0-of (p / play-01 :arg1 (t / thing :quant 42 :arg0-of (p2 / play-01)))))
(a / and :op2 (n / need-01 :polarity - :arg0 (y / you) :arg1 (f / faith :purpose (b / believe-01 :arg0 (y2 / you) :arg1 (i / it)))) :arg1-of (c / cause-01 :arg0 (a2 / and :op1 (c2 / consistent-01 :arg1 (i2 / it) :arg2 (t / thing :arg0-of (e / evidence-01) :quant (a3 / all))) :op2 (r / reveal-01 :arg0 (y3 / you) :arg1 (m / morality :mod (p / profound)) :manner (a4 / and :op1 (m2 / morality :mod (p2 / profound)) :op2 (w / wisdom)) :location (b2 / beyond :op1 (c3 / capacity :mod (h / human)))))))
(p / prepare-02 :arg1 (p2 / person :arg1-of (i / include-91 :arg2 (t / this) :arg3 (m / most))) :arg2 (a / and :op1 (b / bring-01 :arg0 (p3 / person) :arg1 (f / flower) :arg2 (a2 / area :location-of (s / storage :mod (s2 / summer)) :poss (p4 / person)) :direction (b2 / back) :destination (a3 / area :location-of (s3 / storage :mod (s4 / summer)) :poss (p5 / person)) :direction (b3 / back)) :op2 (p6 / prepare-02 :arg0 (p7 / person))) :mod (r / routine))
(b / believe-01 :arg1 (c / contribute-01 :arg0 (c2 / condition :mod (s / squally)) :arg2 (l / land-01 :arg1 (f / fly-01 :source (o / organization :name (n / name :op1 "Virgin" :op2 "Airlines")) :destination (c3 / city :name (n2 / name :op1 "Melbourne"))))))
(c / contrast-01 :arg1 (r / respond-01 :polarity - :arg0 (p / person :arg0-of (r2 / represent-01 :arg1 (p2 / person :arg0-of (r3 / represent-01)))) :arg1 (r4 / request-01 :arg0 (p3 / person) :arg1 (c2 / comment-01 :arg0 (p4 / person)))) :arg2 (d / decline-02 :arg0 (p5 / person :arg0-of (h / have-org-role-91 :arg1 (a / apollo) :arg2 (s / spokesman))) :arg1 (c3 / comment-01 :arg0 (p6 / person))))
(a / and :op1 (t / tarabus :arg0 (y / you) :arg1 (c / car)) :op2 (b / be-located-at-91 :arg1 (y2 / you) :arg2 (t2 / top) :duration (t3 / time :arg1-of (l / long-03)) :mod (a2 / also)))
(f / fun :domain (i / it) :mod (g / good))
(s / say-01 :arg0 (a / and :op1 (p / person :arg0-of (c / campaign-01 :arg1 (r / right))) :op2 (p2 / person :arg0-of (h / have-org-role-91 :arg1 (o / organization :name (n / name :op1 "American" :op2 "College" :op3 "of" :op4 "Obstetricians")))) :op3 (p3 / person :arg0-of (h2 / have-org-role-91 :arg1 (o2 / organization :name (n2 / name :op1 "American" :op2 "Medical" :op3 "Association")))) :op4 (p4 / person :arg0-of (h3 / have-org-role-91 :arg1 (o3 / organization) :arg3 (c2 / campaign-01))) :op5 (p5 / person :arg0-of (h4 / have-org-role-91 :arg1 (o4 / organization) :arg3 (c3 / campaign-01))) :op6 (p6 / person :arg0-of (h5 / have-org-role-91 :arg1 (o5 / organization) :arg3 (c4 / campaign-01))) :op6 (p7 / person :arg0-of (h6 / have-org-role-91 :arg1 (o6 / organization) :arg3 (c5 / campaign-01))) :op6 (p8 / person :arg0-of (h7 / have-org-role-91 :arg1 (o7 / organization) :arg3 (c6 / campaign-01))) :op6 (p9 / person :arg0-of (h8 / have-org-role-91 :arg1 (o8 / organization) :arg3 (c7 / campaign-01))) :op6 (p10 / person :arg0-of (h9 / have-org-role-91 :arg1 (o9 / organization) :arg3 (c8 / campaign-01))) :op6 (p11 / person :arg0-of (h10 / have-org-role-91 :arg1 (o10 / organization) :arg3 (c9 / campaign-01))) :op6 (p12 / person :arg0-of (h11 / have-org-role-91 :arg1 (o11 / organization) :arg3 (c10 / campaign-01))) :op6 (p13 / person :arg0-of (h12 / have-org-role-91 :arg1 (o12 / organization) :arg3 (c11 / campaign-01))) :op6 (p14 / person :arg0-of (h13 / have-org-role-91 :arg1 (o13 / organization) :arg3 (c12 / campaign-01))) :op6 (p15 / person :arg0-of (h14 / have-org-role-91 :arg1 (o14 / organization) :arg3 (c13 / campaign-01))) :op6 (p16 / person :arg0-of (h15 / have-org-role-91 :arg1 (o15 / organization) :arg3 (c14 / campaign-01))) :op6 (p17 / person :arg0-of (h16 / have-org-role-91 :arg1 (o16 / organization) :arg3 (c15 / campaign-01)))))
(i / inform-01 :arg1 (o / organization :name (n / name :op1 "Hamas")) :arg2 (l / liquidations :arg0 (o2 / organization) :arg1 (s / state :mod (c / country :name (n2 / name :op1 "Israel")) :mod (c2 / cost :mod (a / any)))))
(c / contrast-01 :arg1 (h / hurt-01 :arg1 (p / person :quant 3 :arg1-of (f / finish-01))) :arg2 (n / need-01 :arg1 (m / make-01 :arg1 (i / it)) :mod (r / really)))
(a / and :op1 (t / true :domain (h / help-01 :arg1 (c / country-region :name (n / name :op1 "Gaza"))) :mod (t2 / true) :mod (o / only)) :op2 (a2 / and :op1 (r / remove-01 :arg1 (r2 / region :mod (t3 / tense))) :op2 (a3 / and :op1 (r3 / remove-01 :arg1 (r4 / region)) :op2 (d / disarm-01 :arg0 (r5 / region)))))
(u / unknowable :arg1 (h / he) :degree (v / very))
(m / multi-sentence :snt1 (l / look-01 :arg0 (a / amr-unknown) :arg1 (i / it)) :snt2 (s / say-01 :arg0 (h / he) :time (a2 / appear-01 :arg1 (h2 / he) :time (b / before :op1 (r / report-01 :arg0 (h3 / he) :arg1 (t / thing :arg1-of (i2 / intend-01 :arg0 (h4 / he))))))))
(p / pledge-01 :arg0 (p2 / person :name (n / name :op1 "Uhuru" :op2 "Kenyatta") :arg0-of (h / have-org-role-91 :arg2 (p3 / president))) :arg2 (c / curb-01 :arg0 (p4 / person) :arg1 (c2 / corruption) :location (s / service :arg1-of (p5 / public-02))) :time (a / after :op1 (t / take-01 :arg0 (p6 / person) :arg1 (o / office) :location (t2 / thing :quant 2013))))
(c / contrast-01 :arg1 (f / fast :domain (w / we)) :arg2 (g / go-03 :polarity - :arg0 (i / i) :arg1 (i2 / it)))
(w / write-01 :mode (i / imperative) :polite (+ / +) :arg0 (y / you) :arg1 (a / and :op1 (f / forum :topic (d / discuss-01)) :op2 (t / thing :arg1-of (t2 / think-01 :arg0 (y2 / you) :arg2 (s / situation :arg1-of (f2 / finish-01))))) :arg2 (w2 / we) :medium (d2 / discuss-01))
(c / contrast-01 :arg2 (w / worry-02 :arg0 (s / scientist) :arg1 (p / possible-01 :arg1 (o / open-up-03 :arg0 (t / tunnel :mod (l / lava)) :location (p2 / place :location-of (b / be-located-at-91 :arg1 (i / ice) :arg2 (b2 / below)))))))
(c / clear-06 :arg1 (l / link-01 :arg1 (c2 / case-03 :mod (t / that))))
(w / word-01 :arg1 (a / and :op1 (g / gain-02 :arg0 (y / you) :arg1 (a2 / authority :quant (l / lot)) :manner (d / dealings) :prep-with (s / separatist :arg0-of (f / favor-01 :arg1 (c / country-region)))) :op2 (t / trust-01 :arg0 (y2 / you) :arg1 (t2 / trust-02 :arg0 (t3 / they) :arg1 (s2 / society :mod (c2 / country :name (n / name :op1 "N-A"))) :mod (e / even))) :time (a3 / after :op1 (n2 / now) :quant (f2 / few :op1 (t4 / temporal-quantity :quant (N / N-A) :unit (m / month)) :mod (j / just)))))
(f / fly-01 :arg1 (p / person :name (n / name :op1 "Damir")) :destination (c / city :name (n2 / name :op1 "London")) :time (l / late :degree (m / more)) :arg1-of (c2 / cause-01 :arg0 (c3 / crowned :arg0 (n3 / newspaper :mod (o / organization :name (n4 / name :op1 "News" :op2 "of" :op3 "the" :op4 "World"))) :arg1 (p2 / person :arg0-of (h / have-rel-role-91 :arg1 (p3 / person) :arg2 (c4 / child))) :arg2 (p4 / person :arg0-of (h2 / have-rel-role-91 :arg1 (p5 / person) :arg2 (c5 / child))) :arg1-of (c6 / cause-01 :arg0 (a / and :op1 (p6 / person :name (n5 / name :op1 "Tony" :op2 "Blair") :arg0-of (h3 / have-org-role-91 :arg2 (p7 / premier))) :op2 (p8 / person :name (n6 / name :op1 "Cherie") :arg0-of (h4 / have-rel-role-91 :arg1 (p9 / person) :arg2 (w / wife))))))))
(p / possible-01 :arg1 (c / continue-01 :arg0 (s / scientist) :arg1 (w / work-01 :arg0 (s2 / scientist))))
(a / and :op1 (a2 / accept-01 :arg1 (g / gospels :quant (N / N-A))) :op2 (r / reject-01 :arg0 (s / show-04 :arg1 (h / hand)) :arg1 (m / more)) :op3 (r2 / reject-01 :arg0 (s2 / show-04 :arg1 (h2 / hand)) :arg1 (f / fact :topic (o / or :op1 (p / possible-01 :arg1 (e / evaluated :arg1 (f2 / fact :poss (m2 / matter)))) :op2 (d / dismiss-01 :arg0 (v / vote-01 :mod (p2 / popular)) :arg1 (f3 / fact))))))
(w / work-01 :arg0 (s / she) :arg2 (c / chain) :duration (t / temporal-quantity :quant (N / N-A) :unit (y / year)) :location (s2 / site :quant 1978 :arg1-of (i / include-91 :arg2 (s3 / store :quant 2 :location (s4 / site :quant 2 :arg1-of (i2 / include-91 :arg2 (s5 / store :quant 2 :location (s6 / store :name (n / name :op1 (f / flagship)) :location (l / location :name (n2 / name :op1 "Oxford" :op2 "Street"))))))))))
(g / give-01 :arg0 (t / this) :arg1 (q / question-01 :arg1 (t2 / thing :manner-of (d / discover-01 :arg0 (p / person :name (n / name :op1 "Kaluza")) :arg1 (t3 / this) :manner (t4 / together) :arg1-of (c / cause-01 :arg0 (f / fact :arg1-of (o / obvious-01) :domain (s / see-01 :arg0 (w / we) :arg1 (d2 / dimensions :quant 3 :mod (s2 / space)))))))) :time (i / immediate))
(o / obvious-01 :polarity - :arg1 (a / authors :poss (b / book :mod (t / this))))
(s / speculate-01 :arg1 (i / interest-01 :arg2 (o / organization :name (n / name :op1 "Paris" :op2 "SG"))) :mod (a / also))
(c / cause-01 :arg0 (d / delay-01 :arg0 (f / fly-01)) :arg1 (d2 / delay-01 :arg1 (f2 / fly-01 :mod (o / other) :quant (f3 / few) :arg2-of (i / include-01 :arg1 (f4 / fly-01 :source (a / and :op1 (c2 / city :name (n / name :op1 "Dubai")) :op2 (c3 / company :name (n2 / name :op1 "Qantas"))) :source (c4 / city :name (n3 / name :op1 "Sydney"))))) :mod (s / subsequent)))
(a / and :op1 (f / force-01 :arg0 (t / this) :arg1 (c / choose-01 :arg0 (s / society :mod (c2 / civil) :mod (c3 / country :name (n / name :op1 "N-A"))) :arg1 (a2 / and :op1 (s2 / society :mod (c4 / civil) :mod (c5 / country :name (n2 / name :op1 "N-A"))) :op2 (c6 / city-district :name (n3 / name :op1 "N-A") :location (c7 / city))))) :op2 (m / make-02 :arg0 (s3 / situation :mod (t2 / this)) :arg1 (g / grimace :arg1 (s4 / situation))))
(s / say-01 :arg0 (p / person :name (n / name :op1 "Peskov")) :arg1 (m / mean-02 :arg1 (r / reference-04 :arg0 (p2 / person :name (n2 / name :op1 "Putin")) :arg1 (s2 / statehood)) :arg2 (c / context :poss (c2 / city :arg1-of (d / discuss-01 :duration (m2 / multiple :op1 (t / temporal-quantity :quant (N / N-A) :unit (m3 / month)))) :arg1-of (d2 / discuss-01 :duration (m4 / multiple :op1 (t2 / temporal-quantity :quant (N2 / N-A) :unit (m5 / month)))))) :purpose (a / allay :arg0 (p3 / person) :arg1 (f / fear-01) :arg2 (f2 / fear-01 :arg0 (p4 / person) :arg1 (f3 / fear-01 :arg0 (p5 / person) :arg1 (f4 / fear-01 :arg0 (p6 / person) :arg1 (e / endanger-01 :arg1 (a2 / and :op1 (c3 / culture) :op2 (r2 / right-05 :arg2 (l / linguistic))))))))))
(c / contrast-01 :arg1 (a / allow-01 :polarity - :arg0 (d / defend-01) :arg1 (o / opava :arg1 (d2 / defend-01))) :arg2 (e / except-01 :arg1 (s / shoot-02 :arg0 (p / person :name (n / name :op1 "Mikul")) :arg1 (p2 / person :name (n2 / name :op1 "Riechl")) :ord (o2 / ordinal-entity :value 11)) :arg2-of (e2 / except-01)))
(g / get-03 :arg1 (m / machine :quant 18) :arg2 (a / and :op1 (t / turn-01 :arg0 (m2 / machine) :arg1 (p / person :quant 2)) :op2 (b / banged :arg0 (m3 / machine) :arg1 (p2 / person :arg0-of (s / send-01 :arg1 (c / car :mod (b2 / both)) :arg2 (w / wall))))))
(a / appear-02 :arg1 (h / hose :arg1 (l / line :name (n / name :op1 (h2 / hose)) :arg1-of (t / thin-03))) :mod (s / still))
(s / say-01 :arg0 (a / agency :mod (c / country :name (n / name :op1 "New" :op2 "China"))) :arg1 (a2 / and :op1 (e / enter-01 :arg0 (m / man :arg1-of (n2 / name-01 :arg2 (p / person :name (n3 / name :op1 "Chen")))) :arg1 (b / building :mod (s2 / school :mod (e2 / elementary))) :manner (f / force-04) :time (m2 / morning)) :op2 (a3 / attack-01 :arg0 (m3 / man) :location (a4 / around :op1 (a5 / a.m. :arg1-of (l / local-02))))))
(a / and :op1 (o / operate-01 :arg0 (c / cruise :name (n / name :op1 (n2 / norwegian)) :mod (c2 / cruise)) :arg1 (s / ship :quant 13 :part (c3 / cruise)) :location (r / route :name (n3 / name :op1 (s2 / spanning)) :location (r2 / route :name (n4 / name :op1 (s3 / sea :name (n5 / name :op1 "Mediterranean" :op2 "Sea"))))) :location (r3 / route :name (n6 / name :op1 (s4 / spanning)) :location (r4 / route :name (n7 / name :op1 (s5 / spanning))))) :op2 (s6 / scrap-01 :arg1 (s7 / ship)) :op3 (s8 / scrap-01 :arg1 (s9 / ship)) :op4 (w / world-region :name (n8 / name :op1 "Caribbean")))
(j / judge-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (f / federal :mod (c / country :name (n / name :op1 "U.S."))) :arg3 (j2 / judge-01))) :arg1 (e / enforce-01 :arg1 (l / law :mod (e2 / email))) :duration (t / temporary) :arg1-of (c2 / cause-01 :arg0 (e3 / enforce-01 :arg0 (p2 / person) :arg1 (l2 / law :mod (e4 / email) :arg0-of (c3 / close-01 :arg1 (c4 / clinics :quant 5 :mod (a / abort-01) :mod (a2 / all) :location (s / state)) :arg1-of (l3 / likely-01))))))
(c / contrast-01 :arg1 (c2 / carry-01 :arg0 (p / person :name (n / name :op1 "Stewart")) :arg1 (b / back :op1 (2 / 21st))) :arg2 (d / drop-out-04 :arg0 (p2 / person)))
(d / differ-02 :arg1 (d2 / differ-02 :mod (s / such)))
(h / have-rel-role-91 :arg0 (h2 / he) :arg1 (c / country :name (n / name :op1 "N-A")) :arg2 (f / friend :mod (g / good :degree (v / very))) :time (s / still) :arg1-of (c2 / cause-01 :arg0 (m / marry-01 :arg1 (h3 / he) :duration (t / temporal-quantity :quant (N / N-A) :unit (y / year)))))
(a / and :op1 (g / go-02 :arg0 (a2 / and :op1 (p / person :name (n / name :op1 "Seymour") :mod (o / old :degree (m / more)) :arg0-of (h / have-rel-role-91 :arg1 (i / i) :arg2 (b / brother :mod (o2 / old)))) :op2 (p2 / person :arg0-of (h2 / have-rel-role-91 :arg1 (i2 / i) :arg2 (b2 / brother :mod (o3 / old))))) :arg4 (p3 / pub)) :op2 (t / talk-01 :arg0 (a3 / and) :arg1 (t2 / thing :example (a4 / and :op1 (s / shape :poss (g2 / glass :mod (b3 / beer))) :op2 (w / woe :poss (s2 / stroke) :location (c / cricket))))))
(s / say-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg2 (c / commissioner))) :arg1 (f / fact :domain (f2 / find-01 :polarity - :arg0 (w / we) :arg1 (m / money :mod (a / any) :arg1-of (s2 / say-01 :arg0 (p2 / person :arg0-of (h2 / have-org-role-91 :arg2 (c2 / commissioner))))))))
(p / plunged :arg0 (p2 / person :arg0-of (s / suggest-01 :arg1 (r / recommend-01 :arg1 (t / touch-01 :arg0 (p3 / person) :arg1 (p4 / person) :manner (t2 / touch-01))))) :arg1 (c / company :name (n / name :op1 "Abbott")) :manner (s2 / sudden))
(g / get-22 :arg0 (c / company) :arg1 (m / manage-01 :arg0 (c2 / company) :arg1 (l / location) :arg3 (f / fee :mod (f2 / flat) :consist-of (r / rate-entity-91 :arg1 1000 :arg2 (t / temporal-quantity :quant (N / N-A) :unit (y / year))))) :time (t2 / then))
(p / pay-01 :arg0 (a / and :op1 (f / firm :mod (s / state :name (n / name :op1 "Virginia"))) :op2 (f2 / firm :mod (e / email)) :quant (n2 / nearly :op1 (1 / 1/2))) :arg1 (a2 / and :op1 (m / monetary-quantity :arg1-of (i / include-91 :arg2 (t / thing :arg1-of (t2 / tax-01 :arg3 (t3 / thing :arg1-of (t4 / tax-01 :arg3 (p2 / property))))))) :op2 (m2 / monetary-quantity :arg1-of (t5 / tax-01 :arg3 (t6 / tax)) :arg1-of (l / local-02))))
(d / day :arg1-of (s / single-02) :time-of (r / recall-02 :polarity - :arg0 (w / we) :arg1 (t / tragedy :mod (t2 / this))))
(c / cup)
(c / contrast-01 :arg1 (s / say-01 :polarity - :arg0 (i / i) :arg1 (d / differ-02 :mod (s2 / such))) :arg2 (d2 / depend-01 :arg0 (i2 / it) :arg1 (t / thing :manner-of (b / battle-01 :arg0 (w / we)))))
(a / and :op1 (h / have-03 :arg0 (u / universe :quant 3) :arg1 (s / spatial :quant 3 :mod (l / large) :arg1-of (d / dimensions :arg0 (w / we) :arg2 (- / -rrb- :quant 2 :mod (o / only)))) :time (f / first)) :op2 (h2 / have-03 :arg0 (h3 / hose :mod (o2 / only)) :arg1 (d2 / dimension :mod (l2 / large))) :time (f2 / first))
(p / passes :mod (a / apparent) :location (e / east :part-of (e2 / east)) :mod (a2 / apparent))
(i / important :domain (h / have-condition-91 :arg1 (h2 / have-03 :arg0 (y / you) :arg1 (a / and :op1 (d / device :arg1-of (f / fix-03)) :op2 (l / lenses :arg1-of (w / wide-02))) :frequency (o / often) :arg1-of (m / mean-01 :arg2 (o2 / obligate-01 :arg1 (y2 / you) :arg2 (g / get-01 :arg0 (y3 / you) :arg1 (m2 / more :compared-to (s / subject :poss (y4 / you)))) :condition (w2 / want-01 :arg0 (y5 / you) :arg1 (f2 / filled :arg0 (y6 / you) :arg1 (f3 / frame :part-of (p / picture))))))) :arg2 (s2 / shooting :mod (a2 / action))) :mod (p2 / particular))
(c / continue-01 :arg1 (h / hear-01 :arg0 (p / person :arg1-of (e / expert-01 :arg2 (c2 / court))) :location (l / location :name (n / name :op1 "Hradec"))) :mod (m / main))
(h / have-03 :polarity - :arg0 (a / absence :mod (i / inexcusable) :prep-in (r / record :poss (y / you))) :arg1 (c / consequence :arg1-of (s / same-01 :arg2 (c2 / consequence :quant 53 :example (p / possible-01 :polarity - :arg1 (c3 / collect-01 :arg1 (b / benefit :mod (e / employ-01 :polarity -))))))) :concession (h2 / hinder-01 :arg0 (c4 / capable-01 :arg1 (y2 / you) :arg2 (s2 / seek-01 :arg0 (y3 / you) :arg1 (e2 / employ-01 :mod (n / new)))) :arg1 (y4 / you)))
(p / post-01 :arg0 (t / thing :arg1-of (p2 / post-01 :time (e / early :degree (m / more)))) :arg1 (i / image :arg1-of (c / convict-01 :arg2 (a / and :op1 (p3 / person :name (n / name :op1 "Rosemary" :op2 "Lehmberg") :arg0-of (h / have-org-role-91 :arg2 (a2 / attorney))) :op2 (p4 / person :arg1-of (c2 / convict-01 :arg2 (w / wisdom)))))) :time (e2 / early :degree (m2 / more)))
(c / cup)
(h / have-concession-91 :arg2 (a / and :op1 (s / specific-02 :arg1 (i / it)) :op2 (a2 / accept-01 :arg1 (i2 / it) :manner (e / entire))))
(b / ban-01 :arg1 (h / halls :mod (g / gambling) :location (l / location :example (a / and :op1 (o / organization :name (n / name :op1 "Prague")) :op2 (o2 / organization :quant 12)))) :time (c / current))
(g / go-02 :arg0 (p / person :arg0-of (h / have-rel-role-91 :arg1 (c / child :arg0-of (h2 / have-rel-role-91 :arg1 (c2 / child :mod (i / israeli)) :arg2 (c3 / child))) :location (a / area :arg1-of (n / near-02 :arg2 (w / world-region))))) :arg4 (s / school) :time (a2 / after :op1 (s2 / spend-02 :arg0 (p2 / person) :arg1 (a3 / and :op1 (t / temporal-quantity :quant (N / N-A) :unit (y / year)) :op2 (t2 / temporal-quantity :quant (N2 / N-A) :unit (y2 / year))) :location (c4 / community :poss (p3 / person)) :time (w2 / war-01 :arg0 (p4 / person) :arg1 (c5 / community :poss (p5 / person)) :time (w3 / war-01 :arg0 (p6 / person) :arg1 (c6 / community :poss (p7 / person)) :time (w4 / war-01 :arg0 (p8 / person) :arg1 (c7 / community :poss (p9 / person)) :time (d / during :op1 (w5 / war))))))) :time (d2 / during :op1 (r / recover-01 :arg1 (f / fight-01 :arg2 (f2 / fight-01 :arg2 (f3 / fight-01))))))
(n / now :mod (o / only))
(s / spurred :arg0 (t / that) :arg1 (a / and :op1 (e / effort :mod (c / civilian) :mod (m / massive)) :op2 (e2 / effort :mod (m2 / military) :poss (o / organization :name (n / name :op1 "Mariupol") :arg1-of (l / lie-07 :arg2 (b / between :op1 (p / peninsula :name (n2 / name :op1 "N-A")) :op2 (g / gateway :arg1-of (d / deep-02 :degree (m3 / most)) :location (p2 / peninsula :name (n3 / name :op1 "N-A")))))))))
(a / and :op1 (c / come-01 :arg1 (a2 / and :op1 (p / person :arg0-of (h / have-rel-role-91 :arg1 (i / i) :arg2 (m / mum))) :op2 (p2 / person :arg0-of (h2 / have-rel-role-91 :arg1 (i2 / i) :arg2 (s / sister)))) :arg4 (r / realize-01 :arg0 (a3 / and))) :op2 (s2 / start-01 :arg0 (a4 / and) :arg1 (w / wetting :arg0 (a5 / and) :arg1 (a6 / and))) :time (t / then) :concession-of (o / obligate-01 :arg1 (i3 / i) :arg2 (a7 / and :op1 (r2 / rush-01 :arg1 (i4 / i) :arg2 (t2 / they)) :op2 (e / e. :arg1 (i5 / i)))))
(f / follow-01 :arg1 (t / thing :arg1-of (p / precede-01 :arg2 (a / account :poss (p2 / person :name (n / name :op1 "Perry"))))) :arg2 (a2 / account :poss (p3 / person) :arg0-of (d / disavow :arg1 (p4 / post))) :time (l / late :degree (m / more)))
(t / think-01 :arg0 (i / i) :arg1 (t2 / thing :arg1-of (r / report-01 :arg0 (p / person :quant (m / many))) :arg0-of (l / listen-01 :arg1 (o / or :op1 (b / bored :arg1 (p2 / person)) :op2 (b2 / busy :domain (p3 / person) :prep-with (s / something :mod (e / else)))))))
(s / say-01 :arg0 (p / person :name (n / name :op1 "Susan" :op2 "Jordan") :arg0-of (l / lead-02 :arg1 (o / organization :name (n2 / name :op1 "QIMR" :op2 "Berghofer" :op3 "Medical" :op4 "Research" :op5 "Institute"))) :arg0-of (r / research-01)) :arg1 (a / and :op1 (l2 / likely-01 :arg1 (d / die-01 :arg1 (p2 / person :arg0-of (l3 / live-01 :location (a2 / and :op1 (a3 / area :mod (r2 / region)) :op2 (a4 / area :mod (r3 / remote) :part-of (s2 / state))))))) :op2 (l4 / likely-01 :arg1 (d2 / die-01 :arg1 (p3 / person :quant (a5 / about :op1 20)) :time (s3 / study-01 :arg0 (p4 / person) :location (a6 / area :mod (u / urban)))))))
(d / discover-01 :arg0 (w / we) :arg1 (a / amaze-01 :arg0 (p / person :mod (y / young) :arg0-of (h / have-03 :arg1 (a2 / adversity))) :arg1 (p2 / person :mod (y2 / young)) :arg1-of (h2 / have-concession-91 :arg2 (l / live-01 :arg0 (m / memory :poss (h3 / hell :mod (t / this))) :duration (f / forever)))))
(l / locate-01 :arg1 (t / that) :source (c / church :location (l2 / location :name (n / name :op1 "St." :op2 "George"))) :mod (w / well))
(o / or :op1 (p / possible-01 :arg1 (m / manage-01 :arg0 (y / you) :arg1 (i / it) :manner (m2 / more :degree (l / little)))) :op2 (e / enjoy-01 :arg0 (i2 / i) :arg1 (r / run-01 :arg0 (w / we) :arg1 (l2 / location :name (n / name :op1 "Prague")))))
(a / and :op1 (s / suffer-01 :arg0 (p / person :arg0-of (s2 / suffer-01 :arg1 (m / much :degree (s3 / so)))) :arg1 (m2 / much :degree (s4 / so))) :op2 (s5 / say-01 :arg0 (p2 / person) :arg1 (a2 / and :op1 (s6 / suffer-01 :arg0 (p3 / person) :time (t / today)) :op2 (n / need-01 :arg0 (p4 / person) :arg1 (h / help-01) :time (t2 / today))) :op3 (s7 / say-01 :arg0 (p5 / person) :arg1 (t3 / thing :time (r / read-01 :arg0 (p6 / person :name (n2 / name :op1 "Bill")) :time (y / year :mod (l / last)) :ord (o / ordinal-entity :value 2))))))
(b / believe-01 :arg1 (c / contribute-01 :arg0 (c2 / condition :mod (s / squally)) :arg2 (l / land-01 :arg1 (f / fly-01 :source (o / organization :name (n / name :op1 "Virgin" :op2 "Airlines")) :destination (c3 / city :name (n2 / name :op1 "Melbourne"))))))
(a / and :op1 (p / person :name (n / name :op1 "Alois" :op2 "Li?ka") :arg0-of (h / have-org-role-91 :arg1 (i / it) :arg2 (c / commander))) :op2 (r / request-01 :arg0 (p2 / person) :arg1 (s / send-01 :arg1 (e / equipment :mod (t / technical)) :arg2 (f / front))) :manner (p3 / proper))
(b / become-01 :arg1 (i / it) :arg2 (c / clear-06 :arg1 (r / refuse-01 :arg0 (p / person :name (n / name :op1 "Cameron")) :arg1 (d / debate-01 :arg0 (p2 / person) :arg1 (d2 / depend-01 :polarity - :arg0 (p3 / person :name (n2 / name :op1 "Salmond") :arg0-of (h / have-org-role-91 :arg1 (c2 / country) :arg2 (m / minister :mod (p4 / prime)))) :arg1 (p5 / person :name (n3 / name :op1 "Salmond") :arg0-of (h2 / have-org-role-91 :arg2 (m2 / minister :mod (p6 / prime)))) :arg1-of (m3 / major-02))))))
(o / offend-01 :polarity - :arg0 (t / that) :arg1 (i / i))
(b / believe-01 :arg0 (i / i) :arg1 (o / oblige-02 :polarity - :arg1 (i2 / i) :arg2 (s / say-01 :arg0 (i3 / i) :arg1 (r / reply-01 :arg0 (p / person :name (n / name :op1 "Esme" :op2 "Nussbaum"))))))
(c / claim-01 :arg0 (p / person :name (n / name :op1 "Stewart")) :arg1 (h / have-03 :arg0 (s / service) :arg1 (a / aspect :mod (s2 / safe-01))) :mod (a2 / also))
(t / turns :arg0 (c / country :name (n / name :op1 "Britain")) :arg1 (p / peak-01 :arg1 (t2 / type :mod (m / mesothelioma))) :time (t3 / today))
(m / multi-sentence :snt1 (g / go-01 :arg1 (y / you) :extent (f / far :degree (t / too))) :snt2 (a / and :op1 (g2 / go-02 :arg0 (y2 / you) :arg4 (f2 / far :degree (t2 / too))) :op2 (m2 / mistrust :arg0 (t3 / they) :arg1 (' / '' :arg0 (t4 / they) :arg1 (p / person :mod (o / other) :arg0-of (a2 / anger-01 :arg1 (t5 / they)))))))
(c / cause-01 :arg0 (p / play-01 :arg1 (i / it) :manner (a / amr-unknown)) :arg1 (p2 / possible-01 :arg1 (r / re-emerge :arg0 (c2 / country :name (n / name :op1 "Russia")) :mod (g / great))))
(r / realize-01 :polarity - :arg0 (i / i) :arg1 (t / thing :arg2-of (m / mean-01 :arg1 (p / place :name (n / name :op1 (' / '') :op2 (n2 / narrowest))))) :mod (s / still) :time (l / late :degree (m2 / more)) :mod (s2 / still))
(o / obligate-01 :arg2 (d / do-02 :arg0 (i / it) :arg1 (a / article :topic (c / conflict-01 :arg0 (c2 / country :name (n / name :op1 "Israel")) :arg1 (o2 / organization :name (n2 / name :op1 "Hamas")) :location (c3 / country-region :name (n3 / name :op1 "Gaza" :op2 "Strip"))))))
(a / and :op1 (m / mix-01 :arg1 (s / soundtrack) :arg2 (a2 / and :op1 (r / reggae) :op2 (r2 / rap))) :op2 (u / upbeat :arg1 (t / tunes)))
(p / produce-01 :arg1 (p2 / produce-01 :arg1 (g / globe)) :arg3 (a / around :op1 (m / mass-quantity :quant (N / N-A) :unit (t / ton))))
(l / look-01 :arg0 (m / market) :arg1 (p / plan-01 :arg0 (b / bank) :arg1 (d / deal-01 :arg0 (b2 / bank) :arg2 (b3 / bank) :arg1-of (s / stall-01))) :arg1-of (c / cause-01 :arg0 (t / threaten-01 :arg0 (b4 / bank) :arg1 (s2 / standing :mod (i / inflation)) :arg2 (s3 / standing :quant 0.3 :mod (j / just)))))
(a / and :op1 (t / thing :quant 1 :domain (l / look-01 :arg1 (s / shoulder :part-of (p / person :arg0-of (h / have-rel-role-91 :arg1 (y / you) :arg2 (f / friend))))) :time (m / morning :quant 3) :time (m2 / morning)) :op2 (a2 / another :mod (a3 / another :mod (q / quite)) :purpose (w / watch-01 :arg1 (r / rando :quant (s2 / some)) :location (l2 / local-region :name (n / name :op1 "N-A")) :arg1-of (c / call-01 :arg2 (d / duty :mod (d2 / duty))))))
(l / likely-01 :polarity - :arg1 (r / remembered :domain (s / she) :time (a / age-01 :arg1 (p / person :arg0-of (s2 / sing-01) :mod (p2 / popular)) :arg2 (t / time))))
(s / say-01 :arg0 (p / person :name (n / name :op1 "Barry" :op2 "Levison") :arg0-of (h / have-org-role-91 :arg1 (p2 / person :name (n2 / name :op1 "Phillip" :op2 "Roth") :arg0-of (h2 / have-org-role-91 :arg1 (o / oscar-winning))) :arg2 (7 / 74-year-old))) :arg1 (h3 / have-03 :arg0 (p3 / person :name (n3 / name :op1 "Pacino")) :arg1 (r / role :arg1-of (c / close-10 :arg2 (p4 / person) :arg1-of (c2 / close-10 :arg2 (a / and :op1 (e / end-01 :arg1 (c3 / career :poss (p5 / person))) :op2 (l / life :arg1-of (p6 / personal-02)))) :arg1-of (c4 / close-10 :degree (h4 / high)))) :location (o2 / outside :op1 (a2 / and :op1 (t / talk-02 :arg2 (o3 / outside :op1 (a3 / and))) :op2 (f / filmed :location (o4 / outside :op1 (a4 / and :op1 (c5 / compete-02) :op2 (f2 / filmed))))))))
(c / contrast-01 :arg1 (t / tire-01 :arg1 (h / he)) :arg2 (w / weak-02 :arg1 (h2 / he) :mod (a / also) :arg1-of (c2 / cause-01 :arg0 (a2 / and :op1 (s / strong-02 :polarity - :arg1 (h3 / he) :time (e / ever)) :op2 (f / fight-01 :polarity - :arg0 (h4 / he) :arg2 (c3 / country :name (n / name :op1 "Ukraine")) :mod (j / just))))))
(c / cause-01 :arg1 (a / and :op1 (s / sense-01 :arg0 (w / we) :arg1 (d / dampness :arg0 (w2 / we) :arg1 (f / floor) :degree (s2 / slight)) :arg1-of (c2 / cause-01 :arg0 (s3 / same :arg0 (w3 / we) :arg1 (p / person :quant 1 :arg0-of (s4 / study-01) :arg1-of (k / key-02 :arg2 (m / metal :arg1-of (k2 / key-02 :arg2 (m2 / metal :part-of (m3 / metal))))))) :mod (s5 / still) :arg2-of (f2 / fortunate-01 :polarity -))) :op2 (p2 / possible-01 :arg1 (l / leave-11 :arg0 (p3 / person :arg0-of (s6 / study-01) :arg1-of (i / include-91 :arg2 (p4 / person :arg0-of (s7 / study-01)) :arg3 (p5 / person :arg0-of (s8 / study-01))) :arg2-of (i2 / include-91 :arg1 (p6 / person :arg0-of (s9 / study-01))) :arg2-of (i3 / include-91 :arg1 (p7 / person :arg0-of (s10 / study-01))) :arg2-of (i4 / include-91 :arg1 (p8 / person :arg0-of (s11 / study-01))) :arg2-of (i5 / include-91 :arg1 (p9 / person :arg0-of (s12 / study-01))) :arg2-of (i6 / include-91 :arg1 (p10 / person :arg0-of (s13 / study-01))) :arg2-of (i7 / include-91 :arg1 (p11 / person :arg0-of (s14 / study-01))) :arg2-of (i8 / include-91 :arg1 (p12 / person :arg0-of (s15 / study-01))) :arg2-of (i9 / include-91 :arg1 (p13 / person :arg0-of (s16 / study-01))) :arg2-of (i10 / include-91 :arg1 (p14 / person :arg0-of (s17 / study-01))) :arg2-of (i11 / include-91 :arg1 (p15 / person :arg0-of (s18 / study-01))) :arg2-of (i12 / include-91 :arg1 (p16 / person :arg0-of (s19 / study-01)))) :arg1-of (c3 / cause-01 :arg0 (p17 / possible-01 :arg1 (l2 / leave-11 :arg0 (p18 / person))))))))
(c / cause-01 :arg1 (r / recommend-01 :arg1 (l / leave-11 :arg0 (h / he))))
(m / multi-sentence :snt1 (f / fortunate-01 :polarity - :arg2 (c / cope-01 :arg1 (t / thing :manner-of (c2 / cope-01 :arg1 (s / situation))))) :snt2 (a / and :op1 (r / rush-01 :polarity - :arg1 (s2 / situation)) :op2 (g / get-01 :arg1 (s3 / sleep-01 :quant (p / plenty)))))
(c / create-01 :arg1 (e / event :arg0-of (c2 / compete-02) :arg1-of (r / resemble-01)))
(a / and :op2 (b / be-temporally-at-91 :arg1 (i / it) :arg2 (b2 / before :op1 (n / now) :quant (t / temporal-quantity :quant (N / N-A) :unit (y / year) :mod (j / just)))))
(m / multi-sentence :snt1 (r / recommend-01 :arg1 (n / need-01 :polarity - :arg1 (b / bother-01 :arg1 (s / someone) :arg2 (p / position-01 :arg1 (s2 / someone) :arg2 (p2 / position-01 :arg1 (s3 / someone) :arg2 (u / understand-01 :arg0 (s4 / someone) :arg1 (p3 / past))))))) :snt2 (a / and :op1 (s5 / speak-01 :polarity - :arg0 (w / we) :arg1 (' / '' :arg1 (w2 / we))) :op2 ('2 / '' :arg0 (w3 / we) :arg1 (t / they))))
(c / contrast-01 :arg1 (k / know-01 :arg0 (i / i) :arg1 (l / like-01 :polarity - :arg0 (h / he) :arg1 (r / recall-02 :arg0 (h2 / he) :arg1 (i2 / it)))) :arg2 (a / and :op1 (c2 / close-10 :arg1 (h3 / he) :arg2 (c3 / classmate :quant 6) :degree (v / very)) :op2 (g / go-02 :arg0 (t / they) :arg4 (g2 / gym) :time (a2 / and :op1 (t2 / time) :op2 (l2 / light)))))
(a / and :op2 (u / upset-01 :arg0 (a2 / and :op1 (p / person :mod (c / country :name (n / name :op1 "N-A"))) :op2 (p2 / person :mod (e / ethnic-group :name (n2 / name :op1 "N-A")))) :arg1 (p3 / person) :manner (h / have-manner-91 :arg1 (d / do-02 :arg0 (p4 / person) :arg1 (t / thing :manner-of (d2 / do-02 :arg0 (p5 / person))) :mod (r / really))) :arg2 (k / kick-01 :arg0 (w / we) :arg1 (a3 / asses :poss (p6 / person)) :mod (r2 / really))))
(n / need-01 :arg0 (y / you) :arg1 (c / complicit :arg1 (w / woman :mod (w2 / white)) :purpose (j / justify-01 :arg0 (y2 / you) :arg1 (l / lynching))))
(s / spurred :arg0 (t / that) :arg1 (a / and :op1 (e / effort :mod (c / civilian) :mod (m / massive)) :op2 (e2 / effort :mod (m2 / military) :poss (o / organization :name (n / name :op1 "Mariupol") :arg1-of (l / lie-07 :arg2 (b / between :op1 (p / peninsula :name (n2 / name :op1 "N-A")) :op2 (g / gateway :arg1-of (d / deep-02 :degree (m3 / most)) :location (p2 / peninsula :name (n3 / name :op1 "N-A")))))))))
(l / look-01 :arg0 (i / i) :arg1 (t / thing :arg1-of (g / go-on-15 :location (r / region :arg1-of (d / differ-02)))) :time (n / now))
(p / play-02 :arg0 (r / role :mod (a / amr-unknown)) :arg1 (t / thing :arg1-of (d / decide-01 :arg0 (y / you))))
(a / and :op1 (d / die-01 :arg1 (p / person :mod (i / indigenous)) :time (s / since :op1 (d2 / date-entity :decade (N / N-A)))) :op2 (d3 / die-01 :arg1 (p2 / person :arg1-of (d4 / die-01 :location (c / country :name (n / name :op1 "Great" :op2 "Britain")))) :time (f / future)))
(a / and :op1 (o / obligate-01 :arg2 (c / consensus :topic (p / party :quant (a2 / all)))) :op2 (d / depend-01 :arg0 (c2 / consensus) :arg1 (p2 / position-01 :arg1 (p3 / person :name (n / name :op1 "Chelsea")) :arg2 (o2 / or :mode (i / interrogative) :op1 (e / examine-01 :arg0 (p4 / person) :arg1 (o3 / offer-01)) :op2 (e2 / examine-01 :polarity - :arg0 (p5 / person) :arg1 (o4 / offer-01))) :mod (m / main))))
(a / and :op1 (t / talk-01 :arg0 (w / we) :arg1 (p / person :arg0-of (t2 / think-01 :arg1 (a2 / and :op1 (p2 / person :arg0-of (t3 / think-01 :arg1 (c / cud :arg1 (p3 / person)))) :op2 (p4 / person :arg0-of (h / have-org-role-91 :arg2 (h2 / head-of-state))) :op3 (p5 / person :arg0-of (h3 / have-org-role-91 :arg2 (h4 / head-of-state))) :op4 (p6 / person :arg0-of (h5 / have-org-role-91 :arg2 (h6 / head-of-state))) :op5 (p7 / person :arg0-of (h7 / have-org-role-91 :arg2 (h8 / head-of-state))))))))
(a / accuse-01 :arg0 (p / person :name (n / name :op1 "George" :op2 "Webster")) :arg1 (a2 / and :op1 (p2 / person :name (n2 / name :op1 "Nairn")) :op2 (h / hotel :mod (p3 / pitlochry))) :arg2 (r / rape-01 :arg1 (a3 / and)))
(h / hard-02 :arg1 (i / it) :degree (v / very))
(a / and :op1 (e / expand-01 :arg0 (b / business) :arg1 (r / rate-entity-91 :arg1 (p / percentage-entity :value (N / N-A)) :arg2 (t / temporal-quantity :quant (N2 / N-A) :unit (y / year))) :arg4 (m / monetary-quantity :quant 671 :unit (d / dollar)) :arg4 (m2 / monetary-quantity :quant 671 :unit (d2 / dollar)) :arg4 (m3 / monetary-quantity :quant 671 :unit (d3 / dollar)) :arg4 (m4 / monetary-quantity :quant 671 :unit (d4 / dollar)) :arg4 (m5 / monetary-quantity :quant 671 :unit (d5 / dollar)) :arg4 (m6 / monetary-quantity :quant 671 :unit (d6 / dollar)) :arg4 (m7 / monetary-quantity :quant 671 :unit (d7 / dollar)) :arg4 (m8 / monetary-quantity :quant 671 :unit (d8 / dollar) :arg1-of (c / compare-01 :arg2 (p2 / percentage-entity :value (N3 / N-A) :time (b2 / before))))) :op2 (g / grow-01 :arg1 (b3 / business) :time (a2 / after :op1 (b4 / bill-01 :duration (t2 / temporal-quantity :quant (N4 / N-A) :unit (y2 / year)) :arg1-of (c2 / cost-01 :arg2 (t3 / temporal-quantity :quant (N5 / N-A) :unit (y3 / year)))) :location (a3 / and :op1 (h / half) :op2 2010))))
(k / knocked :arg0 (p / person :name (n / name :op1 "Gordon" :op2 "Stewart")) :arg1 (g / girl :location (p2 / peninsula :name (n2 / name :op1 "N-A"))) :arg1-of (a / allege-01))
(s / safe-01 :arg1 (w / woman :location (l / location :name (n / name :op1 "Louisiana")) :arg0-of (r / rule-03) :arg0-of (s2 / seek-01 :arg1 (a / and :op1 (s3 / strip :arg0 (l2 / law) :arg1 (a2 / and :op1 (h / health :poss (w2 / woman)) :op2 (r2 / right :poss (w3 / woman)))))) :op2 (s4 / say-01 :arg0 (a3 / and :op1 (p / person :name (n2 / name :op1 "Nancy" :op2 "Northup")) :op2 (p2 / person :arg0-of (h2 / have-org-role-91 :arg1 (o / organization) :arg2 (e / executive))) :op3 (p3 / person :arg0-of (h3 / have-org-role-91 :arg1 (o2 / organization) :arg2 (e2 / executive))) :op4 (p4 / person :arg0-of (h4 / have-org-role-91 :arg1 (o3 / organization) :arg2 (e3 / executive))) :op5 (p5 / person :arg0-of (h5 / have-org-role-91 :arg1 (o4 / organization) :arg2 (e4 / executive))) :arg0-of (h6 / have-org-role-91 :arg1 (o5 / organization) :arg2 (e5 / executive)) :arg0-of (h7 / have-org-role-91 :arg1 (o6 / organization) :arg2 (e6 / executive)) :arg0-of (h8 / have-org-role-91 :arg1 (o7 / organization) :arg2 (e7 / executive)) :arg0-of (h9 / have-org-role-91 :arg1 (o8 / organization) :arg2 (e8 / executive)) :arg0-of (h10 / have-org-role-91 :arg1 (o9 / organization) :arg2 (e9 / executive)) :arg0-of (h11 / have-org-role-91 :arg1 (o10 / organization) :arg2 (e10 / executive)) :arg0-of (h12 / have-org-role-91 :arg1 (o11 / organization) :arg2 (e11 / executive))) :arg1 (b / block-01 :arg0 (a4 / and) :arg1 (l3 / law)))))
(n / nutritious :arg1 (f / fish :mod (t / that) :location (b / beams)) :mod (e / especially))
(p / prepare-02 :arg1 (y / you) :arg2 (p2 / pay-01 :arg0 (y2 / you) :arg3 (m / more-than :op1 (m2 / monetary-quantity :quant (N / N-A)))) :condition (l / like-01 :arg0 (y3 / you) :arg1 (i / it)))
(e / except-01 :arg1 (b / big :degree (t / too) :domain (p / person :mod (b2 / big :degree (t2 / too)))))
(h / have-concession-91 :arg2 (d / differ-02 :arg1 (d2 / dimensions :quant 2 :mod (t / this)) :arg1-of (c / clear-06)))
(a / and :op1 (s / search-01 :arg0 (p / person :name (n / name :op1 "Aida")) :arg2 (p2 / person :arg0-of (h / have-rel-role-91 :arg1 (s2 / she) :arg2 (m / mother))) :manner (d / desperate)) :op2 (p3 / person :name (n2 / name :op1 "Larissa") :arg0-of (h2 / have-rel-role-91 :arg1 (p4 / person) :arg2 (m2 / mother) :time (n3 / now))) :li 40)
(t / think-01 :polarity - :arg0 (i / i) :arg1 (w / want-01 :arg0 (i2 / i) :arg1 (g / give-up-07 :arg0 (i3 / i) :arg1 (t2 / that)) :time (e / ever)) :arg1-of (c / cause-01 :arg0 (s / sit-01 :arg1 (t3 / thing :arg2-of (t4 / tattoo-01 :arg1 (s2 / sit-01 :arg2 (r / room :prep-with (p / person :arg0-of (h / have-org-role-91 :arg2 (d / director)))) :arg0-of (h2 / have-org-role-91 :arg2 (d2 / director))))) :arg2 (d3 / director))))
(c / contrast-01)
(l / last-01 :arg1 (i / it) :arg2 (u / until :op1 (a / and :op1 (c / come-01 :arg1 (w / we) :arg4 (t / term)) :op2 (r / realize-02 :arg0 (w2 / we) :arg1 (l2 / league :mod (a2 / all))))))
(c / contrast-01 :arg1 (i / important :domain (p / prospect-02 :mod (s / sports)) :beneficiary (i2 / i)) :arg2 (l / look-01 :arg0 (i3 / i) :arg1 (e / everything :source (v / view-01 :arg1-of (p2 / personal-02 :arg2 (t / thing :arg1-of (n / need-01 :arg0 (f / family))) :mod (o / of-course)))) :mod (a / also)))
(a / adapt-01 :arg0 (c / child) :arg1 (p / person :arg0-of (h / have-rel-role-91 :arg1 (c2 / child) :arg2 (c3 / child))) :arg2 (a2 / and :op1 (p2 / person :arg0-of (h2 / have-rel-role-91 :arg1 (c4 / child) :arg2 (c5 / child))) :op2 (p3 / person :arg0-of (c6 / carry-01 :arg1 (b / balloons)) :arg0-of (c7 / carry-01 :arg1 (b2 / balloons))) :op3 (g / give-01 :arg1 (f / flower) :arg2 (p4 / person :arg0-of (t / teach-01 :arg1 (f2 / flower))))) :time (d / day :ord (o / ordinal-entity :value 1) :location (s / school)) :mod (t2 / tradition))
(c / contrast-01 :arg1 (t / try-01 :arg0 (i / i) :arg1 (c2 / close-01 :arg0 (i2 / i) :arg1 (m / mouth :part-of (i3 / i)))) :arg2 (a / and :op1 (l / locked :arg1 (i4 / it)) :op2 (c3 / come-01 :arg1 (i5 / i) :arg4 (r / realize-01 :arg0 (i6 / i) :arg1 (d / depend-01 :arg1 (s / something))) :time (t2 / then))))
(d / diabetic :arg1 (p / person :arg0-of (h / have-rel-role-91 :arg1 (p2 / person :name (n / name :op1 "Henry")) :arg2 (m / mother))))
(m / multi-sentence :snt1 (c / contrast-01 :arg2 (w / wo :polarity - :topic (h / he) :mod (o / only))) :snt2 (a / and :op1 (h2 / have-03 :arg0 (w2 / we) :arg1 (g / game) :mod (a2 / also)) :op2 (a3 / analyze-01 :arg0 (w3 / we) :arg1 (g2 / game))))
(s / say-01 :arg0 (p / person :name (n / name :op1 "Morgan") :arg0-of (h / have-org-role-91 :arg2 (' / ''))) :arg1 (k / know-01 :arg0 (p2 / person) :arg1 (n2 / noxious :arg1 (p3 / person :mod (a / asbestos)) :arg2 (h2 / health) :time (s2 / since :op1 (m / multiple :op1 1898)))))
(l / last-01 :arg1 (y / year :mod (l2 / longest)) :arg2 (t / temporal-quantity :quant (N / N-A) :unit (m / month)))
(c / contrast-01 :arg2 (p / possible-01 :arg1 (t / tell-01 :arg0 (m / man) :arg1 (s / story) :prep-in (f / fact))))
(h / have-03 :arg0 (w / we) :arg1 (t / thing :arg1-of (l / limit-01)))
(a / and :op1 (c / consider-01 :arg0 (s / separatist) :arg1 (m / mercenary :arg1 (m2 / man :mod (t / this)))) :op2 (s2 / say-01 :arg0 (s3 / separatist) :arg1 (d / deserve-01 :polarity - :arg0 (p / person :mod (s4 / such)) :arg1 (a2 / anything :mod (o / other) :compared-to (d2 / die-01)))))
(o / obligate-01 :arg2 (d / do-02 :arg0 (i / it) :arg1 (a / article :topic (c / conflict-01 :arg0 (c2 / country :name (n / name :op1 "Israel")) :arg1 (o2 / organization :name (n2 / name :op1 "Hamas")) :location (c3 / country-region :name (n3 / name :op1 "Gaza" :op2 "Strip"))))))
(p / possible-01 :arg1 (f / find-01 :arg0 (p2 / person :arg0-of (h / have-org-role-91 :arg1 (c / company :name (n / name :op1 "BBC")))) :arg1 (p3 / person :arg0-of (h2 / have-org-role-91 :arg1 (c2 / company :name (n2 / name :op1 "BBC")) :arg2 (c3 / chief)))) :location (p4 / person))
(a / and :op1 (l / live-01 :arg0 (p / person :arg0-of (r / research-01)) :arg1 (r2 / rate-entity-91 :arg1 (m / more-than :op1 (m2 / monetary-quantity :quant (N / N-A))) :arg2 (t / temporal-quantity :quant (N2 / N-A) :unit (y / year))) :arg2 (c / cancer :mod (m3 / medicine) :mod (c2 / country :name (n / name :op1 "N-A")))) :op2 (f / find-01 :arg0 (p2 / person) :arg1 (r3 / rate-entity-91 :arg1 (u / under :op1 (t2 / temporal-quantity :quant (N3 / N-A) :unit (y2 / year)) :mod (j / just)) :arg2 (t3 / temporal-quantity :quant (N4 / N-A) :unit (y3 / year))) :time (a2 / after :op1 (w / war :name (n2 / name :op1 "N-A")))))
(r / rise-01 :arg1 (p / profit-01 :arg0 (p2 / person :mod (u / ultra))) :arg2 (r2 / rate-entity-91 :arg1 40 :arg2 (t / temporal-quantity :quant (N / N-A) :unit (y / year))) :arg4 (r3 / rate-entity-91 :arg1 (m / monetary-quantity :quant (3 / 380m) :unit (p3 / pound)) :arg2 (t2 / temporal-quantity :quant (N2 / N-A) :unit (y2 / year))) :arg4 (r4 / rate-entity-91 :arg1 (m2 / monetary-quantity :quant (32 / 380m) :unit (p4 / pound)) :arg2 (t3 / temporal-quantity :quant (N3 / N-A) :unit (y3 / year))) :arg4 (r5 / rate-entity-91 :arg1 (m3 / monetary-quantity :quant (33 / 380m) :unit (p5 / pound)) :arg2 (t4 / temporal-quantity :quant (N4 / N-A) :unit (y4 / year))))
(d / day :mod (s / spiritual) :location (p / person :name (n / name :op1 "Cheb")))
(a / and :op1 (t / talk-01 :arg1 (t2 / town)) :op2 (e / excite-01 :arg1 (e2 / everyone) :degree (p / pretty)))
(a / and :op1 (r / returns :prep-to (p / pentatonic) :time (t / then)) :op2 (p2 / possible-01 :arg1 (t2 / try-01 :arg0 (y / you) :arg1 (p3 / put-01 :arg0 (y2 / you) :arg1 (i / it) :arg2 (t3 / together) :accompanier (g / group :mod (t4 / twelve-member))))))
(o / obligate-01 :arg1 (w / we) :arg2 (e / examine-01 :arg0 (w2 / we) :arg1 (t / thing :arg2-of (c / characteristic-02 :arg1 (w3 / we)) :mod (g / good :degree (m / more :degree (m2 / much))))) :beneficiary (w4 / we) :purpose (r / realize-02 :arg0 (w5 / we) :arg1 (e2 / exist-01 :arg1 (d / dimension :mod (c2 / circular)))))
(s / song :mod (s2 / silly :mod (j / just)) :domain (t / that))
(h / have-03 :arg0 (i / it) :arg1 (t / time :arg1-of (h2 / hard-04) :arg1-of (c / come-01 :arg4 (c2 / cottage :purpose (s / snack)))))
(w / workplace :domain (t / this) :mod (p / prejudice-free))
(c / contrast-01 :arg1 (a / and :op1 (r / rings :quant 3 :mod (j / just) :domain (i / it)) :op2 (i2 / insult-01 :arg0 (i3 / it) :arg1 (e / everything :mod (e2 / else)) :manner (g / general-02))) :arg2 (s / say-01 :arg0 (i4 / i)))
(a / and :op1 (d / declared :arg0 (a2 / and :op1 (p / person :mod (r / religious-group :name (n / name :op1 "Islam"))) :op2 (p2 / person :arg0-of (h / have-org-role-91 :arg1 (o / organization :name (n2 / name :op1 "Hindu" :op2 "Vedas")))) :op3 (p3 / person :arg0-of (h2 / have-org-role-91 :arg1 (o2 / organization) :arg3 (q / qur))) :op4 (p4 / person :arg0-of (h3 / have-org-role-91 :arg1 (o3 / organization) :arg3 (q2 / qur))) :op5 (p5 / person :arg0-of (h4 / have-org-role-91 :arg1 (o4 / organization) :arg3 (q3 / qur))) :op6 (p6 / person :arg0-of (h5 / have-org-role-91 :arg1 (o5 / organization) :arg3 (q4 / qur))) :op6 (p7 / person :arg0-of (h6 / have-org-role-91 :arg1 (o6 / organization) :arg3 (q5 / qur))) :op6 (p8 / person :arg0-of (h7 / have-org-role-91 :arg1 (o7 / organization) :arg3 (q6 / qur))) :op6 (p9 / person :arg0-of (h8 / have-org-role-91 :arg1 (o8 / organization) :arg3 (q7 / qur))) :op6 (p10 / person :arg0-of (h9 / have-org-role-91 :arg1 (o9 / organization) :arg3 (q8 / qur))) :op6 (p11 / person :arg0-of (h10 / have-org-role-91 :arg1 (o10 / organization) :arg3 (q9 / qur))) :op6 (p12 / person :arg0-of (h11 / have-org-role-91 :arg1 (o11 / organization) :arg3 (q10 / qur))) :op6 (p13 / person :arg0-of (h12 / have-org-role-91 :arg1 (o12 / organization) :arg3 (q11 / qur))) :op6 (b / book :mod (l / location :name (n3 / name :op1 "Urantia"))) :op6 (b2 / book :mod (l2 / location :name (n4 / name :op1 "Urantia"))) :op6 (b3 / book :mod (l3 / location :name (n5 / name :op1 "Urantia"))) :op6 (b4 / book :mod (l4 / location :name (n6 / name :op1 "Urantia"))) :op6 (b5 / book :mod (l5 / location :name (n7 / name :op1 "Urantia"))) :op6 (b6 / book :mod (l6 / location :name (n8 / name :op1 "Urantia"))) :op6 (b7 / book :mod (l7 / location :name (n9 / name :op1 "Urantia"))) :op6 (e / et-cetera))) :arg1 (d2 / deceive :arg1 (o13 / other)))
(m / multi-sentence :snt1 (s / say-01 :arg0 (i / i) :arg1 (v / voice :mod (l / little) :location (i2 / inside :op1 (i3 / i)))) :snt2 (o / obligate-01 :arg1 (y / you) :arg2 (d / do-02 :arg0 (y2 / you) :arg1 (t / temporal-quantity :quant (N / N-A) :unit (m2 / minute)) :time (f / fix-02 :arg0 (y3 / you) :arg1 (c / computer)))))
(c / contrast-01 :arg1 (c2 / conscious :polarity - :domain (p / person :name (n / name :op1 "Joan" :op2 "Rivers")) :time (s / since :op1 (a / arrive-01 :arg1 (p2 / person) :time (b / before :op1 (n2 / now) :quant (t / temporal-quantity :quant (N / N-A) :unit (d / day))) :location (p3 / peninsula :name (n3 / name :op1 "N-A"))))) :arg2 (e / express-01 :arg0 (p4 / person :arg0-of (h / have-rel-role-91 :arg1 (s2 / she) :arg2 (d2 / daughter))) :arg1 (h2 / hope-01 :arg0 (p5 / person) :arg1 (r / recover-02 :arg1 (c3 / comedian :mod (8 / 81-year-old)) :arg2 (i / illness :poss (p6 / person))) :time (t2 / today))))
(i / illustrations)
(c / cause-01 :arg0 (f / fact :domain (w / work-01 :arg0 (w2 / we) :arg1 (c2 / car) :duration (m / more-than :op1 (t / temporal-quantity :quant (1 / 1/2) :unit (y / year))) :purpose (g / get-05 :arg1 (w3 / we) :arg2 (l / level :mod (c3 / certain))))) :arg1 (e / everything))
(a / and :op1 (f / follow-02 :arg0 (p / person :name (n / name :op1 "Stephen" :op2 "Fairclough")) :arg1 (d / develop-01 :arg2 (w / we) :time (w2 / weekend))) :op2 (s / speak-01 :arg0 (p2 / person) :arg2 (p3 / person :arg0-of (p4 / protest-01) :arg0-of (t / travelled :arg1 (p5 / person) :arg2 (c / country :name (n2 / name :op1 "Belgium"))))))
(c / create-01 :arg0 (l / law) :arg1 (p / pot :consist-of (m / money) :arg1-of (f / fund-01 :arg0 (i / industry :mod (i2 / insurance)))) :arg3 (m2 / monetary-quantity :quant (3 / 350m) :unit (d / dollar :mod (r / renminbi)) :arg1-of (f2 / fund-01 :arg0 (i3 / industry :mod (i4 / insurance)) :time (a / after :op1 (d2 / date-entity :year 2012 :month 7)) :arg0-of (h / have-03 :arg1 (n / no-one :polarity -) :purpose (s / sue-02 :arg0 (n2 / no-one))))))
(d / die-01 :arg1 (p / person :arg0-of (h / hack-04 :mod (m / mesothelioma)) :quant (m2 / multiple :op1 (t / temporal-quantity :quant (N / N-A) :unit (m3 / month)))) :arg1-of (c / cause-01 :arg0 (d2 / die-01 :arg1 (p2 / person))) :time (a / after :op1 (w / war :name (n / name :op1 "N-A"))))
(w / want-01 :arg0 (i / i) :arg1 (p / pay-01 :arg0 (i2 / i) :arg3 (p2 / person :arg0-of (h / have-rel-role-91 :arg1 (i3 / i) :arg2 (f / friend :mod (d / dear) :mod (o / old))))))
(e / expect-01 :arg0 (h / he) :arg1 (e2 / expect-01 :arg1 (h2 / he :mod (a / all))))
(a / and :op1 (l / lose-02 :arg0 (i / i) :arg1 (m / mind-05 :arg0 (i2 / i)) :degree (t / too)) :op2 (w / wonder-01 :arg0 (i3 / i) :arg1 (a2 / and :op1 (t2 / thing :arg1-of (v / view-01 :arg0 (i4 / i)) :arg1-of (b / beautiful-02)) :op2 (r / route :mod (i5 / interesting :degree (m2 / more) :compared-to (y / year :mod (p / previous)))) :compared-to (e / experience-01 :arg1 (e2 / event :time (n / now))))) :time (a3 / after :op1 (w2 / while)))
(a / and :op2 (p / push-02 :polarity - :mode (i / interrogative) :arg0 (y / you) :arg2 (d / depart-01)))
(m / multi-sentence :snt1 (f / fear-01 :arg0 (w / we) :mod (l / little)) :snt2 (c / contrast-01 :arg1 (s / say-01 :arg0 (i / i) :arg1 (f2 / fear-01 :arg0 (w2 / we) :mod (l2 / little))) :arg2 (s2 / say-01 :arg0 (i2 / i) :arg1 (a / and :op1 (r / reside-01 :arg0 (p / person :name (n / name :op1 "Ronit" :op2 "Bart")) :arg1 (p2 / person :name (n2 / name :op1 "Kibbutz" :op2 "Saad"))) :op2 (r2 / reside-01 :arg0 (p3 / person) :arg1 (p4 / person :mod (c2 / country) :arg0-of (t / teach-01)) :location (s3 / school :poss (p5 / person)))))))
(a / allow-01 :polarity - :arg0 (p / person :arg0-of (h / head-01 :arg1 (c / crap :mod (m / minor-league)))) :arg1 (o / or :op1 (p2 / party :mod (o2 / other)) :op2 (m2 / move-01 :arg1 (n / name :poss (l / league)))))
(a / address-01 :arg1 (a2 / aspect :mod (n / non-rupturing)) :arg2 (a3 / and :op1 12 :op2 13))
(l / learn-01 :arg0 (h / he) :arg1 (l2 / lesson :arg1-of (h2 / hard-04)))
(m / multi-sentence :snt1 (l / leak-01 :arg1 (p / pipes) :mod (s / still)) :snt2 (a / and :op1 (s2 / sign-01 :arg0 (p2 / person :mod (c / country :name (n / name :op1 "N-A"))) :arg1 (s3 / signatures :poss (p3 / person) :location (w / windows :quant (a2 / all)))) :op2 (b / believe-01 :arg0 (p4 / person) :arg1 (b2 / belong-01 :arg0 (p5 / place :mod (g / garden :mod (g2 / giant))) :arg1 (p6 / person :arg0-of (b3 / belong-01 :arg1 (p7 / person)))))))
(w / want-01 :arg0 (e / everyone) :arg1 (t / tear :arg0 (e2 / everyone) :arg1 (w2 / we)))
(h / hold-01 :arg0 (p / person :arg0-of (a / attend-01)) :arg1 (h2 / hand :part-of (p2 / person)) :time (w / while :op1 (a2 / and :op1 (c / chanting) :op2 (h3 / hand :part-of (p3 / person)) :op3 (h4 / hand :part-of (p4 / person)))) :arg1-of (c2 / cause-01 :arg0 (w2 / wait-01 :arg1 (p5 / person) :location (l / line) :time (b / before :op1 (f / funeral)))))
(r / report-01 :arg0 (p / person :name (n / name :op1 "Chen") :arg0-of (c / cite-01 :arg1 (p2 / person :arg0-of (h / have-org-role-91 :arg1 (g / government-organization :arg0-of (g2 / govern-01 :arg1 (r2 / region))) :arg2 (o / official))))) :arg1 (p3 / person) :time (e / eventual) :arg1-of (c2 / cause-01 :arg0 (c3 / cite-01 :arg0 (p4 / person :arg0-of (h2 / have-org-role-91 :arg1 (g3 / government-organization :arg0-of (g4 / govern-01 :arg1 (r3 / region))) :arg2 (o2 / official))) :arg1 (p5 / person))))
(m / multi-sentence :snt1 (n / need-01 :arg1 (s / say-01 :arg1 (m2 / more :polarity -))) :snt2 (a / agree-01 :arg0 (w / we)))
(h / hold-04 :polarity - :arg1 (c / ceremony :time (d / date-entity :month 9)) :location (s / school :mod (e / every)))
(c / cause-01 :polarity - :arg0 (s / short-06 :arg1 (p / person :arg0-of (h / have-org-role-91 :arg1 (p2 / political-party :name (n / name :op1 "N-A"))))) :arg1 (s2 / short-06 :arg2 (m / material)))
(q / quote-01 :arg0 (a / agency :name (n / name :op1 "N-A") :mod (n2 / news) :mod (o / organization :name (n3 / name :op1 "DPA"))) :arg1 (a2 / and :op1 (f / fire-01 :arg1 (r / rocket) :source (l / location :location (n4 / northwest :part-of (c / country :name (n5 / name :op1 "DPRK"))))) :op2 (r2 / reach-01 :arg0 (r3 / rocket) :arg1 (d / distance-01 :arg1 (d2 / distance-quantity :quant (a3 / about :op1 200))))) :arg2 (p / person :arg0-of (h / have-org-role-91 :arg1 (g / government-organization :arg0-of (g2 / govern-01 :arg1 (c2 / country))) :arg2 (s / spokesman))))
(f / find-02 :arg1 (h / have-03 :arg0 (p / person :mod (c / country :name (n / name :op1 "N-A")) :quant (s / some)) :arg1 (p2 / person)))
(a / and :op1 (b / begin-01 :arg0 (c / christianity) :arg1 (f / faith :mod (g / gnostic))) :op2 (c2 / combined :arg0 (a2 / and :op1 (d / docetics) :op2 (d2 / docetics)) :arg1 (p / person :name (n / name :op1 "Jesus")) :time (e / eventual) :arg1-of (c3 / cause-01 :arg0 (c4 / combined :arg1 (c5 / compromise-01 :mod (k / kind) :arg1-of (c6 / call-01 :arg2 (o / orthodoxy)))))))
(c / contrast-01 :arg2 (p / participate-01 :mode (i / interrogative) :arg0 (y / you) :arg1 (p2 / play-off :location (l / location :name (n / name :op1 "New" :op2 "Jersey")))))
(c / challenge-01 :arg0 (b / bucket :consist-of (i / ice)))
(s / seize-01 :arg1 (m / motor :mod (m2 / motor)) :time (a / after :op1 (a2 / and :op1 (r / ride-01 :arg1 (i / it) :location (z / zone :mod (7 / 70km/h))) :op2 (e / escape-01 :arg0 (i2 / i) :arg1 (p / police :location (l / location :name (n / name :op1 "Pilbara")))))))
(c / contrast-01 :arg2 (k / know-01 :arg0 (i / i) :arg1 (t / turn-02 :arg1 (p / person :quant 1 :arg1-of (i2 / include-91 :arg2 (p2 / person :arg0-of (h / have-rel-role-91 :arg1 (y / you) :arg2 (c2 / countryman))))) :arg2 (a / and :op1 (p3 / person :arg1-of (i3 / imprison-01 :arg2 (w / war))) :op2 (t2 / thing :manner-of (f / free-04 :arg1 (p4 / person)))))))
(a / and :op1 (s / send-01 :arg1 (p / party :arg0-of (s2 / search-01) :arg2-of (i / involve-01 :arg1 (a2 / and :op1 (p2 / police :arg1-of (l / local-02)) :op2 (s3 / squad :purpose (r / rescue-01))))) :arg2 (o / out)) :op2 (f / find-01 :arg1 (t / thing :arg2-of (p3 / pair)) :location (n / near-02 :arg2 (l2 / location :name (n2 / name :op1 "Bridal" :op2 "Veil" :op3 "Falls")))))
(m / move-01 :arg1 (s / space :mod (b / between :op1 (w / wing :poss (a / aircraft)) :op2 (s2 / show-04 :arg1 (s3 / show-04 :arg1 (s4 / she))))) :arg2 (a2 / and :op1 (c / continue-01 :arg0 (w2 / wing :poss (a3 / aircraft)) :arg1 (s5 / space :arg0 (w3 / wing :poss (a4 / aircraft)))) :op2 (e / explain-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (o / organization :name (n / name :op1 "Cheb" :op2 "Ultralight" :op3 "Club")))) :arg1 (p2 / person :arg0-of (h2 / have-org-role-91 :arg1 (o2 / organization) :arg3 (l / lead-02 :arg0 (p3 / person)))) :time (d / day :mod (c2 / country :name (n2 / name :op1 "N-A"))))) :arg1-of (n3 / near-02 :arg2 (e2 / end-01 :arg1 (p4 / perform-01))))
(b / big :degree (t / too) :domain (f / foot :part-of (y / you)))
(c / contrast-01 :arg1 (w / write-01 :polarity - :arg0 (n / netizen) :arg1 (p / person :mod (g / good :degree (m / most))) :frequency (o / often)) :arg2 (m2 / manage-02 :arg0 (p2 / person :name (n2 / name :op1 "Brian" :op2 "Green") :source (o2 / organization :name (n3 / name :op1 "Columbia" :op2 "University"))) :arg1 (h / hit-01 :arg0 (p3 / person) :arg1 (e / eye :part-of (c2 / cluster)) :location (t / thing :quant 1999))))
(b / believe-01 :arg0 (b2 / boy :arg0-of (f / flee-05)) :arg1 (d / die-01 :arg1 (p / person :arg0-of (h / have-rel-role-91 :arg1 (b3 / boy) :arg2 (m / mother)))))
(c / close-10 :arg1 (y / you) :arg2 (s / subject :poss (y2 / you)))
(s / seem-01 :arg1 (o / over :domain (a / and :op1 (l / location :name (n / name :op1 "Olomouc") :arg0-of (h / have-org-role-91 :arg1 (o2 / organization :name (n2 / name :op1 "Sigma" :op2 "Olomouc")))) :op2 (p / person :name (n3 / name :op1 "Josef" :op2 "Lébra") :arg0-of (h2 / have-org-role-91 :arg1 (o3 / organization) :arg3 (t / thunder))))) :time (w / week :mod (l2 / last)) :location (s2 / subordinate :poss (a2 / and)))
(t / think-01 :arg0 (i / i) :arg1 (p / possible-01 :arg1 (h / have-03 :arg0 (p2 / person :quant 1 :arg1-of (n / neighbor-01 :arg2 (p3 / person))) :arg1 (c / condition :mod (g / good)) :degree (e / entire :polarity -))))
(a / and :op1 (p / possible-01 :arg1 (s / see-01 :arg1 (n / nothing) :location (w / water))) :op2 (s2 / shined :arg0 (w2 / we) :arg1 (w3 / way :mod (a2 / all) :direction (b / bottom))) :mod (o / otherwise))
(c / contrast-01 :arg1 (f / fear-01 :polarity - :arg0 (i / i) :arg1 (g / go-back-19 :arg1 (i2 / i) :arg2 (g2 / gym))) :arg2 (t / think-01 :polarity - :arg0 (i3 / i) :arg1 (a / about :op1 (i4 / i))))
(a / award-01 :arg1 (r / rate-entity-91 :arg1 80 :arg2 (t / temporal-quantity :quant (N / N-A) :unit (y / year))) :arg2 (r2 / rate-entity-91 :arg1 (t2 / thing :arg1-of (a2 / award-01 :arg2 (c / court))) :arg2 (c2 / case :arg1-of (c3 / compensate-01 :arg1-of (n / normal-02))) :arg3 (m / monetary-quantity :quant 120,000 :unit (p / pound))) :prep-in (c4 / case :mod (t3 / this)))
(s / say-01 :arg1 (p / possible-01 :arg1 (h / he)) :arg2 (p2 / person :name (n / name :op1 "Kevern")))
(p / pyramid :arg0 (p2 / person :name (n / name :op1 "Luther" :op2 "Rabinowitz")) :arg1 (f / finger :part-of (h / he)))
(c / contrast-01 :arg1 (p / possible-01 :arg1 (t / think-01 :polarity - :arg0 (p2 / person :name (n / name :op1 "Janice" :op2 "Allen")) :arg1 (v / victim :arg1-of (i / include-91 :arg2 (v2 / victim :mod (m / mesothelioma)))))) :arg2 (s / suggest-01 :arg0 (w / work-01 :arg0 (p3 / person :name (n2 / name :op1 "Julian" :op2 "Peto"))) :arg1 (b / be-located-at-91 :arg1 (s2 / story :poss (p4 / person)) :arg2 (u / uncommon))))
(h / hard-02 :arg1 (i / imagine-01 :arg1 (f / folded :arg1 (t / twitch) :arg2 (o / organization :name (n / name :op1 "Amazon" :op2 "Instant" :op3 "Video")) :degree (m / most) :compared-to (p / possible-01 :arg1 (s / swallowed :arg0 (p2 / publication :name (n2 / name :op1 "YouTube")) :mod (j / just))))))
(m / multi-sentence :snt1 (c / concern-01 :arg0 (t / that)) :snt2 (f / find-02 :arg0 (w / we) :arg1 (m2 / mistake-02 :arg0 (w2 / we) :arg1 (m3 / mistake-02 :arg0 (w3 / we) :arg1-of (l / lead-03 :arg2 (e / event :mod (a / amr-unknown)) :condition (e2 / event :location (p / place :ord (o / ordinal-entity :value 1)))))) :condition (f2 / forewarned :polarity - :domain (w4 / we))))
(m / multi-sentence :snt1 (l / leave-11 :arg0 (i / i) :time (b / before :op1 (r / rush-01 :arg1 (t / terrorist) :arg2 (y / yard))) :time (b2 / before :op1 (r2 / rush-01 :arg1 (t2 / terrorist) :arg2 (y2 / yard)))) :snt2 (c / cause-01 :arg1 (l2 / leave-11 :arg0 (b3 / boy :mod (l3 / little) :poss (i2 / i)) :arg1 (c2 / course :topic (h / horror)) :duration (t3 / temporal-quantity :quant (N / N-A) :unit (d / day)))))
(g / great :domain (w / water))
(d / do-02 :arg0 (p / person :arg0-of (h / have-rel-role-91 :arg1 (h2 / he) :arg2 (f / father))) :arg1 (l / letter :mod (l2 / letter)) :time (a / always) :time (b / before :op1 (l3 / leave-15 :arg0 (p2 / person) :arg1 (l4 / lip :poss (p3 / person)))))
(s / suspect-01 :arg0 (g / government-organization :arg0-of (g2 / govern-01)) :arg1 (c / continue-01 :arg0 (p / person :arg2-of (s2 / suspect-01 :arg0 (g3 / government-organization :arg0-of (g4 / govern-01)))) :arg1 (d / deposit :arg1 (p2 / person) :arg2 (a / account :mod (b / bank)))) :arg2 (p3 / person :arg2-of (s3 / suspect-01 :arg1 (c2 / continue-01 :arg1 (s4 / serve-01 :arg0 (p4 / person) :arg2 (a2 / account :mod (b2 / bank)))))) :time (a3 / after :op1 (o / or :op1 (d2 / die-01 :arg1 (p5 / person)) :op2 (l / leave-15 :arg0 (p6 / person) :arg1 (s5 / service :arg1-of (p7 / public-02)))) :op3 (r / report-01 :arg0 (c3 / company :name (n / name :op1 "BBC")) :arg1 (p8 / person :name (n2 / name :op1 "Wanyama" :op2 "Chebusiri") :arg0-of (h / have-org-role-91 :arg1 (c4 / company) :arg2 (c5 / capital))))))
(i / include-91 :arg1 (a / and :op1 (p / person :arg0-of (s / seek-01 :arg1 (o / out-06 :arg1 (p2 / person) :arg2 (o2 / out)))) :op2 (p3 / person :arg0-of (h / have-rel-role-91 :arg1 (h2 / he) :arg2 (w / wife))) :op3 (p4 / person :arg0-of (h3 / have-rel-role-91 :arg1 (h4 / he) :arg2 (w2 / wife))) :op4 (p5 / person :arg0-of (h5 / have-rel-role-91 :arg1 (h6 / he) :arg2 (w3 / wife))) :op5 (p6 / person :arg0-of (h7 / have-rel-role-91 :arg1 (h8 / he) :arg2 (w4 / wife))) :op6 (p7 / person :arg0-of (h9 / have-rel-role-91 :arg1 (h10 / he) :arg2 (w5 / wife))) :op7 (p8 / person :arg0-of (h11 / have-rel-role-91 :arg1 (h12 / he) :arg2 (w6 / wife)))) :arg2 (p9 / person :arg0-of (h13 / have-rel-role-91 :arg1 (h14 / he) :arg2 (c / child))))
(a / and :op1 (l / large :degree (m / more :degree (m2 / much)) :domain (o / one :mod (t / this))) :op2 (s / say-01 :arg0 (p / person :name (n / name :op1 "Ármann" :op2 "Höskuldsson") :arg0-of (h / have-org-role-91 :arg1 (c / country :name (n2 / name :op1 "N-A")) :arg2 (p2 / person :arg1-of (e / expert-01)))) :arg1 (l2 / large :degree (m3 / more :degree (m4 / much)) :mod (a2 / also))))
(h / headlines :arg1 (h2 / headline :example (a / attack-01 :arg0 (c / country :name (n / name :op1 "Israel")) :arg1 (c2 / country-region :name (n2 / name :op1 "Gaza")))) :degree (e / entire) :mod (c3 / common))
(c / contrast-01 :arg2 (p / possible-01 :arg1 (m / more :quant (m2 / many)) :mod (o / of-course)))
(c / contain-01 :arg0 (i / item :arg1-of (b / be-located-at-91 :arg2 (h / home :poss (w / we)))) :arg1 (t / thing :arg1-of (c2 / contain-01)) :manner (r / routine) :location (h2 / home :poss (w2 / we)) :time (m / meanwhile))
(c / contrast-01 :arg1 (f / forget-01 :arg0 (p / person :arg0-of (a / attack-01 :arg1 (l / labor)) :arg0-of (a2 / attack-01)) :arg1 (t / truth :arg1-of (s / simple-02) :mod (t2 / this))) :arg2 (r / remembers :arg0 (p2 / person) :arg1 (h / history)))
(s / say-01 :arg0 (t / thing :arg1-of (p / plan-01 :arg0 (p2 / person :name (n / name :op1 "Jágr")))) :arg1 (s2 / sell-01 :arg1 (c / country :name (n2 / name :op1 "N-A")) :direction (o / out)))
(p / possible-01 :arg1 (a / awaiting :arg0 (w / we) :arg1 (g / game :arg1-of (n / nice-01)) :prep-against (c / country :name (n2 / name :op1 "Netherlands"))))
(c / contrast-01 :arg1 (t / take-01 :arg0 (s / sigma) :arg1 (a / approach-02 :mod (s2 / soccer-like) :quant (m / more))) :arg2 (a2 / and :op1 (l / let-01 :polarity - :arg0 (w / we) :arg1 (d / do-02 :arg0 (t2 / they) :arg1 (a3 / anything))) :op2 (c2 / comment-01 :arg0 (t3 / they) :arg3 (c3 / coach :name (n / name :op1 (s3 / silesians) :op2 (c4 / coach) :op3 (c5 / coach))))))
(c / contrast-01 :arg2 (d / differ-02 :arg1 (t / thing :arg1-of (d2 / differ-02))))
(c / conduct-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg2 (o / official :mod (e / enforce-01 :arg1 (l / law))))) :arg1 (h2 / home :mod (h3 / home) :quant (s / several) :location-of (f / find-01 :arg0 (p2 / person) :arg1 (a / and :op1 (d / drug) :op2 (c2 / chemical :mod (i / industry)) :op3 (a2 / and :op1 (c3 / chemical :mod (i2 / industry)) :op2 (c4 / chemical :mod (i3 / industry)) :op3 (s2 / sacks :mod (s3 / skin)) :op4 (i4 / injection :mod (p3 / plastic)) :op5 (i5 / injection :mod (o2 / other)) :op6 (a3 / and :op1 (s4 / supply-01 :arg1 (a4 / and :op1 (s5 / supply-01 :arg1 (m / methamphetamine)) :op2 (s6 / supply-01 :arg1 (m2 / methamphetamine))) :arg1-of (c5 / complete-02))))))) :location (o3 / order :mod (c6 / court)) :mod (a5 / also))
(a / and :op1 (e / expose-01 :arg1 (a2 / asbestos :mod (l / lethal) :mod (p / pinning)) :arg2 (o / or :op1 (c / company :quant 1) :op2 (p2 / place :quant (m / multiple :op1 1)))) :op2 (p3 / prove-01 :arg0 (a3 / asbestos) :arg1 (p4 / problem :mod (h / huge) :topic (s / seek-01 :arg0 (p5 / person :arg0-of (s2 / seek-01 :arg1 (c2 / compensate-01))) :arg1 (c3 / compensate-01)))) :prep-in (f / fact))
(d / distance :arg0 (c / coating :poss (i / it)) :arg1 (d2 / distance-01 :arg1-of (l / long-03)))
(p / perform-01 :arg0 (p2 / person :name (n / name :op1 "Cheb") :arg1-of (n2 / neighbor-01 :arg2 (s / side :mod (g / german) :part-of (b / border)))) :arg1 (p3 / perform-01 :arg2-of (i / include-91 :arg1 (a / and :op1 (a2 / aircraft :name (n3 / name :op1 (r / reconstructed)) :mod (1 / 18t)) :op2 (a3 / aircraft :name (n4 / name :op1 (t / three-member)) :arg0-of (u / use-01 :arg1 (b2 / biplanes :arg1 (p4 / person))))))))
(s / start-01 :arg1 (p / person :name (n / name :op1 "Stewart") :arg1-of (s2 / start-01 :location (s3 / spot :ord (o / ordinal-entity :value 12)))) :location (s4 / spot :mod (e / early :degree (m / most) :compared-to (g / get-05 :arg1 (p2 / person) :arg2 (o2 / ordinal-entity :value 4)))))
(s / say-01 :arg0 (p / person :name (n / name :op1 "Hattery")) :arg1 (a / and :op1 (l / lynched :arg1 (m / man :quant (a2 / at-least :op1 1865) :arg1-of (b / black-05))) :op2 (j / justify-01 :arg1 (r / rape-01 :arg1 (w / woman :mod (w2 / white))) :time (a3 / always :mod (a4 / almost)))) :li 1865)
(r / resemble-01 :arg1 (i / it) :arg2 (t / today :time (t2 / today) :ord (o / ordinal-entity :value 1 :range (t3 / temporal-quantity :quant (N / N-A) :unit (m / minute)))))
(o / obvious-01 :polarity - :arg1 (a / authors :poss (b / book :mod (t / this))))
(a / and :op1 (s / subsets :arg1 (p / person :mod (r / religious-group :name (n / name :op1 "N-A")) :mod (o / other)) :arg1-of (r2 / resemble-01 :arg2 (l / luciferians :arg1 (p2 / person)))) :op2 (d / discredited :arg0 (p3 / person) :degree (f / further)))
(m / multi-sentence :snt1 (h / have-03 :arg0 (p / person :name (n / name :op1 "Henry")) :arg1 (b / brain :part-of (c / comedian)) :mod (s / still)) :snt2 (b2 / break-01 :arg0 (c2 / converse-01 :arg0 (w / we)) :arg1 (f / flash :poss (h2 / he)) :arg1-of (c3 / cause-01 :arg0 (a / and :op1 (s2 / slips :arg0 (h3 / he)) :op2 (o / out-06 :arg1 (h4 / he) :arg2 (a2 / atheist))))))
(s / say-01 :arg0 (h / he) :arg1 (w / work-09 :arg1 (i / it) :condition (a / and :op1 (f / fight-01 :arg0 (w2 / we)) :op2 (k / kick-01 :arg0 (w3 / we) :arg1 (e / everyone))) :condition (a2 / and :op1 (f2 / fight-01 :arg0 (w4 / we)) :op2 (k2 / kick-01 :arg0 (w5 / we) :arg1 (e2 / everyone)))))
(e / explain-01 :polarity - :arg0 (i / i) :arg1 (t / thing :arg0-of (c / cause-01)) :mod (e2 / even) :mod (h / honest))
(n / note :mod (p / positive) :mod (o / one) :source (l / location :name (n2 / name :op1 "Republic" :op2 "of" :op3 "Ireland")) :arg0-of (s / see-01 :arg1 (g / grow-01 :arg1 (i / it) :arg4 (l2 / level :arg1-of (h / high-02 :degree (m / most)) :poss (i2 / it)) :time (s2 / since :op1 (e / end-01 :arg1 1999 :quant 1999)))))
(c / contrast-01 :arg1 (h / hard-02 :arg1 (g / go-02 :arg0 (i / i) :arg4 (g2 / gym))) :arg2 (o / obligate-01 :arg2 (d / do-02 :arg0 (i2 / i) :arg1 (i3 / it))))
(a / and :op1 (t / take-out-11 :arg0 (l / location :name (n / name :op1 "Olomouc")) :arg1 (p / point :quant 1) :arg3 (o / organization :name (n2 / name :op1 "Opava"))) :op2 (h / have-03 :arg0 (v / va?í?ek) :arg1 (g / goal :mod (p2 / potential) :arg0-of (w / win-01 :arg1 (g2 / goal :poss (h2 / he))))))
(s / say-01 :arg0 (p / person :arg1-of (e / expert-01 :arg2 (p2 / person :arg0-of (h / have-org-role-91 :arg1 (c / country :name (n / name :op1 "Britain")) :arg2 (p3 / person :arg1-of (e2 / expert-01))) :arg0-of (h2 / have-org-role-91 :arg2 (p4 / professor)))) :arg0-of (h3 / have-org-role-91 :arg2 (p5 / professor))) :arg1 (d / die-01 :arg1 (p6 / person :quant (s2 / some :op1 90000)) :arg1-of (c2 / cause-01 :arg0 (r / recommend-01 :arg1 (p7 / play-11 :arg0 (t / type :mod (a / asbestos) :location (c3 / country)) :arg2 (o / out))))))
(s / say-01 :arg0 (m / military :location (l / location :name (n / name :op1 "Lesotho"))))
(c / contrast-01 :arg1 (l / level :domain (r / rate :mod (g / grow-01 :arg1 (g2 / grow-01 :arg1 (g3 / grow-01 :arg1 (p / percentage-entity :value (N / N-A)))))) :arg2 (p2 / product-of :op1 4.3 :op2 (p3 / percentage-entity :value (N2 / N-A)))) :arg2 (f / fast :domain (g4 / grow-01 :arg1 (s / state :name (n / name :op1 "Maryland"))) :manner (s2 / substantial)))
(l / love-01 :arg0 (i / i) :arg1 (i2 / it) :mod (r / really))
(s / seem-01 :arg1 (d / distress :arg1 (s2 / she) :manner (g / genuine)))
(s / say-01 :arg0 (a / and :op1 (p / person :arg0-of (c / campaign-01 :arg1 (r / right))) :op2 (p2 / person :arg0-of (h / have-org-role-91 :arg1 (o / organization :name (n / name :op1 "American" :op2 "College" :op3 "of" :op4 "Obstetricians")))) :op3 (p3 / person :arg0-of (h2 / have-org-role-91 :arg1 (o2 / organization :name (n2 / name :op1 "American" :op2 "Medical" :op3 "Association")))) :op4 (p4 / person :arg0-of (h3 / have-org-role-91 :arg1 (o3 / organization) :arg3 (c2 / campaign-01))) :op5 (p5 / person :arg0-of (h4 / have-org-role-91 :arg1 (o4 / organization) :arg3 (c3 / campaign-01))) :op6 (p6 / person :arg0-of (h5 / have-org-role-91 :arg1 (o5 / organization) :arg3 (c4 / campaign-01))) :op6 (p7 / person :arg0-of (h6 / have-org-role-91 :arg1 (o6 / organization) :arg3 (c5 / campaign-01))) :op6 (p8 / person :arg0-of (h7 / have-org-role-91 :arg1 (o7 / organization) :arg3 (c6 / campaign-01))) :op6 (p9 / person :arg0-of (h8 / have-org-role-91 :arg1 (o8 / organization) :arg3 (c7 / campaign-01))) :op6 (p10 / person :arg0-of (h9 / have-org-role-91 :arg1 (o9 / organization) :arg3 (c8 / campaign-01))) :op6 (p11 / person :arg0-of (h10 / have-org-role-91 :arg1 (o10 / organization) :arg3 (c9 / campaign-01))) :op6 (p12 / person :arg0-of (h11 / have-org-role-91 :arg1 (o11 / organization) :arg3 (c10 / campaign-01))) :op6 (p13 / person :arg0-of (h12 / have-org-role-91 :arg1 (o12 / organization) :arg3 (c11 / campaign-01))) :op6 (p14 / person :arg0-of (h13 / have-org-role-91 :arg1 (o13 / organization) :arg3 (c12 / campaign-01))) :op6 (p15 / person :arg0-of (h14 / have-org-role-91 :arg1 (o14 / organization) :arg3 (c13 / campaign-01))) :op6 (p16 / person :arg0-of (h15 / have-org-role-91 :arg1 (o15 / organization) :arg3 (c14 / campaign-01))) :op6 (p17 / person :arg0-of (h16 / have-org-role-91 :arg1 (o16 / organization) :arg3 (c15 / campaign-01)))))
(n / note-01 :arg0 (t / thing :arg1-of (r / report-01 :arg0 (t2 / thing :arg1-of (r2 / report-01 :arg0 (t3 / thing :arg1-of (r3 / report-01 :arg0 (t4 / thing :arg1-of (r4 / report-01 :arg0 (t5 / thing :arg1-of (r5 / report-01 :arg0 (t6 / thing :arg1-of (r6 / report-01 :arg0 (t7 / thing :arg1-of (r7 / report-01 :arg0 (t8 / thing :arg1-of (r8 / report-01 :arg0 (t9 / thing :arg1-of (r9 / report-01 :arg0 (t10 / thing :arg1-of (r10 / report-01 :arg0 (t11 / thing :arg1-of (r11 / report-01 :arg0 (t12 / thing :arg1-of (r12 / report-01 :arg0 (t13 / thing :arg1-of (r13 / report-01)))))))))))))))))))))))))) :arg1 (m / manage-02 :polarity - :arg1 (p / presence :mod (a / asbestos)) :arg1-of (a2 / accord-02 :arg2 (r14 / regulate-01 :mod (v / various)))))
(c / charge-05 :arg0 (o / organization :name (n / name :op1 "Karratha" :op2 "Police")) :arg1 (m / man :mod (2 / 20-year-old)) :arg2 (f / fail-01 :arg1 (m2 / man) :arg2 (a / and :op1 (s / stop-01 :arg1 (m3 / man)) :op2 (d / drive-01 :arg0 (m4 / man)))))
(w / want-01 :arg0 (e / everyone) :arg1 (t / tear :arg0 (e2 / everyone) :arg1 (w2 / we)))
(f / focus-01 :arg0 (w / we) :arg2 (c / country :name (n / name :op1 "Netherlands")) :time (n2 / now))
(c / contrast-01 :arg1 (k / keep-01 :arg0 (i / i) :arg1 (g / game :quant 1 :mod (m / more)) :time (s / speak-01 :arg0 (i2 / i) :time (w / week :mod (l / last)))) :arg2 (o / optimistic :domain (i3 / i) :degree (m2 / more :degree (m3 / much)) :arg1-of (c2 / cause-01 :arg0 (a / and :op1 (c3 / confirm-01 :arg0 (p / person :name (n / name :op1 "Lébra")) :arg1 (w2 / win-01 :polarity - :arg0 (p2 / person))) :op2 (e / explain-01 :arg0 (p3 / person) :arg1 (t / that) :arg2 (p4 / perform-01 :arg0 (p5 / person) :arg1-of (i4 / improve-01)) :concession (w3 / win-01 :polarity - :arg0 (p6 / person)))))))
(m / multi-sentence :snt1 (p / possible-01 :arg1 (v / view-01 :arg0 (p2 / person) :arg1 (p3 / person :arg2-of (i / include-01 :arg1 (p4 / person :name (n / name :op1 "Petr")))))) :snt2 (a / and :op1 (l / location :name (n2 / name :op1 "Chelsea")) :op2 (p5 / person :name (n3 / name :op1 "Pavel" :op2 "Vrba") :arg0-of (h / have-org-role-91 :arg1 (t / team) :arg2 (c / coach))) :op3 (o / other)))
(m / multi-sentence :snt1 (p / person :name (n / name :op1 "Petr")) :snt2 (t / transfer-01 :mode (i / interrogative) :arg1 (t2 / transfer-01) :time (m2 / minute :mod (l / last))))
FAILED_TO_PARSE#Number of opening and closing brackets doesn't match.
(a / and :op1 (p / person :name (n / name :op1 "Steven" :op2 "Spielberg") :arg0-of (h / have-org-role-91 :arg2 (d / director))) :op2 (p2 / person :arg0-of (h2 / have-org-role-91 :arg2 (d2 / director))) :op3 (p3 / person :arg0-of (h3 / have-org-role-91 :arg2 (d3 / director))) :op4 (p4 / person :arg0-of (h4 / have-org-role-91 :arg2 (d4 / director))) :op5 (p5 / person :arg0-of (h5 / have-org-role-91 :arg2 (d5 / director))))
(p / post-01 :arg0 (s / state :name (n / name :op1 "Virginia")) :arg1 (b / bill :mod (t / tax-01 :arg3 (t2 / tax))) :arg2 (p2 / percentage-entity :value (N / N-A)) :mod (o / only))
(m / multi-sentence :snt1 (c / contrast-01 :arg2 (a / and :op1 (t / turn-01 :polarity - :arg0 (i / i) :arg1 (a2 / around :op1 (o / opportunity :arg1-of (f / fail-01)))) :op2 (e / end-01 :arg1 (a3 / around :op1 (o2 / opportunity :arg1-of (f2 / fail-01)))))) :snt2 (s / say-01 :arg0 (p / person :name (n / name :op1 "Hanák")) :arg1 (e2 / express-01 :arg0 (p2 / person :name (n2 / name :op1 "Leo?e" :op2 "Kalvoda")) :arg1 (d / disappoint-01 :arg1 (p3 / person)))))
(m / multi-sentence :snt1 (h / have-03 :arg0 (i / it) :arg1 (h2 / home :poss (i2 / it) :location (a / airport :location (l / location :name (n / name :op1 "Mnichov")))) :time (t / today)) :snt2 (h3 / hradi?ti :mode (i3 / interrogative)))
(m / multi-sentence :snt1 (l / like-02 :arg0 (i / i) :arg1 (b / believe-01 :arg0 (i2 / i) :arg1 (t / that)) :mod (r / really)) :snt2 (a / add-01 :arg0 (h / he)))
FAILED_TO_PARSE#Two concepts in a row.
(a / and :op2 (k / know-01 :arg0 (p / person :arg0-of (c / claim-01 :arg1 (c2 / claim-01))) :arg1 (h / have-03 :arg0 (p2 / person) :arg1 (t / time) :location (s / side :poss (p3 / person)) :arg1-of (c3 / cause-01 :arg0 (d / do-02 :polarity - :arg0 (p4 / person) :mod (c4 / certain))))))
(c / contrast-01 :arg1 (i / interest-01 :arg1 (t / they) :arg2 (e / express-01 :arg0 (m / magazine :mod (c2 / country :name (n / name :op1 "N-A"))) :arg1 (i2 / interest-01 :arg1 (t2 / they)) :arg1-of (r / report-01))) :arg2 (p / prefer-01 :arg0 (p2 / person :arg0-of (h / hack-04)) :arg1 (g / get-01 :arg0 (p3 / person) :arg1 (m2 / money) :arg2 (c3 / community))))
(a / and :op1 (r / recognize-02 :arg0 (p / person :quant (s / some) :arg1-of (e / expert-01)) :arg1 (s2 / source :quant 4 :arg1-of (d / differ-02)) :time (n / now) :beneficiary (l / location :name (n2 / name :op1 "Pentateuch")) :mod (j / just)) :op2 (c / credit-01 :polarity - :arg0 (p2 / person) :arg1 (p3 / person :name (n3 / name :op1 "Moses")) :arg2 (p4 / person :arg0-of (a2 / author-01)) :prep-as (p5 / person :arg0-of (a3 / author-01)) :arg1-of (c2 / cause-01 :arg0 (d2 / describe-01 :arg0 (p6 / person) :arg1 (p7 / person :arg0-of (a4 / author-01)) :arg2 (p8 / person :arg0-of (a5 / author-01))))))
(a / and :op1 (a2 / address-02 :arg0 (l / lawyer :arg1-of (s / surround-01 :arg2 (t / team :mod (s2 / soccer) :ord (o / ordinal-entity :value 1)))) :arg1 (t2 / team :mod (s3 / soccer) :mod (g / grade :ord (o2 / ordinal-entity :value 1))) :time (a3 / already)) :op2 (r / recommend-01 :arg0 (l2 / lawyer) :arg1 (c / change-01 :arg0 (l3 / lawyer) :arg1 (s4 / system :poss (g2 / grant-01 :arg1 (d / divide))))))
(s / say-01 :arg1 (m / manage-02 :arg0 (y / you) :arg1 (r / rescue-01 :arg0 (y2 / you) :arg1 (y3 / you)) :time (a / already)) :arg2 (p / person :name (n / name :op1 "N-A")))
(d / differ-02 :mod (i / important :degree (m / more :mod (e / even))) :time (n / now) :arg1-of (c / cause-01 :arg0 (t / talk-01 :arg0 (w / we) :arg1 (a / and :op1 (g / geometry :arg1 (u / universe)) :op2 (c2 / complain-01 :polarity - :arg0 (w2 / we) :arg1 (u2 / universe)) :op3 (c3 / complain-01 :arg0 (w3 / we))))) :mod (i2 / important :degree (m2 / more :mod (e2 / even))))
(p / point :beneficiary (c / country :name (n / name :op1 "Italy")))
(d / decide-01 :arg0 (c / company :name (n / name :op1 "Abbott")) :arg1 (p / pursue-01 :arg0 (c2 / company) :arg1 (t / treat-01 :arg0 (c3 / company) :arg1 (p2 / person :name (n2 / name :op1 "Loic" :op2 "Lang-Lazdunski") :arg0-of (h / have-org-role-91 :arg2 (p3 / professor))) :arg2 (s / surgery-01 :arg1 (g / guy) :arg2 (s2 / surgery-01 :arg2 (g2 / guy))))) :time (a / after :op1 (s3 / see-01 :arg0 (c4 / company) :arg1 (c5 / consultants :quant (s4 / several)))))
(m / multi-sentence :snt1 (a / and :op1 (w / work-09 :arg1 (i / it) :mod (r / really)) :op2 (s / speed-01 :arg0 (w2 / we) :mod (a2 / again))) :snt2 (b / begin-01 :arg1 (c / caught :arg1 (r2 / race)) :mod (j / just) :concession (f / fall-01 :arg1 (w3 / we) :arg4 (b2 / behind :op1 (f2 / far :degree (q / quite))))))
(a / and :op1 (l / large :degree (m / more :degree (m2 / much)) :domain (o / one :mod (t / this))) :op2 (s / say-01 :arg0 (p / person :name (n / name :op1 "Ármann" :op2 "Höskuldsson") :arg0-of (h / have-org-role-91 :arg1 (c / country :name (n2 / name :op1 "N-A")) :arg2 (p2 / person :arg1-of (e / expert-01)))) :arg1 (l2 / large :degree (m3 / more :degree (m4 / much)) :mod (a2 / also))))
(i / include-01 :arg1 (a / and :op1 (p / person :arg0-of (h / have-org-role-91 :arg2 (o / officer))) :op2 (v / veteran :mod (e / even) :source (c / country :name (n / name :op1 "Afghanistan")))) :arg2 (t / they))
(p / pyramid :arg0 (p2 / person :name (n / name :op1 "Luther" :op2 "Rabinowitz")) :arg1 (f / finger :part-of (h / he)))
(p / possible-01 :arg1 (b / boasted :arg0 (t / they) :arg1 (t2 / trick :poss (s / series :poss (s2 / series :ord (o / ordinal-entity :value 4))))) :time (s3 / so-far))
(a / and :op1 (g / go-02 :arg0 (i / i)) :op2 (a2 / attend-01 :arg0 (i2 / i) :arg1 (c / ceremony :arg1-of (h / hold-04 :purpose (m / mark-01 :arg0 (c2 / ceremony) :arg1 (i3 / it))))))
(r / respond-01 :arg0 (y / year :mod (t / this)) :arg1-of (c / cause-01 :arg0 (s / see-01 :arg0 (y2 / year :mod (t2 / this)) :arg1 (e / easy-05 :arg1 (l / legislation) :degree (m / more) :arg0-of (m2 / make-02 :arg1 (e2 / easy-05 :arg1 (c2 / claim-01 :arg1 (c3 / compensate-01)) :arg1-of (e3 / easy-05 :degree (m3 / more) :concession (p / possible-01 :polarity - :arg1 (t3 / trace-02 :arg1 (r2 / revenue) :time (n / no-longer))))))))))
FAILED_TO_PARSE#Two concepts in a row.
(c / contrast-01 :arg1 (f / feel-01 :arg0 (s / she) :arg1 (l / leaden)) :arg2 (s2 / surprise-01 :arg0 (w / weight :poss (g / grief :arg0 (h / he))) :arg1 (s3 / she)))
(a / and :op1 (b / buy-01 :arg0 (p / public :mod (c / country :name (n / name :op1 "N-A"))) :arg1 (t / temporal-quantity :quant (N / N-A) :unit (y / year))) :op2 (b2 / buy-01 :arg0 (p2 / public :mod (c2 / country :name (n2 / name :op1 "N-A"))) :arg1 (e / enterprise :mod (m / media) :mod (g / great :degree (m2 / most) :compared-to (w / world)))))
(a / and :op1 (s / search-01 :arg0 (p / person :name (n / name :op1 "Aida")) :arg2 (p2 / person :arg0-of (h / have-rel-role-91 :arg1 (s2 / she) :arg2 (m / mother))) :manner (d / desperate)) :op2 (p3 / person :name (n2 / name :op1 "Larissa") :arg0-of (h2 / have-rel-role-91 :arg1 (p4 / person) :arg2 (m2 / mother) :time (n3 / now))) :li 40)
(b / be-temporally-at-91 :arg1 122 :arg2 (a / after :op1 (r / restart-01 :arg1 (p / person :name (n / name :op1 "Busch")))) :time (t / then))
(a / and :op1 (s / sign-02 :arg0 (l / location :name (n / name :op1 "North" :op2 "Carolina")) :arg1 (l2 / legislate-01 :arg0 (l3 / location :name (n2 / name :op1 "North" :op2 "Carolina")) :arg1 (r / rate-entity-91 :arg1 (p / percentage-entity :value (N / N-A)) :arg2 (t / temporal-quantity :quant (N2 / N-A) :unit (y / year))) :arg4 (p2 / percentage-entity :value (N3 / N-A))) :time (r2 / recent)) :op2 (d / drop-01 :arg1 (r3 / rate) :arg4 (p3 / percentage-entity :value (N4 / N-A)) :arg4 (p4 / percentage-entity :value (N5 / N-A)) :time (y2 / year :mod (n3 / next))))
(c / cause-01 :arg0 (t / trust-01 :polarity - :arg0 (w / woman :mod (c2 / color)) :arg1 (w2 / woman :mod (w3 / white))) :arg1 (l / look-01 :mode (i / imperative) :arg0 (y / you) :arg1 (t2 / thing :arg1-of (r / resemble-01 :arg2 (t3 / that)))))
FAILED_TO_PARSE#Number of opening and closing brackets doesn't match.
(c / cause-01 :arg0 (d / delay-01 :arg0 (f / fly-01)) :arg1 (d2 / delay-01 :arg1 (f2 / fly-01 :mod (o / other) :quant (f3 / few) :arg2-of (i / include-01 :arg1 (f4 / fly-01 :source (a / and :op1 (c2 / city :name (n / name :op1 "Dubai")) :op2 (c3 / company :name (n2 / name :op1 "Qantas"))) :source (c4 / city :name (n3 / name :op1 "Sydney"))))) :mod (s / subsequent)))
(h / hard-02 :arg1 (a / accept-01 :arg1 (g / go-on-15 :arg1 (l / life))) :concession (e / even-if :op1 (w / want-01 :polarity - :arg0 (y / you) :arg1 (a2 / accept-01))))
(s / say-01 :arg0 (h / he) :arg1 (c / cause-01 :arg0 (a / army :mod (c2 / country :name (n / name :op1 "N-A"))) :arg1 (t / thing :arg2-of (s2 / sanction-02) :arg1-of (t2 / tough-02) :arg1-of (r / relate-01 :arg2 (d / down :op1 (d2 / down :op1 (a2 / aircraft :mod (c3 / civilian))))))))
(a / adapt-01 :arg0 (c / child) :arg1 (p / person :arg0-of (h / have-rel-role-91 :arg1 (c2 / child) :arg2 (c3 / child))) :arg2 (a2 / and :op1 (p2 / person :arg0-of (h2 / have-rel-role-91 :arg1 (c4 / child) :arg2 (c5 / child))) :op2 (p3 / person :arg0-of (c6 / carry-01 :arg1 (b / balloons)) :arg0-of (c7 / carry-01 :arg1 (b2 / balloons))) :op3 (g / give-01 :arg1 (f / flower) :arg2 (p4 / person :arg0-of (t / teach-01 :arg1 (f2 / flower))))) :time (d / day :ord (o / ordinal-entity :value 1) :location (s / school)) :mod (t2 / tradition))
(i / investigate-01 :arg0 (t / they) :arg1 (c / crash-01 :arg1 (c2 / company :name (n / name :op1 "Boeing") :mod (t2 / this)) :location (c3 / country :name (n2 / name :op1 "Ukraine"))) :time (n3 / now))
(h / have-03 :arg0 (p / person :arg1-of (i / include-91 :arg2 (p2 / person :arg0-of (a / arabs :location (t / territory :poss (c / country :name (n / name :op1 "Israel"))))) :arg3 (n2 / nearly :op1 20))) :arg1 (c2 / citizenship))
(a / and :op1 (p / performed :arg0 (p2 / person :name (n / name :op1 "Peggy" :op2 "Walentin") :arg0-of (h / have-org-role-91 :arg1 (o / organization :name (n2 / name :op1 "Boeing" :op2 "Stearman")))) :arg1 (p3 / person :arg0-of (h2 / have-org-role-91 :arg1 (o2 / organization) :arg3 (p4 / pt-17))) :arg2 (p5 / pt-17 :arg0 (p6 / person))) :op2 (m / make-02 :arg0 (p7 / person) :arg1 (w / way :poss (p8 / person) :destination (w2 / wing :mod (t / top) :part-of (a2 / and :op1 (w3 / wing :mod (t2 / top)) :op2 (w4 / wing :mod (t3 / top) :part-of (b / biplane)))))))
(d / describe-01 :arg0 (i / i) :arg1 (j / job :poss (c / chairman) :prep-as (c2 / chalice :arg1-of (p / poison))) :arg2 (b / back :part-of (p2 / person :arg0-of (h / have-org-role-91 :arg2 (c3 / chairman)))))
(a / and :op1 (s / say-01 :arg0 (o / organization :name (n / name :op1 "Shear") :arg1-of (h / have-org-role-91 :arg0 (p / person :arg0-of (h2 / have-org-role-91 :arg1 (c / country :name (n2 / name :op1 "N-A")) :arg2 (c2 / chief))) :arg2 (c3 / chief :mod (c4 / chief)))) :arg1 (a2 / and :op1 (b / believe-01 :arg0 (a3 / and :op1 (c5 / country) :op2 (c6 / country)) :arg1 (f / future :poss (a4 / and :op1 (g / gaming) :op2 (' / '')))) :op2 (s2 / signal-07 :polarity - :arg0 (a5 / and) :arg1 (a6 / and :op1 (s3 / shrinking) :op2 (g2 / gulp :mod (e / even)))))) :op2 (s4 / sport :domain (a7 / and) :mod (e2 / even)))
(w / want-01 :arg0 (y / you) :arg1 (a / and :op1 (w2 / want-01 :arg0 (g / government-organization :arg0-of (g2 / govern-01 :arg1 (w3 / we))) :arg1 (l / liquidations :arg0 (g3 / government-organization) :arg1 (n / nation :mod (c / czech)))) :op2 (e / erase :arg0 (c2 / country) :arg1 (c3 / country :name (n2 / name :op1 "Czech" :op2 "Republic")) :arg2 (m / map :mod (w4 / world)))) :manner (a2 / amr-unknown))
(r / realize-01 :mode (i / interrogative) :arg0 (j / journalist :poss (w / we)) :arg1 (t / target-01 :arg1 (p / person :mod (e / ethnic-group))) :time (a / after :op1 (t2 / target-01 :arg1 (p2 / person :mod (e2 / ethnic-group)))))
(c / contrast-01 :arg1 (c2 / come-01 :arg1 (h / horror :mod (t / this)) :direction (b / back) :destination (y / you) :frequency (r / rate-entity-91 :arg3 (t2 / temporal-quantity :quant (N / N-A) :unit (d / day)))) :arg2 (w / wish-01 :arg0 (i / i) :arg1 (p / possible-01 :arg1 (s / stop-01 :arg0 (i2 / i) :arg1 (r2 / recalling :arg0 (i3 / i) :arg1 (i4 / it)))) :arg1-of (s2 / say-01 :arg0 (h2 / he) :time (y2 / yesterday))))
(i / inform-01 :arg1 (o / organization :name (n / name :op1 "Hamas")) :arg2 (l / list-01 :arg1 (o2 / organization) :arg2 (o3 / organization :mod (t / terrorism) :mod (g / globe))))
(g / get-22 :arg0 (c / company) :arg1 (m / manage-01 :arg0 (c2 / company) :arg1 (l / location) :arg3 (f / fee :mod (f2 / flat) :consist-of (r / rate-entity-91 :arg1 1000 :arg2 (t / temporal-quantity :quant (N / N-A) :unit (y / year))))) :time (t2 / then))
(b / become-01 :arg1 (h / he) :arg2 (e / engrossed :arg1 (h2 / he)) :time (s / since :op1 (w / win-01 :arg0 (h3 / he) :arg1 (a / acclaim :arg1-of (c / critical-02)) :arg2 (o / othello :poss (h4 / he)))))
(o / overdue :arg1 (a / and :op1 (r / right :mod (r2 / right :mod (h / human)) :prep-as (r3 / right :mod (h2 / human))) :op2 (e / extend-01 :arg1 (r4 / right))) :arg2 (p / prevent-01 :arg1 (d / discriminate-02 :arg1 (o2 / organize-01 :arg1 (l / labor)))) :arg1-of (l2 / long-03))
(c / crying :arg1 (p / person :location (c2 / city :name (n / name :op1 "London"))) :time (t / tell-01 :arg0 (i / i) :arg1 (s / story :poss (w / we))))
(a / and :op2 (p / possible-01 :arg1 (u / use-01 :arg0 (w / we) :arg1 (c / countryman :poss (w2 / we) :arg0-of (l / live-01 :location (t / territory :poss (w3 / we)))) :arg2 (w4 / weapon :poss (w5 / we)))))
(h / hope-01 :arg0 (i / i) :arg1 (o / open-01 :arg0 (s / school) :arg1 (e / educate-01 :arg1 (s2 / school)) :time (s3 / soon) :purpose (c / complete-01 :arg0 (s4 / school) :arg1 (e2 / educate-01 :arg1 (w / we))) :arg1-of (r / resemble-01 :arg2 (a / and :op1 (p / person :arg0-of (h2 / have-rel-role-91 :arg1 (w2 / world) :arg2 (c2 / child))) :op2 (p2 / person :mod (c3 / country :name (n / name :op1 "N-A")) :arg0-of (h3 / have-rel-role-91 :arg1 (w3 / world) :arg2 (c4 / child))) :op3 (b / boy :arg1-of (s5 / stay-01 :location (s6 / school :mod (e3 / email))))) :mod (j / just))))
(s / support-01 :polarity - :arg0 (p / person :mod (c / country :name (n / name :op1 "N-A"))) :arg1 (m / mandate :poss (p2 / person :arg0-of (v / vote-01 :arg1 (c2 / country :name (n2 / name :op1 "N-A"))))) :mod (o / of-course))
(g / good :degree (v / very) :domain (i / it))
(n / nothing :domain (p / pain-01 :mod (s / such)) :duration (t / temporal-quantity :quant (N / N-A) :unit (y / year)))
(a / and :op2 (b / blame-01 :polarity - :arg1 (a2 / and :op1 (a3 / appropriate-02 :arg1 (a4 / appropriate-02 :arg1 (a5 / amends))) :op2 (a6 / appropriate-02 :arg1 (m / make-01 :arg1 (t / they)) :manner (w / way :mod (a7 / any) :instrument-of (m2 / make-01 :arg1 (t2 / they)))))))
(t / think-01 :arg0 (i / i) :arg1 (f / family) :time (l / late :degree (m / more)))
(s / suggest-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg3 (j / judge-01)) :quant (s2 / some)) :arg1 (a / and :op1 (c / change-01 :arg0 (p2 / person) :arg1 (h2 / habit :mod (v / view-01))) :op2 (i / increase-01 :arg1 (p3 / popularity :poss (s3 / service :name (n / name :op1 (w / web) :op2 (s4 / streaming)) :mod (w2 / web) :poss (w3 / web) :example (o / organization :name (n2 / name :op1 "Netflix"))) :arg1-of (i2 / increase-01)))))
(u / use-01 :arg1 (b / buy-01))
FAILED_TO_PARSE#Number of opening and closing brackets doesn't match.
(e / exemplify-01 :arg0 (a / admit-01 :arg0 (o / organization :name (n / name :op1 "Marks" :op2 "&" :op3 "Spencer")) :arg1 (n2 / negligently :arg1 (p / person :name (n3 / name :op1 "Janice" :op2 "Allen") :mod (e2 / expose)) :arg2 (a2 / asbestos :arg0 (p2 / person)))))
(a / and :op1 (s / sit-01 :arg1 (h / he) :arg2 (o / organization :name (n / name :op1 "NH" :op2 "Hotel")) :location (l / location :name (n2 / name :op1 "Prague"))) :op2 (t / talk-01 :arg0 (h2 / he) :arg2 (p / person :arg0-of (r / report-01))) :op3 (p2 / plan-01 :arg0 (h3 / he) :arg1 (p3 / participate-01 :arg0 (h4 / he) :arg1 (m / match-03 :arg0 (p4 / person :mod (c / country :name (n3 / name :op1 "Netherlands"))) :mod (r2 / rehearsal)))) :time (a2 / after :op1 (s2 / start-01 :arg0 (h5 / he) :arg1 (p5 / process-02 :arg1 (q / qualification) :beneficiary (e / euro :location (c2 / country :name (n4 / name :op1 "Netherlands")))) :mod (a3 / also))))
(p / propaganda :mode (i / interrogative) :mod (p2 / pre-election))
(a / and :op1 (w / want-01 :arg0 (i / i) :arg1 (e / everything) :time (s / soon :degree (m / more) :compared-to (l / late :degree (m2 / more) :compared-to (l2 / late :degree (m3 / more))))) :op2 (n / note-01 :arg0 (h / he)))
(d / devotes :arg0 (h / he) :arg1 (h2 / he) :arg2 (s / soldier :arg1-of (c / capture-01 :arg0 (s2 / separatist :arg0-of (f / favor-01 :arg1 (s3 / separatist))))) :duration (t / temporal-quantity :quant (N / N-A) :unit (h3 / hour)))
(a / and :op1 (w / want-01 :arg0 (i / i) :arg1 (s / serve-01 :arg0 (i2 / i) :location (p / police) :time (d / day :mod (o / one)))) :op2 (h / hope-01 :arg0 (i3 / i) :arg1 (e / enrol :arg0 (t / they) :arg1 (i4 / i) :arg2 (a2 / academy :purpose (t2 / train-01)) :time (y / year :mod (n / next)))))
(s / soldier :mod (c / country :name (n / name :op1 "N-A")) :arg1-of (c2 / capture-01 :arg0 (s2 / separatist)))
(r / re-rub :polarity - :arg0 (w / we) :arg1 (u / uncovered :arg0 (w2 / we) :arg1 (d / dimension :poss (p / person :arg0-of (h / have-org-role-91 :arg2 (h2 / head-of-state))))) :mod (e / exact) :prep-in (c / case :mod (s / specify)))
(r / refer-01 :arg0 (n / netizen) :arg1 (p / possible-01 :arg1 (s / spatial :mod (s2 / small) :mod (a / additional)) :prep-as (t / theory :mod (k / kaluza-klein))) :time (s3 / since :op1 (t2 / then)))
(a / and :op1 (t / teach-01 :polarity - :arg0 (i / i) :arg1 (i2 / it) :manner (p / proper) :manner (p2 / proper)) :op2 (t2 / think-01 :arg0 (i3 / i) :arg1 (r / reserve-01 :arg1 (a2 / and :op1 (p3 / person :mod (w / white)) :op2 (p4 / person :mod (w2 / white))) :arg2 (f / front :op1 (f2 / front))) :degree (m / much :degree (v / very))))
(w / warn-01 :arg0 (p / person :name (n / name :op1 "Pascal" :op2 "Perrineau") :arg0-of (h / have-org-role-91 :arg1 (u / university :mod (p2 / politics)) :arg2 (u2 / university))) :arg1 (c / contrast-01 :arg1 (l / lose-02 :arg0 (s / scientist :mod (p3 / politics)) :arg1 (p4 / patience) :manner (f / fast)) :arg2 (l2 / lose-02 :arg0 (g / government-organization :arg0-of (g2 / govern-01) :mod (s2 / socialist) :mod (s3 / socialist)) :arg1 (i / improve-01 :arg1 (a / and :op1 (e / economy) :op2 (e2 / employ-01 :polarity -))))))
(n / need-01 :arg0 (y / you) :arg1 (c / complicit :arg1 (w / woman :mod (w2 / white)) :purpose (j / justify-01 :arg0 (y2 / you) :arg1 (l / lynching))))
(a / and :op1 (o / offer-01 :arg0 (c / company :name (n / name :op1 "Abbott")) :arg1 (c2 / cycle :quant (t / temporal-quantity :quant (N / N-A) :unit (m / month))) :time (i / initial)) :op2 (l / likely-01 :arg1 (p / prolonged :arg0 (c3 / company) :arg1 (l2 / life :poss (c4 / company)) :time (b / by :op1 (m2 / month :mod (o2 / one) :mod (j / just))))) :time (i2 / initial))
(s / say-01 :arg0 (h / he) :arg1 (g / go-01 :arg1 (y / you) :arg4 (f / far :degree (t / too))) :arg1-of (s2 / say-01 :arg0 (h2 / he)) :arg1-of (s3 / say-01 :arg0 (h3 / he)) :arg1-of (s4 / say-01 :arg0 (h4 / he)) :arg1-of (s5 / say-01 :arg0 (h5 / he)) :arg1-of (s6 / say-01 :arg0 (h6 / he)) :arg1-of (s7 / say-01 :arg0 (h7 / he)) :arg1-of (s8 / say-01 :arg0 (h8 / he)) :arg1-of (s9 / say-01 :arg0 (h9 / he)) :arg1-of (s10 / say-01 :arg0 (h10 / he)) :arg1-of (s11 / say-01 :arg0 (h11 / he)) :arg1-of (s12 / say-01 :arg0 (h12 / he)) :arg1-of (s13 / say-01 :arg0 (h13 / he)) :arg1-of (s14 / say-01 :arg0 (h14 / he)) :arg1-of (s15 / say-01 :arg0 (h15 / he)))
(s / say-01 :arg0 (p / person :name (n / name :op1 "Vladimir") :arg0-of (h / have-rel-role-91 :arg1 (h2 / he) :arg2 (d / dad))) :arg1 (t / tell-01 :arg0 (p2 / person :name (n2 / name :op1 "Damir")) :arg1 (d2 / die-01 :arg1 (p3 / person :arg0-of (h3 / have-rel-role-91 :arg1 (h4 / he) :arg2 (m / mother)))) :arg2 (i / i)) :arg2 (i2 / i))
(a / and :op1 (l / lose-02 :arg0 (i / i) :arg1 (p / person :quant (m / many) :arg1-of (k / know-02 :arg0 (i2 / i) :mod (w / well)))) :op2 (u / upset-01 :arg0 (i3 / i) :arg1 (i4 / i)))
(g / gasped :arg0 (p / person :name (n / name :op1 "Alyona") :arg0-of (h / have-rel-role-91 :arg1 (b / baby) :arg2 (c / child))) :time (c2 / carry-out-03 :arg0 (p2 / person :arg0-of (h2 / have-rel-role-91 :arg1 (b2 / baby) :arg2 (c3 / child))) :arg1 (a / arm :part-of (p3 / policeman :mod (c4 / country :name (n2 / name :op1 "N-A"))))))
(s / say-01 :arg0 (p / person :name (n / name :op1 "Emily" :op2 "Lau") :arg0-of (h / have-org-role-91 :arg1 (p2 / political-party :name (n2 / name :op1 "Democratic" :op2 "Party")))) :arg1 (c / contrast-01 :arg1 (u / unexpected :polarity - :domain (i / it)) :arg2 (i2 / infuriating :arg1 (i3 / it) :mod (s2 / still))))
(c / contrast-01 :arg1 (s / schedule-01 :arg1 (p / plane) :arg2 (l / land :quant 7.30) :arg3 (l2 / land) :time (a / after :op1 (d / date-entity :time (a2 / after :quant 7.30)))) :arg2 (a3 / and :op1 (c2 / change-01 :arg1 (p2 / plane) :manner (s2 / sudden) :manner (o / or :op1 (s3 / speed :mod (w / wind)) :op2 (d2 / direction :mod (o2 / over :op1 (d3 / distance-01 :mod (s4 / short)))))) :op2 (f / force-01 :arg1 (p3 / plane) :arg2 (o3 / out))))
(u / untenable :domain (t / this) :mod (a / almost) :arg0-of (c / call-03 :arg1 (r / reform-01 :arg1 (r2 / root-and-branch :arg1-of (c2 / complete-02)))))
(s / say-01 :arg0 (i / i) :arg1 (t / treasure) :arg2 (p / person :arg0-of (s2 / sing-01) :arg1-of (l / long-03)) :mod (e / every :mod (e2 / every)) :time (n / now :mod (e3 / every)))
(e / exchange-01 :arg0 (p / person :name (n / name :op1 "Lucie" :op2 "Borhyová")) :arg1 (t / thing :arg1-of (r / responsible-03 :arg0 (p2 / person))) :arg2 (w / work-01 :arg0 (p3 / person) :mod (a / at-least)) :time (e2 / evening :mod (t2 / this)))
(h / have-condition-91 :arg1 (o / option :mod (g / good) :domain (u / use-01)) :arg2 (d / do-02 :polarity - :arg0 (y / you) :arg1 (o2 / or :op1 (n / note :poss (p / person)) :op2 (w / wear-01 :arg0 (p2 / person)))))
(p / possible-01 :arg1 (f / flirt :arg0 (y / you) :arg1 (d / duck :poss (s / song :mod (c / certain))) :time (a / already)) :condition (t / take-01 :arg0 (y2 / you) :arg1 (s2 / string :ord (o / ordinal-entity :value 3))))
(h / have-concession-91 :arg1 (f / follow-01 :arg1 (j / jubilation) :arg2 (s / start-01 :arg1 (l / line :arg1-of (s2 / start-01))) :arg1-of (i / instead-of-91 :arg2 (s3 / start-01 :arg1 (s4 / start-01 :arg1 (i2 / it))))))
(r / receive-01 :arg0 (p / person :name (n / name :op1 "Saverio" :op2 "Costanzo") :arg0-of (h / hungry :arg1 (h2 / heart :part-of (p2 / person :name (n2 / name :op1 "Alba" :op2 "Rohrwacher") :arg0-of (h3 / have-rel-role-91 :arg1 (w / woman) :arg2 (c / child)))))) :arg1 (p3 / person :arg0-of (h4 / have-rel-role-91 :arg1 (w2 / woman) :arg2 (c2 / child))) :arg2 (p4 / person :arg0-of (h5 / have-rel-role-91 :arg1 (w3 / woman) :arg2 (c3 / child)) :arg0-of (h6 / have-rel-role-91 :arg1 (w4 / woman) :arg2 (c4 / child)) :arg0-of (h7 / have-rel-role-91 :arg1 (w5 / woman) :arg2 (c5 / child)) :arg0-of (h8 / have-rel-role-91 :arg1 (w6 / woman) :arg2 (c6 / child)) :arg0-of (h9 / have-rel-role-91 :arg1 (w7 / woman) :arg2 (c7 / child))) :mod (a / also))
(b / bring-01 :arg0 (a / and :op1 (p / person :arg0-of (h / have-org-role-91 :arg1 (o / organization :name (n / name :op1 "Hamas")))) :op2 (p2 / person :arg0-of (h2 / have-org-role-91 :arg1 (o2 / organization) :arg3 (l / lead-02 :arg0 (p3 / person)))) :op3 (p4 / person :arg0-of (h3 / have-org-role-91 :arg1 (o3 / organization) :arg3 (l2 / lead-02 :arg0 (p5 / person)))) :op4 (p6 / person :arg0-of (h4 / have-org-role-91 :arg1 (o4 / organization) :arg3 (l3 / lead-02 :arg0 (p7 / person)))) :op5 (p8 / person :arg0-of (h5 / have-org-role-91 :arg1 (o5 / organization) :arg3 (l4 / lead-02 :arg0 (p9 / person)))) :op6 (p10 / person :arg0-of (h6 / have-org-role-91 :arg1 (o6 / organization) :arg3 (l5 / lead-02 :arg0 (p11 / person)))) :op6 (p12 / person :arg0-of (h7 / have-org-role-91 :arg1 (o7 / organization) :arg3 (l6 / lead-02 :arg0 (p13 / person)))) :op6 (p14 / person :arg0-of (h8 / have-org-role-91 :arg1 (o8 / organization) :arg3 (l7 / lead-02 :arg0 (p15 / person)))) :op6 (p16 / person :arg0-of (h9 / have-org-role-91 :arg1 (o9 / organization) :arg3 (l8 / lead-02 :arg0 (p17 / person)))) :op6 (p18 / person :arg0-of (h10 / have-org-role-91 :arg1 (o10 / organization) :arg3 (l9 / lead-02 :arg0 (p19 / person)))) :op6 (p20 / person :arg0-of (h11 / have-org-role-91 :arg1 (o11 / organization) :arg3 (l10 / lead-02 :arg0 (p21 / person)))) :op6 (p22 / person :arg0-of (h12 / have-org-role-91 :arg1 (o12 / organization) :arg3 (l11 / lead-02 :arg0 (p23 / person)))) :op6 (p24 / person :arg0-of (h13 / have-org-role-91 :arg1 (o13 / organization) :arg3 (l12 / lead-02 :arg0 (p25 / person)))) :op7 (p26 / person :arg0-of (h14 / have-org-role-91 :arg1 (o14 / organization) :arg3 (l13 / lead-02 :arg0 (p27 / person))))) :arg1 (e / end-01 :arg1 (f / fight-01)))
(j / judge-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (f / federal :mod (c / country :name (n / name :op1 "U.S."))) :arg3 (j2 / judge-01))) :arg1 (e / enforce-01 :arg1 (l / law :mod (e2 / email))) :duration (t / temporary) :arg1-of (c2 / cause-01 :arg0 (e3 / enforce-01 :arg0 (p2 / person) :arg1 (l2 / law :mod (e4 / email) :arg0-of (c3 / close-01 :arg1 (c4 / clinics :quant 5 :mod (a / abort-01) :mod (a2 / all) :location (s / state)) :arg1-of (l3 / likely-01))))))
(b / be-temporally-at-91 :arg1 (i / it) :arg2 (d / date-entity :year 1944 :month 8 :day 30 :time-of (m / move-01 :arg1 (p / person :arg0-of (d2 / depend-01 :polarity -) :arg0-of (d3 / depend-01 :polarity -)) :arg2 (c / country :name (n / name :op1 "France")))))
(p / prepare-02 :arg1 (p2 / person :arg1-of (i / include-91 :arg2 (t / this) :arg3 (m / most))) :arg2 (a / and :op1 (b / bring-01 :arg0 (p3 / person) :arg1 (f / flower) :arg2 (a2 / area :location-of (s / storage :mod (s2 / summer)) :poss (p4 / person)) :direction (b2 / back) :destination (a3 / area :location-of (s3 / storage :mod (s4 / summer)) :poss (p5 / person)) :direction (b3 / back)) :op2 (p6 / prepare-02 :arg0 (p7 / person))) :mod (r / routine))
(c / cause-01 :arg0 (o / obligate-01 :arg1 (s / school) :arg2 (s2 / serve-01 :arg0 (s3 / school) :arg1 (s4 / service :mod (m / military)))))
(a / and :op2 (w / want-01 :arg0 (h / he) :arg1 (b / borrow-01 :arg0 (h2 / he) :arg1 (f / fabia :source (l / location :name (n / name :op1 "Honza" :op2 "Sýkora")))) :frequency (s / sometimes)))
(a / and :op1 (p / play-01 :arg0 (c / couple :arg0-of (w / win-01)) :arg1 (g / game) :duration (t / temporal-quantity :quant (N / N-A) :unit (y / year))) :op2 (s / say-01 :arg0 (w2 / win-01) :arg1 (a2 / and :op1 (o / opportunity :purpose (t2 / travel-01 :arg0 (c2 / couple) :arg1 (w3 / world))) :op2 (b / buy-01 :arg0 (c3 / couple) :arg1 (h / house :mod (n / new))))))
(w / work-01 :arg0 (p / person :name (n / name :op1 "David" :op2 "Fiala")) :arg2 (d / department :part-of (c / channel :mod (n2 / news) :mod (n3 / news))) :time (p2 / previous))
(b / believe-01 :arg0 (f / folk :mod (t / this)) :arg1 (b2 / barely :arg1 (i / it) :manner (s / striped) :condition (d / display-01 :arg0 (y / you) :arg1 (v / visa :mod (s2 / striped)) :arg2 (c / cow :mod (g / grand)))))
(d / depend-01 :arg0 (n / necks :arg1 (t / they)) :arg1 (t2 / they))
(a / and :op1 (r / realize-01 :arg0 (w / we) :arg1 (w2 / warn-01 :arg0 (p / person :name (n / name :op1 "Lébra")) :arg2 (w3 / warn-01 :arg0 (p2 / person) :arg1 (w4 / want-01 :polarity - :arg0 (g / guy) :arg1 (f / fight-01 :arg0 (g2 / guy)))))) :op2 (n2 / note-01 :arg0 (p3 / person :name (n3 / name :op1 "Kalvoda")) :arg1 (c / confident-01 :arg1 (i / i) :arg2 (c2 / come-01 :arg1 (m / moment :arg1-of (c3 / come-01 :time (m2 / moment))))) :op3 (s / start-01 :arg0 (p4 / person) :arg1 (h / hit-01 :arg0 (p5 / person) :arg1 (t / thing :arg1-of (t2 / target-01))) :time (a2 / as-soon-as :op1 (s2 / shoots :arg0 (p6 / person) :arg1 (g3 / goal))))))
(c / contrast-01 :arg1 (l / let-01 :arg0 (t / terrorist) :arg1 (g / go-01 :arg1 (s / she))) :arg2 (k / keep-01 :arg0 (t2 / terrorist) :arg1 (a / and :op1 (p / person :arg0-of (h / have-rel-role-91 :arg1 (s2 / she) :arg2 (m / mother))) :op2 (p2 / person :arg0-of (h2 / have-rel-role-91 :arg1 (p3 / person) :arg2 (s3 / sister :mod (o / old)))) :op3 (p4 / person :arg0-of (h3 / have-rel-role-91 :arg1 (p5 / person) :arg2 (s4 / sister :mod (o2 / old)))) :op4 (p6 / person :name (n / name :op1 "Makhar") :arg0-of (h4 / have-rel-role-91 :arg1 (p7 / person) :arg2 (b / brother))) :op5 (p8 / person :arg0-of (h5 / have-rel-role-91 :arg1 (p9 / person) :arg2 (b2 / brother)))) :location (s5 / school)))
(c / cause-01 :arg0 (a / amr-unknown) :arg1 (p / possible-01 :polarity - :arg1 (s / save-02 :arg0 (g / guardians :mod (g2 / galaxies)) :arg1 (o / office :location (b / box)))))
(a / and :op1 (p / producer :arg0 (p2 / person :arg0-of (p3 / produce-01 :arg1 (p4 / person :name (n / name :op1 "Simon" :op2 "Kinberg")))) :arg1 (d / drop-01 :arg1 (o / office :location (b / box))) :time (r / recent)) :op2 (t / tell-01 :arg0 (p5 / person) :arg1 (a2 / and :op1 (b2 / big :degree (m / most) :time (h / history) :mod (b3 / big :degree (m2 / most)) :time (h2 / history)) :op2 (w / worry-01 :arg0 (b4 / business) :arg1 (p6 / person))) :arg2 (p7 / person :arg0-of (r2 / report-01))))
(a / and :op2 (a2 / and :op1 (b / bother-01 :arg0 (t / that) :arg1 (i / i) :time (r / recent) :mod (r2 / really)) :op2 (p / put-01 :arg0 (t2 / that) :arg1 (i2 / i) :arg2 (g / good :degree (m / more)))))
(p / possible-01 :arg1 (c / challenge-01 :arg2 (p2 / person :quant (m / many))) :arg1-of (u / use-01 :arg2 (w / work-01 :arg1-of (r / regular-03)) :time (a / after :op1 (r2 / return-01 :arg1 (o / or :op1 (b / beach :mod (s / sunny)) :op2 (c2 / cottage :mod (s2 / sunny)))))))
(s / situation :mod (n / new) :domain (s2 / situation :time (e / end-up-03 :polarity - :arg1 (i / i) :arg2 (b / be-located-at-91 :arg1 (i2 / i) :arg2 (a / anywhere :mod (s3 / season :ord (o / ordinal-entity :value 1) :part-of (s4 / season :mod (n2 / new))))))))
(t / think-01 :arg0 (i / i) :arg1 (f / family) :time (l / late :degree (m / more)))
(s / say-01 :arg0 (p / person :name (n / name :op1 "Jan" :op2 "Mráka")) :arg1 (a / appear-01 :polarity - :arg1 (p2 / party :mod (p3 / politics) :mod (o / other)) :location (n2 / name :op1 (l / leagues))))
(s / say-01 :arg0 (p / person :arg0-of (h / have-rel-role-91 :arg1 (p2 / person :arg0-of (h2 / have-rel-role-91 :arg1 (p3 / person) :arg2 (d / dd1))) :arg2 (p4 / professor :mod (s2 / study-01 :arg0 (p5 / person))))) :arg1 (d2 / do-02 :arg0 (c / clothes :poss (p6 / person)) :arg1 (o / opposite)) :time (n / now) :arg1-of (c2 / cause-01 :arg0 (a / and :op1 (i / issue-02 :arg0 (r / race) :arg1 (a2 / and :op1 (r2 / race) :op2 (g / geopolitics) :arg1-of (m / mainstream-02))) :op2 (g2 / gender :arg1 (a3 / and :op1 (p7 / person :name (n2 / name :op1 "Angela" :op2 "Hattery")) :op2 (p8 / person :arg0-of (h3 / have-org-role-91 :arg2 (p9 / professor :mod (s3 / study-01 :arg0 (p10 / person))))) :op3 (p11 / person :arg0-of (h4 / have-org-role-91 :arg1 (o2 / organization :name (n3 / name :op1 "George" :op2 "Mason" :op3 "University")) :arg2 (p12 / professor :topic (s4 / study-01)))))))))
(r / result-01 :arg2 (m / mesothelioma :polarity - :arg1 (o / or :op1 (w / wealth) :op2 (w2 / wealth) :op3 (o2 / occupy-01) :op4 (a / age))))
(s / say-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg2 (m / minister))) :arg1 (a / and :op1 (' / '' :arg0 (t / they) :time (f / first)) :op2 (a2 / accept-01 :arg0 (i / i) :arg1 (p2 / petition-01 :arg0 (i2 / i) :arg1 (a3 / attend-01 :arg0 (i3 / i) :arg1 (s2 / start-01 :arg1 (y / year :mod (s3 / school))))))))
(h / have-condition-91 :arg1 (l / lack-01 :arg0 (y / you) :arg1 (t / thing :arg0-of (e / evidence-01) :mod (p / provable))) :arg2 (d / dispute-01 :arg0 (c / court) :arg2 (a / agree-01 :arg0 (c2 / court))))
(m / multi-sentence :snt1 (o / offer-01 :arg0 (p / person :arg1-of (i / interest-01 :arg2 (t / taxi)) :arg1-of (i2 / interest-01 :arg2 (t2 / taxi))) :arg1 (m2 / monetary-quantity :arg2-of (p2 / price-01) :arg1-of (h / high-02 :degree (m3 / most)))) :snt2 (s / street))
(p / possible-01 :arg1 (a / achievable :arg1 (i / it) :degree (s / somewhat)))
(a / and :op1 (g / get-01 :arg0 (t / they) :arg1 (n / name :poss (t2 / they)) :arg2 (w / word :name (n2 / name :op1 (' / '')) :arg1-of ('2 / ''))) :op2 (d / describe-01 :arg0 (t3 / they) :arg1 (s / structure :mod (f / fibrous) :arg0-of (d2 / describe-01 :arg1 (s2 / structure :mod (f2 / fibrous)) :arg2 (a2 / and :op1 (s3 / strength) :op2 (d3 / dissent-01))))))
(o / offer-01 :arg0 (w / we) :arg1 (a / and :op1 (p / person :arg0-of (r / read-01)) :op2 (p2 / person :arg0-of (r2 / read-01 :arg1 (p3 / person)))) :arg0-of (e / explain-01 :arg1 (e2 / explain-01 :arg0 (p4 / person) :arg1 (t / thing :manner-of (a2 / and :op1 (f / file :arg1-of (e3 / encrypting)) :op2 (c / communicate-01)) :arg2 (f2 / form :mod (e4 / e-book :arg0 (p5 / person :name (n / name :op1 "Michal" :op2 "Altair" :op3 "Valá?ka")) :arg1 (f3 / format :mod (b / broadcast-program :name (n2 / name :op1 "N-A")))))))))
(c / contrast-01 :arg1 (f / forget-01 :polarity - :arg0 (i / i) :arg1 (i2 / it)) :arg2 (f2 / feel-01 :polarity - :arg0 (i3 / i) :arg1 (s / sorry-01) :arg2 (i4 / i)))
(k / know-01 :arg0 (i / i) :arg1 (g / go-02 :polarity - :arg0 (p / person :name (n / name :op1 "Georgy"))))
(s / say-01 :arg0 (w / we) :arg1 (o / or :op1 (k / kill-01 :arg1 (t / they)) :op2 (d / die-01 :arg1 (t2 / they))) :time (e / ever))
(p / possible-01 :arg1 (f / find-01 :arg0 (p2 / person :arg0-of (h / have-org-role-91 :arg1 (c / company :name (n / name :op1 "BBC")))) :arg1 (p3 / person :arg0-of (h2 / have-org-role-91 :arg1 (c2 / company :name (n2 / name :op1 "BBC")) :arg2 (c3 / chief)))) :location (p4 / person))
(p / possible-01 :arg1 (a / and :op1 (s / steal-01 :arg1 (i / information :arg1-of (p2 / personal-02)) :arg2 (o / other)) :op2 (d / disperse :arg1 (i2 / information) :arg2 (o2 / other))))
(d / do-02 :arg1 (f / film :mod (i / italian)) :manner (g / general-02) :location (l / location :name (n / name :op1 "Venice")))
(p / perched :arg0 (p2 / pupil :part-of (p3 / pupil)) :arg1 (b / bunsen :poss (p4 / pupil)) :medium (m / mats :mod (a / asbestos)))
(a / and :op1 (f / follow-02 :arg0 (p / person :name (n / name :op1 "Stephen" :op2 "Fairclough")) :arg1 (d / develop-01 :arg2 (w / we) :time (w2 / weekend))) :op2 (s / speak-01 :arg0 (p2 / person) :arg2 (p3 / person :arg0-of (p4 / protest-01) :arg0-of (t / travelled :arg1 (p5 / person) :arg2 (c / country :name (n2 / name :op1 "Belgium"))))))
(s / same-01 :arg1 (c / child :arg1-of (s2 / same-01 :arg2 (c2 / child))) :arg2 (c3 / child) :mod (j / just))
(p / possible-01 :arg1 (e / expect-01 :arg0 (w / we) :arg1 (l / less :polarity -)) :condition (w2 / write-01 :arg0 (g / god) :arg1 (i / it)))
(s / show-01 :arg0 (d / data :mod (f / fly-01)) :arg1 (a / and :op1 (p / pull-out-02 :arg1 (p2 / plane) :arg2 (o / out-06 :arg1 (p3 / plane) :arg2 (l / land-01 :ord (o2 / ordinal-entity :value 2)))) :op2 (t / touch-01 :arg0 (p4 / plane) :arg1 (p5 / plane) :time (e / eventual)) :op3 (t2 / touch-01 :arg0 (p6 / plane) :arg1 (p7 / plane) :time (e2 / eventual))))
(c / cup)
(m / multi-sentence :snt1 (l / launch-01 :arg1 (c / career :mod (t / tv) :poss (h / he)) :location (m2 / mid-seventies :arg1-of (l2 / long-03 :arg2 (t2 / time :arg1-of (l3 / long-03 :degree (q / quite)))))) :snt2 (i / impressionist/comedian :mode (e / expressive) :arg1-of (l4 / long-03 :degree (q2 / quite)) :domain (i2 / i)))
(a / and :op1 (k / know-01 :arg0 (p / person :arg0-of (l / lead-02 :arg1 (n / nationalist :mod (c / country :name (n2 / name :op1 "Scotland"))))) :arg1 (t / this) :mod (w / well :degree (v / very))) :op2 (k2 / know-01 :arg0 (p2 / person) :arg1 (a2 / and :op1 (a3 / ask-01 :arg0 (p3 / person) :arg1 (r / rival-01 :arg0 (p4 / person) :arg1 (p5 / person :mod (s / sovereign)))) :op2 (' / '' :mode (i / interrogative) :arg0 (p6 / person) :arg1 (p7 / person :mod (s2 / sovereign)) :condition (w2 / will-02 :arg0 (p8 / person) :arg1 (r2 / respect-01 :arg0 (p9 / person) :arg1 (p10 / person :mod (s3 / sovereign)))) :condition (a4 / and :op1 (c2 / choose-01 :arg0 (p11 / person) :arg1 (i2 / independence)) :op2 (b / begin-01 :mode (i3 / interrogative) :arg0 (p12 / person) :arg1 (s4 / support-01 :arg0 (p13 / person) :arg1 (c3 / currency :arg1-of (s5 / single-02) :beneficiary (c4 / country :name (n3 / name :op1 "Scotland"))) :beneficiary (c5 / country :name (n4 / name :op1 "England"))))))) :medium (d / discuss-01 :medium (t2 / television))))
(p / possible-01 :arg1 (e / enlarge :arg0 (w / we) :arg1 (t / thing :arg1-of (v / view-01 :arg0 (w2 / we))) :manner (w3 / way :mod (r / resemble-01 :arg1 (s / space) :arg2 (t2 / thing :manner-of (e2 / enlarged :arg0 (w4 / we) :arg1 (s2 / surface :part-of (h / hose))))))) :location (i / image))
(m / multi-sentence :snt1 (l / launch-01 :arg1 (c / career :mod (t / tv) :poss (h / he)) :location (m2 / mid-seventies :arg1-of (l2 / long-03 :arg2 (t2 / time :arg1-of (l3 / long-03 :degree (q / quite)))))) :snt2 (i / impressionist/comedian :mode (e / expressive) :arg1-of (l4 / long-03 :degree (q2 / quite)) :domain (i2 / i)))
(c / contrast-01 :arg1 (h / have-rel-role-91 :arg0 (p / person :arg0-of (h2 / have-rel-role-91 :arg1 (c2 / child) :arg2 (c3 / child))) :arg1 (p2 / person :arg0-of (h3 / have-rel-role-91 :arg1 (c4 / child) :arg2 (f / father))) :arg2 (p3 / person :arg0-of (h4 / have-rel-role-91 :arg1 (c5 / child) :arg2 (f2 / father)))) :arg2 (k / know-01 :polarity - :arg0 (p4 / person) :arg1 (p5 / pregnancy :arg0 (p6 / person :arg0-of (h5 / have-rel-role-91 :arg1 (c6 / child) :arg2 (c7 / child)))) :arg1-of (r / report-01)))
(i / include-91 :arg1 (a / and :op1 (n / need-01 :arg0 (p / person :arg0-of (w / work-01)) :arg1 (o / organize-01 :arg0 (p2 / person) :arg1 (v / voices :poss (p3 / person)))) :op2 (m / make-02 :arg0 (p4 / person) :arg1 (h / hear-01 :arg0 (p5 / person) :arg1 (r / right-05 :arg1 (p6 / person) :arg2 (a2 / and :op1 (s / safeguard-01 :arg1 (a3 / association)) :op2 (i2 / improve-01 :arg1 (a4 / and :op1 (w2 / work-01) :op2 (c / condition :mod (e / economy)))))) :op3 (g / guarantee-01 :arg1 (a5 / and :op1 (o2 / occupy-01 :mod (e2 / every)) :op2 (o3 / or :op1 (o4 / occupy-01 :mod (e3 / every)) :op2 (t / thing :mod (e4 / every))))))) :arg1-of (e5 / explicit-03)) :arg2 (p7 / person :arg0-of (w3 / work-01) :mod (t2 / that)))
(p / possible-01 :arg1 (s / see-01 :arg0 (f / fan :mod (s2 / spiritual)) :arg1 (p2 / perform-01 :mod (j / joint) :mod (s3 / such) :location (c / country :name (n / name :op1 "Czech" :op2 "Republic")))) :ord (o / ordinal-entity :value 1))
(a / and :op1 (h / have-03 :arg0 (p / person :arg0-of (v / visit-01) :mod (u / unique) :quant 55 :mod (u2 / unique)) :arg1 (m / monthly)) :op2 (s / source-02 :arg0 (p2 / person) :arg1 (t / traffic :mod (i / internet)) :mod (f / fourth-largest)))
(a / and :op1 (s / snog :arg0 (p / person :ord (o / ordinal-entity :value 1) :arg0-of (h / have-rel-role-91 :arg1 (s2 / she) :arg2 (s3 / snog))) :arg1 (b / become-01 :arg1 (p2 / person) :arg2 (e / expression :mod (c / common :degree (m / most)) :consist-of (p3 / person :arg0-of (h2 / have-rel-role-91 :arg1 (m2 / man) :arg2 (c2 / child)))))) :op2 (a2 / antidote :arg0 (p4 / person) :arg1 (b2 / ballads :mod (b3 / bland) :poss (l / love-01 :arg1 (p5 / pump :name (n / name :op1 (c3 / consolation))))) :time (l2 / late :degree (m3 / more))) :op3 (c4 / cuff :arg0 (p6 / person) :arg1 (s4 / she) :time (l3 / late :degree (m4 / more))))
(k / kill-01 :arg0 (o / officer :mod (p / police) :location (p2 / person :name (n / name :op1 "Ferguson"))) :arg1 (t / teenager :arg1-of (a / arm-01 :polarity -)) :time (e / early :op1 (m / month :mod (t2 / this)) :degree (m2 / more)))
(c / cause-01 :arg0 (p / play-01 :arg1 (i / it) :manner (a / amr-unknown)) :arg1 (p2 / possible-01 :arg1 (r / re-emerge :arg0 (c2 / country :name (n / name :op1 "Russia")) :mod (g / great))))
(c / come-03 :arg1 (t / thing :arg2-of (r / result-01 :arg1 (t2 / trigger))) :arg2 (b / back))
(o / obligate-01 :arg1 (w / we) :arg2 (e / examine-01 :arg0 (w2 / we) :arg1 (t / thing :arg2-of (c / characteristic-02 :arg1 (w3 / we)) :mod (g / good :degree (m / more :degree (m2 / much))))) :beneficiary (w4 / we) :purpose (r / realize-02 :arg0 (w5 / we) :arg1 (e2 / exist-01 :arg1 (d / dimension :mod (c2 / circular)))))
(a / answer-01 :arg2 (a2 / and :op1 (p / predict-01 :arg1 (p2 / predict-01 :arg0 (p3 / person :name (n / name :op1 "Kaluza")) :arg1 (l / line) :manner (q / quiet))) :op2 (a3 / and :op1 (e / express-01 :arg0 (p4 / person :name (n2 / name :op1 "Oskar" :op2 "Klein") :arg0-of (h / have-org-role-91 :arg2 (s / swedish))) :arg1 (a4 / and :op1 (p5 / person :name (n3 / name :op1 "Oskar" :op2 "Klein") :arg0-of (h2 / have-org-role-91 :arg2 (m / mathematician))) :op2 (p6 / person :arg0-of (h3 / have-org-role-91 :arg2 (c / clarified))) :op3 (p7 / person :arg0-of (h4 / have-org-role-91 :arg2 (m2 / mathematician))) :op4 (p8 / person :arg0-of (c2 / claim-01 :arg1 (p9 / possible-01 :arg1 (h5 / have-03 :arg0 (g / geometry :mod (s2 / spatial) :poss (u / universe :poss (w / we))) :arg1 (a5 / and :op1 (l2 / large) :op2 (c3 / coiled)))))))))))
(i / include-91 :arg1 (p / person :arg0-of (p2 / play-01) :arg0-of (p3 / participate-01 :arg1 (t / trick :mod (g / golden)))) :arg2 (t2 / this))
(c / challenge-01 :arg0 (i / i) :arg1 (w / we) :arg2 (d / decide-01 :arg0 (w2 / we) :arg1 (b / believe-01 :arg0 (w3 / we) :arg1 (t / thing :arg1-of (b2 / believe-01 :arg0 (w4 / we))))) :time (a / argue-02 :arg0 (b3 / believe-01) :arg1 (t2 / thing :quant (m / many) :arg1-of (i2 / include-91 :arg2 (t3 / thing :quant (m2 / many) :arg0-of (c2 / contradictions :arg1 (r / religion :poss (t4 / they))))))))
(r / recommend-01 :arg0 (p / person :name (n / name :op1 "Joe" :op2 "Gault") :quant (a / about :op1 29) :arg0-of (e / enter-01 :arg1 (o / organization :name (n2 / name :op1 "Pepperdine" :op2 "Law" :op3 "School")))) :arg1 (r2 / recommend-01 :arg0 (p2 / person) :arg1 (u / use-01 :arg0 (p3 / person) :arg1 (n3 / number :mod (i / isbn)) :arg2 (b / book :arg2-of (p4 / price-01))) :time (s / since :op1 (e2 / ensures :arg1 (p5 / person) :arg2 (t / text :mod (r3 / right))))) :li 29)
(a / and :op1 (h / have-03 :arg0 (c / country :name (n / name :op1 "Czech" :op2 "Republic")) :arg1 (a2 / and :op1 (s / suffer-01 :arg0 (p / person :quant (a3 / about :op1 300) :arg0-of (s2 / suffer-01 :arg1 (- / -rrb- :name (n2 / name :op1 (a4 / als) :op2 (a5 / als))))) :op2 (p2 / person :quant 21 :arg0-of (h2 / have-rel-role-91 :arg1 (p3 / person) :arg2 (p4 / patient))) :op3 (p5 / person :quant 21 :arg0-of (h3 / have-rel-role-91 :arg1 (p6 / person) :arg2 (p7 / patient)))))) :op2 (t / treat-03 :arg1 (p8 / person :quant 21 :arg0-of (h4 / have-rel-role-91 :arg2 (p9 / patient))) :manner (e / experiment-01) :manner (e2 / experiment-01) :location (p10 / peninsula :name (n3 / name :op1 "N-A"))))
(m / multi-sentence :snt1 (s / suffer-01 :arg0 (h / he) :arg1 (i / it)) :snt2 (r / remember-01 :arg0 (i2 / i) :arg1 (u / use-01 :arg0 (h2 / he) :arg1 (l / lie :arg0 (h3 / he) :arg1 (f / face :part-of (f2 / face :part-of (h4 / he)))) :arg2 (a / away :op1 (w / we)) :duration (t / temporal-quantity :quant (N / N-A) :unit (h5 / hour) :time (t2 / time)))))
(a / and :op1 (h / have-06 :arg0 (i / i) :arg1 (i2 / it) :location (f / foot :part-of (i3 / i))) :op2 (o / obligate-01 :arg1 (i4 / i) :arg2 (t / take-01 :arg0 (i5 / i) :arg1 (a2 / advantage) :arg2 (c / chance-02 :mod (s / such)))))
(c / cause-01 :arg0 (m / mechanical :arg1 (t / thing :manner-of (s / stay-01 :arg1 (w / we) :arg3 (l / live-01))) :mod (p / particular)) :arg1 (c2 / cause-01 :arg0 (c3 / cancer :arg1-of (c4 / cause-01 :arg0 (c5 / cancer :arg0-of (c6 / cause-01 :arg1 (c7 / cancer :mod (k / kill)))) :degree (v / very))) :arg1 (m2 / mesothelioma) :mod (p2 / particular)))
FAILED_TO_PARSE#Number of opening and closing brackets doesn't match.
(k / know-01 :mode (i / interrogative) :arg0 (w / we) :arg1 (c / cause-01 :arg0 (a / amr-unknown) :arg1 (a2 / amr-unknown)) :time (e / ever))
(g / great :domain (w / water))
FAILED_TO_PARSE#Number of opening and closing brackets doesn't match.
(a / and :op2 (t / talk-01 :arg0 (t2 / they) :arg1 (w / write-01 :arg0 (t3 / they) :arg1 (g / god) :arg1-of (w2 / write-01 :arg0 (m / man))) :time (r / refer-01 :arg0 (t4 / they) :arg1 (w3 / word :mod (' / '') :mod (g2 / god)))))
(a / and :op2 (p / plane :mod (r / racing)))
(a / and :op2 (h / have-03 :arg0 (p / person :name (n / name :op1 "Lafata")) :arg1 (f / fever)))
(i / imagine-01)
(d / deafening :arg1 (a / amusement-park :name (n / name :op1 "N-A")) :time (p / post-01 :arg0 (i / i) :arg1 (s / something :topic (p2 / person :mod (c / color)))))
(r / refuse-01 :arg0 (c / country :name (n / name :op1 "China")) :arg1 (g / give-01 :arg0 (c2 / country) :arg1 (r2 / right-05 :arg1 (c3 / city :name (n2 / name :op1 "Hong" :op2 "Kong")) :arg2 (c4 / choose-01 :arg0 (c5 / city) :arg1 (p / person :arg0-of (l / lead-02)))) :arg2 (c6 / city :name (n3 / name :op1 "Hong" :op2 "Kong"))))
(s / say-01 :arg1 (a / advise-01 :arg0 (y / you) :arg2 (a2 / and :op1 (p / person :arg0-of (j / join-01 :arg1 (s2 / separatist :arg0-of (f / favor-01 :arg1 (c / country-region))))) :op2 (c2 / capture-01 :arg0 (s3 / soldier :mod (c3 / country :name (n / name :op1 "N-A"))) :arg1 (p2 / person)))) :arg2 (p3 / person :arg0-of (a3 / advise-01)))
(a / and :op1 (r / recommend-01 :arg1 (k / know-01 :arg0 (c / child) :arg1 (s / something :polarity - :arg1-of (k2 / know-01 :arg0 (c2 / child))))) :op2 (r2 / recommend-01 :arg1 (e / experience-01 :arg0 (c3 / child) :arg1 (s2 / something)) :mod (o / of-course)))
(e / evaluated :polarity - :medium (s / study-01))
(c / contrast-01)
(a / and :op1 (p / pay-01 :arg0 (t / tax-01 :arg3 (b / business) :arg1-of (t2 / tax-01 :arg3 (m / monetary-quantity :arg1-of (t3 / tax-01 :arg3 (b2 / business :mod (s / small)))) :arg1-of (p2 / personal-02))) :arg1 (s2 / structure :arg1-of (t4 / tax-01 :arg3 (i / income)) :arg1-of (t5 / tax-01 :arg3 (i2 / income)) :arg1-of (t6 / tax-01 :arg3 (i3 / income))) :arg3 (t7 / tax-01 :arg3 (i4 / income) :arg1-of (p3 / personal-02)) :arg4 (m2 / monetary-quantity :quant 2.4 :unit (d / dollar :mod (r / renminbi)))) :op2 (r2 / rate :mod (f / fast :degree (m3 / more :quant (m4 / much))) :compared-to (t8 / tax-01 :arg3 (b3 / business) :mod (o / overall))))
(r / room :quant 1 :mod (o / only) :condition (' / '' :arg1 (l / life) :prep-in (l2 / life)))
(s / say-01 :arg0 (y / you) :arg1 (a / amr-unknown) :arg2 (p / perform-01 :arg0 (h / he)))
(a / and :op1 (l / live-01 :arg0 (p / person :arg0-of (r / research-01)) :arg1 (r2 / rate-entity-91 :arg1 (m / more-than :op1 (m2 / monetary-quantity :quant (N / N-A))) :arg2 (t / temporal-quantity :quant (N2 / N-A) :unit (y / year))) :arg2 (c / cancer :mod (m3 / medicine) :mod (c2 / country :name (n / name :op1 "N-A")))) :op2 (f / find-01 :arg0 (p2 / person) :arg1 (r3 / rate-entity-91 :arg1 (u / under :op1 (t2 / temporal-quantity :quant (N3 / N-A) :unit (y2 / year)) :mod (j / just)) :arg2 (t3 / temporal-quantity :quant (N4 / N-A) :unit (y3 / year))) :time (a2 / after :op1 (w / war :name (n2 / name :op1 "N-A")))))
(s / say-01 :arg0 (a / and :op1 (p / person :name (n / name :op1 "Tony" :op2 "Pidgley") :arg0-of (h / have-org-role-91 :arg1 (c / city :name (n2 / name :op1 "Berkeley") :arg0-of (h2 / have-org-role-91 :arg1 (u / upmarket))) :arg2 (c2 / chairman))) :op2 (p2 / person :arg0-of (h3 / have-org-role-91 :arg1 (u2 / upmarket) :arg2 (c3 / chairman))) :op3 (p3 / person :arg0-of (h4 / have-org-role-91 :arg1 (u3 / upmarket) :arg2 (c4 / chairman))) :op4 (p4 / person :arg0-of (h5 / have-org-role-91 :arg1 (o / organization) :arg2 (c5 / chairman))) :op5 (p5 / person :arg0-of (h6 / have-org-role-91 :arg1 (o2 / organization) :arg2 (c6 / chairman))) :op6 (p6 / person :arg0-of (h7 / have-org-role-91 :arg1 (o3 / organization) :arg2 (c7 / chairman))) :op6 (p7 / person :arg0-of (h8 / have-org-role-91 :arg1 (o4 / organization) :arg2 (c8 / chairman))) :op6 (p8 / person :arg0-of (h9 / have-org-role-91 :arg1 (o5 / organization) :arg2 (c9 / chairman))) :op6 (p9 / person :arg0-of (h10 / have-org-role-91 :arg1 (o6 / organization) :arg2 (c10 / chairman))) :op7 (p10 / person :arg0-of (h11 / have-org-role-91 :arg1 (o7 / organization) :arg2 (c11 / chairman)))) :arg1 (o8 / offered :arg0 (m / market) :arg1 (o9 / offer-01 :arg0 (m2 / market) :arg1 (e / environment :arg0-of (o10 / operate-01 :arg1-of (s2 / stable-03)) :arg1-of (s3 / stable-03)))) :time (s4 / since :op1 (s5 / start-01 :arg1 (y / year :mod (f / finance) :mod (f2 / finance)))))
(p / possible-01 :arg1 (s / say-01 :arg0 (h / he) :arg1 (c / contrast-01 :arg1 (l / love-01 :arg0 (h2 / he) :arg1 (y / you)) :arg2 (s2 / soon :degree (t / too) :prep-for (t2 / that) :domain (i / it)))))
(c / cause-01 :arg1 (r / recommend-01 :arg1 (l / leave-11 :arg0 (h / he))))
(m / multi-sentence :snt1 (u / understand-01 :arg0 (w / we) :arg1 (i / it) :purpose (u2 / understand-01 :arg0 (w2 / we) :arg1 (i2 / it))) :snt2 (s / shift-01 :mode (i3 / imperative) :arg0 (w3 / we) :arg1 (t / thing :arg1-of (e / envision-01 :arg0 (w4 / we))) :arg2 (u3 / universe :mod (w5 / whole)) :arg3 (s2 / something :extent (w6 / whole)) :arg4 (e2 / earth) :arg1-of (c / cause-01 :arg0 (a / and :op1 (l / long-03 :arg1 (e3 / envision-01) :arg2 (e4 / earth)) :op2 (t2 / thin-03 :arg1 (g / garden :mod (b / basic) :mod (b2 / basic)))))))
(a / and :op1 (s / source-02 :arg0 (r / reform-01 :mod (p / politics)) :arg1 (t / tension :location (c / city :name (n / name :op1 "Hong" :op2 "Kong"))) :arg1-of (m / major-02)) :op2 (f / fear-01 :arg0 (p2 / person :arg0-of (l / lead-02 :arg1 (c2 / country :name (n2 / name :op1 "China")))) :arg1 (c3 / call-03 :arg1 (d / democracy) :arg2 (c4 / city :mod (o / other)))))
(p / place :polarity - :beneficiary (t / they) :domain (t2 / this) :condition (l / like-01 :polarity - :arg0 (a / anyone) :arg1 (c / crowd)))
(g / gasped :arg0 (p / person :name (n / name :op1 "Alyona") :arg0-of (h / have-rel-role-91 :arg1 (b / baby) :arg2 (c / child))) :time (c2 / carry-out-03 :arg0 (p2 / person :arg0-of (h2 / have-rel-role-91 :arg1 (b2 / baby) :arg2 (c3 / child))) :arg1 (a / arm :part-of (p3 / policeman :mod (c4 / country :name (n2 / name :op1 "N-A"))))))
(c / contrast-01 :arg2 (p / possible-01 :arg1 (m / more :quant (m2 / many)) :mod (o / of-course)))
(s / say-01 :arg0 (p / person :name (n / name :op1 "Marina") :arg0-of (h / have-rel-role-91 :arg1 (h2 / he) :arg2 (m / mother))) :arg1 (l / leave-13 :arg0 (p2 / pain-01 :mod (t / this)) :arg1 (i / i) :time (e / ever)) :li 42)
(a / and :op2 (s / succeed-01 :arg1 (i / it)))
(s / say-01 :arg0 (p / person :name (n / name :op1 "Shani" :op2 "Bart") :arg0-of (h / have-rel-role-91 :arg1 (s2 / she) :arg2 (d / daughter :mod (1 / 11-year-old)))) :arg1 (f / feel-01 :arg0 (p2 / person) :arg1 (' / '' :arg1 (w / weird :degree (b / bit :mod (l / little))) :arg2 (s3 / school) :manner (s4 / sudden))))
(p / press :topic (t / team))
(c / cause-01 :arg0 (s / small :domain (s2 / size :poss (d / dimension :mod (a / additional)))) :arg1 (b / be-located-at-91 :arg1 (i / it) :arg2 (b2 / beyond :op1 (c2 / capable-01 :arg1 (w / we) :arg2 (s3 / skill :arg1-of (m / modern-02 :degree (m2 / most)) :poss (w2 / we)))) :mod (i2 / in-fact)))
(l / last-01 :arg1 (y / year :mod (l2 / longest)) :arg2 (t / temporal-quantity :quant (N / N-A) :unit (m / month)))
(c / cause-01 :arg0 (a / amr-unknown) :arg1 (c2 / come-01 :arg1 (t / they) :location (h / here :mod (a2 / at-all)) :arg1-of (c3 / cause-01 :arg0 (a3 / amr-unknown))))
(t / threaten-01 :polarity - :arg0 (i / it) :arg2 (l / life))
(a / and :op1 (r / returns :prep-to (p / pentatonic) :time (t / then)) :op2 (p2 / possible-01 :arg1 (t2 / try-01 :arg0 (y / you) :arg1 (p3 / put-01 :arg0 (y2 / you) :arg1 (i / it) :arg2 (t3 / together) :accompanier (g / group :mod (t4 / twelve-member))))))
(c / contrast-01 :arg1 (d / deny-01 :arg0 (n / nobody :mod (s / some)) :arg1 (a / authenticity :arg1 (p / picture))) :arg2 (a2 / admit-01 :arg0 (p2 / person :mod (o / other)) :arg1 (g / genuine :domain (p3 / person)) :time (a3 / already)))
(a / and :op1 (a2 / arrest-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (p2 / police :arg1-of (l / local-02) :mod (o / other)) :arg2 (o2 / officer))) :arg1 (p3 / person :arg0-of (h2 / have-org-role-91 :arg1 (p4 / police) :arg2 (o3 / officer)) :arg1-of (l2 / local-02) :mod (o4 / other)) :arg2 (p5 / person :arg0-of (h3 / have-org-role-91 :arg1 (p6 / police) :arg2 (o5 / officer)))) :op2 (o6 / obligate-01 :arg2 (q / question-01 :arg0 (p7 / person :arg0-of (h4 / have-org-role-91 :arg3 (j / judge-01))) :arg1 (p8 / person))))
(f / fall-01 :arg1 (c / country :name (n / name :op1 "France") :mod (o / organization :name (n2 / name :op1 "PMI"))) :arg4 (t / thing :quant 46.9) :time (m / meanwhile))
(a / and :op1 (' / '' :arg0 (p / person :arg1-of (i / include-91 :arg2 (y / you) :arg3 (p2 / person :arg0-of (h / have-rel-role-91 :arg1 (i2 / i) :arg2 (h2 / husband))))) :arg1 (i3 / i) :arg2 (p3 / person :arg0-of (h3 / have-rel-role-91 :arg1 (i4 / i) :arg2 (h4 / husband))) :time (b / before :op1 (n / now) :quant (t / temporal-quantity :quant (N / N-A) :unit (y2 / year))) :location (p4 / privacy :poss (h5 / home :poss (w / we)))) :op2 (h6 / hope-01 :arg0 (i5 / i) :arg1 (f / feel-01 :arg0 (y3 / you) :arg1 (g / great :topic (p5 / person :name (n2 / name :op1 "Winstead"))))))
(a / address-02 :polarity - :arg1 (r / request-01 :arg1-of (r2 / resemble-01) :arg1-of (r3 / request-01 :arg0 (p / politician))) :time (y / yet))
(b / begin-01 :arg1 (c / career :poss (s / she)) :location (a / and :op1 (o / organization :name (n / name :op1 "Bain" :op2 "and" :op3 "Co") :arg0-of (h / have-org-role-91 :arg1 (o2 / organization :name (n2 / name :op1 "Morgan" :op2 "Stanley")))) :op2 (p / person :arg0-of (h2 / have-org-role-91 :arg1 (o3 / organization) :arg3 (m / manage-01))) :op3 (p2 / person :arg0-of (h3 / have-org-role-91 :arg1 (o4 / organization) :arg3 (m2 / manage-01))) :op4 (p3 / person :arg0-of (h4 / have-org-role-91 :arg1 (o5 / organization) :arg3 (w / world :mod (m3 / media)))) :op5 (p4 / person :arg0-of (h5 / have-org-role-91 :arg1 (m4 / media) :arg3 (w2 / world :mod (m5 / media))))))
(r / report)
(c / cause-01 :arg1 (a / and :op1 (d / deliberately :arg1 (b / bible) :manner (d2 / deliberate)) :op2 (d3 / deceptively :arg1 (b2 / bible) :arg2 (r / reason :mod (r2 / religion) :mod (b3 / both)))))
(c / contrast-01 :arg2 (a / and :op1 (o / opted :arg0 (t / they) :arg1 (r / remove-01 :arg0 (t2 / they) :arg1 (b / book :quant (m / more-than :op1 (N / N-A))) :arg2 (b2 / bible)) :mod (s / still)) :op2 (r2 / referenced :arg0 (b3 / book :mod (o2 / other) :arg1-of (c2 / choose-01 :arg0 (t3 / they))) :arg1 (t4 / they) :mod (s2 / still))))
(a / and :op1 (t / try-01 :arg0 (i / i) :arg1 (h / high-five :arg0 (i2 / i) :arg1 (e / everyone :arg0-of (p / put :arg1 (h2 / hand :part-of (h3 / he)))))) :op2 (a2 / advise-01 :arg0 (i3 / i) :arg1 (i4 / i) :arg2 (d / do-02 :arg0 (i5 / i) :arg1 (s / same))) :arg1-of (c / cause-01 :arg0 (r / resemble-01 :arg1 (p2 / person :quant 10 :arg0-of (v / view-01)) :arg2 (p3 / person :quant (12 / 1/2) :arg0-of (h4 / have-org-role-91 :arg2 (h5 / head-of-state))))))
(d / deny-01 :arg0 (p / person :name (n / name :op1 "Stewart") :quant (m / multiple :op1 78)) :arg1 (c / charge-05 :arg1 (o / organization :name (n2 / name :op1 "Dundee" :op2 "Sheriff" :op3 "Court"))))
FAILED_TO_PARSE#Number of opening and closing brackets doesn't match.
(m / mark-01 :arg0 (s / spring) :arg1 (f / fly-01 :location (l / location :name (n / name :op1 "Adelaide" :op2 "Airport"))) :ord (o / ordinal-entity :value 1))
(t / take-01 :arg1 (p / person :arg0-of (h / have-rel-role-91 :arg1 (s / school :mod (s2 / small :degree (m / most))) :arg2 (c / child))) :arg4 (c2 / class :poss (p2 / person)) :arg1-of (c3 / cause-01 :arg0 (w / wait-01 :arg1 (p3 / person) :arg2 (p4 / person :arg0-of (t2 / teach-01 :arg1 (p5 / person :arg0-of (h2 / have-org-role-91 :arg2 (p6 / president))) :arg2 (a / arrive-01 :arg1 (p7 / person)))))))
(c / contrast-01 :arg1 (b / ban-01 :arg1 (a / asbestos) :location (c2 / country :quant (m / more-than :op1 50))) :arg2 (u / use-01 :arg1 (a2 / asbestos :mod (w / white)) :arg2 (m2 / material :arg1-of (c3 / cheap-02) :location (p / part :part-of (w2 / world) :quant (m3 / many))) :mod (s / still)))
(c / contrast-01)
(r / return-01 :arg1 (p / person :name (n / name :op1 "Lucie" :op2 "Borhyová")) :arg4 (c / camera) :manner (d / dramatic))
(a / and :op1 (f / feel-01 :arg0 (s / she) :arg1 (p / pang :beneficiary (h / he)) :arg2 (h2 / he)) :op2 (m / matter-01 :polarity - :arg1 (h3 / hand :part-of (t / they)) :arg2 (h4 / hand :part-of (t2 / they))))
(s / say-01 :arg0 (p / person :name (n / name :op1 "Le" :op2 "Pen") :arg0-of (l / lead-02 :arg1 (o / organization :name (n2 / name :op1 "National" :op2 "Front"))) :mod (f / far-right)) :arg1 (s2 / see-01 :polarity - :arg0 (p2 / person) :arg1 (g / government-organization :arg0-of (g2 / govern-01 :arg1 (p3 / person :name (n3 / name :op1 "Valls"))) :mod (n4 / new)) :time (a / after :op1 (n5 / now) :quant (f2 / few :op1 (t / temporal-quantity :quant (N / N-A) :unit (m / month)) :mod (j / just)))) :manner (s3 / say-01 :arg0 (p4 / person) :arg1 (s4 / see-01 :polarity - :arg0 (p5 / person) :arg1 (g3 / government-organization :arg0-of (g4 / govern-01 :arg1 (p6 / person :name (n6 / name :op1 "Valls"))) :mod (n7 / new)))))
(r / recognised :arg0 (h / he) :arg1 (p / prickly))
(c / contrast-01 :arg2 (c2 / continue-01 :arg0 (i / i) :arg1 (i2 / ignore-01 :arg0 (i3 / i) :arg1 (t / that :quant (a / all))) :mod (s / still)))
(b / behaves :arg0 (h / he) :arg1 (g / girl :arg1-of (r / resemble-01 :arg2 (g2 / girl))))
(w / want-01 :arg0 (c / country :name (n / name :op1 "Israel")) :arg1 (a / and :op1 (d / disarm-01 :arg0 (o / organization :name (n2 / name :op1 "Hamas"))) :op2 (r / return-01 :arg1 (b / body :consist-of (p / person :quant 2 :arg0-of (h / have-org-role-91 :arg2 (s / soldier))) :arg1-of (k / kill-01 :location (w2 / war))))))
(c / contrast-01)
(a / and :op1 (g / good :degree (m / more) :domain (w / we) :time (a2 / already) :time (h / half :ord (o / ordinal-entity :value 2))) :op2 (h2 / have-03 :arg0 (w2 / we) :arg1 (t / threaten-01 :arg1 (s / situation :mod (s2 / standard) :mod (o2 / only)))))
FAILED_TO_PARSE#Number of opening and closing brackets doesn't match.
(a / and :op2 (c / come-01 :arg1 (p / person :quant (a2 / around :op1 150)) :arg4 (t / together) :location (l / location :name (n / name :op1 "Cardiff")) :arg1-of (d / describe-01 :arg2 (t2 / thing :arg1-of (d2 / describe-01 :arg2 (c2 / counter-summit)))) :location (l2 / location :name (n2 / name :op1 "Cardiff"))))
(a / and :op1 (b / become-01 :arg1 (p / person :arg0-of (p2 / play-01 :arg1 (o / organization :name (n / name :op1 "Canning" :op2 "Vale")))) :arg2 (p3 / product-of :op1 1 :op2 5) :time (w / week :mod (l / last))) :op2 (f / follow-01 :arg1 (w2 / win-01 :arg0 (c / couple :mod (c2 / country :name (n2 / name :op1 "N-A"))) :arg2 (r / rate-entity-91 :arg1 (m / monetary-quantity :quant 7.5 :unit (d / dollar) :mod (o2 / only)) :arg2 (t / temporal-quantity :quant (N / N-A) :unit (w3 / week)) :mod (o3 / only)))))
(b / bring-01 :arg0 (i / introduce-02 :arg1 (c / championship :location (c2 / city :name (n / name :op1 "Warsaw")))) :arg1 (n2 / number :mod (r / record) :quant (n3 / number :mod (r2 / record))))
(e / earn-01 :arg0 (i / it) :arg1 (r / rate-entity-91 :arg1 (a / approximately :op1 (b / between :op1 (t / temporal-quantity :quant (N / N-A) :unit (y / year)) :op2 (t2 / temporal-quantity :quant (N2 / N-A) :unit (y2 / year)))) :arg2 (t3 / temporal-quantity :quant (N3 / N-A) :unit (y3 / year))))
(c / contrast-01 :arg1 (c2 / clear-06 :polarity - :arg1 (o / or :mode (i / interrogative) :op1 (w / want-01 :arg0 (s / she) :arg1 (s2 / save-02 :arg0 (s3 / she) :arg1 (t / toad))) :op2 (w2 / want-01 :arg0 (s4 / she) :arg1 (e / eat-01 :arg0 (s5 / she) :arg1 (t2 / toad))))) :arg2 (i2 / important :polarity - :domain (t3 / that)))
(r / rented :arg0 (p / provide-01 :arg1 (l / license-01 :arg1 (e / electronics)) :arg2 (p2 / person :arg0-of (d / distribute-01) :example (a / and :op1 (o / organization :name (n / name :op1 "Amazon.com")) :op2 (c / country :name (n2 / name :op1 "N-A")) :op3 (o2 / organization :name (n3 / name :op1 "Barnes" :op2 "&" :op3 "Noble" :op4 "Inc"))))) :arg1 (b / book :mod (t / that) :frequency (s / sometimes)) :mod (e2 / essential) :frequency (s2 / sometimes))
(u / use-01 :arg0 (a / and :op1 (d / doctor) :op2 (n / nurse) :op3 (d2 / doctor) :op4 (d3 / doctor)) :arg1 (t / tunnel))
(w / winched :arg1 (b / bushwalkers :mod (t / teenage) :quant (m / multiple :op1 (N / N-A))) :arg2 (s / safe-01) :time (a / after :op1 (s2 / spend-01 :arg1 (s3 / stranded :time (n / night) :location (o / organization :name (n2 / name :op1 "NSW" :op2 "Blue" :op3 "Mountains"))))))
(t / tell-01 :arg0 (p / person :arg0-of (r / represent-01 :arg1 (p2 / person :name (n / name :op1 "Lawrence")))) :arg1 (v / violate-01 :arg0 (t2 / this) :arg1 (p3 / privacy) :mod (f / flagrant)) :arg2 (t3 / tmz))
(p / post-01 :arg0 (s / state :name (n / name :op1 "Virginia")) :arg1 (b / bill :mod (t / tax-01 :arg3 (t2 / tax))) :arg2 (p2 / percentage-entity :value (N / N-A)) :mod (o / only))
(s / survive-01 :arg0 (t / thing :manner-of (s2 / survive-01)))
FAILED_TO_PARSE#Number of opening and closing brackets doesn't match.
(s / say-01 :arg0 (p / person :name (n / name :op1 "Barry" :op2 "Levison") :arg0-of (h / have-org-role-91 :arg1 (p2 / person :name (n2 / name :op1 "Phillip" :op2 "Roth") :arg0-of (h2 / have-org-role-91 :arg1 (o / oscar-winning))) :arg2 (7 / 74-year-old))) :arg1 (h3 / have-03 :arg0 (p3 / person :name (n3 / name :op1 "Pacino")) :arg1 (r / role :arg1-of (c / close-10 :arg2 (p4 / person) :arg1-of (c2 / close-10 :arg2 (a / and :op1 (e / end-01 :arg1 (c3 / career :poss (p5 / person))) :op2 (l / life :arg1-of (p6 / personal-02)))) :arg1-of (c4 / close-10 :degree (h4 / high)))) :location (o2 / outside :op1 (a2 / and :op1 (t / talk-02 :arg2 (o3 / outside :op1 (a3 / and))) :op2 (f / filmed :location (o4 / outside :op1 (a4 / and :op1 (c5 / compete-02) :op2 (f2 / filmed))))))))
(s / say-01 :arg0 (p / person :name (n / name :op1 "Tim" :op2 "Lawless") :arg0-of (h / have-org-role-91 :arg2 (d / director :mod (r / research-01)))) :arg1 (d2 / drive-01 :arg0 (a / and :op1 (c / city :name (n2 / name :op1 "Sydney")) :op2 (c2 / city :name (n3 / name :op1 "Melbourne"))) :arg1 (m / market :quant 2 :mod (t / tier))))
(n / new-01 :arg1 (c / car) :mod (n2 / new) :arg0-of (c2 / cause-01 :arg1 (d / do-02 :polarity - :arg0 (i / it) :arg1 (s / something :arg1-of (r / resemble-01 :arg2 (t / that))) :arg2 (i2 / i))))
(a / and :op1 (f / force-01 :arg0 (t / this) :arg1 (c / choose-01 :arg0 (s / society :mod (c2 / civil) :mod (c3 / country :name (n / name :op1 "N-A"))) :arg1 (a2 / and :op1 (s2 / society :mod (c4 / civil) :mod (c5 / country :name (n2 / name :op1 "N-A"))) :op2 (c6 / city-district :name (n3 / name :op1 "N-A") :location (c7 / city))))) :op2 (m / make-02 :arg0 (s3 / situation :mod (t2 / this)) :arg1 (g / grimace :arg1 (s4 / situation))))
(b / become-01 :arg1 (i / i) :arg2 (s / scare-01 :arg1 (i2 / i) :mod (a / at-least)) :time (a2 / always) :location (w / walk-01 :quant 3))
(s / say-01 :arg0 (p / person :name (n / name :op1 "Clayson" :op2 "Monyela") :arg0-of (h / have-org-role-91 :arg1 (g / government-organization :arg0-of (g2 / govern-01 :arg1 (c / country :name (n2 / name :op1 "N-A")))) :arg2 (s2 / spokesman))) :arg1 (a / appear-01 :arg1 (a2 / act-02 :arg0 (m / military)) :location (o / overthrow-01)))
FAILED_TO_PARSE#Two concepts in a row.
(d / differ-02 :arg1 (d2 / differ-02 :mod (s / such)))
(g / go-02 :arg0 (w / we) :arg4 (l / location :name (n / name :op1 "Beslan")) :direction (b / back) :destination (l2 / location :name (n2 / name :op1 "Beslan") :location (s / south)) :purpose (f / find-01 :arg0 (w2 / we) :arg1 (v / victim :arg1-of (i / include-91 :arg2 (v2 / victim) :arg3 (s2 / some)) :arg0-of (c / cheated :arg1 (d / die-01 :arg1 (v3 / victim) :location (a / atrocity :mod (m / malicious)))))))
(w / want-01 :arg0 (t / they) :arg1 (p / play-01 :arg0 (t2 / they) :arg1 (c / card :poss (t3 / they)) :arg2 (o / oligarch :poss (t4 / they))) :time (n / no-longer))
(m / multi-sentence :snt1 (a / allow-01 :arg0 (t / this) :arg1 (c / capture-01 :arg0 (y / you) :arg1 (c2 / color :mod (c3 / color :degree (m2 / more)) :location (p / photo :poss (y2 / you)))) :mod (a2 / also)) :snt2 (c4 / cause-01 :arg0 (c5 / color :mod (l / less) :arg1-of (s / see-01 :arg0 (y3 / you))) :arg1 (y4 / you)))
(a / and :op1 (l / leave-17 :arg1 (t / thing :arg2-of (l2 / leave-17 :arg1 (c / community :mod (c2 / community :polarity -))))) :op2 (l3 / leave-17 :arg1 (p / plates :mod (g / greek))))
(m / multi-sentence :snt1 (a / and :op1 (t / turn-02 :arg1 (m2 / man :arg1-of (t2 / turn-02 :arg2 (s / she))) :arg2 (s2 / she)) :op2 (d / defeated :arg0 (h / he)) :op3 (d2 / defeated :arg0 (h2 / he)) :op4 (f / fight-01 :arg0 (h3 / he)) :op5 (f2 / fight-01 :arg0 (h4 / he) :arg2 (a2 / away))) :snt2 (c / cause-01 :arg0 (a3 / amr-unknown) :arg1 (f3 / feel-01 :arg0 (s3 / she) :arg1 (k / know-01 :arg0 (s4 / she) :arg1 (k2 / know-01 :arg0 (s5 / she) :arg1 (k3 / know-01 :arg0 (s6 / she) :arg1 (k4 / know-01 :arg0 (s7 / she) :arg1 (k5 / know-01 :arg0 (s8 / she) :arg1 (k6 / know-01 :arg0 (s9 / she) :arg1 (k7 / know-01 :arg0 (s10 / she) :arg1 (k8 / know-01 :arg0 (s11 / she) :arg1 (k9 / know-01 :arg0 (s12 / she) :arg1 (k10 / know-01 :arg0 (s13 / she) :arg1 (k11 / know-01 :arg0 (s14 / she) :arg1 (k12 / know-01 :arg0 (s15 / she) :arg1 (k13 / know-01 :arg0 (s16 / she) :arg1 (k14 / know-01 :arg0 (s17 / she) :arg1 (k15 / know-01 :arg0 (s18 / she) :arg1 (k16 / know-01 :arg0 (s19 / she) :arg1 (k17 / know-01 :arg0 (s20 / she) :arg1 (k18 / know-01 :arg0 (s21 / she) :arg1 (k19 / know-01 :arg0 (s22 / she) :arg1 (k20 / know-01 :arg0 (s23 / she) :arg1 (k21 / know-01 :arg0 (s24 / she) :arg1 (k22 / know-01 :arg0 (s25 / she) :arg1 (k23 / know-01 :arg0 (s26 / she) :arg1 (k24 / know-01 :arg0 (s27 / she) :arg1 (k25 / know-01 :arg0 (s28 / she) :arg1 (k26 / know-01 :arg0 (s29 / she) :arg1 (k27 / know-01 :arg0 (s30 / she) :arg1 (k28 / know-01 :arg0 (s31 / she))))))))))))))))))))))))))))))))
(c / charge-05 :arg0 (o / organization :name (n / name :op1 "Karratha" :op2 "Police")) :arg1 (m / man :mod (2 / 20-year-old)) :arg2 (f / fail-01 :arg1 (m2 / man) :arg2 (a / and :op1 (s / stop-01 :arg1 (m3 / man)) :op2 (d / drive-01 :arg0 (m4 / man)))))
(g / give-01 :arg0 (d / deal) :arg1 (a / and :op1 (o / organization :name (n / name :op1 "Norwegian" :op2 "Cruise")) :op2 (t / thing :arg2-of (v / value-01 :arg1 (m / monetary-quantity :quant 6.8 :unit (d2 / dollar) :arg1-of (v2 / value-01 :arg2 (m2 / monetary-quantity :quant 6.8 :unit (d3 / dollar))))))) :arg2 (a2 / and :op1 (v3 / value-01 :arg1 (s / ship :mod (c / cruise :mod (l / luxury))) :arg2 (o2 / organization :name (n2 / name :op1 "Prestige" :op2 "Cruises"))) :op2 (a3 / access-01 :arg0 (c2 / company) :arg1 (s2 / ship :mod (c3 / cruise :mod (l2 / luxury))))) :arg1-of (c4 / cause-01 :arg0 (c5 / competes :arg0 (d4 / deal-01) :arg1 (a4 / and :op1 (p / person :arg0-of (r / rival-01 :arg1 (o3 / organization) :mod (b / big :degree (m3 / more)))) :op2 (p2 / person :arg0-of (h / have-org-role-91 :arg1 (o4 / organization) :arg3 (l3 / lead-02 :arg0 (p3 / person))))))))
(b / battling :arg1 (p / person :name (n / name :op1 "Graham" :op2 "Abbott")) :time (s / still) :time (a / after :op1 (d / diagnosis :arg1 (p2 / person))))
(e / ensure-01 :arg1 (c / close-01 :arg1 (a / and :op1 (n / nail :name (n2 / name :op1 (c2 / camera))) :op2 (c3 / compartments :mod (o / other))) :arg1-of (s / sharp-02)) :concession (e2 / even-if :op1 (h / have-03 :arg0 (y / you) :arg1 (c4 / camera))))
(a / and :op2 (p / person :name (n / name :op1 "Yatsenyuk") :mode (i / interrogative)))
(h / have-concession-91 :arg1 (s / smoke-02 :arg0 (p / person :arg0-of (s2 / smoke-02) :mod (l / lung :polarity -) :quant (a / all))) :arg2 (c / cancer :mod (l2 / lung)))
(m / multi-sentence :snt1 (h / have-concession-91 :arg1 (b / become-01 :arg1 (g / grow-01 :arg1 (a / and :op1 (e / economy) :op2 (g2 / geopolitics))) :arg2 (s / see-01 :arg1 (g3 / grow-01)) :degree (m2 / more) :compared-to (g4 / grow-01 :polarity - :arg1 (g5 / grow-01) :degree (a2 / at-all))) :op2 (b2 / become-01 :arg1 (g6 / grow-01) :arg2 (s2 / see-01 :arg1 (a3 / and :op1 (u / uncertainty :mod (e2 / economy) :mod (e3 / economy)) :op2 (u2 / uncertainty :mod (g7 / geopolitics)))) :degree (a4 / at-all))) :snt2 (s3 / say-01 :arg0 (p / person :name (n / name :op1 "Rob" :op2 "Dobson")) :arg1 (e4 / economists :mod (s4 / senior) :location (m3 / markit))))
(r / report-01 :arg0 (p / publication :name (n / name :op1 "ABC") :mod (d / day :mod (n2 / nation))) :arg1 (h / have-03 :arg0 (p2 / person :arg0-of (o / own-01 :arg1 (g / government-organization :name (n3 / name :op1 "N-A")))) :arg1 (e / effect :mod (s / serious) :topic (b / business :poss (p3 / person)))))
(a / and :op1 (s / satisfy-01 :arg0 (s2 / side :mod (c / country :name (n / name :op1 "N-A"))) :arg1 (r / request-01 :mod (t / that)) :time (e / eventual)) :op2 (i / include-01 :arg1 (f / force :mod (g / ground) :arg1-of (i2 / include-91 :arg2 (f2 / force :mod (g2 / ground)))) :arg2 (r2 / remain-01 :arg1 (f3 / force) :arg3 (c2 / control-01 :arg0 (t2 / troop :mod (p / port)) :arg1 (t3 / troop :mod (p2 / port))))))
(e / encourage-01 :arg0 (a / and :op1 (c / country :name (n / name :op1 "United" :op2 "States")) :op2 (p / person :name (n2 / name :op1 "Douglas" :op2 "MacArthur") :arg0-of (h / have-org-role-91 :arg2 (g / general))) :op3 (a2 / aides :poss (p2 / person))) :arg1 (c2 / country) :arg2 (a3 / adopt-01 :arg0 (c3 / country) :arg1 (c4 / constitution :arg1-of (d / design-01 :arg3 (a4 / assure-01 :arg0 (c5 / constitution) :arg1 (r / replace-01 :arg1 (a5 / autocracy :poss (p3 / person :name (n3 / name :op1 "Hideki" :op2 "Tojo"))) :arg2 (d2 / democracy)))))) :time (o / occupy-01 :arg0 (c6 / country) :arg1 (c7 / country) :time (a6 / after :op1 (r2 / reactivate-01 :arg0 (c8 / country) :arg1 (w / war)))))
(s / stop-01 :arg0 (w / we) :arg1 (c / count-01 :arg0 (w2 / we) :arg1 (t / thing :quant-of (p / person :arg1-of (h / help-01 :arg0 (w3 / we))))) :time (a / already) :time (b / before :op1 (n / now) :quant (l / long)))
(h / hope-01 :arg0 (w / we) :arg1 (a / and :op1 (e / establish-01 :arg1 (p / peace) :location (h2 / here) :time (f / final)) :op2 (r / receive-01 :arg0 (c / child) :arg1 (k / knowledge :arg1-of (u / useful-05 :arg2 (l / life :poss (c2 / child) :time (f2 / future)))))))
(a / and :op1 (t / thing :quant 1 :domain (l / look-01 :arg1 (s / shoulder :part-of (p / person :arg0-of (h / have-rel-role-91 :arg1 (y / you) :arg2 (f / friend))))) :time (m / morning :quant 3) :time (m2 / morning)) :op2 (a2 / another :mod (a3 / another :mod (q / quite)) :purpose (w / watch-01 :arg1 (r / rando :quant (s2 / some)) :location (l2 / local-region :name (n / name :op1 "N-A")) :arg1-of (c / call-01 :arg2 (d / duty :mod (d2 / duty))))))
(s / say-01 :arg0 (g / group) :arg1 (s2 / stop-01 :arg0 (d / doctor :mod (t / that) :quant (a / all) :location (s3 / state)) :arg1 (s4 / stop-01 :arg0 (d2 / doctor) :arg1 (c / carrying :arg0 (d3 / doctor) :arg1 (p / procedure)))) :condition (f / force-01 :arg1 (d4 / doctor :mod (o / other) :quant (a2 / all) :location (s5 / state)) :arg2 (s6 / stop-01 :arg0 (d5 / doctor) :arg1 (a3 / abortions))))
(( / ( :( (n / name) :op1 "Alyona" :op2 "Tskaeva")
(s / satisfy-01 :arg0 (p / perform-01 :arg0 (h / he)) :arg1 (y / you) :manner (a / amr-unknown))
(t / two-dimensional :arg1 (s / surface :location (r / relative-position :op1 (r2 / river :name (n / name :op1 "N-A")) :quant (m / multiple :op1 1) :arg1-of (l / long-03))) :arg1-of (c / cause-01 :arg0 (a / arrow :arg0 (d / dimension :mod (c2 / circular)) :arg1 (a2 / and :op1 (s2 / short) :op2 (b / bigot)))))
(c / contrast-01 :arg1 (h / have-rel-role-91 :arg0 (p / person :arg0-of (h2 / have-rel-role-91 :arg1 (c2 / child) :arg2 (c3 / child))) :arg1 (p2 / person :arg0-of (h3 / have-rel-role-91 :arg1 (c4 / child) :arg2 (f / father))) :arg2 (p3 / person :arg0-of (h4 / have-rel-role-91 :arg1 (c5 / child) :arg2 (f2 / father)))) :arg2 (k / know-01 :polarity - :arg0 (p4 / person) :arg1 (p5 / pregnancy :arg0 (p6 / person :arg0-of (h5 / have-rel-role-91 :arg1 (c6 / child) :arg2 (c7 / child)))) :arg1-of (r / report-01)))
(c / contrast-01 :arg1 (k / know-01 :arg0 (i / i) :arg1 (r / right-06 :polarity - :arg1 (t / thing :arg2-of (s / solve-01 :arg0 (i2 / i))))) :arg2 (c2 / contrast-01 :arg1 (t2 / thing :arg2-of (s2 / solve-01 :arg0 (i3 / i))) :arg2 (s3 / seem-01 :arg1 (t3 / thing :arg2-of (s4 / solve-01 :arg0 (i4 / i))) :arg1-of (c3 / cause-01 :arg0 (a / and :op1 (s5 / submitted :arg1 (p / person :arg1-of (a2 / accuse-01)) :arg2 (r2 / relation-03) :arg1-of (a3 / allege-01)) :op2 (f / fear-01 :arg0 (p2 / person) :arg1 (h / hide-01 :polarity - :arg0 (p3 / person) :arg1 (a4 / anger-01 :arg0 (p4 / person)))))))))
(h / hold-04 :arg1 (s / session :mod (p / plenary)) :arg1-of (c / cause-01 :arg0 (h2 / have-03 :arg0 (p2 / person :arg0-of (h3 / have-03 :arg1 (i / idea))) :arg1 (p3 / problem :topic (e / explain-01 :arg0 (p4 / person :name (n / name :op1 "Mráka")))))))
(t / think-01 :arg0 (i / i) :arg1 (l / lie-08 :arg0 (g / god) :condition (w / wrong-04 :arg1 (b / bible))))
(a / and :op1 (p / preserved :arg1 (b / body)) :op2 (r / retains :arg0 (b2 / body) :arg1 (b3 / body)) :mod (o / of-course))
(p / possible-01 :arg1 (f / find-01 :arg0 (p2 / person :arg0-of (h / have-org-role-91 :arg1 (c / company :name (n / name :op1 "BBC")))) :arg1 (p3 / person :arg0-of (h2 / have-org-role-91 :arg1 (c2 / company :name (n2 / name :op1 "BBC")) :arg2 (c3 / chief)))) :location (p4 / person))
(p / possible-01 :arg1 (c / consider-01 :arg1 (t / thing :arg0-of (c2 / cause-01 :arg1 (n / need-01 :arg1 (u / use-01 :arg1 (h / heater :mod (o / online) :mod (o2 / online))))))))
(a / advantage :time (h / have-03 :arg0 (y / you) :arg1 (p / person :arg0-of (p2 / play-01)) :duration (t / temporal-quantity :quant (N / N-A) :unit (d / day))))
(s / say-01 :arg0 (o / organization :name (n / name :op1 "Charity" :op2 "CMT" :op3 "UK")) :arg1 (p / problem :mod (c / common) :domain (p2 / person :arg0-of (h / have-org-role-91 :arg1 (o2 / organization :name (n2 / name :op1 "CMT")))) :arg1-of (c2 / cause-01 :arg0 (k / know-02 :arg1 (l / little :degree (s2 / so)) :arg2 (c3 / condition)))))
(a / alternative :arg1-of (p / popular-02 :arg2 (b / book :arg1-of (u / use-01))) :domain (h / half.com :poss (a2 / and :op1 (p2 / person :name (n / name :op1 "Chegg")) :op2 (o / organization :name (n2 / name :op1 "Amazon")))) :mod (p3 / popular))
(w / work-01 :arg0 (p / person :location (i / industry :arg1-of (s / specific-02))) :manner (c / close) :manner (a / and :op1 (l / laggers :arg1 (i2 / it)) :op2 (b / builders :arg1 (a2 / and :op1 (b2 / builders) :op2 (b3 / builders) :op3 (p2 / person :arg0-of (w2 / work-01) :mod (s2 / shipyards)) :op4 (p3 / person :arg0-of (w3 / work-01) :mod (s3 / shipyards))))))
(t / try-02 :arg1 (m / man :mod (7 / 78-year-old)) :arg2 (t2 / try-02 :arg1 (m2 / man) :arg2 (r / run-02 :arg0 (m3 / man) :arg1 (g / girl :arg0-of (c / cross-02 :arg1 (p / pelicans))) :location (f / fife :mod (p2 / pelicans)))))
(a / and :op1 (t / take-01 :arg0 (a2 / and :op1 (c / cyclists) :op2 (w / walkers) :op3 (w2 / walkers)) :arg1 (p / part) :time (y / yesterday) :time (e / event :ord (o / ordinal-entity :value 8) :location (c2 / cycling :name (n / name :op1 (g / grosser)) :mod (g2 / grosser)))) :op2 (g3 / give-01 :arg0 (a3 / and) :arg1 (s / support-01 :arg0 (a4 / and) :arg1 (h / help-01 :arg0 (a5 / and) :arg1 (h2 / help-01 :arg0 (c3 / child) :arg1 (p2 / person :arg0-of (h3 / have-rel-role-91 :arg1 (c4 / child) :arg2 (c5 / child))) :arg2 (c6 / cancer))))))
(s / say-01 :arg0 (h / he) :arg1 (i / inform-01 :arg1 (p / person :arg0-of (h2 / have-org-role-91 :arg1 (f / family :arg1-of (h3 / have-org-role-91 :arg0 (p2 / person) :arg2 (m / member))) :arg2 (m2 / member))) :arg2 (p3 / plan-01 :arg1 (c / college :location (m3 / middle :op1 (j / june))))))
(m / multi-sentence :snt1 (p / possible-01 :arg1 (p2 / post-01 :arg0 (i / i) :arg1 (s / something :topic (g / go-on-15 :arg1 (t / thing :arg1-of (g2 / go-on-15 :accompanier (a / and :op1 (i2 / i) :op2 (p3 / person :arg0-of (h / have-rel-role-91 :arg1 (i3 / i) :arg2 (p4 / partner)))))))))) :snt2 (a2 / and :op1 (l / like-01 :arg0 (p5 / person :arg0-of (h2 / have-rel-role-91 :arg1 (i4 / i) :arg2 (p6 / partner))) :arg1 (p7 / person :quant 150 :arg1-of (l2 / like-01 :arg0 (p8 / person)))) :op2 (s2 / say-01 :arg0 (p9 / person) :arg1 (l3 / like-01 :arg0 (p10 / person) :arg1 (p11 / person :name (n / name :op1 "Mitchell"))))))
(w / want-01 :arg0 (h / he) :arg1 (s / see-01 :arg0 (h2 / he)))
(p / post-01 :arg0 (i / it) :arg1 (r / revenue :mod (m / monetary-quantity :quant 1.2 :unit (d / dollar))) :arg2 (p2 / percentage-entity :value (N / N-A)) :time (e / early :degree (m2 / more)))
(a / and :op2 (s / say-01 :arg0 (y / you) :arg1 (h / hate-01 :mode (i / interrogative) :arg0 (y2 / you) :arg1 (i2 / i))))
(a / and :op2 (s / succeed-01 :arg1 (i / it)))
(p / possible-01 :arg1 (s / suggest-01 :arg0 (i / i) :arg1 (r / read-01 :arg0 (y / you) :arg1 (n / novels :mod (f / few :degree (m / more))))))
(a / and :op1 (b / build-01 :arg0 (p / person :name (n / name :op1 "Andrew" :op2 "Morgan") :arg1-of (i / include-91 :arg2 (s / stock :arg0-of (h / house-01) :poss (w / we)) :arg3 (a2 / amount :mod (l / large)))) :arg1 (p2 / person :arg0-of (r / represent-01 :arg1 (p3 / person :name (n2 / name :op1 "Andrew" :op2 "Lawson"))) :arg0-of (r2 / represent-01 :arg1 (p4 / person) :time (c / case-03 :arg1 (p5 / person) :arg2 (h2 / hospital :poss (p6 / person :name (n3 / name :op1 "Guy"))))))) :op2 (n4 / note-01 :arg0 (p7 / person) :arg1 (p8 / person :arg0-of (r3 / represent-01 :arg1 (p9 / person) :time (c2 / case-03 :arg1 (p10 / person))))))
(s / say-01 :arg0 (o / organization :name (n / name :op1 "Education" :op2 "Ministry")) :arg1 (r / return-02 :polarity - :arg1 (f / family :quant (a / about :op1 (N / N-A))) :mod (s2 / still)))
(l / learn-01 :arg0 (i / i) :arg1 (p / paradise :domain (i2 / i) :mod (h / heart)))
(t / try-02 :arg1 (m / man :mod (7 / 78-year-old)) :arg2 (t2 / try-02 :arg1 (m2 / man) :arg2 (r / run-02 :arg0 (m3 / man) :arg1 (g / girl :arg0-of (c / cross-02 :arg1 (p / pelicans))) :location (f / fife :mod (p2 / pelicans)))))
(b / believe-01 :arg1 (c / contribute-01 :arg0 (c2 / condition :mod (s / squally)) :arg2 (l / land-01 :arg1 (f / fly-01 :source (o / organization :name (n / name :op1 "Virgin" :op2 "Airlines")) :destination (c3 / city :name (n2 / name :op1 "Melbourne"))))))
(a / and :op1 (g / get-05 :arg1 (i / i) :arg2 (u / up)) :op2 (c / climb :arg0 (i2 / i) :arg1 (p / person :arg0-of (h / have-rel-role-91 :arg1 (i3 / i) :arg2 (m / mum)))))
(e / emphasize-01 :arg0 (p / person :name (n / name :op1 "Chen" :op2 "Yunxian") :arg0-of (h / have-org-role-91 :arg1 (p2 / province) :arg2 (g / governor :mod (d / deputy)))) :arg1 (w / wish-01 :arg1 (t / this) :time (t2 / talk-01 :arg0 (p3 / person) :arg2 (d2 / democrat :mod (s / social)))))
(f / friendly-01 :arg1 (a / and :op1 (c / cleaner :mod (c2 / constant)) :op2 (c3 / cleaner :arg1-of (i / increase-01))) :arg2 (e / environmentally))
(a / and :op1 (l / look-01 :mode (i / imperative) :arg0 (y / you) :arg1 (w / wrapped :arg1 (s / service :mod (v / video) :poss (c / company :name (n / name :op1 "Google")))) :time (b / before :op1 (n2 / now) :quant (t / temporal-quantity :quant (N / N-A) :unit (m / month)))) :op2 (l2 / look-01 :arg0 (s2 / sell-01) :arg1 (w2 / wrapped :quant (a2 / all))) :op3 (s3 / seem-01 :arg1 (n3 / natural-03 :arg1 (s4 / sell-01))))
(m / multi-sentence :snt1 (s / safe-01 :arg1 (s2 / speak-01 :arg0 (w / woman) :arg1 (a / and :op1 (r / relation-03 :arg0 (w2 / woman) :arg2 (r2 / relation-03) :arg1-of (p / public-02)) :op2 (s3 / safe-01 :arg1 (w3 / woman))))) :snt2 (a2 / ask-01 :arg0 (s4 / she)) :snt3 (a3 / ask-01 :arg0 (s5 / she)))
(t / think-01 :arg1 (h / have-03 :arg0 (p / person :quant (a / about :op1 23,000) :location (c / country :name (n / name :op1 "UK"))) :arg1 (o / organization :name (n2 / name :op1 "CMT") :arg0-of (c2 / cause-01 :arg1 (s / symptom :mod (y / yuhua) :example (a2 / and :op1 (w / weak-02 :arg1 (m / muscle)) :op2 (g / gait :mod (a3 / awkward)) :op3 (t2 / toe :mod (c3 / curled))))))))
(p / publish-01 :arg1 (p2 / photo) :arg1-of (d / deep-02 :degree (m / most)))
(c / cause-01 :arg0 (f / fair :arg1 (e / electronics :mod (p / person :arg0-of (c2 / consume-01) :mod (i / international))) :location (c3 / city :name (n / name :op1 "Berlin"))) :arg1 (s / show-01 :arg0 (w / we) :arg1 (h / have-manner-91 :arg1 (c4 / come-01 :arg1 (w2 / we) :arg4 (q / question-01 :arg1 (t / technology))) :arg2 (w3 / we))))
(s / say-01 :arg0 (p / person :name (n / name :op1 "Peskov")) :arg1 (m / mean-02 :arg1 (r / reference-04 :arg0 (p2 / person :name (n2 / name :op1 "Putin")) :arg1 (s2 / statehood)) :arg2 (c / context :poss (c2 / city :arg1-of (d / discuss-01 :duration (m2 / multiple :op1 (t / temporal-quantity :quant (N / N-A) :unit (m3 / month)))) :arg1-of (d2 / discuss-01 :duration (m4 / multiple :op1 (t2 / temporal-quantity :quant (N2 / N-A) :unit (m5 / month)))))) :purpose (a / allay :arg0 (p3 / person) :arg1 (f / fear-01) :arg2 (f2 / fear-01 :arg0 (p4 / person) :arg1 (f3 / fear-01 :arg0 (p5 / person) :arg1 (f4 / fear-01 :arg0 (p6 / person) :arg1 (e / endanger-01 :arg1 (a2 / and :op1 (c3 / culture) :op2 (r2 / right-05 :arg2 (l / linguistic))))))))))
(i / infer-01 :arg1 (i2 / incarnation :mode (i3 / interrogative) :mod (n / new) :poss (h / he) :domain (t / this)))
(i / infer-01 :arg1 (m / memory :arg1-of (s / special-02) :domain (h / he) :beneficiary (h2 / he) :time (a / always)) :arg2 (h3 / he) :ord (o / ordinal-entity :value 1))
(f / fear-01 :arg1 (d / die-01 :arg1 (b / both)) :concession-of (s / survive-01 :arg0 (t / they)))
(m / multi-sentence :snt1 (g / geared :arg1 (e / everything) :arg2 (n / nothing :arg0-of (' / '' :arg1 (a / and :op1 (g2 / good :mod (w / white)) :op2 (g3 / good :mod (b / brown)))))) :snt2 (a2 / and :op1 (p / possible-01 :arg1 (s / send-03 :arg0 (y / you) :arg1 (y2 / you) :arg4 (t / thing :arg1-of (r / report-01 :arg0 (y3 / you))))) :op2 (p2 / possible-01 :arg1 (t2 / tell-01 :arg0 (y4 / you) :arg1 (t3 / thing :manner-of (o / obligate-01 :arg1 (y5 / you) :arg2 (g4 / go-06 :arg0 (y6 / you) :arg1 (t4 / thing :arg1-of (r2 / report-01 :arg0 (y7 / you)))))) :arg2 (y8 / you)) :op3 (p3 / possible-01 :arg1 (t5 / tell-01 :arg0 (p4 / person :arg0-of (h / have-rel-role-91 :arg1 (y9 / you) :arg2 (d / data-goggles))) :arg1 (o2 / obligate-01 :arg1 (y10 / you) :arg2 (g5 / go-02 :arg0 (y11 / you) :arg4 (o3 / oven)))))) :op4 (p5 / possible-01 :arg1 (t6 / tell-01 :arg0 (p6 / person :arg0-of (h2 / have-rel-role-91 :arg1 (y12 / you) :arg2 (d2 / data-goggles))) :arg1 (t7 / thing :manner-of (g6 / go-02 :arg0 (y13 / you) :arg4 (o4 / oven)))) :arg2 (y14 / you))))
(a / and :op1 (f / fall-01 :arg1 (i / i) :arg2 (d / day)) :op2 (t / take-10 :arg0 (e / everything) :arg1 (i2 / i) :time (n / no-longer)))
(a / and :op1 (d / die-01 :arg1 (p / person) :time (n / now)) :op2 (b / believe-01 :arg0 (i / i) :arg1 (k / kill-01 :arg1 (p2 / person :quant (m / many) :arg0-of (h / have-rel-role-91 :arg1 (p3 / person) :arg2 (c / child))))) :op3 (k2 / kill-01 :arg1 (p4 / person)) :op4 (k3 / kill-01 :arg1 (p5 / person)))
(d / drop-01 :arg0 (p / person :name (n / name :op1 "Fatima") :arg0-of (h / have-rel-role-91 :arg1 (h2 / he) :arg2 (m / mother))) :arg1 (h3 / he) :arg3 (d2 / day :ord (o / ordinal-entity :value 1) :poss (h4 / he)) :location (s / school) :time (b / before :op1 (t / take-01 :arg0 (p2 / person) :arg1 (p3 / person :name (n2 / name :op1 "Vladimir") :mod (e / elder) :arg0-of (h5 / have-rel-role-91 :arg1 (p4 / person) :arg2 (s2 / son))) :arg2 (u / university))))
(h / have-rel-role-91 :arg0 (s / she) :arg1 (s2 / she) :arg2 (g / great) :mod (g2 / great))
(a / announce-01 :arg0 (f / force :arg0-of (r / rebel-01)) :arg1 (o / or :op1 (b / believe-01 :arg1 (i / injure-01 :arg1 (s / soldier :quant (a2 / around :op1 100))) :mod (a3 / also)) :op2 (k / kill-01 :arg1 (s2 / soldier) :location (r2 / region :location (l / location :name (n / name :op1 "Donezk")))) :arg1-of (c / conform-01 :arg2 (a4 / agency :mod (c2 / country :name (n2 / name :op1 "N-A"))))))
(c / confirm-01 :arg0 (c2 / court :mod (a / appeal-01)) :arg1 (c3 / claim-01 :arg0 (p / person :arg0-of (i / injure-01 :ord (o / ordinal-entity :value 1))) :arg1 (c4 / country :name (n / name :op1 "Britain")) :arg1-of (c5 / cause-01 :arg0 (r / result-01 :arg1 (a2 / asbestos :mod (a3 / asbestos)) :arg2 (c6 / country)))))
(p / possible-01 :polarity - :arg1 (g / get-01 :arg0 (p2 / person :arg0-of (e / engineer-01)) :arg1 (s / sound :mod (h / half-decent) :part-of (i / it))))
(m / miss-01 :arg1 (p / person :quant (N / N-A) :arg0-of (h / have-org-role-91 :arg1 (c / crew) :arg2 (m2 / member))))
(c / claim-01 :arg0 (p / person :arg0-of (r / rebel-01)) :arg1 (h / have-03 :arg0 (p2 / person :arg0-of (r2 / rebel-01)) :arg1 (b / boat :quant (m / multiple :op1 2) :arg1-of (i / include-91 :arg2 (b2 / boat :poss (p3 / person :arg0-of (h2 / have-org-role-91 :arg2 (h3 / head-of-state))) :location (s / sea :location (s2 / sea))))) :ord (o / ordinal-entity :value 1)) :mod (a / also))
(r / repeal-01 :arg1 (f / food))
(m / multi-sentence :snt1 (a / and :op1 (g / go-02 :arg0 (i / i) :arg4 (h / hopeful-03 :arg0 (i2 / i) :arg1 (g2 / good :mod (g3 / good :degree (p / pretty)) :mod (g4 / good :degree (p2 / pretty)))) :time (t / today)) :op2 (s / say-01 :arg0 (p3 / person :name (n / name :op1 "Johnston")) :arg1 (a2 / add-01 :arg0 (p4 / person) :arg1 (w / work-09 :polarity - :arg1 (i3 / it) :mod (j / just))))) :snt2 (w2 / work :mode (e / expressive)))
(m / multi-sentence :snt1 (h / have-03 :arg0 (p / person :name (n / name :op1 "Henry")) :arg1 (b / brain :part-of (c / comedian)) :mod (s / still)) :snt2 (b2 / break-01 :arg0 (c2 / converse-01 :arg0 (w / we)) :arg1 (f / flash :poss (h2 / he)) :arg1-of (c3 / cause-01 :arg0 (a / and :op1 (s2 / slips :arg0 (h3 / he)) :op2 (o / out-06 :arg1 (h4 / he) :arg2 (a2 / atheist))))))
(a / and :op1 (h / he :li 45) :op2 (m / middle :op1 (s / surgery-01 :time (e / evening :time (l / late)))) :li 45)
(w / work-01 :arg0 (p / person :name (n / name :op1 "Henry")) :arg1 (c / comedy :mod (a / alternative) :arg1-of (c2 / circuit :arg2 (c3 / comedy :mod (a2 / alternative)))) :location (c4 / comedy :mod (a3 / alternative)))
(a / and :op1 (n / need-01 :arg0 (h / he) :arg1 (o / operation :mod (e / emergency))) :op2 (s / surgeries :quant 2 :mod (f / further) :mod (a2 / as-well)))
(s / suggest-01 :arg0 (s2 / she) :arg1 (a / and :op1 (f / fly-in :degree (m / more)) :op2 (s3 / service :mod (f2 / fly-out))) :arg2 (a2 / allow-01 :arg0 (s4 / service) :arg1 (t / treat-01 :arg0 (p / person :arg0-of (s5 / specialize-01)) :arg1 (p2 / person :arg0-of (s6 / specialize-01)) :arg2 (a3 / and :op1 (h / home) :op2 (p3 / program)) :purpose (s7 / support-01 :arg0 (p4 / person) :arg1 (p5 / person :arg0-of (t2 / treat-03 :arg1 (p6 / person) :arg2 (c / community :poss (p7 / person)))) :arg1-of (c2 / cause-01 :arg0 (p8 / possible-01 :arg1 (h2 / help-01 :arg0 (c3 / community :poss (p9 / person)))))))) :concession (i / improve-01 :arg1 (s8 / service :mod (t3 / tele-medicine)) :purpose (l / lessened :arg0 (s9 / service) :arg1 (t4 / tyranny :mod (d / distance-01)))))
(a / and :op1 (- / -lrb- :arg0 (p / person :name (n / name :op1 "Torsten" :op2 "Sjöberg")) :arg1 (a2 / and :op1 (-2 / -rrb-) :op2 (p2 / person :arg0-of (h / have-rel-role-91 :arg1 (p3 / person :name (n2 / name :op1 "Herbert" :op2 "Piffl")) :arg2 (f / friend))) :op3 (p4 / person :arg0-of (h2 / have-rel-role-91 :arg1 (p5 / person) :arg2 (f2 / friend))) :op4 (p6 / person :arg0-of (h3 / have-org-role-91 :arg1 (b / board) :arg2 (m / member))) :op5 (p7 / person :arg0-of (h4 / have-org-role-91 :arg1 (b2 / board) :arg2 (m2 / member))) :op6 (p8 / person :arg0-of (h5 / have-org-role-91 :arg1 (b3 / board) :arg2 (m3 / member))) :op6 (p9 / person :arg0-of (h6 / have-org-role-91 :arg1 (b4 / board) :arg2 (m4 / member))) :op7 (p10 / person :arg0-of (h7 / have-org-role-91 :arg1 (b5 / board) :arg2 (m5 / member))))))
(r / rate-01 :arg1 (c / cameras :quant (s / some)) :arg2 (o / or :op1 (f / foot :quant (o2 / only :op1 5)) :op2 (o3 / other :quant (b / between :op1 50 :op2 60))))
(v / view-02 :arg0 (p / person :arg0-of (a / author-01)) :arg1 (l / longlisted :arg0 (p2 / person :name (n / name :op1 "Howard" :op2 "Jacobson") :arg1-of (i / include-91 :arg2 (p3 / person :arg0-of (a2 / author-01)) :arg3 (s / score-entity :op1 2014 :op2 (' / '')))) :arg1 (r / rate-entity-91 :arg1 2014 :arg2 (t / temporal-quantity :quant (N / N-A) :unit (y / year)))) :arg2 (p4 / person :arg0-of (a3 / author-01)))
(m / multi-sentence :snt1 (e / event :mod (r / radio :mod (r2 / radio)) :domain (a / amr-unknown)) :snt2 (g / great :degree (s / so) :domain (d / documentary :quant 4 :mod (r3 / radio))))
(a / and :op1 (t / think-01 :arg0 (i / i) :arg1 (b / be-located-at-91 :arg1 (i2 / i) :arg2 (u / under :op1 (v / value-interval :op1 18 :op2 25)))) :op2 (l / lose-02 :arg0 (i3 / i) :arg1 (c / capable-01 :arg1 (i4 / i) :quant (a2 / all)) :manner (g / gradual)))
(c / come-01 :arg1 (p / proportion :quant-of (l / location :name (n / name :op1 "Schwandorf") :arg1-of (c2 / come-01 :arg3 (a / and :op1 (l2 / location :name (n2 / name :op1 "Schwarzach")) :op2 (p2 / person :name (n3 / name :op1 "Thomas" :op2 "Bücherl") :arg0-of (h / have-org-role-91 :arg2 (l3 / location :name (n4 / name :op1 "Schwarzach")))) :op3 (p3 / person :name (n5 / name :op1 "Stefan" :op2 "Brickl") :arg0-of (h2 / have-rel-role-91 :arg1 (a2 / and) :arg2 (l4 / location :name (n6 / name :op1 "Schwarzach")))) :op4 (p4 / person :name (n7 / name :op1 "Daniel" :op2 "Sorgenfrei") :arg0-of (h3 / have-rel-role-91 :arg1 (a3 / and) :arg2 (b / brother))) :op5 (p5 / person :name (n8 / name :op1 "Daniel" :op2 "Sorgenfrei") :arg0-of (h4 / have-rel-role-91 :arg1 (a4 / and) :arg2 (b2 / brother))) :op6 (p6 / person :name (n9 / name :op1 "Daniel" :op2 "Sorgenfrei") :arg0-of (h5 / have-rel-role-91 :arg1 (a5 / and) :arg2 (b3 / brother))) :op7 (p7 / person :name (n10 / name :op1 "Daniel" :op2 "Sorgenfrei") :arg0-of (h6 / have-rel-role-91 :arg1 (a6 / and) :arg2 (b4 / brother))) :op7 (p8 / person :name (n11 / name :op1 "Ferdinand" :op2 "Strebl") :source (l5 / location :name (n12 / name :op1 "Teunz"))))))))
(s / say-01 :arg0 (s2 / she) :arg1 (' / ' :arg0 (i / i) :arg1 (j / joy)) :time (a / after :op1 (r / reunion :arg0 (t / they))))
(c / contrast-01 :arg1 (l / let-01 :arg0 (t / terrorist) :arg1 (g / go-01 :arg1 (s / she))) :arg2 (k / keep-01 :arg0 (t2 / terrorist) :arg1 (a / and :op1 (p / person :arg0-of (h / have-rel-role-91 :arg1 (s2 / she) :arg2 (m / mother))) :op2 (p2 / person :arg0-of (h2 / have-rel-role-91 :arg1 (p3 / person) :arg2 (s3 / sister :mod (o / old)))) :op3 (p4 / person :arg0-of (h3 / have-rel-role-91 :arg1 (p5 / person) :arg2 (s4 / sister :mod (o2 / old)))) :op4 (p6 / person :name (n / name :op1 "Makhar") :arg0-of (h4 / have-rel-role-91 :arg1 (p7 / person) :arg2 (b / brother))) :op5 (p8 / person :arg0-of (h5 / have-rel-role-91 :arg1 (p9 / person) :arg2 (b2 / brother)))) :location (s5 / school)))
(a / add-01 :arg0 (p / person :name (n / name :op1 "Pidgley")) :arg1 (a2 / and :op1 (r / remain-01 :arg1 (d / demand-01 :arg1 (t / thing :mod (g / good :degree (m / most)) :arg1-of (d2 / design-01 :arg3 (n2 / name :op1 (g2 / good)))) :mod (g3 / good)) :arg3 (t2 / thing :mod (g4 / good))) :op2 (m2 / maintain-01 :arg1 (s / sell-01 :arg1 (t3 / thing :arg1-of (s2 / sell-01)))) :op3 (m3 / maintain-01 :arg1 (s3 / sell-01)) :op4 (m4 / maintain-01 :arg1 (s4 / sell-01))))
FAILED_TO_PARSE#Two concepts in a row.
(c / call-03 :arg0 (a / and :op1 (p / person :arg0-of (r / rebel-01)) :op2 (g / government-organization :arg0-of (g2 / govern-01 :arg1 (c2 / country :name (n / name :op1 "Yemen"))))) :arg1 (d / disobedience :mod (c3 / civil) :location (c4 / city :name (n2 / name :op1 "Sanaa") :arg0-of (h / have-org-role-91 :arg2 (c5 / capital)))) :location (c6 / conflict-01 :arg0 (a2 / and :op1 (p2 / person :arg0-of (r2 / rebel-01)) :op2 (g3 / government-organization :arg0-of (g4 / govern-01 :arg1 (c7 / country))))))
(h / hard-02 :arg1 (s / see-01 :arg0 (i / i) :arg1 (a / appeal-01 :arg1 (w / watch-01 :arg1 (g / game))) :arg1-of (i2 / instead-of-91 :arg2 (w2 / watch-01 :arg0 (i3 / i) :arg1 (p / person :arg0-of (c / controller :arg1 (i4 / i))))) :arg1-of (i5 / instead-of-91 :arg2 (w3 / watch-01 :arg0 (i6 / i) :arg1 (p2 / person :arg0-of (d / declare-02 :arg1 (p3 / play-01 :arg0 (p4 / person) :arg1 (s2 / sports))))))))
(h / head-01 :arg0 (p / person :name (n / name :op1 "Josef" :op2 "Schmalzl")) :arg1 (d / division :mod (c / cannons)))
(d / doubt-01 :arg0 (i / i) :arg1 (k / know-01 :arg0 (w / we) :arg1 (t / truth) :time (e / ever)) :li (N / N-A))
(a / and :op2 (c / clear-06 :arg1 (d / deal-01 :arg0 (w / we) :arg2 (r / regime :mod (a2 / authoritarian)))))
(a / arrest-01 :arg1 (p / policeman :mod (t / turkish) :quant (n / number)) :arg1-of (c / cause-01 :arg0 (a2 / and :op1 (s / set-up-03 :arg0 (p2 / policeman) :arg1 (g / gang :arg2-of (c2 / criminal-03) :arg1-of (o / organize-01))) :op2 (h / have-06 :arg0 (p3 / policeman) :arg1 (n2 / number :mod (p4 / phone :mod (t2 / tapped))))) :arg1-of (a3 / allege-01)))
(p / picture :arg1-of (p2 / picture :arg0 (g / girl)))
(r / report)
(a / alternative :arg1-of (p / popular-02 :arg2 (b / book :arg1-of (u / use-01))) :domain (h / half.com :poss (a2 / and :op1 (p2 / person :name (n / name :op1 "Chegg")) :op2 (o / organization :name (n2 / name :op1 "Amazon")))) :mod (p3 / popular))
(w / work-01 :arg0 (p / person :location (i / industry :arg1-of (s / specific-02))) :manner (c / close) :manner (a / and :op1 (l / laggers :arg1 (i2 / it)) :op2 (b / builders :arg1 (a2 / and :op1 (b2 / builders) :op2 (b3 / builders) :op3 (p2 / person :arg0-of (w2 / work-01) :mod (s2 / shipyards)) :op4 (p3 / person :arg0-of (w3 / work-01) :mod (s3 / shipyards))))))
(m / multi-sentence :snt1 (c / concern-01 :arg0 (t / that)) :snt2 (f / find-02 :arg0 (w / we) :arg1 (m2 / mistake-02 :arg0 (w2 / we) :arg1 (m3 / mistake-02 :arg0 (w3 / we) :arg1-of (l / lead-03 :arg2 (e / event :mod (a / amr-unknown)) :condition (e2 / event :location (p / place :ord (o / ordinal-entity :value 1)))))) :condition (f2 / forewarned :polarity - :domain (w4 / we))))
(s / start-01 :arg1 (a / and :op1 (b / boy :location (s2 / station :name (n / name :op1 "N-A") :arg0-of (h / have-org-role-91 :arg2 (h2 / head-of-state)))) :op2 (g / girl :arg1-of (r / resemble-01 :arg2 (l / lads :source (o / organization :name (n2 / name :op1 "SC" :op2 "Weende")))))))
(c / cause-01 :arg0 (o / own-01 :arg0 (o2 / or :op1 (g / government-organization :arg0-of (g2 / govern-01)) :op2 (b / base :mod (t / tax-01) :arg1-of (s / surround-01 :arg2 (a / area :mod (e / email)))) :mod (e2 / especially) :mod (e3 / especially)) :arg1 (o3 / own-01 :arg0 (o4 / or :op1 (g3 / government-organization :arg0-of (g4 / govern-01)) :op2 (t2 / thing :arg1-of (t3 / tax-01 :arg3 (t4 / thing :arg1-of (t5 / tax-01 :arg3 (p / property)))))) :arg1 (p2 / person :name (n / name :op1 "Douglas" :op2 "Lindholm") :arg0-of (h / have-org-role-91 :arg1 (c2 / center :part-of (c3 / center :part-of (s2 / state))) :arg2 (d / director :mod (e4 / executive)))))) :arg1 (e5 / event :location (s3 / state :name (n2 / name :op1 "Maryland"))))
(w / wish-01 :arg0 (i / i) :arg1 (p / possible-01 :arg1 (a / and :op1 (c / call-01 :arg0 (i2 / i) :arg1 (p2 / person :name (n / name :op1 "Cherie")) :arg2 (t / temporal-quantity :quant (N / N-A) :unit (y / year))) :op2 (s / say-01 :arg0 (i3 / i) :arg1 (g / go-01 :arg1 (a2 / and :op1 (p3 / person :arg0-of (h / have-rel-role-91 :arg1 (s2 / she) :arg2 (h2 / husband))) :op2 (p4 / person :arg0-of (h3 / have-rel-role-91 :arg1 (p5 / person) :arg2 (h4 / husband))) :location (c2 / city :name (n2 / name :op1 "London"))) :op3 (t2 / thing :manner-of (h5 / help-01 :arg0 (a3 / and) :arg1 (a4 / and :op1 (p6 / person :name (n3 / name :op1 "Damir")) :op2 (i4 / i))))) :mod (s3 / still)))))
(c / contrast-01 :arg1 (e / expect-01 :arg0 (i / i) :arg1 (s / sorry-01 :arg1 (i2 / i)) :mod (r / really)) :arg2 (e2 / expect-01 :arg0 (p / person :name (n / name :op1 "Melanie" :op2 "Meier")) :arg1 (c2 / comment-01 :arg0 (p2 / person) :arg3 (p3 / page :mod (e3 / event))) :degree (m / more)))
(w / wearing :arg0 (p / person :name (n / name :op1 "Dmitry" :op2 "Beliakov") :arg0-of (h / have-org-role-91 :arg1 (c / country :name (n2 / name :op1 "N-A")) :arg3 (t / top :mod (t2 / top)))) :arg1 (s / she) :manner (t3 / try-01 :arg0 (p2 / person) :arg1 (c2 / climbed :arg0 (p3 / person) :arg1 (b / be-located-at-91 :arg1 (p4 / person) :arg2 (i / inside :op1 (s2 / school :mod (b2 / blitzed))))) :time (a / after :op1 (e / explode-01 :arg1 (t4 / thing :poss (i2 / i)))) :mod (o / only)))
(l / lose-02 :arg0 (i / i) :arg1 (c / consciousness))
(c / comment-01 :arg0 (p / person :name (n / name :op1 "Qadri")) :arg1-of (r / resemble-01))
(s / say-01 :arg0 (p / person :name (n / name :op1 "Emily" :op2 "Lau") :arg0-of (h / have-org-role-91 :arg1 (p2 / political-party :name (n2 / name :op1 "Democratic" :op2 "Party")))) :arg1 (c / contrast-01 :arg1 (u / unexpected :polarity - :domain (i / it)) :arg2 (i2 / infuriating :arg1 (i3 / it) :mod (s2 / still))))
(h / have-concession-91 :arg1 (a / and :op1 (t / take-01 :arg0 (c / country :location (a2 / across :op1 (c2 / country))) :arg1 (c3 / country :location (a3 / around :op1 (c4 / country))) :purpose (e / embrace :arg0 (u / union) :arg1 (r / right :mod (l / labor)))) :op2 (e2 / extend-01 :arg0 (c5 / country) :arg1 (r2 / right)) :op3 (r3 / respect-01 :arg0 (c6 / country) :arg1 (r4 / right))) :arg2 (b / batter :arg1 (a4 / and :op1 (p / person :mod (c7 / country :name (n / name :op1 "N-A"))) :op2 (p2 / person :mod (c8 / country :name (n2 / name :op1 "N-A")))) :location (a5 / across :op1 (c9 / country)) :time (y / year :mod (r5 / recent))))
(s / seem-01 :arg1 (t / tremble :arg0 (s2 / she) :arg1 (s3 / she)) :arg1-of (r / resemble-01 :arg2 (f / fronds :arg1 (t2 / tree :mod (p / palm) :location (s4 / storm)))))
(a / and :op1 (s / sociable :degree (v / very) :domain (p / person :name (n / name :op1 "Tamsin"))) :op2 (b / boisterous :arg1 (p2 / person)))
(t / tour-01 :li 700 :arg1 (p / person :quant 700) :arg1-of (c / cause-01 :arg0 (a / and :op1 (t2 / take-01 :arg0 (p2 / person) :arg1 (r / resort :mod (h / health) :poss (s / salzhausen :arg1-of (b / bad-07)))) :op2 (p3 / person :name (n / name :op1 "Schotten")))))
(u / understand-01 :arg0 (i / i) :arg1 (c / contrast-01 :arg1 (u2 / understand-01 :arg0 (i2 / i) :arg1 (t / that)) :arg2 (t2 / think-01 :arg0 (i3 / i) :arg1 (f / feel-01 :arg0 (p / picture :source (o / over :op1 (w / world) :quant (a / all))) :arg1 (p2 / pain-01 :arg0 (w2 / we)))) :mod (a2 / also)))
(c / contrast-01 :arg2 (a / and :op1 (h / hear-01 :arg0 (h2 / he)) :op2 (r / run-02 :arg0 (h3 / he) :direction (a2 / away))))
(p / phone-number-entity :value (N / N-A))
(b / big :degree (t / too) :domain (f / foot :part-of (y / you)))
(m / multi-sentence :snt1 (s / start-01 :arg1 (t / train-01 :arg2 (' / '')) :mod (u / usual)) :snt2 (e / explain-01 :arg0 (t2 / trainer)))
(r / remember-01 :arg0 (i / i) :arg1 (a / and :op1 (c / child :polarity - :mod (j / just) :arg0-of (h / have-rel-role-91 :arg1 (c2 / child) :arg2 (c3 / child))) :op2 (a2 / and :op1 (r2 / run-02 :arg0 (c4 / child) :direction (a3 / around)) :op2 (r3 / run-02 :arg0 (c5 / child) :direction (a4 / around)) :op3 (l / last-01 :arg1 (a5 / amusement-park :name (n / name :op1 "N-A")) :arg2 (t / temporal-quantity :quant (N / N-A) :unit (m / month)))) :mod (j2 / just)))
(s / say-01 :arg0 (t / that) :arg1 (r / record :mod (w / world) :domain (s2 / size :poss (w2 / world)) :mod (s3 / still)))
(t / try-01 :arg0 (a / and :op1 (p / person :name (n / name :op1 "Laura")) :op2 (p2 / person :name (n2 / name :op1 "Lena")) :op3 (p3 / person :name (n3 / name :op1 "Lisa")) :op4 (p4 / person :name (n4 / name :op1 "Marie")) :op5 (p5 / person :name (n5 / name :op1 "Bettina")) :op6 (p6 / person :name (n6 / name :op1 "Emma")) :op7 (p7 / person :name (n7 / name :op1 "Lisa" :op2 "Neitzel") :arg0-of (h / have-org-role-91 :arg2 (m / member :mod (n8 / new))))) :arg1 (c / country :mod (n9 / new) :arg0-of (h2 / have-org-role-91 :arg2 (m2 / member))) :direction (f / forward))
(m / multi-sentence :snt1 (s / strike-01 :arg0 (i / it) :arg1 (h / he) :arg2 (f / funny)) :snt2 (s2 / say-01 :arg0 (h2 / he) :arg1-of (i2 / instead-of-91)))
(s / starring :arg1 (h / he) :location (c / comedy) :time (s2 / soon))
(r / require-01 :arg1 (p / participate-01 :arg0 (p2 / person :arg0-of (s / serve-01) :arg1-of (p3 / public-02) :quant (a / all)) :arg1 (p4 / person) :time (a2 / after :op1 (n / now) :quant (u / up-to :op1 (b / between :op1 (t / temporal-quantity :quant (N / N-A) :unit (w / week)) :op2 (t2 / temporal-quantity :quant (N2 / N-A) :unit (w2 / week))))) :purpose (e / ensure-01 :arg0 (p5 / person) :arg1 (c / capture-01 :arg1 (d / data :poss (p6 / person)) :path (e2 / exercise :mod (r2 / register-02 :arg1 (a3 / alcohol)))))) :arg1-of (s2 / say-01 :arg0 (g / government-organization :arg0-of (g2 / govern-01))))
(a / and :op1 (d / die-01 :arg1 (s / she)) :op2 (a2 / and :op1 (f / flee-05 :arg0 (h / he) :arg1-of (c / cause-01 :arg0 (s2 / see-01 :arg0 (h2 / he) :arg1 (t / toddler :arg1-of (l / lie-08))))) :op2 (g / grabbed :arg0 (h3 / he) :arg1 (p / person :arg0-of (h4 / have-rel-role-91 :arg1 (h5 / he) :arg2 (c2 / child))) :manner (h6 / hands :arg0 (h7 / he) :arg1 (h8 / hand))) :op3 (f2 / flee-05 :arg0 (h9 / he) :instrument (h10 / hailed :consist-of (c3 / cat)))))
FAILED_TO_PARSE#Two concepts in a row.
(c / cause-01 :arg0 (a / and :op1 (f / forecast-01 :arg1 (w / weather :arg1-of (b / bad-07))) :op2 (r / rain-01 :time (m / morning))) :arg1 (p / person :arg0-of (p2 / participate-01) :quant (a2 / as-many-as :op1 (m2 / many))) :arg2-of (f2 / fortunate-01 :polarity -))
(d / demand-01 :arg0 (p / person :name (n / name :op1 "Vladimir" :op2 "Putin") :arg0-of (h / have-org-role-91 :arg1 (c / country :name (n2 / name :op1 "N-A")) :arg2 (p2 / president))) :arg1 (a / and :op1 (c2 / cease-01 :arg0 (c3 / cease-01 :arg0 (g / government-organization :arg0-of (g2 / govern-01 :arg1 (c4 / country :name (n3 / name :op1 "N-A")))) :arg1 (b / battle-01 :arg0 (g3 / government-organization) :arg1 (s / separatist) :location (e / east :part-of (c5 / country)))) :arg1 (c6 / cease-01 :arg0 (g4 / government-organization) :arg1 (n4 / negotiate-01 :arg0 (g5 / government-organization) :arg1 (s2 / separatist) :location (e2 / east :part-of (c7 / country))))) :op2 (b2 / begin-01 :arg0 (g6 / government-organization) :arg1 (n5 / negotiate-01 :arg0 (g7 / government-organization) :arg1 (s3 / statehood :location (r / region :name (n6 / name :op1 (' / ''))))) :time (i / immediate))))
(e / explode-01 :arg1-of (p / popular-02 :arg2 (p2 / popular)) :mod (e2 / even) :location (c / country :name (n / name :op1 "China")) :mod (e3 / even))
(a / and :op1 (m / mr :arg0 (i / i) :arg1 (p / person :name (n / name :op1 "Piffl"))) :op2 (s / suggest-01 :arg0 (i2 / i) :arg1 (g / get-03 :arg1 (w / we) :arg2 (' / '' :arg0 (p2 / person :name (n2 / name :op1 "Sjöberg"))))) :arg1-of (r / report-01 :arg0 (p3 / person :name (n3 / name :op1 "Sjöberg"))))
(l / look-04 :arg0 (w / we) :arg1 (e / ensure-01 :arg0 (w2 / we) :arg1 (r / reach-01 :arg0 (p / person :arg0-of (s / study-01) :time (y / year :mod (t / this))) :arg1 (u / university) :manner (a / and :op1 (p2 / pale-03 :arg1 (p3 / person) :mod (m / minimum)) :op2 (m2 / maximum :op1 (l2 / luxury)) :mod (m3 / minimum))) :direction (f / forward)))
(s / say-01 :arg0 (p / person :arg0-of (l / lead-02 :arg1 (o / organization :name (n / name :op1 "SPD"))) :arg0-of (l2 / lead-02 :arg1 (d / delegation :mod (g / german))) :arg0-of (l3 / lead-02 :arg1 (d2 / delegation :mod (g2 / german))) :arg0-of (l4 / lead-02 :arg1 (d3 / delegation :mod (g3 / german))) :arg0-of (l5 / lead-02 :arg1 (d4 / delegation :mod (g4 / german))) :arg0-of (l6 / lead-02 :arg1 (d5 / delegation :mod (g5 / german))) :arg0-of (l7 / lead-02 :arg1 (d6 / delegation :mod (g6 / german))) :arg0-of (l8 / lead-02 :arg1 (d7 / delegation :mod (g7 / german))) :arg0-of (l9 / lead-02 :arg1 (d8 / delegation :mod (g8 / german))) :arg0-of (l10 / lead-02 :arg1 (d9 / delegation :mod (g9 / german))) :arg0-of (l11 / lead-02 :arg1 (d10 / delegation :mod (g10 / german)))))
(c / child :polarity - :mod (a / all) :arg0-of (h / have-rel-role-91 :arg1 (c2 / child) :arg2 (c3 / child)) :direction (b / back) :destination (s / school) :location (c4 / country :name (n / name :op1 "Ukraine")))
(h / have-03 :arg0 (s / slash :op1 (p / person :arg0-of (h2 / have-org-role-91 :arg2 (w / winners))) :op2 (p2 / person :arg0-of (h3 / have-org-role-91 :arg2 (w2 / winners)))) :arg1 (d / division :quant 1) :time (m / month :mod (l / last)) :location (o / off :op1 (f / few :op1 (t / temporal-quantity :quant (N / N-A) :unit (w3 / week)) :mod (l2 / lucky)) :beneficiary (p3 / person :arg0-of (p4 / play-01 :arg1 (s2 / state)))))
(m / multi-sentence :snt1 (s / support-01 :arg0 (o / organization :name (n / name :op1 "Gasprom") :arg1-of (r / run-01 :arg0 (f / firm :mod (c / country :name (n2 / name :op1 "Ukraine")) :part-of (f2 / firm)))) :arg1 (t / transport-01 :arg1 (g / gas :arg1-of (n3 / natural-03)) :arg4 (s2 / south :part-of (c2 / country)) :arg1-of (d / direct-02))) :snt2 (m2 / make-02 :arg0 (t2 / this) :arg1 (s3 / secure-02 :arg1 (e / energy :poss (c3 / country :name (n4 / name :op1 "Italy")))) :mod (a / also)))
(d / dawn :prep-with (c / country :name (n / name :op1 "N-A")))
(a / and :op1 (a2 / attack-01 :arg1 (s / stand-11 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (a3 / and :op1 (p2 / person :arg0-of (h2 / have-org-role-91 :arg2 (m / member))) :op2 (p3 / person :arg0-of (r / represent-01 :arg1 (c / criminal-organization :name (n / name :op1 "N-A"))))))) :arg1-of (r2 / realistic-03)) :location (c2 / city :name (n2 / name :op1 "Brussels"))) :op2 (a4 / and :op1 (a5 / attack-01 :arg1 (s2 / stand-11 :arg0 (p4 / person :name (n3 / name :op1 "Logherini")) :arg1 (c3 / crisis :location (c4 / country :name (n4 / name :op1 "N-A"))) :arg1-of (r3 / realistic-03))) :op2 (d / denigrated :arg1 (s3 / stand-11))) :location (c5 / city))
(r / refuse-01 :arg0 (c / country :name (n / name :op1 "China")) :arg1 (g / give-01 :arg0 (c2 / country) :arg1 (r2 / right-05 :arg1 (c3 / city :name (n2 / name :op1 "Hong" :op2 "Kong")) :arg2 (c4 / choose-01 :arg0 (c5 / city) :arg1 (p / person :arg0-of (l / lead-02)))) :arg2 (c6 / city :name (n3 / name :op1 "Hong" :op2 "Kong"))))
(s / say-01 :arg0 (s2 / she) :arg1 (r / resonate :arg1 (s3 / story :mod (t / this)) :arg2 (o / organization :poss (w / woman))))
(m / method :mod (c / conventional :polarity -) :domain (m2 / method :poss (p / person :name (n / name :op1 "Richter"))) :time (c2 / case :mod (a / any)))
(s / say-01 :arg0 (p / person :name (n / name :op1 "Putin")) :arg1 (a / and :op1 (b / believe-01 :arg0 (a2 / anyone :arg0-of (b2 / believe-01 :arg1 (p2 / peace))) :arg1 (t / talk-01 :arg1 (p3 / peace))) :op2 (c / contrast-01 :arg1 (a3 / attack-01 :arg0 (p4 / person :arg0-of (h / have-org-role-91 :arg1 (g / government-organization :arg0-of (g2 / govern-01)) :arg2 (t2 / troop))) :arg1 (c2 / community :mod (c3 / civilian)) :time (d / date-entity :month (O / Oct.) :day 26)) :arg2 (a4 / attack-01 :arg0 (p5 / person :arg0-of (h2 / have-org-role-91 :arg1 (g3 / government-organization :arg0-of (g4 / govern-01)) :arg2 (t3 / troop))) :arg1 (c4 / community :mod (c5 / civilian)) :location (r / region :mod (s2 / separatist-held))))))
(a / and :op2 (m / mean-01 :arg1 (t / this) :arg2 (e / explain-01 :arg1 (t2 / thing :arg0-of (c / cause-01 :arg1 (c2 / come-04 :arg1 (h / he) :arg2 (h2 / harm-01 :arg0 (m2 / man :mod (f / fellow) :poss (h3 / he)) :arg1 (h4 / he) :degree (s / so)) :time (n / now))))) :mod (a2 / also)))
(t / think-01 :mode (i / imperative) :arg0 (y / you))
(s / say-01 :arg0 (t / thing :arg1-of (s2 / state-01 :arg0 (h / hospital))) :arg1 (i / injure-01 :arg1 (o / officer :mod (p / police))))
(d / difficult :domain (k / know-01 :arg1 (a / and :op1 (t / thing :arg1-of (s / say-01)) :op2 (t2 / thing :arg1-of (s2 / say-01)))))
(c / call-03 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (p2 / program :name (n / name :op1 (r / riders))))) :arg1 (a / and :op1 (s / stop-01 :arg1 (p3 / point :mod (s2 / stop-01))) :op2 (b / bad-07 :arg1 (p4 / person)) :op3 (b2 / bad-07 :arg1 (p5 / person)) :op4 (b3 / bad-07 :arg1 (p6 / person)) :op5 (b4 / bad-07 :arg1 (p7 / person))) :time (d / day :ord (o / ordinal-entity :value 2) :part-of (p8 / program :mod (t / tour))))
(i / include-01 :arg1 (a / and :op1 (l / love-01) :op2 (h / honor) :op3 (p / person :name (n / name :op1 "Liam" :op2 "Hemsworth") :mod (o / opposite))) :arg2 (c / credit :mod (f / film) :poss (p2 / person)))
(c / contemplating :arg1 (p / possible-01 :arg1 (w / work-01 :arg1 (w2 / work-01))) :time (n / now))
(c / contrast-01 :arg2 (e / explain-01 :polarity - :arg1 (d / detail :topic (c2 / complex) :quant (a / all)) :mod (s / still)))
(c / come-01 :arg1 (r / rule-01) :time (a / after :op1 (s / summer :arg0-of (f / feature-01 :arg1 (a2 / and :op1 (p / protest-01 :mod (l / large :degree (m / most))) :op2 (p2 / protest-01 :quant (m2 / most) :location (c2 / city :name (n / name :op1 "Hong" :op2 "Kong")))) :time (a3 / after :op1 (s2 / summer) :quant (s3 / some :op1 (t / temporal-quantity :quant (N / N-A) :unit (y / year))))))))
(a / affect-01 :arg0 (s / strike-01) :arg1 (t / transport-01 :arg1 (g / good)))
(a / and :op1 (s / show-01 :arg0 (s2 / series :name (n / name :op1 (l / lenny)) :arg1-of (i / include-91 :arg2 (s3 / series :name (n2 / name :op1 (l2 / lenny)))) :ord (o / ordinal-entity :value 1)) :arg1 (s4 / show-04 :arg1 (h / henry))) :op2 (k / know-02 :arg1 (h2 / he) :arg2 (t / thing :arg1-of (i2 / include-91 :arg2 (p / person :name (n3 / name :op1 "Gareth" :op2 "Blacklock") :arg0-of (c / chef :location (c2 / comedy)))))))
(r / report-01 :arg0 (m / media :mod (c / country :name (n / name :op1 "N-A"))) :arg1 (c2 / chaos :mod (t / traffic) :location (c3 / capital)))
(g / gasped :arg0 (p / person :name (n / name :op1 "Alyona") :arg0-of (h / have-rel-role-91 :arg1 (b / baby) :arg2 (c / child))) :time (c2 / carry-out-03 :arg0 (p2 / person :arg0-of (h2 / have-rel-role-91 :arg1 (b2 / baby) :arg2 (c3 / child))) :arg1 (a / arm :part-of (p3 / policeman :mod (c4 / country :name (n2 / name :op1 "N-A"))))))
(s / spend-01 :arg0 (h / he) :arg1 (m / monetary-quantity :quant 120 :unit (d / dollar)))
(h / hard-02 :arg1 (a / accept-01 :arg1 (i / it) :time (e / event :mod (f / fair :degree (s / so)) :beneficiary (y / you))))
(h / hate-01 :polarity - :arg0 (i / i) :arg1 (y / you) :mod (o / of-course))
(p / possible-01 :arg1 (u / understand-01 :arg0 (f / folk :prep-on (s / side :mod (o / other) :part-of (w / world))) :arg1 (t / thing :arg1-of (f2 / feel-01) :poss (w2 / we)) :arg1-of (c / cause-01 :arg0 (p2 / possible-01 :arg1 (s2 / show-01 :arg0 (f3 / folk) :arg1 (s3 / support-01 :arg0 (f4 / folk)))))) :time (t2 / then))
(c / contrast-01 :arg2 (a / and :op1 (e / enjoy-01 :arg0 (p / person :quant (a2 / all) :arg1-of (i / include-91 :arg2 (p2 / person :arg0-of (p3 / participate-01 :arg1 (t / tour :name (n / name :op1 (h / hr4)) :mod (h2 / hr4))))) :mod (s / sheer)) :arg1 (b / break) :location (r / resort :arg1-of (l / low-04 :degree (m / more)) :location (r2 / resort :arg1-of (l2 / low-04 :degree (m2 / more))))) :op2 (a3 / attend-01 :arg0 (p4 / person) :arg1 (p5 / party :mod (a4 / air) :arg1-of (o / open-09) :location (p6 / peninsula :name (n2 / name :op1 "N-A"))) :mod (t2 / too) :time (l3 / late :degree (m3 / more)))) :time (f / friday :arg1 (p7 / person)))
(b / branded :arg0 (a / and :op1 (g / government-organization :name (n / name :op1 "Kremlin")) :op2 (s / separatist)) :arg1 (t / territory :arg1-of (s2 / seize-01)) :time (l / lately) :arg1-of (c / cause-01 :arg0 (o / or :op1 (n2 / novorossiya :arg1 (t2 / territory :arg1-of (s3 / seize-01))) :op2 (' / '' :arg1 (c2 / country :mod (n3 / new) :mod (c3 / country :name (n4 / name :op1 "Russia")))) :op3 (t3 / term :arg0-of ('2 / '' :arg1 (t4 / term :mod (p / pre-revolutionary :arg1 (e / empire :name (n5 / name :op1 (p2 / pre-revolutionary) :op2 (e2 / empire))))))))))
(b / bring-up-02 :arg0 (p / person :mod (p2 / person :name (n / name :op1 "Harvey"))) :arg1 (r / rate-entity-91 :arg1 (u / under :op1 (b2 / between :op1 (t / temporal-quantity :quant (N / N-A) :unit (y / year)) :op2 (t2 / temporal-quantity :quant (N2 / N-A) :unit (y2 / year)))) :arg2 (t3 / temporal-quantity :quant (N3 / N-A) :unit (y3 / year))) :arg3 (s / score-entity :op1 59 :op2 1))
(s / say-01 :arg0 (p / person :arg0-of (l / lead-02 :arg1 (p2 / party))) :arg1 (a / and :op1 (c / clear-01 :arg1 (w / we) :arg2 (a2 / agree-01 :arg0 (c2 / coalition))) :op2 (h / have-03 :arg0 (w2 / we) :arg1 (t / thing :arg1-of (s2 / say-01 :arg0 (p3 / person :arg0-of (l2 / lead-02 :arg1 (p4 / party)))))) :op3 (s3 / say-01 :arg0 (p5 / person :arg0-of (l3 / lead-02 :arg1 (p6 / party))) :arg1-of (f / follow-01 :arg2 (c3 / conference :mod (o / organization :name (n / name :op1 "CDU")) :topic (t2 / top :location (c4 / city :name (n2 / name :op1 "Berlin"))))))))
(c / contrast-01 :arg1 (d / decide-01 :arg1 (m / make-01 :arg1 (i / it)) :arg1-of (e / easy-05 :polarity -)) :arg2 (t / think-01 :arg0 (i2 / i) :arg1 (i3 / it) :duration (m2 / multiple :op1 (t2 / temporal-quantity :quant (N / N-A) :unit (m3 / month)))))
(m / multi-sentence :snt1 (h / have-03 :arg0 (p / person :arg0-of (h2 / have-org-role-91 :arg1 (p2 / person :name (n / name :op1 "Emmett" :op2 "Shear") :arg0-of (h3 / have-org-role-91 :arg1 (c / country :name (n2 / name :op1 "N-A")) :arg2 (c2 / ceo))) :arg2 (c3 / ceo))) :arg1 (t / thing :arg1-of (s / state-01) :mod (t2 / this) :mod (a / all)) :time (m2 / moment) :arg1-of (c4 / cause-01 :arg0 (a2 / and :op1 (b / believe-01 :arg0 (p3 / person) :arg1 (c5 / community :poss (w / we))) :op2 (s2 / share-01 :arg0 (p4 / person) :arg1 (a3 / and :op1 (v / value :poss (w2 / we)) :op2 (e / envision-01 :duration (l / long-03))))))) :snt2 (a4 / and :op1 (s3 / share-01 :arg0 (p5 / person) :arg1 (v2 / value :poss (w3 / we))) :op2 (w4 / want-01 :arg0 (p6 / person) :arg1 (h4 / help-01 :arg0 (p7 / person) :arg2 (w5 / we) :manner (f / fast :degree (m3 / more))))))
(a / adapt-01 :arg0 (c / child) :arg1 (p / person :arg0-of (h / have-rel-role-91 :arg1 (c2 / child) :arg2 (c3 / child))) :arg2 (a2 / and :op1 (p2 / person :arg0-of (h2 / have-rel-role-91 :arg1 (c4 / child) :arg2 (c5 / child))) :op2 (p3 / person :arg0-of (c6 / carry-01 :arg1 (b / balloons)) :arg0-of (c7 / carry-01 :arg1 (b2 / balloons))) :op3 (g / give-01 :arg1 (f / flower) :arg2 (p4 / person :arg0-of (t / teach-01 :arg1 (f2 / flower))))) :time (d / day :ord (o / ordinal-entity :value 1) :location (s / school)) :mod (t2 / tradition))
(a / affect-01 :arg0 (s / strike-01) :arg1 (t / transport-01 :arg1 (g / good)))
(t / think-01 :mode (i / imperative) :arg0 (y / you))
(t / think-01 :arg0 (i / i) :arg1 (a / and :op1 (s / see-01 :arg0 (p / person :quant (m / many)) :arg1 (i2 / it) :arg2 (o / ordinal-entity :value 1) :time (o2 / ordinal-entity :value 1)) :op2 (u / understand-01 :arg0 (i3 / i) :arg1 (a2 / and :op1 (d / disaster :poss (w / we)) :op2 (s2 / stop-01 :arg1 (t2 / this :mod (a3 / any)))))) :time (s3 / see-01 :arg0 (i4 / i) :arg1 (p2 / photograph-01 :arg0 (i5 / i) :arg1 (c / climb :poss (i6 / i)) :arg2 (w2 / window :mod (s4 / school)))))
(s / say-01 :arg0 (p / person :arg0-of (p2 / prosecute-01)) :arg1 (d / drive-01 :arg0 (p3 / person :name (n / name :op1 "Stewart")) :arg1 (q / q3 :poss (p4 / person)) :manner (a / and :op1 (c / care-01 :arg0 (p5 / person)) :op2 (a2 / attend-02 :arg0 (p6 / person) :arg1 (g / girl))) :arg1-of (c2 / cause-01 :arg0 (a3 / and :op1 (c3 / care-03 :arg0 (p7 / person)) :op2 (a4 / attend-02 :arg0 (p8 / person) :arg1 (g2 / girl))))))
(l / like-01 :arg0 (i / i) :arg1 (a / actor :arg1 (i2 / i)))
(m / multi-sentence :snt1 (p / produce-01 :arg0 (h / he) :arg1 (s / study-01 :arg0 (p2 / person :arg0-of (s2 / suggest-01 :arg1 (t / that)) :arg0-of (s3 / suggest-01 :arg1 (o / or :op1 (o2 / occupational :polarity - :arg1 (m2 / mesotheliomas :quant (p3 / proportion :mod (s4 / substantial))) :prep-with (o3 / or :op1 (o4 / occupational :arg1-of (k / know-01)) :op2 (e / exposure :mod (d / domestic)))))))) :op2 (p4 / probable :domain (c / cause-01 :arg0 (e2 / environment) :arg1 (e3 / expose-01 :arg1 (e4 / environment))))) :snt2 (' / ''))
(t / take-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg2 (p2 / premier))) :arg1 (f / family :arg1-of (h2 / have-org-role-91 :arg0 (p3 / person) :arg2 (m / member))) :arg4 (n / neighbor-01 :arg1 (p4 / person) :arg2 (c / country :name (n2 / name :op1 "South" :op2 "Africa"))) :time (a / after :op1 (s / say-01 :arg0 (p5 / person) :arg1 (r / receive-01 :arg0 (p6 / person) :arg1 (t2 / threat :mod (a2 / assassinate-01))))))
(p / play-01 :arg0 (w / we) :manner (t / together) :time (a / and :op1 (s / small :domain (w2 / we)) :op2 (g / go-02 :arg0 (w3 / we) :arg4 (s2 / school))))
(n / note-01 :arg0 (t / thing :arg1-of (r / report-01 :arg0 (t2 / thing :arg1-of (r2 / report-01 :arg0 (t3 / thing :arg1-of (r3 / report-01 :arg0 (t4 / thing :arg1-of (r4 / report-01 :arg0 (t5 / thing :arg1-of (r5 / report-01 :arg0 (t6 / thing :arg1-of (r6 / report-01 :arg0 (t7 / thing :arg1-of (r7 / report-01 :arg0 (t8 / thing :arg1-of (r8 / report-01 :arg0 (t9 / thing :arg1-of (r9 / report-01 :arg0 (t10 / thing :arg1-of (r10 / report-01 :arg0 (t11 / thing :arg1-of (r11 / report-01 :arg0 (t12 / thing :arg1-of (r12 / report-01 :arg0 (t13 / thing :arg1-of (r13 / report-01)))))))))))))))))))))))))) :arg1 (m / manage-02 :polarity - :arg1 (p / presence :mod (a / asbestos)) :arg1-of (a2 / accord-02 :arg2 (r14 / regulate-01 :mod (v / various)))))
(w / want-01 :arg0 (p / person) :arg1 (s / sure-02 :arg1 (w2 / want-01 :arg0 (p2 / person) :arg1 (e / end-01 :arg1 (t / tune)) :mod (e2 / exact)) :time (b / begin-01 :arg1 (t2 / tune))))
FAILED_TO_PARSE#Number of opening and closing brackets doesn't match.
(p / promise-01 :arg0 (p2 / person :arg0-of (o / organize-01)) :arg2 (f / fit :arg1 (g / generation :quant (a / all))))
(f / face-01 :arg0 (p / person :name (n / name :op1 "George" :op2 "Webster") :quant 28) :arg1 (c / charge-05) :time (h / hear-01 :arg0 (p2 / person) :arg1 (c2 / court :arg1-of (h2 / high-02) :location (c3 / city :name (n2 / name :op1 "Glasgow")))) :li 28)
(o / organize-01 :arg0 (a / and :op1 (g / government-organization :arg0-of (g2 / govern-01 :arg1 (c / city :name (n / name :op1 "Hong" :op2 "Kong")))) :op2 (o2 / organization :name (n2 / name :op1 "Liaison" :op2 "Office") :part-of (c2 / country :name (n3 / name :op1 "China")) :location (c3 / city :name (n4 / name :op1 "Hong" :op2 "Kong")))) :arg1 (b / briefing :poss (p / person)))
(i / interest-01 :arg1 (h / he) :arg2 (b / become-01 :arg1 (h2 / he) :arg2 (p / person :arg0-of (t / teach-01)) :time (e / early :op1 (a / age-01 :arg1 (h3 / he) :arg2 (t2 / temporal-quantity :quant (N / N-A) :unit (y / year))))) :time (a2 / after :op1 (a3 / age-01 :arg1 (h4 / he) :arg2 (t3 / temporal-quantity :quant (N2 / N-A) :unit (y2 / year)))))
(c / crucial :domain (m / money) :prep-for (p / person :mod (t / that) :arg0-of (p2 / pursue-01 :arg1 (m2 / medicine :mod (g / good :degree (m3 / most)) :arg2-of (a / available-02)))))
(i / include-91 :arg3 1 :arg1 (t / thing :arg0-of (k / kill-01 :arg1 (s / she))) :arg2 (i2 / it))
(a / and :op2 (c / crying :arg1 (p / person :name (n / name :op1 "Georgy")) :arg2 (l / location :name (n2 / name :op1 "San" :op2 "Marino")) :mod (e / even) :time (n3 / now)))
(e / event :mod (c / coincidences))
(p / possible-01 :arg1 (b / become-01 :arg1 (t / they) :arg2 (e / embedded :arg1 (l / lining :poss (l2 / lungs)))) :time (a / and :op1 (d / disturb-01 :arg1 (a2 / asbestos)) :op2 (i / inhale :arg1 (f / fibres))))
(a / and :op2 (u / unsparing :arg0 (h / he) :mod (a2 / also) :arg1-of (c / cause-01 :arg0 (d / describe-01 :arg0 (h2 / he) :arg1 (t / that) :mod (t2 / too)))))
(m / multi-sentence :snt1 (s / say-01 :arg0 (p / person :name (n / name :op1 "Richard" :op2 "Dimbath") :arg0-of (h / have-rel-role-91 :arg1 (i / i) :arg2 (f / friend))) :arg1 (a / activity-06 :arg0 (c / club)) :time (a2 / after :op1 (d / die-01 :arg1 (p2 / person :arg0-of (h2 / have-rel-role-91 :arg1 (i2 / i) :arg2 (f2 / friend))))) :time (a3 / after :op1 (d2 / die-01 :arg1 (p3 / person :arg0-of (h3 / have-rel-role-91 :arg1 (i3 / i) :arg2 (f3 / friend))))) :time (a4 / after :op1 (d3 / die-01 :arg1 (p4 / person :arg0-of (h4 / have-rel-role-91 :arg1 (i4 / i) :arg2 (f4 / friend)))))) :snt2 (p5 / period :mod (t / think-01 :arg0 (i5 / i) :arg1 (n2 / need-01 :arg1 (t2 / think-01 :arg0 (y / you) :arg1 (t3 / thing :manner-of (p6 / possible-01 :arg1 (p7 / proceeds))))))))
(s / say-01 :arg0 (h / he) :arg1 (i / inform-01 :arg1 (p / person :arg0-of (h2 / have-org-role-91 :arg1 (f / family :arg1-of (h3 / have-org-role-91 :arg0 (p2 / person) :arg2 (m / member))) :arg2 (m2 / member))) :arg2 (p3 / plan-01 :arg1 (c / college :location (m3 / middle :op1 (j / june))))))
(a / and :op1 (g / give-01 :arg0 (d / doctor :mod (c / country :name (n / name :op1 "N-A"))) :arg1 (x / x-rays :mod (c2 / chest)) :arg2 (h / he)) :op2 (a2 / administer-01 :arg0 (d2 / doctor) :arg1 (c3 / catheters :mod (p / pleural)) :purpose (a3 / and :op1 (d3 / draw-02 :arg0 (d4 / doctor) :arg2 (l / lungs)) :op2 (s / send-03 :arg0 (d5 / doctor) :arg1 (c4 / catheters) :arg3 (a4 / assess-01)))))
(a / and :op1 (a2 / affect-01 :arg0 (i / it) :arg1 (h / health :poss (i2 / i))) :op2 (f / feel-01 :arg0 (i3 / i) :arg1 (i4 / it) :mod (s / still)))
(n / need-01 :arg0 (y / you) :arg1 (c / complicit :arg1 (w / woman :mod (w2 / white)) :purpose (j / justify-01 :arg0 (y2 / you) :arg1 (l / lynching))))
(c / collect-01 :arg0 (s / state :name (n / name :op1 "Maryland")) :arg1 (m / monetary-quantity :quant 1 :unit (d / dollar)) :arg2 (r / revenue :mod (t / tax-01 :arg3 (i / income)) :poss (c2 / corporation)) :location (r2 / region) :degree (m2 / most))
(r / right :mod (h / human) :domain (r2 / right :mod (h2 / human)))
(c / contrast-01 :arg1 (h / have-03 :arg0 (w / we) :arg1 (f / family :arg1-of (h2 / have-org-role-91 :arg0 (w2 / we) :arg2 (m / member))) :arg1-of (c2 / complete-02 :polarity -)) :arg2 (k / kill-01 :arg1 (p / person :quant (a / all) :arg1-of (i / include-91 :arg2 (p2 / person)))))
(a / and :op1 (i / identify-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (o / organization :name (n / name :op1 "Prudential")))) :arg1 (p2 / person :arg0-of (w / work-01 :arg2 (p3 / person :arg0-of (w2 / work-01 :arg2 (a2 / asbestos))))) :manner (p4 / premature)) :op2 (r / refuse-01 :arg0 (p5 / person) :arg1 (i2 / insure-02 :arg1 (l / life)) :time (s / subsequent)))
(m / multi-sentence :snt1 (l / let-01 :mode (i / imperative) :arg0 (y / you) :arg1 (n / nip :arg0 (i2 / i) :arg1 (t / this) :time (n2 / now :mod (r / right)))) :snt2 (p / pun :mode (e / expressive) :arg1-of (i3 / intend-01)))
(l / love-01 :arg0 (p / person) :arg1 (s / story))
(r / recommend-01 :arg0 (p / person :name (n / name :op1 "David" :op2 "Cameron") :arg0-of (h / head-01 :arg1 (c / company :name (n2 / name :op1 "BP")) :time (f / former)) :arg0-of (h2 / head-01 :arg1 (c2 / company :name (n3 / name :op1 "BP")) :time (f2 / former))) :arg1 (b / become-01 :arg1 (s / she) :arg2 (p2 / person :arg0-of (a / advise-01 :arg2 (o / office :mod (c3 / cabinet)))) :time (l / look-04 :arg0 (p3 / person) :arg1 (b2 / bring-01 :arg0 (p4 / person) :arg1 (e / expertise :arg1-of (p5 / private-03)) :arg2 (o2 / organization :name (n4 / name :op1 "Whitehall"))))))
(t / think-01 :polarity - :arg0 (i / i) :arg1 (p / possible-01 :arg1 (d / drive-01 :arg0 (i2 / i) :arg1 (h / home :mod (a / all)))))
(- / -lrb- :arg0 (p / person :name (n / name :op1 "Die" :op2 "Linke")) :arg1 (-2 / -rrb- :mod (l / lefties)) :arg1-of (c / cause-01 :arg0 (c2 / consider-02 :arg0 (p2 / person) :arg1 (p3 / plan-01 :arg1-of (g / give-01 :arg2 (a / argue-02 :location (u / union-02)))))))
(a / accommodated :arg1 (r / refugee) :location (l / location :name (n / name :op1 "Neuländer" :op2 "Platz")) :time (n2 / now))
(m / multi-sentence :snt1 (d / decide-01 :arg0 (t / they) :arg1 (p / put-01 :arg0 (t2 / they) :arg1 (e / egg :poss (t3 / they)) :arg2 (b / basket :purpose (v / vote-01 :arg0 (t4 / they) :arg1 (a / and :op1 (w / woman) :op2 (v2 / vote-01)))))) :snt2 (s / say-01 :arg0 (p2 / person :name (n / name :op1 "Hattery")) :arg1 (p3 / person :name (n2 / name :op1 "Hattery"))))
(i / include-91 :arg1 (s / state :quant 11 :arg0-of (p / pass-01 :arg1 (l / law :arg1-of (r / resemble-01)))) :arg2 (s2 / state-01 :arg0 (c / court) :arg1 (l2 / law :arg1-of (r2 / resemble-01) :arg0-of (o / oppose-01 :arg1 (a / and :op1 (p2 / peninsula :name (n / name :op1 "N-A")) :op2 (a2 / aircraft-type :name (n2 / name :op1 "N-A"))) :time (r3 / recent)))))
(m / multi-sentence :snt1 (i / it :prep-with (i2 / i) :mod (s / still)) :snt2 (l / leave-11 :polarity - :arg0 (i3 / i) :location (b / behind)))
(c / continue-01 :arg1 (e / exist-01 :arg1 (v / view-02 :arg1 (r / reconstruct-01 :arg1 (r2 / reconstruct-01))) :arg2 (t / time :quant (s / some) :location (l / location :name (n / name :op1 "Piffl")))) :arg1-of (d / differ-02))
(m / multi-sentence :snt1 (m2 / mean-01 :arg1 (m3 / mean-01 :arg2 (l / landed :arg1 (h / he)) :frequency (o / often)) :arg2 (h2 / he)) :snt2 (l2 / lack-01 :arg0 (h3 / he) :arg1 (n / need-01 :arg0 (h4 / he) :arg1 (t / temper :arg0 (h5 / he) :arg1 (c / cruelty :arg0-of (j / joke-01 :arg2 (j2 / joke-01)))) :arg1-of (r / resemble-01 :arg2 (h6 / have-rel-role-91 :arg0 (h7 / he) :arg1 (h8 / he) :arg2 (f / father))))))
FAILED_TO_PARSE#Number of opening and closing brackets doesn't match.
(j / judge-01 :arg0 (p / person :name (n / name :op1 "Lady" :op2 "Rae") :arg0-of (h / have-org-role-91 :arg3 (j2 / judge-01))) :arg1 (p2 / person :arg0-of (h2 / have-org-role-91 :arg3 (j3 / judge-01))) :time (d / date-entity :month 11 :day 17) :location (g / government-organization :name (n2 / name :op1 "High" :op2 "Court") :location (c / city :name (n3 / name :op1 "Edinburgh"))))
(h / have-condition-91 :arg1 (t / take-01 :mode (i / imperative) :arg0 (y / you) :arg1 (a / advantage) :arg2 (i2 / it)) :arg2 (h2 / have-03 :arg0 (c / camera :poss (y2 / you)) :arg1 (s / stick :mod (b / bracket))) :mod (a2 / also))
(a / and :op1 (c / close-10 :arg1 (w / we) :arg2 (p / point :mod (r / return-01 :polarity - :arg1 (w2 / we)))) :op2 (w3 / warn-01 :arg0 (p2 / person :name (n / name :op1 "Poroshenko"))))
(a / and :op1 (e / emblematic :arg1 (c / crisis :arg1-of (f / face-01 :arg0 (w / we))) :degree (v / very)) :op2 (c2 / cause-01 :arg0 (r / racialized :arg1 (s / situation :prep-in (- / -rsb- :poss (p / person :name (n / name :op1 "Ferguson"))))) :arg1 (r2 / racialized :arg1 (s2 / situation))))
(b / block-01 :arg1 (a / access-01 :arg1 (p / parliament)))
(( / ( :( (n / name) :op1 "Georgy" :op2 "Farniyev")
(d / deploy-01 :arg1 (p / person :quant (m / more-than :op1 40000) :arg0-of (h / have-org-role-91 :arg1 (f / force :mod (s / security)) :arg2 (m2 / member))) :arg2 (p2 / protect-01 :arg0 (p3 / person) :arg1 (d2 / district :mod (g / government-organization :arg0-of (g2 / govern-01)))))
(b / be-temporally-at-91 :arg1 (t / this) :arg2 (e / early :op1 (e2 / early :op1 (d / date-entity :decade (N / N-A) :time-of (s / set-up-03 :arg0 (p / person :arg0-of (v / visit-01) :ord (o / ordinal-entity :value 1)) :arg1 (a / air :arg1-of (o2 / open-09)))))))
(m / multi-sentence :snt1 (s / say-01 :arg0 (p / person :name (n / name :op1 "Richard" :op2 "Dimbath") :arg0-of (h / have-rel-role-91 :arg1 (i / i) :arg2 (f / friend))) :arg1 (a / activity-06 :arg0 (c / club)) :time (a2 / after :op1 (d / die-01 :arg1 (p2 / person :arg0-of (h2 / have-rel-role-91 :arg1 (i2 / i) :arg2 (f2 / friend))))) :time (a3 / after :op1 (d2 / die-01 :arg1 (p3 / person :arg0-of (h3 / have-rel-role-91 :arg1 (i3 / i) :arg2 (f3 / friend))))) :time (a4 / after :op1 (d3 / die-01 :arg1 (p4 / person :arg0-of (h4 / have-rel-role-91 :arg1 (i4 / i) :arg2 (f4 / friend)))))) :snt2 (p5 / period :mod (t / think-01 :arg0 (i5 / i) :arg1 (n2 / need-01 :arg1 (t2 / think-01 :arg0 (y / you) :arg1 (t3 / thing :manner-of (p6 / possible-01 :arg1 (p7 / proceeds))))))))
(s / say-01 :arg0 (s2 / study :time (r / recent)) :arg1 (s3 / seem-01 :arg1 (a / and :op1 (g / good :degree (m / more) :domain (b / business :mod (s4 / small) :location (c / city :name (n / name :op1 "Washington")))) :op2 (p / pay-01 :arg1 (t / thing :arg1-of (t2 / tax-01 :arg3 (t3 / thing :arg1-of (t4 / tax-01 :arg3 (t5 / thing :arg1-of (t6 / tax-01 :arg3 (t7 / thing :arg1-of (t8 / tax-01 :arg3 (t9 / tax)) :arg1-of (l / local-02))))))))) :manner (g2 / good :degree (m2 / more)))) :time (m3 / meanwhile))
(h / harping :mode (i / imperative) :arg0 (y / you) :arg1 (c / country :arg0-of (f / force-01 :arg1 (c2 / country) :arg2 (f2 / force :mod (e / essential) :mod (e2 / essential) :poss (c3 / country))) :condition (e3 / event :time (y2 / yesterday))) :condition (e4 / event :topic (e5 / event :mod (a / amr-unknown))) :mod (s / still))
(c / call-02 :arg1 (i / it) :mod (d / difficult))
(m / multi-sentence :snt1 (l / leave-11 :arg0 (i / i) :time (b / before :op1 (r / rush-01 :arg1 (t / terrorist) :arg2 (y / yard))) :time (b2 / before :op1 (r2 / rush-01 :arg1 (t2 / terrorist) :arg2 (y2 / yard)))) :snt2 (c / cause-01 :arg1 (l2 / leave-11 :arg0 (b3 / boy :mod (l3 / little) :poss (i2 / i)) :arg1 (c2 / course :topic (h / horror)) :duration (t3 / temporal-quantity :quant (N / N-A) :unit (d / day)))))
(r / report-01 :arg0 (p / person :name (n / name :op1 "Li")) :arg1 (l / like-02 :arg0 (t / they) :arg1 (r2 / reach-01 :arg0 (t2 / they) :arg1 (p2 / product :arg1-of (g / gross-03) :mod (d / domestic) :mod (m / monetary-quantity :quant 250 :unit (e / euro)) :mod (d2 / domestic))) :time (y / year :mod (n2 / next))))
(p / possible-01 :arg1 (c / come-01 :arg1 (p2 / person :quant (a / all) :arg0-of (h / have-org-role-91 :arg1 (c2 / club :mod (e / each)) :arg2 (m / member))) :arg4 (t / together) :mod (a2 / again) :time (f / future)) :arg1-of (o / opine-01 :arg0 (h2 / he)))
(c / contrast-01 :arg1 (b / budget-01 :arg0 (p / person :name (n / name :op1 "Sylvester" :op2 "Stallone")) :arg1 (r / rate-entity-91 :arg1 (l / less-than :op1 (m / monetary-quantity :quant 90 :unit (d / dollar))) :arg2 (v / volume-quantity :quant (N / N-A) :unit (g / gallon))) :location (c2 / country :name (n2 / name :op1 "US"))) :arg2 (a / and :op1 (r2 / restore-01 :arg0 (p2 / person) :arg1 (m2 / monetary-quantity :quant 30 :unit (d2 / dollar) :arg1-of (i / include-91 :arg2 (b2 / budget :poss (p3 / person)) :arg3 (m3 / monetary-quantity :quant 90 :unit (d3 / dollar)))) :location (c3 / country)) :op2 (b3 / budget-01 :arg0 (p4 / person) :arg1 (m4 / monetary-quantity :quant 90 :unit (d4 / dollar) :mod (o / only) :arg1-of (i2 / include-91 :arg2 (b4 / budget))) :arg2 (m5 / monetary-quantity :quant 90 :unit (d5 / dollar) :mod (o2 / only)))))
(a / and :op1 (p / play-01 :arg0 (o / organization :name (n / name :op1 "TTV" :op2 "Geismar")) :location (v / verbandsliga)) :op2 (p2 / play-02 :arg0 (t / team :ord (o2 / ordinal-entity :value 2) :poss (o3 / organization :name (n2 / name :op1 "Torpedo"))) :arg1 (c / criminal-organization :name (n3 / name :op1 "N-A"))))
(a / and :op1 (a2 / and :op1 (a3 / and :op1 (s / stand-up-07 :arg1 (h / he)) :op2 (h2 / hugged :arg0 (h3 / he) :arg1 (i / i))) :mod (j / just)) :op2 (s2 / say-01 :arg0 (i2 / i) :arg1 (t / think-01 :polarity - :arg0 (i3 / i) :arg1 (h4 / have-03 :arg0 (y / you) :arg1 (d / dear :poss (i4 / i))))) :arg1-of (c / cause-01 :arg0 (w / wheelchair :arg1 (y2 / you) :time (n / now))))
(s / say-01 :arg0 (h / he) :arg1 (c / contrast-01 :arg1 (b / bear-01 :arg0 (n / no-one) :arg1 (g / government-organization :arg0-of (g2 / govern-01)) :arg1-of (c2 / cause-01 :arg0 (u / use-01 :arg0 (n2 / no-one) :arg1 (g3 / government-organization :arg0-of (g4 / govern-01)) :arg2 (g5 / government-organization :arg0-of (g6 / govern-01))))) :arg2 (c3 / claim-01 :arg0 (n3 / no-one) :arg1 (t / take-01 :arg0 (n4 / no-one) :arg1 (g7 / government-organization :arg0-of (g8 / govern-01)) :arg2 (g9 / government-organization :arg0-of (g10 / govern-01)) :arg1-of (c4 / cause-01 :arg0 (a / account :poss (f / force :mod (d / defense) :location (l / location :name (n5 / name :op1 "Lesotho")))))))))
(r / recommend-01 :arg0 (p / person :name (n / name :op1 "David" :op2 "Cameron") :arg0-of (h / head-01 :arg1 (c / company :name (n2 / name :op1 "BP")) :time (f / former)) :arg0-of (h2 / head-01 :arg1 (c2 / company :name (n3 / name :op1 "BP")) :time (f2 / former))) :arg1 (b / become-01 :arg1 (s / she) :arg2 (p2 / person :arg0-of (a / advise-01 :arg2 (o / office :mod (c3 / cabinet)))) :time (l / look-04 :arg0 (p3 / person) :arg1 (b2 / bring-01 :arg0 (p4 / person) :arg1 (e / expertise :arg1-of (p5 / private-03)) :arg2 (o2 / organization :name (n4 / name :op1 "Whitehall"))))))
(r / recognised :arg0 (h / he) :arg1 (p / prickly))
(m / multi-sentence :snt1 (h / have-03 :arg0 (t / they) :arg1 (a / and :op1 (m2 / memory :mod (g / good)) :op2 (m3 / memory :mod (h2 / happy) :poss (r / resort))) :arg1-of (c / cause-01 :arg0 (s / set-up-03 :arg0 (r2 / riders) :arg1 (r3 / road) :mod (a2 / again) :location (o / out :op1 (r4 / road)) :mod (a3 / again)))) :snt2 (r5 / rant-01 :mode (i / imperative) :arg0 (y / you)))
(m / multi-sentence :snt1 (l / let-01 :mode (i / imperative) :arg0 (y / you) :arg1 (n / nip :arg0 (i2 / i) :arg1 (t / this) :time (n2 / now :mod (r / right)))) :snt2 (p / pun :mode (e / expressive) :arg1-of (i3 / intend-01)))
(s / say-01 :arg0 (p / person :arg0-of (h / hack-04)) :arg1 (h2 / have-03 :arg0 (p2 / person :arg0-of (h3 / hack-04)) :arg1 (p3 / photograph-01 :quant 60 :consist-of (a / and :op1 (p4 / person :name (n / name :op1 "Lawrence") :arg0-of (h4 / have-rel-role-91 :arg2 (b / brother))) :op2 (p5 / person :name (n2 / name :op1 "Cara" :op2 "Delevingne") :arg0-of (h5 / have-org-role-91 :arg1 (a2 / and :op1 (p6 / person :name (n3 / name :op1 "Cara" :op2 "Delevingne")) :op2 (p7 / person :name (n4 / name :op1 "Cara" :op2 "Delevingne")) :op3 (p8 / person :name (n5 / name :op1 "Ariana" :op2 "Grande")) :op4 (p9 / person :name (n6 / name :op1 "Ariana" :op2 "Grande")) :op5 (p10 / person :name (n7 / name :op1 "Ariana" :op2 "Grande")) :op6 (p11 / person :name (n8 / name :op1 "Lea" :op2 "Michelle")) :op7 (p12 / person :name (n9 / name :op1 "Kirsten" :op2 "Dunst")))))))))
(k / kill-01 :arg1 (p / person :quant (m / more-than :op1 (1 / 1/2)) :arg1-of (i / include-91 :arg2 (p2 / person :arg0-of (h / have-rel-role-91 :arg1 (t / they) :arg2 (c / child)))) :arg0-of (s / shock-01 :arg1 (w / world)) :arg0-of (s2 / shock-01 :arg1 (w2 / world))))
(p / put-01 :arg0 (c / crisis :location (a / around :op1 (g / globe))) :arg1 (e / economy :mod (g2 / german)) :arg2 (p2 / percentage-entity :value (N / N-A)))
(e / exemplify-01 :arg0 (p / possible-01 :arg1 (a / adjust-01 :arg0 (p2 / person :arg0-of (s / study-01)) :arg1 (' / '' :mod ('2 / '')) :arg3 (a2 / about :op1 (m / monetary-quantity :quant 20 :unit (d / dollar))))) :purpose (e2 / exemplify-01))
(r / report-01 :arg0 (s / separatist) :arg1 (t / take-01 :arg0 (s2 / separatist) :arg1 (c / control-01 :arg1 (a / and :op1 (t2 / town) :op2 (v / village) :quant (s3 / several) :location (r2 / region :location (l / location :name (n / name :op1 "Donezk")))))))
(a / and :op1 (w / worsened :arg0 (c / condition :poss (c2 / company :name (n / name :op1 "Abbott"))) :mod (a2 / again) :time (d / date-entity :month 9 :year 2011)) :op2 (t / take-01 :arg0 (c3 / consultant :poss (c4 / company)) :arg1 (a3 / and :op1 (p / person :arg0-of (h / have-rel-role-91 :arg1 (h2 / he) :arg2 (s / scans))) :op2 (p2 / person :arg0-of (h3 / have-org-role-91 :arg2 (c5 / consultant))))))
(u / understand-01 :arg0 (i / i) :arg1 (p / point :mod (m / make-01 :arg0 (y / you) :arg1 (p2 / point :mod (m2 / make-01 :arg0 (y2 / you) :arg1 (v / voice :mod (q / quiet)))))) :degree (f / full) :arg1-of (c / cause-01 :arg0 (a / and :op1 (f2 / finish-01 :arg0 (s / supervisor :poss (s2 / she) :mod (c2 / certain)) :arg1 (s3 / speak-01 :manner (s4 / speak-01 :arg0 (s5 / she)))) :op2 (s6 / say-01 :arg0 (i2 / i) :arg1 (m3 / more :polarity - :compared-to (h / healed :arg1 (w / we) :arg1-of (e / effective-04) :compared-to (d / deluded :arg0 (w2 / we) :arg1 (w3 / we))))))))
(a / and :op2 (l / like-02 :arg0 (i / i) :arg1 (f / forget-01 :arg0 (i2 / i))))
(s / say-01 :arg0 (p / person :arg0-of (r / research-01)) :arg1 (l / likely-01 :arg1 (c / continue-01 :arg1 (a / and :op1 (t / trend :mod (t2 / tax-01 :arg3 (s2 / sell-01)) :mod (o / overall)) :op2 (r2 / revenue :poss (g / government-organization :arg0-of (g2 / govern-01) :arg1-of (l2 / local-02)))) :time (y / year :mod (t3 / this)) :arg1-of (c2 / compare-01 :arg2 (p2 / product-of :op1 6.2 :op2 2014) :time (d / date-interval :op1 (y2 / year :mod (l3 / last)) :op2 (y3 / year :mod (l4 / last)))))))
(m / multi-sentence :snt1 (h / hope-01 :arg0 (i / i) :arg1 (w / woman :arg0-of (h2 / have-03 :arg1 (t / thing :arg1-of (d / differ-02) :arg1-of (d2 / differ-02))) :arg0-of (c / cause-01 :arg1 (u / understand-01 :arg0 (w2 / woman) :arg1 (d3 / danger :arg1-of (r / resemble-01 :arg2 (t2 / thing :arg1-of (o / opine-01 :location (b / body))))))))) :snt2 (l / lead-01 :arg0 (p / person :name (n / name :op1 "Steinem")) :arg1 (c2 / change-01)))
(c / capitalise :mode (i / interrogative) :arg0 (l / location :name (n / name :op1 "Amazon")) :arg1 (t / this) :manner (a / amr-unknown) :mod (e / exact))
(i / instead-of-91 :arg2 (a / and :op1 (b / become-01 :arg1 (i2 / it) :arg2 (p / platform :beneficiary (p2 / person :arg0-of (b2 / broadcast-01 :arg1 (f / feats :poss (t / they) :mod (i3 / in-game))))) :arg1-of (q / quick-02)) :op2 (y / youtube :arg0 (y2 / youtube :purpose (l / live-01)) :arg1 (g / gaming :arg1 (w / word :mod (b3 / business))))) :arg1-of (i4 / instead-of-91))
(s / starring :arg1 (h / he) :location (c / comedy) :time (s2 / soon))
(s / say-01 :arg0 (p / person :name (n / name :op1 "Gault")) :arg1 (s2 / sure-02 :arg1 (c / check-01 :mode (i / interrogative) :arg0 (b / book) :mod (a / actual))) :time (b2 / before :op1 (o / order-02 :arg0 (p2 / person) :medium (o2 / online))))
(a / and :op1 (w / want-01 :arg0 (i / i) :arg1 (e / everything) :time (s / soon :degree (m / more) :compared-to (l / late :degree (m2 / more) :compared-to (l2 / late :degree (m3 / more))))) :op2 (n / note-01 :arg0 (h / he)))
(a / announce-01 :arg0 (t / thing :arg1-of (s / state-01)) :arg1 (r / remain-01 :arg1 (a2 / army :poss (a3 / army) :arg1-of (b / bind-01 :arg0 (d / duty :poss (a4 / army)))) :arg2 (e / ensure-01 :arg0 (a5 / army) :arg1 (s2 / safe-01 :arg1 (s3 / state)))) :mod (a6 / also))
(b / be-located-at-91 :arg1 (a / and :op1 (p / person :name (n / name :op1 "Güntersen")) :op2 (o / organization :name (n2 / name :op1 "TTC")) :op3 (c / company :name (n3 / name :op1 "N-A") :mod (t / ttv) :mod (t2 / ttv))) :arg2 (p2 / part :part-of (p3 / party)))
(e / easy-05 :polarity - :arg1 (t / that) :time (a / always) :arg1-of (c / cause-01 :arg0 (a2 / and :op1 (p / person :arg0-of (h / have-rel-role-91 :arg1 (p2 / person :name (n / name :op1 "Ellie")) :arg2 (f / father))) :op2 (p3 / person :name (n2 / name :op1 "Tamsin") :arg0-of (h2 / have-rel-role-91 :arg1 (p4 / person) :arg2 (f2 / father))) :li 16)))
(e / economy :mod (g / german) :prep-as (p / percentage-entity :value (N / N-A)))
(p / post-01 :arg0 (i / it) :arg1 (r / revenue :mod (m / monetary-quantity :quant 1.2 :unit (d / dollar))) :arg2 (p2 / percentage-entity :value (N / N-A)) :time (e / early :degree (m2 / more)))
(d / doubt-01 :polarity - :arg1 (c / compete-01 :mod (s / shooting) :arg1-of (l / local-02) :arg1-of (l2 / link-01 :arg2 (c2 / consecration :mod (f / formal) :part-of (f2 / flag :mod (s2 / shooting) :mod (n / new)) :time (d2 / date-entity :month 7 :year 1991)))) :arg1-of (d3 / doubt-01 :polarity - :time (h / history :poss (c3 / club))))
(c / contrast-01 :arg1 (f / feel-01 :arg0 (w / we) :arg1 (h / have-condition-91 :arg1 (w2 / want-01 :arg0 (w3 / we) :arg1 (t / train-01 :arg0 (w4 / we) :arg2 (o / officer :mod (i / intelligence) :location (g / government-organization :name (n / name :op1 "FSB")))) :arg0-of (w5 / want-01 :arg1 (t2 / train-01 :arg0 (w6 / we) :arg2 (o2 / officer :mod (i2 / intelligence) :location (g2 / government-organization :name (n2 / name :op1 "FSB")))))) :arg2 (p / possible-01 :polarity - :arg1 (c2 / cause-01 :arg0 (d / damage-01 :arg1 (h2 / health :poss (p2 / person)) :location (s / siege)))))))
(o / occupy-01 :arg0 (c / center :arg1-of (i / include-91 :arg2 (c2 / campaign-01 :arg0-of (f / favor-01 :arg1 (d / democracy)) :location (c3 / city :name (n / name :op1 "Hong" :op2 "Kong")))) :quant (m / much)) :arg1 (m2 / movement-07 :arg1 (a / and :op1 (l / love-01) :op2 (p / peace))) :arg1-of (c4 / cause-01 :arg0 (t / threaten-01 :arg0 (p2 / person :arg0-of (o2 / organize-01)) :arg1 (s / shut-down-05 :arg0 (p3 / person) :arg1 (d2 / district :mod (f2 / finance))) :condition (g / grant-01 :polarity - :arg0 (c5 / city :name (n2 / name :op1 "Beijing")) :arg1 (s2 / suffrage :mod (u / universal) :mod (a2 / authentic))))))
(a / and :op1 (c / contribute-01 :arg0 (e / exercise :mod (t / this)) :arg2 (s / significant-02) :arg1-of (s2 / significant-02)) :op2 (u / use-01 :arg1 (s3 / service :mod (t2 / this)) :arg2 (s4 / significant-02)) :op3 (u2 / use-01 :arg1 (p / payroll :location (l / level :mod (b / both) :mod (l2 / level :mod (b2 / both)))) :arg0-of (c2 / cause-01 :arg1 (b3 / bring-01 :arg1 (s5 / stop-03 :arg1 (p2 / person :name (n / name :op1 "Anne" :op2 "Waiguru") :arg0-of (h / have-org-role-91 :arg1 (c3 / cabinet) :arg2 (s6 / secretary))) :arg2 (a2 / and :op1 (o / organization :name (n2 / name :op1 "Ministry" :op2 "of" :op3 "Devolution")) :op2 (s7 / secretary :mod (v / vice)))))) :mod (a3 / also)))
(s / say-01 :arg0 (p / person :name (n / name :op1 "Matt" :op2 "Casaday") :arg0-of (h / have-org-role-91 :arg1 (o / organization :name (n2 / name :op1 "Brigham" :op2 "Young" :op3 "University")) :arg2 (s2 / senior :mod (s3 / senior)))) :arg1 (p2 / pay-01 :arg0 (p3 / person) :arg1 (m / monetary-quantity :quant 42 :unit (c / cent)) :arg2 (o2 / organization :name (n3 / name :op1 "Amazon.com")) :purpose (t / thing :arg2-of (c2 / copy-01 :arg1 (t2 / thing :arg2-of (c3 / copy-01 :arg1 (t3 / thing :arg1-of (d / decide-01 :arg0 (m2 / media)) :mod (s4 / strategy) :mod (s5 / strategic))))) :arg1-of (u / use-01))))
(s / succeed-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg2 (p2 / premier))) :arg1 (s2 / succeed-01 :arg0 (p3 / person) :arg1 (n / number :quant-of (p4 / person :arg0-of (v / visit-01)))) :degree (m / more-than))
(m / multi-sentence :snt1 (g / get-05 :arg1 (i / i) :arg2 (s / school) :time (l / late :degree (m2 / more) :li 2004)) :snt2 (s2 / scare-01 :arg1 (i2 / i) :frequency (r / rate-entity-91 :arg3 (t / temporal-quantity :quant (N / N-A) :unit (d / day))) :degree (v / very)))
(s / song :mod (s2 / silly :mod (j / just)) :domain (t / that))
(c / cause-01 :arg0 (l / level :mod (g / ground) :mod (d / dangerous :degree (m / most)) :location (h / hospital)) :arg1 (l2 / likely-01 :polarity - :arg1 (a / affect-01 :arg1 (p / person :arg0-of (h2 / have-rel-role-91 :arg2 (p2 / patient))))))
(a / and :op1 (r / roll :arg1 (r2 / record :mod (c / club)) :frequency (r3 / rate-entity-91 :arg3 (t / temporal-quantity :quant (N / N-A) :unit (y / year)))) :op2 (s / set-up-03 :arg1 (r4 / round :quant 380 :mod (i / innocence)) :arg2 (o / ordinal-entity :value 1)))
(s / say-01 :arg0 (p / person :name (n / name :op1 "Andrew" :op2 "Morgan")) :arg1 (t / threaten-01 :polarity - :arg0 (m / mesothelioma :mod (' / ''))))
(c / comment-01 :polarity - :arg0 (a / and :op1 (p / person :name (n / name :op1 "Palmer")) :op2 (p2 / person :name (n2 / name :op1 "Chuck")) :op3 (p3 / person :name (n3 / name :op1 "Strahovski") :arg0-of (h / have-org-role-91 :arg2 (s / suckers)))) :arg3 (p4 / picture :arg0-of (h2 / hack-04)) :time (y / yesterday))
(p / possible-01 :arg1 (o / option :mod (a / another) :domain (g / get-01 :arg1 (e / e-books :mod (t / traditional)))))
(s / say-01 :arg0 (p / person :arg1-of (e / expert-01 :arg2 (p2 / person :arg0-of (h / have-org-role-91 :arg1 (c / country :name (n / name :op1 "Britain")) :arg2 (p3 / person :arg1-of (e2 / expert-01))) :arg0-of (h2 / have-org-role-91 :arg2 (p4 / professor)))) :arg0-of (h3 / have-org-role-91 :arg2 (p5 / professor))) :arg1 (d / die-01 :arg1 (p6 / person :quant (s2 / some :op1 90000)) :arg1-of (c2 / cause-01 :arg0 (r / recommend-01 :arg1 (p7 / play-11 :arg0 (t / type :mod (a / asbestos) :location (c3 / country)) :arg2 (o / out))))))
(s / say-01 :arg0 (d / doctor :poss (i / i)) :arg1 (g / get-22 :arg0 (y / you) :arg1 (r / radical :domain (y2 / you)) :time (a / and :op1 (b / become-01 :arg1 (i2 / i) :arg2 (v / very :degree (v2 / very))) :op2 (s2 / start-01 :arg0 (i3 / i) :arg1 (g2 / get-01 :arg0 (y3 / you) :arg1 (s3 / symptom :mod (d2 / diabetic)))))))
(r / refuse-01 :arg0 (c / council :mod (t / town)) :arg1 (c2 / comment-01 :arg0 (c3 / council)) :time (m / meanwhile))
(s / say-01 :arg0 (i / it) :arg1 (a / and :op1 (f / fail-01 :arg1 (a2 / anyone :arg1-of (f2 / fail-01 :arg2 (d / do-02 :arg1 (s2 / so)))) :prep-without (p / payroll)) :op2 (e / eliminate-01 :arg1 (a3 / anyone :arg1-of (f3 / fail-01 :arg2 (d2 / do-02 :arg1 (s3 / so)))))))
(a / and :op1 (- / -lrb- :arg0 (p / person :name (n / name :op1 "Torsten" :op2 "Sjöberg")) :arg1 (a2 / and :op1 (-2 / -rrb-) :op2 (p2 / person :arg0-of (h / have-rel-role-91 :arg1 (p3 / person :name (n2 / name :op1 "Herbert" :op2 "Piffl")) :arg2 (f / friend))) :op3 (p4 / person :arg0-of (h2 / have-rel-role-91 :arg1 (p5 / person) :arg2 (f2 / friend))) :op4 (p6 / person :arg0-of (h3 / have-org-role-91 :arg1 (b / board) :arg2 (m / member))) :op5 (p7 / person :arg0-of (h4 / have-org-role-91 :arg1 (b2 / board) :arg2 (m2 / member))) :op6 (p8 / person :arg0-of (h5 / have-org-role-91 :arg1 (b3 / board) :arg2 (m3 / member))) :op6 (p9 / person :arg0-of (h6 / have-org-role-91 :arg1 (b4 / board) :arg2 (m4 / member))) :op7 (p10 / person :arg0-of (h7 / have-org-role-91 :arg1 (b5 / board) :arg2 (m5 / member))))))
(o / obligate-01 :arg1 (f / family) :arg2 (l / leave-11 :arg0 (f2 / family) :arg1 (h / home :poss (f3 / family))) :duration (u / up-to :op1 (t / temporal-quantity :quant (1 / 1/2) :unit (h2 / hour))))
FAILED_TO_PARSE#Couldn't convert to full AMR graph.
(i / issue-01 :arg0 (p / person :name (n / name :op1 "Strasser") :arg0-of (h / have-rel-role-91 :arg2 (f / father))) :arg1 (c / church) :arg2 (r / room :part-of (c2 / church) :mod (n2 / new)) :time (d / date-entity :year 1988 :month 5) :time (a / after :op1 (t / temporal-quantity :quant (N / N-A) :unit (h2 / hour))))
(r / remember-01 :arg0 (i / i) :arg1 (p / person :mod (t / that) :arg0-of (h / have-rel-role-91 :arg1 (i2 / i) :arg2 (k / kid))) :purpose (p2 / play-11 :arg0 (i3 / i) :arg2 (y / yard :arg1-of (g / get-on-21 :polarity - :arg0 (i4 / i) :time (e / ever)))))
(c / contrast-01 :arg1 (s / stepping :arg1 (a / and :op1 (r / reserve :name (n / name :op1 (l / lenglern)) :mod (c2 / country :name (n2 / name :op1 "N-A"))) :op2 (r2 / reserve :name (n3 / name :op1 (t / torpedo)))) :arg2 (v / verbandsliga :mod (n4 / new))) :arg2 (c3 / club :polarity - :mod (a2 / any) :source (l2 / location :name (n5 / name :op1 "Göttingern")) :time (n6 / no-longer)))
(s / sturdy :arg1 (r / rate-01 :arg1 (s2 / she) :mod (p / politics)) :mod (t / too))
(c / cause-01 :arg1 (a / affect-01 :arg0 (p / person :mod (y / young :degree (m / more))) :arg1 (p2 / person :mod (y2 / young :polarity -) :arg1-of (t / typical-02)) :time (n / now)))
(m / multi-sentence :snt1 (f / feel-01 :arg0 (i / i) :arg1 (s / sorry-01 :arg1 (i2 / i) :arg2 (p / person :quant (a / all) :arg0-of (s2 / suffer-01 :source (m2 / metropolis :mod (t / this)))) :degree (s3 / so))) :snt2 (s4 / say-01 :arg0 (i3 / i) :arg1 (p2 / person :name (n / name :op1 "Damir") :arg1-of (s5 / suffer-01 :time (w / week :mod (l / last))) :arg0-of (w2 / work-01 :arg1-of (v / voluntary-02) :time (w3 / week :mod (l2 / last))))))
(c / cancel-01 :arg1 (d / division :mod (r / region) :mod (t / tennis)) :time (b / before :op1 (n / now) :quant (f / few :op1 (t2 / temporal-quantity :quant (N / N-A) :unit (y / year)))) :time (c2 / cancel-01 :arg1 (d2 / division :mod (r2 / region) :mod (t3 / tennis))) :arg1-of (c3 / cause-01 :arg0 (a / attempt-01 :arg1 (s / streamline :arg1 (l / leagues)))))
(n / note-01 :arg0 (p / person :name (n2 / name :op1 "Gloria" :op2 "Steinem") :arg0-of (h / have-org-role-91 :arg1 (f / feminist :mod (w / white)) :arg2 (a / activist))) :arg1 (t / take-01 :arg0 (p2 / person :arg0-of (h2 / have-org-role-91 :arg1 (u / university :name (n3 / name :op1 "N-A") :mod (w2 / white)) :arg2 (a2 / activist))) :arg1 (c / company :name (n4 / name :op1 "Facebook")) :time (w3 / week :quant (N / N-A)) :time (a3 / after :op1 (s / shooting :poss (p3 / person :name (n5 / name :op1 "Michael" :op2 "Brown")) :purpose (p4 / post-01 :arg0 (p5 / person) :arg1 (c2 / column :arg1-of (p6 / point-out-02) :arg0-of (d / demand-01 :arg1 (p7 / protest-01 :arg0 (p8 / person) :arg1 (i / issue-02 :arg0 (r / racism)) :degree (m / more)))))))))
(a / and :op1 (p / possible-01 :arg1 (c / come-up-11 :arg0 (h / he) :arg1 (m / muscle :mod (l / little)) :arg3 (m2 / muscle :mod (l2 / little)))) :op2 (a2 / aid-01 :arg0 (h2 / he) :arg2 (m3 / muscle :mod (l3 / little)) :time (s / since :op1 (p2 / participate-01 :arg0 (h3 / he) :arg1 (a3 / and :op1 (h4 / help-01 :arg0 (p3 / person :arg0-of (h5 / have-rel-role-91 :arg1 (h6 / he) :arg2 (c2 / child))) :arg1 (p4 / person :arg0-of (h7 / have-rel-role-91 :arg1 (h8 / he) :arg2 (c3 / child)))) :op2 (g / give-01 :arg0 (h9 / he) :arg1 (i / insight :arg1-of (v / value-02) :arg1-of (v2 / value-02)) :arg2 (h10 / he)))))))
(r / racing :arg1 (c / company) :arg2 (p / position-01 :arg1 (c2 / company) :arg2 (o / operate-01 :arg1 (c3 / customer :mod (n / new) :mod (t / this))) :mod (c4 / cruise)))
(a / and :op1 (s / start-01 :arg1 (a2 / and :op1 (r / representation) :op2 (p / perform-01) :op3 (p2 / piece :mod (e / exhibit-01)) :op4 (i / information :arg1-of (e2 / exhibit-01)) :op5 (i2 / information))) :op2 (s2 / significant-02 :arg1 (a3 / and)))
(e / emerge-02 :arg0 (p / person :name (n / name :op1 "Henry") :arg0-of (h / have-rel-role-91 :arg1 (p2 / person) :arg2 (a / affection :mod (d / dear)))) :degree (l / less :quant (n2 / none)))
(a / appreciate-02 :arg0 (i / i) :arg1 (g / god :arg1-of (r / return-01 :arg3 (m / me.here :arg1 (h / he) :location (l / location :name (n / name :op1 "Beslan"))))) :degree (s / so))
(e / encourage-01 :arg0 (p / person :name (n / name :op1 "Richter") :arg0-of (h / have-org-role-91 :arg2 (m / mayor))) :arg1 (p2 / person :arg0-of (h2 / have-org-role-91 :arg2 (m2 / mayor))) :arg2 (r / run-02 :arg0 (p3 / person) :arg1 (c / council :arg1-of (l / local-02))) :arg1-of (c2 / cause-01 :arg0 (c3 / candidate :beneficiary (o / organization :name (n2 / name :op1 "CSU") :beneficiary (o2 / organization :name (n3 / name :op1 "CSU") :location (t / thing :quant 1996))))))
(a / and :op1 (s / spotted :arg1 (a2 / and :op1 (m / motor) :op2 (t / thing :arg2-of (c / characteristic-02 :arg1 (t2 / thing :arg2-of (c2 / characteristic-02 :arg1 (r / rider)))))) :time (t3 / then) :location (h / house :location (l / location :name (n / name :op1 "Walcott" :op2 "Way")))))
(b / be-located-at-91 :arg1 (p / piece :mod (s / shrapnel) :quant (s2 / some)) :arg2 (p2 / piece :poss (i / i)) :mod (s3 / still))
(m / multi-sentence :snt1 (s / start-01 :arg1 (t / train-01 :arg2 (' / '')) :mod (u / usual)) :snt2 (e / explain-01 :arg0 (t2 / trainer)))
(b / bring-01 :arg0 (a / and :op1 (p / person :arg0-of (h / have-org-role-91 :arg1 (o / organization :name (n / name :op1 "Hamas")))) :op2 (p2 / person :arg0-of (h2 / have-org-role-91 :arg1 (o2 / organization) :arg3 (l / lead-02 :arg0 (p3 / person)))) :op3 (p4 / person :arg0-of (h3 / have-org-role-91 :arg1 (o3 / organization) :arg3 (l2 / lead-02 :arg0 (p5 / person)))) :op4 (p6 / person :arg0-of (h4 / have-org-role-91 :arg1 (o4 / organization) :arg3 (l3 / lead-02 :arg0 (p7 / person)))) :op5 (p8 / person :arg0-of (h5 / have-org-role-91 :arg1 (o5 / organization) :arg3 (l4 / lead-02 :arg0 (p9 / person)))) :op6 (p10 / person :arg0-of (h6 / have-org-role-91 :arg1 (o6 / organization) :arg3 (l5 / lead-02 :arg0 (p11 / person)))) :op6 (p12 / person :arg0-of (h7 / have-org-role-91 :arg1 (o7 / organization) :arg3 (l6 / lead-02 :arg0 (p13 / person)))) :op6 (p14 / person :arg0-of (h8 / have-org-role-91 :arg1 (o8 / organization) :arg3 (l7 / lead-02 :arg0 (p15 / person)))) :op6 (p16 / person :arg0-of (h9 / have-org-role-91 :arg1 (o9 / organization) :arg3 (l8 / lead-02 :arg0 (p17 / person)))) :op6 (p18 / person :arg0-of (h10 / have-org-role-91 :arg1 (o10 / organization) :arg3 (l9 / lead-02 :arg0 (p19 / person)))) :op6 (p20 / person :arg0-of (h11 / have-org-role-91 :arg1 (o11 / organization) :arg3 (l10 / lead-02 :arg0 (p21 / person)))) :op6 (p22 / person :arg0-of (h12 / have-org-role-91 :arg1 (o12 / organization) :arg3 (l11 / lead-02 :arg0 (p23 / person)))) :op6 (p24 / person :arg0-of (h13 / have-org-role-91 :arg1 (o13 / organization) :arg3 (l12 / lead-02 :arg0 (p25 / person)))) :op7 (p26 / person :arg0-of (h14 / have-org-role-91 :arg1 (o14 / organization) :arg3 (l13 / lead-02 :arg0 (p27 / person))))) :arg1 (e / end-01 :arg1 (f / fight-01)))
(f / fire-01 :polarity - :arg1 (s / shoot-02 :mod (m / military) :time (f2 / former) :location (l / location :name (n / name :op1 "Münsingen"))) :duration (a / almost :op1 (t / temporal-quantity :quant (N / N-A) :unit (y / year) :mod (a2 / almost))))
(i / indicate-01 :arg0 (a / article :source (p / person :name (n / name :op1 "Robbie" :op2 "Collin") :arg0-of (c / criticize-01 :arg1 (f / film :mod (t / telegraph))))) :arg1 (p2 / possible-01 :arg1 (b / blame-01 :arg1 (q / quality :mod (p3 / poor) :poss (f2 / film))) :time (c2 / come-12 :arg1 (m / movie :poss (c3 / child)))))
(c / come-01 :arg1 (r / rule-01) :time (a / after :op1 (s / summer :arg0-of (f / feature-01 :arg1 (a2 / and :op1 (p / protest-01 :mod (l / large :degree (m / most))) :op2 (p2 / protest-01 :quant (m2 / most) :location (c2 / city :name (n / name :op1 "Hong" :op2 "Kong")))) :time (a3 / after :op1 (s2 / summer) :quant (s3 / some :op1 (t / temporal-quantity :quant (N / N-A) :unit (y / year))))))))
FAILED_TO_PARSE#Two concepts in a row.
(o / obligate-01 :arg1 (p / person :arg0-of (o2 / organize-01 :arg1 (e / event))) :arg2 (a / accept-01 :arg0 (p2 / person) :arg1 (c / criticize-01 :arg1 (c2 / company :name (n / name :op1 "Facebook")))) :mod (a2 / also))
(a / attempt-01 :arg0 (p / person :quant (a2 / around :op1 3000)) :arg1 (r / reach-01 :arg0 (p2 / person) :arg1 (r2 / residency :mod (o / official) :poss (p3 / person :name (n / name :op1 "Nawaz" :op2 "Sharif") :arg0-of (h / have-org-role-91 :arg2 (m / minister :mod (p4 / prime)))))) :time (t / time :arg1-of (s / same-01)))
(k / kill-01 :arg1 (a / and :op1 (p / person :quant 66 :arg0-of (h / have-org-role-91 :arg2 (s / soldier))) :op2 (c / civilian :quant 6) :op3 (c2 / civilian :quant 6) :arg2-of (i / include-01 :arg1 (p2 / person :arg0-of (w / work-01 :mod (e / email))))))
(n / need-01 :arg0 (y / you) :arg1 (c / complicit :arg1 (w / woman :mod (w2 / white)) :purpose (j / justify-01 :arg0 (y2 / you) :arg1 (l / lynching))))
(o / optimistic :domain (n / newspaper :name (n2 / name :op1 "La" :op2 "Repubblica")) :arg0-of (c / cause-01 :arg1 (p / possible-01 :arg1 (m / meet-01 :arg0 (a / and :op1 (p2 / person :name (n3 / name :op1 "Mogherini")) :op2 (p3 / person :arg1-of (k / know-02 :arg2 (a2 / ambition :poss (p4 / person))))) :arg1 (t / thing :mod (e / enormous) :mod (e2 / enormous))))))
(t / think-01 :arg0 (i / i) :arg1 (s / so))
(a / and :op1 (p / person :arg0-of (h / have-rel-role-91 :arg1 (i / i) :arg2 (g / girlfriend))) :op2 (p2 / person :arg0-of (h2 / have-rel-role-91 :arg1 (i2 / i) :arg2 (d / dad))) :op3 (p3 / person :arg0-of (h3 / have-rel-role-91 :arg1 (i3 / i) :arg2 (d2 / dad))) :op4 (p4 / person :arg0-of (h4 / have-rel-role-91 :arg1 (i4 / i) :arg2 (d3 / dad))) :op5 (p5 / person :arg0-of (h5 / have-rel-role-91 :arg1 (i5 / i) :arg2 (d4 / dad))) :op6 (p6 / person :arg0-of (h6 / have-rel-role-91 :arg1 (i6 / i) :arg2 (d5 / dad))) :op6 (p7 / person :arg0-of (h7 / have-rel-role-91 :arg1 (i7 / i) :arg2 (d6 / dad))) :op7 (p8 / person :arg0-of (h8 / have-rel-role-91 :arg1 (i8 / i) :arg2 (d7 / dad))) :op7 (s / start-01 :arg0 (p9 / person) :arg1 (s2 / sing-01 :arg0 (p10 / person) :arg1 (p11 / person)) :arg1-of (c / cause-01 :arg0 (w / wash :arg0 (p12 / person) :arg1 (c2 / company :name (n / name :op1 "N-A")) :arg2 (o / off :op1 (h9 / he))))))
(- / -lsb- :quant (m / multiple) :location (a / around :op1 (c / chest :part-of (i / i))))
(m / mean-02 :arg0 (s / society :mod (c / compliant)) :arg1 (c2 / consented :arg0 (s2 / section :mod (e / every) :part-of (i / it)) :arg1 (i2 / infringe-01 :arg1 (s3 / spared :mod (p / providentially))) :arg2 (p2 / principle :poss (g / group))))
(b / boy :arg0-of (s / shock-01 :arg1 (i / image :mod (s2 / shock-01)) :time (a / after :op1 (c / come-01 :arg1 (s3 / siege)))))
(m / money :quant (m2 / more) :arg0-of (c / cause-01 :arg1 (r / receive-01 :arg0 (t / they) :arg1 (w / wage-01 :arg0 (t2 / they) :arg1 (m3 / monetary-quantity :quant 10.25 :unit (e / euro) :mod (m4 / minimum)) :arg2 (s / standard :mod (a / across :op1 (c2 / country :name (n / name :op1 "Germany") :mod (w2 / whole))))))))
(c / contrast-01 :arg1 (h / have-03 :arg0 (h2 / he) :arg1 (s / surgeries :quant (s2 / several))) :arg2 (p / possible-01 :polarity - :arg1 (c2 / coexist-01 :arg1 (h3 / he))))
(f / find-02 :arg0 (a / audit-01 :time (e / early :op1 (y / year :mod (t / this)) :degree (m / more)) :degree (m2 / more)) :arg1 (l / lose-02 :arg1 (m3 / monetary-quantity :quant 700,000 :unit (d / dollar :mod (r / renminbi))) :arg3 (m4 / monetary-quantity :quant 700,000 :unit (d2 / dollar :mod (r2 / renminbi))) :arg3 (m5 / monetary-quantity :quant 700,000 :unit (d3 / dollar :mod (r3 / renminbi)))) :arg1-of (p / pay-01 :arg3 (m6 / monetary-quantity :quant 700,000 :unit (d4 / dollar :mod (r4 / renminbi)) :arg1-of (p2 / pay-01 :arg3 (a2 / and :op1 (p3 / person :arg0-of (w / work-01) :mod (d5 / distance-quantity :quant (N / N-A) :unit (i / inch))) :op2 (p4 / person :arg0-of (w2 / work-01) :mod (o / other) :mod (f2 / finance)))))))
(c / contrast-01 :arg2 (t / thing :arg1-of (r / resemble-01 :arg2 (t2 / thing :arg1-of (k / know-01 :arg0 (i / i))))))
(c / contrast-01 :arg1 (p / possible-01 :arg1 (c2 / count-01 :arg0 (i / i) :arg1 (t / temporal-quantity :quant (N / N-A) :unit (y / year)))) :arg2 (c3 / continue-01 :arg0 (i2 / i) :arg1 (p2 / play-01 :arg0 (i3 / i) :arg1 (h / hand :quant 1))))
(m / multi-sentence :snt1 (c / contrast-01 :arg2 (r / react-01 :arg0 (p / person :arg0-of (h / have-rel-role-91 :arg1 (i / i) :arg2 (b / brother))) :arg1 (a / and :op1 (m2 / man :arg1-of (b2 / black-05)) :op2 (m3 / man :mod (y / young) :mod (h2 / hispanic)))) :time (i2 / initiate-01 :arg0 (g / government-organization :name (n / name :op1 "White" :op2 "House")) :arg1 (p2 / program :mod (s / small)) :time (r2 / recent))) :snt2 (r3 / react-01 :quant (m4 / many) :arg2-of (i3 / include-01 :arg1 (p3 / person :name (n2 / name :op1 "Gloria" :op2 "Steinem")))))
(s / spend-01 :arg0 (h / he) :arg1 (m / monetary-quantity :quant 120 :unit (d / dollar)))
(w / win-01 :mode (i / imperative) :arg0 (y / you) :mod (a / again) :time (y2 / year :mod (t / this)) :condition (g / guess-01 :arg0 (y3 / you) :arg1 (a2 / answer-01 :arg1 (a3 / answer-01 :arg2 (c / correct-02)))))
(m / multi-sentence :snt1 (a / and :op1 (w / welcome-01 :arg1 (a2 / and :op1 (p / person :arg0-of (h / have-rel-role-91 :arg1 (c / child) :arg2 (c2 / child))) :op2 (p2 / person :mod (y / youngsters))) :arg2 (p3 / pop :arg0 (a3 / and)) :time (a4 / always)) :op2 (h2 / have-03 :arg0 (a5 / and) :arg1 (g / go-02 :arg0 (a6 / and) :arg4 (c3 / class :poss (p4 / person :arg0-of (h3 / have-rel-role-91 :arg1 (c4 / child) :arg2 (c5 / child)))))) :time (a7 / always)) :snt2 (p5 / possible-01 :arg1 (c6 / choose-01 :arg0 (t / they) :arg1 (a8 / and :op1 (d / dancing/jazz :poss (c7 / child)) :op2 (c8 / clip :mod (v / video)) :op3 (h4 / hip-hop)))))
(f / fact :domain (a / announce-01 :arg0 (p / person :name (n / name :op1 "Seehofer")) :arg1 (d / discuss-01 :arg0 (p2 / person) :arg1 (t / topic :mod (t2 / this)) :mod (i / important) :mod (a2 / again)) :time (n2 / now)))
(a / and :op1 (l / look-01 :mode (i / imperative) :arg0 (y / you) :arg1 (w / wrapped :arg1 (s / service :mod (v / video) :poss (c / company :name (n / name :op1 "Google")))) :time (b / before :op1 (n2 / now) :quant (t / temporal-quantity :quant (N / N-A) :unit (m / month)))) :op2 (l2 / look-01 :arg0 (s2 / sell-01) :arg1 (w2 / wrapped :quant (a2 / all))) :op3 (s3 / seem-01 :arg1 (n3 / natural-03 :arg1 (s4 / sell-01))))
(a / ask-02 :arg0 (s / source) :arg1 (i / identify-01 :polarity - :arg1 (s2 / source)) :arg1-of (c / cause-01 :arg0 (p / public-02 :polarity - :arg1 (n / negotiate-01))))
(f / follow-01 :arg1 (t / thing :arg1-of (p / precede-01 :arg2 (a / account :poss (p2 / person :name (n / name :op1 "Perry"))))) :arg2 (a2 / account :poss (p3 / person) :arg0-of (d / disavow :arg1 (p4 / post))) :time (l / late :degree (m / more)))
(h / have-03 :arg0 (w / woman :quant 25 :mod (f / festival)) :arg1 (w2 / woman :quant 25 :location (d / dirndls :poss (w3 / woman))) :mod (p / particular))
(o / or :op1 (p / played :arg1 (o2 / one :arg1-of (g / grown :degree (m / more))) :location (t / table :mod (f / football))) :op2 (p2 / participate-01 :arg0 (o3 / one) :arg1 (w / workshop :arg1-of (o4 / organize-01 :arg0 (p3 / person :name (n / name :op1 "Salzwedel"))))))
(c / contrast-01 :arg1 (c2 / change-01 :arg0 (t / tragedy :mod (t2 / this)) :arg1 (l / life :poss (i / i))) :arg2 (s / say-01 :arg0 (s2 / she) :arg1 (c3 / contrast-01 :arg1 (c4 / change-01 :arg0 (t3 / tragedy :mod (t4 / this)) :arg1 (l2 / life :poss (i2 / i)) :arg1-of (s3 / sure-02)))))
(m / multi-sentence :snt1 (l / lashed :arg0 (p / person :name (n / name :op1 "Seth" :op2 "Rogen")) :arg1 (p2 / person :arg0-of (h / hack-04)) :location (o / out :op1 (p3 / person :arg0-of (h2 / hack-04)))) :snt2 (d / differ-02 :polarity - :arg1 (p4 / post-01 :arg1 (p5 / post-01 :arg1 (p6 / phone :mod (c / cell)) :source (p7 / phone :mod (c2 / cell)))) :degree (r / really)))
(h / harping :mode (i / imperative) :arg0 (y / you) :arg1 (c / country :arg0-of (f / force-01 :arg1 (c2 / country) :arg2 (f2 / force :mod (e / essential) :mod (e2 / essential) :poss (c3 / country))) :condition (e3 / event :time (y2 / yesterday))) :condition (e4 / event :topic (e5 / event :mod (a / amr-unknown))) :mod (s / still))
(c / consensus :arg0-of (a / analyze-01 :arg1 (m / monetary-quantity :quant (4 / 450m) :unit (d / dollar :mod (r / renminbi)))) :domain (c2 / consensus))
(s / set-02 :arg0 (p / person :name (n / name :op1 "Charles" :op2 "Macnair") :arg0-of (h / have-org-role-91 :arg2 (s2 / sheriff))) :arg1 (d / date :mod (t / try-02)) :time (d2 / date-entity :season (N / N-A)))
(d / drop-01 :arg1 (t / temperature) :arg4 (u / under :op1 (p / product-of :op1 15.8 :op2 (p2 / product-of :op1 15.8 :op2 15.8) :mod (j / just))) :time (a / after :op1 (d2 / deliver-01 :arg0 (t2 / temperature) :arg1 (d3 / dose-01 :arg2 (s / spring) :mod (e / early)) :time (w / week :mod (l / last)))))
(c / capitalise :mode (i / interrogative) :arg0 (l / location :name (n / name :op1 "Amazon")) :arg1 (t / this) :manner (a / amr-unknown) :mod (e / exact))
(m / multi-sentence :snt1 (s / see-01 :arg0 (w / we) :arg1 (o / other :mod (e / each)) :arg1-of (c / cause-01 :arg0 (s2 / see-01 :arg0 (w2 / we) :arg1 (o2 / other :mod (e2 / each)) :arg1-of (h / hope-01) :time (o3 / or :op1 (d / date-entity :month 8 :day 30) :op2 (d2 / date-entity :time (w3 / weekend :mod (e3 / either))))))) :snt2 (a / and :op1 (r / return-01 :arg1 (t / they) :arg4 (l / location :name (n / name :op1 "Münsterland"))) :op2 (p / plan-01 :arg0 (p2 / person :arg0-of (o4 / organize-01)) :arg1 (r2 / repeat-01 :arg0 (p3 / person)))))
(f / fraught :arg1 (n / negotiate-01 :arg0 (c / company :name (n2 / name :op1 "BBC")) :arg1 (f2 / fee :mod (l / licence)) :mod (i / imminent)) :arg2 (e / endanger-01 :arg1 (f3 / fee :mod (l2 / licence)) :manner (a / and :op1 (c2 / close :degree (m / more :mod (e2 / ever))) :op2 (t / thing :mod (t2 / technology) :mod (n3 / new) :mod (t3 / technology)))))
(t / think-01 :arg0 (h / he) :arg1 (t2 / think-01 :arg0 (h2 / he) :arg1 (t3 / thing :arg1-of (d / do-02 :arg0 (y / you) :time (n / next))) :arg1-of (c / cause-01 :arg0 (f / feel-01 :arg0 (a / and :op1 (s / series :name (n2 / name :op1 (d2 / documentaries))) :op2 (s2 / series :name (n3 / name :op1 (d3 / documentaries) :op2 (s3 / series) :op3 (s4 / series)))) :arg1 (t4 / thing :arg1-of (d4 / do-02 :arg0 (y2 / you) :time (n4 / next))))) :arg1-of (c2 / cause-01 :arg0 (f2 / feel-01 :arg0 (a2 / and :op1 (s5 / series :name (n5 / name :op1 (m / marking)) :poss (h3 / he)) :op2 (s6 / series :mod (t5 / tv) :poss (h4 / he))) :arg1 (t6 / thing :arg1-of (d5 / do-02 :arg0 (y3 / you) :time (n6 / next)))))))
(r / realize-01 :arg0 (p / person :arg0-of (o / oppress-01 :arg1 (f / festival))) :arg1 (h / hunger-01 :arg0 (p2 / person) :mod (b / brass)))
(a / and :op2 (h / hand :part-of (h2 / he)) :time (t / then))
(a / and :op1 (s / struck :arg0 (p / person :name (n / name :op1 "Stewart")) :arg1 (r / rate-entity-91 :arg1 3 :arg2 (t / temporal-quantity :quant (N / N-A) :unit (y / year))) :time (a2 / after :op1 (s2 / strike-01 :arg0 (p2 / person) :arg1 (c / car :poss (p3 / person)))) :time (a3 / after :op1 (s3 / strike-01 :arg0 (p4 / person) :arg1 (c2 / car :poss (p5 / person))))) :op2 (k / kill-01 :arg0 (p6 / person) :arg1 (p7 / person :mod (f / fellow) :arg0-of (d / drive-01)) :location (r2 / race :mod (d2 / dirt-track) :location (c3 / city :name (n2 / name :op1 "New" :op2 "York") :location (p8 / province :name (n3 / name :op1 "N-A"))))))
(l / leave-14 :mode (i / imperative) :arg0 (y / you) :arg1 (p / person :arg0-of (h / have-rel-role-91 :arg1 (y2 / you) :arg2 (s / sister))) :mod (a / alone))
(c / charge-05 :arg0 (o / organization :name (n / name :op1 "Karratha" :op2 "Police")) :arg1 (m / man :mod (2 / 20-year-old)) :arg2 (f / fail-01 :arg1 (m2 / man) :arg2 (a / and :op1 (s / stop-01 :arg1 (m3 / man)) :op2 (d / drive-01 :arg0 (m4 / man)))))
(e / end-01 :arg1 (r / return-01 :arg1 (p / person :name (n / name :op1 "Tony" :op2 "Stewart")) :arg4 (t / track)) :mod (o / only) :manner (h / halfway :arg0 (p2 / person) :arg1 (r2 / race-02 :arg0 (p3 / person)) :location (p4 / peninsula :name (n2 / name :op1 "N-A"))))
(a / and :op1 (d / deliver-01 :arg0 (p / person :name (n / name :op1 "Henry")) :arg1 (l / line :quant 20) :arg3 (d2 / documentary) :mod (l2 / last)) :op2 (l3 / live-01 :arg0 (h / he)))
(a / and :op1 (a2 / arrive-01 :arg1 (p / person :quant 2011 :arg1-of (i / include-91 :arg2 (p2 / person :arg0-of (h / have-rel-role-91 :arg1 (c / company :name (n / name :op1 "Abbott")) :arg2 (p3 / patient))))) :arg4 (s / surgery-01 :arg1 (p4 / person) :arg2 (s2 / symptoms :arg0 (p5 / person) :arg1 (s3 / symptom :arg1-of (r / resemble-01)) :arg2 (p6 / person)))) :op2 (p7 / push-01 :arg1 (p8 / person) :arg2 (m / mesothelioma) :time (s4 / subsequent)) :li 2011)
(a / and :op2 (a2 / announce-01 :arg0 (a3 / anyone :arg0-of (e / exemplify-01) :arg0-of (e2 / exemplify-01)) :arg1 (i / interest-01 :polarity - :arg1 (t / they) :arg2 (t2 / tvs :arg1 (t3 / they))) :mod (m / mere)))
(p / play-02 :arg0 (m / military) :arg1 (a / and :op1 (r / role :mod (i / important) :location (c / country :name (n / name :op1 "Pakistan"))) :op2 (t / take-01 :arg0 (m2 / military) :arg1 (p2 / power) :manner (f / force-04) :time (b / before :op1 (n2 / now) :quant (s / several :op1 (t2 / temporal-quantity :quant (N / N-A) :unit (t3 / time)))))))
(a / and :op1 (f / fall-01 :arg1 (r / rain-01) :arg4 (9 / 9pm :arg1 (r2 / rain-01)) :degree (f2 / further) :time (e / evening :time (e2 / evening))) :op2 (f3 / follow-02 :arg1 (p / pupil :quant 6.6 :arg1-of (f4 / fall-01 :arg4 (s / sunday) :time (o / overnight)))))
(a / and :op1 (c / contribute-01 :arg0 (e / exercise :mod (t / this)) :arg2 (s / significant-02) :arg1-of (s2 / significant-02)) :op2 (u / use-01 :arg1 (s3 / service :mod (t2 / this)) :arg2 (s4 / significant-02)) :op3 (u2 / use-01 :arg1 (p / payroll :location (l / level :mod (b / both) :mod (l2 / level :mod (b2 / both)))) :arg0-of (c2 / cause-01 :arg1 (b3 / bring-01 :arg1 (s5 / stop-03 :arg1 (p2 / person :name (n / name :op1 "Anne" :op2 "Waiguru") :arg0-of (h / have-org-role-91 :arg1 (c3 / cabinet) :arg2 (s6 / secretary))) :arg2 (a2 / and :op1 (o / organization :name (n2 / name :op1 "Ministry" :op2 "of" :op3 "Devolution")) :op2 (s7 / secretary :mod (v / vice)))))) :mod (a3 / also)))
(a / and :op2 (c / clear-06 :arg1 (d / deal-01 :arg0 (w / we) :arg2 (r / regime :mod (a2 / authoritarian)))))
(a / and :op2 (k / know-01 :arg0 (p / person :arg0-of (c / claim-01 :arg1 (c2 / claim-01))) :arg1 (h / have-03 :arg0 (p2 / person) :arg1 (t / time) :location (s / side :poss (p3 / person)) :arg1-of (c3 / cause-01 :arg0 (d / do-02 :polarity - :arg0 (p4 / person) :mod (c4 / certain))))))
(g / go-08 :arg1 (c / cruise :mod (n / norwegian)) :arg2 (p / public) :time (d / date-entity :month 1 :year 2013))
(p / possible-01 :arg1 (s / save-02 :arg0 (y / you) :arg1 (r / rate-entity-91 :arg1 (m / more-than :op1 (m2 / monetary-quantity :quant (N / N-A) :unit (p2 / pound))) :arg2 (t / temporal-quantity :quant (N2 / N-A) :unit (y2 / year))) :arg3 (m3 / monetary-quantity :arg2-of (c / cost-01 :arg1 (b / buy-01 :arg1 (b2 / book))))))
FAILED_TO_PARSE#Number of opening and closing brackets doesn't match.
(a / and :op1 (f / fall-01 :arg1 (r / rain-01) :arg4 (9 / 9pm :arg1 (r2 / rain-01)) :degree (f2 / further) :time (e / evening :time (e2 / evening))) :op2 (f3 / follow-02 :arg1 (p / pupil :quant 6.6 :arg1-of (f4 / fall-01 :arg4 (s / sunday) :time (o / overnight)))))
(a / and :op1 (s / seize-01 :arg1 (m / motor)) :op2 (i / impounded :arg1 (m2 / motor) :duration (t / temporal-quantity :quant (N / N-A) :unit (m3 / month))))
(s / say-01 :arg0 (p / person :name (n / name :op1 "Thomas" :op2 "Schrammel") :arg0-of (h / have-org-role-91 :arg2 (d / defender))) :arg1 (w / want-01 :arg0 (w2 / we) :arg1 (s2 / show-01 :arg0 (w3 / we) :arg1 (r / react-01 :mod (p2 / positive)))) :arg1-of (s3 / say-01 :arg0 (d2 / defender)) :arg1-of (c / cause-01 :arg0 (s4 / set-up-03 :arg0 (a / and :op1 (t / thing :arg1-of (m / magnificent)) :op2 (c2 / corner :mod (s5 / skillful))) :arg1 (t2 / they) :mod (o / of-course))))
(a / and :op1 (e / expose-01 :arg1 (c / cause :arg0-of (b / build-01 :arg1 (m / material :name (n / name :op1 (f / fibrous))))) :arg2 (a2 / asbestos) :mod (e2 / every :mod (a3 / almost))) :op2 (c2 / contrast-01 :arg1 (' / '' :arg1 (c3 / cause-01)) :arg2 (k / know-01 :arg1 (e3 / endanger-01 :arg1 (m2 / material :mod (m3 / mortally)) :time (n2 / now)))) :mod (e4 / every :mod (a4 / almost)))
(p / promise-01 :arg0 (c / city :name (n / name :op1 "Beijing")) :arg2 (t / this))
(m / multi-sentence :snt1 (c / concern-01 :arg0 (t / that)) :snt2 (f / find-02 :arg0 (w / we) :arg1 (m2 / mistake-02 :arg0 (w2 / we) :arg1 (m3 / mistake-02 :arg0 (w3 / we) :arg1-of (l / lead-03 :arg2 (e / event :mod (a / amr-unknown)) :condition (e2 / event :location (p / place :ord (o / ordinal-entity :value 1)))))) :condition (f2 / forewarned :polarity - :domain (w4 / we))))
(a / and :op1 (r / resemble-01 :arg1 (p / project :arg1-of (r2 / resemble-01)) :arg2 (p2 / project :location (a2 / and :op1 (c / country :name (n / name :op1 "Austria")) :op2 (c2 / country :name (n2 / name :op1 "France"))))) :op2 (s / show-01 :arg0 (p3 / project) :arg1 (t / task :polarity - :arg1-of (e / easy-05) :domain (i / idea))))
(s / suggest-01 :arg0 (s2 / she) :arg1 (a / and :op1 (f / fly-in :degree (m / more)) :op2 (s3 / service :mod (f2 / fly-out))) :arg2 (a2 / allow-01 :arg0 (s4 / service) :arg1 (t / treat-01 :arg0 (p / person :arg0-of (s5 / specialize-01)) :arg1 (p2 / person :arg0-of (s6 / specialize-01)) :arg2 (a3 / and :op1 (h / home) :op2 (p3 / program)) :purpose (s7 / support-01 :arg0 (p4 / person) :arg1 (p5 / person :arg0-of (t2 / treat-03 :arg1 (p6 / person) :arg2 (c / community :poss (p7 / person)))) :arg1-of (c2 / cause-01 :arg0 (p8 / possible-01 :arg1 (h2 / help-01 :arg0 (c3 / community :poss (p9 / person)))))))) :concession (i / improve-01 :arg1 (s8 / service :mod (t3 / tele-medicine)) :purpose (l / lessened :arg0 (s9 / service) :arg1 (t4 / tyranny :mod (d / distance-01)))))
(s / say-01 :arg0 (t / thing :arg1-of (a / ally-01 :arg2 (c / country :name (n / name :op1 "France")))) :arg1 (r / recommend-01 :arg1 (a2 / and :op1 (s2 / shut-down-05 :arg0 (p / person :mod (c2 / country :name (n2 / name :op1 "France"))) :arg1 (a3 / and :op1 (u / up) :op2 (c3 / country :mod (s3 / sort)))) :op2 (o / out :arg0 (c4 / country) :mod (s4 / sort)))))
(c / contrast-01 :arg2 (a / and :op1 (c2 / continue-01 :arg0 (p / person :name (n / name :op1 "Petershausen")) :arg1 (g / grow-01 :arg1 (p2 / person))) :op2 (p3 / possible-01 :arg1 (m / move-01 :arg0 (p4 / person) :arg2 (b / building :mod (p5 / present-day) :arg1-of (e / extend-01 :time (s / since) :time (a2 / after :op1 (t / take-01 :arg0 (p6 / person :name (n2 / name :op1 "Richter")) :arg1 (r / retire-01 :arg0 (p7 / person))))))))))
(a / and :op2 (e / express-01 :arg1 (m / musically :arg1 (j / jazz))))
(f / face-01 :arg0 (t / trust-01) :arg1 (c / contrast-01 :arg1 (f2 / face-01 :arg0 (t2 / trust-01) :arg1 (d / direction :quant 2)) :arg2 (o / outwards :arg0 (t3 / trust-01) :arg1 (v / voice :poss (a / and :op1 (v2 / voice :poss (p / public)) :op2 (d2 / disquiet)) :time (g / go-06 :arg1 (t4 / thing) :arg2 (a2 / awry))) :mod (a3 / also))) :location (d3 / direction :quant 2))
(r / recommend-01 :arg1 (b / be-located-at-91 :arg1 (c / chairperson :mod (n / new)) :arg2 (l / location :name (n2 / name :op1 "Wolfratshausen"))))
(a / and :op1 (b / buy-01 :arg0 (p / person :name (n / name :op1 "Richter")) :arg1 (m / multivitamin :mod (a2 / award :name (n2 / name :op1 "N-A")) :quant (m2 / multiple :op1 2))) :op2 (l / let-01 :arg0 (p2 / person) :arg1 (f / fight-01 :arg0 (p3 / person) :arg1 (i / it) :arg2 (o / out)) :time (t / then)) :op3 (h / have-condition-91 :arg1 (f2 / fight-01 :arg0 (p4 / person) :arg1 (i2 / it)) :arg2 (p5 / produce-01 :arg0 (t2 / this) :arg1 (b2 / black-eye) :frequency (o2 / occasional))))
(r / realize-01 :arg0 (p / person :arg0-of (o / oppress-01 :arg1 (f / festival))) :arg1 (h / hunger-01 :arg0 (p2 / person) :mod (b / brass)))
(c / contrast-01 :arg2 (s / say-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (c2 / company) :arg2 (s2 / spokeswoman))) :arg1 (a / and :op1 (s3 / stand-up-07 :arg1 (p2 / photo) :prep-in (e / error)) :op2 (r / remove-01 :arg1 (p3 / photo) :time (s4 / since)))))
(r / rise-01 :arg1 (p / profit-01 :arg0 (p2 / person :mod (u / ultra))) :arg2 (r2 / rate-entity-91 :arg1 40 :arg2 (t / temporal-quantity :quant (N / N-A) :unit (y / year))) :arg4 (r3 / rate-entity-91 :arg1 (m / monetary-quantity :quant (3 / 380m) :unit (p3 / pound)) :arg2 (t2 / temporal-quantity :quant (N2 / N-A) :unit (y2 / year))) :arg4 (r4 / rate-entity-91 :arg1 (m2 / monetary-quantity :quant (32 / 380m) :unit (p4 / pound)) :arg2 (t3 / temporal-quantity :quant (N3 / N-A) :unit (y3 / year))) :arg4 (r5 / rate-entity-91 :arg1 (m3 / monetary-quantity :quant (33 / 380m) :unit (p5 / pound)) :arg2 (t4 / temporal-quantity :quant (N4 / N-A) :unit (y4 / year))))
(u / untenable :domain (t / this) :mod (a / almost) :arg0-of (c / call-03 :arg1 (r / reform-01 :arg1 (r2 / root-and-branch :arg1-of (c2 / complete-02)))))
(a / and :op1 (t / think-01 :arg0 (i / i) :arg1 (b / be-located-at-91 :arg1 (i2 / i) :arg2 (u / under :op1 (v / value-interval :op1 18 :op2 25)))) :op2 (l / lose-02 :arg0 (i3 / i) :arg1 (c / capable-01 :arg1 (i4 / i) :quant (a2 / all)) :manner (g / gradual)))
(d / demand-01 :arg0 (p / person :name (n / name :op1 "Seehofer")) :arg1 (s / sympathize-01 :arg0 (p2 / person) :arg1 (c / criticize-01 :arg1 (p3 / person :arg0-of (h / have-org-role-91 :arg1 (o / organization :name (n2 / name :op1 "CDU")) :arg2 (m / member))))))
(h / have-03 :arg0 (s / state :name (n / name :op1 "Virginia")) :arg1 (t / thing :arg1-of (t2 / tax-01 :arg3 (i / income :poss (c / corporation)) :arg1-of (l / low-04 :degree (m / more))) :arg1-of (i2 / include-91 :arg2 (t3 / thing :quant 3 :arg0-of (h2 / have-03 :arg1 (r / rate :mod (c2 / corporation :mod (f / flat))) :arg3 (p / percentage-entity :value (N / N-A)))))))
(h / have-concession-91 :arg2 (e / eye :part-of (h2 / he) :mod (k / kind)))
(a / and :op1 (d / develop-01 :mod (g / good) :domain (t / that)) :op2 (l / lead-03 :arg0 (t2 / trend :mod (t3 / this)) :arg2 (t4 / think-01 :arg0 (i / i) :arg1 (r / recommend-01 :arg1 (a2 / and :op1 (f / fight-01 :arg0 (w / we) :arg1 (o / organization :name (n / name :op1 "NPD")) :arg2 (b / box :mod (b2 / ballot))) :op2 (b3 / be-located-at-91 :polarity - :arg1 (c / court :mod (c2 / constitution)) :arg2 (c3 / court :mod (c4 / constitution))))))) :li 1)
(c / contrast-01 :arg1 (i / include-91 :arg1 (p / percentage-entity :value (N / N-A) :arg3-of (i2 / include-91 :arg2 (r / revenue :poss (d / district) :mod (t / tax-01)))) :arg2 (p2 / percentage-entity :value (N2 / N-A))) :arg2 (c2 / come-01 :arg1 (r2 / revenue :poss (s / state :name (n / name :op1 "Maryland"))) :arg3 (f / firm)))
(w / work-01 :arg0 (s / she) :arg2 (c / chain) :duration (t / temporal-quantity :quant (N / N-A) :unit (y / year)) :location (s2 / site :quant 1978 :arg1-of (i / include-91 :arg2 (s3 / store :quant 2 :location (s4 / site :quant 2 :arg1-of (i2 / include-91 :arg2 (s5 / store :quant 2 :location (s6 / store :name (n / name :op1 (f / flagship)) :location (l / location :name (n2 / name :op1 "Oxford" :op2 "Street"))))))))))
(a / and :op1 (d / devote-01 :arg0 (h / he) :arg1 (c / career :poss (h2 / he)) :arg2 (s / sparing :arg0 (h3 / he) :arg1 (a2 / agonies :consist-of (i / illness)))) :op2 (t / torments :arg1 (t2 / torments :mod (t3 / treat-03))))
(s / set-02 :mode (i / imperative) :arg0 (y / you) :arg1 (c / camera :poss (y2 / you)) :purpose (m / match-01 :arg0 (y3 / you) :arg1 (o / or :op1 (p / photograph-01) :op2 (v / video) :mod (t / type)) :arg2 (y4 / you)) :mod (a / also))
FAILED_TO_PARSE#Two concepts in a row.
(a / and :op1 (h / have-concession-91 :arg1 (h2 / have-03 :arg0 (p / person :arg0-of (h3 / have-rel-role-91 :arg1 (p2 / person :name (n / name :op1 "Richard" :op2 "Dimbath")) :arg2 (f / friend))) :arg1 (e / eye :part-of (p3 / person)) :location (f2 / forest :location (f3 / forest :location (m / mountain)))) :arg2 (h4 / have-03 :arg0 (p4 / person) :arg1 (e2 / eye :part-of (p5 / person)) :time (u / until :op1 (e3 / end-01 :arg1 (b / bitter))))) :op2 (w / want-01 :arg0 (p6 / person) :arg1 (a2 / and :op1 (d / develop-02 :arg1 (p7 / person)) :op2 (b2 / bring-01 :arg0 (p8 / person) :arg1 (r / refer-01 :arg1 (p9 / person)) :arg2 (l / life) :location (p10 / place :mod (o / original) :poss (p11 / person))))))
(a / and :op1 (s / see-01 :arg0 (p / person :quant 2001) :arg1 (t / take-01 :arg0 (p2 / person) :arg1 (o / office :arg1-of (h / high-02)) :arg2 (c / council :poss (d / democrat :mod (l / left) :mod (l2 / left))))) :op2 (b / become-01 :arg1 (p3 / person) :arg2 (h2 / head :part-of (p4 / person)) :time (t2 / then)))
(a / and :op1 (w / work-01 :arg0 (h / he) :arg1 (s / system :consist-of (s2 / subsidize-01 :arg1 (b / book :source (u / url-entity :value (u2 / upperclassmen)))))) :op2 (o / offer-01 :arg0 (h2 / he) :arg1 (c / compensate-01 :arg2 (b2 / bench)) :purpose (d / delay-01 :arg0 (h3 / he) :arg1 (s3 / sell-01 :arg0 (h4 / he) :arg1 (t / they) :arg2 (t2 / they)))))
(f / feel-01 :arg0 (c / company :name (n / name :op1 "Abbott")) :arg1 (e / empowered))
(a / and :op1 (p / person :name (n / name :op1 "Petro" :op2 "Poroschenko") :arg0-of (h / have-org-role-91 :arg1 (c / country :name (n2 / name :op1 "N-A")) :arg2 (p2 / president))) :op2 (p3 / person :arg0-of (h2 / have-org-role-91 :arg1 (c2 / country :name (n3 / name :op1 "N-A")) :arg2 (p4 / president))) :arg1-of (c3 / cause-01 :arg0 (a2 / and :op1 (s / suffer-01 :arg0 (d / defeat :mod (h3 / heavy) :arg1-of (s2 / suffer-01 :arg0 (a3 / army :poss (p5 / person)))) :arg1 (d2 / defeats :mod (h4 / heavy)) :arg1-of (p6 / personal-02)) :op2 (a4 / announce-01 :arg0 (p7 / person) :arg1 (c4 / change-01 :arg0 (a5 / army) :arg1 (l / leadership :mod (s3 / senior) :poss (a6 / army)) :manner (g / go-02 :polarity - :arg0 (a7 / army)))))))
(a / and :op1 (s / schedule-01 :arg1 (n / negotiate-01) :arg2 (t / take-01 :arg1 (n2 / negotiate-01) :mod (n3 / next))) :op2 (s2 / say-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (o / organization :name (n4 / name :op1 "Energy")) :arg2 (m / minister))) :arg1 (p2 / person :name (n5 / name :op1 "Alexander" :op2 "Nowak") :arg0-of (h2 / have-org-role-91 :arg1 (o2 / organization) :arg2 (m2 / minister)))) :medium (m3 / monday))
(m / multi-sentence :snt1 (b / be-temporally-at-91 :arg1 (a / after :op1 (m2 / multiple :op1 (t / temporal-quantity :quant (N / N-A) :unit (m3 / month)))) :arg2 (t2 / temporal-quantity :quant (N2 / N-A) :unit (m4 / month)) :time (a2 / after :op1 (m5 / multiple :op1 (t3 / temporal-quantity :quant (N3 / N-A) :unit (m6 / month))))) :snt2 (s / share-01 :arg0 (p / person :name (n / name :op1 "Manfred" :op2 "Richter")) :arg1 (p2 / person :quant 15 :mod (f / fellow) :arg0-of (s2 / study-01))))
(c / contrast-01 :arg1 (d / decide-01 :arg1 (m / make-01 :arg1 (i / it)) :arg1-of (e / easy-05 :polarity -)) :arg2 (t / think-01 :arg0 (i2 / i) :arg1 (i3 / it) :duration (m2 / multiple :op1 (t2 / temporal-quantity :quant (N / N-A) :unit (m3 / month)))))
(c / contrast-01 :arg2 (a / and :op1 (f / finish-07 :arg0 (p / person :name (n / name :op1 "Richter")) :ord (o / ordinal-entity :value 6)) :op2 (j / join-01 :arg0 (p2 / person) :arg1 (o2 / organization :name (n2 / name :op1 "CSU")))))
(s / say-01 :arg0 (m / military :location (l / location :name (n / name :op1 "Lesotho"))))
(a / and :op1 (i / irritation :arg0 (a2 / asbestos) :arg1 (p / pleura)) :op2 (p2 / possible-01 :arg1 (c / cause-01 :arg0 (f / fibres) :arg1 (m / mutation :arg1 (c2 / cell)))))
(a / anniversary :poss (t / they) :ord (o / ordinal-entity :value 50))
(k / knocked :arg0 (p / person :name (n / name :op1 "Gordon" :op2 "Stewart")) :arg1 (g / girl :location (p2 / peninsula :name (n2 / name :op1 "N-A"))) :arg1-of (a / allege-01))
(s / say-01 :arg0 (h / he) :arg1 (c / cause-01 :arg0 (a / and :op1 (o / occupy-01 :arg1 (b / building :poss (w / we)) :arg1-of (n / normal-02)) :op2 (w2 / weathering :arg1 (b2 / building :poss (w3 / we))) :arg1-of (n2 / normal-02)) :arg1 (t / that)))
(a / and :op2 (h / hospital :polarity - :mod (j / just) :domain (i / it)))
(g / go-02 :arg0 (i / i) :arg4 (g2 / gym) :time (a / always) :purpose (r / recall-02 :arg0 (i2 / i) :arg1 (r2 / remain-01 :arg1 (p / person :arg0-of (r3 / remain-01 :arg1 (p2 / person) :arg4 (t / there))))))
(t / think-01 :arg0 (p / person :name (n / name :op1 "Maximilian" :op2 "Karner")) :arg1 (c / contrast-01 :arg1 (s / start-01 :arg0 (p2 / person) :arg1 (o / off :arg1-of (b / bad-05))) :arg2 (a / and :op1 (f / find-01 :arg0 (w / we) :arg1 (f2 / foot :part-of (w2 / we))) :op2 (s2 / score-01 :arg1 (w3 / we) :arg2 (g / goal) :mod (e / even)) :time (t2 / then))))
(w / warn-01 :arg0 (p / person :arg0-of (d / develop-02 :arg1 (p2 / property)) :mod (p3 / prominent :degree (m / most)) :location (c / city :name (n / name :op1 "London"))) :arg1 (' / '' :arg0 (m2 / market :arg0-of (h / house-01) :location (s / southeast :part-of (c2 / country :name (n2 / name :op1 "England")))) :arg1 ('2 / '' :arg0 (m3 / market) :arg1 (a / activity-06) :arg1-of (n3 / normal-02))))
(a / and :op1 (o / operate-01 :arg0 (c / cruise :name (n / name :op1 (n2 / norwegian)) :mod (c2 / cruise)) :arg1 (s / ship :quant 13 :part (c3 / cruise)) :location (r / route :name (n3 / name :op1 (s2 / spanning)) :location (r2 / route :name (n4 / name :op1 (s3 / sea :name (n5 / name :op1 "Mediterranean" :op2 "Sea"))))) :location (r3 / route :name (n6 / name :op1 (s4 / spanning)) :location (r4 / route :name (n7 / name :op1 (s5 / spanning))))) :op2 (s6 / scrap-01 :arg1 (s7 / ship)) :op3 (s8 / scrap-01 :arg1 (s9 / ship)) :op4 (w / world-region :name (n8 / name :op1 "Caribbean")))
(c / cause-01 :arg0 (c2 / concern-01 :arg0 (h / have-03 :arg0 (p / paycheck) :arg1 (t / traffic :arg1-of (b / border-01 :arg2 (s / state :arg1-of (n / neighbor-01)))) :mod (n2 / negative)) :arg1 (t2 / this)) :arg1 (t3 / this))
(p / play-11 :polarity - :arg2 (j / jazz) :mod (t / too) :mod (t2 / too))
(c / contrast-01 :arg2 (p / possible-01 :arg1 (k / keep-01 :arg0 (f / fan :mod (e / even)) :arg1 (e2 / excuse-02)) :time (b / before :op1 (t / that))))
(c / contrast-01 :arg1 (s / schedule-01 :arg1 (p / plane) :arg2 (l / land :quant 7.30) :arg3 (l2 / land) :time (a / after :op1 (d / date-entity :time (a2 / after :quant 7.30)))) :arg2 (a3 / and :op1 (c2 / change-01 :arg1 (p2 / plane) :manner (s2 / sudden) :manner (o / or :op1 (s3 / speed :mod (w / wind)) :op2 (d2 / direction :mod (o2 / over :op1 (d3 / distance-01 :mod (s4 / short)))))) :op2 (f / force-01 :arg1 (p3 / plane) :arg2 (o3 / out))))
(a / and :op1 (t / tell-01 :arg0 (y / you) :arg1 (s / story) :arg2 (y2 / you) :time (a2 / always)) :op2 (p / place :mod (g / great) :domain (t2 / that)))
(e / extract-01 :arg1 (a / and :op1 (l / love-01) :op2 (l2 / letter)) :manner (e2 / exclusive-02) :topic (a2 / and :op1 (l3 / love-01) :op2 (l4 / letter)))
(a / and :op1 (l / likely-01 :arg1 (o / outlaw-01 :arg0 (m / move-02) :arg1 (p / protest-01 :arg1 (d / district :mod (b / business) :poss (c / city :name (n / name :op1 "Hong" :op2 "Kong")))))) :op2 (b2 / begin-01 :arg0 (a2 / activist) :arg1 (a3 / and :op1 (p2 / plan-01) :op2 (m2 / mobilize)) :time (a4 / after :op1 (a5 / announce-01) :quant (u / up-to :op1 (t / temporal-quantity :quant (N / N-A) :unit (h / hour))))))
(c / contrast-01 :arg2 (p / past :domain (a / amr-unknown) :condition (l / learn-01 :polarity - :arg1 (l2 / learn-01 :arg1 (i / it) :arg2 (i2 / it)))))
(a / and :op1 (d / disprove-01 :arg0 (p / person :name (n / name :op1 "Eleanor" :op2 "Roosevelt") :time (f / former) :arg0-of (d2 / draft-01 :arg1 (d3 / declare-02 :arg1 (r / right :mod (h / human) :arg1-of (a2 / adopt-01 :arg0 (o / organization :name (n2 / name :op1 "United" :op2 "Nations")) :prep-as (a3 / and :op1 (c / covenants :mod (g / globe)) :op2 (p2 / person :name (n3 / name :op1 "Roosevelt") :arg0-of (h2 / have-org-role-91 :arg1 (p3 / political-party)))))) :mod (u / universal)))) :arg1 (r2 / right-05 :arg1 (p4 / person) :arg2 (f2 / form))) :op2 (g2 / guarantee-01 :arg0 (p5 / person) :arg1 (a4 / and :op1 (r3 / right-05 :arg1 (p6 / person) :arg2 (f3 / form)) :op2 (j / join-01 :arg0 (p7 / person) :arg1 (u2 / union :mod (t / trade-01)) :purpose (p8 / protect-01 :arg1 (i / interest :poss (p9 / person)))))))
(l / lose-03 :arg0 (w / we) :mod (n / nothing))
(r / result-01 :arg1 (a / and :op1 (p / person :arg0-of (l / lead-02 :arg1 (o / organization :name (n / name :op1 "CSU")))) :op2 (p2 / person :name (n2 / name :op1 "Horst" :op2 "Seehofer") :arg0-of (l2 / lead-02 :arg1 (o2 / organization))) :op3 (p3 / person :arg0-of (l3 / lead-02 :arg1 (o3 / organization))) :op4 (p4 / person :arg0-of (l4 / lead-02 :arg1 (o4 / organization))) :op5 (p5 / person :arg0-of (l5 / lead-02 :arg1 (o5 / organization)))) :arg2 (p6 / person :arg0-of (l6 / lead-02 :arg1 (o6 / organization))))
(i / increase-01 :arg1 (r / reason :arg0-of (c / cause-01 :arg1 (p / possible-01 :polarity - :arg1 (m / make-05 :arg0 (a / authority) :arg1 (p2 / place :quant (e / enough) :arg2-of (a2 / available-02 :arg1-of (s / suitable-04 :arg2 (a3 / accommodation :arg1-of (s2 / suitable-04))))))))) :mod (m2 / main) :arg1-of (c2 / cause-01 :arg0 (i2 / increase-01 :arg1 (n / number :quant-of (p3 / person :arg0-of (s3 / seek-01 :arg1 (h / help-01 :mod (i3 / initial)))))) :manner (s4 / sudden)) :mod (m3 / main))
(c / contrast-01 :arg1 (l / look-01 :arg0 (p / person :name (n / name :op1 "Esme" :op2 "Nussbaum")) :arg1 (s / she)) :arg2 (s2 / speak-01 :arg0 (p2 / person :name (n2 / name :op1 "Rabinowitz"))))
(b / be-temporally-at-91 :arg1 55 :arg2 (d / die-01 :arg1 (h / he) :time (d2 / date-entity :month 2 :day 17)))
(u / use-01 :arg0 (p / party :quant (a / all)) :arg1 (a2 / appear-01 :arg1 (p2 / party)) :arg2 (a3 / announce-01 :arg0 (p3 / party) :arg1 (d / demand-01 :arg0 (p4 / party)) :arg1-of (p5 / public-02)) :time (p6 / prior :op1 (m / meet-03)))
(l / look-01 :arg0 (p / person :name (n / name :op1 "Ailinn" :op2 "Solomons")) :arg1 (f / foot :part-of (s / she)) :mod (a / again :mod (a2 / alone)))
(m / multi-sentence :snt1 (n / need-01 :polarity - :arg0 (y / you) :arg1 (l / lot :purpose (m2 / make-01 :arg0 (y2 / you) :arg1 (b / beer :example (a / and :op1 (w / water :mod (g / good)) :op2 (c / commodity) :op3 (z / zest :prep-for (l2 / life))))))) :snt2 (a2 / add-01 :arg0 (h / he) :arg1 (o / over :op1 (s / swim-01)) :arg2 (m3 / member :mod (s2 / senior) :location (c2 / city :name (n2 / name :op1 "Guangzhou")))))
(b / bad-07 :polarity - :arg1 (s / socializing) :mod (e / either) :mod (e2 / either))
(h / hope-01 :arg0 (p / person :arg0-of (l / lead-02 :arg1 (c / city :name (n / name :op1 "Guangzhou")) :mod (d / deputy) :mod (d2 / deputy))) :arg1 (v / visit-01 :arg0 (p2 / person) :arg1 (p3 / peninsula :name (n2 / name :op1 "N-A")) :time (y / year :mod (n3 / next)) :purpose (m / meet-03 :mod (p4 / partner-01))))
(c / contrast-01 :arg1 (s / stop-01 :arg0 (s2 / station :mod (t / tv)) :arg1 (b / broadcast-01) :duration (a / approximately :op1 (t2 / temporal-quantity :quant (N / N-A) :unit (m / minute)))) :arg2 (b2 / begin-01 :arg0 (s3 / station) :arg1 (b3 / broadcast-01 :arg0 (s4 / station) :mod (a2 / again))))
(d / disagrees :arg1 (t / treasure))
(p / possible-01 :polarity - :arg1 (k / know-01 :arg1 (c / cost-01 :arg1 (m / mismanage-01 :mod (t / this)) :arg2 (l / life))))
(s / say-01 :arg0 (p / person :name (n / name :op1 "Georgy")) :arg1 (i / important :domain (p2 / possible-01 :polarity - :arg1 (e / event :time (e2 / ever :polarity -) :mod (a / again)))) :time (n2 / now))
(p / produce-01 :arg1 (p2 / produce-01 :arg1 (a / asbestos :mod (g / globe))) :arg4 (m / more-than :op1 (m2 / mass-quantity :quant (N / N-A) :unit (t / ton))))
(s / say-01 :arg0 (p / person :name (n / name :op1 "Rodgers")) :arg1 (t / take-01 :arg0 (s2 / she) :arg1 (n2 / note :mod (m / medicine) :poss (s3 / she)) :time (a / age-01 :arg1 (s4 / she) :arg2 (t2 / temporal-quantity :quant (N / N-A) :unit (y / year))) :time (a2 / age-01 :arg1 (s5 / she) :arg2 (t3 / temporal-quantity :quant (N2 / N-A) :unit (y2 / year)))) :time (a3 / age-01 :arg1 (s6 / she) :arg2 (t4 / temporal-quantity :quant (N3 / N-A) :unit (y3 / year))) :arg0-of (c / cause-01 :arg1 (p2 / peak-01 :arg1 (n3 / note :mod (m2 / medicine) :poss (s7 / she))) :time (l / leave-15 :arg0 (p3 / person :arg0-of (h / have-rel-role-91 :arg1 (s8 / she) :arg2 (c2 / consultant))) :arg1 (r / room :arg0-of (s9 / say-01 :arg1 (s10 / suffer-01 :arg0 (s11 / she) :arg1 (s12 / suffer-01 :arg0 (s13 / she))))))))
(m / multi-sentence :snt1 (n / need-01 :arg0 (i / it) :arg1 (c / chairman :mod (f / formidable))) :snt2 (h / hope-01 :arg0 (i2 / i) :arg1 (f2 / find-01 :arg0 (i3 / it) :arg1 1)))
(a / and :op1 (g / get-01 :arg0 (t / they) :arg1 (n / name :poss (t2 / they)) :arg2 (w / word :name (n2 / name :op1 (' / '')) :arg1-of ('2 / ''))) :op2 (d / describe-01 :arg0 (t3 / they) :arg1 (s / structure :mod (f / fibrous) :arg0-of (d2 / describe-01 :arg1 (s2 / structure :mod (f2 / fibrous)) :arg2 (a2 / and :op1 (s3 / strength) :op2 (d3 / dissent-01))))))
(a / and :op1 (h / have-03 :arg0 (p / person :name (n / name :op1 "Wolfgang" :op2 "Schneider") :mod (e / exact)) :arg1 (o / organization :name (n2 / name :op1 "Bischofsheim" :op2 "Archives")) :mod (a2 / again :mod (o2 / once))) :op2 (a3 / ask-02 :arg0 (p2 / person) :arg1 (p3 / person :mod (e2 / elderly)) :arg2 (f / find-out-03 :arg0 (p4 / person) :arg1 (o3 / obligate-01 :arg1 (p5 / person) :arg2 (d / do-02 :arg0 (p6 / person) :arg1 (t / thing))))))
(p / play-02 :arg0 (m / military) :arg1 (a / and :op1 (r / role :mod (i / important) :location (c / country :name (n / name :op1 "Pakistan"))) :op2 (t / take-01 :arg0 (m2 / military) :arg1 (p2 / power) :manner (f / force-04) :time (b / before :op1 (n2 / now) :quant (s / several :op1 (t2 / temporal-quantity :quant (N / N-A) :unit (t3 / time)))))))
(a / and :op1 (- / -lrb- :arg0 (p / person :name (n / name :op1 "Torsten" :op2 "Sjöberg")) :arg1 (a2 / and :op1 (-2 / -rrb-) :op2 (p2 / person :arg0-of (h / have-rel-role-91 :arg1 (p3 / person :name (n2 / name :op1 "Herbert" :op2 "Piffl")) :arg2 (f / friend))) :op3 (p4 / person :arg0-of (h2 / have-rel-role-91 :arg1 (p5 / person) :arg2 (f2 / friend))) :op4 (p6 / person :arg0-of (h3 / have-org-role-91 :arg1 (b / board) :arg2 (m / member))) :op5 (p7 / person :arg0-of (h4 / have-org-role-91 :arg1 (b2 / board) :arg2 (m2 / member))) :op6 (p8 / person :arg0-of (h5 / have-org-role-91 :arg1 (b3 / board) :arg2 (m3 / member))) :op6 (p9 / person :arg0-of (h6 / have-org-role-91 :arg1 (b4 / board) :arg2 (m4 / member))) :op7 (p10 / person :arg0-of (h7 / have-org-role-91 :arg1 (b5 / board) :arg2 (m5 / member))))))
(s / say-01 :arg0 (w / woman :mod (c / country :name (n / name :op1 "N-A"))) :arg1 (s2 / spend-02 :arg0 (w2 / woman) :arg1 (t / temporal-quantity :quant (N / N-A) :unit (y / year)) :arg2 (d / die-01 :arg1 (w3 / woman)) :time (a / after :op1 (m / misdiagnosis :arg1 (w4 / woman)))))
(t / think-01 :arg0 (i / i) :arg1 (h / have-03 :arg0 (y / you) :arg1 (s / something :mod (l / less :degree (l2 / less :quant (l3 / lot))))))
(w / way :arg1-of (s / smart-06) :purpose (s2 / save-02 :arg1 (c / college) :arg2 (c2 / college)))
(c / contrast-01 :arg2 (p / past :domain (a / amr-unknown) :condition (l / learn-01 :polarity - :arg1 (l2 / learn-01 :arg1 (i / it) :arg2 (i2 / it)))))
(t / try-01 :arg0 (t2 / they) :arg1 (s / sell-01 :arg0 (t3 / they) :arg1 (i / internet :mod (t4 / thing)) :arg2 (h / home :poss (w / we)) :duration (t5 / temporal-quantity :quant (N / N-A) :unit (y / year) :mod (l / last))) :mod (r / really))
(c / cause-01 :arg0 (f / fair :arg1 (e / electronics :mod (p / person :arg0-of (c2 / consume-01) :mod (i / international))) :location (c3 / city :name (n / name :op1 "Berlin"))) :arg1 (s / show-01 :arg0 (w / we) :arg1 (h / have-manner-91 :arg1 (c4 / come-01 :arg1 (w2 / we) :arg4 (q / question-01 :arg1 (t / technology))) :arg2 (w3 / we))))
(r / responsible-03 :arg0 (s / she) :arg1 (c / cornerstones :arg0 (s2 / she) :arg1 (p / policy :mod (f / foreign) :example (a / and :op1 (b / become-01 :arg1 (p2 / policy :mod (f2 / foreign) :example (w / world-region :name (n / name :op1 "Middle" :op2 "East"))) :arg2 (k / know-02 :arg1 (p3 / policy) :arg2 (w2 / work-01 :arg0 (s3 / she) :arg1 (o / operation :location (c2 / country :name (n2 / name :op1 "Afghanistan") :location (c3 / country :name (n3 / name :op1 "Afghanistan"))))))) :op2 (p4 / promote-01 :arg0 (c4 / country) :arg1 (r2 / relation-03 :arg0 (c5 / country) :arg2 (c6 / country)) :arg2 (a2 / and :op1 (o2 / organization :name (n4 / name :op1 "Social" :op2 "Democrats")) :op2 (d / democrat :location (c7 / country :name (n5 / name :op1 "USA")))))))))
(e / economy :mod (g / german) :prep-as (p / percentage-entity :value (N / N-A)))
(a / and :op1 (t / take-01 :mode (i / imperative) :arg0 (y / you) :arg1 (r / race)) :op2 (c / conduct-01 :arg0 (p / police) :arg1 (r2 / race)))
(r / receive-01 :arg1 (p / photo :arg0-of (s / show-01 :arg1 (s2 / shake-01 :arg1 (h / hand :part-of (s3 / she)) :accompanier (p2 / person :name (n / name :op1 "Putin"))))) :location (c / city :name (n2 / name :op1 "Brussels")) :arg1-of (c2 / cause-01 :arg0 (f / fact :domain (i / invite-01 :arg0 (s4 / she) :arg1 (p3 / person :arg0-of (h2 / have-org-role-91 :arg1 (g / government-organization :name (n3 / name :op1 "Kremlin")) :arg2 (c3 / chief))) :arg2 (s5 / summit :mod (e / economy) :location (p4 / province :name (n4 / name :op1 "N-A")))))))
(i / include-91 :arg1 (p / person :name (n / name :op1 "Andrew" :op2 "Lawson")) :arg2 (m / man :mod (k / kind) :arg0-of (f / force-01 :arg1 (p2 / possible-01 :arg1 (c / consent-01 :arg0 (f2 / force :consist-of (p3 / personality)) :arg1 (t / thing)))) :mod (k2 / kind) :arg1-of (r / resemble-01 :arg2 (g / government-organization :name (n2 / name :op1 "NHS")))))
(h / have-concession-91 :arg1 (r / remember-01 :arg0 (i / i) :arg1 (s / shouting :arg1 (i2 / i) :arg2 (p / person :name (n / name :op1 "Damir") :arg0-of (r2 / run-02 :arg1 (h2 / he))))) :arg2 (s2 / sure-02 :arg0 (i3 / i) :arg1 (h3 / hear-01 :polarity - :arg0 (i4 / i) :arg1 (h4 / hear-01 :polarity - :arg0 (i5 / i) :arg1 (i6 / i)))))
(c / contrast-01 :arg2 (m / misplaced :arg1 (e / event :name (n / name :op1 "N-A") :mod (s / such))))
(s / say-01 :arg0 (p / person :name (n / name :op1 "Alyona")) :arg1 (a / and :op1 (h / have-03 :polarity - :arg0 (p2 / person :quant 10) :arg1 (m / memory :poss (p3 / person))) :op2 (h2 / have-03 :arg0 (p4 / person) :arg1 (a2 / and :op1 (g / girl :arg1-of (b / bright-02)) :op2 (g2 / girl :mod (h3 / happy))))) :li 10)
(d / disease :arg1-of (e / easy-05 :degree (m / more)) :domain (i / ignore-01 :arg1 (w / we :quant (m2 / most))))
(c / cause-01 :arg0 (p / patrol-01 :arg0 (p2 / person :arg0-of (p3 / patrol-01) :mod (c2 / country :name (n / name :op1 "U.S."))) :arg1 (m / minor :quant (n2 / nearly :op1 63,000)) :location (b / border-01 :arg1 (c3 / country) :arg2 (s / southwest :part-of (c4 / country))) :time (y / year :mod (t / this)) :mod (a / again :mod (o / once))) :arg1 (t2 / time :mod (t3 / this) :time-of (i / issue-02 :arg0 (w / woman))))
(m / multi-sentence :snt1 (a / and :op1 (w / write-01 :arg0 (i / i) :arg1 (t / this)) :op2 (c / catches :arg0 (e / eye :part-of (i2 / i)) :arg1 (c2 / cable :arg0-of (c3 / connect-01 :arg1 (h / handsets :prep-to (t2 / telephone)))))) :snt2 (a2 / amr-unknown :domain (t3 / that) :time (t4 / then)))
(c / cause-01 :arg1 (h / have-03 :arg0 (p / person) :arg1 (p2 / power :mod (b / buy-01) :purpose (a / afford-01 :arg0 (p3 / person) :arg1 (b2 / beer :mod (g / german)))) :mod (a2 / also)))
(m / multi-sentence :snt1 (s / see-01 :polarity - :arg0 (y / you) :arg1 (f / face :part-of (h / he)) :time (e / ever)) :snt2 (h2 / hear-01 :arg0 (y2 / you) :arg1 (v / voice :poss (h3 / he)) :purpose (s2 / stop-01 :arg0 (y3 / you) :arg1 (s3 / sentiment))))
(s / say-01 :arg0 (h / he) :arg1 (t / this) :mod (o / of-course) :mod (o2 / of-course))
(i / interest-01 :arg0 (s / sell-01 :arg1 (h / house)) :arg1 (i2 / interest-01 :arg1 (m / media :mod (s2 / social)) :arg2 (i3 / include-01 :arg1 (p / person :arg0-of (s3 / sell-01)) :arg2 (s4 / sell-01))))
(m / multi-sentence :snt1 (c / cause-01 :arg0 (a / and :op1 (' / '') :op2 (h / head :part-of (y / you) :mod (t / thick))) :arg1 (i / i) :degree (v / very)) :snt2 (s / say-01 :arg0 (s2 / she) :arg1 (a2 / attract-01 :arg0 (t2 / thing :arg1-of (s3 / say-01 :arg0 (s4 / she))) :arg1 (i2 / i))))
(a / and :op1 (i / idea :mod (g / good :degree (v / very)) :domain (t / that)) :op2 (a2 / answer-01 :arg0 (p / person :name (n / name :op1 "Schäfer-Gümbel")) :arg1 (p2 / person :name (n2 / name :op1 "Li" :op2 "Jinjun") :arg0-of (h / have-org-role-91 :arg1 (c / country) :arg2 (m / minister :mod (d / deputy) :mod (p3 / prime)))) :arg2 (a3 / agree-01 :arg0 (p4 / person) :arg1 (a4 / agree-01 :arg0 (p5 / person)))))
(s / set-02 :mode (i / imperative) :arg0 (y / you) :arg1 (c / camera :poss (y2 / you)) :purpose (m / match-01 :arg0 (y3 / you) :arg1 (o / or :op1 (p / photograph-01) :op2 (v / video) :mod (t / type)) :arg2 (y4 / you)) :mod (a / also))
(a / and :op1 (s / schedule-01 :arg1 (n / negotiate-01) :arg2 (t / take-01 :arg1 (n2 / negotiate-01) :mod (n3 / next))) :op2 (s2 / say-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (o / organization :name (n4 / name :op1 "Energy")) :arg2 (m / minister))) :arg1 (p2 / person :name (n5 / name :op1 "Alexander" :op2 "Nowak") :arg0-of (h2 / have-org-role-91 :arg1 (o2 / organization) :arg2 (m2 / minister)))) :medium (m3 / monday))
(n / nurtured :arg0 (p / person :name (n2 / name :op1 "Richter")) :arg1 (r / relation-03 :arg0 (p2 / person) :arg2 (p3 / person :name (n3 / name :op1 "Ludwig" :op2 "Götz") :arg0-of (h / have-org-role-91 :arg1 (o / organization :name (n4 / name :op1 "CSU")) :arg2 (m / mayor :mod (t / then)))) :mod (g / good)) :arg2 (b / benefit-01 :arg1 (s / school)))
(s / say-01 :arg0 (s2 / she) :arg1 (a / and :op1 (r / realize-01 :arg0 (s3 / she) :arg1 (r2 / realised :polarity - :arg0 (s4 / she) :arg1 (a2 / ability :mod (w / walk-01) :poss (s5 / she)) :degree (e / equal) :compared-to (t / think-01 :arg0 (s6 / she)))) :op2 (a3 / ask-02 :arg0 (s7 / she) :arg1 (p / paradise :poss (s8 / she) :topic (i / it)) :arg2 (s9 / she))))
(a / arrive-01 :arg1 (s / sportsmen-and-women :mod (s2 / sportsmen-and-women)) :arg4 (p / person :name (n / name :op1 "Bad" :op2 "Vilbel")) :time (y / yesterday) :mod (a2 / again :mod (o / once)) :time (a3 / after :op1 (c / cycling :quant (m / multiple :op1 180))))
(p / possible-01 :arg1 (d / deteriorate :arg0 (y / you) :arg1-of (q / quick-02 :degree (v / very))) :time (g / give-up-07 :arg0 (y2 / you) :arg1 (y3 / you)))
(h / hit-01 :arg0 (p / person :name (n / name :op1 "Stewart")) :arg1 (w / wall) :ord (o / ordinal-entity :value 2 :range (o2 / ordinal-entity :value 2)) :time (a / after :op1 (f / front :arg0 (f2 / front :mod (r / right) :poss (h2 / he)) :arg1 (l / lap :quant 172))) :arg0-of (e / end-01 :arg1 (n2 / night :poss (h3 / he))))
(s / say-01 :arg0 (p / person :arg0-of (r / report-01)) :arg1 (a / and :op1 (e / enter-01 :arg0 (m / movement-07 :arg0 (t / they)) :arg1 (s2 / stage :mod (n / new) :consist-of (d / disobedience :mod (c / civil)))) :op2 (w / waves :arg0 (t2 / they) :arg1 (w2 / wave-04 :arg1 (p2 / protest-01)) :time (w3 / week :arg1-of (c2 / come-01)))) :location (d2 / demonstrate-01))
(t / think-01 :mode (i / interrogative) :arg0 (s / she) :arg1 (s2 / strike-01 :arg0 (h / he) :arg1 (s3 / she)))
(c / contrast-01 :arg1 (m / mean-01 :polarity - :arg1 (p / person :name (n / name :op1 "Dmitry" :op2 "Peskov") :arg0-of (h / have-org-role-91 :arg1 (h2 / he) :arg2 (s / spokesman))) :arg2 (i / imply-01 :arg0 (p2 / person) :arg1 (b / become-01 :arg1 (t / territory :poss (c2 / country :name (n2 / name :op1 "Ukraine"))) :arg2 (p3 / part :part-of (c3 / country :name (n3 / name :op1 "Russia"))))) :time (l / late :degree (m2 / more))) :arg2 (o / obligate-01 :arg1 (r / revise-01 :arg1 (s2 / status :poss (c4 / country) :location (c5 / country :name (n4 / name :op1 "Ukraine"))) :arg2 (g / give-01 :arg0 (c6 / country) :arg1 (p4 / power :poss (c7 / country)) :arg2 (p5 / protect-01 :arg0 (c8 / country) :arg1 (a / and :op1 (r2 / right) :op2 (i2 / interest) :poss (c9 / country)))))))
(f / fire-01 :polarity - :arg1 (s / shoot-02 :mod (m / military) :time (f2 / former) :location (l / location :name (n / name :op1 "Münsingen"))) :duration (a / almost :op1 (t / temporal-quantity :quant (N / N-A) :unit (y / year) :mod (a2 / almost))))
(m / multi-sentence :snt1 (p / possible-01 :arg1 (c / consider-02 :arg0 (i / i) :arg1 (i2 / it) :arg2 (t / trouble-01 :mod (b / big) :mod (r / real)) :condition (b2 / be-located-at-91 :arg1 (w / we) :arg2 (t2 / trouble-01 :mod (b3 / big) :mod (r2 / real))))) :snt2 (t3 / tell-01 :arg0 (p2 / person :arg0-of (h / have-rel-role-91 :arg1 (p3 / person :arg0-of (h2 / have-rel-role-91 :arg2 (f / father))) :arg2 (f2 / father))) :arg2 (f3 / forum)))
(s / subject-01 :arg1 (h / home :poss (p / person :arg0-of (h2 / have-org-role-91 :arg2 (c / capital)))) :arg2 (a / and :op1 (d / demand-01 :arg1 (a2 / and :op1 (d2 / demand-01) :op2 (w / world-region :name (n / name :op1 "N-A")))) :op2 (t / thing :arg2-of (p2 / price-01) :mod (w2 / world-region :name (n2 / name :op1 "N-A")))) :arg1-of (s2 / spread-02 :arg1-of (w3 / wide-02)) :arg1-of (c2 / cause-01 :arg0 (f / fear-01 :arg1 (p3 / prompting :arg1 (b / bank :mod (c3 / credit)) :arg2 (b2 / bank :poss (c4 / country)) :purpose (i / impose-01 :arg0 (b3 / bank) :arg1 (l / limit-01 :arg1 (t2 / thing :arg2-of (s3 / shelter-01 :arg3 (m / mortgage))) :location (j / june))) :arg1-of (w4 / wide-02)) :arg1-of (w5 / wide-02))))
(a / and :op1 (p / person :name (n / name :op1 "Petro" :op2 "Poroschenko") :arg0-of (h / have-org-role-91 :arg1 (c / country :name (n2 / name :op1 "N-A")) :arg2 (p2 / president))) :op2 (p3 / person :arg0-of (h2 / have-org-role-91 :arg1 (c2 / country :name (n3 / name :op1 "N-A")) :arg2 (p4 / president))) :arg1-of (c3 / cause-01 :arg0 (a2 / and :op1 (s / suffer-01 :arg0 (d / defeat :mod (h3 / heavy) :arg1-of (s2 / suffer-01 :arg0 (a3 / army :poss (p5 / person)))) :arg1 (d2 / defeats :mod (h4 / heavy)) :arg1-of (p6 / personal-02)) :op2 (a4 / announce-01 :arg0 (p7 / person) :arg1 (c4 / change-01 :arg0 (a5 / army) :arg1 (l / leadership :mod (s3 / senior) :poss (a6 / army)) :manner (g / go-02 :polarity - :arg0 (a7 / army)))))))
(h / have-concession-91 :arg1 (m / make-02 :arg0 (b / balance-01 :arg1 (s / sheet) :ord (o / ordinal-entity :value 1)) :arg1 (v / voice :poss (p / person :mod (c / crystal) :arg1-of (c2 / clear-01 :arg2 (s2 / sem))))) :arg2 (o2 / obligate-01 :arg2 (d / do-02 :arg1 (m2 / more :topic (a / and :op1 (s3 / size :poss (e / event)) :op2 (c3 / content :poss (e2 / event)))))))
(i / include-91 :arg1 (s / state :quant 11 :arg0-of (p / pass-01 :arg1 (l / law :arg1-of (r / resemble-01)))) :arg2 (s2 / state-01 :arg0 (c / court) :arg1 (l2 / law :arg1-of (r2 / resemble-01) :arg0-of (o / oppose-01 :arg1 (a / and :op1 (p2 / peninsula :name (n / name :op1 "N-A")) :op2 (a2 / aircraft-type :name (n2 / name :op1 "N-A"))) :time (r3 / recent)))))
(p / plunged :arg0 (p2 / person :arg0-of (s / suggest-01 :arg1 (r / recommend-01 :arg1 (t / touch-01 :arg0 (p3 / person) :arg1 (p4 / person) :manner (t2 / touch-01))))) :arg1 (c / company :name (n / name :op1 "Abbott")) :manner (s2 / sudden))
(d / dare-01 :polarity - :arg0 (p / person :arg0-of (f / farm-01)) :arg1 (l / leave-15 :arg0 (p2 / person) :arg1 (h / home :poss (p3 / person)) :purpose (c / crop)))
(p / promise-01 :arg0 (p2 / person :arg0-of (o / organize-01)) :arg2 (f / fit :arg1 (g / generation :quant (a / all))))
(p / possible-01 :arg1 (f / find-01 :arg0 (p2 / person :arg0-of (h / have-org-role-91 :arg1 (c / company :name (n / name :op1 "BBC")))) :arg1 (p3 / person :arg0-of (h2 / have-org-role-91 :arg1 (c2 / company :name (n2 / name :op1 "BBC")) :arg2 (c3 / chief)))) :location (p4 / person))
(e / eagerly :arg1 (t / they) :arg2 (s / sport :prep-for (s2 / sport :arg1-of (i / include-91 :arg2 (f / fun :quant (l / lot))))) :time (n / now))
(s / say-01 :arg2 (p / person :name (n / name :op1 "Georgy" :op2 "Farniev")) :time (t / today))
(b / big :degree (t / too) :domain (f / foot :part-of (y / you)))
(s / say-01 :arg0 (o / organization :name (n / name :op1 "Connells") :arg0-of (h / have-org-role-91 :arg1 (e / estate) :arg2 (a / agent :mod (e2 / estate)))) :arg1 (b / be-located-at-91 :arg1 (p / pig) :arg2 (c / company :name (n2 / name :op1 "N-A") :poss (p2 / person :arg0-of (o2 / own-01 :arg1 (h2 / home))))))
(b / begin-01 :arg1 (w / word-01 :arg1 (a / and :op1 (p / put-01 :arg1 (f / finger :quant 2) :arg2 (f2 / finger :part-of (y / you))) :op2 (c / cost-01 :arg1 (f3 / finger) :arg2 (y2 / you)))) :arg2 (y3 / you))
(s / say-01 :arg2 (p / person :name (n / name :op1 "Fatima")))
(h / hard-02 :arg1 (i / it) :degree (v / very))
(m / multi-sentence :snt1 (l / leak-01 :arg1 (p / pipes) :mod (s / still)) :snt2 (a / and :op1 (s2 / sign-01 :arg0 (p2 / person :mod (c / country :name (n / name :op1 "N-A"))) :arg1 (s3 / signatures :poss (p3 / person) :location (w / windows :quant (a2 / all)))) :op2 (b / believe-01 :arg0 (p4 / person) :arg1 (b2 / belong-01 :arg0 (p5 / place :mod (g / garden :mod (g2 / giant))) :arg1 (p6 / person :arg0-of (b3 / belong-01 :arg1 (p7 / person)))))))
(a / and :op2 (c / come-01 :arg1 (r / rain-01) :time (t / then)))
(p / person :arg0-of (t / teach-01) :mod (g / great) :domain (h / history))
(a / and :op1 (o / obligate-01 :arg1 (p / person :name (n / name :op1 "Manfred" :op2 "Richter")) :arg2 (g / go-02 :arg0 (p2 / person) :arg4 (s / school)) :frequency (r / rate-entity-91 :arg1 6 :arg2 (t / temporal-quantity :quant (N / N-A) :unit (w / week)) :location (f / foot :part-of (s2 / station :mod (t2 / train) :mod (m / military))))) :op2 (t3 / take-01 :arg0 (p3 / person) :arg1 (t4 / train) :arg4 (i / island :name (n2 / name :op1 "N-A"))) :op3 (a2 / and :op1 (w2 / walk-01 :arg0 (p4 / person) :destination (i2 / island :name (n3 / name :op1 "N-A")) :path (a3 / across :op1 (t5 / town)) :path (a4 / across :op1 (t6 / town)) :path (a5 / across :op1 (t7 / town)) :path (a6 / across :op1 (t8 / town))) :op2 (m2 / make-02 :arg0 (p5 / person) :arg1 (r2 / return-01 :arg1 (p6 / person) :arg4 (h / home)) :time (t9 / then))))
(h / herdsmen :location (f / foot :part-of (t / tree)) :time (a / after :op1 (a2 / ascent :arg1 (a3 / ascent))))
(a / and :op1 (d / deliver-01 :arg0 (p / person :name (n / name :op1 "Henry")) :arg1 (l / line :quant 20) :arg3 (d2 / documentary) :mod (l2 / last)) :op2 (l3 / live-01 :arg0 (h / he)))
(m / miss-02 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (o / organization :name (n / name :op1 "NPD")) :arg2 (n2 / narrowly))) :arg1 (b / barrier :mod (p2 / percentage-entity :value 5) :arg0-of (s / see-01 :arg1 (e / enter-01 :arg0 (p3 / person) :arg1 (p4 / parliament)))) :medium (u / url-entity :value (s2 / sunday)))
(c / contain-01 :arg0 (i / item :arg1-of (b / be-located-at-91 :arg2 (h / home :poss (w / we)))) :arg1 (t / thing :arg1-of (c2 / contain-01)) :manner (r / routine) :location (h2 / home :poss (w2 / we)) :time (m / meanwhile))
(c / cup)
(a / and :op1 (u / update-01 :arg1 (a2 / account :mod (v / verify-01) :poss (p / person :name (n / name :op1 "Perry"))) :arg1-of (f / frequent-02)) :op2 (f2 / famously :frequency (s / sometimes)))
(c / contrast-01 :arg1 (i / insult :polarity - :arg0 (p / person :arg0-of (h / have-rel-role-91 :arg1 (i2 / i) :arg2 (f / father))) :arg1 (a / anybody) :time (e / ever)) :arg2 (d / delighted :domain (s / song :mod (t / this))))
(w / wearing :arg0 (p / person :name (n / name :op1 "Dmitry" :op2 "Beliakov") :arg0-of (h / have-org-role-91 :arg1 (c / country :name (n2 / name :op1 "N-A")) :arg3 (t / top :mod (t2 / top)))) :arg1 (s / she) :manner (t3 / try-01 :arg0 (p2 / person) :arg1 (c2 / climbed :arg0 (p3 / person) :arg1 (b / be-located-at-91 :arg1 (p4 / person) :arg2 (i / inside :op1 (s2 / school :mod (b2 / blitzed))))) :time (a / after :op1 (e / explode-01 :arg1 (t4 / thing :poss (i2 / i)))) :mod (o / only)))
(a / and :op1 (o / oppose-01 :arg0 (g / group :mod (a2 / art :mod (c / country :name (n / name :op1 "N-A"))) :source (s / school :name (n2 / name :op1 (' / '') :op2 ('2 / '') :op3 ('3 / '')))) :arg1 (d / day) :mod (m / main)) :op2 (s2 / seize-01 :arg0 (g2 / group) :arg1 (o2 / opportunity :purpose (d2 / demonstrate-01 :arg0 (g3 / group) :arg1 (a3 / art :mod (m2 / martial) :mod (m3 / martial) :poss (g4 / group) :location (s3 / sand :arg1-of (s4 / soft-02)))))))
(n / need-01 :arg0 (c / child) :arg1 (a / and :op1 (r / roots) :op2 (w / wing)))
(b / be-located-at-91 :arg1 (l / land :quant (a / area-quantity :quant (N / N-A) :unit (h / hectare))) :arg2 (l2 / land :poss (l3 / location :name (n / name :op1 "Jura") :arg0-of (o / open-01 :arg1 (p / pathways :quant 13 :arg1-of (d / designate-01 :arg2 (a2 / and :op1 (h2 / hikers) :op2 (c / cyclists))))))) :time (s / since :op1 (t / then)))
(b / bring-up-02 :arg0 (p / person :mod (p2 / person :name (n / name :op1 "Harvey"))) :arg1 (r / rate-entity-91 :arg1 (u / under :op1 (b2 / between :op1 (t / temporal-quantity :quant (N / N-A) :unit (y / year)) :op2 (t2 / temporal-quantity :quant (N2 / N-A) :unit (y2 / year)))) :arg2 (t3 / temporal-quantity :quant (N3 / N-A) :unit (y3 / year))) :arg3 (s / score-entity :op1 59 :op2 1))
(a / and :op1 (c / content-01 :arg1 (w / we)) :op2 (e / experience-01 :arg0 (p / person :arg0-of (p2 / participate-01) :quant (a2 / all)) :arg1-of (w2 / wonderful-03)))
(c / contrast-01 :arg1 (s / speak-01 :polarity - :arg0 (s2 / she) :arg2 (h / he) :topic (l / live-01 :arg0 (s3 / she) :location (c2 / chill :location (n / north :part-of (n2 / north)) :arg1-of (g / grow-03 :arg0 (s4 / she))))) :arg2 (d / doubt-01 :polarity - :arg0 (h2 / he) :arg1 (r / resemble-01 :arg1 (i / it) :arg2 (e / essentials :quant (a / all) :arg1-of (r2 / resemble-01)) :location (h3 / here))))
(p / produce-01 :arg1 (t / thing :arg1-of (p2 / produce-01)) :time (a / after :op1 (a2 / all)))
(k / know-01 :arg0 (y / you) :arg1 (r / rule :poss (s / store) :arg2-of (i / include-01 :arg1 (a / and :op1 (p / possible-01 :arg1 (a2 / assessed :arg0 (y2 / you) :arg1 (n / note))) :op2 (h / highlight-01 :arg0 (y3 / you) :arg1 (n2 / note)) :op3 (w / wear-01 :arg0 (y4 / you) :arg1 (n3 / note)) :op4 (w2 / wear-01 :arg0 (y5 / you))))))
(r / recommend-01 :arg1 (a / and :op1 (e / experience-01 :arg0 (w / we) :arg1 (e2 / experience-01 :arg0 (w2 / we) :arg1 (a2 / and :op1 (n / numerous) :op2 (c / common))) :time (g / glance :ord (o / ordinal-entity :value 1))) :op2 (s / see-01 :polarity - :arg0 (w3 / we) :arg1 (t / trace :location (l / location :name (n2 / name :op1 "Wachtberg"))) :time (n3 / no-longer)) :mod (a3 / again :mod (o2 / once))))
(m / mention-01 :arg1 (' / '' :mod (p / parameter :mod (c / certain))) :location (p2 / program :mod (g / government-organization :arg0-of (g2 / govern-01)) :mod (b / black-red)))
(a / assembled :arg1 (p / person :arg0-of (s / support-01) :mod (c / central) :arg0-of (o / occupy-01 :arg1 (p2 / person :arg0-of (s2 / support-01) :mod (c2 / central)))) :location (o2 / outside :op1 (h / headquarters :poss (g / government-organization :arg0-of (g2 / govern-01 :arg1 (c3 / city :name (n / name :op1 "Hong" :op2 "Kong")))))) :duration (u / up-to :op1 (t / temporal-quantity :quant (N / N-A) :unit (h2 / hour))))
(s / say-01 :arg0 (h / he) :arg1 (c / cost-01 :arg1 (t / texts :mod (l / last)) :arg2 (m / monetary-quantity :quant 430 :unit (d / dollar))))
(c / come-03 :arg1 (t / thing :arg2-of (r / result-01 :arg1 (t2 / trigger))) :arg2 (b / back))
(a / and :op1 (d / deliver-01 :arg0 (p / person :name (n / name :op1 "Henry")) :arg1 (l / line :quant 20) :arg3 (d2 / documentary) :mod (l2 / last)) :op2 (l3 / live-01 :arg0 (h / he)))
(a / and :op1 (m / mr :arg0 (i / i) :arg1 (p / person :name (n / name :op1 "Piffl"))) :op2 (s / suggest-01 :arg0 (i2 / i) :arg1 (g / get-03 :arg1 (w / we) :arg2 (' / '' :arg0 (p2 / person :name (n2 / name :op1 "Sjöberg"))))) :arg1-of (r / report-01 :arg0 (p3 / person :name (n3 / name :op1 "Sjöberg"))))
(s / say-01 :arg0 (v / volkszeitung :name (n / name :op1 (' / '')) :mod ('2 / '')) :arg1 (p / performed :arg0 (o / organization :name (n2 / name :op1 "NPD")) :arg1 (p2 / person :name (n3 / name :op1 "Strobl") :arg0-of (h / have-org-role-91 :arg1 (o2 / organization :name (n4 / name :op1 "CDU")) :arg2 (b / boss) :mod (r / region) :mod (a / also))) :arg1-of (b2 / bad-07 :degree (m / more) :compared-to (t / time :mod (l / last)))))
FAILED_TO_PARSE#Two concepts in a row.
(f / fear-01 :arg0 (i / i) :arg1 (p / possible-01 :arg1 (n / need-01 :arg0 (i2 / i) :arg1 (s / surgery-01 :quant (m / more)))))
(a / and :op1 (h / have-concession-91 :arg1 (h2 / have-03 :arg0 (p / person :arg0-of (h3 / have-rel-role-91 :arg1 (p2 / person :name (n / name :op1 "Richard" :op2 "Dimbath")) :arg2 (f / friend))) :arg1 (e / eye :part-of (p3 / person)) :location (f2 / forest :location (f3 / forest :location (m / mountain)))) :arg2 (h4 / have-03 :arg0 (p4 / person) :arg1 (e2 / eye :part-of (p5 / person)) :time (u / until :op1 (e3 / end-01 :arg1 (b / bitter))))) :op2 (w / want-01 :arg0 (p6 / person) :arg1 (a2 / and :op1 (d / develop-02 :arg1 (p7 / person)) :op2 (b2 / bring-01 :arg0 (p8 / person) :arg1 (r / refer-01 :arg1 (p9 / person)) :arg2 (l / life) :location (p10 / place :mod (o / original) :poss (p11 / person))))))
(c / contrast-01 :arg1 (h / have-03 :arg0 (w / we) :arg1 (p / program :arg1-of (s / special-02) :topic (a / and :op1 (g / girl) :op2 (w2 / woman :mod (y / young)))) :time (n / now)) :arg2 (n2 / nothing :beneficiary (b / boy) :mod (a2 / almost)))
(b / be-temporally-at-91 :arg1 55 :arg2 (d / die-01 :arg1 (h / he) :time (d2 / date-entity :month 2 :day 17)))
(a / and :op1 (m / mix-01 :arg1 (s / soundtrack) :arg2 (a2 / and :op1 (r / reggae) :op2 (r2 / rap))) :op2 (u / upbeat :arg1 (t / tunes)))
(m / miss-02 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (o / organization :name (n / name :op1 "NPD")) :arg2 (n2 / narrowly))) :arg1 (b / barrier :mod (p2 / percentage-entity :value 5) :arg0-of (s / see-01 :arg1 (e / enter-01 :arg0 (p3 / person) :arg1 (p4 / parliament)))) :medium (u / url-entity :value (s2 / sunday)))
(h / have-03 :arg0 (s / state :name (n / name :op1 "Virginia")) :arg1 (t / thing :arg1-of (t2 / tax-01 :arg3 (i / income :poss (c / corporation)) :arg1-of (l / low-04 :degree (m / more))) :arg1-of (i2 / include-91 :arg2 (t3 / thing :quant 3 :arg0-of (h2 / have-03 :arg1 (r / rate :mod (c2 / corporation :mod (f / flat))) :arg3 (p / percentage-entity :value (N / N-A)))))))
(m / multi-sentence :snt1 (a / and :op1 (w / wear-01 :arg0 (p / politician :arg1-of (o / organize-01)) :arg1 (a2 / and :op1 (p2 / person :arg0-of (h / have-org-role-91 :arg1 (p3 / political-party :name (n / name :op1 "N-A")) :arg2 (p4 / politician))) :op2 (p5 / person :arg0-of (h2 / have-org-role-91 :arg1 (c / council :mod (c2 / city)) :arg3 (l / lead-02 :arg0 (p6 / person)))) :op3 (b / bike :mod (r / red)) :op4 (b2 / bike :mod (r2 / red)) :op5 (b3 / bike :mod (r3 / red))))) :snt2 (l2 / look-01 :mode (i / imperative) :arg0 (y / you) :arg1 (h3 / he) :time (e / end-01 :arg1 45 :duration (t / temporal-quantity :quant (N / N-A) :unit (m2 / minute)) :manner (p7 / pausing :polarity - :arg1 (h4 / he))) :time (e2 / end-01 :arg1 45 :purpose (b4 / breath))))
(s / say-01 :arg1 (p / positive :domain (h / he) :mod (p2 / positive :degree (v / very))) :arg2 (c / company :name (n / name :op1 "Abbott")))
(c / cause-01 :arg0 (c2 / clashed :arg1 (a / and :op1 (p / person :mod (a2 / another)) :op2 (p2 / person :arg0-of (s / shields)) :op3 (p3 / person :arg0-of (h / have-org-role-91 :arg2 (h2 / head-of-state))) :op4 (p4 / person :arg0-of (h3 / have-org-role-91 :arg2 (h4 / head-of-state))) :op5 (p5 / person :arg0-of (h5 / have-org-role-91 :arg2 (h6 / head-of-state))))) :arg1 (f / fear-01 :arg0 (y / you) :arg1 (s2 / safe-01 :arg1 (g / gladiators))))
(h / hard-02 :arg1 (r / remember-01 :arg1 (p / place :quant (a / all) :arg1-of (w / work-09 :time (t / to-date)))) :degree (s / so))
(c / cause-01 :arg0 (r / reason :mod (a / another) :arg0-of (c2 / cause-01 :arg1 (o / out-live :arg0 (c3 / cable :location (u / url-entity :value (t / telephone))) :arg1 (e / experiment-01 :mod (o2 / organization :name (n / name :op1 "IFA")) :location (c4 / city :name (n2 / name :op1 "Berlin")))))))
(a / admit-01 :arg0 (p / person :name (n / name :op1 "Mike" :op2 "Penning") :mod (e / even)) :arg1 (p2 / perfect-02 :polarity - :arg1 (l / law) :arg2 (p3 / perfect-02 :polarity - :arg1 (l2 / law))))
(a / and :op1 (n / need-01 :arg0 (h / he) :arg1 (o / operation :mod (e / emergency))) :op2 (s / surgeries :quant 2 :mod (f / further) :mod (a2 / as-well)))
(a / and :op2 (s / say-01 :arg0 (c / candidate :mod (n / new) :arg0-of (l / love-01 :arg1 (c2 / country)) :mod (o / only)) :arg1 (a2 / allow-01 :arg1 (a3 / allow-01 :arg1 (' / '' :arg1 (c3 / city :name (n2 / name :op1 "Hong" :op2 "Kong")))))))
(s / say-01 :arg0 (p / person :name (n / name :op1 "Hattery")) :arg1 (a / and :op1 (l / lynched :arg1 (m / man :quant (a2 / at-least :op1 1865) :arg1-of (b / black-05))) :op2 (j / justify-01 :arg1 (r / rape-01 :arg1 (w / woman :mod (w2 / white))) :time (a3 / always :mod (a4 / almost)))) :li 1865)
(s / stay-on-02 :arg1 (i / it) :arg2 (w / we))
(s / stay-01 :arg1 (s2 / stay-01 :arg3 (n / near-02 :arg2 (s3 / surface))))
(e / event :mod (c / coincidences))
(r / recommend-01 :arg1 (t / tolerate-01 :polarity - :arg1 (r2 / report-01 :arg1 (s / steal-01 :arg1-of (s2 / steal-01)))) :manner (l / law) :mod (j / just))
(p / put-01 :arg0 (c / company :name (n / name :op1 "Abbott")) :arg1 (p2 / person) :arg2 (c2 / cycle :quant 6 :consist-of (a / award :name (n2 / name :op1 "N-A"))) :mod (a2 / again :mod (o / once)))
(a / and :op1 (t / turn-01 :arg1 (a2 / and :op1 (c / cyclists) :op2 (r / runners))) :op2 (b / begin-01 :arg1 (r2 / runners :arg1 (a3 / amr-unknown))) :time (t2 / then))
(f / forecast-01 :arg0 (a / and :op1 (o / organization :name (n / name :op1 "Hamptons" :op2 "International")) :op2 (a2 / agent :mod (e / estate) :mod (a3 / another)) :op3 (a4 / agent :mod (e2 / estate) :mod (a5 / another))) :arg1 (t / thing :arg2-of (p / price-01 :arg1 (p2 / property :location (c / city :name (n2 / name :op1 "London"))))) :arg3 (r / rate-entity-91 :arg1 (m / monetary-quantity :quant (N / N-A) :unit (p3 / pound)) :arg2 (t2 / temporal-quantity :quant (N2 / N-A) :unit (y / year))) :arg1-of (b / base-02 :arg2 (t3 / thing :arg2-of (b2 / base-02 :arg1 (s / start-01 :arg1 (w / weaken-01 :arg0 (s2 / sentiment)) :time (a6 / already))))))
(a / and :op1 (g / give-01 :arg0 (d / doctor :mod (c / country :name (n / name :op1 "N-A"))) :arg1 (x / x-rays :mod (c2 / chest)) :arg2 (h / he)) :op2 (a2 / administer-01 :arg0 (d2 / doctor) :arg1 (c3 / catheters :mod (p / pleural)) :purpose (a3 / and :op1 (d3 / draw-02 :arg0 (d4 / doctor) :arg2 (l / lungs)) :op2 (s / send-03 :arg0 (d5 / doctor) :arg1 (c4 / catheters) :arg3 (a4 / assess-01)))))
(c / contrast-01 :arg1 (b / be-located-at-91 :arg1 (p / person :name (n / name :op1 "Li" :op2 "Yiwei")) :arg2 (m / main) :time (a / already)) :arg2 (c2 / capable-01 :polarity - :arg1 (p2 / person) :arg2 (c3 / capacity :poss (r / role :poss (h / he)))))
(a / ask-02 :arg0 (s / source) :arg1 (i / identify-01 :polarity - :arg1 (s2 / source)) :arg1-of (c / cause-01 :arg0 (p / public-02 :polarity - :arg1 (n / negotiate-01))))
(u / utilize-01 :arg1 (t / trade-01 :arg1 (g / good :mod (f / foreign))) :mod (t2 / too))
(e / evaluated :polarity - :medium (s / study-01))
(b / bring-01 :arg0 (a / and :op1 (p / person :arg0-of (h / have-org-role-91 :arg1 (o / organization :name (n / name :op1 "Hamas")))) :op2 (p2 / person :arg0-of (h2 / have-org-role-91 :arg1 (o2 / organization) :arg3 (l / lead-02 :arg0 (p3 / person)))) :op3 (p4 / person :arg0-of (h3 / have-org-role-91 :arg1 (o3 / organization) :arg3 (l2 / lead-02 :arg0 (p5 / person)))) :op4 (p6 / person :arg0-of (h4 / have-org-role-91 :arg1 (o4 / organization) :arg3 (l3 / lead-02 :arg0 (p7 / person)))) :op5 (p8 / person :arg0-of (h5 / have-org-role-91 :arg1 (o5 / organization) :arg3 (l4 / lead-02 :arg0 (p9 / person)))) :op6 (p10 / person :arg0-of (h6 / have-org-role-91 :arg1 (o6 / organization) :arg3 (l5 / lead-02 :arg0 (p11 / person)))) :op6 (p12 / person :arg0-of (h7 / have-org-role-91 :arg1 (o7 / organization) :arg3 (l6 / lead-02 :arg0 (p13 / person)))) :op6 (p14 / person :arg0-of (h8 / have-org-role-91 :arg1 (o8 / organization) :arg3 (l7 / lead-02 :arg0 (p15 / person)))) :op6 (p16 / person :arg0-of (h9 / have-org-role-91 :arg1 (o9 / organization) :arg3 (l8 / lead-02 :arg0 (p17 / person)))) :op6 (p18 / person :arg0-of (h10 / have-org-role-91 :arg1 (o10 / organization) :arg3 (l9 / lead-02 :arg0 (p19 / person)))) :op6 (p20 / person :arg0-of (h11 / have-org-role-91 :arg1 (o11 / organization) :arg3 (l10 / lead-02 :arg0 (p21 / person)))) :op6 (p22 / person :arg0-of (h12 / have-org-role-91 :arg1 (o12 / organization) :arg3 (l11 / lead-02 :arg0 (p23 / person)))) :op6 (p24 / person :arg0-of (h13 / have-org-role-91 :arg1 (o13 / organization) :arg3 (l12 / lead-02 :arg0 (p25 / person)))) :op7 (p26 / person :arg0-of (h14 / have-org-role-91 :arg1 (o14 / organization) :arg3 (l13 / lead-02 :arg0 (p27 / person))))) :arg1 (e / end-01 :arg1 (f / fight-01)))
(m / multi-sentence :snt1 (c / contrast-01 :arg2 (c2 / confident-01 :arg1 (i / i) :arg2 (f / find-01 :arg0 (w / we) :arg1 (s / someone :arg1-of (r / resemble-01 :arg2 (s2 / someone)))))) :snt2 (w2 / want-01 :polarity - :arg0 (h / he) :arg1 (s3 / stand-01 :arg1 (h2 / he) :arg2 (i2 / it) :arg1-of (c3 / cause-01 :arg0 (l / live-01 :arg0 (h3 / he) :arg1-of (b / bad-07))))))
(- / -lsb- :quant (m / multiple) :location (a / around :op1 (c / chest :part-of (i / i))))
(a / and :op1 (c / create-01 :arg0 (r / raise-01 :arg1 (s / standard :mod (l / live-01) :mod (m / millions))) :arg1 (m2 / market :beneficiary (i / industry))) :op2 (l2 / lifted :arg0 (r2 / raise-01) :arg1 (n / nation :mod (w / whole)) :arg2 (u / undreamed :arg0 (n2 / nation) :arg1 (l3 / level :mod (p / produce-01)))))
(s / say-01 :arg0 (o / organization :name (n / name :op1 "College" :op2 "Board")) :arg1 (c / contrast-01 :arg1 (s2 / spend-02 :arg0 (p / person :arg1-of (a / average-03) :arg0-of (s3 / study-01)) :arg1 (r / rate-entity-91 :arg1 (m / more-than :op1 (m2 / monetary-quantity :quant 1,200 :unit (d / dollar))) :arg2 (t / temporal-quantity :quant (N / N-A) :unit (y / year))) :arg3 (s4 / supply-01 :arg0 (p2 / person) :arg1 (a2 / and :op1 (t2 / textbooks) :op2 (s5 / school)))) :arg2 (h / have-03 :arg0 (p3 / person :arg0-of (s6 / study-01)) :arg1 (o2 / option :consist-of (m3 / manage-01 :mod (t3 / this))))))
(c / close-01 :arg1 (r / round-05 :arg1 (l / live-01 :location (g / ground :location-of (t / train-01 :mod (m / military))) :location (l2 / location :name (n / name :op1 "Münsingen"))) :mod (l3 / last)) :time (d / date-entity :year 2004 :month 12) :time (e / end-01 :arg1 (o / operation :mod (m2 / military) :duration (t2 / temporal-quantity :quant (N / N-A) :unit (y / year)))))
(d / die-01 :arg1 (p / person :name (n / name :op1 "Stephen" :op2 "Jay" :op3 "Gould") :arg0-of (a / author-01)) :time (a2 / after :op1 (w / war :name (n2 / name :op1 "N-A")) :quant (t / temporal-quantity :quant (N / N-A) :unit (y / year))))
(( / ( :( (n / name) :op1 "Artem" :op2 "Deev")
(a / and :op1 (a2 / asbestos :arg1 (p / person :arg0-of (l / live-01 :location (h / home :arg1-of (l2 / live-01 :arg0 (w / we) :location (h2 / home :arg1-of (l3 / live-01 :arg0 (w2 / we) :location (h3 / home :arg1-of (l4 / live-01 :arg0 (w3 / we) :location (h4 / home :poss (w4 / we)))))))))) :prep-in (c / case :quant (m / many)) :mod (s / still)) :op2 (a3 / and :op1 (e / educate-01 :arg1 (w5 / we) :location (h5 / home :poss (w6 / we))) :op2 (a4 / and :op1 (e2 / educate-01 :arg1 (w7 / we)) :op2 (s2 / store :name (n / name :op1 (s3 / schools))))))
(s / say-01 :arg0 (p / person :arg1-of (i / include-91 :arg2 (p2 / person :quant 63 :arg0-of (h / have-org-role-91 :arg1 (c / country :name (n / name :op1 "N-A")) :arg2 (s2 / soldier)) :arg1-of (t / trap-01 :arg2 (l / location :name (n2 / name :op1 "Ilovaysk"))))) :arg0-of (h2 / have-org-role-91 :arg1 (c2 / country :name (n3 / name :op1 "N-A")) :arg2 (s3 / soldier))) :arg1 (s4 / sunday :arg1 (p3 / person :quant 63 :arg1-of (t2 / trap-01 :arg2 (n4 / name :op1 (r / russian) :op2 (p4 / paratroopers))) :arg1-of (c3 / capture-01 :location (i2 / inside :op1 (t3 / territory :location (c4 / country))))) :time (b / before :op1 (n5 / now) :quant (t4 / temporal-quantity :quant (N / N-A) :unit (w / week)))))
(m / multi-sentence :snt1 (w / win-01 :arg0 (t / team :mod (h / home)) :arg1 (t2 / team :mod (h2 / home)) :mod (a / also) :time (d / day :ord (o / ordinal-entity :value 6) :part-of (c / compete-01)) :mod (a2 / also)) :snt2 (a3 / add-02 :arg0 (p / person :name (n / name :op1 "Renat" :op2 "Saidov") :arg0-of (c2 / competed :location (o2 / over :op1 (c3 / class :mod (1 / 100kg))))) :arg2 (t3 / team?s)))
(m / multi-sentence :snt1 (a / and :op1 (c / come-01 :arg1 (t / time :ord (o / ordinal-entity :value 1) :mod (t2 / time :mod (v / very))) :arg4 (s / screen)) :op2 (r / realize-01 :polarity - :arg0 (i / i) :arg1 (n / nature :mod (i2 / illustrational) :poss (t3 / they)) :degree (b / bit))) :snt2 (f / film :mode (i3 / interrogative) :mod (r2 / real)))
(m / multi-sentence :snt1 (p / possible-01 :mode (i / interrogative) :arg1 (h / hack-04 :arg0 (n / nobody) :arg1 (n2 / nobody) :mod (m2 / massive))) :snt2 (c / carry-out-03 :arg0 (a / account) :arg1 (v / vulnerability :location (f / find-01 :arg1 (v2 / vulnerability :mod (p2 / phone) :poss (i2 / i))))))
(a / and :op2 (b / blame-01 :polarity - :arg1 (a2 / and :op1 (a3 / appropriate-02 :arg1 (a4 / appropriate-02 :arg1 (a5 / amends))) :op2 (a6 / appropriate-02 :arg1 (m / make-01 :arg1 (t / they)) :manner (w / way :mod (a7 / any) :instrument-of (m2 / make-01 :arg1 (t2 / they)))))))
(m / multi-sentence :snt1 (a / and :op1 (h / have-org-role-91 :arg0 (p / person :arg0-of (h2 / have-org-role-91 :arg1 (o / organization :name (n / name :op1 "MFA")) :arg2 (m2 / minister :mod (o2 / official)))) :arg1 (p2 / person :name (n2 / name :op1 "Roman" :op2 "Nadal") :arg0-of (h3 / have-org-role-91 :arg1 (o3 / organization) :arg2 (s / spokesperson))) :arg2 (p3 / person :mod (c / country) :arg0-of (h4 / have-org-role-91 :arg1 (o4 / organization) :arg2 (s2 / spokesperson)))) :op2 (c2 / comment-01 :arg0 (p4 / person) :arg3 (c3 / city :name (n3 / name :op1 "Paris")))) :snt2 (p5 / position-01 :arg1 (a2 / and :op1 (d / deliver-01 :arg1 (d2 / deliver-01 :arg1 (c4 / carrier :arg0-of (c5 / carry-01 :arg1 (h5 / helicopter))) :arg2 (c6 / country :name (n4 / name :op1 "Russia")))) :op2 (d3 / deliver-01 :arg1 (s3 / ship) :arg2 (c7 / country :name (n5 / name :op1 "Russia")))) :arg2 (t / thing :mod (u / unchanged))))
(a / and :op1 (d / decide-01 :arg0 (f / fan :mod (c / couple?s)) :arg1 (s / smoker :domain (p / person :name (n / name :op1 "Ksenia")) :mod (a2 / also))) :op2 (j / judge-01 :arg0 (f2 / fan) :arg1 (s2 / she) :arg2 (i / it)))
(h / handed :arg0 (p / person :arg0-of (r / rebel-01)) :arg1 (p2 / person :arg1-of (b / black-05) :quant (a / all)) :arg2 (f / force :mod (s / security)))
(t / think-01 :arg0 (i / i) :arg1 (a / and :op1 (s / see-01 :arg0 (p / person :quant (m / many)) :arg1 (i2 / it) :arg2 (o / ordinal-entity :value 1) :time (o2 / ordinal-entity :value 1)) :op2 (u / understand-01 :arg0 (i3 / i) :arg1 (a2 / and :op1 (d / disaster :poss (w / we)) :op2 (s2 / stop-01 :arg1 (t2 / this :mod (a3 / any)))))) :time (s3 / see-01 :arg0 (i4 / i) :arg1 (p2 / photograph-01 :arg0 (i5 / i) :arg1 (c / climb :poss (i6 / i)) :arg2 (w2 / window :mod (s4 / school)))))
(c / compete-02 :arg0 (a / and :op1 (p / product) :op2 (s / service)) :mod (f / fueling))
(d / die-01 :arg1 (p / person :name (n / name :op1 "Nellie" :op2 "Kershaw")) :location (l / location :name (n2 / name :op1 "Rochdale")))
(m / multi-sentence :snt1 (r / read-01 :arg0 (c / country :name (n / name :op1 "Russia")) :arg1 (i / information :topic (d / deliver-01 :arg1 (s / ship :arg0-of (c2 / carry-01 :arg1 (h / helicopter)))) :quant (m2 / more)) :arg2 (i2 / information :topic (d2 / deliver-01 :arg1 (c3 / carrier :arg0-of (c4 / carry-01 :arg1 (h2 / helicopter))))) :degree (m3 / more)) :snt2 (h3 / have-org-role-91 :arg0 (w / we) :arg1 (o / organization :name (n2 / name :op1 "Ogonyok"))))
(f / find-01 :arg0 (p / poll-01 :arg2 (o / organization :name (n / name :op1 "Journal" :op2 "du" :op3 "Dimanche") :location (c / country :name (n2 / name :op1 "N-A")))) :arg1 (r / rate-entity-91 :arg1 76 :arg2 (t / temporal-quantity :quant (N / N-A) :unit (y / year))) :arg1-of (c2 / cause-01 :arg0 (b / believe-01 :arg0 (p2 / person :mod (c3 / country)) :arg1 (r2 / risk-01 :arg0 (p3 / political-party :name (n3 / name :op1 "Socialist" :op2 "Party")) :arg2 (f2 / factions :arg0-of (r3 / rival-01) :quant (s / several)) :time (b2 / before :op1 (e / end-01 :arg1 (t2 / term :mod (t3 / term :quant 2017))))))))
(r / responsible-03 :polarity - :arg0 (i / i))
(m / multi-sentence :snt1 (a / ask-02 :mode (i / interrogative) :arg0 (p / person :arg0-of (l / lead-02 :arg1 (p2 / person :arg0-of (h / have-org-role-91 :arg1 (s / service) :arg2 (p3 / personnel))))) :arg1 (p4 / person :arg0-of (l2 / lead-02 :arg1 (p5 / person :arg0-of (s2 / serve-01)))) :arg2 (p6 / person :arg0-of (h2 / have-org-role-91 :arg1 (s3 / service) :arg2 (p7 / personnel)))) :snt2 (r / republic :mode (i2 / interrogative)))
(r / reveal-01 :arg0 (p / person :mod (c / country :name (n / name :op1 "N-A"))) :arg1 (s / signal-07 :polarity - :arg1 (d / disease)))
(a / ask-02 :arg0 (s / source) :arg1 (i / identify-01 :polarity - :arg1 (s2 / source)) :arg1-of (c / cause-01 :arg0 (p / public-02 :polarity - :arg1 (n / negotiate-01))))
(a / and :op2 (p / play-01 :mode (i / imperative) :arg0 (w / we) :arg1 (v / video :consist-of (v2 / video :name (n / name :op1 (g / genre) :op2 (g2 / genre) :op3 (t / theater) :op4 (t2 / theater) :op5 (t3 / theater) :op6 (t4 / theater) :op7 (t5 / theater) :op6 (t6 / theater) :op7 (t7 / theater)) :mod (o / old :degree (m / more)))) :arg2 (p2 / publication :name (n2 / name :op1 "YouTube")) :time (a2 / already)))
(t / think-01 :arg0 (w / we) :arg1 (w2 / win-01 :arg1-of (r / resemble-01 :arg2 (t2 / this))))
(m / multi-sentence :snt1 (m2 / manage-02 :arg0 (t / team :mod (c / country :name (n / name :op1 "N-A"))) :arg1 (g / get-01 :arg0 (t2 / team) :arg1 (d / drone :quant 3)) :mod (o / only) :time (t3 / time :mod (t4 / that))) :snt2 (a / and :op1 (s / silver :quant 1) :op2 (b / bronze :quant 1) :op3 (b2 / bronze :quant 2)))
(m / multi-sentence :snt1 (d / disagree-01 :arg0 (p / person :mod (c / country :name (n / name :op1 "N-A")))) :snt2 (i / increase-01 :arg1 (t / thing :arg2-of (p2 / price-01 :arg1 (d2 / dairy))) :arg3 (p3 / percentage-entity :value (N / N-A)) :time (s / since :op1 (b / begin-01 :arg1 (a / august)))))
FAILED_TO_PARSE#Couldn't convert to full AMR graph.
(a / account :mod (a2 / again :mod (o / once)) :mod (a3 / again :mod (o2 / once)))
(s / say-01 :arg0 (g / group) :arg1 (s2 / stop-01 :arg0 (d / doctor :mod (t / that) :quant (a / all) :location (s3 / state)) :arg1 (s4 / stop-01 :arg0 (d2 / doctor) :arg1 (c / carrying :arg0 (d3 / doctor) :arg1 (p / procedure)))) :condition (f / force-01 :arg1 (d4 / doctor :mod (o / other) :quant (a2 / all) :location (s5 / state)) :arg2 (s6 / stop-01 :arg0 (d5 / doctor) :arg1 (a3 / abortions))))
(e / end-up-03 :arg1 (h / he) :arg2 (s / spend-01 :arg0 (h2 / he) :arg3 (w / work-01 :arg0 (h3 / he)) :duration (t / temporal-quantity :quant (N / N-A) :unit (m / month))))
(r / remember-01 :arg0 (i / i) :arg1 (a / and :op1 (w / want-01 :arg0 (p / person :name (n / name :op1 "Damir")) :arg1 (e / eat-01 :arg0 (p2 / person) :arg1 (a2 / ass :part-of (p3 / person)))) :op2 (c / call-02 :arg0 (p4 / person) :arg1 (r2 / restaurant :mod (c2 / country :name (n2 / name :op1 "N-A")) :arg1-of (l / local-02) :mod (c3 / country) :quant (a3 / all))) :time (w2 / want-01 :arg0 (p5 / person) :arg1 (e2 / eat-01 :arg0 (p6 / person) :arg1 (a4 / ass :part-of (p7 / person))))))
(k / kill-01 :arg1 (p / person :quant (m / more-than :op1 (1 / 1/2)) :arg1-of (i / include-91 :arg2 (p2 / person :arg0-of (h / have-rel-role-91 :arg1 (t / they) :arg2 (c / child)))) :arg0-of (s / shock-01 :arg1 (w / world)) :arg0-of (s2 / shock-01 :arg1 (w2 / world))))
(c / contrast-01 :arg2 (a / and :op1 (c2 / come-01 :arg1 (p / person :arg0-of (h / have-org-role-91 :arg2 (p2 / person :arg0-of (m / manage-01)))) :arg4 (t / table :poss (i / i))) :op2 (a2 / ask-02 :arg0 (p3 / person) :arg1 (i2 / impressions :arg0 (i3 / i) :arg1 (g / game :name (n / name :op1 "N-A"))) :manner (c3 / casual))))
(h / have-concession-91 :arg2 (c / clear-06 :arg1 (c2 / clear-06 :arg0 (p / person :name (n / name :op1 "Aleksandr" :op2 "Lukashenko")) :arg1 (o / oppose-01 :polarity - :arg0 (s / side :quant (a / all)) :arg1 (p2 / peninsula :name (n2 / name :op1 "N-A")) :arg1-of (c3 / cause-01 :arg0 (a2 / and :op1 (f / forum :mod (m / main) :purpose (m2 / meet-03 :location (f2 / format :mod (r / russia-osce-ukraine)))) :op2 (m3 / meet-03 :arg0 (p3 / person :arg0-of (h2 / head-01 :arg1 (a3 / and :op1 (s2 / state) :op2 (o2 / organization :name (n3 / name :op1 "EU"))) :arg1-of (h3 / high-02)))))))) :time (b / briefing :mod (f3 / final))))
(r / record :mod (h / history) :mod (n / new) :domain (t / this))
(t / think-01 :arg0 (h / he) :arg1 (t2 / think-01 :arg0 (h2 / he) :arg1 (t3 / thing :arg1-of (d / do-02 :arg0 (y / you) :time (n / next))) :arg1-of (c / cause-01 :arg0 (f / feel-01 :arg0 (a / and :op1 (s / series :name (n2 / name :op1 (d2 / documentaries))) :op2 (s2 / series :name (n3 / name :op1 (d3 / documentaries) :op2 (s3 / series) :op3 (s4 / series)))) :arg1 (t4 / thing :arg1-of (d4 / do-02 :arg0 (y2 / you) :time (n4 / next))))) :arg1-of (c2 / cause-01 :arg0 (f2 / feel-01 :arg0 (a2 / and :op1 (s5 / series :name (n5 / name :op1 (m / marking)) :poss (h3 / he)) :op2 (s6 / series :mod (t5 / tv) :poss (h4 / he))) :arg1 (t6 / thing :arg1-of (d5 / do-02 :arg0 (y3 / you) :time (n6 / next)))))))
(r / remove-01 :arg0 (p / person :quant (n / none) :mod (k / kolbaya?s)) :arg1 (d / dish :arg1-of (s / single-02)) :arg2 (m / menus :arg0 (p2 / person)) :time (y / yet))
(m / multi-sentence :snt1 (p / possible-01 :mode (i / interrogative) :arg1 (h / hack-04 :arg0 (n / nobody) :arg1 (n2 / nobody) :mod (m2 / massive))) :snt2 (c / carry-out-03 :arg0 (a / account) :arg1 (v / vulnerability :location (f / find-01 :arg1 (v2 / vulnerability :mod (p2 / phone) :poss (i2 / i))))))
(m / multi-sentence :snt1 (e / end-01 :arg1 (t / thing :arg2-of (p / price-01 :arg1 (o / oil)))) :snt2 (a / and :op1 (w / weak-02 :arg1 (t2 / thing :arg2-of (p2 / price-01 :arg1 (o2 / oil)))) :op2 (p3 / politics) :op3 (s / sanction-02) :op4 (d / difficulty) :op5 (d2 / difficulty)))
(m / multi-sentence :snt1 (a / along :mode (i / interrogative) :prep-with (l / law)) :snt2 (r / require-01 :arg0 (b / bill) :arg1 (c / change-01 :arg1 (c2 / code :mod (t / tax-01)))) :snt3 (r2 / require-01 :arg0 (b2 / bill) :arg1 (c3 / change-01 :arg1 (c4 / code :mod (t2 / tax-01))) :manner (d / decrease-01 :arg1 (r3 / rate :mod (h / horror)) :arg3 (p / percentage-entity :value (N / N-A)) :arg4 (s / sell-01 :arg1 (g / good) :location (c5 / country :name (n / name :op1 "Russia"))))))
(a / aromatic :arg1 (a2 / and :op1 (p / person :arg0-of (o / own-01 :arg1 (c / cafés))) :op2 (p2 / person :arg0-of (o2 / own-01 :arg1 (c2 / cuisine :mod (c3 / continent :name (n / name :op1 "N-A")))))) :degree (m / more) :compared-to (o3 / ones :arg1 (p3 / product :mod (f / food))) :degree (m2 / more) :compared-to (o4 / one :mod (c4 / continent :name (n2 / name :op1 "N-A"))))
(a / and :op1 (o / old :degree (m / more) :domain (i / i) :time (n / now)) :op2 (u / use-01 :arg0 (p / person) :arg1 (s / say-01 :arg0 (p2 / person) :arg1 (t / true :polarity - :domain (p3 / person)))))
(e / expect-01 :arg1 (a / and :op1 (p / person :arg0-of (m / monitor-01 :arg1 (m2 / mood :arg1-of (p2 / public-02)))) :op2 (p3 / person :arg0-of (r / research-01) :arg1-of (e2 / employ-01 :arg0 (p4 / person :name (n / name :op1 "Ofnow") :arg0-of (m3 / monitor-01 :arg1 (m4 / mood :arg1-of (p5 / public-02))))) :arg0-of (r2 / research-01))) :time (b / before :op1 (n2 / now) :quant (o / or :op1 (t / temporal-quantity :quant (N / N-A) :unit (y / year)) :op2 (t2 / temporal-quantity :quant (N2 / N-A) :unit (y2 / year)))) :time (b2 / before :op1 (r3 / relate-01 :arg1 (e3 / event) :arg2 (a2 / above))) :arg0-of (c / cause-01 :arg1 (a3 / and :op1 (e4 / expect-01 :arg1 (p6 / paper :arg1 (a4 / and :op1 (m5 / money) :op2 (e5 / energy))) :op2 (g / give-01 :arg1 (a5 / and :op1 (m6 / money) :op2 (e6 / energy)) :arg2 (a6 / and :op1 (m7 / money) :op2 (e7 / energy)))))))
(r / reserve-01 :arg0 (c / country :name (n / name :op1 "Russia")) :arg1 (r2 / right-05 :arg1 (c2 / country) :arg2 (e / enact :arg0 (c3 / country) :arg1 (i / interest :arg1-of (l / legitimate-02) :poss (c4 / country)))) :arg2 (p / protect-01 :arg0 (c5 / country) :arg1 (i2 / interest :arg1-of (l2 / legitimate-02) :poss (c6 / country)) :time (e2 / event :mod (i3 / introduce-02 :arg1 (s / sanction-02 :arg0 (p2 / person :mod (c7 / country :name (n2 / name :op1 "Russia"))))))))
(a / and :op1 (t / tell-01 :arg0 (y / you) :arg1 (s / story) :arg2 (y2 / you) :time (a2 / always)) :op2 (p / place :mod (g / great) :domain (t2 / that)))
(p / publish-01 :arg1 (o / order :arg1-of (r / relevant-01)) :medium (i / internet) :purpose (i2 / information :arg1-of (l / legal-02)))
(m / multi-sentence :snt1 (a / and :op1 (s / scholars :arg0 (o / organization :name (n / name :op1 "American" :op2 "Enterprise" :op3 "Institute")) :arg1 (p / person :name (n2 / name :op1 "Christina" :op2 "Sommers") :arg0-of (a2 / author-01 :arg1 (f / feminist)) :arg0-of (a3 / author-01 :arg1 (f2 / feminist)))) :op2 (t / tell-01 :arg0 (p2 / person) :arg1 (v / vulnerable :degree (m2 / more :degree (f3 / far)) :compared-to (s2 / sisters :poss (p3 / person)))) :arg2 (s3 / she)) :snt2 (c / contrast-01 :arg1 (v2 / vulnerable :degree (m3 / more :degree (f4 / far)) :compared-to (s4 / sisters :poss (p4 / person))) :arg2 (c2 / counter-01 :arg0 (r / remark-01 :arg0 (p5 / person :name (n3 / name :op1 "Steinem")) :topic (p6 / person :name (n4 / name :op1 "Ferguson"))) :arg1 (c3 / criticize-01 :arg1 (p7 / person)) :time (p8 / past))))
FAILED_TO_PARSE#Couldn't convert to full AMR graph.
(a / available-02 :arg2 (N / N-A) :arg1 (t / thing) :arg3 (r / resource :poss (r2 / resource :mod (b / budget :mod (f / federal)) :arg1-of (s / set-up-03 :beneficiary (o / organization :name (n / name :op1 "Ministry" :op2 "of" :op3 "Communications"))))))
(p / plan-01 :arg1 (a / and :op1 (p2 / present-01 :arg1 (r / result :arg1-of (c / conduct-01 :arg0 (s / session :arg1-of (c2 / conduct-01 :arg0 (s2 / session :mod (p3 / person :arg1-of (e / expert-01))) :time (b / before :op1 (n / now) :duration (t / temporal-quantity :quant (N / N-A) :unit (y / year)))))))) :op2 (p4 / presented :arg1 (c3 / checklist :mod (f / final) :purpose (e2 / evaluate :arg1 (e3 / effective-04 :arg0 (o / organization :mod (s3 / science))))))))
(s / sentence-01 :arg2 (t / thing :arg2-of (s2 / sentence-01) :arg1-of (l / legal-02)))
(a / and :op1 (e / explain-01 :arg0 (c / country :mod (t / this)) :arg1 (r / right-05 :arg1 (c2 / country) :arg2 (o / organize-01 :arg0 (c3 / country) :arg1 (u / union-02 :arg1 (c4 / country) :arg2 (t2 / trade-01))))) :op2 (e2 / explain-01 :arg0 (c5 / country) :arg1 (e3 / engage-01 :arg1 (u2 / union-02 :arg1 (p / person :arg0-of (h / have-rel-role-91 :arg1 (a2 / and :op1 (c6 / corporation) :op2 (a3 / agency :mod (g / government-organization :arg0-of (g2 / govern-01))))) :arg2 (a4 / agency :mod (g3 / government-organization :arg0-of (g4 / govern-01)))) :mod (c7 / collective)) :arg2 (p2 / person :arg0-of (p3 / partner-01 :arg1 (a5 / and :op1 (c8 / corporation) :op2 (a6 / agency :mod (g5 / government-organization :arg0-of (g6 / govern-01)))))))) :time (c9 / counseled :arg0 (c10 / country :mod (t3 / this)) :arg1 (c11 / country :mod (o2 / other)) :manner (a7 / amr-unknown)))
(c / cheese :time (a / after :op1 (e / embargo-01)))
(s / say-01 :arg0 (h / he) :arg1 (p / possible-01 :polarity - :arg1 (s2 / save-02 :arg0 (i / i) :arg1 (s3 / she))))
(h / hanging-07 :arg1 (m / meat :consist-of (m2 / meat)) :location (r / room :mod (c / cold)) :duration (t / temporal-quantity :quant (N / N-A) :unit (d / day)) :location (t2 / temperature :op1 (v / value-interval :op1 1 :op2 2)))
(c / contrast-01 :arg2 (s / start-01 :arg0 (p / person :arg0-of (t / teach-01)) :arg1 (w / work-01 :arg0 (p2 / person)) :time (d / date-entity :month 9 :day 1)))
(h / hard-02 :arg1 (s / see-01 :arg0 (i / i) :arg1 (a / appeal-01 :arg1 (w / watch-01 :arg1 (g / game))) :arg1-of (i2 / instead-of-91 :arg2 (w2 / watch-01 :arg0 (i3 / i) :arg1 (p / person :arg0-of (c / controller :arg1 (i4 / i))))) :arg1-of (i5 / instead-of-91 :arg2 (w3 / watch-01 :arg0 (i6 / i) :arg1 (p2 / person :arg0-of (d / declare-02 :arg1 (p3 / play-01 :arg0 (p4 / person) :arg1 (s2 / sports))))))))
(s / see-01 :arg0 (y / you) :arg1 (i / it) :time (t / time :mod (a / all)))
(a / and :op1 (c / criticize-01 :arg0 (s / some) :arg1 (m / movement-07 :arg1 (c2 / central))) :op2 (s2 / say-01 :arg0 (s3 / some) :arg1 (p / put-01 :arg0 (d / demonstrate-01 :arg0 (i / it)) :arg1 (l / lifeblood :poss (c3 / city :name (n / name :op1 "Hong" :op2 "Kong"))) :arg2 (r / risk-01))))
(c / cause-01 :arg0 (f / fish :mod (w / wild) :domain (t / they)) :arg1-of (s / sure-02))
(a / and :op2 (s / succeed-01 :arg1 (i / it)))
(c / contrast-01 :arg1 (d / describe-01 :arg0 (p / person :mod (c2 / country :name (n / name :op1 "N-A"))) :arg1 (s / substance :quant 1)) :arg2 (d2 / describe-01 :arg0 (g / group :consist-of (m / mineral :quant 6)) :arg1 (s2 / substance :quant 1)) :mod (i / in-fact))
(b / become-01 :arg1 (p / product :name (n / name :op1 "N-A")) :arg2 (t / thing :mod (i / internet) :arg1-of (s / share-01 :arg2 (a / and :op1 (c / company :name (n2 / name :op1 "Facebook")) :op2 (t2 / twitter)))))
(s / suggest-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (l / location :name (n / name :op1 "United" :op2 "Russia")) :arg2 (d / deputy))) :arg1 (a / and :op1 (p2 / person :arg0-of (h2 / have-org-role-91 :arg2 (m / mayor))) :op2 (p3 / person :arg0-of (h3 / have-org-role-91 :arg1 (a2 / and :op1 (p4 / person :arg0-of (h4 / have-org-role-91 :arg1 (o / organization :name (n2 / name :op1 "City" :op2 "Duma")) :arg2 (m2 / mayor))) :op2 (p5 / person :arg0-of (h5 / have-org-role-91 :arg1 (o2 / organization :name (n3 / name :op1 "City" :op2 "Duma")) :arg2 (g / governor))) :op3 (p6 / person :arg0-of (r / resign-01 :arg1 (o3 / organization))) :op4 (p7 / person :arg0-of (r2 / resign-01 :arg1 (p8 / person))))))) :arg2 (p9 / person :name (n4 / name :op1 "Aleksandr" :op2 "Kosintsev")) :time (d2 / date-entity :month 7 :day 24))
(a / and :op1 (f / fall-01 :arg1 (m / missile) :arg4 (s / sea :location (c / country :name (n / name :op1 "Japan"))) :arg1-of (a2 / allege-01)) :op2 (a3 / announce-01 :arg0 (o / organization :name (n2 / name :op1 "South" :op2 "Korean" :op3 "Joint" :op4 "Chiefs" :op5 "of" :op6 "Staff"))) :arg1-of (a4 / allege-01))
(s / say-01 :arg0 (o / organization :name (n / name :op1 "Carnival")) :arg1 (o2 / offer-01 :arg0 (o3 / organization :name (n2 / name :op1 "Prestige" :op2 "Cruises")) :arg1 (d / document :mod (r / register-02)) :arg3 (p / percentage-entity :value (N / N-A) :arg3-of (i / include-91 :arg2 (c / capacity :mod (p2 / passenger :mod (c2 / cruise) :mod (c3 / cruise) :mod (c4 / cruise) :mod (c5 / country))))) :arg3 (p3 / percentage-entity :value (N2 / N-A)) :arg4 (a / and :op1 (p4 / percentage-entity :value (N3 / N-A)) :op2 (c6 / capacity :name (n3 / name :op1 (n4 / norwegian)) :mod (p5 / passenger) :mod (c7 / cruise)))))
(a / address-02 :arg0 (p / person :name (n / name :op1 "Merkel")) :arg1 (s / speech :topic (m / matter :topic (t / this))) :time (d / date-entity :month 9 :day 1))
(a / and :op1 (s / study-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (o / organization :name (n / name :op1 "University" :op2 "of" :op3 "California" :op4 "," :op5 "Santa" :op6 "Cruz")))) :arg1 (m / mixing :mod (t / turbulent))) :op2 (a2 / affect-01 :arg0 (p2 / person) :arg1 (h2 / homogeneity :mod (c / chemical) :location (c2 / cluster :mod (s2 / star)))))
(t / tell-01 :arg0 (p / person :name (n / name :op1 "Edelsten") :arg0-of (p2 / propose-01 :arg1 (l / location :name (n2 / name :op1 "Grecko")) :time (m / month :mod (l2 / last)))) :arg1 (d / disgust-01 :arg0 (i / it) :arg0-of (d2 / disgust-01)) :arg2 (i2 / idiot))
(b / believe-01 :arg0 (i / i) :arg1 (o / oblige-02 :polarity - :arg1 (i2 / i) :arg2 (s / say-01 :arg0 (i3 / i) :arg1 (r / reply-01 :arg0 (p / person :name (n / name :op1 "Esme" :op2 "Nussbaum"))))))
(i / involve-01 :arg1 (p / person :quant (s / some) :arg1-of (i2 / include-91 :arg2 (t / they)) :arg0-of (t2 / target-01 :arg1 (p2 / person :arg0-of (h / have-org-role-91 :arg1 (g / government-organization :arg0-of (g2 / govern-01)) :arg2 (o / official)))) :arg0-of (h2 / have-org-role-91 :arg1 (g3 / government-organization :arg0-of (g4 / govern-01)) :arg2 (o2 / official))) :arg2 (p3 / person :arg0-of (h3 / have-org-role-91 :arg1 (g5 / government-organization :arg0-of (g6 / govern-01)) :arg2 (o3 / official))) :time (d / date-entity :month 12))
(s / say-01 :arg0 (t / they) :arg1 (g / go-01 :arg1 (p / person :arg0-of (s2 / survive-01 :arg1 (w / wouldn?t))) :arg4 (f / fight-01 :arg0 (p2 / person) :arg2 (s3 / situation :arg1-of (a / actual-02) :location (s4 / southeast :part-of (c / country :name (n / name :op1 "Ukraine")))))))
(r / realize-01 :arg0 (i / i) :arg1 (o / obligate-01 :arg1 (i2 / i) :arg2 (a / and :op1 (l / leave-11 :arg0 (i3 / i)) :op2 (s / sort :domain (i4 / i)))) :time (t / then))
(f / fair :domain (c / call-01 :arg1 (- / -lrb- :name (n / name :op1 (c2 / classic) :op2 (s / salade) :op3 260) :mod (c3 / classic)) :arg2 (c4 / crime-02 :arg1 (p / people :mod (b / belgian)) :mod (s2 / sort :mod (s3 / some)) :arg1-of (l / long-03 :degree (v / very) :time (b2 / before :op1 (n2 / now) :quant (s4 / some :op1 (t / temporal-quantity :arg1-of (l2 / long-03 :degree (v2 / very) :degree (v3 / very))))))) :arg0-of (c5 / cause-01 :arg1 (o / onion :arg1 (p2 / pickled) :arg2 (r / reason :quant (s5 / some)) :mod (p3 / plus)))))
(f / follow-01 :arg1 (t / thing :arg1-of (p / precede-01 :arg2 (a / account :poss (p2 / person :name (n / name :op1 "Perry"))))) :arg2 (a2 / account :poss (p3 / person) :arg0-of (d / disavow :arg1 (p4 / post))) :time (l / late :degree (m / more)))
(c / contrast-01 :arg1 (c2 / cover-01 :polarity - :arg0 (s / system :arg0-of (i / insure-02) :mod (t / this)) :arg1 (a / account :mod (t2 / this)) :mod (a2 / also)) :arg2 (t3 / try-01 :arg0 (n / no-one) :arg1 (s2 / snuff :arg0 (n2 / no-one) :arg1 (a3 / account)) :time (s3 / so-far)))
(c / contrast-01 :arg1 (w / want-01 :arg0 (h / he) :arg1 (s / say-01 :arg0 (h2 / he) :arg1 (j / joke-01 :arg2 (j2 / joke-01)))) :arg2 (g / give-01 :arg0 (h3 / he) :arg1 (f / finger :quant 2) :arg2 (l / lip :poss (h4 / he)) :mod (a / again)))
(c / choose-01 :arg0 (p / person :arg0-of (c2 / choose-01 :arg1 (n / name :poss (p2 / person)))) :arg1 (n2 / name :poss (p3 / person)) :arg1-of (c3 / cause-01 :arg0 (p4 / possible-01 :arg1 (e / expect-01 :arg0 (p5 / person :quant (s / some)) :arg1 (t / take-01 :arg0 (p6 / person) :arg1 (t2 / thing :arg2-of (n3 / name-01 :arg1 (p7 / person)))) :mod (o / only) :time (u / until :op1 (n4 / now)))) :arg1-of (c4 / cause-01 :arg0 (c5 / clear-06 :arg1 (f / feel-01 :arg0 (p8 / person) :arg1 (f2 / feel-01 :arg0 (p9 / person) :arg1 (f3 / feel-01 :arg0 (p10 / person) :arg1 (r / report :arg1 (b / blood :poss (p11 / person)) :arg2 (v / veins :arg0 (p12 / person))))))) :mod (o2 / only))))
(h / have-condition-91 :arg1 (o / option :mod (g / good) :domain (u / use-01)) :arg2 (d / do-02 :polarity - :arg0 (y / you) :arg1 (o2 / or :op1 (n / note :poss (p / person)) :op2 (w / wear-01 :arg0 (p2 / person)))))
(a / accept-01 :arg0 (p / person :mod (c / country :name (n / name :op1 "N-A"))) :arg1 (m / merit-01 :arg0 (r / right :mod (h / human) :domain (r2 / right :mod (h2 / human))) :mod (b / basic)))
(s / say-01 :arg0 (s2 / study :arg1-of (r / report-01 :arg0 (o / organization :name (n / name :op1 "HTA"))) :arg1-of (r2 / report-01 :arg0 (o2 / organization :name (n2 / name :op1 "Financial" :op2 "Times")))) :arg1 (p / possible-01 :arg1 (r3 / result-01 :arg1 (l / lose-02 :arg1 (n3 / number :quant-of (p2 / person :arg1-of (a / age-01 :arg2 (t / temporal-quantity :quant (N / N-A) :unit (y / year))) :arg1-of (a2 / age-01 :arg2 (t2 / temporal-quantity :quant (N2 / N-A) :unit (y2 / year)))) :mod (p3 / particular))) :arg2 (t3 / temporal-quantity :quant (N3 / N-A) :unit (y3 / year)) :arg1-of (c / cause-01 :arg0 (r4 / reach-01 :arg0 (p4 / person :mod (y4 / young) :arg0-of (c2 / consume-01)) :arg1 (g / group :arg1-of (a3 / age-01 :arg2 (t4 / temporal-quantity :quant (N4 / N-A) :unit (y5 / year)))))))))
(s / say-01 :arg0 (h / he) :arg1 (a / and :op1 (r / remain-01 :arg1 (d / duty :poss (w / we)) :arg3 (s2 / side :poss (h2 / he))) :op2 (s3 / say-01 :arg0 (h3 / he) :arg1 (t / thing :arg1-of (s4 / say-01 :arg0 (h4 / he))))))
(w / way :mod (o / only) :manner-of (e / ensure-01 :arg1 (a / advertising :arg1 (a2 / advertising) :arg1-of (s / steady-01))) :domain (t / this))
(c / contrast-01 :arg1 (h / have-03 :arg0 (h2 / he) :arg1 (s / surgeries :quant (s2 / several))) :arg2 (p / possible-01 :polarity - :arg1 (c2 / coexist-01 :arg1 (h3 / he))))
(p / pride-01 :arg0 (i / i) :arg2 (i2 / introduce-02 :arg0 (i3 / i) :arg1 (a / act-02 :arg0 (p2 / person :name (n / name :op1 "John" :op2 "Lewis") :arg0-of (h / have-org-role-91 :arg2 (i4 / icon :mod (r / right :mod (c / civil))))) :manner (e / employee))) :arg1-of (c2 / cause-01 :arg0 (a2 / amr-unknown)))
FAILED_TO_PARSE#Couldn't convert to full AMR graph.
(s / say-01 :arg0 (p / person :name (n / name :op1 "Roizman") :arg0-of (h / have-org-role-91 :arg2 (m / mr.))) :arg1 (a / accuse-01 :arg0 (p2 / person) :arg1 (s2 / she) :arg2 (p3 / participate-01 :arg0 (p4 / person) :arg1 (c / crime-02 :arg1-of (c2 / commit-02 :arg0 (p5 / person :arg0-of (h2 / have-rel-role-91 :arg1 (s3 / she) :arg2 (e / ex-spouse))) :arg1-of (a2 / allege-01))))))
(e / exemplify-01 :arg0 (a / admit-01 :arg0 (o / organization :name (n / name :op1 "Marks" :op2 "&" :op3 "Spencer")) :arg1 (n2 / negligently :arg1 (p / person :name (n3 / name :op1 "Janice" :op2 "Allen") :mod (e2 / expose)) :arg2 (a2 / asbestos :arg0 (p2 / person)))))
(j / judge-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (f / federal :mod (c / country :name (n / name :op1 "U.S."))) :arg3 (j2 / judge-01))) :arg1 (e / enforce-01 :arg1 (l / law :mod (e2 / email))) :duration (t / temporary) :arg1-of (c2 / cause-01 :arg0 (e3 / enforce-01 :arg0 (p2 / person) :arg1 (l2 / law :mod (e4 / email) :arg0-of (c3 / close-01 :arg1 (c4 / clinics :quant 5 :mod (a / abort-01) :mod (a2 / all) :location (s / state)) :arg1-of (l3 / likely-01))))))
(s / say-01 :arg0 (p / person :name (n / name :op1 "Graham" :op2 "Abbott")) :arg2 (l / language :name (n2 / name :op1 "N-A")))
(r / ready-02 :arg1 (h / he) :arg2 (a / and :op1 (a2 / abandon-01 :arg0 (h2 / he) :arg1 (p / person :arg1-of (i / include-91 :arg2 (p2 / person :arg0-of (h3 / have-rel-role-91 :arg1 (h4 / he) :arg2 (d / dishes))) :arg3 (p3 / percentage-entity :value (N / N-A))))) :op2 (r2 / rework :arg0 (h5 / he) :arg1 (p4 / person :quant (1 / 1/2) :arg1-of (i2 / include-91 :arg2 (p5 / person :arg0-of (h6 / have-rel-role-91 :arg1 (h7 / he) :arg2 (d2 / dishes))))))) :source (r3 / restaurant :name (n / name :op1 (r4 / restaurant) :op2 (r5 / restaurant) :op3 (r6 / restaurants))))
(c / contrast-01 :arg2 (g / go-01 :arg1 (w / word :mod (f / final)) :arg4 (s / staff :mod (c2 / coaching) :arg2-of (h / head-01 :arg0 (p / person :name (n / name :op1 "Gogi" :op2 "Koguashvili")))) :time (a / always)))
(a / and :op1 (l / last-01 :arg1 (h / he) :arg2 (t / temporal-quantity :quant (N / N-A) :unit (y / year)) :time (b / before)) :op2 (a2 / activity-06 :arg0 (h2 / he) :degree (v / very) :mod (s / still)))
(r / rate-entity-91 :arg1 (m / monetary-quantity :quant 3 :unit (d / dollar)) :arg2 (v / volume-quantity :quant (N / N-A) :unit (g / gallon)))
(m / multi-sentence :snt1 (m2 / make-01 :arg1 (m3 / music :poss (t / they)) :arg1-of (i / instead-of-91 :arg2 (m4 / make-01 :arg1 (m5 / music :poss (t2 / they))))) :snt2 (c / contrast-01 :arg1 (m6 / make-01 :arg1 (m7 / music :poss (t3 / they))) :arg2 (f / feel-01 :arg0 (i2 / i) :arg1 (j / justify-01 :polarity - :arg1 (i3 / it)))))
(m / multi-sentence :snt1 (s / say-01 :arg0 (t / they) :arg1 (i / it :mod (e / exact))) :snt2 (a / and :op1 (p / passageways :mode (i2 / interrogative) :arg1 (r / room :poss (w / we)) :arg2 (l / location :name (n / name :op1 "Belaya" :op2 "River")) :arg1-of (b / build-01 :arg0 (p2 / person :mod (o / old) :quant (s2 / some) :arg0-of (b2 / believe-01) :arg0-of (l2 / live-01 :location (h / here) :time (t2 / time :quant 1))))) :op2 (p3 / possible-01 :arg1 (t3 / take-01 :arg0 (p4 / person) :arg1 (r2 / refuge) :arg2 (c / case-03 :mod (d / danger))))))
(a / and :op1 (b / brutal-02 :arg1 (p / process-02 :arg1 (r / rehearsal))) :op2 (r2 / read-01 :arg0 (i / i) :arg3 (t / temporal-quantity :quant (N / N-A) :unit (m / month)) :time (b2 / before :op1 (d / do-02 :arg0 (w / we) :arg1 (p2 / process-02)))))
(r / refinery :domain (p / plant :mod (r2 / refinery :mod (o / oil)) :mod (l / lisichansky)) :location (c / country :name (n / name :op1 "Ukraine")) :mod (m / main) :arg1-of (c2 / cause-01 :arg0 (p2 / phase :ord (o2 / ordinal-entity :value 1) :arg1-of (p3 / put-01 :arg2 (o3 / operation) :time (d / date-entity :month 10 :year 1976)))))
(d / drop-01 :arg1 (f / firefighter-troopers :quant 4) :location (s / site :location-of (f2 / fire-01)) :arg1-of (f3 / follow-01 :arg2 (d2 / detect-01 :arg1 (f4 / fire))))
(m / multi-sentence :snt1 (c / contrast-01 :arg2 (t / take-01 :arg0 (d / document) :arg1 (a / account :arg0-of (p / produce-01 :polarity - :arg1 (p2 / product) :location (c2 / country :name (n / name :op1 "Russia")))))) :snt2 (a2 / and :op1 (a3 / apply-02 :mode (i / interrogative) :arg1 (p3 / product :arg0-of (e / exemplify-01)) :arg2 (a4 / and :op1 (f / fruits) :op2 (f2 / fruit) :op3 (v / vegetables))) :op2 (a5 / apply-02 :arg1 (p4 / product) :arg2 (t2 / they) :purpose (a6 / avoid-01 :arg0 (t3 / they) :arg1 (c3 / cause-01 :arg0 (t4 / they) :arg1 (p5 / possible-01 :arg1 (d2 / discomfort :arg1 (p6 / person :arg0-of (c4 / consume-01)))))))))
(p / person :mod (g / good) :domain (p2 / person :name (n / name :op1 "Dawn")))
(d / determined-02 :arg0 (a / authority :mod (c / country :name (n / name :op1 "N-A"))) :arg1 (t / thing :quant (a2 / area-quantity :quant (N / N-A) :unit (h / hectare)) :arg0-of (b / belong-01 :arg1 (l / land :poss (g / government-organization)))))
(u / understand-01 :arg0 (i / i) :arg1 (p / point :mod (m / make-01 :arg0 (y / you) :arg1 (p2 / point :mod (m2 / make-01 :arg0 (y2 / you) :arg1 (v / voice :mod (q / quiet)))))) :degree (f / full) :arg1-of (c / cause-01 :arg0 (a / and :op1 (f2 / finish-01 :arg0 (s / supervisor :poss (s2 / she) :mod (c2 / certain)) :arg1 (s3 / speak-01 :manner (s4 / speak-01 :arg0 (s5 / she)))) :op2 (s6 / say-01 :arg0 (i2 / i) :arg1 (m3 / more :polarity - :compared-to (h / healed :arg1 (w / we) :arg1-of (e / effective-04) :compared-to (d / deluded :arg0 (w2 / we) :arg1 (w3 / we))))))))
(p / play-11 :polarity - :arg0 (s / songs :mod (s2 / sort :mod (t / that))) :arg2 (c / consolation) :time (n / no-longer))
(a / affect-01 :arg1 (i / introduce-02 :arg1 (q / quota)))
(a / and :op1 (d / died :quant (l / lot) :time (a2 / after :op1 (d2 / die-01 :arg1 (p / person :arg0-of (h / have-rel-role-91 :arg1 (h2 / he) :arg2 (m / mother)))))) :op2 (r / reflective :arg0 (p2 / person :name (n / name :op1 "Henry")) :arg1 (r2 / relation-03 :arg0 (p3 / person) :arg2 (p4 / person :arg0-of (h3 / have-rel-role-91 :arg1 (h4 / he) :arg2 (f / father))))))
(k / kill-01 :arg1 (a / and :op1 (p / person :quant 66 :arg0-of (h / have-org-role-91 :arg2 (s / soldier))) :op2 (c / civilian :quant 6) :op3 (c2 / civilian :quant 6) :arg2-of (i / include-01 :arg1 (p2 / person :arg0-of (w / work-01 :mod (e / email))))))
(a / and :op1 (p / person :name (n / name :op1 "Olesia" :op2 "Karsakova") :arg0-of (h / have-org-role-91 :arg1 (l / lady :mod (y / young)) :arg3 (a2 / apprentice-01 :arg0 (p2 / person)))) :op2 (s / show-01 :arg0 (p3 / person) :arg1 (s2 / story :ord (o / ordinal-entity :value 2) :poss (h2 / house))))
(m / multi-sentence :snt1 (d / decide-01 :arg0 (g / government-organization :arg0-of (a / administrate-01) :time (c / current)) :manner (d2 / differ-02)) :snt2 (s / state-01 :arg0 (h / he)))
(a / about :op1 50 :domain (i / i) :mod (j / just))
(( / ( :( (n / name) :op1 "Ministry" :op2 "of" :op3 "Communications")
(s / say-01 :arg0 (w / woman :mod (c / country :name (n / name :op1 "N-A"))) :arg1 (s2 / spend-02 :arg0 (w2 / woman) :arg1 (t / temporal-quantity :quant (N / N-A) :unit (y / year)) :arg2 (d / die-01 :arg1 (w3 / woman)) :time (a / after :op1 (m / misdiagnosis :arg1 (w4 / woman)))))
(a / and :op1 (w / worth :domain (r / renting :poss (y / you))) :op2 (r2 / remember-01 :arg0 (y2 / you) :arg1 (a2 / and :op1 (r3 / return-01 :arg1 (y3 / you) :arg3 (t / they) :arg1-of (r4 / reasonable-02)) :op2 (c / care-01 :polarity - :arg0 (y4 / you) :arg1 (o / own-01 :arg0 (y5 / you) :arg1 (t2 / they)) :time (a3 / after :op1 (c2 / complete-01 :arg0 (y6 / you) :arg1 (c3 / class)))))))
(s / stipulate-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (g / government-organization :name (n / name :op1 "Kremlin")) :arg2 (s2 / spokesman))) :arg1 (a / and :op1 (a2 / approach-02 :arg0 (p2 / person :arg0-of (l / lead-02 :arg1 (c / country :name (n2 / name :op1 "N-A")))) :arg1 (d / deal-01 :arg0 (p3 / person) :arg2 (r / rebel-01 :arg0 (p4 / person) :arg1 (r2 / rebel-01 :arg0 (s3 / separatist)) :location (e / east)) :manner (d2 / differ-02))) :op2 (l2 / location :location-of (s4 / seize-01 :arg0 (p5 / person :quant (m / majority) :arg1-of (i / include-91 :arg2 (p6 / population :quant 2000000 :mod (e2 / ethnic)))) :arg1 (p7 / person)))))
(p / possible-01 :arg1 (f / find-01 :arg1 (e / edition :mod (o / old) :part-of (c / cost-01 :arg2 (l / late :degree (m / most)))) :frequency (o2 / often)) :condition (s / so))
(k / know-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (c / company :name (n / name :op1 "Abbott")))) :arg1 (c2 / come-01 :arg1 (l / lining :location (a / around :op1 (l2 / lungs :poss (h2 / he))))))
(s / set-02 :arg0 (p / person :name (n / name :op1 "Charles" :op2 "Macnair") :arg0-of (h / have-org-role-91 :arg2 (s2 / sheriff))) :arg1 (d / date :mod (t / try-02)) :time (d2 / date-entity :season (N / N-A)))
(d / deal-01 :arg0 (p / person :arg0-of (f / fight-01) :source (l / location :name (n / name :op1 "Donbass"))) :arg2 (o / organization :name (n2 / name :op1 "Donetsk" :op2 "Oblast")))
(m / multi-sentence :snt1 (d / differ-02 :arg1 (p / project :time (c / current)) :arg2 (p2 / project :time (c2 / current)) :mod (m2 / main)) :snt2 (c3 / contrast-01 :arg1 (o / offer-01 :arg0 (p3 / person :arg0-of (h / have-org-role-91 :arg2 (m3 / minister))) :arg1 (r / receive-01 :arg0 (p4 / person :arg0-of (h2 / have-org-role-91 :arg2 (m4 / minister))) :arg1 (p5 / person :arg0-of (h3 / have-org-role-91 :arg2 (m5 / minister))) :purpose (r2 / receive-01 :arg0 (p6 / person) :arg1 (r3 / rebates :mod (s / subsequent))))) :arg2 (o2 / opportunity :mod (a / also) :domain (b / buy-01 :arg0 (p7 / person :mod (o3 / old)) :arg1 (p8 / product-of :op1 1 :op2 1) :time (a2 / after :op1 (o4 / old) :quant (m6 / more-than :op1 (t / temporal-quantity :quant (N / N-A) :unit (y / year))))))) :snt3 (r4 / report-01 :arg0 (p9 / publication :name (n / name :op1 "Interfax"))))
(v / visit-01 :arg0 (p / person :name (n / name :op1 "Reuven" :op2 "Rivlin") :arg0-of (h / have-org-role-91 :arg2 (p2 / president))) :arg1 (k / kibbutz) :arg1-of (c / close-10 :arg2 (b / border-01 :arg1 (p3 / person) :arg2 (c2 / country-region :name (n2 / name :op1 "Gaza")))) :purpose (o / offer-01 :arg0 (p4 / person) :arg1 (s / support-01 :arg0 (p5 / person))))
(s / state-01 :arg0 (c / comment-01 :medium (b / bill :arg1-of (i / introduce-02 :location (o / organization :name (n / name :op1 "State" :op2 "Duma") :time (t / today))) :arg0-of (h / have-org-role-91 :arg1 (o2 / organization :name (n2 / name :op1 "Duma" :op2 "Committee" :op3 "for" :op4 "Information" :op5 "Policy")) :arg2 (d / deputy)))) :arg1 (s2 / see-01 :arg0 (p / person) :arg1 (p2 / problem :polarity - :topic (c2 / change-01 :arg1 (e / enter-01 :arg1 (l / law :topic (d2 / data :mod (d3 / data :arg1-of (p3 / personal-02)))))))))
(s / say-01 :arg0 (d / data) :arg1 (a / appear-02 :arg1 (b / be-located-at-91 :arg1 (g / garden :mod (b2 / business)) :arg2 (m / mend) :mod (a2 / also))))
(r / report-01 :arg0 (i / i) :arg1 (t / this))
(b / be-temporally-at-91 :arg1 (t / that) :arg2 (a / and :op1 (k / kitchen :arg0 (t2 / they) :arg1 (k2 / kitchen :location (a2 / and :op1 (c / cubbyhole :mod (c2 / cubbyhole)) :op2 (g / genius :source (c3 / closet :time (f / former))))))))
(s / skiing :arg1 (h / he) :location (l / location :name (n / name :op1 "French" :op2 "Alps")) :time (e / early :op1 (d / date-entity :year (N / N-A)) :degree (m / more) :mod (j / just)))
(i / include-91 :arg3 1 :arg1 (p / picture :poss (h / he)) :arg2 (t / thing :arg1-of (s / symbolize-01 :arg2 (b / barbarous :location (l / location :name (n / name :op1 "Beslan"))) :degree (m / most))))
(h / have-03 :arg0 (c / character :mod (t / this)) :arg1 (a / and :op1 (p / person :arg0-of (o / own-01 :arg1 (h2 / home :poss (p2 / person)))) :op2 (p3 / person :arg0-of (o2 / own-01 :arg1 (h3 / home :poss (p4 / person)))) :op3 (p5 / person :arg0-of (o3 / own-01 :arg1 (h4 / home :poss (p6 / person)))) :op4 (k / keep-01 :arg0 (p7 / person) :arg1 (m / mine :mod (e / email)))) :mod (i / indeed) :mod (i2 / indeed))
(m / multi-sentence :snt1 (b / be-located-at-91 :mode (i / interrogative) :arg2 (l / location :name (n / name :op1 "Teremok"))) :snt2 (g / good :mode (i2 / interrogative) :degree (m2 / more :polarity -)) :snt3 (a / account-01 :mode (i3 / interrogative) :arg1 (p / percentage-entity :value (N / N-A))))
(r / receive-01 :arg0 (a / and :op1 (c / company :arg0-of (b / broadcast-01 :medium (t / television))) :op2 (c2 / company :arg0-of (b2 / broadcast-01 :arg1 (t2 / television))) :op3 (c3 / company :arg0-of (b3 / broadcast-01 :mod (r2 / radio)))) :arg1 (l / licence :mod (b4 / broadcast-01 :medium (t3 / television)) :poss (i / it)))
(s / say-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (o / organization :name (n / name :op1 "Center" :op2 "for" :op3 "Reproductive" :op4 "Rights") :arg1-of (h2 / have-org-role-91 :arg0 (o2 / organization :name (n2 / name :op1 "Center" :op2 "for" :op3 "Reproductive" :op4 "Rights")))) :arg2 (d / doctor))) :arg1 (h3 / have-03 :arg0 (d2 / doctor :quant 1 :mod (o3 / only) :arg0-of (p2 / perform :arg1 (a / abortions) :location (l / location :name (n3 / name :op1 "Louisiana")))) :arg1 (p3 / person)))
(s / spend-01 :arg0 (h / he) :arg1 (m / monetary-quantity :quant 120 :unit (d / dollar)))
(e / emphasize-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg2 (p2 / president))) :arg1 (e2 / essential :domain (c / create-01 :arg1 (i / invest-01 :arg2 (a / and :op1 (a2 / attract-01 :arg1 (i2 / invest-01 :mod (a3 / additional)) :arg2 (r / region)) :op2 (f / form :mod (d / develop-02) :mod (f2 / form) :arg1-of (b / become-01 :arg2 (c2 / compete-02 :arg1 (b2 / business :arg1-of (m / major-02) :mod (b3 / business)) :location (r2 / region :mod (w / world-region :name (n / name :op1 "Asia-Pacific")))) :arg1-of (r3 / recommend-01))))))) :mod (e3 / essential))
(a / and :op1 (m / model :domain (p / person :arg0-of (l / lead-02 :arg1 (p2 / political-party :name (n / name :op1 "N-A"))))) :op2 (g / giving :arg0 (p3 / person) :arg1 (m2 / manner :poss (p4 / person :arg0-of (h / hit-01 :arg1 (j / jackpot) :mod (j2 / just))))) :op3 (p5 / plan-01 :arg0 (p6 / person) :arg1 (s / spend-02 :arg0 (p7 / person) :arg1 (a2 / age :mod (o / old) :poss (p8 / person)) :arg2 (l2 / lap :mod (l3 / luxury)))))
(c / contrast-01 :arg2 (c2 / connect-01 :polarity - :arg1 (c3 / company :name (n / name :op1 "Abbott")) :arg2 (c4 / case :poss (h / he)) :time (t / then :mod (e / even))))
(c / contrast-01 :arg1 (a / allow-01 :arg0 (i / initiative :mod (t / this)) :arg1 (i2 / import-01 :arg1 (g / good :quant (p / percentage-entity :value (N / N-A)) :arg1-of (i3 / import-01 :arg2 (a2 / abroad)))) :mod (s / still)) :arg2 (m / mean-01 :arg1 (i4 / initiative) :arg2 (s2 / step :arg1-of (s3 / significant-02) :prep-in (d / direction :mod (t2 / that)))) :time (c2 / case :mod (a3 / any)))
(m / multi-sentence :snt1 (c / contrast-01 :arg2 (s / say-01 :arg0 (c2 / confusion :mod (t / this)) :arg1 (d / differentiate :arg1 (p / person :name (n / name :op1 "Dwight")) :arg2 (p2 / person :name (n2 / name :op1 "Johnny"))))) :snt2 (a / and :op2 (d2 / demolished :mode (i / interrogative) :polarity - :mod (o / or :op1 (d3 / deal :mod (b / big)) :op2 (p3 / problem :mod (b2 / bit :mod (e / even))))) :time (s2 / since :op1 (f / face-01 :arg0 (p4 / person) :arg1 (t2 / thing :arg1-of (s3 / say-01 :arg0 (p5 / person)))))))
(m / multi-sentence :snt1 (p / produce-01 :arg0 (h / he) :arg1 (s / study-01 :arg0 (p2 / person :arg0-of (s2 / suggest-01 :arg1 (t / that)) :arg0-of (s3 / suggest-01 :arg1 (o / or :op1 (o2 / occupational :polarity - :arg1 (m2 / mesotheliomas :quant (p3 / proportion :mod (s4 / substantial))) :prep-with (o3 / or :op1 (o4 / occupational :arg1-of (k / know-01)) :op2 (e / exposure :mod (d / domestic)))))))) :op2 (p4 / probable :domain (c / cause-01 :arg0 (e2 / environment) :arg1 (e3 / expose-01 :arg1 (e4 / environment))))) :snt2 (' / ''))
(h / heaved :arg0 (h2 / he) :arg1 (h3 / he) :arg2 (d / deckchair :arg1-of (r / resemble-01 :arg2 (m / man :mod (o / old)))))
(r / room :quant 1 :mod (o / only) :condition (' / '' :arg1 (l / life) :prep-in (l2 / life)))
(p / possible-01 :arg1 (d / do-02 :arg0 (a / and :op1 (t / thing :arg1-of (i / include-91 :arg2 (g / game :mod (p2 / popular :degree (m / most)) :time (t2 / today)))) :op2 (t3 / thing :arg1-of (i2 / include-91 :arg2 (g2 / game :mod (p3 / popular :degree (m2 / most)) :time (t4 / today))))) :arg1 (p4 / possible-01 :arg1 (d2 / do-02 :arg1 (i3 / it) :arg2 (h / headache)))) :mod (a2 / another))
(h / hope-01 :arg0 (c / country :name (n / name :op1 "India")) :arg1 (d / deal-01 :arg0 (c2 / country) :arg1 (n2 / nation :quant 2) :arg2 (d2 / defend-01)) :arg1-of (r / report-01) :mod (a / also))
(m / multi-sentence :snt1 (a / animal) :snt2 (c / cause-01 :arg1 (g / go-02 :arg0 (i / i) :arg4 (p / province :name (n / name :op1 "N-A") :mod (v / veterinary)))))
FAILED_TO_PARSE#Number of opening and closing brackets doesn't match.
(g / give-01 :arg0 (g2 / government-organization :arg0-of (a / administrate-01 :arg1 (r / region))) :arg1 (a2 / and :op1 (b / building :mod (t / this)) :op2 (t2 / thing :arg1-of (a3 / achieve-01 :arg0 (t3 / thing :arg1-of (a4 / achieve-01 :arg0 (w / we)))))) :arg2 (w2 / we) :arg1-of (c / cause-01 :arg0 (a5 / and :op1 (t4 / thing :arg1-of (a6 / achieve-01 :arg0 (w3 / we))) :op2 (s / signal-07 :arg1 (r2 / respect-01 :arg1 (f / foundation))))))
(c / contrast-01 :arg1 (s / seek-01 :polarity - :arg0 (h / he) :arg1 (r / revenge) :purpose (e / exemplify-01 :arg0 (h2 / he))) :arg2 (p / preoccupy :polarity - :arg1 (h3 / he) :arg2 (h4 / horror :time (p2 / past) :mod (t / this))))
(m / multi-sentence :snt1 (b / be-located-at-91 :arg1 (t / thing :arg2-of (m2 / mask-01)) :arg2 (a / above :op1 (g / ground)) :mod (j / just)) :snt2 (a2 / and :op1 (c / counter-01 :mode (i / interrogative) :arg0 (p / person :arg0-of (c2 / counter-01 :arg1 (d / drug))) :arg1 (p2 / person :arg0-of (c3 / counter-01 :arg1 (d2 / drug)))) :op2 (t2 / tables :arg0 (r / rest :part-of (s / space)) :mod (e / even))))
(u / use-01 :arg1 (a / asbestos) :arg2 (a2 / and :op1 (o / office) :op2 (s / shop) :op3 (l / libraries) :op4 (h / halls :arg0 (a3 / and :op1 (p / person :arg0-of (h2 / have-org-role-91 :arg2 (h3 / head-of-state))) :op2 (p2 / person :arg0-of (h4 / have-org-role-91 :arg2 (l2 / libraries)))))) :arg1-of (f / frequent-02) :location (a4 / and :op1 (o2 / office) :op2 (s2 / shop) :op3 (l3 / libraries) :op4 (t / town)))
(t / think-01 :arg0 (h / he) :arg1 (d / die-01 :arg1 (s / she)) :time (a / after :quant 1))
(s / say-01 :arg0 (i / information :source (h / headquarters :source (s2 / staff))) :arg1 (l / lose-02 :arg0 (p / person :arg0-of (h2 / have-rel-role-91 :arg2 (e / enemy))) :arg1 (a / and :op1 (t / tank :quant 5 :arg1-of (a2 / arm-01)) :op2 (t2 / tank :quant 8) :op3 (t3 / tank :quant 8 :arg1-of (a3 / arm-01)) :op4 (t4 / tank :quant 8 :arg1-of (a4 / arm-01)) :op5 (v / vehicle :quant 8 :arg1-of (a5 / arm-01)))))
(e / exemplify-01 :arg0 (i / include-01 :arg1 (s / service :mod (g / grass-roots)) :arg2 (o / or :op1 (g2 / groupon) :op2 (v / vigoda.ru))) :mod (c / classic))
(s / state-01 :arg0 (p / person :name (n / name :op1 "Maksim" :op2 "Liksutov")) :arg1 (d / decrease-01 :arg1 (i / introduce-02 :arg1 (t / thing :arg1-of (p2 / pay-01))) :location (s2 / street :location (s3 / street :location (s4 / street :arg0-of (h / have-org-role-91 :arg2 (c / capital))))) :arg1-of (s5 / significant-02)) :mod (a / also))
(s / say-01 :arg0 (t / thing :arg1-of (a / ally-01 :arg2 (c / country :name (n / name :op1 "France")))) :arg1 (r / recommend-01 :arg1 (a2 / and :op1 (s2 / shut-down-05 :arg0 (p / person :mod (c2 / country :name (n2 / name :op1 "France"))) :arg1 (a3 / and :op1 (u / up) :op2 (c3 / country :mod (s3 / sort)))) :op2 (o / out :arg0 (c4 / country) :mod (s4 / sort)))))
(p / possible-01 :arg1 (a / and :op1 (p2 / participate-01 :arg0 (f / film :arg1-of (l / local-02)) :arg1 (t / thing :arg1-of (a2 / aspire-01))) :op2 (s / screenings :arg0 (f2 / film) :arg1 (f3 / festival :location (a3 / and :op1 (f4 / festival :mod (t2 / theatre)) :op2 (f5 / film))))))
(a / and :op1 (g / guilty-01 :polarity - :arg1 (p / person :name (n / name :op1 "Perry")) :arg2 (g2 / guilty-01 :polarity - :arg1 (p2 / person))) :op2 (c / call-01 :arg0 (p3 / person) :arg1 (e / event :name (n2 / name :op1 "N-A") :mod (p4 / politics)) :arg2 (c2 / charge-05)))
(n / need-01 :arg0 (y / you) :arg1 (c / complicit :arg1 (w / woman :mod (w2 / white)) :purpose (j / justify-01 :arg0 (y2 / you) :arg1 (l / lynching))))
(u / undergo-28 :arg1 (d / document) :arg2 (r / revision :arg0 (d2 / document) :arg1 (p / person :arg0-of (c / consume-01)) :mod (n / negative)) :time (s / still))
(s / subject-01 :arg1 (h / home :poss (p / person :arg0-of (h2 / have-org-role-91 :arg2 (c / capital)))) :arg2 (a / and :op1 (d / demand-01 :arg1 (a2 / and :op1 (d2 / demand-01) :op2 (w / world-region :name (n / name :op1 "N-A")))) :op2 (t / thing :arg2-of (p2 / price-01) :mod (w2 / world-region :name (n2 / name :op1 "N-A")))) :arg1-of (s2 / spread-02 :arg1-of (w3 / wide-02)) :arg1-of (c2 / cause-01 :arg0 (f / fear-01 :arg1 (p3 / prompting :arg1 (b / bank :mod (c3 / credit)) :arg2 (b2 / bank :poss (c4 / country)) :purpose (i / impose-01 :arg0 (b3 / bank) :arg1 (l / limit-01 :arg1 (t2 / thing :arg2-of (s3 / shelter-01 :arg3 (m / mortgage))) :location (j / june))) :arg1-of (w4 / wide-02)) :arg1-of (w5 / wide-02))))
(m / multi-sentence :snt1 (h / have-03 :arg0 (p / person :arg0-of (h2 / have-org-role-91 :arg1 (p2 / person :name (n / name :op1 "Emmett" :op2 "Shear") :arg0-of (h3 / have-org-role-91 :arg1 (c / country :name (n2 / name :op1 "N-A")) :arg2 (c2 / ceo))) :arg2 (c3 / ceo))) :arg1 (t / thing :arg1-of (s / state-01) :mod (t2 / this) :mod (a / all)) :time (m2 / moment) :arg1-of (c4 / cause-01 :arg0 (a2 / and :op1 (b / believe-01 :arg0 (p3 / person) :arg1 (c5 / community :poss (w / we))) :op2 (s2 / share-01 :arg0 (p4 / person) :arg1 (a3 / and :op1 (v / value :poss (w2 / we)) :op2 (e / envision-01 :duration (l / long-03))))))) :snt2 (a4 / and :op1 (s3 / share-01 :arg0 (p5 / person) :arg1 (v2 / value :poss (w3 / we))) :op2 (w4 / want-01 :arg0 (p6 / person) :arg1 (h4 / help-01 :arg0 (p7 / person) :arg2 (w5 / we) :manner (f / fast :degree (m3 / more))))))
(r / remove-01 :arg0 (p / person :quant (n / none) :mod (k / kolbaya?s)) :arg1 (d / dish :arg1-of (s / single-02)) :arg2 (m / menus :arg0 (p2 / person)) :time (y / yet))
(s / say-01 :arg0 (c / change-01 :arg1 (i / initiative :name (n / name :op1 (i2 / initiative)) :mod (t / this))) :arg1 (s2 / support-01 :arg0 (a / and :op1 (e / enforce-01 :arg1 (r / right :poss (c2 / citizen :mod (c3 / country :name (n2 / name :op1 "N-A"))))) :op2 (e2 / enforce-01 :arg1 (r2 / right) :arg0-of (e3 / effective-04))) :arg1 (a2 / and :op1 (e4 / enforce-01 :arg1 (r3 / right)) :op2 (e5 / enforce-01 :arg1 (r4 / right))) :prep-as (c4 / concern-01 :arg0 (a3 / and :op1 (s3 / storage :arg1 (d / data :arg1-of (p / personal-02))) :op2 (c5 / confidentiality :arg1 (a4 / and :op1 (i3 / information) :op2 (t2 / telecommunication)))))))
(m / multi-sentence :snt1 (c / concern-01 :arg0 (m2 / manufacture-01 :polarity - :arg1 (g / good :arg1-of (m3 / manufacture-01 :location (c2 / country :name (n / name :op1 "Russia"))))) :arg1 (g2 / good :arg1-of (m4 / manufacture-01 :location (c3 / country)))) :snt2 (o / oblige-02 :arg1 (p / person :arg1-of (m5 / manufacture-01 :location (c4 / country)) :mod (t / type :mod (o2 / other)) :arg1-of (m6 / manufacture-01 :location (c5 / country))) :arg2 (l / less :polarity -)) :snt3 (i / inform-01 :arg0 (p2 / person :name (n2 / name :op1 "Nilov")) :arg1 (p3 / person) :arg2 (p4 / presence)))
(p / possible-01 :polarity - :arg1 (b / believe-01 :arg0 (i / i) :arg1 (i2 / it)))
(a / and :op2 (g / glimmer :arg0 (h / hopeful-03 :arg1 (g2 / give-01 :arg0 (y / you) :arg1 (a2 / accommodation :degree (m / more)) :arg2 (w / we)) :arg2 (w2 / we) :mod (a3 / at-least) :location (h2 / here))))
(a / and :op1 (c / come-01 :arg1 (i / i) :arg4 (a2 / agree-01 :arg0 (i2 / i) :arg2 (p / person :arg0-of (h / have-org-role-91 :arg1 (i3 / i) :arg2 (c2 / commander)))) :time (a3 / already)) :op2 (w / write-01 :arg0 (i4 / i) :arg1 (r / report-01 :mod (d / discharge)) :time (a4 / already)))
(s / say-01 :arg0 (s2 / she) :arg1 (a / and :op1 (r / realize-01 :arg0 (s3 / she) :arg1 (r2 / realised :polarity - :arg0 (s4 / she) :arg1 (a2 / ability :mod (w / walk-01) :poss (s5 / she)) :degree (e / equal) :compared-to (t / think-01 :arg0 (s6 / she)))) :op2 (a3 / ask-02 :arg0 (s7 / she) :arg1 (p / paradise :poss (s8 / she) :topic (i / it)) :arg2 (s9 / she))))
(p / possible-01 :arg1 (s / say-01 :arg0 (h / he) :arg1 (c / contrast-01 :arg1 (l / love-01 :arg0 (h2 / he) :arg1 (y / you)) :arg2 (s2 / soon :degree (t / too) :prep-for (t2 / that) :domain (i / it)))))
(g / get-03 :arg1 (m / machine :quant 18) :arg2 (a / and :op1 (t / turn-01 :arg0 (m2 / machine) :arg1 (p / person :quant 2)) :op2 (b / banged :arg0 (m3 / machine) :arg1 (p2 / person :arg0-of (s / send-01 :arg1 (c / car :mod (b2 / both)) :arg2 (w / wall))))))
(f / follow-01 :arg1 (t / this) :arg2 (t2 / tri-therapy :arg0 (a / and :op1 (p / person :arg0-of (h / have-org-role-91 :arg2 (h2 / head-of-state))) :op2 (p2 / person :arg0-of (h3 / have-org-role-91 :arg2 (h4 / head-of-state))) :op3 (p3 / person :arg0-of (h5 / have-org-role-91 :arg2 (h6 / head-of-state))) :op4 (p4 / person :arg0-of (h7 / have-org-role-91 :arg2 (h8 / head-of-state))) :op5 (p5 / person :arg0-of (h9 / have-org-role-91 :arg2 (h10 / head-of-state)))) :arg1 (r / rate-entity-91 :arg1 (u / under :op1 40) :arg2 (t3 / temporal-quantity :quant (N / N-A) :unit (y / year)))))
(i / include-91 :arg1 (a / and :op1 (p / person :arg0-of (r / reside-01 :arg1 (p2 / person :mod (c / country :name (n / name :op1 "N-A")))) :quant (m / many)) :op2 (c2 / community :arg1-of (c3 / close-10 :arg2 (w / world-region :name (n2 / name :op1 "N-A")))) :op3 (c4 / community :arg1-of (k / kill-01 :arg0 (s / shell :mod (m2 / mortar) :mod (c5 / country))))) :arg2 (c6 / come-01 :arg1 (p3 / person) :direction (b / back)))
(r / resemble-01 :arg1 (i / it) :arg2 (h / have-03 :arg0 (i2 / i) :arg1 (h2 / head :part-of (i3 / i)) :arg1-of (s / straight-04) :beneficiary (i4 / i)) :mod (a / almost))
(a / and :op1 (b / base-01 :arg1 (p / person :arg0-of (b2 / bridge-01)) :location (l / location :name (n / name :op1 "Miami")) :mod (a2 / also)) :op2 (o / operate-01 :arg1 (s / ship :quant 8 :mod (c / cruise)) :arg4 (a3 / and :op1 (w / world-region :name (n2 / name :op1 "Scandinavia")) :op2 (c2 / country :name (n3 / name :op1 "Russia")) :op3 (p2 / person :arg0-of (t / travel-01 :arg2 (w2 / world-region :name (n4 / name :op1 "Scandinavia")))) :op4 (p3 / person :arg0-of (h / have-org-role-91 :arg2 (h2 / head-of-state))) :op5 (p4 / person :arg0-of (h3 / have-org-role-91 :arg2 (h4 / head-of-state))) :op6 (p5 / person :arg0-of (h5 / have-org-role-91 :arg2 (h6 / head-of-state))) :op7 (p6 / person :arg0-of (h7 / have-org-role-91 :arg2 (h8 / head-of-state))) :op7 (p7 / person :arg0-of (h9 / have-org-role-91 :arg2 (h10 / head-of-state))))))
(h / have-03 :arg0 (s / she) :arg1 (e / experience-01 :arg0 (s2 / she) :arg1 (o / own-01 :arg0 (s3 / she) :arg1 (s4 / she)) :mod (f / frontline)) :mod (i / indeed))
(h / have-concession-91 :arg2 (r / reach-01 :arg0 (h2 / he) :arg1 (a / age-01 :arg1 (p / person :arg0-of (h3 / have-rel-role-91 :arg1 (p2 / person :name (n / name :op1 "Sammy" :op2 "Davis" :op3 "Junior")) :arg2 (f / father :mod (j / jazz)))) :arg2 (c / collection :mod (o / old) :poss (p3 / person :arg0-of (h4 / have-rel-role-91 :arg1 (p4 / person) :arg2 (f2 / father)))))))
(i / introduced :arg1 (s / smartphone :ord (o / ordinal-entity :value 1) :prep-with (f / function-01 :mod (n / nfc))) :time (d / date-entity :decade (N / N-A)) :arg1-of (i2 / introduce-01 :arg2 2010 :quant 2010))
(m / multi-sentence :snt1 (i / issue-02 :arg0 (a / and :op1 (d / damage-01 :mod (m2 / minor) :mod (o / only)) :op2 (a2 / accident :mod (v / vehicle :mod (e / email))))) :snt2 (p / possible-01 :mode (i2 / interrogative) :arg1 (u / use-01 :arg0 (p2 / person :arg0-of (d2 / drive-01)) :arg1 (o2 / organization :name (n / name :op1 "STSI")) :time (s / still))))
(d / destroy-01 :arg1 (s / ship :quant 848 :arg0-of (p / participate-01 :arg1 (o / operation :poss (a / and :op1 (m / mission) :op2 (s2 / ship :quant 126 :mod (t / transport-01)) :op3 (s3 / ship :quant (a2 / approximately :op1 50)))))))
(g / go-02 :arg0 (p / person :name (n / name :op1 "Lavrentev")) :arg4 (m / ministry :topic (l / location :name (n2 / name :op1 "Republic" :op2 "of" :op3 "Bashkortostan"))) :purpose (f / find-out-03 :arg0 (p2 / person) :arg1 (f2 / fate :poss (h / house))) :time (b / before :op1 (n3 / now) :quant (b2 / between :op1 (t / temporal-quantity :quant (N / N-A) :unit (y / year)) :op2 (t2 / temporal-quantity :quant (N2 / N-A) :unit (y2 / year)))))
FAILED_TO_PARSE#Number of opening and closing brackets doesn't match.
(a / and :op1 (c / continue-01 :arg0 (p / person :mod (a2 / atheist)) :arg1 (d / devaluation :arg0 (p2 / person))) :op2 (r / reach-01 :arg0 (p3 / person) :arg1 (l / low-04 :mod (n / new)) :arg3 (d2 / dollar) :mod (e / even)))
(r / reach-01 :arg1 (g / gusts :mod (w / wind)) :location (g2 / ground :location (l / location :name (n / name :op1 "Adelaide" :op2 "Airport"))) :time (t / time))
(a / and :op1 (i / it :prep-to (i2 / i)) :op2 (c / change-01 :polarity - :arg0 (y / you) :arg1 (f / fact :mod (t / this))))
(a / and :op1 (f / find-01 :arg0 (p / person :arg0-of (r / research-01)) :arg1 (c / confirmation :poss (p2 / person) :mod (o / other) :arg1-of (s / strong-02 :degree (m / more))) :mod (a2 / also)) :op2 (a3 / and :op1 (l / likely-01 :arg1 (b / become-01 :arg1 (p3 / person) :arg2 (f2 / force-04 :arg0 (p4 / person) :arg2 (d / dictate-01 :arg0 (p5 / person) :arg1 (t / term :mod (u / unfavourable)) :beneficiary (o2 / other))) :degree (m2 / more) :arg1-of (f3 / frequent-02 :degree (m3 / more)))) :op2 (c2 / consider-01 :arg0 (p6 / person) :arg1 (e / entitled :arg1 (p7 / person) :arg2 (d2 / dictate-01 :arg0 (p8 / person) :arg1 (t2 / term :mod (u2 / unfavourable)) :arg2 (o3 / other)))) :op3 (p9 / prefer-01 :arg0 (p10 / person) :arg1 (m4 / mean :mod (p11 / peaceful) :instrument-of (r2 / resolve-01 :arg1 (c3 / conflict-01))))))
(a / and :op1 (h / home :domain (r / region :mod (e / email) :poss (c / country :name (n / name :op1 "Russia")))) :op2 (h2 / home :domain (a2 / and :op1 (o / openness) :op2 (f / factory) :op3 (f2 / foundries) :arg0-of (p / produce-01 :arg1 (c2 / component :mod (v / vital)) :beneficiary (m / military :mod (c3 / country :name (n2 / name :op1 "Russia")))))))
(m / multi-sentence :snt1 (t / tell-01 :arg0 (n / no-one) :arg1 (g / good :degree (m2 / more) :domain (m3 / mussels)) :arg2 (y / you)) :snt2 (p / promise-01 :arg0 (i / i) :arg1 (y2 / you) :arg2 (j / joked :arg1 (w / waitress :source (b / brasserie :mod (n2 / new) :mod (p2 / palm))))))
(h / have-03 :arg0 (t / thing :arg1-of (p / plan-01)) :arg1 (t2 / thing :arg2-of (c / copy-01)) :arg1-of (i / intend-01))
(s / show-01 :arg0 (d / data :source (b / bank :consist-of (p / person :arg0-of (h / have-org-role-91 :arg1 (c / country :name (n / name :op1 "England")) :arg2 (b2 / bank :mod (b3 / bank))))) :arg1-of (f / fresh-04)) :arg1 (d2 / drop-01 :arg1 (m / mortgage :arg0-of (s2 / suggest-01 :arg1 (c2 / cool :arg1 (m2 / market :arg0-of (h2 / house-01)))) :degree (f2 / further))))
(r / remain-01 :arg1 (h / home :time (d / date-entity :century (N / N-A)) :ord (o / ordinal-entity :value 18 :range (s / since :op1 (b / build-01 :arg1 (h2 / home))))) :mod (p / practical) :arg2-of (e / except-01 :arg1 (d2 / disrepair :arg1 (d3 / disrepair))))
(d / declare-02 :arg1 (a / and :op1 (d2 / declare-02 :arg1 (l / location :name (n / name :op1 "Minsk") :arg0-of (h / have-org-role-91 :arg1 (p / politics :mod (c / continent :name (n2 / name :op1 "N-A"))) :arg2 (m / member)))) :op2 (m2 / mediate-01 :arg0 (c2 / crisis :mod (c3 / country :name (n3 / name :op1 "N-A"))) :mod (m3 / main))))
(e / emphasize-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg2 (m / minister))) :arg1 (o / or :op1 (c / connect-01 :polarity - :arg1 (i / it) :arg2 (d / door)) :op2 (u / understand-01 :arg0 (p2 / person :arg0-of (h2 / have-org-role-91 :arg2 (m2 / minister)) :quant (s / some)) :arg1 (d2 / door))))
(c / cause-01 :arg0 (b / ban-01 :arg0 (l / law) :arg1 (a / and :op1 (l2 / law :mod (t / type :quant 1999)) :op2 (l3 / law :mod (t2 / type :quant 1999))) :time (e / eventual) :arg1-of (c2 / cause-01 :arg0 (l4 / law :mod (t3 / type :quant 1999)) :time (e2 / eventual))) :arg1 (t4 / take-10 :arg0 (d / develop-02 :arg0 (l5 / law)) :arg1 (m / multiple :op1 (t5 / temporal-quantity :quant (N / N-A) :unit (d2 / decade))) :mod (u / usual)))
FAILED_TO_PARSE#Number of opening and closing brackets doesn't match.
(a / and :op1 (p / put-01 :arg1 (t / thing :arg1-of (a2 / accuse-01)) :arg2 (l / list-01 :arg1 (h / he))) :op2 (a3 / arrest-01 :arg1 (h2 / he) :time (d / date-entity :month 5 :day 9) :location (l2 / location :name (n / name :op1 "Tambov")) :time (a4 / after :op1 (c / cause-01 :arg0 (h3 / he) :arg1 (a5 / accident :mod (t2 / traffic) :arg1-of (c2 / cause-01 :arg0 (b / break-up-08 :arg0 (h4 / he) :arg1 (h5 / hip :poss (h6 / he)))))))))
(r / range-01 :arg1 (a / amount :quant-of (c / compensate-01)) :arg3 (r2 / rate-entity-91 :arg1 40 :arg2 (t / temporal-quantity :quant (N / N-A) :unit (y / year)) :arg3 (v / vehicle :mod (c2 / cargo) :arg1-of (l / light-06))))
(g / go-02 :arg0 (p / person :name (n / name :op1 "Lavrentev")) :arg4 (m / ministry :topic (l / location :name (n2 / name :op1 "Republic" :op2 "of" :op3 "Bashkortostan"))) :purpose (f / find-out-03 :arg0 (p2 / person) :arg1 (f2 / fate :poss (h / house))) :time (b / before :op1 (n3 / now) :quant (b2 / between :op1 (t / temporal-quantity :quant (N / N-A) :unit (y / year)) :op2 (t2 / temporal-quantity :quant (N2 / N-A) :unit (y2 / year)))))
(h / handle-01 :arg0 (p / person :name (n / name :op1 "Michael" :op2 "McCrum") :arg1-of (a / author-01 :arg0 (p2 / person :arg0-of (h2 / have-org-role-91 :arg3 (j / judge-01)) :arg0-of (h3 / have-org-role-91 :arg3 (j2 / judge-01))) :arg1-of (s / special-02))) :arg1 (i / it))
(a / and :op1 (h / hit-01 :arg0 (c / certain :polarity -) :arg1 (b / business) :arg1-of (c2 / clear-06) :mod (c3 / certain :polarity -)) :op2 (c4 / cause-01 :arg0 (a2 / and :op1 (c5 / confident-01 :arg1 (p / person :arg0-of (c6 / consume-01))) :op2 (c7 / confident-01 :arg1 (p2 / person)) :mod (e / especially)) :arg1 (c8 / cause-01 :arg0 (a3 / and) :arg1 (o / or :op1 (d / delay-01 :arg1 (o2 / order-01 :quant (s / some))) :op2 (o3 / or :op1 (d2 / delay-01 :arg1 (o4 / order) :mod (e2 / even)) :op2 (c9 / cancelled :arg1 (o5 / order) :mod (e3 / even)))))))
(a / and :op2 (r / receive-01 :arg0 (t / they) :arg1 (r2 / right-05 :arg1 (t2 / they) :arg2 (d / dictate-01 :arg0 (t3 / they) :arg1 (a2 / and :op1 (t4 / thing :arg2-of (p / price-01 :arg1 (t5 / they))) :op2 (c / condition :poss (t6 / they))))) :time (s / since :op1 (o / oblige-02 :arg1 (t7 / they) :arg2 (b / buy-01 :arg0 (t8 / they) :arg1 (g / good :poss (t9 / they)))))))
(p / pride-01 :arg0 (i / i) :arg2 (i2 / introduce-02 :arg0 (i3 / i) :arg1 (a / act-02 :arg0 (p2 / person :name (n / name :op1 "John" :op2 "Lewis") :arg0-of (h / have-org-role-91 :arg2 (i4 / icon :mod (r / right :mod (c / civil))))) :manner (e / employee))) :arg1-of (c2 / cause-01 :arg0 (a2 / amr-unknown)))
(c / contrast-01 :arg2 (p / possible-01 :arg1 (i / imagine-01 :arg1 (a / and :op1 (c2 / complete-01 :arg1 (c3 / commodity :mod (f / food) :arg1-of (p2 / produce-01 :location (w / world-region :name (n / name :op1 "Latin" :op2 "America"))) :quant (a2 / all)) :time (a3 / after :op1 (c4 / complete-01 :arg1 (c5 / commodity :arg1-of (i2 / include-91 :arg2 (a4 / and :op1 (a5 / agree-01 :arg1-of (n2 / need-01)) :op2 (i3 / inspect-01 :mod (s / sanitary))))) :op2 (p3 / produce-01 :arg1 (c6 / commodity) :location (w2 / world-region :name (n3 / name :op1 "Latin" :op2 "America") :location (c7 / country :name (n4 / name :op1 "Turkey")))))))))))
(m / multi-sentence :snt1 (f / feel-01 :arg0 (i / i) :arg1 (s / sorry-01 :arg1 (i2 / i) :arg2 (p / person :quant (a / all) :arg0-of (s2 / suffer-01 :source (m2 / metropolis :mod (t / this)))) :degree (s3 / so))) :snt2 (s4 / say-01 :arg0 (i3 / i) :arg1 (p2 / person :name (n / name :op1 "Damir") :arg1-of (s5 / suffer-01 :time (w / week :mod (l / last))) :arg0-of (w2 / work-01 :arg1-of (v / voluntary-02) :time (w3 / week :mod (l2 / last))))))
(s / start-01 :arg1 (s2 / series :mod (c / continent :name (n / name :op1 "N-A")) :quant (s3 / series :op1 (c2 / couple :op1 (t / temporal-quantity :quant (N / N-A) :unit (w / week))))) :time (w2 / week :mod (j / just)))
(a / and :op1 (c / come-01 :arg1 (i / i) :arg4 (a2 / agree-01 :arg0 (i2 / i) :arg2 (p / person :arg0-of (h / have-org-role-91 :arg1 (i3 / i) :arg2 (c2 / commander)))) :time (a3 / already)) :op2 (w / write-01 :arg0 (i4 / i) :arg1 (r / report-01 :mod (d / discharge)) :time (a4 / already)))
(a / accuse-01 :arg0 (p / person :name (n / name :op1 "George" :op2 "Webster")) :arg1 (a2 / and :op1 (p2 / person :name (n2 / name :op1 "Nairn")) :op2 (h / hotel :mod (p3 / pitlochry))) :arg2 (r / rape-01 :arg1 (a3 / and)))
(a / and :op1 (h / have-03 :polarity - :arg0 (w / woman :arg1-of (b / black-05)) :arg1 (t / thing :mod (l / luxury) :arg1-of (h2 / have-03 :arg0 (w2 / woman)) :mod (l2 / luxury))) :op2 (l3 / live-01 :arg0 (w3 / woman) :arg1 (r / reality :arg1-of (c / combine-01)) :frequency (r2 / rate-entity-91 :arg3 (t2 / temporal-quantity :quant (N / N-A) :unit (d / day)))) :beneficiary (s / she))
(s / say-01 :arg0 (h / he) :arg1 (p / possible-01 :arg1 (m / make-05 :arg0 (y / you) :arg1 (s2 / sushi :mod (s3 / same :degree (v / very)) :source (f / fish :poss (w / we))))))
(s / struggle-02 :arg0 (h / he) :arg1 (t / think-01 :arg0 (h2 / he) :arg1 (l / location :arg4-of (c / come-01 :arg1 (h3 / he) :arg4 (c2 / contact-01 :arg0 (h4 / he) :arg1 (h5 / he))))) :prep-in (f / fact))
(m / multi-sentence :snt1 (h / have-concession-91 :arg1 (d / difficult :domain (o / organization :name (n / name :op1 "Ginza" :op2 "Project"))) :arg2 (d2 / difficult :domain (e / establishments :arg0 (o2 / organization)))) :snt2 (c / consider-01 :arg0 (h2 / he)))
(m / multi-sentence :snt1 (r / remarkable-02 :arg1 (s / situation :mod (t / this)) :degree (q / quite)) :snt2 (a / and :op1 (r2 / remarkable-02 :arg1 (s2 / situation :mod (t2 / this)) :degree (q2 / quite) :time (a2 / after :op1 (a3 / all))) :op2 (t3 / talk-01 :polarity - :arg0 (i / i) :arg1 (o / or :op1 (p / person :arg0-of (h / have-org-role-91 :arg1 (p2 / person :name (n / name :op1 "Lana" :op2 "Del" :op3 "Rey") :mod (n2 / next)) :arg2 (r3 / run-of-the-mill))) :op2 (p3 / person :arg0-of (r4 / represent-01 :arg1 (y / you) :manner (s3 / sweet-sounding))) :op3 (p4 / person :arg0-of (r5 / represent-01 :arg1 (p5 / person :arg0-of (r6 / represent-01 :arg1 (a4 / and :op1 (l / level :mod (l2 / level :mod (s4 / such))) :op2 (t4 / thing :arg1-of (p6 / precede-01 :arg2 (l3 / level :mod (l4 / level :mod (s5 / such)))) :mod (l5 / level :mod (s6 / such))) :duration (s7 / several :op1 (t5 / temporal-quantity :quant (N / N-A) :unit (d / decade))))))))))))
(w / want-01 :arg0 (w2 / we) :arg1 (g / gold :mod (g2 / gold)))
(a / announce-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (c / country :name (n / name :op1 "N-A")) :arg2 (a2 / authority))) :arg1 (d / determine-01 :arg0 (p2 / person) :arg1 (l / land :quant (a3 / area-quantity :quant (N / N-A) :unit (h2 / hectare)) :location (p3 / peninsula :name (n2 / name :op1 "N-A")) :arg0-of (b / belong-01 :arg1 (g / government-organization :name (n3 / name :op1 "Palestinian" :op2 "Authority"))))))
(m / multi-sentence :snt1 (r / receive-01 :arg0 (o / organization :name (n / name :op1 "Rosneft")) :arg1 (p / plant :mod (r2 / refinery :mod (o2 / oil)) :location (s / sea :name (n2 / name :op1 "N-A"))) :arg2 (o3 / organization :name (n3 / name :op1 "TNK-BP")) :time (a / after :op1 (t / temporal-quantity :quant (N / N-A) :unit (y / year)))) :snt2 (a2 / asset :mod (o4 / other) :mod (c / country)))
(p / person :arg0-of (s / serve-01) :mod (c / civil) :mod (c2 / country :name (n / name :op1 "Kenya")))
(a / and :op2 (h / hold-04 :arg1 (t / tournament :mod (t2 / this)) :prep-without (a2 / and :op1 (p / person :name (n / name :op1 "Arsen" :op2 "Galstyan")) :op2 (p2 / person :name (n2 / name :op1 "Mansur" :op2 "Isaev")))))
(c / contrast-01 :arg1 (s / seek-01 :polarity - :arg0 (h / he) :arg1 (r / revenge) :purpose (e / exemplify-01 :arg0 (h2 / he))) :arg2 (p / preoccupy :polarity - :arg1 (h3 / he) :arg2 (h4 / horror :time (p2 / past) :mod (t / this))))
(a / appreciate-02 :arg0 (i / i) :arg1 (g / god :arg1-of (r / return-01 :arg3 (m / me.here :arg1 (h / he) :location (l / location :name (n / name :op1 "Beslan"))))) :degree (s / so))
(s / show-01 :arg0 (d / data :source (b / bank :consist-of (p / person :arg0-of (h / have-org-role-91 :arg1 (c / country :name (n / name :op1 "England")) :arg2 (b2 / bank :mod (b3 / bank))))) :arg1-of (f / fresh-04)) :arg1 (d2 / drop-01 :arg1 (m / mortgage :arg0-of (s2 / suggest-01 :arg1 (c2 / cool :arg1 (m2 / market :arg0-of (h2 / house-01)))) :degree (f2 / further))))
(t / take-01 :arg0 (p / person :name (n / name :op1 "Arseny" :op2 "Yatsenyuk") :arg0-of (h / have-org-role-91 :arg2 (m / minister :mod (p2 / prime)))) :arg1 (p3 / person :arg0-of (h2 / have-rel-role-91 :arg1 (p4 / person) :arg2 (d / daughter))) :arg3 (s / school) :mod (t2 / tradition) :arg1-of (r / resemble-01 :arg2 (a / and :op1 (f / family :arg1-of (h3 / have-org-role-91 :arg0 (p5 / person) :arg2 (m2 / member))) :op2 (p6 / person :arg0-of (h4 / have-rel-role-91 :arg1 (p7 / person :mod (o / other) :arg0-of (h5 / have-rel-role-91 :arg1 (p8 / person) :arg2 (p9 / parent))) :arg2 (p10 / parent))))))
(s / speak-01 :arg0 (p / person :name (n / name :op1 "Lyudmila")) :arg1 (a / and :op1 (m / mundane :arg1 (a2 / apartment :poss (s2 / she))) :op2 (m2 / manner :mod (w / wondrous) :topic (a3 / apartment :poss (s3 / she))) :arg1-of (r / resemble-01 :arg2 (i / italian :arg1 (s4 / stand :mod (h / home) :topic (r2 / ruins :mod (r3 / roman)))))))
(t / think-01 :arg0 (i / i) :arg1 (a / and :op1 (p / person :arg0-of (h / have-rel-role-91 :arg1 (i2 / i) :arg2 (f / friend))) :op2 (p2 / person :arg0-of (k / kill-01 :arg1 (p3 / person)))))
(o / obligate-01 :arg2 (f / fight-01 :arg0 (w / we) :arg2 (s / sky :mod (p / peaceful))))
(u / union-02 :arg1 (u2 / union-02 :arg1 (u3 / union-02) :arg2 (l / large :degree (m / most))))
(m / multi-sentence :snt1 (c / contrast-01 :mode (i / interrogative) :arg1 (s / smoking :mode (i2 / interrogative) :arg0 (p / person :arg0-of (h / have-rel-role-91 :arg1 (p2 / person) :arg2 (c2 / cigarettes))) :arg1 (p3 / person :arg0-of (h2 / have-rel-role-91 :arg1 (p4 / person) :arg2 (k / kills))))) :snt2 (b / but :mode (i3 / interrogative) :arg0 (p5 / person :arg0-of (h3 / have-rel-role-91 :arg1 (p6 / person) :arg2 (c3 / cigarettes))) :arg1 (p7 / person :arg0-of (h4 / have-rel-role-91 :arg1 (p8 / person) :arg2 (f / favourite)))) :snt3 (s2 / smoking :mode (i4 / interrogative) :arg0 (p9 / person :arg0-of (h5 / have-rel-role-91 :arg1 (p10 / person) :arg2 (c4 / cigarettes))) :arg1 (p11 / person :arg0-of (h6 / have-rel-role-91 :arg1 (p12 / person) :arg2 (f2 / favourite)))) :snt3 (s3 / smoking :mode (i5 / interrogative) :arg0 (p13 / person :arg0-of (h7 / have-rel-role-91 :arg1 (p14 / person) :arg2 (k2 / kills))) :arg1 (p15 / person :arg0-of (h8 / have-rel-role-91 :arg1 (p16 / person) :arg2 (f3 / favourite)))))
(g / go-03 :arg0 (p / person :name (n / name :op1 "Stardogs")) :arg1 (i / increase-01 :arg1 (t / thing :arg2-of (p2 / price-01 :arg1 (i2 / it))) :arg3 (p3 / percentage-entity :value (N / N-A))) :time (f / future :arg1-of (n2 / near-02)))
FAILED_TO_PARSE#Number of opening and closing brackets doesn't match.
(b / be-temporally-at-91 :arg1 122 :arg2 (a / after :op1 (r / restart-01 :arg1 (p / person :name (n / name :op1 "Busch")))) :time (t / then))
(r / rally-01 :arg2 (p / place-01 :arg1 (f / flower) :arg2 (s / stone :mod (f2 / foundation))))
(c / continue-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (o / organization :name (n / name :op1 "MFA") :mod (c2 / country :name (n2 / name :op1 "N-A"))) :arg3 (h2 / head-01 :arg0 (p2 / person)))) :arg1 (a / and :op1 (t / thing :arg1-of (t2 / take-01 :arg3 (t3 / thing :arg2-of (s / sanction-02) :arg1-of (t4 / take-01 :arg3 (t5 / thing :arg2-of (s2 / sanction-02)))))) :op2 (p3 / possible-01 :arg1 (j / judge-01 :arg0 (p4 / person :arg0-of (h3 / have-org-role-91 :arg1 (c3 / country) :arg3 (j2 / judge-01))) :arg1 (t6 / thing :arg1-of (a2 / accomplish-01 :arg0 (p5 / person)))))) :medium (t7 / thing :arg2-of (b / base-02 :arg1 (s3 / step-01 :arg1-of (t8 / take-01 :location (a3 / area :arg2-of (s4 / sanction-02)))))))
(c / charge-05 :arg0 (o / organization :name (n / name :op1 "Karratha" :op2 "Police")) :arg1 (m / man :mod (2 / 20-year-old)) :arg2 (f / fail-01 :arg1 (m2 / man) :arg2 (a / and :op1 (s / stop-01 :arg1 (m3 / man)) :op2 (d / drive-01 :arg0 (m4 / man)))))
(c / contrast-01 :arg2 (c2 / consider-01 :arg0 (p / person :arg1-of (e / expert-01)) :arg1 (s / serious-02 :arg1 (p2 / problem) :degree (m / more :degree (m2 / much)))))
(s / say-01 :arg0 (p / person :arg0-of (s2 / specialize-01)) :arg1 (r / result-01 :arg1 (p2 / place :ord (o / ordinal-entity :value 3)) :arg2 (g / good) :arg1-of (c / cause-01 :arg0 (c2 / consider-02 :arg1 (l / lack-01 :arg1 (p3 / prepare-02 :arg2 (p4 / prepare-01 :arg1 (c3 / competition))))))))
(d / draft-01 :arg0 (t / they) :arg1 (b / bill :topic (i / issue-02 :mod (t2 / this))))
(a / and :op2 (l / lead-01 :arg0 (p / person :mod (c / country :name (n / name :op1 "Russia"))) :arg1 (r / rate-entity-91 :arg1 (2 / 2-0) :arg2 (t / temporal-quantity :quant (N / N-A) :unit (y / year))) :time (a2 / after :op1 (f / fight-01 :arg0 (a3 / and :op1 (w / win-01 :arg0 (p2 / person :name (n2 / name :op1 "Denis" :op2 "Yartsev") :arg0-of (h / have-org-role-91 :arg1 (c2 / class :name (n3 / name :op1 (7 / 73kg))) :arg2 (- / -lrb-))) :arg2 (c3 / comeback)) :op2 (l2 / language :name (n4 / name :op1 "N-A")))))))
(m / multi-sentence :snt1 (m2 / mean-01 :arg1 (t / this) :arg2 (c / come-01 :arg1 (p / percentage-entity :value (N / N-A)) :arg3 (o / output :mod (c2 / country :name (n / name :op1 "N-A"))) :mod (s / still))) :snt2 (r / reason :poss (p2 / person)))
(a / and :op1 (o / over :domain (s / season)) :op2 (w / want-01 :arg0 (w2 / we) :arg1 (c / compelled :arg0 (w3 / we) :arg1 (a2 / athletes :mod (t / top) :poss (w4 / we)) :purpose (c2 / compete-01 :arg0 (w5 / we)))))
(u / use-01 :arg0 (p / person :mod (c / country :name (n / name :op1 "Italy")) :arg1-of (m / modern-02) :mod (c2 / commerce) :mod (c3 / commerce)) :arg1 (b / begins) :location (c4 / country :location-of (u2 / use-01 :arg1 (n2 / note :mod (p2 / paper) :mod (e / even)) :arg2 (a / and :op1 (- / -rrb-) :op2 (c5 / cloth)))))
(a / and :op1 (r / restore-01 :arg0 (f / film :arg1-of (i / include-91 :arg2 (f2 / film :arg1-of (k / kill-01 :arg0 (a2 / and :op1 (p / person :name (n / name :op1 "Frank" :op2 "Miller")) :op2 (p2 / person :name (n2 / name :op1 "Robert" :op2 "Rodriguez"))))))) :arg1 (p3 / person :quant 2 :arg1-of (k2 / kill-01 :purpose (k3 / kill-01 :arg1 (p4 / person))))) :op2 (e / expect-01 :arg1 (r2 / revolution-03 :arg1-of (d / differ-02 :degree (t / total)) :compared-to (p5 / possible-01 :arg1 (r3 / revolution-03 :arg0 (o / one))))))
(m / multi-sentence :snt1 (l / live-01 :arg0 (d / dynasty :mod (w / whole)) :location (r / room :name (n / name :op1 (- / -lrb-)) :mod (t / this))) :snt2 (a / and :op1 (p / person :arg0-of (h / have-rel-role-91 :arg1 (i / i) :arg2 (g / girlfriend))) :op2 (p2 / person :arg0-of (h2 / have-rel-role-91 :arg1 (i2 / i) :arg2 (d2 / dad))) :op3 (p3 / person :arg0-of (h3 / have-rel-role-91 :arg1 (i3 / i) :arg2 (d3 / dad))) :op4 (p4 / person :arg0-of (h4 / have-rel-role-91 :arg1 (i4 / i) :arg2 (d4 / dad))) :op5 (p5 / person :arg0-of (h5 / have-rel-role-91 :arg1 (i5 / i) :arg2 (h6 / husband))) :op6 (p6 / person :arg0-of (h7 / have-rel-role-91 :arg1 (i6 / i) :arg2 (h8 / husband))) :op7 (p7 / person :arg0-of (h9 / have-rel-role-91 :arg1 (i7 / i) :arg2 (h10 / husband))) :op7 (p8 / person :arg0-of (h11 / have-rel-role-91 :arg1 (i8 / i) :arg2 (h12 / husband))) :op7 (p9 / person :arg0-of (h13 / have-rel-role-91 :arg1 (i9 / i) :arg2 (h14 / husband)))))
(a / and :op1 (i / increase-01 :arg0 (t / this) :arg1 (r / revenue :mod (f / finance))) :op2 (c / create-01 :arg0 (t2 / this) :arg1 (j / job :mod (n / new))) :op3 (a2 / and :op1 (f2 / find-01 :arg0 (i2 / industry :mod (c2 / certain)) :arg1 (f3 / foot :part-of (i3 / industry)) :manner (f4 / fast :degree (m / more) :compared-to (o / other))) :op2 (c3 / contribute-01 :arg0 (s / some) :arg2 (g / grow-01 :arg1 (p / product :arg1-of (g2 / gross-03) :mod (d / domestic))))))
(t / take-01 :arg0 (a / ambulance) :arg1 (c / condition :arg1-of (s / stable-03)) :arg2 (l / location :name (n / name :op1 "Blue" :op2 "Mountains" :op3 "Hospital")))
(p / possible-01 :arg1 (p2 / push-01 :arg0 (l / law) :arg1 (r / rate :mod (t / tax-01 :arg3 (i / income)) :poss (s / state)) :arg2 (p3 / product-of :op1 3 :op2 2017)) :condition (c / continue-01 :arg0 (s2 / state) :arg1 (m / meet-01 :arg0 (s3 / state) :arg1 (g / goal :mod (r2 / revenue)) :time (y / year :arg1-of (c2 / come-01)))))
(t / turns :arg0 (a / anger-01) :arg1 (a2 / and :op1 (u / universal :mod (u2 / universal :degree (m / most))) :op2 (f / functional :arg1 (e / emotions :mod (h / human)))))
(s / suggest-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg3 (j / judge-01)) :quant (s2 / some)) :arg1 (a / and :op1 (c / change-01 :arg0 (p2 / person) :arg1 (h2 / habit :mod (v / view-01))) :op2 (i / increase-01 :arg1 (p3 / popularity :poss (s3 / service :name (n / name :op1 (w / web) :op2 (s4 / streaming)) :mod (w2 / web) :poss (w3 / web) :example (o / organization :name (n2 / name :op1 "Netflix"))) :arg1-of (i2 / increase-01)))))
(d / discuss-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (c / country :name (n / name :op1 "Ukraine")) :arg2 (d2 / diplomat))) :arg1 (g / government-organization :arg0-of (g2 / govern-01 :arg1 (c2 / country :name (n2 / name :op1 "Ukraine")))) :arg2 (a / and :op1 (d3 / determine-01 :arg0 (g3 / government-organization) :arg1 (a2 / and :op1 (a3 / agree-01 :arg0 (g4 / government-organization) :arg1 (t / trade-01)) :op2 (r / relation-03 :arg0 (c3 / country) :arg1 (t2 / trade-01)))) :op2 (h2 / handing :arg0 (g5 / government-organization) :arg1 (c4 / control-01 :arg0 (g6 / government-organization) :arg1 (t3 / territory :arg1-of (c5 / control-01 :arg0 (c6 / country))) :arg2 (t4 / territory :poss (c7 / country))) :arg1-of (e / effective-04)) :arg1-of (e2 / effective-04)) :location (f / forum :mod (i / international)))
(i / include-91 :arg1 (c / commerce :mod (o / online-to-offline) :mod (o2 / online-to-offline)) :arg2 (a / attract-01 :arg0 (c2 / commerce) :arg1 (p / person :arg0-of (b / buy-01 :arg1 (o3 / online))) :arg2 (o4 / or :op1 (s / store :name (n / name :op1 (o5 / off-line)) :arg1-of (r / regular-03)) :op2 (b2 / buy-01 :arg1 (s2 / service :mod (t / traditional) :mod (o6 / other))))))
(s / same-01 :arg2 (s2 / same-01))
(p / possible-01 :arg1 (a / and :op1 (d / determine-01 :arg0 (g / government-organization :name (n / name :op1 "N-A") :mod (c / chemical)) :arg1 (p2 / possible-01 :arg1 (d2 / determine-01 :arg0 (g2 / government-organization :name (n2 / name :op1 "N-A")) :arg1 (p3 / place :location-of (b / bear-02))))) :op2 (f / form-01 :arg1 (r / region :location-of (f2 / form-01 :arg1 (s / star :arg1-of (r2 / relate-01)))))) :concession (e / even-if :op1 (l / leave-15 :arg1 (s2 / star) :time (l2 / late :degree (m / more)) :mod (e2 / even))))
(g / grant-01 :arg0 (a / and :op1 (p / person :arg0-of (h / have-org-role-91 :arg1 (c / country :name (n / name :op1 "Russia")) :arg2 (p2 / president))) :op2 (p3 / person :name (n2 / name :op1 "Vladimir" :op2 "Putin") :arg0-of (h2 / have-org-role-91 :arg1 (c2 / country) :arg2 (p4 / president)))) :arg1 (c3 / citizenship :mod (c4 / country) :arg1-of (f / fame-01)) :arg2 (p5 / person :name (n3 / name :op1 "Anna" :op2 "Buryak")))
(w / work-09 :arg1 (i / it) :time (c / case :mod (e / either)) :arg1-of (c2 / cause-01 :arg0 (s / shy :arg1 (b / building) :time (a / after :op1 (n / now) :quant (t / temporal-quantity :quant (N / N-A) :unit (y / year)) :mod (j / just)))))
(c / contrast-01 :arg1 (k / know-01 :arg0 (e / everyone) :arg1 (r / revise-01 :polarity - :arg0 (m / movement-07 :arg1 (l / labor)) :arg1 (s / strength :poss (n / nation))) :time (n2 / now)) :arg2 (e2 / enlarged :arg0 (e3 / everyone) :arg1 (i / it)))
(a / appoint-01 :arg0 (p / person :name (n / name :op1 "Prayuth") :arg0-of (h / have-org-role-91 :arg2 (g / general))) :arg1 (p2 / person :name (n2 / name :op1 "Pravit" :op2 "Vongsuwan")) :arg2 (l / left :arg0 (p3 / person) :arg1 (p4 / post :poss (p5 / person :arg0-of (h2 / have-org-role-91 :arg2 (m / minister :topic (d / defend-01)))))) :mod (l2 / left))
(c / cause-01 :arg0 (o / own-01 :arg0 (o2 / or :op1 (g / government-organization :arg0-of (g2 / govern-01)) :op2 (b / base :mod (t / tax-01) :arg1-of (s / surround-01 :arg2 (a / area :mod (e / email)))) :mod (e2 / especially) :mod (e3 / especially)) :arg1 (o3 / own-01 :arg0 (o4 / or :op1 (g3 / government-organization :arg0-of (g4 / govern-01)) :op2 (t2 / thing :arg1-of (t3 / tax-01 :arg3 (t4 / thing :arg1-of (t5 / tax-01 :arg3 (p / property)))))) :arg1 (p2 / person :name (n / name :op1 "Douglas" :op2 "Lindholm") :arg0-of (h / have-org-role-91 :arg1 (c2 / center :part-of (c3 / center :part-of (s2 / state))) :arg2 (d / director :mod (e4 / executive)))))) :arg1 (e5 / event :location (s3 / state :name (n2 / name :op1 "Maryland"))))
FAILED_TO_PARSE#Number of opening and closing brackets doesn't match.
(m / multi-sentence :snt1 (p / possible-01 :arg1 (t / talk-01 :arg1 (d / demand-01 :arg1 (a / and :op1 (d2 / demand-01 :arg1 (m2 / material :mod (r / raw) :mod (d3 / domestic))) :op2 (t2 / thing :arg2-of (p2 / price-01 :arg1 (t3 / thing :arg2-of (p3 / price-01 :arg1 (t4 / thing :arg2-of (p4 / price-01 :arg1 (t5 / thing :arg2-of (p5 / price-01 :arg1 (t6 / thing :arg2-of (p6 / price-01 :arg1 (t7 / thing :arg2-of (p7 / price-01 :arg1 (t8 / thing :arg2-of (p8 / price-01 :arg1 (t9 / thing :arg2-of (p9 / price-01 :arg1 (t10 / thing :arg2-of (p10 / price-01 :arg1 (t11 / thing :arg2-of (p11 / price-01 :arg1 (t12 / thing :arg2-of (p12 / price-01 :arg1 (t13 / thing :arg2-of (h / have-org-role-91 :arg0 (p13 / person :arg0-of (h2 / have-org-role-91 :arg1 (o / organization :name (n / name :op1 "All-Russian" :op2 "Public" :op3 "Organization") :part-of (o2 / organization :name (n2 / name :op1 "All-Russian" :op2 "Public" :op3 "Organization"))) :arg2 (p14 / president :mod (f / first)) :time (f2 / first))))))))))) :arg1-of (i / increase-01)))))) :arg1-of (i2 / increase-01))))))))) :arg1-of (i3 / increase-01))))))) :time (a2 / after :op1 (t14 / temporal-quantity :quant (N / N-A) :unit (m3 / month) :mod (a3 / almost)))))
(m / multi-sentence :snt1 (c / come-01 :arg1 (i / it) :arg4 (l / light) :time (d / date-entity :month 7 :day 1)) :snt2 (i2 / initiated :mode (i3 / interrogative) :arg0 (c2 / code :quant 128.1 :arg1-of (i4 / include-91 :arg2 (c3 / code :arg2-of (c4 / criminal-03) :location (c5 / country :name (n / name :op1 "N-A"))))) :arg1 (p / person :name (n2 / name :op1 "Evgeny" :op2 "Roizman") :arg0-of (h / have-org-role-91 :arg1 (c6 / country) :arg2 (c7 / code :arg2-of (c8 / criminal-03)))) :location (b / blog-01 :arg0 (p2 / person :arg0-of (h2 / have-org-role-91 :arg1 (g / government-organization :name (n3 / name :op1 "N-A") :poss (l2 / location :name (n4 / name :op1 "Yekaterinburg"))) :arg2 (m2 / mayor))))))
(a / alternative :mod (i / ideal) :domain (s / service) :beneficiary (p / person :arg0-of (s2 / study-01) :arg0-of (h / have-03 :arg1 (b / belongings :poss (s3 / service)) :path (a2 / across :op1 (c / country)) :location (c2 / car :arg1-of (u / upgrade-02 :manner (d / dangerously))))))
(s / seem-01 :arg1 (p / possible-01 :arg1 (s2 / sure-02 :arg1 (s3 / safe-01 :arg1 (t / they)))))
(e / event :mod (m / much :degree (s / so)) :time (t / time :mod (t2 / this)))
(m / multi-sentence :snt1 (e / enter-01 :arg0 (a / approach-02 :mod (t / this)) :arg1-of (c / cause-01 :arg0 (a2 / approach-02 :arg1 (c2 / combination :mod (e2 / every) :arg1-of (p / possible-01))))) :snt2 (s / start-01 :arg1 (s2 / start-01 :arg1 (c3 / commonly :arg1-of (u / use-01 :degree (m2 / most))))))
(s / show-01 :arg0 (e / experience-01) :arg1 (o / or :op1 (f / faded :arg1 (e2 / emotions) :manner (s2 / slow)) :op2 (r / recover-02 :arg0 (t / thing :arg2-of (p / price-01) :arg1-of (l / list-01)) :arg1 (t2 / thing :arg2-of (p2 / price-01) :arg1-of (l2 / list-01)) :degree (p3 / part :mod (e3 / either)))))
(s / stop-01 :arg1 (h / hugging :arg1 (i / i)) :mod (j / just))
(p / perched :arg0 (p2 / pupil :part-of (p3 / pupil)) :arg1 (b / bunsen :mod (b2 / bunsen) :poss (p4 / pupil)) :location (m / mats :mod (a / asbestos)) :direction (d / down :op1 (c / country)))
(s / stand-01 :arg1 (p / person :name (n / name :op1 "Kelmendi") :arg0-of (b / beat-03 :arg1 (p2 / person :name (n2 / name :op1 "Kuzyutina")) :time (e / early :degree (m / more)))) :arg2 (o / obstacle :prep-to (r / road :prep-to (g / gold))) :mod (a / again :mod (o2 / once)))
(m / make-02 :arg0 (s / script) :arg1 (p / possible-01 :arg1 (u / use-01 :arg0 (s2 / script) :arg1 (m2 / method :name (n / name :op1 (b / brute-force)) :mod (b2 / brute-force)) :arg2 (f / figure :arg1-of (f2 / found :arg2 (f3 / find-01 :arg1 (p2 / password :mod (p3 / phone) :poss (i / i))))))))
(p / propose-01 :arg0 (o / organization :name (n / name :op1 "Ministry" :op2 "of" :op3 "Communications")) :arg1 (a / allocate :arg0 (o2 / organization) :arg1 (m / monetary-quantity :quant 250000000 :arg1-of (b / budget-01 :arg2 (a2 / and :op1 (o3 / organization :arg0-of (d / depend-01 :polarity -) :arg0-of (d2 / depend-01 :polarity -)) :op2 (c / company :arg0-of (b2 / broadcast-01 :arg1 (t / television))) :op3 (c2 / company :arg0-of (b3 / broadcast-01 :arg1 (r / radio))))))))
(t / transport-01 :arg0 (t2 / they) :arg1 (w / we :quant (l / lot :mod (w2 / whole)) :source (l2 / location :name (n / name :op1 "Zurakhovo"))) :arg4 (l3 / location :name (n2 / name :op1 "Ilovaisk")))
(f / fill-01 :arg1 (p / post :poss (h / he)) :arg2 (p2 / person :name (n / name :op1 "Zhivko" :op2 "Zhivkov") :arg0-of (h2 / head-01 :arg1 (o / organization :name (n2 / name :op1 "Regional" :op2 "Directorate") :part-of (f2 / fund-01 :arg1 (a / agriculture))))) :time (u / until :op1 (d / date-entity :year 2014 :month 1)))
(p / publish-01 :arg1 (r / research-01 :arg0 (l / location :name (n / name :op1 "Rio" :op2 "Tinto" :op3 "Ride") :arg1-of (f / fund-01 :arg0 (l2 / location :name (n2 / name :op1 "Rio" :op2 "Tinto" :op3 "Ride") :arg1-of (f2 / fund-01 :arg0 (l3 / location :name (n3 / name :op1 "Rio" :op2 "Tinto" :op3 "Ride"))))))) :time (t / today) :location (j / journal :mod (m / medicine) :poss (c / country :name (n4 / name :op1 "Australia"))))
(c / contrast-01 :arg1 (h / have-03 :arg0 (w / we) :arg1 (p / program :arg1-of (s / special-02) :topic (a / and :op1 (g / girl) :op2 (w2 / woman :mod (y / young)))) :time (n / now)) :arg2 (n2 / nothing :beneficiary (b / boy) :mod (a2 / almost)))
(s / sky :polarity - :mod (p / peaceful) :topic (p2 / part :part-of (c / country :name (n / name :op1 "Ukraine")) :mod (e / every)))
(c / came :arg1 (r / rain-01 :mod (l / late :degree (m / most)) :arg2-of (i / include-01 :arg1 (b / burst :arg0-of (s / start-01 :arg1 (b2 / before :arg0 (b3 / burst) :time (b4 / before :op1 (8 / 8pm :mod (a / almost) :duration (a2 / about :op1 (t / temporal-quantity :quant (N / N-A) :unit (m2 / minute)))))))))) :time (l2 / late :degree (m3 / most)))
(s / say-01 :arg0 (p / person :name (n / name :op1 "Hattery")) :arg1 (a / and :op1 (l / lynched :arg1 (m / man :quant (a2 / at-least :op1 1865) :arg1-of (b / black-05))) :op2 (j / justify-01 :arg1 (r / rape-01 :arg1 (w / woman :mod (w2 / white))) :time (a3 / always :mod (a4 / almost)))) :li 1865)
(m / multi-sentence :snt1 (m2 / maintain-01 :arg1 (b / beef) :manner (w / well)) :snt2 (m3 / maintain-01 :arg0 (b2 / beef) :arg1 (r / rate :arg1-of (i / import-01 :arg1-of (h / high-02 :degree (m4 / most)))) :arg3 (p / percentage-entity :value (N / N-A))))
(m / multi-sentence :snt1 (s / surprise-01 :arg0 (p / person :arg1-of (b / black-05)) :arg1 (p2 / person :arg1-of (b2 / black-05)) :time (n / now)) :snt2 (a / and :op1 (t / treat-03 :mode (i / interrogative) :arg1 (t2 / they)) :op2 (g / give-01 :arg0 (t3 / terrorist) :arg1 (a2 / and :op1 (f / food) :op2 (p3 / person :arg0-of (s2 / serve-02))) :arg2 (t4 / they) :mod (w / well))))
(h / have-03 :arg0 (i / i) :arg1 (m / motivation :mod (h2 / huge) :purpose (a / attain :arg0 (i2 / i) :arg1 (l / level :mod (n / new)))) :time (a2 / after :op1 (d / defeat-01 :mod (b / bitter) :mod (t / this))))
(m / multi-sentence :snt1 (c / continue-01 :arg1 (p / person :arg1-of (e / expert-01))) :snt2 (c2 / connect-01 :arg1 (p2 / person :arg1-of (e2 / expert-01)) :arg2 (f / fact :topic (a / and :op1 (a2 / averse :polarity - :arg0 (c3 / company :mod (c4 / country :name (n / name :op1 "Belarus")) :quant (m2 / many)) :arg1 (p3 / produce-01 :arg0 (c5 / company) :arg1 (p4 / produce-01) :location (c6 / country))) :op2 (u / use-01 :arg0 (c7 / company) :arg1 (m3 / material :mod (r / raw)) :arg2 (c8 / country) :arg1-of (i / intend-01) :arg1-of (i2 / intend-01 :beneficiary (m4 / market :mod (c9 / country :name (n2 / name :op1 "Belarus"))) :arg1-of (i3 / intend-01)))))))
(w / wearing :arg0 (p / person :name (n / name :op1 "Dmitry" :op2 "Beliakov") :arg0-of (h / have-org-role-91 :arg1 (c / country :name (n2 / name :op1 "N-A")) :arg3 (t / top :mod (t2 / top)))) :arg1 (s / she) :manner (t3 / try-01 :arg0 (p2 / person) :arg1 (c2 / climbed :arg0 (p3 / person) :arg1 (b / be-located-at-91 :arg1 (p4 / person) :arg2 (i / inside :op1 (s2 / school :mod (b2 / blitzed))))) :time (a / after :op1 (e / explode-01 :arg1 (t4 / thing :poss (i2 / i)))) :mod (o / only)))
(c / come-up-11 :arg0 (p / person :name (n / name :op1 "Matt" :op2 "Schroeder") :arg1-of (c2 / cost-01 :arg2 (m / monetary-quantity :quant 1000 :unit (d / dollar))) :arg1-of (c3 / cost-01 :arg2 (m2 / monetary-quantity :quant 1000 :unit (d2 / dollar)))) :arg1 (w / way :arg1 (p2 / person) :arg2 (m3 / monetary-quantity :arg2-of (c4 / cost-01) :arg1-of (s / smart-06))) :duration (t / temporal-quantity :quant (N / N-A) :unit (y / year)) :beneficiary (p3 / person :arg0-of (s2 / study-01) :quant (m4 / many)))
(a / argue-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg3 (j / judge-01)) :quant (s / some)) :arg1 (p2 / possible-01 :arg1 (h2 / hold-01 :arg0 (p3 / person :arg0-of (h3 / have-org-role-91 :arg3 (j2 / judge-01)) :mod (i / imperialism) :poss (p4 / person)) :arg1 (t / truth :quant (s2 / some)))) :prep-in (l / light :time (c / current)))
(c / cause-01 :arg0 (b / ban-01 :arg0 (l / law) :arg1 (a / and :op1 (l2 / law :mod (t / type :quant 1999)) :op2 (l3 / law :mod (t2 / type :quant 1999))) :time (e / eventual) :arg1-of (c2 / cause-01 :arg0 (l4 / law :mod (t3 / type :quant 1999)) :time (e2 / eventual))) :arg1 (t4 / take-10 :arg0 (d / develop-02 :arg0 (l5 / law)) :arg1 (m / multiple :op1 (t5 / temporal-quantity :quant (N / N-A) :unit (d2 / decade))) :mod (u / usual)))
(a / and :op1 (s / study-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (o / organization :name (n / name :op1 "University" :op2 "of" :op3 "California" :op4 "," :op5 "Santa" :op6 "Cruz")))) :arg1 (m / mixing :mod (t / turbulent))) :op2 (a2 / affect-01 :arg0 (p2 / person) :arg1 (h2 / homogeneity :mod (c / chemical) :location (c2 / cluster :mod (s2 / star)))))
(k / know-01 :polarity - :arg1 (a / available-02 :arg2 (a2 / and :op1 (d / date :mod (r / release-01)) :op2 (p / platform))))
(c / contrast-01)
(p / participate-01 :arg0 (a / and :op1 (p2 / person :arg0-of (h / have-org-role-91 :arg1 (c / city :name (n / name :op1 "Moscow")) :arg2 (m / mayor))) :op2 (p3 / person :name (n2 / name :op1 "Sergei" :op2 "Sobyanin") :arg0-of (h2 / have-org-role-91 :arg1 (c2 / city) :arg2 (m2 / mayor))) :op3 (p4 / person :arg0-of (h3 / have-org-role-91 :arg1 (c3 / city) :arg2 (m3 / mayor))) :op4 (p5 / person :arg0-of (h4 / have-org-role-91 :arg1 (c4 / city) :arg2 (m4 / mayor))) :op5 (p6 / person :arg0-of (h5 / have-org-role-91 :arg1 (c5 / city) :arg2 (m5 / mayor))) :op6 (p7 / person :arg0-of (h6 / have-org-role-91 :arg1 (c6 / city) :arg2 (m6 / mayor))) :op6 (p8 / person :arg0-of (h7 / have-org-role-91 :arg1 (c7 / city) :arg2 (m7 / mayor))) :op6 (p9 / person :arg0-of (h8 / have-org-role-91 :arg1 (c8 / country) :arg2 (m8 / mayor))) :op6 (p10 / person :arg0-of (h9 / have-org-role-91 :arg1 (o / organization) :arg2 (m9 / mayor))) :op6 (p11 / person :arg0-of (h10 / have-org-role-91 :arg1 (o2 / organization) :arg2 (m10 / mayor))) :op6 (p12 / person :arg0-of (h11 / have-org-role-91 :arg1 (o3 / organization) :arg2 (m11 / mayor))) :op6 (p13 / person :arg0-of (h12 / have-org-role-91 :arg1 (o4 / organization) :arg2 (m12 / mayor))) :op6 (p14 / person :arg0-of (h13 / have-org-role-91 :arg1 (o5 / organization) :arg2 (m13 / mayor))) :op6 (p15 / person :arg0-of (h14 / have-org-role-91 :arg1 (o6 / organization) :arg2 (m14 / mayor)))) :time (d / date-entity :month 8 :day 26))
(m / multi-sentence :snt1 (c / consider-01 :arg0 (i / i) :arg1 (t / thing :arg1-of (r / report-01 :arg0 (y / you)))) :snt2 (s / say-01 :arg0 (h / he) :arg1 (d / dismiss :arg0 (h2 / he) :arg1 (s2 / she))))
(a / and :op1 (c / create-01 :arg0 (r / raise-01 :arg1 (s / standard :mod (l / live-01) :mod (m / millions))) :arg1 (m2 / market :beneficiary (i / industry))) :op2 (l2 / lifted :arg0 (r2 / raise-01) :arg1 (n / nation :mod (w / whole)) :arg2 (u / undreamed :arg0 (n2 / nation) :arg1 (l3 / level :mod (p / produce-01)))))
(i / introduce-01 :arg1 (b / bill :arg0-of (s / seek-01 :arg1 (c / change-01 :arg1 (d / date :mod (e / enter-01)) :arg2 (f / force-01 :arg1 (c2 / citizen :mod (c3 / country :name (n / name :op1 "N-A"))) :arg2 (d2 / data :mod (d3 / data :arg1-of (p / personal-02))) :time (a / already)))) :time (d4 / date-interval :op1 (d5 / date-entity :year 2016 :month 9 :day 1) :op2 (d6 / date-entity :year 2015 :month 1 :day 1))))
(s / say-01 :arg0 (p / person :name (n / name :op1 "Alyona")) :arg1 (a / and :op1 (h / have-03 :polarity - :arg0 (p2 / person :quant 10) :arg1 (m / memory :poss (p3 / person))) :op2 (h2 / have-03 :arg0 (p4 / person) :arg1 (a2 / and :op1 (g / girl :arg1-of (b / bright-02)) :op2 (g2 / girl :mod (h3 / happy))))) :li 10)
(h / have-03 :arg0 (a / and :op1 (p / person :name (n / name :op1 "Sobchak")) :op2 (p2 / person :name (n2 / name :op1 "Vitorgan"))) :arg1 (c / cigarette :consist-of (p3 / person :arg0-of (h2 / have-rel-role-91 :arg1 (p4 / person) :arg2 (c2 / child)))) :location (l / location :name (n3 / name :op1 "Odessa")))
(b / believe-01 :arg0 (p / person :name (n / name :op1 "Dmitry" :op2 "Medvedev") :arg0-of (h / have-org-role-91 :arg1 (c / country :name (n2 / name :op1 "N-A")) :arg2 (m / minister :mod (p2 / prime)))) :arg1 (r / recommend-01 :arg1 (a / adopt-01 :arg0 (c2 / country) :arg1 (t / technology :mod (n3 / new)) :purpose (p3 / produce-01 :arg0 (c3 / country) :arg1 (r2 / range :arg1-of (d / demand-01 :arg0 (p4 / person :arg0-of (c4 / consume-01)))))) :prep-under (c5 / condition :poss (e / embargo-01)) :prep-under (c6 / condition-01 :arg1 (e2 / embargo-01))))
(b / bring-up-02 :arg0 (p / person :mod (p2 / person :name (n / name :op1 "Harvey"))) :arg1 (r / rate-entity-91 :arg1 (u / under :op1 (b2 / between :op1 (t / temporal-quantity :quant (N / N-A) :unit (y / year)) :op2 (t2 / temporal-quantity :quant (N2 / N-A) :unit (y2 / year)))) :arg2 (t3 / temporal-quantity :quant (N3 / N-A) :unit (y3 / year))) :arg3 (s / score-entity :op1 59 :op2 1))
(m / multi-sentence :snt1 (o / offer-01 :mode (i / interrogative) :arg0 (h / he)) :snt2 (o2 / obligate-01 :mode (i2 / interrogative) :arg2 (p / provide-01 :mode (i3 / interrogative) :arg1 (t / thing :arg1-of (w / word-01)))) :snt3 (o3 / or :mode (i4 / interrogative) :op1 (a / amr-unknown) :op2 (e / equal-01 :mode (i5 / interrogative) :arg1 (y / you))) :snt3 (p2 / possible-01 :mode (i6 / interrogative) :arg1 (b / be-02 :mode (i7 / interrogative))))
(w / want-01 :arg0 (i / i) :arg1 (w2 / watch-01 :arg0 (i2 / i) :arg1 (c / cricket)))
(c / contrast-01 :arg1 (u / up :arg1 (g / group :quant 3 :consist-of (d / drone)) :arg2 (g2 / grabs :location (t / tournament))) :arg2 (l / limit-01 :arg1 (b / bronze :quant (j / just :op1 1)) :arg2 (b2 / bronze :quant 1 :location (c2 / class :name (n / name :op1 (m / men?s) :op2 (t2 / tournament))))))
(m / mess-up-02 :polarity - :arg0 (y / you) :arg1 (l / livelihood :poss (w / we)))
(c / collect-01 :arg0 (s / state :name (n / name :op1 "Maryland")) :arg1 (m / monetary-quantity :quant 1 :unit (d / dollar)) :arg2 (r / revenue :mod (t / tax-01 :arg3 (i / income)) :poss (c2 / corporation)) :location (r2 / region) :degree (m2 / most))
(m / multi-sentence :snt1 (w / win-01 :arg0 (t / team :mod (h / home)) :arg1 (t2 / team :mod (h2 / home)) :mod (a / also) :time (d / day :ord (o / ordinal-entity :value 6) :part-of (c / compete-01)) :mod (a2 / also)) :snt2 (a3 / add-02 :arg0 (p / person :name (n / name :op1 "Renat" :op2 "Saidov") :arg0-of (c2 / competed :location (o2 / over :op1 (c3 / class :mod (1 / 100kg))))) :arg2 (t3 / team?s)))
(p / possible-01 :arg1 (f / find-01 :arg0 (y / you) :arg1 (a / and :op1 (i / information :quant (m / more)) :op2 (n / news) :op3 (s / statistic)) :location (p2 / page :mod (s2 / summer) :mod (s3 / summer))))
(a / and :op1 (d / digging :arg0 (t / they) :arg1 (t2 / trench)) :op2 (b / build-01 :arg0 (t3 / they) :arg1 (a2 / and :op1 (r / roadblocks) :op2 (r2 / reinforcements))))
(c / contrast-01 :arg1 (k / kill-01 :arg0 (e / edition :ord (o / ordinal-entity :value (n / ninth)) :consist-of (c2 / calculus :arg1-of (' / '' :arg0 (a / and :op1 (p / person :name (n2 / name :op1 "Ron" :op2 "Larson")) :op2 (p2 / person :name (n3 / name :op1 "Bruce" :op2 "Edwards")) :op3 (p3 / person :name (n4 / name :op1 "Robert" :op2 "Hostetler")))))) :arg1 (t / thing :arg2-of (p4 / price-01 :arg1 (m / monetary-quantity :quant 290 :unit (d / dollar) :mod (n5 / near))))) :arg2 (p5 / possible-01 :arg1 (p6 / purchase-01 :arg1 (m2 / monetary-quantity :quant 239.99 :unit (d2 / dollar) :mod (n6 / new)) :arg3 (m3 / monetary-quantity :quant 239.99 :unit (d3 / dollar :mod (c3 / country))))))
(m / multi-sentence :snt1 (a / album :mode (i / interrogative) :arg0 (a2 / and :op1 (g / group) :op2 (b / blood :mod (r / royal)) :op3 (b2 / blood :mod (r2 / royal))) :arg1 (p / person :mod (c / country :name (n / name :op1 "N-A")) :mod (c2 / country :name (n2 / name :op1 "N-A"))) :time (n3 / now)) :snt2 (h / hope-01 :mode (i2 / interrogative) :arg0 (p2 / person :mod (c3 / country)) :arg1 (d / duos :arg0 (p3 / person :mod (c4 / country)) :arg1 (d2 / duos :source (n4 / nightclub) :arg1-of (s / straight-04)))))
(a / and :op1 (c / create-01 :arg0 (r / raise-01 :arg1 (s / standard :mod (l / live-01) :mod (m / millions))) :arg1 (m2 / market :beneficiary (i / industry))) :op2 (l2 / lifted :arg0 (r2 / raise-01) :arg1 (n / nation :mod (w / whole)) :arg2 (u / undreamed :arg0 (n2 / nation) :arg1 (l3 / level :mod (p / produce-01)))))
(s / suspend-01 :arg1 (l / license-01 :arg1 (m / mold) :mod (m2 / mold)) :time (d / date-entity :month 2 :year 2013))
(c / contrast-01 :arg1 (t / tell-01 :arg0 (w / woman) :arg1 (r / run-02 :arg0 (w2 / woman) :arg1 (l / life :poss (i / i))) :arg2 (i2 / i)) :arg2 (p / possible-01 :polarity - :arg1 (s / say-01 :arg0 (i3 / i) :arg1 (a / aida) :time (t2 / time))))
(h / help-01 :arg0 (a / amr-unknown) :arg1 (p / person :name (n / name :op1 "Lukashenko")) :arg2 (a2 / amr-unknown))
(a / appreciate-02 :arg0 (i / i) :arg1 (g / god :arg1-of (r / return-01 :arg3 (m / me.here :arg1 (h / he) :location (l / location :name (n / name :op1 "Beslan"))))) :degree (s / so))
(c / contrast-01 :arg1 (a / adult :domain (p / person :name (n / name :op1 "Georgy")) :time (n2 / now)) :arg2 (h / have-rel-role-91 :arg0 (p2 / person) :arg1 (h2 / he) :arg2 (b / brother) :mod (s / still)))
(r / refuse-01 :arg0 (t / they) :arg1 (c / comment-01 :arg0 (t2 / they) :arg3 (i / issue-02 :mod (t3 / this)) :mod (a / any)))
(n / note-01 :arg0 (t / thing :arg1-of (r / report-01 :arg0 (t2 / thing :arg1-of (r2 / report-01 :arg0 (t3 / thing :arg1-of (r3 / report-01 :arg0 (t4 / thing :arg1-of (r4 / report-01 :arg0 (t5 / thing :arg1-of (r5 / report-01 :arg0 (t6 / thing :arg1-of (r6 / report-01 :arg0 (t7 / thing :arg1-of (r7 / report-01 :arg0 (t8 / thing :arg1-of (r8 / report-01 :arg0 (t9 / thing :arg1-of (r9 / report-01 :arg0 (t10 / thing :arg1-of (r10 / report-01 :arg0 (t11 / thing :arg1-of (r11 / report-01 :arg0 (t12 / thing :arg1-of (r12 / report-01 :arg0 (t13 / thing :arg1-of (r13 / report-01)))))))))))))))))))))))))) :arg1 (m / manage-02 :polarity - :arg1 (p / presence :mod (a / asbestos)) :arg1-of (a2 / accord-02 :arg2 (r14 / regulate-01 :mod (v / various)))))
(p / possible-01 :polarity - :arg1 (o / or :op1 (i / implement-01 :arg0 (w / we) :arg1 (p2 / plan :mod (s / substitution :arg1-of (i2 / import-01))) :degree (f / full)) :op2 (i3 / increase-01 :arg0 (w2 / we) :arg1 (s2 / self-sufficiency :poss (m / market :mod (c / country :name (n / name :op1 "N-A")))) :manner (p3 / produce-01 :mod (d / domestic)))) :time (s3 / stage :mod (t / this)) :time (s4 / stage :mod (t2 / this)))
(n / name :quant 101 :mod (c / celebrity) :location (l / list-01))
FAILED_TO_PARSE#Two concepts in a row.
(h / have-rel-role-91 :mode (i / interrogative) :arg0 (y / you) :arg1 (p / person :arg0-of (h2 / have-rel-role-91 :arg2 (b / brother))) :arg2 (b2 / brother))
(s / say-01 :arg0 (i / i) :arg1 (w / want-01 :arg0 (i2 / i) :arg1 (s2 / speak-01 :arg0 (i3 / i) :arg2 (p / person :arg0-of (s3 / send-01 :arg1 (i4 / it) :arg2 (w2 / we)))) :mod (e / even)))
(s / say-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (l / location :name (n / name :op1 "Louisiana")) :arg2 (o / official))) :arg1 (c / contrast-01 :arg1 (p2 / punish-01 :polarity - :arg0 (p3 / person) :arg1 (p4 / person :arg0-of (h2 / have-org-role-91 :arg1 (l2 / location :name (n2 / name :op1 "Louisiana")) :arg2 (o2 / official)))) :arg2 (p5 / pend-01 :arg1 (a / application :poss (d / doctor)) :arg2 (a2 / application :poss (d2 / doctor)))) :arg1-of (a3 / argue-01 :arg0 (o3 / official)))
(m / multi-sentence :snt1 (h / have-03 :arg0 (p / person :arg0-of (h2 / have-org-role-91 :arg1 (p2 / person :name (n / name :op1 "Emmett" :op2 "Shear") :arg0-of (h3 / have-org-role-91 :arg1 (c / country :name (n2 / name :op1 "N-A")) :arg2 (c2 / ceo))) :arg2 (c3 / ceo))) :arg1 (t / thing :arg1-of (s / state-01) :mod (t2 / this) :mod (a / all)) :time (m2 / moment) :arg1-of (c4 / cause-01 :arg0 (a2 / and :op1 (b / believe-01 :arg0 (p3 / person) :arg1 (c5 / community :poss (w / we))) :op2 (s2 / share-01 :arg0 (p4 / person) :arg1 (a3 / and :op1 (v / value :poss (w2 / we)) :op2 (e / envision-01 :duration (l / long-03))))))) :snt2 (a4 / and :op1 (s3 / share-01 :arg0 (p5 / person) :arg1 (v2 / value :poss (w3 / we))) :op2 (w4 / want-01 :arg0 (p6 / person) :arg1 (h4 / help-01 :arg0 (p7 / person) :arg2 (w5 / we) :manner (f / fast :degree (m3 / more))))))
FAILED_TO_PARSE#Two concepts in a row.
(a / and :op1 (g / get-05 :arg1 (i / i) :arg2 (u / up)) :op2 (c / climb :arg0 (i2 / i) :arg1 (p / person :arg0-of (h / have-rel-role-91 :arg1 (i3 / i) :arg2 (m / mum)))))
(t / tell-01 :arg0 (a / and :op1 (p / person :arg0-of (h / head-01 :arg1 (c / company :arg0-of (c2 / construct-01) :mod (o / organization :name (n / name :op1 "Profi-Invest"))))) :op2 (p2 / person :name (n2 / name :op1 "Anatoly" :op2 "Demyanko") :arg0-of (h2 / have-org-role-91 :arg1 (o2 / organization) :arg3 (h3 / head-01 :arg0 (p3 / person) :arg1 (o3 / organization)))) :op3 (p4 / person :arg0-of (h4 / have-org-role-91 :arg1 (o4 / organization) :arg3 (h5 / head-01 :arg0 (p5 / person) :arg1 (o5 / organization)))) :op4 (p6 / person :arg0-of (h6 / have-org-role-91 :arg1 (o6 / organization) :arg3 (h7 / head-01 :arg0 (p7 / person) :arg1 (o7 / organization)))) :op5 (p8 / person :arg0-of (h8 / have-org-role-91 :arg1 (o8 / organization) :arg3 (h9 / head-01 :arg0 (p9 / person) :arg1 (o9 / organization))))) :arg1 (c3 / contrast-01 :arg1 (d / date :mod (s / some :mod (q / quite))) :arg2 (o10 / offer-01 :polarity - :arg1 (m / mechanism :mod (o11 / other)) :arg4 (b / business) :time (s2 / so-far))) :arg2 (o12 / organization :name (n3 / name :op1 "RGB")))
(s / set-02 :arg0 (p / person :name (n / name :op1 "Charles" :op2 "Macnair") :arg0-of (h / have-org-role-91 :arg2 (s2 / sheriff))) :arg1 (d / date :mod (t / try-02)) :time (d2 / date-entity :season (N / N-A)))
(m / multi-sentence :snt1 (a / and :op1 (d / decide-01 :arg0 (p / person :mod (c / country :name (n / name :op1 "France"))) :arg1 (t / this)) :op2 (d2 / decide-01 :polarity - :arg0 (p2 / person :name (n2 / name :op1 "Nadal") :arg0-of (h / have-org-role-91 :arg2 (m2 / mr.))))) :snt2 (q / quote-01 :arg0 (p3 / person :name (n3 / name :op1 "Nadal") :arg0-of (h2 / have-org-role-91 :arg2 (m3 / mr.))) :arg2 (t2 / treaty :name (n4 / name :op1 "N-A"))))
(s / say-01 :arg0 (h / he) :arg1 (p / plan-01 :arg1 (m / modernize-01 :arg1 (p2 / plant :mod (r / refinery :mod (o / oil)) :mod (l / lisichansky))) :arg3 (h2 / he)))
(a / address-03 :arg0 (p / person :name (n / name :op1 "Poroshenko")) :arg2 (m / meet-03 :arg0 (p2 / person) :arg1 (p3 / person :arg0-of (l / lead-02 :arg1 (o / organization :name (n2 / name :op1 "European" :op2 "Union")))) :location (c / city :name (n3 / name :op1 "Brussels")) :purpose (u / urge-01 :arg0 (p4 / person) :arg1 (a2 / act-02 :arg0 (p5 / person) :purpose (p6 / prevent-01 :arg0 (p7 / person) :arg1 (a3 / aggression :mod (f / further) :prep-against (c2 / country :name (n4 / name :op1 "Ukraine"))) :arg2 (p8 / person :arg0-of (d / depend-01 :polarity -) :arg0-of (d2 / depend-01 :polarity -) :arg0-of (d3 / depend-01 :polarity - :duration (t / temporal-quantity :quant (N / N-A) :unit (y / year)))))))))
(a / and :op1 (o / old :degree (m / more) :domain (i / i) :time (n / now)) :op2 (u / use-01 :arg0 (p / person) :arg1 (s / say-01 :arg0 (p2 / person) :arg1 (t / true :polarity - :domain (p3 / person)))))
(p / possible-01 :arg1 (w / wait-01 :arg1 (a / anyone :quant (a2 / all)) :time (n / now)))
(a / admit-01 :arg1 (h / have-03 :arg0 (h2 / he) :arg1 (o / or :op1 (k / know-01 :arg0 (h3 / he) :arg1 (h4 / have-03 :arg0 (h5 / he) :arg1 (o2 / or :op1 (k2 / knowledge) :op2 (e / expertise))) :quant (e2 / enough)) :op2 (p / portraying :arg0 (h6 / he) :arg1 (h7 / history :poss (r / region))))) :time (a2 / after :op1 (s / start-01 :arg0 (h8 / he) :arg1 (c / collect-01 :arg0 (h9 / he) :arg1 (i / information) :purpose (g / game)))))
(d / democrat :mod (d2 / drunk :degree (m / most)) :location (s / state :name (n / name :op1 "Texas")) :domain (i / i))
(c / contrast-01 :arg1 (a / and :op1 (t / travel-01 :arg0 (v / vehicle :quant 4) :location (i / in-front-of :op1 (i2 / i))) :op2 (b / be-located-at-91 :arg1 (p / person :quant 3) :arg2 (b2 / behind))) :arg2 (l / leave-17 :arg1 (v2 / vehicle :quant 2 :mod (o / only)) :time (a2 / and :op1 (s / say-01 :arg1 (i3 / it)) :op2 (d / do-02 :arg1 (v3 / vehicle)))))
(s / send-01 :arg1 (c / case :arg2-of (c2 / criminal-03)) :arg2 (c3 / court) :arg0-of (r / report-01 :arg1 (s2 / serve-01 :arg0 (s3 / service :mod (p / press) :poss (o / organization :name (n / name :op1 "Office" :op2 "of" :op3 "Investigations" :op4 "of" :op5 "the" :op6 "Russian" :op7 "Investigation" :op8 "Committee"))) :arg2 (l / location :name (n2 / name :op1 "Chuvashia")))))
(t / there?s :arg1 (s / space :quant (l / lot)) :mod (y / you?re))
(s / say-01 :arg0 (h / he) :arg1 (o / obligate-01 :arg2 (a / and :op1 (r / restart-01 :arg0 (w / we) :arg1 (t / talk-01 :mod (s2 / substantive)) :time (i / immediate)) :op2 (b / be-located-at-91 :arg1 (w2 / we) :arg2 (i2 / issue-02 :mod (t2 / technical) :mod (o2 / only :polarity -))) :op3 (b2 / be-located-at-91 :arg1 (w3 / we) :arg2 (o3 / organization :mod (p / politics) :location (s3 / southeast :part-of (c / country :name (n / name :op1 "Ukraine")))) :purpose (s4 / serve-01 :arg0 (w4 / we) :arg1 (i3 / interest :poss (p2 / person :arg0-of (l / live-01))))))))
(a / and :op1 (e / experiment-01 :quant 18 :location (h / home :poss (a2 / and :op1 (p / person :arg0-of (p2 / produce-01 :arg1 (g / gold))) :op2 (p3 / person :arg0-of (o / own-01 :arg1 (i / i))) :op3 (p4 / person :name (n / name :op1 "Ivan" :op2 "Demidov") :arg0-of (h2 / have-rel-role-91 :arg1 (i2 / i) :arg2 (s / son))))) :location (h3 / home :poss (a3 / and :op1 (p5 / person :arg0-of (p6 / produce-01 :arg1 (g2 / gold))) :op2 (p7 / person :arg0-of (o2 / own-01 :arg1 (i3 / i)))))) :op2 (- / -rrb- :arg0 (a4 / and :op1 (p8 / person) :op2 (p9 / person)) :arg1 (p10 / person :arg0-of (h4 / have-rel-role-91 :arg1 (p11 / person) :arg2 (s2 / son))) :time (f / former)))
(p / plan-01 :arg1 (a / and :op1 (p2 / present-01 :arg1 (r / result :arg1-of (c / conduct-01 :arg0 (s / session :arg1-of (c2 / conduct-01 :arg0 (s2 / session :mod (p3 / person :arg1-of (e / expert-01))) :time (b / before :op1 (n / now) :duration (t / temporal-quantity :quant (N / N-A) :unit (y / year)))))))) :op2 (p4 / presented :arg1 (c3 / checklist :mod (f / final) :purpose (e2 / evaluate :arg1 (e3 / effective-04 :arg0 (o / organization :mod (s3 / science))))))))
(c / contrast-01 :arg1 (c2 / come-01 :arg1 (h / horror :mod (t / this)) :direction (b / back) :destination (y / you) :frequency (r / rate-entity-91 :arg3 (t2 / temporal-quantity :quant (N / N-A) :unit (d / day)))) :arg2 (w / wish-01 :arg0 (i / i) :arg1 (p / possible-01 :arg1 (s / stop-01 :arg0 (i2 / i) :arg1 (r2 / recalling :arg0 (i3 / i) :arg1 (i4 / it)))) :arg1-of (s2 / say-01 :arg0 (h2 / he) :time (y2 / yesterday))))
(b / byline-91 :arg2 (p / person :name (n / name :op1 "Aleksandr" :op2 "Miridonov")))
(a / and :op1 (t / thin-skinned :arg1 (m / man :mod (s / same) :arg1-of (s2 / same-01)) :degree (m2 / more :mod (e / even))) :op2 (p / peevish :arg1 (a2 / and :op1 (p2 / person :arg0-of (s3 / smuggle-01 :arg1 (b / befuddled))) :op2 (p3 / person :arg0-of (h / have-rel-role-91 :arg1 (m3 / man) :arg2 (w / wrecker))) :op3 (p4 / person :arg0-of (h2 / have-rel-role-91 :arg1 (m4 / man) :arg2 (w2 / wrecker))) :op4 (p5 / person :arg0-of (h3 / have-rel-role-91 :arg1 (m5 / man) :arg2 (w3 / wrecker))) :op5 (p6 / person :arg0-of (h4 / have-rel-role-91 :arg1 (m6 / man) :arg2 (w4 / wrecker))) :op5 (p7 / person :arg0-of (b2 / belong-01 :arg1 (o / or :op1 (r / refuse-01 :arg0 (w5 / woman) :arg1 (r2 / refuse-01 :arg0 (w6 / woman) :arg1 (o2 / or :op1 (r3 / refuse-01 :arg0 (w7 / woman)) :op2 (t2 / twit :arg0 (w8 / woman) :arg1 (h5 / hand)))))))))))
(s / say-01 :arg0 (b / bill) :arg1 (o / obligate-01 :arg2 (p / produce-01 :arg1 (g / good :quant (l / less-than :op1 (p2 / percentage-entity :value (N / N-A)))) :location (s2 / store) :mod (d / domestic))) :arg1-of (s3 / say-01 :arg0 (b2 / bill)))
(l / look-01 :arg0 (h / he) :mod (a / again))
(r / report-01 :arg0 (p / publication :name (n / name :op1 "Interfax")) :arg1 (f / file-01 :arg1 (s / sue-02 :ord (o / ordinal-entity :value 1)) :time (d / date-entity :month 8 :day 14)))
(u / union-02 :arg1 (u2 / union-02 :arg1 (u3 / union-02 :arg2 (r / rich :degree (m / more)))))
(a / and :op1 (h / hide-01 :arg0 (t / they) :arg1 (i / intend-01 :arg0 (t2 / they) :arg1 (w / win-01 :arg0 (t3 / they) :arg2 (y / year :mod (t4 / this))))) :op2 (s / speak-01 :arg0 (t5 / they) :arg1 (t6 / thing :arg1-of (i2 / intend-01 :arg0 (t7 / they))) :time (y2 / year :mod (t8 / this)) :arg1-of (p / public-02)))
(f / feature-01 :arg0 (u / url-entity :value (p / particulars)) :arg1 (p2 / picture-01 :arg1 (r / room :mod (l / live-01) :arg0-of (i / include-01 :arg1 (p3 / pig) :arg2 (r2 / resting :mod (h / head)) :medium (s / settee :mod (h2 / head))))))
(a / appear-01 :arg1 (h / he) :arg1-of (c / cause-01 :arg0 (a2 / appear-01 :arg1 (h2 / he) :location (o / organization :name (n / name :op1 "Karratha" :op2 "Magistrates" :op3 "Court")) :time (d / date-entity :month 9 :day 23))))
(m / mean-02 :arg0 (s / society :mod (c / compliant)) :arg1 (c2 / consented :arg0 (s2 / section :mod (e / every) :part-of (i / it)) :arg1 (i2 / infringe-01 :arg1 (s3 / spared :mod (p / providentially))) :arg2 (p2 / principle :poss (g / group))))
(s / say-01 :arg0 (p / person :name (n / name :op1 "Liksutov")) :arg1 (e / early :degree (t / too) :domain (s2 / say-01 :arg1 (d / decide-01 :mode (i / interrogative) :arg1 (t2 / thing :mod (a / any) :arg1-of (d2 / decide-01))))))
(s / suppose-01 :arg1 (a / and :op1 (r / rosemary :arg1 (r2 / rabbit :mod (t / this)) :manner (e / exclusive-02) :time (l / life :poss (g / government-organization :name (n / name :op1 "N-A")))) :op2 (t2 / take-01 :arg1 (m / meat :poss (g2 / government-organization)) :arg3 (a2 / aroma :arg1-of (r3 / record-01 :arg1-of (h / high-02))))))
FAILED_TO_PARSE#Two concepts in a row.
(t / take-01 :mode (i / imperative) :arg0 (y / you) :arg1 (s / shoot-01 :quant (m / multiple)) :arg1-of (c / cause-01 :arg0 (w / work-01 :polarity - :arg0 (t2 / they))))
(d / discover-01 :arg0 (s / scholar) :arg1 (d2 / develop-02 :arg1 (b / beam :mod (t / this)) :arg4 (d3 / dispute-01 :arg2 (m / manage-01 :arg1 (m2 / manage-01)) :arg1-of (e / effective-04) :time (c / conflict-01))) :prep-as (p / part :part-of (p2 / project :topic (r / research-01 :arg1 (r2 / research-01)) :arg1-of (m3 / major-02))))
(m / manage-02 :arg0 (p / person :arg0-of (h / hack-04)) :arg1 (b / break-13 :arg0 (p2 / person) :arg1 (p3 / passwords :arg1-of (w / weak-02)) :purpose (- / -lrb- :arg1 (s / service :mod (s2 / storage :mod (d / data))) :arg2 (i / icloud))) :time (a / after :op1 (a2 / appear-01 :arg1 (p4 / photo :poss (p5 / person) :mod (i2 / intimate)) :location (w2 / website :poss (p6 / person :name (n / name :op1 "Perez" :op2 "Hilton"))))))
(k / kill-01 :arg0 (o / officer :mod (p / police) :location (p2 / person :name (n / name :op1 "Ferguson"))) :arg1 (t / teenager :arg1-of (a / arm-01 :polarity -)) :time (e / early :op1 (m / month :mod (t2 / this)) :degree (m2 / more)))
(s / say-01 :arg0 (s2 / she) :arg1 (t / think-01 :polarity - :arg0 (i / i) :arg1 (g / get-01 :arg0 (y / you) :arg1 (p / person :quant (l / lot) :arg0-of (t2 / talk-01 :arg1 (a / and :op1 (w / whiteness) :op2 (p2 / privilege)))) :arg2 (w2 / way :mod (l2 / level :arg1-of (h / high-02) :mod (s3 / such))))) :location (f / feminist :mod (f2 / feminist)))
(h / head-01 :arg0 (p / person :name (n / name :op1 "Atidzhe" :op2 "Alieva-Veli")) :arg1 (p2 / position-02 :arg0 (s / she)) :mod (d / deputy) :mod (o / only))
(c / crash-01 :arg1 (p / plane :arg1-of (p2 / private-03)) :location (l / location :name (n / name :op1 "Colorado")))
(c / consider-02 :arg0 (o / organization :name (n / name :op1 "Moscow" :op2 "City" :op3 "Government")) :arg1 (o2 / option :mod (i / introduce-02 :arg1 (z / zone :mod (m / manipulate-01 :arg1 (e / enter-01))) :prep-as (m2 / method :instrument-of (c2 / congestion :arg1 (r / road :location (r2 / road :location (p / province :name (n2 / name :op1 "N-A"))) :arg1-of (m3 / major-02) :mod (o3 / other)))))) :arg2 (r3 / reference-04 :arg1 (a / and :op1 (p2 / person :arg0-of (h / have-org-role-91 :arg2 (m4 / mayor :mod (d / deputy)))) :op2 (p3 / person :name (n3 / name :op1 "Maxim" :op2 "Liksutov") :arg0-of (h2 / have-org-role-91 :arg1 (c3 / city) :arg2 (m5 / mayor :mod (d2 / deputy)))))))
(t / thing :manner-of (r / remove-01))
(r / require-01 :arg0 (a / and :op1 (h / health) :op2 (o / organization :name (n / name :op1 "Safety" :op2 "Executive")) :location (c / country :name (n2 / name :op1 "Britain"))) :arg1 (w / work-01 :arg0 (a2 / and) :arg1 (l / license-01 :arg1 (a3 / and))))
(s / say-01 :arg0 (r / rule) :arg1 (o / obligate-01 :arg2 (g / get-01 :arg1 (p / permit-01 :arg1 (p2 / permit-01 :arg1 (p3 / permit-01 :arg0 (c / committee :name (n / name :op1 (u / ukrainian)) :mod (s2 / state :name (n2 / name :op1 "Rio" :op2 "de" :op3 "Janeiro"))) :arg1-of (s3 / special-02)))))))
(s / say-01 :arg1 (h / hugged :polarity - :arg0 (p / person :arg0-of (h2 / have-rel-role-91 :arg1 (i / i) :arg2 (f / father))) :arg1 (i2 / i) :time (e / ever)) :arg2 (p2 / person :name (n / name :op1 "Lenny" :op2 "Henry")))
(a / and :op1 (c / cause-01 :arg0 (c2 / cost-01 :arg1 (v / vehicle :mod (e / electric)) :arg1-of (h / high-02)) :arg1 (d / demand-01) :arg1-of (c3 / cause-01 :arg0 (c4 / cost-01 :arg1 (v2 / vehicle :mod (e2 / electric)) :arg2 (m / monetary-quantity :arg1-of (c5 / cost-01 :arg2 (v3 / vehicle :mod (e3 / electric)))) :arg1-of (h2 / high-02)))) :op2 (b / break-through-26 :polarity - :arg1 (p / person :arg0-of (o / own-01) :mod (t / this))))
FAILED_TO_PARSE#Two concepts in a row.
(s / seem-01 :arg1 (r / resemble-01 :arg1 (i / it) :arg2 (e / evil :poss (e2 / evil :quant (a / all)))) :time (a2 / and :op1 (f / fanatic :arg0 (t / terrorist) :arg1 (p / person :mod (r2 / religious-group :name (n / name :op1 "N-A")))) :op2 (k / kill-01 :arg0 (t2 / terrorist) :arg1 (a3 / and :op1 (c / child) :op2 (p2 / person :arg0-of (h / have-rel-role-91 :arg1 (p3 / person) :arg2 (p4 / parent))))) :time (s2 / start-01 :arg1 (t3 / term :mod (n2 / new)))))
(r / require-01 :arg0 (m / measure-01 :arg0 (a / and :op1 (p / person :arg0-of (h / have-org-role-91 :arg1 (l / location :name (n / name :op1 "Louisiana")) :arg2 (g / governor))) :op2 (p2 / person :name (n2 / name :op1 "Bobby" :op2 "Jindal") :arg0-of (h2 / have-org-role-91 :arg1 (l2 / location :name (n3 / name :op1 "Louisiana")) :arg2 (g2 / governor)))) :arg1-of (s / sign-02 :arg0 (a2 / and :op1 (p3 / person :arg0-of (h3 / have-org-role-91 :arg1 (l3 / location :name (n4 / name :op1 "Louisiana")) :arg2 (g3 / governor))) :op2 (p4 / person :arg0-of (h4 / have-org-role-91 :arg1 (l4 / location :name (n5 / name :op1 "Louisiana")) :arg2 (g4 / governor)))))) :arg1 (a3 / and :op1 (p5 / person :arg0-of (p6 / perform-02 :arg1 (a4 / abortions))) :op2 (p7 / person :arg0-of (p8 / perform-02 :arg1 (a5 / abortions)))) :location (h5 / hospital) :time (a6 / after :op1 (n6 / now) :quant (u / up-to :op1 (m2 / multiple :op1 (d / distance-quantity :quant (N / N-A) :unit (m3 / mile))))))
(a / and :op1 (l / likely-01 :arg1 (s / stand-01 :arg1 (l2 / level :arg1-of (t / target-01) :mod (p / percentage-entity :value (N / N-A))) :arg2 (i / inflation :mod (p2 / person :arg0-of (c / consume-01)) :location (c2 / country :name (n / name :op1 "Russia")))) :arg1-of (l3 / likely-01)) :op2 (g / give-01 :arg0 (c3 / country) :arg1 (s2 / save-01 :arg0 (c4 / country :name (n2 / name :op1 "Russian" :op2 "Federation")) :mod (f / finance)) :arg2 (d / disposal :arg0 (c5 / country)) :mod (s3 / still)))
(p / person :arg0-of (f / farm-01 :arg2 (c / continent :name (n / name :op1 "N-A"))) :mod (g / good :degree (m / most)))
(d / discuss-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (c / country :name (n / name :op1 "Ukraine")) :arg2 (d2 / diplomat))) :arg1 (g / government-organization :arg0-of (g2 / govern-01 :arg1 (c2 / country :name (n2 / name :op1 "Ukraine")))) :arg2 (a / and :op1 (d3 / determine-01 :arg0 (g3 / government-organization) :arg1 (a2 / and :op1 (a3 / agree-01 :arg0 (g4 / government-organization) :arg1 (t / trade-01)) :op2 (r / relation-03 :arg0 (c3 / country) :arg1 (t2 / trade-01)))) :op2 (h2 / handing :arg0 (g5 / government-organization) :arg1 (c4 / control-01 :arg0 (g6 / government-organization) :arg1 (t3 / territory :arg1-of (c5 / control-01 :arg0 (c6 / country))) :arg2 (t4 / territory :poss (c7 / country))) :arg1-of (e / effective-04)) :arg1-of (e2 / effective-04)) :location (f / forum :mod (i / international)))
(h / head :mode (i / interrogative) :mod (t / thick))
(h / have-03 :arg0 (a / and :op1 (p / person :name (n / name :op1 "Sobchak")) :op2 (p2 / person :name (n2 / name :op1 "Vitorgan"))) :arg1 (c / cigarette :consist-of (p3 / person :arg0-of (h2 / have-rel-role-91 :arg1 (p4 / person) :arg2 (c2 / child)))) :location (l / location :name (n3 / name :op1 "Odessa")))
(c / contrast-01 :arg1 (s / speak-01 :polarity - :arg0 (s2 / she) :arg2 (h / he) :topic (l / live-01 :arg0 (s3 / she) :location (c2 / chill :location (n / north :part-of (n2 / north)) :arg1-of (g / grow-03 :arg0 (s4 / she))))) :arg2 (d / doubt-01 :polarity - :arg0 (h2 / he) :arg1 (r / resemble-01 :arg1 (i / it) :arg2 (e / essentials :quant (a / all) :arg1-of (r2 / resemble-01)) :location (h3 / here))))
(i / important :degree (m / most) :domain (h / here :location (h2 / here)))
FAILED_TO_PARSE#Two concepts in a row.
(q / question-01 :arg1 (p / possible-01 :arg1 (p2 / provide-01 :arg0 (h / he) :arg1 (a / answer-01 :mod (p3 / partial))) :arg0-of (s / sad-02)) :arg0-of (s2 / sad-02))
(r / require-01 :arg0 (a / and :op1 (h / health) :op2 (o / organization :name (n / name :op1 "Safety" :op2 "Executive")) :location (c / country :name (n2 / name :op1 "Britain"))) :arg1 (w / work-01 :arg0 (a2 / and) :arg1 (l / license-01 :arg1 (a3 / and))))
(m / multi-sentence :snt1 (l / leave-11 :arg0 (i / i) :time (b / before :op1 (r / rush-01 :arg1 (t / terrorist) :arg2 (y / yard))) :time (b2 / before :op1 (r2 / rush-01 :arg1 (t2 / terrorist) :arg2 (y2 / yard)))) :snt2 (c / cause-01 :arg1 (l2 / leave-11 :arg0 (b3 / boy :mod (l3 / little) :poss (i2 / i)) :arg1 (c2 / course :topic (h / horror)) :duration (t3 / temporal-quantity :quant (N / N-A) :unit (d / day)))))
(m / multi-sentence :snt1 (p / possible-01 :arg1 (t / talk-01 :arg1 (d / demand-01 :arg1 (a / and :op1 (d2 / demand-01 :arg1 (m2 / material :mod (r / raw) :mod (d3 / domestic))) :op2 (t2 / thing :arg2-of (p2 / price-01 :arg1 (t3 / thing :arg2-of (p3 / price-01 :arg1 (t4 / thing :arg2-of (p4 / price-01 :arg1 (t5 / thing :arg2-of (p5 / price-01 :arg1 (t6 / thing :arg2-of (p6 / price-01 :arg1 (t7 / thing :arg2-of (p7 / price-01 :arg1 (t8 / thing :arg2-of (p8 / price-01 :arg1 (t9 / thing :arg2-of (p9 / price-01 :arg1 (t10 / thing :arg2-of (p10 / price-01 :arg1 (t11 / thing :arg2-of (p11 / price-01 :arg1 (t12 / thing :arg2-of (p12 / price-01 :arg1 (t13 / thing :arg2-of (h / have-org-role-91 :arg0 (p13 / person :arg0-of (h2 / have-org-role-91 :arg1 (o / organization :name (n / name :op1 "All-Russian" :op2 "Public" :op3 "Organization") :part-of (o2 / organization :name (n2 / name :op1 "All-Russian" :op2 "Public" :op3 "Organization"))) :arg2 (p14 / president :mod (f / first)) :time (f2 / first))))))))))) :arg1-of (i / increase-01)))))) :arg1-of (i2 / increase-01))))))))) :arg1-of (i3 / increase-01))))))) :time (a2 / after :op1 (t14 / temporal-quantity :quant (N / N-A) :unit (m3 / month) :mod (a3 / almost)))))
(c / contrast-01 :arg1 (r / resemble-01 :arg1 (s / situation :arg1-of (r2 / resemble-01) :prep-with (p / product :mod (o / other) :mod (f / food))) :arg2 (s2 / situation :mod (f2 / food :mod (o2 / other))) :manner (w / well :degree (v / very))) :arg2 (e / event :mod (i / isn?t) :time (n / now)))
(m / multi-sentence :snt1 (b / belong-01 :arg0 (v / volume :quant-of (a / attract-01 :arg1 (i / invest-01) :arg2 (e / exchange-01 :arg1 (s / stock :mod (c / country :name (n / name :op1 "US"))))) :mod (l / large :degree (m2 / most))) :arg1 (s2 / system :arg0-of (p / pay-01 :arg1 (s3 / stock :poss (s4 / system)))) :time (u / until :op1 (n2 / now))) :snt2 (d / deal-01 :arg2 (d2 / deal)))
(g / give-01 :arg1 (a / advice) :arg2 (f / factory :arg1-of (o / own-01 :arg0 (c / company :mod (a2 / agrokompleks)))))
(p / play-11 :polarity - :arg2 (j / jazz) :mod (t / too) :mod (t2 / too))
(c / chalks :arg0 (p / person :name (n / name :op1 "Galkin")) :arg1 (t / this) :purpose (c2 / chefs :arg0 (p2 / person) :arg1 (p3 / person :mod (l / lazy :degree (t2 / too)) :arg0-of (u / use-01 :arg1 (f / fish) :arg2 (w / world-region :name (n2 / name :op1 "Far" :op2 "East")) :mod (n3 / new)))))
(u / use-01 :arg1 (b / buy-01))
(m / multi-sentence :snt2 (e / eat-01 :mode (i / interrogative) :arg0 (a / amr-unknown) :arg1 (a2 / and :op1 (p / person :name (n / name :op1 "Superman") :arg0-of (e2 / eat-01 :arg1 (s / spinach))) :op2 (p2 / person :name (n2 / name :op1 "Batman") :arg0-of (h / have-rel-role-91 :arg1 (p3 / person) :arg2 (g / gumshoe))) :op3 (p4 / person :arg0-of (h2 / have-rel-role-91 :arg1 (p5 / person) :arg2 (g2 / gumshoe))) :op4 (p6 / person :arg0-of (h3 / have-rel-role-91 :arg1 (p7 / person) :arg2 (g3 / gumshoe))) :op5 (p8 / person :mod (s2 / such) :mod (s3 / such)))) :snt1 (g4 / give-01 :arg0 (p9 / person) :arg1 (d / dozens :quant (m2 / many)) :arg2 (c / character :mod (c2 / character))))
(c / challenge-01 :arg2 (g / go-08 :arg1 (t / thing :arg0-of (r / refine-01 :arg1 (i / ice)) :mod (t2 / this)) :arg2 (w / wrong)))
(s / say-01 :arg0 (p / person :name (n / name :op1 "Viktor" :op2 "Zyukin") :arg0-of (h / have-org-role-91 :arg1 (g / government-organization :name (n2 / name :op1 "N-A") :mod (a / airline?s)) :arg2 (d / director :mod (g2 / general)))) :arg1 (a2 / amount :quant 1.6 :domain (a3 / amount)))
(t / tweet :arg1 (t2 / thing :arg1-of (p / precede-01 :arg2 (a / account :poss (i / i)))) :arg2 (a2 / account :poss (i2 / i)) :mod (j / just))
(a / announce-01 :arg0 (c / court) :arg1 (r / rule-01 :arg0 (c2 / court) :arg2 (c3 / change-01 :arg0 (r2 / rule-01) :arg1 (t / term :mod (i / incarceration)) :time (a2 / after :op1 (n / now) :quant (u / up-to :op1 (t2 / temporal-quantity :quant (N / N-A) :unit (y / year))))) :location (c4 / colony :mod (s / standard) :mod (p / penal))) :time (d / date-entity :month 8 :day 29))
(m / multi-sentence :snt1 (t / teletrade :mode (i / interrogative)) :snt2 (c / continue-01 :arg1 (d / decline-01 :arg1 (r / rouble) :prep-against (b / basket :mod (b2 / bi-currency)))))
(a / appear-02 :arg1 (a2 / appear-01 :arg1 (h / home) :arg1-of (a3 / appropriate-02) :time (b / before :op1 (n / now) :quant (m / multiple :op1 3)) :arg1-of (a4 / appropriate-02)))
(m / multi-sentence :snt1 (r / responded :arg1 (r2 / restaurant :mod (f / food :mod (f2 / fast)) :arg0-of (r3 / respond-01 :arg1 (k / kommersant-dengi)))) :snt2 (c / calm :arg1 (s / survey-01 :time (d / date-entity :decade (N / N-A))) :degree (f3 / fair) :mod (a / also)))
(a / and :op1 (m / midfielder :arg0 (o / organization :name (n / name :op1 "Chelsea")) :arg1 (p / person :name (n2 / name :op1 "Marco" :op2 "van" :op3 "Ginkel"))) :op2 (s / spend-01 :arg0 (p2 / person :arg0-of (r / report-01)) :arg1 (a2 / and :op1 (o2 / openness) :op2 (r2 / report-01 :arg0 (o3 / organization :name (n3 / name :op1 "Milan" :op2 "Channel"))))))
(a / and :op1 (c / crash-01 :arg1 (t / tragedy) :location (a2 / and :op1 (e / east) :op2 (w / west))) :op2 (t2 / turn-02 :arg1 (t3 / tragedy) :arg2 (a3 / and :op1 (a4 / act-02 :arg0 (t4 / tragedy)) :op2 (h / hope-01 :arg0 (t5 / tragedy) :arg1 (f / future) :location (m / misery :mod (d / direst))))))
(m / multi-sentence :snt1 (l / look-01 :mode (i / imperative) :arg0 (y / you) :arg1 (w / wall :poss (w2 / wing))) :snt2 (t / thick :mode (e / expressive)))
(m / multi-sentence :snt1 (c / contrast-01 :arg2 (e / easy-05 :arg1 (c2 / catch-up-04 :arg1 (i / it) :arg2 (m2 / miracles :poss (i2 / internet :mod (c3 / country :name (n / name :op1 "N-A"))) :arg0-of (c4 / compete-02 :arg1 (c5 / company :mod (c6 / country :name (n2 / name :op1 "N-A")) :mod (e2 / even)) :time (a / already)))))) :snt2 (a2 / and :op1 (c7 / company :name (n3 / name :op1 "Ebay")) :op2 (o / organization :name (n4 / name :op1 "Amazon.com"))))
(c / cite-01 :arg0 (i / it) :arg1 (r / rise-01 :arg1 (p / popularity :poss (p2 / person :arg0-of (l / live-01 :location (a / area :arg1-of (u / urbanised :degree (h / high)))))) :location (a2 / area :mod (u2 / urbanised :degree (h2 / high)))) :arg1-of (c2 / cause-01 :arg0 (t / threaten-01 :arg0 (f / factor :mod (o / other)) :arg1 (i2 / industry :mod (g / garden :polarity -) :arg1-of (v / value-01 :arg2 (m / monetary-quantity :quant 5 :unit (d / dollar :mod (c3 / country :name (n / name :op1 "N-A"))))) :arg1-of (s / sell-01 :time (y / year :mod (e / each)))))))
(c / converse-01 :polarity - :arg0 (i / i) :arg2 (h / he) :time (e / ever) :arg1-of (r / resemble-01 :arg2 (t / that)))
(e / establish-01 :arg0 (c / company :arg0-of (s / supply-01)) :arg1 (a / and :op1 (s2 / supply-01 :arg1 (b / beef) :arg2 (c2 / country :name (n / name :op1 "Argentina"))) :op2 (l / location :name (n2 / name :op1 "Uruguay")) :op3 (c3 / country :name (n3 / name :op1 "New" :op2 "Zealand"))) :arg1-of (i / instead-of-91))
(t / turns :arg0 (a / anger-01) :arg1 (a2 / and :op1 (u / universal :mod (u2 / universal :degree (m / most))) :op2 (f / functional :arg1 (e / emotions :mod (h / human)))))
(o / or :op1 (l / law :polarity -) :op2 (l2 / law :polarity -) :mod (a / again))
(c / contrast-01 :arg1 (r / recommend-01 :arg1 (c2 / care-04 :arg0 (i / i) :arg1 (k / knee :arg1 (i2 / i) :arg1-of (c3 / cause-01 :arg0 (i3 / injure-01 :arg1 (i4 / i)))))) :arg2 (w / walk-01 :arg0 (i5 / i) :time (n / now)))
(c / contrast-01 :arg2 (p / possible-01 :arg1 (h / hold-01 :arg0 (y / you) :arg1 (s / salmon :poss (w / we)) :arg3 (w2 / world-region :name (n / name :op1 "Far" :op2 "East")) :location (h2 / hand :part-of (y2 / you)))))
(u / use-01 :arg0 (a / and :op1 (d / doctor) :op2 (n / nurse) :op3 (d2 / doctor) :op4 (d3 / doctor)) :arg1 (t / tunnel))
(o / old :polarity - :domain (p / person :name (n / name :op1 "Andrew" :op2 "Lawson")))
(m / multi-sentence :snt1 (i / import-01 :arg1 (f / fish) :arg2 (p / person :quant (a / around :op1 2013))) :snt2 (m2 / mass-quantity :quant (N / N-A) :unit (k / kilogram)))
(r / relevant-01 :polarity - :arg1 (u / updates) :arg2 (c / classwork) :frequency (s / sometimes))
(c / contrast-01 :arg2 (c2 / confident-01 :arg1 (i / i) :arg2 (c3 / capable-01 :arg1 (y / you) :arg2 (b / beat-01 :arg0 (y2 / you) :arg1 (t / they)) :mod (a / also))))
(s / say-01 :arg0 (s2 / survey-01 :arg0 (s3 / survey-01 :mod (c / closely-watched))) :arg1 (g / grow-01 :arg1 (g2 / grow-01 :arg1 (m / manufacture-01) :location (e / eurozone)) :arg4 (l / low-04 :degree (m2 / more))))
(r / remember-01 :arg0 (i / i) :arg1 (p / person :mod (t / that) :arg0-of (h / have-rel-role-91 :arg1 (i2 / i) :arg2 (k / kid))) :purpose (p2 / play-11 :arg0 (i3 / i) :arg2 (y / yard :arg1-of (g / get-on-21 :polarity - :arg0 (i4 / i) :time (e / ever)))))
(l / lie-07 :arg1 (d / develop-02 :arg1 (c / criteria :purpose (a / and :op1 (v / vehicle :mod (e / electric)) :op2 (v2 / vehicle :mod (t / transport-01))))) :arg2 (a2 / and :op1 (d2 / develop-02 :arg1 (v3 / vehicle :mod (e2 / electric))) :op2 (d3 / decide-01 :arg1 (t2 / thing :manner-of (s / subsidize-01 :arg1 (a3 / and :op1 (u / use-01 :arg1 (v4 / vehicle :arg1-of (f / friendly-01 :arg2 (c2 / country :name (n / name :op1 "N-A"))))) :op2 (p / produce-01 :arg1 (v5 / vehicle))))))) :time (s2 / still))
(a / assess-01 :arg0 (y / you) :arg1 (t / thing :arg2-of (r / result-01 :arg1 (y2 / you))) :manner (a2 / amr-unknown) :time (y3 / year :mod (t2 / this)) :manner (a3 / amr-unknown))
(h / high-02 :arg1 (t / tension) :location (l / location :name (n / name :op1 "Lesotho")) :time (s / since :op1 (s2 / suspend-01 :arg0 (g / government-organization :arg0-of (g2 / govern-01 :arg1 (h2 / he))) :arg1 (s3 / session :mod (p / parliament)))) :location (l2 / location :name (n2 / name :op1 "Lesotho")))
(a / and :op1 (r / recommend-01 :arg1 (k / know-01 :arg0 (c / child) :arg1 (s / something :polarity - :arg1-of (k2 / know-01 :arg0 (c2 / child))))) :op2 (r2 / recommend-01 :arg1 (e / experience-01 :arg0 (c3 / child) :arg1 (s2 / something)) :mod (o / of-course)))
(c / contrast-01 :arg2 (w / win-01 :arg0 (p / person :mod (m / male) :mod (m2 / male) :mod (c2 / country :name (n / name :op1 "N-A"))) :arg1 (s / silver :mod (t / team))))
(a / and :op1 (e / explain-01 :arg0 (c / country :mod (t / this)) :arg1 (r / right-05 :arg1 (c2 / country) :arg2 (o / organize-01 :arg0 (c3 / country) :arg1 (u / union-02 :arg1 (c4 / country) :arg2 (t2 / trade-01))))) :op2 (e2 / explain-01 :arg0 (c5 / country) :arg1 (e3 / engage-01 :arg1 (u2 / union-02 :arg1 (p / person :arg0-of (h / have-rel-role-91 :arg1 (a2 / and :op1 (c6 / corporation) :op2 (a3 / agency :mod (g / government-organization :arg0-of (g2 / govern-01))))) :arg2 (a4 / agency :mod (g3 / government-organization :arg0-of (g4 / govern-01)))) :mod (c7 / collective)) :arg2 (p2 / person :arg0-of (p3 / partner-01 :arg1 (a5 / and :op1 (c8 / corporation) :op2 (a6 / agency :mod (g5 / government-organization :arg0-of (g6 / govern-01)))))))) :time (c9 / counseled :arg0 (c10 / country :mod (t3 / this)) :arg1 (c11 / country :mod (o2 / other)) :manner (a7 / amr-unknown)))
(c / contrast-01 :arg1 (l / let-01 :arg0 (t / terrorist) :arg1 (g / go-01 :arg1 (s / she))) :arg2 (k / keep-01 :arg0 (t2 / terrorist) :arg1 (a / and :op1 (p / person :arg0-of (h / have-rel-role-91 :arg1 (s2 / she) :arg2 (m / mother))) :op2 (p2 / person :arg0-of (h2 / have-rel-role-91 :arg1 (p3 / person) :arg2 (s3 / sister :mod (o / old)))) :op3 (p4 / person :arg0-of (h3 / have-rel-role-91 :arg1 (p5 / person) :arg2 (s4 / sister :mod (o2 / old)))) :op4 (p6 / person :name (n / name :op1 "Makhar") :arg0-of (h4 / have-rel-role-91 :arg1 (p7 / person) :arg2 (b / brother))) :op5 (p8 / person :arg0-of (h5 / have-rel-role-91 :arg1 (p9 / person) :arg2 (b2 / brother)))) :location (s5 / school)))
(s / summoned :arg0 (m / ministry :name (n / name :op1 (t / turkish)) :mod (f / foreign)) :arg1 (p / person :arg0-of (h / have-org-role-91 :arg1 (c / country :name (n2 / name :op1 "U.S.")) :arg2 (d / diplomat :mod (s2 / senior)))) :arg2 (a / and :op1 (p2 / person :arg0-of (h2 / have-org-role-91 :arg1 (c2 / country :name (n3 / name :op1 "Turkey")) :arg2 (d2 / diplomat :mod (s3 / senior)))) :op2 (p3 / person :arg0-of (h3 / have-org-role-91 :arg1 (c3 / country) :arg2 (m2 / minister :mod (s4 / senior))))) :location (c4 / country))
(s / specific-02 :arg1 (f / foot :part-of (y / you)) :manner (s2 / specific-02))
(c / complain-01 :arg0 (p / person :arg0-of (s / supply-01 :arg1 (a / and :op1 (m / mass-quantity :quant (N / N-A) :unit (g / gram)) :op2 (q / quality :poss (p2 / person))))) :mod (m2 / main))
(s / summit :mod (m / military :name (n / name :op1 "NATO")))
(a / and :op1 (m / move-01 :arg1 (p / person :arg0-of (h / have-org-role-91 :arg1 (m2 / movement-07 :mod (r / rock) :mod (c / country :name (n / name :op1 "N-A"))) :arg2 (m3 / member))) :arg2 (a2 / and :op1 (p2 / person :arg0-of (h2 / have-org-role-91 :arg1 (c2 / country :name (n2 / name :op1 "N-A")) :arg2 (m4 / member))) :op2 (p3 / person :arg0-of (h3 / have-org-role-91 :arg1 (c3 / country) :arg2 (m5 / member))) :op3 (p4 / person :arg0-of (h4 / have-org-role-91 :arg1 (c4 / country) :arg2 (m6 / member))) :op4 (p5 / person :arg0-of (h5 / have-org-role-91 :arg1 (c5 / country) :arg2 (m7 / member))) :op5 (p6 / person :arg0-of (h6 / have-org-role-91 :arg1 (c6 / country) :arg2 (m8 / member)))) :mod (g / great)) :op2 (c7 / contrast-01 :arg1 (m9 / move-01 :arg1 (p7 / person) :arg2 (r2 / reluctance :mod (g2 / great))) :arg2 (d / depend-01 :polarity - :arg0 (d2 / depend-01 :polarity - :arg0 (d3 / depend-01 :polarity -) :arg1 (e / entity)))))
(s / survive-01 :arg0 (y / you) :arg1-of (l / long-03 :degree (s2 / so)))
(c / create-01 :arg0 (c2 / company :mod (c3 / country :name (n / name :op1 "China")) :arg2-of (i / include-01 :arg1 (a / and :op1 (p / person :arg0-of (d / develop-02 :arg1 (e / estate :mod (r / real) :mod (c4 / commerce) :location (a2 / and :op1 (c5 / country) :op2 (o / organization :name (n2 / name :op1 "Dalian" :op2 "Wanda" :op3 "Group")) :op3 (m / media :mod (s / social))) :mod (l / large :degree (m2 / most) :compared-to (a3 / and :op1 (p2 / person :arg0-of (d2 / develop-02 :arg1 (e2 / estate :mod (r2 / real) :mod (c6 / commerce) :mod (c7 / commerce) :location (a4 / and :op1 (c8 / country) :op2 (c9 / country))))) :op2 (m3 / media :mod (i2 / internet) :mod (c10 / country)) :op3 (m4 / media :mod (s2 / social)) :op4 (m5 / media :mod (s3 / social)) :op5 (m6 / media :mod (s4 / social)) :op6 (m7 / media :mod (s5 / social)) :op6 (m8 / media :mod (s6 / social)) :op6 (m9 / media :mod (s7 / social) :mod (c11 / country)))))))))) :arg1 (c12 / company :arg0-of (c13 / compete-01 :location (m10 / market :mod (g / grass-roots) :mod (o2 / online) :prep-with (o3 / organization :name (n3 / name :op1 "Alibaba"))))))
(c / contrast-01 :arg1 (c2 / come-01 :arg1 (s / stranger) :location (h / here) :condition (b / be-located-at-91 :arg1 (s2 / stranger) :arg2 (h2 / here))) :arg2 (s3 / suffer-01 :arg0 (p / person :arg0-of (r / reside-01)) :arg1 (r2 / right-05 :arg1 (p2 / person) :arg2 (l / live-01 :arg0 (p3 / person) :location (h3 / home :mod (o / old :degree (m / most)) :location (l2 / location :name (n / name :op1 "Ufa")))) :arg0-of (r3 / remember-01 :arg1 (l3 / like-01 :arg0 (p4 / person :arg1-of (l4 / like-01 :arg0 (p5 / person :name (n2 / name :op1 "Aleksandr" :op2 "Suvorov") :arg0-of (h4 / have-org-role-91 :arg2 (g / general))))) :arg1 (p6 / person))))))
(m / multi-sentence :snt1 (p / propose-01 :mode (i / interrogative) :arg0 (l / law) :arg1 (c / create-01 :arg1 (c2 / create-01 :arg1 (s / system :mod (d / data :arg1-of (p2 / personal-02))))) :mod (a / also)) :snt2 (l2 / list-01 :mode (i2 / interrogative) :arg1 (t / thing :arg2-of (r / right-05 :arg1 (d2 / data :mod (d3 / data :arg1-of (p3 / personal-02)))))))
(d / deliver-01 :arg0 (s / slash :op1 (c / country :name (n / name :op1 "USA")) :op2 (c2 / country :name (n2 / name :op1 "Great" :op2 "Britain"))) :arg1 (a / aid-01 :mod (m / military)) :arg2 (c3 / country :name (n3 / name :op1 "USSR")))
(c / contrast-01 :arg1 (r / retreat :polarity - :domain (c2 / city :mod (s / sin)) :mod (j / just :polarity -)) :arg2 (c3 / capitulation :arg1 (a / and :op1 (s2 / stylistic :mod (r2 / radical)) :op2 (s3 / stylistic :mod (r3 / radical))) :arg2 (t / tradition :mod (c4 / comic))))
(i / include-91 :arg1 (p / person :quant 7 :arg1-of (i2 / include-91 :arg2 (w / we))) :arg2 (c / child :quant 2) :mod (a / altogether))
(c / concern-01 :arg0 (i / issue-02 :arg0 (b / be-located-at-91 :arg1 (f / foundation) :arg2 (r / relative-position :op1 (c2 / city :quant 19 :location (s / suburb :part-of (c3 / city)))))) :arg1 (b2 / be-located-at-91 :arg1 (f2 / foundation) :arg2 (u / under :op1 (p / product-of :op1 19 :op2 2011))))
(m / multi-sentence :snt1 (b / bother-02 :arg0 (w / we :mod (b2 / big :degree (m2 / most))) :arg1 (w2 / we) :mod (b3 / big :degree (m3 / most))) :snt2 (c / come-04 :arg1 (s / soil) :arg2 (f / foot :mod (o / one?s)) :manner (l / literal)))
(m / mean-01 :arg1 (e / economy :mod (r / rebounding)) :arg2 (a / and :op1 (c / customer :quant (m2 / more)) :op2 (s / sell-01 :arg1-of (h / high-02 :degree (m3 / more))) :op3 (j / job :mod (n / new))))
(s / show-01 :arg0 (t / they) :arg1 (f / fist :mod (t2 / thick)) :arg2 (s2 / she) :condition (c / care-04 :polarity - :arg0 (s3 / she)))
(p / possible-01 :polarity - :arg1 (c / clarify-10 :arg0 (w / we) :arg1 (r / reason :arg0-of (c2 / cause-01 :arg1 (a / absence :poss (p2 / person :arg0-of (r2 / represent-01 :arg1 (a2 / and :op1 (o / organization :name (n / name :op1 "Legal" :op2 "Department")) :op2 (p3 / person :name (n2 / name :op1 "Maksim" :op2 "Titov")) :op3 (c3 / call-02 :medium (p4 / phone) :arg1-of (a3 / answer-01))))))))))
(c / choose-01 :arg1 (i / industry :mod (c2 / construct-01 :arg1 (r / road))) :arg3 (p / pilot-01 :arg0 (i2 / industry) :arg1 (p2 / project)))
(r / return-01 :arg1 (p / person :name (n / name :op1 "Tony" :op2 "Stewart")) :arg4 (t / track))
(s / see-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (o / office :mod (b / box :time (c / current)) :poss (c2 / city-district :name (n / name :op1 "Hollywood"))))) :arg1 (r / revenue) :arg2 (r2 / reach-01 :arg0 (r3 / revenue) :arg1 (m / monetary-quantity :quant 1.2 :unit (d / dollar))) :time (r4 / recent) :arg1-of (c3 / cause-01 :arg0 (r5 / reach-01 :arg0 (s2 / service :mod (b2 / box :time (c4 / current)) :poss (c5 / city-district :name (n2 / name :op1 "Hollywood"))) :arg1 (r6 / rate-entity-91 :arg1 (m2 / monetary-quantity :quant (8 / 837m) :unit (d2 / dollar)) :arg2 (t / temporal-quantity :quant (N / N-A) :unit (y / year)) :mod (a / almost)))))
(s / say-01 :arg0 (h / he :arg1-of (i / include-91 :arg2 (c / child :mod (s2 / school)) :arg3 (p / percentage-entity :value 11))) :arg1 (a / and :op1 (l / leave-17 :arg1 (c2 / child :quant 11 :arg1-of (i2 / include-91 :arg2 (c3 / child :mod (s3 / school)))) :arg3 (r / region :mod (o / other))) :op2 (i3 / include-91 :arg1 (c4 / child) :arg2 (p2 / percentage-entity :value (N / N-A)) :beneficiary (c5 / country :name (n / name :op1 "Russia")))))
(m / multi-sentence :snt1 (c / clear-06 :polarity - :arg1 (t / thing :arg1-of (e / easy-05 :degree (m2 / more)) :domain (p / person :arg0-of (d / drive-02 :arg1 (r / rely-01 :arg1 (r2 / rely-01 :arg1 (p2 / person))))))) :snt2 (e2 / europrotocol :mode (i / interrogative)))
(c / competed :arg0 (p / person :name (n / name :op1 "Bilyal")) :location (l / level :mod (j / junior)) :mod (i / in-fact))
(a / and :op2 (s / say-01 :arg0 (f / forecast-01) :arg1 (p / possible-01 :arg1 (r / rise-01 :arg1 (n / number :quant 2015 :mod (t / this)) :arg4 (m / mln :quant 850) :time (a2 / already)))))
(s / suggest-01 :arg0 (i / i) :arg1 (c / contrast-01 :arg1 (s2 / suggest-01 :arg0 (i2 / i) :arg1 (r / russians :arg1 (r2 / russians))) :arg2 (g / give-01 :arg0 (i3 / i) :arg1 (c2 / compete-02) :arg2 (l / level :mod (g2 / good)))))
(a / appear-02 :arg1 (a2 / achieve-01 :arg0 (n / negotiate-01 :arg1-of (c / come-01) :arg1-of (p / prepare-02 :arg2 (n2 / negotiate-01 :arg2 (a3 / and :op1 (s / supply-01 :arg1 (g / gas) :arg2 (c2 / country :arg0-of (h / have-org-role-91 :arg1 (o / organization :name (n3 / name :op1 "CU"))))) :op2 (m / misgivings :arg0 (c3 / country :arg0-of (h2 / have-org-role-91 :arg1 (o2 / organization) :arg3 (l / lead-02 :arg0 (c4 / country) :arg1 (o3 / organization)))) :arg1 (a4 / and :op1 (s2 / supply-01 :arg1 (g2 / gas)) :op2 (o4 / overcoming :arg1 (a5 / agree-01 :arg0 (c5 / country :arg0-of (h3 / have-org-role-91 :arg1 (o5 / organization) :arg3 (l2 / lead-02 :arg0 (c6 / country) :arg1 (o6 / organization)))) :arg1 (a6 / agree-01 :arg0 (c7 / country :arg0-of (h4 / have-org-role-91 :arg1 (o7 / organization) :arg3 (l3 / lead-02 :arg0 (c8 / country) :arg1 (o8 / organization)))) :arg1 (a7 / agree-01 :arg0 (c9 / country :arg0-of (h5 / have-org-role-91 :arg1 (o9 / organization) :arg3 (l4 / lead-02 :arg0 (c10 / country) :arg1 (o10 / organization)))) :arg1 (a8 / agree-01 :arg0 (o11 / organization) :arg1 (a9 / association :mod (a10 / association :mod (u / ukraine?s))))))))))))))))
(e / exemplify-01 :arg0 (a / admit-01 :arg0 (o / organization :name (n / name :op1 "Marks" :op2 "&" :op3 "Spencer")) :arg1 (n2 / negligently :arg1 (p / person :name (n3 / name :op1 "Janice" :op2 "Allen") :mod (e2 / expose)) :arg2 (a2 / asbestos :arg0 (p2 / person)))))
(r / report-01 :arg0 (p / person :name (n / name :op1 "Igor" :op2 "Kostenok") :arg0-of (h / have-org-role-91 :arg1 (r2 / republic :mod (s / self-proclaimed)) :arg2 (m / minister))) :arg1 (t / this))
(b / bear-02 :arg1 (t / they))
(a / and :op1 (b / be-located-at-91 :arg1 (i / i) :arg2 (t / theatre :mod (n / nation)) :manner (s / sudden)) :op2 (p / possible-01 :polarity - :arg1 (b2 / believe-01 :arg0 (i2 / i) :arg1 (i3 / it) :mod (j / just))))
(a / and :op1 (g / grow-03 :arg1 (n / number :quant-of (p / person :arg0-of (u / use-01 :arg1 (i / internet)) :mod (c / country :name (n2 / name :op1 "India")))) :arg4 (m / mln. :quant 632)) :op2 (i2 / information :arg1-of (c2 / cites :arg2 (s / statistic :mod (o / official) :arg1-of (i3 / include-91 :arg2 (p2 / population :poss (c3 / country :mod (a2 / any) :location (w / world)) :arg2-of (e / except-01 :arg1 (c4 / country :name (n3 / name :op1 "India")))))))))
(s / say-01 :arg0 (p / person :arg1-of (e / expert-01 :arg2 (p2 / person :arg0-of (h / have-org-role-91 :arg1 (c / country :name (n / name :op1 "Britain")) :arg2 (p3 / person :arg1-of (e2 / expert-01))) :arg0-of (h2 / have-org-role-91 :arg2 (p4 / professor)))) :arg0-of (h3 / have-org-role-91 :arg2 (p5 / professor))) :arg1 (d / die-01 :arg1 (p6 / person :quant (s2 / some :op1 90000)) :arg1-of (c2 / cause-01 :arg0 (r / recommend-01 :arg1 (p7 / play-11 :arg0 (t / type :mod (a / asbestos) :location (c3 / country)) :arg2 (o / out))))))
(a / and :op1 (r / rise-01 :arg1 (b / basket :mod (b2 / bi-currency)) :arg2 (l / level :mod (c / close-01 :time (p / previous)))) :op2 (s / stand-01 :arg1 (b3 / basket) :arg2 (r2 / roubles :quant 42.28)))
(s / say-01 :arg0 (p / person :arg0-of (o / own-01 :arg1 (a / and :op1 (p2 / person :arg0-of (h / have-org-role-91 :arg1 (f / family :arg1-of (h2 / have-org-role-91 :arg0 (p3 / person) :arg2 (m / member))))) :op2 (p4 / person :arg0-of (h3 / have-org-role-91 :arg1 (f2 / family :arg1-of (h4 / have-org-role-91 :arg0 (p5 / person) :arg2 (m2 / member))) :arg2 (m3 / member)))))) :arg1 (p6 / person :arg0-of (o2 / own-01 :arg1 (a2 / and :op1 (p7 / person :arg0-of (o3 / own-01 :arg1 (f3 / fish))) :op2 (p8 / person :name (n / name :op1 "Filipp" :op2 "Galkin") :poss (w / we)))) :arg1-of (e / easy-05)))
(r / remain-01 :arg1 (b / backdrop :mod (g / geopolitics)) :arg3 (f / factor :mod (d / drive-01)))
(p / possible-01 :polarity - :arg1 (i / ignore-01 :arg1 (m / mussels :arg1 (m2 / mussels :arg0-of (l / look-02 :arg1 (a / and :op1 (b / boiled :arg1 (t / they)) :op2 (r / refrozen :arg1 (t2 / they)) :time (l2 / lifetime :poss (t3 / they)) :frequency (s / several)))))) :condition (p2 / possible-01 :polarity - :arg1 (t4 / turn-01 :arg0 (i2 / it) :arg1 (e / eye :mod (b2 / blind-02)) :arg4 (s2 / slash :op1 (u / unripened) :op2 (o / over-fried)))))
(h / help-01 :polarity - :arg0 (w / we) :arg1 (p / protect-01 :arg0 (w2 / woman :arg1-of (b / black-05)) :arg1 (a / and :op1 (p2 / person :arg0-of (h2 / have-rel-role-91 :arg1 (w3 / woman) :arg2 (h3 / husband))) :op2 (p3 / person :arg0-of (h4 / have-rel-role-91 :arg1 (w4 / woman) :arg2 (s / son)))) :time (e / ever)))
(d / do-02 :polarity - :arg0 (w / we) :arg1 (j / job :mod (g / good)))
(s / start-01 :arg1 (s2 / series :mod (c / continent :name (n / name :op1 "N-A")) :quant (s3 / series :op1 (c2 / couple :op1 (t / temporal-quantity :quant (N / N-A) :unit (w / week))))) :time (w2 / week :mod (j / just)))
(i / instead-of-91 :arg2 (a / and :op1 (b / become-01 :arg1 (i2 / it) :arg2 (p / platform :beneficiary (p2 / person :arg0-of (b2 / broadcast-01 :arg1 (f / feats :poss (t / they) :mod (i3 / in-game))))) :arg1-of (q / quick-02)) :op2 (y / youtube :arg0 (y2 / youtube :purpose (l / live-01)) :arg1 (g / gaming :arg1 (w / word :mod (b3 / business))))) :arg1-of (i4 / instead-of-91))
(d / dozens :arg0 (a / and :op1 (g / greenery) :op2 (t / trees)) :location (i / in-front-of :op1 (s / square) :location (i2 / in-front-of :op1 (s2 / square)) :location (i3 / in-front-of :op1 (s3 / square))))
(c / contrast-01 :arg2 (a / and :op1 (g / give-01 :polarity - :arg0 (i / initiative :quant 1 :mod (t / this)) :arg1 (r / rise-01 :arg1 (t2 / thing) :arg2 (i2 / import-01))) :op2 (a2 / and :op1 (r2 / rise-01 :arg1 (t3 / thing :quant 1 :arg1-of (i3 / include-91 :arg2 (i4 / initiative :name (n / name :op1 (i5 / it?s)))))) :op2 (c2 / consider-02 :arg1 (s / set :mod (w / whole) :arg1-of (n2 / need-01 :arg0 (p / person :name (n3 / name :op1 "Litvinenko"))))))))
(a / and :op1 (s / suffer-01 :arg0 (p / person :arg0-of (s2 / suffer-01 :arg1 (m / much :degree (s3 / so)))) :arg1 (m2 / much :degree (s4 / so))) :op2 (s5 / say-01 :arg0 (p2 / person) :arg1 (a2 / and :op1 (s6 / suffer-01 :arg0 (p3 / person) :time (t / today)) :op2 (n / need-01 :arg0 (p4 / person) :arg1 (h / help-01) :time (t2 / today))) :op3 (s7 / say-01 :arg0 (p5 / person) :arg1 (t3 / thing :time (r / read-01 :arg0 (p6 / person :name (n2 / name :op1 "Bill")) :time (y / year :mod (l / last)) :ord (o / ordinal-entity :value 2))))))
(e / exhibit-01 :arg1 (t / thing :arg1-of (a / achieve-01 :arg0 (e2 / economy :poss (c / country :name (n / name :op1 "N-A")) :mod (n2 / nation)))))
(s / say-01 :arg0 (p / person :name (n / name :op1 "Graham" :op2 "Abbott")) :arg1 (t / take-10 :arg0 (s2 / sink :arg1 (i / it)) :arg1 (i2 / it)))
(m / multi-sentence :snt1 (t / tell-01 :arg1 (t2 / truth)) :snt2 (c / concern-01 :mode (i / interrogative) :arg0 (u / use-01 :arg1 (p / police :mod (r / road))) :arg1 (s / situation :mod (t3 / that)) :mod (o / only)) :snt3 (i2 / involve-01 :polarity - :arg1 (p2 / police :mod (r2 / road))))
(h / have-03 :arg0 (s / state :name (n / name :op1 "Virginia")) :arg1 (t / thing :arg1-of (t2 / tax-01 :arg3 (i / income :poss (c / corporation)) :arg1-of (l / low-04 :degree (m / more))) :arg1-of (i2 / include-91 :arg2 (t3 / thing :quant 3 :arg0-of (h2 / have-03 :arg1 (r / rate :mod (c2 / corporation :mod (f / flat))) :arg3 (p / percentage-entity :value (N / N-A)))))))
(l / learn-01 :arg0 (p / person :name (n / name :op1 "Hammett")) :arg1 (r / resemble-01 :arg1 (i / it) :arg2 (w / work-09 :arg1 (i2 / it) :arg2 (o / orderly :location (f / front)))))
(c / cause-01 :arg0 (m / mechanical :arg1 (t / thing :manner-of (s / stay-01 :arg1 (w / we) :arg3 (l / live-01))) :mod (p / particular)) :arg1 (c2 / cause-01 :arg0 (c3 / cancer :arg1-of (c4 / cause-01 :arg0 (c5 / cancer :arg0-of (c6 / cause-01 :arg1 (c7 / cancer :mod (k / kill)))) :degree (v / very))) :arg1 (m2 / mesothelioma) :mod (p2 / particular)))
(s / survive-01 :arg0 (p / person :name (n / name :op1 "Georgy") :mod (o / only)) :purpose (s2 / survive-01 :arg0 (p2 / person)))
(a / admit-01 :arg1 (h / have-03 :arg0 (h2 / he) :arg1 (o / or :op1 (k / know-01 :arg0 (h3 / he) :arg1 (h4 / have-03 :arg0 (h5 / he) :arg1 (o2 / or :op1 (k2 / knowledge) :op2 (e / expertise))) :quant (e2 / enough)) :op2 (p / portraying :arg0 (h6 / he) :arg1 (h7 / history :poss (r / region))))) :time (a2 / after :op1 (s / start-01 :arg0 (h8 / he) :arg1 (c / collect-01 :arg0 (h9 / he) :arg1 (i / information) :purpose (g / game)))))
(s / state-01 :arg0 (p / person :arg0-of (h / head-01 :arg1 (o / organization :name (n / name :op1 "MFA") :mod (r / russia?s)))) :arg1 (p2 / person :name (n2 / name :op1 "Sergei" :op2 "Lavrov") :arg0-of (h2 / have-org-role-91 :arg1 (o2 / organization) :arg3 (h3 / head-01))) :time (s2 / speak-01 :arg0 (p3 / person) :location (i / in-front-of :op1 (a / and :op1 (p4 / person :arg0-of (s3 / study-01)) :op2 (p5 / person :arg0-of (h4 / have-org-role-91 :arg1 (o3 / organization) :arg2 (m / member))) :location (o4 / organization :name (n3 / name :op1 "MGIMO" :op2 "University"))))))
(m / multi-sentence :snt1 (s / scarring :arg0 (w / war) :arg1 (c / country :name (n / name :op1 "Ukraine")) :time (n2 / now)) :snt2 (s2 / stop-01 :arg1 (p / person :arg0-of (h / have-rel-role-91 :arg1 (c2 / child) :arg2 (c3 / child))) :time (n3 / now)))
(p / possible-01 :arg1 (f / find-01 :arg0 (p2 / person :arg0-of (h / have-org-role-91 :arg1 (c / company :name (n / name :op1 "BBC")))) :arg1 (p3 / person :arg0-of (h2 / have-org-role-91 :arg1 (c2 / company :name (n2 / name :op1 "BBC")) :arg2 (c3 / chief)))) :location (p4 / person))
(d / delay-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg2 (o / official :mod (e / education)))) :arg1 (s / start-01 :arg0 (p2 / person :arg0-of (h2 / have-org-role-91 :arg2 (o2 / official :mod (e2 / education)))) :arg1 (s2 / start-01 :arg0 (p3 / person :arg0-of (h3 / have-org-role-91 :arg2 (o3 / official :mod (e3 / education)))) :arg1 (y / year :mod (s3 / school)) :time (w / week :mod (l / last)))) :mod (s4 / still) :location (a / and :op1 (g / garage) :op2 (f / fight-01)))
(l / lesbian :mode (i / interrogative) :domain (y / you))
(s / state-01 :arg0 (p / person :name (n / name :op1 "Putin")) :topic (f / fund-01 :arg1 (d / develop-02 :arg1 (d2 / develop-02)) :arg2-of (t / total-01)))
(p / pmi :arg1 (f / factory) :arg2 (a / and :op1 (c / country :name (n / name :op1 "Germany")) :op2 (c2 / country :name (n2 / name :op1 "Russia")) :op3 (o / organization :name (n3 / name :op1 "EU")) :mod (b / big :degree (m / most)) :arg1-of (f2 / fall-01 :arg4 (u / under :op1 51.4))))
(b / bad-07 :arg1 (s / salads) :degree (m / more :mod (e / even)))
(c / contrast-01 :arg2 (a / and :op1 (w / win-01 :arg0 (c2 / country :name (n / name :op1 "N-A")) :arg1 (f / fight-01 :quant 2)) :op2 (b / become-01 :arg1 (w2 / win-01) :arg2 (c3 / company :arg0-of (w3 / win-01 :arg2 (m / medal)))) :time (t / then)))
(c / contrast-01 :arg2 (h / have-03 :polarity - :arg0 (h2 / he) :arg1 (r / reason :arg0-of (c2 / cause-01 :arg1 (s / suspect-01 :arg0 (h3 / he) :arg1 (m / mesothelioma)))) :manner (s2 / simple)))
(w / want-01 :arg0 (o / organization :name (n / name :op1 "Ministry" :op2 "of" :op3 "Economic" :op4 "Development")) :arg1 (a / accelerate-01 :arg0 (o2 / organization) :arg1 (g / grow-01 :arg1 (m / market :mod (v / vehicle :mod (e / electric))))))
(a / annoy-01 :polarity - :arg0 (p / person :name (n / name :op1 "Ailinn")) :mod (s / still))
(m / multi-sentence :snt1 (v / value-01 :mode (i / interrogative) :arg1 (i2 / it?s) :arg2 (s / seismic-quantity :quant (N / N-A)) :mod (a / also)) :snt2 (a2 / and :mode (i3 / interrogative) :op1 (p / person :mod (a3 / atheist :degree (m2 / more))) :op2 (p2 / person :mod (a4 / atheist :degree (m3 / more))) :domain (p3 / person :mod (a5 / atheist :degree (m4 / more)))) :snt3 (r / reference-04 :mode (i4 / interrogative) :arg1 (t / title :poss (i5 / it))))
(a / and :op1 (f / follow-02 :arg0 (p / person :name (n / name :op1 "Stephen" :op2 "Fairclough")) :arg1 (d / develop-01 :arg2 (w / we) :time (w2 / weekend))) :op2 (s / speak-01 :arg0 (p2 / person) :arg2 (p3 / person :arg0-of (p4 / protest-01) :arg0-of (t / travelled :arg1 (p5 / person) :arg2 (c / country :name (n2 / name :op1 "Belgium"))))))
(m / multi-sentence :snt2 (r / read-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (c / country :name (n / name :op1 "N-A")) :arg2 (d / diplomat))) :arg1 (s / state-01 :arg0 (p2 / person :arg0-of (h2 / have-org-role-91 :arg1 (c2 / country :name (n2 / name :op1 "N-A")) :arg2 (d2 / diplomat))))) :snt2 (r2 / read-01 :arg0 (p3 / person :arg0-of (h3 / have-org-role-91 :arg1 (c3 / country) :arg2 (d3 / diplomat))) :arg1 (s2 / state-01 :arg0 (d4 / diplomat :mod (c4 / country)))))
(a / admit-01 :arg1 (h / have-03 :arg0 (h2 / he) :arg1 (o / or :op1 (k / know-01 :arg0 (h3 / he) :arg1 (h4 / have-03 :arg0 (h5 / he) :arg1 (o2 / or :op1 (k2 / knowledge) :op2 (e / expertise))) :quant (e2 / enough)) :op2 (p / portraying :arg0 (h6 / he) :arg1 (h7 / history :poss (r / region))))) :time (a2 / after :op1 (s / start-01 :arg0 (h8 / he) :arg1 (c / collect-01 :arg0 (h9 / he) :arg1 (i / information) :purpose (g / game)))))
(a / apply-02 :arg1 (t / treaty :name (n / name :op1 "N-A")) :arg2 (r / rate-entity-91 :arg1 (v / vehicle :mod (y / yuhua) :quant (a2 / all)) :arg2 (t2 / temporal-quantity :quant (N / N-A) :unit (y2 / year))))
(m / multi-sentence :snt1 (a / add-01 :arg0 (h / he) :arg1 (t / that)) :snt2 (s / shoot-02 :mode (i / interrogative) :arg1 (f / force :arg0-of (o / oppose-01 :arg1 (a2 / air)))))
(a / and :op2 (t / turn-14 :arg0 (t2 / they) :arg1 (c / court) :purpose (p / pursue-01 :arg0 (t3 / they) :arg1 (c2 / compensate-01))))
(s / say-01 :arg0 (p / person :mod (c / country :name (n / name :op1 "Jordan")) :mod (e / exact)) :arg1 (a / and :op1 (p2 / poor :domain (s2 / survive-01 :arg0 (w / woman) :arg1-of (l / long-03))) :op2 (p3 / poor :domain (n2 / need-01 :arg1 (a2 / and :op1 (t / treat-03 :mod (g / good :degree (m / more))) :op2 (s3 / strategy :purpose (p4 / prevent-01)) :mod (g2 / good :degree (m2 / more))))) :concession (s4 / status :mod (b / brief))))
(h / high-02 :arg1 (t / tension) :location (l / location :name (n / name :op1 "Lesotho")) :time (s / since :op1 (s2 / suspend-01 :arg0 (g / government-organization :arg0-of (g2 / govern-01 :arg1 (h2 / he))) :arg1 (s3 / session :mod (p / parliament)))) :location (l2 / location :name (n2 / name :op1 "Lesotho")))
(n / notice-01 :arg0 (a / and :op1 (c / city :name (n2 / name :op1 "Brussels")) :op2 (c2 / city :name (n3 / name :op1 "Washington"))) :arg1 (a2 / and :op1 (t / thing :arg1-of (q / question-01 :arg0 (a3 / and :op1 (c3 / city) :op2 (c4 / city)) :arg1-of (b / balance-01 :polarity -))) :op2 (p / put-01 :arg0 (a4 / and) :arg1 (s / stock :location (c5 / country)) :arg2 (c6 / country))))
(s / suck-01 :arg0 (p / person :name (n / name :op1 "Ailinn" :op2 "Solomons")) :arg1 (h / heart :mod (f / fluttering)) :arg3 (h2 / heart :part-of (v / village :mod (n2 / north) :location (n3 / north :part-of (n4 / north)))) :degree (m / more :mod (e / even)) :compared-to (p2 / peninsula :name (n5 / name :op1 "N-A")))
(p / possible-01 :arg1 (s / see-01 :arg0 (y / you) :arg1 (t / thing :arg1-of (r / resemble-01 :arg2 (c / condition)))))
(a / and :op2 (t / turn-down-05 :arg0 (i / it) :arg1 (r / rotten :arg1 (i2 / it))))
(s / seem-01 :arg1 (c / cause-01 :arg0 (i / it) :arg1 (c2 / concern-01) :time (t / today)) :mod (h / hardly) :time (e / era :mod (a / another)) :mod (h2 / hardly))
(a / and :op2 (p / perform-02 :arg0 (a2 / and :op1 (d / develop-02 :arg1 (v / vehicle :mod (e / electric) :arg1-of (s / sell-01 :location (c / country :name (n / name :op1 "Russia")))) :arg1-of (h / high-02)) :op2 (t / thing :arg2-of (c2 / cost-01 :arg1 (v2 / vehicle :mod (e2 / electric) :arg1-of (s2 / sell-01 :location (c3 / country))) :arg1-of (h2 / high-02))) :arg1-of (h3 / high-02)) :arg1 (a3 / and :op1 (f / few :op1 (t2 / temporal-quantity :quant (N / N-A) :unit (m / month))) :op2 (d2 / distance-quantity :quant (N2 / N-A) :unit (m2 / mile)) :op3 (d3 / distance-quantity :quant (N3 / N-A) :unit (m3 / mile)) :op4 (p2 / person :arg0-of (h4 / have-org-role-91 :arg1 (g / game :name (n2 / name :op1 "N-A")) :arg2 (d4 / director :mod (g2 / general)))) :op5 (p3 / person :arg0-of (h5 / have-org-role-91 :arg1 (g3 / game :name (n3 / name :op1 "N-A")) :arg2 (d5 / director :mod (g4 / general)))))))
(c / contrast-01 :arg1 (p / publish-01 :arg0 (a / authors) :arg1 (t / thing :arg2-of (r / result-01 :arg1 (s / study-01 :arg0 (t2 / they) :location (j / journal :name (n / name :op1 (j2 / journal))))))) :arg2 (p2 / possible-01 :arg1 (g / get-03 :arg1 (o / one) :arg2 (o2 / obsess-01 :arg0 (o3 / one) :arg1 (w / website :mod (u / university?s))))))
(p / prove-01 :arg0 (b / bastions :arg0 (a / and :op1 (s / store :name (n / name :op1 (s2 / smart)) :source (d / department :mod (c / city :name (n2 / name :op1 "London")) :arg1-of (s3 / smart-06))) :op2 (s4 / store :mod (d2 / department :arg1-of (s5 / smart-06))))) :arg1 (r / refuge))
(c / contrast-01 :arg1 (c2 / carry-01 :arg0 (p / person :name (n / name :op1 "Stewart")) :arg1 (b / back :op1 (2 / 21st))) :arg2 (d / drop-out-04 :arg0 (p2 / person)))
(c / cause-01 :arg0 (a / amr-unknown) :arg1 (l / love-01 :arg0 (p / person :arg0-of (h / have-rel-role-91 :arg1 (y / you) :arg2 (f / father))) :arg1 (s / something :arg1-of (r / resemble-01 :arg2 (t / that)))))
(a / and :op1 (b / burn-01 :arg1 (t / tank :quant 2 :mod (s / storage :mod (o / oil))) :direction (d / down)) :op2 (d2 / destroy-01 :arg1 (b2 / building :quant 2 :mod (s2 / storage))) :time (d3 / date-entity :month 7 :day 18) :subevent-of (c / connect-01 :arg1 (p / plant :mod (r / refinery :mod (o2 / oil)) :location (l / location :name (n / name :op1 "Lisichansky")))))
(f / forecast-01 :arg1 (l / location :name (n / name :op1 "Adelaide") :mod (t / top :mod (1 / 16c))) :arg2 (l2 / location :name (n2 / name :op1 "Adelaide")) :prep-with (c / chance-02 :arg1 (o / or :op1 (s / shower) :op2 2)))
(a / and :op1 (k / keen :domain (p / person :quant (p2 / plenty)) :purpose (s / see-01 :arg0 (p3 / person) :arg1 (c / cut-back-05 :arg0 (c2 / company :name (n / name :op1 "BBC")) :arg1 (a2 / and :op1 (p4 / power :poss (c3 / company)) :op2 (p5 / power :poss (c4 / company)))))) :op2 (a3 / and :op1 (f / finance :poss (c5 / company)) :op2 (f2 / finance :poss (c6 / company))) :condition (t / tough-02 :polarity - :arg1 (t2 / that)))
FAILED_TO_PARSE#Two concepts in a row.
(b / believe-01 :arg1 (c / contribute-01 :arg0 (c2 / condition :mod (s / squally)) :arg2 (l / land-01 :arg1 (f / fly-01 :source (o / organization :name (n / name :op1 "Virgin" :op2 "Airlines")) :destination (c3 / city :name (n2 / name :op1 "Melbourne"))))))
(c / contrast-01 :arg1 (p / percentage-entity :value (N / N-A) :domain (r / rate :mod (c2 / corporate) :poss (s / state :name (n / name :op1 "Maryland")))) :arg2 (s2 / stand-01 :arg1 (s3 / stand :poss (d / district)) :arg2 (p2 / percentage-entity :value (N2 / N-A) :arg1-of (h / high-02 :degree (r2 / relative)))))
(h / hold-04 :arg1 (c / championships :mod (w / world) :mod (n / next)) :location (l / location :name (n2 / name :op1 "Astana")) :time (s / summer :mod (n3 / next)))
(t / thing :manner-of (l / live-01 :arg0 (p / person) :location (h / house :mod (o / old :degree (m / most)) :location (l2 / location :name (n / name :op1 "Ufa")))))
(t / tell-01 :arg0 (p / person :name (n / name :op1 "Johnson")) :arg1 (c / challenge-01 :arg0 (p2 / person) :arg1 (y / you) :arg2 (f / find-01 :arg0 (y2 / you) :arg1 (s / system :mod (r / regressive :degree (m / more)) :arg0-of (g / get-01 :arg1 (v / value :mod (g2 / good :degree (m2 / most))) :arg2 (i / it))))) :arg2 (c2 / committee) :topic (f2 / fee :mod (l / licence)))
(i / include-91 :arg1 (a / and :op1 (p / person :quant 76) :op2 (p2 / person :quant 90)) :arg2 (g / goal :arg1-of (i2 / include-91 :arg2 (g2 / goal) :arg3 (m / most))) :location (l / league :mod (a2 / amusement-park :name (n / name :op1 "N-A")) :mod (t / turkish)))
(i / include-91 :arg1 (a / and :op1 (p / person :quant 76) :op2 (p2 / person :quant 90)) :arg2 (g / goal :arg1-of (i2 / include-91 :arg2 (g2 / goal) :arg3 (m / most))) :location (l / league :mod (a2 / amusement-park :name (n / name :op1 "N-A")) :mod (t / turkish)))
(w / wish-01 :arg0 (i / i) :arg1 (a / and :op1 (m / mercy :arg0 (g / god) :arg1 (m2 / martyrs :poss (g2 / god))) :op2 (w2 / wish-01 :arg0 (i2 / i) :arg1 (r / recover-01 :arg1 (v / veteran :poss (w3 / we)) :arg2 (v2 / veteran :poss (w4 / we))))))
(r / recommend-01 :arg1 (k / keep-01 :arg0 (y / you) :arg1 (t / track) :manner (d / definite) :time (d2 / do-02 :arg0 (y2 / you) :arg1 (t2 / this))))
(a / and :op1 (b / begin-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg2 (m / member))) :arg1 (h2 / hide-01 :arg0 (p2 / person) :arg1 (t / thing :arg1-of (s / say-01 :arg0 (p3 / person :name (n / name :op1 "Wagner") :arg0-of (h3 / have-org-role-91 :arg2 (c / chief :mod (' / '')))))))) :op2 (s2 / say-01 :arg0 (p4 / person :arg0-of (h4 / have-org-role-91 :arg1 ('2 / '' :poss (p5 / person)) :arg2 (c2 / chief))) :arg1 (w / well-being :arg0 (p6 / person))) :time (p7 / point :mod (t2 / this)))
(c / chance-02 :arg0 (p / person :name (n / name :op1 "Compton")) :arg1 (a / and :op1 (h / home) :op2 (a2 / away)) :mod (o / only))
(c / clear-06 :polarity - :arg1 (a / and :op1 (c2 / clear-01 :arg1 (c3 / cat :mod (r / rubber) :arg1-of (k / kill-01 :arg1-of (p / possible-01 :polarity -))) :arg2 (a2 / alternative :mod (l / less-lethal))) :op2 (p2 / produce-01 :arg0 (c4 / cat) :arg1 (s / salary :mod (d / die-01 :arg1-of (h / high-02)) :mod (s2 / such)) :manner (a3 / apparent))) :time (i / immediate))
(l / look-01 :arg0 (p / person :mod (c / country :name (n / name :op1 "England"))) :arg1 (a / additions :arg0 (p2 / person) :arg1 (p3 / person :arg2-of (s / staff-01 :arg1 (p4 / person) :mod (c2 / coaching)) :mod (c3 / coaching)) :quant (c4 / couple)) :source (s2 / squad))
(( / ( :( (n / name) :op1 "Marco" :op2 "Rubio")
(r / rate-entity-91 :arg1 (p / percentage-entity :value (N / N-A)) :arg2 (t / temporal-quantity :quant (N2 / N-A) :unit (y / year)) :arg1-of (e / end-01 :time (d / date-entity :month (A / Aug.) :day 31)) :arg1-of (e2 / end-01 :time (d2 / date-entity :month (A2 / Aug.) :day 31)))
(f / find-01 :arg0 (i / i) :arg1 (a / and :op1 (p / person :quant 26 :arg0-of (h / have-rel-role-91 :arg1 (i2 / i) :arg2 (c / child))) :op2 (p2 / person :quant 26 :arg0-of (h2 / have-rel-role-91 :arg1 (i3 / i) :arg2 (c2 / child)))) :manner (i4 / interest-01 :arg1 (i5 / i) :arg2 (p3 / person :quant 26 :arg0-of (h3 / have-rel-role-91 :arg1 (i6 / i) :arg2 (c3 / child)))))
(i / include-91 :arg1 (a / and :op1 (c / country :name (n / name :op1 "Mozambique")) :op2 (c2 / country :name (n2 / name :op1 "Australia")) :op3 (c3 / country :name (n3 / name :op1 "Malaysia")) :op4 (c4 / country :name (n4 / name :op1 "Indonesia"))) :arg2 (n5 / number :mod (b / big :degree (m / most)) :arg1-of (s / suspend-01) :arg1-of (i2 / include-91 :arg2 (p / product-of :op1 85 :op2 (p2 / percentage-entity :value (N / N-A))))))
(a / and :op1 (p / point-out-02 :arg0 (l / lamb) :arg1 (a2 / and :op1 (s / say-01 :arg0 (l2 / lamb) :arg1 (b / be-located-at-91 :arg1 (d / dog :arg0-of (h / have-rel-role-91 :arg1 (h2 / he) :arg2 (d2 / dd1))) :arg2 (t / there))) :op2 (u / upset-01 :arg1 (d3 / dog) :mod (p2 / probable)))) :op2 (s2 / say-01 :arg0 (l3 / lamb) :arg1 (p3 / possible-01 :arg1 (f / find-01 :arg1 (c / contact-01 :arg0 (w / woman :arg1-of (d4 / die-01)) :arg1 (p4 / phone :poss (w2 / woman)))))))
(a / and :op1 (p / point-out-02 :arg0 (l / lamb) :arg1 (a2 / and :op1 (s / say-01 :arg0 (l2 / lamb) :arg1 (b / be-located-at-91 :arg1 (d / dog :arg0-of (h / have-rel-role-91 :arg1 (h2 / he) :arg2 (d2 / dd1))) :arg2 (t / there))) :op2 (u / upset-01 :arg1 (d3 / dog) :mod (p2 / probable)))) :op2 (s2 / say-01 :arg0 (l3 / lamb) :arg1 (p3 / possible-01 :arg1 (f / find-01 :arg1 (c / contact-01 :arg0 (w / woman :arg1-of (d4 / die-01)) :arg1 (p4 / phone :poss (w2 / woman)))))))
(c / contrast-01 :arg2 (m / matter-01 :polarity - :arg1 (d / discuss-01 :arg0 (a / and :op1 (p / person :name (n / name :op1 "McDonnell")) :op2 (p2 / person :name (n2 / name :op1 "Corbyn")) :topic (h / have-org-role-91 :arg0 (p3 / person) :arg1 (o / organization :name (n3 / name :op1 "EU")) :arg2 (m2 / member))) :mod (b / basic) :topic (a2 / and :op1 (e / economy :poss (p4 / person)) :op2 (e2 / economy :poss (p5 / person) :arg1-of (b2 / bennite :arg0 (p6 / person))))) :time (p7 / past :op1 (d2 / date-entity :decade (N / N-A)))) :arg1-of (c2 / cause-01 :arg0 (a3 / and :op1 (d3 / discuss-01 :arg0 (p8 / person :arg0-of (h2 / have-org-role-91 :arg1 (o2 / organization) :arg2 (m3 / member))) :arg1 (e3 / economy :poss (p9 / person) :arg1-of (b3 / bennite :arg0 (p10 / person)))) :op2 (d4 / discussion :arg0 (p11 / person) :arg1 (e4 / economy))) :time (b4 / before :op1 (n4 / now) :quant (t / temporal-quantity :quant (N2 / N-A) :unit (y / year)))))
(p / possible-01 :arg1 (m / make-02 :arg0 (r / rate :mod (r2 / rate)) :arg1 (t / thing :mod (v / volatile)) :time (w / while)) :arg1-of (s / see-01 :arg0 (m2 / market) :time (b / before :op1 (n / now) :duration (o / or :op1 (t2 / temporal-quantity :quant (N / N-A) :unit (m3 / month)) :op2 (s2 / so)))))
(j / joke-01 :arg2 (j2 / joke-01))
(h / have-concession-91 :arg1 (r / remain-01 :arg1 (p / person :name (n / name :op1 "Louis" :op2 "van" :op3 "Gaal")) :arg3 (h2 / hopeful-03 :arg0 (p2 / person) :arg1 (p3 / possible-01 :arg1 (p4 / play-11 :arg0 (p5 / person :name (n2 / name :op1 "Shaw")) :mod (a / again) :time (s / season :mod (t / this)))))) :arg2 (l / leave-14 :arg0 (t2 / this) :arg1 (a2 / and :op1 (f / full-back :arg1 (t3 / tears :arg1-of (t4 / tears))) :op2 (r2 / rule-out-02 :arg0 (t5 / this) :arg1 (h3 / he) :duration (a3 / at-least :op1 (t6 / temporal-quantity :quant (N / N-A) :unit (m / month)))))))
(s / say-01 :arg0 (p / person :name (n / name :op1 "Van" :op2 "Persie")) :arg1 (c / come-01 :arg1 (i / i) :purpose (w / watch-01 :arg0 (i2 / i) :arg1 (y / you))) :time (c2 / converse-01 :arg0 (p2 / person) :arg1 (f / fan :mod (f2 / fan))))
(e / easy-05 :arg1 (a / apply-01 :arg0 (f / foreign) :arg1 (o / or :op1 (p / permit-01 :arg1 (f2 / fly-01 :mod (p2 / permanent))) :op2 (c / card :name (n / name :op1 (g / green)) :mod (g2 / green)) :op3 (c2 / card :name (n2 / name :op1 (g3 / green))) :op4 (p3 / process-02 :arg1 (a2 / apply-01)))) :degree (m / more))
(e / easy-05 :arg1 (a / apply-01 :arg0 (f / foreign) :arg1 (o / or :op1 (p / permit-01 :arg1 (f2 / fly-01 :mod (p2 / permanent))) :op2 (c / card :name (n / name :op1 (g / green)) :mod (g2 / green)) :op3 (c2 / card :name (n2 / name :op1 (g3 / green))) :op4 (p3 / process-02 :arg1 (a2 / apply-01)))) :degree (m / more))
(m / multi-sentence :snt1 (p / person :name (n / name :op1 "Dnipro") :arg0-of (h / have-03 :arg1 (p2 / person :quant 2 :arg0-of (p3 / play-01))) :arg0-of (h2 / have-03 :arg1 (p4 / person :quant 2 :arg0-of (p5 / play-01)))) :snt2 (p6 / prepare-02 :arg1 (p7 / person :arg0-of (p8 / play-01)) :arg2 (h3 / half :ord (o / ordinal-entity :value 2) :location (p9 / peninsula :name (n2 / name :op1 "N-A")))))
(m / multi-sentence :snt1 (s / strong-02 :arg1 (a / adage :mod (o / old) :consist-of (g / get-05 :arg1 (' / '') :arg2 ('2 / ''))) :arg1-of (s2 / strong-02)) :snt2 (p / perceive-01 :arg1 (p2 / perceive-01 :arg1 (i / it) :arg2 (o2 / open-up-03 :arg0 (t / they) :arg1 (p3 / problem)))))
(c / contrast-01 :arg2 (w / want-01 :arg0 (h / he) :arg1 (w2 / write-01 :arg0 (h2 / he) :arg1 (i / it) :mod (i2 / international))))
(d / design-01 :arg1 (d2 / design-01))
(p / possible-01 :arg1 (h / hear-01 :arg1 (a / and :op1 (p2 / person :arg0-of (o / oppose-01 :arg1 (o2 / organization :name (n / name :op1 "ISIS")))) :op2 (p3 / person :arg0-of (o3 / oppose-01 :arg1 (c / country :name (n2 / name :op1 "Turkey")))) :arg1-of (c2 / close-10 :arg2 (a2 / and :op1 (b / border-01) :op2 (g / gunfire))))) :time (d / during :op1 (c3 / clashes :arg0 (o4 / organization) :arg1 (o5 / organization))))
(p / possible-01 :arg1 (h / hear-01 :arg1 (a / and :op1 (p2 / person :arg0-of (o / oppose-01 :arg1 (o2 / organization :name (n / name :op1 "ISIS")))) :op2 (p3 / person :arg0-of (o3 / oppose-01 :arg1 (c / country :name (n2 / name :op1 "Turkey")))) :arg1-of (c2 / close-10 :arg2 (a2 / and :op1 (b / border-01) :op2 (g / gunfire))))) :time (d / during :op1 (c3 / clashes :arg0 (o4 / organization) :arg1 (o5 / organization))))
(p / possible-01 :arg1 (h / hear-01 :arg1 (a / and :op1 (p2 / person :arg0-of (o / oppose-01 :arg1 (o2 / organization :name (n / name :op1 "ISIS")))) :op2 (p3 / person :arg0-of (o3 / oppose-01 :arg1 (c / country :name (n2 / name :op1 "Turkey")))) :arg1-of (c2 / close-10 :arg2 (a2 / and :op1 (b / border-01) :op2 (g / gunfire))))) :time (d / during :op1 (c3 / clashes :arg0 (o4 / organization) :arg1 (o5 / organization))))
(s / show-01 :arg0 (o / organization :name (n / name :op1 "Activision") :arg0-of (h / hold-01 :arg1 (r / right :mod (l / licencing) :poss (s2 / series))) :arg0-of (h2 / hold-01 :arg1 (r2 / right :mod (l2 / licencing) :poss (s3 / series)))) :arg1 (s4 / sell-01 :arg1 (c / copy-01 :quant 250000000) :time (e / end-01 :arg1 (i / issue-02 :arg0 (s5 / sell-01) :arg1-of (s6 / special-02)))))
(f / find-01 :arg0 (p / problem :mod (t / this) :quant (a / all)) :arg1 (p2 / problem :mod (t2 / this) :quant (a2 / all)))
(f / find-01 :arg0 (p / problem :mod (t / this) :quant (a / all)) :arg1 (p2 / problem :mod (t2 / this) :quant (a2 / all)))
(c / contrast-01 :arg2 (s / say-01 :arg0 (p / person :arg0-of (v / vote-01) :arg1-of (i / include-91 :arg2 (p2 / person :arg0-of (v2 / vote-01) :mod (p3 / primary)) :arg3 (p4 / percentage-entity :value 48))) :arg1 (s2 / say-01 :arg0 (p5 / person :arg0-of (v3 / vote-01) :mod (p6 / primary) :quant (p7 / percentage-entity :value 48)) :arg1 (s3 / say-01 :arg0 (p8 / person) :arg1 (a / and :op1 (s4 / say-01 :arg0 (p9 / person :arg0-of (v4 / vote-01) :mod (p10 / primary) :quant (p11 / percentage-entity :value 48)) :arg1 (p12 / person :name (n / name :op1 "Donald" :op2 "Trump"))) :op2 (s5 / say-01 :arg0 (p13 / person :arg0-of (v5 / vote-01) :mod (r / republican) :mod (f / few :degree (m / more))) :arg1 (p14 / person :name (n2 / name :op1 "Clinton"))))))))
(a / and :op1 (s / state-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (o / organization :name (n / name :op1 "Screenwriters" :op2 "Association")) :arg2 (- / -lrb-))) :mod (a2 / also)) :op2 (s2 / say-01 :arg0 (p2 / person) :arg1 (s3 / stand-01 :arg1 (w / we) :arg2 (p3 / person :arg1-of (d / displace-01) :arg0-of (t / target-01 :arg1 (c / campaign-01 :mod (l / lynching)))))))
(m / multi-sentence :snt1 (k / k?z :mode (i / interrogative) :name (n / name :op1 (s / sokak) :op2 (s2 / sokak) :op3 (s3 / sokak) :op4 (s4 / sokak) :op5 (s5 / sokak))) :snt2 (u / use-01 :arg0 (p / person :name (n2 / name :op1 "Nazan" :op2 "Öncel")) :arg1 (p2 / play-01) :mod (a / also)))
(c / create-01 :arg0 (c2 / character :arg1-of (c3 / create-01 :arg0 (h / he))) :arg1 (c4 / character :arg1-of (c5 / create-01 :arg0 (h2 / he))) :arg3 (s / song :prep-to (s2 / song)) :arg4 (a / and :op1 (s3 / song) :op2 (t / travelling) :op3 (i / innovate-01) :op4 (b / behave-01 :arg0 (h3 / he)) :op5 (b2 / behave-01 :arg0 (h4 / he)) :op7 (r / reflect-01 :arg1 (h5 / he) :arg2 (i2 / integrity :mod (a2 / artistic)) :beneficiary (i3 / i))))
(h / have-concession-91 :arg1 (r / realize-01 :polarity - :arg0 (p / person :name (n / name :op1 "Banksy")) :arg1 (e / exhibit-01)) :arg2 (r2 / realize-01 :polarity - :arg0 (p2 / person) :arg1 (e2 / exhibit-01)))
(h / have-concession-91 :arg1 (r / realize-01 :polarity - :arg0 (p / person :name (n / name :op1 "Banksy")) :arg1 (e / exhibit-01)) :arg2 (r2 / realize-01 :polarity - :arg0 (p2 / person) :arg1 (e2 / exhibit-01)))
(r / respond-01 :arg1 (a / area :quant (m / many)) :arg2 (a2 / area :location-of (d / dispatched :arg1 (v / vehicle :mod (a3 / armoured)))))
(r / reveal-01 :arg1 (p / person :arg2-of (s / suspect-01) :arg1-of (m / make-01 :arg0 (p2 / person :quant 50 :arg2-of (s2 / suspect-01)) :manner (l / law :polarity -) :arg1-of (u / use-01 :arg0 (p3 / person) :arg2 (a / atm :quant 15 :arg1-of (d / differ-02))))) :mod (a2 / also))
(c / contrast-01 :arg1 (t / think-01 :arg0 (w / we) :arg1 (g / get-03 :arg1 (h / he) :arg2 (o / old) :time (n / now))) :arg2 (r / realize-01 :arg0 (h2 / he) :arg1 (e / everything)))
(c / contrast-01 :arg2 (c2 / cause-01 :arg0 (c3 / cartoon) :arg1 (a / accuse-01 :arg0 (p / person :quant (m / many)) :arg1 (p2 / person :name (n / name :op1 "Charlie" :op2 "Hebdo")) :arg2 (r / racism))))
(b / believe-01 :arg0 (o / organization :name (n / name :op1 "Morgan" :op2 "Stanley")) :arg1 (a / and :op1 (f / fall-01 :arg1 (a2 / and :op1 (f2 / food :poss (o2 / organization :name (n2 / name :op1 "Metcash"))) :op2 (s / sell-01 :arg1 (a3 / and :op1 (f3 / food) :op2 (g / groceries)))) :arg2 (r / rate-entity-91 :arg1 3.8 :arg2 (t / temporal-quantity :quant (N / N-A) :unit (y / year)))) :op2 (r2 / rate-entity-91 :arg1 (m / monetary-quantity :quant (N2 / N-A) :unit (p / pound)) :arg2 (t2 / temporal-quantity :quant (N3 / N-A) :unit (y2 / year))) :op3 (r3 / reduce-01 :arg1 (s2 / share :mod (m2 / market) :poss (a4 / and)) :arg3 (r4 / rate-entity-91 :arg1 (s3 / share :mod (m3 / market)) :arg2 (r5 / rate-entity-91 :arg1 (s4 / share :mod (m4 / market)) :arg2 (r6 / rate-entity-91 :arg1 (s5 / share :mod (m5 / market)) :arg2 (r7 / rate-entity-91 :arg1 (s6 / share :mod (m6 / market)) :arg2 (r8 / rate-entity-91 :arg1 (m7 / monetary-quantity :quant (N4 / N-A) :unit (p2 / pound)) :arg2 (t3 / temporal-quantity :quant (N5 / N-A) :unit (y3 / year))) :arg4 (r9 / rate-entity-91 :arg1 (m8 / monetary-quantity :quant (N6 / N-A) :unit (p3 / pound)) :arg2 (t4 / temporal-quantity :quant (N7 / N-A) :unit (y4 / year))))))))))
(s / succeed-01 :arg0 (c / character :arg1-of (p / play-02 :arg0 (d / duo :mod (t / this)))) :arg1 (l / laugh-01 :arg1 (a / and :op1 (m / mimics) :op2 (l2 / line) :poss (t2 / they)) :mod (a2 / audience)))
(c / contrast-01 :arg1 (u / unhurt :domain (h / he)) :arg2 (g / go-08 :arg1 (v / video :poss (f / fall)) :arg2 (m / media :mod (s / social))))
(p / present-01 :arg0 (p2 / person :name (n / name :op1 "Loewe")) :arg1 (b / bag :mod (f / fun)) :arg2 (b2 / bag :quant 2))
(p / present-01 :arg0 (p2 / person :name (n / name :op1 "Loewe")) :arg1 (b / bag :mod (f / fun)) :arg2 (b2 / bag :quant 2))
(m / multi-sentence :snt1 (a / and :op1 (a2 / and :op1 (p / person :name (n / name :op1 "Monica" :op2 "Ali")) :op2 (p2 / person :name (n2 / name :op1 "Alan" :op2 "Bissett")) :op3 (p3 / person :name (n3 / name :op1 "William" :op2 "Boyd")) :op4 (p4 / person :name (n4 / name :op1 "Chris" :op2 "Brookmyre")) :op5 (p5 / person :name (n5 / name :op1 "Gillian" :op2 "Clarke")) :op6 (p6 / person :arg0-of (h / have-org-role-91 :arg1 (o / organization :name (n6 / name :op1 "Drew" :op2 "Campbell")) :arg2 (p7 / president))) :op6 (p8 / person :arg0-of (h2 / have-org-role-91 :arg1 (o2 / organization :name (n7 / name :op1 "Drew" :op2 "Campbell")) :arg2 (p9 / president))) :op6 (p10 / person :arg0-of (h3 / have-org-role-91 :arg1 (o3 / organization :name (n8 / name :op1 "Drew" :op2 "Campbell")) :arg2 (p11 / president))) :op7 (p12 / person :arg0-of (h4 / have-org-role-91 :arg1 (o4 / organization) :arg2 (p13 / president)) :arg0-of (h5 / have-org-role-91 :arg1 (o5 / organization) :arg2 (p14 / president)) :arg0-of (h6 / have-org-role-91 :arg1 (o6 / organization) :arg2 (p15 / president)) :arg0-of (h7 / have-org-role-91 :arg1 (o7 / organization) :arg2 (p16 / president)) :arg0-of (h8 / have-org-role-91 :arg1 (o8 / organization) :arg2 (p17 / president)) :arg0-of (h9 / have-org-role-91 :arg1 (o9 / organization) :arg2 (p18 / president)) :arg0-of (h10 / have-org-role-91 :arg1 (o10 / organization) :arg2 (p19 / president)) :arg0-of (h11 / have-org-role-91 :arg1 (o11 / organization) :arg2 (p20 / president)) :arg0-of (h12 / have-org-role-91 :arg1 (o12 / organization) :arg2 (p21 / president)) :arg0-of (h13 / have-org-role-91 :arg1 (o13 / organization) :arg2 (p22 / president)) :arg0-of (h14 / have-org-role-91 :arg1 (o14 / organization) :arg2 (p23 / president)) :arg0-of (h15 / have-org-role-91 :arg1 (o15 / organization) :arg2 (p24 / president)) :arg0-of (h16 / have-org-role-91 :arg1 (o16 / organization) :arg2 (p25 / president)) :arg0-of (h17 / have-org-role-91 :arg1 (o17 / organization) :arg2 (p26 / president)) :arg0-of (h18 / have-org-role-91 :arg1 (o18 / organization) :arg2 (p27 / president)) :arg0-of (h19 / have-org-role-91 :arg1 (o19 / organization) :arg2 (p28 / president)) :arg0-of (h20 / have-org-role-91 :arg1 (o20 / organization) :arg2 (p29 / president)) :arg0-of (h21 / have-org-role-91 :arg1 (o21 / organization) :arg2 (p30 / president)) :arg0-of (h22 / have-org-role-91 :arg1 (o22 / organization) :arg2 (p31 / president)) :arg0-of (h23 / have-org-role-91 :arg1 (o23 / organization) :arg2 (p32 / president))))) :snt2 (p33 / person :name (n9 / name :op1 "Sarah" :op2 "Waters")))
(m / multi-sentence :snt1 (a / and :op1 (a2 / and :op1 (p / person :name (n / name :op1 "Monica" :op2 "Ali")) :op2 (p2 / person :name (n2 / name :op1 "Alan" :op2 "Bissett")) :op3 (p3 / person :name (n3 / name :op1 "William" :op2 "Boyd")) :op4 (p4 / person :name (n4 / name :op1 "Chris" :op2 "Brookmyre")) :op5 (p5 / person :name (n5 / name :op1 "Gillian" :op2 "Clarke")) :op6 (p6 / person :arg0-of (h / have-org-role-91 :arg1 (o / organization :name (n6 / name :op1 "Drew" :op2 "Campbell")) :arg2 (p7 / president))) :op6 (p8 / person :arg0-of (h2 / have-org-role-91 :arg1 (o2 / organization :name (n7 / name :op1 "Drew" :op2 "Campbell")) :arg2 (p9 / president))) :op6 (p10 / person :arg0-of (h3 / have-org-role-91 :arg1 (o3 / organization :name (n8 / name :op1 "Drew" :op2 "Campbell")) :arg2 (p11 / president))) :op7 (p12 / person :arg0-of (h4 / have-org-role-91 :arg1 (o4 / organization) :arg2 (p13 / president)) :arg0-of (h5 / have-org-role-91 :arg1 (o5 / organization) :arg2 (p14 / president)) :arg0-of (h6 / have-org-role-91 :arg1 (o6 / organization) :arg2 (p15 / president)) :arg0-of (h7 / have-org-role-91 :arg1 (o7 / organization) :arg2 (p16 / president)) :arg0-of (h8 / have-org-role-91 :arg1 (o8 / organization) :arg2 (p17 / president)) :arg0-of (h9 / have-org-role-91 :arg1 (o9 / organization) :arg2 (p18 / president)) :arg0-of (h10 / have-org-role-91 :arg1 (o10 / organization) :arg2 (p19 / president)) :arg0-of (h11 / have-org-role-91 :arg1 (o11 / organization) :arg2 (p20 / president)) :arg0-of (h12 / have-org-role-91 :arg1 (o12 / organization) :arg2 (p21 / president)) :arg0-of (h13 / have-org-role-91 :arg1 (o13 / organization) :arg2 (p22 / president)) :arg0-of (h14 / have-org-role-91 :arg1 (o14 / organization) :arg2 (p23 / president)) :arg0-of (h15 / have-org-role-91 :arg1 (o15 / organization) :arg2 (p24 / president)) :arg0-of (h16 / have-org-role-91 :arg1 (o16 / organization) :arg2 (p25 / president)) :arg0-of (h17 / have-org-role-91 :arg1 (o17 / organization) :arg2 (p26 / president)) :arg0-of (h18 / have-org-role-91 :arg1 (o18 / organization) :arg2 (p27 / president)) :arg0-of (h19 / have-org-role-91 :arg1 (o19 / organization) :arg2 (p28 / president)) :arg0-of (h20 / have-org-role-91 :arg1 (o20 / organization) :arg2 (p29 / president)) :arg0-of (h21 / have-org-role-91 :arg1 (o21 / organization) :arg2 (p30 / president)) :arg0-of (h22 / have-org-role-91 :arg1 (o22 / organization) :arg2 (p31 / president)) :arg0-of (h23 / have-org-role-91 :arg1 (o23 / organization) :arg2 (p32 / president))))) :snt2 (p33 / person :name (n9 / name :op1 "Sarah" :op2 "Waters")))
(b / bad-07 :mode (i / interrogative) :arg1 (i2 / industry) :degree (t / that))
(c / contrast-01)
(b / believe-01 :arg0 (p / person :name (n / name :op1 "Wenger")) :arg1 (a / and :op1 (l / learnt :arg0 (o / organization :name (n2 / name :op1 "Arsenal")) :arg1 (l2 / lesson :poss (l3 / league :mod (s / season :mod (l4 / last))) :prep-against (c / country :name (n3 / name :op1 "Monaco")))) :op2 (r / remain-01 :arg1 (h / hopeful-03 :arg0 (o2 / organization) :arg1 (m / manage-01 :arg0 (c2 / country) :arg1 (t / triumph :mod (c3 / cup) :ord (o3 / ordinal-entity :value 1) :mod (c4 / continent :name (n4 / name :op1 "N-A")))) :arg1-of (e / empty-02)))))
(c / contrast-01 :arg1 (v / value-02 :arg0 (w / we) :arg1 (t / team :mod (l / law :polarity -)) :degree (v2 / very)) :arg2 (g / gain-02 :arg0 (w2 / we) :arg1 (s / synergy :mod (c2 / certain)) :arg3 (w3 / work-01 :arg0 (w4 / we) :arg1 (p / platform :mod (l2 / law :polarity -)) :manner (g2 / gathering :arg0 (w5 / we) :arg1 (t2 / team :mod (t3 / this)) :manner (t4 / together)))))
(t / tell-01 :arg0 (p / person :name (n / name :op1 "Shannon" :op2 "Lamb") :arg0-of (h / have-org-role-91 :arg2 (p2 / professor :mod (c / college)))) :arg1 (s / shoot-02 :arg0 (p3 / person) :arg1 (a / and :op1 (p4 / person :arg0-of (h2 / have-rel-role-91 :arg1 (h3 / he) :arg2 (g / girlfriend))) :op2 (p5 / person :arg0-of (h4 / have-org-role-91 :arg2 (o / officer))) :arg1-of (n2 / need-01 :purpose (g2 / get-05 :arg1 (p6 / person) :arg2 (h5 / house :poss (p7 / person)))))) :arg2 (p8 / police) :medium (c2 / call-02 :quant 911))
(m / multi-sentence :snt1 (p / possible-01 :arg1 (s / say-01 :arg0 (w / we) :arg1 (a / amr-unknown))) :snt2 (k / kill-01 :mode (i / interrogative) :arg0 (t / they) :arg1 (p2 / person :name (n / name :op1 "Yusuf" :op2 "Ya")) :time (d / date-entity :month 1 :day 3) :location (p3 / peninsula :name (n2 / name :op1 "N-A"))))
(d / documentary :name (n / name :op1 (' / '') :op2 (w / wrestler) :op3 (w2 / wrestler)) :mod (y / young) :source (p / person :name (n2 / name :op1 "Mete" :op2 "Gümürhan")) :ord (o / ordinal-entity :value 2))
(a / announce-01 :arg0 (o / organization :name (n / name :op1 "Ministry" :op2 "of" :op3 "National" :op4 "Education")) :arg1 (d / do-02 :arg1 (e / exams :arg1 (p / person :arg0-of (s / study-01) :location (p2 / peninsula :name (n2 / name :op1 "N-A")))) :arg2 (l / location :name (n3 / name :op1 "Mardin"))))
(a / and :op1 (r / reach-01 :arg0 (y / you) :arg1 (b / body :mod (i / ideal) :poss (y2 / you)) :manner (d / decline-01 :arg1 (w / weight))) :op2 (d2 / do-02 :arg0 (y3 / you) :arg1 (s / so) :manner (l / lose-02 :arg0 (y4 / you) :arg1 (w2 / weight))))
(a / and :op1 (r / reach-01 :arg0 (y / you) :arg1 (b / body :mod (i / ideal) :poss (y2 / you)) :manner (d / decline-01 :arg1 (w / weight))) :op2 (d2 / do-02 :arg0 (y3 / you) :arg1 (s / so) :manner (l / lose-02 :arg0 (y4 / you) :arg1 (w2 / weight))))
(a / and :op1 (f / finish-07 :arg0 (p / person :name (n / name :op1 "Simon")) :arg2 (s / score-entity :op1 (1 / 13-9) :op2 6)) :op2 (a2 / allow-01 :arg0 (p2 / person) :arg1 3))
(s / say-01 :arg0 (r / report-01) :arg1 (a / and :op1 (c / cycles :arg1 (c2 / cycles :quant (a2 / all)) :time (s2 / since :op1 (d / date-entity :decade (N / N-A))) :arg1-of (i / increase-01 :arg2 (l / leverage :arg1-of (g / gdp :arg2 (p / product :arg1-of (g2 / gross-03) :mod (d2 / domestic)))) :arg1-of (q / quick-02 :degree (v / very)))) :op2 (p2 / post-01 :arg0 (t / thing :arg1-of (r2 / report-01)))) :location (s3 / study-01 :arg0 (w / we)))
(m / mark-01 :arg0 (e / exam :mod (j / joint)) :arg1 (o / obtain-01 :arg1 (t / thing :arg0-of (m2 / mark-01) :arg1-of (o2 / obtain-01 :arg2 (s / subject))) :arg1-of (c / cause-01 :arg0 (c2 / coefficient :arg1 (w / weight :poss (t2 / thing))))) :time (a / after :op1 (m3 / mark :mod (j2 / joint))))
(f / forget-01 :mode (i / imperative) :polarity - :arg0 (y / you) :arg1 (f2 / fact :topic (u / use-01 :arg1 (b / brain :part-of (b2 / brain)) :arg2 (w / way :arg1-of (s / same-01)))))
(a / and :op1 (m / meet-03 :arg0 (p / person :name (n / name :op1 "Bergen")) :location (t / there) :purpose (w / work-01)) :op2 (m2 / meet-02 :arg0 (p2 / person :name (n2 / name :op1 "Bergen")) :arg1 (o / organization :name (n3 / name :op1 "Halis" :op2 "Serbes")) :time (y / year :arg1-of (f / follow-01))))
(s / say-01 :arg0 (i / i) :arg1 (r / recommend-01 :arg1 (t / take-01 :arg1 (s2 / step-01 :arg1-of (n / need-01) :quant (a / all)) :manner (r2 / rapid))) :time (y / yesterday))
(a / argue-01 :arg0 (p / person :arg0-of (h / have-rel-role-91 :arg1 (p2 / person :name (n / name :op1 "Maksimovic")) :arg2 (l / lawyer))) :arg1 (e / evidence-01 :polarity - :arg0-of (e2 / evidence-01 :arg1 (a2 / and :op1 (a3 / attempt-01 :arg0 (h2 / he) :arg1 (p3 / possess-01 :arg0 (h3 / he) :arg1 (a4 / all :arg1-of (i / include-91 :arg2 (i2 / it))))) :op2 (p4 / possible-01 :arg1 (b / be-located-at-91 :arg1 (h4 / he) :arg2 (u / under :op1 (t / thing :arg2-of (h5 / have-purpose-91 :arg1 (i3 / innocent-01))))))))) :concession (f / face-01 :arg0 (l2 / lawyer) :arg1 (s / sentence-01 :arg1 (l3 / life :quant (q / quantity :mod (c / commerce))) :arg2 (a5 / attempt-01 :arg1 (p5 / possess-01 :arg1 (c2 / cocaine :quant (q2 / quantity :mod (c3 / commerce))))))))
(p / prepare-02 :arg1 (l / law :arg1-of (d / draft-01) :mod (n / new)) :arg2 (c / country :name (n2 / name :op1 "Romania")) :purpose (a / and :op1 (d2 / determine-01 :arg0 (l2 / law) :arg1 (s / source-02 :arg1 (m / money) :arg1-of (u / use-01 :arg2 (e / elect-01)))) :op2 (p2 / place :location-of (e2 / expend-01 :arg0 (l3 / law) :arg2 (m2 / monetary-quantity :arg1-of (e3 / expend-01) :mod (u2 / upper)))) :manner (p3 / precise)))
(e / exhibit-01 :arg1 (e2 / exhibit-01) :arg3 (p / place :arg1-of (p2 / popular-02 :degree (m / most)) :arg1-of (i / include-91 :arg2 (p3 / place :mod (a / art) :location (l / location :name (n / name :op1 "Ankara"))))) :arg3 (t / thing :arg1-of (p4 / paint-02 :arg1-of (e3 / exhibit-01 :arg0 (p5 / person :name (n2 / name :op1 "Kadir" :op2 "Öztoprak"))))))
(e / exhibit-01 :arg1 (e2 / exhibit-01) :arg3 (p / place :arg1-of (p2 / popular-02 :degree (m / most)) :arg1-of (i / include-91 :arg2 (p3 / place :mod (a / art) :location (l / location :name (n / name :op1 "Ankara"))))) :arg3 (t / thing :arg1-of (p4 / paint-02 :arg1-of (e3 / exhibit-01 :arg0 (p5 / person :name (n2 / name :op1 "Kadir" :op2 "Öztoprak"))))))
(a / and :op1 (g / go-02 :arg0 (y / youth :quant 1990) :arg4 (c / country :name (n / name :op1 "N-A"))) :op2 (r / re-released :arg0 (y2 / youth :arg1-of (i / include-91 :arg2 (y3 / youth :quant 1999))) :arg1 (c2 / country :name (n2 / name :op1 "N-A"))))
(a / and :op1 (c / come-01 :arg1 (a2 / artists) :accompanier (a3 / and :op1 (c2 / child) :op2 (p / person :mod (y / young))) :location (s / school)) :op2 (i / instil :arg0 (a4 / and) :arg1 (l / love-01 :arg0 (a5 / and) :arg1 (a6 / and :op1 (m / music) :op2 (a7 / art)) :location (t / they))))
(e / explain-01 :arg0 (h / he) :arg1 (b / bolstered :arg1 (s / sell-01 :medium (o / online)) :time (b2 / before :op1 (n / now) :quant (t / temporal-quantity :quant (N / N-A) :unit (y / year))) :time (s2 / start-01 :arg0 (h2 / he) :arg1 (u / use-01 :arg0 (h3 / he) :arg1 (p / phone :arg1-of (m / mobile-02) :poss (t2 / they)) :arg2 (p2 / purchase-01 :arg0 (t3 / they) :arg1 (p3 / phone))))))
(l / learn-01 :arg0 (i / i) :arg1 (p / possible-01 :arg1 (d / distilled :arg1 (i2 / i) :arg2 (r / rule :quant 8 :arg1-of (s / simple-02)))))
(n / night :ord (o / ordinal-entity :value 1 :range (s / since :op1 (h / have-03 :arg0 (h2 / he) :arg1 (h3 / hits :quant 4) :prep-against (o2 / organization :name (n2 / name :op1 "Seattle" :op2 "Mariners")) :time (d / date-entity :month 7 :day 6)))) :domain (i / it))
(e / enter-01 :arg0 (p / person :arg1-of (i / include-91 :arg2 (c / country :quant 2 :mod (t / this)))) :arg1 (c2 / country :mod (o / other) :mod (e2 / each)) :condition (c3 / close-13 :arg1 (y / you) :arg2 (d / door)))
(e / enter-01 :arg0 (p / person :arg1-of (i / include-91 :arg2 (c / country :quant 2 :mod (t / this)))) :arg1 (c2 / country :mod (o / other) :mod (e2 / each)) :condition (c3 / close-13 :arg1 (y / you) :arg2 (d / door)))
(a / and :op1 (a2 / art :mod (d / decision-making :degree (m / more)) :domain (p / process-02 :arg1 (i / it))) :op2 (s / say-01 :arg0 (p2 / person :name (n / name :op1 "Zachary" :op2 "Karabell")) :arg1 (h / head-01 :arg0 (p3 / person :arg0-of (h2 / head-01 :arg1 (s2 / strategy :mod (g / globe)))) :arg1 (s3 / strategy :mod (g2 / globe)) :beneficiary (o / organization :name (n2 / name :op1 "Envestnet" :op2 "Inc.") :part-of (f / firm :mod (w / wealth-management))))))
(a / and :op1 (a2 / art :mod (d / decision-making :degree (m / more)) :domain (p / process-02 :arg1 (i / it))) :op2 (s / say-01 :arg0 (p2 / person :name (n / name :op1 "Zachary" :op2 "Karabell")) :arg1 (h / head-01 :arg0 (p3 / person :arg0-of (h2 / head-01 :arg1 (s2 / strategy :mod (g / globe)))) :arg1 (s3 / strategy :mod (g2 / globe)) :beneficiary (o / organization :name (n2 / name :op1 "Envestnet" :op2 "Inc.") :part-of (f / firm :mod (w / wealth-management))))))
(b / be-located-at-91 :arg1 (s / she) :arg2 (j / jail) :time (n / now))
(s / send-01 :arg0 (p / person :quant 25 :arg0-of (w / write-01) :arg1-of (f / fame-01)) :arg1 (l / letter) :arg2 (p2 / person :mod (c / country :name (n / name :op1 "Turkey")) :arg0-of (h / have-org-role-91 :arg1 (c2 / country :name (n2 / name :op1 "Turkey")) :arg2 (m / minister :mod (p3 / prime)))) :time (b / before :op1 (v / visit-01 :arg0 (p4 / person) :arg1 (p5 / person :arg0-of (p6 / prepare-02 :arg2 (g / go-02 :arg0 (p7 / person) :arg4 (c3 / city :name (n3 / name :op1 "London")) :time (w2 / week :mod (n4 / next))))))))
(c / challenge-01 :arg0 (p / person :name (n / name :op1 "Bellamy")) :arg1 (i / idea :poss (p2 / person :name (n2 / name :op1 "Bennett")) :topic (' / '' :arg0 ('2 / '' :name (n3 / name :op1 (e / exciting) :op2 (e2 / exciting)) :mod (f / football) :mod (e3 / exciting) :poss (p3 / person)) :arg1 (p4 / premiership))) :arg2 (w / win-01 :arg0 (d / dragons :name (n4 / name :op1 (g / george-illawarra) :op2 (d2 / dragons)) :poss (p5 / person)) :arg1 (p6 / premiership) :manner (p7 / play-01 :arg0 (p8 / person) :arg1 (m / metropolis :name (n5 / name :op1 ('3 / '') :op2 (f2 / football)) :mod (f3 / football)))))
(s / support-01 :polarity - :arg0 (p / percentage-entity :value (N / N-A)) :arg1 (s2 / she))
(c / clear-06 :polarity - :arg1 (o / or :op1 (a / accept-01 :arg0 (h / he) :arg1 (p / petition-01)) :op2 (m / meet-03 :arg0 (h2 / he) :arg1 (p2 / pope) :time (a2 / already))))
(c / clear-06 :polarity - :arg1 (o / or :op1 (a / accept-01 :arg0 (h / he) :arg1 (p / petition-01)) :op2 (m / meet-03 :arg0 (h2 / he) :arg1 (p2 / pope) :time (a2 / already))))
(s / say-01 :arg0 (p / person :name (n / name :op1 "Kalayc?o?lu")) :arg1 (o / open-01 :arg0 (w / we) :arg1 (c / corner :ord (o2 / ordinal-entity :value 1) :poss (w2 / we) :location (c2 / city :name (n2 / name :op1 "Shanghai")))))
(t / thing :arg1-of (w / word-01) :domain (s / she) :mod (s2 / so))
(a / and :op1 (r / recommend-01 :arg1 (a2 / and :op1 (l / look-01 :arg1 (y / you) :direction (f / forward)) :op2 (l2 / let-01 :arg1 (g / go-02 :arg0 (y2 / you) :arg4 (p / past)))) :mod (o / only)) :op2 (r2 / run-02 :arg0 (y3 / you) :arg1-of (i / instead-of-91 :arg2 (w / walk-01 :arg0 (y4 / you)))) :time (n / now))
(a / and :op1 (r / recommend-01 :arg1 (a2 / and :op1 (l / look-01 :arg1 (y / you) :direction (f / forward)) :op2 (l2 / let-01 :arg1 (g / go-02 :arg0 (y2 / you) :arg4 (p / past)))) :mod (o / only)) :op2 (r2 / run-02 :arg0 (y3 / you) :arg1-of (i / instead-of-91 :arg2 (w / walk-01 :arg0 (y4 / you)))) :time (n / now))
(s / say-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg2 (o / official))) :arg1 (r / remain-01 :arg1 (p2 / person :quant 158) :arg3 (h2 / hospital)))
(h / have-03 :arg0 (p / person :mod (s / seven)) :arg1 (f / fortunes :quant (m / multiple :op1 2) :arg1-of (i / include-91 :arg2 (p2 / person :arg0-of (h2 / have-org-role-91 :arg2 (h3 / head-of-state))))))
(r / rise-01 :arg1 (s / sports :mod (j / jd)) :arg2 (p / percentage-entity :value (N / N-A)) :time (a / after :op1 (r2 / report-01 :arg0 (f / firm :name (n / name :op1 (s2 / sportswear) :op2 (s3 / sportswear))) :arg1 (r3 / rate-entity-91 :arg1 (p2 / percentage-entity :value (N2 / N-A)) :arg2 (t / temporal-quantity :quant (N3 / N-A) :unit (y / year))) :arg3 (p3 / profit-01 :arg0 (f2 / firm) :arg1 (m / monetary-quantity :quant 46.6 :unit (d / dollar :mod (r4 / renminbi)))))))
(a / and :op1 (h / have-condition-91 :arg1 (s / sit-01 :arg1 (i / i) :arg2 (v / view-01 :arg1 (c / chamber :mod (d / die-01)) :location (l / location :name (n / name :op1 "Oklahoma" :op2 "State" :op3 "Penitentiary")))) :arg2 (e / execute-01 :arg0 (i2 / inject-01 :mod (l2 / lethal)) :arg1 (i3 / i))))
(a / and :op1 (h / have-condition-91 :arg1 (s / sit-01 :arg1 (i / i) :arg2 (v / view-01 :arg1 (c / chamber :mod (d / die-01)) :location (l / location :name (n / name :op1 "Oklahoma" :op2 "State" :op3 "Penitentiary")))) :arg2 (e / execute-01 :arg0 (i2 / inject-01 :mod (l2 / lethal)) :arg1 (i3 / i))))
(a / and :op1 (i / identify-01 :mode (i2 / imperative) :arg0 (y / you) :arg1 (p / problem :mod (e / emotional) :poss (t / they))) :op2 (s / sure-02 :arg1 (c / calm :arg1 (y2 / you) :time (b / before :op1 (b2 / bring :arg0 (y3 / you) :arg1 (i3 / issue-02))))))
(a / and :op1 (e / examine-01 :arg0 (a2 / and :op1 (c / computer :arg1-of (u / use-01 :arg0 (a3 / and :op1 (m / m.m.g.) :op2 (r / r.o)))) :op2 (c2 / computer :arg1-of (u2 / use-01 :arg2 (m2 / mechanism :name (n / name :op1 (m3 / mini)))))) :arg1 (c3 / computer :arg1-of (u3 / use-01 :arg2 (m4 / mechanism :mod (c4 / camera) :mod (s / subsequent))))) :op2 (d / determine-01 :arg0 (a4 / and) :arg1 (s2 / stay-01 :arg1 (p / person :arg2-of (s3 / suspect-01)) :mod (o / only) :duration (t / time :mod (s4 / short)) :location (p2 / province :name (n2 / name :op1 "N-A") :mod (e2 / each)) :purpose (a5 / avoid-01 :arg0 (p3 / person) :arg1 (a6 / arrest-01)))))
(c / celebrates :arg0 (p / person :name (n / name :op1 "Angel" :op2 "Di" :op3 "Maria")) :arg1 (a / and :op1 (p2 / person :name (n2 / name :op1 "Blaise" :op2 "Matuidi")) :op2 (p3 / person :name (n3 / name :op1 "Edinson" :op2 "Cavani"))) :time (a2 / after :op1 (o / oppose-01 :arg0 (p4 / person) :arg1 (l / location :name (n4 / name :op1 "Malmo")))))
(t / take-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (p2 / police :mod (w / white)) :arg2 (o / officer))) :arg1 (p3 / person :name (n / name :op1 "Michael" :op2 "Brown")) :arg1-of (c / cause-01 :arg0 (u / urge-01 :arg0 (p4 / person) :arg1 (a / and :op1 (p5 / person :arg0-of (h2 / have-org-role-91 :arg1 (p6 / police) :arg2 (o2 / officer))) :op2 (p7 / person :arg0-of (h3 / have-org-role-91 :arg2 (a2 / authority))) :op3 (p8 / person :arg0-of (h4 / have-org-role-91 :arg2 (a3 / authority))) :op4 (p9 / person :arg0-of (h5 / have-org-role-91 :arg2 (a4 / authority))) :op5 (p10 / person :arg0-of (h6 / have-org-role-91 :arg2 (a5 / authority)))) :arg2 (h7 / halt-01 :arg0 (a6 / and) :arg1 (p11 / practice-01 :arg1 (d / discriminate-02) :prep-against (p12 / people :mod (c2 / color)))))) :time (a7 / after :op1 (k / kill-01 :arg0 (p13 / person :arg0-of (h8 / have-org-role-91 :arg1 (p14 / police) :arg2 (o3 / officer))) :arg1 (p15 / person))))
(t / take-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (p2 / police :mod (w / white)) :arg2 (o / officer))) :arg1 (p3 / person :name (n / name :op1 "Michael" :op2 "Brown")) :arg1-of (c / cause-01 :arg0 (u / urge-01 :arg0 (p4 / person) :arg1 (a / and :op1 (p5 / person :arg0-of (h2 / have-org-role-91 :arg1 (p6 / police) :arg2 (o2 / officer))) :op2 (p7 / person :arg0-of (h3 / have-org-role-91 :arg2 (a2 / authority))) :op3 (p8 / person :arg0-of (h4 / have-org-role-91 :arg2 (a3 / authority))) :op4 (p9 / person :arg0-of (h5 / have-org-role-91 :arg2 (a4 / authority))) :op5 (p10 / person :arg0-of (h6 / have-org-role-91 :arg2 (a5 / authority)))) :arg2 (h7 / halt-01 :arg0 (a6 / and) :arg1 (p11 / practice-01 :arg1 (d / discriminate-02) :prep-against (p12 / people :mod (c2 / color)))))) :time (a7 / after :op1 (k / kill-01 :arg0 (p13 / person :arg0-of (h8 / have-org-role-91 :arg1 (p14 / police) :arg2 (o3 / officer))) :arg1 (p15 / person))))
(a / and :op1 (w / work-01 :arg0 (p / person :arg1-of (b / bear-02 :location (c / city :name (n / name :op1 "New" :op2 "York") :arg1-of (i / include-91 :arg2 (p2 / person :arg0-of (h / have-org-role-91 :arg1 (c2 / class :name (n2 / name :op1 (p3 / pristine) :op2 (e / empire) :op3 (e2 / empire) :op4 (e3 / empire) :op5 (e4 / empire) :op6 (e5 / empire) :op7 (e6 / empire)))) :arg0-of (h2 / have-org-role-91 :arg1 (c3 / capitalism) :arg2 (c4 / capital))))))) :arg2 (p4 / person :arg0-of (h3 / have-org-role-91 :arg1 (c5 / class) :arg3 (l / lead-02 :arg0 (p5 / person) :arg1 (e7 / empire :name (n3 / name :op1 (p6 / pristine)) :mod (e8 / empire :name (n4 / name :op1 (p7 / pristine)) :mod (e9 / empire :name (n5 / name :op1 (p8 / pristine)) :mod (e10 / empire :name (n6 / name :op1 (p9 / pristine)) :mod (e11 / empire :name (n7 / name :op1 (p10 / pristine)) :mod (e12 / empire :name (n8 / name :op1 (p11 / pristine))))))))))) :location (t / turkish)) :op2 (f / follow-02 :arg1 (p12 / person)))
(a / and :op1 (w / work-01 :arg0 (p / person :arg1-of (b / bear-02 :location (c / city :name (n / name :op1 "New" :op2 "York") :arg1-of (i / include-91 :arg2 (p2 / person :arg0-of (h / have-org-role-91 :arg1 (c2 / class :name (n2 / name :op1 (p3 / pristine) :op2 (e / empire) :op3 (e2 / empire) :op4 (e3 / empire) :op5 (e4 / empire) :op6 (e5 / empire) :op7 (e6 / empire)))) :arg0-of (h2 / have-org-role-91 :arg1 (c3 / capitalism) :arg2 (c4 / capital))))))) :arg2 (p4 / person :arg0-of (h3 / have-org-role-91 :arg1 (c5 / class) :arg3 (l / lead-02 :arg0 (p5 / person) :arg1 (e7 / empire :name (n3 / name :op1 (p6 / pristine)) :mod (e8 / empire :name (n4 / name :op1 (p7 / pristine)) :mod (e9 / empire :name (n5 / name :op1 (p8 / pristine)) :mod (e10 / empire :name (n6 / name :op1 (p9 / pristine)) :mod (e11 / empire :name (n7 / name :op1 (p10 / pristine)) :mod (e12 / empire :name (n8 / name :op1 (p11 / pristine))))))))))) :location (t / turkish)) :op2 (f / follow-02 :arg1 (p12 / person)))
(r / riddled :arg0 (t / they) :arg1 (h / he) :time (s / search-01 :arg0 (t2 / they) :arg2 (p / place :mod (s2 / safe-01))))
(e / explain-01 :polarity - :arg0 (l / lamb) :arg1 (s / shooting))
(s / split-01 :arg1 (v / view-02 :arg0 (p / public) :arg1 (t / this)) :arg2 (b / back) :time (a / after :op1 (c / come-01 :arg1 (i / issue-02) :arg4 (l / light) :quant (s2 / short))))
(a / and :op1 (s / struggled :arg1 (p / person :mod (c / country :name (n / name :op1 "N-A"))) :arg2 (d / drug) :arg1-of (r / report-01) :mod (a2 / also)) :op2 (b / bust :arg1 (p2 / person) :arg2 (p3 / possess-01 :arg1 (d2 / drug))) :li 2008)
(a / announce-01 :arg0 (p / person :name (n / name :op1 "Damon")) :arg1 (v / visit-01 :arg0 (a2 / and :op1 (p2 / person :arg0-of (p3 / produce-01 :arg1 (e / entertainers))) :op2 (p4 / person :arg0-of (p5 / produce-01 :arg1 (m / media))) :op3 (p6 / person :arg0-of (h / have-org-role-91 :arg1 (m2 / media) :arg3 (l / lead-02 :arg0 (p7 / person))))) :arg1 (v2 / visit-01 :arg0 (p8 / person) :arg1 (p9 / pope) :purpose (d / discuss-01 :arg0 (p10 / person) :arg1 (p11 / portrayal :poss (r / religious-group :name (n2 / name :op1 "Catholic" :op2 "Church")) :location (w / west))))) :time (r2 / recent))
(h / have-03 :arg0 (p / person :quant 3) :arg1 (v / view :mod (n / negative)))
(h / have-03 :arg0 (p / person :quant 3) :arg1 (v / view :mod (n / negative)))
(o / over :domain (e / era :mod (a / angels)) :time (n / now))
(t / teach-01 :arg1 (l / lesson :arg1-of (v / value-02) :topic (s / security)) :arg2 (a / and :op1 (l2 / lesson :arg1-of (v2 / value-02)) :op2 (l3 / lesson :mod (a2 / amusing)) :topic (s2 / security)) :arg1-of (c / contrast-01 :arg2 (c2 / command-02 :polarity - :arg0 (s3 / someone) :arg1 (r / room :poss (s4 / someone) :accompanier (a3 / and :op1 (t2 / toothpaste) :op2 (s5 / shampoo))) :time (e / ever))))
(c / contrast-01 :arg1 (a / ambitious :domain (w / we)) :arg2 (d / dreamers :polarity - :domain (w2 / we)))
(m / multi-sentence :snt1 (a / and :op1 (r / rise-01 :arg1 (r2 / rate-entity-91 :arg1 (m2 / more-than :op1 (m3 / monetary-quantity :quant 1.5505 :unit (d / dollar))) :arg2 (t / temporal-quantity :quant (N / N-A) :unit (y / year))) :arg4 (r3 / rate-entity-91 :arg1 (m4 / monetary-quantity :quant 1.5505 :unit (d2 / dollar)) :arg2 (t2 / temporal-quantity :quant (N2 / N-A) :unit (y2 / year)))) :op2 (b / break-up-08 :arg1 (p / percentage-entity :value (N3 / N-A)) :arg4 (a2 / against :op1 (e / euro)))) :snt2 1.3730)
(w / wrong-02 :arg1 (s / say-01 :arg1 (' / '' :arg0 (m / music :poss (h / he)) :arg1 (m2 / music) :mod (j / just))) :arg2 (l / leave-15 :arg0 (w2 / we) :arg1 (i / interest-01 :arg1 (h2 / he) :arg2 (a / art :mod (p / plastic)))) :condition (l2 / leave-15 :arg0 (w3 / we) :arg1 (i2 / interest-01 :arg1 (h3 / he) :arg2 (a2 / art :mod (p2 / plastic)))))
(s / say-01 :arg0 (p / person :name (n / name :op1 "Johnson")) :arg1 (r / recommend-01 :arg1 (u / use-01 :arg1 (f / fee :mod (l / licence)) :arg2 (m / make-01 :arg1 (p2 / programmes :mod (s2 / sort) :arg1-of (m2 / make-01 :polarity - :arg0 (p3 / person :mod (o / other) :arg0-of (b / broadcast-01))))))))
(r / represent-01 :arg0 (s / she) :arg1 (e / end-01 :arg1 (e2 / era :mod (s2 / supermodel))))
(i / increase-01 :arg1 (e / export-01 :arg0 (c / country :name (n / name :op1 "Iran")) :arg1 (o / oil) :mod (d / day)) :arg4 (r / rate-entity-91 :arg1 (d2 / day :quant 3000000) :arg2 (t / temporal-quantity :quant (N / N-A) :unit (d3 / day))) :time (b / before :op1 (e2 / embargo-01)))
(c / contrast-01 :arg1 (' / '' :arg0 (p / person :name (n / name :op1 "Hilary")) :arg1 (p2 / person :name (n2 / name :op1 "Benn"))) :arg2 (s / say-01 :arg0 (p3 / person :arg0-of (h / have-org-role-91 :arg1 (a / and :op1 (r / radio) :op2 (t / television)) :arg2 ('2 / ''))) :arg1 (a2 / admit-01 :polarity - :arg1 (i / idea :arg1-of (b / bad-07) :domain (a3 / appoint-01 :arg0 (p4 / person :name (n3 / name :op1 "Corbyn")) :arg1 (p5 / person :name (n4 / name :op1 "John" :op2 "McDonnell") :arg0-of (h2 / have-org-role-91 :arg1 (c2 / country :name (n5 / name :op1 "N-A")) :arg2 (c3 / chancellor))) :arg2 (p6 / person :arg0-of (h3 / have-org-role-91 :arg2 (c4 / chancellor)))))) :time (w / week :mod (t2 / this))))
(a / and :op1 (b / be-located-at-91 :arg1 (t / they) :arg2 (c / custody :mod (p / police)) :time (n / now)) :op2 (c2 / charge-05 :arg1 (t2 / they) :arg2 (c3 / commit-02 :arg0 (t3 / they) :arg1 (o / offend-03 :arg1-of (c4 / commit-02)) :prep-under (l / law :mod (n2 / new)))))
(w / want-01 :arg0 (p / person :arg0-of (h / have-rel-role-91 :arg1 (c / child) :arg2 (c2 / child))) :arg1 (a / act-02 :arg0 (c3 / child) :condition (t / thing :polarity - :arg1-of (a2 / aspire-01))))
(p / produce-01 :arg0 (p2 / person :name (n / name :op1 "Ülker") :arg1-of (p3 / produce-01 :arg0 (p4 / person) :arg2 (c / country :name (n2 / name :op1 "United" :op2 "Kingdom")) :arg1-of (c2 / cause-01 :arg0 (e / export-01 :arg0 (p5 / person) :arg2 (c3 / country) :arg1-of (c4 / cause-01 :arg0 (s / start-01 :arg0 (p6 / person))))))) :arg1 (p7 / produce-01 :arg1 (- / -rrb- :name (n3 / name :op1 (n4 / nibbles) :op2 (n5 / nibbles)) :mod (n6 / nibbles)) :location (f / factory :mod (c5 / chocolate) :location (b / brief-01 :arg1 (p8 / person)))))
(a / and :op1 (r / rationalise :arg1 (i / it) :time (a2 / always) :time (b / before :op1 (n / now) :duration (t / temporal-quantity :quant (N / N-A) :unit (y / year)))) :op2 (' / ' :arg0 (y2 / you) :arg1 (p / person :name (n2 / name :op1 "Andy" :op2 "Mulcahy") :arg0-of (e / editor :arg1 (i2 / index :mod (s / sell-01) :mod (s2 / sell-01 :arg1 (i3 / index :mod (s3 / sell-01))))))) :op3 (t2 / tell-01 :arg0 (p2 / person) :arg1 (g / guardian) :arg2 (g2 / guardian)))
(a / and :op1 (s / surmised :arg0 (p / person :arg0-of (h / have-org-role-91 :arg2 (o / official :mod (h2 / health)))) :arg1 (c / contain-01 :arg0 (p2 / product) :arg1 (a2 / and :op1 (m / methanol) :op2 (a3 / agent :arg0-of (k / kill-01)) :op3 (a4 / agent :arg0-of (k2 / kill-01))))) :op2 (l / list-01 :arg1 (a5 / alcohol :arg1-of (l2 / list-01 :arg2 (i / ingredient :arg1-of (a6 / activity-06))))))
(s / state-01 :arg1 (a / and :op1 (' / '' :arg0 (m / meet-03 :arg0 (p / person :quant 138 :arg0-of (a2 / act-01) :mod (t / theatre) :arg0-of (a3 / act-01))) :arg1 (c / call-03 :arg0 (p2 / person) :arg1 (c2 / call-03 :arg0 (p3 / person) :arg1 (p4 / peace)))) :op2 (s2 / stand-01 :arg1 (w / we) :arg2 (a4 / and :op1 (f / free-04 :arg1 (p5 / person) :arg2 (f2 / free-04)) :op2 (e / equal-01) :op3 (r / right-05 :arg1 (p6 / person) :arg2 (l / life)) :op4 (p7 / peace :mod (p8 / peace)) :op5 (p9 / peace)))) :medium (e2 / explain-01 :arg0 (p10 / person :quant 138 :arg0-of (a5 / act-01) :mod (t2 / theatre))) :arg1-of (c3 / cause-01 :arg0 (e3 / explain-01 :arg0 (p11 / person :quant 138 :arg0-of (a6 / act-01) :mod (t3 / theatre)) :arg1 (c4 / call-03 :arg0 (p12 / person) :arg1 (c5 / call-03 :arg0 (p13 / person) :arg1 (p14 / peace))))))
(s / state-01 :arg1 (a / and :op1 (' / '' :arg0 (m / meet-03 :arg0 (p / person :quant 138 :arg0-of (a2 / act-01) :mod (t / theatre) :arg0-of (a3 / act-01))) :arg1 (c / call-03 :arg0 (p2 / person) :arg1 (c2 / call-03 :arg0 (p3 / person) :arg1 (p4 / peace)))) :op2 (s2 / stand-01 :arg1 (w / we) :arg2 (a4 / and :op1 (f / free-04 :arg1 (p5 / person) :arg2 (f2 / free-04)) :op2 (e / equal-01) :op3 (r / right-05 :arg1 (p6 / person) :arg2 (l / life)) :op4 (p7 / peace :mod (p8 / peace)) :op5 (p9 / peace)))) :medium (e2 / explain-01 :arg0 (p10 / person :quant 138 :arg0-of (a5 / act-01) :mod (t2 / theatre))) :arg1-of (c3 / cause-01 :arg0 (e3 / explain-01 :arg0 (p11 / person :quant 138 :arg0-of (a6 / act-01) :mod (t3 / theatre)) :arg1 (c4 / call-03 :arg0 (p12 / person) :arg1 (c5 / call-03 :arg0 (p13 / person) :arg1 (p14 / peace))))))
(f / find-01 :arg1 (s / substance :arg1-of (f2 / find-01 :location (f3 / food :example (a / and :op1 (p / protein) :op2 (c / cellulose) :op3 (s2 / starch) :arg1-of (c2 / complete-02)) :arg0-of (u / use-01 :arg1 (t / technique :mod (t2 / this)) :arg1-of (c3 / complete-02))))))
(m / multi-sentence :snt1 (e / earn-01 :arg0 (t / they) :arg1 (m2 / money) :prep-without (t2 / trouble)) :snt2 (b / be-located-at-91 :arg1 (t3 / they) :arg2 (m3 / magazine)))
(e / enormous :domain (i / influence-01 :arg0 (b / bank :mod (c / central)) :time (y / year :mod (r / recent))))
(a / aim-01 :arg0 (w / we) :arg1 (r / read-01 :arg0 (w2 / we) :arg1 (t / thing :arg1-of (i / include-91 :arg2 (t2 / thing :arg1-of (w3 / work-12 :arg0 (y / you)))) :quant (a2 / all)) :arg1-of (c / cause-01 :arg0 (p / possible-01 :polarity - :arg1 (r2 / reply-01 :arg0 (w4 / we) :arg2 (e / everyone) :time (d / day :mod (e2 / each)))))))
(s / say-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (l / location :name (n / name :op1 "Islington" :op2 "North")) :arg2 (m / mp))) :arg1 (a / and :op1 (a2 / annoy-01 :arg1 (p2 / person :arg0-of (h2 / have-org-role-91 :arg1 (l2 / location :name (n2 / name :op1 "Islington" :op2 "North")) :arg2 (m2 / mp))) :degree (t / too)) :op2 (r / refrains :arg0 (p3 / person) :arg1 (a3 / and :op1 (' / '') :op2 (t2 / trade-01) :mod (b / both))) :arg1-of (i / instead-of-91 :arg2 (f / focus-01 :arg0 (p4 / person) :arg2 (f2 / focus-01 :arg0 (p5 / person) :arg2 (i2 / issue-02 :mod (s2 / serious) :example (a4 / and :op1 (p6 / poverty) :op2 (i3 / inequality) :op3 (t3 / thing :arg2-of (f3 / face-01 :arg0 (p7 / person) :arg1 (p8 / person :mod (y / young)))))))))))
(p / perform-02 :arg0 (c / chorus :name (n / name :op1 (n2 / naz?m)) :mod (n3 / naz?m)) :arg1 (s / songs :poss (c2 / chorus)) :time (o / organize-01 :arg1 (m / municipal :mod (s2 / sar?yer))))
(p / publish-01 :mod (o / original) :arg1-of (p2 / publish-01 :time (t / today)) :arg1-of (p3 / publish-01 :time (t2 / today)) :mod (o2 / original))
(a / and :op1 (b / build-01 :arg1 (l / level :mod (f / frustrate-01) :poss (t / trainer) :arg2-of (i / involve-01 :arg1 (p / person :name (n / name :op1 "Lidari"))))) :op2 (s / say-01 :arg0 (p2 / person :arg0-of (h / have-org-role-91 :arg2 (s2 / scratching :mod (l2 / late)))) :arg1 (p3 / possible-01 :arg1 (l3 / let-01 :arg0 (p4 / person) :arg1 (l4 / licence :poss (i2 / i)) :path (a2 / across :op1 (t2 / table))))))
(b / back-01 :arg0 (p / person :name (n / name :op1 "Tomsula")) :arg1 (p2 / person :name (n2 / name :op1 "Hayne")) :arg1-of (p3 / public-02) :location (c / conference :mod (p4 / press) :poss (p5 / person)) :mod (a / also))
(s / say-01 :arg0 (p / person :name (n / name :op1 "O'Steen")) :arg1 (c / contrast-01 :arg1 (m / meet-02 :polarity - :arg0 (p2 / person) :arg1 (p3 / person :name (n2 / name :op1 "Lamb"))) :arg2 (h / hear-01 :arg0 (p4 / person) :arg1 (a / and :op1 (i / interest-01 :arg1 (p5 / person) :arg2 (m2 / music)) :op2 (p6 / play-01 :arg0 (p7 / person) :arg1 (b / blues))))))
(h / have-condition-91 :arg1 (r / recommend-01 :arg1 (c / contrast-01 :arg1 (r2 / recommend-01 :arg1 (c2 / contrast-01 :arg1 (r3 / recommend-01 :arg1 (h2 / hand :quant (a / all)) :prep-in (b / briefs :poss (t / they))) :arg2 (b2 / be-located-at-91 :arg1 (t2 / they) :arg2 (b3 / briefs :poss (t3 / they))))))))
(s / state-01 :arg0 (p / person :name (n / name :op1 "Bülent" :op2 "Pirler") :arg0-of (h / have-org-role-91 :arg1 (g / government-organization :name (n2 / name :op1 "N-A") :mod (t / t?sk)) :arg2 (s2 / secretary :mod (g2 / general)))) :arg1 (a / and :op1 (w / work-09 :arg1 (w2 / work-01 :arg1 (p2 / period :mod (b / between :op1 (t2 / temporal-quantity :quant (N / N-A) :unit (y / year)) :op2 (t3 / temporal-quantity :quant (N2 / N-A) :unit (y2 / year))))) :arg2 (l / law :mod (t4 / this))) :op2 (a2 / add-01 :arg0 (h2 / he) :arg1 (w3 / work-09 :polarity - :arg1 (p3 / period :arg1-of (l2 / long-03) :mod (s3 / such)) :location (c / country :mod (o / other))))))
(a / averaging :arg1 (p / person :quant 349,000 :arg0-of (v / view-01)) :arg2 (p2 / person :quant 314,000 :arg0-of (v2 / view-01)) :time (s / so-far :op1 (d / date-entity :decade (N / N-A))))
(s / seem-01 :arg1 (i / it) :condition (s2 / seem-01 :arg1 (i2 / it)))
(h / hit-01 :arg0 (o / organization :name (n / name :op1 "ISIS")) :arg1 (p / person :arg0-of (o2 / oppose-01)) :arg2 (p2 / person :arg0-of (o3 / oppose-01)))
(h / hit-01 :arg0 (o / organization :name (n / name :op1 "ISIS")) :arg1 (p / person :arg0-of (o2 / oppose-01)) :arg2 (p2 / person :arg0-of (o3 / oppose-01)))
(m / multi-sentence :snt1 (s / stay-01 :arg1 (m2 / mind :source (m3 / mind :part-of (i / i)) :arg1-of (c / come-01 :arg3 (m4 / mouth :part-of (' / '' :name (n / name :op1 ('2 / '') :op2 (p / perran) :op3 (p2 / perran) :op4 (p3 / perran) :op5 (p4 / perran) :op6 ('3 / '') :op7 ('4 / '')))) :mod (m5 / most) :mod (t / this))) :location (h / here)) :snt2 (a / and :op1 (r / read-01 :mode (i2 / interrogative) :polarity - :arg0 (t2 / they) :arg1 (n2 / netizen)) :op2 (s2 / see-01 :arg0 (t3 / they) :arg1 (y / you))) :snt3 (s3 / see-01 :arg0 (t4 / they) :arg1 (y2 / you)) :snt3 (s4 / see-01 :arg0 (t5 / they) :arg1 (y3 / you)))
(m / multi-sentence :snt1 (s / stay-01 :arg1 (m2 / mind :source (m3 / mind :part-of (i / i)) :arg1-of (c / come-01 :arg3 (m4 / mouth :part-of (' / '' :name (n / name :op1 ('2 / '') :op2 (p / perran) :op3 (p2 / perran) :op4 (p3 / perran) :op5 (p4 / perran) :op6 ('3 / '') :op7 ('4 / '')))) :mod (m5 / most) :mod (t / this))) :location (h / here)) :snt2 (a / and :op1 (r / read-01 :mode (i2 / interrogative) :polarity - :arg0 (t2 / they) :arg1 (n2 / netizen)) :op2 (s2 / see-01 :arg0 (t3 / they) :arg1 (y / you))) :snt3 (s3 / see-01 :arg0 (t4 / they) :arg1 (y2 / you)) :snt3 (s4 / see-01 :arg0 (t5 / they) :arg1 (y3 / you)))
(a / and :op1 (s / say-01 :arg0 (i / i) :arg1 (a2 / and :op1 (s2 / shoot-02 :arg1 (h / he)) :op2 (k / kill-01 :arg0 (h2 / he) :arg1 (s3 / someone)))))
(c / cause-01 :arg0 (t / this) :arg1 (r / return-01 :arg1 (e / era :mod (' / '') :mod (e2 / elegance)) :time (s / season :mod (n / new))))
(c / cause-01 :arg0 (t / this) :arg1 (r / return-01 :arg1 (e / era :mod (' / '') :mod (e2 / elegance)) :time (s / season :mod (n / new))))
(a / and :op1 (a2 / announce-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (l / location :name (n / name :op1 "Burkina" :op2 "Faso")) :arg2 (m / minister :mod (p2 / prime)))) :arg1 (p3 / person :name (n2 / name :op1 "Paul" :op2 "Kaba" :op3 "Thieba") :arg0-of (h2 / have-org-role-91 :arg1 (c / cabinet) :arg2 (m2 / minister :mod (p4 / prime)))) :time (b / before :op1 (n3 / now) :quant (t / temporal-quantity :quant (N / N-A) :unit (d / day)))) :op2 (a3 / announce-01 :arg0 (p5 / person :name (n4 / name :op1 "Roch" :op2 "Marc" :op3 "Christian" :op4 "Kabore") :arg0-of (h3 / have-org-role-91 :arg2 (p6 / president))) :arg1 (p7 / position-02 :arg0 (p8 / person :arg0-of (h4 / have-org-role-91 :arg2 (m3 / minister :mod (d2 / defense))))) :mod (a4 / also)))
(c / complain-01 :arg0 (p / person :name (n / name :op1 "Deng")) :arg1 (h / hurt-01 :arg0 (h2 / head :part-of (p2 / person)) :arg1 (c2 / conscious :polarity -) :time (t / then)) :time (e / eventual))
(s / say-01 :arg0 (p / person :name (n / name :op1 "Mete" :op2 "Gümürhan")) :arg1 (c / contrast-01 :arg1 (e / expect-01 :polarity - :arg0 (p2 / person) :arg1 (s2 / select-01 :arg1 (p3 / person :mod (y / young) :arg1-of (s3 / select-01 :arg2 (f / festival :mod (f2 / film :mod (b / berlin))))))) :arg2 (s4 / surprise-01 :arg1 (w / we) :arg2 (s5 / select-01 :arg1 (w2 / we) :arg2 (' / '' :location (c2 / city :name (n2 / name :op1 "Berlin")))))))
(c / contrast-01 :arg1 (p / possible-01 :arg1 (s / see-01 :arg0 (a / and :op1 (p2 / person :quant (c2 / couple)) :op2 (p3 / person :name (n / name :op1 "Lyth"))) :arg1 (e / extend-01 :arg1 (p4 / person)))) :arg2 (c3 / control-01 :arg0 (p5 / person) :arg1 (d / destiny :poss (p6 / person))))
(u / use-01 :arg1 (a / and :op1 (g / good) :op2 (s / service) :source (a2 / and :op1 (c / company :mod (t / turkish)) :op2 (s2 / service))) :arg2 (c2 / case-03 :location-of (p / possible-01 :polarity - :arg1 (p2 / provide-01 :arg0 (a3 / and) :arg1 (s3 / source :source (a4 / and :op1 (c3 / country :name (n / name :op1 "Turkey")) :op2 (p3 / produce-01 :mod (d / domestic) :location (c4 / country :name (n2 / name :op1 "Russia"))))) :arg2 (m / monetary-quantity :arg2-of (c5 / cost-01) :mod (a5 / additional) :mod (s4 / serious))))))
(m / multi-sentence :snt1 (a / and :op1 (w / want-01 :polarity - :arg0 (p / person :arg0-of (w2 / want-01 :arg1 (o / outward-looking :arg0 (p2 / person) :arg1 (c / country :name (n / name :op1 "Britain") :location (i / inside :op1 (t / tent :mod (o2 / organization :name (n2 / name :op1 "EU"))))) :arg0-of (h / have-org-role-91 :arg1 (t2 / tents :mod (o3 / organization :name (n3 / name :op1 "EU"))) :arg2 (p3 / pal))))) :arg1 (w3 / we) :manner (a2 / alone)) :op2 (s / say-01 :arg0 (p4 / person) :arg1 (s2 / suggest-01 :arg0 (p5 / person) :arg1 (g / get-22 :arg0 (a3 / and :op1 (p6 / person :arg0-of (h2 / have-org-role-91 :arg2 (m2 / minister :mod (s3 / short-sighted :degree (m3 / more))))) :op2 (p7 / person :arg0-of (h3 / have-org-role-91 :arg2 (o4 / official)) :location (c2 / capitals :quant (s4 / some)))) :arg1 (p8 / point :location-of (c3 / care-01 :polarity - :arg0 (a4 / and) :arg1 (s5 / stay-01 :arg1 (a5 / and)))))))) :snt2 (o5 / obligate-01 :arg1 (a6 / and :op1 (p9 / person :arg0-of (h4 / have-org-role-91 :arg2 (m4 / minister))) :op2 (p10 / person :arg0-of (h5 / have-org-role-91 :arg2 (o6 / official)))) :arg2 (p11 / point)))
(b / bring-01 :arg1 (r / refugee :quant 105) :arg2 (p / port :mod (y / yal?kavak)))
(a / and :op1 (d / develop-02 :arg1 (p / person :name (n / name :op1 "Moeen" :op2 "Ali")) :prep-as (a2 / and :op1 (s / spinner) :op2 (p2 / person :name (n2 / name :op1 "Adil" :op2 "Rashid")))) :op2 (r / represent-01 :arg0 (p3 / person) :arg1 (o / option :mod (a3 / attack-01))) :op3 (r2 / represent-01 :arg0 (p4 / person) :arg1 (o2 / option :mod (a4 / attack-01))))
(a / and :op1 (s / steers :arg0 (i / it) :arg1 (y / you)) :op2 (h / help-01 :arg0 (y2 / you) :arg1 (y3 / you) :arg2 (s2 / scout :arg0 (y4 / you) :arg1 (p / person :arg1-of (l / like-01 :polarity - :arg0 (y5 / you) :arg1-of (c / cause-01 :arg0 (a2 / and :op1 (f / fire :arg1 (y6 / you)) :op2 (d / dispensing :arg1 (y7 / you)))))))))
(s / say-01 :arg0 (h / he) :arg1 (i / important :domain (a / and :op1 (f / find-01 :arg0 (r / radio :quant 3) :arg1 (a2 / and :op1 (m / music :mod (n / new)) :op2 (t / thing :mod (n2 / new) :arg1-of (t2 / think-01 :arg0 (i2 / i))))) :op2 (t3 / thing :arg1-of (s2 / say-01 :arg0 (h2 / he)) :mod (n3 / new)) :mod (a3 / also))) :mod (a4 / also))
(s / suffer-01 :arg0 (p / person :name (n / name :op1 "Moreno")) :arg1 (l / leg :mod (b / break-01)) :time (p2 / play-01 :arg0 (p3 / person) :arg2 (c / country :name (n2 / name :op1 "Mexico")) :prep-against (c2 / country :name (n3 / name :op1 "Holland") :location (c3 / cup :quant 2014 :mod (w / world)))))
(c / commemorate :arg0 (p / person :name (n / name :op1 "Hikmet" :op2 "Ran") :arg1-of (k / know-02 :arg2 (p2 / park :name (n2 / name :op1 "N-A") :mod (h / hometown :poss (p3 / person))))) :arg1 (e / event :mod (h2 / happy) :time (d / date-entity :dayperiod (N / N-A))) :arg2 (b / birthday :name (n3 / name :op1 (h3 / happy)) :mod (h4 / happy)) :time (d2 / date-entity :dayperiod (N2 / N-A)))
(v / video :mod (f / fair) :mod (a / anti-arms) :poss (o / organization :name (n / name :op1 "Watch" :op2 "Amnesty" :op3 "International")))
(c / contrast-01 :arg1 (a / admit-01 :arg0 (s / she) :arg1 (p / possible-01 :arg1 (h / have-03 :arg0 (p2 / person :mod (c2 / country :name (n / name :op1 "N-A"))) :arg1 (g / good :degree (m / more))))) :arg2 (t / think-01 :arg0 (s2 / she) :arg1 (w / wrong-02 :arg1 (d / do-02 :arg0 (i / i) :arg1 (t2 / thing :arg1-of (d2 / do-02 :arg0 (i2 / i)))) :arg2 (i3 / i) :mod (s3 / still))))
(c / change-01 :arg1 (s / situation :mod (t / this)) :time (n / now))
(s / say-01 :arg0 (p / person :name (n / name :op1 "Knowles")) :arg1 (w / want-01 :arg0 (s2 / she) :arg1 (h / help-01 :arg0 (s3 / she) :arg1 (p2 / person :mod (o / other))) :time (a / always)))
(m / mr :arg0 (p / person :name (n / name :op1 "Mugabe") :arg0-of (l / lead-02 :arg1 (c / continent :name (n2 / name :op1 "Africa")) :mod (o / old :degree (m2 / most)))) :arg1 (s / step-01 :arg2 (l2 / lead-01 :arg0 (p2 / person))) :time (e / early :op1 (y / year :mod (t / this)) :degree (m3 / more)))
(h / have-org-role-91 :arg0 (p / person :name (n / name :op1 "Prentiss")) :arg1 (c / company :mod (v / various)) :arg2 (n2 / nurse))
(s / say-01 :arg0 (p / person :arg0-of (r / read-01) :quant (m / many)) :arg1 (a / and :op1 (w / write-01 :polarity - :arg0 (c / country :name (n / name :op1 "France")) :medium (c2 / column)) :op2 (a2 / and :op1 (v / value :arg1-of (l / lose-02) :poss (c3 / country)) :op2 (v2 / value :arg1-of (l2 / lose-02) :poss (c4 / country)) :domain (t / this))))
(a / adrift :arg1 (b / boat) :arg2 (c / coast :mod (l / location :name (n / name :op1 "Psemiros" :op2 "Island"))) :arg1-of (c2 / cause-01 :arg0 (a2 / and :op1 (s / storm) :op2 (c3 / current) :time (c4 / current))) :arg1-of (c5 / cause-01 :arg0 (a3 / and :op1 (d / discover-01 :arg1 (r / refugee :quant 13 :arg1-of (d2 / discover-01))) :op2 (t / try-01 :arg0 (r2 / refugee :mod (c6 / country :name (n2 / name :op1 "Greece"))) :arg1 (g / get-05 :arg1 (r3 / refugee) :arg2 (i / island :name (n3 / name :op1 "N-A")))))))
(h / have-concession-91 :arg1 (s / stress-01 :arg0 (p / person) :arg1 (s2 / solve-01 :arg1 (i / it) :duration (t / temporary) :mod (o / only))) :arg2 (p2 / praise-01 :arg0 (p3 / person :name (n / name :op1 "Dalai" :op2 "Lama")) :arg1 (t2 / try-01 :arg0 (c / country :name (n2 / name :op1 "Germany")) :arg1 (d / deal-01 :arg0 (c2 / country) :arg2 (c3 / crisis)))))
(c / choose-01 :arg0 (j / jury :arg1-of (i / include-91 :arg2 (j2 / jury :quant 2015 :arg1-of (s / sponsor-01 :arg0 (j3 / jury :quant 2015 :arg1-of (s2 / sponsor-01 :arg0 (j4 / jury :quant 2015 :arg1-of (i2 / include-91 :arg2 (j5 / jury :quant 2015))))))))) :arg1 (n / nominees) :time (a / after :op1 (t / that)) :arg1-of (c2 / cause-01 :arg0 (c3 / consisting :arg0 (j6 / jury :quant 2015 :arg1-of (s3 / sponsor-01 :arg0 (j7 / jury :quant 2015))) :arg1 (a2 / and :op1 (p / person :name (n2 / name :op1 "Mehmet" :op2 "Y.Y?lmaz")) :op2 (p2 / person :name (n3 / name :op1 "Nihat" :op2 "Odaba")) :op3 (p3 / person :name (n4 / name :op1 "Aret" :op2 "Vartanyan")) :op4 (p4 / person :name (n5 / name :op1 "Leyla" :op2 "Alaton")) :op5 (p5 / person :name (n6 / name :op1 "Esin" :op2 "Övet")) :op6 (p6 / person :name (n7 / name :op1 "Ahmet" :op2 "Güne?tekin")) :op7 (p7 / person :name (n8 / name :op1 "Ahmet" :op2 "Güne?tekin")) :op8 (e / et-cetera)))) :time (a3 / after :op1 (t2 / that)))
(n / note-01 :arg0 (t / they) :arg1 (w / wear-01 :arg0 (a / and :op1 (j / journalist) :op2 (p / person :arg0-of (w2 / write-01)) :op3 (c / company)) :arg1 (f / free-04 :arg1 (s / society :mod (t2 / turkish)) :quant (a2 / all))))
(p / possible-01 :arg1 (r / respond-01 :arg0 (w / we) :arg1 (n / need-01 :arg1 (p2 / person :arg0-of (c / consume-01)) :location (a / area :arg1-of (d / differ-02) :source (c2 / city :name (n2 / name :op1 "Dubai")) :destination (c3 / city :name (n3 / name :op1 "Moscow"))))))
(s / say-01 :arg0 (p / person :name (n / name :op1 "Peter" :op2 "Szijjarto") :arg0-of (h / have-org-role-91 :arg1 (p2 / person :arg0-of (h2 / have-org-role-91 :arg2 (m / minister :mod (f / foreign)))) :arg2 (m2 / minister :mod (f2 / foreign)))) :arg1 (p3 / plan-01 :arg0 (c / country :poss (h3 / he)) :arg1 (b / build-01 :arg0 (c2 / country) :arg1 (f3 / fence :mod (r / razor-wire)) :location (a / along :op1 (b2 / border :poss (c3 / country))) :purpose (s2 / stop-01 :arg0 (c4 / country) :arg1 (f4 / flow-01 :arg1 (p4 / person :arg0-of (s3 / specialize-01 :arg1 (s4 / stop-01 :arg0 (c5 / country) :arg1 (f5 / flow-01 :arg1 (p5 / person :arg0-of (u / use-01))))))))) :mod (a2 / also)) :time (m3 / meanwhile) :mod (a3 / also))
(c / cause-01 :arg0 (a / absence :domain (a2 / absence :poss (p / portrayals :arg1-of (r / resemble-01)))) :arg1 (d / desperate :domain (a3 / absence :domain (a4 / absence :arg1-of (r2 / resemble-01)) :arg1-of (m / mean-01 :arg2 (n / need-01 :arg0 (m2 / man) :arg1 (o / open-up-03 :arg0 (m3 / man) :arg1 (m4 / male :mod (y / young)) :time (a5 / after :op1 (n2 / now) :quant (t / temporal-quantity :quant (N / N-A) :unit (y2 / year)))))) :mod (p2 / particular))))
(i / investigate-01 :arg0 (p / police) :arg1 (p2 / play-02 :mode (i2 / interrogative) :arg0 (m / medicine :name (n / name :op1 (' / '') :op2 (p3 / potenay) :op3 ('2 / ''))) :arg1 (r / role :mod (a / any) :mod (d / die-01 :arg1 (s / she)))) :time (n2 / now))
(m / multi-sentence :snt1 (o / obligate-01 :arg1 (a / and :op1 (p / person :name (n / name :op1 "Kokkinakis")) :op2 (p2 / person :name (n2 / name :op1 "Ryan" :op2 "Harrison") :arg0-of (h / have-org-role-91 :arg2 (p3 / president :mod (v / vice))))) :arg2 (s / separate-01 :arg0 (a2 / and :op1 (p4 / person :name (n3 / name :op1 "Wawrinka") :arg0-of (h2 / have-org-role-91 :arg2 (' / ''))) :op2 (p5 / person :name (n4 / name :op1 "Wawrinka") :arg0-of (h3 / have-org-role-91 :arg2 ('2 / '')))) :arg1 (p6 / person :name (n5 / name :op1 "Wawrinka") :arg0-of (h4 / have-org-role-91 :arg2 ('3 / ''))))) :snt2 (a3 / and :op1 (r / recommend-01 :arg1 (d / decked :arg0 (p7 / person :arg0-of (h5 / have-rel-role-91 :arg1 (p8 / person) :arg2 (k / kid))) :arg1 (p9 / person :name (n6 / name :op1 "Kyrgios")))) :op2 (r2 / recommend-01 :arg1 (d2 / decker :arg0 (i / i) :arg1 (k2 / kid)))))
(w / wary)
(m / multi-sentence :snt1 (p / possible-01 :arg1 (a / and :op1 (d / dündar :arg0 (p2 / photograph-01 :arg0 (j / journalist :arg0-of (p3 / photograph-01 :arg1 (j2 / journalist :arg1-of (a2 / arrest-01))))) :arg1 (p4 / possible-01 :arg1 (d2 / dündar :arg0 (p5 / photograph-01 :arg0 (j3 / journalist) :arg1 (j4 / journalist))))) :op2 (p6 / possible-01 :arg1 (b / burn-01 :polarity - :arg1 (t / text)) :condition (b2 / burn-01 :polarity - :arg1 (p7 / photograph-01))))) :snt2 (v / vanquish :arg0 (a3 / and :op1 (b3 / banner :mod (p8 / peace :location (c / country :name (n / name :op1 "N-A")))) :op2 (b4 / banner :mod (p9 / peace :location (c2 / country :name (n2 / name :op1 "N-A")))) :op3 (b5 / banner :topic (p10 / peace :location (c3 / country)))) :arg1 (a4 / attend-02 :arg1 (a5 / and) :location (c4 / city))))
(s / send-01 :arg0 (i / issue-02 :arg0 (r / right)) :arg1 (t / thing :arg2-of (p / price-01 :arg1 (s2 / share :poss (o / organization :name (n / name :op1 "Glencore"))))) :arg2 (t2 / top :part-of (m / market :mod (s3 / stock) :location (c / city :name (n2 / name :op1 "London")))) :time (e / early :op1 (m2 / morning :mod (e2 / early))))
(s / send-01 :arg0 (i / issue-02 :arg0 (r / right)) :arg1 (t / thing :arg2-of (p / price-01 :arg1 (s2 / share :poss (o / organization :name (n / name :op1 "Glencore"))))) :arg2 (t2 / top :part-of (m / market :mod (s3 / stock) :location (c / city :name (n2 / name :op1 "London")))) :time (e / early :op1 (m2 / morning :mod (e2 / early))))
(f / fenerbahçe :arg1 (v / veteran))
(p / possible-01 :arg1 (m / meteor))
(m / multi-sentence :snt1 (w / want-01 :arg0 (t / team :mod (w2 / white-black)) :arg1 (a / and :op1 (w3 / win-01 :arg0 (t2 / team) :arg1 (s / series) :arg2 (m2 / match-03 :quant 5)) :op2 (m3 / maintain-01 :arg0 (t3 / team) :arg1 (l / lead-02 :arg0 (t4 / team)))) :time (b / before :op1 (b2 / break-up-08 :arg1 (o / organization :name (n / name :op1 "Super" :op2 "League")) :mod (m4 / mid-season))) :time (b3 / before :op1 (b4 / break-up-08 :arg1 (o2 / organization) :mod (m5 / mid-season)))) :snt2 (y / yurdu :mode (i / interrogative) :arg0 (p / person :arg0-of (s2 / support-01 :arg1 (p2 / person))) :location (i2 / in-front-of :op1 (p3 / person :arg0-of (s3 / support-01 :arg1 (p4 / person))))))
(a / and :op1 (p / possible-01 :arg1 (n / need-01 :arg0 (t / they) :arg1 (a2 / and :op1 (t2 / take-out-11 :arg0 (t3 / they) :arg1 (l / licence :poss (i / i))) :op2 (p2 / push-01 :arg0 (t4 / they) :arg1 (i2 / i) :arg2 (a3 / away))))) :op2 (a4 / and :op1 (p3 / push-01 :arg0 (t5 / they) :arg1 (i3 / i) :arg2 (a5 / away)) :op2 (p4 / push-01 :arg0 (t6 / they) :arg1 (i4 / i) :arg2 (a6 / away))) :op3 (d / doubt-01 :polarity - :arg0 (i5 / i) :arg1 (p5 / possible-01 :arg1 (m / make-02 :arg0 (t7 / they) :arg1 (t8 / think-01 :arg0 (t9 / they) :arg1 (t10 / that)) :time (n2 / now)))))
(a / and :op1 (l / labelled :arg1 (p / person :mod (c / country :name (n / name :op1 "Argentina"))) :arg2 (t / take-01 :arg0 (p2 / person) :arg1 (o / organization :name (n2 / name :op1 "PSG")) :arg4 (l2 / level :mod (n3 / next) :location (c2 / continent :name (n4 / name :op1 "Europe"))) :time (m / month :mod (l3 / last) :time-of (s / sign-01 :arg1 (p3 / person) :arg2 (o2 / organization :name (n5 / name :op1 "Manchester" :op2 "United")) :time (m2 / month :mod (l4 / last)))))) :op2 (i / indicate-01 :arg0 (p4 / person) :arg1 (c3 / cause-01 :arg0 (a2 / amr-unknown) :arg1 (r / run-02 :arg0 (p5 / person :name (n6 / name :op1 "Marco" :op2 "Verratti")) :location (b / behind :op1 (d / defend-01 :mod (l5 / location :name (n7 / name :op1 "Malmo")))) :time (b2 / before :op1 (a3 / angling :arg1 (a4 / and :op1 (p6 / person :name (n8 / name :op1 "Johan" :op2 "Wiland") :arg1-of (f / finish-01 :arg1-of (b3 / beautiful-02))) :op2 (p7 / person :name (n9 / name :op1 "Johan" :op2 "Wiland") :location (n10 / net)))))))))
(a / and :op1 (s / show-01 :arg0 (r / report) :arg1 (f / fall-01 :arg1 (m / monetary-quantity :arg2-of (p / price-01 :arg1 (o / oil))) :arg4 (l / level :arg1-of (l2 / low-04 :degree (m2 / most)) :poss (t / thing)) :arg4 (l3 / level :arg1-of (l4 / low-04 :degree (m3 / more)) :poss (t2 / thing)) :arg4 (l5 / level :arg1-of (l6 / low-04 :degree (m4 / more)) :poss (t3 / thing)) :arg4 (l7 / level :arg1-of (l8 / low-04 :degree (m5 / more))) :arg4 (l9 / level :arg1-of (l10 / low-04 :degree (m6 / more)) :poss (t4 / thing)) :time (y / year :mod (l11 / last)))) :op2 (i / include-01 :arg1 (s2 / state-01 :arg1 (h / have-03 :arg0 (b / budget :poss (c / company)) :arg1 (t5 / thing :arg1-of (s3 / state-01 :arg0 (c2 / company))) :manner (d / dramatic)))))
(b / byline-91 :arg0 (p / person :name (n / name :op1 "Rupert" :op2 "Steiner") :arg0-of (h / have-org-role-91 :arg1 (c / city :mod (c2 / chief)) :arg2 (c3 / correspondent))) :arg2 (m / mail :mod (d / day)))
(b / bury-01 :arg1 (s / she) :arg2 (l / location :name (n / name :op1 "Mersin") :mod (h / hometown :poss (s2 / she))))
(n / number :time (r / recent) :mod (s / some) :arg0-of (s2 / suggest-01 :arg1 (p / phase :polarity - :arg1-of (p2 / pass-03) :domain (p3 / phase :mod (e / estate :mod (r2 / real))))) :location (h / here))
(a / and :op1 (t / take-01 :arg0 (d / data :name (n / name :op1 (m / mortality))) :arg1 (t2 / time :arg1-of (l / long-03)) :purpose (s / show-up-02 :arg1 (d2 / data))) :op2 (s2 / say-01 :arg0 (i / i) :arg1 (c / cease-01 :arg0 (p / person :name (n2 / name :op1 "Robin" :op2 "Blackstone") :arg0-of (h / have-org-role-91 :arg2 (p2 / person :arg1-of (e / expert-01 :arg2 (s3 / surgery-01)))) :arg0-of (h2 / have-org-role-91 :arg2 (p3 / person :arg1-of (e2 / expert-01 :arg2 (s4 / surgery-01)))) :arg0-of (h3 / have-org-role-91 :arg2 (p4 / person :arg1-of (e3 / expert-01 :arg2 (s5 / surgery-01)))) :arg0-of (h4 / have-org-role-91 :arg2 (p5 / person :arg1-of (e4 / expert-01 :arg2 (s6 / surgery-01)))) :arg0-of (h5 / have-org-role-91 :arg2 (p6 / person :arg1-of (e5 / expert-01 :arg2 (s7 / surgery-01)))) :arg0-of (h6 / have-org-role-91 :arg2 (p7 / person :arg1-of (e6 / expert-01 :arg2 (s8 / surgery-01)))) :arg0-of (h7 / have-org-role-91 :arg2 (p8 / person :arg1-of (e7 / expert-01 :arg2 (s9 / surgery-01)))) :arg0-of (h8 / have-org-role-91 :arg2 (p9 / person :arg1-of (e8 / expert-01 :arg2 (s10 / surgery-01)))) :arg0-of (h9 / have-org-role-91 :arg2 (p10 / person :arg1-of (e9 / expert-01 :arg2 (s11 / surgery-01)))) :arg0-of (h10 / have-org-role-91 :arg2 (p11 / person :arg1-of (e10 / expert-01 :arg2 (s12 / surgery-01))))))))
(a / and :op1 (t / take-01 :arg0 (d / data :name (n / name :op1 (m / mortality))) :arg1 (t2 / time :arg1-of (l / long-03)) :purpose (s / show-up-02 :arg1 (d2 / data))) :op2 (s2 / say-01 :arg0 (i / i) :arg1 (c / cease-01 :arg0 (p / person :name (n2 / name :op1 "Robin" :op2 "Blackstone") :arg0-of (h / have-org-role-91 :arg2 (p2 / person :arg1-of (e / expert-01 :arg2 (s3 / surgery-01)))) :arg0-of (h2 / have-org-role-91 :arg2 (p3 / person :arg1-of (e2 / expert-01 :arg2 (s4 / surgery-01)))) :arg0-of (h3 / have-org-role-91 :arg2 (p4 / person :arg1-of (e3 / expert-01 :arg2 (s5 / surgery-01)))) :arg0-of (h4 / have-org-role-91 :arg2 (p5 / person :arg1-of (e4 / expert-01 :arg2 (s6 / surgery-01)))) :arg0-of (h5 / have-org-role-91 :arg2 (p6 / person :arg1-of (e5 / expert-01 :arg2 (s7 / surgery-01)))) :arg0-of (h6 / have-org-role-91 :arg2 (p7 / person :arg1-of (e6 / expert-01 :arg2 (s8 / surgery-01)))) :arg0-of (h7 / have-org-role-91 :arg2 (p8 / person :arg1-of (e7 / expert-01 :arg2 (s9 / surgery-01)))) :arg0-of (h8 / have-org-role-91 :arg2 (p9 / person :arg1-of (e8 / expert-01 :arg2 (s10 / surgery-01)))) :arg0-of (h9 / have-org-role-91 :arg2 (p10 / person :arg1-of (e9 / expert-01 :arg2 (s11 / surgery-01)))) :arg0-of (h10 / have-org-role-91 :arg2 (p11 / person :arg1-of (e10 / expert-01 :arg2 (s12 / surgery-01))))))))
(a / and :op1 (t / take-01 :arg0 (d / data :name (n / name :op1 (m / mortality))) :arg1 (t2 / time :arg1-of (l / long-03)) :purpose (s / show-up-02 :arg1 (d2 / data))) :op2 (s2 / say-01 :arg0 (i / i) :arg1 (c / cease-01 :arg0 (p / person :name (n2 / name :op1 "Robin" :op2 "Blackstone") :arg0-of (h / have-org-role-91 :arg2 (p2 / person :arg1-of (e / expert-01 :arg2 (s3 / surgery-01)))) :arg0-of (h2 / have-org-role-91 :arg2 (p3 / person :arg1-of (e2 / expert-01 :arg2 (s4 / surgery-01)))) :arg0-of (h3 / have-org-role-91 :arg2 (p4 / person :arg1-of (e3 / expert-01 :arg2 (s5 / surgery-01)))) :arg0-of (h4 / have-org-role-91 :arg2 (p5 / person :arg1-of (e4 / expert-01 :arg2 (s6 / surgery-01)))) :arg0-of (h5 / have-org-role-91 :arg2 (p6 / person :arg1-of (e5 / expert-01 :arg2 (s7 / surgery-01)))) :arg0-of (h6 / have-org-role-91 :arg2 (p7 / person :arg1-of (e6 / expert-01 :arg2 (s8 / surgery-01)))) :arg0-of (h7 / have-org-role-91 :arg2 (p8 / person :arg1-of (e7 / expert-01 :arg2 (s9 / surgery-01)))) :arg0-of (h8 / have-org-role-91 :arg2 (p9 / person :arg1-of (e8 / expert-01 :arg2 (s10 / surgery-01)))) :arg0-of (h9 / have-org-role-91 :arg2 (p10 / person :arg1-of (e9 / expert-01 :arg2 (s11 / surgery-01)))) :arg0-of (h10 / have-org-role-91 :arg2 (p11 / person :arg1-of (e10 / expert-01 :arg2 (s12 / surgery-01))))))))
(t / try-01 :arg0 (p / person :mod (c / country :name (n / name :op1 "N-A"))) :arg1 (p2 / protect-01 :arg0 (p3 / person) :arg1 (s / store :name (n2 / name :op1 (i / iga)) :poss (p4 / person)) :arg2 (o / onslaught :poss (o2 / organization) :location (a / and :op1 (p5 / peninsula :name (n3 / name :op1 "N-A")) :op2 (f / forth)))))
(m / multi-sentence :snt1 (l / location :name (n / name :op1 "BOLU")) :snt2 (b / be-located-at-91 :arg1 (a / and :op1 (h / house) :op2 (o / office :mod (u / university))) :arg2 (a2 / and :op1 (h2 / house) :op2 (o2 / office :mod (u2 / university)) :quant (m2 / multiple :op1 2) :source (o3 / organization :name (n2 / name :op1 "Faculty" :op2 "of" :op3 "Economics" :op4 "and" :op5 "Administrative" :op6 "Sciences") :source (p / person :name (n3 / name :op1 "Abant"))))))
(s / say-01 :arg0 (p / person :name (n / name :op1 "Ahmet" :op2 "Davuto?lu") :arg0-of (h / have-org-role-91 :arg1 (c / cabinet) :arg2 (m / minister :mod (p2 / prime)))) :arg1 (c2 / contrast-01 :arg1 (e / express-01 :arg0 (p3 / person :quant 1 :arg1-of (i / include-91 :arg2 (p4 / person :arg0-of (h2 / have-org-role-91 :arg1 (c3 / cabinet) :arg2 (m2 / member)))) :arg0-of (h3 / have-org-role-91 :arg1 (c4 / cabinet) :arg2 (m3 / member))) :arg1 (s2 / support-01 :arg0 (p5 / person) :arg1 (f / free-04 :arg1 (p6 / press)))) :arg2 (s3 / state-01 :arg1 (f2 / follow-01 :polarity - :arg1 (r / remark-01 :mod (t / this))))) :time (w / week :mod (n2 / next)))
(c / contrast-01 :arg1 (c2 / curvy :polarity - :domain (p / person :name (n / name :op1 "Kate" :op2 "Moss")) :mod (e / either)) :arg2 (b / become-01 :arg1 (s / she) :arg2 (n2 / name :mod (b2 / big :degree (m / most)) :location (i / industry :arg1-of (s2 / standard-02)))))
(i / imply-01 :arg0 (p / person :name (n / name :op1 "Juncker")) :arg1 (p2 / play-02 :arg0 (p3 / person :name (n2 / name :op1 "Renzi")) :arg1 (o / opine-01 :arg0 (p4 / public) :arg1-of (i2 / internal-02))))
(m / medicine :domain (t / this))
(a / and :op1 (p / plan-01 :arg1-of (e / emerge-01)) :op2 (p2 / plan-01 :arg1 (h / hobby)))
FAILED_TO_PARSE#Two concepts in a row.
(c / concern-01 :polarity - :arg0 (h / health :poss (e / economy :mod (g / globe))) :arg1 (c2 / concern-01 :quant 1 :arg0 (e2 / economy :poss (g2 / government-organization :name (n / name :op1 "Fed"))) :mod (p / primary)) :arg0-of (c3 / cause-01 :arg1 (r / recommend-01 :arg1 (f / factored :polarity - :arg1 (h2 / health) :arg2 (d / decision-making :arg1 (h3 / health))))))
(a / and :op2 (m / make-02 :polarity - :arg0 (k / kefir) :arg1 (g / gain-02 :arg0 (y / you) :arg1 (w / weight))))
(s / say-01 :arg0 (p / person :name (n / name :op1 "Thanasi" :op2 "Kokkinakis") :arg0-of (h / have-org-role-91 :arg1 (p2 / person :name (n2 / name :op1 "Nick" :op2 "Kyrgios") :arg0-of (h2 / have-org-role-91 :arg2 (p3 / president))) :arg2 (p4 / president :mod (v / vice)))) :arg1 (a / and :op1 (d / damage-01 :arg1 (s2 / storm :time (r / recent) :location (s3 / storm :time (r2 / recent)) :location (s4 / storm :time (r3 / recent)))) :op2 (d2 / deserve-01 :arg0 (p5 / person) :arg1 (k / kudos))))
(s / say-01 :arg0 (p / person :name (n / name :op1 "Thanasi" :op2 "Kokkinakis") :arg0-of (h / have-org-role-91 :arg1 (p2 / person :name (n2 / name :op1 "Nick" :op2 "Kyrgios") :arg0-of (h2 / have-org-role-91 :arg2 (p3 / president))) :arg2 (p4 / president :mod (v / vice)))) :arg1 (a / and :op1 (d / damage-01 :arg1 (s2 / storm :time (r / recent) :location (s3 / storm :time (r2 / recent)) :location (s4 / storm :time (r3 / recent)))) :op2 (d2 / deserve-01 :arg0 (p5 / person) :arg1 (k / kudos))))
(s / say-01 :arg0 (a / and :op1 (p / person :name (n / name :op1 "McKee")) :op2 (p2 / person :name (n2 / name :op1 "Capewell"))) :arg1 (s2 / sponsor-01 :arg0 (m / meet-03 :quant 1 :arg1-of (i / include-91 :arg2 (m2 / meet-03))) :arg1 (o / organization :name (n3 / name :op1 "EuroSwiss" :op2 "Health") :arg1-of (c / call-01 :arg2 (f / fund-01 :arg0 (o2 / organization :name (n4 / name :op1 "British" :op2 "American" :op3 "Tobacco")) :arg1 (s3 / study-01 :arg0-of (d / depend-01 :polarity -))) :time (p3 / previous)))))
(r / report-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (o / organization :name (n / name :op1 "Science" :op2 "and" :op3 "Literature" :op4 "Faculty" :op5 "of" :op6 "Bingöl" :op7 "University")) :arg2 (m / member)) :arg0-of (h2 / have-org-role-91 :arg1 (o2 / organization) :arg2 (m2 / member)) :arg0-of (h3 / have-org-role-91 :arg1 (o3 / organization) :arg2 (m3 / member)) :arg0-of (h4 / have-org-role-91 :arg1 (o4 / organization) :arg2 (m4 / member)) :arg0-of (h5 / have-org-role-91 :arg1 (o5 / organization) :arg2 (m5 / member)) :arg0-of (h6 / have-org-role-91 :arg1 (o6 / organization) :arg2 (m6 / member)) :arg0-of (h7 / have-org-role-91 :arg1 (o7 / organization) :arg2 (m7 / member)) :arg0-of (h8 / have-org-role-91 :arg1 (o8 / organization) :arg2 (m8 / member)) :arg0-of (h9 / have-org-role-91 :arg1 (o9 / organization) :arg2 (m9 / member)) :arg0-of (h10 / have-org-role-91 :arg1 (o10 / organization) :arg2 (m10 / member)) :arg0-of (h11 / have-org-role-91 :arg1 (o11 / organization) :arg2 (m11 / member)) :arg0-of (h12 / have-org-role-91 :arg1 (o12 / organization) :arg2 (m12 / member)) :arg0-of (h13 / have-org-role-91 :arg1 (o13 / organization) :arg2 (m13 / member)) :arg0-of (h14 / have-org-role-91 :arg1 (o14 / organization) :arg2 (m14 / member)) :arg0-of (h15 / have-org-role-91 :arg1 (o15 / organization) :arg2 (m15 / member))))
(m / multi-sentence :snt1 (e / express-01 :arg0 (p / person :arg0-of (u / use-01 :arg1 (p2 / person :arg0-of (u2 / use-01)))) :arg1 (a / anger-01 :arg0 (w / write-01 :arg0 (p3 / person) :arg1 (p4 / product :name (n / name :op1 "N-A"))) :arg1 (a2 / anger-01 :arg0 (w2 / write-01 :arg0 (p5 / person)) :arg1 (w3 / write-01 :arg0 (p6 / person) :arg1 (p7 / product :name (n2 / name :op1 "N-A")))))) :snt2 (c / cause-01 :arg1 (p8 / possible-01 :arg1 (e2 / explain-01 :arg0 (h / he) :arg1 (d / diversity) :arg2 (s / she) :degree (s2 / so)))))
(a / and :op1 (f / fight-01 :arg0 (h / heart :part-of (o / organization :name (n / name :op1 "SFA"))) :arg1 (a2 / and :op1 (c / charge-01 :arg0 (p / person :name (n2 / name :op1 "Neilson"))) :op2 (w / wary :poss (p2 / person :name (n3 / name :op1 "Warburton")) :topic (t / thing :instrument-of (d / deter-01))))) :op2 (d2 / disrupt-01 :arg0 (p3 / person :name (n4 / name :op1 "Warburton")) :arg1 (t2 / thing :arg2-of (c2 / characteristic-02 :arg1 (p4 / person)))))
(s / share-01 :arg0 (p / person :name (n / name :op1 "Ince")) :arg1 (m / message :topic (t / twitter)) :arg2 (p2 / possible-01 :arg1 (g / get-01 :arg0 (s2 / source :source (o / office :mod (c / central))) :arg1 (d / detail :topic (c2 / converse-01 :arg0 (p3 / person :arg0-of (h / have-org-role-91 :arg1 (c3 / city :name (n2 / name :op1 "Istanbul")) :arg2 (m2 / minister :mod (d2 / deputy) :mod (d3 / deputy)))))))))
(a / and :op1 (i / introduce-01 :mode (i2 / imperative) :arg0 (w / we) :arg1 (a2 / article :poss (w2 / we)) :arg2 (t / thing :arg1-of (q / question-01) :mod (t2 / this))) :op2 (a3 / advise-01 :arg0 (w3 / we) :arg2 (p / person :arg0-of (p2 / prepare-02 :arg2 (e / exam :mod (e2 / exam)) :purpose (s / spend-02 :arg0 (p3 / person) :arg1 (t3 / time)))) :mod (s2 / some)))
(e / event :time (r / raise-01 :arg0 (g / government-organization :name (n / name :op1 "Fed")) :arg1 (r2 / rate :mod (i / interest))) :location (h / here))
(m / multi-sentence :snt1 (b / be-temporally-at-91 :arg2 (d / date-entity :month 10 :year 1982)) :snt2 (t / throw-01 :arg1 (b2 / bribe-01) :arg2 (f / face :part-of (p / person :arg0-of (h / have-rel-role-91 :arg1 (s / she) :arg2 (h2 / husband))))))
(s / see-01 :arg0 (w / we) :arg1 (i / improve-01 :arg0 (w2 / we) :arg1 (m / market :mod (g / grade :mod (c / country :name (n / name :op1 "N-A")))) :manner (e / employ-01 :polarity -) :arg1-of (c2 / cause-01 :arg0 (a / and :op1 (i2 / increase-01) :op2 (e2 / employ-01 :polarity -) :arg1-of (i3 / increase-01))) :degree (f / further)) :time (m2 / month :mod (t / that)))
(m / multi-sentence :snt1 (c / contrast-01 :arg2 (a / ask-01 :arg1 (r / recommend-01 :arg1 (g / get-01 :arg0 (a2 / amr-unknown) :arg1 (r2 / rise-01 :arg1 (w / wood) :mod (f / final))) :condition (a3 / ask-01 :polarity - :arg0 (y / you) :arg1 (q / question-01))))) :snt2 (p / possible-01 :arg1 (p2 / provide-01 :arg0 (t / thing :arg1-of (a4 / answer-01 :arg0 (t2 / they))) :arg1 (p3 / person :arg0-of (w2 / win-01 :arg1 (h / heart :part-of (b / bachelors)))) :arg2 (p4 / person :arg0-of (w3 / win-01 :arg1 (h2 / heart :part-of (b2 / bachelors)))))))
(r / responsible-03 :arg0 (p / person :name (n / name :op1 "Jeff" :op2 "van" :op3 "der" :op4 "Eems")) :arg1 (a / and :op1 (c / country :name (n2 / name :op1 "United" :op2 "Kingdom")) :op2 (o / organization :name (n3 / name :op1 "Continental" :op2 "Europe")) :op3 (c2 / continent :name (n4 / name :op1 "Africa"))))
(s / say-01 :arg1 (p / period :mod (v / vulnerable) :time-of (c / come-01 :arg1 (y / you) :arg3 (i / injure-01)) :time (c2 / come-01 :arg1 (y2 / you) :arg3 (i2 / injure-01))) :arg2 (h / have-03 :arg0 (y3 / you) :arg1 (p2 / period :mod (v2 / vulnerable) :time-of (n / need-01 :arg0 (y4 / you) :arg1 (a / and :op1 (s2 / strengthen-01 :arg0 (y5 / you) :arg1 (b / body :poss (y6 / you))) :op2 (g / gain-02 :arg0 (y7 / you) :arg1 (c3 / compete-01 :arg0 (p3 / person :name (n2 / name :op1 "Wenger")))))))))
(p / provide-01 :arg0 (p2 / person :name (n / name :op1 "Ben" :op2 "Cousins")) :arg1 (e / example :mod (m / memorable)))
(l / love-01 :arg0 (i / i) :arg1 (a / and :op1 (p / person :name (n / name :op1 "Amy")) :op2 (s / she) :mod (o / only) :arg0-of (l2 / love-01 :arg1 (i2 / i) :time (e / ever)) :domain (s2 / she)))
(p / promote-02 :arg0 (o / organization :name (n / name :op1 "Pediatric" :op2 "Society" :op3 "of" :op4 "Rio" :op5 "Grande") :part-of (o2 / organization :name (n2 / name :op1 "Pediatric" :op2 "Society" :op3 "of" :op4 "Rio" :op5 "Grande") :part-of (c / country))) :manner (h / health))
(a / and :op1 (c / cause-01 :arg0 (p / put-01 :arg0 (t / they) :arg1 (s / signatures :arg1-of (p2 / put-01 :arg0 (t2 / they))) :arg2 (c2 / custody))) :op2 (d / dismiss-01 :arg0 (t3 / they) :arg1 (p3 / post :poss (t4 / they))))
(m / multi-sentence :snt1 (a / and :op1 (a2 / announce-01 :arg0 (i / i) :arg1 (t / thing :arg1-of (a3 / announce-01) :mod (i2 / important)) :location (d / dlr :source (v / value-interval :op1 (1 / 15th) :op2 (d2 / date-entity :month 9))))) :snt2 (r / read-01 :mode (i3 / imperative) :arg0 (y / you) :arg1 (a4 / and :op1 1 :op2 (b / branding)) :arg4 (i4 / image :poss (t2 / tank))))
(d / decline-02 :arg0 (o / organization :name (n / name :op1 "Metcash")) :arg1 (r / respond-01 :arg0 (o2 / organization) :arg1 (c / comment-01 :arg0 (p / person :name (n2 / name :op1 "Douglass")) :arg1-of (p2 / public-02)) :arg2 (p3 / public)))
(a / and :op1 (s / shoot-02 :arg1 (i / i) :location (l / location :name (n / name :op1 "Joburg"))) :op2 (s2 / studio :arg0 (p / person :arg0-of (h / have-03 :polarity - :arg1 (t / thing :manner-of (t2 / take-01 :arg0 (p2 / person) :arg1 (p3 / photograph-01 :arg0 (p4 / person) :arg1 (n2 / neighbourhood :poss (p5 / person))))))) :arg2 (p6 / profit-01 :arg0 (p7 / person))))
(s / state-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (c / country :name (n / name :op1 "Netherlands")) :arg2 (m / minister :topic (a / affair :mod (f / foreign))))) :arg1 (r / recommend-01 :arg1 (t / try-02 :arg1 (p2 / person :name (n2 / name :op1 "Bashar" :op2 "al-Assad") :arg0-of (h2 / have-org-role-91 :arg1 (c2 / country) :arg2 (p3 / president))) :location (l / location :name (n3 / name :op1 "Hague")) :location (l2 / location :name (n4 / name :op1 "Hague")))))
(c / cause-01 :arg0 (s / see-01 :polarity - :arg0 (w / we) :arg1 (p / price-01 :arg1 (t / thing :arg2-of (p2 / price-01) :mod (p3 / permanent) :mod (a / any)) :location (a2 / above)) :arg1-of (c2 / cause-01 :arg0 (a3 / as-long-as :op1 (s2 / see-01 :polarity - :arg0 (w2 / we) :arg1 (p4 / price-01 :mod (p5 / permanent) :mod (a4 / any) :location (a5 / above)))))) :arg1 (p6 / possible-01 :arg1 (a6 / and :op1 (r / remain-01 :arg1 (m / movement-07 :arg1 (p7 / price-01 :arg1 (o / oil))) :arg1-of (l / limit-01)) :op2 (i / increase-01 :arg1 (p8 / pressure-01 :arg1 (t2 / thing :arg2-of (p9 / price-01)) :arg1-of (p10 / possible-01))))))
(p / possess-01 :arg0 (p2 / possess-01 :arg1 (p3 / possess-01 :arg1 (s / site :mod (h / holy)))) :arg1 (p4 / possess-01 :arg1 (r / range :mod (c / construct-01)) :time (e / early :op1 (d / date-entity :year (N / N-A)) :degree (m / more)) :arg1-of (c2 / crash-01 :path (a / and :op1 (s2 / seismic-quantity :quant (N2 / N-A)) :op2 (t / toppled :mod (o / onto))))))
(c / contrast-01 :arg2 (s / say-01 :arg0 (p / person :quant 6 :arg1-of (i / include-91 :arg2 (p2 / person :quant 10 :arg0-of (r / republican)))) :arg1 (a / agree-01 :arg0 (p3 / person) :arg1 (i2 / issue-02 :arg0 (i3 / immigrate-01)) :arg2 (p4 / person :name (n / name :op1 "Trump")))))
(c / charge-05 :arg1 (p / person :name (n / name :op1 "Hughes")) :arg2 (a / and :op1 (h / hits :quant 3) :op2 (w / walk-01 :accompanier (s / strikeouts :quant 4))))
(m / multi-sentence :snt1 (i / include-91 :arg1 (t / they) :arg2 (t2 / thing :arg2-of (c / cover-01 :arg1 (t3 / they)))) :snt2 (a / and :op1 (r / recommend-01 :arg1 (i2 / include-01 :arg1 (s / subject :mod (i3 / incomplete)) :arg2 (t4 / thing :arg1-of (p / plan-01 :arg0 (t5 / they))))) :op2 (r2 / recommend-01 :arg1 (p2 / plan-01 :arg0 (t6 / they) :arg1 (a2 / and :op1 (d / day :poss (t7 / they)) :op2 (t8 / temporal-quantity :quant (N / N-A) :unit (w / week)) :op3 (p3 / period :mod (1 / 15-day)))))))
(t / time :quant 9 :arg1-of (r / recreation-02) :beneficiary (a / and :op1 (f / family :arg1-of (h / have-org-role-91 :arg0 (y / you) :arg2 (m / member))) :op2 (p / person :arg0-of (h2 / have-rel-role-91 :arg1 (y2 / you) :arg2 (f2 / friend)))))
(c / cite-01 :arg0 (p / person :name (n / name :op1 "Lacker") :arg0-of (h / have-org-role-91 :arg1 (o / organization :name (n2 / name :op1 "Federal" :op2 "Open" :op3 "Market" :op4 "Committee") :part-of (o2 / organization :name (n3 / name :op1 "Federal" :op2 "Open" :op3 "Market" :op4 "Committee") :mod (p2 / policymaking)) :arg0-of (p3 / push-02 :arg2 (i / increase-01 :arg1 (r / rate)))) :arg2 (m / member))) :arg1 (t / thing :arg1-of (d / decide-01 :arg3 (r2 / rate :mod (r3 / rate)))) :arg1-of (c2 / cite-01 :arg0 (e / example :quant 1998-99)))
(m / multi-sentence :snt1 (c / contrast-01 :arg2 (t / think-01 :arg0 (i / i) :arg1 (l / look-01 :arg0 (t2 / they) :arg1 (e / excuse-02 :polarity - :arg0 (t3 / they) :arg1 (r / raise-01 :arg0 (t4 / they) :arg1 (r2 / rate)))))) :snt2 (e2 / enough :mod (e3 / enough) :domain (p / provide-01 :arg1 (m2 / marketplace :mod (g / globe)) :arg2 (j / justify-01 :arg1 (w / wait-01 :arg1 (t5 / they) :degree (f / further)))) :arg1-of (s / say-01 :arg0 (s2 / she))))
(l / learn-01 :arg1 (p / prefer-01 :arg0 (a / and :op1 (p2 / person :mod (f / foreign)) :op2 (p3 / person :arg0-of (h / have-org-role-91 :arg1 (o / organization :name (n / name :op1 "United" :op2 "Nations")) :arg2 (o2 / official :mod (v / vice))))) :arg1 (h2 / hotel :arg1-of (m / mention-01 :polarity -)) :mod (e / especially)))
(p / possible-01 :mode (i / interrogative) :polarity - :arg1 (r / romantic :domain (i2 / it) :condition (m / move-01 :arg1 (f / future :poss (y / you) :time (f2 / future)) :arg2 (h / hall :arg1-of (s / same-01)))))
(r / recommend-01 :arg1 (m / make-01 :polarity - :arg0 (y / you) :arg1 (s / sentiment :arg0-of (k / keep-02 :arg1 (o / or :op1 (s2 / sleep-01 :arg0 (p / person)) :op2 (s3 / study-01 :arg0 (p2 / person)))))))
(r / recommend-01 :arg1 (m / make-01 :polarity - :arg0 (y / you) :arg1 (s / sentiment :arg0-of (k / keep-02 :arg1 (o / or :op1 (s2 / sleep-01 :arg0 (p / person)) :op2 (s3 / study-01 :arg0 (p2 / person)))))))
(c / contrast-01 :arg1 (e / exist-01 :arg1 (b / bag :mod (s / small)) :time (a / already)) :arg2 (a2 / appear-01 :arg1 (t / they) :time (b2 / before :op1 (v / versions :arg1 (b3 / bag :consist-of (b4 / bag :consist-of (s2 / shoulder) :mod (b5 / big))) :mod (m / minimised)))))
(e / eat-01 :arg0 (i / i) :arg1 (m / much :degree (t / too)))
(b / believe-01 :arg0 (t / they) :arg1 (c / cheat :domain (i / i)) :arg1-of (o / obvious-01))
(m / message :prep-on (w / we :mod (w2 / whatsapp)))
(a / and :op1 (o / obvious-01 :arg1 (a2 / and :op1 (m / market :mod (l / labor)) :op2 (i / inflation :ord (o2 / ordinal-entity :value 1)) :domain (a3 / and :op1 (m2 / market :mod (l2 / labor)) :op2 (i2 / inflation)) :ord (o3 / ordinal-entity :value 1))) :op2 (s / say-01 :arg0 (i3 / i) :arg1 (i4 / important :degree (m3 / most) :domain (w / watch-01 :arg0 (t / they) :arg1 (p / person :name (n / name :op1 "Lindsey" :op2 "M." :op3 "Piegza") :arg0-of (h / have-org-role-91 :arg1 (c / company :name (n2 / name :op1 "N-A")) :arg2 (c2 / chief)))))))
(a / and :op1 (o / obvious-01 :arg1 (a2 / and :op1 (m / market :mod (l / labor)) :op2 (i / inflation :ord (o2 / ordinal-entity :value 1)) :domain (a3 / and :op1 (m2 / market :mod (l2 / labor)) :op2 (i2 / inflation)) :ord (o3 / ordinal-entity :value 1))) :op2 (s / say-01 :arg0 (i3 / i) :arg1 (i4 / important :degree (m3 / most) :domain (w / watch-01 :arg0 (t / they) :arg1 (p / person :name (n / name :op1 "Lindsey" :op2 "M." :op3 "Piegza") :arg0-of (h / have-org-role-91 :arg1 (c / company :name (n2 / name :op1 "N-A")) :arg2 (c2 / chief)))))))
(a / and :op1 (s / sit-01 :arg1 (p / person :name (n / name :op1 "Kent" :op2 "Weed") :arg0-of (p2 / produce-01 :arg1 (p3 / person :arg0-of (h / have-org-role-91 :arg2 (e / executive))) :arg2 (p4 / person :arg0-of (r / report-01)))) :arg2 (p5 / person :arg0-of (h2 / have-org-role-91 :arg1 (c / city-district :name (n2 / name :op1 "Hollywood")) :arg3 (r2 / report-01))) :purpose (d / discuss-01 :arg0 (p6 / person) :arg1 (a2 / and :op1 (p7 / person :arg0-of (h3 / have-org-role-91 :arg1 (c2 / city-district :name (n3 / name :op1 "Hollywood")) :arg3 (r3 / report-01))) :op2 (p8 / person :arg0-of (h4 / have-org-role-91 :arg1 (p9 / political-party :name (n4 / name :op1 "N-A")) :arg3 (r4 / report-01))))) :purpose (d2 / discuss-01 :arg0 (p10 / person) :arg1 (a3 / and :op1 (f / finale) :op2 (p11 / person :arg0-of (c3 / compete-02 :ord (o / ordinal-entity :value 1)))))) :op2 (a4 / award-01 :polarity - :arg1 (w / wo) :arg2 (m / money :mod (a5 / any))))
(b / burn-01 :arg0 (t / terrorist) :arg1 (s / school) :location (d / diyarbak?r))
(b / be-located-at-91 :arg1 (n / next) :arg2 (n2 / next-to :op1 (e / enthusiasm)))
(b / be-located-at-91 :arg1 (n / next) :arg2 (n2 / next-to :op1 (e / enthusiasm)))
(s / say-01 :arg0 (p / person :arg1-of (i / include-91 :arg2 (p2 / person :arg0-of (r / republican)) :arg3 (p3 / percentage-entity :value (N / N-A)))) :arg1 (o / or :op1 (' / '' :arg0 (o2 / or :op1 (p4 / person :arg0-of (h / have-org-role-91 :arg2 (g / general))) :op2 (p5 / person :arg0-of (s2 / satisfy-01 :arg1 (p6 / person))))) :op2 (s3 / satisfy-01 :arg0 (p7 / person) :arg1 (p8 / person)) :condition (n / nominate-01 :arg1 (p9 / person :name (n2 / name :op1 "Trump")))) :time (w / week :mod (l / last)))
(r / recommend-01 :arg1 (w / work-09 :arg1 (s / system :mod (d / digestive) :poss (y / you)) :manner (h / healthily)))
(c / contrast-01 :arg1 (s / say-01 :arg0 (t / they) :arg1 (c2 / coup) :arg1-of (r / repeat-01)) :arg2 (s2 / strengthen-01 :arg0 (c3 / coup) :arg1 (l / law :poss (c4 / coup))))
(a / and :op1 (w / wary :domain (p / person :name (n / name :op1 "Mark" :op2 "Warburton") :arg0-of (h / have-org-role-91 :arg1 (p2 / person :arg0-of (i / identify-01 :arg1 (p3 / person))) :arg2 (b / boss))) :time (b2 / before :op1 (n2 / now) :quant (c / couple :op1 (t / temporal-quantity :quant (N / N-A) :unit (w2 / week)))) :mod (j / just)) :op2 (i2 / insist-01 :arg0 (p4 / person) :arg1 (w3 / want-01 :polarity - :arg0 (p5 / person) :arg1 (d / disrupt-01 :arg0 (p6 / person) :arg1 (u / unity :mod (i3 / ibrox))))))
(i / include-91 :arg1 (o / or :op1 (c / candidate :mod (d / democracy)) :op2 (c2 / candidate :mod (p / potential))) :arg2 (t / thing :arg2-of (c3 / characteristic-02 :arg1 (p2 / person :arg0-of (v / vote-01 :arg1 (p3 / party :poss (p4 / party) :mod (p5 / primary))))) :arg1-of (k / key-02) :quant (s / some)) :mod (w / well))
(r / recommend-01 :arg1 (c / come-01 :arg1 (y / you) :arg4 (s / samand?ra :arg0 (y2 / you) :arg1 (y3 / you)) :mod (a / also)))
(a / and :op1 (c / cause-01 :arg0 (s / study :arg1-of (l / like-01 :polarity - :arg0 (p / person))) :arg1 (l2 / like-01 :arg0 (p2 / person) :arg1 (d / do-02 :arg0 (p3 / person) :arg1 (i / it)))) :op2 (c2 / cause-01 :arg1 (a2 / and :op1 (b / become-01 :arg1 (p4 / person) :arg2 (d2 / duty :beneficiary (p5 / person :arg0-of (s2 / study-01) :arg0-of (d3 / do-02 :arg1 (i2 / it) :arg1-of (r / regular-02))))) :op2 (a3 / and :op1 (p6 / plan-01 :arg1 (d4 / duty :beneficiary (p7 / person :arg0-of (s3 / study-01) :arg0-of (d5 / do-02 :arg1 (i3 / it) :arg1-of (r2 / regular-02))))) :op2 (p8 / plan-01 :arg1 (d6 / do-02 :arg1 (t / thing)) :time (n / need-01 :arg1 (t2 / thing))) :time (a4 / always)))))
(s / say-01 :arg0 (p / person :name (n / name :op1 "Emin" :op2 "Altunç") :arg1-of (i / include-91 :arg2 (p2 / person :arg0-of (r / reside-01 :arg1 (p3 / person :arg0-of (r2 / reside-01 :arg1 (n2 / neighbourhood))))))) :arg1 (c / contrast-01 :arg1 (w / wound-01 :arg1 (p4 / person :arg0-of (h / have-rel-role-91 :arg1 (i2 / i) :arg2 (s2 / son)))) :arg2 (p5 / possible-01 :polarity - :arg1 (l / leave-15 :arg0 (w2 / we) :arg1 (h2 / home :poss (w3 / we)) :arg1-of (c2 / cause-01 :arg0 (g / gunshots :arg1 (p6 / person)))))))
(s / say-01 :arg1 (a / admit-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (o / organization :name (n / name :op1 "MHP" :op2 "Press" :op3 "Office")))) :arg1 (a2 / admit-01 :arg0 (p2 / person) :arg1 (h2 / hospital :poss (w / we)) :purpose (c / check-01 :arg0 (p3 / person) :arg1 (h3 / health)) :time (p4 / previous))) :medium (s2 / statement :arg1-of (s3 / state-01 :arg0 (o2 / organization))))
(c / contrast-01 :arg1 (r / report-01 :polarity - :arg0 (s / service :mod (n / news) :poss (a / agency :mod (n2 / news))) :arg1 (d / detail-01 :polarity - :arg0 (s2 / service))) :arg2 (s3 / say-01 :arg0 (s4 / service) :arg1 (b / ban-01 :arg1 (p / person :arg0-of (l / lead-02 :arg1 (c2 / company))) :location (a2 / abroad))))
(e / exhibit-01 :arg1 (e2 / exhibit-01) :arg1-of (c / call-01 :arg2 (' / '' :mod (l / love-01))) :time (u / until :op1 (d / date-entity :month 1 :day 31)))
(s / say-01 :arg0 (h / he) :arg1 (s2 / stop-01 :polarity - :arg0 (w / we) :arg1 (c / chasing :arg0 (w2 / we) :arg1 (i / it))))
(e / enable-01 :arg0 (a / activity-06 :mod (m / mold) :mod (t / this)) :arg1 (c / compete-02 :arg0 (a2 / activity-06) :degree (m2 / more)) :arg2 (a3 / and :op1 (c2 / compete-02 :arg0 (a4 / and :op1 (p / person :name (n / name :op1 "Meg" :op2 "Whitman") :arg0-of (h / have-org-role-91 :arg1 (o / organization) :arg2 (c3 / chairman))) :op2 (p2 / person :arg0-of (h2 / have-org-role-91 :arg1 (o2 / organization) :arg2 (e2 / executive))) :op3 (p3 / person :arg0-of (h3 / have-org-role-91 :arg1 (o3 / organization) :arg2 (e3 / executive))) :op4 (p4 / person :arg0-of (h4 / have-org-role-91 :arg1 (o4 / organization) :arg2 (e4 / executive)) :arg0-of (h5 / have-org-role-91 :arg1 (u / unit) :arg2 (e5 / executive)) :arg0-of (h6 / have-org-role-91 :arg1 (u2 / unit) :arg2 (e6 / executive)) :arg0-of (h7 / have-org-role-91 :arg1 (u3 / unit) :arg2 (e7 / executive)) :arg0-of (h8 / have-org-role-91 :arg1 (u4 / unit) :arg2 (e8 / executive)) :arg0-of (h9 / have-org-role-91 :arg1 (u5 / unit) :arg2 (e9 / executive)) :arg0-of (h10 / have-org-role-91 :arg1 (u6 / unit) :arg2 (e10 / executive)) :arg0-of (h11 / have-org-role-91 :arg1 (u7 / unit) :arg2 (e11 / executive)) :arg0-of (h12 / have-org-role-91 :arg1 (u8 / unit) :arg2 (e12 / executive)))))))
(p / passed :arg0 (p2 / person :name (n / name :op1 "Celine" :op2 "Dion") :arg0-of (h / have-rel-role-91 :arg1 (p3 / person :arg0-of (r / rival-01 :arg1 (c / country :name (n2 / name :op1 "N-A")))) :arg2 (h2 / husband))) :arg2 (a / away))
(a / and :op1 (s / say-01 :arg0 (p / person :name (n / name :op1 "Murat" :op2 "Ülker") :arg0-of (h / hold-01 :arg1 (m / merge-01 :arg1 (m2 / merge-01 :arg1 (c / company :mod (g / globe) :arg0-of (h2 / hold-01)))))) :arg1 (c2 / company :mod (g2 / globe) :arg1-of (t / target-01 :time (b / begin-01)))) :op2 (a2 / add-01 :arg0 (p2 / person) :arg1 (t2 / thing :arg1-of (t3 / target-01 :arg0 (w / we)) :mod (g3 / globe))))
(m / multi-sentence :snt1 (h / have-condition-91 :arg1 (o / obligate-01 :arg1 (t / they) :arg2 (g / go-02 :arg0 (t2 / they) :arg4 (t3 / thing :arg1-of (s / state-01 :arg0 (t4 / they)) :mod (g2 / great)))) :arg2 (d / do-02 :arg0 (t5 / they) :arg1 (t6 / thing :arg1-of (s2 / state-01 :arg0 (t7 / they))) :arg2 (t8 / thing :arg1-of (s3 / state-01 :arg0 (t9 / they)) :mod (p / policy)))) :snt2 (c / cause-01 :arg1 (p2 / panic-01 :polarity - :arg1 (t10 / they))))
(a / attack-01 :arg0 (b / blog :mod (m / medicine) :mod (o / organization :name (n / name :op1 "Lancet"))) :arg1 (f / foundation :name (n2 / name :op1 (e / extraordinarily) :op2 (f2 / foundation) :op3 (f3 / foundation) :op4 (f4 / foundation) :op5 (f5 / foundation) :op6 (f6 / foundation) :op7 (f7 / foundation))) :time (m2 / month :mod (l / last)))
(s / say-01 :arg0 (o / organization :name (n / name :op1 "Atlanta" :op2 "Fed")) :arg1 (e / expect-01 :arg0 (p / person :quant (p2 / percentage-entity :value (N / N-A)) :arg1-of (i / include-91 :arg2 (p3 / person :quant 2015 :arg1-of (i2 / include-91 :arg2 (p4 / person :quant 2015 :arg1-of (i3 / include-91 :arg2 (p5 / person :quant 2015 :arg1-of (i4 / include-91 :arg2 (p6 / person :quant 2015 :arg1-of (r / rank-01)))))) :arg1 (p7 / percentage-entity :value (N2 / N-A)) :concession (p8 / percentage-entity :value (N3 / N-A) :arg1-of (i5 / include-91 :arg2 2015 :arg3 2015))))))))
(o / oath :arg0 (p / person :arg0-of (h / have-org-role-91 :arg2 (p2 / president))) :location (a / article :quant 103))
(s / state-01 :arg0 (i / i) :arg1 (a / and :op1 (p / provide-01 :arg0 (s2 / system) :arg1 (p2 / problem :topic (p3 / person :arg0-of (s3 / specialize-01) :mod (b / ballistics)))) :op2 (e / eliminate-01 :arg0 (s4 / system) :arg1 (p4 / problem :topic (p5 / person :arg0-of (s5 / specialize-01) :mod (b2 / ballistics))) :time (e2 / examine-01 :arg0 (s6 / system) :arg1 (a2 / and :op1 (c / casing) :op2 (c2 / cat))))) :arg2 (e3 / explain-01 :arg0 (s7 / system) :arg1 (a3 / and :op1 (p6 / provide-01 :arg0 (s8 / system) :arg1 (e4 / examination :mod (b3 / ballistics) :poss (a4 / and :op1 (g / gun) :op2 (g2 / gun) :op3 (c3 / casing) :prep-with (d / data :location (c4 / center))))) :arg2 (s9 / system))))
(k / keep-02 :arg1 (g / go-06 :arg1 (e / evil :poss (t / they))) :time (u / until :op1 (d / danger :polarity -)))
(d / door :location (d2 / door))
(m / multi-sentence :snt1 (a / and :op1 (f / fix-02 :arg1 (' / '' :arg0-of (f2 / fix-02))) :op2 ('2 / '' :arg0 (p / person :mod (c / country :name (n / name :op1 "Britain"))) :arg1 (n2 / nothing :arg2-of (v / value-01)))) :snt2 ('3 / ''))
(l / letter :source (c / country :name (n / name :op1 "Turkey")) :source (a / authors :quant 25 :mod (a2 / authors)))
(l / lead-03 :arg0 (t / trend-01 :arg1 (t2 / trend :mod (m / mini-bag))) :arg2 (t3 / temporal-quantity :quant (N / N-A) :unit (w / week)))
(p / present-01 :arg0 (v / vote-01 :arg1-of (p2 / popular-02 :arg2 (v2 / vote-01 :mod (p3 / popular)))) :arg1 (p4 / person :arg0-of (h / have-org-role-91 :arg2 (w / winners :mod (a / awarded)))) :arg3 (s / score-entity :op1 2015 :op2 (w2 / winners)))
(m / multi-sentence :snt1 (r / recommend-01 :arg1 (u / use-01 :arg0 (p / person :arg0-of (s / study-01)) :arg1 (b / break :mod (m2 / mid-term)) :manner (a / amr-unknown))) :snt2 (a2 / ask-01 :arg0 (w / we) :arg1 (q / question-01 :arg1 (a3 / and :op1 (p2 / person :arg0-of (s2 / specialize-01) :mod (e / educate-01)) :op2 (p3 / person :arg0-of (s3 / study-01))) :arg2 (p4 / person :name (n / name :op1 "Murat" :op2 "Ayd?n")))))
(s / suppose-01 :arg0 (i / i) :arg1 (e / escape-01 :arg0 (h / he) :arg1 (a / alien)))
(c / contrast-01 :arg1 (p / possible-01 :polarity - :arg1 (s / say-01 :arg0 (y / you) :arg1 (a / anything))) :arg2 (c2 / consider-01 :arg1 (b / blame-01 :arg1 (c3 / criminal-organization :name (n / name :op1 "PKK")) :manner (a2 / above))))
(m / multi-sentence :snt1 (c / confident-01 :arg1 (t / they) :arg2 (d / decrease-01 :polarity - :arg0 (t2 / they) :arg1 (t3 / thing :arg2-of (p / price-01 :arg1 (t4 / they))))) :snt2 (d2 / decrease-01 :polarity - :arg0 (t5 / they) :arg1 (t6 / thing :arg2-of (p2 / price-01 :arg1 (t7 / they)))) :snt3 (o / obligate-01 :arg1 (t8 / they) :arg2 (i / implement-01 :arg0 (t9 / they) :arg1 (t10 / tl :quant 1) :arg1-of (c2 / cause-01 :arg0 (c3 / compete-02)))))
(a / admire :arg0 (p / person :mod (b / both)) :arg1 (t / they))
(s / say-01 :arg0 (p / person :name (n / name :op1 "Ba?dadio?lu")) :arg1 (h / have-condition-91 :arg1 (w / watch-01 :arg0 (w2 / we) :arg1 (d / develop-01 :arg1-of (r / relate-01 :arg2 (a / agency :mod (e / employ-01 :arg1-of (p2 / private-03)))) :arg0-of (c / concern-02 :arg1 (c2 / concern-01 :quant (m / much))))) :arg2 (a2 / agenda) :condition (a3 / add-02 :arg1 (t / thing :arg1-of (o / occasion-02) :mod (t2 / this)) :arg2 (a4 / agenda) :mod (a5 / again))) :arg2 (a6 / agenda) :condition (a7 / add-02 :arg1 (t3 / thing :arg1-of (o2 / occasion-02) :mod (t4 / this)) :arg2 (a8 / agenda) :mod (a9 / again)))
(f / feel-01 :arg0 (t / they) :arg1 (a / and :op1 (f2 / feel-01 :arg0 (t2 / they) :arg1 (n / nice-01)) :op2 (c / comfortable-02 :arg0 (t3 / they) :arg1 (o / other :mod (e / each)))))
(a / and :op1 (t / teach-01 :arg0 (a2 / and :op1 (o / organization :name (n / name :op1 "Social" :op2 "Sciences")) :op2 (h / history)) :arg1 (l / list :consist-of (a3 / and :op1 (o2 / organization) :op2 (h2 / history)) :arg0-of (l2 / list-01 :arg1 (p / person :quant 17 :arg0-of (h3 / have-org-role-91 :arg1 (u / university :name (n2 / name :op1 "N-A") :quant 17) :arg2 (m / member)))))) :op2 (t2 / take-over-12 :arg0 (p2 / person :quant (m2 / many) :arg0-of (s / study-01)) :source (b / both)))
(f / fail-01 :arg1 (a / and :op1 (p / person :name (n / name :op1 "Karl" :op2 "Stefanovic")) :op2 (p2 / person :name (n2 / name :op1 "Lisa" :op2 "Wilkinson"))) :arg2 (c / city :name (n3 / name :op1 "Canberra")) :purpose (c2 / cover-01 :arg0 (a2 / and) :arg1 (r / roof :part-of (s / spill :mod (l / leadership :arg1-of (l2 / liberal-02))))) :purpose (g / generate-01 :arg0 (a3 / and) :arg1 (b / boost-01 :arg1 (t / thing :arg1-of (i / include-91 :arg2 (t2 / thing :arg1-of (b2 / boost-01 :time (t3 / today)))) :quant (m / much)))))
(f / fail-01 :arg1 (a / and :op1 (p / person :name (n / name :op1 "Karl" :op2 "Stefanovic")) :op2 (p2 / person :name (n2 / name :op1 "Lisa" :op2 "Wilkinson"))) :arg2 (c / city :name (n3 / name :op1 "Canberra")) :purpose (c2 / cover-01 :arg0 (a2 / and) :arg1 (r / roof :part-of (s / spill :mod (l / leadership :arg1-of (l2 / liberal-02))))) :purpose (g / generate-01 :arg0 (a3 / and) :arg1 (b / boost-01 :arg1 (t / thing :arg1-of (i / include-91 :arg2 (t2 / thing :arg1-of (b2 / boost-01 :time (t3 / today)))) :quant (m / much)))))
(s / start-01 :arg1 (q / quality :poss (h / he) :ord (o / ordinal-entity :value 3) :mod (o2 / only) :poss (h2 / he)) :time (b / before :op1 (n / now) :quant 9 :op1 9))
(c / contrast-01 :arg1 (r / raise-01 :arg0 (g / government-organization :name (n / name :op1 "Federal" :op2 "Reserve")) :arg1 (r2 / rate) :frequency (o / often)) :arg2 (d / determinant :polarity - :arg1 (t / thing :manner-of (r3 / respond-01 :arg0 (a / and :op1 (e / economy) :op2 (a2 / asset :mod (f / finance)))))))
(a / and :op1 (c / call-03 :arg0 (g / government-organization :arg0-of (g2 / govern-01)) :arg1 (p / peace) :purpose (p2 / peace :arg1-of (c2 / call-03 :arg0 (g3 / government-organization :arg0-of (g4 / govern-01)) :arg2 (p3 / peace) :time (s / simultaneous))) :arg2 (p4 / peace)) :op2 (d / discuss-01 :arg0 (g5 / government-organization) :arg2 (g6 / government-organization :arg0-of (g7 / govern-01)) :time (d2 / date-entity :month 1 :day 11) :location (a2 / and :op1 (l / location :name (n / name :op1 "Ankara")) :op2 (c3 / city :name (n2 / name :op1 "Istanbul"))) :time (d3 / date-entity :month 1 :day 11)) :op3 (d4 / declare-02 :arg0 (w / we) :arg1 (d5 / declare-02 :arg1 (c4 / crime-02 :mod (t / this)))))
(h / have-part-91 :arg1 (c / cartoon :mod (c2 / column) :arg1-of (s / sponsor-01 :arg0 (f / frames :quant 4))) :arg2 (c3 / cartoon))
(t / take-01 :arg0 (p / person :name (n / name :op1 "Bahçeli")) :arg1 (r / rest) :time (t2 / today))
(s / say-01 :arg0 (o / organization :name (n / name :op1 "Saudi" :op2 "Press" :op3 "Agency") :arg1-of (c / carry-01 :arg0 (o2 / organization :arg1-of (r / run-01 :arg0 (s2 / state))))) :arg1 (b / blame-01 :arg1 (o3 / organization :name (n2 / name :op1 "Binladin" :op2 "Group")) :arg2 (b2 / blame-01 :arg1 (o4 / organization) :arg2 (c2 / collapse-01))))
(s / say-01 :arg0 (o / organization :name (n / name :op1 "Saudi" :op2 "Press" :op3 "Agency") :arg1-of (c / carry-01 :arg0 (o2 / organization :arg1-of (r / run-01 :arg0 (s2 / state))))) :arg1 (b / blame-01 :arg1 (o3 / organization :name (n2 / name :op1 "Binladin" :op2 "Group")) :arg2 (b2 / blame-01 :arg1 (o4 / organization) :arg2 (c2 / collapse-01))))
(a / add-01 :arg0 (p / person :arg1-of (i / include-91 :arg2 (p2 / person :quant 12 :arg1-of (i2 / include-91 :arg2 (p3 / person :quant 12))) :time (m / meet-03))) :arg1 (f / fund-01 :polarity - :arg0 (f2 / fund-01 :arg1 (o / organization :name (n / name :op1 "Philip" :op2 "Morris" :op3 "International") :consist-of (t / tobacco)) :time (p4 / previous)) :arg1 (f3 / fund-01)))
(p / phone-number-entity :value (N / N-A))
(g / give-01 :arg0 (h / he) :arg1 (n / name :op1 (' / '') :op2 ('2 / '')) :arg2 (p / person :name (n2 / name :op1 "Angela" :op2 "Merkel")))
(d / debut :arg1 (n / news :mod (b / big) :topic (s / seven)) :arg2 (p / person :name (n2 / name :op1 "Erik" :op2 "Thomson") :arg1-of (p2 / populate-01 :arg2 (s2 / star :mod (r / rafters)) :time (f / former))) :mod (s3 / stunning))
(s / shuttle :mod (s2 / space) :frequency (s3 / sometimes))
(a / and :op1 (h / have-03 :arg0 (o / organization :name (n / name :op1 "Home" :op2 "Sweet" :op3 "Home")) :arg1 (s / store :quant 25 :location (a2 / and :op1 (c / country :name (n2 / name :op1 "Turkey")) :op2 (s2 / store :quant 17))) :location (a3 / abroad)) :op2 (a4 / area :quant 17 :domain (a5 / area :mod (g / grass-roots) :arg2-of (t / total-01) :poss (o2 / organization))) :op3 (i / include-91 :arg1 (p / person :arg1-of (e / employ-01)) :arg2 (a6 / around :op1 320)))
(m / multi-sentence :snt1 (s / squads :mode (i / interrogative) :arg0 (p / police)) :snt2 (s2 / start-01 :arg0 (o / organization :name (n / name :op1 "zmir" :op2 "Police" :op3 "Department")) :arg1 (o2 / operation) :time (a / after :op1 (c / complain-01 :arg0 (o3 / organization) :arg1 (a2 / and :op1 (s3 / steal-01 :arg1 (c2 / card :mod (b / bank) :poss (p2 / person))) :op2 (a3 / and :op1 (w / withdraw-01 :arg1 (c3 / cash)) :op2 (s4 / spend-01 :arg1 (m2 / money) :arg3 (a4 / account :poss (p3 / person)))))))))
(b / benefit-01 :arg0 (c / cooking :mod (s / steam)) :arg1 (a / amr-unknown))
(a / act-02 :arg0 (h / he) :time (a2 / after :op1 (m / murder-01 :arg0 (p / person :name (n / name :op1 "Barry" :op2 "Van" :op3 "Treese")))) :time (a3 / after :op1 (m2 / murder-01 :arg1 (p2 / person))) :time (a4 / after :op1 (f / fact)))
(c / criticize-01 :arg0 (p / person :arg1-of (e / expert-01)) :arg1 (o / organization :name (n / name :op1 "Public" :op2 "Health" :op3 "England")))
(a / attack-01 :arg0 (p / person :name (n / name :op1 "Damien" :op2 "Collins") :arg0-of (h / have-org-role-91 :arg1 (o / organization :name (n2 / name :op1 "Voice")) :arg2 (m / mp))) :arg1 (s / show-04 :arg1 (m2 / music) :arg0-of (s2 / show-01 :arg1 (b / buy-01 :arg0 (c / company :name (n3 / name :op1 "BBC")) :arg1 (m3 / monetary-quantity :quant (2 / 22million) :unit (d / dollar :mod (c2 / country)) :arg1-of (e / estimate-01))))))
(c / claim-01 :arg0 (c2 / criminal-organization :name (n / name :op1 "al-Qaeda")) :arg1 (r / responsible-01 :arg0 (p / person :name (n2 / name :op1 "Maghrib") :arg1-of (l / local-02)) :arg1 (a / attack-01)))
(r / recommend-01 :arg1 (k / keep-01 :arg0 (t / they) :arg1 (w / word :poss (s / someone)) :arg3 (d / die-01)) :condition (a / and :op1 (c / come-out-09 :arg1 (s2 / someone)) :op2 (g / give-01 :arg0 (s3 / someone) :arg1 (p / promise-01 :mod (t2 / this)))))
(s / say-01 :arg1 (h / have-03 :arg0 (l / lax-c) :arg1 (l2 / lot :topic (a / and :op1 (s2 / shop :mod (o / other)) :op2 (r / restaurant)))) :arg2 (p / person :name (n / name :op1 "N-A")))
(s / say-01 :arg1 (h / have-03 :arg0 (l / lax-c) :arg1 (l2 / lot :topic (a / and :op1 (s2 / shop :mod (o / other)) :op2 (r / restaurant)))) :arg2 (p / person :name (n / name :op1 "N-A")))
(m / multi-sentence :snt1 (s / say-01 :arg0 (p / person :name (n / name :op1 "Johnson")) :arg1 (g / go-01 :arg1 (s2 / service :name (n2 / name :op1 (p2 / programmes)) :arg1-of (p3 / public-02) :mod (s3 / service :mod (p4 / public)) :poss (c / company :name (n3 / name :op1 "BBC"))) :arg4 (b / bbc4 :arg0 (p5 / person) :arg1 (a / audience)))) :snt2 (c2 / contrast-01 :arg1 (p6 / possible-01 :arg1 (a2 / argue-01 :arg0 (p7 / person) :arg1 (m2 / measure-01 :arg0 (p8 / person) :arg1 (a3 / audience)))) :arg2 (a4 / and :op1 (f / fulfil :arg0 (p9 / person) :arg1 (m3 / mission :poss (p10 / person) :mod (s4 / sanctimonious :arg0 (p11 / person) :arg1 (a5 / and :op1 (m4 / mission :poss (p12 / person) :mod (s5 / sanctimonious)) :op2 (m5 / monetary-quantity :quant (4 / 4bn) :unit (y / yuan :mod (r / renminbi)))))))) :op2 (w / watch-01 :arg0 (p13 / person) :arg1 (p14 / person :quant 1 :arg0-of (w2 / watch-01 :arg1 (p15 / person :quant 1 :arg0-of (w3 / watch-01)))) :mod (o / of-course :polarity -))))
(m / multi-sentence :snt1 (r / recommend-01 :arg1 (a / and :op1 (b / behavior :arg0 (s / state :mod (t / this)) :arg1 (s2 / state :arg1-of (a2 / accord-02 :arg2 (l / law))) :arg1-of (a3 / accord-02 :arg2 (l2 / law))) :op2 (r2 / recommend-01 :arg1 (v / value-01 :arg0 (s3 / state) :arg1 (l3 / law) :arg2 (l4 / law) :time (a4 / always) :arg1-of (a5 / accord-02 :arg2 (l5 / law)))))) :snt2 (s4 / say-01 :arg0 (t2 / they) :arg1 (a6 / act-01 :arg0 (y / you) :arg1 (a7 / act-01 :arg0 (y2 / you)) :arg2 (w / we))))
(s / say-01 :arg0 (p / person :location (c / city :name (n / name :op1 "N-A") :location (c2 / country :name (n2 / name :op1 "Russia")))) :arg1 (d / determine-01 :arg0 (w / we) :arg1 (i / it) :arg2 (r / rate-entity-91 :arg1 (a / approximately :op1 (m / monetary-quantity :quant 200 :unit (d2 / dollar :mod (r2 / renminbi)))) :arg2 (t / temporal-quantity :quant (N / N-A) :unit (y / year)))))
(r / raise-01 :arg0 (o / organization :name (n / name :op1 "Glencore")) :arg1 (m / monetary-quantity :quant 2.5 :unit (d / dollar)) :arg2 (s / sell-01 :arg1 (s2 / share)))
(t / taste :arg1 (f / food :arg1-of (s / stay-01 :arg3 (s2 / same-01))))
(v / value-01 :arg1 (m / monetary-quantity :quant 3.85 :unit (d / dollar)) :arg2 (o / or :op1 (m2 / monetary-quantity :quant 150.15 :unit (d2 / dollar)) :op2 (p / percentage-entity :value (N / N-A))) :arg4 (m3 / monetary-quantity :quant 150.15 :unit (d3 / dollar)) :arg4 (m4 / monetary-quantity :quant 150.15 :unit (d4 / dollar)) :time (b / before :op1 (o2 / open-01 :arg1 (s / some :arg1-of (o3 / open-01)))))
(d / define-01 :arg0 (p / person :name (n / name :op1 "Dmitry" :op2 "Medvedev") :arg0-of (h / have-org-role-91 :arg1 (c / country :name (n2 / name :op1 "Russia")) :arg2 (m / minister :mod (p2 / prime)))) :arg1 (m2 / monetary-quantity :arg2-of (p3 / price-01 :arg1 (o / oil)) :arg1-of (f / fall-01 :arg4 (u / under :op1 (m3 / monetary-quantity :quant 30 :unit (d2 / dollar))))) :arg2 (d3 / develop-02 :arg1 (d4 / dramatical :mod (d5 / dramatical)) :source (v / viewpoints :poss (c2 / country))))
(v / visit-01 :arg0 (p / person :name (n / name :op1 "Xi" :op2 "Jinping") :arg0-of (h / have-org-role-91 :arg1 (c / country :name (n2 / name :op1 "U.S.")) :arg2 (p2 / president))) :arg1 (v2 / visit-01 :arg0 (p3 / person) :arg1 (c2 / country :name (n3 / name :op1 "U.S.")) :time (e / end-01 :arg1 (m / month))) :medium (s / statement :medium (t / tuesday)))
(s / shoot-02 :arg0 (i / i) :arg1 (t / train-01 :arg2 (a / and :op1 (p / person :ord (o / ordinal-entity :value 1)) :op2 (p2 / person :quant 1))))
(m / multi-sentence :snt1 (b / be?ikta :mode (i / interrogative)) :snt2 (a / and :op1 (d / defeat-01 :mode (i2 / interrogative) :arg1 (p / person :quant (5 / 5-2) :mod (t / this) :arg0-of (p2 / play-01 :arg1 (t2 / team :quant 2 :mod (t3 / this) :arg1-of (p3 / play-11 :arg2 (h / half :ord (o / ordinal-entity :value 1) :ord (o2 / ordinal-entity :value 1) :ord (o3 / ordinal-entity :value 1) :ord (o4 / ordinal-entity :value 1) :ord (o5 / ordinal-entity :value 1) :ord (o6 / ordinal-entity :value 1) :ord (o7 / ordinal-entity :value 1) :ord (o8 / ordinal-entity :value 1) :ord (o9 / ordinal-entity :value 1) :ord (o10 / ordinal-entity :value 1) :ord (o11 / ordinal-entity :value 1) :ord (o12 / ordinal-entity :value 1) :ord (o13 / ordinal-entity :value 1) :ord (o14 / ordinal-entity :value 1) :ord (o15 / ordinal-entity :value 1) :ord (o16 / ordinal-entity :value 1) :ord (o17 / ordinal-entity :value 1) :ord (o18 / ordinal-entity :value 1) :ord (o19 / ordinal-entity :value 1) :ord (o20 / ordinal-entity :value 1) :ord (o21 / ordinal-entity :value 1) :ord (o22 / ordinal-entity :value 1) :ord (o23 / ordinal-entity :value 1) :ord (o24 / ordinal-entity :value 1) :ord (o25 / ordinal-entity :value 1) :ord (o26 / ordinal-entity :value 1) :ord (o27 / ordinal-entity :value 1) :ord (o28 / ordinal-entity :value 1) :ord (o29 / ordinal-entity :value 1) :ord (o30 / ordinal-entity :value 1) :ord (o31 / ordinal-entity :value 1) :ord (o32 / ordinal-entity :value 1) :ord (o33 / ordinal-entity :value 1) :ord (o34 / ordinal-entity :value 1)))))))))
(c / contrast-01 :arg2 (o / obligate-01 :arg1 (i / i) :arg2 (p / point :mod (n / now) :location-of (a / and :op1 (c2 / care-01 :polarity - :arg0 (i2 / i)) :op2 (s / saddens :arg0 (i3 / i) :arg1 (i4 / i))))))
(m / multi-sentence :snt1 (e / explain-01 :arg0 (p / person :arg0-of (w / work-01 :arg2 (p2 / person :arg0-of (w2 / work-01)))) :arg2 (i / i)) :snt2 (h / highlight-01 :arg0 (a / and :op1 (r / role :arg1-of (l / listen-01) :poss (i2 / i)) :op2 (t / thing :arg1-of (f / feel-01 :arg0 (p3 / person)))) :arg1 (t2 / thing :manner-of (p4 / possible-01 :arg1 (m2 / make-01 :arg0 (p5 / person :arg0-of (h2 / have-rel-role-91 :arg1 (p6 / person) :arg2 (f2 / friend))) :arg1 (d / difference :mod (s / small :degree (m3 / most) :mod (e2 / even))))) :mod (r2 / really))))
(m / multi-sentence :snt1 (e / explain-01 :arg0 (p / person :arg0-of (w / work-01 :arg2 (p2 / person :arg0-of (w2 / work-01)))) :arg2 (i / i)) :snt2 (h / highlight-01 :arg0 (a / and :op1 (r / role :arg1-of (l / listen-01) :poss (i2 / i)) :op2 (t / thing :arg1-of (f / feel-01 :arg0 (p3 / person)))) :arg1 (t2 / thing :manner-of (p4 / possible-01 :arg1 (m2 / make-01 :arg0 (p5 / person :arg0-of (h2 / have-rel-role-91 :arg1 (p6 / person) :arg2 (f2 / friend))) :arg1 (d / difference :mod (s / small :degree (m3 / most) :mod (e2 / even))))) :mod (r2 / really))))
(s / say-01 :arg1 (a / amr-unknown :mod (l / legendary :degree (m / most)) :domain (a2 / amr-unknown)) :arg2 (p / person :name (n / name :op1 "Karolina" :op2 "Kurkova")))
(c / contrast-01 :arg1 (w / warn-01 :arg0 (i / it) :arg1 (r / ready-02 :arg1 (m / market) :arg2 (r2 / ready-02 :arg1 (m2 / market)))) :arg2 (b / believe-01 :arg0 (t / they) :arg1 (o / oppose-01 :arg1 (m3 / move :mod (s / such))) :mod (a / also)))
(s / struggle-02 :arg0 (i / i) :arg1 (s2 / see-01 :arg0 (i2 / i) :arg1 (t / thing :manner-of (b / broadcast-01 :arg0 (s3 / service :mod (p / public))))))
(m / multi-sentence :snt1 (b / believe-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (o / organization :name (n / name :op1 "Lamb")))) :arg1 (b2 / believe-01 :arg0 (p2 / person) :arg1 (i / involve-01 :arg1 (p3 / person :name (n2 / name :op1 "Prentiss")) :arg2 (p4 / person :name (n3 / name :op1 "Schmidt")) :mod (a / also)) :arg1-of (a2 / allege-01) :mod (a3 / also))) :snt2 (s / say-01 :arg0 (p5 / person :arg0-of (h2 / have-org-role-91 :arg2 (a4 / authority))) :arg1 (i2 / information :polarity - :arg0-of (e / evidence-01 :polarity -) :arg0-of (e2 / evidence-01 :arg1 (t / triangle :arg1 (t2 / triangle))))))
(s / stay-01 :arg1 (w / we) :location (d / dormitory :poss (f / factory :mod (s2 / sugar))))
(r / return-05 :arg0 (c / city :name (n / name :op1 "Detroit")) :arg1 (f / f-word :arg1 (f2 / f-word :arg0-of (c2 / cause-01 :arg1 (e / elusive :quant (o / over :op1 (h / half :degree (s / so)) :time (s2 / season :ord (o2 / ordinal-entity :value 2)) :ord (o3 / ordinal-entity :value 2)))))) :condition (n2 / night :mod (o4 / only) :prep-for (n3 / night :quant 1)))
(n / name-02 :arg1 (a / and :op1 (p / person :arg0-of (s / speak-01 :arg3 (p2 / person :mod (m / male)))) :op2 (p3 / person :arg0-of (s2 / speak-01 :arg3 (p4 / person :mod (m2 / male)))) :degree (m3 / most) :time (n2 / night :time (r / recent))) :arg2 (m4 / man :mod (i / inspire-01) :arg1-of (a2 / award-01 :arg2 (w / woman :arg1-of (s3 / succeed-01)))))
(s / slip :arg0 (r / rest :part-of (f / field) :arg2-of (e / except-01 :arg1 (a / and :op1 (p / person :name (n / name :op1 "Carly" :op2 "Fiorina")) :op2 (l / location :name (n2 / name :op1 "Ohio"))))) :arg1 (p2 / person :arg0-of (h / have-org-role-91 :arg2 (g / governor)) :arg0-of (h2 / have-org-role-91 :arg2 (g2 / governor))) :arg2 (p3 / person :arg0-of (h3 / have-org-role-91 :arg2 (g3 / governor)) :arg0-of (h4 / have-org-role-91 :arg2 (g4 / governor)) :arg1-of (f2 / fall-01 :arg4 (p4 / product-of :op1 10 :op2 2) :time (m / month :mod (l2 / last))) :arg1-of (f3 / fall-01 :arg4 (p5 / product-of :op1 10 :op2 2) :time (m2 / month :mod (l3 / last)))))
(m / multi-sentence :snt1 (p / possible-01 :arg1 (s / say-01 :arg0 (i / i) :arg1 (p2 / possible-01 :arg1 (s2 / say-01 :arg0 (i2 / i) :arg1 (a / and :op1 (p3 / pillar :mod (q / quality)) :op2 (w / world-region :name (n / name :op1 "N-A") :arg1-of (i3 / innovate-01))))))) :snt2 (h / help-01 :mode (i4 / interrogative) :arg0 (g / government-organization :arg0-of (a2 / administrate-01 :arg1 (i5 / i))) :arg1 (i6 / i) :arg2 (a3 / administrate-01 :arg0 (i7 / i) :arg1 (i8 / i))))
(s / say-01 :arg0 (t / they) :arg1 (e / expect-01 :arg0 (p / public) :arg1 (e2 / estimate-01 :arg0 (p2 / person :arg0-of (h / have-org-role-91 :arg1 (o / organization :name (n / name :op1 "PHE")))) :arg1 (c / claim-01 :arg0 (o2 / organization) :arg1 (h2 / harmful-02 :arg0 (e3 / e-cigarettes :quant (a / around :op1 (p3 / percentage-entity :value (N / N-A)))) :time (c2 / current) :arg1-of (c3 / cause-01 :arg0 (r / review-01 :arg1 (a2 / and :op1 (t2 / thing :arg0-of (e4 / evidence-01)) :op2 (m / modelling)) :arg0-of (d / detail-01))))))))
(s / say-01 :arg0 (t / they) :arg1 (e / expect-01 :arg0 (p / public) :arg1 (e2 / estimate-01 :arg0 (p2 / person :arg0-of (h / have-org-role-91 :arg1 (o / organization :name (n / name :op1 "PHE")))) :arg1 (c / claim-01 :arg0 (o2 / organization) :arg1 (h2 / harmful-02 :arg0 (e3 / e-cigarettes :quant (a / around :op1 (p3 / percentage-entity :value (N / N-A)))) :time (c2 / current) :arg1-of (c3 / cause-01 :arg0 (r / review-01 :arg1 (a2 / and :op1 (t2 / thing :arg0-of (e4 / evidence-01)) :op2 (m / modelling)) :arg0-of (d / detail-01))))))))
(m / multi-sentence :snt1 (d / desire-01 :arg0 (t / they) :arg1 (r / respect-01 :arg0 (a / and :op1 (p / person :arg0-of (h / have-rel-role-91 :arg1 (t2 / they) :arg2 (p2 / parent))) :op2 (p3 / person :arg0-of (h2 / have-rel-role-91 :arg1 (t3 / they) :arg2 (c / circle :mod (s / social))))) :arg1 (t4 / thing :arg1-of (d2 / decide-01 :arg0 (t5 / they))))) :snt2 (a2 / and :op1 (a3 / ask-02 :arg1 (m2 / matter :arg1-of (r2 / relate-01 :arg2 (t6 / they))) :arg2 (m3 / matter :arg1-of (r3 / relate-01 :arg2 (t7 / they)))) :op2 (m4 / make-02 :arg1 (f / feel-01 :arg0 (t8 / they) :arg1 (v / value-01)))) :prep-in (w / word :mod (o / other)))
(a / accompany-01 :arg0 (o / organization :name (n / name :op1 "Üç" :op2 "Anadolu" :op3 "Singing" :op4 "Society")) :arg1 (s / style :mod (m / music) :mod (r / rü?tü)))
(s / state-01 :arg0 (a / and :op1 (c / country :name (n / name :op1 "Italy")) :op2 (r / rest :part-of (c2 / continent :name (n2 / name :op1 "Europe")))) :arg1 (o / obligate-01 :arg1 (p / person :name (n3 / name :op1 "Juncker")) :arg2 (f / find-01 :arg0 (o2 / organization :name (n4 / name :op1 "EU")) :arg1 (m / monetary-quantity :quant 3 :unit (e / euro)))))
(r / respond-01 :arg0 (t / they) :arg1 (i / it) :arg2 (u / up))
(u / underwent :arg0 (p / person :name (n / name :op1 "Devlet" :op2 "Bahçeli") :arg0-of (h / have-org-role-91 :arg2 (p2 / president :mod (g / general)))) :location (p3 / peninsula :name (n2 / name :op1 "N-A")) :time (y / yesterday))
(a / and :op1 (v / vote-01 :arg0 (p / person :arg0-of (l / legislate-01)) :location (c / constitution :arg1-of (d / draft-01) :location (l2 / location :name (n / name :op1 "Kathmandu"))) :time (w / week :mod (t / this))) :op2 (s / say-01 :arg0 (p2 / person :arg0-of (h / have-org-role-91 :arg2 (o / official))) :arg1 (p3 / possible-01 :arg1 (r / replicate-01 :arg0 (c2 / charter :mod (n2 / new)) :arg1 (c3 / charter :mod (n3 / new))))))
(a / attend-02 :arg0 (p / pay-01) :arg1 (s / subject) :arg3 (s2 / subject) :time (a2 / add-02 :arg0 (y / you) :arg1 (s3 / subject) :arg2 (t / thing :arg1-of (p2 / plan-01 :arg0 (y2 / you)))))
(s / say-01 :polarity - :arg0 (d / doctor) :arg1 (a / anything) :mod (e / either))
(h / highlight-01 :arg0 (i / it) :arg1 (f / friendship :mod (m / moment :mod (l / little))))
FAILED_TO_PARSE#Two concepts in a row.
(h / hear-01 :polarity - :arg0 (p / person :name (n / name :op1 "Burak" :op2 "Y?lmaz") :arg1-of (p2 / pass-01 :arg0 (p3 / person :name (n2 / name :op1 "Sneijder")))) :arg1 (p4 / protest-01 :arg0 (p5 / person)) :time (h2 / hear-01 :arg0 (p6 / person) :arg1 (a / against :op1 (m / match-03 :arg0 (p7 / person) :arg1 (p8 / person :name (n3 / name :op1 "Medicana" :op2 "Sivasspor"))) :ord (o / ordinal-entity :value 59))))
(p / predict-01 :arg1 (u / use-01 :arg1 (f / fund) :time (p2 / period)))
(a / and :op1 (s / sit-01 :arg1 (a2 / and :op1 (p / person :name (n / name :op1 "Terry" :op2 "Bailey")) :op2 (p2 / person :name (n2 / name :op1 "Dayle" :op2 "Brown")) :op3 (p3 / person :name (n3 / name :op1 "Brian" :op2 "Stewart") :mod (e / exact))) :arg2 (r / room :prep-with (m / man)) :time (b / before :op1 (n4 / now) :quant (t / temporal-quantity :quant (N / N-A) :unit (m2 / month))) :time (b2 / before :op1 (n5 / now) :quant (t2 / temporal-quantity :quant (N2 / N-A) :unit (m3 / month)))) :op2 (a3 / and :op1 (s2 / sit-01 :arg1 (p4 / person) :arg2 (u / under :op1 (m4 / man))) :op2 (o / offer-01 :arg0 (p5 / person) :arg1 (e2 / employ-01 :arg0 (p6 / person) :arg1 (p7 / person)) :purpose (o2 / offer-01 :arg0 (p8 / person) :arg1 (i / information :topic (t3 / thing :arg1-of (d / do-02 :arg0 (i2 / i) :location (s3 / stables :poss (i3 / i)))))))))
(c / contrast-01 :arg1 (p / possible-01 :polarity - :arg1 (h / help-02 :arg0 (a / and :op1 (s / situation :prep-with (s2 / style :poss (s3 / she) :mod (n / naive))) :op2 (s4 / style :mod (s5 / sincere) :mod (s6 / sincere))))) :arg2 (p2 / possible-01 :polarity - :arg1 (s7 / sing-01 :arg0 (p3 / person :arg0-of (s8 / sing-01)) :time (s9 / see-01 :arg0 (p4 / person) :arg1 (c2 / crowd)))))
(f / floor :li 7)
(c / consider-01 :arg0 (p / police) :arg1 (p2 / plan-01 :arg0 (p3 / person :arg0-of (h / have-org-role-91 :arg1 (p4 / police) :arg3 (l / lead-02 :arg0 (p5 / person)))) :arg1 (d / disciplines :arg0 (p6 / person) :arg1 (d2 / district :mod (s / school)))))
(c / contrast-01 :arg2 (o / obligate-01 :arg1 (r / refugee :arg1-of (i / include-91 :arg2 (p / person :arg0-of (s / syrians :arg1 (c2 / country :name (n / name :op1 "Russia")))) :arg3 (m / most))) :arg2 (r2 / return-01 :arg1 (r3 / refugee) :arg4 (c3 / country) :manner (h / have-frequency-91 :arg2 20 :arg1 (r4 / refugee))) :arg1-of (c4 / cause-01 :arg0 (p2 / possible-01 :polarity - :arg1 (r5 / reach-01 :arg0 (c5 / country :quant 2) :arg1 (a / agree-01))))))
(s / subject-01 :arg1 (t / this) :arg2 (b / baker :mod (d / decent) :domain (y / you)) :arg1-of (o / obvious-01))
(s / subject-01 :arg1 (t / this) :arg2 (b / baker :mod (d / decent) :domain (y / you)) :arg1-of (o / obvious-01))
(t / travel-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (o / organization :name (n / name :op1 "Identification" :op2 "Commission" :op3 "of" :op4 "the" :op5 "Federal" :op6 "Criminal" :op7 "Police" :op8 "Office")) :arg2 (p2 / person :arg1-of (e / expert-01))) :arg0-of (h2 / have-org-role-91 :arg1 (o2 / organization :name (n2 / name :op1 "BKA")) :arg3 (e2 / expert-01 :arg1 (p3 / person))) :arg0-of (h3 / have-org-role-91 :arg1 (o3 / organization) :arg3 (e3 / expert-01)) :arg0-of (h4 / have-org-role-91 :arg1 (o4 / organization) :arg3 (e4 / expert-01)) :arg0-of (h5 / have-org-role-91 :arg1 (o5 / organization) :arg3 (e5 / expert-01)) :arg0-of (h6 / have-org-role-91 :arg1 (o6 / organization) :arg3 (e6 / expert-01)) :arg0-of (h7 / have-org-role-91 :arg1 (o7 / organization) :arg3 (e7 / expert-01)) :arg0-of (h8 / have-org-role-91 :arg1 (o8 / organization) :arg3 (e8 / expert-01)) :arg0-of (h9 / have-org-role-91 :arg1 (o9 / organization) :arg3 (e9 / expert-01)) :arg0-of (h10 / have-org-role-91 :arg1 (o10 / organization) :arg3 (e10 / expert-01)) :arg0-of (h11 / have-org-role-91 :arg1 (o11 / organization) :arg3 (e11 / expert-01)) :arg0-of (h12 / have-org-role-91 :arg1 (o12 / organization) :arg3 (e12 / expert-01)) :arg0-of (h13 / have-org-role-91 :arg1 (o13 / organization) :arg3 (e13 / expert-01)) :arg0-of (h14 / have-org-role-91 :arg1 (o14 / organization) :arg3 (e14 / expert-01)) :arg0-of (h15 / have-org-role-91 :arg1 (o15 / organization) :arg3 (e15 / expert-01)) :arg0-of (h16 / have-org-role-91 :arg1 (o16 / organization) :arg3 (e16 / expert-01)) :arg0-of (h17 / have-org-role-91 :arg1 (o17 / organization) :arg3 (e17 / expert-01)) :arg0-of (h18 / have-org-role-91 :arg1 (o18 / organization) :arg3 (e18 / expert-01)) :arg0-of (h19 / have-org-role-91 :arg1 (o19 / organization) :arg3 (e19 / expert-01)) :arg0-of (h20 / have-org-role-91 :arg1 (o20 / organization) :arg3 (e20 / expert-01)) :arg0-of (h21 / have-org-role-91 :arg1 (o21 / organization) :arg3 (e21 / expert-01))) :arg4 (c / country) :arg1-of (n3 / normal-02))
(c / cause-01 :arg0 (p / possible-01 :arg1 (s / see-01 :arg0 (w / we) :arg1 (t / thing :quant-of (s2 / subject :arg1-of (s3 / study-01 :arg0 (w2 / we) :arg1-of (c2 / cause-01 :arg0 (s4 / solve-01 :arg0 (w3 / we) :arg1 (t2 / thing :arg1-of (s5 / solve-01 :arg0 (w4 / we))) :mod (o / only)))))))))
(a / and :op1 (d / disappoint-01 :arg0 (p / perform-02 :arg0 (c / country :name (n / name :op1 "US")) :arg1 (m / military) :location (a2 / and :op1 (c2 / country :name (n2 / name :op1 "Iraq")) :op2 (c3 / country :name (n3 / name :op1 "Libya")) :op3 (c4 / country :name (n4 / name :op1 "Syria"))) :mod (m2 / military)) :arg1 (c5 / country) :degree (p2 / pretty) :time (a3 / already)) :op2 (p3 / perform-02 :arg0 (c6 / country) :arg1 (a4 / and :op1 (p4 / perform-02 :arg0 (c7 / country) :arg1 (p5 / power)) :op2 (g / government-organization :arg0-of (g2 / govern-01 :arg1 (c8 / country))) :op3 (g3 / government-organization :arg0-of (g4 / govern-01 :arg1 (c9 / country))) :op4 (g5 / government-organization :arg0-of (g6 / govern-01 :arg1 (c10 / country))) :op5 (g7 / government-organization :arg0-of (g8 / govern-01 :arg1 (c11 / country))))))
(p / place :arg1-of (t / tough-02) :domain (l / location :name (n / name :op1 "Johannesburg") :location (d / downtown)) :arg1-of (t2 / tough-02))
(h / have-concession-91 :arg1 (p / possible-01 :polarity - :arg1 (i / ignore-01 :arg0 (g / government-organization :name (n / name :op1 "Fed")) :arg1 (o / outlook :mod (g2 / globe) :mod (g3 / globe)))))
(a / and :op2 (r / reason :quant (m / many) :arg0-of (c / cause-01 :arg1 (s / struggle-01 :arg0 (h / he) :arg2 (e / elect-01 :arg1-of (g / general-02))))))
(e / expect-01 :arg1 (s / stop-01 :arg1 (v / visit-01 :arg0 (p / person :arg0-of (l / lead-02 :arg1 (t / tech :mod (c / country :name (n / name :op1 "U.S.")))) :quant (s2 / several)) :arg1 (w / way :poss (p2 / person) :destination (c2 / city :name (n2 / name :op1 "Washington")))) :time (b / before :op1 (g / go-02 :arg0 (p3 / person) :arg4 (l2 / location :name (n3 / name :op1 "New" :op2 "York" :op3 "City")) :purpose (l3 / location :name (n4 / name :op1 "New" :op2 "York" :op3 "City") :beneficiary (o / organization :name (n5 / name :op1 "U.N." :op2 "General" :op3 "Assembly")))))) :arg1-of (c3 / cause-01 :arg0 (a / announce-01 :arg1 (v2 / visit-01 :arg1-of (a2 / announce-01 :time (f / first))))))
(a / add-01 :arg0 (p / person :name (n / name :op1 "Robertson")) :arg1 (' / '' :time (f / find-01 :arg0 (g / girl) :arg1 (m / message :topic (a2 / and :op1 (s / shout-01 :arg0 (g2 / girl) :arg1 (p2 / person :arg0-of (h / have-rel-role-91 :arg1 (g3 / girl) :arg2 (m2 / mother)))) :op2 (s2 / shake-01 :arg1 (m3 / message)))))))
(a / and :op1 (c / call-01 :polarity - :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (p2 / person :name (n / name :op1 "Pi" :op2 "Delta" :op3 "Psi")) :arg2 (m / member))) :arg1 (p3 / person :quant 911) :time (a2 / after :op1 (c2 / come-out-09 :arg1 (p4 / person)))) :op2 (w / wait-01 :arg1 (p5 / person) :arg2 (t / temporal-quantity :quant (N / N-A) :unit (h2 / hour) :time (b / before :op1 (b2 / bring-01 :arg0 (p6 / person) :arg1 (p7 / person) :arg2 (h3 / hospital)))) :arg1-of (a3 / allege-01) :time (b3 / before :op1 (b4 / bring-01 :arg0 (p8 / person) :arg1 (p9 / person) :arg2 (h4 / hospital)))))
(s / say-01 :arg0 (h / he) :arg1 (c / commit-02 :arg0 (t / they) :arg1 (o / offence :mod (s2 / same)) :time (s3 / since :op1 (s4 / stand-01 :arg1 (t2 / they) :arg2 (p / person :arg1-of (s5 / slaughter-01))))))
(c / cause-01 :arg0 (s / spend-01 :arg0 (p / person :arg0-of (l / lesson)) :arg1 (a / and :op1 (f / fun) :op2 (r / relaxing)) :mod (o / only)) :arg1 (p2 / period :time-of (h / holiday)))
(c / contrast-01 :arg2 (i / impress-01 :arg0 (p / person :name (n / name :op1 "Adriana" :op2 "Lima")) :arg1 (i2 / i) :arg2 (b / beauty :poss (s / she)) :mod (a / also)))
(b / become-01 :arg1 (p / person :name (n / name :op1 "Arib")) :arg2 (o / ordinal-entity :value 4) :time (r / round-05 :arg1 (p2 / parliament) :ord (o2 / ordinal-entity :value 4)) :location (c / country :name (n2 / name :op1 "Netherlands")))
(m / multi-sentence :snt1 (a / appear-01 :arg1 (s / she) :location (i / in-front-of :op1 (b / broadcast-program :name (n / name :op1 "N-A"))) :time (y / year :mod (s2 / same))) :snt2 (k / kad?n :mode (i2 / interrogative) :arg0 (a2 / and :op1 (p / person :name (n2 / name :op1 "Asuman" :op2 "Arsan")) :op2 (p2 / person :name (n3 / name :op1 "Meral" :op2 "Niron"))) :arg1 (k2 / kad?n :mod (ü / ülkü))) :snt3 (' / '' :arg1 (d / direction :mod (ü2 / ülkü))))
(p / possible-01 :polarity - :arg1 (p2 / provide-01 :arg1 (e / educate-01) :location (d / district :location-of (c / close-01 :arg1 (s / school) :time (d2 / date-entity :month 12 :day 14 :time-of (s2 / start-01 :arg1 (o / operation :arg1-of (m / major-02))))))))
(s / say-01 :arg0 (p / person :name (n / name :op1 "Ritchey")) :arg1 (m / monitor-01 :arg0 (d / doctor) :arg1 (s2 / she) :time (o / overnight) :location (h / hospital :poss (c / child :arg1-of (s3 / separate-02)) :arg0-of (c2 / cause-01 :arg1 (a / and :op1 (f / fall-01 :arg1 (g / girl)) :op2 (h2 / hit-01 :arg0 (g2 / girl) :arg1 (h3 / head :part-of (g3 / girl))))))))
(a / and :op1 (a2 / advanced-02 :arg1 (w / we) :arg2 (b / branch :mod (v / various) :part-of (i / industry :mod (v2 / various) :part-of (i2 / industry :mod (v3 / various)))) :time (p / period :mod (t / this))) :op2 (c / care :arg0 (w2 / we) :arg1 (a3 / and :op1 (b2 / biscuits) :op2 (c2 / chocolate) :op3 (c3 / confectionery) :op4 (c4 / confectionery))) :time (p2 / period :mod (t2 / this)))
(s / say-01 :arg0 (o / organization :name (n / name :op1 "Working" :op2 "Directions" :op3 "of" :op4 "the" :op5 "Arbitration" :op6 "Committee")) :arg1 (r / recommend-01 :arg1 (a / announce-01 :arg1 (r2 / reason :arg0-of (c / cause-01 :arg1 (r3 / recommend-01 :arg1 (a2 / announce-01 :arg1 (r4 / reason) :time (a3 / after :op1 (n2 / now) :quant (t / temporal-quantity :quant (N / N-A) :unit (m / month))))))))))
(m / multi-sentence :snt1 (c / confirm-01 :arg0 (p / person :name (n / name :op1 "Moskalevsky")) :arg1 (y / yes :topic (s / sell-01 :arg0 (w / we) :arg1 (f / factory)))) :snt2 (' / '' :mode (e / expressive)))
(a / attack-01 :arg0 (l / location :name (n / name :op1 "San" :op2 "Bernardino") :arg1-of (' / '')) :arg1 (c / country :name (n2 / name :op1 "U.S.")))
(a / and :op1 (b / become-01 :arg1 (p / person :name (n / name :op1 "Isaac" :op2 "Caldiero") :arg0-of (h / have-org-role-91 :arg2 (b2 / busboy))) :arg2 (o / ordinal-entity :value 1)) :op2 (b3 / become-01 :arg1 (p2 / person) :arg2 (o2 / ordinal-entity :value 1) :purpose (w / win-01 :arg0 (p3 / person) :arg1 (h2 / home :poss (o3 / organization :name (n2 / name :op1 "American" :op2 "Ninja" :op3 "Warrior"))) :time (n3 / night)) :time (n4 / night :ord (o4 / ordinal-entity :value 1))))
(c / contrast-01 :arg1 (c2 / country :domain (a / and :op1 (c3 / country :name (n / name :op1 "Russia")) :op2 (c4 / country :name (n2 / name :op1 "Turkey"))) :arg1-of (s / seem-01)) :arg2 (a2 / and :op1 (h / have-03 :polarity - :arg0 (c5 / country) :arg1 (m / many :degree (s2 / so)) :mod (a3 / actual)) :op2 (d / depend-01 :arg0 (a4 / and) :arg1 (o / other :mod (e / each)))))
(b / become-01 :arg1 (t / they) :arg2 (t2 / thing :arg0-of (s / shield-01 :arg2 (k / killer :arg0-of (k2 / kill-01)))))
(w / war :mod (c / civil))
(s / say-01 :arg0 (p / person :name (n / name :op1 "Gavin" :op2 "Grindon")) :arg1 (a / and :op1 (b / become-01 :arg1 (a2 / and :op1 (d / design-01 :arg1 (c / cruel)) :op2 (l / lecturer :location (o / organization :name (n2 / name :op1 "University" :op2 "of" :op3 "Essex")))) :arg2 (q / question-01 :quant (m / more))) :op2 (b2 / become-01 :arg1 (a3 / and) :arg2 (a4 / and :op1 (q2 / question-01 :arg0 (a5 / and)) :op2 (s2 / seek-01 :arg0 (a6 / and) :arg1 (t / take-01 :arg0 (a7 / and) :arg1 (w / work-01 :mod (p2 / politics)) :arg2 (i / idiot)))))))
(a / and :op1 (t / think-01 :arg0 (c / child :quant (m / most)) :arg1 (d / die-01 :arg1 (c2 / child) :purpose (p / punish-01 :arg0 (c3 / child) :arg1 (p2 / person :arg0-of (h / have-rel-role-91 :arg1 (c4 / child) :arg2 (f / father))))) :arg1-of (p3 / possible-01)) :op2 (e / end-up-03 :arg1 (c5 / child) :arg2 (l / lie-08 :arg0 (c6 / child)) :manner (s / somehow)))
(t / tension :location (b / between :op1 (c / country :name (n / name :op1 "Italy")) :op2 (o / organization :name (n2 / name :op1 "EU"))) :time (w / while))
(s / seem-01 :arg1 (m / mission :domain (h / he)) :arg2 (w / we))
(s / seem-01 :arg1 (m / mission :domain (h / he)) :arg2 (w / we))
(h / have-concession-91 :arg1 (f / fall-01 :arg1 (i / it) :arg4 (u / under :op1 (m / monetary-quantity :quant 30 :unit (d / dollar))) :time (r / recent) :arg1-of (c / cause-01 :arg0 (m2 / mark-01 :arg0 (l / level :arg1-of (l2 / low-04 :degree (m3 / more))) :arg1 (l3 / level :arg1-of (l4 / low-04 :degree (m4 / more))) :time (y / year :mod (l5 / last))))) :arg2 (c2 / continue-01 :arg1 (s / surprise-01 :arg1 (p / price-01 :arg1 (o / oil) :mod (c3 / crude)))))
(s / say-01 :arg0 (p / person :name (n / name :op1 "Martin" :op2 "McKee") :arg0-of (h / have-org-role-91 :arg1 (a / and :op1 (h2 / health :mod (c / country :name (n2 / name :op1 "N-A"))) :op2 (h3 / health :mod (p2 / public)) :location (a2 / and :op1 (o / organization :name (n3 / name :op1 "London" :op2 "School" :op3 "of" :op4 "Hygiene" :op5 "and" :op6 "Tropical" :op7 "Medicine")) :op2 (p3 / person :name (n4 / name :op1 "Simon" :op2 "Capewell") :arg0-of (h4 / have-org-role-91 :arg1 (o2 / organization :name (n5 / name :op1 "University" :op2 "of" :op3 "Liverpool")) :arg2 (p4 / professor))) :op3 (p5 / person :name (n6 / name :op1 "Simon" :op2 "Capewell") :arg0-of (h5 / have-org-role-91 :arg1 (o3 / organization :name (n7 / name :op1 "University" :op2 "of" :op3 "Liverpool")) :arg2 (p6 / professor))) :op4 (h6 / have-org-role-91 :arg0 (p7 / person) :arg1 (o4 / organization :name (n8 / name :op1 "University" :op2 "of" :op3 "Liverpool")) :arg2 (p8 / professor))) :op5 (h7 / have-org-role-91 :arg0 (p9 / person) :arg1 (o5 / organization :name (n9 / name :op1 "University" :op2 "of" :op3 "Liverpool")) :arg2 (p10 / professor))))) :arg1 (r / recommend-01 :arg1 (b / base-02 :arg1 (p11 / policy) :arg2 (t / thing :arg0-of (e / evidence-01 :arg1 (e2 / effective-04))))))
(w / wound-01 :arg1 (p / person :quant (a / at-least :op1 20)))
(a / and :op1 (f / front :domain (i / immigrate-01) :time (b / before :op1 (n / now) :quant (b2 / between :op1 (t / temporal-quantity :quant (N / N-A) :unit (m / month)) :op2 (t2 / temporal-quantity :quant (N2 / N-A) :unit (m2 / month))))) :op2 (b3 / be-located-at-91 :arg1 (i2 / immigrate-01) :arg2 (u / under :op1 (t3 / temporal-quantity :quant (N3 / N-A) :unit (m3 / month)))) :time (s / since :op1 (c / call-01 :arg0 (p / person :name (n2 / name :op1 "Donald" :op2 "Trump")) :arg1 (p2 / person :arg0-of (i3 / immigrate-01) :source (c2 / country :name (n3 / name :op1 "Mexico"))) :arg2 (c3 / campaign-01 :arg0 (p3 / person)))))
(a / and :op1 (p / participate-01 :arg0 (h / he) :location (l / location :name (n / name :op1 "Hague"))) :op2 (s / state-01 :arg0 (p2 / person :name (n2 / name :op1 "Koenders")) :arg1 (r / responsible-01 :arg0 (p3 / person :name (n3 / name :op1 "Assad")) :arg1 (r2 / refugee))) :medium (c / conference :location (c2 / conference)))
(g / guide-01 :arg0 (p / phone :mod (p2 / phone)) :arg1 (y / you) :time (r / rest :part-of (p3 / process-02)))
(a / and :op1 (p / possible-01 :arg1 (s / see-01 :arg1 (s2 / smoke) :arg2 (c / country :name (n / name :op1 "Turkey")) :prep-with (e / eye :part-of (n2 / naked))) :arg1-of (f / frequent-02)) :op2 (t / take-01 :arg0 (f2 / force :mod (s3 / security)) :arg1 (p2 / precautions :prep-with (c2 / car :location (b / border)))))
(p / play-11 :arg0 (h / he) :arg2 (t / thing :quant 65 :arg1-of (i / include-91 :arg2 (g / game :mod (l / league) :quant (b / between :op1 65 :op2 157)))) :mod (a / also) :time (d / date-entity :dayperiod (N / N-A)) :mod (a2 / also))
(c / cross-02 :arg0 (r / refugee :quant 2) :arg1 (b / border) :manner (a / agree-01 :arg0 (c2 / country :quant 2) :arg1 (c3 / cross-02 :arg0 (r2 / refugee) :arg1 (b2 / border) :location (f / foot))))
(a / and :op1 (b / broadcast-01 :arg0 (p / person :arg0-of (h / have-rel-role-91 :arg1 (c / comedy) :arg2 (f / friend))) :arg1 (c2 / comedy) :arg2 (c3 / comedy) :time (s / start-01 :arg0 (p2 / person) :arg1 (f2 / finish-01 :arg0 (p3 / person) :arg1 (e / episodes :quant 236 :mod (f3 / full))))))
(a / and :op1 (s / support-01 :arg0 (p / person :arg1-of (r / rank-01 :arg2 (r2 / reservations :quant (s2 / some)))) :arg1 (s3 / she) :manner (r3 / reservations :quant (s4 / some))) :op2 (c / cause-01 :arg0 (n / nominate-01 :arg1 (s5 / she)) :arg1 (s6 / she) :mod (o / only)))
(m / multi-sentence :snt1 (p / possible-01 :mode (i / interrogative) :arg1 (b / be?ikta :quant (m2 / multiple :op1 11))) :snt2 (f / follow-04))
(h / have-concession-91 :arg1 (d / differ-02 :arg1 (s / situation :poss (i / i)) :degree (b / bit :mod (l / little))) :arg2 (s2 / seem-01 :arg1 (l2 / logically :arg1 (i2 / it) :arg2 (i3 / i) :mod (t / too))))
(b / believe-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg2 (p2 / person :arg1-of (e / expert-01)))) :arg1 (p3 / possible-01 :arg1 (h2 / hold-01 :arg0 (p4 / person :arg1-of (e2 / expert-01) :arg0-of (s / see-01 :arg1 (f / fight-01 :arg0 (p5 / person) :arg2 (o / over :op1 (b2 / bargains))))) :arg1 (s2 / shoppers :arg0 (p6 / person)))))
(c / contrast-01 :arg2 (e / expect-01 :polarity - :arg0 (w / we) :arg1 (r / return-02 :arg1 (r2 / rate :mod (i / interest :mod (c2 / country :name (n / name :op1 "U.S.")))) :arg2 (n2 / normal-02 :arg1 (r3 / rate) :degree (m / more)) :mod (s / still)) :arg1-of (c3 / cause-01 :arg0 (s2 / seem-01 :arg1 (s3 / shock-01 :arg0 (s4 / seem-01 :arg1 (f / fear-01 :arg0 (m2 / many))) :mod (s5 / still))))))
(h / have-03 :arg0 (p / person :arg0-of (h2 / have-org-role-91 :arg1 (o / organization :name (n / name :op1 "15")) :arg2 (c / chairman))) :arg1 (d / difficult :time (t / time)) :time (w / want-01 :arg0 (p2 / person :arg0-of (h3 / have-org-role-91 :arg1 (p3 / party) :arg2 (m / member))) :arg1 (s / speak-01 :arg0 (p4 / person))))
(l / left :arg0 (- / -lrb- :name (n / name :op1 (a / actor) :op2 (-2 / -lrb-) :op3 (-3 / -lrb-))) :arg1 (-4 / -rrb- :mod (r / right)) :time (a2 / after :op1 (n2 / now) :quant (f / few :op1 (t / temporal-quantity :quant (N / N-A) :unit (y / year)))))
(s / support-01 :arg0 (t / they) :arg1 (a / academic) :manner (s2 / say-01 :arg0 (t2 / they) :arg1 (s3 / stand-01 :arg1 (w / we) :arg2 (i / initiative :name (n / name :op1 (p / peace)) :mod (p2 / peace)))))
(s / support-01 :arg0 (t / they) :arg1 (a / academic) :manner (s2 / say-01 :arg0 (t2 / they) :arg1 (s3 / stand-01 :arg1 (w / we) :arg2 (i / initiative :name (n / name :op1 (p / peace)) :mod (p2 / peace)))))
(a / and :op1 (c / close-13 :arg1 (f / family :arg1-of (h / have-org-role-91 :arg0 (p / person :name (n / name :op1 "Binladin")) :arg2 (m / member))) :arg2 (f2 / family :arg0-of (r / rule-03 :arg1 (c2 / country :name (n2 / name :op1 "Saudi" :op2 "Arabia")))) :duration (m2 / multiple :op1 (t / temporal-quantity :quant (N / N-A) :unit (d / decade)))) :op2 (r2 / run-01 :arg0 (f3 / family) :arg1 (p2 / project :arg1-of (m3 / major-02))))
(w / want-01 :arg0 (i / i) :arg1 (u / use-01 :arg0 (i2 / i) :arg1 (r / right-05 :arg1 (i3 / i) :arg2 (c / complain-01 :arg0 (i4 / i)))))
(s / say-01 :arg0 (p / person :name (n / name :op1 "LaForge")) :arg1 (t / try-01 :arg0 (w / we) :arg1 (g / get-04 :arg0 (w2 / we) :arg1 (c / come-01 :arg1 (p2 / person :arg0-of (s2 / study-01) :poss (w3 / we)) :arg4 (b / back)))))
(s / say-01 :arg0 (p / person :name (n / name :op1 "LaForge")) :arg1 (t / try-01 :arg0 (w / we) :arg1 (g / get-04 :arg0 (w2 / we) :arg1 (c / come-01 :arg1 (p2 / person :arg0-of (s2 / study-01) :poss (w3 / we)) :arg4 (b / back)))))
(a / and :op1 (c / carry-out-03 :arg0 (p / police) :arg1 (s / scene :location-of (c2 / crime-02))) :op2 (l / launch-01 :arg1 (o / operation :mod (m / multifaceted)) :purpose (a2 / arrest-01 :arg0 (p2 / police) :arg1 (t / terrorist :arg0-of (e / escape-01)))) :time (a3 / after :op1 (t2 / that)))
(m / multi-sentence :snt1 (a / arrive-01 :arg1 (a2 / arrive-01 :arg1 (p / person :name (n / name :op1 "Devlet" :op2 "Bahçeli") :arg0-of (h / have-org-role-91 :arg1 (o / organization :name (n2 / name :op1 "MHP" :op2 "Kocaeli")) :arg2 (d / deputy))) :arg4 (h2 / hospital) :purpose (v / visit-01 :arg0 (p2 / person) :arg1 (p3 / person :name (n3 / name :op1 "Saffet" :op2 "Sancakl") :arg0-of (h3 / have-org-role-91 :arg1 (o2 / organization) :arg2 (d2 / deputy)))))) :snt2 (e / explain-01 :mode (i / interrogative) :arg0 (y / you) :arg1 (t / that) :arg1-of (c / cause-01 :arg0 (k / know-01 :arg0 (y2 / you) :arg1 (u / underwent :arg0 (p4 / person :arg0-of (h4 / have-org-role-91 :arg1 (g / government-organization :name (n4 / name :op1 "N-A") :poss (w / we)) :arg2 (p5 / president :mod (g2 / general)))) :arg1 (a3 / angiography :arg1-of (c2 / control-01)))))))
(s / say-01 :arg0 (p / person :name (n / name :op1 "O'Steen")) :arg1 (a / and :op1 (h / have-03 :arg0 (a2 / and :op1 (h2 / he) :op2 (p2 / person :name (n2 / name :op1 "Prentiss"))) :arg1 (p3 / person :arg0-of (h3 / have-rel-role-91 :arg1 (a3 / and) :arg2 (d / daughter)))) :op2 (d2 / devastated :domain (p4 / person) :mod (' / ''))))
(r / remain-01 :arg1 (c / constable :poss (o / organization :name (n / name :op1 "Canning" :op2 "Vale"))) :arg3 (d / dry-08 :arg1 (o2 / organization)) :arg1-of (c2 / cause-01 :arg0 (c3 / coaxed :arg0 (h / he) :arg1 (m / man) :arg2 (l / location :name (n2 / name :op1 "Canning" :op2 "River")))))
(h / have-concession-91 :arg1 (p / prepare-02 :arg1 (c / company) :arg2 (h2 / hire-01 :arg0 (c2 / company) :arg1 (p2 / person :arg1-of (e / employ-01)) :purpose (a / and :op1 (h3 / help-01 :arg0 (p3 / person) :arg1 (s / store :arg2-of (s2 / staff-01))) :op2 (s3 / sell-01 :arg0 (p4 / person) :arg1 (p5 / product)) :op3 (d / deliver-01 :arg0 (p6 / person) :arg1 (p7 / product))) :arg2 (p8 / person))) :arg2 (a2 / and :op1 (b / be-located-at-91 :arg1 (t / they) :arg2 (a3 / away) :duration (t2 / temporal-quantity :quant (N / N-A) :unit (m / month))) :op2 (p9 / prepare-02 :arg1 (c3 / company) :arg2 (h4 / hire-01 :arg0 (c4 / company) :arg1 (p10 / person :arg1-of (e2 / employ-01))))))
(a / and :op1 (p / produce-01 :arg0 (p2 / person :name (n / name :op1 "Roshen")) :arg1 (r / rate-entity-91 :arg1 450 :arg2 (t / temporal-quantity :quant (N / N-A) :unit (y / year)))) :op2 (b / belong-01 :arg0 (p3 / person) :arg1 (p4 / person :name (n2 / name :op1 "Petro" :op2 "Porochenko") :arg0-of (h / have-org-role-91 :arg1 (c / country) :arg2 (p5 / president)))) :time (y2 / year :mod (e / every)))
(a / and :op1 (w / wake-up-02 :arg1 (g / girl) :time (l / late :degree (m / more))) :op2 (d / discover-01 :arg0 (g2 / girl) :arg1 (m2 / miss-01 :arg1 (p / phone))) :op3 (f / find-01 :arg0 (g3 / girl) :arg1 (h / hand :part-of (p2 / person :name (n / name :op1 "Hogg")))))
(a / and :op1 (g / give-01 :arg1 (p / portion :mod (g2 / good) :part-of (s / store)) :arg2 (s2 / section :mod (f / freezer :mod (m / massive))) :arg1-of (c / cause-01 :arg0 (f2 / find-01 :arg0 (y / you) :arg1 (a2 / and :op1 (l / leave-11 :arg1-of (f3 / freeze-01)) :op2 (m2 / melon :mod (b / bitter)))))) :op2 (b2 / bitter :mod (b3 / bitter) :domain (a3 / and :op1 (m3 / melon :mod (b4 / bitter)) :op2 (m4 / melon :mod (b5 / bitterly)) :op3 (r / report :mod (b6 / blood :mod (b7 / beef))) :op4 (a4 / and :op1 (b8 / balls :mod (p2 / pork)) :op2 (f4 / food :mod (c2 / commercially-prepared))))))
(c / come-03 :arg1 (b / bid-03 :mod (f / final)) :arg2 (e / eski?ehirspor :arg1 (a / and :op1 (f2 / fan :mod (g / g.saray)) :op2 (t / thing :arg1-of (c2 / come-01 :arg3 (f3 / fan :arg1-of (c3 / come-01 :arg3 (f4 / fan :mod (g2 / game :mod (f5 / final) :poss (h / he)))))))) :time (e2 / ever)))
(p / possible-01 :arg1 (r / range-01 :arg1 (m / move-01 :arg2 (h / halls)) :arg3 (n / nerve-racking :mod (m2 / mildly)) :arg3 (n2 / nerve-racking :degree (t / total))))
(s / say-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg2 (o / official))) :arg1 (k / kill-01 :arg1 (p2 / person :arg2-of (i / include-01 :arg1 (b / boy :mod (4 / 4-year-old))) :arg2-of (i2 / include-01 :arg1 (b2 / boy :arg1-of (k2 / kill-01 :location (s2 / south :part-of (c / country :name (n / name :op1 "Nepal"))))))) :location (s3 / south :part-of (c2 / country)) :time (a / after :op1 (d / demonstrate-01 :arg0 (p3 / police) :arg1 (d2 / demonstrate-01 :arg0 (p4 / police) :arg1 (o2 / oppose-01 :arg0 (p5 / police) :arg1 (c3 / constitution :mod (n2 / new) :arg1-of (p6 / propose-01) :poss (c4 / country))))))))
(h / hard-02 :arg1 (w / work-09 :arg1 (i / it)) :degree (q / quite))
(a / and :op1 (s / sealed :arg0 (c / country :name (n / name :op1 "Hungary")) :arg1 (b / border-01 :arg1 (c2 / country) :arg2 (b2 / border-01 :arg1 (c3 / country) :arg2 (c4 / country :name (n2 / name :op1 "Serbia")) :mod (e / emergency)))) :op2 (d / detain-01 :arg0 (c5 / country) :arg1 (p / person :arg0-of (t / try-01 :arg1 (e2 / enter-01 :arg0 (p2 / person) :arg1 (a2 / and :op1 (p3 / person :arg0-of (t2 / try-01 :arg1 (e3 / enter-01 :arg0 (p4 / person) :manner (l / law :polarity -)))) :op2 (a3 / aim-01 :arg0 (p5 / person) :arg1 (s2 / shut-down-05 :arg0 (p6 / person) :arg1 (f / flow-01 :arg1 (p7 / person :arg0-of (u / use-01)))))))))))
(a / and :op1 (f / fit :arg1 (l / location :name (n / name :op1 "Bergen")) :arg2 (s / songs :name (n2 / name :op1 129 :op2 (s2 / songs) :op3 (s3 / songs)))) :op2 (f2 / film :arg0 (l2 / location :name (n3 / name :op1 "Bergen")) :arg1 (f3 / film) :time (a2 / after :op1 (n4 / now) :quant (t / temporal-quantity :quant (N / N-A) :unit (y / year)))))
(p / pain-01 :mod (a / as-well))
(o / oppose-01 :arg0 (w / we) :arg1 (t / terror) :prep-against (p / person :arg0-of (h / have-org-role-91 :arg1 (o2 / organization :name (n / name :op1 "CHP")) :arg2 (m / member))) :arg1-of (c / cause-01 :arg0 (t2 / terror)) :arg1-of (c2 / cause-01 :arg0 (t3 / terror)))
(e / examine-01 :arg0 (p / person :name (n / name :op1 "James" :op2 "Andrews") :arg0-of (c / cease-01 :arg1 (s / surgery-01 :arg1 (p2 / person) :arg2 (s2 / shoulder :part-of (p3 / person :name (n2 / name :op1 "Sanchez"))) :direction (b / back)))) :arg1 (h / he))
(s / say-01 :arg0 (p / police) :arg1 (d / drive-01 :arg0 (p2 / person) :direction (a / away) :manner (s2 / stop-01 :polarity - :arg1 (h / help-01 :arg0 (p3 / person) :arg1 (p4 / person :arg1-of (i / injure-01) :arg1-of (i2 / injure-01))))))
(m / multi-sentence :snt1 (t / try-01 :arg0 (a / and :op1 (p / person :arg0-of (t2 / try-01 :arg1 (r / reach-01 :arg0 (p2 / person) :arg1 (l / location :name (n / name :op1 "Kalimnos" :op2 "Island"))))) :op2 (p3 / person :arg0-of (h / have-rel-role-91 :arg1 (c / country :name (n2 / name :op1 "Greece")) :arg2 (c2 / child))) :op3 (p4 / person :arg0-of (h2 / have-rel-role-91 :arg1 (p5 / person) :arg2 (c3 / child))) :op4 (p6 / person :arg0-of (h3 / have-rel-role-91 :arg1 (p7 / person) :arg2 (c4 / child))) :op5 (p8 / person :arg0-of (h4 / have-rel-role-91 :arg1 (p9 / person) :arg2 (c5 / child))) :op6 (p10 / person :arg0-of (h5 / have-rel-role-91 :arg1 (p11 / person) :arg2 (c6 / child))) :op6 (p12 / person :arg0-of (h6 / have-rel-role-91 :arg1 (p13 / person) :arg2 (c7 / child))) :op6 (p14 / person :arg0-of (h7 / have-rel-role-91 :arg1 (p15 / person) :arg2 (c8 / child))) :op6 (p16 / person :arg0-of (h8 / have-rel-role-91 :arg1 (p17 / person) :arg2 (c9 / child))) :op6 (p18 / person :arg0-of (h9 / have-rel-role-91 :arg1 (p19 / person) :arg2 (c10 / child))) :op6 (p20 / person :arg0-of (h10 / have-rel-role-91 :arg1 (p21 / person) :arg2 (c11 / child))) :op6 (p22 / person :arg0-of (h11 / have-rel-role-91 :arg1 (p23 / person) :arg2 (c12 / child))) :op7 (p24 / person :arg0-of (h12 / have-rel-role-91 :arg1 (p25 / person) :arg2 (c13 / child))) :op8 (p26 / person :arg0-of (h13 / have-rel-role-91 :arg1 (p27 / person) :arg2 (c14 / child))) :op8 (p28 / person :arg0-of (h14 / have-rel-role-91 :arg1 (p29 / person) :arg2 (c15 / child))) :op8 (p30 / person :arg0-of (h15 / have-rel-role-91 :arg1 (p31 / person) :arg2 (c16 / child))) :op8 (p32 / person :arg0-of (h16 / have-rel-role-91 :arg1 (p33 / person) :arg2 (c17 / child))) :time (t3 / today))) :snt2 (i / island :time (t4 / today)))
(c / cause-01 :arg0 (a / and :op1 (d / detain-01 :arg1 (p / person :arg0-of (w / write-01))) :op2 (p2 / person :name (n / name :op1 "Erdem" :op2 "Gül")) :op3 (p3 / person :arg0-of (w2 / write-01)) :op4 (p4 / person :arg0-of (w3 / write-01)) :op5 (p5 / person :arg0-of (w4 / write-01))) :arg1 (i / important :domain (e / express-01 :arg0 (j / journalist :location (c2 / country :name (n2 / name :op1 "Turkey"))) :arg1 (i2 / important :domain (a2 / and :op1 (j2 / journalist) :op2 (h / have-03 :arg0 (j3 / journalist) :arg1 (p6 / permit-01 :arg0 (j4 / journalist) :arg1 (o / opine-01 :arg0 (j5 / journalist) :arg1 (a3 / and :op1 (l / limit-01 :arg1 (a4 / and :op1 (l2 / limit-01) :op2 (c3 / censorship)) :mod (a5 / any))))))))) :mod (a6 / also)))
(c / check-out-05 :arg0 (d / doctor) :arg1 (i / it) :mod (a / again) :time (t / tomorrow))
(a / and :op1 (l / lie-07 :arg1 (g / gas :arg1-of (i / include-91 :arg2 (g2 / gas :arg1-of (n / natural-03)) :arg3 (m / most))) :arg2 (w / water :arg1-of (d / deep-02)) :location (w2 / water :arg1-of (d2 / deep-02))) :op2 (r / require-01 :arg0 (w3 / wait-01) :arg1 (a2 / and :op1 (c / complex) :op2 (s / solution :mod (e / expensive)) :example (b / build-01 :arg1 (p / plant :name (n2 / name :op1 (l2 / lng)) :arg1-of (n3 / natural-03) :mod (g3 / gas)) :source (s2 / scratch)))))
(c / contrast-01 :arg1 (c2 / close-10 :arg1 (w / we) :arg2 (i / inside :op1 2006) :degree (v / very)) :arg2 (r / realistic-03 :arg1 (i2 / i) :degree (e / enough)))
(r / refer-02 :arg0 (p / person :name (n / name :op1 "Kokkinakis") :mod (y / young :degree (m / most)) :arg1-of (i / include-91 :arg2 (p2 / person :arg0-of (h / have-org-role-91 :arg1 (d / duo :mod (e / extreme)) :arg3 (a / apprentice-01 :arg0 (p3 / person)))) :arg1-of (r2 / regular-02))) :arg1 (s / spotlight :mod (u / unwelcome)) :arg2 (s2 / spotlight :arg0 (p4 / person :name (n2 / name :op1 "Stan" :op2 "Wawrinka") :arg0-of (h2 / have-org-role-91 :arg1 (p5 / person :name (n3 / name :op1 "Stan" :op2 "Wawrinka") :location (c / city :name (n4 / name :op1 "Montreal"))) :arg2 (s3 / sledge))) :arg1 (p6 / person)) :arg1-of (r3 / regular-02))
(d / differ-02 :arg1 (p / photograph-01) :arg2 (a / and :op1 (s / southeast :part-of (s2 / southeast)) :op2 (p2 / photograph-01 :source (a2 / and :op1 (c / country :name (n / name :op1 "Syria")) :op2 (c2 / country :name (n2 / name :op1 "Lebanon"))))))
(b / building :mod (h / history) :mod (h2 / history) :mod (h3 / history))
(s / support-01 :arg0 (p / person :name (n / name :op1 "Burak" :op2 "Y?lmaz") :arg1-of (i / include-91 :arg2 (s2 / stand :mod (s3 / stand)) :arg3 (m / most))) :arg1 (p2 / person) :time (l / late :degree (m2 / more)))
(h / have-03 :arg0 (g / guy :mod (o / one)) :arg1 (p / policy :arg0-of (c / cause-01 :arg1 (i / invited :polarity - :arg1 (d / door) :condition (l / locked :polarity - :arg1 (d2 / door))))))
(d / dismiss-02 :arg0 (o / other) :arg1 (h / he) :arg2 (j / joke-01 :arg2 (j2 / joke-01)))
(a / and :op1 (r / refer-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (o / organization :name (n / name :op1 "Brisbane" :op2 "Broncos")) :arg2 (c / coach))) :arg1 (p2 / person :name (n2 / name :op1 "Wayne" :op2 "Bennett") :arg0-of (r2 / refer-01 :arg1 (s / storm) :arg2 (s2 / storm))) :arg2 (s3 / storm) :time (a2 / after :op1 (w / win-01 :arg0 (p3 / person) :arg1 (g / game :mod (t / that) :topic (l / league :mod (r3 / rugby)))))) :op2 (s4 / say-01 :arg0 (p4 / person) :arg1 (' / '' :polarity - :arg1 (l2 / location :name (n3 / name :op1 "Queensland") :quant 2) :mod (b / big :degree (t2 / too)) :destination (w2 / wrestling))))
(e / enrich-01 :arg1 (e2 / experience-01) :arg2 (d / design-01 :arg1 (e3 / experience-01)) :manner (d2 / design-01 :arg1 (e4 / experience-01)))
(t / thing :arg2-of (c / copy-01 :arg1 (o / organization :name (n / name :op1 "BBC" :op2 "Radio") :mod (c2 / classic))) :li 3)
(m / multi-sentence :snt1 (s / stick-01 :arg1 (p / person :name (n / name :op1 "Neilson")) :arg2 (t / thing :arg1-of (s2 / say-01 :arg0 (h / he)))) :snt2 (c / contrast-01 :arg1 (c2 / comment-01 :polarity - :arg0 (i / i) :arg3 (i2 / integrity :mod (a / any))) :arg2 (c3 / comment-01 :polarity - :arg0 (i3 / i) :arg3 (p2 / perform-01))))
(s / say-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (o / organization :name (n / name :op1 "Twins")) :arg2 (p2 / person :arg0-of (m / manage-01 :arg1 (o2 / organization))))) :arg1 (p3 / person :name (n2 / name :op1 "Paul" :op2 "Molitor") :arg0-of (h2 / have-org-role-91 :arg1 (o3 / organization) :arg3 (m2 / manage-01 :arg1 (o4 / organization)))) :mod (b / big))
(g / get-01 :arg0 (p / parade-02 :mod (s / secret) :mod (s2 / secret) :poss (s3 / state :name (n / name :op1 "Victoria"))) :arg1 (r / rating :arg1-of (l / low-04 :degree (m / more))) :time (h / history :poss (s4 / state :name (n2 / name :op1 "Victoria"))) :time (b / before :op1 (n3 / now) :quant (b2 / between :op1 (t / temporal-quantity :quant (N / N-A) :unit (m2 / month)) :op2 (t2 / temporal-quantity :quant (N2 / N-A) :unit (m3 / month)))))
(i / imagine-01 :arg0 (i2 / i) :arg1 (p / possible-01 :arg1 (u / understand-01 :arg0 (y / you) :arg1 (t / this) :time (n / now))))
(p / possible-01 :arg1 (j / judge-01 :arg0 (y / you) :arg1 (y2 / you) :time (s / say-01 :arg0 (y3 / you) :arg1 (a / and :op1 (p2 / penalize-01 :arg1-of (p3 / penalize-01)) :op2 (c / card :mod (r / red)) :domain (i / it)))))
FAILED_TO_PARSE#Two concepts in a row.
(c / cup)
(a / and :op2 (a2 / anger-01 :arg1 (t / they) :location (c / city :name (n / name :op1 "Washington")) :mod (t2 / too)))
(a / and :op1 (s / sit-01 :arg1 (w / we) :arg2 (u / under :op1 (w2 / wait-01 :arg1 (w3 / we) :arg2 (c / come-01 :arg1 (w4 / we))))) :op2 (r / realize-01 :arg0 (i / i) :arg1 (s2 / sit-01 :arg1 (p / person :name (n / name :op1 "Diana") :arg0-of (h / have-org-role-91 :arg2 (s3 / senator))) :arg2 (n2 / next :prep-to (i2 / i)))) :op3 (d / dawns :arg0 (p2 / person) :arg1 (s4 / sit-01 :arg1 (p3 / person) :arg2 (n3 / next)) :time (t / trailer :prep-for (d2 / documentary :name (n4 / name :op1 (' / '')))) :time (b / back :op1 (d3 / date-entity :dayperiod (N / N-A)))))
(s / suppose-02 :arg1 (m / map) :arg2 (s2 / suppose-02 :arg1 (a / and :op1 (p / person :name (n / name :op1 "Janet" :op2 "L." :op3 "Yellen") :arg0-of (h / have-org-role-91 :arg1 (g / government-organization) :arg2 (c / chairwoman))) :op2 (p2 / person :arg0-of (h2 / have-rel-role-91 :arg1 (p3 / person) :arg2 (c2 / colleagues)))) :arg2 (p4 / put-01 :arg0 (a2 / and) :arg1 (i / interest :mod (e / economy) :poss (n2 / nation)) :arg2 (a3 / above :op1 (o / other :quant (a4 / all))))))
(h / hear-01 :polarity - :arg0 (i / i) :arg1 (b / bring-01 :arg0 (p / person :name (n / name :op1 "Trent" :op2 "Robinson")) :arg1 (w / wrestling :arg1 (p2 / person)) :time (b2 / beat-03 :arg0 (p3 / person) :arg1 (w2 / we :quant (2 / 24-2)))) :arg1-of (s / say-01 :arg0 (p4 / person :name (n2 / name :op1 "Bellamy"))) :medium (w3 / wednesday))
(h / hard-02 :arg1 (s / see-01 :arg1 (b / break-01 :arg0 (t / they) :arg1 (l / leg :part-of (p / person :mod (c / country :name (n / name :op1 "Scotland"))))) :arg0-of (c2 / cause-01 :arg1 (p2 / possible-01 :arg1 (s2 / spend-01 :arg0 (p3 / person :mod (c3 / country :name (n2 / name :op1 "UK"))) :arg1 (p4 / prevent-01 :arg0 (p5 / person) :arg1 (s3 / something :arg1-of (w / want-01 :polarity - :arg0 (p6 / person) :arg1-of (w2 / want-01 :polarity - :arg0 (p7 / person) :arg1-of (w3 / want-01 :polarity - :arg0 (p8 / person) :arg1-of (w4 / want-01 :arg0 (p9 / person) :arg1-of (w5 / want-01 :polarity - :arg0 (p10 / person) :arg1-of (w6 / want-01 :polarity - :arg0 (p11 / person) :arg1-of (w7 / want-01 :arg0 (p12 / person) :arg1-of (w8 / want-01 :polarity - :arg0 (p13 / person) :arg1-of (w9 / want-01 :arg0 (p14 / person) :arg1-of (w10 / want-01 :polarity - :arg0 (p15 / person) :mod (e / either))))))))))))))))))
(e / email-01 :mode (i / imperative) :arg0 (y / you) :arg2 (p / perform-01 :arg0 (h / he) :location (f / film :name (n / name :op1 (s / sarma) :op2 (s2 / sarma) :op3 (' / '')) :poss (p2 / person :name (n2 / name :op1 "Tolga" :op2 "Çelik"))) :arg1-of (s3 / succeed-01 :arg0 (p3 / person :name (n3 / name :op1 "Kadir" :op2 "Çermik")) :arg1-of (s4 / succeed-01) :arg1-of (s5 / succeed-01 :arg0 (w / woman :quant 4 :mod (t / this)) :arg1-of (s6 / succeed-01)))))
(s / say-01 :arg0 (o / organization :name (n / name :op1 "Health" :op2 "Ministry")) :arg1 (i / injure-01 :arg1 (p / person :quant 394 :arg2-of (t / total-01 :arg1 (p2 / person :quant 394))) :mod (a / also)))
(d / divide-02 :arg0 (w / we) :arg1 (w2 / world) :arg2 (r / region))
(c / come-01 :arg1 (d / day :mod (b / between :op1 (t / temporal-quantity :quant (N / N-A) :unit (d2 / day)) :op2 (t2 / temporal-quantity :quant (N2 / N-A) :unit (d3 / day)))) :arg4 (c2 / concert :poss (p / person :name (n / name :op1 "Jean" :op2 "Baptiste" :op3 "Hardy")) :arg0-of (s / sing-01 :arg1 (' / '' :mod (a / album) :location ('2 / '' :mod (v / verra))))) :time (d4 / date-entity :month 1 :day 30))
(d / discover-01 :arg0 (p / police) :arg1 (a / and :op1 (- / -lrb- :arg1 (p2 / person :arg2-of (s / suspect-01)) :arg2 (p3 / person :arg2-of (s2 / suspect-01))) :op2 (d2 / discover-01 :arg0 (p4 / police) :arg1 (p5 / person :arg2-of (s3 / suspect-01))) :op3 (d3 / discover-01 :arg0 (p6 / police) :arg1 (p7 / person :arg2-of (s4 / suspect-01) :domain (p8 / person :arg2-of (s5 / suspect-01))) :arg1-of (c / cause-01 :arg0 (a2 / and :op1 (h / help-01 :arg0 (p9 / person :arg2-of (s6 / suspect-01)) :arg1 (h2 / help-01 :arg0 (p10 / person) :arg1 (m / mechanism :arg0-of (r / reprocess-01 :arg1 (c2 / card)) :mod (c3 / card :name (n / name :op1 (' / ''))))) :arg2 (m2 / mechanism :name (n2 / name :op1 ('2 / '')) :mod (c4 / card :name (n3 / name :op1 ('3 / '')) :mod (c5 / card :name (n4 / name :op1 ('4 / '')))) :arg1-of (p11 / place-01 :arg2 (a3 / atm) :location (p12 / province :arg1-of (d4 / differ-02) :location (c6 / country :name (n5 / name :op1 "Turkey")))))))))))
(s / say-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (o / organization :name (n / name :op1 "Tigers")) :arg2 (p2 / person :arg0-of (m / manage-01 :arg1 (o2 / organization)))) :arg0-of (h2 / have-org-role-91 :arg1 (o3 / organization) :arg3 (m2 / manage-01 :arg1 (o4 / organization)))) :arg1 (f / fun :domain (w / win-01 :quant (a / all))) :arg1-of (s2 / say-01 :arg0 (p3 / person :name (n2 / name :op1 "Brad" :op2 "Ausmus") :arg0-of (h3 / have-org-role-91 :arg1 (o5 / organization) :arg2 (p4 / person :arg0-of (m3 / manage-01 :arg1 (o6 / organization)))))))
(g / give-01 :arg0 (s / state :arg0-of (h / have-org-role-91 :arg1 (r / region :quant 2 :mod (e / emergency)) :arg2 (r2 / region :mod (e2 / emergency)))) :arg1 (p / power :mod (g2 / great :degree (m / more))) :arg2 (a / and :op1 (d / deal-01 :arg0 (a2 / authority) :arg2 (c / crisis)) :op2 (a3 / allow-01 :arg0 (p2 / power) :arg1 (a4 / and :op1 (s2 / shut-down-05 :arg0 (p3 / power) :arg1 (r3 / road)) :op2 (s3 / speed-01 :arg0 (p4 / power) :arg1 (c2 / case-03 :mod (c3 / court :mod (m2 / macro))))))))
(f / find-02 :arg0 (p / poll-01 :arg0 (o / organization :name (n / name :op1 "Quinnipiac")) :location (s / state :name (n2 / name :op1 "Iowa")) :time (w / week :mod (l / last))) :arg1 (v / view-02 :arg0 (p2 / person :arg1-of (i / include-91 :arg2 (p3 / person :arg0-of (r / republican)) :arg3 (p4 / percentage-entity :value 60))) :arg1 (p5 / person :name (n3 / name :op1 "Trump")) :mod (f2 / favorable)) :time (w2 / week :mod (l2 / last)) :location (s2 / state :name (n4 / name :op1 "Iowa")))
(r / recommend-01 :arg0 (p / person :name (n / name :op1 "Lopez")) :arg1 (u / use-01 :arg0 (a / and :op1 (p2 / person :arg0-of (h / have-rel-role-91 :arg1 (p3 / person :arg0-of (h2 / have-rel-role-91 :arg1 (p4 / person :arg0-of (h3 / have-rel-role-91 :arg1 (p5 / person) :arg2 (p6 / parent))) :arg2 (p7 / parent))) :arg2 (p8 / parent))) :op2 (p9 / person :arg0-of (t / teach-01))) :arg1 (o / or :op1 (p10 / product :mod (n2 / nonalcoholic)) :op2 (p11 / person :arg0-of (t2 / teach-01))) :arg2 (a2 / and :op1 (t3 / thing :arg1-of (p12 / produce-01 :arg0 (p13 / person))) :op2 (t4 / thing :arg1-of (w / wipes :arg0 (p14 / person))))) :arg2 (r2 / reach-01 :arg0 (r3 / reach-01 :arg0 (c / child))))
(r / report)
(h / have-condition-91 :arg1 (p / possible-01 :arg1 (m / meet-02 :arg0 (w / we) :arg1 (t / they) :location (t2 / there))) :arg2 (m2 / mention-01 :arg0 (t3 / they) :arg1 (m3 / mean-01 :arg1 (i / it) :arg2 (s / stage :mod (s2 / some)))))
(d / develop-02 :arg1-of (c / comfortable-02 :polarity -) :mod (a / also) :mod (a2 / also))
(a / and :op1 (r / reach-01 :arg0 (p / person :name (n / name :op1 "Aaron" :op2 "Hicks") :arg0-of (h / have-org-role-91 :arg2 (f / fielder :mod (r2 / right)))) :arg1 (s / single-02 :mod (b / bunt))) :op2 (g / get-02 :arg0 (p2 / person :name (n2 / name :op1 "Simon")) :arg1 (s2 / swinging :arg0 (p3 / person) :arg1 (s3 / swinging :arg0 (p4 / person) :arg1 (s4 / swinging :arg0 (p5 / person) :arg1 (p6 / person :name (n3 / name :op1 "Blaine" :op2 "Hardy") :arg0-of (h2 / have-org-role-91 :arg2 (l / left-hander))))) :ord (o / ordinal-entity :value 2))))
(c / consider-01 :arg1 (n / normal-02 :arg1 (h / have-03 :arg1 (i / interest-01 :arg1 (t / they) :arg2 (l / life :poss (t2 / they))))) :arg1-of (n2 / normal-02 :arg2 (e / extent :quant (s / some))))
(r / release-01 :arg1 (b / body) :arg2 (a / and :op1 (p / person :arg0-of (h / have-org-role-91 :arg2 (k / king))) :op2 (p2 / person :arg0-of (h2 / have-org-role-91 :arg2 (k2 / king))) :op3 (p3 / person :arg0-of (h3 / have-org-role-91 :arg1 (f / family :arg1-of (h4 / have-org-role-91 :arg0 (p4 / person :name (n / name :op1 "bin" :op2 "Laden")) :arg2 (m / member))) :arg2 (m2 / member)))) :arg0-of (l / leave-14 :arg1 (i / injure-01 :quant 394 :arg1-of (i2 / injure-01)) :mod (a2 / also)))
(c / cause-01 :arg0 (i / indisputable :arg1 (a / and) :arg2 (w / we)))
(s / say-01 :arg1 (t / think-01 :arg0 (i / i) :arg1 (w / wait-01 :arg1 (w2 / we) :arg2 (s2 / serious-01 :arg1 (p / person) :arg2 (t2 / this)) :arg1-of (l / long-03 :degree (t3 / too)))) :arg2 (p2 / person :name (n / name :op1 "N-A")))
(' / '' :mod ('2 / '') :domain (i / it) :mod (j / just))
(l / like-02 :arg0 (i / i) :arg1 (c / convey-01 :arg0 (i2 / i) :arg1 (c2 / condolence :poss (i3 / i)) :arg2 (p / person :mod (g / german)) :beneficiary (f / family :arg1-of (h / have-org-role-91 :arg0 (i4 / i) :arg2 (m / member)) :mod (e / especially))))
(p / point-out-02 :arg0 (p2 / person :name (n / name :op1 "Bellamy")) :arg1 (c / contest :arg1-of (h / high-02 :degree (m / more)) :arg1-of (c2 / contested :degree (m2 / more) :compared-to (a / and :op1 (o / organization :name (n2 / name :op1 "Broncos")) :op2 (o2 / organization :name (n3 / name :op1 "Cowboys"))))) :mod (a2 / also))
(l / link-01 :polarity - :arg1 (h / he) :arg2 (o / or :op1 (a / ankles :arg1 (h2 / he)) :op2 (i / injure-01 :arg1 (h3 / he))) :time (b / before))
(i / interesting :domain (t / this) :degree (m / most) :time (m2 / morning :mod (a / all)) :domain (t2 / this))
(c / contrast-01 :arg1 (t / think-01 :arg0 (p / person :name (n / name :op1 "Tony" :op2 "Blair")) :arg1 (s / same-01 :arg1 (t2 / they) :arg2 (s2 / same-01 :arg1 (t3 / they) :arg2 (t4 / they)) :degree (m / much)) :mod (a / actual)) :arg2 (r / realize-01 :arg0 (p2 / person) :arg1 (o / obligate-01 :arg1 (y / you) :arg2 (p3 / pass-01 :arg0 (y2 / you) :arg1 (b / bananas) :purpose (a2 / and :op1 (h / have-06 :arg0 (y3 / you) :arg1 (s3 / swim-01 :arg0 (y4 / you) :arg2 (y5 / you))) :op2 (h2 / have-03 :arg0 (y6 / you) :arg1 (t5 / tea :mod (a3 / again))))) :time (b2 / be-located-at-91 :arg1 (y7 / you) :arg2 (c2 / cage)))))
(a / ask-01 :arg0 (p / person :arg0-of (p2 / provide-01 :arg1 (h / holiday)) :arg0-of (h2 / have-org-role-91 :arg1 (p3 / person :arg0-of (h3 / have-rel-role-91 :arg1 (h4 / he) :arg2 (k / kid))) :arg2 (p4 / person :arg0-of (h5 / have-rel-role-91 :arg1 (p5 / person) :arg2 (k2 / kid)))) :arg0-of (h6 / have-org-role-91 :arg2 (m / minister :mod (p6 / prime)))) :arg1 (e / environment :quant 1971 :arg1-of (f / fable :arg0 (d / doctor :name (n / name :op1 "Seuss") :mod (e2 / exact)))) :arg2 (p7 / person :arg0-of (p8 / provide-01 :arg1 (h7 / holiday))))
(b / bring-01 :arg1 (s / she) :arg2 (m / moment :mod (t / this)) :arg1-of (c / cause-01 :arg0 (a / and :op1 (e / enjoy-01 :polarity - :arg0 (s2 / she) :arg1 (l / love-01 :arg1 (p / paternal))) :op2 (s3 / spend-01 :arg1 (c2 / childhood :poss (s4 / she)) :location (l2 / loneliness))) :op3 (f / fact :domain (t2 / think-01 :arg0 (s5 / she) :arg1 (u / understand-01 :polarity - :arg0 (s6 / she))))))
(a / and :op1 (f / fill-01 :arg1 (p / pot :poss (p2 / pot :mod (c / cooking) :arg1-of (d / deep-02))) :arg2 (w / water)) :op2 (p3 / place-01 :arg1 (s / strainer :consist-of (a2 / aircraft-type :name (n / name :op1 "N-A"))) :arg2 (i / inside :op1 (p4 / pot))))
(a / and :op1 (s / speaking :arg0 (s2 / speak-01 :arg1 (e / emotions :arg1-of (s3 / start-01 :arg1-of (p / possible-01 :polarity -)))) :arg2 (w / we)) :op2 (v / visit-01 :arg0 (p2 / person :arg0-of (v2 / visit-01) :mod (a2 / artists)) :arg1 (w2 / world :mod (f / fabulous) :part-of (a3 / and :op1 (c / colour) :op2 (m / military :name (n / name :op1 "N-A")) :op3 (s4 / stains)) :poss (p3 / person))) :location (p4 / paintings :poss (p5 / person)))
(g / grow-01 :arg1 (l / lamb) :location (a / area))
(s / say-01 :arg0 (c / crisis :mod (f / finance) :location (c2 / continent :name (n / name :op1 "Asia")) :arg2-of (l / lead-02 :arg0 (g / government-organization :name (n2 / name :op1 "Fed")))) :arg1 (c3 / cut-02 :arg0 (g2 / government-organization) :arg1 (r / rate :mod (b / benchmark) :poss (g3 / government-organization)) :arg2 (p / point :quant 0.75 :mod (p2 / percentage-entity :value (N / N-A))) :arg1-of (h / have-concession-91 :arg2 (i / imply-01 :arg0 (c4 / crisis) :arg1 (t / thing :arg1-of (i2 / imply-01 :arg0 (g4 / grow-01 :arg1 (c5 / country :name (n3 / name :op1 "U.S."))))) :arg1-of (l2 / limit-01)))))
(w / word-01 :arg0 (p / person :name (n / name :op1 "Putin")))
(a / and :op1 (r / read-01 :arg1 (p / person :arg0-of (r2 / research-01))) :op2 (w / write-01 :arg0 (p2 / person) :arg1 (a2 / activity-06 :arg1 (b / brain)) :prep-with (l / light)))
(s / say-01 :arg0 (i / information :medium (w / website :poss (o / organization :name (n / name :op1 "Der" :op2 "Spiegel") :medium (w2 / weekly)))) :arg1 (d / decide-01 :arg0 (o2 / organization :name (n2 / name :op1 "German" :op2 "Federal" :op3 "Prosecutor" :op4 "'s" :op5 "Office")) :arg1 (b / bring-01 :arg1 (b2 / body) :arg2 (c / country :name (n3 / name :op1 "Germany")))))
(a / and :op1 (e / eat-01 :arg0 (i / i) :arg1-of (c / continue-01) :time (a2 / and :op1 (s / stress-01 :arg1 (i2 / i)) :op2 (a3 / angry :domain (i3 / i))) :arg1-of (c2 / continue-01)) :op2 (g / gain-02 :arg0 (i4 / i) :arg1 (w / weight)))
(c / contrast-01 :arg2 (r / recovery :arg1 (t / this) :arg1-of (b / bad-05 :degree (m / most)) :time (p / period :mod (s / samples))))
(c / contrast-01 :arg1 (d / disappear-01 :arg1 (e / explode-01 :arg1-of (p / plant-01 :arg2 (t / terrorist :location (c2 / criminal-organization :name (n / name :op1 "PKK"))))) :path (c3 / control-01 :mod (r / remote))) :arg2 (p2 / pass-01 :arg1 (c4 / car :mod (p3 / police) :mod (a / armoured))))
(s / say-01 :arg0 (p / person :name (n / name :op1 "P?nar" :op2 "Kural" :op3 "Enç") :arg0-of (h / have-org-role-91 :arg1 (p2 / person :arg0-of (s2 / specialize-01)) :arg2 (p3 / person :arg0-of (s3 / specialize-01)))) :arg1 (n2 / nutritious :arg1 (i / it) :degree (m / more) :compared-to (y / yoghurt) :arg1-of (c / cause-01 :arg0 (i2 / include-01 :arg1 (a / and :op1 (p4 / protein) :op2 (u / universe :mod (b / basic)) :op3 (u2 / universe :mod (b2 / basic)) :op4 (u3 / universe :mod (b3 / basic)))) :degree (m2 / more) :compared-to (y2 / yoghurt)) :arg1-of (c2 / cause-01 :arg0 (a2 / and :op1 (k / kefir :arg1 (p5 / person :quant 1 :arg1-of (i3 / include-91 :arg2 (p6 / person :arg0-of (c3 / consume-01 :arg1-of (p7 / possible-01) :arg1-of (p8 / possible-01 :polarity -) :manner (s4 / safe))))) :manner (s5 / safe)) :op2 (u4 / uncountable :arg1 (p9 / person :arg0-of (h2 / have-org-role-91 :arg2 (p10 / person :arg0-of (s6 / specialize-01)))) :arg1-of (c4 / complete-02))))))
(a / and :op1 (l / look-01 :arg0 (h / he) :arg1 (g / good :degree (m / more :mod (- / -lrb-)) :arg1-of (m2 / mean-01 :arg2 (-2 / -rrb-)))) :op2 (l2 / look-02 :arg0 (h2 / he) :arg1 (g2 / good :degree (m3 / more)) :location (b / bp)) :op3 (c / carry-01 :arg0 (h3 / he) :arg1 (r / right-05 :arg1 (h4 / he) :arg2 (g3 / game))))
FAILED_TO_PARSE#Number of opening and closing brackets doesn't match.
(e / employ-01 :arg0 (p / person :name (n / name :op1 "Kervan")) :arg1 (p2 / person :quant (a / around :op1 500)))
(e / estimate-01 :arg0 (p / person :arg0-of (a / analyze-01 :arg1 (o / organization :name (n / name :op1 "Morgan" :op2 "Stanley")))) :arg1 (e2 / estimate-01 :arg0 (p2 / person :name (n2 / name :op1 "Tom" :op2 "Kierath")) :arg1 (p3 / possible-01 :arg1 (l / lose-02 :arg0 (g / government-organization :arg0-of (g2 / govern-01 :arg1 (c / country))) :arg1 (r / rate-entity-91 :arg1 (m / monetary-quantity :quant 360 :unit (d / dollar)) :arg2 (t / temporal-quantity :quant (N / N-A) :unit (y / year))) :arg3 (r2 / rate-entity-91 :arg1 (m2 / monetary-quantity :quant 250 :unit (d2 / dollar)) :arg2 (v / volume-quantity :quant (N2 / N-A) :unit (g3 / gallon))))) :arg2 (e3 / end-01 :arg1 (a2 / approximately :op1 2016))) :time (w / week :mod (t2 / this)))
(o / obtain-01 :arg0 (a / and :op1 (p / person :quant 2) :op2 (b / base :arg1-of (m / mark-01 :arg0 (b2 / base)))) :arg1 (o2 / obtain-01 :arg1 (t / total) :mod (f / final)))
(s / say-01 :arg0 (c / couple) :arg1 (g / guarantee-01 :polarity - :arg0 (w / we) :arg1 (' / '' :arg0 (w2 / we) :time (t / tomorrow)) :time (a / after :op1 (a2 / all))))
(h / have-concession-91 :arg1 (i / imprinted :arg1 (s / she) :time (n / now) :manner (w / way :mod (t / this))) :arg2 (s2 / say-01 :arg0 (p / person :name (n2 / name :op1 "Jane" :op2 "Birkin")) :arg1 (w2 / want-01 :polarity - :arg0 (s3 / she) :arg1 (r / remembered :poss (s4 / she) :prep-with (b / bag)))))
(m / multi-sentence :snt1 (p / person :mode (i / interrogative) :arg0-of (d / drive-01 :arg1 (t / taxi))) :snt2 (e / ehmuz :mode (i2 / interrogative)))
FAILED_TO_PARSE#Number of opening and closing brackets doesn't match.
(c / contrast-01 :arg1 (b / be-located-at-91 :arg1 (p / person :name (n / name :op1 "Clinton")) :arg2 (a / ahead :op1 (p2 / person :name (n2 / name :op1 "Sanders"))) :time (m / month :mod (l / last))) :arg2 (h / have-03 :arg0 (p3 / person) :arg1 (e / edges :mod (5 / 5-point) :prep-with (g / group :mod (t / this))) :time (n3 / now)))
(s / study-01 :arg1 (l / lesson :time (d / date-entity :decade (N / N-A))))
(l / lesson :location (h / here))
(s / show-01 :arg0 (p / poll-01 :arg0 (p2 / person :arg0-of (s2 / support-01 :arg1 (p3 / person :name (n / name :op1 "Trump"))) :mod (n2 / new))) :arg1 (p4 / person :arg0-of (v / vote-01) :arg1-of (i / include-91 :arg2 (p5 / person :arg0-of (v2 / vote-01) :arg0-of (s3 / support-01 :arg1 (p6 / person)))) :quant (m / more-than :op1 (1 / 1/2) :mod (j / just)) :arg0-of (s4 / support-01 :arg1 (p7 / person)) :arg0-of (s5 / say-01 :arg1 (l / locked :arg1 (p8 / person) :arg2 (v3 / vote-01 :arg0 (p9 / person))))))
(o / order-01 :arg0 (p / police :mod (c / country :name (n / name :op1 "Norway"))) :arg1 (r / repair-01 :arg1 (w / work-of-art :name (n2 / name :op1 "N-A")) :arg1-of (a / abandon-01 :time (a2 / after :op1 (c2 / cross-02 :arg0 (p2 / police) :arg1 (b / border))))) :arg2 (r2 / reason :mod (t / this)))
(m / multi-sentence :snt1 (a / and :op1 (s / share :mod (b / big :degree (m2 / most)) :location (a2 / and :op1 (p / packaging) :op2 (o / organization :name (n / name :op1 "Mondi") :mod (p2 / paper))) :domain (o2 / organization :name (n2 / name :op1 "Mondi") :mod (p3 / paper)) :mod (b2 / big :degree (m3 / most)) :location (i / index :name (n3 / name :op1 (i2 / index))))) :snt2 (e / equal-01 :arg1 (p4 / percentage-entity :value (N / N-A)) :arg2 (p5 / percentage-entity :value 4.3)))
(m / matter-01 :arg1 (a / and :op1 (b / book) :op2 (l / life :arg1-of (b2 / black-04))) :mod (s / still) :mod (s2 / still))
(s / surprise-01 :arg0 (b / bulut :mod (u / umut)) :arg1 (p / person :arg0-of (s2 / surprise-01)))
(s / say-01 :arg0 (h / he) :arg1 (p / possible-01 :arg1 (b / bring-01 :arg0 (w / we) :arg1 (p2 / person :arg0-of (h2 / have-rel-role-91 :arg1 (i / i) :arg2 (s2 / son))) :arg2 (h3 / hospital) :time (l / late :op1 (t / temporal-quantity :quant (N / N-A) :unit (h4 / hour)) :degree (m / more)))))
(c / criticised :arg0 (a / and :op1 (p / person :arg0-of (h / have-org-role-91 :arg1 (o / organization :name (n / name :op1 "European" :op2 "Commission")) :arg2 (p2 / president))) :op2 (p3 / person :name (n2 / name :op1 "Jean" :op2 "Claude" :op3 "Juncker") :arg0-of (h2 / have-org-role-91 :arg1 (o2 / organization) :arg2 (p4 / president)))) :arg1 (b / block-01 :arg1 (f / fund) :arg1-of (t / transfer-01 :arg2 (c2 / country :name (n3 / name :op1 "Turkey")))) :arg2 (p5 / person :name (n4 / name :op1 "Matteo" :op2 "Renzi")))
(m / multi-sentence :snt1 (p / push-01 :arg0 (p2 / person :mod (w / white :mod (d / dear))) :arg1 (a / and :op1 (p3 / person :name (n / name :op1 "Leo" :op2 "Angelos")) :op2 (p4 / person :name (n2 / name :op1 "Kristen" :op2 "Brancaccio"))) :arg2 (r / right-05 :arg1 (p5 / person) :arg2 (d2 / direct-02 :arg1-of (d3 / direct-02)))) :snt2 (p6 / possible-01 :arg1 (e / end-up-03 :arg1 (p7 / person :name (n3 / name :op1 "Damon")) :arg2 (g / give-01 :arg0 (p8 / person) :arg1 (s / something :arg1-of (w2 / want-01 :polarity - :arg0 (w3 / we))) :arg2 (w4 / we)))))
(s / sure-02 :arg1-of (s2 / sure-02))
(k / know-01 :polarity - :arg0 (w / we) :arg1 (a / and :op1 (t / thing :arg1-of (i / include-91 :arg2 (t2 / that)) :quant (a2 / all) :arg1-of (t3 / take-10 :arg0 (t4 / that))) :op2 (h / have-manner-91 :arg1 (i2 / it) :arg2 (l / last))))
(p / possible-01 :arg1 (s / solve-01 :polarity - :arg0 (p2 / person :arg0-of (s2 / study-01) :arg0-of (h / have-03 :polarity - :arg1 (s3 / subject :mod (i / incomplete)))) :arg1 (o / or :op1 (p3 / person :quant 1) :op2 (p4 / person :quant 2 :mod (m / mockery))) :arg1-of (a / average-01)) :time (m2 / meantime))
(i / implement-01 :arg0 (f / force :mod (s / security)) :arg1 (c / check-01 :mod (r / record) :arg2-of (c2 / criminal-03)) :purpose (p / prevent-01 :arg0 (f2 / force) :arg1 (i2 / infiltrate-01)))
(s / send-01 :arg0 (c / child) :arg1 (w / work-01 :arg0 (c2 / child)) :arg2 (o / organization :name (n / name :op1 "General" :op2 "Directorate" :op3 "of" :op4 "Security") :location (d / diyarbak?r)) :arg1-of (p / perfect-02))
(e / expect-01 :arg1 (b / broach :arg0 (a / and :op1 (p / person :name (n / name :op1 "Obama")) :op2 (x / xi)) :arg1 (r / range-01 :arg1 (i / issue-02 :arg0 (w / world-region :name (n2 / name :op1 "N-A")))) :arg2-of (i2 / include-01 :arg1 (c / concern-01 :arg0 (a2 / and :op1 (c2 / cyberespionage :arg1-of (a3 / allege-01) :poss (c3 / country :name (n3 / name :op1 "China"))) :op2 (a4 / assertiveness :location (w2 / water :arg2-of (d / dispute-01))))))))
(d / decide-01 :arg0 (o / organization :name (n / name :op1 "Chamber" :op2 "of" :op3 "Merchants")) :arg1 (d2 / decide-01 :arg0 (g / government-organization) :time (b / before :op1 (n2 / now) :quant (t / temporal-quantity :quant (N / N-A) :unit (y / year)))))
(e / end-01 :arg0 (p / person :name (n / name :op1 "Fenerbahçe")) :arg1 (h / half :ord (o / ordinal-entity :value 1) :arg0-of (l / lead-01 :arg1 (p2 / person :name (n2 / name :op1 "Marco" :op2 "Aurelio")) :arg0-of (e2 / effective-04) :mod (a / also))) :time (a2 / after :op1 (s / start-01 :arg0 (p3 / person) :arg1 (g / game))))
(p / possible-01 :arg1 (r / remember-01 :arg0 (t / they) :arg1 (p2 / person :name (n / name :op1 "Boris" :op2 "Johnson") :arg1-of (m / mean-01 :arg2 (a / and :op1 (m2 / make-01 :arg0 (p3 / person) :arg1 (n2 / name :poss (p4 / person))) :op2 (m3 / make-01 :arg0 (p5 / person) :arg1 (n3 / name :poss (p6 / person)) :prep-as (p7 / person :arg0-of (h / have-org-role-91 :arg1 (o / organization :name (n4 / name :op1 "EU") :mod (' / '') :arg1-of (s / straight-04)) :arg2 (c / correspondent))) :time (e / early :op1 (e2 / early :op1 (9 / 90s)))))))))
(l / link-01 :arg1 (p / person :quant (s / some)) :arg2 (d / die-01 :arg1 (p2 / person)) :manner (b / beyond :op1 (a / alcohol)))
(( / ( :( (n / name) :op1 "Jarryd" :op2 "Hayne")
(r / request-01 :arg0 (p / person :arg0-of (w / write-01)) :arg1 (c / call-01 :arg0 (p2 / person) :arg1 (p3 / person :name (n / name :op1 "Cameron")) :arg2 (p4 / person :arg0-of (h / have-org-role-91 :arg2 (m / minister :mod (p5 / prime)))) :purpose (e / ensure-01 :arg0 (p6 / person) :arg1 (r2 / respect-01 :arg0 (p7 / person :arg0-of (h2 / have-org-role-91 :arg2 (m2 / minister :mod (p8 / prime)))) :arg1 (t / thing :arg1-of (r3 / responsible-03 :arg0 (c2 / cabinet)) :arg1-of (s / subject-01 :arg2 (f / free-04 :arg1 (p9 / person) :arg2 (f2 / free-04) :location (c3 / country :name (n2 / name :op1 "Turkey")))))))))
(r / recommend-01 :arg0 (j / jury :mod (g / grand) :location (l / location :name (n / name :op1 "Monroe" :op2 "County"))) :arg1 (c / charge-05 :arg1 (p / person :quant 5 :arg0-of (h / have-org-role-91 :arg2 (m / member))) :arg2 (m2 / murder-01)))
(s / state-01 :arg0 (p / person :name (n / name :op1 "Mustafa" :op2 "Küçük") :arg0-of (h / have-org-role-91 :arg1 (p2 / person :arg0-of (h2 / have-org-role-91 :arg2 (p3 / prosecute-01 :arg1 (p4 / person)))) :arg3 (p5 / prosecute-01))) :arg1 (a / and :op1 (b / bring-01 :arg1 (o / offence :mod (p6 / promote-02 :arg1 (p7 / propaganda :mod (t / terror)))) :arg2 (o2 / offence :mod (p8 / promote-02 :arg1 (p9 / propaganda :mod (t2 / terror))))) :op2 (i / insult-01 :arg0 (a2 / and) :arg1 (c / character :arg1-of (m / moral-02) :poss (s2 / state)))))
(s / say-01 :arg0 (o / organization :name (n / name :op1 "NHC")))
(c / charge-05 :arg1 (p / person :name (n / name :op1 "Meng") :arg2-of (i / include-91 :arg1 (m / mr.)) :arg2-of (i2 / include-91 :arg1 (m2 / mr.)) :arg2-of (i3 / include-91 :arg1 (m3 / mr.))) :arg2 (a / and :op1 (h / hazing :mod (a2 / assault)) :op2 (c2 / conspiracy :arg2-of (c3 / criminal-03))) :mod (a3 / also))
(s / succeed-01 :arg0 (p / person :name (n / name :op1 "Uçer")) :arg1 (e / ensure-01 :arg0 (p2 / person) :arg1 (p3 / play-01 :arg1 (a / and :op1 (t / tempo) :op2 (f / flow-01)))) :time (s2 / stage :ord (o / ordinal-entity :value 1)))
(s / say-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (p2 / political-party :name (n / name :op1 "Movement" :op2 "for" :op3 "Democratic" :op4 "Change")) :arg3 (l / lead-02 :arg0 (p3 / person) :arg1 (p4 / political-party :name (n2 / name :op1 "MDC"))))) :arg1 (r / receive-01 :arg0 (p5 / politician :quant 7 :arg0-of (o / oppose-01)) :arg1 (m / message :medium (t / text) :arg0-of (w / warn-01 :arg1 (d / disrupt-01 :polarity - :arg0 (p6 / phone :arg1-of (m2 / mobile-02)) :arg1 (a / address :poss (p7 / person :name (n3 / name :op1 "Mugabe"))))))))
(a / ask-01 :arg0 (p / person :name (n / name :op1 "Gregor" :op2 "Sim") :arg0-of (d / defend-01)) :arg1 (a2 / and :op1 (p2 / place-01 :polarity - :arg1 (p3 / person :name (n2 / name :op1 "Hogg")) :arg2 (r / register-02 :arg1 (s / sex))) :op2 (p4 / possible-01 :arg1 (a3 / argue-01 :arg1 (e / element :polarity - :mod (s2 / sex) :arg1-of (s3 / significant-02) :arg1-of (' / '' :arg2 (c / crime-02 :arg0 (p5 / person))))))))
(m / multi-sentence :snt1 (a / and :op1 (b / burn-01 :arg0 (g / god :poss (s / she)) :arg1 (' / '' :mod (t / too))) :op2 (b2 / burn-01 :arg0 (g2 / god) :arg1 (m2 / monetary-quantity :arg2-of (c / cost-01 :arg1 ('2 / '' :arg1 (l / love-01))))) :time (a2 / after :op1 (l2 / leave-15 :arg0 (y / you) :arg1 (s2 / stage) :purpose (p / period))) :time (a3 / after :op1 (l3 / leave-15 :arg0 (y2 / you) :arg1 (s3 / stage) :purpose (p2 / period))) :time (a4 / after :op1 (l4 / leave-15 :arg0 (y3 / you) :arg1 (s4 / stage) :purpose (p3 / period)))) :snt2 (a5 / and :op2 (w / want-01 :polarity - :arg0 (a6 / and :op1 (p4 / person :name (n / name :op1 "Özer")) :op2 (p5 / person :name (n2 / name :op1 "Cengiz" :op2 "Tekin"))) :arg1 ('3 / '') :mod (r / respective))))
(s / say-01 :arg0 (p / person :name (n / name :op1 "Healy")) :arg1 (w / want-01 :arg0 (w2 / we :mod (a / all)) :arg1 (a2 / and :op1 (f / focus-01 :arg0 (t / team) :arg2 (t2 / tie) :arg1-of (c / complete-02)) :op2 (c2 / controversy :polarity - :mod (c3 / controversy) :location (a3 / around :op1 (-2 / -rsb- :name (n2 / name :op1 (-3 / -lsb-))))))))
(c / combined :arg0 (d / deal) :arg1 (b / brand :mod (t / together) :example (a / and :op1 (o / organization :name (n / name :op1 "Budweiser")) :op2 (p / person :name (n2 / name :op1 "Stella" :op2 "Artois")) :op3 (p2 / person :name (n3 / name :op1 "Peroni")) :op4 (o2 / organization :name (n4 / name :op1 "Grolsch")))) :mod (l / large :degree (m / most :quant 2)))
(a / and :op1 (r / receive-01 :arg0 (l / lamb :source (o / organization :name (n / name :op1 "Delta" :op2 "State"))) :arg1 (e / educate-01 :location (s / spring :location (s2 / spring :quant 2015)))) :op2 (s3 / say-01 :arg0 (i / i) :arg1 (p / post-01 :arg0 (l2 / lamb) :medium (w / website :poss (u / university)))))
(s / say-01 :arg0 (t / thing :arg1-of (p / propose-01) :arg1-of (p2 / publish-01 :location (o / organization :name (n / name :op1 "Russian" :op2 "Federal" :op3 "Regulation")))) :arg1 (a / allow-01 :arg1 (p3 / permit-01 :arg1 (p4 / permit-01 :arg1 (a2 / and :op1 (c / company :mod (c2 / country :name (n2 / name :op1 "N-A"))) :op2 (f / firm)))) :time (b / become-01 :arg1 (a3 / and) :arg2 (n3 / need-01 :arg1 (t2 / thing :arg2-of (s2 / sanction-02)) :mod (e / even)))))
(c / crawled :arg0 (h / he) :arg1 (d / door))
(d / die-01 :arg1 (w / woman :quant 2013 :location (l / location :name (n / name :op1 "Ontario")) :quant (b / between :op1 2013 :op2 2)) :time (a / after :op1 (c / contrast-01 :arg1 (d2 / die-01 :arg1 (w2 / woman :quant 2 :location (l2 / location :name (n2 / name :op1 "Ontario")))) :arg2 (c2 / contain-01 :arg0 (a2 / and) :arg1 (i / ingredient :arg0-of (s / suffice-01 :polarity -))))))
(o / offer-01 :arg0 (i / it) :arg1 (p / perspective :mod (u / unique)))
(m / multi-sentence :snt1 (a / and :op1 (g / go-01 :arg1 (n / nature :location-of (a2 / and :op1 (g2 / go-01 :arg1 (n2 / nature :quant (a3 / all))) :op2 (c / commodity :mod (e / even) :domain (a4 / air :mod (e2 / even))))) :op2 (c2 / commodity :domain (a5 / air :mod (e3 / even)))) :op3 (n3 / name-01 :arg1 (b / boy :arg1-of (n4 / name-01 :arg0 (b2 / boy))) :arg2 (h / hopeful-03 :arg0 (b3 / boy) :arg1 (s / see-01 :arg0 (b4 / boy) :arg1 (t / tree :arg1 (g3 / girl :arg1-of (d / dream-01 :arg0 (h2 / he)))))))) :snt2 (n5 / name-01 :arg1 (p / person :arg1-of (d2 / die-01 :arg1-of (k / know-01 :polarity -)) :mod (i / interest :mod (r / real))) :arg2 (p2 / person :name (n6 / name :op1 "Theodor" :op2 "Seuss" :op3 "Geisel") :arg1-of (d3 / die-01 :location (t2 / thing :quant 1991)))))
(c / close-01 :arg1 (i / index :mod 100) :arg3 (p / percentage-entity :value (N / N-A)) :arg4 (v / value-interval :op1 100 :op2 1.49))
(s / same-01 :arg1 (d / do-02 :arg0 (w / we)))
(c / complain-01 :arg0 (i / i) :arg1 (s / she))
(p / performed :arg0 (s / she) :arg1 (a / and :op1 (m / music :mod (a2 / art) :mod (t / turkish)) :op2 (m2 / music :mod (l / light)) :op3 (a3 / arrange-01 :arg1-of (p2 / popular-02))) :arg2 (p3 / person :name (n / name :op1 "Grup" :op2 "Lokomotif")))
(a / and :op1 (c / come-01 :arg1 (h / he) :arg4 (w / world :poss (w2 / we)) :arg3 (s / some)) :op2 (r / return-01 :arg1 (h2 / he) :arg4 (m / motherland :poss (h3 / he)) :arg1-of (c2 / cause-01 :arg0 (t / thing :manner-of (g / go-06 :arg1 (i / it)))) :time (n / now)))
(a / and :op1 (f / fall-01 :arg1 (m / monetary-quantity :arg2-of (p / price-01 :arg1 (o / oil))) :arg4 (b / below :op1 (m2 / monetary-quantity :quant 30 :unit (d / dollar))) :time (s / since :op1 (a2 / approximately :op1 2004))) :op2 (c / cause-01 :arg0 (t / thing :arg0-of (c2 / cause-01 :arg1 (p2 / produce-01 :arg1 (t2 / this)))) :arg1 (a3 / abolished :arg1 (t3 / thing :arg0-of (p3 / produce-01)) :location (c3 / country :name (n / name :op1 "U.S.")))))
(s / say-01 :arg0 (h / he) :arg1 (c / continue-01 :arg1 (f / fight-01 :arg0 (w / we) :arg1 (t / thing :arg1-of (f2 / fight-01 :arg0 (w2 / we) :arg2 (t2 / terrorism))))))
(s / show-01 :arg0 (p / poll-01 :arg0 (p2 / person :name (n / name :op1 "Donald" :op2 "Trump"))) :arg1 (h / have-03 :arg0 (p3 / person :quant 2 :arg1-of (i / include-91 :arg2 (p4 / person :quant 10 :arg1-of (r / republican)))) :arg1 (v / view :mod (p5 / positive) :topic (e / estate :mod (r2 / real)))) :time (b / before :op1 (a / announce-01 :arg0 (p6 / person) :arg1 (c / candidacy :poss (p7 / person) :location (m / mid-june)))))
(s / step :mod (s2 / small) :prep-for (p / person :name (n / name :op1 "Banksy")) :mod (s3 / step :mod (g / giant)))
(c / contrast-01 :arg1 (p / possible-01 :arg1 (h / have-03 :arg0 (p2 / person :mod (c2 / country :name (n / name :op1 "England"))) :arg1 (p3 / person :name (n2 / name :op1 "Jonathan" :op2 "Trott") :location (w / world-region :name (n3 / name :op1 "Caribbean"))) :mod (o / only)) :arg1-of (c3 / cause-01 :arg0 (f / form :mod (t / top) :domain (p4 / person :name (n4 / name :op1 "Lyth")) :time (b / be-located-at-91 :arg1 (p5 / person) :arg2 (f2 / form :mod (t2 / top)))))) :arg2 (b2 / be-located-at-91 :arg1 (o2 / opportunity :mod (p6 / possible-01 :polarity -)) :time (p7 / past) :time (n5 / now)))
(c / contrast-01 :arg1 (p / possible-01 :arg1 (s / see-01 :arg0 (i / i) :arg1 (b / ball :mod (o / only) :arg1-of (s2 / see-01 :arg0 (i2 / i) :prep-in (d / direction :arg1-of (d2 / differ-02)))))) :arg2 (p2 / possible-01 :polarity - :arg1 (s3 / see-01 :arg0 (i3 / i) :arg1 (t / tackle-01 :arg1 (p3 / person :name (n / name :op1 "Luke"))))))
(t / take-out-11 :arg0 (i / i) :arg1 (p / position :arg1-of (k / key-02) :location (t2 / there)))
(r / repeal-01 :arg1 (s / series :mod (d / duty)))
(f / feel-01 :arg0 (m / man :arg0-of (c / contact-01 :arg1 (w / we))) :arg1 (f2 / feel-01 :arg0 (m2 / man) :arg1 (c2 / capable-01 :polarity - :arg1 (m3 / man) :arg2 (s / speak-01 :arg0 (m4 / man) :arg2 (f3 / friend)))) :frequency (o / often))
(t / take :arg0 (p / person :arg0-of (h / have-org-role-91 :arg2 (c / commandos))) :arg1 (r / re-infiltration :arg1 (t2 / terrorist)) :arg2 (n / neighbourhood :location (l / location :name (n2 / name :op1 "Yefes"))))
(a / and :op2 (c / commit-01 :arg1 (i / it) :arg2 (a2 / and :op1 (l / live-01 :arg0 (i2 / it) :arg1 (m / music)) :op2 (m2 / make-01 :arg0 (i3 / it) :arg1 (m3 / music)) :ord (o / ordinal-entity :value 2) :mod (a3 / actual))))
(s / state-01 :arg0 (p / person :arg0-of (m / make-01 :arg1 (f / film)) :arg2-of (i / include-01 :arg1 (a / and :op1 (p2 / person :name (n / name :op1 "Deniz" :op2 "Türkali")) :op2 (p3 / person :name (n2 / name :op1 "Atilla" :op2 "Özdemiro?lu")) :op3 (p4 / person :name (n3 / name :op1 "Özcan" :op2 "Alper")) :op4 (p5 / person :name (n4 / name :op1 "Serra" :op2 "Y?lmaz")) :op5 (p6 / person :name (n5 / name :op1 "Onur" :op2 "Ünlü")) :op6 (p7 / person :name (n6 / name :op1 "Pelin" :op2 "Esmer")) :op7 (p8 / person :name (n7 / name :op1 "Pelin" :op2 "Esmer")))) :quant (m2 / more-than :op1 400) :arg2-of (i2 / include-91 :arg1 (a2 / and :op1 (c / company :arg0-of (m3 / make-01 :arg1 (f2 / film)) :arg2-of (i3 / include-91 :arg1 (a3 / and :op1 (p9 / person :arg0-of (m4 / make-01 :arg1 (f3 / film))) :op2 (p10 / person :name (n8 / name :op1 "Özcan" :op2 "Alper") :arg0-of (h / have-org-role-91 :arg1 (s2 / sar?bacak) :arg2 (s3 / sar?bacak))) :op3 (p11 / person :name (n9 / name :op1 "Serra" :op2 "Y?lmaz") :arg0-of (h2 / have-org-role-91 :arg1 (p12 / person :name (n10 / name :op1 "Tolga" :op2 "Karaçelik")) :arg2 (s4 / sar?bacak))) :op4 (p13 / person :name (n11 / name :op1 "Serra" :op2 "Y?lmaz") :arg0-of (h3 / have-org-role-91 :arg1 (p14 / person :name (n12 / name :op1 "Tolga" :op2 "Karaçelik")) :arg2 (u / ustao?lu))) :op5 (p15 / person :name (n13 / name :op1 "Tolga" :op2 "Karaçelik") :arg0-of (h4 / have-org-role-91 :arg1 (p16 / person :name (n14 / name :op1 "Tolga" :op2 "Karaçelik")) :arg2 (u2 / ustao?lu))))))))) :arg1 (s5 / stand-01 :arg1 (w / we) :arg2 (a4 / and :op1 (t / think-01 :arg3-of (f4 / free-04)) :op2 (a5 / art))))
(l / let-01 :polarity - :arg0 (t / they) :arg1 (s / suppress-01 :arg0 (t2 / they) :arg1 (e / emotions :poss (t3 / they))) :time (e2 / ever))
(e / expect-01 :arg1 (f / fix-03 :arg1 (m / market) :location (i / index :mod 92.9 :arg1-of (r / record-01 :time (s / since :op1 (d / date-entity :year 2015 :month 6) :prep-with (t / thing :arg2-of (r2 / result-01) :mod (t2 / this)))))))
(r / realize-01 :arg0 (i / i) :arg1 (s / store :mod (c / chain :mod (w / worldwide) :location (w2 / worldwide)) :domain (e / everything)))
(s / say-01 :arg0 (h / he) :arg1 (w / wound-01 :arg1 (a / and :op1 (p / person :arg0-of (h2 / have-org-role-91 :arg1 (p2 / police) :arg2 (o / officer))) :op2 (c / civilian :quant 5))))
(c / contrast-01 :arg2 (i / increase-01 :arg1 (i2 / increase-01 :arg1 (i3 / increase-01 :arg1 (h / hand :part-of (c2 / child)))) :time (y / year :mod (l / last))))
(c / contrast-01 :arg1 (a / and :op1 (l / last-01 :arg1 (p / percentage-entity :value (N / N-A)) :arg2 (t / temporal-quantity :quant (N2 / N-A) :unit (y / year)) :compared-to (r / rate-01 :arg1 (i / it) :arg2 (r2 / rate-01 :arg1 (i2 / it) :arg2 (- / -lrb- :quant 317,000)))) :op2 (t2 / tuesday :arg1 (-2 / -rrb- :quant 283,000) :mod (l2 / last))) :arg2 (b / be-located-at-91 :arg1 (f / figure :poss (i3 / it)) :arg2 (b2 / behind :op1 (p2 / product-of :op1 317,000 :op2 343,000))))
FAILED_TO_PARSE#Couldn't convert to full AMR graph.
(p / possible-01 :arg1 (v / visit-01 :arg1 (e / exhibit-01) :location (l / location :name (n / name :op1 "Schneidertempel" :op2 "Art" :op3 "Centre"))) :time (u / until :op1 (d / date-entity :month 1 :day 31)))
(a / arrest-01 :arg0 (p / police) :arg1 (m / man :arg0-of (c / cyclist :arg1 (c2 / cyclist :location (l / location :name (n / name :op1 "Cobram"))) :time (w / weekend))))
(a / and :op1 (g / guy :mod (g2 / great :degree (s / such))) :op2 (m / man :mod (f / family)) :domain (h / he))
(a / and :op1 (r / rate :domain (r2 / rate) :time (s / since :op1 2009)) :op2 (s2 / see-01 :arg1 (r3 / rate) :arg2 (e / estimate-01 :arg1 (t / thing :arg1-of (e2 / estimate-01 :arg2 (t2 / thing :time-of (r4 / rise-01 :arg1 (r5 / rate))))))))
(b / base-02 :arg1 (t / this) :arg2 (a / and :op1 (o / open-01 :arg0 (o2 / organization :name (n / name :op1 "Aldi")) :arg1 (s / store :quant 25) :location (a2 / and :op1 (t2 / talk-02 :arg2 25 :arg1 (s2 / store)) :op2 (s3 / sell-01 :arg1 (r / rate-entity-91 :arg1 (m / monetary-quantity :quant 500 :unit (d / dollar)) :arg2 (v / volume-quantity :quant (N / N-A) :unit (g / gallon))))) :op2 (s4 / sell-01 :arg0 (o3 / organization) :arg1 (r2 / rate-entity-91 :arg1 (m2 / monetary-quantity :quant 500 :unit (d2 / dollar)) :arg2 (v2 / volume-quantity :quant (N2 / N-A) :unit (g2 / gallon))) :location (m3 / market :mod (e / each))))))
(l / let-01 :mode (i / imperative) :arg0 (w / we) :arg1 (g / grow-01 :arg1 (h / humanism :poss (w2 / we))))
(m / multi-sentence :snt1 (t / travel-01 :arg0 (h / he) :arg4 (c / country :name (n / name :op1 "Serbia")) :frequency (o / often)) :snt2 (t2 / tell-01 :arg0 (h2 / he) :arg2 (c2 / court)))
(m / multi-sentence :snt1 (s / say-01 :arg0 (p / person :name (n / name :op1 "Cenk" :op2 "Tosun") :mod (a / another)) :arg1 (b / be?ikta :mode (i / interrogative) :mod (a2 / another)) :time (m2 / meanwhile)) :snt2 (g / goal :quant 3 :arg1-of (m3 / match-01 :arg2 (l / location :name (n2 / name :op1 "Mersin")))) :snt3 (g2 / goal :quant 3 :arg1-of (m4 / match-01 :arg2 (l2 / location :name (n3 / name :op1 "Mersin")))) :op4 (c / complete-01 :arg1 (h / hat-trick :poss (h2 / he) :ord (o / ordinal-entity :value 1) :poss (h3 / he)) :location (c2 / career :mod (p2 / professional) :poss (h4 / he))))
(a / and :op1 (l / lose-02 :arg0 (c / child) :arg1 (f / free-04 :arg1 (c2 / child))) :op2 (c3 / contrast-01 :arg1 (l2 / lose-02 :arg0 (c4 / child) :arg1 (f2 / free-04 :arg1 (c5 / child))) :arg2 (a2 / and :op1 (l3 / lose-02 :arg0 (c6 / child) :arg1 (f3 / free-04 :arg1 (c7 / child))) :op2 (r / reveal-01 :arg0 (c8 / child) :arg1 (m / mechanism :arg0-of (r2 / reveal-01 :arg1 (a3 / and :op1 (a4 / anger-01) :op2 (h / hate-01)))) :purpose (p / protect-01 :arg0 (a5 / and) :arg1 (a6 / and))))))
(d / define-01 :arg1 (a / and :op1 (p / protocol :arg1-of (p2 / present-01 :arg2 (p3 / person :arg1-of (p4 / present-01 :arg2 (u / unattainable))))) :op2 (t / take-01 :arg1 (t2 / they) :arg3 (m / model :mod (r / role)))) :arg2 (d2 / dyslexia :mod (m2 / mental)))
(c / cup)
(e / enough :polarity - :domain (q / qualifier))
(m / multi-sentence :snt2 (s / say-01 :arg0 (h / he) :arg1 (a / amr-unknown) :condition (s2 / see-01 :arg0 (h2 / he) :arg1 (s3 / see-01 :arg0 (h3 / he) :arg1 (s4 / space :quant 800 :name (n / name :op1 (g / gallery) :op2 (g2 / gallery) :op3 (s5 / space) :op4 (s6 / space) :op5 (s7 / space) :op6 (s8 / space) :op7 (s9 / space) :op6 (s10 / space) :op7 (s11 / space)) :arg1-of (c / create-01 :time (e / end-01)))))) :snt2 (s12 / say-01 :arg0 (h4 / he) :arg1 (a2 / amr-unknown) :condition (s13 / see-01 :arg0 (h5 / he) :arg1 (s14 / see-01 :arg0 (h6 / he) :arg1 (s15 / space :quant 800 :mod (g3 / gallery) :arg1-of (c2 / create-01 :time (e2 / end-01)))))))
(a / attend-01 :arg0 (a2 / and :op1 (p / person :arg0-of (h / have-rel-role-91 :arg1 (p2 / person :name (n / name :op1 "Schmidt")) :arg2 (w / wife))) :op2 (p3 / person :name (n2 / name :op1 "Jeff" :op2 "Schmidt") :arg0-of (h2 / have-rel-role-91 :arg1 (p4 / person) :arg2 (b / brother))) :op3 (p5 / person :name (n3 / name :op1 "Jeff" :op2 "Schmidt") :arg0-of (h3 / have-rel-role-91 :arg1 (p6 / person) :arg2 (b2 / brother)))) :arg1 (m / military) :time (s / storm-02 :arg0 (c / company :name (n4 / name :op1 "N-A") :mod (u / university)) :arg1 (a3 / and :op1 (' / '' :mod (s2 / star) :arg1-of (b3 / bright-02)) :op2 (g / grace :mod (a4 / amazing)))) :mod (a5 / also))
(a / attend-01 :arg0 (a2 / and :op1 (p / person :arg0-of (h / have-rel-role-91 :arg1 (p2 / person :name (n / name :op1 "Schmidt")) :arg2 (w / wife))) :op2 (p3 / person :name (n2 / name :op1 "Jeff" :op2 "Schmidt") :arg0-of (h2 / have-rel-role-91 :arg1 (p4 / person) :arg2 (b / brother))) :op3 (p5 / person :name (n3 / name :op1 "Jeff" :op2 "Schmidt") :arg0-of (h3 / have-rel-role-91 :arg1 (p6 / person) :arg2 (b2 / brother)))) :arg1 (m / military) :time (s / storm-02 :arg0 (c / company :name (n4 / name :op1 "N-A") :mod (u / university)) :arg1 (a3 / and :op1 (' / '' :mod (s2 / star) :arg1-of (b3 / bright-02)) :op2 (g / grace :mod (a4 / amazing)))) :mod (a5 / also))
(o / obligate-01 :arg1 (w / we) :arg2 (r / reduce-01 :arg0 (w2 / we) :arg1 (u / use-01 :arg1 (f / force-04))))
(a / and :op1 (d / decide-01 :arg0 (c / company) :arg1 (r / round :mod (f / final)) :mod (o / only)) :op2 (s / say-01 :arg0 (p / person :name (n / name :op1 "Mikhail" :op2 "Antipov") :arg0-of (m / manage-02 :arg1 (s2 / set-up-03 :arg0 (p2 / person) :arg1 (t / title :arg2-of (t2 / title-01))))) :arg1 (p3 / person :name (n2 / name :op1 "Jan-Krzysztof" :op2 "Duda") :arg0-of (m2 / manage-02 :arg1 (c2 / claim-02 :arg0 (p4 / person) :arg1 (p5 / pole)) :time (f2 / final)))))
(a / and :op1 (d / decide-01 :arg0 (c / company) :arg1 (r / round :mod (f / final)) :mod (o / only)) :op2 (s / say-01 :arg0 (p / person :name (n / name :op1 "Mikhail" :op2 "Antipov") :arg0-of (m / manage-02 :arg1 (s2 / set-up-03 :arg0 (p2 / person) :arg1 (t / title :arg2-of (t2 / title-01))))) :arg1 (p3 / person :name (n2 / name :op1 "Jan-Krzysztof" :op2 "Duda") :arg0-of (m2 / manage-02 :arg1 (c2 / claim-02 :arg0 (p4 / person) :arg1 (p5 / pole)) :time (f2 / final)))))
(t / trigger-01 :arg0 (e / expect-01 :arg1 (h / hold-01 :arg0 (p / person :mod (g / government-organization :name (n / name :op1 "Fed"))) :arg1 (r / rate :arg1-of (s / steady-01)) :time (w / week :mod (t2 / this)))) :arg1 (p2 / person :name (n2 / name :op1 "John" :op2 "Lonski") :arg0-of (h2 / have-org-role-91 :arg1 (o / organization :name (n3 / name :op1 "Moody" :op2 "'s" :op3 "Capital" :op4 "Markets" :op5 "Research" :op6 "Group")) :arg2 (c / chief))) :time (w2 / week :mod (t3 / this)))
(t / trigger-01 :arg0 (e / expect-01 :arg1 (h / hold-01 :arg0 (p / person :mod (g / government-organization :name (n / name :op1 "Fed"))) :arg1 (r / rate :arg1-of (s / steady-01)) :time (w / week :mod (t2 / this)))) :arg1 (p2 / person :name (n2 / name :op1 "John" :op2 "Lonski") :arg0-of (h2 / have-org-role-91 :arg1 (o / organization :name (n3 / name :op1 "Moody" :op2 "'s" :op3 "Capital" :op4 "Markets" :op5 "Research" :op6 "Group")) :arg2 (c / chief))) :time (w2 / week :mod (t3 / this)))
(t / trigger-01 :arg0 (e / expect-01 :arg1 (h / hold-01 :arg0 (p / person :mod (g / government-organization :name (n / name :op1 "Fed"))) :arg1 (r / rate :arg1-of (s / steady-01)) :time (w / week :mod (t2 / this)))) :arg1 (p2 / person :name (n2 / name :op1 "John" :op2 "Lonski") :arg0-of (h2 / have-org-role-91 :arg1 (o / organization :name (n3 / name :op1 "Moody" :op2 "'s" :op3 "Capital" :op4 "Markets" :op5 "Research" :op6 "Group")) :arg2 (c / chief))) :time (w2 / week :mod (t3 / this)))
(a / and :op1 (c / call-03 :arg0 (p / person :arg0-of (h / have-rel-role-91 :arg2 (r / relative))) :arg1 (h2 / help-01) :time (i / immediate)) :op2 (s / start-01 :arg0 (a2 / and :op1 (p2 / person :arg0-of (r2 / rescue-01)) :op2 (p3 / person :arg0-of (r3 / rescue-01)) :op3 (p4 / person :arg0-of (r4 / reside-01 :arg1 (v / village :mod (c2 / country :name (n / name :op1 "N-A")))))) :arg1 (s2 / search-01 :arg0 (p5 / person))))
(m / meet-03 :arg0 (p / person :arg0-of (h / have-rel-role-91 :arg1 (i / i) :arg2 (f / father))) :arg1 (f2 / family) :arg2 (l / location :name (n / name :op1 "Murmansk")) :arg1-of (c / cause-01 :arg0 (a / and :op1 (p2 / person :arg0-of (h2 / have-rel-role-91 :arg1 (i2 / i) :arg2 (f3 / father))) :op2 (p3 / person :arg0-of (h3 / have-rel-role-91 :arg1 (i3 / i) :arg2 (m2 / mother))) :op3 (p4 / person :quant 2 :arg0-of (h4 / have-rel-role-91 :arg1 (i4 / i) :arg2 (c2 / child))))))
(a / and :op1 (o / oppose-01 :arg0 (o2 / organization :name (n / name :op1 "AMA")) :arg1 (s / sport :arg0-of (p / participate-01 :arg1 (s2 / sport :mod (t / this)))) :time (n2 / now)) :op2 (g / good :degree (m / more) :mod (e / even) :domain (o3 / organization) :source (v / view-01 :arg0 (o4 / organization))) :op3 (b / ban-01 :arg0 (o5 / organization) :arg1 (f / finger)))
(a / and :op1 (o / oppose-01 :arg0 (o2 / organization :name (n / name :op1 "AMA")) :arg1 (s / sport :arg0-of (p / participate-01 :arg1 (s2 / sport :mod (t / this)))) :time (n2 / now)) :op2 (g / good :degree (m / more) :mod (e / even) :domain (o3 / organization) :source (v / view-01 :arg0 (o4 / organization))) :op3 (b / ban-01 :arg0 (o5 / organization) :arg1 (f / finger)))
(o / off :arg1 (s / storm) :time (w / weekend :mod (t / this)) :arg1-of (c / cause-01 :arg0 (w2 / win-01 :arg0 (t2 / they) :arg1 (r / right-05 :arg1 (t3 / they) :arg2 (h / host-01 :arg0 (t4 / they) :arg1 (o2 / or :op1 (o3 / organization :name (n / name :op1 "North" :op2 "Queensland" :op3 "Cowboys")) :op2 (o4 / organization :name (n2 / name :op1 "Cronulla" :op2 "Sharks")) :mod (e / either)) :time (n3 / night :mod (n4 / next)) :mod (p / preliminary) :location (l / laptop :arg1-of (s2 / sell-01 :time (m / morning :mod (n5 / next)))))))))
(o / off :arg1 (s / storm) :time (w / weekend :mod (t / this)) :arg1-of (c / cause-01 :arg0 (w2 / win-01 :arg0 (t2 / they) :arg1 (r / right-05 :arg1 (t3 / they) :arg2 (h / host-01 :arg0 (t4 / they) :arg1 (o2 / or :op1 (o3 / organization :name (n / name :op1 "North" :op2 "Queensland" :op3 "Cowboys")) :op2 (o4 / organization :name (n2 / name :op1 "Cronulla" :op2 "Sharks")) :mod (e / either)) :time (n3 / night :mod (n4 / next)) :mod (p / preliminary) :location (l / laptop :arg1-of (s2 / sell-01 :time (m / morning :mod (n5 / next)))))))))
FAILED_TO_PARSE#Two concepts in a row.
(t / time :arg1-of (s / same-01) :time (t2 / time :arg1-of (s2 / same-01)))
(i / improve-01 :arg1 (s / situation) :degree (s2 / slight) :time (a / after :op1 (l / lower-05 :arg0 (o / organization :name (n / name :op1 "Central" :op2 "Bank")) :arg1 (r / rate :mod (i2 / interest)))))
(s / say-01 :arg0 (n / number :arg1-of (s2 / same-01) :arg1-of (h / hold-01 :location (s3 / state :name (n2 / name :op1 (f / first-in-the-nation) :op2 (c / caucus) :op3 (c2 / caucus))))) :arg1 (t / think-01 :arg0 (p / person :arg0-of (h2 / have-org-role-91 :arg1 (p2 / political-party :name (n3 / name :op1 "N-A")) :arg2 (c3 / commander :mod (g / general)))) :arg1 (h3 / have-03 :arg0 (p3 / person) :arg1 (p4 / personality :arg0-of (h4 / have-org-role-91 :arg1 (p5 / personality) :arg2 (c4 / commander))) :location (p6 / person :arg0-of (h5 / have-org-role-91 :arg1 (o / organization :name (n4 / name :op1 "Quinnipiac")) :arg2 (c5 / commander))) :time (w / week :mod (l / last))) :location (a / amr-unknown)))
(a / and :op1 (r / require-01 :arg0 (t / thing :arg1-of (r2 / require-01)) :arg1 (c / cost-01 :polarity - :arg1 (h / house-01) :arg2 (r3 / rate-entity-91 :arg1 (m / more-than :op1 30) :arg2 (t2 / temporal-quantity :quant (N / N-A) :unit (y / year))))) :op2 (r4 / recommend-01 :arg1 (t3 / turnkey :arg1 (p / property :mod (' / '')) :arg2 (t4 / thing :arg2-of (p2 / price-01) :mod (t5 / this)))))
(r / request-01 :arg1 (c / check-01 :arg1 (c2 / comply-01 :arg1 (p / protect-01 :arg1 (c3 / child :arg0-of (h / have-rel-role-91 :arg1 (c4 / child) :arg2 (c5 / child)))))))
(c / contrast-01 :arg1 (a / ambitious :domain (w / we)) :arg2 (d / dreamers :polarity - :domain (w2 / we)))
(a / and :op1 (e / end-01 :arg0 (t / that) :arg1 (i / idea :mod (a2 / any) :arg1-of (c / come-01 :arg4 (b / back :prep-to (g / game)) :direction (b2 / back) :destination (b3 / back)))) :op2 (s / stop-01 :arg0 (s2 / stop-01 :arg0 (p / person :name (n / name :op1 "Wiland")) :arg1 (d / deny-01 :arg0 (p2 / person) :arg1 (g2 / go-01 :arg1 (p3 / person) :direction (d2 / down) :time (b4 / before :op1 (e2 / expel-01 :arg0 (p4 / person) :arg1 (p5 / person))))) :mod (o / only)) :arg1 (r / right-05 :arg1 (p6 / person) :arg2 (d3 / disallowed :arg0 (p7 / person) :arg1 (r2 / right-05 :arg1 (p8 / person) :arg2 (d4 / die-01 :arg1 (p9 / person)))))))
(p / published :arg0 (w / we) :arg1 (n / name :poss (y / you)) :arg1-of (c / cause-01 :arg0 (p2 / provide-01 :arg0 (w2 / we) :arg1 (t / thing :arg2-of (n2 / name-01 :arg1 (y2 / you))))) :arg1-of (h / have-condition-91 :arg2 (a / ask-01 :arg0 (y3 / you) :arg1 (n3 / number :polarity - :arg0 (w3 / we) :arg1 (n4 / number :mod (p3 / phone :arg1-of (m / mobile-02)) :poss (y4 / you)) :time (e / ever)))))
(r / rate-entity-91 :arg1 (p / percentage-entity :value (N / N-A)) :arg2 (t / temporal-quantity :quant (N2 / N-A) :unit (y / year)) :arg1-of (e / end-01 :time (d / date-entity :month (A / Aug.) :day 31)) :arg1-of (e2 / end-01 :time (d2 / date-entity :month (A2 / Aug.) :day 31)))
(r / rate-entity-91 :arg1 (p / percentage-entity :value (N / N-A)) :arg2 (t / temporal-quantity :quant (N2 / N-A) :unit (y / year)) :arg1-of (e / end-01 :time (d / date-entity :month (A / Aug.) :day 31)) :arg1-of (e2 / end-01 :time (d2 / date-entity :month (A2 / Aug.) :day 31)))
(d / die-01 :arg1 (p / person :quant (a / at-least :op1 12)) :arg1-of (c / cause-01 :arg0 (f / flood)) :location (s / state :mod (c2 / country :name (n / name :op1 "US"))))
(s / say-01 :arg0 (b / boss :mod (j / jd)) :arg1 (p / possible-01 :arg1 (h / hurt-01 :arg0 (w / wage :arg1-of (h2 / high-02 :degree (m / more))) :arg1 (e / expand-01))))
(l / left :arg0 (- / -lrb- :name (n / name :op1 (a / actor) :op2 (-2 / -lrb-) :op3 (-3 / -lrb-))) :arg1 (-4 / -rrb- :mod (r / right)) :time (a2 / after :op1 (n2 / now) :quant (f / few :op1 (t / temporal-quantity :quant (N / N-A) :unit (y / year)))))
(a / and :op1 (i / interesting :degree (m / more :degree (m2 / much)) :domain (s / show-01 :arg1 (l / law :poss (l2 / law)))) :op2 (s2 / say-01 :arg0 (p / person :arg0-of (a2 / apply-01)) :arg1 (c / comment-01 :arg0 (p2 / person) :arg3 (p3 / person :arg0-of (h / have-org-role-91 :arg2 (c2 / correspondent))))))
(a / and :op1 (i / interesting :degree (m / more :degree (m2 / much)) :domain (s / show-01 :arg1 (l / law :poss (l2 / law)))) :op2 (s2 / say-01 :arg0 (p / person :arg0-of (a2 / apply-01)) :arg1 (c / comment-01 :arg0 (p2 / person) :arg3 (p3 / person :arg0-of (h / have-org-role-91 :arg2 (c2 / correspondent))))))
(s / say-01 :arg0 (h / he) :arg1 (w / wound-01 :arg1 (a / and :op1 (p / person :arg0-of (h2 / have-org-role-91 :arg1 (p2 / police) :arg2 (o / officer))) :op2 (c / civilian :quant 5))))
(b / believe-01 :arg0 (i / i) :arg1 (e / evidence-01 :polarity - :arg1 (j / justify-01 :arg1 (s / sentence-01 :arg2 (d / die-01))) :degree (e2 / enough :polarity -)) :mod (c / certain))
(s / say-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg2 (p2 / person :arg1-of (e / expert-01)))) :arg1 (s2 / sign-01 :arg1 (s3 / sell-01 :medium (o / online)) :time (a / after :op1 (s4 / show-01 :arg0 (f / figure :mod (n / new)) :arg1 (r / rate-entity-91 :arg1 (p3 / percentage-entity :value (N / N-A) :mod (j / just)) :arg2 (t / temporal-quantity :quant (N2 / N-A) :unit (m / month))) :time (a2 / after :op1 (s5 / show-01 :arg0 (f2 / figure :mod (n2 / new)) :arg1 (r2 / rate-entity-91 :arg1 (u / under :op1 (t2 / temporal-quantity :quant (N3 / N-A) :unit (m2 / month)) :mod (j2 / just)) :arg2 (t3 / temporal-quantity :quant (N4 / N-A) :unit (m3 / month)))))))))
(g / give-01 :mode (i / imperative) :arg0 (y / you) :arg1 (s / space) :arg2 (p / person))
(c / call-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (c2 / country :name (n / name :op1 "US")) :arg2 (s / secretary :mod (s2 / state)))) :arg1 (s3 / stand :poss (p2 / person)) :arg2 (p3 / person :name (n2 / name :op1 "Sergei" :op2 "Lavrov")) :purpose (d / discuss-01 :arg0 (p4 / person) :arg1 (s4 / situation) :location (c3 / country :name (n3 / name :op1 "Syria"))))
(c / contrast-01 :arg2 (u / understand-01 :arg1 (c2 / contact-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (o / organization :name (n / name :op1 "Metcash")) :arg2 (m / member))) :arg1 (p2 / person :name (n2 / name :op1 "Douglass")) :time (w / week :mod (l / last)))))
(c / chance-02 :arg0 (o / organization :name (n / name :op1 "Twins")) :arg1 (c2 / climbed :arg0 (o2 / organization) :arg1 (g / game :mod (o3 / one-half) :poss (o4 / organization :name (n2 / name :op1 "Houston" :op2 "Astros") :mod (l / league :ord (o5 / ordinal-entity :value 2)) :mod (c3 / country)))))
(c / confident-01 :arg1 (p / person :mod (c2 / communism)) :arg2 (p2 / possible-01 :arg1 (s / stuffed :arg1 (p3 / person :mod (c3 / country :name (n / name :op1 "N-A"))) :arg2 (b / boxes :mod (b2 / ballot)) :manner (s2 / supervise-01 :polarity - :arg1 (p4 / person))) :time (m / morning :mod (m2 / morning))))
(m / multi-sentence :snt1 (m2 / make-02 :arg0 (s / shop-01 :mod (t / that) :quant (a / all)) :arg1 (h / hunger-01 :arg0 (y / you))) :snt2 (e / express-01 :arg0 (p / person :arg0-of (s2 / shopping))))
(a / and :op1 (a2 / add-01 :arg0 (i / i) :arg1 (h / hold-04 :arg1 (m / meet-03) :accompanier (p / person :arg0-of (h2 / have-org-role-91 :arg1 (r / region :mod (l / location :name (n / name :op1 "Kurgansk"))) :arg2 (g / governor))))) :op2 (d / discuss-01 :arg1 (m2 / meet-03)) :op3 (d2 / discuss-01 :arg1 (i2 / issue-02 :arg0 (a3 / and :op1 (i3 / increase-01 :arg1 (t / turnover :mod (t2 / trade-01))) :op2 (d3 / deliver-01 :arg1 (e / equipment :arg1-of (m3 / modern-02)) :arg2 (r2 / region :mod (e2 / email)))))))
(c / complain-01 :arg0 (i / i) :arg1 (s / she))
(e / explain-01 :arg0 (s / season :mod (p / peak-01 :arg1 (i / it))) :arg1 (t / this) :time (s2 / season :mod (p2 / peak-01) :time-of (a / and :op1 (m / make-01 :arg1 (m2 / money :quant (m3 / most))) :op2 (w / want-01 :polarity - :arg0 (y / you) :arg1 (d / deal-01 :arg0 (y2 / you) :arg2 (i2 / issue-02 :mod (o / other)))))))
(a / and :op1 (p / permit-01 :arg1 (w / watch-01 :arg0 (j / journalist) :arg1 (e / execute-01) :location (c / country :name (n / name :op1 "America")))) :op2 (c2 / cause-01 :arg0 (a2 / application :quant (m / more :frequency (o / often)) :arg2-of (a3 / available-02)) :arg1 (d / decide-01 :arg0 (j2 / journalist) :arg1 (d2 / decide-01 :arg0 (j3 / journalist)))))
(p / play-02 :arg0 (w / woman) :arg1 (p2 / part :mod (b / big) :part-of (p3 / process-02 :arg1 (d / decision-making))))
(s / say-01 :arg0 (a / and :op1 (p / person :name (n / name :op1 "McKee")) :op2 (p2 / person :name (n2 / name :op1 "Capewell"))) :arg1 (s2 / sponsor-01 :arg0 (m / meet-03 :quant 1 :arg1-of (i / include-91 :arg2 (m2 / meet-03))) :arg1 (o / organization :name (n3 / name :op1 "EuroSwiss" :op2 "Health") :arg1-of (c / call-01 :arg2 (f / fund-01 :arg0 (o2 / organization :name (n4 / name :op1 "British" :op2 "American" :op3 "Tobacco")) :arg1 (s3 / study-01 :arg0-of (d / depend-01 :polarity -))) :time (p3 / previous)))))
(c / contrast-01 :arg1 (s / say-01 :arg0 (y / you) :arg1 (c2 / contrast-01 :arg1 (s2 / seek-01 :arg0 (y2 / you) :arg1 (a / alliance :arg0 (y3 / you) :arg1 (p / party :mod (o / other)))) :arg2 (w / win-01 :arg0 (y4 / you) :arg2 (e / elect-01)))) :arg2 (s3 / say-01 :arg0 (y5 / you) :arg1 (t / that)))
(a / and :op1 (s / steers :arg0 (i / it) :arg1 (y / you)) :op2 (h / help-01 :arg0 (y2 / you) :arg1 (y3 / you) :arg2 (s2 / scout :arg0 (y4 / you) :arg1 (p / person :arg1-of (l / like-01 :polarity - :arg0 (y5 / you) :arg1-of (c / cause-01 :arg0 (a2 / and :op1 (f / fire :arg1 (y6 / you)) :op2 (d / dispensing :arg1 (y7 / you)))))))))
(a / and :op1 (s / steers :arg0 (i / it) :arg1 (y / you)) :op2 (h / help-01 :arg0 (y2 / you) :arg1 (y3 / you) :arg2 (s2 / scout :arg0 (y4 / you) :arg1 (p / person :arg1-of (l / like-01 :polarity - :arg0 (y5 / you) :arg1-of (c / cause-01 :arg0 (a2 / and :op1 (f / fire :arg1 (y6 / you)) :op2 (d / dispensing :arg1 (y7 / you)))))))))
(c / converse-01 :arg1 (a / and :op1 (a2 / authority :mod (r / region)) :op2 (a3 / authority :mod (c2 / city)) :location (a4 / and :op1 (c3 / country :name (n / name :op1 "Russia")) :op2 (c4 / country :name (n2 / name :op1 "Belarus")))) :arg2 (a5 / and :op1 (i / implement-01 :arg1 (a6 / and :op1 (p / policy :mod (i2 / industry)) :op2 (r2 / regulatory) :op3 (f / framework :poss (o / organization :name (n3 / name :op1 "Union" :op2 "State"))))) :op2 (i3 / implement-01 :arg1 (a7 / and))) :time (c5 / converse-01) :time (a8 / and :op1 (s / session :mod (p2 / plenary)) :op2 (s2 / session :mod (b / breakout))))
(i / important :degree (s / so) :domain (s2 / stay-01 :arg1 (y / you) :manner (t / together) :time (n / now)))
(i / important :degree (s / so) :domain (s2 / stay-01 :arg1 (y / you) :manner (t / together) :time (n / now)))
(a / assume-02 :arg0 (i / i) :arg1 (r / reference-04 :arg1 (t / thing :manner-of (a2 / attempt-01 :arg0 (p / person :name (n / name :op1 "Khrushchev")) :arg1 (s / sign-01 :arg0 (p2 / person) :arg1 (s2 / something) :manner (m / mean-01 :polarity - :arg2 (p3 / picture-01 :arg1 (s3 / society :mod (h / human)) :mod (o / overall))))))))
(c / calm :arg0 (o / organization :name (n / name :op1 "Campaign" :op2 "Against" :op3 "Living" :op4 "Miserably")) :arg1 (a / and :op1 (a2 / announce-01 :arg0 (p / person :mod (m / male)) :arg1 (y / year :quant 2015)) :op2 (a3 / aim-01 :arg0 (p2 / person) :arg1 (c2 / challenge-01 :arg0 (p3 / person) :arg1 (c3 / culture :arg0-of (c4 / cause-01 :arg1 (s / seek-01 :arg0 (m2 / man) :arg1 (h / help-01) :time (n2 / need-01 :arg0 (m3 / man) :arg1 (h2 / help-01)))))))) :time (b / bid-03 :arg0 (p4 / person) :arg1 (a4 / address-02 :arg0 (p5 / person) :arg1 (p6 / problem))))
(d / decline-02 :arg0 (v / volume :quant-of (l / lend-01) :mod (l2 / lend-01)) :arg1 (s / significant-02) :time (a / after :op1 (m / mood :arg1-of (p / panic))))
(t / try-01 :polarity - :arg0 (p / person :name (n / name :op1 "Luis" :op2 "Enrique") :arg0-of (h / have-org-role-91 :arg1 (p2 / person :name (n2 / name :op1 "Luis" :op2 "Enrique") :arg0-of (h2 / have-org-role-91 :arg1 (o / organization) :arg2 (c / coach))) :arg2 (c2 / coach))) :arg1 (h3 / hide-01 :arg0 (p3 / person) :arg1 (r / return-01 :arg1 (p4 / person) :arg4 (c3 / country :name (n3 / name :op1 "Rome")) :purpose (m / match-01 :arg0 (p5 / person) :arg1 (m2 / match-03 :arg0 (l / league :ord (o2 / ordinal-entity :value 1)) :arg2 (t2 / thing :arg1-of (f / feel-01 :arg0 (o3 / organization)) :arg1-of (s / special-02)))) :arg2 (c4 / country :name (n4 / name :op1 "Rome")))))
(u / urge-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (o / organization :name (n / name :op1 "U.N.")) :arg2 (c / chief))) :arg1 (p2 / party :quant (a / all) :arg2-of (i / include-91 :arg1 (a2 / and :op1 (d / divide-02 :arg1 (o2 / organization :name (n2 / name :op1 "U.N." :op2 "Security" :op3 "Council"))) :op2 (u2 / unite-01 :arg1 (p3 / party)) :op3 (s / support-01 :arg0 (p4 / party) :arg1 (n3 / negotiate-01) :purpose (f / find-01 :arg0 (p5 / party) :arg1 (s2 / solution :mod (p6 / politics))))))) :arg2 (c2 / chief) :mod (a3 / again))
(s / say-01 :arg0 (p / person :name (n / name :op1 "Tom" :op2 "Davies") :arg0-of (h / have-org-role-91 :arg1 (o / organization :name (n2 / name :op1 "Amnesty")))) :arg1 (d / do-02 :arg0 (t / they) :arg1 (j / job :arg1-of (r / reasonable-02)) :arg2 (h2 / help-01 :arg0 (t2 / they) :arg1 (c / concern-01 :arg0 (s2 / sell-01 :arg1 (e / equipment :mod (t3 / torture-01) :mod (l / law :polarity -))) :arg2 (w / we)))))
(m / multi-sentence :snt1 (c / consider-01 :arg0 (p / person :arg1-of (e / expert-01)) :arg1 (p2 / possible-01 :arg1 (b / ban-01 :arg0 (p3 / person :arg1-of (e2 / expert-01)) :arg1 (' / '' :domain (p4 / person)) :arg1-of (p5 / possible-01)))) :snt2 (f / find-02 :arg0 (p6 / person :arg1-of (e3 / expert-01)) :arg1 (s / strange :domain (p7 / possible-01 :arg1 (l / live-01 :arg0 (p8 / person :mod (s2 / some)) :location (f2 / facility :name (n / name :op1 "N-A"))) :arg1-of (c2 / contrast-01 :arg2 (p9 / possible-01 :polarity - :arg1 (r / rectify-01 :arg1 (p10 / person))))))))
(i / it :mod (a / all) :topic (i2 / i))
(a / and :op1 (p / person :quant 10 :arg0-of (h / have-org-role-91 :arg1 (c / crew) :arg2 (m / member))) :op2 (p2 / plane :quant 72 :arg0-of (h2 / have-org-role-91 :arg1 (p3 / passenger) :arg2 (m2 / member))))
(a / and :op1 (p / person :quant 10 :arg0-of (h / have-org-role-91 :arg1 (c / crew) :arg2 (m / member))) :op2 (p2 / plane :quant 72 :arg0-of (h2 / have-org-role-91 :arg1 (p3 / passenger) :arg2 (m2 / member))))
(m / multi-sentence :snt1 (c / contrast-01 :arg1 (t / toyed :arg0 (t2 / they) :arg1 (c2 / create-01 :arg0 (t3 / they) :arg1 (a / advert :arg1 (c3 / corporation) :arg1-of (r / realistic-03 :degree (m2 / more))))) :arg2 (' / '' :arg0 (t4 / they) :arg1 (h / home :prep-with (a2 / and :op1 (c4 / crap :arg1-of (b / bright-02)) :op2 (a3 / animation))))) :snt2 (a4 / arresting :arg1 (i / it) :degree (m3 / more)))
(a / and :op1 (p / possible-01 :arg1 (c / cope-01 :arg0 (p2 / person :mod (e / economy)) :arg1 (r / rate :arg1-of (h / high-02 :degree (m / more))))) :op2 (a2 / and :op1 (n / need-01 :arg0 (p3 / person) :arg1 (r2 / rate :arg1-of (h2 / high-02 :degree (m2 / more)))) :op2 (n2 / need-01 :arg0 (p4 / person) :arg1 (p5 / person :arg0-of (h3 / have-org-role-91 :arg1 (o / organization :name (n3 / name :op1 "Pantheon" :op2 "Macroeconomics") :part-of (o2 / organization :name (n4 / name :op1 "Pantheon" :op2 "Macroeconomics"))) :arg2 (c2 / chief))))))
(c / crash-01 :arg1 (p / person :mod (r / religious-group :name (n / name :op1 "N-A")) :arg1-of (k / kill-01 :location (r2 / range :mod (c2 / city :name (n2 / name :op1 "Mecca"))))))
(b / be-located-at-91 :arg1 (t / thing :arg0-of (p / play-12 :arg2 (t2 / tennis)) :mod (c / czech)) :arg2 (c2 / clinic) :location (c3 / clinic))
(s / say-01 :arg0 (h / he) :arg1 (i / important :domain (a / and :op1 (f / find-01 :arg0 (r / radio :quant 3) :arg1 (a2 / and :op1 (m / music :mod (n / new)) :op2 (t / thing :mod (n2 / new) :arg1-of (t2 / think-01 :arg0 (i2 / i))))) :op2 (t3 / thing :arg1-of (s2 / say-01 :arg0 (h2 / he)) :mod (n3 / new)) :mod (a3 / also))) :mod (a4 / also))
(v / value-01 :arg1 (m / monetary-quantity :arg1-of (i / include-91 :arg2 (v2 / value :mod (m2 / market) :poss (c / company)) :arg3 (p / percentage-entity :value (N / N-A)))) :arg2 (m3 / monetary-quantity :arg2-of (p2 / price-01 :arg1 (c2 / commodity :mod (t / tumble)))) :time (y / year :mod (t2 / this)) :arg1-of (c3 / cause-01 :arg0 (a / and :op1 (d / demand-01 :arg0 (c4 / country :name (n / name :op1 "China")) :arg1 (t3 / thing :arg2-of (p3 / price-01 :arg1 (c5 / commodity :mod (e / economy)))) :location (a2 / and :op1 (d2 / demand-01) :op2 (h / havoc :location (a3 / across :op1 (m4 / market))))))))
(t / tell-01 :arg0 (p / person :name (n / name :op1 "Lamb")) :arg1 (n2 / need-01 :arg0 (p2 / police) :arg1 (s / send-01 :arg0 (p3 / police) :arg1 (p4 / person :arg0-of (h / have-org-role-91 :arg2 (o / officer))) :arg2 (h2 / home :poss (p5 / person)))) :arg2 (p6 / person :arg0-of (h3 / have-org-role-91 :arg1 (p7 / police) :arg2 (m / member))))
(o / or :op2 (s / send-01 :arg0 (y / you) :arg1 (t / they) :arg2 (n / number :mod (i / international)) :condition (o2 / outside :op1 (c / country :name (n2 / name :op1 "UK")))))
(h / have-concession-91 :arg2 (c / claim-01 :arg0 (a / and :op1 (c2 / country :name (n / name :op1 "Roman" :op2 "Empire")) :op2 (p / person :name (n2 / name :op1 "Khazar" :op2 "Khaganate")) :op3 (h2 / hordes :mod (g / golden))) :arg1 (i / it) :concession (c3 / claim-01 :arg0 (a2 / and :op1 (c4 / country) :op2 (c5 / country)) :arg1 (i2 / it))))
(a / and :op1 (l / leave-11 :arg0 (r / refugee :quant (s / some)) :arg1 (b / border-01 :arg1 (r2 / refugee) :arg2 (b2 / bus :mod (s2 / serbian-hungarian)) :location (a2 / and :op1 (l2 / location :name (n / name :op1 "Belgrade")) :op2 (b3 / border-01 :arg2 (c / country :name (n2 / name :op1 "Croatia")))))) :op2 (r3 / report-01 :arg0 (c2 / company :name (n3 / name :op1 "BBC"))))
(s / say-01 :arg0 (p / person :arg0-of (l / lead-02 :arg1 (p2 / political-party :name (n / name :op1 "Labour" :op2 "Party"))) :arg0-of (a / approach-02 :arg1 (p3 / politics) :arg1-of (d / differ-02)) :arg0-of (a2 / approach-02 :arg1 (p4 / politics) :arg1-of (d2 / differ-02)) :arg0-of (a3 / approach-02 :arg1 (p5 / politics))) :arg1 (h / have-03 :arg0 (p6 / person) :arg1 (i / idea :mod (' / '') :topic (q / question-01 :arg1 (a4 / and :op1 (a5 / ask-01 :arg1 (m / mr :arg1 (p7 / person :name (n2 / name :op1 "Cameron")))) :op2 (g / give-01 :arg1 (s2 / suggest-01 :quant (m2 / more-than :op1 30,000))))))))
(s / say-01 :arg0 (c / company) :arg1 (p / plan-01 :arg0 (c2 / company) :arg1 (h / hire-01 :arg0 (c3 / company) :arg1 (p2 / person :quant 40000) :arg2 (a / and :op1 (s2 / store) :op2 (c4 / center :arg1-of (d / distribute-01) :location (a2 / around :op1 (c5 / country))))) :op3 (h2 / hire-01 :arg1 (p3 / person :quant 45,000) :arg2 (s3 / season :quant 2014 :purpose (h3 / holiday)))))
(a / and :op1 (t / test-01 :arg0 (c / candidate :quant 6)) :op2 (d / do-02 :arg0 (a2 / and :op1 (p / person :name (n / name :op1 "Biden")) :op2 (p2 / person :name (n2 / name :op1 "Carson")) :op3 (p3 / person :name (n3 / name :op1 "Bush"))) :arg1 (g / good :degree (m / most))))
(a / and :op1 (t / take-01 :arg0 (d / data :name (n / name :op1 (m / mortality))) :arg1 (t2 / time :arg1-of (l / long-03)) :purpose (s / show-up-02 :arg1 (d2 / data))) :op2 (s2 / say-01 :arg0 (i / i) :arg1 (c / cease-01 :arg0 (p / person :name (n2 / name :op1 "Robin" :op2 "Blackstone") :arg0-of (h / have-org-role-91 :arg2 (p2 / person :arg1-of (e / expert-01 :arg2 (s3 / surgery-01)))) :arg0-of (h2 / have-org-role-91 :arg2 (p3 / person :arg1-of (e2 / expert-01 :arg2 (s4 / surgery-01)))) :arg0-of (h3 / have-org-role-91 :arg2 (p4 / person :arg1-of (e3 / expert-01 :arg2 (s5 / surgery-01)))) :arg0-of (h4 / have-org-role-91 :arg2 (p5 / person :arg1-of (e4 / expert-01 :arg2 (s6 / surgery-01)))) :arg0-of (h5 / have-org-role-91 :arg2 (p6 / person :arg1-of (e5 / expert-01 :arg2 (s7 / surgery-01)))) :arg0-of (h6 / have-org-role-91 :arg2 (p7 / person :arg1-of (e6 / expert-01 :arg2 (s8 / surgery-01)))) :arg0-of (h7 / have-org-role-91 :arg2 (p8 / person :arg1-of (e7 / expert-01 :arg2 (s9 / surgery-01)))) :arg0-of (h8 / have-org-role-91 :arg2 (p9 / person :arg1-of (e8 / expert-01 :arg2 (s10 / surgery-01)))) :arg0-of (h9 / have-org-role-91 :arg2 (p10 / person :arg1-of (e9 / expert-01 :arg2 (s11 / surgery-01)))) :arg0-of (h10 / have-org-role-91 :arg2 (p11 / person :arg1-of (e10 / expert-01 :arg2 (s12 / surgery-01))))))))
(s / say-01 :arg0 (p / politician) :arg1 (s2 / support-01 :arg0 (p2 / politician) :arg1 (f / form :mod (d / dialogue-01) :mod (a / any)) :location (c / city :name (n / name :op1 "Kiev"))) :time (t / time :arg1-of (s3 / same-01)))
(c / contrast-01 :arg1 (o / obligate-01 :arg1 (p / person :arg0-of (h / have-rel-role-91 :arg1 (w / we) :arg2 (p2 / parent))) :arg2 (d / dragged :arg0 (p3 / person) :arg1 (p4 / person :arg0-of (h2 / have-rel-role-91 :arg1 (w2 / we) :arg2 (c2 / child))))) :arg2 (a / and :op1 (d2 / dig :arg0 (p5 / person) :arg1 (b / blog-01 :arg0 (p6 / person))) :op2 (w3 / want-01 :polarity - :arg0 (p7 / person) :arg1 (l / leave-11 :arg0 (p8 / person)))))
(a / and :op1 (p / propose-01 :arg0 (w / we) :arg1 (i / idea)) :op2 (p2 / propose-01 :arg0 (w2 / we) :arg1 (c / change-01 :arg0 (w3 / we) :arg1 (l / law :arg0-of (q / quote-01 :arg1 (s / say-01 :arg0 (o / organization :name (n / name :op1 "TASS")) :arg1 (p3 / person :name (n2 / name :op1 "Yevtukhov") :arg0-of (h / have-org-role-91 :arg2 (m / mr.))))))) :condition (a2 / accept-01 :arg1 (i2 / it))))
(r / reminded :domain (i / i :arg1-of (i2 / include-91 :arg2 (7 / 70s) :arg3 (72 / 70s))) :time (s / struggled :arg0 (p / person :mod (o / old) :arg0-of (h / have-rel-role-91 :arg1 (h2 / he) :arg2 (d / dad))) :medium (t / tv) :manner (a / and :op1 (f / far :degree (t2 / too)) :op2 (l / lose-02 :arg1 (j / job :poss (p2 / person))))))
(c / contrast-01 :arg2 (a / and :op1 (f / facility :polarity - :arg1-of (s / separate-02) :purpose (s2 / serve-01 :arg0 (p / person) :arg1 (t / thing :arg2-of (s3 / sentence-01 :arg1 (p2 / person))))) :op2 (d / doubt-01 :arg0 (i / i) :arg1 (t2 / think-01 :arg0 (p3 / person :mod (p4 / prison) :arg2-of (s4 / staff-01)) :arg1 (s5 / safe-01 :arg1 (s6 / safe-01 :arg1 (o / or :op1 (p5 / person :mod (s7 / such)) :op2 (i2 / identification :mod (i3 / ideology)) :poss (p6 / person)))) :manner (s8 / serious)))))
(m / multi-sentence :snt1 (e / easy-05 :polarity - :arg1 (m2 / match-03)) :snt2 (q / quote-01 :arg0 (w / website :mod (o / official) :poss (o2 / organization :name (n / name :op1 "UEFA"))) :arg2 (p / person :name (n2 / name :op1 "Benitez")) :arg1-of (s / say-01 :arg0 (p2 / person))))
(a / arrest-01 :arg1 (m / man :mod (h / heart :part-of (c / country :name (n / name :op1 "Russia"))) :mod (c2 / country :name (n2 / name :op1 "Russia"))) :arg2 (g / gunpoint :arg1 (m2 / man) :arg2 (r / runway :mod (s / siberian))) :li 2003)
(a / and :op1 (e / explain-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (c / continent :name (n / name :op1 "N-A")) :arg2 (d / diplomat))) :arg1 (d2 / day :mod (o / other)) :time (d3 / day :mod (o2 / other))) :op2 (e2 / explained :arg0 (s / state :quant (s2 / some) :arg0-of (h2 / have-org-role-91 :arg1 (o3 / organization) :arg2 (m / member))) :arg1 (a2 / and :op1 (a3 / agenda :mod (s3 / self-absorbed) :poss (c2 / country :name (n2 / name :op1 "Britain")) :topic (t / thing :arg2-of (c3 / characteristic-02 :arg1 (c4 / country)))) :op2 (c5 / change-01 :arg0 (c6 / country) :arg1 (t2 / treaty) :arg1-of (w / want-01 :polarity - :arg0 (c7 / country) :mod (m2 / most))))))
(h / hospitalised :arg1 (p / person :name (n / name :op1 "Lucie" :op2 "Safarova")) :arg2 (t / thing :arg1-of (r / report-01 :arg0 (p2 / publication :name (n2 / name :op1 "AFP"))) :mod (b / bacterial)))
(a / and :op2 (g / get-01 :mode (i / interrogative) :arg0 (y / you) :arg1 (f / fatigue)))
(w / write-01 :arg0 (o / organization :name (n / name :op1 "Kommersant")) :arg1 (s / submit-01 :arg0 (m / military) :arg1 (c / card :mod (f / food)) :arg2 (g / government-organization :arg0-of (g2 / govern-01))) :time (e / early :degree (m2 / more) :time (e2 / early :degree (m3 / more))))
(a / and :mode (i / interrogative) :op1 (r / rational :polarity - :domain (i2 / it) :condition (m / mistook :arg0 (y / you) :arg1 (h / hallmate :beneficiary (p / person :arg0-of (h2 / have-rel-role-91 :arg1 (y2 / you) :arg2 (h3 / husband) :time (f / future)))))) :op2 (b / broke :mode (i3 / imperative) :arg0 (y3 / you)) :op3 (o / obligate-01 :arg1 (y4 / you) :arg2 (s / see-01 :arg0 (y5 / you) :arg1 (t / they) :frequency (r2 / rate-entity-91 :arg3 (t2 / temporal-quantity :quant (N / N-A) :unit (d / day))))) :op4 (o2 / obligate-01 :arg1 (y6 / you) :arg2 (s2 / see-01 :arg0 (y7 / you) :arg1 (t3 / they) :frequency (r3 / rate-entity-91 :arg1 (d2 / day :mod (a2 / all)) :arg2 (c / custody :poss (y8 / you) :mod (m2 / mutual)) :arg1-of (p2 / possible-01)))))
(o / operate-01 :arg1 (b / barbershop) :location (s / site :mod (t / this)) :duration (m / many :op1 (t2 / temporal-quantity :quant (N / N-A) :unit (y / year))))
(e / equal-01 :arg1 (s / state :mod (t / this)) :arg2 (s2 / situation :location-of (h / have-03 :arg0 (y / you) :arg1 (v / vips :quant 75 :arg1-of (s3 / stadium :arg2 (s4 / stadium :mod (8 / 80-thousand-person)))))))
(m / monitor-01 :arg0 (p / person :arg0-of (r / research-01)) :arg1 (l / level :mod (b / blood :mod (b2 / blood)) :arg0-of (r2 / reflect-01 :arg1 (l2 / level :mod (s / sugar :mod (b3 / blood))) :arg2 (l3 / level :mod (s2 / sugar :mod (b4 / blood))) :time (o / over :op1 (t / time)))) :mod (a / also))
(m / monitor-01 :arg0 (p / person :arg0-of (r / research-01)) :arg1 (l / level :mod (b / blood :mod (b2 / blood)) :arg0-of (r2 / reflect-01 :arg1 (l2 / level :mod (s / sugar :mod (b3 / blood))) :arg2 (l3 / level :mod (s2 / sugar :mod (b4 / blood))) :time (o / over :op1 (t / time)))) :mod (a / also))
(s / say-01 :arg0 (c / claim-01 :arg0 (a / agency :arg0-of (f / fund-01 :arg1 (t / thing :arg1-of (c2 / claim-01 :arg0 (a2 / agency :arg0-of (f2 / fund-01 :arg1 (i / industry :consist-of (t2 / tobacco))))) :quant (s2 / some))))) :arg1 (h / harmful-02 :arg0 (t3 / thing :arg1-of (c3 / claim-01 :arg0 (a3 / agency :arg0-of (f3 / fund-01 :arg1 (d / drug)))) :quant (p / percentage-entity :value (N / N-A))) :compared-to (s3 / smoke-02 :arg0 (a4 / agency) :arg1 (p2 / person :quant 12))))
(s / say-01 :arg0 (p / person :name (n / name :op1 "Martin" :op2 "McKee") :arg0-of (h / have-org-role-91 :arg1 (a / and :op1 (h2 / health :mod (c / country :name (n2 / name :op1 "N-A"))) :op2 (h3 / health :mod (p2 / public)) :location (a2 / and :op1 (o / organization :name (n3 / name :op1 "London" :op2 "School" :op3 "of" :op4 "Hygiene" :op5 "and" :op6 "Tropical" :op7 "Medicine")) :op2 (p3 / person :name (n4 / name :op1 "Simon" :op2 "Capewell") :arg0-of (h4 / have-org-role-91 :arg1 (o2 / organization :name (n5 / name :op1 "University" :op2 "of" :op3 "Liverpool")) :arg2 (p4 / professor))) :op3 (p5 / person :name (n6 / name :op1 "Simon" :op2 "Capewell") :arg0-of (h5 / have-org-role-91 :arg1 (o3 / organization :name (n7 / name :op1 "University" :op2 "of" :op3 "Liverpool")) :arg2 (p6 / professor))) :op4 (h6 / have-org-role-91 :arg0 (p7 / person) :arg1 (o4 / organization :name (n8 / name :op1 "University" :op2 "of" :op3 "Liverpool")) :arg2 (p8 / professor))) :op5 (h7 / have-org-role-91 :arg0 (p9 / person) :arg1 (o5 / organization :name (n9 / name :op1 "University" :op2 "of" :op3 "Liverpool")) :arg2 (p10 / professor))))) :arg1 (r / recommend-01 :arg1 (b / base-02 :arg1 (p11 / policy) :arg2 (t / thing :arg0-of (e / evidence-01 :arg1 (e2 / effective-04))))))
(m / multi-sentence :snt1 (a / and :op1 (g / go-01 :arg1 (n / nature :location-of (a2 / and :op1 (g2 / go-01 :arg1 (n2 / nature :quant (a3 / all))) :op2 (c / commodity :mod (e / even) :domain (a4 / air :mod (e2 / even))))) :op2 (c2 / commodity :domain (a5 / air :mod (e3 / even)))) :op3 (n3 / name-01 :arg1 (b / boy :arg1-of (n4 / name-01 :arg0 (b2 / boy))) :arg2 (h / hopeful-03 :arg0 (b3 / boy) :arg1 (s / see-01 :arg0 (b4 / boy) :arg1 (t / tree :arg1 (g3 / girl :arg1-of (d / dream-01 :arg0 (h2 / he)))))))) :snt2 (n5 / name-01 :arg1 (p / person :arg1-of (d2 / die-01 :arg1-of (k / know-01 :polarity -)) :mod (i / interest :mod (r / real))) :arg2 (p2 / person :name (n6 / name :op1 "Theodor" :op2 "Seuss" :op3 "Geisel") :arg1-of (d3 / die-01 :location (t2 / thing :quant 1991)))))
(m / multi-sentence :snt1 (p / pay-01 :arg0 (i / it) :manner (m2 / matter :mod (s / such))) :snt2 (l / leave-17 :arg1 (m3 / measure-02 :mod (e / emergency)) :mod (o / only) :condition (c / catches :arg1 (p2 / problem) :prep-with (y / you))))
(m / multi-sentence :snt1 (p / pay-01 :arg0 (i / it) :manner (m2 / matter :mod (s / such))) :snt2 (l / leave-17 :arg1 (m3 / measure-02 :mod (e / emergency)) :mod (o / only) :condition (c / catches :arg1 (p2 / problem) :prep-with (y / you))))
(b / buy-01 :arg0 (p / person :quant (m / more-than :op1 (p2 / percentage-entity :value (N / N-A)))) :arg1 (a / and :op1 (c / clothes) :op2 (s / shoe)) :arg1-of (i / instead-of-91 :arg2 (u / use-01 :arg0 (p3 / person) :arg1 (s2 / street :arg1-of (h / high-02)) :arg2 (s3 / street :arg1-of (h2 / high-02)))) :time (t / time :arg1-of (s4 / same-01)))
(b / buy-01 :arg0 (p / person :quant (m / more-than :op1 (p2 / percentage-entity :value (N / N-A)))) :arg1 (a / and :op1 (c / clothes) :op2 (s / shoe)) :arg1-of (i / instead-of-91 :arg2 (u / use-01 :arg0 (p3 / person) :arg1 (s2 / street :arg1-of (h / high-02)) :arg2 (s3 / street :arg1-of (h2 / high-02)))) :time (t / time :arg1-of (s4 / same-01)))
(c / contrast-01 :arg1 (u / unhurt :domain (h / he)) :arg2 (g / go-08 :arg1 (v / video :poss (f / fall)) :arg2 (m / media :mod (s / social))))
(s / state-01 :arg0 (d / defendant :arg1-of (r / resemble-01 :arg2 (p / person :name (n / name :op1 "Vladimir" :op2 "Drinkman") :arg0-of (h / have-03 :arg1 (s2 / skill) :purpose (h2 / hack-04 :arg0 (d2 / defendant) :arg1 (s3 / system :mod (c / computer) :poss (w / we))))) :arg0-of (r2 / represent-01 :arg1 (t / threaten-01 :arg2 (s4 / system :mod (c2 / computer) :poss (w2 / we)))))) :arg1 (p2 / person :name (n2 / name :op1 "Paul" :op2 "Fishman") :arg0-of (h3 / have-org-role-91 :arg1 (c3 / country) :arg2 (a / attorney :mod (s5 / state)))))
(i / indicate-01 :polarity - :arg1 (a / and :op1 (b / believe-01 :arg0 (p / police) :arg1 (s / shoot-02 :arg1 (h / he)) :time (a2 / already)) :op2 (a3 / and :op1 (b2 / believe-01 :arg0 (p2 / police) :arg1 (s2 / shoot-02 :arg1 (h2 / he))) :op2 (k / kill-01 :arg0 (h3 / he) :arg1 (a4 / and :op1 (h4 / have-org-role-91 :arg0 (h5 / he) :arg2 (p3 / professor :mod (h6 / history))) :op2 (h7 / have-org-role-91 :arg0 (h8 / he) :arg2 (p4 / professor :mod (h9 / history)))) :op3 (p5 / person :name (n / name :op1 "Ethan" :op2 "Schmidt") :arg0-of (h10 / have-org-role-91 :arg1 (o / office :poss (h11 / he))))))))
(i / indicate-01 :polarity - :arg1 (a / and :op1 (b / believe-01 :arg0 (p / police) :arg1 (s / shoot-02 :arg1 (h / he)) :time (a2 / already)) :op2 (a3 / and :op1 (b2 / believe-01 :arg0 (p2 / police) :arg1 (s2 / shoot-02 :arg1 (h2 / he))) :op2 (k / kill-01 :arg0 (h3 / he) :arg1 (a4 / and :op1 (h4 / have-org-role-91 :arg0 (h5 / he) :arg2 (p3 / professor :mod (h6 / history))) :op2 (h7 / have-org-role-91 :arg0 (h8 / he) :arg2 (p4 / professor :mod (h9 / history)))) :op3 (p5 / person :name (n / name :op1 "Ethan" :op2 "Schmidt") :arg0-of (h10 / have-org-role-91 :arg1 (o / office :poss (h11 / he))))))))
(w / watch-01 :arg0 (i / i) :arg1 (p / person :name (n / name :op1 "Zhirinovsky") :arg0-of (h / have-org-role-91 :arg1 (o / organization :name (n2 / name :op1 "State" :op2 "Duma")) :arg2 (b / buffoonery))) :time (t / today))
(m / multi-sentence :snt1 (o / obvious-01 :arg1 (n / need-01 :arg0 (t / they) :arg1 (s / separate-02 :arg1 (t2 / they)))) :snt2 (e / endanger-01 :arg1 (a / and :op1 (p / person :arg0-of (s2 / suffer-01 :arg1 (f / family :arg1-of (h / have-org-role-91 :arg0 (p2 / person) :arg2 (m2 / member))))) :op2 (p3 / person :arg0-of (s3 / suffer-01 :arg1 (t3 / thing :arg0-of (t4 / trouble-01 :arg1 (p4 / person :arg2-of (s4 / staff-01) :mod (f2 / fsin)))))))))
(f / find-02 :arg0 (h / he :arg1-of (f2 / find-01 :arg0 (h2 / he))) :arg1 (p / pass-03 :arg1 (w / wave-04 :arg1 (u / ultrasonic) :arg1-of (p2 / pass-03 :time (t / then) :location (i / inside :op1 (w2 / worm))))))
(t / train :mod (t2 / train) :destination (b / bus :mod (s / school) :location (o / outside :op1 (l / location :name (n / name :op1 "Hamburg")))))
(c / contrast-01 :arg1 (d / doctor :polarity - :domain (i / i)) :arg2 (a / and :op1 (h / have-03 :arg0 (y / you) :arg1 (t / temporal-quantity :quant (N / N-A) :unit (m / month) :mod (d2 / double))) :op2 (p / play-11 :polarity - :arg0 (h2 / he) :arg2 (p2 / phase :mod (g / group)))))
FAILED_TO_PARSE#Two concepts in a row.
(m / multi-sentence :snt1 (h / help-01 :arg0 (o / organization :name (n / name :op1 "Special" :op2 "Patrol" :op3 "Group")) :arg1 (d / distribute-01 :arg0 (o2 / organization) :arg1 (i / it) :location (a / around :op1 (c / city :name (n2 / name :op1 "London"))) :location (a2 / around :op1 (c2 / city :name (n3 / name :op1 "London")))) :manner (c3 / collective)) :snt2 (' / '' :arg0 (o3 / organization) :arg1 (r / rate-entity-91 :arg1 (m2 / monetary-quantity :quant 6 :unit (p / pound)) :arg2 (k / keys :mod (p2 / person :name (n4 / name :op1 "Allen")))) :arg1-of (c4 / cause-01 :arg0 (c5 / claim-01 :arg0 (o4 / organization) :arg1 (g / gain-02 :arg0 (c6 / country) :arg1 (a3 / access-01 :arg1 (b / bus :mod (a4 / advertising)) :location (p3 / planet)))))))
(s / state-01 :arg0 (p / person :name (n / name :op1 "Qimiao" :op2 "Fan") :arg0-of (h / have-org-role-91 :arg1 (o / organization :name (n2 / name :op1 "World" :op2 "Bank") :part-of (o2 / organization :name (n3 / name :op1 "World" :op2 "Bank") :part-of (c / country :name (n4 / name :op1 "Belarus")))) :arg2 (d / director))) :arg1 (a / and :op1 (h2 / help-01 :arg0 (r / reform-01 :arg1 (s2 / sector :mod (b / banking))) :arg1 (r2 / restore-01 :arg0 (r3 / reform-01) :arg1 (c2 / credit))) :op2 (r4 / return-01 :arg1 (r5 / reform-01) :arg4 (g / grow-01 :arg1 (e / economy)))))
(s / say-01 :arg0 (p / person :name (n / name :op1 "Daniele" :op2 "De" :op3 "Rossi")) :arg1 (c / contrast-01 :arg1 (h / have-03 :polarity - :arg0 (o / organization :name (n2 / name :op1 "Barcelona")) :arg1 (s2 / style :mod (u / unique)) :mod (o2 / only :polarity -)) :arg2 (i / individual :arg1-of (r / remarkable-02) :mod (a / also))))
(p / person :arg0-of (l / lead-02 :arg1 (o / organization :name (n / name :op1 "New" :op2 "Labour"))) :domain (p2 / person :name (n2 / name :op1 "Jeremy" :op2 "Corbyn") :arg0-of (h / have-org-role-91 :arg1 (o2 / organization) :arg2 (m / minister :mod (p3 / prime)))) :purpose (t / take-01 :arg0 (p4 / person) :arg1 (p5 / person :name (n3 / name :op1 "David" :op2 "Cameron")) :time (l2 / late :degree (m2 / more) :ord (o3 / ordinal-entity :value 1))))
(r / report-01 :arg1 (c / child :quant (a / about :op1 3) :arg1-of (s / succeed-01 :arg0 (c2 / child) :arg1-of (s2 / succeed-01))) :mod (a2 / also))
(s / say-01 :arg1 (c / compare-01 :polarity - :arg1 (p / person :name (n / name :op1 "Jordi" :op2 "Alba")) :arg2 (p2 / person :mod (p3 / person :name (n2 / name :op1 "Cristiano" :op2 "Ronaldo")))) :arg2 (p4 / person :name (n3 / name :op1 "Messi")))
(p / preserved :arg1 (h / house :location-of (l / live-01 :arg0 (p2 / person :name (n / name :op1 "Alexander" :op2 "Bestuzhev-Marlinsky") :arg0-of (w / write-01 :arg1 (d / decembrist)) :arg1-of (e / exile-01))) :quant (m / multiple :op1 1)) :location (s / street :location (r / relative-position :op1 (l2 / location :name (n2 / name :op1 "Old" :op2 "City")) :quant (m2 / multiple :op1 1))))
(o / out :op1 (t / temporal-quantity :quant (N / N-A) :unit (m / month)))
(p / pastime :arg0 (p2 / person :arg0-of (r / reside-01 :arg1 (l / location :name (n / name :op1 "Derbent")))) :arg1 (p3 / person :arg0-of (r2 / reside-01 :arg1 (l2 / location :name (n2 / name :op1 "Derbent")))) :mod (t / tradition))
(e / exemplify-01 :arg0 (e2 / exemplify-01 :arg0 (g / game :mod (v / video) :mod (r / roller))))
(a / and :op2 (g / go-08 :arg1 (h / he) :arg2 (o / out) :purpose (c / collect-01 :arg0 (h2 / he) :arg1 (h3 / hole))))
(d / decline-02 :arg0 (p / person :name (n / name :op1 "Yevgeny")) :arg1 (c / comment-01 :arg0 (p2 / person)))
(b / believe-01 :arg0 (t / they) :arg1 (c / cheat :domain (i / i)) :arg1-of (o / obvious-01))
(d / do-02 :arg1 (t / this) :purpose (e / ensure-01 :arg1 (b / be-located-at-91 :polarity - :arg1 (s / spike :quant (p / percentage-entity :value (N / N-A))) :arg2 (t2 / thing :arg2-of (p2 / price-01))) :time (f / from :op1 (o / organization :name (n / name :op1 "Saint" :op2 "Petersburg" :op3 "Economic" :op4 "Forum")))))
(u / useful-05 :arg1 (p / procedure :arg0-of (c / cleaning :arg1 (p2 / procedure :name (n / name :op1 (w / warming) :op2 (w2 / warming) :op3 (c2 / compresses) :op4 (- / -rrb-) :op5 (-2 / -rrb-) :op6 (s / secretions) :op7 (s2 / secretions) :op6 (s3 / secretions) :op7 (s4 / secretions) :op6 (s5 / secretions) :op7 (s6 / secretions) :op8 (s7 / secretions) :op8 (s8 / secretions) :op8 (s9 / secretions) :op8 (s10 / secretions) :op8 (s11 / secretions) :op8 (s12 / secretions) :op8 (s13 / secretions) :op8 (s14 / secretions) :op8 (s15 / secretions) :op8 (s16 / secretions) :op8 (s17 / secretions) :op8 (s18 / secretions) :op8 (s19 / secretions) :op8 (s20 / secretions) :op8 (s21 / secretions) :op8 (s22 / secretions) :op8 (s23 / secretions) :op10 (s24 / secretions) :op10 (s25 / secretions) :op10 (s26 / secretions))))))
(b / begin-01 :arg1 (a / adjudication :arg0 (c / claim-01 :arg0 (j / judiciary) :arg1 (m / magisterial :arg0 (j2 / judiciary)))) :time (d / date-entity :month 9 :day 16))
(c / contrast-01 :arg1 (c2 / contain-01 :arg0 (d / district :mod (e / expand-01)) :arg1 (s / subject :quant 5 :mod (f / federal) :poss (c3 / country :name (n / name :op1 "Russian" :op2 "Federation")))) :arg2 (p / possible-01 :arg1 (c4 / call-01 :arg1 (p2 / peninsula :name (n2 / name :op1 "N-A")) :arg2 (h / headquarter-01 :arg1 (d2 / district) :mod (o / original)))))
(s / survive-01 :arg0 (p / person :arg0-of (r / reside-01) :arg1-of (l / local-02)) :mod (s2 / still) :arg1-of (s3 / survive-01 :arg0 (p2 / person :arg0-of (r2 / reside-01) :arg1-of (l2 / local-02)) :time (d / day :time (p3 / present))))
(s / survive-01 :arg0 (p / person :arg0-of (r / reside-01) :arg1-of (l / local-02)) :mod (s2 / still) :arg1-of (s3 / survive-01 :arg0 (p2 / person :arg0-of (r2 / reside-01) :arg1-of (l2 / local-02)) :time (d / day :time (p3 / present))))
(c / contrast-01 :arg1 (l / let-01 :arg0 (h / he) :arg1 (d / die-01 :arg1 (p / person :arg1-of (d2 / die-01 :location (r / river :name (n / name :op1 "Amur")))))) :arg2 (a / and :op1 (p2 / preaches :arg0 (h2 / he) :arg1 (p3 / peninsula :name (n2 / name :op1 "N-A")) :manner (g / general-02)) :op2 (o / oppose-01 :arg0 (h3 / he) :arg1 (p4 / person :name (n3 / name :op1 "Rodina") :arg1-of (g2 / general-02) :arg1-of (g3 / guilty-01 :arg2 (n4 / nothing :mod (a2 / at-all))))) :time (t / then)))
(r / recommend-01 :arg1 (h / help-01 :arg0 (p / process-01 :arg1 (g / globalisation)) :arg1 (r2 / reduce-01 :arg0 (p2 / process-01) :arg1 (i / inequality :location (w / world)))))
(s / say-01 :arg0 (h / he) :arg1 (f / fate :domain (f2 / fate :poss (g / game)) :arg1-of (d / decide-01 :arg3 (f3 / few))))
(d / drop-01 :arg1 (i / industry :name (n / name :op1 (d2 / dow)) :arg1-of (a / average-03)) :extent (p / product-of :op1 16 :op2 (p2 / percentage-entity :value (N / N-A))) :arg1-of (c / cause-01 :arg0 (f / fear-01 :arg0 (p3 / person :arg0-of (i2 / invest-01)) :arg1 (g / grow-01 :arg1 (e / economy :mod (c2 / country :name (n2 / name :op1 "N-A"))) :arg2 (g2 / grow-01 :arg1 (g3 / globe) :mod (g4 / globe))))))
(d / date-entity :year (N / N-A) :month (N2 / N-A) :calendar (N3 / N-A))
(d / date-entity :year (N / N-A) :month (N2 / N-A) :calendar (N3 / N-A))
(n / need-01 :arg0 (a / authority) :arg1 (f / figure :arg0 (a2 / authority) :arg1 (t / thing :manner-of (r / reclaim-01 :arg0 (a3 / authority) :arg1 (g / guest :poss (c / city) :quant (a4 / all)))) :manner (u / urgent)) :arg1-of (l / lead-03 :arg2 (c2 / championship :arg1 (w / world))))
(n / need-01 :arg0 (a / authority) :arg1 (f / figure :arg0 (a2 / authority) :arg1 (t / thing :manner-of (r / reclaim-01 :arg0 (a3 / authority) :arg1 (g / guest :poss (c / city) :quant (a4 / all)))) :manner (u / urgent)) :arg1-of (l / lead-03 :arg2 (c2 / championship :arg1 (w / world))))
(s / say-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (o / organization :name (n / name :op1 "University")) :arg2 (p2 / president))) :arg1 (c / contrast-01 :arg1 (k / know-01 :polarity - :arg0 (p3 / person) :arg1 (c2 / conflict-01 :arg0 (l / lamb) :arg1 (p4 / person :name (n2 / name :op1 "Schmidt")) :mod (a / any))) :arg2 (o2 / obvious-01 :arg1 (s2 / something :location (m / mind :poss (p5 / person :name (n3 / name :op1 "Lamb")))) :arg1-of (o3 / obvious-01))))
(s / seem-01 :arg1 (r / remain-01 :arg1 (p / person :name (n / name :op1 "Donald" :op2 "Trump")) :arg3 (a / and :op1 (r2 / remain-01 :arg1 (i / immigrate-01) :arg3 (i2 / immigrate-01)) :op2 (r3 / remain-01 :arg1 (i3 / immigrate-01) :arg3 (i4 / immigrate-01)))))
(f / file-01 :arg0 (c / city :name (n / name :op1 "Kiev")) :arg1 (c2 / cooperate-01 :arg0 (c3 / country :name (n2 / name :op1 "Ukraine")) :arg1 (c4 / country :name (n3 / name :op1 "Russia")) :arg2 (c5 / complete-01 :arg0 (c6 / country) :arg1 (p / plant :mod (p2 / power :mod (n4 / nucleus)) :mod (l / location :name (n5 / name :op1 "Khmelnitsky"))))) :manner (o / official))
(t / thank-01 :arg1 (y / you))
(s / sayansk :location (r / region :mod (y / youngest) :location (l / location :name (n / name :op1 "Irkutsk"))))
(a / and :op1 (o / open-01 :arg1 (f / facility :mod (c / childcare))) :op2 (a2 / attend-01 :arg0 (c2 / child :quant 200) :arg1 (f2 / facility) :time (n / now)) :time (y / year :mod (l / last)))
(t / take-01 :polarity - :arg1 (t2 / thing :mod (s / such)) :manner (l / light-06) :time (e / ever))
(t / take-01 :polarity - :arg1 (t2 / thing :mod (s / such)) :manner (l / light-06) :time (e / ever))
(c / check-01 :arg0 (p / person :arg0-of (o / own-01 :arg1 (m / methamphetamine))) :mod (d / double))
(a / and :op2 (a2 / appreciate-02 :arg0 (p / person :arg0-of (l / leg :arg1-of (l2 / long-03)) :prep-with (l3 / leg :arg1-of (l4 / long-03))) :arg1 (a3 / and :op1 (s / soft-02 :arg1 (p2 / person) :time (n / now)) :op2 (h / hit-01 :polarity - :arg0 (p3 / person) :arg1 (a4 / ankles :poss (p4 / person)) :location (c / curves)))))
(a / and :op1 (l / last-01 :arg1 (b / between :op1 (t / temporal-quantity :quant (N / N-A) :unit (y / year)) :op2 (t2 / temporal-quantity :quant (N2 / N-A) :unit (y2 / year))) :arg2 (p / person :arg0-of (v / view-01) :quant (b2 / between :op1 5.30 :op2 5.30)) :arg4 (p2 / person :quant 623,000 :arg0-of (v2 / view-01))) :op2 (w / win-01 :arg0 (p3 / person :arg0-of (v3 / view-01)) :arg2 (p4 / person :quant 623,000 :arg0-of (v4 / view-01))))
(a / and :op1 (g / give-01 :arg0 (p / person :quant 1 :arg1-of (i / include-91 :arg2 (p2 / person :arg0-of (p3 / play-01) :mod (c / chess) :mod (y / young)))) :arg1 (p4 / person :name (n / name :op1 "Duda")) :arg2 (p5 / person :arg0-of (p6 / play-01) :mod (c2 / chess :degree (m / most)) :arg1-of (i2 / include-91 :arg2 (p7 / person :arg0-of (p8 / play-01) :mod (c3 / chess) :mod (y2 / young))))) :op2 (s / seem-01 :arg1 (s2 / significant-02 :polarity - :arg1 (l / lead-02 :arg0 (p9 / person)) :arg1-of (i3 / instead-of-91 :arg2 (s3 / significant-02 :polarity - :arg1 (p10 / person))))))
(f / fathom :polarity - :arg0 (d / doctor) :arg1 (t / thing :manner-of (p / possible-01 :arg1 (l / live-01 :arg0 (m / man :mod (e / elderly)) :mod (s / still) :time (a / after :op1 (s2 / spend-02 :arg0 (m2 / man) :arg1 (t2 / temporal-quantity :quant (N / N-A) :unit (d2 / day)) :location (w / woods)))))))
(f / fathom :polarity - :arg0 (d / doctor) :arg1 (t / thing :manner-of (p / possible-01 :arg1 (l / live-01 :arg0 (m / man :mod (e / elderly)) :mod (s / still) :time (a / after :op1 (s2 / spend-02 :arg0 (m2 / man) :arg1 (t2 / temporal-quantity :quant (N / N-A) :unit (d2 / day)) :location (w / woods)))))))
(s / stick-01 :arg1 (a / and :op1 (p / person :name (n / name :op1 "David" :op2 "Koch") :arg1-of (h / host-01 :arg0 (a2 / and :op1 (p2 / person) :op2 (p3 / person :name (n2 / name :op1 "Samantha" :op2 "Armytage"))))) :op2 (p4 / person :arg1-of (h2 / host-01 :arg0 (a3 / and :op1 (p5 / person) :op2 (p6 / person))) :arg1-of (h3 / host-01 :arg0 (a4 / and :op1 (p7 / person) :op2 (p8 / person))))) :arg2 (p9 / part :part-of (s2 / series :name (n3 / name :op1 (i / international) :op2 (s3 / series) :op3 (s4 / series)) :mod (i2 / international) :arg0-of (i3 / include-01 :arg1 (a5 / and :op1 (c / city :name (n4 / name :op1 "Dubai")) :op2 (c2 / city :name (n5 / name :op1 "New" :op2 "York")) :op3 (l / location :name (n6 / name :op1 "Niagara" :op2 "Falls")) :op4 (l2 / location :name (n7 / name :op1 "Cancun"))) :mod (a6 / also)))))
(m / multi-sentence :snt1 (r / recommend-01 :arg1 (c / commit-01 :arg1 (c2 / country :name (n / name :op1 "China")) :arg2 (a / and :op1 (a2 / attract-01 :arg0 (c3 / country) :arg1 (a3 / and :op1 (i / invest-01 :mod (f / foreign)) :op2 (e / expertise))) :op2 (i2 / improve-01 :arg0 (c4 / country) :arg1 (p / policy :arg0-of (i3 / intercept-01 :arg1 (c5 / country))))))) :snt2 (s / say-01 :arg0 (h / he) :arg1 (a4 / address-02 :arg0 (c6 / country) :arg1 (m2 / meet-03 :arg0 (o / organization :name (n2 / name :op1 "Central" :op2 "Leading" :op3 "Group" :op4 "for" :op5 "Deepening" :op6 "Overall" :op7 "Reform")) :ord (o2 / ordinal-entity :value 16)))))
(m / multi-sentence :snt1 (r / recommend-01 :arg1 (c / commit-01 :arg1 (c2 / country :name (n / name :op1 "China")) :arg2 (a / and :op1 (a2 / attract-01 :arg0 (c3 / country) :arg1 (a3 / and :op1 (i / invest-01 :mod (f / foreign)) :op2 (e / expertise))) :op2 (i2 / improve-01 :arg0 (c4 / country) :arg1 (p / policy :arg0-of (i3 / intercept-01 :arg1 (c5 / country))))))) :snt2 (s / say-01 :arg0 (h / he) :arg1 (a4 / address-02 :arg0 (c6 / country) :arg1 (m2 / meet-03 :arg0 (o / organization :name (n2 / name :op1 "Central" :op2 "Leading" :op3 "Group" :op4 "for" :op5 "Deepening" :op6 "Overall" :op7 "Reform")) :ord (o2 / ordinal-entity :value 16)))))
(m / multi-sentence :snt1 (r / recommend-01 :arg1 (c / commit-01 :arg1 (c2 / country :name (n / name :op1 "China")) :arg2 (a / and :op1 (a2 / attract-01 :arg0 (c3 / country) :arg1 (a3 / and :op1 (i / invest-01 :mod (f / foreign)) :op2 (e / expertise))) :op2 (i2 / improve-01 :arg0 (c4 / country) :arg1 (p / policy :arg0-of (i3 / intercept-01 :arg1 (c5 / country))))))) :snt2 (s / say-01 :arg0 (h / he) :arg1 (a4 / address-02 :arg0 (c6 / country) :arg1 (m2 / meet-03 :arg0 (o / organization :name (n2 / name :op1 "Central" :op2 "Leading" :op3 "Group" :op4 "for" :op5 "Deepening" :op6 "Overall" :op7 "Reform")) :ord (o2 / ordinal-entity :value 16)))))
(u / urge-01 :arg0 (i / i) :arg1 (p / person) :arg2 (t / think-01 :arg0 (p2 / person) :arg1 (t2 / treat-01 :arg0 (p3 / person) :arg1 (p4 / person :arg0-of (h / have-org-role-91 :arg2 (d / director))) :arg2 (p5 / person :arg0-of (h2 / have-org-role-91 :arg2 (d2 / director))))) :arg1-of (s / say-01 :arg0 (p6 / person :name (n / name :op1 "Brown")) :time (i2 / initial)) :arg1-of (s2 / say-01 :arg0 (p7 / person :arg0-of (h3 / have-org-role-91 :arg2 (d3 / director)))))
(a / and :op1 (a2 / allege-01 :arg0 (p / person :name (n / name :op1 "Peter" :op2 "Moody")) :arg1 (t / try-01 :arg0 (p2 / person) :arg1 (s / spy-01 :arg0 (p3 / person) :arg1 (h / he)))) :op2 (t2 / threaten-01 :arg0 (p4 / person) :arg1 (q / quit-01 :arg0 (p5 / person) :arg1 (q2 / quit-01 :arg0 (p6 / person) :arg1 (r / racing)))))
(i / intend-01 :arg0 (m / manage-01 :arg0 (c / company :name (n / name :op1 "Facebook"))) :arg1 (f / fight-01 :arg0 (m2 / manage-01) :arg1 (a / and :op1 (r / rise-01 :arg1 (a2 / and :op1 (u / universe) :op2 (r2 / racism))) :op2 (r3 / racism :location (c2 / cooperate-01 :arg0 (o / organization :name (n2 / name :op1 "Ministry" :op2 "of" :op3 "Justice") :poss (c3 / country)))))))
(a / and :op1 (m / make-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (o / organization :name (n / name :op1 "Tigers")) :arg2 (p2 / pitcher))) :arg1 (p3 / person :name (n2 / name :op1 "Alfredo" :op2 "Simon")) :time (e / early) :arg1-of (c / cause-01 :arg0 (s / support-01 :arg0 (p4 / person) :arg1 (p5 / person :quant 3 :arg1-of (i / include-91 :arg2 (p6 / person :quant 2 :location (i2 / innings :ord (o2 / ordinal-entity :value 1)) :ord (o3 / ordinal-entity :value 1))))))) :op2 (t / tacked :arg1 1 :location (a2 / and)))
(n / need-01 :mode (i / interrogative) :arg1 (s / something :arg1-of (m / mean-01 :arg2 (n2 / need-01 :arg1 (s2 / something)))))
FAILED_TO_PARSE#Two concepts in a row.
(c / contrast-01 :arg2 (c2 / contrast-01 :arg1 (p / possible-01 :polarity - :arg1 (s / succeed-01 :arg0 (p2 / person))) :arg2 (a / and :op1 (c3 / continue-01 :arg1 (b / bloodshed)) :op2 (f / feel-01 :polarity - :arg0 (p3 / person) :arg1 (s2 / safe-01 :arg1 (p4 / person) :degree (e / entire)))) :condition (w / want-01 :arg0 (w2 / we) :arg1 (s3 / succeed-01 :arg0 (w3 / we) :mod (r / real)))))
(c / charge-05 :polarity - :arg1 (f / fee :mod (c2 / commission)) :arg2 (t / thing :arg2-of (f2 / fund-01 :arg1 (c3 / card :name (n / name :op1 (l / loading))))))
(m / mural :arg0 (c / country :name (n / name :op1 "United" :op2 "States")) :arg1 (c2 / country :name (n2 / name :op1 "United" :op2 "States")) :time (e / end-01 :arg1 (o / ornate :quant 1 :poss (b / bank :mod (c3 / central) :part-of (b2 / bank)))))
(a / and :op1 (r / react-01 :arg0 (y / you) :arg1 (c / consequence) :frequency (s / sometimes)) :op2 (o / obligate-01 :arg1 (i / i) :arg2 (l / live-01 :arg0 (i2 / i) :arg1-of (s2 / say-01 :arg0 (i3 / i)))))
(n / need-01 :arg0 (w / we) :arg1 (m / move-01 :arg0 (w2 / we) :arg2 (m2 / more :compared-to (b / balance-01))))
(i / inspect-01 :arg1 (h / hotel :part-of (c / city) :quant (a / all)) :manner (b / booking) :time (s / summer :mod 2016))
(f / face-01 :arg0 (g / government-organization :name (n / name :op1 "Fed")) :arg1 (c / condition :mod (s / some) :arg1-of (e / exist-01 :polarity - :time (b / before)) :arg0-of (h / hasten :arg1 (r / recession-02) :arg1-of (p / possible-01))) :time (c2 / case :time (c3 / current)))
(r / remain-01 :arg1 (h / he) :arg3 (f / favourite :arg1 (f2 / fight-01 :arg2 (t / title))) :time (s / still) :concession (a / and :op1 (s2 / slowed :arg0 (p / person :name (n / name :op1 "Duda"))) :op2 (a2 / allow-01 :arg0 (p2 / person) :arg1 (n2 / narrow :arg0 (p3 / person) :arg1 (g / gap :mod (h2 / half :mod (j / just)))))))
(a / and :op1 (p / point-out-02 :arg0 (l / lamb) :arg1 (a2 / and :op1 (s / say-01 :arg0 (l2 / lamb) :arg1 (b / be-located-at-91 :arg1 (d / dog :arg0-of (h / have-rel-role-91 :arg1 (h2 / he) :arg2 (d2 / dd1))) :arg2 (t / there))) :op2 (u / upset-01 :arg1 (d3 / dog) :mod (p2 / probable)))) :op2 (s2 / say-01 :arg0 (l3 / lamb) :arg1 (p3 / possible-01 :arg1 (f / find-01 :arg1 (c / contact-01 :arg0 (w / woman :arg1-of (d4 / die-01)) :arg1 (p4 / phone :poss (w2 / woman)))))))
(a / approach-02 :arg0 (c / company :name (n / name :op1 "Google")) :arg1 (a2 / announce-01 :arg0 (c2 / company) :arg1 (d / donate-01 :arg0 (c3 / company) :arg2 (b / blog-01 :arg0 (c4 / company)))) :arg1-of (p / personal-02))
(e / estimate-01 :arg1 (d / damage-01 :arg2-of (t / total-01) :source (i / individual :arg1-of (a / accuse-01))) :arg2 (m / monetary-quantity :quant 300 :unit (d2 / dollar :mod (r / renminbi))))
(e / emerge-01 :arg0 (c / country :name (n / name :op1 "Germany")) :arg1 (p / person :arg0-of (l / lead-02 :arg1 (r / refugee))) :time (b / before :op1 (n2 / now) :duration (t / temporal-quantity :quant (N / N-A) :unit (m / month))) :concession (s / strengthen-01 :arg0 (c2 / country) :arg1 (c3 / control-01 :arg1 (b2 / border)) :purpose (c4 / curb-01 :arg0 (c5 / country) :arg1 (d / declare-02 :arg1 (i / influx :arg1 (t2 / thing)))) :time (r2 / recent)))
(i / issue-01 :arg1 (t / thing :arg1-of (d / decide-01 :arg3 (p / person :arg0-of (r / reside-01 :arg1 (c / country-region :name (n / name :op1 "Novosibirsk")))))) :time (a / after :op1 (n2 / now) :quant (u / up-to :op1 (t2 / temporal-quantity :quant (N / N-A) :unit (d2 / day)))))
(i / issue-01 :arg1 (t / thing :arg1-of (d / decide-01 :arg3 (p / person :arg0-of (r / reside-01 :arg1 (c / country-region :name (n / name :op1 "Novosibirsk")))))) :time (a / after :op1 (n2 / now) :quant (u / up-to :op1 (t2 / temporal-quantity :quant (N / N-A) :unit (d2 / day)))))
FAILED_TO_PARSE#Two concepts in a row.
(s / say-01 :arg0 (t / trainer) :arg1 (h / have-03 :arg0 (' / '' :name (n / name :op1 ('2 / ''))) :arg1 (m / model :topic (g / game :arg0-of (o / offense-02)) :quant (n2 / number)) :location (a / arsenal :poss (b / bulls))))
(e / elect-01 :li 2016 :arg1 (p / person :name (n / name :op1 "Hillary" :op2 "Clinton")))
(d / do-02 :arg1 (i / it) :arg2 (p / prevent-01 :arg1 (p2 / provocations :mod (v / various))))
(s / shock-01 :arg0 (a / assume-02 :arg1 (p / possible-01 :arg1 (g / go-back-19 :arg1 (w / we) :arg2 (t / table :mod (n / negotiate-01)) :time (y / year :ord (o / ordinal-entity :value 1) :part-of (a2 / agree-01 :mod (n2 / new))))) :time (s2 / since :op1 (e / expect-01 :arg0 (t2 / they) :arg1 (i / implement-01 :arg1 (d / deal) :mod (f / full))))))
(s / say-01 :arg0 (p / person :name (n / name :op1 "Heiko" :op2 "Maas")) :arg1 (e / expect-01 :arg1 (r / receive-01 :arg0 (a / authors :poss (p2 / post :mod (i / intolerant))) :arg1 (r2 / reason :arg0-of (c / cause-01 :arg1 (d / deletion :arg1 (p3 / pill :poss (t / they))))))))
FAILED_TO_PARSE#Two concepts in a row.
(c / contrast-01 :arg1 (o / obligate-01 :arg2 (a / afforded :arg0 (h / he) :arg1 (o2 / opportunity :arg1-of (s / same-01)) :mod (a2 / at-least))) :arg2 (d / depend-01 :arg0 (t / this) :arg1 (f / fate :poss (s2 / side :part-of (c2 / country :name (n / name :op1 "UAE")))) :mod (o3 / of-course)))
(l / like-02 :arg0 (i / i) :arg1 (n / note-01 :arg0 (i2 / i) :arg1 (r / recommend-01 :arg1 (c / confuse-01 :polarity - :arg1 (c2 / card :name (n2 / name :op1 (g / groceries) :op2 (g2 / groceries)) :arg1-of (p / propose-01)) :arg2 (o / or :op1 (m / memory :arg1-of (s / spread-02 :arg1-of (w / wide-02))) :op2 (s2 / system :mod (c3 / card) :mod (d / distribute-01 :arg1 (g3 / good :quant (q / quantity :mod (g4 / good))))))))) :mod (e / especially))
(r / refuse-01 :arg0 (s / some) :arg1 (a / and :op1 (f / food) :op2 (w / water)) :location (p / protest-01))
(a / and :op1 (c / call-01 :arg1 (s / squad :mod (p / police)) :arg2 (s2 / scene)) :op2 (a2 / arrive-01 :arg1 (s3 / squad) :arg4 (s4 / scene)))
(s / say-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg2 (o / official))) :arg1 (a / and :op1 (b / blindfolded :arg0 (p2 / person :arg0-of (h2 / have-org-role-91 :arg2 (o2 / official))) :arg1 (h3 / he)) :op2 (s2 / saddled :arg0 (p3 / person) :arg1 (f / full :mod (f2 / full :mod (3 / 30-pound)) :consist-of (s3 / sand)))) :op3 (t / try-01 :arg0 (p4 / person) :arg1 (w / walk-01 :arg0 (p5 / person) :destination (a2 / across :op1 (f3 / field :arg1-of (f4 / freeze-01))))))
(s / say-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg2 (o / official))) :arg1 (a / and :op1 (b / blindfolded :arg0 (p2 / person :arg0-of (h2 / have-org-role-91 :arg2 (o2 / official))) :arg1 (h3 / he)) :op2 (s2 / saddled :arg0 (p3 / person) :arg1 (f / full :mod (f2 / full :mod (3 / 30-pound)) :consist-of (s3 / sand)))) :op3 (t / try-01 :arg0 (p4 / person) :arg1 (w / walk-01 :arg0 (p5 / person) :destination (a2 / across :op1 (f3 / field :arg1-of (f4 / freeze-01))))))
(a / attend-01 :arg0 (p / person :quant (a2 / about :op1 900) :arg2-of (i / include-01 :arg1 (a3 / and :op1 (p2 / person :arg0-of (h / have-org-role-91 :arg1 (p3 / political-party :name (n / name :op1 "N-A")) :arg2 (m / member))) :op2 (p4 / person :arg0-of (h2 / have-org-role-91 :arg1 (c / country :name (n2 / name :op1 "N-A")) :arg2 (m2 / member))) :op3 (p5 / person :arg0-of (h3 / have-org-role-91 :arg1 (c2 / community) :arg2 (m3 / member))) :op4 (p6 / person :arg0-of (h4 / have-org-role-91 :arg1 (c3 / community) :arg2 (m4 / member))) :op5 (p7 / person :arg0-of (h5 / have-org-role-91 :arg1 (c4 / community) :arg2 (m5 / member))) :op6 (p8 / person :arg0-of (h6 / have-org-role-91 :arg1 (c5 / community) :arg2 (m6 / member))) :op7 (p9 / person :arg0-of (h7 / have-org-role-91 :arg1 (c6 / community) :arg2 (m7 / member)))))) :arg1 (m8 / memorial :mod (c7 / candlelight)) :time (n3 / night :mod (t / tuesday)) :location (a4 / advance))
(p / published :arg0 (w / we) :arg1 (n / name :poss (y / you)) :arg1-of (h / have-condition-91 :arg2 (a / ask-01 :arg0 (y2 / you) :arg1 (h2 / have-polarity-91 :arg2 -))))
(t / tell-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (c / cabinet :poss (p2 / person :name (n / name :op1 "Corbyn") :arg0-of (h2 / have-org-role-91 :arg1 (c2 / cabinet :poss (p3 / person)) :arg2 (m / member))) :arg2 (m2 / member)))) :arg1 (a / advise-01 :arg0 (p4 / person) :arg1 (p5 / person :arg0-of (l / lead-02 :arg1 (p6 / political-party :name (n2 / name :op1 "Labour" :op2 "Party")))) :arg2 (s / sing-01 :arg0 (p7 / person) :arg1 (a2 / anthem :arg1-of (i / irrespective :arg2 (b / believe-01 :arg0 (p8 / person) :arg1 (r / recommend-01 :arg1 (a3 / abolished :arg1 (m3 / monarchy)))))))) :arg2 (p9 / person :arg0-of (h3 / have-org-role-91 :arg1 (c3 / cabinet :poss (o / organization :name (n3 / name :op1 "BBC" :op2 "Two"))) :arg2 (m4 / member))))
(a / and :op1 (p / prefer-01 :arg0 (h / he) :arg1 (i / idea :topic (a2 / allow-01 :arg1 (t / take-01 :arg0 (p2 / person :mod (o / other) :arg0-of (h2 / have-org-role-91 :arg2 (c / colleagues))) :arg1 (f / floor)))) :mod (a3 / also)) :op2 (s / say-01 :arg0 (h3 / he) :arg1 (a4 / approach-02 :arg0 (h4 / he) :arg1 (p3 / person :name (n / name :op1 "John" :op2 "Bercow") :arg0-of (h5 / have-org-role-91 :arg1 (c2 / country :name (n2 / name :op1 "N-A")) :arg3 (s2 / speak-01))) :purpose (d / discuss-01 :arg0 (p4 / person) :arg1 (i2 / issue-02)))))
(a / and :op1 (p / prefer-01 :arg0 (h / he) :arg1 (i / idea :topic (a2 / allow-01 :arg1 (t / take-01 :arg0 (p2 / person :mod (o / other) :arg0-of (h2 / have-org-role-91 :arg2 (c / colleagues))) :arg1 (f / floor)))) :mod (a3 / also)) :op2 (s / say-01 :arg0 (h3 / he) :arg1 (a4 / approach-02 :arg0 (h4 / he) :arg1 (p3 / person :name (n / name :op1 "John" :op2 "Bercow") :arg0-of (h5 / have-org-role-91 :arg1 (c2 / country :name (n2 / name :op1 "N-A")) :arg3 (s2 / speak-01))) :purpose (d / discuss-01 :arg0 (p4 / person) :arg1 (i2 / issue-02)))))
(o / obvious-01 :arg1 (r / rise-01 :arg1 (r2 / rate :mod (i / interest)) :arg1-of (s / sharp-02)))
(e / enough :polarity - :domain (q / qualifier))
(m / multi-sentence :snt1 (c / contrast-01 :arg2 (a / ask-01 :arg1 (r / recommend-01 :arg1 (g / get-01 :arg0 (a2 / amr-unknown) :arg1 (r2 / rise-01 :arg1 (w / wood) :mod (f / final))) :condition (a3 / ask-01 :polarity - :arg0 (y / you) :arg1 (q / question-01))))) :snt2 (p / possible-01 :arg1 (p2 / provide-01 :arg0 (t / thing :arg1-of (a4 / answer-01 :arg0 (t2 / they))) :arg1 (p3 / person :arg0-of (w2 / win-01 :arg1 (h / heart :part-of (b / bachelors)))) :arg2 (p4 / person :arg0-of (w3 / win-01 :arg1 (h2 / heart :part-of (b2 / bachelors)))))))
(a / and :op1 (r / reasonably :arg1 (i / item)) :op2 (s / sell-01 :arg1 (i2 / item) :arg2 (i3 / item :quant (n / number)) :location (b / bulk)))
(a / and :op1 (c / contrast-01 :arg2 (a2 / assure-01 :polarity - :arg0 (h / he) :arg1 (w / warn-01 :arg0 (i / i)))) :op2 (s / state-01 :arg0 (p / person :arg0-of (h2 / have-org-role-91 :arg1 (c2 / country :name (n / name :op1 "US")) :arg2 (p2 / president))) :arg1 (g / get-03 :arg1 (s2 / situation) :arg2 (b / bad-04 :arg1 (s3 / situation) :degree (m / more)))))
(m / make-01 :arg0 (i / i) :arg1 (i2 / it) :time (l / late :op1 (t / temporal-quantity :quant (N / N-A) :unit (y / year)) :degree (m2 / more)) :location (c / city :name (n / name :op1 "Moscow")) :time (l2 / late :op1 (t2 / temporal-quantity :quant (N2 / N-A) :unit (y2 / year)) :degree (m3 / more)) :location (w / world) :time (l3 / late :op1 (t3 / temporal-quantity :quant (N3 / N-A) :unit (y3 / year)) :degree (m4 / more)))
(h / have-concession-91 :arg1 (p / possible-01 :polarity - :arg1 (p2 / put-01 :arg0 (p3 / person :name (n / name :op1 "Luis" :op2 "Enrique")) :arg1 (f / foot :part-of (p4 / person) :mod (g / good :degree (m / most)) :poss (p5 / person)) :arg2 (c / capital :location (c2 / country :name (n2 / name :op1 "Italy"))) :direction (f2 / forward))) :arg2 (r / recall-02 :arg0 (p6 / person) :arg1 (r2 / recall-02 :arg0 (p7 / person) :arg1 (w / wolves :mod (' / '')) :time (s / season :quant 2011-12))))
(c / call-01 :arg1 (c2 / costume :mod (c3 / character :name (n / name :op1 (c4 / cartoon)))) :arg2 (' / '' :mod ('2 / '')) :location (c5 / country :name (n2 / name :op1 "Japan")))
(c / cause-01 :arg1 (e / enable-01 :polarity - :arg0 (w / win-01 :arg0 (p / person :name (n / name :op1 "Alina" :op2 "Bivol"))) :arg1 (s / surpass :arg0 (p2 / person) :arg1 (p3 / person :name (n2 / name :op1 "Buksa")))))
(c / cause-01 :arg1 (e / enable-01 :polarity - :arg0 (w / win-01 :arg0 (p / person :name (n / name :op1 "Alina" :op2 "Bivol"))) :arg1 (s / surpass :arg0 (p2 / person) :arg1 (p3 / person :name (n2 / name :op1 "Buksa")))))
(c / contrast-01 :arg1 (f / follow-01 :arg1 (p / person :name (n / name :op1 "Nick" :op2 "Castellanos") :ord (o / ordinal-entity :value 3) :arg0-of (h / have-org-role-91 :arg2 (g / governor))) :arg2 (r / right :mod (r2 / right))) :arg2 (t / throw-01 :arg1 (p2 / person :name (n2 / name :op1 "Victor" :op2 "Martinez")) :arg2 (t2 / try-01 :arg0 (p3 / person) :arg1 (a / advance-01 :arg0 (p4 / person) :arg1 (t3 / threat) :ord (o2 / ordinal-entity :value 3)))))
(o / organize-01 :arg0 (o2 / organization :name (n / name :op1 "Australian" :op2 "Medical" :op3 "Association") :arg0-of (d / depend-01 :polarity -)) :arg1 (a / and :op1 (p / person :arg0-of (s / study-01 :mod (m / medicine)) :mod (c / country :name (n2 / name :op1 "N-A"))) :op2 (p2 / person :arg0-of (s2 / study-01 :arg1 (m2 / medicine)))))
(o / organize-01 :arg0 (o2 / organization :name (n / name :op1 "Australian" :op2 "Medical" :op3 "Association") :arg0-of (d / depend-01 :polarity -)) :arg1 (a / and :op1 (p / person :arg0-of (s / study-01 :mod (m / medicine)) :mod (c / country :name (n2 / name :op1 "N-A"))) :op2 (p2 / person :arg0-of (s2 / study-01 :arg1 (m2 / medicine)))))
(a / and :op1 (g / grow-01 :arg1 (i / industry :arg0-of (p / publish-01)) :time (n / now :mod (r / right))) :op2 (p2 / pay-01 :arg1 (a2 / attend-02 :quant (l / lot)) :arg3 (a3 / authors :arg1-of (l2 / link-01 :arg0 (g2 / generation)))))
(c / contrast-01)
(s / say-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (c / city :name (n / name :op1 "Sydney")) :arg2 (p2 / president :mod (v / vice)))) :arg1 (s2 / say-01 :arg0 (p3 / person :name (n2 / name :op1 "Trent" :op2 "Robinson") :arg0-of (h2 / have-org-role-91 :arg2 (r / referees))) :arg1 (a / allow-01 :arg1 (s3 / storm :purpose (' / '' :arg1 (w / wrestle :mod (w2 / wrestle)))) :time (w3 / win-01 :arg0 (u / upset-01 :arg1 (s4 / storm)) :location (f / final :location (q / qualifying)) :time (n3 / night :mod (f2 / friday))))))
(m / multi-sentence :snt1 (a / and :op2 (s / signal-07 :arg1 (a2 / adjust-01 :arg0 (m2 / market) :arg1 (t / thing :arg2-of (n / name-01 :arg1 (p / policy :topic (m3 / money) :arg1-of (e / efficient-01 :polarity -)))))) :quant (s2 / several)) :snt2 (w / write-01 :arg0 (s3 / she)))
(p / prepare-02 :arg0 (p2 / person :arg0-of (h / have-org-role-91 :arg1 (g / government-organization :arg0-of (g2 / govern-01 :arg1 (c / country :name (n / name :op1 "Russian" :op2 "Federation")))) :arg2 (g3 / government-organization :arg0-of (g4 / govern-01 :arg1 (c2 / country))))) :arg1 (c3 / change-01 :arg1 (g5 / good) :arg1-of (n2 / need-01)) :arg2 (l / list :consist-of (p3 / person :arg1-of (q / qualify-02 :arg2 (e / enter-01 :duration (t / temporary))))))
(p / prepare-02 :arg0 (p2 / person :arg0-of (h / have-org-role-91 :arg1 (g / government-organization :arg0-of (g2 / govern-01 :arg1 (c / country :name (n / name :op1 "Russian" :op2 "Federation")))) :arg2 (g3 / government-organization :arg0-of (g4 / govern-01 :arg1 (c2 / country))))) :arg1 (c3 / change-01 :arg1 (g5 / good) :arg1-of (n2 / need-01)) :arg2 (l / list :consist-of (p3 / person :arg1-of (q / qualify-02 :arg2 (e / enter-01 :duration (t / temporary))))))
(a / and :op1 (w / want-01 :arg0 (w2 / we) :arg1 (w3 / win-01 :arg0 (w4 / we))) :op2 (d / do-02 :arg0 (w5 / we) :arg1 (o / or :op1 (g / goal :quant 1) :op2 (g2 / goal :quant 2))))
(c / cite-01 :arg0 (p / person :name (n / name :op1 "Lacker") :arg0-of (h / have-org-role-91 :arg1 (o / organization :name (n2 / name :op1 "Federal" :op2 "Open" :op3 "Market" :op4 "Committee") :part-of (o2 / organization :name (n3 / name :op1 "Federal" :op2 "Open" :op3 "Market" :op4 "Committee") :mod (p2 / policymaking)) :arg0-of (p3 / push-02 :arg2 (i / increase-01 :arg1 (r / rate)))) :arg2 (m / member))) :arg1 (t / thing :arg1-of (d / decide-01 :arg3 (r2 / rate :mod (r3 / rate)))) :arg1-of (c2 / cite-01 :arg0 (e / example :quant 1998-99)))
(r / report-01 :arg0 (p / person :name (n / name :op1 "Yelena" :op2 "Lashkina") :arg0-of (h / have-org-role-91 :arg1 (o / organization :name (n2 / name :op1 "Economic" :op2 "Development")) :arg2 (m / minister))) :arg1 (t / this) :arg2 (o2 / organization :name (n3 / name :op1 "Izvestia")))
(m / multi-sentence :snt1 (s / seem-01 :arg1 (l / likely-01 :polarity - :arg1 (u / unlikely :arg0 (p / plot-01 :arg0 (b / book)) :arg1 (p2 / plot :arg0 (p3 / plot-01 :arg0 (b2 / book) :arg1-of (n / name-01 :polarity -)) :arg1 (e / environment :arg1-of (l2 / local-02))))) :arg1-of (c / cause-01 :arg0 (p4 / plot :arg0 (b3 / boy :arg1-of (n2 / name-01 :polarity -) :arg1-of (n3 / name-01 :polarity -) :mod (y / young)) :arg1 (e2 / environment :arg1-of (l3 / local-02))))) :snt2 (s2 / speaks :arg0 (p5 / person :arg0-of (s3 / speak-01 :arg3 (t / trees)) :arg0-of (s4 / speak-01 :arg3 (t2 / trees)))))
(e / encourage-01 :arg0 (h / he) :arg1 (t / they) :arg1-of (i / instead-of-91 :arg2 (c / chew :arg1 (r / rookies :poss (h2 / he) :location (i2 / in-front-of :op1 (r2 / rest :part-of (t2 / team)))))))
(c / consensus :polarity - :topic (t / thing :arg1-of (d / do-02 :arg0 (g / government-organization :name (n / name :op1 "Fed"))) :arg0-of (c2 / cause-01 :arg1 (j / jitters :arg1 (m / market :mod (f / finance))))))
(p / possible-01 :arg1 (c / colonial :arg1 (c2 / colony :arg1-of (s / separate-02) :arg1-of (s2 / separate-02)) :condition (t / turn-01 :arg1 (p2 / person :quant (m / many) :mod (t2 / transgendered)) :direction (o / out))))
(c / chance-02 :arg1 (l / learn-01 :arg1 (e / everything) :arg2 (w / workings :mod (a / atheist) :part-of (a2 / airport))) :mod (p / precedent :polarity -))
(s / say-01 :arg0 (s2 / state-01))
(s / say-01 :arg0 (s2 / state-01))
(m / multi-sentence :snt1 (a / allow-01 :arg0 (n / nothing :prep-in (c / culture)) :arg1 (s / say-01 :arg0 (y / you) :arg1 (a2 / and :op1 (s2 / say-01 :arg0 (y2 / you) :arg1 (t / thing :arg1-of (s3 / say-01))) :op2 (w / want-01 :arg0 (i / i) :arg1 (f / friendship :poss (w2 / we)))))) :snt2 (c2 / contrast-01 :arg1 (w3 / want-01 :arg0 (i2 / i) :arg1 (c3 / continue-01 :arg1 (f2 / friendship :poss (w4 / we)))) :arg2 (n2 / need-01 :arg0 (i3 / i) :arg1 (g / go-01 :arg1 (y3 / you) :direction (a3 / away) :direction (a4 / away)))))
(n / need-01 :arg0 (c / candidate :mod (t / this)) :arg1 (d / determine-01 :arg0 (c2 / candidate) :arg1 (o / or :op1 (p / person :arg0-of (h / have-org-role-91 :arg2 (d2 / deputy))) :op2 (p2 / person :arg0-of (h2 / have-org-role-91 :arg2 (d3 / deputy))) :op3 (p3 / person :arg0-of (h3 / have-org-role-91 :arg2 (d4 / deputy))) :op4 (p4 / person :arg0-of (h4 / have-org-role-91 :arg2 (d5 / deputy))) :op5 (p5 / person :arg0-of (h5 / have-org-role-91 :arg2 (d6 / deputy))) :op5 (p6 / person :arg0-of (h6 / have-org-role-91 :arg2 (d7 / deputy))) :op6 (p7 / person :arg0-of (h7 / have-org-role-91 :arg2 (d8 / deputy))) :op6 (p8 / person :arg0-of (h8 / have-org-role-91 :arg2 (d9 / deputy))) :op7 (p9 / person :arg0-of (h9 / have-org-role-91 :arg2 (d10 / deputy))))) :time (n2 / now))
(w / wonderful-03 :arg1 (i / it) :time (h / have-03 :arg0 (y / you) :arg1 (c / capable-01 :arg1 (y2 / you) :arg2 (c2 / choose-01 :arg0 (y3 / you) :arg1 (a / and :op1 (c3 / clothes :arg1-of (c4 / cool-04)) :op2 (m / manner :poss (y4 / you)) :op3 (c5 / car :poss (y5 / you)))))) :time (a2 / after :op1 (a3 / all)))
(r / read-01 :arg0 (i / i) :arg1 (e / everything :example (a / and :op1 (s / story :mod (m / military)) :op2 (s2 / story :mod (h / history)) :op3 (e2 / et-cetera))))
(a / and :op1 (r / recommend-01 :arg1 (m / make-01 :arg1 (t / thing :arg1-of (a2 / appropriate-02) :arg1-of (a3 / appropriate-02)) :location (s / summit :mod (o / organization :name (n / name :op1 "EU"))))) :op2 (r2 / recommend-01 :arg1 (i / involve-01 :arg0 (i2 / it) :arg1 (o2 / organization :name (n2 / name :op1 "United" :op2 "Nations")) :mod (a4 / also))))
(s / stress-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (b / bank :mod (c / central) :part-of (c2 / country :name (n / name :op1 "U.S."))) :arg2 (o / official))) :arg1 (s2 / stress-01 :arg0 (p2 / person :arg0-of (h2 / have-org-role-91 :arg1 (b2 / bank :mod (c3 / central) :part-of (c4 / country :name (n2 / name :op1 "U.S."))) :arg2 (o2 / official))) :arg1 (r / recommend-01 :arg1 (f / focus-01 :polarity - :arg0 (p3 / person :arg0-of (i / invest-01)) :arg2 (r2 / recommend-01 :arg1 (r3 / raise-01 :arg0 (p4 / person) :arg1 (r4 / rate)) :time (s3 / start-01 :arg0 (p5 / person) :arg1 (r5 / raise-01 :arg0 (p6 / person) :arg1 (r6 / rate)))))) :arg2-of (i2 / instead-of-91 :arg1 (t / take-10 :arg0 (t2 / thing :manner-of (t3 / take-10 :arg0 (i3 / it) :arg1 (r7 / raise-01 :arg0 (c5 / country) :arg1 (r8 / rate))))))))
(c / contrast-01 :arg1 (s / sad-02 :arg1 (i / it)) :arg2 (p / pride-01 :arg0 (i2 / i) :arg2 (b / boy :poss (i3 / i))))
(p / possible-01 :arg1 (c / cost-01 :arg1 (a / and :op1 (f / food) :op2 (s / sell-01 :arg1 (f2 / food))) :arg2 (r / rate-entity-91 :arg1 (a2 / around :op1 (m / monetary-quantity :quant 13 :unit (d / dollar))) :arg2 (v / volume-quantity :quant (N / N-A) :unit (g / gallon))) :location (e / earnings) :time (b / before :op1 (a3 / and :op1 (i / interest-01) :op2 (t / tax-01)))) :arg1-of (s2 / say-01 :arg0 (p2 / person :name (n / name :op1 "Kierath"))))
(a / and :op1 (r / release-01 :polarity - :arg0 (o / organization :name (n / name :op1 "Binladin" :op2 "Group")) :arg1 (t / thing :arg1-of (s / state-01) :mod (a2 / any) :topic (c / collapse-01 :arg1 (r2 / range)))) :op2 (a3 / available-02 :polarity - :arg2 (p / person :arg0-of (r3 / represent-01 :arg1 (o2 / organization))) :purpose (c2 / comment-01 :arg0 (o3 / organization))))
(h / have-03 :arg0 (c / country) :arg1 (a / and :op1 (d / deficit :mod (b / budget)) :op2 (l / level :mod (e / employ-01 :polarity -) :arg1-of (h2 / high-02))) :mod (a2 / again :mod (o / once)) :time (n / now))
(u / unbeaten :arg1 (o / organization :name (n / name :op1 "Dinamo")) :arg2 (m / match-03 :quant 41) :time (a / after :op1 (p / produce-01 :arg0 (o2 / organization) :arg1 (c / campaign-01 :arg0 (o3 / organization) :arg1 (' / '' :arg0 (o4 / organization) :arg1 (c2 / campaign-01 :arg0 (g / government-organization) :arg1 (o5 / oppose-01 :arg0 (g2 / government-organization) :arg1 (i / invincible))) :time (s / season :mod (l / last)))))) :mod (a2 / also))
(i / include-91 :arg1 (a / and :op1 (p / person :arg0-of (v / view-01)) :op2 (p2 / person :ord (o / ordinal-entity :value 1) :arg0-of (v2 / view-01)) :op3 (p3 / person :ord (o2 / ordinal-entity :value 2) :arg0-of (v3 / view-01) :ord (o3 / ordinal-entity :value 2) :ord (o4 / ordinal-entity :value 2) :ord (o5 / ordinal-entity :value 2) :ord (o6 / ordinal-entity :value 2))) :arg2 (n / night :mod (m / monday)) :time (n2 / night :mod (m2 / monday)))
(g / grill :arg0 (f / front :mod (f2 / front)) :arg1 (l / line :quant 5 :mod (h / horizontal) :poss (i / it)) :arg1-of (m / major-02))
(c / contrast-01 :arg2 (d / desperate :domain (p / person :quant (m / many) :arg1-of (r / resemble-01 :arg2 (f / family :arg1-of (h / have-org-role-91 :arg0 (i / i) :arg2 (m2 / member))))) :purpose (h2 / help-01)))
(w / walk-01 :arg0 (h / he) :extent (f / far :degree (v / very)) :destination (a / area :arg1-of (d / differ-02 :degree (t / total))))
(w / walk-01 :arg0 (h / he) :extent (f / far :degree (v / very)) :destination (a / area :arg1-of (d / differ-02 :degree (t / total))))
(( / ( :( (n / name) :op1 "Hewlett-Packard")
(s / sentence-01 :arg0 (c / court :mod (c2 / country :name (n / name :op1 "N-A"))) :arg1 (p / person :mod (c3 / country :name (n2 / name :op1 "N-A")) :quant (s2 / several :op1 2) :arg2-of (i / include-91 :arg1 (p2 / person :quant 2 :arg0-of (h / have-rel-role-91 :arg1 (p3 / person) :arg2 (m / monuments)))) :arg0-of (h2 / have-rel-role-91 :arg1 (p4 / person) :arg2 (m2 / monuments))) :arg2 (t / term :mod (p5 / prison)) :location (i2 / in-front-of :op1 (f / flag :mod (c4 / country :name (n3 / name :op1 "N-A")))))
(s / sentence-01 :arg0 (c / court :mod (c2 / country :name (n / name :op1 "N-A"))) :arg1 (p / person :mod (c3 / country :name (n2 / name :op1 "N-A")) :quant (s2 / several :op1 2) :arg2-of (i / include-91 :arg1 (p2 / person :quant 2 :arg0-of (h / have-rel-role-91 :arg1 (p3 / person) :arg2 (m / monuments)))) :arg0-of (h2 / have-rel-role-91 :arg1 (p4 / person) :arg2 (m2 / monuments))) :arg2 (t / term :mod (p5 / prison)) :location (i2 / in-front-of :op1 (f / flag :mod (c4 / country :name (n3 / name :op1 "N-A")))))
(s / stress-01 :arg0 (h / he) :arg1 (i / inadequate :domain (r / respond-01 :arg0 (c / country :mod (w / west-european)) :arg1 (c2 / crisis :mod (r2 / refugee)) :arg2 (s2 / situation))) :mod (a / also))
(p / prepare-01 :arg0 (o / organization :name (n / name :op1 "Ministry" :op2 "of" :op3 "Economic" :op4 "Development") :part-of (c / country :name (n2 / name :op1 "Russia"))) :arg1 (r / resolution :arg1-of (d / draft-01) :poss (o2 / organization :name (n3 / name :op1 "Council" :op2 "of" :op3 "the" :op4 "Eurasian" :op5 "Economic" :op6 "Commission")) :topic (a / and :op1 (i / import-01 :arg1 (a2 / and :op1 (d2 / duty :mod (c2 / customs)) :op2 (t / tax-01 :arg3 (a3 / and :op1 (d3 / duty :mod (c3 / customs)) :op2 (t2 / thing :arg1-of (t3 / tax-01)) :arg1-of (r2 / relate-01 :arg2 (a4 / and :op1 (y / yachts :arg1-of (i2 / import-01)) :op2 (w / watercraft :mod (o3 / other)) :arg1-of (u / use-01 :arg2 (a5 / and :op1 (l / leisure) :op2 (s / sport))))))))) :duration (t4 / temporary))))
(s / start-01 :arg0 (p / person :name (n / name :op1 "Norris") :quant (b / between :op1 (1 / 1-1) :op2 4)) :arg1 (o / organization :name (n2 / name :op1 "Tigers")) :time (s2 / since :op1 (a / acquire-01 :arg1 (t / trade-01 :arg2 (p2 / person :name (n3 / name :op1 "David" :op2 "Price") :arg0-of (h / have-org-role-91 :arg2 (l / lhp))) :time (d / date-entity :month 7 :day 30)))))
(s / self-sufficiency :arg1 (q / quality :mod (g / good :degree (m / most)) :poss (i / i)) :time (a / always) :arg0-of (c / cause-01 :arg1 (t / try-01 :arg0 (i2 / i) :arg1 (i3 / i) :mod (j / just))))
(s / self-sufficiency :arg1 (q / quality :mod (g / good :degree (m / most)) :poss (i / i)) :time (a / always) :arg0-of (c / cause-01 :arg1 (t / try-01 :arg0 (i2 / i) :arg1 (i3 / i) :mod (j / just))))
(a / and :op2 (i / imagine-01 :polarity - :arg0 (i2 / i) :arg1 (a2 / amr-unknown :arg0-of (n / need-01 :arg1 (i3 / i)) :arg0-of (n2 / need-01 :arg1 (i4 / i))) :mod (e / even)))
(m / meet-03 :arg0 (i / i) :arg1 (p / person :arg0-of (h / head-01 :arg1 (m2 / ministry :mod (f / foreign) :part-of (o / organization :name (n / name :op1 "UN" :op2 "Security" :op3 "Council"))) :time (l / late :op1 (m3 / month :mod (t / this)) :degree (m4 / more)))))
(a / agree-01 :arg0 (i / i) :arg1 (w / way :mod (g / good) :manner-of (t / tell-01 :arg1 (s / story :mod (f / full) :topic (p / penalize-01 :manner (d / die-01))) :domain (i2 / it))))
FAILED_TO_PARSE#Two concepts in a row.
(s / star)
(b / back-01 :arg0 (p / person :name (n / name :op1 "Healy")) :arg1 (d / decide-01 :arg0 (p2 / person) :arg1 (t / tie :arg0 (p3 / person) :arg1 (p4 / person :name (n2 / name :op1 "Kyrgios")) :arg2 (t2 / tie :mod (i / important)))) :arg1-of (s / start-01 :arg0 (p5 / person) :arg3 (t3 / tie :mod (i2 / important))) :arg1-of (s2 / start-01 :arg0 (p6 / person) :location (f / friday)) :arg1-of (s3 / start-01 :arg0 (p7 / person) :location (f2 / friday :mod (r / right))) :arg1-of (c / cause-01 :arg0 (b2 / back-01 :arg0 (p8 / person) :arg1 (c2 / canberran :arg1 (t4 / thing :mod (r2 / right)) :arg2 (t5 / thing :mod (r3 / right))))))
(a / and :op1 (p / provide-01 :arg0 (e / enterprise :example (a2 / and :op1 (a3 / and :op1 (v / vostok-tsentr :mod (c / cjsc)) :op2 (l / location :name (n / name :op1 "Novo-Ziminskaya" :op2 "Thermal" :op3 "Power" :op4 "Plant")) :op3 (o / organization :name (n2 / name :op1 "LLC" :op2 "Sayanski" :op3 "Broiler")) :op4 (p2 / pc :mod (l2 / llc))))) :arg1 (s / support-01 :mod (d / damn))) :op2 (r / respond-01 :arg0 (e2 / enterprise) :arg1 (m / manage-01 :arg1 (e3 / enterprise :mod (t / this))) :arg2 (r2 / request-01 :arg0 (w / we) :quant (a4 / all))))
(l / lead-01 :arg0 (p / person :name (n / name :op1 "Ben" :op2 "Carson")) :arg1 (b / businessman) :manner (p2 / point :quant 19 :arg1-of (w / wide-02) :location (h / head-to-head :mod (h2 / hypothetical))))
(u / use-01 :arg1 (p / person :arg0-of (v / vote-01 :arg1 (r / republican))) :arg2 (i / idea))
(i / include-91 :arg1 (p / person :name (n / name :op1 "Schmidt")) :arg2 (p2 / person :name (n2 / name :op1 "Lamb") :arg0-of (w / write-01 :arg1 (b / book))) :medium (b2 / book) :medium (b3 / book) :arg1-of (w2 / write-01 :arg0 (h / he)) :arg1-of (w3 / write-01 :arg0 (h2 / he)) :arg1-of (w4 / write-01 :arg0 (h3 / he)) :arg1-of (w5 / write-01 :arg0 (h4 / he)) :arg1-of (w6 / write-01 :arg0 (h5 / he)) :arg1-of (w7 / write-01 :arg0 (h6 / he)) :arg1-of (w8 / write-01 :arg0 (h7 / he)) :arg1-of (w9 / write-01 :arg0 (h8 / he)) :arg1-of (w10 / write-01 :arg0 (h9 / he)) :arg1-of (w11 / write-01 :arg0 (h10 / he)) :arg1-of (w12 / write-01 :arg0 (h11 / he)) :arg1-of (w13 / write-01 :arg0 (h12 / he)) :arg1-of (s / share-01 :arg0 (h13 / he)) :arg1-of (s2 / share-01 :arg0 (h14 / he)) :arg1-of (s3 / share-01 :arg0 (h15 / he)) :arg1-of (s4 / share-01 :arg0 (h16 / he)))
(i / include-91 :arg1 (p / person :name (n / name :op1 "Schmidt")) :arg2 (p2 / person :name (n2 / name :op1 "Lamb") :arg0-of (w / write-01 :arg1 (b / book))) :medium (b2 / book) :medium (b3 / book) :arg1-of (w2 / write-01 :arg0 (h / he)) :arg1-of (w3 / write-01 :arg0 (h2 / he)) :arg1-of (w4 / write-01 :arg0 (h3 / he)) :arg1-of (w5 / write-01 :arg0 (h4 / he)) :arg1-of (w6 / write-01 :arg0 (h5 / he)) :arg1-of (w7 / write-01 :arg0 (h6 / he)) :arg1-of (w8 / write-01 :arg0 (h7 / he)) :arg1-of (w9 / write-01 :arg0 (h8 / he)) :arg1-of (w10 / write-01 :arg0 (h9 / he)) :arg1-of (w11 / write-01 :arg0 (h10 / he)) :arg1-of (w12 / write-01 :arg0 (h11 / he)) :arg1-of (w13 / write-01 :arg0 (h12 / he)) :arg1-of (s / share-01 :arg0 (h13 / he)) :arg1-of (s2 / share-01 :arg0 (h14 / he)) :arg1-of (s3 / share-01 :arg0 (h15 / he)) :arg1-of (s4 / share-01 :arg0 (h16 / he)))
(d / determined-02 :arg0 (p / person :quant (m / more-than :op1 11.7)) :arg1 (v / void :arg1 (p2 / person)) :concession (r / remain-01 :arg1 (u / unaccounted :quant 24) :arg3 (u2 / unaccounted)))
(a / and :op1 (s / ships :arg0 (s2 / ship :source (o / organization :name (n / name :op1 "Baltic" :op2 "Fleet"))) :arg1 (a2 / and :op1 (t / target :mod (s3 / sea)) :op2 (t2 / target :mod (l / land)))) :op2 (r / repelled :arg0 (s4 / ship) :arg1 (a3 / attack-01 :arg0 (p / person :arg0-of (h / have-rel-role-91 :arg2 (e / enemy :mod (h2 / hypothetical)))) :mod (a4 / air)) :mod (a5 / also)) :time (d / day :mod (f / final) :part-of (e2 / exercise)))
(a / and :op1 (p / person :name (n / name :op1 "Natalia" :op2 "Buksa") :arg0-of (l / lead-02 :arg1 (c / country :name (n2 / name :op1 "Ukraine")))) :op2 (p2 / person :arg0-of (l2 / lead-02 :arg1 (c2 / country))) :op3 (p3 / person :arg0-of (l3 / lead-02 :arg1 (c3 / country))) :op4 (p4 / person :arg0-of (l4 / lead-02 :arg1 (c4 / country))) :op5 (p5 / person :arg0-of (l5 / lead-02 :arg1 (c5 / country))))
(b / byline-91 :arg0 (p / person :name (n / name :op1 "Rupert" :op2 "Steiner") :arg0-of (h / have-org-role-91 :arg1 (c / city :mod (c2 / chief)) :arg2 (c3 / correspondent))) :arg2 (m / mail :mod (d / day)))
(r / rise-01 :arg1 (s / share :poss (o / organization :name (n / name :op1 "Glencore"))) :arg2 (p / percentage-entity :value (N / N-A)) :time (a / after :op1 (s2 / say-01 :arg0 (g / giant :arg0-of (m / mine-01)) :arg1 (r2 / raise-02 :arg0 (g2 / giant) :arg1 (r3 / rate-entity-91 :arg1 (m2 / monetary-quantity :quant 2.5 :unit (d / dollar)) :arg2 (v / volume-quantity :quant (N2 / N-A) :unit (g3 / gallon))) :manner (s3 / share-01 :arg1 (s4 / strategy :poss (c / company) :mod (d2 / debt-cutting)))))))
(s / say-01 :arg0 (p / person :arg0-of (s2 / study-01)) :arg1 (l / look-up-05 :arg0 (p2 / person) :arg1 (c / class :poss (p3 / person)) :direction (f / forward)))
(c / contrast-01 :arg1 (s / see-01 :arg0 (p / person :quant (m / many)) :arg1 (p2 / person :name (n / name :op1 "Sanders")) :manner (h / honest)) :arg2 (h2 / have-03 :polarity - :arg0 (p3 / person :quant (m2 / many)) :arg1 (o / opine-01 :arg0 (p4 / person))))
(p / possible-01 :polarity - :arg1 (r / rule-out-02 :arg0 (o / organization :name (n / name :op1 "Islamic" :op2 "State")) :arg1 (p2 / person :arg0-of (h / have-org-role-91 :arg1 (g / group :mod (e / extremism)) :arg3 (a / apprentice-01 :arg0 (p3 / person)))) :location (c / continent :name (n2 / name :op1 "Europe"))))
(s / say-01 :arg0 (h / he) :arg1 (a / and :op1 (l / let-01 :mode (i / imperative) :arg0 (y / you) :arg1 (c / comment-01 :arg0 (t / they) :arg3 (m / motive :mod (s2 / such)))) :op2 (s3 / say-01 :arg0 (h2 / he))))
(s / say-01 :arg0 (p / person :name (n / name :op1 "Cristiano" :op2 "Ronaldo") :mod (c / country :name (n2 / name :op1 "N-A"))) :arg1 (d / do-02 :polarity - :arg0 (p2 / person) :arg1 (t / this)))
(b / broadcast-01 :arg0 (t / they) :arg1 (o / organization :name (n / name :op1 "Voice")) :arg2 (e / event :name (n2 / name :op1 "N-A") :mod (p / prime)) :arg1-of (c / cause-01 :arg0 (w / want-01 :arg0 (t2 / they) :arg1 (g / gain-02 :arg0 (t3 / they) :arg1 (s / support-01 :arg0 (t4 / they) :arg1 (f / future :poss (o2 / organization)) :arg1-of (b2 / broad-02))))))
(( / ( :( (n / name) :op1 "Jarryd" :op2 "Hayne")
(s / say-01 :arg0 (p / person :name (n / name :op1 "Andrei" :op2 "Seletkov") :arg0-of (h / head-01 :arg1 (s2 / section :mod (g / group :arg0-of (r / rescue-01)) :part-of (o / organization :name (n2 / name :op1 "Smolensk" :op2 "Region" :op3 "Fire" :op4 "and" :op5 "Rescue" :op6 "Centre"))))) :arg1 (a / and :op1 (b / bring-01 :arg1 (' / '' :arg1 (h2 / helicopter))) :op2 (f / find-01 :arg1 (t / thing :arg1-of (f2 / find-01 :arg0 (m / man))))))
(h / hero :domain (h2 / he) :beneficiary (a / and :op1 (p / person :arg0-of (h3 / have-rel-role-91 :arg1 (h4 / he) :arg2 (k / kid))) :op2 (p2 / person :arg0-of (h5 / have-rel-role-91 :arg1 (h6 / he) :arg2 (w / wife)))))
(s / say-01 :arg2 (p / person :name (n / name :op1 "N-A")))
(m / multi-sentence :snt1 (r / realize-01 :arg0 (y / you) :arg1 (l / leave-11 :arg0 (s / someone) :arg1 (k / keys :poss (s2 / someone) :location (i / inside :op1 (r2 / room :mod (u / unlock) :poss (s3 / someone))))) :time (m2 / moment :mod (e / exhilarating))) :snt2 (f / finer :arg1 (l2 / line :mod (b / between :op1 (p / pranking) :op2 (b2 / bully)))))
(m / multi-sentence :snt1 (b / believe-01 :polarity - :arg1 (h / high-02 :arg1 (a / and :op1 (d / declare-02 :arg1 (d2 / develop-02 :arg1 (i / industry)) :time (s / since :op1 (d3 / declare-02 :arg1 (i2 / independence)))) :op2 (d4 / declare-02 :arg1 (d5 / develop-02 :arg1 (i3 / industry)))) :time (s2 / since :op1 (d6 / declare-02 :arg1 (i4 / independence))))) :snt2 (t / turn-02 :arg0 (d7 / develop-02 :arg1 (i5 / industry) :arg1-of (i6 / intensify-01)) :arg1 (c / country :name (n / name :op1 "India")) :arg2 (c2 / country :quant (m2 / multiple :op1 1) :arg1-of (i7 / include-91 :arg2 (c3 / country :location (w / world) :arg0-of (o / over-populated :degree (m3 / most) :compared-to (w2 / world)))))))
(s / say-01 :arg0 (p / person :name (n / name :op1 "Naryshkin")) :arg1 (t / trample :arg0 (m / military :name (n2 / name :op1 "NATO")) :arg1 (a / and :op1 (v / value :mod (c / continent :name (n3 / name :op1 "N-A"))) :op2 (l / law :mod (i / international)) :quant (m2 / many))))
(s / say-01 :arg0 (t / thing :arg1-of (s2 / state-01) :arg1-of (r / release-01 :time (a / after :op1 (m / meet-03)))) :arg1 (m2 / meet-03 :arg0 (a2 / and :op1 (p / person :name (n / name :op1 "Li" :op2 "Keqiang") :arg0-of (h / have-org-role-91 :arg2 (p2 / premier))) :op2 (p3 / person :name (n2 / name :op1 "Liu" :op2 "Yunshan") :arg0-of (l / lead-02 :mod (s3 / senior)))) :arg1 (m3 / meet-03) :mod (a3 / also)))
(t / think-01 :mode (i / imperative) :polarity - :arg0 (y / you) :arg1 (s / start-01 :arg1 (u / university :location (r / relation-03 :arg0 (u2 / university) :arg2 (u3 / university)))) :mod (e / even))
(s / show-01 :arg0 (p / poll-01 :arg0 (p2 / person :name (n / name :op1 "Donald" :op2 "Trump"))) :arg1 (h / have-03 :arg0 (p3 / person :quant 2 :arg1-of (i / include-91 :arg2 (p4 / person :quant 10 :arg1-of (r / republican)))) :arg1 (v / view :mod (p5 / positive) :topic (e / estate :mod (r2 / real)))) :time (b / before :op1 (a / announce-01 :arg0 (p6 / person) :arg1 (c / candidacy :poss (p7 / person) :location (m / mid-june)))))
(h / have-03 :polarity - :arg0 (p / person :arg0-of (s / specialize-01) :source (c / country :mod (p2 / poor))) :arg1 (l / level :mod (s2 / skill) :arg1-of (r / require-01)) :purpose (c2 / cooperate-01 :arg0 (p3 / person) :arg1 (a / and :op1 (p4 / person :arg0-of (s3 / specialize-01)) :op2 (p5 / person :source (c3 / country :mod (w / wealth))))) :time (a2 / after :op1 (g / globalisation)))
(h / have-03 :polarity - :arg0 (p / person :arg0-of (s / specialize-01) :source (c / country :mod (p2 / poor))) :arg1 (l / level :mod (s2 / skill) :arg1-of (r / require-01)) :purpose (c2 / cooperate-01 :arg0 (p3 / person) :arg1 (a / and :op1 (p4 / person :arg0-of (s3 / specialize-01)) :op2 (p5 / person :source (c3 / country :mod (w / wealth))))) :time (a2 / after :op1 (g / globalisation)))
(a / and :op1 (d / die-01 :arg1 (p / person :quant (n / nearly :op1 80,000)) :arg1-of (c / cause-01 :arg0 (i / illness :mod (s / smoking-related)))) :op2 (c2 / cost-01 :arg1 (m / monetary-quantity :quant (2 / 2bn) :unit (y / yuan)) :arg2 (t / temporal-quantity :quant (N / N-A) :unit (y2 / year))))
(s / say-01 :arg1 9 :arg2 (t / thing :manner-of (g / get-01 :arg1 (s2 / system :arg0-of (o / operate-01 :mod (n / new)) :mod (n2 / new)))))
(a / and :op1 (p / put-01 :arg0 (i / i) :arg1 (p2 / pressure-01) :arg2 (t / they)) :op2 (o / onus :arg0 (i2 / i) :arg1 (t2 / they) :purpose (d / decide-01 :arg0 (t3 / they))))
(r / remain-01 :arg1 (e / employ-01 :polarity - :mod (c / country :name (n / name :op1 "UK"))) :arg3 (u / unchanged))
(a / and :op1 (b / build-01 :arg1 (a2 / area :arg1-of (r / relaxation)) :location (a3 / and :op1 (l / location :name (n / name :op1 "Domodedovskoye")) :op2 (l2 / local-region :name (n2 / name :op1 "N-A")) :op3 (b2 / brotherhood)) :time (s / soon)) :op2 (a4 / and :op1 (b3 / build-01 :arg1 (a5 / area) :location (l3 / location :name (n3 / name :op1 "Domodedovskoye"))) :op2 (s2 / scrap-01 :arg1 (a6 / area)) :op3 (l4 / lab :location (d / districts :mod (o / other) :quant (d2 / districts :mod (o2 / other))))))
(h / have-concession-91 :arg1 (s / set-02 :polarity - :arg0 (a / and :op1 (c / coaches) :op2 (s2 / selectors)) :arg1 (s3 / schedule)) :arg2 (a2 / agree-01 :polarity - :arg0 (e / everyone)))
(a / and :op2 (c / cause-01 :arg0 (a2 / amr-unknown) :arg1 (t / take-01 :polarity - :arg0 (p / person :arg0-of (h / have-rel-role-91 :arg1 (y / you) :arg2 (f / friend))) :arg1 (p2 / person :arg0-of (h2 / have-rel-role-91 :arg1 (y2 / you) :arg2 (f2 / friend))) :purpose (d / drink-01 :arg0 (p3 / person) :location (l / location :name (n / name :op1 "Central" :op2 "Perk")))) :condition (a3 / attend-01 :arg0 (y3 / you) :arg1 (f3 / friendsfest :poss (c2 / comedy)) :time (w / weekend :mod (t2 / this)))))
(m / multi-sentence :snt1 (p / possible-01 :arg1 (h / hit-01 :arg0 (m2 / monetary-quantity :arg2-of (c / cost-01)) :arg1 (p2 / plan-01 :arg0 (e / expand-01 :arg1 (e2 / expand-01))))) :snt2 (a / add-01 :arg0 (h2 / he) :arg1 (p3 / possible-01 :arg1 (m3 / mean-01 :arg2 (j / job :mod (e3 / extra) :mod (f / few :degree (m4 / more)))))))
(m / multi-sentence :snt1 (a / and :op1 (w / want-01 :polarity - :arg0 (p / person :arg0-of (w2 / want-01 :arg1 (o / outward-looking :arg0 (p2 / person) :arg1 (c / country :name (n / name :op1 "Britain") :location (i / inside :op1 (t / tent :mod (o2 / organization :name (n2 / name :op1 "EU"))))) :arg0-of (h / have-org-role-91 :arg1 (t2 / tents :mod (o3 / organization :name (n3 / name :op1 "EU"))) :arg2 (p3 / pal))))) :arg1 (w3 / we) :manner (a2 / alone)) :op2 (s / say-01 :arg0 (p4 / person) :arg1 (s2 / suggest-01 :arg0 (p5 / person) :arg1 (g / get-22 :arg0 (a3 / and :op1 (p6 / person :arg0-of (h2 / have-org-role-91 :arg2 (m2 / minister :mod (s3 / short-sighted :degree (m3 / more))))) :op2 (p7 / person :arg0-of (h3 / have-org-role-91 :arg2 (o4 / official)) :location (c2 / capitals :quant (s4 / some)))) :arg1 (p8 / point :location-of (c3 / care-01 :polarity - :arg0 (a4 / and) :arg1 (s5 / stay-01 :arg1 (a5 / and)))))))) :snt2 (o5 / obligate-01 :arg1 (a6 / and :op1 (p9 / person :arg0-of (h4 / have-org-role-91 :arg2 (m4 / minister))) :op2 (p10 / person :arg0-of (h5 / have-org-role-91 :arg2 (o6 / official)))) :arg2 (p11 / point)))
(b / broadcast-01 :arg0 (o / organization :name (n / name :op1 "Sport" :op2 "Express")) :arg1 (m / match-03 :mod (l / live-01)) :manner (t / ticker))
(m / multi-sentence :snt1 (s / stick-01 :arg1 (p / person :name (n / name :op1 "Neilson")) :arg2 (t / thing :arg1-of (s2 / say-01 :arg0 (h / he)))) :snt2 (c / contrast-01 :arg1 (c2 / comment-01 :polarity - :arg0 (i / i) :arg3 (i2 / integrity :mod (a / any))) :arg2 (c3 / comment-01 :polarity - :arg0 (i3 / i) :arg3 (p2 / perform-01))))
(d / debut :arg1 (n / news :mod (b / big) :topic (s / seven)) :arg2 (p / person :name (n2 / name :op1 "Erik" :op2 "Thomson") :arg1-of (p2 / populate-01 :arg2 (s2 / star :mod (r / rafters)) :time (f / former))) :mod (s3 / stunning))
(s / say-01 :arg0 (r / report-01 :arg0 (o / organization :name (n / name :op1 "Russian" :op2 "News" :op3 "Service"))) :arg1 (r2 / receive-01 :arg0 (p / person :name (n2 / name :op1 "Mirzoev")) :arg1 (s2 / sentence-01 :arg2 (i / imprison-01 :arg2 (c / colony :mod (c2 / colony :mod (p2 / penal))) :duration (t / temporal-quantity :quant (N / N-A) :unit (y / year))))))
(s / see-01 :arg0 (e / everyone :arg0-of (s2 / see-01 :arg1 (r / race :poss (y / you)) :location (c / city :name (n / name :op1 "Beijing")))) :arg1 (r2 / race :arg1-of (b / beautiful-02 :degree (r3 / really)) :domain (i / it)))
(i / injure-01 :arg1 (p / person :mod (o / other) :arg1-of (i2 / injure-01)) :arg1-of (c / cause-01 :arg0 (a / amount :mod (t / that))))
(m / multi-sentence :snt1 (i / include-91 :arg1 (a / and :op1 (p / person :arg1-of (i2 / include-91 :arg2 (p2 / person :mod (w / whole)))) :op2 (p3 / person :arg1-of (i3 / include-91 :arg2 (p4 / person :mod (w2 / whole))))) :arg2 (t / thing :quant 1 :arg1-of (i4 / include-91 :arg2 (e / escapades :poss (p5 / person :name (n / name :op1 "Zhirinovsky"))))) :arg3 (c / country :mod (w3 / whole))) :snt2 (a2 / and :op1 (t2 / tirade :mode (e2 / expressive)) :op2 (p6 / protest-01 :arg0 (p7 / party :mod (p8 / politics) :prep-against (t3 / thing :arg2-of (r / result-01 :arg1 (e3 / elect-01 :arg1-of (a3 / actual-02))))) :quant (a4 / all))))
(t / think-01 :polarity - :arg0 (p / person :arg1-of (r / register-02) :arg1-of (i / include-91 :arg2 (p2 / person :arg0-of (v / vote-01) :arg1-of (r2 / register-02)) :arg3 (p3 / percentage-entity :value (N / N-A)))) :arg1 (s / she) :arg2 (a / and :op1 (h / honest) :op2 (t2 / trustworthy)))
(t / torque :arg1 (e / engine :part-of (e2 / engine :quant 2.2) :mod (d / diesel)) :arg2 (r / range-01 :arg1 (e3 / engine) :arg3 (r2 / range-01 :arg1 (e4 / engine) :arg1-of (w / wide-02))))
(a / and :op1 (s / say-01 :arg0 (i / i) :arg1 (a2 / and :op1 (s2 / shoot-02 :arg1 (h / he)) :op2 (k / kill-01 :arg0 (h2 / he) :arg1 (s3 / someone)))))
(c / contrast-01 :arg2 (s / say-01 :arg0 (c2 / commission :mod (e / elect-01) :mod (c3 / city) :arg0-of (i / investigate-01 :arg1 (c4 / complain-01 :quant (m / more-than :op1 124)) :time (a / already))) :arg1 (f / find-01 :polarity - :arg0 (c5 / commission) :arg1 (v / violate-01 :arg2-of (i2 / involve-01 :arg1 (s2 / stuffing :arg1 (b / boxes :mod (b2 / ballot)) :arg2 (u / unaccounted)))))))
(l / let-01 :polarity - :arg0 (y / you) :arg1 (f / forget-01 :arg0 (i / i) :arg1 (i2 / it) :mod (e / either)) :mod (b / besides))
(l / let-01 :polarity - :arg0 (y / you) :arg1 (f / forget-01 :arg0 (i / i) :arg1 (i2 / it) :mod (e / either)) :mod (b / besides))
(m / make-01 :arg0 (a / and :op1 (m2 / man :quant 2) :op2 (m3 / man :quant 2) :op3 (p / person :name (n / name :op1 "Geoff" :op2 "Britten") :arg0-of (h / have-org-role-91 :arg2 (c / cameraman)))) :arg1 (i / it) :mod (f / final) :time (s / season :mod (s2 / season)))
(m / make-01 :arg0 (a / and :op1 (m2 / man :quant 2) :op2 (m3 / man :quant 2) :op3 (p / person :name (n / name :op1 "Geoff" :op2 "Britten") :arg0-of (h / have-org-role-91 :arg2 (c / cameraman)))) :arg1 (i / it) :mod (f / final) :time (s / season :mod (s2 / season)))
(f / face-01 :arg0 (m / man :arg1-of (d / detain-01)) :arg1 (t / temporal-quantity :quant (N / N-A) :unit (y / year) :location (p / prison)))
(r / reside-01 :arg0 (p / person :quant (a / all) :arg1-of (i / include-91 :arg2 (v / victim))) :arg1 (a2 / and :op1 (l / location :name (n / name :op1 "Colorado" :op2 "City")) :op2 (l2 / local-region :name (n2 / name :op1 "N-A"))) :location-of (a3 / attack-01 :arg0 (e / element)))
(a / and :op1 (s / send-01 :arg1 (p / person :arg0-of (m / manage-01) :arg1-of (p2 / propose-01 :arg0 (p3 / person :arg0-of (m2 / manage-01)))) :arg2 (p4 / petition-01 :arg0 (p5 / person) :arg1 (a2 / and :op1 (p6 / participate-01 :arg0 (p7 / person) :arg1 (r / rate-01)) :op2 (g / give-01 :arg1 (o / opportunity :purpose (n / nominate-01 :arg1 (t / team :arg0-of (m3 / manage-01) :poss (p8 / person)))) :arg2 (p9 / person :quant 10 :arg0-of (m4 / manage-01) :mod (n2 / new)))))))
(r / rehearsing :arg0 (a / and :op1 (p / person :name (n / name :op1 "Dargin")) :op2 (o / organization :name (n2 / name :op1 "Tat")) :op3 (o2 / organization :name (n3 / name :op1 "Tat")) :op4 (f / folk :mod (a2 / armenian))) :frequency (r2 / rate-entity-91 :arg3 (t / temporal-quantity :quant (N / N-A) :unit (d / day))))
(b / basked :arg0 (i / i) :arg1 (i2 / i) :arg2 (o / or :op1 (t / temporal-quantity :quant (N / N-A) :unit (d / day)) :op2 (t2 / temporal-quantity :quant (N2 / N-A) :unit (d2 / day))) :mod (o2 / only))
(c / contrast-01 :arg1 (a / admit-01 :arg0 (s / she) :arg1 (p / possible-01 :arg1 (h / have-03 :arg0 (p2 / person :mod (c2 / country :name (n / name :op1 "N-A"))) :arg1 (g / good :degree (m / more))))) :arg2 (t / think-01 :arg0 (s2 / she) :arg1 (w / wrong-02 :arg1 (d / do-02 :arg0 (i / i) :arg1 (t2 / thing :arg1-of (d2 / do-02 :arg0 (i2 / i)))) :arg2 (i3 / i) :mod (s3 / still))))
FAILED_TO_PARSE#Two concepts in a row.
(s / sign-02 :arg0 (a / and :op1 (p / person :name (n / name :op1 "Andrei" :op2 "Bocharov")) :op2 (p2 / person :name (n2 / name :op1 "Akim"))) :arg1 (a2 / agree-01 :arg1 (c / cooperate-01)) :arg2 (p3 / person :name (n3 / name :op1 "Nurlan" :op2 "Nogaev")) :time (d / date-entity :month 9 :day 16))
(c / contrast-01 :arg1 (p / possible-01 :arg1 (s / see-01 :arg0 (i / i) :arg1 (b / ball :mod (o / only) :arg1-of (s2 / see-01 :arg0 (i2 / i) :prep-in (d / direction :arg1-of (d2 / differ-02)))))) :arg2 (p2 / possible-01 :polarity - :arg1 (s3 / see-01 :arg0 (i3 / i) :arg1 (t / tackle-01 :arg1 (p3 / person :name (n / name :op1 "Luke"))))))
(o / offer-01 :arg1 (p / package :mod (c / comprehensive :degree (m / most)) :poss (o2 / organization :name (n / name :op1 "Mazda")) :topic (s / system :mod (s2 / safe-01) :mod (c2 / comprehensive :degree (m2 / most)))) :medium (c3 / cx-5))
(o / offer-01 :arg1 (p / package :mod (c / comprehensive :degree (m / most)) :poss (o2 / organization :name (n / name :op1 "Mazda")) :topic (s / system :mod (s2 / safe-01) :mod (c2 / comprehensive :degree (m2 / most)))) :medium (c3 / cx-5))
(s / say-01 :arg0 (p / person :arg0-of (r / represent-01 :arg1 (c / country :name (n / name :op1 "Ukraine")) :arg2 (n2 / negotiate-01 :arg0 (p2 / person) :arg1 (p3 / person :name (n3 / name :op1 "Leonid" :op2 "Kuchma") :arg0-of (h / have-org-role-91 :arg1 (c2 / country) :arg2 (p4 / president) :time (f / former)))))) :arg1 (c3 / contrast-01 :arg1 (c4 / change-01 :polarity - :arg0 (a / and :op1 (r2 / republic :mod (s2 / self-proclaimed)) :op2 (p5 / person :name (n4 / name :op1 "Lukhansk") :arg0-of (h2 / have-org-role-91 :arg1 (p6 / person :name (n5 / name :op1 "Lukhansk")) :arg2 (p7 / person :name (n6 / name :op1 "Lukhansk")) :time (f2 / former)))) :arg1 (p8 / position :poss (a2 / and) :topic (n7 / negotiate-01)) :mod (s3 / still)) :arg2 (b / become-01 :arg1 (t / tone :poss (d / dialogue-01)) :arg2 (p9 / positive :degree (m / more)))) :time (e / early :degree (m2 / more) :time (e2 / early :degree (m3 / more))))
(s / say-01 :arg0 (t / thing :arg1-of (r / report-01 :arg0 (e / evaluate-01))) :arg1 (s2 / subject-01 :arg1 (p / person :name (n / name :op1 "Deng")) :arg2 (f / force :arg0-of (f2 / favor-01 :arg1 (a / and :op1 (h / head :part-of (p2 / person)) :op2 (p3 / person :arg0-of (h2 / have-rel-role-91 :arg1 (h3 / he) :arg2 (h4 / head :part-of (p4 / person)))) :op3 (p5 / person :arg0-of (h5 / have-rel-role-91 :arg1 (h6 / he) :arg2 (h7 / head)))) :manner (b / blunt-02)))))
(k / keep-01 :arg0 (p / person :name (n / name :op1 "Sam" :op2 "Wood")) :arg1 (l / lip :poss (p2 / person)) :arg1-of (f / firm-03) :time (u / until :op1 (d / date-entity :decade (N / N-A))))
(e / expect-01 :arg1 (c / charge-05 :arg1 (h / he) :arg2 (f / fail-01 :arg1 (h2 / he) :arg2 (a / and :op1 (s / stop-01 :arg1 (h3 / he) :time (a2 / accident)) :op2 (f2 / fail-01 :arg1 (h4 / he) :arg2 (a3 / assist-01 :arg0 (h5 / he) :arg2 (a4 / and :op1 (a5 / assist-01 :arg0 (h6 / he) :arg2 (r / render)) :op2 (o / offence :mod (t / traffic) :mod (o2 / other)))))))))
(r / report-01 :arg0 (p / person :name (n / name :op1 "Nikita" :op2 "Stasishin") :arg0-of (h / have-org-role-91 :arg1 (o / organization :name (n2 / name :op1 "Department" :op2 "of" :op3 "Housing" :op4 "Policy") :part-of (o2 / organization :name (n3 / name :op1 "Ministry" :op2 "of" :op3 "Construction"))) :arg2 (d / director))) :arg1 (d2 / develop-02 :arg0 (o3 / organization) :arg1 (p2 / procedure :topic (r2 / reorganisation :arg1 (p3 / person :arg0-of (d3 / develop-02))))))
(s / say-01 :arg0 (p / person :name (n / name :op1 "Angel" :op2 "Ubide") :arg0-of (h / have-org-role-91 :arg1 (o / organization :name (n2 / name :op1 "Peterson" :op2 "Institute" :op3 "for" :op4 "International" :op5 "Economics")) :arg3 (o2 / ordinal-entity :value 1))) :arg1 (s2 / situation :location-of (p2 / possible-01 :arg1 (a / and :op1 (g / get-05 :arg1 (s3 / situation :arg1-of (m / major-02) :mod (c / central)) :arg2 (o3 / out-06 :arg1 (b / bank) :arg2 (t / thing))) :op2 (s4 / start-01 :arg0 (w / we) :arg1 (p3 / process-02 :arg1 (r / revive-01 :arg1 (r2 / rate :mod (i / interest)))))))) :ord (o4 / ordinal-entity :value 1))
(t / tell-01 :arg1 (s / speak-01 :polarity - :arg0 (p / person) :arg1 (t2 / this) :time (e / ever)) :arg2 (p2 / person :name (n / name :op1 "Tsipras")))
(m / multi-sentence :snt1 (f / feel-01 :arg0 (i / i) :arg1 (b / bad-07 :arg1 (i2 / it) :degree (v / very) :topic (i3 / it))) :snt2 (s / sorry-01 :arg1 (i4 / i) :degree (s2 / so)))
(m / multi-sentence :snt1 (c / cause-01 :arg0 (t / this) :arg1 (a / and :op1 (c2 / change-01 :arg0 (p / person :arg0-of (h / have-rel-role-91 :arg2 (p2 / patient)) :mod (p3 / potential)) :arg1 (e / evaluate-01 :arg0 (p4 / person) :arg1-of (e2 / expert-01))) :op2 (s / show-01 :arg0 (p5 / person) :arg1 (o / or :mode (i / interrogative) :op1 (c3 / change-01 :arg1 (s2 / sex)) :op2 (c4 / change-01 :polarity - :arg1 (s3 / sex)))) :time (b / before :op1 (c5 / change-01 :arg1 (s4 / sex))))) :snt2 (s5 / say-01 :arg0 (p6 / person :name (n / name :op1 "Lordkipanidze"))))
(h / help-01 :arg0 (p / person :arg0-of (s / sponsor-01)) :arg1 (v / vibrantly :arg0 (w / we) :arg1 (w2 / we) :time (d / day :mod (c / city))) :arg2 (w3 / we))
(a / and :op1 (g / give-01 :arg0 (p / person :arg0-of (p2 / participate-01) :mod (e / each)) :arg1 (a2 / and :op1 (u / username) :op2 (p3 / password)) :arg2 (s / site :location-of (p4 / possible-01 :arg1 (f / find-01 :arg0 (p5 / person) :arg1 (i / information :topic (p6 / person :arg0-of (p7 / participate-01) :mod (o / other))))))) :op2 (s2 / say-01 :arg0 (p8 / person) :arg1 (a3 / and :op1 (p9 / possible-01 :arg1 (f2 / find-01 :arg0 (p10 / person) :arg1 (i2 / information :topic (p11 / person :arg0-of (p12 / participate-01) :mod (o2 / other))))) :op2 (s3 / submit-01 :arg0 (p13 / person) :arg1 (i3 / information) :arg2 (p14 / person :arg0-of (p15 / participate-01) :mod (o3 / other))) :arg1-of (c / conform-01 :arg2 (c2 / criteria :arg1-of (p16 / propose-01) :beneficiary (a4 / area :mod (e2 / each) :mod (f3 / functional)))))))
(w / word :arg1-of (w2 / write-01 :arg0 (o / organization :name (n / name :op1 "Mazda")) :location (c / character :mod (c2 / country :name (n2 / name :op1 "N-A")))) :domain (t / this))
(a / and :op1 (t / term) :op2 (c / condition-01) :arg1-of (c2 / contribute-01 :arg2 (c3 / company :name (n / name :op1 "BBC"))))
(s / say-01 :arg0 (p / person :arg0-of (r / research-01)) :arg1 (d / demonstrate-01 :arg0 (w / worm) :arg1 (a / and :op1 (p2 / power :poss (p3 / procedure :mod (n / new))) :op2 (s2 / sonogenetics :mod (d2 / dub) :arg1-of (u / use-01 :arg2 (e / exploit-01 :arg1 (r2 / range-01 :arg1 (a2 / and :op1 (b / brain) :op2 (h / heart) :op3 (m / muscle)) :arg2 (o / outside :op1 (b2 / body)))))))))
(c / construct-01 :arg0 (w / we) :arg1 (h / house-01 :arg1 (p / person :arg1-of (e / employ-01 :arg0 (s / sector :arg1-of (p2 / public-02))))) :time (o / over :op1 (t / term :arg1-of (l / long-03 :degree (m / more)))))
(a / and :op1 (c / cooperate-01 :arg0 (t / topic :arg1-of (k / key-02)) :arg1 (s / sector :mod (a2 / agriculture))) :op2 (e / ensure-01 :arg0 (t2 / topic) :arg1 (s2 / safe-01 :arg1 (f / food))))
(a / arrive-01 :arg1 (r / refugee :quant (m / more-than :op1 90)) :arg4 (c / country) :time (a2 / already) :time (s / since :op1 (b / begin-01 :arg1 (s2 / september))))
(a / and :op1 (p / plan-01 :arg0 (i / i) :arg1 (c / compete-01 :arg0 (i2 / i) :location (g / game :mod (w / world) :mod (m / military) :arg1-of (h / hold-01 :arg0 (i3 / i) :location (c2 / country :name (n / name :op1 "North" :op2 "Korea")))))) :op2 (t / think-01 :arg0 (i4 / i) :arg1 (t2 / take-01 :arg0 (i5 / i) :arg1 (r / rest)) :time (t3 / then)))
(b / benefit-01 :polarity - :arg0 (f / finance-01 :arg1 (p / person :quant 25-30)) :arg1 (a / anyone))
(w / want-01 :mode (i / interrogative) :arg0 (y / you) :arg1 (g / get-01 :arg0 (y2 / you) :arg1 (t / talk-01 :arg0 (w2 / world))))
(w / want-01 :mode (i / interrogative) :arg0 (y / you) :arg1 (g / get-01 :arg0 (y2 / you) :arg1 (t / talk-01 :arg0 (w2 / world))))
(s / say-01 :arg0 (a / and :op1 (p / person :name (n / name :op1 "Fred" :op2 "Smith") :arg0-of (h / have-org-role-91 :arg2 (c / chairman))) :op2 (p2 / person :arg0-of (h2 / have-org-role-91 :arg2 (c2 / ceo))) :op3 (p3 / person :arg0-of (h3 / have-org-role-91 :arg2 (c3 / ceo)))) :arg1 (p4 / performing :arg0 (a2 / and :op1 (c4 / condition :mod (e / economy) :mod (w / weaker-than-expected)) :op2 (t / trade-01 :mod (g / globe)) :op3 (t2 / trade-01 :mod (g2 / globe)) :mod (e2 / especially)) :arg1 (c5 / company)))
(n / name-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (c / country :name (n2 / name :op1 "Syria")) :arg2 (p2 / president))) :arg1 (r / reason :arg0-of (c2 / cause-01 :arg1 (e / enmity :location (w / west)))) :arg2 (c3 / country :name (n3 / name :op1 "Russia")))
(a / airlifted :arg1 (o / organization :name (n / name :op1 "Royal" :op2 "Melbourne" :op3 "Hospital") :prep-with (i / injure-01 :mod (s / serious))) :arg2 (i2 / injure-01 :mod (s2 / serious)) :time (a2 / after :op1 (s3 / strike-01 :arg0 (o2 / organization) :arg1 (c / car) :time (m / morning :mod (s4 / saturday)))))
(s / suspect-01 :arg0 (p / person :arg0-of (s2 / speak-01 :arg1 (o / organization :name (n / name :op1 "State" :op2 "Duma"))) :arg0-of (h / have-org-role-91 :arg1 (p2 / person :name (n2 / name :op1 "Sergei" :op2 "Naryshkin") :arg0-of (h2 / have-org-role-91 :arg1 (o2 / organization) :arg3 (s3 / speak-01))) :arg2 (p3 / person :arg2-of (s4 / suspect-01)))) :arg1 (i / intend-01 :arg0 (c / country :name (n3 / name :op1 "US")) :arg1 (d / destabilise :arg0 (c2 / country) :arg1 (s5 / situation) :location (w / world-region :name (n4 / name :op1 "Middle" :op2 "East")))) :arg2 (f / flooded :arg0 (w2 / wave-04 :arg1 (r / refugee)) :arg1 (c3 / country :name (n5 / name :op1 "US"))))
(r / receive-01 :arg0 (h / he) :arg1 (a / accolade :quant (m / multiple :op1 (m2 / mass-quantity :quant (N / N-A) :unit (t / ton)))) :arg2 (f / fan))
(s / say-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (l / location :name (n / name :op1 "Islington" :op2 "North")) :arg2 (m / mp))) :arg1 (a / and :op1 (a2 / annoy-01 :arg1 (p2 / person :arg0-of (h2 / have-org-role-91 :arg1 (l2 / location :name (n2 / name :op1 "Islington" :op2 "North")) :arg2 (m2 / mp))) :degree (t / too)) :op2 (r / refrains :arg0 (p3 / person) :arg1 (a3 / and :op1 (' / '') :op2 (t2 / trade-01) :mod (b / both))) :arg1-of (i / instead-of-91 :arg2 (f / focus-01 :arg0 (p4 / person) :arg2 (f2 / focus-01 :arg0 (p5 / person) :arg2 (i2 / issue-02 :mod (s2 / serious) :example (a4 / and :op1 (p6 / poverty) :op2 (i3 / inequality) :op3 (t3 / thing :arg2-of (f3 / face-01 :arg0 (p7 / person) :arg1 (p8 / person :mod (y / young)))))))))))
(t / try-01 :arg0 (w / we) :arg1 (p / prepare-01 :arg0 (w2 / we) :arg1 (m / match-03 :arg0 (o / organization :name (n / name :op1 "Europa" :op2 "League")) :arg1 (o2 / organization :name (n2 / name :op1 "Borussia" :op2 "Dortmund")))) :arg1-of (c / cause-01 :arg0 (k / keep-02 :arg0 (w3 / we) :arg1 (m2 / match-01 :arg0 (w4 / we) :arg1 (m3 / match-03 :arg0 (o3 / organization) :arg1 (o4 / organization)) :arg2 (o5 / organization :name (n3 / name :op1 "Borussia" :op2 "Dortmund"))))) :arg1-of (c2 / cause-01 :arg0 (t2 / try-01 :arg0 (w5 / we) :arg1 (s / secure-02 :arg0 (w6 / we) :arg1 (w7 / win-01) :manner (w8 / well :degree (v / very))))))
(c / cause-01 :arg0 (a / announce-01 :arg1 (t / thing :arg1-of (d / decide-01))) :arg1 (t2 / thing :arg1-of (d2 / decide-01)))
FAILED_TO_PARSE#Number of opening and closing brackets doesn't match.
(b / become-01 :arg1 (r / resource :mod (c / credit)) :arg2 (r2 / ready-02 :arg1 (r3 / resource) :degree (m / more)))
(c / cricketer :domain (h / he) :arg1-of (s / see-01 :arg0 (w / we) :time (e / early :op1 (s2 / season :mod (t / this)))) :arg1-of (s3 / see-01 :arg0 (w2 / we) :time (e2 / early :op1 (d / date-entity :decade (N / N-A) :time-of (m / make-01 :arg0 (h2 / he) :arg1 (a / against :op1 (p / pitch :mod (e3 / email) :arg0-of (d2 / do-02 :arg1 (b / bit)))))))))
FAILED_TO_PARSE#Number of opening and closing brackets doesn't match.
(g / get-01 :arg0 (s / she) :arg1 (a / attend-02 :arg1 (s2 / she) :mod (n / new)) :time (t / then) :degree (e / equal :polarity -))
(w / warn-01 :arg0 (p / person :name (n / name :op1 "John" :op2 "Kerry") :arg0-of (h / have-org-role-91 :arg1 (o / organization :name (n2 / name :op1 "MFA") :poss (c / country)) :arg2 (s / secretary :mod (s2 / state)))) :arg1 (e / exacerbate :arg0 (s3 / support-01 :arg0 (c2 / country) :arg1 (p2 / person :name (n3 / name :op1 "Bashar" :op2 "al-Assad") :arg0-of (h2 / have-org-role-91 :arg1 (c3 / country) :arg2 (p3 / president)))) :arg1 (c4 / conflict-01) :location (c5 / country)) :time (c6 / converse-01 :arg0 (p4 / person :arg0-of (h3 / head-01 :arg1 (o2 / organization :name (n4 / name :op1 "MFA") :poss (c7 / country)))) :arg1 (p5 / person :name (n5 / name :op1 "John" :op2 "Kerry") :arg0-of (h4 / have-org-role-91 :arg1 (c8 / country) :arg2 (s4 / secretary :mod (s5 / state))))))
(l / look-02 :arg0 (s / situation) :arg1 (a / and :op1 (d / differ-02 :arg1 (g / gap :mod (i / income)) :arg2 (e / economy :arg1-of (d2 / develop-02))) :op2 (g2 / grow-01 :arg1 (g3 / gap)) :op3 (g4 / grow-01 :arg1 (g5 / gap))) :prep-in (p / practice :arg1-of (p2 / practice-01)))
(h / have-concession-91 :arg1 (h2 / hope-01 :arg0 (i / i) :arg1 (j / justify-01 :arg1 (m / measure-01 :mod (t / this)))) :arg2 (k / know-01 :polarity - :arg0 (i2 / i) :arg1 (t2 / thing :manner-of (s / subsidize-01 :arg1 (t3 / theory :mod (e / economy))) :mod (w / well))))
(m / multi-sentence :snt1 (c / cause-01 :arg1 (t / try-01 :arg0 (y / you) :arg1 (d / do-02 :arg0 (y2 / you) :arg1 (s / something :arg1-of (d2 / differ-02))))) :snt2 (e / example :quant 2 :domain (t2 / that) :source (t3 / top :poss (h / head :part-of (i / i)) :location-of (m2 / mimicking :arg0 (y3 / you) :arg1 (t4 / thing :arg1-of (s2 / say-01 :arg0 (p / person :name (n / name :op1 "Bingham")))) :mod (a / actual) :mod (a2 / actual)))))
(r / reaffirmed :arg0 (p / person :name (n / name :op1 "Cristiano" :op2 "Ronaldo")) :arg1 (l / level :poss (p2 / person)))
(p / point-out-02 :arg0 (p2 / person :name (n / name :op1 "Rick" :op2 "Perry") :arg1-of (i / include-91 :polarity - :arg2 (p3 / person :arg0-of (w / win-01 :arg1 (s / state :quant 1 :mod (e / even))) :arg0-of (w2 / win-01 :arg1 (p4 / process-02 :arg1 (n2 / nominate-01)))))) :arg1 (l / lead-02 :arg0 (p5 / person)) :manner (w3 / way) :time (t / time :mod (t2 / this)))
(d / decide-01 :arg0 (o / organization :name (n / name :op1 "TUC") :part-of (o2 / organization :name (n2 / name :op1 "TUC"))) :arg1 (w / want-01 :polarity - :arg0 (o3 / organization) :arg1 (p / protect-01 :arg0 (c / country) :arg1 (p2 / protect-01 :arg1 (s / society)))) :location (l / location :name (n3 / name :op1 "Brighton")))
(o / or :op2 (s / strolling :arg1 (s2 / street) :location (a / along :op1 (s3 / street) :extent (l / little)) :mod (s4 / simple)))
(s / say-01 :arg0 (p / person :arg0-of (l / lead-02 :arg1 (o / organization :name (n / name :op1 "The" :op2 "Black" :op3 "Lives" :op4 "Matter" :op5 "Network")))) :arg1 (g / group :mod (l2 / love-01) :domain (o2 / organization)))
(l / lie-07 :arg1 (f / friendship) :arg2 (h / heart :part-of (b / battle-01)) :purpose (m / meet-01 :arg0 (f2 / friendship) :arg1 (c / challenge-01 :arg2 (t / this))))
(n / note-01 :mode (i / imperative) :arg0 (n2 / note) :arg1 (s / shut-down-05 :arg1 (p / person :name (n3 / name :op1 "Anibal" :op2 "Sanchez") :arg0-of (h / have-org-role-91 :arg1 (o / organization) :arg3 (l / lead-02 :arg0 (p2 / person)))) :arg3 (s2 / strain :location (s3 / shoulder :part-of (p3 / person)))))
(c / comment-01 :arg0 (c2 / company :name (n / name :op1 "Facebook")) :mod (r / reverse-01))
(c / contrast-01 :arg1 (h / hit-01 :polarity - :arg0 (h2 / he) :arg1 (i / it) :mod (p / particular)) :arg2 (g / get-01 :arg0 (h3 / he) :arg1 (i2 / it) :location (s / spot :mod (r / right))))
(t / take-01 :mode (i / imperative) :arg0 (y / you) :arg1 (t2 / thing :arg1-of (i2 / intend-01 :arg0 (s / school :mod (c / country :name (n / name :op1 "N-A"))))) :arg1-of (c2 / cause-01 :arg0 (c3 / content-01 :arg1 (c4 / content-01 :arg1 (g / girl) :arg2 (w / wear-01 :arg0 (g2 / girl) :mod (e / even) :time (a / after :op1 (g3 / graduate)))) :mod (o / only))))
(p / play-11 :arg0 (w / we) :arg2 (l / league :mod (s / swedish) :arg1-of (s2 / same-01 :polarity - :arg2 (l2 / level))) :mod (o / only) :time (s3 / since :op1 (t / then)))
(n / note-01 :arg0 (h / he) :arg1 (a / and :op1 (s / step-01 :arg1 (a2 / authority :mod (c / country :name (n2 / name :op1 "N-A"))) :arg2 (r / reform-01 :arg0 (a3 / authority) :arg1 (e / economy))) :op2 (n3 / notice-01 :arg0 (o / organization) :arg1 (s2 / sign :ord (o2 / ordinal-entity :value 1) :mod (s3 / stabilisation)))) :mod (a4 / also))
(s / say-01 :arg0 (t / thing :arg1-of (s2 / state-01)) :arg1 (d / drawn :arg1 (a / and :op1 (a2 / and :op1 (s3 / sector :mod (i / identifying)) :op2 (s4 / sector :mod (i2 / identifying))) :mod (n / negative)) :op2 (d2 / drawn :arg1 (a3 / and))))
FAILED_TO_PARSE#Two concepts in a row.
(h / have-condition-91 :arg1 (p / professional :domain (t / they)) :arg2 (s / smile :domain (t2 / they)))
(h / have-concession-91 :arg1 (h2 / have-03 :arg0 (i / i) :arg1 (m / memory :arg1-of (a / associate-01 :arg2 (c / country :name (n / name :op1 "Rome"))))) :arg2 (h3 / have-03 :arg0 (i2 / i) :arg1 (n2 / nothing)))
(r / return-05 :mode (i / imperative) :arg0 (w / we) :arg1 (a / and :op1 (d / dialogue-01) :op2 (l / law)) :arg2 (p / practice :mod (c / communicate-01 :mod (i2 / international))))
(m / mix-01 :arg0 (m2 / military :name (n / name :op1 "N-A")) :arg1 (m3 / mouthwash :mod (a / alcohol-containing)) :arg2 (m4 / mouthwash :mod (s / stiffer)) :arg1-of (r / report-01))
(m / mix-01 :arg0 (m2 / military :name (n / name :op1 "N-A")) :arg1 (m3 / mouthwash :mod (a / alcohol-containing)) :arg2 (m4 / mouthwash :mod (s / stiffer)) :arg1-of (r / report-01))
(p / push-01 :arg0 (w / we) :arg1 (r / reform-01) :arg2 (r2 / reform-01))
(p / problem :domain (i / inflation :arg0-of (n / necessitates :arg1 (r / rate :mod (i2 / interest :arg1-of (h / high-02))) :purpose (o / obtain-01 :arg0 (r2 / rate) :arg1 (e / earnings :mod (r3 / real))))) :time (s / situation :time (c / current)) :ord (o2 / ordinal-entity :value 1))
(a / and :op1 (d / develop-02 :arg1 (p / person :name (n / name :op1 "Moeen" :op2 "Ali")) :prep-as (a2 / and :op1 (s / spinner) :op2 (p2 / person :name (n2 / name :op1 "Adil" :op2 "Rashid")))) :op2 (r / represent-01 :arg0 (p3 / person) :arg1 (o / option :mod (a3 / attack-01))) :op3 (r2 / represent-01 :arg0 (p4 / person) :arg1 (o2 / option :mod (a4 / attack-01))))
(b / bear-02 :arg1 (g / girl) :location (c / clinic :mod (c2 / city :name (n / name :op1 "Moscow"))))
(c / contrast-01 :arg1 (d / define-01 :polarity - :arg0 (w / work-01 :arg0 (t / they)) :arg1 (c2 / character :mod (e / each))) :arg2 (d2 / define-01 :arg0 (p / person :arg0-of (h / have-rel-role-91 :arg1 (t2 / they) :arg2 (f / friend))) :arg1 (p2 / person :arg0-of (h2 / have-rel-role-91 :arg1 (t3 / they) :arg2 (f2 / friend)))))
(c / contrast-01 :arg2 (p / possible-01 :arg1 (s / see-01 :arg0 (y / you) :arg1 (f / fall-01 :arg1 (- / -rrb- :mod (g / grow-01)) :direction (a / away))) :time (n / now)))
(s / say-01 :arg0 (c / company) :arg1 (s2 / start-01 :arg0 (c2 / company) :arg1 (i / interviewing :arg0 (i2 / it) :arg1 (l / level :mod (s3 / staff) :arg1-of (r / rise-01 :arg2 (c3 / company :name (n / name :op1 "N-A")) :manner (d / december))) :time (m / month :mod (t / this)))))
(a / announce-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (o / organization :name (n / name :op1 "Google" :op2 "Inc")) :arg2 (- / -lrb-))) :arg1 (c / campaign-01 :arg0 (p2 / person) :arg1 (r / raise-02 :arg0 (p3 / person) :arg1 (r2 / rate-entity-91 :arg1 (m / monetary-quantity :quant 11 :unit (d / dollar)) :arg2 (v / volume-quantity :quant (N / N-A) :unit (g / gallon))) :beneficiary (o2 / organization :mod (h2 / humanitarian) :arg0-of (a2 / aid-01 :arg1 (n2 / nation :mod (c2 / continent :name (n3 / name :op1 "N-A"))) :arg2 (a3 / and :op1 (c3 / country :mod (w / world-region :name (n4 / name :op1 "N-A"))) :op2 (c4 / country :arg1-of (i / impoverish-01))))))))
(a / and :op1 (s / send-01 :arg1 (r / reinforcements) :arg2 (s2 / scene :poss (c / clashes))) :op2 (m / measure-02 :arg0 (p / police) :arg1 (d / deal-01 :arg0 (p2 / police) :arg2 (a2 / and :op1 (a3 / act-02 :arg0 (p3 / person :arg0-of (u / use-01))) :op2 (a4 / attempt-01 :arg0 (p4 / person) :arg1 (v / violate-01 :arg0 (p5 / person) :arg1 (b / border)))))))
(a / and :op1 (c / call-01 :polarity - :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (p2 / person :name (n / name :op1 "Pi" :op2 "Delta" :op3 "Psi")) :arg2 (m / member))) :arg1 (p3 / person :quant 911) :time (a2 / after :op1 (c2 / come-out-09 :arg1 (p4 / person)))) :op2 (w / wait-01 :arg1 (p5 / person) :arg2 (t / temporal-quantity :quant (N / N-A) :unit (h2 / hour) :time (b / before :op1 (b2 / bring-01 :arg0 (p6 / person) :arg1 (p7 / person) :arg2 (h3 / hospital)))) :arg1-of (a3 / allege-01) :time (b3 / before :op1 (b4 / bring-01 :arg0 (p8 / person) :arg1 (p9 / person) :arg2 (h4 / hospital)))))
(s / state-01 :arg0 (p / person :name (n / name :op1 "Heiko" :op2 "Maas") :arg0-of (h / head-01 :arg1 (a / agency))) :arg1 (w / work-01 :arg0 (o / organization :name (n2 / name :op1 "Ministry" :op2 "of" :op3 "Justice")) :arg1 (c / create-01 :arg0 (o2 / organization) :arg1 (g / group :arg1-of (s2 / special-02) :consist-of (m / moderators))) :time (c2 / current)) :arg2 (p2 / person :arg0-of (s3 / specialize-01 :arg1 (m2 / media :mod (s4 / social)))) :time (c3 / current))
(m / multi-sentence :snt1 (a / and :op1 (s / specific-02 :arg1 (m2 / market :time (b / before :op1 (n / now) :duration (o / or :op1 (t / temporal-quantity :quant (N / N-A) :unit (y / year)) :op2 (t2 / temporal-quantity :quant (N2 / N-A) :unit (y2 / year))))) :manner (s2 / sharp) :frequency (o2 / often :degree (m3 / more))) :op2 (h / head-02 :arg0 (a2 / and :op1 (p / person :arg0-of (h2 / head-02 :arg1 (r / rate))) :op2 (p2 / person :arg0-of (h3 / head-02 :arg1 (r2 / rate))) :op3 (p3 / person :arg0-of (h4 / head-02 :arg1 (r3 / rate))) :op4 (p4 / person :arg0-of (h5 / head-02 :arg1 (r4 / rate))) :op5 (p5 / person :arg0-of (h6 / have-org-role-91 :arg1 (o3 / organization :name (n2 / name :op1 "Nuveen" :op2 "Asset" :op3 "Management") :part-of (o4 / organization :name (n3 / name :op1 "Nuveen" :op2 "Asset" :op3 "Management"))) :arg3 (a3 / apprentice-01 :arg0 (p6 / person)))) :arg1-of (a4 / average-04) :time (b2 / before :op1 (n4 / now) :duration (t3 / temporal-quantity :quant (N3 / N-A) :unit (d / day)))))) :snt2 (s3 / say-01 :arg0 (a5 / analyze-01 :time (r5 / recent)) :arg1 (t4 / thing :arg1-of (p7 / post-01 :arg2 (p8 / person :name (n5 / name :op1 "Barron"))))))
(r / resemble-01 :arg1 (r2 / resemble-01 :arg1 (i / it) :arg2 (w / watch-01 :arg0 (y / you) :arg1 (m / man :arg1-of (l / like-01 :arg0 (i2 / i) :arg1-of (r3 / resemble-01 :arg2 (d / die-01 :arg1-of (n / need-01 :polarity -))))))) :arg2 (i3 / i))
(m / multi-sentence :snt1 (i / include-91 :li 1 :arg1 (o / organization :name (n / name :op1 "Voice")) :arg2 (o2 / organization :name (n2 / name :op1 "Voice") :mod (a / another))) :snt2 (m2 / make-01 :arg1 (i2 / in-house)))
(a / add-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (p2 / person :arg0-of (h2 / have-org-role-91 :arg2 (p3 / president))) :arg2 (v / visit-01 :arg0 (p4 / person)))) :arg1 (o / opportunity :purpose (e / expand-01 :arg0 (p5 / person) :arg1 (c / cooperate-01 :arg0 (p6 / person) :arg1 (a2 / and :op1 (g / globe) :op2 (r / region) :op3 (i / issue-02 :arg0 (i2 / interest :mod (m / mutual))) :mod (b / bilateral)) :op4 (b2 / bilateral) :mod (b3 / bilateral))) :time (e2 / enable-01 :arg0 (p7 / person) :arg1 (a3 / address-02 :arg0 (a4 / and :op1 (p8 / person :name (n / name :op1 "Obama") :arg0-of (h3 / have-org-role-91 :arg2 (p9 / president))) :op2 (p10 / person :arg0-of (h4 / have-org-role-91 :arg2 (p11 / president)))) :arg1 (a5 / area :location-of (d / disagree-01 :arg0 (p12 / person)))) :arg2 (a6 / address-02 :arg0 (a7 / and) :arg1 (a8 / area :location-of (d2 / disagree-01 :arg0 (a9 / and)))))))
(s / say-01 :arg0 (h / he) :arg1 (h2 / harmful-02 :arg0 (e / e-cigarettes :mod (' / '')) :degree (l / less :compared-to (s2 / smoke-02))))
(a / and :op1 (w / write-01 :arg0 (p / publication :name (n / name :op1 "Associated" :op2 "Press")) :arg1 (p2 / person :name (n2 / name :op1 "Emily" :op2 "Wagster" :op3 "Pettus") :arg0-of (h / have-org-role-91 :arg2 (s / senator)))) :op2 (c / contribute-01 :arg0 (p3 / person) :arg2 (t / thing :arg1-of (r / report-01) :mod (t2 / this)) :location (c2 / city :name (n3 / name :op1 "New" :op2 "Orleans"))))
(s / satisfy-01 :arg0 (l / let-01 :polarity - :arg0 (w / we) :arg1 (a / and :op1 (g / goal :mod (a2 / any)) :op2 (s2 / score-01 :arg2 4))) :arg1 (i / i))
(a / add-01 :arg0 (h / he) :arg1 (a2 / and :op1 (a3 / assume-02 :arg0 (s / someone) :arg1 (a4 / and :op1 (f / fortunate-01 :polarity - :arg1 (a5 / arrive-01 :arg1 (a6 / and :op1 (r / refugee) :op2 (p / person :arg0-of (t / try-01 :arg1 (e / escape-01 :arg0 (p2 / person) :arg1 (d / die-01 :arg1 (p3 / person))))))) :arg2 (p4 / person :arg0-of (t2 / try-01 :arg1 (e2 / escape-01 :arg0 (p5 / person) :arg1 (d2 / die-01 :arg1 (p6 / person)))))) :op2 (w / wretched :arg0 (p7 / person))))) :time (a7 / after :op1 (a8 / all)) :arg1-of (s2 / sure-02))
(e / establish-01 :arg0 (p / person :name (n / name :op1 "Artem" :op2 "Vasitsky") :arg0-of (h / have-org-role-91 :arg1 (o / organization :name (n2 / name :op1 "Criminal" :op2 "Investigation" :op3 "Department") :part-of (o2 / organization :name (n3 / name :op1 "Criminal" :op2 "Investigation" :op3 "Department"))) :arg2 (c / chief :mod (d / deputy) :topic (p2 / police :mod (r / region)))) :arg0-of (h2 / have-org-role-91 :arg1 (p3 / police :mod (r2 / region)) :arg2 (c2 / chief))) :arg1 (i / involve-01 :arg1 (p4 / person) :arg2 (o3 / offence :mod (i2 / indictable :mod (s / serious)) :mod (a / another))) :arg1-of (c3 / cause-01 :arg0 (m / murder-01 :arg1 (p5 / person :arg1-of (r3 / reside-01 :arg0 (p6 / person :arg0-of (r4 / reside-01 :arg1 (v / village :arg1-of (s2 / same-01)))))))))
(e / expect-01 :arg0 (o / organization :name (n / name :op1 "Hewlett-Packard")) :arg1 (c / cut-02 :arg0 (o2 / organization) :arg1 (j / job :quant 25,000) :arg3 (j2 / job :quant 30,000 :part-of (a / and :op1 (i / infringe-01 :arg1 (b / business :mod (e2 / enterprise))) :op2 (e3 / effort :purpose (s / service :mod (e4 / enterprise)))))))
(p / picked :arg0 (i / i) :arg1 (i2 / it) :arg2 (w / watch-01 :arg0 (i3 / i) :arg1 (i4 / it)))
(c / cause-01 :arg0 (h / have-03 :polarity - :arg0 (o / organization :name (n / name :op1 "LDPR")) :arg1 (t / thing :arg1-of (h2 / have-03 :polarity - :arg0 (a / account :mod (a2 / all))))) :arg1 (h3 / have-03 :polarity - :arg0 (o2 / organization) :arg1 (p / protocols :mod (o3 / other) :mod (a3 / any) :compared-to (p2 / person :arg1-of (s / sign-02 :arg0 (c2 / commission :mod (e / elect-01)))))))
(p / person :arg0-of (i / invest-01) :mod (p2 / potential) :arg1-of (r / ready-02 :arg2 (p3 / put-01 :arg0 (p4 / person) :arg1 (r2 / roubles :quant 1.5 :mod (b / bln)) :arg2 (a / and :op1 (r3 / redevelopment :arg1 (p5 / project)) :op2 (l / launch-01 :arg1 (p6 / project))))))
(c / contrast-01 :arg1 (c2 / close-10 :arg1 (w / we) :arg2 (i / inside :op1 2006) :degree (v / very)) :arg2 (r / realistic-03 :arg1 (i2 / i) :degree (e / enough)))
(f / find-01 :arg0 (s / survey-01) :arg1 (a / and :op1 (d / do-02 :arg0 (p / person :name (n / name :op1 "Carson")) :arg1 (d2 / do-02 :arg0 (p2 / person) :manner (g / good)) :manner (g2 / good)) :op2 (o / out :arg0 (p3 / person) :arg1 (p4 / person :name (n2 / name :op1 "Trump")) :arg2 (p5 / person :arg0-of (v / vote-01 :arg1 (c / criminal-organization :name (n3 / name :op1 "N-A"))) :mod (c2 / college-educated)))) :mod (a2 / also))
(a / and :op1 (p / place-01 :arg0 (c / company) :arg1 (r / region :mod (c2 / country-region :name (n / name :op1 "Volga"))) :arg2 (r2 / region :quant 1 :name (n2 / name :op1 (e / enlarged)))) :op2 (b / be-located-at-91 :arg1 (r3 / region) :arg2 (r4 / region :mod (e2 / east) :part-of (r5 / region :mod (e3 / east)))))
(a / and :op1 (s / show-04 :arg1 (t / trade-01) :mod (a2 / also)) :op2 (e / exhibitions :arg1 (p / person :source (r / region :source (l / location :name (n / name :op1 "Tyumen"))))))
(r / reveal-01 :arg0 (s / study :arg1-of (c / conduct-01 :arg0 (p / person :name (n / name :op1 "Robert" :op2 "Waterland") :arg0-of (h / have-org-role-91 :arg1 (o / organization :name (n2 / name :op1 "Baylor" :op2 "College" :op3 "of" :op4 "Medicine")) :arg2 (p2 / professor))) :location (s2 / state :name (n3 / name :op1 "Texas"))) :arg0-of (h2 / have-org-role-91 :arg1 (o2 / organization) :arg2 (p3 / professor))) :arg1 (a / and :op1 (a2 / affect-01 :arg0 (d / diets :mod (h3 / healthy) :poss (w / woman)) :arg1 (e / expression :mod (c2 / country)) :mod (a3 / actual)) :op2 (p4 / protect-01 :arg0 (w2 / woman) :arg1 (p5 / person :arg0-of (h4 / have-rel-role-91 :arg1 (w3 / woman) :arg2 (d2 / dd1))) :arg2 (d3 / develop-02 :arg1 (p6 / person)))) :medium (s3 / state :name (n4 / name :op1 "Texas")))
(r / reveal-01 :arg0 (s / study :arg1-of (c / conduct-01 :arg0 (p / person :name (n / name :op1 "Robert" :op2 "Waterland") :arg0-of (h / have-org-role-91 :arg1 (o / organization :name (n2 / name :op1 "Baylor" :op2 "College" :op3 "of" :op4 "Medicine")) :arg2 (p2 / professor))) :location (s2 / state :name (n3 / name :op1 "Texas"))) :arg0-of (h2 / have-org-role-91 :arg1 (o2 / organization) :arg2 (p3 / professor))) :arg1 (a / and :op1 (a2 / affect-01 :arg0 (d / diets :mod (h3 / healthy) :poss (w / woman)) :arg1 (e / expression :mod (c2 / country)) :mod (a3 / actual)) :op2 (p4 / protect-01 :arg0 (w2 / woman) :arg1 (p5 / person :arg0-of (h4 / have-rel-role-91 :arg1 (w3 / woman) :arg2 (d2 / dd1))) :arg2 (d3 / develop-02 :arg1 (p6 / person)))) :medium (s3 / state :name (n4 / name :op1 "Texas")))
(s / say-01 :arg0 (p / person :name (n / name :op1 "Salman") :arg0-of (h / have-org-role-91 :arg2 (k / king))) :arg1 (r / recommend-01 :arg1 (l / leave-11 :polarity - :arg0 (o / organization :name (n2 / name :op1 "Binladin" :op2 "Group")) :arg1 (a / arm :part-of (a2 / aircraft-type)) :time (u / use-01 :arg1 (a3 / arm)))) :time (t / today))
(s / say-01 :arg0 (p / person :name (n / name :op1 "Salman") :arg0-of (h / have-org-role-91 :arg2 (k / king))) :arg1 (r / recommend-01 :arg1 (l / leave-11 :polarity - :arg0 (o / organization :name (n2 / name :op1 "Binladin" :op2 "Group")) :arg1 (a / arm :part-of (a2 / aircraft-type)) :time (u / use-01 :arg1 (a3 / arm)))) :time (t / today))
(b / be-located-at-91 :arg1 (c / country :name (n / name :op1 "N-A")) :arg2 (c2 / city :mod (o / only) :arg0-of (s / survive-01 :location (p / place :arg1-of (s2 / same-01)) :time (s3 / since :op1 (w / war :name (n2 / name :op1 "N-A"))))))
(h / hatch :location (r / room :mod (f / furthermost) :mod (a / antique) :arg0-of (l / lead-03 :arg2 (b / basement) :arg4 (b2 / basement) :destination (b3 / basement))) :location (r2 / room :mod (f2 / furthermost) :part-of (l2 / library)))
(m / multi-sentence :snt1 (p / push-01 :arg0 (p2 / person :mod (w / white :mod (d / dear))) :arg1 (a / and :op1 (p3 / person :name (n / name :op1 "Leo" :op2 "Angelos")) :op2 (p4 / person :name (n2 / name :op1 "Kristen" :op2 "Brancaccio"))) :arg2 (r / right-05 :arg1 (p5 / person) :arg2 (d2 / direct-02 :arg1-of (d3 / direct-02)))) :snt2 (p6 / possible-01 :arg1 (e / end-up-03 :arg1 (p7 / person :name (n3 / name :op1 "Damon")) :arg2 (g / give-01 :arg0 (p8 / person) :arg1 (s / something :arg1-of (w2 / want-01 :polarity - :arg0 (w3 / we))) :arg2 (w4 / we)))))
(m / multi-sentence :snt1 (p / push-01 :arg0 (p2 / person :mod (w / white :mod (d / dear))) :arg1 (a / and :op1 (p3 / person :name (n / name :op1 "Leo" :op2 "Angelos")) :op2 (p4 / person :name (n2 / name :op1 "Kristen" :op2 "Brancaccio"))) :arg2 (r / right-05 :arg1 (p5 / person) :arg2 (d2 / direct-02 :arg1-of (d3 / direct-02)))) :snt2 (p6 / possible-01 :arg1 (e / end-up-03 :arg1 (p7 / person :name (n3 / name :op1 "Damon")) :arg2 (g / give-01 :arg0 (p8 / person) :arg1 (s / something :arg1-of (w2 / want-01 :polarity - :arg0 (w3 / we))) :arg2 (w4 / we)))))
(s / sell-01 :arg0 (c / company) :arg1 (s2 / stock :mod (n / new)) :arg3 (m / monetary-quantity :quant 125 :unit (d / dollar :mod (r / renminbi))) :arg0-of (m2 / mark-01 :arg1 (d2 / discount :arg1-of (2 / 2.4-percent :arg2 (t / thing :arg2-of (p / price-01 :arg1-of (c2 / close-01)))))))
(s / say-01 :arg0 (p / person :quant 2 :arg1-of (i / include-91 :arg2 (p2 / person :quant 10))) :arg1 (s2 / say-01 :arg0 (p3 / person) :arg1 (u / upset-01 :arg1 (p4 / person)) :condition (n / nominate-01 :arg1 (p5 / person))))
FAILED_TO_PARSE#Two concepts in a row.
(s / step :ord (o / ordinal-entity :value 1) :arg1-of (p / purchase-01 :arg0 (i / instrument :mod (y / young :degree (e / extreme)) :mod (y2 / young :degree (m / most)) :mod (y3 / young :degree (m2 / most)))))
(u / use-01 :mode (i / imperative) :arg0 (y / you) :arg1 (m / method :mod (v / various)) :arg2 (m2 / method :mod (v2 / various) :instrument-of (u2 / use-01 :arg1 (s / size :poss (m3 / monkey)))))
(c / cause-01 :arg0 (a / absence :domain (a2 / absence :poss (p / portrayals :arg1-of (r / resemble-01)))) :arg1 (d / desperate :domain (a3 / absence :domain (a4 / absence :arg1-of (r2 / resemble-01)) :arg1-of (m / mean-01 :arg2 (n / need-01 :arg0 (m2 / man) :arg1 (o / open-up-03 :arg0 (m3 / man) :arg1 (m4 / male :mod (y / young)) :time (a5 / after :op1 (n2 / now) :quant (t / temporal-quantity :quant (N / N-A) :unit (y2 / year)))))) :mod (p2 / particular))))
(r / resemble-01 :arg1 (r2 / resemble-01 :polarity - :arg1 (o / or :op1 (c / candidate :mod (d / democracy) :arg1-of (s / single-02)) :op2 (c2 / candidate :mod (p / potential))) :arg2 (p2 / possible-01 :polarity - :arg1 (a / accept-01 :arg1 (c3 / candidate) :prep-as (p3 / person :arg0-of (v / vote-01 :arg1 (p4 / primary) :mod (p5 / primary)))))) :arg2 (m / month :mod (l / last)))
(a / and :op1 (a2 / and :op1 (s / small :degree (m / more) :domain (o / organization :name (n / name :op1 "Hewlett" :op2 "Packard" :op3 "Enterprise"))) :op2 (f / focus-01 :arg0 (o2 / organization) :degree (m2 / more) :compared-to (h / hp :arg1 (o3 / organization) :time (t / today)))) :op2 (a3 / and :op1 (h2 / have-03 :arg0 (w / we) :arg1 (b / business :arg1-of (b2 / broad-02) :consist-of (b3 / business) :arg0-of (h3 / help-01 :arg1 (r / reserve-01 :arg1 (e / enterprise) :arg2 (s2 / style :mod (b4 / business) :mod (b5 / business)))))) :op2 (s3 / say-01 :arg0 (p / person) :arg1 (p2 / person :name (n2 / name :op1 "Whitman")))))
(b / bail-out-02 :arg1 (p / person :name (n / name :op1 "Maksimovic")) :arg2 (c / condition :topic (s / surrender-01 :arg0 (p2 / person))) :arg1-of (c2 / cause-01 :arg0 (a / and :op1 (s2 / surrender-01 :arg0 (p3 / person) :arg1 (p4 / passports :poss (p5 / person) :mod (c3 / country :name (n2 / name :op1 "N-A")))) :op2 (r / report-01 :arg0 (p6 / person) :arg1 (a2 / and :op1 (t / thing :arg1-of (b2 / base-02 :arg2 (d / day))) :op2 (t2 / thing :arg1-of (b3 / base-02 :arg2 (c4 / curfew :mod (6 / 6pm-6am)))))))))
(s / say-01 :arg0 (p / police) :arg1 (p2 / phoned :arg0 (l / lamb) :arg1 (p3 / person :arg0-of (h / have-rel-role-91 :arg2 (r / relative))) :time (p4 / point :mod (s2 / some)) :purpose (t / tell-01 :arg0 (p5 / person) :arg1 (g / go-02 :polarity - :arg0 (p6 / person) :arg4 (j / jail)) :arg2 (p7 / person))))
(r / read-01 :arg0 (c / country :name (n / name :op1 "US")) :arg1 (a / and :op1 (a2 / assist-01 :arg0 (c2 / country) :arg1 (c3 / country :name (n2 / name :op1 "Syria"))) :op2 (r2 / read-01 :arg0 (c4 / country) :arg1 (a3 / article :mod (o / organization :name (n3 / name :op1 "Kommersant"))) :arg3 (p / presence :mod (m / military) :poss (c5 / country) :location (c6 / city :name (n4 / name :op1 "Washington") :arg1-of (w / worry-01 :arg0 (c7 / country)))))) :degree (m2 / more))
(s / say-01 :arg0 (c / comment-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (s2 / state :mod (c2 / country :name (n / name :op1 "Scotland"))) :arg2 (s3 / secretary :mod (s4 / state))))) :arg1 (l / laid :arg0 (p2 / plan-01 :arg0 (g / government-organization :arg0-of (g2 / govern-01)) :arg1-of (l2 / long-03)) :arg1 (f / foundation) :purpose (e / economy :arg1-of (s5 / strong-02 :degree (m / more)))))
(c / contrast-01 :arg1 (r / report-01 :polarity - :arg0 (s / service :mod (n / news) :poss (a / agency :mod (n2 / news))) :arg1 (d / detail-01 :polarity - :arg0 (s2 / service))) :arg2 (s3 / say-01 :arg0 (s4 / service) :arg1 (b / ban-01 :arg1 (p / person :arg0-of (l / lead-02 :arg1 (c2 / company))) :location (a2 / abroad))))
(a / and :op1 (p / possible-01 :polarity - :arg1 (g / get-05 :arg1 (a2 / and :op1 (p2 / person :arg0-of (h / have-org-role-91 :arg2 (d / deputy))) :op2 (p3 / person :arg0-of (o / observe-01)) :op3 (p4 / person :arg0-of (o2 / observe-01))) :arg2 (i / inside) :duration (t / time :arg1-of (l / long-03)))) :op2 (s / show-01 :arg0 (b / blog :arg1-of (p5 / public-02) :arg1-of (r / result-01 :arg2 (s2 / storming :arg1 (d2 / door) :arg2 (b2 / building :mod (d3 / district))))) :medium (t2 / television)))
(p / possible-01 :arg1 (h / helpful-04 :arg0 (s / surgery-01 :arg2 (l / lose-02 :arg1 (w / weight)))))
(c / contrast-01 :arg1 (d / do-02 :arg0 (p / person :name (n / name :op1 "Biden")) :arg1 (t / thing :quant 3 :arg1-of (i / include-91 :arg2 (p2 / person :arg0-of (m / mine-01))))) :arg2 (l / lead-02 :arg0 (p3 / person :name (n2 / name :op1 "Clinton"))))
(a / announce-01 :arg0 (h / he) :arg1 (' / '' :arg1 (m / meet-03 :arg0 (c / country :name (n / name :op1 "Syria")))))
(s / swathed :arg1 (w / woman :arg0-of (e / end-up-03 :arg1 (p / person :name (n / name :op1 "Sam" :op2 "Wood")) :arg2 (o / on :op1 (b / bachelor)))) :manner (u / utmost))
(a / and :op1 (d / design-01 :polarity - :arg0 (c / city) :arg1 (t / thing :arg1-of (d2 / design-01 :arg0 (c2 / city)))) :op2 (e / estimate-01 :arg0 (c3 / city) :arg1 (t2 / thing :arg1-of (f / flaw-01 :arg1-of (p / possible-01 :polarity -))) :arg2 (t3 / thing :arg1-of (s / single-02) :arg1-of (s2 / single-02) :mod (e2 / even))))
(d / discuss-01 :arg1 (i / issue-02 :arg1-of (a / associate-01 :arg2 (w / work-01 :arg1 (h / house :mod (t / trade-01) :location (l / location :name (n / name :op1 "Tyumen")))))))
(a / announce-01 :arg1 (s / sentence-01 :arg2 (p / person :name (n / name :op1 "Drinkman"))) :time (d / date-entity :month 1 :day 15))
(s / say-01 :arg1 (t / thank-01 :arg0 (i / i) :arg1 (y / you)) :arg2 (p / person :name (n / name :op1 "Evangelos" :op2 "Meimarakis")))
(a / and :op1 (p / play-01 :arg0 (o / organization :name (n / name :op1 "Dynamo")) :mod (w / well)) :op2 (h / have-03 :arg0 (e / everyone) :arg1 (g / game :arg1-of (b / bad-07))))
(p / possible-01 :arg1 (g / give-01 :arg0 (i / i) :arg1 (e / example :arg1-of (a / associate-01 :arg2 (p2 / person :arg0-of (f / farm-01)))) :arg2 (y / you)))
(k / know-01 :arg0 (i / i) :arg1 (a / and :op1 (f / frustrating :degree (v / very) :domain (i2 / it)) :op2 (s / sad-02 :arg1 (p / person :quant (l / lot)) :degree (v2 / very)) :arg1-of (c / cause-01 :arg0 (o / or :op1 (a2 / anger-01 :arg1 (p2 / person) :degree (v3 / very)) :op2 (s2 / sad-02 :arg1 (p3 / person) :degree (v4 / very))))))
(s / say-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (p2 / publication :name (n / name :op1 "N-A") :poss (p3 / person :arg0-of (h2 / have-rel-role-91 :arg1 (p4 / person) :arg2 (p5 / parent)))) :arg0-of (h3 / have-rel-role-91 :arg1 (p6 / person) :arg2 (p7 / parent)))) :arg1 (p8 / person :name (n2 / name :op1 "Methel" :op2 "Johnson") :arg0-of (h4 / have-org-role-91 :arg1 (g / government-organization :name (n3 / name :op1 "N-A")) :arg2 (e / empress))) :time (b / before :op1 (p9 / possible-01 :arg1 (a / apprehend-01 :arg1 (h5 / he))) :time (b2 / before :op1 (p10 / possible-01 :arg1 (a2 / apprehend-01 :arg1 (h6 / he))))) :arg1-of (c / cause-01 :arg0 (p11 / possible-01 :arg1 (a3 / apprehend-01 :arg1 (h7 / he)))))
(c / call-03 :arg0 (s / speak-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (o / organization :name (n / name :op1 "Parliamentary" :op2 "Assembly")) :arg2 (g / governor :mod (v / vice))))) :arg1 (c2 / create-01 :arg0 (p2 / person) :arg1 (g2 / group :mod (c3 / contact-01 :mod (i / interparliamentary)) :location (c4 / country :name (n2 / name :op1 "Ukraine")))) :arg2 (p3 / person))
(c / cause-01 :arg0 (h / hear-01 :arg0 (p / person :arg0-of (r / represent-01 :arg1 (o / organization :name (n / name :op1 "CPRF"))) :arg0-of (a / accuse-01 :arg1 (c2 / commission :mod (e / elect-01)) :arg2 (c3 / commission :mod (e2 / elect-01))) :arg0-of (e3 / elect-01))) :arg1 (c4 / complain-01 :arg0 (p2 / person :arg0-of (r2 / represent-01 :arg1 (o2 / organization)) :arg0-of (e4 / elect-01)) :arg2 (e5 / elect-01)) :mod (u / usual))
(e / enable-01 :arg0 (a / activity-06 :mod (m / mold) :mod (t / this)) :arg1 (c / compete-02 :arg0 (a2 / activity-06) :degree (m2 / more)) :arg2 (a3 / and :op1 (c2 / compete-02 :arg0 (a4 / and :op1 (p / person :name (n / name :op1 "Meg" :op2 "Whitman") :arg0-of (h / have-org-role-91 :arg1 (o / organization) :arg2 (c3 / chairman))) :op2 (p2 / person :arg0-of (h2 / have-org-role-91 :arg1 (o2 / organization) :arg2 (e2 / executive))) :op3 (p3 / person :arg0-of (h3 / have-org-role-91 :arg1 (o3 / organization) :arg2 (e3 / executive))) :op4 (p4 / person :arg0-of (h4 / have-org-role-91 :arg1 (o4 / organization) :arg2 (e4 / executive)) :arg0-of (h5 / have-org-role-91 :arg1 (u / unit) :arg2 (e5 / executive)) :arg0-of (h6 / have-org-role-91 :arg1 (u2 / unit) :arg2 (e6 / executive)) :arg0-of (h7 / have-org-role-91 :arg1 (u3 / unit) :arg2 (e7 / executive)) :arg0-of (h8 / have-org-role-91 :arg1 (u4 / unit) :arg2 (e8 / executive)) :arg0-of (h9 / have-org-role-91 :arg1 (u5 / unit) :arg2 (e9 / executive)) :arg0-of (h10 / have-org-role-91 :arg1 (u6 / unit) :arg2 (e10 / executive)) :arg0-of (h11 / have-org-role-91 :arg1 (u7 / unit) :arg2 (e11 / executive)) :arg0-of (h12 / have-org-role-91 :arg1 (u8 / unit) :arg2 (e12 / executive)))))))
(s / say-01 :arg0 (p / person :name (n / name :op1 "Mrs" :op2 "Laury")) :arg1 (h / have-03 :arg0 (w / we) :arg1 (m / majority :arg1-of (i / include-91 :arg2 (m2 / man :arg0-of (w2 / work-01 :location (s2 / store :poss (w3 / we))))) :quant (m3 / majority)) :mod (s3 / still)))
(a / and :op1 (s / stay-01 :arg1 (p / person :arg0-of (h / have-org-role-91 :arg2 (p2 / president))) :condition (w / want-01 :arg0 (p3 / person) :arg1 (s2 / stay-01 :arg1 (p4 / person)))) :op2 (h2 / have-condition-91 :arg1 (o / obligate-01 :arg2 (l / leave-11 :arg0 (h3 / he) :time (i / immediate))) :arg2 (t / true :domain (o2 / opposite))))
(i / introduce-02 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (o / organization :name (n / name :op1 "Duma")) :arg2 (d / deputy))) :arg1 (b / bill :arg0-of (b2 / bill :arg1 (h2 / hostels :location (b3 / building :mod (r / residential))))))
(r / report-01 :arg0 (m / media) :arg1 (c / consider-02 :arg0 (g / government-organization :name (n / name :op1 "Cabinet") :poss (m2 / minister)) :arg1 (o / option :quant 2 :purpose (b / balancing :arg1 (b2 / budget :poss (s / state))))) :time (e / early :degree (m3 / more) :time (e2 / early :degree (m4 / more))))
(a / and :op1 (a2 / aim-01 :arg0 (h / he) :arg1 (h2 / have :arg0 (h3 / he) :arg1 (d / department :mod (i / integrity) :poss (o / organization :name (n / name :op1 "Racing" :op2 "Victoria"))))) :op2 (t / tighten-01 :arg0 (h4 / he) :arg1 (c / campaign-01 :arg0 (d2 / department) :arg1 (o2 / oppose-01 :arg0 (d3 / department) :arg1 (h5 / he) :time (l / late)) :arg1-of (p / personal-02)) :arg1-of (c2 / cause-01 :arg0 (t2 / treat-03 :arg1 (p2 / person :name (n2 / name :op1 "Lady" :op2 "Tatai")) :time (d4 / day :mod (r / race))) :arg1-of (c3 / cause-01 :arg0 (t3 / treat-03 :arg1 (s / straw :mod (f / final)) :arg2 (w / wednesday))))))
(c / contrast-01 :arg2 (s / surprises :polarity - :time (e / end-01 :arg1 (g / girl :arg1-of (' / ')))))
(c / cup)
(c / contrast-01 :arg1 (p / plan-01 :arg0 (o / organization :name (n / name :op1 "Kingfisher")) :arg1 (o2 / open-01 :arg0 (o3 / organization) :arg1 (s / store :quant 200 :mod (m / more) :arg1-of (a / aim-02 :arg2 (t / tradesmen))))) :arg2 (c2 / close-01 :arg0 (o4 / organization) :arg1 (o5 / outlets :quant 60 :mod (o6 / organization :name (n2 / name :op1 "B&Q")))))
(o / or :op2 (m / make-02 :mode (i / interrogative) :arg0 (i2 / it) :arg1 (e / exciting :domain (i3 / it))))
(o / or :op2 (m / make-02 :mode (i / interrogative) :arg0 (i2 / it) :arg1 (e / exciting :domain (i3 / it))))
(s / say-01 :arg1 (w / want-01 :arg0 (p / person :mod (c / continent :name (n / name :op1 "Europe")) :mod (c2 / country :name (n2 / name :op1 "N-A"))) :arg1 (h / help-01 :arg0 (p2 / person) :arg2 (w2 / we))) :arg2 (p3 / person :mod (c3 / country :name (n3 / name :op1 "N-A"))))
(s / say-01 :arg0 (h / he) :arg1 (m / matter-01 :arg1 (a / albums :mod (' / '')) :mod (s2 / still)))
(c / contrast-01 :arg2 (c2 / clear-06 :arg0 (a / appeal-02 :arg0 (a2 / and :op1 (o / organization :name (n / name :op1 "Duma")) :op2 (p / person :name (n2 / name :op1 "Irina" :op2 "Maslova"))) :arg1 (a3 / appeal-02 :arg0 (p2 / person :mod (c3 / communism) :mod (c4 / country :name (n3 / name :op1 "Russia"))) :arg2 (l / law)))))
(c / contrast-01 :arg1 (r / react-01 :polarity - :arg0 (w / worm :name (n / name :op1 (n2 / nematode))) :arg1 (u / ultrasound :arg1 (w2 / worm)) :mod (u2 / usual)) :arg2 (f / find-02 :arg0 (p / person :name (n3 / name :op1 "Chalasani")) :arg1 (d / do-02 :arg0 (p2 / person) :arg1 (t / thing :time-of (s / surround-01 :arg1 (p3 / person) :arg2 (b / bubbles :mod (m / microscopic)) :manner (f2 / fluid))))))
(k / know-01 :arg0 (i / i) :arg1 (t / thing :manner-of (a / and :op1 (p / possible-01 :arg1 (b / be-02 :arg1 (s / street :name (n / name :op1 (p2 / predatory) :op2 (s2 / street) :op3 (s3 / street)))) :op2 (a2 / amr-unknown :manner-of (e / eu-sceptic :arg1 (b2 / biography :mod (p3 / press) :mod (o / oligarchs))))))) :arg1-of (c / cause-01 :arg0 (b3 / be-temporally-at-91 :arg1 (r / referendum :quant 1975 :mod (t2 / tony) :arg0-of (e2 / endorse-01 :arg1 (e3 / enter-01 :quant 1973 :arg0 (w / we)))) :arg2 (e4 / enter-01 :quant 1973 :arg0 (w2 / we)))))
(a / and :op1 (t / tied :li 1 :arg1 (p / person :name (n / name :op1 "Igor" :op2 "Strelkov") :arg0-of (h / have-org-role-91 :arg1 (o / organization :name (n2 / name :op1 "Defence")) :arg2 (m / minister) :time (f / former)) :arg0-of (h2 / have-org-role-91 :arg1 (o2 / organization) :arg2 (m2 / minister) :time (f2 / former)) :arg0-of (h3 / have-org-role-91 :arg1 (o3 / organization) :arg2 (m3 / minister) :time (f3 / former)) :arg0-of (h4 / have-org-role-91 :arg1 (o4 / organization) :arg2 (m4 / minister) :time (f4 / former)) :arg0-of (h5 / have-org-role-91 :arg1 (o5 / organization) :arg2 (m5 / minister) :time (f5 / former)) :arg0-of (h6 / have-org-role-91 :arg1 (o6 / organization) :arg2 (m6 / minister) :time (f6 / former)) :arg0-of (h7 / have-org-role-91 :arg1 (o7 / organization) :arg2 (m7 / minister) :time (f7 / former)) :arg0-of (h8 / have-org-role-91 :arg1 (o8 / organization) :arg2 (m8 / minister) :time (f8 / former)) :arg0-of (h9 / have-org-role-91 :arg1 (o9 / organization) :arg2 (m9 / minister) :time (f9 / former)))) :op2 (n3 / note-01 :arg0 (h10 / he)))
(m / multi-sentence :snt1 (c / contrast-01 :arg2 (d / difficult :domain (i / imagine-01 :arg0 (i2 / i) :arg1 (i3 / introduce-02 :arg1 (s / system :mod (t / this) :arg1-of (r / relate-01 :arg2 (a / and :op1 (p / person :arg1-of (c2 / convict-01)) :op2 (i4 / individual :arg1-of (c3 / convict-01))))))))) :snt2 (t2 / take-10 :arg0 (c4 / conduct-01 :arg1 (e / examine-01 :mod (s2 / such))) :arg1 (m2 / month :mod (e2 / entire))))
(e / expect-01 :arg1 (r / reveal-01 :arg0 (p / person :mod (c / country :name (n / name :op1 "N-A"))) :arg1 (d / detail-01 :arg0 (p2 / person) :arg1 (s / strategy :mod (d2 / defend-01) :poss (p3 / person)) :degree (m / more) :time (d3 / date-entity :month 9 :day 29 :time-of (a / and :op1 (f / food) :op2 (l / liquor) :op3 (r2 / range)))) :time (d4 / day :time-of (a2 / and :op1 (f2 / food) :op2 (l2 / liquor) :op3 (r3 / range)))))
(s / suggest-01 :arg0 (l / location :name (n / name :op1 "Earnest")) :arg1 (j / join-01 :arg0 (c / coalition :mod (i / international)) :arg1 (c2 / coalition :mod (i2 / international) :arg0-of (c3 / conduct-01 :arg1 (o / operation :prep-against (o2 / organization :name (n2 / name :op1 "Islamic" :op2 "State")))))) :manner (w / way :mod (a / alternative)))
(a / and :op1 (b / build-01 :arg1 (i / it) :location (1 / 1970s :prep-as (c / centre :mod (i2 / industry :mod (c2 / chemical))))) :op2 (h / have-03 :arg0 (i3 / infrastructure :mod (w / well-developed)) :arg1 (i4 / infrastructure :mod (w2 / well-developed) :arg0-of (s / support-01))))
(s / say-01 :arg1 (t / thank-01 :arg0 (i / i) :arg1 (y / you) :arg2 (i2 / interview-01 :arg1 (y2 / you))) :arg2 (p / person :name (n / name :op1 "N-A")))
(y / young :degree (e / enough) :domain (g / get-01 :arg0 (p / person :name (n / name :op1 "Jack")) :arg1 (o / over :op1 (t / that))))
(a / and :op2 (h / hold :arg1 (s / some) :arg2 (i / implosion)))
(h / hospitalised :arg1 (p / person :name (n / name :op1 "Gennady" :op2 "Orlov")) :location (c / country :name (n2 / name :op1 "Spain")))
(a / and :op1 (c / corrected :arg1 (p / person :arg0-of (h / head-01 :arg1 (g / government-organization :arg0-of (a2 / administrate-01))))) :op2 (p2 / permit-01 :arg1 (a3 / attend-01 :arg0 (p3 / party) :arg1 (a4 / and :op1 (m / meet-03 :quant (a5 / all)) :op2 (p4 / person :name (n / name :op1 "Natalia" :op2 "Andryushina") :arg0-of (h2 / have-org-role-91 :arg1 (c2 / commission :mod (e / elect-01) :mod (c3 / city)) :arg2 (m2 / member)))))) :time (t / then))
(p / phone-number-entity :value (N / N-A))
(s / say-01 :arg0 (s2 / study :mod (n / new)) :arg1 (p / possible-01 :arg1 (a / and :op1 (b / benefit-01 :arg0 (s3 / surgery-01 :arg1 (p2 / person :arg0-of (l / lose-02 :arg1 (s4 / surgery-01 :arg2 (l2 / lose-02 :arg1 (w / weight)))))) :arg1 (t / temporal-quantity :quant (N / N-A) :unit (y / year) :mod (a2 / at-least))) :op2 (p3 / possible-01 :arg1 (a3 / at-least :op1 (t2 / temporal-quantity :quant (N2 / N-A) :unit (y2 / year)))))))
(m / multi-sentence :snt2 (w / write-01 :arg0 (p / person :arg0-of (r / research-01))) :snt2 (w2 / write-01 :arg0 (p2 / person :arg0-of (r2 / research-01))))
(c / contrast-01 :arg1 (g / game :arg1-of (s / special-02) :domain (i / it)) :arg2 (i2 / important :polarity - :domain (t / that) :mod (a / all)))
(a / and :op2 (p / provide-01 :arg0 (n / network :mod (s / social)) :arg1 (s2 / support-01 :arg0 (n2 / network) :arg1 (o / organisations :arg1 (c / content :arg0-of (v / violate-01 :arg1 (s3 / standard :mod (c2 / community) :poss (c3 / company :name (n3 / name :op1 "Facebook"))))))) :mod (f / finance)))
(b / bomb :mod (c / cluster))
(b / bomb :mod (c / cluster))
(c / cause-01 :arg0 (s / study-01 :arg0 (p / person :arg0-of (s2 / study-01))) :arg1 (l / likely-01 :arg1 (d / die-01 :arg1 (p2 / person :arg0-of (h / have-03 :arg1 (s3 / surgery-01))) :extent (o / over :op1 (p3 / percentage-entity :value (N / N-A))) :arg1-of (c2 / compare-01 :arg2 (g / group :arg0-of (t / try-01 :arg1 (m / method :mod (c3 / conventional) :mod (m2 / more))))))) :medium (s4 / study-01 :mod (s5 / swedish)))
(c / contrast-01 :arg1 (l / lead-01 :arg0 (h / heart :part-of (p / person :name (n / name :op1 "Paterson"))) :time (a / and :op1 (d / dismiss-01 :arg1 (p2 / person)) :op2 (g / go-02 :arg0 (p3 / person) :arg4 (l2 / lose-02 :arg0 (p4 / person) :arg1 (3 / 3-2))))) :arg2 (t / tense :domain (c2 / card :mod (r / red) :poss (d2 / defender) :ord (o / ordinal-entity :value 3)) :time (l3 / late :degree (m / more)) :purpose (r2 / rescinded :arg1 (c3 / card))))
(s / sentence-01 :arg1 (p / person :name (n / name :op1 "Alistair" :op2 "Carmichael")) :arg2 (t / thing :arg2-of (s2 / sentence-01)) :time (u / until :op1 (e / expel-01 :arg0 (p2 / person) :arg1 (r / report-01 :arg0 (b / background :mod (w / work-01 :mod (s3 / social)))))))
(a / and :op1 (k / know-02 :arg1 (h / he) :arg2 (f / film :name (n / name :op1 (w / walk-01) :op2 (' / '') :op3 (s / space) :op4 (s2 / space) :op5 ('2 / '') :op6 ('3 / '') :op7 ('4 / '')))) :op2 ('5 / '' :arg0 (s3 / series :name (n2 / name :op1 (t / thaw) :op2 (s4 / series) :op3 (s5 / series) :op4 (s6 / series) :op5 (s7 / series) :op6 (s8 / series) :op7 (s9 / series) :op6 (s10 / series) :op7 (s11 / series) :op8 (s12 / series) :op8 (s13 / series) :op8 (s14 / series) :op8 (s15 / series) :op8 (s16 / series) :op9 (f2 / fartsa)))))
(a / and :op1 (w / wait-01 :arg1 (g / government-organization :name (n / name :op1 "Fed")) :time (s / since :op1 (e / end-01 :arg1 (r / recession-02 :mod (l / last)))) :time (s2 / since :op1 (e2 / end-01 :arg1 (r2 / recession-02 :mod (l2 / last))))) :op2 (a2 / and :op1 (l3 / last-01 :arg1 (r3 / record) :arg2 (t / temporal-quantity :quant (N / N-A) :unit (m / month))) :op2 (c / count-01 :arg1 (r4 / record))))
(p / provide-01 :arg0 (c / city :name (n / name :op1 "Tehran")) :arg1 (e / equipment :mod (m / military)) :arg2 (w / we))
(b / be-located-at-91 :arg1 (i / it) :arg2 (l / location :name (n / name :op1 "Zagreb")) :ord (o / ordinal-entity :value 10 :range (y / year :mod (t / this))))
(b / begin-01 :arg0 (a / and :op1 (t / thing :arg1-of (r / report-01) :quant (s / some)) :op2 (t2 / train :arg0-of (c / contain-01 :arg1 (g / gold) :source (l / location :name (n / name :op1 "Third" :op2 "Reich"))))) :arg1 (a2 / and :op1 (c2 / cut-01 :arg0 (y / you) :arg1 (t3 / trees :mod (o / over :op1 (t4 / tunnel :mod (u / underground))))) :op2 (a3 / according :arg1 (t5 / trees))))
(b / begin-01 :arg0 (a / and :op1 (t / thing :arg1-of (r / report-01) :quant (s / some)) :op2 (t2 / train :arg0-of (c / contain-01 :arg1 (g / gold) :source (l / location :name (n / name :op1 "Third" :op2 "Reich"))))) :arg1 (a2 / and :op1 (c2 / cut-01 :arg0 (y / you) :arg1 (t3 / trees :mod (o / over :op1 (t4 / tunnel :mod (u / underground))))) :op2 (a3 / according :arg1 (t5 / trees))))
(f / fall-01 :arg1 (l / level :name (n / name :op1 (h / hemoglobin)) :arg1-of (a / average-03)) :arg3 (a2 / about :op1 (p / percentage-entity :value (N / N-A))) :arg4 (a3 / about :op1 (p2 / percentage-entity :value (N2 / N-A))) :time (a4 / after :op1 (s / surgery-01)))
(s / say-01 :arg1 (b / bomb :mod (r / refugee) :domain (c / crisis :mod (r2 / refugee)) :arg1-of (c2 / cause-01 :arg0 (f / force-01 :arg1 (w / we) :arg2 (d / deal-01 :arg0 (w2 / we) :arg2 (e / elect-01 :time (a / after :op1 (e2 / elect-01))))))) :arg2 (p / person :name (n / name :op1 "Evangelos" :op2 "Meimarakis")))
(m / multi-sentence :snt1 (t / turn-down-05 :arg0 (i / it) :arg1 (a / and :op1 (s / spend-02 :arg0 (t2 / they) :arg1 (n / night)) :op2 (d / difficult :domain (g / get-01 :arg1 (n2 / night))))) :snt2 (a2 / and :op1 (d2 / difficult :domain (g2 / get-01 :arg1 (h / hotel))) :op2 (s2 / sleep-01 :arg0 (t3 / they) :location (s3 / station :mod (t4 / train)))))
(a / and :op1 (g / get-02 :arg0 (i / i) :arg1 (s / support-01 :arg1 (f / family :arg1-of (h / have-org-role-91 :arg0 (i2 / i) :arg2 (m / member))))) :op2 (p / possible-01 :arg1 (w / walk-01 :arg0 (i3 / i) :direction (a2 / away))))
(t / think-01 :polarity - :arg0 (i / i) :arg1 (r / revise-01 :arg0 (t2 / that) :arg1 (c / company :name (n / name :op1 "BBC")) :degree (a / at-all)))
(s / see-01 :polarity - :arg0 (p / person :arg0-of (c / compete-02)) :arg1 (p2 / person :arg0-of (c2 / compete-02) :mod (a / any) :arg0-of (c3 / complete-01 :arg1 (s2 / stage :mod (a2 / all) :part-of (o / obstacle :poss (p3 / person))))) :time (e / ever) :arg1-of (c4 / cause-01 :arg0 (s3 / show :arg0 (c5 / compete-01) :arg1 (s4 / season :ord (o2 / ordinal-entity :value 7) :poss (c6 / compete-01)) :mod (j / just))))
(c / contrast-01 :arg1 (w / wonderful-03 :arg1 (p / person :arg0-of (c2 / care-03 :arg1 (r / refugee :quant (s / several) :mod (t / thousand))) :arg0-of (t2 / take-01 :arg1 (c3 / care-03 :arg1 (r2 / refugee :quant (s2 / several) :mod (t3 / thousand)))))) :arg2 (o / obligate-01 :arg1 (y / you) :arg2 (t4 / think-01 :arg0 (y2 / you) :arg1 (t5 / thing :arg2-of (s3 / solve-01) :arg1-of (l / long-03))) :arg1-of (m / mean-01 :arg2 (b / bring-01 :arg0 (y3 / you) :arg1 (a / and :op1 (p2 / peace :mod (g / genuine)) :op2 (d / develop-02 :manner (g2 / genuine))) :arg2 (a2 / and :op1 (d2 / develop-02 :manner (g3 / genuine)) :op2 (d3 / develop-02 :manner (g4 / genuine))) :manner (e / educate-01)) :op3 (e2 / emphasize-01 :arg0 (h / he))) :time (t6 / time :arg1-of (m2 / mean-01))))
(s / say-01 :arg0 (h / he) :arg1 (h2 / happy :domain (c / couple :mod (j / just))))
(i / important :domain (u / undermine-01 :polarity - :arg1 (g / groundwork) :time (c / current)) :arg1-of (c2 / cause-01 :arg0 (c3 / continue-01 :arg1 (d / develop-02 :arg1 (p / possibilities :time (f / future))))))
(r / reverse-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (g / government-organization :name (n / name :op1 "Fed")) :arg2 (o / official))) :arg1 (c / cut-02 :mod (t / that)) :time (l / late :degree (m / more)))
(s / say-01 :arg0 (h / he) :arg1 (g / get-22 :arg0 (i / i) :arg1 (a / accept-01 :arg0 (i2 / i) :arg1 (r / responsible-03 :arg0 (i3 / i) :arg1 (t / that) :degree (f / full)))))
(a / age-01 :arg1 (i / i) :arg2 (t / temporal-quantity :quant (N / N-A) :unit (y / year)) :time (s / start-01 :arg0 (i2 / i) :arg1 (a2 / and :op1 (t2 / track) :op2 (f / field)) :time (f2 / first)))
FAILED_TO_PARSE#Two concepts in a row.
(a / and :op1 (f / feel-01 :arg0 (p / person :arg0-of (h / have-rel-role-91 :arg1 (y / you) :arg2 (h2 / housemates))) :arg1 (o / oblige-02 :arg1 (p2 / person) :arg2 (s / scrap-01 :arg0 (p3 / person)))) :op2 (p4 / possible-01 :arg1 (e / end-up-03 :arg1 (p5 / person) :arg2 (a2 / associating :arg0 (p6 / person) :arg1 (f2 / face) :arg2 (s2 / surprise :mod (t / tasty))))))
(w / worth :domain (e / ensure-01 :arg1 (o / or :op1 (c / charge-05 :arg1 (p / phone :poss (y / you))) :op2 (n / near-02 :arg2 (c2 / charger)))) :arg0-of (c3 / cause-01 :arg1 (r / run-out-05 :polarity - :arg1 (i / it) :arg2 (n2 / nail))))
(r / report-01 :arg0 (p / publication :name (n / name :op1 "Interfax")) :arg1 (e / express-01 :arg0 (h / he) :arg1 (t / thing :arg1-of (o / opine-01) :mod (t2 / this)) :arg2 (j / journalist) :time (s / session :mod (a / autumn) :poss (o2 / organization :name (n2 / name :op1 "OSCE" :op2 "Parliamentary" :op3 "Assembly")))))
(l / lose-02 :arg0 (p / person :name (n / name :op1 "Zhirinovsky")) :arg1 (r / region :mod (' / '')))
(l / launch-01 :arg0 (c / company :name (n / name :op1 "Google")) :arg1 (c2 / campaign-01 :arg0 (c3 / company) :arg1 (r / raise-02 :arg0 (c4 / company) :arg1 (r2 / rate-entity-91 :arg1 (m / monetary-quantity :quant 11 :unit (d / dollar)) :arg2 (v / volume-quantity :quant (N / N-A) :unit (g / gallon))) :arg3 (r3 / refugee))))
(a / and :op1 (t / throw-01 :arg0 (p / person :arg0-of (u / use-01)) :arg1 (s / stone) :location (p2 / police)) :op2 (t2 / try-01 :arg0 (p3 / person) :arg1 (r / remove-01 :arg0 (p4 / person) :arg1 (f / fence :arg1-of (p5 / place-01 :arg2 (b / border-01))))))
(p / popular-02 :arg1 (a / accommodation :arg1-of (r / rented)) :mod (a2 / also) :time (c / championship :mod (f / football)) :mod (a3 / also))
(m / multi-sentence :snt1 (a / approve-01 :arg0 (g / government-organization :arg0-of (g2 / govern-01)) :arg1 (l / loan-01 :arg2 (g3 / government-organization :arg0-of (g4 / govern-01))) :time (e / early :degree (m2 / more))) :snt2 (r / report-01 :arg0 (p / person :mod (c / country :name (n / name :op1 "Ukraine"))) :li 100))
(p / person :domain (p2 / person :mod (t / this)) :time (n / now))
(a / and :op1 (c / continue-01 :arg0 (p / person :arg0-of (v / vote-01 :arg1 (r / republican))) :arg1 (p2 / person :name (n / name :op1 "Trump") :mod (n2 / number :mod (l / large))) :location (n3 / number :mod (l2 / large))) :op2 (s / support-01 :arg0 (p3 / person) :arg1 (s2 / support-01 :arg1 (p4 / person :quant 23 :arg1-of (i / include-91 :arg2 (p5 / person :arg0-of (h / have-org-role-91 :arg1 (o / organization :name (n4 / name :op1 "CBS")) :arg3 (l3 / lead-02 :arg0 (p6 / person)))) :arg3 (p7 / percentage-entity :value (N / N-A))))) :location (p8 / poll-01 :mod (o2 / organization :name (n5 / name :op1 "CBS") :mod (l4 / last))) :time (b / before :op1 (d / debate-01 :time (m / month :mod (l5 / last))) :location (o3 / out :op1 (v2 / value-interval :op1 23 :op2 27)))))
(c / contrast-01 :arg2 (s / say-01 :arg0 (p / person :arg0-of (v / vote-01) :arg1-of (i / include-91 :arg2 (p2 / person :arg0-of (v2 / vote-01) :mod (p3 / primary)) :arg3 (p4 / percentage-entity :value 48))) :arg1 (s2 / say-01 :arg0 (p5 / person :arg0-of (v3 / vote-01) :mod (p6 / primary) :quant (p7 / percentage-entity :value 48)) :arg1 (s3 / say-01 :arg0 (p8 / person) :arg1 (a / and :op1 (s4 / say-01 :arg0 (p9 / person :arg0-of (v4 / vote-01) :mod (p10 / primary) :quant (p11 / percentage-entity :value 48)) :arg1 (p12 / person :name (n / name :op1 "Donald" :op2 "Trump"))) :op2 (s5 / say-01 :arg0 (p13 / person :arg0-of (v5 / vote-01) :mod (r / republican) :mod (f / few :degree (m / more))) :arg1 (p14 / person :name (n2 / name :op1 "Clinton"))))))))
(a / and :op1 (c / close-01 :arg0 (t / they) :arg1 (r / rate-entity-91 :arg1 (p / percentage-entity :value (N / N-A)) :arg2 (t2 / temporal-quantity :quant (N2 / N-A) :unit (y / year)))) :op2 (r2 / record :mod (r3 / record) :time (d / date-entity :month 6 :day 11) :location (b / below)))
(s / say-01 :arg1 (a / and :op1 (c / certain :polarity - :domain (i / impacts :arg1 (e / economy :poss (c2 / country :name (n / name :op1 "U.S.")))) :quant (l / lot)) :op2 (h / have-03 :polarity - :arg0 (t / they) :arg1 (d / data :mod (a2 / almost) :purpose (r / rely-01 :arg0 (d2 / data) :arg1 (d3 / develop-01 :location (c3 / country :name (n2 / name :op1 "China"))))))) :arg2 (p / person :name (n3 / name :op1 "Oliner")))
(f / fail-01 :arg1 (a / and :op1 (p / person :name (n / name :op1 "Karl" :op2 "Stefanovic")) :op2 (p2 / person :name (n2 / name :op1 "Lisa" :op2 "Wilkinson"))) :arg2 (c / city :name (n3 / name :op1 "Canberra")) :purpose (c2 / cover-01 :arg0 (a2 / and) :arg1 (r / roof :part-of (s / spill :mod (l / leadership :arg1-of (l2 / liberal-02))))) :purpose (g / generate-01 :arg0 (a3 / and) :arg1 (b / boost-01 :arg1 (t / thing :arg1-of (i / include-91 :arg2 (t2 / thing :arg1-of (b2 / boost-01 :time (t3 / today)))) :quant (m / much)))))
(c / confident-01 :arg1 (p / person :name (n / name :op1 "Assad")) :arg2 (r / recommend-01 :arg1 (s / stop-01 :arg0 (p2 / person) :arg1 (s2 / support-01 :arg0 (p3 / person) :arg1 (t / terrorist) :location (w / world-region :name (n2 / name :op1 "Middle" :op2 "East")))) :condition (w2 / want-01 :arg0 (c2 / continent :name (n3 / name :op1 "Europe")) :arg1 (a / address-02 :arg0 (c3 / country) :arg1 (p4 / problem :topic (r2 / refugee))))))
(r / recommend-01 :arg1 (m / make-01 :polarity - :arg0 (y / you) :arg1 (s / sentiment :arg0-of (k / keep-02 :arg1 (o / or :op1 (s2 / sleep-01 :arg0 (p / person)) :op2 (s3 / study-01 :arg0 (p2 / person)))))))
(l / locate-01 :arg1 (p / problem) :location (a / area :mod (m / metropolitan) :mod (l2 / large) :location-of (l3 / lagging :arg1 (d / develop-02 :arg1 (i / infrastructure) :manner (r / rapid)) :manner (r2 / rapid)) :location (a2 / area :mod (m2 / metropolitan) :mod (l4 / large) :location-of (b / blanketed :arg1 (c / city) :arg2 (a3 / and :op1 (w / waste :mod (p2 / pesticides)) :op2 (w2 / waste :mod (h / household)))) :op3 (f / fill-01 :arg1 (c2 / city) :arg2 (a4 / area :location-of (b2 / build-01 :arg1 (n / neighbourhoods :mod (n2 / new) :mod (r3 / residential))))))) :mod (e / especially))
(a / and :op1 (w / walk-01 :arg0 (p / person :name (n / name :op1 "Ellie")) :destination (a2 / along :op1 (r / road)) :manner (h / happy) :manner (h2 / happy)) :op2 (s / steals :arg0 (p2 / person :name (n2 / name :op1 "Tolya" :op2 "Ryzhikov") :mod (l / lazy)) :arg1 (m / match-03 :mod (m2 / magical))) :op3 (t / tell-01 :polarity - :arg0 (p3 / person :name (n3 / name :op1 "Malchish" :op2 "Kibalchish")) :arg1 (b / bourgeouins :arg0 (p4 / person) :arg1 (s2 / secret :mod (m3 / military) :poss (p5 / person))) :arg2 (c / curse) :mod (s3 / still)))
(m / mention-01 :arg0 (a / and :op1 (p / person :arg0-of (h / have-org-role-91 :arg1 (o / organization :name (n / name :op1 "Premier" :op2 "League")) :arg2 (l / location :name (n2 / name :op1 "Krasnodar")))) :op2 (p2 / person :arg0-of (a2 / act-01 :arg1 (c / coach :mod (h2 / head)))) :op3 (p3 / person :name (n3 / name :op1 "Vadim" :op2 "Skipchenko") :arg0-of (h3 / have-org-role-91 :arg2 (h4 / head-of-state))) :op4 (p4 / person :name (n4 / name :op1 "Vadim" :op2 "Skipchenko") :arg0-of (o2 / oppose-01 :arg1 (p5 / political-party)))) :arg1 (t / tactic :arg0-of (o3 / offense-02) :poss (t2 / team :arg0-of (o4 / oppose-01))))
(r / remember-01 :arg0 (i / i) :arg1 (a / and :op1 (t / team :mod (m / malicious) :domain (p / person :name (n / name :op1 "St" :op2 "George"))) :op2 (s / say-01 :arg0 (p2 / person :name (n2 / name :op1 "Wayne")) :arg1 (g / give-01 :polarity - :arg0 (p3 / person) :arg1 (h / homepage :poss (r2 / rat)) :arg2 (p4 / person))) :quant (l / lot)))
(d / develop-02 :arg1-of (c / comfortable-02 :polarity -) :mod (a / also) :mod (a2 / also))
(s / say-01 :arg1 (t / think-01 :arg0 (i / i) :arg1 (w / wait-01 :arg1 (w2 / we) :arg2 (s2 / serious-01 :arg1 (p / person) :arg2 (t2 / this)) :arg1-of (l / long-03 :degree (t3 / too)))) :arg2 (p2 / person :name (n / name :op1 "N-A")))
(s / seem-01 :arg1 (b / be-located-at-91 :arg1 (y / you) :arg2 (m / minority) :time (d / day :mod (t / this))) :condition (h / handy :arg1 (y2 / you) :prep-with (o / or :op1 (h2 / hammer) :op2 (w / whizz))))
(p / possible-01 :mode (i / interrogative) :arg1 (s / see-01 :arg0 (y / you) :arg1 (t / thing :arg0-of (c / cause-01 :arg1 (d / discuss-01 :arg1 (p2 / person :mod (t2 / that)) :frequency (o / often) :arg1-of (c2 / cause-01 :arg0 (a / and :op1 (o2 / original :polarity - :domain (p3 / person)) :op2 (d2 / distinctive :polarity - :domain (p4 / person) :mod (p5 / particular)))))))))
(i / issue-02 :arg0 (t / this) :arg1-of (v / valid-02 :degree (e / entire)) :arg0-of (s / stir :arg1 (s2 / society)) :domain (t2 / this) :mod (b / besides))
(t / talk-01 :arg0 (t2 / they) :arg1 (a / and :op1 (t3 / team :mod (b / both)) :op2 (t4 / thing :arg1-of (i / interest-01 :arg2 (t5 / they)))))
(p / pass-07 :arg1 (t / trick :poss (t2 / trade-01 :mod (b / barber))) :arg2 (g / generation :prep-to (g2 / generation)))
(u / underway :location (a / area :quant 2) :time (a2 / already) :time (n / now :mod (r / right)))
(d / die-01 :arg1 (p / person :quant 2 :arg0-of (s / smoke-02)) :source (a / addict-01 :arg2 (p2 / person)))
(r / replace-01 :arg1 (l / location :name (n / name :op1 "Chase" :op2 "Australia") :arg1-of (f / fail-01 :arg2 (p / provoke-01 :arg1 (s / show-04 :arg1 (p2 / person :name (n2 / name :op1 "McGuire")))))) :arg2 (l2 / location :name (n3 / name :op1 "Chase" :op2 "Australia")))
(s / say-01 :arg0 (p / person :name (n / name :op1 "Corbyn")) :arg1 (d / deputise :arg0 (a / and :op1 (p2 / person :name (n2 / name :op1 "Angela" :op2 "Eagle")) :op2 (p3 / person :arg0-of (h / have-org-role-91 :arg2 (s2 / secretary :mod (b / business)))) :op3 (p4 / person :arg0-of (h2 / have-org-role-91 :arg2 (s3 / secretary :mod (b2 / business)))) :op4 (p5 / person :arg0-of (h3 / have-org-role-91 :arg2 (s4 / secretary :mod (b3 / business)))) :op5 (p6 / person :arg0-of (h4 / have-org-role-91 :arg2 (s5 / secretary :mod (b4 / business))))) :arg1 (t / travelling :arg1 (p7 / person) :time (t2 / travelling :arg1 (p8 / person) :location (a2 / abroad)))))
(a / and :op1 (n / need-01 :arg0 (y / you) :arg1 (c / care-04 :arg0 (y2 / you))) :op2 (f / focus-01 :arg0 (y3 / you) :arg2 (c2 / cease-01 :arg1 (f2 / fire-01)) :purpose (k / knock :arg0 (y4 / you) :arg1 (h / hurdles))))
(e / exemplify-01 :arg0 (a / and :op1 (l / look-01 :arg0 (p / person :quant 1 :mod (c / country :name (n / name :op1 "US"))) :arg1 (p2 / person :name (n2 / name :op1 "Chelsea" :op2 "Manning"))) :op2 (a2 / announce-01 :arg0 (p3 / person) :arg1 (w / want-01 :arg0 (p4 / person) :arg1 (c2 / change-01 :arg0 (p5 / person) :arg1 (s / sex :poss (p6 / person)))) :time (o / once :op1 (b / be-located-at-91 :arg1 (p7 / person) :arg2 (p8 / prison) :time (a3 / already))))) :arg2 (p9 / person :name (n3 / name :op1 "Alekseev")))
(a / and :op1 (s / satisfy-01 :arg0 (u / use-01 :arg0 (p / person :name (n / name :op1 "Hillary" :op2 "Clinton")) :arg1 (a2 / address :mod (y / yuhua) :arg1-of (p2 / personal-02)) :arg2 (a3 / and :op1 (a4 / address :mod (y2 / yuhua) :arg1-of (p3 / personal-02)) :op2 (s2 / server))) :arg1 (p4 / person :arg0-of (v / vote-01) :mod (p5 / primary) :mod (d / democracy :degree (m / most)))) :op2 (s3 / say-01 :arg0 (p6 / person) :arg1 (a5 / and :op1 (s4 / satisfy-01 :arg0 (p7 / person) :arg1 (m2 / matter)) :op2 (s5 / say-01 :arg0 (p8 / person) :arg1 (v2 / view-02 :polarity - :arg0 (p9 / person) :arg1 (s6 / she) :mod (o / overall))))))
(a / and :op1 (t / tea :domain (p / person :arg0-of (v / visit-01))) :op2 (o / offer-01 :arg0 (p2 / person) :arg1 (d / delicacies :arg1 (p3 / person)) :arg3 (a2 / and :op1 (p4 / person :arg0-of (v2 / visit-01)) :op2 (p5 / person :arg0-of (h / have-org-role-91 :arg2 (h2 / head-of-state))) :op3 (p6 / person :arg0-of (h3 / have-org-role-91 :arg2 (h4 / head-of-state))) :op4 (p7 / person :arg0-of (h5 / have-org-role-91 :arg2 (h6 / head-of-state))) :op5 (p8 / person :arg0-of (h7 / have-org-role-91 :arg2 (h8 / head-of-state))) :op6 (p9 / person :arg0-of (h9 / have-org-role-91 :arg2 (h10 / head-of-state))) :op7 (p10 / person :arg0-of (h11 / have-org-role-91 :arg2 (h12 / head-of-state))) :op7 (p11 / person :arg0-of (h13 / have-org-role-91 :arg2 (h14 / head-of-state))))))
(a / and :op1 (t / tea :domain (p / person :arg0-of (v / visit-01))) :op2 (o / offer-01 :arg0 (p2 / person) :arg1 (d / delicacies :arg1 (p3 / person)) :arg3 (a2 / and :op1 (p4 / person :arg0-of (v2 / visit-01)) :op2 (p5 / person :arg0-of (h / have-org-role-91 :arg2 (h2 / head-of-state))) :op3 (p6 / person :arg0-of (h3 / have-org-role-91 :arg2 (h4 / head-of-state))) :op4 (p7 / person :arg0-of (h5 / have-org-role-91 :arg2 (h6 / head-of-state))) :op5 (p8 / person :arg0-of (h7 / have-org-role-91 :arg2 (h8 / head-of-state))) :op6 (p9 / person :arg0-of (h9 / have-org-role-91 :arg2 (h10 / head-of-state))) :op7 (p10 / person :arg0-of (h11 / have-org-role-91 :arg2 (h12 / head-of-state))) :op7 (p11 / person :arg0-of (h13 / have-org-role-91 :arg2 (h14 / head-of-state))))))
(d / describe-01 :arg0 (p / person :name (n / name :op1 "Assad")) :arg1 (a / and :op1 (c / country :name (n2 / name :op1 "Russia")) :op2 (c2 / country :name (n3 / name :op1 "Iran")) :prep-as (c3 / country :arg1-of (f / friendly-01))) :arg2 (c4 / cooperate-01 :arg0 (a2 / and) :arg1 (a3 / and)))
(c / contrast-01 :arg1 (f / fact :domain (l / life :mod (e / economy))) :arg2 (h / help-01 :arg0 (r / rate :mod (r2 / rate)) :arg1 (t / they) :frequency (o / often)))
FAILED_TO_PARSE#Two concepts in a row.
(a / and :op1 (t / tell-01 :polarity - :arg0 (h / he) :arg1 (t2 / thing :arg1-of (w / write-01)) :arg2 (i / i)) :op2 (d / do-02 :polarity - :arg0 (i2 / i) :arg1 (i3 / it) :concession (e / even-if :op1 (d2 / do-02 :arg0 (h2 / he)))))
(a / and :op1 (d / draft-01 :arg0 (p / person :arg1-of (w / write-01 :arg0 (p2 / person :name (n / name :op1 "Herman" :op2 "Mankiewicz") :arg1-of (w2 / write-01 :location (c / collections :arg1-of (p3 / private-03)))) :time (e / early :degree (m / most)))) :arg1 (p4 / person :arg1-of (i / include-91 :arg2 (p5 / person :quant (1 / 1940s) :arg1-of (c2 / collections :arg1-of (p6 / possible-01 :polarity -))))) :time (e2 / early :degree (m2 / most))) :op2 (e3 / entitled :arg1 (' / '' :mod (c3 / country :name (n2 / name :op1 "N-A"))) :arg2 (t / title :mod (w3 / work-01) :beneficiary (f / film))))
(a / and :op1 (b / become-01 :arg1 (p / person :name (n / name :op1 "Isaac" :op2 "Caldiero") :arg0-of (h / have-org-role-91 :arg2 (b2 / busboy))) :arg2 (o / ordinal-entity :value 1)) :op2 (b3 / become-01 :arg1 (p2 / person) :arg2 (o2 / ordinal-entity :value 1) :purpose (w / win-01 :arg0 (p3 / person) :arg1 (h2 / home :poss (o3 / organization :name (n2 / name :op1 "American" :op2 "Ninja" :op3 "Warrior"))) :time (n3 / night)) :time (n4 / night :ord (o4 / ordinal-entity :value 1))))
(e / easy-05 :polarity - :arg1 (s / solve-01 :arg1 (i / it)) :arg1-of (c / cause-01 :arg0 (p / possible-01 :arg1 (d / deal-01 :arg0 (c2 / country :polarity - :location (c3 / continent :name (n / name :op1 "Europe"))) :arg2 (c4 / country :mod (s2 / small :degree (s3 / such)) :example (c5 / country :name (n2 / name :op1 "Serbia")) :mod (e2 / especially))))))
(v / view-01 :arg0 (p / person :quant 6 :arg1-of (r / republican)) :arg1 (p2 / person :name (n / name :op1 "Donald" :op2 "Trump")) :mod (f / favorable) :time (n2 / now))
(a / adapt-01 :arg1 (s / system :arg0-of (d / drive-01 :arg1 (a2 / all-wheel))) :arg2 (c / condition :poss (c2 / country :name (n / name :op1 "N-A"))))
(i / intend-01 :arg0 (p / person :arg1-of (e / employ-01) :mod (c / company :name (n / name :op1 "Facebook"))) :arg1 (a / and :op1 (p2 / post-01 :arg0 (p3 / person) :arg1 (p4 / post)) :op2 (c2 / comment-01 :arg0 (p5 / person) :arg3 (a2 / assess-01 :arg1 (a3 / and :op1 (p6 / person :arg0-of (u / use-01)) :op2 (r / refugee)) :mod (n2 / negative)))))
(k / know-01 :mode (i / interrogative) :arg0 (p / person :name (n / name :op1 "David" :op2 "Cameron")) :arg1 (g / good :degree (m / more) :compared-to (t / this) :domain (t2 / this)) :arg1-of (s / sure-02))
(u / use)
(c / contrast-01 :arg2 (s / set-02 :arg0 (s2 / set :arg1-of (s3 / set-up-03 :arg2 (h / hangar :location (h2 / hangar :location (l / location :name (n / name :op1 "Domodedovo")))))) :arg1 (t / task :mod (j / just) :arg1-of (n2 / need-01 :purpose (a / address-02 :arg1 (a2 / address :arg1-of (a3 / address-02 :arg0 (r / rookies))))))))
(m / multi-sentence :snt1 (c / contrast-01 :arg2 (s / strict :domain (r / rule :poss (s2 / service :mod (b / border))) :degree (v / very))) :snt2 (n / need-01 :arg1 (r2 / register-02 :arg1 (r3 / register-02 :arg1 (s3 / service)) :arg3 (p / permit-01 :arg1 (r4 / register-02)))))
(p / possible-01 :arg1 (c / call-01 :arg1 (s / season :mod (t / this)) :arg2 (a / and :op1 (t2 / track :mod (2 / 24-year-old)) :op2 (f / field :mod (f2 / field)) :source (a2 / and :op1 (l / location :name (n / name :op1 "Barnaul")) :op2 (p2 / person :name (n2 / name :op1 "Sergei" :op2 "Shubenkov"))))))
(a / and :op2 (s / state-01 :arg0 (h / he) :arg1 (h2 / have-03 :arg0 (c / country :name (n / name :op1 "US")) :arg1 (p / presence :purpose (' / '' :arg0 (c2 / country) :arg1 (c3 / country :name (n2 / name :op1 "Russia")) :degree (f / further))) :condition (c4 / continue-01 :arg0 (c5 / country) :arg1 (s2 / support-01 :arg0 (c6 / country) :arg1 (p2 / person :arg0-of (h3 / have-org-role-91 :arg1 (a2 / and :op1 (p3 / person :name (n3 / name :op1 "Bashar" :op2 "al-Assad") :arg0-of (h4 / have-org-role-91 :arg1 (c7 / country :name (n4 / name :op1 "Syria")) :arg2 (p4 / president))) :op2 (p5 / person :name (n5 / name :op1 "Bashar" :op2 "al-Assad") :arg0-of (h5 / have-org-role-91 :arg1 (c8 / country) :arg2 (p6 / president)))))))))))
(r / reduce-01 :arg1 (p / puzzle-01 :arg1-of (r2 / reduce-01)) :concession (r3 / rate-entity-91 :arg1 (p2 / percentage-entity :value (N / N-A)) :arg2 (t / temporal-quantity :quant (N2 / N-A) :unit (y / year))) :arg0-of (a / affect-01 :arg1 (t2 / thing :arg1-of (e / effect-03) :mod (g / ground) :mod (o / or :op1 (h / heavy) :op2 (l / large)) :arg1-of (b / begin-01 :arg1-of (b2 / begin-01 :arg1-of (n / november))))))
(a / and :op1 (p / plagued :arg1 (2 / 29-year-old) :arg2 (a2 / ankle :mod (t / troublesome)) :duration (t2 / temporal-quantity :quant (N / N-A) :unit (y / year))) :op2 (f / fail-01 :arg1 (22 / 29-year-old) :arg2 (f2 / find-01 :arg0 (23 / 29-year-old) :arg1 (m / move-01 :arg2 (c / country :name (n / name :op1 "Wales")) :time (s / summer)))))
(c / contrast-01 :arg1 (p / possible-01 :arg1 (t / take-10 :arg0 (d / develop-02 :arg0 (h / he) :arg1 (t2 / time)) :arg1 (t3 / time))) :arg2 (o / obligate-01 :arg1 (h2 / he) :arg2 (d2 / develop-02 :arg0 (h3 / he) :arg1 (s / strategy :arg1-of (c2 / coherent) :purpose (e / engage-01 :arg0 (h4 / he) :arg2 (m / media)))) :concession (p2 / person :name (n / name :op1 "Andrew" :op2 "Marr") :arg0-of (h5 / have-org-role-91 :arg1 (c3 / company :name (n2 / name :op1 "BBC")) :arg3 (s2 / sofa :arg0 (h6 / he) :arg1 (s3 / sunday))) :mod (c4 / certain))))
(a / and :op1 (a2 / and :op1 (p / prepare-02 :polarity - :arg1 (p2 / person :arg0-of (h / have-org-role-91 :arg1 (p3 / political-party :name (n / name :op1 "N-A")) :arg2 (m / minister)))) :op2 (i / inform-01 :arg1 (p4 / person) :manner (p5 / poor))) :op2 (a3 / and :op1 (i2 / inform-01 :polarity - :arg1 (p6 / person) :manner (p7 / poor)) :op2 (i3 / inform-01 :arg1 (p8 / person) :manner (p9 / poor)) :op3 (c / conclude-01 :arg0 (p10 / person) :arg1 (a4 / agree-01 :arg1-of (b / bad-07)))))
(a / and :op1 (r / report-01 :arg0 (i / i) :arg1 (t / thing :arg2-of (r2 / result-01 :arg1 (d / disappoint-01) :beneficiary (p / percentage-entity :value (N / N-A))))) :op2 (f / forecast-01 :arg0 (g / giant :name (n / name :op1 (d2 / deliver-01)) :mod (g2 / giant)) :arg1 (d3 / demand-01 :arg1 (a2 / and :op1 (s / service :mod (m / military)) :op2 (m2 / monetary-quantity :arg1-of (h / high-02 :degree (m3 / more)))) :location (d4 / division :mod (g3 / ground) :poss (a3 / and)) :arg1-of (h2 / high-02 :degree (m4 / more)))))
(e / enter-01 :arg0 (m / man :mod (n / naked)) :arg1 (c / church))
(v / vote-01 :arg0 (w / we) :arg1 (m / move-01 :arg0 (w2 / we) :arg1 (a / along :op1 (p / path :mod (c / continent :name (n / name :op1 "N-A"))))) :arg1-of (c2 / cause-01 :arg0 (u / understand-01 :arg0 (w3 / we) :arg1 (c3 / consequence :arg0-of (d / devastate-01) :arg0-of (d2 / devastate-01) :arg0-of (f / follow-01 :arg1 (w4 / withdraw-01 :arg0 (c4 / country) :arg1 (o / organization :name (n2 / name :op1 "EU"))) :arg2 (w5 / withdraw-01 :arg1 (c5 / country) :arg2 (o2 / organization :name (n3 / name :op1 "EU")))) :mod (w6 / well :degree (t / too))))))
(s / say-01 :arg0 (p / person :name (n / name :op1 "Elstein")) :arg1 (r / recommend-01 :arg1 (d / do-02 :arg0 (c / company :name (n2 / name :op1 "BBC")) :arg1 (m / more) :location (a / area :example (a2 / and :op1 (s2 / say-01 :arg0 (p2 / person) :arg1 (f / fire-01 :arg0 (p3 / person) :mod (o / only) :arg1-of (s3 / show-01 :arg0 (p4 / person) :medium (t / tv)))) :op2 (e / enter-01 :arg0 (p5 / person) :arg1 (a3 / alliance :prep-with (p6 / person :arg0-of (b / broadcast-01) :mod (c2 / commerce))) :purpose (w / watch-01 :arg0 (p7 / person) :arg1 (a4 / available-02 :arg2 (o2 / online)))))))) :medium (i / issue-02 :arg0 (i2 / issue-02 :arg0 (c3 / country))))
(v / version :arg1-of (c / complete-02 :degree (m / more)) :mod (s / script) :domain (d / draft-01 :ord (o / ordinal-entity :value 2)) :concession (d2 / draft-01 :arg0 (f / film) :arg1 (f2 / film) :mod (f3 / final)))
(l / learn-01 :arg0 (i / i) :arg1 (p / possible-01 :arg1 (d / distilled :arg1 (i2 / i) :arg2 (r / rule :quant 8 :arg1-of (s / simple-02)))))
(f / find-02 :arg0 (o / organization :name (n / name :op1 "Novosibirsk" :op2 "Leninsky" :op3 "Court")) :arg1 (g / guilty-01 :arg1 (c / citizen :quant 4) :arg2 (v / vandalism :arg1-of (r / relate-01 :arg2 (m / monuments :poss (o2 / organization :name (n2 / name :op1 "Lenin")))) :arg1-of (l / locate-01 :location (t / territory :poss (a / and :op1 (o3 / organization :name (n3 / name :op1 "CPRF")) :op2 (o4 / organization :name (n4 / name :op1 "CPRF")))))) :arg1-of (r2 / relate-01 :arg2 (r3 / relate-01 :arg1 (c2 / citizen) :arg2 (c3 / complex :name (n5 / name :op1 (g2 / glory) :op2 (c4 / complex) :op3 (c5 / complex)))))))
(m / multi-sentence :snt1 (s / significant-02 :arg1 (m2 / move-02)) :snt2 (a / and :op1 (g / give-01 :arg0 (m3 / move-02) :arg1 (r / role :mod (b / big :degree (m4 / more)) :topic (r2 / resource))) :op2 (e / ensure-01 :arg0 (m5 / move-02) :arg1 (a2 / and :op1 (e2 / environment :mod (b2 / business) :mod (l / law-based)) :op2 (m6 / make-02 :arg1 (o / open-01 :arg1 (m7 / market) :degree (m8 / more))))) :op3 (s2 / state-01 :arg0 (s3 / statement))))
(r / rebounded :arg1 (m / market) :time (m2 / month :mod (t / this)) :prep-with (p / product-of :op1 (n / nearly :op1 10) :op2 (p2 / percentage-entity :value (N / N-A)) :arg1-of (h / high-02 :arg1-of (p3 / possible-01))) :time (m3 / month :mod (t2 / this)))
(s / say-01 :arg1 (s2 / sorry-01 :arg1 (i / i) :degree (s3 / so) :arg0-of (c / cause-01 :arg1 (w / wish-01 :arg0 (i2 / i) :arg1 (w2 / wish-01 :arg0 (i3 / i) :arg1 (p / possible-01 :arg1 (t / take-01 :arg0 (i4 / i) :arg1 (i5 / it) :direction (b / back))))))) :arg2 (s4 / scene :location-of (f / find-01 :arg0 (p2 / police) :arg1 (s5 / scene :poss (p3 / person :name (n / name :op1 "Amy" :op2 "Prentiss"))))) :li 41)
(p / play-02 :arg0 (p2 / process-01 :arg1-of (s / specific-02)) :arg1 (m / market :mod (g / globe) :mod (g2 / globe)))
(s / seem-01 :arg1 (c / change-01 :arg0 (i / it) :arg1 (d / direction)) :time (i2 / immediate) :arg1-of (c2 / cause-01 :arg0 (h / hike/cut :ord (o / ordinal-entity :value 1 :range (o2 / ordinal-entity :value 1)))))
(a / and :op1 (c / contribute-01 :arg0 (t / this) :arg2 (c2 / construct-01 :arg1 (t2 / traffic :mod (n / new) :location (o / outskirts :poss (c3 / city)))) :mod (a2 / also)) :op2 (s / stipulate-01 :arg0 (s2 / she)))
(m / multi-sentence :snt1 (c / cause-01 :arg1 (p / possible-01 :arg1 (p2 / plan-01 :arg0 (p3 / person :quant (s / some) :arg0-of (h / have-org-role-91 :arg2 (m2 / minister)) :mod (s2 / such)) :arg1 (m3 / make-01 :arg0 (p4 / person) :arg1 (r / remark-01 :arg0 (p5 / person :arg0-of (h2 / have-org-role-91 :arg2 (m4 / minister)))) :mod (e / even))))) :snt2 (s3 / suggest-01 :arg0 (p6 / person :arg0-of (h3 / have-rel-role-91 :arg1 (i / i) :arg2 (p7 / pal))) :time (c2 / campaign-01 :arg0 (c3 / country :name (n / name :op1 "UK")) :arg1 (h4 / hasten :arg0 (p8 / person) :arg1 (p9 / process-02 :arg1 (b / brexit))))))
(p / possible-01 :arg1 (m / mobilise :arg1 (i / ied :mod (r / river) :arg0-of (e / enable-01 :arg1 (s / stay-01 :arg1 (g / guest) :location (s2 / ship :mod (s3 / ship))))) :time (d / date-entity :decade (N / N-A)) :mod (j / just)))
(a / and :op1 (c / change-01 :arg0 (n / nematodes :mod (t / tiny)) :arg1 (d / direction)) :op2 (h / high-pitched :arg1 (p / pulses :mod (s / sonic)) :arg2 (h2 / hear-01 :arg0 (h3 / human)) :degree (t2 / too) :purpose (h4 / hear-01 :arg0 (h5 / human))))
(s / say-01 :arg0 (t / thing :arg1-of (r / report-01) :location (o / organization :name (n / name :op1 "Nature" :op2 "Communications"))) :arg1 (m / make-02 :arg0 (w / wave-04 :arg1 (s2 / sound) :mod (t2 / this)) :arg1 (a / and :op1 (o2 / open-up-03 :arg0 (c / channel) :arg1 (c2 / cell)) :op2 (i / install-01 :arg0 (c3 / channel) :arg1 (c4 / cell)))))
(p / probable :domain (r / return-02 :arg1 (i / idea :mod (g / great :degree (m / more)) :arg0-of (l / lead-01 :arg1 (a / and :op1 (c / country :name (n / name :op1 "N-A")) :op2 (c2 / continent :name (n2 / name :op1 "Europe"))) :arg4 (a2 / and :op1 (w / war-01 :quant 2 :mod (w2 / world)) :op2 (l2 / life :quant (m2 / multiple :op1 2)))))) :mod (p2 / probable) :mod (p3 / probable))
(a / and :op1 (i / include-91 :arg1 (p / percentage-entity :value (N / N-A) :quant-of (p2 / person :arg0-of (v / vote-01 :arg1 (r / republican)) :mod (3 / 376-person))) :arg2 (p3 / percentage-entity :value (N2 / N-A))) :op2 (c / conduct-01 :arg1 (t / thing :arg1-of (c2 / conduct-01))))
(a / and :op1 (s / see-01 :arg0 (i / i) :arg1 (p / person :name (n / name :op1 "Monika")) :frequency 3 :time (l / location :name (n2 / name :op1 "Evita"))) :op2 (i2 / inspire-01 :arg0 (s2 / she) :arg1 (i3 / i) :mod (d / definite)))
(a / and :op1 (o / obvious-01 :arg1 (a2 / and :op1 (m / market :mod (l / labor)) :op2 (i / inflation :ord (o2 / ordinal-entity :value 1)) :domain (a3 / and :op1 (m2 / market :mod (l2 / labor)) :op2 (i2 / inflation)) :ord (o3 / ordinal-entity :value 1))) :op2 (s / say-01 :arg0 (i3 / i) :arg1 (i4 / important :degree (m3 / most) :domain (w / watch-01 :arg0 (t / they) :arg1 (p / person :name (n / name :op1 "Lindsey" :op2 "M." :op3 "Piegza") :arg0-of (h / have-org-role-91 :arg1 (c / company :name (n2 / name :op1 "N-A")) :arg2 (c2 / chief)))))))
(r / resemble-01 :arg1 (c / customer :mod (p / potential) :arg0-of (d / deliver-01 :arg1 (a / around :op1 (t / temporal-quantity :quant (N / N-A) :unit (w / week))))) :arg2 (c2 / customer :mod (p2 / potential)) :mod (a2 / also))
(c / cause-01 :arg0 (a / attitude :poss (c2 / continent :name (n / name :op1 "Europe"))) :arg1 (h / hold-01 :polarity - :arg1 (t / they)))
(c / cause-01 :arg0 (a / attitude :poss (c2 / continent :name (n / name :op1 "Europe"))) :arg1 (h / hold-01 :polarity - :arg1 (t / they)))
(c / contrast-01 :arg1 (h / have-03 :arg0 (p / person :quant (m / multiple)) :arg1 (m2 / medication :polarity -) :mod (j / just)) :arg2 (f / fight-01 :arg0 (p2 / person :arg0-of (h2 / have-rel-role-91 :arg2 (p3 / patient))) :arg2 (f2 / fight-01 :arg0 (p4 / person)) :mod (a / also)))
(s / show-01 :arg0 (c / comedy) :arg1 (l / lesson :mod (s2 / serious) :topic (f / friendship :mod (m / male))))
(b / build-01 :arg0 (t / they) :arg1 (l / line :mod (p / produce-01 :arg1 (s / semi-robotic)) :mod (n / new)) :beneficiary (a / and :op1 (a2 / assembly :arg0-of (a3 / assembly :arg1 (d / door))) :op2 (a4 / assembly :arg0-of (a5 / assembly :arg1 (m / model)) :mod (n2 / new))) :location (b2 / behind :op1 (r / river :name (n3 / name :op1 "N-A"))))
(b / build-01 :arg0 (t / they) :arg1 (l / line :mod (p / produce-01 :arg1 (s / semi-robotic)) :mod (n / new)) :beneficiary (a / and :op1 (a2 / assembly :arg0-of (a3 / assembly :arg1 (d / door))) :op2 (a4 / assembly :arg0-of (a5 / assembly :arg1 (m / model)) :mod (n2 / new))) :location (b2 / behind :op1 (r / river :name (n3 / name :op1 "N-A"))))
(d / detail-01 :arg0 (d2 / detail :arg1-of (r / release-01 :arg0 (a / and :op1 (p / person :arg0-of (h / have-org-role-91 :arg2 (p2 / person :arg0-of (i / investigate-01)))) :op2 (p3 / person :arg0-of (k / know-01 :arg1 (h2 / help-01 :arg0 (p4 / person) :arg1 (p5 / paint :arg0 (p6 / person) :arg1 (p7 / picture :poss (p8 / person :mod (e / extreme)))))))))) :arg2 (p9 / person :arg0-of (t / teach-01) :arg1-of (t2 / trouble-01 :arg1-of (p10 / possible-01))))
(f / forbid-01 :arg1 (c / complete-01 :arg1 (b / boxes :mod (e / electricity) :beneficiary (p / plane :name (n / name :op1 (a / airbus) :op2 (m / military) :op3 (m2 / military) :op4 (m3 / military) :op5 (m4 / military) :op6 (m5 / military) :op7 (m6 / military) :op6 (m7 / military) :op7 (m8 / military))))))
(p / possible-01 :arg1 (o / or :op1 (d / downloading :arg0 (y / you) :arg1 (o2 / or :op1 (d2 / device :mod (i / ios)) :op2 (d3 / device :mod (a / android)))) :op2 (c / contribute-01 :arg0 (o3 / organization :name (n / name :op1 "BBC" :op2 "News")) :arg2 (a2 / and :op1 (d4 / device :mod (a3 / android)) :op2 (d5 / device :mod (a4 / android)))) :op3 (c2 / contribute-01 :arg0 (o4 / organization) :arg2 (u / use-01 :arg1 (b / buttons :location (a5 / app))))))
(f / face-01 :arg0 (p / person :name (n / name :op1 "Carson") :arg1-of (f2 / face-01 :arg0 (p2 / person :name (n2 / name :op1 "Trump")) :time (w / week :mod (l / last)))) :arg1 (t / take-01 :arg0 (p3 / person) :arg1 (p4 / potshots :quant (s / some)) :location (n3 / neurosurgeon :arg0-of (r / retire-01))) :concession (a / apologize-01 :arg0 (p5 / person) :arg1 (q / question-03 :arg0 (p6 / person) :arg1 (f3 / faith :poss (p7 / person)))))
(b / base-02 :arg1 (c / case-03 :arg2 (p / person :arg0-of (p2 / prosecute-01))) :arg2 (r / report-01 :arg1-of (e / expert-01)))
(s / see-01 :polarity - :mode (i / imperative) :arg0 (y / you) :arg1 (a / and :op1 (f / footage :source (l / location :name (n / name :op1 "Calais"))) :op2 (w / wait-01 :arg1 (m / man :mod (t / this)) :arg2 (s2 / see-01 :arg0 (a2 / and) :arg1 (p / possible-01 :arg1 (g / get-on-21 :arg0 (a3 / and) :arg1 (o / organization :name (n2 / name :op1 "Channel" :op2 "Tunnel"))))))))
(w / want-01 :arg0 (p / person :mod (c / country :name (n / name :op1 "Serbia")) :mod (c2 / country :name (n2 / name :op1 "Serbia"))) :arg1 (p2 / participate-01 :arg0 (p3 / person) :arg1 (t / thing :arg2-of (s / solve-01))) :arg1-of (c3 / cause-01 :arg0 (d / damage-01 :polarity - :manner (c4 / collateral))))
(b / be-located-at-91 :arg1 (t / thing :arg1-of (b2 / be-located-at-91 :arg2 (f / footage :mod (s / stock) :poss (i / it)) :manner (c / consistent))) :arg2 (a / and :op1 (w / woman) :op2 (p / person :mod (s2 / small) :arg0-of (h / have-rel-role-91 :arg1 (w2 / woman) :arg2 (c2 / child)))) :manner (c3 / consistent))
(a / and :op1 (w / want-01 :arg0 (p / person :mod (c / country :name (n / name :op1 "N-A"))) :arg1 (u / use-01 :arg0 (p2 / person) :arg1 (t / trip-03))) :op2 (p3 / plan-01 :arg0 (p4 / person) :arg1 (m / meet-03 :arg0 (p5 / person) :arg1 (a2 / and :op1 (p6 / person :arg0-of (l / lead-02 :arg1 (p7 / parliament))) :op2 (p8 / person :arg0-of (r / represent-01 :arg1 (p9 / person :arg0-of (r2 / represent-01 :arg1 (a3 / and :op1 (p10 / political-party :arg0-of (o / oppose-01 :arg1 (d / democracy))) :op2 (p11 / person :arg0-of (r3 / represent-01 :arg1 (o2 / oppose-01 :arg1 (d2 / democracy)))) :op3 (p12 / person :arg0-of (r4 / represent-01 :arg1 (a4 / and :op1 (p13 / person :arg0-of (r5 / represent-01 :arg1 (d3 / democracy))) :op2 (p14 / person :arg0-of (r6 / represent-01 :arg1 (p15 / politics))) :op3 (p16 / person :arg1-of (i / imprison-01 :mod (p17 / politics)))))))))))))))
(s / sense-02 :polarity - :arg1 (i / it) :arg1-of (o / obvious-01) :arg1-of (o2 / obvious-01))
(f / fear-01 :mode (i / interrogative) :polarity - :arg0 (y / you) :arg1 (b / bad-07 :arg1 (i2 / i) :degree (e / equal) :compared-to (s / start-01 :arg1 (s2 / season) :time (y2 / year :mod (l / last)))))
(s / say-01 :arg0 (p / person :arg0-of (s2 / study-01)) :arg1 (l / look-up-05 :arg0 (p2 / person) :arg1 (c / class :poss (p3 / person)) :direction (f / forward)))
(m / medicine :domain (t / this))
(c / contrast-01 :arg1 (a / and :op1 (b / be-located-at-91 :arg1 (p / person :arg0-of (p2 / play-01) :mod (b2 / both)) :arg2 (t / tour :name (n / name :op1 (c2 / challenger)))) :op2 (h / have-03 :arg0 (w / we) :arg1 (e / experience))) :arg2 (s / see-01 :arg0 (w2 / we) :arg1 (r / role :mod (d / decisive) :arg0-of (p3 / play-08 :arg1 (c3 / cup :mod (d2 / davis))))))
(r / remain-01 :arg1 (t / thing :arg0-of (i / incinerate-01) :mod (w / wind-powered)) :arg3 (t2 / thing :arg1-of (s / symbolize-01 :arg2 (a / and :op1 (v / village) :op2 (r2 / rarity :arg1-of (l / local-02)))) :mod (m / mere) :mod (m2 / mere)))
(a / and :op1 (b / beat-03 :arg0 (f / figure :mod (s / sell-01) :mod (l / late :degree (m / most)) :poss (o / organization :name (n / name :op1 "Richemont"))) :arg1 (e / expect-01)) :op2 (s2 / show-01 :arg0 (f2 / figure) :arg1 (s3 / sell-01 :arg1 (m2 / market :arg1-of (k / key-02)) :arg2 (c / country :name (n2 / name :op1 "China"))) :mod (a2 / also)))
(a / and :op1 (b / beat-03 :arg0 (f / figure :mod (s / sell-01) :mod (l / late :degree (m / most)) :poss (o / organization :name (n / name :op1 "Richemont"))) :arg1 (e / expect-01)) :op2 (s2 / show-01 :arg0 (f2 / figure) :arg1 (s3 / sell-01 :arg1 (m2 / market :arg1-of (k / key-02)) :arg2 (c / country :name (n2 / name :op1 "China"))) :mod (a2 / also)))
(k / know-01 :polarity - :arg0 (y / you) :arg1 (d / differ-02 :arg1 (f / friendship :poss (y2 / you)) :arg2 (a / amr-unknown)) :time (e / ever))
(h / have-concession-91 :arg1 (c / claim-02 :arg0 (h2 / he) :arg1 (l / location :name (n / name :op1 "Lidové"))) :arg2 (o / offence :mod (c2 / criminal-03) :mod (y / yet)))
(s / short-06 :arg1 (p / person :quant 351 :mod (p2 / primary) :arg0-of (v / vote-01) :mod (p3 / primary)) :arg2 (p4 / point :quant 6 :mod (p5 / percentage-entity :value (N / N-A))))
(c / cause-01 :arg1 (r / regard-01 :arg1 (o / oil) :arg2 (o2 / oil :mod (v / vegetable :polarity -))))
(s / say-01 :arg0 (p / person :name (n / name :op1 "De" :op2 "Boer") :arg0-of (h / have-org-role-91 :arg1 (o / organization :name (n2 / name :op1 "Ajax")) :arg2 (a / ambassador) :time (c / current)) :arg0-of (h2 / have-org-role-91 :arg1 (o2 / organization :name (n3 / name :op1 "Ajax")))) :arg1 (s2 / show-01 :polarity - :arg0 (p2 / person) :arg1 (h3 / highlight-01 :arg1 (g / game :mod (c2 / celtic) :mod (a2 / any)))))
(u / utilise :arg0 (i / inspect-01) :arg1 (s / sense-01 :arg1 (t / touch-01) :mod (w / well-trained)))
(c / contrast-01 :arg1 (t / therefore :arg0 (p / person :arg0-of (h / have-org-role-91 :arg2 (p2 / person :arg0-of (i / investigate-01)))) :arg1 (c2 / case-03) :arg2 (c3 / case-03 :arg1 (s / she))) :arg2 (p3 / person :name (n / name :op1 "Kailová") :arg0-of (h2 / have-org-role-91 :arg2 (c4 / charging))) :time (m / mandate :poss (p4 / person) :location (c5 / chamber :part-of (p5 / person :arg0-of (h3 / have-org-role-91 :arg2 (d / deputy))))))
(b / back-01 :arg0 (p / person :name (n / name :op1 "Healy")) :arg1 (d / decide-01 :arg0 (p2 / person) :arg1 (t / tie :arg0 (p3 / person) :arg1 (p4 / person :name (n2 / name :op1 "Kyrgios")) :arg2 (t2 / tie :mod (i / important)))) :arg1-of (s / start-01 :arg0 (p5 / person) :arg3 (t3 / tie :mod (i2 / important))) :arg1-of (s2 / start-01 :arg0 (p6 / person) :location (f / friday)) :arg1-of (s3 / start-01 :arg0 (p7 / person) :location (f2 / friday :mod (r / right))) :arg1-of (c / cause-01 :arg0 (b2 / back-01 :arg0 (p8 / person) :arg1 (c2 / canberran :arg1 (t4 / thing :mod (r2 / right)) :arg2 (t5 / thing :mod (r3 / right))))))
FAILED_TO_PARSE#Two concepts in a row.
(a / and :op1 (r / receive-01 :arg0 (a2 / and :op1 (p / person :arg1-of (l / liberal-02)) :op2 (p2 / person :quant 1 :arg1-of (i / include-91 :arg2 (p3 / person)))) :arg1 (m / money)) :op2 (r2 / receive-01 :arg0 (s / state) :arg1 (m2 / money :arg1-of (i2 / include-91 :arg2 (m3 / money :part-of (m4 / money)) :arg3 (p4 / percentage-entity :value (N / N-A))))))
(w / write-01 :arg0 (s / she) :arg1 (a / and :op1 (j / journey :arg0 (w2 / we) :arg1 (a2 / and :op1 (t / train :name (n / name :op1 (d / dark) :op2 (r / ride)) :arg1-of (d2 / dark-02)) :op2 (r2 / ride :mod (b / bus)) :quant (m / many))) :op2 (a3 / and :op1 (h / hunger-01 :arg0 (w3 / we)) :op2 (a4 / and :op1 (h2 / hunger-01 :arg0 (w4 / we)) :op2 (h3 / hunger-01 :arg0 (w5 / we)) :op3 (f / fear-01 :arg0 (w6 / we)) :op4 (f2 / fear-01 :arg0 (w7 / we)) :op5 (f3 / fear-01)))))
(s / say-01 :arg0 (c / company) :arg1 (s2 / start-01 :arg0 (c2 / company) :arg1 (i / interviewing :arg0 (i2 / it) :arg1 (l / level :mod (s3 / staff) :arg1-of (r / rise-01 :arg2 (c3 / company :name (n / name :op1 "N-A")) :manner (d / december))) :time (m / month :mod (t / this)))))
(c / contrast-01 :arg1 (a / and :op1 (c2 / criticize-01 :arg0 (p / person :name (n / name :op1 "Donald" :op2 "Trump")) :arg1 (p2 / person :arg0-of (v / vote-01 :arg1 (c3 / criminal-organization :name (n2 / name :op1 "N-A"))) :arg1-of (i / include-91 :arg2 (p3 / person :arg0-of (v2 / vote-01 :arg1 (c4 / criminal-organization :name (n3 / name :op1 "N-A")))) :arg3 (p4 / percentage-entity :value 52))) :arg2 (p5 / person :arg0-of (h / have-org-role-91 :arg2 (p6 / president :mod (v3 / vice)))) :manner (w / wide)) :op2 (t / think-01 :arg0 (p7 / person) :arg1 (h2 / have-03 :arg0 (p8 / person :arg1-of (i2 / include-91 :arg2 (p9 / person :arg0-of (v4 / vote-01 :arg1 (c5 / criminal-organization :name (n4 / name :op1 "N-A")))) :arg3 (p10 / percentage-entity :value 52))) :arg1 (p11 / person :arg0-of (h3 / have-org-role-91 :arg2 (p12 / president))) :arg1-of (c6 / conform-01 :arg2 (p13 / person :arg0-of (h4 / have-org-role-91 :arg2 (p14 / president))) :arg1-of (c7 / conform-01 :arg2 (p15 / poll-01 :arg0 (o / organization :name (n5 / name :op1 "News-Washington" :op2 "Post")))))))) :arg2 (c8 / criticize-01 :arg1 (p16 / person) :arg2 (a2 / and :op1 (b / bombast) :op2 (i3 / insult-01) :poss (p17 / person)) :degree (w2 / wide)))
(a / and :op1 (p / prevent-01 :arg0 (a2 / and :op1 (c / create-01 :arg1 (c2 / create-01 :arg1 (p2 / plane :mod (g / german)))) :op2 (c3 / create-01 :arg1 (p3 / paradise :topic (p4 / power :mod (a3 / atom))))) :arg1 (c4 / create-01 :arg1 (p5 / plane :arg0-of (f / fight-01))) :arg1-of (l / long-03)) :op2 (c5 / cause-01 :arg1 (a4 / and :op1 (s / support-01 :arg0 (p6 / person :arg0-of (f2 / fight-01) :mod (o / old)) :arg1 (p7 / person :arg0-of (f3 / fight-01) :mod (o2 / old))) :op2 (s2 / support-01 :arg0 (p8 / person) :arg1 (a5 / and :op1 (p9 / person :arg0-of (m / migrate-01) :mod (o3 / old)) :op2 (p10 / person :arg0-of (h / have-org-role-91 :arg1 (g2 / government-organization :name (n / name :op1 "Nazi")))) :op3 (p11 / person :arg0-of (h2 / have-rel-role-91 :arg1 (p12 / person) :arg2 (o4 / old))) :op4 (p13 / person :arg0-of (h3 / have-rel-role-91 :arg1 (p14 / person) :arg2 (o5 / old))) :op5 (p15 / person :arg0-of (h4 / have-rel-role-91 :arg1 (p16 / person) :arg2 (o6 / old))) :op6 (p17 / person :arg0-of (h5 / have-rel-role-91 :arg1 (p18 / person) :arg2 (o7 / old))) :op7 (p19 / person :arg0-of (h6 / have-rel-role-91 :arg1 (p20 / person) :arg2 (f4 / forest))))))))
(m / multi-sentence :snt1 (c / challenge-01 :arg2 (c2 / country :poss (i / i)) :degree (c3 / considerable)) :snt2 (c4 / contrast-01 :arg1 (b / believe-01 :arg0 (i2 / i) :arg1 (t / that)) :arg2 (b2 / believe-01 :arg0 (i3 / i) :arg1 (t2 / that) :condition (s / succeed-01 :arg0 (w / we) :arg1 (r / refugee :mod (i4 / integrate))))))
(m / multi-sentence :snt1 (c / challenge-01 :arg2 (c2 / country :poss (i / i)) :degree (c3 / considerable)) :snt2 (c4 / contrast-01 :arg1 (b / believe-01 :arg0 (i2 / i) :arg1 (t / that)) :arg2 (b2 / believe-01 :arg0 (i3 / i) :arg1 (t2 / that) :condition (s / succeed-01 :arg0 (w / we) :arg1 (r / refugee :mod (i4 / integrate))))))
(m / multi-sentence :snt1 (c / challenge-01 :arg2 (c2 / country :poss (i / i)) :degree (c3 / considerable)) :snt2 (c4 / contrast-01 :arg1 (b / believe-01 :arg0 (i2 / i) :arg1 (t / that)) :arg2 (b2 / believe-01 :arg0 (i3 / i) :arg1 (t2 / that) :condition (s / succeed-01 :arg0 (w / we) :arg1 (r / refugee :mod (i4 / integrate))))))
(s / start-01 :arg1 (b / build-01 :arg1 (b2 / building)) :time (y / year :mod (n / next)))
(t / time :topic (r / rate :mod (i / interest)))
(t / time :topic (r / rate :mod (i / interest)))
(f / fear-01 :arg0 (p / person :arg1-of (e / employ-01 :location (h / hotel))) :arg1 (t / talk-01 :arg0 (p2 / person) :arg1 (t2 / they) :mod (e2 / even)))
(m / multi-sentence :snt1 (p / possible-01 :arg1 (b / build-01 :arg1 (c / complex :name (n / name :op1 (t / tunnel) :op2 (t2 / tunnel)) :location (t3 / tunnel)) :purpose (p2 / prevent-01 :arg0 (c2 / complex) :arg1 (g / ground :quant 2 :location (g2 / ground))))) :snt2 (c3 / claim-01 :arg0 (p3 / person :arg0-of (h / have-org-role-91 :arg1 (o / organization :name (n2 / name :op1 "Satra") :part-of (o2 / organization :name (n3 / name :op1 "Satra"))) :arg2 (p4 / person :arg0-of (m2 / manage-01 :arg1 (p5 / project))))) :arg1 (p6 / person :arg0-of (h2 / have-org-role-91 :arg1 (o3 / organization :name (n4 / name :op1 "Satra")) :arg2 (p7 / person :arg0-of (m3 / manage-01 :arg1 (p8 / project)))) :arg0-of (h3 / have-org-role-91 :arg1 (o4 / organization :name (n5 / name :op1 "Satra")) :arg2 (c4 / chief)))))
(m / mean-01 :arg0 (i / i) :arg2 (h / have-03 :arg0 (t / they :mod (b / both)) :arg1 (s / sense-01 :arg0 (t2 / they) :arg1 (t3 / they) :mod (g / good))))
(r / responsible-03 :arg0 (w / we :mod (a / all) :prep-as (p / person :arg0-of (h / have-org-role-91 :arg1 (p2 / political-party :name (n / name :op1 "KMT")) :arg2 (m / member)))) :mod (i / in-fact))
(c / contrast-01 :arg1 (p / possible-01 :arg1 (t / take-10 :arg0 (d / develop-02 :arg0 (h / he) :arg1 (t2 / time)) :arg1 (t3 / time))) :arg2 (o / obligate-01 :arg1 (h2 / he) :arg2 (d2 / develop-02 :arg0 (h3 / he) :arg1 (s / strategy :arg1-of (c2 / coherent) :purpose (e / engage-01 :arg0 (h4 / he) :arg2 (m / media)))) :concession (p2 / person :name (n / name :op1 "Andrew" :op2 "Marr") :arg0-of (h5 / have-org-role-91 :arg1 (c3 / company :name (n2 / name :op1 "BBC")) :arg3 (s2 / sofa :arg0 (h6 / he) :arg1 (s3 / sunday))) :mod (c4 / certain))))
(s / shoot-02 :location (l / location :name (n / name :op1 "Joburg")))
(w / welcome-01 :arg1 (o / organization :name (n / name :op1 "Little" :op2 "Citizens") :mod (o2 / overpriced)) :arg2 (t / temporal-quantity :quant (N / N-A) :unit (y / year)) :arg1-of (p / possible-01))
(c / contrast-01 :arg2 (d / digress :arg0 (i / i)))
(s / stuff :mod (t / that) :mod (a / all) :arg1-of (s2 / sure-02) :arg1-of (s3 / sure-02))
(a / and :op2 (c / commit-01 :arg1 (i / it) :arg2 (a2 / and :op1 (l / live-01 :arg0 (i2 / it) :arg1 (m / music)) :op2 (m2 / make-01 :arg0 (i3 / it) :arg1 (m3 / music)) :ord (o / ordinal-entity :value 2) :mod (a3 / actual))))
(s / say-01 :arg1 (e / enough :domain (d / drily :arg1 (d2 / drily :mod (s2 / superintendent))) :time (p / put-01 :arg0 (y / you) :arg1 (j / job :mod (t / technical) :mod (t2 / this)) :arg2 (j2 / job :mod (t3 / technical) :mod (p2 / paper)))) :arg2 (p3 / person :name (n / name :op1 "N-A")))
(s / say-01 :arg1 (e / enough :domain (d / drily :arg1 (d2 / drily :mod (s2 / superintendent))) :time (p / put-01 :arg0 (y / you) :arg1 (j / job :mod (t / technical) :mod (t2 / this)) :arg2 (j2 / job :mod (t3 / technical) :mod (p2 / paper)))) :arg2 (p3 / person :name (n / name :op1 "N-A")))
(h / have-concession-91 :arg1 (p / possible-01 :polarity - :arg1 (i / ignore-01 :arg0 (g / government-organization :name (n / name :op1 "Fed")) :arg1 (o / outlook :mod (g2 / globe) :mod (g3 / globe)))))
(m / multi-sentence :snt1 (s / say-01 :arg0 (h / he) :arg1 (l / limit-01 :arg1 (l2 / limit-01 :arg1 (t / thing :poss (i / i))))) :snt2 (r / recommend-01 :arg1 (b / break-01 :arg1 (a / and :op1 (e / economy :mod (n / nation)) :op2 (e2 / economy :mod (n2 / nation))) :arg1-of (c / cause-01 :arg0 (r2 / reason :mod (s2 / social))))))
(c / chance-02 :arg1 (s / show-01 :arg0 (t / they) :arg1 (c2 / chance-02 :polarity - :arg0 (t2 / they))))
(t / tell-01 :arg0 (p / person :name (n / name :op1 "Corbyn") :arg0-of (m / mr)) :arg1 (p2 / put-03 :arg1 (p3 / political-party :name (n2 / name :op1 "Labour" :op2 "Party")) :arg2 (r / remove-01 :arg0 (p4 / political-party) :arg1 (i / idea :mod (w / whole)) :arg2 (c / cap :mod (a / altogether))) :direction (f / forward)) :arg2 (c2 / conference :mod (o / organization :name (n3 / name :op1 "TUC"))))
(r / reach-01 :arg0 (p / pound) :arg1 (e / end-01 :arg1 (l / lifespan :poss (t / thing))) :time (a / after :op1 (a2 / and :op1 (r2 / repair-01 :quant (s / several)) :op2 (f / fall-07 :arg2 (w / windwheel)))))
(c / consume-01 :arg0 (p / person :arg0-of (u / use-01)) :frequency (o / often) :location (m / monkey :arg1-of (e / empty-02)) :time (m2 / morning))
(f / find-02 :arg0 (s / study :arg1-of (c / conduct-01 :arg0 (p / person :name (n / name :op1 "Jarmila" :op2 "Hamerská") :arg0-of (h / have-org-role-91 :arg1 (p2 / person :name (n2 / name :op1 "Masarykova") :arg0-of (h2 / have-org-role-91 :arg2 (- / -lrb-))) :arg2 (u / univerzita))))) :arg1 (f2 / find-01 :arg0 (p3 / person) :arg1 (t / thing :arg1-of (r / respondents) :quant (p4 / percentage-entity :value 43) :arg1-of (i / include-91 :arg2 (r2 / respondents))) :time (c2 / cooking :mod (c3 / cooking))))
(p / publish-01 :mod (o / original) :arg1-of (p2 / publish-01 :time (t / today)) :arg1-of (p3 / publish-01 :time (t2 / today)) :mod (o2 / original))
(s / say-01 :arg0 (p / person :name (n / name :op1 "Johnson") :arg0-of (l / lead-02 :arg1 (c / channel :mod (s2 / serial)) :arg3 (s3 / score-entity :op1 4 :op2 2004))) :arg1 (g / guilty-01 :arg1 (c2 / company :name (n2 / name :op1 "BBC")) :arg2 (r / rate-01 :arg1 (c3 / company) :arg2 (c4 / chasing)) :arg1-of (c5 / cause-01 :arg0 (a / and :op1 (a2 / ambition :poss (p2 / person :arg0-of (w / work-01 :location (t / there)))) :op2 (b / believe-01 :arg0 (p3 / person) :arg1 (w2 / way :mod (g2 / good :degree (m / most)) :manner-of (s4 / secure-02 :arg1-of (l2 / long-03)) :domain (p4 / person)))))))
(c / contrast-01 :arg1 (r / raise-01 :arg0 (g / government-organization :name (n / name :op1 "Federal" :op2 "Reserve")) :arg1 (r2 / rate) :frequency (o / often)) :arg2 (d / determinant :polarity - :arg1 (t / thing :manner-of (r3 / respond-01 :arg0 (a / and :op1 (e / economy) :op2 (a2 / asset :mod (f / finance)))))))
(c / claim-01 :arg0 (g / government-organization :name (n / name :op1 "Pentagon")) :arg1 (p / plan-01 :arg0 (g2 / government-organization :arg0-of (g3 / govern-01 :arg1 (c2 / country :name (n2 / name :op1 "N-A")))) :arg1 (s / set-up-03 :arg0 (g4 / government-organization) :arg1 (b / base :mod (a / air)) :arg1-of (c3 / cause-01 :arg0 (s2 / support-01 :arg1 (p2 / person :name (n3 / name :op1 "Bashar" :op2 "Assad") :arg0-of (h / have-org-role-91 :arg1 (c4 / country) :arg2 (p3 / president))))))))
(a / announcement :arg0 (o / organization :name (n / name :op1 "Google.org") :part-of (c / company :mod (i / internet)) :mod (c2 / charity)) :arg1 (t / thing :arg1-of (a2 / announce-01)))
(s / say-01 :arg0 (p / person :quant 10 :arg1-of (r / republican)) :arg1 (a / agree-01 :arg0 (p2 / person) :arg1 (i / immigrate-01) :arg2 (p3 / person :name (n / name :op1 "Trump"))))
(a / and :op1 (h / hats :arg1 (a2 / and :op1 (n / nail :name (n2 / name :op1 (h2 / hats))) :op2 (n3 / nail :name (n4 / name :op1 (w / white)))) :location (f / foot :part-of (a3 / and))) :op2 (t / train-01 :arg0 (a4 / and) :arg2 (f2 / foot :part-of (a5 / and))))
(a / and :op1 (r / read-01 :arg0 (i / i) :arg1 (s / script)) :op2 (s2 / say-01 :arg0 (h / he) :arg1 (l / like-01 :arg0 (h2 / he) :arg1 (s3 / sad-02 :arg1 (h3 / he)))))
(a / and :op1 (r / read-01 :arg0 (i / i) :arg1 (s / script)) :op2 (s2 / say-01 :arg0 (h / he) :arg1 (l / like-01 :arg0 (h2 / he) :arg1 (s3 / sad-02 :arg1 (h3 / he)))))
(d / demonstrate-01 :arg0 (s / state-01 :arg0 (o / organization :name (n / name :op1 "Slavia"))) :arg1 (t / this) :time (p / prior :op1 (s2 / state-01 :arg0 (p2 / person :arg0-of (h / have-org-role-91 :arg1 (c / country :name (n2 / name :op1 "N-A")) :arg2 (p3 / proceeding-02 :mod (c2 / court)))) :arg1 (p4 / pay-01 :arg0 (c3 / club :name (n3 / name :op1 (v / vr?ovice) :op2 (c4 / club) :op3 (c5 / club))) :arg1 (t2 / tens :consist-of (m / millions :arg1-of (o2 / own-01 :arg0 (c6 / crowns))))))) :mod (a / also))
(a / agree-01 :arg0 (a2 / and :op1 (p / person :arg0-of (h / have-rel-role-91 :arg1 (i / i) :arg2 (p2 / partner))) :op2 (p3 / person :arg0-of (h2 / have-rel-role-91 :arg1 (i2 / i) :arg2 (p4 / partner))) :op3 (p5 / person :arg0-of (h3 / have-rel-role-91 :arg1 (i3 / i) :arg2 (p6 / partner))) :op4 (p7 / person :arg0-of (h4 / have-rel-role-91 :arg1 (i4 / i) :arg2 (p8 / partner))) :op5 (p9 / person :arg0-of (h5 / have-rel-role-91 :arg1 (i5 / i) :arg2 (p10 / partner))) :op6 (p11 / person :arg0-of (h6 / have-rel-role-91 :arg1 (i6 / i) :arg2 (p12 / partner))) :op6 (p13 / person :arg0-of (h7 / have-rel-role-91 :arg1 (i7 / i) :arg2 (p14 / partner))) :op6 (p15 / person :arg0-of (h8 / have-rel-role-91 :arg1 (i8 / i) :arg2 (p16 / partner))) :op6 (p17 / person :arg0-of (h9 / have-rel-role-91 :arg1 (i9 / i) :arg2 (p18 / partner))) :op6 (p19 / person :arg0-of (h10 / have-rel-role-91 :arg1 (i10 / i) :arg2 (p20 / partner))) :op6 (p21 / person :arg0-of (h11 / have-rel-role-91 :arg1 (i11 / i) :arg2 (p22 / partner))) :op6 (p23 / person :arg0-of (h12 / have-rel-role-91 :arg1 (i12 / i) :arg2 (p24 / partner))) :op6 (p25 / person :arg0-of (h13 / have-rel-role-91 :arg1 (i13 / i) :arg2 (p26 / partner))) :op6 (p27 / person :arg0-of (h14 / have-rel-role-91 :arg1 (i14 / i) :arg2 (p28 / partner))) :op6 (p29 / person :arg0-of (h15 / have-rel-role-91 :arg1 (i15 / i) :arg2 (p30 / partner))) :op7 (p31 / person :arg0-of (h16 / have-rel-role-91 :arg1 (i16 / i) :arg2 (p32 / partner)))))
(k / know-01 :arg0 (w / we) :arg1 (p / prosecute-01 :polarity - :arg0 (p2 / police) :arg1 (w2 / we) :arg2 (t / this)))
(k / know-01 :arg0 (w / we) :arg1 (p / prosecute-01 :polarity - :arg0 (p2 / police) :arg1 (w2 / we) :arg2 (t / this)))
(m / multi-sentence :snt1 (p / possible-01 :arg1 (c / calculator :arg0 (y / you) :arg1 (b / bmi :poss (y2 / you)) :location (h / here))) :snt2 (1 / 1d0zqdv :quant 1 :mod (u / usa.gov)))
(c / cause-01 :arg0 (g / get-01 :polarity - :arg0 (w / we) :arg1 (a / answer-01)) :arg1 (r / request-01 :arg0 (w2 / we) :arg1 (l / leave-17 :arg1 (q / quota) :arg3 (t / text :mod (f / final)))))
(a / and :op1 (o / obligate-01 :arg1 (i / i) :arg2 (t / think-01 :arg0 (i2 / i) :arg1 (t2 / theory :mod (a2 / another) :topic (d / disappearance :poss (t3 / they))))) :op2 (r / realize-01 :arg0 (i3 / i) :arg1 (a3 / and :op1 (h / hide-01 :arg1 (i4 / it) :location (s / somewhere :mod (e / else))) :op2 (p / possible-01 :arg1 (c / come-01 :arg1 (d2 / danger) :arg4 (a4 / anywhere))) :time (p2 / possible-01 :polarity - :arg1 (s2 / see-01 :arg0 (t4 / they) :arg1 (i5 / it)))) :time (t5 / then)))
(a / and :op1 (b / be-located-at-91 :arg1 (p / person :name (n / name :op1 "Trent")) :arg2 (t / there) :duration (t2 / temporal-quantity :quant (N / N-A) :unit (y / year))) :op2 (h / have-03 :arg0 (h2 / he) :arg1 (s / side :mod (g / great)) :purpose (c / coach :arg0 (h3 / he) :arg1 (l / lose-02 :polarity - :arg0 (h4 / he) :arg1 (l2 / lose-02 :arg0 (h5 / he) :arg1 (l3 / lose-02)))) :arg0-of (c2 / cause-01 :arg1 (s2 / shock-01 :polarity - :arg0 (l4 / lose-02) :arg1 (h6 / he) :degree (b2 / bit)))))
(i / important :degree (s / so) :domain (s2 / stay-01 :arg1 (y / you) :manner (t / together) :time (n / now)))
(h / have-concession-91 :arg1 (r / remain-01 :arg1 (i / it) :arg3 (s / steady) :arg3 (a / about :op1 (p / percentage-entity :value (N / N-A)))))
(a / agree-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg2 (p2 / person :arg1-of (e / expert-01)))) :arg1 (a2 / and :op1 (e2 / effective-04 :arg0 (o / oil :mod (g / grape)) :degree (m / more) :compared-to (v / vitamin)) :op2 (e3 / effective-04 :arg0 (o2 / oil) :degree (m2 / more) :compared-to (v2 / vitamin))))
(a / and :op1 (b / booming :arg1 (s / shopping :duration (o / over :op1 (t / temporal-quantity :quant (N / N-A) :unit (d / decade))))) :op2 (t2 / turn-02 :arg1 (s2 / street :quant (m / many) :arg1-of (i / include-91 :arg2 (s3 / street :arg1-of (h / high-02) :poss (c / country :name (n / name :op1 "Britain"))))) :arg2 (t3 / town :mod (d2 / distance-quantity :quant (N2 / N-A) :unit (m2 / meter)))))
(s / say-01 :arg0 (p / person :arg0-of (r / research-01) :arg0-of (l / lead-02 :arg1 (a / and :op1 (p2 / person :name (n / name :op1 "Chih-Cheng" :op2 "Hsu")) :op2 (c / colleagues))) :arg0-of (r2 / research-01)) :arg1 (c2 / contrast-01 :arg2 (r3 / reduce-01 :polarity - :arg0 (a2 / and :op1 (b / better :mod (g / good :degree (m / more)) :mod (t / this)) :op2 (l2 / level :arg1-of (i / improve-01))) :arg1 (r4 / rate-entity-91 :arg1 (r5 / rate :mod (m2 / mortality)) :arg2 (t2 / temporal-quantity :quant (N / N-A) :unit (y / year))))))
(c / contrast-01 :arg1 (p / possible-01 :arg1 (e / expect-01 :arg1 (m / monitor-01 :arg0 (p2 / person :arg0-of (h / have-org-role-91 :arg1 (g / government-organization :name (n / name :op1 "Fed")) :arg2 (o / official))) :arg1 (d / develop-01 :location (e2 / elsewhere)) :mod (o2 / only :polarity -)))) :arg2 (p3 / possible-01 :arg1 (e3 / expect-01 :arg1 (m2 / monitor-01 :arg0 (p4 / person :arg0-of (h2 / have-org-role-91 :arg1 (g2 / government-organization) :arg2 (o3 / official))) :arg1 (d2 / develop-01 :location (e4 / elsewhere)) :mod (a / also)) :arg1-of (c2 / contrast-01 :arg2 (c3 / consult-01 :arg0 (p5 / person) :arg1 (a2 / and :op1 (b / block :mod (c4 / central) :mod (c5 / central)) :op2 (p6 / person :arg1-of (e5 / expert-01))) :purpose (g3 / get-01 :arg0 (p7 / person) :arg1 (r / read-01 :arg1 (e6 / economy :mod (g4 / globe)) :manner (g5 / good :degree (m3 / more)))) :mod (a3 / also))))))
(p / possible-01 :polarity - :arg1 (d / do-02 :arg0 (i / i) :arg1 (t / that)))
(h / hint :arg0 (p / person :name (n / name :op1 "Ben" :op2 "S." :op3 "Bernanke") :arg0-of (h2 / have-org-role-91 :arg1 (g / government-organization :name (n2 / name :op1 "Fed")))) :arg1 (p2 / possible-01 :arg1 (t / trigger-01 :arg0 (e / expand-01 :arg1 (e2 / expand-01 :arg1 (m / money))) :arg1 (m2 / market :location (a / around :op1 (g2 / globe))))) :mod (m3 / mere))
(h / hint :arg0 (p / person :name (n / name :op1 "Ben" :op2 "S." :op3 "Bernanke") :arg0-of (h2 / have-org-role-91 :arg1 (g / government-organization :name (n2 / name :op1 "Fed")))) :arg1 (p2 / possible-01 :arg1 (t / trigger-01 :arg0 (e / expand-01 :arg1 (e2 / expand-01 :arg1 (m / money))) :arg1 (m2 / market :location (a / around :op1 (g2 / globe))))) :mod (m3 / mere))
(a / and :op1 (r / rich) :op2 (s / succeed-01) :op3 (r2 / rely-01 :arg1-of (r3 / rely-01 :arg1-of (p / possible-01))))
(s / say-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (l / location :name (n / name :op1 "Islington" :op2 "North")) :arg2 (m / mp))) :arg1 (a / and :op1 (a2 / annoy-01 :arg1 (p2 / person :arg0-of (h2 / have-org-role-91 :arg1 (l2 / location :name (n2 / name :op1 "Islington" :op2 "North")) :arg2 (m2 / mp))) :degree (t / too)) :op2 (r / refrains :arg0 (p3 / person) :arg1 (a3 / and :op1 (' / '') :op2 (t2 / trade-01) :mod (b / both))) :arg1-of (i / instead-of-91 :arg2 (f / focus-01 :arg0 (p4 / person) :arg2 (f2 / focus-01 :arg0 (p5 / person) :arg2 (i2 / issue-02 :mod (s2 / serious) :example (a4 / and :op1 (p6 / poverty) :op2 (i3 / inequality) :op3 (t3 / thing :arg2-of (f3 / face-01 :arg0 (p7 / person) :arg1 (p8 / person :mod (y / young)))))))))))
(n / night :ord (o / ordinal-entity :value 1 :range (s / since :op1 (h / have-03 :arg0 (h2 / he) :arg1 (h3 / hits :quant 4) :prep-against (o2 / organization :name (n2 / name :op1 "Seattle" :op2 "Mariners")) :time (d / date-entity :month 7 :day 6)))) :domain (i / it))
(o / obligate-01 :arg2 (d / direct-01 :arg1 (p / percentage-entity :value (N / N-A)) :arg2 (r / remedying :arg1 (d2 / damage-01 :arg1-of (f / follow-01 :arg2 (o2 / or :op1 (m / mine-01) :op2 (f2 / fund-01 :arg1 (s / service :purpose (r2 / rescue-01) :poss (i / i)))))))))
(a / at-least :prep-for (s / some))
(a / and :op1 (s / suffer-01 :arg0 (a2 / agency :mod (t / travel-01)) :arg1 (l / lose-02 :arg1-of (s2 / significant-02))) :op2 (p / possible-01 :arg1 (g / go-01 :arg1 (p2 / person :arg0-of (h / have-org-role-91 :arg1 (a3 / agency))) :arg4 (p3 / person :arg0-of (h2 / have-org-role-91 :arg1 (a4 / agency))) :mod (e / even))) :op3 (h3 / have-condition-91 :arg1 (p4 / possible-01 :arg1 (g2 / go-01 :arg1 (f / finance :poss (a5 / agency)) :mod (e2 / even)) :arg2 (c / condition :mod (g3 / good)))) :prep-in (c2 / case :mod (s3 / such)))
(n / note-01 :mode (i / imperative) :arg0 (n2 / note) :arg1 (s / shut-down-05 :arg1 (p / person :name (n3 / name :op1 "Anibal" :op2 "Sanchez") :arg0-of (h / have-org-role-91 :arg1 (o / organization) :arg3 (l / lead-02 :arg0 (p2 / person)))) :arg3 (s2 / strain :location (s3 / shoulder :part-of (p3 / person)))))
(s / say-01 :arg0 (p / police) :arg1 (d / drive-01 :arg0 (p2 / person) :direction (a / away) :manner (s2 / stop-01 :polarity - :arg1 (h / help-01 :arg0 (p3 / person) :arg1 (p4 / person :arg1-of (i / injure-01) :arg1-of (i2 / injure-01))))))
(c / contrast-01 :arg1 (p / provide-01 :polarity - :arg0 (p2 / person :arg0-of (h / have-org-role-91 :arg1 (p3 / panel) :arg2 (m / member))) :arg1 (p4 / person :arg0-of (h2 / have-org-role-91 :arg1 (p5 / panel) :arg2 (m2 / member)))) :arg2 (i / include-01 :arg1 (p6 / person :quant (s / some) :arg1-of (i2 / include-91 :arg2 (p7 / person :arg0-of (d / declare-02 :arg1 (i3 / industry) :mod (a / also)) :arg0-of (d2 / declare-02 :arg1 (i4 / industry) :mod (a2 / also))))) :arg2 (p8 / person)))
(r / reverse-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (g / government-organization :name (n / name :op1 "Fed")) :arg2 (o / official))) :arg1 (c / cut-02 :mod (t / that)) :time (l / late :degree (m / more)))
(a / and :op1 (f / fire-02 :polarity - :arg0 (t / they) :arg1 (i / i) :time (n / now)) :op2 (c / check-01 :polarity - :arg0 (t2 / they) :time (a2 / after :op1 (n2 / now) :quant (t3 / temporal-quantity :quant (N / N-A) :unit (y / year)))))
(s / say-01 :arg1 (a / and :op1 (p / put-03 :arg1 (a2 / and :op1 (h / hammer :poss (t / they)) :op2 (p2 / paintbrushes :poss (t2 / they))) :arg2 (f / favour :arg0 (t3 / they) :arg1 (w / work-01 :arg0 (t4 / they) :location (h2 / home :poss (t5 / they))))) :op2 (p3 / paintbrushes :arg0 (t6 / they) :arg1 (w2 / work-01 :arg0 (t7 / they) :location (h3 / home :poss (t8 / they) :location (h4 / home :poss (t9 / they)))))))
(a / argue-01 :arg0 (p / person :arg0-of (h / have-rel-role-91 :arg1 (p2 / person :name (n / name :op1 "Maksimovic")) :arg2 (l / lawyer))) :arg1 (e / evidence-01 :polarity - :arg0-of (e2 / evidence-01 :arg1 (a2 / and :op1 (a3 / attempt-01 :arg0 (h2 / he) :arg1 (p3 / possess-01 :arg0 (h3 / he) :arg1 (a4 / all :arg1-of (i / include-91 :arg2 (i2 / it))))) :op2 (p4 / possible-01 :arg1 (b / be-located-at-91 :arg1 (h4 / he) :arg2 (u / under :op1 (t / thing :arg2-of (h5 / have-purpose-91 :arg1 (i3 / innocent-01))))))))) :concession (f / face-01 :arg0 (l2 / lawyer) :arg1 (s / sentence-01 :arg1 (l3 / life :quant (q / quantity :mod (c / commerce))) :arg2 (a5 / attempt-01 :arg1 (p5 / possess-01 :arg1 (c2 / cocaine :quant (q2 / quantity :mod (c3 / commerce))))))))
(c / contrast-01 :arg2 (s / say-01 :arg0 (p / person :name (n / name :op1 "Chalasani")) :arg1 (p2 / possible-01 :arg1 (h / have-03 :arg0 (p3 / person :mod (c2 / country :name (n2 / name :op1 "N-A"))) :arg1 (a / advantage :quant (s2 / some) :topic (t / technique :mod (t2 / that)))))))
(s / show-01 :arg1 (t / this) :arg2 (e / escalation :arg1 (e2 / event)))
(s / say-01 :arg0 (n / no-one) :arg1 (w / word :arg1-of (w2 / word-01)) :time (f / finish-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg2 (c / chairman)))))
(f / finish-01 :arg1 (c / career :poss (i / i) :prep-as (o / officer :mod (r / railway))) :time (e / early :degree (m / more) :compared-to (s / start-01 :arg0 (o2 / officer))))
(f / finish-01 :arg1 (c / career :poss (i / i) :prep-as (o / officer :mod (r / railway))) :time (e / early :degree (m / more) :compared-to (s / start-01 :arg0 (o2 / officer))))
(m / multi-sentence :snt1 (a / and :op1 (i / individual :domain (i2 / it) :mod (r / really)) :op2 (d / depend-01 :arg0 (i3 / it) :arg1 (d2 / difficulty :arg1-of (s / specific-02) :arg1-of (s2 / suffer-01 :arg0 (p / person :arg0-of (h / have-rel-role-91 :arg2 (p2 / patient))))))) :snt2 (h2 / have-org-role-91 :arg0 (p3 / person :name (n / name :op1 "Martina" :op2 "Kövári")) :arg1 (o / organization :name (n2 / name :op1 "Physiotherapy" :op2 "and" :op3 "Physical" :op4 "Medicine" :op5 "Clinic" :op6 "of" :op7 "the" :op8 "Faculty" :op9 "Hospital")) :arg2 (c / consultant :mod (s3 / senior))))
(d / disagree-01 :arg0 (c / company :arg0-of (i / insure-02)) :arg2 (t / thing :arg2-of (o / obligate-01)) :purpose (m / meet-01 :arg0 (c2 / company) :arg1 (c3 / claim-01 :arg1 (t2 / thing :arg1-of (c4 / claim-01 :arg1-of (a / agree-01)) :mod (e / even)))))
(d / disagree-01 :arg0 (c / company :arg0-of (i / insure-02)) :arg2 (t / thing :arg2-of (o / obligate-01)) :purpose (m / meet-01 :arg0 (c2 / company) :arg1 (c3 / claim-01 :arg1 (t2 / thing :arg1-of (c4 / claim-01 :arg1-of (a / agree-01)) :mod (e / even)))))
(d / disagree-01 :arg0 (c / company :arg0-of (i / insure-02)) :arg2 (t / thing :arg2-of (o / obligate-01)) :purpose (m / meet-01 :arg0 (c2 / company) :arg1 (c3 / claim-01 :arg1 (t2 / thing :arg1-of (c4 / claim-01 :arg1-of (a / agree-01)) :mod (e / even)))))
(s / say-01 :arg0 (p / person :name (n / name :op1 "Johnson")) :arg1 (r / recommend-01 :arg1 (u / use-01 :arg1 (f / fee :mod (l / licence)) :arg2 (m / make-01 :arg1 (p2 / programmes :mod (s2 / sort) :arg1-of (m2 / make-01 :polarity - :arg0 (p3 / person :mod (o / other) :arg0-of (b / broadcast-01))))))))
(m / multi-sentence :snt1 (c / corrected :arg1 (s / story :mod (t / this)) :purpose (r / reflect-01 :arg1 (s2 / story) :arg2 (s3 / say-01 :arg0 (p / police) :arg1 (a / and :op1 (s4 / say-01 :arg0 (p2 / police) :arg1 (m2 / make-01 :arg0 (p3 / person :name (n / name :op1 "Lamb")) :arg1 (c2 / call-02 :quant 911) :time (a2 / after :op1 (p4 / person :name (n2 / name :op1 "Schmidt") :arg0-of (h / have-org-role-91 :arg2 (s5 / shooting))))) :time (n3 / now)) :op2 (r2 / refer-01 :arg0 (p5 / person) :arg1 (p6 / person :name (n4 / name :op1 "Prentiss")) :arg2 (p7 / person :arg0-of (h2 / have-rel-role-91 :arg1 (p8 / person) :arg2 (w / wife))) :time (c3 / call-02 :quant 911)))))) :snt2 (i / indicate-01 :polarity - :arg1 (m3 / marry-01 :arg1 (p9 / person :quant 2) :time (e / ever))))
(m / morning :mod (g / good))
(a / and :op1 (m / man :mod (t / thirty)) :op2 (w / woman :quant 5))
(s / suffer-01 :arg0 (p / person :name (n / name :op1 "Moreno")) :arg1 (l / leg :mod (b / break-01)) :time (p2 / play-01 :arg0 (p3 / person) :arg2 (c / country :name (n2 / name :op1 "Mexico")) :prep-against (c2 / country :name (n3 / name :op1 "Holland") :location (c3 / cup :quant 2014 :mod (w / world)))))
(s / say-01 :arg0 (p / person :name (n / name :op1 "Veronique" :op2 "Laury") :arg0-of (h / have-org-role-91 :arg1 (o / organization :name (n2 / name :op1 "Kingfisher")) :arg2 (e / executive :mod (n3 / new) :mod (n4 / new))) :arg0-of (o2 / own-01 :arg1 (c / chain :arg0-of (i / improve-01 :arg1 (h2 / home)))) :arg0-of (h3 / have-org-role-91 :arg1 (o3 / organization :name (n5 / name :op1 "Kingfisher")) :arg2 (e2 / executive :mod (n6 / new))) :arg0-of (o4 / own-01 :arg1 (c2 / chain :arg0-of (i2 / improve-01 :arg1 (h4 / home)))) :arg0-of (h5 / have-org-role-91 :arg1 (o5 / organization) :arg2 (e3 / executive :mod (n7 / new))) :arg0-of (h6 / have-org-role-91 :arg1 (o6 / organization) :arg2 (e4 / executive :mod (n8 / new))) :arg0-of (h7 / have-org-role-91 :arg1 (o7 / organization) :arg2 (e5 / executive :mod (n9 / new))) :arg0-of (h8 / have-org-role-91 :arg1 (o8 / organization) :arg2 (e6 / executive :mod (n10 / new))) :arg0-of (h9 / have-org-role-91 :arg1 (o9 / organization) :arg2 (e7 / executive :mod (n11 / new))) :arg0-of (h10 / have-org-role-91 :arg1 (o10 / organization) :arg2 (e8 / executive :mod (n12 / new)))))
(s / say-01 :arg0 (p / person :name (n / name :op1 "Ausmus")) :arg1 (s2 / swung :arg0 (h / he) :arg1 (b / bat) :mod (w / well)))
(c / contrast-01 :arg1 (p / possible-01 :arg1 (b / boasted :arg0 (p2 / person :name (n / name :op1 "Goian")) :arg1 (c2 / cv :mod (f / football) :mod (i / interesting :degree (v / very))))) :arg2 (h / have-03 :arg0 (p3 / person) :arg1 (y / year :mod (g / good :degree (m / most)) :poss (h2 / he))))
(s / say-01 :arg0 (r / record) :arg1 (r2 / receive-01 :arg0 (c / company) :arg1 (r3 / rate-entity-91 :arg1 (m / more-than :op1 (t / temporal-quantity :quant (N / N-A) :unit (y / year))) :arg2 (t2 / temporal-quantity :quant (N2 / N-A) :unit (y2 / year)))))
(p / possible-01 :arg1 (t / think-01 :arg0 (p2 / person) :arg1 (b / be-02 :arg1 (i / i))))
(m / monitor-01 :arg0 (p / person :arg0-of (r / research-01)) :arg1 (l / level :mod (b / blood :mod (b2 / blood)) :arg0-of (r2 / reflect-01 :arg1 (l2 / level :mod (s / sugar :mod (b3 / blood))) :arg2 (l3 / level :mod (s2 / sugar :mod (b4 / blood))) :time (o / over :op1 (t / time)))) :mod (a / also))
(a / and :op1 (c / catch-01 :arg1 (i / it) :location (s / somewhere :mod (j / jar))) :op2 (b / banished :arg1 (i2 / it) :arg2 (g / garden :path (g2 / garden :path (b2 / balcony)))))
(c / contrast-01 :arg1 (a / accept-01 :arg0 (p / person :name (n / name :op1 "Wenger")) :arg1 (p2 / potential :poss (c2 / circle :mod (v / vicious)))) :arg2 (b / believe-01 :arg0 (a2 / arsenal) :arg1 (i / improve-01 :arg1 (i2 / improve-01 :arg1 (r / record :mod (i3 / injure-01) :poss (t / they)) :time (s / season :mod (l / last))))))
(r / report-01 :arg0 (a / and :op1 (p / person :name (n / name :op1 "Amy")) :op2 (p2 / person :name (n2 / name :op1 "Rogelio" :op2 "Solis"))) :arg2 (l / location :name (n3 / name :op1 "Mississippi")))
(o / or :op1 (j / jumped :arg1 (i / industry :name (n / name :op1 (d / dow)) :arg1-of (a / average-04)) :arg2 (p / point :quant 228.89)) :op2 (p2 / percentage-entity :value (N / N-A)) :op3 (p3 / percentage-entity :value (N2 / N-A)) :op4 (p4 / percentage-entity :value (N3 / N-A)))
(b / be-temporally-at-91 :arg1 (s / season :mod (t / this)) :arg2 (h / hit-01 :arg0 (p / person :name (n / name :op1 "Plouffe")) :arg1 (d / dp)) :ord (o / ordinal-entity :value 27))
(f / find-01 :arg0 (y / you) :arg1 (p / product :arg1-of (p2 / process-01 :arg0 (y2 / you) :arg1-of (p3 / process-01))))
(m / multi-sentence :snt1 (h / help-01 :arg0 (o / organization :name (n / name :op1 "Special" :op2 "Patrol" :op3 "Group")) :arg1 (d / distribute-01 :arg0 (o2 / organization) :arg1 (i / it) :location (a / around :op1 (c / city :name (n2 / name :op1 "London"))) :location (a2 / around :op1 (c2 / city :name (n3 / name :op1 "London")))) :manner (c3 / collective)) :snt2 (' / '' :arg0 (o3 / organization) :arg1 (r / rate-entity-91 :arg1 (m2 / monetary-quantity :quant 6 :unit (p / pound)) :arg2 (k / keys :mod (p2 / person :name (n4 / name :op1 "Allen")))) :arg1-of (c4 / cause-01 :arg0 (c5 / claim-01 :arg0 (o4 / organization) :arg1 (g / gain-02 :arg0 (c6 / country) :arg1 (a3 / access-01 :arg1 (b / bus :mod (a4 / advertising)) :location (p3 / planet)))))))
(p / probable :domain (h / have-03 :arg0 (i / i) :arg1 (i2 / it)))
(c / cricketer :domain (h / he) :arg1-of (s / see-01 :arg0 (w / we) :time (e / early :op1 (s2 / season :mod (t / this)))) :arg1-of (s3 / see-01 :arg0 (w2 / we) :time (e2 / early :op1 (d / date-entity :decade (N / N-A) :time-of (m / make-01 :arg0 (h2 / he) :arg1 (a / against :op1 (p / pitch :mod (e3 / email) :arg0-of (d2 / do-02 :arg1 (b / bit)))))))))
(m / multi-sentence :snt1 (a / and :op1 (f / find-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg2 (o / officer))) :arg1 (b / body) :location (i / inside :op1 (h2 / home))) :op2 (n / note-01 :arg0 (p2 / person) :arg1 (w / wish-01 :arg0 (p3 / person) :arg1 (p4 / possible-01 :arg1 (t / take-01 :arg0 (i2 / i) :arg1 (i3 / it) :direction (b2 / back) :direction (b3 / back) :arg1-of (l / legal-02)))))) :snt2 (c / cause-01 :arg1 (s / sorry-01 :arg1 (i4 / i) :arg2 (w2 / wish-01 :arg0 (i5 / i) :arg1 (p5 / possible-01 :arg1 (t2 / take-01 :arg0 (i6 / i) :arg1 (i7 / it) :direction (b4 / back) :direction (b5 / back) :arg1-of (c2 / cause-01 :arg0 (l2 / love-01 :arg0 (i8 / i) :arg1 (a2 / and :op1 (p6 / person :name (n2 / name :op1 "Amy")) :op2 (w3 / woman) :mod (o2 / only) :arg0-of (l3 / love-01 :arg1 (i9 / i) :time (e / ever))))))))) :op3 (r / read-01 :arg0 (p7 / person :arg0-of (h3 / have-org-role-91 :arg2 (a3 / authority :mod (l4 / letter)))) :arg1 (s2 / say-01 :arg0 (p8 / person :arg0-of (h4 / have-org-role-91 :arg1 (l5 / letter) :arg2 (a4 / authority))) :arg1 (s3 / sign-01 :arg0 (l6 / lamb))))))
(a / and :op1 (f / front :domain (i / immigrate-01) :time (b / before :op1 (n / now) :quant (b2 / between :op1 (t / temporal-quantity :quant (N / N-A) :unit (m / month)) :op2 (t2 / temporal-quantity :quant (N2 / N-A) :unit (m2 / month))))) :op2 (b3 / be-located-at-91 :arg1 (i2 / immigrate-01) :arg2 (u / under :op1 (t3 / temporal-quantity :quant (N3 / N-A) :unit (m3 / month)))) :time (s / since :op1 (c / call-01 :arg0 (p / person :name (n2 / name :op1 "Donald" :op2 "Trump")) :arg1 (p2 / person :arg0-of (i3 / immigrate-01) :source (c2 / country :name (n3 / name :op1 "Mexico"))) :arg2 (c3 / campaign-01 :arg0 (p3 / person)))))
(t / threaten-01 :arg0 (c / company :arg0-of (i / insure-02)) :arg1 (s / stop-01 :arg0 (c2 / company) :arg1 (a / agency :mod (t2 / travel-01) :mod (p / product :name (n / name :op1 "N-A")))) :condition (p2 / pass-01 :arg1 (a2 / amend-01)) :time (a3 / already))
(c / compromise-01 :arg0 (a / and :op1 (c2 / cost-01) :op2 (s / safe-01)) :arg1 (i / it) :time (a2 / always))
(l / love-01 :arg0 (i / i) :arg1 (a / and :op1 (p / person :name (n / name :op1 "Amy")) :op2 (s / she) :mod (o / only) :arg0-of (l2 / love-01 :arg1 (i2 / i) :time (e / ever)) :domain (s2 / she)))
(l / love-01 :arg0 (i / i) :arg1 (a / and :op1 (p / person :name (n / name :op1 "Amy")) :op2 (s / she) :mod (o / only) :arg0-of (l2 / love-01 :arg1 (i2 / i) :time (e / ever)) :domain (s2 / she)))
(a / and :op1 (h / hot :arg1 (w / weather :location (l / location :name (n / name :op1 "Delhi")))) :op2 (e / expect-01 :arg1 (d / demand-01 :arg1 (m / match-03 :quant 5) :arg1-of (p / possible-01))))
(p / produce-01 :arg0 (p2 / produce-01 :time (f / future)) :arg1 (s / sell-01 :arg1 (s2 / sell-01)))
(a / and :op1 (a2 / and :op1 (g / good :domain (p / person :arg0-of (h / have-rel-role-91 :arg2 (c / comrade)))) :op2 (p2 / person :arg0-of (h2 / have-rel-role-91 :arg2 (c2 / comrade))) :op3 (p3 / person :arg0-of (h3 / have-rel-role-91 :arg1 (i / i) :arg2 (s / superintendent))) :op4 (p4 / person :arg0-of (h4 / have-rel-role-91 :arg1 (i2 / i) :arg2 (s2 / superintendent))) :op5 (p5 / person :arg0-of (h5 / have-rel-role-91 :arg1 (i3 / i) :arg2 (s3 / superintendent))) :op6 (p6 / person :arg0-of (h6 / have-rel-role-91 :arg1 (i4 / i) :arg2 (s4 / superintendent))) :op7 (p7 / person :arg0-of (h7 / have-rel-role-91 :arg1 (i5 / i) :arg2 (s5 / superintendent))) :op7 (p8 / person :arg0-of (h8 / have-rel-role-91 :arg1 (i6 / i) :arg2 (r / respectfully)))))
(k / know-01 :arg0 (p / person) :arg1 (n / nothing :mod (t / this) :topic (h / horse)))
(k / know-03 :arg0 (f / family :mod (t / this) :mod (l / large)) :arg1 (t2 / thing :manner-of (e / economise)))
(r / reduce-01 :arg1 (p / puzzle-01 :arg1-of (r2 / reduce-01)) :concession (r3 / rate-entity-91 :arg1 (p2 / percentage-entity :value (N / N-A)) :arg2 (t / temporal-quantity :quant (N2 / N-A) :unit (y / year))) :arg0-of (a / affect-01 :arg1 (t2 / thing :arg1-of (e / effect-03) :mod (g / ground) :mod (o / or :op1 (h / heavy) :op2 (l / large)) :arg1-of (b / begin-01 :arg1-of (b2 / begin-01 :arg1-of (n / november))))))
(m / multi-sentence :snt1 (w / want-01 :arg0 (p / person :name (n / name :op1 "Corbyn") :arg1-of (m2 / mean-01 :arg2 (i / image :mod (t / touchy-feely)))) :arg1 (s / swim-01 :arg0 (p2 / person))) :snt2 (a / and :op1 (t2 / touch-01 :arg0 (i2 / image :mod (t3 / touchy-feely)) :arg1 (m3 / message :topic (r / remain-01 :arg1 (a2 / and :op1 (m4 / media :mod (s2 / social)) :op2 (p3 / perspective :mod (p4 / perspective)))) :op2 (h / hotbed :arg1 (a3 / and :op1 (p5 / perspective) :op2 (b / betrayal))) :mod (e / especially)))))
(a / and :op1 (d / drop-05 :arg0 (s / support-01 :arg0 (s2 / she) :arg1 (m / man)) :arg1 (p / precedent :polarity -)) :op2 (t / trails :arg0 (p2 / person :name (n / name :op1 "Sanders")) :arg1 (s3 / she) :arg2 (p3 / point :quant 5) :mod (o / only)))
(a / and :op1 (d / drop-05 :arg0 (s / support-01 :arg0 (s2 / she) :arg1 (m / man)) :arg1 (p / precedent :polarity -)) :op2 (t / trails :arg0 (p2 / person :name (n / name :op1 "Sanders")) :arg1 (s3 / she) :arg2 (p3 / point :quant 5) :mod (o / only)))
(b / be-located-at-91 :polarity - :arg1 (c / country :name (n / name :op1 "N-A")) :arg2 (c2 / country :name (n2 / name :op1 "N-A")))
(o / obligate-01 :arg1 (c / company) :arg2 (f / find-01 :arg0 (c2 / company) :arg1 (c3 / customer :mod (n / new)) :arg1-of (q / quick-02)))
(m / mean-01 :arg1 (i / it) :arg2 (a / and :op1 (p / possible-01 :arg1 (s / shop :poss (p2 / person :quant (m2 / more))) :medium (o / online)) :op2 (p3 / possible-01 :arg1 (d / do-02 :arg0 (p4 / person) :arg1 (i2 / it) :manner (c / contexts :arg1-of (d2 / differ-02) :example (s2 / sofa :arg1 (p5 / person)))))))
(c / contrast-01 :arg1 (a / alluded :arg0 (p / person :name (n / name :op1 "Prince") :arg0-of (r / rival-01 :arg1 (m / movement-07))) :arg1 (m2 / movement-07)) :arg2 (i / introduce-02 :arg0 (p2 / person) :arg1 (n2 / nominees :mod (a2 / album)) :time (a3 / awards :mod (g / grammy))))
(c / contrast-01 :arg1 (a / alluded :arg0 (p / person :name (n / name :op1 "Prince") :arg0-of (r / rival-01 :arg1 (m / movement-07))) :arg1 (m2 / movement-07)) :arg2 (i / introduce-02 :arg0 (p2 / person) :arg1 (n2 / nominees :mod (a2 / album)) :time (a3 / awards :mod (g / grammy))))
(s / stop-01 :arg1 (t / thing :arg1-of (a / announce-01 :arg0 (o / organization :name (n / name :op1 "Brno" :op2 "Public" :op3 "Transport" :op4 "Comapny"))) :mod (n2 / new)))
(o / or :mode (i / interrogative) :op1 (s / see-01 :arg0 (y / you) :arg1 (y2 / you)) :op2 (i2 / involve-01 :arg1 (y3 / you) :arg2 (e / event :mod (n / news))))
(s / say-01 :arg0 (g / government-organization :arg0-of (g2 / govern-01)) :arg1 (s2 / save-02 :arg0 (t / this) :arg1 (m / money) :arg2 (i / introduce-02 :arg1 (s3 / system :mod (e / electronic)))))
(c / call-on-05 :arg0 (r / resolution) :arg1 (p / person :arg0-of (l / lead-02 :arg1 (c2 / continent :name (n / name :op1 "N-A")))) :arg2 (c3 / consider-02 :arg0 (p2 / person) :arg1 (t / thing :arg2-of (s / sanction-02 :arg1 (a / and :op1 (p3 / politician) :op2 (p4 / person :arg0-of (h / have-org-role-91 :arg3 (j / judge-01))) :op3 (p5 / person :arg0-of (h2 / have-org-role-91 :arg3 (j2 / judge-01)) :arg1-of (i / involve-01 :arg2 (p6 / persecution :mod (p7 / politics)))))))))
(c / contrast-01 :arg1 (a / and :op1 (l / last-01 :arg1 (p / percentage-entity :value (N / N-A)) :arg2 (t / temporal-quantity :quant (N2 / N-A) :unit (y / year)) :compared-to (r / rate-01 :arg1 (i / it) :arg2 (r2 / rate-01 :arg1 (i2 / it) :arg2 (- / -lrb- :quant 317,000)))) :op2 (t2 / tuesday :arg1 (-2 / -rrb- :quant 283,000) :mod (l2 / last))) :arg2 (b / be-located-at-91 :arg1 (f / figure :poss (i3 / it)) :arg2 (b2 / behind :op1 (p2 / product-of :op1 317,000 :op2 343,000))))
(r / recommend-01 :arg1 (o / or :op1 (w / wait-01 :arg1 (p / person :arg0-of (u / use-01)) :arg2 (d / die-01 :arg1 (p2 / person))) :op2 (a / and :op1 (w2 / wait-01 :arg1 (p3 / person)) :op2 (u2 / upgrade-02 :arg0 (p4 / person)) :op3 (u3 / upgrade-02 :arg0 (p5 / person))) :mod (e / either)) :arg2 (g / get-05 :arg1 (p6 / person) :arg2 (a2 / around)))
(a / allow-01 :arg0 (p / possibilities :mod (i / incredible) :arg1-of (o / offer-01 :arg0 (a2 / and :op1 (a3 / arcs) :op2 (a4 / arcs)))) :arg1 (r / respond-01 :arg0 (y / you) :arg1 (a5 / and :op1 (c / change-01 :arg0 (y2 / you) :arg1 (t / thing :arg1-of (r2 / require-01))) :op2 (r3 / reduce-01 :arg1 (t2 / time :mod (i2 / idle))) :op3 (r4 / reduce-01 :arg1 (t3 / time :mod (i3 / idle))) :op4 (r5 / reconfiguration :mod (p2 / productive :degree (m / more)))) :arg1-of (q / quick-02)))
(o / oppose-01 :arg0 (i / it) :arg1 (r / rule :mod (r2 / racing)))
(g / gain-02 :arg0 (w / wage-01) :arg1 (s / sign :arg1-of (p / picking)))
(h / have-concession-91 :arg1 (e / expensive :domain (t / that) :degree (m / more :quant (a / about :op1 (1 / 1/2)))))
(h / have-concession-91 :arg1 (e / expensive :domain (t / that) :degree (m / more :quant (a / about :op1 (1 / 1/2)))))
(d / drop-01 :arg1 (r / rate :mod (e / employ-01 :polarity -)) :arg4 (p / percentage-entity :value (N / N-A)) :time (a / and :op1 (a2 / after :op1 (n / now) :quant (m / more-than :op1 (t / temporal-quantity :quant (N2 / N-A) :unit (y / year)))) :op2 (l / level :arg1-of (n2 / near-02 :arg2 (l2 / level :arg1-of (c / consider-01 :arg0 (g / government-organization :name (n3 / name :op1 "Fed"))) :arg1-of (c2 / consider-01 :arg0 (g2 / government-organization :name (n4 / name :op1 "Fed"))))))))
(r / recommend-01 :arg0 (s / she) :arg1 (r2 / role :poss (l / lady :ord (o / ordinal-entity :value 1) :poss (c / country :name (n / name :op1 "Argentina") :mod (c2 / country :name (n2 / name :op1 "Argentina"))))))
(s / stand-01 :arg1 (s2 / standing :arg1-of (s3 / stand-01 :arg2 (a / and :op1 (b / bank) :op2 (p / person :arg0-of (h / have-org-role-91 :arg1 (c / country :name (n / name :op1 "union")) :arg2 (c2 / capital))) :op3 (p2 / person :arg0-of (h2 / have-org-role-91 :arg1 (c3 / country :name (n2 / name :op1 "Germany")) :arg2 (c4 / capital))) :op4 (p3 / person :arg0-of (h3 / have-org-role-91 :arg1 (o / organization) :arg2 (c5 / capital))) :op5 (p4 / person :arg0-of (h4 / have-org-role-91 :arg1 (o2 / organization) :arg2 (c6 / capital))) :op5 (p5 / person :arg0-of (h5 / have-org-role-91 :arg1 (o3 / organization) :arg2 (c7 / capital))) :op6 (p6 / person :arg0-of (h6 / have-org-role-91 :arg1 (o4 / organization) :arg2 (c8 / capital))) :op7 (p7 / person :arg0-of (h7 / have-org-role-91 :arg1 (o5 / organization) :arg2 (c9 / capital)))))) :mod (a2 / actual))
(s / say-01 :arg0 (p / person :mod (c / country :name (n / name :op1 "N-A"))) :arg1 (i / increase-01 :arg1 (s2 / say-01 :arg0 (p2 / person) :arg1 (s3 / say-01 :arg0 (p3 / person) :arg1 (s4 / say-01 :arg0 (p4 / person) :arg1 (s5 / say-01 :arg0 (p5 / person) :arg1 (s6 / say-01 :arg0 (p6 / person) :arg1 (s7 / say-01 :arg0 (p7 / person) :arg1 (s8 / say-01 :arg0 (p8 / person) :arg1 (s9 / say-01 :arg0 (p9 / person) :arg1 (s10 / say-01 :arg0 (p10 / person) :arg1 (s11 / say-01 :arg0 (p11 / person) :arg1 (s12 / say-01 :arg0 (p12 / person) :arg1 (s13 / say-01 :arg0 (p13 / person) :arg1 (s14 / say-01 :arg0 (p14 / person) :arg1 (p15 / person :name (n2 / name :op1 "Veronique" :op2 "Laury")))))))))))))))))
(s / say-01 :arg0 (p / person :mod (c / country :name (n / name :op1 "N-A"))) :arg1 (i / increase-01 :arg1 (s2 / say-01 :arg0 (p2 / person) :arg1 (s3 / say-01 :arg0 (p3 / person) :arg1 (s4 / say-01 :arg0 (p4 / person) :arg1 (s5 / say-01 :arg0 (p5 / person) :arg1 (s6 / say-01 :arg0 (p6 / person) :arg1 (s7 / say-01 :arg0 (p7 / person) :arg1 (s8 / say-01 :arg0 (p8 / person) :arg1 (s9 / say-01 :arg0 (p9 / person) :arg1 (s10 / say-01 :arg0 (p10 / person) :arg1 (s11 / say-01 :arg0 (p11 / person) :arg1 (s12 / say-01 :arg0 (p12 / person) :arg1 (s13 / say-01 :arg0 (p13 / person) :arg1 (s14 / say-01 :arg0 (p14 / person) :arg1 (p15 / person :name (n2 / name :op1 "Veronique" :op2 "Laury")))))))))))))))))
(h / have-concession-91 :arg1 (s / stress-01 :arg0 (p / person) :arg1 (s2 / solve-01 :arg1 (i / it) :duration (t / temporary) :mod (o / only))) :arg2 (p2 / praise-01 :arg0 (p3 / person :name (n / name :op1 "Dalai" :op2 "Lama")) :arg1 (t2 / try-01 :arg0 (c / country :name (n2 / name :op1 "Germany")) :arg1 (d / deal-01 :arg0 (c2 / country) :arg2 (c3 / crisis)))))
(( / ( :( (n / name) :op1 "Griffiths")
(f / find-02 :arg1 (a / affect-01 :arg0 (d / diets :mod (u / unhealthy)) :arg1 (s / system :mod (i / immune) :poss (c / child))) :arg2-of (f2 / fortunate-01 :polarity -))
(h / have-03 :arg0 (t / they) :arg1 (d / dog :arg0-of (l / live-01 :location (h2 / house :mod (g / game :name (n / name :op1 "N-A")) :arg0-of (m / mess-up-02 :arg1 (b / bayou :location (p / person :name (n2 / name :op1 "Gautier"))))))))
(c / consider-02 :mode (i / imperative) :arg0 (y / you) :arg1 (l / listing :poss (c2 / company)) :arg2 (e / exchange-01 :arg1 (s / stock :location (l2 / location :name (n / name :op1 "Prague"))) :arg1-of (r / relate-01 :arg2 (m / move-01 :arg1 (h / headquarters :poss (c3 / company))))))
(c / contribute-01 :arg0 (m / monetary-quantity :arg1-of (i / include-91 :arg2 (i2 / income :poss (i3 / it)) :arg3 (p / percentage-entity :value 16))))
(t / think-01 :polarity - :arg0 (i / i) :arg1 (r / revise-01 :arg0 (t2 / that) :arg1 (c / company :name (n / name :op1 "BBC")) :degree (a / at-all)))
(t / take-10 :arg0 (i / it) :arg1 (t2 / temporal-quantity :quant (N / N-A) :unit (d / day)))
(a / assess-01 :arg0 (s / street :source (p / political-party :name (n / name :op1 "KMT"))) :arg1 (a2 / assess-01) :time (t / then))
(s / state-01 :arg0 (p / person :name (n / name :op1 "Albert" :op2 "Einstein") :arg0-of (e / enrich-01 :arg1 (w / world))) :arg1 (w2 / world))
(c / contrast-01 :arg1 (a / ambitious :domain (w / we)) :arg2 (d / dreamers :polarity - :domain (w2 / we)))
(s / say-01 :arg0 (p / person :arg0-of (s2 / say-01 :arg1 (h / have-part-91 :arg1 (c / country :name (n / name :op1 "Germany")) :arg2 (s3 / soul :poss (p2 / person :arg0-of (h2 / have-rel-role-91 :arg1 (c2 / country) :arg2 (p3 / partner))))))) :arg1 (r / right :poss (p4 / person :arg0-of (h3 / have-rel-role-91 :arg1 (c3 / country) :arg2 (p5 / partner)))))
(a / and :op1 (a2 / aim-01 :arg0 (h / he) :arg1 (h2 / have :arg0 (h3 / he) :arg1 (d / department :mod (i / integrity) :poss (o / organization :name (n / name :op1 "Racing" :op2 "Victoria"))))) :op2 (t / tighten-01 :arg0 (h4 / he) :arg1 (c / campaign-01 :arg0 (d2 / department) :arg1 (o2 / oppose-01 :arg0 (d3 / department) :arg1 (h5 / he) :time (l / late)) :arg1-of (p / personal-02)) :arg1-of (c2 / cause-01 :arg0 (t2 / treat-03 :arg1 (p2 / person :name (n2 / name :op1 "Lady" :op2 "Tatai")) :time (d4 / day :mod (r / race))) :arg1-of (c3 / cause-01 :arg0 (t3 / treat-03 :arg1 (s / straw :mod (f / final)) :arg2 (w / wednesday))))))
(s / say-01 :arg0 (t / thing :arg1-of (s2 / state-01)) :arg1 (a / and :op1 (h / have-03 :arg0 (o / organization :name (n / name :op1 "Hewlett" :op2 "Packard" :op3 "Enterprise")) :arg1 (r / rate-entity-91 :arg1 (m / more-than :op1 (m2 / monetary-quantity :quant (5 / 50bn) :unit (d / dollar))) :arg2 (r2 / revenue :mod (a2 / amphibious)))) :op2 (f / focus-01 :arg0 (o2 / organization) :arg2 (d2 / deliver-01 :arg0 (o3 / organization) :arg1 (t2 / thing :arg2-of (s3 / solve-01 :arg1 (t3 / technology :arg1-of (i / integrate-01)))) :arg2 (c / company)))))
(m / multi-sentence :snt1 (o / obligate-01 :arg1 (a / and :op1 (p / person :name (n / name :op1 "Kokkinakis")) :op2 (p2 / person :name (n2 / name :op1 "Ryan" :op2 "Harrison") :arg0-of (h / have-org-role-91 :arg2 (p3 / president :mod (v / vice))))) :arg2 (s / separate-01 :arg0 (a2 / and :op1 (p4 / person :name (n3 / name :op1 "Wawrinka") :arg0-of (h2 / have-org-role-91 :arg2 (' / ''))) :op2 (p5 / person :name (n4 / name :op1 "Wawrinka") :arg0-of (h3 / have-org-role-91 :arg2 ('2 / '')))) :arg1 (p6 / person :name (n5 / name :op1 "Wawrinka") :arg0-of (h4 / have-org-role-91 :arg2 ('3 / ''))))) :snt2 (a3 / and :op1 (r / recommend-01 :arg1 (d / decked :arg0 (p7 / person :arg0-of (h5 / have-rel-role-91 :arg1 (p8 / person) :arg2 (k / kid))) :arg1 (p9 / person :name (n6 / name :op1 "Kyrgios")))) :op2 (r2 / recommend-01 :arg1 (d2 / decker :arg0 (i / i) :arg1 (k2 / kid)))))
(s / say-01 :arg1 (a / and :op1 (o / original) :op2 (m / molecule) :domain (d / direction :poss (p / person :name (n / name :op1 "Sokol"))) :mod (o2 / original)) :arg2 (a2 / and :op1 (l / language :name (n2 / name :op1 "N-A")) :op2 (l2 / language :name (n3 / name :op1 "N-A")) :op3 (l3 / language :name (n4 / name :op1 "N-A"))))
(o / open-01 :arg1 (c / complex) :arg4 (m / motorists) :time (d / date-entity :year (N / N-A)))
(h / have-part-91 :arg1 (o / order :mod (s / side)) :mod (e / essential) :mod (a / also))
(m / multi-sentence :snt1 (r / recommend-01 :arg1 (b / be-02 :arg1 (t / thing :mod (a / another) :prep-in (l / line :mod (c / czech))))) :snt2 (p / participate-01 :mode (i / interrogative) :arg0 (h / he) :arg1 (d / doubles :mod (s / saturday))))
(( / ( :( (n / name) :op1 "Ben" :op2 "Carson")
FAILED_TO_PARSE#Two concepts in a row.
(t / try-01 :arg0 (s / some) :arg1 (l / labeling :arg0 (s2 / some) :arg1 (h / he)))
(s / schedule-01 :arg1 (p / perform-01 :mod (f / further)) :arg3 (d / date-entity :year 2016 :month 5) :arg1-of (c / cause-01 :arg0 (i / interest :arg1-of (p2 / public-02))))
(w / waste-01 :arg0 (y / you) :arg1 (a / and :op1 (t / time :quant (l / less)) :op2 (f / fix-02 :arg1 (w2 / welds :mod (f2 / faulty)))))
(a / and :op2 (h / held :arg1 (n / number :mod (t / this)) :time (e / early)))
(s / say-01 :arg0 (o / organization :name (n / name :op1 "Deutsche")) :arg1 (f / fall-01 :arg1 (t / thing :arg1-of (p / precede-01 :arg2 (n2 / name :op1 (h / hiking)))) :time (i / immediate)))
(s / say-01 :arg0 (o / organization :name (n / name :op1 "Milan" :op2 "Urban")) :arg1 (a / and :op1 (- / -lrb- :mode (i / interrogative) :arg0 (p / person :arg0-of (h / have-org-role-91 :arg2 (m / member))) :arg1 (t / thing :arg1-of (c / conclude-01 :arg1-of (c2 / cause-01 :arg0 (a2 / and :op1 (c3 / concept :mod (e / energy) :arg1-of (u / update-01)) :op2 (e2 / et-cetera)))))) :op2 (d / decide-01 :arg0 (g / government-organization :arg0-of (g2 / govern-01)) :arg1 (l / limit-01 :arg1 (c4 / cannabis)) :time (b / before :op1 (p2 / pass-01 :arg0 (g3 / government-organization) :arg1 (l2 / law))))))
(s / suppose-02 :arg1 (m / map) :arg2 (s2 / suppose-02 :arg1 (a / and :op1 (p / person :name (n / name :op1 "Janet" :op2 "L." :op3 "Yellen") :arg0-of (h / have-org-role-91 :arg1 (g / government-organization) :arg2 (c / chairwoman))) :op2 (p2 / person :arg0-of (h2 / have-rel-role-91 :arg1 (p3 / person) :arg2 (c2 / colleagues)))) :arg2 (p4 / put-01 :arg0 (a2 / and) :arg1 (i / interest :mod (e / economy) :poss (n2 / nation)) :arg2 (a3 / above :op1 (o / other :quant (a4 / all))))))
(s / suppose-02 :arg1 (m / map) :arg2 (s2 / suppose-02 :arg1 (a / and :op1 (p / person :name (n / name :op1 "Janet" :op2 "L." :op3 "Yellen") :arg0-of (h / have-org-role-91 :arg1 (g / government-organization) :arg2 (c / chairwoman))) :op2 (p2 / person :arg0-of (h2 / have-rel-role-91 :arg1 (p3 / person) :arg2 (c2 / colleagues)))) :arg2 (p4 / put-01 :arg0 (a2 / and) :arg1 (i / interest :mod (e / economy) :poss (n2 / nation)) :arg2 (a3 / above :op1 (o / other :quant (a4 / all))))))
(k / know-01 :arg0 (i / i) :arg1 (a / and :op1 (f / frustrating :degree (v / very) :domain (i2 / it)) :op2 (s / sad-02 :arg1 (p / person :quant (l / lot)) :degree (v2 / very)) :arg1-of (c / cause-01 :arg0 (o / or :op1 (a2 / anger-01 :arg1 (p2 / person) :degree (v3 / very)) :op2 (s2 / sad-02 :arg1 (p3 / person) :degree (v4 / very))))))
(s / say-01 :arg0 (c / company) :arg1 (e / expect-01 :arg0 (c2 / company) :arg1 (g / grow-01 :arg1 (e2 / earnings) :time (y / year :mod (p / previous)) :arg1-of (c3 / cause-01 :arg0 (a / and :op1 (r / revenue :arg1-of (h / high-02 :degree (m / more))) :op2 (r2 / revenue :arg1-of (h2 / high-02 :degree (m2 / more)))) :location (c4 / commerce :mod (o / online)))) :mod (s2 / still)))
(m / multi-sentence :snt1 (o / obligate-01 :polarity - :arg1 (i / i) :arg2 (l / listen-01 :arg0 (i2 / i) :arg1 (h / her?pice :arg1-of (c / call-01 :arg2 (n / name :op1 (v / vodní) :op2 (v2 / vodní))))) :time (t / then)) :snt2 (o2 / or :op2 (g / got :arg1 (i3 / i) :location (l2 / location :name (n2 / name :op1 "Komárov")))))
(r / rate-entity-91 :arg1 (s / seed :part-of (s2 / seed :part-of (w / we))) :arg2 (r2 / rate-entity-91 :arg1 (s3 / seed :quant (m / mass-quantity :quant (N / N-A) :unit (k / kilogram))) :arg2 (t / temporal-quantity :quant (N2 / N-A) :unit (h / hour))))
(s / say-01 :arg0 (p / person :name (n / name :op1 "Butovi")) :arg1 (a / and :op1 (e / expensive :domain (t / tunnel) :degree (m / more :quant (h / half))) :op2 (e2 / expensive :domain (t2 / tunnel) :degree (m2 / more)) :condition (u / use-01 :arg1 (m3 / method :mod (t3 / that)) :time (e3 / early :degree (m4 / more)))))
(a / and :op1 (u / understand-01 :polarity - :arg0 (i / i) :arg1 (a2 / affair :mod (f / fabricate) :mod (t / this))) :op2 (s / say-01 :arg0 (p / person :arg0-of (l / lead-02 :arg1 (p2 / person :arg0-of (l2 / lead-02 :arg1 (h / he) :time (f2 / former))))) :arg1 (c / continue-01 :arg1 (p3 / project :arg1-of (r / resemble-01)) :time (y / year :mod (p4 / previous)) :mod (o / only))))
(b / broadcast-01 :arg0 (t / they) :arg1 (o / organization :name (n / name :op1 "Voice")) :arg2 (e / event :name (n2 / name :op1 "N-A") :mod (p / prime)) :arg1-of (c / cause-01 :arg0 (w / want-01 :arg0 (t2 / they) :arg1 (g / gain-02 :arg0 (t3 / they) :arg1 (s / support-01 :arg0 (t4 / they) :arg1 (f / future :poss (o2 / organization)) :arg1-of (b2 / broad-02))))))
(l / legacy :arg1-of (g / go-on-15) :poss (h / he) :domain (a / and :op1 (s / school :poss (w / we)) :op2 (f / festival :poss (w2 / we))))
(c / contrast-01 :arg2 (p / prevail-01 :arg0 (d / differ-02 :arg1 (m / model :mod (p2 / previous))) :mod (t / true)))
(s / say-01 :arg1 (a / and :op1 (c / come-01 :arg1 (p / person :name (n / name :op1 "Holcman") :location (h / here)) :arg4 (o / office :poss (i / i)) :time (i2 / immediate)) :op2 (s2 / say-01 :arg0 (p2 / person) :arg1 (v / voice :poss (s3 / superintendent)))) :arg2 (p3 / person :arg0-of (h2 / have-org-role-91 :arg2 (o2 / office :poss (i3 / i)))))
(c / continue-01 :arg0 (p / person :name (n / name :op1 "Tomsula")) :arg1 (s / show-01 :arg0 (p2 / person) :arg1 (c2 / crap :mod (t / true) :poss (h / he)) :location (r / room :mod (l / locker)) :time (a / after :op1 (g / game))))
(s / spend-01 :arg1 (a / and :op1 (r / repair-01 :arg1 (a2 / and :op1 (i / instrument) :op2 (i2 / instrument :mod (n / new)))) :op2 (a3 / and :op1 (i3 / instrument) :op2 (i4 / instrument :mod (n2 / new)) :op3 (r2 / reconstruct-01))) :time (a4 / after :op1 (n3 / now) :quant (u / up-to :op1 (t / temporal-quantity :quant (N / N-A) :unit (y / year)))))
(r / reject-01 :arg0 (p / person :arg0-of (o / oppose-01)) :arg1 (c / complain-01 :arg0 (p2 / person) :arg1-of (m / make-01 :arg0 (p3 / person :arg0-of (o2 / oppose-01))) :arg0-of (s / say-01 :arg1 (c2 / consider-02 :polarity - :arg0 (p4 / person) :arg1 (f / facade :mod (p5 / pink) :arg0-of (g / give-01 :arg1 (p6 / project) :time (a / after :op1 (c3 / confectionary :arg1 (a2 / and :op1 (p7 / pink) :op2 (w / white))))))))))
(a / and :op1 (i / interview-01 :arg1 (g / girl)) :op2 (s / speak-01 :arg0 (g2 / girl) :arg1 (u / use-01 :arg1 (a2 / and :op1 (c / computer) :op2 (p / playstation)) :arg2 (t / talk-01 :arg0 (g3 / girl) :arg2 (g4 / girl :arg0-of (l / look-01 :arg1 (w / way :mod (y / young :degree (m / more) :compared-to (h / he)))))))))
(h / have-concession-91 :arg1 (w / work-09 :polarity - :arg1 (i / it) :time (y / yet)) :arg2 (m / matter-01 :polarity - :arg1 (t / thing :degree-of (t2 / try-01 :arg0 (r / republican :mod (s / some)) :arg1 (d / drag :arg0 (r2 / republican) :arg1 (p / person :name (n / name :op1 "Donald" :op2 "Trump")) :arg2 (a / atop :arg0 (p2 / person) :arg1 (p3 / poll-01)))))))
FAILED_TO_PARSE#Number of opening and closing brackets doesn't match.
(a / and :op1 (m / massive :domain (s / store)) :op2 (t / take-10 :arg0 (s2 / store) :arg1 (c / comb :arg0 (s3 / store) :arg1 (a2 / aisles :quant (a3 / all)))))
(c / contrast-01 :arg1 (c2 / content-01 :arg1 (p / person :name (n / name :op1 "Eva")) :arg2 (i / installing :arg0 (p2 / person) :arg1 (c3 / cooker :mod (g / gas)))) :arg2 (e / easy-05 :arg1 (c4 / content-01 :arg1 (p3 / person) :arg2 (i2 / installing :arg0 (p4 / person) :arg1 (p5 / person :quant 6))) :degree (m / more)))
(( / ( :( (n / name) :op1 "Vsetín")
(r / refuse-01 :arg0 (a / and :op1 (c / country :name (n / name :op1 "Hungary")) :op2 (c2 / country :name (n2 / name :op1 "Slovakia")) :op3 (c3 / country :name (n3 / name :op1 "Czech" :op2 "Republic"))) :arg1 (e / entertain :arg0 (a2 / and) :arg1 (i / idea)) :mod (s / still))
(r / refuse-01 :arg0 (a / and :op1 (c / country :name (n / name :op1 "Hungary")) :op2 (c2 / country :name (n2 / name :op1 "Slovakia")) :op3 (c3 / country :name (n3 / name :op1 "Czech" :op2 "Republic"))) :arg1 (e / entertain :arg0 (a2 / and) :arg1 (i / idea)) :mod (s / still))
(t / think-01 :arg0 (w / we) :arg1 (a / and :op1 (f / fly-01 :arg1 (i / it) :destination (t2 / through :op1 (f2 / fly-01 :arg1-of (n / normal-02))) :op2 (c / consciousness :arg1-of (c2 / cause-01 :arg0 (i2 / increase-01 :arg1 (l / level :mod (c3 / comfort) :poss (w2 / we)) :mod (o / only)))))))
(s / see-01 :arg1 (p / pmqs :arg0 (a / and :op1 (j / judge-01 :arg0 (p2 / person :arg0-of (l / lead-02 :arg1 (f / fellow :mod (f2 / fellow) :poss (p3 / person))))) :op2 (c / command-02 :arg0 (p4 / person) :arg1 (s2 / standing :poss (p5 / person)))) :arg2 (a2 / and :op1 (j2 / judge-01 :arg0 (p6 / person) :arg1 (p7 / person :arg0-of (h / have-org-role-91 :arg1 (f3 / fellow :mod (f4 / fellow) :poss (p8 / person)) :arg2 (m / member)))) :op2 (p9 / person :arg0-of (h2 / have-org-role-91 :arg1 (f5 / fellow :poss (p10 / person)) :arg2 (m2 / member))) :op3 (s3 / standing :poss (p11 / person))) :arg1-of (c2 / cause-01 :arg0 (a3 / and :op1 (b / become-01 :arg1 (p12 / person) :arg2 (b2 / become-01 :arg1 (p13 / person) :arg2 (c3 / caricature))) :op2 (n / need-01 :arg0 (p14 / person) :arg1 (r / reform-01))))) :time (s4 / since :op1 (t / televised :domain (i / it) :ord (o / ordinal-entity :value 1))))
(a / and :op1 (c / close-01 :arg0 (t / they) :arg1 (r / rate-entity-91 :arg1 (p / percentage-entity :value (N / N-A)) :arg2 (t2 / temporal-quantity :quant (N2 / N-A) :unit (y / year)))) :op2 (r2 / record :mod (r3 / record) :time (d / date-entity :month 6 :day 11) :location (b / below)))
(a / and :op2 (d / do-02 :arg1 (w / well :degree (v / very)) :time (p / pull-01 :arg0 (h / he) :arg1 (i / i) :arg2 (o / out-06 :arg1 (i2 / i) :arg2 (t / track)))))
(a / and :op2 (d / do-02 :arg1 (w / well :degree (v / very)) :time (p / pull-01 :arg0 (h / he) :arg1 (i / i) :arg2 (o / out-06 :arg1 (i2 / i) :arg2 (t / track)))))
(l / leave-11 :arg0 (d / doctor) :arg1 (r / room :purpose (a / activity-06 :arg0 (d2 / doctor))) :arg1-of (h / highlight-01 :arg0 (d3 / doctor)))
(o / order-01 :arg0 (t / they) :arg1 (h / he) :arg2 (d / delete :arg0 (h2 / he) :arg1 (r / record-01)) :time (t2 / then))
(a / accident :location (a2 / around :op1 (l / location :name (n / name :op1 "Pelvoux") :mod (m / mountain))) :location (b / below :op1 (p / peak-01 :arg1 (o / organization :name (n2 / name :op1 "Dôme" :op2 "de" :op3 "Neige" :op4 "des" :op5 "Ecrins") :quant 4,015 :mod (m2 / metre-high)))))
(r / recognize-02 :arg0 (p / person :arg0-of (i / inspect-01)) :arg1 (b / be-located-at-91 :arg1 (p2 / person :quant 1) :arg2 (o / outside :op1 (t / thing :arg1-of (l / limit-01 :mod (t2 / tolerance))))) :time (r2 / run-01 :arg0 (p3 / person) :arg1 (f / finger :part-of (p4 / person)) :location (a / along :op1 (f2 / finger :part-of (p5 / person)))))
(c / contrast-01 :arg2 (w / warn-01 :arg0 (p / person :name (n / name :op1 "Marek" :op2 "Benda") :arg0-of (h / have-org-role-91 :arg2 (m / mp))) :arg1 (p2 / possible-01 :arg1 (s / setting :polarity - :arg1 (s2 / setting :arg0 (d / decree :mod (g / government-organization :arg0-of (g2 / govern-01)))) :arg1-of (a / accord-02 :arg2 (c2 / constitution))))))
(s / say-01 :arg1 (g / get-01 :arg0 (w / we) :arg1 (b / boy :arg1-of (r / ready-02 :arg2 (g2 / go-02 :arg0 (b2 / boy) :mod (a / again))))) :arg2 (p / person :name (n / name :op1 "Donnelly")))
(r / rise-01 :arg1 (s / sports :mod (j / jd)) :arg2 (p / percentage-entity :value (N / N-A)) :time (a / after :op1 (r2 / report-01 :arg0 (f / firm :name (n / name :op1 (s2 / sportswear) :op2 (s3 / sportswear))) :arg1 (r3 / rate-entity-91 :arg1 (p2 / percentage-entity :value (N2 / N-A)) :arg2 (t / temporal-quantity :quant (N3 / N-A) :unit (y / year))) :arg3 (p3 / profit-01 :arg0 (f2 / firm) :arg1 (m / monetary-quantity :quant 46.6 :unit (d / dollar :mod (r4 / renminbi)))))))
(p / put-01 :arg0 (p2 / person :arg0-of (h / have-rel-role-91 :arg1 (p3 / person :arg0-of (h2 / have-rel-role-91 :arg1 (i / i) :arg2 (p4 / parent))) :arg2 (p5 / parent))) :arg1 (p6 / political-party :name (n / name :op1 "KMT")) :arg2 (t / trust-02 :arg0 (p7 / person) :arg1 (i2 / i)))
(a / and :op1 (b / be-located-at-91 :arg1 (a2 / and :op1 (s / she) :op2 (p / person :arg0-of (h / have-rel-role-91 :arg1 (s2 / she) :arg2 (f / friend)))) :arg2 (s3 / school :arg1-of (h2 / high-02))) :op2 (g / guy :mod (o / old :degree (m / more)) :arg0-of (t / try-01 :arg1 (t2 / teach-01 :arg0 (g2 / guy) :arg1 (p2 / play-11 :arg0 (g3 / guy) :arg2 (c / career))))))
(m / match-03 :mod (l / league) :mod (c / classic) :mod (c2 / classic) :domain (i / it))
(c / contrast-01 :arg2 (t / touch-01 :polarity - :arg1 (t2 / that) :degree (s / so)))
(p / possible-01 :arg1 (l / lethal :domain (i / it) :beneficiary (p2 / person :arg0-of (h / have-rel-role-91 :arg1 (i2 / i) :arg2 (c / child)))))
(b / boost-01 :arg1 (b2 / boost-01 :arg1 (b3 / boost-01)) :location (c / city))
(p / possible-01 :arg1 (i / influence-01 :arg0 (d / doctor :mod (m / more)) :arg1 (s / something :arg1-of (a / apply-02 :arg2 (s2 / sclerosis :quant (m2 / multiple))) :mod (d2 / doubly)) :time (e / early :degree (m3 / more))))
(p / possible-01 :arg1 (i / influence-01 :arg0 (d / doctor :mod (m / more)) :arg1 (s / something :arg1-of (a / apply-02 :arg2 (s2 / sclerosis :quant (m2 / multiple))) :mod (d2 / doubly)) :time (e / early :degree (m3 / more))))
(c / contrast-01 :arg2 (b / become-01 :arg1 (g / government-organization :name (n / name :op1 "Fed")) :arg2 (a / authority :mod (m / money) :poss (w / world)) :arg1-of (e / effect-03)))
(s / suggest-01 :arg0 (p / person :name (n / name :op1 "Van" :op2 "Gaal")) :arg1 (h / have-03 :arg0 (p2 / person :arg0-of (h2 / have-org-role-91 :arg1 (c / country :name (n2 / name :op1 "N-A")) :arg2 (o / official))) :arg1 (e / erred)))
(a / and :op1 (l / look-01 :arg0 (h / he) :arg1 (g / good :degree (m / more :mod (- / -lrb-)) :arg1-of (m2 / mean-01 :arg2 (-2 / -rrb-)))) :op2 (l2 / look-02 :arg0 (h2 / he) :arg1 (g2 / good :degree (m3 / more)) :location (b / bp)) :op3 (c / carry-01 :arg0 (h3 / he) :arg1 (r / right-05 :arg1 (h4 / he) :arg2 (g3 / game))))
(a / and :op1 (l / look-01 :arg0 (h / he) :arg1 (g / good :degree (m / more :mod (- / -lrb-)) :arg1-of (m2 / mean-01 :arg2 (-2 / -rrb-)))) :op2 (l2 / look-02 :arg0 (h2 / he) :arg1 (g2 / good :degree (m3 / more)) :location (b / bp)) :op3 (c / carry-01 :arg0 (h3 / he) :arg1 (r / right-05 :arg1 (h4 / he) :arg2 (g3 / game))))
(a / and :op1 (l / look-01 :arg0 (h / he) :arg1 (g / good :degree (m / more :mod (- / -lrb-)) :arg1-of (m2 / mean-01 :arg2 (-2 / -rrb-)))) :op2 (l2 / look-02 :arg0 (h2 / he) :arg1 (g2 / good :degree (m3 / more)) :location (b / bp)) :op3 (c / carry-01 :arg0 (h3 / he) :arg1 (r / right-05 :arg1 (h4 / he) :arg2 (g3 / game))))
(a / and :op1 (l / look-01 :arg0 (h / he) :arg1 (g / good :degree (m / more :mod (- / -lrb-)) :arg1-of (m2 / mean-01 :arg2 (-2 / -rrb-)))) :op2 (l2 / look-02 :arg0 (h2 / he) :arg1 (g2 / good :degree (m3 / more)) :location (b / bp)) :op3 (c / carry-01 :arg0 (h3 / he) :arg1 (r / right-05 :arg1 (h4 / he) :arg2 (g3 / game))))
(a / and :op1 (d / do-02 :arg0 (y / you) :arg1 (i / it) :time (t / talk-01 :arg0 (w / we) :arg1 (d2 / diversity))) :op2 (' / '' :arg0 (p / person :name (n / name :op1 "Damon") :arg0-of (h / have-org-role-91 :arg2 ('2 / ''))) :arg1 (c / country :name (n2 / name :op1 "N-A"))))
(c / charge-05 :arg1 (p / person :name (n / name :op1 "Hughes")) :arg2 (a / and :op1 (h / hits :quant 3) :op2 (w / walk-01 :accompanier (s / strikeouts :quant 4))))
(s / see-01 :polarity - :arg0 (p / person :arg0-of (c / compete-02)) :arg1 (p2 / person :arg0-of (c2 / compete-02) :mod (a / any) :arg0-of (c3 / complete-01 :arg1 (s2 / stage :mod (a2 / all) :part-of (o / obstacle :poss (p3 / person))))) :time (e / ever) :arg1-of (c4 / cause-01 :arg0 (s3 / show :arg0 (c5 / compete-01) :arg1 (s4 / season :ord (o2 / ordinal-entity :value 7) :poss (c6 / compete-01)) :mod (j / just))))
(s / something :arg1-of (s2 / significant-02) :domain (o / or :op1 (e / event :arg1-of (s3 / significant-02)) :op2 (b / bizarre) :op3 (e2 / event :arg1-of (r / record-01)) :location-of (l / live-01 :arg0 (y / you))))
(d / disconnected :arg0 (w / we) :arg1 (s / shaft :poss (w2 / windwheel :name (n / name :op1 (s2 / suction) :op2 (w3 / windwheel) :op3 (b / basket)))) :time (t / then) :mod (a / again) :arg1-of (s3 / say-01 :arg0 (p / political-party :name (n2 / name :op1 "N-A"))))
(a / and :op1 (g / go-02 :arg0 (i / i) :arg4 (h / home) :time (t / tonight)) :op2 (s / sleep-01 :arg0 (i2 / i) :mod (a2 / as-well)))
(m / multi-sentence :snt1 (f / feel-01 :arg0 (i / i) :arg1 (b / bad-07 :arg1 (i2 / it) :degree (v / very) :topic (i3 / it))) :snt2 (s / sorry-01 :arg1 (i4 / i) :degree (s2 / so)))
(c / contrast-01 :arg2 (t / take-01 :arg0 (o / organization :name (n / name :op1 "Ministry" :op2 "of" :op3 "Finance")) :arg1 (c2 / complain-01) :arg2 (o2 / organization :name (n2 / name :op1 "Constitutional" :op2 "Court"))))
(p / possible-01 :polarity - :arg1 (c / claim-01 :arg0 (i / i) :arg1 (o / objective :mod (t / true) :domain (c2 / claim-01))))
(e / expect-01 :arg1 (p / participate-01 :arg0 (a / and :op1 (n / number :quant-of (a2 / and :op1 (n2 / number :quant-of (p2 / person :arg0-of (h / have-org-role-91 :arg1 (t / team)))) :op2 (n3 / number :name (n4 / name :op1 (j / ji?í))))) :op2 (n5 / number :name (n6 / name :op1 (j2 / ji?í)))) :arg1 (p3 / part :part-of (a3 / and :op1 (f / friday) :op2 (s / sunday)) :mod (b / both))))
(r / report-01 :arg0 (o / organization :name (n / name :op1 "PHE")) :arg1 (t / thing :arg1-of (r2 / report-01 :arg0 (t2 / thing :arg0-of (e / evidence-01 :arg1 (r3 / review-01 :arg1 (t3 / thing :arg0-of (e2 / evidence-01)) :mod (c / comprehensive :degree (m / more))))))) :time (m2 / month :mod (l / last)))
(g / go-01 :arg1 (p / person :arg0-of (h / have-rel-role-91 :arg1 (w / we) :arg2 (d / daughter))) :arg4 (s / sword) :arg1-of (r / regular-02) :time (n / now))
FAILED_TO_PARSE#Two roles in a row.
FAILED_TO_PARSE#Two roles in a row.
(s / say-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg2 (' / ''))) :arg1 (g / get-01 :polarity - :arg0 (p2 / person) :arg1 (t / that) :manner (d / definite)))
(e / enjoy :polarity - :arg0 (h / he) :arg1 (i / it) :time (t / today) :mod (d / definite))
(s / schedule-01 :arg1 (a / activated :arg1 (p / person :name (n / name :op1 "Sanchez") :arg1-of (l / list-01 :arg2 (s2 / shoulder :part-of (s3 / shoulder)))) :arg3 (s4 / strain :mod (s5 / shoulder)) :time (s6 / since :op1 (m / mid-august))) :arg3 (s7 / start-01 :arg1 (w / wednesday)))
(i / include-01 :arg1 (a / and :op1 (p / person :name (n / name :op1 "Milan" :op2 "Ivana") :arg0-of (e / exemplify-01)) :op2 (p2 / person :name (n2 / name :op1 "Mario" :op2 "Li?ka") :arg0-of (h / have-org-role-91 :arg2 (c / czech))) :op3 (p3 / person :name (n3 / name :op1 "Mario" :op2 "Li?ka") :arg0-of (h2 / have-org-role-91 :arg2 (m / midfielder)))) :arg2 (s / specific-02) :manner (s2 / specific-02))
(s / stress-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (b / bank :mod (c / central) :part-of (c2 / country :name (n / name :op1 "U.S."))) :arg2 (o / official))) :arg1 (s2 / stress-01 :arg0 (p2 / person :arg0-of (h2 / have-org-role-91 :arg1 (b2 / bank :mod (c3 / central) :part-of (c4 / country :name (n2 / name :op1 "U.S."))) :arg2 (o2 / official))) :arg1 (r / recommend-01 :arg1 (f / focus-01 :polarity - :arg0 (p3 / person :arg0-of (i / invest-01)) :arg2 (r2 / recommend-01 :arg1 (r3 / raise-01 :arg0 (p4 / person) :arg1 (r4 / rate)) :time (s3 / start-01 :arg0 (p5 / person) :arg1 (r5 / raise-01 :arg0 (p6 / person) :arg1 (r6 / rate)))))) :arg2-of (i2 / instead-of-91 :arg1 (t / take-10 :arg0 (t2 / thing :manner-of (t3 / take-10 :arg0 (i3 / it) :arg1 (r7 / raise-01 :arg0 (c5 / country) :arg1 (r8 / rate))))))))
(g / go-02 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (p2 / person :arg0-of (h2 / have-org-role-91 :arg1 (c / country :name (n / name :op1 "N-A")) :arg2 (m / mayor))) :arg2 (m2 / mayor))) :arg4 (t / try-02))
(g / give-01 :arg0 (c / channel :mod (o / other)) :arg1 (a / arm :mod (r / right) :poss (c2 / channel)) :arg2 (i / it) :manner (f / frank))
(b / believe-01 :arg0 (o / organization :name (n / name :op1 "Morgan" :op2 "Stanley")) :arg1 (a / and :op1 (f / fall-01 :arg1 (a2 / and :op1 (f2 / food :poss (o2 / organization :name (n2 / name :op1 "Metcash"))) :op2 (s / sell-01 :arg1 (a3 / and :op1 (f3 / food) :op2 (g / groceries)))) :arg2 (r / rate-entity-91 :arg1 3.8 :arg2 (t / temporal-quantity :quant (N / N-A) :unit (y / year)))) :op2 (r2 / rate-entity-91 :arg1 (m / monetary-quantity :quant (N2 / N-A) :unit (p / pound)) :arg2 (t2 / temporal-quantity :quant (N3 / N-A) :unit (y2 / year))) :op3 (r3 / reduce-01 :arg1 (s2 / share :mod (m2 / market) :poss (a4 / and)) :arg3 (r4 / rate-entity-91 :arg1 (s3 / share :mod (m3 / market)) :arg2 (r5 / rate-entity-91 :arg1 (s4 / share :mod (m4 / market)) :arg2 (r6 / rate-entity-91 :arg1 (s5 / share :mod (m5 / market)) :arg2 (r7 / rate-entity-91 :arg1 (s6 / share :mod (m6 / market)) :arg2 (r8 / rate-entity-91 :arg1 (m7 / monetary-quantity :quant (N4 / N-A) :unit (p2 / pound)) :arg2 (t3 / temporal-quantity :quant (N5 / N-A) :unit (y3 / year))) :arg4 (r9 / rate-entity-91 :arg1 (m8 / monetary-quantity :quant (N6 / N-A) :unit (p3 / pound)) :arg2 (t4 / temporal-quantity :quant (N7 / N-A) :unit (y4 / year))))))))))
(c / contrast-01)
(h / have-concession-91 :arg1 (i / impact-01 :polarity - :arg0 (i2 / impact-01) :degree (e / equal :polarity -)) :time (o / once :op1 (h2 / hike)))
(a / and :op1 (d / detain-01 :arg0 (p / police :mod (c / country :name (n / name :op1 "Serbia"))) :arg1 (t / thing :arg1-of (b / border-01 :arg2 (n2 / name :op1 (a2 / ap)) :arg1-of (a3 / allege-01)))) :op2 (f / force-01 :arg0 (p2 / police) :arg1 (p3 / person) :arg2 (f2 / footage :domain (p4 / person))) :op3 (s / show-01 :arg0 (p5 / person) :arg1 (s2 / show-01 :arg0 (p6 / person) :arg1 (k / knocking :arg0 (d2 / dog :mod (p7 / police)) :arg1 (r / refugee) :arg2 (g / ground)) :arg1-of (a4 / allege-01))))
(a / and :op1 (r / read-01 :arg1 (p / person :arg0-of (r2 / research-01))) :op2 (w / write-01 :arg0 (p2 / person) :arg1 (a2 / activity-06 :arg1 (b / brain)) :prep-with (l / light)))
(a / and :op1 (g / give-01 :arg0 (t / they) :arg1 (f / feed-01 :arg2 (s / some)) :arg2 (t2 / they)) :op2 (c / close-01 :arg0 (t3 / they) :arg1 (d / door) :time (t4 / then)) :op3 (c2 / close-01 :arg0 (t5 / they) :arg1 (d2 / door)) :arg0-of (c3 / cause-01 :arg1 (t6 / think-01 :polarity - :arg0 (t7 / they) :arg1 (p / play-01 :arg0 (t8 / they) :arg1 (t9 / tiger :location (o / outside :op1 (h / hutch :mod (r / rabbit))))))))
(s / say-01 :arg1 (e / expect-01 :arg0 (w / we) :arg1 (s2 / style :mod (a / aggressive :arg1-of (r / record-01)))) :arg2 (c / coach))
(c / comment-01 :arg0 (p / person :arg0-of (a / address-02 :arg1 (i / issue-02 :arg0 (v / violence)))) :medium (a2 / act-02 :arg0 (p2 / person :name (n / name :op1 "George" :op2 "Bush"))) :mod (a3 / also) :arg1-of (f / follow-01 :arg2 (c2 / claim-01 :arg0 (p3 / person) :arg1 (r / respond-01 :arg0 (c3 / country :name (n2 / name :op1 "US")) :arg1 (r2 / respond-01 :arg0 (c4 / country) :arg1 (e / event :mod (u / uncontrollable)) :arg2 (e2 / event :mod (u2 / uncontrollable)))))))
(c / contrast-01)
(s / see-01 :arg0 (i / i) :arg1 (g / game :poss (t / they) :quant (a / all)) :time (t2 / then))
(a / accident :mod (j / just) :domain (t / this))
(d / disrupt-01 :arg0 (s / spider) :arg1 (e / exist-01 :arg1 (t / they) :manner (p / peaceful)) :time (a / after :op1 (d2 / disrupt-01 :arg1 (e2 / exist-01 :arg1 (t2 / they) :manner (p2 / peaceful)))))
(a / alone :domain (o / organization :name (n / name :op1 "Kingfisher")) :mod (a2 / alone :degree (a3 / almost)) :arg1-of (i / include-91 :arg2 (t / team :poss (o2 / organization) :arg2-of (i2 / include-01 :arg1 (a4 / and :op1 (p / person :arg0-of (h / have-org-role-91 :arg1 (c / country) :arg2 (e / executive :mod (c2 / chief)))) :op2 (p2 / person :arg0-of (h2 / have-org-role-91 :arg1 (c3 / country) :arg2 (d / director :mod (f / finance)))))))) :mod (a5 / almost))
(a / alone :domain (o / organization :name (n / name :op1 "Kingfisher")) :mod (a2 / alone :degree (a3 / almost)) :arg1-of (i / include-91 :arg2 (t / team :poss (o2 / organization) :arg2-of (i2 / include-01 :arg1 (a4 / and :op1 (p / person :arg0-of (h / have-org-role-91 :arg1 (c / country) :arg2 (e / executive :mod (c2 / chief)))) :op2 (p2 / person :arg0-of (h2 / have-org-role-91 :arg1 (c3 / country) :arg2 (d / director :mod (f / finance)))))))) :mod (a5 / almost))
(a / and :op2 (k / keep-01 :arg0 (w / we) :arg1 (p / person :location (c / country :poss (w2 / we))) :manner (a2 / amr-unknown)))
(h / have-condition-91 :arg1 (r / recommend-01 :arg1 (c / contrast-01 :arg1 (r2 / recommend-01 :arg1 (c2 / contrast-01 :arg1 (r3 / recommend-01 :arg1 (h2 / hand :quant (a / all)) :prep-in (b / briefs :poss (t / they))) :arg2 (b2 / be-located-at-91 :arg1 (t2 / they) :arg2 (b3 / briefs :poss (t3 / they))))))))
(g / good-02 :arg1 (g2 / good :domain (e / everyone)) :arg2-of (e2 / except-01 :arg1 (p / person :name (n / name :op1 "Eva") :arg0-of (e3 / engineer-01))))
(d / die-01 :arg1 (w / woman :quant 2013 :location (l / location :name (n / name :op1 "Ontario")) :quant (b / between :op1 2013 :op2 2)) :time (a / after :op1 (c / contrast-01 :arg1 (d2 / die-01 :arg1 (w2 / woman :quant 2 :location (l2 / location :name (n2 / name :op1 "Ontario")))) :arg2 (c2 / contain-01 :arg0 (a2 / and) :arg1 (i / ingredient :arg0-of (s / suffice-01 :polarity -))))))
(e / explain-01 :arg0 (h / he) :arg1 (b / bolstered :arg1 (s / sell-01 :medium (o / online)) :time (b2 / before :op1 (n / now) :quant (t / temporal-quantity :quant (N / N-A) :unit (y / year))) :time (s2 / start-01 :arg0 (h2 / he) :arg1 (u / use-01 :arg0 (h3 / he) :arg1 (p / phone :arg1-of (m / mobile-02) :poss (t2 / they)) :arg2 (p2 / purchase-01 :arg0 (t3 / they) :arg1 (p3 / phone))))))
(k / kill-01 :quant 4)
(a / and :op1 (s / splitting :arg1 (c / company :quant 2 :arg1-of (l / list-01)) :arg2 (c2 / company :quant 2 :arg1-of (l2 / list-01)) :time (l3 / late :op1 (y / year :mod (t / this)) :degree (m / more))) :op2 (d / display-01 :arg0 (i / i) :arg1 (a2 / and :op1 (c3 / computer) :op2 (b / business) :poss (c4 / company)) :arg2 (a3 / and :op1 (p / person :arg0-of (h / have-org-role-91 :arg1 (c5 / company :name (n / name :op1 "N-A")) :arg3 (c6 / computer))) :op2 (p2 / person :arg0-of (h2 / have-org-role-91 :arg1 (c7 / corporation) :arg3 (o / operate-01 :arg0 (c8 / corporation)))))))
(a / and :op1 (s / splitting :arg1 (c / company :quant 2 :arg1-of (l / list-01)) :arg2 (c2 / company :quant 2 :arg1-of (l2 / list-01)) :time (l3 / late :op1 (y / year :mod (t / this)) :degree (m / more))) :op2 (d / display-01 :arg0 (i / i) :arg1 (a2 / and :op1 (c3 / computer) :op2 (b / business) :poss (c4 / company)) :arg2 (a3 / and :op1 (p / person :arg0-of (h / have-org-role-91 :arg1 (c5 / company :name (n / name :op1 "N-A")) :arg3 (c6 / computer))) :op2 (p2 / person :arg0-of (h2 / have-org-role-91 :arg1 (c7 / corporation) :arg3 (o / operate-01 :arg0 (c8 / corporation)))))))
(c / crash-01 :arg1 (c2 / crash-01) :time (b / before :op1 (a / arrive-01 :arg1 (a2 / and :op1 (w / winds :arg1-of (h / high-02)) :op2 (r / rain-01)) :arg4 (k / kingdom) :time (b2 / before :op1 (a3 / arrive-01 :arg1 (m / millions) :arg4 (k2 / kingdom))) :time (b3 / before :op1 (a4 / arrive-01 :arg1 (m2 / millions :poss (p / person :mod (r2 / religious-group :name (n / name :op1 "N-A")) :mod (e / every) :mod (r3 / religious-group))) :mod (a5 / at-least))))))
(s / suitable-04 :arg1 (i / it) :arg2 (a / and :op1 (f / frying) :op2 (g / grilling)) :mod (a2 / also) :arg1-of (c / cause-01 :arg0 (p / point :mod (c2 / combustion :arg1-of (h / high-02)) :poss (i2 / it))))
FAILED_TO_PARSE#Two roles in a row.
(r / remain-01 :arg1 (l / limit-01) :arg3 (p / percentage-entity :value (N / N-A) :arg3-of (i / include-91 :arg2 (t / takings :arg1-of (p2 / plan-01)))) :arg3 (s / sell-01 :arg1 (t2 / tour)))
(m / multi-sentence :snt1 (c / caught :arg0 (h / he) :arg1 (i / it) :arg2 (m2 / man :mod (o / old))) :snt2 (n / note-01 :arg0 (s / she) :arg1 (m3 / maliciously)))
(h / halt-01 :arg1 (b / building :mod (c / controversy)))
(o / obligate-01 :arg1 (w / we) :arg2 (r / reduce-01 :arg0 (w2 / we) :arg1 (u / use-01 :arg1 (f / force-04))))
(p / play-11 :arg0 (h / he) :arg2 (t / thing :quant 65 :arg1-of (i / include-91 :arg2 (g / game :mod (l / league) :quant (b / between :op1 65 :op2 157)))) :mod (a / also) :time (d / date-entity :dayperiod (N / N-A)) :mod (a2 / also))
(t / test-01 :arg0 (t2 / television :name (n / name :op1 (c / czech) :op2 (t3 / television)) :medium (t4 / television)) :topic (c2 / crisis :topic (c3 / crisis :arg0-of (m / migrate-01))))
(c / come-up-11 :arg0 (o / organization :name (n / name :op1 "SPRS")) :arg1 (w / way :arg0-of (s / shock-01) :purpose (a / and :op1 (t / try-01 :arg0 (o2 / organization) :arg1 (u / understand-01 :arg0 (w2 / woman) :arg1 (i / importance :mod (g / good)))) :op2 (g2 / get-04 :arg0 (o3 / organization) :arg1 (u2 / understand-01 :arg0 (w3 / woman) :arg1 (i2 / importance :mod (g3 / good))))) :op3 (f / featuring :arg0 (o4 / organization) :arg1 (i3 / image :consist-of (p / person :arg0-of (h / have-rel-role-91 :arg2 (d / dd1))) :source (p2 / painted :arg1 (f2 / food :mod (u3 / unhealthy)))))))
(b / build-01 :arg0 (t / they) :arg1 (l / line :mod (p / produce-01) :quant (f / few :op1 (t2 / temporal-quantity :quant (N / N-A) :unit (m / month)) :mod (o / only))) :purpose (a / assembly :arg0-of (o2 / organize-01 :arg1 (d / door) :purpose (d2 / decker :arg1 (d3 / decker :mod (u / upper) :part-of (a2 / a380)) :arg1-of (c / complete-02)))))
(r / report)
(h / hospital :quant (m / more) :arg1-of (p / possible-01) :location (l / location :name (n / name :op1 "Karlovy" :op2 "Vary" :op3 "Region")))
(c / close-01 :arg1 (g / gap) :time (m / month :mod (r / recent)) :time (t / today))
(i / include-91 :arg1 (a / and :op1 (p / person :arg0-of (h / have-03 :arg1 (s / surgery-01))) :op2 (r / resolve-01 :arg1 (c / cold))) :arg2 (p2 / percentage-entity :value (N / N-A)) :arg4 (p3 / percentage-entity :value (N2 / N-A)) :arg1-of (c2 / complete-02))
(l / let-01 :arg0 (s / she) :arg1 (s2 / sleep-01 :arg0 (t / they) :duration (t2 / temporal-quantity :quant (N / N-A) :unit (h / hour)) :time (b / before :op1 (b2 / blasting :arg0 (t3 / they) :arg1 (m / music :poss (s3 / she))))) :time (s4 / shut :arg0 (t4 / they) :arg1 (m2 / music :poss (s5 / she))) :arg1-of (c / cause-01 :arg0 (l2 / leave-11 :arg0 (s6 / she) :arg1 (e / exam :poss (s7 / she) :mod (t5 / three-hour)))))
(e / enable-01 :arg0 (a / activity-06 :mod (m / mold) :mod (t / this)) :arg1 (c / compete-02 :arg0 (a2 / activity-06) :degree (m2 / more)) :arg2 (a3 / and :op1 (c2 / compete-02 :arg0 (a4 / and :op1 (p / person :name (n / name :op1 "Meg" :op2 "Whitman") :arg0-of (h / have-org-role-91 :arg1 (o / organization) :arg2 (c3 / chairman))) :op2 (p2 / person :arg0-of (h2 / have-org-role-91 :arg1 (o2 / organization) :arg2 (e2 / executive))) :op3 (p3 / person :arg0-of (h3 / have-org-role-91 :arg1 (o3 / organization) :arg2 (e3 / executive))) :op4 (p4 / person :arg0-of (h4 / have-org-role-91 :arg1 (o4 / organization) :arg2 (e4 / executive)) :arg0-of (h5 / have-org-role-91 :arg1 (u / unit) :arg2 (e5 / executive)) :arg0-of (h6 / have-org-role-91 :arg1 (u2 / unit) :arg2 (e6 / executive)) :arg0-of (h7 / have-org-role-91 :arg1 (u3 / unit) :arg2 (e7 / executive)) :arg0-of (h8 / have-org-role-91 :arg1 (u4 / unit) :arg2 (e8 / executive)) :arg0-of (h9 / have-org-role-91 :arg1 (u5 / unit) :arg2 (e9 / executive)) :arg0-of (h10 / have-org-role-91 :arg1 (u6 / unit) :arg2 (e10 / executive)) :arg0-of (h11 / have-org-role-91 :arg1 (u7 / unit) :arg2 (e11 / executive)) :arg0-of (h12 / have-org-role-91 :arg1 (u8 / unit) :arg2 (e12 / executive)))))))
(b / be-located-at-91 :arg1 (p / person :quant (a / about :op1 1500000) :arg0-of (i / immigrate-01)) :arg2 (c / continent :name (n / name :op1 "Europe")) :time (t / time :mod (t2 / that)))
(r / refer-01 :arg0 (o / organization :name (n / name :op1 "Costco") :mod (c / country :name (n2 / name :op1 "N-A"))) :arg1 (m / market :arg1-of (s / sell-01 :arg2 (p / public) :mod (a / also))) :arg2 (o2 / organization :name (n3 / name :op1 "Costco") :mod (c2 / country :name (n4 / name :op1 "N-A"))) :arg1-of (f / frequent-02))
(s / say-01 :arg0 (w / we) :arg1 (a / and :op1 (h / hotspot :mod (f / functional)) :op2 (p / protect-01 :arg1 (b / border)) :op3 (o / operation :mod (m / military))))
(s / stay-01 :arg1 (d / door :prep-to (c / country :arg0-of (p / produce-01 :arg1 (c2 / country :name (n / name :op1 "N-A"))))) :arg1-of (c3 / cause-01 :arg0 (c4 / catch-02 :polarity - :arg1 (d2 / door :poss (p2 / person :arg0-of (p3 / produce-01 :arg1 (c5 / country :name (n2 / name :op1 "N-A"))))) :arg2 (a / attend-02 :arg0 (p4 / person) :arg1 (g / group :mod (o / organization)) :location (c6 / conference :mod (o2 / organization :name (n3 / name :op1 "International" :op2 "Air" :op3 "Transport" :op4 "Association")) :location (l / location :name (n4 / name :op1 "Prague") :quant 1999))))))
(l / love-01 :arg0 (i / i) :arg1 (a / and :op1 (p / person :name (n / name :op1 "Snezana")) :op2 (p2 / person :name (n2 / name :op1 "Lana"))) :arg1-of (r / remain-01))
(s / say-01 :arg0 (p / person :name (n / name :op1 "O'Steen")) :arg1 (a / and :op1 (w / write-01 :arg0 (p2 / person :arg0-of (h / have-rel-role-91 :arg1 (h2 / he) :arg2 (d / daughter)))) :op2 (s2 / sings :arg0 (p3 / person) :arg1 (m / music :poss (p4 / person)))))
(m / multi-sentence :snt1 (a / and :op1 (w / want-01 :polarity - :arg0 (p / person :arg0-of (w2 / want-01 :arg1 (o / outward-looking :arg0 (p2 / person) :arg1 (c / country :name (n / name :op1 "Britain") :location (i / inside :op1 (t / tent :mod (o2 / organization :name (n2 / name :op1 "EU"))))) :arg0-of (h / have-org-role-91 :arg1 (t2 / tents :mod (o3 / organization :name (n3 / name :op1 "EU"))) :arg2 (p3 / pal))))) :arg1 (w3 / we) :manner (a2 / alone)) :op2 (s / say-01 :arg0 (p4 / person) :arg1 (s2 / suggest-01 :arg0 (p5 / person) :arg1 (g / get-22 :arg0 (a3 / and :op1 (p6 / person :arg0-of (h2 / have-org-role-91 :arg2 (m2 / minister :mod (s3 / short-sighted :degree (m3 / more))))) :op2 (p7 / person :arg0-of (h3 / have-org-role-91 :arg2 (o4 / official)) :location (c2 / capitals :quant (s4 / some)))) :arg1 (p8 / point :location-of (c3 / care-01 :polarity - :arg0 (a4 / and) :arg1 (s5 / stay-01 :arg1 (a5 / and)))))))) :snt2 (o5 / obligate-01 :arg1 (a6 / and :op1 (p9 / person :arg0-of (h4 / have-org-role-91 :arg2 (m4 / minister))) :op2 (p10 / person :arg0-of (h5 / have-org-role-91 :arg2 (o6 / official)))) :arg2 (p11 / point)))
(a / and :op1 (a2 / attempt-01 :arg0 (p / person :name (n / name :op1 "Peter" :op2 "Moody")) :arg1 (a3 / attempt-01 :arg0 (p2 / person) :arg1 (s / spy-01 :arg0 (p3 / person) :arg1 (s2 / spy-01) :location (s3 / stables :poss (p4 / person)) :time (y / year :mod (l / last)))) :arg1-of (a4 / allege-01)) :op2 (t / threaten-01 :arg0 (p5 / person) :arg1 (q / quit-01 :arg0 (p6 / person)) :time (i / immediate)))
(c / contrast-01 :arg2 (i / increase-01 :arg0 (f / fact :mod (t / this)) :arg1 (r / risk-01 :arg0 (a / and :op1 (c2 / compensate-01 :arg0 (p / person :arg0-of (b / bridge-01)) :arg2 (c3 / compensate-01 :arg0 (p2 / person) :arg2 (m / monetary-quantity :arg2-of (c4 / cost-01 :arg1 (o / operate-01))))) :op2 (r2 / reduce-01 :arg0 (p3 / person) :arg1 (m2 / monetary-quantity :arg2-of (c5 / cost-01 :arg1 (o2 / operate-01 :arg0 (p4 / person))))) :arg1-of (m3 / mean-01 :arg2 (r3 / reduce-01 :arg1 (n / number :quant-of (p5 / person :arg1-of (e / employ-01))))) :mod (p6 / primary)))))
(c / call-02 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg2 (p2 / professor))) :arg1 (p3 / person :arg0-of (h2 / have-rel-role-91 :arg1 (p4 / person) :arg2 (g / girlfriend))) :location (c2 / call-02 :quant 911))
(m / multi-sentence :snt1 (b / be-located-at-91 :mode (i / interrogative) :arg2 (a / amr-unknown)) :snt2 (s / support-01 :arg0 (l / law :poss (g / government-organization :name (n / name :op1 "Senate"))) :arg1 (v / version :poss (g2 / government-organization) :topic (l2 / law :location (i2 / in-front-of :op1 (g3 / government-organization :name (n2 / name :op1 "Chamber" :op2 "of" :op3 "Deputies"))))) :arg1-of (o / okay-01)))
(i / include-91 :arg1 (p / person :name (n / name :op1 "Qasim" :op2 "Akram") :arg1-of (i2 / include-91 :arg2 (p2 / person :arg0-of (f / found-01 :arg1 (p3 / person))))) :arg2 (a / and :op1 (p4 / person :name (n2 / name :op1 "Bolton")) :op2 (l / lab :arg1-of (b / be-located-at-91 :arg2 (o / ordinal-entity :value 1)))) :time (c / crash-01 :arg1 (c2 / crane) :direction (d / down)))
(c / contrast-01 :arg2 (w / wonder-02 :polarity - :arg1 (a / affair :mod (y / year :mod (l / last)) :prep-with (b / bending :arg1 (p / phone))) :arg0-of (c2 / cause-01 :arg1 (p2 / problem :mod (c3 / considerable) :mod (s / some)))))
(p / promise-01 :arg0 (p2 / person :arg0-of (h / have-org-role-91 :arg1 (o / organization :name (n / name :op1 "Commission") :poss (p3 / person)) :arg2 (o2 / organization :name (n2 / name :op1 "Commission")))) :arg1 (i / introduce-02 :arg0 (o3 / organization) :arg1 (p4 / point :mod (c / control-01)) :time (a / as-soon-as :op1 (p5 / possible-01 :arg1 (i2 / introduce-02)))) :manner (s / state-01 :polarity - :arg1 (o4 / or :op1 (n3 / number) :op2 (d / date))))
(h / have-concession-91 :arg1 (p / possible-01 :arg1 (m / make-02 :arg0 (t / turmoil :time (r / recent) :location (m2 / market :mod (f / finance) :mod (g / globe))) :arg1 (s / skittish :arg0 (p2 / person :arg0-of (h2 / have-org-role-91 :arg1 (g2 / government-organization :name (n / name :op1 "Fed")) :arg2 (o / official))) :arg1 (p3 / person :arg0-of (h3 / have-org-role-91 :arg1 (g3 / government-organization :name (n2 / name :op1 "Fed")) :arg2 (o2 / official))) :arg2 (v / volatility) :manner (r2 / raise-01 :arg0 (p4 / person) :arg1 (r3 / rate :arg1-of (f2 / fund-01 :arg0 (f3 / federal)) :mod (f4 / federal)) :arg2 (p5 / percentage-entity :value (N / N-A) :mod (m3 / mere)))))) :arg2 (s2 / show-01 :arg0 (d / data :quant (m4 / most)) :arg1 (g4 / grow-01 :arg1 (m5 / market :mod (f5 / finance) :mod (g5 / globe)))))
(e / equal-01 :arg1 (n / number :quant-of (p / person :arg0-of (f / flocked :arg1 (c / computer :poss (p2 / person))))) :arg2 (d / deals :arg0 (p3 / person) :arg1 (d2 / deal-01 :arg0 (p4 / person) :arg1 (w / website :quant (n2 / number) :mod (r / retailers)))) :time (y / year :mod (l / last)))
(o / obligate-01 :arg2 (h / have-03 :arg0 (c / company) :arg1 (a / and :op1 (c2 / certificates :mod (q / quality)) :op2 (c3 / certification :purpose (a2 / and :op1 (p / process-01 :arg1 (p2 / produce-01 :quant 1270 :arg1-of (s / special-02))) :op2 (c4 / certificates :arg1 (p3 / person :arg1-of (e / employ-01) :arg1-of (k / key-02))))))))
(s / say-01 :arg0 (p / person :name (n / name :op1 "Gyorgy" :op2 "Bakondi") :arg0-of (a / advise-01 :arg2 (s2 / security :mod (i / intellectual)))) :arg1 (c / catch-01 :arg0 (a2 / authority) :arg1 (p2 / person :quant 45) :purpose (t / try-01 :arg0 (p3 / person) :arg1 (a3 / and :op1 (c2 / cross-02 :arg0 (p4 / person) :arg1 (b / border-01)) :op2 (d / deep-02 :arg1 (p5 / person) :degree (m / more)) :location (c3 / country)))))
(a / affect-01 :arg1 (w / winds :arg1-of (c / change-01)) :degree (m / more-than) :compared-to (g / government-organization :name (n / name :op1 "Parliament")) :time (m2 / morning :mod (t / this)))
(s / say-01 :arg0 (o / organization :name (n / name :op1 "Czech" :op2 "Institute" :op3 "of" :op4 "Health" :op5 "Information" :op6 "and" :op7 "Statistics")) :arg1 (c / cause-01 :arg0 (c2 / common :arg1-of (l / long-03) :mod (c3 / common :degree (m / most)) :location (c4 / country :name (n2 / name :op1 "Czech" :op2 "Republic"))) :arg1 (o2 / organization)))
(s / stay-01 :arg1 (f / factor :mod (x / x)) :arg3 (p / person :quant 1.136 :arg0-of (v / view-01)) :arg1-of (c / cause-01 :arg0 (b / beat-01 :arg0 (a / and :op1 (p2 / person :quant 1.136 :arg0-of (v2 / view-01)) :op2 (p3 / person :quant 838,000 :arg0-of (h / have-org-role-91 :arg1 (o / organization :name (n / name :op1 "TBL" :op2 "Families")))) :op3 (p4 / person :arg0-of (h2 / have-org-role-91 :arg1 (o2 / organization) :arg3 (v3 / view-01))) :op4 (p5 / person :quant 726,000 :arg0-of (h3 / have-org-role-91 :arg1 (o3 / organization) :arg3 (v4 / view-01)))) :arg1-of (e / easy-05))))
(m / multi-sentence :snt1 (t / think-01 :arg0 (i / i) :arg1 (a / and :op1 (s / show-01 :arg0 (w / we) :arg1 (a2 / and :op1 (s2 / strong-02 :arg1 (w2 / we) :location (h / home)) :op2 (s3 / strong-02 :arg1 (w3 / we) :location (h2 / home)))) :op2 (s4 / strong-02 :arg1 (w4 / we) :location (h3 / home)))) :snt2 (a3 / and :op1 (s5 / strong-02 :arg1 (w5 / we) :location (h4 / home)) :op2 (s6 / say-01 :arg0 (w6 / we) :arg1 (c / coach :arg1-of (m2 / mean-01 :arg2 (l / lose-02 :arg0 (t2 / team) :arg1 (s7 / supercup :mod (o / only) :prep-against (p / person :name (n / name :op1 "Plze")))))))))
(p / put-03 :arg1 (f / feature :arg1-of (d / dominate-01 :arg0 (v / village))) :arg2 (o / operate-01 :arg1 (v2 / village) :time (y / year :mod (t / this))))
(m / make-01 :arg0 (- / -lrb- :name (n / name :op1 (i / iva) :op2 (i2 / iva))) :arg1 (d / decide-01 :arg3 (a / and :op1 (l / life :poss (p / person :arg0-of (h / have-rel-role-91 :arg2 (g / grandfather)))) :op2 (a2 / age :mod (o / old)) :op3 (f / funeral))))
(a / and :op2 (p / person :arg0-of (h / have-org-role-91 :arg1 (p2 / political-party :name (n / name :op1 "KMT")) :arg2 (c / chairman))))
(w / want-01 :arg0 (o / organization :name (n / name :op1 "EU")) :arg1 (h / help-01 :arg0 (o2 / organization) :arg1 (e / expand-01 :arg0 (c / country :name (n2 / name :op1 "Greece")) :arg1 (c2 / capacity :poss (c3 / country)) :arg3 (r / receipt :poss (a / and :op1 (a2 / asylum-seekers :arg1 (i / island)) :op2 (s / surveil-01 :arg1 (i2 / island)))))))
(w / want-01 :arg0 (o / organization :name (n / name :op1 "EU")) :arg1 (h / help-01 :arg0 (o2 / organization) :arg1 (e / expand-01 :arg0 (c / country :name (n2 / name :op1 "Greece")) :arg1 (c2 / capacity :poss (c3 / country)) :arg3 (r / receipt :poss (a / and :op1 (a2 / asylum-seekers :arg1 (i / island)) :op2 (s / surveil-01 :arg1 (i2 / island)))))))
(s / subject-01 :arg1 (t / this) :arg2 (b / baker :mod (d / decent) :domain (y / you)) :arg1-of (o / obvious-01))
(s / say-01 :arg0 (g / government-organization :arg0-of (g2 / govern-01)) :arg1 (t / thing :arg0-of (c / cause-01 :arg1 (c2 / change-01)) :domain (o / option :arg1-of (i / include-91 :arg2 (o2 / other))) :arg1-of (c3 / cause-01 :arg0 (o3 / option :poss (p / person :mod (o4 / other))))))
(g / go-02 :arg0 (p / person :name (n / name :op1 "Berg")) :arg4 (c / country :name (n2 / name :op1 "Hungary")) :purpose (g2 / give-01 :arg0 (p2 / person) :arg1 (a / aid-01 :mod (h / humanitarian)) :arg2 (r / refugee)))
(t / trend-01 :arg1 (t2 / this) :arg2 (t3 / trend-01 :arg1 (p / person :name (n / name :op1 "Dubský") :arg0-of (a / adds :arg1 (c / country :name (n2 / name :op1 "N-A")))) :arg2 (t4 / this) :arg1-of (g / grow-01)))
(l / lead-02 :arg0 (p / person :name (n / name :op1 "Byron" :op2 "Buxton") :arg0-of (h / have-org-role-91 :arg1 (c / center) :arg3 (l2 / lead-02 :arg0 (p2 / person)))) :arg1 (i / inning) :arg2 (d / double :mod (d2 / double) :mod (l3 / left)))
(m / multi-sentence :snt1 (s / say-01 :arg0 (r / rule-01) :arg1 (c / contain-01 :polarity - :arg0 (t / thing :arg1-of (d / decide-01 :arg3 (t2 / thing :arg1-of (q / question-01)))) :arg1 (t3 / thing :arg1-of (r2 / require-01) :mod (m2 / mandatory) :quant (s2 / several)) :arg1-of (q2 / question-01))) :snt2 (a / and :op1 (c2 / clear-01 :arg0 (a2 / and :op1 (b / building :mod (c3 / country :name (n / name :op1 "N-A"))) :op2 (b2 / building :mod (c4 / country))) :arg1 (t4 / thing :arg2-of (c5 / characteristic-02 :arg1 (s3 / shape :poss (a3 / and :op1 (b3 / building) :op2 (d2 / delineation :poss (b4 / building)))))) :arg2 (a4 / and :op1 (b5 / building) :op2 (d3 / delineation :arg1 (a5 / area)))) :op2 (a6 / affect-01 :arg0 (c6 / construct-01) :arg1 (a7 / area))))
(b / be-located-at-91 :arg1 (c / council :arg1-of (l / local-02)) :arg2 (s / solution :arg0-of (s2 / solve-01 :arg1 (t / thing :arg2-of (s3 / solve-01 :arg1 (t2 / they) :mod (w / well))))) :mod (o / only))
(a / and :op2 (o / obligate-01 :arg1 (y / you) :arg2 (r / remember-01 :arg0 (y2 / you) :arg1 (d / depend-01 :arg0 (j / job :poss (t / they)) :arg1 (t2 / thing :arg2-of (r2 / result-01))))))
(p / probable :domain (t / think-01 :polarity - :arg0 (t2 / they) :arg1 (g / get-05 :arg1 (t3 / they) :arg2 (g2 / game :mod (b / big))) :time (b2 / before :op1 (n / now) :quant (t4 / temporal-quantity :quant (N / N-A) :unit (w / week)))))
(p / possible-01 :arg1 (m / make-01 :arg0 (w / we) :arg1 (o / or :op1 (p2 / part) :op2 (c / component :mod (s / small)))) :arg1-of (p3 / possible-01))
(c / contrast-01)
(r / replace-01 :arg1 (b / building :arg1-of (m / modern-02) :arg1-of (c / connect-01 :arg2 (a / and :op1 (a2 / accident) :op2 (d / department :mod (e / emergency))))) :arg2 (i / it) :time (a3 / after :op1 (n / now) :quant (f / few :op1 (t / temporal-quantity :quant (N / N-A) :unit (y / year)))))
(a / and :op1 (s / sit-01 :arg1 (w / we) :arg2 (u / under :op1 (w2 / wait-01 :arg1 (w3 / we) :arg2 (c / come-01 :arg1 (w4 / we))))) :op2 (r / realize-01 :arg0 (i / i) :arg1 (s2 / sit-01 :arg1 (p / person :name (n / name :op1 "Diana") :arg0-of (h / have-org-role-91 :arg2 (s3 / senator))) :arg2 (n2 / next :prep-to (i2 / i)))) :op3 (d / dawns :arg0 (p2 / person) :arg1 (s4 / sit-01 :arg1 (p3 / person) :arg2 (n3 / next)) :time (t / trailer :prep-for (d2 / documentary :name (n4 / name :op1 (' / '')))) :time (b / back :op1 (d3 / date-entity :dayperiod (N / N-A)))))
(c / canned :arg1 (v / voices :mod (n / new) :frequency (s / sometimes) :location (r / room :arg1-of (s2 / suppose-01))) :concession (e / even-if :op1 (c2 / consistent-01 :arg1 (m / message) :arg2 (t / thing :arg1-of (s3 / say-01 :time (b / before))))))
(m / multi-sentence :snt1 (a / and :op1 (b / build-01 :arg1 (d / department :mod (i / internal-02) :poss (w / we) :mod (i2 / internal-02)) :time (b2 / before :op1 (n / now) :quant (t / temporal-quantity :quant (N / N-A) :unit (y / year)))) :op2 (r / reach-01 :arg0 (d2 / department) :arg1 (e / end-01 :arg1 (l / lifespan :poss (d3 / department))) :time (n2 / now))) :snt2 (p / point-out-02 :arg0 (p2 / person :name (n3 / name :op1 "Pavel" :op2 "Calábek") :arg0-of (h / have-org-role-91 :arg1 (l2 / location :name (n4 / name :op1 "Zlín" :op2 "Hospital")) :arg2 (d4 / director))) :arg1 (i3 / it)))
(s / surprise-01 :arg0 (d / dangling :mod (s2 / small) :quant (n / number :mod (l / large)) :location (a / around :op1 (s3 / she))) :arg1 (w / we) :time (t / think-01 :arg0 (w2 / we) :arg1 (o / over :domain (i / it) :mod (a2 / all))))
(a / and :op1 (t / think-01 :arg0 (p / person :quant 44) :arg1 (h / have-03 :polarity - :arg0 (p2 / person) :arg1 (p3 / personality) :purpose (s / serve-01 :arg0 (p4 / person) :arg1-of (e / effective-04))) :mod (s2 / still)) :op2 (s3 / say-01 :arg0 (p5 / person :quant (a2 / almost :op1 6) :arg0-of (h2 / have-org-role-91 :arg2 (h3 / head-of-state))) :arg1 (b / belong-01 :polarity - :arg0 (t2 / temperament :poss (p6 / person)) :arg1 (g / government-organization :name (n / name :op1 "White" :op2 "House")))))
(i / immersed :arg0 (h / he) :arg1 (h2 / he) :arg1-of (d / deep-02 :degree (s / so)) :arg1-of (c / cause-01 :arg0 (r / reveal-01 :arg1 (t / thing :arg2-of (r2 / result-01)) :time (a / always))))
(c / contrast-01 :arg2 (f / find-02 :arg0 (p / person :arg0-of (r / research-01)) :arg1 (f2 / find-01 :arg0 (p2 / person :arg0-of (r2 / research-01)) :arg1 (s / something :arg1-of (r3 / remain-01 :arg3 (b / buffets :mod (b2 / breakfast)))) :arg1-of (s2 / strong-02)) :time (d / date-entity :dayperiod (N / N-A))))
(s / say-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (a / authority :mod (c / city)) :arg2 (m / member) :time (f / former)) :arg0-of (h2 / have-org-role-91 :arg1 (a2 / authority :mod (c2 / city)) :arg2 (m2 / member) :time (f2 / former))) :arg1 (u / use-01 :arg0 (p2 / person :arg0-of (h3 / have-org-role-91 :arg1 (a3 / authority :mod (c3 / city)) :arg2 (m3 / member) :time (f3 / former))) :arg1 (r / role :mod (o / official) :poss (a4 / authority)) :purpose (g / gain-02 :arg0 (p3 / person) :arg1 (a5 / asset :arg1-of (w / welcome-01 :arg0 (p4 / person :arg0-of (o2 / organize-01 :arg1 (o3 / organization :name (n / name :op1 "Little" :op2 "Citizens")))))))))
(- / -rrb- :arg1 (p / person :name (n / name :op1 "Jana" :op2 "Fischerová") :arg0-of (h / highlight-01 :arg1 (p2 / point :mod (v / view-01 :arg1 (a / and :op1 (o / organization :name (n2 / name :op1 "Association" :op2 "of" :op3 "Czech" :op4 "Travel" :op5 "Agents") :arg0-of (c / compete-02)) :op2 (p3 / person :name (n3 / name :op1 "Petr" :op2 "Bendl") :arg0-of (t / talk-01 :arg1 (p4 / pull-01 :arg0 (p5 / person) :arg1 (r / rug) :arg2 (a2 / agency :mod (t2 / travel-01)))))))))) :mod (a3 / also) :mod (a4 / also))
(t / talk-01 :polarity - :arg0 (p / person :location (h / here)) :arg1 (c / come-01 :arg1 (p2 / person) :direction (b / back)) :mod (o / only))
(c / cause-01 :arg0 (w / wise :domain (i / injure-01) :source (p / person :name (n / name :op1 "Héctor" :op2 "Moreno")) :time (a / after :op1 (2 / 20-year-old :arg0 (p2 / person :name (n2 / name :op1 "Shaw")) :arg1 (a2 / area :mod (o / organization :name (n3 / name :op1 "PSV")))))) :arg1 (i2 / injure-01))
(c / come-01 :arg1 (t / thing :arg1-of (s / symbolize-01 :arg2 (v / village))) :arg4 (l / life))
(i / include-91 :arg1 (p / person :name (n / name :op1 "Mrs" :op2 "Laury") :arg1-of (i2 / include-91 :arg2 (w / woman :quant 1 :arg1-of (i3 / include-91 :arg2 (w2 / woman :quant 5 :arg0-of (l / lead-02 :arg1 (f / firm :arg0-of (l2 / lead-01) :arg0-of (l3 / lead-01)))))))) :arg2 (t / team :mod (t2 / top) :poss (s / she)) :purpose (r / reflect-01 :arg1 (t3 / team) :arg2 (a / and :op1 (m / man) :op2 (w3 / woman) :quant (n2 / number :arg2-of (e / equal-01)))) :mod (a2 / also))
(h / have-concession-91 :arg1 (p / prepare-02 :arg1 (c / company) :arg2 (h2 / hire-01 :arg0 (c2 / company) :arg1 (p2 / person :arg1-of (e / employ-01)) :purpose (a / and :op1 (h3 / help-01 :arg0 (p3 / person) :arg1 (s / store :arg2-of (s2 / staff-01))) :op2 (s3 / sell-01 :arg0 (p4 / person) :arg1 (p5 / product)) :op3 (d / deliver-01 :arg0 (p6 / person) :arg1 (p7 / product))) :arg2 (p8 / person))) :arg2 (a2 / and :op1 (b / be-located-at-91 :arg1 (t / they) :arg2 (a3 / away) :duration (t2 / temporal-quantity :quant (N / N-A) :unit (m / month))) :op2 (p9 / prepare-02 :arg1 (c3 / company) :arg2 (h4 / hire-01 :arg0 (c4 / company) :arg1 (p10 / person :arg1-of (e2 / employ-01))))))
(n / notice-01 :arg0 (p / person :arg0-of (h / have-rel-role-91 :arg2 (p2 / patient))) :arg1 (r / region :quant (a / all)) :arg1-of (n2 / notice-01 :arg0 (p3 / person :arg0-of (h2 / have-rel-role-91 :arg2 (p4 / patient)))))
(a / and :op1 (' / '' :arg1 (e / everything) :arg1-of (c / cause-01 :arg0 (p / pay-01 :arg1 (e2 / everything :arg1-of (p2 / pay-01 :arg1-of (c2 / cause-01 :arg0 (p3 / pay-01 :arg1 (e3 / everything)))))))) :op2 (a2 / add-01 :arg0 (i / i) :arg1 (p4 / pay-01 :polarity - :arg0 (p5 / person :arg1-of (p6 / pay-01 :arg1-of (p7 / possible-01 :polarity -))) :mod (o / only) :arg1-of (c3 / cause-01 :arg0 (o2 / or :op1 (d / due :domain (p8 / person)) :op2 (s / suppress-01 :arg1 (p9 / person)))))))
(s / say-01 :arg0 (c / city) :arg1 (a / and :op1 (e / entrusted :arg0 (c2 / city) :arg1 (c3 / contract-02 :arg1 (a2 / administrator))) :op2 (e2 / enter-01 :arg0 (p / person :name (n / name :op1 "Darothore") :arg1-of (c4 / contract-02 :arg0 (c5 / council :mod (c6 / city)) :time (t / then))) :arg1 (c7 / compete-02) :mod (o / only))) :time (t2 / then))
(c / contrast-01 :arg1 (a / and :op1 (s / study-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (c2 / college :mod (i / industry)) :arg2 (p2 / praise))) :arg1 (c3 / commission :mod (i2 / industry))) :op2 (s2 / study-01 :arg0 (p3 / person) :arg1 (c4 / commission :mod (i3 / industry)))) :arg2 (m / meet-03 :arg0 (p4 / person) :arg1 (c5 / commission :mod (i4 / industry))) :op3 (m2 / meet-02 :arg0 (p5 / person) :arg1 (q / quotas :prep-with (p6 / percentage-entity :value (N / N-A) :arg1-of (a2 / average-01)))))
(o / objected :arg0 (a / and :op1 (p / person :arg0-of (i / inhabit-01 :arg1 (h / house :mod (n / nearby)))) :op2 (p2 / person :arg0-of (i2 / inhabit-01 :arg1 (h2 / house :mod (n2 / nearby))))) :arg1 (f / fact :topic (b / build-01 :arg1 (b2 / building :arg0-of (l / look-02 :arg1 (b3 / building))))) :time (b4 / before :op1 (n3 / now) :quant (t / temporal-quantity :quant (N / N-A) :unit (y / year))))
(r / rebounded :arg1 (m / market) :time (m2 / month :mod (t / this)) :prep-with (p / product-of :op1 (n / nearly :op1 10) :op2 (p2 / percentage-entity :value (N / N-A)) :arg1-of (h / high-02 :arg1-of (p3 / possible-01))) :time (m3 / month :mod (t2 / this)))
(c / contrast-01 :arg1 (s / score-01 :arg1 (p / person :name (n / name :op1 "Di" :op2 "Maria")) :arg2 (l / league :mod (c2 / champions) :poss (p2 / person)) :extent (l2 / less-than :op1 (t / temporal-quantity :quant (N / N-A) :unit (m / minute)))) :arg2 (m2 / miss-02 :arg0 (p3 / person) :arg1 (e / excuse-02 :arg0 (p4 / person) :arg1 (o / opportunity :poss (p5 / person)) :time (b / before :op1 (h / head-02 :arg0 (p6 / person) :arg1 (h2 / home :poss (p7 / person)) :time (h3 / head-02 :arg0 (p8 / person) :arg1 (h4 / home) :time (d / date-entity :century (N2 / N-A)))))) :time (b2 / before :op1 (h5 / head-02 :arg0 (p9 / person) :arg1 (h6 / home) :time (d2 / date-entity :century (N3 / N-A))))))
(c / cause-01 :arg1 (i / increase-01 :arg0 (c2 / company) :arg1 (c3 / capital :poss (c4 / company) :mod (b / base)) :manner (t / total :quant 280)))
(a / activity-06 :arg0 (h / hospital :mod (r / region)) :mod (e / economy))
(o / or :op2 (s / something :mod (e / else)))
(o / out :op1 (t / temporal-quantity :quant (N / N-A) :unit (m / month)))
(s / study-01 :arg0 (w / we) :arg1 (p / person :arg0-of (o / oppose-01 :arg1 (w2 / we)) :arg0-of (h / help-01 :arg1 (l / lot)) :arg0-of (h2 / help-01 :arg1 (f / focus-01 :arg0 (w3 / we) :arg2 (w4 / we))) :arg0-of (h3 / help-01 :arg1 (f2 / focus-01 :arg0 (w5 / we) :arg2 (t / train-01 :arg0 (w6 / we)))) :time (t2 / time :mod (t3 / this))) :location (r / round :mod (q / qualifying)))
(s / see-01 :arg0 (m / month :mod (l / last)) :arg1 (r / rise-01 :arg1 (g / grow-01) :arg1-of (l2 / low-04 :degree (m2 / more))) :time (s2 / since :op1 (b / begin-01 :arg1 (r2 / record))))
(s / shame-01 :arg0 (f / finish-01 :arg0 (p / person :name (n / name :op1 "Wilshere")) :arg1 (p2 / problem :time (l / late :degree (m / most)) :mod (t / this))) :arg1 (a / and :op1 (f2 / finish-01 :arg0 (p3 / person) :time (s2 / season :mod (l2 / last)) :arg1-of (s3 / strong-02) :time (a2 / after :op1 (i / injure-01 :arg1 (p4 / person) :arg1-of (s4 / separate-02)))) :op2 (l3 / look-01 :arg0 (p5 / person) :arg1 (s5 / sharpness :mod (o / old) :poss (p6 / person)) :time (d / date-entity :dayperiod (N / N-A)) :time (t2 / then))))
(h / have-concession-91 :arg1 (r / remain-01 :arg1 (p / person :name (n / name :op1 "Louis" :op2 "van" :op3 "Gaal")) :arg3 (h2 / hopeful-03 :arg0 (p2 / person) :arg1 (p3 / possible-01 :arg1 (p4 / play-11 :arg0 (p5 / person :name (n2 / name :op1 "Shaw")) :mod (a / again) :time (s / season :mod (t / this)))))) :arg2 (l / leave-14 :arg0 (t2 / this) :arg1 (a2 / and :op1 (f / full-back :arg1 (t3 / tears :arg1-of (t4 / tears))) :op2 (r2 / rule-out-02 :arg0 (t5 / this) :arg1 (h3 / he) :duration (a3 / at-least :op1 (t6 / temporal-quantity :quant (N / N-A) :unit (m / month)))))))
(h / have-concession-91 :arg1 (r / remain-01 :arg1 (p / person :name (n / name :op1 "Louis" :op2 "van" :op3 "Gaal")) :arg3 (h2 / hopeful-03 :arg0 (p2 / person) :arg1 (p3 / possible-01 :arg1 (p4 / play-11 :arg0 (p5 / person :name (n2 / name :op1 "Shaw")) :mod (a / again) :time (s / season :mod (t / this)))))) :arg2 (l / leave-14 :arg0 (t2 / this) :arg1 (a2 / and :op1 (f / full-back :arg1 (t3 / tears :arg1-of (t4 / tears))) :op2 (r2 / rule-out-02 :arg0 (t5 / this) :arg1 (h3 / he) :duration (a3 / at-least :op1 (t6 / temporal-quantity :quant (N / N-A) :unit (m / month)))))))
(d / depend-01 :arg0 (i / it) :arg1 (i2 / i))
(t / tell-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (c / cabinet :poss (p2 / person :name (n / name :op1 "Corbyn") :arg0-of (h2 / have-org-role-91 :arg1 (c2 / cabinet :poss (p3 / person)) :arg2 (m / member))) :arg2 (m2 / member)))) :arg1 (a / advise-01 :arg0 (p4 / person) :arg1 (p5 / person :arg0-of (l / lead-02 :arg1 (p6 / political-party :name (n2 / name :op1 "Labour" :op2 "Party")))) :arg2 (s / sing-01 :arg0 (p7 / person) :arg1 (a2 / anthem :arg1-of (i / irrespective :arg2 (b / believe-01 :arg0 (p8 / person) :arg1 (r / recommend-01 :arg1 (a3 / abolished :arg1 (m3 / monarchy)))))))) :arg2 (p9 / person :arg0-of (h3 / have-org-role-91 :arg1 (c3 / cabinet :poss (o / organization :name (n3 / name :op1 "BBC" :op2 "Two"))) :arg2 (m4 / member))))
(b / be-located-at-91 :arg1 (s / she) :arg2 (j / jail) :time (n / now))
(c / cup)
(l / lead-01 :arg0 (p / person :name (n / name :op1 "Ond?ej" :op2 "Sokol") :arg0-of (h / have-org-role-91 :arg2 (d / director))) :arg1 (p2 / person :name (n2 / name :op1 "Monika" :op2 "Absolonová")) :ord (o / ordinal-entity :value 1))
(m / multi-sentence :snt1 (p / possible-01 :polarity - :arg1 (r / return-02 :arg0 (c / couple) :arg1 (p2 / property :poss (c2 / couple)) :time (a / after :op1 (m2 / multiple :op1 1989)))) :snt2 (t / turn-02 :arg0 (c3 / couple) :arg1 (c4 / couple) :arg2 (r2 / request-01 :arg0 (c5 / couple) :arg1 (c6 / compensate-01))))
(a / and :op1 (r / run :arg0 (t / thing :arg1-of (a2 / attract-01 :arg0 (c / call-02 :arg0 (s / siren)))) :arg1 (w / wall :poss (r2 / reality :poss (w2 / want-01 :arg0 (p / person :name (n / name :op1 "Merkel")) :arg1 (s2 / see-01 :arg0 (p2 / person))))) :time (s3 / soon)) :op2 (s4 / start-01 :arg0 (p3 / person) :arg1 (r3 / rebel-01 :arg0 (p4 / person))))
(p / possible-01 :arg1 (s / sell-01 :arg0 (p2 / person :arg1-of (l / liberal-02)) :arg1 (v / vehicle :mod (s2 / such)) :condition (c / claim-02 :polarity - :arg0 (p3 / person :arg0-of (o / own-01 :arg1 (t / they))) :arg1 (r / rate-entity-91 :arg1 (u / under :op1 (b / between :op1 (t2 / temporal-quantity :quant (N / N-A) :unit (y / year)) :op2 (t3 / temporal-quantity :quant (N2 / N-A) :unit (y2 / year)))) :arg2 (t4 / temporal-quantity :quant (N3 / N-A) :unit (y3 / year))))) :time (n / now))
(o / or :op2 (m / make-02 :mode (i / interrogative) :arg0 (i2 / it) :arg1 (e / exciting :domain (i3 / it))))
(a / and :op1 (m / marry-01 :arg1 (h / he)) :op2 (h2 / have-03 :arg0 (h3 / he) :arg1 (p / person :quant 3 :mod (y / young) :arg0-of (h4 / have-rel-role-91 :arg1 (h5 / he) :arg2 (c / child)))))
(s / smuggle-01 :arg0 (t / they) :arg1 (s2 / something :mod (e / else)))
(s / smuggle-01 :arg0 (t / they) :arg1 (s2 / something :mod (e / else)))
(a / and :op1 (j / jovial) :op2 (p / puffed-up) :op3 (a2 / authoritarian) :op4 (a3 / arrogant) :op5 (w / whatever :arg1-of (g / give-01 :arg2 (h / he) :time (m / moment :mod (a4 / any)))))
(c / challenge-01 :arg0 (p / person :name (n / name :op1 "Bellamy")) :arg1 (i / idea :poss (p2 / person :name (n2 / name :op1 "Bennett")) :topic (' / '' :arg0 ('2 / '' :name (n3 / name :op1 (e / exciting) :op2 (e2 / exciting)) :mod (f / football) :mod (e3 / exciting) :poss (p3 / person)) :arg1 (p4 / premiership))) :arg2 (w / win-01 :arg0 (d / dragons :name (n4 / name :op1 (g / george-illawarra) :op2 (d2 / dragons)) :poss (p5 / person)) :arg1 (p6 / premiership) :manner (p7 / play-01 :arg0 (p8 / person) :arg1 (m / metropolis :name (n5 / name :op1 ('3 / '') :op2 (f2 / football)) :mod (f3 / football)))))
(a / and :op1 (m / meet-02 :arg0 (s / she) :arg1 (p / person :mod (o / old :degree (m2 / more) :compared-to (s2 / she)) :mod (o2 / old :degree (m3 / more) :compared-to (s3 / she)))) :op2 (s4 / start-01 :arg0 (s5 / she) :arg1 (t / talk-01 :arg0 (s6 / she) :arg1 (f / film :poss (s7 / she)))) :time (b / back :op1 (b2 / back :mod (e / even))))
(e / email-address-entity :value (s / sfa))
(b / be-temporally-at-91 :arg1 (y / you) :arg2 (t / time :mod (n / next)) :mod (t2 / too))
(a / and :op1 (c / convict-01 :arg1 (p / person :name (n / name :op1 "Vladimir" :op2 "Putin") :arg0-of (h / have-org-role-91 :arg1 (p2 / person :name (n2 / name :op1 "Khodorkovsky") :arg0-of (h2 / have-org-role-91 :arg2 (p3 / president))) :arg2 (p4 / president))) :arg2 (a2 / and :op1 (p5 / person :arg0-of (h3 / have-org-role-91 :arg2 (p6 / president))) :op2 (p7 / person :arg0-of (h4 / have-org-role-91 :arg1 (o / organization) :arg2 (p8 / president))) :op3 (p9 / person :arg0-of (h5 / have-org-role-91 :arg1 (o2 / organization) :arg2 (p10 / president))) :op4 (p11 / person :arg0-of (h6 / have-org-role-91 :arg1 (o3 / organization) :arg2 (p12 / president))) :op5 (p13 / person :arg0-of (h7 / have-org-role-91 :arg1 (o4 / organization) :arg2 (p14 / president))) :arg1-of (o5 / open-04))) :op2 (p15 / pro :arg0 (p16 / person) :arg1 (e / effort :purpose (d / democracy))))
(b / byline-91 :arg0 (p / publication :name (n / name :op1 "N-A")) :arg1 (p2 / person :name (n2 / name :op1 "Christian" :op2 "Plumb")))
(t / transfer-01 :arg1 (h / he) :time (o / or :op1 (t2 / tomorrow) :op2 (l / late :degree (m / more))) :location (c / city :name (n / name :op1 "Manchester")) :time (l2 / late :degree (m2 / more)))
(t / transfer-01 :arg1 (h / he) :time (o / or :op1 (t2 / tomorrow) :op2 (l / late :degree (m / more))) :location (c / city :name (n / name :op1 "Manchester")) :time (l2 / late :degree (m2 / more)))
(c / confirm-01 :arg0 (g / government-organization :name (n / name :op1 "White" :op2 "House")) :arg1 (v / visit-01 :arg0 (p / person :name (n2 / name :op1 "Xi" :op2 "Jinping")) :arg1 (c2 / city :name (n3 / name :op1 "Washington")) :location (c3 / city :name (n4 / name :op1 "Washington"))))
(w / warn-01 :arg0 (p / person :name (n / name :op1 "Hana" :op2 "Aulická") :arg0-of (h / have-org-role-91 :arg2 (m / mp)) :mod (c / communism)) :arg1 (i / increase-01 :arg1 (e / employ-01 :polarity -) :location (a / area :mod (m2 / most))) :mod (a2 / also))
(p / play-02 :arg0 (w / woman) :arg1 (p2 / part :mod (b / big) :part-of (p3 / process-02 :arg1 (d / decision-making))))
(t / think-01 :arg0 (i / i) :arg1 (p / pressure :arg0 (p2 / person :arg0-of (p3 / play-01)) :arg1 (i2 / it) :direction (f / forward)))
(c / coping :arg1 (w / we) :mod (w2 / well :degree (q / quite) :compared-to (e / expect-01 :arg0 (w3 / we))) :time (n / now) :mod (w4 / well :degree (q2 / quite)))
(p / probable :domain (s / stop-01 :polarity - :arg0 (s2 / scientist :arg1-of (b / brilliant-01)) :arg1 (h / humanity :arg0-of (f / fascinate-01)) :time (e / ever :polarity -)))
(m / multi-sentence :snt1 (i / include-91 :arg1 (t / this) :arg2 (r / reason :arg0-of (c / cause-01 :arg1 (c2 / create-01 :arg1 (c3 / create-01 :arg1 (p / person :name (n / name :op1 "Dej")))))) :quant (m2 / multiple :op1 1) :arg1-of (i2 / include-91 :arg2 (r2 / reason :arg0-of (c4 / cause-01 :arg1 (c5 / create-01 :arg1 (c6 / create-01 :arg1 (s / si :poss (p2 / person)))))))) :snt2 (a / and :op1 (g / give-01 :mode (i3 / interrogative) :arg0 (y / you) :arg1 (c7 / chance-02 :arg0 (y2 / you)) :arg2 (y3 / you)) :op2 (s2 / support-01 :arg0 (p3 / person :arg1-of (s3 / support-01 :arg0 (p4 / person :arg1-of (g2 / go-on-15)))) :arg1 (y4 / you))))
(m / multi-sentence :snt1 (i / include-91 :arg1 (t / this) :arg2 (r / reason :arg0-of (c / cause-01 :arg1 (c2 / create-01 :arg1 (c3 / create-01 :arg1 (p / person :name (n / name :op1 "Dej")))))) :quant (m2 / multiple :op1 1) :arg1-of (i2 / include-91 :arg2 (r2 / reason :arg0-of (c4 / cause-01 :arg1 (c5 / create-01 :arg1 (c6 / create-01 :arg1 (s / si :poss (p2 / person)))))))) :snt2 (a / and :op1 (g / give-01 :mode (i3 / interrogative) :arg0 (y / you) :arg1 (c7 / chance-02 :arg0 (y2 / you)) :arg2 (y3 / you)) :op2 (s2 / support-01 :arg0 (p3 / person :arg1-of (s3 / support-01 :arg0 (p4 / person :arg1-of (g2 / go-on-15)))) :arg1 (y4 / you))))
(a / and :op1 (b / buy-01 :arg0 (p / person :name (n / name :op1 "Latecoere")) :arg1 (c / company :mod (c2 / czech)) :time (l / late :degree (m / more))) :op2 (c3 / come-01 :arg1 (o / order :mod (n2 / new))))
(a / and :op1 (m / marry-01 :arg1 (i / i) :arg2 (f / family :mod (d / drunk))) :op2 (m2 / marry-01 :arg1 (i2 / i)) :op3 (h / have-03 :arg0 (i3 / i) :arg1 (a2 / and :op1 (p / person :quant 2 :arg0-of (h2 / have-rel-role-91 :arg1 (i4 / i) :arg2 (c / child))) :op2 (s / so))))
(r / recommend-01 :arg1 (e / exemplify-01 :arg0 (s / salad :time (s2 / summer :mod (h / hot)))) :location (l / location :name (n / name :op1 "Bohemia" :op2 "Olej")))
(m / multi-sentence :snt1 (c / contrast-01 :arg1 (t / toyed :arg0 (t2 / they) :arg1 (c2 / create-01 :arg0 (t3 / they) :arg1 (a / advert :arg1 (c3 / corporation) :arg1-of (r / realistic-03 :degree (m2 / more))))) :arg2 (' / '' :arg0 (t4 / they) :arg1 (h / home :prep-with (a2 / and :op1 (c4 / crap :arg1-of (b / bright-02)) :op2 (a3 / animation))))) :snt2 (a4 / arresting :arg1 (i / it) :degree (m3 / more)))
(s / seat-01 :quant 620,000 :arg1-of (h / hot-05))
(a / and :op1 (r / republicans :arg1 (i / it) :mod (m / main)) :op2 (s / say-01 :arg0 (p / person :arg0-of (s2 / say-01 :arg1 (v / view-02 :arg0 (p2 / person) :arg1 (p3 / person :name (n / name :op1 "Clinton"))))) :arg1 (b / become-01 :arg1 (p4 / person) :arg2 (b2 / bad-04 :arg1 (p5 / person) :degree (m2 / more)))))
(a / and :op1 (t / turn-01 :arg0 (i / i) :arg1 (t2 / thing) :direction (a2 / around)) :op2 (v / vow :arg0 (i2 / i) :arg1 (p / person :name (n / name :op1 "Deila"))))
(c / contrast-01 :arg2 (e / end-up-03 :polarity - :arg1 (i / i) :arg2 (u / up :arg0 (i2 / i) :arg1 (r / recommend-01 :arg1 (d / do-02 :arg0 (i3 / i) :arg1 (r2 / recommend-01 :arg1 (d2 / do-02 :arg0 (i4 / i) :arg1 (r3 / recommend-01 :arg1 (d3 / do-02 :arg0 (i5 / i)))))))) :arg0-of (c2 / cause-01 :arg1 (k / know-01 :polarity - :arg0 (p / political-party :name (n / name :op1 "N-A") :source (f / factory)) :arg1 (l / location :arg4-of (s / send-01 :arg0 (p2 / political-party :name (n2 / name :op1 "N-A")) :arg1 (i6 / it)))))))
(a / and :op1 (t / throw-01 :arg0 (h / he) :arg1 (p / paperwork) :arg2 (t2 / table :poss (c / chair :poss (h2 / he)))) :op2 (l / look-01 :arg0 (h3 / he) :arg1 (a2 / and :op1 (a3 / armrests :arg1 (c2 / chair :poss (h4 / he))) :op2 (u / unpleasant :arg0 (h5 / he) :arg1 (a4 / armrests :arg1-of (f / fix-03))) :op3 (l2 / look-01 :arg0 (h6 / he)) :op4 (e / et-cetera))))
(a / and :op1 (r / reasonably :arg1 (i / item)) :op2 (s / sell-01 :arg1 (i2 / item) :arg2 (i3 / item :quant (n / number)) :location (b / bulk)))
(h / have-03 :arg0 (i / it) :arg1 (p / person :arg0-of (p2 / play-01) :mod (g / good :degree (r / really))))
(a / and :op1 (a2 / aid-01 :arg0 (f / forum :name (n / name :op1 (p / pitching))) :arg1 (p2 / process-02 :mod (t / this)) :mod (a3 / also)) :op2 (p3 / participate-01 :arg0 (p4 / person :arg0-of (s / study-01) :location-of (p5 / possible-01 :arg1 (m / meet-01 :arg0 (p6 / person :arg0-of (s2 / study-01)) :arg1 (p7 / person :mod (p8 / professional :mod (f2 / film))))))) :op3 (p9 / participate-01 :arg0 (p10 / person) :arg1 (w / work-01 :quant (s3 / several)) :time (a4 / and :op1 (o / once) :op2 (w2 / work-01))))
(p / possible-01 :arg1 (d / draw-02 :arg1 (c / child :mod (y / young :degree (m / more))) :arg2 (a / attract-01 :arg0 (c2 / child) :arg1 (s / scents :mod (s2 / sanitizer)))))
(a / and :op1 (w / want-01 :arg0 (p / person :arg0-of (p2 / partner-01 :arg1 (w2 / we))) :arg1 (t / twenty :arg0 (p3 / person))) :op2 (e / explain-01 :arg0 (p4 / person) :arg1 (t2 / thing :arg2-of (g / guarantee-01 :arg1 (g2 / good)))) :op3 (e2 / explain-01 :arg0 (p5 / person) :arg1 (p6 / person :name (n / name :op1 "Dubský"))))
(s / say-01 :arg0 (p / person :name (n / name :op1 "Xi")) :arg1 (a / and :op1 (a2 / add-02 :arg0 (p2 / push-02 :arg0 (r / reform-01)) :arg1 (a3 / and :op1 (r2 / rhetoric) :op2 (v / vitality) :mod (n2 / new))) :op2 (p3 / provide-01 :arg0 (r3 / reform-01) :arg1 (r4 / room :mod (n3 / new) :purpose (g / grow-01 :arg1 (e / economy))))))
(c / contrast-01 :arg1 (m / manage-02 :arg0 (p / person :quant (a / about :op1 20)) :arg1 (g / get-05 :arg1 (p2 / person))) :arg2 (r / remain-01 :arg1 (p3 / person) :arg3 (o / outside)))
(h / have-03 :arg0 (t / thing :prep-with (p / pickaxe)) :arg1 (p2 / power :mod (g / great)))
(w / win-01 :arg0 (i / it) :arg1 (s / supply-01 :arg1 (d / door :mod (e / emergency)) :arg2 (m / model :mod (a / a321))))
(h / have-03 :arg0 (f / festival) :arg1 (t / theme :poss (f2 / festival) :arg1-of (b / base-02 :arg2 (t2 / tune :mod (t3 / theme) :poss (f3 / festival)))) :frequency (r / rate-entity-91 :arg3 (t4 / temporal-quantity :quant (N / N-A) :unit (y / year))))
(a / and :op1 (r / report-01 :arg0 (i / i) :arg1 (t / thing :arg2-of (r2 / result-01 :arg1 (d / disappoint-01) :beneficiary (p / percentage-entity :value (N / N-A))))) :op2 (f / forecast-01 :arg0 (g / giant :name (n / name :op1 (d2 / deliver-01)) :mod (g2 / giant)) :arg1 (d3 / demand-01 :arg1 (a2 / and :op1 (s / service :mod (m / military)) :op2 (m2 / monetary-quantity :arg1-of (h / high-02 :degree (m3 / more)))) :location (d4 / division :mod (g3 / ground) :poss (a3 / and)) :arg1-of (h2 / high-02 :degree (m4 / more)))))
(p / possible-01 :arg1 (h / have-03 :arg0 (i / it) :arg1 (i2 / it) :time (y / yesterday) :arg1-of (h2 / have-03 :arg0 (i3 / it))))
(h / have-concession-91 :arg1 (d / difficult :degree (m / more :degree (a / all)) :domain (p / person :arg0-of (o / oppose-01 :arg1 (w / we))) :arg1-of (c / cause-01 :arg0 (h2 / have-03 :polarity - :arg0 (p2 / person) :arg1 (n / name :mod (b / big) :mod (a2 / any) :topic (s / squad :poss (p3 / person)))))) :arg2 (h3 / have-03 :arg0 (p4 / person) :arg1 (p5 / person :arg0-of (p6 / play-01) :arg0-of (s2 / score-01 :arg1 (p7 / person) :arg2 (g / goal :quant 3) :prep-against (o2 / organization :name (n2 / name :op1 "Manchester" :op2 "United"))))))
(m / multi-sentence :snt1 (p / possible-01 :arg1 (g / guarantee-01 :arg0 (i / i) :arg1 (c / change-01 :polarity - :arg0 (w / we) :arg1 (n / nothing :time (y / year :mod (a / all)) :prep-with (o / or :op1 (s / system :mod (d / defensive) :poss (w2 / we)) :op2 (t / technique)))))) :snt2 (e / emphasize-01 :arg0 (w3 / we) :arg1 (a2 / and :op1 (c2 / contact-01 :arg0 (w4 / we) :arg1 (w5 / we)) :op2 (t2 / turn-01 :arg0 (w6 / we) :direction (a3 / around) :beneficiary (w7 / we))) :time (b / before :op1 (n2 / now) :quant (t3 / temporal-quantity :quant (N / N-A) :unit (w8 / week) :mod (l / last)))))
(c / contrast-01)
(a / and :op1 (p / person :arg0-of (o / own-01 :arg1 (r / restaurant))) :op2 (p2 / person :arg0-of (o2 / own-01 :arg1 (r2 / restaurant)) :arg1-of (s / single-02) :mod (a2 / also)) :mod (a3 / also))
(c / contrast-01 :arg1 (a / ask-01 :arg0 (i / i) :arg1 (t / thing :arg1-of (c2 / check-01 :arg0 (c3 / complex)) :mod (t2 / this)) :frequency (a2 / amr-unknown)) :arg2 (w / want-01 :arg0 (n / no-one) :arg1 (t3 / talk-01 :arg0 (n2 / no-one) :arg1 (t4 / thing))))
(a / and :op1 (g / give-01 :arg1 (p / portion :mod (g2 / good) :part-of (s / store)) :arg2 (s2 / section :mod (f / freezer :mod (m / massive))) :arg1-of (c / cause-01 :arg0 (f2 / find-01 :arg0 (y / you) :arg1 (a2 / and :op1 (l / leave-11 :arg1-of (f3 / freeze-01)) :op2 (m2 / melon :mod (b / bitter)))))) :op2 (b2 / bitter :mod (b3 / bitter) :domain (a3 / and :op1 (m3 / melon :mod (b4 / bitter)) :op2 (m4 / melon :mod (b5 / bitterly)) :op3 (r / report :mod (b6 / blood :mod (b7 / beef))) :op4 (a4 / and :op1 (b8 / balls :mod (p2 / pork)) :op2 (f4 / food :mod (c2 / commercially-prepared))))))
(b / be-temporally-at-91 :arg1 (t / trend :mod (g / generation :mod (e / every))) :arg2 (l / lighter :arg1 (t2 / trend)) :time (u / until :op1 (n / now)))
(a / and :op2 (s / say-01 :arg0 (o / organization :name (n / name :op1 "Association")) :arg1 (c / change-01 :arg1 (p / practice :time (c2 / current)) :arg1-of (e / effective-04))))
(s / say-01 :arg2 (p / person :name (n / name :op1 "de" :op2 "Boer")))
(o / obligate-01 :arg2 (g / give-01 :arg0 (w / we) :arg1 (a / assist-01 :arg2 (c / country :arg1-of (c2 / come-01 :arg3 (o2 / or :op1 (c3 / come-01 :arg1 (r / refugee)) :op2 (s / stay-01 :arg1 (r2 / refugee) :arg3 (c4 / country :mod (h / home) :poss (r3 / refugee)) :time (l / leave-15 :arg0 (t / they) :arg1 (c5 / country :mod (h2 / home) :poss (t2 / they))))))) :degree (m / more))))
(c / contrast-01 :arg2 (p / project :arg1-of (l / long-03 :degree (v / very)) :domain (t / that)))
(b / blame-01 :arg0 (c / country :name (n / name :op1 "Saudi" :op2 "Arabia")) :arg1 (c2 / collapse-01 :arg1 (o / organization :name (n2 / name :op1 "Saudi" :op2 "Binladin" :op3 "Group") :mod (g / giant) :mod (c3 / construct-01))) :degree (p / part))
(s / seem-01 :arg1 (r / remain-01 :arg1 (p / person :name (n / name :op1 "Donald" :op2 "Trump")) :arg3 (a / and :op1 (r2 / remain-01 :arg1 (i / immigrate-01) :arg3 (i2 / immigrate-01)) :op2 (r3 / remain-01 :arg1 (i3 / immigrate-01) :arg3 (i4 / immigrate-01)))))
(c / contrast-01)
(c / contrast-01 :arg1 (p / part :domain (i / i) :source (i2 / it) :arg1-of (c2 / cause-01 :arg0 (h / have-rel-role-91 :arg0 (i3 / i) :arg1 (i4 / i) :arg2 (f / friend)))) :arg2 (f2 / friends :arg0 (i5 / i) :arg1 (i6 / it) :time (a / after :op1 (t / time :arg1-of (l / long-03) :mod (s / such)))) :arg1-of (h2 / have-condition-91 :arg2 (k / kicking :arg1 (i7 / i) :arg2 (r / relative :degree (r2 / relative)))))
(o / off :arg1 (s / storm) :time (w / weekend :mod (t / this)) :arg1-of (c / cause-01 :arg0 (w2 / win-01 :arg0 (t2 / they) :arg1 (r / right-05 :arg1 (t3 / they) :arg2 (h / host-01 :arg0 (t4 / they) :arg1 (o2 / or :op1 (o3 / organization :name (n / name :op1 "North" :op2 "Queensland" :op3 "Cowboys")) :op2 (o4 / organization :name (n2 / name :op1 "Cronulla" :op2 "Sharks")) :mod (e / either)) :time (n3 / night :mod (n4 / next)) :mod (p / preliminary) :location (l / laptop :arg1-of (s2 / sell-01 :time (m / morning :mod (n5 / next)))))))))
(s / share-01 :arg0 (a / and :op1 (p / person :name (n / name :op1 "Sarah" :op2 "Mackay")) :op2 (p2 / person :name (n2 / name :op1 "Sam" :op2 "Wood"))) :arg1 (r / rapport :arg1-of (e / easy-05)) :time (s2 / since :op1 (d / day :quant 1)))
(i / injure-01 :arg1 (p / person :mod (o / other) :arg1-of (i2 / injure-01)) :arg1-of (c / cause-01 :arg0 (a / amount :mod (t / that))))
(h / hear-01 :arg0 (y / you) :arg1 (t / that) :time (l / late :degree (m / more)))
(a / and :op1 (a2 / agree-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg2 (m / minister))) :arg1 (s / share-01 :arg0 (p2 / person) :arg1 (r / refuge) :arg2 (p3 / person :quant 40000 :arg0-of (s2 / seek-01 :arg1 (r2 / refuge))))) :op2 (s3 / speak-01 :arg0 (p4 / person) :arg1 (h2 / hope-01 :arg1 (r3 / reach-01 :arg0 (n / nation :mod (o / organization :name (n2 / name :op1 "EU"))) :arg1 (r4 / refugee :quant (b / between :op1 120,000 :op2 120,000))) :time (b2 / by :op1 (e / end-01 :arg1 (y / year))))))
(t / time :arg1-of (s / same-01) :time (t2 / time :arg1-of (s2 / same-01)))
(p / published :arg0 (w / we) :arg1 (n / name :poss (y / you)) :arg1-of (h / have-condition-91 :arg2 (a / ask-01 :arg0 (y2 / you) :arg1 (h2 / have-polarity-91 :arg2 -))))
(a / and :op1 (w / worry-02 :arg0 (h / he) :arg1 (o / or :op1 (e / eat-01 :arg0 (h2 / he) :arg1 (a2 / amr-unknown)) :op2 (d / drink-01 :arg0 (h3 / he) :arg1 (a3 / amr-unknown)))) :op2 (t / turned :arg0 (h4 / he) :arg1 (w2 / way :direction (o2 / out)) :time (e2 / eventual)))
(t / thing :arg2-of (r / result-01 :arg1 (o / organization :name (n / name :op1 "Kingfisher") :arg0-of (o2 / own-01 :arg1 (a / and :op1 (o3 / organization :name (n2 / name :op1 "Screwfix")) :op2 (o4 / organization :name (n3 / name :op1 "B&Q")))))))
(m / manage-02 :arg0 (h / he) :arg1 (i / it) :time (t / time))
(a / and :op1 (c / close-13 :arg1 (f / family :arg1-of (h / have-org-role-91 :arg0 (p / person :name (n / name :op1 "Binladin")) :arg2 (m / member))) :arg2 (f2 / family :arg0-of (r / rule-03 :arg1 (c2 / country :name (n2 / name :op1 "Saudi" :op2 "Arabia")))) :duration (m2 / multiple :op1 (t / temporal-quantity :quant (N / N-A) :unit (d / decade)))) :op2 (r2 / run-01 :arg0 (f3 / family) :arg1 (p2 / project :arg1-of (m3 / major-02))))
(a / and :op1 (c / come-01 :arg1 (t / they)) :op2 (c2 / come-01 :arg1 (t2 / they)) :op3 (c3 / come-01 :arg1 (t3 / they)))
(s / say-01 :arg0 (o / organization :name (n / name :op1 "Milan" :op2 "Urban")) :arg1 (a / and :op1 (- / -lrb- :mode (i / interrogative) :arg0 (p / person :arg0-of (h / have-org-role-91 :arg2 (m / member))) :arg1 (t / thing :arg1-of (c / conclude-01 :arg1-of (c2 / cause-01 :arg0 (a2 / and :op1 (c3 / concept :mod (e / energy) :arg1-of (u / update-01)) :op2 (e2 / et-cetera)))))) :op2 (d / decide-01 :arg0 (g / government-organization :arg0-of (g2 / govern-01)) :arg1 (l / limit-01 :arg1 (c4 / cannabis)) :time (b / before :op1 (p2 / pass-01 :arg0 (g3 / government-organization) :arg1 (l2 / law))))))
(o / obligate-01 :arg2 (r / realize-01 :arg0 (y / you) :arg1 (a / and :op1 (t / technician :mod (t2 / track :mod (r2 / railway)) :domain (y2 / you)) :op2 (o2 / obligate-01 :arg2 (b / behave :arg0 (y3 / you) :manner (a2 / accordingly))))))
(c / continue-01 :arg0 (c2 / city :name (n / name :op1 "Athens")) :arg1 (s / say-01 :arg0 (c3 / city) :arg1 (t / thing :arg1-of (s2 / say-01) :mod (f / final))) :source (v / view-01 :arg1-of (l / legal-02)))
FAILED_TO_PARSE#Two roles in a row.
(c / contrast-01 :arg2 (s / say-01 :arg0 (r / report-01 :location (p / press :mod (c2 / country :name (n / name :op1 "N-A")))) :arg1 (i / increase-01 :arg1 (a / and :op1 (s2 / supply-01 :arg1 (a2 / and :op1 (a3 / arm) :op2 (m / material :mod (m2 / military)))) :op2 (m3 / material :mod (m4 / military))) :time (s3 / since :op1 (b / begin-01 :arg1 (a4 / august))))))
(p / put-01 :arg0 (t / team :mod (h / home)) :arg1 (p2 / person :name (n / name :op1 "Yuki" :op2 "Bhambri")) :arg2 (- / -rrb- :name (n2 / name :op1 (a / atp) :op2 (r / rankings) :op3 (r2 / rankings)) :arg0-of (w / win-01 :arg1 (t2 / tournament :mod (c / challenger)) :location (p3 / peninsula :name (n3 / name :op1 "N-A")) :time (w2 / week :mod (l / last)) :location-of (b / beat-03 :arg0 (p4 / person) :arg1 (p5 / person :arg0-of (p6 / play-01)) :arg2 (a2 / and :op1 (3 / 300s) :op2 (4 / 400s)) :location (a3 / and :op1 (32 / 300s) :op2 (42 / 400s))))))
(s / say-01 :arg0 (p / person :arg0-of (t / try-01 :arg1 (s2 / swim-01 :arg0 (w / we) :arg2 (f / film :poss (w2 / we))))) :arg1 (t2 / that))
(i / include-01 :arg1 (n / newspaper :name (n2 / name :op1 "N-A") :quant 2 :mod (p / photographic)) :arg2 (u / url-entity :value (p2 / photographic)) :mod (a / also))
(m / multi-sentence :snt1 (r / recommend-01 :arg1 (e / ensure-01 :arg0 (y / you) :arg1 (b / be-located-at-91 :arg1 (y2 / you) :arg2 (c / checklist :poss (w / we) :mod (a / all)) :time (b2 / before :op1 (d / downloading :arg0 (y3 / you) :arg1 (y4 / you))))) :mod (a2 / also)) :snt2 (a3 / and :op1 (b3 / bring-up-02 :arg0 (y5 / you) :arg1 (f / features :mod (n / new) :arg2-of (i / include-91 :arg1 (a4 / and :op1 (p / person :arg0-of (a5 / assist-01) :arg1-of (p2 / personal-02) :arg0-of (a6 / assist-01)) :op2 (p3 / productive-03 :mod (h / huge) :mod (h2 / huge)))))) :op2 (f2 / fixed :arg0 (y6 / you) :arg1 (f3 / features :mod (n2 / new) :arg2-of (i2 / include-91 :arg1 (a7 / and :op1 (p4 / person :arg0-of (a8 / assist-01) :arg1-of (p5 / personal-02) :arg0-of (a9 / assist-01)) :op2 (p6 / productive-03 :mod (h3 / huge) :mod (h4 / huge)))))) :op3 (f4 / fix-02 :arg1 (s / system :arg0-of (o / operate-01)))))
(t / think-01 :arg0 (h / he) :arg1 (h2 / help-01 :arg0 (c / color) :arg1 (m / move-01 :manner (p / penalize-01))) :condition (d / die-01 :arg1 (h3 / he)))
(c / contrast-01 :arg1 (d / difficult :domain (r / realize-01 :arg0 (i / idea :mod (t / this)))) :arg2 (d2 / difficult :domain (r2 / realize-01 :arg0 (i2 / idea :mod (t2 / this)))))
(p / point-out-02 :arg0 (t / that) :arg1 (d / drop-01 :arg1 (m / market :mod (s / stock)) :condition (r / raise-01 :arg0 (g / government-organization :name (n / name :op1 "Fed")) :arg1 (r2 / rate :mod (m2 / market :mod (s2 / stock))) :condition (s3 / softening :arg0 (g2 / government-organization) :arg1 (r3 / rate) :manner (p2 / promise-01 :arg0 (g3 / government-organization) :arg1 (i / increase-01 :arg1 (i2 / increase-01 :mod (a / another))))))))
(a / and :op1 (p / put-01 :arg0 (p2 / person :arg0-of (h / head-01 :arg1 (h2 / head))) :arg1 (a2 / anyone) :arg2 (p3 / place :poss (p4 / person))) :op2 (a3 / accompanied :arg1 (s / salesman :mod (p5 / pushy)) :arg2 (w / way :poss (p6 / person)) :manner (o / or :op1 (- / -lrb- :arg1 (p7 / person)) :op2 (d / drive-02 :arg0 (p8 / person) :arg1 (-2 / -rrb- :mod (l / live-01)) :arg2 (a4 / away)))) :time (c / come-12 :arg1 (l2 / live-01 :arg0 (h3 / head))))
(r / refuse-01 :arg0 (p / person :arg0-of (h / have-rel-role-91 :arg1 (p2 / person :arg0-of (h2 / have-org-role-91 :arg1 (p3 / political-party :name (n / name :op1 "KMT")))) :arg2 (m / member) :duration (l / long))) :arg1 (a / and :op1 (a2 / attend-01 :arg0 (p4 / person) :arg1 (c / committee :arg0-of (c2 / check-01))) :op2 (l2 / leave-15 :arg0 (p5 / person) :arg1 (p6 / political-party) :arg1-of (a3 / allege-01 :arg0 (r2 / reason :mod (h3 / health)) :arg1-of (a4 / allege-01))) :time (s / subsequent)))
(a / address-03 :arg0 (l / lama :name (n / name :op1 (d / dalai))) :arg2 (i / issue-02 :arg0 (c / crisis :mod (r / refugee) :arg1-of (g / go-on-15)) :location (s / speech :poss (h / he)) :time (o / open-01 :arg1 (p / province :name (n2 / name :op1 "N-A") :arg1-of (l2 / lama :arg2 (n3 / name :op1 (e / ethical)))))) :time (b / begin-01 :arg1 (v / visit-01 :arg0 (h2 / he) :arg1 (c2 / country :name (n4 / name :op1 "UK")) :mod (1 / 10-day))))
(m / make-01 :arg0 (a / and :op1 (m2 / man :quant 2) :op2 (m3 / man :quant 2) :op3 (p / person :name (n / name :op1 "Geoff" :op2 "Britten") :arg0-of (h / have-org-role-91 :arg2 (c / cameraman)))) :arg1 (i / it) :mod (f / final) :time (s / season :mod (s2 / season)))
(s / say-01 :arg0 (p / person :name (n / name :op1 "N-A")) :arg1 (s2 / see-01 :arg0 (y / you) :arg1 (g / gold :arg1-of (h / have-03 :arg0 (t / they))) :arg2 (t2 / they) :arg1-of (c / cause-01 :arg0 (s3 / see-01 :arg0 (y2 / you) :arg1 (g2 / gold :arg1-of (h2 / have-03 :arg0 (t3 / they)))))) :arg2 (i / i))
(d / difficult :polarity - :domain (f / find-01 :arg1 (w / woman :mod (g / good)) :arg1-of (p / put-01 :arg0 (w2 / woman) :arg2 (b / board :poss (w3 / we)))))
(c / contrast-01 :arg2 (d / desperate :domain (p / person :quant (m / many) :arg1-of (r / resemble-01 :arg2 (f / family :arg1-of (h / have-org-role-91 :arg0 (i / i) :arg2 (m2 / member))))) :purpose (h2 / help-01)))
(v / view-01 :arg0 (p / person :quant 6 :arg1-of (r / republican)) :arg1 (p2 / person :name (n / name :op1 "Donald" :op2 "Trump")) :mod (f / favorable) :time (n2 / now))
(o / obligate-01 :arg1 (i / i) :arg2 (t / try-01 :arg0 (i2 / i) :arg1 (r / remember-01 :arg0 (i3 / i) :arg1 (d / detail :quant (a / all)))) :mod (j / just))
(m / multi-sentence :snt1 (a / absurd :domain (t / tell-01 :arg1 (a2 / and :op1 (t2 / tell-01 :arg0 (y / you) :arg2 (p / person)) :op2 (b / be-located-at-91 :arg1 (y2 / you) :arg2 (u / under :op1 (t3 / take-01 :arg0 (y3 / you) :arg1 (t4 / temporal-quantity :quant (N / N-A) :unit (y4 / year)) :arg2 (y5 / you))))))) :snt2 (c / cause-01 :arg0 (a3 / amr-unknown) :arg1 (h / hate-01 :polarity - :arg0 (y6 / you) :arg1 (m2 / marmite) :mod (h2 / honest)) :arg1-of (c2 / cause-01 :arg0 (a4 / amr-unknown)) :arg1-of (c3 / cause-01 :arg0 (a5 / amr-unknown)) :arg1-of (c4 / cause-01 :arg0 (a6 / amr-unknown)) :arg1-of (c5 / cause-01 :arg0 (a7 / amr-unknown)) :arg1-of (c6 / cause-01 :arg0 (a8 / amr-unknown)) :arg1-of (c7 / cause-01 :arg0 (a9 / amr-unknown)) :arg1-of (c8 / cause-01 :arg0 (a10 / and :op1 (g / guy :mod (s / serious)) :op2 (g2 / guy :arg1-of (b2 / be-located-at-91 :arg2 (r / room :part-of (i / i)))) :mod (j / just)))))
(m / multi-sentence :snt1 (a / and :op1 (s / story :topic (p / pregnancies :quant 4) :mod (t / this)) :op2 (p2 / person :arg1-of (b / births)) :domain (s2 / story :mod (t2 / this) :topic (a2 / and :op1 (p3 / pregnancies :quant 4) :op2 (b2 / births)))) :snt2 (p4 / p.m. :mode (i / interrogative) :time (e / evening :mod (t3 / tuesday))))
(d / delay-01 :arg1 (b / bus))
(c / clear-06 :polarity - :arg1 (o / or :op1 (a / accept-01 :arg0 (h / he) :arg1 (p / petition-01)) :op2 (m / meet-03 :arg0 (h2 / he) :arg1 (p2 / pope) :time (a2 / already))))
(e / expect-01 :arg1 (r / reveal-01 :arg0 (p / person :mod (c / country :name (n / name :op1 "N-A"))) :arg1 (d / detail-01 :arg0 (p2 / person) :arg1 (s / strategy :mod (d2 / defend-01) :poss (p3 / person)) :degree (m / more) :time (d3 / date-entity :month 9 :day 29 :time-of (a / and :op1 (f / food) :op2 (l / liquor) :op3 (r2 / range)))) :time (d4 / day :time-of (a2 / and :op1 (f2 / food) :op2 (l2 / liquor) :op3 (r3 / range)))))
(s / say-01 :arg0 (m / media :mod (c / country :name (n / name :op1 "N-A"))) :arg1 (a / assure-01 :arg0 (m2 / media :mod (c2 / country :name (n2 / name :op1 "N-A"))) :arg1 (p / pool) :degree (v / virtual)))
(t / take-01 :arg0 (c / city :name (n / name :op1 "Detroit")) :arg1 (a / advantage) :arg2 (p / person :name (n2 / name :op1 "Phil" :op2 "Hughes") :mod (r / rusty)) :time (e / early))
(i / include-91 :arg1 (i2 / i :quant (a / all)) :arg2 (i3 / i))
(s / say-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (a / and :op1 (p2 / person :name (n / name :op1 "Mr" :op2 "Smith")) :op2 (p3 / person :arg0-of (h2 / have-org-role-91 :arg2 (s2 / secretary :mod (w / work-01)))))) :op3 (p4 / person :arg0-of (h3 / have-org-role-91 :arg2 (s3 / secretary :mod (p5 / pension)))) :op4 (p6 / person :arg0-of (h4 / have-org-role-91 :arg2 (s4 / secretary :mod (p7 / pension)))) :op5 (p8 / person :arg0-of (h5 / have-org-role-91 :arg2 (s5 / secretary :mod (p9 / pension))))) :arg1 (o / oppose-01 :arg0 (p10 / party) :arg1 (p11 / plan-01 :arg0 (g / government-organization) :arg1 (r / reduce-01 :arg0 (g2 / government-organization) :arg1 (l / level :mod (c / cap)) :arg2 (m / monetary-quantity :quant 23,000 :unit (p12 / pound))) :mod (o2 / only)) :arg1-of (c2 / clear-06 :degree (v / very))) :duration (t / temporal-quantity :quant (N / N-A) :unit (h6 / hour)))
(w / want-01 :mode (i / interrogative) :arg0 (y / you) :arg1 (g / get-01 :arg0 (y2 / you) :arg1 (t / talk-01 :arg0 (w2 / world))))
(h / have-03 :arg0 (h2 / have-03 :arg1 (s / status :arg0-of (e / exclusive-02))) :arg1 (t / thing :arg2-of (p / price-01)))
(h / have-03 :arg0 (h2 / have-03 :arg1 (s / status :arg0-of (e / exclusive-02))) :arg1 (t / thing :arg2-of (p / price-01)))
(s / see-01 :arg1 (p / person :name (n / name :op1 "Hayne")) :arg1-of (c / cause-01 :arg0 (a / and :op1 (m / make-01 :arg0 (p2 / person) :arg1 (w / way :poss (p3 / person)) :arg2 (f / field) :time (a2 / after :op1 (t / tell-01 :arg0 (p4 / person) :arg1 (w2 / way :poss (p5 / person)) :arg2 (f2 / field)))) :op2 (t2 / tell-01 :arg0 (p6 / person :name (n2 / name :op1 "Hamish") :arg0-of (h / have-org-role-91 :arg1 (r / radio :mod (c2 / country)) :arg2 (d / duo) :time (l / late :degree (m2 / more)))) :arg1 (p7 / possible-01 :polarity - :arg1 (s2 / start-01 :arg0 (p8 / person) :arg1 (s3 / start-01 :arg0 (p9 / person) :arg1 (c3 / career :poss (o / organization :name (n3 / name :op1 "NFL")) :mod (o2 / organization :name (n4 / name :op1 "NFL"))) :arg1-of (b / bad-05 :degree (m3 / more)))))))))
(m / multi-sentence :snt1 (s / see-01 :arg0 (i / i) :arg1 (i2 / it) :manner (w / way)) :snt2 (p / play-01 :arg0 (w2 / we) :location (h / home) :arg0-of (c / cause-01 :arg1 (p2 / play-11 :polarity - :arg0 (w3 / we) :arg2 (h2 / home) :mod (d / definite)))))
(p / possible-01 :polarity - :arg1 (t / talk-01 :arg0 (w / we) :arg1 (p2 / person :arg0-of (u / use-01))) :condition (o / or :op1 (b / bag :quant (m / multiple :op1 (m2 / mass-quantity :quant (N / N-A) :unit (g / gram)))) :op2 (g2 / gearbox)))
(a / and :op1 (c / come-01 :arg1 (p / person :name (n / name :op1 "Paul" :op2 "Collingwood")) :arg3 (l / leg :part-of (t / tour))) :op2 (b / bring-01 :arg0 (p2 / person) :arg1 (a2 / and :op1 (e / energy :mod (b2 / both)) :op2 (s / streak :mod (r / ruthlessly))) :arg2 (l2 / laugh-01)))
FAILED_TO_PARSE#Two roles in a row.
(s / see-01 :arg0 (p / person :arg0-of (v / visit-01)) :arg1 (s2 / selection :poss (f / film :mod (i / interesting :degree (m / most)) :arg1-of (m2 / mean-01 :arg2 (a / and :op1 (a2 / animated) :op2 (a3 / animated) :op3 (d / documentaries))))))
(s / signal-07 :mode (i / interrogative) :arg1 (s2 / sign-01 :arg1 (t / thing :arg1-of (s3 / signal-07))) :condition (s4 / sign-01 :arg1 (m / mind :mod (c / cluttered))))
(a / and :op1 (p / pay-01 :arg0 (w / we) :arg1 (e / everything) :location (c / country :arg2-of (i / include-01 :arg1 (a2 / and :op1 (p2 / police) :op2 (c2 / court) :op3 (a3 / attorneys :mod (s / state)))))) :arg2 (c3 / country :name (n / name :op1 "Kosovo") :mod (s2 / safe-01)))
(k / kofola :arg1 (m / move-01 :arg2 (c / country :name (n / name :op1 "Poland"))) :arg2 (c2 / country :name (n2 / name :op1 "Czech" :op2 "Republic")) :arg1-of (c3 / cause-01 :arg0 (c4 / consider-02 :arg1 (e / enter-01 :arg1 (e2 / exchange-01 :arg1 (s / stock :mod (c5 / criminal-organization :name (n3 / name :op1 "N-A"))))))))
(a / and :op1 (m / make-01 :arg0 (a2 / and :op1 (c / company :arg0-of (m2 / make-01 :arg1 (b / building :name (n / name :op1 "N-A"))) :location (w / world)) :op2 (c2 / company :quant 1 :arg1-of (i / include-91 :arg2 (c3 / company :mod (t / tech :arg1-of (h / high-02)) :mod (b2 / big :degree (m3 / most) :compared-to (w2 / world)))))) :arg1 (m4 / move-02 :arg0 (f / firm :mod (t2 / tech :arg1-of (h2 / high-02)) :mod (b3 / big :degree (m5 / most) :compared-to (w3 / world))))) :op2 (b4 / base-02 :arg1 (t3 / thing :arg1-of (b5 / believe-01 :arg0 (f2 / firm))) :arg2 (g / good :degree (m6 / more))))
(s / say-01 :arg1 (k / know-01 :polarity - :arg0 (i / i) :arg1 (p / possible-01 :arg1 (s2 / say-01 :arg0 (i2 / i) :arg1 (p2 / possible-01 :arg1 (s3 / say-01 :arg0 (i3 / i) :arg1 (p3 / possible-01)))))) :arg2 (p4 / person :name (n / name :op1 "N-A")))
(m / multi-sentence :snt1 (p / possible-01 :arg1 (t / threaten-01 :arg0 (c / country :name (n / name :op1 "Germany")) :arg1 (f / force-04) :arg2 (f2 / force-04) :mod (o / only))) :snt2 (a / and :op1 (p2 / possible-01 :arg1 (p3 / participate-01 :arg0 (c2 / country) :arg1 (f3 / force-04)) :mod (o2 / only)) :op2 (a2 / appear-02 :arg1 (h / have-part-91 :arg1 (i / it) :arg2 (p4 / part :mod (s / small :degree (i2 / increase-01)) :arg1-of (m2 / mean-01 :arg2 (p5 / population :poss (c3 / country))))) :op3 (c4 / catch-up-04 :arg1 (r / reality) :arg2 (p6 / part :mod (s2 / small :degree (m3 / most) :compared-to (p7 / population :poss (c5 / country))))))))
(m / multi-sentence :snt1 (c / contrast-01 :arg2 (a / ask-01 :arg1 (r / recommend-01 :arg1 (g / get-01 :arg0 (a2 / amr-unknown) :arg1 (r2 / rise-01 :arg1 (w / wood) :mod (f / final))) :condition (a3 / ask-01 :polarity - :arg0 (y / you) :arg1 (q / question-01))))) :snt2 (p / possible-01 :arg1 (p2 / provide-01 :arg0 (t / thing :arg1-of (a4 / answer-01 :arg0 (t2 / they))) :arg1 (p3 / person :arg0-of (w2 / win-01 :arg1 (h / heart :part-of (b / bachelors)))) :arg2 (p4 / person :arg0-of (w3 / win-01 :arg1 (h2 / heart :part-of (b2 / bachelors)))))))
(a / and :op1 (s / sit-01 :arg1 (a2 / and :op1 (p / person :name (n / name :op1 "Terry" :op2 "Bailey")) :op2 (p2 / person :name (n2 / name :op1 "Dayle" :op2 "Brown")) :op3 (p3 / person :name (n3 / name :op1 "Brian" :op2 "Stewart") :mod (e / exact))) :arg2 (r / room :prep-with (m / man)) :time (b / before :op1 (n4 / now) :quant (t / temporal-quantity :quant (N / N-A) :unit (m2 / month))) :time (b2 / before :op1 (n5 / now) :quant (t2 / temporal-quantity :quant (N2 / N-A) :unit (m3 / month)))) :op2 (a3 / and :op1 (s2 / sit-01 :arg1 (p4 / person) :arg2 (u / under :op1 (m4 / man))) :op2 (o / offer-01 :arg0 (p5 / person) :arg1 (e2 / employ-01 :arg0 (p6 / person) :arg1 (p7 / person)) :purpose (o2 / offer-01 :arg0 (p8 / person) :arg1 (i / information :topic (t3 / thing :arg1-of (d / do-02 :arg0 (i2 / i) :location (s3 / stables :poss (i3 / i)))))))))
(a / agree-01 :polarity - :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (a2 / and :op1 (a3 / agency :mod (t / travel-01) :mod (o / organization :name (n / name :op1 "Association" :op2 "of" :op3 "Travel" :op4 "Agencies"))) :op2 (p2 / person :arg0-of (h2 / have-org-role-91 :arg1 (o2 / organization) :arg2 (m / member))) :op3 (p3 / person :name (n2 / name :op1 "Tomio" :op2 "Okamura") :arg0-of (h3 / have-org-role-91 :arg1 (o3 / organization) :arg2 (m2 / member))) :op4 (p4 / person :arg0-of (h4 / have-org-role-91 :arg1 (o4 / organization) :arg2 (m3 / member))) :op5 (p5 / person :arg0-of (h5 / have-org-role-91 :arg1 (o5 / organization) :arg2 (m4 / member)))))) :arg1 (f / fear-01 :arg0 (p6 / person :name (n3 / name :op1 "Kalousek"))))
(s / spend-02 :arg0 (p / politician) :arg1 (t / temporal-quantity :quant (N / N-A) :unit (h / hour)) :arg2 (c / cell) :time (e / eventual))
(m / monument :mod (t / technology) :arg1-of (l / local-02) :domain (w / windmill :mod (c / chlum)))
(m / multi-sentence :snt1 (n / need-01 :mode (i / interrogative) :arg0 (y / you) :arg1 (t / this)) :snt2 (p / peach :li 1 :arg1 (r / rocket :quant (m2 / multiple :op1 1))) :snt3 (l / leave-11 :mode (i2 / interrogative) :arg0 (p2 / person :quant 1 :arg1-of (i3 / include-91 :arg2 (p3 / person :quant 3 :arg0-of (l2 / launch-01 :arg1 (o / oil)))))) :li 3)
(f / follow-01 :arg1 (w / withdrew :arg0 (a / and :op1 (r / rule-03 :arg0 (o / organization :name (n / name :op1 "Constitutional" :op2 "Court"))) :op2 (p / person :name (n2 / name :op1 "Martina" :op2 "Berdychová") :arg0-of (h / have-org-role-91 :arg1 (o2 / organization) :arg3 (r2 / rule-03))) :op3 (p2 / person :arg0-of (h2 / have-org-role-91 :arg1 (o3 / organization) :arg3 (r3 / rule-03))) :op4 (p3 / person :arg0-of (h3 / have-org-role-91 :arg1 (o4 / organization) :arg3 (r4 / rule-03 :arg0 (p4 / person)))) :op5 (p5 / person :arg0-of (h4 / have-org-role-91 :arg1 (o5 / organization) :arg3 (r5 / rule-03)))) :arg1 (p6 / propose-01 :arg0 (p7 / person)) :arg0-of (l / limit-01 :arg1 (m / motion)) :arg0-of (l2 / limit-01 :arg1 (l3 / liability :poss (c / company :arg0-of (i / insure-02)))) :arg0-of (l4 / limit-01 :arg1 (r6 / risk-01 :mod (e / entire)))) :arg2 (r7 / rule-03 :arg0 (a2 / and :op1 (o6 / organization) :op2 (o7 / organization))))
(s / say-01 :arg0 (c / comment-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (s2 / state :mod (c2 / country :name (n / name :op1 "Scotland"))) :arg2 (s3 / secretary :mod (s4 / state))))) :arg1 (l / laid :arg0 (p2 / plan-01 :arg0 (g / government-organization :arg0-of (g2 / govern-01)) :arg1-of (l2 / long-03)) :arg1 (f / foundation) :purpose (e / economy :arg1-of (s5 / strong-02 :degree (m / more)))))
(s / say-01 :arg0 (p / person :arg0-of (v / vote-01) :mod (p2 / primary) :quant (a / about :op1 (1 / 1/2))) :arg1 (s2 / say-01 :arg0 (p3 / person) :arg1 (s3 / support-01 :arg0 (p4 / person) :arg1 (p5 / person :name (n / name :op1 "Clinton")) :condition (b / become-01 :arg1 (p6 / person) :arg2 (n2 / nominate-01 :arg1 (p7 / party))))))
(h / have-concession-91 :arg2 (a / attempt-01 :arg0 (p / person :mod (c / country :name (n / name :op1 "N-A"))) :arg1 (c2 / cover-01 :arg0 (p2 / person) :arg1 (s / spill :mod (l / lead-02)) :time (t / today)) :concession (a2 / attempt-01 :arg0 (p3 / person) :arg1 (c3 / cover-01 :arg0 (p4 / person) :arg1 (s2 / spill :mod (l2 / lead-02)) :time (t2 / today)))))
(a / and :op1 (f / feel-01 :arg0 (p / person :arg0-of (h / have-rel-role-91 :arg1 (y / you) :arg2 (h2 / housemates))) :arg1 (o / oblige-02 :arg1 (p2 / person) :arg2 (s / scrap-01 :arg0 (p3 / person)))) :op2 (p4 / possible-01 :arg1 (e / end-up-03 :arg1 (p5 / person) :arg2 (a2 / associating :arg0 (p6 / person) :arg1 (f2 / face) :arg2 (s2 / surprise :mod (t / tasty))))))
(g / get-01 :arg0 (p / person :name (n / name :op1 "Lyth")) :arg1 (d / division :quant 7 :arg1-of (r / resemble-01 :arg2 (p2 / person :name (n2 / name :op1 "Sam" :op2 "Robson")))) :time (b / before :op1 (g2 / get-02 :arg0 (p3 / person :name (n3 / name :op1 "Nick" :op2 "Compton")) :arg1 9 :quant 9)))
(a / and :op1 (s / stake :quant (m / much)) :op2 (a2 / account-01 :arg0 (a3 / and :op1 (l / location :name (n / name :op1 "South" :op2 "Australia")) :op2 (a4 / account :mod (e / email)) :quant (a5 / almost :op1 30)) :arg1 (s2 / store :name (n2 / name :op1 (f / footprint)) :poss (o / organization :name (n3 / name :op1 "Metcash")))) :op3 (g / generate-01 :arg0 (a6 / and) :arg1 (p / profit :arg1-of (h / high-02 :degree (m2 / more)) :compared-to (p2 / profit-01 :arg0 (o2 / organization :name (n4 / name :op1 "Metcash")) :location (e2 / east :part-of (o3 / organization))))))
(s / say-01 :arg0 (g / government-organization :arg0-of (g2 / govern-01)) :arg1 (t / thing :arg0-of (c / cause-01 :arg1 (c2 / change-01)) :domain (o / option :arg1-of (i / include-91 :arg2 (o2 / other))) :arg1-of (c3 / cause-01 :arg0 (o3 / option :poss (p / person :mod (o4 / other))))))
(a / adjust-01 :arg0 (p / pension :location (c / country :name (n / name :op1 "Czech" :op2 "Republic"))) :arg1 (a2 / and :op1 (r / rise-01 :arg1 (m / monetary-quantity :arg2-of (p2 / price-01))) :op2 (r2 / rise-01 :arg1 (t / thing :arg2-of (p3 / price-01) :arg1-of (a3 / actual-02)) :ord (o / ordinal-entity :value 3))) :arg1-of (r3 / regular-02))
(c / cause-01 :arg0 (a / answer-01 :arg0 (w / we) :arg1 (t / thing :arg1-of (c2 / call-01 :arg0 (w2 / we) :arg2 (t2 / thing :arg1-of (d / devote-01))))) :arg1 (c3 / contact :arg1-of (r / regular-02)))
(a / and :op1 (a2 / affect-01 :arg0 (i / it) :arg1 (a3 / and :op1 (p / process-01 :arg0 (p2 / person :arg0-of (h / have-rel-role-91 :arg2 (p3 / patient))) :mod (m / mental)) :op2 (p4 / process-01 :arg0 (p5 / person) :arg1 (d / disease))) :arg1-of (d2 / direct-02) :mod (a4 / also)) :op2 (s / stabilising :arg0 (s2 / she) :arg1 (d3 / disease)))
(o / obligate-01 :arg1 (w / we) :arg2 (t / think-01 :arg0 (w2 / we) :arg1 (t2 / thing :manner-of (r / reduce-01 :arg1 (k / kill-01) :location (c / country :poss (t3 / they))))) :mod (u / ultimate))
(a / and :op1 (u / unpredictable :arg1 (i / it)) :op2 (t / thrives :arg1 (g / garden :poss (w / we))))
(a / and :op2 (h / have-03 :arg0 (a2 / and :op1 (p / person :quant 1) :op2 (p2 / person :quant 1 :arg0-of (c / cross-02 :arg1 (g / gold)))) :arg1 (c2 / centimetres :arg1 (g2 / gold) :mod (m / massive)) :location (e / ear :part-of (h2 / he)) :arg1-of (p3 / possible-01)))
(s / say-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (o / organization :name (n / name :op1 "Delta" :op2 "State" :op3 "University")) :arg2 (c / chief :mod (p2 / police)))) :arg1 (h2 / hear-01 :arg0 (p3 / person :arg0-of (h3 / have-org-role-91 :arg1 (u / university) :arg2 (o2 / official))) :arg1 (s2 / shooting :location (a / a.m. :mod (1 / 10:18)))))
(s / say-01 :arg0 (p / person :arg0-of (l / lead-02 :arg1 (o / organization :name (n / name :op1 "The" :op2 "Black" :op3 "Lives" :op4 "Matter" :op5 "Network")))) :arg1 (g / group :mod (l2 / love-01) :domain (o2 / organization)))
(t / talk-01 :arg0 (s / she) :arg1 (p / practice-01 :arg1 (v / vetting)) :time (t2 / this))
(r / rule-out-02 :polarity - :arg0 (p / person :name (n / name :op1 "Bogdanovsky")) :arg1 (b / build-01 :arg0 (c / country :name (n2 / name :op1 "Russia")) :arg1 (b2 / base :mod (a / air)) :location (c2 / country :name (n3 / name :op1 "Syria")) :time (f / future)) :time (v / visit-01 :arg0 (p2 / person) :arg1 (c3 / city :name (n4 / name :op1 "N-A"))))
(r / remain-01 :arg1 (e / employ-01 :polarity - :mod (c / country :name (n / name :op1 "UK"))) :arg3 (u / unchanged))
(h / hit-01 :arg0 (e / effect :mod (y / yo-yo)) :arg1 (a / apple))
(c / come-01 :arg1 (r / recession-02) :arg1-of (q / quick-02 :degree (m / most) :compared-to (a / after :op1 (h / hike :arg1 (r2 / rate :ord (o / ordinal-entity :value 1)))) :time (a2 / after :op1 (h2 / hike :arg1 (r3 / rate :ord (o2 / ordinal-entity :value 1))))))
(a / agree-01 :polarity - :arg0 (w / we) :arg1 (o / or :op1 (q / quota) :op2 (s / system) :mod (m / mandatory) :arg1-of (w2 / work-09 :arg1-of (p / possible-01) :arg1-of (p2 / possible-01))))
(s / say-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (a / and :op1 (p2 / person :arg0-of (h2 / have-org-role-91 :arg2 (h3 / head-of-state))) :op2 (p3 / person :arg0-of (h4 / have-org-role-91 :arg2 (e / euphemistically)))))) :arg1 (c / case :topic (l / lose-02 :arg0 (p4 / person) :arg1 (a2 / and :op1 (s2 / stone :arg1-of (t / throw-01 :arg0 (p5 / person))) :op2 (p6 / person :arg0-of (h5 / have-org-role-91 :arg3 (j / judge-01))) :op3 (p7 / person :arg0-of (h6 / have-org-role-91 :arg3 (j2 / judge-01))) :op4 (p8 / person :arg0-of (h7 / have-org-role-91 :arg3 (j3 / judge-01))) :op5 (p9 / person :arg0-of (h8 / have-org-role-91 :arg3 (j4 / judge-01))) :op5 (p10 / person :arg0-of (h9 / have-org-role-91 :arg3 (j5 / judge-01))) :op6 (p11 / person :arg0-of (h10 / have-org-role-91 :arg3 (j6 / judge-01))) :op6 (p12 / person :arg0-of (h11 / have-org-role-91 :arg3 (j7 / judge-01))) :op6 (p13 / person :arg0-of (h12 / have-org-role-91 :arg3 (j8 / judge-01))) :op7 (p14 / person :arg0-of (h13 / have-org-role-91 :arg3 (j9 / judge-01)) :mod (i / individual))))) :time (m / minute :ord (o / ordinal-entity :value 1)))
(c / clash :domain (c2 / clash) :time (l / late :degree (m / most)) :location (a / across :op1 (p / plain :mod (s / south) :poss (c3 / country :name (n / name :op1 "Nepal")))) :arg1-of (c4 / cause-01 :arg0 (s2 / say-01 :arg0 (p2 / person :arg0-of (h / have-org-role-91 :arg1 (g / group :mod (e / ethnic) :mod (c5 / country :name (n2 / name :op1 "Nepal"))) :arg2 (m2 / member))) :arg1 (i / influence-01 :arg0 (p3 / province :mod (n3 / new)) :arg1 (i2 / influence-01 :arg0 (p4 / province) :mod (p5 / politics))))))
(f / find-02 :arg0 (p / poll-01 :arg0 (o / organization :name (n / name :op1 "Quinnipiac")) :location (s / state :name (n2 / name :op1 "Iowa")) :time (w / week :mod (l / last))) :arg1 (v / view-02 :arg0 (p2 / person :arg1-of (i / include-91 :arg2 (p3 / person :arg0-of (r / republican)) :arg3 (p4 / percentage-entity :value 60))) :arg1 (p5 / person :name (n3 / name :op1 "Trump")) :mod (f2 / favorable)) :time (w2 / week :mod (l2 / last)) :location (s2 / state :name (n4 / name :op1 "Iowa")))
(l / lose-02 :arg0 (y / you) :arg1 (g / game :mod (h / home) :poss (y2 / you) :prep-against (p / person :quant (3 / 3-5) :arg0-of (h2 / have-org-role-91 :arg1 (o / organization :name (n / name :op1 "Sparta"))))) :time (a / after :op1 (l2 / lose-02 :arg0 (y3 / you) :arg1 (u / up-to :op1 (t / temporal-quantity :quant (N / N-A) :unit (y4 / year))))) :mod (a2 / also))
(s / say-01 :arg2 (p / person :name (n / name :op1 "N-A")))
(l / look-01 :mode (i / imperative) :arg0 (y / you) :arg1 (t / thing :degree-of (p / possible-01 :arg1 (r / react-01 :arg0 (a / area :mod (s / some) :part-of (e / economy)) :arg1-of (p2 / possible-01) :arg1-of (b / base-02 :arg2 (t2 / trend :mod (h / history)))))))
(c / contrast-01 :arg2 (n / now :mode (i / interrogative)))
(c / contrast-01 :arg2 (p / produce-01 :polarity - :arg0 (i / it) :arg1 (a / any)))
(c / contain-01 :arg0 (t / thing :arg1-of (s / state-01 :arg0 (p / person :name (n / name :op1 "Angela" :op2 "Merkel")))) :arg1 (t2 / thing :arg1-of (s2 / state-01 :arg0 (p2 / person)) :arg1-of (f / follow-01 :arg2 (d / discuss-01 :arg0 (p3 / person) :arg1 (s3 / state :mod (s4 / state :mod (c2 / country :name (n2 / name :op1 "N-A"))))))))
FAILED_TO_PARSE#Two roles in a row.
(a / and :op2 (r / recommend-01 :mode (i / interrogative) :arg1 (m / measure-01 :arg1 (m2 / measure-02 :mod (k / kind :mod (a2 / amr-unknown)))) :location (o / opine-01 :arg0 (y / you))))
(a / ask-02 :arg0 (h / he) :arg1 (d / die-01 :arg1 (p / person :quant 1 :arg1-of (i / include-91 :arg2 (p2 / person :quant 4 :arg0-of (w / witness-01) :arg0-of (w2 / witness-01 :arg1 (h2 / he)))))) :arg2 (i2 / i))
(i / indicate-01 :polarity - :arg1 (a / and :op1 (b / believe-01 :arg0 (p / police) :arg1 (s / shoot-02 :arg1 (h / he)) :time (a2 / already)) :op2 (a3 / and :op1 (b2 / believe-01 :arg0 (p2 / police) :arg1 (s2 / shoot-02 :arg1 (h2 / he))) :op2 (k / kill-01 :arg0 (h3 / he) :arg1 (a4 / and :op1 (h4 / have-org-role-91 :arg0 (h5 / he) :arg2 (p3 / professor :mod (h6 / history))) :op2 (h7 / have-org-role-91 :arg0 (h8 / he) :arg2 (p4 / professor :mod (h9 / history)))) :op3 (p5 / person :name (n / name :op1 "Ethan" :op2 "Schmidt") :arg0-of (h10 / have-org-role-91 :arg1 (o / office :poss (h11 / he))))))))
(a / aim-01 :arg0 (h / he) :arg1 (l / launch-01 :arg0 (o / organization :name (n / name :op1 "BBC" :op2 "Music" :op3 "Awards")) :arg1 (d / date-entity :month 12)) :mod (a2 / also))
(a / agree-01 :arg0 (i / i) :arg1 (a2 / and :op1 (j / january :arg1 (p / petition-01) :time (f / first)) :op2 (f2 / friends :arg0 (p2 / person :arg0-of (h / have-rel-role-91 :arg1 (h2 / he) :arg2 (f3 / friend :mod (g / good :degree (m / most))))))) :arg1-of (a3 / agree-01 :arg0 (i2 / i)))
(s / submit-01 :arg0 (c / company :arg1-of (c2 / call-01 :arg0 (c3 / company) :arg2 (o / organization :name (n / name :op1 "Online" :op2 "Services")) :location (p / peninsula :name (n2 / name :op1 "N-A")))) :arg1 (r / rate-entity-91 :arg1 (u / under :op1 (t / temporal-quantity :quant (N / N-A) :unit (m / month))) :arg2 (t2 / temporal-quantity :quant (N2 / N-A) :unit (m2 / month))) :time (a / after :op1 (d / depart-01 :arg0 (c4 / company :arg1-of (c5 / call-01 :arg0 (c6 / company) :arg2 (l / location :name (n3 / name :op1 "Samoa")))) :arg2 (a2 / approximately :op1 20000000))))
(b / bangers :polarity - :arg1 (t / they) :mod (e / exact))
FAILED_TO_PARSE#Two roles in a row.
FAILED_TO_PARSE#Two concepts in a row.
(c / contrast-01 :arg2 (r / rid-01 :arg0 (i / it) :arg1 (t / they) :arg1-of (s / succeed-01)))
(t / think-01 :arg0 (i / i) :arg1 (h / have-03 :arg0 (p / person :name (n / name :op1 "Stephen" :op2 "Thompson")) :arg1 (f / faith :location (w / we))))
(p / predict-01 :arg0 (p2 / person :mod (e / economy) :quant (a / about :op1 (1 / 1/2))) :arg1 (i / increase-01 :arg1 (r / rate) :time (w / week :mod (t / this))) :time (r2 / recent))
(r / right-06 :mode (i / interrogative) :arg2 (p / person :name (n / name :op1 "Otto" :op2 "von" :op3 "Bismarck") :arg0-of (h / have-org-role-91 :arg2 (c / chancellor))) :time (e / exerted :arg0 (p2 / person) :arg1 (p3 / power :poss (p4 / person) :quant (a / all)) :purpose (p5 / prevent-01 :arg0 (p6 / person) :arg1 (t / thing :arg2-of (s / solve-01 :arg1 (u / unify-01 :arg1 (p7 / province :name (n2 / name :op1 "N-A") :mod (p8 / province :name (n3 / name :op1 "N-A") :mod (w / whole)))) :mod (g / great :degree (m / more)))))))
(a / and :op1 (r / remembers :arg0 (h / he) :arg1 (t / that) :time (h2 / have-03 :arg0 (h3 / he) :arg1 (o / own-01 :arg0 (h4 / he)))) :op2 (w / want-01 :arg0 (h5 / he) :arg1 (l / live-01 :arg0 (h6 / he) :arg1-of (f / free-03))) :op3 (l2 / live-01 :arg0 (h7 / he) :arg1-of (f2 / free-03)))
(s / start-01 :arg1 (q / quality :poss (h / he) :ord (o / ordinal-entity :value 3) :mod (o2 / only) :poss (h2 / he)) :time (b / before :op1 (n / now) :quant 9 :op1 9))
(s / say-01 :arg0 (h / he) :arg1 (c / contrast-01 :arg1 (s2 / seem-01 :arg1 (u / use-01 :arg0 (i / i) :arg1 (w / word :name (n / name :op1 (' / '') :op2 ('2 / ''))))) :arg2 (s3 / seem-01 :arg1 (u2 / use-01 :arg0 (i2 / i) :arg1 (w2 / word :name (n2 / name :op1 ('3 / '') :op2 ('4 / '')))))) :arg2 (s4 / seem-01 :arg1 (u3 / use-01 :arg0 (i3 / i) :arg1 (w3 / word :name (n3 / name :op1 ('5 / '') :op2 ('6 / ''))))))
(r / rise-01 :arg1 (t / tradesmen :quant (n / number :mod (s / skilled)) :source (w / world-region :name (n2 / name :op1 "Eastern" :op2 "Europe"))) :location (b / behind :op1 (w2 / world-region :name (n3 / name :op1 "Eastern" :op2 "Europe"))))
(u / use-01 :arg0 (c / component :mod (l / large :degree (m / most)) :arg1-of (u2 / use-01 :polarity - :arg2 (w / weight))) :arg1 (i / increase-01 :arg1 (p / predecessor :poss (a / aircraft-type))) :prep-in (m2 / model :mod (l2 / large :degree (m3 / more))))
(s / say-01 :arg0 (p / person :name (n / name :op1 "Daniel" :op2 "Vl?ek") :arg0-of (h / have-org-role-91 :arg1 (l / location :name (n2 / name :op1 "Bohemia" :op2 "Olej")))) :arg1 (c / contrast-01 :arg1 (h2 / have-03 :polarity - :arg0 (i / it) :arg1 (i2 / immunity :arg1-of (s2 / strong-02))) :arg2 (h3 / have-03 :polarity - :arg0 (i3 / it) :arg1 (t / thing :arg1-of (f / flaw-01 :arg1-of (s3 / strong-02))))))
(c / contrast-01 :arg2 (r / rise-01 :arg1 (f / frustrations)))
(c / cause-01 :arg0 (w / want-01 :arg0 (h / he) :arg1 (p / play-01 :arg0 (e / everyone) :arg1 (s / style :poss (h2 / he) :mod (e2 / every :polarity -)))) :arg1 (w2 / want-01 :arg0 (e3 / everyone) :arg1 (p2 / play-01 :arg0 (e4 / everyone) :arg1 (s2 / style :poss (h3 / he) :mod (e5 / every :polarity -) :example (a / and :op1 (p3 / person :name (n / name :op1 "Anthony" :op2 "Milford")) :op2 (p4 / person :name (n2 / name :op1 "Ben" :op2 "Hunt"))))) :arg0-of (c2 / cause-01 :arg1 (p5 / possible-01 :arg1 (p6 / play-11 :arg0 (t / they) :arg1-of (r / resemble-01 :arg2 (t2 / that))))) :time (n3 / now)) :li 2010)
(s / say-01 :arg0 (c / company) :arg1 (p / plan-01 :arg0 (c2 / company) :arg1 (h / hire-01 :arg0 (c3 / company) :arg1 (p2 / person :quant 40000) :arg2 (a / and :op1 (s2 / store) :op2 (c4 / center :arg1-of (d / distribute-01) :location (a2 / around :op1 (c5 / country))))) :op3 (h2 / hire-01 :arg1 (p3 / person :quant 45,000) :arg2 (s3 / season :quant 2014 :purpose (h3 / holiday)))))
FAILED_TO_PARSE#Two concepts in a row.
(s / stop-01 :arg1 (r / refugee :quant 40 :mod (a / another)) :location (t / there) :time (m / morning :mod (w / wednesday)))
(c / contrast-01 :arg1 (l / lead-01 :arg0 (h / heart :part-of (p / person :name (n / name :op1 "Paterson"))) :time (a / and :op1 (d / dismiss-01 :arg1 (p2 / person)) :op2 (g / go-02 :arg0 (p3 / person) :arg4 (l2 / lose-02 :arg0 (p4 / person) :arg1 (3 / 3-2))))) :arg2 (t / tense :domain (c2 / card :mod (r / red) :poss (d2 / defender) :ord (o / ordinal-entity :value 3)) :time (l3 / late :degree (m / more)) :purpose (r2 / rescinded :arg1 (c3 / card))))
(a / and :op2 (l / looks :arg0 (m / male :mod (e / every) :arg0-of (l2 / look-02 :arg1 (a2 / and :op1 (h / he) :op2 (p / passes)))) :mod (a3 / as-well)))
(s / say-01 :arg0 (p / person :name (n / name :op1 "Gyorgy" :op2 "Bakondi") :arg0-of (a / advise-01 :arg2 (s2 / security :mod (i / intellectual)))) :arg1 (c / catch-01 :arg0 (a2 / authority) :arg1 (p2 / person :quant 45) :purpose (t / try-01 :arg0 (p3 / person) :arg1 (a3 / and :op1 (c2 / cross-02 :arg0 (p4 / person) :arg1 (b / border-01)) :op2 (d / deep-02 :arg1 (p5 / person) :degree (m / more)) :location (c3 / country)))))
(a / arrest-01 :arg0 (p / police) :arg1 (m / man :arg0-of (c / cyclist :arg1 (c2 / cyclist :location (l / location :name (n / name :op1 "Cobram"))) :time (w / weekend))))
(a / arrest-01 :arg0 (p / police) :arg1 (m / man :arg0-of (c / cyclist :arg1 (c2 / cyclist :location (l / location :name (n / name :op1 "Cobram"))) :time (w / weekend))))
(a / add :arg1 (a2 / adds :mod (m / market) :mod (m2 / market)) :arg2 (c / complex :mod (c2 / complex)) :time (r / raise-01 :arg1 (r2 / rate :mod (i / interest))))
(m / multi-sentence :snt1 (b / bled :arg0 (h / he) :arg1 (h2 / he) :arg2 (d / die-01) :mod (a / almost)) :snt2 (c / cause-01 :arg0 (u / unconscious :arg0 (h3 / he) :arg1 (h4 / he) :time (w / week :mod (l / last))) :arg1 (' / '' :arg0 (h5 / he) :arg1 (p / person :name (n / name :op1 "Hasso" :op2 "Plattner") :arg0-of (h6 / have-org-role-91 :arg1 (o / organization) :arg2 (c2 / co-founder)) :arg0-of (h7 / have-org-role-91 :arg1 (o2 / organization) :arg2 (c3 / co-founder))) :time (w2 / week :mod (l2 / last)))))
(p / plan-01 :arg1 (h / holiday :mod (h2 / home) :purpose (h3 / holiday) :location (l / location :name (n / name :op1 "Kleines" :op2 "Meer")) :arg1-of (n2 / near-02 :arg2 (l2 / location :name (n3 / name :op1 "Emden")))))
(r / ready-02 :polarity - :arg1 (p / person :arg0-of (d / drive-01) :location (c / country :name (n / name :op1 "Germany"))) :arg2 (r2 / rely-01 :arg0 (p2 / person) :arg1 (c2 / car :arg0-of (d2 / drive-02 :arg1 (s / self) :arg1-of (c3 / complete-02)))) :mod (a / anyway))
(r / ready-02 :polarity - :arg1 (p / person :arg0-of (d / drive-01) :location (c / country :name (n / name :op1 "Germany"))) :arg2 (r2 / rely-01 :arg0 (p2 / person) :arg1 (c2 / car :arg0-of (d2 / drive-02 :arg1 (s / self) :arg1-of (c3 / complete-02)))) :mod (a / anyway))
(p / possible-01 :arg1 (e / event :time (n / now :mod (n2 / now)) :arg1-of (p2 / predict-01 :time (a / already) :arg1-of (p3 / possible-01) :mod (a2 / actual)) :location (r / relative-position :op1 (a3 / and :op1 (c / country :name (n3 / name :op1 "Turkey")) :op2 (c2 / country :name (n4 / name :op1 "Greece")) :op3 (c3 / country :name (n5 / name :op1 "Macedonia")) :op4 (c4 / country :name (n6 / name :op1 "Serbia")) :op5 (c5 / country :name (n7 / name :op1 "Serbia"))))))
(p / present-01 :arg0 (p2 / person :arg0-of (i / invest-01)) :arg1 (p3 / plan-01 :arg0 (p4 / person) :arg1 (p5 / project :arg1-of (p6 / public-02))) :arg2 (p7 / person :arg0-of (i2 / invest-01)))
(c / contrast-01 :arg2 (d / discuss-01 :polarity - :arg1 (i / issue-02 :arg0 (p / protect-01 :arg1 (p2 / person :arg0-of (i2 / invest-01))))))
(a / and :op1 (s / strike-01 :arg0 (a2 / amusement-park :name (n / name :op1 "N-A")) :arg1 (p / person :name (n2 / name :op1 "Matt" :op2 "Lever") :arg0-of (h / have-org-role-91 :arg1 (o / organization) :arg2 (d / director)))) :op2 (t / think-01 :arg0 (p2 / person) :arg1 (g / give-01 :arg0 (p3 / person) :arg1 (c / campaign-01) :arg2 (p4 / person))) :op3 (t2 / think-01 :arg0 (p5 / person) :arg1 (c2 / campaign-01 :arg0 (p6 / person) :arg1 (a3 / avoid-01 :arg0 (p7 / person) :arg1 (c3 / campaign-01)))))
(d / diversity :poss (p / person :name (n / name :op1 "Matt" :op2 "Damon")) :mod (d2 / downplays))
(c / cause-01 :arg1 (a / announce-01 :arg0 (h / he) :arg1 (c2 / change-01 :arg1 (g / goalkeeper))))
(b / be-temporally-at-91 :arg2 (a / ask-01 :arg0 (p / person :arg0-of (v / vote-01 :arg1 (d / democracy))) :arg1 (i / issue-02 :arg0 (p2 / person :arg0-of (v2 / vote-01 :arg1 (d2 / democracy)))) :degree (m / more)) :mod (s / still))
(a / attack-01 :arg0 (b / blog :mod (m / medicine) :mod (o / organization :name (n / name :op1 "Lancet"))) :arg1 (f / foundation :name (n2 / name :op1 (e / extraordinarily) :op2 (f2 / foundation) :op3 (f3 / foundation) :op4 (f4 / foundation) :op5 (f5 / foundation) :op6 (f6 / foundation) :op7 (f7 / foundation))) :time (m2 / month :mod (l / last)))
(a / attack-01 :arg0 (b / blog :mod (m / medicine) :mod (o / organization :name (n / name :op1 "Lancet"))) :arg1 (f / foundation :name (n2 / name :op1 (e / extraordinarily) :op2 (f2 / foundation) :op3 (f3 / foundation) :op4 (f4 / foundation) :op5 (f5 / foundation) :op6 (f6 / foundation) :op7 (f7 / foundation))) :time (m2 / month :mod (l / last)))
(a / agree-01 :arg0 (i / i) :arg1 (w / way :mod (g / good) :manner-of (t / tell-01 :arg1 (s / story :mod (f / full) :topic (p / penalize-01 :manner (d / die-01))) :domain (i2 / it))))
(f / face-01 :arg0 (p / person :name (n / name :op1 "Carson") :arg1-of (f2 / face-01 :arg0 (p2 / person :name (n2 / name :op1 "Trump")) :time (w / week :mod (l / last)))) :arg1 (t / take-01 :arg0 (p3 / person) :arg1 (p4 / potshots :quant (s / some)) :location (n3 / neurosurgeon :arg0-of (r / retire-01))) :concession (a / apologize-01 :arg0 (p5 / person) :arg1 (q / question-03 :arg0 (p6 / person) :arg1 (f3 / faith :poss (p7 / person)))))
(f / face-01 :arg0 (p / person :name (n / name :op1 "Carson") :arg1-of (f2 / face-01 :arg0 (p2 / person :name (n2 / name :op1 "Trump")) :time (w / week :mod (l / last)))) :arg1 (t / take-01 :arg0 (p3 / person) :arg1 (p4 / potshots :quant (s / some)) :location (n3 / neurosurgeon :arg0-of (r / retire-01))) :concession (a / apologize-01 :arg0 (p5 / person) :arg1 (q / question-03 :arg0 (p6 / person) :arg1 (f3 / faith :poss (p7 / person)))))
(p / person :arg0-of (l / lead-02 :arg1 (p2 / political-party :name (n / name :op1 "Tory"))) :domain (p3 / person :arg0-of (l2 / lead-02 :arg1 (p4 / political-party :name (n2 / name :op1 "Labour" :op2 "Party"))) :ord (o / ordinal-entity :value 5)) :arg1-of (c / cause-01 :arg0 (f / face-01 :arg0 (p5 / person) :arg1 (p6 / person :arg0-of (l3 / lead-02 :arg1 (p7 / political-party :name (n3 / name :op1 "Tory")))) :time (b / before :op1 (n4 / now) :duration (t / temporal-quantity :quant (N / N-A) :unit (d / decade))))))
(a / and :op1 (s / sit-01 :arg1 (p / person :name (n / name :op1 "Sufjan" :op2 "Stevens")) :arg2 (s2 / stage :location (o / organization :name (n2 / name :op1 "Prime" :op2 "Club"))) :time (b / before :op1 (n3 / now) :quant (t / temporal-quantity :quant (N / N-A) :unit (y / year)))) :op2 (f / found-01 :arg1 (p2 / person) :arg2 (l / location :name (n4 / name :op1 "Cologne")) :time (n5 / now)))
(t / tell-01 :arg0 (p / person :name (n / name :op1 "Xi" :op2 "Jinping") :arg0-of (h / have-org-role-91 :arg2 (p2 / president))) :arg1 (o / obligate-01 :arg2 (o2 / open-up-03 :arg0 (e / economy) :arg1 (w / world :mod (o3 / outside)) :arg4 (w2 / world :mod (o4 / outside)) :arg4 (w3 / world :mod (o5 / outside)))) :arg2 (a / advise-01 :arg0 (p3 / person :arg0-of (h2 / have-org-role-91 :arg2 (p4 / president))) :arg1 (r / reform-01 :arg1 (s / steering)) :arg2 (r2 / reform-01 :arg1 (s2 / steering))))
FAILED_TO_PARSE#Two concepts in a row.
(o / obstacle :mod (b / big) :domain (a / access-01 :arg1 (m / market :mod (j / job))) :arg1-of (c / cause-01 :arg0 (l / lack-01 :arg1 (l2 / language :mod (g / german)))))
(o / obstacle :mod (b / big) :domain (a / access-01 :arg1 (m / market :mod (j / job))) :arg1-of (c / cause-01 :arg0 (l / lack-01 :arg1 (l2 / language :mod (g / german)))))
(b / bone :polarity - :domain (i / it) :mod (a / as-well))
(b / bone :polarity - :domain (i / it) :mod (a / as-well))
(b / bone :polarity - :domain (i / it) :mod (a / as-well))
(c / cause-01 :arg0 (b / be-located-at-91 :arg1 (a / adult :mod (y / young) :mod (n / need-01 :arg1 (l / live-01))) :arg2 (s / slumped :location (h / hotel :mod (' / '')))) :arg1 ('2 / '' :arg1 (a2 / adult :mod (y2 / young) :arg1-of (n2 / need-01))))
(s / something :arg1-of (s2 / special-02) :domain (p / play-01 :arg0 (t / team :poss (w / we)) :prep-against (t2 / team :mod (l / league :ord (o / ordinal-entity :value 3)))))
(s / something :arg1-of (s2 / special-02) :domain (p / play-01 :arg0 (t / team :poss (w / we)) :prep-against (t2 / team :mod (l / league :ord (o / ordinal-entity :value 3)))))
(e / end-01 :arg1 (r / rate :mod (c / company :name (n / name :op1 "N-A") :mod (e2 / euro))) :time (d / date-entity :time (d2 / date-entity :year (N / N-A))))
(m / man :arg1-of (i / include-91 :arg2 (p / person :arg2-of (s / staff-01)) :arg3 (m2 / majority)) :time (c / current))
(m / move-01 :arg0 (o / organization :name (n / name :op1 "Peissenberg" :op2 "Clinic")) :arg2 (l / location :name (n2 / name :op1 "Schongau")))
(s / stress-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg2 (c / chancellor))) :arg1 (o / obligate-01 :arg2 (t / try-01 :arg0 (c2 / country :prep-as (w / whole)) :arg1 (e / effort :mod (h2 / huge) :mod (' / '')) :time (n / now))))
(r / recommend-01 :arg0 (j / jury :mod (g / grand) :location (l / location :name (n / name :op1 "Monroe" :op2 "County"))) :arg1 (c / charge-05 :arg1 (p / person :quant 5 :arg0-of (h / have-org-role-91 :arg2 (m / member))) :arg2 (m2 / murder-01)))
(l / lead-03 :arg0 (s / step) :arg2 (c / charge-01 :arg2 (a / around :op1 (m / monetary-quantity :quant 2.7 :unit (d / dollar)) :arg1-of (s2 / suitable-04 :arg2 (p / percentage-entity :value (N / N-A) :arg1-of (i / include-91 :arg2 (p2 / percentage-entity :value (N2 / N-A))))) :mod (o / one-off))))
(i / include-91 :arg1 (a / and :op1 (p / person :arg0-of (b / bring-01 :arg1 (w / wealth :arg1-of (e / experience-01)))) :op2 (p2 / person :arg0-of (b2 / bring-01 :arg1 (w2 / wealth) :arg2 (a2 / attack-01 :quant (a3 / all))))) :arg2 (h / he))
(a / and :op1 (i / interest-01 :arg1 (h / he) :arg2 (w / woman :arg1-of (s / strong-02) :arg0-of (- / -lrb- :arg1 (w2 / woman))) :time (a2 / always)) :op2 (s2 / say-01 :arg0 (p / person :arg1-of (d / differ-02 :degree (l / little))) :arg1 (w3 / woman)))
(p / publish-01 :arg1 (t / thing :arg1-of (c / choose-01 :arg0 (p2 / person :name (n / name :op1 "Sarah"))) :mod (t2 / top)) :arg3 (p3 / person :name (n2 / name :op1 "Sam" :op2 "Wood")) :mod (o / original))
(s / say-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (o / organization :name (n / name :op1 "University")) :arg2 (p2 / president))) :arg1 (c / contrast-01 :arg1 (k / know-01 :polarity - :arg0 (p3 / person) :arg1 (c2 / conflict-01 :arg0 (l / lamb) :arg1 (p4 / person :name (n2 / name :op1 "Schmidt")) :mod (a / any))) :arg2 (o2 / obvious-01 :arg1 (s2 / something :location (m / mind :poss (p5 / person :name (n3 / name :op1 "Lamb")))) :arg1-of (o3 / obvious-01))))
(s / show-01 :arg0 (b / breakfast :mod (b2 / breakfast)) :arg1 (s2 / show-04 :arg1 (c / capital :mod (n / nation))) :arg2 (c2 / capital :mod (n2 / nation)) :time (a / after :op1 (o / overthrow-01 :arg0 (p / person :name (n3 / name :op1 "Malcolm" :op2 "Turnbull")) :arg1 (p2 / person :name (n4 / name :op1 "Tony" :op2 "Abbott")))))
FAILED_TO_PARSE#Two concepts in a row.
(s / see-01 :polarity - :arg0 (p / person :arg1-of (r / republican) :quant (m / majority)) :arg1 (t / temperament :poss (p2 / person :name (n / name :op1 "Trump")) :prep-as (p3 / problem)))
(c / cause-01 :arg0 (s / study-01 :arg0 (p / person :arg0-of (s2 / study-01))) :arg1 (l / likely-01 :arg1 (d / die-01 :arg1 (p2 / person :arg0-of (h / have-03 :arg1 (s3 / surgery-01))) :extent (o / over :op1 (p3 / percentage-entity :value (N / N-A))) :arg1-of (c2 / compare-01 :arg2 (g / group :arg0-of (t / try-01 :arg1 (m / method :mod (c3 / conventional) :mod (m2 / more))))))) :medium (s4 / study-01 :mod (s5 / swedish)))
(t / think-01 :arg0 (p / person :arg0-of (v / vote-01 :arg1 (r / republican))) :arg1 (p2 / person :mod (r2 / real) :domain (p3 / person :name (n / name :op1 "Trump"))) :time (p4 / put-01 :arg0 (p5 / person) :arg1 (h / hats :poss (p6 / person) :mod (p7 / pundit)) :arg2 (p8 / person)))
(b / ban-01 :arg0 (o / organization :name (n / name :op1 "Baruch" :op2 "College")) :arg1 (a / and :op1 (f / fraternity) :op2 (f2 / fraternity :mod (n2 / nation))) :prep-with (c / chapter :mod (l / local-02)))
(p / penalize-01 :manner (p2 / parking))
(d / decrease-01 :arg1 (n / number :quant-of (p / person :quant (N / N-A) :arg0-of (h / head-01 :arg1 (h2 / head)))) :time (b / before :op1 (n2 / now) :duration (f / few :op1 (t / temporal-quantity :quant (N2 / N-A) :unit (y / year)))) :location (t2 / town :mod (l / large)) :time (b2 / before :op1 (n3 / now) :duration (f2 / few :op1 (t3 / temporal-quantity :quant (N3 / N-A) :unit (y2 / year)))))
(m / multi-sentence :snt1 (r / result-01 :arg1 (c / cut-02 :arg1 (j / job) :arg1-of (e / expect-01)) :arg2 (c2 / charge-01 :arg2 (a / about :op1 (m2 / monetary-quantity :quant 2.7 :unit (d / dollar))) :arg1-of (b / begin-01 :location (t / thing :arg1-of (s / state-01) :ord (o / ordinal-entity :value 4))))) :snt2 (t2 / thing :arg1-of (s2 / state-01)))
(s / shame-01 :arg0 (f / finish-01 :arg0 (p / person :name (n / name :op1 "Wilshere")) :arg1 (p2 / problem :time (l / late :degree (m / most)) :mod (t / this))) :arg1 (a / and :op1 (f2 / finish-01 :arg0 (p3 / person) :time (s2 / season :mod (l2 / last)) :arg1-of (s3 / strong-02) :time (a2 / after :op1 (i / injure-01 :arg1 (p4 / person) :arg1-of (s4 / separate-02)))) :op2 (l3 / look-01 :arg0 (p5 / person) :arg1 (s5 / sharpness :mod (o / old) :poss (p6 / person)) :time (d / date-entity :dayperiod (N / N-A)) :time (t2 / then))))
(h / have-03 :arg0 (p / person :name (n / name :op1 "Konrad")) :arg1 (h2 / hand :part-of (p2 / person)) :manner (f / full) :prep-with (r / revive-01 :arg1 (r2 / refugee)))
(h / have-03 :arg0 (p / person :name (n / name :op1 "Konrad")) :arg1 (h2 / hand :part-of (p2 / person)) :manner (f / full) :prep-with (r / revive-01 :arg1 (r2 / refugee)))
(a / amaze-01 :arg1 (s / start-01 :arg0 (c / club :quant 36 :instrument-of (l / license-01)) :arg1 (p / project :poss (c2 / club) :location (l2 / location :poss (c3 / club)))))
FAILED_TO_PARSE#Number of opening and closing brackets doesn't match.
(i / introduce-01 :arg1 (c / car :arg1-of (c2 / compact) :mod (o / other)) :arg2 (o2 / organization :name (n / name :op1 "Astra") :location (o3 / organization :name (n2 / name :op1 "IAA"))))
(a / add-01 :arg0 (h / he) :arg1 (p / possible-01 :arg1 (f / focus-01 :arg0 (a2 / application :mod (o / other)) :arg2 (m / muscle))))
(a / and :op1 (h / have-03 :polarity - :arg0 (w / we) :arg1 (p / person :name (n / name :op1 "Timo")) :mod (e / either)) :op2 (b / become-01 :arg1 (w2 / we) :arg2 (c / champions :mod (c2 / continent :name (n2 / name :op1 "N-A"))) :mod (s / still)))
(m / multi-sentence :snt1 (a / and :op1 (a2 / announce-01 :arg0 (i / i) :arg1 (t / thing :arg1-of (a3 / announce-01) :mod (i2 / important)) :location (d / dlr :source (v / value-interval :op1 (1 / 15th) :op2 (d2 / date-entity :month 9))))) :snt2 (r / read-01 :mode (i3 / imperative) :arg0 (y / you) :arg1 (a4 / and :op1 1 :op2 (b / branding)) :arg4 (i4 / image :poss (t2 / tank))))
(a / and :op1 (c / call-01 :polarity - :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (p2 / person :name (n / name :op1 "Pi" :op2 "Delta" :op3 "Psi")) :arg2 (m / member))) :arg1 (p3 / person :quant 911) :time (a2 / after :op1 (c2 / come-out-09 :arg1 (p4 / person)))) :op2 (w / wait-01 :arg1 (p5 / person) :arg2 (t / temporal-quantity :quant (N / N-A) :unit (h2 / hour) :time (b / before :op1 (b2 / bring-01 :arg0 (p6 / person) :arg1 (p7 / person) :arg2 (h3 / hospital)))) :arg1-of (a3 / allege-01) :time (b3 / before :op1 (b4 / bring-01 :arg0 (p8 / person) :arg1 (p9 / person) :arg2 (h4 / hospital)))))
(a / and :op1 (s / stake :quant (m / much)) :op2 (a2 / account-01 :arg0 (a3 / and :op1 (l / location :name (n / name :op1 "South" :op2 "Australia")) :op2 (a4 / account :mod (e / email)) :quant (a5 / almost :op1 30)) :arg1 (s2 / store :name (n2 / name :op1 (f / footprint)) :poss (o / organization :name (n3 / name :op1 "Metcash")))) :op3 (g / generate-01 :arg0 (a6 / and) :arg1 (p / profit :arg1-of (h / high-02 :degree (m2 / more)) :compared-to (p2 / profit-01 :arg0 (o2 / organization :name (n4 / name :op1 "Metcash")) :location (e2 / east :part-of (o3 / organization))))))
(s / suffer-01 :arg0 (p / person :name (n / name :op1 "Luke" :op2 "Shaw")) :arg1 (f / fracture :mod (d / double) :part-of (l / leg :part-of (h / he))) :time (d2 / defeat-01 :arg1 (l2 / league :mod (c / champions) :poss (o / organization :name (n2 / name :op1 "Manchester" :op2 "United"))) :location (o2 / organization :name (n3 / name :op1 "PSV" :op2 "Eindhoven"))))
(w / want-01 :arg0 (y / you) :arg1 (p / play-01 :arg0 (y2 / you) :time (h / have-03 :arg0 (y3 / you) :arg1 (p2 / person :arg0-of (p3 / play-01) :mod (s / sort) :mod (t / that)))))
(a / and :op1 (c / come-01 :arg1 (y / you)) :op2 (s / see-01 :arg0 (y2 / you) :arg1 (s2 / show-04 :arg1 (t / they)) :frequency (r / rate-entity-91 :arg3 (t2 / temporal-quantity :quant (N / N-A) :unit (d / day))) :frequency (r2 / rate-entity-91 :arg3 (t3 / temporal-quantity :quant (N2 / N-A) :unit (d2 / day)))) :op3 (s3 / see-01 :arg0 (y3 / you) :arg1 (s4 / show-04 :arg1 (t4 / they)) :frequency (r3 / rate-entity-91 :arg3 (t5 / temporal-quantity :quant (N3 / N-A) :unit (d3 / day)))))
(e / email-address-entity :value (s / sfa))
(h / have-concession-91 :arg1 (w / way :manner-of (c / consume-01 :arg0 (p / person) :arg1 (a / alcohol :quant (l / lot))) :arg1-of (q / quick-02) :condition (g / get-05 :arg1 (k / kid) :arg2 (a2 / around))) :arg2 (l2 / leave-11 :polarity - :arg0 (y / you) :arg1 (s / shoot-02 :arg1 (w2 / whiskey) :direction (a3 / around))))
(h / have-03 :arg0 (p / person :mod (s / seven)) :arg1 (f / fortunes :quant (m / multiple :op1 2) :arg1-of (i / include-91 :arg2 (p2 / person :arg0-of (h2 / have-org-role-91 :arg2 (h3 / head-of-state))))))
(k / kill-01 :quant 4)
(e / early :op1 (e2 / early :op1 (e3 / early :op1 (a / after :op1 (s / surgery-01 :arg1 (p / person :arg0-of (r / receive-01 :arg1 (m / medicine :mod (n / non-surgical))) :arg0-of (r2 / receive-01 :arg1 (m2 / medicine :mod (n2 / non-surgical)))))))) :mod (s2 / still))
(c / change-01 :arg0 (p / person :arg0-of (v / visit-01) :arg1-of (e / exhibit-01) :arg1-of (s / see-01 :location (o / organization :name (n / name :op1 "Hypo" :op2 "Culture" :op3 "Foundation") :part-of (o2 / organization :name (n2 / name :op1 "Hypo" :op2 "Culture" :op3 "Foundation"))) :time (d / date-interval :op1 (d2 / date-entity :month 1 :day (N / N-A)) :op2 (d3 / date-entity :month 1)))) :arg1 (a / attitude :mod (r / reluctant :mod (i / initial)) :poss (p2 / person)) :topic (s2 / show-04 :arg1 (c2 / character :poss (p3 / person))))
(s / say-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (a / and :op1 (p2 / person :name (n / name :op1 "Mr" :op2 "Smith")) :op2 (p3 / person :arg0-of (h2 / have-org-role-91 :arg2 (s2 / secretary :mod (w / work-01)))))) :op3 (p4 / person :arg0-of (h3 / have-org-role-91 :arg2 (s3 / secretary :mod (p5 / pension)))) :op4 (p6 / person :arg0-of (h4 / have-org-role-91 :arg2 (s4 / secretary :mod (p7 / pension)))) :op5 (p8 / person :arg0-of (h5 / have-org-role-91 :arg2 (s5 / secretary :mod (p9 / pension))))) :arg1 (o / oppose-01 :arg0 (p10 / party) :arg1 (p11 / plan-01 :arg0 (g / government-organization) :arg1 (r / reduce-01 :arg0 (g2 / government-organization) :arg1 (l / level :mod (c / cap)) :arg2 (m / monetary-quantity :quant 23,000 :unit (p12 / pound))) :mod (o2 / only)) :arg1-of (c2 / clear-06 :degree (v / very))) :duration (t / temporal-quantity :quant (N / N-A) :unit (h6 / hour)))
(s / say-01 :arg0 (p / person :name (n / name :op1 "Goldman")))
(p / person :arg1-of (m / miss-01) :arg0-of (r / rhineland-palatine :arg1 (v / victim :poss (c / crime-02 :manner (v2 / violent)))))
(c / country :polarity - :arg0-of (h / have-org-role-91 :arg1 (o / organization :name (n / name :op1 "EU")) :arg2 (m / member)) :mod (y / yet) :mod (y2 / yet))
(c / country :polarity - :arg0-of (h / have-org-role-91 :arg1 (o / organization :name (n / name :op1 "EU")) :arg2 (m / member)) :mod (y / yet) :mod (y2 / yet))
(s / say-01 :arg0 (p / person :name (n / name :op1 "Wenger")) :arg1 (t / try-01 :arg0 (i / i) :arg1 (a / and :op1 (k / keep-01 :arg0 (i2 / i) :arg1 (b / balance-01)) :op2 (g / give-01 :arg0 (i3 / i) :arg1 (b2 / breather :mod (l / little)) :arg2 (p2 / person :arg0-of (p3 / play-01) :arg0-of (n2 / need-01 :arg1 (i4 / it)))))))
(i / infer-01 :arg1 (t / that :source (d / district :mod (l / location :name (n / name :op1 "Gotha")))) :mod (j / just))
(c / cause-01 :arg1 (a / and :op1 (d / demolished :arg1 (m / mound)) :op2 (b / begin-01 :arg0 (s / search-01) :arg1 (s2 / site :mod (n / new))) :time (n2 / now) :prep-with (a2 / apply-01 :arg1 (p / permit-01 :arg1 (p2 / plan-01)) :mod (f / formal))))
(b / belong-01 :arg0 (p / person :name (n / name :op1 "Godefroid")) :arg1 (t / team :consist-of (a / and :op1 (w / woman :quant 45) :op2 (m / man :quant 43) :op3 (m2 / man :quant 2)) :arg0-of (h / help-01 :arg1 (a2 / affect-01 :arg1 (a3 / and :op1 (p2 / person :arg0-of (h2 / have-rel-role-91 :arg1 (p3 / person) :arg2 (r / relative))) :op2 (p4 / person :arg0-of (h3 / have-rel-role-91 :arg1 (m3 / man) :arg2 (r2 / relative))) :op3 (p5 / person :arg0-of (h4 / have-rel-role-91 :arg1 (m4 / man) :arg2 (r3 / relative))) :op4 (p6 / person :arg0-of (h5 / have-rel-role-91 :arg1 (m5 / man) :arg2 (r4 / relative))) :op5 (p7 / person :arg0-of (h6 / have-rel-role-91 :arg1 (m6 / man) :arg2 (r5 / relative))))))))
(w / wait-01 :arg1 (p / person :quant (s / some :op1 1,400)) :arg2 (t / travel-01 :arg0 (p2 / person) :arg4 (c / country :name (n / name :op1 "Germany"))) :location (l / location :name (n2 / name :op1 "Salzburg")))
(b / be-located-at-91 :arg1 (s / store) :arg2 (p / part :part-of (c / city :name (n / name :op1 "Los" :op2 "Angeles") :location (a / and :op1 (s2 / sea :name (n2 / name :op1 "N-A")) :op2 (d / downtown) :op3 (d2 / downtown) :op4 (b2 / block :mod (o / original)) :quant (f / few)))) :location (a2 / amr-unknown))
(o / offer-01 :arg0 (i / it) :arg1 (p / perspective :mod (u / unique)))
(s / sad-02 :arg0 (i / it) :arg1 (e / everybody) :degree (v / very) :condition (g / go-back-19 :arg1 (p / person :arg0-of (p2 / play-01) :mod (a / any)) :arg2 (i2 / injure-01 :mod (k / kind :mod (t / this)))))
(p / possible-01 :arg1 (c / cause-01 :arg0 (s / squirts :quant (f / few) :mod (o / only)) :arg1 (a / alcohol)) :location (c2 / child :mod (y / young)))
(p / possible-01 :arg1 (c / cause-01 :arg0 (s / squirts :quant (f / few) :mod (o / only)) :arg1 (a / alcohol)) :location (c2 / child :mod (y / young)))
(p / possible-01 :arg1 (c / cause-01 :arg0 (s / squirts :quant (f / few) :mod (o / only)) :arg1 (a / alcohol)) :location (c2 / child :mod (y / young)))
(s / show-01 :arg0 (s2 / stage) :arg1 (b / become-01 :arg1 (a / and :op1 (h / headbands) :op2 (s3 / stage :mod (h2 / huge) :mod (h3 / huge)) :op3 (s4 / stage :mod (h4 / huge) :mod (h5 / huge))) :arg2 (h6 / here)) :arg1-of (l / long-03) :time (s5 / since :op1 (m / move-01 :arg1 (c / club :mod (s6 / small :degree (m2 / more))))))
(s / show-01 :arg0 (s2 / stage) :arg1 (b / become-01 :arg1 (a / and :op1 (h / headbands) :op2 (s3 / stage :mod (h2 / huge) :mod (h3 / huge)) :op3 (s4 / stage :mod (h4 / huge) :mod (h5 / huge))) :arg2 (h6 / here)) :arg1-of (l / long-03) :time (s5 / since :op1 (m / move-01 :arg1 (c / club :mod (s6 / small :degree (m2 / more))))))
(p / possible-01 :arg1 (t / think-01 :arg0 (p2 / person) :arg1 (b / be-02 :arg1 (i / i))))
(a / and :op1 (b / blow-14 :arg1 (f / foehn) :path (l / location :name (n / name :op1 "Foehn" :op2 "Valleys")) :time (u / until :op1 (m / morning :quant (b2 / between :op1 60 :op2 100))) :time (u2 / until :op1 (m2 / morning :mod (t / thursday)))) :op2 (i / increasing :arg0 (a2 / and :op1 (p / person :quant (b3 / between :op1 60 :op2 100)) :op2 (p2 / person :mod (p3 / particular)) :op3 (p4 / person :mod (p5 / particular) :arg0-of (i2 / increase-01 :arg1 (t2 / time :quant (o / over :op1 100)))) :mod (p6 / particular))))
(c / cause-01 :arg1 (e / extend-01 :arg0 (o / organization :name (n / name :op1 "German" :op2 "Football" :op3 "Association")) :arg1 (i / initiative :name (n2 / name :op1 (' / '')) :poss (o2 / organization) :mod (r / refugee)) :purpose (w / welcome-01 :arg1 (o3 / organization) :arg2 (t / temporal-quantity :quant (N / N-A) :unit (y / year)))))
(r / report-01 :arg1 (l / lose-02 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (o / organization :name (n / name :op1 "SAP")) :arg2 (e / executive :mod (c / chief)))) :arg1 (e2 / eye) :prep-in (a / accident)))
(c / complete-01 :arg1 (u / unit :quant 260,000) :time (y / year :mod (t / this)) :location (c2 / country :name (n / name :op1 "Germany")) :arg1-of (c3 / compare-01))
(e / estimate-01 :arg0 (s / study :arg1-of (e2 / estimate-01 :arg0 (s2 / study))) :arg1 (a / and :op1 (v / value-01 :arg1 (f / field :arg0-of (a2 / assist-01 :arg1 (p / person :arg0-of (d / drive-01)))) :arg2 (f2 / field :poss (p2 / person :arg0-of (d2 / drive-01)))) :op2 (d3 / drive-01 :arg0 (p3 / person :quant 2025) :arg1 (n / negotiators :location (c / country :name (n2 / name :op1 "Germany"))))))
(e / estimate-01 :arg0 (s / study :arg1-of (e2 / estimate-01 :arg0 (s2 / study))) :arg1 (a / and :op1 (v / value-01 :arg1 (f / field :arg0-of (a2 / assist-01 :arg1 (p / person :arg0-of (d / drive-01)))) :arg2 (f2 / field :poss (p2 / person :arg0-of (d2 / drive-01)))) :op2 (d3 / drive-01 :arg0 (p3 / person :quant 2025) :arg1 (n / negotiators :location (c / country :name (n2 / name :op1 "Germany"))))))
(p / possible-01 :arg1 (h / hell :domain (t / that) :beneficiary (s / someone :arg0-of (t2 / try-01 :arg1 (r / recharge :arg0 (s2 / someone))))))
(a / and :op1 (p / prefer-01 :arg0 (h / he) :arg1 (i / idea :topic (a2 / allow-01 :arg1 (t / take-01 :arg0 (p2 / person :mod (o / other) :arg0-of (h2 / have-org-role-91 :arg2 (c / colleagues))) :arg1 (f / floor)))) :mod (a3 / also)) :op2 (s / say-01 :arg0 (h3 / he) :arg1 (a4 / approach-02 :arg0 (h4 / he) :arg1 (p3 / person :name (n / name :op1 "John" :op2 "Bercow") :arg0-of (h5 / have-org-role-91 :arg1 (c2 / country :name (n2 / name :op1 "N-A")) :arg3 (s2 / speak-01))) :purpose (d / discuss-01 :arg0 (p4 / person) :arg1 (i2 / issue-02)))))
(l / lead-03 :arg0 (c / conflict-01 :arg0 (u / union-02) :arg1 (a / and :op1 (u2 / union-02) :op2 (m / madrassa))) :arg2 (s / strike-01 :quant (n / number) :time (b / before :op1 (n2 / now) :duration (t / temporal-quantity :quant (N / N-A) :unit (m2 / month)))))
(e / explain-01 :arg1 (t / this) :time (t2 / today) :arg0-of (e2 / explain-01 :arg1 (p / person :name (n / name :op1 "Andreas" :op2 "Reinhardt") :arg0-of (h / have-org-role-91 :arg1 (p2 / person :name (n2 / name :op1 "Modespitze" :op2 "Plauen")) :arg2 (d / director :mod (m / manage-01))))))
(o / obligate-01 :arg1 (w / we) :arg2 (t / think-01 :arg0 (w2 / we) :arg1 (t2 / thing :manner-of (r / reduce-01 :arg1 (k / kill-01) :location (c / country :poss (t3 / they))))) :mod (u / ultimate))
(a / and :op1 (f / front :domain (i / immigrate-01) :time (b / before :op1 (n / now) :quant (b2 / between :op1 (t / temporal-quantity :quant (N / N-A) :unit (m / month)) :op2 (t2 / temporal-quantity :quant (N2 / N-A) :unit (m2 / month))))) :op2 (b3 / be-located-at-91 :arg1 (i2 / immigrate-01) :arg2 (u / under :op1 (t3 / temporal-quantity :quant (N3 / N-A) :unit (m3 / month)))) :time (s / since :op1 (c / call-01 :arg0 (p / person :name (n2 / name :op1 "Donald" :op2 "Trump")) :arg1 (p2 / person :arg0-of (i3 / immigrate-01) :source (c2 / country :name (n3 / name :op1 "Mexico"))) :arg2 (c3 / campaign-01 :arg0 (p3 / person)))))
(d / date-entity :year (N / N-A) :month (N2 / N-A) :calendar (N3 / N-A))
(s / say-01 :arg0 (p / person :name (n / name :op1 "Peter" :op2 "Szijjarto") :arg0-of (h / have-org-role-91 :arg1 (p2 / person :arg0-of (h2 / have-org-role-91 :arg2 (m / minister :mod (f / foreign)))) :arg2 (m2 / minister :mod (f2 / foreign)))) :arg1 (p3 / plan-01 :arg0 (c / country :poss (h3 / he)) :arg1 (b / build-01 :arg0 (c2 / country) :arg1 (f3 / fence :mod (r / razor-wire)) :location (a / along :op1 (b2 / border :poss (c3 / country))) :purpose (s2 / stop-01 :arg0 (c4 / country) :arg1 (f4 / flow-01 :arg1 (p4 / person :arg0-of (s3 / specialize-01 :arg1 (s4 / stop-01 :arg0 (c5 / country) :arg1 (f5 / flow-01 :arg1 (p5 / person :arg0-of (u / use-01))))))))) :mod (a2 / also)) :time (m3 / meanwhile) :mod (a3 / also))
(c / come-03 :arg1 (a / ancestor :location (l / location :name (n / name :op1 "Palatine"))) :arg2 (p / place :location-of (k / know-02 :arg1 (p2 / person :arg0-of (i / inhabit-01)))))
(c / cause-01 :arg0 (t / this) :arg1 (w / wobbles :arg0 (i / island :name (n / name :op1 "N-A")) :degree (s / slight) :location (o / orbit-01 :arg0 (p / planet :mod (r / ringed)))))
(b / be-located-at-91 :arg1 (n / next) :arg2 (n2 / next-to :op1 (e / enthusiasm)))
(b / be-located-at-91 :arg1 (n / next) :arg2 (n2 / next-to :op1 (e / enthusiasm)))
(s / signal-07 :polarity - :arg1 (a / anything))
(c / contrast-01 :arg1 (p / possible-01 :arg1 (t / true :domain (t2 / that) :source (p2 / perspective :mod (m / medicine) :arg1-of (p3 / pure-02)))) :arg2 (d / danger :arg1-of (r / relate-01) :domain (t3 / that) :mod (f / further) :arg1-of (c2 / cause-01 :arg0 (t4 / try-01 :arg0 (p4 / person :arg0-of (p5 / play-01) :mod (a / any)) :arg1 (r2 / return-01 :arg1 (p6 / person))))))
(c / contrast-01 :arg1 (p / possible-01 :arg1 (t / true :domain (t2 / that) :source (p2 / perspective :mod (m / medicine) :arg1-of (p3 / pure-02)))) :arg2 (d / danger :arg1-of (r / relate-01) :domain (t3 / that) :mod (f / further) :arg1-of (c2 / cause-01 :arg0 (t4 / try-01 :arg0 (p4 / person :arg0-of (p5 / play-01) :mod (a / any)) :arg1 (r2 / return-01 :arg1 (p6 / person))))))
(c / consider-02 :arg0 (c2 / country :name (n / name :op1 "Croatia")) :arg1 (t / thing :arg1-of (r / refuse-01 :arg0 (c3 / country :name (n2 / name :op1 "Slovenia"))) :mod (' / '')))
(g / generate-01 :arg0 (p / person :name (n / name :op1 "Ben" :op2 "Carson")) :arg1 (r / reach-01 :arg0 (p2 / person) :arg1 (l / level :arg1-of (s / same-01 :arg2 (e / enthusiasm)) :mod (e2 / enthusiasm))) :arg1-of (s2 / say-01 :arg0 (p3 / person :name (n2 / name :op1 "Trump"))) :arg1-of (s3 / say-01 :arg0 (p4 / person :quant 43 :arg0-of (s4 / say-01 :arg1 (t / thing :arg1-of (s5 / same-01 :arg2 (t2 / thing :arg1-of (s6 / same-01 :arg2 (t3 / thing :arg1-of (s7 / same-01 :arg2 (t4 / thing :arg1-of (s8 / same-01 :arg2 (t5 / thing :arg1-of (s9 / same-01 :arg2 (p5 / person)))))))))))))) :mod (o / only))
(b / be-located-at-91 :arg1 (s / system :mod (o / old) :poss (c / court :arg1-of (p / private-03))) :arg2 (t / table))
(b / be-located-at-91 :arg1 (s / system :mod (o / old) :poss (c / court :arg1-of (p / private-03))) :arg2 (t / table))
(s / say-01 :arg0 (a / and :op1 (p / person :name (n / name :op1 "McKee")) :op2 (p2 / person :name (n2 / name :op1 "Capewell"))) :arg1 (s2 / sponsor-01 :arg0 (m / meet-03 :quant 1 :arg1-of (i / include-91 :arg2 (m2 / meet-03))) :arg1 (o / organization :name (n3 / name :op1 "EuroSwiss" :op2 "Health") :arg1-of (c / call-01 :arg2 (f / fund-01 :arg0 (o2 / organization :name (n4 / name :op1 "British" :op2 "American" :op3 "Tobacco")) :arg1 (s3 / study-01 :arg0-of (d / depend-01 :polarity -))) :time (p3 / previous)))))
(m / multi-sentence :snt1 (s / say-01 :mode (i / interrogative) :arg0 (y / you) :arg1 (r / real :domain (i2 / it))) :snt2 (s2 / say-01 :arg0 (p / person :name (n / name :op1 "Gaultier")) :arg1 (i3 / it)))
(f / follow-02 :arg0 (f2 / firm) :arg1 (c / company :mod (s / sheet) :arg1-of (b / balance-01 :arg1-of (s2 / strong-02))) :arg1-of (f3 / follow-01 :arg2 (a / and :op1 (c2 / company :quant 1994) :op2 (c3 / company :quant 1999) :op3 (r / rate :quant 2004) :op4 (r2 / rate :quant 2004) :op5 (r3 / rate :quant 2004 :mod (p / percentage-entity :value (N / N-A))))))
(p / possible-01 :arg1 (t / take-01 :arg0 (i / it) :arg1 (t2 / temporal-quantity :quant (N / N-A) :unit (y / year)) :time (b / before :op1 (d / danger :mod (d2 / drop-01 :arg1 (l / level :mod (n / non-smokers)) :degree (m / more))))) :arg0-of (d3 / declare-02 :arg1 (p2 / person :name (n2 / name :op1 "Thomas" :op2 "Dietrich") :arg0-of (a / author-01) :arg0-of (l2 / lead-02 :arg1 (o / organization :name (n3 / name :op1 "University" :op2 "of" :op3 "Birmingham"))))))
(o / oblige-02 :arg1 (p / person :arg0-of (h / have-org-role-91 :arg1 (m / military :name (n / name :op1 "NATO")) :arg2 (d / diplomat :mod (f / foreign)))) :arg2 (t / try-01 :polarity - :arg0 (p2 / person) :arg1 (q / quit-01 :arg0 (p3 / person) :arg1 (s / sense-01 :arg0 (p4 / person) :arg1 (m2 / make-01 :arg0 (p5 / person) :arg1 (s2 / sense-01 :arg0 (p6 / person) :arg1 (m3 / make-01 :arg0 (p7 / person) :arg1 (s3 / sense-01 :arg0 (p8 / person) :arg1 (m4 / make-01 :arg0 (p9 / person) :arg1 (s4 / sense-01 :arg0 (p10 / person) :arg1 (i / it) :mod (a / all)) :location (h2 / home))))))))) :arg1-of (c / cause-01 :arg0 (e / equivocation :arg0 (p11 / person :arg0-of (h3 / have-org-role-91 :arg1 (m5 / military :name (n2 / name :op1 "NATO")))) :arg1 (p12 / person :arg0-of (h4 / have-org-role-91 :arg1 (m6 / military) :arg2 (e2 / equivocation))))))
(o / oblige-02 :arg1 (p / person :arg0-of (h / have-org-role-91 :arg1 (m / military :name (n / name :op1 "NATO")) :arg2 (d / diplomat :mod (f / foreign)))) :arg2 (t / try-01 :polarity - :arg0 (p2 / person) :arg1 (q / quit-01 :arg0 (p3 / person) :arg1 (s / sense-01 :arg0 (p4 / person) :arg1 (m2 / make-01 :arg0 (p5 / person) :arg1 (s2 / sense-01 :arg0 (p6 / person) :arg1 (m3 / make-01 :arg0 (p7 / person) :arg1 (s3 / sense-01 :arg0 (p8 / person) :arg1 (m4 / make-01 :arg0 (p9 / person) :arg1 (s4 / sense-01 :arg0 (p10 / person) :arg1 (i / it) :mod (a / all)) :location (h2 / home))))))))) :arg1-of (c / cause-01 :arg0 (e / equivocation :arg0 (p11 / person :arg0-of (h3 / have-org-role-91 :arg1 (m5 / military :name (n2 / name :op1 "NATO")))) :arg1 (p12 / person :arg0-of (h4 / have-org-role-91 :arg1 (m6 / military) :arg2 (e2 / equivocation))))))
(m / multi-sentence :snt1 (a / and :op1 (l / lose-02 :arg0 (l2 / location :name (n / name :op1 "Metcash")) :arg1 (s / share :mod (m2 / market)) :location (s2 / state :location (e / east))) :op2 (l3 / lose-02 :arg0 (a2 / and :op1 (o / organization :name (n2 / name :op1 "Aldi")) :op2 (p / person :name (n3 / name :op1 "Coles"))) :arg1 (s3 / share :mod (m3 / market)) :location (s4 / state :mod (e2 / east)))) :snt2 (l4 / loyalty :arg0 (s5 / survey-01 :arg0 (o2 / organization :name (n4 / name :op1 "Roy" :op2 "Morgan")) :time (r / recent)) :degree (m4 / most)))
(s / section :mod (a / automotive) :mod (e / even) :condition (n / need-01 :arg0 (y / you) :arg1 (p / pick-01 :arg0 (y2 / you) :arg1 (o / oil :mod (y3 / yuhua) :quant (s2 / some)))))
(a / and :op1 (b / beat-03 :arg0 (f / figure :mod (s / sell-01) :mod (l / late :degree (m / most)) :poss (o / organization :name (n / name :op1 "Richemont"))) :arg1 (e / expect-01)) :op2 (s2 / show-01 :arg0 (f2 / figure) :arg1 (s3 / sell-01 :arg1 (m2 / market :arg1-of (k / key-02)) :arg2 (c / country :name (n2 / name :op1 "China"))) :mod (a2 / also)))
(f / force :mod (f2 / fading) :domain (h / he) :mod (t / too))
(c / cause-01 :arg0 (l / locked :arg1 (h / he) :location (n / naked :mod (c2 / cell) :poss (h2 / he))) :arg1 (a / award-01 :arg1 (d / damage-01 :arg0 (t / they)) :arg2 (p / prisoner) :time (r / recent)))
(i / include-91 :arg1 (a / and :op1 (p / person :arg0-of (v / view-01)) :op2 (p2 / person :ord (o / ordinal-entity :value 1) :arg0-of (v2 / view-01)) :op3 (p3 / person :ord (o2 / ordinal-entity :value 2) :arg0-of (v3 / view-01) :ord (o3 / ordinal-entity :value 2) :ord (o4 / ordinal-entity :value 2) :ord (o5 / ordinal-entity :value 2) :ord (o6 / ordinal-entity :value 2))) :arg2 (n / night :mod (m / monday)) :time (n2 / night :mod (m2 / monday)))
(a / and :op1 (h / have-rel-role-91 :arg0 (p / person :arg0-of (h2 / have-rel-role-91 :arg2 (f / friend :mod (c / chess)))) :arg1 (p2 / person :mod (a2 / another) :arg0-of (h3 / have-org-role-91 :arg2 (m / member))) :arg2 (r / rank :poss (p3 / person)) :time (b / before :op1 (n / now) :quant (t / temporal-quantity :quant (N / N-A) :unit (m2 / month)))) :op2 (f2 / found-01 :arg1 (p4 / person) :arg2 (r2 / rank :poss (p5 / person))) :op3 (t2 / take-01 :arg0 (p6 / person) :arg1 (n2 / number :quant-of (p7 / person :arg0-of (h4 / have-org-role-91 :arg1 (p8 / person :quant 19 :arg0-of (p9 / play-01)) :arg2 (m3 / member))))))
(s / say-01 :arg0 (p / person :name (n / name :op1 "Mrs" :op2 "Laury")) :arg1 (h / have-03 :arg0 (w / we) :arg1 (m / majority :arg1-of (i / include-91 :arg2 (m2 / man :arg0-of (w2 / work-01 :location (s2 / store :poss (w3 / we))))) :quant (m3 / majority)) :mod (s3 / still)))
(i / include-91 :arg1 (m / model :mod (n / new) :arg1-of (i2 / introduce-01 :arg2 (a / above :op1 (m2 / model :arg1-of (i3 / introduce-01 :arg2 (m3 / model)))) :mod (n2 / new) :mod (a2 / all))) :arg2 (a3 / and :op1 (v / vehicle :mod (c / concept :mod (f / futuristic)) :quant (a4 / all)) :op2 (m4 / model :mod (n3 / new) :mod (b / broadcast-program :name (n4 / name :op1 "N-A")))) :time (y / year :mod (t / this)) :location (a5 / above))
(m / maintain-01 :arg1 (a / and :op1 (p / peace) :op2 (s / security) :op3 (s2 / stability) :location (c / country :name (n / name :op1 "Austria"))) :mod (g / great :degree (m2 / more :mod (s3 / still))))
(b / believe-01 :arg0 (o / organization :name (n / name :op1 "Morgan" :op2 "Stanley")) :arg1 (a / and :op1 (f / fall-01 :arg1 (a2 / and :op1 (f2 / food :poss (o2 / organization :name (n2 / name :op1 "Metcash"))) :op2 (s / sell-01 :arg1 (a3 / and :op1 (f3 / food) :op2 (g / groceries)))) :arg2 (r / rate-entity-91 :arg1 3.8 :arg2 (t / temporal-quantity :quant (N / N-A) :unit (y / year)))) :op2 (r2 / rate-entity-91 :arg1 (m / monetary-quantity :quant (N2 / N-A) :unit (p / pound)) :arg2 (t2 / temporal-quantity :quant (N3 / N-A) :unit (y2 / year))) :op3 (r3 / reduce-01 :arg1 (s2 / share :mod (m2 / market) :poss (a4 / and)) :arg3 (r4 / rate-entity-91 :arg1 (s3 / share :mod (m3 / market)) :arg2 (r5 / rate-entity-91 :arg1 (s4 / share :mod (m4 / market)) :arg2 (r6 / rate-entity-91 :arg1 (s5 / share :mod (m5 / market)) :arg2 (r7 / rate-entity-91 :arg1 (s6 / share :mod (m6 / market)) :arg2 (r8 / rate-entity-91 :arg1 (m7 / monetary-quantity :quant (N4 / N-A) :unit (p2 / pound)) :arg2 (t3 / temporal-quantity :quant (N5 / N-A) :unit (y3 / year))) :arg4 (r9 / rate-entity-91 :arg1 (m8 / monetary-quantity :quant (N6 / N-A) :unit (p3 / pound)) :arg2 (t4 / temporal-quantity :quant (N7 / N-A) :unit (y4 / year))))))))))
(a / and :op1 (s / scorer :mod (d / double) :location (l / location :name (n / name :op1 "Piraeus"))) :op2 (r / roll :arg1 (p / person :name (n2 / name :op1 "Thomas" :op2 "Müller") :arg0-of (h / have-org-role-91 :arg1 (o / organization) :arg2 (s2 / star))) :manner (s3 / simple)))
(t / transfer-01 :arg1 (t2 / thing :arg1-of (s / state-01 :arg0 (p / person :arg0-of (h / have-rel-role-91 :arg1 (m / man) :arg2 (l / lawyer))))) :arg2 (c / cell :mod (l2 / large :degree (m2 / more))) :arg1-of (s2 / say-01 :arg0 (t3 / thing :arg1-of (s3 / state-01 :arg0 (p2 / person :arg0-of (h2 / have-rel-role-91 :arg1 (m3 / man) :arg2 (l3 / lawyer)))))))
(h / have-concession-91 :arg1 (p / possible-01 :arg1 (m / make-02 :arg0 (t / turmoil :time (r / recent) :location (m2 / market :mod (f / finance) :mod (g / globe))) :arg1 (s / skittish :arg0 (p2 / person :arg0-of (h2 / have-org-role-91 :arg1 (g2 / government-organization :name (n / name :op1 "Fed")) :arg2 (o / official))) :arg1 (p3 / person :arg0-of (h3 / have-org-role-91 :arg1 (g3 / government-organization :name (n2 / name :op1 "Fed")) :arg2 (o2 / official))) :arg2 (v / volatility) :manner (r2 / raise-01 :arg0 (p4 / person) :arg1 (r3 / rate :arg1-of (f2 / fund-01 :arg0 (f3 / federal)) :mod (f4 / federal)) :arg2 (p5 / percentage-entity :value (N / N-A) :mod (m3 / mere)))))) :arg2 (s2 / show-01 :arg0 (d / data :quant (m4 / most)) :arg1 (g4 / grow-01 :arg1 (m5 / market :mod (f5 / finance) :mod (g5 / globe)))))
(s / strengthen-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg3 (j / judge-01)) :mod (c / constitution)) :arg1 (r / right :poss (p2 / person :arg1-of (i / imprison-01))) :frequency (o / often) :time (p3 / past))
(( / ( :( (n / name) :op1 "Griffiths")
(c / contrast-01 :arg2 (s / see-01 :polarity - :arg0 (p / person :name (n / name :op1 "Vesna" :op2 "Györkös" :op3 "Znidar") :arg0-of (h / have-org-role-91 :arg2 (m / minister :mod (i / interior)))) :arg1 (i2 / it) :manner (l / light :mod (s2 / same) :mod (q / quite))))
(p / possible-01 :arg1 (g / give-01 :arg0 (p2 / person :arg1-of (e / expert-01)) :arg1 (a / answer-01 :arg2 (t / thing :arg0-of (c / cause-01 :arg1 (g2 / go-01 :arg1 (w / woman :quant (m / many :degree (s / so))) :arg4 (r / raptures) :arg1-of (c2 / cause-01 :arg0 (h / handbag :arg1-of (b / beautiful-02)))))))) :arg2 (i / i))
(b / be-located-at-91 :arg1 (l / location :name (n / name :op1 "Red" :op2 "Sea") :location (c / country :name (n2 / name :op1 "Egypt"))) :arg2 (t / temperature-quantity :quant 28))
(s / say-01 :arg0 (a / arsenal) :arg2 (p / person :name (n / name :op1 "Mikel" :op2 "Arteta")))
(s / say-01 :arg0 (a / arsenal) :arg2 (p / person :name (n / name :op1 "Mikel" :op2 "Arteta")))
(v / view-01 :arg0 (p / person :quant 6 :arg1-of (r / republican)) :arg1 (p2 / person :name (n / name :op1 "Donald" :op2 "Trump")) :mod (f / favorable) :time (n2 / now))
(p / person :arg0-of (h / have-rel-role-91 :arg1 (o / organization :name (n / name :op1 "Al" :op2 "Qaida")) :arg2 (s / son) :time (l / late)) :arg0-of (h2 / have-rel-role-91 :arg1 (p2 / person :name (n2 / name :op1 "Osama" :op2 "bin" :op3 "Laden")) :arg2 (s2 / son) :time (l2 / late)) :arg0-of (h3 / have-rel-role-91 :arg1 (p3 / person) :arg2 (s3 / son) :time (l3 / late)) :arg0-of (h4 / have-rel-role-91 :arg1 (p4 / person) :arg2 (s4 / son)) :arg0-of (h5 / have-rel-role-91 :arg1 (p5 / person) :arg2 (s5 / son)) :arg0-of (h6 / have-rel-role-91 :arg1 (p6 / person) :arg2 (s6 / son)))
(a / announce-01 :arg0 (p / person :name (n / name :op1 "Damon")) :arg1 (v / visit-01 :arg0 (a2 / and :op1 (p2 / person :arg0-of (p3 / produce-01 :arg1 (e / entertainers))) :op2 (p4 / person :arg0-of (p5 / produce-01 :arg1 (m / media))) :op3 (p6 / person :arg0-of (h / have-org-role-91 :arg1 (m2 / media) :arg3 (l / lead-02 :arg0 (p7 / person))))) :arg1 (v2 / visit-01 :arg0 (p8 / person) :arg1 (p9 / pope) :purpose (d / discuss-01 :arg0 (p10 / person) :arg1 (p11 / portrayal :poss (r / religious-group :name (n2 / name :op1 "Catholic" :op2 "Church")) :location (w / west))))) :time (r2 / recent))
(s / say-01 :arg0 (t / thing :arg1-of (s2 / state-01)) :arg1 (d / drawn :arg1 (a / and :op1 (a2 / and :op1 (s3 / sector :mod (i / identifying)) :op2 (s4 / sector :mod (i2 / identifying))) :mod (n / negative)) :op2 (d2 / drawn :arg1 (a3 / and))))
(o / or :mode (i / interrogative) :op1 (s / see-01 :arg0 (y / you) :arg1 (y2 / you)) :op2 (i2 / involve-01 :arg1 (y3 / you) :arg2 (e / event :mod (n / news))))
(s / say-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (s2 / street) :arg2 (s3 / spokeswoman :mod (s4 / street)))) :arg1 (b / believe-01 :arg1 (c / come-03 :arg1 (t / text) :arg2 (o / office :poss (p2 / person :name (n / name :op1 "Cameron")) :mod (s5 / state :name (n2 / name :op1 "N-A"))))))
(l / list-01 :arg1 (o / operation :mod (b / both)) :arg2 (e / exchange-01 :arg1 (s / stock)))
(p / possible-01 :arg1 (m / masterstroke :arg1 (a / appoint-01 :arg0 (p2 / person :name (n / name :op1 "Mahela" :op2 "Jayawardene") :arg0-of (a2 / appoint-01 :arg1 (c / country :name (n2 / name :op1 "Sri" :op2 "Lanka")) :arg2 (c2 / consultant))) :arg2 (c3 / consultant))))
(a / and :op1 (d / drop-05 :arg0 (p / person :name (n / name :op1 "Adam" :op2 "Lyth")) :arg1 (s / squad :mod (t / test-01) :mod (c / country :name (n2 / name :op1 "England")))) :op2 (r / replace-01 :arg0 (p2 / person :name (n3 / name :op1 "Alex" :op2 "Hales")) :arg1 (p3 / person) :arg2 (s2 / squad :mod (t2 / test-01) :mod (c2 / country))))
(b / become-01 :arg1 (c / country :name (n / name :op1 "Hungary")) :arg2 (p / point :mod (e / enter-01 :arg0 (c2 / country) :arg1 (a / and :op1 (r / refugee :mod (w / war)) :op2 (r2 / refugee :location (a2 / and :op1 (c3 / country :name (n2 / name :op1 "Syria")) :op2 (e2 / elsewhere))) :quant (m / many)))) :time (b2 / before :op1 (n3 / now) :duration (f / few :op1 (t / temporal-quantity :quant (N / N-A) :unit (m2 / month)))))
(i / it :mod (a / all) :topic (i2 / i))
(o / offer-01 :arg1 (t / train-01 :arg2 (s / staff :mod (n / new) :arg2-of (s2 / staff-01))) :frequency (r / rate-entity-91 :arg3 (t2 / temporal-quantity :quant (N / N-A) :unit (y / year))))
(o / offer-01 :arg0 (a / and :op1 (p / person :arg0-of (h / have-rel-role-91 :arg1 (p2 / person :name (n / name :op1 "Maksimovic")) :arg2 (m / mother))) :op2 (p3 / person :arg0-of (h2 / have-rel-role-91 :arg1 (p4 / person) :arg2 (m2 / mother)))) :arg1 (s / surety :arg1 (r / release-01 :arg1 (p5 / person))) :manner (j / joint))
(a / and :op1 (a2 / and :op1 (c / come-01 :arg1 (r / rate :mod (r2 / rate))) :op2 (s / stumble :arg0 (t / thing :arg1-of (f / flaw-01 :arg1-of (p / possible-01 :polarity -))) :arg1 (r3 / recession-02 :arg1 (r4 / rate)))) :op2 (s2 / slip :arg1 (e / economy) :arg2 (r5 / recession-02)))
(s / say-01 :arg2 (p / person :name (n / name :op1 "N-A")))
(m / multi-sentence :snt1 (p / possible-01 :polarity - :arg1 (a / accept-01 :arg1 (i / idea :topic (c / corridors)) :degree (a2 / absolute))) :snt2 (i2 / intend-01 :arg0 (p2 / person :name (n / name :op1 "Sloveina")) :arg1 (s / step :arg0 (p3 / person) :arg1 (s2 / surveil-01 :arg0 (p4 / person) :arg1 (b / border)) :arg2 (c2 / country :name (n2 / name :op1 "Hungary")) :mod (e / especially))))
(c / contrast-01 :arg2 (o / oppose-01 :arg0 (p / person :quant (m / majority) :arg1-of (i / include-91 :arg2 (p2 / person))) :arg1 (i2 / involve-01 :arg1 (p3 / person :arg0-of (h / have-org-role-91 :arg1 (c2 / country :name (n / name :op1 "Iraq")) :arg2 (s / soldier))) :arg2 (o2 / operation :mod (c3 / combat-01) :location (c4 / country :location (c5 / country))) :arg1-of (d / direct-02)) :arg1-of (c6 / cause-01 :arg0 (a / and :op1 (o3 / oppose-01 :arg1 (p4 / person :quant 54)) :op2 (e / express-01 :arg0 (p5 / percentage-entity :value (N / N-A)) :arg1 (p6 / person))))))
(c / contrast-01 :arg2 (p / possible-01 :arg1 (f / find-02 :arg0 (p2 / person :arg0-of (p3 / participate-01 :arg1 (m / market))) :arg1 (p4 / possible-01 :arg1 (o / overdone :arg1 (r / rate-hike :mod (a / all)) :arg1-of (p5 / possible-01))))) :time (e / end-01))
(i / infer-01 :arg1 (r / reduce-01 :arg1 (r2 / reduce-01 :arg1 (f / fish :mod (s / small))) :arg0-of (d / diversionary :arg1 (p / person :name (n / name :op1 "Wolfschmidt") :arg0-of (h / help-01 :arg1 (e / economy :mod (o / only)))))) :arg2 (r3 / reduce-01 :arg1 (f2 / fish :mod (s2 / small))))
(a / and :op1 (l / look-01 :arg0 (s / she) :arg1 (i / it)) :op2 (f / find-01 :arg0 (s2 / she) :arg1 (m / message :mod (d / disturbing)) :time (b / before :op1 (a2 / alerting :arg0 (s3 / she) :arg1 (p / person :arg0-of (h / have-rel-role-91 :arg1 (s4 / she) :arg2 (m2 / mother)))))))
(c / cause-01 :arg0 (r / risk-free :polarity - :arg1 (t / thing :arg0-of (e / evidence-01) :time (c2 / current)) :arg1-of (c3 / clear-06)) :arg1 (c4 / carry-01 :arg0 (w / we) :arg1 (r2 / remittances :mod (n / nation) :poss (w2 / we) :mod (n2 / nation)) :mod (o / only) :arg1-of (c5 / cause-01 :arg0 (r3 / risk-free :polarity - :time (c6 / current)))))
(a / and :op1 (r / refer-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (o / organization :name (n / name :op1 "Brisbane" :op2 "Broncos")) :arg2 (c / coach))) :arg1 (p2 / person :name (n2 / name :op1 "Wayne" :op2 "Bennett") :arg0-of (r2 / refer-01 :arg1 (s / storm) :arg2 (s2 / storm))) :arg2 (s3 / storm) :time (a2 / after :op1 (w / win-01 :arg0 (p3 / person) :arg1 (g / game :mod (t / that) :topic (l / league :mod (r3 / rugby)))))) :op2 (s4 / say-01 :arg0 (p4 / person) :arg1 (' / '' :polarity - :arg1 (l2 / location :name (n3 / name :op1 "Queensland") :quant 2) :mod (b / big :degree (t2 / too)) :destination (w2 / wrestling))))
(h / have-concession-91 :arg1 (p / possible-01 :arg1 (i / include-01 :arg1 (a / and :op1 (l / likely-01 :arg1 (m / make-01 :arg0 (o / organization :name (n / name :op1 "Apple")) :arg1 (s / space))) :op2 (e / easy-05 :arg1 (u / use-01 :arg0 (o2 / organization) :arg1 (t / tool :arg1-of (s2 / special-02) :arg0-of (s3 / suggest-01 :arg1 (a2 / and :op1 (r / reverse-01 :arg1 (a3 / apps)) :op2 (r2 / re-install :arg1 (p2 / process-02) :time (o3 / once :op1 (p3 / process-02 :arg1 (p4 / process-02))))))))) :degree (m2 / more) :mod (a4 / also)))) :arg2 (i2 / include-01 :arg1 (p5 / possible-01 :arg1 (i3 / include-01 :arg1 (p6 / person :arg0-of (m3 / make-01 :arg1 (m4 / make-01 :arg1 (s4 / space))))) :arg2 (m5 / make-01 :arg0 (p7 / person) :arg1 (s5 / space)))) :arg2 (p8 / possible-01 :arg1 (i4 / include-01 :arg1 (p9 / person :arg0-of (m6 / make-01 :arg1 (s6 / space))) :arg2 (m7 / make-01 :arg0 (p10 / person) :arg1 (s7 / space)))))
(a / and :op1 (c / come-01 :arg1 (p / person :arg0-of (h / have-rel-role-91 :arg1 (h2 / he) :arg2 (g / grandfather))) :arg3 (l / location :name (n / name :op1 "Kallstadt")) :location (l2 / location :name (n2 / name :op1 "Palatine"))) :op2 (b / be-located-at-91 :arg1 (p2 / person) :arg2 (h3 / here) :time (c2 / campaign-01 :arg1 (e / elect-01))))
(d / demand-01 :arg0 (l / location :name (n / name :op1 "Linz")))
(c / consult-01 :arg1 (p / person :arg0-of (h / have-org-role-91 :arg1 (s / syndicate :arg0-of (r / refine-01 :mod (a / archaeological))))) :time (a2 / always) :time (c2 / carry-out-03 :arg1 (p2 / project :mod (c3 / construct-01)) :location (d / district :mod (c4 / city))))
(a / and :op1 (g / give-01 :arg1 (p / portion :mod (g2 / good) :part-of (s / store)) :arg2 (s2 / section :mod (f / freezer :mod (m / massive))) :arg1-of (c / cause-01 :arg0 (f2 / find-01 :arg0 (y / you) :arg1 (a2 / and :op1 (l / leave-11 :arg1-of (f3 / freeze-01)) :op2 (m2 / melon :mod (b / bitter)))))) :op2 (b2 / bitter :mod (b3 / bitter) :domain (a3 / and :op1 (m3 / melon :mod (b4 / bitter)) :op2 (m4 / melon :mod (b5 / bitterly)) :op3 (r / report :mod (b6 / blood :mod (b7 / beef))) :op4 (a4 / and :op1 (b8 / balls :mod (p2 / pork)) :op2 (f4 / food :mod (c2 / commercially-prepared))))))
(c / contrast-01 :arg1 (l / like-02 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg2 (p2 / president)) :arg1-of (i / include-91 :arg2 (p3 / person :arg0-of (h2 / have-org-role-91 :arg2 (p4 / president)) :mod (p5 / primary)) :arg3 (p6 / percentage-entity :value 57))) :arg1 (s / see-01 :arg0 (p7 / person) :arg1 (c2 / catch-up-04 :arg1 (p8 / person) :arg2 (r / race)))) :arg2 (t / think-01 :polarity - :arg0 (p9 / person :ord (o / ordinal-entity :value 3) :arg0-of (h3 / have-org-role-91 :arg2 (p10 / president))) :arg1 (r2 / recommend-01 :arg1 (h4 / he))))
(v / vulnerable :domain (c / child :mod (r / refugee)) :mod (p / particular) :arg0-of (e / explain-01 :arg1 (p2 / person :name (n / name :op1 "Dietrich" :op2 "Munz") :arg0-of (h / have-org-role-91 :arg1 (b / bptk) :arg2 (p3 / president)))))
(s / share-01 :arg0 (o / organization :name (n / name :op1 "Infineon")) :arg1 (p / percentage-entity :value (N / N-A)) :arg2 (t / top :part-of (p2 / percentage-entity :value (N2 / N-A) :mod (f / further))))
(p / possible-01 :arg1 (d / draw-02 :arg1 (c / child :mod (y / young :degree (m / more))) :arg2 (a / attract-01 :arg0 (c2 / child) :arg1 (s / scents :mod (s2 / sanitizer)))))
(t / travelling :arg1 (n / night :mod (e / entire)) :path (c / country :name (n2 / name :op1 "Serbia") :location (r / relative-position :op1 (c2 / country) :quant (a / about :op1 (d / distance-quantity :quant (N / N-A) :unit (m / mile))))))
(t / travelling :arg1 (n / night :mod (e / entire)) :path (c / country :name (n2 / name :op1 "Serbia") :location (r / relative-position :op1 (c2 / country) :quant (a / about :op1 (d / distance-quantity :quant (N / N-A) :unit (m / mile))))))
(g / get-01 :arg0 (m / man :mod (s / serbian)) :arg1 (b / bail-out-02 :arg1 (m2 / man)) :arg3 (m3 / monetary-quantity :quant (2 / 200k) :unit (d / dollar)))
(a / and :op1 (r / run-01 :arg0 (a2 / and :op1 (p / person :name (n / name :op1 "Fischer")) :op2 (t / team :consist-of (p2 / person :arg0-of (m / mine-01 :time (f / former)) :arg0-of (m2 / mine-01)))) :arg1 (e / establishments :mod (b / both)) :time (y / year :mod (n2 / next))) :op2 (c / close-01 :arg1 (p3 / person :arg0-of (m3 / mine-01 :time (f2 / former)) :arg0-of (h / have-org-role-91 :arg2 (h2 / hospital) :time (f3 / former)) :arg0-of (h3 / have-org-role-91 :arg2 (h4 / hospital) :time (f4 / former)) :arg0-of (h5 / have-org-role-91 :arg2 (h6 / hospital) :time (f5 / former)) :arg0-of (h7 / have-org-role-91 :arg2 (h8 / hospital) :time (f6 / former)) :arg0-of (h9 / have-org-role-91 :arg2 (h10 / hospital) :time (f7 / former)) :arg0-of (h11 / have-org-role-91 :arg2 (h12 / hospital) :time (f8 / former)) :arg0-of (h13 / have-org-role-91 :arg2 (h14 / hospital) :time (f9 / former)))))
(c / contrast-01 :arg1 (d / do-02 :arg0 (p / person :name (n / name :op1 "Biden")) :arg1 (t / thing :quant 3 :arg1-of (i / include-91 :arg2 (p2 / person :arg0-of (m / mine-01))))) :arg2 (l / lead-02 :arg0 (p3 / person :name (n2 / name :op1 "Clinton"))))
(a / and :op1 (o / oppose-01 :arg0 (p / person :quant 7 :poss (h / he)) :arg1 (a2 / and :op1 (a3 / attack-01 :quant 2 :mod (g / good)) :op2 (a4 / attack-01 :quant 2 :mod (g2 / good)))) :op2 (j / judge-01 :arg1 (r / reality :arg1-of (h2 / harsh-02) :mod (t / that)) :arg2 (t2 / thing :arg0-of (l / liberate-01)) :arg1-of (h3 / harsh-02)))
(a / and :op1 (a2 / attempt-01 :arg0 (p / person :name (n / name :op1 "Peter" :op2 "Moody")) :arg1 (a3 / attempt-01 :arg0 (p2 / person) :arg1 (s / spy-01 :arg0 (p3 / person) :arg1 (s2 / spy-01) :location (s3 / stables :poss (p4 / person)) :time (y / year :mod (l / last)))) :arg1-of (a4 / allege-01)) :op2 (t / threaten-01 :arg0 (p5 / person) :arg1 (q / quit-01 :arg0 (p6 / person)) :time (i / immediate)))
(a / accident :mod (j / just) :domain (t / this))
(c / cause-01 :arg0 (p / publish-01 :arg0 (p2 / person :name (n / name :op1 "Luisa" :op2 "Binder")) :arg1 (t / this) :time (r / recent)) :arg1 (e / event :arg1-of (p3 / publish-01 :time (r2 / recent)) :domain (t2 / this)))
(p / possible-01 :arg1 (r / receive-01 :arg0 (a / and :op1 (c / citizen :mod (s / senior)) :op2 (c2 / citizen :mod (s2 / senior)) :op3 (p2 / person :mod (o / other))) :arg1 (i / information :topic (i2 / issue-02 :arg0 (o2 / or :op1 (i3 / insure-02 :mod (n / nursing)) :op2 (s3 / service :mod (i4 / insure-02 :mod (h / health))) :op3 (s4 / service :mod (h2 / health) :mod (h3 / health))))) :time (i5 / immediate)) :location (h4 / here) :arg1-of (d / direct-02))
(s / say-01 :arg0 (p / person :name (n / name :op1 "Mike" :op2 "Shaffer") :arg0-of (h / have-org-role-91 :arg1 (c / city-district :name (n2 / name :op1 "N-A") :arg1-of (n3 / near-02 :arg2 (l / location :name (n4 / name :op1 "Gautier")))) :arg2 (e / entertainment))) :arg1 (s2 / see-01 :arg0 (p2 / person) :arg1 (p3 / person :name (n5 / name :op1 "Lamb")) :time (d / date-entity :month 9 :day 5) :time (a / after :op1 (f / finish-01 :arg0 (p4 / person) :arg1 (p5 / play-01 :arg0 (p6 / person) :arg1 (p7 / play-01 :arg0 (p8 / person) :arg1 (a2 / and :op1 (c2 / career :poss (p9 / person)) :op2 (h2 / harmonica :arg1 (p10 / person))) :arg2 (c3 / crowd :mod (s3 / sparse)))))) :time (d2 / date-entity :month 9 :day 5)))
(m / multi-sentence :snt1 (c / cause-01 :arg0 (a / amr-unknown)) :snt2 (w / want-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg3 (j / judge-01))) :arg1 (k / know-01 :arg0 (p2 / person))))
(m / multi-sentence :snt1 (s / say-01 :arg0 (p / person :name (n / name :op1 "Geoff")) :arg2 (i / i)) :snt2 (g / glad-02 :arg0 (b / beat-03 :arg0 (s2 / someone) :arg1 (p2 / person :name (n2 / name :op1 "Isaac"))) :arg1 (i2 / i)))
(p / person :arg0-of (h / have-org-role-91 :arg1 (c / country :name (n / name :op1 "Slovenia")) :arg2 (m / member)) :domain (c2 / country :arg0-of (h2 / have-org-role-91 :arg1 (o / organization :name (n2 / name :op1 "EU")) :arg2 (m2 / member))) :time (s / since :op1 (p2 / present-01 :arg0 (c3 / country :arg0-of (p3 / partner-01 :arg1 (c4 / country))) :arg1 (r / report :mod (g / good) :mod (c5 / consistent)) :arg2 (c6 / country) :arg1-of (c7 / cause-01 :arg0 (c8 / control-01 :arg1 (b / border))))))
(w / want-01 :arg0 (n / no-one) :arg1 (t / talk-01 :arg0 (n2 / no-one) :arg1 (g / goal :mod (t2 / this))))
(w / want-01 :arg0 (n / no-one) :arg1 (t / talk-01 :arg0 (n2 / no-one) :arg1 (g / goal :mod (t2 / this))))
(m / multi-sentence :snt1 (a / amused :polarity - :arg1 (t / transport-01 :arg2 (c / city :name (n / name :op1 "London")) :mod (t2 / this))) :snt2 (' / '' :mode (e / expressive)))
(a / and :op1 (o / obligate-01 :arg2 (t / talk-01 :time (c / come-01 :arg1 (a2 / and :op1 (c2 / city :name (n / name :op1 "Brussels")) :op2 (c3 / country :mod (o2 / other)))))) :op2 (s / say-01 :arg0 (p / person :name (n2 / name :op1 "Ivica" :op2 "Dacic")) :arg1 (m / message-01 :arg0 (p2 / person))))
(a / and :op1 (f / form-01 :arg0 (a2 / and :op1 (p / person :name (n / name :op1 "Bill" :op2 "Hewlett") :arg0-of (h / have-org-role-91 :arg1 (o / organization) :arg3 (a3 / apprentice-01 :arg0 (p2 / person)))) :op2 (p3 / person :name (n2 / name :op1 "Dave" :op2 "Packard") :arg0-of (h2 / have-org-role-91 :arg1 (o2 / organization) :arg3 (l / lead-02 :arg0 (p4 / person) :arg1 (p5 / person :name (n3 / name :op1 "Dave" :op2 "Packard")))))) :arg1 (c / company) :arg1-of (f2 / form-01 :arg0 (a4 / and :op1 (p6 / person :arg0-of (h3 / have-org-role-91 :arg1 (o3 / organization) :arg3 (a5 / apprentice-01 :arg0 (p7 / person)))) :op2 (p8 / person :name (n4 / name :op1 "Dave" :op2 "Packard") :arg0-of (m / make-01 :arg1 (e / equipment :mod (e2 / electric))))))) :op2 (d / dubbed :arg1 (b / birthplace :mod (l2 / location :name (n5 / name :op1 "Silicon" :op2 "Valley"))) :arg2 (l3 / location :name (n6 / name :op1 "Silicon" :op2 "Valley"))))
(s / say-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (p2 / police :mod (f / federal)) :arg2 (s2 / spokesperson))) :arg1 (h2 / have-org-role-91 :arg0 (p3 / person) :arg1 (p4 / police :mod (f2 / federal)) :arg2 (s3 / spokesperson)))
(h / have-concession-91 :arg1 (e / extent :degree-of (h2 / hide-01 :arg1 (t / thing :arg1-of (h3 / hide-01)))))
(p / possible-01 :arg1 (a / answer-01 :arg0 (l / lamb :arg1-of (q / question-01) :mod (t / that))) :time (n / no-longer))
(r / react-01 :arg0 (c / country :mod (o / other)) :arg1 (a / attack-01 :arg1 (a2 / and :op1 (o2 / organization :name (n / name :op1 "ISIS")) :op2 (c2 / country :name (n2 / name :op1 "Syria")) :location (a3 / and :op1 (c3 / country) :op2 (c4 / country :name (n3 / name :op1 "Syria")))) :mod (a4 / air)) :arg2 (p / percentage-entity :value (N / N-A)) :manner (p2 / positive))
(a / and :op1 (l / lose-02 :arg0 (p / person :arg0-of (c / control-01 :arg1 (c2 / car :mod (s / sports)))) :arg1 (s2 / skid :arg1 (c3 / car))) :op2 (d / drive-01 :arg0 (p2 / person) :destination (b / barrier :location-of (c4 / crash-01))))
(l / likely-01 :arg1 (p / play-01 :arg0 (h / he) :arg1 (g / game :ord (o / ordinal-entity :value 2)) :mod (a / also)) :degree (h2 / high))
(s / suggest-01 :arg0 (p / person :name (n / name :op1 "Van" :op2 "Gaal")) :arg1 (h / have-03 :arg0 (p2 / person :arg0-of (h2 / have-org-role-91 :arg1 (c / country :name (n2 / name :op1 "N-A")) :arg2 (o / official))) :arg1 (e / erred)))
(e / enable-01 :arg0 (a / activity-06 :mod (m / mold) :mod (t / this)) :arg1 (c / compete-02 :arg0 (a2 / activity-06) :degree (m2 / more)) :arg2 (a3 / and :op1 (c2 / compete-02 :arg0 (a4 / and :op1 (p / person :name (n / name :op1 "Meg" :op2 "Whitman") :arg0-of (h / have-org-role-91 :arg1 (o / organization) :arg2 (c3 / chairman))) :op2 (p2 / person :arg0-of (h2 / have-org-role-91 :arg1 (o2 / organization) :arg2 (e2 / executive))) :op3 (p3 / person :arg0-of (h3 / have-org-role-91 :arg1 (o3 / organization) :arg2 (e3 / executive))) :op4 (p4 / person :arg0-of (h4 / have-org-role-91 :arg1 (o4 / organization) :arg2 (e4 / executive)) :arg0-of (h5 / have-org-role-91 :arg1 (u / unit) :arg2 (e5 / executive)) :arg0-of (h6 / have-org-role-91 :arg1 (u2 / unit) :arg2 (e6 / executive)) :arg0-of (h7 / have-org-role-91 :arg1 (u3 / unit) :arg2 (e7 / executive)) :arg0-of (h8 / have-org-role-91 :arg1 (u4 / unit) :arg2 (e8 / executive)) :arg0-of (h9 / have-org-role-91 :arg1 (u5 / unit) :arg2 (e9 / executive)) :arg0-of (h10 / have-org-role-91 :arg1 (u6 / unit) :arg2 (e10 / executive)) :arg0-of (h11 / have-org-role-91 :arg1 (u7 / unit) :arg2 (e11 / executive)) :arg0-of (h12 / have-org-role-91 :arg1 (u8 / unit) :arg2 (e12 / executive)))))))
(t / take-01 :arg1 (p / person :arg0-of (d / drive-01)) :arg3 (h / hospital) :manner (i / injure-01 :mod (s / serious)))
(c / cost-01 :arg2 16,990 :arg1 (o / organization :name (n / name :op1 "Astra") :time (l / late :degree (m / most))))
(k / know-01 :polarity - :arg0 (y / you) :arg1 (d / differ-02 :arg1 (f / friendship :poss (y2 / you)) :arg2 (a / amr-unknown)) :time (e / ever))
(m / mean-01 :arg0 (i / i) :arg2 (a / amaze-01 :arg0 (t / think-01 :arg0 (i2 / i) :arg1 (t2 / think-01 :arg0 (i3 / i) :arg1 (o / or :op1 (m2 / make-01 :polarity - :arg0 (i4 / i) :arg1 (r / rate-entity-91 :arg1 (m3 / more-than :op1 (m4 / monetary-quantity :quant 10000 :unit (d / dollar))) :arg2 (t3 / temporal-quantity :quant (N / N-A) :unit (y / year)))) :op2 (l / live-01 :arg0 (i5 / i) :time (e / ever :polarity -))) :op3 (t4 / tell-01 :arg0 (p / person :name (n / name :op1 "Isaac")) :arg1 (p2 / pay-bump :arg0 (p3 / person) :mod (s / serious)) :arg2 (p4 / person))))))
(p / possible-01 :arg1 (s / see-01 :arg0 (p2 / person :arg0-of (h / have-org-role-91 :arg2 (p3 / person :arg1-of (e / expert-01)))) :arg1 (t / thing :arg1-of (g / gain-02) :arg1-of (h2 / high-02 :degree (m / more))) :manner (t2 / thing :arg1-of (f / flaw-01 :arg1-of (p4 / possible-01 :polarity -))) :arg1-of (c / cause-01 :arg0 (t3 / thing :manner-of (t4 / take-01 :arg0 (p5 / person) :arg1 (h3 / hold-01) :arg1-of (q / quick-02))))))
(s / solve-01 :arg1 (h / house :mod (t / terraced) :mod (t2 / three-storey)) :degree (t3 / total))
(s / solve-01 :arg1 (h / house :mod (t / terraced) :mod (t2 / three-storey)) :degree (t3 / total))
(w / want-01 :arg0 (c / country :name (n / name :op1 "Croatia")) :arg1 (l / let-01 :arg0 (c2 / country) :arg1 (p / pass-03 :arg1 (r / refugee))))
(c / contrast-01 :arg2 (c2 / contrary-01 :arg1 (w / wound-01) :arg2 (f / fear-01 :mod (i / initial))))
(c / contrast-01 :arg1 (a / album :mod (a2 / album :ord (o / ordinal-entity :value 3) :poss (h / he)) :source (l / location :name (n / name :op1 "Michigan"))) :arg2 (g / greetings :arg0 (a3 / and :op1 (p / person :arg0-of (h2 / have-org-role-91 :arg1 (l2 / location :name (n2 / name :op1 "Michigan")) :arg2 (' / ''))) :op2 (p2 / person :arg0-of (h3 / have-org-role-91 :arg1 (l3 / location :name (n3 / name :op1 "Michigan")) :arg2 ('2 / ''))) :op3 (p3 / person :arg0-of (h4 / have-rel-role-91 :arg1 (h5 / he) :arg2 (s / songs))) :op4 (p4 / person :arg0-of (h6 / have-rel-role-91 :arg1 (h7 / he) :arg2 (s2 / songs))) :op5 (p5 / person :arg0-of (h8 / have-rel-role-91 :arg1 (h9 / he) :arg2 (s3 / songs))) :op6 (p6 / person :arg0-of (h10 / have-rel-role-91 :arg1 (h11 / he) :arg2 (s4 / songs))) :op6 (p7 / person :arg0-of (h12 / have-rel-role-91 :arg1 (h13 / he) :arg2 (s5 / songs))) :op6 (p8 / person :arg0-of (h14 / have-rel-role-91 :arg1 (h15 / he) :arg2 (s6 / songs))) :op6 (p9 / person :arg0-of (h16 / have-rel-role-91 :arg1 (h17 / he) :arg2 (s7 / songs))) :op6 (p10 / person :arg0-of (h18 / have-rel-role-91 :arg1 (h19 / he) :arg2 (s8 / songs))) :op6 (p11 / person :arg0-of (h20 / have-rel-role-91 :arg1 (h21 / he) :arg2 (s9 / songs))) :op6 (p12 / person :arg0-of (h22 / have-rel-role-91 :arg1 (h23 / he) :arg2 (s10 / songs))) :op6 (p13 / person :arg0-of (h24 / have-rel-role-91 :arg1 (h25 / he) :arg2 (s11 / songs))) :op6 (p14 / person :arg0-of (h26 / have-rel-role-91 :arg1 (h27 / he) :arg2 (s12 / songs))) :op7 (p15 / person :arg0-of (h28 / have-rel-role-91 :arg1 (h29 / he) :arg2 (s13 / songs))))))
(r / resemble-01 :arg2 (p / person :name (n / name :op1 "Wiktoria" :op2 "Rudzinska")))
(a / admit-01 :arg0 (p / person :name (n / name :op1 "Derek" :op2 "McInnes")) :arg1 (o / obligate-01 :arg1 (s / side :poss (h / he) :mod (o2 / organization :name (n2 / name :op1 "Aberdeen"))) :arg2 (c / cling :arg0 (s2 / side) :arg1 (p2 / person :name (n3 / name :op1 "Hamilton" :op2 "Accies")) :arg2 (s3 / see-01 :arg0 (p3 / person) :arg1 (a2 / and :op1 (w / win-01 :arg0 (l / league :ord (o3 / ordinal-entity :value 7)) :arg2 (p4 / point :quant 5 :arg1-of (i / include-91 :arg2 (o4 / organization :name (n4 / name :op1 "Celtic") :part-of (o5 / organization :name (n5 / name :op1 "Celtic")))))) :op2 (p5 / penalize-01 :arg0 (p6 / person :name (n6 / name :op1 "Adam" :op2 "Rooney")) :manner (f / first-half)))))))
(c / close-01 :arg0 (c2 / country :name (n / name :op1 "Hungary")) :arg1 (b / border-01 :arg1 (c3 / country) :arg2 (c4 / country :name (n2 / name :op1 "Serbia")) :arg1-of (l / long-03)) :time (n3 / night :mod (m / monday)))
(h / have-concession-91 :arg1 (s / stress-01 :arg0 (p / person) :arg1 (s2 / solve-01 :arg1 (i / it) :duration (t / temporary) :mod (o / only))) :arg2 (p2 / praise-01 :arg0 (p3 / person :name (n / name :op1 "Dalai" :op2 "Lama")) :arg1 (t2 / try-01 :arg0 (c / country :name (n2 / name :op1 "Germany")) :arg1 (d / deal-01 :arg0 (c2 / country) :arg2 (c3 / crisis)))))
(c / contrast-01 :arg1 (r / recommend-01 :arg1 (f / fool-01 :polarity - :arg0 (y / you) :arg1 (p / person :mod (l / legends)))) :arg2 (s / suppose-01 :arg1 (m / make-02 :arg0 (a / amusement-park :name (n / name :op1 "Disney")) :arg1 (f2 / film :mod (n2 / new) :poss (p2 / person :name (n3 / name :op1 "Mary" :op2 "Poppins") :arg0-of (h / have-org-role-91 :arg2 (' / ''))) :mod (a2 / anyway)))))
(c / cause-01 :arg0 (p / predict-01 :arg1 (t / thing :arg2-of (r / result-01 :mod (r2 / record)) :arg1-of (p2 / predict-01 :arg1-of (p3 / possible-01 :polarity -)))) :arg1 (w / want-01 :arg1 (c2 / come-up-11 :arg1 (t2 / thing :arg2-of (s / solve-01 :mod (r3 / record)))) :arg1-of (q / quick-02 :degree (m / most) :compared-to (p4 / possible-01 :arg1 (c3 / come-up-11)))))
(w / want-01 :arg0 (h / he) :arg1 (d / debate-01 :arg0 (h2 / he) :arg1 (s / subject :poss (s2 / situation :mod (r / refugee) :location (c / country :name (n / name :op1 "Germany")))) :time (m / meet-03 :arg0 (p / person :name (n2 / name :op1 "Angela" :op2 "Merkel") :arg0-of (h3 / have-org-role-91 :arg2 (c2 / chancellor))) :arg1 (p2 / person :name (n3 / name :op1 "Angela" :op2 "Merkel") :arg0-of (h4 / have-org-role-91 :arg2 (c3 / chancellor))) :time (d2 / date-entity :month 9 :day 23) :location (c4 / city :name (n4 / name :op1 "Berlin")))))
(s / say-01 :arg0 (e / experience-01 :arg0 (p / person :name (n / name :op1 "Josefine" :op2 "Lammer"))) :arg1 (c / contrast-01 :arg1 (s2 / steep :mod (s3 / still) :domain (t / topic :mod (l / life)) :mod (s4 / still)) :arg2 (d / do-02 :arg0 (m / movement-07 :arg0 (h / hospice)) :arg1 (m2 / much :degree (m3 / much)) :purpose (h2 / help-01 :arg0 (p2 / person) :arg1 (a / accept-01 :arg0 (p3 / person) :arg1 (i / it))))))
(r / remain-01 :arg1 (c / constable :poss (o / organization :name (n / name :op1 "Canning" :op2 "Vale"))) :arg3 (d / dry-08 :arg1 (o2 / organization)) :arg1-of (c2 / cause-01 :arg0 (c3 / coaxed :arg0 (h / he) :arg1 (m / man) :arg2 (l / location :name (n2 / name :op1 "Canning" :op2 "River")))))
(h / have-03 :arg0 (b / board :mod (o / organization :name (n / name :op1 "Tannadice"))) :arg1 (f / faith :topic (m / manage-01 :arg1 (o2 / organization :name (n2 / name :op1 "Dundee" :op2 "United")))))
(p / play-01 :quant (m / multiple) :mod (i / indeed) :mod (i2 / indeed))
(s / say-01 :arg2 (p / person :name (n / name :op1 "de" :op2 "Boer")))
(a / and :op1 (w / work-01 :arg0 (p / person :name (n / name :op1 "Otmar" :op2 "Alt")) :arg2 (p2 / project :mod (b / bible :poss (p3 / person))) :duration (a2 / around :op1 (t / temporal-quantity :quant (N / N-A) :unit (y / year)))) :op2 (m / make-01 :arg0 (p4 / person) :arg1 (t2 / thing :arg1-of (c / choose-01 :arg0 (p5 / person))) :arg3 (p6 / perspective :mod (c2 / credible)) :arg3 (p7 / perspective :mod (c3 / credible)) :location (a3 / area :name (n2 / name :op1 (' / '') :op2 ('2 / '') :op3 (b2 / book) :op4 (b3 / book) :op5 (b4 / book) :op6 (b5 / book) :op7 (b6 / book)))))
(s / say-01 :arg0 (t / thing :arg1-of (d / decide-01)) :arg1 (a / and :op1 (c / cell :prep-with (n / negotiators :quant (m / multiple))) :op2 (c2 / cell :quant (m2 / multiple)) :manner (h / humane :polarity -) :mod (a2 / also)))
(c / contrast-01 :arg1 (s / see-01 :arg0 (p / person :quant (m / many)) :arg1 (p2 / person :name (n / name :op1 "Sanders")) :manner (h / honest)) :arg2 (h2 / have-03 :polarity - :arg0 (p3 / person :quant (m2 / many)) :arg1 (o / opine-01 :arg0 (p4 / person))))
(p / possible-01 :arg1 (r / reveal-01 :arg0 (a / and :op1 (p2 / person :name (n / name :op1 "Lana" :op2 "Jeavons-Fellows")) :op2 (p3 / person :name (n2 / name :op1 "Sarah" :op2 "Mackay")) :op3 (p4 / person :name (n3 / name :op1 "Snezana" :op2 "Markoski"))) :arg1 (p5 / person :arg0-of (w / win-01 :arg1 (b / bachelor)))))
(o / opine-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (o2 / organization :name (n / name :op1 "Doctors" :op2 "'" :op3 "Association") :part-of (o3 / organization :name (n2 / name :op1 "Doctors" :op2 "'" :op3 "Association"))) :arg2 (p2 / president))) :arg1 (p3 / position-01 :arg1 (c / country) :arg2 (p4 / provide-01 :arg0 (c2 / country) :arg1 (c3 / care :mod (m / medicine) :beneficiary (r / refugee)) :arg2 (r2 / refugee) :arg1-of (g / general-02) :time (n3 / now))))
(l / let-01 :polarity - :arg0 (w / wo :mod (o / organization :name (n / name :op1 "Apple"))) :arg1 (u / update-01) :condition (l2 / low-04 :arg1 (c / charge-01) :degree (t / too)) :arg1-of (c2 / cause-01 :arg0 (p / possible-01 :arg1 (l3 / lead-03 :arg0 (d / die-01 :mod (p2 / phone)) :arg2 (b / break :arg1-of (u2 / update-01))))))
(a / and :op2 (w / watch-01 :arg0 (i / i) :arg1 (d / die-01 :arg1 (h / he))))
(a / and :op1 (s / sure-02 :arg0 (i / i) :arg1 (p / play-02 :arg0 (t / topic) :arg1 (r / role :mod (c / central) :location (t2 / there)))) :op2 (a2 / announce-01 :arg0 (h / he)))
(s / say-01 :arg0 (r / report-01 :arg0 (p / police :mod (f / federal))) :arg1 (a / arrive-01 :arg1 (r2 / refugee :quant (m / more :arg1-of (s2 / significant-02))) :arg4 (s3 / station :mod (r3 / railway) :mod (m2 / main) :location (c / city :name (n / name :op1 "Munich"))) :time (f2 / from :op1 (b / begin-01 :arg1 (w / week)))))
(s / say-01 :arg0 (s2 / state-01))
(a / and :op1 (o / obligate-01 :arg1 (w / we) :arg2 (t / think-01 :arg0 (w2 / we) :arg1 (i / it) :mod (o2 / of-course))) :op2 (t2 / tell-01 :arg0 (p / person :name (n / name :op1 "Necat" :op2 "Aygün") :arg0-of (h / have-org-role-91 :arg2 (d / director :mod (s / sports :mod (' / ''))))) :arg1 (n2 / newspaper :arg0-of (f / favor-01 :arg1 (c / country-region))) :arg2 (e / engage-01 :arg1 (p2 / professional :mod (p3 / professional)) :arg2 (c2 / club) :arg1-of (p4 / possible-01))))
(q / question-03 :arg0 (p / person :quant 2 :arg0-of (r / research-01) :mod (f / further)) :arg1 (b / build-01 :mode (i / interrogative) :arg1 (c / claim-01) :location (o / or :op1 (r2 / rock) :op2 (s / sand))))
(a / and :op1 (e / express-01 :arg0 (i / i) :arg1 (c / condolence :poss (i2 / i) :topic (l / letter :beneficiary (p / person :name (n / name :op1 "Bush") :arg0-of (h / have-org-role-91 :arg2 (p2 / president)))))) :op2 (t / tell-01 :arg0 (i3 / i) :arg1 (w / way :manner-of (s / solve-01 :arg1 (p3 / problem :mod (t2 / this)))) :arg2 (h2 / he)) :arg2 (h3 / he) :time (a2 / after :op1 (m / multiple :op1 9-11)))
(s / say-01 :arg0 (s2 / she) :arg1 (c / cause-01 :arg0 (a / and :op1 (s3 / say-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (g / group :arg1-of (l / low-04 :degree (m / more)) :mod (t / that)))) :arg1 (s4 / safe-01 :arg1 (s5 / surgery-01 :mod (t2 / this)))) :op2 (i / increase-01 :polarity - :arg1 (r / risk-01 :arg2 (o / or :op1 (d / die-01) :op2 (d2 / disease :mod (r2 / renal)))) :arg1-of (i2 / increase-01)))) :arg1 (' / '' :domain (t3 / this)))
(i / include-91 :arg1 (t / thing :arg1-of (r / rate-01 :arg2 (t2 / thing :arg1-of (r2 / rate-01 :arg2 (t3 / thing :arg1-of (r3 / rate-01 :arg2 (s / system :arg0-of (w / warn-01 :arg1 (s2 / system :arg0-of (w2 / warn-01 :arg1 (s3 / system :mod (h / health) :poss (o / organization :name (n / name :op1 "EU"))))))) :arg1-of (f / frequent-02 :degree (m / most)))))))) :arg2 (t4 / thing :arg1-of (r4 / rate-01 :arg2 (f2 / fish))) :time (y / year :mod (p / past)))
(t / temporal-quantity :quant (N / N-A) :unit (w / week))
(c / comment-01 :arg0 (h / he) :arg3 (s / show-01 :arg0 (a / and :op1 (p / person :arg0-of (h2 / have-org-role-91 :arg1 (c2 / company :name (n / name :op1 "BBC")) :arg2 (e / executive :mod (s2 / sky)) :time (f / former))) :op2 (p2 / person :name (n2 / name :op1 "Tony" :op2 "Ball") :arg0-of (h3 / have-org-role-91 :arg1 (c3 / company) :arg2 (e2 / executive) :time (f2 / former))) :op3 (p3 / person :arg0-of (h4 / have-org-role-91 :arg1 (c4 / company) :arg2 (e3 / executive) :time (f3 / former))) :op4 (p4 / person :arg0-of (h5 / have-org-role-91 :arg1 (c5 / company) :arg2 (e4 / executive))) :op5 (p5 / person :arg0-of (h6 / have-org-role-91 :arg1 (c6 / company) :arg2 (e5 / executive))) :op6 (p6 / person :arg0-of (h7 / have-org-role-91 :arg1 (c7 / company) :arg2 (e6 / executive))) :op6 (p7 / person :arg0-of (h8 / have-org-role-91 :arg1 (c8 / company) :arg2 (e7 / executive))) :op6 (p8 / person :arg0-of (h9 / have-org-role-91 :arg1 (c9 / company) :arg2 (e8 / executive))) :op6 (p9 / person :arg0-of (h10 / have-org-role-91 :arg1 (c10 / company) :arg2 (e9 / executive))) :op7 (p10 / person :arg0-of (h11 / have-org-role-91 :arg1 (c11 / company) :arg2 (e10 / executive))))) :arg1 (s3 / show-01 :arg0 (p11 / person) :arg1 (s4 / show-01 :arg0 (c12 / company) :arg1 (s5 / show-up-02 :arg1 (c13 / company)))))
(a / act-02 :arg0 (h / he) :time (a2 / after :op1 (m / murder-01 :arg0 (p / person :name (n / name :op1 "Barry" :op2 "Van" :op3 "Treese")))) :time (a3 / after :op1 (m2 / murder-01 :arg1 (p2 / person))) :time (a4 / after :op1 (f / fact)))
(l / like-01 :arg0 (i / i) :arg1 (g / guy))
(l / like-01 :arg0 (i / i) :arg1 (g / guy))
(a / and :op1 (b / begins :location (a2 / a.m. :quant 11)) :op2 (p / p.m. :quant 4 :location (s / sunday)))
(a / and :op1 (p / possible-01 :arg1 (l / look-01 :arg0 (p2 / person) :arg1 (s / stats :mod (r / raw) :poss (p3 / person)))) :op2 (t / think-01 :arg0 (p4 / person) :arg1 (p5 / punt :arg1 (a2 / and :op1 (p6 / put-01 :arg1 (h / hand :part-of (p7 / person)) :arg2 (h2 / hand :part-of (p8 / person))) :op2 (h3 / have-03 :arg0 (p9 / person) :arg1 (h4 / hand :part-of (p10 / person)) :beneficiary (y / youth))))))
(f / fan :polarity -)
(a / and :op1 (h / have-03 :arg0 (p / person :arg0-of (h2 / have-org-role-91 :arg2 (c / chancellor))) :arg1 (s / stand-11 :arg0 (g / government-organization :arg0-of (g2 / govern-01 :arg1 (c2 / country :name (n / name :op1 "N-A")))) :arg1 (s2 / stand-11 :arg0 (g3 / government-organization :arg0-of (g4 / govern-01 :arg1 (c3 / country :name (n2 / name :op1 "N-A")))) :arg1 (d / destabilize-01 :arg0 (g5 / government-organization) :arg1 (s3 / socialism :mod (n3 / nation)))) :manner (p2 / public-02))) :op2 (m / move-01 :arg0 (p3 / person :arg0-of (h3 / have-org-role-91 :arg2 (c4 / chancellor))) :arg1 (s4 / stand-11 :arg0 (g6 / government-organization :arg0-of (g7 / govern-01 :arg1 (c5 / country-region))) :degree (m2 / more)) :arg2 (s5 / spirit :mod (s6 / socialism :mod (n4 / nation)))) :arg1-of (i / instead-of-91))
(a / and :op2 (a2 / agree-01 :arg1 (b / buy-01 :arg0 (p / person :mod (c / country :name (n / name :op1 "N-A"))) :arg1 (h / house) :prep-with (p2 / practice))))
(c / coexist-01 :arg1 (t / this) :mod (p / particular))
(s / say-01 :arg0 (p / person :name (n / name :op1 "Roger" :op2 "Diederen") :arg0-of (h / have-org-role-91 :arg1 (l / location :name (n2 / name :op1 "Kunsthalle")) :arg2 (d / director))) :arg1 (p2 / person :name (n3 / name :op1 "Roger" :op2 "Diederen") :arg0-of (h2 / have-org-role-91 :arg1 (l2 / location :name (n4 / name :op1 "Kunsthalle")) :arg2 (d2 / director))) :topic (i / it))
(s / say-01 :arg0 (p / person :name (n / name :op1 "Roger" :op2 "Diederen") :arg0-of (h / have-org-role-91 :arg1 (l / location :name (n2 / name :op1 "Kunsthalle")) :arg2 (d / director))) :arg1 (p2 / person :name (n3 / name :op1 "Roger" :op2 "Diederen") :arg0-of (h2 / have-org-role-91 :arg1 (l2 / location :name (n4 / name :op1 "Kunsthalle")) :arg2 (d2 / director))) :topic (i / it))
(a / and :op1 (c / cut-01 :arg1 (w / we)) :op2 (t / throw-01 :arg0 (w2 / we) :arg1 (o / one-liners) :arg2 (o2 / other :mod (e / each))))
(c / cause-01 :arg0 (h / have-03 :arg0 (p / person :mod (c2 / continent :name (n / name :op1 "N-A"))) :arg1 (p2 / person :mod (c3 / continent :name (n2 / name :op1 "N-A")) :arg0-of (h2 / have-org-role-91 :arg1 (c4 / continent :name (n3 / name :op1 "N-A") :mod (i / individual))))) :arg1 (' / '' :polarity - :time (n4 / no-longer)))
(l / listen-01 :mode (i / imperative) :polite (+ / +) :arg0 (y / you) :arg1 (s / series :quant (s2 / series) :arg1-of (m / make-18 :arg0 (i2 / i))) :condition (w / want-01 :arg0 (y2 / you) :arg1 (k / know-01 :arg0 (y3 / you) :arg1 (m2 / more :topic (c / case-03)))))
(l / launch-01 :arg1 (b / baleno) :location (c / continent :name (n / name :op1 "Europe")) :time (e / early))
(m / mural :arg0 (c / country :name (n / name :op1 "United" :op2 "States")) :arg1 (c2 / country :name (n2 / name :op1 "United" :op2 "States")) :time (e / end-01 :arg1 (o / ornate :quant 1 :poss (b / bank :mod (c3 / central) :part-of (b2 / bank)))))
(m / mural :arg0 (c / country :name (n / name :op1 "United" :op2 "States")) :arg1 (c2 / country :name (n2 / name :op1 "United" :op2 "States")) :time (e / end-01 :arg1 (o / ornate :quant 1 :poss (b / bank :mod (c3 / central) :part-of (b2 / bank)))))
(s / say-01 :arg0 (t / thing :arg1-of (e / estimate-01 :arg0 (o / organization :name (n / name :op1 "Institute" :op2 "for" :op3 "Employment" :op4 "Research")))) :arg1 (r / recommend-01 :arg1 (p / possible-01 :arg1 (w / work-01 :arg0 (r2 / refugee :arg1-of (i / include-91 :arg2 (r3 / refugee :location (c / country :name (n2 / name :op1 "Germany"))) :arg3 (p2 / percentage-entity :value (N / N-A) :arg1-of (l / long-03))))))))
(f / focus-01 :arg1 (f2 / focus-01) :arg2 (s / shop :mod (n / new)))
(m / multi-sentence :snt1 (l / list-01 :arg0 (o / organization :name (n / name :op1 "S&T") :arg1-of (l2 / list-01 :arg2 (a / and :op1 (o2 / office) :op2 (b / building :arg0-of (m2 / manufacture-01))) :quant (m3 / multiple :op1 4))) :arg1 (m4 / move-01 :arg1 (o3 / organization) :arg2 (f / floors :quant 6 :arg1-of (i / include-91 :arg2 (a2 / and :op1 (o4 / office) :op2 (m5 / manufacture-01)))))) :snt2 (p / plan-01 :arg1 (r / rented :arg1 (- / -rrb- :mod (r2 / rest)) :arg2 (b2 / business :mod (y / young) :location (s / sector :mod (t / technology))))))
(m / multi-sentence :snt1 (l / list-01 :arg0 (o / organization :name (n / name :op1 "S&T") :arg1-of (l2 / list-01 :arg2 (a / and :op1 (o2 / office) :op2 (b / building :arg0-of (m2 / manufacture-01))) :quant (m3 / multiple :op1 4))) :arg1 (m4 / move-01 :arg1 (o3 / organization) :arg2 (f / floors :quant 6 :arg1-of (i / include-91 :arg2 (a2 / and :op1 (o4 / office) :op2 (m5 / manufacture-01)))))) :snt2 (p / plan-01 :arg1 (r / rented :arg1 (- / -rrb- :mod (r2 / rest)) :arg2 (b2 / business :mod (y / young) :location (s / sector :mod (t / technology))))))
(s / say-01 :arg0 (p / person :name (n / name :op1 "Sylvia" :op2 "Müller-Gongoll")) :arg1 (v / visit-01 :arg0 (p2 / person :quant (s2 / some :op1 2000) :arg0-of (h / have-rel-role-91 :arg2 (p3 / patient))) :arg1 (p4 / practice :arg1-of (i / include-91 :arg2 (p5 / person :arg1-of (r / rank-01 :arg3 (p6 / percentage-entity :value (N / N-A)))))) :location (n2 / north :part-of (c / country :name (n3 / name :op1 "Germany"))) :arg1-of (c2 / cause-01 :arg0 (s3 / see-01 :arg0 (p7 / practice :arg1-of (a / average-03)) :arg1 (a2 / about :op1 500)))))
(a / appreciate-02 :arg1 (t / they) :degree (v / very))
(b / believe-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg2 (p2 / person :arg1-of (e / expert-01)))) :arg1 (p3 / possible-01 :arg1 (h2 / hold-01 :arg0 (p4 / person :arg0-of (h3 / have-org-role-91 :arg2 (p5 / person :arg1-of (e2 / expert-01)))) :arg1 (s / spend-01 :arg0 (p6 / person) :arg1-of (b2 / black-07)) :direction (b3 / back))))
(c / claim-01 :arg0 (l / liability :poss (h / he)) :arg1 (o / oppose-01 :arg0 (s / state :location (c2 / city :name (n / name :op1 "Berlin"))) :arg1 (s2 / state :location (c3 / city)) :manner (r / reason :arg0-of (c4 / cause-01 :arg1 (c5 / condition :mod (p / prison) :arg1-of (s3 / suitable-04 :polarity -))))))
(c / claim-01 :arg0 (l / liability :poss (h / he)) :arg1 (o / oppose-01 :arg0 (s / state :location (c2 / city :name (n / name :op1 "Berlin"))) :arg1 (s2 / state :location (c3 / city)) :manner (r / reason :arg0-of (c4 / cause-01 :arg1 (c5 / condition :mod (p / prison) :arg1-of (s3 / suitable-04 :polarity -))))))
(a / advertise-01 :arg0 (t / this) :arg1 (n / nose :part-of (v / victim)) :manner (h / heavy) :manner (h2 / heavy))
(e / exemplify-01 :arg0 (d / dispute-01 :arg0 (a / and :op1 (c / company) :op2 (c2 / country :mod (o / organization :name (n / name :op1 "EU"))))) :arg1 (p / possible-01 :arg1 (r / rectify-01 :arg1 (d2 / dispute-01 :arg0 (c3 / company :mod (c4 / country :name (n2 / name :op1 "N-A")))))) :prep-in (t / this))
(c / contrast-01 :arg1 (b / bail-out-02 :arg1 (p / person :name (n / name :op1 "Hogg")) :prep-in (c2 / case :mod (t / this))) :arg2 (h / hold-04 :arg1 (b2 / bail-out-02) :location (c3 / custody) :time (a / ahead :op1 (h2 / hearings :arg1 (c4 / case :mod (o / outstanding) :mod (o2 / other))))))
(g / get-01 :arg0 (h / he) :arg1 (g2 / gratification :mod (g3 / great)) :extent (m / much :degree (e / equal) :compared-to (c / change-01 :arg1 (m2 / money))))
(m / multi-sentence :snt1 (c / contrast-01 :arg1 (s / start-01 :polarity - :arg0 (i / i) :arg1 (h / have-03 :arg0 (i2 / i) :arg1 (l / like-01 :arg0 (i3 / i) :arg1 (i4 / i))) :arg1-of (o / obvious-01)) :arg2 (f / feel-01 :arg0 (i5 / i) :arg1 (c2 / comfortable-02 :arg1 (i6 / i) :degree (m2 / more)))) :snt2 (a / and :op1 (f2 / feel-01 :arg0 (i7 / i) :arg1 (c3 / comfortable-02 :arg1 (i8 / i) :degree (m3 / more) :compared-to (g / go-02 :arg0 (i9 / i) :arg4 (a2 / along)))) :op2 (f3 / feel-01 :arg0 (i10 / i) :arg1 (p / possible-01 :arg1 (e / execute-01 :arg0 (i11 / i) :arg1 (p2 / pitches :mod (g2 / good :degree (p3 / pretty)) :location (i12 / inning :ord (o2 / ordinal-entity :value 3))))))))
(s / say-01 :arg0 (p / person :name (n / name :op1 "LaForge")) :arg1 (t / try-01 :arg0 (w / we) :arg1 (g / get-04 :arg0 (w2 / we) :arg1 (c / come-01 :arg1 (p2 / person :arg0-of (s2 / study-01) :poss (w3 / we)) :arg4 (b / back)))))
(i / issue-02 :arg0 (a / and :op1 (t / thing :arg1-of (s / say-01 :arg0 (i2 / i))) :op2 (t2 / thing :arg1-of (w / write-01 :arg0 (i3 / i)))) :arg1 (p / person :name (n / name :op1 "Richard" :op2 "Glossip")))
(k / keep-04 :arg1 (p / prisoner) :arg2 (c / cell :arg1-of (r / resemble-01)) :time (c2 / case-03 :location (l / location :name (n / name :op1 "Karlsruhe"))) :duration (t / temporal-quantity :quant (N / N-A) :unit (d / day)))
(( / ( :( (n / name) :op1 "Marco" :op2 "Rubio")
(e / exemplify-01 :arg0 (e2 / exemplify-01 :arg0 (s / steered :arg0 (h / he) :arg1 (s2 / shoot-02 :source (l / location :name (n / name :op1 "Ideye"))) :time (a / after :op1 (n2 / now) :duration (t / temporal-quantity :quant (N / N-A) :unit (m / minute))))))
(b / bracing :arg1 (p / person :arg0-of (p2 / participate-01 :arg1 (m / market))) :arg2 (h / hike :mod (g / government-organization :name (n / name :op1 "Fed"))) :time (y / year :mod (a / all)) :arg1-of (c / cause-01 :arg0 (t / turn-02 :arg1 (e / eye :quant (a2 / all)) :arg2 (e2 / eye :part-of (o / organization :name (n2 / name :op1 "Federal" :op2 "Open" :op3 "Market" :op4 "Committee"))) :arg1-of (e3 / end-01 :time (w / week :mod (t2 / this))))))
(n / need-01 :arg1 (n2 / need-01 :polarity - :arg1 (n3 / need-01 :arg1 (c / comply-01 :arg0 (a / accommodation :arg0-of (p / provide-01 :arg1 (h / height :mod (c2 / certain)) :arg2 (o / or :op1 (r / rails :mod (t / towel)) :op2 (s / sizes :mod (s2 / skylights)))))))))
(t / tense :domain (s / situation :location (m / market :arg0-of (h / house-01) :mod (g / german))))
(d / directing :polarity - :arg1 (w / word :location (g / group :consist-of (p / person :arg1-of (e / excellent-02 :arg1-of (p2 / possible-01 :polarity - :degree (w2 / wide)))))) :manner (a / attend-01 :polarity - :arg1 (w3 / word)))
(a / and :op2 (r / reason :quant (m / many) :arg0-of (c / cause-01 :arg1 (s / struggle-01 :arg0 (h / he) :arg2 (e / elect-01 :arg1-of (g / general-02))))))
(a / and :op1 (p / pull-01 :arg0 (i / i) :arg1 (c / car :poss (l / lamb)) :arg2 (s / store :name (n / name :op1 (h / highways)) :arg1-of (n2 / near-02 :arg2 (r / relative-position :op1 (s2 / store :quant 1 :arg1-of (n3 / near-02 :arg2 (l2 / location :name (n4 / name :op1 "Greenville"))))))) :time (l3 / late :op1 (n5 / night :mod (t / that)) :degree (m / more))) :op2 (r2 / run-02 :arg0 (l4 / lamb) :destination (a2 / and :op1 (w / woods) :op2 (s3 / shoot-02))) :op3 (k / kill-01 :arg0 (l5 / lamb) :arg1 (p2 / person)))
(t / tell-01 :arg0 (p / person :name (n / name :op1 "Sreekanth" :op2 "Chalasani") :arg0-of (r / research-01) :location (o / organization :name (n2 / name :op1 "Salk" :op2 "Institute") :arg0-of (h / have-org-role-91 :arg1 (o2 / organization) :arg3 (r2 / research-01)))) :arg1 (p2 / possible-01 :arg1 (r3 / replace-01 :arg0 (p3 / procedure) :arg1 (p4 / pulses :mod (e / electricity)) :arg2 (b / brain :part-of (p5 / person)) :purpose (t2 / treat-03 :arg0 (p6 / person) :arg1 (s / symptom :poss (d / disease :mod (p7 / parkinson))))) :time (d2 / day :mod (o3 / one))) :arg2 (p8 / person :arg0-of (r4 / research-01) :location (b2 / brief-01 :arg1 (p9 / person))))
(p / present-01 :arg0 (p2 / person :name (n / name :op1 "Carrie") :arg0-of (h / have-org-role-91 :arg2 (t / theatre))) :arg1 (a / and :op1 (p3 / person :arg0-of (h2 / have-org-role-91 :arg2 (' / ''))) :op2 (p4 / person :arg0-of (h3 / have-org-role-91 :arg2 (l / lowell)))) :mod (p5 / primary) :time (s / since :op1 (w / war :name (n2 / name :op1 "N-A"))))
(p / present-01 :arg0 (p2 / person :name (n / name :op1 "Carrie") :arg0-of (h / have-org-role-91 :arg2 (t / theatre))) :arg1 (a / and :op1 (p3 / person :arg0-of (h2 / have-org-role-91 :arg2 (' / ''))) :op2 (p4 / person :arg0-of (h3 / have-org-role-91 :arg2 (l / lowell)))) :mod (p5 / primary) :time (s / since :op1 (w / war :name (n2 / name :op1 "N-A"))))
(i / issue-01 :arg0 (p / person :name (n / name :op1 "Circus" :op2 "Probst")) :arg1 (p2 / petition-01 :arg0 (p3 / person) :arg1 (r / ring :location (p4 / peninsula :name (n2 / name :op1 "N-A")))) :time (n3 / now))
(h / have-03 :polarity - :arg0 (p / person :arg0-of (v / vote-01 :arg1 (p2 / political-party :name (n / name :op1 "GOP")))) :arg1 (b / ball :mod (c / crystal) :mod (c2 / clearest)) :time (p3 / past) :time (p4 / past))
(p / probable :degree (m / more :mod (e / even)))
(w / want-01 :polarity - :arg0 (p / person :name (n / name :op1 "Tuchel")) :arg1 (c / change-01 :arg0 (p2 / person) :arg1 (c2 / choose-01 :arg0 (h / he) :ord (o / ordinal-entity :value 1)) :arg1-of (c3 / cause-01 :arg0 (p3 / position-02 :arg0 (p4 / peninsula :name (n2 / name :op1 "N-A"))))) :arg1-of (c4 / cause-01 :arg0 (b / burden-01 :arg1 (b2 / burden-01 :arg1 (p5 / professional :poss (h2 / he)) :mod (h3 / heavy)))))
(m / multi-sentence :snt1 (r / rate :mod (i / interest :mod (s / short-term)) :domain (r2 / rate :mod (i2 / interest :mod (s2 / short-term)))) :snt2 (i3 / increase-01 :arg1 (a / and :op1 (w / widened) :op2 (v / volatility)) :arg4 (t / thing :arg2-of (c / characteristic-02 :arg1 (m2 / market)) :mod (a2 / all)) :time (p / policy :mod (t2 / tightens) :mod (g / government-organization :name (n / name :op1 "Fed")))))
(i / indicate-01 :arg0 (s / study :mod (n / new) :mod (t / this)) :arg1 (l / location :mod (p / particular) :arg2-of (b / be-located-at-91 :arg1 (a / accommodation :mod (e / expensive :degree (m / most))))))
(a / and :op1 (i / impose-01 :arg0 (g / government-organization :arg0-of (g2 / govern-01)) :arg1 (p / person :arg0-of (d / drive-01)) :arg2 (p2 / person :arg0-of (d2 / drive-01))) :op2 (w / want-01 :arg0 (g3 / government-organization :arg0-of (g4 / govern-01)) :arg1 (e / examine-01 :arg0 (g5 / government-organization) :arg1 (a2 / and :op1 (e2 / examine-01 :arg0 (g6 / government-organization)) :op2 (l / location :location-of (n / need-01 :arg0 (g7 / government-organization) :arg1 (d3 / develop-01 :arg2 (d4 / develop-01 :arg2 (n2 / new)) :arg1-of (l2 / legal-02))))))))
(v / video :mod (f / fair) :mod (a / anti-arms) :poss (o / organization :name (n / name :op1 "Watch" :op2 "Amnesty" :op3 "International")))
(c / contrast-01 :arg1 (f / fact :domain (l / life :mod (e / economy))) :arg2 (h / help-01 :arg0 (r / rate :mod (r2 / rate)) :arg1 (t / they) :frequency (o / often)))
(h / have-03 :arg0 (c / country :name (n / name :op1 "Rome")) :arg1 (t / temporal-quantity :quant (N / N-A) :unit (y / year) :mod (s / some)) :time (a / after :op1 (r / reformation :arg0 (c2 / country))) :time (n2 / now))
(a / and :op1 (o / obligate-01 :arg2 (h / hold-02 :arg1 (a2 / account-01 :arg1 (a3 / and :op1 (p / person :arg0-of (h2 / have-org-role-91 :arg1 (t / they) :arg2 (m / member))) :op2 (p2 / person :arg0-of (h3 / have-org-role-91 :arg1 (t2 / they) :arg2 (m2 / member))))))) :op2 (i / important :domain (s / step :mod (t3 / this))) :li 1)
(s / step-01 :arg1 (o / organization :name (n / name :op1 "DFB")) :arg2 (c / commit-01 :arg0 (o2 / organization) :arg1 (r / refugee) :arg2 (r2 / refugee)))
(c / contrast-01 :arg2 (a / and :op1 (h / handle-01 :arg0 (h2 / he) :arg1 (h3 / he) :manner (w / well :degree (e / extreme)) :manner (c2 / circumstance :mod (p / provocative :degree (p2 / pretty)) :location (c3 / country :name (n / name :op1 "US")) :prep-with (p3 / person :name (n2 / name :op1 "Harrison")))) :op2 (t / think-01 :arg0 (i / i) :arg1 (d / deserve-01 :arg0 (h4 / he) :arg1 (c4 / credit :quant (l / lot))))))
(m / man :arg1-of (i / include-91 :arg2 (t / tall :mod (1 / 11in) :mod (5 / 5ft))) :domain (o / one))
(o / offer-01 :arg0 (o2 / office :mod (n / new) :mod (a / accommodation)) :arg1 (c / course :topic (a2 / and :op1 (p / prevent-01) :op2 (h / health) :op3 (w / wellness))) :mod (a3 / also) :arg2-of (a4 / advise-01))
(b / bad-07 :mode (i / interrogative) :arg1 (i2 / industry) :degree (t / that))
(e / employ-01 :arg1 (p / person :quant (a / around :op1 302,000) :arg2-of (s / staff-01)) :time (s2 / still) :time (e2 / end-01 :arg1 (y / year :mod (b / business))) :mod (s3 / still))
(c / criticize-01 :arg0 (p / person :arg1-of (e / expert-01)) :arg1 (o / organization :name (n / name :op1 "Public" :op2 "Health" :op3 "England")))
(b / blame-01 :arg0 (c / country :name (n / name :op1 "Saudi" :op2 "Arabia")) :arg1 (c2 / collapse-01 :arg1 (o / organization :name (n2 / name :op1 "Saudi" :op2 "Binladin" :op3 "Group") :mod (g / giant) :mod (c3 / construct-01))) :degree (p / part))
(s / say-01 :arg1 9 :arg2 (t / thing :manner-of (g / get-01 :arg1 (s2 / system :arg0-of (o / operate-01 :mod (n / new)) :mod (n2 / new)))))
FAILED_TO_PARSE#Two concepts in a row.
(r / rebounded :arg1 (m / market) :time (m2 / month :mod (t / this)) :prep-with (p / product-of :op1 (n / nearly :op1 10) :op2 (p2 / percentage-entity :value (N / N-A)) :arg1-of (h / high-02 :arg1-of (p3 / possible-01))) :time (m3 / month :mod (t2 / this)))
(a / account-01 :arg0 (a2 / and :op1 (p / person :name (n / name :op1 "Donald" :op2 "Trump")) :op2 (p2 / person :name (n2 / name :op1 "Ben" :op2 "Carson"))) :arg1 (s / support-01 :arg1 (p3 / person :arg0-of (v / vote-01 :arg1 (c / criminal-organization :name (n3 / name :op1 "N-A")))) :arg1-of (c2 / cause-01 :arg0 (s2 / status :mod (o / outsiders) :poss (a3 / and)) :degree (l / large))) :time (n4 / now))
(g / gain-02 :arg0 (w / wage-01) :arg1 (s / sign :arg1-of (p / picking)))
(g / gain-02 :arg0 (w / wage-01) :arg1 (s / sign :arg1-of (p / picking)))
(g / gain-02 :arg0 (w / wage-01) :arg1 (s / sign :arg1-of (p / picking)))
(i / include-91 :arg1 (s / say-01 :arg0 (p / person :arg0-of (s2 / support-01 :arg1 (p2 / person :name (n / name :op1 "Clinton")))) :arg1 (t / thing :arg1-of (c / choose-01 :arg0 (p3 / person :name (n2 / name :op1 "Biden"))) :ord (o / ordinal-entity :value 2)) :arg2 (p4 / person :name (n3 / name :op1 "Sanders"))) :arg2 (p5 / person :arg0-of (s3 / support-01 :arg1 (p6 / person))))
(p / possible-01 :arg1 (r / range-01 :arg1 (m / move-01 :arg2 (h / halls)) :arg3 (n / nerve-racking :mod (m2 / mildly)) :arg3 (n2 / nerve-racking :degree (t / total))))
(d / differ-02 :arg1 (r / research-01 :arg0 (r2 / record :poss (o / organization :name (n / name :op1 "Premier" :op2 "Injuries" :op3 "Ltd")))) :arg2 (p / person :name (n2 / name :op1 "Wilshere") :arg1-of (d2 / differ-02)) :time (s / since :op1 (b / before :op1 (n3 / now) :quant (t / temporal-quantity :quant (N / N-A) :unit (y / year)))))
(e / enable-01 :arg0 (s / support-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg2 (m / member))) :arg1 (a / and :op1 (c / company :arg0-of (i / insure-02 :arg1 (h2 / health))) :op2 (t / thing :arg1-of (d / donate-01))) :arg2 (a2 / and :op1 (c2 / company :arg0-of (p2 / provide-01 :arg1 (h3 / health))) :op2 (a3 / and :op1 (s2 / session :purpose (t2 / train-01)) :op2 (t3 / train-01)))) :arg1 (a4 / and :op1 (e2 / educate-01) :op2 (t4 / train-01) :op3 (s3 / supervise-01 :arg1 (a5 / and)) :op4 (s4 / supervise-01 :arg1 (c3 / company)) :op5 (s5 / supervise-01 :arg1 (a6 / and))))
(a / and :op2 (g / good :degree (m / more) :domain (a2 / and :op1 (c / control-01 :arg1 (p / pressure :mod (b / blood))) :op2 (c2 / control-01 :arg1 (p2 / pressure :mod (b2 / blood)))) :op3 (b3 / bad-07 :arg1 (' / '') :degree (m2 / more)) :location (g2 / group :mod (e / event :name (n / name :op1 "N-A"))) :arg1-of (f / find-01 :arg0 (a3 / authors))))
(a / assure-01 :arg0 (t / they) :arg1 (h / he) :arg2 (f / find-01 :arg1 (a2 / accommodation :mod (t2 / that)) :mod (a3 / also) :purpose (a4 / arrive-01 :arg1 (r / refugee :mod (n / next)))))
(a / and :op1 (p / person :name (n / name :op1 "Hogg") :arg1-of (i / include-91 :arg2 (p2 / person :mod (l / location :name (n2 / name :op1 "Ward" :op2 "Road"))) :arg3 (g / guilty-01 :arg1 (p3 / person) :arg2 (t / take-01 :arg0 (p4 / person) :arg1 (i2 / image :mod (i3 / indecent)) :arg2 (p5 / person :arg0-of (h / have-rel-role-91 :arg1 (p6 / person) :arg2 (c / child))))))) :op2 (p7 / person :arg0-of (h2 / have-rel-role-91 :arg1 (o / organization :name (n3 / name :op1 "Dundee")) :arg2 (c2 / child))) :op3 (p8 / person :arg0-of (h3 / have-rel-role-91 :arg1 (p9 / person) :arg2 (c3 / child))) :op4 (p10 / person :arg0-of (h4 / have-rel-role-91 :arg1 (p11 / person) :arg2 (c4 / child))) :op5 (p12 / person :arg0-of (h5 / have-rel-role-91 :arg1 (p13 / person) :arg2 (c5 / child))) :op5 (p14 / person :arg0-of (h6 / have-rel-role-91 :arg1 (p15 / person) :arg2 (c6 / child))) :op6 (p16 / person :arg0-of (h7 / have-rel-role-91 :arg1 (p17 / person) :arg2 (c7 / child))) :op7 (p18 / person :arg0-of (h8 / have-rel-role-91 :arg1 (p19 / person) :arg2 (c8 / child))) :op7 (p20 / person :arg0-of (h9 / have-rel-role-91 :arg1 (p21 / person) :arg2 (c9 / child))) :time (y / year :mod (t2 / this)))
(a / add-01 :arg0 (p / person :arg1-of (i / include-91 :arg2 (p2 / person :quant 12 :arg1-of (i2 / include-91 :arg2 (p3 / person :quant 12))) :time (m / meet-03))) :arg1 (f / fund-01 :polarity - :arg0 (f2 / fund-01 :arg1 (o / organization :name (n / name :op1 "Philip" :op2 "Morris" :op3 "International") :consist-of (t / tobacco)) :time (p4 / previous)) :arg1 (f3 / fund-01)))
(i / injure-01 :arg1 (p / person :arg0-of (d / drive-01) :mod (l / lorry)) :manner (s / serious) :arg1-of (c / cause-01 :arg0 (l2 / lorries :quant 3 :location (m / motorway :arg1-of (n / near-02 :arg2 (l3 / location :name (n2 / name :op1 "Karlsruhe"))) :arg1-of (n3 / near-02 :arg2 (l4 / location :name (n4 / name :op1 "Karlsruhe")))))))
(v / value-01 :arg1 (m / monetary-quantity :arg1-of (i / include-91 :arg2 (v2 / value :mod (m2 / market) :poss (c / company)) :arg3 (p / percentage-entity :value (N / N-A)))) :arg2 (m3 / monetary-quantity :arg2-of (p2 / price-01 :arg1 (c2 / commodity :mod (t / tumble)))) :time (y / year :mod (t2 / this)) :arg1-of (c3 / cause-01 :arg0 (a / and :op1 (d / demand-01 :arg0 (c4 / country :name (n / name :op1 "China")) :arg1 (t3 / thing :arg2-of (p3 / price-01 :arg1 (c5 / commodity :mod (e / economy)))) :location (a2 / and :op1 (d2 / demand-01) :op2 (h / havoc :location (a3 / across :op1 (m4 / market))))))))
(c / contrast-01 :arg1 (g / get-01 :arg0 (t / they) :arg1 (n / nothing)) :arg2 (a / allow-01 :arg1 (k / keep-01 :arg0 (t2 / they) :arg1 (c2 / clothes))))
(r / recommend-01 :arg1 (c / contribute-01 :arg0 (d / districts :mod (o / other))) :mod (a / also))
(s / spend-02 :arg0 (p / policymaker :mod (g / government-organization :name (n / name :op1 "Federal" :op2 "Reserve"))) :arg1 (r / rate-entity-91 :arg1 (d / day :quant (b / between :op1 (N / N-A) :op2 (N2 / N-A))) :arg2 (t / temporal-quantity :quant (N3 / N-A) :unit (d2 / day))) :time (w / week :mod (t2 / this)) :location (a / around :op1 (t3 / table :name (n2 / name :op1 (2 / 27-foot) :op2 (t4 / table) :op3 (t5 / table) :op4 (t6 / table) :op5 (t7 / table) :op6 (t8 / table) :op7 (t9 / table) :op6 (t10 / table) :op7 (t11 / table) :op8 (t12 / table) :op9 (t13 / table)))) :time (a2 / after :op1 (n3 / now) :quant (t14 / temporal-quantity :quant (N4 / N-A) :unit (d3 / day))))
(s / sum :arg0 (w / word :mod (t / this)) :arg1 (t2 / they) :arg2 (u / up))
(o / oblige-02 :arg1 (r / refugee) :arg2 (l / live-01 :arg0 (r2 / refugee)) :time (a / after :op1 (s / stay-01 :arg1 (r3 / refugee) :duration (t / temporal-quantity :quant (N / N-A) :ord (o2 / ordinal-entity :value 1) :arg1-of (i / include-91 :arg2 (s2 / stay-01 :arg1 (r4 / refugee)))))) :time (a2 / after :op1 (s3 / stay-01 :arg1 (r5 / refugee) :duration (t2 / temporal-quantity :quant (N2 / N-A) :ord (o3 / ordinal-entity :value 1) :part-of (s4 / stay-01 :arg1 (r6 / refugee))))))
(s / say-01 :arg0 (s2 / she) :arg1 (p / person :polarity - :arg0-of (h / have-org-role-91 :arg1 (i / i) :arg2 (p2 / president))) :mod (c / certain) :arg1-of (s3 / say-01 :arg0 (s4 / she)))
(a / and :op1 (c / criticises :arg0 (c2 / city :name (n / name :op1 "Washington")) :arg1 (b / building :arg1-of (c3 / continue-01) :location (c4 / country :name (n2 / name :op1 "Israel")))) :op2 (a2 / accuse-01 :arg0 (c5 / city) :arg1 (p / person :name (n3 / name :op1 "Netanyahu")) :arg2 (l / lack-01 :arg1 (p2 / process-02 :arg1 (p3 / peace)))))
(f / funny :domain (p / prank :mod (g / good)) :concession-of (t / take-10 :arg0 (r / reverse-01 :arg1 (m / moment))))
(a / and :op1 (m / make-01 :arg0 (a2 / and :op1 (c / company :arg0-of (m2 / make-01 :arg1 (b / building :name (n / name :op1 "N-A"))) :location (w / world)) :op2 (c2 / company :quant 1 :arg1-of (i / include-91 :arg2 (c3 / company :mod (t / tech :arg1-of (h / high-02)) :mod (b2 / big :degree (m3 / most) :compared-to (w2 / world)))))) :arg1 (m4 / move-02 :arg0 (f / firm :mod (t2 / tech :arg1-of (h2 / high-02)) :mod (b3 / big :degree (m5 / most) :compared-to (w3 / world))))) :op2 (b4 / base-02 :arg1 (t3 / thing :arg1-of (b5 / believe-01 :arg0 (f2 / firm))) :arg2 (g / good :degree (m6 / more))))
(r / rotating :arg1 (a / and :op1 (m / meat) :op2 (p / potatoes)) :location (s / shop :poss (h / he)) :time (s2 / since :op1 (t / then)))
(t / tenable :polarity - :time (d / date :mod (t2 / this)) :time (n / no-longer))
(a / ask-01 :arg0 (h / he) :arg1 (a2 / and :op1 (p / person :arg1-of (k / know-01 :polarity -) :arg0-of (s / send-01 :arg1 (i / image) :arg2 (p2 / person))) :op2 (a3 / ask-02 :arg0 (p3 / person) :arg1 (s2 / send-01 :arg0 (p4 / person) :arg1 (p5 / photograph-01 :quant (m / more)) :arg2 (p6 / person)) :arg2 (p7 / person))) :arg2 (h2 / he))
(w / want-01 :arg0 (p / person :name (n / name :op1 "Konrad")) :arg1 (s / set-up-03 :arg0 (p2 / person) :arg1 (c / container :location (p3 / person :name (n2 / name :op1 "Stephansplatz"))) :arg2 (o / office)))
(h / have-03 :arg0 (t / they) :arg1 (d / dog :arg0-of (l / live-01 :location (h2 / house :mod (g / game :name (n / name :op1 "N-A")) :arg0-of (m / mess-up-02 :arg1 (b / bayou :location (p / person :name (n2 / name :op1 "Gautier"))))))))
(e / expect-01 :arg1 (c / charge-05 :arg1 (h / he) :arg2 (f / fail-01 :arg1 (h2 / he) :arg2 (a / and :op1 (s / stop-01 :arg1 (h3 / he) :time (a2 / accident)) :op2 (f2 / fail-01 :arg1 (h4 / he) :arg2 (a3 / assist-01 :arg0 (h5 / he) :arg2 (a4 / and :op1 (a5 / assist-01 :arg0 (h6 / he) :arg2 (r / render)) :op2 (o / offence :mod (t / traffic) :mod (o2 / other)))))))))
(( / ( :( (n / name) :op1 "Thanasi" :op2 "Kokkinakis")
(( / ( :( (n / name) :op1 "Thanasi" :op2 "Kokkinakis")
(a / and :op1 (a2 / agree-01 :arg0 (a3 / and :op1 (p / person :arg1-of (a4 / academic)) :op2 (o / organization :name (n / name :op1 "Federal" :op2 "Building" :op3 "Ministry"))) :arg1 (o2 / obligate-01 :arg2 (p2 / provide-01 :arg1 (b / benefit :mod (t / tax-01 :arg2 (m / more))) :arg2 (i / invest-01 :arg2 (h / house-01))))))
(a / approach-02 :arg0 (c / company :name (n / name :op1 "Google")) :arg1 (a2 / announce-01 :arg0 (c2 / company) :arg1 (d / donate-01 :arg0 (c3 / company) :arg2 (b / blog-01 :arg0 (c4 / company)))) :arg1-of (p / personal-02))
(c / contrast-01 :arg2 (p / possible-01 :arg1 (c2 / count-01 :arg0 (t / they) :arg1 (p2 / person :name (n / name :op1 "Manuel" :op2 "Neuer")))))
(s / say-01 :arg0 (h / he) :arg1 (h2 / have-rel-role-91 :arg0 (a / and :op1 (p / person :name (n / name :op1 "Prentiss")) :op2 (p2 / person :arg0-of (h3 / have-rel-role-91 :arg1 (p3 / person) :arg2 (d / daughter)))) :arg1 (a2 / and :op1 (p4 / person) :op2 (p5 / person :arg0-of (h4 / have-rel-role-91 :arg1 (p6 / person) :arg2 (d2 / daughter)))) :degree (m / most :mod (a3 / absolute))))
(u / uphold-01 :arg0 (o / organization :name (n / name :op1 "Federal" :op2 "Constitutional" :op3 "Court")) :arg1 (c / complain-01 :arg0 (o2 / organization) :arg1 (p / prison :mod (l / location :name (n2 / name :op1 "Tegel")) :arg1-of (h / house-01 :duration (m / multiple :op1 (t / temporal-quantity :quant (N / N-A) :unit (m2 / month)) :mod (s / small :degree (t2 / too)))))))
(i / it :arg1-of (m / major-02))
(p / prepare-02 :arg2 (b / boss :mod (n / new)) :time (d / date-entity :month 9 :day 19))
(d / decide-01 :arg1 (d2 / decide-01 :mod (f / final)) :time (d3 / date-entity :month 9 :day 22))
(s / say-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (p2 / political-party :name (n / name :op1 "N-A")))) :arg1 (a / affect-01 :arg1 (p3 / population :arg1-of (i / include-91 :arg2 (p4 / population) :arg3 (p5 / percentage-entity :value (N / N-A)))) :arg3 (p6 / population :arg1-of (a2 / age-01 :arg2 (t / temporal-quantity :quant (N2 / N-A) :unit (y / year)))) :location (c / country)))
(m / multi-sentence :snt1 (c / cost-01 :arg1 (r / road :quant 1) :arg2 (h / house :mod (t / thatched))) :snt2 (c2 / cost-01 :arg1 73,300 :arg2 73,300))
(n / need-01 :arg0 (w / we) :arg1 (s / space :arg0-of (h / house-01) :arg0-of (s2 / suffice-01 :arg1 (h2 / hijack-01 :arg1 (r / refugee) :time (o / over :op1 (t / temporal-quantity :quant (N / N-A) :unit (d / decade)))))) :mod (a / also))
(s / sell-01 :arg0 (c / company) :arg1 (s2 / stock :mod (n / new)) :arg3 (m / monetary-quantity :quant 125 :unit (d / dollar :mod (r / renminbi))) :arg0-of (m2 / mark-01 :arg1 (d2 / discount :arg1-of (2 / 2.4-percent :arg2 (t / thing :arg2-of (p / price-01 :arg1-of (c2 / close-01)))))))
(r / remain-01 :arg1 (m / man :mod (4 / 40-year-old) :arg1-of (r2 / remain-01 :arg3 (c / condition :arg1-of (s / stable-03)))) :location (h / hospital))
(c / consider-01 :arg1 (n / normal-02 :arg1 (m / measure-01 :arg1 (w / weight) :arg1-of (r / relate-01 :arg2 (h / high)))) :arg2 (n2 / normal-02 :arg1 (m2 / measure-01)))
(c / complain-01 :arg0 (a / animal :arg1-of (d / differ-02) :mod (w / welfare :mod (a2 / animal))) :arg1 (m / mistreatment :arg1 (a3 / animal)) :frequency (o / often :degree (t / too)))
(s / say-01 :arg0 (p / person :name (n / name :op1 "Schmidt")) :arg1 (o / obligate-01 :arg2 (t / think-01 :arg0 (a / and :op1 (i / idea :mod (n2 / new :degree (m / most))) :op2 (b / business)) :arg1 (a2 / and :op1 (i2 / idea) :op2 (b2 / business) :mod (n3 / new :degree (m2 / most))))))
(i / inviting :arg0 (t / team :mod (n / nation) :poss (w / woman)) :arg1 (a / and :op1 (r / refugee :quant 100) :op2 (t2 / team :mod (n2 / nation) :poss (w2 / woman))) :arg2 (t3 / thing :arg2-of (m / match-01 :arg1 (m2 / match-03 :arg0 (p / person :name (n3 / name :op1 "Halle")) :arg1 (c / country :name (n4 / name :op1 "Hungary"))))))
(m / multi-sentence :snt1 (i / invites :arg0 (p / person :name (n / name :op1 "Sufjan" :op2 "Stevens") :arg0-of (h / have-org-role-91 :arg1 (p2 / person :name (n2 / name :op1 "Sufjan" :op2 "Stevens") :arg0-of (h2 / have-org-role-91 :arg2 (' / ''))) :arg2 (- / -lrb-))) :arg1 (y / you) :arg2 (f / feel-01 :arg0 (p3 / person) :arg1 (-2 / -rrb- :arg1 ('2 / '' :name (n3 / name :op1 (i2 / illinoise) :op2 ('3 / ''))) :location 2005 :quant 2005))) :snt2 (r / release-01 :arg1 (s / stud :mod (a / acclaimed :degree (w / wide)))))
(i / include-91 :arg1 (a / and :op1 (t / thing :mod (o / other) :arg1-of (i2 / include-91 :arg2 (t2 / thing :mod (o2 / other) :arg1-of (b / base-01 :location (l / location :name (n / name :op1 "Bologna"))) :arg1-of (b2 / base-01 :location (l2 / location :name (n2 / name :op1 "Bologna")))))) :op2 (t3 / thing :arg1-of (i3 / include-91 :arg2 (t4 / thing :arg2-of (b3 / be-located-at-91 :arg1 (l3 / location :arg1-of (b4 / base-01 :location (l4 / location :name (n3 / name :op1 "Bologna"))))))))) :arg2 (t5 / thing :mod (o3 / other) :arg1-of (d / decide-01) :arg1-of (b5 / base-01 :location (l5 / location :name (n4 / name :op1 "Bologna")))))
(a / and :op1 (s / sign-up-03 :arg1 (s2 / she) :time (i / immediate)) :op2 (s3 / signed :arg0 (o / organization :name (n / name :op1 "Ecumenical" :op2 "Hospice" :op3 "Care")) :arg1 (s4 / she) :time (s5 / start-01 :arg0 (o2 / organization) :arg1 (u / up :arg1 (s6 / she)))))
(h / head-01 :arg0 (t / they) :arg1 (b / branch :quant 2 :part-of (c / car :mod (m / mannheim))))
(p / play-02 :arg0 (p2 / person :mod (r / religious-group :name (n / name :op1 "Islam"))) :arg1 (r2 / role :mod (i / important) :topic (a / and :op1 (r3 / refugee) :op2 (r4 / religion :quant (m / many)) :domain (i2 / identity :poss (p3 / person)) :mod (i3 / important))))
(p / picked :arg0 (p2 / person :arg0-of (h / have-rel-role-91 :arg1 (h2 / he) :arg2 (m / mother))) :arg1 (t / teenager))
(r / report-01 :arg0 (o / organization :name (n / name :op1 "PHE")) :arg1 (t / thing :arg1-of (r2 / report-01 :arg0 (t2 / thing :arg0-of (e / evidence-01 :arg1 (r3 / review-01 :arg1 (t3 / thing :arg0-of (e2 / evidence-01)) :mod (c / comprehensive :degree (m / more))))))) :time (m2 / month :mod (l / last)))
(e / estimate-01 :arg0 (p / person :arg0-of (a / analyze-01 :arg1 (o / organization :name (n / name :op1 "Morgan" :op2 "Stanley")))) :arg1 (e2 / estimate-01 :arg0 (p2 / person :name (n2 / name :op1 "Tom" :op2 "Kierath")) :arg1 (p3 / possible-01 :arg1 (l / lose-02 :arg0 (g / government-organization :arg0-of (g2 / govern-01 :arg1 (c / country))) :arg1 (r / rate-entity-91 :arg1 (m / monetary-quantity :quant 360 :unit (d / dollar)) :arg2 (t / temporal-quantity :quant (N / N-A) :unit (y / year))) :arg3 (r2 / rate-entity-91 :arg1 (m2 / monetary-quantity :quant 250 :unit (d2 / dollar)) :arg2 (v / volume-quantity :quant (N2 / N-A) :unit (g3 / gallon))))) :arg2 (e3 / end-01 :arg1 (a2 / approximately :op1 2016))) :time (w / week :mod (t2 / this)))
(a / adjust-01 :arg0 (a2 / authority) :arg1 (f / fence) :arg1-of (q / quick-02))
(a / and :op1 (t / think-01 :arg0 (p / person :quant 44) :arg1 (h / have-03 :polarity - :arg0 (p2 / person) :arg1 (p3 / personality) :purpose (s / serve-01 :arg0 (p4 / person) :arg1-of (e / effective-04))) :mod (s2 / still)) :op2 (s3 / say-01 :arg0 (p5 / person :quant (a2 / almost :op1 6) :arg0-of (h2 / have-org-role-91 :arg2 (h3 / head-of-state))) :arg1 (b / belong-01 :polarity - :arg0 (t2 / temperament :poss (p6 / person)) :arg1 (g / government-organization :name (n / name :op1 "White" :op2 "House")))))
(m / multi-sentence :snt1 (d / do-02 :polarity - :arg0 (i / i) :arg1 (g / gardening :quant (m2 / much)) :time (n / now)) :snt2 (p / possible-01 :arg1 (c / change-01 :arg1 (t / that) :time (n2 / now))))
(r / run-09 :arg1 (c / car :poss (h / he)) :mod (s / still) :location (d / driveway))
(r / responsible-03 :arg0 (p / person :name (n / name :op1 "Karl" :op2 "Ulrich" :op3 "Garnadt")) :arg1 (o / organization :name (n2 / name :op1 "Eurowings") :arg1-of (h / head-01 :arg0 (p2 / person :name (n3 / name :op1 "Carsten" :op2 "Spohr")))) :time (f / future))
(p / publish-01 :arg0 (s / scientist) :arg1 (t / thing :arg1-of (p2 / precede-01 :arg2 (j / journal :name (n / name :op1 (' / '') :op2 (s2 / science) :op3 (s3 / science)) :mod (s4 / science) :mod ('2 / '')))))
(m / multi-sentence :snt1 (c / cause-01 :polarity - :arg0 (d / difficult :domain (u / understand-01 :arg1 (c2 / complexity :poss (i / insure-02)))) :arg1 (d2 / difficult :domain (u2 / understand-01 :arg1 (s / service :mod (m2 / many)) :arg1-of (c3 / cause-01 :arg0 (d3 / difficult :domain (u3 / understand-01 :arg1 (c4 / complexity :poss (i2 / insure-02)))))))) :snt2 (a / and :op1 (r / responsible-01 :arg0 (p / person :name (n / name :op1 "Jutta" :op2 "Weigand") :arg0-of (h / head-01 :arg1 (d4 / division :mod (s2 / service)) :beneficiary (w / welfare :poss (p2 / person)))) :arg1 (p3 / person :name (n2 / name :op1 "Antonistift")) :mod (a2 / also)) :op2 (e / explain-01 :arg0 (p4 / person) :arg1 (e2 / explain-01 :arg0 (p5 / person)))))
(d / date-entity :day 9 :month 1 :year 1990)
(d / date-entity :day 9 :month 1 :year 1990)
(w / want-01 :arg0 (p / person :name (n / name :op1 "Jutta" :op2 "Breit")) :arg1 (g / get-01 :arg0 (p2 / person) :arg1 (d / dog)) :mod (a / actual))
(b / be-located-at-91 :arg1 (p / person :name (n / name :op1 "Monsieur" :op2 "Bieber")) :arg2 (c / city :name (n2 / name :op1 "Berlin")))
(f / fall-01 :arg1 (s / sell-01) :arg2 (a / around :op1 (p / percentage-entity :value (N / N-A))) :time (b / before :op1 (n / now) :duration (t / temporal-quantity :quant (N2 / N-A) :unit (y / year))))
(c / contrast-01 :arg1 (a / accept-01 :arg0 (h / he) :arg1 (t / thing :arg1-of (m / make-01 :arg0 (h2 / he) :location (c2 / computer)))) :arg2 (s / say-01 :arg0 (h3 / he) :arg1 (c3 / cause-01 :arg0 (w / want-01 :arg0 (h4 / he) :arg1 (p / pretend :arg0 (h5 / he) :arg1 (p2 / person :arg0-of (h6 / have-org-role-91 :arg1 (p3 / police) :arg2 (o / officer))) :purpose (s2 / scare-01 :arg0 (h7 / he) :arg1 (p4 / paedophile)))) :arg1 (h8 / he))))
(m / multi-sentence :snt1 (w / want-01 :mode (i / interrogative) :arg0 (o / organization :name (n / name :op1 "S&T")) :arg1 (c / collaborate-01 :arg0 (o2 / organization) :arg1 (s / stud :mod (n2 / new)) :arg2 (s2 / start-01))) :snt2 (a / and :op1 (p / promise-01 :arg0 (p2 / person :name (n3 / name :op1 "Niederhauser"))) :op2 (p3 / promise-01 :arg0 (p4 / person) :arg2 (' / '' :mod (n4 / next) :mod (o3 / only) :domain (r / runtastic :mod (n5 / next))))))
(f / feel-02 :arg0 (p / person :name (n / name :op1 "Gaultier")) :arg1 (o / old :degree (t / too) :domain (o2 / old :degree (t2 / too))))
(r / respond-01 :arg1 (c / change-01 :arg1 (i / industry) :accompanier (a / and :op1 (s / split-01) :op2 (l / lay-off-02 :mod (m / massive)))) :arg2 (c2 / change-01 :arg1 (i2 / industry)))
(a / and :op1 (p / put-01 :arg0 (i / i) :arg1 (p2 / pressure-01) :arg2 (t / they)) :op2 (o / onus :arg0 (i2 / i) :arg1 (t2 / they) :purpose (d / decide-01 :arg0 (t3 / they))))
(d / discuss-01 :arg0 (p / person :arg0-of (p2 / pilot-01)) :arg1 (s / scheme :mod (r / retire-01)))
(r / run-09 :arg1 (g / gap) :arg2 (b / between :op1 40,000 :op2 40,000) :time (s / start-01 :arg1 (y / year :time-of (r2 / run-01 :arg1 (g2 / gap)))))
(s / save-02 :arg0 (g / group :mod (o / organization :name (n / name :op1 "Lufthansa"))) :arg1 (r / rate-entity-91 :arg1 (m / monetary-quantity :quant (N / N-A) :unit (e / euro)) :arg2 (t / temporal-quantity :quant (N2 / N-A) :unit (y / year))) :manner (i / improve-01 :arg1 (a / alone :arg1-of (o2 / organize-01))))
(s / save-02 :arg0 (g / group :mod (o / organization :name (n / name :op1 "Lufthansa"))) :arg1 (r / rate-entity-91 :arg1 (m / monetary-quantity :quant (N / N-A) :unit (e / euro)) :arg2 (t / temporal-quantity :quant (N2 / N-A) :unit (y / year))) :manner (i / improve-01 :arg1 (a / alone :arg1-of (o2 / organize-01))))
(c / combined :arg0 (d / deal) :arg1 (b / brand :mod (t / together) :example (a / and :op1 (o / organization :name (n / name :op1 "Budweiser")) :op2 (p / person :name (n2 / name :op1 "Stella" :op2 "Artois")) :op3 (p2 / person :name (n3 / name :op1 "Peroni")) :op4 (o2 / organization :name (n4 / name :op1 "Grolsch")))) :mod (l / large :degree (m / most :quant 2)))
(p / post-01 :arg0 (o / organization :name (n / name :op1 "Kingfisher")) :arg1 (f / fall :location (a / and :op1 (p2 / profit :mod (h / half-year)) :op2 (s / sell-01))) :time (a2 / after :op1 (s2 / shouldered :arg0 (g / group) :arg1 (c / cost-01 :arg1 (s3 / store :arg1-of (s4 / shut))))))
(o / open-01 :arg1 (o2 / office :mod (n / new) :mod (a / accommodation)) :location (t / there) :quant (s / short))
(c / compete-02 :arg0 (t / teenager) :arg1 (p / person :name (n / name :op1 "Sam" :op2 "Groth") :arg0-of (h / have-org-role-91 :arg1 (b / berth :ord (o / ordinal-entity :value 2) :location (b2 / behind :op1 (p2 / person :name (n2 / name :op1 "Bernard" :op2 "Tomic") :arg0-of (h2 / have-org-role-91 :arg1 (c2 / country :name (n3 / name :op1 "Britain")) :arg2 (b3 / berth))))))) :time (c3 / current) :location (b4 / behind :op1 (p3 / person :name (n4 / name :op1 "Bernard" :op2 "Tomic") :arg0-of (h3 / have-org-role-91 :arg1 (c4 / country) :arg2 (b5 / berth)))))
(a / aim-01 :arg1 (d / draw-02 :arg0 (g / group :arg1-of (a2 / age-01 :arg2 (t / temporal-quantity :quant (N / N-A) :unit (y / year)))) :arg1 (g2 / group :mod (a3 / age :mod (e / every)) :arg1-of (m / mean-01 :arg2 (a4 / and :op1 (d2 / dressage :arg1 (a5 / animal)) :op2 (a6 / animal) :op3 (e2 / entertain-01 :arg1 (a7 / animal) :mod (u / unique)))))))
(s / see-01 :polarity - :arg0 (p / person :arg0-of (c / compete-02)) :arg1 (p2 / person :arg0-of (c2 / compete-02) :mod (a / any) :arg0-of (c3 / complete-01 :arg1 (s2 / stage :mod (a2 / all) :part-of (o / obstacle :poss (p3 / person))))) :time (e / ever) :arg1-of (c4 / cause-01 :arg0 (s3 / show :arg0 (c5 / compete-01) :arg1 (s4 / season :ord (o2 / ordinal-entity :value 7) :poss (c6 / compete-01)) :mod (j / just))))
(e / elect-01 :li 2016 :arg1 (p / person :name (n / name :op1 "Hillary" :op2 "Clinton")))
(a / and :op1 (p / possible-01 :arg1 (h / help-01 :arg0 (f / football))))
(s / say-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (p2 / person :name (n / name :op1 "Plattner")))) :arg1 (p3 / person :name (n2 / name :op1 "Plattner") :arg0-of (h2 / have-org-role-91 :arg2 (' / ''))) :location (m / meet-03 :location (m2 / meet-03 :location (c / city :name (n3 / name :op1 "N-A")))))
(r / rise-01 :arg1 (t / tecdax :mod (t2 / technology-heavy)) :arg2 (p / percentage-entity :value (N / N-A)) :arg4 (p2 / point :quant (1 / 1,736.69)))
(w / want-01 :arg0 (h / he) :arg1 (d / discuss-01 :arg0 (h2 / he) :arg1 (t / topic) :accompanier (c / country :arg0-of (r / represent-01 :arg1 (i / industry :arg0-of (r2 / represent-01 :arg1 (o / organization :name (n / name :op1 "IAA")))) :mod (a / also)))))
(m / multi-sentence :snt1 (s / say-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (c / company :name (n / name :op1 "N-A") :mod (e / energy) :mod (e2 / energy)) :arg3 (' / ''))) :arg1 (l / lack-01 :arg0 (c2 / company :mod (e3 / energy) :mod (e4 / energy)) :arg1 (p2 / person :quant 30000000000) :mod (p3 / potential))) :snt2 (r / reserve-01 :li 30000000000 :arg1 (r2 / reserve)))
(s / say-01 :arg0 (o / organization :name (n / name :op1 "Deutsche")) :arg1 (a / and :op1 (p / possible-01 :arg1 (r / risky :domain (r2 / rate :mod (e / economy :mod (f / fragile)) :mod (s2 / such)))) :op2 (s3 / set-up-03 :arg1 (r3 / rate) :arg2 (q / question-01 :arg1 (d / differ-02 :mode (i / interrogative) :arg1 (t / time :mod (t2 / this)))))))
(s / say-01 :arg0 (o / organization :name (n / name :op1 "Deutsche")) :arg1 (a / and :op1 (p / possible-01 :arg1 (r / risky :domain (r2 / rate :mod (e / economy :mod (f / fragile)) :mod (s2 / such)))) :op2 (s3 / set-up-03 :arg1 (r3 / rate) :arg2 (q / question-01 :arg1 (d / differ-02 :mode (i / interrogative) :arg1 (t / time :mod (t2 / this)))))))
(p / plan-01 :polarity - :arg0 (c / city :arg1-of (i / include-91 :arg2 (l / location :name (n / name :op1 "Linz")))) :arg1 (o / open-01 :arg0 (c2 / city) :arg1 (a / and :op1 (b / building :mod (n2 / new)) :op2 (b2 / building :mod (o2 / other) :example (a2 / and :op1 (t / thing :arg2-of (t2 / tip-05)) :op2 (t3 / thing :arg2-of (s / shelter-01 :arg3 (t4 / thing :arg2-of (s2 / shelter-01 :arg3 (r / refugee))))))))) :time (t5 / time :mod (t6 / time)))
(s / say-01 :arg1 (i / imagine-01 :polarity - :arg0 (i2 / i) :arg1 (i3 / it)) :arg2 (p / person :name (n / name :op1 "N-A")))
(h / have-03 :arg0 (h2 / he) :arg1 (m / mask :mod (o / oxygen)) :time (b / be-located-at-91 :arg1 (i / it) :arg2 (r / room :arg1-of (s / suppose-01))))
(s / stage-01 :arg1 (c / collection :arg1-of (r / remarkable-02) :mod (t / this)) :location (a / and :op1 (c2 / city :name (n / name :op1 "Montreal")) :op2 (c3 / country :name (n2 / name :op1 "Canada")) :op3 (c4 / city :name (n3 / name :op1 "Paris"))) :time (a2 / already))
(s / say-01 :arg1 (a / accuse-01 :arg0 (p / person) :arg1 (i / i) :arg2 (b / build-01 :arg0 (p2 / person) :arg1 (a2 / accommodation :mod (l / luxury)) :purpose (f / fortune :mod (m / malicious)))) :arg2 (p3 / person :name (n / name :op1 "N-A")))
(a / and :op1 (t / tolerance) :op2 (a2 / accept-01) :op3 (e / envision-01 :arg1 (s / society :arg1-of (o / open-09))) :domain (i / it))
(s / say-01 :arg1 (t / thing :quant 1 :domain (i / it) :mod (s2 / soon) :time (s3 / soon)) :arg2 (c / cause-01 :arg0 (l / love-01 :arg0 (p / person :arg0-of (h / have-rel-role-91 :arg1 (y / you) :arg2 (c2 / child))) :arg1 (b / book)) :arg1 (l2 / long-03 :polarity - :arg1 (w / wo) :time (b2 / before :op1 (k / know-01 :arg0 (y2 / you) :arg1 (i2 / it) :mod (a / almost))))))
(c / contrast-01 :arg2 (l / learn-01 :arg0 (s / series :mod (m / murder-01 :mod (o / organization :name (n / name :op1 "NSU")))) :arg1 (i / ignore-01 :arg1 (m2 / motive :mod (r / racist)) :location (a / and :op1 (p / police) :op2 (a2 / authority)))))
(t / think-01 :arg0 (i / i) :arg1 (c / chance-02 :arg0 (w / we) :arg1 (p / picking :arg0 (w2 / we) :arg1 (t2 / title))))
(a / and :op1 (e / equipment :mod (t / torture-01) :mod (l / law :polarity -)) :op2 (r / right :poss (y / you)))
(c / contrast-01 :arg1 (p / provide-01 :polarity - :arg0 (p2 / person :arg0-of (h / have-org-role-91 :arg1 (p3 / panel) :arg2 (m / member))) :arg1 (p4 / person :arg0-of (h2 / have-org-role-91 :arg1 (p5 / panel) :arg2 (m2 / member)))) :arg2 (i / include-01 :arg1 (p6 / person :quant (s / some) :arg1-of (i2 / include-91 :arg2 (p7 / person :arg0-of (d / declare-02 :arg1 (i3 / industry) :mod (a / also)) :arg0-of (d2 / declare-02 :arg1 (i4 / industry) :mod (a2 / also))))) :arg2 (p8 / person)))
(b / be-located-at-91 :arg1 (o / organization :name (n / name :op1 "Tigers")) :arg2 (p / place :mod (l / league :mod (c / country :name (n2 / name :op1 "N-A")))) :time (n3 / now) :time (o2 / once :op1 (t / team :mod (g / good :degree (m / most)) :location (b2 / baseball))))
(g / give-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg2 (m / mango))) :arg1 (t / touch-01 :arg0 (p2 / person) :arg1 (d / dishes) :arg1-of (s / special-02)) :mod (a / also))
(m / multi-sentence :snt1 (p / point-out-02 :arg0 (o / other) :arg1 (t / that) :time (a / after :op1 (c / chart :arg0 (p2 / person :name (n / name :op1 "Bieber") :mod (a2 / all)) :arg1 (a3 / and :op1 (c2 / country :name (n2 / name :op1 "USA")) :op2 (c3 / country :name (n3 / name :op1 "Great" :op2 "Britain"))) :arg2 (' / '' :arg1-of (s / single-02) :mod (n4 / new) :poss (p3 / person))))) :snt2 ('2 / '' :quant 1))
(s / shortfall :location (a / area :mod (u / urban) :location (a2 / area :mod (u2 / urban) :part-of (p / person :name (n / name :op1 "Matthias" :op2 "Günther") :arg0-of (a3 / author-01 :arg1 (s2 / study-01))))) :time (c / current))
(s / shortfall :location (a / area :mod (u / urban) :location (a2 / area :mod (u2 / urban) :part-of (p / person :name (n / name :op1 "Matthias" :op2 "Günther") :arg0-of (a3 / author-01 :arg1 (s2 / study-01))))) :time (c / current))
(p / plan-01 :arg1 (u / use-01 :arg1 (l / land) :arg2 (a / and :op1 (t / trade-01) :op2 (c / commerce) :op3 (h / house-01))))
(t / teach-01 :arg0 (h / he) :arg1 (c / class :quant 2 :mod (o / online)) :arg2 (h2 / he) :time (y / year :mod (t2 / this)))
(g / gain-02 :arg0 (a / and :op1 (m / market :location (c / city :name (n / name :op1 "London"))) :op2 (m2 / market :location (c2 / city :name (n2 / name :op1 "Paris")))) :arg1 (t / thing :arg1-of (g2 / gain-02) :arg1-of (s / soft-02)) :mod (a2 / also))
(r / rise-01 :arg1 (r2 / revenue) :arg2 (p / percentage-entity :value (N / N-A)) :arg4 (m / monetary-quantity :quant 12.3 :unit (d / dollar)))
(a / add-01 :arg0 (d / defender :mod (c / country :name (n / name :op1 "England"))) :arg1 (r / recovered :arg0 (d2 / defender) :arg1 (c2 / championship :location (c3 / country :name (n2 / name :op1 "France"))) :time (d3 / date-entity :month 6)))
(t / treat-03 :arg1 (s / store :name (n / name :op1 (l / lederhosen) :op2 (l2 / lederhosen))) :arg1-of (s2 / special-02) :mod (a / also) :location (s3 / store) :mod (a2 / also))
(s / say-01 :arg0 (s2 / some) :arg1 (g / go-01 :arg1 (h / hype) :extent (f / far :degree (t / too))))
(a / and :op1 (m / meet-03 :arg0 (o / organization :name (n / name :op1 "US" :op2 "Federal" :op3 "Reserve")) :arg1 (w / world) :time (b / before :op1 (n2 / now) :quant (o2 / over :op1 (b2 / between :op1 (t / temporal-quantity :quant (N / N-A) :unit (d / day)) :op2 (t2 / temporal-quantity :quant (N2 / N-A) :unit (d2 / day)))))) :op2 (t3 / take-01 :arg0 (w2 / world) :arg1 (d3 / decide-01 :arg1 (o3 / or :mode (i / interrogative) :op1 (r / raise-01 :arg1 (r2 / rate :mod (i2 / interest))) :op2 (r3 / raise-01 :polarity - :arg1 (r4 / rate :mod (i3 / interest)) :time (a2 / after :op1 (n3 / now) :quant (n4 / nearly :op1 (t4 / temporal-quantity :quant (N3 / N-A) :unit (d4 / decade)))))))))
(l / leave-17 :arg1 (a / and :op1 (v / voice) :op2 (i / imagery :name (n / name :op1 (c / cartoon)))) :arg1-of (d / doubt-01 :polarity -) :arg1-of (d2 / doubt-01 :polarity -) :arg1-of (c2 / cause-01 :arg0 (a2 / and :op1 (s / spoof :domain (a3 / advert :mod (t / this)) :arg1-of (s2 / sharp-02)) :op2 (p / produce-01 :arg0 (o / organization :name (n2 / name :op1 "Amnesty" :op2 "International")) :arg1 (w / will-02 :arg0 (g / government-organization :arg0-of (g2 / govern-01 :arg1 (c3 / country :name (n3 / name :op1 "N-A")))) :arg1 (f / flog :arg0 (g3 / government-organization) :arg1 (w2 / will-02 :arg0 (g4 / government-organization :arg0-of (g5 / govern-01 :arg1 (c4 / country))) :arg1 (f2 / flog :arg0 (g6 / government-organization) :arg1 (w3 / weapon) :arg2 (r / regime :mod (r2 / repressive)) :path (j / jamboree :location (c5 / centre :location (c6 / city :name (n4 / name :op1 "London"))))))))))))
(s / stuff :mod (t / that) :mod (a / all) :arg1-of (s2 / sure-02) :arg1-of (s3 / sure-02))
(a / and :op1 (h / have-03 :arg0 (r / reserve :mod (f / federal)) :arg1 (m / mandate :mod (w / world-region :name (n / name :op1 "N-A"))) :mod (s / still)) :op2 (m2 / mention-01 :polarity - :arg0 (a2 / act-02) :arg1 (a3 / and :op1 (s2 / stability :mod (f2 / finance)) :op2 (s3 / stability :mod (f3 / finance))) :time (s4 / still) :time (u / until :op1 (c / change-01))) :op3 (t / think-01 :polarity - :arg0 (i / i) :arg1 (r2 / recommend-01 :arg1 (g / get-05 :arg1 (t2 / they) :arg2 (a4 / ahead)))))
(s / say-01 :arg0 (r / r :mod (t / toys)) :arg1 (c / contrast-01 :arg1 (s2 / say-01 :arg0 (r2 / r :mod (t2 / toys)) :arg1 (w / wo)) :arg2 (s3 / say-01 :arg0 (a / and :op1 (t3 / toy) :op2 (p / product :arg0-of (h / have-rel-role-91 :arg1 (b / baby) :arg2 (c2 / child)))) :arg1 (c3 / chance-02 :arg0 (a2 / and) :arg1 (w2 / work-01 :arg0 (a3 / and) :duration (t4 / temporal-quantity :quant (N / N-A) :unit (h2 / hour)))))) :arg2 (s4 / say-01 :arg0 (r3 / r :mod (t5 / toys)) :arg1 (c4 / contrast-01 :arg1 (h3 / hire-01 :polarity - :arg1 (p2 / person :arg1-of (e / employ-01 :time (s5 / season :mod (l / last)))) :arg2 (w3 / wo)) :arg2 (s6 / say-01 :arg0 (a4 / and :op1 (t6 / toy) :op2 (p3 / product :arg0-of (h4 / have-rel-role-91 :arg1 (b2 / baby) :arg2 (c5 / child)))) :arg1 (i / it)))))
(s / say-01 :arg1 (a / and :op1 (c / certain :polarity - :domain (i / impacts :arg1 (e / economy :poss (c2 / country :name (n / name :op1 "U.S.")))) :quant (l / lot)) :op2 (h / have-03 :polarity - :arg0 (t / they) :arg1 (d / data :mod (a2 / almost) :purpose (r / rely-01 :arg0 (d2 / data) :arg1 (d3 / develop-01 :location (c3 / country :name (n2 / name :op1 "China"))))))) :arg2 (p / person :name (n3 / name :op1 "Oliner")))
(a / and :op1 (h / hit-01 :arg0 (o / organization :name (n / name :op1 "Glencore") :arg0-of (m / mine-01) :arg1-of (h2 / hit-01 :arg0 (m2 / monetary-quantity :arg2-of (p / price-01 :arg1 (c / commodity))))) :arg1 (m3 / monetary-quantity :quant 2.5 :unit (d / dollar)) :arg2 (s / sell-01 :arg0 (o2 / organization) :arg1 (m4 / monetary-quantity :arg2-of (p2 / price-01 :arg1 (c2 / commodity))))) :op2 (r / raise-02 :arg0 (o3 / organization) :arg1 (m5 / monetary-quantity :quant 2.5 :unit (d2 / dollar)) :arg3 (s2 / sell-01 :arg1 (s3 / share) :arg2 (p3 / part :part-of (p4 / plan :mod (v / vast) :poss (o4 / organization) :mod (v2 / vast))))))
(c / confront-01 :arg0 (p / person :name (n / name :op1 "Matt" :op2 "Damon")) :arg1 (p2 / person :name (n2 / name :op1 "Effie" :op2 "Brown") :arg0-of (m / make-01 :arg1 (a / african-american))) :time (d / discuss-01 :arg0 (p3 / person) :arg1 (s / say-01 :arg0 (p4 / person) :arg1 (n3 / need-01 :polarity - :arg1 (b / behind :op1 (s2 / scenes))))))
(m / multi-sentence :snt1 (s / say-01 :arg1 (p / price-01 :arg1 (s2 / space :mod (l / live-01) :quant (m2 / multiple :op1 160)) :arg2 (r / rate-entity-91 :arg1 (s3 / space :mod (l2 / live-01)) :arg2 (r2 / rate-entity-91 :arg2 (t / temporal-quantity :quant (N / N-A) :unit (w / week)))))) :snt2 (l3 / land :quant 184,000))
(a / and :op1 (o / offer-01 :arg0 (w / we) :arg1 (e / examination :arg1-of (u / ultrasound :arg1-of (p / possible-01 :polarity -))) :degree (e2 / equal :compared-to (a2 / and :op1 (l / long-03) :op2 (s / stressed)))) :op2 (n / need-01 :arg0 (w2 / we) :arg1 (r / room :quant 1 :arg1-of (c / consult-01) :mod (m / more))))
(c / contrast-01 :arg2 (s / say-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg2 (e / entertainment :mod (e2 / entertainment)))) :arg1 (c2 / contrast-01 :arg1 (r / remake :polarity - :domain (i / it)) :arg2 (s2 / set :arg1 (s3 / sequel :mod (s4 / sort)) :time (a / after :op1 (f / film :ord (o / ordinal-entity :value 1) :prep-with (n / nannies :mod (m / magical))))))))
(a / and :op1 (w / want-01 :arg0 (w2 / we) :arg1 (s / set-up-03 :arg0 (w3 / we) :arg1 (s2 / system :arg0-of (t / trust-01 :arg1 (t2 / trust-01 :arg0 (c / citizen)))))) :op2 (s3 / state-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (o / organization :name (n / name :op1 "EU")) :arg2 (c2 / commissioner :mod (v / vice)))) :arg1 (p2 / person :name (n2 / name :op1 "Cecilia" :op2 "Malström")) :time (i / introduce-02 :arg0 (p3 / person) :arg1 (s4 / system))))
(p / possible-01 :arg1 (h / hear-01 :arg0 (o / one) :arg1 (a / and :op1 (' / '' :degree (m / more) :domain (p2 / perform-01)) :op2 ('2 / '' :arg1 (p3 / perform-01) :degree (m2 / more)))) :arg1-of (c / cause-01 :arg0 (a2 / and :op1 ('3 / '' :arg1 (p4 / perform-01) :degree (m3 / more)) :op2 (w / want-01 :arg0 (y / you) :arg1 ('4 / '' :arg0 (y2 / you) :arg1 ('5 / '' :mod (a3 / album)) :direction (a4 / away))))))
(s / say-01 :arg0 (p / person :name (n / name :op1 "Healy")) :arg1 (w / want-01 :arg0 (w2 / we :mod (a / all)) :arg1 (a2 / and :op1 (f / focus-01 :arg0 (t / team) :arg2 (t2 / tie) :arg1-of (c / complete-02)) :op2 (c2 / controversy :polarity - :mod (c3 / controversy) :location (a3 / around :op1 (-2 / -rsb- :name (n2 / name :op1 (-3 / -lsb-))))))))
(a / and :op1 (p / possible-01 :arg1 (c / cope-01 :arg0 (p2 / person :mod (e / economy)) :arg1 (r / rate :arg1-of (h / high-02 :degree (m / more))))) :op2 (a2 / and :op1 (n / need-01 :arg0 (p3 / person) :arg1 (r2 / rate :arg1-of (h2 / high-02 :degree (m2 / more)))) :op2 (n2 / need-01 :arg0 (p4 / person) :arg1 (p5 / person :arg0-of (h3 / have-org-role-91 :arg1 (o / organization :name (n3 / name :op1 "Pantheon" :op2 "Macroeconomics") :part-of (o2 / organization :name (n4 / name :op1 "Pantheon" :op2 "Macroeconomics"))) :arg2 (c2 / chief))))))
(m / multi-sentence :snt1 (e / exemplify-01 :mode (i / interrogative) :arg0 (r / refugee)) :snt2 (c / contrast-01 :arg2 (s / sign-01 :arg1 (a / and :op1 (r2 / refugee :mod (o / only :polarity -)) :op2 (p / person :arg0-of (n / need-01 :arg1 (r3 / refugee)) :arg1-of (s2 / single-02)) :mod (a2 / also) :mod (a3 / also)))))
(a / arrest-01 :arg1 (p / person :arg0-of (o / oppress-01 :arg1 (f / fence))) :ord (o2 / ordinal-entity :value 1))
(m / multi-sentence :snt1 (v / view-02 :arg0 (a / and :op1 (c / country :name (n / name :op1 "N-A")) :op2 (c2 / country :name (n2 / name :op1 "N-A"))) :arg1 (c3 / car :mod (d / driverless)) :mod (s / still)) :snt2 (m2 / more :compared-to (o / or :op1 (c4 / country) :op2 (c5 / country))))
(s / say-01 :arg0 (p / person :name (n / name :op1 "Tom" :op2 "Davies") :arg0-of (h / have-org-role-91 :arg1 (o / organization :name (n2 / name :op1 "Amnesty")))) :arg1 (d / do-02 :arg0 (t / they) :arg1 (j / job :arg1-of (r / reasonable-02)) :arg2 (h2 / help-01 :arg0 (t2 / they) :arg1 (c / concern-01 :arg0 (s2 / sell-01 :arg1 (e / equipment :mod (t3 / torture-01) :mod (l / law :polarity -))) :arg2 (w / we)))))
(k / know-02 :arg0 (p / person :name (n / name :op1 "Ed" :op2 "Miliband") :arg0-of (h / have-rel-role-91 :arg1 (h2 / he) :arg2 (p2 / president :mod (v / vice)))) :arg1 (p3 / person :arg0-of (h3 / have-rel-role-91 :arg1 (h4 / he) :arg2 (e / enemy))))
(i / include-91 :arg1 (p / person :name (n / name :op1 "Schmidt")) :arg2 (p2 / person :name (n2 / name :op1 "Lamb") :arg0-of (w / write-01 :arg1 (b / book))) :medium (b2 / book) :medium (b3 / book) :arg1-of (w2 / write-01 :arg0 (h / he)) :arg1-of (w3 / write-01 :arg0 (h2 / he)) :arg1-of (w4 / write-01 :arg0 (h3 / he)) :arg1-of (w5 / write-01 :arg0 (h4 / he)) :arg1-of (w6 / write-01 :arg0 (h5 / he)) :arg1-of (w7 / write-01 :arg0 (h6 / he)) :arg1-of (w8 / write-01 :arg0 (h7 / he)) :arg1-of (w9 / write-01 :arg0 (h8 / he)) :arg1-of (w10 / write-01 :arg0 (h9 / he)) :arg1-of (w11 / write-01 :arg0 (h10 / he)) :arg1-of (w12 / write-01 :arg0 (h11 / he)) :arg1-of (w13 / write-01 :arg0 (h12 / he)) :arg1-of (s / share-01 :arg0 (h13 / he)) :arg1-of (s2 / share-01 :arg0 (h14 / he)) :arg1-of (s3 / share-01 :arg0 (h15 / he)) :arg1-of (s4 / share-01 :arg0 (h16 / he)))
(a / and :op1 (b / be-located-at-91 :arg1 (a2 / and :op1 (s / she) :op2 (p / person :arg0-of (h / have-rel-role-91 :arg1 (s2 / she) :arg2 (f / friend)))) :arg2 (s3 / school :arg1-of (h2 / high-02))) :op2 (g / guy :mod (o / old :degree (m / more)) :arg0-of (t / try-01 :arg1 (t2 / teach-01 :arg0 (g2 / guy) :arg1 (p2 / play-11 :arg0 (g3 / guy) :arg2 (c / career))))))
(a / and :op1 (r / receive-01 :arg0 (p / police :mod (f / federal)) :arg1 (t / they)) :op2 (p2 / pass-07 :arg1 (t2 / they) :arg2 (r2 / register-02)))
(s / say-01 :arg0 (p / person :arg0-of (i / investigate-01)) :arg1 (t / total-01 :arg1 (t2 / total-01 :arg2 (o / over :op1 (m / monetary-quantity :quant 100 :unit (d / dollar)))) :arg2 (p2 / person :arg0-of (i2 / investigate-01))))
(p / published :arg0 (w / we) :arg1 (n / name :poss (y / you)) :arg1-of (h / have-condition-91 :arg2 (a / ask-01 :arg0 (y2 / you) :arg1 (h2 / have-polarity-91 :arg2 -))))
(c / contrast-01 :arg1 (r / react-01 :polarity - :arg0 (w / worm :name (n / name :op1 (n2 / nematode))) :arg1 (u / ultrasound :arg1 (w2 / worm)) :mod (u2 / usual)) :arg2 (f / find-02 :arg0 (p / person :name (n3 / name :op1 "Chalasani")) :arg1 (d / do-02 :arg0 (p2 / person) :arg1 (t / thing :time-of (s / surround-01 :arg1 (p3 / person) :arg2 (b / bubbles :mod (m / microscopic)) :manner (f2 / fluid))))))
(c / contrast-01 :arg1 (c2 / cut-02 :arg0 (a / actor :name (n / name :op1 (s / seasoned)) :mod (s2 / seasoned)) :arg1 (p / person :name (n2 / name :op1 "Brown"))) :arg2 (e / emphasize-01 :arg0 (p2 / person) :arg1 (n3 / need-01 :arg0 (p3 / person) :arg1 (p4 / perspective :mod (a2 / alternative) :topic (p5 / protagonist :arg0 (p6 / protagonist :arg1-of (b / black-04)) :arg1 (s3 / screenplay))))) :time (d / date-entity :decade (N / N-A)))
(e / eat-01 :arg0 (a / and :op1 (s / system :name (n / name :op1 (i / immune))) :op2 (s2 / system :name (n2 / name :op1 (i2 / immune))) :op3 (s3 / system :name (n3 / name :op1 (i3 / immune)) :poss (b / body))) :arg1 (f / fruit))
(h / have-03 :arg0 (g / guy :mod (o / one)) :arg1 (p / policy :arg0-of (c / cause-01 :arg1 (i / invited :polarity - :arg1 (d / door) :condition (l / locked :polarity - :arg1 (d2 / door))))))
(i / injure-01 :arg0 (p / person :name (n / name :op1 "Luke" :op2 "Shaw") :mod (n2 / nation :mod (f / football) :mod (f2 / football) :mod (c / country :name (n3 / name :op1 "United" :op2 "States"))) :mod (c2 / country)) :arg1 (i2 / injure-01 :arg1 (p2 / person) :mod (s / severe)) :arg3 (l / leg :part-of (p3 / person)) :manner (s2 / severe))
(d / describe-01 :arg0 (p / person :name (n / name :op1 "Niersbach")) :arg1 (s / support-01 :arg0 (p2 / person) :arg1 (r / refugee)) :arg2 (e / effort :mod (j / joint :mod (g / grand))) :manner (e2 / effort :mod (j2 / joint :mod (g2 / grand))))
(c / close-01 :arg1 (m / market :mod (s / stock) :mod (g / german)) :arg3 (g2 / gain-02) :time (a / after :op1 (o / over-long :arg1 (a2 / and :op1 (t / trade-01 :mod (a3 / aimless)) :op2 (t2 / trade-01 :mod (e / edgy))))))
(a / and :op1 (f / fall-01 :arg1 (s / share :poss (i / it)) :arg3 (a2 / about :op1 (p / percentage-entity :value (N / N-A))) :arg4 (a3 / ahead :op1 (t / temporal-quantity :quant (N2 / N-A) :unit (m / minute))) :time (a4 / ahead :op1 (o / open-01 :arg1 (w / wednesday)))))
(l / lie-08 :arg0 (h / he) :arg1 (p / police) :arg1-of (c / cause-01 :arg0 (s / stay-01 :arg1 (h2 / he) :arg3 (s2 / stay-01 :arg1 (h3 / he)))))
(v / violate-01 :arg1 (d / dignity :mod (h / human) :poss (m / man)) :arg1-of (v2 / view-02 :arg0 (t / they)))
(a / and :op1 (p / peeled :arg0 (h / he) :arg1 (r / rate-entity-91 :arg1 3 :arg2 (t / temporal-quantity :quant (N / N-A) :unit (y / year))) :time (i / immediate)) :op2 (l / look-01 :polarity - :arg0 (h2 / he) :direction (b / back)))
(s / say-01 :arg0 (p / police) :arg1 (p2 / phoned :arg0 (l / lamb) :arg1 (p3 / person :arg0-of (h / have-rel-role-91 :arg2 (r / relative))) :time (p4 / point :mod (s2 / some)) :purpose (t / tell-01 :arg0 (p5 / person) :arg1 (g / go-02 :polarity - :arg0 (p6 / person) :arg4 (j / jail)) :arg2 (p7 / person))))
(r / represent-01 :arg0 (h / he) :arg1 (a / and :op1 (p / person :ord (o / ordinal-entity :value 1) :arg0-of (h2 / have-org-role-91 :arg2 (h3 / head-of-state))) :op2 (s / step-01 :arg2 (t / tentatively))))
(w / want-01 :arg0 (p / person :name (n / name :op1 "Otmar" :op2 "Alt")) :arg1 (a / and :op1 (l / let-01 :arg0 (p2 / person) :arg1 (f / fall-01 :arg1 (p3 / person :arg0-of (v / view-01 :arg1 (p4 / person))) :arg4 (' / '' :arg0 (p5 / person) :arg1 (p6 / picture)))) :op2 (l2 / let-01 :arg0 (p7 / person) :arg1 (l3 / leave-15 :arg0 (p8 / person) :arg1 (i / invite-01 :arg0 (p9 / person) :arg1 (p10 / person)))) :purpose (a2 / and :op1 (d / discover-01 :arg0 (p11 / person)) :op2 (e / experience-01 :arg0 (p12 / person) :arg1 (a3 / and :op1 (d2 / discover-01 :arg0 (p13 / person) :arg1 (p14 / power)) :op2 (e2 / experience-01 :arg0 (p15 / picture) :arg1 (l4 / look-01 :arg0 (p16 / picture) :arg1 (s / stand :poss (p17 / picture)))))))))
(p / possible-01 :arg1 (o / offer-01 :arg0 (i / individual :arg1-of (p2 / private-03)) :arg1 (a / accommodation :arg1-of (s / simple-02) :topic (p3 / platform :mod (t / this)))))
(p / possible-01 :mode (i / interrogative) :arg1 (s / see-01 :arg0 (y / you) :arg1 (t / thing :arg0-of (c / cause-01 :arg1 (d / discuss-01 :arg1 (p2 / person :mod (t2 / that)) :frequency (o / often) :arg1-of (c2 / cause-01 :arg0 (a / and :op1 (o2 / original :polarity - :domain (p3 / person)) :op2 (d2 / distinctive :polarity - :domain (p4 / person) :mod (p5 / particular)))))))))
(h / have-concession-91 :arg1 (h2 / horrible :domain (g / grow-01 :arg1 (m / market :mod (l / labor))) :time (y / year :mod (t / this))) :arg2 (u / utilize-01 :arg1 (c / create-01 :arg1 (m2 / market :mod (l2 / labor)))))
(a / alone :domain (o / organization :name (n / name :op1 "Kingfisher")) :mod (a2 / alone :degree (a3 / almost)) :arg1-of (i / include-91 :arg2 (t / team :poss (o2 / organization) :arg2-of (i2 / include-01 :arg1 (a4 / and :op1 (p / person :arg0-of (h / have-org-role-91 :arg1 (c / country) :arg2 (e / executive :mod (c2 / chief)))) :op2 (p2 / person :arg0-of (h2 / have-org-role-91 :arg1 (c3 / country) :arg2 (d / director :mod (f / finance)))))))) :mod (a5 / almost))
(s / show-01 :arg0 (p / poll-01 :arg0 (p2 / publication :name (n / name :op1 "ABC")) :time (l / late :degree (m / most))) :arg1 (p3 / person :name (n2 / name :op1 "Trump")) :arg2 (a / ahead :op1 (p4 / person :name (n3 / name :op1 "Carson"))) :mod (a2 / also))
(c / contrast-01 :arg2 (s / suggest-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg2 (m / minister))) :arg1 (s2 / suggest-01 :polarity - :arg0 (c2 / country :name (n / name :op1 "Slovenia")) :arg1 (b / border-01 :arg1 (c3 / country) :arg2 (r / refugee)))))
(c / cause-01 :arg0 (t / this) :arg1 (p / possible-01 :arg1 (l / lead-03 :arg0 (w / warn-01 :arg0 (g / government-organization :arg0-of (g2 / govern-01 :arg1 (c2 / country :name (n / name :op1 "N-A")))) :arg2 (l2 / level :arg1-of (l3 / low-04 :degree (m / more) :mod (e / even)))) :arg2 (d / damage-01 :arg1 (s / system :mod (n2 / nervous))))))
(a / and :op1 (p / possible-01 :polarity - :arg1 (a2 / appease-01 :arg0 (p2 / person :arg0-of (h / have-org-role-91 :arg2 (p3 / personnel :mod (s / security)))) :arg1 (s2 / situation))) :op2 (c / call-02 :arg0 (p4 / person :arg1-of (e / employ-01)) :arg1 (s3 / situation)))
(c / contrast-01 :arg2 (w / want-01 :arg0 (h / he) :arg1 (w2 / write-01 :arg0 (h2 / he) :arg1 (i / it) :mod (i2 / international))))
(t / think-01 :mode (i / imperative) :polarity - :arg0 (y / you) :arg1 (s / start-01 :arg1 (u / university :location (r / relation-03 :arg0 (u2 / university) :arg2 (u3 / university)))) :mod (e / even))
(c / contrast-01 :arg1 (f / footballer :domain (h / he) :time (o / once :op1 (f2 / footballer :arg1 (h2 / he)))) :arg2 (w / wrestler :arg0 (p / person :name (n / name :op1 "Tim" :op2 "Wiese")) :arg1 (c2 / country :name (n2 / name :op1 "Germany") :arg0-of (p2 / play-11 :arg2 (a / and :op1 (o2 / openness) :op2 (p3 / person :name (n3 / name :op1 "Hoffenheim"))) :mod (a2 / also))) :time (n4 / now)))
(b / be-temporally-at-91 :arg2 (b2 / before :op1 (m / match-03 :location (s / stadium))))
(t / target-01 :arg1 (p / person :name (n / name :op1 "Michu")) :arg2 (h / hint :mod (r / retire-01)))
(h / have-03 :arg0 (p / person :name (n / name :op1 "Robert" :op2 "Lewandowski")) :arg1 (o / opportunity :mod (g / good :degree (m / most)) :location (h2 / half :ord (o2 / ordinal-entity :value 1))))
(d / decide-01 :polarity - :arg3 (p / percentage-entity :value (N / N-A)))
(a / and :op1 (d / drive-01 :arg0 (p / person :arg0-of (d2 / drive-01 :arg1 (l / lorry)) :mod (6 / 60-year-old)) :arg1 (c / cross-over :location (d3 / direction :poss (e / estate :mod (i / industry))))) :op2 (r / realised :arg0 (p2 / person) :arg1 (v / vehicle :quant 2 :arg1-of (s / stop-01 :location (f / front))) :time (l2 / late :degree (t / too))))
(m / multi-sentence :snt1 (a / adds :domain (a2 / adds :poss (p / person :arg0-of (h / have-rel-role-91 :arg1 (p2 / person) :arg2 (h2 / husband))) :prep-with (s / smile))) :snt2 (g / get-01 :arg0 (w / we) :arg1 (g2 / garden :quant 6000)))
(h / have-concession-91 :arg1 (r / refer-01 :arg0 (p / person :name (n / name :op1 "Matthias" :op2 "Machnig")) :arg1 (p2 / plan-01 :arg1 (p3 / progress-01 :arg1-of (m / major-02)))) :arg2 (p4 / person :arg0-of (h2 / have-org-role-91 :arg1 (s / state :mod (s2 / state)) :arg2 (s3 / secretary :mod (v / vice)))))
(r / report)
(m / multi-sentence :snt1 (p / prohibit-01 :arg0 (s / state :polarity - :mod (f / federal)) :arg1 (o / or :op1 (s2 / seeker :mod (m2 / malicious)) :op2 (p2 / person :prep-with (s3 / status :mod (r / refugee) :duration (l / long-03)))) :arg2 (o2 / or :op1 (p3 / person :arg0-of (h / have-org-role-91 :arg2 (h2 / head-of-state))) :op2 (p4 / person :arg0-of (h3 / have-org-role-91 :arg2 (s4 / senator))))) :snt2 (e / except-01 :arg1 (h4 / have-org-role-91 :arg0 (p5 / person :arg0-of (h5 / have-org-role-91 :arg1 (o3 / organization :name (n / name :op1 "Interior" :op2 "Frank" :op3 "Henkel")) :arg2 (s5 / senator)) :arg0-of (h6 / have-org-role-91 :arg1 (o4 / organization :name (n2 / name :op1 "Interior" :op2 "Frank" :op3 "Henkel")) :arg2 (s6 / senator))) :arg1 (s7 / stand-11 :arg0 (p6 / person))) :time (n3 / now)))
(s / say-01 :arg0 (p / plant :arg1-of (w / write-01 :arg0 (a / and :op1 (m / ministry :mod (g / german) :poss (p2 / person :arg0-of (h / have-org-role-91 :arg1 (o / organization :name (n / name :op1 "Green" :op2 "Bundestag")) :arg2 (m2 / member)))) :op2 (p3 / person :name (n2 / name :op1 "Annalena" :op2 "Baerbock") :arg0-of (h2 / have-org-role-91 :arg1 (o2 / organization) :arg2 (m3 / member))) :op3 (p4 / person :arg0-of (h3 / have-org-role-91 :arg1 (o3 / organization) :arg2 (m4 / member))) :op4 (p5 / person :arg0-of (h4 / have-org-role-91 :arg1 (o4 / organization) :arg2 (m5 / member))) :op5 (p6 / person :arg0-of (h5 / have-org-role-91 :arg1 (o5 / organization) :arg2 (m6 / member)))))) :arg1 (r / rate-entity-91 :arg1 (m7 / more-than :op1 (m8 / mass-quantity :quant (N / N-A) :unit (k / kilogram))) :arg2 (t / temporal-quantity :quant (N2 / N-A) :unit (y / year)) :location (c / country :name (n3 / name :op1 "Germany"))))
(h / hardly :domain (o / or :op1 (s / shop) :op2 (w / wholesalers) :arg1-of (p / private-03) :mod (a / any)) :time (n / now) :mod (h2 / hardly))
(h / have-concession-91 :arg1 (a / anticipate-01 :polarity - :arg1 (r / risk-01 :arg2 (h2 / health :mod (p / population :arg1-of (g / general-02))))) :arg2 (a2 / and :op1 (p2 / person :arg0-of (h3 / have-org-role-91 :arg2 (m / minister :mod (e / environment)))) :op2 (p3 / person :arg0-of (h4 / have-org-role-91 :arg2 (m2 / minister :mod (e2 / environment))))))
(( / ( :( (n / name) :op1 "Hewlett-Packard")
(c / cut-02 :arg0 (o / organization :name (n / name :op1 "Hewlett" :op2 "Packard")) :arg1 (j / job :quant 30,000 :mod (f / further)))
FAILED_TO_PARSE#Number of opening and closing brackets doesn't match.
(c / contrast-01 :arg1 (n / need-01 :arg0 (r / refugee :mod (o / only :polarity -)) :arg1 (a / accommodation)) :arg2 (a2 / and :op1 (h / have-03 :arg0 (a3 / and :op1 (p / person :arg0-of (h2 / have-rel-role-91 :arg2 (s / significant-other))) :op2 (p2 / person :mod (g / garden :arg1-of (l / low-04)))) :arg1 (r2 / refugee) :mod (a4 / also))))
(g / good :domain (c / campaign-01 :mod (v / visibility :arg1-of (h / high-02)) :mod (t / this)) :arg1-of (c2 / cause-01 :arg0 (a / amr-unknown)) :arg1-of (c3 / cause-01 :arg0 (a2 / amr-unknown)))
(f / finish-01 :arg1 (s / select-01 :arg1 (' / '' :arg1-of (g / general-02)) :location (a / area :mod (i / industry) :poss (p / person :name (n / name :op1 "Lintz")))) :manner (o / official))
(c / complex :mod (e / extreme) :domain (o / organize-01 :arg1 (p / person :quant 120,000 :arg1-of (e2 / employ-01))) :time (n / now))
(s / stand-01 :arg1 (p / person :mod (t / three)) :arg2 (s2 / station :consist-of (p2 / petrol)))
(s / say-01 :arg0 (t / thing :arg1-of (o / opine-01 :location (c / country :name (n / name :op1 "Hungary")))) :arg1 (' / '' :arg0 (c2 / country :name (n2 / name :op1 "Serbia")) :arg1 (c3 / country :ord (o2 / ordinal-entity :value 3) :mod (s2 / safe-01))))
(s / say-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (o / organization :name (n / name :op1 "Channel" :op2 "4")) :arg2 (c / chairman) :time (f / former)) :arg0-of (h2 / have-org-role-91 :arg1 (o2 / organization) :arg2 (c2 / chairman) :time (f2 / former)) :arg0-of (h3 / have-org-role-91 :arg1 (o3 / organization) :arg2 (c3 / chairman) :time (f3 / former)) :arg0-of (h4 / have-org-role-91 :arg1 (o4 / organization) :arg2 (c4 / chairman) :time (f4 / former)) :arg0-of (h5 / have-org-role-91 :arg1 (o5 / organization) :arg2 (c5 / chairman) :time (f5 / former)) :arg0-of (h6 / have-org-role-91 :arg1 (o6 / organization) :arg2 (c6 / chairman) :time (f6 / former)) :arg0-of (h7 / have-org-role-91 :arg1 (o7 / organization) :arg2 (c7 / chairman) :time (f7 / former)) :arg0-of (h8 / have-org-role-91 :arg1 (o8 / organization) :arg2 (c8 / chairman) :time (f8 / former)) :arg0-of (h9 / have-org-role-91 :arg1 (o9 / organization) :arg2 (c9 / chairman) :time (f9 / former)) :arg0-of (h10 / have-org-role-91 :arg1 (o10 / organization) :arg2 (c10 / chairman))) :arg1 (g / give-01 :arg0 (p2 / person :arg0-of (r / rival-01 :arg1 (c11 / country) :mod (c12 / commerce)) :mod (c13 / commerce)) :arg1 (a / arm :mod (r2 / right) :poss (p3 / person)) :purpose (h11 / hit-01 :arg0 (p4 / person) :arg1 (s2 / show-04 :arg1 (s3 / soap :mod (l / location :name (n2 / name :op1 "Albert" :op2 "Square")))))))
(s / supply-01 :polarity - :arg1 (a / and :op1 (l / language :mod (g / general-02)) :op2 (l2 / language :mod (w / work-related))) :mod (s2 / still) :time (t / to-date))
(p / possible-01 :arg1 (s / stepped :arg1 (p2 / project) :time (n / now) :mod (e / even)))
(c / contrast-01 :arg2 (i / insist-01 :arg0 (p / person :name (n / name :op1 "Viktor" :op2 "Orban") :arg0-of (h / have-org-role-91 :arg2 (m / minister :mod (p2 / prime)))) :arg1 (a / and :op1 (s / seek-01 :arg0 (p3 / person :arg0-of (s2 / specialize-01 :arg1 (e / economy)) :quant (m2 / most)) :arg1 (l / life :mod (g / good :degree (m3 / more)))) :op2 (e2 / entitled :polarity - :arg1 (r / refugee) :arg2 (p4 / protect-01 :arg0 (r2 / refugee) :arg1 (n2 / nation :mod (o / other) :arg2-of (i2 / include-01 :arg1 (c2 / country :name (n3 / name :op1 "Germany")))) :manner (s3 / sharp))))))
(s / say-01 :arg0 (o / organization :name (n / name :op1 "Deutsche" :op2 "Bank")) :arg1 (r / rate-entity-91 :arg1 (s2 / several :op1 (t / temporal-quantity :quant (N / N-A) :unit (y / year)) :mod (o2 / only)) :arg2 (t2 / temporal-quantity :quant (N2 / N-A) :unit (y2 / year)) :location (b / below :op1 (p / product-of :op1 118 :op2 1950))))
(a / and :op1 (f / form-01 :arg1 (l / line :mod (p / police)) :location (b / behind :op1 (i / it))) :op2 (s / stand-01 :arg1 (p2 / person :arg0-of (h / have-org-role-91 :arg1 (p3 / police) :arg2 (c / cannons :mod (w / water)))) :arg2 (p4 / person :arg1-of (r / ready-02))))
(i / increase-01 :polarity - :arg1 (t / thing :arg2-of (p / price-01 :arg1 (o / organization :name (n / name :op1 "Astra") :mod (n2 / new)))) :arg1-of (s / significant-02))
(o / open-01 :arg1 (a / area :quant (m / more)) :arg4 (i / invest-01 :arg1-of (p / private-03)) :arg1-of (c / cause-01 :arg0 (b / bid-03 :arg1 (o2 / open-up-03 :arg1 (s / sector :mod (s2 / state-controlled))))))
(s / subject-01 :arg1 (p / plan-01 :mod (c / construct-01)) :arg2 (v / variation) :time (s2 / since :op1 (e / exist-01 :polarity - :arg1 (t / this) :time (y / yet))))
(e / explode-01 :arg0 (m / media :mod (s / social)) :arg1-of (c / cause-01 :arg0 (c2 / comment-01 :arg0 (p / person :name (n / name :op1 "Damon")))) :time (a / after :op1 (d / discuss-01)))
(h / highlight-01 :arg1 (h2 / highlight-01 :arg1 (m / mannequins :arg1 (h3 / human)) :arg0-of (l / look-02 :arg1 (p / projection :arg1 (h4 / human)))))
(h / hundreds :arg1 (r / refugee) :location (l / location :name (n / name :op1 "Wiesbaden")))
(t / take-01 :arg0 (p / person :name (n / name :op1 "Müller")) :arg1 (l / lead-02 :arg0 (o / organization :name (n2 / name :op1 "Bayern"))) :arg2 (l2 / lead-02 :arg0 (p2 / person) :arg1 (p3 / person :name (n3 / name :op1 "Roberto") :arg0-of (l3 / let-01 :arg1 (c / cross-02 :arg0 (p4 / person) :arg1 (c2 / champion :arg1-of (c3 / cross-02 :arg0 (w / world))) :arg1-of (c4 / cross-02 :arg0 (w2 / world)))) :mod (g / gracious))) :manner (g2 / goal :ord (o2 / ordinal-entity :value 28) :poss (h / he)))
(c / contrast-01)
(i / interpreted :arg0 (t / texts :arg1-of (s / select-01 :arg0 (a / and :op1 (p / person :name (n / name :op1 "Otmar" :op2 "Alt")) :op2 (t2 / translated :mod (' / ''))))) :arg1 (t3 / they) :time (d / day :time (c / current)) :medium (c2 / context :mod (t4 / topic)))
(c / cause-01 :arg1 (o / obligate-01 :arg2 (a / agree-01 :arg0 (p / person :arg0-of (r / represent-01 :arg1 (r2 / religious-group :name (n / name :op1 "Islam")))) :arg1 (a2 / and :op1 (c2 / clear-01 :arg0 (p2 / person) :arg1 (p3 / point :mod (c3 / contact-01))) :op2 (r3 / ready-02 :arg1 (p4 / person) :arg2 (c4 / cooperate-01 :arg0 (p5 / person) :arg1 (s / state) :arg2 (s2 / state :location (a3 / area :quant (m / many))))) :op3 (o2 / option :purpose (c5 / control-01 :arg1 (c6 / control-01) :mod (c7 / certain)))))))
(a / adjourned :arg1 (c / case :time (c2 / current)))
(s / say-01 :arg0 (s2 / survey-01 :arg0 (o / organization :name (n / name :op1 "FactSet"))) :arg1 (e / expect-01 :arg0 (p / person :arg0-of (a / analyze-01)) :arg1 (m / monetary-quantity :quant 10.84 :unit (d / dollar))))
(c / coverage :arg1 (b / book) :location (o / on :op1 (g / gold)))
(c / celebrates :arg0 (p / person :name (n / name :op1 "Angel" :op2 "Di" :op3 "Maria")) :arg1 (a / and :op1 (p2 / person :name (n2 / name :op1 "Blaise" :op2 "Matuidi")) :op2 (p3 / person :name (n3 / name :op1 "Edinson" :op2 "Cavani"))) :time (a2 / after :op1 (o / oppose-01 :arg0 (p4 / person) :arg1 (l / location :name (n4 / name :op1 "Malmo")))))
(a / and :op1 (t / twittered :arg0 (p / person :name (n / name :op1 "Magnussen")) :arg1 (p2 / photo :topic (d / damage-01))) :op2 (e / explain-01 :arg0 (p3 / person) :arg1 (i / injure-01 :arg1 (p4 / person) :arg1-of (f / fall-01 :arg4 (b / bike)))))
(t / tell-01 :arg0 (p / person :name (n / name :op1 "Ortoria" :op2 "Scott") :arg0-of (h / have-rel-role-91 :arg1 (p2 / person :name (n2 / name :op1 "Nhaijah")) :arg2 (m / mother))) :arg1 (p3 / person :arg0-of (h2 / have-rel-role-91 :arg1 (p4 / person) :arg2 (m2 / mother))) :arg2 (p5 / publication :name (n3 / name :op1 "CNN")) :degree (v / very))
(a / and :op1 (a2 / allergic :arg1 (p / person :arg0-of (t / teach-01)) :degree (h / high)) :op2 (b / ban-01 :arg0 (p2 / person) :arg1 (i / it) :arg2 (r / room :part-of (s / she))) :degree (h2 / high))
(a / and :op1 (r / reasonably :arg1 (i / item)) :op2 (s / sell-01 :arg1 (i2 / item) :arg2 (i3 / item :quant (n / number)) :location (b / bulk)))
(a / and :op2 (r / report-01 :arg0 (a2 / and :op1 (m / media :mod (c / croatian)) :op2 (m2 / media :mod (s / serbian))) :arg1 (d / diverted :arg1 (b / bus :source (l / location :name (n / name :op1 "Presevo") :location (b2 / border-01 :arg2 (b3 / border-01 :arg2 (b4 / border-01 :arg2 (c2 / country :name (n2 / name :op1 "Croatia"))))))) :arg2 (d2 / diverted :arg1 (b5 / bus) :arg2 (b6 / border-01 :arg2 (h / hungarian)) :time (n3 / now)))))
(r / receive-01 :arg0 (a / and :op1 (p / person :arg0-of (h / have-org-role-91 :arg2 (a2 / authority :mod (b / bank :mod (s / state))))) :op2 (p2 / person :arg1-of (l / local-02) :arg0-of (h2 / have-org-role-91 :arg2 (a3 / authority)))) :arg1 (p3 / person :arg0-of (h3 / have-org-role-91 :arg2 (a4 / authority :mod (b2 / bank :mod (s2 / state))))) :manner (w / well) :time (a5 / already))
(t / time :arg1-of (s / same-01) :time (t2 / time :arg1-of (s2 / same-01)))
(s / say-01 :arg0 (p / police) :arg1 (b / be-located-at-91 :arg1 (n / number :quant-of (p2 / person :mod (h / huntsmen))) :arg2 (f / field :mod (c / corn) :arg1-of (n2 / near-02 :arg2 (r / relative-position :op1 (l / location :name (n3 / name :op1 "Pratau")) :direction (d / district))))))
(m / mix-01 :arg0 (m2 / military :name (n / name :op1 "N-A")) :arg1 (m3 / mouthwash :mod (a / alcohol-containing)) :arg2 (m4 / mouthwash :mod (s / stiffer)) :arg1-of (r / report-01))
(o / over :domain (c / crisis))
(a / and :op1 (s / stand-01 :arg1 (p / person :arg0-of (c / consume-01)) :arg2 (p2 / person :arg0-of (c2 / consume-01))) :op2 (b / benefit-01 :arg0 (d / dollar :arg1-of (r / rise-01)) :arg1 (p3 / person)))
(l / look-01 :mode (i / imperative) :arg0 (y / you) :arg1 (t / thing :degree-of (p / possible-01 :arg1 (r / react-01 :arg0 (a / area :mod (s / some) :part-of (e / economy)) :arg1-of (p2 / possible-01) :arg1-of (b / base-02 :arg2 (t2 / trend :mod (h / history)))))))
(m / multi-sentence :snt2 (w / write-01 :arg0 (p / person :arg0-of (r / research-01))) :snt2 (w2 / write-01 :arg0 (p2 / person :arg0-of (r2 / research-01))))
(i / important :mod (a / also) :domain (f / found-01 :arg1 (p / person :arg0-of (f2 / found-01 :arg1 (w / welfare :mod (r / religious-group :name (n / name :op1 "N-A")) :arg1-of (o / organize-01))))) :mod (a2 / also))
(m / multi-sentence :snt1 (a / and :op1 (s / sell-01 :arg0 (s2 / shop :location (l / location :name (n / name :op1 "Furla"))) :arg1 (b / business :location-of (s3 / sell-01 :arg0 (s4 / she) :arg1 (a2 / and :op1 (b2 / bag) :op2 (c / case-03) :op3 (s5 / shoe) :op4 (g / garments) :source (c2 / company :arg1-of (d / differ-02) :arg0-of (m2 / manufacture-01))))) :arg2 (b3 / business :location (l2 / location :name (n2 / name :op1 "Furla")))) :op2 (p / possible-01 :arg1 (o / obtain-01 :arg1 (e / everything)))) :snt2 (p2 / possible-01 :arg1 (o2 / obtain-01 :arg1 (t / thing :quant 75))))
(c / contrast-01 :arg1 (o / obligate-01 :arg1 (p / parliament) :arg2 (a / approve-01 :arg0 (p2 / parliament) :arg1 (d / deploy-01 :arg1 (m / military)) :mod (s / still) :time (w / week :mod (n / next)))) :arg2 (s2 / see-01 :arg0 (p3 / person :arg0-of (r / report-01) :location (b / border-01 :arg2 (b2 / border))) :arg1 (a2 / and :op1 (p4 / person :arg0-of (h / have-org-role-91 :arg1 (m2 / military :arg1-of (a3 / arm-01)) :arg2 (p5 / personnel))) :op2 (d2 / dog)) :duration (t / temporal-quantity :quant (N / N-A) :unit (d3 / day)) :manner (h2 / heavy)))
(c / contrast-01 :arg1 (c2 / clear-06 :polarity - :arg1 (g / go-02 :arg0 (p / person :name (n / name :op1 "Lamb")) :arg4 (h / home)) :time (i / immediate)) :arg2 (s / say-01 :arg0 (p2 / person :name (n2 / name :op1 "Johnson")) :arg1 (b / believe-01 :arg0 (p3 / person) :arg1 (k / know-02 :arg0 (p4 / person) :arg1 (p5 / person :arg0-of (l / live-01 :location (t / there)))))))
(p / produce-01 :arg1 (p2 / potential :arg1-of (i / increase-01)) :arg1-of (b / base-02 :arg2 (e / era :mod (s / style) :time (p3 / past)) :arg1-of (b2 / base-02 :arg2 (e2 / era :mod (s2 / style)))) :arg1-of (g / general-02))
(h / hit-01 :arg0 (w / woman :mod (y / young)) :arg1 (t / train :mod (g / good)) :arg2 (w2 / woman))
(a / at-least :op1 (a2 / at-least))
(r / report-01 :arg1 (' / '' :mod ('2 / '')) :time (f / first))
(c / contrast-01 :arg2 (s / suffice-01 :polarity - :arg0 (d / deter-01 :arg0 (f / fail-01 :arg1 (h / he) :arg2 (a / appear-01 :arg1 (h2 / he))) :arg1 (h3 / he))))
(m / multi-sentence :snt1 (p / probable :domain (g / game :mod (g2 / good :domain (o / organization :name (n / name :op1 "Broncos"))))) :snt2 (c / contrast-01 :arg1 (w / watch-01 :polarity - :arg0 (i / i) :arg1 (g3 / game) :time (y / yet)) :arg2 (a / amr-unknown :li 16-12)))
(c / contrast-01 :arg1 (w / work-01 :arg0 (h / he) :arg2 (a / architect :mod (f / freelance))) :arg2 (a2 / and :op1 (p / person :arg0-of (w2 / write-01)) :op2 (p2 / person :arg0-of (w3 / write-01)) :op3 (p3 / person :arg0-of (w4 / write-01)) :mod (a3 / also)))
(p / put-01 :arg0 (t / they) :arg1 (t2 / they) :arg2 (e / event :name (n / name :op1 "N-A") :location-of (w / watch-01 :arg0 (n2 / no-one) :arg1 (t3 / they) :time (e2 / ever))))
(m / mr :polarity - :arg0 (t / thing :arg1-of (d / decide-01 :arg0 (p / person :name (n / name :op1 "Corbyn")))) :arg1 (a / attend-02 :arg1 (p2 / park :name (n2 / name :op1 "N-A") :mod (n3 / nation))))
(s / say-01 :arg0 (p / person :name (n / name :op1 "Veronique" :op2 "Laury") :arg0-of (h / have-org-role-91 :arg1 (o / organization :name (n2 / name :op1 "Kingfisher")) :arg2 (e / executive :mod (n3 / new) :mod (n4 / new))) :arg0-of (o2 / own-01 :arg1 (c / chain :arg0-of (i / improve-01 :arg1 (h2 / home)))) :arg0-of (h3 / have-org-role-91 :arg1 (o3 / organization :name (n5 / name :op1 "Kingfisher")) :arg2 (e2 / executive :mod (n6 / new))) :arg0-of (o4 / own-01 :arg1 (c2 / chain :arg0-of (i2 / improve-01 :arg1 (h4 / home)))) :arg0-of (h5 / have-org-role-91 :arg1 (o5 / organization) :arg2 (e3 / executive :mod (n7 / new))) :arg0-of (h6 / have-org-role-91 :arg1 (o6 / organization) :arg2 (e4 / executive :mod (n8 / new))) :arg0-of (h7 / have-org-role-91 :arg1 (o7 / organization) :arg2 (e5 / executive :mod (n9 / new))) :arg0-of (h8 / have-org-role-91 :arg1 (o8 / organization) :arg2 (e6 / executive :mod (n10 / new))) :arg0-of (h9 / have-org-role-91 :arg1 (o9 / organization) :arg2 (e7 / executive :mod (n11 / new))) :arg0-of (h10 / have-org-role-91 :arg1 (o10 / organization) :arg2 (e8 / executive :mod (n12 / new)))))
(p / propose-01 :arg0 (o / organization :name (n / name :op1 "EU" :op2 "Commission") :part-of (o2 / organization :name (n2 / name :op1 "EU" :op2 "Commission"))) :arg1 (r / reform-01 :arg0 (o3 / organization) :arg1 (s / system :time (c / current) :poss (s2 / system)) :degree (s3 / substantial)) :purpose (d / defuse-01 :arg0 (o4 / organization) :arg1 (c2 / controversy) :arg2 (o5 / organization :arg1-of (p2 / plan-01))))
(s / splitting :arg0 (g / group) :arg1 (b / business :poss (g2 / group)) :time (c / current) :arg1-of (c2 / cause-01 :arg0 (a / and :op1 (c3 / combine-01 :arg1 (a2 / and :op1 (c4 / computer) :op2 (s2 / side :mod (p / printer))) :arg2 (c5 / company :mod (n / new)) :time (y / year :mod (t / this))) :op2 (c6 / combine-01 :arg1 (a3 / and :op1 (c7 / computer) :op2 (s3 / side :mod (p2 / printer))) :arg2 (a4 / area :mod (n2 / new) :part-of (a5 / and :op1 (s4 / server :mod (c8 / computer)) :op2 (s5 / storage :mod (d / data))) :beneficiary (b2 / business) :mod (a6 / as-well))))) :location (l / location :name (n3 / name :op1 "Palo" :op2 "Alto")))
(c / construct-01 :arg1 (c2 / construct-01) :duration (t / temporal-quantity :quant (N / N-A) :unit (m / month)))
FAILED_TO_PARSE#Number of opening and closing brackets doesn't match.
(m / multi-sentence :snt1 (s / set-02 :arg0 (c / club :name (n / name :op1 (c2 / club) :op2 (c3 / club))) :arg1 (r / rate-entity-91 :arg1 1000 :arg2 (t / temporal-quantity :quant (N / N-A) :unit (m2 / month))) :arg3 (r2 / rate-entity-91 :arg1 1000 :arg2 (t2 / temporal-quantity :quant (N2 / N-A) :unit (m3 / month)))) :snt2 (a / add-01 :arg0 (h / he)))
FAILED_TO_PARSE#Number of opening and closing brackets doesn't match.
(b / be-located-at-91 :arg1 (t / this) :arg2 (t2 / thing :arg1-of (s / state-01 :arg0 (d / descendant :poss (h / he)) :frequency (s2 / sometimes))))
(s / split-01 :arg1 (v / view-02 :arg0 (p / public) :arg1 (t / this)) :arg2 (b / back) :time (a / after :op1 (c / come-01 :arg1 (i / issue-02) :arg4 (l / light) :quant (s2 / short))))
(a / and :op1 (c / carry-out-03 :arg0 (p / person) :arg1 (e / errands :poss (p2 / person))) :op2 (o / of :arg0 (s / some :arg1-of (i / include-91 :arg2 (s2 / strolling :mod (w / walk-01))) :quant (s3 / some)) :location (a2 / along :op1 (f / fashioned :mod (l / leisurely)))))
(c / cite-01 :arg1 (p / phenomenon :arg1-of (b / black-04) :arg1-of (i / import-01 :arg2 (c2 / country :name (n / name :op1 "America"))) :arg1-of (i2 / import-01 :arg2 (c3 / country)) :quant (m / multiple :op1 1) :arg1-of (i3 / include-91 :arg2 (r / reason :arg0-of (c4 / cause-01 :arg1 (s / sell-01 :mod (c5 / cyber)))))))
(m / multi-sentence :snt1 (p / possible-01 :arg1 (c / calculator :arg0 (y / you) :arg1 (b / bmi :poss (y2 / you)) :location (h / here))) :snt2 (1 / 1d0zqdv :quant 1 :mod (u / usa.gov)))
(a / attack-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (p2 / person :name (n / name :op1 "Damien" :op2 "Collins")) :arg2 (m / mp))) :arg1 (o / organization :name (n2 / name :op1 "Voice")))
(f / find-01 :arg0 (d / dropshipper) :arg1 (p / phase :mod (c / construct-01 :arg1 (l / location :name (n / name :op1 "Rhein" :op2 "Boulevard"))) :ord (o / ordinal-entity :value 3)))
(s / schedule-01 :arg1 (p / point :mod (t / this)) :arg3 (p2 / part :part-of (a / agenda) :arg1-of (o / open-05 :polarity - :arg2 (p3 / public))) :mod (o2 / original))
(d / decline-02 :arg0 (o / organization :name (n / name :op1 "Metcash")) :arg1 (r / respond-01 :arg0 (o2 / organization) :arg1 (c / comment-01 :arg0 (p / person :name (n2 / name :op1 "Douglass")) :arg1-of (p2 / public-02)) :arg2 (p3 / public)))
(h / have-03 :arg0 (u / unit :arg0-of (l / live-01) :mod (e / each)) :arg1 (a / and :op1 (r / rifle :quant 2) :op2 (b / bathroom :quant 1) :op3 (k / kitchen :quant 1) :op4 (m / military :name (n / name :op1 "N-A"))))
(n / need-01 :arg0 (w / we) :arg1 (s / support-01 :arg1 (o / organization :name (n2 / name :op1 "Celtic"))) :mod (r / really) :arg1-of (c / cause-01 :arg0 (m / make-02 :arg0 (t / that) :arg1 (g / good :degree (m2 / more :degree (m3 / much))))) :mod (r2 / really))
(s / stick-01 :arg1 (r / refugee :mod (d / desperate)) :arg2 (r2 / route :location (w / world-region :name (n / name :op1 "Balkan"))) :time (c / current))
(a / and :op1 (l / last-01 :arg1 (s / strike-01 :arg1 (a2 / and :op1 (c / centre :mod (h / health) :mod (c2 / city)) :op2 (d / doctor :mod (h2 / hospital)))) :arg2 (t / temporal-quantity :quant (N / N-A) :unit (m / month))) :op2 (r / rise-01 :arg1 (s2 / strike-01) :arg2 (d2 / discuss-01 :arg0 (s3 / strike-01) :arg1 (t2 / thing :manner-of (p / possible-01 :arg1 (c3 / compromise-01 :arg0 (s4 / strike-01 :arg2 (p2 / person :arg0-of (h3 / have-rel-role-91 :arg2 (p3 / patient))))))))))
(c / clear-06 :polarity - :arg1 (a / and :op1 (c2 / clear-01 :arg1 (c3 / cat :mod (r / rubber) :arg1-of (k / kill-01 :arg1-of (p / possible-01 :polarity -))) :arg2 (a2 / alternative :mod (l / less-lethal))) :op2 (p2 / produce-01 :arg0 (c4 / cat) :arg1 (s / salary :mod (d / die-01 :arg1-of (h / high-02)) :mod (s2 / such)) :manner (a3 / apparent))) :time (i / immediate))
(a / amr-unknown :topic (a2 / and :op1 (s / school) :op2 (n / nurseries)))
(b / beat-03 :arg0 (i / i) :arg1 (t / they) :arg2 (p / place :poss (t2 / they)) :time (i2 / immediate))
(s / say-01 :arg0 (c / company) :arg1 (e / expect-01 :arg0 (c2 / company) :arg1 (g / grow-01 :arg1 (e2 / earnings) :time (y / year :mod (p / previous)) :arg1-of (c3 / cause-01 :arg0 (a / and :op1 (r / revenue :arg1-of (h / high-02 :degree (m / more))) :op2 (r2 / revenue :arg1-of (h2 / high-02 :degree (m2 / more)))) :location (c4 / commerce :mod (o / online)))) :mod (s2 / still)))
(c / contrast-01 :arg2 (h / help-01 :polarity - :arg0 (p / person :name (n / name :op1 "Marx")) :arg1 (d / decide-01 :arg0 (g / government-organization :arg0-of (g2 / govern-01) :mod (t / tomorrow?s)))))
(s / say-01 :arg0 (t / thing :arg1-of (e / estimate-01 :arg0 (w / we))) :arg1 (o / oppose-01 :arg0 (t2 / this) :arg1 (a / and :op1 (v / value :mod (p / parliament)) :op2 (p2 / principle :mod (d / dialogue-01 :arg1-of (o2 / open-04))))))
(m / multi-sentence :snt1 (d / discordant :mode (i / interrogative) :arg0 (o / one)) :snt2 (s / sote :mode (i2 / interrogative) :arg0 (p / person :name (n / name :op1 "Siun")) :arg1 (p2 / package :topic (a / and :op1 (h / healthcare) :op2 (w / welfare :mod (s2 / social))))))
(o / or :op2 (s / send-01 :arg0 (y / you) :arg1 (t / they) :arg2 (n / number :mod (i / international)) :condition (o2 / outside :op1 (c / country :name (n2 / name :op1 "UK")))))
(m / multi-sentence :snt1 (t / tell-01 :mode (i / interrogative) :arg0 (p / person :name (n / name :op1 "Sipilä") :arg0-of (h / have-org-role-91 :arg2 (m2 / minister :mod (p2 / prime)))) :arg1 (c / cause-01 :arg0 (a / amr-unknown) :arg1 (h2 / hide-01 :arg0 (p3 / person) :arg1 (f / fund :poss (p4 / person) :topic (a2 / and :op1 (s / sit-01 :arg1 (p5 / person) :arg2 (p6 / pal :mod (t2 / tax) :poss (p7 / person))) :op2 (c2 / create-01 :arg0 (p8 / person) :arg1 (a3 / act-01 :arg0 (p9 / person) :arg1 (p10 / pal :beneficiary (p11 / pal :mod (t3 / tax) :poss (p12 / person))))))))) :time (s2 / speak-01 :arg0 (p13 / person))) :snt2 (a4 / and :op1 (h3 / hide-01 :arg0 (p14 / person :arg0-of (h4 / have-org-role-91 :arg2 (m3 / minister :mod (p15 / prime)))) :arg1 (f2 / fund :poss (p16 / person))) :op2 (a5 / argue-01 :arg0 (p17 / person) :arg1 (o / obligate-01 :arg1 (p18 / person) :arg2 (c3 / cut-off-04 :arg0 (p19 / person) :arg1 (m4 / money :arg1-of (h5 / have-03 :arg0 (p20 / person))) :arg2 (p21 / person)))) :time (a6 / ask-01 :arg0 (p22 / person) :arg2 (p23 / person))))
(m / multi-sentence :snt1 (t / tell-01 :mode (i / interrogative) :arg0 (p / person :name (n / name :op1 "Sipilä") :arg0-of (h / have-org-role-91 :arg2 (m2 / minister :mod (p2 / prime)))) :arg1 (c / cause-01 :arg0 (a / amr-unknown) :arg1 (h2 / hide-01 :arg0 (p3 / person) :arg1 (f / fund :poss (p4 / person) :topic (a2 / and :op1 (s / sit-01 :arg1 (p5 / person) :arg2 (p6 / pal :mod (t2 / tax) :poss (p7 / person))) :op2 (c2 / create-01 :arg0 (p8 / person) :arg1 (a3 / act-01 :arg0 (p9 / person) :arg1 (p10 / pal :beneficiary (p11 / pal :mod (t3 / tax) :poss (p12 / person))))))))) :time (s2 / speak-01 :arg0 (p13 / person))) :snt2 (a4 / and :op1 (h3 / hide-01 :arg0 (p14 / person :arg0-of (h4 / have-org-role-91 :arg2 (m3 / minister :mod (p15 / prime)))) :arg1 (f2 / fund :poss (p16 / person))) :op2 (a5 / argue-01 :arg0 (p17 / person) :arg1 (o / obligate-01 :arg1 (p18 / person) :arg2 (c3 / cut-off-04 :arg0 (p19 / person) :arg1 (m4 / money :arg1-of (h5 / have-03 :arg0 (p20 / person))) :arg2 (p21 / person)))) :time (a6 / ask-01 :arg0 (p22 / person) :arg2 (p23 / person))))
(a / advertise-01 :arg1-of (p / produce-01 :arg0 (o / organization :name (n / name :op1 "Special" :op2 "Patrol" :op3 "Group")) :mod (c / collective)))
(s / say-01 :arg0 (t / thing :arg1-of (s2 / state-01)) :arg1 (d / drawn :arg1 (a / and :op1 (a2 / and :op1 (s3 / sector :mod (i / identifying)) :op2 (s4 / sector :mod (i2 / identifying))) :mod (n / negative)) :op2 (d2 / drawn :arg1 (a3 / and))))
(s / say-01 :arg0 (h / he) :arg1 (c / come-04 :polarity - :arg1 (t / turmoil :time (l / late :degree (m / most))) :arg2 (l2 / level :mod (t2 / that))))
(s / say-01 :arg0 (p / person :name (n / name :op1 "Berner")) :arg1 (n2 / notice-03 :arg0 (s2 / she) :arg1 (r / resign-01 :arg0 (s3 / she)) :time (y / year :mod (t / this))) :time (a / already))
(s / say-01 :arg0 (p / person :name (n / name :op1 "Berner")) :arg1 (n2 / notice-03 :arg0 (s2 / she) :arg1 (r / resign-01 :arg0 (s3 / she)) :time (y / year :mod (t / this))) :time (a / already))
(m / move-01 :arg1-of (s / smart-06) :source (l / location :name (n / name :op1 "Sipilä")))
(s / shoot-02 :location (l / location :name (n / name :op1 "Joburg")))
(b / be-temporally-at-91 :arg1 (i / it) :arg2 (b2 / before :op1 (e / elect-01) :quant (a / almost :op1 (t / temporal-quantity :quant (N / N-A) :unit (m / month)))))
(c / cause-01 :arg0 (p / purchase-01 :arg0 (m / ministry) :arg1 (s / service :mod (t / traffic) :arg1-of (p2 / purchase-01 :arg0 (m2 / ministry)))) :arg1 (o / over :quant (o2 / over :op1 (1 / 1/2))))
(h / have-purpose-91 :arg1 (n / negotiate-01 :arg2 (c / cooperate-01 :arg2 (e / employee)) :mod (u / university)) :arg2 (n2 / negotiate-01 :arg0 (u2 / university) :arg1 (p / person :quant (w / whole) :arg2-of (s / staff-01)) :arg0-of (c2 / concern-02 :arg1 (g / goal :mod (s2 / save-01 :mod (u3 / ultra))))))
(a / agony :arg1 (t / title :mod (d / dear)))
(s / say-01 :arg0 (p / person :arg0-of (r / research-01) :arg0-of (l / lead-02 :arg1 (a / and :op1 (p2 / person :name (n / name :op1 "Chih-Cheng" :op2 "Hsu")) :op2 (c / colleagues))) :arg0-of (r2 / research-01)) :arg1 (c2 / contrast-01 :arg2 (r3 / reduce-01 :polarity - :arg0 (a2 / and :op1 (b / better :mod (g / good :degree (m / more)) :mod (t / this)) :op2 (l2 / level :arg1-of (i / improve-01))) :arg1 (r4 / rate-entity-91 :arg1 (r5 / rate :mod (m2 / mortality)) :arg2 (t2 / temporal-quantity :quant (N / N-A) :unit (y / year))))))
(c / cause-01 :arg0 (s / study-01 :arg0 (p / person :arg0-of (s2 / study-01))) :arg1 (l / likely-01 :arg1 (d / die-01 :arg1 (p2 / person :arg0-of (h / have-03 :arg1 (s3 / surgery-01))) :extent (o / over :op1 (p3 / percentage-entity :value (N / N-A))) :arg1-of (c2 / compare-01 :arg2 (g / group :arg0-of (t / try-01 :arg1 (m / method :mod (c3 / conventional) :mod (m2 / more))))))) :medium (s4 / study-01 :mod (s5 / swedish)))
(c / cause-01 :arg0 (s / study-01 :arg0 (p / person :arg0-of (s2 / study-01))) :arg1 (l / likely-01 :arg1 (d / die-01 :arg1 (p2 / person :arg0-of (h / have-03 :arg1 (s3 / surgery-01))) :extent (o / over :op1 (p3 / percentage-entity :value (N / N-A))) :arg1-of (c2 / compare-01 :arg2 (g / group :arg0-of (t / try-01 :arg1 (m / method :mod (c3 / conventional) :mod (m2 / more))))))) :medium (s4 / study-01 :mod (s5 / swedish)))
(c / contrast-01 :arg1 (r / remain-01 :polarity - :arg1 (y / you) :arg3 (s / stationary)) :arg2 (w / want-01 :arg0 (y2 / you) :arg1 (m / move-01 :arg0 (y3 / you) :direction (f / forward))))
(t / take-01 :mode (i / interrogative) :arg0 (y / you) :arg1 (p / part) :arg3 (c / compete-01 :arg1-of (m / mean-01 :arg2 (p2 / possible-01 :arg1 (e / equate-01 :arg1 (y2 / you) :arg2 (h / home :mod (t2 / this)))))))
(p / possible-01 :arg1 (r / reveal-01 :arg0 (a / and :op1 (p2 / person :name (n / name :op1 "Lana" :op2 "Jeavons-Fellows")) :op2 (p3 / person :name (n2 / name :op1 "Sarah" :op2 "Mackay")) :op3 (p4 / person :name (n3 / name :op1 "Snezana" :op2 "Markoski"))) :arg1 (p5 / person :arg0-of (w / win-01 :arg1 (b / bachelor)))))
(s / state-01 :arg0 (c / complain-01) :arg1 (a / and :op1 (i / infrastructure :mod (p / permanent) :mod (s2 / still) :duration (t / time :time-of (c2 / crisis))) :op2 (u / use-01 :arg0 (a2 / and :op1 (o / organization :name (n / name :op1 "National" :op2 "Defence" :op3 "Forces")) :op2 (o2 / organization :name (n2 / name :op1 "State" :op2 "Security" :op3 "Networks" :op4 "Ltd."))) :arg1 (i2 / infrastructure) :mod (s3 / still))))
(s / show-04 :arg1 (m / model) :time (y / yesterday) :location (p / person :name (n / name :op1 "Tory" :op2 "Burch")))
(s / show-04 :arg1 (m / model) :time (y / yesterday) :location (p / person :name (n / name :op1 "Tory" :op2 "Burch")))
(a / assure-01 :arg0 (p / person :name (n / name :op1 "Lyly")) :arg1 (p2 / person :arg0-of (h / have-org-role-91 :arg1 (o / organization :name (n2 / name :op1 "SAK")) :arg2 (m / minister :mod (p3 / prime)))) :arg2 (a2 / accept-01 :polarity - :arg0 (o2 / organization) :arg1 (p4 / propose-01 :arg0 (p5 / person :arg0-of (h2 / have-org-role-91 :arg2 (m2 / minister :mod (p6 / prime)))) :arg1 (p7 / propose-01 :arg0 (p8 / person :arg0-of (h3 / have-org-role-91 :arg2 (m3 / minister :mod (p9 / prime)))) :arg1 (p10 / propose-01 :arg0 (p11 / person) :arg1 (c / contract-02 :arg1 (s / society)))))))
(a / assure-01 :arg0 (p / person :name (n / name :op1 "Lyly")) :arg1 (p2 / person :arg0-of (h / have-org-role-91 :arg1 (o / organization :name (n2 / name :op1 "SAK")) :arg2 (m / minister :mod (p3 / prime)))) :arg2 (a2 / accept-01 :polarity - :arg0 (o2 / organization) :arg1 (p4 / propose-01 :arg0 (p5 / person :arg0-of (h2 / have-org-role-91 :arg2 (m2 / minister :mod (p6 / prime)))) :arg1 (p7 / propose-01 :arg0 (p8 / person :arg0-of (h3 / have-org-role-91 :arg2 (m3 / minister :mod (p9 / prime)))) :arg1 (p10 / propose-01 :arg0 (p11 / person) :arg1 (c / contract-02 :arg1 (s / society)))))))
(w / wonder-02 :polarity - :arg1 (p / protest-01 :arg0 (u / union :mod (t / trade-01))))
(w / waiter/waitress :domain (t / this) :arg0-of (p / pretends :arg1 (p2 / person :arg0-of (h / have-rel-role-91 :arg2 (c / comrade)))))
(s / seem-01 :arg1 (a / and :op1 (r / raise-01 :arg0 (g / government-organization :name (n / name :op1 "Fed")) :arg1 (r2 / rate :mod (p / percentage-entity :value (N / N-A))) :time (b / before :op1 (n2 / now) :quant (t / temporal-quantity :quant (N2 / N-A) :unit (m / month)) :mod (j / just))) :op2 (s2 / step-01 :arg1 (g2 / government-organization) :arg2 (t2 / tighten-01 :arg0 (g3 / government-organization) :arg1 (c / condition :mod (m2 / money) :arg0-of (v / validate :arg1 (s3 / strength :poss (r3 / recover-01 :arg1 (c2 / country :name (n3 / name :op1 "U.S.")))))) :manner (s4 / slow)))) :time (b2 / before :op1 (n4 / now) :quant (t3 / temporal-quantity :quant (N3 / N-A) :unit (m3 / month) :mod (j2 / just))))
(s / see-01 :arg0 (u / unit :arg1-of (e / express-01)) :arg1 (i / income :arg1-of (h / high-02 :degree (m / more)) :arg1-of (c / cause-01 :arg0 (r / rate :mod (b / base) :arg1-of (h2 / high-02 :degree (m2 / more))))) :concession (f / fall-01 :arg1 (i2 / income) :arg2 (b2 / business :mod (m3 / military) :arg1-of (c2 / cost-01 :arg2 (m4 / monetary-quantity :arg1-of (h3 / high-02 :degree (m5 / more)))))))
(l / learn-01 :arg0 (i / i) :arg1 (p / possible-01 :arg1 (d / distilled :arg1 (i2 / i) :arg2 (r / rule :quant 8 :arg1-of (s / simple-02)))))
(p / possible-01 :polarity - :arg1 (s / say-01 :arg0 (i / i) :arg1 (i2 / innocent-01 :arg1 (p2 / person :name (n / name :op1 "Richard" :op2 "Glossip")))))
(k / kill-01 :quant 4)
(i / include-91 :arg1 (p / person :quant 36 :arg2-of (d / delegate-01) :arg1-of (i2 / include-91 :arg2 (p2 / person :quant 43 :arg2-of (d2 / delegate-01)))) :arg2 (g / gather-03 :arg1-of (d3 / discuss-01)))
(h / have-concession-91 :arg1 (w / work-09 :polarity - :arg1 (i / it) :time (y / yet)) :arg2 (m / matter-01 :polarity - :arg1 (t / thing :degree-of (t2 / try-01 :arg0 (r / republican :mod (s / some)) :arg1 (d / drag :arg0 (r2 / republican) :arg1 (p / person :name (n / name :op1 "Donald" :op2 "Trump")) :arg2 (a / atop :arg0 (p2 / person) :arg1 (p3 / poll-01)))))))
(t / think-01 :arg0 (p / person :arg0-of (v / vote-01 :arg1 (r / republican))) :arg1 (p2 / person :mod (r2 / real) :domain (p3 / person :name (n / name :op1 "Trump"))) :time (p4 / put-01 :arg0 (p5 / person) :arg1 (h / hats :poss (p6 / person) :mod (p7 / pundit)) :arg2 (p8 / person)))
(t / think-01 :arg0 (p / person :arg0-of (v / vote-01 :arg1 (r / republican))) :arg1 (p2 / person :mod (r2 / real) :domain (p3 / person :name (n / name :op1 "Trump"))) :time (p4 / put-01 :arg0 (p5 / person) :arg1 (h / hats :poss (p6 / person) :mod (p7 / pundit)) :arg2 (p8 / person)))
(i / interest-01 :arg2 (t / tell-01 :arg1 (m / monetary-quantity :quant 52,000 :arg2-of (p / price-01)) :arg2 (m2 / monetary-quantity :quant 52,000 :unit (e / euro)) :mod (a / also)))
(m / multi-sentence :snt1 (r / report-01 :arg0 (a / and :op1 (p / person :arg0-of (h / have-org-role-91 :arg1 (o / organization :name (n / name :op1 "Dagens" :op2 "Nyheter")))) :op2 (p2 / person :arg0-of (h2 / have-org-role-91 :arg1 (o2 / organization) :arg3 (s / serve-01 :arg0 (p3 / person))))) :arg1 (t / this)) :snt2 (s2 / say-01 :arg0 (s3 / service :mod (i / immigrate-01)) :arg1 (d / disappear-01 :arg1 (a2 / and :op1 (p4 / person :arg0-of (h3 / have-org-role-91 :arg2 (h4 / head-of-state))) :op2 (p5 / person :arg0-of (h5 / have-org-role-91 :arg1 (o3 / organization) :arg3 (s4 / serve-01 :arg0 (p6 / person))))) :frequency (r2 / rate-entity-91 :arg3 (t2 / temporal-quantity :quant (N / N-A) :unit (y / year)) :location (c / country)))))
(c / create-01 :arg1 (p / person :name (n / name :op1 "Gregory" :op2 "Guillaume") :arg1-of (c2 / create-01 :prep-under (d / direction :poss (p2 / person :name (n2 / name :op1 "Gregory" :op2 "Guillaume") :arg0-of (h / have-org-role-91 :arg1 (c3 / continent :name (n3 / name :op1 "N-A")) :arg2 (c4 / chief) :arg3 (h2 / have-org-role-91 :arg0 (p3 / person) :arg1 (c5 / continent :name (n4 / name :op1 "N-A")) :arg2 (c6 / chief))) :mod (n5 / new))))) :degree (m / more) :time (e / early :degree (m2 / more) :compared-to (e2 / early :degree (m3 / more))))
(r / receive-01 :arg0 (c / company) :arg1 (l / loan-01) :time (a / after :op1 (t / temporal-quantity :quant (N / N-A) :unit (y / year))))
(m / multi-sentence :snt1 (d / deep-02 :arg1 (s / strategy :poss (p / person :name (n / name :op1 "David" :op2 "Cameron")) :topic (k / keep-04 :arg1 (c / country :name (n2 / name :op1 "Britain")) :arg2 (k2 / keep-01 :arg0 (c2 / country) :arg1 (c3 / country :name (n3 / name :op1 "Britain") :location (o / organization :name (n4 / name :op1 "EU")))))) :degree (m2 / more) :time (d2 / day :mod (e / every)) :arg1-of (c4 / cause-01 :arg0 (e2 / elect-01 :polarity - :arg1 (p2 / person :name (n5 / name :op1 "Jeremy") :arg0-of (h / have-org-role-91 :arg1 (p3 / political-party :name (n6 / name :op1 "Labour" :op2 "Party")) :arg2 (' / '')))))) :snt2 (o2 / or :op1 (p4 / person :name (n7 / name :op1 "Corbyn") :arg0-of (l / lead-02 :arg1 (p5 / political-party))) :op2 (c5 / cutting :arg1 (r / rough :location (o3 / over :op1 (c6 / continent :name (n8 / name :op1 "Europe")))))))
(m / multi-sentence :snt1 (d / deep-02 :arg1 (s / strategy :poss (p / person :name (n / name :op1 "David" :op2 "Cameron")) :topic (k / keep-04 :arg1 (c / country :name (n2 / name :op1 "Britain")) :arg2 (k2 / keep-01 :arg0 (c2 / country) :arg1 (c3 / country :name (n3 / name :op1 "Britain") :location (o / organization :name (n4 / name :op1 "EU")))))) :degree (m2 / more) :time (d2 / day :mod (e / every)) :arg1-of (c4 / cause-01 :arg0 (e2 / elect-01 :polarity - :arg1 (p2 / person :name (n5 / name :op1 "Jeremy") :arg0-of (h / have-org-role-91 :arg1 (p3 / political-party :name (n6 / name :op1 "Labour" :op2 "Party")) :arg2 (' / '')))))) :snt2 (o2 / or :op1 (p4 / person :name (n7 / name :op1 "Corbyn") :arg0-of (l / lead-02 :arg1 (p5 / political-party))) :op2 (c5 / cutting :arg1 (r / rough :location (o3 / over :op1 (c6 / continent :name (n8 / name :op1 "Europe")))))))
(m / multi-sentence :snt1 (e / enter-01 :polarity - :arg0 (d / delegation :mod (c / country :name (n / name :op1 "Mongolia"))) :arg1 (p / problem :topic (e2 / enter-01 :arg0 (c2 / country) :arg1 (c3 / country)))) :snt2 (c4 / cause-01 :mode (i / interrogative) :arg0 (a / and :op1 (c5 / continue-01 :arg0 (p2 / person :name (n2 / name :op1 "Naryshkin")) :arg1 (s / snipers :arg0 (p3 / person))) :op2 (a2 / acknowledging :arg0 (p4 / person) :arg1 (p5 / person)))))
(a / accuse-01 :arg0 (r / report) :arg1 (a2 / and :op1 (f / force :mod (s / security) :mod (l / lankan)) :op2 (f2 / force :mod (s2 / security)) :op3 (a3 / abuse-02 :arg1 (s3 / sex) :mod (c / cluster))) :arg2 (m / man :arg1-of (l2 / likely-01 :degree (m2 / most) :compared-to (w / woman))))
(i / information :polarity - :topic (p / possible-01 :arg1 (b / be-located-at-91 :arg1 (t / truck) :arg2 (c / country :name (n / name :op1 "Finland")))))
(s / say-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (o / organization :name (n / name :op1 "Pohjola")))) :arg1 (s2 / surprise-01 :arg0 (r / run-13 :mod (l / last)) :arg1 (h2 / he) :manner (p2 / positive)) :time (s3 / since :op1 (o2 / obligate-01 :arg1 (p3 / person) :arg2 (r2 / restrict-01 :arg1 (l2 / light)))))
(p / post-01 :arg0 (p2 / person :name (n / name :op1 "Roope")) :arg1 (i / image :mod (l / look-01 :arg0 (p3 / person) :arg1 (f / film)) :mod (n2 / new)) :time (y / yesterday))
(a / and :op1 (n / near :arg1 (f / food :name (n2 / name :op1 (- / -lrb-) :op2 (-2 / -lrb-) :op3 (-3 / -lrb-) :op4 (-4 / -rrb-) :op5 (-5 / -rrb-) :op6 (-6 / -rrb-) :op7 (-7 / -rrb-))) :op7 (r / registers)) :op2 (h / have-03 :arg0 (a2 / and) :arg1 (o / option :mod (t / takeout) :mod (v / various))))
(a / and :op1 (n / near :arg1 (f / food :name (n2 / name :op1 (- / -lrb-) :op2 (-2 / -lrb-) :op3 (-3 / -lrb-) :op4 (-4 / -rrb-) :op5 (-5 / -rrb-) :op6 (-6 / -rrb-) :op7 (-7 / -rrb-))) :op7 (r / registers)) :op2 (h / have-03 :arg0 (a2 / and) :arg1 (o / option :mod (t / takeout) :mod (v / various))))
(i / include-91 :arg1 (s / strike-01 :quant 1 :arg1-of (i2 / include-91 :arg2 (s2 / strike-01 :mod (l / longest)))) :arg2 (s3 / strike-01 :arg2 (p / person :quant (12 / 1990s) :mod (n / nation)) :mod (n2 / nation)))
(m / multi-sentence :snt1 (r / rate :mod (i / interest :mod (s / short-term)) :domain (r2 / rate :mod (i2 / interest :mod (s2 / short-term)))) :snt2 (i3 / increase-01 :arg1 (a / and :op1 (w / widened) :op2 (v / volatility)) :arg4 (t / thing :arg2-of (c / characteristic-02 :arg1 (m2 / market)) :mod (a2 / all)) :time (p / policy :mod (t2 / tightens) :mod (g / government-organization :name (n / name :op1 "Fed")))))
(e / expect-01 :arg0 (o / organization :name (n / name :op1 "Hewlett-Packard")) :arg1 (c / cut-02 :arg0 (o2 / organization) :arg1 (j / job :quant 25,000) :arg3 (j2 / job :quant 30,000 :part-of (a / and :op1 (i / infringe-01 :arg1 (b / business :mod (e2 / enterprise))) :op2 (e3 / effort :purpose (s / service :mod (e4 / enterprise)))))))
(w / worth :domain (e / ensure-01 :arg1 (o / or :op1 (c / charge-05 :arg1 (p / phone :poss (y / you))) :op2 (n / near-02 :arg2 (c2 / charger)))) :arg0-of (c3 / cause-01 :arg1 (r / run-out-05 :polarity - :arg1 (i / it) :arg2 (n2 / nail))))
(a / and :op1 (p / picked :arg0 (p2 / person :name (n / name :op1 "Aguero")) :arg1 (i / injure-01 :arg1 (g / game :mod (l / league) :mod (p3 / premier) :mod (p4 / premier)))) :op2 (a2 / appear-01 :polarity - :arg1 (p5 / person) :time (u / until :op1 (t / temporal-quantity :quant (N / N-A) :unit (m / minute) :mod (f / final)))))
(f / fear-01 :arg0 (a / amr-unknown) :arg1 (a2 / amr-unknown))
(f / fear-01 :arg0 (a / amr-unknown) :arg1 (a2 / amr-unknown))
(c / close-01 :arg1 (s / street :location (b / between :op1 (b2 / between :op1 9.30-14 :op2 (a / about :op1 9.30-14)))))
(c / close-01 :arg1 (s / street :location (b / between :op1 (b2 / between :op1 9.30-14 :op2 (a / about :op1 9.30-14)))))
(l / lead-01 :arg0 (s / stretch :mod (d / dons)) :arg4 (p / point :quant 5) :arg4 (p2 / point :quant 5) :arg4 (p3 / point :quant 5))
(a / and :op1 (t / tell-01 :arg0 (h / he) :arg1 (c / contact-01 :arg0 (h2 / he) :arg1 (g / government-organization :arg0-of (g2 / govern-01))) :arg2 (h3 / he)) :op2 (d / draft-01 :arg0 (h4 / he) :arg1 (p / propose-01 :arg1 (p2 / productive-03 :arg0 (p3 / person :name (n / name :op1 "Juha" :op2 "Sipilä") :arg0-of (h5 / have-org-role-91 :arg2 (m / minister :mod (p4 / prime)))) :arg1-of (r / require-01 :arg0 (p5 / person :arg0-of (h6 / have-org-role-91 :arg2 (m2 / minister :mod (p6 / prime)))))) :mod (a2 / alternative))))
(p / pick :domain (p2 / person :name (n / name :op1 "Biden")) :mod (t / top) :time (a / ask-01 :arg1 (p3 / person :arg0-of (v / vote-01 :arg1 (n2 / nominate-01 :arg1 (p4 / political-party)) :ord (o / ordinal-entity :value 2)))))
(s / see-01 :arg0 (p / person :name (n / name :op1 "Bengström") :arg0-of (r / reside-01) :mod (s2 / siuntio)) :arg1 (c / cut-02 :arg0 (s3 / state) :arg1 (t / train) :arg2 (s4 / solution :mod (s5 / short-sighted))))
(a / and :op1 (h / have-03 :arg0 (h2 / he) :arg1 (e / enthusiasm :poss (h3 / he) :topic (a2 / allege-01 :arg1 (s / spy-01) :duration (t / temporal-quantity :quant (N / N-A) :unit (m / month))))) :op2 (w / want-01 :polarity - :arg0 (h4 / he) :arg1 (l / look-02 :arg0 (h5 / he) :arg1 (l2 / look-02 :arg0 (i / it) :arg1 (r / resemble-01 :arg2 (s2 / sour))))))
(a / and :op1 (b / be-located-at-91 :arg1 (t / they) :arg2 (c / custody :mod (p / police)) :time (n / now)) :op2 (c2 / charge-05 :arg1 (t2 / they) :arg2 (c3 / commit-02 :arg0 (t3 / they) :arg1 (o / offend-03 :arg1-of (c4 / commit-02)) :prep-under (l / law :mod (n2 / new)))))
(a / and :op1 (b / be-located-at-91 :arg1 (t / they) :arg2 (c / custody :mod (p / police)) :time (n / now)) :op2 (c2 / charge-05 :arg1 (t2 / they) :arg2 (c3 / commit-02 :arg0 (t3 / they) :arg1 (o / offend-03 :arg1-of (c4 / commit-02)) :prep-under (l / law :mod (n2 / new)))))
(j / join-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (o / organization :name (n / name :op1 "British" :op2 "Medical" :op3 "Journal")) :arg2 (p2 / person :arg1-of (e / expert-01)))) :arg1 (l / lancet :location (c / criticise :arg1 (t / thing :arg0-of (e2 / evidence-01) :arg1-of (u / use-01 :arg0 (p3 / peninsula :name (n2 / name :op1 "N-A")) :arg1-of (c2 / cause-01 :arg0 (r / report :arg0 (p4 / peninsula :name (n3 / name :op1 "N-A")) :arg1 (r2 / report-01 :arg0 (c3 / country) :arg1 (e3 / e-cigarettes)))))))))
(j / join-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (o / organization :name (n / name :op1 "British" :op2 "Medical" :op3 "Journal")) :arg2 (p2 / person :arg1-of (e / expert-01)))) :arg1 (l / lancet :location (c / criticise :arg1 (t / thing :arg0-of (e2 / evidence-01) :arg1-of (u / use-01 :arg0 (p3 / peninsula :name (n2 / name :op1 "N-A")) :arg1-of (c2 / cause-01 :arg0 (r / report :arg0 (p4 / peninsula :name (n3 / name :op1 "N-A")) :arg1 (r2 / report-01 :arg0 (c3 / country) :arg1 (e3 / e-cigarettes)))))))))
(c / come-up-11 :arg0 (o / organization :name (n / name :op1 "SPRS")) :arg1 (w / way :arg0-of (s / shock-01) :purpose (a / and :op1 (t / try-01 :arg0 (o2 / organization) :arg1 (u / understand-01 :arg0 (w2 / woman) :arg1 (i / importance :mod (g / good)))) :op2 (g2 / get-04 :arg0 (o3 / organization) :arg1 (u2 / understand-01 :arg0 (w3 / woman) :arg1 (i2 / importance :mod (g3 / good))))) :op3 (f / featuring :arg0 (o4 / organization) :arg1 (i3 / image :consist-of (p / person :arg0-of (h / have-rel-role-91 :arg2 (d / dd1))) :source (p2 / painted :arg1 (f2 / food :mod (u3 / unhealthy)))))))
(f / favor-01 :arg1 (p / person :name (n / name :op1 "Hamilton")) :time (a / age-01 :arg1 (p2 / person) :arg2 (t / temporal-quantity :quant (N / N-A) :unit (y / year))) :time (b / become-01 :arg1 (p3 / person) :arg2 (p4 / prostitution :location (p5 / peninsula :name (n2 / name :op1 "N-A")))))
(m / multi-sentence :snt1 (o / opine-01 :mode (i / interrogative) :arg0 (y / you) :arg1 (w / whatever :medium (o2 / organisers))) :snt2 (a / act-02 :arg0 (d / demonstrate-01 :arg1 (s / stop-01 :arg0 (d2 / demonstrate-01 :arg1 (f / friday)) :arg1 (s2 / sense-02 :polarity - :arg1 (c / country :name (n / name :op1 "Finland"))) :manner (s3 / somehow)))))
(a / and :op1 (t / take-01 :arg0 (p / person :quant (s / some) :arg0-of (h / have-org-role-91 :arg1 (c / country :name (n / name :op1 "N-A")) :arg2 (c2 / candidate :arg1-of (a2 / advanced-02)))) :arg1 (p2 / person :arg0-of (h2 / have-org-role-91 :arg1 (c3 / country :name (n2 / name :op1 "N-A")) :arg3 (l / lead-02 :arg0 (p3 / person) :arg1 (c4 / country)))) :mod (a3 / also)) :op2 (g / german :arg0 (p4 / person) :arg1 (a4 / and :op1 (- / -rrb- :quant 124) :op2 (-2 / -rrb- :quant 124) :op3 (-3 / -rrb- :quant 52))) :mod (a5 / also))
(g / get-01 :arg0 (p / person :name (n / name :op1 "Lyth")) :arg1 (d / division :quant 7 :arg1-of (r / resemble-01 :arg2 (p2 / person :name (n2 / name :op1 "Sam" :op2 "Robson")))) :time (b / before :op1 (g2 / get-02 :arg0 (p3 / person :name (n3 / name :op1 "Nick" :op2 "Compton")) :arg1 9 :quant 9)))
(a / and :op1 (i / ignore-01 :arg0 (w / world-region :name (n / name :op1 "West")) :arg1 (o / offer-01 :arg0 (c / country) :arg1 (h / have :arg0 (c2 / country) :arg1 (p / person :name (n2 / name :op1 "Bashar" :op2 "al-Assad") :arg0-of (h2 / have-org-role-91 :arg1 (c3 / country) :arg2 (p2 / president))) :purpose (g / give-up-07 :arg0 (c4 / country) :arg1 (p3 / power)))) :time (b / before :op1 (n3 / now) :quant (m / more-than :op1 (t / temporal-quantity :quant (N / N-A) :unit (y / year))))) :op2 (s / say-01 :arg0 (c5 / country) :arg1 (p4 / person :name (n4 / name :op1 "Martti" :op2 "Ahtisaari") :arg0-of (h3 / have-org-role-91 :arg2 (p5 / president))) :arg1-of (g2 / guardian)))
(m / make-01 :arg0 (a / and :op1 (m2 / man :quant 2) :op2 (m3 / man :quant 2) :op3 (p / person :name (n / name :op1 "Geoff" :op2 "Britten") :arg0-of (h / have-org-role-91 :arg2 (c / cameraman)))) :arg1 (i / it) :mod (f / final) :time (s / season :mod (s2 / season)))
(a / and :op1 (d / designate-01 :arg0 (o / organization :name (n / name :op1 "Tigers")) :arg1 (p / person :name (n2 / name :op1 "Victor" :op2 "Martinez") :arg0-of (h / have-03 :arg1 (h2 / hits :quant 3))) :arg2 (h3 / hits :quant 2)) :op2 (d2 / drive-01 :arg0 (o2 / organization) :ord (o3 / ordinal-entity :value 1 :range (s / since :op1 (m / mid-august)))))
(l / like-01 :arg0 (i / i) :arg1 (g / guy))
(m / multi-sentence :snt1 (c / contrast-01 :arg1 (k / kill-01 :arg0 (a / and :op1 (s / sign :arg1-of (s2 / signal-07 :arg0 (m2 / market :mod (f / finance)))) :op2 (t / thing :arg0-of (w / warn-01 :arg1 (m3 / market :mod (f2 / finance))))) :arg1 (m4 / mood) :mod (o / only :polarity -)) :arg2 (a2 / and :op1 (r / recover-01 :arg1 (e / economy) :source (c2 / crisis :mod (f3 / finance))) :op2 (r2 / recession-02 :arg1 (e2 / economy) :time (a3 / after :op1 (n / now) :quant (m5 / multiple :op1 (t2 / temporal-quantity :quant (N / N-A) :unit (d / decade)))) :arg1-of (r3 / resemble-01 :arg2 (c3 / crisis :mod (f4 / finance) :time (e3 / early :degree (m6 / more))))))) :snt2 (a4 / and :op1 (r4 / recover-01 :arg1 (e4 / economy) :time (y / yet)) :op2 (h / have-03 :arg0 (e5 / economy) :arg1 (r5 / recession-02) :time (e6 / early :degree (m7 / more)))))
(s / short-06 :arg1 (p / person :quant 351 :mod (p2 / primary) :arg0-of (v / vote-01) :mod (p3 / primary)) :arg2 (p4 / point :quant 6 :mod (p5 / percentage-entity :value (N / N-A))))
(k / know-01 :polarity - :arg0 (y / you) :arg1 (d / differ-02 :arg1 (f / friendship :poss (y2 / you)) :arg2 (a / amr-unknown)) :time (e / ever))
(e / estimate-01 :arg0 (p / person :name (n / name :op1 "Kujala")) :arg1 (t / traffic :arg1-of (b / bad-07 :degree (m / most)) :source (p2 / peninsula :name (n2 / name :op1 "N-A")) :destination (p3 / peninsula :name (n3 / name :op1 "N-A")) :destination (p4 / peninsula :name (n4 / name :op1 "N-A"))))
(f / funny :domain (c / come-01 :arg1 (t / this) :time (t2 / time :mod (t3 / this)) :time (t4 / time :mod (t5 / this))))
(c / change-01 :time (d / date-interval :op1 (d2 / date-entity :decade (N / N-A)) :op2 (d3 / date-entity :year (N2 / N-A))) :prep-with (r / route :arg1-of (c2 / close-01) :location (c3 / country :mod (w / whole))))
(s / say-01 :arg0 (o / organization :name (n / name :op1 "Kesko")) :arg1 (i / information :polarity - :topic (c / close-01 :arg1 (s2 / shop :mod (i2 / individual)) :arg1-of (p / possible-01)) :time (y / yet)))
(h / have-03 :arg0 (b / book :arg1-of (o / organize-01 :arg0 (p / person :name (n / name :op1 "Hakanen")) :mod (a / also)) :arg1-of (o2 / organize-01 :arg0 (p2 / person :arg0-of (w / write-01))) :arg0-of (h2 / have-org-role-91 :arg1 (o3 / organization :name (n2 / name :op1 "Aalto" :op2 "University")) :arg2 (p3 / professor))) :arg1 (p4 / person :name (n3 / name :op1 "Sixten" :op2 "Korkman") :arg0-of (h3 / have-org-role-91 :arg1 (e / economy :mod (e2 / esteemed)) :arg2 (p5 / person :arg1-of (e3 / expert-01 :arg2 (e4 / economy))))))
(h / have-03 :arg0 (b / book :arg1-of (o / organize-01 :arg0 (p / person :name (n / name :op1 "Hakanen")) :mod (a / also)) :arg1-of (o2 / organize-01 :arg0 (p2 / person :arg0-of (w / write-01))) :arg0-of (h2 / have-org-role-91 :arg1 (o3 / organization :name (n2 / name :op1 "Aalto" :op2 "University")) :arg2 (p3 / professor))) :arg1 (p4 / person :name (n3 / name :op1 "Sixten" :op2 "Korkman") :arg0-of (h3 / have-org-role-91 :arg1 (e / economy :mod (e2 / esteemed)) :arg2 (p5 / person :arg1-of (e3 / expert-01 :arg2 (e4 / economy))))))
(s / state-01 :arg0 (s2 / story) :arg1 (c / concern-01 :arg0 (a / and :op1 (d / discuss-01 :arg1 (e / education :purpose (f / fly-01))) :op2 (a2 / arrive-01 :arg1 (p / person :arg0-of (o / operate-01 :mod (f2 / foreign))) :arg4 (p2 / person :arg0-of (o2 / operate-01 :mod (f3 / foreign)))) :arg1-of (p3 / possible-01) :time (b / before :op1 (n / now) :duration (t / temporal-quantity :quant (N / N-A) :unit (y / year))))))
(l / look-01 :mode (i / imperative) :arg0 (y / you) :arg1 (t / thing :degree-of (p / possible-01 :arg1 (r / react-01 :arg0 (a / area :mod (s / some) :part-of (e / economy)) :arg1-of (p2 / possible-01) :arg1-of (b / base-02 :arg2 (t2 / trend :mod (h / history)))))))
(s / say-01 :arg0 (a / authority :mod (p / prison)) :arg1 (p2 / possible-01 :polarity - :arg1 (a2 / and :op1 (p3 / person :arg0-of (w / witness-01)) :op2 (j / journalist) :domain (i / i)) :arg0-of (c / cause-01 :arg1 (a3 / allow-01 :polarity - :arg1 (a4 / and :op1 (p4 / person :arg0-of (w2 / witness-01)) :op2 (j2 / journalist)) :purpose (r / record :mod (r2 / record) :arg1-of (s2 / see-01 :arg0 (i2 / i)))))))
FAILED_TO_PARSE#Number of opening and closing brackets doesn't match.
(r / remain-01 :arg1 (e / employ-01 :polarity - :location (c / country :name (n / name :op1 "Scotland"))) :arg3 (u / unchanged :quant 164,000) :time (d / date-interval :op1 (d2 / date-entity :decade (N / N-A)) :op2 (d3 / date-entity :year (N2 / N-A))) :arg1-of (c2 / cause-01 :arg0 (p / possible-01 :arg1 (j / july :arg1 (n2 / number :quant-of (w / work-01 :arg1 (w2 / work-01 :arg3 (c3 / country :name (n3 / name :op1 "UK")) :mod (w3 / whole)))) :arg3 (s / score-entity :op1 10000 :op2 1.82) :time (p2 / period :mod (s2 / same))))))
FAILED_TO_PARSE#Two concepts in a row.
(l / laugh-01 :arg0 (w / we) :quant (l2 / lot) :time (t / talk-01 :arg0 (w2 / we)) :frequency (o / often))
(c / contrast-01 :arg2 (g / great :degree (t / too :polarity -) :domain (c2 / couple :arg0-of (l / live-01 :location (l2 / location :name (n / name :op1 "Iitti"))) :arg0-of (l3 / live-01 :location (l4 / location :name (n2 / name :op1 "Iitti")))) :frequency (o / often)))
(a / add-01 :arg0 (p / person :name (n / name :op1 "Robertson")) :arg1 (' / '' :time (f / find-01 :arg0 (g / girl) :arg1 (m / message :topic (a2 / and :op1 (s / shout-01 :arg0 (g2 / girl) :arg1 (p2 / person :arg0-of (h / have-rel-role-91 :arg1 (g3 / girl) :arg2 (m2 / mother)))) :op2 (s2 / shake-01 :arg1 (m3 / message)))))))
(c / contrast-01)
(t / topped :arg1 (e / ensemble) :instrument (a / and :op1 (b / belt :mod (g / golden) :mod (g2 / golden)) :op2 (l / lipstick :mod (r / red))))
(a / and :op1 (m / meet-03 :arg0 (t / they)) :op2 (t2 / talk-01 :arg0 (t3 / they) :arg1 (m2 / message)) :op3 (s / send-01 :arg0 (t4 / they) :arg1 (m3 / message)))
(s / say-01 :arg0 (a / and :op1 (p / person :name (n / name :op1 "McKee")) :op2 (p2 / person :name (n2 / name :op1 "Capewell"))) :arg1 (c / claim-01 :arg0 (p3 / person :name (n3 / name :op1 "PHE")) :arg1 (e / evidence-01 :polarity - :arg0-of (e2 / evidence-01 :arg1 (a2 / act-01 :arg0 (p4 / person) :arg1 (o / or :op1 (s2 / smoke-02 :arg0 (p5 / person) :arg1 (o2 / or :op1 (c2 / child) :op2 (' / '' :mod (n4 / non-smokers)))) :op2 ('2 / '' :arg1 (p6 / person))))))))
(c / concern-01 :arg0 (s / stall-01 :arg1 (g / grow-01 :arg1 (g2 / grow-01 :arg1 (c2 / country :name (n / name :op1 "N-A"))))) :arg1 (m / monetary-quantity :arg2-of (p / price-01 :arg1 (t / thing :arg2-of (p2 / price-01 :arg1 (t2 / thing :arg2-of (p3 / price-01 :arg1 (a / and :op1 (c3 / cannabis) :op2 (c4 / cannabis) :op3 (c5 / commodity :mod (o / other)))) :op4 (c6 / commodity :mod (o2 / other)) :op5 (c7 / commodity :mod (o3 / other))))))))
(c / come-01 :arg1 (c2 / customer) :arg3 (g / group :mod (s / small) :location (c3 / continent)) :arg4 (l / location :name (n / name :op1 "Kerkennah" :op2 "Islands")))
(a / and :op1 (g / go-02 :arg0 (i / i)) :op2 (c / come-out-09 :arg1 (i2 / i)))
(a / and :op2 (b / buy-01 :polarity - :arg0 (m / money) :arg1 (h / happy :mod (g / great :degree (m2 / more))) :mod (r / real) :time (r2 / recent)))
(a / and :op1 (r / refer-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (o / organization :name (n / name :op1 "Brisbane" :op2 "Broncos")) :arg2 (c / coach))) :arg1 (p2 / person :name (n2 / name :op1 "Wayne" :op2 "Bennett") :arg0-of (r2 / refer-01 :arg1 (s / storm) :arg2 (s2 / storm))) :arg2 (s3 / storm) :time (a2 / after :op1 (w / win-01 :arg0 (p3 / person) :arg1 (g / game :mod (t / that) :topic (l / league :mod (r3 / rugby)))))) :op2 (s4 / say-01 :arg0 (p4 / person) :arg1 (' / '' :polarity - :arg1 (l2 / location :name (n3 / name :op1 "Queensland") :quant 2) :mod (b / big :degree (t2 / too)) :destination (w2 / wrestling))))
(t / think-01 :polarity - :arg0 (i / i) :arg1 (r / revise-01 :arg0 (t2 / that) :arg1 (c / company :name (n / name :op1 "BBC")) :degree (a / at-all)))
(t / try-01 :arg0 (w / we))
(e / encourage-01 :arg0 (p / person :name (n / name :op1 "N-A") :arg0-of (h / have-org-role-91 :arg1 (o / organization :name (n2 / name :op1 "ASRB")) :arg2 (- / -rrb-))) :arg1 (a / and :op1 (t / technology :mod (t2 / technology)) :op2 (i / innovate-01)) :mod (a2 / also) :arg1-of (s / say-01 :arg0 (o2 / organization :name (n3 / name :op1 "Intel"))))
(a / and :op1 (s / surmised :arg0 (p / person :arg0-of (h / have-org-role-91 :arg2 (o / official :mod (h2 / health)))) :arg1 (c / contain-01 :arg0 (p2 / product) :arg1 (a2 / and :op1 (m / methanol) :op2 (a3 / agent :arg0-of (k / kill-01)) :op3 (a4 / agent :arg0-of (k2 / kill-01))))) :op2 (l / list-01 :arg1 (a5 / alcohol :arg1-of (l2 / list-01 :arg2 (i / ingredient :arg1-of (a6 / activity-06))))))
(k / know-01 :mode (i / interrogative) :arg0 (p / person :name (n / name :op1 "David" :op2 "Cameron")) :arg1 (g / good :degree (m / more) :compared-to (t / this) :domain (t2 / this)) :arg1-of (s / sure-02))
(s / suicide :mod (p / politics) :domain (t / thing :arg2-of (s2 / sanction-02)) :beneficiary (o / organization :name (n / name :op1 "EU")) :arg1-of (d / declare-02 :arg0 (p2 / person :name (n2 / name :op1 "Naryshkin"))))
(s / suicide :mod (p / politics) :domain (t / thing :arg2-of (s2 / sanction-02)) :beneficiary (o / organization :name (n / name :op1 "EU")) :arg1-of (d / declare-02 :arg0 (p2 / person :name (n2 / name :op1 "Naryshkin"))))
(s / say-01 :arg0 (o / organization :name (n / name :op1 "Deutsche")) :arg1 (f / fall-01 :arg1 (t / thing :arg1-of (p / precede-01 :arg2 (n2 / name :op1 (h / hiking)))) :time (i / immediate)))
(k / know-01 :arg0 (i / i) :arg1 (t / thing :manner-of (a / and :op1 (p / possible-01 :arg1 (b / be-02 :arg1 (s / street :name (n / name :op1 (p2 / predatory) :op2 (s2 / street) :op3 (s3 / street)))) :op2 (a2 / amr-unknown :manner-of (e / eu-sceptic :arg1 (b2 / biography :mod (p3 / press) :mod (o / oligarchs))))))) :arg1-of (c / cause-01 :arg0 (b3 / be-temporally-at-91 :arg1 (r / referendum :quant 1975 :mod (t2 / tony) :arg0-of (e2 / endorse-01 :arg1 (e3 / enter-01 :quant 1973 :arg0 (w / we)))) :arg2 (e4 / enter-01 :quant 1973 :arg0 (w2 / we)))))
(t / tarnished :arg0 (c / claim-01 :arg0 (p / person :arg0-of (o / oppose-01)) :arg1 (r / receive-01 :arg0 (p2 / person) :arg1 (t2 / threaten-01 :arg1 (d / die-01 :arg1 (p3 / person)) :mod (a / anonymous) :arg0-of (w / warn-01 :arg1 (o2 / oppose-01 :arg0 (p4 / person) :arg1 (p5 / person)) :time (a2 / address :poss (p6 / person)))) :mod (a3 / anonymous))) :arg1 (o3 / open-01 :arg1 (p7 / parliament)) :mod (a4 / also))
(s / say-01 :arg0 (p / person :name (n / name :op1 "Mackay")) :arg1 (m / make-02 :arg0 (d / date :mod (h / home) :time (w / week :mod (l / last))) :arg1 (p2 / possible-01 :arg1 (' / '' :arg1 (p3 / person :name (n2 / name :op1 "Wood"))))))
(s / say-01 :arg0 (p / person :name (n / name :op1 "Mackay")) :arg1 (m / make-02 :arg0 (d / date :mod (h / home) :time (w / week :mod (l / last))) :arg1 (p2 / possible-01 :arg1 (' / '' :arg1 (p3 / person :name (n2 / name :op1 "Wood"))))))
(a / and :op1 (c / close-13 :arg1 (f / family :arg1-of (h / have-org-role-91 :arg0 (p / person :name (n / name :op1 "Binladin")) :arg2 (m / member))) :arg2 (f2 / family :arg0-of (r / rule-03 :arg1 (c2 / country :name (n2 / name :op1 "Saudi" :op2 "Arabia")))) :duration (m2 / multiple :op1 (t / temporal-quantity :quant (N / N-A) :unit (d / decade)))) :op2 (r2 / run-01 :arg0 (f3 / family) :arg1 (p2 / project :arg1-of (m3 / major-02))))
(n / near-02 :arg1 (y / you) :arg2 (e / essential))
(a / and :op1 (r / republicans :arg1 (i / it) :mod (m / main)) :op2 (s / say-01 :arg0 (p / person :arg0-of (s2 / say-01 :arg1 (v / view-02 :arg0 (p2 / person) :arg1 (p3 / person :name (n / name :op1 "Clinton"))))) :arg1 (b / become-01 :arg1 (p4 / person) :arg2 (b2 / bad-04 :arg1 (p5 / person) :degree (m2 / more)))))
(p / participate-01 :arg0 (a / and :op1 (p2 / person :arg0-of (d / drive-01)) :op2 (p3 / person :arg0-of (d2 / drive-01))) :arg1 (d3 / demonstrate-01 :mod (f / friday?s)) :time (d4 / date-interval :op1 (b / begin-01 :arg1 (t / traffic :time (m / morning :mod (e / early)))) :op2 (e2 / end-01 :arg1 (t2 / traffic))))
(h / have-concession-91 :arg1 (m / make-02 :arg0 (a / and :op1 (n / nature) :op2 (t / thing :arg2-of (m2 / mean-01 :arg1 (r / revolution-03 :arg0 (i / industry))))) :arg1 (a2 / advanced-02 :arg1 (h2 / he) :degree (t2 / too) :topic (s / stage :mod (e / early) :part-of (c / capitalism)))) :arg2 (u / understand-01 :arg0 (p / person :name (n2 / name :op1 "Marx")) :arg1 (a3 / and :op1 (n3 / nature) :op2 (t3 / thing :arg2-of (m3 / mean-01 :arg1 (r2 / revolution-03 :arg0 (i2 / industry)))))))
(i / important :degree (s / so) :domain (s2 / stay-01 :arg1 (y / you) :manner (t / together) :time (n / now)))
(s / say-01 :arg0 (t / thing :arg1-of (r / report-01) :location (o / organization :name (n / name :op1 "Nature" :op2 "Communications"))) :arg1 (m / make-02 :arg0 (w / wave-04 :arg1 (s2 / sound) :mod (t2 / this)) :arg1 (a / and :op1 (o2 / open-up-03 :arg0 (c / channel) :arg1 (c2 / cell)) :op2 (i / install-01 :arg0 (c3 / channel) :arg1 (c4 / cell)))))
(p / problem :topic (t / transport-01 :arg1 (t2 / transport-01 :arg1-of (p2 / public-02)) :arg1-of (c / consider-01 :arg1-of (n / normal-02) :prep-in (m / meet-03 :mod (c2 / crowd) :mod (t3 / this) :mod (k / kind :mod (t4 / this))))) :time (n2 / now))
(i / include-91 :arg1 (p / person :name (n / name :op1 "Schmidt")) :arg2 (p2 / person :name (n2 / name :op1 "Lamb") :arg0-of (w / write-01 :arg1 (b / book))) :medium (b2 / book) :medium (b3 / book) :arg1-of (w2 / write-01 :arg0 (h / he)) :arg1-of (w3 / write-01 :arg0 (h2 / he)) :arg1-of (w4 / write-01 :arg0 (h3 / he)) :arg1-of (w5 / write-01 :arg0 (h4 / he)) :arg1-of (w6 / write-01 :arg0 (h5 / he)) :arg1-of (w7 / write-01 :arg0 (h6 / he)) :arg1-of (w8 / write-01 :arg0 (h7 / he)) :arg1-of (w9 / write-01 :arg0 (h8 / he)) :arg1-of (w10 / write-01 :arg0 (h9 / he)) :arg1-of (w11 / write-01 :arg0 (h10 / he)) :arg1-of (w12 / write-01 :arg0 (h11 / he)) :arg1-of (w13 / write-01 :arg0 (h12 / he)) :arg1-of (s / share-01 :arg0 (h13 / he)) :arg1-of (s2 / share-01 :arg0 (h14 / he)) :arg1-of (s3 / share-01 :arg0 (h15 / he)) :arg1-of (s4 / share-01 :arg0 (h16 / he)))
(h / hard-02 :arg1 (m / make-01 :arg1 (e / excuse-02 :degree (m2 / more) :mod (a / any))))
(s / signal-07 :polarity - :arg1 (a / anything))
(e / expect-01 :arg1 (t / thousands :arg1 (t2 / thousands :arg1 (d / demonstrators))))
(s / say-01 :arg0 (p / person :name (n / name :op1 "Kuutti")) :arg1 (m / move-01 :arg1 (s2 / speech :mod (t / televised)) :arg2 (l / location :name (n2 / name :op1 "Sipilä")) :arg1-of (s3 / smart-06) :time (s4 / since :op1 (p2 / possible-01 :arg1 (h / highlights :arg0 (h2 / he) :arg1 (v / view :poss (h3 / he)) :prep-without (n3 / note :mod (d / discordant)))))))
(e / equal-01 :arg1 (p / person :arg0-of (s / sing-01)) :arg2 (f / finnish :arg1 (a / aunts)))
(t / try-01 :arg0 (p / person :mod (c / country :name (n / name :op1 "N-A"))) :arg1 (p2 / protect-01 :arg0 (p3 / person) :arg1 (s / store :name (n2 / name :op1 (i / iga)) :poss (p4 / person)) :arg2 (o / onslaught :poss (o2 / organization) :location (a / and :op1 (p5 / peninsula :name (n3 / name :op1 "N-A")) :op2 (f / forth)))))
(a / and :op1 (c / come-01 :arg1 (a2 / art :mod (c2 / creative :degree (m / most)) :arg1-of (s / surround-01 :arg2 (n / name :op1 (a3 / arm)))) :arg3 (i / inside :op1 (e / excel))) :op2 (b / be-located-at-91 :arg1 (t / thing :arg1-of (p / produce-01 :arg0 (s2 / slash :op1 (p2 / product :name (n2 / name :op1 (f / fantastically))) :op2 (p3 / product :name (n3 / name :op1 (e2 / euphemistic)))))) :arg2 (i2 / inside :op1 (e3 / excel))))
(a / and :op1 (b / broadcast-01 :arg0 (p / person :arg0-of (h / have-rel-role-91 :arg1 (c / comedy) :arg2 (f / friend))) :arg1 (c2 / comedy) :arg2 (c3 / comedy) :time (s / start-01 :arg0 (p2 / person) :arg1 (f2 / finish-01 :arg0 (p3 / person) :arg1 (e / episodes :quant 236 :mod (f3 / full))))))
(t / thing :arg2-of (n / name-01 :arg1 (a / and :op1 (p / person :name (n2 / name :op1 "Porin" :op2 "Matti")) :op2 (p2 / person :name (n3 / name :op1 "Pele" :op2 "Peltonen")))) :quant (s / some))
(c / choose-01 :arg0 (w / we) :arg1 (c2 / channel :mod (t / this)) :arg0-of (e / explain-01 :arg1 (p / person :name (n / name :op1 "Sipilä"))) :arg1-of (c3 / cause-01 :arg0 (a / amr-unknown)))
FAILED_TO_PARSE#Number of opening and closing brackets doesn't match.
(w / write-01 :arg0 (i / idiot :mod (o / one)) :arg1 (r / repeat-01 :arg0 (e / everyone :mod (e2 / else)) :arg1 (e3 / everyone :mod (e4 / else))))
(w / write-01 :arg0 (i / idiot :mod (o / one)) :arg1 (r / repeat-01 :arg0 (e / everyone :mod (e2 / else)) :arg1 (e3 / everyone :mod (e4 / else))))
(- / -lrb- :arg0 (a / and :op1 (p / person :arg0-of (h / have-org-role-91 :arg1 (l / location :name (n / name :op1 "United" :op2 "States" :op3 "Barack")) :arg2 (p2 / president))) :op2 (p3 / person :name (n2 / name :op1 "Obama") :arg0-of (h2 / have-org-role-91 :arg2 (a2 / associates)))) :arg1 (t / this) :arg1-of (r / regular-02))
(e / estimate-01 :arg0 (p / person :arg0-of (a / analyze-01 :arg1 (o / organization :name (n / name :op1 "Morgan" :op2 "Stanley")))) :arg1 (e2 / estimate-01 :arg0 (p2 / person :name (n2 / name :op1 "Tom" :op2 "Kierath")) :arg1 (p3 / possible-01 :arg1 (l / lose-02 :arg0 (g / government-organization :arg0-of (g2 / govern-01 :arg1 (c / country))) :arg1 (r / rate-entity-91 :arg1 (m / monetary-quantity :quant 360 :unit (d / dollar)) :arg2 (t / temporal-quantity :quant (N / N-A) :unit (y / year))) :arg3 (r2 / rate-entity-91 :arg1 (m2 / monetary-quantity :quant 250 :unit (d2 / dollar)) :arg2 (v / volume-quantity :quant (N2 / N-A) :unit (g3 / gallon))))) :arg2 (e3 / end-01 :arg1 (a2 / approximately :op1 2016))) :time (w / week :mod (t2 / this)))
(i / important :domain (k / kind :domain (a / and :op1 (y / you) :op2 (o / other))) :mod (a2 / also))
(a / alone :domain (o / organization :name (n / name :op1 "Kingfisher")) :mod (a2 / alone :degree (a3 / almost)) :arg1-of (i / include-91 :arg2 (t / team :poss (o2 / organization) :arg2-of (i2 / include-01 :arg1 (a4 / and :op1 (p / person :arg0-of (h / have-org-role-91 :arg1 (c / country) :arg2 (e / executive :mod (c2 / chief)))) :op2 (p2 / person :arg0-of (h2 / have-org-role-91 :arg1 (c3 / country) :arg2 (d / director :mod (f / finance)))))))) :mod (a5 / almost))
(p / put-01 :arg0 (o / organization :name (n / name :op1 "Harpeer?s" :op2 "Bazaar")) :arg1 (r / rate-entity-91 :arg1 6 :arg2 (t / temporal-quantity :quant (N / N-A) :unit (y / year))) :arg2 (b / behind :op1 (s / scenes)))
(r / reminded :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (c / criminal-organization :name (n / name :op1 "N-A")))) :arg1 (p2 / person :arg0-of (h2 / have-org-role-91 :arg1 (c2 / criminal-organization :name (n2 / name :op1 "N-A")))) :time (a / after :op1 (n3 / now) :quant (s / several :op1 (t / temporal-quantity :quant (N / N-A) :unit (y / year)))) :time (t2 / time :arg1-of (s2 / same-01)))
(m / mix-01 :arg0 (m2 / military :name (n / name :op1 "N-A")) :arg1 (m3 / mouthwash :mod (a / alcohol-containing)) :arg2 (m4 / mouthwash :mod (s / stiffer)) :arg1-of (r / report-01))
(f / find-01 :arg0 (s / survey-01) :arg1 (a / and :op1 (d / do-02 :arg0 (p / person :name (n / name :op1 "Carson")) :arg1 (d2 / do-02 :arg0 (p2 / person) :manner (g / good)) :manner (g2 / good)) :op2 (o / out :arg0 (p3 / person) :arg1 (p4 / person :name (n2 / name :op1 "Trump")) :arg2 (p5 / person :arg0-of (v / vote-01 :arg1 (c / criminal-organization :name (n3 / name :op1 "N-A"))) :mod (c2 / college-educated)))) :mod (a2 / also))
(f / find-01 :arg0 (s / survey-01) :arg1 (a / and :op1 (d / do-02 :arg0 (p / person :name (n / name :op1 "Carson")) :arg1 (d2 / do-02 :arg0 (p2 / person) :manner (g / good)) :manner (g2 / good)) :op2 (o / out :arg0 (p3 / person) :arg1 (p4 / person :name (n2 / name :op1 "Trump")) :arg2 (p5 / person :arg0-of (v / vote-01 :arg1 (c / criminal-organization :name (n3 / name :op1 "N-A"))) :mod (c2 / college-educated)))) :mod (a2 / also))
(a / and :op1 (p / person :name (n / name :op1 "Sipe" :op2 "Santapukki") :arg0-of (r / rival-01 :arg1 (p2 / person :name (n2 / name :op1 "Tatu" :op2 "Sinisalo")))) :op2 (p3 / person :name (n3 / name :op1 "Toni" :op2 "Wirtanen") :arg0-of (h / have-org-role-91 :arg1 (p4 / person :name (n4 / name :op1 "Tuukka" :op2 "Temonen") :arg0-of (h2 / have-org-role-91 :arg2 (b / bassist))) :arg2 (p5 / person :name (n5 / name :op1 "Iiro" :op2 "Panula")))))
(a / and :op1 (w / write-01 :arg0 (p / person :arg0-of (h / have-rel-role-91 :arg1 (h2 / he) :arg2 (g / girlfriend))) :arg1 (n / note :arg0-of (s / say-01 :arg1 (s2 / sorry-01 :arg1 (p2 / person) :arg2 (a2 / and :op1 (s3 / sorry-01 :arg1 (p3 / person) :arg2 (m / murder-01 :ord (o / ordinal-entity :value 1))) :op2 (w2 / wish-01 :arg0 (p4 / person) :arg1 (p5 / possible-01 :arg1 (t / take-04 :arg0 (p6 / person) :arg1 (p7 / person) :arg2 (m2 / murder-01 :ord (o2 / ordinal-entity :value 1))))))))) :time (a3 / after :op1 (a4 / and :op1 (s4 / shoot-02 :arg0 (p8 / person) :arg1 (p9 / person :arg0-of (h3 / have-rel-role-91 :arg1 (h4 / he) :arg2 (g2 / girlfriend))) :location (l / location :name (n2 / name :op1 "Mississippi")) :time (m3 / morning :mod (m4 / monday))) :op2 (k / kill-01 :arg0 (p10 / person) :arg1 (p11 / person :arg0-of (h5 / have-rel-role-91 :arg1 (h6 / he) :arg2 (g3 / girlfriend))) :location (l2 / location :name (n3 / name :op1 "Mississippi")) :time (l3 / late :degree (m5 / more)))))) :op2 (w3 / wish-01 :arg0 (p12 / person) :arg1 (p13 / possible-01 :arg1 (t2 / take-01 :arg0 (a5 / authority :mod (' / '')) :arg1 (t3 / tuesday)))))
(p / publish-01 :arg0 (i / it) :arg1 (b / bingo :mod (h / herewith) :location (c / company :name (n / name :op1 "Facebook"))))
(h / helander?s :arg1 (g / game :mod (b / big) :arg0-of (h2 / have-03 :arg1 (t / title :beneficiary (f / film :mod (e / expensive :degree (m / most)) :location (c / country :name (n / name :op1 "Finland")))))) :time (p / previous))
(a / and :op1 (s / sell-01 :arg0 (p / person :arg0-of (h / have-rel-role-91 :arg1 (p2 / person :name (n / name :op1 "Mikkonen")) :arg2 (p3 / partner))) :arg1 (e / equipment)) :op2 (s2 / sell-01 :arg0 (p4 / person) :arg1 (e2 / equipment)) :op3 (i / include-91 :arg1 (p5 / person :arg0-of (h2 / have-rel-role-91 :arg1 (p6 / person) :arg2 (p7 / partner))) :arg2 (f / field :mod (f2 / field)) :time (o / once)))
(m / multi-sentence :snt1 (c / cause-01 :arg0 (w / we) :arg1 (p / pay-01 :arg0 (w2 / we) :arg1 (b / bill-01)) :time (n / now)) :snt2 (s / state-01 :arg0 (n2 / newspaper) :arg2 (p2 / person :name (n3 / name :op1 "Ahtisaari"))))
(a / axiomatic :polarity - :arg1 (p / position-02 :arg0 (m / movement-07 :arg0 (g / government-organization :name (n / name :op1 "N-A")))) :time (b / before :op1 (n2 / now) :quant (m2 / multiple :op1 (t / temporal-quantity :quant (N / N-A) :unit (d / decade)))))
(a / axiomatic :polarity - :arg1 (p / position-02 :arg0 (m / movement-07 :arg0 (g / government-organization :name (n / name :op1 "N-A")))) :time (b / before :op1 (n2 / now) :quant (m2 / multiple :op1 (t / temporal-quantity :quant (N / N-A) :unit (d / decade)))))
(a / and :op1 (h / hard-02 :arg1 (l / let-01 :arg1 (g / game :mod (e / every)))) :op2 (w / want-01 :arg0 (i / i) :arg1 (g2 / go-02 :arg0 (i2 / i) :arg4 (g3 / game) :arg1-of (d / deep-02))))
(a / and :op1 (h / hard-02 :arg1 (l / let-01 :arg1 (g / game :mod (e / every)))) :op2 (w / want-01 :arg0 (i / i) :arg1 (g2 / go-02 :arg0 (i2 / i) :arg4 (g3 / game) :arg1-of (d / deep-02))))
(k / know-02 :arg1 (a / and :op1 (p / person :arg0-of (h / have-rel-role-91 :arg2 (b / brother))) :op2 (p2 / person :arg0-of (h2 / have-rel-role-91 :arg2 (b2 / brother)))) :arg2 (a2 / and :op1 (t / time :arg1-of (l / long-03)) :op2 (p3 / precision :mod (m / mathematical))))
(f / follow-02 :arg0 (f2 / firm) :arg1 (c / company :mod (s / sheet) :arg1-of (b / balance-01 :arg1-of (s2 / strong-02))) :arg1-of (f3 / follow-01 :arg2 (a / and :op1 (c2 / company :quant 1994) :op2 (c3 / company :quant 1999) :op3 (r / rate :quant 2004) :op4 (r2 / rate :quant 2004) :op5 (r3 / rate :quant 2004 :mod (p / percentage-entity :value (N / N-A))))))
(c / contrast-01 :arg2 (t / take-01 :arg0 (p / person :name (n / name :op1 "Zotov")) :arg1 (t2 / time :poss (p2 / person)) :manner (s / simple) :arg1-of (c2 / cause-01 :arg0 (s2 / size :poss (p3 / person) :mod (l / large)))))
(p / possible-01 :arg1 (o / or :op1 (d / downloading :arg0 (y / you) :arg1 (o2 / or :op1 (d2 / device :mod (i / ios)) :op2 (d3 / device :mod (a / android)))) :op2 (c / contribute-01 :arg0 (o3 / organization :name (n / name :op1 "BBC" :op2 "News")) :arg2 (a2 / and :op1 (d4 / device :mod (a3 / android)) :op2 (d5 / device :mod (a4 / android)))) :op3 (c2 / contribute-01 :arg0 (o4 / organization) :arg2 (u / use-01 :arg1 (b / buttons :location (a5 / app))))))
(a / and :op1 (r / receive-01 :arg0 (p / person :name (n / name :op1 "Timo" :op2 "Nousiainen") :arg0-of (h / have-org-role-91 :arg2 (m / mayor))) :arg1 (t / town) :arg2 (m2 / matter :topic (m3 / monday))) :op2 (q / quick-02 :arg1 (r2 / react-01 :arg0 (t2 / town))))
(c / come-01 :arg1 (p / passenger :mod (c2 / calmest)) :arg3 (w / world-region :name (n / name :op1 "sub-Saharan" :op2 "Africa")))
(c / contrast-01 :arg2 (i / insist-01 :arg0 (p / person :name (n / name :op1 "Viktor" :op2 "Orban") :arg0-of (h / have-org-role-91 :arg2 (m / minister :mod (p2 / prime)))) :arg1 (a / and :op1 (s / seek-01 :arg0 (p3 / person :arg0-of (s2 / specialize-01 :arg1 (e / economy)) :quant (m2 / most)) :arg1 (l / life :mod (g / good :degree (m3 / more)))) :op2 (e2 / entitled :polarity - :arg1 (r / refugee) :arg2 (p4 / protect-01 :arg0 (r2 / refugee) :arg1 (n2 / nation :mod (o / other) :arg2-of (i2 / include-01 :arg1 (c2 / country :name (n3 / name :op1 "Germany")))) :manner (s3 / sharp))))))
(a / ask-01 :arg0 (g / girl :location (c / corridor :poss (i / i))) :arg1 (a2 / ask-01 :arg0 (g2 / girl) :arg1 (n / neighbours :arg0 (g3 / girl)) :condition (a3 / and :op1 (t / turning :polarity - :arg0 (g4 / girl) :arg1 (a4 / and :op1 (d / drum) :op2 (b / bass))) :op2 (b2 / bass :arg0 (g5 / girl))) :arg1-of (c2 / cause-01 :arg0 (a5 / and :op1 (3 / 3am :arg1 (i2 / it)) :op2 (h / have-03 :arg0 (g6 / girl) :arg1 (e / exam) :time (m / morning))))))
(c / calm :arg0 (o / organization :name (n / name :op1 "Campaign" :op2 "Against" :op3 "Living" :op4 "Miserably")) :arg1 (a / and :op1 (a2 / announce-01 :arg0 (p / person :mod (m / male)) :arg1 (y / year :quant 2015)) :op2 (a3 / aim-01 :arg0 (p2 / person) :arg1 (c2 / challenge-01 :arg0 (p3 / person) :arg1 (c3 / culture :arg0-of (c4 / cause-01 :arg1 (s / seek-01 :arg0 (m2 / man) :arg1 (h / help-01) :time (n2 / need-01 :arg0 (m3 / man) :arg1 (h2 / help-01)))))))) :time (b / bid-03 :arg0 (p4 / person) :arg1 (a4 / address-02 :arg0 (p5 / person) :arg1 (p6 / problem))))
(e / eliminate-01 :arg1 (r / route :mod (q / quieter) :quant (s / some)) :mod (a / altogether))
(k / know-01 :polarity - :arg0 (i / i) :arg1 (h / have-condition-91 :arg1 (a / and :op1 (e / excite-01 :arg1 (p / party) :arg2 (t / take-01 :arg0 (p2 / party) :arg1 (p3 / part))) :op2 (e2 / end-01 :arg1 (m / multiple :op1 1)) :condition (b / be-located-at-91 :arg1 (p4 / party) :arg2 (t2 / take-01 :arg0 (p5 / party) :arg1 (p6 / part))))))
(m / multi-sentence :snt1 (a / and :op1 (s / system :name (n / name :op1 (w / well-defined) :op2 (l / low-pressure)) :mod (a2 / another) :topic (b / between :op1 (l2 / location :name (n2 / name :op1 "Cape" :op2 "Verde" :op3 "Islands")) :op2 (o / organization :name (n3 / name :op1 "Lesser" :op2 "Antilles"))) :mod (a3 / another) :topic (b2 / between :op1 (l3 / location :name (n4 / name :op1 "Cape" :op2 "Verde" :op3 "Islands")) :op2 (s2 / system :name (n5 / name :op1 (l4 / low-pressure)))) :mod (a4 / another)) :mod (a5 / also)) :snt2 (a6 / add-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg2 (f / forecaster)))))
(r / relished :arg1 (m / model :poss (o / organization :name (n / name :op1 "Ford" :op2 "Focus" :op3 "RS"))) :duration (t / temporal-quantity :quant (N / N-A) :unit (y / year)))
(p / play-02 :arg0 (p2 / person :name (n / name :op1 "Roope" :op2 "Salminen")) :arg1 (r / role :poss (p3 / person :name (n2 / name :op1 "Antti" :op2 "Lautala") :arg0-of (f / found-01 :arg1 (i / island :name (n3 / name :op1 "N-A"))) :arg0-of (f2 / found-01 :arg1 (p4 / person :name (n4 / name :op1 "Antti" :op2 "Lautala")) :time (e / early :op1 (y / year :mod (e2 / early) :part-of (r2 / realize-01 :arg0 (p5 / person))))))))
(p / play-02 :arg0 (p2 / person :name (n / name :op1 "Roope" :op2 "Salminen")) :arg1 (r / role :poss (p3 / person :name (n2 / name :op1 "Antti" :op2 "Lautala") :arg0-of (f / found-01 :arg1 (i / island :name (n3 / name :op1 "N-A"))) :arg0-of (f2 / found-01 :arg1 (p4 / person :name (n4 / name :op1 "Antti" :op2 "Lautala")) :time (e / early :op1 (y / year :mod (e2 / early) :part-of (r2 / realize-01 :arg0 (p5 / person))))))))
(d / drummer :arg0 (r / role :poss (s / she) :topic (f / film)) :arg1 (p / person :name (n / name :op1 "Sirkka") :arg0-of (h / have-rel-role-91 :arg1 (p2 / person :name (n2 / name :op1 "Sipe")) :arg2 (m / mother))) :arg2 (p3 / person :name (n3 / name :op1 "Sirkka") :arg0-of (h2 / have-rel-role-91 :arg1 (p4 / person) :arg2 (m2 / mother))) :time (e / early :op1 (y / year :mod (e2 / early) :part-of (l / location :name (n4 / name :op1 "Apulanta")))))
(d / demonstrate-01 :arg0 (d2 / demonstrate-01 :mod (b / big) :arg1-of (o / organize-01 :arg0 (u / union :mod (t / trade-01)))) :arg1 (a / and :op1 (i / interest-01) :op2 (e / exceptional)) :manner (w / way :quant (m / many)))
(c / contrast-01 :arg1 (p / possible-01 :arg1 (t / true :domain (t2 / that) :source (p2 / perspective :mod (m / medicine) :arg1-of (p3 / pure-02)))) :arg2 (d / danger :arg1-of (r / relate-01) :domain (t3 / that) :mod (f / further) :arg1-of (c2 / cause-01 :arg0 (t4 / try-01 :arg0 (p4 / person :arg0-of (p5 / play-01) :mod (a / any)) :arg1 (r2 / return-01 :arg1 (p6 / person))))))
(a / amploys :arg0 (p / person :arg0-of (w / work-01 :arg1-of (r / regular-02)) :quant (a2 / about :op1 (s / six))))
(m / multi-sentence :snt1 (c / contrast-01 :arg2 (a / ask-01 :arg1 (r / recommend-01 :arg1 (g / get-01 :arg0 (a2 / amr-unknown) :arg1 (r2 / rise-01 :arg1 (w / wood) :mod (f / final))) :condition (a3 / ask-01 :polarity - :arg0 (y / you) :arg1 (q / question-01))))) :snt2 (p / possible-01 :arg1 (p2 / provide-01 :arg0 (t / thing :arg1-of (a4 / answer-01 :arg0 (t2 / they))) :arg1 (p3 / person :arg0-of (w2 / win-01 :arg1 (h / heart :part-of (b / bachelors)))) :arg2 (p4 / person :arg0-of (w3 / win-01 :arg1 (h2 / heart :part-of (b2 / bachelors)))))))
(o / offer-01 :arg0 (w / website) :arg1 (i / information :topic (a / and :op1 (a2 / and :op1 (h / high-02 :arg1 (e / everything)) :op2 (w2 / weight :source (a3 / and :op1 (h2 / high-02 :arg1 (e2 / everything)) :op2 (w3 / weight :poss (t / they))))) :op2 (t2 / thing :mod (k / kind :mod (a4 / amr-unknown)) :arg1-of (l / like-01 :arg0 (t3 / they) :arg1-of (l2 / like-02 :arg0 (t4 / they)))))))
(s / show-01 :arg0 (v / video :prep-on (p / publication :name (n / name :op1 "YouTube"))) :arg1 (d / drink-01 :arg0 (t / teenager) :arg1 (s2 / sanitizer :arg1-of (c / cheap-02))))
(m / missionary :arg0 (p / person :arg0-of (d / drive-01 :arg1 (t / taxi)) :mod (e / enormous)) :arg1 (p2 / person :arg0-of (d2 / drive-01 :arg1 (t2 / taxi)) :arg0-of (d3 / drive-01 :arg1 (t3 / taxi)) :arg0-of (t4 / think-01 :arg1 (g / guy :mod (g2 / good) :domain (p3 / person)))) :arg2 (p4 / person :arg0-of (d4 / drive-01 :arg1 (t5 / taxi)) :mod (e2 / enormous)))
(c / cause-01 :arg1 (d / do-02 :arg0 (a / amr-unknown) :arg1 (i / it)))
(d / describe-01 :arg0 (p / person :arg0-of (h / have-rel-role-91 :arg1 (l / lamb) :arg2 (f / friend))) :arg1 (h2 / he) :arg2 (a / and :op1 (s / smart-06) :op2 (c / charismatic) :op3 (f2 / funny)))
(n / night :ord (o / ordinal-entity :value 1 :range (s / since :op1 (h / have-03 :arg0 (h2 / he) :arg1 (h3 / hits :quant 4) :prep-against (o2 / organization :name (n2 / name :op1 "Seattle" :op2 "Mariners")) :time (d / date-entity :month 7 :day 6)))) :domain (i / it))
(a / and :op1 (r / rich :degree (m / more) :domain (d / discuss-01) :time (n / now)) :op2 (p / possible-01 :arg1 (a2 / approach-02 :arg1 (p2 / person :name (n2 / name :op1 "Marx") :mod (a3 / also)) :prep-without (a4 / and :op1 (i / ideology) :op2 (p3 / politics)) :time (b / before :op1 (n3 / now) :duration (p4 / past :op1 (t / temporal-quantity :quant (N / N-A) :unit (y / year)))))))
(r / recommend-01 :arg1 (p / prevent-01 :arg0 (w / we) :arg1 (d / disaster :mod (t / this)) :arg2 (e / event)))
(r / r-train :arg0 (l / line :mod (l2 / line) :mod (m / main)) :arg1 (s / station :quant 2))
(m / multi-sentence :snt1 (a / amused :polarity - :arg1 (t / transport-01 :arg2 (c / city :name (n / name :op1 "London")) :mod (t2 / this))) :snt2 (' / '' :mode (e / expressive)))
(h / hit-01 :arg1 (s / ship-01 :mod (i / international) :arg0-of (c / cause-01 :arg1 (r / revenue)) :arg0-of (c2 / cause-01 :arg1 (r2 / revenue)) :arg0-of (c3 / cause-01 :arg1 (r3 / revenue))) :time (y / year :mod (r4 / recent)))
(p / pend-01 :arg1 (s / sue-02) :arg2 (s2 / sue-02))
(r / read-01 :arg0 (p / person :name (n / name :op1 "Robert" :op2 "Mugabe") :arg0-of (h / have-org-role-91 :arg1 (z / zimbabwe?s) :arg2 (p2 / president))) :arg1 (s / speech :arg1-of (s2 / same-01)) :time (b / before :op1 (n2 / now) :quant (t / temporal-quantity :quant (N / N-A) :unit (m / month))))
(r / remember-01 :arg0 (i / i) :arg1 (a / and :op1 (t / team :mod (m / malicious) :domain (p / person :name (n / name :op1 "St" :op2 "George"))) :op2 (s / say-01 :arg0 (p2 / person :name (n2 / name :op1 "Wayne")) :arg1 (g / give-01 :polarity - :arg0 (p3 / person) :arg1 (h / homepage :poss (r2 / rat)) :arg2 (p4 / person))) :quant (l / lot)))
(c / contrast-01 :arg1 (c2 / come-01 :arg1 (m / message :arg1-of (c3 / come-01 :arg3 (r / reflect :polarity -))) :arg3 (n / number)) :arg2 (t / tell-01 :arg0 (h / he) :arg2 (j / journalist) :time (a / after :op1 (m2 / mr :arg0 (h2 / he) :arg1 (s / speech :poss (p / person :name (n2 / name :op1 "Mugabe")))))))
(r / recover-02 :arg1 (a / area :mod (e / euro)) :degree (b / bare))
(p / propose-01 :arg0 (p2 / person :arg0-of (h / have-rel-role-91 :arg2 (m / mother))) :arg1 (t / tie :location (a / around :op1 (e / ear :part-of (h2 / he)))))
(c / cause-01 :arg0 (a / admit-01 :arg0 (f / family :mod (m / most)) :arg1 (b / be-located-at-91 :arg1 (f2 / family :mod (m2 / most)) :arg2 (v / village))) :arg1 (b2 / be-located-at-91 :arg2 (n / next-to :op1 (v2 / village))))
(p / personal-02 :arg1 (t / thing :quant (f / few)) :degree (m / more) :compared-to (s / safe-01 :arg1 (w / we)) :time (b / be-located-at-91 :arg1 (r / road) :arg2 (r2 / road)) :arg0-of (m2 / make-02 :arg1 (a / asrb :arg1 (i / idea :mod (r3 / right)) :time (t2 / time :mod (r4 / right)))))
(u / understand-01 :arg0 (p / person :name (n / name :op1 "Koivunen")) :arg1 (i / indignant :arg0 (m / media :mod (c / commerce)) :arg1 (t / thing :arg1-of (a / announce-01))))
(t / tell-01 :arg0 (p / person :name (n / name :op1 "Shannon" :op2 "Lamb") :arg0-of (h / have-org-role-91 :arg2 (p2 / professor :mod (c / college)))) :arg1 (s / shoot-02 :arg0 (p3 / person) :arg1 (a / and :op1 (p4 / person :arg0-of (h2 / have-rel-role-91 :arg1 (h3 / he) :arg2 (g / girlfriend))) :op2 (p5 / person :arg0-of (h4 / have-org-role-91 :arg2 (o / officer))) :arg1-of (n2 / need-01 :purpose (g2 / get-05 :arg1 (p6 / person) :arg2 (h5 / house :poss (p7 / person)))))) :arg2 (p8 / police) :medium (c2 / call-02 :quant 911))
(i / include-91 :arg1 (t / thing :quant 1 :arg1-of (i2 / include-91 :arg2 (t2 / thing :arg2-of (c / characteristic-02 :arg1 (r / region))))) :arg2 (t3 / thing :arg2-of (c2 / characteristic-02 :arg1 (r2 / region))) :mod (s / still) :arg1-of (c3 / cause-01 :arg0 (i3 / idea :topic (l / location :name (n / name :op1 "Joensuu") :arg0-of (h / have-org-role-91 :arg1 (c4 / country :name (n2 / name :op1 "Finland") :mod (w / whole)) :arg2 (c5 / capital))))))
(i / include-91 :arg1 (t / thing :quant 1 :arg1-of (i2 / include-91 :arg2 (t2 / thing :arg2-of (c / characteristic-02 :arg1 (r / region))))) :arg2 (t3 / thing :arg2-of (c2 / characteristic-02 :arg1 (r2 / region))) :mod (s / still) :arg1-of (c3 / cause-01 :arg0 (i3 / idea :topic (l / location :name (n / name :op1 "Joensuu") :arg0-of (h / have-org-role-91 :arg1 (c4 / country :name (n2 / name :op1 "Finland") :mod (w / whole)) :arg2 (c5 / capital))))))
(s / show-01 :arg0 (i / it) :arg1 (s2 / see-01 :arg0 (p / person :arg0-of (v / vote-01 :arg1 (p2 / political-party :name (n / name :op1 "GOP")))) :arg1 (c / campaign-01 :arg0 (p3 / person :name (n2 / name :op1 "Trump"))) :manner (h / honest)) :mod (s3 / still))
(s / show-01 :arg0 (i / it) :arg1 (s2 / see-01 :arg0 (p / person :arg0-of (v / vote-01 :arg1 (p2 / political-party :name (n / name :op1 "GOP")))) :arg1 (c / campaign-01 :arg0 (p3 / person :name (n2 / name :op1 "Trump"))) :manner (h / honest)) :mod (s3 / still))
(p / play-11 :arg0 (h / he) :arg2 (t / thing :quant 65 :arg1-of (i / include-91 :arg2 (g / game :mod (l / league) :quant (b / between :op1 65 :op2 157)))) :mod (a / also) :time (d / date-entity :dayperiod (N / N-A)) :mod (a2 / also))
(f / face-01 :arg0 (c / continent :name (n / name :op1 "Europe")) :arg1 (c2 / crisis :mod (r / refugee) :arg1-of (b / bad-07 :degree (m / most)) :poss (c3 / continent :name (n2 / name :op1 "Europe"))) :time (s / since :op1 (r2 / reactivate-01 :arg1 (w / war) :mod (w2 / world))) :arg0-of (h / have-03 :arg1 (p / person :quant (m2 / more-than :op1 4000000) :arg1-of (d / displace-01)) :time (y / year :mod (t / this))))
(h / have-03 :arg0 (g / guy :mod (o / one)) :arg1 (p / policy :arg0-of (c / cause-01 :arg1 (i / invited :polarity - :arg1 (d / door) :condition (l / locked :polarity - :arg1 (d2 / door))))))
(m / make-01 :arg0 (p / person :name (n / name :op1 "Emir")) :arg1 (t / trip-03 :quant (a / about :op1 (m2 / monetary-quantity :quant 8000 :unit (e / euro)))) :time (a2 / after :op1 (e2 / expend-01)))
(e / event :time (r / raise-01 :arg0 (g / government-organization :name (n / name :op1 "Fed")) :arg1 (r2 / rate :mod (i / interest))) :location (h / here))
(m / multi-sentence :snt1 (r / rage-02 :arg0 (p / person :quant (a / amr-unknown))) :snt2 (b / be-located-at-91 :arg1 (p2 / person :quant 2013 :arg0-of (a2 / arrive-01 :arg1 (p3 / person) :manner (a3 / alone)) :arg0-of (h / have-rel-role-91 :arg1 (p4 / person) :arg2 (c / child))) :arg2 (p5 / person :arg0-of (a4 / arrive-01 :arg1 (p6 / person) :manner (a5 / alone)))) :li 2013)
(m / multi-sentence :snt1 (b / believe-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (o / organization :name (n / name :op1 "Lamb")))) :arg1 (b2 / believe-01 :arg0 (p2 / person) :arg1 (i / involve-01 :arg1 (p3 / person :name (n2 / name :op1 "Prentiss")) :arg2 (p4 / person :name (n3 / name :op1 "Schmidt")) :mod (a / also)) :arg1-of (a2 / allege-01) :mod (a3 / also))) :snt2 (s / say-01 :arg0 (p5 / person :arg0-of (h2 / have-org-role-91 :arg2 (a4 / authority))) :arg1 (i2 / information :polarity - :arg0-of (e / evidence-01 :polarity -) :arg0-of (e2 / evidence-01 :arg1 (t / triangle :arg1 (t2 / triangle))))))
(a / and :op1 (a2 / attempt-01 :arg0 (p / person :name (n / name :op1 "Peter" :op2 "Moody")) :arg1 (a3 / attempt-01 :arg0 (p2 / person) :arg1 (s / spy-01 :arg0 (p3 / person) :arg1 (s2 / spy-01) :location (s3 / stables :poss (p4 / person)) :time (y / year :mod (l / last)))) :arg1-of (a4 / allege-01)) :op2 (t / threaten-01 :arg0 (p5 / person) :arg1 (q / quit-01 :arg0 (p6 / person)) :time (i / immediate)))
(a / and :op1 (s / sit-01 :arg1 (p / person :name (n / name :op1 "Kent" :op2 "Weed") :arg0-of (p2 / produce-01 :arg1 (p3 / person :arg0-of (h / have-org-role-91 :arg2 (e / executive))) :arg2 (p4 / person :arg0-of (r / report-01)))) :arg2 (p5 / person :arg0-of (h2 / have-org-role-91 :arg1 (c / city-district :name (n2 / name :op1 "Hollywood")) :arg3 (r2 / report-01))) :purpose (d / discuss-01 :arg0 (p6 / person) :arg1 (a2 / and :op1 (p7 / person :arg0-of (h3 / have-org-role-91 :arg1 (c2 / city-district :name (n3 / name :op1 "Hollywood")) :arg3 (r3 / report-01))) :op2 (p8 / person :arg0-of (h4 / have-org-role-91 :arg1 (p9 / political-party :name (n4 / name :op1 "N-A")) :arg3 (r4 / report-01))))) :purpose (d2 / discuss-01 :arg0 (p10 / person) :arg1 (a3 / and :op1 (f / finale) :op2 (p11 / person :arg0-of (c3 / compete-02 :ord (o / ordinal-entity :value 1)))))) :op2 (a4 / award-01 :polarity - :arg1 (w / wo) :arg2 (m / money :mod (a5 / any))))
(s / say-01 :arg0 (p / person :name (n / name :op1 "Jacobsen")) :arg1 (c / content-01 :arg1 (s2 / she) :arg2 (r / represent-01 :arg0 (s3 / she) :arg1 (c2 / criminal-organization :name (n2 / name :op1 "N-A") :arg0-of (c3 / care-03 :arg1 (g / generation :mod (f / future)) :mod (a / also)) :arg0-of (l / let-01 :polarity - :arg1 (p2 / play-11 :arg0 (p3 / person :quant 1) :arg2 (s4 / solo))))) :mod (a2 / also)))
(t / think-01 :polarity - :arg0 (p / person :arg1-of (r / register-02) :arg1-of (i / include-91 :arg2 (p2 / person :arg0-of (v / vote-01) :arg1-of (r2 / register-02)) :arg3 (p3 / percentage-entity :value (N / N-A)))) :arg1 (s / she) :arg2 (a / and :op1 (h / honest) :op2 (t2 / trustworthy)))
(a / and :op1 (r / recession-02 :arg1 (r2 / recession-02 :location (a2 / and :op1 (9 / 90s) :op2 (l / live-01))) :mod (r3 / really)))
(i / inspire-01 :arg0 (s / situation :mod (n / new) :prep-in (l / life)) :arg1 (i2 / i) :arg2 (w / write-01 :arg0 (i3 / i) :arg1 (s2 / songs :mod (n2 / new))))
(i / inspire-01 :arg0 (s / situation :mod (n / new) :prep-in (l / life)) :arg1 (i2 / i) :arg2 (w / write-01 :arg0 (i3 / i) :arg1 (s2 / songs :mod (n2 / new))))
(t / turn-02 :arg0 (r / rate-01 :arg1 (p / person :name (n / name :op1 "Trump")) :arg2 (f / favorability)) :arg1 (t2 / temperature-quantity :quant 180))
(w / write-01 :arg0 (p / person :name (n / name :op1 "Sylvester" :op2 "Stallone")) :arg1 (l / location :name (n2 / name :op1 "Rocky") :mod (s / script)) :arg1-of (c / cause-01 :arg0 (s2 / starred :arg0 (h / he) :arg1 (p2 / person))) :li 1976)
(a / and :op1 (r / run-02 :arg0 (s / she) :destination (l / lead-02 :arg0 (s2 / she))) :op2 (d / defend-01 :arg0 (s3 / she) :arg1 (p / position :poss (s4 / she) :arg1-of (r2 / resemble-01 :arg2 (r3 / run-02 :arg0 (s5 / she))))) :time (b / begin-01 :arg1 (b2 / begin-01)))
(s / say-01 :arg0 (p / person :quant 10 :arg1-of (r / republican)) :arg1 (a / agree-01 :arg0 (p2 / person) :arg1 (i / immigrate-01) :arg2 (p3 / person :name (n / name :op1 "Trump"))))
(s / say-01 :arg0 (p / person :name (n / name :op1 "Amirkhani")) :arg1 (r / receive-01 :arg0 (h / he) :arg1 (m / message :arg0-of (a / ask-02 :arg1 (c / check-out-05 :arg0 (h2 / he) :arg1 (a2 / account :quant 1 :mod (i / instagram)) :arg2 (h3 / he))) :arg2 (h4 / he))))
(s / say-01 :arg0 (p / person :name (n / name :op1 "Amirkhani")) :arg1 (r / receive-01 :arg0 (h / he) :arg1 (m / message :arg0-of (a / ask-02 :arg1 (c / check-out-05 :arg0 (h2 / he) :arg1 (a2 / account :quant 1 :mod (i / instagram)) :arg2 (h3 / he))) :arg2 (h4 / he))))
(u / use-01 :arg0 (p / police :mod (c / country :name (n / name :op1 "N-A"))) :arg1 (g / gas :quant (m / mass-quantity :quant (N / N-A) :unit (g2 / gram))) :arg2 (h / hundreds :arg1 (r / refugee)))
(l / launch-01 :arg0 (o / organization :name (n / name :op1 "Metcash")) :arg1 (c / campaign-01 :mod (g / grass-roots)) :purpose (f / fight-01 :arg0 (c2 / campaign-01) :arg1 (o2 / organization :name (n2 / name :op1 "Aldi"))))
(f / favor-01 :arg0 (p / person :quant 1500 :arg0-of (f2 / favor-01 :arg1 (b / building :name (n / name :op1 "N-A"))) :mod (m / metre)) :arg1 (a / attend-02 :arg0 (p2 / person) :arg1 (b2 / book :mod (n2 / new))) :location (c / country :name (n3 / name :op1 "United" :op2 "States")))
(s / strike-01 :arg0 (m / metal :arg1-of (s2 / significant-02 :degree (m2 / most))) :arg1 (a / and :op1 (s3 / strike-01 :arg2 (a2 / and :op1 (p / plant :mod (p2 / power)) :op2 (p3 / plant :mod (p4 / power)))) :op2 (s4 / strike-01 :arg2 (p5 / plant :quant 1977))) :arg1-of (s5 / significant-02 :degree (m3 / most)))
(b / bail-out-02 :arg1 (p / person :name (n / name :op1 "Maksimovic")) :arg2 (c / condition :topic (s / surrender-01 :arg0 (p2 / person))) :arg1-of (c2 / cause-01 :arg0 (a / and :op1 (s2 / surrender-01 :arg0 (p3 / person) :arg1 (p4 / passports :poss (p5 / person) :mod (c3 / country :name (n2 / name :op1 "N-A")))) :op2 (r / report-01 :arg0 (p6 / person) :arg1 (a2 / and :op1 (t / thing :arg1-of (b2 / base-02 :arg2 (d / day))) :op2 (t2 / thing :arg1-of (b3 / base-02 :arg2 (c4 / curfew :mod (6 / 6pm-6am)))))))))
(a / and :op1 (h / have-03 :arg0 (p / person :mod (f / foreign)) :arg1 (c / corbyns :poss (p2 / person))) :op2 (p3 / person :name (n / name :op1 "Nigel" :op2 "Farages") :mod (t / too)))
(p / possible-01 :arg1 (a / and :op1 (a2 / amaze-01 :arg1 (i / it) :degree (p2 / pretty) :time (s / start-01)) :op2 (p3 / possible-01 :arg1 (e / exemplify-01 :arg0 (b / boom :arg1 (o / or :op1 (c / car :arg1-of (s2 / start-01)) :op2 (s3 / something)))))))
(m / maintain-01 :arg0 (p / person :name (n / name :op1 "Clinton")) :arg1 (l / lead-01 :arg0 (w / woman) :arg1 (w2 / woman) :mod (l2 / large)) :concession-of (h / have-03 :arg0 (p2 / person) :arg1 (n2 / narrow)))
(l / likened :arg0 (p / person :name (n / name :op1 "Hayne")) :arg1 (b / blunder :arg1-of (o / originate-01 :arg2 (h / he)) :arg1-of (o2 / originate-01 :arg2 (h2 / he))) :time (b2 / back :op1 (p2 / pass-03 :arg1 (p3 / pass-03 :arg1 (p4 / pass :arg1-of (l2 / lead-03 :arg2 (t / try-01 :arg0 (h3 / he))))))))
(c / contrast-01 :arg1 (p / publish :arg0 (w / we) :arg1 (n / name :poss (y / you)) :condition (u / use-01 :arg0 (w2 / we) :arg1 (m / material :poss (y2 / you) :location (o / or :op1 (c2 / company :name (n2 / name :op1 "BBC")) :op2 (o2 / online))))) :arg2 (p2 / publish :arg0 (w3 / we) :arg1 (n3 / name :poss (y3 / you)) :condition (a / ask-02 :arg0 (w4 / we) :arg1 (- / -rrb- :polarity - :arg0 (w5 / we)) :arg2 (w6 / we)) :condition (a2 / ask-02 :arg0 (w7 / we) :arg1 (-3 / -rrb- :polarity - :arg0 (w8 / we)) :arg2 (w9 / we))))
(m / multi-sentence :snt1 (e / express-01 :arg0 (h / he) :arg1 (r / regret-01 :arg0 (h2 / he) :arg1 (r2 / regret-01 :arg1 (a / and :op1 (b / be-located-at-91 :arg1 (a2 / anywhere :location (a3 / and :op1 (c / council) :op2 (p / person :mod (c2 / country :name (n / name :op1 "N-A"))))) :arg2 (c3 / council)) :op2 (m2 / make-01 :arg0 (a4 / and :op1 (p2 / person :mod (c4 / country :name (n2 / name :op1 "N-A"))) :op2 (p3 / power :mod (r3 / region))) :arg1 (s / situation :mod (t / this))))))))
(m / multi-sentence :snt1 (e / express-01 :arg0 (h / he) :arg1 (r / regret-01 :arg0 (h2 / he) :arg1 (r2 / regret-01 :arg1 (a / and :op1 (b / be-located-at-91 :arg1 (a2 / anywhere :location (a3 / and :op1 (c / council) :op2 (p / person :mod (c2 / country :name (n / name :op1 "N-A"))))) :arg2 (c3 / council)) :op2 (m2 / make-01 :arg0 (a4 / and :op1 (p2 / person :mod (c4 / country :name (n2 / name :op1 "N-A"))) :op2 (p3 / power :mod (r3 / region))) :arg1 (s / situation :mod (t / this))))))))
(t / tell-01 :arg0 (p / person :name (n / name :op1 "Sreekanth" :op2 "Chalasani") :arg0-of (r / research-01) :location (o / organization :name (n2 / name :op1 "Salk" :op2 "Institute") :arg0-of (h / have-org-role-91 :arg1 (o2 / organization) :arg3 (r2 / research-01)))) :arg1 (p2 / possible-01 :arg1 (r3 / replace-01 :arg0 (p3 / procedure) :arg1 (p4 / pulses :mod (e / electricity)) :arg2 (b / brain :part-of (p5 / person)) :purpose (t2 / treat-03 :arg0 (p6 / person) :arg1 (s / symptom :poss (d / disease :mod (p7 / parkinson))))) :time (d2 / day :mod (o3 / one))) :arg2 (p8 / person :arg0-of (r4 / research-01) :location (b2 / brief-01 :arg1 (p9 / person))))
(o / offer-01 :arg0 (h / history) :arg1 (g / guide-01 :arg1 (a / audience) :mod (l / little)) :manner (s / specific-02))
(o / offer-01 :arg0 (h / history) :arg1 (g / guide-01 :arg1 (a / audience) :mod (l / little)) :manner (s / specific-02))
(s / say-01 :arg0 (h / he) :arg1 (p / possible-01 :arg1 (a / and :op1 (s2 / skipping :arg0 (h2 / he) :arg1 (s3 / session :mod (s4 / some))) :op2 (l / leave-11 :arg0 (h3 / he) :arg1 (t / they)))) :mod (a2 / also))
(h / have-03 :arg0 (p / party) :arg1 (e / element :source (m / movement-07 :arg1 (g / government-organization :name (n / name :op1 "N-A") :mod (o / old)))) :time (s / still) :time (s2 / succeed-01 :arg0 (p2 / person :quant 2011)))
(a / and :op1 (c / cost-01 :arg1 (h / house-01) :arg2 (r / rate-entity-91 :arg1 (a2 / around :op1 (m / monetary-quantity :quant 75 :unit (e / euro))) :arg2 (t / temporal-quantity :quant (N / N-A) :unit (n / night)))) :op2 (p / problem :poss (h2 / house-01) :condition (r2 / run-out-05 :arg1 (c2 / customer) :arg2 (m2 / money))))
FAILED_TO_PARSE#Number of opening and closing brackets doesn't match.
(c / contrast-01 :arg2 (p / pinning :polarity - :arg0 (c2 / country :name (n / name :op1 "Hungary")) :arg1 (h / hopeful-03 :arg0 (c3 / country) :arg1 (a / action :mod (a2 / any)) :time (s / soon) :source (o / or :op1 (c4 / city :name (n2 / name :op1 "Brussels")) :op2 (n3 / neighbor-01 :arg1 (c5 / country))))))
(c / contrast-01 :arg2 (p / pinning :polarity - :arg0 (c2 / country :name (n / name :op1 "Hungary")) :arg1 (h / hopeful-03 :arg0 (c3 / country) :arg1 (a / action :mod (a2 / any)) :time (s / soon) :source (o / or :op1 (c4 / city :name (n2 / name :op1 "Brussels")) :op2 (n3 / neighbor-01 :arg1 (c5 / country))))))
(t / talk-01 :arg0 (t2 / they) :arg1 (f / firm :mod (o / old)))
(s / star)
(s / sadden :arg0 (t / that) :arg1 (i / i) :mod (r / really))
(a / and :op2 (e / exemplify-01 :arg0 (e2 / exemplify-01 :arg0 (j / jerseys :arg0 (a2 / and :op1 (r / restaurant :mod (o / organization :name (n / name :op1 "Adidas")) :mod (c / country :name (n2 / name :op1 "N-A"))) :op2 (d / division :mod (b / baseball) :poss (y / you)) :op3 (d2 / division :mod (b2 / baseball) :poss (o2 / organization)))) :arg1 (r2 / return-01 :arg1 (a3 / and) :arg4 (s / street)))))
(m / multi-sentence :snt1 (w / want-01 :arg0 (p / person :name (n / name :op1 "Corbyn") :arg1-of (m2 / mean-01 :arg2 (i / image :mod (t / touchy-feely)))) :arg1 (s / swim-01 :arg0 (p2 / person))) :snt2 (a / and :op1 (t2 / touch-01 :arg0 (i2 / image :mod (t3 / touchy-feely)) :arg1 (m3 / message :topic (r / remain-01 :arg1 (a2 / and :op1 (m4 / media :mod (s2 / social)) :op2 (p3 / perspective :mod (p4 / perspective)))) :op2 (h / hotbed :arg1 (a3 / and :op1 (p5 / perspective) :op2 (b / betrayal))) :mod (e / especially)))))
(m / multi-sentence :snt1 (f / find-02 :arg0 (h / he) :arg1 (d / difficult :degree (v / very) :domain (c / cause-01 :arg0 (a / and :op1 (i / injured :polarity - :arg1 (t / thing :arg1-of (i2 / intend-01))) :op2 (i3 / injured :polarity - :arg1 (t2 / thing)))))) :snt2 (s / say-01 :arg0 (p / person :name (n / name :op1 "Cocu")) :arg1 (g / good :polarity - :domain (i4 / it))))
(m / multi-sentence :snt1 (r / recommend-01 :arg1 (e / ensure-01 :arg0 (y / you) :arg1 (b / be-located-at-91 :arg1 (y2 / you) :arg2 (c / checklist :poss (w / we) :mod (a / all)) :time (b2 / before :op1 (d / downloading :arg0 (y3 / you) :arg1 (y4 / you))))) :mod (a2 / also)) :snt2 (a3 / and :op1 (b3 / bring-up-02 :arg0 (y5 / you) :arg1 (f / features :mod (n / new) :arg2-of (i / include-91 :arg1 (a4 / and :op1 (p / person :arg0-of (a5 / assist-01) :arg1-of (p2 / personal-02) :arg0-of (a6 / assist-01)) :op2 (p3 / productive-03 :mod (h / huge) :mod (h2 / huge)))))) :op2 (f2 / fixed :arg0 (y6 / you) :arg1 (f3 / features :mod (n2 / new) :arg2-of (i2 / include-91 :arg1 (a7 / and :op1 (p4 / person :arg0-of (a8 / assist-01) :arg1-of (p5 / personal-02) :arg0-of (a9 / assist-01)) :op2 (p6 / productive-03 :mod (h3 / huge) :mod (h4 / huge)))))) :op3 (f4 / fix-02 :arg1 (s / system :arg0-of (o / operate-01)))))
(c / contrast-01 :arg2 (d / differ-02 :arg1 (r / rate-entity-91 :arg1 (s / some) :arg2 (t / temporal-quantity :quant (N / N-A) :unit (y / year)) :mod (o / only))))
(c / contrast-01 :arg2 (d / differ-02 :arg1 (r / rate-entity-91 :arg1 (s / some) :arg2 (t / temporal-quantity :quant (N / N-A) :unit (y / year)) :mod (o / only))))
(i / include-91 :arg1 (a / and :op1 (p / person :arg0-of (b / bring-01 :arg1 (w / wealth :arg1-of (e / experience-01)))) :op2 (p2 / person :arg0-of (b2 / bring-01 :arg1 (w2 / wealth) :arg2 (a2 / attack-01 :quant (a3 / all))))) :arg2 (h / he))
(s / say-01 :arg0 (p / person :name (n / name :op1 "Peter" :op2 "Szijjarto") :arg0-of (h / have-org-role-91 :arg1 (p2 / person :arg0-of (h2 / have-org-role-91 :arg2 (m / minister :mod (f / foreign)))) :arg2 (m2 / minister :mod (f2 / foreign)))) :arg1 (p3 / plan-01 :arg0 (c / country :poss (h3 / he)) :arg1 (b / build-01 :arg0 (c2 / country) :arg1 (f3 / fence :mod (r / razor-wire)) :location (a / along :op1 (b2 / border :poss (c3 / country))) :purpose (s2 / stop-01 :arg0 (c4 / country) :arg1 (f4 / flow-01 :arg1 (p4 / person :arg0-of (s3 / specialize-01 :arg1 (s4 / stop-01 :arg0 (c5 / country) :arg1 (f5 / flow-01 :arg1 (p5 / person :arg0-of (u / use-01))))))))) :mod (a2 / also)) :time (m3 / meanwhile) :mod (a3 / also))
(s / support-01 :polarity - :arg0 (p / percentage-entity :value (N / N-A)) :arg1 (s2 / she))
(s / say-01 :arg0 (p / person :name (n / name :op1 "Lamb")) :arg1 (c / contrast-01 :arg1 (k / kill-01 :arg0 (p2 / person :arg0-of (h / have-rel-role-91 :arg1 (i / i) :arg2 (w / wife))) :arg1 (p3 / person :arg0-of (h2 / have-rel-role-91 :arg1 (i2 / i) :arg2 (w2 / wife)))) :arg2 (r / record :polarity - :poss (t / they) :time (e / ever))) :medium (c2 / call-02 :quant 911))
(i / intend-01 :arg0 (o / organization :name (n / name :op1 "Kia")) :arg1 (w / win-01 :arg0 (o2 / organization) :arg1 (h / heart :part-of (p / person :arg0-of (b / buy-01 :arg1 (m / middleclass :mod (u / upper) :mod (g / good :degree (m2 / more) :mod (e / even)))))) :arg2 (a / and :op1 (l / level :mod (c / country :name (n2 / name :op1 "N-A"))) :op2 (l2 / level :arg1-of (l3 / low-04 :degree (m3 / more))) :op3 (e2 / equipment :mod (h2 / higher-grade)))))
(h / have-concession-91 :arg2 (a / attempt-01 :arg0 (p / person :mod (c / country :name (n / name :op1 "N-A"))) :arg1 (c2 / cover-01 :arg0 (p2 / person) :arg1 (s / spill :mod (l / lead-02)) :time (t / today)) :concession (a2 / attempt-01 :arg0 (p3 / person) :arg1 (c3 / cover-01 :arg0 (p4 / person) :arg1 (s2 / spill :mod (l2 / lead-02)) :time (t2 / today)))))
(s / say-01 :arg0 (p / person :name (n / name :op1 "Prentiss") :arg0-of (h / have-rel-role-91 :arg1 (p2 / person) :arg2 (h2 / husband))) :arg1 (p3 / person :name (n2 / name :op1 "Shawn" :op2 "O'Steen") :arg0-of (h3 / have-rel-role-91 :arg1 (p4 / person) :arg2 (h4 / husband))) :time (b / before :op1 (n3 / now) :quant (t / temporal-quantity :quant (N / N-A) :unit (y / year))) :concession-of (a / and :op1 (r / remain-01 :arg1 (p5 / person) :arg3 (f / friend)) :op2 (h5 / have-03 :arg0 (p6 / person) :arg1 (p7 / person :arg0-of (h6 / have-rel-role-91 :arg1 (p8 / person) :arg2 (d / daughter))) :time (n4 / now :quant 19))))
(s / signs :arg0 (b / board :mod (c / city)) :arg1 (t / thing :arg2-of (n / name-01 :arg1 (t2 / thing :arg2-of (n2 / name-01 :arg1 (s2 / street))) :time (p / previous))) :arg2 (t3 / thing :arg2-of (n3 / name-01 :arg1 (t4 / thing :arg2-of (n4 / name-01 :arg1 (s3 / street)))) :time (p2 / previous)) :location (l / language :part-of (l2 / location :name (n5 / name :op1 "Joensuu"))))
(a / available-02 :arg2 (a2 / and :op1 (p / person :arg1-of (b / black-05)) :op2 (p2 / person :mod (w / white)) :op3 (p3 / person :mod (n / nickel)) :op4 (c / copper-plated)))
(a / and :op1 (m / meet-03 :arg0 (o / organization :name (n / name :op1 "US" :op2 "Federal" :op3 "Reserve")) :arg1 (w / world) :time (b / before :op1 (n2 / now) :quant (o2 / over :op1 (b2 / between :op1 (t / temporal-quantity :quant (N / N-A) :unit (d / day)) :op2 (t2 / temporal-quantity :quant (N2 / N-A) :unit (d2 / day)))))) :op2 (t3 / take-01 :arg0 (w2 / world) :arg1 (d3 / decide-01 :arg1 (o3 / or :mode (i / interrogative) :op1 (r / raise-01 :arg1 (r2 / rate :mod (i2 / interest))) :op2 (r3 / raise-01 :polarity - :arg1 (r4 / rate :mod (i3 / interest)) :time (a2 / after :op1 (n3 / now) :quant (n4 / nearly :op1 (t4 / temporal-quantity :quant (N3 / N-A) :unit (d4 / decade)))))))))
(a / and :op1 (m / meet-03 :arg0 (o / organization :name (n / name :op1 "US" :op2 "Federal" :op3 "Reserve")) :arg1 (w / world) :time (b / before :op1 (n2 / now) :quant (o2 / over :op1 (b2 / between :op1 (t / temporal-quantity :quant (N / N-A) :unit (d / day)) :op2 (t2 / temporal-quantity :quant (N2 / N-A) :unit (d2 / day)))))) :op2 (t3 / take-01 :arg0 (w2 / world) :arg1 (d3 / decide-01 :arg1 (o3 / or :mode (i / interrogative) :op1 (r / raise-01 :arg1 (r2 / rate :mod (i2 / interest))) :op2 (r3 / raise-01 :polarity - :arg1 (r4 / rate :mod (i3 / interest)) :time (a2 / after :op1 (n3 / now) :quant (n4 / nearly :op1 (t4 / temporal-quantity :quant (N3 / N-A) :unit (d4 / decade)))))))))
(i / include-91 :arg1 (a / and :op1 (c / company :arg0-of (h / have-org-role-91 :arg1 (c2 / company) :arg2 (c3 / capital)) :arg1-of (h2 / high-02)) :op2 (s / stock :arg1-of (l / low-04 :degree (m / more))) :op3 (s2 / stock :arg1-of (l2 / low-04 :degree (m2 / more)))) :arg2 (a2 / and :op1 (p / point :mod (p2 / percentage-entity :value (N / N-A)) :poss (c4 / company)) :op2 (p3 / point :quant 3 :mod (p4 / percentage-entity :value (N2 / N-A)) :arg1-of (i2 / include-91 :arg2 (p5 / point :quant 3 :mod (p6 / percentage-entity :value (N3 / N-A)))) :mod (r / respective))) :mod (a3 / also) :mod (a4 / also))
(c / contrast-01 :arg1 (h / have-org-role-91 :arg0 (c2 / council :mod (c3 / country :name (n / name :op1 "N-A"))) :arg1 (c4 / council) :mod (u / unanimous)) :arg2 (a / approve-01 :arg0 (a2 / and :op1 (p / person :arg0-of (h2 / have-org-role-91 :arg1 (o / organization) :arg3 (l / lead-02 :arg0 (p2 / person)))) :op2 (p3 / person :arg0-of (h3 / have-org-role-91 :arg1 (o2 / organization) :arg3 (l2 / lead-02 :arg0 (p4 / person)))) :op3 (p5 / person :arg0-of (h4 / have-org-role-91 :arg1 (o3 / organization) :arg3 (l3 / lead-02 :arg0 (p6 / person))))) :arg1 (p7 / person :arg0-of (h5 / have-org-role-91 :arg1 (o4 / organization) :arg3 (l4 / lead-02 :arg0 (p8 / person)))) :mod (a3 / also)))
(n / name-02 :arg1 (a / atrium :location (h / hospital)) :time (a2 / after :op1 (p / person :name (n2 / name :op1 "Subban"))))
(r / resume-01 :arg0 (c / class) :arg1 (w / wednesday))
(m / matter :mod (a / another) :domain (t / transport-01 :mod (a2 / air)))
(c / contrast-01 :arg1 (s / struggled :arg0 (o / organization :name (n / name :op1 "Juventus")) :arg1 (l / league :mod (f / football) :mod (c2 / country :name (n2 / name :op1 "N-A"))) :time (s2 / season :mod (t / this))) :arg2 (h / have-03 :arg0 (o2 / organization) :arg1 (s3 / start-01 :arg1 (o3 / organization :name (n3 / name :op1 "D" :op2 "Group") :part-of (o4 / organization :name (n4 / name :op1 "Champions" :op2 "League"))) :arg1-of (s4 / strong-02) :time (w / win-01 :arg0 (o5 / organization) :arg1 (g / game :quant (2 / 2-1) :mod (a / away))))))
(m / multi-sentence :snt1 (h / hope-01 :arg0 (i / i) :arg1 (s / stabilises :arg1 (b / body :poss (h2 / he)))) :snt2 (a / and :op1 (c / confident-01 :arg1 (i2 / i)) :op2 (m2 / make-02 :arg0 (h3 / he) :arg1 (c2 / career :topic (k / kind :mod (d / deserve-01 :arg0 (h4 / he)))))))
(m / multi-sentence :snt1 (m2 / mean-01 :arg1 (t / that) :arg2 (p / possible-01 :arg1 (b / be-located-at-91 :arg1 (r / recession-02 :mod (n / next)) :arg2 (h / here) :time (a / as-soon-as :op1 (a2 / and :op1 (a3 / autumn :mod (n2 / next)) :op2 (m3 / market :mod (f / finance))))))) :snt2 (c / crash-01 :arg1 (r2 / rate) :time (b2 / before)))
(c / contrast-01 :arg1 (d / define-01 :polarity - :arg0 (w / work-01 :arg0 (t / they)) :arg1 (c2 / character :mod (e / each))) :arg2 (d2 / define-01 :arg0 (p / person :arg0-of (h / have-rel-role-91 :arg1 (t2 / they) :arg2 (f / friend))) :arg1 (p2 / person :arg0-of (h2 / have-rel-role-91 :arg1 (t3 / they) :arg2 (f2 / friend)))))
(r / recommend-01 :arg1 (o / open-01 :arg1 (w / we) :prep-in (a / approach-02 :arg0 (w2 / we) :arg1 (a2 / and :op1 (p / person :arg0-of (u / use-01 :arg1 (l / language))) :op2 (p2 / person :arg0-of (u2 / use-01 :arg1 (l2 / language))) :op3 (p3 / person :arg0-of (u3 / use-01 :arg1 (l3 / language))) :op4 (p4 / person :arg0-of (u4 / use-01 :arg1 (l4 / language))) :op5 (p5 / person :arg0-of (u5 / use-01 :arg1 (l5 / language) :arg1-of (s / strong-02) :mod (a3 / also) :location (p6 / peninsula :name (n / name :op1 "N-A")))))) :mod (a4 / also)))
(r / recommend-01 :arg1 (o / open-01 :arg1 (w / we) :prep-in (a / approach-02 :arg0 (w2 / we) :arg1 (a2 / and :op1 (p / person :arg0-of (u / use-01 :arg1 (l / language))) :op2 (p2 / person :arg0-of (u2 / use-01 :arg1 (l2 / language))) :op3 (p3 / person :arg0-of (u3 / use-01 :arg1 (l3 / language))) :op4 (p4 / person :arg0-of (u4 / use-01 :arg1 (l4 / language))) :op5 (p5 / person :arg0-of (u5 / use-01 :arg1 (l5 / language) :arg1-of (s / strong-02) :mod (a3 / also) :location (p6 / peninsula :name (n / name :op1 "N-A")))))) :mod (a4 / also)))
(s / say-01 :arg0 (p / person :name (n / name :op1 "Lopez")) :arg1 (t / think-01 :polarity - :arg0 (k / kid) :arg1 (b / bad-07 :arg1 (k2 / kid) :beneficiary (t2 / they))))
(c / cause-01 :arg0 (l / lack-01 :arg0 (p / person :name (n / name :op1 "Sergei" :op2 "Aguero") :arg0-of (i / injure-01 :mod (k / knee))) :arg1 (s / strike-01 :mod (c2 / city?s))))
(s / say-01 :arg0 (p / person :name (n / name :op1 "O'Steen")) :arg1 (d / devastated :domain (s2 / she) :arg1-of (c / complete-02)) :arg1-of (s3 / say-01 :arg0 (p2 / person :arg0-of (h / have-rel-role-91 :arg1 (h2 / he) :arg2 (d2 / daughter)))))
(s / say-01 :arg0 (p / person :name (n / name :op1 "Mrs" :op2 "Laury")) :arg1 (t / topic :mod (i / important) :domain (t2 / thing :arg1-of (d / decide-01) :mod (c / conscious) :domain (t3 / this)) :location (h / here)))
(a / and :op1 (p / plenty :domain (i / idea :topic (o / open-01 :arg0 (p2 / person :name (n / name :op1 "Moeen")) :arg1 (b / batting) :path (p3 / person :name (n2 / name :op1 "Cook") :arg0-of (g / get-01 :arg1 (s / spinner :mod (e / extra)) :time (k / keep-01 :arg0 (p4 / person) :arg1 (q / quicks :quant 4))))))) :op2 (o2 / oppose-01 :polarity - :arg0 (i2 / i) :arg1 (s2 / something)))
(c / contrast-01 :arg2 (t / think-01 :arg0 (p / person :name (n / name :op1 "Korkman")) :arg1 (w / worth :domain (p2 / person :name (n2 / name :op1 "Marx"))) :mod (s / still)))
(c / contrast-01 :arg2 (t / think-01 :arg0 (p / person :name (n / name :op1 "Korkman")) :arg1 (w / worth :domain (p2 / person :name (n2 / name :op1 "Marx"))) :mod (s / still)))
(c / contrast-01 :arg2 (t / think-01 :arg0 (p / person :name (n / name :op1 "Korkman")) :arg1 (w / worth :domain (p2 / person :name (n2 / name :op1 "Marx"))) :mod (s / still)))
(' / '' :time (b / before :op1 (n / now) :quant (t / temporal-quantity :quant (N / N-A) :unit (y / year))))
(f / fight-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (o / organization :name (n / name :op1 "RAF")) :arg2 (p2 / person :arg0-of (p3 / pilot-01)))) :arg1 (p4 / person :arg0-of (h2 / have-org-role-91 :arg1 (o2 / organization) :arg3 (p5 / pilot-01))) :time (y / yesterday))
(f / fight-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (o / organization :name (n / name :op1 "RAF")) :arg2 (p2 / person :arg0-of (p3 / pilot-01)))) :arg1 (p4 / person :arg0-of (h2 / have-org-role-91 :arg1 (o2 / organization) :arg3 (p5 / pilot-01))) :time (y / yesterday))
(v / visit-01 :arg0 (i / i) :arg1 (t / tank :quant (a / all)))
(c / contact-01 :mode (i / imperative) :arg0 (w / we) :arg1 (w2 / we) :prep-on (w3 / we :mod (t / twitter)))
(c / contrast-01 :arg1 (w / work-01 :arg0 (c2 / couple) :manner (t / together) :frequency (o / often)) :arg2 (a / act-02 :arg0 (p / person :name (n / name :op1 "Olga")) :time (d / direction :mod (t2 / tuukka?s)) :ord (o2 / ordinal-entity :value 1)))
FAILED_TO_PARSE#Number of opening and closing brackets doesn't match.
(r / reclaim-01 :arg0 (a / aisles :arg1-of (w / wide-02)) :arg1 (a2 / and :op1 (c / carts) :op2 (f / forklifts) :mod (b / both)))
(a / arrives :arg0 (o / organization :name (n / name :op1 "Kia" :op2 "Optima")) :location (c / country :poss (w / we)) :time (b / before :op1 (c2 / change-01 :duration (t / temporal-quantity :quant (N / N-A) :unit (y / year)))))
(s / say-01 :arg0 (r / report-01 :arg0 (p / police)) :arg1 (m / mean-01 :arg1 (p2 / person :quant 3 :arg0-of (s2 / study-01) :location (c / city :name (n / name :op1 "New" :op2 "York") :location (u / upstate)) :arg0-of (s3 / study-01)) :arg2 (p3 / poisoned :arg0 (p4 / person) :arg1 (p5 / person :arg0-of (t / teach-01) :mod (' / '')) :manner (p6 / put-03 :arg0 (p7 / person) :arg1 (p8 / product :mod (a / antibacterial)) :arg2 (a2 / around :op1 (r2 / river))))) :arg2 (p9 / person :quant 3 :arg0-of (s4 / study-01) :location (c2 / city :name (n2 / name :op1 "New" :op2 "York") :location (c3 / country :name (n3 / name :op1 "N-A")))))
(a / and :op1 (k / know-02 :arg1 (o / organization :name (n / name :op1 "Moody") :arg1-of (k2 / know-02 :arg2 (p / prepare-01 :arg1 (u / unbeaten))) :mod (g / good :degree (m / most)) :arg1-of (m2 / mean-01 :arg2 (p2 / prepare-01 :arg1 (u2 / unbeaten)))) :arg3 (p3 / prepare-01 :arg0 (o2 / organization) :arg1 (u3 / unbeaten))) :op2 (a2 / applied :arg1 (r / rule :purpose (t / treat-03) :mod (r2 / race-day)) :time (a3 / after :op1 (a4 / apply-02 :arg1 (p4 / poultice :mod (c / clay)) :arg2 (l / leg :part-of (p5 / person :arg0-of (o3 / oppose-01 :arg1 (r3 / rule))))))))
(s / say-01 :arg0 (h / he) :arg1 (c / contrast-01 :arg2 (l / likely-01 :polarity - :arg1 (n / neutralize-01 :arg0 (p / power :arg3-of (s2 / spend-01)) :arg1 (m / monetary-quantity :arg2-of (c2 / cost-01 :arg1 (m2 / monetary-quantity :arg1-of (h2 / high-02 :degree (m3 / more))))) :location (f / firm :poss (h3 / he))))))
(a / and :op1 (w / worth :arg1-of (v / value-01 :arg2 (m / millions))) :op2 (c / company :arg1-of (s / succeed-01)))
(n / note-01 :arg0 (p / person :name (n2 / name :op1 "Jeffrey" :op2 "Lacker") :arg0-of (h / have-org-role-91 :arg1 (o / organization :name (n3 / name :op1 "Federal" :op2 "Reserve" :op3 "Bank" :op4 "of" :op5 "Richmond")) :arg2 (p2 / president)) :arg0-of (h2 / have-org-role-91 :arg1 (o2 / organization :name (n4 / name :op1 "Federal" :op2 "Reserve" :op3 "Bank" :op4 "of" :op5 "Richmond")) :arg2 (p3 / president))) :arg1 (h3 / have-03 :arg0 (o3 / organization :name (n5 / name :op1 "the" :op2 "Fed")) :arg1 (h4 / history :topic (o4 / overreact :arg1 (m / move-01 :arg1 (m2 / market :mod (f / finance)) :arg1-of (s / seem-01) :arg1-of (s2 / seem-01 :arg2 (f2 / fundamentals :mod (e / economy))))))) :time (m3 / month :mod (t / this)))
(c / contrast-01 :arg1 (p / possible-01 :arg1 (p2 / protest-01 :arg0 (p3 / person :quant 1) :arg1-of (p4 / possible-01)) :mod (o / of-course)) :arg2 (s / suicide :mod (p5 / politics) :prep-for (p6 / person :mod (o2 / ordinary)) :domain (p7 / proclaiming :arg1-of (o3 / open-04))))
(i / include-91 :arg3 1 :arg1 (s / show-04 :arg1-of (c / come-01 :arg4 (m / mind) :time (a / and :op1 (t / try-01) :op2 (o / offer-01 :arg0 (i2 / i) :arg1 (m2 / mechanism :arg1-of (l / long-03 :arg2 (l2 / long-03))))))) :arg2 (f / friend))
(c / contrast-01 :arg2 (a / and :op1 (s / sit-01 :arg1 (h / he) :arg2 (t / there) :duration (t2 / temporal-quantity :quant (N / N-A) :unit (h2 / hour))) :op2 (s2 / say-01 :arg0 (p / person :name (n / name :op1 "Aleksandr" :op2 "Pisarevskiy") :arg0-of (h3 / have-org-role-91 :arg2 (c2 / coordinator))) :arg1 (p2 / peninsula :name (n2 / name :op1 "N-A")))))
(m / multi-sentence :snt1 (t / threaten-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (o / organization :name (n / name :op1 "Union" :op2 "of" :op3 "Health" :op4 "and" :op5 "Social" :op6 "Care" :op7 "Professionals")) :arg2 (- / -lrb-))) :arg2 (a / and :op1 (s / strike-01 :arg0 (p2 / person)) :op2 (n2 / nurse :arg0 (p3 / person)))) :snt2 (r / resignations :quant 2007))
(e / event :topic (p / person :arg0-of (r / receive-01 :arg1 (d / deportation))))
(c / confirm-01 :arg0 (g / government-organization :name (n / name :op1 "White" :op2 "House")) :arg1 (v / visit-01 :arg0 (p / person :name (n2 / name :op1 "Xi" :op2 "Jinping")) :arg1 (c2 / city :name (n3 / name :op1 "Washington")) :location (c3 / city :name (n4 / name :op1 "Washington"))))
(a / and :op1 (r / recommend-01 :arg1 (d / discuss-01 :arg0 (y / you) :arg1 (t / thing :arg1-of (d2 / discuss-01)) :arg2 (p / point :mod (c / child?s) :mod (v / view-01)))) :op2 (l / listen-01 :arg0 (y2 / you) :arg1 (t2 / thing :arg1-of (a2 / ask-01 :arg0 (h / he))) :manner (c2 / close)))
(s / see-01 :arg1 (p / pmqs :arg0 (a / and :op1 (j / judge-01 :arg0 (p2 / person :arg0-of (l / lead-02 :arg1 (f / fellow :mod (f2 / fellow) :poss (p3 / person))))) :op2 (c / command-02 :arg0 (p4 / person) :arg1 (s2 / standing :poss (p5 / person)))) :arg2 (a2 / and :op1 (j2 / judge-01 :arg0 (p6 / person) :arg1 (p7 / person :arg0-of (h / have-org-role-91 :arg1 (f3 / fellow :mod (f4 / fellow) :poss (p8 / person)) :arg2 (m / member)))) :op2 (p9 / person :arg0-of (h2 / have-org-role-91 :arg1 (f5 / fellow :poss (p10 / person)) :arg2 (m2 / member))) :op3 (s3 / standing :poss (p11 / person))) :arg1-of (c2 / cause-01 :arg0 (a3 / and :op1 (b / become-01 :arg1 (p12 / person) :arg2 (b2 / become-01 :arg1 (p13 / person) :arg2 (c3 / caricature))) :op2 (n / need-01 :arg0 (p14 / person) :arg1 (r / reform-01))))) :time (s4 / since :op1 (t / televised :domain (i / it) :ord (o / ordinal-entity :value 1))))
(l / left :arg0 (- / -lrb- :name (n / name :op1 (a / actor) :op2 (-2 / -lrb-) :op3 (-3 / -lrb-))) :arg1 (-4 / -rrb- :mod (r / right)) :time (a2 / after :op1 (n2 / now) :quant (f / few :op1 (t / temporal-quantity :quant (N / N-A) :unit (y / year)))))
(s / say-01 :arg1 (h / have-03 :arg0 (l / lax-c) :arg1 (l2 / lot :topic (a / and :op1 (s2 / shop :mod (o / other)) :op2 (r / restaurant)))) :arg2 (p / person :name (n / name :op1 "N-A")))
(l / lie-07 :arg1 (f / friendship) :arg2 (h / heart :part-of (b / battle-01)) :purpose (m / meet-01 :arg0 (f2 / friendship) :arg1 (c / challenge-01 :arg2 (t / this))))
FAILED_TO_PARSE#Number of opening and closing brackets doesn't match.
(h / have-06 :arg0 (i / it) :arg1 (i2 / it) :time (d / day :mod (r / race)))
(c / charge-05 :arg1 (p / person :name (n / name :op1 "Meng") :arg2-of (i / include-91 :arg1 (m / mr.)) :arg2-of (i2 / include-91 :arg1 (m2 / mr.)) :arg2-of (i3 / include-91 :arg1 (m3 / mr.))) :arg2 (a / and :op1 (h / hazing :mod (a2 / assault)) :op2 (c2 / conspiracy :arg2-of (c3 / criminal-03))) :mod (a3 / also))
(s / struggle-01 :arg0 (i / i) :arg2 (i2 / idea :topic (t / tell-01 :arg0 (a / and :op1 (p / person :arg0-of (r / rival-01 :arg1 (c / company :name (n / name :op1 "BBC")))) :op2 (p2 / person :name (n2 / name :op1 "Johnson") :arg0-of (h / have-org-role-91 :arg2 (' / ''))) :arg1-of (s2 / show-01 :arg0 (p3 / person :arg0-of (r2 / rival-01 :arg1 (c2 / country :name (n3 / name :op1 "N-A")))) :arg1-of (c3 / clear-06))) :arg1 (o / organization :name (n4 / name :op1 "House" :op2 "of" :op3 "Lords" :op4 "communication" :op5 "committee")) :arg2 (p4 / part :part-of (i3 / inquire-01 :arg0 (c4 / company) :arg1 (c5 / company))))))
(m / matter-01 :arg1 (a / and :op1 (b / book) :op2 (l / life :arg1-of (b2 / black-04))) :mod (s / still) :mod (s2 / still))
(m / message :prep-on (w / we :mod (w2 / whatsapp)))
(p / possible-01 :arg1 (a / affect-01 :arg0 (y / you) :arg1 (p2 / person :arg0-of (p3 / play-01))) :degree (a2 / amr-unknown))
(c / contrast-01 :arg1 (s / see-01 :arg0 (p / person :quant (m / many)) :arg1 (p2 / person :name (n / name :op1 "Sanders")) :manner (h / honest)) :arg2 (h2 / have-03 :polarity - :arg0 (p3 / person :quant (m2 / many)) :arg1 (o / opine-01 :arg0 (p4 / person))))
(s / start-01 :arg0 (p / person :name (n / name :op1 "Norris") :quant (b / between :op1 (1 / 1-1) :op2 4)) :arg1 (o / organization :name (n2 / name :op1 "Tigers")) :time (s2 / since :op1 (a / acquire-01 :arg1 (t / trade-01 :arg2 (p2 / person :name (n3 / name :op1 "David" :op2 "Price") :arg0-of (h / have-org-role-91 :arg2 (l / lhp))) :time (d / date-entity :month 7 :day 30)))))
FAILED_TO_PARSE#Number of opening and closing brackets doesn't match.
(p / possible-01 :arg1 (p2 / probable :domain (s / say-01 :arg0 (a / and :op1 (p3 / person :mod (m / most) :location (o / outside :op1 (t / tendency :mod (w / woad-wearing) :location (l / location :name (n / name :op1 "Ukip"))))) :op2 (s2 / shore :mod (w2 / wilder) :poss (t2 / tory :mod (l2 / little)))) :arg1 (y / yes))) :mod (w3 / well :mode (e / expressive)))
(' / '' :arg1 (a / and :op1 (d / dvd) :op2 (d2 / dvd) :op3 (m / movie :arg2-of (i / identical-01)) :op4 (m2 / movie :arg2-of (i2 / identical-01))) :time (b / back))
(o / obligate-01 :polarity - :arg1 (y / you) :arg2 (f / force-01 :arg0 (y2 / you) :arg1 (a / and :op1 (d / discuss-01 :arg1 (d2 / discuss-01)) :op2 (m / member :arg2-of (h / have-org-role-91 :arg1 (c / crisis :mod (c2 / crisis) :mod (o2 / organization :name (n / name :op1 "Red" :op2 "Cross"))))) :op3 (p / person :name (n2 / name :op1 "Ferdinand" :op2 "Garoff") :arg0-of (h2 / have-org-role-91 :arg1 (o3 / organization) :arg2 (m2 / member))))))
(( / ( :( (n / name) :op1 "Jeremy" :op2 "Corbyn")
(s / see-01 :arg0 (i / i) :arg1 (a / and :op1 (p / person :name (n / name :op1 "Clinton")) :op2 (p2 / person :name (n2 / name :op1 "Sanders")) :op3 (p3 / person :name (n3 / name :op1 "Biden")) :prep-as (a2 / and :op1 (h / honest) :op2 (t / trustworthy))) :arg2 (h2 / have-03 :arg0 (a3 / and) :arg1 (q / quality :arg0-of (l / lead-02) :arg1-of (s2 / strong-02))))
(m / multi-sentence :snt1 (p / possible-01 :arg1 (o / order-02 :arg0 (p2 / person :arg0-of (h / have-rel-role-91 :arg1 (p3 / person :mod (c / country :name (n / name :op1 "N-A"))) :arg2 (w / wife))) :arg1 (p4 / person :arg0-of (h2 / have-rel-role-91 :arg1 (p5 / person) :arg2 (w2 / wife))) :arg2 (p6 / person :arg0-of (h3 / have-rel-role-91 :arg1 (p7 / person) :arg2 (w3 / wife))))) :snt2 (a / and :op1 (s / serve-01 :arg0 (s2 / she) :arg1 (g / game :name (n2 / name :op1 "N-A")) :mod (o2 / only)) :op2 (a2 / apron :arg0 (s3 / she))))
(f / forgotten :arg0 (p / person :name (n / name :op1 "Toivola")) :arg1 (p2 / part :mod (m / main) :arg1-of (p3 / play-02 :arg0 (p4 / person :name (n2 / name :op1 "Pekka" :op2 "Rautakallio")))))
(a / archived :arg1 (w / work-01 :arg0 (p / person :name (n / name :op1 "Timo" :op2 "T.A." :op3 "Mikkonen?s")) :arg1-of (a2 / actual-02)) :time (s / summer :mod (a3 / already)) :location (o / organization :name (n2 / name :op1 "National" :op2 "Audiovisual" :op3 "Institute")) :arg1-of (c / cause-01 :arg0 (p2 / picked :arg0 (p3 / person :arg0-of (r / represent-01)) :arg1 (a4 / and :op1 (f / film) :op2 (m / material :mod (o2 / other))) :arg2 (a5 / and :op1 (f2 / film) :op2 (m2 / material :mod (o3 / other))))))
(m / man :arg1-of (i / include-91 :arg2 (p / person :arg2-of (s / staff-01)) :arg3 (m2 / majority)) :time (c / current))
(f / fear-01 :polarity - :arg0 (i / i) :mod (e / even) :concession (w / we?ve :arg1 (s / schedule :mod (t / tight))))
(p / possible-01 :mode (i / interrogative) :polarity - :arg1 (r / romantic :domain (i2 / it) :condition (m / move-01 :arg1 (f / future :poss (y / you) :time (f2 / future)) :arg2 (h / hall :arg1-of (s / same-01)))))
(s / spend-01 :arg0 (c / crew :arg0-of (p / produce-01) :mod (w / whole)) :arg1 (t / temporal-quantity :quant (N / N-A) :unit (m / month) :location (l / location :name (n / name :op1 "Heinola"))) :time (n2 / now))
(a / and :op1 (s / see-01 :arg0 (i / i) :arg1 (t / they) :manner (t2 / together)) :op2 (h / have-03 :arg0 (t3 / they) :arg1 (c / chemistry :mod (t4 / that))))
(f / face-01 :arg0 (p / person :mod (c / country :name (n / name :op1 "France"))) :arg1 (o / or :op1 (r / reelect-01) :op2 (r2 / replace-01)) :location (t / thing :quant 2017))
(a / and :op1 (h / hard-04 :degree (m / more) :domain (a2 / adversities)) :op2 (h2 / harsher :arg1 (a3 / adversities) :compared-to (s / since :op1 (d / depression :quant (1 / 1930s)))))
(r / recommend-01 :arg1 (o / or :op1 (w / wait-01 :arg1 (p / person :arg0-of (u / use-01)) :arg2 (d / die-01 :arg1 (p2 / person))) :op2 (a / and :op1 (w2 / wait-01 :arg1 (p3 / person)) :op2 (u2 / upgrade-02 :arg0 (p4 / person)) :op3 (u3 / upgrade-02 :arg0 (p5 / person))) :mod (e / either)) :arg2 (g / get-05 :arg1 (p6 / person) :arg2 (a2 / around)))
(s / say-01 :arg0 (p / police) :arg1 (p2 / phoned :arg0 (l / lamb) :arg1 (p3 / person :arg0-of (h / have-rel-role-91 :arg2 (r / relative))) :time (p4 / point :mod (s2 / some)) :purpose (t / tell-01 :arg0 (p5 / person) :arg1 (g / go-02 :polarity - :arg0 (p6 / person) :arg4 (j / jail)) :arg2 (p7 / person))))
(b / begin-01 :arg0 (m / meet-03 :arg0 (o / organization :name (n / name :op1 "OSCE" :op2 "Parliamentary" :op3 "Assembly")) :arg1 (m2 / meet-03 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (o2 / organization) :arg3 (m3 / meet-03 :arg0 (p2 / person) :arg1 (o3 / organization)))) :manner (t / thorough))) :arg1 (m4 / meet-03 :arg0 (p3 / person) :arg1 (m5 / meet-03 :arg0 (p4 / person) :arg1 (m6 / meet-03 :location (c / city :name (n2 / name :op1 "Helsinki"))) :manner (t2 / thorough)) :manner (t3 / thorough)))
(s / supposes :arg0 (c / compete-01 :mod (p / proper)) :arg1 (g / good :mod (s2 / stallion)))
(o / or :op2 (w / want-01 :mode (i / interrogative) :arg0 (y / you) :arg1 (f / find-out-03 :arg0 (y2 / you) :arg1 (t / thing :arg1-of (t2 / talk-01 :arg0 (o2 / other))))))
(s / say-01 :arg0 (o / organization :name (n / name :op1 "Melbourne" :op2 "Storm")) :arg2 (p / person :name (n2 / name :op1 "Craig" :op2 "Bellamy")))
(a / and :op1 (r / reduce-01 :arg0 (t / they) :arg1 (h / hunger-01 :arg0 (t2 / they))) :op2 (l / limit-01 :arg0 (t3 / they) :arg1 (c / capable-01 :arg1 (b / body) :arg2 (a2 / absorb :arg0 (b2 / body) :arg1 (f / food)))))
(r / recommend-01 :arg0 (j / jury :mod (g / grand) :location (l / location :name (n / name :op1 "Monroe" :op2 "County"))) :arg1 (c / charge-05 :arg1 (p / person :quant 5 :arg0-of (h / have-org-role-91 :arg2 (m / member))) :arg2 (m2 / murder-01)))
(u / urge-01 :arg0 (p / police) :arg1 (p2 / person) :arg2 (a / avoid-01 :arg0 (p3 / person) :arg1 (u2 / use-01 :arg1 (c / car :arg1-of (p4 / private-03)) :location (c2 / city :name (n / name :op1 "Helsinki") :mod (c3 / central)))))
(r / report-01 :arg0 (o / organization :name (n / name :op1 "Helsingin" :op2 "Sanomat")) :arg1 (d / decide-01 :arg0 (c / council) :arg1 (p / propose-01 :arg0 (c2 / council) :arg1 (b / build-01 :arg0 (c3 / council) :arg1 (b2 / building :mod (s / school)) :prep-as (s2 / solution :mod (s3 / space) :purpose (s4 / solve-01 :arg0 (m / ministry) :arg1 (s5 / space))))) :time (a / already)))
(p / possible-01 :arg1 (u / use-01 :arg1 (o / output :poss (y / you)) :arg2 (t / thing :arg0-of (r / refine-01 :arg1 (c / company :name (n / name :op1 "BBC"))))) :prep-in (c2 / case :quant (s / some)))
(s / seem-01 :arg1 (r / remain-01 :arg1 (p / person :name (n / name :op1 "Donald" :op2 "Trump")) :arg3 (a / and :op1 (r2 / remain-01 :arg1 (i / immigrate-01) :arg3 (i2 / immigrate-01)) :op2 (r3 / remain-01 :arg1 (i3 / immigrate-01) :arg3 (i4 / immigrate-01)))))
(m / multi-sentence :snt1 (m2 / make-01 :arg1 (t / temporal-quantity :quant (N / N-A) :unit (h / hour)) :time (e / early :op1 (e2 / early :op1 (e3 / early :op1 (e4 / early :op1 (e5 / early :op1 (e6 / early :op1 (e7 / early :op1 (e8 / early :op1 (e9 / early :op1 (e10 / early :op1 (e11 / early :op1 (e12 / early :op1 (e13 / early :op1 (e14 / early :op1 (e15 / early :op1 (e16 / early :op1 (e17 / early :op1 (e18 / early :op1 (e19 / early :op1 (e20 / early :op1 (e21 / early :op1 (e22 / early :op1 (e23 / early :op1 (e24 / early :op1 (e25 / early :op1 (e26 / early :op1 (e27 / early :op1 (e28 / early :op1 (e29 / early :op1 (e30 / early :op1 (e31 / early :op1 (e32 / early :op1 (e33 / early :op1 (e34 / early :op1 (e35 / early :op1 (e36 / early :op1 (e37 / early :op1 (t2 / temporal-quantity :quant (N2 / N-A) :unit (h2 / hour)))))))))))))))))))))))))))))))))))))))) :snt2 (p / paradise :location (n / north)))
(c / cause-01 :arg0 (s / start-01 :arg0 (i / i) :arg1 (d / do-02 :arg0 (i2 / i) :arg1 (t / thing :mod (l / little) :arg1-of (s2 / see-01 :arg0 (i3 / i)))) :mod (l2 / little)) :arg1 (g / give-up-07 :arg0 (w / we) :arg1 (t2 / thing)))
(t / tell-01 :arg0 (h / he) :arg1 (a / and :op1 (o / overboard :arg0 (p / police) :arg1 (h2 / he)) :op2 (t2 / tell-01 :arg0 (h3 / he) :arg1 (s / swim-01 :arg0 (h4 / he) :arg2 (i / island :mod (m / military :name (n / name :op1 "N-A")))) :arg2 (t3 / they) :time (s2 / spotted :arg0 (p2 / police) :arg1 (h5 / he))) :arg2 (h6 / he) :time (s3 / spotted :arg0 (p3 / police) :arg1 (h7 / he))))
(e / estimate-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (o / organization :name (n / name :op1 "Confederation" :op2 "of" :op3 "Finnish" :op4 "Industries")))) :arg1 (r / ready-02 :polarity - :arg1 (p2 / person :arg0-of (h2 / have-org-role-91 :arg1 (o2 / organization) :arg3 (e2 / ek))) :arg2 (d / discuss-01 :arg0 (p3 / person))))
(s / suggest-01 :arg0 (p / person :name (n / name :op1 "Van" :op2 "Gaal")) :arg1 (h / have-03 :arg0 (p2 / person :arg0-of (h2 / have-org-role-91 :arg1 (c / country :name (n2 / name :op1 "N-A")) :arg2 (o / official))) :arg1 (e / erred)))
(a / and :op1 (c / change-01 :arg0 (n / nematodes :mod (t / tiny)) :arg1 (d / direction)) :op2 (h / high-pitched :arg1 (p / pulses :mod (s / sonic)) :arg2 (h2 / hear-01 :arg0 (h3 / human)) :degree (t2 / too) :purpose (h4 / hear-01 :arg0 (h5 / human))))
(s / say-01 :arg1 (f / force-01 :arg0 (i / i) :arg1 (i2 / i) :arg2 (c / cross-02 :arg0 (i3 / i) :arg1 (l / line :mod (g / goal)))) :arg2 (p / person :name (n / name :op1 "Favor" :op2 "Hamilton")))
(m / multi-sentence :snt1 (w / want-01 :polarity - :arg0 (y / you) :arg1 (p / put-01 :arg1 (y2 / you) :arg2 (s / situation :mod (s2 / scare-01 :arg1 (s3 / scare-01 :arg1 (r / rate))))) :mod (c / certain)) :snt2 (s4 / say-01 :arg0 (p2 / person :name (n / name :op1 "Posen") :arg0-of (h / have-org-role-91 :arg1 (o / organization :name (n2 / name :op1 "Peterson" :op2 "Institute" :op3 "for" :op4 "International" :op5 "Economics")) :arg2 (p3 / president))) :arg1 (y3 / you)))
(a / and :op1 (c / cheeks :arg1 (p / person :name (n / name :op1 "Roope")) :arg1-of (r / reasonable-02) :time (e / early :degree (m / more))) :op2 (d / dyed :arg0 (p2 / person) :arg1 (h / hair :arg1-of (b / black-05) :poss (p3 / person))) :time (e2 / early :degree (m2 / more) :time (e3 / early :degree (m3 / more))))
(c / contrast-01 :arg1 (a / ambitious :domain (w / we)) :arg2 (d / dreamers :polarity - :domain (w2 / we)))
(s / see-01 :arg1 (e / effect :arg1-of (s2 / see-01 :time (s3 / subsequent))) :time (s4 / soon :degree (q / quite)))
(t / talk-01 :arg0 (p / person :name (n / name :op1 "Wayne")) :arg1 (f / footy :mod (e / exciting)))
(s / say-01 :arg0 (s2 / study :mod (n / new)) :arg1 (p / possible-01 :arg1 (a / and :op1 (b / benefit-01 :arg0 (s3 / surgery-01 :arg1 (p2 / person :arg0-of (l / lose-02 :arg1 (s4 / surgery-01 :arg2 (l2 / lose-02 :arg1 (w / weight)))))) :arg1 (t / temporal-quantity :quant (N / N-A) :unit (y / year) :mod (a2 / at-least))) :op2 (p3 / possible-01 :arg1 (a3 / at-least :op1 (t2 / temporal-quantity :quant (N2 / N-A) :unit (y2 / year)))))))
(p / possible-01 :arg1 (h / hell :domain (t / that) :beneficiary (s / someone :arg0-of (t2 / try-01 :arg1 (r / recharge :arg0 (s2 / someone))))))
(l / likely-01 :arg1 (m / make-02 :arg0 (l2 / lumps :arg1 (a / and :op1 (f / flour) :op2 (s / sugar) :op3 (f2 / fat))) :arg1 (p / pretend-01 :arg0 (p2 / person)) :degree (m2 / more) :time (k / knock :arg0 (y / you))) :degree (m3 / more))
(b / be-located-at-91 :arg1 (a / and :op1 (p / person :arg0-of (m / make-01 :arg1 (b2 / building :name (n / name :op1 "N-A")))) :op2 (p2 / person :arg0-of (s / supply-01)) :op3 (p3 / person :arg0-of (o / own-01 :arg1 (b3 / building :name (n2 / name :op1 "N-A")))) :op4 (p4 / person :arg0-of (o2 / own-01)) :op5 (p5 / person :arg0-of (o3 / own-01))) :arg2 (a2 / and :op1 (t / test-01 :arg0 (p6 / person :arg0-of (o4 / own-01)) :arg1 (s2 / store :mod (l / league :mod (f / football)) :location (s3 / south :part-of (c / country :name (n3 / name :op1 "N-A"))))) :op2 (s4 / sell-01 :arg0 (p7 / person) :arg1 (t2 / ticket :mod (l2 / league :mod (f2 / football)) :location (s5 / south :part-of (c2 / country :name (n4 / name :op1 "N-A")))) :arg2 (c3 / customer :mod (l3 / loyalty)))) :location (b4 / board-01 :arg0 (a3 / and)))
(a / attack-01 :arg0 (p / person :name (n / name :op1 "Damien" :op2 "Collins") :arg0-of (h / have-org-role-91 :arg1 (o / organization :name (n2 / name :op1 "Voice")) :arg2 (m / mp))) :arg1 (s / show-04 :arg1 (m2 / music) :arg0-of (s2 / show-01 :arg1 (b / buy-01 :arg0 (c / company :name (n3 / name :op1 "BBC")) :arg1 (m3 / monetary-quantity :quant (2 / 22million) :unit (d / dollar :mod (c2 / country)) :arg1-of (e / estimate-01))))))
(t / think-01 :arg0 (b / boy :mod (r / religious-group :name (n / name :op1 "N-A")) :arg1-of (a / arrest-01 :location (s / school :mod (s2 / state :name (n2 / name :op1 "Texas"))))))
(c / contrast-01 :arg2 (p / possible-01 :arg1 (s / see-01 :arg0 (y / you) :arg1 (f / fall-01 :arg1 (- / -rrb- :mod (g / grow-01)) :direction (a / away))) :time (n / now)))
(b / byline-91 :arg0 (p / publication :name (n / name :op1 "N-A")) :arg1 (p2 / person :name (n2 / name :op1 "Christian" :op2 "Plumb")))
(c / cut-02 :arg1 (s / side :mod (p / person :arg0-of (c2 / consume-01))) :time (a / after :op1 (n / now) :quant (t / temporal-quantity :quant (N / N-A) :unit (y / year))))
(s / stuff :mod (t / that) :mod (a / all) :arg1-of (s2 / sure-02) :arg1-of (s3 / sure-02))
(s / say-01 :arg0 (p / person :name (n / name :op1 "Ahtisaari")) :arg1 (c / contrast-01 :arg1 (p2 / pass-01 :arg0 (h / he) :arg1 (m / message :mod (c2 / churkin?s)) :arg2 (a / and :op1 (c3 / country :name (n2 / name :op1 "United" :op2 "States")) :op2 (c4 / country :name (n3 / name :op1 "Britain")) :op3 (c5 / country :name (n4 / name :op1 "France")))) :arg2 (n5 / nothing :mod (n6 / nothing))))
(m / multi-sentence :snt1 (q / quietens :arg0 (f / family :arg1-of (h / have-org-role-91 :arg0 (i / i) :arg2 (m2 / member))) :arg1 (f2 / family :arg1-of (h2 / have-org-role-91 :arg0 (i2 / i) :arg2 (m3 / member))) :location (i3 / in-front-of :op1 (t / television)) :time (t2 / then)) :snt2 (w / write-01 :mode (i4 / interrogative) :arg0 (p / person :name (n / name :op1 "Saku" :op2 "Timonen") :arg0-of (h3 / have-org-role-91 :arg2 (g / governor))) :arg1 (p2 / person :mod (c / country :name (n2 / name :op1 "N-A")))))
(m / multi-sentence :snt1 (q / quietens :arg0 (f / family :arg1-of (h / have-org-role-91 :arg0 (i / i) :arg2 (m2 / member))) :arg1 (f2 / family :arg1-of (h2 / have-org-role-91 :arg0 (i2 / i) :arg2 (m3 / member))) :location (i3 / in-front-of :op1 (t / television)) :time (t2 / then)) :snt2 (w / write-01 :mode (i4 / interrogative) :arg0 (p / person :name (n / name :op1 "Saku" :op2 "Timonen") :arg0-of (h3 / have-org-role-91 :arg2 (g / governor))) :arg1 (p2 / person :mod (c / country :name (n2 / name :op1 "N-A")))))
(r / recommend-01 :arg1 (m / make-01 :polarity - :arg0 (y / you) :arg1 (s / sentiment :arg0-of (k / keep-02 :arg1 (o / or :op1 (s2 / sleep-01 :arg0 (p / person)) :op2 (s3 / study-01 :arg0 (p2 / person)))))))
FAILED_TO_PARSE#Number of opening and closing brackets doesn't match.
FAILED_TO_PARSE#Two concepts in a row.
(h / handed :arg0 (m / man :mod (p / person :name (n / name :op1 "Nathalia"))) :arg1 (p2 / person) :arg2 (p3 / police) :location (p4 / peninsula :name (n2 / name :op1 "N-A")))
(s / sell-01 :arg0 (c / company) :arg1 (s2 / stock :mod (n / new)) :arg3 (m / monetary-quantity :quant 125 :unit (d / dollar :mod (r / renminbi))) :arg0-of (m2 / mark-01 :arg1 (d2 / discount :arg1-of (2 / 2.4-percent :arg2 (t / thing :arg2-of (p / price-01 :arg1-of (c2 / close-01)))))))
(o / off :arg1 (s / storm) :time (w / weekend :mod (t / this)) :arg1-of (c / cause-01 :arg0 (w2 / win-01 :arg0 (t2 / they) :arg1 (r / right-05 :arg1 (t3 / they) :arg2 (h / host-01 :arg0 (t4 / they) :arg1 (o2 / or :op1 (o3 / organization :name (n / name :op1 "North" :op2 "Queensland" :op3 "Cowboys")) :op2 (o4 / organization :name (n2 / name :op1 "Cronulla" :op2 "Sharks")) :mod (e / either)) :time (n3 / night :mod (n4 / next)) :mod (p / preliminary) :location (l / laptop :arg1-of (s2 / sell-01 :time (m / morning :mod (n5 / next)))))))))
(k / know-01 :polarity - :arg0 (n / neither :mod (e / either)) :arg1 (h / have-manner-91 :arg1 (s / serious-01 :arg1 (m / military) :arg2 (s2 / search-01 :arg0 (t / they) :purpose (t2 / tighten-01 :arg0 (t3 / they) :arg1 (c / condition :mod (l / life :mod (w / work-01)))))) :arg2 (a / announce-01 :arg0 (g / government-organization :arg0-of (g2 / govern-01)))))
(f / forgave :polarity - :arg0 (p / press) :arg1 (h / he) :time (e / ever) :mod (e2 / either))
(s / say-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg2 (m / minister :mod (p2 / prime)))) :arg1 (a / address-01 :arg0 (p3 / person :arg0-of (h2 / have-org-role-91 :arg2 (m2 / minister :mod (p4 / prime)))) :arg1 (p5 / person) :arg1-of (d / direct-02) :time (m3 / multiple :op1 (t / temporal-quantity :quant (N / N-A) :unit (d2 / decade)))))
(m / multi-sentence :snt1 (s / say-01 :arg0 (p / person :name (n / name :op1 "Janne" :op2 "Viljamaa") :mod (s2 / state :name (n2 / name :op1 "N-A") :mod (s3 / social))) :arg1 (p2 / person :arg0-of (h / have-rel-role-91 :arg1 (y / you) :arg2 (c / child)))) :snt2 (t / teach-01 :mode (i / interrogative) :arg0 (p3 / person :arg0-of (h2 / have-rel-role-91 :arg1 (y2 / you) :arg2 (c2 / child))) :arg1 (h3 / help-01 :arg0 (p4 / person) :arg1 (o / one :mod (w / weak)))))
(c / contrast-01 :arg1 (b / be-located-at-91 :arg1 (a / and :op1 (o / organization :name (n / name :op1 "Real" :op2 "Madrid")) :op2 (l / local-region :name (n2 / name :op1 "N-A"))) :arg2 (n3 / need-01 :arg0 (c2 / city :name (n4 / name :op1 "Paris")) :arg1 (a2 / against :op1 (c3 / champions :mod (s / swedish)) :arg1-of (s2 / strong-02))) :mod (a3 / also)) :arg2 (i / improve-01 :arg1 (i2 / improve-01 :arg1 (q / quarter-finals :location (e / each :arg1-of (i3 / include-91 :arg2 (c4 / campaign-01 :quant 3 :mod (l2 / last))))))))
(m / multi-sentence :snt1 (b / be-located-at-91 :arg1 (p / person :name (n / name :op1 "Sarah")) :arg2 (e / earth) :mod (r / really)) :snt2 (f / fun :quant (m2 / much :degree (s / so)) :location (a / around)) :snt3 (a2 / add-01 :arg0 (i / i) :arg1 (p2 / person :name (n2 / name :op1 "Markoski") :arg0-of (h / have-org-role-91 :arg2 (' / '')))))
(s / say-01 :arg0 (o / organization :name (n / name :op1 "Juventus")) :arg1 (s2 / score-01 :arg1 (p / person :name (n2 / name :op1 "Alvaro" :op2 "Morata")) :arg2 (t / temporal-quantity :quant (N / N-A) :unit (m / minute)) :time (b / before :op1 (e / end-01 :arg1 (t2 / temporal-quantity :quant (N2 / N-A) :unit (m2 / minute))))))
(p / plan-01 :arg1 (s / set-up-03 :arg1 (p2 / person :mod (p3 / province :name (n / name :op1 "N-A"))) :location (b / building :mod (s2 / school :arg1-of (e / empty-02)) :location (c / city-district :name (n2 / name :op1 "N-A") :location (t / town)))))
(r / receive-01 :arg0 (h / he) :arg1 (e / educate-01 :location (s / spring :location (s2 / spring))))
(a / ask-02 :arg0 (l / lamb) :arg1 (l2 / leave-11 :arg0 (o / organization) :arg1 (o2 / organization :name (n / name :op1 "Delta" :op2 "State" :op3 "University")) :mod (m / medicine)) :arg2 (s / say-01 :arg0 (l3 / lamb) :arg1 (h / have-03 :arg0 (p / person) :arg1 (i / issue-02 :arg0 (h2 / health) :mod (s2 / sort :mod (s3 / some))))) :time (e / early :degree (m2 / more)))
(b / believe-01 :arg0 (i / i) :arg1 (w / wrong-04 :arg1 (e / execute-01 :arg1 (h / he))))
(o / or :op2 (r / recommend-01 :mode (i / interrogative) :arg1 (t / tell-01 :arg0 (t2 / they) :arg1 (a / anything) :arg2 (a2 / anything))))
(s / snapped :arg0 (p / person :name (n / name :op1 "Victor" :op2 "Martinez")) :arg1 (s2 / streak :mod (0 / 0-for-21) :poss (p2 / person)) :arg2 (p3 / position-02 :arg0 (p4 / person) :arg2 (s3 / scoring)))
(k / kährs :arg0 (c / company :name (n / name :op1 "N-A") :arg0-of (m / merged :arg1 (o / organization :name (n2 / name :op1 "Karelia-Upofloor") :mod (f / finnish)) :time (a / already))) :arg1 (c2 / country :name (n3 / name :op1 "N-A")) :time (a2 / already))
(a / and :op1 (p / participate-01 :arg0 (s / she) :arg1 (c / compete-01 :location (s2 / shape :mod (t / top)))) :op2 (r / run-02 :arg0 (s3 / she) :ord (o / ordinal-entity :value 2 :range (o2 / ordinal-entity :value 2))))
(p / problem :topic (p2 / problem) :quant (s / some) :time (t / time :arg1-of (s2 / same-01)))
(h / have-concession-91 :arg1 (g / give-01 :arg1 (v / version :mod (v2 / version :quant 2012 :mod (f / film)) :arg0-of (a / add-02 :arg1 (c / character :quant 2012 :mod (f2 / film))) :arg0-of (d / detail-01 :arg1 (c2 / character :mod (b / brief :degree (f3 / fair)) :mod (o / original)))) :arg2 (i / initiative :quant 2012 :mod (f4 / film) :arg1-of (d2 / describe-01 :arg0 (p / person :name (n / name :op1 "Cameron")) :arg1-of (s / suppose-01)))) :mod (w / well :degree (v3 / very)) :mod (w2 / well :degree (v4 / very)))
(c / contrast-01 :arg1 (t / take-01 :arg0 (p / person :mod (c2 / country :name (n / name :op1 "Finland"))) :arg1 (w / wind :mod (s / some))) :arg2 (t2 / take-01 :arg0 (p2 / person) :arg1 (w2 / wind :poss (p3 / person :arg0-of (s2 / stop-01 :arg1 (d / democrat :mod (s3 / social) :poss (p4 / person :name (n2 / name :op1 "Marko" :op2 "Piirainen") :arg0-of (h / have-org-role-91 :arg2 (a / akt)))))))))
(p / phone-number-entity :value (N / N-A))
(p / phone-number-entity :value (N / N-A))
(m / multi-sentence :snt1 (c / contrast-01 :mode (i / interrogative) :arg1 (h / hate-01 :arg0 (a / amr-unknown) :arg1 (c2 / capitalism)) :arg2 (h2 / hate-01 :arg0 (t / they) :arg1 (c3 / capitalism))) :snt2 (c4 / contrast-01 :arg2 (h3 / hate-01 :arg0 (t2 / they) :arg1 (o / other :mod (e / each)) :degree (m2 / more :mod (e2 / even)))))
(p / possible-01 :polarity - :arg1 (p2 / predict-01 :arg1 (d / design-01 :arg1 (i / interior))) :location (h / here))
(h / have-03 :arg0 (h2 / he) :arg1 (c / church :mod (p / protestant) :location (l / location :name (n / name :op1 "Kampala") :arg0-of (h3 / have-org-role-91 :arg1 (u / ugandan) :arg2 (c2 / capital)))) :arg1-of (c3 / cause-01 :arg0 (a / and :op1 (c4 / come-01 :arg1 (p2 / person :quant (l2 / lot) :arg0-of (f / flee-05 :arg2 (l3 / location :name (n2 / name :op1 "Congo")))) :arg4 (l4 / location :name (n3 / name :op1 "Congo"))) :op2 (b / be-located-at-91 :arg1 (p3 / person :mod (s / small) :arg0-of (f2 / find-01 :arg1 (l5 / location :name (n4 / name :op1 "Congo"))) :location-of (f3 / find-01 :arg0 (r / refugee :mod (p4 / person :arg0-of (h4 / have-rel-role-91 :arg1 (p5 / person) :arg2 (c5 / child))))) :arg1 (h5 / help-01))))))
(f / find-01 :arg1 (p / part :part-of (p2 / person :arg1-of (d / disappeared :mod (a / also)) :arg1-of (f2 / find-01 :time (l / late :degree (m / more))))) :time (a2 / apply-01 :arg0 (p3 / person) :arg2 (f3 / found-01 :arg1 (c / country :mod (o / other) :quant (s / some) :arg0-of (h / have-org-role-91 :arg2 (m2 / member))))))
(a / affect-01 :arg1 (w / winds :arg1-of (c / change-01)) :degree (m / more-than) :compared-to (g / government-organization :name (n / name :op1 "Parliament")) :time (m2 / morning :mod (t / this)))
(a / and :op1 (r / return-01 :arg1 (i / i) :arg4 (s / stage)) :op2 (m / make-02 :arg0 (r2 / return-01 :arg1 (p / public)) :arg1 (n / nervous :arg1 (i2 / i)) :mod (r3 / really)))
(p / penalise :polarity - :arg0 (p2 / person :name (n / name :op1 "Nicola" :op2 "Rizzoli") :mod (r / referee)) :arg1 (c / country :name (n2 / name :op1 "N-A")))
(a / and :op1 (e / explain-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (c / continent :name (n / name :op1 "N-A")) :arg2 (d / diplomat))) :arg1 (d2 / day :mod (o / other)) :time (d3 / day :mod (o2 / other))) :op2 (e2 / explained :arg0 (s / state :quant (s2 / some) :arg0-of (h2 / have-org-role-91 :arg1 (o3 / organization) :arg2 (m / member))) :arg1 (a2 / and :op1 (a3 / agenda :mod (s3 / self-absorbed) :poss (c2 / country :name (n2 / name :op1 "Britain")) :topic (t / thing :arg2-of (c3 / characteristic-02 :arg1 (c4 / country)))) :op2 (c5 / change-01 :arg0 (c6 / country) :arg1 (t2 / treaty) :arg1-of (w / want-01 :polarity - :arg0 (c7 / country) :mod (m2 / most))))))
(c / comment-01 :arg0 (h / he) :arg3 (p / person :name (n / name :op1 "Lauri" :op2 "Lyly") :arg0-of (h2 / have-org-role-91 :arg2 (p2 / president))) :location (p3 / product :name (n2 / name :op1 "Twitter")))
(s / seem-01)
(s / say-01 :arg0 (p / person :name (n / name :op1 "Siisiäinen")) :arg1 (p2 / put-01 :arg0 (t / they) :arg1 (a / arm :part-of (t2 / they)) :arg2 (f / front :poss (g / government-organization :arg0-of (g2 / govern-01))) :mod (j / just) :condition (h / have-polarity-91 :arg2 -)))
(s / say-01 :arg0 (p / person :name (n / name :op1 "Siisiäinen")) :arg1 (p2 / put-01 :arg0 (t / they) :arg1 (a / arm :part-of (t2 / they)) :arg2 (f / front :poss (g / government-organization :arg0-of (g2 / govern-01))) :mod (j / just) :condition (h / have-polarity-91 :arg2 -)))
(s / support-01 :arg0 (c / country :name (n / name :op1 "Russia")) :arg1 (p / person :name (n2 / name :op1 "al-Assad")) :time (w / war :mod (w2 / whole)) :manner (o / official))
(s / service :mod (p / public))
(s / say-01 :arg0 (p / person :name (n / name :op1 "Luukkainen")) :arg1 (s2 / serious-02 :mode (i / interrogative) :arg1 (n2 / nothing) :degree (m / more)))
(a / and :op1 (s / say-01 :arg0 (l / location :name (n / name :op1 "Palola")) :arg1 (e / exist-01 :arg1 (d / dialogue-01 :arg2 (g / government-organization :arg0-of (g2 / govern-01))))) :op2 (t / think-01 :arg0 (h / he) :arg1 (t2 / time :mod (w / whole))))
(p / possible-01 :arg1 (h / have-03 :arg0 (i / it) :arg1 (i2 / it) :time (n / night :mod (l / last))))
(c / contrast-01 :arg1 (' / '' :arg0 (p / person :name (n / name :op1 "Hilary")) :arg1 (p2 / person :name (n2 / name :op1 "Benn"))) :arg2 (s / say-01 :arg0 (p3 / person :arg0-of (h / have-org-role-91 :arg1 (a / and :op1 (r / radio) :op2 (t / television)) :arg2 ('2 / ''))) :arg1 (a2 / admit-01 :polarity - :arg1 (i / idea :arg1-of (b / bad-07) :domain (a3 / appoint-01 :arg0 (p4 / person :name (n3 / name :op1 "Corbyn")) :arg1 (p5 / person :name (n4 / name :op1 "John" :op2 "McDonnell") :arg0-of (h2 / have-org-role-91 :arg1 (c2 / country :name (n5 / name :op1 "N-A")) :arg2 (c3 / chancellor))) :arg2 (p6 / person :arg0-of (h3 / have-org-role-91 :arg2 (c4 / chancellor)))))) :time (w / week :mod (t2 / this))))
FAILED_TO_PARSE#Number of opening and closing brackets doesn't match.
(a / and :op1 (r / rested :arg1 (o / organization :name (n / name :op1 "Durham") :arg0-of (h / have-org-role-91 :arg1 (p / person :name (n2 / name :op1 "Ben" :op2 "Stokes") :arg0-of (h2 / have-org-role-91 :arg2 (t / team-mate))) :arg2 (t2 / team-mate))) :arg2 (o2 / one-dayers)) :op2 (g / give-01 :arg1 (b / break :arg1-of (r2 / resemble-01)) :arg2 (a2 / and :op1 (c / country :name (n3 / name :op1 "Australia")) :op2 (i / i))))
(s / say-01 :arg0 (o / organization :name (n / name :op1 "Glencore")) :arg1 (s2 / sell-01 :arg0 (o2 / organization) :arg1 (s3 / share :mod (n2 / new) :arg1-of (v / value-01 :arg2 (a / about :op1 (m / monetary-quantity :quant 1.6 :unit (d / dollar :mod (r / renminbi)))))) :arg2 (d2 / debt :mod (d3 / down))) :medium (s4 / statement))
(s / say-01 :arg0 (p / police :location (l / location :name (n / name :op1 "Gautier")) :arg2-of (d / die-01 :arg1 (p2 / person :name (n2 / name :op1 "Prentiss")))) :arg1 (h / have-03 :polarity - :arg0 (p3 / person) :arg1 (h2 / history :topic (o / or :op1 (v / violence) :op2 (r / record :mod (c / criminal-03))))) :location (l2 / location :name (n3 / name :op1 "Gautier")))
(c / contrast-01 :arg2 (s / suffice-01 :polarity - :arg0 (d / deter-01 :arg0 (f / fail-01 :arg1 (h / he) :arg2 (a / appear-01 :arg1 (h2 / he))) :arg1 (h3 / he))))
(m / multi-sentence :snt1 (i / include-91 :mode (i2 / interrogative) :arg1 (u / union :mod (t / trade-01)) :arg2 (a / account :poss (u2 / union :mod (t2 / trade-01)))) :snt2 (a2 / and :op1 (p / possible-01 :arg1 (c / concentrated :arg1 (c2 / care-01 :duration (d / day)) :arg2 (n / nurseries :mod (c3 / certain)) :arg1-of (p2 / possible-01))) :op2 (o / organize-01 :polarity - :arg1 (a3 / activity-06 :arg1 (c4 / club) :location (o2 / or :op1 (n2 / nurseries) :op2 (p3 / playgrounds))))))
(c / contrast-01 :arg1 (s / statistic :polarity - :arg2-of (t / total-01) :time (y / yet)) :arg2 (a / and :op1 (k / know-02 :arg1 (n / number :quant-of (p / person :arg0-of (s2 / serve-02) :mod (u / underage)))) :op2 (g / grow-03 :arg1 (n2 / number) :arg1-of (c2 / clear-06) :arg1-of (c3 / cause-01 :arg0 (l / likely-01 :arg1 (a2 / affect-01 :arg0 (n3 / number :quant-of (p2 / person :mod (d / disappearances))) :arg1 (n4 / number :quant-of (d2 / disappearances)) :mod (a3 / also)))))))
(m / meet-03 :arg0 (l / lamb) :arg1 (p / person :name (n / name :op1 "Prentiss")) :time (b / before :op1 (n2 / now) :quant (t / temporal-quantity :quant (N / N-A) :unit (y / year))))
(p / publish-01 :arg0 (o / organization :name (n / name :op1 "Sports" :op2 "Illustrated")) :arg1 (b / book :medium (t / tuesday)))
(r / report-01 :arg0 (c / center :arg1-of (c2 / control-01 :arg0 (c3 / country :name (n / name :op1 "United" :op2 "States"))) :location (a / around :op1 (c4 / country))) :arg1 (u / uptick :quant (n2 / nearly :op1 2010)) :time (s / since :op1 (a2 / age-01 :arg1 (p / person :quant 2010 :arg1-of (a3 / age-01 :arg2 (t / temporal-quantity :quant (N / N-A) :unit (y / year)))) :arg2 (c5 / child)) :arg1-of (s2 / say-01 :arg0 (o / organization :name (n3 / name :op1 "Georgia" :op2 "Poison" :op3 "Center")))))
FAILED_TO_PARSE#Number of opening and closing brackets doesn't match.
(a / and :op1 (t / total-01 :arg1 (s / station :quant 28 :mod (s2 / small)) :arg2 (s3 / station :quant 28 :mod (s4 / small))) :op2 (s5 / stop-01 :arg1 (r / route :quant (n / number)) :path (a2 / across :op1 (c / country))))
(c / conscious :polarity - :domain (y / you) :topic (a / and :op1 (m / move-01 :arg1 (y2 / you)) :op2 (w / want-01 :arg0 (y3 / you) :arg1 (s / spend-02 :arg0 (y4 / you) :arg1 (t / time :poss (y5 / you))))) :degree (m2 / much :degree (v / very)))
(a / and :op2 (w / watch-01 :arg0 (i / i) :arg1 (d / die-01 :arg1 (h / he))))
(s / say-01 :arg0 (i / index :mod (m / monetary-quantity :arg2-of (p / price-01 :arg1 (p2 / person :arg0-of (c / consume-01))))) :arg1 (r / rate-entity-91 :arg1 (i2 / inflation :location (c2 / country :name (n / name :op1 "Finland"))) :arg2 (r2 / rate-entity-91 :arg1 0.2 :arg2 (t / temporal-quantity :quant (N / N-A) :unit (y / year)))))
(p / person :arg0-of (p2 / play-01) :mod (c / canadiens) :time (a / already) :time (b / before :op1 (h / help-01 :arg0 (p3 / person) :arg1 (h2 / hospital :arg1-of (l / local-02)))))
(a / and :op1 (a2 / application :quant (b / bunch) :location (o / organization :name (n / name :op1 "Apple"))) :op2 (u / use-01 :arg0 (p / person :quant (b2 / bunch) :arg0-of (e / exemplify-01 :arg1 (u2 / use-01 :arg0 (o2 / organization :name (n2 / name :op1 "FaceTime")) :arg1 (a3 / and :op1 (o3 / organization :name (n3 / name :op1 "Newsstand")) :op2 (o4 / organization :name (n4 / name :op1 "Newsstand")) :op3 (h / health) :op4 (s / stock) :op5 (t / thing :arg2-of (t2 / tip-05)))))) :arg2 (m / mind)))
(i / invite-01 :arg0 (s / speak-01 :arg0 (s2 / speak-01)) :arg1 (a / and :op1 (c / criticize-01) :op2 (g / guesses)) :arg2 (t / thing :arg1-of (c2 / come-01)) :time (d / day :mod (w / whole)))
(a / and :op1 (a2 / awe-01 :arg0 (t / this)) :op2 (c / comment-01 :arg0 (p / person :name (n / name :op1 "Loiri")) :arg3 (c2 / certificate :poss (p2 / person))))
(a / assume-02 :arg0 (i / i) :arg1 (d / differ-02 :arg1 (t / thing :quant (m / many)) :time (t2 / this)))
(a / and :op1 (a2 / advertises :arg0 (o / organization :name (n / name :op1 "Zillow")) :arg1 (p / property) :arg2 (c / car :mod (e / estate :mod (r / real)))) :op2 (c2 / contrast-01 :arg1 (h / have-03 :arg0 (h2 / house) :arg1 (r2 / room :quant (o2 / only :op1 12))) :arg2 (h3 / have-03 :arg0 (h4 / house) :arg1 (r3 / room :quant (o3 / only :op1 12)) :mod (a3 / also))))
(m / multi-sentence :snt1 (c / call-03 :arg0 (r / report :source (o / organization :name (n / name :op1 "UN"))) :arg1 (i / investigate-01 :arg1 (f / force :arg1-of (a / arm-01) :mod (e / especially)) :manner (p / proper))) :snt2 (a2 / assault :degree (g / great) :time (w / war-01 :quant 2009 :arg1-of (l / long-03) :time (m2 / month :mod (l2 / last)))))
(a / and :op1 (w / wednesday :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (o / organization :name (n / name :op1 "STTK") :arg1-of (e / employ-01 :mod (s / salaried))) :arg2 (c / chairman))) :arg1 (p2 / person :name (n2 / name :op1 "Antti" :op2 "Palola") :arg0-of (h2 / have-org-role-91 :arg1 (d / democrat :mod (s2 / social)) :arg2 (c2 / chairman)))) :op2 (a2 / appear-01 :arg1 (d2 / democrat :mod (s3 / society)) :manner (p3 / public-02)))
(s / shame-01 :arg0 (f / finish-01 :arg0 (p / person :name (n / name :op1 "Wilshere")) :arg1 (p2 / problem :time (l / late :degree (m / most)) :mod (t / this))) :arg1 (a / and :op1 (f2 / finish-01 :arg0 (p3 / person) :time (s2 / season :mod (l2 / last)) :arg1-of (s3 / strong-02) :time (a2 / after :op1 (i / injure-01 :arg1 (p4 / person) :arg1-of (s4 / separate-02)))) :op2 (l3 / look-01 :arg0 (p5 / person) :arg1 (s5 / sharpness :mod (o / old) :poss (p6 / person)) :time (d / date-entity :dayperiod (N / N-A)) :time (t2 / then))))
(c / change-01 :arg0 (p / person :name (n / name :op1 "Roope" :op2 "Salminen")) :arg1 (s / style :mod (s2 / style)) :purpose (p2 / play-01 :arg0 (p3 / person) :arg1 (r / role :mod (k / know-02 :arg1 (p4 / person :mod (e / ethnic-group :name (n2 / name :op1 "N-A")) :arg1-of (k2 / know-02) :mod (m / musician) :location (f / film :mod (f2 / film)))))))
(m / multi-sentence :snt1 (a / and :op1 (o / organisations :mode (i / interrogative) :arg0 (a2 / and :op1 (p / person :arg0-of (h / have-org-role-91 :arg2 (h2 / head-of-state))) :op2 (p2 / person :arg0-of (h3 / have-org-role-91 :arg2 (h4 / head-of-state))) :op3 (p3 / person :arg0-of (h5 / have-org-role-91 :arg2 (h6 / head-of-state)))) :arg1 (a3 / ache :arg0 (p4 / person)) :time (i2 / immediate))) :snt2 (a4 / and :op1 (s / start-01 :arg0 (p5 / person :arg0-of (h7 / have-org-role-91 :arg2 (h8 / head-of-state))) :arg1 (a5 / ache :arg0 (p6 / person)) :time (i3 / immediate)) :op2 (s2 / stand-01 :arg1 (c / country) :arg2 (d / demonstrate-01 :mod (m2 / massive)))))
(a / and :op1 (s / show-01 :arg0 (t / ten :poss (p / poll-01 :quant 11 :mod (n / nation) :mod (l / last))) :arg1 (l2 / lead-01 :arg0 (p2 / person :name (n2 / name :op1 "Donald" :op2 "Trump")) :arg1 (d / digit :mod (d2 / double)))) :op2 (s2 / start-01 :arg0 (s3 / some) :arg1 (a2 / ask-01 :arg0 (s4 / some) :arg1 (m / mean-01 :arg1 (i / it) :arg2 (c / chance-01 :arg1 (n3 / nominate-01) :mod (r / real))))))
(c / candidate :quant (o / over :op1 16,000) :arg0-of (t / test-01 :arg1 (s / skill :poss (c2 / candidate)) :location (c3 / country :name (n / name :op1 "N-A"))))
(p / probable :domain (t / think-01 :polarity - :arg0 (t2 / they) :arg1 (g / get-05 :arg1 (t3 / they) :arg2 (g2 / game :mod (b / big))) :time (b2 / before :op1 (n / now) :quant (t4 / temporal-quantity :quant (N / N-A) :unit (w / week)))))
(e / expect-01 :arg1 (b / broach :arg0 (a / and :op1 (p / person :name (n / name :op1 "Obama")) :op2 (x / xi)) :arg1 (r / range-01 :arg1 (i / issue-02 :arg0 (w / world-region :name (n2 / name :op1 "N-A")))) :arg2-of (i2 / include-01 :arg1 (c / concern-01 :arg0 (a2 / and :op1 (c2 / cyberespionage :arg1-of (a3 / allege-01) :poss (c3 / country :name (n3 / name :op1 "China"))) :op2 (a4 / assertiveness :location (w2 / water :arg2-of (d / dispute-01))))))))
(b / begin-01 :arg1 (r / recession-02 :arg1 (r2 / recession-02)) :time (a / after :op1 (h / hike :mod (r3 / rate :ord (o / ordinal-entity :value 1))) :quant (l / less-than :op1 (t / temporal-quantity :quant (N / N-A) :unit (y / year)))) :time (a2 / after :op1 (h2 / hike :mod (r4 / rate :ord (o2 / ordinal-entity :value 1))) :quant (l2 / less-than :op1 (t2 / temporal-quantity :quant (N2 / N-A) :unit (y2 / year)))))
(h / have-concession-91 :arg1 (p / possible-01 :arg1 (m / make-02 :arg0 (t / turmoil :time (r / recent) :location (m2 / market :mod (f / finance) :mod (g / globe))) :arg1 (s / skittish :arg0 (p2 / person :arg0-of (h2 / have-org-role-91 :arg1 (g2 / government-organization :name (n / name :op1 "Fed")) :arg2 (o / official))) :arg1 (p3 / person :arg0-of (h3 / have-org-role-91 :arg1 (g3 / government-organization :name (n2 / name :op1 "Fed")) :arg2 (o2 / official))) :arg2 (v / volatility) :manner (r2 / raise-01 :arg0 (p4 / person) :arg1 (r3 / rate :arg1-of (f2 / fund-01 :arg0 (f3 / federal)) :mod (f4 / federal)) :arg2 (p5 / percentage-entity :value (N / N-A) :mod (m3 / mere)))))) :arg2 (s2 / show-01 :arg0 (d / data :quant (m4 / most)) :arg1 (g4 / grow-01 :arg1 (m5 / market :mod (f5 / finance) :mod (g5 / globe)))))
(h / have-concession-91 :arg2 (p / prove-01 :arg0 (h2 / he) :arg1 (a / and :op1 (a2 / adept :arg1 (h3 / he) :degree (m / more :degree (m2 / much)) :time (c / come-12 :arg1 (s / set-up-03 :arg0 (h4 / he) :arg1 (c2 / colleagues :poss (h5 / he))))) :op2 (p2 / pass-03 :arg1 (s2 / shoot-02 :arg1 (p3 / person :name (n / name :op1 "Ibrahimovic")) :arg1-of (s3 / send-01 :arg0 (p4 / person :name (n2 / name :op1 "Di" :op2 "Maria")) :arg2 (s4 / shoot-02 :mod (c3 / curl) :arg1-of (t / tipped :arg0 (p5 / person :name (n3 / name :op1 "Wiland")) :time (a3 / after :op1 (n4 / now) :duration (t2 / temporal-quantity :quant (N / N-A) :unit (m3 / minute)))))))))))
(e / elect-01 :arg1 (p / person :arg0-of (l / lead-02 :arg1 (p2 / political-party :name (n / name :op1 "Labour" :op2 "Party")))) :arg2 (d / divide-02 :arg0 (p3 / person) :arg1 (p4 / political-party)))
(a / ask-02 :arg0 (p / police :mod (c / country :name (n / name :op1 "N-A"))) :arg1 (h / help-01 :arg0 (o / organization) :arg1 (i / investigate-01 :arg0 (o2 / organization) :arg1 (b / background :poss (t / truck :mod (r / refugee :mod (c2 / country :name (n2 / name :op1 "N-A"))))))) :arg2 (o3 / organization))
(i / include-91 :arg1 (a / and :op1 (p / person :arg0-of (h / have-03 :arg1 (s / surgery-01))) :op2 (p2 / person :arg1-of (f / fall-01 :arg3 (m / multiple :op1 31)))) :arg2 (p3 / person :arg0-of (s2 / study-01)) :time (b / by :op1 (s3 / study-01)))
(s / say-01 :arg0 (p / person :name (n / name :op1 "N-A")) :arg1 (c / clear-06 :polarity - :arg1 (c2 / clear-06 :arg1 (s2 / significant-02 :arg1 (s3 / sue-02) :topic (b / business :mod (s4 / short)) :quant (m / much))) :degree (v / very)))
(m / multi-sentence :snt1 (s / sell-01 :arg0 (p / person :name (n / name :op1 "Nina" :op2 "Mikkonen")) :arg1 (p2 / picture :poss (p3 / person :name (n2 / name :op1 "Timo" :op2 "T.A.")))) :snt2 (s2 / see-01 :mode (i / imperative) :arg0 (y / you) :arg1 (p4 / picture :source (e / equipment)) :time (d / date-entity :decade (N / N-A))))
(a / and :op1 (t / thing :arg2-of (n / name-01 :arg1 (d / discuss-01 :mod (d2 / democracy)))) :op2 (h / hope-01 :arg0 (i / i) :arg1 (r / relate-01 :polarity - :arg1 (m / matter :mod (t2 / this)))))
(a / and :op1 (t / thing :arg2-of (n / name-01 :arg1 (d / discuss-01 :mod (d2 / democracy)))) :op2 (h / hope-01 :arg0 (i / i) :arg1 (r / relate-01 :polarity - :arg1 (m / matter :mod (t2 / this)))))
(c / contrast-01 :arg1 (b / begin-01 :arg1 (r / recession-02 :arg1 (c2 / country :name (n / name :op1 "United" :op2 "States")) :mod (n2 / next)) :time (a / after :op1 (n3 / now) :quant (l / less-than :op1 (t / temporal-quantity :quant (N / N-A) :unit (y / year))))) :arg2 (b2 / begin-01 :arg0 (g / government-organization :name (n4 / name :op1 "Fed") :mod (c3 / central) :part-of (b3 / bank :mod (c4 / central))) :arg1 (r2 / raise-01 :arg0 (r3 / recession-02) :arg1 (i / interest :poss (g2 / government-organization)) :time (a2 / after :op1 (p / period :arg1-of (l2 / long-03)))) :degree (m / more) :time (a3 / after :op1 (b4 / begin-01 :arg0 (g3 / government-organization :name (n5 / name :op1 "Fed") :mod (c5 / central) :mod (c6 / center)) :arg1 (r4 / raise-01 :arg0 (g4 / government-organization) :arg1 (i2 / interest :poss (g5 / government-organization)))))))
(m / multi-sentence :snt1 (s / sequel) :snt2 (p / produce-01 :arg0 (f / film :arg1-of (c / come-01) :mod (e / expensive :degree (m2 / most)) :location (c2 / country :name (n / name :op1 "Finland"))) :arg1 (b / budget :mod (e2 / expensive :degree (m3 / most)) :mod (e3 / expensive :degree (m4 / most) :compared-to (b2 / budget :poss (c3 / country) :mod (e4 / euro))))))
(s / say-01 :arg0 (h / he) :arg1 (a / and :op1 (s2 / sick-05 :arg1 (h2 / he) :location (h3 / head) :time (d / drink-01 :arg0 (h4 / he))) :op2 (s3 / say-01 :arg0 (h5 / he) :arg1 (w / want-01 :arg0 (h6 / he) :arg1 (v / view-02 :arg0 (h7 / he) :arg1 (a2 / and :op1 (r / rape-01) :op2 (i / image :mod (m / murder-01))))))))
(a / and :op1 (g / get-02 :arg0 (i / i) :arg1 (s / support-01 :arg1 (f / family :arg1-of (h / have-org-role-91 :arg0 (i2 / i) :arg2 (m / member))))) :op2 (p / possible-01 :arg1 (w / walk-01 :arg0 (i3 / i) :direction (a2 / away))))
(s / see-01 :arg0 (i / i) :arg1 (c / change-01 :arg1 (t / train :mod (p / passenger) :location (b / between :op1 (l / location :name (n / name :op1 "Kotka")) :op2 (l2 / local-region :name (n2 / name :op1 "N-A"))))) :time (d / date-entity :month 3))
(g / go-10 :arg1 (m / money) :arg2 (p / person :mod (f / fastest)))
(i / intend-01 :arg0 (i2 / i) :arg1 (r / relocate :arg0 (i3 / i) :arg1 (o / operation :poss (i4 / it)) :arg2 (c / country :mod (c2 / country :name (n / name :op1 "N-A")))) :arg0-of (c3 / cause-01 :arg1 (w / work-01 :arg0 (p / person :arg1-of (i5 / include-91 :arg2 (p2 / person :arg1-of (e / employ-01)) :arg3 (p3 / percentage-entity :value 60))) :location (c4 / country :location (c5 / country :name (n2 / name :op1 "N-A"))))))
(a / and :op1 (r / raise-01 :arg0 (t / they) :arg1 (r2 / rate :mod (i / interest)) :time (f / first)) :op2 (t2 / time :time-of (h / hasten :arg0 (g / government-organization :name (n / name :op1 "Fed")) :arg1 (f2 / fires :arg0 (g2 / government-organization) :arg1 (f3 / fire :mod (f4 / finance) :mod (b / big :degree (m / more :mod (e / even)))))) :time (s / soon)))
(h / heartthrob :domain (h2 / he) :mod (q / quite) :time (t / then))
(s / say-01 :arg0 (p / person :name (n / name :op1 "Souter")) :arg1 (c / contact-01 :arg0 (h / he) :arg1 (o / organization :name (n2 / name :op1 "Ministry" :op2 "of" :op3 "Transport" :op4 "and" :op5 "Communications")) :time (a / already)))
(t / threaten-01 :arg0 (p / political-party :name (n / name :op1 "Labour" :op2 "Party")) :arg1 (s / security :mod (n2 / nation) :poss (w / we)) :arg2 (a / and :op1 (s2 / security :mod (n3 / nation) :poss (w2 / we)) :op2 (s3 / security :poss (w3 / we)) :op3 (s4 / security :poss (f / family :arg1-of (h / have-org-role-91 :arg0 (w4 / we) :arg2 (m / member))))) :time (n4 / now) :arg1-of (c / cause-01 :arg0 (a2 / and :op1 (s5 / security :mod (e / economy) :poss (w5 / we)) :op2 (s6 / security :poss (w6 / we)))))
(a / assume-02 :arg0 (y / you) :arg1 (t / true :domain (y2 / you)))
(a / assume-02 :arg0 (y / you) :arg1 (t / true :domain (y2 / you)))
(m / multi-sentence :snt1 (c / challenge-01 :arg0 (p / person :arg0-of (l / lead-02 :arg1 (p2 / political-party :name (n / name :op1 "Social" :op2 "Democratic" :op3 "Party")))) :arg1 (m2 / message-01 :arg0 (p3 / person) :arg1 (d / dialogue-01))) :snt2 (b / be-temporally-at-91 :arg1 (i / it) :arg2 (b2 / before :op1 (e / elect-01) :quant (a / almost :op1 (t / temporal-quantity :quant (N / N-A) :unit (m3 / month))))))
(h / hard-02 :arg1 (f / fraternise :arg0 (d / democrat :mod (s / social) :poss (p / person :name (n / name :op1 "Lauri" :op2 "Lyly") :arg0-of (h2 / have-org-role-91 :arg2 (p2 / president))))) :arg2 (f2 / fraternise :arg1 (d2 / democrat)) :arg1-of (c / cause-01 :arg0 (t / tell-01 :arg0 (p3 / person :arg0-of (l / lead-02 :arg1 (u / union-02))) :arg1 (s2 / stop-03 :arg0 (p4 / person) :arg1 (c2 / country) :arg2 (f3 / friday)) :mod (j / just))))
(a / and :op1 (p / person :name (n / name :op1 "Hughes") :prep-on (p2 / pitch :mod (p3 / pitch))) :op2 (a2 / abet-01 :arg0 (p4 / person) :arg1 (i / inning :ord (o / ordinal-entity :value 3)) :time (b / before :op1 (r / replace-01 :arg1 (p5 / person :name (n2 / name :op1 "A.J." :op2 "Achter") :arg0-of (h / have-org-role-91 :arg2 (r2 / reliever)))))))
(p / picked :arg0 (i / i) :arg1 (i2 / it) :arg2 (w / watch-01 :arg0 (i3 / i) :arg1 (i4 / it)))
(m / multi-sentence :snt1 (a / and :op1 (l / lose-02 :arg0 (l2 / location :name (n / name :op1 "Metcash")) :arg1 (s / share :mod (m2 / market)) :location (s2 / state :location (e / east))) :op2 (l3 / lose-02 :arg0 (a2 / and :op1 (o / organization :name (n2 / name :op1 "Aldi")) :op2 (p / person :name (n3 / name :op1 "Coles"))) :arg1 (s3 / share :mod (m3 / market)) :location (s4 / state :mod (e2 / east)))) :snt2 (l4 / loyalty :arg0 (s5 / survey-01 :arg0 (o2 / organization :name (n4 / name :op1 "Roy" :op2 "Morgan")) :time (r / recent)) :degree (m4 / most)))
(s / say-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg2 (o / official))) :arg1 (r / remain-01 :arg1 (p2 / person :quant 158) :arg3 (h2 / hospital)))
(a / and :op1 (t / take-01 :arg0 (d / data :name (n / name :op1 (m / mortality))) :arg1 (t2 / time :arg1-of (l / long-03)) :purpose (s / show-up-02 :arg1 (d2 / data))) :op2 (s2 / say-01 :arg0 (i / i) :arg1 (c / cease-01 :arg0 (p / person :name (n2 / name :op1 "Robin" :op2 "Blackstone") :arg0-of (h / have-org-role-91 :arg2 (p2 / person :arg1-of (e / expert-01 :arg2 (s3 / surgery-01)))) :arg0-of (h2 / have-org-role-91 :arg2 (p3 / person :arg1-of (e2 / expert-01 :arg2 (s4 / surgery-01)))) :arg0-of (h3 / have-org-role-91 :arg2 (p4 / person :arg1-of (e3 / expert-01 :arg2 (s5 / surgery-01)))) :arg0-of (h4 / have-org-role-91 :arg2 (p5 / person :arg1-of (e4 / expert-01 :arg2 (s6 / surgery-01)))) :arg0-of (h5 / have-org-role-91 :arg2 (p6 / person :arg1-of (e5 / expert-01 :arg2 (s7 / surgery-01)))) :arg0-of (h6 / have-org-role-91 :arg2 (p7 / person :arg1-of (e6 / expert-01 :arg2 (s8 / surgery-01)))) :arg0-of (h7 / have-org-role-91 :arg2 (p8 / person :arg1-of (e7 / expert-01 :arg2 (s9 / surgery-01)))) :arg0-of (h8 / have-org-role-91 :arg2 (p9 / person :arg1-of (e8 / expert-01 :arg2 (s10 / surgery-01)))) :arg0-of (h9 / have-org-role-91 :arg2 (p10 / person :arg1-of (e9 / expert-01 :arg2 (s11 / surgery-01)))) :arg0-of (h10 / have-org-role-91 :arg2 (p11 / person :arg1-of (e10 / expert-01 :arg2 (s12 / surgery-01))))))))
(s / say-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (o / organization :name (n / name :op1 "University" :op2 "of" :op3 "Jyväskylä")) :arg2 (c / coordinator :mod (r / research-01)))) :arg1 (a / and :op1 (r2 / recommend-01 :arg1 (a2 / attend-02 :arg0 (p2 / person :quant 1) :arg1 (t / thing :arg1-of (a3 / attend-02 :arg0 (p3 / person))) :arg1-of (s2 / special-02))) :op2 (t2 / thing :polarity - :arg1-of (d / do-02 :arg0 (p4 / person)))))
(t / talk-01 :polarity - :arg0 (p / person :location (h / here)) :arg1 (c / come-01 :arg1 (p2 / person) :direction (b / back)) :mod (o / only))
(a / allow-01 :polarity - :arg0 (c / country :name (n / name :op1 "Finland")) :arg1 (p / politician :mod (c2 / country :name (n2 / name :op1 "Finland"))) :arg1-of (c3 / cause-01 :arg0 (a2 / and :op1 (a3 / allow-01 :arg0 (c4 / country) :arg1 (p2 / participate-01 :arg0 (p3 / politician) :arg1 (m / meet-03 :arg0 (o / organization) :arg1 (o2 / organization)))) :op2 (c5 / continue-01 :arg0 (p4 / person :arg0-of (s / speak-01)) :arg1 (a4 / apologize-01 :arg0 (p5 / person) :arg1 (p6 / person :arg0-of (r / report-01)))))))
(a / allow-01 :polarity - :arg0 (c / country :name (n / name :op1 "Finland")) :arg1 (p / politician :mod (c2 / country :name (n2 / name :op1 "Finland"))) :arg1-of (c3 / cause-01 :arg0 (a2 / and :op1 (a3 / allow-01 :arg0 (c4 / country) :arg1 (p2 / participate-01 :arg0 (p3 / politician) :arg1 (m / meet-03 :arg0 (o / organization) :arg1 (o2 / organization)))) :op2 (c5 / continue-01 :arg0 (p4 / person :arg0-of (s / speak-01)) :arg1 (a4 / apologize-01 :arg0 (p5 / person) :arg1 (p6 / person :arg0-of (r / report-01)))))))
(a / and :op1 (c / cafes :mod (g / goat)) :op2 (c2 / cafes :mod (r / rabbit)) :op3 (c3 / cafes :mod (c4 / cuddling)) :op4 (c5 / cafes :mod (c6 / cuddling)) :time (a2 / already))
(h / have-03 :arg0 (i / i) :arg1 (b / buyouts :mod 50) :time (b2 / before :op1 (n / now) :duration (t / temporal-quantity :quant (N / N-A) :unit (y / year))))
(r / recommend-01 :arg1 (p / prevent-01 :arg0 (t / that) :arg1 (h / heat :name (n / name :op1 (p2 / police?s))) :arg2 (f / find-01 :arg1 (h2 / hideaway))))
(d / detail-01 :polarity - :arg0 (i / i) :arg1 (d2 / detail :quant (a / all)) :mod (a2 / again) :location (h / here) :mod (a3 / again))
(s / say-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg2 (p2 / president))) :arg1 (c / connect-01 :arg0 (c2 / control-01 :arg1 (s2 / situation :mod (r / refugee))) :arg1 (p3 / person :arg0-of (p4 / participate-01) :quant (a / all))))
(c / create-01 :arg1 (d / debt :mod (l / large :degree (m / most :mod (s / so)))) :time (h / history :mod (e / economy)))
(c / contrast-01 :arg1 (m / mention-01 :arg0 (a / agenda) :arg1 (i / invest-01 :arg2 (m2 / monetary-quantity :quant 200000 :unit (e / euro))) :mod (s / still)) :arg2 (s2 / state-01 :arg0 (p / person :name (n / name :op1 "Erkki" :op2 "Ikonen") :arg0-of (h / have-org-role-91 :arg2 (p2 / person :arg0-of (m3 / manage-01 :mod (t / technical))))) :arg1 (c2 / cost-01 :arg1 (c3 / cost-01) :arg2 (a2 / about :op1 (m4 / monetary-quantity :quant 300,000 :unit (e2 / euro))))))
(p / present-01 :arg1 (i / it) :arg2 (g / guest :mod (d / dinner) :mod (e / esteemed)) :time (i2 / initial) :mod (o / only))
(b / be-temporally-at-91 :arg1 (s / situation) :arg2 (u / until :op1 (r / rekindled :arg1 (s2 / situation) :prep-with (c / crisis :mod (r2 / refugee)))) :time (a / after :op1 (t / that)))
(s / say-01 :arg0 (p / person :name (n / name :op1 "Sipilä")) :arg1 (n2 / need-01 :polarity - :arg1 (b / broadcast-01 :arg0 (c / channel :name (n3 / name :op1 (y / yle))) :arg1 (s2 / speech) :time (a / always))))
(p / phone-number-entity :value (N / N-A))
(a / argue-01 :arg0 (o / organization :name (n / name :op1 "BBC" :op2 "Radio" :op3 "3")) :arg1 (o2 / obligate-01 :arg1 (p / person :name (n2 / name :op1 "Alan" :op2 "Davey") :arg0-of (h / have-org-role-91 :arg1 (o3 / organization) :arg2 (c / controller))) :arg2 (w / work-01 :arg0 (p2 / person) :arg1-of (h2 / hard-02 :degree (m / more) :compared-to (d / do-02 :arg0 (p3 / person) :time (p4 / past)))) :arg1-of (c2 / cause-01 :arg0 (e / educate-01 :arg1 (p5 / person) :arg2 (m2 / music :mod (c3 / classical)) :degree (l / less)))) :time (y / year :mod (t / this)))
(a / argue-01 :arg0 (o / organization :name (n / name :op1 "BBC" :op2 "Radio" :op3 "3")) :arg1 (o2 / obligate-01 :arg1 (p / person :name (n2 / name :op1 "Alan" :op2 "Davey") :arg0-of (h / have-org-role-91 :arg1 (o3 / organization) :arg2 (c / controller))) :arg2 (w / work-01 :arg0 (p2 / person) :arg1-of (h2 / hard-02 :degree (m / more) :compared-to (d / do-02 :arg0 (p3 / person) :time (p4 / past)))) :arg1-of (c2 / cause-01 :arg0 (e / educate-01 :arg1 (p5 / person) :arg2 (m2 / music :mod (c3 / classical)) :degree (l / less)))) :time (y / year :mod (t / this)))
(s / say-01 :arg0 (o / organization :name (n / name :op1 "Moody")) :arg1 (c / contrast-01 :arg1 (u / understand-01 :arg0 (w / we :quant (a / all)) :arg1 (n2 / need-01 :arg0 (w2 / we) :arg1 (r / rule))) :arg2 (g / go-01 :arg1 (i / it) :arg4 (f / far :degree (t / too)))))
(c / contrast-01 :arg2 (a / acknowledge-01 :arg0 (p / person :arg0-of (l / lead-02 :arg1 (g / government-organization :name (n / name :op1 "Fed")))) :arg1 (m / mandate :domain (s / stability :mod (f / finance)) :ord (o / ordinal-entity :value 3)) :time (s2 / since :op1 (r / recession-02 :mod (g2 / great)))))
(s / say-01 :arg0 (h / he) :arg1 (s2 / surprise-01 :arg1 (i / it) :condition (r / rate :mod (h2 / hiked :polarity -) :mod (g / government-organization :name (n / name :op1 "Fed")) :time (p / point :mod (t / this)))))
(m / multi-sentence :snt1 (l / lose-02 :mode (i / interrogative) :arg0 (s / some :arg1-of (i2 / include-91 :arg2 (t / they))) :arg1 (e / exemplify-01)) :snt2 (m2 / market-01 :mode (i3 / interrogative) :arg1 (m3 / market :mod (m4 / market :mod (u / ultra)))))
(c / catch-01 :arg0 (t / team :consist-of (p / person :arg0-of (h / have-org-role-91 :arg1 (o / organization :name (n / name :op1 "Rauma")) :arg2 (t2 / team)))) :arg1 (p2 / point :mod (v / visit-01 :arg0 (t3 / team) :arg1 (p3 / person :arg0-of (h2 / have-03 :arg1 (s / start-01 :arg1-of (s2 / start-01 :arg1-of (p4 / possible-01 :polarity -))) :mod (a / also))))))
(h / have-03 :arg0 (b / board :mod (o / organization :name (n / name :op1 "Tannadice"))) :arg1 (f / faith :topic (m / manage-01 :arg1 (o2 / organization :name (n2 / name :op1 "Dundee" :op2 "United")))))
(p / plan-01 :arg0 (p2 / plan-01 :mod (o / original)) :arg1 (h / halt-01 :arg1 (t / traffic :mod (t2 / train)) :mod (o2 / only) :time (p3 / protest-01 :arg1 (f / friday :arg1 (p4 / protest-01)))))
(c / contrast-01 :arg2 (o / oppose-01 :mode (i / interrogative) :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (o2 / organization :name (n / name :op1 "Research" :op2 "Institute")) :arg2 (c2 / ceo) :time (f / former)) :arg0-of (h2 / have-org-role-91 :arg1 (o3 / organization) :arg2 (c3 / ceo) :time (f2 / former)) :arg0-of (h3 / have-org-role-91 :arg1 (o4 / organization) :arg3 (c4 / ceo) :time (f3 / former)) :arg0-of (h4 / have-org-role-91 :arg1 (o5 / organization) :arg3 (c5 / ceo) :time (f4 / former)) :arg0-of (h5 / have-org-role-91 :arg1 (o6 / organization) :arg3 (c6 / ceo) :time (f5 / former)) :arg0-of (h6 / have-org-role-91 :arg1 (o7 / organization) :arg3 (c7 / ceo) :time (f6 / former))) :arg1 (o8 / oppose-01 :polarity - :arg1 (a / and))))
(p / possible-01 :arg1 (s / see-01 :arg1 (s2 / solution :name (n / name :op1 (g / government?s)) :arg1-of (h / harsh-02)) :arg2 (h2 / heaven-sent :mod (a / absolute)) :mod (a2 / also)) :source (v / view-01 :arg1 (a3 / appeal-01 :arg0 (g2 / government-organization :name (n2 / name :op1 "N-A")))))
(s / show-01 :arg0 (t / that) :arg1 (i / interesting :domain (y / you)))
(m / multi-sentence :snt1 (s / seem-01 :arg1 (l / likely-01 :polarity - :arg1 (u / unlikely :arg0 (p / plot-01 :arg0 (b / book)) :arg1 (p2 / plot :arg0 (p3 / plot-01 :arg0 (b2 / book) :arg1-of (n / name-01 :polarity -)) :arg1 (e / environment :arg1-of (l2 / local-02))))) :arg1-of (c / cause-01 :arg0 (p4 / plot :arg0 (b3 / boy :arg1-of (n2 / name-01 :polarity -) :arg1-of (n3 / name-01 :polarity -) :mod (y / young)) :arg1 (e2 / environment :arg1-of (l3 / local-02))))) :snt2 (s2 / speaks :arg0 (p5 / person :arg0-of (s3 / speak-01 :arg3 (t / trees)) :arg0-of (s4 / speak-01 :arg3 (t2 / trees)))))
(c / cause-01 :arg0 (c2 / connect-01) :arg1 (t / thing :mod (e / extra) :arg1-of (c3 / cause-01 :arg0 (a / attract-01 :arg1 (o / organization :name (n / name :op1 "University" :op2 "of" :op3 "Eastern" :op4 "Finland"))))))
(s / say-01 :arg0 (p / person :name (n / name :op1 "Luukkainen") :arg1-of (l / lead-02 :arg0 (p2 / person :arg0-of (t / teach-01 :arg2 (p3 / person :mod (y / young)))) :arg1-of (h / high-02 :degree (m / most)))) :arg1 (p4 / person :quant (a / about :op1 10) :location (b / building)) :time (a2 / attack-01))
(s / say-01 :arg1 9 :arg2 (t / thing :manner-of (g / get-01 :arg1 (s2 / system :arg0-of (o / operate-01 :mod (n / new)) :mod (n2 / new)))))
(p / possible-01 :arg1 (s / see-01 :arg0 (y / you) :arg1 (i / impacts :arg1 (s2 / strike-01 :arg2 (a / and :op1 (s3 / service :mod (l / land)) :op2 (t / transport-01 :arg1 (a2 / and :op1 (g / good) :op2 (p2 / passenger) :mod (b / both))))))) :source (v / video))
(p / post-01 :arg0 (o / organization :name (n / name :op1 "Tigers")) :arg1 (r / rate-entity-91 :arg1 3 :arg2 (t / temporal-quantity :quant (N / N-A) :unit (y / year))) :arg3 (r2 / right-hander :mod (v / veteran)) :arg1-of (c / cause-01 :arg0 (i / innings :arg0 (o2 / organization) :arg1 (l / list :arg1-of (d / disable-01)) :time (b / before :op1 (m / miss-02 :arg0 (o3 / organization) :arg1 (g / game) :time (a / after :op1 (m2 / miss-01 :arg0 (o4 / organization) :arg1 (g2 / game)))) :arg1-of (c2 / cause-01 :arg0 (l2 / low-04 :degree (m3 / more)))))))
(m / multi-sentence :snt1 (a / and :op1 (l / law :arg1-of (h / hard-04) :topic (w / world :mod (m2 / modelling))) :op2 (h2 / home :poss (w2 / world))) :snt2 (c / compete-01 :mode (i / imperative) :arg0 (y / you) :mod (t / terrible)))
(a / and :op1 (h / have-03 :arg0 (p / person :arg0-of (s / sing-01)) :arg1 (c / child :arg0-of (h2 / have-rel-role-91 :arg1 (p2 / person) :arg2 (c2 / child)))) :op2 (m / manage-02 :arg0 (p3 / person) :arg1 (s2 / shed :arg0 (p4 / person) :arg1 (w / weight :mod (p5 / pregnancy)) :arg2 (a2 / and :op1 (e / exercise :mod (l / light)) :op2 (y / yoga :arg1 (w2 / weight)))) :time (t / then)) :time (b / break-up-08 :arg1 (p6 / person) :mod (t2 / three-year)))
(b / budget-01 :arg1 (m / monetary-quantity :quant 85 :unit (e / euro) :arg2-of (t / total-01)) :arg2 (m2 / monetary-quantity :quant 85 :unit (e2 / euro) :arg2-of (t2 / total-01)) :arg0-of (c / cause-01 :arg1 (m3 / mean-01 :arg1 (b2 / budget-01 :arg1 (m4 / monetary-quantity :arg1-of (s / save-01)) :arg2 (r / rate-entity-91 :arg1 10 :arg2 (t3 / temporal-quantity :quant (N / N-A) :unit (y / year)))))))
(p / possible-01 :arg1 (a / attend-02 :polarity - :arg1 (i / indicators :arg1-of (r / resemble-01 :arg2 (i2 / indicators :arg1 (c / confident-01 :arg2 (i3 / industry))))) :arg0-of (c2 / cause-01 :arg1 (a2 / attend-02 :polarity - :arg1 (c3 / confidence) :degree (m / much :degree (s / so))))))
(a / and :op1 (a2 / advanced-02 :arg1 (e / examine-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (c / city-district :name (n / name :op1 "N-A") :mod (t / this)) :arg2 (m / matriculation)))) :arg2 (l / language :mod (f / foreign))) :op2 (a3 / advanced-02 :arg1 (l2 / language :mod (f2 / foreign)) :arg2 (l3 / language :mod (f3 / foreign))))
(c / call-03 :arg0 (p / person :arg0-of (l / lead-02 :arg1 (o / organization :name (n / name :op1 "Buddhist"))) :mod (p2 / province :name (n2 / name :op1 "N-A"))) :arg1 (e / end-01 :arg1 (v / violence :location (c2 / country :location (h / home :poss (c3 / country))))))
(m / multi-sentence :snt1 (s / say-01 :arg0 (p / person :name (n / name :op1 "Geoff")) :arg2 (i / i)) :snt2 (g / glad-02 :arg0 (b / beat-03 :arg0 (s2 / someone) :arg1 (p2 / person :name (n2 / name :op1 "Isaac"))) :arg1 (i2 / i)))
(s / say-01 :arg0 (o / organization :name (n / name :op1 "Health" :op2 "Ministry")) :arg1 (i / injure-01 :arg1 (p / person :quant 394 :arg2-of (t / total-01 :arg1 (p2 / person :quant 394))) :mod (a / also)))
(a / and :op2 (a2 / anger-01 :arg1 (t / they) :location (c / city :name (n / name :op1 "Washington")) :mod (t2 / too)))
(o / obligate-01 :arg1 (w / we) :arg2 (g / go-01 :arg1 (w2 / we) :arg4 (b / back :quant 1932) :direction (b2 / back) :time (l / look-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg2 (m / minister :mod (p2 / prime)))) :arg1 (s / speak-01 :arg0 (p3 / person :arg0-of (h2 / have-org-role-91 :arg2 (m2 / minister :mod (p4 / prime)))) :arg1-of (m3 / mean-01 :arg2 (s2 / speak-01 :arg0 (p5 / person :arg0-of (h3 / have-org-role-91 :arg2 (m4 / minister :mod (p6 / prime)))) :arg1-of (f / fame-01) :arg1-of (m5 / mean-01 :arg2 (b3 / begin-01 :arg1 (e / end-01 :arg1 (r / rebel-01 :mod (m6 / mäntsälä)))))))))))
(p / point-out-02 :arg0 (t / that) :arg1 (d / drop-01 :arg1 (m / market :mod (s / stock)) :condition (r / raise-01 :arg0 (g / government-organization :name (n / name :op1 "Fed")) :arg1 (r2 / rate :mod (m2 / market :mod (s2 / stock))) :condition (s3 / softening :arg0 (g2 / government-organization) :arg1 (r3 / rate) :manner (p2 / promise-01 :arg0 (g3 / government-organization) :arg1 (i / increase-01 :arg1 (i2 / increase-01 :mod (a / another))))))))
(a / and :op1 (h / have-03 :arg0 (h2 / he) :arg1 (s / shoe :poss (h3 / he)) :frequency (m / many) :frequency (r / rate-entity-91 :arg1 (m2 / many) :arg2 (t / temporal-quantity :quant (N / N-A) :unit (d / day)))) :op2 (c / care-01 :arg0 (h4 / he) :arg1 (p / possible-01 :arg1 (s2 / stylishly :arg1 (r2 / realize-01 :arg0 (p2 / person :arg0-of (o / oppress-01 :arg1 (u / underpants :mod (w / white) :poss (p3 / person)))) :arg1 (p4 / possible-01 :arg1 (s3 / see-01 :arg1 (b / band :mod (r3 / rubber) :poss (p5 / person :mod (w2 / white) :mod (w3 / white))) :arg1-of (s4 / see-01 :prep-under (w4 / waistline :arg1-of (l / low-04) :poss (p6 / person))))))))))
(m / make-02 :arg0 (j / job) :arg1 (f / feel-01 :arg0 (t / they) :arg1 (r / resemble-01 :arg1 (t2 / they) :arg2 (p / person :arg0-of (a / act-01)))))
(r / receive-01 :arg0 (h / he) :arg1 (a / accolade :quant (m / multiple :op1 (m2 / mass-quantity :quant (N / N-A) :unit (t / ton)))) :arg2 (f / fan))
(u / understand-01 :arg0 (p / person :name (n / name :op1 "Sirkka")) :arg1 (a / and :op1 (d / drama :arg1 (d2 / drama)) :op2 (p2 / possible-01 :arg1 (o / obligate-01 :arg2 (c / coloured :arg1 (t / truth) :degree (b / bit))))) :mod (a2 / also))
(a / and :op1 (p / prefer-01 :arg0 (h / he) :arg1 (i / idea :topic (a2 / allow-01 :arg1 (t / take-01 :arg0 (p2 / person :mod (o / other) :arg0-of (h2 / have-org-role-91 :arg2 (c / colleagues))) :arg1 (f / floor)))) :mod (a3 / also)) :op2 (s / say-01 :arg0 (h3 / he) :arg1 (a4 / approach-02 :arg0 (h4 / he) :arg1 (p3 / person :name (n / name :op1 "John" :op2 "Bercow") :arg0-of (h5 / have-org-role-91 :arg1 (c2 / country :name (n2 / name :op1 "N-A")) :arg3 (s2 / speak-01))) :purpose (d / discuss-01 :arg0 (p4 / person) :arg1 (i2 / issue-02)))))
(c / cause-01 :arg0 (e / end-01 :arg1 (d / day)) :arg1 (d2 / die-01 :quant 1 :mod (m / more)) :time (b / by :op1 (e2 / end-01 :arg1 (d3 / day))))
(r / reveal-01 :arg0 (o / organization :name (n / name :op1 "Saab")) :arg1 (o2 / order-02 :arg0 (a / army :mod (c / country :name (n2 / name :op1 "US"))) :arg1 (r2 / rs :name (n3 / name :op1 (a2 / at4cs)) :arg0-of (l / launch-01))) :medium (r3 / release-01 :arg1 (p / press)))
(g / good :degree (m / more) :domain (w / we) :compared-to (m2 / meet-01 :arg0 (w2 / we) :arg1 (n / need-01 :arg1 (c / customer :poss (w3 / we) :location (a / around :op1 (w4 / world))))) :degree (m3 / more) :compared-to (c2 / company :arg1-of (s / separate-02)))
(i / interesting :domain (t / this) :degree (m / most) :time (m2 / morning :mod (a / all)) :domain (t2 / this))
(b / bad-07 :mode (i / interrogative) :arg1 (i2 / industry) :degree (t / that))
(a / and :op1 (b / be-located-at-91 :arg1 (a2 / and :op1 (s / she) :op2 (p / person :arg0-of (h / have-rel-role-91 :arg1 (s2 / she) :arg2 (f / friend)))) :arg2 (s3 / school :arg1-of (h2 / high-02))) :op2 (g / guy :mod (o / old :degree (m / more)) :arg0-of (t / try-01 :arg1 (t2 / teach-01 :arg0 (g2 / guy) :arg1 (p2 / play-11 :arg0 (g3 / guy) :arg2 (c / career))))))
(c / crash-01 :arg1 (p / person :mod (r / religious-group :name (n / name :op1 "N-A")) :arg1-of (k / kill-01 :location (r2 / range :mod (c2 / city :name (n2 / name :op1 "Mecca"))))))
(m / multi-sentence :snt1 (a / and :op2 (t / think-01 :arg0 (i / i) :arg1 (r / rise-01 :arg1 (h / he) :arg2 (e / eye :arg1-of (p / public-02)) :arg1-of (q / quick-02 :degree (v / very))))) :snt2 (a2 / and :op1 (g / grow-01 :arg1 (h2 / he) :location (e2 / eye :arg1-of (p2 / public-02))) :op2 (a3 / and :op1 (g2 / grow-01 :arg1 (h3 / he) :location (e3 / eye :arg1-of (p3 / public-02))) :op2 (a4 / and :op1 (g3 / grow-01 :arg1 (h4 / he) :location (e4 / eye :arg1-of (p4 / public-02))) :op2 (a5 / and :op1 (g4 / grow-01 :arg1 (h5 / he) :location (e5 / eye :arg1-of (p5 / public-02))) :op2 (a6 / and :op1 (g5 / grow-01 :arg1 (h6 / he) :location (e6 / eye :arg1-of (p6 / public-02))) :op2 (a7 / and :op1 (g6 / grow-01 :arg1 (h7 / he) :location (e7 / eye :arg1-of (p7 / public-02))) :op2 (a8 / and :op1 (m2 / make-01 :arg0 (h8 / he) :arg1 (e8 / error :mod (t2 / terrible) :mod (s / some))) :op2 (a9 / and :op1 (g7 / grow-01 :arg1 (h9 / he) :location (e9 / eye :arg1-of (p8 / public-02))) :op2 (m3 / made :arg0 (h10 / he) :arg1 (c / criticize-01 :arg0 (h11 / he)))))))))) :op3 (t3 / try-01 :arg0 (w / we) :arg1 (u / understand-01 :arg0 (w2 / we) :arg1 (u2 / understand-01 :arg0 (h12 / he) :arg1 (c2 / consequence :arg1-of (t4 / think-01 :arg0 (h13 / he)))) :mod (j / just)))))
(t / tell-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (c / cabinet :poss (p2 / person :name (n / name :op1 "Corbyn") :arg0-of (h2 / have-org-role-91 :arg1 (c2 / cabinet :poss (p3 / person)) :arg2 (m / member))) :arg2 (m2 / member)))) :arg1 (a / advise-01 :arg0 (p4 / person) :arg1 (p5 / person :arg0-of (l / lead-02 :arg1 (p6 / political-party :name (n2 / name :op1 "Labour" :op2 "Party")))) :arg2 (s / sing-01 :arg0 (p7 / person) :arg1 (a2 / anthem :arg1-of (i / irrespective :arg2 (b / believe-01 :arg0 (p8 / person) :arg1 (r / recommend-01 :arg1 (a3 / abolished :arg1 (m3 / monarchy)))))))) :arg2 (p9 / person :arg0-of (h3 / have-org-role-91 :arg1 (c3 / cabinet :poss (o / organization :name (n3 / name :op1 "BBC" :op2 "Two"))) :arg2 (m4 / member))))
(a / and :op1 (t / terminate-01 :arg1 (m / matter) :time (a2 / and :op1 (w / wednesday) :op2 (t2 / thursday))) :op2 (t3 / thursday :arg1 (m2 / matter)) :arg1-of (c / cause-01 :arg0 (c2 / call-03 :arg0 (c3 / committee :mod (g / government-organization :name (n / name :op1 "Fed")) :arg1-of (o / open-09)) :arg1 (d / decide-01 :arg0 (c4 / committee) :arg1 (d2 / decide-01 :arg0 (c5 / committee) :arg1 (d3 / decide-01))))))
(o / open-01 :arg1 (c / compete-01 :location (t / traffic :mod (r / railway))) :manner (g / gradual))
(d / drop-01 :arg1 (r / rate :mod (e / employ-01 :polarity -)) :arg4 (p / percentage-entity :value (N / N-A)) :time (a / and :op1 (a2 / after :op1 (n / now) :quant (m / more-than :op1 (t / temporal-quantity :quant (N2 / N-A) :unit (y / year)))) :op2 (l / level :arg1-of (n2 / near-02 :arg2 (l2 / level :arg1-of (c / consider-01 :arg0 (g / government-organization :name (n3 / name :op1 "Fed"))) :arg1-of (c2 / consider-01 :arg0 (g2 / government-organization :name (n4 / name :op1 "Fed"))))))))
(p / possible-01 :arg1 (b / befriend-01 :arg0 (y / you) :arg1 (p2 / person :quant 40) :location (i / it)) :condition (p3 / proceed-01 :arg0 (y2 / you) :arg1 (b2 / boat)))
(p / promote-02 :arg0 (o / organization :name (n / name :op1 "Pediatric" :op2 "Society" :op3 "of" :op4 "Rio" :op5 "Grande") :part-of (o2 / organization :name (n2 / name :op1 "Pediatric" :op2 "Society" :op3 "of" :op4 "Rio" :op5 "Grande") :part-of (c / country))) :manner (h / health))
(m / multi-sentence :snt1 (c / contrast-01 :arg2 (n / nice-01 :arg1 (p / person :name (n2 / name :op1 "Jeremy" :op2 "Corbyn") :arg0 (p2 / person :name (n3 / name :op1 "Jeremy" :op2 "Corbyn") :arg0-of (g / give-01 :arg1 (p3 / pat :arg1-of (f / friendly-01)) :arg2 (b / back :part-of (s / strait)) :direction (b2 / back))) :arg2 (i / i)))) :snt2 (s2 / seem-01 :arg1 (e / endanger-01 :arg0 (a / and :op1 (s3 / strategy :poss (p4 / person :name (n4 / name :op1 "Neil" :op2 "Kinnock")) :mod (p5 / person :name (n5 / name :op1 "Murdoch")) :mod (p6 / person :name (n6 / name :op1 "Murdoch"))) :op2 (s4 / strategy :poss (p7 / person :name (n7 / name :op1 "Murdoch")) :mod (p8 / person :name (n8 / name :op1 "Murdoch")))) :arg1 (e2 / endanger-01 :arg1 (s5 / strategy :poss (p9 / person :name (n9 / name :op1 "Murdoch")) :mod (p10 / person :name (n10 / name :op1 "Murdoch")))) :time (n11 / no-longer))))
(a / and :op1 (r / receive-01 :arg0 (l / lamb :source (o / organization :name (n / name :op1 "Delta" :op2 "State"))) :arg1 (e / educate-01 :location (s / spring :location (s2 / spring :quant 2015)))) :op2 (s3 / say-01 :arg0 (i / i) :arg1 (p / post-01 :arg0 (l2 / lamb) :medium (w / website :poss (u / university)))))
(c / carpeted :arg1 (p / person :name (n / name :op1 "Hibee")) :time (a / after :op1 (s / sing-01 :arg0 (p2 / person) :arg1 (s2 / song :arg0-of (s3 / sing-01 :arg1 (p3 / person :name (n2 / name :op1 "Rudi" :op2 "Skacel") :arg0-of (p4 / play-01 :arg1 (e / ex-hearts))))))))
(s / say-01 :arg0 (h / he) :arg1 (l / like-02 :arg0 (h2 / he) :arg1 (s2 / stay-01 :arg1 (w / we) :location (o / organization :name (n / name :op1 "EU") :arg1-of (r / reform-01)))))
(c / compare-01 :arg0 (t / team :mod (r / research-01)) :arg1 (s / surgery-01 :arg2 (t2 / type :quant 2)) :mod (a / also))
(c / contrast-01 :arg1 (c2 / continue-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (w / world-region :name (n / name :op1 "Kashmir")) :arg2 (s / secretary :mod (p2 / person :name (n2 / name :op1 "Hillary" :op2 "Clinton") :arg0-of (h2 / have-org-role-91 :arg2 (s2 / secretary :mod (w2 / world-region :name (n3 / name :op1 "Kashmir"))) :time (f / former)))))) :arg1 (l / lead-02 :arg0 (p3 / person) :arg1 (r / race :mod (d / democracy)) :mod (d2 / double))) :arg2 (d3 / decline-01 :arg1 (p4 / person :name (n4 / name :op1 "Bernie" :op2 "Sanders") :arg0-of (s3 / sen. :arg1 (p5 / person)))))
(c / call-03 :arg0 (h / he) :arg1 (a / and :op1 (t / theatre :quant (l / less :degree (l2 / less))) :op2 (f / fact :mod (f2 / fact :degree (m / more)))) :location (s / showpieces :mod (w / weekly)))
(c / contrast-01 :arg1 (m / message-01 :arg0 (m2 / message :mod (a / approve) :quant (m3 / many) :topic (r / report-01 :arg0 (o / organization :name (n / name :op1 "IMF"))))) :arg2 (w / word :mod (a2 / also) :arg0-of (w2 / warn-01 :arg1 (r2 / recommend-01 :arg1 (c2 / cut-02 :polarity - :arg1 (t / thing) :mod (m4 / much :degree (t2 / too))))) :mod (a3 / also)))
(p / possible-01 :arg1 (w / weird :polarity - :degree (e / equal) :compared-to (w2 / weird) :domain (f / frame :part-of (p2 / person :name (n / name :op1 "Albert" :op2 "Edwards") :arg0-of (f2 / found-01 :arg1 (o / organization :name (n2 / name :op1 "Societe" :op2 "Generale") :mod (b / bank :mod (c / country))))))) :arg1-of (c2 / cause-01 :arg0 (p3 / possible-01 :arg1 (s / seem-01 :arg1 (g / glance :ord (o2 / ordinal-entity :value 1))))))
(s / say-01 :arg0 (p / person :name (n / name :op1 "O'Steen")) :arg1 (a / and :op1 (w / write-01 :arg0 (p2 / person :arg0-of (h / have-rel-role-91 :arg1 (h2 / he) :arg2 (d / daughter)))) :op2 (s2 / sings :arg0 (p3 / person) :arg1 (m / music :poss (p4 / person)))))
(s / say-01 :arg0 (p / person :name (n / name :op1 "Niinistö")) :arg1 (t / touch-01 :arg0 (q / question-01 :arg1 (m / military :name (n2 / name :op1 "NATO"))) :arg1 (t2 / thing :arg1-of (d / discuss-01)) :mod (a / also)))
(s / say-01 :arg0 (o / organization :name (n / name :op1 "FedEx" :op2 "Corp.")))
(c / contrast-01 :arg1 (e / explain-01 :arg0 (p / person :quant (1 / 1/2) :mod (c2 / country :name (n / name :op1 "N-A"))) :arg1 (p2 / person :mod (c3 / country :name (n2 / name :op1 "N-A"))) :time (n3 / now)) :arg2 (s / satisfy-01 :arg1 (p3 / person :ord (o / ordinal-entity :value 3) :mod (j / just))))
(a / and :op1 (c / crammed :arg1 (t / they) :arg2 (m / minibuses)) :op2 (t2 / take-01 :arg1 (t3 / they) :arg3 (s / someplace :location (c2 / coast))))
(o / obligate-01 :arg1 (i / i) :arg2 (t / try-01 :arg0 (i2 / i) :arg1 (r / remember-01 :arg0 (i3 / i) :arg1 (d / detail :quant (a / all)))) :mod (j / just))
(a / and :op1 (p / person :name (n / name :op1 "Rautakallio") :domain (m / model :quant 1953)) :op2 (i / interest-01 :arg1 (p2 / person) :arg2 (t / transfer-01 :arg1 (p3 / post :poss (p4 / person :name (n2 / name :op1 "Toivola"))) :arg2 (d / director :mod (s / sports)))))
(a / and :op1 (c / contribute-01 :arg0 (f / factor :mod (f2 / factor :mod (p / pivotal))) :arg2 (p2 / possible-01 :polarity - :arg1 (d / discover-01 :arg1 (c2 / culprits :arg1 (c3 / crisis :mod (f3 / finance)))))) :op2 (d2 / discover-01 :polarity - :arg1 (t / thing :arg1-of (d3 / discover-01 :arg0 (c4 / crisis :mod (f4 / finance))))))
(p / places :arg0 (a / and :op1 (c / childhood :poss (h / he)) :op2 (p2 / place :location-of (g / grow-01 :arg1 (h2 / he)))) :arg1 (a2 / and :op1 (b / beautiful-02 :arg1 (l / life)) :op2 (b2 / beautiful-02 :arg1 (l2 / life)) :op3 (h3 / harmonious :arg1 (l3 / life)) :op4 (h4 / harmonious :arg1 (l4 / life))) :time (m / meet-03 :arg0 (h5 / he) :arg1 (p3 / person :name (n / name :op1 "Petre" :op2 "Tutea")) :location (c2 / city :name (n2 / name :op1 "Paris") :location (c3 / city :name (n3 / name :op1 "Paris")))))
(g / generate-01 :arg0 (p / person :name (n / name :op1 "Ben" :op2 "Carson")) :arg1 (r / reach-01 :arg0 (p2 / person) :arg1 (l / level :arg1-of (s / same-01 :arg2 (e / enthusiasm)) :mod (e2 / enthusiasm))) :arg1-of (s2 / say-01 :arg0 (p3 / person :name (n2 / name :op1 "Trump"))) :arg1-of (s3 / say-01 :arg0 (p4 / person :quant 43 :arg0-of (s4 / say-01 :arg1 (t / thing :arg1-of (s5 / same-01 :arg2 (t2 / thing :arg1-of (s6 / same-01 :arg2 (t3 / thing :arg1-of (s7 / same-01 :arg2 (t4 / thing :arg1-of (s8 / same-01 :arg2 (t5 / thing :arg1-of (s9 / same-01 :arg2 (p5 / person)))))))))))))) :mod (o / only))
(a / and :op1 (t / terminate-01 :arg0 (m / magistrates :location (l / location :name (n / name :op1 "Iasi"))) :arg1 (s / session :arg1-of (c / close-01) :arg1-of (a2 / accuse-01 :arg2 (r / raping :arg1 (w / woman :mod (y / young)) :arg2 (w2 / woman :mod (y2 / young))))) :ord (o / ordinal-entity :value 1)) :op2 (r2 / request-01 :arg1 (s2 / set-up-03 :arg1 (p / person :arg1-of (f / free-03)))))
(e / employ-01 :arg1 (c / country :name (n / name :op1 "Scotland")) :time (d / date-interval :op1 (d2 / date-entity :decade (N / N-A)) :op2 (d3 / date-entity :dayperiod (N2 / N-A))) :prep-with (n2 / number :quant-of (p / person :arg0-of (w / work-01 :location (s / standing :quant (2 / 2,612,000)) :time (n3 / now)))))
(i / include-91 :arg1 (a / and :op1 (p / person :arg0-of (b / bring-01 :arg1 (w / wealth :arg1-of (e / experience-01)))) :op2 (p2 / person :arg0-of (b2 / bring-01 :arg1 (w2 / wealth) :arg2 (a2 / attack-01 :quant (a3 / all))))) :arg2 (h / he))
(i / include-91 :arg1 (a / and :op1 (p / person :arg0-of (b / bring-01 :arg1 (w / wealth :arg1-of (e / experience-01)))) :op2 (p2 / person :arg0-of (b2 / bring-01 :arg1 (w2 / wealth) :arg2 (a2 / attack-01 :quant (a3 / all))))) :arg2 (h / he))
(c / crash-01 :arg1 (i / it) :mod (g / good) :condition (b / become-01 :arg1 (i2 / it) :arg2 (s / state :mod (r / religious-group :name (n / name :op1 "N-A"))) :mod (m / main)))
(a / and :op1 (e / explain-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (c / continent :name (n / name :op1 "N-A")) :arg2 (d / diplomat))) :arg1 (d2 / day :mod (o / other)) :time (d3 / day :mod (o2 / other))) :op2 (e2 / explained :arg0 (s / state :quant (s2 / some) :arg0-of (h2 / have-org-role-91 :arg1 (o3 / organization) :arg2 (m / member))) :arg1 (a2 / and :op1 (a3 / agenda :mod (s3 / self-absorbed) :poss (c2 / country :name (n2 / name :op1 "Britain")) :topic (t / thing :arg2-of (c3 / characteristic-02 :arg1 (c4 / country)))) :op2 (c5 / change-01 :arg0 (c6 / country) :arg1 (t2 / treaty) :arg1-of (w / want-01 :polarity - :arg0 (c7 / country) :mod (m2 / most))))))
(a / and :op1 (e / explain-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (c / continent :name (n / name :op1 "N-A")) :arg2 (d / diplomat))) :arg1 (d2 / day :mod (o / other)) :time (d3 / day :mod (o2 / other))) :op2 (e2 / explained :arg0 (s / state :quant (s2 / some) :arg0-of (h2 / have-org-role-91 :arg1 (o3 / organization) :arg2 (m / member))) :arg1 (a2 / and :op1 (a3 / agenda :mod (s3 / self-absorbed) :poss (c2 / country :name (n2 / name :op1 "Britain")) :topic (t / thing :arg2-of (c3 / characteristic-02 :arg1 (c4 / country)))) :op2 (c5 / change-01 :arg0 (c6 / country) :arg1 (t2 / treaty) :arg1-of (w / want-01 :polarity - :arg0 (c7 / country) :mod (m2 / most))))))
(i / include-01 :arg1 (a / and :op1 (n / need-01 :arg1 (a2 / access-01 :arg1 (c / citizen :poss (c2 / citizen :ord (o / ordinal-entity :value 3) :arg0-of (m / meet-01 :arg1 (e / employ-01)))))) :op2 (a3 / access-01 :arg1 (a4 / access-01 :arg1 (c3 / citizen :ord (o2 / ordinal-entity :value 3)) :beneficiary (i2 / institution :mod (e2 / educate-01) :arg1-of (h / high-02 :degree (m2 / more))) :beneficiary (i3 / institution :mod (e3 / educate-01) :arg1-of (h2 / high-02 :degree (m3 / more)) :location (c4 / country :name (n2 / name :op1 "Romania"))) :purpose (a5 / and :op1 (f / field) :op2 (p / profession))))) :arg2 (t / this))
(c / call-03 :arg0 (p / person :arg0-of (l / lead-02 :arg1 (o / organization :name (n / name :op1 "Buddhist"))) :mod (p2 / province :name (n2 / name :op1 "N-A"))) :arg1 (e / end-01 :arg1 (v / violence :location (c2 / country :location (h / home :poss (c3 / country))))))
(m / multi-sentence :snt1 (a / and :op1 (s / specific-02 :arg1 (m2 / market :time (b / before :op1 (n / now) :duration (o / or :op1 (t / temporal-quantity :quant (N / N-A) :unit (y / year)) :op2 (t2 / temporal-quantity :quant (N2 / N-A) :unit (y2 / year))))) :manner (s2 / sharp) :frequency (o2 / often :degree (m3 / more))) :op2 (h / head-02 :arg0 (a2 / and :op1 (p / person :arg0-of (h2 / head-02 :arg1 (r / rate))) :op2 (p2 / person :arg0-of (h3 / head-02 :arg1 (r2 / rate))) :op3 (p3 / person :arg0-of (h4 / head-02 :arg1 (r3 / rate))) :op4 (p4 / person :arg0-of (h5 / head-02 :arg1 (r4 / rate))) :op5 (p5 / person :arg0-of (h6 / have-org-role-91 :arg1 (o3 / organization :name (n2 / name :op1 "Nuveen" :op2 "Asset" :op3 "Management") :part-of (o4 / organization :name (n3 / name :op1 "Nuveen" :op2 "Asset" :op3 "Management"))) :arg3 (a3 / apprentice-01 :arg0 (p6 / person)))) :arg1-of (a4 / average-04) :time (b2 / before :op1 (n4 / now) :duration (t3 / temporal-quantity :quant (N3 / N-A) :unit (d / day)))))) :snt2 (s3 / say-01 :arg0 (a5 / analyze-01 :time (r5 / recent)) :arg1 (t4 / thing :arg1-of (p7 / post-01 :arg2 (p8 / person :name (n5 / name :op1 "Barron"))))))
(c / contrast-01 :arg1 (c2 / contribute-01 :arg0 (a / authority :mod (c3 / country :name (n / name :op1 "N-A"))) :arg2 (e / establish-01 :arg0 (a2 / authority) :arg1 (s / system :arg0-of (a3 / authorize-01 :arg1 (f / flexible))))) :arg2 (a4 / attend-02 :arg0 (a5 / authority) :arg1 (c4 / citizen :source (c5 / country :arg0-of (h / have-03 :arg1 (s2 / security :mod (n2 / nation)) :arg1-of (p / possible-01)) :arg0-of (a6 / affect-01 :arg1 (s3 / security :mod (n3 / nation)) :arg1-of (p2 / possible-01)) :arg0-of (a7 / affect-01 :arg1 (s4 / security :mod (n4 / nation)) :arg1-of (p3 / possible-01)))) :time (t / time :arg1-of (s5 / same-01)) :time (t2 / time :arg1-of (s6 / same-01))))
(s / seem-01 :arg1 (t / trend-01 :arg1 (t2 / trend :mod (r / returns :time (a / after :op1 (h / hike :ord (o / ordinal-entity :value 1))) :arg1-of (p / possible-01) :mod (a2 / again) :arg1-of (p2 / possible-01))) :time (a3 / after :op1 (h2 / hike :ord (o2 / ordinal-entity :value 1)))) :arg1-of (s2 / say-01 :arg0 (p3 / person :arg0-of (a4 / analyze-01) :mod (o3 / organization :name (n / name :op1 "Deutsche" :op2 "Bank"))) :time (s3 / study-01 :arg0 (g / government-organization :name (n2 / name :op1 "Fed")) :time (a5 / after :op1 (h3 / hikes :arg0 (g2 / government-organization :name (n3 / name :op1 "Fed")))))))
(s / seem-01 :arg1 (t / trend-01 :arg1 (t2 / trend :mod (r / returns :time (a / after :op1 (h / hike :ord (o / ordinal-entity :value 1))) :arg1-of (p / possible-01) :mod (a2 / again) :arg1-of (p2 / possible-01))) :time (a3 / after :op1 (h2 / hike :ord (o2 / ordinal-entity :value 1)))) :arg1-of (s2 / say-01 :arg0 (p3 / person :arg0-of (a4 / analyze-01) :mod (o3 / organization :name (n / name :op1 "Deutsche" :op2 "Bank"))) :time (s3 / study-01 :arg0 (g / government-organization :name (n2 / name :op1 "Fed")) :time (a5 / after :op1 (h3 / hikes :arg0 (g2 / government-organization :name (n3 / name :op1 "Fed")))))))
(m / multi-sentence :snt1 (h / have-03 :arg0 (p / person :name (n / name :op1 "David" :op2 "Grimal")) :arg1 (c / career :mod (i / international) :prep-as (v / violinist :mod (s / solo)))) :snt2 (h2 / hold-01 :arg0 (h3 / he) :arg1 (c2 / concerts :mod (s2 / stage :mod (m2 / music :mod (c3 / classical)) :mod (m3 / main) :part-of (w / world) :example (a / and :op1 (e / email) :op2 (o / organization :name (n2 / name :op1 "Orchestre" :op2 "Philharmonique" :op3 "de" :op4 "Radio" :op5 "France" :op6 "," :op7 "Russian" :op8 "National" :op9 "Orchestra")) :op3 (o2 / organization :name (n3 / name :op1 "Orchestre" :op2 "National" :op3 "de" :op4 "Lyon")) :op4 (p2 / person :name (n4 / name :op1 "Berliner" :op2 "Symphoniker")) :op5 (p3 / person :name (n5 / name :op1 "Berliner" :op2 "Symphoniker")) :op6 (c4 / country :name (n6 / name :op1 "N-A")) :op7 (c5 / country :name (n7 / name :op1 "N-A")) :op8 (s3 / sinfonia) :op8 (s4 / sinfonia) :op8 (s5 / sinfonia) :op8 (s6 / sinfonia) :op8 (s7 / sinfonia) :op8 (s8 / sinfonia) :op8 (s9 / sinfonia) :op8 (s10 / sinfonia) :op8 (s11 / sinfonia) :op8 (s12 / sinfonia) :op8 (s13 / sinfonia) :op8 (s14 / sinfonia) :op8 (s15 / sinfonia) :op8 (s16 / sinfonia) :op8 (a2 / arming) :op8 (a3 / arming) :op8 (a4 / arming) :op8 (a5 / arming) :op8 (a6 / arming) :op8 (a7 / arming) :op8 (a8 / arming) :op8 (a9 / arming) :op8 (a10 / arming) :op8 (a11 / arming) :op8 (a12 / arming) :op8 (a13 / arming) :op8 (a14 / arming) :op8 (a15 / arming) :op8 (a16 / arming) :op8 (a17 / arming) :op8 (a18 / arming) :op8 (a19 / arming) :op8 (a20 / arming) :op8 (a21 / arming) :op10 (a22 / arming) :op10 (a23 / arming) :op10 (a24 / arming) :op10 (v2 / varsovia))))))
(( / ( :( (n / name) :op1 "Hewlett-Packard")
(c / change-01 :arg1 (t / that) :time (p / place-01 :arg1 (m / money :quant 4) :arg2 (p2 / person :name (n / name :op1 "Jeb" :op2 "Bush")) :time (l / late :op1 (d / date-entity :month 7))))
(f / fair :mod (c / career))
(c / contrast-01 :arg1 (a / ally-01 :arg1 (p / person :name (n / name :op1 "Angela" :op2 "Merkel") :arg0-of (h / have-org-role-91 :arg1 (c2 / country :name (n2 / name :op1 "Germany")) :arg2 (c3 / chancellor) :manner (c4 / consistent)) :arg0-of (h2 / have-org-role-91 :arg1 (c5 / country) :arg2 (c6 / chancellor))) :arg2 (p2 / person :arg0-of (h3 / have-org-role-91 :arg2 (c7 / chancellor))) :arg1-of (c8 / cause-01 :arg0 (a2 / and :op1 (b / be-located-at-91 :arg1 (p3 / person) :arg2 (p4 / power) :duration (t / temporal-quantity :quant (N / N-A) :unit (y / year))) :op2 (w / want-01 :arg0 (p5 / person) :arg1 (l / leave-15 :arg0 (p6 / person) :arg1 (o / office) :time (b2 / before :op1 (b3 / bad-07 :arg1 (p7 / person)))))))) :arg2 (a3 / and :op1 (p8 / power :arg1 (p9 / person :name (n3 / name :op1 "Thatcher") :arg0-of (h4 / have-org-role-91 :arg2 (o2 / overstayers))) :time (b4 / before :op1 (n4 / now) :duration (t2 / temporal-quantity :quant (N2 / N-A) :unit (y2 / year)))) :op2 (p10 / person :name (n5 / name :op1 "Mitterrand") :arg0 (p11 / person :name (n6 / name :op1 "Mitterrand")) :arg1 (p12 / person) :arg2 (- / -rrb- :quant 16))))
(a / and :op1 (w / want-01 :polarity - :arg0 (i / i) :arg1 (d / disappointment :arg0 (i2 / i) :arg1 (a2 / anyone :source (f / family :arg1-of (h / have-org-role-91 :arg0 (i3 / i) :arg2 (m / member)))))) :op2 (w2 / wish-01 :arg0 (i4 / i) :arg1 (r / return-01 :arg1 (w3 / we) :arg4 (h2 / home) :accompanier (r2 / result :mod (g / good)))))
(m / multi-sentence :snt1 (a / and :op1 (g / give-01 :arg0 (p / person :name (n / name :op1 "David" :op2 "Grimal")) :arg1 (e / example :mod (p2 / product :mod (r / romanian))) :time (b / before)) :op2 (a2 / after :arg0 (o / organization :name (n2 / name :op1 "EU")) :time (a3 / after :op1 (h / have-org-role-91 :arg0 (p3 / person) :arg1 (o2 / organization) :arg2 (m2 / member))))) :snt2 (g2 / good :arg1 (a4 / and :op1 (v / vegetables :poss (y / you)) :op2 (m3 / meat :poss (y2 / you)) :op3 (m4 / meat)) :time (b2 / before :op1 (e2 / enter-01 :arg0 (o3 / organization) :arg1 (a5 / and :op1 (o4 / organization :name (n3 / name :op1 "EU")) :op2 (m5 / meat :poss (y3 / you)))))))
(m / multi-sentence :snt1 (a / and :op1 (g / give-01 :arg0 (p / person :name (n / name :op1 "David" :op2 "Grimal")) :arg1 (e / example :mod (p2 / product :mod (r / romanian))) :time (b / before)) :op2 (a2 / after :arg0 (o / organization :name (n2 / name :op1 "EU")) :time (a3 / after :op1 (h / have-org-role-91 :arg0 (p3 / person) :arg1 (o2 / organization) :arg2 (m2 / member))))) :snt2 (g2 / good :arg1 (a4 / and :op1 (v / vegetables :poss (y / you)) :op2 (m3 / meat :poss (y2 / you)) :op3 (m4 / meat)) :time (b2 / before :op1 (e2 / enter-01 :arg0 (o3 / organization) :arg1 (a5 / and :op1 (o4 / organization :name (n3 / name :op1 "EU")) :op2 (m5 / meat :poss (y3 / you)))))))
(a / and :op1 (e / emotional :domain (p / person :arg0-of (h / have-rel-role-91 :arg1 (s / she) :arg2 (m / mother))) :mod (a2 / also)) :op2 (p2 / possible-01 :arg1 (b / believe-01 :arg0 (s2 / she) :arg1 (t / thing :mod (s3 / such)) :beneficiary (s4 / she)) :mod (h2 / hardly)))
(o / obligate-01 :arg2 (k / know-01 :arg0 (p / person :mod (t / this)) :arg1 (a / and :op1 (e / event :location (t2 / there)) :op2 (s / show-01 :arg0 (p2 / person) :arg1 (a2 / and :op1 (d / disrespect-01 :arg0 (p3 / person)) :op2 (r / respect-01 :arg0 (p4 / person) :arg1 (a3 / and :op1 (i / institution) :op2 (t3 / tradition))))))))
(t / think-01 :polarity - :arg0 (p / person :arg1-of (r / register-02) :arg1-of (i / include-91 :arg2 (p2 / person :arg0-of (v / vote-01) :arg1-of (r2 / register-02)) :arg3 (p3 / percentage-entity :value (N / N-A)))) :arg1 (s / she) :arg2 (a / and :op1 (h / honest) :op2 (t2 / trustworthy)))
(r / realize-01 :arg0 (p / person :name (n / name :op1 "Robert" :op2 "Roulston") :arg0-of (h / have-org-role-91 :arg1 (o / organization :name (n2 / name :op1 "RVL")) :arg2 (c / chairman) :time (f / former)) :arg0-of (h2 / have-org-role-91 :arg1 (o2 / organization :name (n3 / name :op1 "RVL")) :arg2 (c2 / chairman) :time (c3 / current)) :arg0-of (h3 / have-org-role-91 :arg1 (o3 / organization) :arg2 (c4 / chairman) :time (c5 / current))) :arg1 (t / that) :time (a / and :op1 (t2 / time) :op2 (r2 / realize-01 :arg0 (p2 / person) :arg1 (t3 / that) :time (t4 / today))))
(m / match-03 :arg2 (t / they) :mod (m2 / magnificent))
(m / match-03 :arg2 (t / they) :mod (m2 / magnificent))
(a / and :op2 (d / detained :arg0 (c / citizen :arg1-of (a2 / age-01 :arg2 (t / temporal-quantity :quant (N / N-A) :unit (y / year)))) :arg1 (a3 / and :op1 (d2 / detain-01 :arg1 (p / person :arg0-of (d3 / drive-01 :arg1 (t2 / truck :arg1-of (r / register-02 :arg2 (o / organization :name (n / name :op1 "Renault" :op2 "Magnum")))) :location (c2 / country :name (n2 / name :op1 "Romania")))) :arg2 (t3 / temporal-quantity :quant (N2 / N-A) :unit (h / hour))) :op2 (s / submit-01 :arg1 (p2 / person) :arg2 (c3 / court :mod (l / location :name (n3 / name :op1 "Bihor"))) :arg3 (t4 / thing :arg1-of (p3 / propose-01 :arg0 (c4 / custody)))))))
FAILED_TO_PARSE#Couldn't convert to full AMR graph.
(m / multi-sentence :snt1 (c / cause-01 :arg0 (e / experience-01 :arg0 (a / and :op1 (t / team :mod (n / nation) :poss (c2 / country :name (n2 / name :op1 "Romania"))) :op2 (p / person :name (n3 / name :op1 "Lynn" :op2 "Howells") :arg0-of (h / have-org-role-91 :arg1 (t2 / team :mod (n4 / nation) :poss (c3 / country)) :arg2 (c4 / coach)))) :arg1 (p2 / pride-01 :arg0 (t3 / team) :arg2 (t4 / team :mod (r / rugby :mod (n5 / nation))) :mod (r2 / romanians)))) :snt2 (h2 / honour :mod (g / great) :domain (p3 / participate-01 :arg0 (w / we) :arg1 (c5 / cup :mod (w2 / world) :mod (t5 / this)))))
(k / know-01 :arg0 (p / person :mod (o / other) :quant (s / some)) :arg1 (k2 / know-01 :polarity - :arg0 (p2 / person) :arg1 (e / expertise :poss (p3 / person) :topic (c / control-01 :arg1 (t / tobacco)))) :time (m / meet-03))
(s / suppose-02 :arg1 (i / i) :arg2 (k / know-01 :arg0 (i2 / i) :arg1 (t / thing :arg1-of (w / write-01 :location (p / press :arg1-of (l / local-02)))) :time (s2 / since :op1 (c / come-01 :arg1 (i3 / i) :time (b / before :op1 (n / now) :quant (n2 / night :mod (n3 / night)))))))
(f / family :arg1-of (h / have-org-role-91 :arg0 (p / person :name (n / name :op1 "Balcan")) :arg2 (m / member)) :accompanier (p2 / person :name (n2 / name :op1 "Crina")) :location (m2 / middle :op1 (t / tell-01 :arg0 (p3 / person) :arg1 (s / story) :arg2 (a / away))))
(s / say-01 :arg0 (p / poll-01 :mod (c / cnn/orc)) :arg1 (b / bet :mod (g / good :degree (m / most)) :domain (p2 / person :name (n / name :op1 "Trump"))) :time (a / ask-01 :arg0 (p3 / person) :arg1 (l / likely-01 :arg1 (w / win-01 :arg0 (p4 / person) :arg1 (n2 / nominate-01 :arg1 (p5 / political-party)) :degree (m2 / most)))))
(u / urge-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (o / organization :name (n / name :op1 "U.N.")) :arg2 (c / chief))) :arg1 (p2 / party :quant (a / all) :arg2-of (i / include-91 :arg1 (a2 / and :op1 (d / divide-02 :arg1 (o2 / organization :name (n2 / name :op1 "U.N." :op2 "Security" :op3 "Council"))) :op2 (u2 / unite-01 :arg1 (p3 / party)) :op3 (s / support-01 :arg0 (p4 / party) :arg1 (n3 / negotiate-01) :purpose (f / find-01 :arg0 (p5 / party) :arg1 (s2 / solution :mod (p6 / politics))))))) :arg2 (c2 / chief) :mod (a3 / again))
(b / believe-01 :arg0 (o / organization :name (n / name :op1 "Financial" :op2 "Times")) :arg1 (i / increase-01 :arg0 (e / elect-01 :arg1 (p / person :name (n2 / name :op1 "Corbyn"))) :arg1 (c / chance-02 :arg1 (o2 / or :op1 (b2 / brexit :arg1 (c2 / country :name (n3 / name :op1 "Great" :op2 "Britain"))) :op2 (w / withdraw-01 :arg1 (c3 / country :name (n4 / name :op1 "Great" :op2 "Britain")) :arg2 (o3 / organization :name (n5 / name :op1 "EU")))))) :time (i2 / issue-02 :arg0 (i3 / it) :time (l / late :degree (m / most))))
(b / believe-01 :arg0 (o / organization :name (n / name :op1 "Financial" :op2 "Times")) :arg1 (i / increase-01 :arg0 (e / elect-01 :arg1 (p / person :name (n2 / name :op1 "Corbyn"))) :arg1 (c / chance-02 :arg1 (o2 / or :op1 (b2 / brexit :arg1 (c2 / country :name (n3 / name :op1 "Great" :op2 "Britain"))) :op2 (w / withdraw-01 :arg1 (c3 / country :name (n4 / name :op1 "Great" :op2 "Britain")) :arg2 (o3 / organization :name (n5 / name :op1 "EU")))))) :time (i2 / issue-02 :arg0 (i3 / it) :time (l / late :degree (m / most))))
(b / believe-01 :arg0 (o / organization :name (n / name :op1 "Financial" :op2 "Times")) :arg1 (i / increase-01 :arg0 (e / elect-01 :arg1 (p / person :name (n2 / name :op1 "Corbyn"))) :arg1 (c / chance-02 :arg1 (o2 / or :op1 (b2 / brexit :arg1 (c2 / country :name (n3 / name :op1 "Great" :op2 "Britain"))) :op2 (w / withdraw-01 :arg1 (c3 / country :name (n4 / name :op1 "Great" :op2 "Britain")) :arg2 (o3 / organization :name (n5 / name :op1 "EU")))))) :time (i2 / issue-02 :arg0 (i3 / it) :time (l / late :degree (m / most))))
(w / work-01 :arg0 (o / organization :name (n / name :op1 "Binladen" :op2 "Group")) :arg1 (e / expand-01 :arg0 (o2 / organization) :arg1 (p / peninsula :name (n2 / name :op1 "N-A")) :purpose (r / reclaim-01 :arg0 (o3 / organization) :arg1 (p2 / peninsula :name (n3 / name :op1 "N-A"))) :purpose (r2 / reclaim-01 :arg0 (o4 / organization) :arg1 (p3 / peninsula :name (n4 / name :op1 "N-A")))) :duration (t / temporal-quantity :quant (N / N-A) :unit (y / year)))
(b / believe-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg2 (p2 / person :arg1-of (e / expert-01)))) :arg1 (p3 / possible-01 :arg1 (h2 / hold-01 :arg0 (p4 / person :arg0-of (h3 / have-org-role-91 :arg2 (p5 / person :arg1-of (e2 / expert-01)))) :arg1 (s / spend-01 :arg0 (p6 / person) :arg1-of (b2 / black-07)) :direction (b3 / back))))
(b / believe-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg2 (p2 / person :arg1-of (e / expert-01)))) :arg1 (p3 / possible-01 :arg1 (h2 / hold-01 :arg0 (p4 / person :arg0-of (h3 / have-org-role-91 :arg2 (p5 / person :arg1-of (e2 / expert-01)))) :arg1 (s / spend-01 :arg0 (p6 / person) :arg1-of (b2 / black-07)) :direction (b3 / back))))
(o / obligate-01 :arg2 (d / demand-01 :arg0 (w / we) :degree (m / more)))
(o / obligate-01 :arg2 (d / demand-01 :arg0 (w / we) :degree (m / more)))
(s / say-01)
(t / tell-01 :arg0 (p / person :name (n / name :op1 "Stephen" :op2 "Thornton") :arg0-of (h / have-org-role-91 :arg2 (d / director :mod (m / medicine)))) :arg1 (h2 / have-org-role-91 :arg0 (p2 / person) :arg1 (o / organization :name (n2 / name :op1 "University" :op2 "of" :op3 "Kansas" :op4 "Hospital")) :arg2 (d2 / director :mod (m2 / medicine))) :arg2 (o2 / organization :name (n3 / name :op1 "Fox") :arg0-of (h3 / have-org-role-91 :arg1 (o3 / organization) :arg2 (d3 / director :mod (m3 / medicine)))) :location (l / location :name (n4 / name :op1 "Kansas" :op2 "City")))
(a / and :op1 (r / republicans :arg1 (i / it) :mod (m / main)) :op2 (s / say-01 :arg0 (p / person :arg0-of (s2 / say-01 :arg1 (v / view-02 :arg0 (p2 / person) :arg1 (p3 / person :name (n / name :op1 "Clinton"))))) :arg1 (b / become-01 :arg1 (p4 / person) :arg2 (b2 / bad-04 :arg1 (p5 / person) :degree (m2 / more)))))
(a / and :op1 (b / build-01 :arg1 (i / it) :mod (q / quite)) :op2 (p / put-01 :arg1 (r / rule :poss (i2 / it)) :arg2 (c / country :arg0-of (h / have-03 :arg1 (f / foot :mod (s / step :direction (f2 / foot))) :time (o / ordinal-entity :value 1))) :degree (m / much :degree (t / too))))
(v / vote-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (g / government-organization :name (n / name :op1 "Parliament")))) :arg1 (a / appoint-01 :arg0 (p2 / person) :arg1 (a2 / and :op1 (p3 / person :name (n2 / name :op1 "Ilie" :op2 "Sarbu") :arg0-of (h2 / have-org-role-91 :arg1 (o / organization) :arg2 (p4 / president :mod (v2 / vice)))) :op2 (p5 / person :name (n3 / name :op1 "Ilie" :op2 "Sarbu") :arg0-of (h3 / have-org-role-91 :arg1 (c / country) :arg2 (m / minister :mod (p6 / prime)))) :op3 (p7 / person :name (n4 / name :op1 "Ilie" :op2 "Sarbu") :arg0-of (h4 / have-org-role-91 :arg1 (o2 / organization) :arg2 (m2 / minister :mod (p8 / prime)))) :op4 (p9 / person :arg0-of (h5 / have-org-role-91 :arg1 (o3 / organization :name (n5 / name :op1 "Audit" :op2 "Authority" :op3 "of" :op4 "the" :op5 "Court" :op6 "of" :op7 "Auditors")) :arg2 (m3 / minister :mod (p10 / prime)))) :op5 (p11 / person :arg0-of (h6 / have-org-role-91 :arg1 (o4 / organization :name (n6 / name :op1 "Audit" :op2 "Authority" :op3 "of" :op4 "the" :op5 "Court" :op6 "of" :op7 "Auditors")) :arg2 (p12 / president :mod (v3 / vice)))))))
(a / and :op2 (a2 / anger-01 :arg1 (t / they) :location (c / city :name (n / name :op1 "Washington")) :mod (t2 / too)))
(s / sense-02 :arg1 (l / lead-02 :arg0 (p / person :arg0-of (l2 / lead-02 :arg1 (t / tvr)))) :mod (c / common) :arg1-of (c2 / cause-01 :arg0 (s2 / subject-01 :arg1 (n / nobody :location (h / here)) :arg2 (o / or :op1 (a / attack-01 :arg1-of (p2 / personal-02)) :op2 (s3 / something)))))
(p / possible-01 :arg1 (a / add-01 :arg1 (p2 / person :arg0-of (h / have-org-role-91 :arg1 (p3 / publication :name (n / name :op1 "N-A") :poss (l / location :name (n2 / name :op1 "Schitu" :op2 "Duca"))) :arg2 (m / mayor)))))
(d / decide-01 :arg0 (p / person :arg0-of (l / lead-02 :arg1 (p2 / political-party :name (n / name :op1 "Labour" :op2 "Party")))) :arg1 (s / stand-01 :arg1 (d2 / decide-01 :arg0 (p3 / person :arg0-of (l2 / lead-02 :arg1 (p4 / political-party))) :arg1 (p5 / perform-02 :arg0 (p6 / person) :arg1 (a / anniversary :ord (o / ordinal-entity :value 75) :poss (p7 / person :arg0-of (h / have-org-role-91 :arg1 (u / university :name (n2 / name :op1 "N-A") :mod (n3 / nation))))))) :arg2 (c / criticize-01 :arg0 (p8 / person) :arg1 (a2 / and :op1 (c2 / criticize-01 :arg1 (p9 / person :arg0-of (h2 / have-org-role-91 :arg1 (p10 / political-party) :arg2 (m / member)))) :op2 (f / focus-01 :arg0 (s2 / story :topic (p11 / page :mod (f2 / front)) :quant (s3 / several) :location (t / thing :location (p12 / page))))))) :time (m2 / meanwhile))
(s / say-01 :arg0 (o / organization :name (n / name :op1 "Atlanta" :op2 "Fed")) :arg1 (e / expect-01 :arg0 (p / person :quant (p2 / percentage-entity :value (N / N-A)) :arg1-of (i / include-91 :arg2 (p3 / person :quant 2015 :arg1-of (i2 / include-91 :arg2 (p4 / person :quant 2015 :arg1-of (i3 / include-91 :arg2 (p5 / person :quant 2015 :arg1-of (i4 / include-91 :arg2 (p6 / person :quant 2015 :arg1-of (r / rank-01)))))) :arg1 (p7 / percentage-entity :value (N2 / N-A)) :concession (p8 / percentage-entity :value (N3 / N-A) :arg1-of (i5 / include-91 :arg2 2015 :arg3 2015))))))))
(d / do-02 :arg0 (p / person :arg0-of (p2 / play-01) :arg1-of (n / need-01 :polarity -)) :arg1 (t / thing :arg1-of (n2 / need-01 :arg0 (y / you) :mod (r / really))) :frequency (s / sometimes))
(t / tell-01 :arg0 (p / person :name (n / name :op1 "Andrew" :op2 "Bingham") :arg0-of (h / have-org-role-91 :arg2 (m / mp)) :mod (c / conservative)) :arg1 (a / and :op1 (a2 / appear-02 :arg1 (' / '' :arg1 (s / station :mod (s2 / service :mod (s3 / service :mod (p2 / public)))) :direction (d / down))) :op2 (b / become-01 :arg1 (s4 / station) :arg2 (i / indistinguishable :arg1 (s5 / station) :arg2 (r / rival-01 :arg0 (s6 / station) :mod (c2 / commerce)) :arg1-of (i2 / increase-01)))) :arg2 (p3 / person :arg0-of (h2 / have-org-role-91 :arg1 (c3 / company :name (n2 / name :op1 "BBC")) :arg2 (b2 / boss))) :mod (a3 / also))
(m / multi-sentence :snt1 (p / person :name (n / name :op1 "Viorel" :op2 "Bl?ju") :arg0-of (d / depend-01 :polarity -) :arg0-of (d2 / depend-01 :polarity -) :arg0-of (d3 / depend-01 :polarity -) :arg0-of (d4 / depend-01 :polarity -) :arg0-of (d5 / depend-01 :polarity -) :arg0-of (d6 / depend-01 :polarity -) :arg0-of (d7 / depend-01 :polarity -) :arg0-of (d8 / depend-01 :polarity -) :arg0-of (d9 / depend-01 :polarity -) :arg0-of (h / have-org-role-91 :arg1 (o / organization :name (n2 / name :op1 "PSD")) :arg2 (d10 / deputy)) :arg0-of (h2 / have-org-role-91 :arg1 (o2 / organization) :arg2 (d11 / deputy)) :arg0-of (h3 / have-org-role-91 :arg1 (o3 / organization) :arg2 (d12 / deputy)) :arg0-of (h4 / have-org-role-91 :arg1 (o4 / organization) :arg2 (d13 / deputy)) :arg0-of (h5 / have-org-role-91 :arg1 (o5 / organization) :arg2 (d14 / deputy)) :arg0-of (h6 / have-org-role-91 :arg1 (o6 / organization) :arg2 (d15 / deputy)) :arg0-of (h7 / have-org-role-91 :arg1 (o7 / organization) :arg2 (d16 / deputy)) :arg0-of (h8 / have-org-role-91 :arg1 (o8 / organization) :arg2 (g / general)) :arg0-of (h9 / have-org-role-91 :arg1 (o9 / organization) :arg2 (g2 / general)) :arg0-of (h10 / have-org-role-91 :arg1 (o10 / organization) :arg2 (g3 / general)) :arg0-of (h11 / have-org-role-91 :arg1 (o11 / organization) :arg2 (g4 / general)) :arg0-of (h12 / have-org-role-91 :arg1 (o12 / organization) :arg2 (g5 / general)) :arg0-of (h13 / have-org-role-91 :arg1 (o13 / organization) :arg2 (g6 / general))))
(o / opine-01 :arg0 (i / i) :arg1 (p / possible-01 :arg1 (h / host-01 :arg0 (w / we) :arg1 (c / compete-01 :mod (m / majour)) :location (t / thing :quant 2024 :arg1-of (c2 / conclude-01 :arg0 (p2 / person :name (n / name :op1 "Dedu")))))) :medium (o2 / opine-01 :arg0 (i2 / i)))
(a / and :op1 (p / plagued :arg1 (2 / 29-year-old) :arg2 (a2 / ankle :mod (t / troublesome)) :duration (t2 / temporal-quantity :quant (N / N-A) :unit (y / year))) :op2 (f / fail-01 :arg1 (22 / 29-year-old) :arg2 (f2 / find-01 :arg0 (23 / 29-year-old) :arg1 (m / move-01 :arg2 (c / country :name (n / name :op1 "Wales")) :time (s / summer)))))
(b / bother-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg3 (j / judge-01))) :arg1 (s / sentence-01 :arg1 (p2 / person)) :manner (a / amr-unknown))
(i / include-01 :arg1 (a / and :op1 (a2 / and :op1 (p / person :arg0-of (h / have-org-role-91 :arg2 (h2 / head-of-state))) :op2 (p2 / person :arg0-of (h3 / have-org-role-91 :arg2 (h4 / head-of-state))) :op3 (p3 / person :arg0-of (h5 / have-org-role-91 :arg2 (h6 / head-of-state))) :op4 (m / more))) :arg2 (p4 / produce-01 :arg1-of (f / fresh-04)))
(i / include-01 :arg1 (a / and :op1 (a2 / and :op1 (p / person :arg0-of (h / have-org-role-91 :arg2 (h2 / head-of-state))) :op2 (p2 / person :arg0-of (h3 / have-org-role-91 :arg2 (h4 / head-of-state))) :op3 (p3 / person :arg0-of (h5 / have-org-role-91 :arg2 (h6 / head-of-state))) :op4 (m / more))) :arg2 (p4 / produce-01 :arg1-of (f / fresh-04)))
(s / say-01 :arg1 (h / have-03 :arg0 (l / lax-c) :arg1 (l2 / lot :topic (a / and :op1 (s2 / shop :mod (o / other)) :op2 (r / restaurant)))) :arg2 (p / person :name (n / name :op1 "N-A")))
(s / say-01 :arg1 (h / have-03 :arg0 (l / lax-c) :arg1 (l2 / lot :topic (a / and :op1 (s2 / shop :mod (o / other)) :op2 (r / restaurant)))) :arg2 (p / person :name (n / name :op1 "N-A")))
(a / and :op1 (a2 / and :op1 (c / come-01 :arg1 (r / rate :mod (r2 / rate))) :op2 (s / stumble :arg0 (t / thing :arg1-of (f / flaw-01 :arg1-of (p / possible-01 :polarity -))) :arg1 (r3 / recession-02 :arg1 (r4 / rate)))) :op2 (s2 / slip :arg1 (e / economy) :arg2 (r5 / recession-02)))
(r / reveal-01 :arg0 (o / organization :name (n / name :op1 "European" :op2 "Union")) :arg1 (a / and :op1 (e / event :name (n2 / name :op1 "N-A")) :op2 (d / divide-02) :op3 (d2 / declare-02 :arg1 (s / structure))) :prep-in (c / crisis :mod (t / this)))
(j / joke-01 :arg2 (j2 / joke-01))
(s / say-01 :arg0 (p / person :arg1-of (i / include-91 :arg2 (p2 / person :arg0-of (r / republican)) :arg3 (p3 / percentage-entity :value (N / N-A)))) :arg1 (o / or :op1 (' / '' :arg0 (o2 / or :op1 (p4 / person :arg0-of (h / have-org-role-91 :arg2 (g / general))) :op2 (p5 / person :arg0-of (s2 / satisfy-01 :arg1 (p6 / person))))) :op2 (s3 / satisfy-01 :arg0 (p7 / person) :arg1 (p8 / person)) :condition (n / nominate-01 :arg1 (p9 / person :name (n2 / name :op1 "Trump")))) :time (w / week :mod (l / last)))
(g / grow-01 :arg1 (t / thing :arg1-of (p / precede-01)) :time (c / current))
(m / mean-01 :arg0 (i / i) :arg2 (f / free-04 :arg1 (w / we) :arg3 (r / rove :arg1 (w2 / we))) :concession-of (p / problem :poss (t / they)))
(n / note-01 :arg0 (p / person :name (n2 / name :op1 "Jeffrey" :op2 "Lacker") :arg0-of (h / have-org-role-91 :arg1 (o / organization :name (n3 / name :op1 "Federal" :op2 "Reserve" :op3 "Bank" :op4 "of" :op5 "Richmond")) :arg2 (p2 / president)) :arg0-of (h2 / have-org-role-91 :arg1 (o2 / organization :name (n4 / name :op1 "Federal" :op2 "Reserve" :op3 "Bank" :op4 "of" :op5 "Richmond")) :arg2 (p3 / president))) :arg1 (h3 / have-03 :arg0 (o3 / organization :name (n5 / name :op1 "the" :op2 "Fed")) :arg1 (h4 / history :topic (o4 / overreact :arg1 (m / move-01 :arg1 (m2 / market :mod (f / finance)) :arg1-of (s / seem-01) :arg1-of (s2 / seem-01 :arg2 (f2 / fundamentals :mod (e / economy))))))) :time (m3 / month :mod (t / this)))
(s / show-01 :arg0 (b / breakfast :mod (b2 / breakfast)) :arg1 (s2 / show-04 :arg1 (c / capital :mod (n / nation))) :arg2 (c2 / capital :mod (n2 / nation)) :time (a / after :op1 (o / overthrow-01 :arg0 (p / person :name (n3 / name :op1 "Malcolm" :op2 "Turnbull")) :arg1 (p2 / person :name (n4 / name :op1 "Tony" :op2 "Abbott")))))
(s / show-01 :arg0 (b / breakfast :mod (b2 / breakfast)) :arg1 (s2 / show-04 :arg1 (c / capital :mod (n / nation))) :arg2 (c2 / capital :mod (n2 / nation)) :time (a / after :op1 (o / overthrow-01 :arg0 (p / person :name (n3 / name :op1 "Malcolm" :op2 "Turnbull")) :arg1 (p2 / person :name (n4 / name :op1 "Tony" :op2 "Abbott")))))
(m / multi-sentence :snt1 (c / contrast-01 :arg1 (w / will-02 :arg0 (p / person :mod (c2 / country :name (n / name :op1 "N-A"))) :arg1 (g / give-up-07 :arg0 (p2 / person) :arg1 (f / free-04 :arg1 (m2 / movement-07)))) :arg2 (o / obligate-01 :arg2 (c3 / change-01 :arg1 (r / rule :arg0-of (g2 / govern-01 :arg1 (a / area :location (l / location :name (n2 / name :op1 "Schengen"))))))) :time (a2 / after :op1 (p3 / passes :domain (i / it)))) :snt2 (r2 / resemble-01 :arg1 (r3 / resemble-01 :arg1 (r4 / resemble-01 :arg2 (a3 / and :op1 (c4 / create-01 :arg1 (a4 / animal) :time (e / era :mod (a5 / another))) :op2 (a6 / adjust-01 :polarity - :arg1 (s / situation :time (c5 / current))))) :arg2 (r5 / rule :arg0-of (g3 / govern-01 :arg1 (a7 / area :location (l2 / location :name (n3 / name :op1 "Schengen"))))))))
(m / multi-sentence :snt1 (a / and :op1 (p / person :arg0-of (h / have-rel-role-91 :arg1 (p2 / person :name (n / name :op1 "Crina")) :arg2 (p3 / parent))) :op2 (p4 / person :name (n2 / name :op1 "Alina") :arg0-of (h2 / have-rel-role-91 :arg1 (p5 / person) :arg2 (p6 / parent)))) :snt2 (c / continue-01 :arg1 (s / search-01 :arg0 (p7 / person) :manner (s2 / separate-02))) :snt3 (p8 / possible-01 :arg1 (s3 / search-01 :arg0 (p9 / person) :manner (s4 / separate-02))))
(o / obligate-01 :arg2 (t / think-01 :arg0 (t2 / they) :arg1 (p / play-01 :arg0 (t3 / they) :mod (g / good :degree (m / most) :compared-to (p2 / possible-01 :arg1 (p3 / play-01))))))
(h / have-03 :arg0 (p / person :quant 3) :arg1 (v / view :mod (n / negative)))
(h / have-03 :arg0 (p / person :quant 3) :arg1 (v / view :mod (n / negative)))
(a / and :op1 (o / organize-01 :arg0 (p / person :quant (b / between :op1 10 :op2 10)) :arg1 (a2 / and :op1 (g / girl :quant 5) :op2 (b2 / boy :quant 5)) :time (s / stage :mod (s2 / stage :ord (o2 / ordinal-entity :value 1) :part-of (c / compete-01))) :time (s3 / stage :ord (o3 / ordinal-entity :value 1) :part-of (c2 / compete-01))) :op2 (c3 / choose-01 :arg0 (b3 / boy :quant 5) :arg1 (a3 / and :op1 (g2 / girl :quant 5) :op2 (b4 / boy :quant 5) :arg0-of (h / have-03 :arg1 (o4 / opportunity) :purpose (a4 / audition :arg1 (s4 / studio :arg1-of (r / record-01)) :path (s5 / studio :arg1-of (r2 / record-01)))))))
(a / and :op1 (o / organize-01 :arg0 (p / person :quant (b / between :op1 10 :op2 10)) :arg1 (a2 / and :op1 (g / girl :quant 5) :op2 (b2 / boy :quant 5)) :time (s / stage :mod (s2 / stage :ord (o2 / ordinal-entity :value 1) :part-of (c / compete-01))) :time (s3 / stage :ord (o3 / ordinal-entity :value 1) :part-of (c2 / compete-01))) :op2 (c3 / choose-01 :arg0 (b3 / boy :quant 5) :arg1 (a3 / and :op1 (g2 / girl :quant 5) :op2 (b4 / boy :quant 5) :arg0-of (h / have-03 :arg1 (o4 / opportunity) :purpose (a4 / audition :arg1 (s4 / studio :arg1-of (r / record-01)) :path (s5 / studio :arg1-of (r2 / record-01)))))))
(b / believe-01 :arg0 (p / person :name (n / name :op1 "Charles" :op2 "Schwab")) :arg1 (c / cause-01 :arg0 (h / hike :arg1 (t / thing :arg1-of (p2 / precede-01 :arg2 (r / rate)))) :arg1 (t2 / thing :arg0-of (c2 / cause-01 :arg1 (m / move-01 :arg1 (b2 / bond :mod (c3 / close :degree (m2 / more))) :arg2 (t3 / together :degree (m3 / more)))))))
(c / contrast-01 :arg2 (r / raise-01 :arg0 (t / thing :arg1-of (a / announce-01)) :arg1 (i / issue-02 :arg0 (p / possible-01 :arg1 (b / become-01 :arg1 (c2 / company :name (n / name :op1 "Facebook")) :arg2 (p2 / place :mod (f / friendlier :degree (l / less))))))))
(c / contrast-01 :arg2 (r / raise-01 :arg0 (t / thing :arg1-of (a / announce-01)) :arg1 (i / issue-02 :arg0 (p / possible-01 :arg1 (b / become-01 :arg1 (c2 / company :name (n / name :op1 "Facebook")) :arg2 (p2 / place :mod (f / friendlier :degree (l / less))))))))
(m / multi-sentence :snt1 (i / include-91 :li (. / .179) :arg1 (l / level :mod (b / blood-alcohol) :poss (s / she)) :arg2 (l2 / level :mod (b2 / blood-alcohol) :poss (s2 / she)) :li (.2 / .179)) :snt2 (s3 / say-01 :arg0 (p / person :name (n / name :op1 "Chris" :op2 "Ritchey") :arg0-of (h / have-org-role-91 :arg1 (o / organization :name (n2 / name :op1 "Gwinnett" :op2 "Medical" :op3 "Center") :mod (e / emergency)) :arg2 (d / doctor)) :arg0-of (t / treat-01 :arg1 (p2 / person) :arg2 (o2 / organization :name (n3 / name :op1 "Gwinnett" :op2 "Medical" :op3 "Center") :location (o3 / outside :op1 (c / city :name (n4 / name :op1 "Atlanta") :location (o4 / outside :op1 (c2 / city :name (n5 / name :op1 "Atlanta")))))))) :arg1 (p3 / person) :manner (l3 / law)) :li (.3 / .179))
(r / rise-01 :arg1 (r2 / revenue) :arg2 (p / percentage-entity :value (N / N-A)) :arg4 (m / monetary-quantity :quant 12.3 :unit (d / dollar)))
(a / and :op1 (i / injure-01 :arg1 (p / policeman :quant (f / far :degree (s / so)))) :op2 (t / take-01 :arg0 (s2 / service :mod (a2 / ambulance)) :arg1 (p2 / person :quant (o / over :op1 2) :arg1-of (i2 / injure-01) :arg1-of (i3 / injure-01 :time (a3 / after :op1 (t2 / throw-01 :arg1 (p3 / policeman) :arg2 (f2 / fence :mod (s3 / security))))))))
(p / prosecute-01 :arg1 (a / and :op1 (p2 / person :arg0-of (h / head-01 :arg1 (o / organization :name (n / name :op1 "Office" :op2 "Narciza" :op3 "Nedelcu")) :time (f / former)) :arg0-of (h2 / head-01 :arg1 (o2 / organization) :time (f2 / former))) :op2 (p3 / person :arg0-of (h3 / head-01 :arg1 (o3 / organization) :time (f3 / former))) :op3 (p4 / person :arg0-of (h4 / head-01 :arg1 (o4 / organization) :time (f4 / former))) :op4 (p5 / person :arg1-of (e / employ-01 :arg0 (o5 / organization :name (n2 / name :op1 "OCPI")) :time (c / current))) :op5 (p6 / person :arg1-of (e2 / employ-01 :arg0 (c2 / company :arg1-of (m / mention-01))))) :arg2 (p7 / pay-01 :arg1 (p8 / pay-01 :arg3 (s / service) :arg1-of (c3 / charge-05 :arg0 (c4 / company :arg1-of (m2 / mention-01))))) :concession (c5 / carry-out-03 :polarity - :arg1 (w / work-01) :time (e3 / ever)))
(p / prosecute-01 :arg1 (a / and :op1 (p2 / person :arg0-of (h / head-01 :arg1 (o / organization :name (n / name :op1 "Office" :op2 "Narciza" :op3 "Nedelcu")) :time (f / former)) :arg0-of (h2 / head-01 :arg1 (o2 / organization) :time (f2 / former))) :op2 (p3 / person :arg0-of (h3 / head-01 :arg1 (o3 / organization) :time (f3 / former))) :op3 (p4 / person :arg0-of (h4 / head-01 :arg1 (o4 / organization) :time (f4 / former))) :op4 (p5 / person :arg1-of (e / employ-01 :arg0 (o5 / organization :name (n2 / name :op1 "OCPI")) :time (c / current))) :op5 (p6 / person :arg1-of (e2 / employ-01 :arg0 (c2 / company :arg1-of (m / mention-01))))) :arg2 (p7 / pay-01 :arg1 (p8 / pay-01 :arg3 (s / service) :arg1-of (c3 / charge-05 :arg0 (c4 / company :arg1-of (m2 / mention-01))))) :concession (c5 / carry-out-03 :polarity - :arg1 (w / work-01) :time (e3 / ever)))
(a / and :op1 (b / broadcast-01 :arg0 (p / person :arg0-of (h / have-rel-role-91 :arg1 (c / comedy) :arg2 (f / friend))) :arg1 (c2 / comedy) :arg2 (c3 / comedy) :time (s / start-01 :arg0 (p2 / person) :arg1 (f2 / finish-01 :arg0 (p3 / person) :arg1 (e / episodes :quant 236 :mod (f3 / full))))))
(a / and :op1 (b / broadcast-01 :arg0 (p / person :arg0-of (h / have-rel-role-91 :arg1 (c / comedy) :arg2 (f / friend))) :arg1 (c2 / comedy) :arg2 (c3 / comedy) :time (s / start-01 :arg0 (p2 / person) :arg1 (f2 / finish-01 :arg0 (p3 / person) :arg1 (e / episodes :quant 236 :mod (f3 / full))))))
(a / and :op1 (p / person :name (n / name :op1 "Nhaijah" :op2 "Russell") :arg0-of (i / ingested :arg1 (h / hand :quant (a2 / as-many-as :op1 4) :mod (s / strawberry-scented)) :time (r / recent))) :op2 (t / take-01 :arg1 (r2 / room :mod (e / emergency)) :arg3 (r3 / room :mod (e2 / emergency)) :purpose (t2 / treat-03)))
(m / multi-sentence :snt1 (q / question-01 :arg1 (g / get-03 :arg1 (b / batsman :arg1-of (t / test-01)) :arg2 (m2 / make-01 :arg1 (t2 / thing :arg1-of (m3 / mark-01 :arg0 (h / he)))))) :snt2 (t3 / thing :quant 1 :arg1-of (m4 / mark-01 :arg0 (h2 / he))))
(m / multi-sentence :snt1 (s / sf :mod (' / '')) :snt2 (r / receive-01 :arg0 (h / hospital :name (n / name :op1 (s2 / spiridon) :op2 ('2 / ''))) :arg1 (g / government-organization :name (n2 / name :op1 "Ministry" :op2 "of" :op3 "Health")) :arg1-of (f / follow-01 :arg2 (a / adjust-01 :arg1 (b / budget) :quant (a2 / about :op1 14)))))
(( / ( :( (n / name) :op1 "Romania")
(c / cause-01 :arg0 (f / focus-01 :arg0 (f2 / focus-01 :arg0 (i / it) :arg2 (s / style :mod (o / over :op1 (s2 / substance))))) :arg1 (p / prioritised :arg1 (t / thing :arg2-of (r / respond-01) :mod (m / meaningful)) :frequency (o2 / often)) :time (a / age :mod (t2 / this)))
(c / cause-01 :arg0 (f / focus-01 :arg0 (f2 / focus-01 :arg0 (i / it) :arg2 (s / style :mod (o / over :op1 (s2 / substance))))) :arg1 (p / prioritised :arg1 (t / thing :arg2-of (r / respond-01) :mod (m / meaningful)) :frequency (o2 / often)) :time (a / age :mod (t2 / this)))
(r / rate-entity-91 :arg1 7,000 :arg2 (t / temporal-quantity :quant (N / N-A) :unit (y / year)) :arg3 (o / organization :name (n / name :op1 "Pogor" :op2 "Club")))
(h / have-concession-91 :arg1 (h2 / hard-02 :arg1 (f / find-01 :arg1 (s / store)) :mod (u / usual)) :arg2 (p / possible-01 :arg1 (g / get-03 :arg1 (s2 / store) :arg2 (b / busy))))
(c / cause-01 :arg1 (h / have-org-role-91 :arg0 (h2 / he) :arg2 (m / mayor) :time (a / after :op1 (n / now) :quant (t / temporal-quantity :quant (N / N-A) :unit (m2 / minute) :mod (o / only)))))
(m / multi-sentence :snt1 (f / face-01 :arg0 (t / they) :arg1 (i / information :mod (f2 / false) :source (l / leaflet))) :snt2 (a / and :op1 (r / rudeness :arg0 (r2 / rudeness :poss (p / person :arg0-of (h / have-org-role-91 :arg1 (o / organization :name (n / name :op1 "RATP") :part-of (o2 / organization :name (n2 / name :op1 "RATP"))) :arg3 (r3 / rudeness)))) :arg1 (i2 / information :mod (f3 / false))) :op2 (f4 / fine-04 :arg1 (' / '' :mod (b / bonus))) :arg1-of (c / cause-01 :arg0 (s / say-01 :arg0 (l2 / law) :arg1 (s2 / so)))))
FAILED_TO_PARSE#Number of opening and closing brackets doesn't match.
FAILED_TO_PARSE#Number of opening and closing brackets doesn't match.
(p / person :quant (N / N-A) :mod (p2 / person :name (n / name :op1 "Di" :op2 "Maria")))
(o / off :arg1 (s / storm) :time (w / weekend :mod (t / this)) :arg1-of (c / cause-01 :arg0 (w2 / win-01 :arg0 (t2 / they) :arg1 (r / right-05 :arg1 (t3 / they) :arg2 (h / host-01 :arg0 (t4 / they) :arg1 (o2 / or :op1 (o3 / organization :name (n / name :op1 "North" :op2 "Queensland" :op3 "Cowboys")) :op2 (o4 / organization :name (n2 / name :op1 "Cronulla" :op2 "Sharks")) :mod (e / either)) :time (n3 / night :mod (n4 / next)) :mod (p / preliminary) :location (l / laptop :arg1-of (s2 / sell-01 :time (m / morning :mod (n5 / next)))))))))
(o / off :arg1 (s / storm) :time (w / weekend :mod (t / this)) :arg1-of (c / cause-01 :arg0 (w2 / win-01 :arg0 (t2 / they) :arg1 (r / right-05 :arg1 (t3 / they) :arg2 (h / host-01 :arg0 (t4 / they) :arg1 (o2 / or :op1 (o3 / organization :name (n / name :op1 "North" :op2 "Queensland" :op3 "Cowboys")) :op2 (o4 / organization :name (n2 / name :op1 "Cronulla" :op2 "Sharks")) :mod (e / either)) :time (n3 / night :mod (n4 / next)) :mod (p / preliminary) :location (l / laptop :arg1-of (s2 / sell-01 :time (m / morning :mod (n5 / next)))))))))
(s / see-01 :arg0 (i / i) :arg1 (a / and :op1 (p / person :name (n / name :op1 "Clinton")) :op2 (p2 / person :name (n2 / name :op1 "Sanders")) :op3 (p3 / person :name (n3 / name :op1 "Biden")) :prep-as (a2 / and :op1 (h / honest) :op2 (t / trustworthy))) :arg2 (h2 / have-03 :arg0 (a3 / and) :arg1 (q / quality :arg0-of (l / lead-02) :arg1-of (s2 / strong-02))))
(s / see-01 :arg0 (i / i) :arg1 (a / and :op1 (p / person :name (n / name :op1 "Clinton")) :op2 (p2 / person :name (n2 / name :op1 "Sanders")) :op3 (p3 / person :name (n3 / name :op1 "Biden")) :prep-as (a2 / and :op1 (h / honest) :op2 (t / trustworthy))) :arg2 (h2 / have-03 :arg0 (a3 / and) :arg1 (q / quality :arg0-of (l / lead-02) :arg1-of (s2 / strong-02))))
(c / cause-01 :arg1 (a / and :op1 (h / hold-04 :arg1 (e / edition :mod (n / new) :poss (f / fair :mod (i / it))) :mod (a2 / also) :time (y / year :mod (t / this)) :mod (a3 / also)) :op2 (e2 / events :arg0 (e3 / event :mod (n2 / niches)) :arg1 (a4 / and :op1 (p / person :arg0-of (s / specialize-01)) :op2 (p2 / person :arg0-of (s2 / specialize-01))) :location (f2 / field :mod (t2 / this)))))
(c / contrast-01 :arg1 (p / possible-01 :arg1 (c2 / come-01 :arg1 (s / she) :time (t / talk-01 :arg0 (p2 / person) :arg2 (p3 / person :arg0-of (h / have-rel-role-91 :arg1 (h2 / he) :arg2 (d / daughter))) :location (u / university :mod (t2 / top) :location (c3 / country :name (n / name :op1 "Italy")))))) :arg2 (p4 / possible-01 :arg1 (a / and :op1 (g / give-01 :arg0 (p5 / person) :arg1 (s2 / sheep :mod (s3 / some)) :arg2 (p6 / person)) :op2 (p7 / possible-01 :arg1 (f / find-01 :arg0 (p8 / person) :arg1 (m / man :arg0-of (h3 / have-rel-role-91 :arg1 (m2 / man) :arg2 (m3 / man))))) :op3 (s4 / start-01 :arg0 (p9 / person) :arg1 (m4 / man :arg0-of (h4 / have-rel-role-91 :arg1 (m5 / man) :arg2 (c4 / child)))) :op4 (s5 / start-01 :arg0 (p10 / person) :arg1 (m6 / man))) :condition (t3 / talk-01 :arg0 (p11 / person) :arg2 (p12 / person :arg0-of (h5 / have-rel-role-91 :arg1 (h6 / he) :arg2 (d2 / daughter))) :location (u2 / university :mod (t4 / top)))))
(a / and :op1 (g / get-05 :arg1 (p / person :arg0-of (h / have-rel-role-91 :arg1 (p2 / person) :arg2 (k / kid))) :arg2 (p3 / product :mod (t / this)) :arg1-of (f / frequent-02)) :op2 (f2 / fortunate-01 :polarity - :arg2 (g2 / go-02 :arg0 (p4 / person) :arg4 (r / room :mod (e / emergency))) :arg2-of (f3 / fortunate-01 :polarity -)) :op3 (t2 / tell-01 :arg0 (p5 / person :name (n / name :op1 "Lopez")) :arg2 (p6 / publication :name (n2 / name :op1 "CNN"))))
(a / and :op1 (g / get-05 :arg1 (p / person :arg0-of (h / have-rel-role-91 :arg1 (p2 / person) :arg2 (k / kid))) :arg2 (p3 / product :mod (t / this)) :arg1-of (f / frequent-02)) :op2 (f2 / fortunate-01 :polarity - :arg2 (g2 / go-02 :arg0 (p4 / person) :arg4 (r / room :mod (e / emergency))) :arg2-of (f3 / fortunate-01 :polarity -)) :op3 (t2 / tell-01 :arg0 (p5 / person :name (n / name :op1 "Lopez")) :arg2 (p6 / publication :name (n2 / name :op1 "CNN"))))
(a / and :op1 (h / hundreds :location (c / country :name (n / name :op1 "Romania"))) :op2 (a2 / avenues :arg1 (n2 / name :poss (h2 / he))) :location (c2 / country))
(c / contrast-01 :arg1 (p / possible-01 :arg1 (e / experience-01 :arg1 (s / side :poss (p2 / person :name (n / name :op1 "Alastair" :op2 "Cook"))) :degree (l / less) :compared-to (b / before :op1 (n2 / now) :quant (o / one :time (b2 / before :op1 (n3 / now) :quant (t / temporal-quantity :quant (N / N-A) :unit (y / year))))))) :arg2 (a / and :op1 (p3 / person :arg0-of (p4 / play-01) :mod (g / good) :location (l2 / lineup :mod (t2 / that))) :op2 (s2 / strong-02 :arg1 (m / mindset :mod (c2 / collective))) :op3 (c3 / carrying :polarity - :arg1 (m2 / mindset :mod (c4 / collective) :mod (o2 / only)))))
(f / follow-01 :arg1 (i / incident :arg1-of (f2 / follow-01 :arg2 (i2 / incident :location (w / wednesday)))) :arg2 (i3 / incident :mod 30))
(s / say-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (p2 / political-party :name (n / name :op1 "Movement" :op2 "for" :op3 "Democratic" :op4 "Change")) :arg3 (l / lead-02 :arg0 (p3 / person) :arg1 (p4 / political-party :name (n2 / name :op1 "MDC"))))) :arg1 (r / receive-01 :arg0 (p5 / politician :quant 7 :arg0-of (o / oppose-01)) :arg1 (m / message :medium (t / text) :arg0-of (w / warn-01 :arg1 (d / disrupt-01 :polarity - :arg0 (p6 / phone :arg1-of (m2 / mobile-02)) :arg1 (a / address :poss (p7 / person :name (n3 / name :op1 "Mugabe"))))))))
(s / say-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (p2 / political-party :name (n / name :op1 "Movement" :op2 "for" :op3 "Democratic" :op4 "Change")) :arg3 (l / lead-02 :arg0 (p3 / person) :arg1 (p4 / political-party :name (n2 / name :op1 "MDC"))))) :arg1 (r / receive-01 :arg0 (p5 / politician :quant 7 :arg0-of (o / oppose-01)) :arg1 (m / message :medium (t / text) :arg0-of (w / warn-01 :arg1 (d / disrupt-01 :polarity - :arg0 (p6 / phone :arg1-of (m2 / mobile-02)) :arg1 (a / address :poss (p7 / person :name (n3 / name :op1 "Mugabe"))))))))
(m / multi-sentence :snt1 (c / cause-01 :arg1 (t / try-01 :arg0 (y / you) :arg1 (d / do-02 :arg0 (y2 / you) :arg1 (s / something :arg1-of (d2 / differ-02))))) :snt2 (e / example :quant 2 :domain (t2 / that) :source (t3 / top :poss (h / head :part-of (i / i)) :location-of (m2 / mimicking :arg0 (y3 / you) :arg1 (t4 / thing :arg1-of (s2 / say-01 :arg0 (p / person :name (n / name :op1 "Bingham")))) :mod (a / actual) :mod (a2 / actual)))))
(w / want-01 :arg0 (w2 / we) :arg1 (c / come-out-09 :arg1 (w3 / we) :arg2 (i / it) :arg1-of (q / quick-02 :degree (m / most) :compared-to (p / possible-01 :arg1 (c2 / come-up-11)))) :time (n / now))
(i / include-91 :arg3 1 :arg1 (s / show-04 :arg1-of (c / come-01 :arg4 (m / mind) :time (a / and :op1 (t / try-01) :op2 (o / offer-01 :arg0 (i2 / i) :arg1 (m2 / mechanism :arg1-of (l / long-03 :arg2 (l2 / long-03))))))) :arg2 (f / friend))
(c / contrast-01 :arg2 (p / possible-01 :arg1 (i / influence-01 :arg0 (h / he) :arg1 (d / develop-01 :mod (i2 / important) :arg0-of (a / affect-01 :arg1 (w / we) :arg1-of (p2 / possible-01) :arg1-of (p3 / possible-01))))))
(c / contrast-01 :arg2 (p / possible-01 :arg1 (i / influence-01 :arg0 (h / he) :arg1 (d / develop-01 :mod (i2 / important) :arg0-of (a / affect-01 :arg1 (w / we) :arg1-of (p2 / possible-01) :arg1-of (p3 / possible-01))))))
(c / contact-01 :arg0 (p / person :name (n / name :op1 "Romic") :arg0-of (e / explain-01 :arg1 (d / desire-01 :arg0 (p2 / person) :arg1 (f / find-01 :arg0 (p3 / person) :arg1 (f2 / family :mod (b / biology) :arg1-of (h / have-org-role-91 :arg0 (p4 / person :name (n2 / name :op1 "Crina")) :arg2 (m / member))))))) :arg1 (a / and :op1 (p5 / person :name (n3 / name :op1 "Ichim") :arg0-of (h2 / have-org-role-91 :arg1 (o / organization :name (n4 / name :op1 "Centre" :op2 "for" :op3 "Prevention")) :arg2 (d2 / director :mod (r / region)))) :op2 (p6 / person :arg0-of (h3 / have-org-role-91 :arg1 (o2 / organization) :arg2 (c2 / commissioner :mod (r2 / region))))) :location (c3 / country :name (n5 / name :op1 "Italy") :location (c4 / country :name (n6 / name :op1 "Italy"))))
(s / show-01 :arg0 (p / poll-01 :arg0 (p2 / person :name (n / name :op1 "Donald" :op2 "Trump"))) :arg1 (h / have-03 :arg0 (p3 / person :quant 2 :arg1-of (i / include-91 :arg2 (p4 / person :quant 10 :arg1-of (r / republican)))) :arg1 (v / view :mod (p5 / positive) :topic (e / estate :mod (r2 / real)))) :time (b / before :op1 (a / announce-01 :arg0 (p6 / person) :arg1 (c / candidacy :poss (p7 / person) :location (m / mid-june)))))
(p / possible-01 :arg1 (c / call-01 :arg0 (w / we) :arg1 (i / it) :arg2 (a / agenda :mod (s / selfie) :poss (p2 / person :name (n / name :op1 "Dave"))) :mod (e / even)))
(p / probable :domain (t / take-01 :arg1 (d / decide-01) :time (w / week :mod (n / next))))
(f / find-02 :arg0 (p / poll-01 :arg0 (o / organization :name (n / name :op1 "Quinnipiac")) :location (s / state :name (n2 / name :op1 "Iowa")) :time (w / week :mod (l / last))) :arg1 (v / view-02 :arg0 (p2 / person :arg1-of (i / include-91 :arg2 (p3 / person :arg0-of (r / republican)) :arg3 (p4 / percentage-entity :value 60))) :arg1 (p5 / person :name (n3 / name :op1 "Trump")) :mod (f2 / favorable)) :time (w2 / week :mod (l2 / last)) :location (s2 / state :name (n4 / name :op1 "Iowa")))
(c / contrast-01 :arg2 (p / possible-01 :arg1 (s / see-01 :arg0 (y / you) :arg1 (f / fall-01 :arg1 (- / -rrb- :mod (g / grow-01)) :direction (a / away))) :time (n / now)))
(s / say-01 :arg0 (g / government-organization :arg0-of (g2 / govern-01)) :arg1 (a / and :op1 (a2 / approve-01 :arg0 (g3 / government-organization :arg0-of (g4 / govern-01)) :arg1 (s2 / strategy :mod (n / nation) :mod (' / '') :topic (a3 / and :op1 ('2 / '') :op2 (p / plan-01 :arg1 (a4 / action :arg1 (d / document)) :time (y / year :mod (c / current)))))) :op2 (p2 / plan-01 :arg0 (p3 / person :mod (c2 / country :name (n2 / name :op1 "Romania"))) :arg1 (s3 / step-01 :arg1 (p4 / person) :arg2 (m / modernise :arg0 (p5 / person) :arg1 (p6 / process-02 :arg1 (i / immigrate-01) :topic (t / territory :mod (n3 / nation)))))) :arg1-of (c3 / conform-01 :arg2 (r / release-01 :arg1 (p7 / press)))))
(c / complain-01 :arg0 (i / i) :arg1 (s / she))
(p / play-01 :quant (m / multiple) :mod (i / indeed) :mod (i2 / indeed))
(s / subject-01 :arg1 (t / this) :arg2 (b / baker :mod (d / decent) :domain (y / you)) :arg1-of (o / obvious-01))
(s / subject-01 :arg1 (t / this) :arg2 (b / baker :mod (d / decent) :domain (y / you)) :arg1-of (o / obvious-01))
(s / subject-01 :arg1 (t / this) :arg2 (b / baker :mod (d / decent) :domain (y / you)) :arg1-of (o / obvious-01))
(c / contrast-01 :arg1 (r / remove-01 :polarity - :arg1 (q / quota :mod (m / mandatory)) :mod (r2 / really)) :arg2 (a / allow-01 :mode (i / interrogative) :arg1 (c2 / cool :arg1 (s / subject) :degree (f / further)) :mod (o / only)))
(c / contrast-01 :arg1 (r / remove-01 :polarity - :arg1 (q / quota :mod (m / mandatory)) :mod (r2 / really)) :arg2 (a / allow-01 :mode (i / interrogative) :arg1 (c2 / cool :arg1 (s / subject) :degree (f / further)) :mod (o / only)))
(h / hope-01 :arg0 (i / i) :arg1 (g / gain-02 :arg0 (i2 / i) :arg1 (m / memory :arg1-of (b / beautiful-02)) :time (a / after :op1 (m2 / meet-03 :arg0 (i3 / i) :arg1 (t / they)))) :arg1-of (c / cause-01 :arg0 (t2 / thing :quant (m3 / many :degree (s / so)) :arg1-of (s2 / say-01 :arg0 (p / person :name (n / name :op1 "Crina")))) :time (n2 / now)))
(a / and :op1 (a2 / allergic :arg1 (p / person :arg0-of (t / teach-01)) :degree (h / high)) :op2 (b / ban-01 :arg0 (p2 / person) :arg1 (i / it) :arg2 (r / room :part-of (s / she))) :degree (h2 / high))
(u / use-01 :arg1 (p / person :arg0-of (v / vote-01 :arg1 (r / republican))) :arg2 (i / idea))
(a / and :op1 (c / close-01 :arg1 (b / border)) :op2 (r / rise-01 :arg1 (w / wall) :location (a2 / area :location (l / location :name (n / name :op1 "Schengen")))))
(f / frustration :arg1 (f2 / frustrate-01 :arg0 (g / government-organization :arg0-of (g2 / govern-01))) :arg2 (h / high :mod (n / new)))
(a / and :op1 (p / person :quant 2 :arg0-of (h / have-rel-role-91 :arg1 (i / i) :arg2 (p2 / parent))) :op2 (p3 / person :quant 2 :arg0-of (h2 / have-rel-role-91 :arg1 (i2 / i) :arg2 (f / father))) :domain (p4 / person :arg0-of (h3 / have-rel-role-91 :arg1 (i3 / i) :arg2 (p5 / parent))))
(l / leave-17 :arg1 (a / and :op1 (v / voice) :op2 (i / imagery :name (n / name :op1 (c / cartoon)))) :arg1-of (d / doubt-01 :polarity -) :arg1-of (d2 / doubt-01 :polarity -) :arg1-of (c2 / cause-01 :arg0 (a2 / and :op1 (s / spoof :domain (a3 / advert :mod (t / this)) :arg1-of (s2 / sharp-02)) :op2 (p / produce-01 :arg0 (o / organization :name (n2 / name :op1 "Amnesty" :op2 "International")) :arg1 (w / will-02 :arg0 (g / government-organization :arg0-of (g2 / govern-01 :arg1 (c3 / country :name (n3 / name :op1 "N-A")))) :arg1 (f / flog :arg0 (g3 / government-organization) :arg1 (w2 / will-02 :arg0 (g4 / government-organization :arg0-of (g5 / govern-01 :arg1 (c4 / country))) :arg1 (f2 / flog :arg0 (g6 / government-organization) :arg1 (w3 / weapon) :arg2 (r / regime :mod (r2 / repressive)) :path (j / jamboree :location (c5 / centre :location (c6 / city :name (n4 / name :op1 "London"))))))))))))
(l / leave-17 :arg1 (a / and :op1 (v / voice) :op2 (i / imagery :name (n / name :op1 (c / cartoon)))) :arg1-of (d / doubt-01 :polarity -) :arg1-of (d2 / doubt-01 :polarity -) :arg1-of (c2 / cause-01 :arg0 (a2 / and :op1 (s / spoof :domain (a3 / advert :mod (t / this)) :arg1-of (s2 / sharp-02)) :op2 (p / produce-01 :arg0 (o / organization :name (n2 / name :op1 "Amnesty" :op2 "International")) :arg1 (w / will-02 :arg0 (g / government-organization :arg0-of (g2 / govern-01 :arg1 (c3 / country :name (n3 / name :op1 "N-A")))) :arg1 (f / flog :arg0 (g3 / government-organization) :arg1 (w2 / will-02 :arg0 (g4 / government-organization :arg0-of (g5 / govern-01 :arg1 (c4 / country))) :arg1 (f2 / flog :arg0 (g6 / government-organization) :arg1 (w3 / weapon) :arg2 (r / regime :mod (r2 / repressive)) :path (j / jamboree :location (c5 / centre :location (c6 / city :name (n4 / name :op1 "London"))))))))))))
(l / leave-17 :arg1 (a / and :op1 (v / voice) :op2 (i / imagery :name (n / name :op1 (c / cartoon)))) :arg1-of (d / doubt-01 :polarity -) :arg1-of (d2 / doubt-01 :polarity -) :arg1-of (c2 / cause-01 :arg0 (a2 / and :op1 (s / spoof :domain (a3 / advert :mod (t / this)) :arg1-of (s2 / sharp-02)) :op2 (p / produce-01 :arg0 (o / organization :name (n2 / name :op1 "Amnesty" :op2 "International")) :arg1 (w / will-02 :arg0 (g / government-organization :arg0-of (g2 / govern-01 :arg1 (c3 / country :name (n3 / name :op1 "N-A")))) :arg1 (f / flog :arg0 (g3 / government-organization) :arg1 (w2 / will-02 :arg0 (g4 / government-organization :arg0-of (g5 / govern-01 :arg1 (c4 / country))) :arg1 (f2 / flog :arg0 (g6 / government-organization) :arg1 (w3 / weapon) :arg2 (r / regime :mod (r2 / repressive)) :path (j / jamboree :location (c5 / centre :location (c6 / city :name (n4 / name :op1 "London"))))))))))))
(r / recommend-01 :arg1 (p / put-01 :arg0 (g / government-organization :name (n / name :op1 "Fed")) :arg1 (c / concern-01 :arg0 (s / stability :mod (f / finance)) :time (f2 / first)) :arg2 (c2 / crisis :arg1-of (m / major-02) :example (a / and :op1 (p2 / person :name (n2 / name :op1 "Adam" :op2 "S." :op3 "Posen") :arg0-of (h / have-org-role-91 :arg1 (o / organization) :arg2 (m2 / member) :time (f3 / former)) :arg0-of (h2 / have-org-role-91 :arg1 (o2 / organization) :arg2 (m3 / member) :time (f4 / former))) :op2 (m4 / member :arg2-of (h3 / have-org-role-91 :arg1 (o3 / organization) :time (f5 / former)))))))
(a / and :op1 (t / try-01 :arg0 (w / we) :arg1 (h / handle-01 :arg0 (w2 / we) :arg1 (c / crisis :mod (r / refugee)))) :op2 (v / view-01 :arg0 (i / institution :quant (a2 / all)) :arg1-of (c2 / coordinate-01)))
(a / and :op1 (t / try-01 :arg0 (w / we) :arg1 (h / handle-01 :arg0 (w2 / we) :arg1 (c / crisis :mod (r / refugee)))) :op2 (v / view-01 :arg0 (i / institution :quant (a2 / all)) :arg1-of (c2 / coordinate-01)))
(c / contrast-01 :arg1 (p / provide-01 :polarity - :arg0 (p2 / person :arg0-of (h / have-org-role-91 :arg1 (p3 / panel) :arg2 (m / member))) :arg1 (p4 / person :arg0-of (h2 / have-org-role-91 :arg1 (p5 / panel) :arg2 (m2 / member)))) :arg2 (i / include-01 :arg1 (p6 / person :quant (s / some) :arg1-of (i2 / include-91 :arg2 (p7 / person :arg0-of (d / declare-02 :arg1 (i3 / industry) :mod (a / also)) :arg0-of (d2 / declare-02 :arg1 (i4 / industry) :mod (a2 / also))))) :arg2 (p8 / person)))
(m / multi-sentence :snt1 (a / awful :domain (i / it)) :snt2 (r / remember-01 :polarity - :arg0 (i2 / i) :arg1 (a2 / anything)))
(m / multi-sentence :snt1 (p / possible-01 :arg1 (r / register-02 :arg1 (y / you)) :time (u / until :op1 (d / date-entity :month 9 :day 30))) :snt2 (p2 / possible-01 :arg1 (u2 / use-01 :arg0 (y2 / you) :arg1 (n / number :mod (t / telephone)) :arg2 (a / address :mod (e / e-mail)) :arg1-of (f / follow-01 :arg2 (a2 / address :mod (e2 / e-mail) :arg1-of (f2 / follow-01))))))
(m / maintain-01 :arg0 (p / person :name (n / name :op1 "Clinton")) :arg1 (l / lead-01 :arg0 (w / woman) :arg1 (w2 / woman) :mod (l2 / large)) :concession-of (h / have-03 :arg0 (p2 / person) :arg1 (n2 / narrow)))
(m / maintain-01 :arg0 (p / person :name (n / name :op1 "Clinton")) :arg1 (l / lead-01 :arg0 (w / woman) :arg1 (w2 / woman) :mod (l2 / large)) :concession-of (h / have-03 :arg0 (p2 / person) :arg1 (n2 / narrow)))
(b / border-01 :arg1 (c / country :name (n / name :op1 "Greece")) :arg2 (c2 / country :name (n2 / name :op1 "Turkey")) :mod (a / actual) :arg1-of (c3 / cause-01 :arg0 (a2 / and :op1 (b2 / border-01 :arg1 (c4 / country) :arg2 (c5 / country)) :op2 (w / wave-04 :arg0 (w2 / wave-04 :arg1 (p / person :arg0-of (u / use-01)) :mod (t / this)) :arg1 (l / limit-01 :arg1 (s / system :mod (s2 / schengen) :mod (o / old)))))))
(i / include-91 :arg3 1 :arg1 (t / team :mod (t2 / top) :arg0-of (f / fight-01 :location (c / cup :mod (c2 / continent :name (n / name :op1 "N-A"))))) :arg2 (b / balance-01))
(a / and :op1 (r / recommend-01 :arg1 (l / let-01 :arg0 (w / we) :arg1 (p / politics))) :op2 (r2 / recommend-01 :arg1 (m / meet-03 :arg0 (w2 / we) :arg1 (p2 / politics))))
(t / time :topic (r / rate :mod (i / interest)))
(d / drop-01 :arg1 (r / rate :mod (e / employ-01 :polarity -)) :arg4 (p / percentage-entity :value (N / N-A)) :time (a / and :op1 (a2 / after :op1 (n / now) :quant (m / more-than :op1 (t / temporal-quantity :quant (N2 / N-A) :unit (y / year)))) :op2 (l / level :arg1-of (n2 / near-02 :arg2 (l2 / level :arg1-of (c / consider-01 :arg0 (g / government-organization :name (n3 / name :op1 "Fed"))) :arg1-of (c2 / consider-01 :arg0 (g2 / government-organization :name (n4 / name :op1 "Fed"))))))))
(h / have-03 :arg0 (h2 / he) :arg1 (a / and :op1 (t / treat-03 :arg1 (h3 / he) :arg2 (p / pitch)) :op2 (r / require-01 :arg1 (o / oxygen)) :time (b / before :op1 (t2 / take-01 :arg1 (o2 / oxygen) :arg3 (h4 / hospital)))))
(r / resemble-01 :arg1 (r2 / resemble-01 :polarity - :arg1 (o / or :op1 (c / candidate :mod (d / democracy) :arg1-of (s / single-02)) :op2 (c2 / candidate :mod (p / potential))) :arg2 (p2 / possible-01 :polarity - :arg1 (a / accept-01 :arg1 (c3 / candidate) :prep-as (p3 / person :arg0-of (v / vote-01 :arg1 (p4 / primary) :mod (p5 / primary)))))) :arg2 (m / month :mod (l / last)))
(l / lead-02 :arg0 (h / he) :arg1 (p / person :name (n / name :op1 "Carly" :op2 "Fiorina")) :arg2 (p2 / point :quant 13) :arg3 (p3 / point :quant 13) :arg4 (a / and :op1 (p4 / point :quant 14) :op2 (p5 / point :quant 14) :op3 (p6 / person :name (n2 / name :op1 "Jeb" :op2 "Bush") :mod (f / final)) :op4 (p7 / person :name (n3 / name :op1 "Jeb" :op2 "Bush") :mod (f2 / final)) :op5 (p8 / person :name (n4 / name :op1 "Chris" :op2 "Christie") :mod (e / each)) :op6 (p9 / person :name (n5 / name :op1 "Chris" :op2 "Christie") :mod (e2 / each)) :op6 (p10 / person :name (n6 / name :op1 "Chris" :op2 "Christie") :mod (e3 / each))))
(c / cause-01 :arg0 (g / gain-02 :arg0 (p / person :name (n / name :op1 "Les" :op2 "Dissonances")) :arg1 (f / free-04)) :arg1 (a / allow-01 :arg0 (p2 / person) :arg1 (d / develop-02 :arg0 (p3 / person) :arg1 (w / world :mod (g2 / grade :poss (p4 / person))) :manner (v / venturing :polarity - :arg1 (p5 / person) :arg2 (a2 / artists :mod (s / solo))))))
(b / benefit-01 :arg0 (b2 / benefit-01))
(b / benefit-01 :arg0 (b2 / benefit-01))
(e / example :mod (t / trivial :mod (j / just)) :domain (f / fail-01 :arg2 (i / integrate :arg1 (p / person :arg0-of (s / sail-01)))))
(i / injure-01 :arg1 (a / and :op1 (p / policeman :quant (a2 / at-least :op1 20)) :op2 (c / child :quant 2)) :time (c2 / clashes :arg1-of (w / write-01 :arg0 (c3 / country :name (n / name :op1 "Russia")) :time (t / today))))
(b / byline-91 :arg2 (l / location :name (n / name :op1 "Ponta")))
(r / remain-01 :arg1 (m / man :mod (y / young)) :arg3 (i / imprison-01) :duration (a / at-least :op1 (t / temporal-quantity :quant (N / N-A) :unit (d / day))) :time (a2 / after :op1 (r2 / re-discuss :arg0 (p / person :arg0-of (h / have-org-role-91 :arg3 (j / judge-01))) :arg1 (p2 / possible-01 :arg1 (s / set-02 :arg0 (p3 / person) :arg1 (f / free-04 :arg1 (m2 / man)))))))
(h / have-org-role-91 :arg0 (p / person :arg0-of (h2 / have-org-role-91 :arg1 (p2 / political-party :name (n / name :op1 "Labour" :op2 "Party")) :arg2 (m / member :mod (n2 / new)))) :arg1 (h3 / have-org-role-91 :arg0 (p3 / person) :arg1 (o / organization :name (n3 / name :op1 "European" :op2 "Union")) :arg2 (m2 / member)) :manner (c / consistent-01))
(s / say-01 :arg0 (a / and :op1 (p / person :name (n / name :op1 "Fred" :op2 "Smith") :arg0-of (h / have-org-role-91 :arg2 (c / chairman))) :op2 (p2 / person :arg0-of (h2 / have-org-role-91 :arg2 (c2 / ceo))) :op3 (p3 / person :arg0-of (h3 / have-org-role-91 :arg2 (c3 / ceo)))) :arg1 (p4 / performing :arg0 (a2 / and :op1 (c4 / condition :mod (e / economy) :mod (w / weaker-than-expected)) :op2 (t / trade-01 :mod (g / globe)) :op3 (t2 / trade-01 :mod (g2 / globe)) :mod (e2 / especially)) :arg1 (c5 / company)))
(l / listen-01 :mode (i / imperative) :polite (+ / +) :arg0 (y / you) :arg1 (s / series :quant (s2 / series) :arg1-of (m / make-18 :arg0 (i2 / i))) :condition (w / want-01 :arg0 (y2 / you) :arg1 (k / know-01 :arg0 (y3 / you) :arg1 (m2 / more :topic (c / case-03)))))
(u / use-01 :arg0 (m / money :arg1-of (r / receive-01 :arg0 (u2 / unit :mod (m2 / medicine)))) :arg1 (m3 / money :arg1-of (u3 / use-01 :arg0 (u4 / unit) :time (u5 / until :op1 (e / end-01 :arg1 (y / year))))) :arg2 (a / and :op1 (i / invest-01 :arg1 (m4 / money) :arg2 (a2 / and :op1 (m5 / modernize-01) :op2 (p / plan-01 :arg1 (a3 / and :op1 (e2 / equipment) :op2 (t / technology :mod (m6 / medicine))))) :op2 (a4 / and :op1 (e3 / equipment) :op2 (t2 / technology :mod (m7 / medicine)) :arg1-of (i2 / initiate-01 :arg0 (h / hospital) :time (a5 / already))))))
(u / use-01 :arg0 (m / money :arg1-of (r / receive-01 :arg0 (u2 / unit :mod (m2 / medicine)))) :arg1 (m3 / money :arg1-of (u3 / use-01 :arg0 (u4 / unit) :time (u5 / until :op1 (e / end-01 :arg1 (y / year))))) :arg2 (a / and :op1 (i / invest-01 :arg1 (m4 / money) :arg2 (a2 / and :op1 (m5 / modernize-01) :op2 (p / plan-01 :arg1 (a3 / and :op1 (e2 / equipment) :op2 (t / technology :mod (m6 / medicine))))) :op2 (a4 / and :op1 (e3 / equipment) :op2 (t2 / technology :mod (m7 / medicine)) :arg1-of (i2 / initiate-01 :arg0 (h / hospital) :time (a5 / already))))))
(a / and :op1 (l / look-01 :polarity - :mode (i / imperative) :arg0 (w / we) :arg1 (p / person :name (n / name :op1 "Putin"))) :op2 (s / see-01 :mode (i2 / imperative) :arg0 (w2 / we) :arg1 (s2 / strong-02 :arg1 (h / he) :degree (m / more) :compared-to (h2 / he) :mod (a2 / actual))))
(a / and :op1 (l / look-01 :polarity - :mode (i / imperative) :arg0 (w / we) :arg1 (p / person :name (n / name :op1 "Putin"))) :op2 (s / see-01 :mode (i2 / imperative) :arg0 (w2 / we) :arg1 (s2 / strong-02 :arg1 (h / he) :degree (m / more) :compared-to (h2 / he) :mod (a2 / actual))))
(s / same-01 :arg1 (t / that) :arg2 (o / obligate-01 :arg1 (w / we) :arg2 (g / go-02 :arg0 (w2 / we))))
(s / shaming)
(a / appeal-01 :arg0 (r / rhetoric :poss (p / person :name (n / name :op1 "Corbyn"))) :arg1-of (l / limit-01) :location (a2 / and :op1 (r2 / regard-01 :arg1 (s / service :mod (a3 / all)) :arg2 (f / force)) :op2 (l2 / lead-03 :arg0 (a4 / automation :arg1-of (e / extensive-03)) :arg2 (i / industry :arg0-of (n2 / need-01 :arg1 (p2 / person :arg1-of (q / qualify-02 :degree (h / high)) :arg1-of (q2 / qualify-02 :degree (h2 / high))))))) :prep-under (l3 / landscaping :mod (i2 / industry) :mod (n3 / new)))
(w / work-01 :polarity - :arg0 (c / city) :time (c2 / current))
(c / contrast-01 :arg1 (b / be-located-at-91 :arg1 (p / person :name (n / name :op1 "Clinton")) :arg2 (a / ahead :op1 (p2 / person :name (n2 / name :op1 "Sanders"))) :time (m / month :mod (l / last))) :arg2 (h / have-03 :arg0 (p3 / person) :arg1 (e / edges :mod (5 / 5-point) :prep-with (g / group :mod (t / this))) :time (n3 / now)))
(h / he :prep-with (p / person :name (n / name :op1 "Ted" :op2 "Cruz")) :arg1-of (d / die-01))
(h / he :prep-with (p / person :name (n / name :op1 "Ted" :op2 "Cruz")) :arg1-of (d / die-01))
(u / use-01 :arg0 (c / criminal-organization :name (n / name :op1 "N-A")) :arg1 (p / phone :mod (g / girl :mod (1 / 11-year-old))) :arg2 (i / image :mod (a / abuse-01 :arg1 (c2 / child))))
(i / include-91 :arg1 (o / or :op1 (c / candidate :mod (d / democracy)) :op2 (c2 / candidate :mod (p / potential))) :arg2 (t / thing :arg2-of (c3 / characteristic-02 :arg1 (p2 / person :arg0-of (v / vote-01 :arg1 (p3 / party :poss (p4 / party) :mod (p5 / primary))))) :arg1-of (k / key-02) :quant (s / some)) :mod (w / well))
(s / say-01 :arg0 (h / he) :arg1 (c / contrast-01 :arg1 (a / agree-01 :arg0 (h2 / he)) :arg2 (h3 / have-condition-91 :arg1 (m / manage-02 :arg0 (t / team) :arg1 (f / finish-07 :arg0 (t2 / team) :arg2 (p / place :ord (o / ordinal-entity :value 1) :part-of (' / '' :arg0 (g / group))))) :arg2 (p2 / person :name (n / name :op1 "Victor" :op2 "Piturca")))))
(b / believe-01 :arg0 (i / i) :arg1 (w / wrong-04 :arg1 (e / execute-01 :arg1 (h / he))))
(p / possible-01 :polarity - :arg1 (c / come-01 :arg1 (e / everyone) :arg4 (c2 / continent :name (n / name :op1 "Europe"))) :arg1-of (s / say-01 :arg0 (h / he)) :medium (s2 / speech :poss (h2 / he)))
(c / contrast-01 :arg2 (w / want-01 :arg0 (h / he) :arg1 (w2 / write-01 :arg0 (h2 / he) :arg1 (i / it) :mod (i2 / international))))
(c / contrast-01 :arg2 (w / want-01 :arg0 (h / he) :arg1 (w2 / write-01 :arg0 (h2 / he) :arg1 (i / it) :mod (i2 / international))))
FAILED_TO_PARSE#Number of opening and closing brackets doesn't match.
(a / appear-01 :arg1 (b / button :mod (n / new)) :time (s / soon))
(i / intend-01 :arg0 (w / we) :arg1 (r / resume-01 :arg0 (w2 / we) :arg1 (w3 / work-01) :time (s / soon :degree (m / most) :compared-to (p / possible-01 :arg1 (r2 / resume-01)))))
(h / have-concession-91 :arg1 (s / say-01 :arg0 (v / variant :quant (m / many) :location (h2 / hand :part-of (p / person :arg0-of (h3 / have-org-role-91 :arg1 (o / organization :name (n / name :op1 "PSD")) :arg2 (p2 / president))))) :arg1 (t / thing :arg1-of (i / intend-01 :arg0 (p3 / person :arg0-of (h4 / have-org-role-91 :arg1 (o2 / organization) :arg2 (p4 / president))) :location (p5 / peninsula :name (n2 / name :op1 "N-A"))))) :arg2 (s2 / say-01 :arg0 (p6 / person :arg0-of (h5 / have-org-role-91 :arg1 (o3 / organization) :arg2 (p7 / president))) :arg1 (p8 / person :name (n3 / name :op1 "Stanciu")) :mod (s3 / still)))
(a / and :op1 (p / possible-01 :polarity - :arg1 (r / reach-02 :arg1 (h / he))) :op2 (d / die-01 :arg1 (h2 / he) :time (m / morning :mod (n / next))))
(b / be-temporally-at-91 :arg1 (v / violence) :arg2 (e / evening :location (r / relative-position :op1 (c / canyon :name (n / name :op1 "N-A")) :quant (a / about :op1 (d / distance-quantity :quant (N / N-A) :unit (m / mile))))))
(m / multi-sentence :snt1 (m2 / mean-01 :polarity - :arg1 (v / vote-01 :arg0 (p / person) :arg1 (v2 / vote-01 :arg0 (p2 / person) :arg1 (w / we) :mod (a / again))) :arg2 (c / contrast-01 :arg1 (v3 / vote-01 :arg0 (p3 / person) :arg1 (v4 / vote-01 :arg0 (p4 / person) :arg1 (w2 / we) :mod (a2 / again))) :arg2 (v5 / vote-01 :polarity - :arg0 (p5 / person) :arg1 (w3 / we)))) :snt2 (s / state-01 :arg0 (a3 / amr-unknown) :arg1 (i / interest-01 :polarity - :arg1 (p6 / person :arg1-of (e / elect-01)) :arg2 (p7 / politics) :time (n / no-longer))))
(c / concept :mod (i / illusory) :domain (c2 / create-01 :arg1 (f / fortress :arg1 (c3 / continent :name (n / name :op1 "Europe")))))
(c / concept :mod (i / illusory) :domain (c2 / create-01 :arg1 (f / fortress :arg1 (c3 / continent :name (n / name :op1 "Europe")))))
(s / say-01 :arg0 (t / thing :arg1-of (r / report-01 :arg0 (e / evaluate-01))) :arg1 (s2 / subject-01 :arg1 (p / person :name (n / name :op1 "Deng")) :arg2 (f / force :arg0-of (f2 / favor-01 :arg1 (a / and :op1 (h / head :part-of (p2 / person)) :op2 (p3 / person :arg0-of (h2 / have-rel-role-91 :arg1 (h3 / he) :arg2 (h4 / head :part-of (p4 / person)))) :op3 (p5 / person :arg0-of (h5 / have-rel-role-91 :arg1 (h6 / he) :arg2 (h7 / head)))) :manner (b / blunt-02)))))
(d / draw-02 :arg0 (p / police) :arg1 (p2 / person :quant 2 :arg0-of (s / specialize-01 :arg1 (f / file-01 :arg0 (p3 / person) :arg1 (c / cross-02 :arg0 (p4 / person) :arg1 (b / border-01 :arg1 (s2 / state) :arg2 (b2 / border-01 :arg1 (s3 / state) :arg2 (b3 / border-01 :arg2 (s4 / state))) :mod (l / law :polarity -)))))) :arg2 (p5 / person :quant 2 :arg0-of (u / use-01)))
(a / and :op1 (f / fall-01 :arg1 (r / rate :mod (e / employ-01)) :arg3 (p / percentage-entity :value (N / N-A)) :arg4 (r2 / rate-entity-91 :arg1 (p2 / percentage-entity :value (N2 / N-A)) :arg2 (t / temporal-quantity :quant (N3 / N-A) :unit (y / year)))) :op2 (f2 / figure :mod (a2 / above :op1 (p3 / product-of :op1 74.0 :op2 73.5) :arg1-of (a3 / average-01))))
(c / cause-01 :arg1 (c2 / counterweight :arg0 (p / person :mod (r / religious-group :name (n / name :op1 "N-A")) :arg0-of (- / -lrb- :arg1 (c3 / city :name (n2 / name :op1 "Berlin")))) :arg1 (b / become-01 :arg1 (c4 / city) :arg2 (t / thing :arg0-of (p2 / play-12 :arg2 (s / state :quant (n3 / number) :arg0-of (h / have-org-role-91 :arg2 (m / member)))) :arg1-of (i / increase-01))) :time (s2 / since :op1 (c5 / counterweight :arg1 (c6 / city)))) :degree (m2 / more))
(c / cause-01 :arg1 (c2 / counterweight :arg0 (p / person :mod (r / religious-group :name (n / name :op1 "N-A")) :arg0-of (- / -lrb- :arg1 (c3 / city :name (n2 / name :op1 "Berlin")))) :arg1 (b / become-01 :arg1 (c4 / city) :arg2 (t / thing :arg0-of (p2 / play-12 :arg2 (s / state :quant (n3 / number) :arg0-of (h / have-org-role-91 :arg2 (m / member)))) :arg1-of (i / increase-01))) :time (s2 / since :op1 (c5 / counterweight :arg1 (c6 / city)))) :degree (m2 / more))
(a / and :op1 (a2 / absence :arg1 (a3 / and :op1 (e / event :location (m / market :mod (f / finance))) :op2 (n / news :topic (w / weak-02 :arg1 (e2 / economy) :location (c / country :name (n2 / name :op1 "N-A")) :time (b / before :op1 (n3 / now) :duration (c2 / couple :op1 (t / temporal-quantity :quant (N / N-A) :unit (w2 / week)))))))) :op2 (s / say-01 :arg0 (i / i) :arg1 (a4 / and :op1 (p / person :arg0-of (h / have-org-role-91 :arg1 (o / organization :name (n4 / name :op1 "UCLA" :op2 "Ziman" :op3 "Center" :op4 "for" :op5 "Real" :op6 "Estate")) :arg2 (o2 / official :mod (r / research-01) :mod (r2 / research-01)))) :op2 (p2 / person :arg0-of (h2 / have-org-role-91 :arg1 (g / government-organization :name (n5 / name :op1 "Fed")) :arg2 (o3 / official :mod (s2 / senior)) :time (f2 / former))))))
(f / face-01 :arg0 (g / government-organization :name (n / name :op1 "Fed")) :arg1 (c / condition :mod (s / some) :arg1-of (e / exist-01 :polarity - :time (b / before)) :arg0-of (h / hasten :arg1 (r / recession-02) :arg1-of (p / possible-01))) :time (c2 / case :time (c3 / current)))
(g / gain-02 :arg0 (w / wage-01) :arg1 (s / sign :arg1-of (p / picking)))
(r / remain-01 :arg1 (p / person :quant (s / some) :arg0-of (c / create-01 :arg1 (p2 / problem :topic (s2 / society)) :location (a / and :op1 (c2 / country :name (n / name :op1 "France")) :op2 (c3 / country :name (n2 / name :op1 "Germany")) :op3 (c4 / country :name (n3 / name :op1 "UK"))))) :mod (s3 / still))
(a / argue-01 :arg1 (b / become-01 :arg1 (i / it) :arg2 (i2 / indistinguishable :arg1-of (i3 / increase-01)) :source (c / commerce) :mod (c2 / commerce)))
(c / contrast-01 :arg1 (s / sign-02 :arg0 (p / party :quant 4 :mod (p2 / politics) :arg1-of (m / major-02)) :arg1 (a / agree-01 :arg0 (p3 / party) :arg1 (d / divide-02 :arg0 (p4 / party) :arg1 (c2 / country) :arg2 (p5 / province)))) :arg2 (s2 / sign-02 :arg0 (p6 / party :quant 4 :mod (p7 / politics) :arg1-of (m2 / major-02)) :arg1 (a2 / agree-01 :arg1 (d2 / divide-02 :arg1 (c3 / country) :arg2 (p8 / province)) :arg1-of (m3 / major-02)) :arg1-of (c4 / contrast-01 :arg2 (i / issue-02 :arg0 (c5 / contentious :degree (h / high)) :location (c6 / country :name (n / name :op1 "Nepal"))) :duration (m4 / multiple :op1 (t / temporal-quantity :quant (N / N-A) :unit (y / year))))))
(s / say-01 :arg0 (p / person :name (n / name :op1 "De" :op2 "Boer") :arg0-of (h / have-org-role-91 :arg1 (o / organization :name (n2 / name :op1 "Ajax")) :arg2 (a / ambassador) :time (c / current)) :arg0-of (h2 / have-org-role-91 :arg1 (o2 / organization :name (n3 / name :op1 "Ajax")))) :arg1 (s2 / show-01 :polarity - :arg0 (p2 / person) :arg1 (h3 / highlight-01 :arg1 (g / game :mod (c2 / celtic) :mod (a2 / any)))))
(p / person :quant 1 :arg2-of (s / suspect-01 :arg1 (p2 / possible-01 :arg1 (i / illness :poss (p3 / person :name (n / name :op1 "Nick")) :domain (i2 / illness :poss (p4 / person))))))
(s / seek-01 :arg0 (l / location :name (n / name :op1 "Cinema" :op2 "City")) :arg1 (a / and :op1 (b / become-01 :arg1 (y / you) :arg2 (s2 / star :mod (b2 / big :degree (m / most)) :mod (b3 / big :degree (m2 / most)))) :op2 (g / give-01 :arg0 (y2 / you) :arg1 (o / opportunity :mod (e / extraordinary)) :arg2 (o2 / opportunity :mod (e2 / extraordinary))) :op3 (g2 / give-01 :arg0 (y3 / you) :arg1 (o3 / opportunity :mod (e3 / extraordinary)) :arg2 (c / character :quant 2 :mod (a2 / animated)) :arg3 (f / film :arg1-of (f2 / fame-01) :arg1-of (f3 / fame-01))) :time (c2 / campaign-01 :time (l2 / late :degree (m3 / most)) :prep-to (a3 / and :op1 (e4 / enthusiastically) :op2 (c3 / child :mod (a4 / ambitious))))))
(a / and :op1 (s / stand-01 :arg1 (p / person :arg0-of (c / consume-01)) :arg2 (p2 / person :arg0-of (c2 / consume-01))) :op2 (b / benefit-01 :arg0 (d / dollar :arg1-of (r / rise-01)) :arg1 (p3 / person)))
(a / and :op1 (w / wake-up-02 :arg1 (g / girl) :time (l / late :degree (m / more))) :op2 (d / discover-01 :arg0 (g2 / girl) :arg1 (m2 / miss-01 :arg1 (p / phone))) :op3 (f / find-01 :arg0 (g3 / girl) :arg1 (h / hand :part-of (p2 / person :name (n / name :op1 "Hogg")))))
(a / and :op1 (w / wake-up-02 :arg1 (g / girl) :time (l / late :degree (m / more))) :op2 (d / discover-01 :arg0 (g2 / girl) :arg1 (m2 / miss-01 :arg1 (p / phone))) :op3 (f / find-01 :arg0 (g3 / girl) :arg1 (h / hand :part-of (p2 / person :name (n / name :op1 "Hogg")))))
(d / die-01 :arg1 (p / person :quant 2 :mod (o / other)) :time (t / try-01 :arg0 (p2 / person) :arg1 (c / cross-02 :arg0 (p3 / person) :arg1 (l / location :name (n / name :op1 "Aegean" :op2 "Sea")))) :time (e / early :degree (m / more)))
(f / find-01 :arg1 (m / monthong :arg1-of (f2 / fresh-04) :mod (n / next :prep-to (s / stand :mod (c / checkout)))))
(m / multi-sentence :snt1 (a / allow-01 :arg0 (n / nothing :prep-in (c / culture)) :arg1 (s / say-01 :arg0 (y / you) :arg1 (a2 / and :op1 (s2 / say-01 :arg0 (y2 / you) :arg1 (t / thing :arg1-of (s3 / say-01))) :op2 (w / want-01 :arg0 (i / i) :arg1 (f / friendship :poss (w2 / we)))))) :snt2 (c2 / contrast-01 :arg1 (w3 / want-01 :arg0 (i2 / i) :arg1 (c3 / continue-01 :arg1 (f2 / friendship :poss (w4 / we)))) :arg2 (n2 / need-01 :arg0 (i3 / i) :arg1 (g / go-01 :arg1 (y3 / you) :direction (a3 / away) :direction (a4 / away)))))
(r / replace-01 :arg1 (l / location :name (n / name :op1 "Chase" :op2 "Australia") :arg1-of (f / fail-01 :arg2 (p / provoke-01 :arg1 (s / show-04 :arg1 (p2 / person :name (n2 / name :op1 "McGuire")))))) :arg2 (l2 / location :name (n3 / name :op1 "Chase" :op2 "Australia")))
(a / and :op1 (r / right :polarity - :domain (t / this)) :op2 (m / make-02 :arg0 (i / i) :arg1 (r2 / recovered :arg0 (i2 / i) :arg1 (l / location :name (n / name :op1 "Iasi")) :purpose (r3 / recover-02 :arg0 (i3 / i) :arg1 (m2 / money :poss (i4 / i))))))
(c / contrast-01 :arg1 (l / lose-02 :arg0 (o / organization :name (n / name :op1 "CBS" :op2 "News" :op3 "Poll") :time (s / since :op1 (m / month :mod (l2 / last)))) :arg1 (p / person :name (n2 / name :op1 "Clinton"))) :arg2 (g / gain-02 :arg0 (p2 / person :name (n3 / name :op1 "Sanders")) :arg1 (t / thing :arg1-of (g2 / gain-02) :quant (s2 / some))))
(d / deserve-01 :arg0 (p / person :arg0-of (d2 / deserve-01 :arg1 (k / kudos))) :arg1 (k2 / kudos) :arg1-of (i / instead-of-91 :arg2 (c / criticize-01 :arg0 (p2 / person) :arg1 (b / behave-01 :arg0 (p3 / person)))))
(s / say-01 :arg2 (p / person :name (n / name :op1 "de" :op2 "Boer")))
(e / enjoy-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (l / location :name (n / name :op1 "Tuzla")) :arg2 (m / mayor :mod (a / act-02)))) :arg1 (p2 / position-02 :arg0 (p3 / person :arg0-of (h2 / have-org-role-91 :arg1 (l2 / location :name (n2 / name :op1 "Tuzla")) :arg2 (m2 / mayor :mod (a2 / act-02)))) :arg2 (t / temporal-quantity :quant (1 / 1/2) :unit (h3 / hour) :mod (j / just)) :arg1-of (c / cause-01 :arg0 (d / dna)) :arg1-of (c2 / cause-01 :arg0 (d2 / dna)) :arg1-of (c3 / cause-01 :arg0 (d3 / dna))))
(m / multi-sentence :snt1 (e / extraordinary :domain (b / behave-01 :arg0 (p / person :mod (t / this)))) :snt2 (a / and :op1 (c / child) :op2 (p2 / person :mod (o / old)) :domain (a2 / and :op1 (c2 / child) :op2 (p3 / person :mod (o2 / old)) :op3 (p4 / person :mod (o3 / old)) :op4 (p5 / person :mod (o4 / old)) :op5 (p6 / person :mod (o5 / old)) :op6 (p7 / person :mod (o6 / old)) :op7 (d / dignity :poss (p8 / person))) :arg1-of (c3 / cause-01 :arg0 (h / holiday :mod (r / religious) :mod (g / great)))))
(c / cause-01 :arg1 (a / acquire-01 :arg0 (o / organization :name (n / name :op1 "Banca" :op2 "Transilvania")) :arg1 (a2 / and :op1 (p / percentage-entity :value (N / N-A) :arg3-of (i / include-91 :arg2 (p2 / percentage-entity :value (N2 / N-A)))) :op2 (o2 / organization :name (n2 / name :op1 "Bancpost") :arg1-of (i2 / include-91 :arg2 (p3 / percentage-entity :value (N3 / N-A) :time (b / between :op1 (t / temporal-quantity :quant (N4 / N-A) :unit (y / year)) :op2 (t2 / temporal-quantity :quant (N5 / N-A) :unit (y2 / year)))))))))
(c / contrast-01 :arg1 (' / '' :arg0 (p / person :name (n / name :op1 "Hilary")) :arg1 (p2 / person :name (n2 / name :op1 "Benn"))) :arg2 (s / say-01 :arg0 (p3 / person :arg0-of (h / have-org-role-91 :arg1 (a / and :op1 (r / radio) :op2 (t / television)) :arg2 ('2 / ''))) :arg1 (a2 / admit-01 :polarity - :arg1 (i / idea :arg1-of (b / bad-07) :domain (a3 / appoint-01 :arg0 (p4 / person :name (n3 / name :op1 "Corbyn")) :arg1 (p5 / person :name (n4 / name :op1 "John" :op2 "McDonnell") :arg0-of (h2 / have-org-role-91 :arg1 (c2 / country :name (n5 / name :op1 "N-A")) :arg2 (c3 / chancellor))) :arg2 (p6 / person :arg0-of (h3 / have-org-role-91 :arg2 (c4 / chancellor)))))) :time (w / week :mod (t2 / this))))
(c / contrast-01 :arg1 (' / '' :arg0 (p / person :name (n / name :op1 "Hilary")) :arg1 (p2 / person :name (n2 / name :op1 "Benn"))) :arg2 (s / say-01 :arg0 (p3 / person :arg0-of (h / have-org-role-91 :arg1 (a / and :op1 (r / radio) :op2 (t / television)) :arg2 ('2 / ''))) :arg1 (a2 / admit-01 :polarity - :arg1 (i / idea :arg1-of (b / bad-07) :domain (a3 / appoint-01 :arg0 (p4 / person :name (n3 / name :op1 "Corbyn")) :arg1 (p5 / person :name (n4 / name :op1 "John" :op2 "McDonnell") :arg0-of (h2 / have-org-role-91 :arg1 (c2 / country :name (n5 / name :op1 "N-A")) :arg2 (c3 / chancellor))) :arg2 (p6 / person :arg0-of (h3 / have-org-role-91 :arg2 (c4 / chancellor)))))) :time (w / week :mod (t2 / this))))
(m / multi-sentence :snt1 (a / and :op1 (f / fix-02 :arg1 (' / '' :arg0-of (f2 / fix-02))) :op2 ('2 / '' :arg0 (p / person :mod (c / country :name (n / name :op1 "Britain"))) :arg1 (n2 / nothing :arg2-of (v / value-01)))) :snt2 ('3 / ''))
(s / share-01 :arg1 (s2 / share) :arg2 (r / rate-entity-91 :arg1 (m / monetary-quantity :quant 2.42 :unit (d / dollar)) :arg2 (s3 / share :quant (m2 / monetary-quantity :quant 2.44 :unit (d2 / dollar)) :arg1-of (s4 / share-01 :arg0 (p / person :quant 12 :arg0-of (a / analyze-01) :arg1-of (s5 / surveyed :arg0 (o / organization :name (n / name :op1 "Zacks" :op2 "Investment" :op3 "Research"))))))) :arg3 (r2 / rate-entity-91 :arg1 (m3 / monetary-quantity :quant 2.44 :unit (d3 / dollar)) :arg2 (s6 / share :mod (s7 / share))))
(m / multi-sentence :snt1 (c / contrast-01 :arg1 (a / and :op1 (h / have-part-91 :arg1 (c2 / country :name (n / name :op1 "Romania")) :arg2 (l / location :name (n2 / name :op1 "Schengen"))) :op2 (e / exist-01 :arg1 (p / person :mod (c3 / country :name (n3 / name :op1 "Romania"))))) :arg2 (e2 / exist-01 :arg1 (c4 / country) :prep-in (s / sense-02))) :snt2 (r / rule :mod (u / unique) :topic (a2 / accept-01 :arg1 (a3 / and :op1 (p2 / person :arg0-of (u2 / use-01)) :op2 (r2 / rule :mod (u3 / unique) :topic (d / deportation) :beneficiary (d2 / deportation) :beneficiary (p3 / person :arg0-of (r3 / receive-01 :polarity - :arg1 (r4 / refuge) :arg2 (c5 / country) :arg1-of (c6 / consider-01) :arg1-of (c7 / consider-01))))))))
(m / multi-sentence :snt1 (c / contrast-01 :arg1 (a / and :op1 (h / have-part-91 :arg1 (c2 / country :name (n / name :op1 "Romania")) :arg2 (l / location :name (n2 / name :op1 "Schengen"))) :op2 (e / exist-01 :arg1 (p / person :mod (c3 / country :name (n3 / name :op1 "Romania"))))) :arg2 (e2 / exist-01 :arg1 (c4 / country) :prep-in (s / sense-02))) :snt2 (r / rule :mod (u / unique) :topic (a2 / accept-01 :arg1 (a3 / and :op1 (p2 / person :arg0-of (u2 / use-01)) :op2 (r2 / rule :mod (u3 / unique) :topic (d / deportation) :beneficiary (d2 / deportation) :beneficiary (p3 / person :arg0-of (r3 / receive-01 :polarity - :arg1 (r4 / refuge) :arg2 (c5 / country) :arg1-of (c6 / consider-01) :arg1-of (c7 / consider-01))))))))
(t / try-01 :arg0 (s / some) :arg1 (l / labeling :arg0 (s2 / some) :arg1 (h / he)))
(m / multi-sentence :snt1 (s / see-01 :arg0 (i / i) :arg1 (c / case :mod (s2 / such) :topic (t / tv) :mod (o / only))) :snt2 (h / hope-01 :arg0 (i2 / i) :arg1 (t2 / think-01 :arg0 (i3 / i) :arg1 (p / possible-01 :arg1 (i4 / it) :time (e / ever :polarity -) :beneficiary (i5 / i)))))
(a / and :op2 (a2 / amr-unknown :mod (a3 / again :mod (t / then)) :domain (w / write-01 :arg1 (m / man :mod (t2 / this)))))
(a / and :op1 (m / meet-03 :arg1-of (n / nice-01)) :op2 (e / experience-01 :arg1-of (w / wonderful-03)) :domain (i / it))
(h / have-03 :arg0 (d / drop-out-04 :arg0 (c / country :name (n / name :op1 "Australia")) :time (n2 / night) :ord (o / ordinal-entity :value 2)) :arg1 (c2 / confident-01 :arg1 (c3 / country) :arg2 (p / prevail-01 :arg0 (s / seat-01 :arg1-of (h2 / hot-05)) :mod (u / ultimate)) :manner (q / quiet)))
(h / have-03 :arg0 (d / drop-out-04 :arg0 (c / country :name (n / name :op1 "Australia")) :time (n2 / night) :ord (o / ordinal-entity :value 2)) :arg1 (c2 / confident-01 :arg1 (c3 / country) :arg2 (p / prevail-01 :arg0 (s / seat-01 :arg1-of (h2 / hot-05)) :mod (u / ultimate)) :manner (q / quiet)))
(r / reject-01 :arg0 (p / person :arg0-of (l / lead-02 :arg1 (g / government-organization :name (n / name :op1 "Senate")))) :arg1 (r2 / request-01 :arg0 (p2 / person :arg0-of (h / have-rel-role-91 :arg1 (p3 / person :name (n2 / name :op1 "Corneliu" :op2 "Vadim" :op3 "Tudor")) :arg2 (w / wife))) :arg1 (p4 / place :location-of (p5 / place :location-of (h2 / have-org-role-91 :arg0 (p6 / person) :arg2 (s / senator) :time (f / former))))) :arg2 (p7 / person :arg0-of (l2 / lead-02 :arg1 (g2 / government-organization))))
(a / and :op1 (c / come-01 :arg1 (a2 / art :mod (c2 / creative :degree (m / most)) :arg1-of (s / surround-01 :arg2 (n / name :op1 (a3 / arm)))) :arg3 (i / inside :op1 (e / excel))) :op2 (b / be-located-at-91 :arg1 (t / thing :arg1-of (p / produce-01 :arg0 (s2 / slash :op1 (p2 / product :name (n2 / name :op1 (f / fantastically))) :op2 (p3 / product :name (n3 / name :op1 (e2 / euphemistic)))))) :arg2 (i2 / inside :op1 (e3 / excel))))
(c / contrast-01 :arg1 (w / want-01 :arg0 (h / heart) :arg1 (w2 / want-01 :arg0 (h2 / heart) :arg1 (t / thing))) :arg2 (w3 / want-01 :arg0 (p / person :arg0-of (h3 / have-rel-role-91 :arg1 (y / you) :arg2 (h4 / husband) :time (f / future))) :arg1 (t2 / talk-01 :arg0 (p2 / person) :arg1 (s / sense :mod (s2 / some)) :arg2 (g / groin :poss (y2 / you))) :mod (d / definite)) :mod (o / of-course))
(c / criticize-01 :arg0 (p / person :arg1-of (e / expert-01)) :arg1 (o / organization :name (n / name :op1 "Public" :op2 "Health" :op3 "England")))
(m / multi-sentence :snt1 (k / know-01 :arg0 (y / you)) :snt2 (c / chance-02 :arg0 (y2 / you) :arg1 (s / succeed-01 :arg0 (y3 / you) :arg1 (l / life)) :degree (v / virtual) :condition (h / have-03 :polarity - :arg0 (y4 / you) :arg1 (l2 / luck) :location (c2 / city :mod (b / big)))))
(a / and :op2 (b / beat-03 :arg0 (p / person :name (n / name :op1 "Stefan" :op2 "Radu")) :arg1 (p2 / person :arg0-of (h / have-org-role-91 :arg2 (d / director))) :arg2 (p3 / presence :poss (m / mayor :mod (d2 / deputy))) :arg1-of (a2 / allege-01) :time (d3 / date-entity :month 9 :day 8)))
(t / think-01 :arg0 (p / person :arg0-of (h / have-rel-role-91 :arg2 (f / father))) :arg1 (p2 / person :arg0-of (h2 / have-rel-role-91 :arg2 (f2 / father))) :time (a / already))
FAILED_TO_PARSE#Two concepts in a row.
(m / multi-sentence :snt1 (n / need-01 :arg0 (a / authority) :arg1 (f / find-01 :arg0 (a2 / authority) :arg1 (r / rate-entity-91 :arg1 (m2 / more-than :op1 (t / temporal-quantity :quant (N / N-A) :unit (m3 / month))) :arg2 (t2 / temporal-quantity :quant (N2 / N-A) :unit (m4 / month))) :purpose (f2 / find-01 :arg0 (a3 / authority) :arg1 (c / costic)))) :snt2 (a4 / and :op1 (p / person :name (n2 / name :op1 "Alina")) :op2 (p2 / person :arg1-of (i / include-91 :arg2 (p3 / person) :arg3 (e / each))) :mod (e2 / especially) :time (s / since :op1 (d / domiciled :arg1 (e3 / each :arg1-of (i2 / include-91 :arg2 (t3 / they)))) :mod (e4 / especially))))
(c / come-01 :polarity - :arg1 (o / offer-01) :arg1-of (c2 / cause-01 :arg0 (c3 / convince-01 :polarity - :arg1 (r / rest :part-of (w / world)) :arg2 (p / possible-01 :arg1 (s / solve-01 :arg0 (h / he) :arg1 (i / issue-02 :arg0 (o2 / or :op1 (w2 / way :quant 1) :op2 (a / another))))))))
(s / sell-01 :arg0 (c / company) :arg1 (s2 / stock :mod (n / new)) :arg3 (m / monetary-quantity :quant 125 :unit (d / dollar :mod (r / renminbi))) :arg0-of (m2 / mark-01 :arg1 (d2 / discount :arg1-of (2 / 2.4-percent :arg2 (t / thing :arg2-of (p / price-01 :arg1-of (c2 / close-01)))))))
(c / contrast-01 :arg1 (l / live-01 :arg0 (p / person :name (n / name :op1 "Brancusi")) :arg1 (l2 / life)) :arg2 (p2 / provide-01 :arg0 (p3 / person :quant 1 :arg0-of (p4 / provide-01 :arg1 (t / thing :arg1-of (e / envision-01 :arg0 (p5 / person) :mod (a / artistic))) :time (l3 / late :degree (m / more)))) :arg1 (p6 / person)) :concession (c2 / come-01 :arg1 (p7 / person) :arg3 (f / family :mod (w / wealth) :arg0-of (h / have-org-role-91 :arg1 (f2 / family :arg1-of (h2 / have-org-role-91 :arg0 (p8 / person) :arg2 (m2 / member))) :arg2 (m3 / member)))))
(p / possible-01 :polarity - :arg1 (d / do-02 :arg0 (i / i) :arg1 (t / that)))
(m / multi-sentence :snt1 (t / true-01 :arg1 (n / need-01 :arg0 (m2 / musicians) :arg1 (e / educate-01) :purpose (b / become-01 :arg1 (e2 / educate-01) :arg2 (o / or :op1 (s / soloists :mod (e3 / either)) :op2 (p / performers :location (o2 / orchestra)))))) :snt2 (t2 / talk-01 :arg0 (w / we) :arg1 (a / and :op1 (i / instrumentalists) :op2 (c / composers :polarity -))))
(d / do-02 :arg0 (w / we) :arg1 (i / it) :condition (w2 / want-01 :arg0 (h / he) :arg1 (f / formalize :arg0 (d2 / decide-01 :arg0 (g / government-organization :name (n / name :op1 "Congress"))) :arg1 (t / this))))
(a / and :op1 (f / full :domain (i / internet) :poss (h / he)) :op2 (r / receive-01 :arg0 (h2 / he) :arg1 (h3 / hundreds :consist-of (a2 / and :op1 (l / like-01) :op2 (s / share)))))
(c / contrast-01 :arg2 (e / expect-01 :arg0 (m / market :mod (f / finance)) :arg1 (a / and :op1 (h / hold-01 :arg0 (g / government-organization :name (n / name :op1 "Fed")) :arg1 (o / off :op1 (p / percentage-entity :value (N / N-A) :mod (o2 / only)))) :op2 (b / boost-01 :arg1 (b2 / boost-01)))))
(c / consider-01 :arg0 (g / government-organization :arg0-of (g2 / govern-01)) :arg1 (m / mean-01 :arg1 (e / establish-01 :arg1 (a / activity-06 :arg1 (c2 / concrete))) :arg2 (e2 / establish-01 :arg1 (a2 / activity-06 :arg1 (c3 / concrete) :arg0-of (l / lead-03 :arg2 (c4 / create-01 :arg1 (p / phenomenon :mod (m2 / migration :arg1-of (g3 / grow-01)))))))) :topic (p2 / plan-01 :arg1 (a3 / action)))
(c / consider-01 :arg0 (g / government-organization :arg0-of (g2 / govern-01)) :arg1 (m / mean-01 :arg1 (e / establish-01 :arg1 (a / activity-06 :arg1 (c2 / concrete))) :arg2 (e2 / establish-01 :arg1 (a2 / activity-06 :arg1 (c3 / concrete) :arg0-of (l / lead-03 :arg2 (c4 / create-01 :arg1 (p / phenomenon :mod (m2 / migration :arg1-of (g3 / grow-01)))))))) :topic (p2 / plan-01 :arg1 (a3 / action)))
(c / come-01 :arg1 (i / i) :purpose (d / dread :arg0 (i2 / i) :arg1 (i3 / it)) :time (a / approach-02 :duration (d2 / day)))
(s / say-01 :arg0 (c / committee :mod (p / press)) :arg1 (c2 / comply-01 :polarity - :arg0 (c3 / company) :arg1 (r / regulate-01 :arg0 (c4 / company) :arg1 (s2 / safe-01))) :arg1-of (s3 / say-01 :arg0 (a / agency :mod (p2 / press) :mod (s4 / saudi)) :arg1-of (s5 / say-01 :arg0 (a2 / agency :mod (p3 / press) :mod (s6 / saudi)) :arg1-of (s7 / say-01 :arg0 (a3 / agency :mod (p4 / press) :mod (s8 / saudi))))))
(a / aim-01 :arg0 (o / organization :name (n / name :op1 "Football" :op2 "Academy") :name (n2 / name :op1 (p / paul) :op2 (p2 / papp)) :mod (t / this)) :arg1 (d / do-02 :arg0 (o2 / organization) :arg1 (t2 / this)))
(b / bracing :arg1 (p / person :arg0-of (p2 / participate-01 :arg1 (m / market))) :arg2 (h / hike :mod (g / government-organization :name (n / name :op1 "Fed"))) :time (y / year :mod (a / all)) :arg1-of (c / cause-01 :arg0 (t / turn-02 :arg1 (e / eye :quant (a2 / all)) :arg2 (e2 / eye :part-of (o / organization :name (n2 / name :op1 "Federal" :op2 "Open" :op3 "Market" :op4 "Committee"))) :arg1-of (e3 / end-01 :time (w / week :mod (t2 / this))))))
(d / discuss-01 :arg0 (i / i) :arg1 (a / and :op1 (w / will-02 :arg0 (w2 / we) :arg1 (o / organize-01 :arg0 (w3 / we) :arg1 (c / compete-01 :mod (s / such)))) :op2 (s2 / say-01 :arg0 (t / they) :arg1 (a2 / and :op1 (p / possible-01 :arg1 (o2 / organize-01 :arg0 (w4 / we) :arg1 (c2 / compete-01 :mod (s3 / such)))) :op2 (s4 / say-01 :arg0 (t2 / they) :arg1 (r / recommend-01 :arg1 (a3 / and :op1 (o3 / organize-01 :arg0 (w5 / we) :arg1 (c3 / compete-01 :mod (s5 / such))) :op2 (r2 / recommend-01 :arg1 (i2 / invite-01 :arg0 (w6 / we) :arg1 (t3 / they) :arg2 (m / match-03 :ord (o4 / ordinal-entity :value 1) :location (l / location :name (n / name :op1 "Bucharest") :mod (n2 / new)))) :arg0-of (c4 / cause-01 :arg1 (p2 / possible-01 :arg1 (d2 / discuss-01 :arg0 (w7 / we) :arg1 (t4 / term :arg1-of (b / bright-02))))))))))) :arg2 (t5 / they)))
(n / near :arg1 (p / product :mod (d / domestic) :arg1-of (g / gross-03) :mod (d2 / domestic)) :arg1-of (c / cause-01 :arg0 (h / hike :arg1 (r / rate :mod (r2 / rate :mod (g2 / government-organization :name (n2 / name :op1 "Fed")))) :time (e / ever))))
(a / and :op2 (c / commentators :domain (c2 / country :name (n / name :op1 "N-A")) :mod (a2 / also) :arg1-of (w / want-01 :polarity - :arg0 (h / he) :time (n2 / now))))
(a / and :op1 (p / prefer-01 :arg0 (h / he) :arg1 (i / idea :topic (a2 / allow-01 :arg1 (t / take-01 :arg0 (p2 / person :mod (o / other) :arg0-of (h2 / have-org-role-91 :arg2 (c / colleagues))) :arg1 (f / floor)))) :mod (a3 / also)) :op2 (s / say-01 :arg0 (h3 / he) :arg1 (a4 / approach-02 :arg0 (h4 / he) :arg1 (p3 / person :name (n / name :op1 "John" :op2 "Bercow") :arg0-of (h5 / have-org-role-91 :arg1 (c2 / country :name (n2 / name :op1 "N-A")) :arg3 (s2 / speak-01))) :purpose (d / discuss-01 :arg0 (p4 / person) :arg1 (i2 / issue-02)))))
(s / say-01 :arg0 (r / report-01 :arg0 (p / police)) :arg1 (m / mean-01 :arg1 (p2 / person :quant 3 :arg0-of (s2 / study-01) :location (c / city :name (n / name :op1 "New" :op2 "York") :location (u / upstate)) :arg0-of (s3 / study-01)) :arg2 (p3 / poisoned :arg0 (p4 / person) :arg1 (p5 / person :arg0-of (t / teach-01) :mod (' / '')) :manner (p6 / put-03 :arg0 (p7 / person) :arg1 (p8 / product :mod (a / antibacterial)) :arg2 (a2 / around :op1 (r2 / river))))) :arg2 (p9 / person :quant 3 :arg0-of (s4 / study-01) :location (c2 / city :name (n2 / name :op1 "New" :op2 "York") :location (c3 / country :name (n3 / name :op1 "N-A")))))
(f / funny :domain (c / come-01 :arg1 (t / this) :time (t2 / time :mod (t3 / this)) :time (t4 / time :mod (t5 / this))))
(p / possible-01 :polarity - :arg1 (b / believe-01 :arg0 (i / i) :arg1 (s / something :arg1-of (r / resemble-01 :arg2 (t / this)))))
(c / contrast-01 :arg1 (r / raise-01 :arg0 (g / government-organization :name (n / name :op1 "Federal" :op2 "Reserve")) :arg1 (r2 / rate) :frequency (o / often)) :arg2 (d / determinant :polarity - :arg1 (t / thing :manner-of (r3 / respond-01 :arg0 (a / and :op1 (e / economy) :op2 (a2 / asset :mod (f / finance)))))))
(a / and :op1 (t / take-01 :arg0 (p / person :name (n / name :op1 "Brancusi")) :arg1 (w / workshop)) :op2 (r / ride-01 :arg0 (p2 / person) :arg1 (w2 / workshop)))
(a / and :op2 (m / mean-01 :arg0 (p / person :name (n / name :op1 "Stelian" :op2 "Tanase")) :arg2 (a2 / and :op1 (i / indexation :arg1 (t / thing :arg1-of (t2 / tax-01 :arg3 (t3 / thing :arg1-of (t4 / tax-01 :arg3 (s / service :mod (t5 / television) :mod (t6 / television))))))) :op2 (t7 / thing :arg2-of (m2 / mean-01 :arg1 (t8 / thing :arg1-of (p2 / provide-01 :arg0 (t9 / thing :arg1-of (p3 / provide-01 :arg0 (t10 / thing :arg1-of (p4 / provide-01 :arg0 (t11 / thing :arg1-of (t12 / tax-01 :arg3 (t13 / thing :arg1-of (t14 / tax-01 :arg3 (t15 / thing :arg1-of (t16 / tax-01 :arg3 (t17 / tax))))))))))))))) :op3 (r / regulate-01 :arg1 (a3 / and :op1 (i2 / implement-01 :arg1 (t18 / thing :arg1-of (t19 / tax-01 :arg3 (t20 / tax)))) :op2 (i3 / implement-01 :arg1 (i4 / implement-01 :arg1 (a4 / and))))) :op3 (i5 / implement-01 :arg1 (i6 / implement-01) :manner (p5 / penalize-01)))) :prep-in (l / letter :poss (h / he)))
(a / and :op2 (m / mean-01 :arg0 (p / person :name (n / name :op1 "Stelian" :op2 "Tanase")) :arg2 (a2 / and :op1 (i / indexation :arg1 (t / thing :arg1-of (t2 / tax-01 :arg3 (t3 / thing :arg1-of (t4 / tax-01 :arg3 (s / service :mod (t5 / television) :mod (t6 / television))))))) :op2 (t7 / thing :arg2-of (m2 / mean-01 :arg1 (t8 / thing :arg1-of (p2 / provide-01 :arg0 (t9 / thing :arg1-of (p3 / provide-01 :arg0 (t10 / thing :arg1-of (p4 / provide-01 :arg0 (t11 / thing :arg1-of (t12 / tax-01 :arg3 (t13 / thing :arg1-of (t14 / tax-01 :arg3 (t15 / thing :arg1-of (t16 / tax-01 :arg3 (t17 / tax))))))))))))))) :op3 (r / regulate-01 :arg1 (a3 / and :op1 (i2 / implement-01 :arg1 (t18 / thing :arg1-of (t19 / tax-01 :arg3 (t20 / tax)))) :op2 (i3 / implement-01 :arg1 (i4 / implement-01 :arg1 (a4 / and))))) :op3 (i5 / implement-01 :arg1 (i6 / implement-01) :manner (p5 / penalize-01)))) :prep-in (l / letter :poss (h / he)))
(m / market :mod (c / continent :name (n / name :op1 "N-A")) :arg1-of (s / single-02) :domain (t / this))
(a / and :op1 (d / detail :topic (c / company :arg1-of (r / register-02)) :time (u / until :op1 (m / moment :mod (t / this)))) :op2 (p / possible-01 :arg1 (f / find-01 :arg1 (f2 / fair :mod (c2 / career)))))
(p / prepare-01 :arg0 (o / organization :name (n / name :op1 "Impex" :op2 "Romcatel" :op3 "SA")) :arg1 (t / thing :arg1-of (d / draft-01 :time (i / initial))))
(a / and :op1 (s / story :topic (p / person :arg0-of (r / report-01))) :op2 (t / thing :arg1-of (s2 / state-01 :arg0 (a2 / and :op1 (p2 / person :arg0-of (r2 / report-01)) :op2 (t2 / thing :arg1-of (s3 / state-01 :arg0 (a3 / and :op1 (p3 / person :arg0-of (r3 / report-01)) :op2 (t3 / thing :arg1-of (s4 / state-01 :arg0 (a4 / and :op1 (p4 / person :arg1-of (i / involve-01)) :op2 (w / work-of-art :name (n / name :op1 "N-A") :poss (t4 / thing))))))))))))
(a / announce-01 :arg0 (p / person :arg0-of (b / belong-01 :arg1 (f / family :arg1-of (h / have-org-role-91 :arg0 (p2 / person) :arg2 (m / member)))) :arg0-of (b2 / belong-01 :arg1 (f2 / family :arg1-of (h2 / have-org-role-91 :arg0 (p3 / person) :arg2 (m2 / member)))) :arg0-of (b3 / belong-01 :arg1 (f3 / family :arg1-of (h3 / have-org-role-91 :arg0 (p4 / person) :arg2 (m3 / member)))) :arg0-of (b4 / belong-01 :arg1 (f4 / family :arg1-of (h4 / have-org-role-91 :arg0 (p5 / person) :arg2 (m4 / member)))) :arg0-of (b5 / belong-01 :arg1 (f5 / family :arg1-of (h5 / have-org-role-91 :arg0 (p6 / person) :arg2 (m5 / member)))) :arg0-of (b6 / belong-01 :arg1 (f6 / family :arg1-of (h6 / have-org-role-91 :arg0 (p7 / person) :arg2 (m6 / member)))) :arg0-of (h7 / have-org-role-91 :arg1 (f7 / family :arg1-of (h8 / have-org-role-91 :arg0 (p8 / person) :arg2 (m7 / member))) :arg2 (m8 / member))) :arg1 (' / '' :arg1 (c / collapse-01 :arg1 (c2 / crane :arg1-of (l / lead-03 :arg2 (d / die-01 :arg1 (p9 / person :quant 107)))))))
(p / possible-01 :polarity - :arg1 (t / treat-01 :arg1 (y / you) :arg2 (c / country :mod (b / big) :mod (o / other))) :condition (i / involve-01 :polarity - :arg1 (y2 / you)))
(c / contrast-01 :arg1 (d / doctor :polarity - :domain (i / i)) :arg2 (a / and :op1 (h / have-03 :arg0 (y / you) :arg1 (t / temporal-quantity :quant (N / N-A) :unit (m / month) :mod (d2 / double))) :op2 (p / play-11 :polarity - :arg0 (h2 / he) :arg2 (p2 / phase :mod (g / group)))))
(m / multi-sentence :snt1 (c / cause-01 :arg1 (p / possible-01 :arg1 (p2 / plan-01 :arg0 (p3 / person :quant (s / some) :arg0-of (h / have-org-role-91 :arg2 (m2 / minister)) :mod (s2 / such)) :arg1 (m3 / make-01 :arg0 (p4 / person) :arg1 (r / remark-01 :arg0 (p5 / person :arg0-of (h2 / have-org-role-91 :arg2 (m4 / minister)))) :mod (e / even))))) :snt2 (s3 / suggest-01 :arg0 (p6 / person :arg0-of (h3 / have-rel-role-91 :arg1 (i / i) :arg2 (p7 / pal))) :time (c2 / campaign-01 :arg0 (c3 / country :name (n / name :op1 "UK")) :arg1 (h4 / hasten :arg0 (p8 / person) :arg1 (p9 / process-02 :arg1 (b / brexit))))))
(a / and :op1 (s / show-01 :arg0 (t / ten :poss (p / poll-01 :quant 11 :mod (n / nation) :mod (l / last))) :arg1 (l2 / lead-01 :arg0 (p2 / person :name (n2 / name :op1 "Donald" :op2 "Trump")) :arg1 (d / digit :mod (d2 / double)))) :op2 (s2 / start-01 :arg0 (s3 / some) :arg1 (a2 / ask-01 :arg0 (s4 / some) :arg1 (m / mean-01 :arg1 (i / it) :arg2 (c / chance-01 :arg1 (n3 / nominate-01) :mod (r / real))))))
(r / reason :mode (i / interrogative))
(i / it :mod (a / all) :topic (i2 / i))
(s / say-01 :arg0 (t / they) :arg1 (s2 / seals :arg0 (t2 / they) :arg1 (b / border-01 :arg1 (p / person :arg0-of (w / want-01 :arg1 (p2 / pass-01 :arg0 (p3 / person))))) :arg2 (p4 / person :arg0-of (w2 / wish-01 :arg1 (s3 / seek-01 :arg0 (p5 / person) :arg1 (j / jihad))))) :time (y / yesterday) :mod (j2 / just))
(a / and :op1 (c / close-01 :arg0 (t / they) :arg1 (r / rate-entity-91 :arg1 (p / percentage-entity :value (N / N-A)) :arg2 (t2 / temporal-quantity :quant (N2 / N-A) :unit (y / year)))) :op2 (r2 / record :mod (r3 / record) :time (d / date-entity :month 6 :day 11) :location (b / below)))
(c / contrast-01 :arg1 (p / possible-01 :arg1 (e / expect-01 :arg1 (m / monitor-01 :arg0 (p2 / person :arg0-of (h / have-org-role-91 :arg1 (g / government-organization :name (n / name :op1 "Fed")) :arg2 (o / official))) :arg1 (d / develop-01 :location (e2 / elsewhere)) :mod (o2 / only :polarity -)))) :arg2 (p3 / possible-01 :arg1 (e3 / expect-01 :arg1 (m2 / monitor-01 :arg0 (p4 / person :arg0-of (h2 / have-org-role-91 :arg1 (g2 / government-organization) :arg2 (o3 / official))) :arg1 (d2 / develop-01 :location (e4 / elsewhere)) :mod (a / also)) :arg1-of (c2 / contrast-01 :arg2 (c3 / consult-01 :arg0 (p5 / person) :arg1 (a2 / and :op1 (b / block :mod (c4 / central) :mod (c5 / central)) :op2 (p6 / person :arg1-of (e5 / expert-01))) :purpose (g3 / get-01 :arg0 (p7 / person) :arg1 (r / read-01 :arg1 (e6 / economy :mod (g4 / globe)) :manner (g5 / good :degree (m3 / more)))) :mod (a3 / also))))))
(c / contrast-01 :arg1 (p / possible-01 :arg1 (e / expect-01 :arg1 (m / monitor-01 :arg0 (p2 / person :arg0-of (h / have-org-role-91 :arg1 (g / government-organization :name (n / name :op1 "Fed")) :arg2 (o / official))) :arg1 (d / develop-01 :location (e2 / elsewhere)) :mod (o2 / only :polarity -)))) :arg2 (p3 / possible-01 :arg1 (e3 / expect-01 :arg1 (m2 / monitor-01 :arg0 (p4 / person :arg0-of (h2 / have-org-role-91 :arg1 (g2 / government-organization) :arg2 (o3 / official))) :arg1 (d2 / develop-01 :location (e4 / elsewhere)) :mod (a / also)) :arg1-of (c2 / contrast-01 :arg2 (c3 / consult-01 :arg0 (p5 / person) :arg1 (a2 / and :op1 (b / block :mod (c4 / central) :mod (c5 / central)) :op2 (p6 / person :arg1-of (e5 / expert-01))) :purpose (g3 / get-01 :arg0 (p7 / person) :arg1 (r / read-01 :arg1 (e6 / economy :mod (g4 / globe)) :manner (g5 / good :degree (m3 / more)))) :mod (a3 / also))))))
(a / and :op1 (s / start-01 :arg0 (p / person :name (n / name :op1 "Lucian")) :arg1 (g / game :mod (e / every))) :op2 (d / do-02 :arg0 (p2 / person) :arg1 (g2 / game) :mod (a2 / as-well)))
(c / contrast-01 :arg1 (s / see-01 :arg0 (p / person :arg0-of (v / vote-01) :mod (d / democracy) :arg1-of (i / include-91 :arg2 (p2 / person :arg0-of (v2 / vote-01) :mod (d2 / democracy)) :arg3 (p3 / percentage-entity :value (N / N-A)))) :arg1 (p4 / person :name (n / name :op1 "Clinton")) :arg2 (c2 / chance-02 :arg1 (w / win-01 :arg0 (p5 / person) :arg2 (e / elect-01 :arg1-of (g / general-02))))) :arg2 (g2 / go-01 :arg1 (f / figure) :arg3 (p6 / percentage-entity :value (N2 / N-A)) :time (m / month :mod (l / last))))
(p / possible-01 :mode (i / interrogative) :arg1 (t / trouble-01 :arg1 (s / sun) :degree (e / equal) :compared-to (t2 / trouble-01 :arg0 (p2 / person :arg0-of (h / have-rel-role-91 :arg1 (h2 / he) :arg2 (f / father))) :arg1-of (c / cause-01 :arg0 (e2 / event :beneficiary (h3 / he))))))
(p / propose-01 :arg0 (b / branch :mod (d / democracy :mod (s / social)) :quant (m / most)) :arg1 (a / and :op1 (d2 / date :mod (e / extraordinary)) :op2 (d3 / decide-01 :arg0 (o / organization :name (n / name :op1 "Executive" :op2 "Committee") :part-of (p2 / party)) :arg1 (d4 / date :mod (e2 / exact)))) :time (d5 / date-entity :month 10 :day 11))
(f / fair :domain (g / give-01 :polarity - :arg1 (p / pass-03 :arg1 (p2 / pass-03 :arg1 (p3 / pass-03 :arg1 (p4 / pass-03 :arg1 (a / and :op1 (p5 / person :name (n / name :op1 "Cameron")) :op2 (p6 / person :arg0-of (a2 / allow-01 :arg1 (t / take-01 :arg0 (p7 / political-party) :arg1 (s / support-01 :arg0 (p8 / political-party) :arg1 (p9 / political-party) :time (r / referendum))))))))))) :arg1-of (s2 / say-01 :arg0 (p10 / person :name (n2 / name :op1 "McDonnell"))))
(c / come-01 :arg1 (c2 / courtroom) :arg3 (e / end-01 :arg1 (p / p?curari)))
(c / come-01 :arg1 (c2 / courtroom) :arg3 (e / end-01 :arg1 (p / p?curari)))
(a / appear-01 :arg1 (d / dissonances :mod (l / les)) :location (s / scene :mod (m / music)) :location (s2 / scene :mod (m2 / music) :mod (o / only) :arg1-of (e / ensemble :polarity -)) :time (t / time :mod (t2 / that)))
(b / be-temporally-at-91 :arg2 (s / start-01 :arg0 (t / they) :arg1 (t2 / think-01 :arg0 (t3 / they) :arg1 (r / recommend-01 :polarity - :arg1 (t4 / trainer :domain (i / i))))))
(c / complain-01 :arg0 (p / person :name (n / name :op1 "Deng")) :arg1 (h / hurt-01 :arg0 (h2 / head :part-of (p2 / person)) :arg1 (c2 / conscious :polarity -) :time (t / then)) :time (e / eventual))
(n / number :quant 8 :mod (p / poll-01) :arg0-of (s / show-01 :arg1 (p2 / person :name (n2 / name :op1 "Donald" :op2 "Trump") :domain (s2 / show-01 :arg1 (p3 / person :name (n3 / name :op1 "Donald" :op2 "Trump") :mod (r / real))))))
(c / consensus :polarity - :topic (t / thing :arg1-of (d / do-02 :arg0 (g / government-organization :name (n / name :op1 "Fed"))) :arg0-of (c2 / cause-01 :arg1 (j / jitters :arg1 (m / market :mod (f / finance))))))
(a / and :op1 (s / say-01 :arg0 (p / person :arg0-of (m / manage-02 :arg1 (m2 / make-01 :arg0 (p2 / person) :arg1 (m3 / meet-03 :mod (t / this)) :arg1-of (p3 / possible-01)))) :arg1 (e / event :ord (o / ordinal-entity :value 1) :mod (k / kind :poss (i / it)))) :op2 (d / do-02 :arg0 (p4 / person) :arg1 (i2 / it) :condition (c / chance-02 :arg0 (p5 / person) :arg1 (m4 / make-01 :arg0 (p6 / person) :arg1 (i3 / it)))))
(( / ( :( (n / name) :op1 "Andrew" :op2 "Bingham")
(f / found-01 :arg0 (h / he) :arg1 (a / and :op1 (p / person :arg0-of (h2 / have-rel-role-91 :arg1 (h3 / he) :arg2 (s / srl :mod (s2 / security)))) :op2 (p2 / person :arg0-of (h4 / have-rel-role-91 :arg1 (h5 / he) :arg2 (m / mother))) :op3 (p3 / person :arg0-of (h6 / have-rel-role-91 :arg1 (h7 / he) :arg2 (m2 / mother))) :op4 (p4 / person :arg0-of (h8 / have-rel-role-91 :arg1 (h9 / he) :arg2 (m3 / mother))) :op5 (p5 / person :arg0-of (h10 / have-rel-role-91 :arg1 (h11 / he) :arg2 (m4 / mother)))) :time (a2 / after :op1 (e / expel-01 :arg0 (h12 / he) :arg1 (p6 / person :arg0-of (h13 / have-rel-role-91 :arg1 (p7 / person :name (n / name :op1 "Vasile" :op2 "Blaga")) :arg2 (d / daughter))))))
(a / and :op1 (o / obligate-01 :arg2 (h / hold-02 :arg1 (a2 / account-01 :arg1 (a3 / and :op1 (p / person :arg0-of (h2 / have-org-role-91 :arg1 (t / they) :arg2 (m / member))) :op2 (p2 / person :arg0-of (h3 / have-org-role-91 :arg1 (t2 / they) :arg2 (m2 / member))))))) :op2 (i / important :domain (s / step :mod (t3 / this))) :li 1)
(a / and :op1 (o / obligate-01 :arg2 (h / hold-02 :arg1 (a2 / account-01 :arg1 (a3 / and :op1 (p / person :arg0-of (h2 / have-org-role-91 :arg1 (t / they) :arg2 (m / member))) :op2 (p2 / person :arg0-of (h3 / have-org-role-91 :arg1 (t2 / they) :arg2 (m2 / member))))))) :op2 (i / important :domain (s / step :mod (t3 / this))) :li 1)
(s / see-01 :arg0 (w / we) :arg1 (f / fortress :location (c / continent :name (n / name :op1 "Europe"))) :time (u / until :op1 (c2 / create-01)))
(m / multi-sentence :snt1 (l / lord) :snt2 (p / produce-01 :arg0 (p2 / person :name (n / name :op1 "Hall") :arg0-of (h / have-org-role-91 :arg3 (j / judge-01))) :arg1 (a / and :op1 (p3 / person :arg0-of (h2 / have-org-role-91 :arg3 (j2 / judge-01))) :op2 (p4 / person :name (n2 / name :op1 "Boy" :op2 "George") :prep-as (p5 / person :arg0-of (h3 / have-org-role-91 :arg3 (j3 / judge-01))))) :manner (c / company :name (n3 / name :op1 "BBC") :mod (p6 / particular))))
(a / and :op1 (s / suspect-01 :arg0 (f / family :arg1-of (h / have-org-role-91 :arg0 (h2 / he) :arg2 (m / member))) :arg1 (p / person :mod (f2 / fraudulent) :arg0-of (h3 / have-rel-role-91 :arg1 (p2 / person) :arg2 (c / child))) :arg2 (p3 / person :mod (f3 / fraudulent) :arg0-of (h4 / have-rel-role-91 :arg1 (p4 / person) :arg2 (w / wife)))) :op2 (p5 / person :arg0-of (h5 / have-rel-role-91 :arg1 (p6 / person) :arg2 (w2 / wife))) :op3 (p7 / person :arg0-of (h6 / have-rel-role-91 :arg1 (p8 / person) :arg2 (w3 / wife))) :op4 (p9 / person :arg0-of (h7 / have-rel-role-91 :arg1 (p10 / person) :arg2 (w4 / wife))) :op5 (p11 / person :arg0-of (h8 / have-rel-role-91 :arg1 (p12 / person) :arg2 (w5 / wife))) :op5 (p13 / person :arg0-of (h9 / have-rel-role-91 :arg1 (p14 / person) :arg2 (w6 / wife))) :op6 (p15 / person :arg0-of (h10 / have-rel-role-91 :arg1 (p16 / person) :arg2 (w7 / wife))) :op7 (p17 / person :arg0-of (h11 / have-rel-role-91 :arg1 (p18 / person) :arg2 (w8 / wife))))
(m / multi-sentence :snt1 (s / say-01 :arg0 (h / he :arg0-of (r / request-01 :arg1 (f / family :arg1-of (h2 / have-org-role-91 :arg0 (p / person :name (n / name :op1 "Corneliu" :op2 "Vadim" :op3 "Tudor")) :arg2 (m2 / member))))) :arg1 (r2 / remain-01 :arg1 (c / church) :arg3 (w / wednesday :arg1 (c2 / church)))) :snt2 (a / and :op1 (c3 / close-01 :arg1 (i / it) :location (a2 / a.m. :quant 01.00) :time (n2 / night :mod (l / last))) :op2 (c4 / close-01 :arg1 (c5 / church) :location (a3 / a.m. :quant 07.00)) :time (n3 / night :mod (l2 / last))))
(a / and :op1 (a2 / and :op1 (s / small :degree (m / more) :domain (o / organization :name (n / name :op1 "Hewlett" :op2 "Packard" :op3 "Enterprise"))) :op2 (f / focus-01 :arg0 (o2 / organization) :degree (m2 / more) :compared-to (h / hp :arg1 (o3 / organization) :time (t / today)))) :op2 (a3 / and :op1 (h2 / have-03 :arg0 (w / we) :arg1 (b / business :arg1-of (b2 / broad-02) :consist-of (b3 / business) :arg0-of (h3 / help-01 :arg1 (r / reserve-01 :arg1 (e / enterprise) :arg2 (s2 / style :mod (b4 / business) :mod (b5 / business)))))) :op2 (s3 / say-01 :arg0 (p / person) :arg1 (p2 / person :name (n2 / name :op1 "Whitman")))))
(a / and :op1 (a2 / and :op1 (s / small :degree (m / more) :domain (o / organization :name (n / name :op1 "Hewlett" :op2 "Packard" :op3 "Enterprise"))) :op2 (f / focus-01 :arg0 (o2 / organization) :degree (m2 / more) :compared-to (h / hp :arg1 (o3 / organization) :time (t / today)))) :op2 (a3 / and :op1 (h2 / have-03 :arg0 (w / we) :arg1 (b / business :arg1-of (b2 / broad-02) :consist-of (b3 / business) :arg0-of (h3 / help-01 :arg1 (r / reserve-01 :arg1 (e / enterprise) :arg2 (s2 / style :mod (b4 / business) :mod (b5 / business)))))) :op2 (s3 / say-01 :arg0 (p / person) :arg1 (p2 / person :name (n2 / name :op1 "Whitman")))))
(m / multi-sentence :snt1 (b / bear-02 :arg1 (p / person :name (n / name :op1 "Corneliu" :op2 "Vadim" :op3 "Tudor")) :time (d / date-entity :year 1949 :month 11 :day 28) :location (p2 / peninsula :name (n2 / name :op1 "N-A"))) :snt2 (a / and :op1 (p3 / politician) :op2 (p4 / politician) :op3 (j / journalist) :domain (h / he)))
(t / tell-01 :arg0 (p / person :name (n / name :op1 "Ortoria" :op2 "Scott") :arg0-of (h / have-rel-role-91 :arg1 (p2 / person :name (n2 / name :op1 "Nhaijah")) :arg2 (m / mother))) :arg1 (p3 / person :arg0-of (h2 / have-rel-role-91 :arg1 (p4 / person) :arg2 (m2 / mother))) :arg2 (p5 / publication :name (n3 / name :op1 "CNN")) :degree (v / very))
(c / cause-01 :arg0 (a / and :op1 (b / become-01 :arg1 (p / person :quant (m / many) :arg0-of (l / lead-02 :arg1 (p2 / political-party :name (n / name :op1 "Labour" :op2 "Party"))) :mod (n2 / new)) :arg2 (p3 / person :arg0-of (l2 / lead-02 :arg1 (p4 / political-party) :mod (n3 / new)))) :op2 (p5 / possible-01 :arg1 (a2 / affect-01 :arg0 (c2 / choose-01 :arg0 (p6 / politician)) :arg1 (w / we))) :arg1 (p7 / position-01 :polarity - :arg1 (w2 / we) :arg2 (t / take-01 :arg0 (w3 / we) :arg1 (d / decide-01)))) :time (t2 / today :mod (e / even) :mod (e2 / even)))
(a / and :op1 (r / rise-01 :arg1 (o / organization :name (n / name :op1 "Islamic" :op2 "State"))) :op2 (k / know-01 :polarity - :arg0 (w / we) :arg1 (w2 / want-01 :arg0 (w3 / we) :arg1 (f / fall-01 :arg1 (r2 / regime :mod (p / person :name (n2 / name :op1 "Assad"))))) :time (n3 / no-longer)))
(v / value-01 :arg1 (m / monetary-quantity :arg1-of (i / include-91 :arg2 (v2 / value :mod (m2 / market) :poss (c / company)) :arg3 (p / percentage-entity :value (N / N-A)))) :arg2 (m3 / monetary-quantity :arg2-of (p2 / price-01 :arg1 (c2 / commodity :mod (t / tumble)))) :time (y / year :mod (t2 / this)) :arg1-of (c3 / cause-01 :arg0 (a / and :op1 (d / demand-01 :arg0 (c4 / country :name (n / name :op1 "China")) :arg1 (t3 / thing :arg2-of (p3 / price-01 :arg1 (c5 / commodity :mod (e / economy)))) :location (a2 / and :op1 (d2 / demand-01) :op2 (h / havoc :location (a3 / across :op1 (m4 / market))))))))
(a / and :op1 (p / perform-02 :arg0 (e / economy :mod (c / country :name (n / name :op1 "US"))) :mod (w / well :degree (r / relative))) :op2 (a2 / add-02 :arg0 (r2 / recovery) :arg1 (m / monetary-quantity :quant (N / N-A) :unit (d / dollar)) :arg2 (b / balance-01 :arg1 (i / inflation :mod (l / little)))))
(a / and :op1 (p / perform-02 :arg0 (e / economy :mod (c / country :name (n / name :op1 "US"))) :mod (w / well :degree (r / relative))) :op2 (a2 / add-02 :arg0 (r2 / recovery) :arg1 (m / monetary-quantity :quant (N / N-A) :unit (d / dollar)) :arg2 (b / balance-01 :arg1 (i / inflation :mod (l / little)))))
(c / chance-02 :mode (i / imperative) :arg0 (y / you) :arg1 (h / help-01 :arg0 (y2 / you) :arg1 (y3 / you) :arg2 (y4 / you) :concession (e / even-if :op1 (s / seething :arg1 (t / they)))) :arg2 (y5 / you))
(s / say-01 :arg0 (p / person :name (n / name :op1 "Bishnu" :op2 "Prasad" :op3 "Dhakal") :arg0-of (h / have-org-role-91 :arg1 (d / district :mod (d2 / district)) :arg2 (o / officer))) :arg1 (a / and :op1 (g / gather-03 :arg0 (p2 / person :quant (m / more-than :op1 1000) :arg0-of (p3 / protest-01)) :location (o2 / outside :op1 (s2 / station :mod (p4 / police)))) :op2 (t / throw-01 :arg0 (s3 / some :arg1-of (i / include-91 :arg2 (p5 / person))) :arg1 (s4 / stone))))
(m / multi-sentence :snt1 (c / contrast-01 :arg1 (t / toyed :arg0 (t2 / they) :arg1 (c2 / create-01 :arg0 (t3 / they) :arg1 (a / advert :arg1 (c3 / corporation) :arg1-of (r / realistic-03 :degree (m2 / more))))) :arg2 (' / '' :arg0 (t4 / they) :arg1 (h / home :prep-with (a2 / and :op1 (c4 / crap :arg1-of (b / bright-02)) :op2 (a3 / animation))))) :snt2 (a4 / arresting :arg1 (i / it) :degree (m3 / more)))
(m / multi-sentence :snt1 (c / contrast-01 :arg1 (t / toyed :arg0 (t2 / they) :arg1 (c2 / create-01 :arg0 (t3 / they) :arg1 (a / advert :arg1 (c3 / corporation) :arg1-of (r / realistic-03 :degree (m2 / more))))) :arg2 (' / '' :arg0 (t4 / they) :arg1 (h / home :prep-with (a2 / and :op1 (c4 / crap :arg1-of (b / bright-02)) :op2 (a3 / animation))))) :snt2 (a4 / arresting :arg1 (i / it) :degree (m3 / more)))
(a / and :op1 (s / strike-01 :arg0 (a2 / amusement-park :name (n / name :op1 "N-A")) :arg1 (p / person :name (n2 / name :op1 "Matt" :op2 "Lever") :arg0-of (h / have-org-role-91 :arg1 (o / organization) :arg2 (d / director)))) :op2 (t / think-01 :arg0 (p2 / person) :arg1 (g / give-01 :arg0 (p3 / person) :arg1 (c / campaign-01) :arg2 (p4 / person))) :op3 (t2 / think-01 :arg0 (p5 / person) :arg1 (c2 / campaign-01 :arg0 (p6 / person) :arg1 (a3 / avoid-01 :arg0 (p7 / person) :arg1 (c3 / campaign-01)))))
(s / say-01 :arg0 (o / organization :name (n / name :op1 "Moody")) :arg1 (c / contrast-01 :arg1 (a / and :op1 (s2 / say-01 :polarity - :arg0 (i / i) :arg1 (a2 / anything) :topic (t / that)) :op2 (s3 / sit-01 :arg1 (i2 / i) :arg2 (i3 / it) :duration (t2 / time :arg1-of (l / long-03)))) :arg2 (f / frustrate-01 :arg0 (s4 / say-01 :arg0 (o2 / organization) :arg1 (c2 / come-01 :arg1 (a3 / all) :direction (o3 / out) :time (o4 / once :op1 (o5 / once)))) :arg1 (i4 / i))))
(t / think-01 :arg0 (i / i) :arg1 (c / continue-01 :mode (i2 / interrogative) :arg0 (p / person :arg0-of (h / have-org-role-91 :arg2 (d / deputy))) :arg1 (h2 / have-org-role-91 :arg0 (p2 / person) :arg1 (o / office :mod (n / next)) :arg2 (d2 / deputy))))
(s / say-01 :arg0 (t / thing :arg1-of (s2 / state-01)) :arg1 (d / drawn :arg1 (a / and :op1 (a2 / and :op1 (s3 / sector :mod (i / identifying)) :op2 (s4 / sector :mod (i2 / identifying))) :mod (n / negative)) :op2 (d2 / drawn :arg1 (a3 / and))))
(p / possible-01 :polarity - :arg1 (c / claim-01 :arg0 (i / i) :arg1 (o / objective :mod (t / true) :domain (c2 / claim-01))))
(s / say-01 :arg0 (p / percentage-entity :value (N / N-A)) :arg1 (l / leave-11 :arg0 (t / they) :arg1 (d / door) :arg1-of (o / open-05 :arg2 (c / candidate :arg0-of (s2 / shave-01)))))
(h / have-condition-91 :arg1 (p / possible-01 :arg1 (m / meet-02 :arg0 (w / we) :arg1 (t / they) :location (t2 / there))) :arg2 (m2 / mention-01 :arg0 (t3 / they) :arg1 (m3 / mean-01 :arg1 (i / it) :arg2 (s / stage :mod (s2 / some)))))
(s / seem-01 :arg1 (c / change-01 :arg0 (i / it) :arg1 (d / direction)) :time (i2 / immediate) :arg1-of (c2 / cause-01 :arg0 (h / hike/cut :ord (o / ordinal-entity :value 1 :range (o2 / ordinal-entity :value 1)))))
(a / announce-01 :arg0 (i / i) :arg1 (h / hire-01 :arg0 (i2 / it) :arg1 (p / person :quant 50000 :arg0-of (w / work-01) :mod (s / seasonal)) :arg2 (h2 / holiday)) :time (y / year :mod (t / this)))
(h / have-concession-91 :arg1 (s / say-01 :arg0 (p / person :arg0-of (h2 / have-org-role-91 :arg1 (p2 / police) :arg2 (p3 / president :mod (v / vice)))) :arg1 (a / and :op1 (c / change-01 :arg0 (p4 / person) :arg1 (c2 / clothes :poss (p5 / person))) :op2 (c3 / contact-01 :arg0 (p6 / person) :arg1 (s2 / symptom :poss (p7 / person))) :op3 (c4 / contact-01 :arg0 (p8 / person) :arg1 (p9 / person :name (n / name :op1 "Andy" :op2 "Meng"))) :op4 (c5 / contact-01 :arg0 (p10 / person) :arg1 (p11 / person :arg0-of (h3 / have-org-role-91 :arg1 (p12 / police) :arg2 (p13 / president :mod (v2 / vice))))) :time (c6 / conference :mod (n2 / news)))) :arg2 (d / do-02 :arg0 (t / they)))
(m / multi-sentence :snt1 (a / and :op1 (s / system :name (n / name :op1 (w / well-defined) :op2 (l / low-pressure)) :mod (a2 / another) :topic (b / between :op1 (l2 / location :name (n2 / name :op1 "Cape" :op2 "Verde" :op3 "Islands")) :op2 (o / organization :name (n3 / name :op1 "Lesser" :op2 "Antilles"))) :mod (a3 / another) :topic (b2 / between :op1 (l3 / location :name (n4 / name :op1 "Cape" :op2 "Verde" :op3 "Islands")) :op2 (s2 / system :name (n5 / name :op1 (l4 / low-pressure)))) :mod (a4 / another)) :mod (a5 / also)) :snt2 (a6 / add-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg2 (f / forecaster)))))
(s / send-01 :arg0 (p / person :name (n / name :op1 "Radu" :op2 "Constantin" :op3 "Brancusi")) :arg1 (p2 / person :arg0-of (h / have-rel-role-91 :arg1 (p3 / person) :arg2 (s2 / son))) :arg2 (a / and :op1 (g / gather :arg0 (p4 / person) :arg1 (p5 / person)) :op2 (b / bring-01 :arg0 (p6 / person) :arg1 (p7 / person) :arg2 (p8 / person))))
(e / exchange-01 :arg0 (h / he) :arg1 (w / word :quant (f / few)) :arg2 (p / person :location (a / around :op1 (h2 / he))) :degree (b / bare))
(h / have-03 :arg0 (h2 / he) :arg1 (m / mask :mod (o / oxygen)) :time (b / be-located-at-91 :arg1 (i / it) :arg2 (r / room :arg1-of (s / suppose-01))))
(h / have-03 :arg0 (h2 / he) :arg1 (m / mask :mod (o / oxygen)) :time (b / be-located-at-91 :arg1 (i / it) :arg2 (r / room :arg1-of (s / suppose-01))))
(c / cricketer :domain (h / he) :arg1-of (s / see-01 :arg0 (w / we) :time (e / early :op1 (s2 / season :mod (t / this)))) :arg1-of (s3 / see-01 :arg0 (w2 / we) :time (e2 / early :op1 (d / date-entity :decade (N / N-A) :time-of (m / make-01 :arg0 (h2 / he) :arg1 (a / against :op1 (p / pitch :mod (e3 / email) :arg0-of (d2 / do-02 :arg1 (b / bit)))))))))
(i / include-91 :arg1 (a / and :op1 (p / person :arg0-of (h / have-03 :arg1 (s / surgery-01))) :op2 (p2 / person :arg1-of (f / fall-01 :arg3 (m / multiple :op1 31)))) :arg2 (p3 / person :arg0-of (s2 / study-01)) :time (b / by :op1 (s3 / study-01)))
(s / say-01 :arg0 (s2 / study :mod (n / new)) :arg1 (p / possible-01 :arg1 (a / and :op1 (b / benefit-01 :arg0 (s3 / surgery-01 :arg1 (p2 / person :arg0-of (l / lose-02 :arg1 (s4 / surgery-01 :arg2 (l2 / lose-02 :arg1 (w / weight)))))) :arg1 (t / temporal-quantity :quant (N / N-A) :unit (y / year) :mod (a2 / at-least))) :op2 (p3 / possible-01 :arg1 (a3 / at-least :op1 (t2 / temporal-quantity :quant (N2 / N-A) :unit (y2 / year)))))))
(a / and :op1 (c / create-01 :arg1 (a2 / animal :arg1-of (c2 / create-01 :time (e / era :mod (a3 / another)))) :time (n / now)) :op2 (a4 / adjust-01 :polarity - :arg1 (a5 / animal) :time (e2 / era :time (c3 / current))))
(r / recommend-01 :arg0 (p / person :name (n / name :op1 "Lopez")) :arg1 (u / use-01 :arg0 (a / and :op1 (p2 / person :arg0-of (h / have-rel-role-91 :arg1 (p3 / person :arg0-of (h2 / have-rel-role-91 :arg1 (p4 / person :arg0-of (h3 / have-rel-role-91 :arg1 (p5 / person) :arg2 (p6 / parent))) :arg2 (p7 / parent))) :arg2 (p8 / parent))) :op2 (p9 / person :arg0-of (t / teach-01))) :arg1 (o / or :op1 (p10 / product :mod (n2 / nonalcoholic)) :op2 (p11 / person :arg0-of (t2 / teach-01))) :arg2 (a2 / and :op1 (t3 / thing :arg1-of (p12 / produce-01 :arg0 (p13 / person))) :op2 (t4 / thing :arg1-of (w / wipes :arg0 (p14 / person))))) :arg2 (r2 / reach-01 :arg0 (r3 / reach-01 :arg0 (c / child))))
(r / recommend-01 :arg0 (p / person :name (n / name :op1 "Lopez")) :arg1 (u / use-01 :arg0 (a / and :op1 (p2 / person :arg0-of (h / have-rel-role-91 :arg1 (p3 / person :arg0-of (h2 / have-rel-role-91 :arg1 (p4 / person :arg0-of (h3 / have-rel-role-91 :arg1 (p5 / person) :arg2 (p6 / parent))) :arg2 (p7 / parent))) :arg2 (p8 / parent))) :op2 (p9 / person :arg0-of (t / teach-01))) :arg1 (o / or :op1 (p10 / product :mod (n2 / nonalcoholic)) :op2 (p11 / person :arg0-of (t2 / teach-01))) :arg2 (a2 / and :op1 (t3 / thing :arg1-of (p12 / produce-01 :arg0 (p13 / person))) :op2 (t4 / thing :arg1-of (w / wipes :arg0 (p14 / person))))) :arg2 (r2 / reach-01 :arg0 (r3 / reach-01 :arg0 (c / child))))
(t / think-01 :arg0 (p / person :name (n / name :op1 "Simon" :op2 "Jenkins")) :arg1 (s / so) :mod (c / certain))
(a / and :op1 (w / work-01 :arg0 (w2 / we) :arg1 (a2 / activity-06 :arg0 (w3 / we) :mod (v / various))) :op2 (a3 / associate-01 :arg1 (w4 / we) :arg2 (i / institution :arg0-of (d / deal-01 :arg2 (o / or :op1 (p / person :arg0-of (c / consume-01 :arg1 (d2 / drug))) :op2 (p2 / person :arg1-of (a4 / addict-01 :arg2 (d3 / drug)))) :mod (o2 / only))) :frequency (t / time :quant (m / most))))
(s / say-01 :arg0 (p / person :arg0-of (r / research-01) :arg0-of (l / lead-02 :arg1 (a / and :op1 (p2 / person :name (n / name :op1 "Chih-Cheng" :op2 "Hsu")) :op2 (c / colleagues))) :arg0-of (r2 / research-01)) :arg1 (c2 / contrast-01 :arg2 (r3 / reduce-01 :polarity - :arg0 (a2 / and :op1 (b / better :mod (g / good :degree (m / more)) :mod (t / this)) :op2 (l2 / level :arg1-of (i / improve-01))) :arg1 (r4 / rate-entity-91 :arg1 (r5 / rate :mod (m2 / mortality)) :arg2 (t2 / temporal-quantity :quant (N / N-A) :unit (y / year))))))
(m / multi-sentence :snt1 (c / come-01 :arg1 (p / person :arg0-of (h / have-org-role-91 :arg1 (b / body :poss (p2 / person :name (n / name :op1 "Corneliu" :op2 "Vadim" :op3 "Tudor"))))) :purpose (s / see-01 :arg0 (p3 / person) :arg1 (p4 / park :name (n2 / name :op1 "N-A") :prep-with (b2 / body :poss (p5 / person))))) :snt2 (s2 / see-01 :polarity - :arg0 (o / organization :name (n3 / name :op1 "Sfantul" :op2 "George" :op3 "Church")) :arg1 (p6 / person :quant (m2 / many :degree (s3 / so))) :time (s4 / since :op1 (o2 / or :op1 (c2 / church) :op2 (c3 / celebration :mod (g / great) :poss (a / and))))))
(m / multi-sentence :snt1 (c / come-01 :arg1 (p / person :arg0-of (h / have-org-role-91 :arg1 (b / body :poss (p2 / person :name (n / name :op1 "Corneliu" :op2 "Vadim" :op3 "Tudor"))))) :purpose (s / see-01 :arg0 (p3 / person) :arg1 (p4 / park :name (n2 / name :op1 "N-A") :prep-with (b2 / body :poss (p5 / person))))) :snt2 (s2 / see-01 :polarity - :arg0 (o / organization :name (n3 / name :op1 "Sfantul" :op2 "George" :op3 "Church")) :arg1 (p6 / person :quant (m2 / many :degree (s3 / so))) :time (s4 / since :op1 (o2 / or :op1 (c2 / church) :op2 (c3 / celebration :mod (g / great) :poss (a / and))))))
(h / have-rel-role-91 :arg0 (i / i) :arg1 (p / person :arg0-of (h2 / have-rel-role-91 :arg2 (f / friend))) :arg2 (f2 / friend))
(c / cause-01 :arg0 (i / issue-02 :arg0 (i2 / it) :mod (s / sensitive)) :arg1 (a / and :op1 (r / reject-01 :arg0 (c2 / country :name (n / name :op1 "Germany") :mod (e / even)) :arg1 (p / policy :poss (p2 / person :name (n2 / name :op1 "Merkel") :arg0-of (h / have-org-role-91 :arg2 (c3 / chancellor))))) :op2 (w / want-01 :polarity - :arg0 (c4 / country) :arg1 (s2 / see-01 :arg0 (c5 / country :mod (o / other)) :arg1 (p3 / person :arg0-of (s3 / specialize-01 :arg1 (t / thrusts)) :mod (o2 / organization :name (n3 / name :op1 "EU"))) :arg2 (p4 / person :arg0-of (s4 / specialize-01 :arg1 (t2 / thrusts)) :mod (o3 / organization :name (n4 / name :op1 "EU")))))))
(e / easy-05 :arg1 (a / apply-01 :arg0 (f / foreign) :arg1 (o / or :op1 (p / permit-01 :arg1 (f2 / fly-01 :mod (p2 / permanent))) :op2 (c / card :name (n / name :op1 (g / green)) :mod (g2 / green)) :op3 (c2 / card :name (n2 / name :op1 (g3 / green))) :op4 (p3 / process-02 :arg1 (a2 / apply-01)))) :degree (m / more))
(r / report)
(s / say-01 :arg0 (p / person :name (n / name :op1 "Victor" :op2 "Ponta") :arg0-of (h / have-org-role-91 :arg2 (m / minister :mod (p2 / prime)))) :arg1 (r / recommend-01 :arg1 (d / decide-01 :arg0 (p3 / person :arg0-of (l / lead-02 :arg1 (l2 / lead-02 :arg0 (p4 / person)))) :arg1 (o / or :op1 (p5 / participate-01 :arg0 (p6 / party) :arg1 (g / government-organization :arg0-of (g2 / govern-01 :time (c / current)))) :op2 (j / join-01 :arg0 (p7 / party) :arg1 (p8 / political-party))))) :arg2 (p9 / person :arg0-of (h2 / have-org-role-91 :arg2 (m2 / minister :mod (p10 / prime)))))
(r / replace-01 :polarity - :arg1 (i / i) :arg1-of (c / cause-01 :arg0 (a / and :op1 (d / difficult :domain (t / time :mod (t2 / that))) :op2 (t3 / take-01 :arg1 (s / situation :mod (f / finance)) :arg3 (a2 / account)))))
(a / and :op2 (a2 / and :op1 (c / case :mod (d / dramatic) :poss (c2 / child) :domain (c3 / child :arg1-of (d2 / drown :location (c4 / country :name (n / name :op1 "Turkey"))))) :op2 (s / strike-01 :arg0 (c5 / child) :arg1 (t / thing :arg1-of (o / opine-01 :arg0 (p / public)))) :time (t2 / then)))
(h / headquarters :arg1 (h2 / headquarters :poss (o / organization :name (n / name :op1 "County" :op2 "Council")) :mod (n2 / new) :mod (c / country :name (n3 / name :op1 "N-A"))) :time (c2 / collapse-01 :arg1 (o2 / organization)))
(h / headquarters :arg1 (h2 / headquarters :poss (o / organization :name (n / name :op1 "County" :op2 "Council")) :mod (n2 / new) :mod (c / country :name (n3 / name :op1 "N-A"))) :time (c2 / collapse-01 :arg1 (o2 / organization)))
(t / talk-01 :arg0 (w / we) :arg1 (i / invest-01 :mod (m / massive)) :arg2 (m2 / money :quant (l / lot)))
(s / sure-02 :arg0 (i / i) :arg1 (r / ready-02 :arg1 (p / person :arg0-of (p2 / play-01)) :arg2 (p3 / participate-01 :arg0 (p4 / person) :arg1 (t / tournament))))
(d / differ-02 :arg1 (r / rule :arg1-of (d2 / differ-02) :domain (r2 / rule :arg1-of (d3 / differ-02))) :degree (t / total))
(s / say-01 :arg0 (p / politician :mod (c / continent :name (n / name :op1 "N-A"))) :arg1 (s2 / say-01 :polarity - :arg0 (p2 / politician) :arg1 (d / defamations :arg1-of (c2 / control-01 :polarity -) :mod (s3 / such))))
(i / injure-01 :arg1 (p / person :mod (o / other) :arg1-of (i2 / injure-01)) :arg1-of (c / cause-01 :arg0 (a / amount :mod (t / that))))
(s / say-01 :arg0 (p / person :quant 2 :arg1-of (i / include-91 :arg2 (p2 / person :quant 10))) :arg1 (s2 / say-01 :arg0 (p3 / person) :arg1 (u / upset-01 :arg1 (p4 / person)) :condition (n / nominate-01 :arg1 (p5 / person))))
(a / and :op1 (s / state-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (b / branch :mod (s2 / state) :part-of (p2 / party)) :arg2 (s3 / secretary))) :arg1 (a2 / and :op1 (p3 / person :name (n / name :op1 "Maricel" :op2 "Popa") :arg0-of (h2 / have-org-role-91 :arg2 (s4 / senator))) :op2 (p4 / person :name (n2 / name :op1 "Florin" :op2 "Constantinescu") :arg0-of (h3 / have-org-role-91 :arg2 (s5 / senator))) :op3 (p5 / person :name (n3 / name :op1 "Sorin" :op2 "Lazar") :arg0-of (h4 / have-org-role-91 :arg2 (s6 / senator))) :op4 (p6 / person :name (n4 / name :op1 "Vasile" :op2 "Câtea") :arg0-of (h5 / have-org-role-91 :arg2 (s7 / senator))) :op5 (p7 / person :name (n5 / name :op1 "Vasile" :op2 "Câtea") :arg0-of (a3 / act-01 :arg1 (a4 / act-01 :arg0 (p8 / person) :arg1 (a5 / and :op1 (p9 / person :arg0-of (h6 / have-org-role-91 :arg1 (o / organization :name (n6 / name :op1 "County" :op2 "Council")) :arg2 (p10 / president))) :op2 (p11 / person :name (n7 / name :op1 "Vasile" :op2 "Câtea") :arg0-of (h7 / have-org-role-91 :arg1 (p12 / person :name (n8 / name :op1 "Victorel" :op2 "Lupu")) :arg2 (p13 / president)))))) :mod (m / main)))) :op2 (a6 / and :op1 (p14 / person :name (n9 / name :op1 "Sorin" :op2 "Lazar") :arg0-of (h8 / have-org-role-91 :arg2 (s8 / senator))) :op2 (p15 / person :name (n10 / name :op1 "Vasile" :op2 "Câtea") :arg0-of (h9 / have-org-role-91 :arg1 (p16 / person :name (n11 / name :op1 "Victorel" :op2 "Lupu")) :arg2 (p17 / president)))))
(c / contrast-01 :arg1 (r / rise-01 :arg1 (r2 / revenue :mod (g / ground)) :arg2 (p / percentage-entity :value (N / N-A)) :time (l / late :degree (m / most))) :arg2 (f / flat :arg1 (i / income) :arg2 (m2 / monetary-quantity :arg2-of (c2 / cost-01) :arg1-of (h / high-02 :degree (m3 / more))) :arg3 (a / and :op1 (p2 / packages :mod (l2 / large :degree (m4 / more))) :op2 (s / self-insurance)) :mod (b / basic)))
(c / claim-01 :arg0 (m / man) :arg1 (a / and :op1 (d / defective :domain (c2 / car)) :op2 (t / threaten-01 :arg0 (c3 / car) :arg2 (l / life :poss (f / family :arg1-of (h / have-org-role-91 :arg0 (h2 / he) :arg2 (m2 / member)))))))
(a / and :op1 (d / drop-05 :arg0 (p / person :name (n / name :op1 "Adam" :op2 "Lyth")) :arg1 (s / squad :mod (t / test-01) :mod (c / country :name (n2 / name :op1 "England")))) :op2 (r / replace-01 :arg0 (p2 / person :name (n3 / name :op1 "Alex" :op2 "Hales")) :arg1 (p3 / person) :arg2 (s2 / squad :mod (t2 / test-01) :mod (c2 / country))))
(t / tender :arg0 (p / political-party :name (n / name :op1 "N-A")) :duration (t2 / temporal-quantity :quant (N / N-A) :unit (y / year)))
(a / and :op2 (o / obligate-01 :arg1 (y / you) :arg2 (r / remember-01 :arg0 (y2 / you) :arg1 (d / depend-01 :arg0 (j / job :poss (t / they)) :arg1 (t2 / thing :arg2-of (r2 / result-01))))))
(c / contrast-01 :arg1 (d / define-01 :polarity - :arg0 (w / work-01 :arg0 (t / they)) :arg1 (c2 / character :mod (e / each))) :arg2 (d2 / define-01 :arg0 (p / person :arg0-of (h / have-rel-role-91 :arg1 (t2 / they) :arg2 (f / friend))) :arg1 (p2 / person :arg0-of (h2 / have-rel-role-91 :arg1 (t3 / they) :arg2 (f2 / friend)))))
(c / contrast-01 :arg2 (w / want-01 :polarity - :arg0 (t / they) :arg1 (g / go-out-17 :arg0 (t2 / they) :direction (f / forward))))
(e / equal-01 :arg1 (n / number :quant-of (p / person :arg0-of (f / flocked :arg1 (c / computer :poss (p2 / person))))) :arg2 (d / deals :arg0 (p3 / person) :arg1 (d2 / deal-01 :arg0 (p4 / person) :arg1 (w / website :quant (n2 / number) :mod (r / retailers)))) :time (y / year :mod (l / last)))
(r / rise-01 :arg1 (p / person :name (n / name :op1 "Corbyn")) :arg2 (a / ask-01 :arg0 (p2 / person) :arg1 (q / question-01 :arg0 (p3 / person) :ord (o / ordinal-entity :value 1) :arg1-of (i / include-91 :arg2 (q2 / question-01 :quant 6 :arg0 (p4 / person) :arg1 (l / likely-01 :arg1 (s / scrutinised :arg0 (a2 / and :op1 (m / media) :op2 (p5 / person :arg0-of (h / have-org-role-91 :arg1 (p6 / political-party :name (n2 / name :op1 "N-A")) :arg2 (m2 / member)))) :arg1 (p7 / perform-01 :arg0 (p8 / person)) :manner (c / close))))))))
(t / talk-01 :arg0 (p / person :name (n / name :op1 "Griffiths")))
(c / contrast-01 :arg2 (o / obligate-01 :arg1 (i / i) :arg2 (p / point :mod (n / now) :location-of (a / and :op1 (c2 / care-01 :polarity - :arg0 (i2 / i)) :op2 (s / saddens :arg0 (i3 / i) :arg1 (i4 / i))))))
(m / multi-sentence :snt1 (c / cause-01 :arg0 (o / obligate-01 :arg1 (y / you) :arg2 (t / thing :arg2-of (o2 / obligate-01 :arg1 (y2 / you))))) :snt2 (s / say-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (g / government-organization :name (n / name :op1 "Parliament")))) :arg1 (p2 / person :name (n2 / name :op1 "Severin")) :time (a / after :op1 (m2 / meet-03 :arg0 (o3 / organization :name (n3 / name :op1 "Standing" :op2 "Committees" :op3 "on" :op4 "Culture" :op5 "of" :op6 "the" :op7 "Parliament") :mod (j / joint))))))
(c / crying :arg1 (h / he))
(i / include-91 :arg1 (c / course :topic (a / art)) :arg2 (p / person :mod (a2 / all) :arg0-of (p2 / passionate :arg1 (a3 / art))) :concession (o / or :op1 (a4 / age) :op2 (e / experience)))
(i / include-91 :arg1 (c / course :topic (a / art)) :arg2 (p / person :mod (a2 / all) :arg0-of (p2 / passionate :arg1 (a3 / art))) :concession (o / or :op1 (a4 / age) :op2 (e / experience)))
(m / multi-sentence :snt1 (s / see-01 :arg0 (i / i) :arg1 (m2 / maghrebians :location (c / country :name (n / name :op1 "France") :location (c2 / country :name (n2 / name :op1 "Germany")))) :mod (a / also)) :snt2 (b / broadcast-program :name (n3 / name :op1 "N-A") :mod (a2 / also)))
(a / and :op1 (r / rested :arg1 (o / organization :name (n / name :op1 "Durham") :arg0-of (h / have-org-role-91 :arg1 (p / person :name (n2 / name :op1 "Ben" :op2 "Stokes") :arg0-of (h2 / have-org-role-91 :arg2 (t / team-mate))) :arg2 (t2 / team-mate))) :arg2 (o2 / one-dayers)) :op2 (g / give-01 :arg1 (b / break :arg1-of (r2 / resemble-01)) :arg2 (a2 / and :op1 (c / country :name (n3 / name :op1 "Australia")) :op2 (i / i))))
(a / and :op1 (c / compare-01 :arg1 (r / resolve-01 :arg1 (c2 / cold)) :arg2 (p / percentage-entity :value (N / N-A) :mod (o / only)) :arg1-of (c3 / complete-02)) :op2 (e / equal-01 :arg1 (r2 / resolve-01) :arg2 (a2 / about :op1 (p2 / percentage-entity :value (N2 / N-A) :mod (o2 / only)))) :arg1-of (c4 / compare-01))
(u / understand-01 :arg1 (h / have-03 :arg0 (t / they) :arg1 (m / much :prep-to (s / say-01 :arg0 (t2 / they) :arg1 (o / other :mod (e / each))))) :degree (q / quite))
(h / have-concession-91 :arg1 (r / remain-01 :arg1 (p / person :name (n / name :op1 "Louis" :op2 "van" :op3 "Gaal")) :arg3 (h2 / hopeful-03 :arg0 (p2 / person) :arg1 (p3 / possible-01 :arg1 (p4 / play-11 :arg0 (p5 / person :name (n2 / name :op1 "Shaw")) :mod (a / again) :time (s / season :mod (t / this)))))) :arg2 (l / leave-14 :arg0 (t2 / this) :arg1 (a2 / and :op1 (f / full-back :arg1 (t3 / tears :arg1-of (t4 / tears))) :op2 (r2 / rule-out-02 :arg0 (t5 / this) :arg1 (h3 / he) :duration (a3 / at-least :op1 (t6 / temporal-quantity :quant (N / N-A) :unit (m / month)))))))
(c / contrast-01 :arg1 (c2 / cause-01 :arg1 (f / find-02 :arg0 (w / we) :arg1 (a / and :op1 (j / join-up-02 :arg0 (w2 / we) :arg1 (t / thing :arg2-of (p / position-01 :arg1 (w3 / we) :degree (m / more)))) :op2 (j2 / join-01 :arg0 (w4 / we) :arg1 (w5 / we))))) :arg2 (r / remain-01 :arg1 (g / goal) :mod (s / still)))
(s / stuff :mod (t / that) :mod (a / all) :arg1-of (s2 / sure-02) :arg1-of (s3 / sure-02))
(s / say-01 :arg0 (p / person :name (n / name :op1 "Kathy" :op2 "Jones") :arg0-of (a / analyze-01 :arg1 (i / income)) :arg1-of (f / fix-03)) :arg1 (p2 / perform-02 :arg0 (p3 / person) :arg1 (c / climate :mod (s2 / such)) :frequency (o / often) :prep-in (c2 / climate :mod (s3 / such))) :arg1-of (c3 / cause-01 :arg0 (c4 / cautious-02 :arg0 (p4 / person :arg0-of (a2 / analyze-01 :arg1 (i2 / income)) :arg1-of (f2 / fix-03)) :arg1 (a3 / analyze-01 :arg0 (p5 / person) :arg1 (i3 / income)) :mod (s4 / still))))
(m / multi-sentence :snt1 (p / possible-01 :arg1 (c / calculator :arg0 (y / you) :arg1 (b / bmi :poss (y2 / you)) :location (h / here))) :snt2 (1 / 1d0zqdv :quant 1 :mod (u / usa.gov)))
(s / say-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (c / city :name (n / name :op1 "Sydney")) :arg2 (p2 / president :mod (v / vice)))) :arg1 (s2 / say-01 :arg0 (p3 / person :name (n2 / name :op1 "Trent" :op2 "Robinson") :arg0-of (h2 / have-org-role-91 :arg2 (r / referees))) :arg1 (a / allow-01 :arg1 (s3 / storm :purpose (' / '' :arg1 (w / wrestle :mod (w2 / wrestle)))) :time (w3 / win-01 :arg0 (u / upset-01 :arg1 (s4 / storm)) :location (f / final :location (q / qualifying)) :time (n3 / night :mod (f2 / friday))))))
(a / add-01 :arg0 (h / he) :arg1 (s / solve-01 :polarity - :arg0 (u / use-01 :arg1 (f / force-04)) :arg1 (p / problem :mod (t / this)) :time (e / ever)))
(a / and :op1 (l / location :name (n / name :op1 "Iasi") :arg1-of (e / embarrassed :arg0 (o / organization :name (n2 / name :op1 "Autonomous" :op2 "Administration" :op3 "of" :op4 "Public" :op5 "Transport")))) :op2 (l2 / leaflets :arg0 (o2 / organization :name (n3 / name :op1 "Autonomous" :op2 "Administration" :op3 "of" :op4 "Public" :op5 "Transport"))))
(a / and :op1 (a2 / attempt-01 :arg0 (p / person :name (n / name :op1 "Peter" :op2 "Moody")) :arg1 (a3 / attempt-01 :arg0 (p2 / person) :arg1 (s / spy-01 :arg0 (p3 / person) :arg1 (s2 / spy-01) :location (s3 / stables :poss (p4 / person)) :time (y / year :mod (l / last)))) :arg1-of (a4 / allege-01)) :op2 (t / threaten-01 :arg0 (p5 / person) :arg1 (q / quit-01 :arg0 (p6 / person)) :time (i / immediate)))
(p / provide-01 :arg0 (a / and :op1 (p2 / person :arg0-of (h / have-org-role-91 :arg2 (h2 / head-of-state))) :op2 (p3 / person :arg0-of (h3 / have-org-role-91 :arg2 (h4 / head-of-state)) :mod (c / close)) :op3 (p4 / person :name (n / name :op1 "Stanciu") :arg0-of (h5 / have-org-role-91 :arg2 (h6 / head-of-state)))) :arg1 (m / manage-01) :time (u / until :op1 (o / organize-01 :arg1 (e / elect-01 :arg1-of (i / internal-02)))))
(o / offer-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (o2 / organization :name (n / name :op1 "Romanian" :op2 "Literature" :op3 "Museum")))) :arg1 (c / company :name (n2 / name :op1 "N-A") :arg0-of (h2 / have-org-role-91 :arg1 (o3 / organization) :arg3 (l / lead-02 :arg0 (o4 / organization)))) :arg3 (p2 / period :op1 (t / temporal-quantity :quant (N / N-A) :unit (y / year))) :time (a / after :op1 (t2 / temporal-quantity :quant (N2 / N-A) :unit (y2 / year) :arg1-of (r / remain-01 :arg3 (c2 / close-01)))))
(s / say-01 :arg0 (p / person :arg0-of (t / tour-01)) :arg1 (o / officiated :arg1 (s2 / service :mod (s3 / short)) :location (o2 / organization :name (n / name :op1 "Sfantul" :op2 "Gheorghe" :op3 "Church")) :time (m / morning :mod (d / date-entity :time (t2 / thursday))) :time (a / after :op1 (t3 / transport-01 :arg1 (p2 / park :name (n2 / name :op1 "N-A") :prep-with (b / body :consist-of (p3 / person :arg0-of (h / have-org-role-91 :arg1 (p4 / person :name (n3 / name :op1 "Vadim" :op2 "Tudor")) :arg2 (b2 / body)))) :arg0-of (h2 / have-org-role-91 :arg1 (s4 / service :mod (m2 / military) :mod (f / funeral))))) :location (h3 / here))))
(a / and :op1 (r / rebuild :arg0 (w / we) :arg1 (f / fence)) :op2 (a2 / and :op1 (s / strengthen-01 :arg0 (w2 / we) :arg1 (s2 / security :poss (c / country :name (n / name :op1 "Hungary")))) :op2 (p / protect-01 :arg0 (w3 / we) :arg1 (s3 / security :poss (c2 / country)) :manner (m / mean :mod (a3 / any))) :op3 (s4 / say-01 :arg0 (p2 / person :name (n2 / name :op1 "Gyorgy" :op2 "Bakondi") :arg0-of (h / have-org-role-91 :arg1 (c3 / country) :arg2 (p3 / person :arg0-of (a4 / advise-01 :arg2 (s5 / security))))) :arg1 (p4 / person :name (n3 / name :op1 "Gyorgy" :op2 "Bakondi") :arg0-of (h2 / have-org-role-91 :arg1 (c4 / country) :arg2 (p5 / person :arg0-of (a5 / advise-01 :arg2 (s6 / security))))))))
(a / announce-01 :arg0 (o / organization :name (n / name :op1 "PSD")) :arg1 (a2 / and :op1 (g / government-organization :arg0-of (g2 / govern-01 :arg1 (g3 / government-organization :name (n2 / name :op1 "Congress")))) :op2 (d / decide-01 :arg0 (i / issue-02 :mod (t / this))) :time (t2 / then)))
(a / announce-01 :arg0 (o / organization :name (n / name :op1 "PSD")) :arg1 (a2 / and :op1 (g / government-organization :arg0-of (g2 / govern-01 :arg1 (g3 / government-organization :name (n2 / name :op1 "Congress")))) :op2 (d / decide-01 :arg0 (i / issue-02 :mod (t / this))) :time (t2 / then)))
(a / and :op1 (t / took :arg0 (a2 / and :op1 (o / organization :name (n / name :op1 "Steaua")) :op2 (o2 / organization :name (n2 / name :op1 "Galatasaray")) :op3 (p / person :name (n3 / name :op1 "Hagi"))) :arg1 (p2 / person :name (n4 / name :op1 "Hagi")) :time (b / before :op1 (n5 / now) :quant (o3 / over :op1 (t2 / temporal-quantity :quant (N / N-A) :unit (y / year))))) :op2 (o4 / own-01 :arg0 (h / he) :arg1 (t3 / team)))
(a / and :op1 (t / took :arg0 (a2 / and :op1 (o / organization :name (n / name :op1 "Steaua")) :op2 (o2 / organization :name (n2 / name :op1 "Galatasaray")) :op3 (p / person :name (n3 / name :op1 "Hagi"))) :arg1 (p2 / person :name (n4 / name :op1 "Hagi")) :time (b / before :op1 (n5 / now) :quant (o3 / over :op1 (t2 / temporal-quantity :quant (N / N-A) :unit (y / year))))) :op2 (o4 / own-01 :arg0 (h / he) :arg1 (t3 / team)))
(s / say-01 :arg1 (a / amr-unknown :location (t / there)) :arg2 (a2 / amr-unknown))
(m / mr :polarity - :arg0 (t / thing :arg1-of (d / decide-01 :arg0 (p / person :name (n / name :op1 "Corbyn")))) :arg1 (a / attend-02 :arg1 (p2 / park :name (n2 / name :op1 "N-A") :mod (n3 / nation))))
(a / and :op1 (b / be-located-at-91 :arg1 (b2 / boat) :arg2 (l / location :name (n / name :op1 "Aegean" :op2 "Sea"))) :op2 (h / head-02 :arg0 (b3 / boat) :arg1 (i / island :mod (g / greek) :mod (k / kos))))
(s / say-01 :arg0 (o / organization :name (n / name :op1 "Glencore")) :arg1 (s2 / sell-01 :arg0 (o2 / organization) :arg1 (s3 / share :mod (n2 / new) :arg1-of (v / value-01 :arg2 (a / about :op1 (m / monetary-quantity :quant 1.6 :unit (d / dollar :mod (r / renminbi)))))) :arg2 (d2 / debt :mod (d3 / down))) :medium (s4 / statement))
(p / point-out-02 :arg0 (p2 / person :name (n / name :op1 "Bellamy")) :arg1 (c / contest :arg1-of (h / high-02 :degree (m / more)) :arg1-of (c2 / contested :degree (m2 / more) :compared-to (a / and :op1 (o / organization :name (n2 / name :op1 "Broncos")) :op2 (o2 / organization :name (n3 / name :op1 "Cowboys"))))) :mod (a2 / also))
(a / and :op1 (t / terminate-01 :arg0 (p / person :name (n / name :op1 "Grimal")) :arg1 (c / change-01 :arg0 (p2 / person) :arg1 (w / way :manner-of (c2 / carry-out-03 :arg1 (e / educate-01 :arg1 (m / music :mod (c3 / classical))))))) :op2 (h / have-03 :arg0 (p3 / person) :arg1 (a2 / and :op1 (t2 / taste :mod (d / die-01)) :op2 (t3 / taste :arg1 (m2 / music)) :domain (f / future :poss (m3 / music))) :time (t4 / today)))
(l / lesson :location (h / here))
(l / lesson :location (h / here))
(a / and :op1 (t / tension :quant (l / lot) :location (g / game :mod (f / firm) :mod (o / old))) :op2 (p / person :mod (j / just :polarity -) :location (c / country :name (n / name :op1 "Scotland")) :arg0-of (w / want-01 :arg1 (s / see-01 :arg0 (p2 / person) :arg1 (g2 / game :mod (t2 / that))))))
(c / contrast-01 :arg2 (p / prevail-01 :polarity - :arg0 (w / work-09 :arg1-of (p2 / pure-02))))
(c / contrast-01 :arg2 (p / prevail-01 :polarity - :arg0 (w / work-09 :arg1-of (p2 / pure-02))))
(r / reveal-01 :arg0 (p / person :name (n / name :op1 "Victor" :op2 "Piturca")) :arg1 (w / way :manner-of (p2 / part :arg0 (h / he) :arg1 (t / team :mod (n2 / nation) :mod (c / country :name (n3 / name :op1 "N-A"))) :time (y / year :mod (l / last)))) :manner (a / amr-unknown))
(e / early :time (e2 / early :op1 (e3 / elect-01)) :mod (s / still))
(a / announce-01 :arg0 (i / i) :arg1 (o / or :mode (i2 / interrogative) :op1 (r / run-02 :arg0 (i3 / i) :arg1 (p / person :arg0-of (l / lead-02 :arg1 (p2 / party)))) :op2 (s / say-01 :polarity - :arg0 (i4 / i) :arg1 (e / end-01 :arg1 (m / meet-03 :arg0 (p3 / person :name (n / name :op1 "Dragnea")) :arg1 (o2 / organization :name (n2 / name :op1 "PSD" :op2 "National" :op3 "Standing" :op4 "Bureau")))))))
(a / announce-01 :arg0 (i / i) :arg1 (o / or :mode (i2 / interrogative) :op1 (r / run-02 :arg0 (i3 / i) :arg1 (p / person :arg0-of (l / lead-02 :arg1 (p2 / party)))) :op2 (s / say-01 :polarity - :arg0 (i4 / i) :arg1 (e / end-01 :arg1 (m / meet-03 :arg0 (p3 / person :name (n / name :op1 "Dragnea")) :arg1 (o2 / organization :name (n2 / name :op1 "PSD" :op2 "National" :op3 "Standing" :op4 "Bureau")))))))
(m / multi-sentence :snt1 (a / and :op1 (a2 / announce-01 :arg0 (i / i) :arg1 (t / thing :arg1-of (a3 / announce-01) :mod (i2 / important)) :location (d / dlr :source (v / value-interval :op1 (1 / 15th) :op2 (d2 / date-entity :month 9))))) :snt2 (r / read-01 :mode (i3 / imperative) :arg0 (y / you) :arg1 (a4 / and :op1 1 :op2 (b / branding)) :arg4 (i4 / image :poss (t2 / tank))))
(m / multi-sentence :snt1 (d / descending :arg1 (p / person :arg0-of (d2 / deal-02 :arg1 (a / arms)) :mod (t / this)) :arg2 (d3 / dlr :arg1 (p2 / person))) :snt2 (r / request-01 :arg0 (c / customer) :arg1 (h / help-01 :arg0 (c2 / customer) :arg1 (s / stop-01 :arg0 (c3 / customer) :arg1 (f / fair :mod (a2 / arm))))))
(s / say-01 :arg1 (w / want-01 :arg0 (i / i) :arg1 (m / meet-02 :arg0 (i2 / i) :arg1 (p / person :arg0-of (h / have-rel-role-91 :arg1 (i3 / i) :arg2 (p2 / parent))) :source (c / country :name (n / name :op1 "Romania")))) :arg2 (p3 / person :name (n2 / name :op1 "Crina")))
(c / contrast-01 :arg2 (a / and :op1 (a2 / accept-01 :arg0 (p / person :quant (p2 / percentage-entity :value (N / N-A)) :arg1-of (i / include-91 :arg2 (p3 / person :arg0-of (h / have-rel-role-91 :arg2 (d / dh))))) :arg1 (l / loan-01 :location (f / francs)) :arg1-of (c2 / cause-01 :arg0 (r / reduce-01 :arg1 (b / balance-01 :arg1 (a3 / and :op1 (r2 / risk-01) :op2 (f2 / fee :mod (m / manage-01)) :arg1-of (p4 / pay-01 :arg0 (c3 / client))))))) :op2 (r3 / reduce-01 :arg1 (r4 / reduce-01 :arg1 (p5 / percentage-entity :value (N2 / N-A) :quant-of (p6 / percentage-entity :value (N3 / N-A)))) :arg4 (b2 / balance-01 :arg1 (t / thing)) :time (t2 / then))))
(p / poster :quant 300 :domain (t / thread :arg1-of (e / exhibit-01 :location (o / organization :name (n / name :op1 "Museum" :op2 "of" :op3 "Cruel" :op4 "Designs") :location (d / dismaland :poss (o2 / organization :name (n2 / name :op1 "Banksy")))))))
(a / and :op1 (l / lack-01 :arg0 (p / paper :arg1-of (p2 / produce-01 :arg0 (p3 / person :arg0-of (h / have-org-role-91 :arg1 (g / group) :arg3 (r / research-01))))) :arg1 (t / thing :arg0-of (e / evidence-01 :arg1 (h2 / harm-01 :arg1 (a2 / and :op1 (p4 / product :arg1-of (i / include-91 :arg2 (c / criteria :mod (m / most)))) :op2 (p5 / person :arg0-of (h3 / have-org-role-91 :arg1 (p6 / person :name (n / name :op1 "McKee"))))))))) :op2 (w / write-01 :arg0 (p7 / person :name (n2 / name :op1 "Capewell"))))
(p / play-02 :arg0 (a / and :op1 (c / cup :location (c2 / country :name (n / name :op1 "England"))) :op2 (c3 / cup :mod (c4 / country :name (n2 / name :op1 "Romania")))) :arg1 (b / be-located-at-91 :arg1 (c5 / country) :arg2 (g / group) :time (d / date-entity :month (N / N-A) :day 23) :location (a2 / and :op1 (t / talk-02 :arg2 (c6 / country :name (n3 / name :op1 "France")) :time (d2 / date-entity :month (N2 / N-A) :day 23)) :op2 (b2 / be-located-at-91 :arg1 (c7 / country :name (n4 / name :op1 "Ireland")) :arg2 (u / under :op1 (c8 / country :name (n5 / name :op1 "Canada"))) :location (a3 / and :op1 (t2 / talk-02 :arg2 (c9 / country :name (n6 / name :op1 "Canada"))) :op2 (: / :day :( (m / month) :name (n7 / name :op1 "10"))) :op3 (:2 / :day :( (l / location) :name (n8 / name :op1 "Exeter"))))))
(c / close-01 :arg1 (g / gap) :time (m / month :mod (r / recent)) :time (t / today))
(s / say-01 :arg0 (p / person :name (n / name :op1 "Deila")))
(a / ask-01 :arg0 (h / he) :arg1 (a2 / and :op1 (p / person :arg1-of (k / know-01 :polarity -) :arg0-of (s / send-01 :arg1 (i / image) :arg2 (p2 / person))) :op2 (a3 / ask-02 :arg0 (p3 / person) :arg1 (s2 / send-01 :arg0 (p4 / person) :arg1 (p5 / photograph-01 :quant (m / more)) :arg2 (p6 / person)) :arg2 (p7 / person))) :arg2 (h2 / he))
(c / contrast-01 :arg2 (s / say-01 :arg0 (p / person :arg0-of (v / vote-01) :arg1-of (i / include-91 :arg2 (p2 / person :arg0-of (v2 / vote-01) :mod (p3 / primary)) :arg3 (p4 / percentage-entity :value 48))) :arg1 (s2 / say-01 :arg0 (p5 / person :arg0-of (v3 / vote-01) :mod (p6 / primary) :quant (p7 / percentage-entity :value 48)) :arg1 (s3 / say-01 :arg0 (p8 / person) :arg1 (a / and :op1 (s4 / say-01 :arg0 (p9 / person :arg0-of (v4 / vote-01) :mod (p10 / primary) :quant (p11 / percentage-entity :value 48)) :arg1 (p12 / person :name (n / name :op1 "Donald" :op2 "Trump"))) :op2 (s5 / say-01 :arg0 (p13 / person :arg0-of (v5 / vote-01) :mod (r / republican) :mod (f / few :degree (m / more))) :arg1 (p14 / person :name (n2 / name :op1 "Clinton"))))))))
(a / and :op1 (s / steers :arg0 (i / it) :arg1 (y / you)) :op2 (h / help-01 :arg0 (y2 / you) :arg1 (y3 / you) :arg2 (s2 / scout :arg0 (y4 / you) :arg1 (p / person :arg1-of (l / like-01 :polarity - :arg0 (y5 / you) :arg1-of (c / cause-01 :arg0 (a2 / and :op1 (f / fire :arg1 (y6 / you)) :op2 (d / dispensing :arg1 (y7 / you)))))))))
FAILED_TO_PARSE#Number of opening and closing brackets doesn't match.
FAILED_TO_PARSE#Number of opening and closing brackets doesn't match.
(a / and :op1 (e / excite-01 :arg1 (p / person :arg0-of (h / have-rel-role-91 :arg2 (f / father)))) :op2 (p2 / possible-01 :arg1 (c / control-01 :arg0 (p3 / person) :arg1 (h2 / hand :part-of (p4 / person))) :degree (b / bare)) :op3 (s / shake-01 :arg1 (h3 / hand :part-of (p5 / person))))
(a / and :op1 (m / massive :domain (s / store)) :op2 (t / take-10 :arg0 (s2 / store) :arg1 (c / comb :arg0 (s3 / store) :arg1 (a2 / aisles :quant (a3 / all)))))
(c / contrast-01 :arg1 (h / human :mod (d / decent) :domain (t / this) :mod (j / just)) :arg2 (c2 / cause-01 :arg0 (b / be-located-at-91 :arg1 (h2 / house :consist-of (g / glass)) :arg2 (y / you))))
(s / say-01 :arg0 (a / and :op1 (p / person :name (n / name :op1 "McKee")) :op2 (p2 / person :name (n2 / name :op1 "Capewell"))) :arg1 (c / claim-01 :arg0 (p3 / person :name (n3 / name :op1 "PHE")) :arg1 (e / evidence-01 :polarity - :arg0-of (e2 / evidence-01 :arg1 (a2 / act-01 :arg0 (p4 / person) :arg1 (o / or :op1 (s2 / smoke-02 :arg0 (p5 / person) :arg1 (o2 / or :op1 (c2 / child) :op2 (' / '' :mod (n4 / non-smokers)))) :op2 ('2 / '' :arg1 (p6 / person))))))))
(a / and :op1 (a2 / agree-01 :polarity - :arg0 (c / country :name (n / name :op1 "Romania"))) :op2 (i / impose-01 :polarity - :arg0 (c2 / country) :arg1 (a3 / and :op1 (m / measure-02 :mod (a4 / anti-democratic)) :op2 (d / dog :arg0-of (g / guard-01)) :op3 (f / fence :mod (t / theater)) :op4 (o / or :op1 (f2 / fence :mod (t2 / theater)) :op2 (f3 / fence :mod (t3 / theater))) :prep-with (g2 / gun))))
(a / and :op1 (d / die-01 :arg1 (p / person :quant (n / nearly :op1 80,000)) :arg1-of (c / cause-01 :arg0 (i / illness :mod (s / smoking-related)))) :op2 (c2 / cost-01 :arg1 (m / monetary-quantity :quant (2 / 2bn) :unit (y / yuan)) :arg2 (t / temporal-quantity :quant (N / N-A) :unit (y2 / year))))
(c / clear-06 :arg1 (w / want-01 :polarity - :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (o / organization :name (n / name :op1 "EC")) :arg2 (p2 / president))) :arg1 (f / force-01 :arg0 (p3 / person) :arg1 (p4 / person) :arg2 (v / vote-01 :arg0 (p5 / person) :arg1 (c2 / council)))))
(a / and :op1 (v / vehicle :mod (a2 / armour-clad)) :op2 (c / cannon :mod (w / water)) :location (b / border-01 :arg2 (b2 / border-01)))
(c / cause-01 :arg1 (d / do-02 :arg0 (a / amr-unknown) :arg1 (i / it)))
(b / bury-01 :arg1 (p / person :name (n / name :op1 "Corneliu" :op2 "Vadim" :op3 "Tudor")) :arg2 (t / thursday :arg0 (p2 / person) :arg1 (h / honours :mod (m / military) :location (p3 / peninsula :name (n2 / name :op1 "N-A")))))
(m / multi-sentence :snt1 (c / contrast-01 :arg1 (a / about :polarity - :domain (a2 / amount) :topic (m2 / money)) :arg2 (g / great :polarity - :domain (a3 / amount))) :snt2 (g2 / great :polarity - :degree (t / that) :domain (a4 / amount)))
(a / ask-02 :arg0 (p / person :arg0-of (h / head-01 :arg1 (o / organization :name (n / name :op1 "International" :op2 "Amateur" :op3 "Boxing" :op4 "Federation")))) :arg1 (i / increase-01 :arg0 (p2 / person) :arg1 (s / salary :poss (p3 / person)) :purpose (m / make-02 :arg0 (p4 / person) :arg1 (s2 / stay-01 :arg1 (p5 / person))) :mod (s3 / substantial)) :arg2 (r / refuse-01 :arg0 (h2 / he)) :time (f / final))
(h / hard-02 :arg1 (e / exclude-01 :arg1 (s / scenario :arg1-of (p / possible-01))))
(p / possible-01 :polarity - :arg1 (s / say-01 :arg0 (i / i) :arg1 (i2 / innocent-01 :arg1 (p2 / person :name (n / name :op1 "Richard" :op2 "Glossip")))))
(m / meet-03 :arg0 (a / and :op1 (p / person :name (n / name :op1 "Crina")) :op2 (p2 / person :arg0-of (h / have-rel-role-91 :arg1 (p3 / person) :arg2 (m2 / mother)) :mod (b / biology))))
(a / accident :location (s / side :mod (e / east) :part-of (r / roof :part-of (l / location :name (n / name :op1 "Great" :op2 "Mosque" :op3 "of" :op4 "Mecca")))) :time (n2 / night :mod (f / friday) :time (n3 / night :time-of (s2 / storm))))
(e / emphasises :arg0 (c / court) :arg1 (a / and :op1 (r / relevant-01 :arg1 (q / quality :poss (v / victim) :arg1-of (m / moral-02))) :op2 (a2 / aspect :arg1-of (r2 / relevant-01) :domain (a3 / aspect :arg1-of (m2 / moral-02) :poss (v2 / victim))) :op3 (a4 / aspect :arg1-of (v3 / violate-01 :arg0 (a5 / and :op1 (p / person :arg0-of (d / defend-01)) :op2 (s / stand :mod (p2 / physical) :poss (p3 / person))))) :arg1-of (c2 / cause-01 :arg0 (p4 / possible-01 :polarity - :arg1 (v4 / violate-01 :arg1 (m3 / motivation :mod (p5 / pretext)))))))
(p / possible-01 :polarity - :arg1 (c / come-01 :arg1 (e / everyone :arg1-of (c2 / come-01 :arg4 (c3 / continent :name (n / name :op1 "Europe")))) :arg4 (c4 / continent :name (n2 / name :op1 "Europe"))))
(s / see-01 :arg0 (h / he) :arg1 (t / thing :quant (s2 / some)))
(m / multi-sentence :snt1 (c / conclude-01 :arg1 (f / fined :domain (f2 / family) :arg1-of (c2 / cause-01 :arg0 (i / information :mod (e / erroneous) :source (a / and :op1 (l / leaflets) :op2 (c3 / controllers)))))) :snt2 (' / '' :mode (e2 / expressive)))
(d / drop-05 :arg0 (o / organization :name (n / name :op1 "Moody")) :arg1 (b / bombshell :arg0 (o2 / organization) :arg1 (t / try-01 :arg0 (d2 / department :mod (i / integrity)) :arg1 (s / spy-01 :arg0 (d3 / department) :arg1 (s2 / stable-03 :arg1 (d4 / department))))) :time (e / early :degree (m / more) :time (e2 / early :degree (m2 / more))))
(a / and :op2 (c / cause-01 :arg0 (a2 / amr-unknown) :arg1 (t / take-01 :polarity - :arg0 (p / person :arg0-of (h / have-rel-role-91 :arg1 (y / you) :arg2 (f / friend))) :arg1 (p2 / person :arg0-of (h2 / have-rel-role-91 :arg1 (y2 / you) :arg2 (f2 / friend))) :purpose (d / drink-01 :arg0 (p3 / person) :location (l / location :name (n / name :op1 "Central" :op2 "Perk")))) :condition (a3 / attend-01 :arg0 (y3 / you) :arg1 (f3 / friendsfest :poss (c2 / comedy)) :time (w / weekend :mod (t2 / this)))))
(m / mean-01 :polarity - :arg1 (t / this) :arg2 (p / possible-01 :arg1 (s / start-01 :arg0 (o / organization :name (n / name :op1 "County" :op2 "Council")) :arg1 (s2 / search-01 :arg0 (o2 / organization) :arg2 (d / door :mod (a / another))))))
(f / found-01 :arg1 (a / and :op1 (m / maintain-01 :arg1 (b / balance-01)) :op2 (u / unity) :location (p / party)) :arg1-of (w / wide-02))
(r / rule-out-02 :polarity - :arg0 (i / i) :arg1 (w / win-01 :arg0 (i2 / i) :mod (a / away)) :mod (e / either))
(a / and :op1 (o / oppose-01 :arg0 (p / person :quant 7 :poss (h / he)) :arg1 (a2 / and :op1 (a3 / attack-01 :quant 2 :mod (g / good)) :op2 (a4 / attack-01 :quant 2 :mod (g2 / good)))) :op2 (j / judge-01 :arg1 (r / reality :arg1-of (h2 / harsh-02) :mod (t / that)) :arg2 (t2 / thing :arg0-of (l / liberate-01)) :arg1-of (h3 / harsh-02)))
(r / reside-01 :arg0 (p / person :name (n / name :op1 "David" :op2 "Grimal")) :arg1 (o / opera :mod (d / dijon)) :time (s / since :op1 2008))
FAILED_TO_PARSE#Number of opening and closing brackets doesn't match.
(m / multi-sentence :snt1 (i / imagine-01 :arg0 (y / you) :arg1 (p / possible-01 :arg1 (m2 / market-01 :arg0 (y2 / you) :arg1 (g / group :consist-of (m3 / musicians :arg0-of (h / have-03 :polarity - :arg1 (e / ego)))))) :manner (a / amr-unknown)) :snt2 (a2 / ask-01 :arg0 (i2 / i) :arg1 (a3 / artists)))
(d / destiny :arg0 (f / family :arg1-of (h / have-org-role-91 :arg0 (t / they) :arg2 (m / member))) :arg1 (d2 / destiny :poss (t2 / they)) :arg2 (p / person :arg0-of (h2 / have-rel-role-91 :arg1 (t3 / they) :arg2 (d3 / daughter))) :location (c / city :name (n / name :op1 "Palermo") :location (c2 / city :name (n2 / name :op1 "Palermo"))) :manner (p2 / pia?a))
(e / expect-01 :arg1 (c / charge-05 :arg1 (h / he) :arg2 (f / fail-01 :arg1 (h2 / he) :arg2 (a / and :op1 (s / stop-01 :arg1 (h3 / he) :time (a2 / accident)) :op2 (f2 / fail-01 :arg1 (h4 / he) :arg2 (a3 / assist-01 :arg0 (h5 / he) :arg2 (a4 / and :op1 (a5 / assist-01 :arg0 (h6 / he) :arg2 (r / render)) :op2 (o / offence :mod (t / traffic) :mod (o2 / other)))))))))
(c / contrast-01 :arg2 (s / set-02 :arg0 (d / document) :arg1 (o / objective :mod (s2 / strategy) :mod (s3 / some) :topic (i / immigrate-01) :arg1-of (g / general-02) :example (i2 / immigrate-01) :example (a / and :op1 (p / promote-02 :arg1 (a2 / and :op1 (m / migration :arg1-of (l / legal-02)) :op2 (c2 / control-01 :arg1 (c3 / citizen) :arg1-of (l2 / legal-02)))) :op2 (c4 / control-01 :arg1 (a3 / and :op1 (c5 / citizen :location (c6 / country :name (n / name :op1 "Romania"))) :op2 (a4 / and :op1 (r / remove-01 :arg1 (c7 / citizen)) :op2 (m2 / measure-02 :arg1 (r2 / remove-01 :arg1 (a5 / and :op1 (r3 / remove-01) :op2 (m3 / measure-02 :mod (r4 / restrictive))) :op3 (i3 / improve-01 :arg1 (s4 / system :mod (n2 / nation) :mod (n3 / nation)))) :arg1-of (a6 / appropriate-02)))))))))
(r / recognize-02 :polarity - :arg0 (l / location :name (n / name :op1 "Ohio")) :arg1 (a / and :op1 (l2 / look-01 :arg0 (i / i) :arg1 (e / eye :part-of (i2 / i))) :op2 (l3 / look-01 :polarity - :arg0 (i3 / i) :arg1 (e2 / eye :part-of (i4 / i)))) :time (s / see-01 :arg0 (h / he) :arg1 (f / film :poss (p / person :arg0-of (h2 / have-rel-role-91 :arg1 (h3 / he) :arg2 (w / wife))) :arg2 (l4 / location :name (n2 / name :op1 "Columbus")))))
(p / possible-01 :polarity - :arg1 (a / absorb :arg0 (g / government-organization :arg0-of (g2 / govern-01 :arg1 (c / country :name (n / name :op1 "N-A"))) :mod (a2 / any)) :arg1 (f / fund :purpose (b / build-01 :arg1 (o / or :op1 (r / road) :op2 (s / school :arg1-of (m / modern-02)) :op3 (s2 / school :arg1-of (m2 / modern-02)) :op4 (c2 / care-03 :arg1 (h / health) :mod (d / decent)) :op5 (c3 / care-03 :arg1 (h2 / health) :mod (d2 / decent))))) :arg0-of (p2 / prevent-01 :arg1 (o2 / or :op1 (p3 / pay-01 :arg1 (j / job)) :op2 (p4 / prevent-01 :arg1 (j2 / job)))) :op3 (p5 / prevent-01 :arg1 (g3 / generation :mod (y / young)) :arg2 (c4 / country))) :mod (b2 / besides))
(p / possible-01 :polarity - :arg1 (a / absorb :arg0 (g / government-organization :arg0-of (g2 / govern-01 :arg1 (c / country :name (n / name :op1 "N-A"))) :mod (a2 / any)) :arg1 (f / fund :purpose (b / build-01 :arg1 (o / or :op1 (r / road) :op2 (s / school :arg1-of (m / modern-02)) :op3 (s2 / school :arg1-of (m2 / modern-02)) :op4 (c2 / care-03 :arg1 (h / health) :mod (d / decent)) :op5 (c3 / care-03 :arg1 (h2 / health) :mod (d2 / decent))))) :arg0-of (p2 / prevent-01 :arg1 (o2 / or :op1 (p3 / pay-01 :arg1 (j / job)) :op2 (p4 / prevent-01 :arg1 (j2 / job)))) :op3 (p5 / prevent-01 :arg1 (g3 / generation :mod (y / young)) :arg2 (c4 / country))) :mod (b2 / besides))
(r / report-01 :polarity - :arg1 (i / incident) :arg2 (p / police) :arg1-of (c / cause-01 :arg0 (a / and :op1 (d / drive-02 :arg0 (p2 / person :arg0-of (d2 / drive-01 :arg1 (c2 / car :quant 2))) :arg1 (d3 / damage-01 :arg1 (c3 / car))) :op2 (s / state-01 :arg0 (p3 / person :arg0-of (h / have-org-role-91 :arg1 (o / organization :name (n / name :op1 "County" :op2 "Police" :op3 "Inspectorate")) :arg2 (c4 / commissioner :mod (c5 / chief)))) :arg1 (h2 / have-org-role-91 :arg0 (p4 / person) :arg1 (o2 / organization) :arg2 (c6 / commissioner :mod (c7 / chief)))))))
(t / think-01 :mode (i / imperative) :polarity - :arg0 (y / you) :arg1 (s / start-01 :arg1 (u / university :location (r / relation-03 :arg0 (u2 / university) :arg2 (u3 / university)))) :mod (e / even))
(c / cause-01 :arg0 (w / wait-01 :arg1 (p / person :mod (a / age-01 :arg1 (p2 / person) :arg2 (t / temporal-quantity :quant (N / N-A) :unit (y / year)))) :arg2 (l / line :mod (s / side))) :arg1 (r / reach-01 :arg0 (p3 / person) :arg1 (b / bier :arg0-of (c2 / contain-01 :arg1 (b2 / body :poss (p4 / person :name (n / name :op1 "Corneliu" :op2 "Vadim" :op3 "Tudor")))))))
(c / cause-01 :arg0 (w / wait-01 :arg1 (p / person :mod (a / age-01 :arg1 (p2 / person) :arg2 (t / temporal-quantity :quant (N / N-A) :unit (y / year)))) :arg2 (l / line :mod (s / side))) :arg1 (r / reach-01 :arg0 (p3 / person) :arg1 (b / bier :arg0-of (c2 / contain-01 :arg1 (b2 / body :poss (p4 / person :name (n / name :op1 "Corneliu" :op2 "Vadim" :op3 "Tudor")))))))
(p / phone-number-entity :value (N / N-A))
(k / know-01 :arg0 (n / no-one) :arg1 (t / thing :manner-of (w / work-09 :arg1 (q / quota :mod (m / mandatory))) :mod (e / exact) :condition (c / come-12 :arg1 (w2 / work-09))))
(k / know-01 :arg0 (n / no-one) :arg1 (t / thing :manner-of (w / work-09 :arg1 (q / quota :mod (m / mandatory))) :mod (e / exact) :condition (c / come-12 :arg1 (w2 / work-09))))
(s / say-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (p2 / political-party :name (n / name :op1 "N-A") :arg1-of (l / lead-02 :arg0 (p3 / person))) :arg2 (c / chief))) :arg1 (w / worry-01 :arg0 (t / threaten-01 :arg1 (t2 / threaten-01 :arg2 (p4 / politician :poss (p5 / party)))) :arg1 (p6 / party)))
(a / and :op1 (r / rate-entity-91 :arg1 (s / salary :poss (i / i)) :arg2 (r2 / rate-entity-91 :arg1 (u / under :op1 (m / monetary-quantity :quant 600 :unit (e / euro))) :arg2 (t / temporal-quantity :quant (N / N-A) :unit (y / year)))) :op2 (r3 / receive-01 :arg0 (i2 / i) :arg1 (a2 / around :op1 (m2 / monetary-quantity :quant 600 :unit (e2 / euro)))))
(a / argue-01 :arg0 (p / person :mod (o / other) :arg1-of (e / expert-01)) :arg1 (i / increase-01 :arg0 (i2 / increase-01 :arg1 (r / rate)) :arg1 (m / market :mod (f / finance)) :arg1-of (c / cause-01 :arg0 (r2 / remove-01 :arg0 (r3 / rate) :arg1 (c2 / certain :polarity -) :time (a2 / act-02 :arg0 (g / government-organization :name (n / name :op1 "Fed")))))))
(c / cause-01 :arg0 (s / speak-01 :arg0 (p / person :name (n / name :op1 "Enescu") :arg0-of (s2 / speak-01 :arg3 (w / work-01 :arg0 (p2 / person) :arg1 (w2 / work-01 :arg0 (p3 / person) :arg1 (w3 / work-01 :arg0 (p4 / person))))))) :arg1 (f / feel-01 :arg0 (p5 / person) :arg1 (n2 / need-01 :arg1 (m / music :arg1 (m2 / music) :arg1-of (f2 / fame-01))) :arg0-of (c2 / cause-01 :arg1 (f3 / feel-01 :polarity - :arg0 (p6 / person) :arg1 (n3 / need-01 :arg1 (a / approach-02 :arg1-of (s3 / special-02)) :time (i / introduce-02 :arg0 (p7 / person) :arg1 (w4 / work-01 :arg0 (p8 / person) :location (r / repertoire :poss (p9 / person)))))))))
(a / and :op1 (t / talk-01 :arg0 (w / we)) :op2 (s / see-01 :arg0 (w2 / we)))
(d / debut :arg1 (n / news :mod (b / big) :topic (s / seven)) :arg2 (p / person :name (n2 / name :op1 "Erik" :op2 "Thomson") :arg1-of (p2 / populate-01 :arg2 (s2 / star :mod (r / rafters)) :time (f / former))) :mod (s3 / stunning))
(p / possible-01 :arg1 (l / lethal :domain (i / it) :beneficiary (p2 / person :arg0-of (h / have-rel-role-91 :arg1 (i2 / i) :arg2 (c / child)))))
(s / say-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (o / organization :name (n / name :op1 "UN")) :arg2 (c / chief))) :arg1 (s2 / solution :polarity - :mod (m / military) :location (c2 / country :name (n2 / name :op1 "Syria"))))
(p / person :arg0-of (h / have-rel-role-91 :arg1 (p2 / person :name (n / name :op1 "Vasile" :op2 "Blaga")) :arg2 (s / son)) :prep-in (l / law))
(p / possible-01 :arg1 (m / make-02 :arg0 (r / rate :mod (r2 / rate)) :arg1 (t / thing :mod (v / volatile)) :time (w / while)) :arg1-of (s / see-01 :arg0 (m2 / market) :time (b / before :op1 (n / now) :duration (o / or :op1 (t2 / temporal-quantity :quant (N / N-A) :unit (m3 / month)) :op2 (s2 / so)))))
(a / and :op1 (l / look-01 :arg0 (s / she) :arg1 (i / it)) :op2 (f / find-01 :arg0 (s2 / she) :arg1 (m / message :mod (d / disturbing)) :time (b / before :op1 (a2 / alerting :arg0 (s3 / she) :arg1 (p / person :arg0-of (h / have-rel-role-91 :arg1 (s4 / she) :arg2 (m2 / mother)))))))
(a / and :op1 (r / recognising :arg1 (f / fact :arg1-of (s / sign-01 :arg0 (p / person :name (n / name :op1 "Dumitru" :op2 "Dasc?lu")) :time (y / yesterday))) :location (o / organization :name (n2 / name :op1 "Iasi" :op2 "Court"))) :op2 (a2 / agree-01 :arg0 (p2 / person :arg0-of (h / have-org-role-91 :arg3 (j / judge-01))) :arg1 (r2 / resolution :topic (c / case-03 :mod (t / this))) :time (d / date-entity :month 9 :day 29)))
(t / take-01 :arg1 (t2 / thing) :arg3 (g / good :degree (m / more)) :beneficiary (p / person :name (n / name :op1 "Viitorul")) :time (s / season :mod (t3 / this)) :arg1-of (c / cause-01 :arg0 (a / and :op1 (c2 / come-01 :arg1 (t4 / team) :prep-in (p2 / place :ord (o / ordinal-entity :value 2)) :prep-with (p3 / point :quant 19)) :op2 (p4 / point :quant 1 :mod (p5 / point) :compared-to (p6 / person :name (n2 / name :op1 "Astra" :op2 "Giurgiu") :arg0-of (l / lead-02 :arg1 (p7 / person)))))))
(t / take-01 :arg1 (t2 / thing) :arg3 (g / good :degree (m / more)) :beneficiary (p / person :name (n / name :op1 "Viitorul")) :time (s / season :mod (t3 / this)) :arg1-of (c / cause-01 :arg0 (a / and :op1 (c2 / come-01 :arg1 (t4 / team) :prep-in (p2 / place :ord (o / ordinal-entity :value 2)) :prep-with (p3 / point :quant 19)) :op2 (p4 / point :quant 1 :mod (p5 / point) :compared-to (p6 / person :name (n2 / name :op1 "Astra" :op2 "Giurgiu") :arg0-of (l / lead-02 :arg1 (p7 / person)))))))
(p / possible-01 :arg1 (c / catch-up-04 :arg0 (e / everyone) :arg1 (b / breath :poss (e2 / everyone))))
(g / go-02 :arg0 (o / organization :name (n / name :op1 "BBC" :op2 "News")) :arg1 (m / meet-03 :arg0 (o2 / organization) :arg1 (p / person :quant 1 :arg1-of (i / include-91 :arg2 (p2 / person :arg0-of (s / specialize-01 :arg1 (p3 / project)))))))
(c / contrast-01 :arg1 (b / back-01 :arg0 (p / person :name (n / name :op1 "Clinton")) :arg1 (p2 / person :quant 47 :arg1-of (i / include-91 :arg2 (p3 / person :arg0-of (v / vote-01) :mod (p4 / primary) :mod (p5 / primary)) :arg3 (p6 / percentage-entity :value (N / N-A)))) :time (n2 / now)) :arg2 (c2 / come-01 :arg1 (p7 / person :name (n3 / name :op1 "Sanders")) :arg3 (p8 / percentage-entity :value (N2 / N-A) :quant (p9 / percentage-entity :value (N3 / N-A))) :arg4 (p10 / percentage-entity :value (N4 / N-A))) :time (n4 / now))
(a / add-01 :arg0 (p / person :name (n / name :op1 "Robertson")) :arg1 (' / '' :time (f / find-01 :arg0 (g / girl) :arg1 (m / message :topic (a2 / and :op1 (s / shout-01 :arg0 (g2 / girl) :arg1 (p2 / person :arg0-of (h / have-rel-role-91 :arg1 (g3 / girl) :arg2 (m2 / mother)))) :op2 (s2 / shake-01 :arg1 (m3 / message)))))))
(s / show-01 :arg0 (v / video :prep-on (p / publication :name (n / name :op1 "YouTube"))) :arg1 (d / drink-01 :arg0 (t / teenager) :arg1 (s2 / sanitizer :arg1-of (c / cheap-02))))
(d / discuss-01 :arg1 (t / this) :time (m / meet-03 :mod (p / plenary :mod (n / next))))
(l / link-01 :arg1 (p / person :quant (s / some)) :arg2 (d / die-01 :arg1 (p2 / person)) :manner (b / beyond :op1 (a / alcohol)))
(p / probable :domain (h / have-03 :arg0 (i / i) :arg1 (i2 / it)))
(c / contrast-01 :arg2 (a / and :op1 (h / handle-01 :arg0 (h2 / he) :arg1 (h3 / he) :manner (w / well :degree (e / extreme)) :manner (c2 / circumstance :mod (p / provocative :degree (p2 / pretty)) :location (c3 / country :name (n / name :op1 "US")) :prep-with (p3 / person :name (n2 / name :op1 "Harrison")))) :op2 (t / think-01 :arg0 (i / i) :arg1 (d / deserve-01 :arg0 (h4 / he) :arg1 (c4 / credit :quant (l / lot))))))
(k / kill-01 :arg1 (b / body :consist-of (p / person :quant 29 :arg1-of (k2 / kill-01 :time (c / crash-01 :arg1 (w / work-of-art :name (n / name :op1 "N-A")) :location (l / location :name (n2 / name :op1 "Mecca" :op2 "'s" :op3 "Grand" :op4 "Central" :op5 "Mosque")))))))
(a / and :op1 (p / person :arg0-of (h / have-org-role-91 :arg2 (p2 / person :arg0-of (p3 / participate-01))) :arg0-of (h2 / have-org-role-91 :arg2 (p4 / person :arg0-of (p5 / participate-01))) :arg0-of (h3 / have-org-role-91 :arg2 (p6 / person :arg0-of (p7 / participate-01))) :quant (m / most) :arg0-of (h4 / have-org-role-91 :arg2 (p8 / person :arg0-of (p9 / participate-01))) :arg0-of (h5 / have-org-role-91 :arg2 (p10 / person :arg0-of (p11 / participate-01))) :arg0-of (h6 / have-org-role-91 :arg2 (p12 / person :arg0-of (p13 / participate-01))) :arg0-of (h7 / have-org-role-91 :arg2 (p14 / person :arg0-of (p15 / participate-01))) :arg0-of (h8 / have-org-role-91 :arg2 (p16 / person :arg0-of (p17 / participate-01))) :arg0-of (h9 / have-org-role-91 :arg2 (p18 / person :arg0-of (p19 / participate-01))) :arg0-of (h10 / have-org-role-91 :arg2 (p20 / person :arg0-of (p21 / participate-01))) :arg0-of (h11 / have-org-role-91 :arg2 (p22 / person :arg0-of (p23 / participate-01))) :arg0-of (h12 / have-org-role-91 :arg2 (p24 / person :arg0-of (p25 / participate-01))) :quant (m2 / most)))
(p / prayed :arg0 (w / we) :arg1 (g / god) :arg2 (g2 / god) :purpose (k / keep-02 :arg0 (w2 / we) :arg1 (s / safe-01 :arg1 (s2 / she))))
(c / contrast-01 :arg1 (k / know-01 :polarity - :arg1 (i / it)) :arg2 (c2 / collapse-01 :arg1 (i2 / interest :mod (t / this)) :time (a / after :op1 (t2 / temporal-quantity :quant (N / N-A) :unit (y / year)))))
(t / teach-01 :arg1 (l / lesson :arg1-of (v / value-02) :topic (s / security)) :arg2 (a / and :op1 (l2 / lesson :arg1-of (v2 / value-02)) :op2 (l3 / lesson :mod (a2 / amusing)) :topic (s2 / security)) :arg1-of (c / contrast-01 :arg2 (c2 / command-02 :polarity - :arg0 (s3 / someone) :arg1 (r / room :poss (s4 / someone) :accompanier (a3 / and :op1 (t2 / toothpaste) :op2 (s5 / shampoo))) :time (e / ever))))
(c / contrast-01 :arg2 (a / and :op1 (e / embarked :arg0 (w / worship-place :name (n / name :op1 "N-A")) :arg1 (p / path :arg0-of (e2 / embarked :arg1 (p2 / path)))) :op2 (p3 / possible-01 :polarity - :arg1 (u / undo :arg0 (w2 / we) :arg1 (h / history)))))
(m / multi-sentence :snt1 (s / stick-01 :arg1 (p / person :name (n / name :op1 "Neilson")) :arg2 (t / thing :arg1-of (s2 / say-01 :arg0 (h / he)))) :snt2 (c / contrast-01 :arg1 (c2 / comment-01 :polarity - :arg0 (i / i) :arg3 (i2 / integrity :mod (a / any))) :arg2 (c3 / comment-01 :polarity - :arg0 (i3 / i) :arg3 (p2 / perform-01))))
(a / and :op1 (w / watch-01 :arg1 (v / video :mod (o / organization :name (n / name :op1 "Amnesty"))) :frequency (r / rate-entity-91 :arg1 (m / more-than :op1 (t / temporal-quantity :quant (N / N-A) :unit (h / hour))) :arg2 (t2 / temporal-quantity :quant (N2 / N-A) :unit (h2 / hour)) :location (c / company :name (n2 / name :op1 "Facebook")))) :op2 (c2 / create-01 :arg0 (w2 / work-01 :arg0 (p / person :arg0-of (w3 / work-01 :arg1 (a2 / advertise-01)) :mod (a3 / advertise-01))) :arg1 (w4 / work-01 :arg0 (p2 / person) :arg3-of (f / free-04)) :mod (a4 / also)))
(m / multi-sentence :snt1 (k / know-01 :polarity - :arg0 (i / i) :arg1 (a / amr-unknown :domain (i2 / it))) :snt2 (s / say-01 :arg0 (i3 / i) :arg1 (t / think-01 :arg0 (i4 / i) :arg1 (o / obligate-01 :arg2 (p / possess-01 :arg0 (c / candidate) :arg1 (s2 / sense-01 :arg0 (c2 / candidate) :arg1 (p2 / possess-01 :arg0 (c3 / candidate)))))) :arg1-of (c4 / cause-01 :arg0 (a2 / and :op1 (p3 / person :arg1-of (e / employ-01)) :op2 (p4 / person :arg1-of (c5 / claim-01)) :op3 (l / lay-off-02)) :mod (c6 / common))))
(t / threaten-01 :mode (i / interrogative) :arg0 (p / project :mod (c / continent :name (n / name :op1 "N-A"))))
(s / say-01 :arg0 (o / organization :name (n / name :op1 "Mediafax")))
FAILED_TO_PARSE#Number of opening and closing brackets doesn't match.
(s / say-01 :arg0 (p / person :name (n / name :op1 "Xi")) :arg1 (a / and :op1 (a2 / add-02 :arg0 (p2 / push-02 :arg0 (r / reform-01)) :arg1 (a3 / and :op1 (r2 / rhetoric) :op2 (v / vitality) :mod (n2 / new))) :op2 (p3 / provide-01 :arg0 (r3 / reform-01) :arg1 (r4 / room :mod (n3 / new) :purpose (g / grow-01 :arg1 (e / economy))))))
(s / say-01 :arg0 (p / person :name (n / name :op1 "Xi")) :arg1 (a / and :op1 (a2 / add-02 :arg0 (p2 / push-02 :arg0 (r / reform-01)) :arg1 (a3 / and :op1 (r2 / rhetoric) :op2 (v / vitality) :mod (n2 / new))) :op2 (p3 / provide-01 :arg0 (r3 / reform-01) :arg1 (r4 / room :mod (n3 / new) :purpose (g / grow-01 :arg1 (e / economy))))))
(a / and :op1 (r / react-01 :arg0 (y / you) :arg1 (c / consequence) :frequency (s / sometimes)) :op2 (o / obligate-01 :arg1 (i / i) :arg2 (l / live-01 :arg0 (i2 / i) :arg1-of (s2 / say-01 :arg0 (i3 / i)))))
(d / determine-01 :arg0 (s / sheikhs :poss (o / organization :name (n / name :op1 "Al-Ittihad"))) :arg1 (f / fate :poss (p / person :name (n2 / name :op1 "Lucian" :op2 "Sanmartean"))))
(a / and :op1 (s / score-01 :arg1 (p / person :name (n / name :op1 "Angel" :op2 "Di" :op3 "Maria")) :arg2 (l / league :mod (l2 / league :mod (c / champions)) :poss (p2 / person))) :op2 (h / help-01 :arg0 (p3 / person) :arg1 (h2 / have-org-role-91 :arg0 (p4 / person) :arg1 (o / organization :name (n2 / name :op1 "PSG")) :arg2 (l3 / location :name (n3 / name :op1 "Malmo") :mod (s2 / side)) :time (p5 / past)) :location (t / tuesday)))
(c / convince-01 :arg0 (i / i) :arg1 (l / lose-02 :arg0 (t / they) :arg1 (p / patience :poss (t2 / they)) :ord (o / ordinal-entity :value 1)))
(r / rush-01 :arg1 (t / they) :arg2 (h / hospital))
(l / live-01 :arg0 (p / person) :arg1-of (c / cause-01 :arg0 (l2 / live-01 :arg0 (p2 / person) :mod (h / happy))))
(w / way :mod (p / part) :domain (l / life :poss (t / they)) :duration (f / forever))
(m / miracles :polarity -)
(s / say-01 :arg0 (h / he) :arg1 (g / grow-01 :arg1 (h2 / he) :location (k / kitchen)) :medium (i / interview-01 :arg1 (h3 / he) :time (r / recent)))
(h / have-concession-91 :arg1 (w / way :manner-of (c / consume-01 :arg0 (p / person) :arg1 (a / alcohol :quant (l / lot))) :arg1-of (q / quick-02) :condition (g / get-05 :arg1 (k / kid) :arg2 (a2 / around))) :arg2 (l2 / leave-11 :polarity - :arg0 (y / you) :arg1 (s / shoot-02 :arg1 (w2 / whiskey) :direction (a3 / around))))
(c / contrast-01 :arg1 (a / and :op1 (s / strawberry) :op2 (g / grape) :op3 (o / orange-flavored)) :arg2 (p / person :arg0-of (h / have-rel-role-91 :arg1 (p2 / person) :arg2 (k / kid))))
(d / do-02 :arg0 (h / he) :arg1 (t / that))
(c / cause-01 :arg0 (r / registered :arg1 (c2 / case :mod (l / large :degree (m / most)) :arg1-of (r2 / register-02 :arg3 (d / dissatisfied :degree (s / slight))))) :arg1 (d2 / differ-02 :arg1 (c3 / case :mod (l2 / large :degree (m2 / most)) :arg1-of (r3 / register-02 :arg3 (d3 / dissatisfied :degree (s2 / slight)))) :arg2 (t / thing :arg2-of (a / answer-01 :arg0 (w / we) :arg1 (d4 / differ-02 :arg1 (p / percentage-entity :value (N / N-A)) :arg2 (s3 / state :mod (p2 / press)))))))
(c / create-01 :arg0 (i / it) :arg1 (a / and :op1 (s / stable-03 :polarity - :arg1 (i2 / it)) :op2 (c2 / chaos :arg1-of (c3 / cause-01 :arg0 (p / possible-01 :polarity - :arg1 (b / bring-01 :arg1 (i3 / it) :arg2 (e / end-01)))))))
(c / contrast-01 :arg2 (s / solve-01 :polarity - :arg0 (p / problem) :arg1-of (s2 / simple-02)))
(g / give-01 :polarity - :arg0 (p / person :name (n / name :op1 "Dragnea")) :arg1 (u / ultimatum))
(e / express-01 :arg0 (w / we) :arg1 (c / criticize-01 :arg1 (p / possible-01 :polarity - :arg1 (r / recognize-02 :arg0 (c2 / country :name (n / name :op1 "Romania")) :arg1 (p2 / project :beneficiary (c3 / country))))) :concession-of (s / see-01 :arg0 (w2 / we) :arg1 (p3 / plan-01 :polarity - :arg0 (o / organization :name (n2 / name :op1 "EU")) :arg1 (f / future) :mod (a / also))))
(a / and :op1 (m / make-01 :arg0 (a2 / and :op1 (c / company :arg0-of (m2 / make-01 :arg1 (b / building :name (n / name :op1 "N-A"))) :location (w / world)) :op2 (c2 / company :quant 1 :arg1-of (i / include-91 :arg2 (c3 / company :mod (t / tech :arg1-of (h / high-02)) :mod (b2 / big :degree (m3 / most) :compared-to (w2 / world)))))) :arg1 (m4 / move-02 :arg0 (f / firm :mod (t2 / tech :arg1-of (h2 / high-02)) :mod (b3 / big :degree (m5 / most) :compared-to (w3 / world))))) :op2 (b4 / base-02 :arg1 (t3 / thing :arg1-of (b5 / believe-01 :arg0 (f2 / firm))) :arg2 (g / good :degree (m6 / more))))
(d / depend-01 :arg0 (i / it) :arg1 (d2 / discipline) :condition (o / or :op1 (c / compare-01 :arg0 (y / you) :arg1 (p / person :mod (m / musician) :mod (m2 / musician)) :arg2 (s / soldier)) :op2 (t / train-01 :arg0 (w / we) :arg2 (i2 / instrument :mod (m3 / musician)) :purpose (p2 / play-11 :arg0 (w2 / we) :arg2 (i3 / instrument :mod (m4 / musician))))))
(p / promise-01 :arg0 (w / we) :arg2 (w2 / we) :time (t / today) :degree (l / less) :compared-to (t2 / thing :arg1-of (e / expect-01 :arg0 (w3 / we))))
(k / know-01 :polarity - :arg0 (y / you) :arg1 (d / differ-02 :arg1 (f / friendship :poss (y2 / you)) :arg2 (a / amr-unknown)) :time (e / ever))
(m / multi-sentence :snt1 (h / have-condition-91 :arg1 (a / and :op1 (a2 / annoy-01 :arg0 (s / someone) :arg1 (s2 / stuff :poss (y / you))) :op2 (h2 / have-03 :arg0 (s3 / someone) :arg1 (s4 / sympathies :poss (y2 / you)))) :arg2 (s5 / steals :arg0 (s6 / someone) :arg1 (s7 / stuff :poss (y3 / you)))) :snt2 (c / contrast-01 :arg1 (t / try-01 :arg0 (y4 / you) :arg1 (d / deal-01 :arg0 (y5 / you) :arg2 (m2 / maturely :degree (m3 / more) :compared-to (h3 / hallmate :poss (i / i))))) :arg2 (t2 / try-01 :arg0 (a3 / amr-unknown) :arg1 (d2 / deal-01 :arg0 (s8 / someone) :arg2 (m4 / maturely :arg1 (i2 / it) :degree (m5 / more) :compared-to (h4 / hallmate :poss (i3 / i))) :arg0-of (p / punish-01 :arg1 (l / liquid :poss (s9 / she)) :arg2 (p2 / punish-01 :arg1 (p3 / person :arg0-of (s10 / steal-01 :arg1 (i4 / it)))))))))
(a / and :op1 (l / last-01 :arg1 (b / between :op1 (t / temporal-quantity :quant (N / N-A) :unit (y / year)) :op2 (t2 / temporal-quantity :quant (N2 / N-A) :unit (y2 / year))) :arg2 (p / person :arg0-of (v / view-01) :quant (b2 / between :op1 5.30 :op2 5.30)) :arg4 (p2 / person :quant 623,000 :arg0-of (v2 / view-01))) :op2 (w / win-01 :arg0 (p3 / person :arg0-of (v3 / view-01)) :arg2 (p4 / person :quant 623,000 :arg0-of (v4 / view-01))))
(p / prove-01 :arg0 (d / dry-02 :arg0 (a / and :op1 (p2 / parasite :poss (g / gang :mod (u / underworld))) :op2 (p3 / person :arg0-of (h / have-org-role-91 :arg1 (c / class :mod (p4 / politics) :mod (v / venal)))))) :arg1 (i / impotent :location (a2 / area :quant (a3 / all))))
(p / possible-01 :arg1 (p2 / provide-01 :arg0 (p3 / person :mod (c / country :name (n / name :op1 "Singapore"))) :arg1 (a / answer-01 :arg0 (p4 / person) :arg2 (p5 / person :name (n2 / name :op1 "Simona")) :time (c2 / conference :mod (p6 / press)))) :time (a2 / after :op1 (c3 / country :mod (c4 / country))))
(s / say-01 :arg0 (p / person :arg0-of (v / vote-01) :mod (d / democracy :degree (m / most))) :arg1 (s2 / say-01 :arg0 (p2 / person :arg0-of (v2 / vote-01) :mod (d2 / democracy :degree (m2 / most))) :arg1 (s3 / say-01 :arg0 (p3 / person) :arg1 (m3 / made :arg1 (m4 / mind-05 :arg0 (p4 / person)) :arg2 (c / candidate :arg1-of (s4 / support-01 :arg0 (p5 / person))))) :degree (t / too) :time (b / before :op1 (s5 / start-01 :arg1 (c2 / contests :mod (p6 / primary))))))
(m / mud :arg0 (p / person :arg1-of (i / include-91 :arg2 (p2 / person :arg2-of (s / staff-01 :arg1 (i2 / i))))) :arg1 (l / leg :part-of (p3 / person)) :time (l2 / leg :part-of (p4 / person)))
(e / expect-01 :arg1 (t / this) :condition (s / see-01 :arg0 (w / we) :arg1 (i / integrate-01 :arg1 (e2 / eurozone :arg1-of (i2 / include-91 :arg2 (s2 / state :location (r / region)) :arg3 (m / most))) :arg2 (a / and :op1 (o / outskirts :mod (i3 / interest)) :op2 (p / process-02 :location (c / continent :name (n / name :op1 "Europe")))))) :mod (e3 / especially) :condition (e4 / expect-01))
(m / multi-sentence :snt1 (l / lose-02 :arg0 (a / and :op1 (p / person :mod (e / ethnic-group :mod (w / wealth))) :op2 (p2 / person :arg0-of (h / have-rel-role-91 :arg1 (g / girl) :arg2 (c / child))) :op3 (p3 / person :arg0-of (h2 / have-rel-role-91 :arg1 (g2 / girl) :arg2 (p4 / parent :mod (b / biology)))) :op4 (p5 / person :arg0-of (h3 / have-rel-role-91 :arg1 (g3 / girl) :arg2 (p6 / parent :mod (b2 / biology)))) :op5 (p7 / person :arg0-of (h4 / have-rel-role-91 :arg1 (g4 / girl) :arg2 (p8 / parent :mod (b3 / biology)))) :op6 (p9 / person :arg0-of (h5 / have-rel-role-91 :arg1 (g5 / girl) :arg2 (p10 / parent :mod (b4 / biology)))) :op6 (p11 / person :arg0-of (h6 / have-rel-role-91 :arg1 (g6 / girl) :arg2 (p12 / parent :mod (b5 / biology)))) :op6 (p13 / person :arg0-of (h7 / have-rel-role-91 :arg1 (g7 / girl) :arg2 (p14 / parent :mod (b6 / biology)))) :op6 (p15 / person :arg0-of (h8 / have-rel-role-91 :arg1 (g8 / girl) :arg2 (p16 / parent :mod (b7 / biology)))) :op6 (p17 / person :arg0-of (h9 / have-rel-role-91 :arg1 (g9 / girl) :arg2 (p18 / parent :mod (b8 / biology)))) :op6 (p19 / person :arg0-of (h10 / have-rel-role-91 :arg1 (g10 / girl) :arg2 (p20 / parent :mod (b9 / biology)))) :op7 (p21 / person :arg0-of (h11 / have-rel-role-91 :arg1 (g11 / girl) :arg2 (p22 / parent :mod (b10 / biology)))) :op7 (p23 / person :arg0-of (h12 / have-rel-role-91 :arg1 (g12 / girl) :arg2 (p24 / parent :mod (b11 / biology)))))) :snt2 (r / reunited :arg0 (g13 / girl :mod (y / young)) :arg1 (p25 / person :mod (y2 / young) :arg0-of (h13 / have-rel-role-91 :arg1 (g14 / girl) :arg2 (p26 / parent)))))
(s / say-01 :arg0 (p / person :name (n / name :op1 "McInnes")) :arg1 (t / team :polarity - :arg0-of (w / win-01 :arg1 (a / anything)) :arg0-of (w2 / win-01 :polarity - :arg1 (g / game) :arg1-of (r / resemble-01 :arg2 (t2 / that)))))
(r / record-01 :arg1 (p / person :name (n / name :op1 "Viitorul") :arg1-of (r2 / record-01 :accompanier (p2 / person :name (n2 / name :op1 "Hagi")) :prep-as (a / and :op1 (c / coach) :op2 (v / victories :quant 11) :op3 (d / defeats :quant 11)))) :time (a2 / after :op1 (y / year :mod (o / one))))
(a / and :op1 (b / become-01 :arg1 (c / company) :arg2 (i / insolvent :arg1 (c2 / company))) :op2 (t / terminated :arg1 (c3 / contract-02 :mod (t2 / this)) :mod (a2 / also) :time (a3 / after :op1 (p / pay-01 :arg1 (p2 / pay-01 :arg3 1500000 :arg1 (l / lei :quant 1500000)))) :mod (a4 / also)))
(s / say-01 :arg0 (t / they) :arg1 (p / possible-01 :arg1 (d / do-02 :arg0 (t2 / they) :arg1 (f / fine-04 :quant 1 :mod (j / just) :arg1-of (i / instead-of-91 :arg2 (a / and :op1 (p2 / person :arg0-of (h / have-rel-role-91 :arg1 (i2 / i) :arg2 (w / wife))) :op2 (p3 / person :arg0-of (h2 / have-rel-role-91 :arg1 (i3 / i) :arg2 (- / -rrb-)))))))))
(i / include-91 :arg1 (s / say-01 :arg0 (p / person :arg0-of (s2 / support-01 :arg1 (p2 / person :name (n / name :op1 "Clinton")))) :arg1 (t / thing :arg1-of (c / choose-01 :arg0 (p3 / person :name (n2 / name :op1 "Biden"))) :ord (o / ordinal-entity :value 2)) :arg2 (p4 / person :name (n3 / name :op1 "Sanders"))) :arg2 (p5 / person :arg0-of (s3 / support-01 :arg1 (p6 / person))))
(i / intend-01 :polarity - :arg0 (w / we) :arg1 (i2 / injured :arg0 (w2 / we) :arg1 (o / opponent)) :time (e / ever))
(s / say-01 :arg0 (p / person :name (n / name :op1 "Douglas" :op2 "Fierberg") :arg0-of (r / represent-01 :arg1 (f / family :arg1-of (h / have-org-role-91 :arg0 (p2 / person) :arg2 (m / member)))) :arg0-of (r2 / represent-01 :arg1 (f2 / family :arg1-of (h2 / have-org-role-91 :arg0 (p3 / person) :arg2 (m2 / member)))) :arg0-of (r3 / represent-01 :arg1 (f3 / family :arg1-of (h3 / have-org-role-91 :arg0 (p4 / person) :arg2 (m3 / member)))) :arg0-of (h4 / have-org-role-91 :arg1 (f4 / family :arg1-of (h5 / have-org-role-91 :arg0 (p5 / person) :arg2 (m4 / member))) :arg2 (a / attorney))) :arg1 (d / devastated :domain (f5 / family :quant (m5 / many :degree (t / too))) :arg1-of (c / cause-01 :arg0 (r4 / result-01 :arg1 (p6 / person :arg0-of (s2 / study-01)) :arg2 (d2 / die-01 :arg1 (p7 / person)) :frequency (r5 / rate-entity-91 :arg3 (t2 / temporal-quantity :quant (N / N-A) :unit (y / year)))))) :medium (s3 / statement))
(o / obligate-01 :arg1 (y / you) :arg2 (a / adopt-01 :arg0 (y2 / you) :arg1 (o2 / organization :name (n / name :op1 "EU")) :purpose (a2 / adopt-01 :arg0 (y3 / you) :arg1 (l / law :mod (h / health) :arg1-of (g / good-04 :polarity - :arg2 (a3 / and :op1 (v / vegetables) :op2 (m / meat)))))))
(s / say-01 :arg0 (p / person :name (n / name :op1 "Bellamy")) :arg1 (a / and :op1 (m / make-02 :arg0 (h / he) :arg1 (c / compare-01 :arg0 (h2 / he) :arg1 (g / game :poss (h3 / he)) :time (n2 / night :mod (s2 / saturday)) :prep-with (p2 / person :quant 1 :poss (w / we)) :time (n3 / night :mod (f / friday)))) :op2 (t / thing :arg1-of (s3 / say-01 :arg0 (p3 / person)))))
(s / say-01 :arg0 (p / person :name (n / name :op1 "Bellamy")) :arg1 (a / and :op1 (m / make-02 :arg0 (h / he) :arg1 (c / compare-01 :arg0 (h2 / he) :arg1 (g / game :poss (h3 / he)) :time (n2 / night :mod (s2 / saturday)) :prep-with (p2 / person :quant 1 :poss (w / we)) :time (n3 / night :mod (f / friday)))) :op2 (t / thing :arg1-of (s3 / say-01 :arg0 (p3 / person)))))
(r / reveal-01 :arg0 (f / fan :mod (f2 / female) :poss (h / he)) :arg1 (e / expect-01 :polarity - :arg0 (f3 / fan :mod (f4 / female) :poss (h2 / he)) :arg1 (s / something :arg1-of (e2 / expect-01 :polarity - :arg0 (f5 / fan :mod (f6 / female) :poss (h3 / he))))) :prep-as (p / person :name (n / name :op1 "Bradley" :op2 "Cooper")))
(s / swallowed :arg1 (a / amount :mod (a2 / additional) :quant (a3 / amount :mod (a4 / additional))) :arg1-of (q / quick-02) :arg1-of (m / make-01 :arg0 (d / demagogues :mod (p / populist))))
(s / say-01 :arg0 (p / person :name (n / name :op1 "Angel" :op2 "Ubide") :arg0-of (h / have-org-role-91 :arg1 (o / organization :name (n2 / name :op1 "Peterson" :op2 "Institute" :op3 "for" :op4 "International" :op5 "Economics")) :arg3 (o2 / ordinal-entity :value 1))) :arg1 (s2 / situation :location-of (p2 / possible-01 :arg1 (a / and :op1 (g / get-05 :arg1 (s3 / situation :arg1-of (m / major-02) :mod (c / central)) :arg2 (o3 / out-06 :arg1 (b / bank) :arg2 (t / thing))) :op2 (s4 / start-01 :arg0 (w / we) :arg1 (p3 / process-02 :arg1 (r / revive-01 :arg1 (r2 / rate :mod (i / interest)))))))) :ord (o4 / ordinal-entity :value 1))
(a / and :op1 (k / know-02 :arg1 (o / organization :name (n / name :op1 "Moody") :arg1-of (k2 / know-02 :arg2 (p / prepare-01 :arg1 (u / unbeaten))) :mod (g / good :degree (m / most)) :arg1-of (m2 / mean-01 :arg2 (p2 / prepare-01 :arg1 (u2 / unbeaten)))) :arg3 (p3 / prepare-01 :arg0 (o2 / organization) :arg1 (u3 / unbeaten))) :op2 (a2 / applied :arg1 (r / rule :purpose (t / treat-03) :mod (r2 / race-day)) :time (a3 / after :op1 (a4 / apply-02 :arg1 (p4 / poultice :mod (c / clay)) :arg2 (l / leg :part-of (p5 / person :arg0-of (o3 / oppose-01 :arg1 (r3 / rule))))))))
(s / say-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (c / company :name (n / name :op1 "BBC")) :arg2 (c2 / correspondent :mod (p2 / politics)))) :arg1 (s2 / stacking :arg1 (t / thing :arg1-of (d / differ-02) :mod (p3 / policy)) :mod (a / also) :arg1-of (f / follow-01 :arg2 (m / mr :arg1 (a2 / appoint-01 :arg0 (p4 / person :name (n2 / name :op1 "Corbyn")) :arg1 (p5 / person :name (n3 / name :op1 "Corbyn")) :arg2 (p6 / position-01 :arg1 (p7 / person) :arg2 (p8 / position-01 :arg1 (p9 / person) :arg2 (b / benefit-01)))))) :mod (a3 / also)))
(c / contrast-01 :arg2 (a / and :op1 (c2 / continue-01 :arg0 (p / person :name (n / name :op1 "Hagi")) :arg1 (p2 / policy :poss (p3 / person)) :purpose (p4 / promote-02 :arg0 (p5 / person) :arg1 (p6 / person :arg0-of (p7 / play-01) :mod (f / football) :mod (y / young)))) :op2 (i / include-01 :arg1 (n2 / name :arg1-of (n3 / name-01 :arg2 (n4 / name)) :example (o / or :op1 (p8 / person :name (n5 / name :op1 "Ianis" :op2 "Hagi")) :op2 (b / brotherhood))) :arg2 (t / team :arg0-of (s / start-01)) :time (l / lately))))
(v / vote-01 :arg0 (p / person :name (n / name :op1 "Ilie" :op2 "Sarbu")) :arg1 (p2 / person :arg0-of (h / have-org-role-91 :arg1 (o / organization :name (n2 / name :op1 "Court" :op2 "of" :op3 "Auditors")) :arg2 (p3 / president :mod (v2 / vice)))))
(p / possible-01 :polarity - :arg1 (l / look-01 :arg0 (i / i) :arg1 (s / she) :time (a / anymore)))
(b / byline-91 :arg2 (l / location :name (n / name :op1 "Chinatown")))
(t / tell-01 :arg0 (p / person :name (n / name :op1 "Eilidh" :op2 "Robertson") :arg0-of (h / have-org-role-91 :arg1 (o / organization :name (n2 / name :op1 "Dundee" :op2 "Sheriff" :op3 "Court")) :arg3 (l / lead-02 :arg0 (p2 / person)))) :arg1 (a / addict-01 :arg1 (p3 / person) :arg2 (a2 / addict-01)) :arg2 (a3 / addict-01 :arg1 (p4 / person) :arg2 (p5 / person :arg1-of (a4 / addict-01))))
(a / and :op1 (p / participate-01 :arg0 (p2 / person :name (n / name :op1 "Corneliu" :op2 "Vadim" :op3 "Tudor") :arg0-of (h / have-org-role-91 :arg1 (c / church) :arg2 (m / member))) :arg1 (c2 / church) :duration (t / temporal-quantity :quant (N / N-A) :unit (y / year))) :op2 (s / stay-01 :arg1 (p3 / person) :arg3 (b / beside :arg0 (p4 / person) :arg1 (a2 / and :op1 (p5 / person :arg0-of (h2 / have-org-role-91 :arg1 (o / organization :name (n2 / name :op1 "Holy" :op2 "Synod")) :arg2 (m2 / member))) :op2 (p6 / person :name (n3 / name :op1 "Daniel" :op2 "Ortega") :arg0-of (r / represent-01 :arg1 (p7 / patriarchates :quant 5 :arg0-of (a3 / attend-01 :arg1 (' / '' :mod (c3 / consecration))))))) :op3 (p8 / person :arg0-of (r2 / represent-01 :arg1 (p9 / patriarchates :mod (c4 / consecration)))) :op4 (p10 / person :arg0-of (r3 / represent-01 :arg1 ('2 / '' :mod (c5 / consecration)))) :op5 (p11 / person :arg0-of (r4 / represent-01 :arg1 ('3 / '' :mod (c6 / consecration)))))))
(a / ask-02 :arg0 (t / they) :arg1 (t2 / thing :mod (c / certain)) :arg2 (o / obtain-01 :arg0 (t3 / they) :arg1 (q / qualification)) :arg1-of (c2 / cause-01 :arg0 (m / material :purpose (t4 / train-01 :mod (p / physical) :arg1-of (h / hear-01 :polarity - :arg0 (i / i) :time (e / ever))))))
(f / find-01 :arg0 (i / i) :arg1 (t / thing :mod (t2 / this)) :time (b / before :op1 (n / now) :quant (m / multiple :op1 (t3 / temporal-quantity :quant (N / N-A) :unit (y / year)))) :arg1-of (c / cause-01 :arg0 (p / possible-01 :polarity - :arg1 (f2 / find-01 :arg0 (i2 / i) :arg1 (a / and :op1 (l / lab :mod (c2 / creativity)) :op2 (l2 / lab :mod (h / human))) :location (s / system :mod (t4 / this))))))
(s / say-01 :arg0 (t / they) :arg1 (a / and :op1 (e / exist-01 :polarity - :arg1 (s2 / service) :time (a2 / after :op1 (n / now) :quant (t2 / temporal-quantity :quant (N / N-A) :unit (y / year)))) :op2 (a3 / announce-01 :arg0 (p / press) :arg1 (c / cancelled :arg1 (s3 / service)))))
(p / possible-01 :arg1 (a / and :op1 (c / check-out-05 :arg0 (p2 / person) :arg1 (s / state :poss (b / body :poss (t / they)))) :op2 (r / receive-01 :arg0 (p3 / person) :arg1 (r2 / recommend-01 :arg1 (l / live-01 :arg0 (p4 / person :arg0-of (l2 / live-01 :arg1 (t2 / thing :manner-of (l3 / live-01)))))) :arg2 (d / doctor)) :op3 (f / fall-01 :polarity - :arg1 (h / health :poss (p5 / person)))) :medium (s2 / setting :arg1 (r3 / resort :mod (h2 / health))))
(c / cause-01 :arg1 (n / need-01 :polarity - :arg1 (f / fear-01 :arg1 (w / weather) :location (o / outside)) :arg1-of (c2 / cause-01 :arg0 (a / and :op1 (c3 / conducted :arg1 (m / majority :arg3-of (i / include-91 :arg2 (p / procedure)))) :op2 (d / dependant :polarity - :arg1 (p2 / procedure) :time (s / season)) :mod (e / especially)))))
(r / rise-01 :arg1 (f / figure :mod (t / this)) :arg2 (p / percentage-entity :value (N / N-A)) :location (j / june))
(m / manage-02 :arg0 (s / she) :arg1 (w / win-01 :arg0 (s2 / she) :arg1 (s3 / silver) :location (w2 / world :quant 2010)) :time (p / prior :op1 (t / this)) :mod (i / in-fact))
(a / and :op1 (j / join-01 :arg0 (s / she) :arg1 (t / team :mod (y / youth) :poss (c / country)) :arg1-of (q / quick-02)) :op2 (p / push-01 :arg0 (s2 / she) :arg1 (w / way :poss (t2 / team)) :arg2 (t3 / team :mod (n / nation) :mod (m / main)) :time (l / late :degree (m2 / more)) :mod (a2 / also)))
(h / have-concession-91 :arg1 (s / stage-01 :arg0 (s2 / she) :arg1 (b / break-through-26 :arg0 (s3 / she) :arg1 (t / take-01 :arg0 (c / country :name (n / name :op1 "United" :op2 "States")) :arg1 (a / and :op1 (s4 / star) :op2 (r / restaurant)) :arg2 (a2 / and :op1 (s5 / star) :op2 (r2 / restaurant)))) :arg2 (t2 / take-01 :arg0 (s6 / she) :arg1 (t3 / team :consist-of (a3 / and :op1 (s7 / star) :op2 (r3 / restaurant))) :arg4 (g / game :mod (o / olympic) :location (j / janeiro :name (n2 / name :op1 (d / de))))) :mod (r4 / real)) :arg2 (s8 / she) :mod (o2 / of-course))
(c / continue-01 :arg0 (g / girl) :arg1 (t / train-01 :arg0 (g2 / girl) :arg2 (s / swim-01 :arg0 (g3 / girl)) :manner (w / well :degree (v / very)) :location (l / level :mod (n / nation))))
(b / bear-02 :arg1 (a / antonov :name (n / name :op1 (o / oleg) :op2 (o2 / oleg))) :location (c / city :name (n2 / name :op1 "Moscow")) :destination (f / family :arg1-of (h / have-org-role-91 :arg0 (t / team :name (n3 / name :op1 (y / yaroslav) :op2 (v / volleyball) :op3 (a2 / antonov)) :mod (v2 / volleyball)) :arg2 (m / member))) :location (c2 / city))
(b / believe-01 :arg0 (p / person :arg1-of (e / expert-01)) :arg1 (c / continue-01 :arg1 (a / and :op1 (g / grow-01 :arg1 (r / relation-03 :arg0 (c2 / country :name (n / name :op1 "N-A")) :arg2 (w / west))) :op2 (p2 / possible-01 :arg1 (l / lead-03 :arg0 (c3 / country) :arg2 (a2 / attempt-01 :arg0 (c4 / country) :arg1 (c5 / change-01 :arg0 (c6 / country) :arg1 (p3 / power) :location (c7 / country)) :mod (a3 / another)))))))
FAILED_TO_PARSE#Number of opening and closing brackets doesn't match.
(s / suggest-01 :arg0 (p / person :arg0-of (s2 / support-01 :arg1 (c / country :name (n / name :op1 "N-A")))) :arg1 (p2 / possible-01 :arg1 (i / involve-01 :arg1 (p3 / person :mod (c2 / country :name (n2 / name :op1 "N-A"))) :arg2 (c3 / coup) :arg1-of (d / direct-02) :mod (a / also))) :mod (a2 / also))
(c / contrast-01 :arg2 (h / have-03 :arg0 (v / visit-01) :arg1 (v2 / value :mod (p / politics) :mod (a / additional)) :mod (a2 / also)))
(s / say-01 :arg1 (f / fear-01 :arg0 (y / you) :arg1 (c / change-01 :arg1 (r / regime) :arg1-of (c2 / cause-01 :arg0 (f2 / fear-01 :arg0 (i / it) :arg1 (c3 / change-01 :arg1 (r2 / regime)))))) :arg2 (m / mind :arg1-of (g / give-01 :arg0 (y2 / you))))
(g / go-03 :mode (i / imperative) :arg0 (y / you) :arg1 (a / and :op1 (g2 / get-05 :arg1 (p / person) :arg2 (c / couch)) :op2 (b / be-located-at-91 :arg1 (p2 / person) :arg2 (a2 / activity-06 :quant (s / some)))))
(r / release-01 :arg0 (a / authority) :arg1 (r2 / report-01 :arg0 (p / police) :arg1 (t / target-01 :arg0 (a2 / and :op1 (a3 / authority) :op2 (t2 / thing :arg1-of (r3 / report-01 :arg0 (a4 / authority)))) :arg1 (t3 / truck :mod (j / just)) :time (b / before :op1 (k / kill-01 :mod (b2 / bone :mod (j2 / just)))))) :arg2 (b3 / believe-01 :arg1 (w / work-01 :arg1 (k2 / killer :mod (s / serial)))))
(l / love-01 :arg0 (h / he) :arg1 (p / play-01 :accompanier (a / and :op1 (p2 / person :quant 2 :arg0-of (h2 / have-rel-role-91 :arg1 (h3 / he) :arg2 (b / brother))) :op2 (s / sing-01 :arg0 (h4 / he)))) :mod (a2 / also))
(g / get-03 :arg1 (i / it) :arg2 (g2 / good :degree (m / more)))
(s / say-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (o / office :poss (p2 / person :arg0-of (h2 / have-org-role-91 :arg1 (o2 / office :poss (p3 / person :arg0-of (h3 / have-org-role-91 :arg2 (g / governor))) :arg2 (s2 / spokesman))) :arg2 (s3 / spokesman))) :arg2 (s4 / spokesman))) :arg1 (c / come-01 :arg1 (r / request-01) :arg3 (a / and :op1 (v / vehicle :mod (h4 / high-water)) :op2 (b / boat) :op3 (s5 / sandbags))))
(i / identify-01 :arg0 (p / person :arg0-of (h / have-rel-role-91 :arg1 (c / child) :arg2 (g / grandparents))) :arg1 (h2 / he) :arg2 (c2 / cbs :arg0 (p2 / person) :arg1 (b / brown :mod (m / mahaj))))
(m / multi-sentence :snt1 (c / cause-01 :arg1 (a / appear-02 :arg1 (a2 / and :op1 (a3 / arm-01 :arg1 (p / person :quant (m2 / multiple) :arg1-of (a4 / arm-01)) :location (h / here)) :op2 (e / engage-01 :arg1 (p2 / person) :arg2 (p3 / person :arg0-of (h2 / have-org-role-91 :arg1 (p4 / police) :arg2 (c2 / captain))) :arg1-of (a5 / activity-06 :arg0 (p5 / person)) :arg1-of (a6 / activity-06 :arg0 (p6 / person)))))) :snt2 (t / tell-01 :arg0 (p7 / person :arg0-of (h3 / have-org-role-91 :arg1 (p8 / police :mod (p9 / philadelphia)) :arg2 (c3 / captain))) :arg1 (s / station)))
(a / and :op1 (n / need-01 :arg0 (p / person :arg0-of (h / have-rel-role-91 :arg2 (d / dh))) :arg1 (a2 / act-02 :arg0 (p2 / person) :time (n2 / now))) :op2 (c / consult-01 :arg0 (p3 / person) :arg1 (p4 / person :mod (j / junior) :arg0-of (c2 / concern-02 :arg1 (' / '')) :mod (j2 / junior))))
(a / and :op1 (t / ticagrelor :arg0 (f / firm :name (n / name :op1 (a2 / astrazeneca) :op2 (a3 / astrazeneca)) :arg1-of (m / make-01 :arg0 (f2 / firm :mod (c / country :name (n2 / name :op1 "N-A"))))) :arg1 (t2 / thing :arg2-of (n3 / name-01 :arg1 (f3 / firm :mod (c2 / country :name (n4 / name :op1 "N-A")))) :arg1-of (s / sell-01 :prep-under (n5 / name :op1 (b / brilique) :op2 (b2 / brilique))))) :op2 (l / likely-01 :arg1 (r / risk-01 :arg0 (r2 / risk-01 :mod (t3 / this)) :arg2 (l2 / likely-01 :degree (l3 / less)))))
(m / multi-sentence :snt1 (c / concern-01 :arg0 (t / that)) :snt2 (t2 / turn-02 :arg0 (i / institution :mod (s / state)) :arg1 (e / eye :mod (b / blind-02)) :arg2 (b2 / behave-01 :mod (s2 / such)) :arg1-of (c2 / cause-01 :arg0 (c3 / correct-02 :arg1 (o / over-sensitivities :manner (p / political) :topic (a / and :op1 (e2 / ethnicity) :op2 (r / religion)))))))
(a / and :op1 (r / represent-01 :arg0 (y / you) :arg1 (a2 / and :op1 (c / cbc) :op2 (c2 / canada))) :op2 (m / make-02 :arg0 (y2 / you) :arg1 (s / sound-01 :arg1 (w / we :quant (a3 / all)) :arg2 (r2 / racist :quant (b / bunch)))))
(c / cause-01 :arg0 (n / nothing :arg2-of (f / fortunate-01 :polarity -)) :arg1 (l / leave-14 :arg0 (h / he) :arg1 (a / anything :mod (m / more :compared-to (t / taste :arg1-of (b / bad-07) :location (m2 / mouth :part-of (h2 / he)))))))
(p / possible-01 :polarity - :arg1 (s / see-01 :arg0 (w / we) :arg1 (t / thing :arg1-of (b / believe-01 :arg0 (p2 / police))) :location (h / here)))
(s / say-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg2 (p2 / person :arg0-of (m / manage-01 :arg1 (e / enforce-01 :arg1 (n / neighbourhood)))))) :arg1 (f / fail-01 :arg1 (f2 / family) :arg2 (c / cooperate-01 :arg0 (f3 / family) :arg1 (a / authority :arg1-of (l / local-02)))))
(s / say-01 :arg0 (p / person :arg0-of (m / mr)) :arg1 (c / contrast-01 :arg1 (l / live-01 :arg0 (p2 / person :quant 3 :arg0-of (h / have-rel-role-91 :arg1 (p3 / person) :arg2 (s2 / son))) :location (p4 / property) :time (t / time :arg1-of (d / differ-02))) :arg2 (s3 / say-01 :arg0 (p5 / person) :arg1 (b / be-located-at-91 :arg1 (p6 / person) :arg2 (2 / 20s :poss (p7 / person))))))
(c / contrast-01 :arg1 (u / use-01 :arg1 (s / system) :arg2 (e / enterprise :mod (f / food) :quant (a / all)) :time (t / today)) :arg2 (a2 / and :op1 (b / be-located-at-91 :arg1 (s2 / system) :arg2 (c2 / country :name (n / name :op1 "United" :op2 "States")) :mod (a3 / also)) :op2 (b2 / be-located-at-91 :arg1 (s3 / system) :arg2 (c3 / country :name (n2 / name :op1 "United" :op2 "States")) :mod (a4 / also))) :time (t2 / today))
(s / say-01 :arg0 (p / person :arg0-of (l / lead-02 :arg1 (o / organization :name (n / name :op1 "senate" :op2 "democratic"))) :arg0-of (h / have-org-role-91 :arg1 (o2 / organization) :arg3 (l2 / lead-02))) :arg1 (c / convince-01 :arg0 (p2 / person) :arg1 (p3 / person :arg0-of (h2 / have-org-role-91 :arg3 (j / judge-01)) :arg0-of (n2 / nominate-01 :arg1 (p4 / person :arg0-of (h3 / have-org-role-91 :arg3 (j2 / judge-01)))) :arg0-of (h4 / have-org-role-91 :arg3 (j3 / judge-01))) :arg2 (p5 / person :arg0-of (h5 / have-org-role-91 :arg3 (j4 / judge-01))) :condition (e / elect-01 :arg1 (p6 / person) :arg2 (p7 / president))))
(m / multi-sentence :snt1 (a / agree-01 :arg0 (h / he) :arg1 (l / likely-01 :arg1 (a2 / and :op1 (l2 / likely-01 :arg1 (i / introverts :arg1 (p / person :arg0-of (p2 / purchase-01 :arg1 (r / record)) :arg0-of (p3 / purchase-01 :arg1 (r2 / record))) :degree (m2 / more)) :degree (m3 / more)) :op2 (a3 / add-01 :arg0 (p4 / person) :arg1 (s / smoke :mod (t / t :degree (t2 / total))))))) :snt2 (d / drink :arg0 (i2 / i) :degree (t3 / total)) :snt3 (d2 / drink-01 :arg0 (i3 / i) :degree (t4 / total)))
(l / lose-02 :arg0 (t / they) :arg1 1 :mod (j / just) :location (h / here))
(b / beat-03 :arg0 (p / person :mod (c / country :name (n / name :op1 "N-A"))) :arg1 (p2 / person :quant (2 / 20-5)) :arg2 (a / and :op1 (p3 / person :mod (c2 / country :name (n2 / name :op1 "N-A"))) :op2 (p4 / person :arg0-of (h / have-org-role-91 :arg1 (c3 / country) :arg3 (l / lead-02 :arg0 (p5 / person)))) :op3 (p6 / person :arg0-of (h2 / have-org-role-91 :arg1 (c4 / country) :arg3 (l2 / lead-02 :arg0 (p7 / person)))) :op4 (p8 / person :arg0-of (h3 / have-org-role-91 :arg1 (c5 / country) :arg3 (l3 / lead-02 :arg0 (p9 / person)))) :op5 (p10 / person :arg0-of (h4 / have-org-role-91 :arg1 (c6 / country) :arg3 (l4 / lead-02 :arg0 (p11 / person)))) :op6 (p12 / person :arg0-of (h5 / have-org-role-91 :arg1 (c7 / country) :arg3 (a2 / apprentice-01 :arg0 (p13 / person)))) :op6 (p14 / person :arg0-of (h6 / have-org-role-91 :arg1 (c8 / country) :arg3 (a3 / apprentice-01 :arg0 (p15 / person)))) :op6 (p16 / person :arg0-of (h7 / have-org-role-91 :arg1 (b2 / britain :mod (e / each))))) :time (e2 / early :degree (m / more) :time (d / day)))
(l / likely-01 :polarity - :arg1 (w / workweek :arg1 (p / precipitation)))
(f / find-02 :arg0 (p / panel :consist-of (p2 / person :arg0-of (h / have-org-role-91 :arg1 (c / country :name (n / name :op1 "N-A"))))) :arg1 (a / and :op1 (d / duty :mod (i / import-01) :mod (c2 / country :name (n2 / name :op1 "N-A")) :topic (a2 / and :op1 (p3 / paper) :op2 (r / refrigerator) :op3 (o / oil :mod (p4 / palm)))) :op2 (c3 / contravene :arg1 (r2 / rule :poss (o2 / organize-01)))))
(g / grow-01 :arg1 (s / share :poss (g2 / giant :name (n / name :op1 (p / pgnig)) :mod (g3 / gas) :mod (c / country :name (n2 / name :op1 "N-A")))) :arg4 (p2 / percentage-entity :value (N / N-A)) :arg4 (p3 / percentage-entity :value (N2 / N-A)) :compared-to (p4 / percentage-entity :value (N3 / N-A) :time (e / early :degree (m / more))))
(m / multi-sentence :snt1 (a / and :mode (i / interrogative) :op1 (p / possible-01 :arg1 (r / recite-01 :arg0 (i2 / i) :arg1 (g / gas))) :op2 (s / start-01 :arg0 (i3 / i) :arg1 (b / burn-01 :arg1 (e / eye))) :time (l / late :op1 (f / few :op1 (t / temporal-quantity :quant (N / N-A) :unit (m2 / minute))) :degree (m3 / more))) :snt2 (a2 / and :op1 (s2 / start-01 :arg0 (i4 / i) :arg1 (b2 / burn-01 :arg1 (e2 / eye))) :op2 (b3 / become-01 :arg1 (e3 / eye) :arg2 (d / difficult :arg1-of (s3 / say-01 :arg0 (g2 / graphic))))))
(e / exceed-01 :arg0 (v / volume :quant-of (m / monetary-quantity :arg1-of (s / save-01 :arg0 (m2 / merge-01 :arg1 (p / pension))))) :arg1 (r / roubles :quant 373))
(e / engage-01 :arg1 (g / group :arg0-of (p / pension) :arg0-of (p2 / pension) :arg1-of (a / aim-02 :arg2 (f / fund-01 :arg1 (f2 / fund :poss (a2 / and :op1 (c / continent :name (n / name :op1 "N-A")) :op2 (e2 / educate-01) :op3 (s / science)))))) :arg2 (r / recommend-01 :arg1 (j / join-01 :arg0 (a3 / and :op1 (p3 / person :mod (c2 / continent :name (n2 / name :op1 "N-A"))) :op2 (p4 / person :arg0-of (h / have-org-role-91 :arg2 (e3 / education))) :op3 (p5 / person :arg0-of (h2 / have-org-role-91 :arg2 (n3 / npfs)))) :arg1 (r2 / rank :mod (n4 / npf)) :time (b / by :op1 (e4 / end-01 :arg1 (y / year :mod (t / this)))))))
(h / have-concession-91 :arg1 (a / and :op1 (w / want-01 :arg0 (y / you) :arg1 (p / petting :arg0 (y2 / you) :arg1 (h2 / he))) :op2 (b / be-located-at-91 :arg1 (y3 / you) :arg2 (s / sense :mod (t / this)) :arg1-of (c / cause-01 :arg0 (h3 / have-03 :arg0 (h4 / he) :arg1 (a2 / advantage :arg1-of (o / obvious-01) :topic (d / dragons :arg1-of (k / know-02) :mod (o2 / other) :quant (a3 / all))))))) :arg2 (a4 / and :op1 (g / grunts) :op2 (p2 / purrs) :op3 (s2 / snorts :mod (e / even))))
(a / and :op1 (m / manage-02 :arg0 (w / we) :arg1 (s / switch-01 :arg0 (w2 / we) :arg1 (c / company :arg1-of (s2 / settle-03)))) :op2 (s3 / seem-01 :arg1 (o / okay-04 :arg1 (e / everything) :prep-with (t / this)) :time (n / now)) :prep-in (s4 / sum))
(b / be-located-at-91 :arg1 (a / and :op1 (c / ceremony :mod (m / meditation)) :op2 (c2 / ceremony :mod (r / religion))) :arg2 (p / person :arg0-of (r2 / represent-01 :arg1 (f / faiths :quant (a2 / all) :location (v / village)))) :prep-in (f2 / fact))
(m / multi-sentence :snt2 (a / and :op1 (m2 / mean-01 :mode (i / interrogative) :arg1 (t / thing :arg2-of (v / value-01 :arg1 (i2 / item))) :arg2 (a2 / and :op1 (i3 / item) :op2 (p / presence :poss (a3 / and :op1 (i4 / item) :op2 (p2 / presence)))) :op2 (p3 / presence :poss (a4 / and :op1 (i5 / item) :op2 (p4 / presence))))) :snt2 (a5 / and :op2 (s / show-01 :arg0 (i6 / it) :arg1 (t2 / thing :arg2-of (v2 / value-01 :arg1 (i7 / item)) :arg1-of (m3 / mean-01 :arg2 (a6 / and :op1 (i8 / item) :op2 (p5 / presence)))) :mod (a7 / also))))
(t / take-01 :arg0 (i / i) :arg1 1 :prep-for (i2 / i) :arg3 (i3 / i))
(c / cause-01 :arg0 (r / result-01 :arg1 (s / scheme :mod (t / this))) :arg1 (e / end-up-03 :arg1 (p / person :quant (m / more-than :op1 2000000000)) :arg2 (a / account :poss (b / branch :mod (b2 / branch :mod (s2 / samara)) :arg1-of (s3 / steal-01 :arg1-of (p2 / possible-01 :polarity -))))))
(j / jam :arg1 (t / traffic) :arg2 (d / distance-quantity :quant (N / N-A) :unit (m / mile)) :location (c / country :name (n / name :op1 "N-A")) :time (h / holiday :mod (s / summer :mod (s2 / short))))
(e / emerge-02 :arg0 (i / information :arg1-of (d / discover-01 :location (p / peshawar :location (e2 / east :part-of (c / city-district :name (n / name :op1 "N-A") :location (e3 / east)))))) :arg1-of (c2 / cause-01 :arg0 (r / result-01 :arg1 (p2 / problem :mod (t / technical)))))
(e / explode-01 :quant (s / series :quant (s2 / series)) :location (c / country :name (n / name :op1 "Thailand") :location (c2 / country :location (c3 / country :name (n2 / name :op1 "Thailand")))))
(a / and :op1 (i / intend-01 :arg0 (p / person :mod (c / country :name (n / name :op1 "N-A"))) :arg1 (e / examine-01 :arg0 (p2 / person) :arg1 (r / rule-01)) :ord (o / ordinal-entity :value 1)) :op2 (d / determine-01 :arg0 (p3 / person) :arg1 (s / step-01 :arg1 (p4 / person) :arg2 (t / take-01 :arg1 (p5 / person) :arg3 (o2 / or :op1 (c2 / challenge-01 :arg0 (p6 / person) :arg1 (p7 / person)) :op2 (c3 / challenge-01 :arg0 (p8 / person) :arg1 (p9 / person))) :mod (n2 / next)) :time (t2 / then))))
(a / and :op1 (k / kill-01 :arg1 (p / person :quant 5)) :op2 (i / injure-01 :arg1 (p2 / person :quant 20 :mod (a2 / another))))
(h / hope-01 :arg0 (w / we) :arg1 (a / and :op1 (a2 / arrive-01 :arg1 (t / team) :arg1-of (q / quick-02)) :op2 (p / provide-01 :arg0 (t2 / team) :arg1 (a3 / assist-01 :mod (p2 / professional) :arg1-of (n / need-01) :quant (a4 / all)) :arg2 (t3 / team))) :time (c / call-01 :arg0 (w2 / we) :arg1 (s / service :mod (e / emergency) :mod (e2 / emergency))))
(o / open-01 :arg0 (i / i) :arg1 (s / scoring :location (h / half :ord (o2 / ordinal-entity :value 1)) :prep-with (s2 / shoot-02 :mod (b / backhand) :arg1-of (c / close-10 :arg2 (c2 / close)))) :time (n / night :mod (t / thursday)))
(m / multi-sentence :snt1 (d / difficult :domain (a / and :op1 (h / hold-01 :arg0 (c / country :mod (t / this)) :arg1 (c2 / country :mod (t2 / this)) :manner (t3 / together)) :op2 (m2 / move-01 :arg1 (c3 / country) :direction (f / forward)))) :snt2 (h2 / hard-02 :arg1 (s / say-01 :arg0 (p / person :arg0-of (h3 / have-org-role-91 :arg1 (p2 / project :arg1-of (f2 / fame-01)) :arg2 (d2 / director :mod (p3 / project :mod (c4 / crisis :mod (i / international)))))) :arg1 (h4 / horn :arg0 (p4 / person :arg0-of (h5 / have-org-role-91 :arg1 (g / group :mod (c5 / crisis :mod (i2 / international))) :arg2 (d3 / director :mod (c6 / crisis :mod (i3 / international)))))))))
(w / work-01 :arg0 (a / and :op1 (s / service :mod (m / military) :mod (c / country :name (n / name :op1 "N-A"))) :op2 (s2 / service :mod (i / intelligence) :mod (c2 / country :name (n2 / name :op1 "N-A")))) :manner (c3 / close) :purpose (c4 / combat-01 :arg0 (a2 / and) :arg1 (t / threaten-01 :arg0 (t2 / terrorist) :path (a3 / across :op1 (r / region)))) :manner (c5 / close) :purpose (c6 / combat-01 :arg0 (a4 / and) :arg1 (t3 / threaten-01 :arg0 (t4 / terrorist) :location (a5 / across :op1 (r2 / region)))))
(m / multi-sentence :snt2 (e / explain-01 :arg0 (h / he) :arg1 (r / remark-01 :arg0 (h2 / he)) :manner (s / say-01 :arg0 (h3 / he) :arg1 (t / thing :arg1-of (r2 / remark-01 :arg0 (h4 / he))) :manner (s2 / say-01 :arg0 (h5 / he) :arg1 (t2 / thing :arg1-of (r3 / remark-01 :arg0 (h6 / he)))) :time (l / late :degree (m2 / more))) :time (a / after :op1 (d / draw-02 :arg0 (h7 / he) :arg1 (c / criticize-01 :arg0 (h8 / he) :arg1 (r4 / recommend-01 :arg1 (h9 / hack-04 :arg0 (p / person :arg0-of (h10 / have-org-role-91 :arg1 (c2 / city-district :name (n / name :op1 "N-A") :mod (m3 / mrs.)))) :arg1 (t3 / thing :arg1-of (r5 / remark-01 :arg0 (p2 / person))))))))))
(g / grimaced :name (n / name :op1 (m / mr.) :op2 (c / coe) :op3 (c2 / coe)))
(a / and :op1 (f / focus-01 :arg0 (w / we) :arg2 (f2 / focus-01 :arg0 (w2 / we) :arg2 (a2 / and :op1 (c / calories) :op2 (n / nutrition)) :arg1-of (c2 / continue-01))) :op2 (a3 / apply-02 :arg1 (s / science :mod (w3 / way)) :arg2 (c3 / cooking)))
(m / make-01 :arg0 (a / and :op1 (p / person :name (n / name :op1 "kamensky")) :op2 (p2 / person :arg0-of (h / have-org-role-91 :arg2 (g / grigoryan)))) :arg1 (i / it) :arg2 (f / final :part-of (c / compete-01 :name (n2 / name :op1 (s / shooting) :op2 (s2 / shooting) :op3 (s3 / shooting) :op4 (s4 / shooting) :op5 (s5 / shooting) :op6 (s6 / shooting) :op7 (s7 / shooting)))))
(e / endorse-01 :arg0 (p / person :name (n / name :op1 "Clinton")) :arg1 (r / rule :arg1-of (n2 / name-01 :arg2 (p2 / person :arg0-of (i / invest-01))) :arg0-of (e2 / ensure-01 :arg1 (m / make-01 :arg0 (p3 / person :arg0-of (i2 / invest-01)) :arg1 (r2 / rate-entity-91 :arg1 (m2 / more-than :op1 (m3 / monetary-quantity :quant 1 :unit (d / dollar))) :arg2 (t / temporal-quantity :quant (N / N-A) :unit (y / year))) :arg3 (r3 / rate-entity-91 :arg1 (m4 / more-than :op1 (p4 / percentage-entity :value (N2 / N-A))) :arg2 (t2 / temporal-quantity :quant (N3 / N-A) :unit (y2 / year)))))))
(m / multi-sentence :snt1 (s / safe-01 :arg1 (s2 / say-01 :arg1 (b / break-01 :arg1 (p / person :arg0-of (t / tour-01) :mod (c / country :name (n / name :op1 "N-A")) :quant (n2 / number :mod (r / record) :time (y / year :mod (l / last))))))) :snt2 (s3 / say-01 :arg0 (h / he)))
(a / and :op1 (a2 / appear-01 :arg1 (i / information :topic (d / dismissal :mod (n / neskorodov))) :mod (o / only) :time (e / evening :mod (t / thursday))) :op2 (' / ' :arg1 (t2 / thing :arg2-of (r / respond-01) :arg1-of (w / wide-02)) :arg2 (m / media)))
(a / and :op1 (r / receive-01 :arg0 (i / industry) :arg1 (c / contract :arg1-of (l / long-03) :arg1-of (v / value-01 :arg2 (m / multiple :op1 (m2 / mass-quantity :quant (N / N-A) :unit (g / gram)))))) :op2 (l2 / love-01 :arg0 (i2 / industry) :arg1 (a2 / and :op1 (p / peace) :op2 (q / quiet)) :mod (b / big)))
(g / get-22 :arg0 (y / you) :arg1 (w / win-01 :arg0 (y2 / you) :arg1 (i / it) :arg2 (p / person :arg0-of (h / have-rel-role-91 :arg1 (y3 / you) :arg2 (s / significant-other)))))
(p / play :arg1 (t / thing :arg1-of (e / expect-01)) :time (a / after :op1 (s / showings :mod (e2 / exceptional) :mod (t2 / true) :mod (t3 / true) :arg1-of (e3 / enforce-01 :location (a2 / and :op1 (t4 / talk-02 :arg2 (b / beijing)) :op2 (t5 / thing :arg1-of (p2 / precede-01)))))))
(h / have-condition-91 :arg1 (r / reduce-01 :arg1 (a / and :op1 (e / electricity) :op2 (e2 / electricity) :op3 (m / market :quant (- / -93)) :op4 (m2 / market :quant (-2 / -93))) :arg1-of (s / significant-02)) :arg2 (g / go-01 :arg1 (p / plant :mod (t / that) :mod (t2 / that)) :arg3 (m3 / market) :arg1-of (s2 / significant-02)))
(d / decide-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (c / committee :mod (e / executive) :poss (c2 / country :name (n / name :op1 "N-A"))) :arg2 (c3 / committee :mod (e2 / executive)))) :arg1 (a / appoint-01 :arg0 (p2 / person) :arg1 (p3 / person :arg0-of (h2 / have-org-role-91 :arg1 (t / team :mod (f / football) :mod (c4 / country :name (n2 / name :op1 "N-A"))) :arg3 (p4 / post-01 :arg0 (p5 / person) :arg1 (c5 / coach :mod (h3 / head) :poss (t2 / team :mod (n3 / nation) :mod (n4 / nation) :mod (n5 / nation)))))) :arg2 (c6 / committee :mod (e3 / executive))))
(t / thing :domain (c / class :name (n / name :op1 (s / souped-up) :op2 (g / g) :op3 (g2 / g) :op4 (g3 / g) :op5 (g4 / g) :op6 (g5 / g) :op7 (g6 / g))))
(i / indicate-01 :arg0 (c / crisis) :arg1 (e / emerge-01 :arg0 (c2 / country :name (n / name :op1 "N-A")) :arg1 (c3 / crisis)))
(d / didn :arg0 (s / she) :arg1 (p / perform-02 :arg0 (s2 / she) :degree (t / total)) :arg1-of (c / cause-01 :arg0 (l / like-01 :arg0 (s3 / she) :arg1 (s4 / she))) :mod (r / rio))
(c / cause-01 :arg0 (a / and :op1 (s / show-01 :arg0 (g / government-organization :arg0-of (g2 / govern-01 :arg1 (c2 / city))) :arg1 (o / order :mod (i / iron))) :op2 (e / establish-01 :arg0 (g3 / government-organization) :arg1 (a2 / and :op1 (o2 / order) :op2 (m / member :arg2-of (h / have-org-role-91 :arg1 (c3 / committee :mod (d / duma)))) :op3 (m2 / member :arg2-of (h2 / have-org-role-91 :arg1 (c4 / committee :mod (d2 / duma)))) :op4 (m3 / member :arg2-of (h3 / have-org-role-91 :arg1 (c5 / committee :mod (d3 / duma)))) :op4 (m4 / member :arg2-of (h4 / have-org-role-91 :arg1 (c6 / committee :mod (d4 / duma))))))) :arg1 (t / tell-01 :arg0 (p / person :arg0-of (h5 / have-org-role-91 :arg2 (m5 / member))) :arg1 (a3 / aif)))
(p / putin :mode (i / imperative) :arg0 (y / you) :arg1 (a / ankara :mod (p2 / putin)) :arg1-of (c / cause-01 :arg0 (a2 / accuse-01 :arg1 (p3 / putin) :arg2 (a3 / ankara :arg1 (s / stabbing :mod (s2 / stab)) :location (b / back)))))
(c / cause-01 :arg0 (p / possible-01 :arg1 (b / bring-01 :arg0 (w / we) :arg1 (b2 / brand :mod (t / that)) :arg2 (b3 / back) :mod (a / again))) :arg1 (t2 / think-01 :arg0 (i / i) :arg1 (t3 / time)))
(b / bring-up-02 :arg0 (h / he) :arg1 (l / landmark :prep-with (c / company :ord (o / ordinal-entity :value 2) :arg0-of (w / win-01 :arg1 (n / night) :location (t / track :arg1-of (l2 / local-02) :poss (h2 / he))) :arg1-of (t2 / train-01 :arg2 (g / gosden :mod (j / john))))))
(h / have-concession-91 :arg2 (r / ride-01 :arg0 (c / country :name (n / name :op1 "N-A")) :arg1 (w / winners :mod (g / good :degree (m / most)) :arg1-of (s / see-01 :arg1-of (s2 / see-01 :arg0 (c2 / country))))) :manner (s3 / serious))
(k / know-03 :arg0 (n / no-one) :time (y / yet))
(m / multi-sentence :snt1 (c / contrast-01 :arg2 (c2 / claim-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg2 (o / official))) :arg1 (w / want-01 :arg0 (m2 / man :arg0-of (h2 / have-org-role-91 :arg2 (p2 / president :mod (p3 / potential)))) :arg1 (r / run-01 :arg0 (m3 / man) :arg1 (p4 / policy :mod (e / environment) :poss (c3 / country :name (n / name :op1 "Russia")))) :manner (s / sudden)))) :snt2 (m4 / meet-03 :arg0 (p5 / person :arg0-of (h3 / have-org-role-91 :arg2 (p6 / president :mod (p7 / potential)))) :manner (s2 / sudden)))
(o / operation :mod (d / delicate) :arg2-of (i / involve-01 :arg1 (t / tolerances :mod (p / precise :degree (e / extreme)) :mod (p2 / precise :degree (e2 / extreme)) :mod (p3 / precise :degree (e3 / extreme)))) :concession (a / and :op1 (s / size :poss (c / complete-01 :arg0 (a2 / and :op1 (s2 / size :poss (p4 / person :arg0-of (c2 / complete-01 :arg1 (v / viaduct)))) :op2 (w / weight :poss (b / bridge)))) :op2 (w2 / weight :poss (b2 / bridge)))))
(m / multi-sentence :snt1 (k / know-01 :polarity - :arg0 (c / company) :arg1 (g / go-01 :arg1 (a / amr-unknown :arg0-of (p / play-01 :arg1 (p2 / pokémon))))) :snt2 (s / see-01 :arg0 (c2 / company) :arg1 (d / data :mod (r / raw) :topic (l / level :mod (e / exercise))) :mod (j / just)))
(p / person :mod (d / dynamic) :prep-on (v / vault))
(m / multi-sentence :snt1 (c / contrast-01 :arg2 (s / signal-07 :arg0 (i / it) :arg1 (l / language) :mod (j / just))) :snt2 (s2 / say-01 :arg0 (s3 / she) :arg1 (s4 / sign :arg1-of (i2 / include-91 :arg2 (s5 / sign :poss (h / he))) :quant (s6 / some))))
(a / and :op1 (p / provide-01 :arg0 (w / we) :arg1 (a2 / and :op1 (f / free-03) :op2 (l / low-cost) :arg1-of (f2 / free-03)) :location (o / organization :poss (i / i))) :op2 (b / based :arg0 (w2 / we) :arg1 (y / youth :quant (o2 / over :op1 15000) :mod (u / urban)) :arg1-of (c / cause-01 :arg0 (a3 / and :op1 (b2 / black-04 :arg1 (y2 / youth :mod (u2 / urban) :quant (o3 / over :op1 15000)) :mod (p2 / primary)) :op2 (t / train-01 :arg0 (y3 / youth) :arg1 (a4 / and :op1 (c2 / champions :mod (n / nation)) :op2 (c3 / champions :mod (i2 / international))))))) :location (o4 / organization :poss (i3 / i)))
(m / multi-sentence :snt1 (s / say-01 :arg0 (i / i) :arg1 (d / die-01 :mode (i2 / interrogative) :arg1 (p / person :source (c / country :name (n / name :op1 "N-A")) :arg1-of (r / resemble-01 :arg2 (p2 / person :mod (c2 / country :name (n2 / name :op1 "N-A")))))) :mod (j / just)) :snt2 (d2 / die-01 :mode (i3 / interrogative)))
(k / know-01 :arg0 (i / i) :arg1 (k2 / know-01 :arg0 (i2 / i) :arg1 (a / amr-unknown :time-of (l / look :arg1 (w / woman :arg0-of (t / try-01 :arg1 (k3 / knickers :arg0 (w2 / woman) :arg1 (k4 / knickers :location (f / floor :mod (s / shop)) :location (m / middle :part-of (p / primark)))))))) :degree (t2 / total)))
(a / and :op1 (l / leave-17 :arg1 (w / wall) :accompanier (h / holes :mod (g / gaping))) :op2 (s / strewn :arg1 (r / rubbish) :location (o / over :op1 (f / floor))) :op3 (d / daubed :arg1 (w2 / wall) :location (w3 / wall :location (w4 / wall))))
(e / email-01 :arg1 (p / person :arg0-of (t / tour-01)) :arg2 (j / jet :name (n / name :op1 (s / skims) :op2 (b / beach) :op3 (b2 / beach) :op4 (b3 / beach) :op5 (b4 / beach) :op6 (b5 / beach) :op7 (b6 / beach))))
(a / and :op1 (b / become-01 :arg1 (i / inspect-01) :arg2 (h / hub :quant (m / more))) :op2 (f / face-01 :arg0 (b2 / business) :arg1 (f2 / fines :arg1 (r / roubles :quant 1000000))))
(m / multi-sentence :snt1 (a / agree-01 :arg0 (h / he) :arg1 (l / likely-01 :arg1 (a2 / and :op1 (l2 / likely-01 :arg1 (i / introverts :arg1 (p / person :arg0-of (p2 / purchase-01 :arg1 (r / record)) :arg0-of (p3 / purchase-01 :arg1 (r2 / record))) :degree (m2 / more)) :degree (m3 / more)) :op2 (a3 / add-01 :arg0 (p4 / person) :arg1 (s / smoke :mod (t / t :degree (t2 / total))))))) :snt2 (d / drink :arg0 (i2 / i) :degree (t3 / total)) :snt3 (d2 / drink-01 :arg0 (i3 / i) :degree (t4 / total)))
(w / warm :arg1 (a / air) :arg4 (t / temperature-quantity :quant 25) :time (d / day :time-of (w2 / warm :arg1 (a2 / air))))
(b / begin-01 :arg0 (d / department :name (n / name :op1 (v / volga) :op2 (d2 / district) :op3 (d3 / district) :op4 (d4 / district)) :arg0-of (t / transport-01) :mod (d5 / district) :poss (c / committee :arg0-of (h / have-org-role-91 :arg1 (c2 / committee :mod (i / investigative))))) :arg1 (p / process-02 :arg1 (l / land-01 :arg1 (d6 / department))))
(l / last-01 :arg1 (a / arrange-01 :arg1 (s / security) :arg1-of (s2 / special-02)) :arg2 (t / temporal-quantity :quant (N / N-A) :unit (d / day)))
(l / learn-01 :arg0 (i / i) :arg1 (a / ask-02 :arg0 (g / government-organization :arg0-of (g2 / govern-01)) :arg1 (a2 / approve-01 :arg0 (g3 / government-organization) :arg1 (p / propose-01 :arg0 (g4 / government-organization) :arg1 (t / term :mod (a3 / auction) :beneficiary (a4 / and :op1 (d / deposit :mod (g5 / gold)) :op2 (g6 / gearbox))))) :arg2 (t2 / thing :quant 2 :arg1-of (r / restrict-01) :arg1-of (k / key-02))))
(s / submit-01 :arg1 (t / thing :arg1-of (d / draft-01)) :arg2 (t2 / they :quant (m / multiple :op1 1)) :time (e / evening :mod (w / wednesday)))
(c / contrast-01 :arg2 (l / launch-01 :arg1 (m / merge-01 :arg1 (g / group :mod (t / this))) :time (l2 / late :degree (m2 / more) :quant (m3 / much) :compared-to (c2 / company :arg0-of (c3 / compete-02)))))
(h / have-03 :arg0 (p / person :arg0-of (h2 / have-org-role-91 :arg1 (t / team) :arg3 (a / apprentice-01 :arg0 (p2 / person)))) :arg1 (p3 / person :arg0-of (h3 / have-org-role-91 :arg1 (t2 / team) :arg3 (a2 / apprentice-01 :arg0 (p4 / person)))) :purpose (p5 / provide-01 :arg0 (p6 / person) :arg1 (p7 / person :arg0-of (r / reside-01 :arg1 (h4 / house)) :arg2-of (i / include-01 :arg1 (a3 / and :op1 (m / massage :arg1-of (r2 / relaxation)) :op2 (m2 / massage :mod (s / sports))))) :time (a4 / always)) :mod (o / of-course))
(h / headquarter-01 :arg1 (d / delegation :poss (w / we)) :location (a / across :op1 (p / province :name (n / name :op1 "N-A") :poss (w2 / we))))
(p / perform-02 :arg0 (p2 / person :name (n / name :op1 "andrei" :op2 "vladimirovich" :op3 "alexeev")) :arg1 (c / care-01 :arg0 (p3 / person) :arg1 (a / athletes :poss (t / team :name (n2 / name :op1 (a2 / abc)) :mod (c2 / country :name (n3 / name :op1 "N-A")))) :mod (s / spiritual)) :manner (b / blessing :poss (a3 / and :op1 (m / moscow) :op2 (r / russia :quant (a4 / all)))))
(c / choose-01 :arg0 (i / i) :arg1 (a / and :op1 (c2 / cod :mod (s / steam)) :op2 (m / meatballs :location (s2 / sauce :mod (t / tomato)))) :arg1-of (p / personal-02))
(c / contrast-01 :arg1 (f / formulate-01 :arg1 (p / precise :degree (m / more)) :manner (p2 / precise :degree (m2 / more))) :arg2 (f2 / formulate-01 :arg1 (a / answer-01) :manner (w / way :mod (s / such)) :arg1-of (m3 / mean-01 :arg2 (t / thing :arg2-of (a2 / advise-01 :arg0 (t2 / they) :arg1 (i / it) :arg1-of (s2 / strong-02) :arg1-of (s3 / strong-02))))))
(p / possible-01 :arg1 (a / amount-01 :arg1 (r / revenue :mod (t / tax-01)) :arg2 (b / budget :quant 80.9)) :time (o / operate-01 :arg1 (a2 / and :op1 (m / mine-01) :op2 (p2 / process-01))))
(c / contrast-01 :arg2 (l / limit-01 :polarity - :arg1 (i / involve-01 :arg1 (e / enterprise :poss (p / person :arg0-of (h / have-org-role-91 :arg2 (h2 / head-of-state))))) :arg2 (a / and :op1 (t / thing :arg1-of (c2 / contribute-01 :arg0 (e2 / enterprise))) :op2 (d / develop-02 :arg1 (a2 / area :location-of (o / operate-01 :arg0 (e3 / enterprise)))))))
(m / musician :polarity - :domain (h / he) :mod (p / professional))
(s / say-01 :arg0 (s2 / source) :arg1 (i / involve-01 :arg1 (a / and :op1 (a2 / agency :mod (f / fbi)) :op2 (a3 / agency :mod (o / other) :mod (c / country :name (n / name :op1 "N-A")))) :arg2 (i2 / involve-01 :arg1 (a4 / and) :arg2 (c2 / cyber)) :mod (c3 / certain)))
(a / and :op1 (c / confirm-01 :arg0 (p / person :mod (c2 / country :name (n / name :op1 "N-A"))) :arg1 (c3 / claim-01 :mod (t / this))) :op2 (f / find-02 :arg0 (p2 / person) :arg1 (a2 / and :op1 (a3 / abuse-01 :arg0 (c4 / company) :arg1 (t2 / thing :arg2-of (p3 / position-01 :arg1 (c5 / company)))) :op2 (f2 / force-01 :arg0 (c6 / company) :arg1 (c7 / company :arg0-of (m / manufacture-01 :arg1 (d / device :arg1-of (m2 / mobile-02)))) :arg2 (m3 / market)) :op3 (f3 / force-01 :arg0 (c8 / company) :arg1 (c9 / company :arg0-of (m4 / manufacture-01 :arg1 (d2 / device :arg1-of (m5 / mobile-02)))) :arg2 (i / install-01 :arg0 (c10 / company) :arg1 (a4 / apps :mod (o / other)) :path (s / store :name (n2 / name :op1 (g / google))))))))
(a / and :op1 (c / continue-01 :arg0 (s / staff :arg1-of (o / organize-01)) :arg1 (m / monitor-01 :arg0 (s2 / staff) :arg1 (s3 / situation :location (b / border-01 :arg2 (a2 / and :op1 (c2 / city :location (r / relative-position :op1 (c3 / city :location (c4 / country :name (n / name :op1 "N-A"))))) :op2 (c5 / chaplinka :location (c6 / country))))))) :op2 (p / paradise :location (g / gulf :mod (s4 / sivash))))
(m / multi-sentence :snt1 (w / wake-up-02 :arg1 (s / she) :location (b / blue :name (n / name :op1 (b2 / blue) :op2 (s2 / some) :op3 (s3 / some))) :location (b3 / blue :name (n2 / name :op1 (b4 / blue) :op2 (s4 / some)))) :snt2 (p / pick :arg0 (p2 / picked :ord (o / ordinal-entity :value 1)) :arg1 (s5 / sport) :arg2 (s6 / stick :poss (p3 / person :arg0-of (h / have-rel-role-91 :arg1 (s7 / she) :arg2 (s8 / sisters :mod (o2 / old :degree (m2 / more)))))) :time (a / and :op1 (p4 / play-02 :arg0 (p5 / person :quant 3 :arg0-of (h2 / have-rel-role-91 :arg1 (s9 / she) :arg2 (s10 / sisters :mod (o3 / old :degree (m3 / more))))) :arg1 (s11 / sport) :location (- / -rrb- :mod (d / drexel))) :op2 (j / join-01 :arg0 (p6 / person) :arg1 (t / team :mod (n3 / nation)) :time (b5 / become-01 :arg1 (p7 / person) :arg2 (t2 / thing :arg0-of (p8 / play-12 :arg2 (y / youngest))) :time (e / ever))))))
(c / contrast-01 :arg1 (c2 / come-01 :arg1 (p / person :mod (c3 / country :name (n / name :op1 "N-A"))) :arg4 (g / game) :manner (w / win-01 :polarity - :arg0 (p2 / person))) :arg2 (p3 / prove-01 :arg0 (t / team) :arg1 (a / and :op1 (t2 / tough-03 :arg0 (t3 / team) :arg0-of (s / surprise-01)) :op2 (k / keep-01 :arg0 (t4 / team) :arg1 (p4 / product-of :op1 (1 / 1-0) :op2 (12 / 1-0)) :time (u / until :op1 (l / late :op1 (l2 / late :op1 (l3 / late :op1 (l4 / late :op1 (l5 / late :op1 (l6 / late :op1 (l7 / late :op1 (l8 / late :op1 (l9 / late :op1 (l10 / late :op1 (l11 / late :op1 (l12 / late :op1 (l13 / late :op1 (13 / 1-0)))))))))))))))))))
(f / feel-01 :arg0 (e / event :prep-in (a / and :op1 (j / janeiro :mod (r / rio)) :op2 (i / inescapable :mod (d / de)))) :arg1 (a2 / and :op1 (c / constant) :op2 (i2 / inescapable)) :arg2 (a3 / and :op1 (c2 / compete-01 :mod (c3 / constant)) :op2 (i3 / inescapable)))
(a / and :op1 (r / rise-01 :arg1 (t / tension) :location (a2 / along :op1 (b / border-01 :arg2 (l / location :name (n / name :op1 "eritrea"))))) :op2 (b2 / battle-01 :location (a3 / along :op1 (b3 / border :mod (t2 / that)))) :op3 (c / claim-01 :arg0 (l2 / line :arg2-of (d / dispute-01)) :arg1 (l3 / live-01 :arg0 (l4 / line :arg2-of (d2 / dispute-01)) :location (j / june))) :time (t3 / time :arg1-of (s / same-01)))
(p / praise-01 :arg0 (p2 / person :arg0-of (h / have-org-role-91 :arg2 (p3 / person :arg1-of (e / expert-01 :arg2 (d / develop-01))))) :arg1 (p4 / person :arg0-of (l / lead-02 :arg1 (c / country :name (n / name :op1 "ethiopia")))) :arg2 (p5 / plan-01 :arg1 (i / infrastructure) :mod (v / visionary) :example (a / and :op1 (t / train :mod (n2 / new) :mod (c2 / commuter)) :op2 (s / stride :arg1 (f / fight-01 :arg1 (p6 / poverty))))))
(r / returns :mod (r2 / returns :mod (c / cafes)) :location (g / greenpoint :mod (g2 / greenpoint)))
(c / contrast-01 :arg1 (b / back :domain (s / she) :prep-on (c2 / coffee) :time (n / now)) :arg2 (g / go-06 :arg0 (s2 / she) :arg1 (c3 / coffee) :arg2 (a / and :op1 (d / drink-01 :arg0 (s3 / she)) :op2 (d2 / drink-01 :arg0 (s4 / she) :mod (n2 / new) :mod (a2 / another)))))
(s / say-01 :arg0 (p / photo) :arg1 (w / want-01 :arg0 (p2 / photo) :arg1 (a / and :op1 (e / experiment-01 :arg0 (h / he) :arg1 (i / ingredient :mod (n / new))) :op2 (i2 / introduce-02 :arg0 (h2 / he) :arg1 (i3 / ingredient :mod (n2 / new))))))
(a / add-01 :arg0 (p / person :arg0-of (h / have-rel-role-91 :arg1 (s / she) :arg2 (h2 / husband))) :arg1 (m / message-01 :arg0 (p2 / person) :arg1 (t / thing :manner-of (e / eat-01)) :mod (a2 / also)))
(m / make-18 :arg1 (c / calculation :quant (a / all)))
(m / multi-sentence :snt1 (s / say-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (p2 / political-party :name (n / name :op1 "N-A")))) :arg1 (r / return-01 :arg1 (i / i) :arg4 (t / turkey))) :snt2 (r2 / return-01 :arg1 (i2 / i) :arg4 (t2 / turkey) :condition (c / confirm-01 :arg1 (c2 / charge-05))))
(p / participate-01 :arg0 (p2 / person :arg0-of (s / study-01) :mod (h / hundred) :quant (s2 / several)) :arg1 (d / demonstrate-01) :purpose (e / express-01 :arg0 (p3 / person) :arg1 (d2 / dismay :arg0 (p4 / person) :arg1 (t / thing :arg1-of (p5 / plan-01)))))
(m / multi-sentence :snt1 (c / contrast-01 :arg1 (p / policy :mod (i / ideal) :domain (i2 / it)) :arg2 (p2 / policy :mod (i3 / ideal) :domain (i4 / it))) :snt2 (h / have-03 :arg0 (d / doesn :mod (s / state)) :arg1 (i5 / instrument :mod (o / other) :mod (a / any)) :degree (t / total)))
(a / admit-01 :arg0 (i / i) :arg1 (f / fall-01 :arg1 (t / thing :arg1-of (f2 / fall-01 :arg4 (t2 / track))) :arg4 (t3 / track) :arg1-of (f3 / follow-01 :arg2 (s / start-01 :mod (p / poor))) :manner (d / deliberate)) :time (a2 / after :op1 (t4 / triumphing :arg1 (a3 / and :op1 (k / kenny :quant 2012) :op2 (h / hoy)))))
(d / dispute-01 :arg0 (h / he) :arg2 (a / ahead :op1 (r / ride :arg0 (h2 / he)) :time (y / yesterday)) :time (s / summoned :arg0 (p / person :arg0-of (h3 / have-org-role-91 :arg2 (o / official))) :arg1 (h4 / he) :arg2 (m / measure-01 :arg0 (p2 / person) :arg1 (h5 / high-02 :arg1 (h6 / he)))))
(i / include-01 :arg1 (a / and :op1 (c / campbell :mod (n / naomi)) :op2 (e / evangelista :mod (l / linda)) :op3 (m / moss :mod (k / kate))) :arg2 (w / woman :time (p / previous)))
(c / create-01 :arg0 (w / we) :arg1 (a / and :op1 (j / job :quant 10000 :mod (n / new)) :op2 (j2 / job :quant 40000 :mod (n2 / new)) :op3 (j3 / job :quant 40000 :mod (n3 / new))) :arg0-of (c2 / cause-01 :arg1 (e / end-01 :arg1 (e2 / end-01 :arg1 (e3 / employ-01 :polarity -) :location (a2 / around :op1 (a3 / airport))))))
(r / recommend-01 :arg1 (c / call-01 :arg0 (a / anyone :arg0-of (h / have-03 :arg1 (i / information :topic (i2 / incident :arg1-of (n / near-02 :arg2 (m / morges)))))) :arg1 (p / police) :arg2 (o / or :op1 (p2 / person :quant 021) :op2 (p3 / person :quant 021))))
(o / obligate-01 :arg2 (s / say-01 :arg0 (h / he) :arg1 (t / thing :arg0-of (i / impact-01 :arg1 (p / perform-01 :arg0 (t2 / team)))) :mod (a / also)))
(n / non-renewable :polarity - :arg1 (r / resource :arg1-of (k / key-02) :mod (n2 / namibia) :quant (a / all)))
(a / and :op1 (d / dated :arg0 (p / person :arg0-of (l / lead-02 :arg1 (p2 / political-party :name (n / name :op1 "N-A")))) :arg1 (f / find-01 :arg0 (p3 / person) :arg1 (y / yunatsite))) :op2 (s / say-01 :arg0 (p4 / person) :arg1 (o / old :domain (o2 / old :degree (m / more) :compared-to (g / gold :mod (v / varna))) :time (a2 / after :op1 (n2 / now) :quant (a3 / at-least :op1 (t / temporal-quantity :quant (N / N-A) :unit (y2 / year)))))))
(t / tell-01 :arg0 (a / and :op1 (p / person :arg0-of (h / have-rel-role-91 :arg1 (v / victim) :arg2 (b / brother))) :op2 (p2 / person :arg0-of (h2 / have-rel-role-91 :arg1 (v2 / victim) :arg2 (b2 / brother))) :op3 (p3 / person :arg0-of (h3 / have-rel-role-91 :arg1 (v3 / victim) :arg2 (g / galicia))) :op4 (p4 / person :arg0-of (h4 / have-rel-role-91 :arg1 (v4 / victim) :arg2 (g2 / galicia))) :op5 (p5 / person :arg0-of (h5 / have-rel-role-91 :arg1 (v5 / victim) :arg2 (g3 / galicia))) :op6 (p6 / person :arg0-of (h6 / have-rel-role-91 :arg1 (v6 / victim) :arg2 (s / station))) :op6 (p7 / person :arg0-of (h7 / have-rel-role-91 :arg1 (v7 / victim) :arg2 (s2 / station))) :op7 (p8 / person :arg0-of (h8 / have-rel-role-91 :arg1 (v8 / victim) :arg2 (c / child))) :op7 (p9 / person :arg0-of (h9 / have-rel-role-91 :arg1 (v9 / victim) :arg2 (c2 / child)))) :arg1 (j / job :arg1-of (d / dream-01 :arg0 (h10 / he)) :arg1-of (d2 / dream-01 :arg0 (h11 / he))) :arg2 (a2 / and :op1 (c3 / chef :mod (l / line)) :op2 (p10 / person :arg0-of (h12 / have-rel-role-91 :arg1 (v10 / victim) :arg2 (d3 / daughter)))) :time (b3 / before :op1 (n / now) :quant (t2 / temporal-quantity :quant (N / N-A) :unit (m / month))) :manner (f / frank))
(a / and :op1 (t / thing :arg1-of (t2 / think-01 :arg0 (w / we))) :op2 (c / condolence :topic (a2 / and :op1 (f / family :arg1-of (h / have-org-role-91 :arg0 (w2 / we) :arg2 (m / member))) :op2 (p / person :arg0-of (h2 / have-rel-role-91 :arg1 (w3 / we) :arg2 (f2 / friend)))) :time (d / difficult :mod (t3 / this))))
(s / say-01 :arg0 (p / person :name (n / name :op1 "N-A")) :arg1 (p2 / possible-01 :polarity - :arg1 (t / think-01 :arg0 (p3 / person) :arg1 (a / anyone :arg0-of (w / want-01 :arg1 (h / hurt-01 :arg0 (a2 / anyone) :arg1 (p4 / person :mod (y / young :degree (m / more)) :arg0-of (h2 / have-rel-role-91 :arg1 (h3 / he) :arg2 (b / brother :mod (y2 / young :degree (m2 / more)))))))))))
(s / state-01 :arg0 (b / bank :mod (c / central) :poss (c2 / country)) :arg1 (r / represent-01 :arg0 (n / number :mod (t / this)) :arg1 (r2 / report-01 :arg1-of (h / high-02 :mod (h2 / historic)))))
(r / report-01 :arg1 (d / debt :mod (n / nation) :arg1-of (d2 / draw-02 :arg2 (p / product-of :op1 2015 :op2 (p2 / product :arg1-of (g / gross-03) :mod (d3 / domestic) :poss (c / country)))) :time (e / end-01 :arg1 (m / multiple :op1 2015))) :time (e2 / early :degree (m2 / more)))
(c / contrast-01 :arg2 (f / feel-01 :arg0 (p / person :arg0-of (v / visit-01) :quant (a / about :op1 (p2 / percentage-entity :value (N / N-A)))) :arg1 (s / stress-01)))
(r / require-01 :arg0 (c / consume-01 :arg1 (w / water)) :arg1 (a / adhere-02 :arg1 (r2 / regime :arg0-of (r3 / recommend-01 :arg1 (d / drink-01 :arg1 (w2 / water))))) :arg1-of (c2 / cause-01 :arg0 (a2 / and :op1 (r4 / recommend-01 :arg1 (d2 / drink-01 :arg1 (w3 / water) :time (t / time :mod (p / particular)))) :op2 (b / be-located-at-91 :arg1 (w4 / water) :arg2 (t2 / temperature :arg1-of (s / specific-02))))))
(r / represent-01 :arg0 (f / figure :mod (t / this)) :arg1 (d / decline-01 :degree (m / most)) :time (s / since :op1 (b / begin-01 :arg1 (t2 / thing :quant 2015))))
(s / say-01 :arg0 (d / data :source (c / country :name (n / name :op1 "Russia")) :time (l / late :degree (m / most))) :arg1 (e / exceed-01 :arg0 (d2 / data :mod (e2 / economy) :poss (c2 / country)) :arg1 (p / percentage-entity :value (N / N-A)) :arg4 (p2 / percentage-entity :value (N2 / N-A))))
(s / say-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg2 (p2 / person :arg1-of (e / expert-01)))) :arg1 (t / thing :domain (r / recession-02 :arg1 (c / country :name (n / name :op1 "N-A")) :mod (e2 / economy)) :time (p3 / past)))
(d / differ-02 :arg1 (s / story :mod (b / behind :op1 (c / change-01 :arg1 (n / nationality)))) :prep-in (c2 / case :mod (e / each)))
(c / contrast-01 :arg1 (g / gymnast :mod (a / another)) :arg2 (g2 / gymnast :domain (g3 / gymnast :mod (a2 / artistic)) :time (t / time :mod (t2 / this))))
(r / recognised :arg1 (y / yaroslav) :arg2 (t / thing :arg0-of (p / play-12 :arg2 (p2 / planet)) :mod (g / good :degree (m / most)) :location (p3 / planet)) :time (y2 / year :mod (j / just)))
(g / gambit :mod (t / turkish))
(a / and :op1 (f / fall-01 :arg1 (p / person :quant (a2 / about :op1 8) :arg2-of (t / total-01)) :arg2 (s / suspect-01) :arg2-of (t2 / total-01)) :op2 (l / like-01 :arg0 (p2 / person :arg0-of (h / have-org-role-91 :arg1 (m / military) :arg2 (p3 / personnel))) :arg1 (a3 / and :op1 (p4 / person :arg0-of (t3 / teach-01)) :op2 (s2 / scientist))) :arg2-of (t4 / total-01))
(r / reverse-01 :arg1 (s / situation) :time (s2 / short :degree (v / very)))
(b / brand :mod (s / small :degree (m / more)) :domain (b2 / brand :mod (s2 / small :degree (m2 / more)) :arg0-of (g / get-01 :arg1 (a / and :op1 (c / coutts :mod (p / prominent)) :op2 (a2 / adam) :op3 (c2 / company :name (n / name :op1 "N-A")) :op4 (b3 / bank :mod (m3 / military) :mod (h / holt))))))
(a / and :op1 (p / possible-01 :arg1 (d / do-02 :polarity - :arg0 (h / he) :arg1 (t / time :quant (s / some)))) :op2 (s2 / say-01 :arg0 (i / i) :arg1 (l / like-02 :arg0 (h2 / he) :arg1 (c / compete-02 :arg0 (h3 / he)) :time (u / until :op1 (a2 / age-01 :arg1 (h4 / he) :arg2 (a3 / at-least :op1 50)))) :time (p2 / previous)))
(c / contrast-01)
(m / multi-sentence :snt1 (s / spend-02 :arg0 (a / and :op1 (s2 / sport :poss (s3 / she)) :op2 (s4 / sport :poss (s5 / she))) :arg1 (s6 / sport :poss (s7 / she)) :time (b / before :op1 (n / now) :duration (t / temporal-quantity :quant (N / N-A) :unit (y / year)))) :snt2 (a2 / and :op1 (a3 / astonishing :arg0 (w / win-01 :arg0 (p / person :quant 15 :arg0-of (w2 / win-01 :arg1 (g / gold :quant 15 :mod (g2 / gold :name (n2 / name :op1 (c / championship))))))) :arg2 (m2 / mix-01 :arg1 (p2 / person) :arg2 (a4 / ambition))) :op2 (c2 / called :arg0 (p3 / person) :arg1 (g3 / gymnast :mod (g4 / great :degree (m3 / most)) :arg1-of (s8 / see-01 :arg0 (i / i) :time (e / ever))))))
(c / cause-01 :arg0 (c2 / continue-01 :arg1 (r / rain-01) :location (a / area :arg1-of (m / mobile-02))) :arg1 (w / watch-01 :arg1 (f / friday :mod (f2 / flood)) :location (a2 / alabama :location (s / south :part-of (s2 / strait)))))
(s / say-01 :arg0 (p / person :quant 62 :arg1-of (i / include-91 :arg2 (p2 / person :arg0-of (h / have-org-role-91 :arg2 (h2 / head-of-state))))) :arg1 (r / rise-01 :arg1 (w / water) :arg2 (c / creek :quant (m / more-than :op1 400) :source (h3 / house :poss (p3 / person))) :arg1-of (n / normal-02) :time (o / overnight) :arg1-of (q / quick-02)) :li 62)
(s / say-01 :arg0 (p / person :arg0-of (h / have-rel-role-91 :arg2 (g / grandparents))) :arg1 (c / contrast-01 :arg1 (s2 / suffer-01 :arg0 (p2 / person :arg0-of (h2 / have-rel-role-91 :arg2 (d / dd2))) :arg1 (w / wound-01 :arg1 (p3 / person) :quant (m / multiple)) :arg2-of (i / include-01 :arg1 (a / and :op1 (p4 / person :arg0-of (h3 / have-rel-role-91 :arg1 (h4 / he) :arg2 (g2 / groin))) :op2 (l / leg :part-of (p5 / person)) :op3 (a2 / arm) :op4 (a3 / abdomen)))) :arg2 (a4 / awake :arg1 (p6 / person) :time (t / transport-01 :arg1 (p7 / person) :arg3 (h5 / hospital)))))
(t / tell-01 :arg0 (p / person :arg0-of (i / investigate-01)) :arg1 (a / appear-02 :arg1 (p2 / philadelphia :arg0 (g / gunman :quant (m / multiple)))) :arg2 (p3 / person :arg0-of (i2 / investigate-01)))
(n / need-01 :arg0 (w / we) :arg1 (a / and :op1 (s / simone) :op2 (g / gabby) :op3 (l / laurie)) :arg1-of (c / cause-01 :arg0 (a2 / amr-unknown)))
(h / have-03 :arg0 (a / and :op1 (b / boorman :mod (a2 / aimee)) :op2 (c / coach :mod (s / simone)) :op3 (c2 / coach :mod (s2 / simone)) :op4 (c3 / coach :mod (l / laurie))) :arg1 (a3 / athletes :poss (t / they)) :time (s3 / since :op1 (s4 / start-01 :arg0 (t2 / they) :location (w / war :name (n / name :op1 "N-A")))))
(c / consider-02 :mode (i / imperative) :arg0 (y / you) :arg1 (o / option :purpose (r / require-01 :arg0 (p / person :arg0-of (v / vote-01)) :arg1 (p2 / produce-01 :arg0 (p3 / person) :arg1 (p4 / person) :time (b / before :op1 (v2 / vote-01))))))
(s / say-01 :arg0 (h / he) :arg1 (a / and :op1 (r / rahman :arg0 (c / court :mod (e / elect-01)) :arg1 (a2 / and :op1 (p / person :arg0-of (h2 / have-org-role-91 :arg2 (h3 / head-of-state))) :op2 (a3 / agent :poss (p2 / person))) :arg2 (l / litany :consist-of (a4 / and :op1 (c2 / corrupt-01 :arg1-of (c3 / corrupt-01)) :op2 (p3 / practice-01 :mod (l2 / law :polarity -))))) :op2 (s2 / say-01 :arg0 (h4 / he))))
(f / find-02 :arg1 (g / guilty-01 :arg1 (h / he)) :arg1-of (c / cause-01 :arg0 (d / doubt-01 :arg1 (s / standard :mod (c2 / criminal-03) :consist-of (t / thing :arg0-of (p / prove-01)) :mod (g2 / ground :quant (s2 / series))))))
(m / multi-sentence :snt1 (f / fortunate-01 :polarity - :arg2 (w / word)) :snt2 (s / sorry-01 :arg1 (w2 / we) :arg2 (e / event :mod (i / it))))
(m / multi-sentence :snt1 (l / like-02 :arg0 (i / i) :arg1 (a / apologize-01 :arg0 (i2 / i) :arg1 (a2 / apologize-01 :arg0 (i3 / i) :arg1 (c / comment-01 :arg0 (i4 / i) :arg1-of (m2 / make-01 :arg0 (i5 / i) :time (n / night :mod (l2 / last)) :time (a3 / after :op1 (c2 / convene-01 :arg1 (w / woman)))))))) :snt2 (s / say-01 :arg0 (h / he) :arg1 (p / person :arg2-of (s2 / staff-01 :arg1 (c3 / cbc)) :mod (o / olympic))))
(s / say-01 :arg0 (p / person :name (n / name :op1 "jenny" :op2 "davidson") :arg1-of (b / be-located-at-91 :arg2 (s2 / shop) :time (t / time)) :arg0-of (h / have-org-role-91 :arg1 (s3 / shop))) :arg1 (a / and :op1 (g / get-03 :arg1 (w / woman :mod (m / mystery)) :arg2 (o / out-06 :arg1 (w2 / woman) :arg2 (s4 / store)) :manner (b2 / buy-01 :polarity - :arg0 (w3 / woman) :arg1 (a2 / anything))) :op2 (w4 / walk-01 :arg0 (w5 / woman) :direction (o2 / out) :manner (b3 / buy-01 :polarity - :arg0 (w6 / woman) :arg1 (a3 / anything)))))
(r / recommend-01 :arg1 (c / come-01 :arg1 (h / hand) :location (u / under :op1 60)) :manner (c2 / compare-01))
(d / dirty-02 :arg1 (n / nothing) :degree (m / more) :compared-to (t / that))
(s / say-01 :arg0 (p / person :name (n / name :op1 "N-A") :arg0-of (h / have-org-role-91 :arg2 (r / regulator))) :arg1 (p2 / pursue-01 :arg0 (p3 / person) :arg1 (p4 / policy :mod (l / lend-01) :arg1-of (r2 / relate-01 :arg2 (i / invest-01 :arg2 (a / asset :arg1-of (f / fund-01 :arg0 (a2 / asset :arg1-of (f2 / fund-01 :arg0 (c / country))))))))))
(m / multi-sentence :snt1 (f / fined :domain (c / chain :consist-of (s / store :name (n / name :op1 (n2 / new) :op2 (b / book)) :mod (b2 / book) :mod (n3 / new) :consist-of (s2 / store)))) :snt2 (d / day :li 50 :time (u / until :op1 (s3 / suicide :poss (i / i)))) :li 50)
(c / confirm-01 :arg0 (s / source :source (b / book :mod (n / new))) :arg1 (c2 / concern-01 :arg0 (w / work-01 :arg0 (p / person :arg0-of (c3 / concern-02 :arg1 (w2 / work-01 :arg0 (p2 / person))))) :arg1 (i / incident)))
(p / probable :domain (a / ask-02 :arg0 (i / i) :arg1 (s / stop-01 :arg0 (c / camera) :arg1 (r / rolling :prep-for (b / bit :mod (n / next)))) :arg1-of (s2 / stand-01 :arg2 (a2 / and :op1 (m / man :mod (v / various) :location (s3 / some :arg1-of (i2 / include-91 :arg2 (s4 / store)))) :op2 (a3 / attempt-01 :arg0 (i3 / i) :arg1 (a4 / and :op1 (a5 / age :mod (e / emotional)) :op2 (d / disposition :mod (e2 / emotional))) :path (o / observation))))) :mod (p2 / probable))
(t / take-01 :arg0 (p / person :arg0-of (t2 / tour-01)) :arg1 (p2 / photograph-01) :location (a / and :op1 (p3 / photograph-01) :op2 (b / boy :mod (t3 / teenage)) :op3 (w / woman :mod (m / middle-aged))))
(w / window-shopping :arg1 (s / she) :arg1-of (i / instead-of-91 :arg2 (w2 / window-shopping :arg1 (s2 / spree :arg3-of (s3 / spend-01)))))
(s / say-01 :arg0 (h / he) :arg1 (p / provide-01 :arg0 (p2 / person :mod (c / country :name (n / name :op1 "N-A"))) :arg1 (p3 / point :mod (m / meet-03 :arg0 (p4 / person) :arg1 (a / and :op1 (r / refugee) :op2 (p5 / person :arg0-of (v / volunteer-01)))) :arg1-of (c2 / calm))))
(a / and :op1 (a2 / add-01 :arg0 (i / i) :arg1 (a3 / another :source (r / restart-01))) :op2 (b / be-located-at-91 :arg1 (h / half :ord (o / ordinal-entity :value 1)) :arg2 (t / temporal-quantity :quant (N / N-A) :unit (m / minute)) :mod (s / still)))
(m / much :degree (v / very) :domain (w / we) :time (m2 / moment))
(c / call-03 :arg0 (p / person :quant 2 :arg0-of (h / have-org-role-91 :arg1 (m / military :name (n / name :op1 "N-A")) :arg2 (m2 / military :name (n2 / name :op1 "N-A")))) :arg1 (c2 / construct-01 :arg1 (l / line :quant 2 :arg1-of (r / run-09 :arg2 (c3 / country)))) :arg2 (a / and :op1 (c4 / capacity :mod (t / total) :consist-of (g / gas :quant (b / between :op1 2 :op2 55) :unit (y / year)))))
(a / announce-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (c / country :name (n / name :op1 "N-A")) :arg2 (c2 / chief :mod (d / deputy) :topic (s / smm))) :arg0-of (h2 / have-org-role-91 :arg1 (c3 / country :name (n2 / name :op1 "N-A")) :arg2 (c4 / chief :mod (d2 / deputy)))) :arg1 (t / this))
(e / explode-01 :location (b / birthday :poss (p / person :arg0-of (h / have-org-role-91 :arg1 (c / country :name (n / name :op1 "N-A")) :arg2 (q / queen)))))
(o / obligate-01 :arg2 (p / participate-01 :arg0 (c / company :arg0-of (b / bid-01)) :arg1 (p2 / participate-01 :arg0 (s / state) :arg1 (c2 / capital :poss (c3 / company)) :quant (m / minimum :op1 25))) :ord (o2 / ordinal-entity :value 1))
(a / and :op1 (n / name-01 :arg0 (a2 / asset :arg1-of (i / include-91 :arg2 (a3 / asset :arg1-of (n2 / npfs :arg0 (a4 / asset :arg1-of (i2 / include-91 :arg2 (p / paragraph :part-of (t / top-15)))) :arg3 (m / multiple :op1 (t2 / temporal-quantity :quant (N / N-A) :unit (y / year))))))) :arg1 (p2 / person :arg0-of (h / head-01 :arg1 (a5 / and :op1 (i3 / infringe-01 :arg1 (i4 / influence-01 :arg0 (p3 / person :arg0-of (o / own-01 :arg1 (g / group))))) :op2 (p4 / person :arg0-of (h2 / have-org-role-91 :arg1 (g2 / group) :arg3 (l / lead-02 :arg0 (p5 / person)))))))) :op2 (p6 / possible-01 :arg1 (a6 / agree-01 :arg0 (p7 / person :arg0-of (o2 / own-01 :arg1 (g3 / group))) :arg1 (r / reason :arg1-of (p8 / possible-01) :mod (a7 / another) :mod (a8 / another)))))
(m / multi-sentence :snt1 (a / and :op1 (t / tried :arg1 (t2 / tandem :poss (a2 / and :op1 (l / lowery :name (n / name :op1 (d / david) :op2 (l2 / lowery))) :op2 (t3 / toby :name (n2 / name :op1 (s / screenwriter))) :op3 (h / halbrooks :name (n3 / name :op1 (t4 / toby)))))) :op2 (t5 / test-01 :arg1 (t6 / tandem))) :snt2 (d2 / dragon :mode (i / interrogative) :arg1 (p / project :topic (b / boy :arg1-of (g / grew :arg2 (n4 / name :op1 (j / james) :op2 (b2 / barrie) :op3 (f / fairy) :op4 (b3 / barrie) :op5 (b4 / barrie) :op6 (b5 / barrie) :op7 (b6 / barrie)))))))
(c / cause-01 :arg0 (s / see-01 :arg0 (i / i) :arg1 (i2 / it) :arg2 (e / eye :part-of (i3 / i))) :arg1 (i4 / i) :ord (o / ordinal-entity :value 1))
(i / include-91 :arg1 (p / person :quant 10 :arg0-of (t / tour-01) :mod (f / foreign)) :arg2 (v / victim) :arg1-of (c / cause-01 :arg0 (i2 / include-91 :polarity - :arg1 (c2 / citizen :mod (c3 / country :name (n / name :op1 "N-A"))) :arg2 (p2 / person))))
(p / person :arg1-of (e / employ-01 :arg0 (c / company :quant 3)) :arg0-of (c2 / confirm-01 :arg1 (d / discuss-01 :arg1 (t / thing :arg1-of (p2 / propose-01) :mod (s / such)))))
(a / and :op1 (g / go-08 :arg1 (a2 / and :op1 (n / news) :op2 (o / outrage-01 :arg0 (r / report-01 :arg0 (a3 / and :op1 (l / landslide) :op2 (m / motherboard))))) :arg2 (t / thing :arg1-of (r2 / report-01))) :op2 (s / say-01 :arg0 (a4 / and) :arg1 (d / dismantle-01 :arg0 (a5 / and) :arg1 (f / feature))))
(a / add-01 :arg0 (p / person :name (n / name :op1 "melissa" :op2 "gonzalez")) :arg1 (g / goal :mod (f / final) :time (p2 / period :ord (o / ordinal-entity :value 4))))
(r / reused :arg0 (i / it) :arg1 (l / lights) :arg2 (v / verb :mod (o / old)) :mod (e / even))
(p / possible-01 :arg1 (d / decide-01 :arg1 (d2 / decide-01 :time (a / after :op1 (n / now) :quant (b / between :op1 (t / temporal-quantity :quant (N / N-A) :unit (w / week)) :op2 (t2 / temporal-quantity :quant (N2 / N-A) :unit (w2 / week)))))))
(s / say-01 :arg0 (p / person :arg0-of (c / criticize-01 :arg1 (p2 / person :quant 2012 :arg0-of (h / have-org-role-91 :arg2 (p3 / president :mod (v / vice))))) :arg2-of (i / include-91 :arg1 (a / and :op1 (p4 / person :arg0-of (h2 / have-org-role-91 :arg2 (p5 / president :mod (v2 / vice)))) :op2 (p6 / person :arg0-of (h3 / have-org-role-91 :arg1 (f / fellow :mod (o / other))))))) :arg1 (r / refuse-01 :arg0 (p7 / person) :arg1 (r2 / raise-01 :arg0 (p8 / person) :arg1 (q / question-01 :arg1 (w / worth :domain (p9 / person) :arg1-of (v3 / value-01 :arg2 (a2 / and :op1 (m / monetary-quantity :arg1-of (c2 / contribute-01 :arg0 (p10 / person))) :op2 (t / thing :arg2-of (t2 / tie-01 :arg1 (p11 / person)) :mod (b / business) :mod (v4 / various)) :op3 (t3 / thing :arg2-of (t4 / tie-01 :arg1 (p12 / person)) :mod (b2 / business) :mod (v5 / various) :arg2-of (i2 / include-01 :arg1 (p13 / person :mod (c3 / country :name (n / name :op1 "N-A"))))))))))))
(i / involve-01 :arg1 (a / and :op1 (p / person :arg0-of (h / have-org-role-91 :arg2 (h2 / head-of-state))) :op2 (p2 / person :arg0-of (h3 / have-org-role-91 :arg2 (h4 / head-of-state))) :op3 (p3 / person :arg0-of (h5 / have-org-role-91 :arg2 (h6 / head-of-state))) :op4 (p4 / person :arg0-of (h7 / have-org-role-91 :arg2 (h8 / head-of-state)))) :ord (o / ordinal-entity :value 1))
(s / say-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg2 (d / dzhagaryan :mod (' / '')))) :arg1 (p2 / priority :quant 1 :domain (e / expand-01 :arg1 (t / trade-01) :mod (f / further)) :mod (f2 / further)) :mod (o / of-course))
(a / and :op1 (b / begin-01 :arg1 (d / develop-02 :arg1 (m / morpheus)) :location (b2 / back :quant 2007)) :op2 (e / expect-01 :arg1 (p / put-01 :arg1 (d2 / develop-02) :arg2 (c / commission :quant 2013))))
(m / multi-sentence :snt1 (b / be-located-at-91 :mode (i / interrogative) :arg1 (p / person :arg0-of (l / lead-02 :arg1 (c / country :name (n / name :op1 "N-A")))) :arg2 (a / amr-unknown)) :snt2 (s / step-01 :arg1 (l2 / leadership :mod (c2 / country :name (n2 / name :op1 "N-A"))) :arg2 (s2 / step-01 :arg1 (l3 / leadership) :arg2 (i2 / improve-01 :arg0 (l4 / leadership) :arg1 (p2 / professionalism :arg1 (t / troop :poss (c3 / country)))) :arg1-of (s3 / succeed-01))))
(c / claim-01 :arg0 (p / person :mod (c2 / country :name (n / name :op1 "N-A"))) :arg1 (w / win-01 :arg0 (p2 / person) :arg1-of (s / shock-01) :time (b / before :op1 (n2 / now) :quant (u / up-to :op1 (t / temporal-quantity :quant (N / N-A) :unit (y / year))))) :purpose (w2 / win-01 :arg0 (p3 / person) :arg1 (f / fifth :poss (g / golds :quant 6 :mod (o / olympic) :poss (h / he)))))
(s / say-01 :arg0 (c / company :arg0-of (h / have-org-role-91 :arg1 (c2 / company))) :arg1 (e / enter-01 :arg0 (c3 / company) :arg1 (c4 / contract-02 :arg1 (2 / 20-year :mod (22 / 20-year)) :arg1-of (c5 / cause-01 :arg0 (n / november :arg1 (y / year :mod (t / this))))) :arg1-of (c6 / cause-01 :arg0 (o / obligate-01 :arg2 (e2 / explain-01 :arg0 (c7 / company) :arg1 (t2 / thing :arg0-of (c8 / cause-01 :arg1 (p / pull-out-02 :arg1 (i / it) :arg2 (c9 / contract)))))))))
(w / write-01 :arg0 (p / person :name (n / name :op1 "ben" :op2 "williams") :arg0-of (h / have-org-role-91 :arg2 (s / spokesperson)) :arg0-of (h2 / have-org-role-91 :arg2 (s2 / spokesperson))) :arg1 (a / and :op1 (' / '' :arg1 (b / battle-01 :arg0 (a2 / and :op1 (c / community) :op2 (c2 / community)) :mod (s3 / sort :mod (t / this))) :time (s4 / since :op1 (b2 / block-01 :arg1 (a3 / advertise-01)))) :op2 (i / invented :arg1 (b3 / block :arg1-of (p2 / possible-01)) :time (s5 / soon :degree (m / more)) :arg1-of (c3 / cause-01 :arg0 (f / fix-02 :arg1 (a4 / advertise-01) :time (s6 / soon))))) :medium (p3 / post :mod (b4 / blog)))
(a / and :op1 (c / critical-02 :arg1 (l / law :name (n / name :op1 "N-A")) :arg2 (p / process-02 :mod (t / this))) :op2 (c2 / cause-01 :arg0 (s / support-01 :arg0 (g / government-organization :arg0-of (g2 / govern-01)) :arg1 (f / free-04 :arg1 (s2 / speak-01)) :arg1-of (s3 / strong-02)) :arg1 (i / important :domain (s4 / support-01 :arg0 (g3 / government-organization :arg0-of (g4 / govern-01)) :arg1 (f2 / free-04 :arg1 (s5 / speak-01))))))
FAILED_TO_PARSE#Number of opening and closing brackets doesn't match.
(s / state-01 :arg0 (p / person :arg0-of (r / represent-01 :arg1 (c / criminal-organization :name (n / name :op1 "N-A") :mod (c2 / country :name (n2 / name :op1 "N-A"))) :mod (p2 / permanent))) :arg1 (u / useful-05 :arg1 (m / meet-03 :arg0 (p3 / person :arg0-of (h / have-org-role-91 :arg1 (c3 / council :mod (s2 / security) :mod (c4 / country)) :arg2 (p4 / peninsula :name (n3 / name :op1 "Crimea")))) :time (p5 / previous)) :arg1-of (u2 / useful-05)))
(r / report-01 :arg0 (w / website :time (d / date-entity :decade (N / N-A))) :arg1 (c / compete-01 :arg0 (a / and :op1 (c2 / country :name (n / name :op1 "N-A")) :op2 (c3 / country :name (n2 / name :op1 "N-A")) :op3 (s / saidov :name (n3 / name :op1 (r2 / renat))) :op4 (a2 / allerstorfer :name (n4 / name :op1 (r3 / renat))) :op5 (a3 / allerstorfer :name (n5 / name :op1 (a4 / austrian) :op2 (a5 / allerstorfer)))) :location (a6 / and :op1 (t / talk-02 :arg2 1 :arg1 (t2 / thing :arg1-of (r4 / report-01 :arg0 (w2 / website)))) :op2 (c4 / compete-01 :arg0 (w3 / website :time (d2 / date-entity :decade (N2 / N-A)))))))
(s / state-01 :arg0 (b / bank :mod (c / central) :poss (c2 / country)) :arg1 (r / represent-01 :arg0 (n / number :mod (t / this)) :arg1 (r2 / report-01 :arg1-of (h / high-02 :mod (h2 / historic)))))
(c / come-01 :arg1 (t / team :mod (i / international) :consist-of (c2 / critic)) :arg4 (c3 / conclude-01 :arg1 (s / shark :arg1 (v / vertebrate :mod (l / longest-living) :arg0-of (l2 / live-01 :arg1-of (p / possible-01) :duration (a / approximately :op1 (t2 / temporal-quantity :quant (N / N-A) :unit (y / year)))) :arg1-of (p2 / possible-01)))))
(r / report-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (c / country :name (n / name :op1 "N-A")) :arg2 (p2 / president))) :arg1 (d / decree :arg0-of (a / amended :arg1 (g / government-organization :name (n2 / name :op1 "N-A") :poss (g2 / government-organization :name (n3 / name :op1 "N-A") :mod (s / security)))) :arg0-of (r2 / report-01 :arg1 (r3 / report-01 :arg0 (s2 / service :mod (p3 / press) :mod (k / kremlin))))))
(c / copper :arg1 (p / product :mod (c2 / chemical) :mod (o / only) :arg1-of (u / use-01 :arg2 (a / and :op1 (s / sulphate) :op2 (s2 / sulphur) :op3 (i / insecticidal)))) :time (e / end-01 :arg1 (s3 / summer)))
(c / contrast-01 :arg2 (s / signal-07 :arg1 (s2 / stabilisation :arg1 (e / economy :poss (c2 / country :name (n / name :op1 "N-A")))) :degree (m / more :mod (o / other))))
(m / multi-sentence :snt1 (c / contrast-01 :arg2 (p / possible-01 :arg1 (a / assume-02 :arg0 (w / we) :arg1 (s / slow-01 :arg1 (d / decline-01 :arg1 (r / rate :arg1-of (d2 / decline-01 :location (e / economy :poss (c2 / country :name (n / name :op1 "N-A")))))) :arg4 (p2 / percentage-entity :value (N / N-A)) :arg4 (p3 / percentage-entity :value (N2 / N-A)) :arg4 (p4 / percentage-entity :value (N3 / N-A)))))) :snt2 (s2 / say-01 :arg0 (p5 / person :arg0-of (a2 / analyze-01)) :arg1 (p6 / person :arg0-of (a3 / analyze-01 :arg1 (c3 / club :mod (f / forex))))))
(a / and :op1 (a2 / age-01 :arg1 (p / person :arg1-of (b / bear-02 :location (c / city :name (n / name :op1 "Moscow") :arg1-of (b2 / bear-02 :location (c2 / city :name (n2 / name :op1 "Moscow") :location 1985))))) :arg2 (t / temporal-quantity :quant (N / N-A) :unit (y / year)) :mod (j / just)) :op2 (i / immigrated :arg0 (f / family :arg1-of (h / have-org-role-91 :arg0 (p2 / person) :arg2 (m / member))) :arg1 (c3 / country :name (n3 / name :op1 "Israel"))))
(a / and :op2 (h / host-01 :arg1 (e / example :arg1-of (r / resemble-01 :arg2 (t / this))) :location (t2 / throughout :op1 (c / country))))
(m / multi-sentence :snt1 (f / find-01 :arg0 (h / he) :arg1 (p / person :mod (b / between :op1 (p2 / person :quant 2 :location (w / west)) :op2 (p3 / person :mod (c / country :name (n / name :op1 "N-A")))))) :snt2 (t / try-01 :arg0 (h2 / he) :arg1 (s / seek-01 :arg0 (h3 / he) :arg1 (b2 / benefit-01 :arg0 (h4 / he) :arg1 (p4 / person) :mod (m2 / maximum)))))
(v / vote-01 :arg0 (a / and :op1 (d / doctor) :op2 (p / person :arg0-of (s / study-01) :mod (j / junior))) :arg1 (r / reject-01 :arg0 (a2 / and) :arg1 (d2 / deal-01 :arg0 (a3 / and) :arg2 (d3 / deal-01 :arg0 (a4 / and) :arg2 (c / contract-02)))) :location (j2 / july))
(r / reject-01 :arg0 (p / person :quant 58 :arg1-of (i / include-91 :arg2 (p2 / person :arg0-of (v / vote-01 :arg1 (b / ballot))))) :arg1 (i2 / it))
(c / cause-01 :arg0 (g / get-02 :arg0 (p / person :arg0-of (m / mr)) :arg1 (a / apology :source (p2 / person :arg0-of (h / have-org-role-91 :arg2 (p3 / president))))) :arg1 (m2 / meet-03 :mod (t / this) :mod (o / only)) :time (a2 / after :op1 (a3 / all)))
(s / say-01 :arg1 (f / fear-01 :arg0 (y / you) :arg1 (c / change-01 :arg1 (r / regime) :arg1-of (c2 / cause-01 :arg0 (f2 / fear-01 :arg0 (i / it) :arg1 (c3 / change-01 :arg1 (r2 / regime)))))) :arg2 (m / mind :arg1-of (g / give-01 :arg0 (y2 / you))))
(t / tell-01 :arg0 (p / person :quant 2 :arg0-of (h / have-org-role-91 :arg2 (p2 / president))) :arg1 (h2 / hadn :arg0 (p3 / person) :arg1 (t2 / topic) :mod (e / even :degree (t3 / total))) :arg2 (c / conference :mod (p4 / press)) :time (a / after :op1 (t4 / temporal-quantity :quant (N / N-A) :unit (h3 / hour) :mod (a2 / almost) :arg1-of (t5 / talk-01 :time (i / initial)))))
(c / contrast-01 :arg1 (s / struggled :arg0 (h / he) :time (b / before :op1 (n / now) :quant (m / multiple :op1 (t / temporal-quantity :quant (N / N-A) :unit (y / year)))) :time (i / initial)) :arg2 (s2 / show-01 :arg0 (h2 / he) :arg1 (s3 / strength :poss (c2 / character :mod (c3 / character)) :purpose (a / and :op1 (d / defy-01 :arg0 (h3 / he) :arg1 (d2 / doubters)) :op2 (r / return-01 :arg1 (h4 / he) :arg4 (g / good :degree (m2 / most) :poss (h5 / he)))))))
(h / have-org-role-91 :arg0 (h2 / he) :arg1 (a / and :op1 (o / organization :name (n / name :op1 "Security" :op2 "Council") :arg0-of (h3 / have-org-role-91 :arg1 (c / country :name (n2 / name :op1 "N-A")) :arg2 (m / member) :time (f / former))) :op2 (m2 / member :arg2-of (h4 / have-org-role-91 :arg1 (s / service :mod (s2 / security) :mod (s3 / state)) :time (f2 / former)))) :arg2 (m3 / member) :arg1-of (r / resemble-01 :arg2 (m4 / mr)))
(o / operation :mod (d / delicate) :arg2-of (i / involve-01 :arg1 (t / tolerances :mod (p / precise :degree (e / extreme)) :mod (p2 / precise :degree (e2 / extreme)) :mod (p3 / precise :degree (e3 / extreme)))) :concession (a / and :op1 (s / size :poss (c / complete-01 :arg0 (a2 / and :op1 (s2 / size :poss (p4 / person :arg0-of (c2 / complete-01 :arg1 (v / viaduct)))) :op2 (w / weight :poss (b / bridge)))) :op2 (w2 / weight :poss (b2 / bridge)))))
(h / have-concession-91 :arg1 (p / possible-01 :polarity - :arg1 (r / rectify-01 :arg1 (e / exercise))))
(a / and :op1 (' / ' :arg0 (s / state) :arg1 (a2 / and :op1 (b / biles :arg1 (s2 / state)) :op2 (l / leave-11 :arg0 (s3 / state)) :op3 (e / embrace :arg0 (s4 / state))) :time (a3 / after :op1 (w / win-01 :arg0 (s5 / state) :arg1 (a4 / and :op1 (g / gold) :op2 (s6 / silver)) :mod (r / respective)))) :op2 (e2 / embrace :arg0 (s7 / state) :time (a5 / after :op1 (w2 / win-01 :arg0 (s8 / state) :arg1 (a6 / and :op1 (g2 / gold) :op2 (s9 / silver)) :mod (r2 / respective) :time (s10 / summer :quant 2016 :mod (s11 / summer :mod 2016) :location (o / olympics :name (n / name :op1 (d / de) :op2 (d2 / de) :op3 (f / final) :op4 (f2 / final) :op5 (f3 / final) :op6 (f4 / final) :op7 (f5 / final))))))))
(k / know-01 :arg0 (y / you) :arg1 (g / get-03 :arg1 (i / it) :arg2 (g2 / good :degree (m / more)) :beneficiary (y2 / you)))
(s / say-01 :arg0 (s2 / service :mod (w / weather)) :arg1 (p / possible-01 :arg1 (f / fall-01 :arg1 (s3 / snow :quant (b / between :op1 3 :op2 5)) :arg4 (o / over :op1 (a / area)))))
(t / tell-01 :arg0 (f / family) :arg1 (e / expect-01 :arg1 (r / recover-02 :arg1 (s / station))) :arg2 (f2 / family))
(a / and :op1 (a2 / arrest-01 :polarity -) :op2 (r / reviewing :arg0 (p / police) :arg1 (v / video :arg0-of (s / surveil-01)) :arg1-of (r2 / report-01)))
(p / provide-01 :arg0 (e / explode-01 :mod (t / this)) :arg1 (b / benefit-01 :arg1 (h / health :mod (g / good))) :arg2 (a / and :op1 (h2 / health :mod (g2 / good)) :op2 (s / succeed-01 :arg1 (h3 / health)) :op3 (s2 / succeed-01 :arg0 (b2 / benefit-01))))
(a / and :op1 (l / lead-03 :arg0 (c / culture :mod (p / politics)) :arg2 (e / eye :mod (b / blind-02))) :op2 (r / reveal-01 :arg0 (r2 / report-01 :arg0 (g / government-organization :arg0-of (g2 / govern-01) :arg0-of (d / devastate-01)) :arg0-of (d2 / devastate-01)) :time (t / today)))
(s / say-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (c / community) :arg2 (s2 / secretary :mod (c2 / community)) :time (f / former))) :arg1 (b / bad-07 :arg1 (p2 / person :arg0-of (v / vote-01 :arg1 (g / ground :mod (r / religious)))) :degree (s3 / so) :arg0-of (c3 / cause-01 :arg1 (r2 / recommend-01 :arg1 (a / allow-01 :arg1 (p3 / put-01 :arg1 (p4 / police) :arg2 (o / outside :op1 (s4 / station :mod (p5 / polling)) :purpose (p6 / protect-01 :arg0 (p7 / police) :arg1 (p8 / person :arg0-of (v2 / vote-01) :mod (f2 / frightened))))))))) :time (n / now))
(c / criticises :arg0 (h / he) :arg1 (i / inspect-01 :arg0 (d / department :name (n / name :op1 (i2 / ineffectual) :op2 (t / tick-box) :op3 (t2 / tick-box))) :arg1 (d2 / department :mod (r / register-02) :location (c2 / city :name (n2 / name :op1 "N-A")))) :mod (a / also))
(f / find-01 :arg1 (r / rubbish :mod (o / old)) :location (r2 / room :part-of (h / house)))
(i / issue-02 :arg0 (f / food :beneficiary (a / astronaut)) :time (t / time :mod (t2 / that)))
(f / fine :arg0 (p / person :mod (c / country :name (n / name :op1 "N-A"))) :arg1 (r / roubles :quant 438))
(m / multi-sentence :snt1 (s / stuff :arg1-of (i / include-91 :arg2 (s2 / stuff :arg1-of (g / get-01 :arg0 (i2 / i) :time (l / late)) :quant (l2 / lot))) :domain (s3 / stuff :arg1-of (g2 / get-01 :arg0 (i3 / i) :time (l3 / late :op1 (d / date-entity :decade (N / N-A))))) :li (7 / 70s)) :snt2 (p / probable :domain (g3 / get-03 :arg1 (i4 / i) :arg2 (y / young :degree (t / too :degree (b / bit)) :arg1-of (g4 / get-01 :arg0 (i5 / i) :arg1-of (s4 / say-01 :arg0 (h / he)))))))
(a / argue-01 :arg0 (o / office :poss (p / person :arg0-of (h / have-org-role-91 :arg2 (o2 / office :mod (c / calais))))) :arg1 (r / recommend-01 :arg1 (d / demolished :arg1 (p2 / place) :arg1-of (c2 / cause-01 :arg0 (r2 / represent-01 :arg0 (p3 / place) :arg1 (e / economy :mod (e2 / email) :arg0-of (p4 / pay-01 :polarity - :arg3 (t / tax)))))) :arg1-of (c3 / cause-01 :arg0 (c4 / carry-01 :arg0 (p5 / place) :arg1 (a2 / and :op1 (f / fire) :op2 (r3 / risk-01 :arg2 (s / sanitation)))))))
(m / multi-sentence :snt1 (a / and :op1 (c / charity :quant 2) :op2 (h / help-01 :arg0 (a2 / and :op1 (r / refugee) :op2 (a3 / and :op1 (r2 / refugee) :op2 (l / l))))) :snt2 (r3 / rise-01 :arg1 (n / number :location (c2 / camp :mod (d / distance-quantity :quant (N / N-A) :unit (i / inch)))) :arg4 (p / person :quant (o / over :op1 9,000) :arg1-of (h2 / high-02 :degree (m2 / most) :time (e / ever))) :time (a4 / after :op1 (s / summer) :mod (s2 / steep))))
(h / hold-04 :arg0 (b / branch :mod (l / library)) :arg1 (e / event :time (a / and :op1 (d / day :mod (c / city)) :op2 (d2 / day :mod (d3 / day :mod (e2 / even)) :part-of (f / film)))) :time (w / week :mod (t / this)))
(t / think-01 :arg0 (p / person :arg0-of (s / spend-02 :arg1 (t2 / thing :arg1-of (t3 / think-01 :arg0 (p2 / person)) :ord (o / ordinal-entity :value 1)))) :arg1 (s2 / spend-02 :arg0 (p3 / person) :arg1 (m / more :mod (l / little) :compared-to (a / attempt-01 :arg0 (p4 / person) :arg1 (p5 / process-02 :arg0 (p6 / person) :arg1 (p7 / process-02 :arg0 (p8 / person) :arg1 (p9 / process-02 :arg0 (p10 / person) :arg1 (p11 / process-02 :arg0 (p12 / person) :arg1 (p13 / process-02 :arg0 (p14 / person))))))))) :prep-in (i / immediate :poss (w / win-01)))
(m / much :degree (v / very) :domain (w / we) :time (m2 / moment))
(c / come-04 :arg1 (b / bomb :quant 2 :arg1-of (f / fill-01 :arg2 (g / gas :quant 2))) :arg2 (l / light) :time (s / soon :mod (s2 / soon)))
(c / contrast-01 :arg1 (b / bathroom :quant 1 :beneficiary (p / person :quant 4)) :arg2 (h / hypocrisy :domain (i / it) :mod (a / at-least)))
(c / contrast-01 :arg2 (u / use-01 :arg0 (m / mosque :quant (n / number)) :arg1 (l / language :mod (c2 / country :name (n2 / name :op1 "N-A"))) :manner (p / predominantly) :time (p2 / previous)))
(c / contrast-01 :arg2 (k / know-02 :arg0 (w / we) :arg1 (l / language :mod (t / tatar)) :arg3 (a / around :op1 (p / percentage-entity :value (N / N-A)))))
(s / share-01 :arg0 (p / pope) :arg1 (c / concept :prep-with (s2 / syria :arg1 (r / refugee))) :arg2 (s3 / syria))
(m / multi-sentence :snt1 (p / play-01 :mode (i / interrogative) :arg0 (s / slash :op1 (p2 / person :arg0-of (h / have-org-role-91 :arg2 (h2 / head-of-state))) :op2 (p3 / person :arg0-of (h3 / have-org-role-91 :arg2 (h4 / head-of-state))) :op3 (p4 / person :arg0-of (h5 / have-org-role-91 :arg2 (h6 / head-of-state))) :op4 (p5 / person :arg0-of (h7 / have-org-role-91 :arg2 (h8 / head-of-state))) :op5 (p6 / person :arg0-of (h9 / have-org-role-91 :arg2 (h10 / head-of-state))))) :snt2 (a / and :op1 (r / romeo) :op2 (j / juliet)))
(m / multi-sentence :snt1 (e / except-01 :arg1 (h / hack-04 :arg1 (p / picture :mod (u / url-entity :value (s / sony)))) :arg2-of (e2 / except-01)) :snt2 (r / responsible-03 :arg0 (d / database :time (d2 / date-entity :decade (N / N-A))) :location (t / thing :quant 2014 :arg1-of (r2 / responsible-03 :arg0 (p2 / person :mod (d3 / dprk)) :manner (o / official)))))
(a / argue-01 :arg0 (c / company :mod (c2 / country :name (n / name :op1 "N-A"))) :arg1 (g / grant-01 :arg0 (a2 / and :op1 (c3 / company :arg0-of (m / manufacture-01 :arg1 (a3 / access-01 :arg1 (c4 / component :mod (a4 / android))))) :op2 (t / thing :arg2-of (a5 / access-01 :arg1 (t2 / thing :arg1-of (a6 / access-01 :arg0 (c5 / company)))))) :arg1 (a7 / and :op1 (p / pre-installation :arg1 (a8 / application :mod (a9 / application :source (p2 / person :arg0-of (d / develop-02) :mod (o / other))))) :op2 (y / yandex :mod (p3 / particular)))))
(o / obligate-01 :arg1 (h / he) :arg2 (a / answer-01 :arg0 (h2 / he) :arg2 (e / extent :mod (f / fullest) :poss (l / law))) :time (n / now) :arg1-of (c / cause-01 :arg0 (o2 / open-01 :arg1 (c2 / case-03 :arg2-of (c3 / criminal-03) :arg1-of (r / relate-01 :arg2 (m / man :location (c4 / custody)))))))
(i / injure-01 :arg1 (p / person :quant 4 :arg0-of (r / reside-01 :arg1 (r2 / region :mod (v / volgograd)))) :manner (s / serious) :arg1-of (c / cause-01 :arg0 (j / journey :arg0 (p2 / person :quant 4 :arg0-of (r3 / reside-01)))))
(t / thing :quant 1 :arg1-of (b / base-02 :arg2 (s / show-04 :arg1 (s2 / statistic :mod (n / nation))) :mod (m / monthly)) :domain (i / inflation :location (b2 / bulgaria)))
(c / cause-01 :arg0 (t / tool :mod (l / lenses) :poss (i / it)) :arg1 (a / and :op1 (a2 / allow-01 :arg0 (p / person :arg0-of (u / use-01) :mod (d / day) :quant (s / some :op1 150000000)) :arg1 (r / reality)) :op2 (p2 / play-01 :arg0 (p3 / person) :manner (i2 / identity) :manner (w / way :mod (w2 / way :instrument-of (b / border-01 :arg1 (p4 / person) :arg2 (a3 / absurd)))))))
(r / reject-01 :arg0 (p / person :mod (o / other)) :arg1 (c / compare-01 :arg1 (a / anime)))
(a / and :op1 (r / retire-01 :arg0 (p / person :arg0-of (r2 / retire-01) :arg0-of (h / have-org-role-91 :arg2 (g / general)) :arg0-of (h2 / have-org-role-91 :arg2 (g2 / general)) :arg0-of (h3 / have-org-role-91 :arg2 (g3 / general)) :arg0-of (h4 / have-org-role-91 :arg2 (g4 / general)) :arg0-of (h5 / have-org-role-91 :arg2 (g5 / general)) :arg0-of (h6 / have-org-role-91 :arg2 (g6 / general)) :arg0-of (h7 / have-org-role-91 :arg2 (g7 / general)) :arg0-of (h8 / have-org-role-91 :arg2 (g8 / general)) :arg0-of (h9 / have-org-role-91 :arg2 (g9 / general)) :arg0-of (h10 / have-org-role-91 :arg2 (g10 / general)) :arg0-of (h11 / have-org-role-91 :arg2 (g11 / general)) :arg0-of (h12 / have-org-role-91 :arg2 (g12 / general)) :arg0-of (h13 / have-org-role-91 :arg2 (g13 / general)))))
(c / contrast-01 :arg1 (r / recommend-01 :arg1 (f / feat :arg1 (g / goal :quant 5) :manner (g2 / game :quant 2))) :arg2 (s / say-01 :arg0 (i / i) :arg1 (s2 / sure-02 :polarity - :arg1 (d / do-02 :arg0 (s3 / she) :arg1 (t / thing :arg1-of (s4 / same-01)) :time (e / ever)))))
(m / multi-sentence :snt1 (c / contrast-01 :arg2 (c2 / compete-02 :arg0 (a / and :op1 (p / person :arg0-of (h / have-org-role-91 :arg2 (h2 / head-of-state))) :op2 (p2 / person :arg0-of (h3 / have-org-role-91 :arg2 (h4 / head-of-state))) :op3 (p3 / person :arg0-of (h5 / have-org-role-91 :arg2 (h6 / head-of-state))) :op4 (p4 / person :arg0-of (h7 / have-org-role-91 :arg2 (h8 / head-of-state))) :op5 (p5 / person :arg0-of (h9 / have-org-role-91 :arg2 (h10 / head-of-state)))))) :snt2 (c3 / compete-02 :mode (i / imperative) :arg0 (y / you) :arg3 (g / gold)))
(r / resemble-01 :arg1 (i / it) :arg2 (c / close-10 :arg1 (c2 / compete-01 :mod (o / olympic)) :arg2 (z / zen)))
(a / and :op1 (b / be-located-at-91 :arg1 (a2 / and :op1 (q / qualifier :poss (w / woman)) :op2 (f / final :time (t / then))) :arg2 (d / date-entity :time (f2 / friday)) :time (d2 / date-entity :year (N / N-A))) :op2 (b2 / be-located-at-91 :arg1 (f3 / final) :arg2 (u / under :op1 (p / product-of :op1 1 :op2 (p2 / p.m.)))))
(k / kill-01 :arg1 (p / person :arg0-of (p2 / protest-01) :quant (m / many)) :arg1-of (h / have-concession-91 :arg2 (a / and :op1 (f / few :degree (m2 / more) :compared-to (f2 / few :op1 (t / temporal-quantity :quant (N / N-A) :unit (m3 / month)))) :op2 (p3 / pass-01 :arg1 (p4 / period :mod (u / unrest)) :arg1-of (q / quick-02 :degree (r / relative))))) :time (c / crack-down-06 :arg1 (e / ensuing)))
(s / say-01 :arg0 (p / person :name (n / name :op1 "N-A") :arg0-of (h / have-org-role-91 :arg1 (c / city-district :name (n2 / name :op1 "N-A") :name (n3 / name :op1 (m / mr.) :op2 (a / abdi))))) :arg1 (r / rope :mod (t / tight :degree (v / very)) :purpose (w / walk-01 :arg0 (p2 / person))))
(m / multi-sentence :snt2 (e / explain-01 :arg0 (h / he) :arg1 (r / remark-01 :arg0 (h2 / he)) :manner (s / say-01 :arg0 (h3 / he) :arg1 (t / thing :arg1-of (r2 / remark-01 :arg0 (h4 / he))) :manner (s2 / say-01 :arg0 (h5 / he) :arg1 (t2 / thing :arg1-of (r3 / remark-01 :arg0 (h6 / he)))) :time (l / late :degree (m2 / more))) :time (a / after :op1 (d / draw-02 :arg0 (h7 / he) :arg1 (c / criticize-01 :arg0 (h8 / he) :arg1 (r4 / recommend-01 :arg1 (h9 / hack-04 :arg0 (p / person :arg0-of (h10 / have-org-role-91 :arg1 (c2 / city-district :name (n / name :op1 "N-A") :mod (m3 / mrs.)))) :arg1 (t3 / thing :arg1-of (r5 / remark-01 :arg0 (p2 / person))))))))))
(b / buffets :arg1 (t / table :mod (c / country :name (n / name :op1 "N-A")) :mod (e / especially)) :time (b2 / before :op1 (d / depression :mod (b3 / before :op1 (d2 / depression)) :mod (e2 / especially))))
(a / abandon-01 :arg1 (w / way :quant (m / many) :arg1-of (i / include-91 :arg2 (w2 / way :mod (f / food) :mod (d / depression-era)))) :time (a2 / as-soon-as :op1 (g / get-05 :arg1 (c / country) :arg2 (f2 / foot :part-of (c2 / country)) :direction (b / back))))
(a / and :op1 (c / call-01 :arg1 (i / it) :arg2 (w / whipped :mod (p / prune))) :op2 (a2 / add-01 :arg0 (i2 / i) :arg1 (g / give-01 :arg0 (t / trick :mod (c2 / common)) :arg1 (n / name :mod (s / snazzy)))))
(a / and :op1 (p / present-01 :arg0 (p2 / person :arg0-of (h / have-org-role-91 :arg2 (m / minister :mod (a2 / affair :mod (f / foreign))))) :arg1 (i / information :mod (t / this))) :op2 (p3 / present-01 :arg0 (p4 / person :arg0-of (h2 / have-org-role-91 :arg1 (j / journalist :arg1-of (l / local-02)) :arg2 (m2 / minister))) :arg1 (i2 / information :mod (t2 / this))))
(p / possible-01 :arg1 (s / see-01 :arg1 (p2 / person :quant (s2 / some) :arg1-of (i / include-91 :arg2 (p3 / person :arg0-of (p4 / protest-01))) :arg0-of (p5 / participate-01 :arg1 (p6 / protest-01))) :location (w / wall :prep-against (p7 / person :arg0-of (h / have-org-role-91 :arg2 (p8 / president :mod (i2 / interim)))))))
(c / come-01 :arg1 (w / we :mod (a / all)) :arg4 (t / together) :time (b / before :op1 (n / now) :duration (t2 / temporal-quantity :quant (N / N-A) :unit (m / month))))
(s / say-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (p2 / person :name (n / name :op1 "N-A")))) :arg1 (e / enjoy-01 :arg0 (i / i) :arg1 (t / this :mod (t2 / this)) :time (n2 / now :quant 1) :mod (j / just)))
(c / cause-01 :arg0 (a / and :op1 (c2 / call-01 :arg0 (w / we) :arg1 (a2 / and :op1 (p / person :arg0-of (h / have-org-role-91 :arg2 (h2 / head-of-state))) :op2 (p2 / person :arg0-of (h3 / have-org-role-91 :arg2 (s / senator))) :op3 (p3 / person :arg0-of (h4 / have-org-role-91 :arg2 (s2 / senator))) :op4 (p4 / person :arg0-of (h5 / have-org-role-91 :arg2 (s3 / senator))) :op5 (p5 / person :arg0-of (h6 / have-org-role-91 :arg2 (s4 / senator)))) :arg2 (r / reverse-01 :arg1 (f / fund-01) :mod (t / this)) :time (i / immediate))) :arg1 (p6 / possible-01 :arg1 (g / get-01 :arg0 (p7 / person) :arg1 (h7 / help-01) :time (f2 / face-01 :arg0 (p8 / person) :arg1 (p9 / problem :arg1-of (l / legal-02))))))
(a / account-01 :arg0 (c / country :name (n / name :op1 "N-A")) :arg1 (r / revenue :mod (e / enough) :arg0-of (j / judge-01 :arg1 (m / move-02 :mod (s / such)) :arg2 (w / worth :domain (r2 / revenue)))) :mod (s2 / still))
(a / and :op1 (c / confirm-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (c2 / country :name (n / name :op1 "N-A")) :arg2 (e / executive :mod (g / general)))) :arg1 (m / move-02)) :op2 (n2 / note-01 :arg0 (p2 / person) :arg1 (b / begin-01 :arg0 (c3 / club) :arg1 (s / search-01 :arg0 (c4 / club) :arg2 (c5 / coach :mod (n3 / new)) :time (i / immediate)))))
(a / announce-01 :arg1 (h / hand-finished :arg0 (p / person :arg0-of (h2 / have-org-role-91 :arg2 (p2 / person :arg1-of (e / expert-01)))) :arg1 (a2 / and :op1 (p3 / person :arg0-of (h3 / have-org-role-91 :arg2 (p4 / person :arg1-of (e2 / expert-01)))) :op2 (p5 / person :arg0-of (h4 / have-org-role-91 :arg2 (p6 / person :arg1-of (e3 / expert-01)))) :arg0-of (w / work-01 :arg1 (v / vehicle :mod (p7 / produce-01))))) :manner (o / official))
(e / express-01 :arg0 (m / magazine :name (n / name :op1 "N-A")) :arg1 (r / regret-01 :arg0 (f / facebook) :arg1 (a / and :op1 (p / policy :mod (a2 / adblock)) :op2 (p2 / promise-01 :arg2 (f2 / fix-02 :arg1 (p3 / problem))))))
(s / say-01 :arg0 (o / office :poss (p / person :arg0-of (h / have-org-role-91 :arg2 (o2 / office :mod (m / medicine))) :arg0-of (h2 / have-org-role-91 :arg2 (o3 / office :mod (m2 / medicine))))) :arg1 (i / identify-01 :arg1 (b / body :name (n / name :op1 (s2 / san) :op2 (f / frankly) :op3 (f2 / frankly) :op4 (f3 / frankly) :op5 (f4 / frankly) :op6 (f5 / frankly) :op7 (f6 / frankly))) :arg2 (p2 / person :arg0-of (h3 / have-org-role-91 :arg1 (b2 / body) :arg3 (l / lead-02 :arg0 (b3 / body) :arg1 (b4 / body)))) :time (m3 / morning :mod (w / wednesday))))
(m / multi-sentence :snt1 (f / find-01 :arg0 (h / he) :arg1 (a / apartment)) :snt2 (a2 / and :op1 (c / cheat-03 :arg0 (h2 / he) :arg1 (g / girl)) :op2 (t / tell-01 :arg0 (p / person :arg0-of (h3 / have-org-role-91 :arg2 (g2 / galicia :mod (l / louis)))) :arg1 (g3 / girl) :arg2 (k / kgo))))
(s / state-01 :arg0 (p / person :arg0-of (r / represent-01 :arg1 (c / criminal-organization :name (n / name :op1 "N-A") :mod (c2 / country :name (n2 / name :op1 "N-A"))) :mod (p2 / permanent))) :arg1 (u / useful-05 :arg1 (m / meet-03 :arg0 (p3 / person :arg0-of (h / have-org-role-91 :arg1 (c3 / council :mod (s2 / security) :mod (c4 / country)) :arg2 (p4 / peninsula :name (n3 / name :op1 "Crimea")))) :time (p5 / previous)) :arg1-of (u2 / useful-05)))
(s / show-01 :arg0 (s2 / study-01) :arg1 (l / lower-05 :arg0 (p / person :quant (p2 / percentage-entity :value (N / N-A))) :arg1 (t / temporal-quantity :quant (N2 / N-A) :unit (y / year)) :time (s3 / stay-01 :arg1 (p3 / person) :location (r / resort :mod (h / health)))))
(h / have-condition-91 :arg1 (s / strengthen-01 :arg1 (b / between :op1 (t / temporal-quantity :quant (N / N-A) :unit (y / year)) :op2 (t2 / temporal-quantity :quant (N2 / N-A) :unit (y2 / year)))) :arg2 (l / look-01 :arg0 (y3 / you) :arg1 (p / person :mod (d / dynamic) :mod (r / rate :mod (e / exchange-01 :arg1 (r2 / rouble)))) :condition (l2 / look-01 :arg0 (y4 / you) :arg1 (p2 / person :mod (d2 / dynamic) :mod (r3 / rate :mod (e2 / exchange-01 :arg1 (r4 / rouble)))))))
(l / lose-02 :arg0 (p / person :mod (c / country :name (n / name :op1 "N-A"))) :arg1 (f / fight-01 :mod (f2 / first :degree (v / very)) :poss (s / she)) :location (o / olympics :quant 2012 :location (o2 / olympics :quant 2012)))
(a / act-02 :polarity - :arg1-of (i / isolate-01) :mod (j / just) :domain (p / policy :topic (f / fight-01 :arg1 (c / corrupt-01)) :domain (i2 / it)))
(b / believe-01 :arg0 (p / person :arg1-of (e / expert-01)) :arg1 (c / continue-01 :arg1 (a / and :op1 (g / grow-01 :arg1 (r / relation-03 :arg0 (c2 / country :name (n / name :op1 "N-A")) :arg2 (w / west))) :op2 (p2 / possible-01 :arg1 (l / lead-03 :arg0 (c3 / country) :arg2 (a2 / attempt-01 :arg0 (c4 / country) :arg1 (c5 / change-01 :arg0 (c6 / country) :arg1 (p3 / power) :location (c7 / country)) :mod (a3 / another)))))))
(a / and :op2 (a2 / and :op1 (c / cheap-02 :arg1 (t / tv :mod (s / state)) :degree (m / more) :time (w / week :mod (t2 / this))) :op2 (p / permit-01 :arg1 (v / vegetables :arg1 (i / import-01 :arg0 (a3 / agriculture)) :mod (a4 / again :mod (o / once))))))
(h / have-03 :arg0 (p / person :quant 2) :arg1 (d / differ-01 :arg1-of (m / major-02)) :mod (s / still) :concession (d2 / display-01 :arg0 (p2 / public) :arg1 (r / reconciliation)))
(a / and :op1 (i / include-91 :arg1 (a2 / and :op1 (e / era :mod (e2 / era :arg1-of (m / modern-02))) :op2 (e3 / era :arg1-of (m2 / modern-02)) :quant (m3 / multiple :op1 1)) :arg2 (e4 / era :arg1-of (m4 / modern-02))) :op2 (s / surprise-01 :polarity - :arg1 (h / he) :arg2 (r / reach-01 :arg0 (h2 / he) :arg1 (l / landmark :mod (t / this)) :time (b / before :op1 (h3 / he)))))
(t / think-01 :arg1 (p / possible-01 :arg1 (b / become-01 :arg1 (p2 / person :arg0-of (h / have-org-role-91 :arg2 (p3 / president :mod (v / vice)))) :arg2 (p4 / person :arg0-of (h2 / have-org-role-91 :arg2 (p5 / president))) :time (a / after :op1 (m / mr :arg0 (p6 / person) :arg1 (t2 / term :ord (o / ordinal-entity :value 2)) :arg1-of (c / cause-01 :arg0 (t3 / term :ord (o2 / ordinal-entity :value 3) :mod (t4 / term :ord (o3 / ordinal-entity :value 3)))))))) :time (o4 / once))
(r / return :arg1 (s / show-04) :purpose (r2 / return-01 :arg1 (s2 / show-04) :arg3 (s3 / season :quant 28 :mod (s4 / season :ord (o / ordinal-entity :value 12)))))
(r / represent-01 :arg0 (c / closure :mod (t / this)) :arg1 (e / engineer-01 :mod (c2 / civil) :arg0-of (l / lead-01) :arg0-of (l2 / lead-01)) :location (p / project :mod (t2 / this)))
(p / propose-01 :arg0 (t / thing :arg1-of (a / achieve-01)) :arg1 (s / she) :medium (l / league :mod (s2 / same) :example (a2 / and :op1 (p2 / person :arg0-of (t2 / take-01 :arg1 (s3 / sports :poss (p3 / person)))) :op2 (p4 / person :arg0-of (t3 / take-01 :arg1 (s4 / sports :poss (p5 / person)))))))
(c / contrast-01 :arg1 (e / earn-01 :arg0 (i / i) :arg1 (r / rate-entity-91 :arg1 1 :ord (o / ordinal-entity :value 1) :arg2 (t / temporal-quantity :quant (N / N-A) :unit (y / year)))) :arg2 (s / serve-01 :arg0 (i2 / i) :arg1 (p / point :mod (e2 / exclamation)) :arg2 (t2 / team :mod (n / nation) :arg0-of (c2 / coordinator :arg1 (p2 / party :mod (n2 / nation))))))
(a / and :op1 (l / love-01 :arg0 (y / you) :arg1 (p / person :arg0-of (h / have-rel-role-91 :arg1 (y2 / you) :arg2 (c / child)))) :op2 (l2 / love-01 :arg0 (p2 / person :arg0-of (h2 / have-rel-role-91 :arg1 (y3 / you) :arg2 (c2 / child))) :arg1 (y4 / you)))
(s / say-01 :arg0 (p / person :name (n / name :op1 "alek" :op2 "krautmann")) :arg1 (p2 / possible-01 :arg1 (f / flood :arg0 (p3 / person :mod (c / country :name (n2 / name :op1 "N-A"))) :arg1 (h / house :quant (m / many) :location (a / area :mod (s2 / suburban) :arg1-of (n3 / near-02 :arg2 (b / baton)))))))
(s / say-01 :arg0 (p / person :arg0-of (h / have-rel-role-91 :arg2 (g / grandparents))) :arg1 (c / contrast-01 :arg1 (s2 / suffer-01 :arg0 (p2 / person :arg0-of (h2 / have-rel-role-91 :arg2 (d / dd2))) :arg1 (w / wound-01 :arg1 (p3 / person) :quant (m / multiple)) :arg2-of (i / include-01 :arg1 (a / and :op1 (p4 / person :arg0-of (h3 / have-rel-role-91 :arg1 (h4 / he) :arg2 (g2 / groin))) :op2 (l / leg :part-of (p5 / person)) :op3 (a2 / arm) :op4 (a3 / abdomen)))) :arg2 (a4 / awake :arg1 (p6 / person) :time (t / transport-01 :arg1 (p7 / person) :arg3 (h5 / hospital)))))
(t / thank-01 :arg0 (i / i) :arg1 (y / you) :arg2 (a / and :op1 (s / simone :arg0 (y2 / you) :arg1 (y3 / you)) :op2 (a2 / aly :arg0 (y4 / you)) :op3 (l / laurie :arg0 (y5 / you)) :op4 (m / madison :arg0 (y6 / you) :arg1 (p / power :mod (g / girl :mod (' / ''))) :mod (s2 / serious) :mod (t2 / that)) :purpose (b / begin-01 :arg0 (g2 / girl :mod (g3 / girl :quant (m2 / many :degree (s3 / so)))) :arg1 (b2 / begin-01 :arg0 (g4 / girl :mod (y7 / young) :quant (m3 / many :degree (s4 / so))) :arg1 (b3 / begin-01 :arg0 (g5 / girl) :arg1 (a3 / and :op1 (w / woman :mod (y8 / young)) :op2 (w2 / woman :mod (y9 / young) :arg1-of (s5 / succeed-01))))))))
(t / think-01 :arg0 (p / person :name (n / name :op1 "byron" :op2 "macdonald")) :arg1 (t2 / turned :arg1 (m / mic :poss (h / he)) :time (s / start-01 :arg0 (h2 / he) :arg1 (d / dispense :arg0 (h3 / he) :arg1 (t3 / thing :arg1-of (o / opine-01 :arg0 (h4 / he)) :quant (s2 / some) :arg1-of (i / include-91 :arg2 (t4 / thing :arg1-of (o2 / opine-01 :arg0 (h5 / he))) :time (e / end-01 :arg1 (f / freestyle :poss (w / woman) :mod (4 / 4x200m)))))))))
(a / and :op1 (p / put-01 :arg0 (p2 / person :mod (c / country :name (n / name :op1 "N-A"))) :arg1 (s / system :name (n2 / name :op1 (i / immune)) :poss (p3 / person)) :arg2 (t / test :mod (s2 / serious))) :op2 (t2 / test-01 :arg0 (p4 / person) :arg1 (t3 / test-01 :mod (s3 / serious)) :manner (l / licking :arg0 (p5 / person) :arg1 (s4 / some :arg1-of (i2 / include-91 :arg2 (a2 / and :op1 (p6 / place :mod (d / dirtiest)) :op2 (p7 / place :arg0-of (d2 / disgust-01))))))))
(a / and :op1 (c / count-01 :arg0 (p / person :quant 55 :arg1-of (f / follow-02 :arg0 (i / i) :source (d / data :arg1-of (f2 / follow-02 :arg0 (i2 / i) :source (a2 / and :op1 (p2 / person :arg0-of (h / have-rel-role-91 :arg1 (i3 / i) :arg2 (s / sister))) :op2 (p3 / person :quant 2 :mod (y / young) :arg0-of (h2 / have-rel-role-91 :arg1 (i4 / i) :arg2 (c2 / child)))))))) :arg1 (a3 / and :op1 (w / woman :quant 2 :mod (y2 / young)) :op2 (m / man :quant 2 :mod (y3 / young)) :op3 (m2 / man :quant 3 :mod (m3 / middle-aged)) :op4 (m4 / man :quant 3 :mod (m5 / middle-aged)) :op5 (m6 / man :quant 8) :op6 (m7 / man :quant 8) :op6 (m8 / man :quant 8) :op6 (m9 / man :quant 8) :op6 (m10 / man :quant 8) :op6 (m11 / man :quant 8) :op7 (w2 / woman :quant 8) :op7 (w3 / woman :quant 8))) :op2 (p4 / perusing :arg0 (d2 / data) :arg1 (t / temporal-quantity :quant (N / N-A) :unit (h3 / hour))))
(h / have-03 :arg0 (i / i) :arg1 (t / thing :arg1-of (c / collect-01 :arg0 (p / person))) :arg1-of (c2 / cause-01 :arg0 (r / rid-01 :arg0 (p2 / person) :arg1 (t2 / thing :arg1-of (c3 / collect-01 :arg0 (p3 / person))) :arg2 (a / around :op1 (o / or :op1 (p4 / person :quant (a2 / around :op1 1998)) :op2 (p5 / person :quant 1999)) :arg1-of (n / normal-02)))))
(c / cause-01 :arg0 (r / robin :polarity - :domain (w / we)) :arg1 (c2 / coach :mod (g / good :degree (m / most) :compared-to (w2 / world)) :domain (h / he) :mod (m2 / massive)))
(s / set-02 :arg0 (p / petition) :arg1 (r / rhythm :mod (r2 / radioactive) :arg0-of (m / match-01 :arg1 (p2 / person :arg0-of (r3 / rival-01 :arg1 (t / they))))) :time (e / ever :polarity -))
(w / withdraw-01 :arg1 (g / good :arg1-of (p / prohibit-01) :quant (a / approximately :op1 100) :arg2-of (i / include-91 :arg1 (g2 / good :arg1-of (p2 / prohibit-01)))) :arg2 (s / sell-01) :mod (j / just) :ord (o / ordinal-entity :value 1))
(m / multi-sentence :snt1 (c / consult-01 :arg0 (p / person :arg0-of (r / represent-01 :arg1 (a / and :op1 (c2 / country :name (n / name :op1 "United" :op2 "States")) :op2 (c3 / country :name (n2 / name :op1 "United" :op2 "States"))))) :arg1 (p2 / person :arg0-of (r2 / represent-01 :arg1 (c4 / country))) :arg2 (e / establish-01 :arg1 (a2 / and :op1 (c5 / country) :op2 (c6 / country)))) :snt2 (c7 / continue-01 :arg1 (p3 / pause :mod (h / humanitarian))))
FAILED_TO_PARSE#Number of opening and closing brackets doesn't match.
(v / visit-01 :arg0 (p / person :quant 14) :arg1 (c / country) :time (a / already) :arg1-of (c2 / cause-01 :arg0 (f / figure :quant 2015)))
(o / obligate-01 :arg2 (d / decide-01 :arg0 (p / person :arg0-of (v / vote-01)) :arg1 (d2 / decide-01 :arg0 (p2 / person) :arg1 (a / and :op1 (s / support-01 :arg0 (m / military) :arg1 (s2 / system :mod (u / upper) :poss (p3 / parliament)) :degree (e / entire)) :op2 (r / role :arg1-of (s3 / significant-02) :topic (i / initiate-01 :arg0 (m2 / military) :arg1 (p4 / person :arg0-of (h / have-org-role-91 :arg1 (c / country) :arg2 (m3 / minister :mod (p5 / prime))))))))))
(b / begin-01 :arg1 (d / develop-02 :arg1 (t / term)) :location (o / outdoor))
(m / multi-sentence :snt1 (c / contrast-01 :arg1 (c2 / crap :mod (c3 / cheerful) :poss (t / they)) :arg2 (c4 / crap :poss (t2 / they))) :snt2 (g / guide-01 :mode (i / interrogative) :arg0 (p / person :arg0-of (t3 / travel-01)) :arg1 (d / disease :mod (i2 / infectious)) :arg2 (p2 / person :arg0-of (t4 / travel-01))) :snt3 (a / aid-01 :mode (i3 / interrogative) :arg0 (a2 / and :op1 (p3 / person :arg0-of (t5 / travel-01)) :op2 (p4 / person :arg0-of (l / lose-02 :arg1 (c5 / consciousness))) :op3 (p5 / person :arg0-of (l2 / lose-02 :arg1 (c6 / consciousness)))) :arg2 (a3 / and :op1 (b / burn-01) :op2 (h / heat) :op3 (b2 / bleeding)) :time (f / first)))
(h / have-concession-91 :arg1 (t / treat-03 :arg1 (i / it) :arg1-of (s / special-02)) :arg2 (t2 / treat-03 :arg1 (t3 / they) :arg1-of (s2 / special-02)))
(c / choose-01 :arg0 (i / i) :arg1 (a / and :op1 (c2 / cod :mod (s / steam)) :op2 (m / meatballs :location (s2 / sauce :mod (t / tomato)))) :arg1-of (p / personal-02))
(f / file-01 :arg0 (s / size :poss (a / amount :arg1-of (d / draw-02 :arg2 (t / tomes :quant 133)))) :arg1 (s2 / sue-02 :arg1 (p / person :arg1-of (a2 / accuse-01 :arg2 (c / compensate-01 :arg2 (m / material))))) :arg2 (p2 / person :arg1-of (a3 / accuse-01 :arg2 (c2 / compensate-01 :arg2 (m2 / material)))))
(c / cause-01 :arg0 (a / attempt-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg2 (p2 / president))) :arg1 (o / organiser :arg0 (c2 / coup :mod (m / military)) :arg1 (j / july :quant 15))) :arg1 (p3 / person :arg0-of (h2 / have-org-role-91 :arg2 (p4 / president)) :domain (t / this)))
(e / express-01 :arg0 (p / person :name (n / name :op1 "Vladimir" :op2 "Putin") :arg0-of (h / have-org-role-91 :arg1 (c / country :name (n2 / name :op1 "N-A")) :arg2 (p2 / president))) :arg1 (h2 / hope-01 :arg0 (p3 / person) :arg1 (c2 / contribute-01 :arg0 (p4 / person :arg0-of (h3 / have-org-role-91 :arg1 (g / government-organization :arg0-of (a / administrate-01 :arg1 (s / state))) :arg2 (c3 / chief) :mod (n3 / new))) :arg2 (w / work-01 :arg0 (p5 / person) :arg1-of (h4 / have-org-role-91 :arg0 (p6 / person) :arg2 (m / member))))))
(s / state-01 :arg0 (p / person :arg0-of (l / lead-02 :arg1 (c / country :name (n / name :op1 "N-A")))) :arg1 (s2 / state-01 :arg0 (p2 / person :arg0-of (l2 / lead-02 :arg1 (c2 / country :name (n2 / name :op1 "N-A")))) :arg1 (m / meet-03 :arg0 (p3 / person) :arg1 (a / and :op1 (p4 / predecessor :poss (p5 / person)) :op2 (p6 / predecessor :poss (p7 / person)))) :mod (c3 / corresponding)))
(m / multi-sentence :snt1 (e / explain-01 :mode (i / interrogative) :arg0 (a / and :op1 (p / person :arg0-of (h / have-org-role-91 :arg2 (m2 / mayor))) :op2 (p2 / person :arg0-of (h2 / have-org-role-91 :arg2 (m3 / mayor))) :op3 (p3 / person :arg0-of (h3 / have-org-role-91 :arg2 (m4 / mayor))) :op4 (p4 / person :arg0-of (h4 / have-org-role-91 :arg2 (m5 / mayor))) :op5 (p5 / person :arg0-of (h5 / have-org-role-91 :arg2 (m6 / mayor))) :op6 (p6 / person :arg0-of (h6 / have-org-role-91 :arg2 (m7 / mayor))) :op6 (p7 / person :arg0-of (h7 / have-org-role-91 :arg2 (m8 / mayor))) :op6 (p8 / person :arg0-of (h8 / have-org-role-91 :arg2 (m9 / mayor))) :op6 (p9 / person :arg0-of (h9 / have-org-role-91 :arg2 (m10 / mayor))) :op6 (p10 / person :arg0-of (h10 / have-org-role-91 :arg2 (m11 / mayor))) :op6 (p11 / person :arg0-of (h11 / have-org-role-91 :arg2 (m12 / mayor))) :op7 (p12 / person :arg0-of (h12 / have-org-role-91 :arg2 (m13 / mayor))))) :snt2 (a2 / and :op1 (i2 / ignore-01 :mode (i3 / interrogative) :arg0 (p13 / principle :mod (s / secularism)) :arg1 (p14 / principle :mod (d / decorum))) :op2 (a3 / adhere-02 :polarity - :arg0 (a4 / and) :arg1 (s2 / standard :mod (a5 / and :op1 (h13 / hygiene) :op2 (s3 / safe-01))))))
(e / explode-01 :quant 1 :time (e2 / early :op1 (d / date-entity :year (N / N-A)) :degree (m / more)) :location (c / city :name (n / name :op1 "N-A") :mod (r / resort) :location (r2 / resort)))
(m / make :arg0 (t / they) :arg1 (s / stone :mod (p / precious) :arg2-of (i / include-01 :arg1 (a / and :op1 (- / -rrb- :name (n / name :op1 (d / diamonds) :op2 (d2 / diamonds))) :op2 (-2 / -rrb- :mod (d3 / diamonds))) :mod (m2 / most))) :time (s2 / since :op1 (-3 / -rrb- :quant 2008)))
(s / say-01 :arg1 (c / consider-01 :arg0 (c2 / country :name (n / name :op1 "United" :op2 "States")) :arg1 (c3 / consider-02 :arg0 (c4 / country) :arg1 (s2 / sanction-02 :arg1 (c5 / criminal-organization :name (n2 / name :op1 "N-A") :mod (c6 / country :name (n3 / name :op1 "United" :op2 "States"))) :arg2 (h / hack-04 :arg1 (s3 / server :poss (c7 / country)))))) :arg2 (p / person :mod (c8 / country)))
(d / draw-02 :arg0 (d2 / damage-01 :arg2-of (t / total-01)) :arg2 (r / roubles :quant 84))
(a / and :op1 (r / run :arg0 (s / she) :arg1 (s2 / side :mod (l / left) :part-of (f / field)) :arg1-of (l2 / long-03)) :op2 (c / curled :arg0 (s3 / she) :arg1 (b / ball :mod (l3 / left)) :time (m / middle)) :op3 (w / whipped :arg0 (s4 / she) :arg1 (b2 / ball) :purpose (g / give-01 :arg0 (s5 / she) :arg1 (l4 / lead-01 :arg0 (p / person :mod (c2 / country :name (n / name :op1 "N-A"))) :mod (2 / 2-0)))))
(c / contrast-01 :arg1 (b / be-located-at-91 :arg1 (w / we) :arg2 (p / place :mod (g / good)) :time (n / now :mod (r / right))) :arg2 (d / depend-01 :arg0 (i / it) :arg1 (r2 / result-01 :arg1 (g2 / game :mod (s / saturday)) :arg2 (g3 / good) :mod (j / just))))
(a / ally-01 :polarity - :arg1 (a2 / and :op1 (o / oromos) :op2 (a3 / amharas)) :arg1-of (n / natural-03))
(g / got :arg1 (i / it) :arg2 (b / bedford :poss (i2 / it) :mod (b2 / bedford)) :arg1-of (n / natural-03))
(c / contrast-01 :arg1 (s / serve-01 :polarity - :arg0 (c2 / cafes) :arg1 (b / beer) :time (n / no-longer)) :arg2 (m / make-01 :arg1 (j / juices :arg1-of (f / fresh-04)) :time (n2 / now)))
(a / add-01 :arg0 (p / person :arg0-of (h / have-rel-role-91 :arg1 (s / she) :arg2 (h2 / husband))) :arg1 (m / message-01 :arg0 (p2 / person) :arg1 (t / thing :manner-of (e / eat-01)) :mod (a2 / also)))
(e / encourage-01 :arg0 (t / they) :arg1 (w / woman) :arg2 (a / and :op1 (b / become-01 :arg1 (w2 / woman) :arg2 (' / '' :mod ('2 / ''))) :op2 (r / rise-01 :arg1 (a2 / and) :arg3 (c / challenge-01 :arg0 (w3 / woman) :arg1 (g / glop :mod (t2 / transforming) :arg1-of (r2 / resemble-01 :arg2 (c2 / creamed))) :arg2 (c3 / carrots :mod (t3 / tasty))))) :location (a3 / and :op1 (n / newspaper) :op2 (m / magazine)))
(d / dipped :arg0 (e / everyone) :arg1 (s / spoon :arg1 (g / goo :mod (b / brown) :mod (v / viscous))))
(s / say-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg2 (a / ambassador))) :arg1 (a2 / achieve-01 :arg0 (s2 / supply-01 :arg1 (a3 / and :op1 (p2 / product :name (n / name :op1 "N-A")) :op2 (v / vehicle :location (g / ground)) :op3 (w / weapon))) :arg1 (b / boost-01)))
(a / and :op1 (b / begin-01 :arg1 (d / develop-02 :arg1 (m / morpheus)) :location (b2 / back :quant 2007)) :op2 (e / expect-01 :arg1 (p / put-01 :arg1 (d2 / develop-02) :arg2 (c / commission :quant 2013))))
(c / contrast-01 :arg1 (s / set :arg0 (k / kenny) :arg1 (r / record :mod (o / olympic)) :time (b / before :op1 (n / now) :quant (u / up-to :op1 (t / temporal-quantity :quant (N / N-A) :unit (y / year))))) :arg2 (o2 / overtaken :arg0 (z / zealand :mod (n2 / new) :location (r2 / round :ord (o3 / ordinal-entity :value 1))) :arg1 (s2 / standard)))
(a / and :op1 (r / retracted :arg0 (h / he) :arg1 (c / comment-01 :arg0 (h2 / he)) :time (l / late :degree (m / more))) :op2 (m2 / method :polarity - :arg1-of (a2 / appeal-02 :arg2 (r2 / rival-01 :arg0 (c2 / country :name (n / name :op1 "Britain"))))))
(i / issue-02 :arg0 (s / sell-01 :arg1 (y / year :mod (s2 / sell-01 :arg1 (y2 / year))) :arg1-of (h / high-02 :degree (m / most))))
(p / produce-01 :arg0 (m / model) :arg1 (s / story :topic (r / resemble-01 :arg2 (e / evolution :arg0 (s2 / scientist :mod (p2 / planetary)) :time (p3 / previous)))))
(s / suggest-01 :arg0 (r / rate :mod (l / late :degree (m / most)) :mod (l2 / late :degree (m2 / most))) :arg1 (s2 / sport :mod (m3 / massive) :quant (m4 / more) :compared-to (s3 / star :mod (m5 / massive))))
(a / announce-01 :arg0 (h / he) :arg1 (r / resign-01 :arg0 (h2 / he)) :time (a2 / after :op1 (p / perform-02 :arg0 (h3 / he) :arg1 (p2 / perform-02 :arg0 (t / team :mod (n / nation) :mod (c / country :name (n2 / name :op1 "N-A")) :mod (c2 / country :name (n3 / name :op1 "N-A")) :location (e / euro)) :mod (d / disastrous)))))
(a / and :op2 (b / become-01 :arg1 (e / educate-01 :mod (s / secondary)) :arg2 (f / free-03) :mod (a2 / also)))
(n / non-renewable :polarity - :arg1 (r / resource :arg1-of (k / key-02) :mod (n2 / namibia) :quant (a / all)))
(m / multi-sentence :snt1 (d / didn :mode (i / interrogative) :mod (n / nomads)) :snt2 (h / have-03 :arg0 (c / city :mod (t / total)) :arg1 (a / and :op1 (h2 / horse) :op2 (w / weapon))))
(c / contrast-01 :arg2 (w / wait-01 :arg1 (p / person :quant (m / many) :arg1-of (i / include-91 :arg2 (p2 / person))) :arg2 (n / nothing)) :time (y / year :mod (t / this)))
(g / grow-03 :arg1 (s / size :poss (d / debt :mod (n / nation))) :arg4 (l / level :mod (r / record)))
(a / and :op1 (e / easy-05 :arg1 (p / period :mod (f / fruiting) :mod (s / squash)) :mod (a2 / also)) :op2 (a3 / and :op1 (l / leave-13 :arg0 (w / water :arg1-of (w2 / warm)) :arg1 (w3 / water :arg1-of (w4 / warm))) :op2 (s2 / solve-01 :arg0 (w5 / water) :arg1 (s3 / soil :mod (n / nutrient-rich) :mod (s4 / some)) :prep-under (b / bush))) :arg1-of (e2 / easy-05) :mod (a4 / also))
(s / sport :domain (m / military :name (n / name :op1 "N-A")) :mod (s2 / sport :mod (v / volgograd)))
(a / and :op1 (r / receive-01 :arg0 (s / she) :arg1 (c / citizenship :mod (s2 / swiss))) :op2 (s3 / start-01 :arg0 (s4 / she) :arg1 (c2 / compete-02 :arg0 (s5 / she) :arg3 (f / flag :mod (r2 / red)))) :li 2015)
(m / mean-01 :arg1 (i / it) :arg2 (c / change-01 :arg1 (a / and :op1 (b / building) :op2 (f / finance) :op3 (i2 / issue-02 :mod (o / other) :arg0-of (c2 / circumvent :arg1 (o2 / opine-01 :arg0 (p / person :arg0-of (o3 / own-01))))))))
(a / act-02 :polarity - :arg1-of (i / isolate-01) :mod (j / just) :domain (p / policy :topic (f / fight-01 :arg1 (c / corrupt-01)) :domain (i2 / it)))
(a / and :op1 (d / do-02 :arg0 (a2 / approach-02 :arg1 (t / this)) :arg1 (t2 / this)) :op2 (a3 / approach-02 :arg0 (a4 / approach-02 :arg0 (n / north)) :arg1 (s / southwards :quant 700 :mod (m / millimetres))))
(t / tell-01 :arg0 (p / person :arg0-of (w / watch-01 :arg1 (a / apple)) :arg0-of (w2 / watch-01 :arg1 (p2 / person :arg0-of (u / use-01 :arg1 35,000) :mod (t2 / tracks)))) :arg1 (r / rate-entity-91 :arg1 (n / number :quant-of (p3 / person :arg0-of (t3 / tracked :arg1 (r2 / rate-entity-91 :arg1 (d / day :mod (e / each)) :arg2 (t4 / temporal-quantity :quant (N / N-A) :unit (d2 / day)))) :arg2 (r3 / rate-entity-91 :arg1 (d3 / day :mod (e2 / each)) :arg2 (t5 / temporal-quantity :quant (N2 / N-A) :unit (d4 / day))) :arg3 (r4 / rate-entity-91 :arg1 (d5 / day :mod (e3 / each)) :arg2 (t6 / temporal-quantity :quant (N3 / N-A) :unit (d6 / day))) :arg3 (r5 / rate-entity-91 :arg1 (d7 / day :mod (e4 / each)) :arg2 (t7 / temporal-quantity :quant (N4 / N-A) :unit (d8 / day))) :arg3 (r6 / rate-entity-91 :arg1 (d9 / day :mod (e5 / each)) :arg2 (t8 / temporal-quantity :quant (N5 / N-A) :unit (d10 / day)))))) :arg2 (p4 / person :name (n2 / name :op1 "N-A")))
(c / contrast-01 :arg2 (g / get-01 :arg0 (w / woe :poss (p / person :mod (c2 / country :name (n / name :op1 "N-A")))) :arg1 (d / do-02 :arg0 (p2 / person) :arg1 (s / something :arg1-of (e / enjoy-01 :arg0 (p3 / person))))))
(c / cause-01 :arg1 (o / owe-01 :arg0 (y / you) :arg1 (a / and :op1 (p / person :quant 3 :arg0-of (h / have-rel-role-91 :arg2 (d / dd2))) :op2 (p2 / person :mod (a2 / air) :arg1-of (f / fresh-04)) :op3 (s / sunshine)) :arg2 (y2 / you)))
(a / and :op1 (c / clear-01 :arg1 (p / person :quant 62.198 :arg2-of (t / total-01 :arg1 (p2 / person :quant 62.198)) :arg2-of (t2 / total-01 :arg1 (p3 / person :quant 62.198))) :manner (w / well)) :op2 (' / '' :arg0 (p4 / person) :arg1 (a2 / and :op1 (p5 / person :arg0-of (r / raisman)) :op2 (p6 / person :name (n / name :op1 (a3 / aly))) :op3 (p7 / person :arg0-of (h / have-org-role-91 :arg2 (h2 / head-of-state))) :op4 (p8 / person :arg0-of (h3 / have-org-role-91 :arg2 (h4 / head-of-state))) :op5 (p9 / person :arg0-of (h5 / have-org-role-91 :arg2 (h6 / head-of-state))))))
(a / and :op1 (' / ' :arg0 (s / state) :arg1 (a2 / and :op1 (b / biles :arg1 (s2 / state)) :op2 (l / leave-11 :arg0 (s3 / state)) :op3 (e / embrace :arg0 (s4 / state))) :time (a3 / after :op1 (w / win-01 :arg0 (s5 / state) :arg1 (a4 / and :op1 (g / gold) :op2 (s6 / silver)) :mod (r / respective)))) :op2 (e2 / embrace :arg0 (s7 / state) :time (a5 / after :op1 (w2 / win-01 :arg0 (s8 / state) :arg1 (a6 / and :op1 (g2 / gold) :op2 (s9 / silver)) :mod (r2 / respective) :time (s10 / summer :quant 2016 :mod (s11 / summer :mod 2016) :location (o / olympics :name (n / name :op1 (d / de) :op2 (d2 / de) :op3 (f / final) :op4 (f2 / final) :op5 (f3 / final) :op6 (f4 / final) :op7 (f5 / final))))))))
(a / and :op1 (t / terminate-01 :arg1 (b / balance-01 :arg1 (a2 / and :op1 (b2 / beams) :op2 (f / floor)))) :op2 (l / lay :arg0 (d / defend-01 :location (w / world)) :arg1 (w2 / wait-01 :arg1 (w3 / world))))
(s / say-01 :arg0 (p / police) :arg1 (a / and :op1 (s2 / shoot-02 :arg1 (b / boy :mod (6 / 6-year-old)) :location (p2 / philadelphia)) :op2 (m / marking :arg0 (b2 / boy) :arg1 (s3 / shooting :ord (o / ordinal-entity :value 2) :part-of (62 / 6-year-old :location (c / city))) :time (w / week :mod (t / this)))))
(t / tell-01 :arg0 (p / person :arg0-of (i / investigate-01)) :arg1 (a / appear-02 :arg1 (p2 / philadelphia :arg0 (g / gunman :quant (m / multiple)))) :arg2 (p3 / person :arg0-of (i2 / investigate-01)))
(c / contrast-01 :arg2 (a / and :op1 (s / sport :domain (s2 / sport :mod (t / that)) :mod (e / expensive)) :op2 (g / gymnasts :arg0 (a2 / and :op1 (p / pay-01 :arg0 (p2 / person :arg0-of (h / have-rel-role-91 :arg1 (p3 / person :arg0-of (h2 / have-rel-role-91 :arg1 (p4 / person :arg0-of (h3 / have-rel-role-91 :arg1 (p5 / person :arg0-of (h4 / have-rel-role-91 :arg1 (p6 / person :arg0-of (h5 / have-rel-role-91 :arg1 (p7 / person :arg0-of (h6 / have-rel-role-91 :arg1 (p8 / person :arg0-of (h7 / have-rel-role-91 :arg1 (p9 / person :arg0-of (h8 / have-rel-role-91 :arg1 (p10 / person :arg0-of (h9 / have-rel-role-91 :arg1 (p11 / person :arg0-of (h10 / have-rel-role-91 :arg1 (p12 / person :arg0-of (h11 / have-rel-role-91 :arg1 (p13 / person :arg0-of (h12 / have-rel-role-91 :arg1 (p14 / person :arg0-of (h13 / have-rel-role-91 :arg1 (p15 / person :arg0-of (h14 / have-rel-role-91 :arg1 (p16 / person :arg0-of (h15 / have-rel-role-91 :arg1 (p17 / person :arg0-of (h16 / have-rel-role-91 :arg1 (p18 / person :arg0-of (h17 / have-rel-role-91 :arg1 (p19 / person :arg0-of (h18 / have-rel-role-91 :arg1 (p20 / person :arg0-of (h19 / have-rel-role-91 :arg1 (p21 / person :arg0-of (h20 / have-rel-role-91 :arg1 (p22 / person :arg0-of (h21 / have-rel-role-91 :arg1 (p23 / person :arg0-of (h22 / have-rel-role-91 :arg1 (p24 / person :arg0-of (h23 / have-rel-role-91 :arg1 (p25 / person :arg0-of (h24 / have-rel-role-91 :arg2 (p26 / parent))) :arg2 (p27 / parent))) :arg2 (p28 / parent))) :arg2 (p29 / parent)))))))))))))))))))))))))))))))))))))) :arg2 (p30 / person :arg0-of (h25 / have-rel-role-91 :arg1 (p31 / person) :arg2 (p32 / parent))))) :op2 (t2 / travel-01 :arg0 (p33 / person)) :op3 (f / fee :mod (c2 / compete-01)) :op4 (f2 / fee :mod (c3 / compete-01)) :op5 (f3 / fee :mod (h26 / hotel))))))))))
(a / and :op1 (m / move-01 :arg1 (g / group :consist-of (d / doctor)) :arg2 (c / contract :mod (n / new)) :time (b / before :op1 (m2 / move-01 :arg1 (g2 / group :consist-of (d2 / doctor) :ord (o / ordinal-entity :value 1)) :arg2 (c2 / contract :mod (n2 / new)))) :time (b2 / before :op1 (m3 / move-01 :arg1 (g3 / group :consist-of (d3 / doctor) :ord (o2 / ordinal-entity :value 1)) :arg2 (c3 / contract :mod (n3 / new))))) :op2 (r / run-02 :arg0 (g4 / group)))
(a / and :op1 (l / lambasts :arg0 (p / person :arg0-of (h / have-org-role-91 :arg2 (m / minister :mod (e / ex-cabinet)))) :arg1 (a2 / and :op1 (p2 / police) :op2 (p3 / person :arg0-of (e2 / elect-01)) :op3 (p4 / person :arg0-of (h2 / have-org-role-91 :arg2 (h3 / head-of-state))) :op4 (p5 / person :arg0-of (h4 / have-org-role-91 :arg2 (h5 / head-of-state))) :op5 (p6 / person :arg0-of (h6 / have-org-role-91 :arg2 (h7 / head-of-state)))) :purpose (i / ignore-01 :arg0 (p7 / person) :arg1 (t / thing :arg0-of (e3 / evidence-01 :arg1 (a3 / abuse-01 :arg1 (e4 / elect-01)))))) :op2 (b / because :arg0 (p8 / person) :arg1 (t2 / thing :arg0-of (e5 / evidence-01 :arg1 (a4 / abuse-01 :arg1 (e6 / elect-01))))))
(o / obligate-01 :arg1 (p / person :arg0-of (v / vote-01)) :arg2 (a / and :op1 (n / name :poss (p2 / person)) :op2 (a2 / address :poss (p3 / person))) :mod (m / mere) :time (c / current))
(a / and :op1 (r / represent-01 :arg0 (y / you) :arg1 (a2 / and :op1 (c / cbc) :op2 (c2 / canada))) :op2 (m / make-02 :arg0 (y2 / you) :arg1 (s / sound-01 :arg1 (w / we :quant (a3 / all)) :arg2 (r2 / racist :quant (b / bunch)))))
(a / and :op1 (r / relate-01 :arg1 (c / comment-01 :arg0 (c2 / country :name (n / name :op1 "N-A"))) :arg2 (p / perform-01 :arg1 (s / swimmer))) :op2 (r2 / relate-01 :polarity - :arg1 (c3 / comment-01) :arg2 (s2 / she) :prep-as (i / individual)))
(m / multi-sentence :snt2 (s / sorry-01 :arg1 (i / i) :degree (v / very)) :snt2 (s2 / sorry-01 :arg1 (i2 / i) :degree (v2 / very)))
(a / and :op1 (u / use-01 :arg0 (h / he) :arg1 (l / luminometer :purpose (s / show-01 :arg0 (h2 / he) :arg1 (p / person))) :time (b / before :op1 (c / complain-01 :mod (e / each)))) :op2 (u2 / use-01 :arg0 (h3 / he) :arg1 (t / thing :arg1-of (g / get-01 :arg0 (h4 / he))) :arg2 (w / we) :mod (j / just)))
(f / force :mod (a / air) :mod (p / portuguese) :arg1-of (p2 / p-3c :arg2 (l / low-04 :degree (i / incredible))) :arg0-of (s / swooped :arg1 (p3 / plane) :degree (i2 / incredible)))
(c / contrast-01 :arg1 (t / try-01 :arg0 (p / person :mod (c2 / country :name (n / name :op1 "N-A"))) :arg1 (t2 / try-01 :arg0 (p2 / person) :arg1 (m / make-01 :arg0 (p3 / person) :arg1 (i / it)))) :arg2 (g / go-01 :arg1 (g2 / game) :direction (d / down) :location (c3 / corner :mod (l / left)) :purpose (m2 / make-01 :arg0 (p4 / person) :arg1 (i2 / it))) :arg1-of (c4 / contrast-01 :arg2 (g3 / go-01 :arg1 (g4 / game) :direction (w / way :poss (p5 / person :arg0-of (s / sing-01 :arg1 (a / and :op1 (f / flags :mod (w2 / waved)) :op2 (f2 / flags :mod (w3 / waved)) :op3 (d2 / dance :mod (w4 / waved))))))) :arg1-of (l2 / long-03)))
(c / contrast-01 :arg1 (j / journey :location (c2 / country :name (n / name :op1 "N-A"))) :arg2 (m / make-02 :arg0 (t / that) :arg1 (b / big :degree (m2 / more :degree (b2 / bit)))))
(d / detain-01 :arg1 (p / person :quant (s / several)) :arg2 (s2 / suspect-01 :arg1 (e / explode-01)) :time (a / already))
(c / contrast-01 :arg1 (f / fall-01 :arg1 (g / grow-01 :arg1 (e / economy)) :arg3 (p / percentage-entity :value (N / N-A)) :arg4 (v / value-interval :op1 2014 :op2 7.2) :arg4 (v2 / value-interval :op1 2014 :op2 7.2) :arg4 (p2 / percentage-entity :value (N2 / N-A)) :arg4 (v3 / value-interval :op1 2014 :op2 7.2)) :arg2 (r / remain-01 :arg1 (t / tourism :arg1-of (r2 / remain-01) :arg1-of (r3 / remain-01 :arg3 (s / sector :quant (f2 / few) :arg0-of (s2 / show-01 :arg1 (g2 / grow-01))))) :arg3 (t2 / tourism)) :time (a / after :op1 (t3 / take-over-12 :arg0 (j / junta :mod (m / military)) :arg1 (c2 / country :quant 2014))))
(c / contrast-01 :arg2 (k / know-01 :arg0 (w / we) :arg1 (a / and :op1 (l / link-01 :polarity - :arg1 (i / incident :mod (t / this)) :arg2 (f / form :mod (t2 / terrorism) :mod (a2 / any)) :arg1-of (d / direct-02)) :op2 (a3 / act-02 :arg0 (w2 / we) :arg1-of (c2 / cause-01 :arg0 (a4 / and :op1 (a5 / act-02 :arg0 (t3 / they) :arg1-of (l2 / local-02)) :op2 (t4 / try-01 :arg0 (w3 / we) :arg1 (e / establish-01 :arg0 (w4 / we) :arg1 (i2 / identity :poss (p / person :arg1-of (b / be-located-at-91 :arg2 (b2 / behind))))))))))))
(a / and :op1 (i / indistinguishable :arg1 (h / he) :arg2 (p / paradise :arg1-of (c / clever) :mod (o / other) :mod (t / that)) :time (l / late :op1 (t2 / temporal-quantity :quant (N / N-A) :unit (y / year)) :degree (m / more)) :prep-with (b / bearded)) :op2 (i2 / indistinguishable :arg1 (h2 / he) :arg2 (p2 / paradise :arg1-of (c2 / clever) :mod (o2 / other) :mod (t3 / that))))
(f / fill-01 :arg1 (v / village :mod (o / olympic) :location (a / and :op1 (s / side :quant 1) :op2 (s2 / side :mod (o2 / other))) :location (s3 / side :mod (o3 / other))) :arg2 (a2 / and :op1 (f2 / filled :location (h / here)) :op2 (b / be-located-at-91 :arg1 (s4 / side :mod (o4 / other)) :arg2 (s5 / side :mod (o5 / other))) :op3 (f3 / fill-01 :arg1 (v2 / village) :arg2 (s6 / side :mod (o6 / other)))))
(c / contrast-01 :arg2 (b / basketball :arg0 (a / and :op1 (p / person :mod (c2 / country :name (n / name :op1 "N-A"))) :op2 (p2 / person :mod (c3 / country :name (n2 / name :op1 "N-A")))) :arg1 (i / it) :arg1-of (i2 / instead-of-91)))
FAILED_TO_PARSE#Number of opening and closing brackets doesn't match.
(m / multi-sentence :snt1 (c / cause-01 :mode (i / interrogative) :arg0 (a / amr-unknown) :arg1 (e / easy-05 :mode (i2 / interrogative) :arg1 (i3 / it) :degree (m2 / more) :beneficiary (i4 / i))) :snt2 (e2 / exemplify-01 :mode (i5 / interrogative) :arg0 (l / language :mod (n / native) :poss (i6 / i) :domain (t / tatar))) :snt3 (c2 / conclude-01 :mode (i7 / interrogative) :arg0 (y / you) :arg1 (g / galiullin :arg1 (i8 / it))))
(b / bring-01 :arg1 (c / case-03 :quant 2 :arg2-of (c2 / criminal-03)) :arg2 (o / oppose-01 :arg1 (n / nikolai)))
(n / note-01 :arg0 (p / person :name (n2 / name :op1 "N-A") :arg0-of (h / have-org-role-91 :arg1 (c / city-district :name (n3 / name :op1 "N-A") :mod (c2 / chelyabinsk)) :arg2 (g / governor))) :arg1 (v / visit-01 :arg0 (p2 / person) :arg1 (p3 / person :arg0-of (v2 / visit-01 :time (d / day :ord (o / ordinal-entity :value 1) :part-of (j / july))))) :time (r / recent))
(s / state-01 :arg0 (p / person :name (n / name :op1 "dygalo")) :arg1 (a / and :op1 (c / conducted :arg1 (e / exercise :mod (f / fleet :mod (s2 / sea)) :arg1-of (b / black-04) :mod (t / this)) :arg1-of (a2 / accord-02 :arg2 (p2 / plan-01 :arg1 (p3 / prepare-02))) :arg1-of (a3 / accord-02 :arg2 (p4 / plan-01 :arg1 (p5 / prepare-02))) :arg1-of (a4 / accord-02 :arg2 (p6 / plan-01 :arg1 (p7 / prepare-02)))) :op2 (p8 / plan-01 :arg1 (t2 / train-01 :arg2 (n2 / navy)))))
(a / and :op1 (s / start-01 :arg1 (r / rate-entity-91 :arg1 (d / day :quant 11) :arg2 (t / temporal-quantity :quant (N / N-A) :unit (d2 / day)))) :op2 (c / consider-02 :arg1 (h / holiday) :arg2 (o / off :op1 (d3 / day :mod (o2 / official)))))
(a / and :op1 (d / design-01 :arg0 (t / they) :arg1 (l / luggage :beneficiary (c / country :name (n / name :op1 "N-A"))) :time (e / end-01 :arg1 (c2 / century :ord (o / ordinal-entity :value (n2 / nineteenth)))) :time (e2 / end-01 :arg1 (c3 / century :ord (o2 / ordinal-entity :value (n3 / nineteenth))))) :op2 (a2 / alexander :arg0 (a3 / and :op1 (d2 / duke :mod (g / grand)) :op2 (r / romanov :name (n4 / name :op1 (a4 / alexander))) :op3 (f / family :arg1-of (h / have-org-role-91 :arg0 (p / person :arg0-of (m / migrate-01)) :arg2 (m2 / member))))))
(m / multi-sentence :snt1 (s / stipulates :mode (i / interrogative) :arg0 (t / they) :arg1 (t2 / that)) :snt2 (o / oblige-02 :mode (i2 / interrogative) :arg1 (i3 / identify-01 :arg1 (p / person :arg0-of (u / use-01)) :arg2 (p2 / person :arg0-of (u2 / use-01)) :arg1-of (b / base-02 :arg2 (t3 / thing :arg1-of (c / contain-01 :arg0 (p3 / person :arg0-of (p4 / provide-01 :arg1 (s2 / service)))))))) :snt3 (o2 / oblige-02 :arg1 (i4 / identify-01 :arg1 (p5 / person :arg0-of (u3 / use-01)) :arg2 (t4 / thing :arg1-of (c2 / contain-01 :arg0 (i5 / information :topic (i6 / information)))))))
(r / report-01 :arg0 (s / service :mod (p / press)) :arg1 (t / transport-01 :arg1 (p2 / passenger :arg0-of (c / carry-01 :arg1 (p3 / passenger :arg0-of (c2 / carry-01)))) :location (a / along :op1 (r2 / route :name (n / name :op1 (p4 / p-29)))) :location (a2 / along :op1 (r3 / route :name (n2 / name :op1 (p5 / p-29) :op2 (s2 / sudak-feodosia))))))
(d / describe-01 :arg0 (p / person :arg0-of (a / analyze-01)) :arg1 (p2 / person :arg0-of (a2 / analyze-01)) :arg2 (t / thing :arg1-of (f / feel-01 :arg0 (p3 / person))) :concession (o / offer-01 :arg0 (p4 / person) :arg1 (t2 / thing :arg0-of (e / evidence-01 :arg1 (o2 / order-01 :arg0 (p5 / person :arg0-of (h / have-org-role-91 :arg1 (g / government-organization :arg0-of (a3 / administrate-01 :arg1 (c / country :name (n / name :op1 "N-A")))) :arg2 (o3 / official :mod (s / senior)))) :arg2 (p6 / person :arg0-of (h2 / have-org-role-91 :arg1 (g2 / government-organization :arg0-of (a4 / administrate-01 :arg1 (c2 / country :name (n2 / name :op1 "N-A")))) :arg2 (o4 / official :mod (s2 / senior))))))) :arg1-of (c3 / cause-01 :arg0 (v / view-02 :arg0 (p7 / person) :arg1 (t3 / thing :arg1-of (o5 / optimistic :topic (t4 / threaten-01 :arg0 (s3 / state :mod (r / religious-group)) :arg1-of (o6 / optimistic :degree (m / more)) :arg1-of (k / know-02 :arg2 (o7 / or :op1 (i / isis) :op2 (i2 / isil)) :mod (a5 / also)))))))))
(s / say-01 :arg0 (p / photo) :arg1 (w / want-01 :arg0 (p2 / photo) :arg1 (a / and :op1 (e / experiment-01 :arg0 (h / he) :arg1 (i / ingredient :mod (n / new))) :op2 (i2 / introduce-02 :arg0 (h2 / he) :arg1 (i3 / ingredient :mod (n2 / new))))))
(e / enough :domain (s / send-01 :arg1 (w / whiff :quant 1) :arg2 (w2 / way :mod (o / other))) :mod (u / usual))
(a / and :op1 (p / present-01 :arg0 (p2 / person :arg0-of (h / have-org-role-91 :arg2 (m / minister :mod (a2 / affair :mod (f / foreign))))) :arg1 (i / information :mod (t / this))) :op2 (p3 / present-01 :arg0 (p4 / person :arg0-of (h2 / have-org-role-91 :arg1 (j / journalist :arg1-of (l / local-02)) :arg2 (m2 / minister))) :arg1 (i2 / information :mod (t2 / this))))
(a / and :op1 (a2 / arabs :arg1 (m / majority :poss (g / guest :poss (w / we)))) :op2 (d / demand-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (g2 / guest :poss (w2 / we)) :arg3 (m2 / majority))) :arg1 (c / code :mod (c2 / country :name (n / name :op1 "Israel")))) :op3 (q / quote-01 :arg1 (e / employee) :arg2 (s / say-01 :arg0 (p2 / person) :arg1 (e2 / employee))))
(s / say-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg2 (a / ambassador))) :arg1 (a2 / achieve-01 :arg0 (s2 / supply-01 :arg1 (a3 / and :op1 (p2 / product :name (n / name :op1 "N-A")) :op2 (v / vehicle :location (g / ground)) :op3 (w / weapon))) :arg1 (b / boost-01)))
(c / continue-01 :arg0 (s / state) :arg1 (t / tighten-01 :arg0 (s2 / state) :arg1 (m / multivitamin) :location (c2 / complex :mod (m2 / military-industrial))))
(b / believe-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (c / country :name (n / name :op1 "Russia") :mod (m / military)) :arg3 (l / lead-02 :arg0 (p2 / person)))) :arg1 (b2 / believe-01 :arg0 (p3 / person) :arg1 (b3 / bring-01 :arg0 (f / fail-01 :arg2 (m2 / meet-01 :arg1 (d / deliver-01 :arg1 (d2 / deliver-01) :arg2 (p4 / project :mod (t / this))))) :arg1 (n2 / neskorodov))))
(a / admit-01 :arg0 (i / i) :arg1 (f / fall-01 :arg1 (t / thing :arg1-of (f2 / fall-01 :arg4 (t2 / track))) :arg4 (t3 / track) :arg1-of (f3 / follow-01 :arg2 (s / start-01 :mod (p / poor))) :manner (d / deliberate)) :time (a2 / after :op1 (t4 / triumphing :arg1 (a3 / and :op1 (k / kenny :quant 2012) :op2 (h / hoy)))))
(h / have-03 :arg0 (c / contract-02) :arg1 (p / period :time-of (f / finish-01 :arg0 (t / they) :arg1 (p2 / period :quant 2017) :mod (a / actual))))
(h / help-01 :arg0 (m / mission :mod (l / late :degree (m2 / most)) :mod (l2 / late :degree (m3 / most))) :arg1 (c / collect-01 :arg1 (r / rate :mod (h2 / horror) :arg1-of (c2 / complete-02 :degree (m4 / most))) :arg2 (s / star :arg1-of (m5 / mean-01 :arg2 (s2 / star :mod (p / pleiades))))))
(m / measure-02 :arg0 (p / person :mod (c / country :name (n / name :op1 "N-A"))) :arg1 (r / rate-entity-91 :arg1 (u / under :op1 (b / between :op1 (t / temporal-quantity :quant (N / N-A) :unit (y / year)) :op2 (t2 / temporal-quantity :quant (N2 / N-A) :unit (y2 / year)))) :arg2 (t3 / temporal-quantity :quant (N3 / N-A) :unit (y3 / year))) :arg1-of (r2 / resemble-01 :arg2 (s / sunspots)))
(i / improve-01 :polarity - :arg1 63 :arg1-of (c / cause-01 :arg0 (a / amr-unknown)) :arg1-of (c2 / cause-01 :arg0 (a2 / amr-unknown)) :arg1-of (c3 / cause-01 :arg0 (a3 / amr-unknown)) :arg1-of (c4 / cause-01 :arg0 (a4 / amr-unknown)) :arg1-of (c5 / cause-01 :arg0 (a5 / amr-unknown)) :arg1-of (c6 / cause-01 :arg0 (a6 / amr-unknown)) :arg1-of (c7 / cause-01 :arg0 (a7 / amr-unknown)) :arg1-of (c8 / cause-01 :arg0 (a8 / amr-unknown)) :arg1-of (c9 / cause-01 :arg0 (a9 / amr-unknown)) :arg1-of (c10 / cause-01 :arg0 (a10 / amr-unknown)))
(b / bring-01 :arg1 (s / some) :arg2 (c / country :arg1-of (d / differ-02) :arg0-of (l / leave-11 :arg1 (p / person :arg0-of (h / have-rel-role-91 :arg1 (p2 / person) :arg2 (p3 / parent))) :time (e / event :name (n / name :op1 "N-A")))) :arg0-of (l2 / leave-13 :arg1 (c2 / choose-01 :polarity -)))
(f / find-01 :arg0 (i / i) :arg1 (a / athletes :quant (a2 / at-least :op1 16) :arg0-of (d / decide-01 :arg1 (c / change-01 :arg0 (a3 / athletes) :arg1 (c2 / citizenship :poss (c3 / country) :mod (c4 / country :name (n / name :op1 "N-A")))))))
(b / bear-02 :arg1 (p / person :arg0-of (h / have-org-role-91 :arg2 (m / maria))) :location (y / yaroslavl :location-of (b2 / become-01 :arg1 (p2 / person) :arg2 (o / obsess-01 :arg0 (p3 / person) :arg1 (s / swim-01 :arg0 (p4 / person) :mod (s2 / synchronised))) :time (f / first))) :location (y2 / yaroslavl :quant (y3 / yaroslavl :op1 (y4 / yaroslavl))))
(c / continue-01 :arg0 (g / girl) :arg1 (t / train-01 :arg0 (g2 / girl) :arg2 (s / swim-01 :arg0 (g3 / girl)) :manner (w / well :degree (v / very)) :location (l / level :mod (n / nation))))
FAILED_TO_PARSE#Number of opening and closing brackets doesn't match.
(r / result-01 :arg1 (i / idea :mod (n / new) :mod (t / this)) :arg2 (p / populism :arg1-of (c / cheap-02)) :condition (a / and :op1 (d / do-02 :arg1 (e / everything) :location (h / hurry)) :op2 (k / know-01 :polarity - :arg1 (t2 / thing :manner-of (g / go-06 :arg1 (e2 / everything))))))
(c / contrast-01 :arg1 (c2 / collect-01 :arg0 (a / and :op1 (p / person :arg0-of (o / own-01 :arg1 (c3 / company :arg0-of (m / manage-01 :arg1 (p2 / property))))) :op2 (p3 / person :arg0-of (o2 / own-01 :arg1 (p4 / population))) :op3 (p5 / person :arg0-of (p6 / provide-01 :arg1 (m2 / money)))) :arg1 (c4 / company :arg0-of (p7 / provide-01 :arg1 (s / service)) :mod (t / total))) :arg2 (u / use-01 :arg0 (p8 / person) :arg1 (m3 / money) :arg2 (p9 / purpose :poss (p10 / person))))
(h / have-concession-91 :arg2 (r / ride-01 :arg0 (c / country :name (n / name :op1 "N-A")) :arg1 (w / winners :mod (g / good :degree (m / most)) :arg1-of (s / see-01 :arg1-of (s2 / see-01 :arg0 (c2 / country))))) :manner (s3 / serious))
(c / contrast-01 :arg1 (e / evacuated :arg1 (p / person :arg0-of (r / reside-01)) :arg2 (p2 / person :quant 2)) :arg2 (f / flooding :time (n / now)))
(h / have-03 :arg0 (a / and :op1 (b / boorman :mod (a2 / aimee)) :op2 (c / coach :mod (s / simone)) :op3 (c2 / coach :mod (s2 / simone)) :op4 (c3 / coach :mod (l / laurie))) :arg1 (a3 / athletes :poss (t / they)) :time (s3 / since :op1 (s4 / start-01 :arg0 (t2 / they) :location (w / war :name (n / name :op1 "N-A")))))
(s / say-01 :arg1 (r / recommend-01 :arg1 (g / give-01 :arg1 (p / protect-01 :arg1 (p2 / protect-01) :mod (g2 / great :degree (m / more))) :arg2 (t / thing :arg1-of (s2 / say-01)))) :arg2 (p3 / person :name (n / name :op1 "N-A")))
(s / say-01 :arg1 (d / die-01 :arg1 (p / person :mod (c / country :name (n / name :op1 "N-A")) :mod (c2 / country :name (n2 / name :op1 "N-A"))) :arg1-of (r / resemble-01 :arg2 (s2 / say-01 :arg0 (p2 / person) :arg1 (d2 / die-01 :arg1 (p3 / person :mod (c3 / country)) :arg1-of (r2 / resemble-01 :arg2 (p4 / pig)))))) :arg2 (p5 / person :arg0-of (s3 / say-01 :arg1 (d3 / die-01 :arg1 (p6 / person)))))
(e / email-address-entity :value (p / primark) :domain (p2 / political-party :name (n / name :op1 "N-A") :arg0-of (t / try-01 :arg1 (u / underwear :location (m / middle :part-of (s / shop))))))
(p / phone-number-entity :value (N / N-A))
(a / and :op1 (r / raid-01 :arg0 (p / police) :arg1 (p2 / property)) :op2 (f / find-01 :arg0 (p3 / police) :arg1 (p4 / property)) :op3 (f2 / find-01 :arg0 (p5 / police) :arg1 (a2 / and :op1 (m / more-than :op1 (7 / 70g)) :op2 (m2 / more-than :op1 (72 / 70g)) :op3 (m3 / monetary-quantity :quant 1,700 :unit (y / yuan)) :op4 (m4 / monetary-quantity :quant 1,700 :unit (y2 / yuan)))))
(s / say-01 :arg0 (p / person :arg0-of (l / lead-02 :arg1 (o / organization :name (n / name :op1 "senate" :op2 "democratic"))) :arg0-of (h / have-org-role-91 :arg1 (o2 / organization) :arg3 (l2 / lead-02))) :arg1 (c / convince-01 :arg0 (p2 / person) :arg1 (p3 / person :arg0-of (h2 / have-org-role-91 :arg3 (j / judge-01)) :arg0-of (n2 / nominate-01 :arg1 (p4 / person :arg0-of (h3 / have-org-role-91 :arg3 (j2 / judge-01)))) :arg0-of (h4 / have-org-role-91 :arg3 (j3 / judge-01))) :arg2 (p5 / person :arg0-of (h5 / have-org-role-91 :arg3 (j4 / judge-01))) :condition (e / elect-01 :arg1 (p6 / person) :arg2 (p7 / president))))
(d / detain-01 :arg1 (i / individual :arg0-of (p / participate-01 :arg1 (p2 / prepare-01 :arg1 (a / attack-01 :arg0 (t / terrorist))))) :arg2 (i2 / individual))
(a / admit-01 :arg0 (p / person :arg0-of (r / reside-01 :arg1 (r2 / region :mod (z / zaporozhsky))) :arg0-of (r3 / reside-01 :arg1 (s / suspect-01 :arg1 (a2 / act-01 :arg0 (p2 / person) :arg1 (t / terrorism :location (c / crimea)))))) :arg1 (g / guilt :arg0 (p3 / person)) :time (i / interrogate-01 :arg2 (p4 / person)) :time (e / early :degree (m / more)))
(c / confirm-01 :arg0 (c2 / court :mod (d / district)) :arg1 (v / violate-01 :arg0 (a / and :op1 (t / thing :arg1-of (r / require-01 :arg0 (d2 / distribute-01 :arg1 (p / product :mod (i / information))))) :op2 (d3 / distribute-01 :arg1 (p2 / product))) :arg1 (p3 / penalize-01 :arg2 (a2 / and :op1 (d4 / distribute-01 :arg1 (p4 / product)) :op2 (c3 / confiscation :arg1 (c4 / copy-01 :arg1 (c5 / copy-01 :quant 49 :arg1-of (p5 / print-01)) :arg1-of (s / seize-01 :arg0 (d5 / directorate :mod (r2 / rospotrebnadzor)))))))))
(h / have-concession-91 :arg1 (n / notice-01 :arg0 (h2 / he) :arg1 (w / wave-04 :arg1 (p / person :arg1-of (i / influence-01 :arg0 (m / media)) :mod (n2 / new)) :mod (n3 / new))) :arg2 (n4 / notice-01 :arg0 (h3 / he) :arg1 (p2 / pretend-01 :arg0 (p3 / person) :arg1 (b / buy-01 :arg0 (p4 / person) :arg1 (r / record :mod (o / old) :poss (p5 / person))))))
(m / multi-sentence :snt1 (c / contrast-01 :arg1 (l / listen-01 :arg1 (m2 / music :mod (o / or :op1 (c2 / computer) :op2 (w / way :mod (a / another))))) :arg2 (e / easy :arg1 (w2 / woe :poss (v / vinyl)))) :snt2 (d / drifts :mode (e2 / expressive)))
(s / say-01 :arg0 (c / court :mod (l / lille)) :arg1 (c2 / contrast-01 :arg1 (b / base-02 :polarity - :arg1 (r / ride-01 :arg1 (p / person :arg0-of (r2 / run-01 :arg1 (s2 / shop :quant 72 :mod (m / makeshift))))) :arg1-of (l2 / legal-02)) :arg2 (s3 / say-01 :arg0 (c3 / court) :arg1 (u / understand-01 :arg1 (c4 / concern-01 :arg0 (p2 / prefect :mod (c5 / calais))) :degree (t / total)))))
(c / contrast-01 :arg1 (t / try-01 :arg0 (p / person :mod (c2 / country :name (n / name :op1 "N-A"))) :arg1 (t2 / try-01 :arg0 (p2 / person) :arg1 (m / make-01 :arg0 (p3 / person) :arg1 (i / it)))) :arg2 (g / go-01 :arg1 (g2 / game) :direction (d / down) :location (c3 / corner :mod (l / left)) :purpose (m2 / make-01 :arg0 (p4 / person) :arg1 (i2 / it))) :arg1-of (c4 / contrast-01 :arg2 (g3 / go-01 :arg1 (g4 / game) :direction (w / way :poss (p5 / person :arg0-of (s / sing-01 :arg1 (a / and :op1 (f / flags :mod (w2 / waved)) :op2 (f2 / flags :mod (w3 / waved)) :op3 (d2 / dance :mod (w4 / waved))))))) :arg1-of (l2 / long-03)))
(s / state-01 :arg0 (p / person :name (n / name :op1 "alexander" :op2 "medvedev") :arg0-of (h / have-org-role-91 :arg1 (b / board) :arg2 (c / chairman :mod (d / deputy)))) :arg1 (t / this))
(s / say-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (a / army))) :arg1 (a2 / and :op1 (t / take-01 :arg0 (a3 / army) :arg1 (s2 / step :mod (t2 / this)) :manner (c / crisis :mod (p2 / politics) :arg1-of (g / go-on-15))) :op2 (l / lack-01 :arg0 (c2 / crisis) :arg1 (n / negotiate-01 :arg0 (g2 / government-organization :arg0-of (g3 / govern-01))))))
(m / multi-sentence :snt1 (g / get-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg2 (d / director))) :arg1 (k / keys :beneficiary (p2 / person :mod (r / religious-group :name (n / name :op1 "N-A")) :arg0-of (h2 / have-org-role-91 :arg2 (d2 / director)))) :mod (i / in-fact) :mod (a / again :mod (o / once))) :snt2 (j / judge-01 :mode (i2 / interrogative) :arg0 (p3 / person :mod (e / ethnic-group :name (n2 / name :op1 "N-A")))))
(b / bring-01 :arg1 (p / person :arg1-of (c / charge-05) :mod (n / new)) :arg2 (j / journalist :mod (r / rbc)))
(h / have-03 :arg0 (p / person :arg0-of (h2 / have-org-role-91 :arg1 (t / team) :arg3 (a / apprentice-01 :arg0 (p2 / person)))) :arg1 (p3 / person :arg0-of (h3 / have-org-role-91 :arg1 (t2 / team) :arg3 (a2 / apprentice-01 :arg0 (p4 / person)))) :purpose (p5 / provide-01 :arg0 (p6 / person) :arg1 (p7 / person :arg0-of (r / reside-01 :arg1 (h4 / house)) :arg2-of (i / include-01 :arg1 (a3 / and :op1 (m / massage :arg1-of (r2 / relaxation)) :op2 (m2 / massage :mod (s / sports))))) :time (a4 / always)) :mod (o / of-course))
(d / dare-01 :arg0 (i / i) :arg1 (s / say-01 :arg0 (i2 / i) :arg1 (d2 / decide-01 :arg0 (t / they) :arg1 (a / arranged :arg0 (t2 / they) :arg1 (n / naptime :beneficiary (t3 / they) :arg1-of (d3 / direct-02)) :arg2 (t4 / they) :arg1-of (d4 / direct-02))) :time (m / moment :mod (a2 / any))) :arg1-of (s2 / say-01 :arg0 (i3 / i)))
(m / multi-sentence :snt2 (q / question-01 :location (c / country :name (n / name :op1 "N-A"))) :snt2 (q2 / question-01 :location (c2 / country :name (n2 / name :op1 "N-A"))))
(b / be-located-at-91 :arg1 (c / channel :name (n / name :op1 (r / reruns)) :mod (c2 / country :name (n2 / name :op1 "Russia"))) :arg2 (t / thing :arg0-of (c3 / cause-01 :arg1 (p / prerecorded :quant (s / some)))))
(a / and :op2 (c / charge-05 :arg1 (p / person :quant 222 :arg1-of (i / include-91 :arg2 (c2 / code :mod (c3 / criminal-03) :part-of (a2 / and :op1 (a3 / acquire-01 :arg0 (c4 / criminal-organization :name (n / name :op1 "N-A") :mod (c5 / country :name (n2 / name :op1 "N-A"))) :arg1 (a4 / and :op1 (a5 / acquire-01 :mod (l / law :polarity -)) :op2 (s / storage :mod (a6 / ammunition))) :mod (l2 / law :polarity -))) :op2 (s2 / storage :mod (a7 / ammunition)))))))
(f / find-01 :arg1 (p / possess-01 :arg0 (a / and :op1 (p2 / person :arg1-of (k / know-01 :polarity -) :arg1-of (k2 / know-01 :polarity -)) :op2 (p3 / person :arg1-of (i / involve-01 :arg2 (d / defraud-01) :arg1-of (k3 / know-01 :polarity -)))) :arg1 (p4 / possess-01 :arg1 (p5 / person :arg1-of (i2 / involve-01 :arg2 (d2 / defraud-01)) :arg1-of (r / result-01 :arg2 (d3 / defraud-01)) :arg1-of (r2 / result-01 :arg2 (l / lay-off-02 :arg1 (c / charge-05 :mod (a2 / additional) :prep-against (h / he))))))))
(m / misses :arg0 (c / company :name (n / name :op1 "N-A") :arg0-of (h / have-rel-role-91 :arg2 (b / brother))) :arg1 (d / deadline) :time (e / ever :polarity -) :mod (h2 / high-profile) :domain (t / this))
(r / receive-01 :arg0 (t / treasury :mod (f / federal)) :arg1 (r2 / roubles :quant 8.9) :arg1-of (c / cause-01 :arg0 (s / start-01 :arg1 (c2 / construct-01 :arg1 (a / and :op1 (p / project :name (n / name :op1 (t2 / tominskiy))) :op2 (p2 / project :topic (p3 / plant :mod (p4 / process-01)))) :mod (e / entire)))) :time (s2 / start-01 :arg1 (c3 / construct-01 :arg1 (p5 / phase :poss (p6 / project) :ord (o / ordinal-entity :value 2) :part-of (p7 / project)))))
(m / multi-sentence :snt1 (p / person :arg0-of (w / write-01)) :snt2 (d / drive-01 :mode (i / interrogative) :arg0 (h / he) :arg1 (p2 / pile)))
(o / order-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (c / country) :arg2 (m / minister :mod (p2 / prime)))) :arg2 (i / implement-01 :arg1 (m2 / measure-02 :arg1 (s / security) :mod (a / additional)) :purpose (p3 / prevent-01 :arg0 (i2 / implement-01) :arg1 (a2 / and :op1 (e / explode-01 :mod (f / further)) :op2 (r / rule-out-02 :arg1 (v / victim :mod (a3 / additional)))))))
(s / sell-01 :arg1 (c / copy-01 :quant (a / all)) :time (a2 / after :op1 (n / now) :quant (u / up-to :op1 (t / temporal-quantity :quant (N / N-A) :unit (d / day)))))
(c / consider-02 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg2 (o / official))) :arg1 (t / thing :arg2-of (s / sanction-02 :arg0 (p2 / person) :arg1 (a / and :op1 (p3 / person :arg0-of (h2 / hack-04 :arg1 (s2 / server :poss (p4 / party :mod (d / democracy))))) :op2 (j / journal :name (n / name :op1 (w / wall) :op2 (s3 / street) :op3 (s4 / street))) :op4 (j2 / journal :name (n2 / name :op1 (w2 / wall) :op2 (s5 / street)))))) :arg2 (p5 / person :arg0-of (h3 / have-org-role-91 :arg2 (o2 / official))))
(n / note-01 :arg0 (n2 / note :name (n3 / name :op1 (w / wsj))) :arg1 (n4 / name-01 :polarity - :arg0 (s / state) :arg1 (p / person :arg0-of (c / carry-out-03 :arg1 (c2 / cyber))) :manner (s2 / specific-02)) :arg1-of (g / general-02))
(a / accident :mod (t / terrible) :time (e / evening :time (y / yesterday) :location (a2 / area :name (n / name :op1 (k / kiziltash)) :location (c / crimean))))
(s / share-01 :arg0 (p / person :arg0-of (o / observe-01) :mod (o2 / other) :arg0-of (o3 / observe-01)) :arg1 (c / complain-01 :arg0 (p2 / person) :arg1-of (c2 / cause-01 :arg0 (l / leave-11 :arg0 (p3 / person) :degree (l2 / large)))))
(r / rate-entity-91 :arg1 1 :arg2 (t / temporal-quantity :quant (N / N-A) :unit (d / day)) :time (a / after :op1 (g / goal :quant 1 :arg1-of (w / win-01 :arg0 (a2 / and :op1 (c / country :name (n / name :op1 "N-A")) :op2 (t2 / team :name (n2 / name :op1 (k / katie)) :mod (f / field) :poss (w2 / woman)) :op3 (t3 / team :name (n3 / name :op1 (h / hockey)) :mod (f2 / field) :mod (f3 / field) :poss (w3 / woman)))))) :time (d2 / day :quant 1) :time (a3 / after :op1 (g2 / goal :quant 1 :arg1-of (w4 / win-01 :arg0 (a4 / and :op1 (p / person :mod (c2 / country :name (n4 / name :op1 "N-A"))) :op2 (p2 / person :mod (c3 / country) :arg1-of (d3 / defeat-01) :mod (c4 / country)))))))
(a / and :op1 (m / meet-03 :arg0 (c / country :name (n / name :op1 "United" :op2 "States")) :arg1 (c2 / country :name (n2 / name :op1 "United" :op2 "States")) :time (g / game :mod (l / last) :part-of (r / round :ord (o / ordinal-entity :value 1)))))
(a / and :op1 (t / think-01 :arg0 (v / video :name (n / name :op1 (c / circulating) :op2 (c2 / circulating)) :source (p / protest-01)) :arg1 (p2 / person :mod (y / young) :arg0-of (h / have-org-role-91 :arg2 (o / officer :mod (s / security)))) :time (b / before :op1 (n2 / now) :duration (o2 / or :op1 (t2 / temporal-quantity :quant (N / N-A) :unit (y2 / year)) :op2 (e / early :degree (m / more))))) :op2 (s2 / show-01 :arg0 (p3 / person :arg0-of (h2 / have-org-role-91 :arg1 (s3 / security) :arg2 (o3 / officer))) :arg1 (p4 / person :mod (y3 / young)) :arg2 (p5 / person :mod (y4 / young)) :arg1-of (c3 / cause-01 :arg0 (f / force-01 :arg1 (p6 / person) :arg2 (p7 / perform-02 :arg0 (p8 / person) :arg1 (a2 / against :op1 (w / wall)))))))
(t / try-01 :arg0 (p / person :arg0-of (t2 / trumps)) :arg1 (q / quash :arg0 (p2 / person) :arg1 (c / campaign-01 :arg0 (p3 / person) :arg1 (c2 / controversial :arg0 (p4 / person) :arg1 (c3 / campaign-01 :arg0 (p5 / person)) :time (l / late :degree (m / most)))) :manner (c4 / claim-01 :arg0 (p6 / person) :arg1 (s / serious-02 :polarity - :arg1 (p7 / person) :time (i / insist-01 :arg0 (p8 / person) :arg1 (s2 / serious-02 :arg1 (p9 / person) :time (i2 / insist-01 :arg0 (p10 / person) :arg1 (s3 / serious-02 :arg1 (a / and :op1 (p11 / person :arg0-of (h / have-org-role-91 :arg2 (p12 / president))) :op2 (p13 / person :arg0-of (h2 / have-org-role-91 :arg2 (h3 / head-of-state))) :op3 (p14 / person :arg0-of (h4 / have-org-role-91 :arg1 (g / group :name (n / name :op1 "N-A") :mod (s4 / state) :mod (s5 / state) :mod (s6 / state)))))) :time (w / week :mod (t3 / this)))))))))
(g / go-02 :arg0 (c / customer :name (n / name :op1 (t / tom) :op2 (l / longtime)) :mod (a / another)) :arg4 (f / faithfully) :arg1-of (s / start-01 :location (t2 / thing :quant 2003)))
(s / say-01 :arg0 (h / he) :arg1 (a / and :op1 (c / come-01 :arg1 (i / i) :time (b / before :op1 (n / now) :quant (t / temporal-quantity :quant (N / N-A) :unit (d / day)))) :op2 (a2 / and :op1 (c2 / come-01 :arg1 (i2 / i)) :op2 (m / make-02 :arg0 (t2 / they) :arg1 (e / everything :arg1-of (b2 / bagel :arg2 (b3 / butter)))))) :li 7)
(s / say-01 :arg0 (p / photo) :arg1 (w / want-01 :arg0 (p2 / photo) :arg1 (a / and :op1 (e / experiment-01 :arg0 (h / he) :arg1 (i / ingredient :mod (n / new))) :op2 (i2 / introduce-02 :arg0 (h2 / he) :arg1 (i3 / ingredient :mod (n2 / new))))))
(u / use-01 :arg0 (c / conservationists :location (t / tanzania)) :arg1 (w / way :mod (u2 / unorthodox) :instrument-of (k / keep-02 :arg1 (e / elephants :arg1 (e2 / elephants :source (i / index :mod (h / human)))))) :manner (t2 / throw-01 :arg1 (e3 / elephants) :arg2 (p / powder :arg1-of (f / fill-01 :arg2 (c2 / chilli))) :location (c3 / chilli)))
(f / follow-01 :arg1 (m / move-02) :arg2 (t / thing :arg1-of (d / decide-01 :arg0 (g / government-organization :arg0-of (g2 / govern-01 :arg1 (f2 / family :name (n / name :op1 "N-A")))) :time (e / early :op1 (y / year :mod (t2 / this)) :degree (m2 / more)))) :purpose (e2 / extend-01 :polarity - :arg0 (m3 / move-02) :arg1 (t3 / thing :instrument-of (s / subsidize-01 :arg1 (t4 / thing :instrument-of (o / operate-01 :arg1 (p / plant)))))))
(s / say-01 :arg0 (p / person :arg0-of (s2 / supply-01 :arg1 (a / aluminium :mod (b / big)) :arg2 (p2 / plant :mod (p3 / power) :location (l / lower :name (n / name :op1 (l2 / latrobe)))))) :arg1 (e / expect-01 :arg0 (p4 / person) :arg1 (m / move-02 :arg0 (p5 / person :quant 3 :mod (o / other) :arg0-of (o2 / own-01)) :arg1 (a2 / agree-01 :arg0 (p6 / person) :arg1 (a3 / agree-01 :arg0 (p7 / person))) :mod (a4 / also))))
(l / lost :arg1 (p / person :mod (t / that) :arg1-of (l2 / legal-02) :mod (t2 / that)) :arg2 (l3 / lose-02 :arg0 (p2 / person) :arg1 (r / rate-entity-91 :arg1 30 :arg2 (t3 / temporal-quantity :quant (N / N-A) :unit (y / year))) :arg3 (f / fund-01 :arg0 (f2 / federal) :arg1 (f3 / federal))) :time (y2 / year :mod (n / next)))
(a / account-01 :arg0 (a2 / and :op1 (p / person :arg0-of (u / use-01 :arg1 (d / device :arg1-of (m / mobile-02)))) :op2 (p2 / person :arg0-of (u2 / use-01 :arg1 (d2 / device :arg1-of (m2 / mobile-02))))) :arg1 (r / rate-entity-91 :arg1 (r2 / revenue :poss (c / company :name (n / name :op1 "Facebook"))) :arg2 (r3 / rate-entity-91 :arg1 (r4 / revenue :poss (c2 / company)) :arg2 (r5 / rate-entity-91 :arg1 84 :arg2 (t / temporal-quantity :quant (N / N-A) :unit (y / year))))) :time (n2 / now))
(s / suggest-01 :arg0 (s2 / scientist :arg0-of (h / have-org-role-91 :arg2 (s3 / scientist))) :arg1 (e / explain-01 :arg0 (a / atmosphere :mod (t / thick)) :arg1 (r / rate :mod (r2 / rotation))) :time (p / previous))
(s / stage-01 :arg1 (s2 / strike-01 :arg1 (g / group :consist-of (w / wood) :mod (s3 / service :mod (u / ultra)))) :arg2 (p / platform :location (r / relative-position :op1 (n / north) :direction (n2 / north) :direction (n3 / north)) :arg1-of (o / operated :arg0 (s4 / shell :mod (r2 / royal) :mod (r3 / royal)))))
(a / and :op1 (h / hold-01 :arg0 (w / we) :arg1 (m / meet-03 :quant (n / number) :mod (f / full-day)) :time (a2 / after :op1 (n2 / now) :duration (f2 / few :op1 (t / temporal-quantity :quant (N / N-A) :unit (w2 / week))))) :op2 (s / start-01 :arg0 (w3 / we) :arg1 (l / look-01 :arg0 (w4 / we) :arg1 (i / issue-02) :arg1-of (f3 / fresh-04))))
(s / suggest-01 :arg0 (r / rate :mod (l / late :degree (m / most)) :mod (l2 / late :degree (m2 / most))) :arg1 (s2 / sport :mod (m3 / massive) :quant (m4 / more) :compared-to (s3 / star :mod (m5 / massive))))
(n / no-one :arg0-of (t / talk-01 :arg1 (b / build-01 :arg1 (w / wall :arg0-of (s / separate-02 :arg1 (c / country) :arg2 (a / and :op1 (p / person :mod (p2 / poor) :mod (p3 / poor)) :op2 (m / metropolis :arg1-of (c2 / corrupt-01) :arg1-of (c3 / corrupt-01))))))))
(m / multi-sentence :snt1 (a / and :op1 (r / receive-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (s / side :poss (p2 / person)) :arg3 (l / lead-02 :arg0 (p3 / person)))) :arg1 (p4 / person :mod (w / white) :arg1-of (s2 / sign-01)) :location (a2 / along :op1 (s3 / side :poss (p5 / person)))) :op2 (2 / 20-inch :arg0 (a3 / and :op1 (p6 / person :arg0-of (h2 / have-org-role-91 :arg1 (s4 / side :name (n / name :op1 (s5 / spyder))))) :op2 (p7 / person :arg0-of (h3 / have-org-role-91 :arg2 (r2 / rims))) :op3 (p8 / person :arg0-of (h4 / have-org-role-91 :arg2 (h5 / head-of-state))) :op4 (p9 / person :arg0-of (h6 / have-org-role-91 :arg2 (h7 / head-of-state))) :op5 (p10 / person :arg0-of (h8 / have-org-role-91 :arg2 (h9 / head-of-state)))))) :snt2 (m2 / metallic :mode (i / interrogative)))
(c / cause-01 :arg1 (a / advertised :arg0 (i / i) :arg1 (t / technology :mod (n / new) :poss (t2 / they)) :arg1-of (l / likely-01 :polarity -) :arg1-of (c2 / cause-01 :arg0 (l2 / likely-01 :polarity - :arg1 (r / remain-01 :arg1 (t3 / technology :mod (n2 / new) :poss (t4 / they)) :arg3 (e / effective-04 :arg0 (t5 / technology) :arg1-of (l3 / long-03)))))))
(a / and :op1 (r / receive-01 :polarity - :arg0 (p / person :mod (t / this)) :arg1 (s / slash :op1 (m / mail) :op2 (m2 / mail)) :manner (k / know-01 :polarity - :arg0 (p2 / person) :arg1 (i / it))) :op2 (f / fall-07 :arg1 (p3 / person) :arg2 (c / category :arg1-of (s2 / same-01 :arg2 (t2 / thing :arg1-of (c2 / consequence :mod (e / ensuing)) :quant (a2 / all))))))
(s / say-01 :arg0 (p / person :name (n / name :op1 "N-A")) :arg1 (p2 / possible-01 :polarity - :arg1 (t / think-01 :arg0 (p3 / person) :arg1 (a / anyone :arg0-of (w / want-01 :arg1 (h / hurt-01 :arg0 (a2 / anyone) :arg1 (p4 / person :mod (y / young :degree (m / more)) :arg0-of (h2 / have-rel-role-91 :arg1 (h3 / he) :arg2 (b / brother :mod (y2 / young :degree (m2 / more)))))))))))
(e / exceed-01 :arg0 (s / size :poss (d / debt :mod (n / nation))) :arg1 (m / monetary-quantity :quant 2.248 :unit (e2 / euro) :mod (m2 / monetary-quantity :quant 2.248 :unit (e3 / euro))))
(a / ahead :mod (g / grow-01))
(e / exemplify-01 :arg0 (d / decline-01 :arg1 (p / pressure-01 :arg1 (p2 / price-01))))
(e / equal-01 :arg1 (r / rate :mod (d / decline-01 :arg1 (t / turnover :mod (t2 / trade-01 :mod (f / foreign))))) :arg2 (p / percentage-entity :value (N / N-A)) :arg4 (v / value-interval :op1 (- / -32.8) :op2 (-2 / -20.7)) :arg1-of (p2 / possible-01))
(c / contrast-01)
(c / contrast-01 :arg2 (p / possible-01 :arg1 (t / take-01 :arg0 (p2 / person :mod (c2 / country :name (n / name :op1 "N-A"))) :arg1 (p3 / place :ord (o / ordinal-entity :value 17) :arg1-of (g / get-05 :arg2 (c3 / compete-01 :mod (f / final) :location (e / event :mod (i / individual)))))) :mod (o2 / only)))
(a / and :op1 (r / receive-01 :arg0 (s / she) :arg1 (c / citizenship :mod (s2 / swiss))) :op2 (s3 / start-01 :arg0 (s4 / she) :arg1 (c2 / compete-02 :arg0 (s5 / she) :arg3 (f / flag :mod (r2 / red)))) :li 2015)
(a / and :op1 (t / tied :arg1 (h / he) :arg2 (w / west :part-of (p / person :arg0-of (h2 / have-org-role-91 :arg1 (- / -rrb- :mod (m / military)) :arg2 (m2 / member)))) :degree (m3 / much :degree (v / very))) :op2 (h3 / have-org-role-91 :arg0 (h4 / he) :arg1 (t2 / turkey :mod (m4 / military)) :arg2 (m5 / member)) :arg0-of (c / cause-01 :arg1 (t3 / think-01 :arg0 (i / i) :arg1 (t4 / try-01 :arg0 (p2 / person :mod (c2 / country :name (n / name :op1 "N-A"))) :arg1 (f / find-01 :arg0 (p3 / person) :arg1 (b / balance-01))) :time (p4 / preserving :arg0 (p5 / person) :arg1 (f2 / framework :poss (r / relation-03 :arg0 (w2 / west)))))))
FAILED_TO_PARSE#Number of opening and closing brackets doesn't match.
(f / finish-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg2 (p2 / president))) :arg1 (v / visit-01 :arg0 (p3 / person) :arg1 (c / country :location (a / and :op1 (c2 / country) :op2 (c3 / country))) :arg1-of (s / succeed-01 :degree (v2 / very))) :mod (j / just))
(a / and :op1 (i / include-91 :arg1 (a2 / and :op1 (e / era :mod (e2 / era :arg1-of (m / modern-02))) :op2 (e3 / era :arg1-of (m2 / modern-02)) :quant (m3 / multiple :op1 1)) :arg2 (e4 / era :arg1-of (m4 / modern-02))) :op2 (s / surprise-01 :polarity - :arg1 (h / he) :arg2 (r / reach-01 :arg0 (h2 / he) :arg1 (l / landmark :mod (t / this)) :time (b / before :op1 (h3 / he)))))
(c / contrast-01 :arg1 (e / earn-01 :arg0 (i / i) :arg1 (r / rate-entity-91 :arg1 1 :ord (o / ordinal-entity :value 1) :arg2 (t / temporal-quantity :quant (N / N-A) :unit (y / year)))) :arg2 (s / serve-01 :arg0 (i2 / i) :arg1 (p / point :mod (e2 / exclamation)) :arg2 (t2 / team :mod (n / nation) :arg0-of (c2 / coordinator :arg1 (p2 / party :mod (n2 / nation))))))
(h / have-03 :arg0 (p / person :arg0-of (h2 / have-03 :arg1 (a / attack-01 :quant 1) :time (a2 / already))) :arg1 (r / risk-01 :arg2 (h3 / have-03 :arg1 (a3 / another)) :arg1-of (h4 / high-02 :degree (m / more))))
(a / and :op1 (c / crazy-03 :arg1 (a2 / and :op1 (l / lookalike :mod (c2 / cyclist) :poss (c3 / country :name (n / name :op1 "N-A"))) :op2 (d / doppelgangers :mod (c4 / celebs) :mod (o / other)))) :op2 (d2 / doppelgangers :arg1 (d3 / doppelgangers :mod (r / rio) :mod (o2 / other))))
(g / go-03 :arg0 (f / fan :mod (r / rio :quant 2016)) :arg1 (w / wild :beneficiary (p / person :mod (c / country :name (n / name :op1 "N-A")) :arg0-of (p2 / prove-01 :arg1 (l / lookalike :arg1 (d / duchess :mod (c2 / cambridge)) :degree (i / impress-01))))) :time (w2 / week :mod (t / this)))
(a / and :op2 (a2 / and :op1 (r / realize-01 :arg0 (i / i) :arg1 (r2 / realize-01 :arg0 (h / he) :arg1 (f / frenzy :mod (m / media :mod (s / social))))) :op2 (a3 / admit-01 :arg0 (i2 / i) :arg1 (l / look-02 :arg0 (h2 / he) :arg1 (l2 / look-02 :arg0 (h3 / he) :arg1 (r3 / resemble-01 :arg1 (h4 / he) :arg2 (r4 / resemble-01 :arg1 (h5 / he) :arg2 (k / kid)))))) :prep-in (f2 / fact)))
(a / and :op1 (c / carry-01 :arg0 (s / she) :arg1 (e / event)) :op2 (t / try-01 :arg0 (s2 / she) :arg1 (u / underwear :quant 4 :location (s3 / store :name (n / name :op1 (b / bouverie))) :location (s4 / store :name (n2 / name :op1 (b2 / bouverie)) :location-of (s5 / shop-01))) :time (e2 / eventual)))
(c / contrast-01 :arg1 (w / world :mod (d / dangerous) :location (o / out :op1 (t / there))) :arg2 (p / possible-01 :arg1 (h / help-01 :arg0 (v / video :mod (t2 / this)) :arg1 (m / make-02 :arg0 (v2 / video) :arg1 (m2 / more :degree (m3 / more :degree (l / little)) :beneficiary (y / you))))))
(f / forcefully :arg0 (h / house-01 :arg0-of (h2 / house-01)) :arg1 (a / and :op1 (s / she) :op2 (p / person :arg0-of (h3 / have-rel-role-91 :arg1 (s2 / she) :arg2 (p2 / partner))) :op3 (p3 / person :arg0-of (h4 / have-rel-role-91 :arg1 (s3 / she) :arg2 (p4 / partner))) :op4 (p5 / property)) :arg2 (p6 / property) :time (w / week :mod (t / this)) :time (a2 / after :op1 (g / give-01 :arg0 (h5 / house-01) :arg1 (p7 / period :arg1-of (e / extend-01) :consist-of (m / move-01 :arg1 (a3 / and))) :arg2 (v / volunteer-01 :arg0 (a4 / and)))))
(' / ' :arg0 (t / this) :arg1 (p / person :arg0-of (f / feel-02 :arg1 (p2 / possible-01 :arg1 (b / behave :arg0 (p3 / person) :arg1 (p4 / person :arg0-of (f2 / feel-02 :arg1 (p5 / possible-01 :arg1 (b2 / behave :arg0 (p6 / person) :manner (r / recrimination :polarity -))))))))) :arg1-of (s / say-01 :arg0 (s2 / she)))
(a / and :op1 (p / post-01 :arg1 (i / it) :arg2 (w / website :poss (d / department :mod (m / moscow) :part-of (r / rospotrebnadzor))) :time (s / subsequent)) :op2 (p2 / plan-01 :arg1 (a2 / and :op1 (r2 / release-01 :arg1 (v / version :arg1-of (p3 / print-01))) :op2 (d2 / distribute-01 :arg1 (v2 / version))) :mod (a3 / also)))
(m / multi-sentence :snt1 (f / fined :domain (c / chain :consist-of (s / store :name (n / name :op1 (n2 / new) :op2 (b / book)) :mod (b2 / book) :mod (n3 / new) :consist-of (s2 / store)))) :snt2 (d / day :li 50 :time (u / until :op1 (s3 / suicide :poss (i / i)))) :li 50)
(c / contrast-01 :arg2 (t / true :mode (i / interrogative) :domain (t2 / thing :arg2-of (r / result-01))))
(i / infer-01 :arg1 (l / look-01 :mode (i2 / imperative) :arg0 (w / we)))
(m / multi-sentence :snt1 (s / stuff :arg1-of (i / include-91 :arg2 (s2 / stuff :arg1-of (g / get-01 :arg0 (i2 / i) :time (l / late)) :quant (l2 / lot))) :domain (s3 / stuff :arg1-of (g2 / get-01 :arg0 (i3 / i) :time (l3 / late :op1 (d / date-entity :decade (N / N-A))))) :li (7 / 70s)) :snt2 (p / probable :domain (g3 / get-03 :arg1 (i4 / i) :arg2 (y / young :degree (t / too :degree (b / bit)) :arg1-of (g4 / get-01 :arg0 (i5 / i) :arg1-of (s4 / say-01 :arg0 (h / he)))))))
(s / say-01 :arg0 (h / he) :arg1 (s2 / sell-01 :arg0 (c / customer) :arg1 (c2 / cds :poss (c3 / customer)) :arg2 (b / buy-01 :arg0 (c4 / customer) :arg1 (r / record :poss (c5 / customer)) :purpose (b2 / buy-01 :arg0 (c6 / customer) :arg1 (r2 / record :poss (c7 / customer)))) :time (n / now)))
(a / and :op1 (b / be-located-at-91 :arg1 (p / place :quant 1 :arg1-of (i / include-91 :arg2 (p2 / place :arg1-of (t / threaten-01 :arg2 (e / ethnic-group :name (n / name :op1 "N-A")))))) :arg2 (p3 / person :arg0-of (h / have-rel-role-91 :arg1 (k / kid) :arg2 (k2 / kid)))) :op2 (p4 / provide-01 :arg0 (k3 / kid) :arg1 (r / rate-entity-91 :arg1 (d / day :quant 200) :arg2 (t2 / temporal-quantity :quant (N / N-A) :unit (d2 / day)))) :op3 (a2 / advise-01 :arg0 (k4 / kid) :arg1 (a3 / and :op1 (c / class :mod (c2 / country)) :op2 (c3 / class :mod (c4 / country)))) :op3 (a4 / advise-01 :arg0 (k5 / kid) :arg2 (h2 / hundreds :arg1 (m / minor :mod (v / vulnerable) :mod (v2 / vulnerable)) :location (c5 / camp))))
(m / multi-sentence :snt1 (i / invites :arg0 (b / branch :quant 10 :mod (l / library)) :arg1 (p / public :arg1-of (p2 / public-02)) :arg2 (c / check :arg0 (p3 / public) :arg1 (p4 / presentation))) :snt2 (t / town :mod (l2 / little) :poss (i2 / i) :mod (l3 / little)) :time (t2 / today))
(a / and :op1 (c / come-01 :arg1 (d / defeat-01) :accompanier (c2 / consolation :name (n / name :op1 (n2 / non-too) :op2 (s / shabby) :op3 (s2 / shabby) :op4 (s3 / shabby) :op5 (s4 / shabby) :op6 (s5 / shabby) :op7 (s6 / shabby)))) :op2 (p / possible-01 :arg1 (p2 / pride-01 :arg0 (t / they) :arg2 (e / effort :poss (t2 / they) :location (7 / 7s :name (n3 / name :op1 (i / inaugural) :op2 (72 / 7s) :op3 (73 / 7s)) :arg1-of (b / beat-03 :arg0 (t3 / they) :arg2 (a2 / and :op1 (z / zealand :mod (n4 / new)) :op2 (a3 / africa :location (a4 / along :op1 (w / way))))))))))
(a / ask-02 :arg0 (i / i) :arg1 (o / or :op1 (t / train-01 :arg0 (i2 / i) :arg2 (p / person :mod (g / good :degree (m / more)))) :op2 (c / coach :mod (g2 / good :degree (m2 / more)))) :arg2 (i3 / i))
(p / prohibit-01 :arg1 (i / import-01 :arg1 (a / and :op1 (p2 / product :mod (a2 / agriculture)) :op2 (m / material :mod (r / raw)) :op3 (f / food)) :arg2 (a3 / and :op1 (a4 / and :op1 (p3 / product :mod (a5 / agriculture)) :op2 (m2 / material :mod (r2 / raw)))) :op2 (a6 / and :op1 (m3 / material :mod (r3 / raw)) :op2 (m4 / material :mod (r4 / raw)) :op3 (f2 / food) :op4 (c / country :arg0-of (f3 / favor-01 :arg1 (c2 / country :name (n / name :op1 "Russia")))) :op5 (c3 / country :arg0-of (h / have-org-role-91 :arg1 (c4 / country :name (n2 / name :op1 "Albania")) :arg2 (m5 / member))) :op6 (g / government-organization :arg0-of (g2 / govern-01 :arg1 (c5 / country))) :op7 (g3 / government-organization :arg0-of (g4 / govern-01 :arg1 (c6 / country))) :op8 (g5 / government-organization :arg0-of (g6 / govern-01 :arg1 (c7 / country))) :op8 (g7 / government-organization :arg0-of (g8 / govern-01 :arg1 (c8 / country))) :op8 (e / et-cetera))))
(t / tell-01 :arg0 (p / person :name (n / name :op1 "sergei" :op2 "kashuba") :arg0-of (h / have-org-role-91 :arg1 (u / union-02 :arg1 (c / country :name (n2 / name :op1 "N-A")) :arg2 (c2 / chairman :mod (g / gold)))) :arg2 (c3 / chairman)) :arg1 (v / value-01 :arg1 (i / invest-01) :arg2 (b / between :op1 (m / monetary-quantity :quant 2.5 :unit (d / dollar)) :op2 (m2 / monetary-quantity :quant 2.5 :unit (d2 / dollar)))) :arg2 (p2 / person :arg0-of (h2 / have-org-role-91 :arg1 (g2 / government-organization :arg0-of (g3 / govern-01 :arg1 (c4 / country))) :arg2 (c5 / chairman))))
(p / possible-01 :polarity - :arg1 (r / redeem :arg0 (c / country :name (n / name :op1 "N-A")) :arg1 (v / volume :quant-of (i / issue-02 :arg0 (b / bond :mod (i2 / infrastructure)) :arg1-of (i3 / involve-01 :arg2 (g / group) :arg1-of (a / activity-06 :arg0 (g2 / group)))))) :time (u / until :op1 (r2 / recent)))
(c / call-01 :arg0 (p / person :arg0-of (h / have-rel-role-91 :arg1 (h2 / he) :arg2 (f / friend))) :arg1 (p2 / person :arg0-of (h3 / have-rel-role-91 :arg1 (h4 / he) :arg2 (f2 / friend))) :arg2 (a / and :op1 (p3 / person :arg0-of (h5 / have-rel-role-91 :arg1 (h6 / he) :arg2 (f3 / friend))) :op2 (p4 / person :arg0-of (h7 / have-rel-role-91 :arg1 (h8 / he) :arg2 (f4 / friend))) :op3 (p5 / person :arg0-of (h9 / have-rel-role-91 :arg1 (h10 / he) :arg2 (f5 / friend))) :op4 (p6 / person :arg0-of (h11 / have-rel-role-91 :arg1 (h12 / he) :arg2 (f6 / friend))) :op5 (p7 / person :arg0-of (h13 / have-rel-role-91 :arg1 (h14 / he) :arg2 (f7 / friend))) :op6 (p8 / person :arg0-of (h15 / have-rel-role-91 :arg1 (h16 / he) :arg2 (f8 / friend))) :op6 (e / et-cetera)))
(c / contrast-01 :arg1 (t / turn-down-05 :arg0 (d / dragon :mod (h / huge) :mod (f / fluffy :mod (h2 / huge))) :arg1 (a / anything)) :arg2 (f2 / frightening :arg0 (d2 / dragon) :arg1 (a2 / and :op1 (s / sweet :mod (s2 / sweet)) :op2 (w / wingspan :poss (a3 / and :op1 (p / person :mod (w2 / world-region :name (n / name :op1 "N-A"))) :op2 (p2 / power :mod (w3 / world-region :name (n2 / name :op1 "N-A"))) :op3 (p3 / power :mod (i / invisibility)))))))
(c / contrast-01 :arg1 (c2 / create-01 :arg0 (a / and :op1 (b / bias-01 :arg1 (e / elliot) :mod (v / visual)) :op2 (m / mannerisms :arg0 (h / he))) :arg1 (i / involve-01 :arg1 (a2 / and :op1 (p / person :arg0-of (s / start-01 :arg1 (e2 / eye :part-of (p2 / person)) :manner (d / desperate))) :op2 (p3 / person :arg0-of (s2 / start-01 :arg1 (e3 / eye :part-of (p4 / person))))) :mod (o / only :degree (m2 / most))) :time (m3 / moment :arg1-of (i2 / intense-02 :degree (m4 / most)))) :arg2 (a3 / adult :mod (a4 / also) :mod (a5 / also)))
(b / bring-01 :arg0 (i / i) :arg1 (t / tea :mod (c / country :name (n / name :op1 "N-A")) :quant (s / some)) :arg2 (b2 / brew :arg0 (t2 / tea) :arg1 (t3 / tea)))
(a / and :op2 (m / move-01 :arg0 (i / i) :arg2 (f / furniture)))
(a / and :op1 (c / count-01 :arg1 (m / match-03)) :op2 (c2 / counting :arg1 (m2 / man :mod (y / young) :prep-on (b / broadcasts :mod (n / news))) :time (f / first) :topic (b2 / between :op1 (b3 / between :op1 (d / deriglazova) :op2 (s / shanaeva)) :op2 (b4 / battle-01 :arg0 (m3 / man) :arg1 (g / gold)) :time (t / then))))
(c / call-01 :arg0 (p / person :arg0-of (h / head-01 :arg1 (u / urals :location (s / south)))) :arg1 (c2 / change-01 :arg1-of (t / take-01 :location (p2 / plant))) :arg2 (p3 / part :part-of (g / group :consist-of (p4 / person :arg0-of (h2 / have-org-role-91 :arg1 (g2 / group :mod (r / rmk)))))))
(b / become-01 :arg1 (e / effort :name (n / name :op1 (f / flagship) :op2 (m / modernisation) :op3 (m2 / modernisation))) :arg2 (c / construct-01 :arg1 (p / plant :arg0-of (f2 / favor-01 :arg1 (c2 / country-region)) :mod (n2 / new) :arg0-of (a / allow-01 :arg1 (c3 / capture-01 :arg1 (g / gases :quant (p2 / percentage-entity :value (N / N-A))) :direction (u / up))))) :time (y / year :mod (r / recent)))
(a / and :op1 (h / help-01 :arg0 (e / enterprise :mod (r / rmk)) :arg1 (a2 / and :op1 (m / maintain-01 :arg0 (e2 / enterprise) :arg1 (s / school)) :op2 (m2 / maintain-01 :arg0 (e3 / enterprise) :arg1 (s2 / school)) :op3 (f / facility :mod (s3 / sports)) :op4 (f2 / facility :mod (s4 / sports)) :op5 (f3 / facility :mod (s5 / sports)))) :op2 (m3 / make-02 :arg0 (e4 / enterprise) :arg1 (i / improve-01 :arg1 (l / land))))
(h / hold-04 :arg1 (c / chernikov) :location (c2 / custody) :time (u / until :op1 (r / reactivate-01 :quant 9)))
(r / release-01 :arg1 (i / instalment :mod (n / new) :part-of (s / saga)) :location (c / country :name (n2 / name :op1 "N-A")) :time (b / by :op1 (e / end-01 :arg1 2016)))
(m / multi-sentence :snt1 (w / wake-up-02 :arg1 (s / she) :location (b / blue :name (n / name :op1 (b2 / blue) :op2 (s2 / some) :op3 (s3 / some))) :location (b3 / blue :name (n2 / name :op1 (b4 / blue) :op2 (s4 / some)))) :snt2 (p / pick :arg0 (p2 / picked :ord (o / ordinal-entity :value 1)) :arg1 (s5 / sport) :arg2 (s6 / stick :poss (p3 / person :arg0-of (h / have-rel-role-91 :arg1 (s7 / she) :arg2 (s8 / sisters :mod (o2 / old :degree (m2 / more)))))) :time (a / and :op1 (p4 / play-02 :arg0 (p5 / person :quant 3 :arg0-of (h2 / have-rel-role-91 :arg1 (s9 / she) :arg2 (s10 / sisters :mod (o3 / old :degree (m3 / more))))) :arg1 (s11 / sport) :location (- / -rrb- :mod (d / drexel))) :op2 (j / join-01 :arg0 (p6 / person) :arg1 (t / team :mod (n3 / nation)) :time (b5 / become-01 :arg1 (p7 / person) :arg2 (t2 / thing :arg0-of (p8 / play-12 :arg2 (y / youngest))) :time (e / ever))))))
(r / resemble-01 :arg1 (i / it) :arg2 (b / baton :mod (f / flaming) :arg1-of (p / pass-01 :arg2 (a / archer :prep-to (g / gymnast :prep-to (g2 / gymnast))))))
(c / contrast-01 :arg1 (c2 / cafes :arg1 (s / space :mod (c3 / cash-only) :arg0-of (h / have-03 :polarity - :arg1 (w / wi-fi :polarity -)))) :arg2 (s2 / serve-01 :arg1 (c4 / coffee :mod (g / good)) :duration (t / temporal-quantity :quant (N / N-A) :unit (y / year))))
(s / say-01 :arg0 (h / he) :arg1 (g / get-03 :arg1 (c / customer :time (f / former) :quant (l / lot)) :arg2 (w / williamsburg) :mod (t / too)))
(f / fitting :arg0 (c / couple) :arg1 (d / discuss-01 :arg1 (e / eat-01 :arg1 (d2 / depression-era))) :arg1-of (d3 / deem-01) :time (o / order-01 :arg0 (p / person :arg0-of (r / report-01))))
(a / and :op1 (c / continue-01 :arg0 (a2 / and :op1 (p / person :name (n / name :op1 "Clinton")) :op2 (p2 / person :arg0-of (h / have-org-role-91 :arg2 (k / kaine)))) :arg1 (s / set-02 :arg0 (p3 / person) :arg1 (s2 / standard) :arg2 (m / motive :mod (f / finance)))) :op2 (s3 / say-01 :arg0 (p4 / person :arg0-of (l / lead-02 :arg1 (c2 / campaign-01 :arg0 (p5 / person)))) :medium (s4 / statement)))
(c / cite-01 :arg0 (a / and :op1 (p / person :arg0-of (h / have-org-role-91 :arg1 (s / service :mod (i / internal-02)))) :op2 (p2 / person :arg0-of (h2 / have-rel-role-91 :arg1 (p3 / person) :arg2 (l / lawyer)))) :arg1 (a2 / audit-01 :arg0 (s2 / service :mod (i2 / internal-02)) :arg1-of (c2 / cause-01 :arg0 (r / reason :arg0-of (c3 / cause-01 :arg1 (r2 / refuse-01 :arg0 (p4 / person) :arg1 (r3 / release-01 :arg0 (p5 / person) :arg1 (r4 / returns :poss (p6 / person)))))))))
(r / resort :domain (r2 / resort :mod (l / last) :arg0-of (s / shoots :arg1 (f / fireworks :mod (l2 / loud)) :arg2 (a / air)) :arg0-of (p / produce-01 :arg1 (e / explode-01 :arg1-of (b / bright-02)))) :mod (l3 / last))
(s / say-01 :arg0 (r / rule :topic (p / person :arg0-of (r2 / resign-01 :arg1 (c / company :arg0-of (d / defend-01))))) :arg1 (o / or :op1 (a / agree-01 :arg0 (p2 / party) :arg2 (j / job :mod (a2 / another))) :op2 (t / transfer-01 :arg1 (t2 / thing :arg1-of (u / understand-01 :arg0 (p3 / party))) :arg2 (j2 / job :mod (a3 / another)))) :arg1-of (c2 / conform-01 :arg2 (r3 / rule)))
(f / follow-01 :arg1 (m / move-02) :arg2 (s / speculate-01 :arg1 (f2 / future :poss (p / plant)) :duration (s2 / several :op1 (t / temporal-quantity :quant (N / N-A) :unit (y / year))) :time (i / initial) :arg1-of (c / cause-01 :arg0 (t2 / thing :arg2-of (p2 / price-01 :arg1 (t3 / thing :source (p3 / plant)))) :time (r / recent))))
(h / hope-01 :arg0 (p / person :arg0-of (h2 / have-org-role-91 :arg1 (c / country :name (n / name :op1 "N-A")) :arg2 (s / spokeswoman))) :arg1 (r / return-02 :arg0 (p2 / person) :arg1 (t / thing :arg1-of (c2 / comment-01 :arg0 (p3 / person))) :arg2 (t2 / thing :arg1-of (c3 / comment-01 :arg0 (p4 / person))) :time (i / immediate :degree (t3 / total))))
(s / suggest-01 :arg0 (r / rate :mod (l / late :degree (m / most)) :mod (l2 / late :degree (m2 / most))) :arg1 (s2 / sport :mod (m3 / massive) :quant (m4 / more) :compared-to (s3 / star :mod (m5 / massive))))
(m / multi-sentence :snt1 (s / see-01 :arg0 (w / we) :arg1 (t / tend-02 :arg1 (r / rotators :mod (t2 / that)) :arg2 (m2 / massive :degree (m3 / more))) :arg1-of (c / cause-01 :arg0 (t3 / tend-02 :arg1 (t4 / tend-02 :arg1 (r2 / rotators :mod (f / fastest)) :arg2 (s2 / star :arg1-of (l / light-06 :degree (v / very))))))) :snt2 (s3 / say-01 :arg0 (' / '') :arg1 (r3 / rebull)))
(i / information :arg0-of (s / suggest-01 :arg1 (a / amount :arg1-of (a2 / amount-01 :arg2 (m / monetary-quantity :quant 2.6 :unit (e / euro)))) :arg3 (m2 / monetary-quantity :quant 2.6 :unit (e2 / euro))))
(c / contrast-01 :arg2 (s / shrinking :arg1 (t / trend-01 :arg1 (t2 / trend :mod (i / international)) :mod (i2 / international))))
(m / multi-sentence :snt1 (p / probable :domain (t / thing :mod (a / archaeological) :mod (b / big :degree (m2 / most)) :arg1-of (i / include-91 :arg2 (t2 / thing :arg1-of (p2 / precede-01 :arg2 (1 / 1970s)))) :mod (a2 / archaeological) :mod (b2 / big :degree (m3 / most)) :location (b3 / bulgaria))) :snt2 (f / find-01 :arg1 (n / number :quant-of (p3 / person :arg0-of (a3 / artefacts :arg1 (g / gold)) :quant (n2 / number :arg1-of (r / reasonable-02)))) :arg3 (w / weight :quant (m4 / more-than :op1 (t3 / three)) :consist-of (m5 / mass-quantity :quant (N / N-A) :unit (k / kilogram)))))
(a / announce-01 :arg0 (m / model :mod (n / new) :mod (a2 / another) :arg1-of (a3 / announce-01 :arg0 (c / country :name (n2 / name :op1 "Russia")))) :arg1 (t / truck :mod (c2 / country :name (n3 / name :op1 "Russia")) :mod (n4 / new) :mod (c3 / country)))
FAILED_TO_PARSE#Number of opening and closing brackets doesn't match.
(g / grow-03 :arg1 (s / size :poss (d / debt :mod (n / nation))) :arg4 (l / level :mod (r / record)))
(i / increase-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (a / authority :mod (r / regulatory)) :arg2 (p2 / person :arg1-of (e / expert-01)))) :arg1 (m / model :arg1-of (e2 / estimate-01 :arg2 (p3 / percentage-entity :value (N / N-A)) :time (c / current))) :arg3 (p4 / percentage-entity :value (N2 / N-A)) :time (e3 / estimate-01 :arg1 (p5 / percentage-entity :value (N3 / N-A)) :arg2 (p6 / percentage-entity :value (N4 / N-A))))
(a / acknowledge-01 :arg0 (l / lawyer) :arg1 (a2 / attend-02 :arg1 (l2 / law :arg0-of (h / house-01)) :mod (l3 / little :degree (v / very)) :location (u / university)))
(a / act-02 :polarity - :arg1-of (i / isolate-01) :mod (j / just) :domain (p / policy :topic (f / fight-01 :arg1 (c / corrupt-01)) :domain (i2 / it)))
(a / and :op1 (m / meet-03 :arg0 (p / person :arg0-of (l / lead-02 :arg1 (a2 / and :op1 (p2 / person :arg0-of (l2 / lead-02 :arg1 (c / country :name (n / name :op1 "N-A")))) :op2 (p3 / person :arg0-of (l3 / lead-02 :arg1 (c2 / country :name (n2 / name :op1 "N-A"))))))) :arg1 (a3 / and :op1 (r / restore-01 :arg0 (p4 / person) :arg1 (h / hand)) :op2 (d / declare-01 :arg0 (p5 / person) :arg2 (e / end-01 :arg1 (h2 / hand)) :mod (f / formal)))) :op2 (d2 / declare-02 :arg0 (p6 / person) :arg1 (e2 / end-01 :arg1 (a4 / and :op1 (w / word) :op2 (s / sanction-02 :arg1 (e3 / economy)) :arg1-of (l4 / long-03))) :mod (f2 / formal)))
(a / accuse-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg2 (o / official :mod (t / top)))) :arg1 (p2 / person :arg0-of (h2 / have-org-role-91 :arg1 (f / family :arg1-of (h3 / have-org-role-91 :arg0 (p3 / person) :arg2 (m / member))) :arg2 (m2 / member))) :arg2 (t2 / trade-01 :arg1 (o2 / oil) :mod (l / law :polarity -)) :source (a2 / area :location-of (c / control-01 :arg0 (s / state :arg1-of (c2 / call-01 :manner (s2 / so))) :arg1 (o3 / oil))))
(t / tell-01 :arg0 (h / he) :arg1 (a / and :op1 (e / end-up-03 :arg1 (b / brand :name (n / name :op1 (r / rbs)) :mod (b2 / brand :name (n2 / name :op1 (r2 / rbs)))) :arg2 (b3 / become-01 :arg1 (b4 / brand) :arg2 (b5 / brand :mod (p / person :arg0-of (i / invest-01)) :poss (w / we)))) :op2 (e2 / employ-01 :arg1 (p2 / person :quant 1 :arg2-of (s / staff-01))) :arg1-of (c / cause-01 :arg0 (b6 / become-01 :arg1 (w2 / we) :arg2 (b7 / bank :consist-of (b8 / brand) :quant (m / more :degree (m2 / much))) :time (n3 / now)))) :arg2 (p3 / person :name (n4 / name :op1 "N-A")))
(s / secured :arg0 (p / person :name (n / name :op1 "frankie" :op2 "dettori")) :arg1 (c / company :quant 3000 :mod (c2 / country :name (n2 / name :op1 "N-A")) :arg0-of (w / win-01 :location (n3 / newmarket))) :arg2 (f / friday))
(s / struggle-02 :arg0 (m / man :quant 3) :arg1 (s2 / swim-01 :arg0 (m2 / man) :arg2 (s3 / safe-01 :arg1 (m3 / man))) :time (c / continue-01 :arg1 (b / boat :poss (m4 / man)) :prep-under (p / power :poss (m5 / man))))
(c / contrast-01 :arg1 (h / have-03 :arg0 (e / engine :part-of (b / boat)) :arg1 (s / slice :arg1-of (k / kill-01) :mod (e2 / emergency))) :arg2 (c2 / come-04 :arg1 (e3 / engine) :arg2 (p / person :arg0-of (d / drive-01 :arg1 (b2 / boat) :time (c3 / capsized :arg1 (b3 / boat)))) :manner (s2 / somehow)))
(a / awaited :arg1 (a2 / awaited :quant 1 :mod (t / test) :mod (b / between :op1 (b2 / biles) :op2 (r / rest :part-of (f / field)))) :location (b3 / between :op1 (b4 / between :op1 (r2 / rest :part-of (f2 / field)) :op2 (r3 / rest :part-of (f3 / field)))) :op2 (b5 / burden-01 :arg1 (t2 / thing :arg1-of (e / expect-01 :arg0 (o / oversized)))))
(a / and :op1 (w / walk-01 :arg0 (h / he) :instrument (h2 / help-01)) :op2 (r / ride-01 :arg0 (h3 / he) :arg1 (b / bike)))
(s / say-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg2 (g / governor :mod (v / vice)))) :arg1 (a / and :op1 (b / be-located-at-91 :arg1 (p2 / person :arg0-of (h2 / have-org-role-91 :arg1 (s2 / state) :arg2 (o / official))) :arg2 (c / contact-01 :arg0 (p3 / person) :arg1 (p4 / person :arg1-of (l / local-02) :arg0-of (h3 / have-org-role-91 :arg2 (o2 / official))) :manner (c2 / constant))) :op2 (a2 / assist-01 :arg0 (p5 / person) :arg1 (p6 / person) :arg2 (a3 / affect-01 :arg0 (p7 / person) :arg1 (p8 / parishes)) :time (a4 / already))))
(i / identify-01 :arg0 (p / person :arg0-of (h / have-rel-role-91 :arg1 (c / child) :arg2 (g / grandparents))) :arg1 (h2 / he) :arg2 (c2 / cbs :arg0 (p2 / person) :arg1 (b / brown :mod (m / mahaj))))
(a / and :op1 (l / list-01 :arg1 (b / boy) :arg2 (c / condition :arg1-of (c2 / critical-02) :location (h / hospital))) :op2 (u / undergo-28 :arg1 (b2 / boy) :arg2 (s / surgeries :quant (s2 / several))))
(f / find-02 :arg1 (s / shoot-02 :arg1 (c / child) :location (s2 / seat :mod (f2 / front) :part-of (c2 / car :arg1-of (2 / 29-year-old :arg2 (a / and :op1 (c3 / condition :arg1-of (c4 / critical-02)) :op2 (r / report-01 :arg0 (s3 / station))))))))
(a / and :op1 (m / meet-03 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (g / government-organization :arg0-of (g2 / govern-01)))) :arg1 (e / effort :purpose (r / resolve-01 :arg1 (d / dispute-01 :arg2 (t / talk-01))))) :op2 (m2 / meet-03 :arg0 (a2 / amusement-park :name (n / name :op1 "N-A") :source (g3 / government-organization :arg0-of (g4 / govern-01)))))
(c / compare-01 :arg1 (a / and :op1 (p / person :arg0-of (h / have-org-role-91 :arg1 (t / team :poss (m / man :mod (c2 / country :name (n / name :op1 "N-A")))) :arg2 (m2 / member :mod (v / vice)))) :op2 (p2 / person :arg0-of (h2 / have-org-role-91 :arg1 (t2 / team :poss (m3 / man) :mod (c3 / country :name (n2 / name :op1 "N-A"))) :arg2 (m4 / member))) :op3 (p3 / person :arg0-of (h3 / have-rel-role-91 :arg1 (m5 / man) :arg2 (d / dad))) :op4 (p4 / person :arg0-of (h4 / have-rel-role-91 :arg1 (m6 / man) :arg2 (d2 / dad))) :op5 (e / et-cetera)) :arg2 (l / leonardo))
(a / and :op1 (s / say-01 :arg0 (t / that) :arg1 (a2 / and :op1 (i / inappropriate :arg1 (t2 / they)) :op2 (f / fortunate-01 :polarity - :arg1 (t3 / they) :arg2 (c / choose-01 :arg1 (w / word)) :arg2-of (f2 / fortunate-01)))) :op2 (s2 / sorry-01 :arg1 (t4 / they) :arg2 (t5 / thing :arg1-of (s3 / say-01 :arg0 (h / he))) :degree (v / very)))
(a / and :op2 (e / establish-01 :arg0 (o / order) :arg1 (a2 / and :op1 (r / rule) :op2 (c / condition-01)) :arg1-of (m / mean-01 :arg2 (4 / 45n :arg1 (m2 / ministry :topic (h / health :poss (p / person :quant (1 / 16.02.2009))))))))
(a / and :op1 (a2 / age-01 :arg1 (p / person :arg0-of (h / have-org-role-91 :arg1 (f / family :arg1-of (h2 / have-org-role-91 :arg0 (p2 / person) :arg2 (m / member))) :arg2 (m2 / member))) :arg2 (t / temporal-quantity :quant (N / N-A) :unit (y / year))) :op2 (s / say-01 :arg0 (f2 / family :arg1-of (h3 / have-org-role-91 :arg0 (p3 / person) :arg2 (m3 / member))) :arg1 (d / die-01 :arg1 (p4 / person :arg1-of (d2 / die-01 :arg1-of (c / cause-01 :arg0 (p5 / plan-01 :arg0 (p6 / person) :arg1 (a3 / and :op1 (f3 / flee-05 :arg0 (p7 / person) :arg1 (c2 / country :location (m4 / military :name (n / name :op1 "N-A")))) :op2 (r / return-01 :arg1 (p8 / person) :arg4 (c3 / country :name (n2 / name :op1 "N-A"))))))) :mod (j / just)))))
(a / admit-01 :arg0 (p / person :arg0-of (r / reside-01 :arg1 (r2 / region :mod (z / zaporozhsky))) :arg0-of (r3 / reside-01 :arg1 (s / suspect-01 :arg1 (a2 / act-01 :arg0 (p2 / person) :arg1 (t / terrorism :location (c / crimea)))))) :arg1 (g / guilt :arg0 (p3 / person)) :time (i / interrogate-01 :arg2 (p4 / person)) :time (e / early :degree (m / more)))
(a / argue-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (c / court) :arg2 (a2 / authority))) :arg1 (a3 / argue-01 :arg0 (a4 / authority) :arg1 (r / recommend-01 :arg1 (p2 / possible-01 :arg1 (k / knock :arg0 (s / state) :arg1 (s2 / shop :quant 72 :mod (m / makeshift) :arg2-of (i / include-91 :arg1 (a5 / and :op1 (p3 / person :location (i2 / inside :op1 (a6 / and :op1 (p4 / person :arg0-of (s3 / sell-01 :arg1 (g / good))) :op2 (p5 / person :arg0-of (s4 / smoke-02)) :op3 (p6 / person :arg0-of (s5 / sell-01 :arg1 (t / tea :mod (e / energy)))) :op4 (p7 / person :arg0-of (s6 / sell-01 :arg1 (t2 / tea))) :op5 (t3 / tea :arg0-of (s7 / sell-01 :arg1 (t4 / tea) :arg3 (m2 / monetary-quantity :quant 50 :unit (c2 / cent))))))))) :op2 (s8 / sell-01 :arg1 (t5 / tea) :arg3 (m3 / monetary-quantity :quant 50 :unit (c3 / cent)) :arg3 (m4 / monetary-quantity :quant 50 :unit (c4 / cent)))))))) :time (w / week :mod (t6 / this)) :location (c5 / court))
(w / withdraw-01 :arg1 (g / good :arg1-of (p / prohibit-01) :quant (a / approximately :op1 100) :arg2-of (i / include-91 :arg1 (g2 / good :arg1-of (p2 / prohibit-01)))) :arg2 (s / sell-01) :mod (j / just) :ord (o / ordinal-entity :value 1))
(f / find-02 :arg0 (p / panel :consist-of (p2 / person :arg0-of (h / have-org-role-91 :arg1 (c / country :name (n / name :op1 "N-A"))))) :arg1 (a / and :op1 (d / duty :mod (i / import-01) :mod (c2 / country :name (n2 / name :op1 "N-A")) :topic (a2 / and :op1 (p3 / paper) :op2 (r / refrigerator) :op3 (o / oil :mod (p4 / palm)))) :op2 (c3 / contravene :arg1 (r2 / rule :poss (o2 / organize-01)))))
(s / say-01 :arg0 (p / person :name (n / name :op1 "piotr" :op2 "naimski")) :arg1 (d / decide-01 :arg0 (p2 / person :arg0-of (r / represent-01 :arg1 (g / government-organization :arg0-of (g2 / govern-01 :arg1 (g3 / government-organization :arg0-of (g4 / govern-01 :arg1 (c / country-region))))) :purpose (i / issue-02 :arg0 (a / and :op1 (i2 / infrastructure :mod (g5 / gas)) :op2 (i3 / infrastructure :mod (e / energy)))))) :arg1 (d2 / decide-01 :polarity - :arg0 (a2 / authority) :arg1 (e2 / extend-01 :arg0 (a3 / authority) :arg1 (c2 / contract-02 :arg1 (g6 / gas)) :arg2 (g7 / gazprom)))))
(a / and :op1 (e / evacuated :arg1 (t / they) :arg2 (p / place :mod (s / safe-01)) :arg1-of (q / quick-02)) :op2 (i / injure-01 :polarity - :arg1 (t2 / they)))
(f / fill-01 :arg1 (v / village :mod (o / olympic) :location (a / and :op1 (s / side :quant 1) :op2 (s2 / side :mod (o2 / other))) :location (s3 / side :mod (o3 / other))) :arg2 (a2 / and :op1 (f2 / filled :location (h / here)) :op2 (b / be-located-at-91 :arg1 (s4 / side :mod (o4 / other)) :arg2 (s5 / side :mod (o5 / other))) :op3 (f3 / fill-01 :arg1 (v2 / village) :arg2 (s6 / side :mod (o6 / other)))))
(c / contrast-01 :arg1 (l / laughable :arg1 (w / wardrobe)) :arg2 (i / inspired :arg1 (a / and :op1 (c2 / cloth) :op2 (d / doesn)) :degree (t / total)) :concession-of (p / possible-01 :arg1 (p2 / put-01 :arg1 (t2 / thing) :arg2 (t3 / thing))) :mod (o / of-course))
(s / support-01 :arg0 (c / committee :arg0-of (h / have-org-role-91 :arg1 (c2 / city-district :name (n / name :op1 "N-A") :part-of (w / world)) :arg2 (e / executive))) :arg1 (t / thing :arg1-of (d / decide-01)) :arg1-of (a / activity-06 :arg0 (c3 / committee :mod (e2 / executive) :part-of (w2 / world))) :arg1-of (a2 / activity-06 :arg0 (c4 / committee :mod (e3 / executive) :part-of (w3 / world))))
(m / multi-sentence :snt1 (s / show-01 :arg0 (a / allah) :arg1 (w / way :direction (o / out) :part-of (s2 / situation :mod (t / this)))) :snt2 (c / conclude-01 :arg0 (h / he)))
(m / multi-sentence :snt1 (h / hakan :mode (i / interrogative)) :snt2 (s / suspect-01 :arg1 (i2 / involve-01 :arg1 (t / they) :arg2 (c / coup))))
(s / spend-01 :arg0 (h / he) :arg1 (p / part :part-of (c / career :poss (h2 / he)) :mod (g / good :degree (m / more))))
(a / appear-02 :arg1 (a2 / and :op1 (r / ready :arg0 (c / country :name (n / name :op1 "N-A")) :arg1 (r2 / responsible-03 :arg0 (c2 / company) :arg1 (s / society))) :op2 (a3 / attend-02 :arg0 (c3 / country) :arg1 (a4 / aspect :mod (e / environment) :poss (b / business :poss (c4 / company))) :degree (m / more))))
(e / enterprise :mod (i / industry) :arg1-of (s / significant-02 :arg2 (a / and :op1 (e2 / economy :poss (c / country)) :op2 (l / livelihood :poss (c2 / city :mod (e3 / entire))) :arg1-of (e4 / effective-04))) :time (t / time :mod (c3 / country :name (n / name :op1 "N-A"))))
(s / say-01 :arg0 (p / person :arg0-of (h / have-rel-role-91 :arg1 (h2 / he) :arg2 (s2 / spouse))) :arg1 (o / ordinal-entity :value 1 :domain (c / catch-02 :arg1 (m / man) :arg2 (b / blue :name (n / name :op1 (b2 / blue) :op2 (l / lobster)))) :ord (o2 / ordinal-entity :value 1 :range (c2 / career :poss (h3 / he)))))
(o / obligate-01 :arg1 (h / he) :arg2 (a / answer-01 :arg0 (h2 / he) :arg2 (e / extent :mod (f / fullest) :poss (l / law))) :time (n / now) :arg1-of (c / cause-01 :arg0 (o2 / open-01 :arg1 (c2 / case-03 :arg2-of (c3 / criminal-03) :arg1-of (r / relate-01 :arg2 (m / man :location (c4 / custody)))))))
(h / have-03 :polarity - :arg0 (p / person :arg0-of (o / observe-01)) :arg1 (a / activity-06 :mod (m / military) :arg1-of (r / record-01) :location (b / border-01 :arg2 (c / crimean))))
(d / draw-02 :arg0 (l / lens :mod (s / snapchat)) :arg1 (c / criticize-01 :arg1 (a / accuse-01 :arg1 (o / or :op1 (p / promote-02 :arg1 (a2 / app)) :op2 (e / encourage-01 :arg1 (s2 / skin :mod (w / whitened)) :arg2 (i / ideal :consist-of (b / beauty))))) :time (p2 / past)))
(a / and :op1 (q / qualify-02 :arg1 (t / team :mod (b / both)) :arg2 (f / final :arg1-of (r / rank-01 :arg2 (f2 / final)))) :op2 (d / decide-01 :arg0 (p / person :arg0-of (f3 / finishes :arg1 (f4 / first :arg0 (p2 / person) :ord (o / ordinal-entity :value 2)))) :arg1 (p3 / person)))
(o / obligate-01 :arg2 (g / go-01 :arg1 (h / hopefuls :mod (m / medal)) :arg4 (a / and :op1 (m2 / more :mod (f / fast :degree (m3 / more))) :op2 (u / up :mod (f2 / fast :degree (m4 / more))) :op3 (a2 / and :op1 (b / back) :op2 (f3 / forth) :op3 (f4 / forth) :op4 (f5 / forth) :direction (d / down :op1 (c / court))))))
(r / replace-01 :arg1 (s / store :name (n / name :op1 (s2 / soap) :op2 (v / verb) :op3 (c / cherie)) :arg0-of (s3 / sell-01 :arg1 (s4 / soaps) :location (s5 / shape :mod (c2 / cupcakes)))) :arg2 (s6 / store))
(b / buffets :arg1 (t / table :mod (c / country :name (n / name :op1 "N-A")) :mod (e / especially)) :time (b2 / before :op1 (d / depression :mod (b3 / before :op1 (d2 / depression)) :mod (e2 / especially))))
(t / trigger-01 :arg0 (t2 / thing :arg0-of (c / cause-01 :arg1 (t3 / trigger-01 :arg1 (m / move-02)))) :arg1 (o / outrage-01 :quant (m2 / more :mod (e / even))))
(a / add-01 :arg1 (a2 / adds :domain (c / code)) :time (n / now))
(p / possible-01 :arg1 (s / see-01 :arg1 (p2 / person :quant (s2 / some) :arg1-of (i / include-91 :arg2 (p3 / person :arg0-of (p4 / protest-01))) :arg0-of (p5 / participate-01 :arg1 (p6 / protest-01))) :location (w / wall :prep-against (p7 / person :arg0-of (h / have-org-role-91 :arg2 (p8 / president :mod (i2 / interim)))))))
(s / say-01 :arg0 (h / he) :arg1 (p / possible-01 :arg1 (r / recommend-01 :arg0 (i / i) :arg1 (a / and :op1 (v / visit-01 :arg0 (i2 / i) :arg1 (c / city :mod (i3 / isfahan))) :op2 (s2 / shiraz :arg0 (a2 / and :op1 (s3 / shiraz) :op2 (s4 / shiraz) :op3 (y / yazd) :arg0-of (h2 / have-03 :arg1 (m / monuments :mod (p2 / persian :mod (s5 / soccer))) :manner (c2 / condition :mod (g / good)))))) :arg1-of (p3 / personal-02))))
(a / and :op1 (r / receive-01 :arg0 (i / industry) :arg1 (c / contract :arg1-of (l / long-03) :arg1-of (v / value-01 :arg2 (m / multiple :op1 (m2 / mass-quantity :quant (N / N-A) :unit (g / gram)))))) :op2 (l2 / love-01 :arg0 (i2 / industry) :arg1 (a2 / and :op1 (p / peace) :op2 (q / quiet)) :mod (b / big)))
(s / say-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (p2 / person :name (n / name :op1 "N-A")))) :arg1 (e / enjoy-01 :arg0 (i / i) :arg1 (t / this :mod (t2 / this)) :time (n2 / now :quant 1) :mod (j / just)))
(w / walk-01 :arg0 (s / she) :destination (j / jacobs :mod (m / marc)))
(r / resume-01 :arg0 (p / person :arg0-of (w / work-01 :arg1 (o / oil)) :location (n / north)) :arg1 (t / talk-01))
(s / start-01 :arg0 (i / index :mod (u / urban)) :arg1 (c / consult-01 :arg0 (i2 / index) :arg1 (a / around :op1 (m / metalworking))) :time (d / date-entity :ord (o / ordinal-entity :value 5)))
(e / emerge-01 :arg0 (a / and :op1 (t / thing :arg1-of (d / discover-01) :mod (n / new)) :op2 (f / fact :mod (n2 / new))) :frequency (r / rate-entity-91 :arg3 (t2 / temporal-quantity :quant (N / N-A) :unit (y / year))) :arg0-of (c / change-01 :arg1 (u / understand-01 :arg1 (h / history :mod (s / soccer) :poss (m / mankind)))))
(c / contrast-01 :arg1 (s / stab-01 :arg0 (p / person :arg0-of (m / manufacture-01)) :arg1 (q / quality :mod (p2 / perform-01) :poss (c2 / car))) :arg2 (p3 / promise-01 :arg0 (p4 / person) :arg2 (m2 / merciful :arg1 (b / budget :poss (p5 / person :arg0-of (o / own-01))) :prep-with (b2 / budget :poss (p6 / person :arg0-of (o2 / own-01)) :quant (b3 / between :op1 6.7 :op2 100 :mod (j / just))))))
(c / change-01 :arg0 (i / inspectorate :mod (t / tax-01)) :arg1 (p / procedure :purpose (s / send-01 :arg1 (a / assess-01 :arg1 (t2 / tax-01)) :arg2 (a2 / audience))))
(r / represent-01 :arg0 (6 / 63-year-old) :arg1 (i / issue-02 :arg0 (a / and :op1 (e / environment) :op2 (t / transport-01)) :arg1-of (s / special-02)) :time (n / now))
(a / and :op1 (g / graduated :arg0 (h / he) :arg1 (i / institutes :name (n / name :op1 (p / prestigious) :op2 (m / mgimo) :op3 (m2 / mgimo) :op4 (- / -rrb-) :op5 (-2 / -rrb-) :op6 (-3 / -rrb-) :op7 (-4 / -rrb-)) :mod (s / state))) :op2 (s2 / serve-01 :arg0 (h2 / he) :location (e / embassy :mod (t / tokyo))) :arg1-of (b / bear-02 :location (s3 / station :name (n2 / name :op1 "N-A") :arg0-of (h3 / have-org-role-91 :arg1 (p2 / political-party :name (n3 / name :op1 "N-A")) :arg2 (c / capital)))) :li 1972)
(c / claim-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg2 (p2 / president))) :arg1 (s / stepping :arg1 (p3 / person :arg0-of (h2 / have-org-role-91 :arg1 (s2 / staff) :arg2 (c2 / chief))) :arg2 (r / request-01 :arg0 (p4 / person) :arg1 (h3 / have-org-role-91 :arg0 (p5 / person) :arg1 (s3 / staff) :arg2 (c3 / chief)))) :time (m / meet-03 :arg0 (p6 / person :arg0-of (h4 / have-org-role-91 :arg2 (p7 / president))) :arg1-of (s4 / show-01 :medium (t / television :mod (s5 / state)))))
FAILED_TO_PARSE#Number of opening and closing brackets doesn't match.
(a / and :op1 (b / become-01 :arg1 (p / person :name (n / name :op1 "biles")) :arg2 (w / woman :ord (o / ordinal-entity :value 4) :mod (c / country :name (n2 / name :op1 "N-A")) :arg1-of (s / straight-04)) :purpose (w2 / win-01 :arg0 (w3 / woman) :arg1 (t / title :mod (o2 / opera)))) :op2 (c2 / contrast-01 :arg1 (a2 / and :op1 (w4 / win-01 :arg0 (w5 / woman) :arg1 (r / reputation :poss (w6 / woman)) :arg2 (g / good :degree (m / most))) :op2 (p2 / possible-01 :arg1 (w7 / win-01) :time (e / ever))) :arg2 (w8 / woman :mod (c3 / country) :arg1-of (s2 / straight-04) :ord (o3 / ordinal-entity :value 4))))
(k / know-01 :arg0 (y / you) :arg1 (g / get-03 :arg1 (i / it) :arg2 (g2 / good :degree (m / more)) :beneficiary (y2 / you)))
(r / rain-01 :mod (h / heavy) :mod (f / flooding) :location (l / louisiana))
(a / and :op1 (p / plucking :arg0 (p2 / person :arg0-of (h / have-org-role-91 :arg2 (r / rescuers))) :arg1 (p3 / person :arg0-of (h2 / have-org-role-91 :arg2 (h3 / head-of-state))) :location (a2 / and :op1 (a3 / amite) :op2 (d / distance-quantity :quant (N / N-A) :unit (k / kilometer)))) :op2 (w / wilkinson :arg1 (p4 / person) :location (s / southwest :part-of (s2 / southwest))) :mod (s3 / still))
(s / say-01 :arg0 (p / person :name (n / name :op1 "N-A")) :arg1 (r / report-01 :arg0 (p2 / person :quant 1 :arg0-of (o / observe-01) :arg1-of (n2 / near-02 :arg2 (l / livingston))) :arg1 (r2 / rain-01) :time (m / morning :mod (f / friday))))
(p / provide-01 :arg0 (e / explode-01 :mod (t / this)) :arg1 (b / benefit-01 :arg1 (h / health :mod (g / good))) :arg2 (a / and :op1 (h2 / health :mod (g2 / good)) :op2 (s / succeed-01 :arg1 (h3 / health)) :op3 (s2 / succeed-01 :arg0 (b2 / benefit-01))))
(s / see-01 :arg0 (s2 / strike-01 :time (e / end-01 :arg1 (d / date-entity :decade (N / N-A)))) :arg1 (a / and :op1 (p / postponement :mod (r / routine) :quant (n / nearly :op1 13,000)) :op2 (a2 / appointments :quant 100000 :mod (r2 / routine))) :purpose (p2 / provide-01 :arg0 (s3 / strike-01) :arg1 (c / cover-01 :arg1 (d2 / doctor) :arg2 (l / line :mod (p3 / picket)))))
(a / and :op1 (l / lead-03 :arg0 (c / culture :mod (p / politics)) :arg2 (e / eye :mod (b / blind-02))) :op2 (r / reveal-01 :arg0 (r2 / report-01 :arg0 (g / government-organization :arg0-of (g2 / govern-01) :arg0-of (d / devastate-01)) :arg0-of (d2 / devastate-01)) :time (t / today)))
(s / say-01 :arg0 (p / person :name (n / name :op1 "jenny" :op2 "davidson") :arg1-of (b / be-located-at-91 :arg2 (s2 / shop) :time (t / time)) :arg0-of (h / have-org-role-91 :arg1 (s3 / shop))) :arg1 (a / and :op1 (g / get-03 :arg1 (w / woman :mod (m / mystery)) :arg2 (o / out-06 :arg1 (w2 / woman) :arg2 (s4 / store)) :manner (b2 / buy-01 :polarity - :arg0 (w3 / woman) :arg1 (a2 / anything))) :op2 (w4 / walk-01 :arg0 (w5 / woman) :direction (o2 / out) :manner (b3 / buy-01 :polarity - :arg0 (w6 / woman) :arg1 (a3 / anything)))))
(s / speak-01 :arg0 (w / we) :arg1 (a / and :op1 (m / mizrachi :arg0 (w2 / we) :arg1 (m2 / mizrachi)) :op2 (g / grandmaster :arg0 (g2 / grandmaster :mod (n / new) :poss (c / criminal-organization :name (n2 / name :op1 "N-A") :name (n3 / name :op1 (k / krav) :op2 (m3 / maga) :op3 (m4 / maga))) :mod (n4 / new) :mod (y / york-based))) :purpose (f / find-out-03 :arg0 (w3 / we) :arg1 (t / thing :manner-of (d / deal-01 :arg2 (m5 / muggers :arg1-of (r / range-01 :arg2 (c2 / close))))))))
(l / leave-17 :arg1 (m / mattress :arg1-of (d / dirty-02)) :location (f / floor :location (h / house) :quant (m2 / multiple :op1 1)))
(c / cause-01 :arg0 (h / have-03 :arg0 (p / person :mod (c2 / country :name (n / name :op1 "N-A"))) :arg1 (p2 / part :part-of (m / mainland)) :time (s / summer :mod (t / this))) :arg1 (k / kill-01 :arg0 (p3 / person) :arg1 (p4 / person :quant 4) :location (i / island :mod (m2 / madeira))))
(a / and :op1 (h / hope-01 :arg0 (o / one) :arg1 (b / benefit-01 :arg0 (t / this) :arg1 (o2 / other) :mod (o3 / only))) :op2 (p / pretend-01 :arg0 (o4 / one) :arg1 (i / involve-01 :arg1 (r / risk-01 :arg2 (g / go-02 :arg4 (z / zone :mod (w / war)))) :arg2 (d / dissuade :arg1 (p2 / person) :arg2 (z2 / zone :mod (w2 / war)) :mod (a2 / actual))) :op3 (s / say-01 :arg0 (p3 / person :arg0-of (h2 / have-org-role-91 :arg1 (p4 / political-party :name (n / name :op1 "N-A")))) :arg1 (t2 / this) :mod (a3 / actual))))
(p / probable :domain (a / ask-02 :arg0 (i / i) :arg1 (s / stop-01 :arg0 (c / camera) :arg1 (r / rolling :prep-for (b / bit :mod (n / next)))) :arg1-of (s2 / stand-01 :arg2 (a2 / and :op1 (m / man :mod (v / various) :location (s3 / some :arg1-of (i2 / include-91 :arg2 (s4 / store)))) :op2 (a3 / attempt-01 :arg0 (i3 / i) :arg1 (a4 / and :op1 (a5 / age :mod (e / emotional)) :op2 (d / disposition :mod (e2 / emotional))) :path (o / observation))))) :mod (p2 / probable))
(m / multi-sentence :snt1 (s / suppose-01 :arg0 (i / i) :arg1 (b / be-02 :arg1 (i2 / i))) :snt2 (s2 / say-01 :arg0 (h / he)))
(p / protest-01 :arg0 (g / generation :name (n / name :op1 (' / ''))) :location (e / ethiopia) :arg1-of (l / long-03))
(n / nation :quant 1 :arg1-of (a / ally-01 :arg2 (w / west :part-of (c / continent :name (n2 / name :op1 "Africa"))) :arg1-of (s / soft-02)) :domain (i / it) :time (d / decade :mod (l / last)))
(p / plucked :arg1 (p2 / person :arg0-of (h / have-org-role-91 :arg1 (c / country :name (n / name :op1 "ethiopia")) :arg2 (m / minister :mod (p3 / prime) :mod (n2 / new)))) :arg2 (o / obscurity :arg0 (p4 / person) :arg1 (s / shoe :poss (p5 / person :arg0-of (h2 / have-rel-role-91 :arg2 (c2 / comrade)))) :mod (r / relative)) :source (o2 / obscurity :mod (r2 / relative)))
(a / and :op1 (o / order-02 :arg0 (p / person :quant 54) :arg1 (a2 / and :op1 (c / cheese :name (n / name :op1 (c2 / cream))) :op2 (s / sandwiches :name (n2 / name :op1 (o2 / olive)))) :li 54) :op2 (o3 / order-02 :arg0 (p2 / person) :arg1 (a3 / and :op1 (t / turkey) :op2 (p3 / potatoes) :op3 (v / vegetable))) :li 57)
(t / try-01 :arg0 (p / person :mod (c / country :name (n / name :op1 "N-A"))) :arg1 (c2 / catch-up-04 :arg1 (p2 / person) :arg2 (g / gilead :arg0-of (d / dominates :arg1 (m / market :mod (c3 / c) :mod (c4 / c) :mod (c5 / c) :arg0-of (c6 / cure :arg1 (p3 / person :quant (o / over :op1 (p4 / percentage-entity :value (N / N-A)) :arg0-of (h / have-rel-role-91 :arg2 (p5 / patient))) :arg2 (d2 / disease :mod (g2 / geopolitics)) :arg1-of (p6 / possible-01))))))))
(r / raise-01 :arg0 (s / she) :arg1 (i / issue-02) :time (s2 / speak-01 :arg0 (s3 / speak-01 :mod (e / economy) :location (m / michigan))))
(i / instead-of-91 :arg2 (o / offer-01 :arg0 (p / person :mod (c / country :name (n / name :op1 "N-A"))) :arg1 (o2 / opportunity :purpose (d / dialed :arg0 (p2 / person) :arg1 (c2 / country :name (n2 / name :op1 "N-A")) :path (c3 / center :arg1-of (c4 / call-01 :arg2 (n3 / name)))))) :arg1-of (i2 / instead-of-91))
(s / sell-01 :arg1 (h / house) :location (v / value-interval :op1 2015 :op2 1) :arg1-of (i / increase-01 :arg2 (r / respect-01 :arg1 (y / year :mod (p / previous)))))
(s / say-01 :arg0 (h / he) :arg1 (a / and :op1 (r / recommend-01 :arg1 (m / make-01 :arg1 (t / thing :arg2-of (p / price-01) :arg1-of (m2 / make-01 :arg0 (i / i) :arg1-of (c / cause-01 :arg0 (r2 / recommend-01 :arg1 (m3 / make-01 :arg1 (t2 / thing :arg2-of (p2 / price-01)) :arg3 (p3 / percentage-entity :value (N / N-A))))))))) :op2 (s2 / say-01 :arg0 (h2 / he) :arg1 (d / do-02 :arg0 (y / you) :arg1 (c2 / coup :mod (o / opportunistic)))) :time (h3 / hear-01 :arg0 (i2 / i) :arg1 (t3 / thing :arg2-of (n / name-01 :arg1 (t4 / thing :arg2-of (n2 / name-01 :arg1 (i3 / i) :degree (t5 / total))))))))
(m / multi-sentence :snt1 (s / say-01 :arg0 (w / we) :arg1 (a / and :op1 (b / bring-01 :arg0 (p / person :arg0-of (b2 / bring-01 :arg1 (c / complain-01 :mod (k / kind :mod (t / this))))) :arg1 (c2 / complain-01 :arg0 (p2 / person) :mod (k2 / kind :mod (t2 / this)))) :op2 (a2 / apply-01 :arg0 (p3 / person) :arg2 (w2 / we)))) :snt2 (m2 / make-01 :arg0 (w3 / we) :arg1 (a3 / apply-01 :arg1 (c3 / complain-01 :arg0 (a4 / and :op1 (b3 / bank) :op2 (c4 / company))))))
(p / possible-01 :arg1 (w / we :mod (a / again)))
(d / deal-01 :polarity - :arg0 (d2 / department :mod (p / police)) :arg2 (a / anything :mod (e / else)) :duration (t / temporal-quantity :quant (N / N-A) :unit (d3 / day)))
(m / multi-sentence :snt1 (s / start-01 :arg1 (c / come-01 :arg1 (i / it) :arg4 (l / light))) :snt2 (p / possible-01 :arg1 (d / destroy-01 :polarity - :arg0 (p2 / person :arg0-of (l2 / lead-02 :arg1 (o / organization))) :arg1 (s2 / struggle-01 :arg0 (p3 / person :arg0-of (l3 / lead-02 :arg1 (o2 / organization))) :location (s3 / struggle-01 :mod (t / this))))))
(p / point :location (b / bridge :location-of (s / stop-01 :arg1 (b2 / bus :mod (b3 / big)))))
(d / dispatch-01 :arg1 (t / team :mod (p / police)) :arg2 (s / scene :part-of (i / incident)) :time (n / notice-03 :mod (t2 / this)))
(p / phone-number-entity :value (N / N-A))
(s / say-01 :arg0 (p / person :name (n / name :op1 "Çako") :arg0-of (h / have-org-role-91 :arg2 (m / minister))) :arg1 (k / know-02 :arg1 (i / it) :arg2 (p2 / public) :arg1-of (c / cause-01 :arg0 (k2 / know-01 :arg0 (p3 / person :arg0-of (h2 / have-org-role-91 :arg2 (m2 / minister))) :arg1 (a / activity-06 :arg0 (o / organization) :location (a2 / and :op1 (m3 / media) :op2 (b / business))) :mod (a3 / also) :time (t / time :arg1-of (s2 / same-01))))))
(s / send-01 :polarity - :arg0 (t / turk :location (h / here)) :arg1 (p / person :arg0-of (h2 / have-rel-role-91 :arg1 (t2 / they) :arg2 (c / child))) :arg2 (s2 / school :mod (f / feto)) :time (a / anymore))
(c / convert-01 :arg1 (a / and :op1 (c2 / city :arg0-of (h / have-org-role-91 :arg2 (b / bursa))) :op2 (p / person :arg0-of (h2 / have-org-role-91 :arg2 (t / thrace))) :op3 (p2 / person :arg0-of (h3 / have-org-role-91 :arg2 (t2 / thrace))) :op4 (p3 / person :arg0-of (h4 / have-org-role-91 :arg2 (t3 / thrace))) :op5 (p4 / person :arg0-of (h5 / have-org-role-91 :arg2 (t4 / thrace)))) :arg2 (a2 / and :op1 (p5 / person :mod (o / other) :arg0-of (h6 / have-org-role-91 :arg2 (h7 / head-of-state))) :op2 (p6 / person :arg0-of (h8 / have-org-role-91 :arg2 (t5 / thrace)))) :time (n / now))
(o / organize-01 :arg1 (t / team :mod (f / football)) :time (m / meanwhile))
(o / offer-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg2 (p2 / president :mod (v / vice)))) :arg1 (f / fenerbahçe :arg1 (p3 / person) :arg1-of (f2 / friendly-01)))
(o / obligate-01 :arg2 (g / grow-03 :arg0 (w / we) :arg1 (a / animal :arg1-of (a2 / age-01 :arg2 (t / temporal-quantity :quant (N / N-A) :unit (y / year)))) :arg3 (a3 / animal)))
(s / send-01 :arg1 (i / incident) :arg2 (s2 / scene) :time (r / report-01 :arg1 (i2 / incident)))
(e / evaluated :arg1 (t / they :quant (a / all)))
(h / have-03 :arg0 (t / topic :quant (m / many)) :arg1 (t2 / thing :polarity - :arg2-of (m2 / mean-01)) :mod (b / basic) :condition (b2 / bring-01 :polarity - :arg0 (t3 / topic) :arg1 (r / result :mod (a / any))))
(i / injure-01 :arg1 (c / child :arg1-of (i2 / injure-01)) :arg1-of (c2 / cause-01 :arg0 (b / boot :arg1 (c3 / car :poss (y / you)))))
(b / bring-01 :arg0 (h / he) :arg1 (p / person :arg1-of (i / injure-01)) :arg2 (n / narince :arg1 (p2 / person) :arg2 (b2 / boot :arg1 (c / car :poss (p3 / person)))))
(a / and :op1 (o / organize-01 :arg0 (t / talk-01 :arg1 (c / conference :mod (p / press) :arg1-of (o2 / organize-01 :location (c2 / conference :mod (p2 / press)) :location (c3 / city :name (n / name :op1 "Seoul") :arg0-of (h / have-org-role-91 :arg1 (c4 / company :name (n2 / name :op1 "N-A") :arg0-of (h2 / have-org-role-91 :arg1 (c5 / country) :arg2 (c6 / capital))) :arg2 (c7 / capital)))))) :arg1 (p3 / plan-01 :arg0 (p4 / person) :arg1 (r / release-01 :arg0 (p5 / person) :arg1 (a2 / and :op1 (p6 / person :quant 6 :mod (c8 / country :name (n3 / name :op1 "N-A")) :arg0-of (h3 / have-org-role-91 :arg1 (c9 / country) :arg2 (r2 / ram))) :op2 (p7 / person :quant 128 :arg0-of (h4 / have-org-role-91 :arg1 (c10 / country) :arg2 (c11 / chief)))))) :time (c12 / conference :mod (p8 / press)) :location (c13 / conference :mod (p9 / press))) :op2 (a3 / announce-01 :arg0 (p10 / person) :arg1 (p11 / plan-01 :arg0 (p12 / person) :arg1 (r3 / release-01 :arg0 (p13 / person) :arg1 (m / model :quant 6 :mod (c14 / country)) :arg2 (m2 / market)))))
(m / multi-sentence :snt1 (d / determine-01 :mode (i / interrogative) :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (p2 / person :arg0-of (h2 / have-org-role-91 :arg2 (p3 / person :arg0-of (i2 / inspect-01 :arg1 (t / tax-01))))) :arg2 (p4 / person :arg0-of (i3 / inspect-01 :arg1 (t2 / tax-01))))) :arg1 (p5 / person :arg0-of (h3 / have-org-role-91 :arg2 (p6 / person :arg0-of (i4 / inspect-01 :arg1 (t3 / tax-01)))))) :snt2 (c / close-01 :arg0 (p7 / person :arg0-of (h4 / have-org-role-91 :arg1 (t4 / tax-01) :arg3 (i5 / inspect-01))) :arg1 (s / school :arg1-of (c2 / close-01 :arg0 (p8 / person :arg0-of (h5 / have-org-role-91 :arg1 (t5 / tax-01) :arg3 (i6 / inspect-01)))) :arg1-of (c3 / close-01 :arg0 (p9 / person :arg0-of (h6 / have-org-role-91 :arg1 (t6 / tax-01) :arg3 (i7 / inspect-01))))) :location (m2 / ministry :topic (i8 / inspect-01 :arg1 (t7 / tax-01))) :location (s2 / scope :poss (i9 / investigate-01 :arg0 (p10 / person :arg0-of (h7 / have-org-role-91 :arg1 (m3 / ministry :topic (t8 / tax-01))))))))
(a / and :op2 (p / possible-01 :arg1 (r / return-01 :arg1 (p2 / person :arg0-of (h / have-rel-role-91 :arg1 (w / we) :arg2 (p3 / patient))) :arg4 (l / life :arg1-of (n / normal-02) :poss (p4 / person)) :time (d / day :mod (n2 / next)))))
(a / and :op1 (c / criticised :arg0 (m / model :name (n / name :op1 (s / stephanie) :op2 (s2 / stephanie)) :mod (s3 / secret) :poss (c2 / company :name (n2 / name :op1 "N-A") :mod (o / original))) :arg1 (j / jenner :name (n3 / name :op1 (j2 / jenner) :op2 (g / gigi) :op3 (g2 / gigi) :op4 (h / hadid) :op5 (h2 / hadid) :op6 (h3 / hadid) :op7 (h4 / hadid)))) :op2 (c3 / call-01 :arg0 (m2 / model) :arg1 (h5 / hadid) :arg2 (b / bitches :mod (' / '')) :time (m3 / moment)))
(s / say-01 :arg0 (p / person :name (n / name :op1 "N-A")) :arg1 (g / get-03 :arg1 (s2 / situation) :arg2 (b / bad-04 :arg1 (s3 / situation) :degree (m / more)) :mod (o / only) :condition (r / reverse-01 :arg1 (d / decide-01 :arg0 (g2 / government-organization :arg0-of (g3 / govern-01) :mod (f / federal))))))
(m / multi-sentence :snt1 (v / v. :arg1 (c / case-03) :arg2 (t / trumps :arg0 (p / person :arg0-of (h / have-org-role-91 :arg2 (p2 / president))) :arg1 (p3 / person :arg0-of (h2 / have-org-role-91 :arg2 (p4 / president))) :arg2 (p5 / person :arg0-of (h3 / have-org-role-91 :arg2 (p6 / president))))) :snt2 (s / superior :arg0 (a / and :op1 (p7 / person :arg0-of (h4 / have-org-role-91 :arg2 (p8 / president))) :op2 (p9 / person :arg0-of (h5 / have-org-role-91 :arg2 (g / general))) :op3 (p10 / person :arg0-of (h6 / have-org-role-91 :arg2 (g2 / general))) :op4 (p11 / person :arg0-of (h7 / have-org-role-91 :arg2 (g3 / general))) :op5 (p12 / person :arg0-of (h8 / have-org-role-91 :arg2 (g4 / general))) :op6 (p13 / person :arg0-of (h9 / have-org-role-91 :arg2 (g5 / general))) :op7 (p14 / person :arg0-of (h10 / have-org-role-91 :arg2 (h11 / head-of-state))))))
(a / announce-01 :arg1 (a2 / and :op1 (b / businessman :domain (p / person :arg2-of (s / suspect-01))) :op2 (p2 / person :arg0-of (t / teach-01) :arg0-of (w / work-01 :location (s2 / school :arg1-of (c / close-01))))))
(a / arrest-01 :arg1 (p / person :arg0-of (h / have-org-role-91 :arg2 (n / nephew))) :location (e / erzurum :mod (e2 / erzurum)))
(m / multi-sentence :snt1 (s / state-01 :arg1 (r / recommend-01 :arg1 (c / consensus :topic (p / pass-01 :arg1 (l / law :mod (f / fund-01 :arg1 (w / wealth))))))) :snt2 (s2 / say-01 :arg0 (i / i) :arg1 (c2 / concern-01 :arg0 (b / bill :mod (t / this)) :arg1 (b2 / bill :mod (t2 / this)) :mod (b3 / big :degree (m2 / most)))))
(s / say-01 :arg0 (p / paper) :arg1 (j / judge-01 :arg0 (p2 / person :arg1-of (i / include-91 :arg2 (p3 / person :arg0-of (w / walk-01 :location (m / motorway :arg1-of (d / dark-02))) :mod (b / both))) :mod (b2 / both)) :arg1 (p4 / possible-01 :polarity - :arg1 (e / expect-01 :arg0 (p5 / person) :arg1 (c / come-01 :arg1 (p6 / person) :arg4 (a / across :op1 (p7 / pedestrian :time (n / night))))))) :prep-in (c2 / case :mod (e2 / each)))
(r / result-01 :arg1 (r2 / result-01) :arg2 (t / temperature :op1 (t2 / temperature :quant (f / few :op1 (t3 / temporal-quantity :quant (N / N-A) :unit (m / month)) :mod (a / actual)) :compared-to (e / earth) :time (t4 / today))))
(n / name-02 :arg1 (c / company :arg0-of (w / win-01 :arg1 (a / award-01)) :mod (j / jack)) :arg2 (c2 / coach :mod (g / good :degree (m / most)) :arg1-of (m2 / mean-01 :arg2 (c3 / coach :mod (g2 / good :degree (m3 / most)) :poss (l / league)) :time (s / season :quant 2013-14))))
(c / cause-01 :arg0 (p / pressure-01 :arg0 (m / market :mod (n / negative))) :arg1 (c2 / cut-02 :arg1 (r / rate :mod (w / wood)) :arg3 (p2 / percentage-entity :value (N / N-A)) :arg4 (n2 / north :part-of (g / group)) :time (y / year :mod (t / this))))
(c / call-03 :arg0 (p / person :arg0-of (r / represent-01 :arg1 (d / doctor :mod (j / junior)))) :arg1 (u / union-02 :arg1 (p2 / person) :arg2 (a / act-02 :arg0 (p3 / person) :mod (i / industry) :arg1-of (f / fresh-04)) :time (d2 / dispute-01 :arg0 (p4 / person) :arg2 (c2 / contract :mod (n / new)))) :arg2 (p5 / person :arg0-of (r2 / represent-01 :arg1 (d3 / doctor :mod (j2 / junior)))))
(t / tell-01 :arg0 (p / person :arg0-of (m / mcewan)) :arg1 (a / associate-01 :arg1 (b / brand :name (n / name :op1 (r / rbs) :op2 (b2 / brand))) :arg2 (a2 / ambition :mod (g / globe) :poss (b3 / bank))) :arg2 (p2 / person :name (n2 / name :op1 "N-A")))
(c / cause-01 :arg0 (a / and :op1 (h / have-03 :arg0 (t / team :name (n / name :op1 (g / gymnastics)) :mod (n2 / next) :mod (o / olympic)) :arg1 (t2 / team) :mod (o2 / only)) :op2 (m / marta :arg0 (t3 / team) :arg1 (t4 / team) :time (y / year :mod (l / last)))) :arg1 (' / '' :domain (t5 / they) :mod (f / final)))
(a / and :op1 (d / develop-01 :arg2 (a2 / and :op1 (s / strength :poss (b / body)) :op2 (d2 / dissent-01) :op3 (c / coordinate-01)) :beneficiary (b2 / body)) :op2 (a3 / and :op1 (w / work-01 :arg0 (a4 / and)) :op2 (w2 / work-01 :arg0 (a5 / and)) :op3 (d3 / determine-01 :arg0 (a6 / and) :arg1 (m / mind))))
(s / say-01 :arg0 (t / thing :arg1-of (r / report-01 :arg0 (h / he))) :arg1 (p / present-01 :arg1 (t2 / thing :arg0-of (e / evidence-01) :arg1-of (p2 / present-01 :arg2 (p3 / pressure-01))) :arg2 (a / and :op1 (p4 / person :arg0-of (h2 / have-org-role-91 :arg1 (c / community :mod (m / minority :mod (e2 / ethnic)) :mod (s2 / some)) :arg2 (m2 / member))) :op2 (p5 / person :mod (y / young) :arg0-of (h3 / have-org-role-91 :arg1 (c2 / community :mod (p6 / particular)) :arg2 (m3 / member))) :op3 (p7 / person :mod (y2 / young)) :op4 (p8 / person :mod (y3 / young)) :op5 (p9 / person :mod (y4 / young))) :arg1-of (c3 / conform-01 :arg2 (a2 / and :op1 (p10 / person :mod (e3 / ethnic-group :name (n / name :op1 "N-A"))) :op2 (b / background :mod (b2 / bangladeshi)) :mod (e4 / especially)))))
(a / and :op1 (p / put-01 :arg0 (p2 / person :mod (c / country :name (n / name :op1 "N-A"))) :arg1 (s / system :name (n2 / name :op1 (i / immune)) :poss (p3 / person)) :arg2 (t / test :mod (s2 / serious))) :op2 (t2 / test-01 :arg0 (p4 / person) :arg1 (t3 / test-01 :mod (s3 / serious)) :manner (l / licking :arg0 (p5 / person) :arg1 (s4 / some :arg1-of (i2 / include-91 :arg2 (a2 / and :op1 (p6 / place :mod (d / dirtiest)) :op2 (p7 / place :arg0-of (d2 / disgust-01))))))))
(s / show-01 :arg0 (f / footage :mod (d / dramatic)) :arg1 (c / come-03 :arg1 (p / plane :mod (m / military)) :arg2 (d2 / distance-01 :arg1 (p2 / plane) :arg2 (s2 / sand :location (s3 / sand :location (r / relative-position :op1 (s4 / sand :location (n / north)))))) :mod (a / almost)))
FAILED_TO_PARSE#Number of opening and closing brackets doesn't match.
(s / say-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (c / company :name (n / name :op1 "N-A") :mod (o / old :degree (m / more))))) :arg1 (t / take-01 :arg0 (c2 / customer :mod (o2 / old :degree (m2 / more)) :mod (s2 / some)) :arg1 (u / umbrage) :manner (p2 / particular)))
(s / see-01 :polarity - :arg0 (w / we) :arg1 (n / nature :poss (t / triumph)) :arg1-of (s2 / see-01 :arg0 (w2 / we) :arg1-of (s3 / see-01 :arg0 (w3 / we) :arg1-of (s4 / see-01 :arg0 (w4 / we) :arg1-of (s5 / see-01 :arg0 (w5 / we) :arg1-of (s6 / see-01 :arg0 (w6 / we) :arg1-of (s7 / see-01 :arg0 (w7 / we) :arg1-of (s8 / see-01 :arg0 (w8 / we) :arg1-of (s9 / see-01 :arg0 (w9 / we) :arg1-of (s10 / see-01 :arg0 (w10 / we) :arg1-of (s11 / see-01 :arg0 (w11 / we) :location (a / all-over :op1 (s12 / surface)))))))))))))
(p / prize-01 :arg1 (i / it))
(a / and :op1 (b / be-located-at-91 :arg1 (i / i) :arg2 (h / hospital)) :op2 (w / walk-01 :arg0 (i2 / i) :location (a2 / around :op1 (e / event :name (n / name :op1 "N-A")))) :li (2 / 20ft))
(s / start-01 :arg1 (i / it) :manner (a / amr-unknown))
(a / and :op1 (c / call-01 :arg1 (p / person :mod (c2 / country :name (n / name :op1 "N-A"))) :arg2 (p2 / process-02)) :op2 (s / stay-01 :arg1 (p3 / person) :arg3 (p4 / process-02) :time (p5 / process-02 :arg1 (p6 / process-02))))
(a / and :op1 (h / have-03 :arg0 (w / we) :arg1 (b / breaststroke) :time (a2 / always)) :op2 (p / possible-01 :arg1 (r / reigns :arg1 (w2 / we))))
(p / protest-01 :arg0 (y / youth :mod (w / whole)))
(c / consider-01 :arg1 (g / genius :domain (h / he) :mod (t / tactical)) :arg1-of (c2 / cause-01 :arg0 (m / man :arg1-of (s / see-01 :arg0 (m2 / man) :arg1-of (p / possible-01) :location (a / around :op1 (p2 / port :name (n / name :op1 "N-A"))) :arg1-of (p3 / possible-01)))))
(c / continue-01 :arg1 (l / lashes :arg0 (t / trumps :name (n / name :op1 (m / mr.) :op2 (t2 / trumps))) :arg1 (t3 / twitter :location (m2 / media :mod (n2 / news)) :purpose (a / and :op1 (h / harping :arg1 (w / word :mod (e / every) :poss (h2 / he))) :op2 (b / bias-01 :arg1 (t4 / trumps) :arg2 (h3 / he))))) :time (a2 / ahead :op1 (r / rallies :location (p / pennsylvania))))
(h / have-03 :arg0 (l / location :mod (n / new)) :arg1 (l2 / location :mod (o / other)))
(m / multi-sentence :snt1 (s / say-01 :arg0 (h / he) :arg1 (o / open-01 :arg1 (a / and :op1 (p / person :arg0-of (l / lead-02 :arg1 (c / country :quant 2))) :op2 (p2 / person :arg0-of (l2 / lead-02 :arg1 (p3 / person :arg0-of (l3 / lead-02))))))) :snt2 (a2 / and :op1 (c2 / close-01 :arg0 (w / we) :arg1 (g / gap) :time (i / immediate)) :op2 (r / reach-01 :arg0 (g2 / gap) :arg1 (g3 / goal :poss (w2 / we)) :condition (p4 / progress-01 :arg1 (w3 / we) :manner (r2 / rapid)))))
(p / pay-01 :arg1 (f / fee :mod (t / transfer-01) :mod (m / monetary-quantity :quant 750 :unit (e / euro))) :arg3 (m2 / monetary-quantity :quant 750 :unit (y / yuan :mod (r / renminbi))) :arg3 (m3 / monetary-quantity :quant 750 :unit (y2 / yuan :mod (r2 / renminbi)) :arg1-of (p2 / pay-01 :arg3 (y3 / year :mod (o / one)))))
(s / seize-01 :arg1 (a / asset :poss (p / person :arg0-of (g / gülen))))
(f / faced :arg0 (w / we) :arg1 (f2 / fact :topic (w2 / win-01 :arg0 (w3 / we) :arg1-of (c / cause-01 :arg0 (p / possible-01 :arg1 (g / get-on-21 :arg0 (w4 / we) :location (t / there)) :degree (t2 / total))))) :time (a / after :op1 (a2 / all)))
(m / multi-sentence :snt2 (d / detain-01 :arg1 (p / person :quant 30 :arg1-of (i / include-91 :arg2 (p2 / person :quant 40 :arg0-of (h / have-org-role-91 :arg1 (u / university) :arg2 (m2 / member)) :arg1-of (i2 / include-91 :arg2 (p3 / person :quant 40 :arg0-of (h2 / have-org-role-91 :arg1 (u2 / university) :arg2 (m3 / member)))) :arg0-of (h3 / have-org-role-91 :arg1 (u3 / university) :arg2 (m4 / member)))) :arg0-of (h4 / have-org-role-91 :arg1 (u4 / university) :arg2 (m5 / member))) :location (a / address :poss (p4 / person))) :snt3 (d2 / detain-01 :arg1 (p5 / person :quant 30 :arg1-of (i3 / include-91 :arg2 (p6 / person :quant 40 :arg0-of (h5 / have-org-role-91 :arg1 (u5 / university) :arg2 (m6 / member)))) :arg0-of (h6 / have-org-role-91 :arg1 (u6 / university) :arg2 (m7 / member)))) :snt3 (d3 / detain-01 :arg1 (p7 / person :quant 30 :arg1-of (i4 / include-91 :arg2 (p8 / person :quant 40 :arg0-of (h7 / have-org-role-91 :arg1 (u7 / university) :arg2 (m8 / member)))))))
(d / determine-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (d2 / department :part-of (i / intelligence :mod (p2 / police))) :arg2 (d3 / director :mod (i2 / intelligence)))) :arg1 (p3 / person :arg0-of (h2 / have-org-role-91 :arg1 (d4 / department :mod (i3 / intelligence) :mod (p4 / police)) :arg2 (d5 / director :mod (d6 / department :mod (i4 / intelligence))))))
(a / arrest-01 :arg0 (p / person) :arg1 (p2 / person :quant 51 :arg0-of (h / have-org-role-91 :arg1 (p3 / police) :arg2 (o / officer))) :location (l / location :name (n / name :op1 "konya")) :arg2-of (i / include-91 :arg1 (a2 / and :op1 (p4 / person :quant 14 :arg0-of (h2 / have-org-role-91 :arg1 (p5 / police) :arg2 (o2 / officer))) :op2 (p6 / person :quant 14 :arg0-of (h3 / have-org-role-91 :arg1 (p7 / police) :arg2 (o3 / officer))) :op3 (p8 / person :quant 14 :arg0-of (h4 / have-org-role-91 :arg1 (p9 / police) :arg2 (o4 / officer))) :op4 (p10 / person :quant 14 :arg0-of (h5 / have-org-role-91 :arg1 (p11 / police) :arg2 (o5 / officer))) :op5 (p12 / person :quant 14 :arg0-of (h6 / have-org-role-91 :arg1 (p13 / police) :arg2 (o6 / officer))) :op6 (p14 / person :quant 10 :arg0-of (h7 / have-org-role-91 :arg1 (p15 / police) :arg2 (o7 / officer))) :op6 (p16 / person :quant 10 :arg0-of (h8 / have-org-role-91 :arg1 (p17 / police) :arg2 (o8 / officer))) :op6 (p18 / person :quant 10 :arg0-of (h9 / have-org-role-91 :arg1 (p19 / police) :arg2 (o9 / officer))) :op7 (p20 / person :quant 10 :arg0-of (h10 / have-org-role-91 :arg1 (p21 / police) :arg2 (o10 / officer))) :op7 (p22 / person :arg0-of (h11 / have-org-role-91 :arg1 (p23 / police) :arg2 (o11 / officer))) :location (a3 / adana))))
(m / multi-sentence :snt1 (s / start-01 :arg1 (c / come-01 :arg1 (i / it) :arg4 (l / light))) :snt2 (p / possible-01 :arg1 (d / destroy-01 :polarity - :arg0 (p2 / person :arg0-of (l2 / lead-02 :arg1 (o / organization))) :arg1 (s2 / struggle-01 :arg0 (p3 / person :arg0-of (l3 / lead-02 :arg1 (o2 / organization))) :location (s3 / struggle-01 :mod (t / this))))))
(m / multi-sentence :snt2 (s / seize-01 :arg1 (g / gold) :accompanier (w / weight :consist-of (w2 / weight :quant 1.5 :arg1-of (s2 / seize-01 :time (t / transport-01 :arg1 (t2 / transport-01 :quant 1.5))))) :time (t3 / transport-01 :arg1 (g2 / gold) :arg4 (p / pennsylvania))))
(c / capture-01 :arg1 (p / person :quant 1 :arg1-of (i / include-91 :arg2 (p2 / person :arg0-of (c2 / culprits)))) :location (b / boulevard :mod (e / egemenlik)) :time (a / after :op1 (h / hijack-01 :arg0 (p3 / person) :arg1 (a2 / area :arg1-of (c3 / continue-01 :destination (a3 / area :mod (p4 / pedestrian)))))))
(s / start-01 :arg1 (e / examine-01 :arg1 (i / incident)))
(t / target-01 :arg0 (p / person :arg0-of (w / work-01) :time (f / former)) :arg1 (a / and :op1 (p2 / person :arg1-of (a2 / addict-01 :arg2 (d / drug))) :op2 (p3 / person :arg1-of (a3 / addict-01 :arg2 (d2 / drug)))) :location (s / spree :mod (m / murder-01) :poss (p4 / person)))
(w / work-01 :arg0 (a / and :op1 (b / businessman) :op2 (d / dvd) :op3 (p / person :arg0-of (h / have-org-role-91 :arg1 (c / commissioned) :arg2 (o / officer)))) :arg1 (l / level :mod (v / various)) :arg1-of (a2 / accord-02 :arg2 (p2 / position :poss (a3 / and) :location (a4 / and :op1 (o2 / organization) :op2 (s / support-01 :arg0 (a5 / and))))))
(e / evaluated :arg1 (t / they :quant (a / all)))
(s / say-01 :arg0 (h / he) :arg1 (h2 / have-03 :arg0 (i / i) :arg1 (r / raft :beneficiary (p / person :quant 8 :arg1-of (m / make-18 :arg0 (i2 / i) :source (p2 / plastic)))) :mod (a / also)))
(p / possible-01 :arg1 (a / and :op1 (m / make-01 :arg0 (y / you :mod (b / both)) :arg1 (r / road :mod (c / curvy) :poss (a2 / and :op1 (s / sea :location (r2 / relative-position :op1 (r3 / river :name (n / name :op1 "N-A")) :direction (s2 / sea))) :op2 (s3 / sea :arg1-of (b2 / black-04)))) :op2 (e / experience-01 :arg1 (m2 / moment :mod (e2 / exciting)) :location (r4 / route :consist-of (o / or :op1 (o2 / or :op1 (e3 / europe) :op2 (f / fame-01)) :op2 (a3 / adventures :mod (f2 / full)) :op3 (a4 / adrenaline :mod (f3 / full))))))))
(d / demonstrate-01 :arg1 (p / possible-01 :polarity - :arg1 (i / imagine-01 :arg1 (f / feat :arg0 (h / he) :arg1 (f2 / feat :mod (w / win-01 :arg0 (h2 / he) :arg1 (g / golds :quant 3 :mod (o / olympic)) :arg2 (g2 / game :quant 1)))))) :manner (d2 / demonstrate-01 :mod (f3 / form) :mod (f4 / form)))
(k / kill-01 :arg1 (p / person :quant 2 :arg0-of (h / have-org-role-91 :arg1 (f / family :name (n / name :op1 "N-A")) :arg2 (m / member))) :location (c / conflict-01))
(o / organize-01 :arg0 (p / pkk :arg1 (c / car :mod (p2 / police) :arg0-of (c2 / conduct-01 :arg1 (d / duty :mod (p3 / person :arg0-of (p4 / patrol-01)) :arg1-of (n / near-02 :arg2 (m / mosque :location (r / relative-position :op1 (t / town :name (n2 / name :op1 "N-A") :arg1-of (l / la :mod (k / k)))))))))) :arg1 (a / attack-01) :location (n3 / neighborhood :name (n4 / name :op1 (s / selahattin) :op2 (s2 / street) :op3 (s3 / street) :op4 (s4 / street) :op5 (s5 / street) :op6 (s6 / street) :op7 (s7 / street) :op6 (s8 / street) :op7 (s9 / street)) :arg1-of (b / ban-01 :polarity - :location (d2 / district :mod (m2 / may?s)) :time (t2 / today))))
(s / say-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg2 (m / minister :mod (p2 / prime)))) :arg1 (i / issue-01 :arg0 (w / we) :arg1 (r / regulate-01 :mod (c / comprehensive) :purpose (r2 / rid-01 :arg0 (w2 / we) :arg1 (d / debt :poss (y / you) :mod (d2 / debt :poss (y2 / you)))) :mod (c2 / comprehensive :degree (m2 / more))) :arg1-of (c3 / cause-01 :arg0 (e / explain-01 :arg0 (t / they) :arg1 (a / and :op1 (p3 / provide-01 :arg0 (t2 / they) :arg1 (c4 / convenience :mod (k / kind :quant (a2 / all)) :prep-for (e2 / economy)) :arg2 (e3 / economy)) :op2 (c5 / create-01 :arg0 (t3 / they) :arg1 (a3 / area :mod (e4 / employ-01 :polarity -))) :op3 (c6 / create-01 :arg0 (t4 / they) :arg1 (a4 / area :mod (e5 / employ-01 :mod (n / new)))))))))
(l / lie-07 :arg1 (p / police) :arg2 (p2 / person :arg0-of (w / witness-01)) :time (a / after :op1 (r / run-01 :arg0 (v / vehicle :quant (s / several)) :arg1 (r2 / rate-entity-91 :arg1 (v2 / vehicle :quant (s2 / several)) :arg2 (w2 / woman) :time (e / early :op1 (a2 / after :op1 (n / now) :quant (t / temporal-quantity :quant (N / N-A) :unit (h / hour) :mod (e2 / early))) :arg1-of (c / cause-01 :arg0 (s3 / suicide) :mod (a3 / apparent)))))))
(p / possible-01 :mode (i / interrogative) :arg1 (a / avoid-01 :arg1 (i2 / impact-01 :arg0 (i3 / it))))
(s / share-01 :arg0 (p / person :arg0-of (r / research-01)) :arg1 (t / thing :arg2-of (r2 / result-01 :arg1 (m / model :topic (c / climate) :mod (n / new) :poss (p2 / person)))) :arg2 (l / letter :mod (r3 / research-01) :mod (g / geophysical) :poss (p3 / person)))
(a / and :op1 (p / pressure-01 :arg0 (t / thing :arg2-of (p2 / price-01 :arg1 (o / oil)) :arg1-of (l / low-04 :degree (m / more))) :arg1 (m2 / monetary-quantity :arg2-of (p3 / price-01 :arg1 (o2 / oil)) :arg1-of (l2 / low-04 :degree (m3 / more))) :arg2 (m4 / monetary-quantity :arg2-of (p4 / price-01 :arg1 (o3 / oil)) :arg1-of (l3 / low-04 :degree (m5 / more)))) :op2 (s / situation :arg0 (d / decide-01 :arg0 (c / country :name (n / name :op1 "N-A"))) :arg1 (l4 / leave-11 :arg0 (c2 / company) :arg1 (u / union-02 :arg1 (c3 / continent :name (n2 / name :op1 "N-A"))))))
(m / multi-sentence :snt1 (m2 / make-02 :arg0 (c / connect-01 :arg1 (h / he) :arg2 (c2 / connect-01 :arg1 (h2 / he) :arg2 (f / family))) :arg1 (w / we) :time (a / always)) :snt2 (s / say-01 :arg0 (p / person :arg0-of (h3 / have-org-role-91 :arg2 (g / galicia :mod (l / louis)))) :arg1 (w2 / we)))
(t / turn-02 :arg0 (t2 / thing :arg1-of (o / opine-01 :arg0 (p / public))) :arg1 (t3 / thing :arg1-of (o2 / opine-01 :arg0 (p2 / public))) :mod (a / also) :time (s / since))
(c / consensus :arg1-of (c2 / clear-06) :prep-on (p / possible-01 :arg1 (s / seek-01 :arg0 (t / they) :arg1 (g / ground :mod (c3 / common) :location (o / on :op1 (s2 / syria))))))
(b / become-01 :arg1 (s / slash :op1 (b2 / brand :mod (g / globe)) :op2 (b3 / brand :name (n / name :op1 (r / rbs)))) :arg2 (b4 / brand :mod (g2 / globe)) :prep-as (b5 / bank))
(a / and :op1 (v / visit-01 :arg0 (p / person :name (n / name :op1 "keith" :op2 "brown") :arg0-of (h / have-org-role-91 :arg2 (s / secretary :mod (e / economy)))) :arg1 (s2 / site) :time (t / today)) :op2 (i / include-91 :arg1 (p2 / person :ord (o / ordinal-entity :value 1) :arg0-of (w / walk-01 :ord (o2 / ordinal-entity :value 1))) :arg2 (w2 / walk-01 :arg0 (p3 / person) :destination (b / bridge))))
(a / and :op1 (w / witness-01 :arg0 (w2 / we :quant (a2 / all)) :arg1 (e / engineer-01) :arg2 (s / scale :mod (e2 / epic :mod (t / true)) :location (p / project :mod (t2 / this)))) :op2 (u / use-01 :arg0 (a3 / and :op1 (c / concrete :quant (o / over :op1 30,000)) :op2 (s2 / steel) :arg1-of (u2 / use-01 :mod (j / just))) :arg1 (p2 / part :part-of (b / bridge)) :mod (j2 / just)))
(s / see-01 :arg1 (a / anything :mod (l / less) :compared-to (h / head-02 :arg0 (p / person :arg0-of (h2 / have-org-role-91 :arg1 (f / family :arg1-of (h3 / have-org-role-91 :arg0 (p2 / person) :arg2 (m / member))) :arg2 (h4 / home :poss (f2 / family)))) :arg1 (h5 / home :poss (f3 / family :arg1-of (h6 / have-org-role-91 :arg0 (p3 / person) :arg2 (m2 / member)))) :location (h7 / home :poss (f4 / family :arg1-of (h8 / have-org-role-91 :arg0 (p4 / person) :arg2 (m3 / member)))))))
(a / and :op1 (h / hugged :arg0 (p / person :name (n / name :op1 "raisman")) :arg1 (g / gently :poss (p2 / person)) :arg1-of (c / cause-01 :arg0 (a2 / awaited :arg0 (p3 / person) :arg1 (t / trouble-01 :mod (f / final))))) :op2 (a3 / appear-01 :arg1 (a4 / and :op1 (a5 / appear-01 :arg1 (p4 / person) :location (a6 / around)) :op2 (a7 / appear-01 :arg1 (p5 / person) :location (a8 / around)) :op3 (a9 / appear-01 :arg1 (p6 / person) :location (a10 / around))) :time (w / write-01 :arg0 (p7 / person) :arg1 (b / become-01 :arg1 (p8 / person) :arg2 (r / reality) :time (w2 / write-01 :arg0 (p9 / person) :arg1 (r2 / reality)) :time (o / once)))))
(s / say-01 :arg0 (p / police) :arg1 (r / result-01 :arg1 (r2 / rob-01 :mod (b / bone :part-of (d / dinosaur))) :arg2 (a / appear-02 :arg1 (r3 / result-01 :arg2 (r4 / rob-01))) :arg1-of (c / cause-01 :arg0 (o / or :op1 (t / take-01 :arg0 (p2 / person :arg0-of (b2 / betray-01)) :arg1 (r5 / rate-entity-91 :arg1 (m / monetary-quantity :quant 2,900 :unit (d2 / dollar)) :arg2 (t2 / temporal-quantity :quant (N / N-A) :unit (y / year)))) :op2 (p3 / possess-01 :arg0 (p4 / person) :arg1 (o2 / or :op1 (m2 / monetary-quantity :quant 2,900 :unit (d3 / dollar)) :op2 (m3 / multiple :op1 1)))))))
(a / and :op1 (t / ticagrelor :arg0 (f / firm :name (n / name :op1 (a2 / astrazeneca) :op2 (a3 / astrazeneca)) :arg1-of (m / make-01 :arg0 (f2 / firm :mod (c / country :name (n2 / name :op1 "N-A"))))) :arg1 (t2 / thing :arg2-of (n3 / name-01 :arg1 (f3 / firm :mod (c2 / country :name (n4 / name :op1 "N-A")))) :arg1-of (s / sell-01 :prep-under (n5 / name :op1 (b / brilique) :op2 (b2 / brilique))))) :op2 (l / likely-01 :arg1 (r / risk-01 :arg0 (r2 / risk-01 :mod (t3 / this)) :arg2 (l2 / likely-01 :degree (l3 / less)))))
(a / and :op1 (l / lambasts :arg0 (p / person :arg0-of (h / have-org-role-91 :arg2 (m / minister :mod (e / ex-cabinet)))) :arg1 (a2 / and :op1 (p2 / police) :op2 (p3 / person :arg0-of (e2 / elect-01)) :op3 (p4 / person :arg0-of (h2 / have-org-role-91 :arg2 (h3 / head-of-state))) :op4 (p5 / person :arg0-of (h4 / have-org-role-91 :arg2 (h5 / head-of-state))) :op5 (p6 / person :arg0-of (h6 / have-org-role-91 :arg2 (h7 / head-of-state)))) :purpose (i / ignore-01 :arg0 (p7 / person) :arg1 (t / thing :arg0-of (e3 / evidence-01 :arg1 (a3 / abuse-01 :arg1 (e4 / elect-01)))))) :op2 (b / because :arg0 (p8 / person) :arg1 (t2 / thing :arg0-of (e5 / evidence-01 :arg1 (a4 / abuse-01 :arg1 (e6 / elect-01))))))
(s / strengthen-01 :arg1 (t / train-01 :arg2 (e / ensure-01 :arg1 (e2 / enforce-01 :arg0 (p / person :arg2-of (s2 / staff-01)) :arg1 (r / rule :arg0-of (g / go-02 :arg4 (a / alone :mod (b / booths))))))))
(a / and :op1 (a2 / analyze-01 :arg0 (p / person :arg0-of (a3 / analyze-01 :arg1 (p2 / place :name (n / name :op1 (1 / 14-year-old) :op2 (a4 / ai))))) :arg1 (p3 / person :arg0-of (v / view-01 :arg1 (p4 / political-party :name (n2 / name :op1 "N-A")))) :location (f / freestyle :name (n3 / name :op1 (4 / 4x200m) :op2 (o / olympic) :op3 (o2 / olympic) :op4 (o3 / olympic) :op5 (o4 / olympic) :op6 (o5 / olympic) :op7 (o6 / olympic)))))
(c / contrast-01 :arg1 (p / probable :domain (l / look-02 :arg0 (t / thing :arg1-of (r / report-01) :mod (n / news)) :arg1 (c2 / concern-01 :arg0 (s / stack :arg1 (c3 / compilations :mod (b / bossa)))))) :arg2 (s2 / stage :mod (t2 / this) :topic (r2 / report-01 :mod (n2 / news))))
(m / make-01 :arg0 (d / dropshipper) :arg1 (i / it :quant (2 / 29-0)))
(m / multi-sentence :snt1 (a / absolute :domain (e / enforce-01 :arg0 (t / they)) :degree (a2 / absolute)) :snt2 (u / unbeaten :arg0 (t2 / they) :mod (p / precedent :polarity -) :mod (p2 / precedent :polarity -) :mod (a3 / again) :domain (t3 / this)))
(p / possible-01 :arg1 (m / mean-01 :arg1 (p2 / person :mod (d / diverse :degree (m2 / more) :compared-to (p3 / person :mod (a / atheist :degree (m3 / more)) :mod (d2 / diverse :degree (m4 / more) :compared-to (d3 / district :mod (o / old :degree (m5 / more))))))) :arg2 (l / likely-01 :arg1 (e / expect-01 :arg0 (p4 / person) :arg1 (e2 / expect-01 :arg0 (p5 / person) :arg1 (e3 / expect-01 :arg0 (p6 / person) :arg1 (s / sensitivity)))))))
(r / resemble-01 :arg1 (i / it) :arg2 (b / baton :mod (f / flaming) :arg1-of (p / pass-01 :arg2 (a / archer :prep-to (g / gymnast :prep-to (g2 / gymnast))))))
(c / complain-01 :arg0 (m / many) :arg1 (e / everything :source (u / use-01 :arg1 (l / land) :arg2 (c2 / coalition :arg0-of (g / govern-01 :arg1 (c3 / country :name (n / name :op1 "N-A")))) :topic (p / power))))
FAILED_TO_PARSE#Number of opening and closing brackets doesn't match.
(m / multi-sentence :snt1 (b / book :arg0 (b2 / book :name (n / name :op1 (m2 / mr.) :op2 (c / coe) :op3 (s / suey)) :mod (l / last)) :arg1 (c2 / cuisine :location (c3 / country :name (n2 / name :op1 "America"))) :mod (l2 / last)) :snt2 (c4 / contrast-01 :arg1 (t / tell-01 :arg0 (p / person :mod (c5 / country :name (n3 / name :op1 "America"))) :arg1 (s2 / story :topic (l3 / life) :location (s3 / side :arg1-of (l4 / low-04 :degree (m3 / more)))) :arg2 (s4 / story :topic (l5 / live-01) :location (s5 / side :mod (e / east) :arg1-of (l6 / low-04 :degree (m4 / more))))) :arg2 (o / orchards :arg1 (s6 / story :topic (l7 / live-01) :location (s7 / side :arg1-of (l8 / low-04 :degree (m5 / more)))))))
(d / dipped :arg0 (e / everyone) :arg1 (s / spoon :arg1 (g / goo :mod (b / brown) :mod (v / viscous))))
(d / date :mod (c / case-03) :time (b / back :op1 (a / and :op1 (g / gilead :arg1 (a2 / and :op1 (p / person :arg0-of (h / have-org-role-91 :arg2 (h2 / head-of-state))) :op2 (p2 / person :arg0-of (c2 / claim-01 :arg1 (o / own-01 :arg1 (l / laboratory)))))) :op2 (p3 / person :arg0-of (c3 / claim-01 :arg1 (o2 / own-01 :arg0 (p4 / person) :arg1 (w / work-01 :arg1 (l2 / laboratory) :arg0-of (c4 / counter-01 :arg1 (l3 / laboratory))))))) :op3 (i / ingredient :arg1-of (a3 / activity-06) :location (d2 / drug :mod (g2 / gilead)))))
(c / contrast-01 :arg2 (h / hiding :arg1 (t / trumps :mod (d / donald)) :arg2 (b / behind :op1 (a / and :op1 (m / motive :arg1-of (f / fake-02)) :op2 (b2 / backtracking))) :time (p / promise-01 :arg0 (h2 / he) :arg2 (r / release-01 :arg0 (h3 / he) :arg1 (r2 / returns :poss (h4 / he) :mod (t2 / tax-01))) :time (p2 / previous))))
(s / say-01 :arg0 (h / he) :arg1 (p / put-01 :arg0 (w / we) :arg1 (t / thing :arg1-of (p2 / propose-01) :mod (t2 / this)) :arg2 (t3 / tff)))
(a / arrest-01 :arg0 (p / police :arg1-of (a2 / arrive-01 :arg4 (s / scene :mod (c / crime-02)) :time (a3 / after :op1 (t / temporal-quantity :quant (N / N-A) :unit (m / minute))))) :arg1 (t2 / terrorist :mod (t3 / this)))
(m / multi-sentence :snt1 (h / hear-01 :arg0 (w / we) :arg1 (s / say-01 :arg0 (p / person :arg0-of (h2 / have-org-role-91 :arg2 (m2 / minister :mod (p2 / prime)))) :arg1 (s2 / say-01 :arg0 (p3 / person :arg0-of (h3 / have-org-role-91 :arg2 (m3 / minister :mod (p4 / prime)))) :arg1 (s3 / say-01 :arg0 (p5 / person :arg0-of (h4 / have-org-role-91 :arg2 (m4 / minister :mod (p6 / prime)))) :arg1 (s4 / say-01 :arg0 (p7 / person :arg0-of (h5 / have-org-role-91 :arg2 (m5 / minister :mod (p8 / prime)))) :arg1 (s5 / say-01 :arg0 (p9 / person)) :time (b / before :op1 (n / now) :quant (s6 / short))))))) :snt2 (a / attempt-01 :arg1 (' / '')))
(s / stood :arg0 (i / i))
(m / multi-sentence :snt1 (s / say-01 :mode (i / interrogative) :arg0 (i2 / i)) :snt2 (a / and :op1 (a2 / add-01 :mode (i3 / interrogative) :arg0 (y / you) :arg1 (a3 / and :op1 (a4 / and :op1 (s2 / sign-01 :arg0 (t / they) :arg1 (p / protocol :prep-with (p2 / person :arg0-of (m2 / manage-01 :arg1 (o / organization :arg1-of (p3 / public-02))) :quant (a5 / all) :arg1-of (r / relate-01 :arg2 (f / future :poss (g / generation :mod (n / new))))))) :op2 (w / wish-01 :arg0 (t2 / they) :arg1 (b / benefit-01 :arg1 (p4 / protocol))))))))
(c / contrast-01)
(s / state-01 :arg0 (p / person :arg0-of (r / reside-01) :arg1-of (n / neighbor-01)) :arg1 (l / leave-11 :arg0 (w / woman) :arg1 (h / house) :arg1-of (c / cause-01 :arg0 (a / and :op1 (o / oppress-01 :arg0 (p2 / person :arg0-of (o2 / oppress-01 :arg1 (p3 / person :arg0-of (h2 / have-rel-role-91 :arg1 (p4 / person) :arg2 (h3 / husband))))) :location (a2 / around :op1 (t / thing :arg2-of (s2 / shelter-01 :arg3 (w2 / woman)))) :time (b / before :op1 (n2 / now) :quant (t2 / temporal-quantity :quant (N / N-A) :unit (m / month)))) :op2 (c2 / consult-01 :arg0 (w3 / woman) :arg1 (w4 / woman))))))
(p / possible-01 :arg1 (s / say-01 :arg0 (w / we) :arg1 (o / or :op1 (s2 / send-01 :arg0 (p2 / person :arg0-of (l / lead-02) :arg1-of (l2 / low-04 :degree (m / more))) :arg1 (p3 / person :arg0-of (r / represent-01 :arg1 (p4 / person)) :arg1-of (l3 / low-04 :degree (m2 / more)))) :op2 (s3 / send-01 :arg0 (p5 / person) :arg1 (p6 / person :arg0-of (r2 / represent-01 :arg1-of (h / high-02 :degree (m3 / more)))) :arg2 (m4 / matter :topic (r3 / refugee))))))
(m / multi-sentence :snt1 (e / explain-01 :arg0 (i / issue-02 :arg0 (c / club :mod (a / all))) :arg1 (i2 / issue-02 :arg0 (c2 / club :mod (a2 / all)))) :snt2 (b / be-located-at-91 :arg1 (w / we) :arg2 (s / side :part-of (c3 / country :mod (t / this)))))
(a / attend-02 :mode (i / imperative) :arg0 (y / you) :arg1 (f / fact :topic (r / recommend-01 :arg1 (l / look-01 :polarity - :arg0 (a2 / animal) :arg1 (s / sell-01 :arg1 (a3 / animal)) :time (y2 / year :mod (l2 / last))))) :arg1-of (c / cause-01 :arg0 (t / talk-01 :arg0 (a4 / animal) :arg1 (b / buy-01 :arg0 (a5 / animal) :arg1 (a6 / animal :mod (s2 / sacrificial))))))
(s / state-01 :arg0 (p / person :name (n / name :op1 "N-A")) :arg1 (s2 / see-01 :arg1 (c / capable-01 :arg1 (o / organization) :arg2 (o2 / organizational :arg0 (o3 / organization) :arg1 (d / degree :arg1-of (h / high-02 :degree (m / most)) :mod (u / underground)) :mod (u2 / underground) :mod (u3 / underground))) :arg1-of (c2 / clear-06) :time (l / look-01 :arg0 (w / we) :arg1 (t / thing :manner-of (o4 / operate-01 :arg1 (s3 / school :quant (a / around :op1 150) :mod (c3 / charter) :location (a2 / around :op1 (s4 / school :quant 150 :mod (c4 / charter) :location (c5 / country))))) :manner (c6 / close)))))
(t / thing :arg1-of (s / symbolize-01 :arg2 (a / and :op1 (s2 / stand-01 :arg1 (w / we) :arg2 (p / person :mod (t2 / turkish))) :op2 (s3 / stand-01 :arg1 (w2 / we) :arg2 (d / democracy :mod (t3 / turkish))))) :time (t4 / today))
(a / and :op1 (c / close-01 :arg0 (h / he) :arg1 (b / boot) :mod (a2 / again)) :op2 (b2 / bring-01 :arg0 (h2 / he) :arg1 (w / we) :arg2 (v / village :mod (n / narince))))
(l / live-01 :arg0 (h / he) :accompanier (m / model :time (f / former) :arg1-of (m2 / meet-02 :arg0 (h2 / he) :time (b / before :op1 (n / now) :quant (b2 / between :op1 (t / temporal-quantity :quant (N / N-A) :unit (y / year)) :op2 (t2 / temporal-quantity :quant (N2 / N-A) :unit (y2 / year))))) :arg1-of (m3 / meet-02 :arg0 (h3 / he) :time (b3 / before :op1 (n2 / now) :quant (b4 / between :op1 (t3 / temporal-quantity :quant (N3 / N-A) :unit (y3 / year)) :op2 (t4 / temporal-quantity :quant (N4 / N-A) :unit (y4 / year)))) :arg1-of (b5 / build-01 :arg0 (h4 / he) :time (b6 / before :op1 (n3 / now) :quant (b7 / between :op1 (t5 / temporal-quantity :quant (N5 / N-A) :unit (y5 / year)) :op2 (t6 / temporal-quantity :quant (N6 / N-A) :unit (y6 / year)))) :arg1-of (b8 / build-01 :arg0 (h5 / he) :time (d / date-entity :year (N7 / N-A))) :arg1-of (b9 / build-01 :arg0 (h6 / he) :time (d2 / date-entity :year (N8 / N-A)))))))
(c / consist-01 :arg1 (s / system :mod (t / this)) :arg2 (a / and :op1 (b / big :quant 2 :mod (b2 / big)) :op2 (v / veins :quant 2 :mod (s2 / small) :arg1-of (c2 / call-01 :arg0 (w / we) :arg2 (s3 / saphena)))))
(p / pay-01 :arg0 (w / we) :arg1 (m / monetary-quantity :arg2-of (p2 / price-01) :mod (h / heavy)) :time (n / night :mod (t / that)))
(a / and :op1 (s / set-01 :arg0 (w / we) :arg1 (r / record :mod (o / olympic)) :arg2 (f / final)) :op2 (b / beat-01 :arg0 (w2 / we) :arg1 (c / champions :mod (w3 / world))))
(s / say-01 :arg0 (p / person :name (n / name :op1 "N-A")) :arg1 (a / and :op1 (e / express-01 :arg0 (p2 / person) :arg1 (t / thing :arg1-of (w / worry-02 :arg0 (w2 / we)))) :op2 (s2 / suggest-01 :arg0 (p3 / person) :arg1 (a2 / and :op1 (t2 / thing :arg1-of (w3 / worry-01 :arg0 (b / bill :consist-of (b2 / bag)))) :op2 (t3 / thing :arg2-of (r / remove-01 :arg1 (a3 / and :op1 (b3 / bill :consist-of (b4 / bag)) :op2 (d / discuss-01 :arg1 (a4 / and :op1 (b5 / bill :consist-of (b6 / bag)) :op2 (d2 / discuss-01 :arg1-of (d3 / detail-01))))))))) :time (a5 / and :op1 (c / come-01 :arg1 (f / fund-01 :arg1 (f2 / fund) :mod (t4 / this)) :arg4 (a6 / and :op1 (p4 / plan-01) :op2 (c2 / committee :mod (b7 / budget) :arg0-of (h / have-org-role-91 :arg1 (d4 / delegation :mod (c3 / chp))))))) :op2 (s3 / suggest-01 :arg0 (p5 / person) :arg1 (a7 / and :op1 (t5 / thing :arg1-of (w4 / worry-01 :arg0 (b8 / bill :consist-of (b9 / bag)))) :op2 (d5 / discuss-01 :arg1 (i / it) :manner (s4 / separate-02))))))
(s / show-01 :arg1 (f / finance-01 :arg1 (p / project :mod (b / big))) :arg2 (r / reason :arg0-of (c / cause-01 :arg1 (a / aim-01 :arg1 (f2 / fund-01)))))
(l / lose-02 :arg0 (a / and :op1 (p / person :quant 2 :arg0-of (a2 / attack-01 :location (c / car :poss (p2 / person)))) :op2 (l2 / life :poss (p3 / person))) :arg1 (l3 / life :poss (p4 / person)) :location (d / district :mod (k / kahta)))
(o / obligate-01 :arg1 (c / country :name (n / name :op1 "N-A")) :arg2 (a / and :op1 (s / spirit :mod (o2 / olympic)) :op2 (e / expand-01 :arg1 (h / heathrow))))
(c / case :quant 2 :arg1-of (r / resemble-01) :mod (o / other) :time (b / before :op1 (n / now) :duration (t / temporal-quantity :quant (N / N-A) :unit (y / year))) :arg0-of (s / suggest-01 :arg1 (h / hold-02 :polarity - :arg1 (r2 / responsible-01 :arg0 (p / person)))))
(b / burn-01 :arg1 (a / and :op1 (e / evaporated :poss (i / it)) :op2 (v / vapor :arg1 (w / water :poss (i2 / it)))) :manner (l / light :mod (u / ultraviolet)))
(w / want-01 :polarity - :arg0 (h / he) :arg1 (b / be-02 :arg1 (h2 / he) :mod (k / kind :mod (a / any))) :time (e / ever))
(i / interview-01 :arg1 (p / person :arg0-of (m / mr)) :time (t / tour-01 :arg0 (p2 / person) :arg1 (a / and :op1 (c / customer) :op2 (s / staff)) :location (i2 / inverness-shire)))
(t / think-01 :arg1 (p / possible-01 :arg1 (b / become-01 :arg1 (p2 / person :arg0-of (h / have-org-role-91 :arg2 (p3 / president :mod (v / vice)))) :arg2 (p4 / person :arg0-of (h2 / have-org-role-91 :arg2 (p5 / president))) :time (a / after :op1 (m / mr :arg0 (p6 / person) :arg1 (t2 / term :ord (o / ordinal-entity :value 2)) :arg1-of (c / cause-01 :arg0 (t3 / term :ord (o2 / ordinal-entity :value 3) :mod (t4 / term :ord (o3 / ordinal-entity :value 3)))))))) :time (o4 / once))
(a / and :op1 (g / get-05 :polarity - :arg1 (a2 / and :op1 (t / teenager) :op2 (c / child)) :arg2 (o / outside) :purpose (p / play-11 :arg0 (a3 / and) :arg2 (m / more :mod (a4 / any)))) :op2 (p2 / preferring :arg0 (a5 / and) :time (b / before :op1 (n / now) :duration (t2 / temporal-quantity :quant (N / N-A) :unit (d / decade)))))
(b / bad-02 :mod (a / all))
(t / time :mod (e / exciting :mod (s / such)) :domain (t2 / this))
(o / or :op1 (d / dubious :arg1 (p / person :arg0-of (v / vote-01)) :arg2 (v2 / vote-01 :quant 300)) :op2 (r / result-01 :arg1 (p2 / person :arg0-of (v3 / vote-01)) :arg2 (p3 / person :mod (e / else)) :time (p4 / pose :arg1 (s / someone :mod (e2 / else)))))
(s / say-01 :arg0 (h / he) :arg1 (a / and :op1 (r / rahman :arg0 (c / court :mod (e / elect-01)) :arg1 (a2 / and :op1 (p / person :arg0-of (h2 / have-org-role-91 :arg2 (h3 / head-of-state))) :op2 (a3 / agent :poss (p2 / person))) :arg2 (l / litany :consist-of (a4 / and :op1 (c2 / corrupt-01 :arg1-of (c3 / corrupt-01)) :op2 (p3 / practice-01 :mod (l2 / law :polarity -))))) :op2 (s2 / say-01 :arg0 (h4 / he))))
(m / multi-sentence :snt1 (n / notice-01 :arg0 (g / gunman) :arg1 (a / and :op1 (g2 / get-05 :arg1 (b / body :poss (y / you)) :arg2 (o / out-06 :arg1 (b2 / body) :arg2 (l / line :name (n2 / name :op1 (f / fire))))) :op2 (g3 / grab-01 :arg0 (g4 / gunman) :arg1 (g5 / gun)) :op3 (g6 / grab-01 :arg0 (g7 / gunman) :arg1 (g8 / gun)))) :snt2 (c / cause-01 :arg1 (p / possible-01 :arg1 (' / ' :arg0 (v / villain :mod (v2 / villain)) :arg1 (f2 / fire :mod (t / total))))))
(t / test-01 :arg0 (h / handrails :arg1-of (p / public-02) :location (s / station :mod (t2 / train))) :arg1 (t3 / task) :mod (d / definite))
(t / think-01 :arg0 (i / i) :arg1 (s / show-01 :arg0 (f / film) :arg1 (s2 / sense-01 :arg0 (w / we) :arg1 (h / humour) :mod (g / great))) :mod (a / also))
(n / notice-01 :arg0 (a / aspect :name (n2 / name :op1 (t / trophy)) :mod (t2 / trophy) :mod (t3 / trophy)) :arg1 (a2 / and :op1 (p / person :arg0-of (w / work-01 :arg1-of (s / sound-01 :arg2 (d / data :mod (- / -lrb- :mod (u / universe))))) :li 42) :op2 (n3 / notice-01 :arg0 (p2 / person :quant 3 :arg0-of (h / have-org-role-91 :arg2 (-2 / -rrb-))) :arg1 (p3 / person :quant 3 :arg0-of (h2 / have-org-role-91 :arg2 (-3 / -rrb-))))))
(c / court :mod (c2 / country :name (n / name :op1 "N-A")))
(m / mean-01 :arg1 (t / that) :arg2 (p / pressure-01 :arg0 (t2 / that) :quant (m2 / much :degree (t3 / too))))
(e / explain-01 :arg0 (p / person :name (n / name :op1 "Donald" :op2 "Trump")) :arg1-of (c / claim-01 :arg0 (p2 / person)))
(c / contrast-01 :arg1 (g / get-01 :arg0 (p / person :name (n / name :op1 (m / mr.) :op2 (r / rosenthal))) :arg1 (o / order :arg1-of (r2 / regular-03) :poss (p2 / person)) :mod (s / still) :time (d / day :mod (t / this))) :arg2 (s2 / switch-01 :arg0 (p3 / person) :arg1 (t2 / thing) :arg2 (a / and :op1 (b / bacon) :op2 (e / egg) :op3 (c2 / cheese) :location (e2 / everything :arg1-of (b2 / bagel))) :frequency (s3 / sometimes)))
(a / and :op1 (w / want-01 :arg0 (s / spot :arg1-of (l / local-02)) :arg1 (b / bottle)) :op2 (s2 / sell-01 :arg0 (s3 / spot) :arg1 (c / coffee)))
(s / say-01 :arg0 (p / person :name (n / name :op1 "mr." :op2 "coe")) :arg1 (c / cause-01 :arg0 (e / explain-01 :arg0 (a / and :op1 (h / he) :op2 (p2 / person :arg0-of (h2 / have-rel-role-91 :arg1 (p3 / person) :arg2 (w / wife)))) :arg1 (c2 / cause-01 :arg0 (a2 / amr-unknown) :arg1 (w2 / want-01 :arg0 (a3 / and :op1 (h3 / he) :op2 (p4 / person :arg0-of (h4 / have-rel-role-91 :arg1 (h5 / he) :arg2 (w3 / wife)))) :arg1 (w4 / write-01 :arg0 (a4 / and) :arg1 (a5 / and))))) :arg1 (t / time :domain (t2 / this) :time (b / become-01 :arg1 (f / food) :arg2 (c3 / center)))))
(s / say-01 :arg0 (c / couple) :arg1 (g / gain-02 :arg0 (c2 / couple) :arg1 (u / understand-01 :arg0 (c3 / couple) :arg1 (h / habit :mod (e / eat-01) :poss (p / person :arg0-of (h2 / have-rel-role-91 :arg1 (p2 / person :arg0-of (h3 / have-rel-role-91 :arg2 (m / mother))) :arg2 (m2 / mother))) :arg2 (p3 / person :arg0-of (h4 / have-rel-role-91 :arg1 (c4 / couple) :arg2 (m3 / mother))) :mod (g2 / great :degree (m4 / more)) :arg1-of (m5 / mean-01 :arg2 (l / let-01 :arg0 (p4 / person) :arg1 (l2 / let-down-04 :arg0 (p5 / person) :arg1 (f / food) :mod (t / total))))))) :medium (w / write-01 :arg0 (c5 / couple) :arg1 (b / book)))
(a / and :op1 (l / live-01 :arg0 (p / person :arg0-of (l2 / live-01 :location (c / chappaqua :mod (c2 / chappaqua))) :arg0-of (e / effective-04 :arg1 (r / rate-entity-91 :arg1 (p2 / percentage-entity :value (N / N-A)) :arg2 (t / temporal-quantity :quant (N2 / N-A) :unit (y / year)))) :arg2 (r2 / rate-entity-91 :arg1 (p3 / percentage-entity :value (N3 / N-A)) :arg2 (t2 / temporal-quantity :quant (N4 / N-A) :unit (y2 / year))))) :op2 (p4 / pay-01 :arg0 (p5 / person) :arg3 (r3 / rate :mod (t3 / tax) :arg1-of (c3 / combine-01) :mod (p6 / percentage-entity :value (N5 / N-A)))))
(c / contrast-01 :arg2 (a / and :op1 (d / detain-01 :arg1 (p / person :arg1-of (d2 / detain-01 :arg2 (c2 / court))) :arg2 (c3 / court)) :op2 (b / bring-01 :arg0 (p2 / person) :arg1 (c4 / court) :arg2 (c5 / court) :time (a2 / after :op1 (a3 / attempt-01 :arg0 (c6 / coup :mod (c7 / coup :mod (c8 / country-region))) :arg1 (a4 / and :op1 (a5 / arrest-01 :arg1 (p3 / person :quant 9 :arg2-of (i / include-91 :arg1 (c9 / chamber :part-of (a6 / and :op1 (c10 / chairman :mod (c11 / commerce)) :op2 (c12 / chairman :arg2-of (h / have-org-role-91 :arg1 (i2 / industry)))))))) :op2 (r / release-01 :arg1 (p4 / person :quant 7 :arg1-of (i3 / include-91 :arg2 (p5 / person))))))))))
(m / multi-sentence :snt1 (i / invest-01 :quant 5500000000 :arg2 (t / tl)) :snt2 (i2 / invest-01 :arg0 (p / person :quant (t2 / temporal-quantity :quant (N / N-A) :unit (y / year))) :arg2 (s / sabanc)))
(m / multi-sentence :snt1 (k / kabata :mode (i / interrogative)) :snt2 (c / close-01 :arg1 (t / traffic :mod (f / ferry)) :arg4 (t2 / traffic :mod (s / sea)) :duration (b / between :op1 (t3 / temporal-quantity :quant (N / N-A) :unit (y / year)) :op2 (t4 / temporal-quantity :quant (N2 / N-A) :unit (y2 / year))) :arg1-of (c2 / cause-01 :arg0 (w / work-09 :arg1 (c3 / construct-01 :arg1 (a / and :op1 (h / hub :name (n / name :op1 (t5 / transfer))) :op2 (' / '' :arg1-of (c4 / conduct-01 :arg0 (i2 / istanbul :name (n2 / name :op1 (m2 / metropolitan) :op2 (m3 / metropolitan) :op3 (d / docks)))))))))))
(w / wonder-01 :arg1 (p / person :domain (h / he)))
(d / deliver-01 :arg1 (m / meat :name (n / name :op1 (e / eid))) :arg2 (n2 / needy))
(s / say-01 :arg0 (h / he) :arg1 (t / tell-01 :arg0 (i / i) :arg1 (i2 / important :domain (h2 / health :poss (c / country :poss (w / we)))) :arg2 (h3 / he)) :arg2 (h4 / he))
(c / cancel-01 :arg1 (t / tsunami) :arg1-of (c2 / cause-01 :arg0 (c3 / cancel-01 :arg1 (a / and :op1 (l / life) :op2 (p / property) :mod (a2 / any)))) :time (a3 / after :op1 (e / earthquake) :quant (t2 / time :mod (s / short))))
(c / come-01 :arg1 (p / person :arg0-of (h / have-rel-role-91 :arg1 (p2 / person) :arg2 (b / boyfriend))) :purpose (m / meet-03 :arg0 (p3 / person) :arg1 (p4 / person :arg0-of (h2 / have-rel-role-91 :arg1 (p5 / person :arg0-of (h3 / have-rel-role-91 :arg1 (p6 / person :arg0-of (h4 / have-rel-role-91 :arg1 (p7 / person :arg0-of (h5 / have-rel-role-91 :arg1 (p8 / person :arg0-of (h6 / have-rel-role-91 :arg1 (p9 / person :arg0-of (h7 / have-rel-role-91 :arg1 (p10 / person :arg0-of (h8 / have-rel-role-91 :arg1 (p11 / person :arg0-of (h9 / have-rel-role-91 :arg1 (p12 / person :arg0-of (h10 / have-rel-role-91 :arg1 (p13 / person :arg0-of (h11 / have-rel-role-91 :arg1 (p14 / person :arg0-of (h12 / have-rel-role-91 :arg1 (p15 / person :arg0-of (h13 / have-rel-role-91 :arg1 (p16 / person) :arg2 (b2 / boyfriend))) :arg2 (b3 / boyfriend))) :arg2 (b4 / boyfriend))) :arg2 (k / kemal)))))))))))))))))))))
(s / say-01 :arg0 (i / information :arg1-of (r / receive-01 :arg0 (i2 / information :arg1-of (r2 / receive-01)))) :arg1 (s2 / start-01 :arg0 (c / coup :name (n / name :op1 (p / plotters))) :arg1 (f / fire-01) :manner (t / target-01 :arg0 (c2 / coup) :arg1 (p2 / person :arg0-of (s3 / speak-01)) :arg2 (a / around :op1 (p3 / product-of :op1 50 :op2 (d / distance-quantity :quant (N / N-A) :unit (m / meter)))) :arg1-of (d2 / direct-02)) :time (a2 / after :op1 (s4 / start-01 :arg1 (r3 / read-01 :arg1 (p4 / prayers))))))
(c / cause-01 :arg0 (c2 / continue-01 :arg1 (p / person :mod (y / young))) :arg1 (c3 / continue-01 :arg1 (p2 / person :mod (y2 / young))))
(a / add-01 :arg0 (h / he) :arg1 (a2 / act-02 :arg0 (i / it) :arg1-of (i2 / internal-02)))
(f / follow-01 :arg1 (s / signal-07 :arg1 (c / change-01 :arg1 (s2 / society)) :mod (k / kind :mod (a / amr-unknown))))
(a / and :op1 (r / recommend-01 :arg1 (a2 / and :op1 (c / coexist-01 :arg1 (a3 / animal)) :op2 (f / fresh-04 :arg1 (a4 / animal)))) :op2 (r2 / recommend-01 :arg1 (l / lose-02 :arg0 (a5 / animal) :arg1 (h / hair :part-of (b / baby)))) :prep-in (t / term :mod (a6 / appear-01 :mod (s / sub))))
(g / go-02 :arg0 (m / medal :name (n / name :op1 (b / bronze) :op2 (m2 / medal) :op3 (m3 / medal))) :arg4 (s / south :part-of (c / country :name (n2 / name :op1 "N-A"))) :arg4 (s2 / south :part-of (c2 / country :name (n3 / name :op1 "N-A"))) :time (a / after :op1 (d / defeating :arg0 (c3 / country :quant 54-14) :arg1 (b2 / bronze))))
(r / report)
(c / continue-01 :arg1 (p / procedure :topic (s / search-01)) :beneficiary (a / and :op1 (p2 / person :quant 22 :arg0-of (h / have-org-role-91 :arg3 (j / judge-01))) :op2 (p3 / person :arg0-of (p4 / prosecute-01) :arg1-of (f / find-01 :polarity - :location (a2 / address :poss (a3 / and)) :arg1-of (p5 / possible-01)))))
(a / arrest-01 :arg1 (a2 / and :op1 (p / person :arg0-of (h / have-org-role-91 :arg2 (c / colonel)) :arg0-of (h2 / have-org-role-91 :arg2 (c2 / colonel))) :op2 (p2 / person :arg0-of (h3 / have-org-role-91 :arg2 (c3 / colonel))) :op3 (p3 / person :arg0-of (h4 / have-org-role-91 :arg2 (c4 / colonel))) :op4 (p4 / person :arg0-of (w / work-01 :location (c5 / center :poss (d / defend-01 :arg0 (p5 / person) :arg1 (t / terrorism)))) :arg0-of (w2 / work-01 :location (c6 / center :poss (d2 / defend-01 :arg0 (p6 / person) :arg1 (t2 / terrorism)))) :arg0-of (w3 / work-01 :location (c7 / center :poss (d3 / defend-01 :arg0 (p7 / person) :arg1 (t3 / terrorism)))) :arg0-of (w4 / work-01 :location (c8 / center :poss (d4 / defend-01 :arg0 (p8 / person) :arg1 (t4 / terrorism)))))))
(h / have-03 :arg0 (t / topic :quant (m / many)) :arg1 (t2 / thing :polarity - :arg2-of (m2 / mean-01)) :mod (b / basic) :condition (b2 / bring-01 :polarity - :arg0 (t3 / topic) :arg1 (r / result :mod (a / any))))
(a / and :op1 (c / condemn-01 :arg0 (r / republic :mod (r2 / religious-group :name (n / name :op1 "N-A"))) :arg1 (a2 / attempt-01 :arg0 (c2 / coup) :arg1 (c3 / coup)) :time (h / hour :ord (o / ordinal-entity :value 1) :part-of (a3 / attempt-01 :arg0 (c4 / coup)))) :op2 (s / stand-01 :arg1 (r3 / republic) :arg2 (a4 / and :op1 (p / person :mod (t / turkish)) :op2 (g / government-organization :arg0-of (g2 / govern-01))) :time (a5 / always)))
(g / go-02 :arg0 (i / i) :arg4 (c / car) :arg0-of (h / hit-01 :arg1 (a / and :op1 (n / nephew :poss (i2 / i)) :op2 (g2 / grandson :poss (i3 / i)))) :time (a2 / after :op1 (t / that)))
(s / say-01 :arg0 (g / guy) :arg1 (p / put-01 :polarity - :arg0 (g2 / guy) :arg1 (t / they) :arg2 (b / boot)))
(d / develop-02 :arg1 (r / rate-entity-91 :arg1 700 :arg2 (t / temporal-quantity :quant (N / N-A) :unit (y / year))) :arg3 (p / platform :arg1-of (s / succeed-01 :degree (v / very))))
(c / create-01 :arg0 (r / retire-01 :arg0 (p / person :arg0-of (r2 / retire-01))) :arg1 (a / and :op1 (v / void :arg1 (p2 / person)) :op2 (t / try-01 :arg0 (p3 / person :mod (m / matt)) :arg1 (f / fill :arg0 (p4 / person)))) :mod (a2 / also))
(p / possible-01 :arg1 (b / be-located-at-91 :arg1 (j / job :quant 2000) :arg2 (r / risk-01 :arg2 (p2 / plant :mod (p3 / portland) :poss (c / country :name (n / name :op1 "N-A"))))))
(a / and :op1 (c / come-01 :arg1 (s / sue-02) :time (a2 / after :op1 (e / expel-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (r / republican) :arg2 (p2 / president))) :arg1 (b / broadcast-program :name (n / name :op1 "N-A"))) :time (a3 / after :op1 (e2 / expel-01 :arg0 (p3 / person :arg0-of (h2 / have-org-role-91 :arg1 (r2 / republican) :arg2 (p4 / president))) :arg1 (b2 / broadcast-program :name (n2 / name :op1 "N-A")) :location (n3 / north)))) :time (a4 / after :op1 (e3 / expel-01 :arg0 (p5 / person) :arg1 (c2 / crowd :location (n4 / north)))) :time (a5 / after :op1 (e4 / expel-01 :arg0 (p6 / person) :arg1 (c3 / crowd :location (n5 / north)))) :mod (j / just)) :op2 (p7 / possible-01 :arg1 (a6 / act-02 :arg0 (p8 / person :arg0-of (h3 / have-org-role-91 :arg3 (j2 / judge-01)) :arg0-of (h4 / have-org-role-91 :arg3 (j3 / judge-01))) :condition (a7 / and :op1 (e5 / elect-01 :arg1 (p9 / person :arg0-of (o / own-01 :arg1 (g / gun)))) :op2 (g2 / get-01 :arg0 (p10 / person) :arg1 (p11 / pick-01 :arg0 (p12 / person) :arg1 (p13 / person :arg0-of (h5 / have-org-role-91 :arg3 (j4 / judge-01)))))))))
(o / operation :mod (d / drug) :location (k / kangal))
(i / issue-01 :arg0 (c / court) :arg1 (w / warrant :purpose (a / arrest-01 :arg1 (a2 / and :op1 (a3 / arrest-01 :arg1 (p / person :arg0-of (f / flee-05))) :op2 (p2 / person :arg0-of (h / have-org-role-91 :arg2 (g / gülen))) :op3 (p3 / person :arg0-of (h2 / have-org-role-91 :arg2 (h3 / head-of-state))) :op4 (p4 / person :arg0-of (h4 / have-org-role-91 :arg2 (h5 / head-of-state))) :op5 (p5 / person :arg0-of (h6 / have-org-role-91 :arg2 (h7 / head-of-state))) :op6 (p6 / person :arg0-of (h8 / have-org-role-91 :arg2 (h9 / head-of-state))) :op7 (p7 / person :arg0-of (h10 / have-org-role-91 :arg2 (h11 / head-of-state)))))))
(a / and :op1 (l / leave-15 :arg0 (h / he) :arg1 (a2 / and :op1 (p / person :arg0-of (g / guard-01)) :op2 (c / car))) :op2 (r / return-01 :arg1 (h2 / he) :arg4 (c2 / country :poss (h3 / he)) :manner (h4 / happy)))
(c / cause-01 :arg0 (m / mention-01 :arg0 (h / he) :arg1 (t / thing :arg0-of (c2 / cause-01 :arg1 (c3 / crisis))) :ord (o / ordinal-entity :value 1)) :arg1 (t2 / thing :arg0-of (c4 / cause-01 :arg1 (c5 / crisis)) :domain (t3 / thing :arg0-of (c6 / cause-01 :arg1 (c7 / crisis))) :arg1-of (m2 / mention-01 :arg0 (h2 / he) :medium (t4 / thing :arg1-of (c8 / comment-01 :arg0 (h3 / he) :purpose (o2 / open-01 :arg0 (h4 / he) :arg1 (p / plane :mod (c9 / country :name (n / name :op1 "N-A")) :arg0-of (f / fight-01) :location (b / border-01 :arg1 (c10 / country :name (n2 / name :op1 "N-A")) :arg2 (c11 / country)))))))))
(c / consensus :arg1-of (c2 / clear-06) :prep-on (p / possible-01 :arg1 (s / seek-01 :arg0 (t / they) :arg1 (g / ground :mod (c3 / common) :location (o / on :op1 (s2 / syria))))))
FAILED_TO_PARSE#Number of opening and closing brackets doesn't match.
(b / become-01 :arg1 (p / person :arg0-of (h / have-org-role-91 :arg2 (m / minister :mod (p2 / prime)))) :arg2 (p3 / person :arg0-of (h2 / have-org-role-91 :arg2 (m2 / minister :mod (p4 / prime)))) :time (b2 / before :op1 (r / return-01 :arg1 (p5 / person) :arg4 (p6 / presidency) :time (l / late :op1 (t / temporal-quantity :quant (N / N-A) :unit (y / year) :mod (j / just)) :degree (m3 / more)))))
(m / mystery :prep-as (f / fish))
(r / remembers :arg1 (m / manipulate-01 :arg1 (f / future :mod (e / emotional)) :mod (e2 / emotional)))
(s / say-01 :arg0 (p / person :name (n / name :op1 "N-A")) :arg1 (a / and :op1 (h / have-03 :arg0 (a2 / and :op1 (h2 / he) :op2 (p2 / person :arg0-of (h3 / have-org-role-91 :arg1 (f / family :arg1-of (h4 / have-org-role-91 :arg0 (h5 / he) :arg2 (m / member))) :arg2 (m2 / member)))) :arg1 (a3 / and :op1 (h6 / he) :op2 (p3 / person :arg0-of (h7 / have-org-role-91 :arg1 (f2 / family :arg1-of (h8 / have-org-role-91 :arg0 (h9 / he) :arg2 (m3 / member))) :arg2 (m4 / member))) :quant (a4 / all))) :op2 (p4 / possible-01 :arg1 (s2 / swim-01 :arg0 (a5 / and)) :mod (o / only))))
(s / say-01 :arg0 (p / person :name (n / name :op1 "N-A")) :arg1 (a / and :op1 (r / rescued :arg0 (p2 / person :arg0-of (w / work-01) :mod (e / emergency)) :arg1 (t / truck :quant 3 :mod (a2 / all))) :op2 (t2 / take-01 :arg0 (p3 / person) :arg1 (p4 / person) :arg3 (s2 / station :name (n2 / name :op1 (f / fire))) :location (g / gloster :location-of (s3 / shelter :arg1 (p5 / person))))))
(c / contrast-01 :arg1 (e / evacuated :arg1 (p / person :arg0-of (r / reside-01)) :arg2 (p2 / person :quant 2)) :arg2 (f / flooding :time (n / now)))
(p / possible-01 :arg1 (c / call-03 :arg0 (t / thing :arg1-of (r / report-01)) :arg1 (c2 / check-01 :arg1 (r2 / register-02) :arg1-of (t2 / tough-02 :degree (m / more))) :purpose (p2 / prevent-01 :arg1 (r3 / register-02 :arg1 (r4 / register-02 :arg1 (e / elect-01)) :arg2 (a / and :op1 (i / immigrate-01) :op2 (b / benefit-01)))) :mod (a2 / also)))
(u / use-01 :arg0 (t / they) :arg1 (i / ink :mod (i2 / indelible)) :arg2 (f / finger :part-of (p / person)) :time (a / assume-01 :arg0 (t2 / they) :arg1 (p2 / person :arg0-of (h / have-rel-role-91 :arg1 (t3 / they) :arg2 (m / mum))) :purpose (p3 / prevent-01 :arg0 (t4 / they) :arg1 (p4 / person :arg0-of (h2 / have-rel-role-91 :arg1 (t5 / they) :arg2 (m2 / mum))))))
(s / say-01 :arg0 (h / he) :arg1 (a / and :op1 (r / rahman :arg0 (c / court :mod (e / elect-01)) :arg1 (a2 / and :op1 (p / person :arg0-of (h2 / have-org-role-91 :arg2 (h3 / head-of-state))) :op2 (a3 / agent :poss (p2 / person))) :arg2 (l / litany :consist-of (a4 / and :op1 (c2 / corrupt-01 :arg1-of (c3 / corrupt-01)) :op2 (p3 / practice-01 :mod (l2 / law :polarity -))))) :op2 (s2 / say-01 :arg0 (h4 / he))))
(c / cause-01 :arg0 (s / see-01 :arg0 (i / i) :arg1 (r / resemblance :mod (h / huge)) :arg1-of (p / personal-02)) :arg1 (s2 / see-01 :arg0 (i2 / i) :arg1 (r2 / resemblance :mod (h2 / huge)) :arg1-of (p2 / personal-02) :arg2-of (e / except-01 :arg1 (a / and :op1 (h3 / hair :arg1-of (f / facial)) :op2 (h4 / hair :arg1-of (f2 / facial))))))
(p / person :quant 1 :mod (o / only :polarity -) :arg0-of (u / use-01 :arg1 (p2 / person :mod (c / country :name (n / name :op1 "N-A"))) :mod (a / also)))
(a / amr-unknown :manner-of (d / defend-01))
(h / hail-02 :arg1 (p / person :arg0-of (s / say-01 :arg1 (m / make-01 :arg1 (l / life :poss (p2 / person))))) :arg2 (h2 / hell :arg0-of (l2 / live-01)))
(a / alter :arg0 (i / it) :arg1 (t / tooth :part-of (y / you)) :degree (b / bit))
(i / investigate-01 :arg0 (d / department :part-of (d2 / department :part-of (p / person :arg0-of (h / have-org-role-91 :arg2 (g / general :mod (g2 / general))))) :arg0-of (h2 / have-org-role-91 :arg2 (g3 / general))) :mod (a / additional) :arg1-of (g4 / go-on-15))
(k / know-01 :arg0 (s / she) :arg1 (a / and :op1 (4 / 4-0 :arg1 (p / person :mod (c / country :name (n / name :op1 "Britain"))) :location (t / tournament :name (n2 / name :op1 (o / olympic)))) :op2 (t2 / tied :arg1 (p2 / person) :arg2 (p3 / place :ord (o2 / ordinal-entity :value 1) :location (g / group :poss (p4 / person) :prep-with (p5 / person :arg0-of (h / have-org-role-91 :arg1 (g2 / group :poss (p6 / person)) :arg3 (l / lead-02 :arg0 (p7 / person) :arg1 (c2 / country))))) :arg1-of (r / remain-01 :arg3 (n3 / name :op1 (u / unbeaten) :op2 (2 / 2-0) :op3 (22 / 2-0) :op4 (u2 / unbeaten)))))) :location (h2 / here))
(b / bam :arg1 (t / team :mod (t2 / that)))
(h / have-03 :arg0 (w / we) :arg1 (r / rate :mod (w2 / work-01) :arg1-of (h2 / have-03 :arg0 (w3 / we) :time (n / now))) :degree (t / total))
(t / turnaround :arg0 (w / we) :arg1-of (c / complete-02))
(r / reused :arg0 (i / it) :arg1 (l / lights) :arg2 (v / verb :mod (o / old)) :mod (e / even))
(s / say-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (m / military :name (n / name :op1 "N-A")))) :arg1 (n2 / notice-01 :arg0 (p2 / person) :arg1 (s2 / stream :arg1 (r / regulars :mod (o / old) :mod (o2 / old)))) :duration (m2 / multiple :op1 (t / temporal-quantity :quant (N / N-A) :unit (m3 / month))))
(c / contrast-01 :arg1 (b / back :domain (s / she) :prep-on (c2 / coffee) :time (n / now)) :arg2 (g / go-06 :arg0 (s2 / she) :arg1 (c3 / coffee) :arg2 (a / and :op1 (d / drink-01 :arg0 (s3 / she)) :op2 (d2 / drink-01 :arg0 (s4 / she) :mod (n2 / new) :mod (a2 / another)))))
(a / and :op1 (g / go-02 :arg0 (h / he) :arg4 (b / before :op1 (w / work-01))) :op2 (o / order-02 :arg0 (h2 / he) :arg1 (t / thing :arg1-of (s / same-01)) :manner (f / fail-01 :polarity -)))
(s / say-01 :arg0 (h / he) :arg1 (a / and :op1 (c / come-01 :arg1 (i / i) :time (b / before :op1 (n / now) :quant (t / temporal-quantity :quant (N / N-A) :unit (d / day)))) :op2 (a2 / and :op1 (c2 / come-01 :arg1 (i2 / i)) :op2 (m / make-02 :arg0 (t2 / they) :arg1 (e / everything :arg1-of (b2 / bagel :arg2 (b3 / butter)))))) :li 7)
(m / multi-sentence :snt2 (l / lanzmann))
(a / agree-01 :arg0 (w / we :arg1-of (a2 / answer-01 :arg0 (s / survey-01))) :arg1 (t / thing :arg2-of (p / price-01 :arg1 (t2 / thing :arg2-of (p2 / price-01 :arg1 (s2 / survey-01))))) :arg2 (t3 / thing :arg2-of (p3 / price-01 :arg1 (s3 / survey-01))))
(a / announce-01 :arg1 (a2 / and :op1 (g / give-01 :arg1 (j / jersey :mod (s / season :mod (n / new)) :arg1-of (v / value-01 :arg2 150)) :arg2 (p / person :arg0-of (b / buy-01 :arg1 (t / ticket :arg1-of (c / combine-01))))) :op2 (o / offer-01 :arg1 (d / discount) :arg3 (p2 / percentage-entity :value (N / N-A)) :beneficiary (p3 / person :arg0-of (s2 / study-01) :arg0-of (b2 / buy-01 :arg1 (t2 / ticket :arg1-of (c2 / combine-01)) :accompanier (p4 / person :arg0-of (b3 / buy-01 :arg1 (t3 / ticket))))))))
(b / bring-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg2 (p2 / person :arg1-of (e / expert-01)))) :arg1 (p3 / person :arg1-of (e2 / expert-01)) :arg2 (t / television :name (n / name :op1 (s / samanyolu))) :time (p4 / possible-01 :polarity - :arg1 (s2 / succeed-01 :arg0 (c / coup :mod (c2 / coup)))))
(d / detain-01 :arg1 (p / person :arg1-of (d2 / detain-01)) :arg2 (s / struggle-01 :arg1 (d3 / division :mod (o / offend-03 :mod (f / finance)))))
(c / contrast-01 :arg2 (t / thing :arg0-of (s / shield-01 :arg2 (q / question-01)) :quant (m / many)))
(p / possible-01 :polarity - :arg1 (p2 / perceive-01 :arg0 (w / we) :arg1 (i / it)))
(p / possible-01 :arg1 (c / canned :arg0 (p2 / person :arg0-of (h / have-rel-role-91 :arg2 (f / father))) :arg1 (p3 / person :arg0-of (h2 / have-rel-role-91 :arg1 (p4 / person :arg0-of (h3 / have-rel-role-91 :arg2 (f2 / father))) :arg2 (f3 / father))) :arg2 (p5 / person :arg0-of (h4 / have-rel-role-91 :arg1 (p6 / person) :arg2 (f4 / father))) :arg1-of (c2 / cause-01 :arg0 (s / sinop :arg0 (p7 / person :arg0-of (h5 / have-org-role-91 :arg1 (p8 / political-party :name (n / name :op1 "N-A")) :arg2 (d / deputy))) :arg1 (p9 / person :arg0-of (h6 / have-org-role-91 :arg2 (d2 / deputy)))))) :time (a / after :op1 (t / that)))
(a / arrest-01 :arg1 (p / person :quant 30 :arg1-of (d / displace-01)) :arg1-of (i / include-91 :arg2 (p2 / person :quant 14 :arg1-of (i2 / include-91 :arg2 (p3 / person :quant 14 :arg0-of (h / have-org-role-91 :arg2 (p4 / professor)) :arg1-of (i3 / include-91 :arg2 (p5 / person :quant 14 :arg0-of (h2 / have-org-role-91 :arg2 (p6 / professor))) :source (a2 / and :op1 (u / university :arg0-of (h3 / have-org-role-91 :arg2 (h4 / head-of-state))) :op2 (p7 / person :quant 14 :arg0-of (h5 / have-org-role-91 :arg2 (p8 / professor))) :op3 (p9 / person :quant 19 :arg0-of (h6 / have-org-role-91 :arg2 (h7 / head-of-state))) :op4 (p10 / person :arg0-of (h8 / have-org-role-91 :arg2 (h9 / head-of-state))) :op5 (p11 / person :arg0-of (h10 / have-org-role-91 :arg2 (h11 / head-of-state))) :op6 (p12 / person :arg0-of (h12 / have-org-role-91 :arg2 (h13 / head-of-state))) :op7 (p13 / person :arg0-of (h14 / have-org-role-91 :arg2 (h15 / head-of-state)) :arg0-of (h16 / have-org-role-91 :arg2 (h17 / head-of-state))) :op7 (p14 / person :arg0-of (h18 / have-org-role-91 :arg2 (h19 / head-of-state)) :arg0-of (h20 / have-org-role-91 :arg2 (h21 / head-of-state))))))))) :mod (a3 / also))
(m / multi-sentence :snt1 (i / include-91 :arg1 (a / and :op1 (p / person :arg0-of (g / guard-01 :arg1 (p2 / person :arg0-of (g2 / guard-01 :arg1 (a2 / and :op1 (f / founder :poss (p3 / person :arg0-of (h / have-org-role-91 :arg2 (c / chairman :mod (v / vice))))) :op2 (p4 / person :arg0-of (r / retire-01) :arg0-of (h2 / have-org-role-91 :arg2 (c2 / chairman))) :op3 (p5 / person :arg0-of (r2 / retire-01) :arg0-of (h3 / have-org-role-91 :arg2 (c3 / chairman :mod (v2 / vice)))) :op4 (p6 / person :arg0-of (r3 / retire-01) :arg0-of (h4 / have-org-role-91 :arg2 (c4 / chief :name (n / name :op1 (t / tahsin))))) :op5 (p7 / person :arg0-of (r4 / retire-01) :arg0-of (h5 / have-org-role-91 :arg2 (c5 / chief :name (n2 / name :op1 (t2 / tahsin))))))))))) :arg2 (p8 / person :arg0-of (g3 / guard-01))) :snt2 (a3 / and :op1 (k / kill-01 :arg1 (p9 / person :source (f2 / family :arg1-of (h6 / have-org-role-91 :arg0 (p10 / person) :arg2 (m2 / member))))) :op2 (d / do-02 :arg0 (s / someone :source (f3 / family)) :arg1 (t3 / türke))))
(c / contrast-01 :arg1 (b / bring-01 :arg0 (w / we) :arg1 (h / he) :arg2 (c2 / center :mod (m / medicine :mod (b2 / bay?nd?r)))) :arg2 (l / late :degree (t / too) :domain (i / it)))
(r / realize-01 :arg0 (i / i) :arg1 (w / wish-01 :arg0 (h / he) :arg1 (i2 / introduce-02 :arg0 (h2 / he) :arg1 (t / tree :mod (p / plum)) :location (h3 / head :part-of (h4 / he)))))
(c / cause-01 :arg0 (c2 / continue-01 :arg1 (p / person :mod (y / young))) :arg1 (c3 / continue-01 :arg1 (p2 / person :mod (y2 / young))))
(s / say-01 :arg0 (p / person :name (n / name :op1 "N-A")) :arg1 (p2 / possible-01 :arg1 (s2 / see-01 :arg1 (f / feast :mod (v / visual) :mod (t / this) :location (s3 / sky)) :arg2 (p3 / place :arg0-of (r / receive-01 :arg1 (l / light :mod (l2 / little)) :location (d / direction :location (n2 / northeast)) :time (n3 / night :mod (w / whole)))) :manner (g / good))))
(m / multi-sentence :snt1 (c / cause-01 :arg0 (a / and :op1 (s / send-01 :arg0 (p / person :arg0-of (r / represent-01 :arg1 (r2 / ranking :arg1-of (h / high-02)))) :arg1 (a2 / and :op1 (p2 / person :arg0-of (r3 / represent-01 :arg1 (r4 / ranking :arg1-of (h2 / high-02)))) :op2 (h3 / hand :part-of (p3 / person))) :arg2 (a3 / and :op1 (p4 / person :arg0-of (r5 / represent-01 :arg1 (c2 / coup :arg1-of (h4 / high-02)))) :op2 (h5 / hand :part-of (p5 / person))) :time (a4 / after :op1 (c3 / coup) :quant (u / up-to :op1 (b / between :op1 (t / temporal-quantity :quant (N / N-A) :unit (w / week)) :op2 (t2 / temporal-quantity :quant (N2 / N-A) :unit (w2 / week)))))) :time (a5 / after :op1 (c4 / coup) :quant (u2 / up-to :op1 (b2 / between :op1 (t3 / temporal-quantity :quant (N3 / N-A) :unit (w3 / week)) :op2 (t4 / temporal-quantity :quant (N4 / N-A) :unit (w4 / week))))))) :snt2 (e / express-01 :arg0 (a6 / and :op1 (c5 / country :location (w5 / west)) :op2 (p6 / person :arg0-of (l / lead-02 :arg1 (c6 / coup)))) :arg1 (c7 / concern-01 :arg1 (d / democracy :mod (t5 / turkish)))) :snt3 (f / find-02 :arg1 (s2 / sincere :domain (i / it) :prep-in (t6 / turkey))))
(a / and :op1 (l / last-01 :arg1 (s / shoot-02 :ord (o / ordinal-entity :value 3) :arg1-of (p / place-01 :arg2 (n / name :op1 (e / emel)))) :arg2 (t / temporal-quantity :quant (N / N-A) :unit (y / year))) :op2 (s2 / shoot-02 :arg1 (p2 / person :quant 17.01 :arg1-of (i / include-91 :arg2 (p3 / person :quant 17.01 :arg0-of (t2 / try-01 :arg1 (t3 / try-01 :arg0 (p4 / person)))))) :location (t4 / try-01 :arg0 (p5 / person) :ord (o2 / ordinal-entity :value 3))))
(a / and :op1 (p / politics) :op2 (c / commerce) :op3 (t / transport-01) :op4 (e / energy) :op5 (e2 / energy))
(a / agree-01 :arg0 (w / we) :arg1 (a2 / and :op1 (c / cease-01 :arg1 (c2 / cease-01)) :op2 (c3 / continuation :poss (n / negotiate-01))))
(c / contrast-01 :arg1 (s / stick-01 :arg1 (h / hand :part-of (i / i)) :arg2 (t / tailgate)) :arg2 (p / put-01 :arg0 (i2 / i) :arg1 (i3 / i) :arg2 (b / boot)))
(a / announce-01 :arg0 (i / i) :arg1 (n / note :mod (n2 / new) :poss (i2 / it) :mod (n3 / new)) :time (b / begin-01 :arg1 (m / month :mod (t / this))))
(p / possible-01 :arg1 (c / consult-01 :arg0 (y / you) :arg1 (y2 / you) :arg2 (l / learn-01 :arg0 (y3 / you) :arg1 (p2 / possible-01 :mode (i / interrogative) :arg1 (a / apply-01 :arg1 (p3 / procedure :mod (t / this) :arg1-of (a2 / apply-01 :arg2 (p4 / person :quant (a3 / all) :arg0-of (h / have-rel-role-91 :arg2 (p5 / patient))) :arg1-of (p6 / possible-01) :arg1-of (a4 / apply-01 :arg2 (p7 / person :quant (a5 / all) :arg0-of (h2 / have-rel-role-91 :arg2 (p8 / patient))) :arg1-of (p9 / possible-01) :time (b / before :op1 (n / now) :quant (o / or :op1 (t2 / temporal-quantity :quant (N / N-A) :unit (y4 / year)) :op2 (t3 / temporal-quantity :quant (N2 / N-A) :unit (y5 / year)))))))))) :mod (a6 / also)))
(n / name-02 :arg1 (t / this) :arg2 (a / and :op1 (v / vein :arg1-of (d / deep-02)) :op2 (u / url-entity :value (f / femoral))))
(c / cause-01 :arg0 (l / lose-02 :arg0 (w / we) :arg1 (t / titles :mod (w2 / world) :quant (m / many :degree (s / so)))) :arg1 (a / amaze-01 :arg1 (w3 / we) :mod (j / just)))
(r / respond-01 :arg0 (t / they) :arg1-of (s / same-01 :arg2 (a / apply-01 :arg1-of (s2 / same-01 :arg2 (a2 / apply-01)))) :mod (a3 / again) :mod (a4 / again))
(a / and :op1 (i / inspire-01 :arg0 (b / bordum :arg1 (t / they)) :arg1 (t2 / they)) :op2 (m / make-01 :arg0 (t3 / they) :arg1 (v / village :name (n / name :op1 (' / ') :op2 (v2 / village) :op3 (v3 / village) :op4 (v4 / village) :op5 (v5 / village) :op6 (v6 / village) :op7 (v7 / village)))))
(t / take-01 :arg1 (b / bodrum) :arg3 (m / model))
(a / and :op1 (p / performed :arg0 (w / we) :arg1 (w2 / work-01 :arg0 (w3 / we))) :op2 (g / get-01 :arg0 (w4 / we) :arg1 (h / house :quant (a2 / all) :location (a3 / and :op1 (p2 / painted :arg1 (c / canköy)) :op2 (b / blue :name (n / name :op1 (b2 / blue)))))))
(b / bring-01 :arg1 (a / and :op1 (a2 / arrest-01 :arg1 (p / person :mod (c / country :name (n / name :op1 "N-A")))) :op2 (s / send-01 :arg1 (p2 / person) :arg2 (j / jail))) :arg2 (c2 / court))
(f / find-01 :arg1 (c / car :poss (p / person :name (n / name :op1 "Öksüz")) :prep-with (n2 / number :mod (r / register-02))) :location (g / garage :poss (p2 / person :arg0-of (h / have-rel-role-91 :arg1 (h2 / he) :arg2 (f2 / father))) :location (h3 / house :poss (l / law))))
(c / contrast-01 :arg1 (d / decide-01 :arg1 (d2 / discuss-01 :arg1 (f / fund-01) :mod (a / again) :arg1-of (c2 / cause-01 :arg0 (l / lack-01 :arg1 (m / mechanism :arg0-of (a2 / audit-01)))))) :arg2 (d3 / discuss-01 :arg1 (f2 / fund-01) :arg2 (c3 / committee) :manner (a3 / amend-01 :polarity - :mod (a4 / any))))
(s / say-01 :arg0 (p / person :name (n / name :op1 "N-A") :arg0-of (h / have-org-role-91 :arg1 (b / board :mod (e / executive) :location (c / country :name (n2 / name :op1 "N-A"))) :arg2 (c2 / chairman))) :arg1 (s2 / sign-01 :arg0 (w / we) :arg1 (t / trust-01 :arg1-of (p2 / put-01 :arg0 (w2 / we) :time (f / future :poss (c3 / country :poss (w3 / we))))) :time (y / year :mod (l / last) :part-of (y2 / year :mod (l2 / last)))))
(n / need-01 :arg0 (p / person :mod (c / country :name (n2 / name :op1 "N-A"))) :arg1 (r / rid-01 :arg0 (p2 / person) :arg1 (d / distress :mod (t / this))))
(r / recommend-01 :arg1 (e / equate-01 :arg1 (p / person :arg0-of (c / commit-02 :arg1 (c2 / coup)) :arg0-of (c3 / commit-02 :arg1 (c4 / coup))) :arg2 (p2 / person :mod (s / state) :arg0-of (c5 / commit-02 :arg1 (c6 / coup)))))
(a / and :op1 (a2 / approach-02 :arg0 (p / person :arg0-of (a3 / approach-02 :arg1 (c / car))) :arg1 (c2 / car) :location (a4 / and :op1 (k / karahan :mod (r / ramazan)) :op2 (p2 / person :mod (e / elder) :arg0-of (h / have-rel-role-91 :arg1 (h2 / he) :arg2 (b / brother))))) :op2 (k2 / karahan :arg0 (p3 / person :mod (e2 / elder) :arg0-of (h3 / have-rel-role-91 :arg1 (h4 / he) :arg2 (b2 / brother)))) :time (m / meanwhile))
(d / develop-02 :arg0 (s / scientist :arg0-of (h / have-org-role-91 :arg2 (s2 / scientist))) :arg1 (m / model) :purpose (e / explore-01 :arg0 (s3 / scientist) :arg1 (a / and :op1 (p / person :arg0-of (u / use-01 :arg1 (m2 / model))) :op2 (p2 / person :arg1-of (r / resemble-01 :arg2 (p3 / person :arg1-of (e2 / employ-01 :arg0 (s4 / scientist :mod (c / climate))))) :arg1-of (r2 / resemble-01 :arg2 (p4 / person :arg1-of (e3 / employ-01 :arg0 (s5 / scientist :mod (c2 / climate)))))))))
(s / say-01 :arg0 (p / person :arg0-of (l / lead-02 :arg1 (n / negotiators))) :arg1 (s2 / suspend-01 :arg1 (s3 / strike-01 :arg2 (p2 / person :arg0-of (w / work-01 :arg2 (o / oil :mod (s4 / sea) :location (n2 / north))))) :time (s5 / strike-01 :arg1 (p3 / party :quant (a / all)) :arg2 (d / dispute-01 :arg2 (r / round :mod (n3 / new) :consist-of (t / talk-01)) :mod (n4 / new)))))
(a / and :op1 (r / relieved :arg1 (i / i)) :op2 (h / humble :degree (v / very)))
(m / multi-sentence :snt1 (d / detail :topic (t / thing :manner-of (w / write-01 :arg1 (c / character :mod (a / amr-unknown))))) :snt2 (e / expect-01 :arg1 (c2 / come-01 :arg1 (a2 / and :op1 (t2 / team :consist-of (p / person :arg0-of (h / have-org-role-91 :arg2 (a3 / agent :mod (f / fbi))))) :op2 (t3 / thing :arg1-of (s / state-01 :arg0 (t4 / television :name (n / name :op1 (a4 / abc)) :medium (t5 / television))))) :time (d2 / date :mod (l / late :degree (m2 / more))))))
(a / and :op1 (w / wear-01 :arg0 (n / novelty) :arg1 (o / off)) :op2 (u / use-01 :arg1 (n2 / novelty)) :arg1-of (c / cause-01 :arg0 (o2 / of-course :mod (o3 / of-course))))
(a / and :op1 (p / plucking :arg0 (p2 / person :arg0-of (h / have-org-role-91 :arg2 (r / rescuers))) :arg1 (p3 / person :arg0-of (h2 / have-org-role-91 :arg2 (h3 / head-of-state))) :location (a2 / and :op1 (a3 / amite) :op2 (d / distance-quantity :quant (N / N-A) :unit (k / kilometer)))) :op2 (w / wilkinson :arg1 (p4 / person) :location (s / southwest :part-of (s2 / southwest))) :mod (s3 / still))
(s / say-01 :arg0 (h / he) :arg1 (a / allow-01 :arg1 (r / return-01 :arg1 (t / they) :arg4 (h2 / home) :time (s2 / start-01 :arg1 (r2 / recede :arg1 (w / water))))))
(t / traced :arg1 (c / casing :name (n / name :op1 (s / shell) :op2 (s2 / shell) :op3 (c2 / casings))) :arg2 (a / and :op1 (w / weapon :mod (s3 / style :mod (a2 / assault)) :arg1-of (d / differ-02)) :op2 (w2 / weapon :mod (s4 / style :mod (a3 / assault)) :arg1-of (d2 / differ-02))))
(r / remove-01 :arg1 (p / person :arg0-of (h / have-org-role-91 :arg1 (g / government-organization :arg0-of (g2 / govern-01)) :arg2 (m / mayor))) :arg2 (o / office) :time (y / year :mod (l / last)))
(b / ban-01 :arg0 (a / and :op1 (p / person :arg0-of (c / campaign-01 :mod (p2 / politics))) :op2 (a2 / activist)) :arg1 (a3 / and :op1 (p3 / person :arg0-of (c2 / campaign-01 :mod (p4 / politics))) :op2 (a4 / activist)) :arg2 (h / handle-01 :arg0 (a5 / and) :arg1 (a6 / and :op1 (v / vote-01 :mod (p5 / postal)) :op2 (v2 / vote-01 :arg0 (a7 / activist)))))
(h / hit-01 :arg0 (a / and :op1 (e / embraced :name (n / name :op1 (f / fijians))) :op2 (e2 / embraced :name (n2 / name :op1 (f2 / fijians)))) :arg1 (t / turf) :manner (t2 / thorough))
(m / mean-01 :arg1 (t / that) :arg2 (p / pressure-01 :arg0 (t2 / that) :quant (m2 / much :degree (t3 / too))))
(s / say-01 :arg0 (s2 / she) :arg1 (b / believe-01 :arg0 (s3 / she) :arg1 (a / and :op1 (l / lack-01 :arg0 (c / controversies :name (n / name :op1 (r / race-related))) :arg1 (d / diversity) :purpose (h / hire-01 :arg1 (d2 / diversity))) :op2 (l2 / lack-01 :arg0 (c2 / controversies) :arg1 (p / practice-01 :arg1 (d3 / diversity))))) :medium (i / interview-01 :arg1 (s4 / she) :mod (t / telephone)))
(s / share-01 :arg0 (p / person :arg0-of (o / observe-01) :mod (o2 / other) :arg0-of (o3 / observe-01)) :arg1 (c / complain-01 :arg0 (p2 / person) :arg1-of (c2 / cause-01 :arg0 (l / leave-11 :arg0 (p3 / person) :degree (l2 / large)))))
(s / say-01 :arg0 (r / report-01))
(i / investigate-01 :arg0 (d / department :part-of (d2 / department :part-of (p / person :arg0-of (h / have-org-role-91 :arg2 (g / general :mod (g2 / general))))) :arg0-of (h2 / have-org-role-91 :arg2 (g3 / general))) :mod (a / additional) :arg1-of (g4 / go-on-15))
(a / and :op2 (t / take-01 :arg0 (i / it) :arg1 (s / shape :mod (e / ethnic) :mod (d / dangerous))))
(e / explain-01 :arg0 (p / person :name (n / name :op1 "Donald" :op2 "Trump")) :arg1-of (c / claim-01 :arg0 (p2 / person)))
(t / try-01 :arg0 (p / person :name (n / name :op1 (m / mr.) :op2 (t2 / trumps))) :arg1 (r / return-01 :arg1 (p2 / person) :arg4 (s / subject :mod (t3 / that))) :mod (a / again))
FAILED_TO_PARSE#Number of opening and closing brackets doesn't match.
FAILED_TO_PARSE#Two concepts in a row.
(c / choose-01 :arg0 (p / person :arg0-of (u / use-01 :arg1 (h / house-01)) :quant (m / majority :mod (l / large))) :arg1 (s / schedule :arg1-of (p2 / pay-01 :duration (t / temporal-quantity :quant (N / N-A) :unit (y / year)))))
(r / recommend-01 :arg1 (r2 / reduce-01 :arg1 (p / person :arg0-of (h / have-org-role-91 :arg2 (p2 / president :mod (v / vice)))) :arg4 (l / less-than :op1 (p3 / percentage-entity :value (N / N-A)))))
(p / possible-01 :arg1 (w / we :mod (a / again)))
(s / state-01 :arg0 (h / he) :arg1 (b / ball) :location (c / court :poss (y / you)) :time (n / now))
(p / pay-01 :arg1 (f / fee :mod (t / transfer-01) :mod (m / monetary-quantity :quant 750 :unit (e / euro))) :arg3 (m2 / monetary-quantity :quant 750 :unit (y / yuan :mod (r / renminbi))) :arg3 (m3 / monetary-quantity :quant 750 :unit (y2 / yuan :mod (r2 / renminbi)) :arg1-of (p2 / pay-01 :arg3 (y3 / year :mod (o / one)))))
(s / say-01 :arg0 (i / i) :arg1 (d / do-02 :arg0 (i2 / i) :arg1 (w / whatever :arg1-of (d2 / do-02 :arg0 (i3 / i) :arg1-of (p / possible-01)))))
(p / possible-01 :arg1 (s / soldier :arg1-of (p2 / private-03) :arg0-of (d / do-02 :arg1 (s2 / service :mod (m / military) :poss (h / he))) :domain (h2 / he)) :arg1-of (p3 / possible-01))
(h / have-03 :arg0 (p / person :mod (c / country :name (n / name :op1 "N-A"))) :arg1 (n2 / neighbor-01 :arg1 (p2 / person) :arg2 (c2 / country :name (n3 / name :op1 "N-A"))))
(o / open-01 :arg1 (t / thing :arg2-of (r / result-01 :arg1 (s / struggle-01 :arg0 (a / and :op1 (f / family :arg1-of (h / have-org-role-91 :arg0 (h2 / he) :arg2 (m / member))) :op2 (l / lawyer :mod (f2 / family))) :arg1-of (l2 / legal-02)))) :time (l3 / late :op1 (t2 / temporal-quantity :quant (N / N-A) :unit (y / year)) :degree (m2 / more)))
(b / behind :op1 (b2 / behind :op1 (t / this)) :mod (c / certain))
(s / start-01 :arg0 (g / government-organization :arg0-of (g2 / govern-01 :arg1 (c / country :name (n / name :op1 "N-A")))) :arg1 (a / and :op1 (f / force :arg1-of (a2 / arm-01)) :op2 (m / ministry :topic (d / defend-01 :mod (n2 / nation)))) :time (a3 / after :op1 (e / expel-01 :arg0 (c2 / coup) :arg1 (p / person :arg0-of (h / have-org-role-91 :arg1 (g3 / government-organization :arg0-of (g4 / govern-01 :arg1 (c3 / country-region))) :arg2 (m2 / member))))) :time (a4 / after :op1 (e2 / expel-01 :arg0 (c4 / coup) :arg1 (p2 / person :arg0-of (h2 / have-org-role-91 :arg1 (g5 / government-organization :arg0-of (g6 / govern-01 :arg1 (c5 / country-region))) :arg2 (m3 / member))))))
(m / multi-sentence :snt1 (t / türke :mode (i / interrogative) :time (a / always)) :snt2 (c / contrast-01 :arg1 (t2 / tell-01 :polarity - :arg0 (i2 / i) :arg2 (a2 / anyone) :time (u / until :op1 (d / die-01 :arg1 (h / he)))) :arg2 (o / obligate-01 :arg1 (i3 / i) :arg2 (s / speak-01 :arg0 (i4 / i) :time (a3 / after :op1 (w / watch-01 :arg0 (i5 / i) :arg1 (i6 / image :poss (s2 / soldier :mod (t3 / that) :arg0-of (r / remove-01 :arg1 (p / part :part-of (p2 / person :arg0-of (h2 / have-org-role-91 :arg2 (s3 / soldier)))) :arg0-of (a4 / assigned :arg1 (d2 / duty :topic (k / kill-01 :arg1 (p3 / person :arg0-of (h3 / have-org-role-91 :arg1 (w2 / we) :arg2 (p4 / president)))))))))))))) :li 1977)
(a / and :op1 (c / call-02 :arg0 (t / they) :arg1 (i / i)) :op2 (g / go-02 :arg0 (t2 / they) :arg4 (e / engage-01 :arg2 (h / hilton :mod (a2 / ankara)))))
(s / say-01 :arg0 (i / information :arg1-of (r / receive-01 :arg0 (i2 / information :arg1-of (r2 / receive-01)))) :arg1 (s2 / start-01 :arg0 (c / coup :name (n / name :op1 (p / plotters))) :arg1 (f / fire-01) :manner (t / target-01 :arg0 (c2 / coup) :arg1 (p2 / person :arg0-of (s3 / speak-01)) :arg2 (a / around :op1 (p3 / product-of :op1 50 :op2 (d / distance-quantity :quant (N / N-A) :unit (m / meter)))) :arg1-of (d2 / direct-02)) :time (a2 / after :op1 (s4 / start-01 :arg1 (r3 / read-01 :arg1 (p4 / prayers))))))
(s / scene :mod (m / meteor))
(a / and :op1 (a2 / acquire-01 :arg0 (w / worship-place :name (n / name :op1 "N-A")) :arg1 (r / realize-01 :arg0 (w2 / worship-place :name (n2 / name :op1 "N-A")) :mod (p / politics)) :manner (w3 / way :mod (t / this))) :op2 (c / come-01 :arg1 (c2 / company) :arg4 (c3 / center) :time (t2 / then) :prep-as (' / '' :arg1 (t3 / they))) :manner (w4 / way :mod (t4 / this)))
(u / use-01 :arg1 (m / material :mod (f / filling)) :arg2 (m2 / more-than :op1 (p / product-of :op1 3 :op2 (m3 / material :arg1-of (u2 / use-01 :location (a / airport :mod (o / ordu-giresun)))))) :mod (m4 / much :degree (t / too)))
(r / reveal-01 :arg1 (p / participate-01 :arg0 (a / and :op1 (p2 / person :arg0-of (p3 / play-01 :arg1 (g / galatasaray)) :mod (s / some)) :op2 (p4 / person :arg0-of (p5 / play-01) :mod (f / football) :mod (n / nation))) :arg1 (a2 / and :op1 (p6 / person :arg0-of (p7 / play-01) :mod (s2 / some)) :op2 (p8 / person :arg0-of (p9 / play-01) :mod (f2 / football) :mod (n2 / nation)) :arg0-of (m / mark-01 :arg1 (m2 / mark-01 :arg0 (p10 / person) :arg1 (t / turkish :arg0 (p11 / person) :arg1 (f3 / football) :time (o / once :op1 (t2 / time)))))) :time (c / converse-01 :arg0 (p12 / person) :arg1 (p13 / person :quant 1996 :arg0-of (h / have-org-role-91 :arg2 (h2 / head-of-state))))))
(t / turpin :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (m / match-03) :arg2 (o / official)) :ord (o2 / ordinal-entity :value 4)) :arg1 (m2 / match-03) :manner (s / sudden))
(c / convert-01 :arg0 (t / they) :arg1 (c2 / coach) :arg2 (c3 / car :mod (b / bridal)))
(l / learn-01 :arg0 (i / i) :arg1 (h / have-03 :arg0 (a / and :op1 (p / person :arg0-of (h2 / have-rel-role-91 :arg1 (i2 / i) :arg2 (g / grandson))) :op2 (p2 / person :mod (n / nephew))) :arg1 (p3 / phone)))
(s / send-01 :arg1 (b / bitmez) :arg2 (c / court) :time (a / after :op1 (p / proccessing :arg0 (h / he) :arg1 (d / department :mod (p2 / police)))))
(p / provide-01 :arg0 (a / advantage :mod (a2 / another)) :arg1 (c / complain-01 :arg0 (t / they) :arg1 (c2 / complain-01 :arg0 (t2 / they))) :mod (a3 / another))
(c / cause-01 :arg0 (a / affect-01 :arg0 (a2 / and :op1 (c2 / close-10 :arg1 (c3 / country :name (n / name :op1 "N-A")) :arg2 (c4 / country :name (n2 / name :op1 "N-A"))) :op2 (w / work-01 :arg1-of (l / long-03)) :op3 (j / job :arg0-of (r / require-01 :arg1 (p / period :arg1-of (l2 / long-03))))) :arg1 (i / increase-01 :arg1 (c5 / complain-01 :arg1 (v / varicose)))) :arg1 (a3 / affect-01 :arg0 (a4 / and :op1 (c6 / close-10 :arg1 (c7 / country) :arg2 (c8 / country)) :op2 (w2 / work-01 :arg0 (c9 / country) :duration (p2 / period :arg1-of (l3 / long-03)))) :arg1 (t / temporal-quantity :arg1-of (l4 / long-03)) :mod (p3 / primary)))
(a / and :op1 (g / grow-01 :arg1 (a2 / and :op1 (d / deficiency) :op2 (v / varicose)) :location (v2 / vessel :quant (a3 / all) :mod (t / this))))
(n / news :topic (n2 / news :mod (d / derby)))
(r / replace-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg2 (p2 / person :arg0-of (s / specialize-01)))) :arg1 (p3 / person :arg0-of (h2 / have-org-role-91 :arg2 (s2 / staff :mod (p4 / person :name (n / name :op1 "jamie"))))) :arg2 (p5 / person :arg0-of (s3 / specialize-01)))
(d / demonstrate-01 :arg1 (p / possible-01 :polarity - :arg1 (i / imagine-01 :arg1 (f / feat :arg0 (h / he) :arg1 (f2 / feat :mod (w / win-01 :arg0 (h2 / he) :arg1 (g / golds :quant 3 :mod (o / olympic)) :arg2 (g2 / game :quant 1)))))) :manner (d2 / demonstrate-01 :mod (f3 / form) :mod (f4 / form)))
(c / contrast-01 :arg1 (f / fire-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (g / game :name (n / name :op1 "N-A")) :arg2 (m / member))) :arg1 (c2 / cat :consist-of (c3 / cat))) :arg2 (p2 / pass-03 :arg1 (c4 / car :arg0-of (p3 / patrol-01))))
(r / remove-01 :arg1 (g / government-organization :arg0-of (g2 / govern-01) :arg1-of (p / prepare-01 :arg0 (g3 / government-organization :arg0-of (g4 / govern-01)))) :arg2 (a / and :op1 (p2 / provide-01 :arg0 (g5 / government-organization) :arg1 (f / fund) :arg2 (a2 / and :op1 (i / invest-01) :op2 (p3 / project)) :duration (l / long-03)) :op2 (r2 / remove-01 :arg1 (b / bill :arg0-of (f2 / fund-01 :arg1 (l2 / law)) :mod (w / wealth)) :arg2 (o / opine-01 :arg1 (r3 / recommend-01 :arg1 (d / discuss-01 :arg1 (b2 / bill) :manner (s / separate-02)))))))
(c / come-01 :arg1 (w / we) :arg3 (v / view-01 :arg1 (w2 / we) :arg1-of (l / long-03)))
(c / continue-01 :arg1 (w / work-01 :arg0 (s / sector :mod (b / banking) :poss (w2 / we)) :manner (h / health) :manner (h2 / health)))
(s / say-01 :arg0 (h / he) :arg1 (c / continue-01 :arg0 (g / government-organization :arg0-of (g2 / govern-01 :arg1 (y / you))) :arg1 (r / remove-01 :arg0 (y2 / you) :arg1 (o / obstacle :beneficiary (y3 / you :quant 1))) :arg1-of (c2 / cause-01 :arg0 (a / as-long-as :op1 (c3 / continue-01 :arg0 (y4 / you) :arg1 (p / produce-01 :arg0 (y5 / you) :arg1 (a2 / and :op1 (c4 / country) :op2 (t / trust-02)) :location (c5 / country :poss (y6 / you))))))))
(a / and :op1 (s / state-01 :arg0 (i / i) :arg1 (a2 / and :op1 (g / give-01 :arg1 (p / passport :arg1-of (o / organize-01)) :arg2 (e / exporters) :time (l / late :degree (m / more))) :op2 (i2 / issue-01 :arg0 (w / we) :arg1 (l2 / law) :arg2 (m2 / ministry :topic (e2 / economy) :quant (m3 / multiple :op1 1) :arg1-of (i3 / issue-01 :time (r / recent)))))) :op2 (p2 / put-01 :arg0 (w2 / we) :arg1 (p3 / passport :arg1-of (o2 / organize-01) :arg0-of (r2 / represent-01 :arg1 (c / country :poss (w3 / we))) :arg0-of (r3 / represent-01 :arg1 (c2 / country :poss (w4 / we)) :arg2 (a3 / and :op1 (a4 / around :op1 (p4 / person :arg0-of (h / have-org-role-91 :arg1 (c3 / company :name (n / name :op1 "N-A"))))) :op2 (p5 / person :quant 20 :arg1-of (i4 / include-91 :arg2 (c4 / company :name (n2 / name :op1 "N-A"))))) :location (r4 / round)))))
(c / cause-01 :arg1 (a / and :op1 (d / declare-02 :arg1 (s / state :mod (e / emergency))) :op2 (d2 / do-02 :arg1 (r / reform-01 :arg1 (s2 / structure :mod (s3 / serious) :quant (m / many))) :time (u / until :op1 (n / now)))))
(c / contrast-01 :arg2 (a / approve-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg2 (p2 / president))) :arg1 (l / law :topic (f / force :mod (i / international) :mod (i2 / international))) :arg1-of (m / mean-01 :arg2 6735)))
(a / and :op1 (o / open-01 :arg1 (i / investigate-01 :arg2-of (c / criminal-03))) :op2 (s / step-01 :arg1 (p / person :arg0-of (h / have-rel-role-91 :arg2 (l / lawyer))) :arg2 (s2 / situation :arg1-of (r / resemble-01 :arg2 (t / this)))) :op3 (t2 / tell-01 :arg0 (p2 / person :name (n / name :op1 "gilles" :op2 "hofstetter") :arg0-of (h2 / have-rel-role-91 :arg1 (p3 / person) :arg2 (l2 / lawyer))) :arg1 (p4 / person :arg0-of (h3 / have-rel-role-91 :arg1 (p5 / person) :arg2 (l3 / lawyer))) :arg2 (p6 / person :arg0-of (h4 / have-rel-role-91 :arg1 (p7 / person) :arg2 (l4 / lawyer)))))
(s / stage-01 :arg1 (s2 / strike-01 :arg1 (g / group :consist-of (w / wood) :mod (s3 / service :mod (u / ultra)))) :arg2 (p / platform :location (r / relative-position :op1 (n / north) :direction (n2 / north) :direction (n3 / north)) :arg1-of (o / operated :arg0 (s4 / shell :mod (r2 / royal) :mod (r3 / royal)))))
(s / say-01 :arg0 (u / union :mod (l / labor)) :arg1 (p / protest-01 :arg0 (u2 / union) :ord (o / ordinal-entity :value 1 :range (m / more-than :op1 (t / temporal-quantity :quant (N / N-A) :unit (y / year)))) :arg1-of (s2 / say-01 :arg0 (u3 / union)) :arg1-of (s3 / say-01 :arg0 (u4 / union)) :arg1-of (s4 / say-01 :arg0 (u5 / union)) :arg1-of (s5 / say-01 :arg0 (u6 / union)) :arg1-of (s6 / say-01 :arg0 (u7 / union)) :arg1-of (s7 / say-01 :arg0 (u8 / union)) :arg1-of (s8 / say-01 :arg0 (u9 / union))))
(e / enacted :arg0 (t / they) :arg1 (s / star) :arg1-of (c / cause-01 :arg0 (t2 / travel-01 :arg0 (w / wind :arg1-of (w2 / wind) :mod (t3 / this)) :path (a / across :op1 (s2 / star)) :path (a2 / across :op1 (s3 / star)))))
(c / cause-01 :arg0 (g / get-02 :arg0 (p / person :arg0-of (m / mr)) :arg1 (a / apology :source (p2 / person :arg0-of (h / have-org-role-91 :arg2 (p3 / president))))) :arg1 (m2 / meet-03 :mod (t / this) :mod (o / only)) :time (a2 / after :op1 (a3 / all)))
(s / say-01 :arg0 (h / he) :arg1 (r / regret-01 :arg0 (h2 / he) :arg1 (i / it)) :medium (s2 / statement))
(s / say-01 :arg0 (h / he) :arg1 (a / and :op1 (' / '' :domain (t / this) :mod (h2 / historic)) :op2 (s2 / symbolize-01 :arg1 (b / building :arg0-of (c / cross-02 :arg1 (q / queensferry))))))
(a / add-01 :arg0 (h / he) :arg1 (b / blown :arg0 (w / winds :arg1-of (s / strong-02)) :arg1 (t / they)) :arg2-of (f / fortunate-01 :polarity -) :arg2-of (f2 / fortunate-01 :polarity -))
(g / great :domain (s / see-01 :arg1 (a / and :op1 (t / technology :mod (t2 / that)) :op2 (a2 / activity-06 :arg1 (a3 / activity-06 :arg1-of (a4 / activity-06))) :mod (m / mutual))))
(t / tell-01 :arg0 (p / person :arg0-of (w / watch-01 :arg1 (a / apple)) :arg0-of (w2 / watch-01 :arg1 (p2 / person :arg0-of (u / use-01 :arg1 35,000) :mod (t2 / tracks)))) :arg1 (r / rate-entity-91 :arg1 (n / number :quant-of (p3 / person :arg0-of (t3 / tracked :arg1 (r2 / rate-entity-91 :arg1 (d / day :mod (e / each)) :arg2 (t4 / temporal-quantity :quant (N / N-A) :unit (d2 / day)))) :arg2 (r3 / rate-entity-91 :arg1 (d3 / day :mod (e2 / each)) :arg2 (t5 / temporal-quantity :quant (N2 / N-A) :unit (d4 / day))) :arg3 (r4 / rate-entity-91 :arg1 (d5 / day :mod (e3 / each)) :arg2 (t6 / temporal-quantity :quant (N3 / N-A) :unit (d6 / day))) :arg3 (r5 / rate-entity-91 :arg1 (d7 / day :mod (e4 / each)) :arg2 (t7 / temporal-quantity :quant (N4 / N-A) :unit (d8 / day))) :arg3 (r6 / rate-entity-91 :arg1 (d9 / day :mod (e5 / each)) :arg2 (t8 / temporal-quantity :quant (N5 / N-A) :unit (d10 / day)))))) :arg2 (p4 / person :name (n2 / name :op1 "N-A")))
(m / multi-sentence :snt1 (a / armor-01 :arg1 (i / it) :location (a2 / area :mod (r / residential) :location (i2 / in-front-of :op1 (h / home :mod (h2 / home))))) :snt2 (s / say-01 :arg0 (p / person :arg0-of (h3 / have-org-role-91 :arg2 (g / general))) :arg1 (f / favor-01 :arg0 (p2 / person) :arg1 (p3 / political-party :name (n / name :op1 "N-A")) :time (e / early :op1 (m2 / month :mod (t / this)) :degree (m3 / more)) :degree (m4 / more))))
(a / and :op1 (t / teach-01 :arg0 (w / we) :arg1 (s / sign-01 :arg0 (h / he) :arg1 (l / language)) :arg2 (h2 / he)) :op2 (t2 / tell-01 :arg0 (p / person :arg0-of (p2 / picciuto)) :arg1 (n / news :mod (c / cbs)) :arg2 (h3 / he)))
(e / event :mod (a / amr-unknown))
(a / and :op1 (b / be-located-at-91 :polarity - :arg1 (v / victim :quant 2 :mod (o / other)) :arg2 (c / car)) :op2 (i / investigate-01 :arg0 (p / police) :arg1 (p2 / possible-01 :mode (i2 / interrogative) :arg1 (s / shoot-02 :arg1 (m / man :arg1-of (i3 / include-91 :arg2 (m2 / man :arg1-of (w / wound-01))))))))
(m / multi-sentence :snt1 (c / cause-01 :arg1 (a / appear-02 :arg1 (a2 / and :op1 (a3 / arm-01 :arg1 (p / person :quant (m2 / multiple) :arg1-of (a4 / arm-01)) :location (h / here)) :op2 (e / engage-01 :arg1 (p2 / person) :arg2 (p3 / person :arg0-of (h2 / have-org-role-91 :arg1 (p4 / police) :arg2 (c2 / captain))) :arg1-of (a5 / activity-06 :arg0 (p5 / person)) :arg1-of (a6 / activity-06 :arg0 (p6 / person)))))) :snt2 (t / tell-01 :arg0 (p7 / person :arg0-of (h3 / have-org-role-91 :arg1 (p8 / police :mod (p9 / philadelphia)) :arg2 (c3 / captain))) :arg1 (s / station)))
(a / and :op1 (a2 / advise-01 :arg0 (w / watchdog :mod (n / nhs)) :arg2 (r / recommend-01 :arg1 (g / give-01 :arg1 (i / it) :arg2 (p / person) :duration (u / up-to :op1 (t / temporal-quantity :quant (N / N-A) :unit (y / year)))))) :op2 (r2 / reduce-01 :arg1 (r3 / risk-01 :arg2 (p2 / problem :topic (c / cardiovascular))) :degree (f / further)))
(m / multi-sentence :snt1 (a / and :op1 (h / hate-01 :arg0 (i / i) :arg1 (g / get-05 :arg1 (i2 / i) :arg2 (h2 / home) :prep-with (p / pair :mod (n / new) :consist-of (k / knickers)))) :op2 (f / find-01 :arg0 (i3 / i) :arg1 (a2 / and :op1 (p2 / put-01 :arg0 (i4 / i) :arg1 (t / they) :arg2 (o / off) :mod (a3 / again)) :op2 (t2 / take-01 :arg0 (i5 / i) :arg1 (t3 / they) :arg3 (o2 / off) :mod (a4 / again))))) :snt2 (a5 / and :op1 (' / ' :arg1 (t4 / they) :mod (a6 / again)) :op2 (w / washed :arg1 (t5 / they) :degree (t6 / total))))
FAILED_TO_PARSE#Number of opening and closing brackets doesn't match.
(a / and :op1 (b / become-01 :arg1 (w / wright) :arg2 (k / know-01 :arg1 (t / test-01 :arg1 (d / durability :poss (g / gut :part-of (h / he))) :location (a2 / around :op1 (w2 / world))))) :op2 (t2 / thing :arg1-of (w3 / wonderful-03) :arg1-of (w4 / wonderful-03)))
(f / forcefully :arg0 (h / house-01 :arg0-of (h2 / house-01)) :arg1 (a / and :op1 (s / she) :op2 (p / person :arg0-of (h3 / have-rel-role-91 :arg1 (s2 / she) :arg2 (p2 / partner))) :op3 (p3 / person :arg0-of (h4 / have-rel-role-91 :arg1 (s3 / she) :arg2 (p4 / partner))) :op4 (p5 / property)) :arg2 (p6 / property) :time (w / week :mod (t / this)) :time (a2 / after :op1 (g / give-01 :arg0 (h5 / house-01) :arg1 (p7 / period :arg1-of (e / extend-01) :consist-of (m / move-01 :arg1 (a3 / and))) :arg2 (v / volunteer-01 :arg0 (a4 / and)))))
(s / say-01 :arg0 (h / he) :arg1 (h2 / have-concession-91 :arg1 (i / insist-01 :arg0 (f / force :mod (a / air)) :arg1 (c / compromised :arg1 (s2 / safe-01 :arg1 (n / no-one)))) :arg2 (f2 / fly-01 :arg1 (j / jet) :destination (l / low-04 :degree (m / more) :compared-to (n2 / normal-02)))))
(s / say-01 :arg0 (p / person :mod (y / young :degree (m / most) :compared-to (y2 / young :degree (e / equal) :compared-to (y3 / young :domain (p2 / person))))) :arg1 (' / '' :arg1 (p3 / person :mod (t / this) :arg0-of (h / have-rel-role-91 :arg1 (p4 / person) :arg2 (c / child))) :arg2 (p5 / person :mod (t2 / this) :arg0-of (h2 / have-rel-role-91 :arg1 (p6 / person) :arg2 (c2 / child)))))
(c / contrast-01 :arg1 (s / stop-01 :arg0 (w / wise :mod (s2 / superb)) :arg1 (n / nakarawa :name (n2 / name :op1 (m / man-mountain)) :mod (m2 / man-mountain)) :source (s3 / scoring :ord (o / ordinal-entity :value 3))) :arg2 (p / possible-01 :polarity - :arg1 (p2 / predict-01 :arg1 (f / fiji) :mod (o2 / only))))
(b / beat-03 :arg0 (p / person :mod (c / country :name (n / name :op1 "N-A"))) :arg1 (p2 / person :quant (2 / 20-5)) :arg2 (a / and :op1 (p3 / person :mod (c2 / country :name (n2 / name :op1 "N-A"))) :op2 (p4 / person :arg0-of (h / have-org-role-91 :arg1 (c3 / country) :arg3 (l / lead-02 :arg0 (p5 / person)))) :op3 (p6 / person :arg0-of (h2 / have-org-role-91 :arg1 (c4 / country) :arg3 (l2 / lead-02 :arg0 (p7 / person)))) :op4 (p8 / person :arg0-of (h3 / have-org-role-91 :arg1 (c5 / country) :arg3 (l3 / lead-02 :arg0 (p9 / person)))) :op5 (p10 / person :arg0-of (h4 / have-org-role-91 :arg1 (c6 / country) :arg3 (l4 / lead-02 :arg0 (p11 / person)))) :op6 (p12 / person :arg0-of (h5 / have-org-role-91 :arg1 (c7 / country) :arg3 (a2 / apprentice-01 :arg0 (p13 / person)))) :op6 (p14 / person :arg0-of (h6 / have-org-role-91 :arg1 (c8 / country) :arg3 (a3 / apprentice-01 :arg0 (p15 / person)))) :op6 (p16 / person :arg0-of (h7 / have-org-role-91 :arg1 (b2 / britain :mod (e / each))))) :time (e2 / early :degree (m / more) :time (d / day)))
(s / seat-01 :arg0-of (f / front-row :arg1 (a / architecture :mod (s2 / stunning) :part-of (l / library :mod (c / central) :part-of (l2 / library)))))
(s / schedule-01 :arg1 (a / and :op1 (d / discuss-01 :arg1 (i / image :mod (a2 / and :op1 (d2 / design-01 :arg1 (i2 / image :quant 1926 :name (n / name :op1 (b / bertram)))) :op2 (s2 / share-01 :arg1 (i3 / image :quant 1926 :name (n2 / name :op1 (g / goodhue)))))) :op2 (a3 / and :op1 (r / restore-01 :arg1 (i4 / image)) :op2 (a4 / and :op1 (r2 / restore-01 :arg1 (i5 / image)) :op2 (r3 / restoration :arg0 (h / holzman :name (n3 / name :op1 (h2 / holzman) :op2 (p / pfeiffer)))))))) :arg2 (a5 / and :op1 (d3 / discuss-01 :arg1 (a6 / and)) :op2 (s3 / share-01 :arg1 (i6 / image))))
(d / draw-02 :arg0 (l / lens :mod (s / snapchat)) :arg1 (c / criticize-01 :arg1 (a / accuse-01 :arg1 (o / or :op1 (p / promote-02 :arg1 (a2 / app)) :op2 (e / encourage-01 :arg1 (s2 / skin :mod (w / whitened)) :arg2 (i / ideal :consist-of (b / beauty))))) :time (p2 / past)))
(r / release-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (c / committee :mod (i / intelligence :mod (h2 / house))) :arg2 (m / member))) :arg1 (t / thing :arg1-of (i2 / include-91 :arg2 (t2 / thing :arg1-of (c2 / conclude-01 :arg0 (f / force :mod (t3 / task) :mod (t4 / task))) :quant (s / some)))) :arg2 (p2 / person :arg0-of (h3 / have-org-role-91 :arg1 (c3 / committee :mod (i3 / intelligence :mod (h4 / house))) :arg2 (m2 / member))))
(p / promise-01 :arg0 (t / they) :arg2 (o / overlooked :arg1 (p2 / person :quant 1) :arg1-of (c / cause-01 :arg0 (m / melee :arg1-of (g / general-02)))) :location (m2 / mania :mod (o2 / olympic)))
(n / nation :quant 1 :arg1-of (a / ally-01 :arg2 (w / west :part-of (c / continent :name (n2 / name :op1 "Africa"))) :arg1-of (s / soft-02)) :domain (i / it) :time (d / decade :mod (l / last)))
(a / and :op1 (s / storm-02 :arg0 (p / person :arg1-of (s2 / storm-02 :arg0 (p2 / person) :destination (s3 / street))) :arg1 (s4 / street)) :op2 (d / demand-01 :arg0 (p3 / person) :arg1 (c / change-01 :arg1 (p4 / politics) :mod (f / fundamental))) :time (w / week :mod (l / last)))
(c / characteristics :arg1 (i / it) :arg2 (r / recipes :mod (h / home-ec) :quant (l / lot)))
(a / and :op1 (c / contribute-01 :arg0 (r / rate-entity-91 :arg1 (m / monetary-quantity :quant 5.3 :unit (d / dollar)) :arg2 (v / volume-quantity :quant (N / N-A) :unit (g / gallon))) :arg2 (r2 / rate-entity-91 :arg1 (m2 / monetary-quantity :quant 1 :unit (d2 / dollar)) :arg2 (v2 / volume-quantity :quant (N2 / N-A) :unit (g2 / gallon))) :arg4 (r3 / rate-entity-91 :arg1 (m3 / monetary-quantity :quant 5.3 :unit (d3 / dollar)) :arg2 (v3 / volume-quantity :quant (N3 / N-A) :unit (g3 / gallon)))) :op2 (b / bring-up-02 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (c2 / company :name (n / name :op1 "N-A") :arg0-of (h2 / have-org-role-91 :arg2 (p2 / president) :time (f / former))) :arg2 (s / secretary :mod (s2 / state)) :time (f2 / former))) :arg1 (r4 / rate-entity-91 :arg1 (m4 / monetary-quantity :quant 5.3 :unit (d4 / dollar) :arg1-of (c3 / cost-01 :arg2 (m5 / monetary-quantity :quant 5.3 :unit (d5 / dollar)))) :arg2 (v4 / volume-quantity :quant (N4 / N-A) :unit (g4 / gallon)))) :op3 (r5 / report-01 :arg0 (p3 / person :arg0-of (h3 / have-org-role-91 :arg1 (s3 / state) :arg2 (s4 / secretary) :time (f3 / former))) :location (t / tenure :poss (p4 / person) :location (t2 / tenure :poss (s5 / state)))))
(w / write-01 :arg0 (p / person :name (n / name :op1 "lanzmann")))
(e / explain-01 :polarity - :arg0 (t / that))
(a / and :op1 (c / country :name (n / name :op1 "N-A")) :op2 (c2 / country :name (n2 / name :op1 "N-A")))
(w / warn-01 :arg0 (p / person :arg0-of (d / do-02 :arg1 (i / it))) :arg1 (p2 / person :arg0-of (d2 / do-02 :arg1 (i2 / it))))
(f / furnished :arg1 (t / table) :arg2 (t2 / thing :arg2-of (h / have-purpose-91 :arg1 (e / emphasize-01 :arg1 (a / and :op1 (u / unity) :op2 (s / solidarity) :poss (t3 / turkey))))))
(a / and :op1 (u / use-01 :arg0 (p / person :mod (c / country :name (n / name :op1 "N-A"))) :arg1 (' / '' :mod ('2 / '')) :mod (a2 / also)) :op2 (o / open-01 :arg0 (e / everyone) :arg1 (e2 / eye :part-of (p2 / person))) :time (a3 / after :op1 (m / multiple :op1 15)))
(s / say-01 :arg0 (h / he) :arg1 (c / contrast-01 :arg1 (c2 / cut-02 :arg0 (i / i) :arg1 (p / person :quant (s2 / some) :arg1-of (i2 / include-91 :arg2 (p2 / person :arg0-of (h2 / have-org-role-91 :arg2 (h3 / head-of-state))))) :mod (a / also) :location (h4 / here)) :arg2 (r / recall-02 :polarity - :arg0 (i3 / i) :arg1 (b / broadcasts))))
(w / want-01 :arg0 (p / person :arg0-of (a / assist-01 :arg1 (w2 / we)) :arg0-of (h / have-org-role-91 :arg2 (d / director :mod (g / general))) :arg0-of (h2 / have-org-role-91 :arg2 (d2 / director :mod (g2 / general))) :arg0-of (h3 / have-org-role-91 :arg2 (d3 / director :mod (g3 / general))) :arg0-of (h4 / have-org-role-91 :arg2 (d4 / director :mod (g4 / general))) :arg0-of (h5 / have-org-role-91 :arg2 (d5 / director :mod (g5 / general))) :arg0-of (h6 / have-org-role-91 :arg2 (d6 / director :mod (g6 / general))) :arg0-of (h7 / have-org-role-91 :arg2 (d7 / director :mod (g7 / general))) :arg0-of (h8 / have-org-role-91 :arg2 (d8 / director :mod (g8 / general)))) :arg1 (c / cut-02 :arg1 (b / broadcasts) :time (i / immediate)))
(i / include-91 :arg1 (p / person :arg0-of (d / detain-01 :arg1 (p2 / person))) :arg2 (o / operation :arg1-of (o2 / organize-01 :prep-under (i2 / instructions :poss (o3 / office :poss (p3 / person :arg0-of (h / have-org-role-91 :arg3 (p4 / prosecute-01 :arg1 (p5 / public)))))))))
(s / state-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (p2 / province) :arg2 (d / director :mod (h2 / health) :mod (h3 / health)))) :arg1 (a / aim-01 :arg1 (a2 / and :op1 (s2 / smoking :arg1 (p3 / protocol :mod (t / this))) :op2 (p4 / prevent-01 :arg1 (p5 / person :mod (y / young)) :arg2 (t2 / take-on-09 :arg0 (p6 / person) :arg1 (h4 / habit :arg1-of (b / bad-07)))))))
(c / continue-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (c2 / commissioned) :arg2 (o / officer))) :arg1 (p2 / post :poss (p3 / person)) :location (p4 / post :poss (p5 / person)))
(a / and :op1 (g / get-05 :arg1 (c / car) :arg2 (o / out-06 :arg1 (c2 / car) :arg2 (c3 / car))) :op2 (s / start-01 :arg0 (y / you) :arg1 (e / escape-01 :arg0 (y2 / you) :arg1 (d / direction :location (s2 / square :mod (s3 / square))))) :time (m / moment :mod (t / that)))
(p / point :location (b / bridge :location-of (s / stop-01 :arg1 (b2 / bus :mod (b3 / big)))))
(s / state-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (p2 / person :name (n / name :op1 "N-A") :arg0-of (h2 / have-org-role-91 :arg2 (p3 / prosecute-01 :arg1 (p4 / person)) :arg3 (p5 / prosecute-01 :arg1 (p6 / person)))) :arg3 (p7 / prosecute-01 :arg1 (p8 / person)))) :arg1 (a / and :op1 (a2 / arrest-01 :arg1 (p9 / person :arg0-of (h3 / have-rel-role-91 :arg2 (s2 / sister))) :location (c / country :quant 190)) :op2 (a3 / arrest-01 :arg1 (p10 / person) :location (s3 / street)) :op3 (a4 / arrest-01 :polarity - :arg1 (p11 / person))))
(i / include-91 :arg1 (b / bridge :quant 1 :ord (o / ordinal-entity :value 2)) :arg2 (b2 / bridge :quant 1915))
(r / report-01 :arg1 (c / continue-01 :arg1 (o / operation) :time (l / late :op1 (t / temporal-quantity :quant (N / N-A) :unit (h / hour)))))
(i / issue-02 :arg0 (b / between :op1 (t / turkey) :op2 (c / country :name (n / name :op1 "N-A"))) :quant (m / many))
(i / issue-02 :arg0 (r / region) :mod (a / also))
(s / say-01 :arg0 (h / he) :arg1 (t / thing :mod (i / important) :domain (t2 / thing :arg2-of (r / result-01))))
(s / state-01 :arg0 (p / person :arg0-of (i / introduce-02 :arg1 (c / campaign-01 :arg0 (p2 / person) :arg1 (d / donate-01 :arg0 (p3 / person) :arg1 (c2 / campaign-01 :arg0 (p4 / person) :arg1 (d2 / donate-01 :arg0 (p5 / person) :arg1 (c3 / campaign-01 :arg0 (p6 / person) :arg1 (d3 / donate-01 :arg0 (p7 / person) :arg2 (a / and :op1 (p8 / press) :op2 (j / joy :mod (r / red))))))))))) :arg1 (s2 / start-01 :arg0 (p9 / person) :arg1 (m / mobilization :mod (b / big)) :purpose (e / ensure-01 :arg0 (p10 / person) :arg1 (a2 / and :op1 (d4 / disappear-01 :arg1 (m2 / meat :name (n / name :op1 (e2 / eid)) :mod (e3 / eid)) :mod (a3 / all)) :op2 (s3 / say-01 :arg0 (p11 / person) :arg1 (m3 / meat :mod (' / '') :source (a4 / al-adha :mod (e4 / eid))) :manner (w / way :mod (h / hygienic)))))))
(m / multi-sentence :snt1 (s / say-01 :arg0 (h / he) :arg1 (c / consume-01 :arg0 (p / person :mod (c2 / country :name (n / name :op1 "N-A"))) :arg1 (m2 / meat) :manner (w / way :mod (w2 / way :mod (a / all))) :manner (w3 / way :mod (w4 / way :mod (a2 / all))))) :snt2 (' / '' :mode (e / expressive)))
(a / accident :location (f / fatih))
(s / say-01 :arg0 (i / information :arg1-of (r / receive-01 :arg0 (i2 / information))) :arg1 (i3 / incident :time-of (e / enter-01 :arg0 (h / highway :location (s2 / station :name (n / name :op1 "N-A") :arg0-of (e2 / enter-01 :arg1 (b / bridge :name (n2 / name :op1 (m / mehmet)))))) :arg1 (b2 / bridge :location (d / direction :mod (a / ankara)) :location (d2 / direction :poss (a2 / ankara :quant (a3 / around :op1 14.00)))))))
(a / ask-02 :arg0 (p / person :arg0-of (r / represent-01 :arg1 (i / island :name (n / name :op1 "N-A")))) :arg1 (m / make-01 :arg0 (i2 / i) :arg1 (c / complain-01)) :arg2 (i3 / i))
(m / multi-sentence :snt1 (d / decide-01 :arg0 (o / office :poss (p / person :arg0-of (h / have-org-role-91 :arg2 (o2 / office :mod (p2 / public))))) :arg1 (d2 / detain-01 :arg1 (p3 / person :arg0-of (h2 / have-org-role-91 :arg2 (o3 / office :mod (p4 / public)))))) :snt2 (a / and :op1 (ü / ükür :mode (i / interrogative) :arg0 (p5 / person :arg0-of (w / work-01 :arg1 (c / contractor :arg1 (p6 / person)))) :arg1 (p7 / person :arg0-of (w2 / work-01 :location (s / sakarya :mod (s2 / sakarya)))) :location (s3 / scope :poss (i2 / investigate-01 :arg0 (i3 / investigate-01 :arg0 (p8 / person)))))))
(s / system :name (n / name :op1 (s2 / slammer)) :arg1-of (r / refer-01 :arg0 (w / we) :arg2 (p / pathway :mod (l / lateral) :arg0-of (k / kill-01 :arg1 (b / blood :mod (v / venous)) :arg2 (s3 / system :name (n2 / name :op1 (v2 / venous)) :arg1-of (d / deep-02))))) :time (l2 / leg) :arg1-of (c / cause-01 :arg0 (s4 / system :name (n3 / name :op1 (l3 / lateral)) :mod (l4 / lateral))))
(a / and :op1 (s / stick-01 :arg1 (p / person :arg0-of (h / have-rel-role-91 :arg1 (m / man) :arg2 (s2 / skinner))) :arg2 (p2 / person :mod (c / country :name (n / name :op1 "N-A")))) :op2 (s3 / see-01 :arg0 (p3 / person) :arg1 (p4 / potential) :location (c2 / country :arg1-of (r / realised :time (n2 / now)))))
(s / start-01 :arg0 (w / we) :arg1 (t / take-01 :arg0 (w2 / we) :arg1 (m / model) :purpose (t2 / take-01 :arg0 (w3 / we) :arg1 (m2 / model))) :time (s2 / start-01 :arg0 (w4 / we) :arg1 (p / project :mod (t3 / this))))
(a / arrest-01 :arg1 (a2 / and :op1 (p / person :arg0-of (h / have-org-role-91 :arg2 (p2 / president :mod (v / vice)) :time (f / former))) :op2 (p3 / person :arg0-of (h2 / have-org-role-91 :arg2 (a3 / ald?rmaz) :time (f2 / former))) :op3 (p4 / person :arg0-of (h3 / have-org-role-91 :arg2 (p5 / president :mod (v2 / vice)) :time (f3 / former))) :op4 (p6 / person :arg0-of (h4 / have-org-role-91 :arg2 (p7 / president :mod (v3 / vice)) :time (f4 / former))) :op5 (p8 / person :arg0-of (h5 / have-org-role-91 :arg1 (c / chamber :part-of (c2 / commerce) :mod (c3 / commerce)) :arg2 (p9 / president) :time (f5 / former)))))
(c / continue-01 :arg1 (a / arrest-01 :arg1 (p / person :quant 12 :mod (a2 / another)) :arg2 (s / scope :poss (i / investigate-01))))
(s / send-01 :arg1 (a / and :op1 (p / person :arg0-of (h / have-rel-role-91 :arg1 (h2 / he) :arg2 (w / wife))) :op2 (p2 / person :arg0-of (h3 / have-rel-role-91 :arg1 (h4 / he) :arg2 (w2 / wife)))) :arg2 (c / court))
(a / and :op1 (w / wealth) :op2 (a2 / audit-01 :arg1-of (d / discuss-01 :arg1-of (d2 / discuss-01))))
(s / show-01 :arg1 (f / finance-01 :arg1 (p / project :mod (b / big))) :arg2 (r / reason :arg0-of (c / cause-01 :arg1 (a / aim-01 :arg1 (f2 / fund-01)))))
(a / add-01 :arg0 (h / he) :arg1 (n / need-01 :polarity - :arg0 (b / bank :mod (c / central) :poss (w / we)) :arg1 (a2 / add-02 :arg0 (b2 / bank) :arg1 (c2 / currency :mod (f / foreign)) :arg2 (m / market) :arg1-of (i / instead-of-91 :arg2 (d / decrease-01 :arg1 (r / reserve :mod (o / over :op1 (m2 / monetary-quantity :quant 121 :unit (d2 / dollar :mod (r2 / renminbi)))) :arg1-of (g / gross-03) :mod (o2 / over :op1 (m3 / monetary-quantity :quant 121 :unit (d3 / dollar)))))))))
(a / and :op1 (g / go-02 :mode (i / imperative) :arg0 (y / you) :arg4 (r / rostrum :time (a2 / after :op1 (a3 / and :op1 (p / person :name (n / name :op1 "Özlü") :arg0-of (h / have-org-role-91 :arg2 (f / faruk))) :op2 (p2 / person :arg0-of (s / say-01 :arg1 (d / difficult :domain (c / cause-01 :arg0 (a4 / attempt-01 :arg0 (c2 / coup :quant 15 :mod (j / july)) :arg1 (w / world :mod (w2 / world))))))))))) :op2 (s2 / state-01 :arg0 (p3 / person) :arg1 (d2 / declare-01 :arg0 (p4 / person) :arg2 (m / matter :topic (m2 / matter :mod (t / this))) :prep-as (g2 / government-organization :arg0-of (g3 / govern-01)))))
(s / say-01 :arg0 (h / he) :arg1 (p / possible-01 :polarity - :arg1 (k / know-01 :arg0 (w / we) :arg1 (e / event :mod (t / this)))))
(a / and :op1 (o / organize-01 :arg0 (a2 / aircraft :arg0-of (r / regime)) :arg1 (a3 / attack-01 :quant 2 :mod (a4 / air) :arg1-of (s / separate-02)) :location (c / city :name (n / name :op1 "N-A") :location (n2 / northeast))) :op2 (c2 / control-01 :arg0 (a5 / aircraft) :arg1 (t / town) :time (a6 / after :op1 (t2 / temporal-quantity :quant (N / N-A) :unit (h / hour) :location (t3 / town :mod (s2 / sarmada)))) :arg1-of (b / be-located-at-91 :arg2 (c3 / control-01 :arg1 (b2 / border-01 :arg1 (t4 / thing :arg1-of (b3 / border-01 :arg2 (b4 / border-01 :arg1 (c4 / country) :arg2 (b5 / border-01 :arg1 (c5 / country) :arg2 (b6 / border-01 :arg1 (c6 / country-region) :arg2 (b7 / border-01 :arg1 (c7 / country) :arg2 (b8 / border-01 :arg1 (c8 / country-region) :arg2 (b9 / border-01 :arg1 (c9 / country) :arg2 (b10 / border-01 :arg1 (c10 / country-region) :arg2 (b11 / border-01 :arg1 (c11 / country-region) :arg2 (c12 / country))))))))))))))))
(s / say-01 :arg0 (s2 / study) :arg1 (u / use-01 :arg0 (a / and :op1 (p / person :arg0-of (s3 / study-01)) :op2 (p2 / person :arg0-of (u2 / use-01 :arg1 (a2 / advertise-01)))) :arg1 (n / number :quant-of (p3 / person :arg0-of (u3 / use-01 :arg1 (s4 / software :mod (s5 / such))) :arg0-of (u4 / use-01 :arg1 (s6 / software :mod (s7 / such)) :arg2 (s8 / software :quant 2013)))) :time (y / year :mod (l / last))) :arg2 (g / globe))
(a / and :op1 (p / pressure-01 :arg0 (t / thing :arg2-of (p2 / price-01 :arg1 (o / oil)) :arg1-of (l / low-04 :degree (m / more))) :arg1 (m2 / monetary-quantity :arg2-of (p3 / price-01 :arg1 (o2 / oil)) :arg1-of (l2 / low-04 :degree (m3 / more))) :arg2 (m4 / monetary-quantity :arg2-of (p4 / price-01 :arg1 (o3 / oil)) :arg1-of (l3 / low-04 :degree (m5 / more)))) :op2 (s / situation :arg0 (d / decide-01 :arg0 (c / country :name (n / name :op1 "N-A"))) :arg1 (l4 / leave-11 :arg0 (c2 / company) :arg1 (u / union-02 :arg1 (c3 / continent :name (n2 / name :op1 "N-A"))))))
(c / change-01 :arg1 (r / rbs :quant (a / all)) :arg4 (a2 / and :op1 (o / office :mod (h / head)) :op2 (l / listing :mod (e / exchange-01 :arg1 (s / stock))) :op3 (l2 / listing :mod (e2 / exchange-01 :arg1 (s2 / stock)))) :arg4 (n / natwest))
(f / follow-02 :arg0 (h / he) :arg1 (a / and :op1 (r / richards) :op2 (s / smith) :op3 (l / lester) :op4 (l2 / lester) :op5 (w / willie) :op6 (w2 / willie) :op7 (w3 / willie)))
(a / appoint-01 :arg1 (p / person :name (n / name :op1 "anton" :op2 "vaino") :arg0-of (h / have-org-role-91 :arg2 (d / deputy))) :arg2 (p2 / person :arg0-of (h2 / have-org-role-91 :arg2 (d2 / deputy))) :time (s / since :op1 (a2 / appoint-01 :arg1 (p3 / person) :arg2 (s2 / successor :poss (p4 / person)))) :li 2012)
(t / tell-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (c / country :name (n / name :op1 "N-A")) :arg2 (s / station :mod (t2 / tv)))) :arg1 (a / and :op1 (a2 / ask-02 :arg0 (p2 / person) :arg1 (l / leave-11 :arg0 (p3 / person) :arg1 (p4 / post))) :op2 (r / recommend-01 :arg0 (p5 / person) :arg1 (r2 / replace-01 :arg1 (p6 / person :arg0-of (h2 / have-org-role-91 :arg2 (m / mr))) :arg2 (p7 / person)))) :arg2 (s2 / station :mod (t3 / tv) :mod (c2 / country :name (n2 / name :op1 "N-A"))))
(b / be-located-at-91 :arg1 (a / and :op1 (p / person :arg0-of (s / starred :arg1 (d / dharma :quant (b2 / between :op1 2005 :op2 2005)) :time (p2 / previous))) :op2 (p3 / person :arg0-of (h / have-org-role-91 :arg1 (g / greg)))) :arg2 (s2 / show-04) :time (s3 / since :op1 (s4 / season :mod (s5 / season :ord (o / ordinal-entity :value 1)))))
(s / struggle-02 :arg0 (m / man :quant 3) :arg1 (s2 / swim-01 :arg0 (m2 / man) :arg2 (s3 / safe-01 :arg1 (m3 / man))) :time (c / continue-01 :arg1 (b / boat :poss (m4 / man)) :prep-under (p / power :poss (m5 / man))))
(a / and :op1 (t / ticagrelor :arg0 (f / firm :name (n / name :op1 (a2 / astrazeneca) :op2 (a3 / astrazeneca)) :arg1-of (m / make-01 :arg0 (f2 / firm :mod (c / country :name (n2 / name :op1 "N-A"))))) :arg1 (t2 / thing :arg2-of (n3 / name-01 :arg1 (f3 / firm :mod (c2 / country :name (n4 / name :op1 "N-A")))) :arg1-of (s / sell-01 :prep-under (n5 / name :op1 (b / brilique) :op2 (b2 / brilique))))) :op2 (l / likely-01 :arg1 (r / risk-01 :arg0 (r2 / risk-01 :mod (t3 / this)) :arg2 (l2 / likely-01 :degree (l3 / less)))))
(m / multi-sentence :snt1 (s / say-01 :arg0 (i / i) :arg1 (d / die-01 :mode (i2 / interrogative) :arg1 (p / person :source (c / country :name (n / name :op1 "N-A")) :arg1-of (r / resemble-01 :arg2 (p2 / person :mod (c2 / country :name (n2 / name :op1 "N-A")))))) :mod (j / just)) :snt2 (d2 / die-01 :mode (i3 / interrogative)))
(h / hold-on-05 :polarity - :arg1 (p / person :arg0-of (u / use-01 :arg1 (p2 / person :arg0-of (u2 / use-01)))) :direction (b / back) :time (h2 / hear-01 :arg0 (p3 / person) :arg1 (t / thing :manner-of (b2 / byron :arg1 (m / macdonlad :mod (i / insensitive))))))
(t / think-01 :arg0 (i / i) :arg1 (s / show-01 :arg0 (f / film) :arg1 (s2 / sense-01 :arg0 (w / we) :arg1 (h / humour) :mod (g / great))) :mod (a / also))
(h / hail-02 :arg1 (p / person :arg0-of (s / say-01 :arg1 (m / make-01 :arg1 (l / life :poss (p2 / person))))) :arg2 (h2 / hell :arg0-of (l2 / live-01)))
(r / reveal-01 :arg0 (p / poll-01 :arg2 (p2 / poll-01 :arg2 (p3 / person :arg0-of (b / buy-01 :arg1 (a / album :mod (v / vinyl)) :time (m / month :mod (p4 / previous))))) :quant (a2 / almost :op1 (p5 / percentage-entity :value (N / N-A)))) :arg1 (l / listen-01 :arg0 (p6 / person) :arg1 (i / it) :time (y / yet)))
FAILED_TO_PARSE#Number of opening and closing brackets doesn't match.
(a / argue-01 :arg0 (t / they) :arg1 (a2 / and :op1 (p / provide-01 :arg0 (a3 / and :op1 (s / shop) :op2 (r / restaurant)) :arg1 (a4 / and :op1 (t2 / thing :arg2-of (s2 / shelter-01)) :op2 (t3 / thing :arg2-of (s3 / shelter-01 :arg3 (r2 / restaurant)))) :frequency (o / often)) :op2 (n / need-01 :arg0 (a5 / and) :arg1 (a6 / and))))
(s / settle-03 :arg1 (p / person :mod (c / country :name (n / name :op1 "N-A"))) :arg3 (s2 / silver) :time (a / after :op1 (s3 / see-01 :arg0 (p2 / person) :arg1 (s4 / see-01 :arg0 (p3 / person) :arg1 (t / take-01 :arg0 (p4 / person) :arg1 (g / gold))))))
(s / start-01 :arg1 (i / it) :manner (a / amr-unknown))
(a / and :op1 (q / qualify-02 :arg1 (t / team :mod (b / both)) :arg2 (f / final :arg1-of (r / rank-01 :arg2 (f2 / final)))) :op2 (d / decide-01 :arg0 (p / person :arg0-of (f3 / finishes :arg1 (f4 / first :arg0 (p2 / person) :ord (o / ordinal-entity :value 2)))) :arg1 (p3 / person)))
(o / offer-01 :arg0 (p / person :mod (c / country :name (n / name :op1 "N-A"))) :arg1 (r / respite))
(t / try-01 :arg0 (p / person :arg0-of (t2 / trumps)) :arg1 (q / quash :arg0 (p2 / person) :arg1 (c / campaign-01 :arg0 (p3 / person) :arg1 (c2 / controversial :arg0 (p4 / person) :arg1 (c3 / campaign-01 :arg0 (p5 / person)) :time (l / late :degree (m / most)))) :manner (c4 / claim-01 :arg0 (p6 / person) :arg1 (s / serious-02 :polarity - :arg1 (p7 / person) :time (i / insist-01 :arg0 (p8 / person) :arg1 (s2 / serious-02 :arg1 (p9 / person) :time (i2 / insist-01 :arg0 (p10 / person) :arg1 (s3 / serious-02 :arg1 (a / and :op1 (p11 / person :arg0-of (h / have-org-role-91 :arg2 (p12 / president))) :op2 (p13 / person :arg0-of (h2 / have-org-role-91 :arg2 (h3 / head-of-state))) :op3 (p14 / person :arg0-of (h4 / have-org-role-91 :arg1 (g / group :name (n / name :op1 "N-A") :mod (s4 / state) :mod (s5 / state) :mod (s6 / state)))))) :time (w / week :mod (t3 / this)))))))))
(s / say-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg2 (a / ambassador))) :arg1 (s2 / surge :prep-in (i / interest-01 :arg1 (f / firm :mod (c / country :name (n / name :op1 "N-A"))) :arg2 (d / do-02 :arg0 (f2 / firm) :arg1 (b / business) :location (c2 / country)))) :time (s3 / since :op1 (l / lifted :arg1 (t / thing :arg2-of (s4 / sanction-02 :arg1 (c3 / country :name (n2 / name :op1 "N-A")) :mod (i2 / international))) :mod (i3 / international))))
(c / contrast-01 :arg2 (a / and :op1 (d / detain-01 :arg1 (p / person :arg1-of (d2 / detain-01 :arg2 (c2 / court))) :arg2 (c3 / court)) :op2 (b / bring-01 :arg0 (p2 / person) :arg1 (c4 / court) :arg2 (c5 / court) :time (a2 / after :op1 (a3 / attempt-01 :arg0 (c6 / coup :mod (c7 / coup :mod (c8 / country-region))) :arg1 (a4 / and :op1 (a5 / arrest-01 :arg1 (p3 / person :quant 9 :arg2-of (i / include-91 :arg1 (c9 / chamber :part-of (a6 / and :op1 (c10 / chairman :mod (c11 / commerce)) :op2 (c12 / chairman :arg2-of (h / have-org-role-91 :arg1 (i2 / industry)))))))) :op2 (r / release-01 :arg1 (p4 / person :quant 7 :arg1-of (i3 / include-91 :arg2 (p5 / person))))))))))
(r / recommend-01 :arg1 (a / assume-02 :arg0 (b / bank :quant (a2 / all)) :arg1 (r2 / responsible-01 :arg0 (b2 / bank))))
(s / stop-01 :arg1 (y / year :quant 2) :arg3 (k / kabata))
(e / enable-01 :arg1 (f / flow-01 :arg1 (p / pedestrian :mod (u / uninterrupted))) :arg2 (a / along :op1 (s / shores)) :manner (b / bring-01 :arg0 (s2 / shores) :arg1 (t / traffic :mod (t2 / traffic))))
(s / support-01 :arg0 (c / campaign-01 :mod (1 / 1-month)) :arg1 (b / bank) :manner (r / reduce-01 :arg0 (c2 / campaign-01) :arg1 (r2 / rate :mod (i / interest))))
(c / contrast-01 :arg1 (v / van :arg1 (r / robin)) :arg2 (w / wound-01 :arg1 (p / persie) :degree (s / slight)))
(c / contrast-01 :arg1 (k / know-01 :polarity - :arg0 (i / i) :arg1 (t / thing :quant 2)) :arg2 (a / and :op1 (s / spread-02 :arg1 (t2 / thing :quant 2) :arg1-of (c2 / cause-01 :arg0 (a2 / and :op1 (s2 / spread-02 :arg1 (c3 / camp :mod (d / de) :poss (p / person :arg0-of (h / have-org-role-91 :arg1 (f / force :name (n / name :op1 (t3 / turkish)) :arg0-of (h2 / have-org-role-91 :arg1 (f2 / force :name (n2 / name :op1 (t4 / turkish))) :arg2 (c4 / commander))) :arg2 (c5 / commander))))) :op2 (h3 / have-org-role-91 :arg0 (p2 / person) :arg1 (f3 / force :poss (p3 / person :arg0-of (h4 / have-org-role-91 :arg1 (f4 / force :name (n3 / name :op1 (t5 / turkish))) :arg2 (c6 / commander))) :arg2 (c7 / commander :mod (e / esteemed)))))))))
(f / feel-01 :arg0 (i / i) :arg1 (g / give-up-07 :arg0 (i2 / i) :arg1 (l / life :poss (i3 / i))) :time (m / moment :mod (t / that)))
(h / hold-04 :arg1 (m / meet-03) :time (b / before :op1 (f / festival :location (p / province :quant 3 :mod (t / this)) :arg1-of (u / use-01 :arg2 (c / center)))))
(c / create-01 :arg1 (a / atmosphere :mod (u / unity) :mod (u2 / unity :mod (n / nation)) :arg1-of (c2 / create-01 :arg0 (a2 / and :op1 (p / political-party :name (n2 / name :op1 "N-A")) :op2 (c3 / chp) :op3 (m / mhp)) :prep-against (c4 / coup))) :mod (a3 / also) :prep-in (p2 / project :mod (t / this)))
(a / and :op1 (c / come-01 :arg1 (h / he)) :op2 (t / trust-02 :arg0 (h2 / he) :arg1 (j / justice :mod (t2 / turkish))))
(a / and :op1 (c / cause-01 :arg0 (c2 / crime-02 :mod (a2 / another)) :arg1 (s / sentence-01 :arg1 (p / person :arg0-of (h / have-org-role-91 :arg1 (o / office :poss (p2 / person :arg0-of (h2 / have-org-role-91 :arg3 (j / judge-01)))))) :arg2 (t / temporal-quantity :quant (N / N-A) :unit (m / month)) :location (j2 / jail) :purpose (s2 / send-01 :arg0 (p3 / person) :arg1 (l / letter) :arg2 (o2 / office :poss (p4 / person :arg0-of (h3 / have-org-role-91 :arg3 (j3 / judge-01))))))) :op2 (s3 / sentence-01 :arg1 (p5 / person :arg0-of (h4 / have-org-role-91 :arg2 (a3 / authority :mod (g / general)))) :arg2 (c3 / crime-02 :arg1 (t2 / take-01 :arg0 (p6 / person) :arg1 (b / blame-01 :arg1 (p7 / person :arg0-of (h5 / have-org-role-91 :arg2 (a4 / authority :mod (a5 / authority :mod (l2 / legal-02)))))))) :location (j4 / jail)))
(m / multi-sentence :snt1 (c / claim-01 :arg0 (i / it) :arg1 (d / disappear-01 :arg1 (i2 / information :mod (i3 / intelligence) :arg1-of (g / give-01 :arg0 (m2 / mit :arg1 (p / person :arg0-of (l / lead-02 :arg1 (o / organization :mod (t / terrorism) :mod (t2 / terrorist)))) :arg2 (p2 / person :arg0-of (l2 / lead-02 :arg1 (o2 / organization :mod (t3 / terrorist))))))) :location (f / foot :part-of (m3 / mountain :location (k / kandil))))) :snt2 (a / and :op2 (p3 / prevent-01 :arg1 (t4 / target) :arg2 (h / hit-01 :arg1 (t5 / target)))))
(c / contrast-01 :arg1 (a / and :op1 (r / remain-01 :arg1 (p / person :quant 37 :arg0-of (h / have-org-role-91 :arg2 (o / officer :mod (c2 / commissioned)))) :arg3 (p2 / person :quant 39 :arg0-of (h2 / have-org-role-91 :arg1 (c3 / commissioned) :arg2 (o2 / officer))) :arg3 (p3 / person :quant 39 :arg0-of (h3 / have-org-role-91 :arg1 (c4 / commissioned) :arg2 (o3 / officer))) :arg3 (p4 / person :quant 39 :arg0-of (h4 / have-org-role-91 :arg1 (c5 / commissioned) :arg2 (o4 / officer)))) :op2 (c6 / conduct-01 :arg0 (p5 / person) :arg1 (p6 / person :arg0-of (h5 / have-org-role-91 :arg1 (c7 / commissioned) :arg2 (o5 / officer))))) :arg2 (p7 / person :arg0-of (h6 / have-org-role-91 :arg1 (c8 / commissioned) :arg2 (o6 / officer))))
(d / do-02 :arg0 (t / they) :arg1 (a / and :op1 (m / massage :mod (h / heart)) :op2 (e / electroshock :location (c / center :mod (m2 / medicine) :location (l / location :name (n / name :op1 "Çankaya"))))))
(m / multi-sentence :snt1 (t / türke :mode (i / interrogative)) :snt2 (r / recommend-01 :arg1 (r2 / reopened :arg1 (g / grave :poss (y / you)))))
(s / state-01 :arg1 (b / bloody-minded :quant 1 :arg1-of (i / include-91 :arg2 (b2 / bloody-minded :mod (b3 / bloody-minded :degree (m / most))))))
(s / state-01 :arg0 (i / i) :arg1 (m / move-01 :arg1 (m2 / movement-07 :mod (t / this)) :arg2 (u / university :name (n / name :op1 "N-A"))))
(m / multi-sentence :snt1 (r / relation-03 :arg0 (p / person :arg0-of (p2 / play-01) :mod (f / football) :quant (s / some)) :arg2 (a / and :op1 (p3 / person :arg0-of (p4 / play-01) :mod (f2 / football) :mod (s2 / some)) :op2 (p5 / person :arg0-of (m2 / manage-01))) :arg1-of (d / direct-02)) :snt2 (ü / ükür :mode (i / interrogative)))
(a / and :op2 (i / important :degree (v / very) :domain (a2 / animal) :mod (a3 / also)))
(c / conveyed :arg1 (i / instruct-01 :mod (t / this)) :arg2 (p / poconos) :arg1-of (g / general-02) :time (f / face :part-of (f2 / face)) :purpose (f3 / face-01 :arg0 (i2 / instruct-01) :arg1 (m / meet-03 :accompanier (p2 / person :arg0-of (f4 / face-01)))))
(a / answer-01 :arg2 (q / question-01 :arg1 (c / claim-01 :arg1 (a2 / arrest-01 :arg1 (a3 / and :op1 (p / person :arg0-of (z / zekeriya :arg1 (ö / öz))) :op2 (p2 / person :arg0-of (h / have-org-role-91 :arg2 (ö2 / öksüz))) :op3 (p3 / person :arg0-of (h2 / have-org-role-91 :arg2 (ö3 / öksüz))) :op4 (p4 / person :arg0-of (h3 / have-org-role-91 :arg2 (ö4 / öksüz))) :op5 (p5 / person :arg0-of (h4 / have-org-role-91 :arg2 (ö5 / öksüz))))))))
(h / hold-04 :arg1 (m / meet-03 :quant 23-24))
(s / state-01 :arg0 (p / person :arg0-of (i / introduce-02 :arg1 (c / campaign-01 :arg0 (p2 / person) :arg1 (d / donate-01 :arg0 (p3 / person) :arg1 (c2 / campaign-01 :arg0 (p4 / person) :arg1 (d2 / donate-01 :arg0 (p5 / person) :arg1 (c3 / campaign-01 :arg0 (p6 / person) :arg1 (d3 / donate-01 :arg0 (p7 / person) :arg2 (a / and :op1 (p8 / press) :op2 (j / joy :mod (r / red))))))))))) :arg1 (s2 / start-01 :arg0 (p9 / person) :arg1 (m / mobilization :mod (b / big)) :purpose (e / ensure-01 :arg0 (p10 / person) :arg1 (a2 / and :op1 (d4 / disappear-01 :arg1 (m2 / meat :name (n / name :op1 (e2 / eid)) :mod (e3 / eid)) :mod (a3 / all)) :op2 (s3 / say-01 :arg0 (p11 / person) :arg1 (m3 / meat :mod (' / '') :source (a4 / al-adha :mod (e4 / eid))) :manner (w / way :mod (h / hygienic)))))))
(p / possible-01 :arg1 (p2 / pay-01 :arg0 (c / citizen :poss (w / we)) :arg1 (f / fee :name (n / name :op1 (e / eid)) :arg1-of (a / al-adha :arg2 (a2 / account :name (n2 / name :op1 (e2 / eid)) :mod (r / red) :poss (b / bank :name (n3 / name :op1 (z / ziraat)))))) :location (u / under :op1 (n4 / number :quant-of (a3 / account :mod (r2 / red) :mod (r3 / red) :poss (b2 / bank))))))
(i / include-91 :arg1 (a / and :op1 (p / person :arg1-of (f / fame-01)) :op2 (p2 / person :arg1-of (f2 / famous)) :op3 (p3 / person :arg1-of (i2 / include-91 :arg2 (p4 / person :arg0-of (b / build-01 :arg1 (h / haven :mod (e / ecology)))) :duration (t / temporal-quantity :quant (N / N-A) :unit (y / year))))) :arg2 (a2 / architect :arg1-of (f3 / fame-01)))
(s / system :mod (v / vessel :arg1-of (r / recreation-02)) :arg1-of (u / use-01 :arg2 (o / operation :mod (h / heart) :arg1-of (u2 / use-01 :arg2 (o2 / operation :mod (h2 / heart)) :arg1-of (p / possible-01) :location (a / around :op1 (a2 / and :op1 (m / monkey) :op2 (a3 / arm)))))))
(a / and :polarity - :op1 (m / match-03 :mod (t / this) :ord (o / ordinal-entity :value 1)) :op2 (m2 / match-03 :mod (l / last) :location (c / compete-01 :location-of (l2 / leave-17 :arg1 (c2 / club :quant 2 :mod (o2 / outstanding) :mod (m3 / more)) :location (b / behind)))))
(o / oppose-01 :arg0 (p / person :arg0-of (o2 / oppose-01)) :arg1 (p2 / person :arg0-of (o3 / oppose-01)) :degree (t / total) :arg1-of (c / cause-01 :arg0 (g / gain-02 :arg0 (p3 / person) :arg1 (e / edges :quant (o4 / over :op1 111) :mod (e2 / each)))))
(h / hope-01 :arg0 (p / person :arg0-of (h2 / have-org-role-91 :arg1 (c / country :name (n / name :op1 "N-A")) :arg2 (s / spokeswoman))) :arg1 (r / return-02 :arg0 (p2 / person) :arg1 (t / thing :arg1-of (c2 / comment-01 :arg0 (p3 / person))) :arg2 (t2 / thing :arg1-of (c3 / comment-01 :arg0 (p4 / person))) :time (i / immediate :degree (t3 / total))))
(c / come-01 :arg1 (v / view-01 :arg0 (h / house) :arg1 (w / white :prep-with (b / blue))) :arg4 (a / attend-02 :arg0 (w2 / we)) :time (g / go-02 :arg0 (w3 / we) :arg4 (b2 / bodrum)))
(c / cause-01 :arg0 (a / amr-unknown) :arg1 (i / include-01 :arg0 (y / you) :arg1 (i2 / it) :arg2 (b / budget) :arg1-of (c2 / cause-01 :arg0 (a2 / amr-unknown))))
(a / and :op1 (l / leave-15 :arg0 (h / he) :arg1 (a2 / and :op1 (p / person :arg0-of (g / guard-01)) :op2 (c / car))) :op2 (r / return-01 :arg1 (h2 / he) :arg4 (c2 / country :poss (h3 / he)) :manner (h4 / happy)))
(m / multi-sentence :snt1 (m2 / mehmet :mode (i / interrogative)) :snt2 (b / break :mode (i2 / interrogative) :polarity - :arg0 (c / country :name (n / name :op1 "N-A")) :arg1 (t / thing :source (w / west))))
(s / say-01 :arg0 (c / company) :arg1 (g / give-01 :arg0 (c2 / cut-02 :mod (a / additional)) :arg1 (r / room :arg1-of (n / need-01 :purpose (m / move-01 :arg1 (r2 / room) :arg2 (m2 / market)))) :arg2 (c3 / company)))
(a / and :op1 (n / need-01 :arg0 (w / we) :arg1 (e / economy :arg1-of (w2 / work-09 :arg2 (m / many))) :location (a2 / across :op1 (c / country))) :op2 (n2 / need-01 :arg0 (w3 / we) :arg1 (e2 / economy :mod (j / just :polarity -))) :op3 (s / say-01 :arg0 (h / he) :arg1 (t / thing :arg1-of (s2 / state-01))))
(c / contrast-01 :arg2 (a / and :op1 (t / thin-03 :arg1 (s / smile :poss (p / person :arg0-of (h / have-org-role-91 :arg2 (m / mr))))) :op2 (o / oozing :arg0 (s2 / standard :mod (r / restrained) :poss (p2 / person)) :arg1 (h2 / he) :mod (h3 / hardly))))
(s / say-01 :arg0 (i / i) :arg1 (s2 / special-02 :arg1 (i2 / it)) :arg2 (p / person :name (n / name :op1 "dettori")) :time (e / early :degree (m / more)))
(b / byline-91 :arg0 (c / country :name (n / name :op1 "Russia")) :arg1 (p / person :name (n2 / name :op1 "Sergei" :op2 "Ivanov") :arg0-of (h / have-org-role-91 :arg1 (s / staff :arg2-of (s2 / staff-01) :poss (c2 / country)) :arg2 (c3 / chief))))
(h / have-03 :arg0 (i / it) :arg1 (a / and :op1 (s / steel :quant (m / mass-quantity :quant (N / N-A) :unit (k / kilogram))) :op2 (c / concrete :quant (m2 / mass-quantity :quant (N2 / N-A) :unit (k2 / kilogram)))))
(m / multi-sentence :snt1 (c / cause-01 :arg1 (a / appear-02 :arg1 (a2 / and :op1 (a3 / arm-01 :arg1 (p / person :quant (m2 / multiple) :arg1-of (a4 / arm-01)) :location (h / here)) :op2 (e / engage-01 :arg1 (p2 / person) :arg2 (p3 / person :arg0-of (h2 / have-org-role-91 :arg1 (p4 / police) :arg2 (c2 / captain))) :arg1-of (a5 / activity-06 :arg0 (p5 / person)) :arg1-of (a6 / activity-06 :arg0 (p6 / person)))))) :snt2 (t / tell-01 :arg0 (p7 / person :arg0-of (h3 / have-org-role-91 :arg1 (p8 / police :mod (p9 / philadelphia)) :arg2 (c3 / captain))) :arg1 (s / station)))
FAILED_TO_PARSE#Number of opening and closing brackets doesn't match.
(a / and :op1 (e / excite-01 :arg1 (i / i) :degree (t / too)) :op2 (d / die-01 :arg1 (p / person :arg1-of (r / resemble-01 :arg2 (p2 / pig)))) :mod (t2 / too))
(h / have-03 :arg0 (p / person :arg0-of (t / tour-01) :arg0-of (t2 / tour-01)) :arg1 (s / shock-01 :arg1 (l / life :poss (p2 / person))) :location (a / aveiro))
(s / say-01 :arg0 (p / person :name (n / name :op1 "Clinton")) :arg1 (s2 / stick-01 :arg1 (p2 / person) :arg2 (p3 / person :arg0-of (n2 / nominate-01 :arg1 (c / court)))))
(t / take-01 :arg0 (c / courtroom) :arg1 (y / year) :time (b / before :op1 (d / deciding :arg0 (t2 / thing) :arg1 (f / futures :poss (t3 / thing)))))
(s / say-01 :arg0 (p / person :arg0-of (o / observe-01) :quant (s2 / some)) :arg1 (c / contrast-01 :arg1 (i / inspire-01 :arg0 (t / thing :mod (t2 / this)) :arg1 (f / filter :mod (t3 / this))) :arg2 (s3 / say-01 :arg0 (p2 / person :arg0-of (o2 / observe-01) :quant (s4 / some)) :arg1 (r / racially :domain (t4 / thing)))))
(r / report-01 :arg1 (t / thing :arg2-of (r2 / result-01 :arg1 (i / investigate-01 :mod (c / congressional))) :mod (p / preliminary)) :time (b / by :op1 (d / day)))
(c / contrast-01 :arg2 (c2 / create-01 :arg0 (a / and :op1 (p / person :mod (c3 / country :name (n / name :op1 "N-A"))) :op2 (p2 / person :mod (c4 / country :name (n2 / name :op1 "N-A")))) :arg1 (s / stir :arg0 (p3 / person) :arg1-of (c5 / cause-01 :arg0 (r / run-02 :arg0 (p4 / person) :arg1 (t / team :quant 12 :arg1-of (i / include-91 :arg2 (t2 / team :quant 12) :time (a2 / after :op1 (t3 / team :quant 12 :mod (l / last)))))))) :location (h / here)))
(e / explain-01 :arg0 (f / factor :quant (s / several)) :arg1 (t / thing :arg0-of (f2 / feel-01) :mod (b / bitter)) :arg1-of (c / cause-01 :arg0 (a / amr-unknown)) :time (a2 / after :op1 (s2 / simmering :duration (t2 / temporal-quantity :quant (N / N-A) :unit (y / year)))) :time (n / now))
(s / say-01 :arg0 (s2 / she) :arg1 (g / give-up-07 :arg0 (s3 / she) :arg1 (c / coffee) :time (w / while)) :time (a / after :op1 (c2 / close-01 :arg1 (v / verb))))
(s / say-01 :arg0 (h / he) :arg1 (a / and :op1 (c / come-01 :arg1 (i / i) :time (b / before :op1 (n / now) :quant (t / temporal-quantity :quant (N / N-A) :unit (d / day)))) :op2 (a2 / and :op1 (c2 / come-01 :arg1 (i2 / i)) :op2 (m / make-02 :arg0 (t2 / they) :arg1 (e / everything :arg1-of (b2 / bagel :arg2 (b3 / butter)))))) :li 7)
(e / enough :mod (e2 / enough) :domain (g / get-01 :arg0 (c / customer :quant (m / many)) :arg1 (f / favorites :mod (o / old) :poss (c2 / customer))))
(p / possible-01 :arg1 (s / see-01 :arg1 (p2 / person :quant (s2 / some) :arg1-of (i / include-91 :arg2 (p3 / person :arg0-of (p4 / protest-01))) :arg0-of (p5 / participate-01 :arg1 (p6 / protest-01))) :location (w / wall :prep-against (p7 / person :arg0-of (h / have-org-role-91 :arg2 (p8 / president :mod (i2 / interim)))))))
(c / contrast-01 :arg1 (t / transfer-01 :polarity - :arg1 (m / money) :arg2 (m2 / money :arg1-of (s / send-01 :arg2 (p / person :arg0-of (h / have-org-role-91 :arg1 (o / organization) :arg2 (m3 / member)))))) :arg2 (t2 / transferred :arg1 (m4 / money) :arg2 (p2 / person :arg0-of (h2 / have-org-role-91 :arg1 (o2 / organization) :arg2 (m5 / member)) :arg0-of (h3 / have-org-role-91 :arg1 (o3 / organization) :arg2 (m6 / member))) :arg0-of (c2 / cause-01 :arg1 (w / wasn :arg1 (i / it) :arg2 (r / record) :degree (t3 / total)))))
(r / reduce-01 :arg0 (r2 / reduce-01 :arg1 (r3 / rate :mod (i / interest))) :arg1 (s / sell-01) :manner (p / positive))
(t / take-01 :arg0 (p / person :mod (r / religious-group :name (n / name :op1 "N-A"))) :arg1 (t2 / temporal-quantity :quant (N / N-A) :unit (m / minute)) :arg4 (p2 / press :location (c / complex :mod (p3 / president))))
(a / agree-01 :arg0 (w / we :arg1-of (a2 / answer-01 :arg0 (s / survey-01))) :arg1 (t / thing :arg2-of (p / price-01 :arg1 (t2 / thing :arg2-of (p2 / price-01 :arg1 (s2 / survey-01))))) :arg2 (t3 / thing :arg2-of (p3 / price-01 :arg1 (s3 / survey-01))))
(s / start-01 :arg1 (m / movement-07) :time (a / after))
(s / start-01 :arg0 (w / we) :arg1 (p / prepare-02 :arg0 (w2 / we) :arg1 (c / cut-off-04 :arg0 (w3 / we) :arg1 (p2 / person :arg2-of (s2 / staff-01)))) :arg1-of (w4 / wide-02))
(t / think-01 :arg0 (w / we) :arg1 (r / resemble-01 :arg1 (s / shoot :arg0 (w2 / we) :arg1 (n / nothing :topic (a / and :op1 (p / person :mod (h / hometown :poss (w3 / we))) :op2 (p2 / person :arg0-of (h2 / have-org-role-91 :arg1 (h3 / hometown :poss (w4 / we))))))) :arg2 (a2 / and :op1 (k / know-01 :arg0 (w5 / we) :arg1 (n2 / nothing :topic (h4 / hometown :poss (w6 / we)))) :op2 (c / come-01 :arg1 (i / instructions) :arg4 (w7 / we)))) :time (h5 / hear-01 :arg0 (w8 / we) :arg1 (t2 / talk-01 :mod (s2 / such))) :mod (e / especially))
(h / help-01 :arg0 (g / god) :arg1 (w / we) :arg2 (a / and :op1 (h2 / have-03 :polarity - :arg0 (w2 / we :mod (b / both)) :arg1 (d / difficult) :time (a2 / answer-01 :arg0 (w3 / we))) :op2 (c / confuse-01 :arg0 (w4 / we) :arg1 (w5 / we) :time (m / moment))) :manner (w6 / way :mod (s / such)))
(c / call-01 :arg0 (t / they) :arg1 (s / soldier :mod (t2 / that)) :arg2 (y / youngsters) :time (b / be-located-at-91 :arg1 (s2 / soldier) :arg2 (w / we)))
(m / multi-sentence :snt2 (d / detain-01 :arg1 (p / person :quant 30 :arg1-of (i / include-91 :arg2 (p2 / person :quant 40 :arg0-of (h / have-org-role-91 :arg1 (u / university) :arg2 (m2 / member)) :arg1-of (i2 / include-91 :arg2 (p3 / person :quant 40 :arg0-of (h2 / have-org-role-91 :arg1 (u2 / university) :arg2 (m3 / member)))) :arg0-of (h3 / have-org-role-91 :arg1 (u3 / university) :arg2 (m4 / member)))) :arg0-of (h4 / have-org-role-91 :arg1 (u4 / university) :arg2 (m5 / member))) :location (a / address :poss (p4 / person))) :snt3 (d2 / detain-01 :arg1 (p5 / person :quant 30 :arg1-of (i3 / include-91 :arg2 (p6 / person :quant 40 :arg0-of (h5 / have-org-role-91 :arg1 (u5 / university) :arg2 (m6 / member)))) :arg0-of (h6 / have-org-role-91 :arg1 (u6 / university) :arg2 (m7 / member)))) :snt3 (d3 / detain-01 :arg1 (p7 / person :quant 30 :arg1-of (i4 / include-91 :arg2 (p8 / person :quant 40 :arg0-of (h7 / have-org-role-91 :arg1 (u7 / university) :arg2 (m8 / member)))))))
(s / say-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (f / family) :arg2 (m / member))) :arg1 (w / whitewashed :arg1 (h2 / hand :part-of (p2 / person :arg0-of (m2 / murder-01))) :time (a / and :op1 (i / investigate-01 :time (p3 / previous)) :op2 (t / try-02 :time (p4 / previous)))))
(c / complete-01 :arg1 (i / investigate-01 :arg1-of (e / extensive-03)) :time (b / before :op1 (p / promote-02)))
(h / have-06 :arg0 (w / we) :arg1 (c / check-out-05 :arg0 (w2 / we) :arg1 (h2 / headquarters)) :time (b / before :op1 (c2 / come-01 :arg1 (w3 / we))))
(a / and :op1 (p / possible-01 :arg1 (i / indicate-01 :arg0 (p2 / person :arg0-of (h / have-org-role-91 :arg2 (p3 / president :mod (v / vice)))) :arg1 (d / debt :mod (s / serious-01 :arg1 (p4 / person) :arg2 (p5 / person :arg0-of (v2 / visit-01 :arg1 (s2 / she))))))) :op2 (s3 / say-01 :arg0 (s4 / she) :arg1 (p6 / possible-01 :arg1 (p7 / pleased :arg1 (g / god) :arg2 (h2 / he)))))
(a / and :op1 (p / put-01 :arg1 (f / fragments :mod (b / bone)) :arg2 (b2 / bag)) :op2 (b3 / bring-01 :arg1 (f2 / fragments) :arg2 (p2 / province :name (n / name :op1 "N-A") :mod (f3 / forensic) :mod (f4 / forensic))) :time (a2 / after :op1 (w / work-01 :arg0 (s / scene :mod (i / incident)))))
(m / multi-sentence :snt1 (r / result-01 :arg1 (t / thing :arg1-of (c / conduct-01 :arg0 (p / person :arg0-of (h / have-rel-role-91 :arg1 (f / family :arg1-of (h2 / have-org-role-91 :arg0 (p2 / person) :arg2 (m2 / member))) :arg2 (m3 / member))) :arg1-of (m4 / miss-01))) :arg2 (p3 / person :arg0-of (h3 / have-rel-role-91 :arg1 (f2 / family :arg1-of (h4 / have-org-role-91 :arg0 (p4 / person) :arg2 (m5 / member))) :arg2 (m6 / member)))) :snt2 (c2 / concentrated :arg1 (p5 / person :arg0-of (h5 / have-rel-role-91 :arg1 (f3 / family :arg1-of (h6 / have-org-role-91 :arg0 (p6 / person) :arg2 (m7 / member))) :arg2 (m8 / member))) :arg2 (p7 / person :arg0-of (h7 / have-rel-role-91 :arg1 (p8 / person) :arg2 (b / boyfriend)))))
(s / say-01 :arg0 (i / information :arg1-of (r / receive-01 :arg0 (i2 / information :arg1-of (r2 / receive-01 :arg0 (p / person :arg0-of (a / attend-01 :arg1 (f / festival :mod (y / youth) :arg1-of (o / organize-01 :location (b / bahçeköy :op1 (v / value-interval :op1 6 :op2 5)))))))))) :arg1 (a2 / and :op1 (s2 / sick-05 :arg1 (p2 / person)) :op2 (t / take-01 :arg1 (p3 / person) :arg3 (h / hospital))))
(s / say-01 :arg0 (a / and :op1 (p / person :arg0-of (a2 / administrate-01 :arg1 (g / government-organization :arg0-of (g2 / govern-01 :arg1 (c / country :name (n / name :op1 "N-A"))))) :arg0-of (h / have-org-role-91 :arg1 (g3 / government-organization :arg0-of (g4 / govern-01 :arg1 (c2 / country :name (n2 / name :op1 "N-A")))) :arg2 (s2 / spokesman))) :op2 (p2 / person :arg0-of (h2 / have-org-role-91 :arg1 (o / organization) :arg2 (s3 / spokesman))) :op3 (p3 / person :arg0-of (h3 / have-org-role-91 :arg1 (o2 / organization) :arg2 (s4 / spokesman))) :op4 (p4 / person :arg0-of (h4 / have-org-role-91 :arg1 (o3 / organization) :arg2 (s5 / spokesman))) :op5 (p5 / person :arg0-of (h5 / have-org-role-91 :arg1 (o4 / organization) :arg3 (i / inspect-01)))) :arg1 (l / lose-02 :arg0 (p6 / person :quant 10 :arg1-of (i2 / include-91 :arg2 (c3 / citizen :mod (c4 / country)))) :arg1 (l2 / life :poss (p7 / person)) :time (e / explode-01 :location (j / jail :location (j2 / jail :location (c5 / country)))) :time (y / yet)))
(m / measure-02 :arg1 (o / oppose-01 :arg1 (f / feto :location (m2 / macedonia))))
(m / multi-sentence :snt1 (s / say-01 :mode (i / interrogative) :arg0 (w / we) :arg1 (w2 / win-01 :arg0 (p / party :mod (a / ak)))) :snt2 (p2 / possible-01 :polarity - :arg1 (w3 / win-01 :arg0 (p3 / party :name (n / name :op1 (' / '))) :location (o / outside :op1 (r / river :name (n2 / name :op1 "N-A"))))))
(a / and :op1 (p / possible-01 :polarity - :arg1 (a2 / and :op1 (t / take-01 :arg0 (p2 / person :arg0-of (t2 / take-01 :arg1 (p3 / place :ord (o / ordinal-entity :value 11)) :location (s / series :poss (s2 / she)))) :arg1 (p4 / place :ord (o2 / ordinal-entity :value 11)) :location (s3 / series :poss (s4 / she))) :op2 (p5 / possible-01 :polarity - :arg1 (q / qualified :arg1 (s5 / sportswoman :mod (n / nation)) :arg2 (f / final))))) :op2 (b / bid :arg1 (s6 / sportswoman :mod (n2 / nation)) :arg2 (o3 / olympics)))
(c / charge-05 :arg1 (p / person :quant 1 :arg1-of (i / include-91 :arg2 (p2 / person :arg0-of (l / license-01 :arg1 (f / fifa)) :poss (w / we)))) :arg2 (w2 / whistle :arg0 (p3 / person) :arg1 (m / match-03 :mod (b / brazil-colombia)) :arg1-of (c2 / cause-01 :arg0 (o / olympics :arg1 (m2 / match-03 :quant 2016 :location (c3 / country :name (n / name :op1 "N-A")))))))
(u / undertakes :arg0 (a / and :op1 (p / person :arg0-of (h / have-org-role-91 :arg1 (p2 / person :arg0-of (h2 / have-org-role-91 :arg1 (e / elite :mod (e2 / elite :mod (u2 / uefa))) :arg2 (m / member))) :arg2 (m2 / member))) :op2 (p3 / person :arg0-of (h3 / have-org-role-91 :arg1 (d / duty :poss (p4 / person)) :arg2 (m3 / member))) :op3 (d2 / duty :poss (p5 / person))) :arg1 (d3 / duty :poss (p6 / person)) :time (f / final :ord (o / ordinal-entity :value (n / ninth) :range (c / career :poss (p7 / person)))))
(e / explain-01 :arg2 (p / person :name (n / name :op1 "zekeriya" :op2 "Öz")))
(a / and :op1 (p / politics) :op2 (c / commerce) :op3 (t / transport-01) :op4 (e / energy) :op5 (e2 / energy))
(s / shout-01 :arg0 (i / i))
(s / say-01 :arg0 (i / i) :arg1 (c / complainant :polarity - :domain (i2 / i)))
(f / fight-01 :arg0 (c / child :quant 1 :arg1-of (i / include-91 :arg2 (c2 / child :mod (t / this)))) :arg2 (l / life :poss (c3 / child)))
(h / have-03 :arg0 (m / motor :name (n / name :op1 (m2 / middleweight) :op2 (m3 / middleweight)) :mod (n2 / new) :mod (t / this)) :arg1 (f / features :quant (m4 / many) :arg0-of (u / uncovered :arg1 (p / potential :arg1-of (t2 / touring :mod (r / real))) :manner (a / add-02 :arg0 (m5 / motor) :arg1 (i / improve-01 :arg1 (a2 / and :op1 (c / chassis) :op2 (s / suspend-01)) :arg1-of (s2 / special-02))))))
(m / multi-sentence :snt1 (d / determine-01 :mode (i / interrogative) :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (p2 / person :arg0-of (h2 / have-org-role-91 :arg2 (p3 / person :arg0-of (i2 / inspect-01 :arg1 (t / tax-01))))) :arg2 (p4 / person :arg0-of (i3 / inspect-01 :arg1 (t2 / tax-01))))) :arg1 (p5 / person :arg0-of (h3 / have-org-role-91 :arg2 (p6 / person :arg0-of (i4 / inspect-01 :arg1 (t3 / tax-01)))))) :snt2 (c / close-01 :arg0 (p7 / person :arg0-of (h4 / have-org-role-91 :arg1 (t4 / tax-01) :arg3 (i5 / inspect-01))) :arg1 (s / school :arg1-of (c2 / close-01 :arg0 (p8 / person :arg0-of (h5 / have-org-role-91 :arg1 (t5 / tax-01) :arg3 (i6 / inspect-01)))) :arg1-of (c3 / close-01 :arg0 (p9 / person :arg0-of (h6 / have-org-role-91 :arg1 (t6 / tax-01) :arg3 (i7 / inspect-01))))) :location (m2 / ministry :topic (i8 / inspect-01 :arg1 (t7 / tax-01))) :location (s2 / scope :poss (i9 / investigate-01 :arg0 (p10 / person :arg0-of (h7 / have-org-role-91 :arg1 (m3 / ministry :topic (t8 / tax-01))))))))
(d / disease :domain (d2 / disease :arg1-of (i / increase-01 :time (y / year :mod (r / recent)))))
(a / and :op1 (c / cut-02 :arg0 (g / government-organization :arg0-of (g2 / govern-01 :arg1 (f / federal))) :arg1 (r / rate-entity-91 :arg1 30 :arg2 (t / temporal-quantity :quant (N / N-A) :unit (y / year))) :arg3 (r2 / rate-entity-91 :arg1 30 :arg2 (t2 / temporal-quantity :quant (N2 / N-A) :unit (y2 / year)))) :op2 (f2 / force-01 :arg1 (g3 / government-organization :arg0-of (g4 / govern-01) :mod (f3 / federal)) :arg2 (q / queenslanders :arg1 (p / problem :arg1-of (v / vulnerable :degree (m / more))) :arg2 (p2 / problem :arg1-of (l / legal-02)) :manner (h / help-01 :polarity -))))
(s / state-01 :arg0 (i / i) :arg1 (a / and :op1 (b / be-located-at-91 :arg1 (a2 / and :op1 (t / they) :op2 (p / person :location (v / village))) :arg2 (m / much :degree (v2 / very))) :op2 (t2 / thanked :arg0 (e / everyone :arg0-of (c / contribute-01 :arg1 (e2 / effort :poss (a3 / and)))) :arg1 (a4 / and :op1 (t3 / they) :op2 (p2 / person :location (v3 / village))))))
(m / multi-sentence :snt1 (c / continue-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg2 (m2 / minister :mod (p2 / prime)))) :arg1 (f / follow-02 :arg1 (p3 / person :arg0-of (h2 / have-org-role-91 :arg2 (m3 / minister :mod (p4 / prime)))) :time (i / immediate))) :snt2 (a / and :op1 (g / get-05 :arg1 (w / we) :arg2 (o / over :op1 (i2 / impact-01 :arg1 (i3 / incident :mod (t / this)))) :time (i4 / immediate)) :op2 (l / look-01 :arg0 (w2 / we) :time (a2 / ahead))))
(p / phone-number-entity :value (N / N-A))
(n / newspaper :quant 25 :arg1-of (d / die-01))
(d / design-01 :arg1 (m / model) :arg3 (d2 / determine-01 :arg0 (m2 / model) :arg1 (o / or :mode (i / interrogative) :op1 (h / hot :arg1 (m3 / model)) :op2 (v / venus :polarity - :arg1 (m4 / model)) :op3 (a / atmosphere :arg1 (m5 / model)) :op4 (a2 / atmosphere :mod (c / co2-chocked)) :time (o2 / once))))
(b / burn-01 :arg1 (a / and :op1 (e / evaporated :poss (i / it)) :op2 (v / vapor :arg1 (w / water :poss (i2 / it)))) :manner (l / light :mod (u / ultraviolet)))
(m / multi-sentence :snt1 (m2 / make-02 :arg0 (c / connect-01 :arg1 (h / he) :arg2 (c2 / connect-01 :arg1 (h2 / he) :arg2 (f / family))) :arg1 (w / we) :time (a / always)) :snt2 (s / say-01 :arg0 (p / person :arg0-of (h3 / have-org-role-91 :arg2 (g / galicia :mod (l / louis)))) :arg1 (w2 / we)))
(s / say-01 :arg1 (f / fear-01 :arg0 (y / you) :arg1 (c / change-01 :arg1 (r / regime) :arg1-of (c2 / cause-01 :arg0 (f2 / fear-01 :arg0 (i / it) :arg1 (c3 / change-01 :arg1 (r2 / regime)))))) :arg2 (m / mind :arg1-of (g / give-01 :arg0 (y2 / you))))
(c / contrast-01 :arg2 (g / good :degree (m / more) :domain (t / talk-01 :arg0 (p / person :quant 2 :arg0-of (l / lead-02)) :mod (a / at-least)) :arg1-of (s / sure-02) :time (a2 / after :op1 (a3 / and :op1 (t2 / temporal-quantity :quant (N / N-A) :unit (m2 / month)) :op2 (t3 / temporal-quantity :quant (N2 / N-A) :unit (m3 / month))))))
(c / contrast-01 :arg2 (t / think-01 :arg0 (i / i) :arg1 (s / see-01 :arg0 (y / you) :arg1 (s2 / see-01 :arg0 (y2 / you) :arg1 (c2 / change-01 :quant (l / lot)))) :arg1-of (c3 / cause-01 :arg0 (w / work-01))))
(s / say-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (w / website :mod (k / kremlin)) :arg2 (i / ivanov))) :arg1 (t / true :domain (a / ask-01 :arg0 (i2 / i) :arg1 (a2 / and :op1 (a3 / ask-01 :arg0 (i3 / i) :arg1 (p2 / post :arg1-of (c / complicate-01 :degree (v / very)) :mod (t2 / this))) :op2 (p3 / possible-01 :arg1 (s2 / say-01 :arg0 (y / you) :arg1 (p4 / post :mod (t3 / troublesome) :mod (t4 / troublesome)) :duration (t5 / temporal-quantity :quant (N / N-A) :unit (y2 / year))) :time (c2 / converse-01)) :time (c3 / converse-01 :arg0 (i4 / i) :arg2 (w2 / website :mod (k2 / kremlin)))))) :medium (w3 / website :mod (k3 / kremlin)))
(r / return :arg1 (s / show-04) :purpose (r2 / return-01 :arg1 (s2 / show-04) :arg3 (s3 / season :quant 28 :mod (s4 / season :ord (o / ordinal-entity :value 12)))))
(a / and :op1 (j / join-01 :arg0 (p / person :arg0-of (e / engineer-01)) :arg1 (a2 / and :op1 (p2 / person :arg0-of (h / have-org-role-91 :arg2 (p3 / president :mod (v / vice)))) :op2 (p4 / person :arg0-of (h2 / have-org-role-91 :arg2 (v2 / viaduct))) :op3 (p5 / person :arg0-of (h3 / have-org-role-91 :arg2 (v3 / viaduct))) :op4 (p6 / person :arg0-of (h4 / have-org-role-91 :arg2 (v4 / viaduct))) :op5 (p7 / person :arg0-of (h5 / have-org-role-91 :arg2 (v5 / viaduct))))) :op2 (c / connect-01 :arg1 (p8 / person) :arg2 (f / fife :arg1 (b / bridge)) :time (n / now)))
(h / have-rel-role-91 :arg0 (p / person :mod (s / some)) :arg1 (p2 / person :mod (n / new)) :arg2 (f / friend :mod (n2 / new)) :mod (e / even))
(b / bad-02 :mod (a / all))
(c / contrast-01 :arg2 (m / meet-03 :arg0 (h / he) :arg1 (p / person :quant (s / some)) :manner (s2 / slow)))
(a / and :op1 (t / talk-01 :arg0 (w / we) :arg2 (c / committee :mod (j / junior) :arg0-of (h / have-org-role-91 :arg1 (d / doctor) :arg2 (m / member))) :time (b / before :op1 (n / now) :duration (t2 / temporal-quantity :quant (N / N-A) :unit (m2 / month)))) :op2 (r / respond-01 :arg0 (w2 / we) :arg1 (c2 / concern-01 :arg0 (d2 / department :part-of (a2 / and :op1 (h2 / health) :op2 (o / other)))) :arg2 (c3 / concern-01 :arg0 (a3 / and) :arg1 (a4 / and :op1 (r2 / role :mod (g / guardian)) :op2 (w3 / whistleblowing)))))
FAILED_TO_PARSE#Two concepts in a row.
(h / hail-02 :arg1 (p / person :arg0-of (s / say-01 :arg1 (m / make-01 :arg1 (l / life :poss (p2 / person))))) :arg2 (h2 / hell :arg0-of (l2 / live-01)))
(c / contrast-01 :arg2 (i / important :domain (a / amr-unknown) :topic (r / record) :arg1-of (a2 / allege-01)))
(i / iced :arg0 (v / viliame :name (n / name :op1 (f / fijian) :op2 (c / cake) :op3 (i2 / ice) :op4 (i3 / ice) :op5 (i4 / ice) :op6 (i5 / ice) :op7 (i6 / ice))) :arg1 (n2 / need-01 :arg1 (i7 / icing :mod (a / another)) :time (m / moment :mod (d / die-01))))
(w / want-01 :arg0 (i / i) :arg1 (s / say-01 :arg0 (i2 / i) :arg1 (r / race :mod (l / last) :poss (i3 / i) :domain (t / this)) :degree (t2 / total)))
(a / and :op1 (r / run :arg0 (s / she) :arg1 (s2 / side :mod (l / left) :part-of (f / field)) :arg1-of (l2 / long-03)) :op2 (c / curled :arg0 (s3 / she) :arg1 (b / ball :mod (l3 / left)) :time (m / middle)) :op3 (w / whipped :arg0 (s4 / she) :arg1 (b2 / ball) :purpose (g / give-01 :arg0 (s5 / she) :arg1 (l4 / lead-01 :arg0 (p / person :mod (c2 / country :name (n / name :op1 "N-A"))) :mod (2 / 2-0)))))
(s / say-01 :arg0 (p / person :arg0-of (a / analyze-01)) :arg1 (a2 / and :op1 (s2 / say-01 :arg0 (p2 / person :arg0-of (a3 / analyze-01)) :arg1 (l / legalize-01 :arg0 (p3 / person) :arg1 (i / ingredient :mod (d / discontent) :consist-of (d2 / discontent)) :mod (e / especially))) :op2 (u / use-01 :arg0 (p4 / person) :arg1 (p5 / person :arg0-of (o / oppose-01 :arg1 (d3 / defang))) :arg2 (p6 / person :arg0-of (o2 / oppose-01)))))
(s / say-01 :arg0 (p / photo) :arg1 (w / want-01 :arg0 (p2 / photo) :arg1 (a / and :op1 (e / experiment-01 :arg0 (h / he) :arg1 (i / ingredient :mod (n / new))) :op2 (i2 / introduce-02 :arg0 (h2 / he) :arg1 (i3 / ingredient :mod (n2 / new))))))
(s / say-01 :arg1 (a / and :op1 (p / popular-02 :polarity - :arg1 (i / it) :arg2 (t / table :mod (d / dinner))) :op2 (s2 / say-01 :arg0 (p2 / person :arg0-of (h / have-org-role-91 :arg1 (m / mr.) :arg2 (c / coe))) :arg1 (i2 / it))) :arg2 (p3 / person :name (n / name :op1 "N-A")))
(a / abandon-01 :arg1 (w / way :quant (m / many) :arg1-of (i / include-91 :arg2 (w2 / way :mod (f / food) :mod (d / depression-era)))) :time (a2 / as-soon-as :op1 (g / get-05 :arg1 (c / country) :arg2 (f2 / foot :part-of (c2 / country)) :direction (b / back))))
(r / reduce-01 :arg0 (r2 / reduce-01 :arg1 (r3 / rate :mod (i / interest))) :arg1 (s / sell-01) :manner (p / positive))
(a / and :op1 (a2 / attend-02 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg2 (p2 / president))) :arg1 (a3 / appeal-01) :manner (c / close)) :op2 (r / reduce-01 :arg0 (p3 / person) :arg1 (r2 / rate :mod (i / interest))))
(s / send-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (b / bank :arg1-of (p2 / public-02)) :arg2 (f / friend))) :arg1 (m / message) :arg2 (i / i))
(s / say-01 :arg0 (h / he) :arg1 (r / receive-01 :arg0 (h2 / he) :arg1 (i / information :mod (t / this)) :arg1-of (c / cause-01 :arg0 (r2 / relate-01 :arg1 (j / job :poss (h3 / he)) :arg2 (l / loan-01 :arg1-of (p / personal-02))))))
(t / talk-01 :arg0 (i / i) :arg1 (t2 / talk-01 :arg0 (w / we) :arg2 (p / person :arg0-of (p2 / participate-01 :arg1 (s / summit :mod (c / construct-01))) :arg0-of (p3 / participate-01 :arg1 (w2 / week :mod (o / one))))) :time (w3 / week :mod (o2 / one)) :time (a / after :op1 (a2 / attempt-01 :arg0 (c2 / coup :mod (t3 / terrorism) :mod (t4 / terrorism)) :arg1 (j / july :quant 15))))
(m / multi-sentence :snt1 (s / say-01 :arg0 (w / we) :arg1 (a / and :op1 (b / bring-01 :arg0 (p / person :arg0-of (b2 / bring-01 :arg1 (c / complain-01 :mod (k / kind :mod (t / this))))) :arg1 (c2 / complain-01 :arg0 (p2 / person) :mod (k2 / kind :mod (t2 / this)))) :op2 (a2 / apply-01 :arg0 (p3 / person) :arg2 (w2 / we)))) :snt2 (m2 / make-01 :arg0 (w3 / we) :arg1 (a3 / apply-01 :arg1 (c3 / complain-01 :arg0 (a4 / and :op1 (b3 / bank) :op2 (c4 / company))))))
(a / and :op2 (p / possible-01 :arg1 (p2 / possible-01 :arg1 (o / or :op1 (e / extend-01 :arg1 (s / season) :arg4 (e2 / end-01 :arg1 (c / company :name (n / name :op1 "N-A")))) :op2 (e3 / extends :arg1 (s2 / season) :mod (e4 / even))))))
(s / stop-01 :arg1 (a / agree-01 :arg0 (h / he) :arg2 (t / team :mod (a2 / another))) :condition (a3 / agree-01 :arg0 (h2 / he) :arg2 (t2 / team :mod (a4 / another))))
(c / casualty :domain (a / and :op1 (e / erkin) :op2 (e2 / erkin) :op3 (l / luis)) :time (w / war-01))
(f / fenerbahçe :arg1 (s / see-01 :arg1 (p / pereira :arg1 (p2 / pereira))))
(a / and :op1 (o / obtain-01 :arg1 (w / win-01) :time (a2 / after :op1 (n / now) :quant (t / temporal-quantity :quant (N / N-A) :unit (m / minute)))) :op2 (s / split-01 :arg1 (s2 / split-01 :quant 46) :time (a3 / after :op1 (n2 / now) :quant (t2 / temporal-quantity :quant (N2 / N-A) :unit (s3 / second))) :location (s4 / stroke :quant 200 :name (n3 / name :op1 (b / butterfly) :op2 (s5 / stroke) :op3 (s6 / stroke) :op4 (s7 / stroke) :op5 (s8 / stroke) :op6 (s9 / stroke) :op7 (s10 / stroke)) :arg1-of (s11 / see-01 :arg0 (p / person :mod (c / country :name (n4 / name :op1 "N-A")))))))
(t / think-01 :arg0 (i / i) :arg1 (a / and :op1 (b / become-01 :arg1 (p / person :quant 10-15 :arg1-of (i2 / include-91 :arg2 (p2 / person :arg0-of (h / have-rel-role-91 :arg1 (i3 / i) :arg2 (f / friend))))) :arg2 (o / office :mod (a2 / army) :arg1-of (r / regular-03))) :op2 (f2 / feel-01 :arg0 (i4 / i) :arg1 (c / comfort :mod (k / kind) :time (t2 / think-01 :arg0 (i5 / i) :arg1 (k2 / kill-01 :arg0 (p3 / person) :arg1 (w / we) :time (o2 / or :op1 (s / soon :degree (m / more)) :op2 (l / late :degree (m2 / more)))))))))
(w / write-01 :arg0 (i / it) :arg1 (m / move :polarity - :location (s / screens :quant (a / all))) :manner (w2 / way :mod (t / this)))
(r / respond-01 :arg1 (c / commit-02 :arg0 (h / he) :arg1 (s / suicide) :manner (h2 / hold-01 :arg0 (h3 / he) :arg1 (g / gun) :arg4 (h4 / head :part-of (h5 / he)))) :manner (r2 / respond-01 :arg0 (i / i)))
FAILED_TO_PARSE#Two concepts in a row.
(s / state-01 :arg0 (p / person :arg0-of (r / reside-01) :arg1-of (n / neighbor-01)) :arg1 (l / leave-11 :arg0 (w / woman) :arg1 (h / house) :arg1-of (c / cause-01 :arg0 (a / and :op1 (o / oppress-01 :arg0 (p2 / person :arg0-of (o2 / oppress-01 :arg1 (p3 / person :arg0-of (h2 / have-rel-role-91 :arg1 (p4 / person) :arg2 (h3 / husband))))) :location (a2 / around :op1 (t / thing :arg2-of (s2 / shelter-01 :arg3 (w2 / woman)))) :time (b / before :op1 (n2 / now) :quant (t2 / temporal-quantity :quant (N / N-A) :unit (m / month)))) :op2 (c2 / consult-01 :arg0 (w3 / woman) :arg1 (w4 / woman))))))
(p / possible-01 :arg1 (c / check-out-05 :arg0 (c2 / citizen :poss (w / we)) :arg1 (v / vaccinations :location (a / animal)) :time (b / buy-01 :arg0 (c3 / citizen) :arg1 (a2 / animal :mod (s / sacrificial)))))
(p / put-03 :arg1 (s / shoot-02 :arg1 (w / woman)) :arg2 (q / qualification) :arg1-of (c / cause-01 :arg0 (o / organize-01 :arg1 (m / match-03 :mod (o2 / olympic) :arg1-of (o3 / organize-01 :location (s2 / stadium :name (n / name :op1 (d / de) :op2 (d2 / de) :op3 (j / janeiro)))) :mod (o4 / olympic)))))
(s / share-01 :arg1 (t / thing :arg1-of (f / follow-01) :arg1-of (o / opine-01 :location (a / article :part-of (h / he)))))
(a / add-01 :arg0 (h / he) :arg1 (h2 / have-part-91 :arg1 (t / thing :arg1-of (f / find-out-03 :arg0 (w / we) :time (u / until :op1 (n / now)))) :arg2 (p / part :arg1-of (f2 / find-out-03 :arg0 (w2 / we) :time (u2 / until :op1 (n2 / now))))))
(s / strengthen-01 :arg0 (c / coup :mod (c2 / coup)) :arg1 (p / position :poss (c3 / coup)) :time (o / over :op1 (t / temporal-quantity :quant (N / N-A) :unit (y / year))))
(f / follow-01 :arg1 (s / state-01 :arg0 (o / office :poss (p / person :arg0-of (h / have-org-role-91 :arg3 (j / judge-01))))) :arg2 (a / arrest-01 :arg1 (p2 / person :arg0-of (h2 / have-org-role-91 :arg1 (o2 / organization :mod (t / terrorism)) :arg2 (m / member))) :arg2 (m2 / member :arg2-of (h3 / have-org-role-91 :arg1 (o3 / organization :arg0-of (h4 / have-org-role-91 :arg1 (o4 / organization :mod (t2 / terrorism)) :arg2 (m3 / member)))) :arg0-of (h5 / have-org-role-91 :arg1 (o5 / organization) :arg2 (m4 / member)) :arg0-of (h6 / have-org-role-91 :arg1 (o6 / organization) :arg2 (m5 / member)) :arg0-of (h7 / have-org-role-91 :arg1 (o7 / organization) :arg2 (m6 / member)) :arg0-of (h8 / have-org-role-91 :arg1 (o8 / organization) :arg2 (m7 / member)) :arg0-of (h9 / have-org-role-91 :arg1 (o9 / organization) :arg2 (m8 / member)))))
(i / issue-02 :arg0 (b / between :op1 (t / turkey) :op2 (c / country :name (n / name :op1 "N-A"))) :quant (m / many))
(a / and :op1 (a2 / agree-01 :arg0 (w / we) :arg1 (t / topic :quant (m / many) :example (a3 / and :op1 (i / integrity :mod (t2 / territory) :poss (c / country :name (n / name :op1 "Syria"))) :op2 (i2 / integrity :mod (b / border)) :op3 (i3 / integrity :mod (b2 / border)) :op4 (s / syria :arg1 (a4 / and :op1 (o / organization :mod (d / daesh) :mod (o2 / other)) :op2 (o3 / organization :mod (o4 / other) :mod (t3 / terrorist))))))) :op2 (h / have-03 :arg0 (w2 / we) :arg1 (g / government-organization :arg0-of (g2 / govern-01) :mod (i4 / inclusive))))
(f / find-01 :arg1 (m / material :arg1-of (r / resemble-01 :arg2 (a / and :op1 (f2 / fluid) :op2 (t / toys) :op3 (f3 / firecracker) :op4 (t2 / tape) :op5 (e / et-cetera)))) :location (b / bag))
(r / report)
(n / name-02 :arg1 (t / this) :arg2 (a / and :op1 (v / vein :arg1-of (d / deep-02)) :op2 (u / url-entity :value (f / femoral))))
(d / demonstrate-01 :arg1 (p / possible-01 :polarity - :arg1 (i / imagine-01 :arg1 (f / feat :arg0 (h / he) :arg1 (f2 / feat :mod (w / win-01 :arg0 (h2 / he) :arg1 (g / golds :quant 3 :mod (o / olympic)) :arg2 (g2 / game :quant 1)))))) :manner (d2 / demonstrate-01 :mod (f3 / form) :mod (f4 / form)))
(p / possible-01 :arg1 (b / be-located-at-91 :arg1 (j / job :quant 2000) :arg2 (r / risk-01 :arg2 (p2 / plant :mod (p3 / portland) :poss (c / country :name (n / name :op1 "N-A"))))))
(a / and :op1 (l / lose-02 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (o / organization :name (n / name :op1 "alcoa")) :arg2 (s / smelter))) :arg1 (m / money)) :op2 (r / risk-01 :arg0 (p2 / person) :arg2 (c / closure)))
(a / and :op1 (p / performed :arg0 (w / we) :arg1 (w2 / work-01 :arg0 (w3 / we))) :op2 (g / get-01 :arg0 (w4 / we) :arg1 (h / house :quant (a2 / all) :location (a3 / and :op1 (p2 / painted :arg1 (c / canköy)) :op2 (b / blue :name (n / name :op1 (b2 / blue)))))))
(c / contrast-01 :arg2 (a / and :op1 (e / enter-01 :arg0 (t / team) :arg1 (d / door :part-of (p / person :arg0-of (h / have-org-role-91 :arg1 (p2 / police) :arg2 (o / officer))))) :op2 (t2 / try-01 :arg0 (t3 / team) :arg1 (e2 / escape-01 :arg0 (o2 / officer)))) :time (e3 / enter-01 :arg0 (t4 / team) :arg1 (r / restaurant)))
(d / die-01 :arg1 (o / officer :quant 1 :mod (p / police) :arg0-of (h / have-org-role-91 :arg1 (p2 / police) :arg2 (o2 / officer))) :arg1-of (c / cause-01 :arg0 (a / attack-01)))
(p / possible-01 :arg1 (c / call-03 :arg0 (n / no-one) :arg1 (a / account-01 :arg0 (n2 / no-one) :arg1 (t / thing :manner-of (u / use-01 :arg1 (f / fund))))))
(s / say-01 :arg0 (h / he) :arg1 (a / and :op1 (a2 / act-02 :arg0 (w / we) :arg1-of (s2 / sure-02)) :op2 (a3 / act-01 :arg0 (w2 / we) :arg1 (a4 / and :op1 (p / principle :mod (d / democracy)) :op2 (l / law :mod (l2 / law))) :time (d2 / do-02 :arg0 (w3 / we) :arg1 (t / this :mod (a5 / all)))) :arg1-of (s3 / sure-02)))
(a / and :op1 (w / wrong-02 :arg1 (d / doubters) :arg2 2012) :op2 (p / prove-01 :arg1 (w2 / wrong-02 :arg1 (d2 / doubters) :arg2 (h / heathrow))))
(p / project :mod (i / infrastructure) :domain (p2 / project :mod (i2 / infrastructure) :beneficiary (m / many)) :arg1-of (r / resemble-01 :polarity - :arg2 (f / few :op1 (f2 / few :op1 (t / temporal-quantity :quant (N / N-A) :unit (m2 / month)) :mod (j / just)))))
(a / account-01 :arg0 (a2 / and :op1 (p / person :arg0-of (u / use-01 :arg1 (d / device :arg1-of (m / mobile-02)))) :op2 (p2 / person :arg0-of (u2 / use-01 :arg1 (d2 / device :arg1-of (m2 / mobile-02))))) :arg1 (r / rate-entity-91 :arg1 (r2 / revenue :poss (c / company :name (n / name :op1 "Facebook"))) :arg2 (r3 / rate-entity-91 :arg1 (r4 / revenue :poss (c2 / company)) :arg2 (r5 / rate-entity-91 :arg1 84 :arg2 (t / temporal-quantity :quant (N / N-A) :unit (y / year))))) :time (n2 / now))
(c / contrast-01 :arg1 (i / interview-01 :arg1 (p / person :arg0-of (d / drive-01) :arg1-of (i2 / involve-01) :quant (s / several)) :time (a / already)) :arg2 (s2 / say-01 :arg0 (p2 / police :arg1-of (i3 / identify-01 :polarity -)) :arg1 (a2 / and :op1 (p3 / person :arg0-of (c2 / call-03 :arg1 (t / they)) :arg0-of (c3 / call-03 :arg1 (i4 / incident))) :op2 (a3 / anyone :mod (e / else) :arg0-of (w / witness-01 :arg1 (i5 / incident))))))
(c / contrast-01 :arg1 (g / guide-01 :arg0 (h / he) :arg1 (c2 / club) :arg2 (a / and :op1 (p / point :mod 112) :op2 (f / finish-07 :arg0 (h2 / he) :arg2 (d / division :mod (c3 / central)) :location (d2 / division :mod (c4 / central))))) :arg2 (a2 / and :op1 (u / upset-01 :arg0 (m / minnesota :location (r / round :ord (o / ordinal-entity :value 1) :part-of (p2 / playoffs))) :arg1 (c5 / colorado)) :op2 (m2 / miss-02 :arg0 (h3 / he) :arg1 (p3 / postseason :location (e / each)) :time (b / before :op1 (n / now) :duration (t / temporal-quantity :quant (N / N-A) :unit (y / year))))))
(m / multi-sentence :snt1 (s / say-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg2 (g / galicia))) :arg1 (s2 / stay-01 :arg1 (f / frank) :location (h2 / hostels) :time (i / initial))) :snt2 (c / contrast-01 :arg2 (g2 / go-01 :arg1 (t / thing :mod (' / '')) :arg4 (h3 / he) :mod (w / well) :time (r / recent))))
(s / say-01 :arg0 (p / person :name (n / name :op1 "jeremy" :op2 "hunt") :arg0-of (h / have-org-role-91 :arg2 (s2 / secretary :mod (h2 / health)))) :arg1 (i / impose-01 :arg1 (c / contract-02) :arg2 (m / medic :arg1 (c2 / contract-02))))
(p / possible-01 :polarity - :arg1 (t / trust :arg1 (t2 / trust-01 :mod (r / real)) :arg1-of (p2 / possible-01)))
(t / think-01 :arg1 (p / possible-01 :arg1 (b / become-01 :arg1 (p2 / person :arg0-of (h / have-org-role-91 :arg2 (p3 / president :mod (v / vice)))) :arg2 (p4 / person :arg0-of (h2 / have-org-role-91 :arg2 (p5 / president))) :time (a / after :op1 (m / mr :arg0 (p6 / person) :arg1 (t2 / term :ord (o / ordinal-entity :value 2)) :arg1-of (c / cause-01 :arg0 (t3 / term :ord (o2 / ordinal-entity :value 3) :mod (t4 / term :ord (o3 / ordinal-entity :value 3)))))))) :time (o4 / once))
(b / become-01 :arg1 (p / person :arg0-of (h / have-org-role-91 :arg2 (m / minister :mod (p2 / prime)))) :arg2 (p3 / person :arg0-of (h2 / have-org-role-91 :arg2 (m2 / minister :mod (p4 / prime)))) :time (b2 / before :op1 (r / return-01 :arg1 (p5 / person) :arg4 (p6 / presidency) :time (l / late :op1 (t / temporal-quantity :quant (N / N-A) :unit (y / year) :mod (j / just)) :degree (m3 / more)))))
FAILED_TO_PARSE#Two concepts in a row.
(c / contrast-01 :arg1 (r / revenge :domain (p / perform-02 :arg0 (c2 / country :name (n / name :op1 "N-A"))) :quant (b / bit) :time (b2 / before :op1 (n2 / now) :quant (u / up-to :op1 (t / temporal-quantity :quant (N / N-A) :unit (y / year))))) :arg2 (l / lose-02 :arg0 (b3 / bronze :arg1 (b4 / bronze)) :arg1 (b5 / bronze) :arg4 (t2 / tiebreaker)))
(c / call-03 :arg0 (p / person :name (n / name :op1 "daniel" :op2 "mortimer") :arg0-of (h / have-org-role-91 :arg1 (r / revenue :mod (n2 / nhs)) :arg2 (e / executive :mod (c2 / chief)))) :arg1 (g / go-02 :polarity - :arg0 (d / doctor) :arg4 (a / ahead) :prep-with (s / strike-01 :mod (a2 / any))))
(a / amr-unknown :manner-of (d / defend-01))
(j / judge-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg2 (p2 / person :arg0-of (h2 / have-org-role-91 :arg3 (j2 / judge-01))))) :arg1 (c / court :mod (c2 / country :name (n / name :op1 "N-A")) :arg2-of (a / appeal-01)) :arg2 (c3 / court :mod (c4 / country :name (n2 / name :op1 "N-A"))) :arg3 (c5 / court :mod (c6 / country)))
(d / do-02 :arg0 (i / i) :arg1 (t / this) :arg2 (w / woman))
(a / and :op1 (b / be-located-at-91 :arg1 (p / place :quant 1 :arg1-of (i / include-91 :arg2 (p2 / place :arg1-of (t / threaten-01 :arg2 (e / ethnic-group :name (n / name :op1 "N-A")))))) :arg2 (p3 / person :arg0-of (h / have-rel-role-91 :arg1 (k / kid) :arg2 (k2 / kid)))) :op2 (p4 / provide-01 :arg0 (k3 / kid) :arg1 (r / rate-entity-91 :arg1 (d / day :quant 200) :arg2 (t2 / temporal-quantity :quant (N / N-A) :unit (d2 / day)))) :op3 (a2 / advise-01 :arg0 (k4 / kid) :arg1 (a3 / and :op1 (c / class :mod (c2 / country)) :op2 (c3 / class :mod (c4 / country)))) :op3 (a4 / advise-01 :arg0 (k5 / kid) :arg2 (h2 / hundreds :arg1 (m / minor :mod (v / vulnerable) :mod (v2 / vulnerable)) :location (c5 / camp))))
(m / multi-sentence :snt1 (c / contrast-01 :arg1 (y / yajie :polarity - :mod (c2 / coach) :mod (o / only :polarity -)) :arg2 (c3 / come-01 :arg1 (a / and :op1 (p / person :arg0-of (l / lead-02)) :op2 (p2 / person :arg0-of (l2 / lead-02))) :arg4 (h / home :poss (p3 / person)) :mod (a2 / also))) :snt2 (p4 / persuaded :arg1 (p5 / person :arg0-of (l3 / lead-02 :arg1 (p6 / province))) :arg2 (r / return-01 :arg1 (p7 / person) :arg4 (t / team :poss (p8 / province))) :time (f / final)))
(m / multi-sentence :snt1 (s / say-01 :arg0 (s2 / she) :arg1 (a / and :op1 (p / person :arg0-of (h / have-rel-role-91 :arg1 (s3 / she) :arg2 (d / daughter))) :op2 (p2 / person :arg0-of (h2 / have-rel-role-91 :arg1 (s4 / she) :arg2 (d2 / daughter))) :frequency (o / often))) :snt2 (a2 / and :op1 (g / good :domain (s5 / she) :location (p3 / paint-02)) :op2 (p4 / possible-01 :arg1 (m2 / make-05 :arg0 (p5 / person :arg0-of (h3 / have-rel-role-91 :arg1 (s6 / she) :arg2 (d3 / daughter))) :arg1 (t / toys) :source (f / facial :arg1-of (f2 / facial :arg2 (m3 / male)))))))
(h / have-concession-91 :arg1 (p / possible-01 :arg1 (i / interest-01 :polarity - :arg1 (f / force :mod (a / air)) :arg2 (f2 / force :mod (a2 / air)))) :arg2 (p2 / possible-01 :arg1 (h2 / help-01 :arg0 (m / monkey :arg1-of (s / stable-03) :quant (n / number :mod (l / large))) :arg1 (l2 / listen-01 :arg0 (p3 / person) :arg1 (r / radio :mod (r2 / radio :mod (u / university)))))))
(p / participate-01 :arg0 (a / and :op1 (p2 / person :name (n / name :op1 "li" :op2 "xiaopeng")) :op2 (p3 / person :mod (c / chen) :arg0-of (h / have-org-role-91 :arg2 (c2 / chen))) :op3 (p4 / person :mod (a2 / all) :arg0-of (h2 / have-org-role-91 :arg2 (y / yibing)))) :arg1 (s / show-04 :mod (v / variety) :mod (a3 / altogether)))
(f / follow-01 :arg1 (a / and :op1 (p / person :arg0-of (r / report-01)) :op2 (p2 / person :arg0-of (r2 / report-01)) :op3 (p3 / person :arg0-of (r3 / report-01)) :op4 (p4 / person :arg0-of (r4 / report-01)) :op5 (p5 / person :arg0-of (r5 / report-01))) :arg2 (p6 / person :arg0-of (r6 / report-01) :mod (n / news) :mod (c / country :name (n2 / name :op1 "N-A")) :mod (c2 / country :name (n3 / name :op1 "N-A"))) :purpose (g / go-02 :arg0 (g2 / group) :arg4 (a2 / and :op1 (v / village) :op2 (c3 / city :name (n4 / name :op1 "N-A")) :op3 (c4 / city :name (n5 / name :op1 "N-A")) :op4 (d / district :mod (d2 / donggang)))))
(m / multi-sentence :snt1 (b / be-located-at-91 :arg1 (v / village) :arg2 (a / area :mod (r / remote)) :location (a2 / area :mod (r2 / remote)) :location (a3 / area :mod (r3 / remote))) :snt2 (c / cause-01 :arg0 (t / this) :arg1 (i / inconveniences :quant (m2 / many) :arg1-of (c2 / cause-01 :arg0 (a4 / and :op1 (e / economy) :op2 (t2 / transport-01) :op3 (l / limit-01 :mod (p / physical)))))))
(p / provide-01 :arg0 (t / team :arg0-of (s / serve-01)) :arg1 (a / and :op1 (s2 / service :mod (m / medication)) :op2 (s3 / service :mod (u / ultrasound-b))) :arg2 (a2 / and :op1 (v / village :mod (a3 / another)) :op2 (v2 / village :name (n / name :op1 (z / zi) :op2 (z2 / zi) :op3 (v3 / village) :op4 (v4 / village) :op5 (v5 / village) :op6 (v6 / village) :op7 (v7 / village) :op6 (v8 / village) :op7 (v9 / village)))) :location (v10 / village :mod (t2 / this)))
(m / multi-sentence :snt2 (c / continue-01 :arg1 (a / activity-06 :mod (o / other)) :arg1-of (c2 / cause-01 :arg0 (c3 / continue-01 :arg1 (a2 / activity-06 :mod (o2 / other))))) :li 1)
(c / contrast-01 :arg1 (r / reach-01 :arg0 (g / grow-01 :arg1 (e / economy :poss (c2 / country))) :arg1 (p / percentage-entity :value 7)) :arg2 (r2 / reach-01 :arg0 (i / inflation :poss (c3 / country)) :arg1 (l / level :mod (t / this)) :mod (b / basic)))
(s / show-01 :arg0 (c / ceremony :mod (o / open-02 :arg1 (g / game :mod (y / youth) :ord (o2 / ordinal-entity :value 1) :part-of (g2 / game :mod (y2 / youth) :mod (y3 / youth)))) :ord (o3 / ordinal-entity :value 13)) :arg1 (y4 / youth))
(f / find-02 :arg0 (c / court :mod (c2 / court) :poss (p / person :arg0-of (h / have-org-role-91 :arg2 (c3 / court :mod (d / district))))) :arg1 (f2 / find-02 :arg0 (p2 / person :arg0-of (h2 / have-org-role-91 :arg1 (c4 / court :mod (c5 / country :name (n / name :op1 "N-A"))) :arg3 (l / lead-02 :arg0 (p3 / person)))) :arg1 (s / send-01 :arg0 (d2 / defendant) :arg1 (i / information :topic (d3 / defraud-01)) :arg2 (a / and :op1 (e / equipment :name (n2 / name :op1 (p4 / pseudo-base))) :op2 (e2 / equipment :name (n3 / name :op1 (n4 / nanyang)))) :path (a2 / and :op1 (e3 / equipment :name (n5 / name :op1 (p5 / pseudo-base))) :op2 (e4 / equipment :name (n6 / name :op1 (n7 / nanyang))) :op3 (l2 / lab :location (c6 / county :name (n8 / name :op1 "N-A"))) :op4 (l3 / lab :quant 2009)))))
(a / and :op1 (i / important :degree (g / great) :domain (b / bureau :arg0-of (r / refine-01 :arg1 (s / security :mod (p / public))))) :op2 (o / organize-01 :arg0 (b2 / bureau) :arg1 (d / detachment :consist-of (t / troop :mod (e / elite))) :purpose (i2 / investigate-01 :arg0 (p2 / person :arg0-of (h / have-org-role-91 :arg2 (t2 / troop :mod (e2 / elite))))) :time (i3 / immediate)) :time (a2 / after :op1 (c / case-03)))
(l / lose-02 :arg0 (t / they) :arg1 (g / game :mod (e / every)) :location (s / sevens :mod (a / adelaide)) :time (b / before :op1 (n / now) :quant (m / multiple :op1 (t2 / temporal-quantity :quant (N / N-A) :unit (y / year)))))
(t / touch-01 :arg0 (a / and :op1 (p / person :mod (c / country :name (n / name :op1 "N-A"))) :op2 (p2 / person :mod (c2 / country :name (n2 / name :op1 "N-A")))) :arg1 (b / ball) :mod (h / hardly))
(m / multi-sentence :snt1 (h / have-concession-91 :arg1 (a / and :op1 (p / pull-01 :arg0 (t / they) :arg1 (b / boat :quant 2) :arg2 (b2 / boat :mod (t2 / that))) :op2 (p2 / present :arg0 (e / echo :mod (c / coach) :mod (c2 / coach)) :arg1 (g / gold :mod (c3 / coach) :ord (o / ordinal-entity :value 2)) :time (e2 / ever) :arg1-of (c4 / cause-01 :arg0 (p3 / power-01 :arg0 (t3 / they) :arg1 (g2 / gold :ord (o2 / ordinal-entity :value 2) :ord (o3 / ordinal-entity :value 2) :ord (o4 / ordinal-entity :value 2) :poss (w / woman))))))) :snt2 (s / sport :( (a2 / annals) :poss (s2 / sport :poss (c5 / country))))
(w / write-01 :arg0 (p / person :arg0-of (a / analyze-01 :arg1 (i / intelligence :mod (s / state) :mod (s2 / state)))) :arg1 (d / dispute-01 :arg0 (p2 / person :arg0-of (a2 / analyze-01 :arg1 (i2 / intelligence))) :arg2 (p3 / person :arg0-of (h / have-org-role-91 :arg1 (p4 / person :name (n / name :op1 "George" :op2 "W." :op3 "Bush") :arg0-of (h2 / have-org-role-91 :arg2 (p5 / president))) :arg2 (p6 / person :arg0-of (a3 / analyze-01 :arg1 (i3 / intelligence))))) :time (b / before :op1 (n2 / now) :quant (m / more-than :op1 (t / temporal-quantity :quant (N / N-A) :unit (d2 / decade)))) :time (p7 / person :arg0-of (a4 / analyze-01 :arg1 (i4 / intelligence)) :mod (c / country :name (n3 / name :op1 "N-A")))) :arg0-of (a5 / advocate-01 :arg1 (a6 / advocate-01 :arg0 (g / government-organization :arg0-of (a7 / administrate-01 :arg1 (c2 / country))) :arg1 (f / force :mod (s3 / small) :location (c3 / country))) :arg0-of (a8 / advocate-01 :arg1 (a9 / and :op1 (f2 / force :mod (s4 / small) :location (c4 / country)) :op2 (t2 / time :mod (l / little))))))
(s / say-01 :arg0 (d / data :poss (m / magazine :name (n / name :op1 "N-A"))) :arg1 (a / and :op1 (c / center :arg0 (d2 / data :poss (p / peninsula :name (n2 / name :op1 "N-A"))) :arg1 (c2 / center :mod (m2 / manage-01 :arg1 (h / hospital)) :mod (n3 / number :mod (l / large))) :time (a2 / after :op1 (n4 / now) :quant (u / up-to :op1 (t / temporal-quantity :quant (N / N-A) :unit (y / year)) :mod (j / just)))) :op2 (c3 / cease-01 :arg0 (c4 / company :arg1-of (i / include-91 :arg2 (c5 / company :mod (m3 / medicine) :mod (i2 / internet) :mod (i3 / internet)) :arg3 (a3 / about :op1 (p2 / percentage-entity :value (N2 / N-A))))) :arg1 (e / exist-01))))
(c / compete-01 :arg0 (c2 / covitova) :arg1 (a / and :op1 (e / event :name (n / name :op1 "N-A") :mod (f / final)) :op2 (s / seat :mod (f2 / final) :mod (a2 / another))) :arg2 (a3 / and :op1 (k / keith) :op2 (k2 / kobel)))
FAILED_TO_PARSE#Couldn't convert to full AMR graph.
(a / and :op1 (l / lanzmann :arg0 (p / person :arg0-of (a2 / author-01) :arg0-of (a3 / author-01 :arg1 (h / holocaust))) :arg1 (f / frustrate-01 :arg0 (d / documentary :name (n / name :op1 (' / ''))) :arg1 (h2 / hotel :name (n2 / name :op1 (k / kempinski))) :location (h3 / hotel :name (n3 / name :op1 (k2 / kempinski)) :location (k3 / kempinski)))) :op2 (w / write-01 :arg0 (p2 / person) :arg1 (l2 / letter :arg1-of (o / open-09)) :location (f2 / faz :name (n4 / name :op1 (g / german) :op2 (o2 / outlets) :op3 (o3 / outlets)))))
(c / clashed :arg0 (p / person :arg0-of (s / study-01) :arg0-of (h / have-org-role-91 :arg1 (p2 / police) :arg3 (s2 / study-01))) :arg1 (d / demonstrate-01 :arg0 (p3 / person) :arg1 (r / reform-01 :arg0 (g / government-organization :arg0-of (g2 / govern-01)) :arg1 (s3 / system :mod (e / educate-01) :arg1-of (p4 / public-02)))) :arg2 (p5 / person :arg0-of (s4 / study-01) :location (c2 / city :name (n / name :op1 "N-A") :location (b / brazilian))))
(p / pride-01 :arg0 (a / and :op1 (p2 / person :arg0-of (h / have-org-role-91 :arg1 (f / fellow :poss (h2 / he)) :arg2 (s / scotsman))) :op2 (p3 / person :arg0-of (h3 / have-org-role-91 :arg1 (p4 / political-party :name (n / name :op1 "N-A")))) :op3 (p5 / person :arg0-of (h4 / have-org-role-91 :arg1 (y / youngsters) :arg3 (y2 / youngsters))) :op4 (p6 / person :arg0-of (h5 / have-org-role-91 :arg1 (y3 / youngsters) :arg3 (y4 / youngsters))) :op5 (p7 / person :arg0-of (h6 / have-org-role-91 :arg1 (y5 / youngsters) :arg3 (y6 / youngsters))) :op6 (p8 / person :arg0-of (h7 / have-org-role-91 :arg1 (y7 / youngsters) :arg3 (y8 / youngsters))) :op6 (p9 / person :arg0-of (h8 / have-org-role-91 :arg1 (y9 / youngsters) :arg3 (y10 / youngsters))) :op6 (p10 / person :arg0-of (h9 / have-org-role-91 :arg1 (y11 / youngsters) :arg3 (y12 / youngsters))) :op6 (p11 / person :arg0-of (h10 / have-org-role-91 :arg1 (y13 / youngsters))) :op6 (p12 / person :arg0-of (h11 / have-org-role-91 :arg1 (y14 / youngsters))) :op6 (p13 / person :arg0-of (h12 / have-org-role-91 :arg1 (y15 / youngsters))) :op7 (p14 / person :arg0-of (h13 / have-org-role-91 :arg1 (l / legend)))))
(e / event :quant 1 :mod (g / gold) :beneficiary (n / nation :arg0-of (w / win-01 :arg1 (t / titles :quant 7 :mod (t2 / track)) :arg2 (t3 / titles :quant 10 :mod (t4 / track) :location (a / and :op1 (b / beijing :mod (b2 / both)) :op2 (l / london :mod (b3 / both)))))))
(m / multi-sentence :snt1 (c / cause-01 :arg0 (a / and :op1 (i / imitating :arg0 (p / person :arg0-of (h / have-rel-role-91 :arg1 (p2 / person) :arg2 (p3 / parent))) :arg1 (p4 / person :arg0-of (h2 / have-rel-role-91 :arg1 (p5 / person) :arg2 (p6 / parent)))) :op2 (a2 / affect-01 :arg0 (p7 / person) :arg1 (p8 / person :arg0-of (h3 / have-rel-role-91 :arg1 (p9 / person) :arg2 (p10 / parent))))) :arg1 (a3 / affect-01 :arg0 (a4 / and :op1 (p11 / person :arg0-of (h4 / have-rel-role-91 :arg1 (p12 / person) :arg2 (p13 / parent))) :op2 (p14 / person :arg0-of (h5 / have-rel-role-91 :arg1 (p15 / person) :arg2 (p16 / parent)))) :arg1 (g / grow-01 :arg1 (p17 / person :arg0-of (h6 / have-rel-role-91 :arg1 (p18 / person) :arg2 (c2 / child)))) :arg1-of (c3 / cause-01 :arg0 (i2 / imitating :arg0 (p19 / person) :arg1 (p20 / person :arg0-of (h7 / have-rel-role-91 :arg1 (p21 / person) :arg2 (s / son))))))) :snt2 (s2 / same-01 :arg1 (p22 / person :arg0-of (h8 / have-rel-role-91 :arg1 (y / you) :arg2 (s3 / son))) :arg2 (s4 / same-01 :arg1 (p23 / person))))
(m / multi-sentence :snt1 (h / help-01 :polarity - :arg0 (i / implement-01 :arg1 (m2 / measure-02 :arg1 (p / protect-01 :arg1 (t / trade-01)))) :arg1 (s / solve-01 :arg0 (i2 / implement-01) :arg1 (i3 / issue-02 :arg0 (d / develop-02 :arg1 (i4 / industry :mod (a / aerospace) :mod (a2 / aerospace)) :mod (g / globe))) :manner (f / fundamental))) :snt2 (c / contrary-01))
(m / matter-01 :polarity - :arg1 (t / thing :time-of (j / james :time (s / season :quant 2017-18 :mod (s2 / season)))))
(s / say-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (c / community) :arg2 (d / director)) :arg0-of (h2 / have-org-role-91 :arg1 (c2 / community) :arg2 (d2 / director)) :arg1-of (l / legal-02)) :arg1 (f / find-01 :arg1 (t / thing :arg1-of (r / report-01 :arg0 (c3 / census)) :mod (n / nation) :time (l2 / late :degree (m / most)) :mod (l3 / late :degree (m2 / most)) :poss (r2 / report-01 :arg0 (c4 / census) :arg1-of (l4 / legal-02))) :time (a / already) :time (y / year :mod (e / each) :mod (e2 / each))))
(a / acquit-01 :arg1 (o / officer :arg0-of (h / have-org-role-91 :arg1 (p / police) :arg2 (o2 / officer))) :arg2 (c / cause-01 :arg0 (o3 / officer) :arg1 (d / die-01 :arg1 (o4 / officer))) :time (y / year :mod (l / last)) :arg1-of (c2 / cause-01 :arg0 (a2 / and :op1 (h2 / hit-01 :arg0 (o5 / officer) :arg1 (m / man :arg1-of (l2 / lie-07 :arg2 (u / under :op1 (p2 / product-of :op1 1 :op2 2014))))))))
(a / and :op1 (g / gymnast :arg0 (g2 / gymnast :name (n / name :op1 (1 / 19-year-old)) :mod (c / country :name (n2 / name :op1 "N-A")) :mod (c2 / country :name (n3 / name :op1 "N-A"))) :arg1 (t / title :mod (o / opera)) :arg2 (t2 / thursday)) :op2 (p / put-03 :arg0 (g3 / gymnast) :arg1 (g4 / gap) :arg2 (d / display :mod (f / full) :location (d2 / display :mod (f2 / full)) :path (d3 / display :mod (o2 / olympic)))))
(c / called :arg0 (t / team :consist-of (p / person :arg0-of (h / have-org-role-91 :arg1 (t2 / team :name (n / name :op1 (' / ''))) :arg2 (c2 / captain)))) :arg1 ('2 / '' :mod (g / grandma)) :degree (w / well) :time (t3 / time :mod (t4 / this)))
(t / tell-01 :arg0 (p / person :arg0-of (i / investigate-01)) :arg1 (a / appear-02 :arg1 (p2 / philadelphia :arg0 (g / gunman :quant (m / multiple)))) :arg2 (p3 / person :arg0-of (i2 / investigate-01)))
(s / say-01 :arg0 (t / thing :arg1-of (r / report-01 :arg0 (h / he))) :arg1 (p / present-01 :arg1 (t2 / thing :arg0-of (e / evidence-01) :arg1-of (p2 / present-01 :arg2 (p3 / pressure-01))) :arg2 (a / and :op1 (p4 / person :arg0-of (h2 / have-org-role-91 :arg1 (c / community :mod (m / minority :mod (e2 / ethnic)) :mod (s2 / some)) :arg2 (m2 / member))) :op2 (p5 / person :mod (y / young) :arg0-of (h3 / have-org-role-91 :arg1 (c2 / community :mod (p6 / particular)) :arg2 (m3 / member))) :op3 (p7 / person :mod (y2 / young)) :op4 (p8 / person :mod (y3 / young)) :op5 (p9 / person :mod (y4 / young))) :arg1-of (c3 / conform-01 :arg2 (a2 / and :op1 (p10 / person :mod (e3 / ethnic-group :name (n / name :op1 "N-A"))) :op2 (b / background :mod (b2 / bangladeshi)) :mod (e4 / especially)))))
(s / say-01 :arg0 (p / person :name (n / name :op1 "julius" :op2 "nielsen") :arg0-of (s2 / study-01 :arg1 (s3 / sharks)) :arg0-of (s4 / study-01 :arg1 (s5 / sharks))) :arg1 (g / go-01 :arg1 (r / record) :arg4 (b / between :op1 (t / temporal-quantity :quant (N / N-A) :unit (y / year)) :op2 (t2 / temporal-quantity :quant (N2 / N-A) :unit (y2 / year)))))
(m / multi-sentence :snt2 (c / come-04 :arg1 (r / right-05 :arg2 (p / purchase-01 :arg1 (r2 / right-05 :arg1 (c2 / country) :arg2 (p2 / project :mod (a / amphibious) :consist-of (a2 / and :op1 (r3 / rail :mod (s / speed :arg1-of (h / high-02)) :consist-of (r4 / rail :mod (s2 / speed :arg1-of (h2 / high-02)))) :op2 (r5 / rail :mod (s3 / speed :arg1-of (h3 / high-02))) :quant (m2 / multiple :op1 4,200)))))) :arg2 (p3 / purchase-01 :arg1 (r6 / right-05 :arg2 (p4 / purchase-01 :arg1 (a3 / and :op1 (r7 / rail :mod (s4 / speed :arg1-of (h4 / high-02))) :op2 (r8 / rail :mod (s5 / speed :arg1-of (h5 / high-02))))))) :mod (a4 / also)))
(c / consist-01 :arg1 (e / economy :mod (c2 / collective) :mod (n / new) :location (s / south :part-of (c3 / city-district :name (n2 / name :op1 "N-A") :location (s2 / south)))) :arg2 (d / develop-02 :quant 4 :arg2-of (i / include-01 :arg1 (a / and :op1 (l / lease) :op2 (d2 / develop-02 :arg1 (e2 / enterprise)) :op3 (d3 / develop-02 :arg1 (a2 / agriculture)) :op4 (d4 / develop-02 :manner (j / joint))))) :time (p / present) :mod (m / main))
(m / multi-sentence :snt1 (t / target-01 :arg0 (l / launch-01 :arg0 (c / country :name (n / name :op1 "China")) :arg1 (l2 / launch-01)) :arg1 (a / and :op1 (a2 / around) :op2 (l3 / land) :op3 (p / patrol-01 :arg0 (c2 / country)))) :snt2 (h / have-03 :arg0 (t2 / task :mod (s / such)) :arg1 (d / difficult :degree (c3 / considerable))))
(p / produce-01 :arg0 (p2 / person :arg0-of (h / have-org-role-91 :arg2 (d / doctor :mod (c / corridor)))) :arg1 (p3 / program :name (n / name :op1 (' / '')) :arg1-of (p4 / produce-01 :arg0 (s / survey-01 :arg1 (n2 / news)))) :li 2014)
(p / possible-01 :arg1 (b / buy-01 :arg0 (p2 / person :arg0-of (c / consume-01)) :arg1 (r / rate-entity-91 :arg1 (m / monetary-quantity :quant 7 :unit (y / yuan) :mod (j / just)) :arg2 (t / temporal-quantity :quant (N / N-A) :unit (d / day)))) :arg1-of (c2 / cause-01 :arg0 (t2 / thing :arg2-of (p3 / price-01) :arg1-of (l / low-04 :degree (m2 / more)))))
(s / say-01 :arg0 (t / thing :arg1-of (e / estimate-01 :arg0 (p / person :arg0-of (s2 / specialize-01 :arg1 (s3 / share)) :mod (c / country :name (n / name :op1 "N-A"))))) :arg1 (a / and :op1 (h / hold-01 :arg0 (p2 / person :arg0-of (m / migrate-01) :mod (c2 / country)) :arg1 (s4 / share :quant 38 :mod (a2 / another)) :arg3 (p3 / percentage-entity :value (N / N-A))) :op2 (r / raise-01 :arg0 (p4 / person) :arg1 (s5 / share :poss (p5 / person)) :arg2 (s6 / share :quant (a3 / almost :op1 600000000) :arg0-of (a4 / account-01 :arg1 (s7 / share :quant 2.77 :arg1-of (i / include-91 :arg2 (s8 / share :poss (b / bank)) :arg3 2.77)))))))
(t / total-01 :arg1 (o / office :quant 3 :mod (t2 / ticket) :location (a / and :op1 (n / north) :op2 (s / side :part-of (c / city-district :name (n2 / name :op1 "N-A") :location (s2 / south))))) :arg2 (a2 / and :op1 (w / windows :mod (t3 / ticket)) :op2 (m / machine :quant 34 :mod (t4 / ticket) :mod (a3 / automatic))))
(r / result-01 :arg1 (q / quality :poss (e / export-01 :arg0 (c / country :name (n / name :op1 "China")) :arg1 (p / product :mod (o / oil)))) :arg2 (r2 / rivalled :arg0 (c2 / country) :arg1 (q2 / quality :mod (q3 / quality) :arg1-of (h / high-02 :degree (m / most)) :poss (w / world))) :manner (g / gradual))
(m / multi-sentence :snt1 (m2 / marked :arg1 (a / and :op1 (s / spf) :op2 (s2 / state :name (n / name :op1 "N-A"))) :arg2 (p / package :arg0-of (f / function-01 :arg1 (p2 / protect-01 :arg1 (s3 / sun)))) :arg1-of (g / general-02)) :snt2 (a2 / and :op1 (r / refer-01 :arg1 (f2 / function-01 :arg1 (p3 / protect-01 :arg1 (s4 / sun)))) :op2 (t / target-01 :arg1 (i / index :mod (s5 / spf :mod (c / common))) :arg2 (p4 / product-of :op1 15 :op2 30 :op3 50 :op4 (e / et-cetera)))))
(a / and :op1 (s / starred :arg1 (x / xuan :name (n / name :op1 (x2 / xuan) :op2 (x3 / xuan))) :location (s2 / series :quant (n2 / number) :mod (t / tv))) :op2 (s3 / set :arg0 (s4 / she) :arg1 (s5 / studio :poss (s6 / she))) :time (a2 / after :op1 (r / retire-01)))
(s / say-01 :arg0 (n / newspaper :name (n2 / name :op1 "N-A") :arg0-of (h / head-01 :arg1 (s2 / station :arg0-of (m / manage-01 :arg1 (t / traffic))))) :arg1 (a / and :op1 (b / begin-01 :arg0 (s3 / sector :mod (t2 / transport-01) :mod (c / country :name (n3 / name :op1 "N-A"))) :arg1 (r / rectify :arg0 (s4 / sector) :arg1 (o / operation :mod (l / law :polarity -)))) :op2 (b2 / ban-01 :arg0 (s5 / sector) :arg1 (t3 / total-01 :arg1 (p / passenger :quant 613 :mod (p2 / passenger)) :arg2 (o2 / operation :mod (l2 / law :polarity -))))))
(t / tell-01 :arg0 (d / doctor) :arg1 (p / possible-01 :polarity - :arg1 (r / rectify-01 :arg1 (a / and :op1 (b / bronchitis :mod (c / chronic)) :op2 (p2 / problem :mod (s / such))) :prep-with (m / medication)) :mod (a2 / almost)) :arg2 (p3 / person :name (n / name :op1 "N-A")))
(m / multi-sentence :snt1 (e / embarrassing :domain (s / situation :mod (o / okafor)) :degree (m2 / more)) :snt2 (o2 / obligate-01 :arg1 (h / he) :arg2 (c / compete-01 :arg0 (h2 / he) :arg1 (a / and :op1 (t / time :mod (p / play-01)) :op2 (b / ball :mod (r / right)) :prep-with (a2 / and :op1 (s2 / simmons) :op2 (e2 / enby)) :time (s3 / season :mod (n / new))))))
(m / multi-sentence :snt1 (o / oh :mode (e / expressive)) :snt2 (b / bring-01 :arg0 (j / james) :arg1 (t / trophy :ord (o2 / ordinal-entity :value 1) :mod (p / professional) :mod (p2 / professional) :ord (o3 / ordinal-entity :value 1)) :time (b2 / before :op1 (n / now) :duration (t2 / temporal-quantity :quant (N / N-A) :unit (y / year)))))
(a / and :op1 (r / ravouvou :arg1 (r2 / ravouvou :mod (v / vatemo) :quant (s / some :op1 (m / more))) :time (t / then)) :op2 (s2 / storm-02 :arg0 (v2 / vatemo) :arg1 (l / line :mod (g / gb))) :time (t2 / then))
(a / and :op1 (h / helen) :op2 (h2 / heather) :op3 (h3 / heather))
(f / find-01 :arg0 (a / and :op1 (p / person :arg0-of (h / have-org-role-91 :arg2 (s / stanning :mod (h2 / helen)))) :op2 (p2 / person :arg0-of (h3 / have-org-role-91 :arg2 (s2 / stanning))) :op3 (p3 / person :arg0-of (h4 / have-org-role-91 :arg2 (s3 / stanning))) :op4 (p4 / person :arg0-of (h5 / have-org-role-91 :arg2 (s4 / stanning))) :op5 (p5 / person :arg0-of (h6 / have-org-role-91 :arg2 (s5 / stanning))) :op6 (p6 / person :arg0-of (h7 / have-org-role-91 :arg2 (s6 / stanning))) :op6 (p7 / person :arg0-of (h8 / have-org-role-91 :arg2 (s7 / stanning))) :op6 (p8 / person :arg0-of (h9 / have-org-role-91 :arg2 (s8 / stanning))) :op6 (p9 / person :arg0-of (h10 / have-org-role-91 :arg2 (s9 / stanning))) :op6 (p10 / person :arg0-of (h11 / have-org-role-91 :arg2 (s10 / stanning))) :op6 (p11 / person :arg0-of (h12 / have-org-role-91 :arg2 (s11 / stanning))) :op6 (p12 / person :arg0-of (h13 / have-org-role-91 :arg2 (s12 / stanning))) :op7 (p13 / person :arg0-of (h14 / have-org-role-91 :arg2 (s13 / stanning))) :op6 (p14 / person :arg0-of (h15 / have-org-role-91 :arg2 (s14 / stanning))) :op6 (p15 / person :arg0-of (h16 / have-org-role-91 :arg2 (s15 / stanning))) :op6 (p16 / person :arg0-of (h17 / have-org-role-91 :arg2 (s16 / stanning))) :op6 (p17 / person :arg0-of (h18 / have-org-role-91 :arg2 (s17 / stanning))) :op7 (p18 / person :arg0-of (h19 / have-org-role-91 :arg2 (s18 / stanning)))) :arg1 (t / thing :arg2-of (m / mean-01)))
(a / and :op1 (b / be-located-at-91 :arg1 (i / i) :arg2 (h / hospital)) :op2 (w / walk-01 :arg0 (i2 / i) :location (a2 / around :op1 (e / event :name (n / name :op1 "N-A")))) :li (2 / 20ft))
(d / decrease-01 :arg1 (t / thing :arg2-of (p / price-01 :arg1 (t2 / thing :arg2-of (p2 / price-01)))) :arg3 (a / and :op1 (p3 / percentage-entity :value (N / N-A)) :op2 (f / footwear) :op3 (e / equipment :name (n / name :op1 (h / household))) :op4 (e2 / equipment :name (n2 / name :op1 (h2 / household))) :op5 (m / maintain-01 :mod (r / routine)) :op6 (m2 / maintain-01 :arg1 (h3 / health :quant (b / between :op1 2.2 :op2 0.1)))))
FAILED_TO_PARSE#Number of opening and closing brackets doesn't match.
(h / have-to-do-with-04 :arg0 (b / butter :mod (p / peanuts)) :arg1 (o / onion :mod (b2 / baked)) :arg2 (n / nothing))
(m / multi-sentence :snt1 (w / win-01 :arg0 (a / activity-06 :arg1 (t / theme) :ord (o / ordinal-entity :value 7) :mod (f / festival :ord (o2 / ordinal-entity :value 7))) :arg1 (a2 / acclaim :arg1 (p / person :arg0-of (h / have-org-role-91 :arg1 (y / youth) :arg2 (s / staff :mod (y2 / youth)))) :arg1-of (w2 / wide-02)) :location (s2 / scene)) :snt2 (h2 / hope-01 :arg0 (t2 / they) :arg1 (o3 / organize-01 :arg0 (c / company) :arg1 (a3 / activity-06 :mod (s3 / such))) :op3 (s4 / strengthen-01 :arg0 (a4 / activity-06) :arg1 (a5 / and :op1 (c2 / communicate-01) :op2 (e / exchange-01)) :manner (a6 / and :op1 (c3 / communicate-01) :op2 (e2 / exchange-01)))))
(a / and :op1 (l / lanzmann :arg0 (p / person :arg0-of (a2 / author-01) :arg0-of (a3 / author-01 :arg1 (h / holocaust))) :arg1 (f / frustrate-01 :arg0 (d / documentary :name (n / name :op1 (' / ''))) :arg1 (h2 / hotel :name (n2 / name :op1 (k / kempinski))) :location (h3 / hotel :name (n3 / name :op1 (k2 / kempinski)) :location (k3 / kempinski)))) :op2 (w / write-01 :arg0 (p2 / person) :arg1 (l2 / letter :arg1-of (o / open-09)) :location (f2 / faz :name (n4 / name :op1 (g / german) :op2 (o2 / outlets) :op3 (o3 / outlets)))))
(i / instead-of-91 :arg2 (o / offer-01 :arg0 (p / person :mod (c / country :name (n / name :op1 "N-A"))) :arg1 (o2 / opportunity :purpose (d / dialed :arg0 (p2 / person) :arg1 (c2 / country :name (n2 / name :op1 "N-A")) :path (c3 / center :arg1-of (c4 / call-01 :arg2 (n3 / name)))))) :arg1-of (i2 / instead-of-91))
(a / and :op1 (m / mean-01 :arg1 (e / educate-01 :mod (f / family) :mod (g / good)) :arg2 (n / need-01 :arg0 (p / person :arg0-of (h / have-rel-role-91 :arg1 (p2 / person) :arg2 (p3 / parent))) :arg1 (a2 / accompanied :arg0 (p4 / person) :arg1 (p5 / person :arg0-of (h2 / have-rel-role-91 :arg1 (p6 / person) :arg2 (c / child)))) :frequency (o / often))) :op2 (t / teach-01 :arg0 (p7 / person) :arg1 (a3 / and :op1 (d / develop-02 :arg0 (p8 / person) :arg1 (b / behave-01 :arg1-of (c2 / civilize-01))) :op2 (t2 / teach-01 :arg0 (p9 / person) :arg1 (a4 / and :op1 (d2 / develop-02 :arg0 (p10 / person) :arg1 (b2 / behave-01 :arg1-of (c3 / civilize-01))) :op2 (m2 / make-02 :arg0 (p11 / person) :arg1 (a5 / and :op1 (g2 / good :degree (m3 / more)) :op2 (e2 / enhance-01 :arg1 (i / intelligence)))))) :arg2 (p12 / person) :frequency (o2 / often))))
(a / and :op1 (r / resist-01 :arg0 (i / individual) :arg1 (a2 / and :op1 (s / self-exposure) :op2 (e / experience-01 :arg0 (i2 / individual) :mod (e2 / emotional)))) :op2 (p / prevent-01 :arg0 (i3 / individual) :arg1 (a3 / and :op1 (s2 / self-awareness :arg0 (i4 / individual)) :op2 (s3 / self-esteem :arg0 (i5 / individual)))))
(i / incident :time-of (i2 / incident :time (a / after :op1 (s / shave-01 :arg0 (i3 / i) :arg2 (t / thursday)) :mod (j / just))))
(a / and :op2 (s / say-01 :arg0 (a2 / and :op1 (p / person :arg0-of (h / have-rel-role-91 :arg1 (p2 / person) :arg2 (s2 / son))) :op2 (p3 / person :arg0-of (h2 / have-rel-role-91 :arg1 (p4 / person) :arg2 (d / daughter)))) :arg1 (a3 / and :op1 (s3 / shock-01 :arg0 (d2 / die-01 :arg1 (p5 / person)) :arg1 (p6 / person)) :op2 (d3 / devastated :domain (p7 / person)) :manner (d4 / die-01 :arg1 (p8 / person)))))
(u / use-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg2 (g / governor :mod (b / brand)))) :arg1 (r / rbs) :arg2 (p2 / protect-01 :arg0 (p3 / person) :arg1 (b2 / brand :mod (f / finance) :mod (p4 / person :arg0-of (c / consume-01)) :mod (o / other))) :time (t / time :mod (t2 / that)))
(b / brand :mod (s / small :degree (m / more)) :domain (b2 / brand :mod (s2 / small :degree (m2 / more)) :arg0-of (g / get-01 :arg1 (a / and :op1 (c / coutts :mod (p / prominent)) :op2 (a2 / adam) :op3 (c2 / company :name (n / name :op1 "N-A")) :op4 (b3 / bank :mod (m3 / military) :mod (h / holt))))))
(m / multi-sentence :snt1 (r / right-06 :arg1 (w / we) :arg2 (m2 / move-01 :arg0 (w2 / we) :arg2 (b / bank :mod (b2 / brand)))) :snt2 (c / cause-01 :mode (i / interrogative) :arg0 (a / ask-01 :arg0 (w3 / we) :arg1 (f / focus-01 :arg0 (w4 / we) :arg2 (m3 / make-01 :arg0 (w5 / we) :arg1 (b3 / bank :mod (g / good :degree (m4 / more))) :arg2 (c2 / customer)))) :arg1 (t / time)))
(a / appoint-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (s / service :mod (s2 / security) :mod (f / federal)) :arg2 (p2 / person :name (n / name :op1 "mr" :op2 "putin")))) :arg1 (p3 / person :name (n2 / name :op1 "mr" :op2 "ivanov")) :arg2 (p4 / person :arg0-of (h2 / have-org-role-91 :arg2 (d / deputy))) :time (l / late :op1 (d2 / date-entity :decade (N / N-A))) :li (1 / 1990s))
(b / bain :arg1 (a / and :op1 (l / live-01 :arg0 (p / person :quant (a2 / about :op1 (5 / 500m)) :arg0-of (l2 / live-01 :location (s / sea)))) :op2 (p2 / post-01 :arg0 (p3 / person) :arg1 (f / footage :poss (s2 / spectacle :location (p4 / periscope))))) :arg2 (h / hopeful-03 :arg1 (p5 / possible-01 :arg1 (s3 / shed :arg0 (s4 / someone) :arg1 (l3 / light) :medium (a3 / appear-01 :arg1 (f2 / fish :mod (t / two-inch)))))))
(s / set-02 :arg0 (p / portion :part-of (f / floor :part-of (s2 / she))) :arg1 (p2 / pass-03 :arg1 (p3 / pass-03 :arg1 (p4 / pass-03 :arg1 (i / index :mod (s3 / sign-01 :arg0 (s4 / she))))) :arg2 (m / music :mod (l / latin) :arg0-of (f2 / fit :location (h / home :location (h2 / home :location (s5 / street)) :location (o / outside :op1 (a / arena :mod (r / rio))))))) :li 1)
(b / become-01 :arg1 (p / person :mod (c / country :name (n / name :op1 "N-A"))) :arg2 (c2 / country :name (n2 / name :op1 "N-A") :ord (o / ordinal-entity :value 4) :arg0-of (w / win-01 :arg1 (g / gold) :location (e / event :mod (o2 / opera) :mod (i / individual) :mod (i2 / individual))) :arg1-of (s / straight-04) :ord (o3 / ordinal-entity :value 4)))
(h / hope-01 :arg0 (p / person :arg0-of (h2 / have-org-role-91 :arg2 (m / minister))) :arg1 (e / end-01 :arg0 (p2 / person) :arg1 (d / dispute-01 :arg2 (c / contract-02 :arg1 (r / reform-01 :arg1 (p3 / person :arg0-of (h3 / have-org-role-91 :arg1 (a / association :mod (m2 / medicine) :mod (c2 / country :name (n / name :op1 "N-A"))) :arg2 (o / official))))))))
(c / change-01 :arg0 (l / law) :arg1 (l2 / law) :purpose (m / make-02 :arg0 (l3 / law) :arg1 (e / easy-05 :arg1 (c2 / charge-05 :arg0 (l4 / law) :arg1 (p / person) :arg2 (p2 / person :mod (c3 / country :name (n / name :op1 "N-A"))) :prep-under (b / bias-01 :arg1 (p3 / person))))))
(q / quick-02 :arg1 (p / point-out-02 :arg0 (p2 / person :quant (m / many) :location (o / online)) :arg1 (t / thing :manner-of (p3 / possible-01 :arg1 (t2 / twin :arg0 (a / archer :mod (c / certain)) :arg1 (d / dicaprio :name (n / name :op1 (a2 / a-lister))))))) :arg2 (p4 / person :quant (m2 / many) :location (o2 / online)) :arg1-of (q2 / quick-02))
(m / multi-sentence :snt1 (a / and :op1 (c / come-01 :arg1 (c2 / company :quant (m2 / many)) :arg4 (c3 / center :mod (t / trade-01) :arg1-of (s / size-01 :arg2 (m3 / medium)))) :op2 (s2 / submit-01 :arg0 (c4 / company) :arg1 (f / fee) :arg2 (c5 / center :mod (t2 / trade-01) :mod (c6 / city))) :time (d / day :ord (o / ordinal-entity :value 11) :part-of (t3 / temporal-quantity :quant (N / N-A) :unit (m4 / month)))) :snt2 (p / pay-01 :arg0 (c7 / company) :arg3 (f2 / fee)))
(s / say-01 :arg0 (s2 / statistic :topic (w / weather :arg1-of (h / hot-05) :location (a / and :op1 (t / talk-02 :arg2 (a2 / and :op1 (p / person :arg0-of (h2 / have-org-role-91 :arg2 (h3 / head-of-state))) :op2 (p2 / person :arg0-of (h4 / have-org-role-91 :arg1 (c / company :name (n / name :op1 "N-A") :name (n2 / name :op1 (m / meteorology)) :mod (c2 / city))))))))) :arg1 (p3 / possible-01 :arg1 (r / receive-01 :arg0 (r2 / rest :part-of (c3 / city)) :arg1 (t2 / temperature-quantity :quant (d / degree :arg1-of (d2 / differ-02))))))
(i / increase-01 :arg0 (v / volume :quant-of (a / and :op1 (s / station :mod (r / railway :mod (x / xinzhu))) :op2 (s2 / station :mod (r2 / railway) :mod (r3 / railway :mod (x2 / xinzhu))))) :arg1 (y / year :arg1-of (i2 / increase-01)) :duration (t / temporal-quantity :quant (N / N-A) :unit (y2 / year)) :manner (i3 / increase-01 :arg1 (o / operation :poss (t2 / train :name (n / name :op1 (s3 / sino-asia)) :mod (r4 / railway)))))
(i / introduce-01 :arg1 (p / plan-01 :arg0 (p2 / plan-01 :arg1 (c / construct-01 :arg1 (x / xi)) :mod (c2 / construct-01))) :arg1 (c3 / center :mod (n / nucleus) :arg1-of (i2 / integrate-01) :mod (n2 / new)) :arg1-of (c4 / cause-01 :arg0 (' / ' :arg1 (a / and :op1 (s / station :mod (r / railway :mod (x2 / xinzhu))) :op2 (s2 / station :mod (r2 / railway :mod (x3 / xinzhu)))) :arg2 (b / build-01 :arg1 (p3 / park :arg1-of (m / modern-02) :mod (r3 / railway) :arg1-of (i3 / integrate-01))))) :purpose (m2 / meet-01 :arg0 (p4 / plan-01) :arg1 (n3 / need-01 :arg1 (d / develop-02 :time (f / future)))))
(m / multi-sentence :snt1 (m2 / mark-01 :arg0 (p / product :arg0-of (c / cause-01 :arg1 (p2 / play-02 :arg0 (p3 / person :mod (c2 / country :name (n / name :op1 "N-A"))) :arg1 (r / role :arg0-of (e / effective-04 :degree (m3 / more))))))) :snt2 (r2 / represent-01 :arg0 (t / thing :arg2-of (c3 / copy-01 :arg1 (s / state :name (n2 / name :op1 "N-A")))) :arg1 (e2 / extend-01 :arg1 (t2 / time :arg0-of (e3 / effective-04))) :mod (e4 / extra :degree (e5 / extra))))
(c / contrast-01)
(s / say-01 :arg0 (a / agency :name (n / name :op1 "N-A") :mod (n2 / news) :mod (' / '') :arg0-of (q / quote-01 :arg1 (n3 / news :topic (b / bank :mod (c / central)))) :arg0-of (q2 / quote-01 :arg1 (r / rate :mod (i / inflation) :time (y / year :ord (o / ordinal-entity :value 1) :part-of (y2 / year :ord (o2 / ordinal-entity :value 1)) :ord (o3 / ordinal-entity :value 1)) :ord (o4 / ordinal-entity :value 1)))) :arg1 (i2 / include-91 :arg1 (r2 / rate :mod (i3 / inflation)) :arg2 (p / percentage-entity :value (N / N-A)) :time (y3 / year :mod (t / this))))
(c / classify-01 :arg1 (t / tigers :name (n / name :op1 (s / siberian)) :arg1-of (- / -rrb- :arg0 (g / government-organization :name (n2 / name :op1 "N-A") :mod (w / world))) :arg0-of (-2 / -rrb- :arg1 (l / list :mod (r / red) :consist-of (s2 / species :arg1-of (e / endanger-01))))) :arg2 (-3 / -lrb- :arg1-of (e2 / endanger-01)) :time (c2 / current))
(s / say-01 :arg0 (d / department :name (n / name :op1 (j / jilin)) :mod (p / province) :mod (p2 / province)) :arg1 (s2 / show-01 :arg0 (d2 / data :arg1-of (m / monitor-01 :arg0 (a / and :op1 (s3 / state :mod (s4 / state :mod (p3 / province))) :op2 (c / country :mod (o / other))) :manner (j2 / joint))) :arg1 (h / have-03 :arg0 (a2 / and :op1 (s5 / state :mod (s6 / state)) :op2 (c2 / country :mod (o2 / other))) :arg1 (b / between :op1 (b2 / between :op1 (b3 / between :op1 (b4 / between :op1 4 :op2 4) :op2 (m2 / mass-quantity :quant (N / N-A) :unit (k / kilogram)))) :op2 (t / tigers :quant 3)) :op2 (l / leopards :quant 3)) :mod (o3 / only)))
(s / show-01 :arg0 (a / analyze-01 :arg0 (t / they)) :arg1 (e / estimate-01 :arg1 (m / manipulate-01 :arg1 (l / life) :mod (l2 / large :degree (m2 / most))) :time (a2 / age-01 :arg1 (o / old) :arg2 (t2 / temporal-quantity :quant (N / N-A) :unit (y / year)) :mod (o2 / old))))
(a / appear-02 :arg1 (f / fluctuation :arg0 (a2 / and :op1 (p / person :arg0-of (h / have-rel-role-91 :arg2 (d / dd1))) :op2 (d2 / downs)) :arg1 (a3 / and :op1 (p2 / person :arg0-of (h2 / have-rel-role-91 :arg2 (d3 / dd1))) :op2 (d4 / downs)) :time (s / since :op1 (r / reform-01 :arg1 (e / exchange-01))) :time (e2 / ever)))
(m / multi-sentence :snt1 (c / contrast-01 :arg1 (l / lag-01 :arg0 (p / politics) :arg1 (p2 / politics) :degree (r / relative)) :arg2 (l2 / lag-01 :arg0 (c2 / country :location (a / african) :quant (m2 / many)) :arg1 (i / i) :degree (r2 / relative))) :snt2 (c3 / contrast-01 :arg1 (r3 / regard-01 :arg0 (c4 / country :name (n / name :op1 "N-A")) :arg1 (i2 / it) :arg2 (f / field :mod (t / ticket) :mod (b / big) :arg1-of (c5 / call-01 :manner (s / so)))) :arg2 (a2 / and :op1 (r4 / regard-01 :arg0 (c6 / country) :arg1 (f2 / field :mod (t2 / ticket) :mod (b2 / big)) :arg2 (f3 / field :mod (t3 / ticket) :mod (b3 / big))) :op2 (e / expert-01 :arg1 (c7 / country) :arg2 (i3 / issue-02 :arg0 (c8 / country))))))
(a / and :op1 (s / smiled :frequency (s2 / sometimes)) :op2 (a2 / applaud-01 :arg1 (a3 / and :op1 (c / change-01 :arg1 (e / episode :name (n / name :op1 (' / '') :op2 ('2 / '')) :mod (w / white))) :op2 (s3 / sing-01 :arg0 (a4 / actor)))) :frequency (s4 / sometimes))
(w / watch-01 :arg0 (i / i) :arg1 (p / perform-02 :arg0 (p2 / person :arg0-of (h / have-rel-role-91 :arg1 (p3 / person :arg0-of (h2 / have-rel-role-91 :arg1 (p4 / person :arg0-of (h3 / have-rel-role-91 :arg1 (p5 / person) :arg2 (d / daughter))) :arg2 (d2 / daughter))) :arg2 (d3 / daughter))) :time (b / before :op1 (n / now) :quant (t / temporal-quantity :quant (N / N-A) :unit (y / year)))))
(a / and :op1 (h / have-03 :arg0 (r / rate-entity-91 :arg1 (r2 / rate :mod (u / use-01)) :arg2 (t / top :quant 2)) :arg1 (l / league :arg1-of (i / include-91 :arg2 (l2 / league :quant 20)))) :op2 (s / seasons :arg1 (t2 / thing :quant 2 :mod (g / good :degree (m / most))) :arg2 (c / career :poss (h2 / he))))
(a / and :op1 (b / become-01 :arg1 (p / person :arg1-of (e / expert-01)) :arg2 (p2 / person :arg1-of (e2 / expert-01) :arg0-of (p3 / partner-01 :arg1 (m / media :name (n / name :op1 (g / german)) :mod (g2 / german))))) :op2 (p4 / participate-01 :arg0 (p5 / person) :arg1 (a2 / activity-06 :arg1 (f / fan) :arg1-of (l / local-02))))
(m / much :degree (v / very) :domain (w / we) :time (m2 / moment))
(a / and :op1 (p / person :name (n / name :op1 "ms." :op2 "zhu") :arg0-of (h / have-org-role-91 :arg2 (p2 / person :arg0-of (m / manage-01 :arg1 (p3 / product)))) :arg0-of (h2 / have-org-role-91 :arg2 (p4 / person :arg0-of (m2 / manage-01 :arg1 (p5 / product)))) :arg0-of (h3 / have-org-role-91 :arg2 (p6 / person :arg0-of (m3 / manage-01 :arg1 (p7 / product)))) :arg0-of (h4 / have-org-role-91 :arg2 (p8 / person :arg0-of (m4 / manage-01 :arg1 (p9 / product)))) :arg0-of (h5 / have-org-role-91 :arg2 (p10 / person :arg0-of (m5 / manage-01 :arg1 (p11 / product)))) :arg0-of (h6 / have-org-role-91 :arg2 (p12 / person :arg0-of (m6 / manage-01 :arg1 (p13 / product)))) :arg0-of (h7 / have-org-role-91 :arg2 (p14 / person :arg0-of (m7 / manage-01 :arg1 (p15 / product))))) :op2 (e / encourage-01 :arg0 (p16 / person) :arg1 (p17 / person) :arg2 (d / do-02 :arg0 (p18 / person) :arg1 (s / same))))
(s / say-01 :arg0 (s2 / she) :arg1 (b / believe-01 :arg0 (s3 / she) :arg1 (a / and :op1 (l / lack-01 :arg0 (c / controversies :name (n / name :op1 (r / race-related))) :arg1 (d / diversity) :purpose (h / hire-01 :arg1 (d2 / diversity))) :op2 (l2 / lack-01 :arg0 (c2 / controversies) :arg1 (p / practice-01 :arg1 (d3 / diversity))))) :medium (i / interview-01 :arg1 (s4 / she) :mod (t / telephone)))
(a / assure-01 :arg0 (p / person :arg0-of (l / lead-02 :arg1 (i / intelligence :mod (c / central) :mod (c2 / country :name (n / name :op1 "United" :op2 "States"))))) :arg1 (p2 / product :arg0-of (c3 / command-02 :arg1 (i2 / intelligence))) :arg2 (d / downplayed :arg0 (p3 / person) :arg1 (t / threaten-01 :arg2 (i3 / isis :location (c4 / country)))) :arg3 (m / middle :op1 (m2 / middle :part-of (v / value-interval :op1 2014 :op2 2015))))
(a / add-01 :arg0 (p / person :arg0-of (h / have-rel-role-91 :arg1 (s / she) :arg2 (h2 / husband))) :arg1 (m / message-01 :arg0 (p2 / person) :arg1 (t / thing :manner-of (e / eat-01)) :mod (a2 / also)))
(s / say-01 :arg0 (p / person :name (n / name :op1 "mr." :op2 "coe")) :arg1 (c / cause-01 :arg0 (e / explain-01 :arg0 (a / and :op1 (h / he) :op2 (p2 / person :arg0-of (h2 / have-rel-role-91 :arg1 (p3 / person) :arg2 (w / wife)))) :arg1 (c2 / cause-01 :arg0 (a2 / amr-unknown) :arg1 (w2 / want-01 :arg0 (a3 / and :op1 (h3 / he) :op2 (p4 / person :arg0-of (h4 / have-rel-role-91 :arg1 (h5 / he) :arg2 (w3 / wife)))) :arg1 (w4 / write-01 :arg0 (a4 / and) :arg1 (a5 / and))))) :arg1 (t / time :domain (t2 / this) :time (b / become-01 :arg1 (f / food) :arg2 (c3 / center)))))
(f / fabulously :arg1 (h / he) :arg2 (t / touch-01))
(a / and :op1 (c / call-01 :arg1 (i / it) :arg2 (w / whipped :mod (p / prune))) :op2 (a2 / add-01 :arg0 (i2 / i) :arg1 (g / give-01 :arg0 (t / trick :mod (c2 / common)) :arg1 (n / name :mod (s / snazzy)))))
(s / suggest-01 :arg0 (p / person :arg0-of (h / have-rel-role-91 :arg2 (f / friend :mod (o / old)))) :arg1 (s2 / stay-01 :polarity - :arg1 (p2 / person) :time (l / late) :purpose (w / watch-01 :arg0 (p3 / person) :arg1 (g / game :mod (w2 / watch-01 :arg0 (p4 / person) :arg1 (g2 / game))) :mod (p5 / particular))) :arg2 (p6 / person :mod (o2 / old) :arg0-of (h2 / have-rel-role-91 :arg2 (f2 / friend))))
(m / multi-sentence :snt1 (' / '' :arg0 (c / company) :arg1 (w / we) :arg2 (a / and :op1 (r / relaxed :arg1 (w2 / we)) :op2 (h / happy) :op3 (p / platform :mod (h2 / harmonious)))) :snt2 (a2 / and :op1 (l / like-01 :arg0 (i / i) :arg1 (i2 / it) :mod (r2 / really)) :op2 (a3 / and :op1 (h3 / happy) :op2 (h4 / happy) :op3 (i3 / interest-01)) :mod (r3 / real)))
(r / rate-entity-91 :arg1 (m / monetary-quantity :quant 10.75 :unit (d / dollar)) :arg2 (v / volume-quantity :quant (N / N-A) :unit (g / gallon)))
(r / rally-01 :arg1 (a / and :op1 (m / meet-03 :location (r2 / river :name (n / name :op1 "N-A"))) :op2 (t / thing :arg2-of (m2 / meet-01 :arg1 (t2 / thing :arg1-of (t3 / tax-01 :arg3 (t4 / tax)))))) :location (c / city :name (n2 / name :op1 "N-A") :arg1-of (r3 / rally-01 :time (w / week :mod (l / last)) :location (c2 / country :name (n3 / name :op1 "N-A")))))
(a / and :op1 (s / shame-01 :arg0 (t / thing :arg1-of (p / post-01 :arg2 (y / you)) :mod (a2 / another)) :arg1 (y2 / you)) :op2 (p2 / point-out-02 :arg0 (i / i) :arg1 (s2 / stand-01 :arg1 (h / hotel) :arg2 (s3 / street :location (s4 / street :arg1-of (f / fake-02)) :arg1-of (n / near-02 :arg2 (d / desert))))))
(s / see-01 :arg0 (t / that) :arg1 (a / and :op1 (p / person :mod (y / young :degree (m / more :compared-to (p2 / person :mod (y2 / young :degree (m2 / more :quant (t2 / temporal-quantity :quant (N / N-A) :unit (y3 / year)))) :arg1-of (b / bear-02 :location (c / country :name (n / name :op1 "N-A")) :mod (a2 / also)))) :arg0-of (h / have-org-role-91 :arg1 (c2 / country :name (n2 / name :op1 "N-A")) :arg3 (a3 / apprentice-01 :arg0 (p3 / person)))) :mod (a4 / also)) :op2 (t3 / take-01 :arg0 (p4 / person) :arg1 (t4 / tally :poss (p5 / person)) :arg3 (a5 / and :op1 (d / drone :mod (g / gold)) :op2 (s2 / silver :quant 1) :op3 (s3 / silver :quant 1))) :mod (a6 / also) :arg1-of (c3 / cause-01 :arg0 (s4 / see-01 :arg0 (p6 / person :mod (y4 / young :degree (m3 / more :quant (t5 / temporal-quantity :quant (N2 / N-A) :unit (y5 / year))) :arg1-of (b2 / bear-02 :location (c4 / country) :mod (a7 / also)))) :arg1 (p7 / person) :mod (a8 / also)))))
(s / say-01 :arg0 (p / person :arg1-of (c / charge-05)) :arg1 (a / and :op1 (d / decrease-01 :arg1 (d2 / demand-01 :arg1 (c2 / capacity :mod (c3 / capacity :mod (i / industry)))) :manner (g / gradual)) :op2 (d3 / decrease-01 :arg1 (a2 / and :op1 (p2 / produce-01 :arg1 (e / enterprise)) :op2 (p3 / produce-01 :arg1 (e2 / enterprise)))) :op3 (i2 / increase-01 :arg1 (d4 / difficulty :topic (m / manage-01))) :op4 (i3 / increase-01 :arg1 (d5 / difficulty :topic (m2 / manage-01)))) :arg1-of (c4 / charge-05) :time (y / year :mod (r / recent)))
(i / increase-01 :arg0 (a / area :mod (t / this)) :arg1 (c / convenience :consist-of (c2 / child)) :arg2 (a2 / attend-01 :arg0 (c3 / child) :arg1 (e / examine-01 :arg1 (e2 / enter-01 :arg0 (c4 / college) :arg1 (c5 / college)) :location (p / place :arg1-of (l / local-02)))) :time (m / meet-03 :arg0 (a3 / area) :arg1 (r / require-01 :arg1-of (r2 / relate-01))))
(s / say-01 :arg0 (i / i) :arg1 (t / thing :arg2-of (v / value-01 :arg1 (c / contract-02)) :arg1-of (v2 / value-01 :arg2 (m / monetary-quantity :quant 187 :unit (y / yuan :mod (r / renminbi))))) :arg2 (t2 / thing :arg2-of (v3 / value-01 :arg1 (c2 / contract-02))) :time (a / already))
(b / bracing :arg1 (s / service :mod (c / community) :arg1-of (l / legal-02)) :arg2 (c2 / cut-02 :arg1 (s2 / service) :mod (f / further)) :time (a / already))
(s / say-01 :arg0 (p / person :name (n / name :op1 "N-A")) :arg1 (g / get-03 :arg1 (s2 / situation) :arg2 (b / bad-04 :arg1 (s3 / situation) :degree (m / more)) :mod (o / only) :condition (r / reverse-01 :arg1 (d / decide-01 :arg0 (g2 / government-organization :arg0-of (g3 / govern-01) :mod (f / federal))))))
(c / contrast-01 :arg2 (s / show-01 :arg0 (e / emanating :mod (l / lingering)) :arg1 (h / have-03 :arg0 (p / person :arg0-of (l2 / lead-02 :arg1 (c2 / country :name (n / name :op1 "Russia")))) :arg1 (n2 / nothing))))
(m / multi-sentence :snt1 (r / right-06 :arg1 (w / we) :arg2 (m2 / move-01 :arg0 (w2 / we) :arg2 (b / bank :mod (b2 / brand)))) :snt2 (c / cause-01 :mode (i / interrogative) :arg0 (a / ask-01 :arg0 (w3 / we) :arg1 (f / focus-01 :arg0 (w4 / we) :arg2 (m3 / make-01 :arg0 (w5 / we) :arg1 (b3 / bank :mod (g / good :degree (m4 / more))) :arg2 (c2 / customer)))) :arg1 (t / time)))
(u / up :arg0 (p / person :name (n / name :op1 "dettori")) :time (a / after :op1 (w / win-01 :arg0 (p2 / person) :time (a2 / after :op1 (w2 / win-01)))))
(m / multi-sentence :snt1 (c / contrast-01 :arg2 (c2 / claim-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg2 (o / official))) :arg1 (w / want-01 :arg0 (m2 / man :arg0-of (h2 / have-org-role-91 :arg2 (p2 / president :mod (p3 / potential)))) :arg1 (r / run-01 :arg0 (m3 / man) :arg1 (p4 / policy :mod (e / environment) :poss (c3 / country :name (n / name :op1 "Russia")))) :manner (s / sudden)))) :snt2 (m4 / meet-03 :arg0 (p5 / person :arg0-of (h3 / have-org-role-91 :arg2 (p6 / president :mod (p7 / potential)))) :manner (s2 / sudden)))
(a / and :op1 (w / witness-01 :arg0 (w2 / we :quant (a2 / all)) :arg1 (e / engineer-01) :arg2 (s / scale :mod (e2 / epic :mod (t / true)) :location (p / project :mod (t2 / this)))) :op2 (u / use-01 :arg0 (a3 / and :op1 (c / concrete :quant (o / over :op1 30,000)) :op2 (s2 / steel) :arg1-of (u2 / use-01 :mod (j / just))) :arg1 (p2 / part :part-of (b / bridge)) :mod (j2 / just)))
(s / say-01 :arg0 (p / person :name (n / name :op1 "michael" :op2 "martin") :arg0-of (h / have-org-role-91 :arg1 (c / country :name (n2 / name :op1 "N-A") :arg0-of (c2 / cross-02 :arg1 (b / bridge)) :location (f / forth)) :arg2 (d / director :mod (v / vice)))) :arg1 (m / milestone :arg1 (c3 / closure :ord (o / ordinal-entity :value 1) :topic (p2 / project :mod (b2 / bridge) :mod (a / any))) :time (a2 / always) :arg1-of (s2 / significant-02)))
(t / tell-01 :arg0 (p / person :arg0-of (i / investigate-01)) :arg1 (a / appear-02 :arg1 (p2 / philadelphia :arg0 (g / gunman :quant (m / multiple)))) :arg2 (p3 / person :arg0-of (i2 / investigate-01)))
(n / need-01 :arg0 (w / we) :arg1 (a / and :op1 (s / simone) :op2 (g / gabby) :op3 (l / laurie)) :arg1-of (c / cause-01 :arg0 (a2 / amr-unknown)))
(a / and :op2 (a2 / and :op1 (r / realize-01 :arg0 (i / i) :arg1 (r2 / realize-01 :arg0 (h / he) :arg1 (f / frenzy :mod (m / media :mod (s / social))))) :op2 (a3 / admit-01 :arg0 (i2 / i) :arg1 (l / look-02 :arg0 (h2 / he) :arg1 (l2 / look-02 :arg0 (h3 / he) :arg1 (r3 / resemble-01 :arg1 (h4 / he) :arg2 (r4 / resemble-01 :arg1 (h5 / he) :arg2 (k / kid)))))) :prep-in (f2 / fact)))
(s / store :name (n / name :op1 (p / primark) :op2 (p2 / primark) :op3 (f / folkestone)) :location (l / location :location-of (t / try-01 :arg0 (w / woman) :arg1 (k / knickers :arg0 (w2 / woman) :arg1 (t2 / they) :time (b / before :op1 (p3 / put-03 :arg0 (w3 / woman) :arg1 (t3 / they) :arg2 (b2 / back :part-of (s2 / shelf))))))))
(s / say-01 :arg0 (p / police) :arg1 (s2 / seek-01 :arg0 (p2 / police) :arg1 (e / evict :arg0 (p3 / police) :arg1 (p4 / person :arg0-of (f / flouts :arg1 (r / rule :poss (t / tenancies :poss (p5 / person))))))))
(s / say-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (p2 / police :mod (d / devon)) :arg2 (c / crowing))) :arg1 (s2 / send-01 :arg0 (p3 / person) :arg1 (w / warn-01 :arg0 (p4 / person) :arg2 (p5 / person :mod (o / other) :arg0-of (c2 / continue-01 :arg1 (f / flouts :arg0 (p6 / person) :arg1 (r / rule)))) :arg1-of (c3 / clear-06)) :arg1-of (c4 / clear-06)))
(s / solve-01 :arg0 (p / person :arg0-of (b / broker-01 :arg1 (5 / 5,000-yuan)) :mod (t / this)) :arg1 (p2 / problem :topic (n / need-01 :arg0 (p3 / person) :arg1 (m / money))))
(m / multi-sentence :snt1 (r / report-01 :arg1 (e / expect-01 :arg1 (a / arrive-01 :arg1 (f / flags :name (n / name :op1 (f2 / flags))) :arg4 (r2 / rio) :time (o / ordinal-entity :value 11)))) :snt2 (s / send-01 :arg0 (c / committee :arg0-of (o2 / organize-01) :mod (o3 / olympic)) :arg1 (f3 / flags) :arg2 (v / venues :mod (v2 / various)) :time (a2 / after :op1 (r3 / receive-01 :arg0 (c2 / committee) :arg1 (f4 / flag :poss (e2 / embassy :location (c3 / country :name (n2 / name :op1 "N-A"))))))))
(a / and :op1 (l / locate-01 :arg1 (b / binbin :mod (z / zhang)) :location (a2 / and :op1 (m / middle) :op2 (r / reach-01 :arg1-of (l2 / low-04 :degree (m2 / more))))) :op2 (s / seem-01 :arg1 (b2 / be-located-at-91 :arg1 (b3 / binbin) :arg2 (f / far :degree (q / quite)) :mod (s2 / still))) :time (g / game))
(c / contrast-01 :arg1 (t / thing :arg1-of (c2 / choose-01 :arg0 (p / person :quant 2 :mod (t2 / this) :arg0-of (h / have-org-role-91 :arg2 (m / minister :mod (p2 / prime) :mod (f / female)))))) :arg2 (b / be-located-at-91 :arg1 (p3 / person :quant 2 :mod (m2 / male) :arg0-of (h2 / have-org-role-91 :arg2 (m3 / minister :mod (p4 / prime) :mod (m4 / male)))) :arg2 (g / go-02 :arg0 (p5 / person) :arg4 (g2 / go-02))) :mod (q / quite))
(m / multi-sentence :snt1 (s / say-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (p2 / political-party :name (n / name :op1 "N-A")))) :arg1 (g / give-01 :arg0 (n2 / no-one) :arg1 (t / thing :arg1-of (d / donate-01 :arg0 (s2 / society))) :arg2 (y / you) :arg1-of (l / long-03) :time (t2 / today))) :snt2 (c / cause-01 :arg1 (c2 / chance-02 :arg0 (y2 / you) :arg1 (a / and :op1 (s3 / support-01 :arg1 (s4 / society)) :op2 (s5 / sponsorship)) :mod (j / just) :condition (c3 / confiscate-01 :arg0 (p3 / party) :direction (a2 / away)))) :snt3 (c4 / chance-02 :arg0 (y3 / you) :arg1 (g2 / go-01 :arg1 (y4 / you) :time (a3 / asset :polarity -)) :mod (j2 / just)))
FAILED_TO_PARSE#Number of opening and closing brackets doesn't match.
(m / multi-sentence :snt1 (b / be-located-at-91 :arg1 (a / and :op1 (p / person :arg0-of (t / tour-01)) :op2 (p2 / person :arg0-of (t2 / tour-01)) :quant (a2 / around :op1 10)) :arg2 (t3 / tour-01 :arg0 (p3 / person) :arg1 (p4 / person :arg0-of (t4 / tour-01)) :location (a3 / around :op1 (h / hotel :mod (k / kempinski)))) :time (m2 / morning :quant 8)) :snt2 (g / group :mod (i / individual) :mod (i2 / individual) :arg0-of (g2 / go-06 :arg1 (t5 / tour-01 :duration (t6 / temporal-quantity :quant (N / N-A) :unit (d / day))))))
(t / toucan :mod (f / female) :mod (c / cute) :domain (g / gracia :arg1 (b / breath :mod (r / rain-01) :mod (t2 / tropical))))
(m / multi-sentence :snt1 (c / contrast-01 :arg1 (t / technology :polarity - :time (f / future) :domain (p / printing)) :arg2 (e / enter-01 :arg0 (p2 / person :arg0-of (h / have-org-role-91 :arg1 (c2 / company :name (n / name :op1 "N-A") :mod (c3 / country :name (n2 / name :op1 "N-A"))) :arg2 (c4 / chairman))) :arg1 (l / life :poss (p3 / person)) :mod (r / really))) :snt2 (s / say-01 :arg0 (p4 / person :arg0-of (h2 / have-org-role-91 :arg1 (g / government-organization :arg0-of (g2 / govern-01 :arg1 (c5 / country))) :arg2 (c6 / chairman))) :arg1 (i / international :arg1 (i2 / international :mod (x / xinhua)))))
(a / and :op1 (c / come-01 :arg1 (c2 / concern-01 :arg1-of (r / rise-01)) :arg4 (a2 / along :op1 (c3 / concern-01 :arg0 (i / industry :mod (v / various))))) :op2 (r2 / resume-01 :mode (i2 / interrogative) :arg1 (p / produce-01)))
(m / multi-sentence :snt1 (r / reflect-01 :arg1 (f / factor :mod 3 :mod (t / this)) :arg2 (r2 / reason :arg0-of (c / cause-01 :arg1 (c2 / change-01 :arg1 (p / pattern :mod (g / grow-01) :poss (w / we)) :degree (r3 / relative))))) :snt2 (c3 / change-01 :polarity - :arg1 (g2 / grow-01 :mod (g3 / government-led)) :time (y / yet) :manner (f2 / fundamental)))
(m / multi-sentence :snt1 (r / reminded :arg0 (p / police) :arg1 (p2 / public :mod (g / general-02)) :arg2 (a / and :op1 (d / door) :op2 (w / windows)) :time (b / before :op1 (g2 / go-out-17 :arg0 (p3 / public)))) :snt2 (r2 / recommend-01 :arg1 (c / choose-01 :arg0 (c2 / citizen) :arg1 (m2 / material :mod (s / steel) :arg1-of (h / hard-04 :degree (r3 / relative))) :purpose (w2 / window :mod (a2 / anti-theft)))))
(m / multi-sentence :snt1 (b / begin-01 :arg1 (a / apply-01 :arg0 (c / country :name (n / name :op1 "N-A")) :arg1 (b2 / become-01 :arg1 (c2 / country) :arg2 (m2 / member :mod (p / permanent) :arg2-of (h / have-org-role-91 :arg0 (c3 / country) :arg1 (o / organization))) :mod (p2 / permanent))) :time (e / early :op1 (d / date-entity :century (N / N-A)))) :snt2 (b3 / begin-01 :polarity - :arg1 (t / this)) :snt3 (c4 / coincidence :polarity - :domain (t2 / this)))
(c / case :time (m / morning :mod (e / early)) :purpose (e2 / ensure-01 :arg0 (c2 / court) :arg1 (a / and :op1 (r / right) :op2 (i / interest :poss (b / boat :name (n / name :op1 (s / sinking) :op2 (s2 / sinking)))))))
(a / and :op1 (d / decide-01 :arg0 (i / i) :arg1 (c / come-01 :arg1 (i2 / i))) :op2 (f / feel-01 :arg0 (i3 / i) :arg1 (f2 / fresh-04 :arg1 (i4 / i) :degree (q / quite))) :time (a2 / after :op1 (k / know-01 :arg0 (i5 / i) :arg1 (f3 / festival :arg1-of (s / special-02) :mod (t / this)) :medium (o / online))))
(w / watch-01 :arg0 (i / i) :arg1 (p / perform-02 :arg0 (p2 / person :arg0-of (h / have-rel-role-91 :arg1 (p3 / person :arg0-of (h2 / have-rel-role-91 :arg1 (p4 / person :arg0-of (h3 / have-rel-role-91 :arg1 (p5 / person) :arg2 (d / daughter))) :arg2 (d2 / daughter))) :arg2 (d3 / daughter))) :time (b / before :op1 (n / now) :quant (t / temporal-quantity :quant (N / N-A) :unit (y / year)))))
(a / and :op1 (g / gold :mod (e / emotive :degree (m / more))) :op2 (s / say-01 :arg0 (t / that) :arg1 (s2 / something)))
(p / possible-01 :arg1 (t / tour-01 :arg0 (p2 / person :arg0-of (a / attend-01)) :arg1 (a2 / and :op1 (r / room :mod (c / central)) :op2 (r2 / room :mod (c2 / cactus)) :op3 (r3 / room :mod (t2 / tea)) :op4 (r4 / room :mod (t3 / tea)))))
(k / know-01 :arg0 (s / she) :arg1 (a / and :op1 (4 / 4-0 :arg1 (p / person :mod (c / country :name (n / name :op1 "Britain"))) :location (t / tournament :name (n2 / name :op1 (o / olympic)))) :op2 (t2 / tied :arg1 (p2 / person) :arg2 (p3 / place :ord (o2 / ordinal-entity :value 1) :location (g / group :poss (p4 / person) :prep-with (p5 / person :arg0-of (h / have-org-role-91 :arg1 (g2 / group :poss (p6 / person)) :arg3 (l / lead-02 :arg0 (p7 / person) :arg1 (c2 / country))))) :arg1-of (r / remain-01 :arg3 (n3 / name :op1 (u / unbeaten) :op2 (2 / 2-0) :op3 (22 / 2-0) :op4 (u2 / unbeaten)))))) :location (h2 / here))
(s / say-01 :arg1 (a / and :op1 (a2 / act-02 :arg0 (p / person :arg0-of (s2 / suffer-01 :arg1 (p2 / person :arg0-of (s3 / suffer-01))))) :op2 (s4 / say-01 :arg0 (p3 / person :arg0-of (h / have-org-role-91 :arg2 (z / ziegelman :mod (j / jane)))) :arg1 (i / it))) :arg2 (p4 / person :name (n / name :op1 "N-A")))
(g / grimaced :name (n / name :op1 (m / mr.) :op2 (c / coe) :op3 (c2 / coe)))
(c / contrast-01 :arg1 (p / possible-01 :arg1 (e / enjoy-01 :arg0 (w / woman :mod (g / grand)) :arg1 (t / temporal-quantity :quant (N / N-A) :unit (h / hour) :mod (s / service :mod (m / medicine) :arg1-of (f / free-04 :arg3 (a / and :op1 (c2 / charge-01) :op2 (v / veteran :prep-with (d / doctor)))))))) :arg2 (p2 / pay-01 :arg0 (w2 / woman) :arg3 (c3 / counseling :mod (m2 / medicine)) :mod (a2 / also)))
(a / add-01 :arg1 (a2 / adds :domain (c / code)) :time (n / now))
(a / and :op1 (d / deal-01 :arg0 (i / i) :arg2 (p / person :arg0-of (t / tour-01) :mod (c / country :name (n / name :op1 "N-A"))) :frequency (o / often)) :op2 (s / see-01 :arg0 (i2 / i) :arg1 (t2 / travel-01 :arg0 (t3 / they) :arg4 (c2 / country)) :degree (v / very)))
(m / meet-01 :polarity - :arg1 (c / condition :mod (t / this)) :time (c2 / current))
(s / say-01 :arg0 (c / company) :arg1 (g / give-01 :arg0 (c2 / cut-02 :mod (a / additional)) :arg1 (r / room :arg1-of (n / need-01 :purpose (m / move-01 :arg1 (r2 / room) :arg2 (m2 / market)))) :arg2 (c3 / company)))
(m / measure-02 :mod (k / kepler))
(m / multi-sentence :snt1 (c / contrast-01 :arg2 (c2 / claim-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg2 (o / official))) :arg1 (w / want-01 :arg0 (m2 / man :arg0-of (h2 / have-org-role-91 :arg2 (p2 / president :mod (p3 / potential)))) :arg1 (r / run-01 :arg0 (m3 / man) :arg1 (p4 / policy :mod (e / environment) :poss (c3 / country :name (n / name :op1 "Russia")))) :manner (s / sudden)))) :snt2 (m4 / meet-03 :arg0 (p5 / person :arg0-of (h3 / have-org-role-91 :arg2 (p6 / president :mod (p7 / potential)))) :manner (s2 / sudden)))
(g / give-01 :arg1 (d / drug) :arg2 (t / temporal-quantity :quant (N / N-A) :unit (m / month)) :time (a / already) :time (a2 / after :op1 (a3 / attack-01 :mod (h / heart))) :arg0-of (r / reduce-01 :arg1 (r2 / risk-01 :arg2 (o / or :op1 (s / stroke) :op2 (a4 / attack-01 :mod (a5 / another))))))
(q / quick-02 :arg1 (a / and :op1 (a2 / apologize-01 :arg0 (n / network)) :op2 (r / release-01 :arg0 (n2 / network) :arg1 (s / state-01))) :mod (a3 / also))
(t / throw-01 :arg1 (a / and :op1 (r / rubbish) :op2 (t2 / toys :mod (o / old))) :arg2 (s / side :arg1-of (o2 / overgrown) :part-of (h / house :poss (c / council))))
(a / and :op1 (r / raid-01 :arg0 (p / police) :arg1 (p2 / property)) :op2 (f / find-01 :arg0 (p3 / police) :arg1 (p4 / property)) :op3 (f2 / find-01 :arg0 (p5 / police) :arg1 (a2 / and :op1 (m / more-than :op1 (7 / 70g)) :op2 (m2 / more-than :op1 (72 / 70g)) :op3 (m3 / monetary-quantity :quant 1,700 :unit (y / yuan)) :op4 (m4 / monetary-quantity :quant 1,700 :unit (y2 / yuan)))))
FAILED_TO_PARSE#Two concepts in a row.
FAILED_TO_PARSE#Number of opening and closing brackets doesn't match.
(p / produce-01 :arg0 (p2 / person :arg0-of (h / have-org-role-91 :arg2 (d / doctor :mod (c / corridor)))) :arg1 (p3 / program :name (n / name :op1 (' / '')) :arg1-of (p4 / produce-01 :arg0 (s / survey-01 :arg1 (n2 / news)))) :li 2014)
(c / contrast-01)
(m / multi-sentence :snt1 (a / and :op1 (a2 / attract-01 :arg0 (t / trade-01 :mod (t2 / this)) :arg1 (i / invest-01)) :op2 (e / exhibit-01 :arg0 (t3 / trade-01) :arg1 (i2 / invest-01)) :location (w / worldwide)) :snt2 (a3 / and :op1 (i3 / invite-01 :arg0 (i4 / it) :arg1 (p / petition-01 :arg0 (c / country) :arg1 (c2 / country))) :op2 (t4 / target-01 :arg0 (i5 / it) :arg1 (c3 / country :mod (m2 / market) :arg1-of (t5 / target-01) :arg1-of (r / relate-01 :arg2 (a4 / and :op1 (b / belt) :op2 (r2 / road))))) :mod (p2 / particular)))
(r / relate-01 :arg1 (i / industry :arg1-of (t / target-01)) :arg2 (i2 / industry :mod (c / coal)) :concession (i3 / involve-01 :polarity - :arg1 (p / person :quant 4 :ord (o / ordinal-entity :value 1)) :arg2 (i4 / industry :mod (c2 / coal)) :arg1-of (d / direct-02)))
(m / multi-sentence :snt1 (a / age-01 :arg1 (h / he) :arg2 (t / temporal-quantity :quant (N / N-A) :unit (y / year) :mod (o / only)) :time (a2 / after :op1 (a3 / all))) :snt2 (p / possible-01 :arg1 (p2 / perform-02 :arg0 (h2 / he) :arg1 (s / series :mod (t2 / tv) :quant (s2 / some)) :accompanier (p3 / popularity :poss (h3 / he)))))
(m / multi-sentence :snt1 (o / obtain-01 :polarity - :arg0 (c / conflict-01 :location (u / url-entity :value (a / august))) :arg1 (t / thing :arg2-of (r / result-01 :arg1 (i / investigate-01))) :time (y / yet)) :snt2 (o2 / o :arg1 (t2 / taxi :poss (p / person :quant 2 :mod (a2 / another) :arg0-of (d / drive-01))) :location (r2 / residence :op1 (v / value-interval :op1 0 :op2 0))))
(m / multi-sentence :snt1 (s / scare-01 :arg1 (i / it) :mod (r / really) :time (n / now)) :snt2 (b / break-01 :arg1 (h / heart :part-of (i2 / i)) :time (s2 / soon) :time (h2 / hold-01 :polarity - :arg0 (p / person :arg0-of (h3 / have-rel-role-91 :arg1 (i3 / i) :arg2 (c / child))) :arg1 (p2 / person :arg0-of (h4 / have-rel-role-91 :arg1 (i4 / i) :arg2 (c2 / child)))) :time (s3 / soon)))
(c / classify-01 :arg1 (t / tigers :name (n / name :op1 (s / siberian)) :arg1-of (- / -rrb- :arg0 (g / government-organization :name (n2 / name :op1 "N-A") :mod (w / world))) :arg0-of (-2 / -rrb- :arg1 (l / list :mod (r / red) :consist-of (s2 / species :arg1-of (e / endanger-01))))) :arg2 (-3 / -lrb- :arg1-of (e2 / endanger-01)) :time (c2 / current))
(f / focus-01 :arg0 (r / research-01 :time (c / current)) :arg2 (c2 / change-01 :arg1 (a / and :op1 (p / politics :mod (g / globe)) :op2 (e / economy) :op3 (t / technology) :op4 (t2 / technology) :op5 (c3 / culture) :op6 (r2 / religion) :op7 (a2 / and))) :arg0-of (c4 / cause-01 :arg1 (b / bring-01 :arg0 (c5 / change-01 :mod (t3 / this)) :arg1 (a3 / and :op1 (g2 / govern-01 :mod (n / nation)) :op2 (g3 / govern-01 :mod (g4 / globe)) :op3 (g5 / govern-01 :mod (g6 / globe))))))
(m / multi-sentence :snt1 (p / perform-02 :arg0 (i / i) :arg1 (t / this) :arg1-of (r / reasonable-02)) :snt2 (i2 / impress-01 :arg1 (i3 / i) :arg2 (i4 / i)) :snt3 (t2 / think-01 :arg0 (i5 / i) :arg1 (n / need-01 :arg1 (l / let-01 :arg1 (u / understand-01 :arg0 (p2 / person :arg0-of (h / have-rel-role-91 :arg1 (p3 / person) :arg2 (d / daughter))) :arg1 (a / and :op1 (c / culture :mod (c2 / country :name (n2 / name :op1 "N-A"))) :op2 (a2 / art :mod (o / opera) :mod (c3 / country :name (n3 / name :op1 "N-A")))))))))
(s / say-01 :arg0 (p / person :arg0-of (o / observe-01) :quant (s2 / some)) :arg1 (c / contrast-01 :arg1 (i / inspire-01 :arg0 (t / thing :mod (t2 / this)) :arg1 (f / filter :mod (t3 / this))) :arg2 (s3 / say-01 :arg0 (p2 / person :arg0-of (o2 / observe-01) :quant (s4 / some)) :arg1 (r / racially :domain (t4 / thing)))))
(m / multi-sentence :snt1 (b / book :arg0 (b2 / book :name (n / name :op1 (m2 / mr.) :op2 (c / coe) :op3 (s / suey)) :mod (l / last)) :arg1 (c2 / cuisine :location (c3 / country :name (n2 / name :op1 "America"))) :mod (l2 / last)) :snt2 (c4 / contrast-01 :arg1 (t / tell-01 :arg0 (p / person :mod (c5 / country :name (n3 / name :op1 "America"))) :arg1 (s2 / story :topic (l3 / life) :location (s3 / side :arg1-of (l4 / low-04 :degree (m3 / more)))) :arg2 (s4 / story :topic (l5 / live-01) :location (s5 / side :mod (e / east) :arg1-of (l6 / low-04 :degree (m4 / more))))) :arg2 (o / orchards :arg1 (s6 / story :topic (l7 / live-01) :location (s7 / side :arg1-of (l8 / low-04 :degree (m5 / more)))))))
FAILED_TO_PARSE#Two concepts in a row.
(g / go-02 :arg0 (p / police :mod (p2 / person :arg0-of (t / tour-01)) :mod (c / country :name (n / name :op1 "N-A"))) :arg4 (s / station :mod (b / brigade) :consist-of (p3 / police :mod (c2 / country :name (n2 / name :op1 "N-A")))) :purpose (c3 / communicate-01 :arg0 (p4 / police) :arg2 (p5 / paradise :poss (p6 / police))) :time (d / day :time (c4 / current) :time (b2 / before :op1 (s2 / study-01))))
(a / and :op1 (e / expect-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg2 (a2 / agl))) :arg1 (c / continue-01 :arg0 (p2 / person) :arg1 (o / operate-01 :arg0 (p3 / person)))) :op2 (m / mean-01 :arg1 (d / demand-01 :arg0 (p4 / person) :arg1 (e2 / electricity)) :arg2 (s / say-01 :arg0 (p5 / person))))
(s / say-01 :arg0 (i / i) :arg1 (t / thing :arg2-of (v / value-01 :arg1 (c / contract-02)) :arg1-of (v2 / value-01 :arg2 (m / monetary-quantity :quant 187 :unit (y / yuan :mod (r / renminbi))))) :arg2 (t2 / thing :arg2-of (v3 / value-01 :arg1 (c2 / contract-02))) :time (a / already))
(a / and :op1 (w / wrong-02 :arg1 (d / doubters) :arg2 2012) :op2 (p / prove-01 :arg1 (w2 / wrong-02 :arg1 (d2 / doubters) :arg2 (h / heathrow))))
(e / expect-01 :arg1 (s / spend-01 :arg1 (p / project :mod (n / new) :location (l / location :name (n2 / name :op1 "north" :op2 "sea"))) :arg3 (m / monetary-quantity :quant 1.4 :unit (d / dollar)) :arg3 (p2 / project :mod (n3 / new) :location (l2 / location :name (n4 / name :op1 "north" :op2 "sea"))) :arg1-of (c / compare-01 :arg2 (a / around :op1 (m2 / monetary-quantity :quant 7 :unit (d2 / dollar) :time (b / before :op1 (n5 / now) :duration (t / temporal-quantity :quant (N / N-A) :unit (y / year))))))))
(a / and :op1 (t / thing :arg1-of (t2 / think-01 :arg0 (w / we))) :op2 (c / condolence :topic (a2 / and :op1 (f / family :arg1-of (h / have-org-role-91 :arg0 (w2 / we) :arg2 (m / member))) :op2 (p / person :arg0-of (h2 / have-rel-role-91 :arg1 (w3 / we) :arg2 (f2 / friend)))) :time (d / difficult :mod (t3 / this))))
(r / reach-01 :arg0 (d / dettori :name (n / name :op1 (f / frankie) :op2 (d2 / dettori))) :arg1 (w / winners :quant 3000) :location (n2 / newmarket :location (n3 / newmarket)))
(p / pleased :arg0 (i / i) :arg1 (i2 / it) :arg2 (h / have-06 :arg0 (i3 / it) :arg1 (e / event) :time (b / before :op1 (n / now) :quant (t / temporal-quantity :quant (N / N-A) :unit (y / year)))) :degree (v / very))
(b / become-01 :arg1 (p / person :arg0-of (h / have-org-role-91 :arg2 (m / minister :mod (p2 / prime)))) :arg2 (p3 / person :arg0-of (h2 / have-org-role-91 :arg2 (m2 / minister :mod (p4 / prime)))) :time (b2 / before :op1 (r / return-01 :arg1 (p5 / person) :arg4 (p6 / presidency) :time (l / late :op1 (t / temporal-quantity :quant (N / N-A) :unit (y / year) :mod (j / just)) :degree (m3 / more)))))
(s / say-01 :arg0 (p / person :name (n / name :op1 "N-A") :arg0-of (m / mr)) :arg1 (c / contrast-01 :arg1 (n2 / nothing) :arg2 (o / or :op1 (a / achieves :arg1 (a2 / action :mod (i / industry)) :mod (o2 / or :op1 (l / little) :op2 (n3 / nothing)))) :op2 (c2 / cause-01 :arg0 (a3 / action) :arg1 (w / worry-01 :arg0 (a4 / action) :arg1 (a5 / and :op1 (t / team :arg0-of (h / have-rel-role-91 :arg2 (p2 / patient))) :op2 (p3 / person :arg0-of (h2 / have-rel-role-91 :arg2 (p4 / patient))) :op3 (f / family :arg1-of (h3 / have-org-role-91 :arg0 (p5 / person) :arg2 (m2 / member))) :op4 (f2 / family :arg1-of (h4 / have-org-role-91 :arg0 (p6 / person) :arg2 (m3 / member))) :op5 (f3 / family :arg1-of (h5 / have-org-role-91 :arg0 (p7 / person) :arg2 (m4 / member))))))))
(t / take-01 :arg0 (p / person :quant 1 :arg0-of (u / use-01)) :arg1 (s / site) :purpose (d / declare-02 :arg0 (p2 / person) :arg1 (h / happy :poss (p3 / person))) :time (r / recent) :purpose (d2 / declare-02 :arg0 (p4 / person) :arg1 (t2 / think-01 :arg0 (r2 / rest :part-of (i / internet)) :arg1 (s2 / select-01 :arg1 (a / and :op1 (s3 / solo) :op2 (j / jennifer)) :mod (a2 / actual)))))
(s / say-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg3 (j / judge-01))) :arg1 (p2 / play-02 :arg0 (a / and :op1 (g / grocery) :op2 (r / restaurant) :op3 (r2 / restaurant) :op4 (r3 / restaurant)) :arg1 (r4 / role :mod (b / big :degree (m / more :degree (m2 / much)) :compared-to (f / feed-01 :arg0 (p3 / person) :arg2 (c / condition :mod (p4 / precarious :degree (e / extreme)))))) :manner (s2 / simple)))
(s / solve-01 :arg0 (p / person :arg0-of (b / broker-01 :arg1 (5 / 5,000-yuan)) :mod (t / this)) :arg1 (p2 / problem :topic (n / need-01 :arg0 (p3 / person) :arg1 (m / money))))
(s / say-01 :arg0 (p / person :arg0-of (h / have-rel-role-91 :arg1 (s2 / she) :arg2 (p2 / parent))) :arg1 (c / contrast-01 :arg1 (t / talk-01 :polarity - :arg0 (p3 / person) :arg1 (w / work-01 :arg0 (p4 / person) :arg1-of (h2 / hard-02))) :arg2 (t2 / talk-01 :arg0 (p5 / person) :arg1 (t3 / thing :mod (h3 / happy) :quant (s3 / some)) :degree (m / more))) :arg2 (p6 / person :arg0-of (h4 / have-rel-role-91 :arg1 (s4 / she) :arg2 (p7 / parent))))
(e / enter-01 :arg0 (p / police :mod (c / central)) :arg1 (p2 / prison :location (a / area :mod (l / leyte))) :time (y / yesterday) :arg1-of (c2 / cause-01 :arg0 (k / kill-01 :arg0 (p3 / person :arg0-of (h / have-org-role-91 :arg1 (p4 / police) :arg2 (p5 / police))) :arg1 (t / torturer :arg0-of (k2 / kill-01 :arg1 (p6 / person :arg0-of (h2 / have-org-role-91 :arg1 (p7 / police) :arg2 (' / ''))) :arg1-of (a2 / attempt-01 :arg0 (p8 / person)))))))
(t / touch-01 :arg0 (s / story :topic (g / gracia :mod (t2 / toucan))) :arg1 (a / and :op1 (p / person :arg0-of (h / have-org-role-91 :arg2 (d / director :mod (d2 / documentary))) :arg1-of (f / fame-01)) :op2 (p2 / person :arg0-of (p3 / produce-01 :arg1 (c / channel :name (n / name :op1 (e / el)))))) :arg2 (p4 / person :name (n2 / name :op1 "john" :op2 "hoffman")))
(m / multi-sentence :snt2 (e / expect-01 :arg1 (w / worsen :arg1 (g / grow-01 :arg1 (p / product :arg1-of (g2 / gross-03) :mod (d / domestic) :mod (d2 / domestic))) :time (t / term :mod (p2 / process-01)))))
(p / possible-01 :arg1 (r / rely-01 :arg0 (p2 / person :mod (c / country :name (n / name :op1 "N-A"))) :arg1 (s / support-01 :arg0 (p3 / person) :arg1 (s2 / support-01 :arg0 (p4 / person) :arg1 (f / fan :mod (h / huge)))) :degree (t / total)) :mod (a / at-least :degree (v / very)))
(l / lenses :arg1 (s / skill :mod (f / feature-warping) :arg0-of (g / generate-01 :arg1 (d / day :quant (m / more-than :op1 30000000) :arg1-of (e / enhance-01)))) :manner (b / blunt-02))
(r / release-01 :polarity - :arg0 (c / company) :arg1 (f / figure :topic (d / diversity) :topic (a / and :op1 (d2 / diversity :poss (c2 / company)) :op2 (s / status :poss (c3 / company) :prep-as (c4 / company :arg1-of (p / private-03))))))
(k / know-01 :arg0 (s / she) :arg1 (a / and :op1 (4 / 4-0 :arg1 (p / person :mod (c / country :name (n / name :op1 "Britain"))) :location (t / tournament :name (n2 / name :op1 (o / olympic)))) :op2 (t2 / tied :arg1 (p2 / person) :arg2 (p3 / place :ord (o2 / ordinal-entity :value 1) :location (g / group :poss (p4 / person) :prep-with (p5 / person :arg0-of (h / have-org-role-91 :arg1 (g2 / group :poss (p6 / person)) :arg3 (l / lead-02 :arg0 (p7 / person) :arg1 (c2 / country))))) :arg1-of (r / remain-01 :arg3 (n3 / name :op1 (u / unbeaten) :op2 (2 / 2-0) :op3 (22 / 2-0) :op4 (u2 / unbeaten)))))) :location (h2 / here))
(b / bam :arg1 (t / team :mod (t2 / that)))
(r / replace-01 :arg1 (f / fruit :arg1-of (f2 / fresh-04)) :arg2 (f3 / fruit :arg1-of (c / cheap-02 :degree (m / more))))
(h / have-part-91 :arg1 (r / radar :mod (t / this)) :arg2 (m / missile :mod (b / ballistics)) :time (e / early) :arg1-of (u / use-01 :arg2 (m2 / monitor-01 :arg1 (m3 / missile :mod (c / country :name (n / name :op1 "N-A"))))))
(b / become-01 :arg1 (r / rate :mod (t / tax-01 :arg2 (f / federal))) :arg2 (i / issue-02 :arg0 (e / elect-01 :arg2 (p / president))))
(r / retain-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg2 (p2 / president))) :arg1 (t / thing :arg1-of (p3 / propose-01)) :mod (a / also))
(g / good :degree (m / most) :domain (e / event :mod (t / team)) :time (a / always))
FAILED_TO_PARSE#Two concepts in a row.
(a / and :op2 (p / possible-01 :arg1 (e / effect-03 :mod (a2 / additional) :mod (a3 / additional) :time (s / since :op1 (r / rate-entity-91 :arg1 (r2 / rate-entity-91 :arg1 (a4 / around :op1 (m / monetary-quantity :quant (N / N-A) :unit (p2 / pound))) :arg2 (t / temporal-quantity :quant (N2 / N-A) :unit (y / year))) :arg2 (o / output :mod (e2 / electricity) :mod (e3 / entire) :poss (c / company :name (n / name :op1 "N-A"))))))))
(b / bracing :arg1 (s / service :mod (c / community) :arg1-of (l / legal-02)) :arg2 (c2 / cut-02 :arg1 (s2 / service) :mod (f / further)) :time (a / already))
(h / hope-01 :arg0 (p / person :arg0-of (h2 / have-org-role-91 :arg1 (c / country :name (n / name :op1 "N-A")) :arg2 (s / spokeswoman))) :arg1 (r / return-02 :arg0 (p2 / person) :arg1 (t / thing :arg1-of (c2 / comment-01 :arg0 (p3 / person))) :arg2 (t2 / thing :arg1-of (c3 / comment-01 :arg0 (p4 / person))) :time (i / immediate :degree (t3 / total))))
(a / and :op1 (o / open-01 :arg1 (i / investigate-01 :arg2-of (c / criminal-03))) :op2 (s / step-01 :arg1 (p / person :arg0-of (h / have-rel-role-91 :arg2 (l / lawyer))) :arg2 (s2 / situation :arg1-of (r / resemble-01 :arg2 (t / this)))) :op3 (t2 / tell-01 :arg0 (p2 / person :name (n / name :op1 "gilles" :op2 "hofstetter") :arg0-of (h2 / have-rel-role-91 :arg1 (p3 / person) :arg2 (l2 / lawyer))) :arg1 (p4 / person :arg0-of (h3 / have-rel-role-91 :arg1 (p5 / person) :arg2 (l3 / lawyer))) :arg2 (p6 / person :arg0-of (h4 / have-rel-role-91 :arg1 (p7 / person) :arg2 (l4 / lawyer)))))
(c / contrast-01 :arg1 (l / likely-01 :arg1 (f / feature-01 :arg0 (p / planet) :arg1 (r / region :arg1-of (d / dry-02 :degree (m / more) :compared-to (e / earth))))) :arg2 (a / and :op1 (h / have-03 :arg0 (p2 / planet) :arg1 (w / water :quant (e2 / enough)) :purpose (h2 / host-01 :arg0 (p3 / planet) :arg1 (a2 / and :op1 (l2 / life) :op2 (g / guard-01)) :manner (r2 / rapid))) :time (o / once)))
(e / expose-01 :arg1 (a / and :op1 (h / heat) :op2 (l / light :mod (u / ultraviolet)) :quant (m / much :degree (t / too))) :arg2 (a2 / and :op1 (h2 / heat) :op2 (l2 / light :mod (u2 / ultraviolet)) :quant (s / several :op1 (t2 / temporal-quantity :quant (N / N-A) :unit (y / year)))))
(b / banking :arg1 (t / they) :arg2 (r / rush-01 :arg1 (t2 / they) :arg2 (m / mediterranean) :mod (l / late-season)))
(a / appoint-01 :arg1 (p / person :name (n / name :op1 "anton" :op2 "vaino") :arg0-of (h / have-org-role-91 :arg2 (d / deputy))) :arg2 (p2 / person :arg0-of (h2 / have-org-role-91 :arg2 (d2 / deputy))) :time (s / since :op1 (a2 / appoint-01 :arg1 (p3 / person) :arg2 (s2 / successor :poss (p4 / person)))) :li 2012)
(i / it :ord (o / ordinal-entity :value 1 :range (b / between :op1 (t / temporal-quantity :quant (N / N-A) :unit (y / year)) :op2 (t2 / temporal-quantity :quant (N2 / N-A) :unit (y2 / year)) :arg1-of (c / complete-01 :time (n / now) :location (a / around :op1 (e / each :arg1-of (i2 / include-91 :arg2 (p / photograph-01 :quant 3 :location (b2 / bridge)))))))) :domain (i3 / it))
(t / thing :arg2-of (m / mean-01 :arg1 (t2 / thing :arg2-of (m2 / mean-01 :arg1 (t3 / thing :arg1-of (f / flaw-01 :time (e / early :op1 (w / week :mod (t4 / this)) :degree (m3 / more))))))) :mod (n / new) :mod (w2 / whole) :time (w3 / week :mod (t5 / this)))
(s / say-01 :arg1 (r / run-02 :arg0 (i / i) :arg1 (c / campaign-01 :arg0 (h / he) :arg1 (v / vote-01 :arg0 (p / person :mod (r2 / religious-group :name (n / name :op1 "N-A")) :mod (c2 / country :name (n2 / name :op1 "N-A"))) :arg1 (v2 / vote-01 :arg0 (p2 / person) :arg1 (p3 / person))))) :arg2 (r3 / rahman))
(b / begin-01 :arg1 (r / review-01 :arg0 (a / and :op1 (p / person :mod (c / country :name (n / name :op1 "N-A"))) :op2 (c2 / center :mod (s / service :mod (t / trade-01)))) :arg1 (a2 / and :op1 (r2 / reserve) :op2 (c3 / center :mod (s2 / service :mod (t2 / trade-01)))) :purpose (r3 / review-01 :arg0 (a3 / and) :arg1 (m / material :mod (a4 / apply-01)))) :time (a5 / after :op1 (s3 / submit-01 :arg0 (x / xiuping) :arg1 (a6 / and :op1 (f / form :mod (a7 / apply-01)) :op2 (t3 / thing :arg1-of (r4 / report-01 :arg0 (p2 / project :mod (s4 / service :mod (t4 / trade-01)))))))))
(s / shift-01 :arg1 (b / behave-01 :arg0 (g / government-organization :arg0-of (g2 / govern-01)) :mod (m / mandatory)) :arg2 (b2 / behave-01 :arg0 (g3 / government-organization) :arg1 (m2 / market :mod (c / conscious))) :purpose (b3 / behave-01 :arg0 (m3 / market :mod (c2 / conscious)) :arg1 (b4 / behave-01 :arg0 (m4 / market :mod (c3 / conscious)) :arg1 (p / protect-01 :arg0 (g4 / government-organization) :arg1 (a / and :op1 (e / environment) :op2 (n / nature) :op3 (h / health :mod (p2 / public))) :mod (t / true)))))
(o / organize-01 :arg0 (c / committee :mod (s / standing)) :arg1 (g / group :quant 2 :mod (r / research-01)) :purpose (c2 / conduct-01 :arg0 (c3 / committee) :arg1 (r2 / research-01 :location (c4 / city :quant (s2 / some))) :purpose (p / prepare-01 :arg0 (g2 / group) :arg1 (v / veteran :arg1-of (s3 / special-02)))) :location (m / mid-august :mod (m2 / mid-august)))
(s / state-01 :arg0 (a / authority :mod (p / prison)) :arg1 (t / thing :arg1-of (s2 / state-01) :arg0-of (d / detail-01) :arg2-of (i / include-01 :arg1 (t2 / thing :manner-of (g / get-on-21 :arg0 (p2 / person :arg1-of (i2 / imprison-01)))))) :time (y / yet))
(m / multi-sentence :snt1 (a / and :op1 (b / be-located-at-91 :arg1 (a2 / and :op1 (e / economy :mod (d / domestic)) :op2 (e2 / economy :mod (i / international))) :arg2 (a3 / and :op1 (e3 / economy :mod (d2 / domestic)) :op2 (e4 / economy :mod (i2 / international))) :arg1-of (d3 / deep-02)) :op2 (e5 / expect-01 :arg1 (r / recovery :arg1 (e6 / economy :mod (w / world))) :degree (l / less) :compared-to (e7 / expect-01))) :snt2 (e8 / expect-01 :arg1 (h / heavy :degree (r2 / relative) :domain (p / pressure-01 :arg1 (e9 / export-01)) :mod (s / still))))
(i / involve-01 :arg1 (a / and :op1 (t / technology :name (n / name :op1 (3 / 3d))) :op2 (t2 / technology :name (n2 / name :op1 (c / chuck)))) :arg2 (d / design-01 :arg1 (b / beak :mod (g / gracia))) :mod (a2 / also))
(a / and :op1 (p / poor :domain (p2 / product :mod (m / mortar)) :arg1-of (c / cause-01 :arg0 (c2 / content :mod (s / sulfur :arg1-of (h / high-02))))) :op2 (b / become-01 :arg1 (p3 / product) :arg2 (c3 / cause :arg0-of (c4 / cause-01 :arg1 (p4 / pollution :mod (e / environment))))))
(m / multi-sentence :snt1 (a / and :op1 (f / fair :domain (e / ensure-01 :arg1 (f2 / fair :domain (a2 / action :mod (p / person :arg0-of (s / study-01)))))) :op2 (o / open-01 :arg1 (i / information :mod (b / basic) :poss (p2 / person :quant 100 :arg0-of (s2 / study-01)))) :purpose (e2 / ensure-01 :arg0 (n / newspaper) :arg1 (f3 / fair :domain (a3 / action :mod (p3 / person :arg0-of (s3 / study-01)))))) :snt2 (n2 / name-01 :arg1 (t / thing :arg2-of (n3 / name-01 :arg1 (p4 / person :quant 100 :arg0-of (s4 / study-01) :ord (o2 / ordinal-entity :value 1)))) :arg2 (r / receive-01 :arg0 (t2 / thing) :arg1 (s5 / supervise-01 :arg1 (p5 / person :arg0-of (r2 / read-01)))) :time (t3 / today)))
(a / and :op2 (i / increase-01 :arg1 (p / population :mod (n / new) :mod (z / zealand)) :arg2 (p2 / population :quant 28,200) :time (p3 / period :mod (s / same))))
(i / include-91 :arg1 (a / and :op1 (p / project :arg1-of (i2 / invest-01 :arg2 (l / land))) :op2 (p2 / project :arg1-of (i3 / invest-01 :arg2 (l2 / land))) :quant (m / multiple :op1 288)) :arg2 (p3 / project :arg1-of (i4 / include-91 :arg2 (p4 / project :mod (a2 / amphibious) :arg1-of (a3 / average-04) :arg1-of (r / rise-01 :arg2 (p5 / product-of :op1 288 :op2 314))))))
(m / multi-sentence :snt1 (m2 / meet-03 :arg0 (a / and :op1 (p / person :name (n / name :op1 "xiaopeng")) :op2 (w / wuyan)) :arg1 (o / other :mod (e / each))) :snt2 (f / familiarize-01 :arg1 (t / they :quant 2) :arg2 (o2 / other :mod (e2 / each)) :arg1-of (c / cause-01 :arg0 (a2 / activity-06 :arg0 (t2 / they) :arg1-of (a3 / activity-06)))))
(h / have-org-role-91 :arg0 (p / person :arg0-of (s / study-01)) :arg1 (p2 / person :arg0-of (s2 / study-01)) :arg2 (p3 / person :arg0-of (s3 / study-01)) :location (a / and :op1 (c / college :location (s4 / south :part-of (c2 / city-district :name (n / name :op1 "N-A") :location (s5 / south)))) :op2 (t / technology :location (s6 / south :part-of (c3 / city-district :name (n2 / name :op1 "N-A") :location (s7 / south))))))
(a / and :op1 (s / see-01 :arg0 (b / boy :mod (l / little)) :arg1 (a2 / and :op1 (d / disappeared :arg1 (b2 / boy :mod (l2 / little)) :mod (j / just)) :op2 (f / fluttered :arg0 (g / girl :mod (l3 / little)) :arg1 (w / water) :manner (d2 / desperate)))) :op2 (f2 / fluttered :arg0 (b3 / brain :mod (l4 / little) :part-of (b4 / brain :part-of (s2 / she))) :arg1 (w2 / water) :manner (d3 / desperate) :prep-with (b5 / brain :part-of (s3 / she) :mod (l5 / little)) :manner (a3 / above :op1 (w3 / water))) :op3 (l6 / learn-01 :arg0 (b6 / brain :part-of (s4 / she)) :arg1 (t / thing :manner-of (s5 / swim-01 :arg0 (p / person :arg0-of (r / rescue-01)) :arg2 (r2 / rescue-01 :arg0 (p2 / person) :arg1 (p3 / person))))))
(a / advise-01 :arg2 (t / take-01 :arg1 (o / opine-01 :arg1 (g / give-01 :arg1 (p / punish-01 :mod (l / less :degree (m / more)))))) :arg1-of (c / cause-01 :arg0 (a2 / and :op1 (a3 / attempt-01 :arg1 (p2 / person :arg2-of (c2 / criminal-03))) :op2 (r / result-01 :polarity - :arg1 (a4 / attitude :mod (g2 / good)) :arg2 (d / disagree-01 :arg0 (p3 / person) :arg1 (g3 / guilt))))))
(a / and :op1 (s / say-01 :arg0 (d / department :name (n / name :op1 (j / jilin)) :mod (p / province) :mod (p2 / province)) :arg1 (t / task-01 :arg1 (p3 / protect-01 :arg1 (a2 / and :op1 (p4 / protect-01 :arg1 (a3 / and :op1 (p5 / person :mod (c / country :name (n2 / name :op1 "N-A"))) :op2 (p6 / person :mod (c2 / country :name (n3 / name :op1 "N-A"))))))) :op2 (t2 / task-01 :arg1 (p7 / protect-01 :arg1 (a4 / and :op1 (t3 / tigers) :op2 (n4 / northeastern))))) :mod (o / only :polarity -)) :op2 (p8 / prioritize-01 :arg0 (d2 / department) :arg1 (a5 / and :op1 (m / maintain-01 :arg1 (h / health :poss (p9 / person :mod (c3 / country)))) :op2 (l / leopards :arg1 (c4 / country))) :mod (a6 / also)))
FAILED_TO_PARSE#Two concepts in a row.
(a / and :op1 (h / helen) :op2 (h2 / heather) :op3 (h3 / heather))
(h / headquarter-01 :arg1 (m / military :mod (c / country :name (n / name :op1 "N-A"))) :location (a / across :op1 (a2 / and :op1 (c2 / country :name (n2 / name :op1 "N-A")) :op2 (c3 / company :name (n3 / name :op1 "N-A") :mod (c4 / central)))) :arg0-of (o / oversee-01 :arg1 (o2 / operation :mod (m2 / military) :mod (c5 / country) :location (a3 / across :op1 (w / world-region)))))
FAILED_TO_PARSE#Two concepts in a row.
(c / come-01 :arg1 (p / person :quant 2012) :time (t / then) :time (g / go-08 :arg1 (n / nothing :mod (m / much)) :arg2 (a / and :op1 (s / she) :op2 (s2 / she))))
FAILED_TO_PARSE#Two concepts in a row.
(a / attend-01 :arg0 (a2 / and :op1 (p / person :arg0-of (h / have-org-role-91 :arg1 (o / organization :name (n / name :op1 "defense")) :arg2 (s / secretary :mod (v / vice)))) :op2 (p2 / person :name (n2 / name :op1 "fumio" :op2 "kishida") :arg0-of (h2 / have-org-role-91 :arg1 (o2 / organization :name (n3 / name :op1 "state" :op2 "kerry")) :arg2 (s2 / secretary :mod (f / foreign)))) :op3 (p3 / person :name (n4 / name :op1 "nakatani") :arg0-of (h3 / have-org-role-91 :arg1 (c / country) :arg2 (m / minister :mod (f2 / foreign)))) :op4 (p4 / person :name (n5 / name :op1 "nakatani") :arg0-of (h4 / have-org-role-91 :arg1 (c2 / country) :arg2 (m2 / minister :mod (f3 / foreign))))) :arg1 (c3 / conference :mod (p5 / press)) :time (c4 / conference :mod (p6 / press)))
(s / say-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (d / district :mod (d2 / district)) :arg3 (j / judge-01))) :arg1 (e / entitled :arg1 (p2 / person :arg0-of (h2 / have-org-role-91 :arg3 (j2 / judge-01))) :arg2 (r / relieve-01 :arg1 (r2 / relieve-01 :arg1 (p3 / person))) :time (d3 / defend-01 :arg0 (p4 / person) :arg1 (c / case-03))) :medium (s2 / suck-01 :arg0 (p5 / person) :arg1 (p6 / person :arg0-of (h3 / have-org-role-91 :arg3 (j3 / judge-01)) :mod (d4 / district))))
(c / contrast-01 :arg1 (c2 / close-01 :arg1 (s / school :arg1-of (p / public-02) :quant (j / just :op1 100))) :arg2 (r / relocate-01 :arg1 (p2 / person :quant 300,000 :arg0-of (s2 / study-01)) :purpose (s3 / save-01 :arg0 (p3 / person) :arg1 (m / money))) :prep-under (t / thing :arg1-of (p4 / propose-01 :arg0 (p5 / person :arg0-of (h / have-org-role-91 :arg1 (s4 / state :mod (s5 / state)) :arg2 (g / governor))))))
(c / cause-01 :arg0 (i / it) :arg1 (i2 / impact-01 :polarity - :arg0 (i3 / industry :mod (t / taxi :mod (t2 / tradition)) :arg1-of (l / local-02)) :arg1 (i4 / industry :mod (t3 / taxi :arg1-of (l2 / local-02))) :mod (s / small)) :time (a / after :op1 (j / join-01 :arg0 (i5 / i) :arg1 (m / market :arg1-of (s2 / standard-02)))))
(m / multi-sentence :snt2 (h / hope-01 :arg0 (w / we) :arg1 (i / improve-01 :arg0 (w2 / we) :arg1 (c / capable-01 :arg1 (t / they) :arg2 (m2 / match-01 :arg0 (t2 / they) :arg1 (c2 / capable-01 :arg1 (t3 / they) :arg2 (m3 / match-01 :arg0 (t4 / they) :arg1 (s / status :poss (i2 / island :mod (i3 / international) :mod (t5 / tourism))))) :arg2 (t6 / they)))) :manner (g / gradual)))
(r / receive-01 :arg0 (s / salic) :arg1 (t / total-01 :arg1 17 :arg2 (a / and :op1 (p / point :quant 17) :op2 (r2 / rebounds :quant 17) :op3 (a2 / assists :quant 17))) :prep-in (g / game :mod (o / olympic) :quant (b / between :op1 2 :op2 2)))
(d / doubt-01 :arg0 (c / company :arg0-of (p / power-01) :arg0-of (s / supply-01 :arg1 (p2 / plant :quant 1 :arg1-of (i / include-91 :arg2 (p3 / person :arg0-of (o / own-01 :arg1 (p4 / plant)))))) :arg0-of (s2 / supply-01 :arg1 (p5 / plant))) :arg1 (c2 / contract-02 :arg0 (c3 / company) :arg1 (s3 / supply-01)) :arg1-of (c4 / cause-01 :arg0 (c5 / contract-02 :arg0 (c6 / company :arg0-of (p6 / power-01)) :arg1 (c7 / contract-02 :arg1 (s4 / supply-01)) :arg2 (c8 / contract-02 :arg1 (s5 / supply-01) :quant (a / all)))) :arg1-of (d2 / doubt-01 :arg0 (c9 / company :arg0-of (p7 / power-01))))
(s / say-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (c / community) :arg2 (d / director)) :arg0-of (h2 / have-org-role-91 :arg1 (c2 / community) :arg2 (d2 / director)) :arg1-of (l / legal-02)) :arg1 (f / find-01 :arg1 (t / thing :arg1-of (r / report-01 :arg0 (c3 / census)) :mod (n / nation) :time (l2 / late :degree (m / most)) :mod (l3 / late :degree (m2 / most)) :poss (r2 / report-01 :arg0 (c4 / census) :arg1-of (l4 / legal-02))) :time (a / already) :time (y / year :mod (e / each) :mod (e2 / each))))
(f / find-02 :arg1 (d / die-01 :arg1 (c / chef :mod (2 / 28-year-old) :arg0-of (m / move-01 :arg1 (f2 / francisco :mod (s / san)) :time (r / recent))) :arg1-of (c2 / cause-01 :arg0 (m2 / mall :arg1-of (l / local-02) :time (w / week :mod (t / this))))))
(c / contrast-01 :arg2 (g / good :degree (m / more) :domain (t / talk-01 :arg0 (p / person :quant 2 :arg0-of (l / lead-02)) :mod (a / at-least)) :arg1-of (s / sure-02) :time (a2 / after :op1 (a3 / and :op1 (t2 / temporal-quantity :quant (N / N-A) :unit (m2 / month)) :op2 (t3 / temporal-quantity :quant (N2 / N-A) :unit (m3 / month))))))
(c / contrast-01 :arg1 (c2 / character :mod (g / good :degree (m / most)) :domain (h / he) :beneficiary (p / person :mod (c3 / country :name (n / name :op1 "N-A")))) :arg2 (j / jockey :mod (i / incredible) :domain (h2 / he)))
(b / boy :arg1-of (b2 / boy :arg2 (n / name :op1 (f / flat) :op2 (f2 / flat) :op3 (f3 / flat)) :time (a / after :op1 (n2 / now) :quant (m / multiple :op1 (t / temporal-quantity :quant (N / N-A) :unit (d / decade))))) :domain (d2 / dettori :mod (f4 / frankie)))
(a / awaited :arg1 (a2 / awaited :quant 1 :mod (t / test) :mod (b / between :op1 (b2 / biles) :op2 (r / rest :part-of (f / field)))) :location (b3 / between :op1 (b4 / between :op1 (r2 / rest :part-of (f2 / field)) :op2 (r3 / rest :part-of (f3 / field)))) :op2 (b5 / burden-01 :arg1 (t2 / thing :arg1-of (e / expect-01 :arg0 (o / oversized)))))
(a / and :op1 (c / cbc) :op2 (p / pasted) :time (t / then))
(s / say-01 :arg0 (p / person :name (n / name :op1 "N-A") :arg0-of (h / have-org-role-91 :arg1 (c / committee :mod (a / agriculture) :mod (p2 / province) :mod (p3 / province)) :arg2 (d / director :mod (d2 / deputy)))) :arg1 (c2 / continue-01 :arg0 (g / government-organization :arg0-of (g2 / govern-01 :arg1 (c3 / country :name (n2 / name :op1 "N-A")))) :arg1 (a2 / and :op1 (p4 / promote-02 :arg0 (g3 / government-organization) :arg1 (r / reform-01 :arg1 (s2 / system :mod (c4 / community) :mod (c5 / community)))) :op2 (e / encourage-01 :arg0 (g4 / government-organization) :arg1 (p5 / person :arg0-of (f / farm-01)) :arg2 (a3 / and :op1 (d3 / develop-02 :arg0 (p6 / person) :arg1 (m / mechanism :mod (o / operation :mod (p7 / power :mod (d4 / democracy)))) :manner (j / joint)) :op2 (e2 / establish-01 :arg0 (p8 / person) :arg1 (m2 / mechanism :mod (o2 / operation :mod (p9 / power :mod (d5 / democracy))))) :manner (j2 / joint))))))
(a / and :op1 (a2 / account-01 :arg0 (r / revenue :poss (i / industry :mod (t / tourism))) :arg1 (p / percentage-entity :value (N / N-A) :arg3-of (i2 / include-91 :arg2 (p2 / product :arg1-of (g / gross-03) :mod (d / domestic) :arg1-of (g2 / gross-03) :mod (d2 / domestic))))) :op2 (r2 / reach-01 :arg0 (r3 / revenue) :arg1 (p3 / percentage-entity :value (N2 / N-A)) :location 2015))
FAILED_TO_PARSE#Number of opening and closing brackets doesn't match.
(c / contrast-01)
(m / multi-sentence :snt1 (a / accumulate-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (s / staff :mod (c / coaching)) :arg2 (s2 / staff))) :arg1 (e / experience-01 :mod (r / rich)) :arg2 (s3 / study-01 :arg0 (p2 / person) :manner (g / gradual))) :snt2 (n / need-01 :arg1 (t / train-01 :mod (s4 / science) :arg1-of (l / legalize-01 :time (o / over :op1 (t2 / time))))))
(a / and :op1 (a2 / appear-01 :arg1 (p / person :arg0-of (h / have-org-role-91 :arg2 (h2 / head-of-state))) :time (f / final) :time (c / conference :mod (p2 / press)) :time (a3 / after :op1 (r / rehabilitation :mod (p3 / postoperative))) :quant (m / multiple :op1 10)) :op2 (s / show-01 :arg0 (p4 / person) :arg1 (b / brand :name (n / name :op1 (p5 / printing) :op2 (p6 / plastic) :op3 (p7 / plastic)) :mod (n2 / new) :mod (n3 / new) :poss (p8 / person))))
(c / contrast-01 :arg1 (a / announce-01 :polarity - :arg0 (d / day :mod (t / this)) :arg1 (r / restore-01 :arg0 (i / it) :arg1 (h / health :mod (p / percentage-entity :value (N / N-A))))) :arg2 (s / signaled :arg0 (i2 / it) :arg1 (m / move-01 :arg1 (i3 / it) :arg2 (a2 / aviaries :mod (l / luxury)) :purpose (m2 / meet-01 :arg0 (i4 / it) :arg1 (f / friend :mod (h2 / human)))) :mod (a3 / also)) :time (d2 / day :mod (t2 / this)))
(i / incident :time-of (k / kill-01 :arg0 (p / police) :arg1 (p2 / person :arg2-of (s / suspect-01 :arg1 (t / terror))) :time (b / before :op1 (c / come-01 :arg1 (p3 / person :name (n / name :op1 "justin" :op2 "trudeau") :arg0-of (h / have-org-role-91 :arg2 (m / minister :mod (p4 / prime)))) :arg4 (p5 / power) :time (y / year :mod (l / last))))) :ord (o / ordinal-entity :value 1))
(a / adopt-01 :arg0 (a2 / and :op1 (a3 / and :op1 (r / river :mod (b / baima)) :op2 (r2 / river :mod (l / laowanfu)) :op3 (r3 / route :name (n / name :op1 (l2 / laowanfu)))) :op2 (r4 / route :name (n2 / name :op1 (l3 / laowanfu)))) :arg1 (o / operation :mod (m / market :arg1-of (p / pure-02))))
(s / say-01 :arg0 (a / agency :name (n / name :op1 "N-A") :mod (n2 / news) :mod (' / '') :arg0-of (q / quote-01 :arg1 (n3 / news :topic (b / bank :mod (c / central)))) :arg0-of (q2 / quote-01 :arg1 (r / rate :mod (i / inflation) :time (y / year :ord (o / ordinal-entity :value 1) :part-of (y2 / year :ord (o2 / ordinal-entity :value 1)) :ord (o3 / ordinal-entity :value 1)) :ord (o4 / ordinal-entity :value 1)))) :arg1 (i2 / include-91 :arg1 (r2 / rate :mod (i3 / inflation)) :arg2 (p / percentage-entity :value (N / N-A)) :time (y3 / year :mod (t / this))))
(a / and :op1 (t / terminated :arg1 (w / work-01 :arg1 (c / ceremony :mod (o / open-02 :arg1 (o2 / open-01))) :mod (r / rehearsal))) :op2 (h / hold-04 :arg1 (p / perform-02 :mod (o3 / official)) :time (m / morning :mod (t2 / tomorrow))) :time (p2 / present))
(g / give-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg2 (f / fiji))) :arg1 (a / and :op1 (h2 / handle-01 :arg1 (a2 / and :op1 (l / line :name (n / name :op1 (o / off-loading))) :op2 (p2 / person :arg0-of (h3 / have-org-role-91 :arg2 (o2 / off-loading))) :op3 (p3 / person :arg0-of (s / support-01)) :op4 (p4 / person :arg0-of (s2 / support-01)) :op5 (p5 / person :arg0-of (s3 / support-01)) :op5 (p6 / person :arg0-of (s4 / support-01)) :op6 (s5 / strength :mod (b / brute)) :op7 (s6 / strength :poss (p7 / person)))) :op2 (w / win-01 :arg0 (p8 / person) :arg1 (m / medal :mod (b2 / brute) :poss (p9 / person)) :arg2 (w2 / win-01 :arg0 (p10 / person) :arg2 (g2 / gold) :ord (o3 / ordinal-entity :value 1) :poss (p11 / person)))) :arg2 (p12 / person :name (n2 / name :op1 "N-A")))
(c / contrast-01 :arg1 (p / put-01 :arg0 (p2 / person :arg0-of (h / have-org-role-91 :arg2 (h2 / head-of-state))) :arg1 (p3 / person :arg0-of (h3 / have-org-role-91 :arg2 (h4 / head-of-state))) :arg2 (h5 / half :ord (o / ordinal-entity :value 1)) :location (a / ahead :op1 (h6 / half :ord (o2 / ordinal-entity :value 1)))) :arg2 (b / break-01 :arg0 (p4 / person) :arg1 (a2 / and :op1 (l / line) :op2 (s / score-01)) :prep-under (p5 / post :op1 (p6 / post) :ord (o3 / ordinal-entity :value 2))))
(c / contrast-01 :arg1 (j / journey :location (c2 / country :name (n / name :op1 "N-A"))) :arg2 (m / make-02 :arg0 (t / that) :arg1 (b / big :degree (m2 / more :degree (b2 / bit)))))
(i / important :domain (g / get-03 :polarity - :arg1 (i2 / it) :arg2 (a / away)) :mod (r / real))
(s / say-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (o / organization :name (n / name :op1 "united" :op2 "states" :op3 "central" :op4 "command")) :arg2 (o2 / official)) :arg0-of (h2 / have-org-role-91 :arg1 (o3 / organization) :arg2 (o4 / official)) :arg0-of (h3 / have-org-role-91 :arg1 (o5 / organization) :arg2 (o6 / official)) :arg0-of (h4 / have-org-role-91 :arg1 (o7 / organization) :arg2 (o8 / official)) :arg0-of (h5 / have-org-role-91 :arg1 (o9 / organization) :arg2 (o10 / official)) :arg0-of (h6 / have-org-role-91 :arg1 (o11 / organization) :arg2 (o12 / official)) :arg0-of (h7 / have-org-role-91 :arg1 (o13 / organization) :arg2 (o14 / official)) :arg0-of (h8 / have-org-role-91 :arg1 (o15 / organization) :arg2 (o16 / official)) :arg0-of (h9 / have-org-role-91 :arg1 (o17 / organization) :arg2 (o18 / official)) :arg0-of (h10 / have-org-role-91 :arg1 (o19 / organization) :arg2 (o20 / official)) :arg0-of (h11 / have-org-role-91 :arg1 (o21 / organization) :arg2 (o22 / official)) :arg0-of (h12 / have-org-role-91 :arg1 (o23 / organization) :arg2 (o24 / official)) :arg0-of (h13 / have-org-role-91 :arg1 (o25 / organization) :arg2 (o26 / official)) :arg0-of (h14 / have-org-role-91 :arg1 (o27 / organization) :arg2 (o28 / official)) :arg0-of (h15 / have-org-role-91 :arg1 (o29 / organization) :arg2 (o30 / official)) :arg0-of (h16 / have-org-role-91 :arg1 (o31 / organization) :arg2 (o32 / official)) :arg0-of (h17 / have-org-role-91 :arg1 (o33 / organization) :arg2 (o34 / official)) :arg0-of (h18 / have-org-role-91 :arg1 (o35 / organization) :arg2 (o36 / official)) :arg0-of (h19 / have-org-role-91 :arg1 (o37 / organization) :arg2 (o38 / official)) :arg0-of (h20 / have-org-role-91 :arg1 (o39 / organization) :arg2 (o40 / official)) :arg0-of (h21 / have-org-role-91 :arg1 (o41 / organization) :arg2 (o42 / official)) :arg0-of (h22 / have-org-role-91 :arg1 (o43 / organization) :arg2 (o44 / official))))
FAILED_TO_PARSE#Number of opening and closing brackets doesn't match.
(a / account-01 :arg0 (t / thing :arg2-of (r / respond-01 :arg0 (g / government-organization :arg0-of (g2 / govern-01)))) :arg1 (c / citizenry :mod (h / hunger-01) :poss (g3 / government-organization)) :arg1-of (r2 / resemble-01 :arg2 (a2 / attitude :mod (l / let-me-eat-cake) :poss (p / person :arg0-of (h2 / have-org-role-91 :arg2 (p2 / president))))) :mod (e / especially))
(s / say-01 :arg0 (p / person :name (n / name :op1 "N-A")) :arg1 (a / and :op1 (p2 / prompt-01 :arg0 (t / thing :arg2-of (p3 / price-01 :arg1 (o / oil)) :arg1-of (l / low-04)) :arg1 (r / refiner :mod (g / globe)) :purpose (p4 / produce-01 :arg0 (r2 / refiner) :arg1 (o2 / oil :arg1-of (d / distribute-01 :degree (m / more))))) :op2 (i / increase-01 :arg1 (d2 / degree :mod (s2 / supply-01 :arg1 (b / blood) :arg2 (m2 / market))))) :medium (r3 / report :mod (m3 / monthly)) :mod (a2 / also))
(e / enter-01 :arg0 (c / country) :arg1 (h / hospital) :location (l / level :mod (a / all)) :manner (g / gradual) :time (y / year :mod (r / recent)) :prep-with (c2 / country) :arg1-of (c3 / cause-01 :arg0 (p / provide-01 :arg0 (c4 / country) :arg1 (s / support-01 :arg1 (a2 / and :op1 (i / information :mod (m / medicine)) :op2 (e2 / electronic) :op3 (s2 / system :mod (m2 / manage-01 :arg1-of (i2 / integrate-01)))) :arg2 (p2 / policy)))))
(p / phone-number-entity :value (N / N-A))
(s / say-01 :arg0 (p / person :name (n / name :op1 "N-A")) :arg1 (a / and :op1 (a2 / audit-01 :arg1 (h / he) :mod (i / irs) :mod (t / too)) :op2 (f / fear-01 :arg0 (i2 / i) :arg1 (f2 / fear-01 :polarity - :arg0 (p2 / person :arg0-of (v / vote-01)) :arg1 (p3 / person :arg0-of (v2 / vote-01))))))
(w / write-01 :arg0 (p / person :name (n / name :op1 "lanzmann")))
(m / multi-sentence :snt1 (h / have-03 :arg0 (a / and :op1 (h2 / han :time (c / current)) :op2 (x / xiao :name (n / name :op1 (w / wanderer)) :mod (a2 / another))) :arg1 (d / dispute-01 :time (a3 / after :op1 (d2 / drink-01 :arg0 (a4 / alcohol))))) :snt2 (s / stabbed :arg0 (s2 / slash :op1 (p / person :mod (c2 / country :name (n2 / name :op1 "N-A"))) :op2 (p2 / person :mod (c3 / country :name (n3 / name :op1 "N-A")))) :arg2 (d3 / die-01 :arg1 (p3 / person) :accompanier (k / knife :mod (f / fruit))) :time (t / then)))
(e / equip-01 :polarity - :arg1 (p / person :arg0-of (p2 / play-01) :mod (y / young) :quant (m / many)) :arg2 (c / capable-01 :arg1 (p3 / person) :arg2 (s / scoring :arg0 (p4 / person) :arg1 (c2 / capable-01 :arg1 (p5 / person) :arg2 (s2 / scoring :arg0 (p6 / person))))) :concession (b / be-located-at-91 :arg1 (p7 / person :arg0-of (p8 / play-01) :mod (y2 / young) :quant (m2 / many)) :arg2 (p9 / person :arg0-of (p10 / play-01) :mod (y3 / young) :quant (m3 / many))))
(s / say-01 :arg0 (p / person :name (n / name :op1 "N-A")) :arg1 (g / get-03 :arg1 (s2 / situation) :arg2 (b / bad-04 :arg1 (s3 / situation) :degree (m / more)) :mod (o / only) :condition (r / reverse-01 :arg1 (d / decide-01 :arg0 (g2 / government-organization :arg0-of (g3 / govern-01) :mod (f / federal))))))
(l / light-years :quant 445 :mod (p / pleiades) :source (e / earth) :domain (c / cluster :mod (p2 / pleiades)))
(e / enacted :arg0 (t / they) :arg1 (s / star) :arg1-of (c / cause-01 :arg0 (t2 / travel-01 :arg0 (w / wind :arg1-of (w2 / wind) :mod (t3 / this)) :path (a / across :op1 (s2 / star)) :path (a2 / across :op1 (s3 / star)))))
(t / tell-01 :arg0 (p / person :arg0-of (m / mcewan)) :arg1 (a / associate-01 :arg1 (b / brand :name (n / name :op1 (r / rbs) :op2 (b2 / brand))) :arg2 (a2 / ambition :mod (g / globe) :poss (b3 / bank))) :arg2 (p2 / person :name (n2 / name :op1 "N-A")))
(u / use-01 :arg1 (b / bank :mod (r / royal) :part-of (c / country :name (n / name :op1 "N-A"))) :arg2 (c2 / customer :mod (c3 / country :name (n2 / name :op1 "N-A"))) :concession-of (i / initialised :polarity - :arg1 (b2 / bank)))
(t / tell-01 :arg0 (h / he) :arg1 (a / and :op1 (e / end-up-03 :arg1 (b / brand :name (n / name :op1 (r / rbs)) :mod (b2 / brand :name (n2 / name :op1 (r2 / rbs)))) :arg2 (b3 / become-01 :arg1 (b4 / brand) :arg2 (b5 / brand :mod (p / person :arg0-of (i / invest-01)) :poss (w / we)))) :op2 (e2 / employ-01 :arg1 (p2 / person :quant 1 :arg2-of (s / staff-01))) :arg1-of (c / cause-01 :arg0 (b6 / become-01 :arg1 (w2 / we) :arg2 (b7 / bank :consist-of (b8 / brand) :quant (m / more :degree (m2 / much))) :time (n3 / now)))) :arg2 (p3 / person :name (n4 / name :op1 "N-A")))
(t / tell-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (c / country :name (n / name :op1 "N-A")) :arg2 (s / station :mod (t2 / tv)))) :arg1 (a / and :op1 (a2 / ask-02 :arg0 (p2 / person) :arg1 (l / leave-11 :arg0 (p3 / person) :arg1 (p4 / post))) :op2 (r / recommend-01 :arg0 (p5 / person) :arg1 (r2 / replace-01 :arg1 (p6 / person :arg0-of (h2 / have-org-role-91 :arg2 (m / mr))) :arg2 (p7 / person)))) :arg2 (s2 / station :mod (t3 / tv) :mod (c2 / country :name (n2 / name :op1 "N-A"))))
(t / traced :arg1 (c / casing :name (n / name :op1 (s / shell) :op2 (s2 / shell) :op3 (c2 / casings))) :arg2 (a / and :op1 (w / weapon :mod (s3 / style :mod (a2 / assault)) :arg1-of (d / differ-02)) :op2 (w2 / weapon :mod (s4 / style :mod (a3 / assault)) :arg1-of (d2 / differ-02))))
(s / speak-01 :arg0 (w / we) :arg1 (a / and :op1 (m / mizrachi :arg0 (w2 / we) :arg1 (m2 / mizrachi)) :op2 (g / grandmaster :arg0 (g2 / grandmaster :mod (n / new) :poss (c / criminal-organization :name (n2 / name :op1 "N-A") :name (n3 / name :op1 (k / krav) :op2 (m3 / maga) :op3 (m4 / maga))) :mod (n4 / new) :mod (y / york-based))) :purpose (f / find-out-03 :arg0 (w3 / we) :arg1 (t / thing :manner-of (d / deal-01 :arg2 (m5 / muggers :arg1-of (r / range-01 :arg2 (c2 / close))))))))
(s / sound-01 :mode (i / interrogative) :arg2 (a / amaze-01))
(s / say-01 :arg0 (h / he) :arg1 (u / unfit :arg1 (p / person :mod (t / trumps)) :arg2 (o / office)))
(m / multi-sentence :snt1 (r / receive-01 :arg0 (m2 / measure-02 :mod (p / policy) :arg0-of (i / inconsistent :arg1 (i2 / idea :topic (i3 / implement-01 :arg1 (i4 / implement-01 :mod (t / this)))))) :arg1 (c / cleanup :mod (c2 / centralize))) :snt2 (r2 / recommend-01 :arg1 (a / and :op1 (c3 / corrected :arg1 (t2 / they)) :op2 (a2 / abolished :arg1 (m3 / measure-02)) :condition (n / need-01))))
(c / change-01 :arg0 (a / and :op1 (v / villager :location (r / relative-position :op1 (v2 / village :location (e / east) :part-of (p / park)))) :op2 (v3 / villager :location (e2 / east)) :op3 (v4 / villager :location (e3 / east))) :arg1 (t / tv :mod (o / old) :mod (o2 / old)) :time (b / before :op1 (n / now) :quant (f / few :op1 (t2 / temporal-quantity :quant (N / N-A) :unit (d / day)) :mod (j / just))))
(s / say-01 :arg0 (p / person :name (n / name :op1 "zhang" :op2 "xiaolong") :arg0-of (h / have-rel-role-91 :arg1 (s2 / she) :arg2 (m / mother))) :arg1 (s3 / send-01 :arg0 (p2 / person :arg0-of (h2 / have-rel-role-91 :arg1 (s4 / she) :arg2 (d / daughter))) :arg1 (p3 / person :arg0-of (h3 / have-rel-role-91 :arg1 (s5 / she) :arg2 (d2 / daughter))) :arg2 (v / village :quant (f / few :op1 (t / temporal-quantity :quant (N / N-A) :unit (m2 / month)))) :source (h4 / hesitation :poss (p4 / person)) :location (h5 / hesitation :poss (p5 / person))))
(o / open-01 :arg1 (a / and :op1 (p / person :arg0-of (h / have-org-role-91 :arg1 (v / villager))) :op2 (p2 / person :arg0-of (t / tour-01)) :op3 (p3 / person :arg0-of (t2 / tour-01))) :arg4 (a2 / and :op1 (v2 / villager) :op2 (p4 / person :arg0-of (t3 / tour-01))) :arg4 (a3 / and :op1 (v3 / villager) :op2 (p5 / person :arg0-of (t4 / tour-01))) :time (r / recent))
(l / learn-01 :arg0 (w / we) :arg1 (c / cause-01 :arg1 (p / possible-01 :arg1 (c2 / cause-01 :arg0 (t / that) :arg1 (a / and :op1 (d / discoloration :arg1 (w2 / water)) :op2 (r / result-01 :arg2 (q / quality :mod (q2 / quality :mod (w3 / water)))))))))
(m / multi-sentence :snt1 (s / say-01 :arg0 (p / person :arg0-of (h / head-01 :arg1 (a / and :op1 (p2 / person :arg0-of (h2 / have-org-role-91 :arg2 (d / deputy))) :op2 (p3 / person :arg0-of (h3 / have-org-role-91 :arg2 (d2 / deputy))) :op3 (p4 / person :arg0-of (h4 / have-org-role-91 :arg2 (d3 / deputy))) :op4 (p5 / person :arg0-of (h5 / have-org-role-91 :arg2 (d4 / deputy))) :op5 (p6 / person :arg0-of (h6 / have-org-role-91 :arg2 (d5 / deputy))) :op5 (p7 / person :arg0-of (h7 / have-org-role-91 :arg2 (d6 / deputy))) :op6 (p8 / person :arg0-of (h8 / have-org-role-91 :arg2 (d7 / deputy))) :op6 (p9 / person :arg0-of (h9 / have-org-role-91 :arg2 (d8 / deputy))) :op6 (p10 / person :arg0-of (h10 / have-org-role-91 :arg2 (d9 / deputy))) :op7 (p11 / person :arg0-of (h11 / have-org-role-91 :arg2 (d10 / deputy))) :op7 (p12 / person :arg0-of (h12 / have-org-role-91 :arg2 (d11 / deputy)))) :arg0-of (h13 / have-org-role-91 :arg2 (d12 / deputy)))) :arg1 (a2 / and :op1 (m2 / matter :mod (s2 / small) :purpose (v / vehicle :mod (t / travel-01))) :op2 (k / kill-01 :arg1 (p13 / person)))) :snt2 (a3 / and :op1 (i / injure-01 :arg1 (p14 / person)) :op2 (k2 / kill-01 :arg1 (p15 / person))))
(m / multi-sentence :snt1 (c / cause-01 :arg0 (e / expose-01 :arg1 (y / you) :arg2 (s / sun) :time (t / train-01 :mod (m2 / military)) :arg1-of (l / long-03 :degree (m3 / more))) :arg1 (o / obligate-01 :arg1 (y2 / you) :arg2 (a / apply-02 :arg0 (y3 / you) :arg1 (p / product :mod (s2 / sunscreen)) :arg2 (t2 / temporal-quantity :quant (N / N-A) :unit (h / hour)) :purpose (l2 / lengthen :arg0 (y4 / you) :arg1 (e2 / effect))))) :snt2 (k / keep-02 :arg1 (d / do-02 :arg1 (i / it))))
(t / think-01 :arg0 (p / person :mod (c / common)) :arg1 (p2 / perform-02 :arg0 (p3 / person) :arg1 (t2 / thing :arg1-of (p4 / perform-01 :arg0 (p5 / person))) :time (g / game :mod (o / olympic)) :time (m / mention-01 :arg0 (p6 / person) :arg1 (p7 / person))) :mod (e / even :polarity -) :beneficiary (p8 / person :mod (c2 / circle :mod (e2 / entertainment))) :mod (e3 / even))
(a / and :op2 (c / cause-01 :arg0 (w / withdraw-01 :arg1 (z / zetao :mod (n / ning)) :arg1-of (c2 / compare-01 :arg2 (w2 / withdraw-01 :arg1 (a2 / and :op1 (l / liang :mod (t / tian)) :op2 (w3 / withdrawal :mod (t2 / tian)) :op3 (w4 / wei :mod (y / yang)))))) :arg1 (a3 / affect-01 :arg0 (w5 / withdraw-01 :arg1 (i / image :poss (h / he)) :mod (n2 / negative)) :arg1 (t3 / thing :arg1-of (e / effect-03 :arg0 (i2 / image :poss (h2 / he)) :mod (n3 / negative))))))
(c / complete-01 :arg0 (i / institution :arg1-of (p / pay-01 :arg3 (p2 / pay-01 :arg3 (p3 / pay-01 :arg3 (p4 / pay-01))))) :arg1 (s / service :arg1-of (p5 / pay-01 :arg3 (s2 / service :arg1-of (p6 / pay-01)))) :time (a / after :op1 (a2 / announce-01 :arg1 (t / thing :arg1-of (a3 / announce-01)))))
(m / multi-sentence :snt1 (w / work-01 :arg0 (c / committee :mod (c2 / city) :mod (c3 / city)) :arg1 (i / issue-01 :arg0 (c4 / committee) :arg1 (n / notice-03 :arg1 (t / take-01 :arg0 (p / person :mod (o / old) :arg1-of (a / age-01 :arg2 (t2 / temporal-quantity :quant (N / N-A) :unit (y / year)))) :arg1 (b / bus) :arg2 (t3 / take-01 :arg0 (p2 / person) :arg1 (b2 / bus)))))) :snt2 (i2 / implement-01 :arg1 (p3 / policy :mod (i3 / incredible)) :time (s / since :op1 (d / date-entity :decade (N2 / N-A)))))
(s / show-01 :arg0 (d / data :arg0-of (m / monitor-01) :time (l / late :degree (m2 / most))) :arg1 (m3 / monitor-01 :arg1 (a / and :op1 (t / tigers :quant 27 :mod (w / wild)) :op2 (l2 / leopards :quant 42)) :location (t2 / territory :mod (j / jilin))))
(t / transfer-01 :arg0 (b / bureau :mod (s / security :mod (p / public)) :arg1-of (i / include-91 :arg2 (b2 / bureau :mod (s2 / security :mod (p2 / public))))) :arg1 (p3 / procuratorate :mod (d / district)) :arg2 (p4 / prosecute-01 :arg1 (p5 / person :arg0-of (p6 / prosecute-01))) :time (r / recent))
(w / watch-01 :arg0 (i / i) :arg1 (p / perform-02 :arg0 (p2 / person :arg0-of (h / have-rel-role-91 :arg1 (p3 / person :arg0-of (h2 / have-rel-role-91 :arg1 (p4 / person :arg0-of (h3 / have-rel-role-91 :arg1 (p5 / person) :arg2 (d / daughter))) :arg2 (d2 / daughter))) :arg2 (d3 / daughter))) :time (b / before :op1 (n / now) :quant (t / temporal-quantity :quant (N / N-A) :unit (y / year)))))
(p / provide-01 :arg0 (p2 / person :mod (c / country :name (n / name :op1 "N-A"))) :arg1 (a / and :op1 (t / thing :arg2-of (r / result-01 :arg1 (s / stage))) :op2 (t2 / thing :arg1-of (e / experience-01) :mod (g / good))) :arg2 (a2 / and :op1 (t3 / thing :arg2-of (r2 / result-01 :arg1 (s2 / stage))) :op2 (t4 / thing :arg1-of (e2 / experience-01) :mod (g2 / good))) :degree (f / full))
(m / multi-sentence :snt1 (a / and :op1 (c / continue-01 :arg1 (h / hit-01 :arg1 (m2 / match-03))) :op2 (g / gain-02 :arg1 (c2 / chance-02 :arg1 (c3 / corner)))) :snt2 (a2 / and :op1 (m3 / make-01 :arg1 (v / volley :mod (s / small-angle))) :op2 (f / fended :arg1 (f2 / fernando) :arg2 (l / line :mod (b / base)) :manner (g2 / guoan))) :time (g3 / go-06 :arg1 (m4 / match-03) :duration (t / temporal-quantity :quant (N / N-A) :unit (m5 / minute))))
(m / multi-sentence :snt2 (g / get-02 :arg0 (a / and :op1 (h / he) :op2 (b / broadcast-program :name (n / name :op1 "N-A") :mod (e / exciting))) :arg1 (c / card :mod (y / yellow))) :snt2 (g2 / get-02 :arg0 (a2 / and :op1 (h2 / he) :op2 (b2 / broadcast-program :name (n2 / name :op1 "N-A") :mod (e2 / exciting))) :arg1 (c2 / card :mod (y2 / yellow))))
(t / turnaround :arg0 (w / we) :arg1-of (c / complete-02))
(p / provide-01 :arg0 (s / service :arg1-of (f / follow-01) :arg2-of (i / include-01 :arg1 (a / and :op1 (d / discuss-01 :medium (o / online)) :op2 (d2 / discuss-01 :mod (o2 / online)) :op3 (e / exchange-01 :mod (a2 / academia)) :op4 (p2 / platform :mod (s2 / social))))) :arg1 (p3 / platform :mod (s3 / social) :beneficiary (e2 / exchange-01 :arg1 (a3 / and :op1 (h / hospital :mod (s4 / same)) :op2 (d3 / department) :op3 (s5 / support-01 :arg1 (b / business) :arg1-of (l / legal-02)) :op4 (a4 / and :op1 (s6 / support-01 :arg1 (b2 / business)) :op2 (s7 / support-01 :arg1 (b3 / business) :arg1-of (p4 / personal-02)))))))
(a / and :op1 (a2 / affect-01 :arg1 (f / function-01 :arg0 (y / you) :mod (c / cardiovascular)) :condition (s / stay-01 :arg1 (y2 / you) :time (l / late))) :op2 (a3 / affect-01 :arg1 (s2 / system :name (n / name :op1 (i / immune) :op2 (g / gastrointestinal) :op3 (s3 / system))) :mod (a4 / also)) :op4 (a5 / affect-01 :arg1 (r / risk-01 :arg2 (c2 / cancer)) :mod (e / even)) :condition (s4 / stay-01 :arg1 (y3 / you) :time (l2 / late)))
(a / and :op1 (s / score-01 :arg1 (s2 / she) :arg2 (r / rate-entity-91 :arg1 2008 :arg2 (t / temporal-quantity :quant (N / N-A) :unit (y / year)))) :op2 (b / break-01 :arg0 (s3 / she) :arg1 (r2 / record :mod (o / olympic)) :arg3 (r3 / ring :quant 690.3 :arg1-of (i / include-91 :arg2 (p / position :quant 690.3 :name (n / name :op1 (5 / 50-m) :op2 3 :op3 3 :op4 3))))))
(p / play :arg1 (t / thing :arg1-of (e / expect-01)) :time (a / after :op1 (s / showings :mod (e2 / exceptional) :mod (t2 / true) :mod (t3 / true) :arg1-of (e3 / enforce-01 :location (a2 / and :op1 (t4 / talk-02 :arg2 (b / beijing)) :op2 (t5 / thing :arg1-of (p2 / precede-01)))))))
(a / and :op2 (f / feel-01 :arg0 (s / she) :arg1 (a2 / and :op1 (r / relaxed) :op2 (f2 / free-04 :arg1 (r2 / regain))) :time (o / once :op1 (l / leave-15 :arg0 (h / he) :arg1 (s2 / situation :arg1-of (t / trap-01 :arg2 (h2 / he)))))))
(f / follow-01 :arg1 (m / move-02) :arg2 (s / speculate-01 :arg1 (f2 / future :poss (p / plant)) :duration (s2 / several :op1 (t / temporal-quantity :quant (N / N-A) :unit (y / year))) :time (i / initial) :arg1-of (c / cause-01 :arg0 (t2 / thing :arg2-of (p2 / price-01 :arg1 (t3 / thing :source (p3 / plant)))) :time (r / recent))))
(s / say-01 :arg0 (i / i) :arg1 (t / thing :arg2-of (v / value-01 :arg1 (c / contract-02)) :arg1-of (v2 / value-01 :arg2 (m / monetary-quantity :quant 187 :unit (y / yuan :mod (r / renminbi))))) :arg2 (t2 / thing :arg2-of (v3 / value-01 :arg1 (c2 / contract-02))) :time (a / already))
(h / have-condition-91 :arg1 (r / reduce-01 :arg1 (a / and :op1 (e / electricity) :op2 (e2 / electricity) :op3 (m / market :quant (- / -93)) :op4 (m2 / market :quant (-2 / -93))) :arg1-of (s / significant-02)) :arg2 (g / go-01 :arg1 (p / plant :mod (t / that) :mod (t2 / that)) :arg3 (m3 / market) :arg1-of (s2 / significant-02)))
(c / clear-06 :arg1 (b / benefit-01 :arg0 (c2 / call-01 :arg1 (p / person :arg0-of (c3 / call-01 :arg1 (p2 / person) :arg2 (t / truce))))))
(m / multi-sentence :snt1 (m2 / meet-03 :polarity - :mod (b / big) :domain (i / it)) :snt2 (n / night :mod (m3 / mundane :polarity -) :prep-with (p / person :quant 20000)))
(s / say-01 :arg0 (w / website :mod (k / kremlin)) :arg1 (a / and :op1 (m / manage-02 :arg0 (h / he) :arg1 (a2 / and :op1 (p / protocol :mod (p2 / president)) :op2 (p3 / person :arg2-of (s2 / staff-01 :arg1 (g / government-organization :arg0-of (g2 / govern-01))))) :time (l / late :degree (m2 / more))) :op2 (s3 / say-01 :arg0 (w2 / website :mod (k2 / kremlin)) :arg1 (- / -lrb- :location (c / country :name (n / name :op1 "N-A"))))))
(a / and :op1 (b / be-located-at-91 :polarity - :arg1 (v / victim :quant 2 :mod (o / other)) :arg2 (c / car)) :op2 (i / investigate-01 :arg0 (p / police) :arg1 (p2 / possible-01 :mode (i2 / interrogative) :arg1 (s / shoot-02 :arg1 (m / man :arg1-of (i3 / include-91 :arg2 (m2 / man :arg1-of (w / wound-01))))))))
(h / have-concession-91 :arg1 (o / open-01 :arg1 (d / door :part-of (h2 / he)) :time (a / always) :time (m / month :mod (l / last) :mod (j / just))) :arg2 (p / promise-01 :arg2 (h3 / hunting :arg1 (d2 / door :poss (h4 / he)) :time (m2 / month :mod (l2 / last) :mod (j2 / just)))))
(s / say-01 :arg1 (r / recommend-01 :arg1 (g / give-01 :arg1 (p / protect-01 :arg1 (p2 / protect-01) :mod (g2 / great :degree (m / more))) :arg2 (t / thing :arg1-of (s2 / say-01)))) :arg2 (p3 / person :name (n / name :op1 "N-A")))
(s / say-01 :arg1 (r / run-02 :arg0 (i / i) :arg1 (c / campaign-01 :arg0 (h / he) :arg1 (v / vote-01 :arg0 (p / person :mod (r2 / religious-group :name (n / name :op1 "N-A")) :mod (c2 / country :name (n2 / name :op1 "N-A"))) :arg1 (v2 / vote-01 :arg0 (p2 / person) :arg1 (p3 / person))))) :arg2 (r3 / rahman))
(s / say-01 :arg0 (t / thing :arg1-of (r / report-01 :arg0 (h / he))) :arg1 (p / present-01 :arg1 (t2 / thing :arg0-of (e / evidence-01) :arg1-of (p2 / present-01 :arg2 (p3 / pressure-01))) :arg2 (a / and :op1 (p4 / person :arg0-of (h2 / have-org-role-91 :arg1 (c / community :mod (m / minority :mod (e2 / ethnic)) :mod (s2 / some)) :arg2 (m2 / member))) :op2 (p5 / person :mod (y / young) :arg0-of (h3 / have-org-role-91 :arg1 (c2 / community :mod (p6 / particular)) :arg2 (m3 / member))) :op3 (p7 / person :mod (y2 / young)) :op4 (p8 / person :mod (y3 / young)) :op5 (p9 / person :mod (y4 / young))) :arg1-of (c3 / conform-01 :arg2 (a2 / and :op1 (p10 / person :mod (e3 / ethnic-group :name (n / name :op1 "N-A"))) :op2 (b / background :mod (b2 / bangladeshi)) :mod (e4 / especially)))))
(d / describe-01 :arg1 (y / yanhan :quant 4 :arg1-of (i / include-91 :arg2 (p / person :quant (2 / 200m) :mod (c / country :name (n / name :op1 "N-A"))))) :arg2 (f / final :quant (b / between :op1 4 :op2 (22 / 200m))) :arg1-of (c2 / cause-01 :arg0 (a / and :op1 (d2 / drop-05 :arg0 (1 / 14-year-old :mod (l / little) :source (c3 / country :name (n2 / name :op1 "N-A"))) :arg1 (b2 / ball)) :op2 (b3 / baby))))
(d / destroy-01 :arg0 (f / family :arg1-of (h / have-org-role-91 :arg0 (p / person) :arg2 (m / member))) :arg1 (h2 / house :poss (c / council)) :location (a / ahead :op1 (h3 / house :poss (c2 / council))))
(c / cause-01 :arg0 (q / quiet :arg1 (w / we) :degree (s / so) :location (h / here)) :arg1 (u / use-01 :polarity - :arg1 (w2 / we) :arg2 (t / that)))
FAILED_TO_PARSE#Number of opening and closing brackets doesn't match.
(m / multi-sentence :snt1 (n / need-01 :arg0 (w / we) :arg1 (g / get-05 :arg1 (w2 / we) :arg2 (b / back) :direction (b2 / back) :destination (a / and :op1 (t / timeless :mod (s / showcasing)) :op2 (n2 / nudity :mod (c / classic) :example (w3 / woman)) :op3 (f / feel-01 :arg0 (w4 / we) :arg1 (c2 / comfortable-02)) :op4 (i / inspire-01 :arg0 (i2 / image :mod (t2 / this)) :arg1 (i3 / image :mod (t3 / this)))))) :snt2 (a2 / announce-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (b3 / body :mod (f2 / female)) :arg3 (s2 / shaw))) :medium (p2 / press)))
(s / say-01 :arg0 (p / person :name (n / name :op1 "julius" :op2 "nielsen") :arg0-of (s2 / study-01 :arg1 (s3 / sharks)) :arg0-of (s4 / study-01 :arg1 (s5 / sharks))) :arg1 (g / go-01 :arg1 (r / record) :arg4 (b / between :op1 (t / temporal-quantity :quant (N / N-A) :unit (y / year)) :op2 (t2 / temporal-quantity :quant (N2 / N-A) :unit (y2 / year)))))
FAILED_TO_PARSE#Number of opening and closing brackets doesn't match.
(b / begin-01 :arg1 (r / review-01 :arg0 (a / and :op1 (p / person :mod (c / country :name (n / name :op1 "N-A"))) :op2 (c2 / center :mod (s / service :mod (t / trade-01)))) :arg1 (a2 / and :op1 (r2 / reserve) :op2 (c3 / center :mod (s2 / service :mod (t2 / trade-01)))) :purpose (r3 / review-01 :arg0 (a3 / and) :arg1 (m / material :mod (a4 / apply-01)))) :time (a5 / after :op1 (s3 / submit-01 :arg0 (x / xiuping) :arg1 (a6 / and :op1 (f / form :mod (a7 / apply-01)) :op2 (t3 / thing :arg1-of (r4 / report-01 :arg0 (p2 / project :mod (s4 / service :mod (t4 / trade-01)))))))))
(e / exemption :arg1 (u / unit :arg0-of (o / obtain-01 :arg1 (e2 / environment)) :arg0-of (o2 / obtain-01 :arg1 (e3 / environment))) :arg2 (m / monetary-quantity :arg1-of (u2 / use-01 :arg2 (u3 / use-01 :arg1 (c / compensate-01)))) :li 2016)
(m / multi-sentence :snt1 (s / say-01 :arg0 (s2 / she) :arg1 (a / and :op1 (p / person :arg0-of (h / have-rel-role-91 :arg1 (s3 / she) :arg2 (d / daughter))) :op2 (p2 / person :arg0-of (h2 / have-rel-role-91 :arg1 (s4 / she) :arg2 (d2 / daughter))) :frequency (o / often))) :snt2 (a2 / and :op1 (g / good :domain (s5 / she) :location (p3 / paint-02)) :op2 (p4 / possible-01 :arg1 (m2 / make-05 :arg0 (p5 / person :arg0-of (h3 / have-rel-role-91 :arg1 (s6 / she) :arg2 (d3 / daughter))) :arg1 (t / toys) :source (f / facial :arg1-of (f2 / facial :arg2 (m3 / male)))))))
(h / have-03 :polarity - :arg0 (i / information :quant (a / all) :topic (t / treat-03 :arg1-of (c / call-01 :manner (s / so)))) :arg1 (s2 / support-01 :arg1 (t2 / thing :arg0-of (e / evidence-01)) :mod (a2 / any)))
(s / say-01 :arg0 (p / person :arg0-of (p2 / polo :arg1 (w / water :mod (c / country :name (n / name :op1 "N-A"))))) :arg1 (a / and :op1 (f / feel-01 :arg0 (e / eye :part-of (p3 / person)) :arg1 (t / tingling)) :op2 (l / like-02 :arg0 (p4 / person) :arg1 (s2 / shed :arg0 (p5 / person) :arg1 (t2 / tears)))))
(s / say-01 :arg0 (p / person :name (n / name :op1 "mario" :op2 "andrada") :arg0-of (h / have-org-role-91 :arg1 (g / game :mod (r / rio) :mod (r2 / rio)) :arg2 (s2 / spokesman))) :arg1 (w / weak-02 :arg1 (a / alkalinity :arg1 (q / quality :poss (q2 / quality :mod (w2 / water)))) :time (a2 / after :op1 (d / date-entity :time (y / yesterday) :time (y2 / yesterday)))))
(r / report)
(s / say-01 :arg0 (s2 / statistic :topic (w / weather :arg1-of (h / hot-05) :location (a / and :op1 (t / talk-02 :arg2 (a2 / and :op1 (p / person :arg0-of (h2 / have-org-role-91 :arg2 (h3 / head-of-state))) :op2 (p2 / person :arg0-of (h4 / have-org-role-91 :arg1 (c / company :name (n / name :op1 "N-A") :name (n2 / name :op1 (m / meteorology)) :mod (c2 / city))))))))) :arg1 (p3 / possible-01 :arg1 (r / receive-01 :arg0 (r2 / rest :part-of (c3 / city)) :arg1 (t2 / temperature-quantity :quant (d / degree :arg1-of (d2 / differ-02))))))
(c / come-01 :arg1 (p / person) :purpose (t / try-01 :arg0 (p2 / person) :arg1 (h / help-01 :arg0 (p3 / person) :arg1 (r / restore-01 :arg0 (p4 / person) :arg1 (r2 / restore-01 :arg0 (p5 / person) :arg1 (l / life :poss (p6 / person)) :arg2 (l2 / life :poss (p7 / person))) :time (b / before :op1 (h2 / hurt-01 :arg0 (p8 / person)))))))
(c / channel :name (n / name :op1 (w / wanfu) :op2 (w2 / wanfu) :op3 (c2 / channel) :op4 (c3 / channel) :op5 (c4 / channel) :op6 (l / lakes) :op7 (c5 / channel :name (n2 / name :op1 (n3 / nanyang) :op2 32.5) :arg1-of (t / total-01 :arg2 (d / distance-quantity :quant (N / N-A) :unit (k / kilometer) :mod (t2 / total))))) :manner (c6 / channel :name (n4 / name :op1 (n5 / nanyang) :op2 (w3 / wanfu) :op3 (l2 / lakes)) :mod (o / old)) :path (c7 / channel :name (n6 / name :op1 (n7 / nanyang) :op2 (l3 / lakes) :op3 (l4 / lakes))))
(a / and :op1 (m / majored :arg0 (a2 / and :op1 (p / plan-01 :arg1 (a3 / and :op1 (p2 / plan-01 :mod (u / urban)) :op2 (p3 / plan-01 :mod (r / rural))))) :arg1 (v / visit-01 :arg0 (y / yilin) :arg1 (l / langzhong :mod (s / sichuan)))) :op2 (l2 / learn-01 :arg0 (y2 / yilin) :arg1 (d / design-01 :arg1 (a4 / architectural) :arg1-of (l3 / local-02))) :op3 (b / bind-01 :arg1 (f / family) :arg2 (f2 / family)))
(m / multi-sentence :snt1 (h / host-01 :arg0 (b / bureau :name (n / name :op1 (y / yunnan)) :mod (p / province) :mod (p2 / province)) :arg1 (g / game :mod (y2 / youth) :ord (o / ordinal-entity :value 1) :mod (y3 / youth))) :snt2 (h2 / hold-04 :arg1 (c / ceremony :mod (o2 / open-02 :arg1 (o3 / open-01))) :time (m2 / morning :mod (d / day :ord (o4 / ordinal-entity :value 13) :part-of (t / temporal-quantity :quant (N / N-A) :unit (m3 / month))))))
(t / transfer-01 :arg0 (b / bureau :mod (s / security :mod (p / public)) :arg1-of (i / include-91 :arg2 (b2 / bureau :mod (s2 / security :mod (p2 / public))))) :arg1 (p3 / procuratorate :mod (d / district)) :arg2 (p4 / prosecute-01 :arg1 (p5 / person :arg0-of (p6 / prosecute-01))) :time (r / recent))
(u / utilize-01 :arg0 (t / theater :mod (o / opera) :mod (c / country :name (n / name :op1 "N-A")) :mod (c2 / country :name (n2 / name :op1 "N-A"))) :arg1 (o2 / opera :quant 7 :location (a / and :op1 (c3 / city :arg0-of (h / have-org-role-91 :arg1 (c4 / country) :arg2 (c5 / capital))) :op2 (c6 / city :arg0-of (h2 / have-org-role-91 :arg1 (c7 / country) :arg2 (c8 / capital))) :op3 (c9 / city :arg0-of (h3 / have-org-role-91 :arg1 (c10 / country) :arg2 (c11 / capital))) :op4 (c12 / city :quant 5 :mod (o3 / other)))) :time (d / date-interval :op1 (d2 / date-entity :decade (N / N-A)) :op2 (d3 / date-entity :year (N2 / N-A))))
(w / win-01 :arg0 (p / person :name (n / name :op1 "N-A") :arg1-of (t / total-01 :arg2 (n2 / name :op1 (d / deng) :op2 (c / championships)))) :arg1 (p2 / person :mod (c2 / country :name (n3 / name :op1 "China")) :arg2-of (t2 / total-01)) :arg2 (b / become-01 :arg1 (p3 / person) :arg2 (c3 / country :ord (o / ordinal-entity :value 1) :arg0-of (w2 / win-01 :arg1 (d2 / drone :mod (g / gold) :mod (g2 / gold) :quant (a / approximately :op1 4)) :location (h / history :poss (c4 / country) :mod (o2 / olympic))) :ord (o3 / ordinal-entity :value 1))) :time (y / year :mod 14))
(a / and :op1 (h / have-03 :arg0 (r / rate-entity-91 :arg1 (r2 / rate :mod (u / use-01)) :arg2 (t / top :quant 2)) :arg1 (l / league :arg1-of (i / include-91 :arg2 (l2 / league :quant 20)))) :op2 (s / seasons :arg1 (t2 / thing :quant 2 :mod (g / good :degree (m / most))) :arg2 (c / career :poss (h2 / he))))
(a / and :op1 (r / rid-01 :arg0 (p / person :mod (c / country :name (n / name :op1 "N-A"))) :arg1 (b / ball) :location (i / in-front-of :op1 (a2 / area :mod (a3 / area :arg1-of (p2 / penalize-01))))) :op2 (s / shoot-02 :arg1 (p3 / person)))
(u / undergo-28 :arg1 (p / person :mod (c / country :name (n / name :op1 "N-A"))) :arg2 (s / score-entity :op1 2013 :op2 2013))
(l / lose-02 :arg0 (a / and :op1 (p / person :arg0-of (h / helen)) :op2 (h2 / haven :mod (s / stanning))) :arg1 (r / race) :time (a2 / after :op1 (n / now) :quant (t / temporal-quantity :quant (N / N-A) :unit (y / year))) :degree (t2 / total))
(o / offer-01 :arg0 (c / company) :arg1 (e / explain-01 :arg0 (c2 / company)) :arg1-of (m / mean-01 :arg2 (h / homage :polarity - :arg1 (p / person :mod (c3 / continent :name (n / name :op1 "N-A"))))))
(a / and :op1 (p / person :name (n / name :op1 "ms." :op2 "zhu") :arg0-of (h / have-org-role-91 :arg2 (p2 / person :arg0-of (m / manage-01 :arg1 (p3 / product)))) :arg0-of (h2 / have-org-role-91 :arg2 (p4 / person :arg0-of (m2 / manage-01 :arg1 (p5 / product)))) :arg0-of (h3 / have-org-role-91 :arg2 (p6 / person :arg0-of (m3 / manage-01 :arg1 (p7 / product)))) :arg0-of (h4 / have-org-role-91 :arg2 (p8 / person :arg0-of (m4 / manage-01 :arg1 (p9 / product)))) :arg0-of (h5 / have-org-role-91 :arg2 (p10 / person :arg0-of (m5 / manage-01 :arg1 (p11 / product)))) :arg0-of (h6 / have-org-role-91 :arg2 (p12 / person :arg0-of (m6 / manage-01 :arg1 (p13 / product)))) :arg0-of (h7 / have-org-role-91 :arg2 (p14 / person :arg0-of (m7 / manage-01 :arg1 (p15 / product))))) :op2 (e / encourage-01 :arg0 (p16 / person) :arg1 (p17 / person) :arg2 (d / do-02 :arg0 (p18 / person) :arg1 (s / same))))
(s / say-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (o / organization :name (n / name :op1 "united" :op2 "states" :op3 "central" :op4 "command")) :arg2 (o2 / official)) :arg0-of (h2 / have-org-role-91 :arg1 (o3 / organization) :arg2 (o4 / official)) :arg0-of (h3 / have-org-role-91 :arg1 (o5 / organization) :arg2 (o6 / official)) :arg0-of (h4 / have-org-role-91 :arg1 (o7 / organization) :arg2 (o8 / official)) :arg0-of (h5 / have-org-role-91 :arg1 (o9 / organization) :arg2 (o10 / official)) :arg0-of (h6 / have-org-role-91 :arg1 (o11 / organization) :arg2 (o12 / official)) :arg0-of (h7 / have-org-role-91 :arg1 (o13 / organization) :arg2 (o14 / official)) :arg0-of (h8 / have-org-role-91 :arg1 (o15 / organization) :arg2 (o16 / official)) :arg0-of (h9 / have-org-role-91 :arg1 (o17 / organization) :arg2 (o18 / official)) :arg0-of (h10 / have-org-role-91 :arg1 (o19 / organization) :arg2 (o20 / official)) :arg0-of (h11 / have-org-role-91 :arg1 (o21 / organization) :arg2 (o22 / official)) :arg0-of (h12 / have-org-role-91 :arg1 (o23 / organization) :arg2 (o24 / official)) :arg0-of (h13 / have-org-role-91 :arg1 (o25 / organization) :arg2 (o26 / official)) :arg0-of (h14 / have-org-role-91 :arg1 (o27 / organization) :arg2 (o28 / official)) :arg0-of (h15 / have-org-role-91 :arg1 (o29 / organization) :arg2 (o30 / official)) :arg0-of (h16 / have-org-role-91 :arg1 (o31 / organization) :arg2 (o32 / official)) :arg0-of (h17 / have-org-role-91 :arg1 (o33 / organization) :arg2 (o34 / official)) :arg0-of (h18 / have-org-role-91 :arg1 (o35 / organization) :arg2 (o36 / official)) :arg0-of (h19 / have-org-role-91 :arg1 (o37 / organization) :arg2 (o38 / official)) :arg0-of (h20 / have-org-role-91 :arg1 (o39 / organization) :arg2 (o40 / official)) :arg0-of (h21 / have-org-role-91 :arg1 (o41 / organization) :arg2 (o42 / official)) :arg0-of (h22 / have-org-role-91 :arg1 (o43 / organization) :arg2 (o44 / official))))
(l / live-01 :arg0 (c / couple :arg0-of (l2 / live-01 :location (h / height :mod (b / brooklyn)))))
(r / replace-01 :arg1 (f / fruit :arg1-of (f2 / fresh-04)) :arg2 (f3 / fruit :arg1-of (c / cheap-02 :degree (m / more))))
(m / multi-sentence :snt1 (b / be-temporally-at-91 :arg1 (i / it) :arg2 (d / date-entity :decade (N / N-A))) :snt2 (r / reach-01 :polarity - :arg1 (a / agree-01 :arg1 (c / country :arg0-of (h / have-org-role-91 :arg1 (g / government-organization :arg0-of (g2 / govern-01 :arg1 (c2 / country :name (n / name :op1 "N-A")))) :arg2 (m2 / member))))))
(a / attend-01 :arg0 (a2 / and :op1 (p / person :arg0-of (h / have-org-role-91 :arg1 (o / organization :name (n / name :op1 "defense")) :arg2 (s / secretary :mod (v / vice)))) :op2 (p2 / person :name (n2 / name :op1 "fumio" :op2 "kishida") :arg0-of (h2 / have-org-role-91 :arg1 (o2 / organization :name (n3 / name :op1 "state" :op2 "kerry")) :arg2 (s2 / secretary :mod (f / foreign)))) :op3 (p3 / person :name (n4 / name :op1 "nakatani") :arg0-of (h3 / have-org-role-91 :arg1 (c / country) :arg2 (m / minister :mod (f2 / foreign)))) :op4 (p4 / person :name (n5 / name :op1 "nakatani") :arg0-of (h4 / have-org-role-91 :arg1 (c2 / country) :arg2 (m2 / minister :mod (f3 / foreign))))) :arg1 (c3 / conference :mod (p5 / press)) :time (c4 / conference :mod (p6 / press)))
(b / become-01 :arg1 (r / rate :mod (t / tax-01 :arg2 (f / federal))) :arg2 (i / issue-02 :arg0 (e / elect-01 :arg2 (p / president))))
(s / say-01 :arg0 (p / person :name (n / name :op1 "N-A")) :arg1 (a / and :op1 (a2 / audit-01 :arg1 (h / he) :mod (i / irs) :mod (t / too)) :op2 (f / fear-01 :arg0 (i2 / i) :arg1 (f2 / fear-01 :polarity - :arg0 (p2 / person :arg0-of (v / vote-01)) :arg1 (p3 / person :arg0-of (v2 / vote-01))))))
(m / multi-sentence :snt1 (h / have-03 :arg0 (a / and :op1 (h2 / han :time (c / current)) :op2 (x / xiao :name (n / name :op1 (w / wanderer)) :mod (a2 / another))) :arg1 (d / dispute-01 :time (a3 / after :op1 (d2 / drink-01 :arg0 (a4 / alcohol))))) :snt2 (s / stabbed :arg0 (s2 / slash :op1 (p / person :mod (c2 / country :name (n2 / name :op1 "N-A"))) :op2 (p2 / person :mod (c3 / country :name (n3 / name :op1 "N-A")))) :arg2 (d3 / die-01 :arg1 (p3 / person) :accompanier (k / knife :mod (f / fruit))) :time (t / then)))
(a / and :op1 (d / deal-01 :arg0 (i / i) :arg2 (p / person :arg0-of (t / tour-01) :mod (c / country :name (n / name :op1 "N-A"))) :frequency (o / often)) :op2 (s / see-01 :arg0 (i2 / i) :arg1 (t2 / travel-01 :arg0 (t3 / they) :arg4 (c2 / country)) :degree (v / very)))
(e / equip-01 :polarity - :arg1 (p / person :arg0-of (p2 / play-01) :mod (y / young) :quant (m / many)) :arg2 (c / capable-01 :arg1 (p3 / person) :arg2 (s / scoring :arg0 (p4 / person) :arg1 (c2 / capable-01 :arg1 (p5 / person) :arg2 (s2 / scoring :arg0 (p6 / person))))) :concession (b / be-located-at-91 :arg1 (p7 / person :arg0-of (p8 / play-01) :mod (y2 / young) :quant (m2 / many)) :arg2 (p9 / person :arg0-of (p10 / play-01) :mod (y3 / young) :quant (m3 / many))))
(s / say-01 :arg0 (c / company :arg0-of (h / have-org-role-91 :arg1 (c2 / company))) :arg1 (e / enter-01 :arg0 (c3 / company) :arg1 (c4 / contract-02 :arg1 (2 / 20-year :mod (22 / 20-year)) :arg1-of (c5 / cause-01 :arg0 (n / november :arg1 (y / year :mod (t / this))))) :arg1-of (c6 / cause-01 :arg0 (o / obligate-01 :arg2 (e2 / explain-01 :arg0 (c7 / company) :arg1 (t2 / thing :arg0-of (c8 / cause-01 :arg1 (p / pull-out-02 :arg1 (i / it) :arg2 (c9 / contract)))))))))
(s / say-01 :arg0 (a / address-02 :arg1 (a2 / address-02 :arg1 (p / person :arg0-of (a3 / analyze-01)) :time (e / early :degree (m / more) :time (w / week :mod (e2 / early :degree (m2 / more)))))) :arg1 (a4 / and :op1 (u / use-01 :arg0 (p2 / person :arg0-of (a5 / analyze-01)) :arg1 (a6 / around :op1 (m3 / mass-quantity :quant (N / N-A) :unit (k / kilogram))) :arg2 (p3 / person :quant (a7 / around :op1 600) :arg0-of (p4 / power-01))) :op2 (t / tomago :arg0 (p5 / person) :arg1 (p6 / person :quant (a8 / around :op1 900)))))
(s / say-01 :arg1 (o / obligate-01 :arg2 (d / determine-01 :arg0 (p / person :arg0-of (p2 / prosecute-01)) :arg1 (t / thing :arg1-of (s2 / say-01 :arg0 (p3 / person))))) :arg2 (p4 / person :name (n / name :op1 "N-A")))
(i / imply-01 :arg0 (e / enthusiasm :poss (h / he)) :arg1 (o / opposite))
(t / tell-01 :arg0 (f / family) :arg1 (e / expect-01 :arg1 (r / recover-02 :arg1 (s / station))) :arg2 (f2 / family))
(h / have-concession-91 :arg1 (o / open-01 :arg1 (d / door :part-of (h2 / he)) :time (a / always) :time (m / month :mod (l / last) :mod (j / just))) :arg2 (p / promise-01 :arg2 (h3 / hunting :arg1 (d2 / door :poss (h4 / he)) :time (m2 / month :mod (l2 / last) :mod (j2 / just)))))
(f / find-02 :arg0 (c / court) :arg1 (' / '' :arg0 (c2 / court) :arg1 (f2 / feel-01 :arg0 (a / and :op1 (c3 / community :mod (r / religious-group :name (n / name :op1 "N-A"))) :op2 (p / person :arg0-of (c4 / criticize-01 :arg1 (h / he))) :op3 (p2 / person :arg0-of (c5 / criticize-01 :arg1 (h2 / he))) :op4 (p3 / person :arg0-of (c6 / criticize-01 :arg1 (h3 / he))) :op5 (p4 / person :arg0-of (c7 / criticize-01 :arg1 (h4 / he)))) :arg1 (a2 / accuse-01 :arg1 (p5 / person) :arg2 (a3 / and :op1 (r2 / racism) :op2 (i / islamophobia))))))
(m / multi-sentence :snt1 (i / indicate-01 :arg0 (t / transact-01 :arg1-of (s / single-02) :ord (o / ordinal-entity :value 1)) :arg1 (k / kick-01 :arg1 (p / pilot-01 :arg0 (p2 / person :arg0-of (p3 / pilot-01) :arg1-of (s2 / size-01 :arg2 (m2 / medium)) :arg0-of (h / have-org-role-91 :arg2 (p4 / pilot-01 :arg0 (p5 / person) :arg1 (t2 / trade-01)))) :arg1 (k2 / kick-01 :arg0 (p6 / person) :arg1 (p7 / person :arg0-of (p8 / pilot-01) :mod (t3 / trade-01) :arg1-of (s3 / size-01 :arg2 (m3 / medium)))) :mod (a / also))) :mod (a2 / also)) :snt2 (t4 / trade-01 :arg0 (p9 / person :ord (o2 / ordinal-entity :value 1) :arg0-of (h2 / have-org-role-91 :arg1 (c / country :name (n / name :op1 "N-A")))) :location (c2 / country :name (n2 / name :op1 "N-A")) :mod (a3 / also)))
(r / report-01 :arg1 (s / seem-01 :arg1 (r2 / resemble-01 :arg1 (i / it) :arg2 (b / bomb :arg1-of (f / fall-01 :arg4 (d / down :op1 (t / temporal-quantity :quant (N / N-A) :unit (y / year)))))) :arg1-of (s2 / say-01 :arg0 (p / person :arg0-of (l / live-01 :location (a / apartment :mod (t2 / this)) :duration (t3 / temporal-quantity :quant (N2 / N-A) :unit (y2 / year)))))))
(m / multi-sentence :snt1 (c / cause-01 :arg0 (p / propellant :polarity - :degree (s / so :mod (m2 / much :degree (s2 / so)))) :arg1 (r / recommend-01 :arg1 (r2 / rely-01 :arg0 (s3 / slowdown) :arg1 (s4 / spirit :mod (m3 / mars))))) :snt2 (c2 / contrast-01 :arg2 (d / difficult :domain (s5 / simulation :arg1 (a / atmosphere :location (e / earth))) :degree (q / quite))))
(a / argue-01 :arg0 (s / side :quant 2) :arg1 (v / violate-01 :mode (i / interrogative) :arg0 (b / broadcast-program :name (n / name :op1 "N-A")) :arg1 (r / reputation :poss (y / yuefeng :mod (l / lan)))) :time (t / try-02 :arg1 (s2 / side :quant 2)))
(a / and :op1 (t / toucan :arg1 (t2 / toucan :mod (t3 / this))) :op2 (d / die-01 :arg1 (p / person :arg0-of (h / have-03 :arg1 (a2 / and :op1 (t4 / temporal-quantity :quant (N / N-A) :unit (y / year)) :op2 (t5 / temporal-quantity :quant (N2 / N-A) :unit (y2 / year)) :mod (j / just)))) :time (b / before :op1 (n / now) :quant (t6 / temporal-quantity :quant (N3 / N-A) :unit (y3 / year)))) :op3 (l / live-01 :arg0 (i / it) :mod (n2 / new) :time (f / final)))
(e / express-01 :arg0 (c / company :mod (o / oil) :mod (c2 / country :name (n / name :op1 "China"))) :arg1 (v / vigilance :arg1-of (c3 / cause-01 :arg0 (a / and :op1 (r / rise-01 :arg1 (c4 / company :mod (o2 / oil) :mod (c5 / country :name (n2 / name :op1 "China")))) :op2 (k / know-01 :arg0 (c6 / company) :arg1 (' / '' :arg1 (r2 / refinery :mod (d / depend-01 :polarity -) :mod (d2 / depend-01 :polarity -) :poss (c7 / country)) :mod (e2 / especially)))))))
(b / become-01 :arg1 (n / ning) :arg2 (c / celebrity) :manner (i / instant) :manner (a / and :op1 (l / look-01 :arg0 (h / he) :arg1 (g / good :poss (h2 / he))) :op2 (e / excellent-02 :arg1 (h3 / he) :arg1-of (e2 / excellent-02))) :time (a2 / after :op1 (c2 / championships :mod (w / world))))
(c / contrast-01 :arg2 (w / win-01 :arg0 (a / act-02 :arg0 (h / he) :mod (m / magnanimous)) :arg1 (f / funs :quant (m2 / many :degree (s / so)))) :time (a2 / after :op1 (a3 / and :op1 (m3 / misjudged :arg1 (h2 / he)) :op2 (l / lose-02 :arg0 (h3 / he) :arg1 (g / gold)))))
(a / and :op1 (p / produce-01 :arg0 (g / group :mod (c / country :name (n / name :op1 "N-A"))) :arg1 (a2 / album :purpose (t / train-01)) :mod (a3 / also)) :op2 (d / distribute-01 :arg0 (g2 / group) :arg1 (a4 / and :op1 (p2 / person :arg0-of (s / study-01) :mod (p3 / primary) :quant (a5 / all :mod (p4 / primary))) :op2 (p5 / person :arg0-of (s2 / study-01) :mod (s3 / secondary) :location (p6 / province) :quant (a6 / all)))) :op3 (a7 / aim-02 :arg0 (g3 / group) :arg2 (p7 / provide-01 :arg0 (g4 / group) :arg1 (t2 / technical :arg1-of (l / long-03) :arg1-of (g5 / guide-01 :arg2 (a8 / and :op1 (p8 / person :arg0-of (t3 / teach-01)) :op2 (p9 / person :arg0-of (s4 / study-01))))))) :purpose (e / ensure-01 :arg0 (g6 / group) :arg1 (a9 / affect-01 :arg0 (a10 / and :op1 (p10 / person :arg0-of (s5 / study-01 :arg1 (s6 / school :mod (s7 / secondary)))) :op2 (p11 / person :arg0-of (s8 / study-01))))))
(s / show-01 :arg0 (c / ceremony :mod (o / open-02 :arg1 (g / game :mod (y / youth) :ord (o2 / ordinal-entity :value 1) :part-of (g2 / game :mod (y2 / youth) :mod (y3 / youth)))) :ord (o3 / ordinal-entity :value 13)) :arg1 (y4 / youth))
(a / advise-01 :arg2 (t / take-01 :arg1 (o / opine-01 :arg1 (g / give-01 :arg1 (p / punish-01 :mod (l / less :degree (m / more)))))) :arg1-of (c / cause-01 :arg0 (a2 / and :op1 (a3 / attempt-01 :arg1 (p2 / person :arg2-of (c2 / criminal-03))) :op2 (r / result-01 :polarity - :arg1 (a4 / attitude :mod (g2 / good)) :arg2 (d / disagree-01 :arg0 (p3 / person) :arg1 (g3 / guilt))))))
(a / accompany-01 :arg0 (p / person :name (n / name :op1 "cao" :op2 "xianqiang") :arg0-of (h / have-org-role-91 :arg2 (e / executive))) :arg1 (a2 / and :op1 (p2 / person :arg0-of (h2 / have-org-role-91 :arg2 (e2 / executive))) :op2 (p3 / person :arg0-of (h3 / have-org-role-91 :arg2 (e3 / executive))) :op3 (p4 / person :arg0-of (h4 / have-org-role-91 :arg2 (e4 / executive))) :op4 (p5 / person :arg0-of (h5 / have-org-role-91 :arg2 (e5 / executive))) :op5 (p6 / person :arg0-of (h6 / have-org-role-91 :arg2 (e6 / executive)))))
(a / add-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (w / wing :mod (r / right)) :arg3 (t / temporal-quantity :quant (N / N-A) :unit (m / minute)))) :arg1 (w2 / wing :mod (r2 / right) :arg1-of (c / convert-01 :arg1-of (p2 / possible-01 :polarity -))) :time (a2 / after :op1 (n / now) :quant (u / up-to :op1 (t2 / temporal-quantity :quant (N2 / N-A) :unit (m2 / minute)))))
(m / multi-sentence :snt1 (a / absolute :domain (e / enforce-01 :arg0 (t / they)) :degree (a2 / absolute)) :snt2 (u / unbeaten :arg0 (t2 / they) :mod (p / precedent :polarity -) :mod (p2 / precedent :polarity -) :mod (a3 / again) :domain (t3 / this)))
(p / possible-01 :arg1 (t / turn-01 :arg0 (y / you) :arg1 (y2 / you) :arg4 (o / or :op1 (p2 / pineapple) :op2 (d / dog) :op3 (c / character :name (n / name :op1 (r / roy) :op2 (l / lichtenstein)) :mod (r2 / roy)))))
(m / multi-sentence :snt1 (s / say-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (m2 / military :name (n / name :op1 "N-A")))) :arg1 (s2 / stall-01 :arg0 (p2 / person) :arg1 (r / release-01 :arg1 (p3 / product :mod (i / intelligence))))) :snt2 (h2 / hurt-01 :arg0 (a / and :op1 (p4 / person :arg0-of (a2 / analyze-01)) :op2 (p5 / person :arg0-of (a3 / analyze-01))) :arg1 (t / thing :arg2-of (v / view-02 :arg0 (a4 / and :op1 (p6 / person :arg0-of (a5 / analyze-01)) :op2 (p7 / person :arg0-of (a6 / analyze-01)))))))
(a / and :op1 (s / show-01 :arg0 (s2 / show-01 :arg0 (t / they) :arg1 (s3 / solidarity :mod (c / culinary) :mod (s4 / some) :poss (o / own-01 :arg0 (t2 / they)))) :arg1 (p / person :arg0-of (r / report-01)) :arg2 (d / dinner :location (s5 / shop :mod (s6 / sandwich) :poss (p2 / person :arg0-of (h / have-org-role-91 :arg2 (h2 / head-of-state)))))) :op2 (a2 / anti :arg1 (s7 / swim-01 :mod (t3 / tiny) :mod (t4 / tiny)) :location (b / business :mod (f / flatiron) :arg1-of (b2 / be-located-at-91 :arg2 (b3 / business) :time (s8 / since :op1 (c2 / crash-01))))))
(m / multi-sentence :snt1 (s / show-01 :arg0 (c / company :arg0-of (w / win-01 :arg1 (g / gold)) :mod (g2 / grand)) :arg1 (p / prefer-01 :arg1 (g3 / game :mod (o / olympic)) :arg1-of (s2 / special-02))) :snt2 (a / and :op1 (s3 / strike-01 :arg0 (p2 / person :arg0-of (w2 / win-01 :arg1 (g4 / gold)) :mod (g5 / grand)) :arg1 (g6 / game :mod (o2 / olympic))) :op2 (m2 / make-18 :arg0 (p3 / person) :arg1 (t / thing :arg1-of (g7 / gain-02) :mod (h / huge)))))
(a / and :op1 (p / promote-02 :arg0 (a2 / and :op1 (s / strategy) :op2 (c / culture) :mod (c2 / country :name (n / name :op1 "N-A"))) :arg1 (t / thing :arg1-of (r / report-01 :arg0 (m / military :mod (c3 / country :name (n2 / name :op1 "N-A"))))) :arg3 (s2 / score-entity :op1 5 :op2 2012 :op3 19 :op4 2013 :op5 2013 :op6 (e / et-cetera))) :op2 2015 :arg0 (a3 / and) :arg1 (a4 / and :op1 (t2 / thing :arg1-of (r2 / report-01 :arg0 (c4 / country))) :op2 (t3 / thing :quant 2012) :op3 (e2 / et-cetera)) :time (p2 / previous))
(d / date :mod (c / case-03) :time (b / back :op1 (a / and :op1 (g / gilead :arg1 (a2 / and :op1 (p / person :arg0-of (h / have-org-role-91 :arg2 (h2 / head-of-state))) :op2 (p2 / person :arg0-of (c2 / claim-01 :arg1 (o / own-01 :arg1 (l / laboratory)))))) :op2 (p3 / person :arg0-of (c3 / claim-01 :arg1 (o2 / own-01 :arg0 (p4 / person) :arg1 (w / work-01 :arg1 (l2 / laboratory) :arg0-of (c4 / counter-01 :arg1 (l3 / laboratory))))))) :op3 (i / ingredient :arg1-of (a3 / activity-06) :location (d2 / drug :mod (g2 / gilead)))))
(s / say-01 :arg0 (s2 / skinner :mod (2 / 23-year-old)) :arg1 (c / compare-01 :arg1 (i / it) :arg2 (s3 / seismic-quantity :quant (N / N-A))))
(a / and :op1 (s / set-01 :arg0 (i / it) :arg1 (n / need-01 :arg1 (d / develop-02 :arg1 (t / tourism))) :purpose (m / meet-01 :arg0 (t2 / team) :arg1 (n2 / need-01 :arg1 (d2 / develop-02 :arg1 (t3 / tourism))))) :op2 (r / responsible :arg0 (t4 / team) :arg1 (t5 / team :arg0-of (r2 / responsible-01 :arg1 (s2 / spots :arg1-of (m2 / major-02)))) :arg0-of (c / cause-01 :arg1 (a2 / and :op1 (h / help-01 :arg0 (t6 / team)) :op2 (d3 / divert :arg0 (t7 / team) :arg1 (p / person))))))
(l / launch-01 :arg1 (s / series :name (n / name :op1 (z / z11) :op2 (s2 / series) :op3 (s3 / series) :op4 (s4 / series) :op5 (s5 / series) :op6 (s6 / series) :op7 (s7 / series))) :time (b / before :op1 (n2 / now) :quant (l2 / long :arg1-of (l3 / long-03))) :mod (a / also))
(a / and :op1 (e / expect-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg2 (a2 / agl))) :arg1 (c / continue-01 :arg0 (p2 / person) :arg1 (o / operate-01 :arg0 (p3 / person)))) :op2 (m / mean-01 :arg1 (d / demand-01 :arg0 (p4 / person) :arg1 (e2 / electricity)) :arg2 (s / say-01 :arg0 (p5 / person))))
(p / project :mod (i / infrastructure) :domain (p2 / project :mod (i2 / infrastructure) :beneficiary (m / many)) :arg1-of (r / resemble-01 :polarity - :arg2 (f / few :op1 (f2 / few :op1 (t / temporal-quantity :quant (N / N-A) :unit (m2 / month)) :mod (j / just)))))
(r / run-02 :arg0 (w / woman) :prep-on (m / motorway :mod (s / swiss)) :manner (s2 / suicide) :manner (s3 / suicide))
(a / and :op1 (o / open-01 :arg1 (i / investigate-01 :arg2-of (c / criminal-03))) :op2 (s / step-01 :arg1 (p / person :arg0-of (h / have-rel-role-91 :arg2 (l / lawyer))) :arg2 (s2 / situation :arg1-of (r / resemble-01 :arg2 (t / this)))) :op3 (t2 / tell-01 :arg0 (p2 / person :name (n / name :op1 "gilles" :op2 "hofstetter") :arg0-of (h2 / have-rel-role-91 :arg1 (p3 / person) :arg2 (l2 / lawyer))) :arg1 (p4 / person :arg0-of (h3 / have-rel-role-91 :arg1 (p5 / person) :arg2 (l3 / lawyer))) :arg2 (p6 / person :arg0-of (h4 / have-rel-role-91 :arg1 (p7 / person) :arg2 (l4 / lawyer)))))
(r / result-01 :arg1 (r2 / result-01) :arg2 (t / temperature :op1 (t2 / temperature :quant (f / few :op1 (t3 / temporal-quantity :quant (N / N-A) :unit (m / month)) :mod (a / actual)) :compared-to (e / earth) :time (t4 / today))))
(l / likens :arg1 (s / star :arg0-of (l2 / likens :arg1 (o / one :mod (l3 / large :degree (m / more) :compared-to (o2 / one :mod (s2 / small :degree (m2 / more))))))) :arg2 (r / rebull))
(j / jockey :arg0 (j2 / jockey :ord (o / ordinal-entity :value 6)) :arg1 (r / reach-01 :arg1 (l / landmark) :location (f / flat)) :ord (o2 / ordinal-entity :value 6))
(h / have-03 :arg0 (i / it) :arg1 (a / and :op1 (s / steel :quant (m / mass-quantity :quant (N / N-A) :unit (k / kilogram))) :op2 (c / concrete :quant (m2 / mass-quantity :quant (N2 / N-A) :unit (k2 / kilogram)))))
(a / awaited :arg1 (a2 / awaited :quant 1 :mod (t / test) :mod (b / between :op1 (b2 / biles) :op2 (r / rest :part-of (f / field)))) :location (b3 / between :op1 (b4 / between :op1 (r2 / rest :part-of (f2 / field)) :op2 (r3 / rest :part-of (f3 / field)))) :op2 (b5 / burden-01 :arg1 (t2 / thing :arg1-of (e / expect-01 :arg0 (o / oversized)))))
(t / take-01 :arg0 (p / person :quant 1 :arg0-of (u / use-01)) :arg1 (s / site) :purpose (d / declare-02 :arg0 (p2 / person) :arg1 (h / happy :poss (p3 / person))) :time (r / recent) :purpose (d2 / declare-02 :arg0 (p4 / person) :arg1 (t2 / think-01 :arg0 (r2 / rest :part-of (i / internet)) :arg1 (s2 / select-01 :arg1 (a / and :op1 (s3 / solo) :op2 (j / jennifer)) :mod (a2 / actual)))))
(t / think-01 :arg0 (p / person :name (n / name :op1 "byron" :op2 "macdonald")) :arg1 (t2 / turned :arg1 (m / mic :poss (h / he)) :time (s / start-01 :arg0 (h2 / he) :arg1 (d / dispense :arg0 (h3 / he) :arg1 (t3 / thing :arg1-of (o / opine-01 :arg0 (h4 / he)) :quant (s2 / some) :arg1-of (i / include-91 :arg2 (t4 / thing :arg1-of (o2 / opine-01 :arg0 (h5 / he))) :time (e / end-01 :arg1 (f / freestyle :poss (w / woman) :mod (4 / 4x200m)))))))))
(d / do-02 :arg0 (i / i) :arg1 (t / this) :arg2 (w / woman))
(p / possible-01 :arg1 (s / submit-01 :arg0 (m / model) :arg1 (o / or :op1 (o2 / online :mod (p2 / pics)) :op2 (p3 / person :location (f / facility :name (n / name :op1 "N-A") :arg1-of (o3 / open-09)))) :arg2 (a / and :op1 (a2 / angeles) :op2 (y / york :mod (n2 / new)))))
(a / apply-02 :arg1 (i / it) :arg2 (a2 / and :op1 (r / region :quant 14 :mod (a3 / autonomous)) :op2 (r2 / region :mod (a4 / autonomous)) :arg2-of (i2 / include-01 :arg1 (a5 / and :op1 (z / zhejiang) :op2 (j / jiangsu)))) :time (s / since :op1 (p / pilot-01 :arg0 (p2 / pilot-01 :arg0 (i3 / it) :location (c / country :name (n / name :op1 "N-A"))) :arg1 (i4 / it))))
(r / report)
(e / estimate-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (s / staff :mod (r / red) :mod (c / country :name (n / name :op1 "N-A"))) :arg2 (s2 / staff))) :arg1 (h2 / have-03 :polarity - :arg0 (p2 / person :arg0-of (h3 / have-03 :arg1 (p3 / person :quant (b / between :op1 100 :op2 60)))) :arg1 (p4 / person :quant (b2 / between :op1 100 :op2 60)) :arg1-of (c2 / cause-01 :arg0 (a / and :op1 (h4 / hispanic :arg1 (p5 / person)) :op2 (s3 / stay-01 :arg1 (p6 / person) :location (g / garage))))))
(m / multi-sentence :snt1 (s / say-01 :arg0 (t / thing :arg1-of (p / provide-01 :arg0 (m2 / mainland :part-of (c / customs)))) :arg1 (a / and :op1 (s2 / supply-01 :polarity - :arg1 (t2 / thing :arg1-of (p2 / provide-01 :arg0 (m3 / mainland :part-of (c2 / customs))))) :op2 (n / necessities :polarity - :arg1 (t3 / thing) :time (t4 / trip-03)))) :snt2 (i / infer-01 :arg1 (c3 / classify-01 :arg1 (p3 / person :arg1-of (m4 / mean-01 :arg2 (s3 / smuggle-01 :arg1 (p4 / person)))) :arg2 (s4 / smuggle-01 :arg1 (s5 / smuggle-01)))))
(p / possible-01 :arg1 (i / import-01 :arg0 (s / slash :op1 (c / country :name (n / name :op1 "N-A")) :op2 (c2 / country :name (n2 / name :op1 "N-A"))) :arg1 (o / oil :mod (c3 / crude)) :arg2 (a / and :op1 (o2 / oil) :op2 (o3 / oil)) :arg0-of (h / have-03 :arg1 (a2 / and :op1 (c4 / content :arg1-of (l / low-04)) :op2 (p2 / product :mod (p3 / petroleum)) :arg1-of (i2 / improve-01)))) :time (a3 / after :op1 (o4 / obtain-01 :arg1 (l2 / license-01 :arg1 (i3 / import-01 :arg1 (o5 / oil)) :mod (c5 / crude)))))
(m / multi-sentence :snt1 (e / experience-01 :arg0 (m2 / man :mod (m3 / mid-aged) :location (c / country :name (n / name :op1 "India"))) :arg1 (l / land-01 :arg1-of (l2 / land-01) :mod (w / world-region :name (n2 / name :op1 "N-A"))) :time (w2 / week :mod (l3 / last)) :location (c2 / country) :time (w3 / week :mod (l4 / last))) :snt2 (w4 / win-01 :arg0 (h / he) :arg1 (a / award-01 :arg1 (m4 / monetary-quantity :quant 1 :unit (d / dollar)) :arg2 (w5 / we)) :location (a2 / airport :mod (s / same))))
(c / control-01 :arg1 (c2 / cap :name (n / name :op1 (o / overcapacity))) :arg1-of (s / simple-02 :polarity -) :time (f / first))
(m / multi-sentence :snt1 (p / possible-01 :arg1 (a / apply-01 :arg0 (p2 / person :arg1-of (q / qualify-02) :arg1-of (q2 / qualify-02)) :arg1 (c / center :mod (s / sell-01)) :arg2 (c2 / center :mod (s2 / sell-01) :mod (g / generation :ord (o / ordinal-entity :value 2) :poss (p3 / person))))) :snt2 (a2 / and :op1 (p4 / person :mod (e / elderly) :time (a3 / age :mod (t / this))) :op2 (p5 / possible-01 :arg1 (e2 / enjoy-01 :arg0 (a4 / account :mod (f / foreign)) :arg1 (p6 / policy :mod (p7 / prefer-01)) :mod (a5 / also)))))
(a / and :op1 (i / important :degree (g / great) :domain (b / bureau :arg0-of (r / refine-01 :arg1 (s / security :mod (p / public))))) :op2 (o / organize-01 :arg0 (b2 / bureau) :arg1 (d / detachment :consist-of (t / troop :mod (e / elite))) :purpose (i2 / investigate-01 :arg0 (p2 / person :arg0-of (h / have-org-role-91 :arg2 (t2 / troop :mod (e2 / elite))))) :time (i3 / immediate)) :time (a2 / after :op1 (c / case-03)))
(m / multi-sentence :snt1 (o / oh :mode (e / expressive)) :snt2 (b / bring-01 :arg0 (j / james) :arg1 (t / trophy :ord (o2 / ordinal-entity :value 1) :mod (p / professional) :mod (p2 / professional) :ord (o3 / ordinal-entity :value 1)) :time (b2 / before :op1 (n / now) :duration (t2 / temporal-quantity :quant (N / N-A) :unit (y / year)))))
(c / cause-01 :arg1 (c2 / contrast-01 :arg1 (l / likely-01 :arg1 (d / decline-01 :arg1 (c3 / capable-01 :arg1 (c4 / country :name (n / name :op1 "N-A")) :arg2 (b / bear-02 :arg1 (c5 / country))) :degree (f / further)) :time (s / season :arg1-of (r / regular-03))) :arg2 (b2 / become-01 :arg1 (h / he) :arg2 (p / person :arg0-of (p2 / play-01) :mod (t / top :quant 3) :mod (t2 / top)) :arg1-of (e / easy-05) :mod (s2 / still))))
(s / say-01 :arg0 (t / thing :arg1-of (r / report-01)) :arg1 (a / and :op1 (r2 / represent-01 :arg0 (a2 / and :op1 (p / person :name (n / name :op1 "lyman") :arg0-of (h / have-org-role-91 :arg2 (a3 / ambassador :mod (b / bundesliga)))) :op2 (p2 / person :arg0-of (h2 / have-org-role-91 :arg2 (a4 / ambassador :mod (b2 / bundesliga))))) :arg1 (b3 / bundesliga :location (i / island :name (n2 / name :op1 "N-A")))) :op2 (a5 / and :op1 (c / continue-01 :arg0 (a6 / and) :arg1 (t2 / tour :name (n3 / name :op1 (l / legendary)))) :op2 (s2 / start-01 :arg0 (a7 / and) :arg1 (o / outposts :arg0 (a8 / and) :arg1 (c2 / ceremony :mod (o2 / open-02 :arg1 (o3 / open-01 :arg1 (/ / / :quant 2016 :mod (/2 / /))))))))))
(h / have-03 :arg0 (i / i) :arg1 (c / cancer :mod (b / bladder) :arg1-of (i2 / include-91 :arg2 (t / thing :quant 1 :arg1-of (o / operate-01 :arg0 (t2 / they) :arg1-of (p / possible-01) :arg1-of (p2 / possible-01))))))
(e / equal-01 :arg1 (i / index :mod (p / person :arg0-of (c / consume-01))) :arg2 (p2 / product-of :op1 2016 :op2 101.0) :arg1-of (c2 / compare-01 :arg2 (p3 / product-of :op1 2016 :op2 101.0)) :arg1-of (c3 / compare-01 :arg2 (p4 / product-of :op1 2016 :op2 101.0)))
(w / write-01 :arg0 (p / person :arg0-of (a / analyze-01 :arg1 (i / intelligence :mod (s / state) :mod (s2 / state)))) :arg1 (d / dispute-01 :arg0 (p2 / person :arg0-of (a2 / analyze-01 :arg1 (i2 / intelligence))) :arg2 (p3 / person :arg0-of (h / have-org-role-91 :arg1 (p4 / person :name (n / name :op1 "George" :op2 "W." :op3 "Bush") :arg0-of (h2 / have-org-role-91 :arg2 (p5 / president))) :arg2 (p6 / person :arg0-of (a3 / analyze-01 :arg1 (i3 / intelligence))))) :time (b / before :op1 (n2 / now) :quant (m / more-than :op1 (t / temporal-quantity :quant (N / N-A) :unit (d2 / decade)))) :time (p7 / person :arg0-of (a4 / analyze-01 :arg1 (i4 / intelligence)) :mod (c / country :name (n3 / name :op1 "N-A")))) :arg0-of (a5 / advocate-01 :arg1 (a6 / advocate-01 :arg0 (g / government-organization :arg0-of (a7 / administrate-01 :arg1 (c2 / country))) :arg1 (f / force :mod (s3 / small) :location (c3 / country))) :arg0-of (a8 / advocate-01 :arg1 (a9 / and :op1 (f2 / force :mod (s4 / small) :location (c4 / country)) :op2 (t2 / time :mod (l / little))))))
(a / account-01 :arg0 (t / thing :arg2-of (r / respond-01 :arg0 (g / government-organization :arg0-of (g2 / govern-01)))) :arg1 (c / citizenry :mod (h / hunger-01) :poss (g3 / government-organization)) :arg1-of (r2 / resemble-01 :arg2 (a2 / attitude :mod (l / let-me-eat-cake) :poss (p / person :arg0-of (h2 / have-org-role-91 :arg2 (p2 / president))))) :mod (e / especially))
(a / and :op1 (b / break-01 :arg0 (a2 / and :op1 (p / person :arg0-of (h / have-org-role-91 :arg2 (d / doctor))) :op2 (p2 / person :arg0-of (h2 / have-org-role-91 :arg2 (d2 / doctor)))) :arg1 (r / restrict-01 :mod (b2 / brief)) :manner (t / take-01 :arg0 (p3 / person) :arg1 (f / form :poss (p4 / person :arg0-of (h3 / have-org-role-91 :arg2 (p5 / person :arg1-of (e / expert-01)))))) :manner (t2 / take-01 :arg0 (p6 / person) :arg1 (f2 / form :poss (p7 / person :arg0-of (h4 / have-org-role-91 :arg2 (p8 / person :arg1-of (e2 / expert-01))))))) :op2 (e3 / exchange-01 :arg0 (p9 / person) :arg1 (c / case-03)) :op3 (d3 / discuss-01 :arg1 (c2 / case-03)) :op4 (s / so))
(m / multi-sentence :snt1 (s / short :domain (a / and :op1 (c / company :mod (i / internet)) :op2 (c2 / company :mod (d / data)))) :snt2 (p / possible-01 :arg1 (p2 / provide-01 :arg0 (u / unity :polarity -) :arg1 (e / enter-01 :arg1-of (s2 / same-01)))))
(c / cause-01 :arg1 (n / need-01 :arg0 (w / we) :arg1 (e / example :mod (g / good)) :location (i / in-front-of :op1 (c2 / child)) :arg0-of (r / regulate-01 :arg1 (c3 / character :poss (w2 / we) :arg1-of (e2 / excellent-02 :arg1-of (d / direct-02 :polarity -)) :arg0-of (h / help-01 :arg1 (s / shaped :arg0 (c4 / child) :arg1 (c5 / character :arg1-of (e3 / excellent-02) :poss (c6 / child))) :arg0-of (c7 / cause-01 :arg1 (b / become-01 :arg1 (h2 / he) :arg2 (e4 / excellent-02 :arg1 (h3 / he) :degree (m / more)))))))))
(s / sign-02 :arg0 (p / person :quant (t / two)) :arg1 (c / contract :quant (t2 / two)) :time (s2 / since :op1 (d / decide-01 :arg0 (p2 / person) :arg1 (r / return-01 :arg1 (p3 / person) :arg4 (u / under :op1 (v / value-interval :op1 (t3 / two) :op2 2014))))))
(p / possible-01 :arg1 (c / confirm-01 :arg0 (a / and :op1 (g / group :mod (w / wood)) :op2 (u / unite-01)) :arg1 (a2 / agree-01 :arg0 (w2 / we) :arg1 (r / restart-01 :arg0 (w3 / we) :arg1 (p2 / process-02) :purpose (r2 / resolution :mod (d / dispute-01 :time (c2 / current))))) :arg2 (t / thing :arg1-of (s / state-01) :mod (j / joint))))
(p / provide-01 :arg0 (c / cluster :name (n / name :op1 (s / star) :op2 (s2 / star) :op3 (s3 / star) :op4 (s4 / star) :op5 (s5 / star) :op6 (s6 / star) :op7 (s7 / star))) :arg1 (a / and :op1 (d / direction :mod (g / go-02 :arg0 (p2 / person :arg0-of (h / have-org-role-91 :arg1 (p3 / political-party :name (n2 / name :op1 "N-A")))))) :op2 (g2 / go-02 :arg0 (a2 / and :op1 (p4 / person :mod (y / young :degree (m / more)) :mod (y2 / young :degree (m2 / more))) :op2 (p5 / person :mod (o / old :degree (m3 / more)) :mod (o2 / old :degree (m4 / more)))))))
(r / reach-01 :arg0 (d / dettori :name (n / name :op1 (f / frankie) :op2 (d2 / dettori))) :arg1 (w / winners :quant 3000) :location (n2 / newmarket :location (n3 / newmarket)))
(a / and :op1 (w / witness-01 :arg0 (w2 / we :quant (a2 / all)) :arg1 (e / engineer-01) :arg2 (s / scale :mod (e2 / epic :mod (t / true)) :location (p / project :mod (t2 / this)))) :op2 (u / use-01 :arg0 (a3 / and :op1 (c / concrete :quant (o / over :op1 30,000)) :op2 (s2 / steel) :arg1-of (u2 / use-01 :mod (j / just))) :arg1 (p2 / part :part-of (b / bridge)) :mod (j2 / just)))
(m / multi-sentence :snt1 (c / cause-01 :arg1 (a / appear-02 :arg1 (a2 / and :op1 (a3 / arm-01 :arg1 (p / person :quant (m2 / multiple) :arg1-of (a4 / arm-01)) :location (h / here)) :op2 (e / engage-01 :arg1 (p2 / person) :arg2 (p3 / person :arg0-of (h2 / have-org-role-91 :arg1 (p4 / police) :arg2 (c2 / captain))) :arg1-of (a5 / activity-06 :arg0 (p5 / person)) :arg1-of (a6 / activity-06 :arg0 (p6 / person)))))) :snt2 (t / tell-01 :arg0 (p7 / person :arg0-of (h3 / have-org-role-91 :arg1 (p8 / police :mod (p9 / philadelphia)) :arg2 (c3 / captain))) :arg1 (s / station)))
(c / call-03 :arg0 (h / he) :arg1 (a / and :op1 (a2 / access-01 :arg1 (p / paper :mod (c2 / council)) :mod (g / great :degree (m / more))) :op2 (d / decide-01 :arg0 (g2 / group :arg0-of (w / work-01)) :arg1 (t / thing :arg1-of (d2 / decide-01 :arg3 (g3 / group :arg0-of (w2 / work-01)))) :mod (g4 / great :degree (m2 / more)))))
(g / go-03 :arg0 (f / fan :mod (r / rio :quant 2016)) :arg1 (w / wild :beneficiary (p / person :mod (c / country :name (n / name :op1 "N-A")) :arg0-of (p2 / prove-01 :arg1 (l / lookalike :arg1 (d / duchess :mod (c2 / cambridge)) :degree (i / impress-01))))) :time (w2 / week :mod (t / this)))
(c / cause-01 :arg0 (s / see-01 :arg0 (i / i) :arg1 (r / resemblance :mod (h / huge)) :arg1-of (p / personal-02)) :arg1 (s2 / see-01 :arg0 (i2 / i) :arg1 (r2 / resemblance :mod (h2 / huge)) :arg1-of (p2 / personal-02) :arg2-of (e / except-01 :arg1 (a / and :op1 (h3 / hair :arg1-of (f / facial)) :op2 (h4 / hair :arg1-of (f2 / facial))))))
(s / say-01 :arg0 (p / person :name (n / name :op1 "N-A")) :arg1 (a / and :op1 (' / '' :arg0 (p2 / person :arg0-of (h / have-org-role-91 :arg1 (n2 / nominate-01 :arg1 (p3 / person :arg0-of (h2 / have-org-role-91 :arg2 (p4 / president :mod (v / vice)))) :arg2 (p5 / president :mod (v2 / vice))))) :arg1 (p6 / person :arg0-of (h3 / have-org-role-91 :arg2 (p7 / president :mod (v3 / vice))))) :op2 ('2 / '' :arg0 (p8 / person) :arg1 (c / candidate :poss (p9 / person :arg0-of (h4 / have-org-role-91 :arg1 (c2 / criminal-organization :name (n3 / name :op1 "N-A")) :arg2 (p10 / president)))))))
(m / multi-sentence :snt1 (a / aim-01 :arg0 (m2 / mission :name (n / name :op1 (m3 / mars) :op2 (m4 / mars)) :poss (c / country :name (n2 / name :op1 "China"))) :arg1 (a2 / achieve-01 :arg0 (m5 / mission) :arg1 (a3 / and :op1 (s / surround-01 :arg1 (m6 / mission)) :op2 (l / land-01 :arg1-of (l2 / land-01)) :op3 (u / utilize-01 :time (t / time :quant 1))) :time (e / ever :polarity -) :location (c2 / country :mod (f / foreign)))) :snt2 (c3 / contrast-01 :arg2 (f2 / fail-01 :arg1 (l3 / land-01))))
(s / say-01 :arg0 (h / he) :arg1 (a / and :op1 (c / candidate :arg1-of (a2 / appropriate-02 :degree (m / most)) :prep-for (a3 / asset :arg1-of (h2 / handle-01 :arg0 (p / person :arg0-of (d / deal-01 :arg2 (c2 / case-03 :arg1-of (m2 / major-02))))))) :op2 (s2 / serve-01 :arg0 (p2 / person :arg0-of (d2 / deal-01 :arg2 (c3 / case-03 :arg1-of (m3 / major-02)))) :arg1 (f / foundation) :arg2 (c4 / committee :arg0-of (u / uncovered :arg1 (a4 / asset :arg1-of (r / relate-01)))))))
(c / contrast-01 :arg1 (s / shy :arg1 (g / grecia :name (n / name :op1 (n2 / newcomer))) :degree (s2 / slight) :time (i / initial)) :arg2 (b / become-01 :arg1 (g2 / grecia) :arg2 (a / and :op1 (r / rational :polarity -) :op2 (r2 / rolling :location (a2 / and :op1 (f / frolic :mod (b2 / basin)) :op2 (e / eat-01 :arg1 (g3 / grapes))) :prep-with (b3 / beak :mod (n3 / new)))) :time (s3 / soon)))
(p / possible-01 :arg1 (r / reduce-01 :arg0 (t / this) :arg1 (r2 / risk-01 :arg2 (d / damage-01 :arg1 (a / and :op1 (g / gracia) :op2 (g2 / gracia)) :mod (f / further))) :arg1-of (t2 / tell-01 :arg0 (p2 / person :arg0-of (h / have-org-role-91 :arg2 (l / lange))) :arg2 (p3 / person :mod (i / international)))))
(a / and :op2 (i / increase-01 :arg1 (p / population :mod (n / new) :mod (z / zealand)) :arg2 (p2 / population :quant 28,200) :time (p3 / period :mod (s / same))))
(m / multi-sentence :snt1 (e / experience-01 :arg0 (m2 / man :mod (m3 / mid-aged) :location (c / country :name (n / name :op1 "India"))) :arg1 (l / land-01 :arg1-of (l2 / land-01) :mod (w / world-region :name (n2 / name :op1 "N-A"))) :time (w2 / week :mod (l3 / last)) :location (c2 / country) :time (w3 / week :mod (l4 / last))) :snt2 (w4 / win-01 :arg0 (h / he) :arg1 (a / award-01 :arg1 (m4 / monetary-quantity :quant 1 :unit (d / dollar)) :arg2 (w5 / we)) :location (a2 / airport :mod (s / same))))
(i / include-91 :arg1 (r / rate-entity-91 :arg1 (m / manipulate-01 :mod (b / basic)) :arg2 (m2 / monetary-quantity :quant 1.75 :unit (y / yuan))) :arg2 (r2 / rate-entity-91 :arg1 (m3 / manipulate-01 :mod (b2 / basic)) :arg2 (m4 / monetary-quantity :quant 0.05 :unit (y2 / yuan :mod (r3 / renminbi)))) :arg3 (t / they))
(a / and :op1 (b / be-located-at-91 :arg1 (p / platform :mod (s / social) :mod (o / online) :poss (w / we)) :arg2 (c / circle :mod (s2 / social) :poss (w2 / we))) :op2 (e / establish-01 :arg0 (p2 / platform) :arg1 (p3 / person :poss (p4 / person))) :location (s3 / surface))
(t / tell-01 :arg0 (d / doctor) :arg1 (p / possible-01 :polarity - :arg1 (r / rectify-01 :arg1 (a / and :op1 (b / bronchitis :mod (c / chronic)) :op2 (p2 / problem :mod (s / such))) :prep-with (m / medication)) :mod (a2 / almost)) :arg2 (p3 / person :name (n / name :op1 "N-A")))
(c / contrast-01 :arg1 (r / reach-01 :arg0 (g / grow-01 :arg1 (e / economy :poss (c2 / country))) :arg1 (p / percentage-entity :value 7)) :arg2 (r2 / reach-01 :arg0 (i / inflation :poss (c3 / country)) :arg1 (l / level :mod (t / this)) :mod (b / basic)))
(m / multi-sentence :snt1 (c / change-01 :arg1 (s / state :mod (g / grade :mod (p / previous))) :time (s2 / since :op1 (i / implement-01 :arg1 (i2 / implement-01 :arg1 (r / reform-01 :arg1 (e / exchange-01 :mod (n / new))))))) :snt2 (r2 / rate :mod (e2 / exchange-01 :arg1 (e3 / exchange-01 :mod (u / ultra))) :mod (c2 / central)))
(a / and :op1 (a2 / accept-01 :arg0 (c / company :name (n / name :op1 "N-A") :mod (t / this)) :arg1 (r / rate-entity-91 :arg1 1 :arg2 (t2 / temporal-quantity :quant (N / N-A) :unit (y / year))) :manner (o / official)) :op2 (a3 / accept-01 :arg0 (f / fund-01 :arg1 (m / money) :mod (i / international)) :arg1 (m2 / monetary-quantity :quant (N2 / N-A) :unit (y2 / yuan) :arg1-of (b / become-01 :arg2 (c2 / currency :mod (w / weight :mod (s / sdr)))))))
(s / say-01 :arg0 (s2 / she) :arg1 (a / and :op1 (p / pleasant :degree (q / quite) :domain (s3 / see-01 :arg1 (s4 / sizable))) :op2 (o / organize-01 :arg1 (c / ceremony :mod (w / worship :mod (a2 / ancestral)) :arg1-of (o2 / organize-01)) :location (m / metropolis :name (n / name :op1 (b / busy)) :mod (f / financial) :mod (b2 / busy :degree (s5 / such))))))
(s / say-01 :arg0 (h / he) :arg1 (c / contrast-01 :arg1 (p / participate-01 :arg0 (t / team :quant 24 :arg2-of (t2 / total-01 :arg1 (t3 / team :quant 24 :arg1-of (o / organize-01 :arg0 (c2 / community) :mod (o2 / only :polarity -))))) :arg1 (c3 / compete-01 :arg1-of (o3 / organize-01 :arg0 (c4 / community)) :arg1-of (o4 / organize-01 :arg0 (c5 / community) :mod (a / also)))) :arg2 (a2 / attend-01 :arg0 (p2 / person :arg0-of (s2 / study-01)))) :mod (a3 / also))
(u / understand-01 :arg1 (l / list-01 :arg1 (a / and :op1 (p / person :arg0-of (h / have-org-role-91 :arg1 (o / organization :mod (c / community)) :arg2 (o2 / organization :mod (c2 / community)))) :op2 (p2 / person :arg0-of (h2 / have-org-role-91 :arg1 (c3 / community :mod (c4 / community)) :arg3 (a2 / apprentice-01 :arg0 (p3 / person))))) :arg2 (t / thing :arg2-of (l2 / list-01 :arg1 (h3 / heritage :mod (c5 / culture) :mod (c6 / culture)) :arg1-of (m / mean-01 :arg2 2011)))))
(s / say-01 :arg1 (a / and :op1 (p / popular-02 :polarity - :arg1 (i / it) :arg2 (t / table :mod (d / dinner))) :op2 (s2 / say-01 :arg0 (p2 / person :arg0-of (h / have-org-role-91 :arg1 (m / mr.) :arg2 (c / coe))) :arg1 (i2 / it))) :arg2 (p3 / person :name (n / name :op1 "N-A")))
(a / and :op1 (f / focus-01 :arg0 (c / company :mod (m / medicine) :mod (i / internet) :quant (m2 / many) :arg0-of (g / go-06 :arg1 (p / project :mod (g2 / grandiose)))) :arg2 (f2 / field :name (n / name :op1 (v / vertical)) :mod (i2 / internet))) :op2 (f3 / focus-01 :arg0 (c2 / company) :arg2 (a2 / and :op1 (p2 / person :arg0-of (h / have-org-role-91 :arg2 (h2 / head-of-state))) :op2 (d / doctor))))
(t / try-01 :arg0 (p / person :mod (c / country :name (n / name :op1 "Israel"))) :arg1 (f / find-01 :arg0 (p2 / person) :arg1 (t2 / thing :arg2-of (l / list-01 :arg1 (m / morality :arg1-of (p3 / provide-01 :arg0 (h / hotel)))))) :time (s / stay-01 :arg1 (p4 / person) :time (r / recent)))
(a / add-01 :arg1 (a2 / adds :domain (c / code)) :time (n / now))
(s / say-01 :arg0 (p / person :name (n / name :op1 "N-A")) :arg1 (f / feel-01 :arg0 (p2 / person) :arg1 (r / resemble-01 :arg1 (i / it) :arg2 (t / thing :arg1-of (r2 / resemble-01 :arg2 (f2 / flags :mod (c / country :name (n2 / name :op1 "N-A")) :mod (a / all) :location (s2 / stand)))))))
(c / cause-01 :arg0 (f / fulfill-01 :polarity - :arg0 (p / person) :arg1 (t / thing :arg2-of (o / obligate-01))) :arg1 (f2 / fulfill-01 :arg0 (p2 / person) :arg1 (t2 / thing :arg2-of (o2 / obligate-01)) :purpose (e / enforce-01 :arg0 (p3 / person) :arg1 (v / verdict))) :arg1-of (a / apply-02 :arg2 (c2 / court :mod (s / shuyang))) :time (a2 / after :op1 (a3 / affect-01 :arg1 (v2 / verdict))))
(p / possible-01 :arg1 (b / be-located-at-91 :arg1 (j / job :quant 2000) :arg2 (r / risk-01 :arg2 (p2 / plant :mod (p3 / portland) :poss (c / country :name (n / name :op1 "N-A"))))))
(s / say-01 :arg0 (i / i) :arg1 (t / thing :arg2-of (v / value-01 :arg1 (c / contract-02)) :arg1-of (v2 / value-01 :arg2 (m / monetary-quantity :quant 187 :unit (y / yuan :mod (r / renminbi))))) :arg2 (t2 / thing :arg2-of (v3 / value-01 :arg1 (c2 / contract-02))) :time (a / already))
(p / produce-01 :arg0 (m / model) :arg1 (s / story :topic (r / resemble-01 :arg2 (e / evolution :arg0 (s2 / scientist :mod (p2 / planetary)) :time (p3 / previous)))))
(p / phone-number-entity :value (N / N-A))
(g / gesture :arg0-of (e / end-01 :arg1 (c / crisis)))
(b / be-temporally-at-91 :arg1 (i / it) :arg2 (b2 / before :op1 (n / now) :quant (t / temporal-quantity :quant (N / N-A) :unit (y / year)) :degree (v / very)) :condition (s / say-01 :arg0 (w / we) :arg1 (a / and :op1 (s2 / say-01 :arg0 (w2 / we) :arg1 (b3 / bank :mod (g / great) :domain (w3 / we) :beneficiary (c / customer))) :op2 (p / put-01 :arg0 (w4 / we) :arg1 (b4 / brand) :arg2 (o / out) :location (o2 / out)))))
(s / start-01 :arg1 (s2 / start-01 :arg0 (h / he) :arg1 (h2 / have-org-role-91 :arg0 (h3 / he) :arg1 (s3 / school :mod (e / elementary) :arg1-of (l / local-02)) :arg2 (h4 / head-of-state)) :ord (o / ordinal-entity :value 1)))
(l / look-02 :arg0 (t / team :mod (t2 / this)) :arg1 (t3 / team :mod (t4 / this)) :time (f / final))
(e / expand-01 :arg1 (w / we) :arg3 (d / detroit :arg0 (w2 / we) :arg1 (h / hometown :mod (q / quality :arg1-of (h2 / high-02))) :arg2 (y / youth :arg0-of (d2 / deserve-01 :arg1 (a / and :op1 (l / learn-01 :arg0 (y2 / youth) :arg1 (o / opportunity :purpose (l2 / learn-01))) :op2 (b / benefit-01 :arg0 (s / sport :mod (g / great) :mod (t / this))))))) :location (c / country :name (n / name :op1 "N-A")))
(w / want-01 :arg0 (p / person :mod (c / country :name (n / name :op1 "N-A"))) :arg1 (p2 / pay-01 :arg0 (d / doctor :quant 54,000 :mod (j / junior) :arg1-of (s / subject-01 :arg2 (c2 / contract-02))) :time (w2 / weekend)))
(l / let-01 :arg0 (c / culture :mod (p / pc)) :arg1 (v / vote-01 :arg1 (d / defraud-01 :location (a / area :mod (r / religious-group :name (n / name :op1 "N-A"))))))
(c / change-01 :arg0 (l / law) :arg1 (l2 / law) :purpose (m / make-02 :arg0 (l3 / law) :arg1 (e / easy-05 :arg1 (c2 / charge-05 :arg0 (l4 / law) :arg1 (p / person) :arg2 (p2 / person :mod (c3 / country :name (n / name :op1 "N-A"))) :prep-under (b / bias-01 :arg1 (p3 / person))))))
(s / strengthen-01 :arg1 (t / train-01 :arg2 (e / ensure-01 :arg1 (e2 / enforce-01 :arg0 (p / person :arg2-of (s2 / staff-01)) :arg1 (r / rule :arg0-of (g / go-02 :arg4 (a / alone :mod (b / booths))))))))
FAILED_TO_PARSE#Number of opening and closing brackets doesn't match.
(m / multi-sentence :snt1 (h / have-03 :arg0 (c / coach :mod (e / each)) :arg1 (m2 / method :poss (h2 / he)) :purpose (c2 / choose-01 :arg0 (h3 / he) :arg1 (t / thing :arg0-of (p / play-12 :arg2 (p2 / potential))))) :snt2 (d / decide-01 :arg0 (i / i) :arg1 (t2 / take-01 :arg0 (i2 / i) :arg1 (s / she) :time (s2 / see-01 :arg0 (i3 / i) :arg1 (h4 / hand :arg1-of (b / beautiful-02) :poss (s3 / she))))))
(m / multi-sentence :snt1 (s / separate-02 :arg1 (a / and :op1 (p / person :arg0-of (h / have-org-role-91 :arg1 (f / family :arg1-of (h2 / have-org-role-91 :arg0 (p2 / person) :arg2 (m2 / member))))) :op2 (p3 / person :arg0-of (h3 / have-org-role-91 :arg1 (f2 / family :arg1-of (h4 / have-org-role-91 :arg0 (p4 / person) :arg2 (m3 / member))))) :op3 (f3 / family :arg1-of (h5 / have-org-role-91 :arg0 (p5 / person) :arg2 (m4 / member))) :op4 (f4 / family :arg1-of (h6 / have-org-role-91 :arg0 (p6 / person) :arg2 (m5 / member))) :op5 (f5 / family :arg1-of (h7 / have-org-role-91 :arg0 (p7 / person) :arg2 (m6 / member)))) :arg2 (t / together :domain (a2 / and))) :snt2 (a3 / and :op1 (p8 / possible-01 :arg1 (r / return-01 :arg1 (p9 / person :arg0-of (h8 / have-org-role-91 :arg1 (f6 / family) :arg2 (m7 / member))) :arg4 (h9 / home) :time (d / date-entity :dayperiod (N / N-A)) :mod (o / only))) :op2 (c / contact-01 :arg0 (s2 / she) :arg1 (p10 / person :arg0-of (h10 / have-org-role-91 :arg1 (f7 / family) :arg2 (m8 / member))) :manner (p11 / phone) :time (t2 / time :mod (o2 / other)))))
(m / multi-sentence :snt1 (t / talk-01 :arg0 (i / i) :arg1 (w / win-01 :arg0 (h / he) :arg2 (g / gold :mod (g2 / gold) :poss (h2 / he))) :time (a / after :op1 (c / ceremony :mod (a2 / awards :mod (a3 / awards :mod (i2 / individual)) :poss (w2 / woman))))) :snt2 (p / possible-01 :arg1 (a4 / and :op1 (c2 / cause-01 :arg0 (t2 / this) :arg1 (t3 / thing :arg2-of (r / result-01) :mod (g3 / good))) :op2 (m2 / make-02 :arg0 (t4 / this) :arg1 (c3 / contented :arg1 (i3 / i))))))
(r / report)
(m / multi-sentence :snt1 (a / adopt-01 :arg0 (c / company :quant (m2 / many)) :arg1 (d / drink :arg1-of (c2 / cool-04)) :time (p / past)) :snt2 (a2 / and :op1 (a3 / adopt-01 :arg0 (c3 / company :quant (m3 / many)) :arg1 (d2 / drink :arg1-of (c4 / cool-04))) :op2 (m4 / meet-01 :polarity - :arg0 (r / rocket :name (n / name :op1 "N-A") :arg0-of (s / supervise-01 :arg1 (s2 / safe-01))) :arg1 (r2 / regulate-01 :time (c5 / current)) :arg1-of (d3 / deem-01))))
(d / demand-01 :arg0 (p / person) :arg1 (e / establish-01 :arg0 (p2 / person) :arg1 (l / law :arg0-of (p3 / protect-01 :arg1 (a / animal)) :mod (b / bone :degree (m / more))) :purpose (e2 / enhance-01 :arg0 (p4 / person) :arg1 (p5 / punish-01 :arg1 (a2 / abuser)))))
(o / overturn-01 :arg0 (p / person :arg2-of (s / staff-01)) :arg1 (b / break-01 :arg1 (b2 / beak :mod (g / gracia)) :frequency (r / rate-entity-91 :arg3 (t / temporal-quantity :quant (N / N-A) :unit (d / day))) :purpose (p2 / prevent-01 :arg1 (i / infect-01))) :time (b3 / before :op1 (o2 / overthrow-01 :arg0 (s2 / staff) :arg1 (p3 / person :arg0-of (h / have-org-role-91 :arg2 (h2 / head-of-state))))))
(a / and :op1 (b / be-located-at-91 :arg1 (p / platform :mod (s / social) :mod (o / online) :poss (w / we)) :arg2 (c / circle :mod (s2 / social) :poss (w2 / we))) :op2 (e / establish-01 :arg0 (p2 / platform) :arg1 (p3 / person :poss (p4 / person))) :location (s3 / surface))
(m / multi-sentence :snt1 (p / possible-01 :arg1 (a / avoid-01 :arg0 (c / communicate-01 :arg1-of (h / hide-01 :arg2 (b / below :op1 1))) :arg1 (c2 / clash :mod (i / interpersonal)))) :snt2 (a2 / and :op1 (h2 / have-03 :arg0 (t / this) :arg1 (r / room :mod (o / only :polarity -))) :op2 (a3 / and :op1 (t2 / time :quant (m2 / more) :mod (o2 / other)) :op2 (a4 / and :op1 (t3 / time) :op2 (s / space)) :purpose (t4 / think-01 :arg0 (i2 / i) :arg1 (a5 / and :op1 (t5 / time) :op2 (s2 / space))))))
(m / multi-sentence :snt1 (l / learn-01 :arg0 (j / journalist :source (w / website :mod (n / nanhai))) :arg1 (a / accept-01 :arg0 (p / police) :arg1 (c / case :quant 2 :mod (t / this)) :time (n2 / now))) :snt2 (a2 / and :op1 (a3 / accept-01 :arg0 (p2 / police) :arg1 (c2 / case :quant 2 :mod (t2 / this)) :time (n3 / now)) :op2 (a4 / accept-01 :arg0 (p3 / police) :arg1 (c3 / case :quant 2)) :op3 (n4 / need-01 :arg0 (p4 / police) :arg1 (i / investigate-01 :arg0 (j2 / journalist) :degree (f / further)) :mod (s / still))))
(e / exchange-01 :arg0 (i / it) :arg1 (t / thing :arg2-of (v / view-02 :arg1 (o / organization :mod (e2 / extreme) :location (a / and :op1 (t2 / talk-02 :arg2 (s / state :mod (e3 / extreme))) :op2 (a2 / activity-06 :arg1 (t3 / terrorism)))))) :mod (a3 / also))
(m / multi-sentence :snt1 (c / contrast-01 :arg2 (a / and :op1 (p / person :name (n / name :op1 "Junichiro" :op2 "Koizumi") :arg0-of (h / have-org-role-91 :arg1 (c2 / country :name (n2 / name :op1 "N-A")) :arg2 (m2 / minister :mod (p2 / prime)))) :op2 (p3 / person :arg0-of (h2 / have-org-role-91 :arg1 (c3 / country) :arg2 (m3 / minister :mod (p4 / prime)))) :time (b / before :op1 (n3 / now) :quant (t / temporal-quantity :quant (N / N-A) :unit (y / year))))) :snt2 (c4 / contrast-01 :arg2 (a2 / abandon-01 :arg1 (c5 / category :quant (a3 / all)) :time (e / eventual))))
(a / and :op1 (l / lingered :arg0 (c / couple :mod (c2 / country :name (n / name :op1 "N-A"))) :arg1 (s / scene) :duration (a2 / almost :op1 (t / temporal-quantity :quant (N / N-A) :unit (h / hour) :mod (a3 / almost)))) :op2 (e / experience-01 :arg0 (c3 / couple) :arg1 (l2 / lot :topic (f / flow-01 :arg1 (c4 / card :name (n2 / name :op1 (f2 / flowers) :op2 (c5 / card)))))))
(a / and :op1 (s / serve-01 :arg0 (s2 / she) :arg2 (p / person :arg0-of (h / have-org-role-91 :arg2 (s3 / secretary-general :mod (d / deputy)))) :arg3 (p2 / person :arg0-of (h2 / have-org-role-91 :arg2 (s4 / secretary-general :mod (d2 / deputy)))) :arg3 (p3 / person :arg0-of (h3 / have-org-role-91 :arg2 (s5 / secretary-general :mod (d3 / deputy)))) :arg3 (p4 / person :arg0-of (h4 / have-org-role-91 :arg2 (s6 / secretary-general :mod (d4 / deputy)))) :arg3 (p5 / person :arg0-of (h5 / have-org-role-91 :arg2 (s7 / secretary-general :mod (d5 / deputy)))) :arg3 (p6 / person :arg0-of (h6 / have-org-role-91 :arg2 (s8 / secretary-general :mod (d6 / deputy)))) :arg3 (p7 / person :arg0-of (h7 / have-org-role-91 :arg2 (s9 / secretary-general :mod (d7 / deputy)))) :arg3 (p8 / person :arg0-of (h8 / have-org-role-91 :arg2 (s10 / secretary-general :mod (g / general))))) :li 2010)
(o / obligate-01 :arg1 (i / i) :arg2 (c / carry-01 :arg0 (i2 / i) :arg1 (t / thing :arg1-of (l / learn-01 :arg0 (i3 / i) :location (c2 / country :name (n / name :op1 "N-A")) :arg1-of (a / apply-01 :arg0 (i4 / i) :arg2 (' / '' :arg0 (i5 / i) :arg1 (c3 / country :name (n2 / name :op1 "N-A"))))))))
(m / multi-sentence :snt1 (t / time :domain (t2 / this) :beneficiary (p / person :mod (a / atheist) :arg0-of (t3 / trouble-01 :arg1 (l / league :mod (a2 / association :mod (a3 / association :mod (f / football)) :mod (c / country :name (n / name :op1 "N-A")) :mod (c2 / country :name (n2 / name :op1 "N-A"))) :time (i / initial)))) :mod (a4 / also)) :snt2 (l2 / lead-01 :arg0 (r / rate-entity-91 :arg1 2 :arg2 0)))
(s / say-01 :arg0 (p / person :arg0-of (s2 / study-01 :arg1 (p2 / photo)) :mod (c / country :name (n / name :op1 "N-A")) :mod (c2 / country :name (n2 / name :op1 "N-A"))) :arg1 (a / and :op1 (h / hurtful :arg1 (l / lenses)) :op2 (c3 / comfortable-02 :polarity - :arg1 (p3 / person)) :op3 (c4 / comfortable-02 :polarity - :arg1 (p4 / person)) :op4 (c5 / comfortable-02 :polarity - :arg1 (p5 / person)) :op5 (c6 / comfortable-02 :polarity - :arg1 (p6 / person))))
(s / say-01 :arg0 (s2 / she) :arg1 (c / clue))
(p / provide-01 :arg0 (s / service :arg1-of (f / follow-01) :arg2-of (i / include-01 :arg1 (a / and :op1 (d / discuss-01 :medium (o / online)) :op2 (d2 / discuss-01 :mod (o2 / online)) :op3 (e / exchange-01 :mod (a2 / academia)) :op4 (p2 / platform :mod (s2 / social))))) :arg1 (p3 / platform :mod (s3 / social) :beneficiary (e2 / exchange-01 :arg1 (a3 / and :op1 (h / hospital :mod (s4 / same)) :op2 (d3 / department) :op3 (s5 / support-01 :arg1 (b / business) :arg1-of (l / legal-02)) :op4 (a4 / and :op1 (s6 / support-01 :arg1 (b2 / business)) :op2 (s7 / support-01 :arg1 (b3 / business) :arg1-of (p4 / personal-02)))))))
(m / multi-sentence :snt2 (d / depend-01 :arg0 (s / sports :mod (n / nation)) :arg1 (c / condition :poss (s2 / site))) :snt2 (d2 / depend-01 :arg0 (s3 / sports :mod (n2 / nation)) :arg1 (c2 / condition :poss (s4 / site))) :snt3 (d3 / depend-01 :arg0 (s5 / sports :mod (n3 / nation)) :arg1 (c3 / condition :poss (s6 / site))))
(a / and :op1 (c / contribute-01 :arg0 (r / rate-entity-91 :arg1 (m / monetary-quantity :quant 5.3 :unit (d / dollar)) :arg2 (v / volume-quantity :quant (N / N-A) :unit (g / gallon))) :arg2 (r2 / rate-entity-91 :arg1 (m2 / monetary-quantity :quant 1 :unit (d2 / dollar)) :arg2 (v2 / volume-quantity :quant (N2 / N-A) :unit (g2 / gallon))) :arg4 (r3 / rate-entity-91 :arg1 (m3 / monetary-quantity :quant 5.3 :unit (d3 / dollar)) :arg2 (v3 / volume-quantity :quant (N3 / N-A) :unit (g3 / gallon)))) :op2 (b / bring-up-02 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (c2 / company :name (n / name :op1 "N-A") :arg0-of (h2 / have-org-role-91 :arg2 (p2 / president) :time (f / former))) :arg2 (s / secretary :mod (s2 / state)) :time (f2 / former))) :arg1 (r4 / rate-entity-91 :arg1 (m4 / monetary-quantity :quant 5.3 :unit (d4 / dollar) :arg1-of (c3 / cost-01 :arg2 (m5 / monetary-quantity :quant 5.3 :unit (d5 / dollar)))) :arg2 (v4 / volume-quantity :quant (N4 / N-A) :unit (g4 / gallon)))) :op3 (r5 / report-01 :arg0 (p3 / person :arg0-of (h3 / have-org-role-91 :arg1 (s3 / state) :arg2 (s4 / secretary) :time (f3 / former))) :location (t / tenure :poss (p4 / person) :location (t2 / tenure :poss (s5 / state)))))
(s / say-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg2 (o / official))) :arg1 (d / draws :arg0 (h2 / hotel) :arg1 (t / thing :arg1-of (c / conclude-01 :mod (r / right)))))
(m / multi-sentence :snt1 (c / cause-01 :arg0 (a / and :op1 (i / imitating :arg0 (p / person :arg0-of (h / have-rel-role-91 :arg1 (p2 / person) :arg2 (p3 / parent))) :arg1 (p4 / person :arg0-of (h2 / have-rel-role-91 :arg1 (p5 / person) :arg2 (p6 / parent)))) :op2 (a2 / affect-01 :arg0 (p7 / person) :arg1 (p8 / person :arg0-of (h3 / have-rel-role-91 :arg1 (p9 / person) :arg2 (p10 / parent))))) :arg1 (a3 / affect-01 :arg0 (a4 / and :op1 (p11 / person :arg0-of (h4 / have-rel-role-91 :arg1 (p12 / person) :arg2 (p13 / parent))) :op2 (p14 / person :arg0-of (h5 / have-rel-role-91 :arg1 (p15 / person) :arg2 (p16 / parent)))) :arg1 (g / grow-01 :arg1 (p17 / person :arg0-of (h6 / have-rel-role-91 :arg1 (p18 / person) :arg2 (c2 / child)))) :arg1-of (c3 / cause-01 :arg0 (i2 / imitating :arg0 (p19 / person) :arg1 (p20 / person :arg0-of (h7 / have-rel-role-91 :arg1 (p21 / person) :arg2 (s / son))))))) :snt2 (s2 / same-01 :arg1 (p22 / person :arg0-of (h8 / have-rel-role-91 :arg1 (y / you) :arg2 (s3 / son))) :arg2 (s4 / same-01 :arg1 (p23 / person))))
(a / and :op2 (f / feel-01 :arg0 (s / she) :arg1 (a2 / and :op1 (r / relaxed) :op2 (f2 / free-04 :arg1 (r2 / regain))) :time (o / once :op1 (l / leave-15 :arg0 (h / he) :arg1 (s2 / situation :arg1-of (t / trap-01 :arg2 (h2 / he)))))))
(a / and :op1 (l / land :mod (o / official) :mod (o2 / official) :time (s / season :mod (n / next))) :op2 (a2 / and :op1 (l2 / land :mod (o3 / officially)) :op2 (j / join-01 :arg1 (7 / 76ers :mod (p / philadelphia))) :time (s2 / season :mod (n2 / next))))
(t / tell-01 :arg0 (h / he) :arg1 (d / deal :mod (g / good) :arg1-of (a / accept-01 :arg1-of (r / recommend-01))) :arg2 (p / person :arg0-of (h2 / have-org-role-91 :arg1 (p2 / person :arg0-of (h3 / have-org-role-91 :arg2 (m / member))) :arg2 (m2 / member))) :time (m3 / meet-03 :arg0 (p3 / person) :arg1 (p4 / poll-01 :arg0 (a2 / and :op1 (d2 / doctor :quant 54,000 :mod (j / junior)) :op2 (p5 / person :arg0-of (s / study-01) :mod (m4 / medicine))))))
(t / turn-02 :arg0 (t2 / thing :arg1-of (o / opine-01 :arg0 (p / public))) :arg1 (t3 / thing :arg1-of (o2 / opine-01 :arg0 (p2 / public))) :mod (a / also) :time (s / since))
(h / have-03 :arg0 (i / it) :arg1 (a / and :op1 (s / steel :quant (m / mass-quantity :quant (N / N-A) :unit (k / kilogram))) :op2 (c / concrete :quant (m2 / mass-quantity :quant (N2 / N-A) :unit (k2 / kilogram)))))
(a / and :op1 (v / visit-01 :arg0 (p / person :name (n / name :op1 "keith" :op2 "brown") :arg0-of (h / have-org-role-91 :arg2 (s / secretary :mod (e / economy)))) :arg1 (s2 / site) :time (t / today)) :op2 (i / include-91 :arg1 (p2 / person :ord (o / ordinal-entity :value 1) :arg0-of (w / walk-01 :ord (o2 / ordinal-entity :value 1))) :arg2 (w2 / walk-01 :arg0 (p3 / person) :destination (b / bridge))))
(r / represent-01 :arg0 (c / closure :mod (t / this)) :arg1 (e / engineer-01 :mod (c2 / civil) :arg0-of (l / lead-01) :arg0-of (l2 / lead-01)) :location (p / project :mod (t2 / this)))
(i / include-91 :arg1 (p / person :arg0-of (s / shoot-02 :location (s2 / section :mod (g / germantown)))) :arg2 (p2 / person :quant 4))
(a / and :op1 (l / lambasts :arg0 (p / person :arg0-of (h / have-org-role-91 :arg2 (m / minister :mod (e / ex-cabinet)))) :arg1 (a2 / and :op1 (p2 / police) :op2 (p3 / person :arg0-of (e2 / elect-01)) :op3 (p4 / person :arg0-of (h2 / have-org-role-91 :arg2 (h3 / head-of-state))) :op4 (p5 / person :arg0-of (h4 / have-org-role-91 :arg2 (h5 / head-of-state))) :op5 (p6 / person :arg0-of (h6 / have-org-role-91 :arg2 (h7 / head-of-state)))) :purpose (i / ignore-01 :arg0 (p7 / person) :arg1 (t / thing :arg0-of (e3 / evidence-01 :arg1 (a3 / abuse-01 :arg1 (e4 / elect-01)))))) :op2 (b / because :arg0 (p8 / person) :arg1 (t2 / thing :arg0-of (e5 / evidence-01 :arg1 (a4 / abuse-01 :arg1 (e6 / elect-01))))))
(c / contrast-01 :arg2 (a / athletes :arg1 (o / olympian :mod (2 / 24-year-old)) :arg2 (f / fight-01 :arg2 (g / gold)) :mod (o2 / only) :time (s / summer :mod (t / this)) :arg1-of (c2 / conform-01 :polarity - :arg2 (m / media :mod (s2 / social)) :mod (a2 / at-least))))
(a / and :op1 (s / swimmer :arg0 (c / country :name (n / name :op1 "China")) :arg1 (c2 / country :name (n2 / name :op1 "China"))) :op2 14 :arg0 (c3 / country) :arg1 (l / leg :ord (o / ordinal-entity :value 2) :part-of (d / date-entity :dayperiod (N / N-A))) :op3 (s2 / slower :arg0 (c4 / country) :arg1 (l2 / leg :part-of (c5 / canada)) :duration (f / forever)) :op4 (a2 / allow-01 :arg1 (c6 / canadians :arg1 (g / gap :location (c7 / country)))))
(s / say-01 :arg0 (p / person :name (n / name :op1 "N-A")) :arg1 (s2 / see-01 :arg1 (a / and :op1 (f / fight-01 :arg0 (t / they) :location (s3 / street)) :op2 (c / call-01 :arg1 (p2 / police) :arg2 (p3 / police) :arg1-of (r / regular-02)))))
(s / say-01 :arg0 (p / person :name (n / name :op1 "mitch" :op2 "mcconnell") :arg0-of (l / lead-02 :arg1 (p2 / person :arg0-of (l2 / lead-02))) :quant (m / majority)) :arg1 (c / choose-01 :arg0 (p3 / person :arg0-of (h / have-org-role-91 :arg2 (p4 / president))) :arg1 (r / replace-01 :arg0 (p5 / person) :arg1 (p6 / person :arg0-of (h2 / have-org-role-91 :arg2 (p7 / president :mod (v / vice)) :time (l3 / late))) :arg2 (p8 / person :arg0-of (h3 / have-org-role-91 :arg2 (p9 / president :mod (v2 / vice)))))))
(a / and :op1 (c / come-01 :arg1 (p / plant :poss (i / it) :location (a2 / area :mod (u / urban) :mod (o / old) :mod (o2 / old))) :arg4 (h / halt-01 :arg1 (h2 / halt-01 :mod (f / full)))) :op2 (m / move-01 :arg1 (p2 / plant) :arg2 (p3 / plant :mod (n / new) :location (p4 / pingdu)) :arg1-of (c2 / cause-01 :arg0 (e / environment))))
(a / apply-02 :arg1 (i / it) :arg2 (a2 / and :op1 (r / region :quant 14 :mod (a3 / autonomous)) :op2 (r2 / region :mod (a4 / autonomous)) :arg2-of (i2 / include-01 :arg1 (a5 / and :op1 (z / zhejiang) :op2 (j / jiangsu)))) :time (s / since :op1 (p / pilot-01 :arg0 (p2 / pilot-01 :arg0 (i3 / it) :location (c / country :name (n / name :op1 "N-A"))) :arg1 (i4 / it))))
(s / say-01 :arg0 (h / he) :arg1 (e / extend-01 :arg1 (f / force :mod (t / this)) :arg4 (c / country :name (n / name :op1 "N-A")) :condition (h2 / hit-01 :polarity - :arg1 (f2 / force :mod (e2 / extremism)))) :mod (a / also))
(a / and :op1 (l / locate-01 :arg1 (b / binbin :mod (z / zhang)) :location (a2 / and :op1 (m / middle) :op2 (r / reach-01 :arg1-of (l2 / low-04 :degree (m2 / more))))) :op2 (s / seem-01 :arg1 (b2 / be-located-at-91 :arg1 (b3 / binbin) :arg2 (f / far :degree (q / quite)) :mod (s2 / still))) :time (g / game))
(t / tell-01 :arg0 (p / person :name (n / name :op1 "zhang" :op2 "xiaolong")) :arg1 (a / and :op1 (p2 / person :arg0-of (r / report-01)) :op2 (p3 / person :arg0-of (h / have-rel-role-91 :arg1 (p4 / person) :arg2 (c / child))) :op3 (p5 / person :arg0-of (h2 / have-rel-role-91 :arg1 (p6 / person) :arg2 (d / daughter))) :op4 (p7 / person :arg0-of (h3 / have-rel-role-91 :arg1 (p8 / person) :arg2 (d2 / daughter))) :op5 (p9 / person :arg0-of (h4 / have-rel-role-91 :arg1 (p10 / person) :arg2 (d3 / daughter)))) :arg2 (p11 / person :arg0-of (r2 / report-01)) :time (a2 / always) :prep-with (a3 / and :op1 (t2 / thing :arg1-of (p12 / paint-02)) :op2 (p13 / produce-01 :arg1 (t3 / toys))))
(m / multi-sentence :snt1 (s / say-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg2 (g / general))) :arg1 (r / resemble-01 :arg1 (w / way :manner-of (d / detect-01 :arg1 (m2 / mars))) :arg2 (w2 / way) :purpose (d2 / detect-01 :arg1 (w3 / world-region)))) :snt2 (a / and :op1 (s2 / surround-01 :arg1 (p2 / process-02 :mod (e / entire)) :mod (a2 / also)) :op2 (l / land-01 :arg1 (p3 / process-02)) :op3 (r2 / return-01 :arg1 (p4 / process-02)) :op4 (r3 / return-01 :arg1 (p5 / process-02)) :op5 (r4 / return-01 :arg1 (p6 / process-02))))
(a / and :op1 (s / stress-01 :arg0 (i / i) :arg1 (a2 / and :op1 (i2 / investigate-01 :arg0 (c / commission)) :op2 (i3 / investigate-01 :arg0 (c2 / commission))) :condition (v / violate-01 :arg0 (o / or :op1 (p / party :mod (p2 / politics)) :op2 (o2 / organization :mod (p3 / politics))) :arg1 (r / regulate-01 :arg0-of (v2 / violate-01 :arg1 (b / ban-01 :arg1 (t / thing :arg1-of (p4 / provide-01))))))) :op2 (s2 / say-01 :arg0 (c3 / commission) :arg1 (a3 / and :op1 (i4 / investigate-01 :arg0 (c4 / commission)) :op2 (p5 / punish-01 :arg0 (c5 / commission)))))
(c / contrast-01 :arg1 (a / announce-01 :polarity - :arg0 (j / jail) :arg1 (t / thing :arg2-of (n / name-01 :arg1 (p / person :arg1-of (i / imprison-01 :arg1-of (d / die-01))))) :time (y / yet)) :arg2 (s / say-01 :arg0 (p2 / person :quant 2 :mod (c2 / country :name (n2 / name :op1 "N-A"))) :arg1 (t2 / thing :arg2-of (n3 / name-01 :arg1 (p3 / person :arg1-of (i2 / imprison-01 :arg1-of (d2 / die-01)))))))
(s / shift-01 :arg1 (s2 / station :mod (p / passenger) :mod (o / old) :poss (s3 / station :mod (s4 / south :part-of (s5 / strait)))) :arg2 (s6 / station :mod (u / urumqi)))
(r / reveal-01 :arg0 (m / media :name (n / name :op1 (k / kung) :op2 (p / pao) :op3 (p2 / pao) :op4 (m2 / media) :op5 (m3 / media) :op6 (m4 / media) :op7 (m5 / media) :op6 (m6 / media) :op7 (m7 / media))) :arg1 (l / lose-02 :arg0 (h / he) :arg1 (r2 / reason :mod (b / big :degree (m8 / most)) :arg1-of (l2 / lose-02 :arg0 (h2 / he) :arg1-of (c / cause-01 :arg0 (l3 / lose-02 :arg0 (h3 / he) :arg1 (i / interest-01) :arg2 (s / swim-01 :arg0 (h4 / he))))))) :arg1-of (s2 / sure-02))
(m / multi-sentence :snt1 (l / love-01 :arg0 (p / person :arg0-of (l2 / love-01 :arg1 (m2 / make-01 :arg0 (p2 / person) :arg1 (p3 / person :arg0-of (h / have-rel-role-91 :arg1 (p4 / person) :arg2 (f / friend)))) :arg0-of (h2 / have-rel-role-91 :arg1 (p5 / person) :arg2 (f2 / friend)))) :arg1 (c / communicate-01 :medium (o / online)) :mod (a / also)) :snt2 (l3 / lost :arg0 (i / i) :arg1 (p6 / person :arg0-of (h3 / have-rel-role-91 :arg1 (i2 / i) :arg2 (f3 / friend)))) :snt3 (b / become-01 :arg1 (w / we) :arg2 (p7 / person :arg0-of (h4 / have-rel-role-91 :arg1 (i3 / i) :arg2 (f4 / friend)))))
(l / learn-01 :arg0 (v / villager :quant (m / many)) :arg1 (c / come-01 :arg1 (p / person :arg1-of (e / expert-01) :mod (c2 / clinic))) :arg0-of (c3 / cause-01 :arg1 (w / wait-01 :arg1 (p2 / person :arg1-of (e2 / expert-01)) :arg2 (s / square :mod (s2 / small) :part-of (v2 / village)))))
(c / continue-01 :arg0 (b / bank :consist-of (p / person :arg0-of (h / have-org-role-91 :arg1 (c2 / country :name (n / name :op1 "China")) :arg2 (b2 / bank :mod (b3 / bank :mod (c3 / country)))))) :arg1 (c4 / carrying :arg0 (b4 / bank) :arg1 (r / renewal :arg1 (l / license-01 :arg1 (p2 / pay-01 :arg3 (p3 / pay-01 :arg3 (m / monetary-quantity :arg1-of (p4 / pay-01 :arg3 (m2 / monetary-quantity :arg1-of (p5 / pay-01 :arg3 (m3 / monetary-quantity :arg1-of (p6 / pay-01 :arg3 (m4 / monetary-quantity :arg1-of (p7 / pay-01 :arg3 (m5 / monetary-quantity :arg1-of (p8 / pay-01 :arg3 (m6 / monetary-quantity :arg1-of (p9 / pay-01 :arg3 (l2 / law)))))))))))))))))))
(s / say-01 :arg0 (a / and :op1 (s2 / sun) :op2 (p / person :arg0-of (h / have-org-role-91 :arg1 (c / center :name (n / name :op1 (y / yuanshan)) :arg1-of (m / moral-02) :mod (n2 / nation)) :arg2 (s3 / secretary))) :op3 (p2 / person :arg0-of (h2 / have-org-role-91 :arg1 (c2 / center :name (n3 / name :op1 (y2 / yuanshan)) :arg1-of (m2 / moral-02) :mod (n4 / nation)) :arg2 (s4 / secretary))) :op4 (p3 / person :arg0-of (h3 / have-org-role-91 :arg1 (p4 / party) :arg2 (s5 / secretary) :time (f / former))) :op5 (p5 / person :arg0-of (h4 / have-org-role-91 :arg1 (p6 / party) :arg2 (s6 / secretary) :time (f2 / former)) :arg0-of (h5 / have-org-role-91 :arg1 (p7 / party) :arg2 (s7 / secretary) :time (f3 / former)) :arg0-of (h6 / have-org-role-91 :arg1 (p8 / party) :arg2 (s8 / secretary) :time (f4 / former)) :arg0-of (h7 / have-org-role-91 :arg1 (p9 / party) :arg2 (s9 / secretary) :time (f5 / former)) :arg0-of (h8 / have-org-role-91 :arg1 (p10 / party) :arg2 (s10 / secretary) :time (f6 / former)) :arg0-of (h9 / have-org-role-91 :arg1 (p11 / party) :arg2 (s11 / secretary) :time (f7 / former)) :arg0-of (h10 / have-org-role-91 :arg1 (p12 / party) :arg2 (s12 / secretary) :time (f8 / former)) :arg0-of (h11 / have-org-role-91 :arg1 (p13 / party) :arg2 (s13 / secretary) :time (f9 / former)) :arg0-of (h12 / have-org-role-91 :arg1 (p14 / party) :arg2 (s14 / secretary) :time (f10 / former)) :arg0-of (h13 / have-org-role-91 :arg1 (p15 / party) :arg2 (s15 / secretary) :time (f11 / former)) :arg0-of (h14 / have-org-role-91 :arg1 (p16 / party) :arg2 (s16 / secretary) :time (f12 / former)) :arg0-of (h15 / have-org-role-91 :arg1 (p17 / party) :arg2 (s17 / secretary) :time (f13 / former)) :arg0-of (h16 / have-org-role-91 :arg1 (p18 / party) :arg2 (s18 / secretary) :time (f14 / former)) :arg0-of (h17 / have-org-role-91 :arg1 (p19 / party) :arg2 (s19 / secretary) :time (f15 / former)) :arg0-of (h18 / have-org-role-91 :arg1 (p20 / party) :arg2 (s20 / secretary) :time (f16 / former)) :arg0-of (h19 / have-org-role-91 :arg1 (p21 / party) :arg2 (s21 / secretary) :time (f17 / former)) :arg0-of (h20 / have-org-role-91 :arg1 (p22 / party) :arg2 (s22 / secretary) :time (f18 / former)))))
(m / multi-sentence :snt1 (a / anniversary :ord (o / ordinal-entity :value 45 :range (y / year :mod (n / next))) :domain (e / establish-01 :arg1 (r / relation-03 :arg0 (c / country :name (n2 / name :op1 "China")) :arg2 (c2 / country :name (n3 / name :op1 "China")) :mod (d / diplomacy))) :time (y2 / year :ord (o2 / ordinal-entity :value 45))) :snt2 (a2 / activity-06 :mod (e2 / exchange-01 :mod (c3 / culture)) :arg1-of (h / hold-01 :location (a3 / and :op1 (c4 / country) :op2 (m2 / mexico)))))
(m / multi-sentence :snt2 (g / get-02 :arg0 (a / and :op1 (h / he) :op2 (b / broadcast-program :name (n / name :op1 "N-A") :mod (e / exciting))) :arg1 (c / card :mod (y / yellow))) :snt2 (g2 / get-02 :arg0 (a2 / and :op1 (h2 / he) :op2 (b2 / broadcast-program :name (n2 / name :op1 "N-A") :mod (e2 / exciting))) :arg1 (c2 / card :mod (y2 / yellow))))
(f / fitting :arg0 (c / couple) :arg1 (d / discuss-01 :arg1 (e / eat-01 :arg1 (d2 / depression-era))) :arg1-of (d3 / deem-01) :time (o / order-01 :arg0 (p / person :arg0-of (r / report-01))))
(m / multi-sentence :snt1 (' / '' :arg0 (c / company) :arg1 (w / we) :arg2 (a / and :op1 (r / relaxed :arg1 (w2 / we)) :op2 (h / happy) :op3 (p / platform :mod (h2 / harmonious)))) :snt2 (a2 / and :op1 (l / like-01 :arg0 (i / i) :arg1 (i2 / it) :mod (r2 / really)) :op2 (a3 / and :op1 (h3 / happy) :op2 (h4 / happy) :op3 (i3 / interest-01)) :mod (r3 / real)))
(i / improve-01 :arg1 (f / facility :mod (s / sports :arg1-of (p / public-02))))
(c / contrast-01 :arg1 (e / event :time (d / day) :mod (o / only) :domain (i / it)) :arg2 (n / news :mod (g / good :degree (f / further)) :beneficiary (c2 / country :name (n2 / name :op1 "N-A")) :domain (i2 / it)))
(e / explain-01 :arg0 (p / police :mod (t / travel-01)) :arg1 (e2 / explain-01 :arg0 (p2 / police) :arg2 (h / he) :accompanier (p3 / person :arg0-of (h2 / have-rel-role-91 :arg1 (h3 / he) :arg2 (s / sister)))) :arg2 (h4 / he) :arg1-of (c / cause-01 :arg0 (s2 / saw :arg0 (p4 / person :arg0-of (t2 / tour-01)) :arg1 (p5 / person :arg0-of (t3 / tour-01)))) :time (s3 / see-01 :arg0 (p6 / person) :arg1 (c2 / come-01 :arg1 (p7 / person))))
(f / find-02 :arg0 (j / journalist :mod (c / chinanews)) :arg1 (i / issue-01 :arg0 (j2 / journalist) :arg1 (r / rule :purpose (i2 / implement-01 :arg1 (p / permit-01 :arg1 (p2 / permit-01 :arg1 (p3 / permit-01 :arg1 (p4 / permit-01 :arg1 (p5 / permit-01 :arg1 (p6 / permit-01 :arg1 (p7 / permit-01 :arg1 (p8 / permit-01 :arg1 (p9 / permit-01 :arg1 (p10 / permit-01 :arg1 (p11 / permit-01 :arg1 (p12 / permit-01 :arg1 (p13 / permit-01 :arg1 (p14 / permit-01 :arg1 (p15 / permit-01 :arg1 (p16 / permit-01 :arg1 (p17 / permit-01 :arg1 (p18 / permit-01 :arg1 (p19 / permit-01 :arg1 (p20 / permit-01 :arg1 (p21 / permit-01 :arg1 (p22 / permit-01 :arg1 (p23 / permit-01 :arg1 (p24 / permit-01 :arg1 (p25 / permit-01 :arg1 (p26 / permit-01 :arg1 (p27 / permit-01 :arg1 (p28 / permit-01 :arg1 (p29 / permit-01 :arg1 (p30 / permit-01 :arg1 (p31 / permit-01 :arg1 (p32 / permit-01 :arg1 (p33 / permit-01 :arg1 (p34 / permit-01 :arg1 (p35 / permit-01 :arg1 (p36 / permit-01 :arg1 (p37 / permit-01 :arg1 (p38 / permit-01 :arg1 (p39 / permit-01 :arg1 (p40 / permit-01 :arg1 (p41 / permit-01 :arg1 (p42 / permit-01 :arg1 (r2 / residential)))))))))))))))))))))))))))))))))))))))))))))))
(e / expires :arg1 (t / thing :arg2-of (t2 / tattoo-01 :arg1 (p / person :arg0-of (s / strike-02 :arg1-of (f / fix-03)) :arg1-of (f2 / fix-03)))))
(t / turn-02 :arg0 (c / community) :arg1 (p / person :quant (a / away :op1 160,000)) :arg2 (t2 / temporal-quantity :quant (N / N-A) :unit (y / year)))
(s / say-01 :arg0 (p / police :mod (p2 / political-party :name (n / name :op1 "N-A"))) :arg1 (a / and :op1 (l / lay :arg0 (w / woman) :arg1 (d / dark :location (' / '' :name (n2 / name :op1 (r / road)) :mod (d2 / desperate)))) :op2 (h / hit-01 :arg0 (v / vehicle :quant (s2 / several)) :arg1 (v2 / vehicle :quant (s3 / several)))) :medium (s4 / statement))
(m / multi-sentence :snt1 (f / fear-01 :arg0 (i / i) :arg1 (f2 / fear-01 :arg0 (p / person :arg0-of (o / own-01) :quant (s / several) :arg0-of (b / buy-01 :arg1 (s2 / spaces :mod (p2 / parking)) :location (c / community))) :arg1 (a / and :op1 (a2 / affect-01 :arg0 (t / this) :arg1 (t2 / thing :arg2-of (p3 / price-01 :arg1 (s3 / spaces :mod (p4 / parking) :poss (p5 / person))))) :op2 (d / doubted :domain (p6 / person))))) :snt2 (s4 / shelved :arg0 (t3 / this) :arg1 (t4 / transformation :mod (s5 / space) :mod (p7 / parking))))
(s / say-01 :arg0 (p / person :name (n / name :op1 "N-A")) :arg1 (f / fail-01 :arg1 (p2 / person :arg0-of (h / have-org-role-91 :arg2 (m / minister))) :arg2 (a / address-02 :arg0 (p3 / person) :arg1 (c / concern-01 :arg0 (c2 / contract-02)))))
(o / obligate-01 :arg1 (w / we) :arg2 (c / close-10 :arg1 (w2 / we) :arg2 (g / gap :arg1-of (r / remain-01) :location (o2 / or :op1 (n / north) :op2 (s / side :mod (l / landward))))) :time (t / then) :time (a / after :op1 (a2 / and :op1 (o3 / overthrow-01 :arg0 (w3 / we) :arg1 (s2 / section :name (n2 / name :op1 (d / decker)) :mod (l2 / last))) :op2 (c2 / connect-01 :arg0 (w4 / we) :arg1 (s3 / section) :arg2 (e / expand-01 :arg1 (r2 / road) :location (n3 / north))))))
(s / say-01 :arg0 (p / person :arg0-of (h / have-rel-role-91 :arg2 (g / grandparents))) :arg1 (c / contrast-01 :arg1 (s2 / suffer-01 :arg0 (p2 / person :arg0-of (h2 / have-rel-role-91 :arg2 (d / dd2))) :arg1 (w / wound-01 :arg1 (p3 / person) :quant (m / multiple)) :arg2-of (i / include-01 :arg1 (a / and :op1 (p4 / person :arg0-of (h3 / have-rel-role-91 :arg1 (h4 / he) :arg2 (g2 / groin))) :op2 (l / leg :part-of (p5 / person)) :op3 (a2 / arm) :op4 (a3 / abdomen)))) :arg2 (a4 / awake :arg1 (p6 / person) :time (t / transport-01 :arg1 (p7 / person) :arg3 (h5 / hospital)))))
(s / suggest-01 :arg0 (t / thing :arg1-of (r / report-01)) :arg1 (p / put-01 :arg0 (p2 / person :arg0-of (h / have-rel-role-91 :arg1 (p3 / person) :arg2 (m / mum))) :arg1 (f / finger :part-of (p4 / person)) :arg2 (f2 / finger :part-of (p5 / person))) :arg1-of (c / cause-01 :arg0 (a / applaud-01 :arg0 (p6 / person) :arg1 (p7 / person :arg0-of (h2 / have-rel-role-91 :arg1 (p8 / person) :arg2 (m2 / mum))) :purpose (p9 / prevent-01 :arg0 (p10 / person) :arg1 (p11 / possible-01 :arg1 (v / vote-01 :arg0 (a2 / anyone)))))))
(p / person :quant 1 :mod (o / only :polarity -) :arg0-of (u / use-01 :arg1 (p2 / person :mod (c / country :name (n / name :op1 "N-A"))) :mod (a / also)))
(s / say-01 :arg1 (d / die-01 :arg1 (p / person :mod (c / country :name (n / name :op1 "N-A")) :mod (c2 / country :name (n2 / name :op1 "N-A"))) :arg1-of (r / resemble-01 :arg2 (s2 / say-01 :arg0 (p2 / person) :arg1 (d2 / die-01 :arg1 (p3 / person :mod (c3 / country)) :arg1-of (r2 / resemble-01 :arg2 (p4 / pig)))))) :arg2 (p5 / person :arg0-of (s3 / say-01 :arg1 (d3 / die-01 :arg1 (p6 / person)))))
(a / and :op1 (a2 / analyze-01 :arg0 (p / person :arg0-of (a3 / analyze-01 :arg1 (p2 / place :name (n / name :op1 (1 / 14-year-old) :op2 (a4 / ai))))) :arg1 (p3 / person :arg0-of (v / view-01 :arg1 (p4 / political-party :name (n2 / name :op1 "N-A")))) :location (f / freestyle :name (n3 / name :op1 (4 / 4x200m) :op2 (o / olympic) :op3 (o2 / olympic) :op4 (o3 / olympic) :op5 (o4 / olympic) :op6 (o5 / olympic) :op7 (o6 / olympic)))))
(q / quick-02 :arg1 (r / react-01 :arg0 (p / person :arg0-of (v / view-01)) :location (a / across :op1 (a2 / and :op1 (t / tone) :op2 (l / language)))) :arg1-of (q2 / quick-02))
(m / multi-sentence :snt1 (p / possible-01 :arg1 (r / receive-01 :arg0 (p2 / person :arg0-of (h / have-03 :arg1 (t / temperature :arg1-of (h2 / high-02)))) :arg1 (m2 / monetary-quantity :quant 330 :unit (y / yuan)) :arg1-of (a / accord-02 :arg2 (s / standard :mod (t2 / this))) :arg1-of (a2 / accord-02 :arg2 (s2 / standard :mod (t3 / this))))) :snt2 (a3 / and :op2 (m3 / meet-01 :polarity - :arg0 (t4 / temperature :mod (m4 / maximum) :part-of (t5 / temperature :arg1-of (h3 / high-02))) :arg1 (s3 / standard :mod (s4 / seed) :arg1-of (h4 / high-02)))) :snt3 (c / cause-01 :arg1 (m5 / meet-01 :polarity - :arg0 (t6 / temperature :mod (m6 / maximum) :part-of (y2 / youyang)) :arg1 (s5 / standard :mod (s6 / seed) :arg1-of (h5 / high-02)))))
(s / show-01 :arg0 (s2 / survey-01 :arg1 (h / habit :mod (s3 / social))) :arg1 (a / and :op1 (s4 / spend-02 :arg0 (p / person :arg1-of (i / include-91 :arg2 (p2 / person :arg0-of (s5 / study-01) :mod (c / college)) :arg3 (p3 / percentage-entity :value (N / N-A)))) :arg1 (t / temporal-quantity :quant (N2 / N-A) :unit (h2 / hour)) :arg3 (p4 / phone :arg1-of (m / mobile-02))) :op2 (p5 / possible-01 :polarity - :arg1 (s6 / separate-01 :arg1 (p6 / phone :arg1-of (m2 / mobile-02) :poss (p7 / person)) :arg2 (p8 / phone :arg1-of (m3 / mobile-02) :poss (p9 / person)) :time (l / live-01 :arg0 (p10 / person) :duration (d / day)) :mod (a2 / almost)))))
(h / hold-04 :arg0 (c / committee :arg0-of (o / organize-01)) :arg1 (c2 / conference :mod (p / press)) :purpose (a / and :op1 (i / introduce-02 :arg0 (c3 / committee) :arg1 (o2 / organization)) :op2 (c4 / ceremony :mod (o3 / open-02 :arg1 (o4 / open-01)))) :li 12)
(s / significant-02 :arg1 (c / cooperate-01 :arg0 (c2 / country :name (n / name :op1 "N-A")) :arg1 (c3 / country :name (n2 / name :op1 "N-A"))) :arg1-of (s2 / significant-02) :arg1-of (c4 / cause-01 :arg0 (a / and :op1 (r / restore-01 :arg1 (c5 / cooperate-01 :arg0 (c6 / country) :arg1 (c7 / country))) :op2 (r2 / reproduction :topic (a2 / and :op1 (t / tigers) :op2 (n3 / northeastern)))) :arg1-of (c8 / cause-01 :arg0 (a3 / and :op1 (r3 / restore-01 :arg1 (p / population)) :op2 (r4 / reproduction :topic (a4 / and :op1 (t2 / tigers) :op2 (n4 / northeastern)))))))
(s / show-01 :arg0 (a / analyze-01 :arg0 (t / they)) :arg1 (e / estimate-01 :arg1 (m / manipulate-01 :arg1 (l / life) :mod (l2 / large :degree (m2 / most))) :time (a2 / age-01 :arg1 (o / old) :arg2 (t2 / temporal-quantity :quant (N / N-A) :unit (y / year)) :mod (o2 / old))))
(m / multi-sentence :snt1 (a / and :op2 (a2 / allege-01 :arg1 (m2 / matured :arg1 (s / shark :mod (f / female) :mod (f2 / female)) :manner (s2 / sexual) :location (a3 / about :op1 (p / product-of :op1 4 :op2 (d / distance-quantity :quant (N / N-A) :unit (m3 / meter))))))) :snt2 (p2 / possible-01 :arg1 (r / reach-01 :arg0 (i / it) :arg1 (a4 / adulthood) :mod (o / only) :time (u / until :op1 (a5 / age-01 :arg1 156 :quant 156)))))
(r / rush-01 :arg1 (p / person :arg0-of (h / have-rel-role-91 :arg1 (p2 / person :quant 3 :mod (t / this) :arg0-of (h2 / have-org-role-91 :arg1 (c / crew :quant 3 :mod (t2 / this)) :arg2 (r2 / relative))) :arg2 (r3 / relative))) :arg2 (c2 / court :mod (s / sea)) :purpose (a / and :op1 (s2 / submit-01 :arg0 (p3 / person) :arg1 (a2 / apply-02 :arg1 (p4 / property :mod (p5 / preserving)))) :op2 (s3 / seize-01 :arg0 (p6 / person) :arg1 (s4 / ship :mod (c3 / cargo) :arg2-of (s5 / suspect-01)) :time (b / before :op1 (p7 / prosecute-01)))))
(m / multi-sentence :snt2 (h / have-org-role-91 :arg0 (h2 / he) :arg1 (u / university :mod (c / cornell)) :arg2 (d / director :mod (v / vice)) :time (f / former)) :snt3 (h3 / have-org-role-91 :arg0 (h4 / he) :arg1 (u2 / university :mod (c2 / cornell)) :arg2 (d2 / director) :time (f2 / former) :location (b / beijing)))
(m / multi-sentence :snt1 (c / change-01 :arg0 (i / i) :arg1 (p / person :mod (p2 / person)) :time (m2 / minute :ord (o / ordinal-entity :value 37))) :snt2 (a / and :op1 (l / leave-14 :arg0 (p3 / person :name (n / name :op1 "zhang" :op2 "xiaobin")) :arg1 (a2 / and :op1 (f / field :mod (p4 / play-01)) :op2 (c2 / chiming :mod (z / zhang))) :time (s / stage)) :op2 (t / turn-02 :arg0 (p5 / person) :arg1 (w / weapon :poss (p6 / person)) :arg2 (d / defend-01))))
(c / contrast-01 :arg1 (i / it :condition (b / bear-02 :arg1 (p / person :mod (c2 / country :name (n / name :op1 "N-A"))))) :arg2 (l / learn-01 :arg0 (c3 / country :name (n2 / name :op1 "N-A")) :arg1 (t / trade-01) :mod (s / still)))
(a / and :op1 (s / set-01 :arg1 (p / publication :name (n / name :op1 "N-A")) :arg2 (p2 / p.m. :quant 2 :arg1-of (i / include-91 :arg2 (p3 / p.m. :quant 4 :location (m / moderne :name (n2 / name :op1 (s2 / salle) :op2 21 :op3 21 :op4 21 :op5 (b / blvd) :op6 (b2 / blvd) :op7 (b3 / blvd))))))) :op2 (b4 / blvd :arg1 (w / wilshire :quant 3050) :time (f / former)))
(a / and :op1 (r / run :arg0 (s / she) :arg1 (s2 / side :mod (l / left) :part-of (f / field)) :arg1-of (l2 / long-03)) :op2 (c / curled :arg0 (s3 / she) :arg1 (b / ball :mod (l3 / left)) :time (m / middle)) :op3 (w / whipped :arg0 (s4 / she) :arg1 (b2 / ball) :purpose (g / give-01 :arg0 (s5 / she) :arg1 (l4 / lead-01 :arg0 (p / person :mod (c2 / country :name (n / name :op1 "N-A"))) :mod (2 / 2-0)))))
FAILED_TO_PARSE#Two concepts in a row.
(a / and :op1 (p / possible-01 :arg1 (c / commit-02 :arg0 (p2 / person :arg0-of (h / have-org-role-91 :arg2 (p3 / president))) :arg1 (e / error :arg1-of (s / same-01)) :condition (p4 / person :arg0-of (h2 / have-rel-role-91 :arg1 (p5 / person) :arg2 (w / wife))))) :op2 (e2 / encourage-01 :polarity - :arg0 (p6 / person) :arg1 (p7 / person) :arg2 (s2 / set-02 :arg0 (p8 / person) :arg1 (e3 / example) :arg2 (m / monkey :poss (p9 / person)))))
(s / set-up-03 :arg1 (p / plate :quant 3) :arg2 (s2 / side :mod (c / client) :poss (d / doctor)) :arg1-of (c2 / cause-01 :arg0 (c3 / continue-01 :arg0 (d2 / doctor) :arg1 (a / and :op1 (e / educate-01) :op2 (e2 / exchange-01 :arg1 (s3 / society)) :op3 (c4 / communicate-01))) :mod (r / respective)) :time (p2 / present))
FAILED_TO_PARSE#Two concepts in a row.
(a / and :op1 (c / continue-01 :arg0 (a2 / and :op1 (p / person :name (n / name :op1 "Clinton")) :op2 (p2 / person :arg0-of (h / have-org-role-91 :arg2 (k / kaine)))) :arg1 (s / set-02 :arg0 (p3 / person) :arg1 (s2 / standard) :arg2 (m / motive :mod (f / finance)))) :op2 (s3 / say-01 :arg0 (p4 / person :arg0-of (l / lead-02 :arg1 (c2 / campaign-01 :arg0 (p5 / person)))) :medium (s4 / statement)))
(m / multi-sentence :snt1 (e / encourage-01 :polarity - :arg0 (c / country :name (n / name :op1 "China")) :arg1 (t / thing :arg1-of (e2 / export-01 :arg0 (c2 / country))) :arg2 (c3 / condition :mod (n2 / nation) :poss (c4 / country))) :snt2 (t2 / take-10 :arg0 (m2 / measure-02 :arg1 (c5 / control-01 :arg1 (e3 / export-01 :arg1 (a / aerospace))) :quant (s / series)) :arg1 (t3 / thing :arg1-of (e4 / export-01 :arg0 (c6 / country))) :mod (a2 / also)))
(a / and :op1 (e / exist-01 :arg1 (e2 / exist-01 :arg1 (c / company :mod (t / this))) :arg0-of (r / reduce-01 :arg1 (e3 / efficient-01 :arg1 (m / market)))) :op2 (i / increase-01 :arg0 (e4 / exist-01) :arg1 (m2 / monetary-quantity :arg2-of (c2 / cost-01 :arg1 (m3 / manage-01 :arg1 (s / society))))) :op3 (f / facilitate-01 :arg0 (e5 / exist-01) :arg1 (e6 / establish-01 :arg1 (e7 / environment :mod (m4 / market) :prep-with (c3 / compete-02 :manner (f2 / fair))))))
(r / receive-01 :arg0 (s / salic) :arg1 (t / total-01 :arg1 17 :arg2 (a / and :op1 (p / point :quant 17) :op2 (r2 / rebounds :quant 17) :op3 (a2 / assists :quant 17))) :prep-in (g / game :mod (o / olympic) :quant (b / between :op1 2 :op2 2)))
(m / multi-sentence :snt1 (s / show-01 :arg0 (i / i) :arg1 (c / capable-01 :arg1 (h / he) :arg2 (g / guide-01 :arg0 (h2 / he) :arg1 (s2 / space) :location (s3 / scene))) :ord (o / ordinal-entity :value 1)) :snt2 (p / possible-01 :arg1 (a / and :op1 (s4 / shoot-02 :arg0 (h3 / he) :location (o2 / outside :op1 (l / line :mod (t / three-point)) :path (l2 / line :name (n / name :op1 (t2 / three-point))) :path (l3 / line :name (n2 / name :op1 (t3 / three-point))))) :op2 (r / roll :arg1 (h4 / he) :arg2 (c2 / colleagues :arg0 (h5 / he))))))
(a / and :op1 (l / lose-02 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (o / organization :name (n / name :op1 "alcoa")) :arg2 (s / smelter))) :arg1 (m / money)) :op2 (r / risk-01 :arg0 (p2 / person) :arg2 (c / closure)))
(i / include-91 :arg1 (p / plant) :arg2 (a / and :op1 (m / majority :mod (v / venture :mod (j / joint)) :arg1-of (o / own-01 :arg0 (a2 / and :op1 (c / citic :poss (c2 / country :name (n / name :op1 "China"))) :op2 (c3 / corp :mod (m2 / marubeni) :poss (c4 / country))))) :op2 (h / hold-01 :arg0 (c5 / country) :arg1 (s / share :mod (s2 / small :degree (m3 / more))))))
(a / achieve-01 :arg0 (o / olympics) :arg1 (b / benefit-01 :mod (h / huge)) :arg3 (a2 / and :op1 (s / stratford) :op2 (e / east)))
(c / call-03 :arg0 (p / person :arg0-of (r / represent-01 :arg1 (d / doctor :mod (j / junior)))) :arg1 (u / union-02 :arg1 (p2 / person) :arg2 (a / act-02 :arg0 (p3 / person) :mod (i / industry) :arg1-of (f / fresh-04)) :time (d2 / dispute-01 :arg0 (p4 / person) :arg2 (c2 / contract :mod (n / new)))) :arg2 (p5 / person :arg0-of (r2 / represent-01 :arg1 (d3 / doctor :mod (j2 / junior)))))
(c / contrast-01 :arg2 (g / good :degree (m / more) :domain (t / talk-01 :arg0 (p / person :quant 2 :arg0-of (l / lead-02)) :mod (a / at-least)) :arg1-of (s / sure-02) :time (a2 / after :op1 (a3 / and :op1 (t2 / temporal-quantity :quant (N / N-A) :unit (m2 / month)) :op2 (t3 / temporal-quantity :quant (N2 / N-A) :unit (m3 / month))))))
(s / suck-01 :arg0 (b / bank :mod (r / royal) :part-of (c / country :name (n / name :op1 "Scotland"))) :arg1 (c2 / customer :location (o / outside :op1 (c3 / country))))
(j / jockey :arg0 (j2 / jockey :ord (o / ordinal-entity :value 6)) :arg1 (r / reach-01 :arg1 (l / landmark) :location (f / flat)) :ord (o2 / ordinal-entity :value 6))
(h / have-concession-91 :arg1 (h2 / hope-01 :arg0 (i / i) :arg1 (s / see-01 :arg0 (i2 / i) :arg1 (i3 / it) :time (e / end-01))) :arg2 (h3 / hope-01 :arg0 (i4 / i) :arg1 (s2 / see-01 :arg0 (i5 / i) :arg1 (i6 / it) :time (e2 / end-01))))
(a / and :op1 (j / join-01 :arg0 (p / person :arg0-of (e / engineer-01)) :arg1 (a2 / and :op1 (p2 / person :arg0-of (h / have-org-role-91 :arg2 (p3 / president :mod (v / vice)))) :op2 (p4 / person :arg0-of (h2 / have-org-role-91 :arg2 (v2 / viaduct))) :op3 (p5 / person :arg0-of (h3 / have-org-role-91 :arg2 (v3 / viaduct))) :op4 (p6 / person :arg0-of (h4 / have-org-role-91 :arg2 (v4 / viaduct))) :op5 (p7 / person :arg0-of (h5 / have-org-role-91 :arg2 (v5 / viaduct))))) :op2 (c / connect-01 :arg1 (p8 / person) :arg2 (f / fife :arg1 (b / bridge)) :time (n / now)))
(a / and :op1 (w / wear-01 :arg0 (n / novelty) :arg1 (o / off)) :op2 (u / use-01 :arg1 (n2 / novelty)) :arg1-of (c / cause-01 :arg0 (o2 / of-course :mod (o3 / of-course))))
(a / and :op1 (t / terminate-01 :arg1 (b / balance-01 :arg1 (a2 / and :op1 (b2 / beams) :op2 (f / floor)))) :op2 (l / lay :arg0 (d / defend-01 :location (w / world)) :arg1 (w2 / wait-01 :arg1 (w3 / world))))
(s / suggest-01 :arg0 (t / thing :arg1-of (r / report-01)) :arg1 (p / put-01 :arg0 (p2 / person :arg0-of (h / have-rel-role-91 :arg1 (p3 / person) :arg2 (m / mum))) :arg1 (f / finger :part-of (p4 / person)) :arg2 (f2 / finger :part-of (p5 / person))) :arg1-of (c / cause-01 :arg0 (a / applaud-01 :arg0 (p6 / person) :arg1 (p7 / person :arg0-of (h2 / have-rel-role-91 :arg1 (p8 / person) :arg2 (m2 / mum))) :purpose (p9 / prevent-01 :arg0 (p10 / person) :arg1 (p11 / possible-01 :arg1 (v / vote-01 :arg0 (a2 / anyone)))))))
(s / say-01 :arg0 (p / person :name (n / name :op1 "N-A")) :arg1 (e / evidence-01 :arg1 (d / defraud-01) :location (a / across :op1 (c / country))))
(s / say-01 :arg0 (i / i) :arg2 (p / person :name (n / name :op1 "scott" :op2 "russel")))
(a / and :op1 (s / say-01 :arg0 (t / that) :arg1 (a2 / and :op1 (i / inappropriate :arg1 (t2 / they)) :op2 (f / fortunate-01 :polarity - :arg1 (t3 / they) :arg2 (c / choose-01 :arg1 (w / word)) :arg2-of (f2 / fortunate-01)))) :op2 (s2 / sorry-01 :arg1 (t4 / they) :arg2 (t5 / thing :arg1-of (s3 / say-01 :arg0 (h / he))) :degree (v / very)))
(e / email-address-entity :value (p / primark) :domain (p2 / political-party :name (n / name :op1 "N-A") :arg0-of (t / try-01 :arg1 (u / underwear :location (m / middle :part-of (s / shop))))))
(a / and :op1 (p / phenomenon :mod (g / globe) :domain (p2 / phenomenon :mod (g2 / gut))) :op2 (p3 / possible-01 :arg1 (p4 / provide-01 :arg0 (w / we) :arg1 (p5 / person :arg0-of (c / consume-01)) :arg2 (i / information :mod (m / more) :topic (i2 / it)) :manner (w2 / way :mod (i3 / interesting)))))
(s / say-01 :li 1 :arg1 (' / ' :arg0 (t / they) :arg1 (c / care-01 :arg0 (t2 / they) :arg1 (a / anybody) :degree (t3 / total))))
(m / multi-sentence :snt1 (a / act-02 :polarity - :arg0 (h / hobbyists) :mod (j / just)) :snt2 (s / significant-02 :arg1 (p / person :arg0-of (b / buy-01) :mod (o / old :degree (m2 / more))) :degree (m3 / more :degree (s2 / slight))) :snt3 (a2 / and :op1 (l / likely-01 :arg1 (k / keep-01 :arg0 (p2 / person :arg0-of (b2 / buy-01) :mod (o2 / old :degree (m4 / more))) :arg1 (f / feel-01 :arg0 (p3 / person) :arg1 (r / rate-entity-91 :arg1 (p4 / percentage-entity :value (N / N-A)) :arg2 (v / volume-quantity :quant (N2 / N-A) :unit (g / gallon)))))) :op2 (e / enjoy-01 :arg0 (p5 / person) :arg1 (r2 / rate-entity-91 :arg1 (p6 / percentage-entity :value (N3 / N-A)) :arg2 (t / temporal-quantity :quant (N4 / N-A) :unit (y / year))))))
(m / multi-sentence :snt1 (c / contrast-01 :arg1 (l / listen-01 :arg1 (m2 / music :mod (o / or :op1 (c2 / computer) :op2 (w / way :mod (a / another))))) :arg2 (e / easy :arg1 (w2 / woe :poss (v / vinyl)))) :snt2 (d / drifts :mode (e2 / expressive)))
(l / look-01 :arg0 (n / nobody) :arg1 (p / possible-01 :polarity - :arg1 (t / touch-01 :arg0 (t2 / they) :arg1 (w / wall))) :arg1-of (c / cause-01 :arg0 (d / decoration :arg1 (t3 / they) :mod (m / mere))) :arg1-of (c2 / cause-01 :arg0 (d2 / decoration :arg1 (t4 / they) :mod (m2 / mere))))
(c / cheap-02 :arg1 (f / food) :degree (m / more) :arg1-of (c2 / cause-01 :arg0 (a / and :op1 (c3 / cheap-02 :arg1 (f2 / food) :degree (m2 / more)) :op2 (s / source-02 :arg0 (p / person :arg0-of (c4 / consume-01 :arg1 (a2 / and :op1 (p2 / person :arg0-of (c5 / consume-01)) :op2 (p3 / person :arg0-of (p4 / produce-01 :arg1 (p5 / person))))))))))
(p / price-01 :arg1 (t / thing :arg2-of (p2 / price-01) :arg1-of (s / set-02 :arg0 (r / russia :arg1-of (s2 / set-02 :arg0 (c / country :arg0-of (b / bring-01 :arg1 (i / import-01 :arg1 (f / food)) :arg2 (c2 / country :name (n / name :op1 "N-A")))) :arg2 (c3 / country :name (n2 / name :op1 "N-A")))))) :arg2 (m / monetary-quantity :arg2-of (p3 / price-01)) :time (n3 / now))
(s / say-01 :arg0 (t / thing :arg1-of (t2 / tax-01 :arg3 (t3 / thing :arg1-of (t4 / tax-01 :arg3 (t5 / tax))))) :arg1 (a / affect-01 :arg0 (t6 / thing :arg2-of (p / price-01 :arg1 (f / food)) :location (c / country :name (n / name :op1 "N-A"))) :arg1 (m / monetary-quantity :arg2-of (p2 / price-01 :arg1 (f2 / food))) :manner (s2 / slow)))
(c / contrast-01 :arg1 (d / decide-01 :arg0 (s / school) :arg1 (d2 / detail :topic (t / they))) :arg2 (s2 / state-01 :arg0 (s3 / state :mod (c2 / curriculum)) :arg1 (g / goal :mod (o / official))))
(s / say-01 :arg1 (r / reduce-01 :polarity - :arg1 (n / number :quant-of (s2 / sell-01 :arg0 (d / department) :arg1 (s3 / sell-01))) :purpose (e / ensure-01 :arg0 (n2 / number) :arg1 (e2 / excellent-02 :arg1 (s4 / service :mod (c / customer))))) :medium (p / press) :mod (a / also))
(a / allow-01 :arg1 (s / sit-01 :arg1 (a2 / and :op1 (p / person :arg0-of (w / work-01 :arg1-of (v / voluntary-02))) :op2 (p2 / person :arg0-of (h / have-org-role-91 :arg1 (a3 / army) :arg2 (p3 / personnel))) :op3 (p4 / person :arg0-of (h2 / have-org-role-91 :arg1 (a4 / army) :arg2 (p5 / personnel)))) :arg2 (s2 / seat-01 :arg1-of (e / empty-02))) :arg1-of (c / contrast-01 :arg2 (a5 / allow-01 :polarity - :arg1 (a6 / and :op1 (n / need-01 :arg0 (a7 / and :op1 (p6 / person :arg0-of (w2 / work-01) :arg1-of (v2 / voluntary-02)) :op2 (p7 / person :arg0-of (h3 / have-org-role-91 :arg1 (a8 / army) :arg2 (p8 / personnel)))) :arg1 (s3 / seat-01 :arg1-of (e2 / empty-02))) :op2 (a9 / attempt-01 :arg0 (a10 / and) :arg1 (s4 / sell-01 :arg0 (a11 / and) :arg1 (t / ticket) :time (u / until :op1 (m / moment :mod (l / last :degree (v3 / very))))))) :time (y / yet))))
(p / phone-number-entity :value (N / N-A) :location (c / city :name (n / name :op1 "N-A") :mod (b / big)))
(s / say-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (b / board :mod (p2 / police :mod (n / nation))) :arg2 (r / reen))) :arg1 (p3 / possible-01 :arg1 (a / and :op1 (s2 / see-01 :arg0 (p4 / person :arg0-of (h2 / have-org-role-91 :arg1 (b2 / board :mod (p5 / police) :mod (n2 / nation)))) :arg1 (p6 / possible-01 :arg1 (s3 / see-01 :arg0 (p7 / person) :arg1 (a2 / and :op1 (t / turku) :op2 (h3 / helsinki) :op3 (o / oulu)))) :op2 (r2 / rise-01 :arg1 (p8 / person) :arg4 (t2 / top) :manner (c / compare-01))))))
(g / give-01 :arg0 (u / u-lock) :arg1 (b / bicycle :mod (g2 / good :degree (m / more))) :arg2 (p / protect-01 :arg1 (b2 / bicycle) :mod (g3 / good :degree (m2 / more) :compared-to (p2 / person :mod (o / other) :quant (m3 / many)))))
(b / buy-01 :arg0 (s / some) :arg1 (b2 / bike :arg1-of (s2 / steal-01)) :manner (k / know-01 :polarity -) :mod (p / probable))
(p / possible-01 :arg1 (d / doubt-01 :arg0 (s / some) :arg1 (i / it)))
(m / multi-sentence :snt1 (c / cycling :arg1 (s / sports :mod (o / olympic) :mod (i / interesting :degree (m2 / most)) :arg0-of (o2 / open-01 :arg1 (g / game :ord (o3 / ordinal-entity :value 5)))) :time (s2 / so-far)) :snt2 (r / reach-01 :arg0 (t / this) :arg1 (p / person :quant (h / half :degree (a / almost)) :arg0-of (v / view-01)) :time (t2 / time :mod (o4 / olympic))))
(s / say-01 :arg0 (h / he) :arg1 (h2 / have-purpose-91 :mode (i / interrogative) :arg2 (d / destroy-01 :arg1 (t / tourism :location (c / country)))) :arg1-of (h3 / have-purpose-91 :arg2 (d2 / destroy-01 :arg1 (t2 / tourism :location (c2 / country)) :time (s2 / since :op1 (a / attack-01 :arg1 (p / person :arg0-of (t3 / tour-01)) :quant (a2 / all))))))
(s / something :location (h / here) :time (a / always))
(w / way :manner-of (p / prevent-01 :arg1 (p2 / person) :arg2 (i / increase-01 :arg0 (p3 / person) :arg1 (p4 / power :poss (p5 / person) :arg0-of (d / depend-01 :polarity -) :poss (p6 / person)))))
(o / olympics :domain (t / this) :arg0-of (s / separate-02 :arg1 (i / i) :arg2 (p / pack)))
(b / become-01 :arg1 (p / phelps :ord (o / ordinal-entity :value 1)) :arg2 (o2 / ordinal-entity :value 1) :purpose (w / win-01 :arg0 (p2 / phelps) :arg1 (g / gold :mod (o3 / olympic)) :arg2 (e / event :mod (c / consecutive :quant 4) :mod (i / individual))) :time (t / time :arg1-of (s / same-01)))
FAILED_TO_PARSE#Two concepts in a row.
(m / multi-sentence :snt1 (b / be-located-at-91 :arg1 (p / person :arg0-of (l / live-01 :location (p2 / perniö)) :arg0-of (l2 / live-01 :location (p3 / perniö))) :arg2 (s / salo)) :snt2 (b2 / buying :mode (i / interrogative) :time (d / date-entity :decade (N / N-A)) :time (s2 / see-01 :arg0 (s3 / she) :arg1 (s4 / signal-07 :mod (f / funny)))))
(r / remembers :arg0 (c / clinic) :arg1 (w / word :mod (t / touch-01)))
(c / contrast-01 :arg2 (w / want-01 :arg0 (w2 / we) :arg1 (g / grow-03 :arg0 (w3 / we) :arg1 (m / much :degree (t / too))) :arg1-of (c2 / cause-01 :arg0 (r / resemble-01 :arg1 (r2 / resemble-01 :arg1 (w4 / worship-place :name (n / name :op1 "N-A")) :arg2 (t2 / thing :arg1-of (r3 / resemble-01 :arg2 (c3 / channel :mod (h / huge))))) :arg2 (p / point :mod (s / some))))))
(c / cost-01 :arg1 (t / turnover :mod (c2 / company :name (n / name :op1 "N-A") :arg1-of (l / limit-01))) :arg2 (a / about :op1 (m / monetary-quantity :quant 6 :unit (e / euro))) :time (y / year :mod (l2 / last)))
(e / estimate-01 :arg0 (a / authority :arg1-of (l / local-02)) :arg1 (p / possible-01 :arg1 (c / culprit :arg1-of (o / organize-01 :arg1-of (p2 / possible-01) :mod (a2 / also)))))
(s / say-01 :arg2 (p / person :name (n / name :op1 "N-A")))
(r / recalls :arg0 (b / book) :arg1 (b2 / book))
(m / multi-sentence :snt1 (l / learn-01 :arg0 (i / i) :arg1 (d / don :mode (i2 / interrogative) :arg0 (y / you) :arg1 (y2 / you))) :snt2 (o / obligate-01 :arg2 (r / require-01 :arg1 (a / and :op1 (p / perfection) :op2 (t / top)) :arg2 (y3 / you) :frequency (t2 / time :quant (a2 / all)))))
(h / have-03 :arg0 (p / person :quant (m / many)) :arg1 (i / image :arg0-of (d / depend-01 :polarity - :arg1 (n / number :quant-of (p2 / person :arg0-of (w / work-01)))) :arg0-of (c / cause-01 :arg1 (c2 / constant :domain (i2 / it) :mod (a / almost)))) :mod (s / still))
(i / information :time (e / early) :topic (d / develop-02 :arg1 (m / market :location (e2 / estate) :mod (r / real))) :mod (s / some) :time (a / already))
(u / use-01 :arg1 (i / information) :arg2 (m / market-01 :arg1 (i2 / information) :arg2 (c / customer)))
(m / multi-sentence :snt1 (c / contrast-01 :arg1 (c2 / cover-01 :arg0 (p / person :arg0-of (l / lose-02 :arg1 (c3 / camera :poss (p2 / person)))) :arg1 (t / thing :arg1-of (w / work-12 :arg0 (p3 / person))) :arg2 (d / dog :mod (f / fast))) :arg2 (g / give-01 :arg0 (p4 / person) :arg1 (c4 / cover-01 :arg0-of (l2 / look-02 :arg1 (t2 / toy :arg1-of (s / soft-02)) :time (b / back) :time (a / after :op1 (h / hear-01 :arg0 (p5 / person) :arg1 (c5 / command-02))))) :arg2 (p6 / person))) :snt2 (g2 / go-02 :mode (i / imperative) :arg0 (w2 / we)))
(c / contrast-01 :arg1 (p / possible-01 :arg1 (l / long-03 :arg1 (d / day :mod (w / work-01)) :arg2 (t / temporal-quantity :quant (N / N-A) :unit (h / hour)))) :arg2 (b / be-located-at-91 :arg1 (s / sections :mod (w2 / work-01 :arg1-of (a / activity-06)) :mod (o / only)) :arg2 (t2 / temporal-quantity :quant (N2 / N-A) :unit (h2 / hour) :mod (o2 / only))))
FAILED_TO_PARSE#Two concepts in a row.
(g / give-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg2 (f / fiji))) :arg1 (a / and :op1 (h2 / handle-01 :arg1 (a2 / and :op1 (l / line :name (n / name :op1 (o / off-loading))) :op2 (p2 / person :arg0-of (h3 / have-org-role-91 :arg2 (o2 / off-loading))) :op3 (p3 / person :arg0-of (s / support-01)) :op4 (p4 / person :arg0-of (s2 / support-01)) :op5 (p5 / person :arg0-of (s3 / support-01)) :op5 (p6 / person :arg0-of (s4 / support-01)) :op6 (s5 / strength :mod (b / brute)) :op7 (s6 / strength :poss (p7 / person)))) :op2 (w / win-01 :arg0 (p8 / person) :arg1 (m / medal :mod (b2 / brute) :poss (p9 / person)) :arg2 (w2 / win-01 :arg0 (p10 / person) :arg2 (g2 / gold) :ord (o3 / ordinal-entity :value 1) :poss (p11 / person)))) :arg2 (p12 / person :name (n2 / name :op1 "N-A")))
(a / and :op1 (g / gold :mod (e / emotive :degree (m / more))) :op2 (s / say-01 :arg0 (t / that) :arg1 (s2 / something)))
(a / and :op1 (l / look-04 :arg0 (w / we) :arg1 (d / do-02 :arg0 (w2 / we) :arg1 (r / row :mod (g / good))) :mod (j / just) :time (t / today)) :op2 (a2 / and :op1 (g2 / go-out-17 :arg0 (w3 / we)) :op2 (w4 / win-01 :arg0 (w5 / we) :arg2 (r2 / race :mod (t2 / that)) :arg1-of (d2 / do-02 :arg0 (w6 / we)))))
(c / cause-01 :arg0 (h / have-03 :arg0 (p / person :arg0-of (h2 / have-rel-role-91 :arg1 (s / she) :arg2 (g / glover))) :arg1 (b / backshall :name (n / name :op1 (s2 / steve) :op2 (s3 / steve) :op3 (s4 / steve)) :medium (t / television))) :arg1 (h3 / have-03 :arg0 (p2 / person) :arg1 (d / desperate) :time (m / month :mod (n2 / next))))
(c / contrast-01)
(a / age-01 :arg1 (p / person :arg0-of (o / own-01 :arg1 (w / web))) :arg2 (b / behind :op1 (i / it)))
(m / multi-sentence :snt1 (d / distance-01 :arg1 (p / person :mod (c / country :name (n / name :op1 "N-A"))) :arg2 (s / sparkling :arg2-of (i / include-01 :arg1 (p2 / person :mod (c2 / country :name (n2 / name :op1 "N-A"))))) :arg1-of (l / long-03)) :snt2 (f / film :time (d2 / date-entity :decade (N / N-A))))
(m / multi-sentence :snt1 (c / contrast-01 :arg1 (p / particular :domain (t / thing :mod (t2 / this)) :mod (p2 / particular)) :arg2 (t3 / thing :mod (m2 / main) :domain (s / set-ups :arg1 (s2 / scene :mod (e / each))))) :snt2 (i / improve-01 :arg0 (t4 / this) :arg1 (s3 / scene :mod (e2 / each)) :mod (r / really)))
(a / and :op1 (d / drifted :arg1 (r / road :direction (o / out) :destination (c / curve :mod (l / left)))) :op2 (t / toppled :arg1 (r2 / road) :arg2 (d2 / ditches)))
(a / and :op1 (j / josba) :op2 (k / kataja) :op3 (j2 / jokipojat))
(i / include-91 :arg1 (a / and :op1 (i2 / inflation :arg1-of (a2 / average-04)) :op2 (i3 / inflation :arg1-of (m / measure-01 :arg0 (a3 / ambitious)))) :arg2 (p / product-of :op1 2014 :op2 2015) :time (d / date-interval :op1 (d2 / date-entity :decade (N / N-A)) :op2 (d3 / date-entity :dayperiod (N2 / N-A))) :arg1-of (c / compare-01 :arg2 (p2 / product-of :op1 2014 :op2 2015)))
(s / say-01 :arg0 (d / democrat :mod (t / top) :poss (c / committee)) :arg1 (c2 / create-01 :arg1 (p / process-02 :arg1 (p2 / produce-01 :arg1 (i / intelligence :location (a / and :op1 (f / force :mod (s2 / security) :mod (c3 / country :name (n / name :op1 "N-A"))) :op2 (f2 / force :mod (s3 / security) :mod (c4 / country :name (n2 / name :op1 "N-A"))) :op3 (p3 / person :arg0-of (r / represent-01 :arg1 (o / organization) :mod (t2 / top))) :op4 (p4 / person :arg0-of (r2 / represent-01 :arg1 (o2 / organization) :mod (t3 / top))) :op5 (p5 / person :arg0-of (r3 / represent-01 :arg1 (c5 / committee)))))))) :medium (s4 / statement))
(r / rate-entity-91 :arg1 1 :arg2 (t / temporal-quantity :quant (N / N-A) :unit (d / day)) :time (a / after :op1 (g / goal :quant 1 :arg1-of (w / win-01 :arg0 (a2 / and :op1 (c / country :name (n / name :op1 "N-A")) :op2 (t2 / team :name (n2 / name :op1 (k / katie)) :mod (f / field) :poss (w2 / woman)) :op3 (t3 / team :name (n3 / name :op1 (h / hockey)) :mod (f2 / field) :mod (f3 / field) :poss (w3 / woman)))))) :time (d2 / day :quant 1) :time (a3 / after :op1 (g2 / goal :quant 1 :arg1-of (w4 / win-01 :arg0 (a4 / and :op1 (p / person :mod (c2 / country :name (n4 / name :op1 "N-A"))) :op2 (p2 / person :mod (c3 / country) :arg1-of (d3 / defeat-01) :mod (c4 / country)))))))
(a / and :op1 (n / name-02 :arg1 (p / parnham :mod (c / craig)) :arg2 (c2 / coach)) :op2 (b / begin-01 :arg1 (c3 / change-01 :arg1 (t / thing))) :time (y / year :mod (n2 / next)))
(r / resemble-01 :polarity - :arg1 (p / person :name (n / name :op1 "mr." :op2 "meles") :arg1-of (c / come-03 :arg2 (r2 / region :mod (t / tigray) :location (n2 / north :part-of (c2 / country :name (n3 / name :op1 "N-A")))))) :arg2 (s / southerner))
(u / use-01 :arg0 (t / trumps :name (n / name :op1 (m / mr.) :op2 (t2 / trumps))) :arg1 (d / defend-01 :mod (s / sarcasm)) :time (b / before))
(c / contrast-01 :arg2 (a / and :op1 (t / think-01 :arg0 (i / i) :arg1 (c2 / clever :arg0 (h / he) :arg1 (t2 / thing :arg1-of (s / state-01 :arg0 (h2 / he)))) :mod (a2 / also)) :op2 (k / know-01 :arg0 (i2 / i) :arg1 (v / vague :arg1 (t3 / they) :manner (l / lens :mod (v2 / various))))))
(a / and :op1 (s / start-01 :arg0 (h / he) :location (v / verb :quant 2001)) :op2 (b / be-located-at-91 :arg1 (h2 / he) :arg2 (t / there) :time (u / until :op1 (e / end-01))))
(t / tidbits :arg1 (c / concept :mod (s / square)) :mod (f / feast :mod (h / history)))
(i / incident :mod (c / cream-puff))
(c / contrast-01 :arg2 (h / hiding :arg1 (t / trumps :mod (d / donald)) :arg2 (b / behind :op1 (a / and :op1 (m / motive :arg1-of (f / fake-02)) :op2 (b2 / backtracking))) :time (p / promise-01 :arg0 (h2 / he) :arg2 (r / release-01 :arg0 (h3 / he) :arg1 (r2 / returns :poss (h4 / he) :mod (t2 / tax-01))) :time (p2 / previous))))
(i / include-91 :arg1 (a / and :op1 (b / barker :name (n / name :op1 (l / laura))) :op2 (s / shand :name (n2 / name :op1 (l2 / laura))) :op3 (s2 / shand :name (n3 / name :op1 (r / rowsell))) :op4 (s3 / shand :name (n4 / name :op1 (r2 / rowsell))) :op5 (a2 / archibald :name (n5 / name :op1 (r3 / rowsell) :op2 (k / katie)))) :arg2 (a3 / and :op1 (b2 / barker :mod (m / milngavie)) :op2 (a4 / archibald :mod (k2 / katie))) :time (e / event :mod (r4 / record :mod (w / world))) :location (r5 / record :mod (r6 / record :mod (w2 / world))))
(s / say-01 :arg0 (a / address-02 :arg1 (a2 / address-02 :arg1 (p / person :arg0-of (a3 / analyze-01)) :time (e / early :degree (m / more) :time (w / week :mod (e2 / early :degree (m2 / more)))))) :arg1 (a4 / and :op1 (u / use-01 :arg0 (p2 / person :arg0-of (a5 / analyze-01)) :arg1 (a6 / around :op1 (m3 / mass-quantity :quant (N / N-A) :unit (k / kilogram))) :arg2 (p3 / person :quant (a7 / around :op1 600) :arg0-of (p4 / power-01))) :op2 (t / tomago :arg0 (p5 / person) :arg1 (p6 / person :quant (a8 / around :op1 900)))))
(w / walk-01 :arg0 (s / she) :destination (j / jacobs :mod (m / marc)))
(l / lost :arg1 (p / person :mod (t / that) :arg1-of (l2 / legal-02) :mod (t2 / that)) :arg2 (l3 / lose-02 :arg0 (p2 / person) :arg1 (r / rate-entity-91 :arg1 30 :arg2 (t3 / temporal-quantity :quant (N / N-A) :unit (y / year))) :arg3 (f / fund-01 :arg0 (f2 / federal) :arg1 (f3 / federal))) :time (y2 / year :mod (n / next)))
(p / project :mod (i / infrastructure) :domain (p2 / project :mod (i2 / infrastructure) :beneficiary (m / many)) :arg1-of (r / resemble-01 :polarity - :arg2 (f / few :op1 (f2 / few :op1 (t / temporal-quantity :quant (N / N-A) :unit (m2 / month)) :mod (j / just)))))
(c / claim-01 :arg0 (m / magazine :name (n / name :op1 "N-A") :mod (t / thursday)) :arg1 (c2 / cause-01 :arg0 (b / block-01 :arg0 (t2 / they) :arg1 (c3 / content :mod (n2 / non-advertising) :quant (s / some) :location (s2 / site)) :mod (a / also)) :arg1 (c4 / concern-01 :arg0 (f / filter :mod (n3 / new)))))
(c / contrast-01 :arg1 (i / interview-01 :arg1 (p / person :arg0-of (d / drive-01) :arg1-of (i2 / involve-01) :quant (s / several)) :time (a / already)) :arg2 (s2 / say-01 :arg0 (p2 / police :arg1-of (i3 / identify-01 :polarity -)) :arg1 (a2 / and :op1 (p3 / person :arg0-of (c2 / call-03 :arg1 (t / they)) :arg0-of (c3 / call-03 :arg1 (i4 / incident))) :op2 (a3 / anyone :mod (e / else) :arg0-of (w / witness-01 :arg1 (i5 / incident))))))
(a / acquit-01 :arg1 (o / officer :arg0-of (h / have-org-role-91 :arg1 (p / police) :arg2 (o2 / officer))) :arg2 (c / cause-01 :arg0 (o3 / officer) :arg1 (d / die-01 :arg1 (o4 / officer))) :time (y / year :mod (l / last)) :arg1-of (c2 / cause-01 :arg0 (a2 / and :op1 (h2 / hit-01 :arg0 (o5 / officer) :arg1 (m / man :arg1-of (l2 / lie-07 :arg2 (u / under :op1 (p2 / product-of :op1 1 :op2 2014))))))))
FAILED_TO_PARSE#Number of opening and closing brackets doesn't match.
(t / tell-01 :arg0 (a / and :op1 (p / person :arg0-of (h / have-rel-role-91 :arg1 (v / victim) :arg2 (b / brother))) :op2 (p2 / person :arg0-of (h2 / have-rel-role-91 :arg1 (v2 / victim) :arg2 (b2 / brother))) :op3 (p3 / person :arg0-of (h3 / have-rel-role-91 :arg1 (v3 / victim) :arg2 (g / galicia))) :op4 (p4 / person :arg0-of (h4 / have-rel-role-91 :arg1 (v4 / victim) :arg2 (g2 / galicia))) :op5 (p5 / person :arg0-of (h5 / have-rel-role-91 :arg1 (v5 / victim) :arg2 (g3 / galicia))) :op6 (p6 / person :arg0-of (h6 / have-rel-role-91 :arg1 (v6 / victim) :arg2 (s / station))) :op6 (p7 / person :arg0-of (h7 / have-rel-role-91 :arg1 (v7 / victim) :arg2 (s2 / station))) :op7 (p8 / person :arg0-of (h8 / have-rel-role-91 :arg1 (v8 / victim) :arg2 (c / child))) :op7 (p9 / person :arg0-of (h9 / have-rel-role-91 :arg1 (v9 / victim) :arg2 (c2 / child)))) :arg1 (j / job :arg1-of (d / dream-01 :arg0 (h10 / he)) :arg1-of (d2 / dream-01 :arg0 (h11 / he))) :arg2 (a2 / and :op1 (c3 / chef :mod (l / line)) :op2 (p10 / person :arg0-of (h12 / have-rel-role-91 :arg1 (v10 / victim) :arg2 (d3 / daughter)))) :time (b3 / before :op1 (n / now) :quant (t2 / temporal-quantity :quant (N / N-A) :unit (m / month))) :manner (f / frank))
(s / say-01 :arg0 (t / thing :arg1-of (r / report-01) :quant (b / between :op1 5 :op2 1)) :arg1 (e / erdogan :arg0 (a / and :op1 (p / person :arg0-of (h / have-rel-role-91 :arg1 (h2 / he) :arg2 (f / friend :mod (d / dear)))) :op2 (p2 / person :arg0-of (h3 / have-rel-role-91 :arg1 (h4 / he) :arg2 (f2 / friend :mod (d2 / dear))))) :frequency (r2 / rate-entity-91 :arg3 (t2 / temporal-quantity :quant (N / N-A) :unit (d3 / day)))))
(c / cause-01 :arg1 (a / and :op1 (a2 / allow-01 :arg0 (s / summit :location (g / glitzy :mod (t / this))) :arg1 (t2 / thing :arg1-of (d / describe-01 :arg0 (p / person :quant 1 :arg0-of (a3 / analyze-01)) :arg2 (i / i) :arg1-of (c2 / cause-01 :arg0 (a4 / ally-01 :arg1 (c3 / country :quant 2) :arg2 (a5 / ally-01 :arg1 (c4 / country) :arg2 (m / misfits))))))) :op2 (j / join-01 :arg0 (c5 / country :quant 2) :arg1 (f / force))) :time (s2 / summit :mod (t3 / this)))
(b / be-located-at-91 :arg1 (b2 / bank :mod (r / royal) :mod (c / country :name (n / name :op1 "N-A"))) :arg2 (d / delegate) :purpose (c2 / customer :location (o / outside)))
(u / use-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg2 (g / governor :mod (b / brand)))) :arg1 (r / rbs) :arg2 (p2 / protect-01 :arg0 (p3 / person) :arg1 (b2 / brand :mod (f / finance) :mod (p4 / person :arg0-of (c / consume-01)) :mod (o / other))) :time (t / time :mod (t2 / that)))
(c / contrast-01 :arg1 (a / and :op1 (s / stylish :arg1 (h / he)) :op2 (s2 / strong-02 :arg1 (h2 / he))) :arg2 (n / nous :arg0 (h3 / he) :arg1 (h4 / he) :arg2 (e / except-01 :arg1 (h5 / he) :arg2 (o / other) :location (r / room :mod (w / weighing)))))
(a / and :op1 (d / differ-02 :arg1 (s / set) :arg2 (s2 / set)) :op2 (d2 / disagree-01 :arg1 (t / thing)))
(c / cause-01 :arg0 (w / work-01 :arg0 (t / team) :arg1 (w2 / work-01 :arg0 (t2 / team)) :mod (j / just :op1 (f / few :op1 (t3 / temporal-quantity :quant (N / N-A) :unit (m / month)) :mod (e / either)))) :arg1 (d / delicate))
(d / delay-01 :arg0 (r / respond-01 :mod (m / massive) :arg0-of (a / adjust-01 :arg1 (s / server))) :arg1 (l / launch-01 :location (c / country :mod (o / other))) :time (t / then))
(c / contrast-01 :arg2 (c2 / cause-01 :arg0 (r / result-01 :arg1 (d / dyslexia :arg0 (p / person :arg0-of (h / have-rel-role-91 :arg1 (h2 / he) :arg2 (g / girlfriend :mod (d2 / dear)))) :arg2 (e / edmund)) :arg2 (k / know-01 :arg0 (p2 / person :arg0-of (h3 / have-rel-role-91 :arg1 (h4 / he) :arg2 (g2 / girlfriend))) :arg1 (d3 / didn :arg0 (p3 / person :arg0-of (h5 / have-rel-role-91 :arg1 (h6 / he) :arg2 (g3 / girlfriend))) :arg1 (p4 / person :arg0-of (h7 / have-rel-role-91 :arg1 (h8 / he) :arg2 (g4 / girlfriend))) :arg1-of (k2 / know-01 :arg0 (p5 / person))) :degree (t / total)))))
(g / get-03 :arg1 (i / it) :arg2 (g2 / good :degree (m / more)))
(r / remain-01 :arg1 (w / watch-01 :mod (f / flood) :arg1-of (e / effect-03)) :time (u / until :op1 (s / saturday :arg1 (l / louisiana :quant (m / most) :location (s2 / south)))))
(s / say-01 :arg0 (p / person :name (n / name :op1 "alek" :op2 "krautmann")) :arg1 (p2 / possible-01 :arg1 (f / flood :arg0 (p3 / person :mod (c / country :name (n2 / name :op1 "N-A"))) :arg1 (h / house :quant (m / many) :location (a / area :mod (s2 / suburban) :arg1-of (n3 / near-02 :arg2 (b / baton)))))))
(s / say-01 :arg0 (p / person :name (n / name :op1 "robby" :op2 "miller") :arg0-of (h / have-org-role-91 :arg1 (c / country :name (n2 / name :op1 "N-A")) :arg2 (p2 / president))) :arg1 (a / and :op1 (r / rescued :arg0 (p3 / person :arg0-of (h2 / have-org-role-91 :arg2 (a2 / authority))) :arg1 (p4 / person :quant 72)) :op2 (p5 / pets :arg0 (w / water :arg1-of (h3 / high-02)) :arg1 (p6 / person))))
(p / powerful-02 :arg1 (t / this))
(s / say-01 :arg1 (r / run-02 :arg0 (i / i) :arg1 (c / campaign-01 :arg0 (h / he) :arg1 (v / vote-01 :arg0 (p / person :mod (r2 / religious-group :name (n / name :op1 "N-A")) :mod (c2 / country :name (n2 / name :op1 "N-A"))) :arg1 (v2 / vote-01 :arg0 (p2 / person) :arg1 (p3 / person))))) :arg2 (r3 / rahman))
(c / contrast-01 :arg2 (a / athletes :arg1 (o / olympian :mod (2 / 24-year-old)) :arg2 (f / fight-01 :arg2 (g / gold)) :mod (o2 / only) :time (s / summer :mod (t / this)) :arg1-of (c2 / conform-01 :polarity - :arg2 (m / media :mod (s2 / social)) :mod (a2 / at-least))))
(p / possible-01 :arg1 (h / hear-01 :arg1 (s / say-01 :arg1 (a / and :op1 (d / drop-05 :arg0 (p2 / person :arg0-of (h2 / have-org-role-91 :arg1 (t / team :mod (c / commentary) :poss (p3 / person :arg0-of (h3 / have-org-role-91 :arg2 (h4 / head-of-state)))) :arg0-of (h5 / have-org-role-91 :arg1 (t2 / team :arg0-of (c2 / comment-01) :poss (p4 / person :arg0-of (h6 / have-org-role-91 :arg2 (h7 / head-of-state))))) :arg2 (t3 / team :arg0-of (c3 / comment-01)))) :arg1 (p5 / person :arg0-of (h8 / have-org-role-91 :arg1 (t4 / team :arg0-of (c4 / comment-01) :poss (p6 / person :arg0-of (h9 / have-org-role-91 :arg2 (h10 / head-of-state)))))) :arg2 (p7 / person :arg0-of (h11 / have-org-role-91 :arg1 (t5 / team :arg0-of (c5 / comment-01) :poss (p8 / person :arg0-of (h12 / have-org-role-91 :arg2 (h13 / head-of-state))))))) :op2 (s2 / say-01 :arg0 (p9 / person) :arg1 (d2 / drop-05 :arg0 (p10 / person :arg0-of (h14 / have-rel-role-91 :arg1 (b / baby) :arg2 (c6 / child))) :arg1 (b2 / baby)))))))
(e / end-01)
(s / say-01 :arg0 (p / person :name (n / name :op1 "jenny" :op2 "davidson") :arg1-of (b / be-located-at-91 :arg2 (s2 / shop) :time (t / time)) :arg0-of (h / have-org-role-91 :arg1 (s3 / shop))) :arg1 (a / and :op1 (g / get-03 :arg1 (w / woman :mod (m / mystery)) :arg2 (o / out-06 :arg1 (w2 / woman) :arg2 (s4 / store)) :manner (b2 / buy-01 :polarity - :arg0 (w3 / woman) :arg1 (a2 / anything))) :op2 (w4 / walk-01 :arg0 (w5 / woman) :direction (o2 / out) :manner (b3 / buy-01 :polarity - :arg0 (w6 / woman) :arg1 (a3 / anything)))))
(m / multi-sentence :snt1 (d / didn :arg0 (h / he) :arg1 (t / try-01 :arg0 (h2 / he) :arg1 (f / find-01 :arg0 (h3 / he) :arg1 (a / anywhere :location (a2 / anywhere)) :purpose (d2 / do-02 :arg0 (h4 / he) :arg1 (i / it))) :degree (t2 / total))) :snt2 (a3 / and :op1 (s / stand-01 :arg1 (s2 / she) :arg2 (t3 / there) :mod (j / just)) :op2 (l / lie-07 :arg1 (s3 / she) :arg2 (t4 / there) :mod (j2 / just))))
(a / add-01 :arg0 (p / person :name (n / name :op1 "davidson")) :arg1 (t / try-01 :arg0 (p2 / person :arg2-of (s / staff-01)) :arg1 (r / remove-01 :arg0 (p3 / person) :arg1 (p4 / person :arg0-of (s2 / sell-01 :arg1 (s3 / sell-01))) :arg2 (s4 / sell-01) :time (a2 / after :op1 (l / leave-11 :arg0 (p5 / person) :mod (a3 / as-well) :mod (a4 / as-well)))) :manner (a5 / apparent)))
(s / speak-01 :arg0 (w / we) :arg1 (a / and :op1 (m / mizrachi :arg0 (w2 / we) :arg1 (m2 / mizrachi)) :op2 (g / grandmaster :arg0 (g2 / grandmaster :mod (n / new) :poss (c / criminal-organization :name (n2 / name :op1 "N-A") :name (n3 / name :op1 (k / krav) :op2 (m3 / maga) :op3 (m4 / maga))) :mod (n4 / new) :mod (y / york-based))) :purpose (f / find-out-03 :arg0 (w3 / we) :arg1 (t / thing :manner-of (d / deal-01 :arg2 (m5 / muggers :arg1-of (r / range-01 :arg2 (c2 / close))))))))
(a / and :op1 (p / put-01 :arg0 (p2 / person :mod (c / country :name (n / name :op1 "N-A"))) :arg1 (s / system :name (n2 / name :op1 (i / immune)) :poss (p3 / person)) :arg2 (t / test :mod (s2 / serious))) :op2 (t2 / test-01 :arg0 (p4 / person) :arg1 (t3 / test-01 :mod (s3 / serious)) :manner (l / licking :arg0 (p5 / person) :arg1 (s4 / some :arg1-of (i2 / include-91 :arg2 (a2 / and :op1 (p6 / place :mod (d / dirtiest)) :op2 (p7 / place :arg0-of (d2 / disgust-01))))))))
(a / and :op1 (s / say-01 :arg0 (t / thing :arg1-of (i / include-91 :arg2 (t2 / thing :arg0-of (o / oppose-01 :arg1 (r / respondents)) :arg1-of (a2 / associate-01 :arg2 (n / name :op1 (l / lactic))))) :quant (b / between :op1 2015 :op2 84)) :arg1 (u / use-01 :arg0 (a3 / and :op1 (p / person :arg0-of (b2 / broker-01 :arg1 (b3 / building :name (n2 / name :op1 "N-A")))) :op2 (p2 / person :arg0-of (h / have-org-role-91 :arg2 (g / gut))) :op3 (p3 / person :quant 58 :arg1-of (i2 / include-91 :arg2 (p4 / person :arg0-of (b4 / broker-01 :arg1 (b5 / building :name (n3 / name :op1 "N-A"))))))) :arg1 (u2 / use-01 :arg0 (p5 / person) :arg1 (p6 / product :arg0-of (c / counter-01 :arg1 (b6 / bribe-01)))) :manner (s2 / specific-02))) :op2 (s3 / say-01 :arg0 (p7 / person :quant (b7 / between :op1 2015 :op2 84) :arg1-of (i3 / include-91 :arg2 (p8 / person :arg0-of (o2 / oppose-01 :arg1 (r2 / respondents)) :arg1-of (a4 / associate-01 :arg2 (r3 / respondents))))) :arg1 (u3 / use-01 :arg0 (p9 / person) :arg1 (p10 / product :arg0-of (c2 / counter-01 :arg1 (b8 / bribe-01))))) :medium (s4 / survey-01 :arg1 (a5 / and :op1 (p11 / person :arg0-of (b9 / broker-01 :arg1 (b10 / building :name (n4 / name :op1 "N-A")))) :op2 (g2 / gut))))
FAILED_TO_PARSE#Number of opening and closing brackets doesn't match.
(a / and :op1 (r / raid-01 :arg0 (p / police) :arg1 (p2 / property)) :op2 (f / find-01 :arg0 (p3 / police) :arg1 (p4 / property)) :op3 (f2 / find-01 :arg0 (p5 / police) :arg1 (a2 / and :op1 (m / more-than :op1 (7 / 70g)) :op2 (m2 / more-than :op1 (72 / 70g)) :op3 (m3 / monetary-quantity :quant 1,700 :unit (y / yuan)) :op4 (m4 / monetary-quantity :quant 1,700 :unit (y2 / yuan)))))
(m / multi-sentence :snt1 (e / eksote :mode (i / interrogative)) :snt2 (s / show-01 :arg0 (r / result-01 :time (d / date-entity :decade (N / N-A))) :arg1 (s2 / surplus :mod (m2 / monetary-quantity :quant 4,3 :unit (e2 / euro)) :mod (s3 / surplus) :time (y / year :ord (o / ordinal-entity :value 1) :ord (o2 / ordinal-entity :value 1) :ord (o3 / ordinal-entity :value 1)))))
(h / help-01 :arg0 (a / and :op1 (g / gather-03 :arg0 (u / unit)) :op2 (a2 / analysed :arg0 (u2 / unit))) :arg1 (f / focus-01 :arg0 (u3 / unit) :arg2 (a3 / activity-06 :arg0 (p / police) :mod (d / day)) :arg1-of (c / cause-01 :arg0 (n / need-01 :arg0 (u4 / unit) :arg1 (a4 / activity-06) :degree (m / most)))))
(e / extend-01 :arg1 (i / intelligence) :arg4 (o / outside :op1 (a / area :arg1-of (o2 / own-01 :arg0 (i2 / intelligence)))))
(a / and :op1 (c / count-01 :arg0 (p / person :quant 55 :arg1-of (f / follow-02 :arg0 (i / i) :source (d / data :arg1-of (f2 / follow-02 :arg0 (i2 / i) :source (a2 / and :op1 (p2 / person :arg0-of (h / have-rel-role-91 :arg1 (i3 / i) :arg2 (s / sister))) :op2 (p3 / person :quant 2 :mod (y / young) :arg0-of (h2 / have-rel-role-91 :arg1 (i4 / i) :arg2 (c2 / child)))))))) :arg1 (a3 / and :op1 (w / woman :quant 2 :mod (y2 / young)) :op2 (m / man :quant 2 :mod (y3 / young)) :op3 (m2 / man :quant 3 :mod (m3 / middle-aged)) :op4 (m4 / man :quant 3 :mod (m5 / middle-aged)) :op5 (m6 / man :quant 8) :op6 (m7 / man :quant 8) :op6 (m8 / man :quant 8) :op6 (m9 / man :quant 8) :op6 (m10 / man :quant 8) :op6 (m11 / man :quant 8) :op7 (w2 / woman :quant 8) :op7 (w3 / woman :quant 8))) :op2 (p4 / perusing :arg0 (d2 / data) :arg1 (t / temporal-quantity :quant (N / N-A) :unit (h3 / hour))))
(h / have-03 :arg0 (p / person :arg0-of (s / say-01 :arg1 (h2 / have-03 :arg0 (i / i) :arg1 (t / thing :arg1-of (s2 / say-01 :arg0 (p2 / person)) :mod (r / record)) :degree (t2 / total)))) :arg1 (p3 / person :arg0-of (p4 / play-01) :mod (r2 / record)))
(s / surprise-01 :arg0 (a / and :op1 (h / have-03 :arg0 (m / most) :arg1 (t / time :quant (m2 / more) :compared-to (h2 / have-03 :arg0 (m3 / most) :arg1 (t2 / time :quant (m4 / more))))) :op2 (h3 / have-03 :arg0 (p / person :quant (m5 / most)) :arg1 (i / item :quant (m6 / most) :arg1-of (i2 / include-91 :arg2 (i3 / item :mod (l / luxury) :example (i4 / item :mod (l2 / luxury))))))))
FAILED_TO_PARSE#Number of opening and closing brackets doesn't match.
(r / reveal-01 :arg1 (a / age-01 :arg1 (t / thing :arg1-of (a2 / age-01 :arg2 (t2 / temporal-quantity :quant (N / N-A) :unit (y / year))) :arg1-of (a3 / average-04)) :arg2 (a4 / at-least :op1 (t3 / temporal-quantity :quant (N2 / N-A) :unit (y2 / year)))))
(a / and :op1 (d / describe-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (p2 / police) :arg2 (t / thefts))) :arg1 (t2 / thing :quant-of (a2 / and :op1 (b / bicycle :quant (m / many)) :op2 (p3 / part :poss (p4 / person)))) :arg2 (c / city :mod (l / large :degree (m2 / most :quant 10))) :location (c2 / city :mod (l2 / large :degree (m3 / most :quant 10))) :location (c3 / city :mod (l3 / large :degree (m4 / most :quant 10)))) :op2 (a3 / august :arg1 (r / rate-entity-91 :arg1 (y / year :mod (t3 / this)) :arg2 (t4 / temporal-quantity :quant (N / N-A) :unit (y2 / year)))) :arg1-of (b2 / base-02 :arg2 (p5 / police)))
(d / difficult :degree (e / extreme) :domain (s / say-01 :arg1 (b / bicycle :arg1 (b2 / bicycle :quant (m / more)) :location (t / turku :location (t2 / turku)))) :degree (e2 / extreme))
(m / multi-sentence :snt1 (a / and :op1 (l / last-01 :arg1 (t / temporal-quantity :quant (N / N-A) :unit (h / hour)) :arg2 (t2 / temporal-quantity :quant (N2 / N-A) :unit (h2 / hour))) :op2 (p / person :quant 500,000 :arg0-of (v / view-01))) :snt2 (b / base-02 :arg1 (i / it) :arg2 (g / good)))
(m / multi-sentence :snt1 (r / reduce-01 :arg1 (t / thing :arg0-of (c / concern-02 :arg1 (r2 / reduce-01 :arg1 (t2 / tax-01))))) :snt2 (h / hard-02 :arg1 (t3 / tax-01) :degree (m2 / more) :mod (s / still)))
(a / attempt-01 :arg0 (e / embassy) :arg1 (c / contact-01 :arg0 (e2 / embassy) :arg1 (p / person :mod (t / that) :arg1-of (b / be-located-at-91 :arg2 (h / hin :mod (h2 / hua)))) :purpose (g / get-01 :arg0 (e3 / embassy) :arg1 (i / information :topic (t2 / town))) :mod (e4 / especially)))
(s / say-01 :arg0 (h / he) :arg1 (r / recommend-01 :arg1 (s2 / stir :polarity - :arg0 (w / we) :arg1 (p / panic-01 :arg1 (p2 / person) :quant (m / more :mod (a / any))) :location (p3 / person))) :arg2 (j / journalist))
(a / and :op1 (w / win-01 :arg0 (s / she) :arg1 (g / gold) :location (a2 / and :op1 (o / opera) :op2 (f / floor :quant 3))) :op2 (w2 / win-01 :arg0 (s2 / she) :time (y / year :mod (l / last)) :time (b / before :op1 (y2 / year :mod (l2 / last)))))
(a / and :op1 (p / print-01 :arg1 (f / flu :mod (b / bird)) :time (f2 / first)) :op2 (a2 / attack-01 :arg1 (b2 / bomb :mod (b3 / bird)) :time (y / year :mod (l / last))))
(s / say-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (g / government-organization :name (n / name :op1 "N-A")))) :arg1 (r / request-01 :arg0 (p2 / person :mod (c / country :name (n2 / name :op1 "N-A"))) :arg1 (h2 / hear-01 :arg0 (p3 / person) :arg1 (c2 / case-03 :arg1 (s2 / sympathize-01 :arg0 (p4 / person) :arg1 (s3 / sport :poss (p5 / person)))) :arg2 (c3 / court))))
(s / state-01 :arg0 (s2 / she) :arg1 (t / this) :arg2 (i / i))
(b / base-02 :arg1 (c / claim-01) :arg2 (f / fact :name (n / name :op1 (i / inflamed) :op2 (i2 / inflamed) :op3 (i3 / inflamed)) :mod (t / this)))
(e / explain-01 :li 1 :arg1 (p / possible-01 :arg1 (l / live-01 :arg0 (p2 / person :mod (a / ambitious)) :manner (w / way :arg0-of (b / bring-up-02 :arg1 (l2 / life :poss (p3 / person)) :duration (t / temporal-quantity :quant (N / N-A) :unit (y / year) :mod (e2 / extra)))))))
(m / multi-sentence :snt1 (k / kaidesoja :mode (i / interrogative)) :snt2 (a / apologize-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (s / service :mod (m2 / military)) :arg2 (p2 / president :mod (v / vice)))) :arg1 (m3 / mishap :arg0 (p3 / person))))
(m / murder-01 :arg0 (f / family :arg1-of (h / have-org-role-91 :arg0 (w / woman) :arg2 (m2 / member)) :arg1-of (m3 / murder-01 :time (b / before :op1 (n / now) :quant (t / temporal-quantity :quant (N / N-A) :unit (w2 / week))))) :arg1 (w3 / wish-01 :arg0 (p / person) :arg1 (d / donate-01 :arg0 (p2 / person) :arg2 (w4 / work-01 :arg0 (p3 / police)))) :arg1-of (i / instead-of-91 :arg2 (m4 / murder-01 :arg0 (f2 / family :arg1-of (h2 / have-org-role-91 :arg0 (w5 / woman) :arg2 (m5 / member))) :arg1 (f3 / family :arg1-of (h3 / have-org-role-91 :arg0 (w6 / woman) :arg2 (m6 / member))))) :time (b2 / before :op1 (n2 / now) :quant (t2 / temporal-quantity :quant (N2 / N-A) :unit (w7 / week))))
(h / have-rel-role-91 :arg0 (i / i) :arg1 (p / person :mod (g / good)) :arg2 (f / friend))
(c / contrast-01 :arg1 (p / possible-01 :arg1 (m / megalomaniac :arg1 (i / i) :degree (b / bit))) :arg2 (m2 / manage-02 :arg0 (w / we) :arg1 (r / retain-01 :arg0 (w2 / we) :arg1 (s / spirit :mod (f / flow-01))) :time (t / time :arg1-of (s2 / same-01))))
(b / be-located-at-91 :arg1 (t / thing :ord (o / ordinal-entity :value 6)) :arg2 (p / point :arg2-of (t2 / total-01)))
(s / shock-01 :arg1 (p / person :mod (e / economy)) :time (h / hear-01 :polarity - :arg1 (v / voices :poss (p2 / person))))
(h / have-03 :arg0 (s / space :quant (a / amr-unknown)) :arg1 (s2 / space :quant (a2 / amr-unknown)) :condition (v / vanished :arg0 (t / they)))
(p / phone-number-entity :value (N / N-A))
(b / begin-01 :arg0 (w / we) :arg1 (i / increase-01 :arg0 (w2 / we) :arg1 (a / asset :mod (c / cash))))
(a / amount :arg1-of (h / high-02 :degree (m / most)) :domain (t / this) :arg1-of (f / fund-01 :arg0 (e / estate :quant 9 :mod (r / real))) :arg1-of (s / say-01 :arg0 (t2 / thing :arg1-of (f2 / fund-01 :arg0 (e2 / estate :mod (r2 / real)) :location (c / country :name (n / name :op1 "N-A"))))) :arg1-of (h2 / high-02 :degree (m2 / most)) :domain (t3 / this))
(a / awake :arg1 (c / city :location (c2 / city :name (n / name :op1 "N-A"))) :degree (f / full) :time (a2 / already) :concession (h / hour :mod (s / small) :domain (c3 / city)))
(c / cause-01 :polarity - :arg0 (t / thing :arg1-of (f / fund-01 :arg0 (e / estate :arg1-of (i / include-91 :arg2 (e2 / estate :mod (e3 / estate :mod (r / real)) :location (c2 / country :name (n / name :op1 "N-A")))) :quant (m / multiple :op1 1)))) :arg1 (d / deal-01 :arg0 (e4 / estate :quant 1 :arg1-of (i2 / include-91 :arg2 (e5 / estate :location (c3 / country :name (n2 / name :op1 "N-A")))) :mod (r2 / real) :mod (r3 / real)) :time (d2 / day :time (a / after :op1 (v / vote-01 :mod (b / brexit))))))
(s / say-01 :arg0 (d / data :mod (t / this)) :arg1 (g / go-01 :arg1 (m / monetary-quantity :arg2-of (p / price-01 :arg1 (e / estate)) :mod (r / real) :quant (a / all)) :arg4 (r2 / rate-entity-91 :arg1 (m2 / monetary-quantity :quant (N / N-A) :unit (p2 / pound)) :arg2 (t2 / temporal-quantity :quant (N2 / N-A) :unit (y / year))) :arg4 (r3 / rate-entity-91 :arg1 (m3 / monetary-quantity :quant (N3 / N-A) :unit (p3 / pound)) :arg2 (t3 / temporal-quantity :quant (N4 / N-A) :unit (y2 / year)))))
(t / train-01 :arg0 (a / and :op1 (p / police) :op2 (p2 / person :arg0-of (h / have-org-role-91 :arg2 (p3 / person :arg1-of (e / expert-01 :arg2 (f / force :mod (d / defense))))))) :arg2 (a2 / and :op1 (p4 / person :arg0-of (h2 / have-org-role-91 :arg1 (p5 / police) :arg2 (p6 / person :arg1-of (e2 / expert-01 :arg2 (f2 / force :mod (d2 / defense)))))) :op2 (p7 / person :arg0-of (h3 / have-org-role-91 :arg2 (p8 / person :arg1-of (e3 / expert-01 :arg2 (f3 / force :mod (d3 / defense))))))) :mod (a3 / also))
(s / say-01 :arg0 (t / thing :arg1-of (p / plan-01)) :arg1 (p2 / possible-01 :arg1 (s2 / see-01 :arg1 (w / work-01 :location (a / airport :mod (h / helsinki))) :location (a2 / airport :mod (h2 / helsinki)) :time (y / year :mod (n / next)))))
(c / contrast-01 :arg1 (e / estimate-01 :arg1 (p / person :mod (o / old :degree (m / most))) :arg2 (t / temporal-quantity :quant (N / N-A) :unit (y / year))) :arg2 (p2 / possible-01 :arg1 (o2 / or :op1 (p3 / plus :op1 (t2 / temporal-quantity :quant (N2 / N-A) :unit (y2 / year))) :op2 (t3 / temporal-quantity :quant (N3 / N-A) :unit (y3 / year)))))
(s / sum :mod (e / enormous) :mod (t / true) :domain (r / rate-entity-91 :arg1 (m / monetary-quantity :quant 1000 :unit (d / dollar)) :arg2 (t2 / temporal-quantity :quant (N / N-A) :unit (y / year))))
(t / true-01 :arg1 (t2 / this) :mod (e / especially) :time (c / come-12 :arg1 (a / and :op1 (c2 / change-01 :arg1 (c3 / character :name (n / name :op1 (t3 / titular))) :arg2 (s / scene :quant 1) :arg3 (s2 / scene :quant 1) :arg4 (a2 / another)) :op2 (t4 / true :domain (s3 / same-01 :arg1 (t5 / thing :arg1-of (s4 / same-01)))))) :mod (e2 / especially))
(b / base-02 :arg1 (s / story :quant 3 :mod (s2 / short)) :arg2 (s3 / story :mod (s4 / short)))
(a / and :op1 (p / put-01 :arg0 (a2 / and :op1 (h / hand :part-of (t / they)) :op2 (h2 / hand :part-of (t2 / they))) :arg1 (h3 / hand :part-of (t3 / they)) :arg2 (t4 / term :mod (e / elect-01)) :time (a3 / already)) :op2 (a4 / admit-01 :arg0 (i / i) :arg1 (c / capable-01 :polarity - :arg1 (g / government-organization :arg0-of (g2 / govern-01)) :arg2 (f / follow-02 :arg0 (g3 / government-organization) :arg1 (p2 / program :poss (g4 / government-organization))))) :op3 (s / slowed :polarity - :arg1 (i2 / indebtedness) :mod (e2 / even)))
(r / reject-01 :arg1 (d / debt :arg1-of (p / propose-01 :arg0 (a / ally-01 :mod (l / left))) :arg1-of (p2 / propose-01 :arg0 (a2 / ally-01 :mod (l2 / left)))) :arg1-of (c / cause-01 :arg0 (c2 / consider-01 :arg1 (r2 / responsible-02 :polarity - :arg1 (d2 / debt)))) :li 2015)
(m / multi-sentence :snt1 (p / party :mode (i / interrogative) :mod (p2 / province :name (n / name :op1 "N-A")) :domain (t / this)) :snt2 (p3 / party :mode (i2 / interrogative) :mod (c / coalition)) :snt3 (p4 / party :mod (f / finns)) :time (d / date-entity :decade (N / N-A)))
(m / multi-sentence :snt1 (p / person :arg0-of (d / drive-01)) :snt2 (s / show-01 :arg0 (t / test-01 :time (d2 / date-entity :decade (N / N-A))) :arg1 (p2 / permillage :quant 0,75)))
(i / investigate-01 :arg1 (i2 / incident) :arg2 (a / aggravate-01 :arg1 (e / endanger-01 :arg1 (s / safe-01 :arg1 (r / road))) :arg1-of (i3 / include-91 :arg2 (t / thing :mod (o / other)))))
(a / and :op1 (r / recovered :arg0 (p / person :arg0-of (h / have-org-role-91 :arg2 (p2 / president))) :arg1 (f / finance)) :op2 (p3 / possible-01 :arg1 (a2 / arrange-01 :arg1 (e / event) :time (y / year :mod (n / next)) :mod (a3 / also))) :time (d / date-entity :decade (N / N-A)))
(m / multi-sentence :snt1 (d / discover-01 :arg1 (e / enough :mod (s / small) :domain (t / thing :arg1-of (p / precede-01)) :purpose (p2 / penetrate :arg1 (s2 / skin)))) :snt2 (m2 / monkey :time (d2 / date-entity :decade (N / N-A))))
(m / move-01 :arg1 (f / family) :arg2 (h / helsinki) :time (a / age-01 :arg1 (g / girl) :arg2 (t / temporal-quantity :quant (N / N-A) :unit (y / year))))
FAILED_TO_PARSE#Number of opening and closing brackets doesn't match.
FAILED_TO_PARSE#Number of opening and closing brackets doesn't match.
(c / choose-01 :arg0 (v / volley :name (n / name :op1 (b / beaches) :op2 (b2 / beaches))) :arg1 (v2 / volleyball :mod (c2 / counter)) :arg1-of (n2 / natural-03) :time (a / already) :time (j / junior :arg1 (s / she) :mod (j2 / junior)))
(c / cause-01 :arg0 (t / tool :mod (l / lenses) :poss (i / it)) :arg1 (a / and :op1 (a2 / allow-01 :arg0 (p / person :arg0-of (u / use-01) :mod (d / day) :quant (s / some :op1 150000000)) :arg1 (r / reality)) :op2 (p2 / play-01 :arg0 (p3 / person) :manner (i2 / identity) :manner (w / way :mod (w2 / way :instrument-of (b / border-01 :arg1 (p4 / person) :arg2 (a3 / absurd)))))))
(s / say-01 :arg0 (r / report-01))
(k / know-01 :arg0 (s / she) :arg1 (a / and :op1 (4 / 4-0 :arg1 (p / person :mod (c / country :name (n / name :op1 "Britain"))) :location (t / tournament :name (n2 / name :op1 (o / olympic)))) :op2 (t2 / tied :arg1 (p2 / person) :arg2 (p3 / place :ord (o2 / ordinal-entity :value 1) :location (g / group :poss (p4 / person) :prep-with (p5 / person :arg0-of (h / have-org-role-91 :arg1 (g2 / group :poss (p6 / person)) :arg3 (l / lead-02 :arg0 (p7 / person) :arg1 (c2 / country))))) :arg1-of (r / remain-01 :arg3 (n3 / name :op1 (u / unbeaten) :op2 (2 / 2-0) :op3 (22 / 2-0) :op4 (u2 / unbeaten)))))) :location (h2 / here))
(a / acknowledge-01 :polarity - :arg0 (s / sports :mod (t / that) :mod (t2 / that)) :arg1 (a2 / and :op1 (s2 / shooting :mod (a3 / air-pistol)) :op2 (s3 / shooting :mod (a4 / archery)) :op3 (b / badminton :mod (a5 / air-pistol)) :op4 (t3 / taekwondo :mod (b2 / badminton))) :mod (u / universal))
(c / contrast-01 :arg2 (p / possible-01 :arg1 (c2 / change-01 :arg1 (t / that))))
(s / say-01 :arg0 (p / person :arg0-of (a / analyze-01)) :arg1 (p2 / put-01 :arg0 (p3 / protest-01) :arg1 (a2 / and :op1 (c / country :name (n / name :op1 "United" :op2 "States")) :op2 (w / west :part-of (c2 / country))) :arg2 (p4 / position :mod (a3 / awkward))))
(b / bowls :mod (b2 / brown-rice))
(s / say-01 :arg0 (c / couple) :arg1 (g / gain-02 :arg0 (c2 / couple) :arg1 (u / understand-01 :arg0 (c3 / couple) :arg1 (h / habit :mod (e / eat-01) :poss (p / person :arg0-of (h2 / have-rel-role-91 :arg1 (p2 / person :arg0-of (h3 / have-rel-role-91 :arg2 (m / mother))) :arg2 (m2 / mother))) :arg2 (p3 / person :arg0-of (h4 / have-rel-role-91 :arg1 (c4 / couple) :arg2 (m3 / mother))) :mod (g2 / great :degree (m4 / more)) :arg1-of (m5 / mean-01 :arg2 (l / let-01 :arg0 (p4 / person) :arg1 (l2 / let-down-04 :arg0 (p5 / person) :arg1 (f / food) :mod (t / total))))))) :medium (w / write-01 :arg0 (c5 / couple) :arg1 (b / book)))
(r / raise-01 :arg0 (s / she) :arg1 (i / issue-02) :time (s2 / speak-01 :arg0 (s3 / speak-01 :mod (e / economy) :location (m / michigan))))
(i / instead-of-91 :arg2 (o / offer-01 :arg0 (p / person :mod (c / country :name (n / name :op1 "N-A"))) :arg1 (o2 / opportunity :purpose (d / dialed :arg0 (p2 / person) :arg1 (c2 / country :name (n2 / name :op1 "N-A")) :path (c3 / center :arg1-of (c4 / call-01 :arg2 (n3 / name)))))) :arg1-of (i2 / instead-of-91))
(s / say-01 :arg0 (s2 / skinner :mod (2 / 23-year-old)) :arg1 (c / compare-01 :arg1 (i / it) :arg2 (s3 / seismic-quantity :quant (N / N-A))))
(g / get-22 :arg0 (y / you) :arg1 (w / win-01 :arg0 (y2 / you) :arg1 (i / it) :arg2 (p / person :arg0-of (h / have-rel-role-91 :arg1 (y3 / you) :arg2 (s / significant-other)))))
(c / contrast-01 :arg1 (e / event :time (d / day) :mod (o / only) :domain (i / it)) :arg2 (n / news :mod (g / good :degree (f / further)) :beneficiary (c2 / country :name (n2 / name :op1 "N-A")) :domain (i2 / it)))
(a / attract-01 :arg0 (i / issue-02) :arg1 (b / book :mod (h / huge) :quant (n / number :mod (h2 / huge)) :arg1-of (c / count-01 :time (y / year :mod (l / last))) :arg1-of (i2 / include-91 :arg2 (t / tome :mod (8 / 832-page) :time (y2 / year :mod (l2 / last))) :prep-as (c2 / content :mod (a2 / advertising)))) :arg1-of (c3 / cause-01 :arg0 (r / resembling :arg0 (b2 / book :mod (c4 / coffee)) :arg1 (b3 / book :mod (c5 / coffee)) :manner (c6 / close :degree (m / more)))))
(a / and :op2 (b / be-located-at-91 :arg1 (s / she) :arg2 (t / television :mod (r / reality)) :arg1-of (p / possible-01) :mod (j / just) :arg1-of (p2 / possible-01) :mod (j2 / just)))
(d / die-01 :arg1 (s / she) :location (s2 / scene))
(b / burn-01 :arg1 (a / and :op1 (e / evaporated :poss (i / it)) :op2 (v / vapor :arg1 (w / water :poss (i2 / it)))) :manner (l / light :mod (u / ultraviolet)))
(s / say-01 :arg0 (p / person :name (n / name :op1 "jeremy" :op2 "hunt") :arg0-of (h / have-org-role-91 :arg2 (s2 / secretary :mod (h2 / health)))) :arg1 (i / impose-01 :arg1 (c / contract-02) :arg2 (m / medic :arg1 (c2 / contract-02))))
(r / relieved :arg1 (a / and :op1 (c / company :arg0-of (o / operate-01)) :op2 (c2 / company :mod (c3 / charter)) :op3 (c4 / company :mod (c5 / charter))) :time (c6 / crash-01 :arg1 (f / fly-01) :time (e / eventual)) :mod (c7 / certain) :location (h / here))
(i / include-91 :arg1 (t / thing :quant 1 :arg1-of (k / key-02) :arg1-of (m / mean-01 :arg2 (f / facility :name (n / name :op1 "N-A") :time (r / recent)))) :arg2 (b / be-located-at-91 :arg1 (f2 / facility :name (n2 / name :op1 "N-A") :arg1-of (m2 / mean-01 :arg2 (a / and :op1 (c / country :name (n3 / name :op1 "N-A")) :op2 (s / side :mod (o / opposite))))) :arg2 (a2 / amr-unknown)))
(n / name-02 :arg0 (h / he) :arg1 (i / ivanov :mod (m / mr)) :arg2 (p / person :quant 1 :arg1-of (i2 / include-91 :arg2 (p2 / person :quant 5 :arg1-of (t / trust-01 :arg0 (h2 / he))))) :time (c / come-12 :arg1 (m2 / mr)))
(g / go-08 :arg1 (a / all) :arg2 (w / well :degree (v / very)) :manner (h / happy))
(g / go :arg0 (p / person :arg0-of (p2 / play-01)) :arg1 (l / look-01 :arg0 (p3 / person) :arg1 (p4 / pokémons :arg1-of (t / tracked :arg2 (a / and :op1 (g2 / gps :mod (p5 / phone) :poss (p6 / person)) :op2 (c / captured :arg1 (p7 / person))) :path (s / screenshot :prep-on (o / or :op1 (- / -rrb- :mod (p8 / phone) :poss (p9 / person)) :op2 (c2 / capture-01 :arg1 (p10 / person))))))) :time (f / find-01 :arg0 (p11 / person) :arg1 (l2 / look-01 :arg0 (p12 / person) :arg1 (p13 / pokémons :arg1 (p14 / person)))) :manner (n / nutshell))
(a / and :op2 (k / know-01 :arg0 (i / i) :arg1 (t / thing :arg1-of (k2 / know-01 :arg0 (i2 / i) :mod (r / really))) :mod (s / still)))
(t / traced :arg1 (c / casing :name (n / name :op1 (s / shell) :op2 (s2 / shell) :op3 (c2 / casings))) :arg2 (a / and :op1 (w / weapon :mod (s3 / style :mod (a2 / assault)) :arg1-of (d / differ-02)) :op2 (w2 / weapon :mod (s4 / style :mod (a3 / assault)) :arg1-of (d2 / differ-02))))
(h / have-03 :arg0 (p / person :arg0-of (h2 / have-03 :arg1 (a / attack-01 :quant 1) :time (a2 / already))) :arg1 (r / risk-01 :arg2 (h3 / have-03 :arg1 (a3 / another)) :arg1-of (h4 / high-02 :degree (m / more))))
(p / pleased :arg1 (w / we) :arg2 (p2 / possible-01 :arg1 (i / increase-01 :arg0 (w2 / we) :arg1 (o / option :mod (t / treat-03) :arg2-of (a / available-02 :arg1 (p3 / person :arg0-of (s / stand-01 :arg1 (p4 / person) :arg2 (b / benefit-01 :arg0 (i2 / it) :arg1 (p5 / person))) :quant (m / many)))))) :time (d / date-entity :year (N / N-A)))
(p / put-03 :arg1 (l / limit-01 :arg1 (r / request-01 :arg1 (v / vote-01 :mod (a / automatic) :mod (a2 / automatic)))) :arg2 (r2 / request-01 :mod (t / three-year)))
(c / cause-01 :arg0 (s / see-01 :arg0 (i / i) :arg1 (r / resemblance :mod (h / huge)) :arg1-of (p / personal-02)) :arg1 (s2 / see-01 :arg0 (i2 / i) :arg1 (r2 / resemblance :mod (h2 / huge)) :arg1-of (p2 / personal-02) :arg2-of (e / except-01 :arg1 (a / and :op1 (h3 / hair :arg1-of (f / facial)) :op2 (h4 / hair :arg1-of (f2 / facial))))))
(a / amr-unknown :manner-of (d / defend-01))
(s / say-01 :arg0 (h / he) :arg1 (a / and :op1 (k / kid :domain (i / i) :degree (f / fair)) :op2 (p / put-01 :arg0 (i2 / i) :arg1 (t / thing :mod (s2 / sort :mod (a2 / all))) :arg2 (m / mouth :part-of (i3 / i)) :location (m2 / mouth :part-of (i4 / i))) :op3 (e / eat-01 :arg0 (i5 / i) :arg1 (a3 / and :op1 (w / worm) :op2 (w2 / water :arg1-of (m3 / muddy))))) :medium (m4 / movie :arg1-of (m5 / make-01 :topic (i6 / it))))
(p / possible-01 :polarity - :arg1 (s / see-01 :arg0 (w / we) :arg1 (t / thing :arg1-of (b / believe-01 :arg0 (p2 / police))) :location (h / here)))
(c / cause-01 :arg0 (q / quiet :arg1 (w / we) :degree (s / so) :location (h / here)) :arg1 (u / use-01 :polarity - :arg1 (w2 / we) :arg2 (t / that)))
(f / force :mod (a / air) :mod (p / portuguese) :arg1-of (p2 / p-3c :arg2 (l / low-04 :degree (i / incredible))) :arg0-of (s / swooped :arg1 (p3 / plane) :degree (i2 / incredible)))
(c / cause-01 :arg0 (h / have-03 :arg0 (p / person :mod (c2 / country :name (n / name :op1 "N-A"))) :arg1 (p2 / part :part-of (m / mainland)) :time (s / summer :mod (t / this))) :arg1 (k / kill-01 :arg0 (p3 / person) :arg1 (p4 / person :quant 4) :location (i / island :mod (m2 / madeira))))
(l / leave-17 :arg1 (p / part :source (t / that) :arg1-of (u / use-01 :arg2 (a / and :op1 (s / shortened :arg1 (q / queues)) :op2 (b / buy-01 :arg1 (o / operation :beneficiary (p2 / person :arg0-of (h / have-rel-role-91 :arg2 (p3 / patient)))))))))
(m / mark-01 :arg0 (p / person :arg2-of (c / criminal-03)) :arg1 (d / door :mod (f / front) :prep-with (s / stick)) :manner (o / or :op1 (s2 / stick) :op2 (p2 / pin) :op3 (p3 / piece :mod (t / test) :purpose (t2 / test-01)) :op4 (t3 / test-01 :mode (i / interrogative) :arg1 (o2 / occupants) :mod (r / really))) :prep-in (m2 / method :mod (t4 / this)))
(b / block-01 :arg0 (o / organization :name (n / name :op1 "senate" :op2 "republicans")) :arg1 (c / confirmation :poss (p / person :arg0-of (h / have-org-role-91 :arg2 (p2 / president)))) :time (s / since :op1 (n2 / nominate-01 :arg0 (p3 / person :arg0-of (h2 / have-org-role-91 :arg2 (p4 / president))) :arg1 (h3 / he) :location (m / marched))))
(s / say-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (p2 / person :arg0-of (h2 / have-org-role-91 :arg2 (s2 / spokeswoman))) :arg2 (s3 / spokeswoman))) :arg1 (s4 / speak-01 :polarity - :arg0 (p3 / person) :arg2 (p4 / person :name (n / name :op1 "Clinton")) :arg1-of (d / direct-02) :topic (a / and :op1 (n2 / nominate-01 :arg1 (p5 / person)) :op2 (s5 / speculating :arg1 (p6 / person)))) :time (l / late :degree (m / more)))
(l / love-01 :arg0 (m / man :mod (m2 / middle-aged)) :arg1 (v / vinyl))
(h / have-03 :arg0 (p / person :arg0-of (s / say-01 :arg1 (h2 / have-03 :arg0 (i / i) :arg1 (t / thing :arg1-of (s2 / say-01 :arg0 (p2 / person)) :mod (r / record)) :degree (t2 / total)))) :arg1 (p3 / person :arg0-of (p4 / play-01) :mod (r2 / record)))
(m / multi-sentence :snt1 (c / contrast-01 :arg2 (p / possible-01 :arg1 (m2 / mean-01 :arg1 (h / hunger-01 :arg0 (p2 / person :arg0-of (h2 / hunger-01 :arg1 (i / item)) :mod (a / any)) :arg1 (m3 / money :quant (m4 / more)) :arg2 (i2 / industry)))) :arg2 (p3 / possible-01 :arg1 (m5 / mean-01 :arg1 (h3 / hunger-01 :arg0 (p4 / person :mod (a2 / any) :arg0-of (h4 / hunger-01 :arg1 (i3 / item))) :arg1 (m6 / money :quant (m7 / more)) :arg2 (i4 / industry))))) :snt2 (c2 / complain-01 :mode (i5 / imperative) :arg0 (y / you)))
(a / and :op1 (c / compete-02 :arg0 (i / industry) :arg1 (i2 / industry)) :op2 (a2 / affect-01 :arg0 (c2 / compete-02) :arg1 (d / drop-01 :arg1 (p / price-01))) :mod (a3 / also))
(s / swimming :location (a / around :op1 (n / north)) :location (a2 / around :op1 (n2 / north)))
(s / say-01 :arg1 (r / reduce-01 :polarity - :arg1 (n / number :quant-of (s2 / sell-01 :arg0 (d / department) :arg1 (s3 / sell-01))) :purpose (e / ensure-01 :arg0 (n2 / number) :arg1 (e2 / excellent-02 :arg1 (s4 / service :mod (c / customer))))) :medium (p / press) :mod (a / also))
(c / cup)
(m / multi-sentence :snt1 (c / contrast-01 :arg1 (b / begin-01 :arg1 (b2 / battle-01 :arg0 (d / drone :time (d2 / date-entity :decade (N / N-A)) :location (r / rio))) :arg2 (b3 / battle-01 :location (r2 / rio)))) :snt2 (g / get-22 :arg0 (i / individual :time (d3 / date-entity :decade (N2 / N-A))) :arg1 (t / talents :arg0 (i2 / individual) :arg1 (s / stand :poss (i3 / individual) :arg1-of (e / empty-02)))))
(m / multi-sentence :snt1 (f / foundation) :snt2 (p / possible-01 :arg1 (s / see-01 :arg0 (w / website :time (d / date-entity :decade (N / N-A))) :arg1 (t / thing :arg2-of (n / name-01 :arg1 (g / guardians :location (m2 / map :arg1-of (s2 / same-01)))) :arg2-of (b / be-located-at-91 :arg1 (i / information :mod (g2 / greenspace))))) :li 1))
(c / contrast-01 :arg1 (r / risk-01 :arg1 (f / foundation) :arg2 (a / act-02 :arg0 (f2 / foundation) :location (o / or :op1 (u / unethically) :op2 (c2 / commercially)))) :arg2 (r2 / recommend-01 :arg1 (p / possible-01 :polarity - :arg1 (r3 / risk-01))))
(e / experiment-01 :arg0 (j / jury :mod (p / peer) :mod (p2 / peer)) :arg1 (b / begin-01 :arg1 (p3 / prevent-01 :arg0 (j2 / jury) :arg1 (g / get-05 :arg1 (p4 / person :mod (y / young)) :arg2 (c / circle :mod (v / vicious) :consist-of (c2 / crime-02))))))
(o / organize-01 :arg0 (p / person :quant 1 :arg1-of (i / include-91 :arg2 (p2 / person :arg0-of (o2 / organize-01 :arg1 (l / letter)))) :arg0-of (o3 / organize-01 :arg1 (l2 / letter))) :arg1 (l3 / letter))
(s / satisfy-01 :arg0 (a / and :op1 (p / person :arg0-of (h / head-01 :arg1 (s2 / sport :mod (y / yle)))) :op2 (p2 / person :arg0-of (h2 / have-org-role-91 :arg2 (p3 / pokkinen))) :op3 (p4 / person :arg0-of (v / view-01))) :arg1 (d / divide-02 :arg1 (d2 / device :arg1-of (d3 / differ-02) :quant (s3 / several))) :arg2 (p5 / person :arg0-of (v2 / view-01)) :time (o / ordinal-entity :value 1))
(m / multi-sentence :snt1 (p / pleased :arg0 (p2 / person :arg0-of (h / have-org-role-91 :arg2 (m2 / minister :mod (p3 / prime)))) :arg1 (a / and :op1 (p4 / person :arg0-of (h2 / have-org-role-91 :arg2 (m3 / minister :mod (p5 / prime)))) :op2 (p6 / person :arg0-of (h3 / have-org-role-91 :arg2 (m4 / minister :mod (p7 / prime)))) :op3 (p8 / person :arg0-of (h4 / have-org-role-91 :arg2 (m5 / minister :mod (p9 / prime)))) :op4 (p10 / person :arg0-of (h5 / have-org-role-91 :arg2 (m6 / minister :mod (p11 / prime)))) :op5 (p12 / person :arg0-of (h6 / have-org-role-91 :arg2 (m7 / minister :mod (p13 / prime)))) :op6 (p14 / person :arg0-of (h7 / have-org-role-91 :arg2 (m8 / minister :mod (p15 / prime)))) :op7 (p16 / person :arg0-of (h8 / have-org-role-91 :arg2 (m9 / minister :mod (p17 / prime)))))) :snt2 (m10 / message-01 :arg0 (m11 / message :time (d / date-entity :decade (N / N-A)))))
(m / multi-sentence :snt1 (r / recommend-01 :arg1 (c / cancel-01 :polarity - :arg0 (p / person :arg0-of (t / tour-01) :mod (t2 / that) :mod (t3 / that) :arg0-of (p2 / plan-01 :arg1 (t4 / travel-01 :arg0 (p3 / person) :arg4 (c2 / country)))) :arg1 (j / journey :arg0 (p4 / person)))) :snt2 (c3 / contrast-01 :arg1 (r2 / recommend-01 :arg1 (f / follow-02 :polarity - :arg0 (p5 / person) :arg1 (j2 / journey :arg0 (p6 / person)))) :arg2 (r3 / recommend-01 :arg1 (f2 / follow-02 :arg0 (p7 / person) :arg1 (e / embassy) :time (d / date-entity :decade (N / N-A))))))
(r / report-01 :arg0 (a / authority :arg1-of (l / local-02)) :arg1 (a2 / and :op1 (e / explode-01 :arg1 (b / bomb :quant 4 :arg2-of (t / total-01 :arg1 (b2 / bomb :quant 4))) :time (y / yesterday)) :op2 (e2 / explode-01 :arg1 (b3 / bomb :quant 4) :time (y2 / yesterday))) :arg2 (p / person :arg0-of (t2 / tour-01) :mod (p2 / popular)))
(s / say-01 :arg0 (h / he) :arg1 (h2 / have-purpose-91 :mode (i / interrogative) :arg2 (d / destroy-01 :arg1 (t / tourism :location (c / country)))) :arg1-of (h3 / have-purpose-91 :arg2 (d2 / destroy-01 :arg1 (t2 / tourism :location (c2 / country)) :time (s2 / since :op1 (a / attack-01 :arg1 (p / person :arg0-of (t3 / tour-01)) :quant (a2 / all))))))
(m / multi-sentence :snt1 (h / have-org-role-91 :arg0 (p / person :arg0-of (h2 / have-org-role-91 :arg2 (p2 / professor))) :arg1 (o / organization :name (n / name :op1 "ministry" :op2 "of" :op3 "the" :op4 "interior")) :arg2 (p3 / professor) :time (d / date-entity :decade (N / N-A))) :snt2 (d2 / define-01 :arg1 (p4 / policy :arg0-of (a / access-01)) :time (d3 / date-entity :decade (N2 / N-A))))
(m / multi-sentence :snt1 (s / say-01 :arg0 (p / person :name (n / name :op1 "voutilainen")) :arg1 (p2 / possible-01 :polarity - :arg1 (b / base-02 :arg1 (a / access-01 :arg1 (d / document)) :arg2 (p3 / person :arg0-of (h / have-org-role-91 :arg2 (o / official)))))) :snt2 (p4 / policy :time (d2 / date-entity :decade (N / N-A))))
(c / catch-01 :arg1 (w / woman :arg1-of (b / bear-02 :location (c2 / car :poss (w2 / woman)))) :location (c3 / car :poss (w3 / woman)))
(t / tell-01 :arg0 (s / she) :arg1 (w / want-01 :arg0 (s2 / she) :arg1 (r / reach-01 :arg0 (s3 / she) :arg1 (w2 / weight :arg1-of (n / normal-02)) :time (f / final) :arg1-of (c / cause-01 :arg0 (a / away :quant 10 :mod (m / mass-quantity :quant (N / N-A) :unit (k / kilogram)))))) :arg2 (s4 / she) :time (t2 / then))
(m / multi-sentence :snt1 (o / obligate-01 :arg2 (r / return-01 :arg1 (p / person :arg0-of (h / have-org-role-91 :arg2 (m2 / minister :mod (p2 / prime)))) :arg4 (p3 / path :mod (d / develop-02 :arg1 (d2 / democracy)) :arg0-of (w / write-01 :arg1 (a / and :op1 (p4 / person :arg0-of (h2 / have-org-role-91 :arg2 (m3 / minister :mod (p5 / prime)))) :op2 (p6 / person :arg0-of (h3 / have-org-role-91 :arg2 (m4 / minister :mod (p7 / prime)))) :op3 (p8 / person :arg0-of (h4 / have-org-role-91 :arg2 (m5 / minister :mod (f / foreign)))) :op4 (p9 / person :arg0-of (h5 / have-org-role-91 :arg2 (m6 / minister :mod (f2 / foreign)))) :op5 (p10 / person :arg0-of (h6 / have-org-role-91 :arg2 (m7 / minister :mod (f3 / foreign)))) :op6 (p11 / person :arg0-of (h7 / have-org-role-91 :arg2 (m8 / minister :mod (f4 / foreign)))) :op7 (p12 / person :arg0-of (h8 / have-org-role-91 :arg2 (m9 / minister :mod (f5 / foreign)))) :op7 (p13 / person :arg0-of (h9 / have-org-role-91 :arg2 (m10 / minister :mod (f6 / foreign))))))))) :snt2 (a2 / answer-01 :arg0 (a3 / and :op1 (p14 / person :arg0-of (h10 / have-org-role-91 :arg2 (m11 / minister :mod (p15 / prime)))) :op2 (p16 / person :arg0-of (h11 / have-org-role-91 :arg2 (m12 / minister :mod (f7 / foreign)))))))
(m / multi-sentence :snt1 (g / grandson :mode (i / interrogative) :domain (s / successor :poss (h / he))) :snt2 (k / karl :arg0 (p / person :name (n / name :op1 "anton" :op2 "vaino") :arg0-of (l / lead-02 :arg1 (c / country :name (n2 / name :op1 "N-A"))) :mod (c2 / communism)) :arg1 (p2 / person)))
(m / multi-sentence :snt1 (p / possible-01 :mode (i / interrogative) :arg1 (s / see-01 :arg0 (y / you) :arg1 (i2 / it))) :snt2 (s2 / see-01 :arg0 (y2 / you) :arg1 (i3 / it) :location (h / here)))
(s / say-01 :arg0 (p / person :arg0-of (h / have-03 :polarity - :arg1 (t / thing :arg1-of (r / require-01) :arg1-of (r2 / require-01)))) :arg1 (u / up :arg1 (o / or :op1 (p2 / person :arg0-of (h2 / have-03 :polarity - :arg1 (t2 / train-01 :arg1-of (r3 / require-01)))) :op2 (p3 / person :arg0-of (h3 / have-org-role-91 :arg2 (r4 / reservists))))))
(f / find-01 :arg1 (o / or :op1 (t / thing :arg1-of (t2 / take-01 :arg3 (r / risk-01 :arg2 (h / health))) :arg0-of (e / enable-01 :arg1 (r2 / risk-01 :arg2 (h2 / health)))) :op2 (e2 / exceeds :arg1 (t3 / thing) :arg2 (a / and :op1 (r3 / room :mod (u / utility)) :op2 (s / staircase :location (b / basement)) :op3 (r4 / room :purpose (l / live-01)) :op4 (r5 / room :location (b2 / basement)) :op5 (b3 / basement)))))
(m / multi-sentence :snt1 (f / finns :quant 1 :arg1-of (i / include-91 :arg2 (f2 / finns :mod (f3 / finns)))) :snt2 (a / artists :mode (i2 / interrogative) :time (a2 / already) :duration (o / over :op1 (t / temporal-quantity :quant (N / N-A) :unit (y / year)))))
(m / multi-sentence :snt1 (a / and :op2 (l / listen-01 :arg1 (p / person :mod (e / economy))) :condition (a2 / and :op1 (l2 / listen-01 :arg1 (p2 / person :mod (e2 / economy))) :op2 (u / understand-01 :arg0 (p3 / person) :arg1 (p4 / person :mod (e3 / economy))))) :snt2 (a3 / and :op1 (l3 / listen-01 :arg0 (p5 / person :mod (e4 / economy)) :arg1 (e5 / elite :mod (s / such)) :arg1-of (c / cause-01 :arg0 (t / think-01 :polarity - :arg0 (p6 / person :mod (e6 / economy)) :arg1 (h / have-03 :arg0 (p7 / person) :arg1 (a4 / anything) :prep-in (c2 / common)))))))
(h / have-03 :arg0 (p / person :mod (c / country :name (n / name :op1 "N-A"))) :arg1 (j / job :quant (a / amr-unknown)) :condition (l / leave-11 :arg0 (p2 / person)))
(w / warn-01 :arg0 (p / person :arg0-of (i / invest-01)) :arg1 (p2 / possible-01 :arg1 (k / keep-01 :arg0 (p3 / person :arg0-of (i2 / invest-01)) :arg1 (f / fund :poss (p4 / person)) :arg1-of (c / cause-01 :arg0 (p5 / possible-01 :arg1 (k2 / keep-01 :arg0 (p6 / person) :arg1 (f2 / fund)))))) :time (w2 / week :mod (t / this)))
(r / rewards :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (c / customs) :arg3 (i / inspect-01)) :arg0-of (h2 / have-org-role-91 :arg1 (c2 / customs) :arg3 (i2 / inspect-01))) :arg1 (d / dog :arg0-of (h3 / have-rel-role-91 :arg1 (h4 / he) :arg2 (d2 / dd1))) :manner (u / use-01 :arg0 (p2 / person) :arg1 (t / toy :poss (p3 / person)) :manner (u2 / use-01 :arg0 (p4 / person) :arg1 (t2 / toy :poss (p5 / person)) :arg2 (d3 / dog))))
(m / multi-sentence :snt1 (s / say-01 :arg0 (i / i) :arg1 (a / and :op1 (c / customs :domain (i2 / i)) :op2 (s2 / searching :arg0 (d / dog :mod (f / first)) :arg1 (s3 / search-01 :arg1 (a2 / and :op1 (a3 / arm) :op2 (e / explosive))) :time (f2 / first)))) :snt2 (a4 / and :op1 (p / place-01 :arg1 (d2 / dog) :arg2 (a5 / airport :mod (h / helsinki)) :time (y / year :mod (n / next)))))
(m / multi-sentence :snt1 (n / need-01 :arg0 (i / i) :arg1 (n2 / need-01 :arg1 (f / forward :mod (n3 / new)) :direction (f2 / forward))) :snt2 (m2 / move-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg2 (k / king))) :arg2 (p2 / person :arg0-of (h2 / have-org-role-91 :arg2 (k2 / king))) :time (s / season :mod (l / last) :poss (p3 / person))))
(m / multi-sentence :snt1 (d / defend-01 :arg0 (f / fan :poss (s / she) :quant (s2 / some) :arg1-of (i / include-91 :arg2 (f2 / fan :poss (s3 / she)))) :arg1 (a / actress) :arg1-of (i2 / instead-of-91)) :snt2 (c / care-01 :mode (i3 / interrogative) :arg0 (p / person :arg0-of (h / have-rel-role-91 :arg1 (s4 / she) :arg2 (s5 / shouldn))) :arg1 (c2 / critical) :degree (t / total)))
(k / know-01 :arg0 (m / many :polarity -) :arg1 (a / and :op1 (b / begins :time (s / season :mod (a2 / aurora)) :time (a3 / already)) :op2 (c / continue-01 :arg1 (l / late :op1 (l2 / late :op1 (l3 / late :op1 (l4 / late :op1 (l5 / late :op1 (l6 / late :op1 (l7 / late :op1 (l8 / late :op1 (l9 / late :op1 (t / temporal-quantity :quant (N / N-A) :unit (y / year))))))))))))))
(t / touch-01 :arg0 (a / and :op1 (p / person :mod (c / country :name (n / name :op1 "N-A"))) :op2 (p2 / person :mod (c2 / country :name (n2 / name :op1 "N-A")))) :arg1 (b / ball) :mod (h / hardly))
(m / multi-sentence :snt1 (h / have-concession-91 :arg1 (a / and :op1 (p / pull-01 :arg0 (t / they) :arg1 (b / boat :quant 2) :arg2 (b2 / boat :mod (t2 / that))) :op2 (p2 / present :arg0 (e / echo :mod (c / coach) :mod (c2 / coach)) :arg1 (g / gold :mod (c3 / coach) :ord (o / ordinal-entity :value 2)) :time (e2 / ever) :arg1-of (c4 / cause-01 :arg0 (p3 / power-01 :arg0 (t3 / they) :arg1 (g2 / gold :ord (o2 / ordinal-entity :value 2) :ord (o3 / ordinal-entity :value 2) :ord (o4 / ordinal-entity :value 2) :poss (w / woman))))))) :snt2 (s / sport :( (a2 / annals) :poss (s2 / sport :poss (c5 / country))))
(s / set-02 :arg0 (p / petition) :arg1 (r / rhythm :mod (r2 / radioactive) :arg0-of (m / match-01 :arg1 (p2 / person :arg0-of (r3 / rival-01 :arg1 (t / they))))) :time (e / ever :polarity -))
(c / contrast-01 :arg1 (r / resign-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg2 (m / minister :mod (p2 / prime)))) :arg1-of (c2 / cause-01 :arg0 (s / scandal :domain (p3 / person)))) :arg2 (e / enough :polarity - :domain (t / this) :beneficiary (d / demonstrators)))
(p / promise-01 :arg0 (p2 / person :name (n / name :op1 "sigurdur" :op2 "ingi" :op3 "johansson") :arg0-of (h / have-org-role-91 :arg1 (h2 / he) :arg2 (s / successor))) :arg2 (e / elect-01 :mod (p3 / parliamentary) :mod (n2 / new) :location (a / autumn)) :time (t / then))
(m / multi-sentence :snt1 (s / speak-01 :arg1-of (g / general-02)) :snt2 (a / and :op1 (c / change-01 :arg1 (i / idea :topic (d / do-02 :arg1 (t / tool :example (t2 / this))))) :op2 (c2 / change-01 :arg1 (i2 / idea :topic (d2 / do-02 :arg0 (p / person :name (n / name :op1 "juha" :op2 "hakkarainen") :arg0-of (h / have-org-role-91 :arg1 (g2 / government-organization :arg0-of (g3 / govern-01 :arg1 (c3 / country :name (n2 / name :op1 "N-A")))) :arg2 (d3 / director :mod (v / vice)))) :arg1 (a2 / and :op1 (p2 / person :arg0-of (o / own-01 :arg1 (a3 / agriculture))) :op2 (p3 / person :arg0-of (o2 / own-01 :arg1 (i3 / island :name (n3 / name :op1 "N-A"))))) :mod (c4 / central))))))
(s / say-01 :arg0 (h / he) :arg1 (e / eliminate-01 :arg0 (i / it) :arg1 (p / person :arg0-of (o / own-01) :arg1-of (i2 / include-91 :arg2 (p2 / person :arg0-of (o2 / own-01) :location (s2 / sea :name (n / name :op1 "N-A"))) :arg3 (r / rate-entity-91 :arg1 82 :arg2 (t / temporal-quantity :quant (N / N-A) :unit (y / year)))) :arg3 (s3 / sphere :mod (r2 / reduce-01)))))
(a / and :op1 (a2 / and :op1 (a3 / act-02) :op2 (c / compose-01) :op3 (c2 / contain-01 :arg1 (m / music :mod (g / good)) :location (h / here)) :arg0-of (c3 / contain-01 :arg1 (m2 / music :mod (g2 / good)) :location (h2 / here))) :op2 (r / rather :arg1 (f / film) :arg2 (f2 / film :arg0-of (h3 / have-03 :arg1 (w / way :direction (w2 / way))))))
(s / show-01 :arg0 (g / graphs :arg1-of (p / present-01 :arg0 (s2 / show-04 :arg1 (h / hetemäki)))) :arg1 (g2 / grow-01 :arg1 (d / debt :quant 60 :mod (g3 / government-organization :arg0-of (g4 / govern-01)) :arg0-of (c / cross-02 :arg1 (r / rate-entity-91 :arg1 60 :arg2 (t / temporal-quantity :quant (N / N-A) :unit (y / year))))) :arg2 (r2 / rate-entity-91 :arg1 (m / monetary-quantity :quant (N2 / N-A) :unit (p2 / pound)) :arg2 (t2 / temporal-quantity :quant (N3 / N-A) :unit (y2 / year)))))
(m / move-01 :arg1 (m2 / man) :arg2 (y / yard :poss (m3 / man) :arg1-of (u / use-01 :arg0 (m4 / man))))
(a / and :op1 (j / josba) :op2 (k / kataja) :op3 (j2 / jokipojat))
(u / underway :location (t / tent :quant 1 :mod (b / big :degree (m / more))))
(p / phone-number-entity :value 1)
(h / have-concession-91 :arg1 (s / spend-02 :arg0 (i / i) :arg1 (i2 / intervene-01) :time (b / before :op1 (n / now) :duration (t / temporal-quantity :quant (N / N-A) :unit (y / year))) :arg0-of (c / cause-01 :arg1 (r / realize-01 :polarity - :arg0 (i3 / i) :arg1 (s2 / sport :domain (i4 / it) :mod (o / olympic) :mod (a / at-all)) :degree (b2 / bare)))) :arg2 (e / event :time (s3 / since :op1 2000) :time (s4 / since :op1 2000)))
(t / try-01 :arg0 (p / person :arg0-of (t2 / trumps)) :arg1 (q / quash :arg0 (p2 / person) :arg1 (c / campaign-01 :arg0 (p3 / person) :arg1 (c2 / controversial :arg0 (p4 / person) :arg1 (c3 / campaign-01 :arg0 (p5 / person)) :time (l / late :degree (m / most)))) :manner (c4 / claim-01 :arg0 (p6 / person) :arg1 (s / serious-02 :polarity - :arg1 (p7 / person) :time (i / insist-01 :arg0 (p8 / person) :arg1 (s2 / serious-02 :arg1 (p9 / person) :time (i2 / insist-01 :arg0 (p10 / person) :arg1 (s3 / serious-02 :arg1 (a / and :op1 (p11 / person :arg0-of (h / have-org-role-91 :arg2 (p12 / president))) :op2 (p13 / person :arg0-of (h2 / have-org-role-91 :arg2 (h3 / head-of-state))) :op3 (p14 / person :arg0-of (h4 / have-org-role-91 :arg1 (g / group :name (n / name :op1 "N-A") :mod (s4 / state) :mod (s5 / state) :mod (s6 / state)))))) :time (w / week :mod (t3 / this)))))))))
(a / and :op1 (m / mocked :arg0 (h / he) :arg1 (p / poor :mod (' / ''))) :op2 (s / say-01 :arg0 (h2 / he) :arg1 (p2 / possible-01 :arg1 ('2 / ' :arg0 (t / they) :degree (t2 / total)))) :arg1-of (c / cause-01 :arg0 (m2 / mocked :arg0 (h3 / he) :arg1 (p3 / person :mod (p4 / poor) :arg0-of (t3 / try-01 :arg1 (f / figure :mod (t4 / television)))))))
(e / excuse :arg0 (d / democrat :mod (s / some)) :arg1 (t / thing :arg0-of (e2 / evidence-01 :arg1 (u / unfit :arg0 (d2 / democrat) :arg1 (p / person :arg0-of (h / have-org-role-91 :arg2 (p2 / president))))) :degree (m / more)) :location (m2 / mr.))
(c / contrast-01 :arg1 (g / get-01 :arg0 (p / person :name (n / name :op1 (m / mr.) :op2 (r / rosenthal))) :arg1 (o / order :arg1-of (r2 / regular-03) :poss (p2 / person)) :mod (s / still) :time (d / day :mod (t / this))) :arg2 (s2 / switch-01 :arg0 (p3 / person) :arg1 (t2 / thing) :arg2 (a / and :op1 (b / bacon) :op2 (e / egg) :op3 (c2 / cheese) :location (e2 / everything :arg1-of (b2 / bagel))) :frequency (s3 / sometimes)))
FAILED_TO_PARSE#Couldn't convert to full AMR graph.
(t / try-01 :arg0 (p / person :mod (c / country :name (n / name :op1 "N-A"))) :arg1 (c2 / catch-up-04 :arg1 (p2 / person) :arg2 (g / gilead :arg0-of (d / dominates :arg1 (m / market :mod (c3 / c) :mod (c4 / c) :mod (c5 / c) :arg0-of (c6 / cure :arg1 (p3 / person :quant (o / over :op1 (p4 / percentage-entity :value (N / N-A)) :arg0-of (h / have-rel-role-91 :arg2 (p5 / patient))) :arg2 (d2 / disease :mod (g2 / geopolitics)) :arg1-of (p6 / possible-01))))))))
(d / date :mod (c / case-03) :time (b / back :op1 (a / and :op1 (g / gilead :arg1 (a2 / and :op1 (p / person :arg0-of (h / have-org-role-91 :arg2 (h2 / head-of-state))) :op2 (p2 / person :arg0-of (c2 / claim-01 :arg1 (o / own-01 :arg1 (l / laboratory)))))) :op2 (p3 / person :arg0-of (c3 / claim-01 :arg1 (o2 / own-01 :arg0 (p4 / person) :arg1 (w / work-01 :arg1 (l2 / laboratory) :arg0-of (c4 / counter-01 :arg1 (l3 / laboratory))))))) :op3 (i / ingredient :arg1-of (a3 / activity-06) :location (d2 / drug :mod (g2 / gilead)))))
(a / and :op1 (l / live-01 :arg0 (p / person :arg0-of (l2 / live-01 :location (c / chappaqua :mod (c2 / chappaqua))) :arg0-of (e / effective-04 :arg1 (r / rate-entity-91 :arg1 (p2 / percentage-entity :value (N / N-A)) :arg2 (t / temporal-quantity :quant (N2 / N-A) :unit (y / year)))) :arg2 (r2 / rate-entity-91 :arg1 (p3 / percentage-entity :value (N3 / N-A)) :arg2 (t2 / temporal-quantity :quant (N4 / N-A) :unit (y2 / year))))) :op2 (p4 / pay-01 :arg0 (p5 / person) :arg3 (r3 / rate :mod (t3 / tax) :arg1-of (c3 / combine-01) :mod (p6 / percentage-entity :value (N5 / N-A)))))
(a / and :op1 (s / stick-01 :arg1 (p / person :arg0-of (h / have-rel-role-91 :arg1 (m / man) :arg2 (s2 / skinner))) :arg2 (p2 / person :mod (c / country :name (n / name :op1 "N-A")))) :op2 (s3 / see-01 :arg0 (p3 / person) :arg1 (p4 / potential) :location (c2 / country :arg1-of (r / realised :time (n2 / now)))))
(s / say-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (p2 / person :name (n / name :op1 "N-A")))) :arg1 (e / enjoy-01 :arg0 (i / i) :arg1 (t / this :mod (t2 / this)) :time (n2 / now :quant 1) :mod (j / just)))
(b / boiled :arg0 (s / sentiment :mod (t / this)) :arg1 (n / news :topic (c / cover-01 :arg1 (a / appear-01 :arg1 (j / jenner)))) :mod (a2 / again))
(p / phone-number-entity :value (N / N-A))
(c / cause-01 :arg0 (a / advertise-01) :arg1 (f / focus-01 :arg0 (t / thing :arg0-of (c2 / cause-01 :arg1 (f2 / focus-01 :arg0 (w / we) :arg2 (b / build-01 :arg1 (s / skill :mod (b2 / build-01)) :purpose (p / put-03 :arg1 (a2 / advertise-01) :arg2 (h / hand :part-of (p2 / person))))))) :arg1-of (i / instead-of-91)))
(c / contrast-01 :arg1 (i / interview-01 :arg1 (p / person :arg0-of (d / drive-01) :arg1-of (i2 / involve-01) :quant (s / several)) :time (a / already)) :arg2 (s2 / say-01 :arg0 (p2 / police :arg1-of (i3 / identify-01 :polarity -)) :arg1 (a2 / and :op1 (p3 / person :arg0-of (c2 / call-03 :arg1 (t / they)) :arg0-of (c3 / call-03 :arg1 (i4 / incident))) :op2 (a3 / anyone :mod (e / else) :arg0-of (w / witness-01 :arg1 (i5 / incident))))))
(s / suggest-01 :arg0 (s2 / scientist :arg0-of (h / have-org-role-91 :arg2 (s3 / scientist))) :arg1 (e / explain-01 :arg0 (a / atmosphere :mod (t / thick)) :arg1 (r / rate :mod (r2 / rotation))) :time (p / previous))
(e / expose-01 :arg1 (a / and :op1 (h / heat) :op2 (l / light :mod (u / ultraviolet)) :quant (m / much :degree (t / too))) :arg2 (a2 / and :op1 (h2 / heat) :op2 (l2 / light :mod (u2 / ultraviolet)) :quant (s / several :op1 (t2 / temporal-quantity :quant (N / N-A) :unit (y / year)))))
(e / enacted :arg0 (t / they) :arg1 (s / star) :arg1-of (c / cause-01 :arg0 (t2 / travel-01 :arg0 (w / wind :arg1-of (w2 / wind) :mod (t3 / this)) :path (a / across :op1 (s2 / star)) :path (a2 / across :op1 (s3 / star)))))
(a / and :op2 (s / say-01 :arg0 (a2 / and :op1 (p / person :arg0-of (h / have-rel-role-91 :arg1 (p2 / person) :arg2 (s2 / son))) :op2 (p3 / person :arg0-of (h2 / have-rel-role-91 :arg1 (p4 / person) :arg2 (d / daughter)))) :arg1 (a3 / and :op1 (s3 / shock-01 :arg0 (d2 / die-01 :arg1 (p5 / person)) :arg1 (p6 / person)) :op2 (d3 / devastated :domain (p7 / person)) :manner (d4 / die-01 :arg1 (p8 / person)))))
(a / and :op1 (r / russia :mode (i / interrogative) :arg1 (a2 / ally-01 :arg2 (m / misfits))) :op2 (t / turkey :arg1 (a3 / ally-01 :arg2 (m2 / misfits))))
(m / motive :mod (e / economy) :mod (a / also))
(w / win-01 :arg0 (p / person :arg0-of (l / lead-02 :arg1 (c / country :name (n / name :op1 "N-A")))) :arg1 (p2 / point :mod (b / bonus)) :arg2 (c2 / call-03 :arg0 (p3 / person) :arg1 (s / support-01 :arg1 (a / authority :arg1-of (e / elect-01)) :time (a2 / after :op1 (c3 / coup :arg1-of (a3 / attempt-01))))) :manner (c4 / certain))
(a / avoid-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (p2 / person :arg0-of (h2 / have-org-role-91 :arg2 (p3 / president))) :arg2 (p4 / president))) :arg1 (a2 / answer-01 :arg0 (p5 / person) :arg1 (d / differ-01 :arg0 (p6 / person))) :time (m / mr :arg0 (p7 / person) :arg1 (c / choose-01 :arg0 (p8 / person) :arg1 (u / underlined :arg0 (p9 / person) :arg1 (p10 / person)))) :manner (d2 / deliberate))
(a / and :op1 (c / collapse-01 :arg1 (i / it) :time (b / before :op1 (n / now) :quant (n2 / nearly :op1 (t / temporal-quantity :quant (N / N-A) :unit (y / year))))) :op2 (o / obligate-01 :arg2 (b2 / bailed :arg1 (i2 / it))))
(r / reach-01 :arg0 (d / dettori :name (n / name :op1 (f / frankie) :op2 (d2 / dettori))) :arg1 (w / winners :quant 3000) :location (n2 / newmarket :location (n3 / newmarket)))
(s / say-01 :arg0 (i / i) :arg1 (s2 / special-02 :arg1 (i2 / it)) :arg2 (p / person :name (n / name :op1 "dettori")) :time (e / early :degree (m / more)))
(a / appeal-02 :arg0 (m / man :mod (b / banff)) :arg2 (h / help-01 :arg1 (f / fish :mod (i / identifying) :arg1-of (a2 / appear-01 :location (g / garden :poss (m2 / man))))))
(s / say-01 :arg0 (p / person :name (n / name :op1 "michael" :op2 "martin") :arg0-of (h / have-org-role-91 :arg1 (c / country :name (n2 / name :op1 "N-A") :arg0-of (c2 / cross-02 :arg1 (b / bridge)) :location (f / forth)) :arg2 (d / director :mod (v / vice)))) :arg1 (m / milestone :arg1 (c3 / closure :ord (o / ordinal-entity :value 1) :topic (p2 / project :mod (b2 / bridge) :mod (a / any))) :time (a2 / always) :arg1-of (s2 / significant-02)))
(h / help-01 :arg0 (a / activity-06) :arg1 (a2 / and :op1 (m / manage-01 :arg1 (w / weight)) :op2 (p / pressure :mod (b / blood :arg1-of (h2 / high-02))) :op3 (c / cold) :op4 (l / list-01 :arg1 (b2 / benefit-01) :arg1-of (l2 / long-03))) :arg2 (h3 / here) :arg1-of (l3 / long-03 :degree (t / too)))
(s / say-01 :arg0 (s2 / she) :arg1 (t / true :polarity - :domain (s3 / sign-up-03 :arg1 (y / you) :arg3 (i / it) :mod (o / of-course) :mod (o2 / of-course))))
(r / remembers :arg1 (m / manipulate-01 :arg1 (f / future :mod (e / emotional)) :mod (e2 / emotional)))
(a / and :op2 (k / know-01 :arg0 (i / i) :arg1 (t / thing :arg1-of (k2 / know-01 :arg0 (i2 / i) :mod (r / really))) :mod (s / still)))
(s / say-01 :arg0 (h / he) :arg1 (c / contrast-01 :arg1 (r / report-01 :arg1 (f / fire-01 :arg1 (h2 / house))) :arg2 (r2 / report-01 :polarity - :arg1 (f2 / friday :mod (f3 / far :degree (s2 / so))))))
(c / contrast-01 :arg1 (b / benefit-01 :arg0 (a / attack-01 :arg1 (h / heart)) :arg1 (p / person :arg0-of (h2 / have-rel-role-91 :arg2 (p2 / patient)))) :arg2 (b2 / benefit-01 :arg0 (d / drug :mod (2 / 2-a-day :mod (h3 / heart))) :arg1 (p3 / person :arg0-of (h4 / have-rel-role-91 :arg2 (p4 / patient)))) :time (a2 / after :op1 (r / recommend-01 :arg0 (p5 / person :arg0-of (h5 / have-org-role-91 :arg2 (o / official))) :arg1 (g / give-01 :arg1 (i / it) :arg2 (p6 / person :quant (m / more)) :time (n / no-longer)))))
(h / have-03 :arg0 (p / person :arg0-of (h2 / have-03 :arg1 (a / attack-01 :quant 1) :time (a2 / already))) :arg1 (r / risk-01 :arg2 (h3 / have-03 :arg1 (a3 / another)) :arg1-of (h4 / high-02 :degree (m / more))))
(s / say-01 :arg0 (p / person :name (n / name :op1 "mizrachi")) :arg1 (t / thing :ord (o / ordinal-entity :value 1) :arg1-of (t2 / turn-02 :arg2 (a / around)) :domain (t3 / thing :ord (o2 / ordinal-entity :value 1)) :direction (a2 / around)) :arg0-of (c / cause-01 :arg1 (p2 / possible-01 :arg1 (a3 / and :op1 (s2 / see-01 :arg0 (y / you) :arg1 (b / betray-01 :arg0 (y2 / you))) :op2 (c2 / clear-01 :arg0 (y3 / you) :arg1 (l / line :name (n2 / name :op1 (f / fire))))))))
(a / and :op1 (c / case :mod (d / difficult :degree (v / very)) :domain (t / this)) :op2 (o / obligate-01 :arg1 (a2 / act-02 :arg0 (t2 / they)) :arg2 (p / person :arg0-of (w / witness-01))))
(a / and :op1 (f / fly-01 :arg1 (p / plane) :purpose (t / train-01)) :op2 (a2 / ask-02 :arg1 (i / identify-01 :arg0 (p2 / pilot-01) :arg1 (b / boat :mod (f2 / fishing)) :prep-as (p3 / part :part-of (e / exercise)))))
(t / take-01 :arg1 (s / step :ord (o / ordinal-entity :value 1)) :time (b / before :op1 (n / now) :quant (t2 / temporal-quantity :quant (N / N-A) :unit (y / year))) :time (a / already))
(s / say-01 :arg0 (p / person :arg0-of (l / lead-02 :arg1 (o / organization :name (n / name :op1 "senate" :op2 "democratic"))) :arg0-of (h / have-org-role-91 :arg1 (o2 / organization) :arg3 (l2 / lead-02))) :arg1 (c / convince-01 :arg0 (p2 / person) :arg1 (p3 / person :arg0-of (h2 / have-org-role-91 :arg3 (j / judge-01)) :arg0-of (n2 / nominate-01 :arg1 (p4 / person :arg0-of (h3 / have-org-role-91 :arg3 (j2 / judge-01)))) :arg0-of (h4 / have-org-role-91 :arg3 (j3 / judge-01))) :arg2 (p5 / person :arg0-of (h5 / have-org-role-91 :arg3 (j4 / judge-01))) :condition (e / elect-01 :arg1 (p6 / person) :arg2 (p7 / president))))
(s / state-01 :arg0 (t / thing :arg1-of (s2 / state-01) :mod (t2 / this)) :arg1 (d / derives :source (d2 / data :arg1-of (a / actual-02)) :mod (t3 / this)) :time (b / before :op1 (r / rush-01 :arg1 (y / you) :arg2 (l / littered :arg0 (y2 / you) :arg1 (s3 / section :arg1-of (c / comment-01)) :manner (g / gnarly)))))
(t / think-01 :arg0 (i / i) :arg1 (p / possible-01 :arg1 (o / or :op1 (f / filling :arg1 (i2 / it)) :op2 (h / have-06 :arg0 (i3 / it) :arg1 (m / material :mod (m2 / material)))) :op3 (s / say-01 :arg0 (p2 / person :arg0-of (h2 / have-org-role-91 :arg2 (w / wez)) :mod (k / kind :mod (s2 / some)))) :frequency (s3 / sometimes)))
(e / expensive :domain (r / rate-entity-91 :arg1 1 :arg2 (t / temporal-quantity :quant (N / N-A) :unit (y / year))) :arg3 (r2 / rate-entity-91 :arg1 1 :arg2 (t2 / temporal-quantity :quant (N2 / N-A) :unit (y2 / year))) :mod (e2 / expensive :degree (m / more)))
(m / multi-sentence :snt1 (c / country :location (c2 / country :mod (a / analogue))) :snt2 (g / go-01 :arg1 (m2 / monetary-quantity :arg2-of (p / price-01 :arg1 (f / food))) :arg4 (f2 / fast :degree (m3 / more) :compared-to (c3 / country :name (n / name :op1 "N-A")))))
(r / rise-01 :arg1 (t / thing :arg2-of (p / price-01 :arg1 (f / food))) :manner (s / sharp) :time (b / begin-01 :arg1 (2 / 2010s)))
(m / multi-sentence :snt1 (o / obligate-01 :mode (i / interrogative) :arg1 (w / we) :arg2 (a / and :op1 (h / halve :arg0 (w2 / we) :arg1 (t / tax-01 :arg2 (c / country :arg0-of (f / favor-01 :arg1 (c2 / country :name (n / name :op1 "N-A"))) :arg1-of (a2 / average-03)))) :op2 (c3 / continue-01 :arg0 (w3 / we) :arg1 (c4 / compete-01 :arg2-of (p / price-01)))) :condition (w4 / want-01 :arg0 (w5 / we) :arg1 (g / get-05 :arg1 (w6 / we) :arg2 (l / level :arg2-of (p2 / price-01 :arg1 (f2 / food)) :arg1-of (s / same-01 :arg2 (l2 / level :mod (m2 / monetary-quantity :arg2-of (p3 / price-01 :arg1 (f3 / food))))))))) :snt2 (w7 / write-01 :arg0 (i2 / i)))
(s / swimming :location (a / around :op1 (n / north)) :location (a2 / around :op1 (n2 / north)))
FAILED_TO_PARSE#Couldn't convert to full AMR graph.
(r / result-01 :arg1 (t / thing :arg1-of (i / improve-01) :arg1-of (i2 / improve-01)) :arg2 (t2 / thing :arg2-of (p / perform-02 :arg0 (c / chain :name (n / name :op1 (f / fashioned))) :arg1-of (s / soft-02)) :mod (p2 / particular)))
(s / summery :polarity - :arg1 (t / temperature) :degree (v / very) :time (a / anymore) :arg1-of (c / cause-01 :arg0 (s2 / stay-01 :arg1 (b / botnet) :location (b2 / below :op1 (c2 / country :quant (w / whole))))))
(e / explain-01 :polarity - :arg0 (c / coach) :arg1 (s / situation) :arg2 (p / person :arg0-of (h / have-org-role-91 :arg2 (o / official))) :arg1-of (c2 / cause-01 :arg0 (f / fear-01 :arg0 (p2 / person) :arg1 (e2 / expose-01 :arg1 (s2 / situation)))))
(s / steal-01 :arg1 (b / bike) :arg2 (v / valve) :time (b2 / before :op1 (n / now) :quant (t / temporal-quantity :quant (N / N-A) :unit (y / year))))
FAILED_TO_PARSE#Couldn't convert to full AMR graph.
(a / aim-01 :arg0 (i / i) :arg1 (p / person :arg0-of (h / have-org-role-91 :arg2 (p2 / president))) :arg0-of (c / cause-01 :arg1 (g / good-04 :arg1 (e / economy :poss (c2 / country :name (n / name :op1 "N-A"))) :arg2 (e2 / everyone))))
(s / say-01 :arg0 (t / thing :arg1-of (e / expect-01)) :arg1 (t2 / thing :arg2-of (r / rate-01 :arg1 (b / begin-01))))
(i / include-91 :arg1 (a / and :op1 (- / -rrb- :quant 92 :mod (m / metres)) :op2 (s / suvasvesi :quant 90 :mod (m2 / metres))) :arg2 (l / lake :arg1-of (d / deep-02) :mod (o / other)))
(h / heated :arg0 (i / issue-02 :arg0 (a / and :op1 (p / person :arg0-of (h2 / have-org-role-91 :arg1 (p2 / political-party :name (n / name :op1 "N-A") :arg0-of (h3 / have-org-role-91 :arg1 (f / finance) :arg2 (m / minister) :time (t / then))) :arg2 (m2 / member))) :op2 (c / coalition :arg0-of (h4 / have-org-role-91 :arg1 (c2 / country :name (n2 / name :op1 "N-A")) :arg2 (c3 / coalition :mod (- / -lrb-)) :time (t2 / then))) :op3 (c4 / coalition :arg0-of (h5 / have-org-role-91 :arg1 (-2 / -lrb-) :arg2 (c5 / coalition :mod (-3 / -lrb-)) :time (t3 / then))))) :arg1 (p3 / promise-01 :arg2 (e / elect-01)))
(s / say-01 :arg0 (a / agency :name (n / name :op1 "N-A") :mod (n2 / news)) :arg1 (a2 / and :op1 (r / rule-out-02 :arg0 (p / person :mod (r2 / religious-group :name (n3 / name :op1 "N-A"))) :arg1 (t / terrorism) :mod (a3 / also)) :op2 (r3 / report-01 :arg0 (p2 / police :mod (c / country :name (n4 / name :op1 "Thailand"))))))
(m / multi-sentence :snt1 (n / no) :snt2 (c / contrast-01 :arg1 (p / possible-01 :polarity - :arg1 (d / do-02 :arg0 (i / i) :arg1 (t / thing :manner-of (w / work-09 :arg1 (t2 / thing :manner-of (w2 / work-09 :arg1 (s / swimmers :mod (t3 / this)))))))) :arg2 (f / fine-04 :arg1 (t4 / thing :arg1-of (d2 / do-02 :arg0 (a / and :op1 (i2 / i) :op2 (i3 / i)))))))
(s / suspect-01 :arg1 (a / arrest-01 :arg1 (p / person :arg1-of (a2 / arrest-01))) :arg2 (h / have-03 :arg0 (p2 / person) :arg1 (c / contact-01 :arg0 (p3 / person) :arg1 (e / extremist :arg1-of (o / organize-01) :mod (e2 / extremism)))))
(w / win-01 :arg0 (p / person :arg0-of (b / begin-01 :arg1 (g / game) :prep-with (p2 / point :quant 2))) :arg2 (p3 / point :quant 96-87))
(t / think-01 :arg0 (i / i) :arg1 (p / protest-01) :time (t2 / time :arg1-of (l / long-03)))
(m / multi-sentence :snt1 (s / show-01 :arg1 (c / coffee) :arg2 (p / provide-01 :arg1 (c2 / coffee) :arg2 (a / and :op1 (c3 / cancers :mod (c4 / certain)) :op2 (c5 / cold :quant 2 :mod (t / type)) :op3 (a2 / alzheimer :arg1 (c6 / coffee))))) :snt2 (d / disease :time (d2 / date-entity :decade (N / N-A))))
(n / need-01 :arg0 (t / they) :arg1 (c / climax :arg0 (p / person)) :purpose (g / gain-02 :arg0 (p2 / person) :arg1 (t2 / temporal-quantity :quant (N / N-A) :unit (y / year) :mod (e / extra)) :arg4 (l / life :poss (p3 / person))) :mod (a / also))
(m / multi-sentence :snt1 (s / show-01 :arg0 (p / picture) :arg1 (c / change-01 :mod (h / huge) :location (l / lotta))) :snt2 (a / appear-01 :arg1 (a2 / appear-01 :time (d / date-entity :decade (N / N-A)))))
(m / multi-sentence :snt1 (l / lose-02 :mode (i / interrogative) :arg1 (m2 / mass-quantity :quant (N / N-A) :unit (k / kilogram) :mod (f / final)) :location (l2 / lotta :mod (s / spring))) :snt2 (n / nyt :mode (i2 / interrogative) :mod (d / damn)))
(s / say-01 :arg0 (m / media :mod (c / country :name (n / name :op1 "N-A"))) :arg1 (p / pay-01 :arg0 (m2 / man) :arg1 (m3 / monetary-quantity :quant 105 :unit (e / euro) :arg2-of (i / include-91 :arg1 (m4 / monetary-quantity :quant 105 :unit (e2 / euro) :arg2-of (i2 / include-91 :arg1 (m5 / monetary-quantity :quant 105 :unit (e3 / euro) :arg2-of (i3 / include-91 :arg1 (m6 / monetary-quantity :quant 105 :unit (e4 / euro) :arg2-of (i4 / include-91 :arg1 (m7 / monetary-quantity :quant 105 :unit (e5 / euro))))))))))))
(m / multi-sentence :snt1 (h / have-purpose-91 :arg2 (r / reach-01 :arg1 (l / level :arg1-of (n / need-01)))) :snt2 (s / say-01 :arg0 (p / person :arg0-of (h2 / have-org-role-91 :arg2 (a / authority))) :arg1 (k / kallio :arg0 (p2 / person :arg0-of (h3 / have-org-role-91 :arg2 (d / director :mod (v / vice)))) :arg1 (p3 / person :arg0-of (h4 / have-org-role-91 :arg2 (d2 / director :mod (v2 / vice)))))))
FAILED_TO_PARSE#Couldn't convert to full AMR graph.
(s / say-01 :arg0 (i / it :arg1-of (i2 / include-91 :arg2 (s2 / street :mod (b / big :degree (m / most)) :location (s3 / street :mod (b2 / big :degree (m2 / most)))))) :arg1 (o / olsson :arg0 (p / person :arg0-of (t / tour-01) :mod (s4 / swedish)) :arg1 (o2 / olsson :arg0 (p2 / person))))
(m / multi-sentence :snt1 (w / win-01 :mode (i / interrogative) :arg0 (w2 / win-01 :arg0 (c / conscripts)) :arg2 (s / situation :mod (w3 / war) :mod (a / acute))) :snt2 (s2 / send-01 :arg1 (w4 / win-01 :mod (t / total)) :arg2 (b / battle-01 :time (u / until :op1 (a2 / after :op1 (h / have-06 :arg0 (t2 / they) :arg1 (o / oath :poss (t3 / they))))))))
(c / contrast-01 :arg1 (u / undertake-01 :arg0 (p / person :arg0-of (s / sell-01)) :arg1 (c2 / claim-01)) :arg2 (w / win-01 :arg0 (a / and :op1 (t / tola) :op2 (w2 / waroma)) :arg1 (c3 / case-03) :location (a2 / and :op1 (c4 / court :mod (d / district)) :op2 (c5 / court :mod (a3 / appeal-01)))))
(m / multi-sentence :snt1 (f / finns :quant 1 :arg1-of (i / include-91 :arg2 (f2 / finns :mod (f3 / finns)))) :snt2 (a / artists :mode (i2 / interrogative) :time (a2 / already) :duration (o / over :op1 (t / temporal-quantity :quant (N / N-A) :unit (y / year)))))
(s / speak-01 :arg3 (e / economy))
(h / have-03 :arg0 (p / person :quant (m / many)) :arg1 (i / image :arg0-of (d / depend-01 :polarity - :arg1 (n / number :quant-of (p2 / person :arg0-of (w / work-01)))) :arg0-of (c / cause-01 :arg1 (c2 / constant :domain (i2 / it) :mod (a / almost)))) :mod (s / still))
(s / say-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (p2 / person :name (n / name :op1 "N-A") :arg0-of (h2 / have-org-role-91 :arg2 (d / director :mod (v / vice)))) :arg2 (d2 / director :mod (v2 / vice)))) :arg1 (p3 / positive :mod (m / main) :domain (f / feedback :source (t / treaty :name (n2 / name :op1 "N-A")))))
(p / paradise :domain (c / channel :arg0-of (e / effective-04 :degree (m / most))))
(u / update-01 :arg1 (c / classification) :arg1-of (u2 / update-01))
(s / say-01 :arg0 (g / group) :arg1 (i / inform-01 :arg0 (i2 / it) :arg1 (c / customer :poss (i3 / it)) :arg2 (c2 / change-01)))
(s / sit-01 :arg1 (i / it) :arg2 (n / next-to :op1 (b / box)) :location (n2 / next-to :op1 (b2 / box)))
(t / touch-01 :arg0 (a / and :op1 (p / person :mod (c / country :name (n / name :op1 "N-A"))) :op2 (p2 / person :mod (c2 / country :name (n2 / name :op1 "N-A")))) :arg1 (b / ball) :mod (h / hardly))
(i / iced :arg0 (v / viliame :name (n / name :op1 (f / fijian) :op2 (c / cake) :op3 (i2 / ice) :op4 (i3 / ice) :op5 (i4 / ice) :op6 (i5 / ice) :op7 (i6 / ice))) :arg1 (n2 / need-01 :arg1 (i7 / icing :mod (a / another)) :time (m / moment :mod (d / die-01))))
(c / cause-01 :arg0 (h / have-03 :arg0 (p / person :arg0-of (h2 / have-rel-role-91 :arg1 (s / she) :arg2 (g / glover))) :arg1 (b / backshall :name (n / name :op1 (s2 / steve) :op2 (s3 / steve) :op3 (s4 / steve)) :medium (t / television))) :arg1 (h3 / have-03 :arg0 (p2 / person) :arg1 (d / desperate) :time (m / month :mod (n2 / next))))
(a / age-01 :arg1 (p / person :arg0-of (o / own-01 :arg1 (w / web))) :arg2 (b / behind :op1 (i / it)))
(c / confirm-01 :arg0 (s / study :arg1-of (p / publish-01 :arg0 (s2 / science :mod (s3 / science)))) :arg1 (s4 / shark :mod (g / greenland) :location (w / world)))
(w / write-01 :arg0 (i / i) :arg1 (t / thing :arg1-of (b / base-02 :arg2 (s / story :quant 3 :mod (s2 / short))) :arg0-of (r / receive-01 :arg1 (t2 / tube :mod (n / nobel) :purpose (l / literature)) :arg2 (l2 / literature :quant 2013))))
(a / and :op1 (b / benefit-01 :arg0 (a2 / and :op1 (p / pension :mod (e / employ-01 :polarity -)) :op2 (p2 / pension :mod (n / nation)) :op3 (s / security :mod (e2 / employ-01 :polarity -))) :arg1 (r / rate-entity-91 :arg1 0.85 :arg2 (t / temporal-quantity :quant (N / N-A) :unit (y / year)))) :op2 (c / cut-02 :arg1 (i / index :mod (e3 / employ-01 :polarity -) :mod (o / other) :quant (a3 / all))))
(c / contrast-01 :arg2 (s / show-01 :arg0 (p / poll-01) :arg1 (a / and :op1 (w / wait-01 :arg1 (p2 / person :arg0-of (h / have-org-role-91 :arg1 (p3 / party :mod (g / government-organization :arg0-of (g2 / govern-01))) :arg2 (f / finns))) :arg2 (r / rate-entity-91 :arg1 12.3 :arg2 (t / temporal-quantity :quant (N / N-A) :unit (m / month))) :concession (r2 / result-01 :arg1 (e / elect-01) :arg2 (e2 / elect-01) :time (p4 / previous))) :op2 (b / bother-01 :arg1 (p5 / person :quant 12.3) :arg2 (e3 / elect-01 :arg1-of (g3 / general-02))))))
(a / and :op1 (d / drifted :arg1 (r / road :direction (o / out) :destination (c / curve :mod (l / left)))) :op2 (t / toppled :arg1 (r2 / road) :arg2 (d2 / ditches)))
(c / cause-01 :arg0 (p / pollution :mod (a / air) :domain (a2 / age-01 :arg2 (t / temporal-quantity :quant (N / N-A) :unit (y / year)))))
(r / remember-01 :arg0 (i / i) :arg1 (t / thing :mod (m / main) :arg1-of (r2 / remember-01 :arg0 (i2 / i))) :arg1-of (r3 / remember-01 :arg0 (i3 / i)) :arg1-of (r4 / remember-01 :arg0 (i4 / i)) :arg1-of (r5 / remember-01 :arg0 (i5 / i)) :arg1-of (r6 / remember-01 :arg0 (i6 / i)) :mod (m2 / main) :location (a / around :op1 (a2 / ankles)) :arg0-of (a3 / amaze-01 :arg1 (a4 / and :op1 (c / cheers :mod (a5 / amazing)) :op2 (c2 / cheers :mod (a6 / amazing)) :location (a7 / around :op1 (a8 / ankles)))))
(h / help-01 :arg0 (a / and :op1 (p / person :arg0-of (h2 / have-rel-role-91 :arg1 (t / they) :arg2 (f / father))) :op2 (p2 / person :arg0-of (h3 / have-rel-role-91 :arg1 (t2 / they) :arg2 (f2 / father))) :op3 (p3 / person :arg0-of (h4 / have-rel-role-91 :arg1 (t3 / they) :arg2 (f3 / father))) :op4 (p4 / person :arg0-of (h5 / have-rel-role-91 :arg1 (t4 / they) :arg2 (b / brother))) :op5 (p5 / person :arg0-of (h6 / have-rel-role-91 :arg1 (t5 / they) :arg2 (b2 / brother))) :arg1-of (b3 / base-02 :arg2 (e / experience-01 :arg0 (h7 / he)))))
FAILED_TO_PARSE#Couldn't convert to full AMR graph.
(s / say-01 :arg0 (p / person :arg0-of (s2 / study-01 :arg1 (p2 / photo)) :mod (c / country :name (n / name :op1 "N-A")) :mod (c2 / country :name (n2 / name :op1 "N-A"))) :arg1 (a / and :op1 (h / hurtful :arg1 (l / lenses)) :op2 (c3 / comfortable-02 :polarity - :arg1 (p3 / person)) :op3 (c4 / comfortable-02 :polarity - :arg1 (p4 / person)) :op4 (c5 / comfortable-02 :polarity - :arg1 (p5 / person)) :op5 (c6 / comfortable-02 :polarity - :arg1 (p6 / person))))
(p / possible-01 :arg1 (m / mean-01 :arg1 (p2 / person :mod (d / diverse :degree (m2 / more) :compared-to (p3 / person :mod (a / atheist :degree (m3 / more)) :mod (d2 / diverse :degree (m4 / more) :compared-to (d3 / district :mod (o / old :degree (m5 / more))))))) :arg2 (l / likely-01 :arg1 (e / expect-01 :arg0 (p4 / person) :arg1 (e2 / expect-01 :arg0 (p5 / person) :arg1 (e3 / expect-01 :arg0 (p6 / person) :arg1 (s / sensitivity)))))))
(r / report-01 :arg1 (t / thing :arg2-of (r2 / result-01 :arg1 (i / investigate-01 :mod (c / congressional))) :mod (p / preliminary)) :time (b / by :op1 (d / day)))
(r / rate-entity-91 :arg1 1 :arg2 (t / temporal-quantity :quant (N / N-A) :unit (d / day)) :time (a / after :op1 (g / goal :quant 1 :arg1-of (w / win-01 :arg0 (a2 / and :op1 (c / country :name (n / name :op1 "N-A")) :op2 (t2 / team :name (n2 / name :op1 (k / katie)) :mod (f / field) :poss (w2 / woman)) :op3 (t3 / team :name (n3 / name :op1 (h / hockey)) :mod (f2 / field) :mod (f3 / field) :poss (w3 / woman)))))) :time (d2 / day :quant 1) :time (a3 / after :op1 (g2 / goal :quant 1 :arg1-of (w4 / win-01 :arg0 (a4 / and :op1 (p / person :mod (c2 / country :name (n4 / name :op1 "N-A"))) :op2 (p2 / person :mod (c3 / country) :arg1-of (d3 / defeat-01) :mod (c4 / country)))))))
(a / add-01 :arg0 (p / person :name (n / name :op1 "melissa" :op2 "gonzalez")) :arg1 (g / goal :mod (f / final) :time (p2 / period :ord (o / ordinal-entity :value 4))))
(m / multi-sentence :snt1 (r / recommend-01 :arg1 (c / confess :arg0 (i / i) :arg1 (e / expert-01 :polarity - :arg1 (i2 / i) :arg2 (e2 / expert-01 :arg1 (i3 / i) :arg2 (p / person :arg1-of (e3 / expert-01)))) :location (h / here))) :snt2 (e4 / enthusiast :mode (e5 / expressive) :mod (j / just)))
(a / and :op1 (s / storm-02 :arg0 (p / person :arg1-of (s2 / storm-02 :arg0 (p2 / person) :destination (s3 / street))) :arg1 (s4 / street)) :op2 (d / demand-01 :arg0 (p3 / person) :arg1 (c / change-01 :arg1 (p4 / politics) :mod (f / fundamental))) :time (w / week :mod (l / last)))
(n / nation :mod (p / populous :degree (m / most :ord (o / ordinal-entity :value 2)) :compared-to (n2 / nation :location (c / continent :name (n3 / name :op1 "Africa")))) :domain (a / and :op1 (n4 / nation :mod (p2 / populous :degree (m2 / most)) :location (c2 / continent :name (n5 / name :op1 "Africa"))) :op2 (s / stability :poss (c3 / country))))
(a / and :op1 (r / rise-01 :arg1 (t / tension) :location (a2 / along :op1 (b / border-01 :arg2 (l / location :name (n / name :op1 "eritrea"))))) :op2 (b2 / battle-01 :location (a3 / along :op1 (b3 / border :mod (t2 / that)))) :op3 (c / claim-01 :arg0 (l2 / line :arg2-of (d / dispute-01)) :arg1 (l3 / live-01 :arg0 (l4 / line :arg2-of (d2 / dispute-01)) :location (j / june))) :time (t3 / time :arg1-of (s / same-01)))
(c / contrast-01 :arg2 (a / and :op1 (t / think-01 :arg0 (i / i) :arg1 (c2 / clever :arg0 (h / he) :arg1 (t2 / thing :arg1-of (s / state-01 :arg0 (h2 / he)))) :mod (a2 / also)) :op2 (k / know-01 :arg0 (i2 / i) :arg1 (v / vague :arg1 (t3 / they) :manner (l / lens :mod (v2 / various))))))
(o / open-01 :arg1 (c / cafes :name (n / name :op1 (r / revived) :op2 (v / verb) :op3 (c2 / cafes))) :mod (l / last) :location (r2 / relative-position :op1 (l2 / location :location-of (l3 / location :mod (o2 / original)))))
(a / and :op1 (c / continue-01 :arg0 (a2 / and :op1 (p / person :name (n / name :op1 "Clinton")) :op2 (p2 / person :arg0-of (h / have-org-role-91 :arg2 (k / kaine)))) :arg1 (s / set-02 :arg0 (p3 / person) :arg1 (s2 / standard) :arg2 (m / motive :mod (f / finance)))) :op2 (s3 / say-01 :arg0 (p4 / person :arg0-of (l / lead-02 :arg1 (c2 / campaign-01 :arg0 (p5 / person)))) :medium (s4 / statement)))
(s / say-01 :arg0 (p / person :name (n / name :op1 "N-A")) :arg1 (a / and :op1 (a2 / audit-01 :arg1 (h / he) :mod (i / irs) :mod (t / too)) :op2 (f / fear-01 :arg0 (i2 / i) :arg1 (f2 / fear-01 :polarity - :arg0 (p2 / person :arg0-of (v / vote-01)) :arg1 (p3 / person :arg0-of (v2 / vote-01))))))
(c / call-01 :arg0 (a / and :op1 (p / person :arg0-of (h / have-org-role-91 :arg2 (a2 / ambassador :mod (i / israeli)))) :op2 (p2 / person :arg0-of (h2 / have-org-role-91 :arg2 (a3 / ambassador :mod (i2 / israeli)))) :op3 (p3 / person :arg0-of (h3 / have-org-role-91 :arg2 (a4 / ambassador :mod (i3 / israeli)))) :op4 (p4 / person :arg0-of (h4 / have-org-role-91 :arg2 (a5 / ambassador :mod (i4 / israeli)))) :op5 (p5 / person :arg0-of (h5 / have-org-role-91 :arg2 (a6 / ambassador :mod (i5 / israeli)))) :op6 (p6 / person :arg0-of (h6 / have-org-role-91 :arg2 (a7 / ambassador :mod (i6 / israeli)))) :op6 (p7 / person :arg0-of (h7 / have-org-role-91 :arg2 (a8 / ambassador :mod (i7 / israeli)))) :op7 (p8 / person :arg0-of (h8 / have-org-role-91 :arg2 (a9 / ambassador :mod (i8 / israeli))))))
(a / and :op1 (c / country :name (n / name :op1 "N-A")) :op2 (c2 / country :name (n2 / name :op1 "N-A")))
(i / increase-01 :arg1 (i2 / import-01 :arg0 (c / country :name (n / name :op1 "N-A")) :arg2 (c2 / country :name (n2 / name :op1 "N-A"))) :arg2 (p / percentage-entity :value (N / N-A)) :arg4 (r / rate-entity-91 :arg1 (m / monetary-quantity :quant 158 :unit (d / dollar)) :arg2 (v / volume-quantity :quant (N2 / N-A) :unit (g / gallon))))
(p / pride-01 :arg0 (a / and :op1 (p2 / person :arg0-of (h / have-org-role-91 :arg1 (f / fellow :poss (h2 / he)) :arg2 (s / scotsman))) :op2 (p3 / person :arg0-of (h3 / have-org-role-91 :arg1 (p4 / political-party :name (n / name :op1 "N-A")))) :op3 (p5 / person :arg0-of (h4 / have-org-role-91 :arg1 (y / youngsters) :arg3 (y2 / youngsters))) :op4 (p6 / person :arg0-of (h5 / have-org-role-91 :arg1 (y3 / youngsters) :arg3 (y4 / youngsters))) :op5 (p7 / person :arg0-of (h6 / have-org-role-91 :arg1 (y5 / youngsters) :arg3 (y6 / youngsters))) :op6 (p8 / person :arg0-of (h7 / have-org-role-91 :arg1 (y7 / youngsters) :arg3 (y8 / youngsters))) :op6 (p9 / person :arg0-of (h8 / have-org-role-91 :arg1 (y9 / youngsters) :arg3 (y10 / youngsters))) :op6 (p10 / person :arg0-of (h9 / have-org-role-91 :arg1 (y11 / youngsters) :arg3 (y12 / youngsters))) :op6 (p11 / person :arg0-of (h10 / have-org-role-91 :arg1 (y13 / youngsters))) :op6 (p12 / person :arg0-of (h11 / have-org-role-91 :arg1 (y14 / youngsters))) :op6 (p13 / person :arg0-of (h12 / have-org-role-91 :arg1 (y15 / youngsters))) :op7 (p14 / person :arg0-of (h13 / have-org-role-91 :arg1 (l / legend)))))
(d / do-02 :arg0 (t / they) :arg1 (s / so) :mod (j / just) :time (e / emerge-02 :arg0 (t2 / they)))
(a / and :op1 (r / record :mod (w / world) :domain (s / set :mod (w2 / world))) :op2 (s2 / set :quant 3 :domain (w3 / win-01 :arg1 (g / gold))) :li 3)
(s / say-01 :arg0 (i / i) :arg1 (t / thing :arg2-of (v / value-01 :arg1 (c / contract-02)) :arg1-of (v2 / value-01 :arg2 (m / monetary-quantity :quant 187 :unit (y / yuan :mod (r / renminbi))))) :arg2 (t2 / thing :arg2-of (v3 / value-01 :arg1 (c2 / contract-02))) :time (a / already))
(l / lie-07 :arg1 (v / victim) :arg2 (m / motorway) :time (m2 / middle :op1 (n / night)))
(e / expect-01 :arg1 (s / spend-01 :arg1 (p / project :mod (n / new) :location (l / location :name (n2 / name :op1 "north" :op2 "sea"))) :arg3 (m / monetary-quantity :quant 1.4 :unit (d / dollar)) :arg3 (p2 / project :mod (n3 / new) :location (l2 / location :name (n4 / name :op1 "north" :op2 "sea"))) :arg1-of (c / compare-01 :arg2 (a / around :op1 (m2 / monetary-quantity :quant 7 :unit (d2 / dollar) :time (b / before :op1 (n5 / now) :duration (t / temporal-quantity :quant (N / N-A) :unit (y / year))))))))
(f / find-01 :arg0 (c / chef :mod (2 / 28-year-old)) :arg1 (d / die-01 :arg1 (c2 / chef :mod (22 / 28-year-old))))
(i / imply-01 :arg0 (e / enthusiasm :poss (h / he)) :arg1 (o / opposite))
(a / and :op1 (a2 / ally-01 :arg1 (p / person :arg1-of (a3 / ally-01 :arg2 (c / country :name (n / name :op1 "N-A")) :arg1-of (h / high-02 :degree (m / most))) :quant (m2 / multiple :op1 1)) :arg1-of (l / long-03)) :op2 (s / serve-01 :arg0 (p2 / person) :arg1 (s2 / service :mod (s3 / security) :mod (c2 / country))) :arg1-of (l2 / long-03))
(c / cause-01 :arg1 (c2 / complete-01 :arg1 (p / project :mod (m / monetary-quantity :quant 1.35 :unit (d / dollar :mod (r / renminbi)))) :time (n / now) :arg1-of (c3 / cause-01 :arg0 (c4 / complete-01 :arg1 (p2 / project)))))
(t / tell-01 :arg0 (p / person :arg0-of (w / watch-01 :arg1 (a / apple)) :arg0-of (w2 / watch-01 :arg1 (p2 / person :arg0-of (u / use-01 :arg1 35,000) :mod (t2 / tracks)))) :arg1 (r / rate-entity-91 :arg1 (n / number :quant-of (p3 / person :arg0-of (t3 / tracked :arg1 (r2 / rate-entity-91 :arg1 (d / day :mod (e / each)) :arg2 (t4 / temporal-quantity :quant (N / N-A) :unit (d2 / day)))) :arg2 (r3 / rate-entity-91 :arg1 (d3 / day :mod (e2 / each)) :arg2 (t5 / temporal-quantity :quant (N2 / N-A) :unit (d4 / day))) :arg3 (r4 / rate-entity-91 :arg1 (d5 / day :mod (e3 / each)) :arg2 (t6 / temporal-quantity :quant (N3 / N-A) :unit (d6 / day))) :arg3 (r5 / rate-entity-91 :arg1 (d7 / day :mod (e4 / each)) :arg2 (t7 / temporal-quantity :quant (N4 / N-A) :unit (d8 / day))) :arg3 (r6 / rate-entity-91 :arg1 (d9 / day :mod (e5 / each)) :arg2 (t8 / temporal-quantity :quant (N5 / N-A) :unit (d10 / day)))))) :arg2 (p4 / person :name (n2 / name :op1 "N-A")))
(a / and :op1 (g / go-back-19 :arg1 (s / she) :arg2 (i / in-front-of :op1 (v / value-interval :op1 15.433 :op2 15.933))) :op2 (c / capped :arg0 (s2 / she) :arg1 (i2 / it) :prep-with (f / floor :quant 15.933 :location (f2 / floor))))
(t / think-01 :arg0 (i / i) :arg1 (d / do-02 :arg0 (i2 / i) :arg1 (t2 / this) :mod (t3 / total)) :time (c / come-01 :arg1 (h / he) :arg4 (h2 / home) :time (f / first)))
(' / ' :arg0 (i / i) :arg1 (s / sign-up-03 :arg1 (i2 / i) :arg3 (t / this)) :degree (t2 / total))
(a / and :op1 (s / sitting :arg1 (d / didn :mod (e / edmund)) :arg2 (o / or :op1 (u / up) :op2 (c / crawls)) :time (u2 / until :op1 (i / include-91 :arg1 (h / he) :arg2 3))) :op2 (t / talks :arg0 (h2 / he) :arg1 (t2 / talk-01 :mod (t3 / total)) :mod (s2 / still)))
(a / and :op1 (t / teach-01 :arg0 (w / we) :arg1 (s / sign-01 :arg0 (h / he) :arg1 (l / language)) :arg2 (h2 / he)) :op2 (t2 / tell-01 :arg0 (p / person :arg0-of (p2 / picciuto)) :arg1 (n / news :mod (c / cbs)) :arg2 (h3 / he)))
(r / remain-01 :arg1 (w / watch-01 :mod (f / flood) :arg1-of (e / effect-03)) :time (u / until :op1 (s / saturday :arg1 (l / louisiana :quant (m / most) :location (s2 / south)))))
(a / and :op2 (i / inspire-01 :arg0 (t / team :consist-of (p / person :arg0-of (h / have-org-role-91 :arg1 (t2 / team :mod (t3 / this)) :arg3 (l / lead-02 :arg0 (t4 / team))))) :arg1 (a2 / and :op1 (p2 / person :arg0-of (h2 / have-org-role-91 :arg1 (t5 / team) :arg3 (l2 / lead-02 :arg0 (p3 / person)))) :op2 (p4 / person :arg0-of (h3 / have-org-role-91 :arg1 (t6 / team :name (n / name :op1 (s / simone))))) :op3 (p5 / person :arg0-of (h4 / have-org-role-91 :arg2 (h5 / head-of-state))) :op4 (p6 / person :arg0-of (h6 / have-org-role-91 :arg2 (h7 / head-of-state))) :op5 (p7 / person :arg0-of (h8 / have-org-role-91 :arg2 (h9 / head-of-state))) :op6 (p8 / person :arg0-of (h10 / have-org-role-91 :arg2 (h11 / head-of-state))) :op7 (p9 / person :arg0-of (h12 / have-org-role-91 :arg2 (h13 / head-of-state))) :op7 (p10 / person :mod (c / color) :quant (m / many :degree (s2 / so))))))
(p / pride-01 :arg0 (p2 / person :arg0-of (h / have-org-role-91 :arg1 (t / team :mod (t2 / this)) :arg2 (r / raisman))) :arg2 (a / and :op1 (p3 / person :mod (c / country :name (n / name :op1 "N-A"))) :op2 (p4 / person :mod (c2 / country :name (n2 / name :op1 "N-A"))) :op3 (p5 / person :mod (r2 / religious-group)) :op4 (p6 / person :mod (r3 / religious-group)) :op5 (p7 / person :mod (r4 / religious-group))))
(b / become-01 :arg1 (p / person :mod (c / country :name (n / name :op1 "N-A"))) :arg2 (c2 / country :name (n2 / name :op1 "N-A") :ord (o / ordinal-entity :value 4) :arg0-of (w / win-01 :arg1 (g / gold) :location (e / event :mod (o2 / opera) :mod (i / individual) :mod (i2 / individual))) :arg1-of (s / straight-04) :ord (o3 / ordinal-entity :value 4)))
(t / take-01 :arg0 (a / and :op1 (s / simone) :op2 (g / gabby)) :arg1 (p / path :mod (s2 / same)) :arg3 (a2 / and :op1 (a3 / aly) :op2 (m / madison)) :purpose (m2 / make-01 :arg0 (a4 / and) :arg1 (t2 / team :mod (o / olympic))))
(i / inspire-01 :arg0 (t / team :mod (t2 / this) :arg0-of (s / send-01 :arg1 (t3 / thousands :mod (g / girl :mod (y / young))) :arg2 (t4 / take-01 :arg0 (t5 / team) :arg1 (w / war :name (n / name :op1 "N-A"))))) :arg1 (g2 / great :domain (t6 / team)))
(p / pleased :arg1 (w / we) :arg2 (p2 / possible-01 :arg1 (i / increase-01 :arg0 (w2 / we) :arg1 (o / option :mod (t / treat-03) :arg2-of (a / available-02 :arg1 (p3 / person :arg0-of (s / stand-01 :arg1 (p4 / person) :arg2 (b / benefit-01 :arg0 (i2 / it) :arg1 (p5 / person))) :quant (m / many)))))) :time (d / date-entity :year (N / N-A)))
(m / multi-sentence :snt1 (c / concern-01 :arg0 (t / that)) :snt2 (t2 / turn-02 :arg0 (i / institution :mod (s / state)) :arg1 (e / eye :mod (b / blind-02)) :arg2 (b2 / behave-01 :mod (s2 / such)) :arg1-of (c2 / cause-01 :arg0 (c3 / correct-02 :arg1 (o / over-sensitivities :manner (p / political) :topic (a / and :op1 (e2 / ethnicity) :op2 (r / religion)))))))
(t / think-01 :arg0 (p / person :name (n / name :op1 "byron" :op2 "macdonald")) :arg1 (t2 / turned :arg1 (m / mic :poss (h / he)) :time (s / start-01 :arg0 (h2 / he) :arg1 (d / dispense :arg0 (h3 / he) :arg1 (t3 / thing :arg1-of (o / opine-01 :arg0 (h4 / he)) :quant (s2 / some) :arg1-of (i / include-91 :arg2 (t4 / thing :arg1-of (o2 / opine-01 :arg0 (h5 / he))) :time (e / end-01 :arg1 (f / freestyle :poss (w / woman) :mod (4 / 4x200m)))))))))
(m / multi-sentence :snt1 (f / fortunate-01 :polarity - :arg2 (w / word)) :snt2 (s / sorry-01 :arg1 (w2 / we) :arg2 (e / event :mod (i / it))))
(q / quick-02 :arg1 (a / and :op1 (a2 / apologize-01 :arg0 (n / network)) :op2 (r / release-01 :arg0 (n2 / network) :arg1 (s / state-01))) :mod (a3 / also))
(s / speak-01 :arg0 (w / we) :arg1 (a / and :op1 (m / mizrachi :arg0 (w2 / we) :arg1 (m2 / mizrachi)) :op2 (g / grandmaster :arg0 (g2 / grandmaster :mod (n / new) :poss (c / criminal-organization :name (n2 / name :op1 "N-A") :name (n3 / name :op1 (k / krav) :op2 (m3 / maga) :op3 (m4 / maga))) :mod (n4 / new) :mod (y / york-based))) :purpose (f / find-out-03 :arg0 (w3 / we) :arg1 (t / thing :manner-of (d / deal-01 :arg2 (m5 / muggers :arg1-of (r / range-01 :arg2 (c2 / close))))))))
(c / cause-01 :arg0 (n / nothing :arg2-of (f / fortunate-01 :polarity -)) :arg1 (l / leave-14 :arg0 (h / he) :arg1 (a / anything :mod (m / more :compared-to (t / taste :arg1-of (b / bad-07) :location (m2 / mouth :part-of (h2 / he)))))))
(a / and :op1 (b / become-01 :arg1 (w / wright) :arg2 (k / know-01 :arg1 (t / test-01 :arg1 (d / durability :poss (g / gut :part-of (h / he))) :location (a2 / around :op1 (w2 / world))))) :op2 (t2 / thing :arg1-of (w3 / wonderful-03) :arg1-of (w4 / wonderful-03)))
(a / and :op1 (m / move-01 :arg1 (f / family) :arg2 (f2 / family) :time (n / now)) :op2 (b / believe-01 :arg1 (l / live-01 :arg0 (f3 / family) :location (a2 / accomodation :arg1-of (p / private-02)))))
(a / add-01 :arg0 (i / i) :arg1 (a2 / and :op1 (' / ' :arg1 (i2 / i)) :op2 (u / understand-01 :arg0 (i3 / i) :arg1 (t / thing :arg1-of (r / resemble-01 :arg2 (f / fall-01 :arg1 (p / plane) :arg4 (t2 / top :poss (i4 / i))))))))
(m / multi-sentence :snt1 (e / eksote :mode (i / interrogative)) :snt2 (s / show-01 :arg0 (r / result-01 :time (d / date-entity :decade (N / N-A))) :arg1 (s2 / surplus :mod (m2 / monetary-quantity :quant 4,3 :unit (e2 / euro)) :mod (s3 / surplus) :time (y / year :ord (o / ordinal-entity :value 1) :ord (o2 / ordinal-entity :value 1) :ord (o3 / ordinal-entity :value 1)))))
(w / work-01 :arg0 (u / unit :quant (a / all) :arg1-of (i / include-91 :arg2 (u2 / unit))) :location (p / plain))
(a / and :op1 (f / found-01 :arg1 (p / person :quant 1 :arg0-of (h / have-org-role-91 :arg1 (g / group :name (n / name :op1 "N-A") :mod (i / intelligence :mod (n2 / nation))))) :arg2 (c / country)) :op2 (f2 / found-01 :arg1 (p2 / person :quant 3 :mod (n3 / nation) :arg0-of (h2 / have-org-role-91 :arg1 (u / unit :mod (i2 / intelligence :mod (e / each))) :arg2 (u2 / unit :mod (i3 / intelligence :mod (e2 / each))))) :location (c2 / country)))
(u / use-01 :arg0 (t / thieves) :arg1 (g / gloves) :time (t2 / time :mod (n / next)))
(i / it :arg0-of (h / have-rel-role-91 :arg1 (i2 / i) :arg2 (m / minister :mod (v / vice))))
(c / contrast-01 :arg1 (p / probable :domain (l / look-02 :arg0 (t / thing :arg1-of (r / report-01) :mod (n / news)) :arg1 (c2 / concern-01 :arg0 (s / stack :arg1 (c3 / compilations :mod (b / bossa)))))) :arg2 (s2 / stage :mod (t2 / this) :topic (r2 / report-01 :mod (n2 / news))))
(m / multi-sentence :snt1 (o / obligate-01 :mode (i / interrogative) :arg1 (w / we) :arg2 (a / and :op1 (h / halve :arg0 (w2 / we) :arg1 (t / tax-01 :arg2 (c / country :arg0-of (f / favor-01 :arg1 (c2 / country :name (n / name :op1 "N-A"))) :arg1-of (a2 / average-03)))) :op2 (c3 / continue-01 :arg0 (w3 / we) :arg1 (c4 / compete-01 :arg2-of (p / price-01)))) :condition (w4 / want-01 :arg0 (w5 / we) :arg1 (g / get-05 :arg1 (w6 / we) :arg2 (l / level :arg2-of (p2 / price-01 :arg1 (f2 / food)) :arg1-of (s / same-01 :arg2 (l2 / level :mod (m2 / monetary-quantity :arg2-of (p3 / price-01 :arg1 (f3 / food))))))))) :snt2 (w7 / write-01 :arg0 (i2 / i)))
(b / begin-01 :arg0 (s / stockmann :time (e / early :degree (m / more) :time (a / already))) :arg1 (p / programme :arg1-of (e2 / efficient-01 :polarity -)) :arg1-of (c / cause-01 :arg0 (a2 / attempt-01 :arg0 (t / they) :arg1 (c2 / create-01 :arg0 (t2 / they) :arg1 (m2 / monetary-quantity :quant 50 :unit (e3 / euro) :arg1-of (c3 / cost-01 :arg2 (m3 / monetary-quantity :quant 50 :unit (e4 / euro))))))))
(e / expect-01 :arg1 (p / positive :domain (t / thing :arg2-of (r / result-01 :arg1 (o / operate-01 :arg1-of (a / adjust-01)))) :time (y / year :mod (t2 / this))))
(s / seat-01 :quant (p / plenty) :location (r / rio) :time (m / morning))
(a / and :op1 (m / mean-01 :arg1 (t / that) :arg2 (e / exam :quant 50-60) :frequency (r / rate-entity-91 :arg3 (t2 / temporal-quantity :quant (N / N-A) :unit (d / day)))) :op2 (b / be-located-at-91 :arg1 (e2 / exam :quant (a2 / about :op1 4000)) :arg2 (t3 / temporal-quantity :quant (N2 / N-A) :unit (y / year)) :mod (j / just)))
(t / take-01 :arg0 (t2 / thieves) :arg1 (s / superpower :quant (m / more :mod (e / even))) :arg1-of (c / cause-01 :arg0 (r / report-01 :arg0 (v / victim) :arg1 (s2 / steal-01 :arg0 (v2 / victim) :arg2 (p / police)) :mod (o / only))) :prep-in (t3 / truth))
(s / say-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg2 (i / investigate-01 :mod (s2 / senior)))) :arg1 (a / and :op1 (c / catch-01 :arg1 (t / thieves :mod (b / bike)) :frequency (r / rate-entity-91 :arg3 (t2 / temporal-quantity :quant (N / N-A) :unit (w / week)))) :op2 (s3 / say-01 :arg0 (p2 / person :arg0-of (h2 / have-org-role-91 :arg1 (p3 / police))) :arg1 (l / leppämäki :mod (s4 / senior)) :time (w2 / week :mod (e / every)))) :location (h3 / helsinki))
(o / oppose-01 :arg0 (s / she) :arg1 (p / partner-01 :arg0 (s2 / she) :arg1-of (u / use-01 :arg0 (s3 / she) :arg2 (s4 / support-01 :arg0 (s5 / she)))) :time (n / nowadays))
(m / multi-sentence :snt1 (r / reason :mod (a / another) :arg0-of (c / cause-01 :arg1 (i / interest :mod (t / tame))) :domain (r2 / reason :mod (a2 / another) :arg0-of (c2 / cause-01 :arg1 (t2 / think-01 :arg0 (s / someone) :arg1 (i2 / it))))) :snt2 (r3 / reason :mod (t3 / traditional) :mod (t4 / tradition) :condition (w / win-01 :arg0 (c3 / country :name (n / name :op1 "N-A")) :arg1 (m2 / medal :mod (s2 / surprise-01)) :time (e / early))) :snt3 (j / jumped :arg1 (i3 / interest-01) :arg1-of (s3 / sure-02)))
(t / time :quant 150000 :domain (a / apply-01) :mod (d / downloaded))
(m / multi-sentence :snt1 (p / pensioner :mode (i / interrogative)) :snt2 (e / efficient-01 :mode (i2 / interrogative) :arg1 (t / tax-01) :mod (s / still) :compared-to (w / wage-earners)))
(m / multi-sentence :snt1 (s / say-01 :arg0 (p / person :name (n / name :op1 "ihalainen")) :arg1 (a / and :op1 (e / emerge-02 :arg0 (c / country :name (n2 / name :op1 "N-A")) :time (b / before :op1 (e2 / elect-01 :arg1-of (g / general-02)) :mod (j / just))) :op2 (p2 / promise-01 :arg0 (p3 / person) :arg2 (p4 / pensioner)))) :snt2 (m2 / make-01 :arg1 (t / thing :arg1-of (t2 / tax-01)) :degree (m3 / more) :compared-to (e3 / equal-01 :arg1 (t3 / tax-01) :arg2 (w / wage-earners))))
(g / get-01 :arg0 (e / embassy :mod (f / finnish)) :arg1 (t / thing :arg1-of (c / comment-01) :quant (s / some)) :path (f2 / facebook) :source (f3 / finns :location (c2 / country :name (n / name :op1 "N-A"))) :time (a / after :op1 (a2 / attack-01 :instrument (b / bomb))))
(a / attempt-01 :arg0 (e / embassy) :arg1 (c / contact-01 :arg0 (e2 / embassy) :arg1 (p / person :mod (t / that) :arg1-of (b / be-located-at-91 :arg2 (h / hin :mod (h2 / hua)))) :purpose (g / get-01 :arg0 (e3 / embassy) :arg1 (i / information :topic (t2 / town))) :mod (e4 / especially)))
(a / and :op1 (d / die-01 :arg1 (w / woman :arg1-of (l / local-02))) :op2 (i / injure-01 :arg1 (p / person :quant (o / over :op1 20) :mod (o2 / other))) :op3 (w2 / wound-01 :arg1 (p2 / person :quant (a2 / at-least :op1 9) :arg0-of (t / tour-01))))
(m / multi-sentence :snt1 (a / and :op1 (r / run-01 :arg0 (p / person :arg0-of (r2 / run-01 :arg1 (a2 / agency :mod (e / estate :mod (r3 / real)))) :arg0-of (h / have-org-role-91 :arg1 (a3 / agency :mod (e2 / estate :mod (r4 / real)))) :arg0-of (h2 / have-org-role-91 :arg1 (a4 / agency :mod (e3 / estate :mod (r5 / real))) :arg2 (c / child))) :arg1 (p2 / person :arg0-of (h3 / have-org-role-91 :arg1 (a5 / agency :mod (e4 / estate :mod (r6 / real)))) :arg0-of (h4 / have-rel-role-91 :arg1 (p3 / person) :arg2 (c2 / child)))) :op2 (w / worry-01 :arg0 (a6 / attack-01 :time (d / date-entity :decade (N / N-A))) :arg1 (p4 / person))) :snt2 (h5 / have-03 :arg0 (a7 / attack-01 :time (d2 / date-entity :decade (N2 / N-A))) :arg1 (t / tourism)))
(m / multi-sentence :snt1 (h / huovila :mode (i / interrogative)) :snt2 (b / be-located-at-91 :arg1 (o / office :time (d / date-entity :decade (N / N-A))) :arg2 (s / scene :mod (a / attack-01 :instrument (b2 / bomb)) :quant (f / few))))
(b / become-01 :arg1 (p / phelps :ord (o / ordinal-entity :value 1)) :arg2 (o2 / ordinal-entity :value 1) :purpose (w / win-01 :arg0 (p2 / phelps) :arg1 (g / gold :mod (o3 / olympic)) :arg2 (e / event :mod (c / consecutive :quant 4) :mod (i / individual))) :time (t / time :arg1-of (s / same-01)))
(h / have-concession-91 :arg1 (s / step-01 :polarity - :direction (b / backwards)))
(a / and :op1 (a2 / arrest-01 :arg1 (p / person :quant 5 :mod (o / other))) :op2 (q / question-03 :arg0 (p2 / police) :arg1 (p3 / person :quant 2) :time (b / before :op1 (r / release-01 :arg0 (p4 / police) :arg1 (p5 / person)))) :time (c / connect-01 :arg1-of (s / same-01)))
(s / say-01 :arg0 (w / website :mod (n / news)) :arg1 (a / arrest-01 :arg1 (p / person :arg1-of (a2 / arrest-01 :arg2 (t / terrorism) :arg1-of (c / cause-01 :arg0 (a3 / arrest-01 :arg0 (p2 / police) :arg1 (p3 / person :arg0-of (h / have-org-role-91 :arg1 (p4 / police) :arg2 (m / member))) :time (a4 / already)))))))
(c / clear-06 :arg1 (o / offence :mod (o2 / oppose-01 :arg1 (t / tuuli))) :li 1)
(m / multi-sentence :snt1 (p / prove-01 :arg1 (b / bring-01 :arg1 (t / thing :mod (t2 / this)) :arg2 (t3 / temporal-quantity :quant (N / N-A) :unit (y / year)))) :snt2 (l / life :time (d / date-entity :decade (N2 / N-A))))
(m / multi-sentence :snt1 (d / drive-01 :arg0 (l / lorry) :destination (d2 / direction :mod (f / forssa))) :snt2 (h / hit-01 :mode (i / interrogative) :arg0 (c / car :mod (o / oncoming)) :arg1 (l2 / lorry) :time (d3 / date-entity :decade (N / N-A))))
(m / multi-sentence :snt1 (h / have-condition-91 :arg2 (a / and :op1 (t / they) :op2 (t2 / they))) :snt2 (s / say-01 :arg0 (i / it) :arg1 (s2 / sign-01)))
(a / agree-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg2 (m / minister :mod (p2 / prime)))) :arg1 (a2 / agree-01 :arg0 (a3 / and :op1 (p3 / person :arg0-of (h2 / have-org-role-91 :arg2 (m2 / minister :mod (p4 / prime)))) :op2 (p5 / person :arg0-of (h3 / have-org-role-91 :arg2 (m3 / minister :mod (f / foreign))))) :arg1 (s / situation :mod (r / right :mod (h4 / human))) :location (s2 / situation :mod (r2 / right :mod (h5 / human)))) :arg2 (p6 / person :arg0-of (h6 / have-org-role-91 :arg2 (m4 / minister :mod (p7 / prime)))))
(s / say-01 :arg0 (p / person :name (n / name :op1 "Putin")) :arg1 (a / and :op1 (r / request-01 :arg0 (p2 / person) :arg1 (t / transfer-01 :arg0 (p3 / person) :arg1 (r2 / role :mod (a2 / another)))) :op2 (p4 / propose-01 :arg0 (p5 / person) :arg1 (v / vaino :arg0 (p6 / person) :arg1 (c / candidate :beneficiary (p7 / position-02 :arg0 (p8 / person))) :time (t2 / today)))))
(s / say-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (p2 / police) :arg2 (s2 / spokesman))) :arg1 (y / yoosumran :arg0 (p3 / person :arg0-of (h2 / have-org-role-91 :arg1 (p4 / police) :arg2 (s3 / spokesman))) :arg1 (p5 / person :arg0-of (h3 / have-org-role-91 :arg1 (p6 / police) :arg2 (s4 / spokesman))) :arg1-of (s5 / say-01 :arg0 (p7 / person :arg0-of (h4 / have-org-role-91 :arg1 (p8 / police) :arg2 (s6 / spokesman))) :arg1-of (s7 / say-01 :arg0 (p9 / person :arg0-of (h5 / have-org-role-91 :arg1 (p10 / police) :arg2 (s8 / spokesman))))) :time (t / time :arg1-of (s9 / same-01) :time-of (b / begin-01 :arg0 (p11 / person :arg0-of (t2 / tour-01)) :arg1 (l / leave-15 :arg0 (p12 / person) :arg1 (p13 / person :arg0-of (t3 / tour-01)))))))
(w / went :arg1 (b / bomb :quant 2) :time (m / morning :mod (n / next)) :arg1-of (l / local-02) :time (m2 / morning :mod (n2 / next)))
(m / multi-sentence :snt1 (w / win-01 :mode (i / interrogative) :arg0 (w2 / win-01 :arg0 (c / conscripts)) :arg2 (s / situation :mod (w3 / war) :mod (a / acute))) :snt2 (s2 / send-01 :arg1 (w4 / win-01 :mod (t / total)) :arg2 (b / battle-01 :time (u / until :op1 (a2 / after :op1 (h / have-06 :arg0 (t2 / they) :arg1 (o / oath :poss (t3 / they))))))))
(w / win-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (a / and :op1 (p2 / person :arg0-of (h2 / have-rel-role-91 :arg1 (p3 / person) :arg2 (h3 / husband))) :op2 (p4 / person :arg0-of (h4 / have-rel-role-91 :arg1 (p5 / person) :arg2 (h5 / husband))) :op3 (p6 / person :arg0-of (h6 / have-rel-role-91 :arg1 (p7 / person) :arg2 (h7 / husband))) :op4 (p8 / person :arg0-of (h8 / have-rel-role-91 :arg1 (p9 / person) :arg2 (h9 / husband))) :op5 (p10 / person :arg0-of (h10 / have-rel-role-91 :arg1 (p11 / person) :arg2 (h11 / husband))) :op6 (p12 / person :arg0-of (h12 / have-rel-role-91 :arg1 (p13 / person) :arg2 (h13 / husband))) :op6 (p14 / person :arg0-of (h14 / have-rel-role-91 :arg1 (p15 / person) :arg2 (h15 / husband))) :op7 (p16 / person :arg0-of (h16 / have-rel-role-91 :arg1 (p17 / person) :arg2 (h17 / husband))) :op7 (p18 / person :arg0-of (h18 / have-rel-role-91 :arg1 (p19 / person) :arg2 (h19 / husband)))))) :arg1 (a2 / argument :arg1-of (h20 / hard-04) :topic (h21 / house)))
(a / and :op2 (o / obligate-01 :arg1 (p / person :arg0-of (s / sell-01)) :arg2 (c / cover-01 :arg0 (p2 / person) :arg1 (m / monetary-quantity :quant 47,000 :unit (e / euro) :arg2-of (t / total-01)))))
(a / and :op1 (o / obligate-01 :arg1 (w / woman) :arg2 (r / ready-02 :arg1 (w2 / woman) :arg2 (g / give :arg0 (w3 / woman) :arg1 (c / citizenship :mod (s / swedish) :poss (w4 / woman)))) :mod (a2 / also)) :op2 (a3 / and :op1 (g2 / give-01 :arg0 (w5 / woman) :arg1 (b / biography :poss (w6 / woman) :mod (h / handwritten)) :arg2 (o2 / office :mod (r2 / race) :poss (w7 / woman))) :op2 (g3 / good-04 :arg1 (w8 / woman) :arg2 (n / next :poss (o3 / office) :mod (n2 / next)))))
(r / relates :arg0 (b / book) :arg1 (t / thing :arg1-of (w / want-01 :arg0 (s / sillanpää :name (n / name :op1 (s2 / saara) :op2 (t2 / törmänen) :op3 (t3 / törmänen)))) :mod (t4 / total :degree (t5 / total))))
(t / thing :arg1-of (a / argue-01) :domain (t2 / this) :arg1-of (w / work-09))
(m / multi-sentence :snt1 (h / heila :mode (i / interrogative) :mod (p / puppies)) :snt2 (c / coordinate-01 :arg0 (t / train-01 :arg0 (c2 / customs) :arg2 (d / dog :arg0-of (t2 / train-01))) :arg1 (t3 / train-01 :time (d2 / date-entity :decade (N / N-A)))))
(c / change-01 :arg0 (g / government-organization :arg0-of (g2 / govern-01)) :arg1 (g3 / government-organization :arg0-of (g4 / govern-01) :poss (g5 / government-organization)) :time (l / leak-01 :arg1 (p / panama)))
(s / state-01 :arg0 (r / rule-01) :arg1 (l / liable :arg1 (p / person :mod (c / country :name (n / name :op1 "N-A")) :mod (e / ethnic-group :name (n2 / name :op1 "N-A")) :mod (e2 / ethnic-group :name (n3 / name :op1 "N-A"))) :arg2 (c2 / create-01 :arg0 (p2 / person) :arg1 (r2 / risk-01 :arg2 (d / disrupt-01 :arg1 (o / order :arg1-of (p3 / public-02))) :arg1-of (t / target-01 :arg2 (a / attack-01 :arg0 (t2 / terrorist)))))) :mod (a2 / also))
(k / kill-01 :arg0 (a / and :op1 (m / man :arg1-of (c / connect-01 :arg2 (e / extremism))) :op2 (m2 / man :arg1-of (c2 / connect-01 :arg2 (e2 / extremism)))) :arg1 (c3 / church) :location (n / north :part-of (n2 / north)) :arg1-of (c4 / cause-01 :arg0 (k2 / kill-01 :arg0 (m3 / man :arg1-of (c5 / connect-01 :arg2 (e3 / extremism))) :arg1 (c6 / church))) :time (e4 / end-01 :arg1 (d / date-entity :decade (N / N-A))))
(m / multi-sentence :snt1 (m2 / mtk) :snt2 (h / hakkarainen :mode (i / interrogative) :time (d / date-entity :decade (N / N-A)) :location (t / thing :arg1-of (g / gift-01) :mod (e / email))))
(a / and :op2 (s / say-01 :arg0 (h / he) :arg1 (a2 / affect-01 :arg0 (m / model) :arg1 (p / part :mod (s2 / small) :part-of (p2 / person :arg0-of (o / own-01 :arg1 (w / web)))) :mod (o2 / only))))
(a / and :op1 (d / drive-01 :arg0 (c / car :mod (c2 / country :name (n / name :op1 "N-A")) :arg1-of (c3 / connect-01 :arg2 (c4 / city))) :arg1 (p / plane :mod (c5 / country :name (n2 / name :op1 "N-A")) :arg1-of (c6 / connect-01 :arg2 (c7 / city)))) :op2 (p2 / patrol-01 :arg0 (p3 / plane :mod (c8 / country) :mod (c9 / country)) :arg1 (s / song :mod (n3 / new)) :location (e / everywhere) :location (c10 / country)))
(b / begins :arg0 (s / she) :arg1 (p / person :arg0-of (h / have-rel-role-91 :arg1 (g / girl) :arg2 (f / father) :time (f2 / future)) :arg0-of (h2 / have-rel-role-91 :arg1 (g2 / girl) :arg2 (f3 / father) :time (f4 / future)) :arg0-of (h3 / have-rel-role-91 :arg1 (g3 / girl) :arg2 (f5 / father) :time (f6 / future)) :arg0-of (h4 / have-rel-role-91 :arg1 (g4 / girl) :arg2 (f7 / father) :time (f8 / future)) :arg0-of (h5 / have-rel-role-91 :arg1 (g5 / girl) :arg2 (f9 / father) :time (f10 / future))))
(e / enough :domain (c / cut-02 :arg1 (t / thing :quant 4000000000)) :time (a / already))
(s / shortened :arg1 (d / duration :poss (s2 / security :mod (e / employ-01 :polarity -))) :arg2 (t / temporal-quantity :quant (N / N-A) :unit (d2 / day)) :arg4 (t2 / temporal-quantity :quant (N2 / N-A) :unit (d3 / day)))
(h / have-03 :arg0 (p / person :mod (c / country :name (n / name :op1 "N-A"))) :arg1 (r / rhetoric :mod (n2 / new)) :purpose (s / season :arg1-of (c2 / come-01)))
(m / multi-sentence :snt1 (r / represent-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg2 (h2 / hasu))) :arg1 (p2 / person :arg1-of (l / local-02) :arg0-of (h3 / have-org-role-91 :arg2 (h4 / head-of-state))) :location (t / tournament)) :snt2 (r2 / represent-01 :arg0 (p3 / person :quant 1 :arg1-of (i / include-91 :arg2 (p4 / person :arg0-of (p5 / play-01 :location (c / country :name (n / name :op1 "N-A"))) :mod (t2 / top) :location (c2 / country :name (n2 / name :op1 "N-A"))) :arg3 (s / several :op1 (t3 / temporal-quantity :quant (N / N-A) :unit (y / year))))) :arg1 (s2 / she)))
(s / say-01 :arg0 (p / person :arg0-of (o / observe-01) :quant (s2 / some)) :arg1 (c / contrast-01 :arg1 (i / inspire-01 :arg0 (t / thing :mod (t2 / this)) :arg1 (f / filter :mod (t3 / this))) :arg2 (s3 / say-01 :arg0 (p2 / person :arg0-of (o2 / observe-01) :quant (s4 / some)) :arg1 (r / racially :domain (t4 / thing)))))
(l / lenses :arg1 (s / skill :mod (f / feature-warping) :arg0-of (g / generate-01 :arg1 (d / day :quant (m / more-than :op1 30000000) :arg1-of (e / enhance-01)))) :manner (b / blunt-02))
(c / call-01 :arg0 (p / person :arg0-of (c2 / criticize-01) :quant (s / some)) :arg1 (i / it) :arg2 (r / racist) :time (p2 / push-01 :arg0 (p3 / person) :arg1 (p4 / person :arg0-of (u / use-01) :mod (s2 / some)) :arg2 (p5 / person :arg0-of (u2 / use-01) :mod (s3 / some)) :time (w / week :mod (t / this))) :arg0-of (c3 / cause-01 :arg1 (c4 / call-01 :arg0 (p6 / person :arg0-of (c5 / criticize-01) :quant (s4 / some)) :arg1 (p7 / person :mod (r2 / racist)) :arg2 (c6 / caricature :mod (r3 / racist)))))
(r / reject-01 :arg0 (p / person :mod (o / other)) :arg1 (c / compare-01 :arg1 (a / anime)))
FAILED_TO_PARSE#Couldn't convert to full AMR graph.
(m / multi-sentence :snt1 (c / create-01 :arg0 (p / person :quant 1 :arg1-of (i / include-91 :arg2 (p2 / person :arg0-of (i2 / insult-01 :arg1 (p3 / person :arg0-of (u / use-01)))))) :arg1 (i3 / image) :arg0-of (i4 / insult-01 :arg1 (p4 / person :arg0-of (u2 / use-01)))) :snt2 (h / hard-02 :arg1 (g / go-01 :arg1 (t / thing :mod (t2 / type :mod (t3 / this))) :arg4 (t4 / thing :mod (t5 / type :mod (t6 / this))) :arg1-of (r / resemble-01 :arg2 (t7 / thing :arg1-of (d / do-02 :arg0 (p5 / person :name (n / name :op1 "katie" :op2 "zhu")) :time (b / before)))) :degree (m2 / more :degree (m3 / much)))))
(a / and :op1 (r / run :arg0 (s / she) :arg1 (s2 / side :mod (l / left) :part-of (f / field)) :arg1-of (l2 / long-03)) :op2 (c / curled :arg0 (s3 / she) :arg1 (b / ball :mod (l3 / left)) :time (m / middle)) :op3 (w / whipped :arg0 (s4 / she) :arg1 (b2 / ball) :purpose (g / give-01 :arg0 (s5 / she) :arg1 (l4 / lead-01 :arg0 (p / person :mod (c2 / country :name (n / name :op1 "N-A"))) :mod (2 / 2-0)))))
(a / and :op2 (a2 / and :op1 (q / quiet :domain (s / street :poss (i / it))) :op2 (s2 / safe-01 :arg1 (s3 / street)) :op3 (c / clean-04)))
(u / use-01 :arg0 (p / person :mod (c / country :name (n / name :op1 "N-A"))) :arg1 (d / distributor :arg1-of (s / same-01)) :arg2 (a / and :op1 (b / bagels) :op2 (b2 / buy-01 :arg1 (m / model :arg1-of (s2 / same-01 :arg2 (m2 / machine :mod (e / espresso)))))))
(s / say-01 :arg0 (h / he) :arg1 (n / need-01 :arg0 (i / i) :arg1 (s2 / smell :arg0 (i2 / i) :arg1 (t / that))))
(a / abandon-01 :arg1 (w / way :quant (m / many) :arg1-of (i / include-91 :arg2 (w2 / way :mod (f / food) :mod (d / depression-era)))) :time (a2 / as-soon-as :op1 (g / get-05 :arg1 (c / country) :arg2 (f2 / foot :part-of (c2 / country)) :direction (b / back))))
(c / contrast-01 :arg1 (c2 / control-01 :arg0 (w / we) :arg1 (c3 / city) :degree (f / full) :time (n / now)) :arg2 (t / tell-01 :arg0 (h / he) :arg1 (o / operate-01 :arg0 (w2 / we) :arg1-of (c4 / cause-01 :arg0 (o2 / operate-01 :arg0 (w3 / we))))))
(c / cite-01 :arg0 (a / and :op1 (p / person :arg0-of (h / have-org-role-91 :arg1 (s / service :mod (i / internal-02)))) :op2 (p2 / person :arg0-of (h2 / have-rel-role-91 :arg1 (p3 / person) :arg2 (l / lawyer)))) :arg1 (a2 / audit-01 :arg0 (s2 / service :mod (i2 / internal-02)) :arg1-of (c2 / cause-01 :arg0 (r / reason :arg0-of (c3 / cause-01 :arg1 (r2 / refuse-01 :arg0 (p4 / person) :arg1 (r3 / release-01 :arg0 (p5 / person) :arg1 (r4 / returns :poss (p6 / person)))))))))
(w / write-01 :arg0 (p / person :name (n / name :op1 "lanzmann")))
(a / and :op1 (v / visit-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg2 (a2 / ambassador))) :arg1 (c / country :name (n / name :op1 "N-A"))) :op2 (c2 / change-01 :arg1 (s / something :arg1-of (h2 / hope-01 :arg0 (a3 / ambassador)))) :time (t / time :arg1-of (s2 / same-01)))
(s / see-01 :arg0 (t / that) :arg1 (a / and :op1 (p / person :mod (y / young :degree (m / more :compared-to (p2 / person :mod (y2 / young :degree (m2 / more :quant (t2 / temporal-quantity :quant (N / N-A) :unit (y3 / year)))) :arg1-of (b / bear-02 :location (c / country :name (n / name :op1 "N-A")) :mod (a2 / also)))) :arg0-of (h / have-org-role-91 :arg1 (c2 / country :name (n2 / name :op1 "N-A")) :arg3 (a3 / apprentice-01 :arg0 (p3 / person)))) :mod (a4 / also)) :op2 (t3 / take-01 :arg0 (p4 / person) :arg1 (t4 / tally :poss (p5 / person)) :arg3 (a5 / and :op1 (d / drone :mod (g / gold)) :op2 (s2 / silver :quant 1) :op3 (s3 / silver :quant 1))) :mod (a6 / also) :arg1-of (c3 / cause-01 :arg0 (s4 / see-01 :arg0 (p6 / person :mod (y4 / young :degree (m3 / more :quant (t5 / temporal-quantity :quant (N2 / N-A) :unit (y5 / year))) :arg1-of (b2 / bear-02 :location (c4 / country) :mod (a7 / also)))) :arg1 (p7 / person) :mod (a8 / also)))))
(h / have-03 :arg0 (p / person :name (n / name :op1 "N-A") :arg1-of (a / appear-01 :time (y / year :mod (l / last)))) :arg1 (c / career :poss (p2 / person) :arg1-of (i / include-91 :arg2 (c2 / career :poss (p3 / person)) :arg3 (r / release-01 :arg1 (p4 / person)))) :time (y2 / year :mod (l2 / last)))
(s / say-01 :arg0 (c / company :quant 1 :arg1-of (i / include-91 :arg2 (c2 / company :arg0-of (m / make-02 :arg1 (s2 / software :mod (t / that)))))) :arg1 (a / attempt-01 :arg0 (c3 / company :arg1-of (i2 / include-91 :arg2 (c4 / company :arg0-of (m2 / make-01 :arg1 (s3 / software :mod (t2 / that)))) :arg3 (o / online))) :arg1 (a2 / and :op1 (c5 / company :arg0-of (m3 / make-01 :arg1 (m4 / money) :arg3 (o2 / online))) :op2 (a3 / attempt-01 :arg0 (c6 / company) :arg1 (c7 / circumvent :arg0 (c8 / company) :arg1 (a4 / amount :mod (s4 / software :mod (a5 / ad-blocking))))))))
(r / run-02 :arg0 (w / woman) :prep-on (m / motorway :mod (s / swiss)) :manner (s2 / suicide) :manner (s3 / suicide))
(s / suggest-01 :arg0 (r / rate :mod (l / late :degree (m / most)) :mod (l2 / late :degree (m2 / most))) :arg1 (s2 / sport :mod (m3 / massive) :quant (m4 / more) :compared-to (s3 / star :mod (m5 / massive))))
(a / and :op1 (r / rebull :arg0 (a2 / and :op1 (p / person :arg0-of (h / have-org-role-91 :arg2 (h2 / head-of-state))) :op2 (p2 / person :arg0-of (h3 / have-org-role-91 :arg1 (s / she) :arg3 (d / detail-01)))) :arg1 (a3 / analyze-01 :arg0 (p3 / person) :arg1 (r2 / rate :name (n / name :op1 (t / the) :op2 (t2 / the))) :time (l / late :degree (m / most))) :location (p4 / paper :quant 3 :mod (n2 / new))) :op2 (p5 / publish-01 :arg1 (a4 / and) :location (j / journal :mod (a5 / astronomical)) :time (s2 / soon)))
(c / conduct-01 :arg0 (m / media :arg1-of (c2 / conduct-01 :arg0 (a / and :op1 (p / person :arg0-of (h / have-org-role-91 :arg2 (h2 / head-of-state))) :op2 (p2 / person :arg0-of (o / offense-02 :arg1 (b / building :name (n / name :op1 "N-A"))))))) :arg1 (p3 / person :arg0-of (h3 / have-org-role-91 :arg2 (h4 / head-of-state))) :duration (m2 / multiple :op1 (t / temporal-quantity :quant (N / N-A) :unit (m3 / month))))
(u / up :arg0 (p / person :name (n / name :op1 "dettori")) :time (a / after :op1 (w / win-01 :arg0 (p2 / person) :time (a2 / after :op1 (w2 / win-01)))))
(w / work-09 :arg1 (i / it) :manner (a / amr-unknown))
(p / phone-number-entity :value (N / N-A))
(a / and :op1 (p / posted :arg1 (s / she) :time (p2 / post-01 :arg1 (t / total :poss (s2 / she) :mod (f / final)))) :op2 (e / end-01 :arg1 (a2 / and :op1 (j / journey :arg0 (s3 / she)) :op2 (j2 / journey :arg0 (s4 / she) :arg1-of (l / long-03)))))
(o / obligate-01 :arg1 (w / we) :arg2 (a / and :op1 (b / bring-01 :arg0 (w2 / we) :arg1 (p / person :arg1-of (a2 / afford-01 :arg1-of (p2 / possible-01 :polarity -))) :arg2 (c / community :mod (y / young :degree (m / more)) :arg1-of (i / inspire-01 :arg0 (a3 / and :op1 (s / simone) :op2 (g / gabby) :op3 (l / laurie)))))))
(a / and :op1 (m / move-01 :arg1 (g / group :consist-of (d / doctor)) :arg2 (c / contract :mod (n / new)) :time (b / before :op1 (m2 / move-01 :arg1 (g2 / group :consist-of (d2 / doctor) :ord (o / ordinal-entity :value 1)) :arg2 (c2 / contract :mod (n2 / new)))) :time (b2 / before :op1 (m3 / move-01 :arg1 (g3 / group :consist-of (d3 / doctor) :ord (o2 / ordinal-entity :value 1)) :arg2 (c3 / contract :mod (n3 / new))))) :op2 (r / run-02 :arg0 (g4 / group)))
(s / slashes :arg0 (t / ticagrelor :arg1 (d / drug)) :arg1 (r / risk-01 :arg2 (a / attack-01 :arg1 (p / person) :instrument (d2 / disease :mod (h / heart))) :arg1-of (r2 / repeat-01)))
(h / have-condition-91 :arg1 (p / possible-01 :arg1 (c / cause-01 :arg0 (i / it) :arg1 (b / blood :mod (b2 / blood)))) :arg2 (b3 / block-01 :arg0 (i2 / it) :arg1 (b4 / blood)) :arg0-of (c2 / cause-01 :arg1 (a / attack-01 :mod (h2 / heart))))
FAILED_TO_PARSE#Couldn't convert to full AMR graph.
(a / and :op1 (s / star :domain (a2 / and :op1 (s2 / star :mod (s3 / soccer)) :op2 (s4 / star :mod (d / dexter)))) :op2 (f / face-01 :arg0 (a3 / and) :arg1 (a4 / and :op1 (s5 / shapes) :op2 (e / eye)) :arg1-of (r / resemble-01)) :mod (i / indeed))
(a / and :op1 (t / take-out-11 :arg0 (s / she) :arg1 (k / knickers :location (m / middle :part-of (f / floor :mod (s2 / shop))))) :op2 (s3 / stripped :arg0 (s4 / she) :arg1 (a2 / and :op1 (t2 / tights :poss (s5 / she)) :op2 (p / pants :arg1 (s6 / she)))) :op3 (p2 / put-01 :arg0 (s7 / she) :arg1 (t3 / they) :arg2 (o / on)))
(m / multi-sentence :snt1 (d / do-02 :arg0 (w / we) :arg1 (b / brainstorm :arg1-of (c / crazy-03) :quant (l / lot) :arg1-of (e / end-01 :location (i / idea :name (n / name :op1 (' / '')))))) :snt2 ('2 / '' :mode (e2 / expressive)))
(s / swore :quant 70 :mod (c / conscripts))
(h / help-01 :arg0 (a / and :op1 (g / gather-03 :arg0 (u / unit)) :op2 (a2 / analysed :arg0 (u2 / unit))) :arg1 (f / focus-01 :arg0 (u3 / unit) :arg2 (a3 / activity-06 :arg0 (p / police) :mod (d / day)) :arg1-of (c / cause-01 :arg0 (n / need-01 :arg0 (u4 / unit) :arg1 (a4 / activity-06) :degree (m / most)))))
(p / possible-01 :arg1 (e / equate-01 :arg1 (p2 / person :arg0-of (d / depend-01 :arg1 (h / have-03 :arg0 (p3 / person) :arg1 (i / information :quant (m / more))))) :arg2 (p4 / person) :mod (e2 / either)))
(c / contrast-01 :arg1 (w / walk-01 :polarity - :arg0 (p / person :arg1-of (e / employ-01 :arg0 (u / unit :mod (r / rta)))) :direction (a / around) :prep-with (c2 / collars :arg0 (p2 / person))) :arg2 (p3 / public-02 :polarity - :arg1 (w2 / work-01 :arg0 (p4 / person)) :arg1-of (c3 / complete-02) :mod (e2 / either)))
(a / and :op1 (a2 / age-01 :arg1 (p / person :arg0-of (h / have-org-role-91 :arg1 (f / family :arg1-of (h2 / have-org-role-91 :arg0 (p2 / person) :arg2 (m / member))) :arg2 (m2 / member))) :arg2 (t / temporal-quantity :quant (N / N-A) :unit (y / year))) :op2 (s / say-01 :arg0 (f2 / family :arg1-of (h3 / have-org-role-91 :arg0 (p3 / person) :arg2 (m3 / member))) :arg1 (d / die-01 :arg1 (p4 / person :arg1-of (d2 / die-01 :arg1-of (c / cause-01 :arg0 (p5 / plan-01 :arg0 (p6 / person) :arg1 (a3 / and :op1 (f3 / flee-05 :arg0 (p7 / person) :arg1 (c2 / country :location (m4 / military :name (n / name :op1 "N-A")))) :op2 (r / return-01 :arg1 (p8 / person) :arg4 (c3 / country :name (n2 / name :op1 "N-A"))))))) :mod (j / just)))))
(a / audience :degree (m / more :degree (f / far)) :time (a2 / arrive-01 :arg1 (i / i)) :arg1-of (c / cause-01 :arg0 (f2 / fopp :arg1 (f3 / floor :mod (e / entire :mod (a3 / almost))) :arg2 (v / vinyl) :time (n / now))))
(w / window-shopping :arg1 (s / she) :arg1-of (i / instead-of-91 :arg2 (w2 / window-shopping :arg1 (s2 / spree :arg3-of (s3 / spend-01)))))
(s / say-01 :arg0 (p / person :mod (y / young :degree (m / most) :compared-to (y2 / young :degree (e / equal) :compared-to (y3 / young :domain (p2 / person))))) :arg1 (' / '' :arg1 (p3 / person :mod (t / this) :arg0-of (h / have-rel-role-91 :arg1 (p4 / person) :arg2 (c / child))) :arg2 (p5 / person :mod (t2 / this) :arg0-of (h2 / have-rel-role-91 :arg1 (p6 / person) :arg2 (c2 / child)))))
(d / drop-01 :arg0 (t / thing :arg2-of (p / price-01 :arg1 (f / food) :location (c / country :name (n / name :op1 "N-A")))) :arg1 (t2 / thing :arg2-of (p2 / price-01 :arg1 (f2 / food) :location (c2 / country))) :ord (o / ordinal-entity :value 2 :range (y / year :mod (l / last))) :arg0-of (h / have-03 :arg1 (l2 / level :mod (s / same) :arg1-of (s2 / same-01 :arg2 (l3 / level :mod (w / wage-01 :arg0 (c3 / country)))))))
(c / contrast-01 :arg1 (s / seat-01 :polarity - :mod (s2 / still) :domain (c2 / country :name (n / name :op1 "N-A")) :mod (s3 / still)) :arg2 (d / drop-01 :arg1 (t / thing :arg2-of (p / price-01 :arg1 (f / food))) :arg1-of (s4 / significant-02)))
(r / reveal-01 :arg1 (a / age-01 :arg1 (t / thing :arg1-of (a2 / age-01 :arg2 (t2 / temporal-quantity :quant (N / N-A) :unit (y / year))) :arg1-of (a3 / average-04)) :arg2 (a4 / at-least :op1 (t3 / temporal-quantity :quant (N2 / N-A) :unit (y2 / year)))))
(b / begin-01 :arg0 (s / stockmann :time (e / early :degree (m / more) :time (a / already))) :arg1 (p / programme :arg1-of (e2 / efficient-01 :polarity -)) :arg1-of (c / cause-01 :arg0 (a2 / attempt-01 :arg0 (t / they) :arg1 (c2 / create-01 :arg0 (t2 / they) :arg1 (m2 / monetary-quantity :quant 50 :unit (e3 / euro) :arg1-of (c3 / cost-01 :arg2 (m3 / monetary-quantity :quant 50 :unit (e4 / euro))))))))
(r / result-01 :arg1 (t / thing :arg2-of (r2 / result-01 :arg1 (o / operate-01))) :arg2 (l / lose-02 :arg0 (g / group) :arg1 (t2 / thing :quant 4.1)) :time (y / year :mod (s / same)))
(a / and :op1 (b / be-located-at-91 :arg1 (p / person :ord (o / ordinal-entity :value 4) :arg0-of (h / have-org-role-91 :arg2 (c / championship))) :arg2 (d / distance-01 :arg1 (p2 / person) :mod (t / this)) :time (y / year :mod (l / last)) :location (w / world)) :op2 (i / include-91 :arg1 (p3 / person :quant 1 :arg1-of (i2 / include-91 :arg2 (p4 / person :arg0-of (w2 / win-01 :location (r / rio))))) :arg2 (r2 / rio)))
(b / be-located-at-91 :arg1 (e / everyone) :arg2 (a / amr-unknown))
(b / be-located-at-91 :arg1 (e / everyone) :arg2 (a / amr-unknown) :mod (i / indeed))
(m / multi-sentence :snt1 (w / want-01 :mode (i / interrogative) :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (p2 / political-party :name (n / name :op1 "N-A")))) :arg1 (p3 / party :arg1-of (w2 / want-01 :arg0 (p4 / political-party)))) :snt2 (m2 / money :time (d / date-entity :decade (N / N-A))))
(s / shift-01 :arg0 (a / and :op1 (r / resource :mod (r2 / rnc) :arg2-of (a2 / available-02)) :op2 (r3 / race :mod (h / house)) :quant (a3 / all) :arg2-of (a4 / available-02)) :arg1 (d / draft :name (n / name :op1 (g / gop))) :arg2 (d2 / drowning :mod (t / trump-emblazoned) :location (a5 / around :op1 (e / ear :part-of (i / it)))) :time (i2 / immediate) :mod (o / only))
FAILED_TO_PARSE#Couldn't convert to full AMR graph.
(s / say-01 :arg0 (a / agency :name (n / name :op1 "N-A") :mod (n2 / news)) :arg1 (a2 / and :op1 (r / rule-out-02 :arg0 (p / person :mod (r2 / religious-group :name (n3 / name :op1 "N-A"))) :arg1 (t / terrorism) :mod (a3 / also)) :op2 (r3 / report-01 :arg0 (p2 / police :mod (c / country :name (n4 / name :op1 "Thailand"))))))
(w / wound-01 :arg1 (p / person :quant (a / at-least :op1 3)) :arg1-of (c / cause-01 :arg0 (a2 / attack-01 :mod (h / hin :ord (o / ordinal-entity :value 2)) :ord (o2 / ordinal-entity :value 2))))
(w / win-01 :arg0 (p / person :mod (c / country :name (n / name :op1 "N-A"))) :arg2 (a / all-around :poss (w2 / woman)))
(d / dominate-01 :arg0 (b / biles) :arg1 (g / gymnastics :poss (w / woman)) :time (y / year :mod (l / last)))
(m / multi-sentence :snt1 (a / and :op1 (r / run-01 :arg0 (p / person :arg0-of (r2 / run-01 :arg1 (a2 / agency :mod (e / estate :mod (r3 / real)))) :arg0-of (h / have-org-role-91 :arg1 (a3 / agency :mod (e2 / estate :mod (r4 / real)))) :arg0-of (h2 / have-org-role-91 :arg1 (a4 / agency :mod (e3 / estate :mod (r5 / real))) :arg2 (c / child))) :arg1 (p2 / person :arg0-of (h3 / have-org-role-91 :arg1 (a5 / agency :mod (e4 / estate :mod (r6 / real)))) :arg0-of (h4 / have-rel-role-91 :arg1 (p3 / person) :arg2 (c2 / child)))) :op2 (w / worry-01 :arg0 (a6 / attack-01 :time (d / date-entity :decade (N / N-A))) :arg1 (p4 / person))) :snt2 (h5 / have-03 :arg0 (a7 / attack-01 :time (d2 / date-entity :decade (N2 / N-A))) :arg1 (t / tourism)))
(m / multi-sentence :snt1 (b / bullshit-01 :mode (i / interrogative)) :snt2 (s / show-01 :mode (i2 / interrogative) :arg0 (o / olympic :time (d / date-entity :decade (N / N-A)) :mod (f / final)) :arg1 (b2 / begins :location (r / rio))))
(r / report)
(m / multi-sentence :snt1 (c / contrast-01 :arg1 (w / want-01 :arg0 (i / i) :arg1 (a / and :op1 (c2 / cut-off-04 :arg0 (y / you) :arg1 (a2 / and :op1 (d / dash) :op2 (s / startle :arg1-of (p / possible-01)))) :op2 (p2 / possible-01 :arg1 (s2 / startle :arg0 (i2 / i))))) :arg2 (s3 / stress-01 :arg0 (i3 / i) :arg1 (d2 / doesn :arg1 (s4 / she) :mod (m2 / main)))) :snt2 (w2 / want-01 :mode (i4 / interrogative) :arg1 (r / role :mod (m3 / main) :domain (s5 / she))))
(a / and :op1 (a2 / arrest-01 :arg1 (p / person :quant 5 :mod (o / other))) :op2 (q / question-03 :arg0 (p2 / police) :arg1 (p3 / person :quant 2) :time (b / before :op1 (r / release-01 :arg0 (p4 / police) :arg1 (p5 / person)))) :time (c / connect-01 :arg1-of (s / same-01)))
(a / and :op1 (b / boycott-01 :arg0 (p / police) :arg1 (p2 / package)) :op2 (l / let-01 :arg0 (p3 / police) :arg1 (a2 / audience) :time (a3 / after :op1 (t / that) :mod (o / only))))
(m / multi-sentence :snt1 (c / cause-01 :arg0 (c2 / crash-01 :arg1 (a / and :op1 (c3 / crash-01 :arg1 (s / she)) :op2 (g / get-05 :arg1 (o / other) :arg2 (a2 / away)))) :arg1 (s2 / stick-01 :arg1 (s3 / she) :arg1-of (c4 / cause-01 :arg0 (c5 / crash-01)))) :snt2 (c6 / coach :mod (h / head) :time (d / date-entity :decade (N / N-A))))
(m / multi-sentence :snt1 (p / possible-01 :arg1 (a / add-02 :arg0 (f / flossing :arg1-of (r / regular-03)) :arg1 (m2 / more-than :op1 (t / temporal-quantity :quant (N / N-A) :unit (y / year))) :arg2 (p2 / person)) :arg1-of (p3 / possible-01)) :snt2 (s / say-01 :arg0 (r2 / research-01)))
FAILED_TO_PARSE#Couldn't convert to full AMR graph.
(m / multi-sentence :snt1 (k / kaidesoja :mode (i / interrogative)) :snt2 (a / apologize-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (s / service :mod (m2 / military)) :arg2 (p2 / president :mod (v / vice)))) :arg1 (m3 / mishap :arg0 (p3 / person))))
FAILED_TO_PARSE#Couldn't convert to full AMR graph.
(s / say-01 :arg0 (p / post) :arg1 (a / and :op1 (w / work-01 :arg0 (v / victim) :arg2 (t / temp :location (c / clinic :mod (v2 / veterinary) :part-of (s2 / sipoo)))) :op2 (w2 / work-01 :arg0 (v3 / victim) :arg1 (t2 / train-01 :arg2 (n / nurse)) :mod (a2 / also))))
(u / uutiset :arg1 (r / report-01 :arg1 (m / matter)) :ord (o / ordinal-entity :value 1))
(c / contrast-01 :arg1 (p / possible-01 :arg1 (m / megalomaniac :arg1 (i / i) :degree (b / bit))) :arg2 (m2 / manage-02 :arg0 (w / we) :arg1 (r / retain-01 :arg0 (w2 / we) :arg1 (s / spirit :mod (f / flow-01))) :time (t / time :arg1-of (s2 / same-01))))
(s / say-01 :arg0 (p / police) :arg1 (f / find-01 :arg0 (p2 / police) :arg1 (b / bomb :quant (a / at-least :op1 1) :source (h / hin :mod (h2 / hua) :arg1-of (e / explode-01 :polarity - :time (y / yet))))))
(p / possible-01 :arg1 (u / use-01 :arg1 (u2 / unit) :arg2 (o / operation :mod (m / military)) :time (a / already) :time (t / train-01 :mod (c / conscript)) :condition (n / need-01)))
(m / multi-sentence :snt1 (s / say-01 :arg0 (p / person :arg0-of (i / inspect-01)) :arg1 (p2 / possible-01 :arg1 (e / enter-01 :arg0 (p3 / person :arg0-of (i2 / inspect-01)) :arg1 (i3 / inside :op1 (h / house)) :mod (a / also)))) :snt2 (p4 / possible-01 :arg1 (e2 / enter-01 :arg0 (e3 / evaluate-01 :time (d / date-entity :decade (N / N-A))) :arg1 (i4 / inside :op1 (h2 / house)) :mod (a2 / also))))
(a / and :op1 (d / dream-01 :polarity - :arg0 (p / person :arg0-of (b / buy-01)) :arg1 (i / investigate-01 :arg0 (p2 / person))) :op2 (s / state-01 :arg0 (p3 / person) :arg1 (a2 / appeal-01 :arg0 (c / court))))
(m / multi-sentence :snt1 (b / base-02 :arg1 (w / wouldn :arg1 (s / song :arg1-of (b2 / become-01 :arg2 (h / hit-01 :arg1 (s2 / song) :mod (e / enormous))))) :arg2 (t / thing :arg1-of (h2 / hit-01 :arg2 (h3 / hit-01 :mod (e2 / enormous))))) :snt2 (g / guess-01 :arg0 (i / i) :arg1 (s3 / sing-01 :arg1 (i2 / it) :time (w2 / while)) :degree (t2 / total)))
(c / concern-01 :arg0 (a / and :op1 (j / job) :op2 (a2 / accommodation) :op3 (s / service :arg1-of (p / public-02))) :arg1 (t / they))
(c / contrast-01 :arg1 (h / have-03 :polarity - :arg0 (f / fund-01 :arg1 (e / estate) :mod (r / real)) :arg1 (a / asset :mod (l / liquid) :mod (l2 / large))) :arg2 (p / possible-01 :arg1 (n / need-01 :arg1 (f2 / fund-01) :time (n2 / now))))
(e / estimate-01 :arg0 (h / he) :arg1 (r / remain-01 :arg1 (a / amount :arg1-of (l / low-04 :degree (m / more)) :mod (t / this)) :arg3 (o / or :op1 (r2 / rate-entity-91 :arg1 (m2 / monetary-quantity :quant (N / N-A) :unit (p / pound)) :arg2 (t2 / temporal-quantity :quant (N2 / N-A) :unit (y / year))) :op2 (l2 / low-04 :degree (m3 / more :mod (e2 / even))))))
(s / say-01 :arg0 (i / i) :arg1 (c / contrast-01 :arg1 (c2 / close-10 :polarity - :arg1 (t / they) :arg2 (t2 / trade-01) :mod (e / exact)) :arg2 (c3 / change-01 :arg0 (t3 / they) :arg1 (t4 / thing :arg2-of (p / price-01)))))
(a / awake :arg1 (c / city :location (c2 / city :name (n / name :op1 "N-A"))) :degree (f / full) :time (a2 / already) :concession (h / hour :mod (s / small) :domain (c3 / city)))
(c / change-01 :arg1 (p / pound) :arg1-of (c2 / cause-01 :arg0 (c3 / change-01 :arg1 (p2 / pound))))
(u / use-01 :arg1 (i / information) :arg2 (m / market-01 :arg1 (i2 / information) :arg2 (c / customer)))
(m / multi-sentence :snt1 (g / gather-03 :arg0 (p / person :mod (c / country :name (n / name :op1 "N-A"))) :mod (o / only)) :snt2 (c2 / chains :mode (i / interrogative) :time (d / date-entity :decade (N / N-A))))
(g / get-02 :arg0 (s / state :quant (N / N-A)) :arg1 (m / medal :name (n / name :op1 (o / olympic) :op2 (m2 / medal) :op3 (m3 / medal)) :poss (s2 / state) :ord (o2 / ordinal-entity :value 1)))
(a / and :op1 (a2 / asset :domain (b / borealis :mod (a3 / aurora)) :mod (m / main)) :op2 (c / connect-01 :arg1 (t / they) :arg2 (a4 / and :op1 (m2 / midwinter) :op2 (s / snowy)) :arg1-of (s2 / strong-02)))
(a / attract-01 :arg0 (p / person :arg0-of (t / tour-01)) :arg1 (p2 / person :arg0-of (t2 / tour-01)) :arg2 (u / use-01 :arg0 (p3 / person) :arg1 (e / example :mod (o / online))))
(a / alter :arg0 (i / it) :arg1 (t / tooth :part-of (y / you)) :degree (b / bit))
(c / change-01 :arg0 (g / government-organization :arg0-of (g2 / govern-01)) :arg1 (g3 / government-organization :arg0-of (g4 / govern-01) :poss (g5 / government-organization)) :time (l / leak-01 :arg1 (p / panama)))
(c / confirm-01 :arg1 (a / and :op1 (l / level :name (n / name :op1 (e / e.coli)) :arg1-of (e2 / e.coli)) :op2 (l2 / level :name (n2 / name :op1 (e3 / enterococcus)) :location (b / beach :name (n3 / name :op1 (m / meriniemi))))) :arg2 (w / wednesday) :time (a2 / and :op1 (d / decline-01 :arg1 (l3 / level :mod (c2 / continent :name (n4 / name :op1 "N-A")))) :op2 (l4 / limit-01 :arg1 (l5 / level) :mod (a3 / action))))
(m / multi-sentence :snt1 (s / say-01 :arg0 (c / court) :arg2 (c2 / court)) :snt2 (c3 / contrast-01 :arg1 (a / attack-01 :arg0 (p / person :mod (o / old) :arg1-of (s2 / sentence-01 :arg2 (m2 / murder-01))) :arg1 (s3 / supervisor) :arg2 (b / behind)) :arg2 (s4 / sit-01 :arg1 (p2 / person :mod (o2 / old) :mod (o3 / old) :arg1-of (s5 / sentence-01 :arg2 (m3 / murder-01))) :arg2 (b2 / behind :op1 (s6 / sit-01 :arg1 (p3 / person) :arg2 (r / room :mod (l / live-01)))))))
(p / publish-01 :arg1 (s / story :mod (s2 / short)) :medium (r / runaway :arg1 (b / book)))
(a / and :op1 (i / invest-01 :arg0 (p / person :arg0-of (i2 / invest-01 :arg2 (a2 / almodóvar))) :arg2 (d / dialogue-01)) :op2 (t / thing :arg2-of (r / result-01) :mod (m / monotonous :degree (s / slight)) :domain (t2 / thing :arg2-of (r2 / result-01))))
(c / continue-01 :arg1 (c2 / cut-02 :arg1 (e / education)))
(m / miss-01 :arg1 (w / woman :arg1-of (a / age-01 :arg2 (t / temporal-quantity :quant (N / N-A) :unit (y / year)))) :location (o / ostrobothnia :location (s / south :part-of (s2 / strait))) :time (s3 / since :op1 (a2 / afternoon :mod (t2 / this))))
(c / create-01 :arg0 (c2 / country :name (n / name :op1 "N-A")) :arg1 (t / team :mod (n2 / nation)) :arg3 (f / floorball))
(m / multi-sentence :snt1 (p / play-02 :arg0 (j / jumppanen) :arg1 (f / floorball :location (l / league :mod (n / nation) :mod (f2 / finnish) :location (f3 / finnish :quant 1991-92 :location (u / university))))) :snt2 (a / and :op2 (s / spend-01 :arg1 (y / year :arg1-of (f4 / follow-01) :mod (n2 / next)) :arg3 (y2 / year :mod (n3 / next)))))
(c / cause-01 :arg0 (b / believe-01 :arg0 (h / he) :arg1 (f / future :mod (p / positive)) :mod (a / also)) :arg1 (b2 / become-01 :arg1 (p2 / person :arg0-of (f2 / farm-01) :mod (y / young)) :arg2 (p3 / person :arg0-of (f3 / farm-01))))
(s / share-01 :arg0 (p / person :arg0-of (o / observe-01) :mod (o2 / other) :arg0-of (o3 / observe-01)) :arg1 (c / complain-01 :arg0 (p2 / person) :arg1-of (c2 / cause-01 :arg0 (l / leave-11 :arg0 (p3 / person) :degree (l2 / large)))))
(s / say-01 :arg0 (d / democrat) :arg1 (f / find-01 :arg0 (d2 / democrat) :arg1 (t / thing :arg0-of (e / evidence-01 :arg1 (t2 / try-01 :arg0 (h / house :mod (w / white)) :arg1 (p / pressure-01 :arg0 (h2 / house) :arg1 (t3 / thing :arg1-of (c / conclude-01 :arg0 (p2 / person :arg0-of (a / analyze-01))))))))))
(c / contrast-01 :arg2 (r / report-01 :arg1 (d / distribute-01 :polarity - :arg1 (f / find-01) :location (o / outside :op1 (c2 / command-02 :mod (c3 / central))))))
(a / and :op1 (c / change-01 :arg1 (c2 / culture)) :op2 (c3 / change-01 :mod (m / mental)) :op3 (c4 / change-01 :mod (p / physical)) :op4 (s / say-01 :arg0 (p2 / person :arg0-of (h / have-org-role-91 :arg2 (b / bam)))))
(c / contrast-01 :arg2 (f / find-02 :arg0 (i / i) :arg1 (e / exhausting :arg0 (i2 / i) :arg1 (w / watch-01 :arg0 (i3 / i) :arg1 (g / game) :mod (e2 / even)) :degree (s / slight)) :mod (a / also)))
(f / final :domain (f2 / final :time (b / begin-01 :arg1 (b2 / block-01 :arg1 (b3 / block :quant 2) :time (d / day :mod (b4 / both))))))
(s / say-01 :arg0 (p / person :arg0-of (w / witness-01 :arg1 (p2 / person :arg0-of (w2 / witness-01)))) :arg1 (s2 / shoot-02 :arg1 (p3 / person :quant (m / multiple :op1 (N / N-A)) :arg0-of (p4 / protest-01)) :time (c / clashes :arg0 (p5 / police))))
(a / and :op2 (a2 / and :op1 (q / quiet :domain (s / street :poss (i / it))) :op2 (s2 / safe-01 :arg1 (s3 / street)) :op3 (c / clean-04)))
(t / try-01 :arg0 (p / person :name (n / name :op1 (m / mr.) :op2 (t2 / trumps))) :arg1 (r / return-01 :arg1 (p2 / person) :arg4 (s / subject :mod (t3 / that))) :mod (a / again))
(r / reused :arg0 (i / it) :arg1 (l / lights) :arg2 (v / verb :mod (o / old)) :mod (e / even))
(b / bowls :mod (b2 / brown-rice))
(a / and :op1 (c / call-01 :arg1 (i / it) :arg2 (w / whipped :mod (p / prune))) :op2 (a2 / add-01 :arg0 (i2 / i) :arg1 (g / give-01 :arg0 (t / trick :mod (c2 / common)) :arg1 (n / name :mod (s / snazzy)))))
(c / cite-01 :arg0 (a / and :op1 (p / person :arg0-of (h / have-org-role-91 :arg1 (s / service :mod (i / internal-02)))) :op2 (p2 / person :arg0-of (h2 / have-rel-role-91 :arg1 (p3 / person) :arg2 (l / lawyer)))) :arg1 (a2 / audit-01 :arg0 (s2 / service :mod (i2 / internal-02)) :arg1-of (c2 / cause-01 :arg0 (r / reason :arg0-of (c3 / cause-01 :arg1 (r2 / refuse-01 :arg0 (p4 / person) :arg1 (r3 / release-01 :arg0 (p5 / person) :arg1 (r4 / returns :poss (p6 / person)))))))))
(r / rally-01 :arg1 (a / and :op1 (m / meet-03 :location (r2 / river :name (n / name :op1 "N-A"))) :op2 (t / thing :arg2-of (m2 / meet-01 :arg1 (t2 / thing :arg1-of (t3 / tax-01 :arg3 (t4 / tax)))))) :location (c / city :name (n2 / name :op1 "N-A") :arg1-of (r3 / rally-01 :time (w / week :mod (l / last)) :location (c2 / country :name (n3 / name :op1 "N-A")))))
(c / contrast-01 :arg1 (t / tie-01 :arg1 (c2 / country :name (n / name :op1 "N-A")) :arg2 (c3 / country :name (n2 / name :op1 "N-A")) :arg1-of (e / exist-01)) :arg2 (r / ready-02 :arg1 (f / firm :mod (n3 / new)) :arg2 (g / get-01 :arg0 (f2 / firm) :arg1 (a / access-01 :arg1 (m / market)))))
(i / increase-01 :arg1 (i2 / import-01 :arg0 (c / country :name (n / name :op1 "N-A")) :arg2 (c2 / country :name (n2 / name :op1 "N-A"))) :arg2 (p / percentage-entity :value (N / N-A)) :arg4 (r / rate-entity-91 :arg1 (m / monetary-quantity :quant 158 :unit (d / dollar)) :arg2 (v / volume-quantity :quant (N2 / N-A) :unit (g / gallon))))
(a / and :op1 (b / be-located-at-91 :arg1 (i / i) :arg2 (t / there) :purpose (d / do-02 :arg0 (i2 / i) :arg1 (g / good :degree (m / most) :poss (i3 / i)))) :op2 (m2 / make-01 :arg0 (i4 / i) :arg1 (n / name) :beneficiary (i5 / i)))
(g / good :degree (m / most) :domain (e / event :mod (t / team)) :time (a / always))
FAILED_TO_PARSE#Number of opening and closing brackets doesn't match.
(s / say-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg2 (d / director)) :arg0-of (h2 / have-org-role-91 :arg2 (d2 / director))) :arg1 (a / and :op1 (p2 / produce-01 :arg0 (p3 / person :arg0-of (h3 / have-org-role-91 :arg2 (d3 / director))) :arg1 (f / finger :part-of (i / index :mod (r / right)) :poss (p4 / person)) :location (t / trigger)) :op2 (d4 / drive-02 :arg0 (p5 / person) :arg1 (f2 / finger :part-of (p6 / person)) :arg2 (c / cap :name (n / name :op1 (k / knee) :op2 (k2 / knee) :op3 (c2 / cap)))) :medium (c3 / complain-01)) :medium (c4 / complain-01))
(a / attempt-01 :arg1 (r / reach-01 :arg1 (p / phillip :arg1 (p2 / phillip))))
(p / publish-01 :arg0 (p2 / person :name (n / name :op1 "N-A") :arg1-of (p3 / publish-01 :time (a / after :op1 (a2 / adolescence) :quant (b / between :op1 (t / temporal-quantity :quant (N / N-A) :unit (d / day)) :op2 (t2 / temporal-quantity :quant (N2 / N-A) :unit (d2 / day)) :mod (j / just))))) :arg1 (s / say-01 :arg0 (p4 / person) :arg1 (p5 / possible-01 :arg1 (u / update-01 :arg0 (p6 / person :arg0-of (u2 / use-01)) :arg1 (f / filter :poss (p7 / person)) :location (p8 / program :poss (p9 / person)) :purpose (b2 / block-01 :arg0 (p10 / person) :arg1 (a3 / advertise-01) :location (n2 / network :mod (s2 / society)) :time (o / once) :mod (a4 / again :mod (o2 / once)))))) :time (a5 / after :op1 (a6 / announce-01 :arg0 (f2 / facebook) :arg1 (b3 / block-01 :arg0 (p11 / person) :arg1 (a7 / advertise-01) :location (s3 / site :mod (d3 / desktop) :poss (p12 / person))))) :mod (p13 / plus))
(s / say-01 :arg0 (c / company :name (n / name :op1 "Facebook")) :arg1 (c2 / change-01 :arg0 (w / website :mod (d / desktop) :poss (w2 / website)) :arg1 (c3 / coding :location (a / around :op1 (a2 / advertise-01 :arg1 (w3 / website)))) :purpose (m / make-02 :arg0 (w4 / website) :arg1 (d2 / difficult :degree (m2 / more) :domain (d3 / detect-01 :arg1 (p / part :part-of (p2 / page)))))) :medium (u / url-entity :value (t / tuesday)))
(r / reach-01 :arg0 (s / star :arg1-of (i / include-91 :arg2 (s2 / star :location (c / cluster))) :quant (m / many)) :arg1 (a / adulthood :time (b / before :op1 (n / now) :quant (t / temporal-quantity :quant (N / N-A) :unit (y / year)))) :time (n2 / now :mod (j / just)))
(r / resign-01 :arg0 (p / person :arg0-of (l / lead-02 :arg1 (d / doctor :mod (j / junior) :mod (j2 / junior)))) :arg1-of (f / follow-01 :arg2 (v / vote-01 :arg0 (p2 / person) :arg1 (r2 / reject-01 :arg0 (p3 / person) :arg1 (t / term :mod (n / negotiated) :poss (c / contract-02)) :arg1-of (r3 / recommend-01 :arg0 (p4 / person :mod (c2 / country :name (n2 / name :op1 "N-A"))))))))
(c / contrast-01 :arg2 (s / show-01 :arg0 (e / emanating :mod (l / lingering)) :arg1 (h / have-03 :arg0 (p / person :arg0-of (l2 / lead-02 :arg1 (c2 / country :name (n / name :op1 "Russia")))) :arg1 (n2 / nothing))))
(r / reach-01 :arg0 (d / dettori :name (n / name :op1 (f / frankie) :op2 (d2 / dettori))) :arg1 (w / winners :quant 3000) :location (n2 / newmarket :location (n3 / newmarket)))
FAILED_TO_PARSE#Two concepts in a row.
(s / say-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (w / website :mod (k / kremlin)) :arg2 (i / ivanov))) :arg1 (t / true :domain (a / ask-01 :arg0 (i2 / i) :arg1 (a2 / and :op1 (a3 / ask-01 :arg0 (i3 / i) :arg1 (p2 / post :arg1-of (c / complicate-01 :degree (v / very)) :mod (t2 / this))) :op2 (p3 / possible-01 :arg1 (s2 / say-01 :arg0 (y / you) :arg1 (p4 / post :mod (t3 / troublesome) :mod (t4 / troublesome)) :duration (t5 / temporal-quantity :quant (N / N-A) :unit (y2 / year))) :time (c2 / converse-01)) :time (c3 / converse-01 :arg0 (i4 / i) :arg2 (w2 / website :mod (k2 / kremlin)))))) :medium (w3 / website :mod (k3 / kremlin)))
(s / see-01 :arg1 (a / anything :mod (l / less) :compared-to (h / head-02 :arg0 (p / person :arg0-of (h2 / have-org-role-91 :arg1 (f / family :arg1-of (h3 / have-org-role-91 :arg0 (p2 / person) :arg2 (m / member))) :arg2 (h4 / home :poss (f2 / family)))) :arg1 (h5 / home :poss (f3 / family :arg1-of (h6 / have-org-role-91 :arg0 (p3 / person) :arg2 (m2 / member)))) :location (h7 / home :poss (f4 / family :arg1-of (h8 / have-org-role-91 :arg0 (p4 / person) :arg2 (m3 / member)))))))
(a / and :op1 (b / be-located-at-91 :polarity - :arg1 (v / victim :quant 2 :mod (o / other)) :arg2 (c / car)) :op2 (i / investigate-01 :arg0 (p / police) :arg1 (p2 / possible-01 :mode (i2 / interrogative) :arg1 (s / shoot-02 :arg1 (m / man :arg1-of (i3 / include-91 :arg2 (m2 / man :arg1-of (w / wound-01))))))))
(s / say-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg2 (d / director :mod (v / vice))) :arg0-of (h2 / have-org-role-91 :arg2 (d2 / director)) :arg0-of (h3 / have-org-role-91 :arg2 (d3 / director)) :arg0-of (h4 / have-org-role-91 :arg2 (d4 / director)) :arg0-of (h5 / have-org-role-91 :arg2 (d5 / director)) :arg0-of (h6 / have-org-role-91 :arg2 (d6 / director)) :arg0-of (h7 / have-org-role-91 :arg2 (d7 / director)) :arg0-of (h8 / have-org-role-91 :arg2 (d8 / director)) :arg0-of (h9 / have-org-role-91 :arg2 (d9 / director)) :arg0-of (h10 / have-org-role-91 :arg2 (d10 / director)) :arg0-of (h11 / have-org-role-91 :arg2 (d11 / director)) :arg0-of (h12 / have-org-role-91 :arg2 (d12 / director)) :arg0-of (h13 / have-org-role-91 :arg2 (d13 / director)) :arg0-of (h14 / have-org-role-91 :arg2 (d14 / director)) :arg0-of (h15 / have-org-role-91 :arg2 (d15 / director))) :arg0-of (h16 / have-org-role-91 :arg2 (d16 / director)) :arg0-of (h17 / have-org-role-91 :arg2 (d17 / director)) :arg0-of (h18 / have-org-role-91 :arg2 (d18 / director)) :arg0-of (h19 / have-org-role-91 :arg2 (d19 / director)) :arg0-of (h20 / have-org-role-91 :arg2 (d20 / director)) :arg0-of (h21 / have-org-role-91 :arg2 (d21 / director)) :arg0-of (h22 / have-org-role-91 :arg2 (d22 / director)) :arg0-of (h23 / have-org-role-91 :arg2 (d23 / director)) :arg0-of (h24 / have-org-role-91 :arg2 (d24 / director)) :arg0-of (h25 / have-org-role-91 :arg2 (d25 / director)))
(c / consider-02 :mode (i / imperative) :arg0 (y / you) :arg1 (o / option :purpose (r / require-01 :arg0 (p / person :arg0-of (v / vote-01)) :arg1 (p2 / produce-01 :arg0 (p3 / person) :arg1 (p4 / person) :time (b / before :op1 (v2 / vote-01))))))
(m / make-02 :arg0 (i / it) :arg1 (u / use-01 :arg1 (p / person :mod (c / country :name (n / name :op1 "N-A")) :mod (o / only) :arg1-of (u2 / use-01 :arg2 (s / station :mod (p2 / polling))) :arg2-of (e / except-01 :arg1 (p3 / person :mod (c2 / country :name (n2 / name :op1 "N-A")))))))
(a / and :op1 (s / star :domain (a2 / and :op1 (s2 / star :mod (s3 / soccer)) :op2 (s4 / star :mod (d / dexter)))) :op2 (f / face-01 :arg0 (a3 / and) :arg1 (a4 / and :op1 (s5 / shapes) :op2 (e / eye)) :arg1-of (r / resemble-01)) :mod (i / indeed))
(m / multi-sentence :snt1 (s / say-01 :arg0 (i / i) :arg1 (d / die-01 :mode (i2 / interrogative) :arg1 (p / person :source (c / country :name (n / name :op1 "N-A")) :arg1-of (r / resemble-01 :arg2 (p2 / person :mod (c2 / country :name (n2 / name :op1 "N-A")))))) :mod (j / just)) :snt2 (d2 / die-01 :mode (i3 / interrogative)))
(a / and :op1 (r / regret-01 :arg0 (w / we) :arg1 (m / make-01 :arg1 (t / thing :arg1-of (s / state-01) :mod (t2 / this))) :manner (f / frank)) :op2 (a2 / allow-01 :arg1 (g / go-02 :arg0 (t3 / they) :arg4 (a3 / air))))
(a / amr-unknown :manner-of (d / defend-01))
FAILED_TO_PARSE#Two concepts in a row.
(a / and :op1 (b / break-01 :arg0 (t / team :name (n / name :op1 (t2 / track) :op2 (t3 / track) :op3 (t4 / track)) :mod (g / great) :poss (c / country :name (n2 / name :op1 "N-A"))) :arg1 (s / salary :mod (r / record) :mod (o / olympic))) :op2 (w / win-01 :arg0 (t5 / team) :location (s2 / sprint)))
(d / display-01 :arg0 (h / he) :arg1 (t / traits :name (n / name :op1 (' / '') :op2 (h2 / hysterical) :op3 ('2 / '')) :mod (s / some)) :mod (i / in-fact) :concession (e / even-if :op1 (a / and :op1 (s2 / smiles :arg1 (a2 / and :op1 (s3 / smiles :quant (a3 / all)) :op2 (k / kindness :location (p / photo)))))))
(i / information :polarity - :topic (n / number :quant-of (p / person :arg0-of (f / flee-05 :arg1 (m / manbij)))))
(f / find-out-03 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (p2 / police) :arg2 (o / officer))) :arg1 (s / sleep-01 :arg0 (w / woman)) :arg1-of (c / cause-01 :arg0 (i / influence-01 :arg0 (w2 / woman) :arg1 (a / alcohol) :arg1-of (s2 / strong-02))) :time (a2 / arrive-01 :arg1 (a3 / arrive-01 :arg1 (p3 / person :arg0-of (h2 / have-rel-role-91 :arg1 (w3 / woman) :arg2 (p4 / partner))) :arg4 (h3 / house))))
(a / and :op1 (i / implement-01 :arg0 (g / government-organization :arg0-of (a2 / administrate-01 :arg1 (c / country :name (n / name :op1 "N-A")))) :arg1 (t / thing :quant 5 :arg1-of (r / recommend-01 :arg0 (g2 / government-organization :arg0-of (g3 / govern-01 :arg1 (s / state)))) :arg0-of (c2 / concern-02 :arg1 (t2 / transfer-01 :arg1 (a3 / activity-06 :mod (p / port)) :direction (a4 / away) :source (c3 / center :mod (c4 / city)))))) :op2 (i2 / inform-01 :arg0 (c5 / company) :arg1 (d / diena.lv) :arg2 (p2 / portal)))
(h / hold-01 :arg0 (p / person :arg0-of (h2 / have-org-role-91 :arg2 (h3 / head-of-state))) :arg1 (p2 / presidency :poss (p3 / person)) :time (u / until :op1 (t / thing :arg2-of (m / moisturize-01))))
(a / add-01 :arg1 (l / list-01 :mod (a2 / another) :mod (a3 / another) :arg2-of (i / include-01 :arg1 (b / boy :arg1-of (a4 / age-01 :arg2 (t / temporal-quantity :quant (N / N-A) :unit (y / year))))) :arg2-of (i2 / include-91 :arg1 (b2 / boy :arg1-of (a5 / age-01 :arg2 (t2 / temporal-quantity :quant (N2 / N-A) :unit (y2 / year))))) :arg2-of (i3 / include-91 :arg1 (b3 / boy :arg1-of (a6 / age-01 :arg2 (t3 / temporal-quantity :quant (N3 / N-A) :unit (y3 / year))))) :arg2-of (i4 / include-91 :arg1 (b4 / boy :arg1-of (a7 / age-01 :arg2 (t4 / temporal-quantity :quant (N4 / N-A) :unit (y4 / year))))) :arg2-of (i5 / include-91 :arg1 (b5 / boy :arg1-of (a8 / age-01 :arg2 (t5 / temporal-quantity :quant (N5 / N-A) :unit (y5 / year))))) :arg2-of (i6 / include-91 :arg1 (b6 / boy :arg1-of (a9 / age-01 :arg2 (t6 / temporal-quantity :quant (N6 / N-A) :unit (y6 / year)))))))
(c / compensate-01 :arg0 (g / grade :mod (t / total)) :arg2 (p / program :name (n / name :op1 (l / latvenergo)) :mod (p2 / program :mod (s / stock :mod (f / fish)))) :arg4 (m / monetary-quantity :quant (1 / 1,035,000) :unit (e / euro)))
(s / support-01 :arg0 (c / cooperate-01 :arg2 (a / association)) :arg1 (i / initiative :arg0-of (p / promote-02 :arg1 (s2 / spawning :arg1 (f / fish) :arg1-of (n / natural-03)))) :mod (a2 / additional) :arg1-of (s3 / support-01 :time (a3 / after :op1 (r / recover-01 :arg1 (s4 / stock :mod (f2 / fish))))))
(r / race-02 :arg0 (p / person :mod (t / territory :name (n / name :op1 "N-A"))) :location (o / on :op1 (s / saturday)) :mod (f / final))
(b / block-01 :arg0 (o / organization :name (n / name :op1 "senate" :op2 "republicans")) :arg1 (c / confirmation :poss (p / person :arg0-of (h / have-org-role-91 :arg2 (p2 / president)))) :time (s / since :op1 (n2 / nominate-01 :arg0 (p3 / person :arg0-of (h2 / have-org-role-91 :arg2 (p4 / president))) :arg1 (h3 / he) :location (m / marched))))
(t / tell-01 :arg0 (g / group :mod (h / humanitarian)) :arg1 (a / and :op1 (s / shop) :op2 (r / restaurant) :domain (o / offer-01 :arg0 (a2 / and :op1 (s2 / shop) :op2 (r2 / restaurant) :arg1-of (o2 / offer-01 :arg0 (a3 / and :op1 (a4 / association :mod (s3 / state-backed)) :op2 (g2 / group :mod (o3 / other))) :arg1-of (f / free-03))) :arg1 (f2 / food :arg1-of (o4 / offer-01 :arg0 (a5 / and :op1 (a6 / association :mod (s4 / state-backed)) :op2 (g3 / group :mod (o5 / other))))))) :arg2 (c / court))
(f / find-01 :arg0 (a / and :op1 (p / person :arg0-of (h / have-org-role-91 :arg2 (s / stanning :mod (h2 / helen)))) :op2 (p2 / person :arg0-of (h3 / have-org-role-91 :arg2 (s2 / stanning))) :op3 (p3 / person :arg0-of (h4 / have-org-role-91 :arg2 (s3 / stanning))) :op4 (p4 / person :arg0-of (h5 / have-org-role-91 :arg2 (s4 / stanning))) :op5 (p5 / person :arg0-of (h6 / have-org-role-91 :arg2 (s5 / stanning))) :op6 (p6 / person :arg0-of (h7 / have-org-role-91 :arg2 (s6 / stanning))) :op6 (p7 / person :arg0-of (h8 / have-org-role-91 :arg2 (s7 / stanning))) :op6 (p8 / person :arg0-of (h9 / have-org-role-91 :arg2 (s8 / stanning))) :op6 (p9 / person :arg0-of (h10 / have-org-role-91 :arg2 (s9 / stanning))) :op6 (p10 / person :arg0-of (h11 / have-org-role-91 :arg2 (s10 / stanning))) :op6 (p11 / person :arg0-of (h12 / have-org-role-91 :arg2 (s11 / stanning))) :op6 (p12 / person :arg0-of (h13 / have-org-role-91 :arg2 (s12 / stanning))) :op7 (p13 / person :arg0-of (h14 / have-org-role-91 :arg2 (s13 / stanning))) :op6 (p14 / person :arg0-of (h15 / have-org-role-91 :arg2 (s14 / stanning))) :op6 (p15 / person :arg0-of (h16 / have-org-role-91 :arg2 (s15 / stanning))) :op6 (p16 / person :arg0-of (h17 / have-org-role-91 :arg2 (s16 / stanning))) :op6 (p17 / person :arg0-of (h18 / have-org-role-91 :arg2 (s17 / stanning))) :op7 (p18 / person :arg0-of (h19 / have-org-role-91 :arg2 (s18 / stanning)))) :arg1 (t / thing :arg2-of (m / mean-01)))
(t / tell-01 :arg0 (p / person :arg0-of (h / head-01 :arg1 (r / radio :mod (l / latvian)))) :arg1 (p2 / possible-01 :arg1 (a / agree-01 :arg0 (s / she)) :condition (o / offer-01 :arg0 (s2 / she) :arg1 (r2 / run-01 :arg0 (s3 / she) :arg1 (p3 / position-02 :arg0 (s4 / she) :arg2 (e / executive)))) :condition (o2 / offer-01 :arg1 (r3 / run-01 :arg0 (s5 / she) :arg1 (p4 / position-02 :arg0 (s6 / she) :arg2 (e2 / executive))))) :arg2 (p5 / person :arg0-of (h2 / have-org-role-91 :arg2 (r4 / radio :mod (l2 / latvian)))))
(h / have-concession-91 :arg2 (p / point-out-02 :arg0 (c / critic) :arg1 (i / inconsistent :domain (t / thing :arg1-of (d / decide-01 :arg0 (c2 / critic))) :arg1-of (c3 / cause-01 :arg0 (a / agree-01 :arg0 (c4 / critic) :arg1 (r / rule :mod (t2 / thing))))) :arg1-of (c5 / cause-01 :arg0 (a2 / and :op1 (a3 / agree-01 :arg0 (c6 / critic) :arg1 (r2 / rule :mod (t3 / thing))) :op2 (o / out :op1 (p2 / possible-01 :polarity - :arg1 (a4 / apply-01 :arg0 (c7 / county) :arg1 (r3 / rule))))))))
(p / possible-01 :arg1 (w / washed :arg1 (g / game :name (n / name :op1 "N-A") :location (g2 / ground)) :arg2 (w2 / water) :time (r / rain-01 :mod (h / heavy))) :arg0-of (c / cause-01 :arg1 (d / damage-01 :arg1 (q / quality :poss (g3 / game :name (n2 / name :op1 "N-A"))) :degree (l / large))) :mod (b / besides))
(c / cause-01 :arg1 (u / understand-01 :arg0 (i / i) :arg1 (w / wish-01 :arg0 (y / you) :arg1 (c2 / change-01 :arg0 (y2 / you) :arg1 (t / thing :arg1-of (w2 / work-01 :arg0 (y3 / you)))))))
(a / and :op1 (r / remain-01 :arg1 (a2 / and :op1 (t / tournaments :mod (c / cup) :quant (f / few) :mod (w / world)) :op2 (t2 / tournaments :name (n / name :op1 (j / jurmala))))) :op2 (' / '' :arg1 (j2 / jurmala) :mod (a3 / also) :mod (a4 / also)))
(c / contrast-01 :arg1 (p / possible-01 :arg1 (t / think-01 :arg0 (p2 / person :mod (c2 / country :name (n / name :op1 "N-A"))) :arg1 (p3 / possible-01 :arg1 (t2 / think-01 :arg0 (p4 / person) :arg1 (g / globe))))) :arg2 (m / mean-01 :arg0 (w / we) :arg2 (j / journalist :mod (s / sports) :arg1-of (e / experience-01 :degree (m2 / most)) :location (a / and :op1 (m3 / media :mod (r / russian-language)) :op2 (i / ivanovs :mod (v / vladimirs))))))
(t / tell-01 :arg1 (d / depend-01 :arg0 (i / it) :arg1 (b / brussels) :arg1-of (c / complete-02)) :arg2 (d2 / december :mod (l / last)))
(a / and :op1 (c / came :arg0 (p / person :mod (o / other) :arg0-of (h / have-03 :arg1 (o2 / or :op1 (p2 / person :mod (k / kind :mod (' / ''))) :op2 (p3 / person :arg0-of (h2 / have-org-role-91 :arg1 (f / family :arg1-of (h3 / have-org-role-91 :arg0 (p4 / person) :arg2 (m / member))))) :mod (k2 / kind :mod (a2 / another))))) :mod (a3 / also)) :op2 (s / share-01 :arg0 (p5 / person) :arg1 (a4 / and :op1 (i / item) :op2 (m2 / memory) :mod (b / both))) :mod (a5 / also))
(e / explain-01 :arg0 (a / and :op1 (p / person :arg0-of (h / have-org-role-91 :arg1 (p2 / person :name (n / name :op1 "N-A") :arg0-of (h2 / have-org-role-91 :arg2 (m / minister :mod (p3 / prime)))) :arg2 (s / secretary :mod (p4 / press)))) :op2 (p5 / person :arg0-of (h3 / have-org-role-91 :arg2 (s2 / secretary :mod (p6 / press)))) :op3 (p7 / person :arg0-of (h4 / have-org-role-91 :arg2 (s3 / secretary :mod (p8 / press)))) :op4 (p9 / person :arg0-of (h5 / have-org-role-91 :arg2 (s4 / secretary :mod (p10 / press)))) :op5 (p11 / person :arg0-of (h6 / have-org-role-91 :arg2 (s5 / secretary :mod (p12 / press))))) :arg1 (o / organize-01 :arg1 (c / compete-01 :mod (n2 / new)) :purpose (p13 / position-01 :arg1 (p14 / person :arg0-of (h7 / have-org-role-91 :arg2 (d / director :mod (g / general)))) :arg2 (d2 / director :mod (g2 / general)))))
(i / indicate-01 :arg0 (a / and :op1 (r / rain-01) :op2 (u / use-01 :arg1 (a2 / and :op1 (c / car) :op2 (s / superpower) :op3 (r2 / roller) :op4 (s2 / skateboards)))) :arg1 (p / prohibit-01 :arg1 (p2 / pavement)))
(s / set-up-03 :arg1 (p / play-structure :name (n / name :op1 (s2 / ship-like) :op2 (s3 / ship-like) :op3 (s4 / ship-like)) :prep-with (a / and :op1 (e / element :mod (c / climb) :mod (v / various)) :op2 (s5 / slash :op1 (b / bridges :mod (l / little)) :op2 (s6 / slash :op1 (b2 / bridges :mod (l2 / little)) :op2 (s7 / slash :op1 (b3 / bridges :mod (l3 / little)) :op2 (s8 / slash :op1 (b4 / bridges :mod (l4 / little)) :op2 (s9 / slash :op1 (b5 / bridges :mod (l5 / little)) :op2 (s10 / slash :op1 (b6 / bridges :mod (l6 / little)) :op2 (s11 / slash :op1 (b7 / bridges :mod (l7 / little)) :op2 (s12 / slash :op1 (b8 / bridges :mod (l8 / little)) :op2 (s13 / slash :op1 (b9 / bridges :mod (l9 / little)) :op2 (s14 / slash :op1 (b10 / bridges :mod (l10 / little)) :op2 (s15 / slash :op1 (b11 / bridges :mod (l11 / little)) :op2 (s16 / slash :op1 (s17 / slash :op1 (b12 / bridges :mod (l12 / little)) :op2 (b13 / bridges :mod (l13 / little))))))))))))))))))
(p / possible-01 :arg1 (m / make-02 :arg0 (t / they) :arg1 (f / feel-01 :arg0 (y / you) :arg1 (s / satiated))) :location (c / concept :quant 1))
(a / and :op2 (s / stipulate-01 :arg0 (a2 / and :op1 (p / process-01 :arg1 (m / meat)) :op2 (p2 / process-01 :arg1 (m2 / meat))) :arg1 (w / wave-04 :arg1 (a3 / and :op1 (m3 / meat) :op2 (e / egg))) :location (f / food :mod (t / this))))
(a / and :op1 (c / criticize-01 :arg0 (p / person :arg0-of (l / lead-02 :arg1 (c2 / country :name (n / name :op1 "N-A")))) :arg1 (p2 / person :mod (w / white) :mod (m / most) :arg0-of (l2 / lead-02))) :op2 (e / end-01 :arg0 (p3 / person) :arg1 (e2 / essay :poss (p4 / person)) :manner (d / deletesnapchat :arg1 (p5 / person))))
(s / say-01 :arg0 (r / report-01))
(r / release-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (c / committee :mod (i / intelligence :mod (h2 / house))) :arg2 (m / member))) :arg1 (t / thing :arg1-of (i2 / include-91 :arg2 (t2 / thing :arg1-of (c2 / conclude-01 :arg0 (f / force :mod (t3 / task) :mod (t4 / task))) :quant (s / some)))) :arg2 (p2 / person :arg0-of (h3 / have-org-role-91 :arg1 (c3 / committee :mod (i3 / intelligence :mod (h4 / house))) :arg2 (m2 / member))))
(k / know-01 :arg0 (s / she) :arg1 (a / and :op1 (4 / 4-0 :arg1 (p / person :mod (c / country :name (n / name :op1 "Britain"))) :location (t / tournament :name (n2 / name :op1 (o / olympic)))) :op2 (t2 / tied :arg1 (p2 / person) :arg2 (p3 / place :ord (o2 / ordinal-entity :value 1) :location (g / group :poss (p4 / person) :prep-with (p5 / person :arg0-of (h / have-org-role-91 :arg1 (g2 / group :poss (p6 / person)) :arg3 (l / lead-02 :arg0 (p7 / person) :arg1 (c2 / country))))) :arg1-of (r / remain-01 :arg3 (n3 / name :op1 (u / unbeaten) :op2 (2 / 2-0) :op3 (22 / 2-0) :op4 (u2 / unbeaten)))))) :location (h2 / here))
(t / tournament :arg0 (p / person :name (n / name :op1 "jackie" :op2 "briggs") :arg1-of (i / include-91 :arg2 (p2 / person :arg0-of (h / have-org-role-91 :arg1 (g / game :name (n2 / name :op1 "N-A")) :arg3 (l / lead-02 :arg0 (p3 / person)))))) :arg1 (p4 / person :arg0-of (a / allow-01 :arg1 (g2 / goal :quant 1 :arg1-of (i2 / include-91 :arg2 (v / victories :quant 3 :mod (v2 / victories :ord (o / ordinal-entity :value 1))) :mod (e / each))))) :arg2 (s / shutout))
(m / multi-sentence :snt1 (b / book :arg0 (b2 / book :name (n / name :op1 (m2 / mr.) :op2 (c / coe) :op3 (s / suey)) :mod (l / last)) :arg1 (c2 / cuisine :location (c3 / country :name (n2 / name :op1 "America"))) :mod (l2 / last)) :snt2 (c4 / contrast-01 :arg1 (t / tell-01 :arg0 (p / person :mod (c5 / country :name (n3 / name :op1 "America"))) :arg1 (s2 / story :topic (l3 / life) :location (s3 / side :arg1-of (l4 / low-04 :degree (m3 / more)))) :arg2 (s4 / story :topic (l5 / live-01) :location (s5 / side :mod (e / east) :arg1-of (l6 / low-04 :degree (m4 / more))))) :arg2 (o / orchards :arg1 (s6 / story :topic (l7 / live-01) :location (s7 / side :arg1-of (l8 / low-04 :degree (m5 / more)))))))
(p / possible-01 :arg1 (s / see-01 :arg1 (p2 / person :quant (s2 / some) :arg1-of (i / include-91 :arg2 (p3 / person :arg0-of (p4 / protest-01))) :arg0-of (p5 / participate-01 :arg1 (p6 / protest-01))) :location (w / wall :prep-against (p7 / person :arg0-of (h / have-org-role-91 :arg2 (p8 / president :mod (i2 / interim)))))))
(r / replace-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg2 (p2 / person :arg0-of (s / specialize-01)))) :arg1 (p3 / person :arg0-of (h2 / have-org-role-91 :arg2 (s2 / staff :mod (p4 / person :name (n / name :op1 "jamie"))))) :arg2 (p5 / person :arg0-of (s3 / specialize-01)))
(h / have-03 :arg0 (c / contract-02) :arg1 (p / period :time-of (f / finish-01 :arg0 (t / they) :arg1 (p2 / period :quant 2017) :mod (a / actual))))
(a / and :op1 (c / cut-02 :arg0 (g / government-organization :arg0-of (g2 / govern-01 :arg1 (f / federal))) :arg1 (r / rate-entity-91 :arg1 30 :arg2 (t / temporal-quantity :quant (N / N-A) :unit (y / year))) :arg3 (r2 / rate-entity-91 :arg1 30 :arg2 (t2 / temporal-quantity :quant (N2 / N-A) :unit (y2 / year)))) :op2 (f2 / force-01 :arg1 (g3 / government-organization :arg0-of (g4 / govern-01) :mod (f3 / federal)) :arg2 (q / queenslanders :arg1 (p / problem :arg1-of (v / vulnerable :degree (m / more))) :arg2 (p2 / problem :arg1-of (l / legal-02)) :manner (h / help-01 :polarity -))))
(a / attempt-01 :arg1 (r / reach-01 :arg1 (p / phillip :arg1 (p2 / phillip))))
(s / start-01 :arg1 (d / day) :accompanier (c / contest :mod (s2 / sports)))
(l / lie-07 :arg1 (v / victim) :arg2 (m / motorway) :time (m2 / middle :op1 (n / night)))
(b / be-located-at-91 :arg1 (c / circle :mod (s / sex) :location (p / park :location (f / facility :name (n / name :op1 "N-A")))) :arg2 (c2 / circle :quant 2 :location (c3 / city :name (n2 / name :op1 "N-A"))))
(c / contrast-01 :arg1 (p / plan-01 :arg0 (f / family) :arg1 (a / attend-01 :arg0 (f2 / family) :arg1 (f3 / festival :mod (m / music)) :location (b / belgium))) :arg2 (h / have-03 :arg0 (c2 / customer) :arg1 (c3 / calculate :arg0-of (c4 / compensate-01) :beneficiary (h2 / hotel) :arg1-of (m2 / mean-01 :arg2 (p2 / possible-01 :polarity - :arg1 (c5 / cancel-01 :arg1 (t / ticket :arg1-of (c6 / cost-01 :arg2 (m3 / monetary-quantity :quant 204 :unit (e / euro))) :arg1-of (c7 / cost-01 :arg2 (m4 / monetary-quantity :quant 204 :unit (e2 / euro)))))))) :time (s / since :op1 (p3 / possible-01 :polarity - :arg1 (c8 / cause-01 :arg0 (f4 / fly-01 :location (a2 / airport)) :arg1 (p4 / possible-01 :arg1 (c9 / compensate-01)))))))
(g / guess-01 :arg0 (i / i) :arg1 (a / amr-unknown))
(c / ceremony :mod (o / order :arg1 (o2 / order :mod (o3 / order :quant 3))) :location (h / house :poss (b / blackheads :time (d / date-entity :year (N / N-A)))))
(t / tell-01 :arg0 (h / he) :arg1 (g / good :domain (t2 / they) :mod (r / really)) :arg2 (a / ask-02 :arg0 (h2 / he) :arg1 (s / stone :arg0 (t3 / they) :arg1 (s2 / stone :mod (g2 / good :degree (r2 / really))))) :arg2 (r3 / relation-03 :arg0 (t4 / they) :arg2 (t5 / they)))
(a / and :op1 (p / pressure-01 :arg0 (t / thing :arg2-of (p2 / price-01 :arg1 (o / oil)) :arg1-of (l / low-04 :degree (m / more))) :arg1 (m2 / monetary-quantity :arg2-of (p3 / price-01 :arg1 (o2 / oil)) :arg1-of (l2 / low-04 :degree (m3 / more))) :arg2 (m4 / monetary-quantity :arg2-of (p4 / price-01 :arg1 (o3 / oil)) :arg1-of (l3 / low-04 :degree (m5 / more)))) :op2 (s / situation :arg0 (d / decide-01 :arg0 (c / country :name (n / name :op1 "N-A"))) :arg1 (l4 / leave-11 :arg0 (c2 / company) :arg1 (u / union-02 :arg1 (c3 / continent :name (n2 / name :op1 "N-A"))))))
(c / call-03 :arg0 (p / person :arg0-of (r / represent-01 :arg1 (d / doctor :mod (j / junior)))) :arg1 (u / union-02 :arg1 (p2 / person) :arg2 (a / act-02 :arg0 (p3 / person) :mod (i / industry) :arg1-of (f / fresh-04)) :time (d2 / dispute-01 :arg0 (p4 / person) :arg2 (c2 / contract :mod (n / new)))) :arg2 (p5 / person :arg0-of (r2 / represent-01 :arg1 (d3 / doctor :mod (j2 / junior)))))
(c / contrast-01 :arg2 (c2 / come-01 :arg1 (m / message :mod (o / official)) :mod (o2 / official) :purpose (m2 / move-01 :arg1 (i / it))))
(a / anger-01 :arg0 (c / consider-01 :arg1 (r / respond-01 :arg1 (p / plot-01 :arg1-of (a2 / attempt-01)) :arg1-of (w / weak-02))) :arg1 (l / location :name (n / name :op1 "ankara")))
(t / tell-01 :arg0 (p / person :quant 2 :arg0-of (h / have-org-role-91 :arg2 (p2 / president))) :arg1 (h2 / hadn :arg0 (p3 / person) :arg1 (t2 / topic) :mod (e / even :degree (t3 / total))) :arg2 (c / conference :mod (p4 / press)) :time (a / after :op1 (t4 / temporal-quantity :quant (N / N-A) :unit (h3 / hour) :mod (a2 / almost) :arg1-of (t5 / talk-01 :time (i / initial)))))
(a / and :op1 (h / have-org-role-91 :arg0 (h2 / he) :arg2 (a2 / ambassador :mod (r / racing))) :op2 (d / drawing :arg0 (h3 / he) :arg1 (s / sport) :arg2 (s2 / sport) :duration (t / temporal-quantity :quant (N / N-A) :unit (y / year))))
(c / cause-01 :arg1 (c2 / complete-01 :arg1 (p / project :mod (m / monetary-quantity :quant 1.35 :unit (d / dollar :mod (r / renminbi)))) :time (n / now) :arg1-of (c3 / cause-01 :arg0 (c4 / complete-01 :arg1 (p2 / project)))))
(o / obligate-01 :arg1 (w / we) :arg2 (c / close-10 :arg1 (w2 / we) :arg2 (g / gap :arg1-of (r / remain-01) :location (o2 / or :op1 (n / north) :op2 (s / side :mod (l / landward))))) :time (t / then) :time (a / after :op1 (a2 / and :op1 (o3 / overthrow-01 :arg0 (w3 / we) :arg1 (s2 / section :name (n2 / name :op1 (d / decker)) :mod (l2 / last))) :op2 (c2 / connect-01 :arg0 (w4 / we) :arg1 (s3 / section) :arg2 (e / expand-01 :arg1 (r2 / road) :location (n3 / north))))))
(c / cause-01 :arg0 (a / as-long-as :op1 (l / last-01 :arg1 222 :arg2 (t / temporal-quantity :quant (N / N-A) :unit (y / year)))) :arg1 (a2 / and :op1 (l2 / last-01 :arg1 222 :arg2 (a3 / approximately :op1 (m / mass-quantity :quant (N2 / N-A) :unit (k / kilogram)))) :op2 (o / obligate-01 :arg2 (p / pull-01 :arg1 (a4 / aircraft-type) :arg2 (g / gradient :quant (a5 / about :op1 3))))) :mod (m2 / massive))
(o / obligate-01 :arg1 (w / we) :arg2 (a / and :op1 (b / bring-01 :arg0 (w2 / we) :arg1 (p / person :arg1-of (a2 / afford-01 :arg1-of (p2 / possible-01 :polarity -))) :arg2 (c / community :mod (y / young :degree (m / more)) :arg1-of (i / inspire-01 :arg0 (a3 / and :op1 (s / simone) :op2 (g / gabby) :op3 (l / laurie)))))))
(s / strike-01 :arg0 (d / doctor :mod (j / junior)) :arg2 (m / mounting :arg0 (d2 / doctor) :degree (f / further)) :time (a / after :op1 (r / rejecting :arg0 (d3 / doctor) :arg1 (p / propose-01 :arg0 (p2 / person :arg0-of (h / have-rel-role-91 :arg2 (d4 / doctor))) :arg1 (p3 / propose-01 :arg0 (p4 / person :arg0-of (h2 / have-rel-role-91 :arg2 (d5 / doctor))) :arg1 (p5 / propose-01 :arg0 (p6 / person :arg0-of (h3 / have-rel-role-91 :arg2 (d6 / doctor))) :arg1 (p7 / propose-01 :arg0 (p8 / person :arg0-of (h4 / have-rel-role-91 :arg2 (d7 / doctor))) :arg1 (p9 / propose-01 :arg0 (p10 / person :arg0-of (h5 / have-rel-role-91 :arg2 (d8 / doctor))) :arg1 (p11 / propose-01 :arg0 (p12 / person)) :mod (f2 / further)))))))))
(a / and :op1 (m / meet-03 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (g / government-organization :arg0-of (g2 / govern-01)))) :arg1 (e / effort :purpose (r / resolve-01 :arg1 (d / dispute-01 :arg2 (t / talk-01))))) :op2 (m2 / meet-03 :arg0 (a2 / amusement-park :name (n / name :op1 "N-A") :source (g3 / government-organization :arg0-of (g4 / govern-01)))))
(l / let-01 :arg0 (c / culture :mod (p / pc)) :arg1 (v / vote-01 :arg1 (d / defraud-01 :location (a / area :mod (r / religious-group :name (n / name :op1 "N-A"))))))
(f / find-02 :arg0 (c / court) :arg1 (' / '' :arg0 (c2 / court) :arg1 (f2 / feel-01 :arg0 (a / and :op1 (c3 / community :mod (r / religious-group :name (n / name :op1 "N-A"))) :op2 (p / person :arg0-of (c4 / criticize-01 :arg1 (h / he))) :op3 (p2 / person :arg0-of (c5 / criticize-01 :arg1 (h2 / he))) :op4 (p3 / person :arg0-of (c6 / criticize-01 :arg1 (h3 / he))) :op5 (p4 / person :arg0-of (c7 / criticize-01 :arg1 (h4 / he)))) :arg1 (a2 / accuse-01 :arg1 (p5 / person) :arg2 (a3 / and :op1 (r2 / racism) :op2 (i / islamophobia))))))
(b / ban-01 :arg0 (a / and :op1 (p / person :arg0-of (c / campaign-01 :mod (p2 / politics))) :op2 (a2 / activist)) :arg1 (a3 / and :op1 (p3 / person :arg0-of (c2 / campaign-01 :mod (p4 / politics))) :op2 (a4 / activist)) :arg2 (h / handle-01 :arg0 (a5 / and) :arg1 (a6 / and :op1 (v / vote-01 :mod (p5 / postal)) :op2 (v2 / vote-01 :arg0 (a7 / activist)))))
(p / person :quant 1 :mod (o / only :polarity -) :arg0-of (u / use-01 :arg1 (p2 / person :mod (c / country :name (n / name :op1 "N-A"))) :mod (a / also)))
(a / and :op1 (p / put-01 :arg0 (y / you) :arg1 (w / weight :source (g / gun)) :arg2 (g2 / gun)) :op2 (p2 / punched :arg0 (y2 / you) :arg1 (g3 / gun :source (g4 / grip-01 :arg0 (h / he))) :time (b / before :op1 (b2 / back-01 :arg0 (y3 / you) :arg1 (g5 / gun)))) :op3 (p3 / point-01 :arg0 (y4 / you) :arg1 (g6 / gun) :arg2 (h2 / he)) :time (t / time :arg1-of (s / same-01)))
(s / say-01 :arg0 (p / person :name (n / name :op1 "N-A")) :arg1 (s2 / see-01 :arg1 (a / and :op1 (f / fight-01 :arg0 (t / they) :location (s3 / street)) :op2 (c / call-01 :arg1 (p2 / police) :arg2 (p3 / police) :arg1-of (r / regular-02)))))
(m / multi-sentence :snt1 (' / ' :arg0 (w / we) :time (m2 / morning :mod (t / this))) :snt2 (s / sleeping :arg0 (w2 / we) :degree (t2 / total)))
(' / ' :arg0 (t / this) :arg1 (p / person :arg0-of (f / feel-02 :arg1 (p2 / possible-01 :arg1 (b / behave :arg0 (p3 / person) :arg1 (p4 / person :arg0-of (f2 / feel-02 :arg1 (p5 / possible-01 :arg1 (b2 / behave :arg0 (p6 / person) :manner (r / recrimination :polarity -))))))))) :arg1-of (s / say-01 :arg0 (s2 / she)))
(g / goal :mod (m / main) :poss (c / company) :domain (c2 / continue-01 :arg1 (g2 / grow-01 :arg1 (a / and :op1 (t / turnover :poss (i / it)) :op2 (p / profit-01 :arg0 (i2 / it))))) :time (y / year :mod (t2 / this)) :mod (a2 / also) :arg1-of (r / resemble-01 :arg2 (y2 / year :mod (o / other))))
(h / heat :location (f / frying-pan))
(i / include-91 :arg1 (a / and :op1 (p / person :arg0-of (d / declare-02 :arg1 (s / statehood :mod (l / latvia)))) :op2 (p2 / person :arg0-of (d2 / declare-02 :arg1 (c / cakste :mod (j / janis)) :time (l2 / late :degree (m / more))))) :arg2 (r / remain-01 :arg1 (u / undeservedly :arg0 (p3 / person :arg0-of (h / have-org-role-91 :arg2 (p4 / president :ord (o / ordinal-entity :value 1) :arg0-of (h2 / have-org-role-91 :arg2 (p5 / president)))) :arg0-of (h3 / have-org-role-91 :arg2 (p6 / president :mod (v / vice))) :arg0-of (h4 / have-org-role-91 :arg2 (p7 / president :mod (v2 / vice))) :arg0-of (h5 / have-org-role-91 :arg2 (p8 / president :mod (v3 / vice))) :arg0-of (h6 / have-org-role-91 :arg2 (p9 / president)))) :time (l3 / late :degree (m2 / more))))
(v / visit-01 :arg0 (s / state) :arg1 (a / and :op1 (p / person :arg0-of (h / have-org-role-91 :arg2 (h2 / head-of-state))) :op2 (r / recognition :poss (s2 / sovereignty :poss (p2 / person)))) :arg1-of (c / cause-01 :arg0 (a2 / and :op1 (r2 / reconfirmed :arg0 (s3 / sovereignty :poss (c2 / country :arg1-of (n / neighbor-01))) :arg1 (r3 / recognition)) :op2 (a3 / accept-01 :arg1 (r4 / recognition :poss (n2 / nation :mod (d / democracy :location (c3 / continent :name (n3 / name :op1 "N-A"))) :mod (d2 / democracy :location (n4 / north))))))) :time (d3 / date-entity :dayperiod (N / N-A)))
(a / and :op1 (b / bear-02 :arg1 (p / person :arg0-of (h / have-org-role-91 :arg1 (l / latvia) :arg2 (p2 / president)) :ord (o / ordinal-entity :value 2))) :op2 (p3 / pass-07 :arg1 (p4 / person) :arg2 (a2 / away)) :op3 (p5 / pass-07 :arg1 (p6 / person) :arg2 (a3 / away)))
(s / say-01 :arg0 (m / movie :name (n / name :op1 (s2 / starring) :op2 (v / viggo) :op3 (v2 / viggo) :op4 (v3 / viggo) :op5 (m2 / mortensen))) :arg1 (q / question-01 :arg1 (c / choose-01 :mode (i / interrogative) :arg0 (p / person :arg0-of (h / have-rel-role-91 :arg1 (p2 / person :arg0-of (h2 / have-rel-role-91 :arg1 (p3 / person :arg0-of (h3 / have-rel-role-91 :arg1 (p4 / person :arg0-of (h4 / have-rel-role-91 :arg1 (p5 / person :arg0-of (h5 / have-rel-role-91 :arg1 (p6 / person :arg0-of (h6 / have-rel-role-91 :arg1 (p7 / person :arg0-of (h7 / have-rel-role-91 :arg1 (p8 / person :arg0-of (h8 / have-rel-role-91 :arg1 (p9 / person :arg0-of (h9 / have-rel-role-91 :arg1 (p10 / person :arg0-of (h10 / have-rel-role-91 :arg1 (p11 / person :arg0-of (h11 / have-rel-role-91 :arg1 (p12 / person :arg0-of (h12 / have-rel-role-91 :arg1 (p13 / person :arg0-of (h13 / have-rel-role-91 :arg1 (p14 / person :arg0-of (h14 / have-rel-role-91 :arg1 (p15 / person :arg0-of (h15 / have-rel-role-91 :arg1 (p16 / person :arg0-of (h16 / have-rel-role-91 :arg1 (p17 / person :arg0-of (h17 / have-rel-role-91 :arg1 (p18 / person :arg0-of (h18 / have-rel-role-91 :arg1 (p19 / person :arg0-of (h19 / have-rel-role-91 :arg1 (s3 / society :mod (p20 / person :arg0-of (c2 / consume-01))) :arg2 (- / -rrb-))) :arg2 (a / away))) :arg2 (c3 / conceptually)))))))))))))))))))))))))))))))))))) :arg2 (o / or :op1 (b / blessing) :op2 (i2 / influence-01 :arg1 (p21 / person :arg0-of (h20 / have-rel-role-91 :arg1 (p22 / person) :arg2 (c4 / child)))))))
(o / occupy-01 :arg0 (s / state :mod (r / religious-group :name (n / name :op1 "N-A"))) :arg1 (m / manbij :quant 2014))
(a / and :op1 (s / suspicious :domain (h / he) :arg1-of (a2 / allege-01) :mod (o / other) :arg1-of (n / near-02 :arg2 (n2 / near-02 :arg2 (b / border)))) :op2 (m / managed :arg0 (h2 / he) :arg1 (c / case :quant 260 :mod (o2 / only)) :time (s2 / so-far) :arg1-of (a3 / allege-01)))
(c / criticize-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (c2 / committee :mod (e / executive :mod (l / loc))) :arg2 (m / member)) :arg0-of (h2 / have-org-role-91 :arg1 (c3 / committee :mod (e2 / executive :mod (l2 / loc))) :arg2 (m2 / member)) :arg0-of (h3 / have-org-role-91 :arg1 (c4 / committee :mod (e3 / executive :mod (l3 / loc))) :arg2 (m3 / member)) :arg0-of (h4 / have-org-role-91 :arg1 (c5 / committee :mod (e4 / executive :mod (l4 / loc))) :arg2 (m4 / member))) :arg1 (a / activity-06 :arg0 (p2 / person)) :time (b / blame-01 :arg0 (p3 / person) :arg1 (o / organization :arg0-of (h5 / have-org-role-91 :arg1 (o2 / organization) :arg2 (m5 / member)))))
(a / and :op1 (p / place-01 :arg1 (f / festival) :location (y / yard :mod (b / back) :poss (c / council :mod (c2 / city :name (n / name :op1 "N-A"))))) :op2 (e / exist-01 :polarity - :arg1 (f2 / festival) :time (a2 / anymore) :location (a3 / and :op1 (w / woods :arg1-of (s / surround-01)) :op2 (a4 / area :arg1-of (s2 / surround-01)))))
(r / race-02 :arg0 (p / person :mod (t / territory :name (n / name :op1 "N-A"))) :location (o / on :op1 (s / saturday)) :mod (f / final))
(b / block-01 :arg0 (o / organization :name (n / name :op1 "senate" :op2 "republicans")) :arg1 (c / confirmation :poss (p / person :arg0-of (h / have-org-role-91 :arg2 (p2 / president)))) :time (s / since :op1 (n2 / nominate-01 :arg0 (p3 / person :arg0-of (h2 / have-org-role-91 :arg2 (p4 / president))) :arg1 (h3 / he) :location (m / marched))))
(a / argue-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (c / court) :arg2 (a2 / authority))) :arg1 (a3 / argue-01 :arg0 (a4 / authority) :arg1 (r / recommend-01 :arg1 (p2 / possible-01 :arg1 (k / knock :arg0 (s / state) :arg1 (s2 / shop :quant 72 :mod (m / makeshift) :arg2-of (i / include-91 :arg1 (a5 / and :op1 (p3 / person :location (i2 / inside :op1 (a6 / and :op1 (p4 / person :arg0-of (s3 / sell-01 :arg1 (g / good))) :op2 (p5 / person :arg0-of (s4 / smoke-02)) :op3 (p6 / person :arg0-of (s5 / sell-01 :arg1 (t / tea :mod (e / energy)))) :op4 (p7 / person :arg0-of (s6 / sell-01 :arg1 (t2 / tea))) :op5 (t3 / tea :arg0-of (s7 / sell-01 :arg1 (t4 / tea) :arg3 (m2 / monetary-quantity :quant 50 :unit (c2 / cent))))))))) :op2 (s8 / sell-01 :arg1 (t5 / tea) :arg3 (m3 / monetary-quantity :quant 50 :unit (c3 / cent)) :arg3 (m4 / monetary-quantity :quant 50 :unit (c4 / cent)))))))) :time (w / week :mod (t6 / this)) :location (c5 / court))
(a / argue-01 :arg0 (o / office :poss (p / person :arg0-of (h / have-org-role-91 :arg2 (o2 / office :mod (c / calais))))) :arg1 (r / recommend-01 :arg1 (d / demolished :arg1 (p2 / place) :arg1-of (c2 / cause-01 :arg0 (r2 / represent-01 :arg0 (p3 / place) :arg1 (e / economy :mod (e2 / email) :arg0-of (p4 / pay-01 :polarity - :arg3 (t / tax)))))) :arg1-of (c3 / cause-01 :arg0 (c4 / carry-01 :arg0 (p5 / place) :arg1 (a2 / and :op1 (f / fire) :op2 (r3 / risk-01 :arg2 (s / sanitation)))))))
(a / and :op1 (b / be-located-at-91 :arg1 (p / place :quant 1 :arg1-of (i / include-91 :arg2 (p2 / place :arg1-of (t / threaten-01 :arg2 (e / ethnic-group :name (n / name :op1 "N-A")))))) :arg2 (p3 / person :arg0-of (h / have-rel-role-91 :arg1 (k / kid) :arg2 (k2 / kid)))) :op2 (p4 / provide-01 :arg0 (k3 / kid) :arg1 (r / rate-entity-91 :arg1 (d / day :quant 200) :arg2 (t2 / temporal-quantity :quant (N / N-A) :unit (d2 / day)))) :op3 (a2 / advise-01 :arg0 (k4 / kid) :arg1 (a3 / and :op1 (c / class :mod (c2 / country)) :op2 (c3 / class :mod (c4 / country)))) :op3 (a4 / advise-01 :arg0 (k5 / kid) :arg2 (h2 / hundreds :arg1 (m / minor :mod (v / vulnerable) :mod (v2 / vulnerable)) :location (c5 / camp))))
(c / contrast-01 :arg1 (h / hurt-01 :arg1 (c2 / city :name (n / name :op1 "N-A") :mod (t / this))) :arg2 (p / progress-01 :arg1 (p2 / progress-01)))
(s / start-01 :arg0 (i / i) :arg1 (m / magnificently :arg0 (i2 / i) :arg1 (t / tackles :mod (c / country :name (n / name :op1 "N-A"))) :purpose (f / fun)))
(t / touch-01 :arg0 (a / and :op1 (p / person :mod (c / country :name (n / name :op1 "N-A"))) :op2 (p2 / person :mod (c2 / country :name (n2 / name :op1 "N-A")))) :arg1 (b / ball) :mod (h / hardly))
(h / hit-01 :arg0 (a / and :op1 (e / embraced :name (n / name :op1 (f / fijians))) :op2 (e2 / embraced :name (n2 / name :op1 (f2 / fijians)))) :arg1 (t / turf) :manner (t2 / thorough))
(a / and :op1 (m / mean-01 :arg1 (i / it) :arg2 (m2 / much :degree (s / so)) :beneficiary (i2 / i) :mod (j / just)) :op2 (a2 / and :op1 (w / work-01 :arg0 (a3 / and :op1 (i3 / i) :op2 (h / helen)) :mod (a4 / as-well)) :op2 (r / robin :arg0 (a5 / and) :mod (a6 / as-well))))
(s / say-01 :arg0 (s2 / she) :arg1 (g / good :degree (m / more :degree (m2 / much :degree (s3 / so))) :domain (t / this)) :arg1-of (s4 / say-01 :arg0 (s5 / she)))
(o / obligate-01 :arg2 (r / reduce-01 :arg1 (d / deficit :mod (b / budget) :poss (i / it)) :arg4 (p / percentage-entity :value (N / N-A)) :arg4 (a / and :op1 (p2 / percentage-entity :value (N2 / N-A)) :op2 (p3 / percentage-entity :value (N3 / N-A)) :op3 (p4 / product :arg1-of (g / gross-03) :mod (d2 / domestic) :quant (p5 / percentage-entity :value (N4 / N-A))))))
(l / list-01 :arg1 (a / area :name (n / name :op1 (s / swim-01) :op2 (r / riga))) :arg2 (a2 / area :location-of (s2 / swimming)) :mod (a3 / also))
(g / go-01 :arg1 (i / it) :direction (b / back) :time (w / work-01 :arg0 (p / person :arg0-of (l / lead-02 :arg1 (g2 / government-organization :arg0-of (g3 / govern-01))))) :prep-in (f / fact))
(c / contrast-01 :arg1 (p / possible-01 :arg1 (t / try-01 :arg0 (h / he) :arg1 (i / it) :prep-with (a / and :op1 (r / regza :mod (h2 / haralds)) :op2 (s / solovejs :name (n / name :op1 (a2 / aleksandrs) :op2 (s2 / solovejs) :op3 (t2 / tocs) :op4 (p2 / plavins) :op5 (p3 / plavins) :op6 (p4 / plavins) :op7 (p5 / plavins)))))) :arg2 (b / be-located-at-91 :arg1 (e / explode-01) :arg2 (w / way :polarity - :mod (g / good :degree (m / more) :compared-to (p6 / product-of :op1 1 :op2 1) :time (c2 / current) :time (s3 / see-01 :arg1 (c3 / cup :mod (w2 / world)))))))
(h / have-concession-91 :arg1 (s / safe-01 :arg1 (a / area)) :arg2 (r / recommend-01 :arg1 (c / care-04 :arg1 (b / be-located-at-91 :arg1 (p / person :quant 1) :arg2 (h2 / here) :mod (a2 / as-well)))))
(p / part :arg1 (b / building) :degree (m / most) :arg0-of (c / cause-01 :arg1 (p2 / produce-01 :arg0 (a / and :op1 (p3 / person :arg0-of (h / have-org-role-91 :arg2 (d / director :mod (m2 / music)))) :op2 (p4 / person :arg0-of (h2 / have-org-role-91 :arg2 (d2 / director :mod (m3 / music)))) :op3 (p5 / person :arg0-of (h3 / have-org-role-91 :arg2 (d3 / director :mod (m4 / music)))) :op4 (p6 / person :arg0-of (h4 / have-org-role-91 :arg2 (d4 / director :mod (m5 / music)))) :op5 (v / version :name (n / name :op1 (c2 / concert) :op2 (c3 / concert)))) :arg1 (b2 / building))))
FAILED_TO_PARSE#Two concepts in a row.
(c / contrast-01 :arg1 (p / possible-01 :arg1 (h / help-01 :arg0 (c2 / combining :mod (w / well-considered)) :arg1 (y / you) :arg2 (l / lose-02 :arg0 (y2 / you) :arg1 (w2 / weight))) :mod (o / only :polarity -)) :arg2 (p2 / promote-02 :arg0 (f / foodstuffs) :arg1 (p3 / process-01 :arg1-of (u / useful-05) :mod (v / various) :location (b / body)) :mod (a / also)))
(c / combinations :arg1 (a / and :op1 (f / food :mod (f2 / fats)) :op2 (f3 / food :mod (h / high-protein))))
(s / say-01 :arg0 (r / report-01))
(m / multi-sentence :snt1 (s / surprise-01) :snt2 (b / bad-07 :arg1 (i / it) :degree (t / total)))
(r / report-01 :arg0 (c / country :name (n / name :op1 "N-A")) :arg1 (a / and :op1 (p / pay-01 :arg0 (t / thing :arg1-of (t2 / tax-01 :arg3 (t3 / thing :arg1-of (t4 / tax-01) :mod (l / little :degree (v / very))) :duration (m / multiple :op1 (t5 / temporal-quantity :quant (N / N-A) :unit (y / year))))) :arg1 (t6 / thing :arg1-of (t7 / tax-01) :mod (l2 / little :degree (v2 / very))) :duration (m2 / multiple :op1 (t8 / temporal-quantity :quant (N2 / N-A) :unit (y2 / year)))) :op2 (q / quote-01 :arg1 (s / say-01 :arg0 (p2 / person) :arg1 (p3 / possible-01 :arg1 (c2 / case :domain (t9 / that) :mod (s2 / still)))))))
(e / explain-01 :arg0 (p / person :arg0-of (s / seek-01)) :arg1 (i / issue-02 :arg0 (r / religious-group :name (n / name :op1 "N-A") :location (h / hotel))))
(t / trigger-01 :arg0 (i / incident) :arg1 (r / respond-01 :arg1 (i2 / incident) :mod (q / quite)) :arg1-of (c / cause-01 :arg0 (c2 / call-01 :arg0 (p / person) :arg1 (i3 / it) :arg2 (s / scandal))))
(u / use-01 :arg0 (p / police) :arg1 (a / and :op1 (g / gas) :op2 (r / rubber)) :arg2 (p2 / person :arg0-of (p3 / protest-01)))
(p / possible-01 :arg1 (s / see-01 :arg1 (p2 / person :quant (s2 / some) :arg1-of (i / include-91 :arg2 (p3 / person :arg0-of (p4 / protest-01))) :arg0-of (p5 / participate-01 :arg1 (p6 / protest-01))) :location (w / wall :prep-against (p7 / person :arg0-of (h / have-org-role-91 :arg2 (p8 / president :mod (i2 / interim)))))))
(d / do-02 :arg0 (t / they) :arg1 (s / so) :mod (j / just) :time (e / emerge-02 :arg0 (t2 / they)))
(c / contrast-01 :arg1 (e / event :time (d / day) :mod (o / only) :domain (i / it)) :arg2 (n / news :mod (g / good :degree (f / further)) :beneficiary (c2 / country :name (n2 / name :op1 "N-A")) :domain (i2 / it)))
(c / come-01 :arg1 (p / person :arg0-of (h / have-org-role-91 :arg1 (t / team) :arg3 (l / lead-02 :arg0 (p2 / person)))) :purpose (r / rely-01 :arg0 (p3 / person) :arg1 (s / squad :name (n / name :op1 (m / mighty) :op2 (t2 / track) :op3 (t3 / track)) :poss (p4 / person)) :purpose (a / and :op1 (o / own-01 :arg0 (p5 / person) :arg1 (p6 / period :mod (m2 / middle) :part-of (g / game :mod (o2 / olympic)))) :op2 (d / deliver-01 :arg0 (p7 / person) :arg1 (h2 / host-01 :arg0 (p8 / person))))))
(n / novelty :mod (a / another) :arg1-of (b / become-01 :arg2 (t / tradition) :arg1-of (p / possible-01) :arg1-of (b2 / become-01 :arg2 (t2 / tradition)) :location-of (t3 / take-01 :arg0 (a2 / and :op1 (t4 / tractors) :op2 (m / motorcycles) :mod (b3 / both)) :arg1 (p2 / part))))
(a / and :op2 (d / deal :polarity - :mod (b / big) :time (s / stage :mod (w / wet)) :domain (i / it)))
(m / multi-sentence :snt1 (h / have-03 :arg0 (w / we) :arg1 (t / team :mod (g / great) :arg0-of (i / implement-01 :arg1 (i2 / invest-01 :arg0 (p / person :arg0-of (i3 / implement-01 :arg1 (i4 / infrastructure)) :arg0-of (i5 / implement-01 :arg1 (m2 / monetary-quantity :quant (1 / 11bn) :unit (y / yuan :mod (r / renminbi))) :time (a / and :op1 (t2 / time) :op2 (b / budget)))))))) :snt2 (v / vote-01 :arg0 (p2 / person :mod (c / country :name (n / name :op1 "N-A"))) :arg1 (r2 / rate-entity-91 :arg1 (u / under :op1 (t3 / temporal-quantity :quant (N / N-A) :unit (y2 / year))) :arg2 (t4 / temporal-quantity :quant (N2 / N-A) :unit (y3 / year))) :arg4 (r3 / row) :arg1-of (b2 / build-01 :location (m3 / middle :part-of (w2 / world)))))
(a / and :op1 (h / have-03 :arg0 (s / slash :op1 (p / person :mod (c / country :name (n / name :op1 "Israel"))) :op2 (p2 / person :mod (c2 / country :name (n2 / name :op1 "Israel")))) :arg1 (c3 / container :consist-of (g / good) :mod (e / experiment-01) :ord (o / ordinal-entity :value 1) :consist-of (g2 / good))) :op2 (s2 / sign-02 :arg0 (p3 / person) :arg1 (a2 / agree-01 :arg1 (c4 / cooperate-01)) :arg2 (c5 / chain :consist-of (s3 / supermarket) :mod (n3 / new) :location (c6 / country))) :li 2016)
(a / apply-02 :polarity - :arg1 (r / restrict-01 :mod (t / this)) :arg2 (a2 / and :op1 (p / person :arg0-of (p2 / participate-01 :arg1 (c / celebration))) :op2 (t2 / transport-01 :arg1-of (p3 / public-02))))
(l / look-01 :arg0 (m / model) :arg1 (t / topography :time (e / early)) :mod (a / also))
(c / cause-01 :arg0 (c2 / close-10 :arg1 (c3 / cluster :mod (p / pleiades)) :arg2 (l / laboratory :mod (c4 / cosmic :mod (i / ideal))) :purpose (c5 / compare-01 :arg0 (l2 / laboratory) :arg1 (q / quality :mod (s / stellar)) :arg2 (r / rate :mod (b / broadcast-program :name (n / name :op1 "N-A"))))))
(s / say-01 :arg0 (d / department :mod (p / police) :mod (f / francisco)) :arg1 (a / and :op1 (r / rule-out-02 :arg0 (d2 / department :mod (p2 / police) :mod (f2 / francisco)) :arg1 (o / obsolete)) :op2 (g / go-on-15 :arg1 (i / investigate-01))))
(a / and :op1 (m / meet-03 :arg0 (p / person :arg0-of (l / lead-02 :arg1 (a2 / and :op1 (p2 / person :arg0-of (l2 / lead-02 :arg1 (c / country :name (n / name :op1 "N-A")))) :op2 (p3 / person :arg0-of (l3 / lead-02 :arg1 (c2 / country :name (n2 / name :op1 "N-A"))))))) :arg1 (a3 / and :op1 (r / restore-01 :arg0 (p4 / person) :arg1 (h / hand)) :op2 (d / declare-01 :arg0 (p5 / person) :arg2 (e / end-01 :arg1 (h2 / hand)) :mod (f / formal)))) :op2 (d2 / declare-02 :arg0 (p6 / person) :arg1 (e2 / end-01 :arg1 (a4 / and :op1 (w / word) :op2 (s / sanction-02 :arg1 (e3 / economy)) :arg1-of (l4 / long-03))) :mod (f2 / formal)))
(a / and :op2 (a2 / and :op1 (c / cheap-02 :arg1 (t / tv :mod (s / state)) :degree (m / more) :time (w / week :mod (t2 / this))) :op2 (p / permit-01 :arg1 (v / vegetables :arg1 (i / import-01 :arg0 (a3 / agriculture)) :mod (a4 / again :mod (o / once))))))
(c / contrast-01 :arg2 (g / good :degree (m / more) :domain (t / talk-01 :arg0 (p / person :quant 2 :arg0-of (l / lead-02)) :mod (a / at-least)) :arg1-of (s / sure-02) :time (a2 / after :op1 (a3 / and :op1 (t2 / temporal-quantity :quant (N / N-A) :unit (m2 / month)) :op2 (t3 / temporal-quantity :quant (N2 / N-A) :unit (m3 / month))))))
(c / contrast-01 :arg1 (c2 / character :mod (g / good :degree (m / most)) :domain (h / he) :beneficiary (p / person :mod (c3 / country :name (n / name :op1 "N-A")))) :arg2 (j / jockey :mod (i / incredible) :domain (h2 / he)))
(m / mystery :prep-as (f / fish))
(h / have-concession-91 :arg1 (m / mirage :domain (i / it)) :arg2 (t / take-01 :arg0 (i2 / i) :arg1 (l / lead-01 :arg0 (r / rotations :quant 2) :mod (s / small))))
(c / casings :location (s / street) :location (s2 / side :part-of (s3 / sidewalk) :mod (b / both)))
(h / hit-01 :arg0 (a / and :op1 (p / person :arg0-of (b / broker-01 :arg1 (t / technique))) :op2 (p2 / person :arg0-of (p3 / play-01 :location (i / in-front-of :op1 (h2 / home :poss (p4 / person) :location (w / west)))))) :arg1 (g / girl) :location (a2 / arm :part-of (s / she)) :mod (a3 / another))
(a / and :op1 (b / be-located-at-91 :arg1 (c / club :mod (t / this)) :arg2 (g / get-01 :arg1 (t2 / train-01 :arg2 (t3 / they) :quant (a2 / all)))) :op2 (c2 / commit-01 :arg1 (c3 / club) :arg2 (f / family :arg1-of (h / have-org-role-91 :arg0 (h2 / he) :arg2 (m / member))) :arg1-of (l / long-03)))
(e / expand-01 :arg1 (w / we) :arg3 (d / detroit :arg0 (w2 / we) :arg1 (h / hometown :mod (q / quality :arg1-of (h2 / high-02))) :arg2 (y / youth :arg0-of (d2 / deserve-01 :arg1 (a / and :op1 (l / learn-01 :arg0 (y2 / youth) :arg1 (o / opportunity :purpose (l2 / learn-01))) :op2 (b / benefit-01 :arg0 (s / sport :mod (g / great) :mod (t / this))))))) :location (c / country :name (n / name :op1 "N-A")))
(p / possible-01 :arg1 (c / call-03 :arg0 (t / thing :arg1-of (r / report-01)) :arg1 (c2 / check-01 :arg1 (r2 / register-02) :arg1-of (t2 / tough-02 :degree (m / more))) :purpose (p2 / prevent-01 :arg1 (r3 / register-02 :arg1 (r4 / register-02 :arg1 (e / elect-01)) :arg2 (a / and :op1 (i / immigrate-01) :op2 (b / benefit-01)))) :mod (a2 / also)))
(a / and :op1 (o / oppose-01 :arg1 (p / person :quant 1 :arg1-of (i / include-91 :arg2 (p2 / person :quant 2012 :arg1-of (p3 / popular-02 :arg2 (t / temporal-quantity :quant (N / N-A) :unit (y / year))))) :arg1-of (p4 / popular-02 :degree (m / most)) :arg1-of (i2 / include-91 :arg2 (p5 / person :quant 2012))) :arg3 (t2 / temporal-quantity :quant (N2 / N-A) :unit (y2 / year))) :op2 (p6 / point-out-02 :arg0 (p7 / person) :arg1 (s / striking :arg0 (l / likeness :arg0 (c / country :name (n / name :op1 "N-A")) :arg1 (a2 / and :op1 (r / rutherford) :op2 (a3 / actor :mod (p8 / popular)) :arg1-of (p9 / popular-02 :arg2 (a4 / actor)) :arg1-of (p10 / popular-02 :arg2 (a5 / actor))))) :time (y3 / year :mod (t3 / this))))
(m / multi-sentence :snt1 (a / apologize-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (p2 / person :arg1-of (b / broadcast-01 :arg0 (p3 / person :arg0-of (h2 / have-org-role-91 :arg2 (h3 / head-of-state))) :arg3 (b2 / broadcast-01 :arg0 (p4 / person)))) :arg3 (b3 / broadcast-01 :arg0 (p5 / person)))) :arg1 (t / thing :arg1-of (c / comment-01 :arg0 (p6 / person) :arg3 (t2 / thing :arg1-of (c2 / comment-01 :arg0 (p7 / person)))))) :snt2 (s / say-01 :arg0 (i / i) :arg1 (a2 / apologize-01 :arg0 (w / we) :arg1 (c3 / comment-01 :arg0 (w2 / we) :arg3 (p8 / perform-01 :arg1 (s2 / swim-01))) :arg2 (a3 / air))) :time (s3 / soon :degree (m2 / more) :time (s4 / soon)))
(m / multi-sentence :snt1 (' / ' :arg1 (e / everyone) :arg1-of (c / cause-01 :arg0 (a / and :op1 (t / take-out-11 :arg0 (s / she) :arg1 (k / knickers) :mod (a2 / again)) :op2 (d / didn :arg0 (s2 / she) :degree (t2 / total) :arg1-of (o / obvious-01))))) :snt2 ('2 / ' :mode (i / imperative) :arg0 (y / you) :arg1-of (c2 / cause-01 :arg0 (p / put-01 :arg0 (s3 / she) :arg1 (t3 / they) :arg2 (b / back :part-of (s4 / shelf))) :arg1-of (o2 / obvious-01))))
(c / cause-01 :arg0 (q / quiet :arg1 (w / we) :degree (s / so) :location (h / here)) :arg1 (u / use-01 :polarity - :arg1 (w2 / we) :arg2 (t / that)))
(c / cause-01 :arg0 (a / and :op1 (p / politician :source (w / wing :mod (r / right) :mod (r2 / right))) :op2 (p2 / party :mod (w2 / wing :mod (r3 / right)) :mod (w3 / wing :mod (r4 / right)) :mod (w4 / wing :mod (r5 / right))) :arg1-of (c2 / cause-01 :arg0 (a2 / and :op1 (w5 / wing :mod (r6 / right) :mod (r7 / right)) :op2 (p3 / party :mod (w6 / wing :mod (r8 / right)) :mod (w7 / wing :mod (r9 / right)) :mod (w8 / wing :mod (r10 / right)))))) :arg1 (e / event :arg1-of (p4 / private-03) :mod (e2 / event :mod (w9 / water))) :time (w10 / week :mod (t / this)))
(g / goal :mod (m / main) :poss (c / company) :domain (c2 / continue-01 :arg1 (g2 / grow-01 :arg1 (a / and :op1 (t / turnover :poss (i / it)) :op2 (p / profit-01 :arg0 (i2 / it))))) :time (y / year :mod (t2 / this)) :mod (a2 / also) :arg1-of (r / resemble-01 :arg2 (y2 / year :mod (o / other))))
20030112 :arg1 (w / we) :time (s / since :op1 (b / birth-01 :arg1 (p / person :arg0-of (h / have-org-role-91 :arg2 (p2 / president :ord (o / ordinal-entity :value 2))) :arg0-of (h2 / have-org-role-91 :arg2 (p3 / president :ord (o2 / ordinal-entity :value 2)))))) :time (a / after :op1 (b2 / birth-01 :arg1 (p4 / person :arg0-of (h3 / have-org-role-91 :arg2 (p5 / president :mod (v / vice))))))
(a / and :op1 (a2 / appear-01 :arg1 (o / other) :manner (c / compare-01)) :op2 (c2 / concern-01 :arg0 (' / '' :arg1 ('2 / '')) :arg1 (o2 / other)) :manner (c3 / compare-01))
(m / multi-sentence :snt1 (a / and :op1 (p / practice :polarity - :mod (c / common) :domain (p2 / practice :mod (t / this))) :op2 (c2 / continue-01 :arg1 (t2 / tradition :mod (t3 / this))) :time (a2 / after :op1 (p3 / presidency :arg1 (p4 / presidency :mod (t4 / this))))) :snt2 (c3 / continue-01 :arg1 (t5 / tradition :mod (t6 / this))))
(v / visit-01 :arg0 (s / state) :arg1 (a / and :op1 (p / person :arg0-of (h / have-org-role-91 :arg2 (h2 / head-of-state))) :op2 (r / recognition :poss (s2 / sovereignty :poss (p2 / person)))) :arg1-of (c / cause-01 :arg0 (a2 / and :op1 (r2 / reconfirmed :arg0 (s3 / sovereignty :poss (c2 / country :arg1-of (n / neighbor-01))) :arg1 (r3 / recognition)) :op2 (a3 / accept-01 :arg1 (r4 / recognition :poss (n2 / nation :mod (d / democracy :location (c3 / continent :name (n3 / name :op1 "N-A"))) :mod (d2 / democracy :location (n4 / north))))))) :time (d3 / date-entity :dayperiod (N / N-A)))
(f / face-01 :arg0 (i / i) :arg1 (s / situation :location-of (v / view-02 :arg0 (p / person :arg0-of (h / have-rel-role-91 :arg1 (p2 / person) :arg2 (p3 / parent))) :arg1 (t / tantrums :poss (p4 / person :arg0-of (h2 / have-rel-role-91 :arg1 (p5 / person) :arg2 (c / child)))) :prep-as (a / and :op1 (w / wrong) :op2 (n / normal-02 :polarity -)))) :frequency (o / often))
(t / time :time-of (s / start-01 :arg0 (y / you) :arg1 (l / look-01 :arg0 (y2 / you) :arg1 (a / around) :purpose (u / understand-01 :arg0 (y3 / you) :arg1 (o / or :op1 (p / person :arg0-of (h / have-rel-role-91 :arg1 (y4 / you) :arg2 (p2 / partner))) :op2 (p3 / person :arg0-of (h2 / have-rel-role-91 :arg1 (y5 / you) :arg2 (p4 / partner))) :op3 (p5 / person :arg0-of (h3 / have-rel-role-91 :arg1 (y6 / you) :arg2 (d / don))) :op4 (p6 / person :arg0-of (h4 / have-rel-role-91 :arg1 (y7 / you) :arg2 (d2 / don))) :op5 (p7 / person :arg0-of (h5 / have-rel-role-91 :arg1 (y8 / you) :arg2 (d3 / don))) :op5 (p8 / person :arg0-of (w / want-01 :polarity - :arg1 (s2 / see-01 :arg0 (y9 / you) :arg1 (t2 / they) :mod (a2 / again :mod (e / ever))) :mod (e2 / even))))))) :mod (d4 / definite) :condition (f / feel-02 :arg0 (y10 / you) :arg1 (g / get-05 :arg1 (p9 / person :arg0-of (h6 / have-rel-role-91 :arg1 (y11 / you) :arg2 (p10 / partner))) :arg2 (a3 / around) :arg1-of (c / cause-01 :arg0 (i / issue-02 :duration (t3 / temporal-quantity :quant (N / N-A) :unit (m / minute)))))) :mod (d5 / definite))
FAILED_TO_PARSE#Two concepts in a row.
(a / and :op1 (i / inform-01 :arg0 (p / person :arg0-of (s / sohr :arg1 (c / car :poss (p2 / person :arg0-of (r / reside-01 :arg1 (c2 / city)))))) :arg1 (p3 / person) :arg2 (g / get-05 :arg1 (p4 / person) :arg2 (c3 / car))) :op2 (t / take-01 :arg0 (p5 / person) :arg1 (c4 / car) :arg2 (p6 / person) :time (t2 / then)))
(r / release-01 :arg0 (t / they) :arg1 (h / hostage :quant (a / approximately :op1 270)) :time (l / late :degree (m / more)))
(a / and :op1 (t / take-01 :arg0 (g / government-organization :name (n / name :op1 "N-A") :mod (c / continent :name (n2 / name :op1 "N-A")) :mod (f / formal :polarity -)) :arg1 (c2 / capital :location (s / slovakia :mod (s2 / slovakia)))) :op2 (p / participate-01 :arg0 (c3 / country :quant (a2 / all) :arg2-of (e / except-01 :arg1 (c4 / country :mod (g2 / great)))) :arg1 (p2 / participate-01 :arg0 (c5 / country))))
(b / believe-01 :arg0 (i / i) :arg1 (a / and :op1 (c / confirm-01 :arg0 (i2 / it) :arg1 (a2 / and :op1 (c2 / confirm-01 :arg1 (p / person :quant 5) :accompanier (c3 / committee :mod (e / executive :mod (l / loc)))) :op2 (t / take-01 :polarity - :arg0 (p2 / person) :arg1 (t2 / they :mod (a3 / all)) :arg4 (o / olympics)) :time (t3 / then)))))
(r / report-01 :arg0 (a / agency :name (n / name :op1 "N-A") :mod (n2 / news)) :arg1 (l / lose-02 :arg0 (b / borodavko :name (n3 / name :op1 (l2 / latvian) :op2 (j / jevgenijs)) :arg0-of (f / fight-01)) :arg1 (f2 / fight-01 :arg0 (h / he) :ord (o / ordinal-entity :value 1)) :location (c / coffin :mod (o2 / over :op1 (v / value-interval :op1 100 :op2 100)))) :time (p / previous))
(g / grant-01 :arg1 (s / set :quant 24 :consist-of (d / drone)) :arg2 (e / event :time (t / today)) :time (e2 / event :mod (o / olympic) :time (t2 / today)) :arg1-of (m / mean-01 :arg2 (a / and :op1 (a2 / and :op1 (t3 / track) :op2 (t4 / track) :op3 (f / field) :op4 (c / cycling :mod (t5 / track)) :op5 (d2 / diving :mod (e3 / equestrian)) :op6 (d3 / diving :mod (f2 / fencing)) :op7 (d4 / diving :arg0 (s2 / set)) :op8 (s3 / swim-01 :arg0 (s4 / set)) :op8 (s5 / swim-01 :arg0 (s6 / set)) :op8 (w / weightlifting :arg1 (a3 / and)) :op8 (w2 / weightlifting :arg1 (a4 / and)) :op8 (w3 / weightlifting :arg0 (s7 / set)) :op8 (w4 / weightlifting :arg0 (s8 / set)) :op8 (w5 / weightlifting :arg1 (a5 / and)) :op8 (w6 / weightlifting :arg1 (s9 / set)) :op8 (w7 / weightlifting :arg1 (s10 / set)) :op8 (w8 / weightlifting :arg1 (s11 / set)) :op8 (w9 / weightlifting :arg1 (s12 / set))))))
(a / argue-01 :arg0 (o / office :poss (p / person :arg0-of (h / have-org-role-91 :arg2 (o2 / office :mod (c / calais))))) :arg1 (r / recommend-01 :arg1 (d / demolished :arg1 (p2 / place) :arg1-of (c2 / cause-01 :arg0 (r2 / represent-01 :arg0 (p3 / place) :arg1 (e / economy :mod (e2 / email) :arg0-of (p4 / pay-01 :polarity - :arg3 (t / tax)))))) :arg1-of (c3 / cause-01 :arg0 (c4 / carry-01 :arg0 (p5 / place) :arg1 (a2 / and :op1 (f / fire) :op2 (r3 / risk-01 :arg2 (s / sanitation)))))))
(a / and :op1 (a2 / add-01 :arg0 (i / i) :arg1 (a3 / another :source (r / restart-01))) :op2 (b / be-located-at-91 :arg1 (h / half :ord (o / ordinal-entity :value 1)) :arg2 (t / temporal-quantity :quant (N / N-A) :unit (m / minute)) :mod (s / still)))
(c / condition :arg1-of (c2 / critical-02) :domain (c3 / cleanness :location (a / around :op1 (g / gulf :mod (r / riga)))))
(c / contrast-01 :arg1 (e / explain-01 :arg0 (c2 / council :mod (c3 / city :mod (r / riga))) :arg1 (t / thing :arg1-of (b / base-02 :arg2 (d / day)))) :arg2 (d2 / difficult :domain (r2 / reigns :arg1 (p / person :arg0-of (v / visit-01) :mod (l / littering)))))
(s / satisfy-01 :arg0 (c / carrying :arg0 (y / you) :arg1 (j / job :poss (y2 / you))) :arg1 (i / i))
(s / say-01 :arg0 (s2 / scientist :mod (p / politics)) :arg1 (r / reorganizing :arg0 (p2 / person :arg0-of (h / have-org-role-91 :arg2 (s3 / scientist :mod (p3 / politics)))) :arg1 (c / circle :mod (e / elite)) :time (b / before :op1 (e2 / elect-01 :arg1 (p4 / person :quant 2018)))))
(r / result-01 :arg1 (i / it) :arg2 (l / lose-02 :arg1-of (s / show-01 :arg2 (m / monkey))) :time (e / eventual))
(p / possible-01 :polarity - :arg1 (g / grow-01 :arg1 (a / athletes :poss (w / we)) :manner (t / taller)))
(i / improve-01 :arg1 (c / concern-01 :arg0 (a / and :op1 (i2 / improve-01 :arg1 (c2 / culture :mod (v / vef))) :op2 (l / landscaping :poss (a2 / area :arg1-of (s / surround-01))))) :ord (o / ordinal-entity :value 1))
(p / possible-01 :arg1 (m / mention-01 :arg1 (a / and :op1 (p2 / person :arg0-of (p3 / participate-01 :arg1 (k / kleins))) :op2 (p4 / person :arg0-of (h / have-org-role-91 :arg2 (k2 / krievins))) :op3 (p5 / person :arg0-of (h2 / have-org-role-91 :arg2 (s / sterns))) :op4 (p6 / person :arg0-of (h3 / have-org-role-91 :arg2 (h4 / head-of-state))) :op5 (p7 / person :arg0-of (h5 / have-org-role-91 :arg2 (h6 / head-of-state))) :op6 (p8 / person :arg0-of (h7 / have-org-role-91 :arg2 (h8 / head-of-state))) :op6 (p9 / person :arg0-of (h9 / have-org-role-91 :arg2 (h10 / head-of-state))) :op7 (p10 / person :arg0-of (h11 / have-org-role-91 :arg2 (h12 / head-of-state))) :op7 (p11 / person :arg0-of (h13 / have-org-role-91 :arg2 (h14 / head-of-state))) :op7 (p12 / person :arg0-of (h15 / have-org-role-91 :arg2 (h16 / head-of-state))))))
(o / obligate-01)
(r / robbed :arg1 (m / man :mod (d / die-01)) :location (c / city :name (n / name :op1 "N-A") :location (c2 / country :name (n2 / name :op1 "N-A"))))
(c / contain-01 :arg0 (a / and :op1 (p / person :arg0-of (h / have-org-role-91 :arg2 (s / scientist :mod (c2 / canadian)))) :op2 (p2 / person :arg0-of (h2 / have-org-role-91 :arg2 (s2 / scientist))) :op3 (p3 / person :arg0-of (r / responsible-01 :arg1 (a2 / and :op1 (a3 / appetite) :op2 (a4 / amount :quant-of (f / food :arg1-of (e / eat-01 :arg0 (w / we)))))) :mod (c3 / company :name (n / name :op1 "N-A"))) :quant (s3 / some)) :arg1 (f2 / fiber :mod (d / dietary)))
(a / and :op2 (c / contain-01 :arg0 (b / berries) :arg1 (p / polyphenols :arg0-of (h / help-01 :arg1 (a2 / and :op1 (l / lose-02 :arg1 (w / weight)) :op2 (p2 / prevent-01 :arg1 (i / increase-01 :arg1 (f / fat :mod (b2 / body)))))))))
(c / cause-01 :arg1 (e / essential :domain (e2 / eat-01 :polarity - :arg1 (r / right :mod (d / dessert)) :time (a / after :op1 (g / game :name (n / name :op1 "N-A")))) :mod (e3 / essential)))
(c / cause-01 :arg0 (a / and :op1 (c2 / change-01 :arg1 (a2 / and :op1 (e / egg) :op2 (m / meat))) :op2 (c3 / change-01 :arg1 (m2 / meat)) :quant (s / some) :arg1-of (i / include-91 :arg2 (p / protein))) :arg1 (e2 / easy-05 :arg1 (m3 / make-02 :arg0 (a3 / and :op1 (p2 / process-01 :arg1 (e3 / egg)) :op2 (m4 / meat)) :arg1 (e4 / easy-05 :arg1 (p3 / process-01) :degree (m5 / more)))))
(m / multi-sentence :snt1 (c / create-01 :arg0 (p / person :quant 1 :arg1-of (i / include-91 :arg2 (p2 / person :arg0-of (i2 / insult-01 :arg1 (p3 / person :arg0-of (u / use-01)))))) :arg1 (i3 / image) :arg0-of (i4 / insult-01 :arg1 (p4 / person :arg0-of (u2 / use-01)))) :snt2 (h / hard-02 :arg1 (g / go-01 :arg1 (t / thing :mod (t2 / type :mod (t3 / this))) :arg4 (t4 / thing :mod (t5 / type :mod (t6 / this))) :arg1-of (r / resemble-01 :arg2 (t7 / thing :arg1-of (d / do-02 :arg0 (p5 / person :name (n / name :op1 "katie" :op2 "zhu")) :time (b / before)))) :degree (m2 / more :degree (m3 / much)))))
(a / and :op1 (c / criticize-01 :arg0 (p / person :arg0-of (l / lead-02 :arg1 (c2 / country :name (n / name :op1 "N-A")))) :arg1 (p2 / person :mod (w / white) :mod (m / most) :arg0-of (l2 / lead-02))) :op2 (e / end-01 :arg0 (p3 / person) :arg1 (e2 / essay :poss (p4 / person)) :manner (d / deletesnapchat :arg1 (p5 / person))))
(s / say-01 :arg0 (t / thing :arg1-of (r / report-01)) :arg1 (a / and :op1 (p / provide-01 :arg0 (p2 / product :arg1-of (a2 / approve-01 :arg0 (p3 / person :arg0-of (l / lead-02) :mod (s2 / senior))) :arg1-of (a3 / approve-01 :arg0 (p4 / person :arg0-of (l2 / lead-02) :mod (s3 / senior))) :arg1-of (a4 / approve-01 :arg0 (p5 / person :arg0-of (l3 / lead-02) :mod (s4 / senior))) :arg1-of (a5 / approve-01 :arg0 (p6 / person :arg0-of (l4 / lead-02) :mod (s5 / senior)))) :arg1 (t2 / thing :mod (p7 / positive) :mod (p8 / positive :degree (m / more) :compared-to (a6 / analyze-01 :arg1 (c / community :mod (i / intelligence)))))) :op2 (p9 / positive :degree (m2 / more) :compared-to (a7 / analyze-01 :arg0 (a8 / analyze-01) :arg1 (e / element :mod (o / other) :poss (c2 / community :mod (i2 / intelligence)))))))
(f / follow-01 :arg1 (r / report :arg1-of (r2 / release-01 :arg0 (t / thing :arg1-of (r3 / report-01 :arg0 (i / investigate-01))))) :arg2 (t2 / thing :arg1-of (r4 / report-01)))
(i / infer-01 :arg1 (b / bam :arg1 (s / so)))
(a / and :op1 (m / make-01 :arg0 (t / they) :arg1 (i / ingredient)) :op2 (c / cheap-02 :arg1 (t2 / they) :arg2 (t3 / thing :arg1-of (c2 / cheap-02) :mod (o / out))))
(s / say-01 :arg1 (l / like-01 :arg0 (h / he) :arg1 (e / eat-01 :arg0 (h2 / he) :arg1 (c / cuisine :name (n / name :op1 (c2 / continental)))) :arg1-of (r / resemble-01 :arg2 (f / fish :prep-with (s2 / sauce :mod (c3 / cucumber))))) :arg2 (p / person :name (n2 / name :op1 "N-A")))
(d / date :mod (c / case-03) :time (b / back :op1 (a / and :op1 (g / gilead :arg1 (a2 / and :op1 (p / person :arg0-of (h / have-org-role-91 :arg2 (h2 / head-of-state))) :op2 (p2 / person :arg0-of (c2 / claim-01 :arg1 (o / own-01 :arg1 (l / laboratory)))))) :op2 (p3 / person :arg0-of (c3 / claim-01 :arg1 (o2 / own-01 :arg0 (p4 / person) :arg1 (w / work-01 :arg1 (l2 / laboratory) :arg0-of (c4 / counter-01 :arg1 (l3 / laboratory))))))) :op3 (i / ingredient :arg1-of (a3 / activity-06) :location (d2 / drug :mod (g2 / gilead)))))
(c / come-01 :arg1 (p / person :arg0-of (h / have-org-role-91 :arg1 (t / team) :arg3 (l / lead-02 :arg0 (p2 / person)))) :purpose (r / rely-01 :arg0 (p3 / person) :arg1 (s / squad :name (n / name :op1 (m / mighty) :op2 (t2 / track) :op3 (t3 / track)) :poss (p4 / person)) :purpose (a / and :op1 (o / own-01 :arg0 (p5 / person) :arg1 (p6 / period :mod (m2 / middle) :part-of (g / game :mod (o2 / olympic)))) :op2 (d / deliver-01 :arg0 (p7 / person) :arg1 (h2 / host-01 :arg0 (p8 / person))))))
(p / project :mod (i / infrastructure) :domain (p2 / project :mod (i2 / infrastructure) :beneficiary (m / many)) :arg1-of (r / resemble-01 :polarity - :arg2 (f / few :op1 (f2 / few :op1 (t / temporal-quantity :quant (N / N-A) :unit (m2 / month)) :mod (j / just)))))
(a / and :op1 (o / open-01 :arg1 (i / investigate-01 :arg2-of (c / criminal-03))) :op2 (s / step-01 :arg1 (p / person :arg0-of (h / have-rel-role-91 :arg2 (l / lawyer))) :arg2 (s2 / situation :arg1-of (r / resemble-01 :arg2 (t / this)))) :op3 (t2 / tell-01 :arg0 (p2 / person :name (n / name :op1 "gilles" :op2 "hofstetter") :arg0-of (h2 / have-rel-role-91 :arg1 (p3 / person) :arg2 (l2 / lawyer))) :arg1 (p4 / person :arg0-of (h3 / have-rel-role-91 :arg1 (p5 / person) :arg2 (l3 / lawyer))) :arg2 (p6 / person :arg0-of (h4 / have-rel-role-91 :arg1 (p7 / person) :arg2 (l4 / lawyer)))))
(s / say-01 :arg1 (o / obligate-01 :arg2 (d / determine-01 :arg0 (p / person :arg0-of (p2 / prosecute-01)) :arg1 (t / thing :arg1-of (s2 / say-01 :arg0 (p3 / person))))) :arg2 (p4 / person :name (n / name :op1 "N-A")))
(m / mean-01 :arg1 (t / thing :arg1-of (l / lose-02) :arg1-of (l2 / lose-02)) :arg2 (c / conclude-01 :arg1 (h / have-03 :arg0 (i / i) :arg1 (' / '' :mod (u / underperformed)))))
(c / cause-01 :arg1 (a / and :op1 (p / participate-01 :arg0 (w / we) :arg1 (p2 / prepare-01 :arg1 (t / thing :arg1-of (b / base-02 :arg2 (l / legal-02))))) :op2 (p3 / provide-01 :arg0 (w2 / we) :arg1 (t2 / thing :arg1-of (c2 / comment-01 :arg0 (w3 / we)))) :op3 (o / offer-01 :arg0 (w4 / we) :arg1 (t3 / thing :arg1-of (p4 / propose-01 :arg0 (w5 / we))))))
(a / and :op1 (h / have-03 :arg0 (s / slash :op1 (p / person :mod (c / country :name (n / name :op1 "Israel"))) :op2 (p2 / person :mod (c2 / country :name (n2 / name :op1 "Israel")))) :arg1 (c3 / container :consist-of (g / good) :mod (e / experiment-01) :ord (o / ordinal-entity :value 1) :consist-of (g2 / good))) :op2 (s2 / sign-02 :arg0 (p3 / person) :arg1 (a2 / agree-01 :arg1 (c4 / cooperate-01)) :arg2 (c5 / chain :consist-of (s3 / supermarket) :mod (n3 / new) :location (c6 / country))) :li 2016)
(s / succeed-01 :arg0 (a / antonenko :quant 2009) :arg1 (s2 / succeed-01 :arg0 (h / he) :degree (g / great)) :location (d / debut :part-of (m / mermaid :location (o / opera :mod (m2 / metropolitan)))))
(a / and :op1 (b / broke :arg0 (p / person :arg0-of (h / hack-04) :arg0-of (b2 / break-01 :arg1 (c / computer :poss (c2 / committee :mod (d / democracy) :mod (d2 / democracy) :mod (d3 / democracy))) :arg1-of (a2 / allege-01))) :arg1 (a3 / attack-01 :mod (c3 / cyber) :mod (o / other) :quant (s / several)) :arg1-of (a4 / allege-01)) :op2 (h2 / hack-04 :arg0 (p2 / person) :arg1 (a5 / account :mod (e / e-mail) :poss (f / force :poss (m / military :name (n / name :op1 "N-A"))))) :op3 (e2 / ex-commander :arg0 (s2 / server :poss (p3 / person :arg0-of (h3 / have-org-role-91 :arg1 (f2 / force :poss (m2 / military)) :arg3 (e3 / ex-commander)))) :arg1 (s3 / society :arg1-of (o2 / open-05 :arg2 (' / ''))) :medium (t / thursday)))
(b / benefit-01 :arg0 (v / venus :mod (e / early)) :arg1 (s / sun :quant (p / percentage-entity :value (N / N-A))) :mod (a / also))
(a / and :op1 (a2 / appreciate-02 :arg0 (w / we) :arg1 (a3 / all :arg1-of (d / do-02 :arg0 (h / he) :arg2 (o / organization :poss (w2 / we))))) :op2 (w3 / wish-01 :arg0 (w4 / we) :arg1 (l / luck :mod (g / good :degree (m / most)) :time (f / future))))
(s / say-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg2 (s2 / spokesperson))) :arg1 (a / and :op1 (t / team :mod (s3 / small) :domain (w / we) :arg0-of (o / operate-01 :arg1-of (r / resemble-01 :arg2 (f / family :arg1-of (h2 / have-org-role-91 :arg0 (w2 / we) :arg2 (m / member)))))) :op2 (m2 / miss-01 :arg1 (p2 / person :arg0-of (h3 / have-org-role-91 :arg2 (s4 / spokesperson))))))
(s / say-01 :arg0 (w / website :mod (k / kremlin)) :arg1 (a / and :op1 (m / manage-02 :arg0 (h / he) :arg1 (a2 / and :op1 (p / protocol :mod (p2 / president)) :op2 (p3 / person :arg2-of (s2 / staff-01 :arg1 (g / government-organization :arg0-of (g2 / govern-01))))) :time (l / late :degree (m2 / more))) :op2 (s3 / say-01 :arg0 (w2 / website :mod (k2 / kremlin)) :arg1 (- / -lrb- :location (c / country :name (n / name :op1 "N-A"))))))
(o / obligate-01 :arg1 (w / we) :arg2 (a / and :op1 (b / bring-01 :arg0 (w2 / we) :arg1 (p / person :arg1-of (a2 / afford-01 :arg1-of (p2 / possible-01 :polarity -))) :arg2 (c / community :mod (y / young :degree (m / more)) :arg1-of (i / inspire-01 :arg0 (a3 / and :op1 (s / simone) :op2 (g / gabby) :op3 (l / laurie)))))))
(s / say-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (p2 / police :mod (m / metropolitan)) :arg3 (e / eric))) :arg1 (s2 / say-01 :arg0 (p3 / person) :arg1 (a / astonishing :polarity - :arg1 (c / charge-05 :arg2 (c2 / criminal-03)) :time (a2 / after :op1 (c3 / case :mod (h2 / hamlets))))) :arg2 (p4 / police :mod (m2 / metropolitan)) :manner (s3 / sir))
(c / cause-01 :arg0 (s / see-01 :arg0 (i / i) :arg1 (r / resemblance :mod (h / huge)) :arg1-of (p / personal-02)) :arg1 (s2 / see-01 :arg0 (i2 / i) :arg1 (r2 / resemblance :mod (h2 / huge)) :arg1-of (p2 / personal-02) :arg2-of (e / except-01 :arg1 (a / and :op1 (h3 / hair :arg1-of (f / facial)) :op2 (h4 / hair :arg1-of (f2 / facial))))))
(m / multi-sentence :snt1 (f / fortunate-01 :polarity - :arg2 (w / word)) :snt2 (s / sorry-01 :arg1 (w2 / we) :arg2 (e / event :mod (i / it))))
(a / and :op1 (l / leave-17 :arg1 (w / wall) :accompanier (h / holes :mod (g / gaping))) :op2 (s / strewn :arg1 (r / rubbish) :location (o / over :op1 (f / floor))) :op3 (d / daubed :arg1 (w2 / wall) :location (w3 / wall :location (w4 / wall))))
(s / say-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg2 (p2 / person :arg0-of (m / manage-01 :arg1 (e / enforce-01 :arg1 (n / neighbourhood)))))) :arg1 (f / fail-01 :arg1 (f2 / family) :arg2 (c / cooperate-01 :arg0 (f3 / family) :arg1 (a / authority :arg1-of (l / local-02)))))
(s / say-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg2 (a / auzins :mod (' / '')))) :arg1 (p2 / person :arg0-of (h2 / have-rel-role-91 :arg1 (h3 / he) :arg2 (d / didn))) :arg1-of (s2 / say-01 :arg0 (p3 / person :arg0-of (h4 / have-org-role-91 :arg2 (a2 / auzins :mod ('2 / ''))))))
(a / and :op1 (w / wasn :arg0 (i / it) :arg1 (t / thing :arg1-of (a2 / aspire-01 :arg0 (h / he))) :degree (t2 / total)) :op2 (c / crave :polarity - :arg0 (h2 / he) :arg1 (f / fame-01)))
(f / form :consist-of (p / person :arg0-of (s / sing-01)) :domain (t / think-01 :mod (s2 / such)) :mod (a / almost))
(i / injure-01 :arg1 (a / accidents :quant 71 :mod (t / traffic) :arg1-of (h / have-03 :arg0 (p / person :arg1-of (i2 / injure-01)))) :time (a2 / after :op1 (n / now) :duration (t2 / temporal-quantity :quant (N / N-A) :unit (h2 / hour) :mod (l / last))))
(s / say-01 :arg0 (s2 / study :arg1-of (c / conform-01 :arg2 (s3 / study :mod (n / new)))) :arg1 (c2 / contrast-01 :arg1 (p / possible-01 :arg1 (l / large :degree (m / more) :compared-to (b / believe-01 :arg0 (r / regime :mod (c3 / communism)) :arg1 (p2 / possible-01 :arg1 (l2 / large :degree (m2 / more) :compared-to (b2 / believe-01 :arg0 (r2 / regime :mod (c4 / communism)))) :degree (g / great))))) :arg2 (d / doubt-01 :arg0 (s4 / study) :arg1 (d2 / disappear-01 :polarity - :arg1 (n2 / number :quant-of (v / victim) :arg1-of (a / actual-02)) :time (y / yet)))))
FAILED_TO_PARSE#Number of opening and closing brackets doesn't match.
(c / cause-01 :arg0 (k / know-01 :arg0 (i / i) :arg1 (t / thing :arg0-of (c2 / cause-01 :arg1 (a / and :op1 (p / place :polarity - :arg1-of (m / mean-01 :arg2 (p2 / place :arg1-of (s / swim-01)))) :op2 (p3 / place :arg0-of (a2 / add-01 :arg1 (v / value-01 :polarity - :arg1 (s2 / society) :arg2 (a3 / and :op1 (p4 / person :arg0-of (h / have-org-role-91 :arg1 (c3 / criminal-organization :name (n / name :op1 "N-A")) :arg2 (p5 / president))) :op2 (p6 / person :arg0-of (h2 / have-org-role-91 :arg1 (c4 / country :name (n2 / name :op1 "N-A")) :arg2 (p7 / president)))))))))) :arg1 (r / receive-01 :polarity - :arg0 (p8 / person :arg0-of (h3 / have-org-role-91 :arg2 (p9 / president :mod (v2 / vice)))) :arg1 (s3 / salary))) :li (N / N-A))
(r / remain-01 :arg1 (c / company :arg0-of (p / provide-01 :arg1 (i / information))) :arg3 (a / anonymous))
(s / sign-01 :arg0 (p / person :quant (m / more-than :op1 170000)) :arg1 (p2 / petition-01) :purpose (p3 / protect-01 :arg0 (p4 / petition-01) :arg1 (p5 / person :arg0-of (h / have-rel-role-91 :arg1 (k / kid) :arg2 (k2 / kid)))))
(c / contrast-01 :arg1 (h / hurt-01 :arg1 (c2 / city :name (n / name :op1 "N-A") :mod (t / this))) :arg2 (p / progress-01 :arg1 (p2 / progress-01)))
(t / touch-01 :arg0 (a / and :op1 (p / person :mod (c / country :name (n / name :op1 "N-A"))) :op2 (p2 / person :mod (c2 / country :name (n2 / name :op1 "N-A")))) :arg1 (b / ball) :mod (h / hardly))
(t / think-01 :arg0 (p / person :arg0-of (s / spend-02 :arg1 (t2 / thing :arg1-of (t3 / think-01 :arg0 (p2 / person)) :ord (o / ordinal-entity :value 1)))) :arg1 (s2 / spend-02 :arg0 (p3 / person) :arg1 (m / more :mod (l / little) :compared-to (a / attempt-01 :arg0 (p4 / person) :arg1 (p5 / process-02 :arg0 (p6 / person) :arg1 (p7 / process-02 :arg0 (p8 / person) :arg1 (p9 / process-02 :arg0 (p10 / person) :arg1 (p11 / process-02 :arg0 (p12 / person) :arg1 (p13 / process-02 :arg0 (p14 / person))))))))) :prep-in (i / immediate :poss (w / win-01)))
(s / say-01 :arg0 (p / person :name (n / name :op1 "N-A") :arg0-of (h / have-org-role-91 :arg1 (a / artillery :mod (r / royal) :location (a2 / artillery :mod (r2 / royal))) :arg2 (c / captain))) :arg1 (i / i) :time (w / week :mod (t / this)) :arg1-of (c2 / cause-01 :arg0 (c3 / contrast-01 :arg1 (p2 / possible-01 :arg1 (e / extreme :degree (e2 / extreme :degree (b / bit)) :domain (t2 / that))) :arg2 (m / mean-01 :arg1 (i2 / it) :arg2 (l / lot :mod (s2 / such))))))
(s / schedule-01 :arg1 (a / and :op1 (d / discuss-01 :arg1 (i / image :mod (a2 / and :op1 (d2 / design-01 :arg1 (i2 / image :quant 1926 :name (n / name :op1 (b / bertram)))) :op2 (s2 / share-01 :arg1 (i3 / image :quant 1926 :name (n2 / name :op1 (g / goodhue)))))) :op2 (a3 / and :op1 (r / restore-01 :arg1 (i4 / image)) :op2 (a4 / and :op1 (r2 / restore-01 :arg1 (i5 / image)) :op2 (r3 / restoration :arg0 (h / holzman :name (n3 / name :op1 (h2 / holzman) :op2 (p / pfeiffer)))))))) :arg2 (a5 / and :op1 (d3 / discuss-01 :arg1 (a6 / and)) :op2 (s3 / share-01 :arg1 (i6 / image))))
(e / except-01 :arg1 (a / and :op1 (p / place :location (l / liepaja)) :op2 (p2 / place :quant (s / several) :location (k / kurzeme))) :arg2 (c / condition :arg1-of (c2 / critical-02) :arg1-of (r / resemble-01)) :arg2-of (e2 / except-01 :arg1 (a2 / and :op1 (b / beach) :op2 (p3 / place :quant (s2 / several) :location (k2 / kurzeme)))))
(a / and :op1 (' / '' :arg1 (n / number :arg1-of (a2 / average-04) :quant-of (a3 / and :op1 (n2 / number :name (n3 / name :op1 (- / -lrb-) :op2 (-2 / -lrb-) :op3 (-3 / -rrb-))) :op2 (-4 / -rrb- :name (n4 / name :op1 (v / vakarbulli))) :op3 (-5 / -rrb- :mod (v2 / vecaki)))) :arg2-of (f / fortunate-01 :polarity -)) :op2 (h / have-purpose-91 :arg1 (-7 / -rrb-) :arg2 (a4 / and :op1 (h2 / huge :mod (h3 / huge)) :op2 (g / goal :mod (h4 / huge)) :op3 (g2 / goal :mod (v3 / vecaki))) :arg2-of (f2 / fortunate-01 :polarity -)) :purpose (r / reduce-01 :arg0 (a5 / and) :arg1 (g3 / garbage :arg1 (p / product :name (n5 / name :op1 "N-A")) :arg2 (u / unit :quant (A / A-135) :arg0-of (h5 / have-org-role-91 :arg1 (e / environment) :arg2 (a6 / activist))))))
(v / volunteer-01 :mode (i / interrogative) :arg0 (h / he) :manner (v2 / volunteer-01 :arg0 (h2 / he)))
(c / cause-01 :arg1 (a / and :op1 (s / sure-02 :arg0 (i / i) :arg1 (r / ready-02 :arg1 (h / he) :arg2 (j / job :mod (t / this) :mod (a2 / all)))) :op2 (s2 / say-01 :arg0 (i2 / i) :arg1 (r2 / ready-02 :arg1 (h2 / he) :arg2 (j2 / job :mod (t2 / this)) :arg1-of (s3 / say-01 :arg0 (p / person :name (n / name :op1 "N-A")))))))
(c / come-01 :arg1 (v / vaino) :arg3 (f / family :arg1-of (h / have-org-role-91 :arg0 (e / elite :mod (c2 / country :name (n / name :op1 "N-A"))) :arg2 (m / member))))
(o / obligate-01 :arg2 (n / note-01 :arg1 (o2 / obligate-01 :arg2 (f / fight-01 :arg0 (y / you) :arg2 (d / division :mod (w / weight :arg1-of (d2 / differ-02))) :location (d3 / division :mod (w2 / weight) :mod (u / up-to :op1 (u2 / up-to :op1 (m / mass-quantity :quant (N / N-A) :unit (k / kilogram))))))) :purpose (g / get-01 :arg1 (o3 / opportunity :mod (o4 / olympic) :poss (h / he)))))
(m / multi-sentence :snt1 (w / want-01 :arg0 (n / nobody) :arg1 (d / die-01 :arg1 (n2 / nobody))) :snt2 (p / possible-01 :arg1 (f / forget-01 :arg1 (t / thing :arg1-of (f2 / feel-01) :mod (t2 / this)) :arg2 (c / court :mod (p2 / political-party :name (n3 / name :op1 "N-A"))) :purpose (m2 / match-03 :mod (e / entire)))))
(a / and :op1 (p / possible-01 :arg1 (o / observe-01 :arg0 (o2 / one) :arg1 (p2 / pattern :mod (c / chain)))) :op2 (f / fly-01 :arg1 (p3 / pass-03 :ord (o3 / ordinal-entity :value 2)) :arg4 (n / net)) :op3 (f2 / fly-01 :arg1 (p4 / pass-03 :arg1 (p5 / pass-03 :arg1 (o4 / option :quant (f3 / few) :purpose (a2 / attack-01 :arg1-of (e / efficient-01))))) :frequency (s / sometimes)))
(p / plan-01 :arg1 (a / and :op1 (r / renovation :arg1 (p2 / part :mod (i / interior) :quant (s / several) :arg2-of (i2 / include-91 :arg1 (a2 / auditoriums :quant 2)))) :op2 (m / make-01 :arg1 (b / building :arg1-of (a3 / access-01 :arg0 (p3 / person :arg0-of (r2 / reduce-01 :arg1 (s2 / sing-01 :arg0 (p4 / person)))))))))
(e / emphasize-01 :arg0 (p / person :arg0-of (g / guard-01 :arg1 (c / church :mod (r / religious-group :name (n / name :op1 "N-A")) :mod (l / latvian)))) :arg1 (o / obligate-01 :arg2 (b / be-located-at-91 :arg1 (g2 / god) :arg2 (c2 / center :poss (g3 / god)) :condition (w / want-01 :arg0 (w2 / we) :arg1 (o2 / obtain-01 :arg0 (w3 / we) :arg1 (e2 / energy) :prep-in (l2 / life :poss (w4 / we)))) :condition (w5 / want-01 :arg0 (w6 / we) :arg1 (o3 / obtain-01 :arg0 (w7 / we) :arg1 (e3 / energy) :prep-in (l3 / life :poss (w8 / we)))))))
(l / lead-01 :arg0 (i / i) :arg1 (s / service :mod (v / vigilia)) :time (b / before))
(c / contrast-01 :arg1 (s / show-01 :arg0 (r / recordings :source (c2 / cameras :arg0-of (s2 / surveil-01))) :arg1 (s3 / stepped :arg0 (p / person :arg0-of (d / drive-01)) :arg1 (c3 / car))) :arg2 (l / leave-11 :arg0 (p2 / person) :time (t / then)))
(p / possible-01 :arg1 (e / enhance-01 :arg0 (l / location :poss (i / it) :arg1-of (n / near-02 :arg2 (n2 / name :op1 (d / daugava) :op2 (r / riverbank)))) :arg1 (w / world) :arg2 (l2 / location :location-of (o / open-01 :arg1 (v / view-01 :arg1 (a / and :op1 (s / ship :mod (p2 / passenger)) :op2 (s2 / ship :mod (c / cruise))))))))
(i / indicate-01 :arg0 (r / research-01) :arg1 (p / possible-01 :arg1 (h / help-01 :arg0 (p2 / pepper :mod (c / cayenne)) :arg1 (r2 / rid-01 :arg1 (f / fat :mod (a / abdominal))))))
(c / cause-01 :arg1 (e / essential :domain (e2 / eat-01 :polarity - :arg1 (r / right :mod (d / dessert)) :time (a / after :op1 (g / game :name (n / name :op1 "N-A")))) :mod (e3 / essential)))
(c / contrast-01 :arg2 (p / possible-01 :arg1 (c2 / combine-01 :arg1 (p2 / protein) :arg2 (f / fat :quant (a / amount :mod (s / small))))))
(h / help-01 :arg0 (v / vitamin) :arg1 (b / build-01 :arg0 (v2 / vitamin) :arg1 (b2 / building :mod (n / non-blood)) :manner (i / iron)) :manner (w / way :mod (s / such)) :arg1-of (c / cause-01 :arg0 (p / possible-01 :arg1 (t / take-04 :arg0 (b3 / body :poss (w2 / we)) :arg1 (i2 / it) :arg1-of (e / easy-05 :degree (m / more))))))
(o / open-01 :arg0 (i / i) :arg1 (s / scoring :location (h / half :ord (o2 / ordinal-entity :value 1)) :prep-with (s2 / shoot-02 :mod (b / backhand) :arg1-of (c / close-10 :arg2 (c2 / close)))) :time (n / night :mod (t / thursday)))
(c / contrast-01 :arg1 (c2 / come-01 :arg1 (p / person :mod (c3 / country :name (n / name :op1 "N-A"))) :arg4 (g / game) :manner (w / win-01 :polarity - :arg0 (p2 / person))) :arg2 (p3 / prove-01 :arg0 (t / team) :arg1 (a / and :op1 (t2 / tough-03 :arg0 (t3 / team) :arg0-of (s / surprise-01)) :op2 (k / keep-01 :arg0 (t4 / team) :arg1 (p4 / product-of :op1 (1 / 1-0) :op2 (12 / 1-0)) :time (u / until :op1 (l / late :op1 (l2 / late :op1 (l3 / late :op1 (l4 / late :op1 (l5 / late :op1 (l6 / late :op1 (l7 / late :op1 (l8 / late :op1 (l9 / late :op1 (l10 / late :op1 (l11 / late :op1 (l12 / late :op1 (l13 / late :op1 (13 / 1-0)))))))))))))))))))
(a / and :op1 (g / go-08 :arg1 (c / coe :name (n / name :op1 (m / mr.) :op2 (c2 / coe))) :arg2 (b / back) :duration (f / forever)) :op2 (t / thirds :arg0 (c3 / coe)))
(r / rule-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (d / district :mod (d2 / district)) :arg3 (j / judge-01))) :arg2 (r2 / receive-01 :arg0 (p2 / person) :arg1 (f / fee :mod (a / attorney)) :arg1-of (c / cause-01 :arg0 (r3 / relate-01 :arg1 (p3 / patent-01 :arg1 (p4 / patent-01 :arg1 (p5 / patent-01 :arg1 (p6 / patent-01 :arg1 (p7 / patent-01 :arg1 (a2 / and :op1 (m / merck) :op2 (m2 / merck))) :mod (c2 / c)))))))))
(s / say-01 :arg0 (p / person :name (n / name :op1 "N-A")) :arg1 (a / and :op1 (a2 / audit-01 :arg1 (h / he) :mod (i / irs) :mod (t / too)) :op2 (f / fear-01 :arg0 (i2 / i) :arg1 (f2 / fear-01 :polarity - :arg0 (p2 / person :arg0-of (v / vote-01)) :arg1 (p3 / person :arg0-of (v2 / vote-01))))))
(b / begin-01 :arg1 (g / gathered :arg1 (f / festival)) :time (a / after :op1 (g2 / gather-03 :arg0 (e / everyone) :arg1-of (n / near-02 :arg2 (s / stage :mod (o / open-air))))))
(a / and :op1 (w / wrong-02 :arg1 (d / doubters) :arg2 2012) :op2 (p / prove-01 :arg1 (w2 / wrong-02 :arg1 (d2 / doubters) :arg2 (h / heathrow))))
(t / time :time-of (a / and :op1 (c / channel :mod (s / spirit :mod (o / olympic))) :op2 (e / expand-01 :arg1 (f / future :poss (w / we) :mod (t2 / trade-01))) :op3 (c2 / create-01 :arg1 (l / legacy :mod (a2 / and :op1 (s2 / skill) :op2 (e2 / employ-01)))) :op4 (p / possible-01 :arg1 (p2 / pride-01 :arg0 (c3 / country :name (n / name :op1 "N-A")) :arg2 (c4 / country :name (n2 / name :op1 "N-A"))))))
(t / tell-01 :arg0 (w / we) :arg1 (d / difficult :mod (d2 / difficult :degree (m / most)) :arg1-of (p / possible-01)) :time (a / already) :time (a2 / after :op1 (d3 / draw-02 :arg0 (w2 / we))))
(c / contrast-01 :arg1 (d / decide-01 :arg0 (p / person :arg1-of (e / expert-01)) :arg1 (t / thing :arg1-of (o / opine-01 :arg0 (h / he)))) :arg2 (d2 / decide-01 :arg0 (b / board :mod (c2 / construct-01)) :arg1 (p2 / possible-01 :polarity - :arg1 (u / use-01 :arg1 (t2 / thing :mod (b2 / both)) :arg2 (l / location :location-of (a / and :op1 (p3 / place-01 :arg1 (c3 / construct-01 :arg1 (c4 / construct-01))) :op2 (d3 / dmitrijs :arg1 (t3 / thing))))))))
(a / and :op1 (h / hotel :arg0 (a2 / and :op1 (h2 / hotel :part-of (p / park)) :op2 (p2 / project :mod (c / clinic))) :arg1 (p3 / project :mod (c2 / clinic))) :op2 (o / own-01 :arg0 (c3 / continent :name (n / name :op1 "Europe") :mod (i / international) :arg0-of (h3 / have-org-role-91 :arg2 (c4 / capital))) :arg1 (a3 / asset :location (c5 / continent))))
(s / succeed-01 :arg0 (a / antonenko :quant 2009) :arg1 (s2 / succeed-01 :arg0 (h / he) :degree (g / great)) :location (d / debut :part-of (m / mermaid :location (o / opera :mod (m2 / metropolitan)))))
(s / say-01 :arg1 (p / presence :arg0 (p2 / person :name (n / name :op1 "mccartney")) :arg1 (b / beatles)) :arg2 (p3 / presence :poss (y / yoko)))
(p / pain-01 :arg1 (i / it) :degree (t / too) :condition (w / watch-01 :arg0 (y / you) :arg1 (d / die-01 :arg1 (y2 / you))))
(r / result-01 :arg1 (r2 / result-01) :arg2 (t / temperature :op1 (t2 / temperature :quant (f / few :op1 (t3 / temporal-quantity :quant (N / N-A) :unit (m / month)) :mod (a / actual)) :compared-to (e / earth) :time (t4 / today))))
(r / resume-01 :arg0 (p / person :arg0-of (w / work-01 :arg1 (o / oil)) :location (n / north)) :arg1 (t / talk-01))
(p / possible-01 :arg1 (c / confirm-01 :arg0 (a / and :op1 (g / group :mod (w / wood)) :op2 (u / unite-01)) :arg1 (a2 / agree-01 :arg0 (w2 / we) :arg1 (r / restart-01 :arg0 (w3 / we) :arg1 (p2 / process-02) :purpose (r2 / resolution :mod (d / dispute-01 :time (c2 / current))))) :arg2 (t / thing :arg1-of (s / state-01) :mod (j / joint))))
(a / and :op1 (t / thousands :arg0 (i / it) :arg1 (p / person :source (p2 / payroll :poss (i2 / it)))) :op2 (a2 / announce-01 :arg0 (i3 / it) :arg1 (p3 / plan-01 :arg0 (p4 / person) :arg1 (l / leave-15 :arg0 (p5 / person) :arg1 (a3 / and :op1 (o / operation :mod (o2 / oil)) :op2 (o3 / operation :mod (g / gas)) :location (u / up-to :op1 (c / country :quant 10))))) :arg1-of (a4 / announce-01 :arg0 (a5 / and :op1 (p6 / person :arg0-of (h / have-org-role-91 :arg1 (i4 / it))) :op2 (p7 / plan-01 :arg0 (p8 / person) :arg1 (l2 / leave-15 :arg0 (p9 / person) :arg1 (c2 / country :quant 10))))) :arg1-of (c3 / cause-01 :arg0 (s / streamlines :arg0 (i5 / it) :arg1 (o4 / operation :poss (g2 / group) :mod (e / energy) :mod (e2 / energy))))))
(a / and :op1 (l / learn-01 :arg0 (w / we) :arg1 (r / relation-03 :arg0 (w2 / we) :arg2 (m / mass :mod (s / star) :mod (o / other))) :degree (m2 / more)) :op2 (l2 / learn-01 :arg0 (w3 / we) :arg1 (r2 / relation-03 :arg0 (w4 / we) :arg2 (a2 / and :op1 (m3 / mass :mod (s2 / star)) :op2 (h / history :mod (e / even) :poss (s3 / system :poss (c / country) :mod (s4 / solar))) :op3 (s5 / scientist :mod (r3 / research-01)) :op4 (s6 / scientist :mod (r4 / research-01)) :op5 (s7 / scientist :mod (r5 / research-01)) :location (a3 / and :op1 (c2 / center :mod (p / process-01 :arg0 (c3 / country :name (n / name :op1 "N-A")))) :op2 (c4 / center :arg0-of (a4 / analyze-01) :location (l3 / location :name (n2 / name :op1 "pasadena")))))) :medium (n3 / news)))
(c / cause-01 :arg0 (c2 / close-10 :arg1 (c3 / cluster :mod (p / pleiades)) :arg2 (l / laboratory :mod (c4 / cosmic :mod (i / ideal))) :purpose (c5 / compare-01 :arg0 (l2 / laboratory) :arg1 (q / quality :mod (s / stellar)) :arg2 (r / rate :mod (b / broadcast-program :name (n / name :op1 "N-A"))))))
(s / say-01 :arg0 (o / office :poss (p / person :arg0-of (h / have-org-role-91 :arg2 (o2 / office :mod (m / medicine))) :arg0-of (h2 / have-org-role-91 :arg2 (o3 / office :mod (m2 / medicine))))) :arg1 (i / identify-01 :arg1 (b / body :name (n / name :op1 (s2 / san) :op2 (f / frankly) :op3 (f2 / frankly) :op4 (f3 / frankly) :op5 (f4 / frankly) :op6 (f5 / frankly) :op7 (f6 / frankly))) :arg2 (p2 / person :arg0-of (h3 / have-org-role-91 :arg1 (b2 / body) :arg3 (l / lead-02 :arg0 (b3 / body) :arg1 (b4 / body)))) :time (m3 / morning :mod (w / wednesday))))
(s / say-01 :arg0 (p / person :name (n / name :op1 "N-A")) :arg1 (p2 / possible-01 :polarity - :arg1 (t / think-01 :arg0 (p3 / person) :arg1 (a / anyone :arg0-of (w / want-01 :arg1 (h / hurt-01 :arg0 (a2 / anyone) :arg1 (p4 / person :mod (y / young :degree (m / more)) :arg0-of (h2 / have-rel-role-91 :arg1 (h3 / he) :arg2 (b / brother :mod (y2 / young :degree (m2 / more)))))))))))
(n / newspaper :arg0 (n2 / newspaper :quant 1 :location (h / here)) :time (d / day :mod (n3 / next)) :arg1-of (c / cause-01 :arg0 (a / act-01 :arg0 (n4 / newspaper) :arg1 (e / event :mod (e2 / event :time (e3 / ever))))))
(h / have-03 :arg0 (p / person :quant 2) :arg1 (d / differ-01 :arg1-of (m / major-02)) :mod (s / still) :concession (d2 / display-01 :arg0 (p2 / public) :arg1 (r / reconciliation)))
(j / jockey :arg0 (j2 / jockey :ord (o / ordinal-entity :value 6)) :arg1 (r / reach-01 :arg1 (l / landmark) :location (f / flat)) :ord (o2 / ordinal-entity :value 6))
(a / adopt-01 :arg0 (g / girl :arg1-of (a2 / adopt-01 :arg0 (p / person :arg0-of (h / have-rel-role-91 :arg1 (g2 / girl) :arg2 (m / mother))))) :arg1 (g3 / girl :arg0-of (h2 / have-rel-role-91 :arg1 (g4 / girl) :arg2 (m2 / mother))) :prep-as (a3 / and :op1 (p2 / person :arg0-of (h3 / have-rel-role-91 :arg1 (g5 / girl) :arg2 (m3 / mother))) :op2 (p3 / person :arg0-of (h4 / have-rel-role-91 :arg1 (g6 / girl) :arg2 (m4 / mother)))) :arg1-of (d / discover-01 :arg0 (p4 / person :arg0-of (h5 / have-rel-role-91 :arg1 (p5 / person :name (n / name :op1 "aimee" :op2 "boorman") :arg0-of (h6 / have-rel-role-91 :arg1 (p6 / person) :arg2 (m5 / mother))) :arg2 (m6 / mother))) :time (f / field :mod (f2 / field) :location-of (b / become-01 :arg1 (p7 / person) :arg2 (f3 / force-04)))))
(g / give-01 :arg1 (d / drug) :arg2 (t / temporal-quantity :quant (N / N-A) :unit (m / month)) :time (a / already) :time (a2 / after :op1 (a3 / attack-01 :mod (h / heart))) :arg0-of (r / reduce-01 :arg1 (r2 / risk-01 :arg2 (o / or :op1 (s / stroke) :op2 (a4 / attack-01 :mod (a5 / another))))))
(o / order-01 :arg0 (s / street :name (n / name :op1 (d / down) :op2 (s2 / street) :op3 (s3 / street))) :arg2 (s4 / street) :time (w / wake-up-02 :arg1 (p / person :arg0-of (v / vote-01 :location (e / east :part-of (c / city-district :name (n2 / name :op1 "N-A") :location (e2 / east)))))))
(a / add-01 :arg0 (p / person :name (n / name :op1 "davidson")) :arg1 (t / try-01 :arg0 (p2 / person :arg2-of (s / staff-01)) :arg1 (r / remove-01 :arg0 (p3 / person) :arg1 (p4 / person :arg0-of (s2 / sell-01 :arg1 (s3 / sell-01))) :arg2 (s4 / sell-01) :time (a2 / after :op1 (l / leave-11 :arg0 (p5 / person) :mod (a3 / as-well) :mod (a4 / as-well)))) :manner (a5 / apparent)))
(a / and :op1 (c / called :arg0 (g / group :name (n / name :op1 (a2 / akropolis)) :arg1-of (c2 / charge-05 :arg2 (c3 / center :mod (e / entertainment))) :arg1-of (c4 / charge-05 :arg2 (c5 / center :mod (e2 / entertainment) :quant (s / several))) :arg1-of (c6 / charge-05 :arg2 (c7 / center :mod (e3 / entertainment) :quant (s2 / several)))) :arg1 (g2 / group :mod (a3 / akropolis))) :op2 (m / merged :arg0 (g3 / group) :arg1 (a4 / and :op1 (p / person :arg0-of (p2 / partner-01 :arg1 (c8 / country :name (n2 / name :op1 "N-A")))) :op2 (p3 / person :arg1-of (e4 / employ-01 :arg0 (a5 / and :op1 (p4 / person :arg0-of (p5 / partner-01 :arg1 (c9 / country :name (n3 / name :op1 "N-A")))) :op2 (p6 / person :arg1-of (e5 / employ-01 :polarity -))))))))
(a / and :op1 (o / obligate-01 :arg2 (l / look-01 :arg0 (i / idea :mod (t / this)) :arg1 (c / change-01 :arg1 (f / future :poss (m / military :name (n / name :op1 "N-A")))))) :op2 (d / depend-01 :arg0 (o2 / or :op1 (g / good) :op2 (b / bad-07)) :arg1 (p / person :arg1-of (i2 / involve-01))) :li 1)
(l / leave-17 :arg1 (b / bag :prep-with (a / and :op1 (d / document) :op2 (p / phone :arg1-of (m / mobile-02)))) :mod (a2 / also) :location (s / strollers))
(i / identify-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (p2 / police) :arg2 (o / officer))) :arg1 (l / location :arg2-of (b / be-located-at-91 :arg1 (p3 / person :arg0-of (h2 / have-rel-role-91 :arg1 (c / child) :arg2 (c2 / child))) :arg1-of (p4 / possible-01))) :duration (l2 / less-than :op1 (t / temporal-quantity :quant (1 / 1/2) :unit (h3 / hour))))
(a / and :op1 (c / criticize-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg2 (p2 / pone))) :arg1 (p3 / person :arg0-of (h2 / have-org-role-91 :arg2 (j / jakubovskis))) :mod (a2 / also)) :op2 (s / state-01 :arg0 (p4 / person) :arg1 (a3 / and :op1 (a4 / address-02 :arg0 (h3 / he) :arg1 (- / -rrb- :name (n / name :op1 (i / iwsf) :op2 (i2 / iwsf) :op3 (i3 / iwsf) :op4 (i4 / iwsf) :op5 (-2 / -rrb-) :op6 (-3 / -rrb-) :op7 (-4 / -rrb-)) :mod (i5 / international))) :op2 (c2 / call-01 :polarity - :arg0 (h4 / he) :arg1 (p5 / person :arg0-of (h5 / have-org-role-91 :arg1 (c3 / criminal-organization :name (n2 / name :op1 "N-A")))) :arg2 (s2 / send-01 :polarity - :arg0 (p6 / person) :arg1 (a5 / athletes :mod (a6 / any))))) :time (b / before :op1 (i6 / include-91 :arg1 (p7 / person) :arg2 (p8 / person :arg0-of (p9 / participate-01) :arg1-of (a7 / approve-01))))) :mod (a8 / also))
(a / and :op1 (p / possible-01 :polarity - :arg1 (c / comment-01 :arg0 (i / i) :arg3 (t / thing :arg0-of (c2 / cause-01 :arg1 (a2 / arrive-01 :arg1 (h / he) :arg4 (a3 / accreditation :mod (o / olympic)) :prep-with (a4 / accreditation :mod (c3 / coach))))))) :op2 (m / mean-02 :arg1 (j / jakubovskis) :arg2 (j2 / jakubovskis)))
(g / game :mod (o / olympic) :ord (o2 / ordinal-entity :value 1 :range (c / career :poss (a / aircraft :arg0-of (f / fight-01) :poss (w / we)))) :domain (i / it))
(c / contrast-01 :arg1 (c2 / confirm-01 :arg1 (p / participate-01 :arg0 (p2 / person) :arg1 (d / day :mod (o / only) :time-of (s / stage-01 :arg1 (c3 / composition :poss (t / team :mod (l / latvian)))))) :manner (o2 / official)) :arg2 (t2 / tell-01 :arg0 (h / he) :arg1 (s2 / sure-02 :arg1 (g / go-02 :arg0 (h2 / he) :arg4 (o3 / olympics) :time (s3 / since :op1 (d2 / date-entity :decade (N / N-A))))) :arg2 (h3 / he) :time (l2 / late :degree (m / more))))
(g / grant-01 :arg1 (s / set :quant 24 :consist-of (d / drone)) :arg2 (e / event :time (t / today)) :time (e2 / event :mod (o / olympic) :time (t2 / today)) :arg1-of (m / mean-01 :arg2 (a / and :op1 (a2 / and :op1 (t3 / track) :op2 (t4 / track) :op3 (f / field) :op4 (c / cycling :mod (t5 / track)) :op5 (d2 / diving :mod (e3 / equestrian)) :op6 (d3 / diving :mod (f2 / fencing)) :op7 (d4 / diving :arg0 (s2 / set)) :op8 (s3 / swim-01 :arg0 (s4 / set)) :op8 (s5 / swim-01 :arg0 (s6 / set)) :op8 (w / weightlifting :arg1 (a3 / and)) :op8 (w2 / weightlifting :arg1 (a4 / and)) :op8 (w3 / weightlifting :arg0 (s7 / set)) :op8 (w4 / weightlifting :arg0 (s8 / set)) :op8 (w5 / weightlifting :arg1 (a5 / and)) :op8 (w6 / weightlifting :arg1 (s9 / set)) :op8 (w7 / weightlifting :arg1 (s10 / set)) :op8 (w8 / weightlifting :arg1 (s11 / set)) :op8 (w9 / weightlifting :arg1 (s12 / set))))))
(a / and :op1 (a2 / arrive-01 :arg1 (p / person :arg0-of (b / buy-01) :mod (p2 / potential)) :arg4 (t / time :arg1-of (a3 / agree-01)) :time (t2 / time :arg1-of (a4 / agree-01))) :op2 (s / sit-01 :arg1 (p3 / person) :arg2 (a5 / away) :time (t3 / then)))
(f / find-01 :arg0 (a / and :op1 (p / person :arg0-of (h / have-org-role-91 :arg2 (s / stanning :mod (h2 / helen)))) :op2 (p2 / person :arg0-of (h3 / have-org-role-91 :arg2 (s2 / stanning))) :op3 (p3 / person :arg0-of (h4 / have-org-role-91 :arg2 (s3 / stanning))) :op4 (p4 / person :arg0-of (h5 / have-org-role-91 :arg2 (s4 / stanning))) :op5 (p5 / person :arg0-of (h6 / have-org-role-91 :arg2 (s5 / stanning))) :op6 (p6 / person :arg0-of (h7 / have-org-role-91 :arg2 (s6 / stanning))) :op6 (p7 / person :arg0-of (h8 / have-org-role-91 :arg2 (s7 / stanning))) :op6 (p8 / person :arg0-of (h9 / have-org-role-91 :arg2 (s8 / stanning))) :op6 (p9 / person :arg0-of (h10 / have-org-role-91 :arg2 (s9 / stanning))) :op6 (p10 / person :arg0-of (h11 / have-org-role-91 :arg2 (s10 / stanning))) :op6 (p11 / person :arg0-of (h12 / have-org-role-91 :arg2 (s11 / stanning))) :op6 (p12 / person :arg0-of (h13 / have-org-role-91 :arg2 (s12 / stanning))) :op7 (p13 / person :arg0-of (h14 / have-org-role-91 :arg2 (s13 / stanning))) :op6 (p14 / person :arg0-of (h15 / have-org-role-91 :arg2 (s14 / stanning))) :op6 (p15 / person :arg0-of (h16 / have-org-role-91 :arg2 (s15 / stanning))) :op6 (p16 / person :arg0-of (h17 / have-org-role-91 :arg2 (s16 / stanning))) :op6 (p17 / person :arg0-of (h18 / have-org-role-91 :arg2 (s17 / stanning))) :op7 (p18 / person :arg0-of (h19 / have-org-role-91 :arg2 (s18 / stanning)))) :arg1 (t / thing :arg2-of (m / mean-01)))
(m / multi-sentence :snt1 (h / have-concession-91 :arg1 (a / and :op1 (p / pull-01 :arg0 (t / they) :arg1 (b / boat :quant 2) :arg2 (b2 / boat :mod (t2 / that))) :op2 (p2 / present :arg0 (e / echo :mod (c / coach) :mod (c2 / coach)) :arg1 (g / gold :mod (c3 / coach) :ord (o / ordinal-entity :value 2)) :time (e2 / ever) :arg1-of (c4 / cause-01 :arg0 (p3 / power-01 :arg0 (t3 / they) :arg1 (g2 / gold :ord (o2 / ordinal-entity :value 2) :ord (o3 / ordinal-entity :value 2) :ord (o4 / ordinal-entity :value 2) :poss (w / woman))))))) :snt2 (s / sport :( (a2 / annals) :poss (s2 / sport :poss (c5 / country))))
(p / publish-01 :arg0 (c / commission :mod (c2 / continent :name (n / name :op1 "N-A"))) :arg1 (a / assess-01 :arg0 (c3 / commission) :arg1 (a2 / assess-01 :arg0 (c4 / commission) :arg1 (a3 / amount :arg1-of (s / suffice-01 :arg0 (m / measure-02 :arg1 (r / reduce-01 :arg1 (d / deficit :mod (b / budget) :poss (a4 / and)) :arg2 (p2 / product-of :op1 (p3 / percentage-entity :value (N / N-A)) :op2 (p4 / product :arg1-of (g / gross-03) :mod (d2 / domestic) :arg1-of (g2 / gross-03) :mod (d3 / domestic))))))))) :time (b2 / before :op1 (n2 / now) :quant (t / temporal-quantity :quant (N2 / N-A) :unit (m2 / month))) :location (j / july :op1 (v / value-interval :op1 12 :op2 3)))
(m / multi-sentence :snt1 (c / cause-01 :arg0 (s / source-02 :arg1 (p / pollution) :mod (m2 / main)) :arg1 (v / visit-01 :arg0 (p2 / person :arg0-of (v2 / visit-01) :mod (b / beach)) :arg1 (a / and :op1 (i / item :mod (p3 / plastic)) :op2 (b2 / bag :mod (p4 / plastic) :mod (v3 / various)))) :arg1-of (c2 / cause-01 :arg0 (a2 / and :op1 (i2 / item :mod (p5 / plastic) :arg1-of (i3 / include-91 :arg2 (a3 / amount :mod (p6 / plastic)) :arg3 (h / half))) :op2 (a4 / and :op1 (i4 / item :mod (p7 / plastic)) :op2 (b3 / bag :mod (p8 / plastic) :mod (v4 / various) :mod (o / other)))))) :snt2 (e / explain-01 :arg0 (a5 / and :op1 (p9 / person :arg0-of (h2 / have-org-role-91 :arg2 (h3 / head-of-state))) :op2 (e2 / et-cetera) :op3 (e3 / et-cetera) :op3 (e4 / et-cetera))))
(a / and :op1 (' / '' :arg1 (n / number :arg1-of (a2 / average-04) :quant-of (a3 / and :op1 (n2 / number :name (n3 / name :op1 (- / -lrb-) :op2 (-2 / -lrb-) :op3 (-3 / -rrb-))) :op2 (-4 / -rrb- :name (n4 / name :op1 (v / vakarbulli))) :op3 (-5 / -rrb- :mod (v2 / vecaki)))) :arg2-of (f / fortunate-01 :polarity -)) :op2 (h / have-purpose-91 :arg1 (-7 / -rrb-) :arg2 (a4 / and :op1 (h2 / huge :mod (h3 / huge)) :op2 (g / goal :mod (h4 / huge)) :op3 (g2 / goal :mod (v3 / vecaki))) :arg2-of (f2 / fortunate-01 :polarity -)) :purpose (r / reduce-01 :arg0 (a5 / and) :arg1 (g3 / garbage :arg1 (p / product :name (n5 / name :op1 "N-A")) :arg2 (u / unit :quant (A / A-135) :arg0-of (h5 / have-org-role-91 :arg1 (e / environment) :arg2 (a6 / activist))))))
(a / and :op1 (r / remain-01 :arg1 (q / quality :mod (w / water) :location (p / place :quant (a2 / all) :mod (a3 / all))) :arg3 (g / good) :time (c / current)) :op2 (r2 / restrict-01 :polarity - :arg1 (t / thing :arg1-of (r3 / restrict-01))))
(o / organize-01 :arg0 (c / collectives :quant 2015 :mod (a / art) :poss (c2 / culture :name (n / name :op1 (v / vef)))) :arg1 (c3 / concert :mod (f / farewell)) :time (b / before :op1 (n2 / now) :quant (m / more-than :op1 (t / temporal-quantity :quant (N / N-A) :unit (y / year)))) :time (b2 / before :op1 (n3 / now) :quant (m2 / more-than :op1 (t2 / temporal-quantity :quant (N2 / N-A) :unit (y2 / year)))) :time (b3 / before :op1 (n4 / now) :quant (m3 / more-than :op1 (t3 / temporal-quantity :quant (N3 / N-A) :unit (y3 / year)))) :arg0-of (c4 / cause-01 :arg1 (s / start-01 :arg1 (c5 / concert :arg1 (b4 / building)) :time (s2 / soon :degree (v2 / very)))))
(r / run-04 :arg1 (i / it) :arg3 (r2 / rate-entity-91 :arg1 19 :arg2 (t / temporal-quantity :quant (N / N-A) :unit (y / year))) :time (u / until :op1 (s / score-01 :arg1 (i2 / it) :arg2 (s2 / score-entity :op1 19 :op2 30))))
(a / and :op1 (s / stop-01 :arg1 (t / transport-01 :arg1-of (p / public-02))) :op2 (s2 / square :arg1 (s3 / square :purpose (t2 / transport-01 :arg1-of (p2 / public-02))) :purpose (m / make-01 :arg1 (- / -rrb- :mod (t3 / turns)))))
(c / contain-01 :arg0 (a / and :op1 (p / person :arg0-of (h / have-org-role-91 :arg2 (s / scientist :mod (c2 / canadian)))) :op2 (p2 / person :arg0-of (h2 / have-org-role-91 :arg2 (s2 / scientist))) :op3 (p3 / person :arg0-of (r / responsible-01 :arg1 (a2 / and :op1 (a3 / appetite) :op2 (a4 / amount :quant-of (f / food :arg1-of (e / eat-01 :arg0 (w / we)))))) :mod (c3 / company :name (n / name :op1 "N-A"))) :quant (s3 / some)) :arg1 (f2 / fiber :mod (d / dietary)))
(f / find-01 :arg0 (p / person :arg1-of (f2 / find-01 :location (s / saliva)) :arg1-of (f3 / find-01 :location (s2 / saliva))) :arg1 (e / environment :mod (o / only) :mod (o2 / only)))
(c / contrast-01 :arg1 (a / apply-02 :arg1 (t / thing :arg1-of (s / same-01 :arg2 (f / food :mod (r / raw)))) :arg2 (d / diet :mod (r2 / raw)) :mod (a2 / also)) :arg2 (r3 / recommend-01 :polarity - :arg1 (c2 / combined :arg0 (i / it) :arg1 (q / quantities :quant (q2 / quantity :mod (l / large)) :arg0-of (c3 / contain-01 :arg1 (-2 / -rrb- :mod (p / protein))) :arg0-of (c4 / contain-01 :arg1 (-3 / -rrb- :mod (f2 / fats)))))))
(a / and :op2 (s / stipulate-01 :arg0 (a2 / and :op1 (p / process-01 :arg1 (m / meat)) :op2 (p2 / process-01 :arg1 (m2 / meat))) :arg1 (w / wave-04 :arg1 (a3 / and :op1 (m3 / meat) :op2 (e / egg))) :location (f / food :mod (t / this))))
(l / lenses :arg1 (s / skill :mod (f / feature-warping) :arg0-of (g / generate-01 :arg1 (d / day :quant (m / more-than :op1 30000000) :arg1-of (e / enhance-01)))) :manner (b / blunt-02))
(s / say-01 :arg0 (s2 / she) :arg1 (b / believe-01 :arg0 (s3 / she) :arg1 (a / and :op1 (l / lack-01 :arg0 (c / controversies :name (n / name :op1 (r / race-related))) :arg1 (d / diversity) :purpose (h / hire-01 :arg1 (d2 / diversity))) :op2 (l2 / lack-01 :arg0 (c2 / controversies) :arg1 (p / practice-01 :arg1 (d3 / diversity))))) :medium (i / interview-01 :arg1 (s4 / she) :mod (t / telephone)))
(s / say-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (m / military :mod (m2 / military)) :arg2 (o / official))) :arg1 (s2 / say-01 :arg0 (p2 / person :arg0-of (h2 / have-org-role-91 :arg1 (m3 / military) :arg2 (o2 / official))) :arg1 (i / intelligence :mod (i2 / isis))))
(h / headquarter-01 :arg1 (m / military :mod (c / country :name (n / name :op1 "N-A"))) :location (a / across :op1 (a2 / and :op1 (c2 / country :name (n2 / name :op1 "N-A")) :op2 (c3 / company :name (n3 / name :op1 "N-A") :mod (c4 / central)))) :arg0-of (o / oversee-01 :arg1 (o2 / operation :mod (m2 / military) :mod (c5 / country) :location (a3 / across :op1 (w / world-region)))))
(r / report-01 :arg0 (p / person :arg0-of (a / analyze-01) :mod (c / centcom)) :arg1 (e / exist-01 :arg1 (e2 / exist-01 :arg1 (i / investigate-01 :arg1-of (g / general-02) :arg0-of (i2 / inspect-01 :arg1-of (g2 / general-02)))) :time (a2 / after :op1 (c2 / complain-01 :arg0 (p2 / person :arg0-of (a3 / analyze-01) :mod (c3 / centcom))))) :mod (l / last))
(h / have-to-do-with-04 :arg0 (b / butter :mod (p / peanuts)) :arg1 (o / onion :mod (b2 / baked)) :arg2 (n / nothing))
(t / try-01 :arg0 (p / person :mod (c / country :name (n / name :op1 "Israel"))) :arg1 (f / find-01 :arg0 (p2 / person) :arg1 (t2 / thing :arg2-of (l / list-01 :arg1 (m / morality :arg1-of (p3 / provide-01 :arg0 (h / hotel)))))) :time (s / stay-01 :arg1 (p4 / person) :time (r / recent)))
(a / and :op1 (s / shame-01 :arg0 (t / thing :arg1-of (p / post-01 :arg2 (y / you)) :mod (a2 / another)) :arg1 (y2 / you)) :op2 (p2 / point-out-02 :arg0 (i / i) :arg1 (s2 / stand-01 :arg1 (h / hotel) :arg2 (s3 / street :location (s4 / street :arg1-of (f / fake-02)) :arg1-of (n / near-02 :arg2 (d / desert))))))
(d / do-02 :arg0 (t / they) :arg1 (s / so) :mod (j / just) :time (e / emerge-02 :arg0 (t2 / they)))
(a / and :op1 (k / kenny :arg1 (c / competes :mod (n / next)) :location (s / sprint :mod (n2 / next)) :time (t / today)) :op2 (p / play :arg1 (k2 / kenny) :time (o / over :op1 (t2 / temporal-quantity :quant (N / N-A) :unit (d / day)))))
(s / say-01 :arg0 (a / address-02 :arg1 (a2 / address-02 :arg1 (p / person :arg0-of (a3 / analyze-01)) :time (e / early :degree (m / more) :time (w / week :mod (e2 / early :degree (m2 / more)))))) :arg1 (a4 / and :op1 (u / use-01 :arg0 (p2 / person :arg0-of (a5 / analyze-01)) :arg1 (a6 / around :op1 (m3 / mass-quantity :quant (N / N-A) :unit (k / kilogram))) :arg2 (p3 / person :quant (a7 / around :op1 600) :arg0-of (p4 / power-01))) :op2 (t / tomago :arg0 (p5 / person) :arg1 (p6 / person :quant (a8 / around :op1 900)))))
(c / cause-01 :arg0 (a / and :op1 (c2 / call-01 :arg0 (w / we) :arg1 (a2 / and :op1 (p / person :arg0-of (h / have-org-role-91 :arg2 (h2 / head-of-state))) :op2 (p2 / person :arg0-of (h3 / have-org-role-91 :arg2 (s / senator))) :op3 (p3 / person :arg0-of (h4 / have-org-role-91 :arg2 (s2 / senator))) :op4 (p4 / person :arg0-of (h5 / have-org-role-91 :arg2 (s3 / senator))) :op5 (p5 / person :arg0-of (h6 / have-org-role-91 :arg2 (s4 / senator)))) :arg2 (r / reverse-01 :arg1 (f / fund-01) :mod (t / this)) :time (i / immediate))) :arg1 (p6 / possible-01 :arg1 (g / get-01 :arg0 (p7 / person) :arg1 (h7 / help-01) :time (f2 / face-01 :arg0 (p8 / person) :arg1 (p9 / problem :arg1-of (l / legal-02))))))
(s / say-01 :arg1 (o / obligate-01 :arg2 (d / determine-01 :arg0 (p / person :arg0-of (p2 / prosecute-01)) :arg1 (t / thing :arg1-of (s2 / say-01 :arg0 (p3 / person))))) :arg2 (p4 / person :name (n / name :op1 "N-A")))
(r / recommend-01 :arg1 (c / call-01 :arg0 (a / anyone :arg0-of (h / have-03 :arg1 (i / information :topic (i2 / incident :arg1-of (n / near-02 :arg2 (m / morges)))))) :arg1 (p / police) :arg2 (o / or :op1 (p2 / person :quant 021) :op2 (p3 / person :quant 021))))
(i / inform-01 :arg0 (a / agency :mod (n / news) :mod (n2 / news)) :arg1 (s / submit-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (s2 / service :mod (e / environment) :mod (s3 / state)) :arg2 (k / kolegova))) :arg1 (c / candidacy :poss (p2 / person)) :arg2 (p3 / position-01 :arg1 (p4 / person) :arg2 (p5 / position-01 :arg1 (p6 / person) :arg2 (d / director :arg2-of (h2 / have-org-role-91 :arg2 (d2 / director)))))) :time (a2 / already))
(a / and :op1 (c / continue-01 :arg0 (t / thing :arg2-of (p / price-01 :arg1 (o / oil))) :arg1 (g / grow-01 :arg1 (t2 / thing :arg2-of (p2 / price-01 :arg1 (o2 / oil))) :mod (g2 / globe)) :time (m / morning :mod (f / friday))) :op2 (e / expect-01 :arg1 (a2 / act-02 :arg0 (c2 / country :arg0-of (m2 / mine-01) :mod (o3 / oil) :mod (l / large :degree (m3 / most))) :time (m4 / meet-03 :mod (n / next) :purpose (c3 / contain-00 :arg0 (c4 / country) :arg1 (m5 / market :mod (o4 / oil) :mod (g3 / globe)))))))
(i / infer-01 :arg1 (o / obligate-01 :arg2 (c / care-04 :arg0 (p / person :arg0-of (d / drive-01)) :mod (p2 / particular)) :arg1-of (c2 / cause-01 :arg0 (m / move-01 :arg1 (r / road :mod (y / yuhua) :mod (v / various) :location (a / along :op1 (r2 / road :mod (y2 / yuhua) :mod (v2 / various))))))))
(t / tell-01 :arg0 (g / girl) :arg1 (e / event) :arg2 (p / person :arg0-of (h / have-rel-role-91 :arg1 (g2 / girl) :arg2 (p2 / parent))))
(c / contrast-01 :arg1 (d / decide-01 :arg0 (p / person :arg1-of (e / expert-01)) :arg1 (t / thing :arg1-of (o / opine-01 :arg0 (h / he)))) :arg2 (d2 / decide-01 :arg0 (b / board :mod (c2 / construct-01)) :arg1 (p2 / possible-01 :polarity - :arg1 (u / use-01 :arg1 (t2 / thing :mod (b2 / both)) :arg2 (l / location :location-of (a / and :op1 (p3 / place-01 :arg1 (c3 / construct-01 :arg1 (c4 / construct-01))) :op2 (d3 / dmitrijs :arg1 (t3 / thing))))))))
(a / and :op1 (i / involve-01 :arg0 (s / stage :ord (o / ordinal-entity :value 2)) :arg1 (c / clinics :mod (w / wellness)) :arg1-of (i2 / intend-01) :arg1-of (i3 / intend-01)) :op2 (s2 / schedule-01 :arg1 (o2 / open-01 :arg1 (o3 / open-01 :arg1 (h / hotel))) :arg3 2018))
(a / admit-01 :arg0 (p / person :name (n / name :op1 "N-A") :arg0-of (h / have-org-role-91 :arg2 (m / mccartney))) :arg1 (f / feel-01 :arg0 (p2 / person :mod (e / ethnic-group :name (n2 / name :op1 "N-A"))) :arg1 (f2 / feel-01 :arg0 (p3 / person) :arg1 (j / jeopardized))))
(l / likens :arg1 (s / star :arg0-of (l2 / likens :arg1 (o / one :mod (l3 / large :degree (m / more) :compared-to (o2 / one :mod (s2 / small :degree (m2 / more))))))) :arg2 (r / rebull))
(a / and :op1 (r / rebull :arg0 (a2 / and :op1 (p / person :arg0-of (h / have-org-role-91 :arg2 (h2 / head-of-state))) :op2 (p2 / person :arg0-of (h3 / have-org-role-91 :arg1 (s / she) :arg3 (d / detail-01)))) :arg1 (a3 / analyze-01 :arg0 (p3 / person) :arg1 (r2 / rate :name (n / name :op1 (t / the) :op2 (t2 / the))) :time (l / late :degree (m / most))) :location (p4 / paper :quant 3 :mod (n2 / new))) :op2 (p5 / publish-01 :arg1 (a4 / and) :location (j / journal :mod (a5 / astronomical)) :time (s2 / soon)))
(a / avoid-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (p2 / person :arg0-of (h2 / have-org-role-91 :arg2 (p3 / president))) :arg2 (p4 / president))) :arg1 (a2 / answer-01 :arg0 (p5 / person) :arg1 (d / differ-01 :arg0 (p6 / person))) :time (m / mr :arg0 (p7 / person) :arg1 (c / choose-01 :arg0 (p8 / person) :arg1 (u / underlined :arg0 (p9 / person) :arg1 (p10 / person)))) :manner (d2 / deliberate))
(u / up :arg0 (p / person :name (n / name :op1 "dettori")) :time (a / after :op1 (w / win-01 :arg0 (p2 / person) :time (a2 / after :op1 (w2 / win-01)))))
(o / obligate-01 :arg1 (w / we) :arg2 (c / close-10 :arg1 (w2 / we) :arg2 (g / gap :arg1-of (r / remain-01) :location (o2 / or :op1 (n / north) :op2 (s / side :mod (l / landward))))) :time (t / then) :time (a / after :op1 (a2 / and :op1 (o3 / overthrow-01 :arg0 (w3 / we) :arg1 (s2 / section :name (n2 / name :op1 (d / decker)) :mod (l2 / last))) :op2 (c2 / connect-01 :arg0 (w4 / we) :arg1 (s3 / section) :arg2 (e / expand-01 :arg1 (r2 / road) :location (n3 / north))))))
(c / called :arg0 (t / team :consist-of (p / person :arg0-of (h / have-org-role-91 :arg1 (t2 / team :name (n / name :op1 (' / ''))) :arg2 (c2 / captain)))) :arg1 ('2 / '' :mod (g / grandma)) :degree (w / well) :time (t3 / time :mod (t4 / this)))
(i / include-91 :arg1 (p / person :arg0-of (s / shoot-02 :location (s2 / section :mod (g / germantown)))) :arg2 (p2 / person :quant 4))
(f / find-02 :arg1 (s / shoot-02 :arg1 (c / child) :location (s2 / seat :mod (f2 / front) :part-of (c2 / car :arg1-of (2 / 29-year-old :arg2 (a / and :op1 (c3 / condition :arg1-of (c4 / critical-02)) :op2 (r / report-01 :arg0 (s3 / station))))))))
(a / and :op1 (s / surprise-01 :arg0 (o / olympics :mod (l / last)) :arg1 (c / champion :mod (o2 / olympic))) :op2 (a2 / america :arg1 (d / douglas)))
(p / pleased :arg1 (w / we) :arg2 (p2 / possible-01 :arg1 (i / increase-01 :arg0 (w2 / we) :arg1 (o / option :mod (t / treat-03) :arg2-of (a / available-02 :arg1 (p3 / person :arg0-of (s / stand-01 :arg1 (p4 / person) :arg2 (b / benefit-01 :arg0 (i2 / it) :arg1 (p5 / person))) :quant (m / many)))))) :time (d / date-entity :year (N / N-A)))
(a / and :op1 (l / lambasts :arg0 (p / person :arg0-of (h / have-org-role-91 :arg2 (m / minister :mod (e / ex-cabinet)))) :arg1 (a2 / and :op1 (p2 / police) :op2 (p3 / person :arg0-of (e2 / elect-01)) :op3 (p4 / person :arg0-of (h2 / have-org-role-91 :arg2 (h3 / head-of-state))) :op4 (p5 / person :arg0-of (h4 / have-org-role-91 :arg2 (h5 / head-of-state))) :op5 (p6 / person :arg0-of (h6 / have-org-role-91 :arg2 (h7 / head-of-state)))) :purpose (i / ignore-01 :arg0 (p7 / person) :arg1 (t / thing :arg0-of (e3 / evidence-01 :arg1 (a3 / abuse-01 :arg1 (e4 / elect-01)))))) :op2 (b / because :arg0 (p8 / person) :arg1 (t2 / thing :arg0-of (e5 / evidence-01 :arg1 (a4 / abuse-01 :arg1 (e6 / elect-01))))))
(s / say-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (c / community) :arg2 (s2 / secretary :mod (c2 / community)) :time (f / former))) :arg1 (b / bad-07 :arg1 (p2 / person :arg0-of (v / vote-01 :arg1 (g / ground :mod (r / religious)))) :degree (s3 / so) :arg0-of (c3 / cause-01 :arg1 (r2 / recommend-01 :arg1 (a / allow-01 :arg1 (p3 / put-01 :arg1 (p4 / police) :arg2 (o / outside :op1 (s4 / station :mod (p5 / polling)) :purpose (p6 / protect-01 :arg0 (p7 / police) :arg1 (p8 / person :arg0-of (v2 / vote-01) :mod (f2 / frightened))))))))) :time (n / now))
(f / find-02 :arg1 (g / guilty-01 :arg1 (h / he)) :arg1-of (c / cause-01 :arg0 (d / doubt-01 :arg1 (s / standard :mod (c2 / criminal-03) :consist-of (t / thing :arg0-of (p / prove-01)) :mod (g2 / ground :quant (s2 / series))))))
(a / and :op1 (r / regret-01 :arg0 (w / we) :arg1 (m / make-01 :arg1 (t / thing :arg1-of (s / state-01) :mod (t2 / this))) :manner (f / frank)) :op2 (a2 / allow-01 :arg1 (g / go-02 :arg0 (t3 / they) :arg4 (a3 / air))))
(a / and :op1 (s / say-01 :arg0 (t / that) :arg1 (a2 / and :op1 (i / inappropriate :arg1 (t2 / they)) :op2 (f / fortunate-01 :polarity - :arg1 (t3 / they) :arg2 (c / choose-01 :arg1 (w / word)) :arg2-of (f2 / fortunate-01)))) :op2 (s2 / sorry-01 :arg1 (t4 / they) :arg2 (t5 / thing :arg1-of (s3 / say-01 :arg0 (h / he))) :degree (v / very)))
(p / purchase-01 :arg0 (c / company) :arg1 (e / equipment :mod (s / sawing) :mod (p2 / plank)) :arg3 (m / monetary-quantity :quant 89.5 :unit (e2 / euro)))
(c / cause-01 :arg0 (h / have-03 :arg0 (w / we) :arg1 (w2 / way :mod (o / other) :instrument-of (d / deal-01 :arg0 (w3 / we) :arg2 (e / emotions :mod (t / this))))) :arg1 (k / know-01 :arg0 (w4 / we) :arg1 (t2 / thing :manner-of (s / subsidize-01 :polarity - :arg1 (a / aggression :poss (w5 / we)) :beneficiary (o2 / other)))))
(p / possible-01 :arg1 (e / expect-01 :arg0 (p2 / person :quant 1) :arg1 (a / and :op1 (r / rain-01 :arg0-of (i / intermittent)) :op2 (d / drop-01 :arg1 (t / temperature))) :manner (a2 / approximately :quant (a3 / approximately :op1 1)) :arg1-of (l / learn-01 :arg2 (a4 / and :op1 (e2 / environment) :op2 (c / center :mod (m / meteorology)) :op3 (c2 / center :mod (m2 / meteorology) :mod (m3 / meteorology))))) :location (o / on :op1 (r2 / river :name (n / name :op1 "N-A"))))
(a / and :op1 (c / complete-01 :arg1 (b / building :arg1-of (c2 / co-financed :arg0 (f / fund-01 :arg1 (c3 / cohesion))))) :op2 (p / put-03 :arg1 (b2 / building) :arg2 (o / operation) :time (e / end-01 :arg1 (y / year :mod (l / last)))) :arg0-of (c4 / cause-01 :arg1 (s / save-02 :arg0 (b3 / building) :arg1 (m / monetary-quantity :quant 10.6 :unit (e2 / euro)) :arg2 (f2 / fund-01 :arg1 (a2 / allocate-01)))))
FAILED_TO_PARSE#Two concepts in a row.
(s / say-01 :arg0 (i / information :arg1-of (p / possess :arg0 (a / and :op1 (p2 / person :arg0-of (h / have-org-role-91 :arg2 (p3 / president :mod (v / vice)))) :op2 (p4 / person :arg0-of (h2 / have-org-role-91 :arg2 (p5 / president :mod (v2 / vice))))))) :arg1 (t / tell-01 :arg0 (p6 / person :arg0-of (h3 / have-org-role-91 :arg2 (p7 / president))) :arg1 (a2 / aim-02 :arg1 (p8 / person) :arg2 (p9 / put-03 :arg1 (p10 / person) :arg2 (p11 / put-03 :arg1 (p12 / person) :arg2 (m / mood :mod (r / right)) :time (b / before :op1 (s2 / start-01)))) :mod (r2 / routine)) :time (b2 / before :op1 (s3 / start-01 :arg0 (p13 / person) :arg1 (a3 / and :op1 (s4 / speak-01 :arg0 (p14 / person) :arg1 (t2 / tête-à-tête :arg0 (p15 / person) :arg1 (e / eye :part-of (p16 / person)))) :op2 (a4 / afterwards :arg0 (p17 / person) :arg1 (e2 / eye :part-of (p18 / person)))))) :time (b3 / before :op1 (s5 / start-01 :arg0 (p19 / person) :arg1 (s6 / spoke :arg0 (p20 / person) :arg1 (e3 / eye :part-of (p21 / person)))))))
(r / reveal-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (c / criminal-organization :name (n / name :op1 "N-A")) :arg2 (p2 / president))) :arg1 (a / and :op1 (e / essential :domain (i / issue-02 :arg0 (d / drowning))) :op2 (s / speak-01 :arg0 (p3 / person) :topic (p4 / program :arg1-of (r2 / relevant-01)) :mod (a2 / also) :time (a3 / after :op1 (n2 / now) :quant (a4 / almost :op1 (b / between :op1 (t / temporal-quantity :quant (N / N-A) :unit (w / week)) :op2 (t2 / temporal-quantity :quant (N2 / N-A) :unit (w2 / week))))))))
(c / contrast-01 :arg1 (t / try-01 :arg0 (p / person :mod (c2 / country :name (n / name :op1 "N-A"))) :arg1 (t2 / try-01 :arg0 (p2 / person) :arg1 (m / make-01 :arg0 (p3 / person) :arg1 (i / it)))) :arg2 (g / go-01 :arg1 (g2 / game) :direction (d / down) :location (c3 / corner :mod (l / left)) :purpose (m2 / make-01 :arg0 (p4 / person) :arg1 (i2 / it))) :arg1-of (c4 / contrast-01 :arg2 (g3 / go-01 :arg1 (g4 / game) :direction (w / way :poss (p5 / person :arg0-of (s / sing-01 :arg1 (a / and :op1 (f / flags :mod (w2 / waved)) :op2 (f2 / flags :mod (w3 / waved)) :op3 (d2 / dance :mod (w4 / waved))))))) :arg1-of (l2 / long-03)))
(w / want-01 :arg0 (i / i) :arg1 (s / say-01 :arg0 (i2 / i) :arg1 (r / race :mod (l / last) :poss (i3 / i) :domain (t / this)) :degree (t2 / total)))
(a / and :op1 (s / set-01 :arg1 (p / publication :name (n / name :op1 "N-A")) :arg2 (p2 / p.m. :quant 2 :arg1-of (i / include-91 :arg2 (p3 / p.m. :quant 4 :location (m / moderne :name (n2 / name :op1 (s2 / salle) :op2 21 :op3 21 :op4 21 :op5 (b / blvd) :op6 (b2 / blvd) :op7 (b3 / blvd))))))) :op2 (b4 / blvd :arg1 (w / wilshire :quant 3050) :time (f / former)))
(f / find-01 :arg1 (a / and :op1 (i / item :arg1-of (i2 / include-91 :arg2 (i3 / item :mod (w / waste :mod (u / ultra))))) :op2 (t / thing :arg1-of (r / remain-01 :arg3 (l / littering :arg1 (s / sand :location (b / beach)))))) :time (y / year :mod (t2 / this)))
(t / tell-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (c / country :name (n / name :op1 "N-A")) :arg2 (p2 / putin))) :arg1 (w / want-01 :arg0 (p3 / person) :arg1 (l / leave-15 :arg0 (p4 / person) :arg1 (p5 / position :poss (p6 / person)))) :arg2 (r / remain-01 :arg1 (p7 / person) :arg3 (r2 / represent-01 :arg0 (p8 / person :arg0-of (h2 / have-org-role-91 :arg2 (p9 / president)) :arg1-of (s / special-02)) :arg1 (a / and :op1 (m / matter :mod (e / environment)) :op2 (e2 / environment) :op3 (m2 / matter :mod (t2 / transport-01))) :arg1-of (s2 / special-02))) :arg2 (m3 / media :mod (c2 / country :name (n2 / name :op1 "N-A"))))
(s / satisfy-01 :arg0 (c / carrying :arg0 (y / you) :arg1 (j / job :poss (y2 / you))) :arg1 (i / i))
(b / become-01 :arg1 (p / person :name (n / name :op1 "sergey" :op2 "ivanov")) :arg2 (a / and :op1 (p2 / person :arg0-of (h / have-org-role-91 :arg2 (m / minister))) :op2 (p3 / person :arg0-of (h2 / have-org-role-91 :arg1 (p4 / person :name (n2 / name :op1 "mikhail" :op2 "fradkov") :arg0-of (h3 / have-org-role-91 :arg2 (m2 / minister :mod (p5 / prime)))) :arg2 (d / deputy))) :op3 (p6 / person :arg0-of (h4 / have-org-role-91 :arg2 (d2 / deputy))) :op4 (p7 / person :arg0-of (h5 / have-org-role-91 :arg2 (d3 / deputy))) :op5 (p8 / person :arg0-of (h6 / have-org-role-91 :arg2 (d4 / deputy)))) :purpose (r / responsible-01 :arg0 (p9 / person) :arg1 (d5 / develop-02 :arg1 (a2 / and :op1 (c / company :mod (d6 / defense) :mod (d7 / defense)) :op2 (e / export-01 :arg1 (a3 / arm))))) :mod (a4 / also))
(k / keep-02 :arg1 (t / touch-01 :arg0 (w / we) :arg1 (o / other :mod (e / each)) :time (a / after :op1 (n / now) :quant (a2 / almost :op1 (t2 / temporal-quantity :quant (N / N-A) :unit (d / day))))))
(a / and :op1 (p / porgy :arg1 (a2 / and :op1 (p2 / porgy :name (n / name :op1 (' / ''))) :op2 (r / returns :name (n2 / name :op1 (b / bess)))) :time (a3 / after :op1 (b2 / break-01 :arg1 ('2 / '') :duration (t / temporal-quantity :quant (N / N-A) :unit (y / year))))) :op2 (b3 / break-01 :arg1 (a4 / and)))
(p / part :arg1 (b / building) :degree (m / most) :arg0-of (c / cause-01 :arg1 (p2 / produce-01 :arg0 (a / and :op1 (p3 / person :arg0-of (h / have-org-role-91 :arg2 (d / director :mod (m2 / music)))) :op2 (p4 / person :arg0-of (h2 / have-org-role-91 :arg2 (d2 / director :mod (m3 / music)))) :op3 (p5 / person :arg0-of (h3 / have-org-role-91 :arg2 (d3 / director :mod (m4 / music)))) :op4 (p6 / person :arg0-of (h4 / have-org-role-91 :arg2 (d4 / director :mod (m5 / music)))) :op5 (v / version :name (n / name :op1 (c2 / concert) :op2 (c3 / concert)))) :arg1 (b2 / building))))
(s / say-01 :arg0 (b / bureau :name (n / name :op1 (s2 / statistical)) :mod (s3 / statistical)) :arg1 (t / take-01 :arg0 (a / and :op1 (p / person :arg0-of (h / have-org-role-91 :arg2 (c / capital))) :op2 (p2 / person :arg0-of (h2 / have-org-role-91 :arg2 (c2 / capital))) :op3 (p3 / person :arg0-of (h3 / have-org-role-91 :arg2 (c3 / capital)))) :arg1 (p4 / place :ord (o / ordinal-entity :value 1) :arg1-of (i / include-91 :arg2 (c4 / city :mod (c5 / continent :name (n2 / name :op1 "N-A")) :mod (l / large :degree (m / most))))) :arg3 (r / rate-entity-91 :arg1 (w / woman :quant (b2 / between :op1 127 :op2 127)) :arg2 (t2 / temporal-quantity :quant (N / N-A) :unit (y / year)))))
(a / and :op1 (p / protein :arg1 (t / time :arg1-of (s / same-01)) :time (t2 / time :arg1-of (s2 / same-01))) :op2 (h / hunger-01 :arg0 (p2 / prevents) :arg1 (f / feel-01 :arg0 (a2 / and)) :time (t3 / time :arg1-of (l / long-03 :degree (m / more)))))
(p / possible-01 :arg1 (i / increase-01 :arg0 (y / you) :arg1 (w / wave-04 :arg1 (n / non-blood-building :arg0 (p2 / product :mod (c / combine) :arg0-of (c2 / contain-01 :arg1 (s / source :mod (c3 / c) :example (a / and :op1 (o / oranges) :op2 (t / tomatoes) :op3 (b / berries))))))) :manner (s2 / slow)))
(a / add-02 :mode (i / imperative) :arg0 (y / you) :arg1 (a2 / and :op1 (b / benefit-01 :arg1 (o / oil :example (o2 / or :op1 (o3 / oil) :op2 (o4 / oil :mod (l / linseed)))) :op2 (o5 / oil :mod (l2 / linseed))) :manner (h / health)))
(a / and :op1 (c / criticize-01 :arg0 (p / person :arg0-of (l / lead-02 :arg1 (c2 / country :name (n / name :op1 "N-A")))) :arg1 (p2 / person :mod (w / white) :mod (m / most) :arg0-of (l2 / lead-02))) :op2 (e / end-01 :arg0 (p3 / person) :arg1 (e2 / essay :poss (p4 / person)) :manner (d / deletesnapchat :arg1 (p5 / person))))
(s / say-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (o / organization :name (n / name :op1 "united" :op2 "states" :op3 "central" :op4 "command")) :arg2 (o2 / official)) :arg0-of (h2 / have-org-role-91 :arg1 (o3 / organization) :arg2 (o4 / official)) :arg0-of (h3 / have-org-role-91 :arg1 (o5 / organization) :arg2 (o6 / official)) :arg0-of (h4 / have-org-role-91 :arg1 (o7 / organization) :arg2 (o8 / official)) :arg0-of (h5 / have-org-role-91 :arg1 (o9 / organization) :arg2 (o10 / official)) :arg0-of (h6 / have-org-role-91 :arg1 (o11 / organization) :arg2 (o12 / official)) :arg0-of (h7 / have-org-role-91 :arg1 (o13 / organization) :arg2 (o14 / official)) :arg0-of (h8 / have-org-role-91 :arg1 (o15 / organization) :arg2 (o16 / official)) :arg0-of (h9 / have-org-role-91 :arg1 (o17 / organization) :arg2 (o18 / official)) :arg0-of (h10 / have-org-role-91 :arg1 (o19 / organization) :arg2 (o20 / official)) :arg0-of (h11 / have-org-role-91 :arg1 (o21 / organization) :arg2 (o22 / official)) :arg0-of (h12 / have-org-role-91 :arg1 (o23 / organization) :arg2 (o24 / official)) :arg0-of (h13 / have-org-role-91 :arg1 (o25 / organization) :arg2 (o26 / official)) :arg0-of (h14 / have-org-role-91 :arg1 (o27 / organization) :arg2 (o28 / official)) :arg0-of (h15 / have-org-role-91 :arg1 (o29 / organization) :arg2 (o30 / official)) :arg0-of (h16 / have-org-role-91 :arg1 (o31 / organization) :arg2 (o32 / official)) :arg0-of (h17 / have-org-role-91 :arg1 (o33 / organization) :arg2 (o34 / official)) :arg0-of (h18 / have-org-role-91 :arg1 (o35 / organization) :arg2 (o36 / official)) :arg0-of (h19 / have-org-role-91 :arg1 (o37 / organization) :arg2 (o38 / official)) :arg0-of (h20 / have-org-role-91 :arg1 (o39 / organization) :arg2 (o40 / official)) :arg0-of (h21 / have-org-role-91 :arg1 (o41 / organization) :arg2 (o42 / official)) :arg0-of (h22 / have-org-role-91 :arg1 (o43 / organization) :arg2 (o44 / official))))
(f / find-01 :arg0 (r / report :mod (i / interim) :arg1-of (e / establish-01 :arg0 (f2 / force :mod (t / task) :arg1-of (e2 / establish-01 :arg0 (a / and :op1 (c / committee :mod (s / service :mod (a2 / arm-01)) :arg1-of (e3 / establish-01 :arg0 (p / political-party :name (n / name :op1 "Republican")))) :op2 (c2 / committee :arg0-of (h / have-org-role-91 :arg1 (i2 / intelligence) :arg3 (c3 / committee :mod (i3 / intelligence)))) :op3 (c4 / committee :arg0-of (h2 / have-org-role-91 :arg1 (i4 / intelligence) :arg3 (l / lead-02 :arg0 (p2 / political-party)))) :op4 (p3 / person :arg0-of (h3 / have-org-role-91 :arg1 (i5 / intelligence) :arg3 (d / defend-01))) :op5 (p4 / person :arg0-of (h4 / have-org-role-91 :arg1 (i6 / intelligence) :arg3 (d2 / defend-01))) :op6 (p5 / person :arg0-of (h5 / have-org-role-91 :arg1 (i7 / intelligence) :arg3 (d3 / defend-01))) :op6 (p6 / person :arg0-of (h6 / have-org-role-91 :arg1 (i8 / intelligence) :arg3 (d4 / defend-01))) :op6 (p7 / person :arg0-of (h7 / have-org-role-91 :arg1 (i9 / intelligence) :arg3 (d5 / defend-01))) :op6 (p8 / person :arg0-of (h8 / have-org-role-91 :arg1 (i10 / intelligence) :arg3 (d6 / defend-01))) :op6 (p9 / person :arg0-of (h9 / have-org-role-91 :arg1 (i11 / intelligence) :arg3 (d7 / defend-01))) :op6 (p10 / person :arg0-of (h10 / have-org-role-91 :arg1 (i12 / intelligence) :arg3 (a3 / analyze-01 :arg0 (p11 / person) :arg1 (i13 / intelligence)))) :op6 (p12 / person :arg0-of (h11 / have-org-role-91 :arg1 (i14 / intelligence) :arg3 (a4 / analyze-01 :arg0 (p13 / person) :arg1 (i15 / intelligence)))) :op6 (p14 / person :arg0-of (h12 / have-org-role-91 :arg1 (i16 / intelligence) :arg3 (a5 / analyze-01 :arg0 (p15 / person) :arg1 (i17 / intelligence)))) :op6 (p16 / person :arg0-of (h13 / have-org-role-91 :arg1 (i18 / intelligence) :arg3 (a6 / analyze-01 :arg0 (p17 / person) :arg1 (i19 / intelligence)))) :op6 (p18 / person :arg0-of (h14 / have-org-role-91 :arg1 (i20 / intelligence) :arg3 (a7 / analyze-01 :arg0 (p19 / person) :arg1 (i21 / intelligence)))) :op6 (p20 / person :arg0-of (h15 / have-org-role-91 :arg1 (i22 / intelligence) :arg3 (a8 / analyze-01 :arg0 (p21 / person) :arg1 (i23 / intelligence)))) :op6 (p22 / person :arg0-of (h16 / have-org-role-91 :arg1 (i24 / intelligence) :arg3 (a9 / analyze-01 :arg0 (p23 / person) :arg1 (i25 / intelligence)))) :op6 (p24 / person :arg0-of (h17 / have-org-role-91 :arg1 (i26 / intelligence) :arg3 (a10 / analyze-01 :arg0 (p25 / person) :arg1 (i27 / intelligence)))) :op6 (p26 / person :arg0-of (h18 / have-org-role-91 :arg1 (i28 / intelligence) :arg3 (a11 / analyze-01))) :op6 (p27 / person :arg0-of (h19 / have-org-role-91 :arg1 (i29 / intelligence) :arg3 (a12 / analyze-01))) :op6 (p28 / person :arg0-of (h20 / have-org-role-91 :arg1 (i30 / intelligence) :arg3 (a13 / analyze-01))) :op7 (p29 / person :arg0-of (h21 / have-org-role-91 :arg1 (i31 / intelligence :mod (c5 / country))))))))))
(s / say-01 :arg0 (p / person :name (n / name :op1 "ken" :op2 "calvert") :arg0-of (h / have-org-role-91 :arg2 (' / ''))) :arg1 (s2 / suffer-01 :arg0 (p2 / person :arg0-of (f / fight-01) :mod (w / war) :poss (w2 / we)) :time (p3 / present-01 :arg1 (a / analyze-01 :arg1-of (b / bad-07)) :arg2 (a2 / analyze-01 :arg1 (p4 / policy :mod (s3 / senior)))) :time (p5 / present-01 :arg1 (a3 / analyze-01 :arg1-of (b2 / bad-07)) :arg2 (p6 / person :arg0-of (m / make-01 :arg1 (p7 / policy :mod (s4 / senior)))))))
(a / avoid-01 :arg0 (p / person :arg0-of (l / lead-02 :arg1 (b / bracket :mod (o / other)))) :arg1 (d / dutch :arg1 (p2 / person :arg0-of (l2 / lead-02 :arg1 (b2 / bracket :mod (o2 / other)))) :arg1-of (p3 / powerful-02)) :time (b3 / begin-01 :arg1 (f / final :mod (f2 / final))))
(t / tournament :arg0 (p / person :name (n / name :op1 "jackie" :op2 "briggs") :arg1-of (i / include-91 :arg2 (p2 / person :arg0-of (h / have-org-role-91 :arg1 (g / game :name (n2 / name :op1 "N-A")) :arg3 (l / lead-02 :arg0 (p3 / person)))))) :arg1 (p4 / person :arg0-of (a / allow-01 :arg1 (g2 / goal :quant 1 :arg1-of (i2 / include-91 :arg2 (v / victories :quant 3 :mod (v2 / victories :ord (o / ordinal-entity :value 1))) :mod (e / each))))) :arg2 (s / shutout))
(g / grimaced :name (n / name :op1 (m / mr.) :op2 (c / coe) :op3 (c2 / coe)))
(a / abandon-01 :arg1 (w / way :quant (m / many) :arg1-of (i / include-91 :arg2 (w2 / way :mod (f / food) :mod (d / depression-era)))) :time (a2 / as-soon-as :op1 (g / get-05 :arg1 (c / country) :arg2 (f2 / foot :part-of (c2 / country)) :direction (b / back))))
(t / trigger-01 :arg0 (i / incident) :arg1 (r / respond-01 :arg1 (i2 / incident) :mod (q / quite)) :arg1-of (c / cause-01 :arg0 (c2 / call-01 :arg0 (p / person) :arg1 (i3 / it) :arg2 (s / scandal))))
(s / start-01 :arg1 (t / trouble) :time (t2 / try-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg2 (o / officer :mod (e / enforce-01 :arg1 (l / law))))) :arg1 (d / disperse :arg0 (p2 / person) :arg1 (p3 / person :arg0-of (s2 / study-01) :arg0-of (l2 / lead-03 :arg2 (a / and :op1 (u / use-01 :arg0 (p4 / police) :arg1 (c / cat :mod (r / rubber))) :op2 (t3 / tear :arg0 (p5 / police) :arg1 (g / gas))))))))
(p / pride-01 :arg0 (a / and :op1 (p2 / person :arg0-of (h / have-org-role-91 :arg1 (f / fellow :poss (h2 / he)) :arg2 (s / scotsman))) :op2 (p3 / person :arg0-of (h3 / have-org-role-91 :arg1 (p4 / political-party :name (n / name :op1 "N-A")))) :op3 (p5 / person :arg0-of (h4 / have-org-role-91 :arg1 (y / youngsters) :arg3 (y2 / youngsters))) :op4 (p6 / person :arg0-of (h5 / have-org-role-91 :arg1 (y3 / youngsters) :arg3 (y4 / youngsters))) :op5 (p7 / person :arg0-of (h6 / have-org-role-91 :arg1 (y5 / youngsters) :arg3 (y6 / youngsters))) :op6 (p8 / person :arg0-of (h7 / have-org-role-91 :arg1 (y7 / youngsters) :arg3 (y8 / youngsters))) :op6 (p9 / person :arg0-of (h8 / have-org-role-91 :arg1 (y9 / youngsters) :arg3 (y10 / youngsters))) :op6 (p10 / person :arg0-of (h9 / have-org-role-91 :arg1 (y11 / youngsters) :arg3 (y12 / youngsters))) :op6 (p11 / person :arg0-of (h10 / have-org-role-91 :arg1 (y13 / youngsters))) :op6 (p12 / person :arg0-of (h11 / have-org-role-91 :arg1 (y14 / youngsters))) :op6 (p13 / person :arg0-of (h12 / have-org-role-91 :arg1 (y15 / youngsters))) :op7 (p14 / person :arg0-of (h13 / have-org-role-91 :arg1 (l / legend)))))
(a / and :op1 (l / lose-02 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (o / organization :name (n / name :op1 "alcoa")) :arg2 (s / smelter))) :arg1 (m / money)) :op2 (r / risk-01 :arg0 (p2 / person) :arg2 (c / closure)))
(m / multi-sentence :snt1 (n / need-01 :arg1 (c / compete-01 :prep-with (c2 / criteria :arg1-of (c3 / clear-06)))) :snt2 (s / say-01 :arg0 (p / petition-01) :arg1 (r / recommend-01 :arg1 (e / evaluated :arg1 (c4 / candidate :quant (a / all))))))
(c / clear-06 :polarity - :arg1 (c2 / circumstance :domain (i / intend-01 :arg0 (c3 / candidate) :arg1 (w / work-01 :location (s / srs)))) :mod (a / also))
(a / and :op1 (p / person :name (n / name :op1 "dana" :op2 "reizniece-ozola") :arg0-of (h / have-org-role-91 :arg1 (f / finance) :arg2 (m / minister))) :op2 (p2 / person :arg0-of (h2 / have-org-role-91 :arg2 (m2 / minister))) :op3 (p3 / person :arg0-of (h3 / have-org-role-91 :arg2 (m3 / minister))) :op4 (p4 / person :arg0-of (h4 / have-org-role-91 :arg2 (m4 / minister))) :op5 (p5 / person :arg0-of (h5 / have-org-role-91 :arg2 (m5 / minister))) :purpose (c / confirm-01 :arg0 (p6 / person) :arg1 (p7 / position-01 :arg1 (p8 / person) :arg2 (p9 / position :mod (n2 / new)))) :time (w / week :mod (l / last)) :arg1-of (c2 / cause-01 :arg0 (i / intend-01 :arg0 (p10 / person) :arg1 (c3 / confirm-01 :arg0 (p11 / person) :arg1 (s / she) :prep-in (p12 / position :mod (n3 / new))))) :arg0-of (c4 / cause-01 :arg1 (v / vote-01 :arg0 (p13 / person :quant (a2 / all) :arg0-of (h6 / have-org-role-91 :arg1 (u / unity) :arg2 (m6 / minister))) :prep-against (a3 / against))))
(f / find-01 :arg1 (p / pistols :mod (g / gas)) :accompanier (m / man :mod (i / intoxicated)))
(c / contrast-01 :arg1 (e / explain-01 :arg0 (s / she) :arg1 (a / apply-01 :arg0 (s2 / she) :arg1-of (e2 / easy-05 :polarity - :arg1-of (e3 / easy-05)))) :arg2 (e4 / experience-01 :arg0 (f / family :arg1-of (h / have-org-role-91 :arg0 (s3 / she) :arg2 (m / member))) :arg1 (p / pressure-01 :mod (e5 / emotional) :mod (s4 / serious)) :concession (d / do-02 :polarity - :arg0 (f2 / family) :arg1 (a2 / anything :mod (l / law :polarity -))) :concession (d2 / do-02 :polarity - :arg0 (f3 / family) :arg1 (a3 / anything :mod (l2 / law :polarity -)))))
(i / indicate-01 :arg0 (t / thing :arg1-of (r / report-01 :arg0 (c / company)) :mod (m / manage-01)) :arg1 (c2 / cause-01 :arg0 (r2 / reason :quant (s / several) :arg2-of (i2 / include-01 :arg1 (a / and :op1 (l / lack-01 :arg1 (a2 / asset :mod (l2 / liquid))) :op2 (l3 / lack-01 :arg1 (l4 / line :mod (c3 / credit) :arg0-of (e / effective-04))) :arg1-of (c4 / cause-01 :arg0 (l5 / leave-11 :arg0 (b / bank) :arg1 (m2 / market :mod (c5 / credit-02 :arg0-of (e2 / effective-04)))) :arg1-of (c6 / cause-01 :arg0 (l6 / leave-11 :arg0 (b2 / bank) :arg1 (m3 / market :mod (c7 / credit-02 :arg0-of (e3 / effective-04))))))))) :arg1 (l7 / leave-13 :arg0 (l8 / leave-13 :arg0 (p / possible-01 :arg1 (f / fulfill-01 :arg0 (y / you) :arg1 (c8 / contract))) :arg1 (l9 / laguna :arg1 (c9 / contract))))))
(c / cause-01 :arg0 (l / leave-11 :arg0 (b / bank) :arg1 (m / market :mod (l2 / latvian))) :arg1 (b2 / become-01 :arg1 (c2 / company) :arg2 (p / possible-01 :polarity - :arg1 (a / and :op1 (i / implement-01 :arg0 (c3 / company) :arg1 (t / thing :arg2-of (f / fund-01 :arg0 (g / government-organization :arg0-of (g2 / govern-01 :arg1 (c4 / continent :name (n / name :op1 "N-A"))))))) :op2 (s / support-01 :arg0 (p2 / project) :arg1 (p3 / project :arg0-of (s2 / support-01 :arg1 (p4 / project :arg0-of (a2 / allow-01 :arg1 (b3 / buy-01 :arg1 (e / equipment :mod (n2 / new)) :beneficiary (p5 / plant))))))))) :mod (a3 / also)))
(a / and :op1 (r / re-imagined :arg1 (v / visit-01 :mod (t / this)) :time (a2 / after :op1 (n / now) :quant (u / up-to :op1 2016))) :op2 (p / playing :arg0 (i / ieva :name (n2 / name :op1 (m / much-adored) :op2 (k / kerevica) :op3 (k2 / kerevica) :op4 (k3 / kerevica) :op5 (z / zarah) :op6 (z2 / zarah) :op7 (z3 / zarah)))))
(a / and :op1 (c / continue-01 :arg1 (w / weather :mod (w2 / water)) :arg1-of (c2 / cause-01 :arg0 (a2 / and :op1 (b / become-01 :arg1 (w3 / weather) :arg2 (c3 / colder)) :op2 (t / temperatures :arg1 (t2 / temperature :mod (w4 / water)) :location (a3 / and :op1 (r / rivers :quant (a4 / all)) :op2 (t3 / temperature :quant (a5 / all))))))) :op2 (s / show-01 :arg0 (t4 / temperature) :arg1 (d / data :source (a6 / and :op1 (e / environment) :op2 (f / facility :name (n / name :op1 "N-A")) :op3 (c4 / center :mod (m / meteorology) :mod (m2 / meteorology)))) :location (s2 / sea) :mod (a7 / also)))
(a / and :op1 (s / search-01 :arg0 (p / police :mod (c / country :name (n / name :op1 "N-A"))) :arg2 (s2 / suspect-01 :arg1 (a2 / assaulted :arg0 (p2 / police) :arg1 (g / girl :mod (o / old) :duration (t / temporal-quantity :quant (N / N-A) :unit (y / year))) :manner (s3 / sexual) :location (p3 / park :name (n2 / name :op1 (l / legoland)))))) :op2 (r / report-01 :arg0 (m / mail :mod (d / day))))
(s / study-01 :arg0 (h / he) :location (j / jazeps :name (n / name :op1 (j2 / jazeps) :op2 (l / latvian) :op3 (a / academy) :op4 (a2 / academy) :op5 (a3 / academy) :op6 (l2 / luste) :op7 (l3 / luste))))
(s / say-01 :arg0 (d / data :arg1-of (p / provide-01 :arg0 (p2 / person :arg0-of (h / hack-04) :arg1-of (r / relate-01 :arg2 (s2 / service :mod (s3 / secret) :mod (c / country :name (n / name :op1 "N-A"))))))) :arg1 (c2 / carry-out-03 :arg0 (p3 / person :arg0-of (h2 / hack-04) :arg1-of (r2 / relate-01 :arg2 (s4 / service :mod (s5 / secret) :mod (c3 / country :name (n2 / name :op1 "N-A"))))) :arg1 (s6 / service :mod (s7 / secret) :mod (c4 / country))))
(c / contrast-01 :arg1 (a / admit-01 :arg0 (p / person :arg0-of (a2 / author-01 :arg1 (s / submarine :mod (y / yellow) :mod (s2 / song) :arg1-of (h / hit-01)))) :arg1 (a3 / and :op1 (c2 / communicates :arg0 (p2 / person) :arg1 (a4 / and :op1 (r / ringo) :op2 (m / member :mod (h2 / hunger-01 :arg0 (p3 / person) :time (f / former))) :op3 (p4 / person :arg0-of (h3 / have-org-role-91 :arg2 (m2 / member) :time (f2 / former)) :arg0-of (h4 / have-org-role-91 :arg2 (m3 / member) :time (f3 / former))) :op4 (p5 / person :arg0-of (h5 / have-org-role-91 :arg2 (m4 / member) :time (f4 / former)) :arg0-of (h6 / have-org-role-91 :arg2 (m5 / member) :time (f5 / former))) :op5 (p6 / person :arg0-of (h7 / have-org-role-91 :arg2 (m6 / member) :time (f6 / former)) :arg0-of (h8 / have-org-role-91 :arg2 (m7 / member)))))) :mod (a5 / also)) :arg2 (c3 / cease-01 :arg0 (t / term :mod (o / other)) :arg1 (e / exist-01)))
(o / obligate-01 :arg2 (s / say-01 :arg0 (h / he) :arg1 (t / thing :arg0-of (i / impact-01 :arg1 (p / perform-01 :arg0 (t2 / team)))) :mod (a / also)))
(a / and :op1 (a2 / appreciate-02 :arg0 (w / we) :arg1 (a3 / all :arg1-of (d / do-02 :arg0 (h / he) :arg2 (o / organization :poss (w2 / we))))) :op2 (w3 / wish-01 :arg0 (w4 / we) :arg1 (l / luck :mod (g / good :degree (m / most)) :time (f / future))))
(e / enacted :arg0 (t / they) :arg1 (s / star) :arg1-of (c / cause-01 :arg0 (t2 / travel-01 :arg0 (w / wind :arg1-of (w2 / wind) :mod (t3 / this)) :path (a / across :op1 (s2 / star)) :path (a2 / across :op1 (s3 / star)))))
(p / provide-01 :arg0 (c / cluster :name (n / name :op1 (s / star) :op2 (s2 / star) :op3 (s3 / star) :op4 (s4 / star) :op5 (s5 / star) :op6 (s6 / star) :op7 (s7 / star))) :arg1 (a / and :op1 (d / direction :mod (g / go-02 :arg0 (p2 / person :arg0-of (h / have-org-role-91 :arg1 (p3 / political-party :name (n2 / name :op1 "N-A")))))) :op2 (g2 / go-02 :arg0 (a2 / and :op1 (p4 / person :mod (y / young :degree (m / more)) :mod (y2 / young :degree (m2 / more))) :op2 (p5 / person :mod (o / old :degree (m3 / more)) :mod (o2 / old :degree (m4 / more)))))))
(a / and :op1 (t / thing :arg1-of (t2 / think-01 :arg0 (w / we))) :op2 (c / condolence :topic (a2 / and :op1 (f / family :arg1-of (h / have-org-role-91 :arg0 (w2 / we) :arg2 (m / member))) :op2 (p / person :arg0-of (h2 / have-rel-role-91 :arg1 (w3 / we) :arg2 (f2 / friend)))) :time (d / difficult :mod (t3 / this))))
(p / pledge-01 :arg0 (h / he) :arg1 (r / return-02 :arg1 (r2 / relation-03 :arg0 (c / country :name (n / name :op1 "Russia")) :arg2 (c2 / country)) :arg2 (l / level :mod (p2 / pre-crisis) :poss (r3 / relation-03)) :mod (j / just) :concession (h2 / high-02 :arg1 (r4 / relation-03) :degree (m / more :mod (e / even)))) :mod (a / also))
(t / turn-02 :arg0 (t2 / thing :arg1-of (o / opine-01 :arg0 (p / public))) :arg1 (t3 / thing :arg1-of (o2 / opine-01 :arg0 (p2 / public))) :mod (a / also) :time (s / since))
(c / clear-06 :arg1 (b / benefit-01 :arg0 (c2 / call-01 :arg1 (p / person :arg0-of (c3 / call-01 :arg1 (p2 / person) :arg2 (t / truce))))))
(r / reach-01 :arg0 (d / dettori :name (n / name :op1 (f / frankie) :op2 (d2 / dettori))) :arg1 (w / winners :quant 3000) :location (n2 / newmarket :location (n3 / newmarket)))
(j / jockey :arg0 (j2 / jockey :ord (o / ordinal-entity :value 6)) :arg1 (r / reach-01 :arg1 (l / landmark) :location (f / flat)) :ord (o2 / ordinal-entity :value 6))
(a / and :op1 (r / relieved :arg1 (i / i)) :op2 (h / humble :degree (v / very)))
(a / appoint-01 :arg1 (p / person :name (n / name :op1 "anton" :op2 "vaino") :arg0-of (h / have-org-role-91 :arg2 (d / deputy))) :arg2 (p2 / person :arg0-of (h2 / have-org-role-91 :arg2 (d2 / deputy))) :time (s / since :op1 (a2 / appoint-01 :arg1 (p3 / person) :arg2 (s2 / successor :poss (p4 / person)))) :li 2012)
(h / have-org-role-91 :arg0 (h2 / he) :arg1 (a / and :op1 (o / organization :name (n / name :op1 "Security" :op2 "Council") :arg0-of (h3 / have-org-role-91 :arg1 (c / country :name (n2 / name :op1 "N-A")) :arg2 (m / member) :time (f / former))) :op2 (m2 / member :arg2-of (h4 / have-org-role-91 :arg1 (s / service :mod (s2 / security) :mod (s3 / state)) :time (f2 / former)))) :arg2 (m3 / member) :arg1-of (r / resemble-01 :arg2 (m4 / mr)))
(t / tell-01 :arg0 (p / person :arg0-of (i / investigate-01)) :arg1 (a / appear-02 :arg1 (p2 / philadelphia :arg0 (g / gunman :quant (m / multiple)))) :arg2 (p3 / person :arg0-of (i2 / investigate-01)))
(n / need-01 :arg0 (w / we) :arg1 (a / and :op1 (s / simone) :op2 (g / gabby) :op3 (l / laurie)) :arg1-of (c / cause-01 :arg0 (a2 / amr-unknown)))
(t / take-01 :arg0 (a / and :op1 (s / simone) :op2 (g / gabby)) :arg1 (p / path :mod (s2 / same)) :arg3 (a2 / and :op1 (a3 / aly) :op2 (m / madison)) :purpose (m2 / make-01 :arg0 (a4 / and) :arg1 (t2 / team :mod (o / olympic))))
FAILED_TO_PARSE#Number of opening and closing brackets doesn't match.
FAILED_TO_PARSE#Number of opening and closing brackets doesn't match.
(a / and :op1 (c / carry-01 :arg0 (s / she) :arg1 (e / event)) :op2 (t / try-01 :arg0 (s2 / she) :arg1 (u / underwear :quant 4 :location (s3 / store :name (n / name :op1 (b / bouverie))) :location (s4 / store :name (n2 / name :op1 (b2 / bouverie)) :location-of (s5 / shop-01))) :time (e2 / eventual)))
(a / and :op1 (p / put-01 :arg0 (y / you) :arg1 (w / weight :source (g / gun)) :arg2 (g2 / gun)) :op2 (p2 / punched :arg0 (y2 / you) :arg1 (g3 / gun :source (g4 / grip-01 :arg0 (h / he))) :time (b / before :op1 (b2 / back-01 :arg0 (y3 / you) :arg1 (g5 / gun)))) :op3 (p3 / point-01 :arg0 (y4 / you) :arg1 (g6 / gun) :arg2 (h2 / he)) :time (t / time :arg1-of (s / same-01)))
(s / say-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (h2 / house-01 :mod (c / cornwall)) :arg2 (p2 / person :arg0-of (m / manage-01 :arg1 (h3 / house-01))))) :arg1 (f / fear-01 :arg0 (p3 / person) :arg1 (f2 / fear-01 :arg0 (p4 / person) :arg1 (p5 / possible-01 :arg1 (s2 / save-02 :arg1 (i / it))))))
(a / and :op1 (r / raid-01 :arg0 (p / police) :arg1 (p2 / property)) :op2 (f / find-01 :arg0 (p3 / police) :arg1 (p4 / property)) :op3 (f2 / find-01 :arg0 (p5 / police) :arg1 (a2 / and :op1 (m / more-than :op1 (7 / 70g)) :op2 (m2 / more-than :op1 (72 / 70g)) :op3 (m3 / monetary-quantity :quant 1,700 :unit (y / yuan)) :op4 (m4 / monetary-quantity :quant 1,700 :unit (y2 / yuan)))))
(p / purchase-01 :arg0 (c / company) :arg1 (e / equipment :mod (s / sawing) :mod (p2 / plank)) :arg3 (m / monetary-quantity :quant 89.5 :unit (e2 / euro)))
(c / co-financed :arg0 (s / service :mod (r / rural) :mod (r2 / rural)) :arg1 (p / purchase-01))
(a / and :op1 (p / pampered :arg1 (p2 / person :arg0-of (v / visit-01) :ord (o / ordinal-entity :value 1) :arg0-of (v2 / visit-01)) :arg2 (b / britain :mod (g / great) :arg1-of (c / come-01 :time (y / year :mod (l / last))))) :op2 (c2 / contrast-01 :arg1 (e / expect-01 :arg1 (c3 / come-01 :arg1 (p3 / person :arg0-of (v3 / visit-01) :ord (o2 / ordinal-entity :value 1) :arg0-of (v4 / visit-01) :arg1-of (c4 / come-01 :time (y2 / year :mod (l2 / last))) :arg1-of (c5 / come-01 :time (y3 / year :mod (l3 / last))))) :arg2 (d / disappeared :arg0 (a2 / and :op1 (p4 / program) :op2 (p5 / punks :name (n / name :op1 (p6 / punks) :op2 (p7 / punks) :op3 (n2 / nofx) :op4 (n3 / nofx) :op5 (m / maxim) :op6 (m2 / maxim) :op7 (m3 / maxim)))) :arg1 (m4 / maxim :source (a3 / and :op1 (' / '') :op2 (o3 / other))) :manner (q / quiet)))))
(a / and :op1 (l / lead-01 :arg0 (h / he) :arg1 (l2 / life :mod (p / peaceful))) :op2 (s / suspect-01 :polarity - :arg1 (i / involve-01 :arg1 (h2 / he) :arg2 (o / or :op1 (i2 / issue-02 :arg0 (l3 / law :polarity -)) :op2 (c / corrupt-01))) :degree (w / whatsoever)))
(p / possible-01 :arg1 (e / exclude-01 :arg1 (p2 / person :mod (c / country :name (n / name :op1 "N-A"))) :arg2 (l / list :mod (s / substance) :arg1-of (p3 / prohibit-01) :purpose (a / athletes))))
(a / announce-01 :polarity - :arg0 (w / we) :arg1 (' / '' :arg0 (w2 / we) :arg1 (t / they)) :arg1-of (c / cause-01 :arg0 (t2 / take-01 :arg0 (t3 / they) :arg1 (c2 / civilian) :arg3 (t4 / they) :time (f / flee-05 :arg0 (t5 / they) :arg2 (a2 / and :op1 (p / person :arg0-of (h / have-org-role-91 :arg2 (h2 / head-of-state))) :op2 (p2 / person :arg0-of (h3 / have-org-role-91 :arg1 (c3 / council :mod (m / military :mod (c4 / country-region))) :arg2 (o / officer))) :op3 (p3 / person :arg0-of (h4 / have-org-role-91 :arg1 (c5 / council :mod (m2 / military) :mod (m3 / manbij)) :arg2 (o2 / officer))))))))
(i / include-01 :arg1 (a / and :op1 (p / person :mod (a2 / army :mod (c / country :name (n / name :op1 "N-A"))) :mod (n2 / new)) :op2 (v / victim :name (n3 / name :op1 (b / berlin)) :mod (n4 / new))) :arg2 (a3 / army :mod (c2 / country :name (n5 / name :op1 "N-A"))) :mod (a4 / also))
(e / equal-01 :arg1 (i / it) :arg2 (l / less-than :op1 1841) :time (r / rate :mod (a / any)))
(a / and :op1 (p / possible-01 :polarity - :arg1 (c / comment-01 :arg0 (i / i) :arg3 (t / thing :arg0-of (c2 / cause-01 :arg1 (a2 / arrive-01 :arg1 (h / he) :arg4 (a3 / accreditation :mod (o / olympic)) :prep-with (a4 / accreditation :mod (c3 / coach))))))) :op2 (m / mean-02 :arg1 (j / jakubovskis) :arg2 (j2 / jakubovskis)))
(r / report-01 :arg0 (a / agency :name (n / name :op1 "N-A") :mod (n2 / news)) :arg1 (l / lose-02 :arg0 (b / borodavko :name (n3 / name :op1 (l2 / latvian) :op2 (j / jevgenijs)) :arg0-of (f / fight-01)) :arg1 (f2 / fight-01 :arg0 (h / he) :ord (o / ordinal-entity :value 1)) :location (c / coffin :mod (o2 / over :op1 (v / value-interval :op1 100 :op2 100)))) :time (p / previous))
(t / tackle-01 :arg0 (a / and :op1 (p / person :arg0-of (h / have-rel-role-91 :arg2 (m / marcus))) :op2 (p2 / person :arg0-of (h2 / have-rel-role-91 :arg1 (t2 / team :name (n / name :op1 (e / england) :op2 (1 / 15-aside) :op3 (12 / 15-aside))) :arg2 (b / brother))) :op4 (p3 / person :arg0-of (h3 / have-rel-role-91 :arg1 (p4 / person) :arg2 (b2 / brother))) :op5 (p5 / person :arg0-of (h4 / have-rel-role-91 :arg1 (p6 / person) :arg2 (b3 / brother))) :op6 (p7 / person :arg0-of (h5 / have-rel-role-91 :arg1 (p8 / person) :arg2 (b4 / brother))) :op7 (p9 / person :arg0-of (h6 / have-rel-role-91 :arg1 (p10 / person) :arg2 (b5 / brother)))) :arg1 (m2 / medal :mod (s / silver) :mod (u / ultimate)) :arg1-of (b6 / brilliant-01))
(d / difficult :domain (a / achieve-01 :arg1 (g / goal)) :arg1-of (c / cause-01 :arg0 (d2 / difficult :domain (a2 / achieve-01 :arg1 (a3 / and :op1 (f / fail-01 :arg1 (p / party :arg0-of (f2 / favor-01 :arg1 (p2 / politics))) :arg2 (a4 / agree-01 :arg0 (p3 / party) :arg1 (f3 / form-01 :arg0 (p4 / party) :arg1 (g2 / government-organization :arg0-of (g3 / govern-01) :mod (n / new)) :duration (t / temporal-quantity :quant (N / N-A) :unit (m / month))))) :op2 (s / short-06 :arg1 (p5 / party) :arg2 (o / organize-01 :arg0 (p6 / party) :arg1 (e / elect-01 :mod (e2 / early)) :purpose (o2 / organize-01 :arg1 (p7 / parliament) :time (e3 / early) :time (y / year :mod (o3 / one)))))))) :mod (e4 / especially)))
(r / realize-01 :arg0 (a / activist) :arg1 (i / increase-01 :arg1 (a2 / amount :quant-of (p / product :name (n / name :op1 "N-A")) :arg1-of (a3 / amount-01 :arg2 (r2 / rate-entity-91 :arg2 (t / temporal-quantity :quant (N / N-A) :unit (y / year))))) :arg3 (r3 / rate-entity-91 :arg1 (a4 / amount :quant-of (p2 / product :name (n2 / name :op1 "N-A"))) :arg2 (t2 / temporal-quantity :quant (N2 / N-A) :unit (y2 / year)))) :time (a5 / after :op1 (w / walk-01 :arg0 (a6 / activist) :destination (a7 / along :op1 (g / gulf :mod (r4 / riga)) :time (a8 / already)))))
(c / contrast-01 :arg1 (p / possible-01 :arg1 (s / set-up-03 :arg0 (o / one) :arg1 (s2 / sign :arg0-of (w / warn-01) :mod (n / new))) :arg1-of (p2 / possible-01)) :arg2 (l / likely-01 :polarity - :arg1 (m / make-02 :arg0 (o2 / one) :arg1 (c2 / change-01 :mod (r / radical)))))
(c / contrast-01 :arg2 (p / point-out-02 :arg1 (a / and :op1 (p2 / position :arg1-of (p3 / powerful-02 :degree (v / very)) :domain (c2 / charge-05 :arg2 (o / office :mod (e / executive) :mod (p4 / president)))) :op2 (b / become-01 :arg1 (i / it) :arg2 (p5 / person :quant 1 :arg1-of (i2 / include-91 :arg2 (p6 / person :arg0-of (i3 / influence-01 :degree (m / most)) :location (c3 / country :mod (e2 / entire)))))))))
(c / cause-01 :arg1 (o / over :op1 (o2 / over :op1 (l / latvia) :domain (j / judo))))
(f / find-01 :arg0 (p / person :arg0-of (p2 / play-01) :mod (b / beach) :quant (s / some)) :arg1 (h / hotel) :location (c / copacabana) :mod (a / also))
(p / paid :arg1 (r / risk-01) :time (t / this))
(h / have-concession-91 :arg1 (s / safe-01 :arg1 (a / area)) :arg2 (r / recommend-01 :arg1 (c / care-04 :arg1 (b / be-located-at-91 :arg1 (p / person :quant 1) :arg2 (h2 / here) :mod (a2 / as-well)))))
FAILED_TO_PARSE#Two concepts in a row.
(o / organize-01 :arg0 (c / collectives :quant 2015 :mod (a / art) :poss (c2 / culture :name (n / name :op1 (v / vef)))) :arg1 (c3 / concert :mod (f / farewell)) :time (b / before :op1 (n2 / now) :quant (m / more-than :op1 (t / temporal-quantity :quant (N / N-A) :unit (y / year)))) :time (b2 / before :op1 (n3 / now) :quant (m2 / more-than :op1 (t2 / temporal-quantity :quant (N2 / N-A) :unit (y2 / year)))) :time (b3 / before :op1 (n4 / now) :quant (m3 / more-than :op1 (t3 / temporal-quantity :quant (N3 / N-A) :unit (y3 / year)))) :arg0-of (c4 / cause-01 :arg1 (s / start-01 :arg1 (c5 / concert :arg1 (b4 / building)) :time (s2 / soon :degree (v2 / very)))))
FAILED_TO_PARSE#Two concepts in a row.
(r / run-04 :arg1 (i / it) :arg3 (r2 / rate-entity-91 :arg1 19 :arg2 (t / temporal-quantity :quant (N / N-A) :unit (y / year))) :time (u / until :op1 (s / score-01 :arg1 (i2 / it) :arg2 (s2 / score-entity :op1 19 :op2 30))))
(i / include-91 :arg1 (a / and :op1 (i2 / inflation :arg1-of (a2 / average-04)) :op2 (i3 / inflation :arg1-of (m / measure-01 :arg0 (a3 / ambitious)))) :arg2 (p / product-of :op1 2014 :op2 2015) :time (d / date-interval :op1 (d2 / date-entity :decade (N / N-A)) :op2 (d3 / date-entity :dayperiod (N2 / N-A))) :arg1-of (c / compare-01 :arg2 (p2 / product-of :op1 2014 :op2 2015)))
(w / write-01 :arg0 (i / i) :arg1 (a / and :op1 (t / threaten-01 :polarity - :arg0 (i2 / it) :arg1 (t2 / threaten-01 :arg1 (s / safe-01) :mod (a2 / any))) :op2 (o / obligate-01 :arg1 (p / person :quant 1) :arg2 (f / forgive-01 :arg0 (p2 / person) :arg1 (s2 / skaters :mod (' / ''))))) :medium (m / magazine :name (n / name :op1 "N-A")) :mod (a3 / also))
(c / contain-01 :arg0 (a / and :op1 (p / person :arg0-of (h / have-org-role-91 :arg2 (s / scientist :mod (c2 / canadian)))) :op2 (p2 / person :arg0-of (h2 / have-org-role-91 :arg2 (s2 / scientist))) :op3 (p3 / person :arg0-of (r / responsible-01 :arg1 (a2 / and :op1 (a3 / appetite) :op2 (a4 / amount :quant-of (f / food :arg1-of (e / eat-01 :arg0 (w / we)))))) :mod (c3 / company :name (n / name :op1 "N-A"))) :quant (s3 / some)) :arg1 (f2 / fiber :mod (d / dietary)))
(c / contain-01 :arg0 (f / fruit) :arg1 (t / thing :arg1-of (k / know-02 :arg2 (a / and :op1 (m / monosaccharides) :op2 (d / disaccharides)))) :arg1-of (c2 / cause-01 :arg0 (o / or :op1 (m2 / monosaccharides) :op2 (p / pairs) :arg1-of (s / single-02))))
(f / fail-01 :arg1 (p / person :arg0-of (l / lead-02)) :arg2 (r / reach-01 :arg0 (p2 / person) :arg1 (t / top :part-of (o / organization) :degree (v / very))))
(a / and :op1 (r / report-01 :arg0 (r2 / report :mod (1 / 10-page)) :arg1 (p / problem :topic (p2 / persistent)) :location (a2 / and :op1 (t / thing :arg2-of (c / characteristic-02 :arg1 (p3 / person :quant 2014))) :op2 (t2 / thing :arg2-of (c2 / characteristic-02 :arg1 (p4 / person :quant 2015 :arg0-of (c3 / command-02)))))) :op2 (a3 / analyze-01 :arg0 (t3 / thing) :arg1 (e / effort :purpose (t4 / train-01 :arg0 (c4 / country) :arg1 (f / force :mod (c5 / country :name (n / name :op1 "N-A")))))))
(s / say-01 :arg0 (d / democrat :mod (t / top) :poss (c / committee)) :arg1 (c2 / create-01 :arg1 (p / process-02 :arg1 (p2 / produce-01 :arg1 (i / intelligence :location (a / and :op1 (f / force :mod (s2 / security) :mod (c3 / country :name (n / name :op1 "N-A"))) :op2 (f2 / force :mod (s3 / security) :mod (c4 / country :name (n2 / name :op1 "N-A"))) :op3 (p3 / person :arg0-of (r / represent-01 :arg1 (o / organization) :mod (t2 / top))) :op4 (p4 / person :arg0-of (r2 / represent-01 :arg1 (o2 / organization) :mod (t3 / top))) :op5 (p5 / person :arg0-of (r3 / represent-01 :arg1 (c5 / committee)))))))) :medium (s4 / statement))
(p / play-02 :arg0 (h / hooker :name (n / name :op1 (m / mr.) :op2 (h2 / hooker))) :arg1 (p2 / part :part-of (i / intelligence :location (a / all-over :op1 (i2 / intelligence :mod (s / state) :mod (r / religious-group :name (n2 / name :op1 "N-A")))))) :mod (a2 / also))
(a / and :op1 (s / serve-01 :arg0 (t / team :consist-of (w / woman)) :arg2 (f / farmworkers :mod (m / male))) :op2 (s2 / serve-01 :arg1 (a2 / and :op1 (s3 / swim-01) :op2 (l / lunch) :op3 (d / dinner))))
(t / tell-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (c / council :mod (m / military) :arg1-of (a / ally-01 :arg2 (c2 / country :name (n / name :op1 "N-A"))) :arg1-of (a2 / ally-01 :arg2 (c3 / country :name (n2 / name :op1 "N-A")))) :arg2 (d / darwish))) :arg1 (a3 / and :op1 (f / free-01 :arg0 (m2 / militant) :arg1 (h2 / hostage :quant (o / over :op1 2000) :arg1-of (h3 / hold-01 :arg0 (m3 / militant)))) :op2 (d2 / darwish :arg0 (m4 / militant) :arg1 (h4 / hostage))) :arg2 (r / reuters))
(c / cite-01 :arg0 (a / and :op1 (p / person :arg0-of (h / have-org-role-91 :arg1 (s / service :mod (i / internal-02)))) :op2 (p2 / person :arg0-of (h2 / have-rel-role-91 :arg1 (p3 / person) :arg2 (l / lawyer)))) :arg1 (a2 / audit-01 :arg0 (s2 / service :mod (i2 / internal-02)) :arg1-of (c2 / cause-01 :arg0 (r / reason :arg0-of (c3 / cause-01 :arg1 (r2 / refuse-01 :arg0 (p4 / person) :arg1 (r3 / release-01 :arg0 (p5 / person) :arg1 (r4 / returns :poss (p6 / person)))))))))
(r / rally-01 :arg1 (a / and :op1 (m / meet-03 :location (r2 / river :name (n / name :op1 "N-A"))) :op2 (t / thing :arg2-of (m2 / meet-01 :arg1 (t2 / thing :arg1-of (t3 / tax-01 :arg3 (t4 / tax)))))) :location (c / city :name (n2 / name :op1 "N-A") :arg1-of (r3 / rally-01 :time (w / week :mod (l / last)) :location (c2 / country :name (n3 / name :op1 "N-A")))))
(s / say-01 :arg0 (p / person :name (n / name :op1 "N-A")) :arg1 (a / and :op1 (a2 / audit-01 :arg1 (h / he) :mod (i / irs) :mod (t / too)) :op2 (f / fear-01 :arg0 (i2 / i) :arg1 (f2 / fear-01 :polarity - :arg0 (p2 / person :arg0-of (v / vote-01)) :arg1 (p3 / person :arg0-of (v2 / vote-01))))))
(w / way :polarity - :manner-of (w2 / win-01 :arg1 (i / it)))
(f / finish-07 :arg0 (t / they) :arg2 (s / score-entity :op1 3 :op2 51.943))
(n / novelty :mod (a / another) :arg1-of (b / become-01 :arg2 (t / tradition) :arg1-of (p / possible-01) :arg1-of (b2 / become-01 :arg2 (t2 / tradition)) :location-of (t3 / take-01 :arg0 (a2 / and :op1 (t4 / tractors) :op2 (m / motorcycles) :mod (b3 / both)) :arg1 (p2 / part))))
(i / incident :time-of (i2 / incident :time (a / after :op1 (s / shave-01 :arg0 (i3 / i) :arg2 (t / thursday)) :mod (j / just))))
(d / determine-01 :arg0 (t / thing :arg1-of (d2 / decide-01)) :arg1 (a / and :op1 (d3 / determine-01 :arg0 (m / model :mod (m2 / market :mod (g / gas))) :arg1 (m3 / model :mod (g2 / gas))) :op2 (r / regulate-01 :arg1-of (l / legal-02) :arg1-of (c / create-01 :arg1-of (l2 / legal-02)))) :time (f / future) :mod (a2 / also))
(d / discuss-01 :arg0 (t / they) :arg1 (c / change-01 :arg1 (c2 / charter :mod (c3 / compete-01))) :time (w / week :mod (n / next)) :mod (a / also))
(i / indicate-01 :arg0 (d / discuss-01 :arg1 (d2 / discuss-01 :location (a / around :op1 (c / candidacy :poss (s / she))))) :arg1 (a2 / antagonism :arg0 (p / party :mod (c2 / coalition :arg0-of (r / rule-03)) :arg1-of (f / fortunate-01 :polarity - :degree (q / quite))) :arg1 (d3 / discuss-01 :location (a3 / around :op1 (c3 / candidacy :poss (s2 / she))))) :mod (a4 / also))
(e / encourage-01 :arg0 (a / and :op1 (i / increase-01 :arg1 (t / thing :arg2-of (p / price-01 :arg1 (o / oil)))) :op2 (i2 / indicators :mod (f / finance) :arg1-of (s / strong-02) :poss (c / company :quant (s2 / several)))) :arg1 (r / rise-01 :arg1 (e2 / exchange-01 :arg1 (s3 / stock :mod (c2 / continent :name (n / name :op1 "N-A"))))))
(c / contrast-01 :arg1 (d / decide-01 :arg0 (p / person :arg1-of (e / expert-01)) :arg1 (t / thing :arg1-of (o / opine-01 :arg0 (h / he)))) :arg2 (d2 / decide-01 :arg0 (b / board :mod (c2 / construct-01)) :arg1 (p2 / possible-01 :polarity - :arg1 (u / use-01 :arg1 (t2 / thing :mod (b2 / both)) :arg2 (l / location :location-of (a / and :op1 (p3 / place-01 :arg1 (c3 / construct-01 :arg1 (c4 / construct-01))) :op2 (d3 / dmitrijs :arg1 (t3 / thing))))))))
(o / or :op2 (p / possible-01 :arg1 (t / try-01 :arg0 (p2 / person :mod (c / country :name (n / name :op1 "N-A"))) :arg1 (r / recover-02 :arg0 (p3 / person) :arg1 (l / lose-02 :arg0 (p4 / person :arg1-of (n2 / neighbor-01 :arg2 (p5 / proceeding-02 :mod (c2 / civil))) :arg0-of (t2 / take-01 :arg1 (t3 / time :quant (l2 / lot)) :arg1-of (p6 / possible-01))))))))
(t / tell-01 :arg0 (h / he) :arg1 (g / good :domain (t2 / they) :mod (r / really)) :arg2 (a / ask-02 :arg0 (h2 / he) :arg1 (s / stone :arg0 (t3 / they) :arg1 (s2 / stone :mod (g2 / good :degree (r2 / really))))) :arg2 (r3 / relation-03 :arg0 (t4 / they) :arg2 (t5 / they)))
(p / putin :mode (i / imperative) :arg0 (y / you) :arg1 (a / ankara :mod (p2 / putin)) :arg1-of (c / cause-01 :arg0 (a2 / accuse-01 :arg1 (p3 / putin) :arg2 (a3 / ankara :arg1 (s / stabbing :mod (s2 / stab)) :location (b / back)))))
(c / conduct-01 :arg0 (m / media :arg1-of (c2 / conduct-01 :arg0 (a / and :op1 (p / person :arg0-of (h / have-org-role-91 :arg2 (h2 / head-of-state))) :op2 (p2 / person :arg0-of (o / offense-02 :arg1 (b / building :name (n / name :op1 "N-A"))))))) :arg1 (p3 / person :arg0-of (h3 / have-org-role-91 :arg2 (h4 / head-of-state))) :duration (m2 / multiple :op1 (t / temporal-quantity :quant (N / N-A) :unit (m3 / month))))
(h / hit-01 :arg0 (t / thing :arg2-of (s / sanction-02 :arg0 (c / country :name (n / name :op1 "N-A")))) :arg1 (b / ban-01 :arg1 (f / fly-01 :location (c2 / charter)) :mod (p / particular) :arg0-of (c3 / carry-01 :arg1 (p2 / person :mod (c4 / country :name (n2 / name :op1 "N-A")) :quant (s2 / several) :arg0-of (t2 / tour-01)) :arg4 (c5 / coast :mod (t3 / turkish)) :time (y / year :mod (e / each))) :mod (u / usual)))
(n / name-02 :arg0 (h / he) :arg1 (i / ivanov :mod (m / mr)) :arg2 (p / person :quant 1 :arg1-of (i2 / include-91 :arg2 (p2 / person :quant 5 :arg1-of (t / trust-01 :arg0 (h2 / he))))) :time (c / come-12 :arg1 (m2 / mr)))
(p / phone-number-entity :value (N / N-A))
(a / adopt-01 :arg0 (g / girl :arg1-of (a2 / adopt-01 :arg0 (p / person :arg0-of (h / have-rel-role-91 :arg1 (g2 / girl) :arg2 (m / mother))))) :arg1 (g3 / girl :arg0-of (h2 / have-rel-role-91 :arg1 (g4 / girl) :arg2 (m2 / mother))) :prep-as (a3 / and :op1 (p2 / person :arg0-of (h3 / have-rel-role-91 :arg1 (g5 / girl) :arg2 (m3 / mother))) :op2 (p3 / person :arg0-of (h4 / have-rel-role-91 :arg1 (g6 / girl) :arg2 (m4 / mother)))) :arg1-of (d / discover-01 :arg0 (p4 / person :arg0-of (h5 / have-rel-role-91 :arg1 (p5 / person :name (n / name :op1 "aimee" :op2 "boorman") :arg0-of (h6 / have-rel-role-91 :arg1 (p6 / person) :arg2 (m5 / mother))) :arg2 (m6 / mother))) :time (f / field :mod (f2 / field) :location-of (b / become-01 :arg1 (p7 / person) :arg2 (f3 / force-04)))))
(c / contrast-01 :arg2 (a / and :op1 (s / sport :domain (s2 / sport :mod (t / that)) :mod (e / expensive)) :op2 (g / gymnasts :arg0 (a2 / and :op1 (p / pay-01 :arg0 (p2 / person :arg0-of (h / have-rel-role-91 :arg1 (p3 / person :arg0-of (h2 / have-rel-role-91 :arg1 (p4 / person :arg0-of (h3 / have-rel-role-91 :arg1 (p5 / person :arg0-of (h4 / have-rel-role-91 :arg1 (p6 / person :arg0-of (h5 / have-rel-role-91 :arg1 (p7 / person :arg0-of (h6 / have-rel-role-91 :arg1 (p8 / person :arg0-of (h7 / have-rel-role-91 :arg1 (p9 / person :arg0-of (h8 / have-rel-role-91 :arg1 (p10 / person :arg0-of (h9 / have-rel-role-91 :arg1 (p11 / person :arg0-of (h10 / have-rel-role-91 :arg1 (p12 / person :arg0-of (h11 / have-rel-role-91 :arg1 (p13 / person :arg0-of (h12 / have-rel-role-91 :arg1 (p14 / person :arg0-of (h13 / have-rel-role-91 :arg1 (p15 / person :arg0-of (h14 / have-rel-role-91 :arg1 (p16 / person :arg0-of (h15 / have-rel-role-91 :arg1 (p17 / person :arg0-of (h16 / have-rel-role-91 :arg1 (p18 / person :arg0-of (h17 / have-rel-role-91 :arg1 (p19 / person :arg0-of (h18 / have-rel-role-91 :arg1 (p20 / person :arg0-of (h19 / have-rel-role-91 :arg1 (p21 / person :arg0-of (h20 / have-rel-role-91 :arg1 (p22 / person :arg0-of (h21 / have-rel-role-91 :arg1 (p23 / person :arg0-of (h22 / have-rel-role-91 :arg1 (p24 / person :arg0-of (h23 / have-rel-role-91 :arg1 (p25 / person :arg0-of (h24 / have-rel-role-91 :arg2 (p26 / parent))) :arg2 (p27 / parent))) :arg2 (p28 / parent))) :arg2 (p29 / parent)))))))))))))))))))))))))))))))))))))) :arg2 (p30 / person :arg0-of (h25 / have-rel-role-91 :arg1 (p31 / person) :arg2 (p32 / parent))))) :op2 (t2 / travel-01 :arg0 (p33 / person)) :op3 (f / fee :mod (c2 / compete-01)) :op4 (f2 / fee :mod (c3 / compete-01)) :op5 (f3 / fee :mod (h26 / hotel))))))))))
FAILED_TO_PARSE#Number of opening and closing brackets doesn't match.
(m / multi-sentence :snt1 (c / concern-01 :arg0 (t / that)) :snt2 (t2 / turn-02 :arg0 (i / institution :mod (s / state)) :arg1 (e / eye :mod (b / blind-02)) :arg2 (b2 / behave-01 :mod (s2 / such)) :arg1-of (c2 / cause-01 :arg0 (c3 / correct-02 :arg1 (o / over-sensitivities :manner (p / political) :topic (a / and :op1 (e2 / ethnicity) :op2 (r / religion)))))))
(p / put-03 :arg1 (l / limit-01 :arg1 (r / request-01 :arg1 (v / vote-01 :mod (a / automatic) :mod (a2 / automatic)))) :arg2 (r2 / request-01 :mod (t / three-year)))
(f / find-02 :arg1 (g / guilty-01 :arg1 (h / he)) :arg1-of (c / cause-01 :arg0 (d / doubt-01 :arg1 (s / standard :mod (c2 / criminal-03) :consist-of (t / thing :arg0-of (p / prove-01)) :mod (g2 / ground :quant (s2 / series))))))
(m / multi-sentence :snt1 (i / idiot) :snt2 (r / realize-01 :arg0 (i2 / idiot) :arg1 (b / be-located-at-91 :arg1 (i3 / idiot) :arg2 (a / air) :mod (s / still))))
(m / multi-sentence :snt1 (l / like-02 :arg0 (i / i) :arg1 (a / apologize-01 :arg0 (i2 / i) :arg1 (a2 / apologize-01 :arg0 (i3 / i) :arg1 (c / comment-01 :arg0 (i4 / i) :arg1-of (m2 / make-01 :arg0 (i5 / i) :time (n / night :mod (l2 / last)) :time (a3 / after :op1 (c2 / convene-01 :arg1 (w / woman)))))))) :snt2 (s / say-01 :arg0 (h / he) :arg1 (p / person :arg2-of (s2 / staff-01 :arg1 (c3 / cbc)) :mod (o / olympic))))
(a / and :op1 (t / take-out-11 :arg0 (s / she) :arg1 (k / knickers :location (m / middle :part-of (f / floor :mod (s2 / shop))))) :op2 (s3 / stripped :arg0 (s4 / she) :arg1 (a2 / and :op1 (t2 / tights :poss (s5 / she)) :op2 (p / pants :arg1 (s6 / she)))) :op3 (p2 / put-01 :arg0 (s7 / she) :arg1 (t3 / they) :arg2 (o / on)))
(s / say-01 :arg0 (p / person :arg0-of (l / live-01 :location (t / town :mod (k / kent))) :arg0-of (l2 / live-01 :location (t2 / town :mod (k2 / kent)))) :arg1 (' / ' :arg1 (p2 / person :arg0-of (d / disgust-01)) :arg2 (t3 / think-01 :arg0 (p3 / person) :arg1 (a / and :op1 (w / wear-01 :arg1 (p4 / person :mod (a2 / another))) :op2 (c / cleaned :arg1 (h / haven) :degree (t4 / total))))) :li 33)
(s / say-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (p2 / person :arg0-of (h2 / have-org-role-91 :arg1 (p3 / political-party :name (n / name :op1 "N-A")) :arg2 (s2 / spokesman))) :arg2 (s3 / spokesman))) :arg1 (r / realize-01 :arg0 (p4 / person) :arg1 (i / incident :arg0-of (c / cause-01 :arg1 (i2 / incident :arg1-of (p5 / place-01 :location (s4 / store :name (n2 / name :op1 (t / tuesday) :op2 (a / august) :op3 9) :poss (w / we))))))))
(s / scrawled :arg1 (w / wall :poss (r / room :part-of (h / house) :quant (m / many))) :location (a / across :op1 (t / they)))
(s / say-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (p2 / police :mod (d / devon)) :arg2 (c / crowing))) :arg1 (s2 / send-01 :arg0 (p3 / person) :arg1 (w / warn-01 :arg0 (p4 / person) :arg2 (p5 / person :mod (o / other) :arg0-of (c2 / continue-01 :arg1 (f / flouts :arg0 (p6 / person) :arg1 (r / rule)))) :arg1-of (c3 / clear-06)) :arg1-of (c4 / clear-06)))
(r / recommend-01 :arg1 (l / leave-17 :arg1 (p / profit-01 :time (y / year :mod (l2 / last)))) :time (m / meantime))
(m / multi-sentence :snt1 (p / possible-01 :arg1 (d / do-02 :arg0 (w / we) :arg1 (o / or :op1 (a / anger-01 :arg1 (w2 / we)) :op2 (s / suppress-01 :arg1 (w3 / we)) :op3 (h / hide-01 :arg0 (w4 / we)) :op4 (h2 / hide-01 :arg0 (w5 / we) :location (i / inside)) :op5 (k / keep-02 :arg0 (w6 / we) :arg1 (i2 / inside :op1 (o2 / or :op1 (p2 / person :arg0-of (h3 / have-rel-role-91 :arg1 (w7 / we) :arg2 (f / friend))) :op2 (p3 / person :arg0-of (h4 / have-rel-role-91 :arg1 (w8 / we) :arg2 (f2 / friend))) :op3 (p4 / person :arg0-of (h5 / have-rel-role-91 :arg1 (w9 / we) :arg2 (f3 / friend))) :op5 (p5 / person :arg0-of (h6 / have-rel-role-91 :arg1 (w10 / we) :arg2 (f4 / friend))) :op5 (p6 / person :arg0-of (h7 / have-rel-role-91 :arg1 (w11 / we) :arg2 (f5 / friend))) :op6 (p7 / person :arg0-of (h8 / have-rel-role-91 :arg1 (w12 / we) :arg2 (f6 / friend))) :op6 (p8 / person :arg0-of (h9 / have-rel-role-91 :arg1 (w13 / we) :arg2 (f7 / friend))) :op7 (p9 / person :arg0-of (h10 / have-rel-role-91 :arg1 (w14 / we) :arg2 (f8 / friend))) :op6 (p10 / person :arg0-of (h11 / have-rel-role-91 :arg1 (w15 / we) :arg2 (f9 / friend))) :op6 (p11 / person :arg0-of (h12 / have-rel-role-91 :arg1 (w16 / we) :arg2 (f10 / friend))) :op6 (p12 / person :arg0-of (h13 / have-rel-role-91 :arg1 (w17 / we) :arg2 (f11 / friend))) :op7 (p13 / person :arg0-of (h14 / have-rel-role-91 :arg1 (w18 / we) :arg2 (f12 / friend))) :op8 (p14 / person :arg0-of (h15 / have-rel-role-91 :arg1 (w19 / we) :arg2 (f13 / friend))) :op8 (p15 / person :arg0-of (h16 / have-rel-role-91 :arg1 (w20 / we) :arg2 (f14 / friend))) :op8 (p16 / person :arg0-of (h17 / have-rel-role-91 :arg1 (w21 / we) :arg2 (f15 / friend))) :op8 (p17 / person :arg0-of (h18 / have-rel-role-91 :arg1 (w22 / we) :arg2 (f16 / friend))) :op8 (p18 / person :arg0-of (h19 / have-rel-role-91 :arg1 (w23 / we) :arg2 (f17 / friend))) :op8 (p19 / person :arg0-of (h20 / have-rel-role-91 :arg1 (w24 / we) :arg2 (f18 / friends))) :op8 (t / thing :mod (o3 / other) :arg1-of (d2 / do-02 :arg0 (w25 / we) :arg1-of (n / normal-02))))))))))
(a / and :op1 (d / direct-02 :arg1-of (d2 / direct-02 :degree (q / quite)) :domain (p / person :arg0-of (h / have-rel-role-91 :arg1 (c / child) :arg2 (c2 / child))) :arg1-of (d3 / direct-02 :degree (q2 / quite))) :op2 (l / literally :arg1 (p2 / person)) :op3 (a2 / and :op1 (s / spontaneous :arg1 (p3 / person)) :op2 (e / express-01 :arg0 (p4 / person) :arg1 (t / thing :arg1-of (f / feel-01 :arg0 (p5 / person)))) :arg1-of (c3 / cause-01 :arg0 (a3 / and :op1 (e2 / express-01 :arg0 (p6 / person) :arg1 (f2 / feel-01 :arg0 (p7 / person))) :op2 (h2 / hold-01 :arg0 (p8 / person) :arg1 (c4 / captive) :manner (e3 / emotions :arg0 (p9 / person) :arg1 (e4 / emotions :mod (v / various) :poss (p10 / person))) :frequency (o / often))))))
(a / and :op1 (p / promote-02 :arg0 (s / society :name (n / name :op1 (' / '')) :mod (r / rozentals)) :arg1 (r2 / relation-03 :arg0 (a2 / and :op1 (c / country :name (n2 / name :op1 "N-A")) :op2 (c2 / country :name (n3 / name :op1 "N-A"))) :arg2 (f / friendly) :arg1-of (f2 / friendly-01))) :op2 (n4 / name-01 :arg0 (s2 / society) :arg1 (r3 / relation-03) :arg2 (c3 / country)) :op3 (n5 / name-01 :arg0 (s3 / society) :arg1 (r4 / relation-03) :arg2 (c4 / country)) :time (a3 / after :op1 (o / offer-01 :arg0 (c5 / country) :arg1 (s4 / stop-01 :arg0 (p2 / person :arg0-of (t / travel-01) :ord (o2 / ordinal-entity :value 1) :arg0-of (t2 / travel-01)) :arg1 (f3 / finland :arg0 (p3 / person) :arg1 (p4 / person :arg0-of (t3 / travel-01) :mod (s5 / small) :arg0-of (t4 / travel-01))) :ord (o3 / ordinal-entity :value 1)) :prep-with (v / view-01 :arg0 (p5 / person) :arg1 (a4 / art :mod (a5 / art :mod (n6 / nation)) :mod (l / latvian))))))
(c / change-01 :arg1 (n / nothing) :mod (f / far :degree (s / so)) :mod (o / official))
(r / release-01 :arg0 (t / they) :arg1 (h / hostage :quant (a / approximately :op1 270)) :time (l / late :degree (m / more)))
(f / force-01 :arg0 (f2 / force :arg0-of (t / threaten-01)) :arg1 (i / increase-01 :arg1 (s / secure-02 :arg1 (f3 / facility))))
(r / reveal-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (c / criminal-organization :name (n / name :op1 "N-A")) :arg2 (p2 / president))) :arg1 (a / and :op1 (e / essential :domain (i / issue-02 :arg0 (d / drowning))) :op2 (s / speak-01 :arg0 (p3 / person) :topic (p4 / program :arg1-of (r2 / relevant-01)) :mod (a2 / also) :time (a3 / after :op1 (n2 / now) :quant (a4 / almost :op1 (b / between :op1 (t / temporal-quantity :quant (N / N-A) :unit (w / week)) :op2 (t2 / temporal-quantity :quant (N2 / N-A) :unit (w2 / week))))))))
(c / compensate-01 :arg0 (g / grade :mod (t / total)) :arg2 (p / program :name (n / name :op1 (l / latvenergo)) :mod (p2 / program :mod (s / stock :mod (f / fish)))) :arg4 (m / monetary-quantity :quant (1 / 1,035,000) :unit (e / euro)))
(a / and :op1 (a2 / achieve-01 :arg0 (p / person :mod (c / country :name (n / name :op1 "Austria"))) :arg1 (r / record :mod (n2 / nation :mod (n3 / new)) :mod (n4 / new)) :arg1-of (p2 / possible-01)) :op2 (w / win-01 :arg0 (p3 / person) :arg1 (p4 / place :ord (o / ordinal-entity :value 2)) :arg2 (p5 / place :ord (o2 / ordinal-entity :value 2)) :location (e / event :name (n5 / name :op1 (p6 / prestigious) :op2 (h / heptathlon) :op3 (h2 / heptathlon)))))
(r / report-01 :arg0 (a / agency :name (n / name :op1 "N-A") :mod (n2 / news)) :arg1 (l / lose-02 :arg0 (b / borodavko :name (n3 / name :op1 (l2 / latvian) :op2 (j / jevgenijs)) :arg0-of (f / fight-01)) :arg1 (f2 / fight-01 :arg0 (h / he) :ord (o / ordinal-entity :value 1)) :location (c / coffin :mod (o2 / over :op1 (v / value-interval :op1 100 :op2 100)))) :time (p / previous))
(j / judge-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg2 (p2 / person :arg0-of (h2 / have-org-role-91 :arg3 (j2 / judge-01))))) :arg1 (c / court :mod (c2 / country :name (n / name :op1 "N-A")) :arg2-of (a / appeal-01)) :arg2 (c3 / court :mod (c4 / country :name (n2 / name :op1 "N-A"))) :arg3 (c5 / court :mod (c6 / country)))
(f / flees :arg0 (c / customer) :arg1 (m / motor) :time (d / drive-01 :arg0 (c2 / customer) :manner (t / test-01)))
(b / bring-01 :arg1 (p / person :arg0-of (h / have-org-role-91 :arg1 (c / city-district :name (n / name :op1 "N-A") :mod (g / great)) :arg2 (7 / 7s :mod (g2 / great)))) :arg2 (h2 / halt-01 :arg0 (p2 / person) :arg1 (h3 / hurdles :mod (f / final)) :location (h4 / hurdles :mod (f2 / final) :time (n2 / night :mod (t / thursday) :time-of (b2 / beat-03 :arg1 (p3 / person) :arg2 (s / stadium :quant (4 / 43-7) :location (s2 / stadium :location (d / deodoro))) :time (d2 / date-entity :dayperiod (N / N-A)))))))
(b / beat-03 :arg0 (p / person :mod (c / country :name (n / name :op1 "N-A"))) :arg1 (p2 / person :quant (2 / 20-5)) :arg2 (a / and :op1 (p3 / person :mod (c2 / country :name (n2 / name :op1 "N-A"))) :op2 (p4 / person :arg0-of (h / have-org-role-91 :arg1 (c3 / country) :arg3 (l / lead-02 :arg0 (p5 / person)))) :op3 (p6 / person :arg0-of (h2 / have-org-role-91 :arg1 (c4 / country) :arg3 (l2 / lead-02 :arg0 (p7 / person)))) :op4 (p8 / person :arg0-of (h3 / have-org-role-91 :arg1 (c5 / country) :arg3 (l3 / lead-02 :arg0 (p9 / person)))) :op5 (p10 / person :arg0-of (h4 / have-org-role-91 :arg1 (c6 / country) :arg3 (l4 / lead-02 :arg0 (p11 / person)))) :op6 (p12 / person :arg0-of (h5 / have-org-role-91 :arg1 (c7 / country) :arg3 (a2 / apprentice-01 :arg0 (p13 / person)))) :op6 (p14 / person :arg0-of (h6 / have-org-role-91 :arg1 (c8 / country) :arg3 (a3 / apprentice-01 :arg0 (p15 / person)))) :op6 (p16 / person :arg0-of (h7 / have-org-role-91 :arg1 (b2 / britain :mod (e / each))))) :time (e2 / early :degree (m / more) :time (d / day)))
(t / think-01 :arg0 (p / person :arg0-of (s / spend-02 :arg1 (t2 / thing :arg1-of (t3 / think-01 :arg0 (p2 / person)) :ord (o / ordinal-entity :value 1)))) :arg1 (s2 / spend-02 :arg0 (p3 / person) :arg1 (m / more :mod (l / little) :compared-to (a / attempt-01 :arg0 (p4 / person) :arg1 (p5 / process-02 :arg0 (p6 / person) :arg1 (p7 / process-02 :arg0 (p8 / person) :arg1 (p9 / process-02 :arg0 (p10 / person) :arg1 (p11 / process-02 :arg0 (p12 / person) :arg1 (p13 / process-02 :arg0 (p14 / person))))))))) :prep-in (i / immediate :poss (w / win-01)))
(s / say-01 :arg0 (s2 / she) :arg1 (g / good :degree (m / more :degree (m2 / much :degree (s3 / so))) :domain (t / this)) :arg1-of (s4 / say-01 :arg0 (s5 / she)))
(h / have-purpose-91 :arg1 (o / opportunity :poss (s / spain)) :arg2 (r / reduce-01 :arg1 (d / deficit :mod (b / budget)) :manner (f / fail-01 :arg1 (s2 / set-up-03 :arg1 (g / government-organization :arg0-of (g2 / govern-01) :mod (n / new))))))
(m / mean-01 :arg1 (i / it) :arg2 (o / obligate-01 :arg2 (g / go-06 :arg0 (g2 / government-organization :arg0-of (g3 / govern-01 :arg1 (c / country))) :arg1 (m2 / measure-02 :mod (a / austerity) :arg1-of (r / relate-01 :arg2 (p / program :mod (s / stability) :arg1-of (i2 / include-91 :arg2 (p2 / product :arg1-of (g4 / gross-03) :mod (d / domestic) :quant (p3 / percentage-entity :value (N / N-A))))))))))
(c / complicate-01 :arg1 (s / situation) :degree (m / more) :prep-in (c2 / case :mod (s2 / spain)))
(l / list-01 :arg1 (a / area :name (n / name :op1 (s / swim-01) :op2 (r / riga))) :arg2 (a2 / area :location-of (s2 / swimming)) :mod (a3 / also))
(e / explain-01 :arg0 (p / person :arg0-of (o / organize-01 :arg1 (c / campaign-01))) :arg1 (a / and :op1 (p2 / possible-01 :arg1 (s / see-01 :arg0 (p3 / person :arg0-of (o2 / organize-01 :arg1 (c2 / campaign-01))) :arg1 (p4 / person :arg0-of (h / have-rel-role-91 :arg2 (d / dd1))))) :op2 (p5 / place-01 :polarity - :arg1 (s2 / sign) :arg2 (e2 / everywhere))) :mod (a2 / almost))
(a / and :op1 (' / '' :arg1 (n / number :arg1-of (a2 / average-04) :quant-of (a3 / and :op1 (n2 / number :name (n3 / name :op1 (- / -lrb-) :op2 (-2 / -lrb-) :op3 (-3 / -rrb-))) :op2 (-4 / -rrb- :name (n4 / name :op1 (v / vakarbulli))) :op3 (-5 / -rrb- :mod (v2 / vecaki)))) :arg2-of (f / fortunate-01 :polarity -)) :op2 (h / have-purpose-91 :arg1 (-7 / -rrb-) :arg2 (a4 / and :op1 (h2 / huge :mod (h3 / huge)) :op2 (g / goal :mod (h4 / huge)) :op3 (g2 / goal :mod (v3 / vecaki))) :arg2-of (f2 / fortunate-01 :polarity -)) :purpose (r / reduce-01 :arg0 (a5 / and) :arg1 (g3 / garbage :arg1 (p / product :name (n5 / name :op1 "N-A")) :arg2 (u / unit :quant (A / A-135) :arg0-of (h5 / have-org-role-91 :arg1 (e / environment) :arg2 (a6 / activist))))))
(e / encourage-01 :arg0 (p / person :name (n / name :op1 "N-A")) :arg1 (p2 / person) :arg2 (p3 / pursue-01 :arg0 (p4 / person) :arg1 (p5 / position-02 :arg0 (p6 / person) :arg2 (o / office :mod (e2 / executive) :mod (p7 / president)))) :arg1-of (a / allege-01))
(a / and :op1 (e / eduardovich :mod (a2 / anton)) :op2 (k / know-02 :arg0 (i / i) :arg1 (o / other :mod (e2 / each)) :arg1-of (l / long-03)))
(' / ' :arg1 (a / athletes :location (s / sand :mod (r / rio))))
(a / and :op1 (i / impatiently :arg1 (w / we) :time (e / evening)) :op2 (l / look-04 :arg0 (w2 / we) :arg1 (m / match-01 :arg0 (w3 / we) :arg1 (m2 / match-03 :arg0 (/ / / :name (n / name :op1 (b / beaches) :op2 (/2 / /) :op3 (/3 / /)) :mod (s / samoilovs)) :prep-against (/4 / / :name (n2 / name :op1 (e2 / evandro) :op2 (/5 / /)))))))
(r / resemble-01 :arg1 (r2 / resemble-01 :arg1 (i / intrigueing) :arg2 (g / group :mod (' / '' :mod ('2 / ''))) :mod (j / just)) :arg1-of (c / cause-01 :arg0 (o / over :op1 (p / person :arg1-of (l / lose-03 :arg0 (p2 / person))))))
(p / possible-01 :arg1 (s / shock-01 :arg0 (f / find-01 :arg1 (s2 / shape :mod (g / good :degree (m / most)) :poss (t / they)))))
(c / cause-01 :arg0 (p / possible-01 :arg1 (e / equate-01 :arg1 (i / it) :arg2 (t / term :mod (n / nucleus)))) :arg1 (r / risky :domain (i2 / it)))
(s / see-01 :arg0 (i / i) :arg1 (a / and :op1 (d / differ-02 :arg1 (a2 / and :op1 (h / hair :arg1-of (l / long-03)) :op2 (h2 / hair :arg1-of (l2 / long-03)) :op3 (g / guy :mod (t / this))) :arg2 (s2 / stereotype :mod (c / conventional) :part-of (a3 / and :op1 (s3 / stage) :op2 (c2 / comment-01 :arg0 (j / journalist :name (n / name :op1 (' / '')))))) :op2 (c3 / comment-01 :arg0 (j2 / journalist :mod (m / music) :mod ('2 / '')) :arg3 (r / realize-01 :arg0 (j3 / journalist))))))
(v / value-01 :arg1 (t / this) :arg1-of (h / high-02 :degree (m / most)) :time (s / since :op1 (d / date-entity :decade (N / N-A))) :location (a / above :op1 (v2 / value-interval :op1 2012 :op2 1)) :time (s2 / since :op1 (p / post-01 :arg1 (y / year :mod (l / last) :time-of (p2 / post-01 :arg1 (p3 / percentage-entity :value (N2 / N-A) :mod (p4 / positive)))))))
(d / decrease-01 :arg1 (t / thing :arg2-of (p / price-01 :arg1 (t2 / thing :arg2-of (p2 / price-01)))) :arg3 (a / and :op1 (p3 / percentage-entity :value (N / N-A)) :op2 (f / footwear) :op3 (e / equipment :name (n / name :op1 (h / household))) :op4 (e2 / equipment :name (n2 / name :op1 (h2 / household))) :op5 (m / maintain-01 :mod (r / routine)) :op6 (m2 / maintain-01 :arg1 (h3 / health :quant (b / between :op1 2.2 :op2 0.1)))))
(m / mean-01 :arg0 (y / you) :arg2 (t / that))
(e / explode-01 :arg1-of (e2 / explode-01 :mod (s / such)) :mod (s2 / such))
(n / need-01 :arg1 (p / produce-01 :arg1 (h / hemoglobin :arg0-of (i / intercept-01 :arg1 (o / oxygen :prep-to (a / and :op1 (m / muscle) :op2 (b / brain)))))) :mod (i2 / iron))
(l / lenses :arg1 (s / skill :mod (f / feature-warping) :arg0-of (g / generate-01 :arg1 (d / day :quant (m / more-than :op1 30000000) :arg1-of (e / enhance-01)))) :manner (b / blunt-02))
FAILED_TO_PARSE#Number of opening and closing brackets doesn't match.
(p / phone-number-entity :value (N / N-A))
(a / and :op1 (t / take-01 :arg0 (r / round :ord (o / ordinal-entity :value 1)) :arg1 (p / place) :time (d / date-entity :time (t2 / today)) :ord (o2 / ordinal-entity :value 1)) :op2 (b / be-located-at-91 :arg1 (a2 / and :op1 (r2 / round :ord (o3 / ordinal-entity :value 1)) :op2 (d2 / date-entity :year (N / N-A))) :arg2 (p2 / place) :time (d3 / day :ord (o4 / ordinal-entity :value 2) :ord (o5 / ordinal-entity :value 2) :ord (o6 / ordinal-entity :value 2) :ord (o7 / ordinal-entity :value 2))))
(v / visit-01 :arg0 (g / group :consist-of (p / person :arg0-of (h / have-org-role-91 :arg2 (r / region :mod (e / engure))))) :arg1 (p2 / person :arg0-of (r2 / reside-01 :arg1 (p3 / perform-01 :arg0 (p4 / person)))) :arg2 (p5 / person :arg0-of (r3 / reside-01 :arg1 (p6 / perform-01 :arg0 (p7 / person)))) :arg0-of (c / cause-01 :arg1 (l / love-01 :arg0 (a / audience) :arg1 (p8 / perform-01 :arg0 (g2 / group :name (n / name :op1 (r4 / rudens)) :mod (s / senior)) :name (n2 / name :op1 (r5 / rudens) :op2 (r6 / ritmi) :op3 (- / -lrb-) :op4 (-2 / -lrb-) :op5 (-3 / -rrb-) :op6 (-4 / -rrb-) :op7 (f / folks) :op6 (-5 / -rrb-) :op7 (f2 / folks) :op6 (g3 / golden) :op7 (g4 / golden) :op8 (g5 / golden) :op8 (g6 / golden) :op8 (g7 / golden) :op9 (g8 / golden) :op8 (g9 / golden) :op8 (g10 / golden) :op8 (g11 / golden) :op9 (g12 / golden) :op8 (g13 / golden) :op8 (g14 / golden) :op8 (g15 / golden) :op8 (g16 / golden) :op8 (g17 / golden) :op8 (g18 / golden) :op8 (g19 / golden) :op8 (g20 / golden) :op8 (g21 / golden) :op8 (g22 / golden) :op8 (g23 / golden) :op9 (g24 / golden) :op8 (g25 / golden) :op8 (g26 / golden) :op9 (-6 / -rrb-) :op10 (-7 / -rrb-) :op10 (-8 / -rrb-) :op10 (-9 / -rrb-))))))
(c / contrast-01 :arg1 (p / possible-01 :arg1 (o / overcome-01 :arg1 (t / thing :arg1-of (o2 / overcome-01)) :time (a / always))) :arg2 (a2 / answer-01 :arg1 (q / question-01 :mod (e / every) :arg1-of (q2 / question-01)) :arg2 (i / it)))
(s / say-01 :arg0 (p / police :mod (p2 / political-party :name (n / name :op1 "N-A"))) :arg1 (a / and :op1 (l / lay :arg0 (w / woman) :arg1 (d / dark :location (' / '' :name (n2 / name :op1 (r / road)) :mod (d2 / desperate)))) :op2 (h / hit-01 :arg0 (v / vehicle :quant (s2 / several)) :arg1 (v2 / vehicle :quant (s3 / several)))) :medium (s4 / statement))
(d / die-01 :arg1 (s / she) :location (s2 / scene))
(c / consider-01 :arg1 (n / number :mod (s / small-score :mod (m / mutual)) :arg1-of (a / adverse :degree (m2 / most) :time (a2 / after :op1 (s2 / suffer-01 :arg0 (l / lose-02 :mod (a3 / apparent)) :arg1 (m3 / match-03 :mod (t / this)))))))
(p / possible-01 :arg1 (c / consider-01 :arg1 (a / and :op1 (b / begin-01 :arg0 (c2 / city :arg0-of (m / much-admired :arg1 (s / star :mod (b2 / big)))) :arg1 (c3 / career :poss (c4 / city))) :op2 (g / gain-02 :arg0 (c5 / city) :arg1 (i / inspire-01)))))
(s / seem-01 :arg1 (b / blame-01 :arg1 (i / it) :arg2 (e / everything)) :time (s2 / sudden) :quant (a / all))
(t / tell-01 :arg0 (p / person :quant 2 :arg0-of (h / have-org-role-91 :arg2 (p2 / president))) :arg1 (h2 / hadn :arg0 (p3 / person) :arg1 (t2 / topic) :mod (e / even :degree (t3 / total))) :arg2 (c / conference :mod (p4 / press)) :time (a / after :op1 (t4 / temporal-quantity :quant (N / N-A) :unit (h3 / hour) :mod (a2 / almost) :arg1-of (t5 / talk-01 :time (i / initial)))))
(a / and :op1 (c / collapse-01 :arg1 (i / it) :time (b / before :op1 (n / now) :quant (n2 / nearly :op1 (t / temporal-quantity :quant (N / N-A) :unit (y / year))))) :op2 (o / obligate-01 :arg2 (b2 / bailed :arg1 (i2 / it))))
(u / use-01 :arg1 (b / bank :mod (r / royal) :part-of (c / country :name (n / name :op1 "N-A"))) :arg2 (c2 / customer :mod (c3 / country :name (n2 / name :op1 "N-A"))) :concession-of (i / initialised :polarity - :arg1 (b2 / bank)))
(m / multi-sentence :snt1 (s / say-01 :arg0 (i / i) :arg1 (h / have-03 :polarity - :arg0 (w / we) :arg1 (a / aspirations :mod (g / globe)) :time (n / no-longer))) :snt2 (h2 / have-03 :arg0 (w2 / we) :arg1 (a2 / aspirations :arg1-of (l / local-02))))
(k / know-03 :arg0 (n / no-one) :time (y / yet))
(s / set-02 :arg0 (p / portion :part-of (f / floor :part-of (s2 / she))) :arg1 (p2 / pass-03 :arg1 (p3 / pass-03 :arg1 (p4 / pass-03 :arg1 (i / index :mod (s3 / sign-01 :arg0 (s4 / she))))) :arg2 (m / music :mod (l / latin) :arg0-of (f2 / fit :location (h / home :location (h2 / home :location (s5 / street)) :location (o / outside :op1 (a / arena :mod (r / rio))))))) :li 1)
(t / traced :arg1 (c / casing :name (n / name :op1 (s / shell) :op2 (s2 / shell) :op3 (c2 / casings))) :arg2 (a / and :op1 (w / weapon :mod (s3 / style :mod (a2 / assault)) :arg1-of (d / differ-02)) :op2 (w2 / weapon :mod (s4 / style :mod (a3 / assault)) :arg1-of (d2 / differ-02))))
(a / and :op1 (n / need-01 :arg0 (p / person :arg0-of (h / have-rel-role-91 :arg2 (d / dh))) :arg1 (a2 / act-02 :arg0 (p2 / person) :time (n2 / now))) :op2 (c / consult-01 :arg0 (p3 / person) :arg1 (p4 / person :mod (j / junior) :arg0-of (c2 / concern-02 :arg1 (' / '')) :mod (j2 / junior))))
(a / and :op1 (l / lambasts :arg0 (p / person :arg0-of (h / have-org-role-91 :arg2 (m / minister :mod (e / ex-cabinet)))) :arg1 (a2 / and :op1 (p2 / police) :op2 (p3 / person :arg0-of (e2 / elect-01)) :op3 (p4 / person :arg0-of (h2 / have-org-role-91 :arg2 (h3 / head-of-state))) :op4 (p5 / person :arg0-of (h4 / have-org-role-91 :arg2 (h5 / head-of-state))) :op5 (p6 / person :arg0-of (h6 / have-org-role-91 :arg2 (h7 / head-of-state)))) :purpose (i / ignore-01 :arg0 (p7 / person) :arg1 (t / thing :arg0-of (e3 / evidence-01 :arg1 (a3 / abuse-01 :arg1 (e4 / elect-01)))))) :op2 (b / because :arg0 (p8 / person) :arg1 (t2 / thing :arg0-of (e5 / evidence-01 :arg1 (a4 / abuse-01 :arg1 (e6 / elect-01))))))
(s / say-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (c / community) :arg2 (s2 / secretary :mod (c2 / community)) :time (f / former))) :arg1 (b / bad-07 :arg1 (p2 / person :arg0-of (v / vote-01 :arg1 (g / ground :mod (r / religious)))) :degree (s3 / so) :arg0-of (c3 / cause-01 :arg1 (r2 / recommend-01 :arg1 (a / allow-01 :arg1 (p3 / put-01 :arg1 (p4 / police) :arg2 (o / outside :op1 (s4 / station :mod (p5 / polling)) :purpose (p6 / protect-01 :arg0 (p7 / police) :arg1 (p8 / person :arg0-of (v2 / vote-01) :mod (f2 / frightened))))))))) :time (n / now))
(e / end-01)
(m / multi-sentence :snt2 (s / sorry-01 :arg1 (i / i) :degree (v / very)) :snt2 (s2 / sorry-01 :arg1 (i2 / i) :degree (v2 / very)))
(l / lovely :domain (g / go-02 :arg0 (t / they) :time (f / final)) :time (n / now))
(e / establish-01 :arg1 (p / person :quant 2007))
(p / prohibit-01 :arg0 (a / and :op1 (p2 / person :arg0-of (h / have-org-role-91 :arg1 (c / city-district :name (n / name :op1 "N-A") :location (s / south)) :arg2 (m / mayor))) :op2 (p3 / person :arg0-of (h2 / have-org-role-91 :arg2 (m2 / mayor))) :op3 (p4 / person :arg0-of (h3 / have-org-role-91 :arg2 (m3 / mayor))) :op4 (p5 / person :arg0-of (h4 / have-org-role-91 :arg2 (m4 / mayor))) :op5 (p6 / person :arg0-of (h5 / have-org-role-91 :arg2 (m5 / mayor))) :op6 (p7 / person :arg0-of (h6 / have-org-role-91 :arg2 (m6 / mayor))) :op6 (p8 / person :arg0-of (h7 / have-org-role-91 :arg2 (o / official)) :arg1-of (l / local-02)) :op6 (p9 / person :arg0-of (h8 / have-org-role-91 :arg2 (o2 / official)) :arg1-of (l2 / local-02)) :op6 (p10 / person :arg0-of (h9 / have-org-role-91 :arg2 (o3 / official)) :arg1-of (l3 / local-02)) :op7 (p11 / person :arg0-of (h10 / have-org-role-91 :arg2 (o4 / official)) :arg1-of (l4 / local-02))) :arg1 (w / wear-01 :arg0 (p12 / person) :arg1 (s2 / swimsuits :mod (b / burkini))))
(a / and :op1 (w / wasn :arg0 (i / it) :arg1 (t / thing :arg1-of (a2 / aspire-01 :arg0 (h / he))) :degree (t2 / total)) :op2 (c / crave :polarity - :arg0 (h2 / he) :arg1 (f / fame-01)))
(k / know-01 :arg0 (w / we) :arg1 (a / and :op1 (e / event :beneficiary (w2 / we)) :op2 (t / thing :manner-of (h / handle-01 :arg0 (w3 / we) :arg1 (i / it)))) :time (o / or :op1 (f / feel-01 :arg0 (a2 / adult) :arg1 (a3 / anger-01)) :op2 (w4 / worry-01)) :mod (u / usual))
(d / decide-01 :arg0 (y / you) :arg1 (s / spend-01 :arg0 (y2 / you) :arg1 (r / rest :part-of (l / life :poss (y3 / you))) :manner (t / together)))
(h / have-03 :arg0 (s / state :mod (r / religious-group :name (n / name :op1 "N-A"))) :arg1 (c / civilian :quant 2000) :location (s2 / syria))
(i / information :polarity - :topic (n / number :quant-of (p / person :arg0-of (f / flee-05 :arg1 (m / manbij)))))
(r / report-01 :arg0 (p / police) :arg1 (d / decide-01 :arg0 (c / court :mod (c2 / country :name (n / name :op1 "N-A"))) :arg1 (d2 / decide-01 :arg0 (c3 / court :mod (c4 / country :name (n2 / name :op1 "N-A"))) :arg1 (f / fate :poss (c5 / child)))) :time (i / immediate))
(f / force-01 :arg0 (f2 / force :arg0-of (t / threaten-01)) :arg1 (i / increase-01 :arg1 (s / secure-02 :arg1 (f3 / facility))))
(a / announce-01 :arg0 (o / organization :name (n / name :op1 "ministry" :op2 "of" :op3 "interior")) :arg1 (i / increase-01 :arg0 (s / slovakia) :arg1 (m / measure-02 :arg1 (s2 / security) :location (f / facility :quant (s3 / several))) :time (a2 / after :op1 (t / threaten-01 :arg1-of (s4 / specify-01 :polarity -)))))
(a / and :op1 (p / possible-01 :polarity - :arg1 (c / comment-01 :arg0 (i / i) :arg3 (t / thing :arg0-of (c2 / cause-01 :arg1 (a2 / arrive-01 :arg1 (h / he) :arg4 (a3 / accreditation :mod (o / olympic)) :prep-with (a4 / accreditation :mod (c3 / coach))))))) :op2 (m / mean-02 :arg1 (j / jakubovskis) :arg2 (j2 / jakubovskis)))
(c / contrast-01 :arg1 (c2 / come-01 :polarity - :arg1 (i / i) :arg4 (j / janeiro :mod (d / de) :arg1-of (e / emerge-01 :arg0 (i2 / i)))) :arg2 (a / and :op1 (w / work-01 :arg0 (i3 / i) :location (h / here)) :op2 (s / spend-02 :arg0 (i4 / i) :arg1 (t / time :poss (i5 / i)) :purpose (t2 / try-01 :arg0 (i6 / i) :arg1 (i7 / implement-01 :arg0 (i8 / i) :arg1 (p / program :mod (q / quadrennial)))))))
(a / and :op1 (r / release-01 :arg1 (a2 / and :op1 (p / person :arg0-of (s / smolts :arg1 (f / fish))) :op2 (p2 / person :arg0-of (h / have-org-role-91 :arg1 (s2 / species))) :op3 (p3 / person :arg0-of (h2 / have-org-role-91 :arg1 (s3 / species) :arg3 (l / larvae))) :op4 (p4 / person :arg0-of (h3 / have-org-role-91 :arg1 (s4 / species) :arg3 (l2 / larvae))) :op5 (p5 / person :arg0-of (h4 / have-org-role-91 :arg1 (s5 / species) :arg3 (l3 / larvae))))) :op2 (r2 / release-01 :arg1 (y / year :mod (e / each))))
(s / say-01 :arg0 (t / thing :arg1-of (c / call-01 :arg2 (c2 / conference))) :arg1 (p / pick-01 :arg0 (p2 / park :name (n / name :op1 "N-A") :arg1-of (p3 / predicting)) :arg1 (' / '' :quant (d / degree :quant (s2 / some)))) :medium (c3 / conference :mod (c4 / conference)))
(j / judge-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg2 (p2 / person :arg0-of (h2 / have-org-role-91 :arg3 (j2 / judge-01))))) :arg1 (c / court :mod (c2 / country :name (n / name :op1 "N-A")) :arg2-of (a / appeal-01)) :arg2 (c3 / court :mod (c4 / country :name (n2 / name :op1 "N-A"))) :arg3 (c5 / court :mod (c6 / country)))
(s / say-01 :arg0 (h / he) :arg1 (u / unfit :arg1 (p / person :mod (t / trumps)) :arg2 (o / office)))
(c / contrast-01 :arg1 (s / stop-01 :arg0 (w / wise :mod (s2 / superb)) :arg1 (n / nakarawa :name (n2 / name :op1 (m / man-mountain)) :mod (m2 / man-mountain)) :source (s3 / scoring :ord (o / ordinal-entity :value 3))) :arg2 (p / possible-01 :polarity - :arg1 (p2 / predict-01 :arg1 (f / fiji) :mod (o2 / only))))
(p / possible-01 :arg1 (t / tour-01 :arg0 (p2 / person :arg0-of (a / attend-01)) :arg1 (a2 / and :op1 (r / room :mod (c / central)) :op2 (r2 / room :mod (c2 / cactus)) :op3 (r3 / room :mod (t2 / tea)) :op4 (r4 / room :mod (t3 / tea)))))
(c / complicate-01 :arg1 (s / situation) :degree (m / more) :prep-in (c2 / case :mod (s2 / spain)))
(c / contrast-01 :arg1 (e / explain-01 :arg0 (c2 / council :mod (c3 / city :mod (r / riga))) :arg1 (t / thing :arg1-of (b / base-02 :arg2 (d / day)))) :arg2 (d2 / difficult :domain (r2 / reigns :arg1 (p / person :arg0-of (v / visit-01) :mod (l / littering)))))
(o / or :op1 (g / good :domain (q / quality :mod (w / water))) :op2 (s / satisfactory :arg1 (q2 / quality) :location (e / everywhere)) :time (y / year :mod (t / this)) :mod (j / just))
(m / multi-sentence :snt2 (a / and :op1 (w / work-01 :arg0 (i / i) :manner (t / together) :accompanier (y / you) :duration (m2 / many :op1 (t2 / temporal-quantity :quant (N / N-A) :unit (y2 / year)))) :op2 (w2 / work-01 :arg0 (w3 / we) :manner (s / success) :duration (m3 / many :op1 (t3 / temporal-quantity :quant (N2 / N-A) :unit (y3 / year))))) :snt3 (a2 / and :op1 (w4 / work-01 :arg0 (i2 / i) :manner (t4 / together) :duration (m4 / many :op1 (t5 / temporal-quantity :quant (N3 / N-A) :unit (y4 / year)))) :op2 (d / do-02 :arg0 (w5 / we) :arg1 (i3 / it) :manner (s2 / success))))
(r / rumors :arg1 (r2 / relate-01 :arg1 (c / change-01 :mod (t / this)) :arg2 (s / struggle-01 :arg1 (p / power) :arg2 (e / elite :mod (p2 / politics) :poss (c2 / country)))) :time (m / month :mod (n / next)) :location (c3 / context :poss (s2 / state :mod (c4 / country :name (n2 / name :op1 "N-A")) :mod (c5 / country :name (n3 / name :op1 "N-A")))))
(m / mention-01 :arg1 (i / ivanov :arg0 (p / person :arg0-of (h / have-org-role-91 :arg2 (p2 / president))) :arg1 (b / become-01 :arg1 (p3 / person) :arg2 (p4 / person :arg0-of (r / represent-01 :arg1 (p5 / person :arg0-of (h2 / have-org-role-91 :arg2 (p6 / president))) :arg2 (p7 / person :arg0-of (r2 / represent-01 :arg1 (p8 / person :arg0-of (h3 / have-org-role-91 :arg2 (p9 / president)))) :arg0-of (h4 / have-org-role-91 :arg2 (p10 / president))) :topic (a / and :op1 (e / environment) :op2 (t / transport-01)))))) :mod (e2 / even))
(c / come-01 :arg1 (v / vaino) :arg3 (f / family :arg1-of (h / have-org-role-91 :arg0 (e / elite :mod (c2 / country :name (n / name :op1 "N-A"))) :arg2 (m / member))))
(c / contrast-01 :arg1 (h / have-03 :arg0 (h2 / he) :arg1 (o / opponent :mod (p / prize-winning :degree (m / more))) :mod (i / indeed)) :arg2 (p2 / possible-01 :arg1 (s / surprise-01 :arg0 (a / ambitious) :frequency (s2 / sometimes))))
(c / contrast-01 :arg1 (r / resemble-01 :arg1 (o / outcome) :arg2 (r2 / resemble-01 :arg1 (o2 / outcome) :arg2 (m / manage-02 :arg0 (h / he) :arg1 (r3 / remain-01 :arg1 (h2 / he) :arg3 (m2 / mat) :duration (m3 / multiple :op1 (t / temporal-quantity :quant (N / N-A) :unit (m4 / minute))))))) :arg2 (d / do-02 :arg0 (h3 / he) :arg1 (o3 / outcome)))
(s / seem-01 :arg1 (l / lack-01 :arg0 (p / person :arg0-of (f / fight-01) :mod (j / judo)) :arg1 (a / ambition)) :arg2-of (f2 / fortunate-01 :polarity -))
(a / and :op1 (h / have-rel-role-91 :polarity - :arg0 (a2 / and :op1 (s / smedins) :op2 (s2 / samoilovs)) :arg1 (s3 / sport) :arg2 (f / friend) :time (e / ever)) :op2 (p / probable :domain (b / become-01 :polarity - :arg1 (a3 / and) :arg2 (s4 / such))) :arg1-of (c / cause-01 :arg0 (d / differ-02 :arg1 (p2 / personalities :poss (a4 / and)) :degree (t / too :mod (j / just)))))
(a / and :op1 (f / fall-01 :arg1 (i / ikauniece-admidina :name (n / name :op1 (l / laura))) :arg4 (b / behind :op1 (r / record :arg1-of (p / personal-02 :arg2 (s / she)))) :location (a2 / and :op1 (h / hurdles :mod (1 / 100-meter)) :op2 (j / jump :arg1-of (h2 / high-02)))))
(m / mention-01 :arg0 (i / it) :arg1 (i2 / improve-01 :arg1 (a / and :op1 (a2 / and :op1 (u / url-entity :value (i3 / interior)) :op2 (w / wall))) :op2 (a3 / and :op1 (w2 / wall) :op2 (w3 / wall)) :op3 (a4 / and :op1 (s / stage) :op2 (s2 / stage)) :op4 (i4 / improve-01 :arg1 (a5 / and :op1 (c / cabling) :op2 (p / plumbing)))))
(m / multi-sentence :snt1 (a / and :op1 (w / withdraw-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (s / service :mod (r / revenue :mod (s2 / state)) :arg0-of (h2 / have-org-role-91 :arg2 (d / director))) :arg2 (d2 / director :mod (g / general)))) :arg1 (g2 / government-organization :arg0-of (g3 / govern-01)) :arg2 (w2 / war :name (n / name :op1 "N-A"))) :op2 (s3 / save-02 :arg0 (p2 / person) :arg1 (g4 / government-organization :arg0-of (g5 / govern-01)) :arg2 (w3 / war :name (n2 / name :op1 "N-A")))) :snt2 (b / believe-01 :arg0 (p3 / person :arg0-of (h3 / head-01 :arg1 (a2 / and :op1 (p4 / person :arg0-of (h4 / have-org-role-91 :arg2 (d3 / director))) :op2 (p5 / person :arg0-of (h5 / head-01 :arg1 (s4 / service :mod (r2 / revenue :mod (s5 / state)))))))) :arg1 (g6 / government-organization :arg0-of (g7 / govern-01))) :snt3 (f / faculty :arg1 (s6 / science :mod (s7 / social) :poss (s8 / science :mod (s9 / social)))))
(a / and :op1 (u / use-01 :arg1 (r / road :mod (y / yuhua) :mod (n / nation)) :manner (h / heavy) :degree (m / most)) :op2 (p / plan-01 :arg0 (w / we) :arg1 (e / ensure-01 :arg0 (w2 / we) :arg1 (c / condition :mod (g / good) :domain (r2 / road :quant 2018 :mod (y2 / yuhua) :mod (n2 / nation))))))
(c / cause-01 :arg0 (c2 / contain-01 :arg0 (v / vegetables) :arg1 (a / and :op1 (w / water) :op2 (d / dietary))) :arg1 (f / feel-01 :arg0 (t / they) :arg1 (f2 / feel-01 :arg0 (y / you) :arg1 (f3 / full)) :mod (a2 / also)))
(a / add-02 :mode (i / imperative) :arg0 (y / you) :arg1 (s / source-02 :arg1 (c / calcium) :mod (g / great)) :arg2 (s2 / source :mod (o / or :op1 (- / -rrb-) :op2 (s3 / sardines)) :mod (a2 / ample)) :time (p / prepare-02 :arg2 (s4 / sandwiches :arg1 (s5 / source-02 :arg1 (v / vitamin :mod (a3 / ample)) :mod (a4 / ample)))))
(d / decline-02 :arg0 (p / person :arg0-of (d2 / decline-02 :arg1 (d3 / discuss-01 :arg0 (p2 / person) :arg1 (b / background :mod (r / race) :poss (p3 / person :arg2-of (s / staff-01)))))) :arg1 (c / contrast-01 :arg1 (h / hire-01 :arg0 (p4 / person) :arg1 (b2 / background :mod (r2 / race) :poss (s2 / staff :poss (p5 / person)))) :arg2 (h2 / hire-01 :arg0 (p6 / person :arg0-of (h3 / have-org-role-91 :arg2 (s3 / spokesman))) :arg1 (a / and :op1 (f / focus-01 :arg0 (p7 / person) :arg2 (p8 / population :mod (u / underrepresented))) :op2 (d4 / drive-01 :arg0 (p9 / person) :arg1 (e / effort :arg2-of (i / include-01 :arg1 (e2 / effort :purpose (e3 / effort :purpose (e4 / effort))))))) :time (r3 / recent))))
(a / and :op1 (s / serve-01 :arg0 (t / team :consist-of (w / woman)) :arg2 (f / farmworkers :mod (m / male))) :op2 (s2 / serve-01 :arg1 (a2 / and :op1 (s3 / swim-01) :op2 (l / lunch) :op3 (d / dinner))))
(s / say-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (d / district :mod (d2 / district)) :arg3 (j / judge-01))) :arg1 (e / entitled :arg1 (p2 / person :arg0-of (h2 / have-org-role-91 :arg3 (j2 / judge-01))) :arg2 (r / relieve-01 :arg1 (r2 / relieve-01 :arg1 (p3 / person))) :time (d3 / defend-01 :arg0 (p4 / person) :arg1 (c / case-03))) :medium (s2 / suck-01 :arg0 (p5 / person) :arg1 (p6 / person :arg0-of (h3 / have-org-role-91 :arg3 (j3 / judge-01)) :mod (d4 / district))))
(s / say-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (h2 / hotel) :arg2 (c / clerk))) :arg1 (' / '' :arg0 (t / thing :arg1-of (d / decide-01 :arg3 (m / manage-01 :arg1 (k / kempinski-hotels)))) :arg1 (m2 / measure-01)))
(i / issue-02 :polarity - :mod (s / such) :time (t / time :mod (t2 / this)) :location (a / around :op1 (w / win-01 :mod (s2 / supreme))))
(l / lost :arg1 (p / person :mod (t / that) :arg1-of (l2 / legal-02) :mod (t2 / that)) :arg2 (l3 / lose-02 :arg0 (p2 / person) :arg1 (r / rate-entity-91 :arg1 30 :arg2 (t3 / temporal-quantity :quant (N / N-A) :unit (y / year))) :arg3 (f / fund-01 :arg0 (f2 / federal) :arg1 (f3 / federal))) :time (y2 / year :mod (n / next)))
(c / clear-06 :polarity - :arg1 (c2 / circumstance :domain (i / intend-01 :arg0 (c3 / candidate) :arg1 (w / work-01 :location (s / srs)))) :mod (a / also))
(o / observes :arg1 (p / process-02 :arg1 (l / liberalization :arg1 (m / market :mod (g / gas)))) :arg2 (c / company :arg0-of (p2 / provide-01) :mod (p3 / potential)) :mod (a / also))
(c / come-01 :arg1 (r / restrict-01 :arg1 (t / traffic) :mod (s / scale :mod (l / large))) :arg1-of (e / effect-03))
(g / gain-02 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg2 (a / antonenko))) :arg1 (s / succeed-01 :arg0 (p2 / person) :mod (h2 / huge)) :manner (s2 / successfully :arg0 (p3 / person) :arg1 (o / opera :mod (g2 / garden :mod (c / covent)) :poss (p4 / person))) :time (l / late :degree (m / more)))
(a / and :op1 (c / confirm-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (c2 / country :name (n / name :op1 "N-A")) :arg2 (e / executive :mod (g / general)))) :arg1 (m / move-02)) :op2 (n2 / note-01 :arg0 (p2 / person) :arg1 (b / begin-01 :arg0 (c3 / club) :arg1 (s / search-01 :arg0 (c4 / club) :arg2 (c5 / coach :mod (n3 / new)) :time (i / immediate)))))
(u / understand-01 :arg0 (d / data :mod (n / new)) :arg1 (t / thing :arg0-of (c / cause-01 :arg1 (u2 / understand-01 :arg0 (d2 / data) :arg1 (t2 / thing :arg0-of (c2 / cause-01 :arg1 (a / and :op1 (s / star :prep-in (r / rate :mod (v / varying))) :op2 (t3 / thing :manner-of (r2 / related :arg1 (r3 / relate :arg2 (p / planet)) :arg2 (p2 / planet))))))))))
(m / measure-02 :arg0 (p / person :mod (c / country :name (n / name :op1 "N-A"))) :arg1 (r / rate-entity-91 :arg1 (u / under :op1 (b / between :op1 (t / temporal-quantity :quant (N / N-A) :unit (y / year)) :op2 (t2 / temporal-quantity :quant (N2 / N-A) :unit (y2 / year)))) :arg2 (t3 / temporal-quantity :quant (N3 / N-A) :unit (y3 / year))) :arg1-of (r2 / resemble-01 :arg2 (s / sunspots)))
(a / ask-02 :arg1 (c / call-01 :arg0 (a2 / anyone) :arg1 (l / line :name (n / name :op1 (s / sfpd)) :mod (s2 / sfpd)) :arg2 (l2 / line :quant (4 / 415-575-4444))) :arg2 (a3 / anyone))
(d / disappear-01 :arg1 (t / train :mod (c / conventional) :arg1-of (s / sponsor-01 :arg0 (a / and :op1 (p / person :arg0-of (h / have-org-role-91 :arg2 (h2 / head-of-state))) :op2 (p2 / person :arg0-of (h3 / have-org-role-91 :arg2 (h4 / hauled))) :op3 (p3 / person :arg0-of (h5 / have-org-role-91 :arg2 (h6 / head-of-state))) :op4 (p4 / person :arg0-of (h7 / have-org-role-91 :arg2 (h8 / head-of-state))) :op5 (p5 / person :arg0-of (h9 / have-org-role-91 :arg2 (h10 / head-of-state))) :op5 (p6 / person :arg0-of (h11 / have-org-role-91 :arg1 (u / unit :mod (e / electric-powered))))))) :manner (g / gradual))
(r / require-01 :arg1 (c / contact-01 :arg0 (t / they) :arg1 (p / person :arg0-of (o / own-01) :mod (b / billboard)) :purpose (r2 / remove-01 :arg0 (t2 / they) :arg1 (p2 / person :arg0-of (o2 / own-01)))) :time (f / first))
(a / and :op1 (c / change-01 :arg0 (c2 / company) :arg1 (c3 / company :poss (i / it))) :op2 (b / be-02 :arg1 (i2 / it)) :time (t / then))
(a / and :op1 (t / topic :mod (s / sensitive) :beneficiary (p / politician :quant (m / many) :prep-on (a2 / and :op1 (l / level :mod (n / nation)) :op2 (l2 / level :arg1-of (l3 / local-02)) :op3 (l4 / level :arg1-of (l5 / local-02))))) :op2 (t2 / torn :arg1 (a3 / and) :arg2 (i / issue-02) :frequency (o / often)))
(e / expect-01 :arg1 (h / harvest-01 :arg0 (p / person :arg0-of (f / farm-01)) :arg1 (c / commodity :quant (v / volume-quantity :quant (N / N-A) :unit (k / kilogram)))))
(e / estimate-01 :arg0 (e2 / estimate-01 :time (i / initial) :arg1-of (r / release-01 :time (b / before :op1 (n / now) :quant (t / temporal-quantity :quant (N / N-A) :unit (m / month))))) :arg1 (d / drop-01 :arg1 (d2 / drop-01 :quant (p / percentage-entity :value 10) :compared-to (d3 / drop-01 :time (y / year :mod (l / last))))))
(a / average-01 :arg1 (t / thing :arg1-of (h / harvest-01 :time (y / year :mod (l / last)))) :arg2 (a2 / above :op1 (a3 / average-01)))
(d / decrease-01 :arg1 (a / area :arg1-of (d2 / disable-01) :arg1-of (d3 / decrease-01 :arg2 (p / percentage-entity :value (N / N-A)))) :time (y / year :mod (t / this)))
(e / expect-01 :arg1 (s / succeed-01 :arg1 (h / harvest-01 :arg1 (p / poppy) :time (y / year :mod (t / this)))))
(s / say-01 :arg0 (p / police) :arg1 (h / hold-01 :arg0 (t / they) :arg1 (a / and :op1 (c / cannabis) :op2 (s2 / sticks) :op3 (m / machetes))))
(p / pay-01 :arg0 (t / they) :arg1 (r / rate-entity-91 :arg1 (r2 / rate :mod (t2 / tax-01 :arg3 (i / income)) :arg1-of (c / combine-01)) :arg2 (p2 / percentage-entity :value (N / N-A))) :arg2-of (t3 / total-01))
(s / say-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (o / organization :mod (h2 / health) :mod (w / world)) :arg3 (o2 / organization :mod (h3 / health)))) :arg1 (c / circulated :arg1 (v / virus) :location (t / there)))
(n / need-01 :arg0 (t / they) :arg1 (a / assist-01 :arg2 (c / community :mod (r / religious-group :name (n2 / name :op1 "N-A"))) :purpose (w / work-01 :arg0 (t2 / they))))
(i / intend-01 :arg0 (h / he) :arg1 (e / ensure-01 :arg0 (h2 / he) :arg1 (a / allow-01 :arg1 (p / practice-01 :arg0 (p2 / person :arg1-of (t / train-01 :arg1-of (p3 / possible-01)) :mod (o / only)) :arg1 (a2 / and :op1 (m / mosque) :op2 (p4 / place :mod (o2 / other) :mod (w / worship)))))) :prep-in (p5 / particular))
(g / go-03 :arg0 (p / person :mod (r / religious-group :name (n / name :op1 "N-A")) :quant (a / around :op1 30,000) :mod (c / country :name (n2 / name :op1 "N-A"))) :arg1 (p2 / pilgrimages :mod (t / this)) :arg4 (a2 / arabia) :time (y / year :mod (e / every)))
(g / gesture :arg0-of (e / end-01 :arg1 (c / crisis)))
(c / contrast-01 :arg2 (s / show-01 :arg0 (e / emanating :mod (l / lingering)) :arg1 (h / have-03 :arg0 (p / person :arg0-of (l2 / lead-02 :arg1 (c2 / country :name (n / name :op1 "Russia")))) :arg1 (n2 / nothing))))
(c / contrast-01 :arg2 (g / good :degree (m / more) :domain (t / talk-01 :arg0 (p / person :quant 2 :arg0-of (l / lead-02)) :mod (a / at-least)) :arg1-of (s / sure-02) :time (a2 / after :op1 (a3 / and :op1 (t2 / temporal-quantity :quant (N / N-A) :unit (m2 / month)) :op2 (t3 / temporal-quantity :quant (N2 / N-A) :unit (m3 / month))))))
(c / change-01 :arg1 (r / rbs :quant (a / all)) :arg4 (a2 / and :op1 (o / office :mod (h / head)) :op2 (l / listing :mod (e / exchange-01 :arg1 (s / stock))) :op3 (l2 / listing :mod (e2 / exchange-01 :arg1 (s2 / stock)))) :arg4 (n / natwest))
(r / reach-01 :arg0 (d / dettori :name (n / name :op1 (f / frankie) :op2 (d2 / dettori))) :arg1 (w / winners :quant 3000) :location (n2 / newmarket :location (n3 / newmarket)))
(c / cup)
(c / contrast-01 :arg2 (c2 / convince-01 :arg1 (f / few :op1 (f2 / few :op1 (t / temporal-quantity :quant (N / N-A) :unit (m / month)) :mod (j / just))) :arg2 (e / elect-01 :mod (p / parliamentary)) :time (n / now :mod (e2 / especially)) :location (h / here)))
(s / say-01 :arg0 (h / he) :arg1 (r / regret-01 :arg0 (h2 / he) :arg1 (i / it)) :medium (s2 / statement))
(s / say-01 :arg0 (p / person :name (n / name :op1 "michael" :op2 "martin") :arg0-of (h / have-org-role-91 :arg1 (c / country :name (n2 / name :op1 "N-A") :arg0-of (c2 / cross-02 :arg1 (b / bridge)) :location (f / forth)) :arg2 (d / director :mod (v / vice)))) :arg1 (m / milestone :arg1 (c3 / closure :ord (o / ordinal-entity :value 1) :topic (p2 / project :mod (b2 / bridge) :mod (a / any))) :time (a2 / always) :arg1-of (s2 / significant-02)))
(r / rescue-01 :arg1 (m / man :quant 3) :arg1-of (c / cause-01 :arg0 (l / lucky :domain (m2 / man :quant 3))))
(s / say-01 :arg0 (p / person :arg0-of (h / have-rel-role-91 :arg2 (l / lawyer))) :arg1 (r / react-01 :arg0 (t / this) :arg1-of (n / need-01 :polarity -) :arg1-of (n2 / need-01 :polarity -)))
(s / say-01 :arg0 (p / person :name (n / name :op1 "N-A")) :arg1 (s2 / sympathiser :domain (h / he) :mod (h2 / hitler)))
(e / estimate-01 :arg1 (n / need-01 :arg0 (r / republic :mod (c / country :name (n2 / name :op1 "N-A"))) :arg1 (p / person :arg0-of (s / specialize-01))))
(r / reduce-01 :arg0 (p / person :arg0-of (e / exercise :arg1 (p2 / person) :arg1-of (r2 / regular-02))) :arg1 (c / chance-02 :arg0 (p3 / person) :arg1 (g / get-01 :arg0 (p4 / person) :arg1 (o / or :op1 (c2 / cancer) :op2 (d / depression)))))
(l / look-01 :mode (i / imperative) :arg0 (y / you) :arg1 (s / something :arg1-of (c / complain-01 :arg0 (y2 / you))) :mod (u / usual))
(p / possible-01 :arg1 (' / ' :arg0 (i / i) :arg1 (t / this) :degree (t2 / total)))
(s / say-01 :arg0 (s2 / she) :arg1 (t / true :polarity - :domain (s3 / sign-up-03 :arg1 (y / you) :arg3 (i / it) :mod (o / of-course) :mod (o2 / of-course))))
(a / and :op1 (s / sitting :arg1 (d / didn :mod (e / edmund)) :arg2 (o / or :op1 (u / up) :op2 (c / crawls)) :time (u2 / until :op1 (i / include-91 :arg1 (h / he) :arg2 3))) :op2 (t / talks :arg0 (h2 / he) :arg1 (t2 / talk-01 :mod (t3 / total)) :mod (s2 / still)))
(a / and :op1 (t / teach-01 :arg0 (w / we) :arg1 (s / sign-01 :arg0 (h / he) :arg1 (l / language)) :arg2 (h2 / he)) :op2 (t2 / tell-01 :arg0 (p / person :arg0-of (p2 / picciuto)) :arg1 (n / news :mod (c / cbs)) :arg2 (h3 / he)))
(m / multi-sentence :snt1 (s / see-01 :arg0 (i / i) :arg1 (w / water :location (p / place :quant (s2 / some)) :arg1-of (s3 / see-01 :polarity - :arg0 (i2 / i) :time (e / ever) :time (b / before)))) :snt2 (a / and :op1 (s4 / say-01 :arg0 (p2 / person :arg0-of (h / have-org-role-91 :arg2 (t / townson))) :arg1 (c / come-01 :arg1 (p3 / person) :time (e2 / ever))) :op2 (c2 / come-01 :arg1 (p4 / person) :direction (d / down) :mod (s5 / still))))
(a / and :op1 (r / report-01 :arg1 (c / condition :arg1-of (i / include-91 :arg2 (m / man :mod (2 / 29-year-old))) :quant (m2 / multiple :op1 1)) :prep-in (c2 / condition :arg1-of (c3 / critical-02))) :op2 (l / list-01 :arg1 (v / victim :quant 2 :mod (o / other)) :arg1-of (c4 / conform-01 :arg2 (c5 / condition :arg1-of (s / stable-03)))))
(s / strike-01 :arg1 (a / and :op1 (h / house) :op2 (v / vehicle) :quant (m / multiple)) :mod (a2 / also))
(s / solidified :arg0 (i / it) :arg1 (p / presence :mod (f / female) :arg1-of (b / black-05)) :mod (a / also) :location (s2 / sport :poss (s3 / sport :mod (t / this))))
(c / cause-01 :arg0 (a / and :op1 (h / have-03 :arg0 (t / team :name (n / name :op1 (g / gymnastics)) :mod (n2 / next) :mod (o / olympic)) :arg1 (t2 / team) :mod (o2 / only)) :op2 (m / marta :arg0 (t3 / team) :arg1 (t4 / team) :time (y / year :mod (l / last)))) :arg1 (' / '' :domain (t5 / they) :mod (f / final)))
(t / thank-01 :arg0 (i / i) :arg1 (y / you) :arg2 (a / and :op1 (s / simone :arg0 (y2 / you) :arg1 (y3 / you)) :op2 (a2 / aly :arg0 (y4 / you)) :op3 (l / laurie :arg0 (y5 / you)) :op4 (m / madison :arg0 (y6 / you) :arg1 (p / power :mod (g / girl :mod (' / ''))) :mod (s2 / serious) :mod (t2 / that)) :purpose (b / begin-01 :arg0 (g2 / girl :mod (g3 / girl :quant (m2 / many :degree (s3 / so)))) :arg1 (b2 / begin-01 :arg0 (g4 / girl :mod (y7 / young) :quant (m3 / many :degree (s4 / so))) :arg1 (b3 / begin-01 :arg0 (g5 / girl) :arg1 (a3 / and :op1 (w / woman :mod (y8 / young)) :op2 (w2 / woman :mod (y9 / young) :arg1-of (s5 / succeed-01))))))))
(c / contrast-01 :arg1 (h / hope-01 :arg0 (p / person :arg0-of (h2 / have-org-role-91 :arg2 (m / minister))) :arg1 (e / end-01 :arg0 (p2 / person) :arg1 (d / dispute-01 :arg2 (c2 / contract-02 :arg0 (p3 / person) :arg2 (c3 / contract-02 :arg0 (p4 / person) :arg1 (r / reform-01 :arg0 (p5 / person) :arg1 (c4 / contract-02 :arg0 (p6 / person) :arg1 (r2 / reform-01 :arg0 (p7 / person) :arg1 (c5 / contract-02 :arg0 (p8 / person) :arg1 (r3 / reform-01 :arg0 (p9 / person) :arg1 (c6 / contract-02 :arg0 (p10 / person) :arg1 (r4 / reform-01 :arg0 (p11 / person) :arg1 (c7 / contract-02 :arg0 (p12 / person) :arg1 (r5 / reform-01 :arg0 (p13 / person) :arg1 (c8 / contract-02 :arg0 (p14 / person) :arg1 (r6 / reform-01 :arg0 (p15 / person) :arg1 (p16 / person :arg0-of (h3 / have-org-role-91 :arg1 (a / association :mod (m2 / medicine) :mod (c9 / country :name (n / name :op1 "N-A"))) :arg2 (o / official))) :arg2 (p17 / person :arg0-of (h4 / have-org-role-91 :arg1 (a2 / association :mod (m3 / medicine) :mod (c10 / country :name (n2 / name :op1 "N-A"))) :arg2 (o2 / official)))))))))))))))))) :arg2 (r7 / rate-entity-91 :arg1 58 :arg2 (t / temporal-quantity :quant (N / N-A) :unit (y / year)))))
(h / have-concession-91 :arg1 (o / open-01 :arg1 (d / door :part-of (h2 / he)) :time (a / always) :time (m / month :mod (l / last) :mod (j / just))) :arg2 (p / promise-01 :arg2 (h3 / hunting :arg1 (d2 / door :poss (h4 / he)) :time (m2 / month :mod (l2 / last) :mod (j2 / just)))))
(p / pleased :arg1 (w / we) :arg2 (p2 / possible-01 :arg1 (i / increase-01 :arg0 (w2 / we) :arg1 (o / option :mod (t / treat-03) :arg2-of (a / available-02 :arg1 (p3 / person :arg0-of (s / stand-01 :arg1 (p4 / person) :arg2 (b / benefit-01 :arg0 (i2 / it) :arg1 (p5 / person))) :quant (m / many)))))) :time (d / date-entity :year (N / N-A)))
FAILED_TO_PARSE#Number of opening and closing brackets doesn't match.
(c / criticises :arg0 (h / he) :arg1 (i / inspect-01 :arg0 (d / department :name (n / name :op1 (i2 / ineffectual) :op2 (t / tick-box) :op3 (t2 / tick-box))) :arg1 (d2 / department :mod (r / register-02) :location (c2 / city :name (n2 / name :op1 "N-A")))) :mod (a / also))
(a / and :op1 (s / star :domain (a2 / and :op1 (s2 / star :mod (s3 / soccer)) :op2 (s4 / star :mod (d / dexter)))) :op2 (f / face-01 :arg0 (a3 / and) :arg1 (a4 / and :op1 (s5 / shapes) :op2 (e / eye)) :arg1-of (r / resemble-01)) :mod (i / indeed))
(w / write-01 :arg0 (p / person :name (n / name :op1 "sarah" :op2 "paradis") :arg0-of (u / use-01 :arg1 (t / twitter)) :mod (a / another)) :arg1 (' / ' :mode (i / imperative) :arg0 (y / you) :mod (w2 / wow :mode (e / expressive))))
(c / contrast-01 :arg1 (p / possible-01 :arg1 (r / repellent :arg1 (b / button :name (n / name :op1 (f / flush) :op2 (f2 / flush) :op3 (b2 / button)) :arg1-of (u / use-01 :arg0 (t / thousands :mod (o / other)))))) :arg2 (b3 / bad-07 :arg1 (c2 / continent :name (n2 / name :op1 "N-A") :arg1-of (b4 / bad-07 :degree (m / more))) :prep-in (f3 / fact)))
(a / and :op1 (b / become-01 :arg1 (w / wright) :arg2 (k / know-01 :arg1 (t / test-01 :arg1 (d / durability :poss (g / gut :part-of (h / he))) :location (a2 / around :op1 (w2 / world))))) :op2 (t2 / thing :arg1-of (w3 / wonderful-03) :arg1-of (w4 / wonderful-03)))
(p / prove-01 :arg0 (h / he) :arg1 (r / reputation :poss (h2 / he) :time (f / film)) :manner (c / certain))
(e / easy-05 :arg1 (g / get-05 :arg1 (t / thing :quant (s / some)) :arg2 (i / ian :arg1 (t2 / thing))) :degree (p / pretty) :arg1-of (c / cause-01 :arg0 (t3 / tough-02 :arg1 (t4 / thing) :degree (p2 / pretty))))
(m / multi-sentence :snt1 (g / glad-02 :arg0 (c / catch-02 :arg1 (p / person :quant (s / some) :arg1-of (i / include-91 :arg2 (p2 / person :arg1-of (d / dirty-02) :arg0-of (l / licks)))) :arg2 (i2 / ied)) :arg1 (i3 / i)) :snt2 (' / '))
(s / say-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg2 (p2 / person :arg0-of (m / manage-01 :arg1 (e / enforce-01 :arg1 (n / neighbourhood)))))) :arg1 (f / fail-01 :arg1 (f2 / family) :arg2 (c / cooperate-01 :arg0 (f3 / family) :arg1 (a / authority :arg1-of (l / local-02)))))
(s / say-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (p2 / police :mod (d / devon)) :arg2 (c / crowing))) :arg1 (s2 / send-01 :arg0 (p3 / person) :arg1 (w / warn-01 :arg0 (p4 / person) :arg2 (p5 / person :mod (o / other) :arg0-of (c2 / continue-01 :arg1 (f / flouts :arg0 (p6 / person) :arg1 (r / rule)))) :arg1-of (c3 / clear-06)) :arg1-of (c4 / clear-06)))
(a / and :op1 (f / fly-01 :arg1 (p / plane) :purpose (t / train-01)) :op2 (a2 / ask-02 :arg1 (i / identify-01 :arg0 (p2 / pilot-01) :arg1 (b / boat :mod (f2 / fishing)) :prep-as (p3 / part :part-of (e / exercise)))))
(p / person :arg0-of (j / join-01 :arg1 (p2 / person :arg1-of (k / kill-01 :arg1-of (p3 / possible-01 :polarity -)))))
(s / say-01 :arg0 (h / he) :arg1 (u / unfit :arg1 (p / person :mod (t / trumps)) :arg2 (o / office)))
(c / contrast-01 :arg2 (t / true :mode (i / interrogative) :domain (t2 / thing :arg2-of (r / result-01))))
(i / infer-01 :arg1 (l / look-01 :mode (i2 / imperative) :arg0 (w / we)))
(p / probable :domain (a / ask-02 :arg0 (i / i) :arg1 (s / stop-01 :arg0 (c / camera) :arg1 (r / rolling :prep-for (b / bit :mod (n / next)))) :arg1-of (s2 / stand-01 :arg2 (a2 / and :op1 (m / man :mod (v / various) :location (s3 / some :arg1-of (i2 / include-91 :arg2 (s4 / store)))) :op2 (a3 / attempt-01 :arg0 (i3 / i) :arg1 (a4 / and :op1 (a5 / age :mod (e / emotional)) :op2 (d / disposition :mod (e2 / emotional))) :path (o / observation))))) :mod (p2 / probable))
(a / and :op1 (b / be-temporally-at-91 :arg1 2 :arg2 (b2 / before :op1 (n / now) :quant (m / multiple :op1 (t / temporal-quantity :quant (N / N-A) :unit (y / year))))) :op2 (f / finish-01 :arg1 (i / it) :time (n2 / now)))
(c / contrast-01 :arg1 (b / become-01 :arg1 (h / he) :arg2 (p / person :arg0-of (h2 / have-org-role-91 :arg2 (k / king :mod (u / undisputed)))) :location (o / olympics :mod (2 / 200m) :time (y / year :mod (l / last))) :mod (o2 / only)) :arg2 (b2 / become-01 :arg1 (h3 / he) :arg2 (k2 / king :name (n / name :op1 (u2 / undisputed) :op2 (b3 / backstroke)) :location (o3 / olympics :name (n2 / name :op1 (r / rio))))))
(s / sjöström :arg0 (p / person :name (n / name :op1 "N-A") :arg0-of (w / win-01 :arg1 (g / gold) :mod (a / also) :location (a2 / and :op1 (t / time :mod (r / record :mod (w2 / world))) :op2 (s2 / silver)) :mod (a3 / also))) :ord (o / ordinal-entity :value 3))
(c / contrast-01 :arg2 (t / think-01 :arg0 (i / i) :arg1 (p / prepare-02 :arg0 (w / we) :arg1-of (c2 / cause-01 :arg0 (p2 / possible-01 :arg1 (p3 / prepare-02))))))
(s / say-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (c / commission :mod (b / broadcast-01 :mod (n / nation))) :arg2 (s2 / secretary-general))) :arg1 (e / exceptions :polarity -))
(r / recommend-01 :arg1 (s / start-01 :arg0 (i / i) :arg1 (s2 / sell-01 :arg0 (y / you) :arg1 (c / card :mod (n / new) :mod (n2 / new)) :arg2 (p / person :mod (f / foreign)) :location (a / along :op1 (t / temporal-quantity :quant (N / N-A) :unit (m / month))))))
(a / and :op1 (l / likely-01 :arg1 (h / high-02 :arg1 (p / person :arg0-of (t / tour-01) :quant (m / most)) :time (e / eventual)) :degree (h2 / high)) :op2 (l2 / likely-01 :arg1 (b / buy-01 :arg0 (p2 / person :arg0-of (t2 / tour-01) :quant (m2 / most)) :arg1 (s / sim :arg1-of (l3 / local-02)) :time (e2 / eventual)) :degree (h3 / high)))
(l / lead-03 :arg0 (a / abuse-02 :arg1 (s / system) :mod (a2 / any)) :arg2 (p / punish-01 :arg1-of (s2 / specify-01 :polarity -) :mod (y / yet)))
(a / and :op1 (p / parking :arg1 (f / features :mod (m / must-have) :poss (w / we)) :manner (a2 / ample)) :op2 (c / consult-01 :arg0 (w2 / we) :arg1 (b / building :mod (o / old :degree (m2 / more))) :mod (b2 / basic)))
(s / start-01 :arg0 (i / i) :arg1 (f / feel-01 :arg0 (i2 / i) :arg1 (s2 / suffocated :arg1 (i3 / i))))
(i / interest-01 :arg1 (y / you) :arg2 (m / mention-01 :arg0 (y2 / you) :arg1 (n / negativity)))
(s / seem-01 :arg1 (c / care-01 :polarity - :arg0 (p / person :arg1-of (l / local-02)) :arg1 (t / thing :mod (t2 / this) :quant (m / much))) :arg1-of (o / opine-01 :arg0 (i / i)))
(c / contrast-01 :arg2 (f / find-02 :arg0 (i / i) :arg1 (c2 / comment-01 :arg0 (i2 / i) :arg3 (o / offense-02 :degree (b / bit)))))
(t / think-01 :arg0 (y / you) :arg1 (a / amr-unknown) :arg2 (a2 / amr-unknown))
(c / contrast-01 :arg1 (w / work-09 :arg1 (i / it) :mod (w2 / well) :time (a / already) :location (r / route :mod (m / main))) :arg2 (e / easy-05 :arg1 (s / say-01 :arg1 (r2 / road :location (b / between :op1 (r3 / road :location (b2 / between :op1 (c2 / city :name (n / name :op1 "N-A")))))))))
(s / start-01 :arg0 (t / they) :arg1 (p / prepare-01 :arg0 (t2 / they) :arg1 (l / ltd :name (n / name :op1 (s2 / shippansee) :op2 (s3 / shippansee) :op3 (s4 / shippansee)) :arg0-of (u / use-01 :arg1 (r / route :name (n2 / name :op1 (s5 / shippansee) :op2 (c / capitals)) :arg1-of (s6 / schedule-01 :arg2 (b / between :op1 (b2 / between :op1 (t3 / temporal-quantity :quant (N / N-A) :unit (y / year)) :op2 (t4 / temporal-quantity :quant (N2 / N-A) :unit (y2 / year))) :mod (p2 / particular) :purpose (t5 / transport-01 :arg1 (p3 / packages)))))))) :li 2014)
(a / and :op2 (c / change-01 :arg1 (l / look-01 :arg1 (b / battlefield))))
(g / give-01 :polarity - :arg0 (p / person :arg1-of (b / border-01 :arg2 (w / world-region :name (n / name :op1 "N-A"))) :arg1-of (l / local-02)) :arg1 (b2 / break) :mod (a / also))
(e / exemplify-01 :arg0 (l / list-01 :arg1 (p / person :mod (a / all) :arg0-of (s / suffer-01 :arg1 (p2 / possible-01 :arg1 (s2 / suffer-01 :arg0 (p3 / person) :arg1-of (c / cause-01 :arg0 (t / thing :arg2-of (r / result-01 :arg1 (t2 / thing :arg1-of (p4 / plan-01) :arg1-of (p5 / plan-01)))))))))) :purpose (e2 / exemplify-01))
(a / and :op1 (u / use-01 :arg0 (h / he) :arg1 (a2 / arrive-01 :arg1 (h2 / he) :arg4 (h3 / home)) :arg3 (w / work-01) :time (b / before :op1 (n / now) :quant (m / multiple :op1 3))) :op2 (l / leave-11 :arg0 (h4 / he) :arg1 (p / person :quant 3) :purpose (s / shop-01 :arg0 (h5 / he)) :time (a3 / always)))
(r / report-01 :arg0 (n / newspaper) :arg1 (i / injure-01 :arg0 (p / person :arg0-of (d / depend-01 :polarity -) :arg1-of (n2 / name-01 :polarity -) :arg1-of (n3 / name-01 :polarity -)) :arg1 (e / ex-wife :arg0 (p2 / person) :arg1 (c / centre :purpose (s / shop-01)) :location (z / zaragoza :location (n4 / north :part-of (n5 / north)))) :manner (s2 / serious)) :time (m / morning :mod (f / friday)))
(a / and :op1 (p / place :location-of (f / filling :arg0 (w / we) :arg1 (p2 / paper :mod (s / softened)))) :op2 (w2 / wraps :arg0 (w3 / we) :arg1 (a2 / and)))
(b / beat-03 :arg0 (p / person :mod (c / country :name (n / name :op1 "N-A"))) :arg1 (p2 / person :quant (2 / 20-5)) :arg2 (a / and :op1 (p3 / person :mod (c2 / country :name (n2 / name :op1 "N-A"))) :op2 (p4 / person :arg0-of (h / have-org-role-91 :arg1 (c3 / country) :arg3 (l / lead-02 :arg0 (p5 / person)))) :op3 (p6 / person :arg0-of (h2 / have-org-role-91 :arg1 (c4 / country) :arg3 (l2 / lead-02 :arg0 (p7 / person)))) :op4 (p8 / person :arg0-of (h3 / have-org-role-91 :arg1 (c5 / country) :arg3 (l3 / lead-02 :arg0 (p9 / person)))) :op5 (p10 / person :arg0-of (h4 / have-org-role-91 :arg1 (c6 / country) :arg3 (l4 / lead-02 :arg0 (p11 / person)))) :op6 (p12 / person :arg0-of (h5 / have-org-role-91 :arg1 (c7 / country) :arg3 (a2 / apprentice-01 :arg0 (p13 / person)))) :op6 (p14 / person :arg0-of (h6 / have-org-role-91 :arg1 (c8 / country) :arg3 (a3 / apprentice-01 :arg0 (p15 / person)))) :op6 (p16 / person :arg0-of (h7 / have-org-role-91 :arg1 (b2 / britain :mod (e / each))))) :time (e2 / early :degree (m / more) :time (d / day)))
(c / contrast-01 :arg1 (p / put-01 :arg0 (p2 / person :arg0-of (h / have-org-role-91 :arg2 (h2 / head-of-state))) :arg1 (p3 / person :arg0-of (h3 / have-org-role-91 :arg2 (h4 / head-of-state))) :arg2 (h5 / half :ord (o / ordinal-entity :value 1)) :location (a / ahead :op1 (h6 / half :ord (o2 / ordinal-entity :value 1)))) :arg2 (b / break-01 :arg0 (p4 / person) :arg1 (a2 / and :op1 (l / line) :op2 (s / score-01)) :prep-under (p5 / post :op1 (p6 / post) :ord (o3 / ordinal-entity :value 2))))
(l / lose-02 :arg0 (a / and :op1 (p / person :arg0-of (h / helen)) :op2 (h2 / haven :mod (s / stanning))) :arg1 (r / race) :time (a2 / after :op1 (n / now) :quant (t / temporal-quantity :quant (N / N-A) :unit (y / year))) :degree (t2 / total))
(t / take-10 :arg0 (r / realize-01 :arg0 (i / i) :arg1 (c / champion :domain (i2 / i) :mod (o / olympic))) :arg1 (i3 / it) :time (a / about :op1 (t2 / temporal-quantity :quant (N / N-A) :unit (m / month))))
(l / learn-01 :arg0 (p / person :arg0-of (l2 / learn-01 :arg1 (h / history :topic (h2 / history :poss (l3 / library :location (s / south :part-of (c / country :name (n / name :op1 "N-A")))))))) :arg1 (s2 / salon :topic (a / and :op1 (a2 / art :mod (a3 / arnold)) :op2 (g / gee :mod (s3 / stephen)))) :arg2 (h3 / history :topic (a4 / and :op1 (a5 / art :poss (c2 / country)) :op2 (' / '' :mod (a6 / architecture)))) :time (l4 / learn-01 :arg1 (h4 / history :poss (l5 / library :location (s4 / south :part-of (c3 / country :name (n2 / name :op1 "N-A")))))))
(m / multi-sentence :snt1 (p / prefer-01 :arg0 (i / i) :arg1 (o / obligate-01 :arg1 (t / they) :arg2 (d / drive-01 :arg0 (t2 / they) :arg1 (p2 / person) :purpose (f / free-04 :arg1 (p3 / person))))) :snt2 (s / say-01 :arg0 (p4 / person :arg0-of (h / have-org-role-91 :arg2 (p5 / prosecute-01 :arg1 (p6 / person) :mod (g / ground-breaking)))) :arg1 (p7 / person :arg0-of (h2 / have-org-role-91 :arg1 (t3 / taxi) :arg3 (a / apprentice-01 :arg0 (p8 / person))))))
(s / smuggle-01 :arg1 (t / that))
(m / multi-sentence :snt1 (a / and :op1 (s / study-01 :arg0 (h / he) :location (a2 / academy :name (n / name :op1 (m2 / miroslav) :op2 (a3 / academy) :op3 (o / ond?í?ek) :op4 (o2 / ond?í?ek) :op5 (o3 / ond?í?ek) :op6 (o4 / ond?í?ek) :op7 (o5 / ond?í?ek)))) :op2 (s2 / subsequently :arg0 (h2 / he) :time (s3 / subsequent))) :snt2 (u / university :location (z / zlín)))
(c / cause-01 :mode (i / interrogative) :arg0 (d / do-02 :arg0 (p / person :arg0-of (d2 / drive-01 :arg1 (t / taxi))) :arg1 (l / location :arg1-of (s / same-01 :arg2 (l2 / location :arg2-of (b / be-located-at-91 :arg1 (o / or :op1 (t2 / thing :arg1-of (r / report-01 :arg0 (y / you))) :op2 (t3 / thing :arg1-of (r2 / report-01 :arg0 (y2 / you))) :op3 (t4 / thing :arg1-of (r3 / report-01 :arg0 (y3 / you)))) :arg1-of (s2 / same-01 :arg2 (t5 / thing :arg1-of (r4 / report-01 :arg0 (y4 / you))))))))) :arg1 (p2 / person :arg0-of (t6 / tour-01) :mod (f / foreign)) :arg1-of (f2 / frequent-02) :mod (s3 / still))
(y / yes)
(c / contrast-01 :arg1 (l / lose-02 :arg1 (k / kvitová :arg1-of (b / beat-03 :arg0 (p / person :mod (p2 / puerto) :arg0-of (s / surprise-01 :arg1 (p3 / puerto))))) :arg2 (r / rate-entity-91 :arg1 4 :arg2 4 :arg3 4) :time (f / first)) :arg2 (s2 / surprise-01 :arg0 (s3 / surprised :mod (p4 / puerto)) :arg1 (r2 / rate-entity-91 :arg1 4 :arg2 4 :arg3 4)))
(m / multi-sentence :snt1 (f / follow-01 :arg1 (k / kvitová) :arg2 (p / person :arg0-of (p2 / play-01) :mod (d / double) :mod (d2 / double)) :quant (s / short)) :snt2 (a / afá?ová :mode (i / interrogative)))
(p / produce-01 :arg0 (n / nation :mod (c / country :name (n2 / name :op1 "N-A")) :mod (b / both)) :arg1 (a / and :op1 (d / dictators) :op2 (r / regime)) :time (d2 / date-entity :century (N / N-A)) :arg1-of (c2 / cause-01 :arg0 (a2 / and :op1 (b2 / brutal-02) :op2 (b3 / brutal-02) :op3 (h / horrific))))
(a / and :op1 (e / exclusive-02 :polarity - :domain (t / this) :beneficiary (n / nation :quant 2 :mod (t2 / this)) :mod (o / only)) :op2 (g / guilty-01 :arg1 (w / we) :mod (a2 / also)))
(a / and :op1 (b / bankrupt-01 :arg1 (e / economy :poss (c / country :name (n / name :op1 "Ukraine"))) :time (b2 / before :op1 (n2 / now) :quant (l / long))) :op2 (b3 / bankruptcy :arg1 (e2 / economy) :arg2 (f / fund-01 :arg1 (a2 / and :op1 (g / government-organization :name (n3 / name :op1 "N-A")) :op2 (i / imf)))))
(c / contain-01 :arg0 (s / smoke :source (s2 / supermarket :mod (a / albert))) :arg1 (p / parasites :mod (d / dangerous)))
(p / possible-01 :arg1 (s / show-01 :arg0 (p2 / person) :arg1 (s2 / symptom) :arg2 (o / or :op1 (t / temporal-quantity :quant (N / N-A) :unit (h / hour)) :op2 (u / up-to :op1 (u2 / up-to :op1 (t2 / temporal-quantity :quant (N2 / N-A) :unit (w / week))))) :time (a / after :op1 (i / ingesting :arg0 (p3 / person) :arg1 (f / fish :arg1-of (i2 / infect-01) :arg1-of (p4 / process-01 :polarity - :arg1-of (p5 / process-01)))))))
(h / hope-01 :arg1 (r / reunited :arg1 (p / person :arg0-of (s / study-01) :time (f / former) :location (t / there))))
(a / and :op1 (d / destination :domain (d2 / destination :poss (g / group :quant (n / numerous))) :time (a2 / already)) :op2 (c / continue-01 :arg1 (c2 / cater :arg0 (p / person :arg0-of (i / interest-01 :arg1 (p2 / person))) :arg1 (p3 / person :arg1-of (i2 / interest-01 :arg2 (p4 / precedent :polarity -))))))
(a / and :op1 (c / criticize-01 :arg0 (p / person :arg0-of (l / lead-02 :arg1 (c2 / country :name (n / name :op1 "N-A")))) :arg1 (p2 / person :mod (w / white) :mod (m / most) :arg0-of (l2 / lead-02))) :op2 (e / end-01 :arg0 (p3 / person) :arg1 (e2 / essay :poss (p4 / person)) :manner (d / deletesnapchat :arg1 (p5 / person))))
(r / remain-01 :arg1 (c / city :poss (c2 / country :name (n / name :op1 "Iraq")) :arg1-of (r2 / remain-01 :prep-under (c3 / control-01 :arg1 (s / state :mod (r3 / religious-group))))))
(a / and :op1 (q / qualify-02 :arg1 (t / team :mod (b / both)) :arg2 (f / final :arg1-of (r / rank-01 :arg2 (f2 / final)))) :op2 (d / decide-01 :arg0 (p / person :arg0-of (f3 / finishes :arg1 (f4 / first :arg0 (p2 / person) :ord (o / ordinal-entity :value 2)))) :arg1 (p3 / person)))
(a / ahead :domain (v / vector :mod (c / common :degree (m / most))) :location (a2 / ahead))
(a / and :op1 (r / rebounds :arg0 (o / or :op1 (h / he) :op2 (s / she)) :arg1 (o2 / or :op1 (h2 / he) :op2 (s2 / she)) :arg2 (a2 / astronaut :arg0-of (g / go-02 :arg4 (a3 / astronaut)))) :op2 (w / wake-up-02 :arg1 (o3 / or) :mod (a4 / again) :time (t / then)))
(a / allow-01 :arg0 (a2 / approach-02) :arg1 (a3 / and :op1 (p / push-01 :arg0 (m / military :name (n / name :op1 "N-A")) :arg1 (l / limit-01 :arg1 (s / speech :mod (p2 / politics)))) :op2 (d / dialed :arg0 (a4 / approach-02) :arg1 (n2 / need-01 :arg1 (s2 / speak-01)))))
(b / bemoaned :arg0 (p / person :arg1-of (l / local-02)) :arg1 (i / it) :time (l2 / late :degree (m / most)) :location (c / city :mod (g / gentrifying)))
(r / realize-01 :arg0 (i / i) :arg1 (a / and :op1 (c / coffee) :op2 (c2 / culture) :domain (i2 / it) :arg1-of (l / like-01 :arg0 (i3 / i) :arg1-of (s / say-01 :arg0 (s2 / she)))))
(a / and :op1 (w / want-01 :arg0 (s / spot :arg1-of (l / local-02)) :arg1 (b / bottle)) :op2 (s2 / sell-01 :arg0 (s3 / spot) :arg1 (c / coffee)))
(a / and :op1 (c / contribute-01 :arg0 (r / rate-entity-91 :arg1 (m / monetary-quantity :quant 5.3 :unit (d / dollar)) :arg2 (v / volume-quantity :quant (N / N-A) :unit (g / gallon))) :arg2 (r2 / rate-entity-91 :arg1 (m2 / monetary-quantity :quant 1 :unit (d2 / dollar)) :arg2 (v2 / volume-quantity :quant (N2 / N-A) :unit (g2 / gallon))) :arg4 (r3 / rate-entity-91 :arg1 (m3 / monetary-quantity :quant 5.3 :unit (d3 / dollar)) :arg2 (v3 / volume-quantity :quant (N3 / N-A) :unit (g3 / gallon)))) :op2 (b / bring-up-02 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (c2 / company :name (n / name :op1 "N-A") :arg0-of (h2 / have-org-role-91 :arg2 (p2 / president) :time (f / former))) :arg2 (s / secretary :mod (s2 / state)) :time (f2 / former))) :arg1 (r4 / rate-entity-91 :arg1 (m4 / monetary-quantity :quant 5.3 :unit (d4 / dollar) :arg1-of (c3 / cost-01 :arg2 (m5 / monetary-quantity :quant 5.3 :unit (d5 / dollar)))) :arg2 (v4 / volume-quantity :quant (N4 / N-A) :unit (g4 / gallon)))) :op3 (r5 / report-01 :arg0 (p3 / person :arg0-of (h3 / have-org-role-91 :arg1 (s3 / state) :arg2 (s4 / secretary) :time (f3 / former))) :location (t / tenure :poss (p4 / person) :location (t2 / tenure :poss (s5 / state)))))
(i / instead-of-91 :arg2 (o / offer-01 :arg0 (p / person :mod (c / country :name (n / name :op1 "N-A"))) :arg1 (o2 / opportunity :purpose (d / dialed :arg0 (p2 / person) :arg1 (c2 / country :name (n2 / name :op1 "N-A")) :path (c3 / center :arg1-of (c4 / call-01 :arg2 (n3 / name)))))) :arg1-of (i2 / instead-of-91))
(c / clashed :arg0 (p / person :arg0-of (s / study-01) :arg0-of (h / have-org-role-91 :arg1 (p2 / police) :arg3 (s2 / study-01))) :arg1 (d / demonstrate-01 :arg0 (p3 / person) :arg1 (r / reform-01 :arg0 (g / government-organization :arg0-of (g2 / govern-01)) :arg1 (s3 / system :mod (e / educate-01) :arg1-of (p4 / public-02)))) :arg2 (p5 / person :arg0-of (s4 / study-01) :location (c2 / city :name (n / name :op1 "N-A") :location (b / brazilian))))
(p / possible-01 :arg1 (s / see-01 :arg1 (p2 / person :quant (s2 / some) :arg1-of (i / include-91 :arg2 (p3 / person :arg0-of (p4 / protest-01))) :arg0-of (p5 / participate-01 :arg1 (p6 / protest-01))) :location (w / wall :prep-against (p7 / person :arg0-of (h / have-org-role-91 :arg2 (p8 / president :mod (i2 / interim)))))))
(s / say-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg2 (a / ambassador :mod (c / country :name (n / name :op1 "N-A"))))) :arg1 (g / grow-03 :arg0 (a2 / and :op1 (t / turnover :mod (t2 / trade-01) :location (c2 / city)) :op2 (t3 / turnover :mod (t4 / trade-01) :location (b / between :op1 (c3 / city)))) :arg1 (p2 / percentage-entity :value (N / N-A)) :time (t5 / term :mod (p3 / person :arg0-of (c4 / consume-01)))) :op2 (s2 / say-01 :arg0 (p4 / person :arg0-of (h2 / have-org-role-91 :arg1 (c5 / country) :arg2 (a3 / ambassador))) :arg1 (p5 / person :arg0-of (h3 / have-org-role-91 :arg1 (c6 / country) :arg2 (a4 / ambassador)))))
(d / do-02 :arg0 (t / they) :arg1 (s / so) :mod (j / just) :time (e / emerge-02 :arg0 (t2 / they)))
(s / say-01 :arg0 (p / person :name (n / name :op1 "N-A")) :arg1 (c / contract-02 :arg1 (c2 / contract-02) :arg1-of (c3 / call-01 :manner (s2 / so)) :arg1-of (c4 / cause-01 :arg0 (t / take-10 :arg0 (c5 / contract-02) :arg1 (a / affect-01 :arg1 (c6 / contract))))))
FAILED_TO_PARSE#Number of opening and closing brackets doesn't match.
(c / cause-01 :arg0 (s / spot :topic (i / issue-02 :arg0 (s2 / september))) :arg1 (e / enter-01 :arg0 (w / we) :arg1 (e2 / era :mod (n / new)) :arg1-of (s3 / sure-02)))
(a / and :op1 (c / criticised :arg0 (m / model :name (n / name :op1 (s / stephanie) :op2 (s2 / stephanie)) :mod (s3 / secret) :poss (c2 / company :name (n2 / name :op1 "N-A") :mod (o / original))) :arg1 (j / jenner :name (n3 / name :op1 (j2 / jenner) :op2 (g / gigi) :op3 (g2 / gigi) :op4 (h / hadid) :op5 (h2 / hadid) :op6 (h3 / hadid) :op7 (h4 / hadid)))) :op2 (c3 / call-01 :arg0 (m2 / model) :arg1 (h5 / hadid) :arg2 (b / bitches :mod (' / '')) :time (m3 / moment)))
(b / boiled :arg0 (s / sentiment :mod (t / this)) :arg1 (n / news :topic (c / cover-01 :arg1 (a / appear-01 :arg1 (j / jenner)))) :mod (a2 / again))
(s / supermodel :arg0 (s2 / she) :arg1 (w / word) :mod (p / purest))
(b / bracing :arg1 (s / service :mod (c / community) :arg1-of (l / legal-02)) :arg2 (c2 / cut-02 :arg1 (s2 / service) :mod (f / further)) :time (a / already))
(c / campaign-01 :mod (t / trumps) :mod (d / donald) :time (a / after :op1 (p / pull-01 :arg0 (c2 / campaign-01) :arg1 (g / gun :mod (g2 / gun)) :arg1-of (a2 / allege-01))))
(a / and :op1 (o / obligate-01 :arg1 (g / gun :mod (' / '')) :arg2 (f / fire-01 :arg0 (g2 / gun) :arg1 (d / damage-01 :mod (i / inflict))) :degree (t / total)) :op2 (s / say-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg2 (b / bordini))) :arg1 (c / complain-01 :arg0 (p2 / person))) :medium (c2 / complain-01))
(s / say-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg2 (s2 / spokesperson)) :arg0-of (h2 / have-org-role-91 :arg2 (s3 / spokesperson)) :arg0-of (h3 / have-org-role-91 :arg2 (s4 / spokesperson)) :arg0-of (h4 / have-org-role-91 :arg2 (s5 / spokesperson)) :arg0-of (h5 / have-org-role-91 :arg2 (s6 / spokesperson)) :arg0-of (h6 / have-org-role-91 :arg2 (s7 / spokesperson)) :arg0-of (h7 / have-org-role-91 :arg2 (s8 / spokesperson)) :arg0-of (h8 / have-org-role-91 :arg2 (s9 / spokesperson)) :arg0-of (h9 / have-org-role-91 :arg2 (s10 / spokesperson)) :arg0-of (h10 / have-org-role-91 :arg2 (s11 / spokesperson)) :arg0-of (h11 / have-org-role-91 :arg2 (s12 / spokesperson)) :arg0-of (h12 / have-org-role-91 :arg2 (s13 / spokesperson)) :arg0-of (h13 / have-org-role-91 :arg2 (s14 / spokesperson)) :arg0-of (h14 / have-org-role-91 :arg2 (s15 / spokesperson)) :arg0-of (h15 / have-org-role-91 :arg2 (s16 / spokesperson)) :arg0-of (h16 / have-org-role-91 :arg2 (s17 / spokesperson)) :arg0-of (h17 / have-org-role-91 :arg2 (s18 / spokesperson)) :arg0-of (h18 / have-org-role-91 :arg2 (s19 / spokesperson)) :arg0-of (h19 / have-org-role-91 :arg2 (s20 / spokesperson)) :arg0-of (h20 / have-org-role-91 :arg2 (s21 / spokesperson)) :arg0-of (h21 / have-org-role-91 :arg2 (s22 / spokesperson)) :arg0-of (h22 / have-org-role-91 :arg2 (s23 / spokesperson)) :arg0-of (h23 / have-org-role-91 :arg2 (s24 / spokesperson)) :arg0-of (h24 / have-org-role-91 :arg2 (s25 / spokesperson))))
(l / lie-07 :arg1 (v / victim) :arg2 (m / motorway) :time (m2 / middle :op1 (n / night)))
(c / contrast-01 :arg1 (i / interview-01 :arg1 (p / person :arg0-of (d / drive-01) :arg1-of (i2 / involve-01) :quant (s / several)) :time (a / already)) :arg2 (s2 / say-01 :arg0 (p2 / police :arg1-of (i3 / identify-01 :polarity -)) :arg1 (a2 / and :op1 (p3 / person :arg0-of (c2 / call-03 :arg1 (t / they)) :arg0-of (c3 / call-03 :arg1 (i4 / incident))) :op2 (a3 / anyone :mod (e / else) :arg0-of (w / witness-01 :arg1 (i5 / incident))))))
(m / multi-sentence :snt1 (b / bene :mode (i / interrogative)) :snt2 (a / and :op1 (i2 / invite-01 :mode (i3 / interrogative) :arg0 (a2 / and :op1 (p / person :name (n / name :op1 "jiri" :op2 "kubicek")) :op2 (p2 / person :mod (f / fellow) :mod (f2 / fellow) :mod (f3 / fellow))) :arg2 (w / work-01 :arg0 (a3 / and) :accompanier (h / he))) :op2 (c / create-01 :arg0 (a4 / and) :arg1 (f4 / film :mod (s / short) :arg1-of (o / originate-01 :arg2 (k / ku?áci))) :manner (t / together)) :op3 (c2 / create-01 :arg0 (a5 / and) :arg1 (f5 / film :arg1-of (o2 / originate-01 :arg2 (t2 / tinkers))))))
(t / take-01 :arg1 (s / slot :quant 8 :arg1-of (i / include-91 :arg2 (s2 / slot :quant 10 :mod (t2 / top)))))
(s / say-01 :arg0 (p / person :arg0-of (l / lead-02 :arg1 (n / negotiators))) :arg1 (s2 / suspend-01 :arg1 (s3 / strike-01 :arg2 (p2 / person :arg0-of (w / work-01 :arg2 (o / oil :mod (s4 / sea) :location (n2 / north))))) :time (s5 / strike-01 :arg1 (p3 / party :quant (a / all)) :arg2 (d / dispute-01 :arg2 (r / round :mod (n3 / new) :consist-of (t / talk-01)) :mod (n4 / new)))))
(a / and :op1 (p / pressure-01 :arg0 (t / thing :arg2-of (p2 / price-01 :arg1 (o / oil)) :arg1-of (l / low-04 :degree (m / more))) :arg1 (m2 / monetary-quantity :arg2-of (p3 / price-01 :arg1 (o2 / oil)) :arg1-of (l2 / low-04 :degree (m3 / more))) :arg2 (m4 / monetary-quantity :arg2-of (p4 / price-01 :arg1 (o3 / oil)) :arg1-of (l3 / low-04 :degree (m5 / more)))) :op2 (s / situation :arg0 (d / decide-01 :arg0 (c / country :name (n / name :op1 "N-A"))) :arg1 (l4 / leave-11 :arg0 (c2 / company) :arg1 (u / union-02 :arg1 (c3 / continent :name (n2 / name :op1 "N-A"))))))
(a / and :op1 (n / need-01 :arg0 (w / we) :arg1 (e / economy :arg1-of (w2 / work-09 :arg2 (m / many))) :location (a2 / across :op1 (c / country))) :op2 (n2 / need-01 :arg0 (w3 / we) :arg1 (e2 / economy :mod (j / just :polarity -))) :op3 (s / say-01 :arg0 (h / he) :arg1 (t / thing :arg1-of (s2 / state-01))))
(m / multi-sentence :snt1 (c / cause-01 :arg0 (o / open-01 :arg1 (f / field :location (f2 / field))) :arg1 (l / like-02 :arg0 (i / i) :arg1 (w / work-01 :arg0 (i2 / i) :arg1-of (c2 / cause-01 :arg0 (o2 / open-01 :arg1 (f3 / field)))))) :snt2 (p / problem :mod (o3 / only) :domain (o4 / open-01 :arg1 (t / temporal-quantity :quant (N / N-A) :unit (m2 / month)) :location (h / hospital)) :arg1-of (c3 / cause-01 :arg0 (l2 / like-02 :arg0 (i3 / i) :arg1 (w2 / work-01 :arg0 (i4 / i))))))
(m / multi-sentence :snt1 (i / invest-01 :mode (i2 / interrogative) :arg0 (p / person :arg0-of (o / operate-01 :arg1 (s / stock :quant 50))) :arg2 (r / rate-entity-91 :arg1 (u / up-to :op1 (b / between :op1 (t / temporal-quantity :quant (N / N-A) :unit (h / hour)) :op2 (t2 / temporal-quantity :quant (N2 / N-A) :unit (h2 / hour)))) :arg2 (t3 / temporal-quantity :quant (N3 / N-A) :unit (h3 / hour)))) :snt2 (i3 / include-01 :arg1 (a / and :op1 (p2 / plan-01 :arg0 (p3 / person :arg0-of (o2 / operate-01)) :arg1 (u2 / use-01 :arg0 (p4 / person) :arg1 (l / line :mod (l2 / line)))) :op2 (a2 / agree-01 :arg0 (p5 / person) :arg1 (p6 / purchase-01 :arg0 (p7 / person) :arg1 (p8 / purchase-01 :arg0 (p9 / person) :arg1 (u3 / unit :mod (e / electric-powered)))) :mod (m2 / master)) :arg2 (p10 / purchase-01 :arg0 (p11 / person) :arg1 (l3 / link-01 :mod (r2 / railway))) :mod (m3 / master))))
(h / help-01 :polarity - :arg0 (l / law :mod (n / new)) :arg1 (w / we) :arg2 (e / example :mod (t / this)))
(p / point-out-02 :arg0 (c / critic) :arg1 (r / remain-01 :arg1 (r2 / rule :purpose (c2 / combat-01 :arg1 (a / and :op1 (l / law :polarity -) :op2 (a2 / adverts :mod (p2 / portable))))) :time (b / before)))
(m / multi-sentence :snt1 (r / return-01 :arg1 (p / person :arg0-of (h / have-org-role-91 :arg1 (p2 / political-party :name (n / name :op1 "N-A")))) :arg4 (c / case) :time (s / still)) :snt2 (b / be-located-at-91 :arg1 (l / location :mod (o / other)) :arg2 (t / there) :mod (s2 / still)))
(p / possible-01 :arg1 (i / increase-01 :arg0 (h / harvest-01 :arg1 (p2 / poppy) :time (y / year :mod (t / this))) :arg1 (p3 / person :quant 2.5 :arg0-of (c / consume-01))))
(l / last-01 :arg1 (d / decline-01) :arg2 (r / rate-entity-91 :arg1 (u / under :op1 (m / monetary-quantity :quant (N / N-A) :unit (y / yuan))) :arg2 (t / temporal-quantity :quant (N2 / N-A) :unit (y2 / year)) :arg1-of (e / expect-01 :time (d2 / drop-01 :arg1 (d3 / decline-01) :arg4 (v / value-interval :op1 6.04 :op2 6.04)))))
(r / rate-entity-91 :arg1 (a / about :op1 (p / percentage-entity :value (N / N-A))) :arg2 (t / temporal-quantity :quant (N2 / N-A) :unit (y / year)))
(a / and :op1 (o / oppose-01 :arg0 (m / militant :mod (r / religious-group :name (n / name :op1 "N-A"))) :arg1 (p / person :mod (r2 / religious-group :name (n2 / name :op1 "N-A")))) :op2 (b / blame-01 :arg1 (m2 / militant) :arg2 (k / kill-01 :arg0 (m3 / militant) :arg1 (d / doctor :arg1-of (i / involve-01 :arg2 (p2 / programme :mod (v / vaccination)))))))
(r / resurfaced :arg1 (c / case-03 :mod (p / polio)) :location (n / nigeria))
(t / tell-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg2 (d / director)) :arg0-of (h2 / have-org-role-91 :arg2 (d2 / director))) :arg1 (s / start-01 :arg1 (i / immunisation :location (n / nigeria)) :time (w / week :mod (n2 / next))) :arg2 (p2 / person :arg0-of (h3 / have-org-role-91 :arg2 (d3 / director))))
(s / say-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (c / country :name (n / name :op1 "N-A")))) :arg1 (a / and :op1 (f / force-01 :arg1 (w / woman :mod (t / this) :quant (a2 / all)) :arg2 (k / kidnap-01 :arg1 (w2 / woman))) :op2 (s2 / subject-01 :arg1 (w3 / woman) :arg2 (v / violence :mod (p2 / physical)))))
(s / say-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (p2 / pope) :arg2 (s2 / spokesman))) :arg1 (w / want-01 :arg0 (p3 / pope) :arg1 (u / use-01 :arg0 (p4 / pope) :arg1 (m / meet-03 :mod (t / this)) :purpose (a / and :op1 (d / draw-02 :arg0 (p5 / pope) :arg2 (t2 / traffic-01 :arg1 (h2 / human))) :op2 (c / call-03 :arg0 (p6 / pope) :arg1 (s3 / stepping :arg1 (f / fight-01 :arg1 (i / it))))))))
(a / attend-02 :arg0 (p / pope) :arg1 (f / fate :poss (p2 / person)) :arg2 (f2 / fate :poss (s / society)) :frequency (o / often))
(r / recommend-01 :arg1 (m / meet-01 :arg1 (o / objective :mod (t / this)) :arg1-of (k / key-02 :arg2 (e / ensure-01 :arg1 (o2 / objective :mod (t2 / this))))))
(c / cause-01 :arg0 (m / mention-01 :arg0 (h / he) :arg1 (t / thing :arg0-of (c2 / cause-01 :arg1 (c3 / crisis))) :ord (o / ordinal-entity :value 1)) :arg1 (t2 / thing :arg0-of (c4 / cause-01 :arg1 (c5 / crisis)) :domain (t3 / thing :arg0-of (c6 / cause-01 :arg1 (c7 / crisis))) :arg1-of (m2 / mention-01 :arg0 (h2 / he) :medium (t4 / thing :arg1-of (c8 / comment-01 :arg0 (h3 / he) :purpose (o2 / open-01 :arg0 (h4 / he) :arg1 (p / plane :mod (c9 / country :name (n / name :op1 "N-A")) :arg0-of (f / fight-01) :location (b / border-01 :arg1 (c10 / country :name (n2 / name :op1 "N-A")) :arg2 (c11 / country)))))))))
(j / jockey :arg0 (j2 / jockey :ord (o / ordinal-entity :value 6)) :arg1 (r / reach-01 :arg1 (l / landmark) :location (f / flat)) :ord (o2 / ordinal-entity :value 6))
(t / tell-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (c / country :name (n / name :op1 "N-A")) :arg2 (s / station :mod (t2 / tv)))) :arg1 (a / and :op1 (a2 / ask-02 :arg0 (p2 / person) :arg1 (l / leave-11 :arg0 (p3 / person) :arg1 (p4 / post))) :op2 (r / recommend-01 :arg0 (p5 / person) :arg1 (r2 / replace-01 :arg1 (p6 / person :arg0-of (h2 / have-org-role-91 :arg2 (m / mr))) :arg2 (p7 / person)))) :arg2 (s2 / station :mod (t3 / tv) :mod (c2 / country :name (n2 / name :op1 "N-A"))))
(c / convince-01 :mode (i / interrogative) :arg1 (p / person :mod (s / smiles)))
(a / and :op1 (p / play-01 :arg0 (p2 / person :arg0-of (p3 / play-01 :arg1 (a2 / agent :arg1-of (s / special-02))) :arg0-of (h / have-org-role-91 :arg2 (a3 / agent :mod (a4 / agent :arg1-of (s2 / special-02)))) :arg0-of (h2 / have-org-role-91 :arg2 (a5 / agents)))) :op2 (a6 / announce-01 :arg1 (a7 / apology :topic (t / thursday)) :time (b / before :op1 (a8 / announce-01 :arg1 (p4 / pregnancy :arg0 (p5 / person))))))
(o / operation :mod (d / delicate) :arg2-of (i / involve-01 :arg1 (t / tolerances :mod (p / precise :degree (e / extreme)) :mod (p2 / precise :degree (e2 / extreme)) :mod (p3 / precise :degree (e3 / extreme)))) :concession (a / and :op1 (s / size :poss (c / complete-01 :arg0 (a2 / and :op1 (s2 / size :poss (p4 / person :arg0-of (c2 / complete-01 :arg1 (v / viaduct)))) :op2 (w / weight :poss (b / bridge)))) :op2 (w2 / weight :poss (b2 / bridge)))))
FAILED_TO_PARSE#Number of opening and closing brackets doesn't match.
(r / represent-01 :arg0 (c / closure :mod (t / this)) :arg1 (e / engineer-01 :mod (c2 / civil) :arg0-of (l / lead-01) :arg0-of (l2 / lead-01)) :location (p / project :mod (t2 / this)))
(s / stop-01 :polarity - :arg1 (b / benefit-01) :location (t / there))
(c / cause-01 :arg1 (o / owe-01 :arg0 (y / you) :arg1 (a / and :op1 (p / person :quant 3 :arg0-of (h / have-rel-role-91 :arg2 (d / dd2))) :op2 (p2 / person :mod (a2 / air) :arg1-of (f / fresh-04)) :op3 (s / sunshine)) :arg2 (y2 / you)))
(c / cause-01 :arg0 (p / possible-01 :arg1 (t / track :arg0 (a / apps :arg1-of (r / resemble-01 :arg2 (f / fitbit))) :arg1 (a2 / activity-06 :arg0 (w / we)) :time (p2 / previous))) :arg1 (g / give-01 :arg0 (t2 / they) :arg1 (r2 / reason :arg0-of (c2 / cause-01 :arg1 (c3 / coexist-01 :arg1 (w2 / we) :arg2 (g2 / game :mod (t3 / this))))) :arg2 (w3 / we) :degree (t4 / total)))
(u / united :arg0 (s / state) :arg1 (p / performs :arg0 (s2 / state) :arg1 (b / balance-01 :arg1 (b2 / balance-01 :arg1 (b3 / beams))) :time (f / final :time (s3 / summer :mod (s4 / summer :quant 2016) :location (o / olympics :name (n / name :op1 (d / de) :op2 (d2 / de) :op3 (j / janeiro) :op4 (f2 / final) :op5 (f3 / final) :op6 (f4 / final) :op7 (f5 / final) :op6 (f6 / final) :op7 (f7 / final) :op8 (f8 / final)))))))
(a / and :op1 (' / ' :arg0 (s / state) :arg1 (a2 / and :op1 (b / biles :arg1 (s2 / state)) :op2 (l / leave-11 :arg0 (s3 / state)) :op3 (e / embrace :arg0 (s4 / state))) :time (a3 / after :op1 (w / win-01 :arg0 (s5 / state) :arg1 (a4 / and :op1 (g / gold) :op2 (s6 / silver)) :mod (r / respective)))) :op2 (e2 / embrace :arg0 (s7 / state) :time (a5 / after :op1 (w2 / win-01 :arg0 (s8 / state) :arg1 (a6 / and :op1 (g2 / gold) :op2 (s9 / silver)) :mod (r2 / respective) :time (s10 / summer :quant 2016 :mod (s11 / summer :mod 2016) :location (o / olympics :name (n / name :op1 (d / de) :op2 (d2 / de) :op3 (f / final) :op4 (f2 / final) :op5 (f3 / final) :op6 (f4 / final) :op7 (f5 / final))))))))
(r / remembers :arg1 (m / manipulate-01 :arg1 (f / future :mod (e / emotional)) :mod (e2 / emotional)))
(s / say-01 :arg0 (p / police) :arg1 (a / and :op1 (s2 / shoot-02 :arg1 (b / boy :mod (6 / 6-year-old)) :location (p2 / philadelphia)) :op2 (m / marking :arg0 (b2 / boy) :arg1 (s3 / shooting :ord (o / ordinal-entity :value 2) :part-of (62 / 6-year-old :location (c / city))) :time (w / week :mod (t / this)))))
(t / tell-01 :arg0 (p / person :arg0-of (i / investigate-01)) :arg1 (a / appear-02 :arg1 (p2 / philadelphia :arg0 (g / gunman :quant (m / multiple)))) :arg2 (p3 / person :arg0-of (i2 / investigate-01)))
(a / and :op2 (i / inspire-01 :arg0 (t / team :consist-of (p / person :arg0-of (h / have-org-role-91 :arg1 (t2 / team :mod (t3 / this)) :arg3 (l / lead-02 :arg0 (t4 / team))))) :arg1 (a2 / and :op1 (p2 / person :arg0-of (h2 / have-org-role-91 :arg1 (t5 / team) :arg3 (l2 / lead-02 :arg0 (p3 / person)))) :op2 (p4 / person :arg0-of (h3 / have-org-role-91 :arg1 (t6 / team :name (n / name :op1 (s / simone))))) :op3 (p5 / person :arg0-of (h4 / have-org-role-91 :arg2 (h5 / head-of-state))) :op4 (p6 / person :arg0-of (h6 / have-org-role-91 :arg2 (h7 / head-of-state))) :op5 (p7 / person :arg0-of (h8 / have-org-role-91 :arg2 (h9 / head-of-state))) :op6 (p8 / person :arg0-of (h10 / have-org-role-91 :arg2 (h11 / head-of-state))) :op7 (p9 / person :arg0-of (h12 / have-org-role-91 :arg2 (h13 / head-of-state))) :op7 (p10 / person :mod (c / color) :quant (m / many :degree (s2 / so))))))
(a / and :op1 (b / be-located-at-91 :arg1 (c / club :mod (t / this)) :arg2 (g / get-01 :arg1 (t2 / train-01 :arg2 (t3 / they) :quant (a2 / all)))) :op2 (c2 / commit-01 :arg1 (c3 / club) :arg2 (f / family :arg1-of (h / have-org-role-91 :arg0 (h2 / he) :arg2 (m / member))) :arg1-of (l / long-03)))
(s / say-01 :arg0 (p / person :name (n / name :op1 "ellen" :op2 "mccourt") :mod (e / exact) :arg0-of (h / have-org-role-91 :arg1 (c / committee :mod (j / junior) :poss (b / bma)) :arg2 (c2 / chair))) :arg1 (a / and :op1 (h2 / have-03 :arg0 (d / doctor :mod (j2 / junior)) :arg1 (c3 / concern-01 :arg0 (c4 / contract-02 :arg1 (f / force :time (c5 / current)))) :mod (s2 / serious)) :op2 (f2 / fail-01 :arg1 (d2 / doctor) :arg2 (t / treat-01 :arg0 (d3 / doctor) :arg1 (d4 / doctor :quant (a2 / all)) :degree (f3 / fair)))) :time (n2 / night :mod (l / last)))
(m / multi-sentence :snt1 (' / ' :domain (h / he) :mod (g / good-looking)) :snt2 (g2 / guess-01 :arg0 (i / i) :arg1 (c / compliment :domain (i2 / it))))
(t / think-01 :arg0 (p / person :name (n / name :op1 "byron" :op2 "macdonald")) :arg1 (t2 / turned :arg1 (m / mic :poss (h / he)) :time (s / start-01 :arg0 (h2 / he) :arg1 (d / dispense :arg0 (h3 / he) :arg1 (t3 / thing :arg1-of (o / opine-01 :arg0 (h4 / he)) :quant (s2 / some) :arg1-of (i / include-91 :arg2 (t4 / thing :arg1-of (o2 / opine-01 :arg0 (h5 / he))) :time (e / end-01 :arg1 (f / freestyle :poss (w / woman) :mod (4 / 4x200m)))))))))
(m / multi-sentence :snt1 (s / say-01 :arg0 (i / i) :arg1 (d / die-01 :mode (i2 / interrogative) :arg1 (p / person :source (c / country :name (n / name :op1 "N-A")) :arg1-of (r / resemble-01 :arg2 (p2 / person :mod (c2 / country :name (n2 / name :op1 "N-A")))))) :mod (j / just)) :snt2 (d2 / die-01 :mode (i3 / interrogative)))
(a / and :op1 (r / regret-01 :arg0 (w / we) :arg1 (m / make-01 :arg1 (t / thing :arg1-of (s / state-01) :mod (t2 / this))) :manner (f / frank)) :op2 (a2 / allow-01 :arg1 (g / go-02 :arg0 (t3 / they) :arg4 (a3 / air))))
(a / and :op1 (b / bad-07 :arg1 (s / she) :degree (m / more :mod (e / even))) :op2 (s2 / sized :arg0 (s3 / she) :arg1 (t / they)) :op3 (p / put-01 :arg0 (s4 / she) :arg1 (t2 / they) :arg2 (b2 / back :part-of (s5 / shelf)) :direction (b3 / back)))
(a / and :op1 (i / ian :arg0 (a2 / and :op1 (p / person :arg0-of (w / write-01)) :op2 (p2 / person :arg0-of (w2 / write-01) :mod (t / travel-01))) :location (a3 / along :op1 (n / note :mod (e / euro))) :li 51) :op2 (h / hands :arg0 (a4 / and :op1 (p3 / person :arg0-of (w3 / write-01)) :op2 (p4 / person :arg0-of (w4 / write-01)) :op3 (e2 / enthusiasm :poss (p5 / person))) :arg1 (a5 / and :op1 (r / rail) :op2 (r2 / rail)) :purpose (p6 / prove-01 :arg0 (a6 / and) :arg1 (s / strength :poss (s2 / system :mod (i2 / immune) :poss (h2 / he))))) :li 51)
(c / cause-01 :arg0 (n / nothing :arg2-of (f / fortunate-01 :polarity -)) :arg1 (l / leave-14 :arg0 (h / he) :arg1 (a / anything :mod (m / more :compared-to (t / taste :arg1-of (b / bad-07) :location (m2 / mouth :part-of (h2 / he)))))))
(m / multi-sentence :snt1 (d / do-02 :arg0 (w / we) :arg1 (b / brainstorm :arg1-of (c / crazy-03) :quant (l / lot) :arg1-of (e / end-01 :location (i / idea :name (n / name :op1 (' / '')))))) :snt2 ('2 / '' :mode (e2 / expressive)))
(f / force :mod (a / air) :mod (p / portuguese) :arg1-of (p2 / p-3c :arg2 (l / low-04 :degree (i / incredible))) :arg0-of (s / swooped :arg1 (p3 / plane) :degree (i2 / incredible)))
(s / start-01 :arg0 (p / person :arg0-of (t / tour-01)) :arg1 (p2 / panic-01 :arg0 (p3 / person) :arg1 (j / jet :name (n / name :op1 (l / low-flying)) :arg1-of (s2 / swooped :arg2 (o / over :op1 (b / beach)) :direction (d / down)))) :time (m / moment))
(s / say-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (i / it) :arg2 (s2 / spokesman))) :arg1 (i2 / impose-01 :arg0 (a / and :op1 (p2 / person :arg0-of (h2 / have-org-role-91 :arg1 (i3 / it) :arg2 (s3 / spokesman))) :op2 (p3 / person :arg0-of (h3 / have-org-role-91 :arg2 (c / cti))) :op3 (p4 / person :arg0-of (h4 / have-org-role-91 :arg2 (c2 / cti))) :op4 (p5 / person :arg0-of (h5 / have-org-role-91 :arg2 (c3 / cti))) :op5 (p6 / person :arg0-of (h6 / have-org-role-91 :arg2 (c4 / cti)))) :arg1 (c5 / crowns :quant 41 :mod (f / fines))))
(s / say-01 :arg0 (p / person :arg0-of (w / want-01 :arg1 (e / embrace :arg0 (p2 / person) :arg1 (n / novelty :mod (i / item :mod (p3 / physical)))))) :arg1 (c / contrast-01 :arg1 (d / drive-02 :arg1 (r / resurgence :mod (r2 / record) :quant (m / much)) :arg2 (p4 / person :arg0-of (w2 / want-01 :arg1 (e2 / embrace :arg0 (p5 / person) :arg1 (n2 / novelty :mod (i2 / item :mod (p6 / physical))))))) :arg2 (n3 / nostalgia :arg0 (m2 / midlife))))
(m / multi-sentence :snt1 (s / suppose-01 :arg0 (i / i) :arg1 (b / be-02 :arg1 (i2 / i))) :snt2 (s2 / say-01 :arg0 (h / he)))
(h / have-concession-91 :arg1 (n / notice-01 :arg0 (h2 / he) :arg1 (w / wave-04 :arg1 (p / person :arg1-of (i / influence-01 :arg0 (m / media)) :mod (n2 / new)) :mod (n3 / new))) :arg2 (n4 / notice-01 :arg0 (h3 / he) :arg1 (p2 / pretend-01 :arg0 (p3 / person) :arg1 (b / buy-01 :arg0 (p4 / person) :arg1 (r / record :mod (o / old) :poss (p5 / person))))))
(c / contrast-01 :arg1 (l / look-02 :arg0 (t / they :quant (n / none)) :arg1 (l2 / lonely :mod (p / particular))) :arg2 (h / hard-02 :arg1 (a / ascertain :arg1 (t2 / trauma :mod (w / weapons-grade)) :arg4 (n2 / next-to :op1 (s / someone :mod (n3 / next)) :duration (f / forever)))))
(s / stairwell :arg1 (w / wall :arg1-of (s2 / stacked :arg0 (a / and :op1 (p / person :name (n / name :op1 "jeff" :op2 "buckley")) :op2 (p2 / person :mod (w2 / winehouse)) :op3 (m / mac :name (n2 / name :op1 (a2 / amy))) :op4 (m2 / mac :mod (f / fleetwood)) :op5 (m3 / mac :mod (f2 / fleetwood))))) :arg2 (l / left) :arg1-of (c / cause-01 :arg0 (m4 / mixed :arg1 (a3 / and :op1 (l2 / language :name (n3 / name :op1 "N-A")) :op2 (c2 / classical) :op3 (f3 / fleetwood)))))
(l / look-01 :arg0 (n / nobody) :arg1 (p / possible-01 :polarity - :arg1 (t / touch-01 :arg0 (t2 / they) :arg1 (w / wall))) :arg1-of (c / cause-01 :arg0 (d / decoration :arg1 (t3 / they) :mod (m / mere))) :arg1-of (c2 / cause-01 :arg0 (d2 / decoration :arg1 (t4 / they) :mod (m2 / mere))))
(m / multi-sentence :snt1 (a / and :op1 (c / charity :quant 2) :op2 (h / help-01 :arg0 (a2 / and :op1 (r / refugee) :op2 (a3 / and :op1 (r2 / refugee) :op2 (l / l))))) :snt2 (r3 / rise-01 :arg1 (n / number :location (c2 / camp :mod (d / distance-quantity :quant (N / N-A) :unit (i / inch)))) :arg4 (p / person :quant (o / over :op1 9,000) :arg1-of (h2 / high-02 :degree (m2 / most) :time (e / ever))) :time (a4 / after :op1 (s / summer) :mod (s2 / steep))))
(a / and :op1 (e / experience-01 :arg0 (h / he) :degree (v / very)) :op2 (s / see-01 :arg0 (h2 / he) :arg1 (l / lot)) :op3 (w / want-01 :arg0 (h3 / he) :arg1 (c / consult-01 :arg0 (h4 / he) :arg1 (t / team) :arg2 (p / place :mod (l2 / last))) :mod (c2 / certain)))
(l / look-02 :arg0 (h / he) :arg1 (a / amr-unknown))
(l / look-04 :arg0 (y / you) :arg1 (n / number :arg1 (n2 / number :quant-of (p / person :quant 1)) :direction (f / forward)))
(b / become-01 :arg1 (p / person :name (n / name :op1 "manuel")) :arg2 (s / swimmer :mod (f / female) :ord (o / ordinal-entity :value 1) :arg1-of (b2 / black-05)) :purpose (w / win-01 :arg0 (p2 / person) :arg1 (m / medal :mod (g / gold) :mod (o2 / olympic))))
(f / finish-01 :arg0 (c / cambell :mod (r / record :mod (w / world))) :arg1 (s / sixth) :mod (o / only))
(a / and :op1 (w / win-01 :arg0 (i / i)) :op2 (s / see-01 :polarity - :arg0 (i2 / i) :arg1 (t / thing :arg0-of (c / cause-01 :arg1 (o / obligate-01 :arg1 (i3 / i) :arg2 (k / keep-02 :arg0 (i4 / i) :arg1 (a2 / answer-01 :arg0 (i5 / i) :arg1 (t2 / thing :arg1-of (q / question-01) :mod (t3 / this) :quant (a3 / all)))))))))
(l / like-01 :arg0 (y / you) :arg1 (p / play-01 :arg1 (n / number :mod (c / court :mod (s / small)))) :manner (a / amr-unknown))
(a / adjust-01 :arg0 (w / we) :arg1 (r / routine :poss (w2 / we) :mod (r2 / routine)) :time (a2 / already) :time (s / start-01 :arg0 (w3 / we) :time (l / late :degree (m / more))) :mod (a3 / already))
(r / recommend-01 :arg1 (a / apply-02 :arg1 (r2 / rule :mod (n / new)) :arg2 (p / person :mod (a2 / all) :arg0-of (d / decide-01 :arg1 (p2 / purchase-01 :arg0 (p3 / person) :arg1 (c / card :mod (s / sim)) :arg2 (o / operate-01 :arg1-of (l / local-02)))))) :arg2 (r3 / rule :mod (n2 / new)))
(l / live-01 :arg0 (y / you) :location (a / amr-unknown) :time (b / before :op1 (m / move-01 :arg0 (y2 / you) :arg2 (p / person :mod (c / country :name (n / name :op1 "N-A"))))))
(d / decide-01 :arg0 (y / you) :arg1 (m / move-01 :arg0 (y2 / you) :location (c / country :mod (a / another))) :arg1-of (c2 / cause-01 :arg0 (a2 / amr-unknown)))
(c / come-01 :arg1 (p / person :mod (c2 / country :name (n / name :op1 "N-A"))) :arg4 (a / across :op1 (n2 / negative :mod (n3 / negative :degree (e / equal)))))
(c / cause-01 :arg0 (p / possible-01 :arg1 (r / realize-01 :polarity - :arg0 (p2 / person) :arg1 (i / it) :degree (s / so))) :arg1 (p3 / possible-01 :arg1 (r2 / realize-01 :polarity - :arg0 (p4 / person) :arg1 (i2 / it))))
(l / let-01 :polarity - :arg0 (t / they) :arg1 (g / get-03 :arg1 (a / anyone) :arg2 (c / close-10 :arg1 (a2 / anyone) :degree (t2 / too))))
(a / and :op1 (s / store) :op2 (s2 / supermarkets) :mod (e / even))
(t / tell-01 :arg0 (h / he) :arg1 (a / avoid-01 :arg0 (i / i) :arg1 (c / centre :mod (c2 / city))) :arg2 (i2 / i) :arg1-of (c3 / cause-01 :arg0 (i3 / insult-01 :arg0 (t2 / they) :arg1 (i4 / i) :mod (o / only))))
(f / fear-01 :mode (i / interrogative) :arg0 (y / you) :arg1 (r / resemble-01 :arg1 (s / something :arg1-of (r2 / resemble-01 :arg2 (o / or :op1 (p / paris) :op2 (b / brussels)))) :arg2 (h / here :location (l / location :name (n / name :op1 "prague")))))
(h / have-03 :arg0 (w / we) :arg1 (a / attitude :arg1-of (d / differ-02)) :concession-of (r / respect-01 :arg0 (w2 / we) :arg1 (p / person :quant 1 :mod (a2 / another))))
(f / feel-01 :polarity - :arg0 (i / i) :arg1 (g / good :degree (s / so)) :time (e / ever) :location (a / anywhere :mod (e2 / else)))
(w / want-01 :arg0 (t / they) :arg1 (c / compete-01 :arg0 (t2 / they) :arg1 (s / service :mod (d / deliver-01))))
(l / like-01 :arg0 (n / nobody) :arg1 (f / find-01 :arg0 (n2 / nobody) :arg1 (n3 / note :topic (a / advise :arg0 (t / they) :arg1 (p / parcel :poss (t2 / they)) :location (b / branch :mod (o / office) :mod (p2 / post))))) :time (a2 / after :op1 (m / multiple :op1 19)))
(a / and :op1 (s / start-01 :arg1 (d / develop-02 :arg1 (a2 / app :name (n / name :op1 (' / '') :op2 ('2 / '')))) :time (y / year :mod (l / last))) :op2 (r / release-01 :arg1 (a3 / app) :time (y2 / year :mod (t / this))))
(m / multi-sentence :snt1 (l / liable :arg1 (o / or :op1 (l2 / lose-02 :arg1 (i / it)) :op2 (d / damage-01 :arg1 (i2 / it)))) :snt2 (c / contrast-01 :arg2 (l3 / liable :polarity - :arg1 (h / he) :arg2 (c2 / content :poss (i3 / it) :prep-under (l4 / law :arg2-of (c3 / criminal-03))) :condition (r / realize-01 :polarity - :arg0 (h2 / he) :arg1 (s / something :mod (l5 / law :polarity -) :location (i4 / inside :op1 (p / package)))))))
(a / and :op1 (l / look-01 :arg0 (w / we) :arg1 (p / person :arg0-of (i / invest-01) :arg0-of (h / have-03 :arg1 (c / courage) :purpose (d / develop-02 :arg0 (p2 / person) :arg1 (p3 / product) :location (b / beyond :op1 (m / market :mod (c2 / czech)))))) :time (n / now)) :op2 (c3 / create-01 :arg0 (w2 / we) :arg1 (p4 / person :arg0-of (l2 / lead-02 :arg1 (m2 / market :mod (g / globe)))) :accompanier (a2 / and :op1 (a3 / airbnb) :op2 (u / uber))))
(p / possible-01 :arg1 (e / enjoy-01 :arg0 (p2 / person :arg0-of (p3 / play-01)) :arg1 (f / free-04 :arg1 (m / movement-07))) :arg1-of (c / cause-01 :arg0 (i / include-01 :arg1 (o / option :purpose (u / use-01 :arg1 (f2 / fight-01 :arg2 (f3 / fight-01 :arg2 (f4 / fight-01))))))))
(r / reminiscent :arg0 (t / they) :arg1 (a / and :op1 (g / game :mod (p / platform)) :op2 (e / excuse-02 :arg0 (t2 / they))))
(e / exemplify-01 :arg0 (p / possible-01 :arg1 (a / and :op1 (m / move-01 :arg1 (p2 / platform)) :op2 (o / open-01 :arg1 (p3 / platform)) :op3 (o2 / open-01 :arg1 (p4 / platform)) :op4 (o3 / open-01 :arg1 (p5 / platform)) :op5 (o4 / open-01 :arg1 (p6 / platform)))))
(c / create-01 :arg1 (g / game :quant 23 :mod (a / another)) :arg3 (h / house :arg0-of (p / publish-01) :arg1-of (r / reveal-01 :arg0 (p2 / person :quant 13 :arg1-of (i / include-91 :arg2 (p3 / person))))))
(c / contrast-01 :arg1 (p / possible-01 :arg1 (f / find-01 :arg0 (y / you) :condition (f2 / funny))) :arg2 (c2 / convince-01 :arg0 (i / i) :arg1 (i2 / i) :arg2 (c3 / control-01 :arg0 (p2 / person :arg0-of (h / have-rel-role-91 :arg1 (i3 / i) :arg2 (w / wife))) :arg1 (i4 / i) :accompanier (m / mind :poss (s / she)))))
(p / possible-01 :arg1 (i / i :mod (j / just)) :arg1-of (p2 / possible-01))
(a / ask-01 :arg0 (i / i) :arg1 (o / obligate-01 :arg2 (s / say-01 :arg0 (h / he) :arg1 (t / thing :arg1-of (s2 / say-01 :arg0 (h2 / he))))))
(a / and :op1 (t / type :domain (i / i) :mod (t2 / type)) :op2 (f / find-02 :arg0 (i2 / i) :arg1 (d / difficult :domain (m / meet-02 :arg0 (i3 / i) :arg1 (w / woman :mod (n / new)))) :time (a2 / always)) :op3 (l / let-01 :arg0 (i4 / i) :arg1 (w2 / woman :mod (a3 / alone))))
(g / go-03 :arg0 (p / person :mod (r / religious-group :name (n / name :op1 "N-A")) :quant (a / around :op1 30,000) :mod (c / country :name (n2 / name :op1 "N-A"))) :arg1 (p2 / pilgrimages :mod (t / this)) :arg4 (a2 / arabia) :time (y / year :mod (e / every)))
(r / report-01 :arg0 (n / newspaper) :arg1 (i / injure-01 :arg0 (p / person :arg0-of (d / depend-01 :polarity -) :arg1-of (n2 / name-01 :polarity -) :arg1-of (n3 / name-01 :polarity -)) :arg1 (e / ex-wife :arg0 (p2 / person) :arg1 (c / centre :purpose (s / shop-01)) :location (z / zaragoza :location (n4 / north :part-of (n5 / north)))) :manner (s2 / serious)) :time (m / morning :mod (f / friday)))
(r / restaurants :arg1 (r2 / restaurant :name (n / name :op1 (a / al) :op2 (f / fresco) :op3 (f2 / fresco)) :poss (w / we)) :arg2 (s / serve-01 :arg0 (r3 / restaurant) :arg1 (o / or :op1 (p / pork :mod (g / grilled)) :op2 (k / knuckles :mod (b / brisket)) :op3 (k2 / knuckles :mod (p2 / pork)))))
(a / and :op1 (m / make-01 :arg0 (a2 / and :op1 (i / ingredient :mod (q / quality)) :op2 (t / thing :quant (b / bit))) :arg1 (a3 / and :op1 (e / enjoyable) :op2 (f / food))) :op2 (m2 / make-01 :arg0 (a4 / and :op1 (i2 / ingredient :mod (q2 / quality)) :op2 (t2 / thing :quant (b2 / bit))) :arg1 (a5 / and :op1 (e2 / enjoyable) :op2 (f2 / food))))
(j / journey :arg0 (p / person :mod (c / country :name (n / name :op1 "N-A")) :quant (s / some)))
(h / hard-02 :arg1 (a / admire :polarity - :arg1 (a2 / approach-02 :arg0 (j / joyful :mod (w / whole)) :mod (w2 / whole))))
(t / take-01 :arg0 (c / courtroom) :arg1 (y / year) :time (b / before :op1 (d / deciding :arg0 (t2 / thing) :arg1 (f / futures :poss (t3 / thing)))))
(h / have-condition-91 :arg2 (w / watch-01 :arg0 (t / they) :arg1 (r / rank :mod (t2 / taxi)) :beneficiary (o / other :mod (e / each))))
(h / have-03 :arg0 (t / they) :arg1 (d / divide-02 :arg1 (t2 / they) :arg2 (z / zone :arg1-of (d2 / differ-02))))
(m / multi-sentence :snt1 (h / have-03 :arg0 (i / i) :arg1 (m2 / mix-01 :arg1 (t / that :location (s / station :mod (r / railway) :mod (m3 / main))))) :snt2 (h2 / have-03 :mode (i2 / interrogative) :polarity - :mode (i3 / interrogative) :arg0 (y / you) :arg1 (r2 / relation-03 :arg0 (p / person :arg0-of (d / drive-01)) :arg2 (p2 / person :arg0-of (d2 / drive-01)) :location (l / lázn :mod (k / karlovy)))))
(c / contrast-01 :arg2 (p / percentage :mod (s / small :degree (v / very)) :mod (o / only) :domain (i / it)))
(a / and :op1 (c / continue-01 :arg0 (t / they) :arg1 (b / break-01 :arg0 (t2 / they) :arg1 (a2 / and :op1 (l / law) :op2 (r / regulate-01)) :source (l2 / location :mod (t3 / this))) :time (d / day :mod (t4 / this))) :op2 (o / out :op1 (o2 / out)))
(m / multi-sentence :snt1 (o / objective :polarity - :poss (i / i) :domain (v / vindication)) :snt2 (h / have-purpose-91 :arg1 (g / goal :poss (i2 / i)) :arg2 (m2 / make-05 :arg0 (y / you) :arg1 (p / place :mod (g2 / good :degree (m3 / more)))) :time (a / always)))
(p / possible-01 :polarity - :arg1 (c / content-01 :arg1 (y / you) :arg2 (t / that)))
(c / come-01 :polarity - :arg1 (t / they) :arg4 (a / across) :time (s / stage-01 :arg0 (t2 / they) :arg1 (d / demonstrate-01 :arg1-of (p / propose-01 :arg0 (o / office :poss (p2 / person :arg0-of (h / have-org-role-91 :arg1 (o2 / office :poss (p3 / person :arg0-of (h2 / have-org-role-91 :arg2 (m / mayor))) :arg2 (m2 / mayor))) :arg2 (o3 / office))) :arg1-of (p4 / propose-01 :arg0 (o4 / office :poss (p5 / person :arg0-of (h3 / have-org-role-91 :arg1 (o5 / office :poss (p6 / person :arg0-of (h4 / have-org-role-91 :arg2 (m3 / mayor))) :arg2 (m4 / mayor))))))))))
(s / surprise-01 :arg0 (f / find-01 :arg1 (p / person :source (f2 / footage))) :arg1 (b / be-located-at-91 :arg1 (p2 / person) :arg2 (t / there) :time (s2 / still)) :time (g / go-02 :arg0 (w / we) :arg4 (w2 / walk-01)))
(e / easy-05 :arg1 (c / clean-04) :degree (f / fair) :concession (n / need-01 :arg0 (y / you) :arg1 (s / scalpel :arg0 (y2 / you) :arg1 (p / person :mod (i / independent)) :arg2 (r / remove-01 :arg0 (p2 / person) :arg1 (d / dirt) :arg2 (c2 / creases)))))
(r / reveal-01 :arg0 (l / look-02 :mod (c / close :degree (m / more))) :arg1 (h / holes :mod (i / interesting) :arg1-of (d / drilled :arg2 (c2 / columns :mod (m2 / marble)))))
(a / and :op1 (w / want-01 :arg0 (i / i) :arg1 (p / politician :arg1-of (e / experience-01) :arg0-of (e2 / experience-01 :arg1 (j / job :mod (d / difficult) :mod (t / this))))) :op2 (s / say-01 :arg0 (p2 / person :arg0-of (h / have-org-role-91 :arg1 (c / commission :mod (c2 / continent :name (n / name :op1 "N-A"))) :arg2 (p3 / president :mod (v / vice)))) :arg1 (h2 / hard-02 :arg1 (f / find-01 :arg1 (e3 / example :mod (g / good :degree (m / more)) :consist-of (p4 / person :arg0-of (h3 / have-org-role-91 :arg1 (c3 / commission :mod (c4 / continent :name (n2 / name :op1 "N-A"))) :arg2 (c5 / chief))) :mod (g2 / good :degree (s2 / so))))) :time (a2 / appoint-01 :arg0 (p5 / person) :arg1 (p6 / politician :mod (c6 / country)) :arg2 (p7 / politician :mod (c7 / country)))))
(f / federalist :domain (b / barnier :mod (c / continent :name (n / name :op1 "N-A"))))
(m / multi-sentence :snt1 (c / come-04 :arg1 (n / news :topic (r / replace-01) :location (t / top :poss (o / office :poss (p / person :arg0-of (h / have-org-role-91 :arg2 (p2 / president)))))) :arg2 (s / surprise-01)) :snt2 (r2 / replace-01 :arg0 (p3 / person :arg0-of (h2 / have-org-role-91 :arg1 (h3 / he) :arg2 (d / deputy) :time (f / former)) :arg0-of (h4 / have-org-role-91 :arg2 (d2 / deputy) :time (f2 / former))) :arg1 (i / it)))
(m / multi-sentence :snt1 (a / and :op1 (k / kvitová :polarity - :arg1 (a2 / and :op1 (k2 / kvitová) :op2 (a3 / act-02 :mod (d / double)))) :op2 (a4 / act-02 :polarity - :mod (d2 / double) :mod (s / strýcová))) :snt2 (p / play-11 :mode (i / imperative) :arg0 (y / you) :arg2 (f / final)))
(f / fight-01 :arg0 (s / she) :time (u / until :op1 (e / end-01)) :arg1-of (c / cause-01 :arg0 (b / believe-01 :arg0 (s2 / she) :arg1 (r / reach-01 :arg0 (s3 / she) :arg1 (e2 / elite :mod (e3 / elite) :ord (o / ordinal-entity :value 4) :poss (s4 / she))))))
(p / produce-01 :arg0 (p2 / person :mod (b / both)) :arg1 (r / result :mod (g / good :degree (m / most))) :location (o / on :op1 (h / heptathlon)))
(a / and :op1 (r / revenge :domain (p / policy :mod (m / main) :poss (c / country :name (n / name :op1 "N-A") :location (c2 / country :name (n2 / name :op1 "N-A"))))) :op2 (t / terrify-01 :arg0 (a2 / and :op1 (t2 / territory :arg1-of (l / lose-02)) :op2 (h / humiliation :poss (w / west)))))
(i / include-91 :arg1 (a / and :op1 (i2 / inflation :arg1-of (a2 / average-04)) :op2 (i3 / inflation :arg1-of (m / measure-01 :arg0 (a3 / ambitious)))) :arg2 (p / product-of :op1 2014 :op2 2015) :time (d / date-interval :op1 (d2 / date-entity :decade (N / N-A)) :op2 (d3 / date-entity :dayperiod (N2 / N-A))) :arg1-of (c / compare-01 :arg2 (p2 / product-of :op1 2014 :op2 2015)))
(a / add-01 :arg0 (l / lawyer) :arg1 (p / possible-01 :polarity - :arg1 (g / get-03 :arg1 (p2 / person :mod (c / country :name (n / name :op1 "N-A"))) :arg2 (c2 / catch-02 :arg1 (p3 / person)))))
(k / know-02 :polarity - :arg1 (f / fate :poss (c / classmate :mod (k2 / kadiza))))
(t / town :location (r / relative-position :op1 (r2 / river :name (n / name :op1 "N-A")) :quant (m / many :op1 (t2 / temporal-quantity :quant (N / N-A) :unit (y / year)))) :domain (s / seat-01 :part-of (d / duke :mod (a / argyll))))
(e / enter-01 :arg0 (m / missteps :mod (a / any)) :arg1 (r / record :arg1-of (p / public-02)) :arg1-of (q / quick-02))
(o / offer-01 :arg0 (c / company) :arg1 (e / explain-01 :arg0 (c2 / company)) :arg1-of (m / mean-01 :arg2 (h / homage :polarity - :arg1 (p / person :mod (c3 / continent :name (n / name :op1 "N-A"))))))
(f / fail-01 :arg1 (p / person :arg0-of (l / lead-02)) :arg2 (r / reach-01 :arg0 (p2 / person) :arg1 (t / top :part-of (o / organization) :degree (v / very))))
(i / include-91 :polarity - :arg1 (i2 / i) :arg2 (p / person :arg0-of (k / keep-01 :arg1 (t / track :poss (p2 / person)))) :mod (r / really))
(c / contrast-01 :arg2 (h / have-condition-91 :arg1 (l / let-01 :mode (i / imperative) :arg0 (y / you) :arg1 (a / attend-02 :arg0 (i2 / i) :arg1 (d / discreet :mod (d2 / discreet)))) :arg2 (p / possible-01 :arg1 (m / make-05 :arg0 (i3 / i) :arg1 (c2 / case-03 :arg2 (f / favorite :arg0 (i4 / i) :mod (p2 / particular)))))))
(m / multi-sentence :snt1 (r / recommend-01 :arg1 (c / confess :arg0 (i / i) :arg1 (e / expert-01 :polarity - :arg1 (i2 / i) :arg2 (e2 / expert-01 :arg1 (i3 / i) :arg2 (p / person :arg1-of (e3 / expert-01)))) :location (h / here))) :snt2 (e4 / enthusiast :mode (e5 / expressive) :mod (j / just)))
(c / compete-01 :arg0 (a / and :op1 (a2 / athletes :source (c2 / country :quant 17)) :op2 (m / man :quant 16) :op3 (w / woman :quant 16)) :location (r / rio))
(c / call-03 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg2 (o / official :mod (r / right :mod (h2 / human))))) :arg1 (i / investigate-01 :manner (t / thorough)) :time (n / now))
(w / work-01 :arg0 (a / and :op1 (s / service :mod (m / military) :mod (c / country :name (n / name :op1 "N-A"))) :op2 (s2 / service :mod (i / intelligence) :mod (c2 / country :name (n2 / name :op1 "N-A")))) :manner (c3 / close) :purpose (c4 / combat-01 :arg0 (a2 / and) :arg1 (t / threaten-01 :arg0 (t2 / terrorist) :path (a3 / across :op1 (r / region)))) :manner (c5 / close) :purpose (c6 / combat-01 :arg0 (a4 / and) :arg1 (t3 / threaten-01 :arg0 (t4 / terrorist) :location (a5 / across :op1 (r2 / region)))))
(d / dominate-01 :arg0 (a / and :op1 (p / person :arg0-of (h / have-org-role-91 :arg1 (g / group :mod (e / ethnic) :mod (t / tigrayan)) :arg2 (m / member))) :op2 (p2 / person :arg0-of (h2 / have-org-role-91 :arg1 (g2 / group :mod (e2 / ethnic) :mod (t2 / tigrayan)) :arg2 (m2 / member)))) :arg1 (e3 / ethiopia) :arg1-of (d2 / dominate-01 :arg0 (m3 / member :arg2-of (h3 / have-org-role-91 :arg1 (g3 / group :mod (e4 / ethnic) :mod (t3 / tigrayan) :arg0-of (m4 / make-01 :arg1 (a2 / and :op1 (p3 / percentage-entity :value (N / N-A)) :op2 (m5 / military) :op3 (c / commerce) :op4 (p4 / politics))))))) :manner (e5 / evident))
(c / cause-01 :arg0 (l / lose-02 :arg1 (z / zenawi :mod (m / meles))) :arg1 (r / reason :ord (o / ordinal-entity :value 3) :location (b / behind :op1 (u / unrest))))
(r / realize-01 :arg0 (i / i) :arg1 (a / and :op1 (c / coffee) :op2 (c2 / culture) :domain (i2 / it) :arg1-of (l / like-01 :arg0 (i3 / i) :arg1-of (s / say-01 :arg0 (s2 / she)))))
(s / say-01 :arg0 (h / he) :arg1 (a / and :op1 (c / come-01 :arg1 (i / i) :time (b / before :op1 (n / now) :quant (t / temporal-quantity :quant (N / N-A) :unit (d / day)))) :op2 (a2 / and :op1 (c2 / come-01 :arg1 (i2 / i)) :op2 (m / make-02 :arg0 (t2 / they) :arg1 (e / everything :arg1-of (b2 / bagel :arg2 (b3 / butter)))))) :li 7)
(a / and :op1 (t / translate :arg0 (c / customer :quant 1 :arg1-of (i / include-91 :arg2 (c2 / customer :mod (n / new) :mod (t2 / this))) :mod (n2 / new) :mod (t3 / this)) :arg1 (m / menu)) :op2 (s / say-01 :arg0 (p / person :name (n3 / name :op1 "N-A")) :arg1 (p2 / plan-01 :arg0 (p3 / person) :arg1 (f / find-01 :arg0 (p4 / person) :arg1 (s2 / spot :purpose (d / display-01 :arg0 (p5 / person) :arg1 (s3 / spot) :purpose (m2 / make-02 :arg0 (p6 / person) :arg1 (w / welcome-01 :arg1 (p7 / person :arg1-of (n4 / neighbor-01 :arg2 (h / he)) :mod (n5 / new))))))))))
(p / phone-number-entity :value (N / N-A))
(s / say-01 :arg0 (p / person :name (n / name :op1 "N-A") :arg0-of (h / have-org-role-91 :arg2 (z / ziegelman))) :arg1 (p2 / popular-02 :arg1 (l / loaves) :degree (v / very)))
(t / try-01 :arg0 (p / person :arg0-of (m / mashups :arg1 (s / strange))) :arg1 (o / or :op1 (t2 / taste :arg1 (p2 / person)) :op2 (t3 / take-01 :arg0 (p3 / person) :arg1 (o2 / or :op1 (t4 / taste) :op2 (s2 / sense :mod (c / common :mod (e / even)))))))
(a / and :op1 (p / possible-01 :arg1 (c / commit-02 :arg0 (p2 / person :arg0-of (h / have-org-role-91 :arg2 (p3 / president))) :arg1 (e / error :arg1-of (s / same-01)) :condition (p4 / person :arg0-of (h2 / have-rel-role-91 :arg1 (p5 / person) :arg2 (w / wife))))) :op2 (e2 / encourage-01 :polarity - :arg0 (p6 / person) :arg1 (p7 / person) :arg2 (s2 / set-02 :arg0 (p8 / person) :arg1 (e3 / example) :arg2 (m / monkey :poss (p9 / person)))))
(c / cite-01 :arg0 (a / and :op1 (p / person :arg0-of (h / have-org-role-91 :arg1 (s / service :mod (i / internal-02)))) :op2 (p2 / person :arg0-of (h2 / have-rel-role-91 :arg1 (p3 / person) :arg2 (l / lawyer)))) :arg1 (a2 / audit-01 :arg0 (s2 / service :mod (i2 / internal-02)) :arg1-of (c2 / cause-01 :arg0 (r / reason :arg0-of (c3 / cause-01 :arg1 (r2 / refuse-01 :arg0 (p4 / person) :arg1 (r3 / release-01 :arg0 (p5 / person) :arg1 (r4 / returns :poss (p6 / person)))))))))
(i / involve-01 :arg1 (a / and :op1 (p / person :arg0-of (h / have-org-role-91 :arg2 (h2 / head-of-state))) :op2 (p2 / person :arg0-of (h3 / have-org-role-91 :arg2 (h4 / head-of-state))) :op3 (p3 / person :arg0-of (h5 / have-org-role-91 :arg2 (h6 / head-of-state))) :op4 (p4 / person :arg0-of (h7 / have-org-role-91 :arg2 (h8 / head-of-state)))) :ord (o / ordinal-entity :value 1))
(b / byline-91 :arg0 (p / person :arg0-of (m / make-01 :arg1 (m2 / make-01 :arg0 (p2 / person) :arg1 (u / url-entity :value (i / israeli))))) :arg2 (r / remove-01 :arg0 (p3 / person) :arg1 (c / code :name (n / name :op1 (i2 / israeli) :op2 (d / dialed)) :mod (c2 / country :name (n2 / name :op1 "N-A")))) :time (a / after :op1 (r2 / request-01 :arg0 (p4 / person) :arg1 (r3 / request-01 :arg0 (p5 / person) :arg1 (r4 / request-01 :arg0 (p6 / person) :arg1 (' / '')) :mod ('2 / '')))))
(c / claim-01 :arg0 (p / person :mod (c2 / country :name (n / name :op1 "N-A"))) :arg1 (w / win-01 :arg0 (p2 / person) :arg1-of (s / shock-01) :time (b / before :op1 (n2 / now) :quant (u / up-to :op1 (t / temporal-quantity :quant (N / N-A) :unit (y / year))))) :purpose (w2 / win-01 :arg0 (p3 / person) :arg1 (f / fifth :poss (g / golds :quant 6 :mod (o / olympic) :poss (h / he)))))
(c / contrast-01 :arg1 (s / set :arg0 (k / kenny) :arg1 (r / record :mod (o / olympic)) :time (b / before :op1 (n / now) :quant (u / up-to :op1 (t / temporal-quantity :quant (N / N-A) :unit (y / year))))) :arg2 (o2 / overtaken :arg0 (z / zealand :mod (n2 / new) :location (r2 / round :ord (o3 / ordinal-entity :value 1))) :arg1 (s2 / standard)))
(s / say-01 :arg0 (s2 / skinner :mod (2 / 23-year-old)) :arg1 (c / compare-01 :arg1 (i / it) :arg2 (s3 / seismic-quantity :quant (N / N-A))))
(s / say-01 :arg0 (h / he) :arg1 (a / and :op1 (g / good :domain (w / wouldn :mod (w2 / wouldn :degree (t / total)) :beneficiary (w3 / we)) :beneficiary (w4 / we)) :op2 (g2 / good :domain (w5 / wouldn :mod (t2 / that)) :beneficiary (w6 / we))))
(i / include-01 :arg1 (a / and :op1 (c / campbell :mod (n / naomi)) :op2 (e / evangelista :mod (l / linda)) :op3 (m / moss :mod (k / kate))) :arg2 (w / woman :time (p / previous)))
(s / sell-01 :arg0 (s2 / she) :arg1 (f / foundation :mod (l / lauder)) :arg2 (y / you))
(l / lost :arg1 (p / person :mod (t / that) :arg1-of (l2 / legal-02) :mod (t2 / that)) :arg2 (l3 / lose-02 :arg0 (p2 / person) :arg1 (r / rate-entity-91 :arg1 30 :arg2 (t3 / temporal-quantity :quant (N / N-A) :unit (y / year))) :arg3 (f / fund-01 :arg0 (f2 / federal) :arg1 (f3 / federal))) :time (y2 / year :mod (n / next)))
(a / and :op1 (c / come-01 :arg1 (s / sue-02) :time (a2 / after :op1 (e / expel-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (r / republican) :arg2 (p2 / president))) :arg1 (b / broadcast-program :name (n / name :op1 "N-A"))) :time (a3 / after :op1 (e2 / expel-01 :arg0 (p3 / person :arg0-of (h2 / have-org-role-91 :arg1 (r2 / republican) :arg2 (p4 / president))) :arg1 (b2 / broadcast-program :name (n2 / name :op1 "N-A")) :location (n3 / north)))) :time (a4 / after :op1 (e3 / expel-01 :arg0 (p5 / person) :arg1 (c2 / crowd :location (n4 / north)))) :time (a5 / after :op1 (e4 / expel-01 :arg0 (p6 / person) :arg1 (c3 / crowd :location (n5 / north)))) :mod (j / just)) :op2 (p7 / possible-01 :arg1 (a6 / act-02 :arg0 (p8 / person :arg0-of (h3 / have-org-role-91 :arg3 (j2 / judge-01)) :arg0-of (h4 / have-org-role-91 :arg3 (j3 / judge-01))) :condition (a7 / and :op1 (e5 / elect-01 :arg1 (p9 / person :arg0-of (o / own-01 :arg1 (g / gun)))) :op2 (g2 / get-01 :arg0 (p10 / person) :arg1 (p11 / pick-01 :arg0 (p12 / person) :arg1 (p13 / person :arg0-of (h5 / have-org-role-91 :arg3 (j4 / judge-01)))))))))
(a / and :op2 (d / do-02 :arg0 (w / we) :arg1 (s / so) :manner (c / create-01 :arg0 (w2 / we) :arg1 (o / opportunity :beneficiary (a2 / and :op1 (p / person :arg1-of (l / local-02)) :op2 (f / firm :arg1-of (c2 / close-10 :arg2 (h / heathrow)))))) :mod (a3 / again)))
(p / publish-01 :arg0 (p2 / person :name (n / name :op1 "N-A") :arg1-of (p3 / publish-01 :time (a / after :op1 (a2 / adolescence) :quant (b / between :op1 (t / temporal-quantity :quant (N / N-A) :unit (d / day)) :op2 (t2 / temporal-quantity :quant (N2 / N-A) :unit (d2 / day)) :mod (j / just))))) :arg1 (s / say-01 :arg0 (p4 / person) :arg1 (p5 / possible-01 :arg1 (u / update-01 :arg0 (p6 / person :arg0-of (u2 / use-01)) :arg1 (f / filter :poss (p7 / person)) :location (p8 / program :poss (p9 / person)) :purpose (b2 / block-01 :arg0 (p10 / person) :arg1 (a3 / advertise-01) :location (n2 / network :mod (s2 / society)) :time (o / once) :mod (a4 / again :mod (o2 / once)))))) :time (a5 / after :op1 (a6 / announce-01 :arg0 (f2 / facebook) :arg1 (b3 / block-01 :arg0 (p11 / person) :arg1 (a7 / advertise-01) :location (s3 / site :mod (d3 / desktop) :poss (p12 / person))))) :mod (p13 / plus))
(i / indicate-01 :arg1 (e / enter-01 :arg0 (c / company :mod (m / media :mod (s / social)) :mod (l / large :degree (m2 / most) :compared-to (w / world)) :mod (m3 / media :mod (s2 / social)) :mod (l2 / large :degree (m4 / most) :compared-to (w2 / world))) :arg1 (f / fight-01) :arg1-of (s3 / strong-02) :arg1-of (c2 / cause-01 :arg0 (b / become-01 :arg1 (p / person :mod (b2 / big) :mod (b3 / big)) :arg2 (i2 / industry))) :arg1-of (s4 / strong-02)))
(s / say-01 :arg0 (p / police :mod (p2 / political-party :name (n / name :op1 "N-A"))) :arg1 (a / and :op1 (l / lay :arg0 (w / woman) :arg1 (d / dark :location (' / '' :name (n2 / name :op1 (r / road)) :mod (d2 / desperate)))) :op2 (h / hit-01 :arg0 (v / vehicle :quant (s2 / several)) :arg1 (v2 / vehicle :quant (s3 / several)))) :medium (s4 / statement))
(h / hit-01 :arg0 (v / vehicle :arg1-of (a / age-01 :arg2 (t / temporal-quantity :quant (N / N-A) :unit (y / year)))) :arg1 (w / woman :mod (s / swiss) :arg1-of (a2 / age-01 :arg2 49)) :arg1-of (c / clear-06))
(c / city :arg0-of (h / harm-01))
(h / happens :arg0 (p / person :arg0-of (h2 / have-org-role-91 :arg2 (h3 / head-of-state))) :arg1 (p2 / person :mod (c / country :name (n / name :op1 "N-A"))) :degree (s / somewhat))
(c / contrast-01 :arg1 (a / and :op1 (t / tall :quant (a2 / almost :op1 2) :mod (m / mass-quantity :quant (N / N-A) :unit (k / kilogram))) :op2 (r / rate-entity-91 :arg1 100 :arg2 (m2 / mass-quantity :quant (N2 / N-A) :unit (k2 / kilogram)))) :arg2 (a3 / and :op1 (t2 / tall :quant (a4 / almost :op1 2)) :op2 (m3 / mass-quantity :quant (N3 / N-A) :unit (k3 / kilogram)) :domain (m4 / murray)))
(a / and :op1 (w / warms :arg0 (t / this) :arg1 (s / surface)) :op2 (p / produce-01 :arg0 (t2 / this) :arg1 (r / rain-01) :arg0-of (c / create-01 :arg1 (m / monkey :arg1-of (l / layers :mod (t3 / thick)) :arg0-of (a2 / act-02 :arg1-of (r2 / resemble-01 :arg2 (u / umbrella))) :arg0-of (a3 / act-02 :arg1-of (r3 / resemble-01 :arg2 (u2 / umbrella))))) :arg0-of (a4 / act-02 :arg1-of (r4 / resemble-01 :arg2 (u3 / umbrella)))))
(s / share-01 :arg0 (p / person :arg0-of (r / research-01)) :arg1 (t / thing :arg2-of (r2 / result-01 :arg1 (m / model :topic (c / climate) :mod (n / new) :poss (p2 / person)))) :arg2 (l / letter :mod (r3 / research-01) :mod (g / geophysical) :poss (p3 / person)))
(m / meet-01 :polarity - :arg1 (c / condition :mod (t / this)) :time (c2 / current))
(s / say-01 :arg0 (p / person :arg0-of (l / lead-02 :arg1 (n / negotiators))) :arg1 (s2 / suspend-01 :arg1 (s3 / strike-01 :arg2 (p2 / person :arg0-of (w / work-01 :arg2 (o / oil :mod (s4 / sea) :location (n2 / north))))) :time (s5 / strike-01 :arg1 (p3 / party :quant (a / all)) :arg2 (d / dispute-01 :arg2 (r / round :mod (n3 / new) :consist-of (t / talk-01)) :mod (n4 / new)))))
(a / and :op1 (l / learn-01 :arg0 (w / we) :arg1 (r / relation-03 :arg0 (w2 / we) :arg2 (m / mass :mod (s / star) :mod (o / other))) :degree (m2 / more)) :op2 (l2 / learn-01 :arg0 (w3 / we) :arg1 (r2 / relation-03 :arg0 (w4 / we) :arg2 (a2 / and :op1 (m3 / mass :mod (s2 / star)) :op2 (h / history :mod (e / even) :poss (s3 / system :poss (c / country) :mod (s4 / solar))) :op3 (s5 / scientist :mod (r3 / research-01)) :op4 (s6 / scientist :mod (r4 / research-01)) :op5 (s7 / scientist :mod (r5 / research-01)) :location (a3 / and :op1 (c2 / center :mod (p / process-01 :arg0 (c3 / country :name (n / name :op1 "N-A")))) :op2 (c4 / center :arg0-of (a4 / analyze-01) :location (l3 / location :name (n2 / name :op1 "pasadena")))))) :medium (n3 / news)))
(m / multi-sentence :snt1 (s / see-01 :arg0 (w / we) :arg1 (t / tend-02 :arg1 (r / rotators :mod (t2 / that)) :arg2 (m2 / massive :degree (m3 / more))) :arg1-of (c / cause-01 :arg0 (t3 / tend-02 :arg1 (t4 / tend-02 :arg1 (r2 / rotators :mod (f / fastest)) :arg2 (s2 / star :arg1-of (l / light-06 :degree (v / very))))))) :snt2 (s3 / say-01 :arg0 (' / '') :arg1 (r3 / rebull)))
(a / and :op1 (r / rebull :arg0 (a2 / and :op1 (p / person :arg0-of (h / have-org-role-91 :arg2 (h2 / head-of-state))) :op2 (p2 / person :arg0-of (h3 / have-org-role-91 :arg1 (s / she) :arg3 (d / detail-01)))) :arg1 (a3 / analyze-01 :arg0 (p3 / person) :arg1 (r2 / rate :name (n / name :op1 (t / the) :op2 (t2 / the))) :time (l / late :degree (m / most))) :location (p4 / paper :quant 3 :mod (n2 / new))) :op2 (p5 / publish-01 :arg1 (a4 / and) :location (j / journal :mod (a5 / astronomical)) :time (s2 / soon)))
(m / multi-sentence :snt1 (s / say-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg2 (g / galicia))) :arg1 (s2 / stay-01 :arg1 (f / frank) :location (h2 / hostels) :time (i / initial))) :snt2 (c / contrast-01 :arg2 (g2 / go-01 :arg1 (t / thing :mod (' / '')) :arg4 (h3 / he) :mod (w / well) :time (r / recent))))
(m / multi-sentence :snt1 (a / aktuáln :mode (i / interrogative) :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (c / company :name (n / name :op1 "N-A") :arg0-of (p2 / provide-01 :arg1 (n2 / news)) :mod (o / online)) :arg2 (s / staff))) :arg1 (p3 / person :arg0-of (h2 / have-org-role-91 :arg1 (g / government-organization :name (n3 / name :op1 "N-A") :mod (o2 / online)) :arg3 (s2 / staff)))) :snt2 (f / follow-01 :arg1 (c2 / cz) :arg2 (b / billboard :location (s3 / south :part-of (b2 / bohemia :location (s4 / south)))) :time (n4 / now)) :snt3 (f2 / follow-01 :arg1 (s5 / story :location (s6 / south :part-of (b3 / bohemia :location (s7 / south)))) :arg2 (v / visit-01 :arg0 (m2 / motorists) :arg1 (s8 / strolling :arg1-of (i2 / include-91 :arg2 (b4 / billboard :location (s9 / south :part-of (b5 / bohemia)))))) :time (n5 / now)))
(s / say-01 :arg0 (a / and :op1 (p / person :arg0-of (h / have-org-role-91 :arg1 (r / road) :arg2 (s2 / spokeswoman))) :op2 (p2 / person :arg0-of (h2 / have-org-role-91 :arg1 (d / directorate) :arg2 (s3 / spokeswoman))) :op3 (p3 / person :arg0-of (h3 / have-org-role-91 :arg1 (c / company :name (n / name :op1 "N-A")) :arg2 (s4 / spokeswoman))) :op4 (p4 / person :arg0-of (h4 / have-org-role-91 :arg1 (c2 / company) :arg2 (s5 / spokeswoman))) :op5 (p5 / person :arg0-of (h5 / have-org-role-91 :arg1 (c3 / company) :arg2 (s6 / spokeswoman)))) :arg1 (a2 / and :op1 (r2 / respond-01 :polarity - :arg0 (c4 / company) :arg1 (d2 / demand-01 :arg1-of (w / write-01))) :op2 (b / be-located-at-91 :arg1 (c5 / case-03) :arg2 (l / land :quant (a3 / all) :location (t / table :poss (a4 / and :op1 (a5 / authority :mod (r3 / region)) :op2 (a6 / authority :mod (c6 / city) :time (l2 / late :degree (m / more)))))))))
(i / include-91 :arg1 (a / and :op1 (c / company :mod (s / suspicious)) :op2 (c2 / company :mod (s2 / suspicious))) :arg2 (c3 / company :mod (s3 / suspicious) :arg0-of (d / difficult :domain (c4 / contact-01))))
(s / send-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (g / government-organization :arg0-of (g2 / govern-01)) :arg2 (o / official))) :arg1 (l / letter) :arg2 (c / commerz :arg0 (a / and :op1 (p2 / person :arg0-of (h2 / have-org-role-91 :arg1 (g3 / government-organization :arg0-of (g4 / govern-01)) :arg2 (o2 / official))) :op2 (p3 / person :arg0-of (h3 / have-org-role-91 :arg1 (g5 / government-organization :arg0-of (g6 / govern-01)) :arg2 (o3 / official)))) :arg1 (l2 / letter :arg1-of (c2 / commerz :arg2 (h4 / house :poss (g7 / guest :poss (p4 / person))))) :arg2 (h5 / house :poss (g8 / guest :poss (p5 / person))) :location (h6 / house :poss (g9 / guest :poss (p6 / person))) :location (h7 / house :poss (g10 / guest :poss (p7 / person))) :arg1-of (s2 / say-01 :arg0 (c3 / company)) :arg1-of (s3 / say-01 :arg0 (c4 / company)) :arg1-of (s4 / say-01 :arg0 (c5 / company)) :arg1-of (s5 / say-01 :arg0 (c6 / company))) :arg1-of (s6 / say-01 :arg0 (p8 / person :arg0-of (h8 / have-org-role-91 :arg1 (c7 / company) :arg2 (o4 / official)))))
(c / contrast-01 :arg2 (e / expect-01 :arg1 (h / high-02 :arg1 (h2 / harvest-01 :arg1 (a / and :op1 (r / rapeseed) :op2 (p / poppy))) :time (y / year :mod (t / this)))))
(e / expect-01 :arg1 (d / drop-01 :arg1 (h / harvest-01 :arg1 (w / wheat :mod (w2 / winter)) :mod (i / important :degree (m / most)) :location (c / country :name (n / name :op1 "Czech" :op2 "Republic"))) :time (y / year :mod (t / this))))
(s / say-01 :arg0 (p / police) :arg1 (p2 / preceded :arg0 (i / incident :mod (b / between :op1 (g / group :quant 2) :op2 (p3 / person :location (s2 / svobody :mod (t / t?ída))))) :arg1 (a / attack-01)))
(s / say-01 :arg0 (t / thing :arg1-of (p / plan-01 :arg0 (i / it)) :mod (r / region)) :arg1 (m / manhattan :arg0 (p2 / plan-01 :arg0 (i2 / it) :mod (r2 / region)) :arg1 (y / york :mod (n / new))))
(c / come-01 :arg1 (p / person :arg0-of (h / have-rel-role-91 :arg2 (d / dd1))) :accompanier (p2 / part :part-of (a / and :op1 (t / thing :arg1-of (f / free-01 :arg2 (n / name :op1 (b / boko)) :mod (n2 / new))) :op2 (t2 / thing :arg1-of (f2 / freed :arg2 (b2 / boko))))))
(a / and :op1 (w / want-01 :arg0 (p / pope) :arg1 (u / use-01 :arg0 (p2 / pope) :arg1 (m / meet-03 :mod (t / this)) :purpose (d / draw-02 :arg0 (p3 / pope) :arg2 (t2 / traffic-01 :arg1 (h / human))))) :op2 (c / call-03 :arg0 (p4 / pope) :arg1 (f / fight-01 :arg1 (f2 / fight-01 :arg1 (i / it)))))
(e / exemplify-01 :arg0 (h / have-03 :arg0 (h2 / he) :arg1 (s / swim-01 :arg0 (h3 / he) :arg2 (r / refugee :mod (c / country :name (n / name :op1 "N-A")) :arg1-of (a / arrive-01 :arg4 (u / under :op1 (p / petition-01 :arg0 (h4 / he))))))) :purpose (e2 / exemplify-01))
(v / vote-01 :arg0 (a / and :op1 (d / doctor) :op2 (p / person :arg0-of (s / study-01) :mod (j / junior))) :arg1 (r / reject-01 :arg0 (a2 / and) :arg1 (d2 / deal-01 :arg0 (a3 / and) :arg2 (d3 / deal-01 :arg0 (a4 / and) :arg2 (c / contract-02)))) :location (j2 / july))
(h / hit-01 :arg0 (t / thing :arg2-of (s / sanction-02 :arg0 (c / country :name (n / name :op1 "N-A")))) :arg1 (b / ban-01 :arg1 (f / fly-01 :location (c2 / charter)) :mod (p / particular) :arg0-of (c3 / carry-01 :arg1 (p2 / person :mod (c4 / country :name (n2 / name :op1 "N-A")) :quant (s2 / several) :arg0-of (t2 / tour-01)) :arg4 (c5 / coast :mod (t3 / turkish)) :time (y / year :mod (e / each))) :mod (u / usual)))
(r / relieved :arg1 (a / and :op1 (c / company :arg0-of (o / operate-01)) :op2 (c2 / company :mod (c3 / charter)) :op3 (c4 / company :mod (c5 / charter))) :time (c6 / crash-01 :arg1 (f / fly-01) :time (e / eventual)) :mod (c7 / certain) :location (h / here))
(a / anger-01 :arg0 (c / consider-01 :arg1 (r / respond-01 :arg1 (p / plot-01 :arg1-of (a2 / attempt-01)) :arg1-of (w / weak-02))) :arg1 (l / location :name (n / name :op1 "ankara")))
(b / be-located-at-91 :arg1 (b2 / bank :mod (r / royal) :mod (c / country :name (n / name :op1 "N-A"))) :arg2 (d / delegate) :purpose (c2 / customer :location (o / outside)))
(m / multi-sentence :snt1 (s / say-01 :arg0 (i / i) :arg1 (h / have-03 :polarity - :arg0 (w / we) :arg1 (a / aspirations :mod (g / globe)) :time (n / no-longer))) :snt2 (h2 / have-03 :arg0 (w2 / we) :arg1 (a2 / aspirations :arg1-of (l / local-02))))
(c / contrast-01 :arg1 (a / and :op1 (s / stylish :arg1 (h / he)) :op2 (s2 / strong-02 :arg1 (h2 / he))) :arg2 (n / nous :arg0 (h3 / he) :arg1 (h4 / he) :arg2 (e / except-01 :arg1 (h5 / he) :arg2 (o / other) :location (r / room :mod (w / weighing)))))
(g / go-02 :arg0 (p / person :mod (c / country :name (n / name :op1 "N-A"))) :arg4 (a / and :op1 (p2 / person :arg0-of (u / use-01) :quant (m / more)) :op2 (p3 / person :quant (a2 / as-many-as :op1 (m2 / many)))) :time (a3 / after :op1 (n2 / now) :quant (u2 / up-to :op1 (t / temporal-quantity :quant (N / N-A) :unit (d / day)))))
(w / work-09 :arg1 (i / it) :manner (a / amr-unknown))
(c / cause-01 :arg0 (a / and :op1 (b / bore-02 :arg0 (h / health :mod (p / public) :quant (m / most))) :op2 (d / deliver-01 :arg0 (p2 / person :arg0-of (l / look-02 :arg1 (b2 / busy))) :arg1 (p3 / person :arg0-of (l2 / look-02 :arg1 (b3 / busy))))) :arg1 (f / fall-01 :arg1 (c2 / campaign-01 :arg1 (h2 / health :mod (p4 / public)) :quant (m2 / many)) :arg4 (a2 / and :op1 (p5 / person :arg0-of (f2 / find-01 :arg1 (p6 / person :arg1-of (f3 / find-01)))) :op2 (p7 / person :arg0-of (h3 / have-org-role-91 :arg2 (' / ''))) :op3 (p8 / person :arg0-of (h4 / have-org-role-91 :arg2 ('2 / ''))) :op4 (p9 / person :arg0-of (h5 / have-org-role-91 :arg2 ('3 / ''))) :op5 (p10 / person :arg0-of (h6 / have-org-role-91 :arg2 ('4 / ''))))))
(f / forget-01 :mode (i / imperative) :arg0 (y / you) :arg1 (h / hype))
(i / immune :arg1 (b / biles :mod (s / simone)) :arg2 (i2 / it :quant (a / all)))
(c / contrast-01 :arg1 (i / insist-01 :arg0 (i2 / i) :arg1 (l / look-01 :polarity - :arg0 (s / she) :time (e / ever) :time (r / run-13 :arg1 (s2 / she) :arg1-of (l2 / long-03) :location (t / top)))) :arg2 (t2 / true :polarity - :domain (t3 / that) :mod (e2 / exact)))
(a / and :op1 (s / sitting :arg1 (d / didn :mod (e / edmund)) :arg2 (o / or :op1 (u / up) :op2 (c / crawls)) :time (u2 / until :op1 (i / include-91 :arg1 (h / he) :arg2 3))) :op2 (t / talks :arg0 (h2 / he) :arg1 (t2 / talk-01 :mod (t3 / total)) :mod (s2 / still)))
(p / possible-01 :arg1 (r / rectify-01 :arg1 (a / and :op1 (s / symptom) :op2 (p2 / prognosis)) :degree (w / wide)))
(r / remembers :arg1 (m / manipulate-01 :arg1 (f / future :mod (e / emotional)) :mod (e2 / emotional)))
(r / report-01 :arg0 (s / service :mod (w / weather :mod (n / nation))) :arg1 (a / and :op1 (o / overflowing :arg1 (b / bank :quant (n2 / numerous) :location (s2 / southeast :part-of (s3 / strait)))) :op2 (t / threaten-01 :arg0 (a2 / and :op1 (b2 / bank :name (n3 / name :op1 (l / louisiana))) :op2 (p / person :arg0-of (h / have-org-role-91 :arg2 (m / mississippi))) :op3 (p2 / person :arg0-of (h2 / have-org-role-91 :arg2 (h3 / head-of-state))) :op4 (p3 / person :arg0-of (h4 / have-org-role-91 :arg2 (h5 / head-of-state))) :op5 (p4 / person :arg0-of (s4 / serve-01 :arg2 (w2 / weather :mod (n4 / nation))))) :arg1-of (w3 / wide-02))))
(a / and :op1 (p / plucking :arg0 (p2 / person :arg0-of (h / have-org-role-91 :arg2 (r / rescuers))) :arg1 (p3 / person :arg0-of (h2 / have-org-role-91 :arg2 (h3 / head-of-state))) :location (a2 / and :op1 (a3 / amite) :op2 (d / distance-quantity :quant (N / N-A) :unit (k / kilometer)))) :op2 (w / wilkinson :arg1 (p4 / person) :location (s / southwest :part-of (s2 / southwest))) :mod (s3 / still))
(t / tell-01 :arg0 (p / person :arg0-of (h / have-rel-role-91 :arg1 (h2 / he) :arg2 (w / wife))) :arg1 (s / see-01 :arg0 (p2 / person :arg0-of (h3 / have-rel-role-91 :arg1 (h4 / he) :arg2 (w2 / wife))) :arg1 (l / live-01 :arg0 (s2 / she) :location (t2 / there) :time (y / year :mod 48)) :degree (m / most)) :arg2 (p3 / person :name (n / name :op1 "N-A")))
(s / say-01 :arg0 (p / police) :arg1 (a / and :op1 (s2 / shoot-02 :arg1 (b / boy :mod (6 / 6-year-old)) :location (p2 / philadelphia)) :op2 (m / marking :arg0 (b2 / boy) :arg1 (s3 / shooting :ord (o / ordinal-entity :value 2) :part-of (62 / 6-year-old :location (c / city))) :time (w / week :mod (t / this)))))
(p / powerful-02 :arg1 (t / this))
(h / have-concession-91 :arg1 (o / open-01 :arg1 (d / door :part-of (h2 / he)) :time (a / always) :time (m / month :mod (l / last) :mod (j / just))) :arg2 (p / promise-01 :arg2 (h3 / hunting :arg1 (d2 / door :poss (h4 / he)) :time (m2 / month :mod (l2 / last) :mod (j2 / just)))))
(s / see-01 :arg0 (s2 / strike-01 :time (e / end-01 :arg1 (d / date-entity :decade (N / N-A)))) :arg1 (a / and :op1 (p / postponement :mod (r / routine) :quant (n / nearly :op1 13,000)) :op2 (a2 / appointments :quant 100000 :mod (r2 / routine))) :purpose (p2 / provide-01 :arg0 (s3 / strike-01) :arg1 (c / cover-01 :arg1 (d2 / doctor) :arg2 (l / line :mod (p3 / picket)))))
(s / say-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg2 (d / director :mod (v / vice))) :arg0-of (h2 / have-org-role-91 :arg2 (d2 / director)) :arg0-of (h3 / have-org-role-91 :arg2 (d3 / director)) :arg0-of (h4 / have-org-role-91 :arg2 (d4 / director)) :arg0-of (h5 / have-org-role-91 :arg2 (d5 / director)) :arg0-of (h6 / have-org-role-91 :arg2 (d6 / director)) :arg0-of (h7 / have-org-role-91 :arg2 (d7 / director)) :arg0-of (h8 / have-org-role-91 :arg2 (d8 / director)) :arg0-of (h9 / have-org-role-91 :arg2 (d9 / director)) :arg0-of (h10 / have-org-role-91 :arg2 (d10 / director)) :arg0-of (h11 / have-org-role-91 :arg2 (d11 / director)) :arg0-of (h12 / have-org-role-91 :arg2 (d12 / director)) :arg0-of (h13 / have-org-role-91 :arg2 (d13 / director)) :arg0-of (h14 / have-org-role-91 :arg2 (d14 / director)) :arg0-of (h15 / have-org-role-91 :arg2 (d15 / director))) :arg0-of (h16 / have-org-role-91 :arg2 (d16 / director)) :arg0-of (h17 / have-org-role-91 :arg2 (d17 / director)) :arg0-of (h18 / have-org-role-91 :arg2 (d18 / director)) :arg0-of (h19 / have-org-role-91 :arg2 (d19 / director)) :arg0-of (h20 / have-org-role-91 :arg2 (d20 / director)) :arg0-of (h21 / have-org-role-91 :arg2 (d21 / director)) :arg0-of (h22 / have-org-role-91 :arg2 (d22 / director)) :arg0-of (h23 / have-org-role-91 :arg2 (d23 / director)) :arg0-of (h24 / have-org-role-91 :arg2 (d24 / director)) :arg0-of (h25 / have-org-role-91 :arg2 (d25 / director)))
(c / call-03 :arg0 (h / he) :arg1 (a / and :op1 (a2 / access-01 :arg1 (p / paper :mod (c2 / council)) :mod (g / great :degree (m / more))) :op2 (d / decide-01 :arg0 (g2 / group :arg0-of (w / work-01)) :arg1 (t / thing :arg1-of (d2 / decide-01 :arg3 (g3 / group :arg0-of (w2 / work-01)))) :mod (g4 / great :degree (m2 / more)))))
(c / criticises :arg0 (h / he) :arg1 (i / inspect-01 :arg0 (d / department :name (n / name :op1 (i2 / ineffectual) :op2 (t / tick-box) :op3 (t2 / tick-box))) :arg1 (d2 / department :mod (r / register-02) :location (c2 / city :name (n2 / name :op1 "N-A")))) :mod (a / also))
(a / and :op1 (c / crazy-03 :arg1 (a2 / and :op1 (l / lookalike :mod (c2 / cyclist) :poss (c3 / country :name (n / name :op1 "N-A"))) :op2 (d / doppelgangers :mod (c4 / celebs) :mod (o / other)))) :op2 (d2 / doppelgangers :arg1 (d3 / doppelgangers :mod (r / rio) :mod (o2 / other))))
(p / possible-01 :arg1 (h / hear-01 :arg1 (s / say-01 :arg1 (a / and :op1 (d / drop-05 :arg0 (p2 / person :arg0-of (h2 / have-org-role-91 :arg1 (t / team :mod (c / commentary) :poss (p3 / person :arg0-of (h3 / have-org-role-91 :arg2 (h4 / head-of-state)))) :arg0-of (h5 / have-org-role-91 :arg1 (t2 / team :arg0-of (c2 / comment-01) :poss (p4 / person :arg0-of (h6 / have-org-role-91 :arg2 (h7 / head-of-state))))) :arg2 (t3 / team :arg0-of (c3 / comment-01)))) :arg1 (p5 / person :arg0-of (h8 / have-org-role-91 :arg1 (t4 / team :arg0-of (c4 / comment-01) :poss (p6 / person :arg0-of (h9 / have-org-role-91 :arg2 (h10 / head-of-state)))))) :arg2 (p7 / person :arg0-of (h11 / have-org-role-91 :arg1 (t5 / team :arg0-of (c5 / comment-01) :poss (p8 / person :arg0-of (h12 / have-org-role-91 :arg2 (h13 / head-of-state))))))) :op2 (s2 / say-01 :arg0 (p9 / person) :arg1 (d2 / drop-05 :arg0 (p10 / person :arg0-of (h14 / have-rel-role-91 :arg1 (b / baby) :arg2 (c6 / child))) :arg1 (b2 / baby)))))))
(a / and :op1 (t / take-out-11 :arg0 (s / she) :arg1 (k / knickers :location (m / middle :part-of (f / floor :mod (s2 / shop))))) :op2 (s3 / stripped :arg0 (s4 / she) :arg1 (a2 / and :op1 (t2 / tights :poss (s5 / she)) :op2 (p / pants :arg1 (s6 / she)))) :op3 (p2 / put-01 :arg0 (s7 / she) :arg1 (t3 / they) :arg2 (o / on)))
(s / say-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (p2 / person :arg0-of (h2 / have-org-role-91 :arg1 (p3 / political-party :name (n / name :op1 "N-A")) :arg2 (s2 / spokesman))) :arg2 (s3 / spokesman))) :arg1 (r / realize-01 :arg0 (p4 / person) :arg1 (i / incident :arg0-of (c / cause-01 :arg1 (i2 / incident :arg1-of (p5 / place-01 :location (s4 / store :name (n2 / name :op1 (t / tuesday) :op2 (a / august) :op3 9) :poss (w / we))))))))
(r / recommend-01 :arg1 (c / come-01 :arg1 (h / hand) :location (u / under :op1 60)) :manner (c2 / compare-01))
(t / think-01 :arg0 (i / i) :arg1 (s / show-01 :arg0 (f / film) :arg1 (s2 / sense-01 :arg0 (w / we) :arg1 (h / humour) :mod (g / great))) :mod (a / also))
(s / say-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (c / country :name (n / name :op1 "N-A")))) :arg1 (b / be-located-at-91 :arg1 (d / diameter :poss (w / woman :arg1-of (m / moisturize-01))) :arg2 (w2 / woman :arg1-of (m2 / moisturize-01))))
(p / partnering :arg0 (m / magazine :name (n / name :op1 "N-A") :name (n2 / name :op1 (p2 / photographer) :op2 (b / bellemere) :op3 (b2 / bellemere))) :arg1 (l / launch-01 :arg1 (c / calendar :name (n3 / name :op1 (1 / 1970s) :op2 (p3 / pirelli-inspired))) :purpose (l2 / launch-01 :arg1 (12 / 1970s))) :arg3 (s / score-entity :op1 2017 :op2 2017))
(i / infer-01 :arg1 (l / look-01 :mode (i2 / imperative) :arg0 (w / we)))
(s / stairwell :arg1 (w / wall :arg1-of (s2 / stacked :arg0 (a / and :op1 (p / person :name (n / name :op1 "jeff" :op2 "buckley")) :op2 (p2 / person :mod (w2 / winehouse)) :op3 (m / mac :name (n2 / name :op1 (a2 / amy))) :op4 (m2 / mac :mod (f / fleetwood)) :op5 (m3 / mac :mod (f2 / fleetwood))))) :arg2 (l / left) :arg1-of (c / cause-01 :arg0 (m4 / mixed :arg1 (a3 / and :op1 (l2 / language :name (n3 / name :op1 "N-A")) :op2 (c2 / classical) :op3 (f3 / fleetwood)))))
(s / say-01 :arg0 (p / person :name (n / name :op1 "julius" :op2 "nielsen") :arg0-of (s2 / study-01 :arg1 (s3 / sharks)) :arg0-of (s4 / study-01 :arg1 (s5 / sharks))) :arg1 (g / go-01 :arg1 (r / record) :arg4 (b / between :op1 (t / temporal-quantity :quant (N / N-A) :unit (y / year)) :op2 (t2 / temporal-quantity :quant (N2 / N-A) :unit (y2 / year)))))
(t / think-01 :arg0 (h / he) :arg1 (d / die-01 :arg1 (h2 / he)))
(d / deal-01 :arg0 (y / you) :arg2 (i / it) :manner (a / amr-unknown))
(c / contrast-01 :arg2 (a / agree-01 :arg0 (i / i) :arg1 (h / have-to-do-with-04 :arg0 (i2 / i) :arg1 (n / nothing) :arg2 (n2 / nothing))))
(m / multi-sentence :snt1 (s / seem-01 :arg1 (g / good :degree (p / pretty) :domain (h / he))) :snt2 (a / and :op1 (t / tall :domain (h2 / he)) :op2 (j / jumps :arg0 (h3 / he) :arg1 (l / lot))))
(s / say-01 :arg0 (p / person :name (n / name :op1 "N-A") :arg0-of (h / have-org-role-91 :arg2 (h2 / hermannová))) :arg1 (p2 / possible-01 :arg1 (b / beat-03 :arg0 (w / we) :arg1 (r / russians))))
(c / change-01 :arg1 (t / this) :compared-to (c2 / court :mod (p / province :name (n / name :op1 "N-A"))) :mod (q / quite))
(p / prepare-01 :arg0 (h / he) :arg1 (p2 / paper :quant (l / lot) :prep-with (t / tactic)) :arg0-of (c / cause-01 :arg1 (p3 / prepare-02 :arg1 (w / we) :arg2 (r / respect-01 :arg1 (w2 / we) :mod (t2 / this)) :manner (w3 / well :degree (p4 / pretty)))))
(p / paradise :domain (b / block-01 :arg0 (c / country :name (n / name :op1 "Russia")) :arg1 (r / round :name (n2 / name :op1 (b2 / birlova))) :mod (p2 / preliminary) :location (r2 / round :name (n3 / name :op1 (o / olympic) :op2 (o2 / olympic) :op3 (o3 / olympic)))))
(n / need-01 :arg0 (p / police) :arg1 (g / get-01 :arg0 (p2 / police) :arg1 (o / order :mod (c / court))) :condition (w / want-01 :arg0 (p3 / police) :arg1 (t / track :arg0 (p4 / police) :arg1 (m / move-01 :arg1 (i / individual :arg1-of (b / bright-02))))))
(a / add-01 :arg0 (p / person :arg0-of (p2 / provide-01 :arg1 (s / service))) :arg1 (a2 / and :op1 (o / offence :mod (c / criminal-03) :beneficiary (c2 / company :arg0-of (p3 / provide-01 :arg1 (s2 / service)))) :op2 (l / location :arg2-of (b / be-located-at-91 :arg1 (o2 / order :mod (c3 / court))))))
(m / mention-01 :polarity - :arg1 (p / problematic :location (h / house :mod (o / old) :location (a / and :op1 (h2 / house :mod (o2 / old)) :op2 (f / floors :mod (r / rocking)) :op3 (c / consume-01 :mod (e / energy) :arg1-of (h3 / high-02)) :op4 (e2 / et-cetera)))))
(a / and :op1 (e / expect-01 :arg0 (w / we) :arg1 (t / thing :arg1-of (e2 / expect-01 :arg0 (w2 / we) :source (d / design-01)))) :op2 (s / show-01 :arg0 (w3 / we) :arg1 (e3 / element :mod (s2 / some) :example (o / or :op1 (c / carpet) :op2 (p / paintings)) :example (o2 / or :op1 (c2 / carpet) :op2 (p2 / paintings)) :arg1-of (w4 / want-01 :arg0 (w5 / we) :arg1-of (w6 / want-01 :arg0 (w7 / we) :arg1-of (w8 / want-01 :arg0 (w9 / we) :arg1-of (w10 / want-01 :arg0 (w11 / we) :arg1-of (w12 / want-01 :arg0 (w13 / we) :arg1-of (w14 / want-01 :arg0 (w15 / we))))))))) :time (b / begin-01))
(u / use-01 :arg0 (y / you) :arg1 (g / granite) :arg2 (a / and :op1 (c / countertops :mod (k / kitchen)) :op2 (t / tiling :mod (f / fireplace))))
(p / possible-01 :arg1 (c / complain-01 :mod (o / only) :arg0-of (c2 / concern-02 :arg1 (d / damage-01 :arg1 (h / household :prep-with (d2 / dog))) :degree (t / too))) :arg1-of (p2 / possible-01))
(i / include-01 :arg1 (a / and :op1 (p / pool :arg1-of (s / swim-01)) :op2 (t / tub :arg1-of (h / hot-05))) :arg2 (i2 / it) :mod (a2 / also))
(c / contrast-01 :arg1 (n / negative :mod (n2 / negative :degree (q / quite)) :domain (p / person)) :arg2 (b / become-01 :arg1 (p2 / person) :arg2 (b2 / bad-04 :arg1 (i / it) :degree (m / more :quant (m2 / much)) :time (l / lately))))
(c / cause-01 :arg0 (p / possible-01 :arg1 (r / realize-01 :polarity - :arg0 (p2 / person) :arg1 (i / it) :degree (s / so))) :arg1 (p3 / possible-01 :arg1 (r2 / realize-01 :polarity - :arg0 (p4 / person) :arg1 (i2 / it))))
(w / work-01 :arg0 (i / i) :time (a / after :op1 (l / leave-15 :arg0 (i2 / i) :arg1 (w2 / website :mod (t / travel-01)))))
(l / like-02 :arg0 (i / i) :arg1 (l2 / learn-01 :arg0 (i2 / i) :arg1 (c / czech :arg0 (i3 / i))) :concession-of (h / have-03 :polarity - :arg0 (i4 / i) :arg1 (t / time)))
(p / possible-01 :mode (i / interrogative) :arg1 (c / cause-01 :arg0 (r / religious-group :name (n / name :op1 "N-A") :domain (y / you))))
(a / and :op1 (d / do-02 :arg0 (p / person :name (n / name :op1 "veronika" :op2 "kozelská-fenclová")) :arg1 (s / sailor :mod (c / czech)) :manner (w / well)) :op2 (r / race :arg0 (j / janiero :quant 2 :location (f / friday)) :arg1 (r2 / race) :mod (o / of-course)))
(l / like-01 :arg0 (n / nobody) :arg1 (f / find-01 :arg0 (n2 / nobody) :arg1 (n3 / note :topic (a / advise :arg0 (t / they) :arg1 (p / parcel :poss (t2 / they)) :location (b / branch :mod (o / office) :mod (p2 / post))))) :time (a2 / after :op1 (m / multiple :op1 19)))
(c / contrast-01 :arg1 (a / and :op1 (h / help-01 :arg0 (s / service :poss (w / we)) :arg1 (p / person) :arg2 (m / make-05 :arg0 (p2 / person) :arg1 (m2 / money) :location (h2 / hand :quant 1))) :op2 (s2 / save-02 :arg0 (s3 / service) :arg1 (m3 / money) :arg2 (o / other))) :arg2 (i / intend-01 :polarity - :arg0 (w2 / we) :arg1 (e / evading :arg0 (w3 / we) :arg1 (o2 / or :op1 (a2 / authority :mod (t / tax)) :op2 (i2 / inspect-01 :arg1 (t2 / tax-01))))))
(c / cause-01 :arg0 (h / have-03 :arg0 (p / person :mod (c2 / country :name (n / name :op1 "N-A"))) :arg1 (o / option) :purpose (t / take-01 :arg0 (p2 / person) :arg1 (p3 / picture-01 :arg1 (p4 / parcel :path (a / app)))) :mod (a2 / also)) :arg1 (p5 / possible-01 :arg1 (s / see-01 :arg0 (p6 / person :mod (c3 / country :name (n2 / name :op1 "N-A"))) :arg1 (t2 / thing :arg2-of (h2 / hand)))))
(c / contrast-01 :arg1 (o / obligate-01 :arg1 (y / you) :arg2 (d / do-02 :arg0 (y2 / you) :arg1 (a / all))) :arg2 (s / sweatshirt :arg1 (y3 / you) :arg2 (c2 / couriers)))
(m / multi-sentence :snt1 (a / and :op1 (l / ltd :ord (o / ordinal-entity :value 1)) :op2 (a2 / app :mod (e / expensive :degree (m2 / most)) :mod (e2 / expensive :degree (m3 / most)) :domain (s / shippansee))) :snt2 (u / upgrade-02 :arg1 2 :mod (o2 / other) :manner (w / way)))
(c / create-01 :arg1 (' / '' :name (n / name :op1 (p / p?evezu) :op2 (p2 / p?evezu))) :time (d / decide-01 :arg0 (w / we) :arg1 (p3 / possible-01 :arg1 (a / and :op1 (i / interesting :degree (m / more :degree (m2 / much)) :mod (p4 / potential) :domain (p5 / possible-01 :arg1 (i2 / interesting :domain (p6 / person :arg0-of (o / own-01) :mod (n2 / nation))))) :op2 (u / use-01 :arg0 (w2 / we) :arg1 (e / experience-01 :arg0 (w3 / we) :location (r / republic)) :arg2 (l / learn-01 :arg0 (w4 / we)))))))
(p / possible-01 :arg1 (s / see-01 :arg0 (o / or :op1 (h / he) :op2 (s2 / she)) :arg1 (l / location :arg2-of (a / available-02) :arg2-of (a2 / available-02))) :arg1-of (c / cause-01 :arg0 (a3 / and :op1 (p2 / possible-01 :arg1 (s3 / see-01 :arg0 (o2 / or :op1 (h2 / he) :op2 (s4 / she)) :arg1 (t / thing :arg2-of (a4 / available-02))) :op2 (f / find-out-03 :arg0 (o3 / or) :arg1 (a5 / and :op1 (c2 / cause-01 :arg0 (d / deliver-01) :arg1 (p3 / package)) :op2 (a6 / and :op1 (g / go-out-17 :arg0 (p4 / package)) :op2 (d2 / delivers :arg0 (p5 / package) :arg1 (p6 / package)) :time (t2 / then))))))))
(a / and :op1 (p / possible-01 :arg1 (j / judge-01 :arg0 (w / we) :arg1 (g / game) :beneficiary (w2 / we) :duration (m / multiple :op1 (t / temporal-quantity :quant (N / N-A) :unit (m2 / month))))) :op2 (r / report-01 :arg0 (w3 / we) :arg1 (g2 / game) :arg2 (w4 / we) :time (o / ordinal-entity :value 1 :part-of (g3 / game))))
(c / create-01 :arg1 (g / game :quant 23 :mod (a / another)) :arg3 (h / house :arg0-of (p / publish-01) :arg1-of (r / reveal-01 :arg0 (p2 / person :quant 13 :arg1-of (i / include-91 :arg2 (p3 / person))))))
(c / contrast-01)
(a / and :op1 (m / manage-02 :arg0 (i / i) :arg1 (g / get-01 :arg0 (i2 / i) :arg1 (k / keys))) :op2 (d / determined-02 :arg0 (i3 / i) :arg1 (c / caught :arg0 (i4 / i) :arg1 (t / they) :location (t2 / there))))
(i / include-91 :arg1 (f / facility :quant 1 :arg1-of (i2 / include-91 :arg2 (t / they))) :arg2 (f2 / facility :arg0-of (a / attack-01 :arg1 (t2 / temple :mod (e / ethnic-group :name (n / name :op1 "N-A"))) :time (l / late :degree (m / more)))) :arg1-of (r / report-01))
(a / and :op1 (h / healthy :degree (t / too) :domain (n / nothing)) :op2 (n2 / nothing :mod (t2 / too)) :arg2-of (e / except-01 :arg1 (p / possible-01 :arg1 (o / or :op1 (v / vegetables :mod (s / salad)) :op2 (v2 / vegetables :location (h2 / here))))))
(f / familiarize-01 :arg1 (p / person :arg0-of (e / eat-01 :arg1 (s / sushi) :frequency (o / often))) :arg2 (s2 / seaweed :arg1 (p2 / person)) :frequency (o2 / often))
(m / multi-sentence :snt1 (a / absolute :domain (e / enforce-01 :arg0 (t / they)) :degree (a2 / absolute)) :snt2 (u / unbeaten :arg0 (t2 / they) :mod (p / precedent :polarity -) :mod (p2 / precedent :polarity -) :mod (a3 / again) :domain (t3 / this)))
(a / and :op1 (m / metres :quant 500 :mod (e / even) :time (c / crews :arg1 (c2 / crews :source (a2 / and :op1 (z / zealand :mod (n / new)) :op2 (d / denmark))))) :op2 (h / have-03 :arg0 (g / glover) :arg1 (m2 / much :degree (t / too))))
(m / multi-sentence :snt1 (p / prefer-01 :arg0 (i / i) :arg1 (o / obligate-01 :arg1 (t / they) :arg2 (d / drive-01 :arg0 (t2 / they) :arg1 (p2 / person) :purpose (f / free-04 :arg1 (p3 / person))))) :snt2 (s / say-01 :arg0 (p4 / person :arg0-of (h / have-org-role-91 :arg2 (p5 / prosecute-01 :arg1 (p6 / person) :mod (g / ground-breaking)))) :arg1 (p7 / person :arg0-of (h2 / have-org-role-91 :arg1 (t3 / taxi) :arg3 (a / apprentice-01 :arg0 (p8 / person))))))
(s / sense-02 :polarity - :arg1 (p / put-01 :arg1 (s2 / somebody) :arg2 (b / behind :op1 (i / imprison-01 :arg1-of (r / resemble-01 :arg2 (t / this))))))
(c / cause-01 :arg1 (r / recommend-01 :arg1 (r2 / restore-01 :arg0 (t / they) :arg1 (r3 / reputation :poss (c2 / country)) :manner (o / obligate-01 :arg1 (c3 / country) :arg2 (d / drive-01 :arg0 (c4 / country) :arg1 (p / person) :arg3-of (f / free-04)))) :time (n / now)))
(p / picked :arg0 (t / they) :arg1 (p2 / person :quant (f / few) :source (g / group :mod (l / large) :mod (t2 / that))) :mod (o / only))
(p / play-11 :arg0 (i / i) :arg2 (v / video) :time (b / be-located-at-91 :arg1 (p2 / person :arg0-of (h / have-rel-role-91 :arg1 (i2 / i) :arg2 (f / friend))) :arg2 (a / abroad)))
(c / cleaned :arg1 (a / and :op1 (w / water :arg1-of (c2 / clean-04)) :op2 (c3 / chemical :mod (a2 / avoid)) :op3 (c4 / chemical :mod (g / good :degree (m / more) :compared-to (a3 / and :op1 (p / possible-01 :arg1 (c5 / chemical)) :op2 (g2 / good :degree (m2 / more)))))) :mod (m3 / main))
(i / impress-01 :arg1 (s / she) :degree (v / very) :arg1-of (c / cause-01 :arg0 (a / and :op1 (o / obligate-01 :arg1 (s2 / she) :arg2 (k / keep-02 :arg0 (s3 / she) :arg1 (c2 / climb :arg0 (s4 / she)))) :op2 (d / down :domain (s5 / she)))) :degree (v2 / very))
(s / say-01 :arg0 (s2 / she) :arg1 (o / obligate-01 :arg2 (a / and :op1 (d / diligent :arg1 (p / person :arg0-of (h / have-rel-role-91 :arg2 (p2 / patient)))) :op2 (d2 / demand-01 :polarity - :arg0 (p3 / person) :arg1 (r / respect-01 :arg0 (p4 / person) :arg1 (c / condition :mod (w / work-01))) :degree (t / too :polarity -)))))
(s / say-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (h2 / heritage :mod (h3 / heritage :mod (n / nation))) :arg2 (o / official :mod (h4 / heritage :mod (n2 / nation)))) :arg0-of (h5 / have-org-role-91 :arg1 (h6 / heritage :mod (n3 / nation)) :arg2 (o2 / official :mod (h7 / heritage :mod (n4 / nation)))) :arg0-of (h8 / have-org-role-91 :arg1 (h9 / heritage :mod (n5 / nation)) :arg2 (o3 / official :mod (h10 / heritage :mod (n6 / nation))))) :arg1 (g / gilded :arg1 (i / inscriptions :location (s2 / slabs :name (n7 / name :op1 (m / marble) :op2 (s3 / slabs) :op3 (s4 / slabs)))) :time (n8 / next)))
(q / question-01 :arg1 (t / this) :mod (o / of-course) :mod (o2 / of-course))
(c / content-01 :arg0 (a / accept-01 :arg0 (p / person :arg0-of (h / have-rel-role-91 :arg1 (i / i) :arg2 (f / friend))) :arg1 (a2 / and :op1 (t / task :mod (i2 / important) :mod (t2 / this)) :op2 (t3 / task :mod (c2 / challenging)) :mod (t4 / this))) :degree (v / very))
(o / opine-01 :arg0 (h / he) :arg1 (t / thing :arg1-of (o2 / opine-01 :arg0 (h2 / he)) :domain (t2 / thing :arg1-of (v / view-01 :arg0 (h3 / he))) :arg1-of (c / cause-01 :arg0 (p / prove-01 :arg0 (h4 / he) :arg1 (h5 / have-rel-role-91 :arg0 (h6 / he) :arg1 (a / and :op1 (c2 / concept :mod (b / broadcast-program :name (n / name :op1 "N-A"))) :op2 (m / model :topic (c3 / capitalism))) :arg2 (e / enemy :mod (u / unrepentant)))))))
(a / and :op1 (e / exclusive-02 :polarity - :domain (t / this) :beneficiary (n / nation :quant 2 :mod (t2 / this)) :mod (o / only)) :op2 (g / guilty-01 :arg1 (w / we) :mod (a2 / also)))
(p / period :polarity - :time (a / after :op1 (l / lose-02 :arg0 (t / they) :arg1 (w / war :mod (c / cold)))))
(m / multi-sentence :snt1 (b / beat-03 :mode (i / imperative) :arg0 (y / you) :arg1 (y2 / you)) :snt2 (f / fear-01 :arg0 (y3 / you)))
(b / benefit-01 :arg0 (t / tension :arg1-of (g / grow-01)))
(a / allege-01 :arg1 (i / involve-01 :arg1 (a2 / agency :quant 2 :mod (i2 / intelligence) :mod (c / country :name (n / name :op1 "N-A"))) :arg2 (a3 / attack-01)))
(m / multi-sentence :snt1 (a / and :op1 (p / process-02 :arg1 (w / withdraw-01 :arg0 (w2 / we) :arg1 (s / stock :mod (u / unsold) :quant (a2 / all)) :arg2 (s2 / store)) :time (c / current)) :op2 (s3 / say-01 :arg0 (p2 / person :arg0-of (h / have-org-role-91 :arg1 (p3 / petr :name (n / name :op1 (s4 / svs))) :arg2 (s5 / spokesman))) :arg1 (p4 / pejchal :arg0 (p5 / person :arg0-of (h2 / have-org-role-91 :arg1 (p6 / petr :mod (s6 / svs)) :arg2 (s7 / spokesman))))) :time (c2 / current)) :snt2 (t / tk :mode (e / expressive)))
(m / multi-sentence :snt1 (c / case :quant (m2 / many) :location (g / go-02 :arg0 (p / person) :arg4 (t / there))) :snt2 (a / and :op1 (r / realize-01 :arg0 (p2 / person) :arg1 (t2 / thing :manner-of (a2 / and :op1 (t3 / thing :domain (t4 / thing) :mod (r2 / real)) :op2 (t5 / thing :quant-of (r3 / reality :source (a3 / and :op1 (p3 / promise-01) :op2 (p4 / propaganda) :arg1-of (s / spread-02 :arg1-of (w / want-01 :arg0 (s2 / state :mod (r4 / religious-group :name (n / name :op1 "N-A"))))))))))) :op2 (s3 / say-01 :arg0 (p5 / person) :arg1 (a4 / akunjee))))
(m / multi-sentence :snt1 (a / and :op2 (h / have-03 :arg0 (j / jail :location (r / river :name (n / name :op1 "N-A"))) :arg1 (r2 / reputation :quant (m2 / multiple :op1 1)))) :snt2 (l / location :mod (h2 / haunted :degree (m3 / most)) :time (d / date-entity :decade (N / N-A))))
FAILED_TO_PARSE#Number of opening and closing brackets doesn't match.
(t / turnaround :arg0 (w / we) :arg1-of (c / complete-02))
(a / and :op1 (j / jump :mode (i / imperative) :arg0 (y / you) :arg1 (t / trampolines :mod (g / giant)) :arg2 (t2 / trampolines :quant (n / nearly :op1 30)) :location (a2 / air)) :op2 (c / call-03 :arg1 (p / perform-02 :arg0 (y2 / you) :arg1 (m / move-01 :arg1 (t3 / tumbling) :quant (s / series)) :arg2 (a3 / and :op1 (t4 / twist) :op2 (p2 / pikes) :op3 (s2 / somersaults)) :time (b / before :op1 (l / land-01 :arg1 (t5 / they) :arg2 (f / foot :part-of (t6 / they)) :time (e / eventual))))))
(c / contrast-01 :arg1 (c2 / chasing :arg0 (t / they) :arg1 (o / or :op1 (l / line :name (n / name :op1 (f / finish))) :op2 (w / wall :arg1-of (s / start-01))) :mod (o2 / only :polarity -)) :arg2 (c3 / coverage :arg1 (l2 / line :mod (t2 / taunting) :mod (a / another)) :arg2 (o3 / or :op1 (w2 / world) :op2 (o4 / olympic) :op3 (r / record)) :mod (a2 / also)))
FAILED_TO_PARSE#Two concepts in a row.
(t / try-01 :arg0 (p / person :arg0-of (t2 / trumps)) :arg1 (q / quash :arg0 (p2 / person) :arg1 (c / campaign-01 :arg0 (p3 / person) :arg1 (c2 / controversial :arg0 (p4 / person) :arg1 (c3 / campaign-01 :arg0 (p5 / person)) :time (l / late :degree (m / most)))) :manner (c4 / claim-01 :arg0 (p6 / person) :arg1 (s / serious-02 :polarity - :arg1 (p7 / person) :time (i / insist-01 :arg0 (p8 / person) :arg1 (s2 / serious-02 :arg1 (p9 / person) :time (i2 / insist-01 :arg0 (p10 / person) :arg1 (s3 / serious-02 :arg1 (a / and :op1 (p11 / person :arg0-of (h / have-org-role-91 :arg2 (p12 / president))) :op2 (p13 / person :arg0-of (h2 / have-org-role-91 :arg2 (h3 / head-of-state))) :op3 (p14 / person :arg0-of (h4 / have-org-role-91 :arg1 (g / group :name (n / name :op1 "N-A") :mod (s4 / state) :mod (s5 / state) :mod (s6 / state)))))) :time (w / week :mod (t3 / this)))))))))
(r / reverse-01 :arg1 (p / post) :time (b / before :op1 (n / now) :quant (t / temporal-quantity :quant (N / N-A) :unit (d / day)) :mod (j / just)) :time (i / interview-01 :arg0 (m / mr.) :arg1 (p2 / person :arg0-of (h / have-org-role-91 :arg2 (h2 / head-of-state))) :arg1-of (c / cause-01 :arg0 (s / serious-01 :arg1 (p3 / person) :arg2 (c2 / charge-01) :mod (i2 / indeed)))))
(s / say-01 :arg0 (s2 / she) :arg1 (g / give-up-07 :arg0 (s3 / she) :arg1 (c / coffee) :time (w / while)) :time (a / after :op1 (c2 / close-01 :arg1 (v / verb))))
(s / say-01 :arg0 (h / he) :arg1 (n / need-01 :arg0 (i / i) :arg1 (s2 / smell :arg0 (i2 / i) :arg1 (t / that))))
(m / multi-sentence :snt1 (d / diet :mod (n / new) :mod (b / budget) :domain (d2 / diet :arg1-of (r / resemble-01 :arg2 (a / and :op1 (m2 / mystery :domain (m3 / mystery)) :op2 (b2 / become-01 :arg1 (m4 / mystery) :arg2 (s / staples :arg1 (m5 / mystery))))))) :snt2 (a2 / and :op1 (b3 / become-01 :arg1 (m6 / mystery :arg1-of (w / wonderful-03 :mod (' / ''))) :arg2 (s2 / staples :arg1 (m7 / mystery))) :op2 (b4 / became :arg0 (m8 / mystery) :arg1 (w2 / way :arg1-of (w3 / wonderful-03) :arg1-of (w4 / wonderful-03 :arg2 (l / leftovers)))) :op3 (n2 / note-01 :arg0 (i / i) :arg1 (p / possible-01 :arg1 (h / hide-01 :arg0 (i2 / i) :arg1 (i3 / ingredient :mod (u / unappetizing)) :prep-under (c / coating :consist-of (s3 / sauce)))))))
(a / and :op1 (p / possible-01 :arg1 (c / commit-02 :arg0 (p2 / person :arg0-of (h / have-org-role-91 :arg2 (p3 / president))) :arg1 (e / error :arg1-of (s / same-01)) :condition (p4 / person :arg0-of (h2 / have-rel-role-91 :arg1 (p5 / person) :arg2 (w / wife))))) :op2 (e2 / encourage-01 :polarity - :arg0 (p6 / person) :arg1 (p7 / person) :arg2 (s2 / set-02 :arg0 (p8 / person) :arg1 (e3 / example) :arg2 (m / monkey :poss (p9 / person)))))
(m / make-01 :arg0 (p / person :mod (y / young)) :arg1 (f / fun) :arg2 (p2 / person))
(r / resemble-01 :arg1 (t / this) :arg2 (l / look-02 :arg0 (s / show-04 :medium (t2 / tv)) :arg1 (t3 / they)))
(s / sweeping :arg1 (f / force :mod (d / democracy) :mod (c / country :name (n / name :op1 "Syria"))) :time (n2 / now) :time (a / after :op1 (d2 / depart-01 :arg0 (g / group :consist-of (m / militant :arg1-of (r / remain-01) :arg0-of (h / holed :arg1 (m2 / militant) :location (c2 / city)))))))
(r / return-05 :arg0 (p / person :quant 2015 :arg1-of (m / mean-01 :arg2 (p2 / person :mod (c / country :name (n / name :op1 "N-A"))))) :arg1 (c2 / come-01 :arg1 (r2 / rate-entity-91 :arg1 (m2 / monetary-quantity :quant 100 :unit (d / dollar) :mod (j / just)) :arg2 (t / temporal-quantity :quant (N / N-A) :unit (y / year))) :arg3 (w / wage)))
(f / friday :arg1 (d / day :mod (e / elephant) :poss (w / world)) :arg2 (p / protect-01 :arg1 (a / animal)))
(a / and :op1 (s / see-01 :arg0 (w / we) :arg1 (a2 / attitude :mod (a3 / attitude) :arg1-of (c / change-01 :location (c2 / community :mod (t / this)))) :time (s2 / since :op1 (d / develop-02 :arg0 (w2 / we) :arg1 (c3 / community :mod (t2 / this))))) :op2 (c4 / confident-01 :arg1 (w3 / we) :degree (m / more :degree (m2 / much)) :arg1-of (c5 / cause-01 :arg0 (c6 / confident-01 :arg1 (t3 / they) :arg2 (p / possible-01 :arg1 (k / keep-02 :arg0 (t4 / they) :arg1 (e / elephants :arg0 (t5 / they) :arg1 (f / field :poss (t6 / they)) :manner (h / harm-01 :polarity - :arg0 (t7 / they) :arg1 (f2 / field :poss (t8 / they)) :manner (h2 / harm-01 :polarity - :arg0 (t9 / they) :arg1 (p2 / person :arg0-of (h3 / have-org-role-91 :arg1 (p3 / political-party :name (n / name :op1 "N-A")) :arg2 (d2 / director :mod (e2 / executive))))))))))) :medium (s3 / statement)))
(m / multi-sentence :snt1 (m2 / mix-01 :arg1 (p / powder :arg3-of (m3 / mix-01 :arg1 (c / chilli) :arg2 (s / seismic-quantity :quant (N / N-A)))) :arg2 (f / firecrackers :destination (c2 / condom :mod (c3 / condom)))) :snt2 (s2 / shut :arg1 (e / end-01 :arg1 (f2 / fused :mod (j / just)))))
(s / say-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg2 (a / ambassador))) :arg1 (s2 / surge :prep-in (i / interest-01 :arg1 (f / firm :mod (c / country :name (n / name :op1 "N-A"))) :arg2 (d / do-02 :arg0 (f2 / firm) :arg1 (b / business) :location (c2 / country)))) :time (s3 / since :op1 (l / lifted :arg1 (t / thing :arg2-of (s4 / sanction-02 :arg1 (c3 / country :name (n2 / name :op1 "N-A")) :mod (i2 / international))) :mod (i3 / international))))
(c / claim-01 :arg0 (p / person :mod (c2 / country :name (n / name :op1 "N-A"))) :arg1 (w / win-01 :arg0 (p2 / person) :arg1-of (s / shock-01) :time (b / before :op1 (n2 / now) :quant (u / up-to :op1 (t / temporal-quantity :quant (N / N-A) :unit (y / year))))) :purpose (w2 / win-01 :arg0 (p3 / person) :arg1 (f / fifth :poss (g / golds :quant 6 :mod (o / olympic) :poss (h / he)))))
(s / say-01 :arg0 (h / he) :arg1 (a / and :op1 (g / good :domain (w / wouldn :mod (w2 / wouldn :degree (t / total)) :beneficiary (w3 / we)) :beneficiary (w4 / we)) :op2 (g2 / good :domain (w5 / wouldn :mod (t2 / that)) :beneficiary (w6 / we))))
FAILED_TO_PARSE#Number of opening and closing brackets doesn't match.
(f / fraught :arg1 (p / position-02 :arg0 (c / country :name (n / name :op1 "N-A")) :arg2 (h / history :mod (t / television) :mod (r / reality) :poss (s / she))) :time (a / always) :time (a2 / always))
(l / lost :arg1 (p / person :mod (t / that) :arg1-of (l2 / legal-02) :mod (t2 / that)) :arg2 (l3 / lose-02 :arg0 (p2 / person) :arg1 (r / rate-entity-91 :arg1 30 :arg2 (t3 / temporal-quantity :quant (N / N-A) :unit (y / year))) :arg3 (f / fund-01 :arg0 (f2 / federal) :arg1 (f3 / federal))) :time (y2 / year :mod (n / next)))
(c / cause-01 :arg0 (a / and :op1 (c2 / call-01 :arg0 (w / we) :arg1 (a2 / and :op1 (p / person :arg0-of (h / have-org-role-91 :arg2 (h2 / head-of-state))) :op2 (p2 / person :arg0-of (h3 / have-org-role-91 :arg2 (s / senator))) :op3 (p3 / person :arg0-of (h4 / have-org-role-91 :arg2 (s2 / senator))) :op4 (p4 / person :arg0-of (h5 / have-org-role-91 :arg2 (s3 / senator))) :op5 (p5 / person :arg0-of (h6 / have-org-role-91 :arg2 (s4 / senator)))) :arg2 (r / reverse-01 :arg1 (f / fund-01) :mod (t / this)) :time (i / immediate))) :arg1 (p6 / possible-01 :arg1 (g / get-01 :arg0 (p7 / person) :arg1 (h7 / help-01) :time (f2 / face-01 :arg0 (p8 / person) :arg1 (p9 / problem :arg1-of (l / legal-02))))))
(d / describe-01 :arg1 (i / incident) :arg2 (s / sue-02 :arg2 (c / court :mod (s2 / state)) :location (c2 / court :mod (s3 / state)) :arg1-of (c3 / charlotte :arg2 (c4 / campaign-01 :mod (s4 / state)) :time (f / former))) :medium (s5 / sue-02 :arg2 (c5 / court :mod (s6 / state))))
(s / say-01 :arg0 (c / campaign-01 :arg0 (p / person :arg0-of (c2 / campaign-01))) :arg1 (a / and :op1 (t / take-01 :arg0 (m / media) :arg1 (w / word :poss (h / he)) :arg3 (c3 / context :poss (h2 / he))) :op2 (' / ' :arg0 (h3 / he) :arg1 (v / violence :mod (a2 / advocate :degree (t2 / total))))))
(a / attempt-01 :arg1 (r / reach-01 :arg1 (p / phillip :arg1 (p2 / phillip))))
(a / and :op1 (w / wrong-02 :arg1 (d / doubters) :arg2 2012) :op2 (p / prove-01 :arg1 (w2 / wrong-02 :arg1 (d2 / doubters) :arg2 (h / heathrow))))
(e / expand-01 :arg1 (e2 / expand-01) :purpose (a / and :op1 (c / create-01 :arg1 (j / job :quant 180000 :mod (n / new))) :op2 (l / leave-13 :arg0 (e3 / expand-01) :arg1 (l2 / legacy :mod (a2 / and :op1 (p / person :mod (a3 / around :op1 (a4 / airport))) :op2 (p2 / person :mod (b / both)) :location (a5 / around :op1 (a6 / and :op1 (a7 / airport) :op2 (a8 / across :op1 (c2 / country :name (n2 / name :op1 "N-A"))))))))))
(s / say-01 :arg0 (p / paper) :arg1 (j / judge-01 :arg0 (p2 / person :arg1-of (i / include-91 :arg2 (p3 / person :arg0-of (w / walk-01 :location (m / motorway :arg1-of (d / dark-02))) :mod (b / both))) :mod (b2 / both)) :arg1 (p4 / possible-01 :polarity - :arg1 (e / expect-01 :arg0 (p5 / person) :arg1 (c / come-01 :arg1 (p6 / person) :arg4 (a / across :op1 (p7 / pedestrian :time (n / night))))))) :prep-in (c2 / case :mod (e2 / each)))
(s / succeed-01 :arg0 (f / fiji) :arg1 (s2 / succeed-01 :arg0 (f2 / fiji) :mod (h / historic)))
(l / love-01 :arg0 (i / i) :arg1 (e / everything :topic (s / she)))
(r / remarkable-02 :arg1 (d / domination :poss (t / they)) :arg1-of (r2 / remarkable-02) :mod (a / also) :mod (a2 / also))
(a / and :op1 (s / study-01 :arg0 (p / person :arg0-of (s2 / study-01)) :arg1 (f / finance)) :op2 (i / involve-01 :arg1 (p2 / person) :arg2 (t / thing :arg2-of (m / match-01 :arg1 (s3 / shoe :mod (c / charity))))))
(c / contrast-01 :arg1 (a / answer-01 :arg0 (p / person :arg0-of (a2 / answer-01 :arg1 (q / question-01))) :arg1 (t / thing :arg1-of (q2 / question-01)) :time (f / first)) :arg2 (w / wait-01 :arg1 (p2 / person) :arg2 (t2 / turn-14 :arg0 (p3 / person) :arg1 (h / he))))
(m / multi-sentence :snt1 (c / contrast-01 :arg2 (s / say-01 :arg0 (p / person :arg0-of (h / have-rel-role-91 :arg1 (v / victim) :arg2 (b / brother))) :arg1 (p2 / possible-01 :arg1 (t / think-01 :arg0 (a / anyone :arg0-of (w / want-01 :arg1 (h2 / hurt-01 :arg0 (a2 / anyone) :arg1 (h3 / he)))) :arg1 (a3 / anyone :arg0-of (w2 / want-01 :arg1 (h4 / hurt-01 :arg0 (a4 / anyone) :arg1 (h5 / he)))) :degree (t2 / total))))) :snt2 (g / go-01 :arg1 (t3 / thing :mod (' / '')) :arg4 (h6 / he) :mod (w3 / well)))
(m / multi-sentence :snt1 (m2 / make-02 :arg0 (c / connect-01 :arg1 (h / he) :arg2 (c2 / connect-01 :arg1 (h2 / he) :arg2 (f / family))) :arg1 (w / we) :time (a / always)) :snt2 (s / say-01 :arg0 (p / person :arg0-of (h3 / have-org-role-91 :arg2 (g / galicia :mod (l / louis)))) :arg1 (w2 / we)))
(h / have-03 :arg0 (p / person :arg0-of (o / operate-01)) :arg1 (s / stud :quant 110 :arg1-of (i / include-91 :arg2 (m / metropolis :mod (c / carriages) :mod (t / this)))) :arg3 (t2 / thing :arg2-of (s2 / shelter-01 :arg3 (j / july))))
(c / cause-01 :arg0 (r / require-01 :arg1 (s / specify-01 :arg0 (a / authority) :arg1 (l / location :arg2-of (b / be-located-at-91 :arg1 (b2 / billboard :mod (l2 / law :polarity -)))))) :arg1 (t / this))
(e / estimate-01 :arg0 (o / office :mod (s / statistical :mod (c / czech))) :arg1 (t / thing :arg1-of (h / harvest-01)) :arg2 (i / increase-01 :arg1 (p / person :arg0-of (c2 / consume-01)) :arg3 (s2 / score-entity :op1 1.305 :op2 1.305)))
(s / show-01 :arg0 (p / person :arg0-of (w / write-01)) :arg1 (s2 / strana :arg1-of (d / differ-02)) :arg2 (w2 / we))
(m / make-01 :arg1 (m2 / monetary-quantity :quant 10.6 :unit (d / dollar :mod (r / renminbi))) :time (y / year :mod (l / last)))
(p / pay-01 :arg0 (t / they) :arg1 (r / rate-entity-91 :arg1 (r2 / rate :mod (t2 / tax-01 :arg3 (i / income)) :arg1-of (c / combine-01)) :arg2 (p2 / percentage-entity :value (N / N-A))) :arg2-of (t3 / total-01))
(a / account-01 :arg0 (c / country :name (n / name :op1 "Nigeria")) :arg1 (c2 / case :quant (1 / 1/2) :arg1-of (i / include-91 :arg2 (c3 / case-03 :location (w / world) :mod (n2 / new) :quant (a2 / all)))))
(s / say-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (p2 / pope) :arg2 (s2 / spokesman))) :arg1 (w / want-01 :arg0 (p3 / pope) :arg1 (u / use-01 :arg0 (p4 / pope) :arg1 (m / meet-03 :mod (t / this)) :purpose (a / and :op1 (d / draw-02 :arg0 (p5 / pope) :arg2 (t2 / traffic-01 :arg1 (h2 / human))) :op2 (c / call-03 :arg0 (p6 / pope) :arg1 (s3 / stepping :arg1 (f / fight-01 :arg1 (i / it))))))))
(p / phone-number-entity :value (N / N-A))
(c / cause-01 :arg0 (g / get-02 :arg0 (p / person :arg0-of (m / mr)) :arg1 (a / apology :source (p2 / person :arg0-of (h / have-org-role-91 :arg2 (p3 / president))))) :arg1 (m2 / meet-03 :mod (t / this) :mod (o / only)) :time (a2 / after :op1 (a3 / all)))
(u / use-01 :arg1 (b / bank :mod (r / royal) :part-of (c / country :name (n / name :op1 "N-A"))) :arg2 (c2 / customer :mod (c3 / country :name (n2 / name :op1 "N-A"))) :concession-of (i / initialised :polarity - :arg1 (b2 / bank)))
(h / have-concession-91 :arg2 (r / ride-01 :arg0 (c / country :name (n / name :op1 "N-A")) :arg1 (w / winners :mod (g / good :degree (m / most)) :arg1-of (s / see-01 :arg1-of (s2 / see-01 :arg0 (c2 / country))))) :manner (s3 / serious))
FAILED_TO_PARSE#Two concepts in a row.
(m / mystery :prep-as (f / fish))
(m / multi-sentence :snt1 (t / tlucho :mode (i / interrogative)) :snt2 (i2 / involve-01 :polarity - :arg1 (c / case-03 :mod (t2 / this))))
(a / appear-02 :arg1 (d / die-01 :arg1 (g / girl) :arg1-of (c / cause-01 :arg0 (s / strike-01 :arg0 (g2 / girl) :arg1 (f / force :arg1-of (a2 / ally-01 :arg2 (w / world-region :name (n / name :op1 "N-A")))) :mod (a3 / air)))))
(c / contrast-01 :arg1 (a / and :op1 (g / good :domain (e / educate-01 :arg1-of (h / high-02 :degree (m / more)))) :op2 (i / indicator :mod (o / overall) :poss (c2 / candidate)) :domain (e2 / educate-01 :arg1-of (h2 / high-02 :degree (m2 / more)))) :arg2 (t / tend-02 :polarity - :arg1 (a2 / and) :arg2 (h3 / have-03 :arg0 (a3 / and) :arg1 (m3 / much :degree (m4 / much)) :prep-with (k / knowledge :topic (d / develop-02)))))
(d / demand-01 :arg0 (p / person :arg0-of (m / manage-01 :arg1 (p2 / project))) :mod (a / also))
(a / and :op1 (b / breakfasts :manner (h / health) :location (l / locality :quant (s / some)) :mod (a2 / also)) :op2 (a3 / available-02 :arg2 (- / -rrb-) :location (w / workplace) :frequency (r / rate-entity-91 :arg3 (t / temporal-quantity :quant (N / N-A) :unit (d / day)))))
(l / lead-03 :arg0 (g / game) :arg2 (i / increase-01 :arg1 (n / number :quant-of (s / step-01 :arg1-of (t / take-01 :arg0 (p / person :mod (' / '') :arg1-of (a / average-03)) :time (d / day :mod (e / each))))) :arg1-of (s2 / significant-02)) :location (w / we))
(e / effortless :prep-on (b / beams))
(a / and :op1 (' / ' :arg0 (s / state) :arg1 (a2 / and :op1 (b / biles :arg1 (s2 / state)) :op2 (l / leave-11 :arg0 (s3 / state)) :op3 (e / embrace :arg0 (s4 / state))) :time (a3 / after :op1 (w / win-01 :arg0 (s5 / state) :arg1 (a4 / and :op1 (g / gold) :op2 (s6 / silver)) :mod (r / respective)))) :op2 (e2 / embrace :arg0 (s7 / state) :time (a5 / after :op1 (w2 / win-01 :arg0 (s8 / state) :arg1 (a6 / and :op1 (g2 / gold) :op2 (s9 / silver)) :mod (r2 / respective) :time (s10 / summer :quant 2016 :mod (s11 / summer :mod 2016) :location (o / olympics :name (n / name :op1 (d / de) :op2 (d2 / de) :op3 (f / final) :op4 (f2 / final) :op5 (f3 / final) :op6 (f4 / final) :op7 (f5 / final))))))))
FAILED_TO_PARSE#Number of opening and closing brackets doesn't match.
(s / say-01 :arg0 (p / person :name (n / name :op1 "N-A")) :arg1 (r / report-01 :arg0 (p2 / person :quant 1 :arg0-of (o / observe-01) :arg1-of (n2 / near-02 :arg2 (l / livingston))) :arg1 (r2 / rain-01) :time (m / morning :mod (f / friday))))
(s / say-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg2 (g / general)) :arg0-of (h2 / have-org-role-91 :arg2 (g2 / general)) :arg0-of (h3 / have-org-role-91 :arg2 (g3 / general))) :arg1 (r / report-01 :arg1 (h4 / home :quant 200 :mod (h5 / home))))
(s / say-01 :arg0 (h / he) :arg1 (c / contrast-01 :arg1 (r / report-01 :arg1 (f / fire-01 :arg1 (h2 / house))) :arg2 (r2 / report-01 :polarity - :arg1 (f2 / friday :mod (f3 / far :degree (s2 / so))))))
(s / start-01 :arg1 (s2 / start-01 :arg0 (h / he) :arg1 (h2 / have-org-role-91 :arg0 (h3 / he) :arg1 (s3 / school :mod (e / elementary) :arg1-of (l / local-02)) :arg2 (h4 / head-of-state)) :ord (o / ordinal-entity :value 1)))
(a / and :op1 (m / move-01 :arg1 (g / group :consist-of (d / doctor)) :arg2 (c / contract :mod (n / new)) :time (b / before :op1 (m2 / move-01 :arg1 (g2 / group :consist-of (d2 / doctor) :ord (o / ordinal-entity :value 1)) :arg2 (c2 / contract :mod (n2 / new)))) :time (b2 / before :op1 (m3 / move-01 :arg1 (g3 / group :consist-of (d3 / doctor) :ord (o2 / ordinal-entity :value 1)) :arg2 (c3 / contract :mod (n3 / new))))) :op2 (r / run-02 :arg0 (g4 / group)))
(a / and :op1 (m / meet-03 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (g / government-organization :arg0-of (g2 / govern-01)))) :arg1 (e / effort :purpose (r / resolve-01 :arg1 (d / dispute-01 :arg2 (t / talk-01))))) :op2 (m2 / meet-03 :arg0 (a2 / amusement-park :name (n / name :op1 "N-A") :source (g3 / government-organization :arg0-of (g4 / govern-01)))))
(s / say-01 :arg0 (h / he) :arg1 (a / and :op1 (r / rahman :arg0 (c / court :mod (e / elect-01)) :arg1 (a2 / and :op1 (p / person :arg0-of (h2 / have-org-role-91 :arg2 (h3 / head-of-state))) :op2 (a3 / agent :poss (p2 / person))) :arg2 (l / litany :consist-of (a4 / and :op1 (c2 / corrupt-01 :arg1-of (c3 / corrupt-01)) :op2 (p3 / practice-01 :mod (l2 / law :polarity -))))) :op2 (s2 / say-01 :arg0 (h4 / he))))
(a / and :op1 (o / oppose-01 :arg1 (p / person :quant 1 :arg1-of (i / include-91 :arg2 (p2 / person :quant 2012 :arg1-of (p3 / popular-02 :arg2 (t / temporal-quantity :quant (N / N-A) :unit (y / year))))) :arg1-of (p4 / popular-02 :degree (m / most)) :arg1-of (i2 / include-91 :arg2 (p5 / person :quant 2012))) :arg3 (t2 / temporal-quantity :quant (N2 / N-A) :unit (y2 / year))) :op2 (p6 / point-out-02 :arg0 (p7 / person) :arg1 (s / striking :arg0 (l / likeness :arg0 (c / country :name (n / name :op1 "N-A")) :arg1 (a2 / and :op1 (r / rutherford) :op2 (a3 / actor :mod (p8 / popular)) :arg1-of (p9 / popular-02 :arg2 (a4 / actor)) :arg1-of (p10 / popular-02 :arg2 (a5 / actor))))) :time (y3 / year :mod (t3 / this))))
(t / think-01 :arg0 (p / person :name (n / name :op1 "byron" :op2 "macdonald")) :arg1 (t2 / turned :arg1 (m / mic :poss (h / he)) :time (s / start-01 :arg0 (h2 / he) :arg1 (d / dispense :arg0 (h3 / he) :arg1 (t3 / thing :arg1-of (o / opine-01 :arg0 (h4 / he)) :quant (s2 / some) :arg1-of (i / include-91 :arg2 (t4 / thing :arg1-of (o2 / opine-01 :arg0 (h5 / he))) :time (e / end-01 :arg1 (f / freestyle :poss (w / woman) :mod (4 / 4x200m)))))))))
(t / test-01 :arg0 (h / handrails :arg1-of (p / public-02) :location (s / station :mod (t2 / train))) :arg1 (t3 / task) :mod (d / definite))
(f / forcefully :arg0 (h / house-01 :arg0-of (h2 / house-01)) :arg1 (a / and :op1 (s / she) :op2 (p / person :arg0-of (h3 / have-rel-role-91 :arg1 (s2 / she) :arg2 (p2 / partner))) :op3 (p3 / person :arg0-of (h4 / have-rel-role-91 :arg1 (s3 / she) :arg2 (p4 / partner))) :op4 (p5 / property)) :arg2 (p6 / property) :time (w / week :mod (t / this)) :time (a2 / after :op1 (g / give-01 :arg0 (h5 / house-01) :arg1 (p7 / period :arg1-of (e / extend-01) :consist-of (m / move-01 :arg1 (a3 / and))) :arg2 (v / volunteer-01 :arg0 (a4 / and)))))
(h / hope-01 :arg0 (i / i) :arg1 (a / and :op1 (g / give-01 :arg0 (d / develop-01 :mod (t / this)) :arg1 (c / comfort :quant (s / some)) :arg2 (f / festival :name (n / name :op1 "N-A"))) :op2 (m / message-01 :arg0 (i2 / i) :arg1 (t2 / tolerate-01 :polarity - :arg1 (b / behave-01 :arg0 (b2 / behave-01 :arg0 (c2 / country :name (n2 / name :op1 "N-A"))))))))
(s / say-01 :arg0 (p / person :arg0-of (l / lead-02 :arg1 (o / organization :name (n / name :op1 "senate" :op2 "democratic"))) :arg0-of (h / have-org-role-91 :arg1 (o2 / organization) :arg3 (l2 / lead-02))) :arg1 (c / convince-01 :arg0 (p2 / person) :arg1 (p3 / person :arg0-of (h2 / have-org-role-91 :arg3 (j / judge-01)) :arg0-of (n2 / nominate-01 :arg1 (p4 / person :arg0-of (h3 / have-org-role-91 :arg3 (j2 / judge-01)))) :arg0-of (h4 / have-org-role-91 :arg3 (j3 / judge-01))) :arg2 (p5 / person :arg0-of (h5 / have-org-role-91 :arg3 (j4 / judge-01))) :condition (e / elect-01 :arg1 (p6 / person) :arg2 (p7 / president))))
FAILED_TO_PARSE#Number of opening and closing brackets doesn't match.
(m / multi-sentence :snt1 (t / thing :arg1-of (r / report-01) :mod (n / news) :mod (t2 / televised) :domain (t3 / thing :arg1-of (p / paint-02) :mod (t4 / this))) :snt2 (a / and :op1 (f / following :arg0 (c / camera) :arg1 (i / i) :time (m2 / middle :op1 (m3 / middle :part-of (s / street :mod (b / busy) :mod (b2 / busy))))) :op2 (w / wear-01 :arg0 (t5 / thing) :arg1 (a2 / and :op1 (h / hand :part-of (i2 / i)) :op2 (w2 / wildly :mod (g / gesturing))) :time (b3 / before :op1 (s2 / stop-01))) :op3 (s3 / say-01 :arg0 (c2 / camera) :arg1 (l / look-02 :arg0 (s4 / something) :arg1 (l2 / look-02 :arg0 (s5 / something) :arg1 (s6 / something)))) :op4 (l3 / look-01 :mode (i3 / imperative) :arg0 (w3 / we) :arg1 (s7 / something))))
(s / say-01 :arg0 (h / he) :arg1 (s2 / sell-01 :arg0 (c / customer) :arg1 (c2 / cds :poss (c3 / customer)) :arg2 (b / buy-01 :arg0 (c4 / customer) :arg1 (r / record :poss (c5 / customer)) :purpose (b2 / buy-01 :arg0 (c6 / customer) :arg1 (r2 / record :poss (c7 / customer)))) :time (n / now)))
FAILED_TO_PARSE#Number of opening and closing brackets doesn't match.
(p / possible-01 :polarity - :arg1 (o / overshadowed :arg1 (t / thing :arg1-of (a / achieve-01 :arg0 (p2 / person :name (n / name :op1 "ryan" :op2 "murphy") :arg0-of (w / win-01 :arg1 (a2 / and :op1 (1 / 100m) :op2 (t2 / titles :mod (2 / 200m) :mod (22 / 200m))) :location (r / rio))))) :mod (e / even)))
(m / multi-sentence :snt1 (w / win-01 :arg0 (k / kaneto :mod (r / rie) :poss (c / country :name (n / name :op1 "Japan"))) :arg1 (b / breaststroke :mod (2 / 200m) :poss (w2 / woman))) :snt2 (m2 / medal :ord (o / ordinal-entity :value 1) :beneficiary (s / seven-year-old :mod (t / twenty)) :domain (i / it)))
(d / disappoint-01 :arg1 (p / possible-01 :arg1 (w / win-01 :arg0 (w2 / we))))
(s / something :mod (u / unheard))
(r / recommend-01 :arg1 (a / apply-02 :arg1 (r2 / rule :mod (n / new)) :arg2 (p / person :mod (a2 / all) :arg0-of (d / decide-01 :arg1 (p2 / purchase-01 :arg0 (p3 / person) :arg1 (c / card :mod (s / sim)) :arg2 (o / operate-01 :arg1-of (l / local-02)))))) :arg2 (r3 / rule :mod (n2 / new)))
(c / contrast-01 :arg1 (i / include-01 :arg1 (p / person :arg0-of (t / tour-01)) :arg2 (p2 / person :arg0-of (t2 / tour-01)) :mod (o / only :polarity -)) :arg2 (i2 / individual :arg0-of (h / have-03 :arg1 (l / lesson :arg1-of (l2 / long-03) :arg0-of (w / work-01 :location (o2 / or :op1 (c2 / country :name (n / name :op1 "N-A")) :op2 (p3 / person :arg1-of (m / marry-01 :location (t3 / there)))) :arg1-of (l3 / long-03))) :mod (a / also))))
(c / contrast-01 :arg1 (k / know-01 :arg0 (t / they) :arg1 (n / number :mod (t2 / telephone))) :arg2 (p / person :polarity - :arg0-of (o / own-01)))
(m / mention-01 :polarity - :arg1 (p / problematic :location (h / house :mod (o / old) :location (a / and :op1 (h2 / house :mod (o2 / old)) :op2 (f / floors :mod (r / rocking)) :op3 (c / consume-01 :mod (e / energy) :arg1-of (h3 / high-02)) :op4 (e2 / et-cetera)))))
(i / include-91 :arg1 (a / adjust-01 :quant 1 :arg1-of (i2 / include-91 :arg2 (a2 / adjust-01 :arg1 (a3 / apartment :location (a4 / apartment :extent (w / whole))) :degree (v / very)))) :arg2 (a5 / and :op1 (a6 / access-01 :arg1 (b / bathroom :location (m / master)) :arg1-of (d / direct-02)) :op2 (p / pool :arg1-of (s / swim-01) :source (u / usspa))))
(c / cause-01 :arg0 (s / spirit :mod (p / person)) :mod (m / main))
(c / contrast-01 :arg1 (o / operate-01 :arg0 (w / we) :location (p / prague) :mod (o2 / only) :time (c2 / current)) :arg2 (l / like-02 :arg0 (w2 / we) :arg1 (e / expand-01 :arg0 (w3 / we) :arg1 (c3 / cover-01 :arg0 (w4 / we) :arg1 (t / thing :mod (w5 / whole) :quant (w6 / whole))))))
(c / czech :arg1 (w / wo :poss (i / i)) :time (t / tell-01 :arg0 (i2 / i) :arg1 (a / and :op1 (t2 / team :mod (f / football) :mod (c2 / country :name (n / name :op1 "N-A"))) :op2 (s / something :location (a2 / along :op1 (l / line)))) :arg2 (i3 / i)))
(a / and :op2 (c / concern-01 :polarity - :arg0 (t / this) :arg1 (r / religious-group :name (n / name :op1 "N-A")) :mod (o / only)))
(s / say-01 :arg0 (i / i) :arg1 (t / tell-01 :arg0 (i2 / i) :arg1 (t2 / tell-01 :arg0 (g / god) :arg2 (p / person :arg0-of (h / have-rel-role-91 :arg1 (i3 / i) :arg2 (p2 / prophet))) :purpose (h2 / hide-01 :arg0 (p3 / person) :arg1 (w / wives :poss (p4 / person)) :arg2 (e / eye :part-of (o / other))))) :arg2 (p5 / person :arg0-of (h3 / have-rel-role-91 :arg1 (i4 / i) :arg2 (p6 / prophet))))
(c / contrast-01 :arg2 (w / wear-01 :arg0 (i / i) :arg1 (h / headscarf) :condition (o / or :op1 (t / travelled :arg0 (i2 / i) :arg1 (o2 / or :op1 (p / person :mod (c2 / country :name (n / name :op1 "N-A"))) :op2 (p2 / person :mod (s / saudi)))) :op2 (m / mandatory :arg1 (p3 / person)))))
(h / have-concession-91 :arg1 (f / feel-01 :arg0 (i / i) :arg1 (g / great :degree (g2 / great) :location (l / location :name (n / name :op1 "prague")))) :arg2 (t / think-01 :arg0 (i2 / i) :arg1 (a / about :op1 (a2 / adolescence))))
(l / like-01 :arg0 (n / nobody) :arg1 (f / find-01 :arg0 (n2 / nobody) :arg1 (n3 / note :topic (a / advise :arg0 (t / they) :arg1 (p / parcel :poss (t2 / they)) :location (b / branch :mod (o / office) :mod (p2 / post))))) :time (a2 / after :op1 (m / multiple :op1 19)))
(c / cause-01 :arg0 (i / important :domain (i2 / it)) :arg1 (a / and :op1 (n / need-01 :arg0 (y / you) :time (b / before :op1 (n2 / now) :quant (t / temporal-quantity :quant (N / N-A) :unit (h / hour)))) :op2 (w / wait-01 :arg1 (y2 / you) :location (h2 / home))))
(a / and :op1 (w / want-01 :arg0 (w2 / we) :arg1 (s / serve-01 :arg0 (w3 / we)) :manner (f / fast :degree (m / more))) :op2 (a2 / and :op1 (f2 / fast :degree (m2 / more)) :op2 (s2 / service :mod (f3 / fast :degree (m3 / more)) :arg0-of (a3 / annoy-01 :polarity - :arg1 (p / person)))) :op3 (s3 / send-01 :arg0 (w4 / we) :arg1 (i / instruct-01) :arg2 (c / compete-01 :purpose (t / try-01 :arg0 (w5 / we) :arg1-of (h / hard-02 :degree (m4 / more))))))
(a / and :op1 (h / have-03 :arg0 (w / we) :arg1 (s / size :quant 3)) :op2 (r / resemble-01 :arg1 (s2 / size :poss (e / egg)) :arg2 (s3 / size :consist-of (e2 / egg))) :op3 (e3 / equal-01 :arg1 (s4 / size :poss (b / beer)) :arg2 (l / large)))
(c / cause-01 :arg0 (h / have-03 :arg0 (p / person :mod (c2 / country :name (n / name :op1 "N-A"))) :arg1 (o / option) :purpose (t / take-01 :arg0 (p2 / person) :arg1 (p3 / picture-01 :arg1 (p4 / parcel :path (a / app)))) :mod (a2 / also)) :arg1 (p5 / possible-01 :arg1 (s / see-01 :arg0 (p6 / person :mod (c3 / country :name (n2 / name :op1 "N-A"))) :arg1 (t2 / thing :arg2-of (h2 / hand)))))
(t / take-10 :arg0 (l / launch-01 :arg1 (s / service)) :arg1 (a / and :op1 (i / it) :op2 (a2 / amr-unknown)))
(a / and :op1 (k / know-01 :arg0 (w / we) :arg1 (b / be-located-at-91 :arg1 (w2 / we) :arg2 (t / this) :duration (h / haul :arg1-of (l / long-03)))) :op2 (t2 / try-01 :polarity - :arg0 (w3 / we) :arg1 (r / rush-01 :arg0 (w4 / we) :arg1 (t3 / thing)) :arg1-of (c / cause-01 :arg0 (w5 / want-01 :arg0 (w6 / we) :arg1 (c2 / create-01 :arg0 (w7 / we) :arg1 (p / product :mod (g / good :degree (r2 / really))) :beneficiary (p2 / people))))))
(a / and :op2 (c / change-01 :arg1 (l / look-01 :arg1 (b / battlefield))))
(c / contrast-01 :arg1 (l / like-02 :arg0 (i / i) :arg1 (t / touch-01 :arg0 (i2 / i) :arg1 (s / she)) :frequency (s2 / sometimes)) :arg2 (l2 / let-01 :polarity - :arg0 (s3 / she) :arg1 (i3 / i)))
(c / contrast-01 :arg1 (p / possible-01 :arg1 (m / make-05 :arg0 (y / you) :arg1 (i / it) :location (h / home))) :arg2 (a / and :op1 (h2 / have-03 :arg0 (g / ginger :name (n / name :op1 (g2 / genuine) :op2 (g3 / gari)) :mod (g4 / genuine)) :arg1 (a2 / and :op1 (s / spicy :mod (u / unique)) :op2 (t / taste :mod (d / delicious))) :arg1-of (c2 / cause-01 :arg0 (r / recipes :mod (s2 / secret) :arg1-of (u2 / use-01 :arg2 (m2 / make-01 :arg1 (i2 / it) :source (a3 / and :op1 (v / vinegar :mod (t2 / type :mod (v2 / various))) :op2 (g5 / ginger)))))))))
(i / include-91 :arg1 (a / and :op1 (s / species :mod (i2 / important :degree (m / most)) :arg1-of (m2 / mean-01 :arg2 (a2 / and :op1 (c / cut-01 :arg1 (s2 / species)) :op2 (p / press-01) :op3 (d / dry-02))))) :arg2 (s3 / species :mod (i3 / important :degree (m3 / most)) :arg1-of (i4 / include-91 :arg2 (s4 / species :mod (i5 / important :degree (m4 / most)) :arg1-of (m5 / mean-01 :arg2 (a3 / and :op1 (p2 / press-01) :op2 (p3 / press-01) :op3 (d2 / dry-02))) :arg0-of (p4 / prepare-02 :arg2 (p5 / prepare-01 :arg0 (s5 / species) :arg1 (s6 / sushi)))))) :location (c2 / country :name (n / name :op1 "N-A")))
FAILED_TO_PARSE#Number of opening and closing brackets doesn't match.
(l / lose-02 :arg0 (t / they) :arg1 (g / game :mod (e / every)) :location (s / sevens :mod (a / adelaide)) :time (b / before :op1 (n / now) :quant (m / multiple :op1 (t2 / temporal-quantity :quant (N / N-A) :unit (y / year)))))
(s / start-01 :arg0 (i / i) :arg1 (m / magnificently :arg0 (i2 / i) :arg1 (t / tackles :mod (c / country :name (n / name :op1 "N-A"))) :purpose (f / fun)))
(r / resemble-01 :arg1 (r2 / resemble-01 :arg1 (i / it) :arg2 (r3 / run-02 :arg0 (a / and :op1 (p / person :arg0-of (h / have-org-role-91 :arg2 (c / captain))) :op2 (p2 / person :arg0-of (h2 / have-org-role-91 :arg1 (c2 / company :name (n / name :op1 "N-A")))) :op3 (p3 / person :arg0-of (h3 / have-org-role-91 :arg1 (w / world) :arg3 (s / series))) :op4 (p4 / person :arg0-of (h4 / have-org-role-91 :arg1 (w2 / world) :arg3 (s2 / series))) :op5 (p5 / person :arg0-of (h5 / have-org-role-91 :arg1 (w3 / world) :arg3 (s3 / series))) :op6 (p6 / person :arg0-of (h6 / have-org-role-91 :arg1 (w4 / world) :arg3 (s4 / series))) :op6 (p7 / person :arg0-of (h7 / have-org-role-91 :arg1 (w5 / world) :arg3 (s5 / series))) :op6 (p8 / person :arg0-of (h8 / have-org-role-91 :arg1 (w6 / world) :arg3 (s6 / series))) :op6 (p9 / person :arg0-of (h9 / have-org-role-91 :arg1 (w7 / world) :arg3 (s7 / series))) :op6 (p10 / person :arg0-of (h10 / have-org-role-91 :arg1 (w8 / world) :arg3 (s8 / series))) :op7 (p11 / person :arg0-of (h11 / have-org-role-91 :arg1 (w9 / world) :arg3 (s9 / series)))))))
(t / think-01 :arg0 (p / person :arg0-of (s / spend-02 :arg1 (t2 / thing :arg1-of (t3 / think-01 :arg0 (p2 / person)) :ord (o / ordinal-entity :value 1)))) :arg1 (s2 / spend-02 :arg0 (p3 / person) :arg1 (m / more :mod (l / little) :compared-to (a / attempt-01 :arg0 (p4 / person) :arg1 (p5 / process-02 :arg0 (p6 / person) :arg1 (p7 / process-02 :arg0 (p8 / person) :arg1 (p9 / process-02 :arg0 (p10 / person) :arg1 (p11 / process-02 :arg0 (p12 / person) :arg1 (p13 / process-02 :arg0 (p14 / person))))))))) :prep-in (i / immediate :poss (w / win-01)))
(m / make-01 :arg0 (y / you) :arg1 (r / report-01 :quant (n / number) :arg1-of (c / cause-01 :arg0 (u / uncover-01 :arg0 (y2 / you) :arg1 (p / practice-01 :arg0 (p2 / person :arg1-of (b / be-located-at-91 :arg2 (g / group) :time (n2 / now))) :mod (f / fraudulent))))))
(m / multi-sentence :snt1 (a / and :op1 (s / study-01 :arg0 (h / he) :location (a2 / academy :name (n / name :op1 (m2 / miroslav) :op2 (a3 / academy) :op3 (o / ond?í?ek) :op4 (o2 / ond?í?ek) :op5 (o3 / ond?í?ek) :op6 (o4 / ond?í?ek) :op7 (o5 / ond?í?ek)))) :op2 (s2 / subsequently :arg0 (h2 / he) :time (s3 / subsequent))) :snt2 (u / university :location (z / zlín)))
(f / follow-01 :arg1 (p / police) :arg2 (t / they) :duration (s / several :op1 (t2 / temporal-quantity :quant (N / N-A) :unit (m / month))))
(t / try-01 :mode (i / interrogative) :arg0 (y / you) :arg1 (c / confront-01 :arg0 (y2 / you) :arg1 (t2 / they) :arg1-of (d / direct-02) :location (t3 / taxis :poss (t4 / they))) :mod (s / still))
(b / be-temporally-at-91 :arg1 (i / it) :arg2 (s / several :op1 (t / temporal-quantity :quant (N / N-A) :unit (m / month))) :time (s2 / since :op1 (r / release-01 :arg0 (y / you) :arg1 (e / episodes :mod (f / final) :poss (s3 / show-04 :arg1 (y2 / you))))))
(m / multi-sentence :snt1 (a / and :op1 (e / easy-05 :polarity - :arg1 (i / it)) :op2 (f / fast :polarity - :domain (i2 / it))) :snt2 (s / say-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (o / old?ichov :mod (o2 / old?ichov)) :arg2 (t / trostová))) :arg1 (i3 / it)))
(a / and :op1 (b / be-temporally-at-91 :arg1 (d / date-entity :decade (N / N-A)) :arg2 (h / high :mod (n / new)) :time (n2 / now)) :op2 (g / gain-02 :arg0 (i / it) :arg1 (p / percentage-entity :value (N2 / N-A) :mod (a2 / another)) :time (s / since :op1 (s2 / start-01 :arg1 (y / year)))) :li 500)
(s / signalled :arg1 (s2 / signalled :arg0 (h / he) :arg1 (d / duty :poss (h2 / he)) :arg2 (d2 / duty :poss (h3 / he)) :arg1-of (r / request-01 :arg0 (h4 / he))))
(c / contrast-01 :arg1 (l / lose-02 :arg1 (k / kvitová :arg1-of (b / beat-03 :arg0 (p / person :mod (p2 / puerto) :arg0-of (s / surprise-01 :arg1 (p3 / puerto))))) :arg2 (r / rate-entity-91 :arg1 4 :arg2 4 :arg3 4) :time (f / first)) :arg2 (s2 / surprise-01 :arg0 (s3 / surprised :mod (p4 / puerto)) :arg1 (r2 / rate-entity-91 :arg1 4 :arg2 4 :arg3 4)))
(c / contrast-01 :arg1 (g / go-01 :arg1 (s / society :mod (g2 / german)) :arg4 (p / period :mod (p2 / profound))) :arg2 (d / do-02 :polarity - :arg0 (s2 / society :mod (c2 / country :name (n / name :op1 "N-A")))))
(c / carry-out-03 :arg0 (a / and :op1 (p / person :mod (c2 / country :name (n / name :op1 "N-A"))) :op2 (p2 / person :mod (c3 / country :name (n2 / name :op1 "N-A")))) :arg1 (a2 / atrocity :topic (o / or :op1 (o2 / occupy-01) :op2 (a3 / abandon-01))))
(b / bring-01 :arg0 (i / it) :arg1 (a / and :op1 (r / reflection :mod (r2 / real)) :op2 (m / medicine)) :arg2 (s / society))
(b / benefit-01 :arg0 (i / increase-01 :arg1 (t / tension :mod (o / over :op1 (p / peninsula :name (n / name :op1 "Crimea"))))))
(r / remain-01 :arg1 (t / thing :arg2-of (p / price-01)) :arg3 (l / level :arg1-of (s / same-01)) :time (m / month :mod (p2 / previous)) :location (l2 / level :arg1-of (s2 / same-01)) :time (m2 / month :mod (p3 / previous)) :location (a / and :op1 (t2 / talk-02 :arg2 (a2 / and :op1 (t3 / tobacco) :op2 (t4 / tobacco) :op3 (w / water) :op4 (e / electricity) :op5 (e2 / electricity) :op6 (f / fuel :mod (o / other)) :op6 (e3 / education) :op7 (e4 / education)))))
(b / base-02 :arg1 (i / inspect-01 :arg1 (s / store :name (n / name :op1 (p / prague)))) :arg2 (a / and :op1 (s2 / store :name (n2 / name :op1 (a2 / albert))) :op2 (s3 / store :name (n3 / name :op1 (n4 / na))) :op3 (m / m?stku :mod (n5 / na))) :arg1-of (b2 / base-02 :arg2 (c / complain-01 :arg1 (h / health) :source (p2 / person :arg0-of (c2 / consume-01)))) :time (a3 / after :op1 (e / eat-01 :arg0 (p3 / person :arg0-of (c3 / consume-01) :mod (w / wild)) :arg1 (p4 / piece :quant 100 :mod (s4 / salmon)))))
(a / and :op1 (w / withdraw-01 :arg0 (w2 / we) :arg1 (b / batch :source (s / sell-01)) :time (i / immediate)) :op2 (w3 / withdraw-01 :arg0 (w4 / we) :arg1 (t / thing :arg1-of (p / produce-01) :mod (o / other) :quant (a2 / all)) :arg2 (m / matter :mod (p2 / precaution)) :mod (a3 / also)))
(t / turn-down-05 :arg0 (p / paradise :mod (c / caliphate)) :arg1 (h / hell :location (e / earth)) :arg2 (g / girl :mod (c2 / country :name (n / name :op1 "N-A")) :arg1-of (e2 / escape-01 :polarity -)) :arg1-of (q / quick-02))
(o / order-01 :arg0 (t / they) :arg1 (a / and :op1 (p / person :arg0-of (h / have-rel-role-91 :arg1 (t2 / they) :arg2 (l / lawyer))) :op2 (p2 / person :arg0-of (h2 / have-rel-role-91 :arg1 (g / girl :arg1-of (d / die-01)) :arg2 (l2 / lawyer))) :op3 (p3 / person :arg0-of (h3 / have-rel-role-91 :arg1 (g2 / girl :arg1-of (d2 / die-01)) :arg2 (l3 / lawyer))) :op4 (p4 / person :arg0-of (h4 / have-rel-role-91 :arg1 (g3 / girl :arg1-of (d3 / die-01)) :arg2 (l4 / lawyer)))))
(m / multi-sentence :snt1 (t / terrible :domain (c / condition :beneficiary (p / person :arg1-of (i / imprison-01)))) :snt2 (a / and :op1 (a2 / attempt-01 :arg0 (e / escape-01 :quant (m2 / many))) :op2 (a3 / attempt-01 :arg0 (s / speak-01))))
(c / company :polarity - :mod (o / only) :arg0-of (c2 / cross-02 :arg1 (t / tripwires :mod (c3 / culture) :mod (t2 / this))) :domain (s / snapchat))
(f / find-01 :arg0 (r / report :mod (i / interim) :arg1-of (e / establish-01 :arg0 (f2 / force :mod (t / task) :arg1-of (e2 / establish-01 :arg0 (a / and :op1 (c / committee :mod (s / service :mod (a2 / arm-01)) :arg1-of (e3 / establish-01 :arg0 (p / political-party :name (n / name :op1 "Republican")))) :op2 (c2 / committee :arg0-of (h / have-org-role-91 :arg1 (i2 / intelligence) :arg3 (c3 / committee :mod (i3 / intelligence)))) :op3 (c4 / committee :arg0-of (h2 / have-org-role-91 :arg1 (i4 / intelligence) :arg3 (l / lead-02 :arg0 (p2 / political-party)))) :op4 (p3 / person :arg0-of (h3 / have-org-role-91 :arg1 (i5 / intelligence) :arg3 (d / defend-01))) :op5 (p4 / person :arg0-of (h4 / have-org-role-91 :arg1 (i6 / intelligence) :arg3 (d2 / defend-01))) :op6 (p5 / person :arg0-of (h5 / have-org-role-91 :arg1 (i7 / intelligence) :arg3 (d3 / defend-01))) :op6 (p6 / person :arg0-of (h6 / have-org-role-91 :arg1 (i8 / intelligence) :arg3 (d4 / defend-01))) :op6 (p7 / person :arg0-of (h7 / have-org-role-91 :arg1 (i9 / intelligence) :arg3 (d5 / defend-01))) :op6 (p8 / person :arg0-of (h8 / have-org-role-91 :arg1 (i10 / intelligence) :arg3 (d6 / defend-01))) :op6 (p9 / person :arg0-of (h9 / have-org-role-91 :arg1 (i11 / intelligence) :arg3 (d7 / defend-01))) :op6 (p10 / person :arg0-of (h10 / have-org-role-91 :arg1 (i12 / intelligence) :arg3 (a3 / analyze-01 :arg0 (p11 / person) :arg1 (i13 / intelligence)))) :op6 (p12 / person :arg0-of (h11 / have-org-role-91 :arg1 (i14 / intelligence) :arg3 (a4 / analyze-01 :arg0 (p13 / person) :arg1 (i15 / intelligence)))) :op6 (p14 / person :arg0-of (h12 / have-org-role-91 :arg1 (i16 / intelligence) :arg3 (a5 / analyze-01 :arg0 (p15 / person) :arg1 (i17 / intelligence)))) :op6 (p16 / person :arg0-of (h13 / have-org-role-91 :arg1 (i18 / intelligence) :arg3 (a6 / analyze-01 :arg0 (p17 / person) :arg1 (i19 / intelligence)))) :op6 (p18 / person :arg0-of (h14 / have-org-role-91 :arg1 (i20 / intelligence) :arg3 (a7 / analyze-01 :arg0 (p19 / person) :arg1 (i21 / intelligence)))) :op6 (p20 / person :arg0-of (h15 / have-org-role-91 :arg1 (i22 / intelligence) :arg3 (a8 / analyze-01 :arg0 (p21 / person) :arg1 (i23 / intelligence)))) :op6 (p22 / person :arg0-of (h16 / have-org-role-91 :arg1 (i24 / intelligence) :arg3 (a9 / analyze-01 :arg0 (p23 / person) :arg1 (i25 / intelligence)))) :op6 (p24 / person :arg0-of (h17 / have-org-role-91 :arg1 (i26 / intelligence) :arg3 (a10 / analyze-01 :arg0 (p25 / person) :arg1 (i27 / intelligence)))) :op6 (p26 / person :arg0-of (h18 / have-org-role-91 :arg1 (i28 / intelligence) :arg3 (a11 / analyze-01))) :op6 (p27 / person :arg0-of (h19 / have-org-role-91 :arg1 (i29 / intelligence) :arg3 (a12 / analyze-01))) :op6 (p28 / person :arg0-of (h20 / have-org-role-91 :arg1 (i30 / intelligence) :arg3 (a13 / analyze-01))) :op7 (p29 / person :arg0-of (h21 / have-org-role-91 :arg1 (i31 / intelligence :mod (c5 / country))))))))))
(f / fail-01 :arg1 (p / person :arg0-of (l / lead-02)) :arg2 (r / reach-01 :arg0 (p2 / person) :arg1 (t / top :part-of (o / organization) :degree (v / very))))
(r / release-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (c / committee :mod (i / intelligence :mod (h2 / house))) :arg2 (m / member))) :arg1 (t / thing :arg1-of (i2 / include-91 :arg2 (t2 / thing :arg1-of (c2 / conclude-01 :arg0 (f / force :mod (t3 / task) :mod (t4 / task))) :quant (s / some)))) :arg2 (p2 / person :arg0-of (h3 / have-org-role-91 :arg1 (c3 / committee :mod (i3 / intelligence :mod (h4 / house))) :arg2 (m2 / member))))
(i / illuminate :polarity - :arg0 (f / flame :name (n / name :op1 (o / olympic))) :arg1 (e / event :mod (e2 / each)))
(c / contrast-01 :arg2 (c2 / charm :arg1 (t / trampolines :mod (u / underdog)) :arg1-of (c3 / cause-01 :arg0 (s / sound-01 :arg1 (i / it) :arg2 (e / ear :mod (u2 / unenlightened)) :beneficiary (c4 / college :mod (c5 / clowns)) :compared-to (c6 / college :mod (c7 / clowns))))))
(r / resemble-01 :arg1 (i / it) :arg2 (c / close-10 :arg1 (c2 / compete-01 :mod (o / olympic)) :arg2 (z / zen)))
(a / and :op1 (e / exile-01 :quant (m / many)) :op2 (j / jail-01 :arg1 (m2 / many)) :op3 (k / kill-01 :arg1 (m3 / many)) :op4 (d / drive-02 :arg1 (m4 / many) :arg2 (r / reach-01 :arg1 (d2 / desert) :mod (f / far))))
(c / complain-01 :arg0 (m / many) :arg1 (e / everything :source (u / use-01 :arg1 (l / land) :arg2 (c2 / coalition :arg0-of (g / govern-01 :arg1 (c3 / country :name (n / name :op1 "N-A")))) :topic (p / power))))
(a / and :op1 (r / rise-01 :arg1 (t / tension) :location (a2 / along :op1 (b / border-01 :arg2 (l / location :name (n / name :op1 "eritrea"))))) :op2 (b2 / battle-01 :location (a3 / along :op1 (b3 / border :mod (t2 / that)))) :op3 (c / claim-01 :arg0 (l2 / line :arg2-of (d / dispute-01)) :arg1 (l3 / live-01 :arg0 (l4 / line :arg2-of (d2 / dispute-01)) :location (j / june))) :time (t3 / time :arg1-of (s / same-01)))
(c / cause-01 :arg0 (l / lose-02 :arg1 (z / zenawi :mod (m / meles))) :arg1 (r / reason :ord (o / ordinal-entity :value 3) :location (b / behind :op1 (u / unrest))))
(a / and :op2 (t / take-01 :arg0 (i / it) :arg1 (s / shape :mod (e / ethnic) :mod (d / dangerous))))
(p / phone-number-entity :value (N / N-A))
(a / and :op1 (l / loaf) :op2 (l2 / liver) :op3 (l3 / loaf) :op4 (e / et-cetera))
(s / say-01 :arg1 (a / and :op1 (p / popular-02 :polarity - :arg1 (i / it) :arg2 (t / table :mod (d / dinner))) :op2 (s2 / say-01 :arg0 (p2 / person :arg0-of (h / have-org-role-91 :arg1 (m / mr.) :arg2 (c / coe))) :arg1 (i2 / it))) :arg2 (p3 / person :name (n / name :op1 "N-A")))
(r / rule-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (d / district :mod (d2 / district)) :arg3 (j / judge-01))) :arg2 (r2 / receive-01 :arg0 (p2 / person) :arg1 (f / fee :mod (a / attorney)) :arg1-of (c / cause-01 :arg0 (r3 / relate-01 :arg1 (p3 / patent-01 :arg1 (p4 / patent-01 :arg1 (p5 / patent-01 :arg1 (p6 / patent-01 :arg1 (p7 / patent-01 :arg1 (a2 / and :op1 (m / merck) :op2 (m2 / merck))) :mod (c2 / c)))))))))
(a / and :op1 (m / move-01 :arg0 (y / you) :arg2 (p / person :arg0-of (l / lead-02 :arg1 (y2 / you)))) :op2 (s / say-01 :arg0 (p2 / person :arg0-of (l2 / lead-02 :arg1 (c / campaign-01 :arg0 (p3 / person)))) :arg1 (l3 / link-01 :arg1 (p4 / person) :arg2 (r / returns :mod (d / democracy)))))
(r / report-01 :mod (a / additional) :mod (k / kevin))
(u / use-01 :arg0 (c / conservationists :location (t / tanzania)) :arg1 (w / way :mod (u2 / unorthodox) :instrument-of (k / keep-02 :arg1 (e / elephants :arg1 (e2 / elephants :source (i / index :mod (h / human)))))) :manner (t2 / throw-01 :arg1 (e3 / elephants) :arg2 (p / powder :arg1-of (f / fill-01 :arg2 (c2 / chilli))) :location (c3 / chilli)))
(t / try-01 :arg0 (p / person :mod (c / country :name (n / name :op1 "Israel"))) :arg1 (f / find-01 :arg0 (p2 / person) :arg1 (t2 / thing :arg2-of (l / list-01 :arg1 (m / morality :arg1-of (p3 / provide-01 :arg0 (h / hotel)))))) :time (s / stay-01 :arg1 (p4 / person) :time (r / recent)))
(s / say-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg2 (a / ambassador))) :arg1 (s2 / surge :prep-in (i / interest-01 :arg1 (f / firm :mod (c / country :name (n / name :op1 "N-A"))) :arg2 (d / do-02 :arg0 (f2 / firm) :arg1 (b / business) :location (c2 / country)))) :time (s3 / since :op1 (l / lifted :arg1 (t / thing :arg2-of (s4 / sanction-02 :arg1 (c3 / country :name (n2 / name :op1 "N-A")) :mod (i2 / international))) :mod (i3 / international))))
(c / contrast-01 :arg1 (n / narrowly :arg1 (h / hindes) :time (a / after :op1 (l / lap :arg0 (h2 / he)))) :arg2 (p / push-01 :arg0 (k / kenny) :arg1 (t / team) :arg2 (a2 / and :op1 (t2 / team :location (f / front)) :op2 (s / skinner :location (f2 / front)))))
(a / and :op1 (b / bradley :arg1 (b2 / bradley :name (n / name :op1 (e / ed) :op2 (b3 / bradley) :op3 (c / clancy) :op4 (d / doull) :op5 (f / fastest) :op6 (f2 / fastest) :op7 (f3 / fastest)))) :op2 (p / pursue-01 :arg0 (t / team :mod (f4 / four-kilometres)) :arg1 (f5 / fastest :arg1-of (p2 / pursue-01 :arg0 (t2 / team)))))
(f / follow-01 :arg1 (m / move-02) :arg2 (s / speculate-01 :arg1 (f2 / future :poss (p / plant)) :duration (s2 / several :op1 (t / temporal-quantity :quant (N / N-A) :unit (y / year))) :time (i / initial) :arg1-of (c / cause-01 :arg0 (t2 / thing :arg2-of (p2 / price-01 :arg1 (t3 / thing :source (p3 / plant)))) :time (r / recent))))
(s / say-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg2 (s2 / spokesperson))) :arg1 (c / cause-01 :arg0 (e / effective-04 :polarity - :arg0 (a / advertise-01) :arg1 (a2 / and :op1 (n / network :mod (s3 / social)) :op2 (p2 / person :arg0-of (h2 / have-org-role-91 :arg2 (s4 / spokesperson))) :op3 (p3 / person :arg0-of (h3 / have-org-role-91 :arg2 (s5 / spokesperson)))) :arg1-of (m / mobile-02)) :arg1 (b / be-temporally-at-91 :arg1 (a3 / advertise-01) :arg2 (a4 / after :op1 (a5 / advertise-01)))))
(f / find-02 :arg0 (c / court) :arg1 (a / and :op1 (d / drive-01 :arg0 (p / person :arg0-of (r / respond-01 :arg1 (c2 / call-02 :mod (e / emergency))) :arg0-of (r2 / respond-01 :arg1 (t / thing :arg1-of (c3 / call-01 :arg2 (c4 / call-02 :mod (e2 / emergency)))))) :manner (m / manner)) :op2 (' / '' :arg1 (p2 / presence :poss (m2 / man) :topic (r3 / road)) :arg1-of (c5 / complete-02 :polarity -) :arg1-of (s / say-01 :arg0 (p3 / person :arg0-of (h / have-org-role-91 :arg3 (j / judge-01)))))))
(s / say-01 :arg0 (p / person :arg0-of (t / tour-01)) :arg1 (l / lucrative :degree (v / very) :domain (c / clientele :mod (l2 / lgbt)) :arg1-of (c2 / cause-01 :arg0 (e / enjoy-01 :arg0 (p2 / person) :arg1 (a / and :op1 (t2 / travel-01 :mod (l3 / luxury)) :op2 (s2 / standard :mod (t3 / travel-01 :arg0 (p3 / person)))))) :arg1-of (c3 / cause-01 :arg0 (e2 / enjoy-01 :arg0 (p4 / person) :arg1 (a2 / and :op1 (t4 / travel-01 :mod (l4 / luxury)) :op2 (s3 / standard :mod (t5 / travel-01 :arg0 (p5 / person)))))) :arg1-of (s4 / say-01 :arg0 (a3 / anyone :mod (e3 / else)))))
(p / participate-01 :arg0 (p2 / person :arg0-of (h / hold-01 :arg1 (a / amusement-park :name (n / name :op1 "N-A") :mod (o / one-minute)) :time (y / year :mod (t / this)))) :arg1 (a2 / and :op1 (s / shoot-02 :arg1 (p3 / person :arg0-of (b / betray-01))) :op2 (k / kill-01 :arg0 (p4 / person) :arg1 (p5 / person :quant 49 :mod (g / gay))) :op3 (k2 / kill-01 :arg0 (p6 / person) :arg1 (m / man :quant (m2 / most) :mod (g2 / gay))) :time (y2 / year :mod (t2 / this)) :location (p7 / parade-02) :time (b2 / before :op1 (n2 / now) :duration (f / few :op1 (t3 / temporal-quantity :quant (N / N-A) :unit (y3 / year))))))
(a / and :op1 (h / have-03 :arg0 (g / girl :mod (c / country :name (n / name :op1 "N-A")) :mod (c2 / country :name (n2 / name :op1 "N-A"))) :arg1 (f / friend :arg2-of (i / identical-01))) :op2 (c3 / content-01 :arg1 (g2 / girl)))
(m / multi-sentence :snt2 (c / cause-01 :arg1 (k / know-01 :arg0 (w / we) :time (t / today) :arg1-of (k2 / know-01 :arg0 (w2 / we) :time (t2 / today)) :domain (a / all))) :snt2 (c2 / cause-01 :arg1 (l / leave-17 :arg1 (d / dioxide :quant (a2 / all) :arg1-of (d2 / dioxide :arg2 (e / effect :mod (g / gas) :mod (m2 / mass-quantity :quant (N / N-A) :unit (g2 / gram))))))))
(a / and :op1 (r / rebull :arg0 (a2 / and :op1 (p / person :arg0-of (h / have-org-role-91 :arg2 (h2 / head-of-state))) :op2 (p2 / person :arg0-of (h3 / have-org-role-91 :arg1 (s / she) :arg3 (d / detail-01)))) :arg1 (a3 / analyze-01 :arg0 (p3 / person) :arg1 (r2 / rate :name (n / name :op1 (t / the) :op2 (t2 / the))) :time (l / late :degree (m / most))) :location (p4 / paper :quant 3 :mod (n2 / new))) :op2 (p5 / publish-01 :arg1 (a4 / and) :location (j / journal :mod (a5 / astronomical)) :time (s2 / soon)))
(h / have-concession-91 :arg1 (d / doctor :domain (d2 / doctor) :arg1-of (o / originate-01 :arg2 (l / law)) :arg1-of (o2 / originate-01 :arg2 (l2 / law)) :arg1-of (b / base-02 :arg2 (l3 / law)) :arg1-of (b2 / base-02 :arg2 (c / complete-01 :arg1 (s / study-01 :arg0 (p / person :arg0-of (s2 / specialize-01 :arg1 (q / qualify-02 :arg1 (p2 / person) :arg2 (p3 / person :arg0-of (s3 / specialize-01)))) :location (f / field :arg1-of (r / relevant-01))))))))
(m / multi-sentence :snt1 (n / need-01 :polarity - :arg0 (w / we) :arg1 (o / or :op1 (o2 / or :op1 (m2 / moral-02) :op2 (s / sympathize-01)) :op2 (s2 / sympathize-01 :arg0 (w2 / we)) :mod (e / even))) :snt2 (a / and :op1 (n2 / need-01 :arg0 (w3 / we) :arg1 (z / zone :mod (n3 / no-fly) :location (o3 / over :op1 (e2 / east))) :purpose (s3 / stop-01 :arg0 (w4 / we) :arg1 (a2 / attack-01))) :op2 (n4 / need-01 :arg0 (w5 / we) :arg1 (a3 / action :mod (i / international)) :purpose (p / prevent-01 :arg0 (w6 / we) :arg1 (a4 / aleppo :mod (a5 / again)))) :op3 (n5 / need-01 :arg0 (w7 / we) :arg1 (a6 / action :mod (i2 / international)) :purpose (p2 / prevent-01 :arg0 (w8 / we) :arg1 (a7 / aleppo :arg1 (d / doctor) :mod (a8 / again))))))
(c / contrast-01 :arg1 (a / and :op1 (s / stand-01 :arg1 (w / world) :arg2 (t / thing :manner-of (c2 / complicate-01 :arg1 (w2 / world)))) :op2 (r / remarked :arg1 (w3 / world) :manner (a2 / amr-unknown))) :arg2 (d / do-02 :arg0 (w4 / world) :arg1 (l / little) :purpose (p / protect-01 :arg0 (w5 / world) :arg1 (w6 / we))))
(a / and :op1 (i / it :mod (e / either)) :op2 (g / germany :arg1 (i2 / it)) :op3 (w / want-01 :arg0 (i3 / i) :arg1 (i4 / it)) :op4 (w2 / want-01 :arg0 (i5 / i) :arg1 (i6 / it)) :op5 (w3 / want-01 :arg0 (i7 / i) :arg1 (i8 / it)))
(p / possible-01 :arg1 (b / bring-01 :arg0 (t / they) :arg1 (t2 / they) :arg2 (t3 / talk-01 :arg0 (t4 / they) :arg1 (t5 / thing :arg1-of (e / experience-01 :arg0 (t6 / they) :arg1-of (e2 / experience-01 :arg0 (t7 / they) :arg1-of (e3 / experience-01 :arg0 (t8 / they) :arg1-of (c / cause-01 :arg0 (a / ashamed :degree (t9 / too) :domain (t10 / they))))))))))
(h / hotting :arg1 (s / situation :prep-in (t / term :mod (m / market :arg0-of (h2 / house-01)))) :mod (a / also) :concession (t2 / that))
(b / believe-01 :arg1 (u / use-01 :arg0 (s / suspect-01) :arg1 (v / vehicle :quant (s2 / several) :arg2-of (i / include-01 :arg1 (a / and :op1 (b2 / bmw :arg1-of (b3 / black-05)) :op2 (b4 / bmw :mod (w / white)) :op3 (c / cadillac :mod (w2 / white)))))))
(i / include-91 :arg1 (a / and :op1 (p / person :arg0-of (h / have-rel-role-91 :arg1 (h2 / he) :arg2 (w / wife))) :op2 (p2 / person :arg0-of (h3 / have-rel-role-91 :arg1 (h4 / he) :arg2 (w2 / wife))) :op3 (p3 / person :arg0-of (h5 / have-rel-role-91 :arg1 (h6 / he) :arg2 (w3 / wife))) :op4 (p4 / person :arg0-of (h7 / have-rel-role-91 :arg1 (h8 / he) :arg2 (c / child))) :op5 (p5 / person :arg0-of (h9 / have-rel-role-91 :arg1 (h10 / he) :arg2 (c2 / child)))) :arg2 (p6 / person :arg0-of (h11 / have-rel-role-91 :arg1 (h12 / he) :arg2 (r / rescued))) :time (e / early :degree (m / more) :arg1-of (n / near-02 :arg2 (g / gloster))))
(s / say-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg2 (h2 / hansford :mod (' / '')))) :arg1 (a / and :op1 (w / wake-up-02 :arg1 (w2 / we) :direction (u / up)) :op2 (k / keep-02 :arg1 (c / come-01 :arg1 (w3 / water)))))
(s / say-01 :arg0 (h / he) :arg1 (a / allow-01 :arg1 (r / return-01 :arg1 (t / they) :arg4 (h2 / home) :time (s2 / start-01 :arg1 (r2 / recede :arg1 (w / water))))))
(c / cause-01 :arg0 (l / limit-01 :arg1 (t / thing :arg1-of (d / draft-01))) :arg1 (r / recommend-01 :polarity - :arg1 (t2 / treat-01 :arg1 (t3 / thing :arg1-of (d2 / draft-01)) :arg2 (i / it) :time (b / beyond :op1 (p / period :mod (t4 / that)))) :arg1-of (c2 / cause-01 :arg0 (a / and :op1 (i2 / information :topic (a2 / and :op1 (e / efficacy) :op2 (s / safe-01)) :mod (p2 / particular)) :op2 (s2 / safe-01 :arg1 (t5 / ticagrelor))))))
(m / multi-sentence :snt1 (i / idiot) :snt2 (r / realize-01 :arg0 (i2 / idiot) :arg1 (b / be-located-at-91 :arg1 (i3 / idiot) :arg2 (a / air) :mod (s / still))))
(e / email-01 :arg1 (p / person :arg0-of (t / tour-01)) :arg2 (j / jet :name (n / name :op1 (s / skims) :op2 (b / beach) :op3 (b2 / beach) :op4 (b3 / beach) :op5 (b4 / beach) :op6 (b5 / beach) :op7 (b6 / beach))))
(s / say-01 :arg0 (h / he) :arg1 (t / tell-01 :arg0 (h2 / he) :arg1 (t2 / truth) :mod (j / just)))
(w / win-01 :arg0 (a / and :op1 (a2 / athletes :mod (t / track) :poss (c / country)) :op2 (a3 / athletes :mod (f / field)) :poss (c2 / country)) :arg1 (d / drone :mod (w2 / world :quant 2015) :location (w3 / world :quant 2015 :location (w4 / world))))
(p / partnering :arg0 (m / magazine :name (n / name :op1 "N-A") :name (n2 / name :op1 (p2 / photographer) :op2 (b / bellemere) :op3 (b2 / bellemere))) :arg1 (l / launch-01 :arg1 (c / calendar :name (n3 / name :op1 (1 / 1970s) :op2 (p3 / pirelli-inspired))) :purpose (l2 / launch-01 :arg1 (12 / 1970s))) :arg3 (s / score-entity :op1 2017 :op2 2017))
(w / win-01 :arg0 (e / elect-01 :quant 2011) :arg1-of (c / clear-06) :time (e2 / elect-01 :quant 2011) :arg1-of (c2 / cause-01 :arg0 (h / have-03 :arg0 (p / person :mod (c3 / country :name (n / name :op1 "N-A"))) :arg1 (r / rate-entity-91 :arg1 (p2 / percentage-entity :value (N / N-A)) :arg2 (v / volume-quantity :quant (N2 / N-A) :unit (g / gallon))))))
(c / contrast-01 :arg2 (s / suffer-01 :arg0 (b / brand :name (n / name :op1 (v / vw) :op2 (b2 / brand) :op3 (b3 / brand) :op4 (b4 / brand) :op5 (b5 / brand) :op6 (b6 / brand) :op7 (b7 / brand)) :mod (p / particular)) :arg1 (s2 / sell-01 :mod (o / overall) :arg1-of (a / announce-01 :arg0 (c2 / company :mod (d / dax-listed)))) :time (d2 / date-entity :dayperiod (N / N-A))))
(s / say-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg2 (s2 / spokeswoman))) :arg1 (v / vote-01 :arg0 (p2 / person :mod (c / country :name (n / name :op1 "N-A"))) :arg1 (l / leave-11 :arg0 (p3 / person) :arg1 (p4 / person :arg0-of (h2 / have-org-role-91 :arg2 (s3 / spokeswoman))) :mod (a / also))) :topic (s4 / situation :topic (c2 / coup :arg1-of (a2 / attempt-01) :location (t / turkey))))
(b / bad-07 :polarity - :arg1 (p / perform-01 :arg1 (f / fuel)) :degree (m / more) :time (a / after :op1 (a2 / and :op1 (m2 / modify-01 :arg1 (v / vehicle)) :op2 (c / consume-01 :arg1 (f2 / fuel)) :op3 (p2 / perform-01 :mod (t / transnational)))))
(f / find-02 :arg0 (p / poll-01 :arg2 (p2 / poll-01)) :arg1 (h / have-03 :arg0 (p3 / person :quant 41 :arg1-of (i / include-91 :arg2 (p4 / person :arg0-of (p5 / purchase-01 :arg1 (s / slash :op1 (p6 / person :arg0-of (p7 / purchase-01 :arg1 (v / vinyl))) :op2 (p8 / person :arg0-of (p9 / play-01 :mod (r / record))) :op3 (p10 / person :arg0-of (p11 / play-01 :mod (r2 / record))) :quant (p12 / percentage-entity :value (N / N-A))))))) :arg1 (p13 / person :quant 41 :arg1-of (u / use-01 :polarity - :arg0 (p14 / person) :time (e / ever)))) :mod (a / also))
(c / contrast-01 :arg1 (o / observe-01 :arg0 (i / i) :arg1 (g / group :consist-of (g2 / girl :mod (t / teenage)) :arg0-of (c2 / cluster :arg1 (a / around :op1 (c3 / cameras :mod (p / polaroid)))))) :arg2 (o2 / observe-01 :arg0 (i2 / i) :arg1 (g3 / group :consist-of (g4 / girl :mod (t2 / teenage)) :arg0-of (c4 / cluster :location (a2 / around :op1 (c5 / cameras :mod (p2 / polaroid))))) :time (b / before :op1 (a3 / and :op1 (p3 / person :arg0-of (h / have-rel-role-91 :arg1 (p4 / person) :arg2 (d / dad))) :op2 (p5 / person :arg0-of (h2 / have-rel-role-91 :arg1 (p6 / person) :arg2 (d2 / daughter))) :op3 (p7 / person :arg0-of (h3 / have-rel-role-91 :arg1 (p8 / person) :arg2 (d3 / daughter))) :op4 (p9 / person :arg0-of (h4 / have-rel-role-91 :arg1 (p10 / person) :arg2 (d4 / daughter))) :op5 (p11 / person :arg0-of (h5 / have-rel-role-91 :arg1 (p12 / person) :arg2 (d5 / daughter)))))))
(m / multi-sentence :snt1 (a / absolute :domain (e / enforce-01 :arg0 (t / they)) :degree (a2 / absolute)) :snt2 (u / unbeaten :arg0 (t2 / they) :mod (p / precedent :polarity -) :mod (p2 / precedent :polarity -) :mod (a3 / again) :domain (t3 / this)))
(t / take-01 :arg0 (c / courtroom) :arg1 (y / year) :time (b / before :op1 (d / deciding :arg0 (t2 / thing) :arg1 (f / futures :poss (t3 / thing)))))
(c / clear-06 :arg1 (b / business :arg0 (l / line :mod (o / official)) :arg1 (b2 / business :mod (' / '')) :arg2 ('2 / '' :mod (u / usual))) :time (a / ahead :op1 (d / duel :arg1 (b3 / between :op1 (b4 / between :op1 (t / temporal-quantity :quant (N / N-A) :unit (y / year)) :op2 (t2 / temporal-quantity :quant (N2 / N-A) :unit (y2 / year)))) :arg2 (s / supercup :location (l2 / location :name (n / name :op1 "konya"))))))
(t / thank-01 :arg1 (p / person :arg0-of (l / lay-off-02 :arg1 (g / groundwork)) :arg0-of (l2 / lay-off-02 :arg1 (g2 / groundwork) :purpose (t2 / title-01 :arg1 (p2 / person) :arg2 (t3 / title :quant 26 :mod (s / star)) :time (s2 / season)))) :arg2 (g3 / gomez) :mod (m / main))
(c / contrast-01)
(a / announce-01 :arg0 (p / person :name (n / name :op1 "N-A") :arg0-of (h / have-org-role-91 :arg1 (b / board :name (n2 / name :op1 (a2 / arno) :op2 (s / supervisory) :op3 (m / mahlert))) :arg2 (d / director :mod (m2 / manage-01)))) :arg1 (l / leave-11 :arg0 (p2 / person) :arg1 (c / committee :arg0-of (a3 / affect-01 :arg1 (s2 / september :quant 12)))) :time (a4 / already))
(s / say-01 :arg0 (h / he) :arg1 (b / become-01 :arg1 (b2 / benefit-01 :arg1 (p / programme :mod (m / mold))) :arg2 (s2 / see-01 :arg1 (b3 / benefit-01)) :mod (o / only) :time (a / after :op1 (t / temporal-quantity :quant (N / N-A) :unit (y / year)))))
(s / seem-01 :arg1 (s2 / seem-01 :arg1 (e / expend-01 :arg2 (r / repair-01 :arg1-of (c / critical-02)) :arg1-of (e2 / expend-01 :arg2 (r2 / repair-01 :arg1-of (c2 / critical-02))))) :arg2 (t / thing :arg2-of (r3 / result-01 :arg1 (r4 / repair-01 :arg1-of (c3 / critical-02)))))
(h / have-03 :arg0 (w / we) :arg1 (r / rate :mod (w2 / work-01) :arg1-of (h2 / have-03 :arg0 (w3 / we) :time (n / now))) :degree (t / total))
(a / and :op1 (a2 / attack-01 :arg0 (p / person :arg0-of (p2 / protest-01) :location (g / gondar)) :arg1 (b / business :arg1-of (o / own-01 :arg0 (t / tigrayans))) :time (m / month :mod (l / last))) :op2 (b2 / become-01 :arg1 (p3 / person :arg0-of (p4 / protest-01)) :arg2 (c / common :degree (m2 / more)) :location (m3 / media :mod (s / social))))
(a / and :op1 (s / serve-01 :arg0 (t / team :consist-of (w / woman)) :arg2 (f / farmworkers :mod (m / male))) :op2 (s2 / serve-01 :arg1 (a2 / and :op1 (s3 / swim-01) :op2 (l / lunch) :op3 (d / dinner))))
(m / make-02 :arg0 (i / it) :arg1 (h / horror :arg0 (h2 / horror :mod (w / war)) :arg1 (h3 / horror :poss (w2 / war))))
(c / contrast-01 :arg2 (a / and :op1 (m / manage-01 :arg0 (p / person :arg0-of (r / research-01) :mod (t / this)) :arg1 (p2 / prey :arg0 (p3 / person)) :mod (s / still)) :op2 (f / find-01 :arg0 (p4 / person :arg0-of (r2 / research-01)) :arg1 (r3 / remain-01 :arg1 (p5 / person :arg0-of (r4 / research-01)) :arg3 (p6 / person :arg0-of (r5 / research-01)))) :op3 (f2 / find-01 :arg0 (p7 / person :arg0-of (r6 / research-01)) :arg1 (r7 / remain-01 :arg1 (s2 / shark :mod (a2 / another)) :direction (d / down)) :direction (d2 / down))))
(c / cause-01 :arg0 (r / require-01 :polarity - :arg0 (l / law) :arg1 (d / do-02 :arg0 (c2 / candidate) :arg1 (s / so))) :arg1 (c3 / customary :arg0 (c4 / candidate :poss (p / person :arg0-of (h / have-org-role-91 :arg1 (c5 / country :name (n / name :op1 "N-A")) :arg2 (p2 / president)))) :arg1 (p3 / public :mod (r2 / returns :mod (t / tax)))))
(s / say-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg2 (a / ambassador))) :arg1 (s2 / surge :prep-in (i / interest-01 :arg1 (f / firm :mod (c / country :name (n / name :op1 "N-A"))) :arg2 (d / do-02 :arg0 (f2 / firm) :arg1 (b / business) :location (c2 / country)))) :time (s3 / since :op1 (l / lifted :arg1 (t / thing :arg2-of (s4 / sanction-02 :arg1 (c3 / country :name (n2 / name :op1 "N-A")) :mod (i2 / international))) :mod (i3 / international))))
(s / say-01 :arg2 (p / person :name (n / name :op1 "N-A")))
(t / take-01 :arg0 (t2 / they) :arg1 (t3 / train) :direction (b / back) :direction (b2 / back) :time (d / date-entity :year (N / N-A)))
(a / and :op2 (w / win-01 :arg0 (t / trio :mod (c / country :name (n / name :op1 "N-A"))) :arg1 (d / duel :prep-for (g / gold))))
(c / close-01 :arg1 (p / point :mod (p2 / point) :arg1-of (l / lead-03 :arg2 (y / year :mod (l2 / last) :part-of (p3 / plant :mod (p4 / power) :mod (a / anglesea))))) :li 2014)
(a / and :op1 (c / criticised :arg0 (m / model :name (n / name :op1 (s / stephanie) :op2 (s2 / stephanie)) :mod (s3 / secret) :poss (c2 / company :name (n2 / name :op1 "N-A") :mod (o / original))) :arg1 (j / jenner :name (n3 / name :op1 (j2 / jenner) :op2 (g / gigi) :op3 (g2 / gigi) :op4 (h / hadid) :op5 (h2 / hadid) :op6 (h3 / hadid) :op7 (h4 / hadid)))) :op2 (c3 / call-01 :arg0 (m2 / model) :arg1 (h5 / hadid) :arg2 (b / bitches :mod (' / '')) :time (m3 / moment)))
(a / and :op1 (c / come-01 :arg1 (s / sue-02) :time (a2 / after :op1 (e / expel-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (r / republican) :arg2 (p2 / president))) :arg1 (b / broadcast-program :name (n / name :op1 "N-A"))) :time (a3 / after :op1 (e2 / expel-01 :arg0 (p3 / person :arg0-of (h2 / have-org-role-91 :arg1 (r2 / republican) :arg2 (p4 / president))) :arg1 (b2 / broadcast-program :name (n2 / name :op1 "N-A")) :location (n3 / north)))) :time (a4 / after :op1 (e3 / expel-01 :arg0 (p5 / person) :arg1 (c2 / crowd :location (n4 / north)))) :time (a5 / after :op1 (e4 / expel-01 :arg0 (p6 / person) :arg1 (c3 / crowd :location (n5 / north)))) :mod (j / just)) :op2 (p7 / possible-01 :arg1 (a6 / act-02 :arg0 (p8 / person :arg0-of (h3 / have-org-role-91 :arg3 (j2 / judge-01)) :arg0-of (h4 / have-org-role-91 :arg3 (j3 / judge-01))) :condition (a7 / and :op1 (e5 / elect-01 :arg1 (p9 / person :arg0-of (o / own-01 :arg1 (g / gun)))) :op2 (g2 / get-01 :arg0 (p10 / person) :arg1 (p11 / pick-01 :arg0 (p12 / person) :arg1 (p13 / person :arg0-of (h5 / have-org-role-91 :arg3 (j4 / judge-01)))))))))
(c / contrast-01 :arg1 (p / possible-01 :arg1 (o / overcome-01 :arg1 (t / thing :arg1-of (o2 / overcome-01)) :time (a / always))) :arg2 (a2 / answer-01 :arg1 (q / question-01 :mod (e / every) :arg1-of (q2 / question-01)) :arg2 (i / it)))
(s / say-01 :arg0 (s2 / study) :arg1 (u / use-01 :arg0 (a / and :op1 (p / person :arg0-of (s3 / study-01)) :op2 (p2 / person :arg0-of (u2 / use-01 :arg1 (a2 / advertise-01)))) :arg1 (n / number :quant-of (p3 / person :arg0-of (u3 / use-01 :arg1 (s4 / software :mod (s5 / such))) :arg0-of (u4 / use-01 :arg1 (s6 / software :mod (s7 / such)) :arg2 (s8 / software :quant 2013)))) :time (y / year :mod (l / last))) :arg2 (g / globe))
(a / and :op1 (w / warms :arg0 (t / this) :arg1 (s / surface)) :op2 (p / produce-01 :arg0 (t2 / this) :arg1 (r / rain-01) :arg0-of (c / create-01 :arg1 (m / monkey :arg1-of (l / layers :mod (t3 / thick)) :arg0-of (a2 / act-02 :arg1-of (r2 / resemble-01 :arg2 (u / umbrella))) :arg0-of (a3 / act-02 :arg1-of (r3 / resemble-01 :arg2 (u2 / umbrella))))) :arg0-of (a4 / act-02 :arg1-of (r4 / resemble-01 :arg2 (u3 / umbrella)))))
(a / and :op1 (t / thousands :arg0 (i / it) :arg1 (p / person :source (p2 / payroll :poss (i2 / it)))) :op2 (a2 / announce-01 :arg0 (i3 / it) :arg1 (p3 / plan-01 :arg0 (p4 / person) :arg1 (l / leave-15 :arg0 (p5 / person) :arg1 (a3 / and :op1 (o / operation :mod (o2 / oil)) :op2 (o3 / operation :mod (g / gas)) :location (u / up-to :op1 (c / country :quant 10))))) :arg1-of (a4 / announce-01 :arg0 (a5 / and :op1 (p6 / person :arg0-of (h / have-org-role-91 :arg1 (i4 / it))) :op2 (p7 / plan-01 :arg0 (p8 / person) :arg1 (l2 / leave-15 :arg0 (p9 / person) :arg1 (c2 / country :quant 10))))) :arg1-of (c3 / cause-01 :arg0 (s / streamlines :arg0 (i5 / it) :arg1 (o4 / operation :poss (g2 / group) :mod (e / energy) :mod (e2 / energy))))))
(e / expect-01 :arg1 (s / spend-01 :arg1 (p / project :mod (n / new) :location (l / location :name (n2 / name :op1 "north" :op2 "sea"))) :arg3 (m / monetary-quantity :quant 1.4 :unit (d / dollar)) :arg3 (p2 / project :mod (n3 / new) :location (l2 / location :name (n4 / name :op1 "north" :op2 "sea"))) :arg1-of (c / compare-01 :arg2 (a / around :op1 (m2 / monetary-quantity :quant 7 :unit (d2 / dollar) :time (b / before :op1 (n5 / now) :duration (t / temporal-quantity :quant (N / N-A) :unit (y / year))))))))
(u / understand-01 :polarity - :arg0 (i / i) :arg1 (t / thing :arg0-of (c / cause-01 :arg1 (d / draw-02 :polarity - :arg0 (a / amr-unknown) :arg1 (t2 / thing :arg1-of (c2 / conclude-01 :mod (r / right)))))) :arg1-of (s / say-01 :arg0 (h / he)) :arg1-of (s2 / say-01 :arg0 (h2 / he)) :arg1-of (s3 / say-01 :arg0 (h3 / he)) :arg1-of (s4 / say-01 :arg0 (h4 / he)) :arg1-of (s5 / say-01 :arg0 (h5 / he)) :arg1-of (s6 / say-01 :arg0 (h6 / he)) :arg1-of (s7 / say-01 :arg0 (h7 / he)) :arg1-of (s8 / say-01 :arg0 (h8 / he)) :arg0-of (c3 / cause-01 :arg1 (b / ban-01 :arg1 (m / many :quant (m2 / many)) :time (a2 / already))))
(a / allow-01 :polarity - :arg1 (p / participate-01 :arg0 (n / nation :quant (a2 / all :mod (a3 / almost)) :arg1-of (p2 / plagued :arg0 (d / doping))) :arg1 (r / rio :arg1 (n2 / nation))))
(m / multi-sentence :snt1 (' / '' :mode (i / imperative) :polite (+ / +) :arg0 (y / you) :mod (j / just)) :snt2 (s / say-01 :arg0 (i2 / i) :arg1 (t / take-01 :mode (i3 / imperative) :polite (+2 / +) :arg0 (y2 / you) :arg1 (n / nap :time (a / afternoon :mod (l / last))))))
(r / recommend-01 :arg1 (r2 / realize-01 :arg0 (y / you) :arg1 (r3 / recommend-01 :arg1 (k / know-01 :arg0 (y2 / you) :arg1 (p / possible-01 :arg1 (r4 / replicate-01 :arg0 (t / they) :arg1 (t2 / thing :arg1-of (c / complain-01 :arg0 (t3 / they))) :mod (r5 / really :degree (t4 / total))))))) :condition (m / move-01 :arg0 (y3 / you) :location (h / here)) :condition (m2 / move-01 :arg0 (y4 / you) :location (h2 / here)))
(r / responsible-03 :arg0 (t / they) :arg1 (a / accommodation :mod (s / subsequent)))
(r / react-01 :arg0 (m / moscow) :time (t / time))
(c / cause-01 :arg0 (g / get-02 :arg0 (p / person :arg0-of (m / mr)) :arg1 (a / apology :source (p2 / person :arg0-of (h / have-org-role-91 :arg2 (p3 / president))))) :arg1 (m2 / meet-03 :mod (t / this) :mod (o / only)) :time (a2 / after :op1 (a3 / all)))
(i / interview-01 :arg1 (p / person :arg0-of (m / mr)) :time (t / tour-01 :arg0 (p2 / person) :arg1 (a / and :op1 (c / customer) :op2 (s / staff)) :location (i2 / inverness-shire)))
(m / multi-sentence :snt1 (k / know-01 :polarity - :arg0 (c / company) :arg1 (g / go-01 :arg1 (a / amr-unknown :arg0-of (p / play-01 :arg1 (p2 / pokémon))))) :snt2 (s / see-01 :arg0 (c2 / company) :arg1 (d / data :mod (r / raw) :topic (l / level :mod (e / exercise))) :mod (j / just)))
(c / contrast-01 :arg1 (l / lose-02 :arg0 (s / she) :arg1 (c2 / compete-01 :mod (o / opera)) :degree (t / total) :time (s2 / since :op1 (s3 / summer :mod 2013))) :arg2 (l2 / lose-02 :arg0 (s4 / she) :arg1 (c3 / compete-01 :arg0-of (w / win-01 :arg1-of (r / recommend-01) :arg1-of (c4 / cause-01 :arg0 (a / as-long-as :op1 (w2 / want-01 :arg0 (y / you) :arg1 (g / go-01))))))))
(s / say-01 :arg0 (s2 / she) :arg1 (t / true :polarity - :domain (s3 / sign-up-03 :arg1 (y / you) :arg3 (i / it) :mod (o / of-course) :mod (o2 / of-course))))
(p / predict-01 :arg1 (s / set-02 :arg0 (p2 / person :mod (b / both)) :arg1 (c / crests :mod (r / record)) :time (o / over :op1 (w / weekend))) :arg1-of (n / near-02 :arg2 (n2 / near-02 :arg2 (a / and :op1 (r2 / rouge :arg1-of (n3 / near-02 :arg2 (b2 / baton))) :op2 (r3 / river :arg1-of (n4 / near-02 :arg2 (d / denham)))))))
(a / and :op1 (c / close-01 :arg1 (s / street :quant 2 :arg1-of (c2 / close-10 :arg2 (s2 / street :quant 2))) :arg1-of (c3 / cause-01 :arg0 (w / water :arg1-of (h / high-02))) :arg1-of (c4 / cause-01 :arg0 (w2 / water :arg1-of (h2 / high-02)))) :op2 (m / make-01 :arg0 (p / person :arg0-of (r / reside-01)) :arg1 (w3 / water :arg1-of (o / out-06 :arg2 (a2 / and :op1 (h3 / home) :op2 (b / business))))))
(l / let-01 :arg0 (c / culture :mod (p / pc)) :arg1 (v / vote-01 :arg1 (d / defraud-01 :location (a / area :mod (r / religious-group :name (n / name :op1 "N-A"))))))
(a / and :op1 (m / move-01 :arg1 (f / family) :arg2 (f2 / family) :time (n / now)) :op2 (b / believe-01 :arg1 (l / live-01 :arg0 (f3 / family) :location (a2 / accomodation :arg1-of (p / private-02)))))
(l / leave-17 :arg1 (m / mattress :arg1-of (d / dirty-02)) :location (f / floor :location (h / house) :quant (m2 / multiple :op1 1)))
(f / fact :domain (o / obligate-01 :polarity - :arg2 (i / implement-01 :arg1 (d / directives :arg1 (a / and :op1 (d2 / data :mod (p / passenger) :mod (a2 / air)) :op2 (l / law :mod (p2 / passenger)) :mod (a3 / air)) :quant (s / several)))))
(f / free-03 :arg1 (m / monetary-quantity :quant 100000 :unit (e / euro)))
(p / possible-01 :arg1 (p2 / problem :domain (t / that) :beneficiary (b / bank :mod (s / small))) :condition (l / look-01 :arg0 (b2 / bank) :arg1 (m / money :poss (b3 / bank)) :purpose (f / free-04 :arg1 (b4 / bank))))
(g / give-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg2 (f / fiji))) :arg1 (a / and :op1 (h2 / handle-01 :arg1 (a2 / and :op1 (l / line :name (n / name :op1 (o / off-loading))) :op2 (p2 / person :arg0-of (h3 / have-org-role-91 :arg2 (o2 / off-loading))) :op3 (p3 / person :arg0-of (s / support-01)) :op4 (p4 / person :arg0-of (s2 / support-01)) :op5 (p5 / person :arg0-of (s3 / support-01)) :op5 (p6 / person :arg0-of (s4 / support-01)) :op6 (s5 / strength :mod (b / brute)) :op7 (s6 / strength :poss (p7 / person)))) :op2 (w / win-01 :arg0 (p8 / person) :arg1 (m / medal :mod (b2 / brute) :poss (p9 / person)) :arg2 (w2 / win-01 :arg0 (p10 / person) :arg2 (g2 / gold) :ord (o3 / ordinal-entity :value 1) :poss (p11 / person)))) :arg2 (p12 / person :name (n2 / name :op1 "N-A")))
(c / contrast-01 :arg1 (s / stop-01 :arg0 (w / wise :mod (s2 / superb)) :arg1 (n / nakarawa :name (n2 / name :op1 (m / man-mountain)) :mod (m2 / man-mountain)) :source (s3 / scoring :ord (o / ordinal-entity :value 3))) :arg2 (p / possible-01 :polarity - :arg1 (p2 / predict-01 :arg1 (f / fiji) :mod (o2 / only))))
(p / praise-01 :arg0 (p2 / person :name (n / name :op1 "N-A") :arg0-of (h / have-org-role-91 :arg2 (g / göller))) :arg1 (p3 / person :arg0-of (h2 / have-org-role-91 :arg2 (o / officer :mod (w / water)))) :arg2 (p4 / person :arg0-of (h3 / have-org-role-91 :arg2 (o2 / officer :mod (w2 / water))) :arg0-of (w3 / work-01 :arg2 (h4 / he) :duration (t / temporal-quantity :quant (N / N-A) :unit (y / year)))) :beneficiary (p5 / part :part-of (h5 / he)))
(p / plan-01 :arg0 (c / commission :mod (c2 / continent :name (n / name :op1 "N-A"))) :arg1 (m / make-01 :arg0 (c3 / commission) :arg1 (c4 / company :arg0-of (m2 / manufacture-01 :arg1 (s / steel)) :arg0-of (u / use-01 :arg1 (g / gas) :arg2 (a / and :op1 (g2 / generate-01 :arg0 (c5 / commission) :arg1 (e / electricity) :purpose (u2 / use-01 :arg0 (c6 / commission) :arg1 (e2 / electricity))) :op2 (p2 / pay-01 :arg0 (c7 / commission) :arg1 (e3 / electricity)))))) :mod (o / original))
(p / possible-01 :arg1 (g / go-01 :arg1 (y / you) :arg4 (a / along) :accompanier (t / they) :mod (j / just)) :condition (k / know-01 :arg0 (y2 / you) :arg1 (s / sings :arg0 (s2 / someone :mod (e / elderly)) :arg1 (n / netizen) :time (a2 / already))))
(s / say-01 :arg0 (t / thing :arg1-of (s2 / say-01 :arg0 (t2 / thing :arg1-of (s3 / say-01 :arg0 (t3 / thing :arg1-of (s4 / say-01 :arg0 (t4 / thing :arg1-of (s5 / say-01 :arg0 (t5 / thing :arg1-of (s6 / say-01 :arg0 (t6 / thing :arg1-of (s7 / say-01 :arg0 (t7 / thing :arg1-of (s8 / say-01 :arg0 (t8 / thing :arg1-of (s9 / say-01 :arg0 (t9 / thing :arg1-of (s10 / say-01 :arg0 (t10 / thing :arg1-of (s11 / say-01 :arg0 (t11 / thing :arg1-of (s12 / say-01 :arg0 (t12 / thing :arg1-of (s13 / say-01 :arg0 (t13 / thing :arg1-of (s14 / say-01 :arg0 (t14 / thing :arg1-of (s15 / say-01 :arg0 (t15 / thing :arg1-of (s16 / say-01 :arg0 (t16 / thing :arg1-of (s17 / say-01 :arg0 (t17 / thing :arg1-of (s18 / say-01 :arg0 (t18 / thing :arg1-of (s19 / say-01 :arg0 (t19 / thing :arg1-of (s20 / say-01 :arg0 (t20 / thing :arg1-of (s21 / say-01))))))))))))))))))))))))))))))))))))))) :arg1 (t21 / thing :arg1-of (d / differ-02 :arg2 (b / between :op1 (m / miaows :mod (k / kittens)) :op2 (a / agitaged :mod (l / less :degree (l2 / less))))))))
(i / issue-01 :arg1 (w / warrant :mod (a / arrest-01)) :arg2 (s / sükür :mod (s2 / star :time (f / former)) :mod (f2 / football) :time (f3 / former)) :location (t / turkey))
(t / throws :arg0 (w / woman) :arg1 (t2 / throws :quant 4 :mod (l / longest)) :time (y / year :mod (t3 / this)) :arg1-of (c / cause-01 :arg0 (g / gold)))
(s / say-01 :arg0 (r / report-01 :arg0 (p / police)) :arg1 (a / and :op1 (k / kill-01 :arg1 (w / woman :mod (c / country :name (n / name :op1 "N-A")))) :op2 (k2 / kill-01 :arg1 (p2 / person :quant (a2 / around :op1 20) :arg2-of (i / include-91 :arg1 (a3 / and :op1 (w2 / woman :mod (a4 / austrian)) :op2 (p3 / person :quant 3) :op3 (p4 / person :quant 3) :op4 (p5 / person :quant 3) :op5 (p6 / person :quant 3)))))))
(l / low-04 :arg1 (t / turnover) :arg2 (r / rate-entity-91 :arg1 (t2 / turnover :quant (b / between :op1 6.1 :op2 6.1)) :arg2 (t3 / temporal-quantity :quant (N / N-A) :unit (y / year))) :arg1-of (s / same-01 :arg2 (p / percentage-entity :value (N2 / N-A) :time (y2 / year :mod (p2 / previous)))))
(b / balanced :arg1 (b2 / between :op1 (b3 / between :op1 2016 :op2 2020) :op2 (b4 / between :op1 2020 :op2 2020)) :time (d / date-interval :op1 (d2 / date-entity :decade (N / N-A)) :op2 (d3 / date-entity :dayperiod (N2 / N-A))))
(c / cause-01 :arg0 (t / thing :arg2-of (r / result-01)) :arg1 (s / save-02 :arg1 (t2 / town :mod (m / market)) :arg2 (m2 / monetary-quantity :arg2-of (c2 / cost-01 :arg1 (m3 / maintain-01)) :mod (l / large)) :arg3 (m4 / monetary-quantity :arg2-of (c3 / cost-01 :arg1 (m5 / maintain-01)) :mod (l2 / large)) :time (b / before :op1 (n / now) :duration (t3 / temporal-quantity :quant (N / N-A) :unit (y / year)))))
(v / value-01 :arg1 (t / this) :arg1-of (h / high-02 :degree (m / most)) :time (s / since :op1 (d / date-entity :decade (N / N-A))) :location (a / above :op1 (v2 / value-interval :op1 2012 :op2 1)) :time (s2 / since :op1 (p / post-01 :arg1 (y / year :mod (l / last) :time-of (p2 / post-01 :arg1 (p3 / percentage-entity :value (N2 / N-A) :mod (p4 / positive)))))))
(f / fail-01 :arg1 (p / person :arg0-of (l / lead-02)) :arg2 (r / reach-01 :arg0 (p2 / person) :arg1 (t / top :part-of (o / organization) :degree (v / very))))
(m / multi-sentence :snt1 (r / recommend-01 :arg1 (c / confess :arg0 (i / i) :arg1 (e / expert-01 :polarity - :arg1 (i2 / i) :arg2 (e2 / expert-01 :arg1 (i3 / i) :arg2 (p / person :arg1-of (e3 / expert-01)))) :location (h / here))) :snt2 (e4 / enthusiast :mode (e5 / expressive) :mod (j / just)))
(s / show-01 :arg0 (p / poll-01 :arg0 (p2 / person :arg0-of (h / have-org-role-91 :arg1 (p3 / publication :name (n / name :op1 "NBC") :poss (o / organization :name (n2 / name :op1 "-" :op2 "wall" :op3 "street" :op4 "journal")) :mod (o2 / organization :name (n3 / name :op1 "-" :op2 "marist"))) :arg2 (p4 / poll-01 :arg0 (p5 / person))) :mod (n4 / new))) :arg1 (c / clinton :name (n5 / name :op1 (m / mr.) :op2 (m2 / mrs.) :op3 (m3 / mrs.) :op4 (m4 / mrs.) :op5 (m5 / mrs.) :op6 (m6 / mrs.) :op7 (c2 / clinton))) :arg2 (m7 / mrs. :location (r / race-02 :arg3 (r2 / race :mod (t / tight)) :location (c3 / country))))
(m / multi-sentence :snt1 (d / diet :mod (n / new) :mod (b / budget) :domain (d2 / diet :arg1-of (r / resemble-01 :arg2 (a / and :op1 (m2 / mystery :domain (m3 / mystery)) :op2 (b2 / become-01 :arg1 (m4 / mystery) :arg2 (s / staples :arg1 (m5 / mystery))))))) :snt2 (a2 / and :op1 (b3 / become-01 :arg1 (m6 / mystery :arg1-of (w / wonderful-03 :mod (' / ''))) :arg2 (s2 / staples :arg1 (m7 / mystery))) :op2 (b4 / became :arg0 (m8 / mystery) :arg1 (w2 / way :arg1-of (w3 / wonderful-03) :arg1-of (w4 / wonderful-03 :arg2 (l / leftovers)))) :op3 (n2 / note-01 :arg0 (i / i) :arg1 (p / possible-01 :arg1 (h / hide-01 :arg0 (i2 / i) :arg1 (i3 / ingredient :mod (u / unappetizing)) :prep-under (c / coating :consist-of (s3 / sauce)))))))
(c / contrast-01 :arg2 (p / possible-01 :arg1 (i / invest-01 :arg0 (a / animal :mod (l / large :degree (v / very))) :arg1 (r / resource :poss (a2 / animal)) :arg2 (h / have-06 :arg0 (a3 / animal) :arg1 (l2 / life :arg1-of (l3 / long-03 :degree (m / more)))))))
(a / and :op1 (p / prove-01 :arg0 (m / method) :arg1 (a2 / and :op1 (p2 / promote-02 :arg1 (f / foundation)) :op2 (f2 / foundation :arg1-of (h / hit-01 :arg2 (p3 / person :location (v / village :location (n / north)))))) :time (b / before :op1 (n2 / now) :quant (s / several :op1 (t / temporal-quantity :quant (N / N-A) :unit (y / year))))) :op2 (t2 / training :arg0 (m2 / method) :arg1 (p4 / person :arg0-of (v2 / volunteer-01) :location (v3 / village :location (n3 / north))) :purpose (u / use-01 :arg0 (c / country) :arg1 (w / way :instrument-of (p5 / protect-01 :arg1 (a3 / and :op1 (h2 / home :poss (a4 / animal)) :op2 (c2 / crop)) :manner (h3 / hurt-01 :polarity - :arg0 (a5 / animal) :arg1 (a6 / animal)))))))
(a / and :op1 (g / gather-03 :arg0 (c / child) :manner (t / together) :time (l / late :op1 (d / date-entity :time (l2 / late)))) :op2 (h / happy :arg1 (c2 / child)) :op3 (p / passed :arg1 (c3 / child)) :op4 (p2 / pass-07 :arg1 (c4 / child) :arg2 (g2 / gates)))
(j / jenner :arg1 (i / issue-02 :arg0 (i2 / issue-02 :arg0 (s / september)) :mod (s2 / september)))
(s / say-01 :arg0 (s2 / study) :arg1 (u / use-01 :arg0 (a / and :op1 (p / person :arg0-of (s3 / study-01)) :op2 (p2 / person :arg0-of (u2 / use-01 :arg1 (a2 / advertise-01)))) :arg1 (n / number :quant-of (p3 / person :arg0-of (u3 / use-01 :arg1 (s4 / software :mod (s5 / such))) :arg0-of (u4 / use-01 :arg1 (s6 / software :mod (s7 / such)) :arg2 (s8 / software :quant 2013)))) :time (y / year :mod (l / last))) :arg2 (g / globe))
(h / have-concession-91 :arg2 (h2 / have-03 :arg0 (a / and :op1 (p / person :arg0-of (m / marry-01 :arg1 (p2 / person) :arg2 (a2 / actress))) :op2 (p3 / person :arg1-of (l / link-01 :arg2 (n / name :op1 (s / star) :op2 (s2 / star) :op3 (k / kate) :op4 (k2 / kate) :op5 (k3 / kate) :op6 (h3 / hudson) :op7 (k4 / kate))))) :arg1 (s3 / support-01 :arg0 (f / fan :poss (f2 / fan :arg0-of (r / rival-01 :arg1 (c / country :name (n2 / name :op1 "N-A"))))) :arg1 (s4 / sox :mod (r2 / red) :mod (b / boston)))))
(r / responsible-03 :polarity - :arg0 (p / person :name (n / name :op1 "N-A") :arg0-of (r2 / responsible-01 :arg1 (p2 / positive :mod (t / test-01))) :arg0-of (o / oppose-01 :arg1 (s / sanctioning))) :ord (o2 / ordinal-entity :value 1 :range (h / history)))
(a / announce-01 :arg1 (a2 / and :op1 (t / test-01 :arg0 (c / company :arg0-of (w / win-01)) :arg1 (p / positive :arg1-of (t2 / tested :arg2 (p2 / product-of :op1 (b / between :op1 (t3 / temporal-quantity :quant (N / N-A) :unit (d / day)) :op2 (t4 / temporal-quantity :quant (N2 / N-A) :unit (d2 / day))))) :op2 (p3 / positive :arg1-of (r / resemble-01 :arg2 (p4 / person :arg0-of (h / have-rel-role-91 :arg1 (h2 / he) :arg2 (b2 / brother)))))) :time (a3 / after :op1 (n / now) :quant (u / up-to :op1 (t5 / temporal-quantity :quant (N3 / N-A) :unit (d3 / day)))))) :op2 (a4 / announce-01 :arg0 (i / i) :arg1 (t6 / test-01 :arg0 (c2 / company :arg0-of (w2 / win-01) :location (l / london :name (n2 / name :op1 (o / olympics) :op2 (o2 / olympics) :op3 (o3 / olympics)))) :arg1 (p5 / positive :mod (p6 / positive)))))
(e / explain-01 :arg0 (t / they) :arg1 (v / victim :poss (t2 / they)) :arg2 (a / and :op1 (t3 / thing :manner-of (p / pay-01 :arg0 (t4 / they) :arg3 (u / use-01 :arg0 (t5 / they) :arg1 (b / bitcoin)))) :op2 (s / set-up-03 :arg0 (t6 / they) :arg1 (a2 / and :op1 (w / website :mod (s2 / support-01) :mod (f / freely-accessible)) :op2 (f2 / file :mod (s3 / samples)) :op3 (f3 / file :arg1-of (f4 / free-03))))))
(m / multi-sentence :snt1 (a / and :op1 (c / change-01 :arg1 (o / or :op1 (p / person :arg0-of (o2 / open-01 :arg1 (o3 / or :op1 (t / trip-03 :arg0 (p2 / person)) :op2 (p3 / person :arg0-of (h / have-rel-role-91 :arg2 (d / dd1))))) :op2 (p4 / person :arg0-of (h2 / have-rel-role-91 :arg2 (d2 / dd1))) :op3 (p5 / person :arg0-of (h3 / have-rel-role-91 :arg2 (d3 / dd1))) :op4 (p6 / person :arg0-of (h4 / have-rel-role-91 :arg2 (d4 / dd1))) :op5 (p7 / person :arg0-of (h5 / have-rel-role-91 :arg2 (d5 / dd1))) :op6 (p8 / person :arg0-of (h6 / have-rel-role-91 :arg2 (d6 / dd1))) :op6 (p9 / person :arg0-of (h7 / have-rel-role-91 :arg2 (d7 / dd1))) :op7 (p10 / person :arg0-of (h8 / have-rel-role-91 :arg2 (d8 / dd1))) :mod (o4 / only))))) :snt2 (o5 / option :quant (a2 / all) :purpose (t2 / treat-03)))
(b / brainwash-01 :arg1 (p / person :arg0-of (h / have-org-role-91 :arg1 (p2 / publication :name (n / name :op1 "N-A") :poss (c / country :name (n2 / name :op1 "N-A"))) :arg3 (a / apprentice-01 :arg0 (p3 / person)))) :arg4 (n3 / northwest :part-of (h2 / head :part-of (p4 / province :name (n4 / name :op1 "N-A")))) :purpose (s / sport :mod (g / german) :location (a2 / along :op1 (s2 / sportspeople :quant 15 :mod (o / outstanding) :mod (o2 / outstanding)))))
(h / have-concession-91 :arg2 (r / ride-01 :arg0 (c / country :name (n / name :op1 "N-A")) :arg1 (w / winners :mod (g / good :degree (m / most)) :arg1-of (s / see-01 :arg1-of (s2 / see-01 :arg0 (c2 / country))))) :manner (s3 / serious))
(c / cause-01 :arg1 (c2 / complete-01 :arg1 (p / project :mod (m / monetary-quantity :quant 1.35 :unit (d / dollar :mod (r / renminbi)))) :time (n / now) :arg1-of (c3 / cause-01 :arg0 (c4 / complete-01 :arg1 (p2 / project)))))
(p / possible-01 :arg1 (s / solve-01 :arg1 (p2 / problem) :location (s2 / swoop :quant 1 :arg1-of (f / fall-01))))
(s / say-01 :arg0 (p / police) :arg1 (r / result-01 :arg1 (r2 / rob-01 :mod (b / bone :part-of (d / dinosaur))) :arg2 (a / appear-02 :arg1 (r3 / result-01 :arg2 (r4 / rob-01))) :arg1-of (c / cause-01 :arg0 (o / or :op1 (t / take-01 :arg0 (p2 / person :arg0-of (b2 / betray-01)) :arg1 (r5 / rate-entity-91 :arg1 (m / monetary-quantity :quant 2,900 :unit (d2 / dollar)) :arg2 (t2 / temporal-quantity :quant (N / N-A) :unit (y / year)))) :op2 (p3 / possess-01 :arg0 (p4 / person) :arg1 (o2 / or :op1 (m2 / monetary-quantity :quant 2,900 :unit (d3 / dollar)) :op2 (m3 / multiple :op1 1)))))))
(s / say-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (p2 / person :name (n / name :op1 "N-A")))) :arg1 (r / request-01 :arg0 (p3 / person) :arg1 (t / tens :arg1 (t2 / thousands :mod (s2 / sandbags))) :mod (a / alone)))
(a / and :op1 (b / be-located-at-91 :polarity - :arg1 (v / victim :quant 2 :mod (o / other)) :arg2 (c / car)) :op2 (i / investigate-01 :arg0 (p / police) :arg1 (p2 / possible-01 :mode (i2 / interrogative) :arg1 (s / shoot-02 :arg1 (m / man :arg1-of (i3 / include-91 :arg2 (m2 / man :arg1-of (w / wound-01))))))))
(a / and :op1 (t / ticagrelor :arg0 (f / firm :name (n / name :op1 (a2 / astrazeneca) :op2 (a3 / astrazeneca)) :arg1-of (m / make-01 :arg0 (f2 / firm :mod (c / country :name (n2 / name :op1 "N-A"))))) :arg1 (t2 / thing :arg2-of (n3 / name-01 :arg1 (f3 / firm :mod (c2 / country :name (n4 / name :op1 "N-A")))) :arg1-of (s / sell-01 :prep-under (n5 / name :op1 (b / brilique) :op2 (b2 / brilique))))) :op2 (l / likely-01 :arg1 (r / risk-01 :arg0 (r2 / risk-01 :mod (t3 / this)) :arg2 (l2 / likely-01 :degree (l3 / less)))))
(m / multi-sentence :snt1 (c / concern-01 :arg0 (t / that)) :snt2 (t2 / turn-02 :arg0 (i / institution :mod (s / state)) :arg1 (e / eye :mod (b / blind-02)) :arg2 (b2 / behave-01 :mod (s2 / such)) :arg1-of (c2 / cause-01 :arg0 (c3 / correct-02 :arg1 (o / over-sensitivities :manner (p / political) :topic (a / and :op1 (e2 / ethnicity) :op2 (r / religion)))))))
(a / and :op2 (a2 / and :op1 (r / realize-01 :arg0 (i / i) :arg1 (r2 / realize-01 :arg0 (h / he) :arg1 (f / frenzy :mod (m / media :mod (s / social))))) :op2 (a3 / admit-01 :arg0 (i2 / i) :arg1 (l / look-02 :arg0 (h2 / he) :arg1 (l2 / look-02 :arg0 (h3 / he) :arg1 (r3 / resemble-01 :arg1 (h4 / he) :arg2 (r4 / resemble-01 :arg1 (h5 / he) :arg2 (k / kid)))))) :prep-in (f2 / fact)))
(s / say-01 :arg0 (p / person :name (n / name :op1 "N-A")) :arg1 (s2 / see-01 :arg1 (a / and :op1 (f / fight-01 :arg0 (t / they) :location (s3 / street)) :op2 (c / call-01 :arg1 (p2 / police) :arg2 (p3 / police) :arg1-of (r / regular-02)))))
FAILED_TO_PARSE#Number of opening and closing brackets doesn't match.
(a / annoy-01 :arg1 (p / person :arg0-of (t / tour-01) :location (b / beach :location (a2 / aveiro))) :time (a3 / and :op1 (a4 / appear-01 :arg1 (p2 / plane)) :op2 (f / fly-01 :arg1 (p3 / plane) :arg1-of (l / low-04 :degree (i / incredible)))))
(r / return-01 :arg1 (t / they) :arg4 (s / stand) :arg0-of (l / leave-13 :arg1 (l2 / leave-11 :arg0 (t2 / they) :manner (a / alone) :purpose (f / fight-01 :arg0 (t3 / they) :arg1 (b / battle-01 :mod (f2 / fair) :prep-against (o / other :mod (e / each)))))))
(g / grow-01 :arg1 (p / person :quant 16 :arg0-of (r / rival-01 :arg1 (c / camp :mod (p2 / political-party :name (n / name :op1 "Republican"))))) :time (n2 / now) :time (a / after :op1 (b / beat-03 :arg0 (p3 / person) :arg1 (p4 / person :quant 16 :arg0-of (r2 / rival-01)) :arg2 (s / succeed-01 :arg0 (p5 / person) :arg1 (s2 / succeed-01 :arg0 (p6 / person) :arg1 (r3 / race) :beneficiary (h / house :mod (w / white)))))))
(o / olympics)
(a / and :op1 (g / go-02 :arg0 (h / he) :arg4 (c / check-01 :arg0 (h2 / he) :mod (d / doping))) :op2 (a2 / allege-01 :arg0 (h3 / he) :arg1 (a3 / and :op1 (f / ferguson :arg1 (h4 / he) :arg2 (d2 / doping)) :op2 (a4 / allege-01 :arg0 (h5 / he) :arg1 (a5 / and :op1 (f2 / ferguson :arg1 (h6 / he)) :op2 (c2 / consult-01 :arg0 (h7 / he) :arg1 (h8 / he)) :op3 (e / explain-01 :arg0 (h9 / he) :arg1 (s / samples)) :op4 (e2 / explain-01 :arg0 (h10 / he) :arg1 (a6 / and :op1 (s2 / soi) :op2 (m / mission :name (n / name :op1 (c3 / chefs)) :poss (c4 / country :name (n2 / name :op1 "Kenya"))))))))))
(a / and :op1 (a2 / age-01 :arg1 (p / person :arg0-of (h / have-org-role-91 :arg1 (f / family :arg1-of (h2 / have-org-role-91 :arg0 (p2 / person) :arg2 (m / member))) :arg2 (m2 / member))) :arg2 (t / temporal-quantity :quant (N / N-A) :unit (y / year))) :op2 (s / say-01 :arg0 (f2 / family :arg1-of (h3 / have-org-role-91 :arg0 (p3 / person) :arg2 (m3 / member))) :arg1 (d / die-01 :arg1 (p4 / person :arg1-of (d2 / die-01 :arg1-of (c / cause-01 :arg0 (p5 / plan-01 :arg0 (p6 / person) :arg1 (a3 / and :op1 (f3 / flee-05 :arg0 (p7 / person) :arg1 (c2 / country :location (m4 / military :name (n / name :op1 "N-A")))) :op2 (r / return-01 :arg1 (p8 / person) :arg4 (c3 / country :name (n2 / name :op1 "N-A"))))))) :mod (j / just)))))
(t / think-01 :arg0 (h / he) :arg1 (s / scumbag :mod (t2 / too)) :mod (a / apparent))
(c / consolation :mod (s / small) :mod (o / only) :domain (t / this) :beneficiary (b / business) :arg1-of (l / locate-01 :location (a / along :op1 27 :arg0 (u / universe) :arg1 (c2 / customer :source (r / rottenburg)))))
(s / stay-01 :arg1 (c / customer :source (a / and :op1 (h / hechingen) :op2 (b / balingen) :op3 (r / rottweil))) :direction (a2 / away))
(p / put-03 :arg1 (h / host-01 :arg1 (m / measure-02 :arg1 (s / security))) :arg2 (p2 / person :arg0-of (h2 / have-org-role-91 :arg2 (m2 / minister))) :time (a / after :op1 (a2 / attack-01 :time (r / recent :degree (m3 / most)))) :time (n / now))
(a / and :op2 (l / loom :arg1 (e / elect-01)))
(s / say-01 :arg0 (p / person :name (n / name :op1 "josef" :op2 "paul") :arg0-of (h / have-org-role-91 :arg1 (b / bank) :arg2 (d / director :mod (m / manage-01))) :arg0-of (h2 / have-org-role-91 :arg1 (b2 / bank) :arg2 (d2 / director :mod (m2 / manage-01)))) :arg1 (a / apply-02 :arg1 (t / this) :arg2 (c / customer :quant 139) :arg3 (c2 / customer :quant 139 :arg1-of (c3 / cost-01 :arg2 (m3 / monetary-quantity :quant 40 :unit (e / euro)))) :arg4 (o / or :op1 (a2 / account :time (c4 / current) :poss (c5 / customer)) :op2 (a3 / account :mod (d3 / day-to-day) :poss (c6 / customer))) :mod (o2 / only)) :time (d4 / date-entity :dayperiod (N / N-A)))
(h / hit-01 :arg0 (b / bank :name (n / name :op1 (r / raffeisen) :op2 (v / volks) :op3 (b2 / bank)) :location (l / land :poss (c / country :name (n2 / name :op1 "N-A")))) :arg1 (h2 / headline) :time (i / impose-01 :arg0 (b3 / branch :mod (g / government-organization :arg0-of (g2 / govern-01 :arg1 (t / they)))) :arg1 (i2 / interest-01 :arg1 (i3 / invest-01 :arg0 (b4 / branch) :arg2 (m / more-than :op1 (m2 / monetary-quantity :quant 3 :unit (e / euro)))) :manner (p / penalize-01))))
(t / take-01 :arg0 (p / person :arg0-of (t2 / tour-01)) :arg1 (p2 / photograph-01) :location (a / and :op1 (p3 / photograph-01) :op2 (b / boy :mod (t3 / teenage)) :op3 (w / woman :mod (m / middle-aged))))
(p / pricked :arg0 (i / industry :mod (a / advertising)) :arg1 (e / ear :part-of (i2 / industry)) :time (a2 / already))
(i / include-01 :arg1 (a / and :op1 (t / twitch) :op2 (y / youtube)) :arg2 (p / platform :mod (w / well)))
FAILED_TO_PARSE#Number of opening and closing brackets doesn't match.
(m / maintain-01 :arg1 (s / supply-01 :arg2 (s2 / spring :mod (n / new)) :mod (e / even)) :frequency (s3 / sometimes) :arg1-of (c / cause-01 :arg0 (f / fill-01 :arg1 (t / tank :mod (e2 / elevated)) :arg2 (p / pettstadt))))
(m / multi-sentence :snt1 (a / and :op1 (o / open-01 :arg0 (p / person :name (n / name :op1 "anna" :op2 "netrebko") :arg0-of (h / have-rel-role-91 :arg1 (s / she) :arg2 (s2 / son))) :arg1 (p2 / person :arg0-of (h2 / have-rel-role-91 :arg1 (p3 / person) :arg2 (s3 / son)))) :op2 (a2 / address-01 :arg0 (p4 / person) :arg1 (p5 / person :mod (o2 / other) :arg0-of (h3 / have-rel-role-91 :arg1 (p6 / person) :arg2 (p7 / parent))) :arg2 (p8 / person :mod (o3 / other) :arg0-of (h4 / have-rel-role-91 :arg1 (p9 / person) :arg2 (p10 / parent))) :arg1-of (a3 / affect-01 :arg0 (d / disease)))) :snt2 (o4 / obligate-01 :arg1 (y / you) :arg2 (t / talk-01 :arg0 (y2 / you) :arg1 (i / it))))
(p / possible-01 :arg1 (o / or :op1 (i / innate :arg1 (c / capable-01 :mod (t / this))) :op2 (d / develop-02 :arg1 (t2 / thing :arg1-of (d2 / develop-02 :arg0 (a / animal))) :arg1-of (p2 / possible-01))))
(a / accuse-01 :arg1 (p / person :name (n / name :op1 "tayyip" :op2 "erdogan") :arg0-of (h / have-org-role-91 :arg2 (p2 / president)) :arg0-of (h2 / have-org-role-91 :arg2 (p3 / president)) :arg0-of (r / responsible-01 :arg1 (r2 / responsible-01 :arg0 (p4 / person) :arg1 (c / coup :arg1-of (a2 / attempt-01))))) :arg2 (s / sükür))
(c / contrast-01)
(c / contrast-01 :arg1 (t / take-01 :arg1 (b / bronze :arg1 (h / he) :source (o / olympics :quant 2008 :arg1-of (o2 / olympics))) :mod (a / also)) :arg2 (r / return-02 :arg1 (b2 / bronze) :arg2 (h2 / he) :arg1-of (f / follow-01 :arg2 (d / decide-01 :arg0 (c2 / court :mod (i / international)) :arg1 (s / sport)))))
(d / design-01 :arg1 (p / propaganda :mod (t / this)) :arg3 (p2 / provoke-01 :arg0 (p3 / propaganda) :arg1 (r / respond-01 :arg2 (p4 / person) :mod (e / emotional))))
(s / say-01 :arg0 (s2 / she) :arg1 (b / believe-01 :arg0 (s3 / she) :arg1 (a / and :op1 (l / lack-01 :arg0 (c / controversies :name (n / name :op1 (r / race-related))) :arg1 (d / diversity) :purpose (h / hire-01 :arg1 (d2 / diversity))) :op2 (l2 / lack-01 :arg0 (c2 / controversies) :arg1 (p / practice-01 :arg1 (d3 / diversity))))) :medium (i / interview-01 :arg1 (s4 / she) :mod (t / telephone)))
(r / respond-01 :arg0 (g / government-organization :arg0-of (g2 / govern-01)) :arg1-of (s / say-01 :arg0 (g3 / group :mod (r2 / right :mod (h / human)))))
(c / contrast-01 :arg2 (c2 / change-01 :arg1 (t / that) :mod (a / as-well)))
(g / go-02 :arg0 (p / person :name (n / name :op1 "rudolph" :op2 "w." :op3 "giuliani") :arg0-of (h / have-org-role-91 :arg1 (c / city :mod (n2 / new) :arg0-of (h2 / have-org-role-91 :arg2 (m / mayor :mod (n3 / new)) :time (f / former))) :arg2 (m2 / mayor) :time (f2 / former)) :arg0-of (h3 / have-org-role-91 :arg1 (c2 / city) :arg2 (m3 / mayor) :time (f3 / former)) :arg0-of (h4 / have-org-role-91 :arg1 (c3 / city) :arg2 (m4 / mayor) :time (f4 / former)) :arg0-of (h5 / have-org-role-91 :arg1 (c4 / city) :arg2 (m5 / mayor) :time (f5 / former)) :arg0-of (h6 / have-org-role-91 :arg1 (c5 / city) :arg2 (m6 / mayor) :time (f6 / former)) :arg0-of (h7 / have-org-role-91 :arg1 (c6 / city) :arg2 (m7 / mayor) :time (f7 / former)) :arg0-of (h8 / have-org-role-91 :arg1 (c7 / city) :arg2 (m8 / mayor) :time (f8 / former)) :arg0-of (h9 / have-org-role-91 :arg1 (c8 / city) :arg2 (m9 / mayor) :time (f9 / former)) :arg0-of (h10 / have-org-role-91 :arg1 (c9 / city) :arg2 (m10 / mayor) :time (f10 / former)) :arg0-of (h11 / have-org-role-91 :arg1 (c10 / city) :arg2 (m11 / mayor) :time (f11 / former)) :arg0-of (h12 / have-org-role-91 :arg1 (c11 / city) :arg2 (m12 / mayor) :time (f12 / former)) :arg0-of (h13 / have-org-role-91 :arg1 (c12 / city) :arg2 (m13 / mayor) :time (f13 / former))))
(p / phone-number-entity :value (N / N-A))
(c / come-01 :arg1 (t / they) :arg4 (s / surface) :time (w / winter) :mod (o / only) :arg1-of (c2 / cause-01 :arg0 (p / prefer-01 :arg0 (t2 / they) :arg1 (t3 / temperature :mod (w2 / water) :quant (a / around :op1 6)))))
(m / measure-01 :arg0 (p / person :arg0-of (r / research-01)) :arg1 (a / and :op1 (p2 / person :arg0-of (r2 / research-01)) :op2 (p3 / person :arg0-of (h / have-org-role-91 :arg1 (a2 / animal) :arg3 (r3 / research-01))) :op3 (p4 / person :arg0-of (h2 / have-org-role-91 :arg1 (a3 / animal) :arg3 (r4 / research-01))) :op4 (p5 / person :arg0-of (h3 / have-org-role-91 :arg1 (a4 / animal) :arg3 (r5 / research-01)))))
(a / and :op1 (p / possible-01 :arg1 (c / case :domain (c2 / case-03 :arg1 (o / or :op1 (h / hunt :arg0 (t / they) :arg1 (a2 / animal)) :op2 (p2 / patrol-01 :arg0 (t2 / they) :location (f / floor :location (f2 / floor :mod (t3 / thing)))))))) :op2 (l / look-up-05 :arg0 (t4 / they) :arg1 (c3 / corpses :arg0-of (s / sink :arg1 (d / downwards :mod (l2 / level :arg1-of (h2 / high-02 :degree (m / more))))))))
(f / focus-01 :arg0 (c / council :poss (c2 / country :name (n / name :op1 "N-A"))) :arg2 (t / topic :mod (c3 / construction-related)) :time (s / session :mod (r / recent :degree (m / most)) :poss (c4 / council)))
(a / and :op1 (j / jumped :arg1 (e / export-01 :arg0 (c / country :name (n / name :op1 "N-A")) :arg2 (c2 / country :name (n2 / name :op1 "N-A"))) :arg2 (p / percentage-entity :value (N / N-A))) :op2 (d / draw-02 :arg0 (e2 / export-01) :arg2 (r / rate-entity-91 :arg1 (m / monetary-quantity :quant 697 :unit (d2 / dollar)) :arg2 (v / volume-quantity :quant (N2 / N-A) :unit (g / gallon)))) :mod (p2 / particular))
(a / and :op1 (d / discuss-01 :arg1 (s / site :mod (v / various) :mod (v2 / various))) :op2 (d2 / decide-01 :arg1 (g / go-02 :arg0 (a2 / and :op1 (t / thing :arg1-of (d3 / decide-01)) :op2 (t2 / thing :arg1-of (d4 / decide-01)) :op3 (t3 / thing :arg1-of (d5 / decide-01))) :arg4 (c / city :arg0-of (m / mark-01 :arg1 (y / year :mod (h / holy)))) :location (l / location :location-of (o / open-01 :arg1 (y2 / year :mod (t4 / this)))) :time (y3 / year :mod (t5 / this)) :arg1-of (c2 / cause-01 :arg0 (o2 / open-01 :arg1 (y4 / year :mod (t6 / this)))))))
(c / cause-01 :arg0 (l / lose-02 :arg0 (w / we) :arg1 (t / titles :mod (w2 / world) :quant (m / many :degree (s / so)))) :arg1 (a / amaze-01 :arg1 (w3 / we) :mod (j / just)))
(a / and :op1 (s / she :arg0-of (h / have-rel-role-91 :arg1 (s2 / she) :arg2 (s3 / sisters))) :op2 (p / person :arg0-of (h2 / have-rel-role-91 :arg1 (s4 / she) :arg2 (s5 / sisters))) :op3 (p2 / person :arg0-of (h3 / have-rel-role-91 :arg1 (s6 / she) :arg2 (s7 / sisters))) :op4 (p3 / person :arg0-of (h4 / have-rel-role-91 :arg1 (s8 / she) :arg2 (h5 / husband))) :op5 (p4 / person :arg0-of (h6 / have-rel-role-91 :arg1 (s9 / she) :arg2 (h7 / husband))))
(t / time :time-of (l / look-01 :arg1 (a / and :op1 (n / need-01 :arg1 (c / community) :arg1-of (l2 / legal-02)) :op2 (c2 / community :mod (c3 / client) :poss (c4 / community)))) :purpose (i / invest-01 :arg0 (g / government-organization) :arg2 (w / work-01 :mod (i2 / important) :mod (t2 / this))) :time (n2 / now))
(m / multi-sentence :snt1 (v / v. :arg1 (c / case-03) :arg2 (t / trumps :arg0 (p / person :arg0-of (h / have-org-role-91 :arg2 (p2 / president))) :arg1 (p3 / person :arg0-of (h2 / have-org-role-91 :arg2 (p4 / president))) :arg2 (p5 / person :arg0-of (h3 / have-org-role-91 :arg2 (p6 / president))))) :snt2 (s / superior :arg0 (a / and :op1 (p7 / person :arg0-of (h4 / have-org-role-91 :arg2 (p8 / president))) :op2 (p9 / person :arg0-of (h5 / have-org-role-91 :arg2 (g / general))) :op3 (p10 / person :arg0-of (h6 / have-org-role-91 :arg2 (g2 / general))) :op4 (p11 / person :arg0-of (h7 / have-org-role-91 :arg2 (g3 / general))) :op5 (p12 / person :arg0-of (h8 / have-org-role-91 :arg2 (g4 / general))) :op6 (p13 / person :arg0-of (h9 / have-org-role-91 :arg2 (g5 / general))) :op7 (p14 / person :arg0-of (h10 / have-org-role-91 :arg2 (h11 / head-of-state))))))
(a / and :op1 (a2 / appreciate-02 :arg0 (w / we) :arg1 (a3 / all :arg1-of (d / do-02 :arg0 (h / he) :arg2 (o / organization :poss (w2 / we))))) :op2 (w3 / wish-01 :arg0 (w4 / we) :arg1 (l / luck :mod (g / good :degree (m / most)) :time (f / future))))
(m / multi-sentence :snt1 (h / have-concession-91 :arg1 (a / and :op1 (s / seem-01 :arg1 (p / passenger :mod (s2 / small)) :location (f / front) :mod (j / just)) :op2 (g / get-01 :arg0 (p2 / passenger) :arg1 (r / room :quant (p3 / plenty)))) :arg2 (a2 / and :op1 (s3 / seem-01 :arg1 (p4 / passenger :mod (s4 / small)) :location (f2 / front) :mod (j2 / just)) :op2 (g2 / get-01 :arg0 (p5 / passenger) :arg1 (r2 / room :quant (p6 / plenty))))) :snt2 (s5 / squeeze :polarity - :degree (a3 / at-all)))
(b / be-temporally-at-91 :mode (i / interrogative) :arg2 (p / pay-01 :arg0 (p2 / person :arg0-of (h / have-rel-role-91 :arg2 (d / dd1)))))
(m / multi-sentence :snt1 (a / and :op1 (w / win-01 :arg0 (m2 / mind :poss (y / you)) :arg1 (t / temporal-quantity :quant (N / N-A) :unit (h / hour)) :arg2 (t2 / temporal-quantity :quant (N2 / N-A) :unit (h2 / hour))) :op2 (a2 / and :op1 (l / lie-08 :arg0 (y2 / you) :duration (n / night :mod (e / each))) :op2 (c / come-01 :arg1 (y3 / you) :arg3 (n2 / night :mod (e2 / each))) :op3 (s / sleep-01 :arg0 (y4 / you) :time (m3 / morning :mod (e3 / each))) :op4 (s2 / sleep-01 :arg0 (y5 / you) :time (m4 / morning :mod (e4 / each))))) :snt2 (g / goes :arg0 (m5 / mind :poss (y6 / you)) :mod (e5 / even) :time (b / before :op1 (a3 / alarm-01 :arg0 (a4 / alarm-01 :arg0 (y7 / you))))))
(l / lack-01 :polarity - :arg0 (s / sportsman :arg1-of (f / friendly-01)) :arg1 (a / awards))
(s / say-01 :arg1 (f / fear-01 :arg0 (y / you) :arg1 (c / change-01 :arg1 (r / regime) :arg1-of (c2 / cause-01 :arg0 (f2 / fear-01 :arg0 (i / it) :arg1 (c3 / change-01 :arg1 (r2 / regime)))))) :arg2 (m / mind :arg1-of (g / give-01 :arg0 (y2 / you))))
(a / avoid-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (p2 / person :arg0-of (h2 / have-org-role-91 :arg2 (p3 / president))) :arg2 (p4 / president))) :arg1 (a2 / answer-01 :arg0 (p5 / person) :arg1 (d / differ-01 :arg0 (p6 / person))) :time (m / mr :arg0 (p7 / person) :arg1 (c / choose-01 :arg0 (p8 / person) :arg1 (u / underlined :arg0 (p9 / person) :arg1 (p10 / person)))) :manner (d2 / deliberate))
(u / use-01 :arg1 (b / bank :mod (r / royal) :part-of (c / country :name (n / name :op1 "N-A"))) :arg2 (c2 / customer :mod (c3 / country :name (n2 / name :op1 "N-A"))) :concession-of (i / initialised :polarity - :arg1 (b2 / bank)))
(c / circles :arg1 (i / ivanov :mod (m / mr)) :arg2 (c2 / circle :name (n / name :op1 (m2 / mr) :op2 (i2 / inner))) :duration (m3 / many :op1 (t / temporal-quantity :quant (N / N-A) :unit (y / year))))
(s / struggle-02 :arg0 (m / man :quant 3) :arg1 (s2 / swim-01 :arg0 (m2 / man) :arg2 (s3 / safe-01 :arg1 (m3 / man))) :time (c / continue-01 :arg1 (b / boat :poss (m4 / man)) :prep-under (p / power :poss (m5 / man))))
(a / and :op1 (r / recovering :domain (s / she)) :op2 (s2 / search-01 :arg0 (p / police) :arg2 (p2 / person :arg1-of (s3 / suspect-01)) :mod (s4 / still)))
(a / and :op1 (c / call-01 :arg0 (i / i) :arg1 (t / team :consist-of (w / woman :time (y / year :mod (t2 / this)))) :arg2 (t3 / that)) :op2 (r / reason :quant (m / more) :arg1-of (c2 / cause-01 :arg0 (r2 / reason :quant (m2 / more)))))
(s / say-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (p2 / police :mod (m / metropolitan)) :arg3 (e / eric))) :arg1 (s2 / say-01 :arg0 (p3 / person) :arg1 (a / astonishing :polarity - :arg1 (c / charge-05 :arg2 (c2 / criminal-03)) :time (a2 / after :op1 (c3 / case :mod (h2 / hamlets))))) :arg2 (p4 / police :mod (m2 / metropolitan)) :manner (s3 / sir))
(s / show-01 :arg0 (v / video :mod (t / this)) :arg1 (t2 / thing :manner-of (t3 / turn-02 :arg0 (y / you) :arg1 (t4 / table) :arg2 (m / mugger :arg1 (t5 / table)))) :arg2 (y2 / you))
(a / and :op1 (p / put-01 :arg0 (p2 / person :mod (c / country :name (n / name :op1 "N-A"))) :arg1 (s / system :name (n2 / name :op1 (i / immune)) :poss (p3 / person)) :arg2 (t / test :mod (s2 / serious))) :op2 (t2 / test-01 :arg0 (p4 / person) :arg1 (t3 / test-01 :mod (s3 / serious)) :manner (l / licking :arg0 (p5 / person) :arg1 (s4 / some :arg1-of (i2 / include-91 :arg2 (a2 / and :op1 (p6 / place :mod (d / dirtiest)) :op2 (p7 / place :arg0-of (d2 / disgust-01))))))))
(p / provide-01 :arg0 (c / company) :arg1 (w / wright :mod (m / mr)) :arg2 (g / gefilus :mod (v / valio) :arg0-of (c2 / contain-01 :arg1 (a / and :op1 (u / url-entity :value (l / lactic)) :op2 (v2 / vitamin :mod (c3 / c)))) :arg0-of (h / help-01 :arg1 (b / boost-01 :arg1 (a2 / and :op1 (s / system :name (n / name :op1 (g2 / gut)) :poss (p2 / person)) :op2 (s2 / system :name (n2 / name :op1 (i / immune)) :poss (p3 / person)))))))
(s / say-01 :arg0 (h / he) :arg1 (h2 / have-concession-91 :arg1 (i / insist-01 :arg0 (f / force :mod (a / air)) :arg1 (c / compromised :arg1 (s2 / safe-01 :arg1 (n / no-one)))) :arg2 (f2 / fly-01 :arg1 (j / jet) :destination (l / low-04 :degree (m / more) :compared-to (n2 / normal-02)))))
(p / put-01 :arg0 (a / agency :mod (w / world) :mod (c / country :name (n / name :op1 "N-A"))) :arg1 (p2 / pressure-01 :arg1 (c2 / country :location (a2 / african)) :quant (l / lot)) :arg2 (a3 / and :op1 (i / introduce-02 :arg0 (a4 / agency) :arg1 (l2 / law :mod (a5 / anti-doping))) :op2 (f / function-01 :arg0 (c3 / check-01 :arg1 (c4 / check-01)))) :location (a6 / ahead :op1 (g / game :mod (s / summer))))
(a / and :op1 (p / put-01 :arg0 (f / festspiele :name (n / name :op1 (s / salzburger))) :arg1 (s2 / story :topic (s3 / side :mod (w / west :part-of (s4 / strait)))) :arg2 (a2 / and :op1 (t / tony) :op2 (m / maria))) :op2 (m2 / maria :arg1 (s5 / story) :arg2 (c / couple :mod (t2 / tragic) :example (a3 / and :op1 (r / romeo) :op2 (j / juliet)) :mod (j2 / just))) :time (y / year :mod (s6 / shakespeare)))
(f / feel-01 :polarity - :arg0 (i / i) :arg1 (s / safe-01) :time (b / before :op1 (n / now) :duration (f2 / few :op1 (t / temporal-quantity :quant (N / N-A) :unit (m / month)))) :time (b2 / before :op1 (n2 / now) :duration (f3 / few :op1 (t2 / temporal-quantity :quant (N2 / N-A) :unit (m2 / month)))))
(a / and :op2 (t / think-01 :arg0 (h / he) :arg1 (c / come-04 :arg1 (b / ban-01 :arg1 (k / ketamine)) :arg2 (i / issue-02 :arg0 (c2 / constitution)))))
(a / and :op2 (s / see-01 :arg0 (m / market :arg1-of (k / key-02) :quant (s2 / some)) :arg1 (c / change-01 :arg1 (c2 / climates :mod (e / economy)) :arg1-of (l / lead-03 :arg2 (p / purchase-01 :mod (f / few :degree (m2 / more)))))))
FAILED_TO_PARSE#Two concepts in a row.
(m / multi-sentence :snt1 (c / contrast-01 :arg1 (l / listen-01 :arg1 (m2 / music :mod (o / or :op1 (c2 / computer) :op2 (w / way :mod (a / another))))) :arg2 (e / easy :arg1 (w2 / woe :poss (v / vinyl)))) :snt2 (d / drifts :mode (e2 / expressive)))
(m / multi-sentence :snt1 (/ / / :arg1 (m2 / medallist :name (n / name :op1 (- / -lrb-) :op2 (-2 / -lrb-) :op3 (k / kiel) :op4 (k2 / kiel) :op5 (k3 / kiel) :op6 (k4 / kiel) :op7 (k5 / kiel)) :mod (p / potential))) :snt2 (c / chance-02 :arg1 (m3 / make-01 :arg1 (s / semi-final))))
(m / multi-sentence :snt1 (a / and :op1 (s / stop-01 :polarity - :arg1 (t / thing) :time (e / ever)) :op2 (u / underway :domain (t2 / thing)) :time (a2 / always)) :snt2 (a3 / and :op1 (m2 / mean-01 :arg1 (w / water :arg1-of (m3 / mean-01 :arg2 (l / life))) :arg2 (l2 / life)) :op2 (d / drink-01 :arg0 (i / i) :arg1 (w2 / water) :mod (i2 / important :degree (m4 / most)) :domain (w3 / water))))
(a / and :op1 (p / put-01 :arg0 (h / he) :arg1 (h2 / heart :part-of (h3 / he)) :arg2 (a2 / association :mod (s / supply-01 :arg1 (w / water)))) :op2 (l / live-01 :arg0 (h4 / he)) :op3 (l2 / live-01 :arg0 (h5 / he)) :op4 (l3 / live-01 :arg0 (h6 / he)) :op5 (l4 / live-01 :arg0 (h7 / he)))
(s / say-01 :arg0 (a / association :mod (g / german)) :arg1 (t / threaten-01 :arg0 (i / industry :mod (a2 / aerospace)) :arg2 (m / monetary-quantity :arg2-of (c / cost-01) :mod (a3 / additional) :arg1-of (r / range-01 :arg3 (p / product-of :op1 120 :op2 (m2 / monetary-quantity :quant 240 :unit (e / euro)))))))
(i / influence-01 :arg0 (t / this) :arg1 (m / military) :mod (s / scale :mod (l / large)) :time (y / year :mod (e / even)))
(s / say-01 :arg0 (p / person :name (n / name :op1 "N-A")) :arg1 (w / work-01 :arg0 (a / authority :poss (h / he)) :manner (c / close) :purpose (d / decide-01 :arg0 (a2 / authority) :arg1 (d2 / decide-01 :arg0 (a3 / authority)))))
(p / possible-01 :polarity - :arg1 (s / stop-01 :arg0 (c / company) :arg1 (l / lose-02 :arg0 (c2 / company) :arg1 (m / money :arg1-of (i / include-91 :arg2 (m2 / money :quant 2016) :arg3 (p2 / percentage-entity :value (N / N-A)))))) :time (a / after :op1 (l2 / lose-02 :arg1 (s2 / suffer-01) :time (q / quarter :mod (p3 / previous)))))
(o / oblige-02 :arg1 (t / town :mod (m / market)) :arg2 (r / run-01 :arg0 (t2 / town) :arg1 (t3 / thing :arg0-of (c / cause-01 :arg1 (b / break-up-08 :arg1 (t4 / treaty :name (n / name :op1 "N-A")) :mod (e / even))))) :manner (l / law))
(o / obligate-01 :arg2 (d / dig :arg0 (a / and :op1 (a2 / and :op1 (e / enterprise :quant 1) :op2 (i / individual) :op3 (e2 / enterprise :mod (i2 / industry))) :op2 (e3 / enterprise :mod (i3 / industry)) :op3 (e4 / enterprise :mod (i4 / industry)) :op4 (e5 / enterprise :mod (i5 / industry)) :op5 (e6 / enterprise :mod (i6 / industry)) :op6 (e7 / enterprise :mod (i7 / industry)) :op6 (e8 / enterprise :mod (i8 / industry)) :op7 (a3 / and :op1 (l / lindenberg) :op2 (z / zultenberg))) :arg1 (d2 / deep-02 :degree (m / more :degree (l2 / little)))))
(a / and :op1 (q / qualify-02 :arg1 (t / team :mod (b / both)) :arg2 (f / final :arg1-of (r / rank-01 :arg2 (f2 / final)))) :op2 (d / decide-01 :arg0 (p / person :arg0-of (f3 / finishes :arg1 (f4 / first :arg0 (p2 / person) :ord (o / ordinal-entity :value 2)))) :arg1 (p3 / person)))
(m / miss-02 :arg0 (s / she) :arg1 (o / olympics :quant 2008) :time (m2 / make-01 :polarity - :arg0 (s2 / she) :arg1 (c / cut-02 :arg1 (r / roster :mod (f / final)))))
(o / open-01 :arg0 (i / i) :arg1 (s / scoring :location (h / half :ord (o2 / ordinal-entity :value 1)) :prep-with (s2 / shoot-02 :mod (b / backhand) :arg1-of (c / close-10 :arg2 (c2 / close)))) :time (n / night :mod (t / thursday)))
(k / kill-01 :arg1 (p / person :arg0-of (p2 / protest-01) :quant (m / many)) :arg1-of (h / have-concession-91 :arg2 (a / and :op1 (f / few :degree (m2 / more) :compared-to (f2 / few :op1 (t / temporal-quantity :quant (N / N-A) :unit (m3 / month)))) :op2 (p3 / pass-01 :arg1 (p4 / period :mod (u / unrest)) :arg1-of (q / quick-02 :degree (r / relative))))) :time (c / crack-down-06 :arg1 (e / ensuing)))
(m / make-01 :arg0 (s / she) :arg1 (t / trek) :mod (s2 / still) :time (a / after :op1 (m2 / move-01 :arg1 (s3 / she) :arg2 (g / greenpoint))))
(c / contrast-01 :arg1 (p / praise-01 :arg0 (h / he) :arg1 (c2 / childhood :arg1-of (s / simple-02) :part-of (c3 / childhood :poss (h2 / he))) :arg1-of (p2 / public-02)) :arg2 (p3 / praised :arg0 (h3 / he) :arg1 (s2 / sophisticated :arg1-of (b / become-01 :arg2 (s3 / sophisticated :arg1 (h4 / he))))))
(a / and :op1 (p / pull-01 :arg0 (a2 / and :op1 (s / she) :op2 (c / coe :name (n / name :op1 (m / mr.) :op2 (c2 / coe)))) :arg1 (d / dessert :arg1-of (p2 / prepare-02 :arg0 (a3 / and) :arg2 (h / home))) :time (a4 / after :op1 (e / expel-01 :arg1 (a5 / and :op1 (s2 / she) :op2 (p3 / person :arg0-of (h2 / have-org-role-91 :arg1 (m2 / mr.))))))) :op2 (p4 / prepared :arg0 (d2 / dessert :name (n2 / name :op1 (p5 / prune) :op2 (p6 / prune) :op3 (d3 / dessert))) :arg1 (e2 / eat-01 :arg0 (p7 / person :arg0-of (h3 / have-org-role-91 :arg2 (p8 / president))) :arg1 (s3 / swim-01))) :time (a6 / after :op1 (e3 / expel-01 :arg1 (p9 / person :arg0-of (h4 / have-org-role-91 :arg2 (h5 / head-of-state))))))
(a / and :op1 (g / go-08 :arg1 (c / coe :name (n / name :op1 (m / mr.) :op2 (c2 / coe))) :arg2 (b / back) :duration (f / forever)) :op2 (t / thirds :arg0 (c3 / coe)))
(t / think-01 :arg0 (i / i) :arg1 (s / see-01 :arg0 (g / god) :arg1 (i2 / i) :manner (m / martyr)) :condition (d / die-01 :arg1 (i3 / i)))
(c / cause-01 :arg1 (d / decide-01 :arg0 (c2 / council :mod (c3 / communal)) :arg1 (a / amended :arg0 (c4 / council) :arg1 (p / plan :arg1-of (u / use-01 :arg1-of (p2 / possible-01 :polarity -))) :time (f / first) :time (s / spring :time (y / year :mod (t / this)))) :arg1-of (c5 / connect-01 :arg2 (c6 / create-01 :arg1 (b / business :mod (a2 / additional))))))
(s / say-01 :arg0 (p / person :arg0-of (r / research-01 :arg1 (e / economy))) :arg1 (r2 / remain-01 :arg1 (p2 / person :arg0-of (h / have-org-role-91 :arg2 (c / capital :mod (f / finance)))) :arg3 (c2 / capital :mod (c3 / continent :name (n / name :op1 "Europe"))) :concession (v / vote-01 :arg0 (p3 / person :arg0-of (h2 / have-org-role-91 :arg2 (c4 / capital :mod (e2 / economy)))))))
(i / include-01 :arg1 (a / and :op1 (c / campbell :mod (n / naomi)) :op2 (e / evangelista :mod (l / linda)) :op3 (m / moss :mod (k / kate))) :arg2 (w / woman :time (p / previous)))
(y / york :arg1 (c / campaign-01 :arg0 (p / person :name (n / name :op1 "Donald" :op2 "Trump"))) :arg2 (d / do-02 :arg0 (p2 / person) :arg1 (n2 / nothing) :arg1-of (a / allege-01)) :time (a2 / after :op1 (t / tell-01 :arg1 (a3 / and :op1 (p3 / pull-01 :arg0 (d2 / director :arg2-of (h / have-org-role-91 :arg0 (p4 / person) :arg1 (o / operation :name (n3 / name :op1 (c2 / carolina)) :location (n4 / north)))) :arg1 (g / gun) :arg2 (p5 / person :arg0-of (h2 / have-org-role-91 :arg2 (d3 / director)))) :op2 (p6 / pull-01 :arg0 (p7 / person) :arg1 (g2 / gun) :arg2 (u / under :op1 (d4 / drive-01 :arg0 (p8 / person) :location (j / jeep))))))))
(a / and :op1 (c / come-01 :arg1 (s / sue-02) :time (a2 / after :op1 (e / expel-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (r / republican) :arg2 (p2 / president))) :arg1 (b / broadcast-program :name (n / name :op1 "N-A"))) :time (a3 / after :op1 (e2 / expel-01 :arg0 (p3 / person :arg0-of (h2 / have-org-role-91 :arg1 (r2 / republican) :arg2 (p4 / president))) :arg1 (b2 / broadcast-program :name (n2 / name :op1 "N-A")) :location (n3 / north)))) :time (a4 / after :op1 (e3 / expel-01 :arg0 (p5 / person) :arg1 (c2 / crowd :location (n4 / north)))) :time (a5 / after :op1 (e4 / expel-01 :arg0 (p6 / person) :arg1 (c3 / crowd :location (n5 / north)))) :mod (j / just)) :op2 (p7 / possible-01 :arg1 (a6 / act-02 :arg0 (p8 / person :arg0-of (h3 / have-org-role-91 :arg3 (j2 / judge-01)) :arg0-of (h4 / have-org-role-91 :arg3 (j3 / judge-01))) :condition (a7 / and :op1 (e5 / elect-01 :arg1 (p9 / person :arg0-of (o / own-01 :arg1 (g / gun)))) :op2 (g2 / get-01 :arg0 (p10 / person) :arg1 (p11 / pick-01 :arg0 (p12 / person) :arg1 (p13 / person :arg0-of (h5 / have-org-role-91 :arg3 (j4 / judge-01)))))))))
(w / write-01 :arg0 (p / person :name (n / name :op1 "ben" :op2 "williams") :arg0-of (h / have-org-role-91 :arg2 (s / spokesperson)) :arg0-of (h2 / have-org-role-91 :arg2 (s2 / spokesperson))) :arg1 (a / and :op1 (' / '' :arg1 (b / battle-01 :arg0 (a2 / and :op1 (c / community) :op2 (c2 / community)) :mod (s3 / sort :mod (t / this))) :time (s4 / since :op1 (b2 / block-01 :arg1 (a3 / advertise-01)))) :op2 (i / invented :arg1 (b3 / block :arg1-of (p2 / possible-01)) :time (s5 / soon :degree (m / more)) :arg1-of (c3 / cause-01 :arg0 (f / fix-02 :arg1 (a4 / advertise-01) :time (s6 / soon))))) :medium (p3 / post :mod (b4 / blog)))
(a / and :op1 (c / carried :arg0 (i / i) :arg1 (d / duty :poss (i2 / i)) :prep-as (a2 / and :op1 (c2 / coach :mod (h / head)) :op2 (p / person :arg0-of (h2 / have-org-role-91 :arg2 (p2 / president :mod (v / vice)))) :op3 (p3 / person :arg0-of (h3 / have-org-role-91 :arg2 (p4 / president :mod (v2 / vice)))) :op4 (p5 / person :arg0-of (h4 / have-org-role-91 :arg2 (p6 / president :mod (v3 / vice)))) :op5 (p7 / person :arg0-of (h5 / have-org-role-91 :arg2 (p8 / president :mod (v4 / vice)))) :op6 (p9 / person :arg0-of (h6 / have-org-role-91 :arg2 (p10 / president :mod (v5 / vice)))) :op7 (p11 / person :arg0-of (h7 / have-org-role-91 :arg2 (p12 / president :mod (v6 / vice)))))) :op2 (s / state-01 :arg0 (r / roy)) :medium (s2 / statement))
(a / and :op1 (l / learn-01 :arg0 (w / we) :arg1 (r / relation-03 :arg0 (w2 / we) :arg2 (m / mass :mod (s / star) :mod (o / other))) :degree (m2 / more)) :op2 (l2 / learn-01 :arg0 (w3 / we) :arg1 (r2 / relation-03 :arg0 (w4 / we) :arg2 (a2 / and :op1 (m3 / mass :mod (s2 / star)) :op2 (h / history :mod (e / even) :poss (s3 / system :poss (c / country) :mod (s4 / solar))) :op3 (s5 / scientist :mod (r3 / research-01)) :op4 (s6 / scientist :mod (r4 / research-01)) :op5 (s7 / scientist :mod (r5 / research-01)) :location (a3 / and :op1 (c2 / center :mod (p / process-01 :arg0 (c3 / country :name (n / name :op1 "N-A")))) :op2 (c4 / center :arg0-of (a4 / analyze-01) :location (l3 / location :name (n2 / name :op1 "pasadena")))))) :medium (n3 / news)))
(a / and :op1 (t / take-01 :arg1 (p / place :ord (o / ordinal-entity :value 4)) :location (1 / 100m :name (n / name :op1 (12 / 100m) :op2 (f / final) :op3 (f2 / final) :op4 (f3 / final) :op5 (f4 / final) :op6 (m / medal) :op7 (m2 / medal) :op8 (m3 / medal) :op8 (m4 / medal) :op8 (m5 / medal) :op8 (m6 / medal) :op8 (m7 / medal)))))
(a / and :op1 (f / follow-02 :arg0 (r / ransomware) :arg1 (p / pattern :arg1-of (s / simple-02)) :time (a2 / activated :arg1 (c / computer :poss (p2 / person :arg0-of (u / use-01))))) :op2 (s2 / seek-01 :arg0 (r2 / ransomware) :arg1 (f2 / file :arg1-of (e / edited :polarity - :duration (t / time :arg1-of (l / long-03))) :example (a3 / and :op1 (w / word-01 :arg1 (o / or :op1 (i / image) :op2 (v / video) :op3 (v2 / video))) :op2 (a4 / and :op1 (i2 / image) :op2 (v3 / video) :op3 (v4 / video))))))
(a / and :op1 (i / include-01 :arg1 (t / tool :mod (a2 / adapter)) :arg2 (p / possible-01 :arg1 (c / construct-01 :arg1 (c2 / configurations :mod (s / small :degree (m / more)))))) :op2 (p2 / possible-01 :arg1 (c3 / change-01 :arg1 (a3 / and :op1 (a4 / appear-01) :op2 (b / branding)))))
(s / say-01 :arg0 (h / he) :arg1 (o / obligate-01 :arg2 (r / react-01 :arg0 (s2 / state) :arg1 (t / threaten-01 :arg1 (t2 / terrorism) :arg2 (a / and :op1 (c / country :name (n / name :op1 "N-A")) :op2 (r2 / resolve-01 :arg1 (t3 / terrorism)))))))
(s / say-01 :arg0 (p / person :arg0-of (h / head-01 :arg1 (l / left)) :arg0-of (h2 / head-01 :arg1 (l2 / left))) :arg1 (m / make-02 :polarity - :arg0 (a / and :op1 (t / talk-01 :arg1 (s2 / smooth)) :op2 (t2 / tighten-01 :arg1 (l3 / law :mod (r / residency)))) :arg1 (p2 / person :location (c / country :mod (t3 / this)) :arg0-of (s3 / safe-01 :degree (m2 / more)) :mod (a2 / any))))
(p / phone-number-entity :value (N / N-A))
(r / recommend-01 :arg0 (d / doctor) :arg1 (e / examine-01 :arg0 (d2 / doctor) :arg1 (l / lab :mod (s / sleep-01)) :beneficiary (p / person :arg0-of (h / have-rel-role-91 :arg1 (p2 / person) :arg2 (p3 / patient))) :purpose (o / or :op1 (p4 / person :arg0-of (f / feel-01 :arg1 (a / abnormally :arg1 (p5 / person)) :time (d3 / day :time-of (s2 / sleepwalkers)))) :op2 (p6 / possible-01 :polarity - :arg1 (p7 / pinpointed :arg1 (c / cause :arg0-of (e2 / explain-01 :arg1 (f2 / fietze)))))) :beneficiary (p8 / person :arg0-of (h2 / have-rel-role-91 :arg2 (p9 / patient)))))
(s / see-01 :arg1 (b / building :arg1-of (i / include-91 :arg2 (b2 / building :mod (n / new) :location (r / rigauer)) :arg3 (m / many))) :arg2 (t / thing :arg1-of (s2 / symbolize-01 :arg2 (d / develop-01 :mod (t2 / this)))) :arg1-of (c / cause-01 :arg0 (c2 / clear-06 :arg1 (o / or :op1 (b3 / break-01 :arg0 (t3 / they) :arg1 (o2 / or :op1 (w / windows) :op2 (f / freshly)) :manner (o3 / or :op1 (w2 / windows) :op2 (f2 / freshly))) :op2 (p / painted :arg0 (t4 / they) :arg1 (b4 / bomb :mod (p2 / paint)))))))
(m / multi-sentence :snt1 (l / love-01 :arg0 (p / person :arg0-of (h / have-rel-role-91 :arg1 (s / she) :arg2 (m2 / mother))) :arg1 (d / day :mod (n / new) :poss (p2 / person :arg0-of (h2 / have-rel-role-91 :arg2 (m3 / mother)))) :location (f / film :mod (n2 / new) :poss (p3 / person))) :snt2 (l2 / love-01 :arg0 (p4 / person :arg0-of (h3 / have-rel-role-91 :arg1 (p5 / person) :arg2 (m4 / mother))) :arg1 (s2 / star :arg1-of (p6 / play-02 :arg0 (p7 / person :arg0-of (h4 / have-rel-role-91 :arg1 (p8 / person :quant 2 :arg0-of (h5 / have-rel-role-91 :arg2 (s3 / son))) :arg2 (s4 / son)))))))
(a / and :op2 (p / pass-01 :arg0 (h / he) :arg1 (m / money :mod (a2 / aircraft-type :name (n / name :op1 "N-A"))) :arg3 (m2 / monetary-quantity :quant 25,000 :unit (e / euro) :arg1-of (s / straight-04)) :time (v / vein :mod (t / this))))
(s / say-01 :arg1 (d / do-02 :arg0 (h / he) :arg1 (d2 / differ-02 :degree (t / total))) :arg2 (p / person :name (n / name :op1 "N-A")))
(s / say-01 :arg0 (p / person :name (n / name :op1 "Clinton")) :arg1 (a / and :op1 (h / have-03 :arg0 (s2 / state) :arg1 (t / task :mod (p2 / particular) :instrument-of (r / renovate-01 :arg0 (s3 / state)))) :op2 (n2 / need-01 :arg0 (s4 / state) :arg1 (o / opportunity :purpose (d / do-02 :arg1 (s5 / so))))))
(w / want-01 :polarity - :arg0 (t / they) :arg1 (c / cut-back-05 :arg0 (t2 / they) :arg1 (t3 / trade-01 :mod (i / international))) :arg1-of (c2 / cause-01 :arg0 (w2 / want-01 :arg0 (t4 / they) :arg1 (p / protect-01 :arg0 (t5 / they) :arg1 (j / job :mod (g / good :degree (m / more)) :mod (c3 / country :name (n / name :op1 "N-A")))) :mod (j2 / just))) :time (t6 / time :arg1-of (s / same-01)))
(s / say-01 :arg0 (y / you) :arg1 (w / wrong-04 :arg1 (y2 / you)) :condition (t / think-01 :arg0 (y3 / you) :arg1 (s2 / stop-01 :arg1 (t2 / this) :time (a / as-soon-as :op1 (a2 / arrive-01 :arg1 (t3 / they) :arg4 (g / germany))))))
(s / state-01 :arg1 (i / important :domain (g / give-01 :arg1 (a / and :op1 (m / man) :op2 (w / woman)) :arg2 (a2 / accommodation :arg1-of (s2 / separate-02))) :degree (v / very)) :medium (s3 / study :arg1-of (p / publish-01 :medium (s4 / study-01 :arg0 (c / committee)))))
(s / say-01 :arg0 (s2 / study) :arg1 (r / recommend-01 :arg1 (a / and :op1 (s3 / separate-02 :arg1 (f / facility) :arg2 (a2 / above :op1 (a3 / all))) :op2 (a4 / access-01 :arg1 (f2 / facility) :arg1-of (e / easy-05)))))
(s / say-01 :arg0 (t / thing :arg1-of (r / report-01) :quant (b / between :op1 5 :op2 1)) :arg1 (e / erdogan :arg0 (a / and :op1 (p / person :arg0-of (h / have-rel-role-91 :arg1 (h2 / he) :arg2 (f / friend :mod (d / dear)))) :op2 (p2 / person :arg0-of (h3 / have-rel-role-91 :arg1 (h4 / he) :arg2 (f2 / friend :mod (d2 / dear))))) :frequency (r2 / rate-entity-91 :arg3 (t2 / temporal-quantity :quant (N / N-A) :unit (d3 / day)))))
(s / suck-01 :arg0 (b / bank :mod (r / royal) :part-of (c / country :name (n / name :op1 "Scotland"))) :arg1 (c2 / customer :location (o / outside :op1 (c3 / country))))
(w / watch-01 :arg0 (s / someone) :arg1 (g / guy :mod (t / this)) :time (t2 / today))
(b / bad-02 :mod (a / all))
(s / say-01 :arg0 (p / person :name (n / name :op1 "alek" :op2 "krautmann")) :arg1 (p2 / possible-01 :arg1 (f / flood :arg0 (p3 / person :mod (c / country :name (n2 / name :op1 "N-A"))) :arg1 (h / house :quant (m / many) :location (a / area :mod (s2 / suburban) :arg1-of (n3 / near-02 :arg2 (b / baton)))))))
(a / and :op1 (b / be-located-at-91 :arg1 (c / club :mod (t / this)) :arg2 (g / get-01 :arg1 (t2 / train-01 :arg2 (t3 / they) :quant (a2 / all)))) :op2 (c2 / commit-01 :arg1 (c3 / club) :arg2 (f / family :arg1-of (h / have-org-role-91 :arg0 (h2 / he) :arg2 (m / member))) :arg1-of (l / long-03)))
(p / pleased :arg1 (w / we) :arg2 (p2 / possible-01 :arg1 (i / increase-01 :arg0 (w2 / we) :arg1 (o / option :mod (t / treat-03) :arg2-of (a / available-02 :arg1 (p3 / person :arg0-of (s / stand-01 :arg1 (p4 / person) :arg2 (b / benefit-01 :arg0 (i2 / it) :arg1 (p5 / person))) :quant (m / many)))))) :time (d / date-entity :year (N / N-A)))
(a / and :op1 (e / excite-01 :arg1 (i / i) :degree (t / too)) :op2 (d / die-01 :arg1 (p / person :arg1-of (r / resemble-01 :arg2 (p2 / pig)))) :mod (t2 / too))
(a / add-01 :arg0 (p / person :name (n / name :op1 "davidson")) :arg1 (t / try-01 :arg0 (p2 / person :arg2-of (s / staff-01)) :arg1 (r / remove-01 :arg0 (p3 / person) :arg1 (p4 / person :arg0-of (s2 / sell-01 :arg1 (s3 / sell-01))) :arg2 (s4 / sell-01) :time (a2 / after :op1 (l / leave-11 :arg0 (p5 / person) :mod (a3 / as-well) :mod (a4 / as-well)))) :manner (a5 / apparent)))
(s / say-01 :arg2 (p / person :name (n / name :op1 "N-A")))
(s / say-01 :arg0 (r / report-01 :arg0 (p / press)) :arg1 (t / threaten-01 :arg0 (p2 / party) :arg1 (r2 / remove-01 :arg0 (p3 / party) :arg1 (s2 / support-01 :arg1 (c / campaign-01 :arg1 (e / elect-01 :arg1 (h / he) :arg2 (e2 / elect-01))) :mod (f / finance))) :condition (c2 / capable-01 :polarity - :arg1 (h2 / he) :arg2 (d / do-02 :arg0 (p4 / party) :arg1 (g / good :degree (m / more) :mod (a / any) :location (p5 / poll-01))))))
(h / have-concession-91 :arg1 (a / admit-01 :arg0 (i / i) :arg1 (l / lack-01 :arg1 (t / trade-01 :arg1-of (p / pass-03))) :mod (a2 / also) :location (' / '' :mod (c / car :mod (m / maier))) :mod (e / even)) :arg2 (t2 / talk-01 :arg1 (c2 / car :mod (m2 / maier)) :mod (e2 / even)))
(s / sell-01 :arg0 (b / brand :name (n / name :op1 (v / vw))) :arg1 (c / car :quant 449,100) :arg2 (r / rate-entity-91 :arg1 (v2 / vehicle :quant 449,100 :mod (f / few :degree (m / more))) :arg2 (r2 / rate-entity-91 :arg1 (v3 / vehicle :quant (p / percentage-entity :value (N / N-A))) :arg2 (t / temporal-quantity :quant (N2 / N-A) :unit (y / year))) :time (y2 / year :mod (p2 / previous))) :mod (g / globe))
(s / say-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg2 (s2 / spokeswoman))) :arg1 (v / vote-01 :arg0 (p2 / person :mod (c / country :name (n / name :op1 "N-A"))) :arg1 (l / leave-11 :arg0 (p3 / person) :arg1 (p4 / person :arg0-of (h2 / have-org-role-91 :arg2 (s3 / spokeswoman))) :mod (a / also))) :topic (s4 / situation :topic (c2 / coup :arg1-of (a2 / attempt-01) :location (t / turkey))))
(a / argue-01 :arg0 (t / they) :arg1 (a2 / and :op1 (p / provide-01 :arg0 (a3 / and :op1 (s / shop) :op2 (r / restaurant)) :arg1 (a4 / and :op1 (t2 / thing :arg2-of (s2 / shelter-01)) :op2 (t3 / thing :arg2-of (s3 / shelter-01 :arg3 (r2 / restaurant)))) :frequency (o / often)) :op2 (n / need-01 :arg0 (a5 / and) :arg1 (a6 / and))))
(p / pricked :arg0 (i / industry :mod (a / advertising)) :arg1 (e / ear :part-of (i2 / industry)) :time (a2 / already))
(a / and :op1 (s / sinks :arg1 (i / it) :arg2 (s2 / steal-01 :arg1 (i2 / it) :manner (s3 / simple))) :op2 (m / make-02 :arg0 (i3 / it) :arg1 (d / disappear-01 :arg1 (i4 / it) :arg4 (u / under :op1 (a2 / armoured))) :time (m2 / measure-01 :arg1 (i5 / it))))
(a / and :op1 (h / headquarter-01 :arg0 (p / person :arg0-of (d / drink-01 :arg1 (w / water)) :arg0-of (d2 / drink-01 :arg1 (w2 / water))) :arg1 (a2 / and :op1 (h2 / headquarters :poss (p2 / person :arg0-of (h3 / have-org-role-91 :arg2 (h4 / head-of-state)))) :op2 (p3 / person :arg0-of (s / supply-01 :arg1 (w3 / water)) :quant (m / multiple :op1 150000) :arg0-of (s2 / supply-01 :arg1 (v / village :quant 32))))) :op2 (p4 / provide-01 :arg0 (p5 / person) :arg1 (a3 / and :op1 (v2 / village :quant 32) :op2 (p6 / person :quant 32 :arg0-of (i / inhabit-01))) :arg2 (p7 / person :arg0-of (i2 / inhabit-01) :quant (a4 / around :op1 5500))))
(s / search :arg1 (s2 / search-01 :mod (t / this)) :time (n / now) :location (a / across :op1 (r / river :name (n2 / name :op1 "N-A"))) :arg1-of (c / cause-01 :arg0 (p / possible-01 :arg1 (t2 / travelling :arg0 (c2 / car) :arg1 (s3 / s.)))))
(c / contrast-01 :arg1 (a / and :op1 (r / riddled :arg1 (i / industry :mod (a2 / aerospace) :mod (g / german)) :arg2 (c2 / crisis)) :op2 (u / use-01 :arg0 (i2 / industry) :arg1 (e / energy :quant (l / lot)))) :arg2 (a3 / await-01 :arg1 (i3 / industry) :arg2 (c3 / cost :mod (a4 / additional) :arg1-of (r2 / run-out-05 :arg2 (m / millions) :arg1-of (p / possible-01)))))
(c / contrast-01 :arg1 (c2 / continue-01 :arg1 (a / affect-01 :arg1 (l / life :poss (t / turk :quant (m / most)))) :time (u / until :op1 (d / declare-02 :arg0 (s / state) :arg1 (s2 / state :mod (e / emergency))))) :arg2 (a2 / and :op1 (c3 / continue-01 :arg1 (s3 / state :mod (e2 / emergency)) :time (u2 / until :op1 (e3 / event :name (n / name :op1 "N-A")))) :op2 (a3 / affect-01 :arg0 (s4 / state) :arg1 (l2 / life :poss (t2 / turk :quant (m2 / most))) :mod (p / practical))))
(- / -rrb- :arg0 (t / tichon :name (n / name :op1 (t2 / tichon) :op2 (-2 / -lrb-)) :name (n2 / name :op1 (t3 / tichon) :op2 (-3 / -lrb-)) :name (n3 / name :op1 (t4 / tichon) :op2 (-4 / -lrb-)) :name (n4 / name :op1 (-5 / -lrb-) :op2 (h / hammer)) :name (n5 / name :op1 (-6 / -lrb-) :op2 (h2 / hammer) :op3 (-7 / -rrb-))) :mod (a / another :mod (h3 / hardly)) :mod (a2 / another :mod (s / so)) :arg0-of (s2 / stripped :arg1 (c / crap :quant (m / many :degree (s3 / so)))))
(a / and :op1 (t / take-01 :arg0 (j / junta :mod (m / military)) :arg1 (p / power) :time (a2 / after :op1 (u / unrest :mod (b / bloody)))) :op2 (b2 / believe-01 :arg0 (j2 / junta) :arg1 (l / lead-02 :arg0 (j3 / junta) :arg1 (k / kingdom) :arg2 (a3 / and :op1 (s / stability) :op2 (o / order)) :direction (b3 / back))))
(s / say-01 :arg0 (d / democrat :mod (t / top) :poss (c / committee)) :arg1 (c2 / create-01 :arg1 (p / process-02 :arg1 (p2 / produce-01 :arg1 (i / intelligence :location (a / and :op1 (f / force :mod (s2 / security) :mod (c3 / country :name (n / name :op1 "N-A"))) :op2 (f2 / force :mod (s3 / security) :mod (c4 / country :name (n2 / name :op1 "N-A"))) :op3 (p3 / person :arg0-of (r / represent-01 :arg1 (o / organization) :mod (t2 / top))) :op4 (p4 / person :arg0-of (r2 / represent-01 :arg1 (o2 / organization) :mod (t3 / top))) :op5 (p5 / person :arg0-of (r3 / represent-01 :arg1 (c5 / committee)))))))) :medium (s4 / statement))
(h / have-concession-91 :arg2 (c / cite-01 :arg0 (g / group :mod (r / right :mod (h2 / human))) :arg1 (o / oppose-01 :arg0 (g2 / government-organization :arg0-of (g3 / govern-01) :poss (g4 / government-organization :arg0-of (g5 / govern-01)) :arg0-of (o2 / oppose-01 :arg1 (g6 / government-organization :arg0-of (g7 / govern-01))) :arg0-of (o3 / oppose-01 :arg1 (g8 / government-organization :arg0-of (g9 / govern-01)) :arg1-of (e / effective-04)) :arg0-of (o4 / oppose-01 :arg1 (g10 / government-organization :arg0-of (g11 / govern-01)))) :arg1-of (e2 / effective-04)) :mod (h3 / hardly)))
(g / give-01 :arg0 (p / person :name (n / name :op1 "Clinton") :arg0-of (h / have-org-role-91 :arg2 (m / mrs.))) :arg1 (s / speech :mod (e / economy)) :location (p2 / peninsula :name (n2 / name :op1 "N-A")) :time (w / week :mod (t / this)))
(a / and :op1 (t / think-01 :arg0 (i / i) :arg1 (p / pattern :domain (t2 / test-01 :arg0 (h / he) :arg1 (m / message :mod (c / certain) :arg0-of (r / resonate :arg1 (f / fan :poss (h2 / he))))))) :op2 (s / see-01 :arg0 (i2 / i) :arg1 (o / or :op1 (p2 / person :arg0-of (h3 / have-org-role-91 :arg2 (p3 / person :arg1-of (e / expert-01 :arg2 (c2 / communicate-01))))) :op2 (p4 / person :arg0-of (h4 / have-org-role-91 :arg2 (p5 / person :arg1-of (e2 / expert-01 :arg2 (c3 / communicate-01))))) :op3 (p6 / person :arg0-of (h5 / have-org-role-91 :arg2 (p7 / person :arg1-of (e3 / expert-01 :arg2 (c4 / communicate-01)))) :arg0-of (m2 / monitor-01 :arg1 (l / language :arg1-of (u / use-01 :arg0 (c5 / candidate :mod (b / both))))))) :time (t3 / then)))
(s / show-01 :arg0 (p / poll-01 :arg0 (p2 / person :arg0-of (h / have-org-role-91 :arg1 (p3 / publication :name (n / name :op1 "NBC") :poss (o / organization :name (n2 / name :op1 "-" :op2 "wall" :op3 "street" :op4 "journal")) :mod (o2 / organization :name (n3 / name :op1 "-" :op2 "marist"))) :arg2 (p4 / poll-01 :arg0 (p5 / person))) :mod (n4 / new))) :arg1 (c / clinton :name (n5 / name :op1 (m / mr.) :op2 (m2 / mrs.) :op3 (m3 / mrs.) :op4 (m4 / mrs.) :op5 (m5 / mrs.) :op6 (m6 / mrs.) :op7 (c2 / clinton))) :arg2 (m7 / mrs. :location (r / race-02 :arg3 (r2 / race :mod (t / tight)) :location (c3 / country))))
(i / include-91 :arg1 (b / book :arg1-of (i2 / include-91 :arg2 (z / ziegelman :name (n / name :op1 (m / ms.) :op2 (z2 / ziegelman) :op3 (z3 / ziegelman))))) :arg2 (p / period :time-of (p2 / prepare-01 :arg0 (z4 / ziegelman :name (n2 / name :op1 (m2 / ms.) :op2 (z5 / ziegelman))) :arg1 (p3 / period :consist-of (o / onion :mod (b2 / baked))) :prep-with (b3 / butter :mod (p4 / peanuts)))) :medium (b4 / book :mod (r / research)))
(a / and :op1 (c / call-01 :arg1 (i / it) :arg2 (w / whipped :mod (p / prune))) :op2 (a2 / add-01 :arg0 (i2 / i) :arg1 (g / give-01 :arg0 (t / trick :mod (c2 / common)) :arg1 (n / name :mod (s / snazzy)))))
(s / sight :arg1-of (r / rare-02) :domain (i / it))
(p / pay-01 :arg0 (t / they) :arg1 (r / rate :mod (t2 / tax-01 :arg3 (t3 / tax)) :mod (f / federal)) :arg3 (p2 / percentage-entity :value (N / N-A)) :arg4 (v / value-interval :op1 20.3 :op2 2015))
(i / increase-01 :arg1 (i2 / import-01 :arg0 (c / country :name (n / name :op1 "N-A")) :arg2 (c2 / country :name (n2 / name :op1 "N-A"))) :arg2 (p / percentage-entity :value (N / N-A)) :arg4 (r / rate-entity-91 :arg1 (m / monetary-quantity :quant 158 :unit (d / dollar)) :arg2 (v / volume-quantity :quant (N2 / N-A) :unit (g / gallon))))
(a / and :op1 (i / include-01 :arg1 (a2 / and :op1 (f / fishing :location (a3 / around :op1 (c / camp :mod (s / summer)))) :op2 (s2 / spend-01 :arg1 (e / evenings :location (a4 / around :op1 (c2 / campfire))))) :mod (o / other)) :op2 (s3 / spending :arg1 (' / '' :time (n / night)) :time (n2 / night)))
(r / responsible-03 :arg0 (a / and :op1 (b / burkhardt) :op2 (h / heidi)) :arg1 (c / create-01 :arg1 (a2 / and :op1 (d / dinner :mod (d2 / delicious)) :op2 (d3 / dinner :mod (n / nourishing)) :op3 (b2 / breakfast))) :time (s / stage :mod (e / each)))
(s / say-01 :arg0 (a / address-02 :arg1 (a2 / address-02 :arg1 (p / person :arg0-of (a3 / analyze-01)) :time (e / early :degree (m / more) :time (w / week :mod (e2 / early :degree (m2 / more)))))) :arg1 (a4 / and :op1 (u / use-01 :arg0 (p2 / person :arg0-of (a5 / analyze-01)) :arg1 (a6 / around :op1 (m3 / mass-quantity :quant (N / N-A) :unit (k / kilogram))) :arg2 (p3 / person :quant (a7 / around :op1 600) :arg0-of (p4 / power-01))) :op2 (t / tomago :arg0 (p5 / person) :arg1 (p6 / person :quant (a8 / around :op1 900)))))
(a / attract-01 :arg0 (i / issue-02) :arg1 (b / book :mod (h / huge) :quant (n / number :mod (h2 / huge)) :arg1-of (c / count-01 :time (y / year :mod (l / last))) :arg1-of (i2 / include-91 :arg2 (t / tome :mod (8 / 832-page) :time (y2 / year :mod (l2 / last))) :prep-as (c2 / content :mod (a2 / advertising)))) :arg1-of (c3 / cause-01 :arg0 (r / resembling :arg0 (b2 / book :mod (c4 / coffee)) :arg1 (b3 / book :mod (c5 / coffee)) :manner (c6 / close :degree (m / more)))))
(m / moment :mod (d / decisive) :time-of (b / break-01 :arg1 (m2 / market :mod (m3 / mass)) :time (b2 / break-01 :arg1 (p / person :arg0-of (h / have-org-role-91 :arg1 (a / apple) :arg2 (c / ceo))) :time (a2 / and :op1 (t / time) :op2 (j / job :mod (s / steve))))) :arg0-of (a3 / announce-01 :arg1 (i / introduce-02 :arg1 (i2 / iphone :location (w / world :mod (m4 / mac))))))
(p / possible-01 :arg1 (c / confirm-01 :arg0 (a / and :op1 (g / group :mod (w / wood)) :op2 (u / unite-01)) :arg1 (a2 / agree-01 :arg0 (w2 / we) :arg1 (r / restart-01 :arg0 (w3 / we) :arg1 (p2 / process-02) :purpose (r2 / resolution :mod (d / dispute-01 :time (c2 / current))))) :arg2 (t / thing :arg1-of (s / state-01) :mod (j / joint))))
(r / reach-01 :arg0 (s / star :arg1-of (i / include-91 :arg2 (s2 / star :location (c / cluster))) :quant (m / many)) :arg1 (a / adulthood :time (b / before :op1 (n / now) :quant (t / temporal-quantity :quant (N / N-A) :unit (y / year)))) :time (n2 / now :mod (j / just)))
(s / stars :arg0 (s2 / star :mod (t / this)) :arg1 (s3 / stars :quant (a / amount :mod (l / large)) :quant (a2 / amount :mod (l2 / large))) :time (p / peak-01 :arg1 (r / rate :arg1-of (p2 / peak-01) :poss (t2 / they))))
(p / phone-number-entity :value (N / N-A))
(r / reduce-01 :arg1 (b / ban-01) :arg4 (m / match-03 :quant 162) :time (a / after :op1 (b2 / battle-01 :arg1-of (l / legal-02))))
(c / contrast-01 :arg1 (t / target-01 :arg1 (p / person :arg0-of (u / use-01 :arg1-of (p2 / private-03))) :time (i / initial)) :arg2 (s / shift-01 :arg1 (s2 / shift-01 :arg2 (a / attack-01 :arg0 (c2 / corporation))) :arg1-of (q / quick-02) :time (b / before :op1 (n / now) :duration (f / few :op1 (t2 / temporal-quantity :quant (N / N-A) :unit (m / month))))))
(p / paradise :mod (a / additional) :domain (e / engine :consist-of (p2 / petrol) :quant (b / between :op1 1.5 :op2 96) :unit (m / mark :mod (k / kw))) :mod (a2 / additional))
(c / contrast-01)
(o / offer-01 :arg0 (p / person :mod (c / country :name (n / name :op1 "N-A"))) :arg1 (c2 / car :mod (d / diverse) :arg1-of (p2 / perfect-02 :arg2 (d2 / drive-01 :mod (e / everyday)))) :manner (h / honda))
(h / head-01 :arg0 (y / you) :arg1 (b / bed) :time (t / time :arg1-of (n / normal-02) :poss (y2 / you)) :time (a / after :op1 (c / cabled :arg1 (y3 / you))))
(a / and :op1 (b / believe-01 :arg0 (a2 / and :op1 (p / person :arg0-of (h / have-org-role-91 :arg2 (s / senator :mod (i / interior)))) :op2 (p2 / person :arg0-of (h2 / have-org-role-91 :arg1 (p3 / police) :arg2 (p4 / police)))) :arg1 (o / open-up-03 :arg0 (p5 / person :arg0-of (h3 / have-org-role-91 :arg1 (c / country :name (n / name :op1 "N-A")) :arg2 (s2 / senator))) :arg1 (p6 / person :arg0-of (h4 / have-org-role-91 :arg1 (u / university :name (n2 / name :op1 "N-A") :location (h5 / house)))))) :op2 (e / exist-01 :polarity - :arg1 (a3 / ass :part-of (p7 / person))))
(s / say-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg2 (s2 / spokesperson))) :arg1 (a / and :op1 (t / team :mod (s3 / small) :domain (w / we) :arg0-of (o / operate-01 :arg1-of (r / resemble-01 :arg2 (f / family :arg1-of (h2 / have-org-role-91 :arg0 (w2 / we) :arg2 (m / member)))))) :op2 (m2 / miss-01 :arg1 (p2 / person :arg0-of (h3 / have-org-role-91 :arg2 (s4 / spokesperson))))))
(a / award-01 :arg1 (s / sport :mod (s2 / sport)) :arg2 (p / person :ord (o / ordinal-entity :value 18) :arg0-of (a2 / award-01 :arg1 (s3 / sport))))
(k / keep-01 :arg0 (p / person :mod (c / country :name (n / name :op1 "N-A"))) :arg1 (d / distance-01 :arg1 (p2 / person) :arg2 (a / animal :mod (l / large))))
(c / call-03 :arg0 (d / doctor :mod (j / junior)) :arg1 (c2 / call-03 :arg0 (d2 / doctor) :arg1 (a / action :mod (i / industry) :arg1-of (f / fresh-04))))
(p / putin :mode (i / imperative) :arg0 (y / you) :arg1 (a / ankara :mod (p2 / putin)) :arg1-of (c / cause-01 :arg0 (a2 / accuse-01 :arg1 (p3 / putin) :arg2 (a3 / ankara :arg1 (s / stabbing :mod (s2 / stab)) :location (b / back)))))
(s / serve-01 :arg0 (h / he) :arg1 (a / and :op1 (p / person :arg0-of (h2 / have-org-role-91 :arg2 (m / minister :mod (p2 / prime) :mod (p3 / prime)))) :op2 (p4 / person :arg0-of (h3 / have-org-role-91 :arg2 (m2 / minister :mod (d / defense))))) :time (p5 / previous))
(n / name-02 :arg0 (h / he) :arg1 (i / ivanov :mod (m / mr)) :arg2 (p / person :quant 1 :arg1-of (i2 / include-91 :arg2 (p2 / person :quant 5 :arg1-of (t / trust-01 :arg0 (h2 / he))))) :time (c / come-12 :arg1 (m2 / mr)))
(a / appeal-02 :arg0 (m / man :mod (b / banff)) :arg2 (h / help-01 :arg1 (f / fish :mod (i / identifying) :arg1-of (a2 / appear-01 :location (g / garden :poss (m2 / man))))))
(a / and :op2 (o / obligate-01 :arg2 (g / give-01 :arg1 (h / home :purpose (p / put-03 :arg1 (h2 / home) :arg2 (s / scenario :mod (m / maintain-01) :mod (t / thing :arg2-of (p2 / price-01))))) :arg2 (p3 / put-01 :arg1 (h3 / home) :arg2 (h4 / home)))))
(k / keep-02 :arg0 (i / i) :arg1 (s / say-01 :arg0 (i2 / i) :arg1 (e / event :mod (a / amr-unknown))))
(c / cause-01 :arg0 (c2 / continue-01 :arg1 (r / rain-01) :location (a / area :arg1-of (m / mobile-02))) :arg1 (w / watch-01 :arg1 (f / friday :mod (f2 / flood)) :location (a2 / alabama :location (s / south :part-of (s2 / strait)))))
(s / say-01 :arg0 (p / person :name (n / name :op1 "N-A")) :arg1 (r / report-01 :arg0 (p2 / person :quant 1 :arg0-of (o / observe-01) :arg1-of (n2 / near-02 :arg2 (l / livingston))) :arg1 (r2 / rain-01) :time (m / morning :mod (f / friday))))
(c / compare-01 :arg0 (a / and :op1 (n / nadal :name (n2 / name :op1 (t / tennis) :op2 (s / star)) :mod (t2 / tennis)) :op2 (h / hartnett :name (n3 / name :op1 (a2 / actor)))) :arg1 (p / person :arg0-of (b / boasted :arg1 (a3 / and :op1 (b2 / brow :mod (h2 / heavy)) :op2 (p2 / person :arg0-of (h3 / have-rel-role-91 :arg2 (l / lips)))) :arg1-of (r / resemble-01))) :mod (a4 / another) :mod (a5 / another))
(a / and :op1 (s / star :domain (a2 / and :op1 (s2 / star :mod (s3 / soccer)) :op2 (s4 / star :mod (d / dexter)))) :op2 (f / face-01 :arg0 (a3 / and) :arg1 (a4 / and :op1 (s5 / shapes) :op2 (e / eye)) :arg1-of (r / resemble-01)) :mod (i / indeed))
(w / write-01 :arg0 (p / person :name (n / name :op1 "sarah" :op2 "paradis") :arg0-of (u / use-01 :arg1 (t / twitter)) :mod (a / another)) :arg1 (' / ' :mode (i / imperative) :arg0 (y / you) :mod (w2 / wow :mode (e / expressive))))
(l / live-01 :arg0 (f / family) :location (h / house) :duration (t / temporal-quantity :quant (N / N-A) :unit (y / year)) :arg1-of (r / regular-02))
(h / hope-01 :arg0 (i / i) :arg1 (a / and :op1 (g / give-01 :arg0 (d / develop-01 :mod (t / this)) :arg1 (c / comfort :quant (s / some)) :arg2 (f / festival :name (n / name :op1 "N-A"))) :op2 (m / message-01 :arg0 (i2 / i) :arg1 (t2 / tolerate-01 :polarity - :arg1 (b / behave-01 :arg0 (b2 / behave-01 :arg0 (c2 / country :name (n2 / name :op1 "N-A"))))))))
(a / and :op1 (h / have-03 :arg0 (w / we) :arg1 (p / problem :mod (h2 / huge) :topic (u / utah))) :op2 (s / say-01 :arg0 (p2 / person :arg0-of (h3 / have-org-role-91 :arg1 (p3 / political-party :name (n / name :op1 "N-A")))) :arg1 (a2 / audience :mod (e / evangelical) :arg1-of (a3 / ask-02 :arg0 (p4 / person) :arg2 (a4 / assist-01 :arg0 (p5 / person) :arg1 (s2 / state :arg1-of (k / key-02) :example (o / or :op1 (o2 / ohio) :op2 (f / florida) :op3 (v / virginia))))))))
(o / olympics)
(w / win-01 :arg0 (a / and :op1 (a2 / athletes :mod (t / track) :poss (c / country)) :op2 (a3 / athletes :mod (f / field)) :poss (c2 / country)) :arg1 (d / drone :mod (w2 / world :quant 2015) :location (w3 / world :quant 2015 :location (w4 / world))))
(s / say-01 :arg0 (p / person :arg0-of (l / lead-02 :arg1 (o / organization :name (n / name :op1 "senate" :op2 "democratic"))) :arg0-of (h / have-org-role-91 :arg1 (o2 / organization) :arg3 (l2 / lead-02))) :arg1 (c / convince-01 :arg0 (p2 / person) :arg1 (p3 / person :arg0-of (h2 / have-org-role-91 :arg3 (j / judge-01)) :arg0-of (n2 / nominate-01 :arg1 (p4 / person :arg0-of (h3 / have-org-role-91 :arg3 (j2 / judge-01)))) :arg0-of (h4 / have-org-role-91 :arg3 (j3 / judge-01))) :arg2 (p5 / person :arg0-of (h5 / have-org-role-91 :arg3 (j4 / judge-01))) :condition (e / elect-01 :arg1 (p6 / person) :arg2 (p7 / president))))
(l / lead-03 :arg0 (r / recall) :arg2 (m / mess-up-02 :arg0 (r2 / recall) :arg1 (t / term :quant 1)))
(e / effect-03 :arg0 (r / refitting :arg1 (v / vehicle)) :arg1 (e2 / effect-03 :polarity - :mod (n / negative)) :mod (o / of-course))
(b / believe-01 :arg0 (p / person :quant 25 :arg1-of (i / include-91 :arg2 (p2 / person :arg0-of (h / have-rel-role-91 :arg1 (h2 / he) :arg2 (s / sister)))) :arg0-of (h3 / have-org-role-91 :arg1 (p3 / person :arg0-of (h4 / have-rel-role-91 :arg2 (s2 / sister))))) :arg1 (f / fit :arg0 (h5 / he) :arg1 (p4 / profile :mod (y / yougov))) :mod (a / also) :li 25)
(c / court :mod (c2 / country :name (n / name :op1 "N-A")))
(a / argue-01 :arg0 (t / they) :arg1 (a2 / and :op1 (p / provide-01 :arg0 (a3 / and :op1 (s / shop) :op2 (r / restaurant)) :arg1 (a4 / and :op1 (t2 / thing :arg2-of (s2 / shelter-01)) :op2 (t3 / thing :arg2-of (s3 / shelter-01 :arg3 (r2 / restaurant)))) :frequency (o / often)) :op2 (n / need-01 :arg0 (a5 / and) :arg1 (a6 / and))))
(s / say-01 :arg0 (p / person :name (n / name :op1 "N-A")) :arg1 (h / hard-02 :arg1 (c / comment-01 :arg0 (i / i) :arg3 (t / time :poss (i2 / i)) :time (y / yesterday)) :manner (h2 / honest)) :mod (h3 / honest))
(a / and :op1 (l / launch-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg2 (b / beams))) :arg1 (p2 / programme :poss (p3 / person))) :op2 (h2 / have-03 :arg0 (p4 / person) :arg1 (p5 / person :quant (m / more-than :op1 100000) :arg0-of (u / use-01)) :time (a2 / already)))
(a / and :op1 (c / change-01 :arg0 (p / person :mod (c2 / country :name (n / name :op1 "N-A"))) :arg1 (a2 / and :op1 (c3 / change-01 :arg0 (p2 / person) :arg1 (h / half-time)) :op2 (p3 / plugged :arg0 (p4 / person) :arg1 (d / dam :name (n2 / name :op1 (f / fijian)))))) :op2 (p5 / plugged :arg0 (p6 / person) :arg1 (d2 / dam :name (n3 / name :op1 (f2 / fijian))) :time (a3 / after :op1 (n4 / now) :quant (a4 / all :op1 (t / temporal-quantity :quant (N / N-A) :unit (m / minute))))) :op3 (g / go-08 :arg1 (t2 / tuisova :mod (j / josua)) :arg2 (t3 / temporal-quantity :quant (N2 / N-A) :unit (m2 / minute)) :time (u / until :op1 (a5 / after :op1 (b / brilliant :arg1-of (b2 / brilliant-01) :mod (s / some))))))
(p / possible-01 :arg1 (p2 / practice-01 :arg0 (p3 / person :mod (o / old :degree (m / more)) :arg0-of (l / live-01)) :arg1 (t / thing :manner-of (f / focus-01 :arg0 (p4 / person) :arg2 (p5 / person :mod (o2 / other))))) :prep-in (p6 / particular))
(a / and :op1 (s / show-01 :arg0 (s2 / study-01 :quant (f / few) :mod (e / even)) :arg1 (r / react-01 :arg0 (w / woman) :arg1 (s3 / sensitively :degree (m / more)) :arg2 (i / infant)) :concession (o / or :op1 (h / have-03 :arg0 (w2 / woman) :arg1 (p / person :arg0-of (h2 / have-rel-role-91 :arg1 (w3 / woman) :arg2 (c / child)))) :op2 (h3 / have-03 :polarity - :arg0 (w4 / woman) :arg1 (o2 / or :op1 (p2 / person :arg0-of (h4 / have-rel-role-91 :arg1 (w5 / woman) :arg2 (c2 / child))) :op2 (p3 / person :arg0-of (h5 / have-rel-role-91 :arg1 (w6 / woman) :arg2 (c3 / child))))))))
(c / contrast-01 :arg1 (r / reveal-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (w / world :mod (2 / 29-year-old)) :arg3 (a / apprentice-01 :arg0 (p2 / person)))) :arg1 (t / trace :arg1 (t2 / traces :poss (s / supplement :arg1-of (b / ban-01))))) :arg2 (a2 / and :op1 (l / lenient :arg0 (a3 / agency :name (n / name :op1 (- / -lrb-) :op2 (a4 / anti-doping)) :mod (w2 / world)) :arg1 (b2 / ban-01 :time (d / date-entity :decade (N / N-A)))) :op2 (e / end-01 :arg1 (e2 / early :op1 13))))
(a / and :op1 (o / out :domain (s / streetscooter)) :op2 (a2 / about :op1 (r / road :quant (a3 / about :op1 2014))))
(m / multi-sentence :snt1 (s / say-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (m2 / military :name (n / name :op1 "N-A")))) :arg1 (s2 / stall-01 :arg0 (p2 / person) :arg1 (r / release-01 :arg1 (p3 / product :mod (i / intelligence))))) :snt2 (h2 / hurt-01 :arg0 (a / and :op1 (p4 / person :arg0-of (a2 / analyze-01)) :op2 (p5 / person :arg0-of (a3 / analyze-01))) :arg1 (t / thing :arg2-of (v / view-02 :arg0 (a4 / and :op1 (p6 / person :arg0-of (a5 / analyze-01)) :op2 (p7 / person :arg0-of (a6 / analyze-01)))))))
(c / come-01 :arg1 (p / person :quant 2012) :time (t / then) :time (g / go-08 :arg1 (n / nothing :mod (m / much)) :arg2 (a / and :op1 (s / she) :op2 (s2 / she))))
(c / contrast-01 :arg2 (f / find-02 :arg0 (i / i) :arg1 (e / exhausting :arg0 (i2 / i) :arg1 (w / watch-01 :arg0 (i3 / i) :arg1 (g / game) :mod (e2 / even)) :degree (s / slight)) :mod (a / also)))
(t / try-01 :polarity - :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (u / university :name (n / name :op1 "N-A")) :arg2 (p2 / president)) :arg0-of (h2 / have-org-role-91 :arg1 (r / republican) :arg2 (p3 / president))) :arg1 (h3 / help-01 :arg0 (p4 / person) :arg1 (d / destroy-01 :arg0 (p5 / person) :arg1 (i / isis)) :arg2 (p6 / person)) :time (h4 / host-01 :arg0 (r2 / radio :mod (c / conservative)) :arg1 (h5 / hewitt)) :manner (r3 / reminding :arg0 (p7 / person :arg0-of (h6 / have-org-role-91 :arg1 (r4 / radio :mod (c2 / conservative)) :arg2 (h7 / hewitt))) :arg1 (r5 / remark)))
(c / contrast-01 :arg1 (p / possible-01 :arg1 (r / ramp :arg0 (a / animal :mod (f / five-metre-long)) :arg1 (t / this) :arg2 (h / h :quant 2.6 :location (r2 / relative-position :op1 (r3 / river :name (n / name :op1 "N-A")) :quant (d / distance-quantity :quant (N / N-A) :unit (k / kilometer)))))) :arg2 (e / equal-01 :arg1 (s / speed :mod (m / maximum) :mod (t2 / this)) :arg2 (f2 / fast :degree (m2 / most) :compared-to (s2 / seals))))
(r / result-01 :arg2 (k / know-01 :arg0 (p / person :arg0-of (r2 / research-01)) :arg1 (h / have-manner-91 :arg1 (l / live-01 :arg0 (p2 / person :arg0-of (r3 / research-01))) :degree (l2 / little))))
(k / know-01 :arg1 (h / have-03 :arg0 (p / person :mod (f / female) :mod (f2 / female) :mod (f3 / female)) :arg1 (o / offspring) :time (f4 / first) :time (a / after :quant (m / more-than :op1 4) :arg1-of (l / long-03))) :time (a2 / already))
(c / cite-01 :arg0 (a / and :op1 (p / person :arg0-of (h / have-org-role-91 :arg1 (s / service :mod (i / internal-02)))) :op2 (p2 / person :arg0-of (h2 / have-rel-role-91 :arg1 (p3 / person) :arg2 (l / lawyer)))) :arg1 (a2 / audit-01 :arg0 (s2 / service :mod (i2 / internal-02)) :arg1-of (c2 / cause-01 :arg0 (r / reason :arg0-of (c3 / cause-01 :arg1 (r2 / refuse-01 :arg0 (p4 / person) :arg1 (r3 / release-01 :arg0 (p5 / person) :arg1 (r4 / returns :poss (p6 / person)))))))))
(a / and :op1 (t / take-01 :arg0 (r / round :ord (o / ordinal-entity :value 1)) :arg1 (p / place) :time (d / date-entity :time (t2 / today)) :ord (o2 / ordinal-entity :value 1)) :op2 (b / be-located-at-91 :arg1 (a2 / and :op1 (r2 / round :ord (o3 / ordinal-entity :value 1)) :op2 (d2 / date-entity :year (N / N-A))) :arg2 (p2 / place) :time (d3 / day :ord (o4 / ordinal-entity :value 2) :ord (o5 / ordinal-entity :value 2) :ord (o6 / ordinal-entity :value 2) :ord (o7 / ordinal-entity :value 2))))
(c / cause-01 :arg0 (a / and :op1 (c2 / call-01 :arg0 (w / we) :arg1 (a2 / and :op1 (p / person :arg0-of (h / have-org-role-91 :arg2 (h2 / head-of-state))) :op2 (p2 / person :arg0-of (h3 / have-org-role-91 :arg2 (s / senator))) :op3 (p3 / person :arg0-of (h4 / have-org-role-91 :arg2 (s2 / senator))) :op4 (p4 / person :arg0-of (h5 / have-org-role-91 :arg2 (s3 / senator))) :op5 (p5 / person :arg0-of (h6 / have-org-role-91 :arg2 (s4 / senator)))) :arg2 (r / reverse-01 :arg1 (f / fund-01) :mod (t / this)) :time (i / immediate))) :arg1 (p6 / possible-01 :arg1 (g / get-01 :arg0 (p7 / person) :arg1 (h7 / help-01) :time (f2 / face-01 :arg0 (p8 / person) :arg1 (p9 / problem :arg1-of (l / legal-02))))))
(t / time :time-of (l / look-01 :arg1 (a / and :op1 (n / need-01 :arg1 (c / community) :arg1-of (l2 / legal-02)) :op2 (c2 / community :mod (c3 / client) :poss (c4 / community)))) :purpose (i / invest-01 :arg0 (g / government-organization) :arg2 (w / work-01 :mod (i2 / important) :mod (t2 / this))) :time (n2 / now))
(c / campaign-01 :mod (t / trumps) :mod (d / donald) :time (a / after :op1 (p / pull-01 :arg0 (c2 / campaign-01) :arg1 (g / gun :mod (g2 / gun)) :arg1-of (a2 / allege-01))))
(a / and :op2 (h / have-purpose-91 :arg1 (t / this) :arg2 (b / business :mod (f / flourishing) :consist-of (a2 / and :op1 (f2 / firm :arg0-of (p / provide-01) :mod (i / innumerable :polarity -)) :op2 (f3 / firm :mod (t2 / telecommunication))))))
(p / publish-01 :arg0 (p2 / person :name (n / name :op1 "N-A") :arg1-of (p3 / publish-01 :time (a / after :op1 (a2 / adolescence) :quant (b / between :op1 (t / temporal-quantity :quant (N / N-A) :unit (d / day)) :op2 (t2 / temporal-quantity :quant (N2 / N-A) :unit (d2 / day)) :mod (j / just))))) :arg1 (s / say-01 :arg0 (p4 / person) :arg1 (p5 / possible-01 :arg1 (u / update-01 :arg0 (p6 / person :arg0-of (u2 / use-01)) :arg1 (f / filter :poss (p7 / person)) :location (p8 / program :poss (p9 / person)) :purpose (b2 / block-01 :arg0 (p10 / person) :arg1 (a3 / advertise-01) :location (n2 / network :mod (s2 / society)) :time (o / once) :mod (a4 / again :mod (o2 / once)))))) :time (a5 / after :op1 (a6 / announce-01 :arg0 (f2 / facebook) :arg1 (b3 / block-01 :arg0 (p11 / person) :arg1 (a7 / advertise-01) :location (s3 / site :mod (d3 / desktop) :poss (p12 / person))))) :mod (p13 / plus))
(h / have-condition-91 :arg1 (a / available-02 :arg2 (m / model :consist-of (p / petrol)) :arg3 (m2 / monetary-quantity :quant 20000 :unit (e / euro))) :arg2 (w / want-01 :arg0 (y / you) :arg1 (i / invest-01 :arg0 (y2 / you) :arg2 (m3 / much :degree (q / quite)))))
(m / multi-sentence :snt1 (c / cause-01 :arg0 (a / apply-02 :arg1 (r / risk-01 :arg2 (r2 / risk-01 :arg2 (t / transnational))) :arg2 (r3 / risk-01 :arg2 (t2 / travel-01 :arg0 (t3 / transnational))) :mod (o / only))) :snt2 (a2 / argue-01 :arg0 (c2 / court :mod (r4 / region) :arg1-of (h / high-02 :degree (m2 / more))) :li 18) :snt3 (u / u :li 124 :arg1 (/ / / :quant 124 :mod (/2 / /))))
(o / obligate-01 :arg1 (y / you) :arg2 (p / prepare-01 :arg0 (y2 / you) :arg1 (e / examine-01) :mod (a / at-all)) :degree (t / total))
(m / multi-sentence :snt1 (' / '' :mode (i / imperative) :polite (+ / +) :arg0 (y / you) :mod (j / just)) :snt2 (s / say-01 :arg0 (i2 / i) :arg1 (t / take-01 :mode (i3 / imperative) :polite (+2 / +) :arg0 (y2 / you) :arg1 (n / nap :time (a / afternoon :mod (l / last))))))
(r / recommend-01 :arg1 (b / be-02 :arg1 (c / country)) :manner (e / exact))
(r / recognised :arg0 (p / person :arg0-of (s / serve-01) :mod (c / civil) :quant (a / around :op1 9.30) :mod (c2 / civil) :location (a2 / airport :mod (d / dusseldorf))) :arg1 (g / gang :arg1-of (k / know-02 :arg2 (p2 / police) :source (t / thefts :time (p3 / previous)))))
(a / and :op1 (c / commit-02 :arg0 (a2 / and :op1 (m / man :quant 2) :op2 (w / woman :quant 2)) :arg1 (c2 / crime-02 :quant (m2 / multiple)) :time (s / since :op1 (m3 / mid-july))) :op2 (c3 / commit-02 :arg0 (a3 / and) :arg1 (o / offence :example (w2 / work-01 :arg0 (a4 / and) :arg1 (w3 / work-01 :arg0 (a5 / and)) :manner (w4 / way :mod (p / particular) :mod (p2 / professional))))))
(m / multi-sentence :snt1 (c / classify-01 :arg1 (s / she) :arg2 (a / act-02 :arg0 (s2 / she)) :topic (a2 / act-02 :arg0 (s3 / she))) :snt2 (h / have-03 :arg0 (t / they) :arg1 (h2 / have-to-do-with-04 :arg0 (t2 / they) :arg1 (i / it) :arg2 (n / nothing)) :mod (c2 / certain)))
(a / and :op2 (s / say-01 :arg0 (a2 / and :op1 (p / person :arg0-of (h / have-rel-role-91 :arg1 (p2 / person) :arg2 (s2 / son))) :op2 (p3 / person :arg0-of (h2 / have-rel-role-91 :arg1 (p4 / person) :arg2 (d / daughter)))) :arg1 (a3 / and :op1 (s3 / shock-01 :arg0 (d2 / die-01 :arg1 (p5 / person)) :arg1 (p6 / person)) :op2 (d3 / devastated :domain (p7 / person)) :manner (d4 / die-01 :arg1 (p8 / person)))))
(s / say-01 :arg0 (s2 / she) :arg1 (p / pittance :domain (w / wage-01 :arg0 (w2 / wage-01 :arg0 (w3 / we :quant 7.25) :arg1 (m / multiple :op1 7.25) :time (c / current)) :mod (m2 / minimum))))
(c / conduct-01 :arg0 (m / media :arg1-of (c2 / conduct-01 :arg0 (a / and :op1 (p / person :arg0-of (h / have-org-role-91 :arg2 (h2 / head-of-state))) :op2 (p2 / person :arg0-of (o / offense-02 :arg1 (b / building :name (n / name :op1 "N-A"))))))) :arg1 (p3 / person :arg0-of (h3 / have-org-role-91 :arg2 (h4 / head-of-state))) :duration (m2 / multiple :op1 (t / temporal-quantity :quant (N / N-A) :unit (m3 / month))))
(i / include-91 :arg1 (t / thing :quant 1 :arg1-of (k / key-02) :arg1-of (m / mean-01 :arg2 (f / facility :name (n / name :op1 "N-A") :time (r / recent)))) :arg2 (b / be-located-at-91 :arg1 (f2 / facility :name (n2 / name :op1 "N-A") :arg1-of (m2 / mean-01 :arg2 (a / and :op1 (c / country :name (n3 / name :op1 "N-A")) :op2 (s / side :mod (o / opposite))))) :arg2 (a2 / amr-unknown)))
(c / claim-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg2 (p2 / president))) :arg1 (s / stepping :arg1 (p3 / person :arg0-of (h2 / have-org-role-91 :arg1 (s2 / staff) :arg2 (c2 / chief))) :arg2 (r / request-01 :arg0 (p4 / person) :arg1 (h3 / have-org-role-91 :arg0 (p5 / person) :arg1 (s3 / staff) :arg2 (c3 / chief)))) :time (m / meet-03 :arg0 (p6 / person :arg0-of (h4 / have-org-role-91 :arg2 (p7 / president))) :arg1-of (s4 / show-01 :medium (t / television :mod (s5 / state)))))
(l / lead-03 :arg0 (g / game) :arg2 (i / increase-01 :arg1 (n / number :quant-of (s / step-01 :arg1-of (t / take-01 :arg0 (p / person :mod (' / '') :arg1-of (a / average-03)) :time (d / day :mod (e / each))))) :arg1-of (s2 / significant-02)) :location (w / we))
(f / find-02 :arg1 (s / shoot-02 :arg1 (c / child) :location (s2 / seat :mod (f2 / front) :part-of (c2 / car :arg1-of (2 / 29-year-old :arg2 (a / and :op1 (c3 / condition :arg1-of (c4 / critical-02)) :op2 (r / report-01 :arg0 (s3 / station))))))))
(p / possible-01 :arg1 (w / witness-01 :arg0 (w2 / world) :arg1 (p2 / perform-01 :arg0 (w3 / world) :arg1 (p3 / perform-01 :arg0 (w4 / world) :arg1 (a / and :op1 (b / biles) :op2 (d / douglas) :op3 (l / laurie)) :mod (i / incredible))) :time (n / now) :arg1-of (c / cause-01 :arg0 (a2 / and :op1 (b2 / biles :arg1 (t / thing :arg1-of (p4 / perform-01 :arg0 (w5 / world)) :mod (i2 / incredible))) :op2 (d2 / deliver-01 :arg0 (w6 / world) :arg1 (h / hernandez)) :op3 (d3 / deliver-01 :arg0 (w7 / world) :arg1 (h2 / hernandez)) :op4 (e / et-cetera)))))
(p / prove-01 :arg0 (h / he) :arg1 (r / reputation :poss (h2 / he) :time (f / film)) :manner (c / certain))
(e / explain-01 :arg1 (s / something :arg0-of (f / fascinate-01 :arg1 (w / watch-01 :arg1 (b / benefit-01 :mod (p / probiotics)))) :time (t / time :arg1-of (s2 / same-01))))
(a / and :op1 (h / have-03 :arg0 (w / we) :arg1 (p / problem :mod (h2 / huge) :topic (u / utah))) :op2 (s / say-01 :arg0 (p2 / person :arg0-of (h3 / have-org-role-91 :arg1 (p3 / political-party :name (n / name :op1 "N-A")))) :arg1 (a2 / audience :mod (e / evangelical) :arg1-of (a3 / ask-02 :arg0 (p4 / person) :arg2 (a4 / assist-01 :arg0 (p5 / person) :arg1 (s2 / state :arg1-of (k / key-02) :example (o / or :op1 (o2 / ohio) :op2 (f / florida) :op3 (v / virginia))))))))
(s / say-01 :arg0 (h / he) :arg1 (t / tell-01 :arg0 (h2 / he) :arg1 (t2 / truth) :mod (j / just)))
(f / follow-01 :arg1 (t / trouble) :arg2 (a / and :op1 (t2 / track :mod (t3 / track) :poss (c / country :name (n / name :op1 "Kenya"))) :op2 (a2 / athletes :mod (f2 / field) :poss (c2 / country))) :arg1-of (f3 / follow-01 :arg2 (s / scandal :ord (o / ordinal-entity :value 2) :location (o2 / olympics :mod (r / rio)))))
(p / partnering :arg0 (m / magazine :name (n / name :op1 "N-A") :name (n2 / name :op1 (p2 / photographer) :op2 (b / bellemere) :op3 (b2 / bellemere))) :arg1 (l / launch-01 :arg1 (c / calendar :name (n3 / name :op1 (1 / 1970s) :op2 (p3 / pirelli-inspired))) :purpose (l2 / launch-01 :arg1 (12 / 1970s))) :arg3 (s / score-entity :op1 2017 :op2 2017))
(s / say-01 :arg0 (h / he) :arg1 (r / refer-01 :arg0 (h2 / he) :arg1 (h3 / history :arg1-of (l / long-03) :poss (b / business))) :time (a / after :op1 (a2 / all)))
(d / doubt-01 :polarity - :arg1 (r / return-01 :arg1 (r2 / regulars :poss (h / he)) :time (c / complete-01 :arg1 (r3 / redevelopment :mod (r4 / redevelopment)))))
(c / contrast-01 :arg2 (o / obligate-01 :arg2 (d / do-02 :arg0 (s / status :mod (r / residential)) :arg1 (a / amr-unknown) :arg2 (t / terrorism))))
(m / multi-sentence :snt1 (o / obligate-01 :arg2 (m2 / meet-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg2 (v / vw))) :arg1 (t / thing :arg1-of (r / require-01 :arg0 (c / committee :mod (i / investigative) :poss (i2 / i)))) :degree (f / full))) :snt2 (' / '' :mode (e / expressive)))
(h / hit-01 :arg0 (b / bank :name (n / name :op1 (r / raffeisen) :op2 (v / volks) :op3 (b2 / bank)) :location (l / land :poss (c / country :name (n2 / name :op1 "N-A")))) :arg1 (h2 / headline) :time (i / impose-01 :arg0 (b3 / branch :mod (g / government-organization :arg0-of (g2 / govern-01 :arg1 (t / they)))) :arg1 (i2 / interest-01 :arg1 (i3 / invest-01 :arg0 (b4 / branch) :arg2 (m / more-than :op1 (m2 / monetary-quantity :quant 3 :unit (e / euro)))) :manner (p / penalize-01))))
(a / and :op1 (c / count-01 :arg0 (p / person :quant 55 :arg1-of (f / follow-02 :arg0 (i / i) :source (d / data :arg1-of (f2 / follow-02 :arg0 (i2 / i) :source (a2 / and :op1 (p2 / person :arg0-of (h / have-rel-role-91 :arg1 (i3 / i) :arg2 (s / sister))) :op2 (p3 / person :quant 2 :mod (y / young) :arg0-of (h2 / have-rel-role-91 :arg1 (i4 / i) :arg2 (c2 / child)))))))) :arg1 (a3 / and :op1 (w / woman :quant 2 :mod (y2 / young)) :op2 (m / man :quant 2 :mod (y3 / young)) :op3 (m2 / man :quant 3 :mod (m3 / middle-aged)) :op4 (m4 / man :quant 3 :mod (m5 / middle-aged)) :op5 (m6 / man :quant 8) :op6 (m7 / man :quant 8) :op6 (m8 / man :quant 8) :op6 (m9 / man :quant 8) :op6 (m10 / man :quant 8) :op6 (m11 / man :quant 8) :op7 (w2 / woman :quant 8) :op7 (w3 / woman :quant 8))) :op2 (p4 / perusing :arg0 (d2 / data) :arg1 (t / temporal-quantity :quant (N / N-A) :unit (h3 / hour))))
(m / multi-sentence :snt1 (l / like-01 :arg0 (w / we) :arg1 (p / person :arg0-of (w2 / work-01 :arg2 (s / society)) :poss (t / they))) :snt2 (p2 / pipes :mode (e / expressive) :source (s2 / stack :consist-of (r / record))))
(s / say-01 :arg0 (s2 / shop) :arg1 (i / inspire-01 :arg0 (s3 / shop) :arg1 (g / generation :mod (g2 / generation :arg1-of (f / fresh-04)) :consist-of (o / outfitters :mod (u / urban)))) :mod (l / last))
(a / and :op1 (s / sinks :arg1 (i / it) :arg2 (s2 / steal-01 :arg1 (i2 / it) :manner (s3 / simple))) :op2 (m / make-02 :arg0 (i3 / it) :arg1 (d / disappear-01 :arg1 (i4 / it) :arg4 (u / under :op1 (a2 / armoured))) :time (m2 / measure-01 :arg1 (i5 / it))))
(a / and :op1 (c / change-01 :arg0 (p / person :mod (c2 / country :name (n / name :op1 "N-A"))) :arg1 (a2 / and :op1 (c3 / change-01 :arg0 (p2 / person) :arg1 (h / half-time)) :op2 (p3 / plugged :arg0 (p4 / person) :arg1 (d / dam :name (n2 / name :op1 (f / fijian)))))) :op2 (p5 / plugged :arg0 (p6 / person) :arg1 (d2 / dam :name (n3 / name :op1 (f2 / fijian))) :time (a3 / after :op1 (n4 / now) :quant (a4 / all :op1 (t / temporal-quantity :quant (N / N-A) :unit (m / minute))))) :op3 (g / go-08 :arg1 (t2 / tuisova :mod (j / josua)) :arg2 (t3 / temporal-quantity :quant (N2 / N-A) :unit (m2 / minute)) :time (u / until :op1 (a5 / after :op1 (b / brilliant :arg1-of (b2 / brilliant-01) :mod (s / some))))))
(c / contrast-01 :arg2 (a / and :op1 (s / start-01 :arg0 (t / tax-01 :arg2 (i / import-01)) :arg1 (i2 / impact-01 :arg0 (t2 / tax-01) :arg1 (s2 / steel :arg1-of (i3 / import-01)))) :op2 (p / prospect-02 :arg0 (p2 / prospect-02 :arg1 (e / economy) :location (c2 / country :name (n / name :op1 "N-A"))) :mod (e2 / economy))))
(s / say-01 :arg0 (p / person :mod (e / elderly) :quant (m / most)) :arg1 (a / and :op1 (s2 / sing-01 :arg0 (p2 / person :mod (e2 / elderly) :quant (m2 / most)) :arg1 (a2 / ant)) :op2 (s3 / share-01 :arg0 (p3 / person) :arg1 (e3 / enjoyment :arg1-of (g / get-05 :arg0 (p4 / person) :arg2 (p5 / person :mod (l / like-minded)))))))
(a / and :op1 (- / -lrb- :li 100 :arg1 (r / rate-entity-91 :arg1 100 :arg2 (t / temporal-quantity :quant (N / N-A) :unit (y / year))) :li (4 / 4x100m)) :op2 (h / handed :arg0 (-2 / -rrb- :name (n / name :op1 (/ / /) :op2 (j / jamaica) :op3 (w / world) :op4 (w2 / world) :op5 (w3 / world) :op6 (w4 / world) :op7 (w5 / world))) :arg1 (b / ban-01 :arg1 (s / six-month)) :time (a2 / after :op1 (p / prove-01 :arg1 (t2 / take-01 :arg1 (o / oxycodone))))) :li (42 / 4x100m))
(d / defend-01 :arg0 (p / person :arg0-of (s / say-01 :arg1 (s2 / suffer-01 :arg0 (p2 / person) :arg1-of (b / bad-07)))) :arg1 (s3 / suffer-01 :arg0 (p3 / person) :arg1-of (b2 / bad-07)) :time (a / after :op1 (o / operate-01 :arg1 (p4 / person))))
(s / say-01 :arg0 (r / report-01 :arg0 (p / police)) :arg1 (a / and :op1 (k / kill-01 :arg1 (w / woman :mod (c / country :name (n / name :op1 "N-A")))) :op2 (k2 / kill-01 :arg1 (p2 / person :quant (a2 / around :op1 20) :arg2-of (i / include-91 :arg1 (a3 / and :op1 (w2 / woman :mod (a4 / austrian)) :op2 (p3 / person :quant 3) :op3 (p4 / person :quant 3) :op4 (p5 / person :quant 3) :op5 (p6 / person :quant 3)))))))
(s / say-01 :arg0 (p / person :name (n / name :op1 "N-A")) :arg1 (w / work-01 :arg0 (a / authority :poss (h / he)) :manner (c / close) :purpose (d / decide-01 :arg0 (a2 / authority) :arg1 (d2 / decide-01 :arg0 (a3 / authority)))))
(v / view-02 :polarity - :arg1 (p / person :arg1-of (s / suspect-01 :arg2 (c / carry-out-03 :arg1 (a / attack-01 :arg1 (c2 / center :mod (m / malicious))))) :quant (m2 / many)) :arg2 (o / or :op1 (p2 / person :arg2-of (c3 / criminal-03)) :op2 (p3 / person :arg0-of (h / have-org-role-91 :arg1 (o2 / or :op1 (p4 / person :arg0-of (p5 / perpetrate-01)) :op2 (p6 / person :arg0-of (h2 / have-org-role-91 :arg1 (s2 / scene :mod (f / far-right)) :arg2 (m3 / member))))))))
(p / prepare-02 :arg1 (e / everything :name (n / name :op1 (r / robel) :op2 (k / kiros) :op3 (k2 / kiros))) :arg2 (h / he) :purpose (r2 / race :mod (b / big)))
(s / step :direction (d / down) :time (a / after :op1 (d2 / disappoint-01)))
(d / detail-01 :polarity - :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (c / company) :arg2 (s / spokesman))) :arg1 (d2 / detail :topic (f / friday)) :degree (f2 / further))
(f / find-01 :arg0 (r / report :mod (i / interim) :arg1-of (e / establish-01 :arg0 (f2 / force :mod (t / task) :arg1-of (e2 / establish-01 :arg0 (a / and :op1 (c / committee :mod (s / service :mod (a2 / arm-01)) :arg1-of (e3 / establish-01 :arg0 (p / political-party :name (n / name :op1 "Republican")))) :op2 (c2 / committee :arg0-of (h / have-org-role-91 :arg1 (i2 / intelligence) :arg3 (c3 / committee :mod (i3 / intelligence)))) :op3 (c4 / committee :arg0-of (h2 / have-org-role-91 :arg1 (i4 / intelligence) :arg3 (l / lead-02 :arg0 (p2 / political-party)))) :op4 (p3 / person :arg0-of (h3 / have-org-role-91 :arg1 (i5 / intelligence) :arg3 (d / defend-01))) :op5 (p4 / person :arg0-of (h4 / have-org-role-91 :arg1 (i6 / intelligence) :arg3 (d2 / defend-01))) :op6 (p5 / person :arg0-of (h5 / have-org-role-91 :arg1 (i7 / intelligence) :arg3 (d3 / defend-01))) :op6 (p6 / person :arg0-of (h6 / have-org-role-91 :arg1 (i8 / intelligence) :arg3 (d4 / defend-01))) :op6 (p7 / person :arg0-of (h7 / have-org-role-91 :arg1 (i9 / intelligence) :arg3 (d5 / defend-01))) :op6 (p8 / person :arg0-of (h8 / have-org-role-91 :arg1 (i10 / intelligence) :arg3 (d6 / defend-01))) :op6 (p9 / person :arg0-of (h9 / have-org-role-91 :arg1 (i11 / intelligence) :arg3 (d7 / defend-01))) :op6 (p10 / person :arg0-of (h10 / have-org-role-91 :arg1 (i12 / intelligence) :arg3 (a3 / analyze-01 :arg0 (p11 / person) :arg1 (i13 / intelligence)))) :op6 (p12 / person :arg0-of (h11 / have-org-role-91 :arg1 (i14 / intelligence) :arg3 (a4 / analyze-01 :arg0 (p13 / person) :arg1 (i15 / intelligence)))) :op6 (p14 / person :arg0-of (h12 / have-org-role-91 :arg1 (i16 / intelligence) :arg3 (a5 / analyze-01 :arg0 (p15 / person) :arg1 (i17 / intelligence)))) :op6 (p16 / person :arg0-of (h13 / have-org-role-91 :arg1 (i18 / intelligence) :arg3 (a6 / analyze-01 :arg0 (p17 / person) :arg1 (i19 / intelligence)))) :op6 (p18 / person :arg0-of (h14 / have-org-role-91 :arg1 (i20 / intelligence) :arg3 (a7 / analyze-01 :arg0 (p19 / person) :arg1 (i21 / intelligence)))) :op6 (p20 / person :arg0-of (h15 / have-org-role-91 :arg1 (i22 / intelligence) :arg3 (a8 / analyze-01 :arg0 (p21 / person) :arg1 (i23 / intelligence)))) :op6 (p22 / person :arg0-of (h16 / have-org-role-91 :arg1 (i24 / intelligence) :arg3 (a9 / analyze-01 :arg0 (p23 / person) :arg1 (i25 / intelligence)))) :op6 (p24 / person :arg0-of (h17 / have-org-role-91 :arg1 (i26 / intelligence) :arg3 (a10 / analyze-01 :arg0 (p25 / person) :arg1 (i27 / intelligence)))) :op6 (p26 / person :arg0-of (h18 / have-org-role-91 :arg1 (i28 / intelligence) :arg3 (a11 / analyze-01))) :op6 (p27 / person :arg0-of (h19 / have-org-role-91 :arg1 (i29 / intelligence) :arg3 (a12 / analyze-01))) :op6 (p28 / person :arg0-of (h20 / have-org-role-91 :arg1 (i30 / intelligence) :arg3 (a13 / analyze-01))) :op7 (p29 / person :arg0-of (h21 / have-org-role-91 :arg1 (i31 / intelligence :mod (c5 / country))))))))))
(c / contrast-01 :arg1 (c2 / chasing :arg0 (t / they) :arg1 (o / or :op1 (l / line :name (n / name :op1 (f / finish))) :op2 (w / wall :arg1-of (s / start-01))) :mod (o2 / only :polarity -)) :arg2 (c3 / coverage :arg1 (l2 / line :mod (t2 / taunting) :mod (a / another)) :arg2 (o3 / or :op1 (w2 / world) :op2 (o4 / olympic) :op3 (r / record)) :mod (a2 / also)))
(f / final :domain (f2 / final :time (b / begin-01 :arg1 (b2 / block-01 :arg1 (b3 / block :quant 2) :time (d / day :mod (b4 / both))))))
(d / dominate-01 :arg0 (a / and :op1 (p / person :arg0-of (h / have-org-role-91 :arg1 (g / group :mod (e / ethnic) :mod (t / tigrayan)) :arg2 (m / member))) :op2 (p2 / person :arg0-of (h2 / have-org-role-91 :arg1 (g2 / group :mod (e2 / ethnic) :mod (t2 / tigrayan)) :arg2 (m2 / member)))) :arg1 (e3 / ethiopia) :arg1-of (d2 / dominate-01 :arg0 (m3 / member :arg2-of (h3 / have-org-role-91 :arg1 (g3 / group :mod (e4 / ethnic) :mod (t3 / tigrayan) :arg0-of (m4 / make-01 :arg1 (a2 / and :op1 (p3 / percentage-entity :value (N / N-A)) :op2 (m5 / military) :op3 (c / commerce) :op4 (p4 / politics))))))) :manner (e5 / evident))
(c / contrast-01 :arg2 (a / and :op1 (f / face-01 :arg0 (j / joke-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg2 (p2 / president)))) :arg1 (a2 / ally-01 :arg1 (p3 / person) :arg2 (p4 / position :arg1-of (c2 / comfortable-02 :polarity -)) :arg1-of (c3 / comfortable-02 :polarity -)) :arg1-of (c4 / comfortable-02 :polarity -) :arg1-of (c5 / cause-01 :arg0 (h2 / have-03 :arg0 (p5 / person) :arg1 (t / thing :arg1-of (r / remark-01 :arg0 (p6 / person)))) :arg1-of (c6 / comfortable-02 :polarity -))) :op2 (m / matter-01 :polarity - :arg1 (t2 / thing :arg1-of (r2 / remark-01 :arg0 (p7 / person)))) :arg1-of (c7 / cause-01 :arg0 (f2 / face-01 :arg0 (p8 / person) :arg1 (s / scrutiny :arg1-of (h3 / heighten-01)) :time (c8 / campaign-01 :arg0 (p9 / president))))))
(u / use-01 :arg0 (p / person :mod (c / country :name (n / name :op1 "N-A"))) :arg1 (d / distributor :arg1-of (s / same-01)) :arg2 (a / and :op1 (b / bagels) :op2 (b2 / buy-01 :arg1 (m / model :arg1-of (s2 / same-01 :arg2 (m2 / machine :mod (e / espresso)))))))
(m / measure-01 :arg0 (p / person :arg0-of (r / research-01)) :arg1 (a / and :op1 (p2 / person :arg0-of (r2 / research-01)) :op2 (p3 / person :arg0-of (h / have-org-role-91 :arg1 (a2 / animal) :arg3 (r3 / research-01))) :op3 (p4 / person :arg0-of (h2 / have-org-role-91 :arg1 (a3 / animal) :arg3 (r4 / research-01))) :op4 (p5 / person :arg0-of (h3 / have-org-role-91 :arg1 (a4 / animal) :arg3 (r5 / research-01)))))
(c / contrast-01 :arg2 (p / possible-01 :arg1 (i / invest-01 :arg0 (a / animal :mod (l / large :degree (v / very))) :arg1 (r / resource :poss (a2 / animal)) :arg2 (h / have-06 :arg0 (a3 / animal) :arg1 (l2 / life :arg1-of (l3 / long-03 :degree (m / more)))))))
(r / require-01 :arg1 (r2 / register-02 :arg1 (p / person :mod (a / all) :arg1-of (i / include-91 :arg2 (p2 / person :mod (c / country :name (n / name :op1 "N-A")))))) :arg2 (n2 / name :op1 (' / '') :op2 (p3 / passport) :op3 (p4 / passport) :op4 (p5 / passport) :op5 (p6 / passport)))
(c / contrast-01 :arg2 (l / let-01 :arg0 (i / infrastructure :poss (i2 / it)) :arg1 (l2 / let-down-04 :arg0 (i3 / infrastructure :poss (i4 / it)) :arg1 (i5 / infrastructure :poss (i6 / it)))))
(e / endorse-01 :arg0 (p / person :name (n / name :op1 "Clinton")) :arg1 (r / rule :arg1-of (n2 / name-01 :arg2 (p2 / person :arg0-of (i / invest-01))) :arg0-of (e2 / ensure-01 :arg1 (m / make-01 :arg0 (p3 / person :arg0-of (i2 / invest-01)) :arg1 (r2 / rate-entity-91 :arg1 (m2 / more-than :op1 (m3 / monetary-quantity :quant 1 :unit (d / dollar))) :arg2 (t / temporal-quantity :quant (N / N-A) :unit (y / year))) :arg3 (r3 / rate-entity-91 :arg1 (m4 / more-than :op1 (p4 / percentage-entity :value (N2 / N-A))) :arg2 (t2 / temporal-quantity :quant (N3 / N-A) :unit (y2 / year)))))))
(f / furor :arg0 (m / make-01 :arg0 (p / person :arg0-of (m2 / make-01 :arg1 (t / thing :arg1-of (o / originate-01 :arg2 (p2 / person :arg1-of (o2 / originate-01 :arg2 (n / nucleus)) :arg1-of (o3 / originate-01 :arg2 (c / country :name (n2 / name :op1 "Israel"))))))) :mod (c2 / country :name (n3 / name :op1 "Israel"))) :arg1 (f2 / furor :mod (m3 / media))) :time (a / after :op1 (r / reveal-01 :arg0 (p3 / person) :arg1 (l / list-01 :polarity - :arg0 (a2 / and :op1 (h / hotel :name (n4 / name :op1 (k / kempinski)) :location (b / berlin)) :op2 (c3 / code :mod (d / dialed))) :arg1 (c4 / code :mod (d2 / dialed) :poss (c5 / country)) :manner (e / employee) :arg1-of (c6 / cite-01 :arg0 (c7 / cite-01 :arg1 (p4 / person :source (c8 / customer :mod (a3 / arabic)))))))))
(i / include-91 :arg1 (a / and :op1 (p / person :arg0-of (h / have-rel-role-91 :arg1 (p2 / person :arg0-of (h2 / have-rel-role-91 :arg1 (y / youth) :arg2 (c / child))) :arg2 (c2 / child))) :op2 (p3 / person :mod (y2 / young) :arg0-of (h3 / have-org-role-91 :arg1 (y3 / youth) :arg3 (w / work-01)))) :arg2 (p4 / project :topic (p5 / protect-01 :arg1 (p6 / person :arg0-of (w2 / work-01 :arg1 (p7 / protect-01 :arg1 (c3 / child)))))) :arg2 (p8 / person :arg0-of (w3 / work-01 :arg1 (p9 / protect-01 :arg1 (c4 / child)))) :arg3 (p10 / person :arg0-of (w4 / work-01 :arg2 (s / society)) :poss (g / group)) :time (d / day :mod (s2 / summer) :arg1-of (n / near-02 :arg2 (m / mühlacker))))
(s / say-01 :arg0 (p / person :name (n / name :op1 "N-A")) :arg1 (f / feel-01 :arg0 (p2 / person) :arg1 (r / resemble-01 :arg1 (i / it) :arg2 (t / thing :arg1-of (r2 / resemble-01 :arg2 (f2 / flags :mod (c / country :name (n2 / name :op1 "N-A")) :mod (a / all) :location (s2 / stand)))))))
(c / cause-01 :arg0 (l / lose-02 :arg0 (w / we) :arg1 (t / titles :mod (w2 / world) :quant (m / many :degree (s / so)))) :arg1 (a / amaze-01 :arg1 (w3 / we) :mod (j / just)))
(c / contrast-01 :arg1 (p / put-01 :arg0 (t / this) :arg1 (t2 / they) :arg2 (b / behind :op1 (p2 / product-of :op1 19 :op2 (p3 / percentage-entity :value (N / N-A))))) :arg2 (p4 / put-01 :arg0 (t3 / this) :arg1 (p5 / percentage-entity :value (N2 / N-A)) :arg2 (t4 / temporal-quantity :quant (N3 / N-A) :unit (y / year)) :time (a / ahead :op1 (l / left) :quant (p6 / percentage-entity :value (N4 / N-A) :time (p7 / previous)))))
(r / responsible-03 :polarity - :arg0 (p / person :name (n / name :op1 "N-A") :arg0-of (r2 / responsible-01 :arg1 (p2 / positive :mod (t / test-01))) :arg0-of (o / oppose-01 :arg1 (s / sanctioning))) :ord (o2 / ordinal-entity :value 1 :range (h / history)))
(s / see-01 :arg0 (p / pupil :quant (b / between :op1 19 :op2 11) :arg1-of (a / age-01 :arg2 (b2 / between :op1 (t / temporal-quantity :quant (N / N-A) :unit (y / year)) :op2 (t2 / temporal-quantity :quant (N2 / N-A) :unit (y2 / year))))) :arg1 (p2 / play-01 :arg1 (h / house :mod (s2 / small))) :location (f / framework :poss (j / journey :arg0 (n / nima))))
(a / and :op1 (r / recommend-01 :arg1 (g / go-02 :arg0 (a2 / amr-unknown) :arg4 (l / lab :mod (s / sleep-01)))) :op2 (e / event :mod (a3 / amr-unknown) :location (t / there)))
(t / thing :arg1-of (r / resemble-01 :arg2 (s / see-01 :arg1 (p / policy :topic (a / and :op1 (e / energy) :op2 (c / climate))))))
(a / and :op1 (f / flee-05 :arg0 (w / woman) :arg1 (c / country) :arg2 (c2 / country :arg1-of (o / own-01 :arg0 (w2 / woman)))) :op2 (h / have-part-91 :arg1 (v / violence :mod (s / sex)) :arg2 (l / life :mod (d / day)) :mod (a2 / almost)))
(l / look-01 :arg0 (h / he) :arg1 (a / around :op1 (r / room)) :arg1-of (w / wide-02))
(s / say-01 :arg0 (y / you) :arg1 (w / wrong-04 :arg1 (y2 / you)) :condition (t / think-01 :arg0 (y3 / you) :arg1 (s2 / stop-01 :arg1 (t2 / this) :time (a / as-soon-as :op1 (a2 / arrive-01 :arg1 (t3 / they) :arg4 (g / germany))))))
(m / multi-sentence :snt1 (b / be-located-at-91 :arg1 (t / thing :arg2-of (e / except-01)) :arg2 (l / low-04 :degree (m2 / more))) :snt2 (b2 / be-located-at-91 :arg1 (a / accommodation :quant 2 :mod (c / central)) :arg2 (w / woman) :manner (e2 / exclusive-02)))
(a / appoint-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (s / service :mod (s2 / security) :mod (f / federal)) :arg2 (p2 / person :name (n / name :op1 "mr" :op2 "putin")))) :arg1 (p3 / person :name (n2 / name :op1 "mr" :op2 "ivanov")) :arg2 (p4 / person :arg0-of (h2 / have-org-role-91 :arg2 (d / deputy))) :time (l / late :op1 (d2 / date-entity :decade (N / N-A))) :li (1 / 1990s))
(s / say-01 :arg0 (h / he) :arg1 (a / and :op1 (' / '' :domain (t / this) :mod (h2 / historic)) :op2 (s2 / symbolize-01 :arg1 (b / building :arg0-of (c / cross-02 :arg1 (q / queensferry))))))
(r / remain-01 :arg1 (w / watch-01 :mod (f / flood) :arg1-of (e / effect-03)) :time (u / until :op1 (s / saturday :arg1 (l / louisiana :quant (m / most) :location (s2 / south)))))
(s / say-01 :arg0 (p / person :name (n / name :op1 "N-A")) :arg1 (a / and :op1 (b / become-01 :arg1 (f / flooding) :arg2 (' / '' :arg1-of (s2 / spread-02 :arg1-of (w / wide-02))) :arg1-of (q / quick-02)) :op2 (s3 / say-01 :arg0 (p2 / person) :arg1 (c / consider-02 :arg0 (p3 / person :arg0-of (h / have-org-role-91 :arg2 (o / official))) :arg1 (c2 / consider-02 :arg0 (p4 / person) :arg1 (o2 / order-01 :arg0 (p5 / person)))) :arg1-of (q2 / quick-02))))
(p / provide-01 :arg0 (e / explode-01 :mod (t / this)) :arg1 (b / benefit-01 :arg1 (h / health :mod (g / good))) :arg2 (a / and :op1 (h2 / health :mod (g2 / good)) :op2 (s / succeed-01 :arg1 (h3 / health)) :op3 (s2 / succeed-01 :arg0 (b2 / benefit-01))))
(m / multi-sentence :snt1 (g / glad-02 :arg0 (c / catch-02 :arg1 (p / person :quant (s / some) :arg1-of (i / include-91 :arg2 (p2 / person :arg1-of (d / dirty-02) :arg0-of (l / licks)))) :arg2 (i2 / ied)) :arg1 (i3 / i)) :snt2 (' / '))
(f / find-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (g / government-organization :name (n / name :op1 "N-A") :arg0-of (h2 / house-01)) :arg2 (o / officer))) :arg1 (p2 / property) :location (s / state :mod (d / disrepair)) :time (a / after :op1 (r / remove-01 :arg1 (t / they) :arg2 (p3 / property))))
(s / seat-01 :mod (s2 / safe-01) :arg1-of (n / normal-02) :prep-for (r / republican) :arg1-of (n2 / normal-02))
FAILED_TO_PARSE#Two concepts in a row.
(o / obligate-01 :arg2 (p / put-03 :arg1 (p2 / person :location (r / river :name (n / name :op1 "N-A"))) :arg2 (e / elect-01 :quant (a / approximately :op1 1)) :prep-without (c / consult-01 :arg0 (p3 / person) :arg1 (p4 / person))) :time (u / until :op1 (h / holiday)))
(d / dubbed :arg0 (m / müller :name (n / name :op1 (c / claudia) :op2 (c2 / claudia) :op3 (m2 / müller)) :mod (r / region)) :arg1 (i / it) :manner (c3 / campaign-01 :mod (o / online) :mod (o2 / online)))
(c / come-04 :polarity - :arg1 (c2 / call-03 :arg1 (v / video :mod (m / more))) :arg2 (s / surprise-01) :mod (a / also))
(a / and :op2 (s / see-01 :arg0 (m / market :arg1-of (k / key-02) :quant (s2 / some)) :arg1 (c / change-01 :arg1 (c2 / climates :mod (e / economy)) :arg1-of (l / lead-03 :arg2 (p / purchase-01 :mod (f / few :degree (m2 / more)))))))
(s / say-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (b / bank) :arg2 (d / director :mod (m / manage-01))) :arg0-of (h2 / have-org-role-91 :arg1 (b2 / bank) :arg2 (d2 / director :mod (m2 / manage-01))) :arg0-of (h3 / have-org-role-91 :arg1 (b3 / bank) :arg2 (d3 / director :mod (m3 / manage-01))) :arg0-of (h4 / have-org-role-91 :arg1 (b4 / bank) :arg2 (d4 / director :mod (m4 / manage-01))) :arg0-of (h5 / have-org-role-91 :arg1 (b5 / bank) :arg2 (d5 / director :mod (m5 / manage-01))) :arg0-of (h6 / have-org-role-91 :arg1 (b6 / bank) :arg2 (d6 / director :mod (m6 / manage-01))) :arg0-of (h7 / have-org-role-91 :arg1 (b7 / bank) :arg2 (d7 / director :mod (m7 / manage-01))) :arg0-of (h8 / have-org-role-91 :arg1 (b8 / bank) :arg2 (d8 / director :mod (m8 / manage-01))) :arg0-of (h9 / have-org-role-91 :arg1 (b9 / bank) :arg2 (d9 / director :mod (m9 / manage-01))) :arg0-of (h10 / have-org-role-91 :arg1 (b10 / bank) :arg2 (d10 / director :mod (m10 / manage-01))) :arg0-of (h11 / have-org-role-91 :arg1 (b11 / bank) :arg2 (d11 / director :mod (m11 / manage-01))) :arg0-of (h12 / have-org-role-91 :arg1 (b12 / bank) :arg2 (d12 / director :mod (m12 / manage-01))) :arg0-of (h13 / have-org-role-91 :arg1 (b13 / bank) :arg2 (d13 / director :mod (m13 / manage-01))) :arg0-of (h14 / have-org-role-91 :arg2 (d14 / director :mod (m14 / manage-01))) :arg0-of (h15 / have-org-role-91 :arg2 (d15 / director :mod (m15 / manage-01))) :arg0-of (h16 / have-org-role-91 :arg2 (d16 / director :mod (m16 / manage-01))) :arg0-of (h17 / have-org-role-91 :arg2 (d17 / director :mod (m17 / manage-01))) :arg0-of (h18 / have-org-role-91 :arg2 (d18 / director :mod (m18 / manage-01))) :arg0-of (h19 / have-org-role-91 :arg2 (d19 / director :mod (m19 / manage-01))) :arg0-of (h20 / have-org-role-91 :arg2 (d20 / director :mod (m20 / manage-01))) :arg0-of (h21 / have-org-role-91 :arg2 (d21 / director :mod (m21 / manage-01))) :arg0-of (h22 / have-org-role-91 :arg2 (d22 / director :mod (m22 / manage-01))) :arg0-of (h23 / have-org-role-91 :arg2 (d23 / director :mod (m23 / manage-01))) :arg0-of (h24 / have-org-role-91 :arg2 (d24 / director :mod (m24 / manage-01))) :arg0-of (h25 / have-org-role-91 :arg2 (d25 / director :mod (m25 / manage-01))) :arg0-of (h26 / have-org-role-91 :arg2 (d26 / director :mod (m26 / manage-01))) :arg0-of (h27 / have-org-role-91 :arg2 (d27 / director :mod (m27 / manage-01))) :arg0-of (h28 / have-org-role-91 :arg2 (d28 / director :mod (m28 / manage-01))) :arg0-of (h29 / have-org-role-91 :arg2 (d29 / director :mod (m29 / manage-01))) :arg0-of (h30 / have-org-role-91 :arg2 (d30 / director :mod (m30 / manage-01)))) :mod (j / just))
(h / have-03 :arg0 (i / i) :arg1 (o / or :op1 (r / record :quant (a / about :op1 3000)) :op2 (r2 / record :quant 4000)))
(s / say-01 :arg0 (s2 / shop) :arg1 (i / inspire-01 :arg0 (s3 / shop) :arg1 (g / generation :mod (g2 / generation :arg1-of (f / fresh-04)) :consist-of (o / outfitters :mod (u / urban)))) :mod (l / last))
(s / say-01 :arg0 (h / he) :arg1 (p / provide-01 :arg0 (p2 / person :mod (c / country :name (n / name :op1 "N-A"))) :arg1 (p3 / point :mod (m / meet-03 :arg0 (p4 / person) :arg1 (a / and :op1 (r / refugee) :op2 (p5 / person :arg0-of (v / volunteer-01)))) :arg1-of (c2 / calm))))
(f / find-01 :arg0 (a / and :op1 (p / person :arg0-of (h / have-org-role-91 :arg2 (s / stanning :mod (h2 / helen)))) :op2 (p2 / person :arg0-of (h3 / have-org-role-91 :arg2 (s2 / stanning))) :op3 (p3 / person :arg0-of (h4 / have-org-role-91 :arg2 (s3 / stanning))) :op4 (p4 / person :arg0-of (h5 / have-org-role-91 :arg2 (s4 / stanning))) :op5 (p5 / person :arg0-of (h6 / have-org-role-91 :arg2 (s5 / stanning))) :op6 (p6 / person :arg0-of (h7 / have-org-role-91 :arg2 (s6 / stanning))) :op6 (p7 / person :arg0-of (h8 / have-org-role-91 :arg2 (s7 / stanning))) :op6 (p8 / person :arg0-of (h9 / have-org-role-91 :arg2 (s8 / stanning))) :op6 (p9 / person :arg0-of (h10 / have-org-role-91 :arg2 (s9 / stanning))) :op6 (p10 / person :arg0-of (h11 / have-org-role-91 :arg2 (s10 / stanning))) :op6 (p11 / person :arg0-of (h12 / have-org-role-91 :arg2 (s11 / stanning))) :op6 (p12 / person :arg0-of (h13 / have-org-role-91 :arg2 (s12 / stanning))) :op7 (p13 / person :arg0-of (h14 / have-org-role-91 :arg2 (s13 / stanning))) :op6 (p14 / person :arg0-of (h15 / have-org-role-91 :arg2 (s14 / stanning))) :op6 (p15 / person :arg0-of (h16 / have-org-role-91 :arg2 (s15 / stanning))) :op6 (p16 / person :arg0-of (h17 / have-org-role-91 :arg2 (s16 / stanning))) :op6 (p17 / person :arg0-of (h18 / have-org-role-91 :arg2 (s17 / stanning))) :op7 (p18 / person :arg0-of (h19 / have-org-role-91 :arg2 (s18 / stanning)))) :arg1 (t / thing :arg2-of (m / mean-01)))
(m / multi-sentence :snt1 (h / have-concession-91 :arg1 (a / and :op1 (p / pull-01 :arg0 (t / they) :arg1 (b / boat :quant 2) :arg2 (b2 / boat :mod (t2 / that))) :op2 (p2 / present :arg0 (e / echo :mod (c / coach) :mod (c2 / coach)) :arg1 (g / gold :mod (c3 / coach) :ord (o / ordinal-entity :value 2)) :time (e2 / ever) :arg1-of (c4 / cause-01 :arg0 (p3 / power-01 :arg0 (t3 / they) :arg1 (g2 / gold :ord (o2 / ordinal-entity :value 2) :ord (o3 / ordinal-entity :value 2) :ord (o4 / ordinal-entity :value 2) :poss (w / woman))))))) :snt2 (s / sport :( (a2 / annals) :poss (s2 / sport :poss (c5 / country))))
(s / say-01 :arg0 (p / person :mod (e / elderly) :quant (m / most)) :arg1 (a / and :op1 (s2 / sing-01 :arg0 (p2 / person :mod (e2 / elderly) :quant (m2 / most)) :arg1 (a2 / ant)) :op2 (s3 / share-01 :arg0 (p3 / person) :arg1 (e3 / enjoyment :arg1-of (g / get-05 :arg0 (p4 / person) :arg2 (p5 / person :mod (l / like-minded)))))))
(p / possible-01 :arg1 (o / or :op1 (i / innate :arg1 (c / capable-01 :mod (t / this))) :op2 (d / develop-02 :arg1 (t2 / thing :arg1-of (d2 / develop-02 :arg0 (a / animal))) :arg1-of (p2 / possible-01))))
(i / issue-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (s / state) :arg3 (p2 / prosecute-01))) :arg1 (w / warrant :purpose (a / arrest-01 :arg1 (s2 / sükür :mod (s3 / star) :time (f / former)))))
(c / continue-01 :arg1 (h / hit-01 :arg0 (i / issue-02 :arg0 (d / doping)) :arg1 (h2 / headline) :time (g / game :mod (o / olympic) :location (r / rio))))
(p / plan-01 :arg0 (s / she) :arg1 (r / return-01 :arg1 (s2 / she) :arg4 (h / home) :time (s3 / start-01 :arg1 (s4 / september))))
(c / clear-06 :polarity - :arg1 (c2 / circumstance :mod (s / still) :domain (a / attack-01 :arg1 (p / person :arg0-of (a2 / attack-01)))) :mod (a3 / apparent))
(k / kill-01 :arg1 (p / person :quant 20 :arg1-of (i / include-91 :arg2 (p2 / person :arg0-of (t / tour-01) :mod (f / foreign))) :arg1-of (i2 / include-91 :arg2 (p3 / person :arg0-of (t2 / tour-01) :mod (f2 / foreign)) :arg3 (m / majority))) :time (b / before :op1 (n / now) :quant (l / little :degree (l2 / little))))
(a / and :op1 (c / come-out-09 :arg1 (b / bus) :arg2 (s / side :mod (r / right-hand) :part-of (r2 / road))) :op2 (s2 / skidded :arg0 (h / have-org-role-91 :arg0 (p / person :arg0-of (h2 / have-org-role-91 :arg1 (f / force :mod (p2 / police)) :arg2 (s3 / spokeswoman))) :arg2 (s4 / spokeswoman)) :arg1 (f2 / force :mod (p3 / police) :mod (a2 / aurich) :arg1-of (r3 / report-01))))
(w / win-01 :arg0 (c / country :name (n / name :op1 "N-A") :arg1-of (i / include-91 :arg2 (p / person :mod (c2 / country :name (n2 / name :op1 "N-A"))) :arg3 (o / ordinal-entity :value 4))) :arg1 (s / showdown :arg0 (c3 / country) :arg1 (s2 / showdown :arg0 (c4 / country) :arg1 (c5 / country) :arg2 (c6 / country))) :arg1-of (c7 / cause-01 :arg0 (s3 / setting :arg0 (c8 / country) :arg1 (s4 / showdown :mod (f / field)))))
(c / contrast-01 :arg1 (a / and :op1 (c2 / compete-02 :polarity - :arg3 (d / duration :mod (r / routine)) :manner (d2 / difficult :polarity -)) :op2 (c3 / contrast-01 :arg1 (a2 / and :op1 (c4 / charge-05 :polarity - :arg2 (e / end-01)) :op2 (d3 / difficulties :polarity -)) :arg2 (d4 / duration :poss (r2 / routine)))) :arg2 (a3 / and :op1 (c5 / charge-05 :polarity - :arg2 (e2 / end-01)) :op2 (s / suspension :polarity - :arg1 (s2 / suspend-01 :arg1 (t / time)) :mod (j / just)) :op3 (s3 / suspend-01 :arg1 (a4 / and :op1 (t2 / time) :op2 (g / gravity)) :mod (j2 / just))))
(s / say-01 :arg0 (p / person :arg0-of (a / analyze-01 :arg1 (c / conflict-01))) :arg1 (a2 / and :op1 (l / lack-01 :arg0 (r / regime :time (c2 / current)) :arg1 (g / ground :mod (t / that)) :manner (f / frank)) :op2 (p2 / person :arg0-of (a3 / analyze-01 :arg1 (c3 / conflict-01)))))
(a / and :op1 (o / oliveira :quant 34 :arg1-of (u / use-01 :arg2 (l / live-01 :location (w / williamsburg)))) :op2 (g / go-02 :arg0 (i / i) :arg4 (v / verb) :arg1-of (f / frequent-02)) :li 34)
(t / try-01 :arg0 (p / person :arg0-of (m / mashups :arg1 (s / strange))) :arg1 (o / or :op1 (t2 / taste :arg1 (p2 / person)) :op2 (t3 / take-01 :arg0 (p3 / person) :arg1 (o2 / or :op1 (t4 / taste) :op2 (s2 / sense :mod (c / common :mod (e / even)))))))
(c / characteristics :arg1 (i / it) :arg2 (r / recipes :mod (h / home-ec) :quant (l / lot)))
(a / and :op1 (g / go-08 :arg1 (c / coe :name (n / name :op1 (m / mr.) :op2 (c2 / coe))) :arg2 (b / back) :duration (f / forever)) :op2 (t / thirds :arg0 (c3 / coe)))
(r / result-01 :arg2 (k / know-01 :arg0 (p / person :arg0-of (r2 / research-01)) :arg1 (h / have-manner-91 :arg1 (l / live-01 :arg0 (p2 / person :arg0-of (r3 / research-01))) :degree (l2 / little))))
(c / contrast-01 :arg2 (a / and :op1 (m / manage-01 :arg0 (p / person :arg0-of (r / research-01) :mod (t / this)) :arg1 (p2 / prey :arg0 (p3 / person)) :mod (s / still)) :op2 (f / find-01 :arg0 (p4 / person :arg0-of (r2 / research-01)) :arg1 (r3 / remain-01 :arg1 (p5 / person :arg0-of (r4 / research-01)) :arg3 (p6 / person :arg0-of (r5 / research-01)))) :op3 (f2 / find-01 :arg0 (p7 / person :arg0-of (r6 / research-01)) :arg1 (r7 / remain-01 :arg1 (s2 / shark :mod (a2 / another)) :direction (d / down)) :direction (d2 / down))))
(s / say-01 :arg0 (f / force :arg1-of (b / back-01 :arg0 (c / country :name (n / name :op1 "N-A")))) :arg1 (s2 / say-01 :arg0 (f2 / force) :arg1 (s3 / seize-01 :arg0 (f3 / force) :arg1 (c2 / control-01 :arg1 (m / manbij) :mod (f4 / full)))))
(a / and :op1 (p / pounced :arg0 (p2 / person :name (n / name :op1 "Clinton")) :arg1 (i / issue-02)) :op2 (r / release-01 :arg0 (p3 / person) :arg1 (v / video :medium (o / online) :arg0-of (h / highlight-01 :arg1 (u / urge-01 :arg1 (p4 / person) :arg2 (r2 / release-01 :arg0 (p5 / person) :arg1 (t / thing :arg1-of (t2 / tax-01 :arg0 (p6 / person)))))))))
(a / and :op1 (i / include-01 :arg1 (a2 / and :op1 (f / fishing :location (a3 / around :op1 (c / camp :mod (s / summer)))) :op2 (s2 / spend-01 :arg1 (e / evenings :location (a4 / around :op1 (c2 / campfire))))) :mod (o / other)) :op2 (s3 / spending :arg1 (' / '' :time (n / night)) :time (n2 / night)))
(g / get-22 :arg0 (y / you) :arg1 (w / win-01 :arg0 (y2 / you) :arg1 (i / it) :arg2 (p / person :arg0-of (h / have-rel-role-91 :arg1 (y3 / you) :arg2 (s / significant-other)))))
(d / dispute-01 :arg0 (h / he) :arg2 (a / ahead :op1 (r / ride :arg0 (h2 / he)) :time (y / yesterday)) :time (s / summoned :arg0 (p / person :arg0-of (h3 / have-org-role-91 :arg2 (o / official))) :arg1 (h4 / he) :arg2 (m / measure-01 :arg0 (p2 / person) :arg1 (h5 / high-02 :arg1 (h6 / he)))))
(a / attempt-01 :arg1 (r / reach-01 :arg1 (p / phillip :arg1 (p2 / phillip))))
(a / and :op1 (f / findings :arg1 (p / poll-01 :arg2 (p2 / person :arg0-of (r / represent-01))) :location (o / out :op1 (u / url-entity :value (p3 / polling)))) :op2 (n / newspaper :arg0-of (f2 / favor-01 :arg1 (p4 / political-party :name (n2 / name :op1 "N-A")))) :domain (t / this))
(r / represent-01 :arg1 (p / person :mod (a / afd)) :location (h / house) :ord (o / ordinal-entity :value 1 :range (o2 / ordinal-entity :value 1) :prep-with (p2 / percentage-entity :value (N / N-A))))
(h / hold-01 :arg0 (s / storage :name (n / name :op1 (i / in-built))) :arg1 (r / rate-entity-91 :arg1 8 :arg2 (t / temporal-quantity :quant (N / N-A) :unit (y / year))) :arg3 (s2 / selfies :quant (a / around :op1 2)) :time (t2 / today) :mod (o / original))
(a / and :op1 (e / experience-01 :arg0 (b / branch :mod (p / phone :arg1-of (m / mobile-02)) :part-of (c / company :mod (p2 / phone :mod (p3 / phone :arg1-of (m2 / mobile-02))))) :arg1 (d / disaster :mod (p4 / precedent :polarity -))) :op2 (a2 / and :op1 (s / sell-01 :arg1 (b2 / branch)) :op2 (w / wound :arg1 (b3 / branch)) :time (e2 / eventual)))
(f / fact :topic (l / life) :mod (s / simple) :domain (p / person :quant (m / many)) :time (t / today) :time (d / day :mod (a / all) :mod (a2 / all)) :time (t2 / today))
(h / hold-01 :arg0 (a / and :op1 (c / company :arg0-of (p / provide-01 :arg1 (s / samsung))) :op2 (c2 / company :arg0-of (p2 / provide-01 :arg1 (s2 / samsung)))) :arg1 (s3 / sway) :time (n / now))
(p / publish-01 :arg0 (p2 / person :name (n / name :op1 "N-A") :arg1-of (p3 / publish-01 :time (a / after :op1 (a2 / adolescence) :quant (b / between :op1 (t / temporal-quantity :quant (N / N-A) :unit (d / day)) :op2 (t2 / temporal-quantity :quant (N2 / N-A) :unit (d2 / day)) :mod (j / just))))) :arg1 (s / say-01 :arg0 (p4 / person) :arg1 (p5 / possible-01 :arg1 (u / update-01 :arg0 (p6 / person :arg0-of (u2 / use-01)) :arg1 (f / filter :poss (p7 / person)) :location (p8 / program :poss (p9 / person)) :purpose (b2 / block-01 :arg0 (p10 / person) :arg1 (a3 / advertise-01) :location (n2 / network :mod (s2 / society)) :time (o / once) :mod (a4 / again :mod (o2 / once)))))) :time (a5 / after :op1 (a6 / announce-01 :arg0 (f2 / facebook) :arg1 (b3 / block-01 :arg0 (p11 / person) :arg1 (a7 / advertise-01) :location (s3 / site :mod (d3 / desktop) :poss (p12 / person))))) :mod (p13 / plus))
(s / say-01 :arg0 (h / he) :arg1 (v / vital :domain (e / economy :mod (r / region))))
(r / recommend-01 :arg1 (t / turn-01 :arg0 (y / you) :arg4 (g / gp :poss (y2 / you)) :time (f / first) :condition (s / suffer-01 :arg0 (y3 / you) :arg1 (a / and :op1 (s2 / suffer-01 :arg0 (y4 / you) :arg1 (d / dyslexia :mod (s3 / sleep-01))) :op2 (r2 / recommend-01 :arg0 (y5 / you) :arg1 (w / weeß))))))
(s / surprise-01 :arg0 (m / man :quant 2 :arg0-of (f / flee-05)) :arg1 (m2 / man :quant 2))
(m / multi-sentence :snt1 (m2 / make-02 :arg0 (c / connect-01 :arg1 (h / he) :arg2 (c2 / connect-01 :arg1 (h2 / he) :arg2 (f / family))) :arg1 (w / we) :time (a / always)) :snt2 (s / say-01 :arg0 (p / person :arg0-of (h3 / have-org-role-91 :arg2 (g / galicia :mod (l / louis)))) :arg1 (w2 / we)))
(s / say-01 :arg0 (p / person :name (n / name :op1 "Clinton")) :arg1 (a / and :op1 (h / have-03 :arg0 (s2 / state) :arg1 (t / task :mod (p2 / particular) :instrument-of (r / renovate-01 :arg0 (s3 / state)))) :op2 (n2 / need-01 :arg0 (s4 / state) :arg1 (o / opportunity :purpose (d / do-02 :arg1 (s5 / so))))))
(a / and :op1 (d / develop-02 :arg0 (w / we) :arg1 (l / list :arg1-of (w2 / wait-01 :arg1-of (l2 / long-03))) :time (s / since :op1 (g / get-05 :arg1 (w3 / word) :arg2 (a2 / around)))) :op2 (s2 / say-01 :arg0 (' / '') :arg1 (d2 / develop-02 :arg0 (w4 / we) :arg1-of (l3 / long-03))))
(s / say-01 :arg0 (p / person :name (n / name :op1 "N-A")) :arg1 (f / fail-01 :arg1 (p2 / person :arg0-of (h / have-org-role-91 :arg2 (m / minister))) :arg2 (a / address-02 :arg0 (p3 / person) :arg1 (c / concern-01 :arg0 (c2 / contract-02)))))
(s / say-01 :arg0 (t / thing :arg1-of (s2 / state-01 :arg0 (p / person :name (n / name :op1 "N-A")))) :arg1 (c / contrast-01 :arg1 (h / have-03 :arg0 (p2 / person :arg0-of (m / mr)) :arg1 (d / decreed :purpose (c2 / compensate-01 :arg0 (p3 / person) :arg1 (d2 / duty :poss (d3 / duty :poss (p4 / person))) :prep-as (h2 / head-01 :arg0 (p5 / person) :arg1 (g / government-organization :arg0-of (a / administrate-01 :arg1 (c3 / country :name (n2 / name :op1 "N-A")))))))) :arg2 (g2 / give-01 :polarity - :arg0 (p6 / person) :arg1 (r / reason))))
(i / it :ord (o / ordinal-entity :value 1 :range (b / between :op1 (t / temporal-quantity :quant (N / N-A) :unit (y / year)) :op2 (t2 / temporal-quantity :quant (N2 / N-A) :unit (y2 / year)) :arg1-of (c / complete-01 :time (n / now) :location (a / around :op1 (e / each :arg1-of (i2 / include-91 :arg2 (p / photograph-01 :quant 3 :location (b2 / bridge)))))))) :domain (i3 / it))
(c / contrast-01 :arg2 (b / balance :arg0 (y / you) :arg1 (l / lose-02 :arg1 (h / home :mod (h2 / home :quant 1300 :mod (a / additional)) :arg1-of (- / -lrb- :arg2 (o / over :op1 (t / temporal-quantity :quant (N / N-A) :unit (y2 / year) :mod (n / next)))))) :manner (a2 / amr-unknown)))
(a / and :op1 (s / sitting :arg1 (d / didn :mod (e / edmund)) :arg2 (o / or :op1 (u / up) :op2 (c / crawls)) :time (u2 / until :op1 (i / include-91 :arg1 (h / he) :arg2 3))) :op2 (t / talks :arg0 (h2 / he) :arg1 (t2 / talk-01 :mod (t3 / total)) :mod (s2 / still)))
(p / possible-01 :arg1 (e / equate-01 :arg1 (t / thing :arg1-of (r / resemble-01 :arg2 (c / condition :arg1-of (d / differ-02)))) :arg2 (c2 / condition :quant (n / number) :arg1-of (d2 / differ-02) :example (a / and :op1 (o / one :mod (c3 / country :name (n2 / name :op1 "N-A"))) :op2 (i / infect-01 :arg1-of (r2 / resemble-01 :arg2 (a2 / and :op1 (m / measles) :op2 (z / zika))))))))
(s / say-01 :arg0 (h / he) :arg1 (s2 / stepson :arg0 (p / person :mod (a / another) :arg0-of (l / live-01 :mod (n / nearby))) :arg1 (p2 / person)))
(a / and :op1 (p / phenomenon :mod (g / globe) :domain (p2 / phenomenon :mod (g2 / gut))) :op2 (p3 / possible-01 :arg1 (p4 / provide-01 :arg0 (w / we) :arg1 (p5 / person :arg0-of (c / consume-01)) :arg2 (i / information :mod (m / more) :topic (i2 / it)) :manner (w2 / way :mod (i3 / interesting)))))
(s / say-01 :arg0 (t / thing :arg1-of (c / call-01 :arg2 (c2 / conference))) :arg1 (p / pick-01 :arg0 (p2 / park :name (n / name :op1 "N-A") :arg1-of (p3 / predicting)) :arg1 (' / '' :quant (d / degree :quant (s2 / some)))) :medium (c3 / conference :mod (c4 / conference)))
(m / multi-sentence :snt1 (n / need-01 :arg0 (w / we) :arg1 (g / get-05 :arg1 (w2 / we) :arg2 (b / back) :direction (b2 / back) :destination (a / and :op1 (t / timeless :mod (s / showcasing)) :op2 (n2 / nudity :mod (c / classic) :example (w3 / woman)) :op3 (f / feel-01 :arg0 (w4 / we) :arg1 (c2 / comfortable-02)) :op4 (i / inspire-01 :arg0 (i2 / image :mod (t2 / this)) :arg1 (i3 / image :mod (t3 / this)))))) :snt2 (a2 / announce-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (b3 / body :mod (f2 / female)) :arg3 (s2 / shaw))) :medium (p2 / press)))
(s / say-01 :arg1 (a / and :op1 (h / hear-01 :arg0 (p / person :arg1-of (l / local-02)) :arg1 (n / nothing :topic (e / elect-01 :mod (s2 / summer)))) :op2 (a2 / allow-01 :polarity - :arg1 (v / vote-01 :arg0 (p2 / person) :arg1 (p3 / parliament :mod (s3 / state))))) :arg2 (p4 / person :arg1-of (l2 / local-02)))
(s / sense-02 :polarity - :arg1 (d / discuss-01 :arg1 (t / topic :mod (t2 / this)) :manner (r / reopened)))
(s / spend-01 :polarity - :arg0 (t / they) :arg1 (a / and :op1 (l / loitering :arg0 (t2 / they) :arg1 (s2 / shop :mod (r / record) :poss (t3 / they)) :location (a2 / around :op1 (s3 / street :mod (r2 / record) :location (s4 / street :mod (r3 / record))))) :op2 (f / flicking :arg0 (t4 / they) :arg1 (g / gaze :poss (p / person :arg0-of (c / creepy)))) :op3 (a3 / avoiding :arg0 (t5 / they) :arg1 (g2 / gaze :poss (p2 / person :arg1-of (c2 / creepy) :arg0-of (l2 / looming :arg1 (s5 / shoulders :mod (t6 / television) :arg1-of (f2 / fake-02))) :arg0-of (l3 / looming :arg1 (s6 / shoulders :poss (m / man :mod (u / unsuspecting) :mod (u2 / unsuspecting)))))))) :manner (c3 / certain))
FAILED_TO_PARSE#Number of opening and closing brackets doesn't match.
(a / and :op1 (t / touch-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg2 (h2 / head-of-state))) :arg1 (c / corner :mod (r / right)) :direction (d / down)) :op2 (b / be-located-at-91 :arg1 (p2 / person) :arg2 (u / under :op1 (p3 / product-of :op1 (1 / 17-0) :op2 (12 / 17-0)))))
(a / and :op1 (r / ravouvou :arg1 (r2 / ravouvou :mod (v / vatemo) :quant (s / some :op1 (m / more))) :time (t / then)) :op2 (s2 / storm-02 :arg0 (v2 / vatemo) :arg1 (l / line :mod (g / gb))) :time (t2 / then))
(a / and :op1 (g / gold :mod (e / emotive :degree (m / more))) :op2 (s / say-01 :arg0 (t / that) :arg1 (s2 / something)))
(m / multi-sentence :snt1 (n / need-01 :arg1 (a / and :op1 (t / target :mod (c / climate)) :op2 (o / objective :mod (e / employ-01 :polarity -))) :mod (a2 / also)) :snt2 (e2 / explain-01 :arg1 (a3 / and :op1 (p / person :arg0-of (h / have-org-role-91 :arg1 (p2 / person :arg0-of (h2 / have-org-role-91 :arg2 (c2 / ceo))) :arg2 (c3 / ceo))) :op2 (p3 / person :arg0-of (h3 / have-org-role-91 :arg1 (m2 / metall) :arg2 (c4 / ceo))) :op3 (p4 / person :arg0-of (h4 / have-org-role-91 :arg1 (m3 / metall) :arg2 (c5 / ceo))) :op4 (p5 / person :arg0-of (h5 / have-org-role-91 :arg1 (m4 / metall) :arg2 (c6 / ceo))) :op5 (e3 / et-cetera))))
(e / expect-01 :arg0 (a / association) :arg1 (i / increase-01 :arg1 (t / thing :arg0-of (r / refine-01)) :time (a2 / after :op1 (n / now) :duration (f / few :op1 (t2 / temporal-quantity :quant (N / N-A) :unit (m / month)))) :arg1-of (c / cause-01 :arg0 (s / situation :arg1-of (i2 / improve-01) :topic (o / order)))))
(c / contrast-01 :arg1 (h / have-03 :arg0 (s / she) :arg1 (c2 / cut-02 :quant (s2 / some))) :arg2 (p / possible-01 :arg1 (l / leave-11 :arg0 (s3 / she) :arg1 (h2 / hospital) :time (a / already))))
FAILED_TO_PARSE#Number of opening and closing brackets doesn't match.
(c / company :polarity - :mod (o / only) :arg0-of (c2 / cross-02 :arg1 (t / tripwires :mod (c3 / culture) :mod (t2 / this))) :domain (s / snapchat))
(m / multi-sentence :snt1 (h / have-03 :arg0 (i / it) :arg1 (p / potential) :arg1-of (c / cause-01 :arg0 (h2 / have-03 :arg0 (i2 / it) :arg1 (p2 / potential)))) :snt2 (c2 / contrast-01 :arg1 (q / quaver :arg0 (i3 / it) :arg1 (b / bounced :mod (n / never-ending) :poss (i4 / it))) :arg2 (g / grace :arg1 (g2 / grace :consist-of (a / and :op1 (w / war :name (n2 / name :op1 "N-A")) :op2 (i5 / idiot))) :mod (e / essential) :mod (a2 / also))))
(c / contrast-01 :arg2 (s / seem-01 :arg1 (k / key-02 :arg1 (l / life) :arg2 (l2 / life :arg1-of (l3 / long-03)))))
(a / and :op1 (l / likely-01 :arg1 (a2 / age :arg0 (a3 / animal :arg1-of (i / include-91 :arg2 (a4 / animal))) :arg1 (m / maturity :mod (s / sex))) :arg1-of (l2 / long-03)) :op2 (s2 / seem-01 :arg1 (t / take-01 :arg0 (p / person :mod (g / greenland)) :arg1 (t2 / temporal-quantity :quant (N / N-A) :unit (y / year) :mod (a5 / at-least)) :purpose (p2 / possible-01 :arg1 (t3 / transfer-01 :arg0 (p3 / person))))))
(c / cite-01 :arg0 (a / and :op1 (p / person :arg0-of (h / have-org-role-91 :arg1 (s / service :mod (i / internal-02)))) :op2 (p2 / person :arg0-of (h2 / have-rel-role-91 :arg1 (p3 / person) :arg2 (l / lawyer)))) :arg1 (a2 / audit-01 :arg0 (s2 / service :mod (i2 / internal-02)) :arg1-of (c2 / cause-01 :arg0 (r / reason :arg0-of (c3 / cause-01 :arg1 (r2 / refuse-01 :arg0 (p4 / person) :arg1 (r3 / release-01 :arg0 (p5 / person) :arg1 (r4 / returns :poss (p6 / person)))))))))
(e / email-address-entity :value (c / callum) :domain (p / person :mod (c2 / country :name (n / name :op1 "N-A")) :mod (c3 / country :name (n2 / name :op1 "N-A"))))
(c / create-01 :arg0 (r / retire-01 :arg0 (p / person :arg0-of (r2 / retire-01))) :arg1 (a / and :op1 (v / void :arg1 (p2 / person)) :op2 (t / try-01 :arg0 (p3 / person :mod (m / matt)) :arg1 (f / fill :arg0 (p4 / person)))) :mod (a2 / also))
(f / finish-07 :arg0 (t / they) :arg2 (s / score-entity :op1 3 :op2 51.943))
(r / reality :mod (k / kardashian :polarity -) :mod (j / just :polarity -) :topic (c / cover-01 :arg1 (v / vogue :poss (c2 / country :name (n / name :op1 "N-A")))))
(t / turn-02 :arg0 (c / community) :arg1 (p / person :quant (a / away :op1 160,000)) :arg2 (t2 / temporal-quantity :quant (N / N-A) :unit (y / year)))
(h / hold-01 :arg0 (s / storage :name (n / name :op1 (i / in-built))) :arg1 (r / rate-entity-91 :arg1 8 :arg2 (t / temporal-quantity :quant (N / N-A) :unit (y / year))) :arg3 (s2 / selfies :quant (a / around :op1 2)) :time (t2 / today) :mod (o / original))
(e / expand-01 :arg1 (e2 / expand-01) :purpose (a / and :op1 (c / create-01 :arg1 (j / job :quant 180000 :mod (n / new))) :op2 (l / leave-13 :arg0 (e3 / expand-01) :arg1 (l2 / legacy :mod (a2 / and :op1 (p / person :mod (a3 / around :op1 (a4 / airport))) :op2 (p2 / person :mod (b / both)) :location (a5 / around :op1 (a6 / and :op1 (a7 / airport) :op2 (a8 / across :op1 (c2 / country :name (n2 / name :op1 "N-A"))))))))))
(s / say-01 :arg0 (c / company :name (n / name :op1 "Facebook")) :arg1 (c2 / change-01 :arg0 (w / website :mod (d / desktop) :poss (w2 / website)) :arg1 (c3 / coding :location (a / around :op1 (a2 / advertise-01 :arg1 (w3 / website)))) :purpose (m / make-02 :arg0 (w4 / website) :arg1 (d2 / difficult :degree (m2 / more) :domain (d3 / detect-01 :arg1 (p / part :part-of (p2 / page)))))) :medium (u / url-entity :value (t / tuesday)))
(a / and :op1 (r / resign-01 :arg0 (p / person :name (n / name :op1 "N-A") :arg0-of (h / have-org-role-91 :arg2 (p2 / president :mod (v / vice)))) :arg1 (a2 / and :op1 (c / coach) :op2 (p3 / person :arg0-of (h2 / have-org-role-91 :arg2 (p4 / president :mod (v2 / vice)))) :op3 (p5 / person :arg0-of (h3 / have-org-role-91 :arg2 (p6 / president :mod (v3 / vice)))) :op4 (p7 / person :arg0-of (h4 / have-org-role-91 :arg2 (p8 / president :mod (v4 / vice)))) :op5 (p9 / person :arg0-of (h5 / have-org-role-91 :arg2 (p10 / president :mod (v5 / vice)))))) :op2 (c2 / cite-01 :arg0 (p11 / person) :arg1 (v6 / voice :location (p12 / process-02 :arg1 (d / decision-making :arg1 (t / team))))))
(n / name-02 :arg1 (c / company :arg0-of (w / win-01 :arg1 (a / award-01)) :mod (j / jack)) :arg2 (c2 / coach :mod (g / good :degree (m / most)) :arg1-of (m2 / mean-01 :arg2 (c3 / coach :mod (g2 / good :degree (m3 / most)) :poss (l / league)) :time (s / season :quant 2013-14))))
(c / contrast-01 :arg2 (w / want-01 :arg0 (h / he) :arg1 (t / talk-01 :arg0 (h2 / he) :arg2 (d / doctor) :purpose (f / find-01 :arg0 (h3 / he) :arg1 (t2 / thing :arg2-of (s / solve-01 :arg1 (t3 / thing :arg2-of (s2 / solve-01 :arg1 (t4 / thing :arg2-of (s3 / solve-01 :arg1 (r / risk-01 :arg2 (i / illness :mod (m / mental))) :arg1-of (g / general-02)))))))))))
(p / plan-01 :arg0 (p2 / person :arg0-of (h / have-org-role-91 :arg2 (a / agent :mod (s / spiritual)))) :arg1 (a2 / and :op1 (e / employ-01 :arg0 (p3 / person) :arg1 (p4 / person :arg0-of (h2 / have-org-role-91 :arg2 (a3 / agent :mod (s2 / spiritual))))) :op2 (p5 / person :arg0-of (h3 / have-org-role-91 :arg2 (a4 / agent))) :op3 (p6 / person :arg0-of (h4 / have-org-role-91 :arg2 (a5 / agent))) :op4 (p7 / person :arg0-of (h5 / have-org-role-91 :arg2 (a6 / agent))) :op5 (p8 / person :arg0-of (h6 / have-org-role-91 :arg2 (a7 / agent))) :op6 (p9 / person :arg0-of (h7 / have-org-role-91 :arg2 (a8 / agent))) :op7 (p10 / person :arg0-of (h8 / have-org-role-91 :arg2 (a9 / agent)))))
(a / and :op1 (p / possible-01 :arg1 (b / ban-01 :arg0 (y / you) :arg1 (e / everything :arg1-of (o / oppose-01 :arg0 (y2 / you))) :degree (t / total))) :op2 (o2 / oppose-01 :arg0 (i / i) :arg1 (w / wear-01 :arg1 (k / ketamine))))
(o / obligate-01 :arg2 (r / register-02 :arg0 (h / he) :arg1 (a / agency :mod (a2 / anti-doping :mod (n / nation)) :arg0-of (g / germany :arg1 (p / product-of :op1 (N / N-A) :op2 (- / -rrb-)) :time (b / before :op1 (s / start-01 :arg0 (h2 / he)))))) :condition (w / want-01 :arg0 (h3 / he) :arg1 (m / make-01 :arg0 (h4 / he) :arg1 (l / language :name (n2 / name :op1 "N-A")))))
(h / have-03 :arg0 (t / they) :arg1 (m / more-than :op1 (m2 / monetary-quantity :quant 15000 :unit (e / euro)) :arg2-of (r / result-01)))
(m / mention-01 :arg1 (s / street :polarity - :mod (o / other)) :frequency (o2 / often :degree (s2 / so)) :arg1-of (c / connect-01 :arg2 (v / violence :mod (m2 / military :mod (m3 / macro)) :mod (' / ''))) :time (y / year :mod (t / this)))
(o / obligate-01 :arg2 (i / invest-01 :arg2 (a / and :op1 (i2 / infrastructure) :op2 (t / trumps) :op3 (m / moon)) :mod (a2 / almost)))
(c / cause-01 :arg1 (p / possible-01 :arg1 (l / lead-03 :arg0 (c2 / country :name (n / name :op1 "N-A")) :arg2 (d / discuss-01 :arg0 (c3 / country) :location (p2 / party)))))
(s / say-01 :arg1 (f / fear-01 :arg0 (y / you) :arg1 (c / change-01 :arg1 (r / regime) :arg1-of (c2 / cause-01 :arg0 (f2 / fear-01 :arg0 (i / it) :arg1 (c3 / change-01 :arg1 (r2 / regime)))))) :arg2 (m / mind :arg1-of (g / give-01 :arg0 (y2 / you))))
(b / be-located-at-91 :arg1 (a / and :op1 (p / person :arg0-of (s / starred :arg1 (d / dharma :quant (b2 / between :op1 2005 :op2 2005)) :time (p2 / previous))) :op2 (p3 / person :arg0-of (h / have-org-role-91 :arg1 (g / greg)))) :arg2 (s2 / show-04) :time (s3 / since :op1 (s4 / season :mod (s5 / season :ord (o / ordinal-entity :value 1)))))
(l / like-02 :arg0 (i / i) :arg1 (s / say-01 :arg0 (i2 / i) :arg1 (t / thank-01 :arg0 (i3 / i) :arg1 (y / you) :arg2 (a / and :op1 (p / person :arg0-of (w / write-01)) :op2 (p2 / person :arg0-of (p3 / produce-01 :arg1 (a2 / and :op1 (p4 / person :arg0-of (w2 / write-01)) :op2 (p5 / person :arg0-of (p6 / produce-01 :arg1 (c / crew :mod (a3 / amazing) :poss (w3 / we)))) :op3 (c2 / crew :mod (a4 / amazing) :poss (w4 / we)) :op4 (c3 / crew :mod (a5 / amazing) :poss (w5 / we)) :op5 (f / fan :mod (g / good :degree (m / most)) :arg1-of (h / hope-01 :time (e / ever) :arg1-of (p7 / possible-01))))))))) :mod (j / just))
(o / operation :mod (d / delicate) :arg2-of (i / involve-01 :arg1 (t / tolerances :mod (p / precise :degree (e / extreme)) :mod (p2 / precise :degree (e2 / extreme)) :mod (p3 / precise :degree (e3 / extreme)))) :concession (a / and :op1 (s / size :poss (c / complete-01 :arg0 (a2 / and :op1 (s2 / size :poss (p4 / person :arg0-of (c2 / complete-01 :arg1 (v / viaduct)))) :op2 (w / weight :poss (b / bridge)))) :op2 (w2 / weight :poss (b2 / bridge)))))
(m / multi-sentence :snt1 (a / armor-01 :arg1 (i / it) :location (a2 / area :mod (r / residential) :location (i2 / in-front-of :op1 (h / home :mod (h2 / home))))) :snt2 (s / say-01 :arg0 (p / person :arg0-of (h3 / have-org-role-91 :arg2 (g / general))) :arg1 (f / favor-01 :arg0 (p2 / person) :arg1 (p3 / political-party :name (n / name :op1 "N-A")) :time (e / early :op1 (m2 / month :mod (t / this)) :degree (m3 / more)) :degree (m4 / more))))
(a / and :op2 (i / inspire-01 :arg0 (t / team :consist-of (p / person :arg0-of (h / have-org-role-91 :arg1 (t2 / team :mod (t3 / this)) :arg3 (l / lead-02 :arg0 (t4 / team))))) :arg1 (a2 / and :op1 (p2 / person :arg0-of (h2 / have-org-role-91 :arg1 (t5 / team) :arg3 (l2 / lead-02 :arg0 (p3 / person)))) :op2 (p4 / person :arg0-of (h3 / have-org-role-91 :arg1 (t6 / team :name (n / name :op1 (s / simone))))) :op3 (p5 / person :arg0-of (h4 / have-org-role-91 :arg2 (h5 / head-of-state))) :op4 (p6 / person :arg0-of (h6 / have-org-role-91 :arg2 (h7 / head-of-state))) :op5 (p7 / person :arg0-of (h8 / have-org-role-91 :arg2 (h9 / head-of-state))) :op6 (p8 / person :arg0-of (h10 / have-org-role-91 :arg2 (h11 / head-of-state))) :op7 (p9 / person :arg0-of (h12 / have-org-role-91 :arg2 (h13 / head-of-state))) :op7 (p10 / person :mod (c / color) :quant (m / many :degree (s2 / so))))))
(a / and :op1 (n / need-01 :arg0 (p / person :arg0-of (h / have-rel-role-91 :arg2 (d / dh))) :arg1 (a2 / act-02 :arg0 (p2 / person) :time (n2 / now))) :op2 (c / consult-01 :arg0 (p3 / person) :arg1 (p4 / person :mod (j / junior) :arg0-of (c2 / concern-02 :arg1 (' / '')) :mod (j2 / junior))))
(c / change-01 :arg0 (l / law) :arg1 (l2 / law) :purpose (m / make-02 :arg0 (l3 / law) :arg1 (e / easy-05 :arg1 (c2 / charge-05 :arg0 (l4 / law) :arg1 (p / person) :arg2 (p2 / person :mod (c3 / country :name (n / name :op1 "N-A"))) :prep-under (b / bias-01 :arg1 (p3 / person))))))
(a / and :op1 (o / oppose-01 :arg1 (p / person :quant 1 :arg1-of (i / include-91 :arg2 (p2 / person :quant 2012 :arg1-of (p3 / popular-02 :arg2 (t / temporal-quantity :quant (N / N-A) :unit (y / year))))) :arg1-of (p4 / popular-02 :degree (m / most)) :arg1-of (i2 / include-91 :arg2 (p5 / person :quant 2012))) :arg3 (t2 / temporal-quantity :quant (N2 / N-A) :unit (y2 / year))) :op2 (p6 / point-out-02 :arg0 (p7 / person) :arg1 (s / striking :arg0 (l / likeness :arg0 (c / country :name (n / name :op1 "N-A")) :arg1 (a2 / and :op1 (r / rutherford) :op2 (a3 / actor :mod (p8 / popular)) :arg1-of (p9 / popular-02 :arg2 (a4 / actor)) :arg1-of (p10 / popular-02 :arg2 (a5 / actor))))) :time (y3 / year :mod (t3 / this))))
(a / and :op1 (c / come-01 :arg1 (c2 / criticize-01 :arg1 (p / person :arg0-of (c3 / call-01 :arg1 (p2 / person) :arg2 (o / out)) :quant (m / many))) :manner (t / thick)) :op2 (o2 / oppose-01 :arg0 (p3 / person) :arg1 (b / byron) :manner (f / fast) :manner (c4 / call-01 :arg0 (p4 / person) :arg1 (h / he) :arg2 (o3 / out))))
(r / recommend-01 :arg1 (c / come-01 :arg1 (h / hand) :location (u / under :op1 60)) :manner (c2 / compare-01))
(f / force :mod (a / air) :mod (p / portuguese) :arg1-of (p2 / p-3c :arg2 (l / low-04 :degree (i / incredible))) :arg0-of (s / swooped :arg1 (p3 / plane) :degree (i2 / incredible)))
(c / cause-01 :arg0 (h / have-03 :arg0 (p / person :mod (c2 / country :name (n / name :op1 "N-A"))) :arg1 (p2 / part :part-of (m / mainland)) :time (s / summer :mod (t / this))) :arg1 (k / kill-01 :arg0 (p3 / person) :arg1 (p4 / person :quant 4) :location (i / island :mod (m2 / madeira))))
(c / cause-01 :arg0 (f / friendly-01 :arg1 (a / and :op1 (p / person :name (n / name :op1 "lionel" :op2 "messi")) :op2 (l / language :name (n2 / name :op1 "N-A"))) :mod (e / even)) :arg1 (a2 / all :polarity - :mod (r / really)))
(a / and :op1 (g / gajek :arg0 (c / candidate :poss (t / they) :mod (t2 / top)) :arg1 (l / lake :location (h / houseboat)) :time (c2 / current)) :op2 (h2 / have-03 :arg0 (c3 / candidate) :arg1 (t3 / time :arg1-of (n / nice-01))))
(r / raise-01 :arg1 (t / thing :arg1-of (d / do-02 :arg2 (a / and :op1 (s / security) :op2 (t2 / terrorism)) :mod (a2 / actual))) :arg1-of (c / cause-01 :arg0 (t3 / treat-01 :arg1 (p / person :arg1-of (i / include-91 :arg2 (p2 / person :arg0-of (o / oppose-01 :arg1 (p3 / person :arg0-of (t4 / tolerate-01)))) :arg3 (s2 / some))))))
(s / sell-01 :arg0 (b / brand :name (n / name :op1 (v / vw))) :arg1 (c / car :quant 449,100) :arg2 (r / rate-entity-91 :arg1 (v2 / vehicle :quant 449,100 :mod (f / few :degree (m / more))) :arg2 (r2 / rate-entity-91 :arg1 (v3 / vehicle :quant (p / percentage-entity :value (N / N-A))) :arg2 (t / temporal-quantity :quant (N2 / N-A) :unit (y / year))) :time (y2 / year :mod (p2 / previous))) :mod (g / globe))
(c / contrast-01 :arg2 (t / true :mode (i / interrogative) :domain (t2 / thing :arg2-of (r / result-01))))
(m / multi-sentence :snt1 (l / like-01 :arg0 (w / we) :arg1 (p / person :arg0-of (w2 / work-01 :arg2 (s / society)) :poss (t / they))) :snt2 (p2 / pipes :mode (e / expressive) :source (s2 / stack :consist-of (r / record))))
(a / argue-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (c / court) :arg2 (a2 / authority))) :arg1 (a3 / argue-01 :arg0 (a4 / authority) :arg1 (r / recommend-01 :arg1 (p2 / possible-01 :arg1 (k / knock :arg0 (s / state) :arg1 (s2 / shop :quant 72 :mod (m / makeshift) :arg2-of (i / include-91 :arg1 (a5 / and :op1 (p3 / person :location (i2 / inside :op1 (a6 / and :op1 (p4 / person :arg0-of (s3 / sell-01 :arg1 (g / good))) :op2 (p5 / person :arg0-of (s4 / smoke-02)) :op3 (p6 / person :arg0-of (s5 / sell-01 :arg1 (t / tea :mod (e / energy)))) :op4 (p7 / person :arg0-of (s6 / sell-01 :arg1 (t2 / tea))) :op5 (t3 / tea :arg0-of (s7 / sell-01 :arg1 (t4 / tea) :arg3 (m2 / monetary-quantity :quant 50 :unit (c2 / cent))))))))) :op2 (s8 / sell-01 :arg1 (t5 / tea) :arg3 (m3 / monetary-quantity :quant 50 :unit (c3 / cent)) :arg3 (m4 / monetary-quantity :quant 50 :unit (c4 / cent)))))))) :time (w / week :mod (t6 / this)) :location (c5 / court))
(a / and :op1 (m / move-01 :arg1 (p / person :arg1-of (e / employ-01 :location (s / seattle :mod (w / washington)) :time (p2 / previous))) :arg2 (h / headquarters :poss (c / company :name (n / name :op1 "Microsoft")) :location (s2 / state :name (n2 / name :op1 "California"))) :time (n3 / now)) :op2 (r / report-01 :arg0 (p3 / person :arg0-of (h2 / have-org-role-91 :arg2 (c2 / ceo)) :arg0-of (h3 / have-org-role-91 :arg2 (c3 / ceo)) :arg0-of (h4 / have-org-role-91 :arg2 (c4 / ceo)) :arg0-of (h5 / have-org-role-91 :arg2 (c5 / ceo)))))
(i / include-01 :arg1 (a / and :op1 (t / twitch) :op2 (y / youtube)) :arg2 (p / platform :mod (w / well)))
(f / find-01 :arg0 (a / and :op1 (p / person :arg0-of (h / have-org-role-91 :arg2 (s / stanning :mod (h2 / helen)))) :op2 (p2 / person :arg0-of (h3 / have-org-role-91 :arg2 (s2 / stanning))) :op3 (p3 / person :arg0-of (h4 / have-org-role-91 :arg2 (s3 / stanning))) :op4 (p4 / person :arg0-of (h5 / have-org-role-91 :arg2 (s4 / stanning))) :op5 (p5 / person :arg0-of (h6 / have-org-role-91 :arg2 (s5 / stanning))) :op6 (p6 / person :arg0-of (h7 / have-org-role-91 :arg2 (s6 / stanning))) :op6 (p7 / person :arg0-of (h8 / have-org-role-91 :arg2 (s7 / stanning))) :op6 (p8 / person :arg0-of (h9 / have-org-role-91 :arg2 (s8 / stanning))) :op6 (p9 / person :arg0-of (h10 / have-org-role-91 :arg2 (s9 / stanning))) :op6 (p10 / person :arg0-of (h11 / have-org-role-91 :arg2 (s10 / stanning))) :op6 (p11 / person :arg0-of (h12 / have-org-role-91 :arg2 (s11 / stanning))) :op6 (p12 / person :arg0-of (h13 / have-org-role-91 :arg2 (s12 / stanning))) :op7 (p13 / person :arg0-of (h14 / have-org-role-91 :arg2 (s13 / stanning))) :op6 (p14 / person :arg0-of (h15 / have-org-role-91 :arg2 (s14 / stanning))) :op6 (p15 / person :arg0-of (h16 / have-org-role-91 :arg2 (s15 / stanning))) :op6 (p16 / person :arg0-of (h17 / have-org-role-91 :arg2 (s16 / stanning))) :op6 (p17 / person :arg0-of (h18 / have-org-role-91 :arg2 (s17 / stanning))) :op7 (p18 / person :arg0-of (h19 / have-org-role-91 :arg2 (s18 / stanning)))) :arg1 (t / thing :arg2-of (m / mean-01)))
(e / expect-01 :arg0 (a / association) :arg1 (i / increase-01 :arg1 (t / thing :arg0-of (r / refine-01)) :time (a2 / after :op1 (n / now) :duration (f / few :op1 (t2 / temporal-quantity :quant (N / N-A) :unit (m / month)))) :arg1-of (c / cause-01 :arg0 (s / situation :arg1-of (i2 / improve-01) :topic (o / order)))))
(d / defend-01 :arg0 (p / person :arg0-of (s / say-01 :arg1 (s2 / suffer-01 :arg0 (p2 / person) :arg1-of (b / bad-07)))) :arg1 (s3 / suffer-01 :arg0 (p3 / person) :arg1-of (b2 / bad-07)) :time (a / after :op1 (o / operate-01 :arg1 (p4 / person))))
(a / and :op1 (m / man :mod (f / fastest) :location (w / world :mod (2 / 200m))) :op2 (m2 / man :location (a2 / and :op1 (22 / 200m) :op2 (4 / 400m))) :time (y / year :mod (t / this)))
(a / and :op1 (a2 / age-01 :arg1 (h / he) :arg2 (t / temporal-quantity :quant (N / N-A) :unit (y / year)) :time (t2 / time)) :op2 (a3 / and :op1 (h2 / have-06 :arg0 (h3 / he) :arg1 (t3 / temporal-quantity :quant (N2 / N-A) :unit (m / month)) :time (b / before :op1 (o / olympics))) :op2 (m2 / manage-02 :polarity - :arg0 (h4 / he) :arg1 (d / distance-01 :arg1 (h5 / he) :arg1-of (l / long-03) :time (b2 / before :op1 (b3 / begin-01 :arg1 (c / compete-02)))))))
(t / take-01 :polarity - :arg1 (t2 / threaten-01 :arg1 (e / elect-01)) :mod (s / serious :degree (t3 / too)))
(d / decrease-01 :arg1 (t / thing :arg2-of (p / price-01 :arg1 (t2 / thing :arg2-of (p2 / price-01)))) :arg3 (a / and :op1 (p3 / percentage-entity :value (N / N-A)) :op2 (f / footwear) :op3 (e / equipment :name (n / name :op1 (h / household))) :op4 (e2 / equipment :name (n2 / name :op1 (h2 / household))) :op5 (m / maintain-01 :mod (r / routine)) :op6 (m2 / maintain-01 :arg1 (h3 / health :quant (b / between :op1 2.2 :op2 0.1)))))
(d / dominate-01 :arg0 (a / and :op1 (p / person :arg0-of (h / have-org-role-91 :arg1 (g / group :mod (e / ethnic) :mod (t / tigrayan)) :arg2 (m / member))) :op2 (p2 / person :arg0-of (h2 / have-org-role-91 :arg1 (g2 / group :mod (e2 / ethnic) :mod (t2 / tigrayan)) :arg2 (m2 / member)))) :arg1 (e3 / ethiopia) :arg1-of (d2 / dominate-01 :arg0 (m3 / member :arg2-of (h3 / have-org-role-91 :arg1 (g3 / group :mod (e4 / ethnic) :mod (t3 / tigrayan) :arg0-of (m4 / make-01 :arg1 (a2 / and :op1 (p3 / percentage-entity :value (N / N-A)) :op2 (m5 / military) :op3 (c / commerce) :op4 (p4 / politics))))))) :manner (e5 / evident))
(c / contrast-01 :arg2 (s / say-01 :arg0 (p / person :name (n / name :op1 "mr." :op2 "trump")) :arg1 (s2 / sarcastic :arg1 (h / he) :mod (j / just)) :prep-in (p2 / post :mod (e / early-morning) :mod (e2 / early-morning))))
(c / caught :arg1 (w / whale :name (n / name :op1 (2 / 211-year-old) :op2 (g / greenland) :op3 (g2 / greenland)) :mod (g3 / greenland :mod (22 / 211-year-old))) :location (o / off :op1 (s / state :name (n2 / name :op1 "Alaska"))))
(c / contrast-01 :arg2 (l / let-01 :arg0 (i / infrastructure :poss (i2 / it)) :arg1 (l2 / let-down-04 :arg0 (i3 / infrastructure :poss (i4 / it)) :arg1 (i5 / infrastructure :poss (i6 / it)))))
(a / and :op2 (p / possible-01 :arg1 (o / offer-01 :arg0 (l / location :name (n / name :op1 "frankfurt")) :arg1 (q / quality :mod (g / good :degree (m / more) :compared-to (l2 / life)))) :arg1-of (c / cause-01 :arg0 (a2 / and :op1 (s / system :mod (m2 / medicine) :mod (g2 / good) :poss (l3 / location :name (n2 / name :op1 "frankfurt"))) :op2 (i / infrastructure) :op3 (l4 / level :mod (c2 / crime-02) :arg1-of (l5 / low-04)) :poss (l6 / location :name (n3 / name :op1 "frankfurt"))))))
(t / trigger-01 :arg0 (i / incident) :arg1 (r / respond-01 :arg1 (i2 / incident) :mod (q / quite)) :arg1-of (c / cause-01 :arg0 (c2 / call-01 :arg0 (p / person) :arg1 (i3 / it) :arg2 (s / scandal))))
(s / say-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg2 (a / ambassador))) :arg1 (s2 / surge :prep-in (i / interest-01 :arg1 (f / firm :mod (c / country :name (n / name :op1 "N-A"))) :arg2 (d / do-02 :arg0 (f2 / firm) :arg1 (b / business) :location (c2 / country)))) :time (s3 / since :op1 (l / lifted :arg1 (t / thing :arg2-of (s4 / sanction-02 :arg1 (c3 / country :name (n2 / name :op1 "N-A")) :mod (i2 / international))) :mod (i3 / international))))
(r / return-01 :arg1 (p / person :mod (c / country :name (n / name :op1 "N-A"))) :arg4 (p2 / parliament :mod (r2 / region) :poss (c2 / country :name (n2 / name :op1 "N-A"))) :concession (l / lose-02 :arg0 (l2 / lose-02 :mod (s / small)) :arg1 (p3 / percentage-entity :value (N / N-A)) :arg2 (p4 / percentage-entity :value (N2 / N-A))))
(a / and :op2 (h / have-purpose-91 :arg1 (t / this) :arg2 (b / business :mod (f / flourishing) :consist-of (a2 / and :op1 (f2 / firm :arg0-of (p / provide-01) :mod (i / innumerable :polarity -)) :op2 (f3 / firm :mod (t2 / telecommunication))))))
(e / expose-01 :arg1 (a / and :op1 (h / heat) :op2 (l / light :mod (u / ultraviolet)) :quant (m / much :degree (t / too))) :arg2 (a2 / and :op1 (h2 / heat) :op2 (l2 / light :mod (u2 / ultraviolet)) :quant (s / several :op1 (t2 / temporal-quantity :quant (N / N-A) :unit (y / year)))))
(a / and :op1 (p / pressure-01 :arg0 (t / thing :arg2-of (p2 / price-01 :arg1 (o / oil)) :arg1-of (l / low-04 :degree (m / more))) :arg1 (m2 / monetary-quantity :arg2-of (p3 / price-01 :arg1 (o2 / oil)) :arg1-of (l2 / low-04 :degree (m3 / more))) :arg2 (m4 / monetary-quantity :arg2-of (p4 / price-01 :arg1 (o3 / oil)) :arg1-of (l3 / low-04 :degree (m5 / more)))) :op2 (s / situation :arg0 (d / decide-01 :arg0 (c / country :name (n / name :op1 "N-A"))) :arg1 (l4 / leave-11 :arg0 (c2 / company) :arg1 (u / union-02 :arg1 (c3 / continent :name (n2 / name :op1 "N-A"))))))
(e / expect-01 :arg1 (s / spend-01 :arg1 (p / project :mod (n / new) :location (l / location :name (n2 / name :op1 "north" :op2 "sea"))) :arg3 (m / monetary-quantity :quant 1.4 :unit (d / dollar)) :arg3 (p2 / project :mod (n3 / new) :location (l2 / location :name (n4 / name :op1 "north" :op2 "sea"))) :arg1-of (c / compare-01 :arg2 (a / around :op1 (m2 / monetary-quantity :quant 7 :unit (d2 / dollar) :time (b / before :op1 (n5 / now) :duration (t / temporal-quantity :quant (N / N-A) :unit (y / year))))))))
(a / and :op1 (t / test-01 :arg0 (w / we) :arg1 (e / engine :quant 1.6 :mod (d / diesel) :mod (d2 / diesel))) :op2 (t2 / tested :arg0 (w2 / we) :arg1 (p / powerfully :quant 88 :name (n / name :op1 (h / hr-v) :op2 120 :op3 120 :op4 (h2 / horsepower) :op5 (p2 / powerfully) :op6 (p3 / powerfully) :op7 (p4 / powerfully)))))
(h / head-01 :arg0 (y / you) :arg1 (b / bed) :time (t / time :arg1-of (n / normal-02) :poss (y2 / you)) :time (a / after :op1 (c / cabled :arg1 (y3 / you))))
(m / manage-02 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (f / force :mod (p2 / police) :poss (l / location :name (n / name :op1 "dusseldorf"))) :arg2 (o / officer))) :arg1 (a / arrest-01 :arg0 (p3 / person) :arg1 (a2 / and :op1 (w / woman :quant 2) :op2 (m2 / man :quant 2)) :arg1-of (a3 / age-01 :arg2 (b / between :op1 (t / temporal-quantity :quant (N / N-A) :unit (y / year)) :op2 (t2 / temporal-quantity :quant (N2 / N-A) :unit (y2 / year))))))
(r / rule-01 :arg0 (c / court :mod (a / administrate-01) :mod (b / berlin)) :arg2 (a2 / and :op1 (l / law :polarity -) :op2 (d / day :mod (o / one) :time (l2 / late :degree (m / more))) :op3 (l3 / leave-15 :arg0 (a3 / and :op1 (p / police) :op2 (p2 / police)) :arg1 (s / site) :arg2 (a4 / and :op1 (p3 / person :arg0-of (s2 / support-01)) :op2 (p4 / person :arg0-of (r2 / reside-01))))) :medium (c2 / court :mod (a5 / administrate-01) :mod (b2 / berlin)))
(v / view-02 :arg0 (s / she) :arg2 (a / and :op1 (r / refugee) :op2 (p / person :arg0-of (a2 / administrate-01)) :op3 (p2 / person :arg0-of (a3 / administrate-01)) :op4 (a4 / anyone :mod (e / else)) :op5 (a5 / anyone :mod (e2 / else))))
(c / cause-01 :arg1 (n / need-01 :arg1 (a / and :op1 (p / provide-01 :arg1 (s / sports) :arg2 (p2 / person :arg1-of (l / local-02))) :op2 (c2 / contact-01 :arg0 (y / you) :arg1 (p3 / person :arg1-of (l2 / local-02))) :op3 (a2 / above :op1 (a3 / all)))))
(w / watch-01 :arg0 (s / someone) :arg1 (g / guy :mod (t / this)) :time (t2 / today))
(a / and :op1 (a2 / attack-01 :arg0 (m / man) :arg1 (k / knife :location (d / district :mod (h / harburg) :location (l / location :name (n / name :op1 "hamburg"))))) :op2 (i / injure-01 :arg0 (m2 / man) :arg1 (p / person :arg1-of (i2 / injure-01)) :manner (s / serious)))
(c / contrast-01 :arg2 (c2 / complete-02 :polarity - :arg1 (p / program) :degree (q / quite) :arg1-of (c3 / cause-01 :arg0 (b / build-01 :arg1 (h / home :mod (n / new) :mod 1260) :mod (a / anyway)))))
(c / contrast-01 :arg2 (m / mean-01 :polarity - :arg1 (t / that) :arg2 (p / possible-01 :polarity - :arg1 (r / reach-01 :arg1 (c2 / compromise-01)))))
(s / say-01 :arg0 (p / person :arg0-of (h / have-rel-role-91 :arg2 (g / grandparents))) :arg1 (c / contrast-01 :arg1 (s2 / suffer-01 :arg0 (p2 / person :arg0-of (h2 / have-rel-role-91 :arg2 (d / dd2))) :arg1 (w / wound-01 :arg1 (p3 / person) :quant (m / multiple)) :arg2-of (i / include-01 :arg1 (a / and :op1 (p4 / person :arg0-of (h3 / have-rel-role-91 :arg1 (h4 / he) :arg2 (g2 / groin))) :op2 (l / leg :part-of (p5 / person)) :op3 (a2 / arm) :op4 (a3 / abdomen)))) :arg2 (a4 / awake :arg1 (p6 / person) :time (t / transport-01 :arg1 (p7 / person) :arg3 (h5 / hospital)))))
(s / see-01 :arg0 (s2 / strike-01 :time (e / end-01 :arg1 (d / date-entity :decade (N / N-A)))) :arg1 (a / and :op1 (p / postponement :mod (r / routine) :quant (n / nearly :op1 13,000)) :op2 (a2 / appointments :quant 100000 :mod (r2 / routine))) :purpose (p2 / provide-01 :arg0 (s3 / strike-01) :arg1 (c / cover-01 :arg1 (d2 / doctor) :arg2 (l / line :mod (p3 / picket)))))
(a / and :op1 (l / lead-03 :arg0 (c / culture :mod (p / politics)) :arg2 (e / eye :mod (b / blind-02))) :op2 (r / reveal-01 :arg0 (r2 / report-01 :arg0 (g / government-organization :arg0-of (g2 / govern-01) :arg0-of (d / devastate-01)) :arg0-of (d2 / devastate-01)) :time (t / today)))
(a / and :op1 (c / crazy-03 :arg1 (a2 / and :op1 (l / lookalike :mod (c2 / cyclist) :poss (c3 / country :name (n / name :op1 "N-A"))) :op2 (d / doppelgangers :mod (c4 / celebs) :mod (o / other)))) :op2 (d2 / doppelgangers :arg1 (d3 / doppelgangers :mod (r / rio) :mod (o2 / other))))
(s / say-01 :arg1 (d / die-01 :arg1 (p / person :arg0-of (b / broker-01 :arg1 (b2 / building :name (n / name :op1 "N-A"))) :mod (c / country :name (n2 / name :op1 "N-A"))) :arg1-of (c2 / cause-01 :arg0 (e / eye :part-of (p2 / person) :mod (l / large)))) :arg2 (p3 / person :arg0-of (h / have-org-role-91 :arg1 (c3 / company :name (n3 / name :op1 "N-A")) :arg3 (l2 / lead-02 :arg0 (p4 / person)))) :arg1-of (c4 / cause-01 :arg0 (r / ringer :arg1 (s2 / singer :mod (c5 / cuban-american) :arg0-of (r2 / rival-01 :arg1 (c6 / country))))))
(a / and :op1 (r / represent-01 :arg0 (y / you) :arg1 (a2 / and :op1 (c / cbc) :op2 (c2 / canada))) :op2 (m / make-02 :arg0 (y2 / you) :arg1 (s / sound-01 :arg1 (w / we :quant (a3 / all)) :arg2 (r2 / racist :quant (b / bunch)))))
(a / and :op1 (s / say-01 :arg0 (t / thing :arg1-of (i / include-91 :arg2 (t2 / thing :arg0-of (o / oppose-01 :arg1 (r / respondents)) :arg1-of (a2 / associate-01 :arg2 (n / name :op1 (l / lactic))))) :quant (b / between :op1 2015 :op2 84)) :arg1 (u / use-01 :arg0 (a3 / and :op1 (p / person :arg0-of (b2 / broker-01 :arg1 (b3 / building :name (n2 / name :op1 "N-A")))) :op2 (p2 / person :arg0-of (h / have-org-role-91 :arg2 (g / gut))) :op3 (p3 / person :quant 58 :arg1-of (i2 / include-91 :arg2 (p4 / person :arg0-of (b4 / broker-01 :arg1 (b5 / building :name (n3 / name :op1 "N-A"))))))) :arg1 (u2 / use-01 :arg0 (p5 / person) :arg1 (p6 / product :arg0-of (c / counter-01 :arg1 (b6 / bribe-01)))) :manner (s2 / specific-02))) :op2 (s3 / say-01 :arg0 (p7 / person :quant (b7 / between :op1 2015 :op2 84) :arg1-of (i3 / include-91 :arg2 (p8 / person :arg0-of (o2 / oppose-01 :arg1 (r2 / respondents)) :arg1-of (a4 / associate-01 :arg2 (r3 / respondents))))) :arg1 (u3 / use-01 :arg0 (p9 / person) :arg1 (p10 / product :arg0-of (c2 / counter-01 :arg1 (b8 / bribe-01))))) :medium (s4 / survey-01 :arg1 (a5 / and :op1 (p11 / person :arg0-of (b9 / broker-01 :arg1 (b10 / building :name (n4 / name :op1 "N-A")))) :op2 (g2 / gut))))
(s / start-01 :arg0 (p / person :arg0-of (t / tour-01)) :arg1 (p2 / panic-01 :arg0 (p3 / person) :arg1 (j / jet :name (n / name :op1 (l / low-flying)) :arg1-of (s2 / swooped :arg2 (o / over :op1 (b / beach)) :direction (d / down)))) :time (m / moment))
(o / olympics)
(r / result-01 :arg1 (b / ban-01 :arg1 (a / and :op1 (t / track) :op2 (a2 / athletes :mod (f / field)) :poss (c / country :name (n / name :op1 "Russia")))) :arg2 (g / game :mod (s / summer)))
(m / multi-sentence :snt1 (r / resemble-01 :arg1 (s / she) :arg2 (i / i) :degree (v / very)) :snt2 (r2 / resemble-01 :arg1 (s2 / she) :arg2 (i2 / i) :arg1-of (r3 / resemble-01 :arg2 (p / personality :mod (i3 / italian) :poss (i4 / i) :prep-as (s3 / slash :op1 (g / girl :mod (r4 / rome)) :op2 (b / bartoli :mod (' / '')))))))
(f / feel-01 :polarity - :arg0 (i / i) :arg1 (s / safe-01) :time (b / before :op1 (n / now) :duration (f2 / few :op1 (t / temporal-quantity :quant (N / N-A) :unit (m / month)))) :time (b2 / before :op1 (n2 / now) :duration (f3 / few :op1 (t2 / temporal-quantity :quant (N2 / N-A) :unit (m2 / month)))))
(a / and :op2 (d / design-01 :arg1 (s / system :mod (s2 / speed) :poss (c / camera :mod (s3 / speed))) :arg3 (p / protect-01 :arg0 (s4 / system) :arg1 (s5 / system) :arg2 (v / vandalism))))
(c / cause-01 :arg0 (h / have-03 :arg0 (p / person :arg0-of (h2 / have-rel-role-91 :arg1 (s / she) :arg2 (g / glover))) :arg1 (b / backshall :name (n / name :op1 (s2 / steve) :op2 (s3 / steve) :op3 (s4 / steve)) :medium (t / television))) :arg1 (h3 / have-03 :arg0 (p2 / person) :arg1 (d / desperate) :time (m / month :mod (n2 / next))))
(s / set-02 :arg0 (' / '' :name (n / name :op1 (a / assocation))) :arg1 (e / example :mod ('2 / '' :mod (e2 / entire)) :mod (e3 / entire)))
(a / and :op2 (d / do-02 :arg0 (s / she) :arg1 (s2 / something) :arg2 (a2 / and :op1 (h / health :poss (s3 / she)) :op2 (m / mind :poss (s4 / she)))) :mod (a3 / additional))
(c / connect-01 :arg1 (e / explode-01 :location (h / hua)) :manner (a / apparent))
(s / say-01 :arg0 (a / and :op1 (p / person :arg0-of (h / head-01 :arg1 (j / junta))) :op2 (p2 / person :arg0-of (h2 / head-01 :arg1 (j2 / junta))) :op3 (p3 / person :arg0-of (h3 / head-01 :arg1 (p4 / person :arg0-of (h4 / have-org-role-91 :arg2 (m / minister :mod (p5 / prime))))))) :arg1 (a2 / attempt-01 :arg1 (c / create-01 :arg1 (c2 / chaos) :time (h5 / head-02 :arg0 (c3 / country) :arg1 (a3 / and :op1 (s2 / stability) :op2 (c4 / climate :mod (e / economy) :arg1-of (i / improve-01)))))))
(c / calm :polarity - :arg1 (m / matter :arg1-of (a / actual-02)) :arg2 (m2 / matter :arg1-of (a2 / actual-02)))
(a / and :op1 (s / set-01 :arg1 (p / publication :name (n / name :op1 "N-A")) :arg2 (p2 / p.m. :quant 2 :arg1-of (i / include-91 :arg2 (p3 / p.m. :quant 4 :location (m / moderne :name (n2 / name :op1 (s2 / salle) :op2 21 :op3 21 :op4 21 :op5 (b / blvd) :op6 (b2 / blvd) :op7 (b3 / blvd))))))) :op2 (b4 / blvd :arg1 (w / wilshire :quant 3050) :time (f / former)))
(a / and :op2 (s / say-01 :arg0 (j / journal :name (n / name :op1 (m / mr.) :op2 (s2 / street) :op3 (s3 / street)) :mod (s4 / street) :mod (n2 / new) :poss (h / he)) :arg1 (a2 / await-01 :arg1 (b / base :name (n3 / name :op1 (m2 / mr.) :op2 (m3 / mr.)) :mod (n4 / new) :poss (h2 / he)) :arg2 (b2 / base :mod (n5 / new) :mod (n6 / new) :poss (h3 / he))) :condition (a3 / achieve-01 :arg0 (a4 / and :op1 (o / offer-01 :arg1 (c / consciousness)) :op2 (a5 / achieve-01 :arg1 (a6 / athletes :mod (m4 / male) :beneficiary (a7 / and :op1 (o2 / ogling) :op2 (o3 / objectification)))) :mod (o4 / only)) :arg1 (r / raise-01 :arg1 (c2 / consciousness)))))
(m / meet-01 :arg0 (g / government-organization :arg0-of (g2 / govern-01)) :arg1 (r / resist-01 :arg1 (p / politics) :location (e / ethiopia)) :manner (r2 / resist-01 :arg0 (g3 / government-organization :arg0-of (g4 / govern-01)) :arg1 (p2 / politics)))
(b / become-01 :arg1 (m / meat) :arg2 (l / luxury :mod (s / sparingly) :mod (s2 / sparingly)) :duration (t / temporal-quantity :quant (N / N-A) :unit (y / year)))
(m / mean-01 :arg1 (t / this) :arg2 (b / big :degree (m2 / more :degree (m3 / much)) :compared-to (l / lose-02 :arg0 (h / heat) :arg1 (r / rate-entity-91 :arg1 (u / under :op1 (m4 / monetary-quantity :quant (N / N-A))) :arg2 (m5 / mouse)))))
(a / and :op1 (s / say-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (b / bank :name (n / name :op1 (- / -lrb-)) :mod (c / central) :part-of (b2 / bank :name (n2 / name :op1 (-2 / -lrb-)) :mod (c2 / central) :part-of (b3 / bank :name (n3 / name :op1 (-3 / -lrb-))))))) :arg1 (a2 / and :op1 (r / responsible-03 :arg0 (p2 / person) :arg1 (a3 / and :op1 (p3 / policy :mod (m / money)) :op2 (s2 / supervise-01 :arg1 (b4 / bank :mod (l / large :degree (m2 / most)) :location (e / eurozone))))) :op2 (r2 / responsible-03 :arg0 (p4 / person) :arg1 (b5 / bank :mod (l2 / large :degree (m3 / most) :compared-to (b6 / bank :mod (l3 / large :degree (m4 / most)) :location (e2 / eurozone))))))) :op2 (c3 / come-01 :arg1 (a4 / all) :arg3 (t / together) :purpose (r3 / represent-01 :arg0 (p5 / person) :arg1 (b7 / bank :mod (i / important :degree (f / further)) :example (a5 / and :op1 (e3 / eiopa) :op2 (e4 / eiopa) :op3 (e5 / esrb) :op4 (e6 / esrb))))))
(p / photographed :arg0 (s / she) :arg1 (p2 / picture :poss (p3 / person :arg0-of (h / have-rel-role-91 :arg1 (s2 / she) :arg2 (d / daughter)))) :purpose (l / love-01 :arg0 (s3 / she) :arg1 (f / forum)))
(a / and :op1 (l / leave-13 :arg0 (l2 / leave-11 :arg0 (p / person) :arg1 (a2 / and :op1 (r / relation-03 :arg0 (p2 / person) :manner (v / violent)) :op2 (d / debts :arg0 (p3 / person) :arg1 (d2 / debt)))) :arg1 (a3 / and :op1 (r2 / relation-03 :arg0 (p4 / person) :manner (v2 / violent)) :op2 (u / unmanageable :arg0 (p5 / person) :arg1 (d3 / debt)))) :op2 (s / show-01 :arg0 (t / thing :arg1-of (r3 / report-01) :mod (t2 / this)) :arg1 (p6 / possible-01 :polarity - :arg1 (g / get-01 :arg0 (p7 / person) :arg1 (h / help-01 :arg0 (p8 / person))))))
(h / hold-01 :arg0 (s / storage :name (n / name :op1 (i / in-built))) :arg1 (r / rate-entity-91 :arg1 8 :arg2 (t / temporal-quantity :quant (N / N-A) :unit (y / year))) :arg3 (s2 / selfies :quant (a / around :op1 2)) :time (t2 / today) :mod (o / original))
(a / and :op1 (s / sell-01 :arg1 (d / device :quant (a2 / around :op1 1400000000))) :op2 (s2 / samsung :arg1 (d2 / device)) :op3 (m / make-01 :arg0 (a3 / and) :arg1 (t / thing :quant 555 :arg1-of (i / include-91 :arg2 (d3 / device)))))
(l / look-01 :frequency (r / rate-entity-91 :arg3 (t / temporal-quantity :quant (N / N-A) :unit (d / day))) :frequency (r2 / rate-entity-91 :arg3 (t2 / temporal-quantity :quant (N2 / N-A) :unit (d2 / day))) :time (n / nowadays))
(a / and :op1 (r / realize-01 :arg0 (c / company :quant (m / many)) :arg1 (r2 / risk-01 :arg2 (r3 / ransomware))) :op2 (p / protect-01 :arg0 (c2 / company) :arg1 (d / data :poss (c3 / company)) :manner (g / good :degree (m2 / more))) :time (n / now))
(s / say-01 :arg0 (t / thing :arg1-of (j / judge-01)) :arg1 (v / violate-01 :polarity - :arg0 (o / organiser) :arg1 (t2 / thing :arg2-of (o2 / obligate-01 :arg1 (c / country) :mod (i / information)))))
(a / and :op1 (j / jam :arg0 (t / traffic) :arg1 (b / bridge :location (o / over :op1 (w / weg :mod (a2 / albersloher))))) :op2 (g / go-01 :arg1 (t2 / traffic) :arg4 (o2 / over) :mod (e / even) :frequency (s / sometimes)))
(n / night :time (n2 / night))
(a / and :op1 (f / feel-02 :arg0 (p / person :quant (m / many)) :arg1 (f2 / feel-02 :arg0 (p2 / person :quant (m2 / many)) :arg1 (s / sleep-01 :arg0 (p3 / person) :location (t / throughout :op1 (n / night))) :time (n2 / night))) :op2 (s2 / say-01 :arg0 (p4 / person) :arg1 (a2 / and :op1 (w / wagenknecht :arg0 (p5 / person :arg0-of (h / have-org-role-91 :arg1 (b / board :mod (g / general)) :arg2 (m3 / member))) :arg1 (p6 / person :arg0-of (h2 / have-org-role-91 :arg1 (b2 / board :mod (g2 / general)) :arg2 (m4 / member))) :location (v / varel :arg1-of (l / low-04 :degree (m5 / more)))) :op2 (h3 / have-org-role-91 :arg0 (p7 / person) :arg2 (m6 / member)))))
(p / post-01 :arg0 (p2 / person :arg0-of (d / deibler) :time (f / former)) :arg1 (p3 / perform-02 :arg0 (p4 / person) :arg1 (d2 / disappoint-01)) :arg2 (p5 / perform-01 :arg1 (d3 / disappoint-01) :location (o / olympics)) :time (f2 / former))
(v / view-02 :arg0 (s / she) :arg2 (a / and :op1 (r / refugee) :op2 (p / person :arg0-of (a2 / administrate-01)) :op3 (p2 / person :arg0-of (a3 / administrate-01)) :op4 (a4 / anyone :mod (e / else)) :op5 (a5 / anyone :mod (e2 / else))))
(s / say-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (g / group :arg0-of (w / work-01)) :arg2 (k / kunde))) :arg1 (m / more :domain (p2 / person :arg0-of (v / volunteer-01)) :compared-to (a / appreciate-02 :arg0 (p3 / person) :arg1 (a2 / available-02 :arg2 (p4 / person :arg0-of (h2 / help-01 :arg1 (h3 / help-01 :arg0 (p5 / person) :arg1 (e / experience-01 :arg0 (a3 / anyone) :arg1 (d / difficulty))))) :time (n / now))) :degree (m2 / more-than)))
(b / break-up-08 :arg1 (m / man :quant 2 :arg1-of (k / know-01 :polarity -)) :arg4 (a / apartment) :location (a2 / apartment :location (a3 / apartment :location (o / on :op1 (v / value-interval :op1 8.50 :op2 8.50)))))
(s / say-01 :arg0 (t / thing :arg1-of (r / report-01) :mod (i / interim)) :arg1 (i2 / increase-01 :arg1 (p / profit-01) :arg3 (m / monetary-quantity :quant 89.5 :unit (e / euro)) :arg4 (m2 / monetary-quantity :quant 110.5 :unit (e2 / euro)) :time (b / before :op1 (i3 / increase-01 :arg1 (a / and :op1 (i4 / interest-01) :op2 (t2 / tax-01)) :arg3 (m3 / monetary-quantity :quant 110.5 :unit (e3 / euro)) :arg4 (m4 / monetary-quantity :quant 110.5 :unit (e4 / euro))))))
