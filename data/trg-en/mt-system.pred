(p / photographer :arg1 (p2 / person :name (n / name :op1 "Seppo" :op2 "Sirkka")) :arg2 (c / championship :quant 1982 :location (c2 / country :name (n2 / name :op1 "Argentina"))) :mod (o / only) :arg1-of (c3 / cause-01 :arg0 (m / mr :arg0 (a / and :op1 (p3 / person :name (n3 / name :op1 "Kosonen") :arg0-of (h / have-org-role-91 :arg1 (c4 / country :name (n4 / name :op1 "Finland")) :arg2 (a2 / agent :mod (c5 / coach)) :time (c6 / current)) :ord (o2 / ordinal-entity :value 2)) :op2 (p4 / person :name (n5 / name :op1 "Jouni" :op2 "Parkkali") :arg0-of (h2 / have-org-role-91 :arg1 (c7 / country) :arg2 (a3 / agent) :time (c8 / current))) :ord (o3 / ordinal-entity :value 2)) :arg1 (p5 / person :arg0-of (p6 / play-01 :mod (g / globe))))))
(o / obligate-01 :arg2 (a / access-01 :arg1 (f / facility :mod (h / home) :quant (a2 / all)) :mod (a3 / also)))
(s / say-01 :arg1 (i / interest-01 :arg1 (c / country :name (n / name :op1 "India")) :arg2 (c2 / country :name (n2 / name :op1 "Japan"))) :mod (a / also))
(f / feel-01 :arg0 (h / he) :arg1 (b / be-located-at-91 :arg1 (p / person :name (n / name :op1 "Ailinn" :op2 "Solomons")) :arg2 (f2 / foot :part-of (h2 / he))) :time (a / alone :domain (p2 / person) :mod (a2 / again)))
(s / shrunk :arg1 (a / and :op1 (t / turnover :mod (s2 / supermarkets)) :op2 (h / hypermarketti)) :arg2 (m / more-than :op1 (p / percentage-entity :value (N / N-A))) :time (b / begin-01 :arg1 (y / year)))
(w / withdraw-01 :arg0 (p / public) :arg1 (i / image) :time (s / summer :mod (t / this)))
(a / and :op1 (f / flee-05 :arg0 (p / person :name (n / name :op1 "Thomas" :op2 "Thabane") :arg0-of (h / have-org-role-91 :arg2 (m / minister :mod (p2 / prime)))) :arg1 (c / country)) :op2 (s / say-01 :arg0 (p3 / person) :arg1 (a2 / and :op1 (b / besiege :arg0 (a3 / apartment :mod (o / official) :poss (p4 / person)) :arg1 (a4 / army)) :op2 (s2 / seize-01 :arg0 (a5 / army) :arg1 (b2 / building :mod (g / government-organization :arg0-of (g2 / govern-01))) :location (p5 / peninsula :name (n2 / name :op1 "N-A") :mod (c2 / capital))))))
(m / multi-sentence :snt1 (r / referendum :topic (d / depend-01 :polarity -)) :snt2 (s / september :li 18))
(l / leak-01 :arg0 (p / person :name (n / name :op1 "Jennifer" :op2 "Lawrence")) :arg1 (h / hakkeri :medium (o / online)))
(s / sea :arg1-of (f / freeze-01) :arg0-of (o / oppose-01 :arg1 (t / they)) :mod (h / huge :arg1-of (f2 / freeze-01)))
(s / say-01 :arg0 (p / presence :mod (o / online) :poss (n / newspaper :mod (d / day))) :arg1 (a / appear-02 :arg1 (a2 / affair :mod (n2 / nee) :mod (n3 / nee)) :arg1-of (p2 / present-01 :arg0 (a3 / and :op1 (p3 / person :arg0-of (h / have-org-role-91 :arg1 (p4 / police) :arg2 (o2 / official))) :op2 (p5 / person :arg0-of (h2 / have-org-role-91 :arg1 (g / government-organization :arg0-of (g2 / govern-01 :arg1 (c / city :name (n4 / name :op1 "N-A")))) :arg2 (o3 / official)))) :arg2 (a4 / and :op1 (p6 / person :arg0-of (h3 / have-org-role-91 :arg1 (p7 / police) :arg2 (o4 / official))) :op2 (p8 / person :arg0-of (h4 / have-org-role-91 :arg1 (g3 / government-organization :arg0-of (g4 / govern-01 :arg1 (c2 / city))) :arg2 (o5 / official)))) :location (b / blackmail :location (o6 / organization :name (n5 / name :op1 "Public" :op2 "Prosecutor" :op3 "'s" :op4 "Office") :location (f / friday))))))
(c / change-01 :arg0 (p / plan-01 :arg0 (t / town)) :arg1 (w / want-01 :arg0 (c2 / city) :arg1 (a / allow-01 :arg0 (c3 / city) :arg1 (c4 / continuation :mod (a2 / area :mod (t2 / tourism))))))
(m / multi-sentence :snt1 (p / person :name (n / name :op1 "Seth" :op2 "Robert" :op3 "Robert" :op4 "Tantawy")) :snt2 (d / differ-02 :polarity - :arg1 (p2 / presence :poss (i / image)) :arg2 (s / sell-01 :arg1 (p3 / product :arg1-of (s2 / steal-01))) :mod (a / any)))
(s / say-01 :arg1 (w / want-01 :arg0 (h / he) :arg1 (s2 / same-01)) :arg2 (p / person :name (n / name :op1 "Kevern")))
(o / obligate-01 :arg1 (p / person :arg0-of (h / have-rel-role-91 :arg1 (h2 / he) :arg2 (f / father))) :arg2 (e / escape-01 :arg0 (p2 / person) :arg1 (l / lip :poss (p3 / person))) :time (a / always) :time (b / before :op1 (' / '' :arg0 (p4 / person :arg0-of (h3 / have-rel-role-91 :arg1 (h4 / he) :arg2 (f2 / father))) :arg1 (p5 / person :arg0-of (h5 / have-rel-role-91 :arg1 (h6 / he) :arg2 (f3 / father))))))
(d / decide-01 :arg0 (g / government-organization :arg0-of (g2 / govern-01 :arg1 (c / country :name (n / name :op1 "China")))) :arg1 (g3 / give-01 :arg0 (d2 / decide-01) :arg1 (p / power) :arg2 (p2 / person :mod (c2 / communism)) :purpose (w / weed :arg0 (p3 / person) :arg1 (c3 / candidate :arg0-of (o / obedient :polarity - :arg1 (c4 / city :name (n2 / name :op1 "Beijing")))))))
(a / and :op1 (s / silver :domain (n / nailonpaita :mod (k / kudottu))) :op2 (s2 / sensors :arg1 (i / information :topic (a2 / and :op1 (m / mokkula :arg1 (i2 / information)) :op2 (ä / älypuhelin :arg1 (i3 / information)) :mod (s3 / still)))))
(p / part :arg1 (s / star :location (s2 / star :location (s3 / star :quant 17))))
(h / have-03 :arg0 (p / person :arg0-of (h2 / have-org-role-91 :arg1 (t / team :mod (n / nation) :poss (l / location :name (n2 / name :op1 "Trinidad" :op2 "and" :op3 "Tobago"))) :arg2 (p2 / person :name (n3 / name :op1 "Jones") :mod (n4 / nation)))) :arg1 (m / match-03 :quant 35))
(c / comment-01 :polarity - :arg0 (a / and :op1 (p / person :name (n / name :op1 "Palmer")) :op2 (p2 / person :name (n2 / name :op1 "Chuck")) :op3 (p3 / person :name (n3 / name :op1 "Strahovski") :arg0-of (h / have-org-role-91 :arg2 (s / suckers))) :op4 (p4 / person :name (n4 / name :op1 "Browning") :arg0-of (h2 / have-org-role-91 :arg2 (s2 / suckers))) :op5 (p5 / person :name (n5 / name :op1 "Browning") :arg0-of (h3 / have-org-role-91 :arg2 (s3 / suckers)))) :arg3 (h4 / hack-04 :arg0-of (h5 / hack-04)) :time (y / yesterday))
(i / invest-01 :arg0 (a / apollo) :arg1 (m / monetary-quantity :quant 1 :unit (d / dollar :mod (r / renminbi))) :arg2 (c / company :mod (c2 / cruise) :mod (m2 / monetary-quantity :quant 1 :unit (d2 / dollar :mod (r2 / renminbi)))))
(m / multi-sentence :snt1 (c / contrast-01 :arg1 (g / good :domain (b / battle-01)) :arg2 (g2 / good :degree (m2 / more :degree (l / little)) :domain (b2 / battle-01))) :snt2 (s / see-01 :arg0 (p / person :name (n / name :op1 "Vampula") :arg0-of (h / have-org-role-91 :arg2 (c2 / coach))) :arg1 (p2 / person :name (n2 / name :op1 "Teemu" :op2 "Mäkikyrö") :arg0-of (h2 / have-org-role-91 :arg2 (c3 / coach)))))
(t / total-01 :arg1 (g / game :mod (c / city :name (n / name :op1 "Athens"))) :arg2 (m / more-than :op1 100) :arg1-of (r / report-01))
(g / grow-03 :arg1 (g2 / good :mod (e / everyday)) :arg1-of (i / instead-of-91) :mod (a / almost :op1 (p / percentage-entity :value (N / N-A))))
(d / do-02 :arg1 (t / that :quant (a / all)))
(p / possible-01 :arg1 (e / explain-01 :arg0 (p2 / perspective :topic (a / amount :quant-of (a2 / amount :quant-of (a3 / amount :quant-of (g / grow-01))))) :manner (a4 / amr-unknown) :mod (a5 / also)) :mod (a6 / also))
(t / try-01 :arg0 (a / authority) :arg1 (c / curb-01 :arg0 (a2 / authority) :arg1 (u / use-01 :arg1 (h / holiday :name (n / name :op1 (m / magnus))) :arg1-of (c2 / control-01 :polarity -))) :manner (r / reduce-01 :arg0 (a3 / authority) :arg1 (n2 / number :quant-of (p / person :arg0-of (p2 / participate-01)) :location (p3 / pubs :mod (n3 / notorious)))) :time (s / since :op1 (t2 / then)))
(h / have-part-91 :arg1 (e / evening :time (e2 / early)) :arg2 (a / available-02 :arg2 (l / location :name (n / name :op1 "Nelonen" :op2 "Expo") :mod (m / media)) :arg3 (f / fair :mod (t / trade-01 :medium (t2 / tv)) :mod (g / grand))))
(p / peace :polarity - :mod (w / whole))
(m / meet-03 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (c / country :name (n / name :op1 "India")) :arg2 (m2 / minister :mod (p2 / prime) :mod (n2 / new)))) :arg1 (p3 / person :name (n3 / name :op1 "Shinzo" :op2 "Abe") :arg0-of (h2 / have-org-role-91 :arg1 (c2 / country) :arg2 (m3 / minister :mod (p4 / prime) :mod (n4 / new)))) :location (c3 / city :name (n5 / name :op1 "Tokyo")) :purpose (d / discuss-01 :arg0 (p5 / person) :arg1 (a / and :op1 (n6 / number :mod (e / economy)) :op2 (n7 / number :mod (s / safe-01)))) :time (s2 / since :op1 (e2 / elect-01 :arg1-of (p6 / possible-01))))
(s / say-01 :arg0 (p / person :name (n / name :op1 "Hull")) :arg2 (p2 / person :name (n2 / name :op1 "Hernandez")))
(m / multi-sentence :snt1 (s / spend-02 :arg0 (p / person :name (n / name :op1 "Henry")) :arg1 (a / and :op1 (a2 / award :name (n2 / name :op1 "N-A")) :op2 (s2 / series :name (n3 / name :op1 (d / documentaries))) :op3 (p2 / part :mod (t / tv)) :op4 (p3 / part :mod (m2 / movie)) :op5 (p4 / part :mod (m3 / movie))) :time (d2 / decade :mod (s3 / subsequent))) :snt2 (s4 / seem-01 :arg1 (o / or :op1 (s5 / site :mod (d3 / dumped :mod (j / just))) :op2 (t2 / track :mod (s6 / side) :mod (t3 / transport-01)) :mod (j2 / just))))
(h / have-condition-91 :arg1 (f / fault-01 :polarity - :arg1 (i / i) :arg2 (a / and)) :arg2 (w / want-01 :polarity - :arg0 (t / they) :arg1 (a2 / and :op1 (t2 / take-01 :arg0 (t3 / they) :arg1 (i2 / it) :arg3 (p / place)) :op2 (u / use-01 :arg0 (t4 / they) :arg1 (o / opportunity)))))
(h / have-03 :arg0 (i / i) :arg1 (i2 / idea :mod (t / this) :arg1-of (d / discuss-01 :time (t2 / time :time-of (c / care-03 :arg1 (h2 / health))))) :mod (a / apparent) :time (b / before :op1 (c2 / come-01 :arg1 (i3 / i) :location (h3 / here))))
(g / guardian)
(p / protect-01 :arg0 (w / we) :arg1 (a / and :op1 (i / interest :poss (w2 / we)) :op2 (e / economy :poss (w3 / we)) :op3 (s / sector :poss (w4 / we)) :op4 (c / company :poss (w5 / we))))
(c / contrast-01 :arg2 (a / and :op1 (t / transfer-01 :arg0 (p / person :name (n / name :op1 "Sali")) :arg1 (c2 / credit :mod (a2 / all)) :arg2 (f / fan :mod (w / wolf))) :op2 (d / do-02 :arg0 (p2 / person) :arg1 (s / style))))
(m / mean-01 :arg1 (g / gesture :mod (t / this)) :arg2 (p / patience))
(c / contain-01 :arg0 (t / thing :arg1-of (c2 / contain-01) :ord (o / ordinal-entity :value 1)) :arg1 (p / person :name (n / name :op1 "Rosemary" :op2 "Lehmberg") :arg1-of (c3 / convict-01 :arg2 (d / drunk)) :arg1-of (c4 / convict-01 :arg2 (d2 / drunk) :time (d3 / date-entity :month 4 :year 2013))) :ord (o2 / ordinal-entity :value 1))
(d / die-01 :arg1 (f / fire :quant (m / majority :mod (v / vast))) :location (h / home))
(s / say-01 :arg0 (s2 / she) :arg1 (h / hopeful-03 :arg0 (p / person :arg0-of (s3 / study-01) :mod (e / each)) :arg1 (h2 / hopeful-03 :arg0 (p2 / person))))
(l / love-01 :arg0 (i / i) :arg1 (j / job :mod (t / this)) :manner (f / frank))
(a / and :op1 (c / concern-01 :arg0 (c2 / concern-01 :arg0 (p / person :mod (y / young)) :arg1 (p2 / person :mod (y2 / young)))) :op2 (c3 / call-01 :arg0 (p3 / person) :arg1 (p4 / police) :arg2 (i / iltakahdeksalta)))
(a / and :op1 (' / ' :arg1 (s / song :arg1-of (f / fame-01)) :manner (j / jazzpianisti)) :op2 (t / tell-01 :arg0 (p / person :name (n / name :op1 "Kevern")) :arg1 (a2 / and :op1 (t2 / tell-01 :arg0 (p2 / person) :arg2 (h / he)) :op2 (r / raise-02 :arg0 (n2 / nature :mod (t3 / time :arg1-of (s2 / same-01))) :arg1 (f2 / finger :quant 2) :location (q / quiet)) :time (t4 / time :arg1-of (s3 / same-01)))))
(r / report-01 :arg0 (a / authority :mod (c / country :name (n / name :op1 "N-A"))) :arg1 (s / sunday))
(e / event :mod (c / coincidences))
(c / compete-01 :location (o / or :op1 (p / personalities :mod (w / well)) :op2 (e / event :location (i / image))))
(a / and :op1 (b / beautiful-02 :arg1 (o / opera :mod (s / soap) :mod (p / popular :degree (m / most)) :poss (c / country :name (n / name :op1 "Finland")))) :op2 (r / return-01 :arg1 (o2 / opera) :arg0-of (b2 / brave-02) :time (t / today)))
(a / and :op1 (r / return-01 :arg1 (p / person :arg0-of (h / have-rel-role-91 :arg1 (c / child :mod (i / israeli)) :arg2 (c2 / child))) :arg4 (s / school) :time (d / during :op1 (b / bomb :mod (s2 / summer)))) :op2 (b2 / bomb-01 :arg0 (a2 / and :op1 (r2 / rocket) :op2 (o / organization :name (n / name :op1 "Hamas"))) :arg1 (a3 / and :op1 (r3 / rocket) :op2 (s3 / school)) :arg1-of (r4 / remain-01 :arg3 (c3 / close-01) :time (r5 / recover-01 :arg1 (r6 / region)))))
(h / have-concession-91 :arg1 (h2 / have-03 :polarity - :arg0 (y / you) :arg1 (q / quality :mod (c / cameras :mod (a / action)) :mod (t / this)) :frequency (o / often)) :arg2 (c2 / cameras :location (s / screen :mod (l / lcd))))
(a / and :op1 (c / cut-02 :arg0 (p / person :name (n / name :op1 "Perry")) :arg1 (r / rate-entity-91 :arg1 (m / monetary-quantity :quant 7.5 :unit (d / dollar)) :arg2 (v / volume-quantity :quant (N / N-A) :unit (g / gallon))) :arg3 (u / unit :mod (i / integrity :mod (p2 / public)) :poss (c2 / country))) :op2 (d2 / deal-01 :arg0 (p3 / person) :arg2 (t / thing :arg2-of (a2 / accuse-01 :arg0 (s / sector :arg1-of (p4 / public-02)) :time (r2 / refuse-01 :arg0 (p5 / person :name (n2 / name :op1 "Lehmberg")) :arg1 (r3 / resign-01 :arg0 (p6 / person)))))))
(s / say-01 :arg0 (p / person :name (n / name :op1 "Arevan") :arg0-of (h / have-org-role-91 :arg1 (p2 / press))) :arg1 (d / delay-01 :arg1 (p3 / project) :time (r / recent) :arg1-of (c / cause-01 :arg0 (a / apply-02 :arg1 (a2 / accept-01 :arg1 (r2 / reactor)))) :mod (m / main)))
(n / need-01 :polarity - :arg0 (p / person :name (n2 / name :op1 "Itkonen")) :arg1 (q / question-01 :arg1 (a / answer-01 :arg1 (g / good-04 :arg1 (s / species) :arg2 (s2 / species) :degree (v / very)))) :arg1-of (n3 / need-01))
(c / cause-01 :arg1 (p / possible-01 :arg1 (f / forget-01 :arg0 (w / we) :arg1 (i / it))))
(t / try-01 :mode (i / imperative) :arg0 (y / you) :arg1 (c / close-06 :arg1 (y2 / you) :arg2 (s / subject)))
(e / expect-01 :arg1 (b / belong-01 :arg0 (c / country :name (n / name :op1 "United" :op2 "States")) :arg1 (c2 / country :name (n2 / name :op1 "Ukraine")) :mod (a / again) :arg1-of (c3 / cause-01 :arg0 (r / recommend-01 :arg1 (c4 / continue-01 :arg0 (c5 / country :name (n3 / name :op1 "Finland")) :arg1 (p / place-01 :arg0 (c6 / country) :arg1 (p2 / profit :arg1-of (n4 / need-01))))))) :condition (e2 / expect-01 :arg1 (o / open-01 :arg1 (t / thing :arg1-of (l / lose-02 :arg2 (c7 / country))))))
(a / and :op1 (b / basket :arg1 (a2 / and :op1 (b2 / basket) :op2 (a3 / air)) :arg2 (p / play-01 :mod (b3 / ball))) :op2 (m / more :compared-to (h / hundreds :arg1 (p2 / person :arg0-of (v / view-01)))))
(d / drawn :arg1 (r / rate-entity-91 :arg1 5 :arg2 (t / temporal-quantity :quant (N / N-A) :unit (y / year))) :arg4 (p / profit-01 :arg1 (m / match-03)))
(s / strike-01 :arg0 (p / person :name (n / name :op1 "Hernandez")) :time (s2 / season :quant 14 :mod (l / last)) :time (w / win-01 :arg0 (c / city :name (n2 / name :op1 "Palermo")) :arg1 (a / and :op1 (u / universe :mod (s3 / serie)) :op2 (r / roses :location (c2 / country :name (n3 / name :op1 "Italy"))))))
(h / have-concession-91 :arg1 (p / possible-01 :arg1 (s / say-01 :arg0 (i / i) :arg1 (c / contrast-01 :arg1 (l / love-01 :arg0 (i2 / i) :arg1 (y / you)) :arg2 (e / early :degree (t / too) :domain (i3 / i))))))
(a / appear-01 :arg1 (p / person :name (n / name :op1 "Howard" :op2 "Jacob" :op3 "Log") :arg0-of (t / tell-01 :arg1 (a2 / and :op1 (l / love-01) :op2 (j / j)) :manner (l2 / literal))) :arg2 (p2 / praise) :mod (o / only))
(a / and :op2 (r / recommend-01 :arg1 (r2 / review-01 :arg1 (a2 / alkusammutusväline :mod (t / that) :quant (a3 / all)) :arg1-of (e / easy-05))))
(e / e-books)
(w / want-01 :arg0 (t / town :location (l / location :name (n / name :op1 "Rovaniemi"))) :arg1 (s / strengthen-01 :arg0 (t2 / town) :arg1 (c / car :poss (t3 / town)) :arg3 (p / park :mod (c2 / car :arg1-of (l2 / locate-01 :location (n2 / next-to :op1 (o / organization :name (n3 / name :op1 "Pohjan" :op2 "Court" :op3 "of" :op4 "Appeal") :location (h / hotel))))))))
(t / think-01 :arg0 (i / i) :arg1 (e / exhibit-01))
(c / cruises :arg1 (a / and :op1 (s / ship :mod (c2 / cruise) :arg2-of (t / total-01 :arg1 (s2 / ship :quant 8 :mod (c3 / cruise)))) :op2 (m / map :location (o / over :op1 (w / world-region :name (n / name :op1 "Scandinavia")))) :op3 (m2 / map :location (o2 / over :op1 (w2 / world-region :name (n2 / name :op1 "Scandinavia")))) :op4 (m3 / map :location (a2 / and :op1 (w3 / world-region :name (n3 / name :op1 "Scandinavia")) :op2 (c4 / country :name (n4 / name :op1 "Russia"))))) :arg2 (a3 / and :op1 (w4 / world-region :name (n5 / name :op1 "Scandinavia")) :op2 (c5 / country :name (n6 / name :op1 "Russia")) :op3 (s3 / sea :name (n7 / name :op1 "Mediterranean" :op2 "Sea")) :op4 (c6 / continent :name (n8 / name :op1 "South" :op2 "America"))))
(m / multi-sentence :snt1 (t / think-01 :arg0 (i / i) :arg1 (i2 / idea :topic (o / oho :arg1 (' / '')))) :snt2 (c / change-01 :arg0 (y / you) :arg1 ('2 / '')) :li 1)
(i / include-91 :arg1 (o / organization :name (n / name :op1 "Occupy" :op2 "Central" :op3 "With" :op4 "Love" :op5 "and" :op6 "Peace" :op7 "Movement") :arg0-of (t / threaten-01 :arg1 (b / block-01 :arg0 (p / person) :arg1 (o2 / operation :mod (b2 / business) :location (b3 / block))))) :arg2 (g / grant-01 :polarity - :arg0 (c / city :name (n2 / name :op1 "Beijing")) :arg1 (s / suffrage :mod (u / universal) :mod (g2 / genuine) :beneficiary (c2 / city :name (n3 / name :op1 "Hong" :op2 "Kong"))) :arg2 (c3 / city)) :degree (l / large))
(g / get-01 :arg0 (y / you) :arg1 (f / foot :part-of (y2 / you)) :arg3 (s / sti :arg1-of (a / actual-02)) :mod (l / large :polarity -))
(a / arrest-01 :arg0 (c / country :name (n / name :op1 "France")) :arg1 (m / man :arg2-of (s / suspect-01 :arg1 (t / terrorism))) :arg2 (p / peninsula :name (n2 / name :op1 "N-A") :location (p2 / peninsula :name (n3 / name :op1 "N-A"))))
(s / succeed-01 :arg0 (p / person :name (n / name :op1 "Nastola")) :arg1 (s2 / succeed-01 :arg0 (p2 / person) :arg1 (s3 / succeed-01 :arg0 (p3 / person) :arg1 (s4 / succeed-01 :arg0 (p4 / person) :arg1 (s5 / succeed-01 :arg0 (p5 / person))))) :duration (m / multiple :op1 (t / temporal-quantity :quant (N / N-A) :unit (d / decade))))
(s / strive-01 :arg0 (i / i) :arg1 (r / recapitulate :arg0 (y / you) :arg1 (s2 / safe-01 :arg1 (f / fire) :location (h / home :poss (t / they)))))
FAILED_TO_PARSE#Number of opening and closing brackets doesn't match.
(e / except-01 :arg1 (t / think-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg2 (g / grandmother))) :arg1 (c / cephalopods)))
(d / die-01 :arg1 (p / person :quant 31 :arg1-of (d2 / die-01 :time (y / year :mod (l / last)))))
(a / agree-01 :arg0 (b / board :mod (c / city)) :arg1 (o / obligate-01 :arg2 (m / make-18 :arg1 (s / save-01))) :mod (u / unanimous))
(s / show-01 :arg0 (r / result :mod (d / data) :mod (r2 / rp)) :arg1 (a / and :op1 (r3 / rise-01 :arg1 (t / thing :arg2-of (p / price-01 :arg1 (d2 / data)) :location (c / city :name (n / name :op1 "Sydney"))) :arg2 (p2 / percentage-entity :value 16.1)) :op2 (r4 / rise-01 :arg1 (t2 / thing :arg2-of (p3 / price-01 :arg1 (d3 / data))) :location (c2 / city) :time (y / year :mod (p4 / previous)))))
(s / say-01 :arg1 (w / want-01 :arg0 (h / he) :arg1 (s2 / same-01)) :arg2 (p / person :name (n / name :op1 "Kevern")))
(a / and :op1 (e / employ-01 :polarity - :arg1 (p / person :arg1-of (e2 / employ-01)) :time (a2 / after :op1 (n / now) :quant (b / between :op1 (t / temporal-quantity :quant (N / N-A) :unit (w / week)) :op2 (t2 / temporal-quantity :quant (N2 / N-A) :unit (w2 / week))))) :op2 (a3 / announce-01 :arg0 (g / government-organization :arg0-of (g2 / govern-01))))
(s / say-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg2 (p2 / prosecute-01 :arg1-of (p3 / public-02)))) :arg1 (a / and :op1 (d / drive-01 :arg0 (p4 / person :name (n / name :op1 "Jack" :op2 "Stewart")) :arg1 3 :poss (o / organization :name (n2 / name :op1 "Audi"))) :op2 (c / cause-01 :arg0 (p5 / person) :arg1 (i / injure-01 :arg1 (g / girl)))))
(r / return-01 :polarity - :arg1 (c / child :quant (a / all)) :arg4 (s / school) :location (c2 / country :name (n / name :op1 "Ukraine")))
(c / contrast-01 :arg1 (c2 / confirm-01 :arg0 (d / depart-01 :arg0 (p / person :name (n / name :op1 "Espanjalaishyökkääjä" :op2 "Fernando" :op3 "Torres" :op4 "Chelsea")))) :arg2 (s / stepped :arg1 (r / replace-01) :time (t / time :arg1-of (s2 / same-01) :mod (a / almost)) :time (t2 / time :arg1-of (s3 / same-01))))
(d / declare-02 :arg0 (p / person :name (n / name :op1 "Geoffrey" :op2 "Edelstein")) :arg1 (p2 / possible-01 :arg1 (s / steal-01 :arg0 (p3 / person :arg0-of (h / hack-04) :mod (a / appalled)) :arg1 (a2 / and :op1 (f / fiancee :arg0 (p4 / person)) :op2 (h2 / hollywood :arg0 (p5 / person :name (n2 / name :op1 "Gabi" :op2 "Grecko") :arg0-of (h3 / have-rel-role-91 :arg1 (p6 / person) :arg2 (b / brother))) :arg1 (p7 / photo))))))
(s / say-01 :arg0 (r / rescue-01 :arg0 (c / country :name (n / name :op1 "Finland"))) :arg1 (k / kill-01 :arg0 (r2 / riot-01) :arg1 (p / person :quant 55 :arg1-of (d / differ-02) :arg1-of (d2 / differ-02 :arg2 (f / fire))) :time (a / already) :time (a2 / already)))
(s / sceptical :arg0 (f / facility :name (n / name :op1 "N-A") :arg1-of (n2 / near-02 :arg2 (i / in-front-of :op1 (f2 / front :poss (p / person :mod (c / country :name (n3 / name :op1 "N-A")) :arg0-of (r / reside-01 :arg1 (c2 / community)))))) :quant (m / many)) :arg1 (r2 / return-01 :arg1 (b / boy :arg1-of (k / kill-01 :arg0 (b2 / boy :location (c3 / community))))))
(c / contrast-01 :arg2 (a / and :op1 (p / pass-01 :arg0 (c2 / chamber) :arg1 (c3 / credit :quant (a2 / all) :beneficiary (f / fan :mod (w / wolves)))) :op2 (d / do-02 :arg0 (c4 / chamber) :arg1 (c5 / credit) :manner (s / style))))
(s / say-01 :arg0 (h / he) :arg1 (l / leave-11 :arg0 (p / person :name (n / name :op1 "Adam")) :arg1 (p2 / person :mod (g / garden))))
(a / and :op2 (r / recommend-01 :arg1 (c / check-01 :arg0 (e / everyone) :arg1 (e2 / easy-05 :arg1 (u / use-01 :arg1 (i / instrument :mod (e3 / early)))))))
(h / have-condition-91 :arg1 (r / return-01 :polarity - :arg1 (w / we) :direction (b / back)) :arg2 (h2 / help-01 :polarity - :arg0 (t / they) :arg1 (i / i)))
(c / cause-01 :arg0 (p / possible-01 :arg1 (s / share-01 :arg0 (p2 / person :name (n / name :op1 "Henry")) :arg1 (l / love-01 :arg0 (p3 / person) :arg1 (p4 / person :arg0-of (h / have-rel-role-91 :arg1 (p5 / person) :arg2 (c2 / child)))))) :arg1 (p6 / possible-01 :arg1 (s2 / share-01 :arg0 (p7 / person) :arg1 (l2 / love-01 :arg0 (p8 / person)) :arg2 (p9 / person :arg0-of (h2 / have-rel-role-91 :arg1 (p10 / person) :arg2 (c3 / child))))))
(d / difficult :degree (v / very) :domain (i / it))
(m / multi-sentence :snt1 (a / and :op1 (a2 / age-01 :arg1 (p / person :name (n / name :op1 "Rodgers")) :arg2 (t / temporal-quantity :quant (N / N-A) :unit (y / year))) :op2 (c / carried :arg0 (p2 / person) :arg1 (c2 / cut-02 :arg1 (f / foot :part-of (p3 / person :arg0-of (h / have-rel-role-91 :arg2 (d / dd1)))) :quant (s / series))) :time (b / before :op1 (n2 / now) :duration (t2 / temporal-quantity :quant (N2 / N-A) :unit (y2 / year)))) :snt2 (l / left :arg0 (d2 / doctor) :arg1 (p4 / paper :mod (r / research-01) :poss (d3 / doctor)) :arg1-of (q / quick-02) :arg1-of (s2 / say-01 :arg0 (d4 / doctor)) :arg1-of (s3 / say-01 :arg0 (d5 / doctor)) :arg1-of (s4 / say-01 :arg0 (d6 / doctor) :location (p5 / paper :mod (r2 / research-01) :poss (d7 / doctor)) :arg1-of (q2 / quick-02)) :arg1-of (s5 / say-01 :arg0 (d8 / doctor)) :arg1-of (s6 / say-01 :arg0 (d9 / doctor)) :arg1-of (s7 / say-01 :arg0 (d10 / doctor)) :arg1-of (s8 / say-01 :arg0 (d11 / doctor))))
(a / and :op1 (c / compare-01 :arg1 (p / person :mod (v / various)) :arg2 (p2 / person :mod (v2 / various))) :op2 (e / elect-01 :arg1 (p3 / person) :arg2 (a2 / alternative) :time (t / then)))
(r / raise-01 :arg0 (t / thing :arg2-of (t2 / title-01 :arg1 (p / period :mod (o / open-01)))) :arg1 (q / question-01))
(c / cause-01 :arg0 (h / honest :domain (w / we) :mod (h2 / honest :degree (q / quite))) :arg1 (p / possible-01 :polarity - :arg1 (s / say-01 :arg0 (g / group :mod (s2 / society :polarity -)) :arg1 (c2 / cheap-02 :arg1 (h3 / he) :degree (v / very))) :condition (h4 / honest :domain (w2 / we) :mod (q2 / quite))))
(c / contrast-01 :arg1 (o / open-01 :arg0 (s / school) :arg1 (a / and :op1 (b / bomb :mod (b2 / bomb)) :op2 (r / rocket :arg1-of (l / launch-01 :location (c2 / community :location (s2 / south :part-of (s3 / strait))))))) :arg2 (s4 / see-01 :arg1 (b3 / battle-01 :mod (s5 / scars)) :mod (s6 / still)))
(s / say-01 :arg0 (h / he) :arg1 (h2 / have-03 :arg0 (w / we) :arg1 (t / time :mod (d / difficult) :time-of (g / go-02 :polarity - :arg0 (w2 / we) :arg4 (h3 / home) :location (a / anywhere)))))
(j / judge-01 :arg0 (p / person :name (n / name :op1 "Lady" :op2 "Raen") :arg0-of (h / have-org-role-91 :arg3 (j2 / judge-01))) :arg1 (t / thing :arg1-of (d / decide-01 :arg3 (t2 / try-02))) :time (d2 / date-entity :month 11 :day 17) :location (e / example :mod (u / upper) :location (c / city :name (n2 / name :op1 "Edinburgh"))))
(c / contrast-01 :arg1 (d / design-01 :polarity - :arg1 (s / study) :arg3 (e / explain-01 :arg0 (s2 / study) :arg1 (t / thing :arg0-of (c2 / cause-01 :arg1 (h / have-03 :arg0 (w / woman) :arg1 (t2 / thing :arg0-of (c3 / cause-01 :arg1 (s3 / survive-01 :arg0 (w2 / woman) :location (o / outside :op1 (c4 / city)))) :arg1-of (l / low-04 :degree (m / more)))))))) :arg2 (r / regard-01 :arg0 (c5 / country :name (n / name :op1 "Jordan")) :arg1 (r2 / reason :mod (p / potential) :arg1-of (c6 / cause-01 :arg0 (r3 / reason :mod (p2 / potential) :arg0-of (a / access-01 :arg1 (a2 / and :op1 (d2 / diagnosis) :op2 (a3 / access-01)))))) :time (r4 / recent)))
(o / open-01 :arg0 (s / school :arg1-of (i / include-91 :arg2 (s2 / school :poss (c / country :name (n / name :op1 "Ukraine"))) :arg3 (m / most))) :arg1 (d / door :poss (s3 / school)) :time (d2 / date-entity :month 1 :day (N / N-A)) :time (a / after :op1 (h / holiday :mod (s4 / summer))))
(f / find-01 :arg1 (h / hiilivaunusta :mod (e / emigrants)) :location (c / country :name (n / name :op1 "Macedonia")))
(l / low-emission :domain (e / equipment :purpose (e2 / equipment)) :mod (a / also))
(i / include-91 :arg1 (t / thing :arg0-of (c / cause-01 :arg1 (d / die-01 :arg1 (p / person :arg0-of (h / have-rel-role-91 :arg2 (m / mother)))))) :arg2 (i2 / it) :mod (a / also))
(s / say-01 :arg0 (p / person :arg0-of (p2 / prosecute-01)) :arg1 (a / and :op1 (d / drive-01 :arg0 (p3 / person :name (n / name :op1 "Stewart")) :arg1 (d2 / democrat :poss (o / organization :name (n2 / name :op1 "Audi")) :mod (q / q3))) :op2 (c / cause-01 :arg0 (p4 / person) :arg1 (i / injure-01 :arg1 (g / girl)))))
(d / disable-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (c / city :name (n / name :op1 "Liverpool")) :arg2 (p2 / person :arg0-of (m / manage-01 :arg1 (c2 / city))))) :arg1 (t / team :mod (l / location :name (n2 / name :op1 "Barcelona"))) :location (p3 / place :ord (o / ordinal-entity :value 2) :location (p4 / place :ord (o2 / ordinal-entity :value 2)) :path (p5 / place :mod (a / aggressor))))
(w / wish-01 :arg0 (p / person :location (l / location :name (n / name :op1 "Rovaniemi"))) :arg1 (s / strengthen-01 :arg0 (p2 / person) :arg1 (y / ystävyyspuisto :mod (k / kelkkaparkkitoiminta) :arg1-of (l2 / locate-01 :location (n2 / next-to :op1 (h / hotel)) :time (n3 / next)))))
(s / stage-01 :arg0 (a / activist) :arg1 (r / referendum :topic (r2 / right-05 :arg2 (v / vote-01)) :arg1-of (a2 / attend-01 :arg0 (p / person :quant 780)) :arg1-of (a3 / attend-01 :arg0 (p2 / person :quant 780) :location (c / city :name (n / name :op1 "Hong" :op2 "Kong")))) :time (s2 / summer :mod (t / this)))
(r / regret-01 :arg0 (w / we) :arg1 (a / announce-01 :arg0 (w2 / we) :arg1 (h / have-03 :arg0 (d / dialogue-01 :mod (l / last)) :arg1 (a2 / and :op1 (f / foundered) :op2 (c / centre :poss (m / market))) :mod (l2 / last)) :time (t / today)) :degree (m2 / much :degree (v / very)))
(a / and :op1 (b / be-located-at-91 :arg1 (h / he) :arg2 (t / trip-03 :arg0 (h2 / he)) :frequency (o / often) :time (a2 / after :op1 (d / die-01 :arg1 (h3 / he)))) :op2 (t2 / think-01 :arg0 (h4 / he) :arg1 (r / relation-03 :arg0 (t3 / they) :arg2 (p / person :arg0-of (h5 / have-rel-role-91 :arg1 (h6 / he) :arg2 (f / father)))) :quant (l / lot)))
(h / have-condition-91 :arg1 (t / take-01 :mode (i / imperative) :arg0 (y / you) :arg1 (a / advantage) :arg2 (f / feature :mod (t2 / this))) :arg2 (a2 / allow-01 :arg0 (c / camera :poss (y2 / you)) :arg1 (b / bracketing :arg1 (p / picture :quant (m / multiple) :arg1-of (d / differ-02))) :mod (a3 / also)))
(m / multi-sentence :snt1 (a / and :op1 (p / put-01 :arg0 (w / we) :arg1 (b / bottle :mod (d / die-01)) :arg2 (d2 / die-01)) :op2 (c / close-01 :arg0 (w2 / we) :arg1 (p2 / prison)) :op3 (s / start-01 :arg0 (w3 / we) :arg1 (e / explore-01 :arg0 (w4 / we) :arg1 (p3 / prison))) :op4 (s2 / start-01 :arg0 (w5 / we) :arg1 (e2 / explore-01 :arg0 (w6 / we) :arg1 (t / thing :manner-of (t2 / transfer-01 :arg1 (w7 / work-of-art :name (n / name :op1 "N-A"))))))) :snt2 (r / require-01 :arg0 (t3 / tuomivaara :mod (s3 / sort) :mod (t4 / turvakotiin))))
(c / consider-01 :arg0 (d / doctor) :arg1 (a / and :op1 (p / pacified :arg1 (h / he)) :op2 (d2 / drug :domain (h2 / he)) :op3 (w / watch-01 :arg0 (d3 / doctor) :arg1 (c2 / condition :poss (h3 / he)) :manner (c3 / close) :time (u / until :op1 (b / be-located-at-91 :arg1 (h4 / he) :arg2 (c4 / condition :mod (s / serious)) :time (c5 / current))))))
(a / atmosphere :mod (e / electric) :domain (o / organization :name (n / name :op1 "White" :op2 "Hart" :op3 "Lane")) :time (s / strengthen-01 :arg0 (p / person :name (n2 / name :op1 "Mario" :op2 "Balotelli")) :arg1 (a2 / arrive-01 :arg1 (c / city :name (n3 / name :op1 "Liverpool")) :arg4 (a3 / aliens :mod (t / team :name (n4 / name :op1 "Tottenham"))) :arg4 (t2 / team :name (n5 / name :op1 "Tottenham")))))
(s / say-01 :arg0 (p / person :name (n / name :op1 "Henry")) :arg1 (a / and :op1 (s2 / speak-01 :arg0 (s3 / speak-01 :arg3 (d / documentary)) :mod (l / last)) :op2 (s4 / sell-01 :arg1 (d2 / documentary))))
(m / multi-sentence :snt1 (a / and :op1 (l / listen-01 :arg1 (p / person :arg0-of (h / have-rel-role-91 :arg1 (p2 / person :arg0-of (h2 / have-rel-role-91 :arg1 (p3 / person :arg0-of (h3 / have-rel-role-91 :arg1 (p4 / person :arg0-of (h4 / have-rel-role-91 :arg1 (p5 / person :arg0-of (h5 / have-rel-role-91 :arg1 (p6 / person :arg0-of (h6 / have-rel-role-91 :arg1 (p7 / person :arg0-of (h7 / have-rel-role-91 :arg1 (p8 / person :arg0-of (h8 / have-rel-role-91 :arg1 (p9 / person :arg0-of (h9 / have-rel-role-91 :arg1 (p10 / person :arg0-of (h10 / have-rel-role-91 :arg1 (p11 / person :arg0-of (h11 / have-rel-role-91 :arg2 (p12 / partner))) :arg2 (p13 / partner))) :arg2 (b / ballade))) :arg2 (b2 / ballade)))))))))))))))) :arg2 (p14 / person :arg0-of (h12 / have-rel-role-91 :arg1 (p15 / person) :arg2 (p16 / partner)))) :op2 (c / conducts :arg0 (p17 / person) :arg1 (p18 / person)))) :snt2 (a2 / apologize-01 :arg0 (i / i)) :snt3 (a3 / apologize-01 :arg0 (i2 / i)))
(d / dawn :prep-with (c / country :name (n / name :op1 "N-A")))
(e / event :mod (p / person :name (n / name :op1 "Ryrmikorjaamolla")) :topic (a / and :op1 (f / friday) :op2 (s / saturday)))
(e / expect-01 :arg1 (b / benefit-01 :arg1 (i / industry :mod (c / cruise) :arg1-of (v / value-01 :arg2 (m / monetary-quantity :quant 29 :unit (d / dollar))) :arg1-of (v2 / value-01 :arg2 (t / temporal-quantity :quant (N / N-A) :unit (y / year))) :example (a / and :op1 (c2 / country :name (n / name :op1 "China")) :op2 (c3 / country :name (n2 / name :op1 "India")) :op3 (c4 / class :mod (m2 / middle) :arg1-of (r / rise-01) :poss (c5 / country))))))
(a / and :op1 (l / lead-03 :arg0 (t / thing :arg1-of (o / opine-01 :arg0 (p / public)) :arg1-of (l2 / lead-03 :arg2 (l3 / law))) :arg2 (t2 / thing :arg1-of (o2 / opine-01 :arg0 (p2 / public)))) :op2 (a2 / achieve-01 :arg0 (o3 / opine-01) :arg1 (a3 / achieve-01 :arg1 (a4 / and :op1 (c / choose-01 :arg0 (p3 / person :arg0-of (h / have-org-role-91 :arg1 (p4 / political-party :name (n / name :op1 "N-A") :mod (r / recipes)) :arg3 (a5 / apprentice-01 :arg0 (p5 / person)))) :arg1 (h2 / hero :poss (p6 / person))) :op2 (u / update-01 :arg0 (p7 / person) :arg1 (a6 / and :op1 (b / book) :op2 (r2 / romance)) :arg1-of (p8 / prefer-01 :arg0 (p9 / person)))))))
(p / publish-01 :arg0 (w / website :mod (e / entertainment) :arg1-of (p2 / publish-01 :arg0 (p3 / person :arg0-of (r / represent-01 :arg1 (p4 / person :name (n / name :op1 "Lawrence"))) :arg0-of (r2 / represent-01 :arg1 (p5 / person) :arg1-of (a / anger-01)))) :arg0-of (c / confirm-01 :arg1 (a2 / authenticity :poss (i / image)))) :arg1 (w2 / website :mod (e2 / entertainment)))
(h / have-concession-91 :arg1 (d / detail-01 :polarity - :arg0 (t / they)) :arg2 (f / fear-01 :arg0 (t2 / they) :arg1 (l / lead-03 :arg0 (i / it) :arg2 (p / problem :topic (a / authority))) :manner (a2 / apparent)))
(s / say-01 :arg1 (o / obligate-01 :polarity - :arg1 (i / i) :arg2 (a / answer-01 :arg0 (i2 / i) :arg1 (t / that))) :arg2 (p / person :name (n / name :op1 "Esme")) :arg1-of (s2 / say-01 :arg0 (p2 / person :name (n2 / name :op1 "Nussbaum"))))
(a / and :op1 (e / examine-01 :arg1 (m / merge-01 :arg1 (r / region))) :op2 (c / come-01 :arg1 (t / thing :arg1-of (r2 / report-01)) :arg4 (t2 / thing :arg1-of (b / border-01 :arg2 (n / name :op1 (f / fore))))))
(w / work-01 :arg0 (p / person :name (n / name :op1 "John" :op2 "Storgårds") :arg0-of (h / have-org-role-91 :arg2 (m / minister :mod (c / chief)))) :arg1 (w2 / work-01 :arg0 (p2 / person)) :time (m2 / moment))
(a / and :op1 (r / reach-01 :arg0 (t / tähti :mod (y / young)) :arg1 (p / person :name (n / name :op1 "Veera" :op2 "Vento") :mod (f / final))) :op2 (m / make-01 :polarity - :arg1 (w / win-01 :arg0 (p2 / person :name (n2 / name :op1 "Tikkanen" :op2 "Veeti")))))
(a / and :op1 (d / do-02 :arg0 (h / he) :arg1 (t / temporal-quantity :quant (N / N-A) :unit (h2 / hour)) :arg2 (a2 / and :op1 (k / keverniä :mod (s / säälintunnetta)) :op2 (m / man :arg1-of (g / general-02)))) :op2 (r / raised :arg0 (h3 / he) :arg1 (h4 / hand :part-of (t2 / they)) :manner (g2 / general-02) :concession (e / even-if :op1 (r2 / raise-01 :arg0 (s2 / some :arg1-of (i / include-91 :arg2 (t3 / they))) :arg1 (h5 / hand :part-of (t4 / they)) :prep-against (h6 / he)))))
(s / surprise-01 :arg0 (e / evening :time (e2 / early :op1 (e3 / evening :mod (e4 / early :degree (q / quite))))) :arg1 (i / it))
(e / estimate-01 :arg0 (p / person :name (n / name :op1 "Sivonen")) :arg1 (s / serlachius :arg1 (p2 / person :arg0-of (v / visit-01) :mod (w / whole)) :time (y / year :mod (t / this)) :location (m / museums :name (n2 / name :op1 (l / lähentelemään) :op2 (l2 / lähentelemään)))))
(t / taituri :arg1 (l / leg :part-of (p / paint)) :time (a / already) :time (g / game :ord (o / ordinal-entity :value 7)) :time (a2 / already))
(f / fans :arg0 (f2 / fan :quant 100 :mod (f3 / flnnlsh)) :location (l / location :name (n / name :op1 "Bilbao")))
(m / multi-sentence :snt1 (h / have-org-role-91 :arg0 (p / person :arg0-of (h2 / have-org-role-91 :arg1 (o / organization :name (n / name :op1 "Barcelona")))) :arg1 (p2 / person :name (n2 / name :op1 "Brendan" :op2 "Rodgers") :arg0-of (h3 / have-org-role-91 :arg2 (s / senator))) :arg2 (d / direct-01 :arg0 (p3 / person) :arg1 (r / role :poss (p4 / person :name (n3 / name :op1 "Luis" :op2 "Suarezin"))) :arg2 (p5 / person :name (n4 / name :op1 "Daniel" :op2 "Sturridgen")))) :snt2 (s2 / secondly :mode (e / expressive)))
(c / contrast-01 :arg2 (a / and :op1 (i / investigate-01 :arg1 (e / emission :source (r / region))) :op2 (c2 / come-04 :polarity - :arg1 (r2 / report-01) :arg2 (m / more-than :op1 (n / number :quant (n2 / number))))))
(b / bear-02 :arg1 (p / person :name (n / name :op1 "Henry")) :location (f / family :arg1-of (h / have-org-role-91 :arg0 (p2 / person :name (n2 / name :op1 "Dudley")) :arg2 (m / member))) :location (l / location :name (n3 / name :op1 "British" :op2 "Midlands") :quant 7 :location (l2 / location :name (n4 / name :op1 "British" :op2 "Midlands"))))
(r / repeat-01 :mode (i / imperative) :arg0 (y / you) :arg1 (e / event :mod (a / amr-unknown)) :condition (e2 / event :time (y2 / yesterday)) :condition (h / have-03 :arg0 (i2 / it) :arg1 (e3 / event :time (y3 / yesterday)) :condition (e4 / event :time (y4 / yesterday))))
(p / picture-01 :arg0 (t / thing :arg1-of (a / announce-01 :arg0 (p2 / person :arg0-of (d / decide-01 :arg3 (n / nojasi))))) :arg1 (t2 / thing :arg1-of (a2 / announce-01)))
(b / break-01 :arg1 (p / property :mod (c / commerce)) :time (e / evening :time (e2 / evening)))
(h / have-concession-91 :arg1 (s / see-01 :arg1 (t / thing :arg0-of (m / mark-01 :arg1 (f / fight-01))) :mod (s2 / still)) :arg2 (s3 / source-02 :arg1 (s4 / school)))
(s / style :mod (s2 / shirt :mod (r / red)) :domain (p / person :name (n / name :op1 "Eric")) :mod (s3 / style :mod (r2 / red)))
(a / agree-01 :arg0 (a2 / and :op1 (c / country :name (n / name :op1 "Israel")) :op2 (o / organization :name (n2 / name :op1 "Hamas"))) :arg1 (c2 / cease-01 :arg1 (c3 / cease-01) :time (c4 / current) :mod (l / last)))
(a / and :op1 (c / continue-01 :arg1 (d / decline-01 :arg1 (s / sell-01 :arg1 (s2 / supermarket))) :mod (a2 / also)) :op2 (t / tell-01 :arg0 (s3 / sell-01) :arg2 (p / person :name (n / name :op1 "Päivittäistavarakauppa"))))
(c / contrast-01 :arg1 (o / offer-01 :arg0 (c2 / company) :arg1 (a / aircraft :arg1-of (p / private-03))) :arg2 (c3 / contrast-01 :arg1 (o2 / offer-01 :arg0 (c4 / company) :arg1 (a2 / aircraft :arg1-of (p2 / private-03)) :mod (a3 / also)) :arg2 (p3 / possible-01 :arg1 (e / ensure-01 :arg0 (c5 / customer) :arg1 (a4 / arrive-01 :arg1 (m / memorable :degree (m2 / most)) :arg4 (u / university))))))
(s / say-01 :arg0 (p / person :name (n / name :op1 "Pauli") :arg0-of (h / have-org-role-91 :arg2 (m / mayor))) :arg1 (c / cause-01 :arg0 (d / decide-01 :arg0 (p2 / person :arg0-of (h2 / have-org-role-91 :arg2 (m2 / mayor))) :arg1 (t / tontista)) :arg1 (p3 / possible-01 :polarity - :arg1 (h3 / hear-01 :arg1 (v / voices :mod (d2 / dissenting)) :time (t2 / time)))))
(m / multi-sentence :snt1 (r / right-06 :arg1 (p / person :name (n / name :op1 "Kari" :op2 "Kalin")) :arg2 (r2 / right)) :snt2 (s / stretched :arg1 (p2 / person :arg0-of (p3 / play-01) :mod (o / other))))
(s / stay-01 :arg1 (o / or :op1 (l / lake) :op2 (l2 / lake) :op3 (t / thing :arg1-of (o2 / ocean))) :condition (p / possible-01 :arg1 (s2 / stay-01)))
(m / multi-sentence :snt1 (n / need-01 :polarity - :arg0 (i / it) :arg1 (t / talk-01 :arg0 (i2 / it) :arg1 (i3 / it))) :snt2 (a / agree-01 :arg0 (w / we)))
(e / event :mod (c / coincidences))
(s / strengthen-01 :arg1 (p / pound) :arg1-of (c / cause-01 :arg0 (c2 / contribute-01 :arg0 (p2 / pound) :arg2 (a / and :op1 (l / law :mod (t / tax-01 :arg2 (e / estate)) :mod (r / real)) :op2 (r2 / rhetoric :mod (p3 / politics) :poss (p4 / possible-01 :arg1 (' / '' :arg1 (m / map) :time (b / before :op1 (p5 / possible-01 :arg1 (e2 / elect-01 :arg1-of (g / general-02)))))))) :mod (a2 / also))))
(c / challenging :domain (w / word :arg0-of (d / discipline :arg1 (s / slash :op1 (' / ') :op2 (d2 / drama)))))
(k / kuhissut :arg1 (w / world :mod (e / entertainment)) :time (a / after :op1 (p / publish-01 :arg1 (t / thing :arg2-of (r / result-01 :arg1 (j / julkkiskuvahakkerointiskandaalin :arg1-of (b / broad-02))) :mod (v / vast)))))
(f / foot :quant (s / some :mod (o / only)) :arg1-of (m / mean-01 :arg2 (f2 / foot :part-of (b / broadcast-program :name (n / name :op1 "N-A")))) :domain (d / depths :quant (s2 / some :op1 5 :mod (o2 / only))))
(s / say-01 :arg0 (s2 / state :name (n / name :op1 "Texas")) :arg1 (l / law :polarity - :domain (c / country) :mod (l2 / law :polarity -)))
(c / cause-01 :arg0 (g / get-03 :arg1 (g2 / get-01 :arg1 (p / praise :mod (i / immediate)) :arg2 (t / tuntemattomalta :arg1-of (p2 / public-02)))) :arg1 (h / have-03 :arg0 (p3 / person :mod (c2 / country :name (n / name :op1 "N-A"))) :arg1 (t2 / tahdonkysymys)))
(a / and :op1 (s / submit-01 :arg0 (c / company :name (n / name :op1 "Areva")) :arg1 (f / force :mod (i / industry)) :arg2 (f2 / force :mod (i2 / industry))) :op2 (u / updated :arg1 (i3 / island :quant 3 :arg1-of (u2 / update-01))))
(a / and :op1 (p / person :name (n / name :op1 "George" :op2 "Websteriä" :op3 "Nairnin") :arg1-of (a2 / accuse-01 :arg2 (p2 / pitlochryn))) :op2 (p3 / person :arg1-of (a3 / accuse-01)))
(s / say-01 :arg0 (a / audit-01 :arg1 (a2 / and :op1 (p / person :arg0-of (b / broker-01 :arg1 (' / ''))) :op2 (m / mismanage-01 :mod (e / economy) :mod (o / other)))) :arg1 (r / rate-entity-91 :arg1 (m2 / monetary-quantity :quant 1 :unit (d / dollar) :mod (a3 / at-least)) :arg2 (t / temporal-quantity :quant (N / N-A) :unit (m3 / month))) :time (e2 / early :op1 (y / year :mod (t2 / this)) :degree (m4 / more)))
(p / possible-01 :arg1 (e / explain-01 :arg0 (f / fan :poss (a / amount :quant-of (a2 / amount :quant-of (g / grow-01)))) :manner (a3 / amr-unknown)) :mod (e2 / even) :mod (e3 / even))
(s / send-01 :polarity - :arg1 (m / meet-03 :arg0 (c / council)) :arg2 (r / result-01 :arg1 (p / problem :topic (t / technical)) :arg1-of (d / direct-02)))
(s / say-01 :arg0 (r / report-01 :arg0 (p / press)) :arg1 (c / cost-01 :arg1 (p2 / purchase-01) :arg2 (a / approximately :op1 (m / monetary-quantity :quant 8 :unit (e / euro)))))
(h / hope-01 :arg0 (f / family :arg1-of (h2 / have-org-role-91 :arg0 (p / person :name (n / name :op1 "Joan" :op2 "Riversin")) :arg2 (m / member))) :arg1 (g / good :degree (m2 / most)))
(t / tell-01 :arg0 (p / person :name (n / name :op1 "Susanna" :op2 "Mälkki")) :arg1 (s / start-01 :arg0 (p2 / person) :arg1 (a / and :op1 (r / role :mod (n2 / new) :poss (p3 / person)) :op2 (h / happy) :op3 (p4 / pride-01))) :arg2 (s2 / start-01 :arg0 (p5 / person)))
(s / say-01 :arg0 (p / person :name (n / name :op1 "Lavrov")) :arg1 (r / respond-01 :arg0 (c / country :name (n2 / name :op1 "Russia")) :arg1 (n3 / name-01 :arg1 (c2 / country) :arg2 (s2 / sanction-02 :arg1 (e / economy) :mod (n4 / new)))) :mod (a / also))
(s / say-01 :arg0 (h / he) :arg1 (a / and :op1 (' / '' :arg1 (f / fat)) :op2 (a2 / appeal-02 :arg0 (y / you) :arg2 (y2 / you) :location ('2 / '' :mod (s2 / shouldering)))))
(m / multi-sentence :snt1 (b / begin-01 :arg1 (c / career :mod (t / tv) :poss (p / person :name (n / name :op1 "Henry"))) :time (m2 / middle :op1 (d / date-entity :decade (N / N-A)))) :snt2 (a / and :op1 (i / impressionist :arg1-of (b2 / black-04) :mod (o / only) :domain (i2 / i)) :op2 (c2 / comedian :arg0 (h / he) :arg1-of (s / say-01 :arg0 (h2 / he)))))
(s / say-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (c / country :name (n / name :op1 "Australia")))) :arg1 (b / begin-01 :arg0 (s2 / sell-01 :arg1 (s3 / sell-01 :manner (e / extra))) :arg1 (n2 / number :quant-of (h2 / house-01) :arg1-of (t / test-01 :arg2 (h3 / house-01) :mod (r / real)))) :location (s4 / spring :location (c2 / country)))
(f / find-01 :arg0 (t / they) :arg1 (s / shotguns :mod (s2 / sawed-off)) :location (c / car))
(g / give-01 :arg0 (t / thing :arg1-of (d / decide-01 :arg0 (g2 / government-organization :arg0-of (g3 / govern-01 :arg1 (c / country :name (n / name :op1 "China")))))) :arg1 (p / power :poss (p2 / person :mod (c2 / communism))) :arg2 (w / weed :arg0 (p3 / person) :arg1 (c3 / candidate :mod (a / any) :arg0-of (o / obedient :polarity - :arg1 (c4 / city :name (n2 / name :op1 "Beijing"))))) :mod (a2 / actual))
(h / have-concession-91 :arg1 (i / insist-01 :arg0 (p / person :name (n / name :op1 "Lavrov")) :arg1 (o / obligate-01 :arg1 (f / force :mod (c / country :name (n2 / name :op1 "N-A"))) :arg2 (w / withdraw-01 :arg0 (f2 / force) :arg1 (f3 / force) :arg2 (c2 / civilian)) :time (i2 / immediate))))
(c / confirm-01 :arg0 (p / person :name (n / name :op1 "Mary" :op2 "Elizabeth" :op3 "Winstead") :arg0-of (h / have-org-role-91 :arg2 (a / actress))) :arg1 (s / spread-02 :arg1 (p2 / picture) :manner (g / genuine)))
(s / say-01 :arg0 (c / company :name (n / name :op1 "Microsoft") :arg1-of (s2 / send-01 :arg2 (c2 / company :mod (m / media)))) :arg1 (r / reflect-01 :polarity - :arg1 (i / it) :arg2 (l / location :mod (a / all) :part-of (t / thing :arg0-of (r2 / reason-01 :arg1 (s3 / security))))) :medium (i2 / information :arg1-of (s4 / send-01 :arg2 (c3 / company :mod (m2 / media)))))
(h / host-01 :arg0 (p / person :name (n / name :op1 "Seppo" :op2 "Sirkka")) :arg1 (p2 / person :quant 1982 :arg1-of (h2 / host-01 :location (c / country :name (n2 / name :op1 "Argentina"))) :arg2-of (i / include-91 :arg1 (a / and :op1 (p3 / person :name (n3 / name :op1 "Reino" :op2 "Kosonen") :arg0-of (h3 / have-org-role-91 :arg1 (c2 / country :name (n4 / name :op1 "Finland")) :arg2 (a2 / agent :mod (c3 / coach)) :time (c4 / current))) :op2 (p4 / person :name (n5 / name :op1 "Jouni" :op2 "Park" :op3 "Kali") :arg0-of (h4 / have-org-role-91 :arg1 (c5 / country) :arg2 (a3 / agent) :time (c6 / current)) :arg0-of (h5 / have-org-role-91 :arg2 (a4 / agent))) :ord (o / ordinal-entity :value 2)))) :mod (s / sole))
(s / say-01 :arg0 (c / company :name (n / name :op1 "Microsoft")) :arg1 (a / and :op1 (e / equip-01 :arg1 (d / debate-01) :arg1-of (c2 / complete-02) :time (a2 / already)) :op2 (l / link-01 :arg1 (d2 / debate-01) :arg2 (n2 / network))))
(p / possible-01 :arg1 (s / strict :mod (s2 / strict)) :time (t / then))
(t / try-01 :arg0 (i / i) :arg1 (a / avoid-01 :arg0 (i2 / i) :arg1 (p / person :name (n / name :op1 "Shakespeare"))) :time (a2 / always))
(r / reject-01 :polarity - :arg0 (w / we) :arg1 (i / idea :mod (w2 / whole)) :time (b / before :op1 (k / know-01 :arg0 (w3 / we) :arg1 (t / thing :arg1-of (t2 / talk-01 :arg0 (w4 / we))))))
(m / multi-sentence :snt1 (c / cause-01 :arg0 (p / person :name (n / name :op1 "Christiane" :op2 "Taubira") :arg0-of (h / have-org-role-91 :arg2 (m2 / minister :mod (j / justice)))) :arg1 (v / view-02 :arg0 (p2 / person :arg0-of (h2 / have-org-role-91 :arg2 (m3 / minister :mod (j2 / justice)))) :arg1 (r / request-01 :arg0 (p3 / political-party) :arg1 (r2 / request-01 :arg0 (p4 / political-party) :arg1 (m4 / meet-03 :arg0 (p5 / political-party) :arg1 (p6 / political-party :name (n2 / name :op1 "Socialist" :op2 "Party"))))))) :snt2 (a / and :op1 (a2 / allow-01 :arg0 (c2 / country) :arg1 (h3 / hope-01 :arg0 (c3 / country) :arg1 (f / future)))))
(t / think-01 :arg0 (i / i) :arg1 (c / cricket :time (n / now)))
(r / round :quant 7 :mod (s / still) :mod (s2 / still) :purpose (a / avoid-01 :arg1 (f / fall-01 :arg1 (n / number :quant-of (p / person :quant 1)))))
(c / cause-01 :arg0 (r / result-01 :arg1 (h / heatwaves :time (s / summer :mod (e / entire))) :arg2 (w / warm-07 :degree (m / more) :compared-to (u / usual))) :arg1 (a / and :op1 (j / july) :op2 (a2 / august)))
(l / love-01 :arg0 (p / person :arg0-of (h / have-rel-role-91 :arg1 (y / you) :arg2 (f / father))) :arg1 (s / something :arg1-of (r / resemble-01 :arg2 (t / that))) :arg1-of (c / cause-01 :arg0 (a / amr-unknown)))
(o / obligate-01 :arg1 (i / i) :arg2 (a / and :op1 (l / learn-01 :arg0 (i2 / i) :arg1 (p / produce-01 :arg0 (i3 / i) :arg1 (j / joke-01 :arg2 (p2 / person :quant 1975)))) :op2 (o2 / obligate-01 :arg1 (i4 / i) :arg2 (l2 / learn-01 :arg0 (i5 / i) :arg1 (p3 / produce-01 :arg0 (i6 / i) :arg1 (j2 / joke-01 :arg2 (p4 / person :quant 1975))))) :op3 (d / difficult :domain (t / time :mod (d2 / difficult)))))
(a / and :op1 (l / look-01 :arg0 (p / person :name (n / name :op1 "Rabinowitzin" :op2 "Esme" :op3 "Nussbaum")) :direction (a2 / around)) :op2 (t / talk-01 :arg0 (p2 / person)))
(o / oppose-01 :arg0 (a / and :op1 (p / person :arg0-of (h / have-org-role-91 :arg2 (h2 / head-of-state))) :op2 (p2 / person :arg0-of (e / extort-01)) :op3 (p3 / passivity)) :arg1 (a2 / and :op1 (e2 / employ-01 :polarity -) :op2 (e3 / exclusion) :op3 (p4 / passivity)) :li 1994)
(a / and :op2 (o / obsolete))
(a / and :op1 (s / say-01 :arg0 (a2 / and :op1 (l / level :arg1-of (h / high-02) :poss (p / person :arg0-of (h2 / have-org-role-91 :arg1 (c / city :name (n / name :op1 "Berkeley")) :arg2 (c2 / chairman :mod (v / vice))))) :op2 (p2 / person :name (n2 / name :op1 "Tony" :op2 "Pidgley") :arg0-of (h3 / have-org-role-91 :arg2 (c3 / chairman)))) :arg1 (a3 / and :op1 (r / return-01 :arg1 (a4 / and :op1 (m / market) :op2 (n3 / number :quant-of (s2 / shop))) :arg4 (n4 / normal) :time (s3 / since :op1 (b / begin-01 :arg1 (y / year)))) :op2 (r2 / return-01 :arg1 (a5 / and :op1 (n5 / number :quant-of (s4 / shop :poss (s5 / shop))) :op2 (n6 / number :quant-of (s6 / shop))) :time (s7 / since :op1 (b2 / begin-01 :arg1 (y2 / year))))) :op2 (a6 / add-01 :arg0 (a7 / and) :arg1 (s8 / stable-03 :polarity - :arg1 (e / environment :mod (t / this)) :arg1-of (s9 / stable-03)))))
(r / rise-01 :arg1 (m / manipulate-01 :arg1 (d / die-01)) :arg4 (m2 / monday :quant 8 :location (c / city :name (n / name :op1 "Paris"))) :arg1-of (c2 / cause-01 :arg0 (e / explode-01 :arg1 (t / tower :mod (f / field)))))
(c / contrast-01 :arg1 (r / ready-02 :arg1 (l / lot :mod (t / this)) :arg2 (t2 / trip-03 :arg0 (l2 / lot) :arg1 (c2 / cup) :mod (i / initial))) :arg2 (i2 / interest-01 :quant 2 :mod (p / potential) :domain (c3 / club :mod (b / basic) :poss (t3 / they))))
(o / or :op1 (c / close-10 :polarity - :arg1 (p / person :mod (k / kuvatessasi :location (s / surface))) :arg2 (s2 / surface)) :op2 (c2 / close-10 :arg1 (p2 / person) :arg2 (u / under :op1 (s3 / surface))) :condition (p3 / possible-01 :arg1 (p4 / possible-01)))
(m / multi-sentence :snt1 (f / far :mode (i / interrogative) :degree (t / too :mod (l / little)) :purpose (s / say-01 :arg1 (p / possible-01 :arg1 (s2 / say-01 :arg0 (t2 / they) :arg1 (p2 / possible-01 :arg1 (a / and :op1 (l2 / lack-01 :arg0 (t3 / they) :arg1 (c / confidence)) :op2 (l3 / lack-01 :arg0 (t4 / they) :arg1 (c2 / confidence)))))))) :snt2 (' / ' :mode (i2 / interrogative) :time (d / date-entity :decade (N / N-A))))
(a / and :op1 (o / open-01 :arg1 (l / location :name (n / name :op1 "Gösta" :op2 "Museum") :mod (n2 / new)) :location (j / june)) :op2 (p / present :arg1-of (i / include-91 :arg2 (t / thing :mod (o2 / other) :arg2-of (i2 / include-91 :arg1 (a2 / and :op1 (a3 / art) :op2 (p2 / person :name (n3 / name :op1 "Andy" :op2 "warholilta" :op3 "Roy"))))))))
(r / remember-01 :arg0 (i / i) :arg1 (g / game) :time (b / be-located-at-91 :arg1 (i2 / it) :arg2 (h / here)))
(a / and :op1 (o / organization :name (n / name :op1 "Occupy" :op2 "Central" :op3 "With" :op4 "Love" :op5 "and" :op6 "Peace" :op7 "Movement") :degree (l / large) :domain (d / democracy :location (b / behind :op1 (c / campaign-01 :mod (d2 / defensive)))) :degree (l2 / large)) :op2 (t / threaten-01 :arg0 (p / person :arg0-of (o2 / organize-01)) :arg1 (b2 / block-01 :arg0 (p2 / person) :arg1 (a2 / action :mod (b3 / block :mod (w / world)))) :condition (g / grant-01 :polarity - :arg0 (c2 / city :name (n2 / name :op1 "Beijing")) :arg1 (t2 / thing :mod (u / universal) :mod (g2 / genuine)) :arg2 (c3 / city :name (n3 / name :op1 "Hong" :op2 "Kong")))))
(o / oppose-01 :arg0 (p / person :arg0-of (o2 / oppose-01 :arg1 (s / summit :mod (m / military :name (n / name :op1 "NATO"))))) :arg1 (p2 / protest-01) :time (w / weekend :mod (l / last)))
(c / come-01 :arg1 (m / man :mod (g / german)) :location (h / here) :time (a / after :op1 (t / think-01 :arg0 (w / we) :arg1 (a2 / and :op1 (t2 / thing :arg1-of (d / do-02 :arg2 (d2 / dog))) :op2 (t3 / take-01 :arg0 (m2 / man) :arg1 (d3 / dog) :arg3 (a3 / arm :mod (m3 / moment)) :direction (d4 / down :op1 (s / slope)))))))
(a / and :op1 (s / suffer-01 :arg0 (p / person :mod (c / country :name (n / name :op1 "N-A")) :arg0-of (g / govern-01 :arg1 (c2 / country :name (n2 / name :op1 "N-A")))) :arg1 (d / defeat-01 :arg1 (p2 / political-party) :manner (c3 / crush))) :op2 (p3 / possess-01 :arg0 (p4 / person) :arg1 (p5 / possess-01 :arg1 (e / elect-01 :mod (c4 / continent :name (n3 / name :op1 "N-A"))) :mod (r / right :mod (e2 / extreme))) :arg1-of (p6 / possible-01)))
(m / multi-sentence :snt1 (t / think-01 :arg0 (i / i) :arg1 (a / attract-01 :arg0 (i2 / it) :arg1 (i3 / it))) :snt2 (t2 / try-01 :arg0 (h / he) :arg1 (r / remedy :arg0 (h2 / he) :arg1 (s / situation))))
(t / total-01 :arg2 4.2 :arg1 (i / increase-01 :arg1 (p / price-01)) :time (a / after :op1 (n / now) :quant (m / more-than :op1 (p2 / percentage-entity :value (N / N-A)))))
(r / recommend-01 :arg1 (c / continue-01 :arg1 (n / negotiate-01 :arg2 (p / pension) :mod (p2 / proper))) :time (a / after))
(p / publish-01 :arg0 (p2 / person :arg0-of (c / consume-01) :mod (e / every) :location (w / world)) :arg1 (m / man :mod (e2 / every) :location (w2 / world)) :time (a / after :op1 (p3 / publish-01 :arg1 (p4 / photo :topic (p5 / photo :mod (c2 / celebrity) :arg1-of (m2 / major-02) :arg0-of (h / hack-04))))))
(l / located :location (k / koiskalassa :op1 (k2 / koiskalassa)))
(p / possible-01 :arg1 (o / option :mod (g / good :degree (m / most)) :domain (s / service) :beneficiary (p2 / person :arg0-of (s2 / study-01) :arg0-of (r / raahaisivat :arg1 (p3 / property) :path (r2 / rate-entity-91 :arg1 (v / vehicle :mod (l / lastatuissa)) :arg2 (c / country))))))
(a / and :op1 (o / old) :op2 (l / low-04) :domain (e / equipment :mod (n / new)))
(a / and :op1 (t / take-01 :arg1 (b / boat :source (b2 / boat :arg1-of (s / succeed-03)))) :op2 (m / monday :arg0 (b3 / boat :arg1-of (s2 / succeed-03)) :arg1 (b4 / boat)) :mod (a2 / again))
(c / content-01 :arg1 (i / i) :time (n / now) :mod (a / again) :mod (a2 / again))
(r / raise-01 :arg0 (i / it) :arg1 (c / culture :mod (p / popular) :mod (s / sport)))
(m / multi-sentence :snt2 (b / be-located-at-91 :arg1 (a / and :op1 (p / person :arg0-of (h / have-org-role-91 :arg2 (p2 / president))) :op2 (p3 / person :arg0-of (h2 / have-org-role-91 :arg2 (p4 / president))) :op3 (p5 / person :arg0-of (h3 / have-org-role-91 :arg2 (p6 / president))) :op4 (p7 / person :arg0-of (h4 / have-org-role-91 :arg2 (p8 / president))) :op5 (p9 / person :arg0-of (h5 / have-org-role-91 :arg2 (p10 / president))) :op6 (p11 / person :arg0-of (h6 / have-org-role-91 :arg2 (p12 / president))) :op6 (p13 / person :arg0-of (h7 / have-org-role-91 :arg2 (p14 / president))) :op6 (p15 / person :arg0-of (h8 / have-org-role-91 :arg2 (p16 / president))) :op6 (p17 / person :arg0-of (h9 / have-org-role-91 :arg2 (p18 / president))) :op6 (p19 / person :arg0-of (h10 / have-org-role-91 :arg2 (p20 / president))) :op7 (p21 / person :arg0-of (h11 / have-org-role-91 :arg2 (p22 / president)))) :arg0-of (h12 / have-org-role-91 :arg2 (p23 / president))))
(s / say-01 :arg0 (v / voice :mod (s2 / small) :location (m / mind :poss (i / i))) :arg1 (o / obligate-01 :arg1 (y / you) :arg2 (c / capable-01 :arg1 (y2 / you) :arg2 (s3 / survive-01 :arg0 (y3 / you) :manner (a / alone) :duration (t / temporal-quantity :quant (N / N-A) :unit (m2 / minute)))) :time (u / until :op1 (w / work-09 :arg1 (c2 / computer) :mod (a2 / again) :mod (a3 / again)))) :medium (m3 / mind :poss (i2 / i)))
(i / invest-01 :arg0 (a / apollo) :arg1 (m / monetary-quantity :quant 1 :unit (d / dollar :mod (r / renminbi))) :arg2 (c / corporation :mod (c2 / cruise) :mod (m2 / monetary-quantity :quant 1 :unit (d2 / dollar :mod (r2 / renminbi)))))
(a / and :op2 (h / hate-01 :mode (i / interrogative) :arg0 (y / you) :arg1 (i2 / i) :arg1-of (c / cause-01 :arg0 (t / thick :degree (t2 / too) :domain (a2 / ankle)))))
(h / have-concession-91 :arg1 (a / and :op1 (a2 / age-01 :arg1 (p / person :arg1-of (a3 / age-01 :arg2 (t / temporal-quantity :quant (N / N-A) :unit (y / year)))) :arg2 (g / grip :arg0 (p2 / person) :arg1 (t2 / thing :arg2-of (n / name-01 :arg1 (p3 / person))))) :op2 (a4 / and :op1 (m / marry-01 :arg1 (p4 / person) :arg2 (g2 / grip-01 :arg0 (p5 / person) :arg1 (n2 / name :poss (p6 / person)))) :op2 (a5 / and :op1 (m2 / marry-01 :arg1 (p7 / person) :arg2 (a6 / area :poss (p8 / person))) :op2 (a7 / and :op1 (m3 / marry-01 :arg1 (p9 / person) :arg2 (a8 / area :poss (p10 / person))) :op2 (a9 / and :op1 (m4 / marry-01 :arg1 (p11 / person) :arg2 (a10 / area :mod (r / residential :mod (c / common)))) :op2 (t3 / thing :arg0-of (e / evidence-01 :arg1 (n3 / new-01 :arg1 (a11 / and :op1 (p12 / person :arg0-of (h2 / have-org-role-91 :arg2 (h3 / head-of-state))) :op2 (p13 / person :arg0-of (h4 / have-org-role-91 :arg2 (h5 / head-of-state))) :op3 (p14 / person :arg0-of (h6 / have-org-role-91 :arg2 (h7 / head-of-state))) :op4 (p15 / person :mod (e2 / even) :arg0-of (h8 / have-org-role-91 :arg2 (h9 / head-of-state))))))))) :time (t4 / time :arg1-of (s / same-01))) :time (t5 / time :arg1-of (s2 / same-01)))))
(a / and :op1 (s / spotted :arg0 (j / jockey :mod (d / discs)) :arg1 (h / he) :arg2 (d2 / do-02 :arg0 (h2 / he) :arg1 (i / imitations))) :op2 (c / contact-01 :arg0 (y / you) :arg1 (f / face :mod (n / new))))
(t / take-01 :arg0 (h / he) :arg1 (p / picture) :time (b / before :op1 (n / now) :quant (m / many :op1 (t2 / temporal-quantity :quant (N / N-A) :unit (y / year)))) :accompanier (p2 / person :arg0-of (h2 / have-rel-role-91 :arg1 (h3 / he) :arg2 (h4 / husband))))
(d / describe-01 :arg0 (n / notice-03) :arg1 (p / place :mod (m / meet-03 :time (f / former)) :mod (o / organization :name (n2 / name :op1 "Connells"))) :arg2 (h / house :quant 1 :consist-of (b / bedroom)))
(s / say-01 :arg0 (p / person :name (n / name :op1 "Peskov")) :arg1 (p2 / possible-01 :arg1 (g / grant-01 :arg0 (g2 / government-organization :arg0-of (g3 / govern-01) :poss (c / country) :mod (o / only)) :arg1 (t / territory :mod (e / east)) :arg2 (g4 / government-organization :arg0-of (g5 / govern-01)))))
(( / ( :( (n / name) :op1 "Henry" :op2 "''" :op3 "Good" :op4 "-" :op5 "teatterissa")
(m / multi-sentence :snt1 (b / ban-01 :polarity - :arg1 (t / they)) :snt2 (p / prohibit-01 :polarity - :arg1 (a / anything) :arg2 (t2 / they) :mod (o / only :polarity -) :time (n / no-longer)))
(e / expect-01 :arg0 (i / i) :arg1 (p / policy :mod (f / future) :domain (i2 / it)))
(c / continue-01 :arg1 (g / game) :manner (s / sudden))
(s / say-01 :arg0 (p / person :name (n / name :op1 "Mikkelsen")) :arg1 (p2 / possible-01 :arg1 (t / thank-01 :arg0 (p3 / person) :arg1 (p4 / person) :mod (a / again :mod (o / once))) :purpose (p5 / possible-01 :arg1 (t2 / thank-01 :arg0 (p6 / person) :arg1 (p7 / person) :mod (a2 / again :mod (o2 / once))))) :time (a3 / after :op1 (f / find-01 :arg0 (p8 / person) :arg1 (p9 / person :arg0-of (h / have-org-role-91 :arg1 (c / company :name (n2 / name :op1 "Facebook")) :arg3 (a4 / apprentice-01 :arg0 (p10 / person)))))))
(o / obligate-01 :arg1 (p / person :name (n / name :op1 "Henry")) :arg2 (u / undergo-28 :arg1 (p2 / person) :arg2 (m / memory :mod (a / amphibious) :arg0-of (p3 / pain-01))))
(a / and :op1 (c / come-01 :arg1 (i / idea) :arg4 (m / mind :poss (i2 / i)) :time (s / stage :quant 1)) :op2 (c2 / change-01 :arg1 (i3 / idea)) :op3 (c3 / change-01 :arg1 (i4 / idea)))
(g / good :domain (p / park) :beneficiary (l / location :poss (p2 / park)) :arg1-of (c / cause-01 :arg0 (p3 / possible-01 :arg1 (e / enlarge :arg1 (p4 / park) :arg2 (r / region :mod (p5 / pavilion))))))
(a / and :op1 (s / stress-01 :arg0 (p / person :arg0-of (r / represent-01 :arg1 (g / government-organization :name (n / name :op1 "Kremlin"))) :arg1-of (d / design-01 :arg3 (r2 / remedy :poss (c / comment-01 :arg0 (p2 / person :name (n2 / name :op1 "Putin"))))) :arg1-of (d2 / design-01 :arg3 (r3 / remedy :poss (c2 / comment-01 :arg0 (p3 / person))))) :arg1 (b / be-located-at-91 :arg1 (r4 / regime :mod (c3 / country)) :arg2 (r5 / region :mod (e / east) :part-of (r6 / rebel-01)))) :op2 (s2 / stress-01 :arg0 (p4 / person) :arg1 (b2 / be-located-at-91 :arg1 (p5 / person :quant 2000000 :arg1-of (i / include-91 :arg2 (p6 / population :arg1-of (i2 / include-91 :arg2 (p7 / population) :arg3 (m / majority))) :arg3 (m2 / majority))) :arg2 (r7 / region :mod (e2 / east) :part-of (r8 / rebel-01)))))
(s / say-01 :arg0 (p / person :name (n / name :op1 "Putin") :arg0-of (h / have-org-role-91 :arg1 (r / research-institute :name (n2 / name :op1 "N-A") :mod (n3 / news)) :arg2 (m / member :mod (n4 / news)))) :arg1 (a / and :op1 (' / '' :arg1 (t / talk-01 :arg1 (p2 / peace) :arg1-of (p3 / plan-01)) :arg2 (e / elect-01 :mod (p4 / parliamentary)) :time (d / date-entity :month 10 :day 26)) :op2 (a2 / attack-01 :arg0 (f / force :mod (g / government-organization :arg0-of (g2 / govern-01))) :arg1 (a3 / area :location-of (a4 / attack-01 :arg0 (s2 / separatist) :arg1 (c / civilian))))))
(t / take-01 :arg1 (p / propose-01) :frequency (o / often) :location (s / society))
(r / recommend-01 :arg0 (a / and :op1 (p / person :arg0-of (h / have-org-role-91 :arg1 (o / organization :name (n / name :op1 "University" :op2 "of" :op3 "Massachusetts" :op4 "Amherst" :op5 "'s" :op6 "College" :op7 "Without" :op8 "Walls")) :arg3 (l / lead-02 :arg0 (p2 / person)))) :op2 (p3 / person :name (n2 / name :op1 "Ingrid" :op2 "Bracey") :arg0-of (h2 / have-org-role-91 :arg2 (a2 / academicians)))) :arg1 (r2 / recommend-01 :arg0 (p4 / person :arg0-of (s / study-01)) :arg1 (a3 / ask-02 :arg0 (p5 / person :arg0-of (s2 / study-01)) :arg1 (h3 / have-org-role-91 :arg0 (p6 / person) :arg2 (p7 / professor)) :time (e / early :degree (m / more) :mod (t / this))) :arg2 (p8 / person :arg0-of (s3 / study-01))))
(p / possible-01 :arg1 (t / try-01 :arg0 (p2 / person :name (n / name :op1 "Gekkoihin")) :arg1 (p3 / predict-01 :arg0 (p4 / person) :arg1 (i / impact-01 :arg0 (t2 / this) :arg1 (p5 / person :arg0-of (h / have-03 :arg1 (t3 / this))) :arg1-of (c / cause-01 :arg0 (c2 / conditions :arg0 (s / statesman :mod (n2 / new) :location (j / july)) :arg1 (m / man) :arg1-of (l / long-03 :degree (m2 / more))))))) :manner (i2 / impact-01 :arg0 (i3 / impact-01)))
(r / return-01 :arg1 (t / thousands :location (t2 / territory :poss (c / country-region :name (n / name :op1 "Gaza" :op2 "Strip")))) :arg4 (s / school) :time (a / after :op1 (s2 / spend-02 :arg0 (t3 / thousands) :arg1 (s3 / spend-01 :arg1 (t4 / thing :arg2-of (s4 / shelter-01 :arg3 (b / bomb))))) :time (a2 / after :op1 (s5 / spend-02 :arg0 (a3 / and :op1 (r2 / rocket) :op2 (b2 / block-01)) :arg1 (a4 / and :op1 (c2 / community :poss (t5 / they)) :op2 (c3 / community :poss (t6 / they))) :time (w / war-01 :arg0 (a5 / and) :arg1 (a6 / and :op1 (c4 / community :poss (t7 / they)) :op2 (c5 / community :poss (t8 / they))) :time (w2 / war-01 :arg1 (a7 / and :op1 (c6 / community :mod (c7 / community)) :op2 (c8 / community :poss (t9 / they))) :time (w3 / war))) :time (b3 / battle-01 :location (r3 / region))))))
(a / and :op1 (r / rowing :mode (i / interrogative) :mod (p / plus) :domain (f / fish)) :op2 (c / contain-01 :arg0 (f2 / fish) :arg1 (r2 / refuse-01 :arg0 (k / keller))))
(g / glad-02 :arg0 (h / have-03 :arg0 (w / we) :arg1 (p / person :quant 2 :arg0-of (w2 / will-02 :arg1 (h2 / help-01 :arg0 (p2 / person) :arg1 (a / and :op1 (p3 / person :name (n / name :op1 "Tampere" :op2 "Antti" :op3 "Soini")) :op2 (p4 / person :name (n2 / name :op1 "Tom") :arg0-of (h3 / have-rel-role-91 :arg1 (p5 / person) :arg2 (f / father)))))))) :arg1 (i / i))
(a / and :op1 (s / sell-01 :arg1 (a2 / and :op1 (h / home) :op2 (p / product :mod (l / leisure))) :arg2 (s2 / sell-01 :mod (n / net)) :arg1-of (b / bad-05 :degree (m / most)) :time (b2 / before :op1 (n2 / now) :quant (o / one :mod (o2 / one)))) :op2 (d / decrease-01 :arg1 (p2 / product :arg1-of (d2 / decrease-01 :mod (n3 / net))) :arg3 (r / rate-entity-91 :arg1 (p3 / percentage-entity :value (N / N-A)) :arg2 (t / temporal-quantity :quant (N2 / N-A) :unit (y / year)))))
(o / order-01 :arg0 (p / person :name (n / name :op1 "Charles" :op2 "Macnair")) :arg1 (t / try-02 :arg1 (p2 / person) :arg1-of (c / cause-01 :arg0 (j / january :arg1 (p3 / person)))))
(a / and :op1 (k / kind :mod (n / nastola) :domain (b / bottas)) :op2 (d / differ-02 :arg1 (s / situation :poss (p / person :name (n2 / name :op1 "Syyrakki")))) :op3 (b2 / believe-01 :arg0 (p2 / person) :arg1 (r / remain-01 :arg1 (p3 / peninsula :name (n3 / name :op1 "N-A")) :arg3 (t / town :mod (h / home)))))
(h / have-purpose-91 :arg1 (s / seminar) :arg2 (s2 / seek-01 :arg1 (w / way :mod (n / new) :instrument-of (b / balance-01 :arg1 (e / economy)))))
(a / and :op1 (p / property) :op2 (s / seat-01 :quant (n / nearly :op1 1.5)) :location (s2 / shores :poss (l / lake)))
(p / play-02 :arg0 (t / turn-02 :arg1 (w / word :mod (s / slash :op1 (' / '') :op2 ('2 / '')))) :arg1 (w2 / word :mod (c / challenging)))
(m / multi-sentence :snt1 (c / contrast-01 :arg1 (f / fight-01 :mod (g / good)) :arg2 (g2 / good :degree (m2 / more :degree (l / little)) :domain (i / it))) :snt2 (g3 / good :degree (m3 / more :degree (l2 / little)) :domain (i2 / it)) :snt3 (i3 / include-91 :arg1 (i4 / i) :arg2 (i5 / i :arg0-of (s / see-01 :arg1 (i6 / i)))))
(e / estimate-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg2 (a / authority))) :arg1 (o / or :op1 (t / travel-01 :arg0 (o2 / or :op1 (c / citizen :quant (a2 / about :op1 800) :mod (c2 / country :name (n / name :op1 "France"))) :op2 (c3 / citizen :arg1-of (r / register-02 :location (c4 / country)))) :arg4 (c5 / country :name (n2 / name :op1 "Syria")) :mod (l / last)) :op2 (p2 / plan-01 :arg1 (d / depart-01 :arg0 (c6 / country) :arg2 (c7 / country)) :time (c8 / current))))
(o / option :mod (g / good :degree (m / most)) :domain (s / service) :beneficiary (p / person :arg0-of (s2 / study-01)) :location (a / across :op1 (c / country) :arg2-of (i / include-01 :arg1 (c2 / car :location (a2 / across :op1 (c3 / country))))))
(a / and :op1 (c / contact-01 :arg0 (a2 / authority)) :op2 (r / receive-01 :arg0 (p / person :arg0-of (p2 / publish :arg1 (p3 / picture :arg1-of (s / steal-01) :poss (p4 / person :name (n / name :op1 "Jennifer" :op2 "Lawrence")))) :quant (a3 / all)) :arg1 (t / thing :arg2-of (a4 / accuse-01))))
(b / become-01 :arg1 (p / person :name (n / name :op1 "Liikevoittoprosentiksi") :quant 7.1))
FAILED_TO_PARSE#Couldn't convert to full AMR graph.
(s / seem-01 :arg1 (f / finns :arg1 (p / person :name (n / name :op1 "Lidl") :arg0-of (h / have-org-role-91 :arg1 (c / chain :mod (g / grass-roots)) :arg2 (c2 / chain :mod (g2 / grass-roots))) :quant (m / multiple :op1 (0 / 01.09.2014))) :arg1-of (h2 / have-condition-91 :arg2 (b / believe-01 :arg1 (t / tulosluku)))))
(a / and :op1 (g / give-01 :arg0 (i / it) :arg1 (p / pleasure :mod (r / real)) :arg2 (i2 / i) :purpose (s / sit-01 :arg1 (i3 / i) :arg2 (g2 / guide-01 :arg1 (i4 / i) :arg2 (g3 / guide-01 :arg1 (c / country :mod (w / whole)) :time (b / begin-01 :arg1 (a2 / and :op1 (j / journey) :op2 (m / middle) :op3 (e / end-01))))))) :op2 (b2 / believe-01 :polarity - :arg0 (i5 / i) :arg1 (g4 / give-up-07 :polarity - :arg0 (i6 / i) :arg1 (f / feel-01 :arg0 (i7 / i) :arg1 (f2 / feel-01)) :time (e2 / ever))))
(t / take-01 :arg0 (h / he) :arg1 (i / image :mod (t2 / this)) :time (b / before :op1 (n / now) :quant (t3 / temporal-quantity :quant (N / N-A) :unit (y / year))) :accompanier (p / person :arg0-of (h2 / have-rel-role-91 :arg1 (h3 / he) :arg2 (h4 / husband))))
(s / say-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (s2 / school :arg1-of (h2 / high-02)) :arg2 (p2 / part))) :arg1 (a / appear-02 :arg1 (w / way :mod (w2 / way :arg1-of (l / long-03)) :source (l2 / life :poss (p3 / person :arg0-of (s3 / study-01))))))
(s / say-01 :arg0 (c / company :name (n / name :op1 "Microsoft")) :arg1 (a / and :op1 (e / equip-01 :arg1 (c2 / center) :arg2 (n2 / network) :degree (f / full) :time (a2 / already)) :op2 (c3 / connect-01 :arg1 (c4 / center) :arg2 (n3 / network))))
(e / estimate-01 :arg1 (t / thing :arg1-of (e2 / estimate-01)) :arg2 (r / range-01 :arg3 7 :arg1 (e3 / estimate-01)))
(m / move-01 :arg1 (p / person :name (n / name :op1 "Lopez")) :arg2 (c / city :name (n2 / name :op1 "Madrid") :mod (r / real)) :arg3 (p2 / period :mod (t / this)))
(s / send-01 :polarity - :arg0 (i / i) :arg1 (i2 / it) :arg2 (c / compete-01))
(c / contrast-01 :arg1 (r / reply-01 :arg0 (p / person :name (n / name :op1 "Soini"))) :arg2 (r2 / reach-01 :arg1 (m / man :mod (g / german)) :mod (a / apparent) :mod (a2 / apparent)))
(i / include-91 :arg1 (t / thing :arg0-of (c / cause-01 :arg1 (d / die-01 :arg1 (p / person :arg0-of (h / have-rel-role-91 :arg2 (m / mother)))))) :arg2 (i2 / it) :mod (a / also))
(c / contrast-01 :arg1 (o / offer-01 :arg0 (c2 / company) :arg1 (a / aircraft :arg1-of (p / private-03))) :arg2 (o2 / offer-01 :arg0 (c3 / company) :arg1 (a2 / and :op1 (e / equipment :mod (t / transport-01) :mod (o3 / other)) :op2 (e2 / equipment :mod (t2 / transport-01) :mod (o4 / other) :example (o5 / or :op1 (p2 / person :name (n / name :op1 "Aston" :op2 "Martin")) :op2 (l / language :name (n2 / name :op1 "N-A")) :op3 (m / mclaren)))) :arg0-of (c4 / cause-01 :arg1 (e3 / ensure-01 :arg0 (c5 / customer) :arg1 (e4 / enter-01 :arg0 (c6 / customer) :arg1 (u / university))))))
(t / think-01 :arg0 (i / i) :arg1 (a / and :op1 (l / last-01 :arg1 (m / make-01 :arg1 (t2 / temporal-quantity :quant (N / N-A) :unit (y / year)) :arg2 (t3 / temporal-quantity :quant (N2 / N-A) :unit (y2 / year))) :arg4 (w / wheelchair) :time (b / before :op1 (t4 / turn-01 :arg0 (t5 / they) :arg1 (p / person :quant 25)))) :op2 (l2 / lose-02 :arg0 (i2 / i) :arg1 (f / function-01 :arg0 (i3 / i) :extent (w2 / whole)) :manner (s / slow))))
(f / fashioned :polarity - :time (n / no-longer))
(f / follow-01 :arg1 (a / authority :mod (i / intelligence :mod (c / country :name (n / name :op1 "N-A")))) :arg2 (a2 / action :poss (m / man)) :time (e / early :degree (m2 / more)))
(w / win-01 :arg0 (o / organization :name (n / name :op1 "Cannes" :op2 "Film" :op3 "Festival")) :arg1 (a / award :name (n2 / name :op1 "N-A") :mod (a2 / actress) :mod (g / good :degree (m / most))) :arg2 (p / person :name (n3 / name :op1 "Croze")) :purpose (r / role :poss (p2 / person) :topic (i / invasion :mod (b / barbarians) :location (t / thing :quant 2003))))
(i / increase-01 :arg1 (s / salary :mod (a / also)) :arg1-of (c / cause-01 :arg0 (d / discuss-01 :arg1 (p / person :name (n / name :op1 "Hristo" :op2 "Ivanov") :arg0-of (h / have-org-role-91 :arg2 (m / minister :mod (j / justice) :mod (j2 / justice)))))))
(a / appeal-02 :arg0 (p / person :name (n / name :op1 "Esme")) :arg1 (r / right-05 :arg2 (r2 / respond-01 :arg1 (q / question-01 :arg1-of (p2 / personal-02)))) :mod (s / still))
(o / obligate-01 :arg2 (g / go-06 :arg1 (r / reduce-01) :arg2 (m / memory :mod (b / broadcast-program :name (n / name :op1 "N-A")) :arg0-of (p / pain-01))))
(a / and :op1 (f / favor-01 :arg0 (p / person :name (n / name :op1 "Kevern")) :arg1 (a2 / ailinnin :mod (r / regrets))) :op2 (w / words :arg1 (w2 / word :mod (c / cruel) :mod (u / unnecessarily))) :op3 (c2 / cause-01 :arg0 (f2 / fear-01 :arg1 (e / eye :part-of (m / moment :mod (t / this)))) :arg1 (d / decide-01 :arg0 (p2 / person :name (n2 / name :op1 "Ailinn")) :arg1 (s / stand :poss (p3 / person)))))
(c / contrast-01 :arg2 (e / event :location (c2 / country :name (n / name :op1 "Poland"))))
(m / multi-sentence :snt1 (c / contrast-01 :arg2 (o / obligate-01 :arg2 (a / adapt-01 :arg1 (e / everything)))) :snt2 (s / say-01 :arg0 (i / i) :arg1 (o2 / or :op1 (s2 / say-01 :arg1 (o3 / or :op1 1 :op2 2)) :op2 (s3 / say-01 :arg0 (i2 / i) :arg1 (o4 / or :op1 (p / person :quant 1) :op2 (p2 / person :quant 2))))))
(r / renaissance :mode (i / interrogative) :mod (n / new) :poss (h / he) :domain (t / this))
(s / say-01 :arg0 (g / government-organization :arg0-of (g2 / govern-01 :arg1 (c / country :name (n / name :op1 "N-A")))) :arg1 (s2 / story :topic (m / media)) :mod (a / also) :arg1-of (s3 / say-01 :arg0 (a2 / and :op1 (r / revolution-03 :arg0 (a3 / activist :mod (d / democracy))) :op2 (h / henchmen :arg1 (p / power :mod (w / west))))))
(s / say-01 :arg0 (t / thing :arg1-of (r / report-01 :purpose (u / upgrade-02))) :arg1 (c / cause-01 :arg0 (a / and :op1 (u2 / use-01 :arg1 (u3 / use-01 :arg1 (h / house-01))) :op2 (i / increase-01 :arg1 (u4 / use-01 :arg1 (a2 / and :op1 (h2 / house-01) :op2 (w / wealth)))) :arg2 (e / end-01 :arg1 (c2 / century :quant 80) :arg4 90))))
(a / and :op2 (i / include-91 :arg1 (m / many) :arg2 (t / they)))
(h / have-concession-91 :arg1 (b / become-01 :arg1 (m / music :mod (j / jazz)) :arg2 (f / familiarize-01 :arg1 (m2 / music) :arg2 (h2 / he) :path (c / collection :poss (p / person :arg0-of (h3 / have-rel-role-91 :arg1 (p2 / person :arg0-of (h4 / have-rel-role-91 :arg1 (p3 / person :arg0-of (h5 / have-rel-role-91 :arg1 (p4 / person :arg0-of (h6 / have-rel-role-91 :arg1 (p5 / person :arg0-of (h7 / have-rel-role-91 :arg1 (p6 / person :arg0-of (h8 / have-rel-role-91 :arg1 (p7 / person :arg0-of (h9 / have-rel-role-91 :arg1 (p8 / person :arg0-of (h10 / have-rel-role-91 :arg1 (p9 / person :arg0-of (h11 / have-rel-role-91 :arg2 (f2 / father))) :arg2 (f3 / father))) :arg2 (f4 / father))) :arg2 (f5 / father))))))))))))))) :arg2 (b2 / before :op1 (a / age-01 :arg1 (p10 / person) :arg2 (t / temporal-quantity :quant (N / N-A) :unit (y / year))))))
(i / intend-01 :arg0 (p / person :name (n / name :op1 "Lars" :op2 "von" :op3 "Trier") :arg0-of (h / have-org-role-91 :arg2 (d / director :mod (f / film)))) :arg1 (r / return-01 :arg1 (p2 / person) :arg4 (f2 / factor :mod (t / tv) :quant (s / series))))
(a / and :op1 (p / pay-01 :arg0 (b / book :mod (t / this)) :arg1-of (p2 / pay-01 :arg3 (a2 / access-01 :arg1 (h / holder :poss (b2 / book))))) :op2 (e / exemplify-01 :arg0 (o / or :op1 (o2 / organization :name (n / name :op1 "Amazon.com")) :op2 (o3 / organization :name (n2 / name :op1 "Barnes" :op2 "&" :op3 "Noble" :op4 "Inc")) :op3 (k / kirjakaupoille :mod (c / chegg)))))
(a / and :op1 (f / fall-01 :arg1 (s / sell-01 :arg1 (p / product :arg0-of (p2 / produce-01 :arg1 (p3 / product)))) :arg2 (p4 / percentage-entity :value (N / N-A)) :time (b / before :op1 (n / now) :quant (t / temporal-quantity :quant (N2 / N-A) :unit (y / year)))) :op2 (f2 / fall-07 :arg1 (s2 / sell-01) :arg2 (t2 / turnover :mod (m / more-than :op1 (p5 / percentage-entity :value (N3 / N-A))))))
(s / same-01 :arg1 (w / wave-04 :arg1 (w2 / wave-04 :arg1 (s2 / sea) :mod (s3 / sea))) :arg2 (t / they) :mod (m / massive))
(p / person :quant 2 :arg0-of (o / observe-01) :arg1-of (r / ready-02 :arg2 (h / help-01 :arg0 (p2 / person) :arg2 (a / and :op1 (p3 / person :name (n / name :op1 "Antti")) :op2 (p4 / person :name (n2 / name :op1 "Tuomo" :op2 "Soini") :arg0-of (h2 / have-rel-role-91 :arg1 (p5 / person) :arg2 (f / father)))))) :arg2-of (f2 / fortunate-01))
(c / contrast-01 :arg1 (a / and :op1 (j / journalist) :op2 (j2 / journalist) :op3 (p / person :arg0-of (h / have-rel-role-91 :arg2 (r / relative)))) :arg2 (f / fan :mod (a2 / also)))
(d / discuss-01 :arg0 (a / and :op1 (p / person :arg0-of (p2 / partner-01 :arg1 (w / we))) :op2 (p3 / person :arg0-of (p4 / partner-01 :arg1 (w2 / we))) :op3 (p5 / person :arg0-of (h / have-rel-role-91 :arg1 (w3 / we) :arg2 (p6 / partner))) :op4 (p7 / person :arg0-of (h2 / have-rel-role-91 :arg1 (w4 / we) :arg2 (p8 / partner))) :op5 (p9 / person :arg0-of (h3 / have-rel-role-91 :arg1 (w5 / we) :arg2 (p10 / partner))) :op6 (p11 / person :arg0-of (h4 / have-rel-role-91 :arg1 (w6 / we) :arg2 (p12 / partner))) :op6 (p13 / person :arg0-of (h5 / have-rel-role-91 :arg1 (w7 / we) :arg2 (p14 / partner))) :op6 (p15 / person :arg0-of (h6 / have-rel-role-91 :arg1 (w8 / we) :arg2 (p16 / partner))) :op6 (p17 / person :arg0-of (l / listen-01 :polarity - :arg1 (p18 / person))) :op7 (a2 / agree-01 :polarity - :arg0 (p19 / person))))
(h / have-purpose-91 :arg1 (o / opportunity :arg1-of (s / start-01 :arg0 (p / person :name (n / name :op1 "Sebastian" :op2 "Rejman")))) :arg2 (s2 / software :name (n2 / name :op1 (p2 / presentation) :op2 (p3 / presentation) :op3 (p4 / presentation) :op4 (s3 / software) :op5 (s4 / software) :op6 (s5 / software) :op7 (s6 / software))))
(l / look-01 :arg0 (p / person :name (n / name :op1 "Esme" :op2 "Nussbaum")) :arg1 (a / around :op1 (t / talk-01 :arg0 (p2 / person :name (n2 / name :op1 "Rabinowitz")))))
(c / call-03 :arg0 (c2 / country :name (n / name :op1 "Holland")) :arg1 (a / act-02 :arg0 (c3 / country) :location (c4 / concert :arg0 (g / government-organization) :arg1 (g2 / government-organization :arg0-of (g3 / govern-01)))) :arg2 (g4 / government-organization :arg0-of (g5 / govern-01)))
(g / great :domain (p / possible-01 :arg1 (s / succeed-01 :arg1 (p2 / picture :mod (o / other)) :mod (a / also)) :arg1-of (c / cause-01 :arg0 (a2 / as-long-as :op1 (a3 / and :op1 (i / idea) :op2 (v / visual :mod (t / torque)) :domain (i2 / it))))))
(b / be-located-at-91 :arg1 (p / person :name (n / name :op1 "Soini")) :arg2 (w / way :poss (p2 / person) :direction (h / home)) :time (a / already))
(p / person :arg0-of (i / inhabit-01) :quant (a / approximately :op1 11) :location (m / middle :part-of (l / location :name (n / name :op1 "Tampere"))))
(e / enjoy-01 :arg0 (n / no-one) :arg1 (e2 / eat-01 :arg0 (n2 / no-one) :arg1 (c / carrots)))
(a / and :op1 (f / fortunate-01 :polarity - :arg1 (y / you) :arg2 (t / tendency :arg0 (y2 / you) :arg1 (' / '' :arg0 (h / he)))) :op2 (c / comment-01 :arg0 (h2 / he)) :op3 (c2 / comment-01 :arg0 (h3 / he)) :time (r / read-01 :arg0 (h4 / he) :arg1 (r2 / report-01) :arg2 (w / whole)))
(e / explain-01 :arg1 (t / this) :manner (s / sociologist))
(m / multi-sentence :snt1 (a / and :op1 (w / work-01 :arg0 (p / person :name (n / name :op1 "Henryn" :op2 "Henryn") :arg0-of (h / have-rel-role-91 :arg2 (f / father))) :location (f2 / factory)) :op2 (d / die-01 :arg1 (p2 / person) :location (f3 / factory))) :snt2 (a2 / and :op1 (b / boy) :op2 (p3 / person :arg0-of (h2 / have-rel-role-91 :arg1 (b2 / boy) :arg2 (f4 / father))) :domain (a3 / and :op1 (b3 / boy) :op2 (p4 / person :arg0-of (h3 / have-rel-role-91 :arg1 (p5 / person) :arg2 (f5 / father)))) :mod (r / remote)))
(a / and :op1 (k / know-02 :arg1 (h / he) :arg2 (c / conductor :arg1 (h2 / he)) :location (i / international)) :op2 (r / receive-01 :arg0 (h3 / he) :arg1 (m / medal :name (n / name :op1 (f / finlandia) :op2 (m2 / medal) :op3 (m3 / medal) :op4 (m4 / medal) :op5 (m5 / medal)))))
(t / transfer-01 :arg1 (p / person :name (n / name :op1 "Lopez")) :arg2 (l / leg :part-of (o / organization :name (n2 / name :op1 "Real" :op2 "Madrid"))) :arg3 (o2 / organization :name (n3 / name :op1 "Real" :op2 "Madrid")))
(h / have-concession-91 :arg1 (r / reflected :arg1 (i / it) :time (s / still) :location (w / website :poss (i2 / it))) :arg2 (d / deleted :arg0 (p / property :poss (m / military :name (n / name :op1 "N-A"))) :arg1 (u / url-entity :value (a / advertising))))
(l / last-01 :arg1 (p / project) :arg2 (b / behind :op1 (t / temporal-quantity :quant (N / N-A) :unit (y / year))))
(a / and :op1 (r / rise-01 :arg1 (p / profit-01 :arg0 (p2 / person :mod (u / ultra))) :arg2 (p3 / percentage-entity :value (N / N-A)) :time (b / before :op1 (n / now) :quant (t / temporal-quantity :quant (N2 / N-A) :unit (y / year)))) :op2 (i / increase-01 :arg1 (t2 / turnover :arg1-of (i2 / increase-01 :arg2 (p4 / percentage-entity :value (N3 / N-A)))) :arg4 (m / monetary-quantity :quant 380 :unit (p5 / pound)) :arg4 (m2 / monetary-quantity :quant 380 :unit (p6 / pound))))
(e / estimate-01 :arg0 (p / person :name (n / name :op1 "Sivonen") :arg1-of (i / include-91 :arg2 (p2 / person :arg0-of (s / serlachius-museoissa :arg1 (y / year :mod (t / this))))) :quant (w / whole)) :arg1 (y2 / year :mod (t2 / this)) :time (y3 / year :mod (t3 / this)))
(p / possible-01 :arg1 (f / follow-02 :arg1 (t / thing :arg1-of (d / decide-01)) :arg3 (a / and :op1 (t2 / thing :quant 13) :op2 (t3 / thing :quant 13))) :time (t4 / time :mod (n / next)))
(r / rise-01 :arg1 (a / and :op1 (s / sell-01 :arg1-of (p / private-03)) :op2 (s2 / sell-01 :arg1-of (p2 / possible-01 :polarity -)) :op3 (s3 / sell-01 :arg1-of (a2 / average-04))) :arg2 (t / thing :arg2-of (p3 / price-01 :arg1 (m / monetary-quantity :quant 423 :unit (d / dollar :mod (r2 / renminbi))))) :time (b / by :op1 (e / end-01 :arg1 (y / year :mod (p4 / previous)))))
(i / include-91 :arg1 (a / and :op1 (p / person :mod (m / male) :quant (m2 / multiple :op1 1)) :op2 (p2 / plan-01 :quant 4)) :arg2 (t / test))
(a / and :op1 (b / become-01 :arg1 (v / video) :arg2 (p / popular-02 :arg1 (v2 / video) :arg2 (c / company :name (n / name :op1 "Facebook")) :degree (v3 / very))) :op2 (l / like-01 :arg0 (v4 / video) :arg1 (c2 / company) :degree (e / equal :compared-to (d / distribute-01 :arg1 (v5 / video) :frequency (t / time :quant 10000)))))
(d / deciding :arg1 (p / person :arg0-of (s / study-01)) :arg2 (u / use-01 :arg0 (p2 / person) :arg1 (a / approach-02 :mod (c / creative) :example (a2 / and :op1 (s2 / shop :mod (o / online)) :op2 (p3 / person :name (n / name :op1 "Schroeder"))))) :arg1-of (i / increase-01))
(a / and :op1 (g / good :domain (p / part :mod (g2 / good :degree (m / most)))) :op2 (l / libero :arg1 (p2 / person :name (n / name :op1 "Hillaelina" :op2 "Hämäläinen") :arg0-of (l2 / libero :degree (e / equal) :compared-to (p3 / possible-01 :arg1 (w / wovo))))))
(p / publish-01 :polarity - :arg1 (t / thing :arg1-of (i / invest-01) :mod (o / other)))
(t / tell-01 :arg0 (c / company :name (n / name :op1 "Facebook") :arg1-of (p / public-02)) :arg1 (h / hurt-01 :arg1 (d / dog :arg0-of (h2 / have-rel-role-91 :arg1 (c2 / city :location (m / mountain)) :arg2 (m2 / mountain))) :mod (d2 / day)) :arg2 (i / it))
(a / and :op1 (t / tell-01 :arg0 (p / person :name (n / name :op1 "Perry")) :arg2 (i / innocent-01 :arg1 (p2 / person))) :op2 (c / call-01 :arg0 (p3 / person) :arg1 (p4 / plot-01 :arg1 (p5 / plot-01 :mod (p6 / politics))) :arg2 (p7 / person)))
(s / say-01 :arg0 (p / person :arg0-of (p2 / prosecute-01)) :arg1 (g / go-02 :arg0 (m / man) :accompanier (a / and :op1 (p3 / person :arg0-of (h / have-rel-role-91 :arg1 (m2 / man) :arg2 (p4 / partner))) :op2 (m3 / man :mod (a2 / another) :arg0-of (k / kittiwake :arg1 (k2 / kittiwake :quant 34))))))
(t / think-01 :arg0 (i / i) :arg1 (d / disease :mod (d2 / dangerous :degree (l / less :degree (m / much)))))
(s / say-01 :arg0 (p / person :arg0-of (s2 / support-01 :arg1 (i / independence)) :quant (m / many)) :arg1 (b / be-located-at-91 :arg1 (p2 / person :arg0-of (s3 / support-01)) :arg2 (l / lose-02)))
(s / say-01 :arg1 (o / offense-02 :polarity - :arg0 (t / they) :mod (r / really)) :arg2 (p / person :name (n / name :op1 "Kevern")))
(d / decide-01 :arg0 (p / parliament :arg0-of (h / have-org-role-91 :arg1 (c / country :name (n / name :op1 "China")) :arg2 (p2 / parliament))) :arg1 (a / allow-01 :polarity - :arg1 (c2 / choose-01 :arg0 (p3 / person :arg0-of (v / vote-01 :arg1 (c3 / city :name (n2 / name :op1 "Hong" :op2 "Kong")))) :arg1 (c4 / choose-01 :arg0 (p4 / person) :arg1 (a2 / and :op1 (g / grow-01 :arg1 (r / reform-01 :arg1 (d2 / democracy))) :op2 (d3 / demand-01 :arg1 (r2 / reform-01 :arg1 (d4 / democracy))) :op3 (u / unrest :arg1-of (h2 / have-concession-91 :arg2 (u2 / unrest))))))))
(s / show-01 :arg0 (a / appear-01 :arg1 (t / thing :arg1-of (o / opine-01 :arg0 (o2 / organization :name (n / name :op1 "Journal" :op2 "du" :op3 "Dimanche"))))) :arg1 (b / believe-01 :arg0 (p / person :arg1-of (i / include-91 :arg2 (p2 / person :mod (c / country :name (n2 / name :op1 "N-A"))) :arg3 (p3 / percentage-entity :value 76))) :arg1 (b2 / believe-01 :arg0 (p4 / person :arg1-of (i2 / include-91 :arg2 (p5 / person :mod (c2 / country)) :arg3 (p6 / percentage-entity :value 76))) :arg1 (p7 / possible-01 :arg1 (d / divide-02 :arg0 (p8 / political-party :name (n3 / name :op1 "Socialist" :op2 "Party")) :arg1 (g / group :arg0-of (c3 / compete-02) :quant (s2 / several)) :time (p9 / prior :op1 (d2 / date-entity :decade (N / N-A))) :time (d3 / date-interval :op1 (d4 / date-entity :decade (N2 / N-A)) :op2 (d5 / date-entity :year (N3 / N-A))))))))
(l / lack-01 :arg1 (p / person :name (n / name :op1 "Henry") :source (l2 / language :name (n2 / name :op1 "N-A"))) :concession (p2 / person :arg0-of (h / have-rel-role-91 :arg1 (p3 / person) :arg2 (p4 / parent))))
(s / say-01 :arg0 (p / person :name (n / name :op1 "Recep" :op2 "Tayyip" :op3 "Erdogan") :arg0-of (h / have-org-role-91 :arg1 (p2 / person :arg0-of (h2 / have-org-role-91 :arg2 (m / minister :mod (p3 / prime)))) :arg2 (m2 / minister :mod (p4 / prime))) :arg0-of (h3 / have-org-role-91 :arg2 (m3 / minister :mod (p5 / prime))) :arg0-of (h4 / have-org-role-91 :arg2 (m4 / minister :mod (p6 / prime))) :arg0-of (h5 / have-org-role-91 :arg2 (m5 / minister :mod (p7 / prime))) :arg0-of (h6 / have-org-role-91 :arg2 (m6 / minister :mod (p8 / prime))) :arg0-of (h7 / have-org-role-91 :arg2 (m7 / minister :mod (p9 / prime))) :arg0-of (h8 / have-org-role-91 :arg2 (m8 / minister :mod (p10 / prime))) :arg0-of (h9 / have-org-role-91 :arg2 (m9 / minister :mod (p11 / prime))) :arg0-of (h10 / have-org-role-91 :arg2 (m10 / minister :mod (p12 / prime))) :arg0-of (h11 / have-org-role-91 :arg2 (m11 / minister :mod (p13 / prime))) :arg0-of (h12 / have-org-role-91 :arg2 (m12 / minister :mod (p14 / prime))) :arg0-of (h13 / have-org-role-91 :arg2 (m13 / minister :mod (p15 / prime))) :arg0-of (h14 / have-org-role-91 :arg2 (m14 / minister :mod (p16 / prime)))))
(c / contrast-01 :arg1 (p / possible-01 :arg1 (s / say-01 :arg1 (a / and :op1 (w / wise) :op2 (a2 / away :mod (f / far)) :domain (i / it))) :time (n / now)) :arg2 (s2 / say-01 :arg0 (s3 / script) :arg1 (g / go-01 :polarity - :arg1 (i2 / idiot :quant (a3 / all)) :arg3 (s4 / script))))
(s / say-01 :arg0 (n / newspaper :arg0-of (h / have-org-role-91 :arg1 (p / political-party :name (n2 / name :op1 "Socialist" :op2 "Party")))) :arg1 (b / believe-01 :arg0 (j / journalist :arg1-of (i / include-91 :arg2 (j2 / journalist :poss (n3 / newspaper)) :arg3 (p2 / percentage-entity :value (N / N-A)))) :arg1 (b2 / believe-01 :arg0 (p3 / person :arg1-of (i2 / include-91 :arg2 (p4 / person :mod (c / country :name (n4 / name :op1 "N-A"))) :arg3 (p5 / percentage-entity :value (N2 / N-A)))) :arg1 (p6 / possible-01 :arg1 (s2 / split-01 :arg1 (p7 / political-party) :arg2 (g / group :arg0-of (r / rival-01) :quant (s3 / several)) :time (b3 / before :op1 (l / land-01 :arg1 (l2 / land :quant 2017))))))))
(s / say-01 :arg0 (c / candidate :mod (n / new)) :arg1 (a / adopt-01 :arg1 (a2 / and :op1 (c2 / country :arg0-of (l / love-01 :arg1 (l2 / love-01))) :op2 (t / thing :arg1-of (l3 / love))) :mod (o / only)))
(a / and :op1 (r / rise-01 :arg1 (c / case-03 :time (b / before :op1 (r2 / rise-01 :arg1 (t / tax-01)))) :arg2 (p / percentage-entity :value (N / N-A)) :time (b2 / before :op1 (n / now) :quant (t2 / temporal-quantity :quant (N2 / N-A) :unit (y / year)))) :op2 (i / increase-01 :arg1 (c2 / case-03 :arg1 (a2 / and :op1 (m / monetary-quantity :quant 380 :unit (p2 / pound)) :op2 (t3 / turnover))) :arg2 (m2 / monetary-quantity :quant 380 :unit (d / dollar :mod (r3 / renminbi)))))
(a / and :op1 (r / respond-01 :polarity - :arg0 (p / person :arg0-of (r2 / represent-01 :arg1 (c / country :name (n / name :op1 "N-A")))) :arg1 (r3 / request-01 :arg0 (p2 / person) :arg1 (c2 / comment-01 :arg0 (p3 / person)))) :op2 (d / decline-02 :arg0 (p4 / person :arg0-of (r4 / represent-01 :arg1 (o / organization))) :arg1 (c3 / comment-01 :arg0 (p5 / person))))
(c / capture-01 :arg0 (f / fan :mod (b / ball)) :arg1 (p / product-of :op1 (t / temporal-quantity :quant (N / N-A) :unit (d / day)) :op2 (t2 / temporal-quantity :quant (N2 / N-A) :unit (d2 / day))) :time (d3 / day :time (r / recent)))
(c / confirm-01 :arg0 (p / person :arg0-of (r / represent-01)) :arg1 (a / and :op1 (a2 / authentic :domain (p2 / picture)) :op2 (s / sentence-01 :arg0 (p3 / picture) :arg1 (p4 / person :arg0-of (h / hack-04)) :arg2 (i / invade-01 :arg0 (p5 / person :arg0-of (h2 / hack-04)) :arg1 (p6 / privacy)))))
(r / read-01 :mode (i / imperative) :arg0 (y / you) :arg1 (r2 / rule :mod (r3 / rule :mod (c / company) :example (a / and :op1 (n / note) :op2 (n2 / note) :op3 (p / pass-01 :arg1 (c2 / charge-05 :arg1-of (f / follow-01)))))))
(s / say-01 :arg0 (s2 / species :mod (b / both) :example (p / person :name (n / name :op1 "Itkon"))) :arg1 (m / manage-02 :arg0 (t / they) :arg1 (p2 / produce-01 :arg0 (t2 / they) :arg1 (s3 / sport :mod (t3 / top-class) :location-of (w / work-09 :arg1 (t4 / triad :mod (s4 / sacred)) :arg2 (p3 / person :arg0-of (s5 / sponsor-01 :arg1 (m2 / media :mod (s6 / sports)))))))))
(s / sit-01 :arg1 (p / person :name (n / name :op1 "Kevern")) :arg2 (c / contrast-01 :arg1 (s2 / sit-01 :arg1 (p2 / person) :arg2 (n2 / name :op1 (a / ailinnin) :op2 (r / rikkinäisillä) :op3 (t / terassituoli) :op4 (h / hajamielisesti) :op5 (h2 / hajamielisesti)) :arg1-of (c2 / cause-01 :arg0 (a2 / and :op1 (l / listen-01 :arg0 (p3 / person) :arg1 (a3 / and :op1 (m / music) :op2 (n3 / news :name (n4 / name :op1 (r2 / reassuring)))) :time (b / before :op1 (n5 / now) :quant (m2 / multiple :op1 (t2 / temporal-quantity :quant (N / N-A) :unit (y / year))))) :op2 (l2 / listen-01 :arg0 (p4 / person) :arg1 (a4 / and :op1 (m3 / music :mod (t3 / tyynnyttävää)) :op2 (n6 / news :name (n7 / name :op1 (r3 / reassuring)))) :time (b2 / before :op1 (n8 / now) :quant (t4 / temporal-quantity :quant (N2 / N-A) :unit (y2 / year)))) :arg1-of (c3 / cause-01 :arg0 (l3 / listen-01 :arg0 (a5 / and :op1 (p5 / person :arg0-of (h3 / have-org-role-91 :arg2 (h4 / head-of-state))) :op2 (p6 / person :arg0-of (h5 / have-rel-role-91 :arg1 (p7 / person) :arg2 (f / father))) :op3 (p8 / person :arg0-of (h6 / have-rel-role-91 :arg1 (p9 / person) :arg2 (f2 / father))) :op4 (p10 / person :arg0-of (h7 / have-rel-role-91 :arg1 (p11 / person) :arg2 (f3 / father))) :op5 (p12 / person :arg0-of (h8 / have-rel-role-91 :arg1 (p13 / person) :arg2 (f4 / father))) :op6 (p14 / person :arg0-of (h9 / have-rel-role-91 :arg1 (p15 / person) :arg2 (f5 / father))) :op6 (p16 / person :arg0-of (h10 / have-rel-role-91 :arg1 (p17 / person) :arg2 (f6 / father))) :op7 (p18 / person :arg0-of (h11 / have-rel-role-91 :arg1 (p19 / person) :arg2 (f7 / father))) :op7 (p20 / person :arg0-of (h12 / have-rel-role-91 :arg1 (p21 / person) :arg2 (f8 / father))) :frequency (o / often)))))))))
(t / take-01 :mode (i / imperative) :arg0 (y / you) :arg1 (p / picture :quant (s / series)))
(r / raise-01 :arg0 (p / person :name (n / name :op1 "Henrik" :op2 "Dettmann") :arg0-of (h / head-01 :arg1 (h2 / head))) :arg1 (t / team :name (n2 / name :op1 (m / möttölä) :op2 (l / lopputurnaus) :op3 (l2 / lopputurnaus)) :mod (l3 / lopputurnaus)))
(o / obligate-01 :arg1 (y / you) :arg2 (p / pay-01 :arg0 (y2 / you) :arg1 (p2 / pennies)) :condition (a / and :op1 (g / get-05 :arg1 (d / devil) :arg2 (m / mouth :part-of (y3 / you))) :op2 (r / remembered :arg0 (y4 / you) :arg1 (f / finger :part-of (y5 / you)) :arg2 (f2 / front :op1 (m2 / mouth :part-of (y6 / you))))))
(s / say-01)
(g / great :polarity - :degree (r / really) :domain (t / that) :mod (g2 / great :degree (r2 / really)))
(p / protest-01 :arg0 (p2 / person :arg0-of (h / have-org-role-91 :arg1 (p3 / prison) :arg2 (o / official))) :arg1 (p4 / person :arg0-of (h2 / have-org-role-91 :arg2 (o2 / official))) :time (m / month :mod (a / already)) :arg0-of (s / say-01 :arg1 (w / want-01 :arg0 (p5 / person) :arg1 (g / go-01 :arg1 (p6 / person) :direction (b / back) :destination (s2 / system :mod (s3 / shift-01 :duration (t / temporal-quantity :quant (N / N-A) :unit (h3 / hour))) :mod (o3 / old))))))
(r / resembles :arg0 (s / spek) :arg1 (s2 / safe-01 :arg1 (f / fire :name (n / name :op1 (f2 / fire) :op2 (f3 / fire)) :mod (h / home))))
(i / invest-01 :arg0 (o / organization :name (n / name :op1 "Hull" :op2 "Valioliiga" :op3 "Club") :arg0-of (h / have-org-role-91 :arg1 (c / club))) :arg1 (t / team :consist-of (p / person :name (n2 / name :op1 "Abel" :op2 "Hernandez") :mod (n3 / nation))) :arg2 (r / record))
(p / person :arg0-of (h / have-org-role-91 :arg1 (c / country :name (n / name :op1 "Kenya")) :arg2 (o / official)))
(a / and :op1 (c / case :polarity - :domain (p / patch :arg1 (a2 / and :op1 (f / food) :op2 (p2 / person :name (n / name :op1 "Arja" :op2 "Vaarma" :op3 "Head") :arg0-of (h / have-org-role-91 :arg1 (o / organization :name (n2 / name :op1 "YLE"))))))) :op2 (r / remove-01 :arg1 (a3 / and) :time (b / before :op1 (n3 / now) :quant (l / long))))
(o / offer-01 :arg0 (p / person :name (n / name :op1 "Katie")) :arg1 (o2 / offer-01 :arg0 (p2 / person) :arg3 (p3 / person)) :time (s / support-01 :arg0 (a / and :op1 (p4 / person :name (n2 / name :op1 "Brooke")) :op2 (p5 / person :name (n3 / name :op1 "Bill"))) :arg1 (r / relation-03 :arg0 (p6 / person) :arg2 (r2 / relation-03) :mod (t / this))))
(p / pass-01 :arg1 (t / temporal-quantity :quant (N / N-A) :unit (y / year) :mod (a / almost)))
(s / say-01 :arg0 (p / picture :poss (p2 / person :arg0-of (o / own-01 :arg1 (p3 / pet)))) :arg1 (u / url-entity :value (k / kiinteistönvälittäjä) :poss (p4 / person :arg0-of (o2 / own-01 :arg1 (p5 / pet)))))
(o / order-01 :arg0 (d / doctor :poss (i / i)) :arg2 (d2 / do-02 :arg0 (i2 / i) :arg1 (u / u-turn)) :time (s / start-01 :arg0 (i3 / i) :arg1 (s2 / suffer-01 :arg0 (i4 / i) :arg1 (a / and :op1 (s3 / symptom :mod (o2 / overweight)) :op2 (s4 / symptom :mod (c / cold))))))
(( / ( :( (n / name) :op1 "Lidl")
(s / send-01 :arg1 (a / and :op1 (a2 / and :op1 (p / police :arg1-of (l / local-02)) :op2 (c / company :arg0-of (p2 / provide-01 :arg1 (s2 / search-01))))) :arg2 (a3 / and :op1 (l2 / look-01 :arg0 (a4 / and) :arg1 (p3 / person :mod (y / young))) :op2 (f / find-01 :arg1 (p4 / person :arg0-of (p5 / provide-01 :arg1 (v / veil :quant (a5 / about :op1 23)))) :location (o / off :op1 (v2 / veil :mod (d / dal) :mod (c2 / country :name (n / name :op1 "N-A")))))))
(t / take-01 :mode (i / imperative) :arg0 (y / you) :arg1 (t2 / trip-03 :arg0 (y2 / you)) :direction (d / down :op1 (m / mattress)))
(a / and :op1 (h / have-concession-91 :arg1 (i / injure-01 :arg1 (p / person :name (n / name :op1 "Karoliina" :op2 "Kyllönen"))) :arg2 (i2 / injure-01 :arg1 (p2 / person))) :op2 (b / become-01 :arg1 (p3 / person) :arg2 (t / thing :arg1-of (e / explode-01 :arg1-of (s / strong-02 :degree (m / most))))))
(b / believe-01 :arg1 (p / picture :domain (p2 / person :arg0-of (h / hack-04)) :quant 30 :arg1-of (i / include-91 :arg2 (p3 / person :quant 1 :arg0-of (h2 / have-rel-role-91 :arg1 (p4 / person) :arg2 (b2 / boyfriend))) :mod (l / last) :arg2-of (i2 / include-91 :arg1 (p5 / palmerista :mod (u / upper))) :arg2-of (i3 / include-91 :arg1 (p6 / palmerista :mod (u2 / upper))) :arg2-of (i4 / include-91 :arg1 (p7 / palmerista :mod (u3 / upper))))) :time (a / after :op1 (a2 / all)))
(g / grabbed :arg0 (i / it) :arg1 (g2 / gang :mod (w / whole)))
(a / and :op1 (p / pay-01 :arg1 (b / book :mod (t / this)) :arg3 (o / own-01 :arg0 (p2 / person :arg0-of (o2 / own-01 :arg1 (e / e-book))) :arg1 (p3 / person :arg0-of (o3 / own-01 :arg1 (e2 / e-book)))) :frequency (s / sometimes)) :op2 (p4 / pay-01 :arg0 (o4 / or :op1 (o5 / organization :name (n / name :op1 "Amazon.com")) :op2 (o6 / organization :name (n2 / name :op1 "Barnes" :op2 "&" :op3 "Noble" :op4 "Inc")) :op3 (c / chegga))))
(s / say-01 :arg0 (c / company :name (n / name :op1 "Areva") :arg1-of (i / include-91 :arg2 (r / release-01 :arg1 (p / project) :time (r2 / recent)))) :arg1 (c2 / cause-01 :arg0 (s2 / submit-01 :arg1 (s3 / system :mod (a / automation) :poss (r3 / reactor) :arg1-of (s4 / submit-01 :arg2 (a2 / approve-01))) :arg2 (r4 / release-01 :arg1 (p2 / project)) :mod (m / main))))
(a / and :op1 (f / fish) :op2 (c / chicken) :op3 (c2 / chicken) :domain (s / slash :op1 (f2 / fish) :op2 (c3 / chicken)))
(a / and :op1 (n / need-01 :polarity - :arg0 (i / i) :arg1 (t / talk-01 :arg0 (i2 / i) :arg1 (m / more :mod (a2 / any)))) :op2 (a3 / agree-01 :arg0 (w / we)))
(r / report-01 :arg0 (a / agency :mod (p / press) :poss (c / country :name (n / name :op1 "Turkey"))) :arg1 (a2 / and :op1 (p2 / play :arg0 (p3 / person :name (n2 / name :op1 "Recep" :op2 "Tayyip" :op3 "Erdogan") :arg0-of (h / have-org-role-91 :arg1 (c2 / country) :arg2 (p4 / president))) :arg1 (s / significant-02 :arg1 (r2 / report-01))) :op2 (s2 / say-01 :arg0 (a3 / agency) :arg1 (s3 / spied :arg0 (c3 / country :quant (a4 / all) :arg1-of (m / major-02)) :arg1 (o / other :mod (e / each))))))
(m / multi-sentence :snt1 (m2 / move-01 :arg1 (m3 / move-02 :mod (m4 / maajoukkuehyökkääjä)) :arg2 (a / and :op1 (d / d'ivoire) :op2 (s / siirtosumma))) :snt2 (e / estimate-01 :arg1 (i / it) :arg2 (a2 / around :op1 3000000)))
(m / mean-02 :arg1 (c / cruel :domain (p / person :arg0-of (h / have-rel-role-91 :arg1 (h2 / he) :arg2 (f / father)))) :arg2 (c2 / cruel))
(a / accuse-01 :arg0 (m / man :quant 78 :mod (o / old)) :arg1 (g / girl :mod (k / kolmevuotiaan)) :arg2 (d / drive-01 :arg0 (g2 / girl) :location (f / fifessä :mod (l / liikennevaloristeys))))
(t / try-01 :arg1 (g / get-05 :arg1 (y / you) :arg2 (c / close :op1 (s / site))))
(r / return-01 :arg1 (p / person :name (n / name :op1 "Torres")) :arg3 (c / confirm-01) :arg3 (p2 / person :name (n2 / name :op1 "Kagawa")))
(c / challenge-01 :arg0 (i / i) :arg1 (a / and :op1 (p / participate-01 :arg0 (m / man :mod (c2 / country :name (n / name :op1 "N-A")) :mod (c3 / country :name (n2 / name :op1 "N-A"))) :arg1 (m2 / man :mod (c4 / country) :mod (c5 / country))) :op2 (l / location :location-of (p2 / put-01 :arg1 (j / jaw) :arg2 (p3 / place) :direction (b / back)))) :arg2 (p4 / person :mod (t / tuesday)))
(c / cause-01 :arg0 (a / arrive-01 :arg1 (a2 / arrive-01 :arg3 (c2 / continent))) :arg1 (w / wave-04 :arg1 (c3 / compete-02 :arg3 (a3 / and :op1 (p / product) :op2 (s / service)))))
(' / '' :arg0 (p / person :arg0-of (p2 / play-01 :arg1 (t / thing :arg1-of (k / key-02) :arg1-of (k2 / key-02) :poss (c / country :name (n / name :op1 "Ukraine"))))) :arg1 (p3 / person :name (n2 / name :op1 "Eugene") :arg0-of (h / have-org-role-91 :arg1 (p4 / person :name (n3 / name :op1 "Pooh" :op2 "Jeter") :arg0-of (h2 / have-rel-role-91 :arg1 (p5 / person) :arg2 (s / sister))) :arg2 ('2 / ''))) :time (b / before :op1 (n4 / now) :quant (t2 / temporal-quantity :quant (N / N-A) :unit (y / year))))
(a / and :op1 (g / gather-03 :arg0 (p / person :quant (a2 / about :op1 150)) :beneficiary (h / house :mod (t / town))) :op2 (k / know-02 :arg1 (p2 / person :quant (a3 / about :op1 150)) :arg2 (h2 / house :location (c / city :name (n / name :op1 "N-A"))) :mod (o / only)))
(s / say-01 :arg1 (p / possess-01 :arg0 (p2 / person :arg0-of (h / hack-04)) :arg1 (p3 / possess-01 :arg1 (a / and :op1 (s2 / star :arg1-of (t / total-01 :arg2 60)) :op2 (s3 / star :mod (s4 / super) :mod (o / other)) :example (a2 / and :op1 (p4 / person :name (n / name :op1 "Kate" :op2 "Uptonista") :arg0-of (h2 / have-org-role-91 :arg1 (m / model))) :op2 (p5 / person :name (n2 / name :op1 "Rihanna") :arg0-of (r / rival-01 :arg1 (p6 / person :name (n3 / name :op1 "Ariana" :op2 "Grandesta")))) :op3 (p7 / person :name (n4 / name :op1 "Rihanna") :arg0-of (l / lead-02 :arg1 (p8 / person :name (n5 / name :op1 "Ariana" :op2 "Grandesta")))) :op4 (p9 / person :name (n6 / name :op1 "Michelle") :arg0-of (l2 / lead-02 :arg1 (p10 / person))) :op5 (p11 / person :name (n7 / name :op1 "Kirsten" :op2 "Dunstista") :arg0-of (l3 / lead-02 :arg1 (p12 / person))))))))
(t / turnover :arg1 (t2 / turnover :quant 960 :mod (e / eur)) :arg2 (s / score-entity :op1 960 :op2 1.2))
(a / and :op1 (s / shook :arg0 (p / person :name (n / name :op1 "Ailinn")) :arg1 (i / incredulous :mod (h / head) :poss (p2 / person))) :op2 (c / cover-01 :arg0 (h2 / hair :part-of (p3 / person)) :arg1 (t / thing :arg1-of (e / envision-01))))
FAILED_TO_PARSE#Two concepts in a row.
(c / come-01 :arg1 (t / train) :arg3 (g / greek))
(i / involve-01 :arg1 (p / person :quant 1 :arg1-of (i2 / include-91 :arg2 (d / demonstrate-01 :mod (p2 / profitable :degree (m / most)) :location (r / region)))) :arg2 (p3 / person :arg0-of (d2 / demonstrate-01 :mod (p4 / profitable :degree (m2 / most)) :location (r2 / region))))
(i / increase-01 :arg1 (v / value-01 :mod (c / cyber) :mod (e / everyday)) :arg2 (p / percentage-entity :value (N / N-A)) :time (b / before :op1 (n / now) :quant (t / temporal-quantity :quant (N2 / N-A) :unit (y / year))) :arg1-of (i2 / instead-of-91))
(b / begin-01 :arg0 (t / thing :arg1-of (d / decide-01)) :arg1 (a / and :op1 (d2 / devised :arg1 (p / protest-01 :arg0 (a2 / activist :mod (b2 / business) :mod (c / city :name (n / name :op1 "Hong" :op2 "Kong"))) :arg1-of (l / long-03))) :op2 (i / implement-01 :arg0 (t2 / thing) :arg1 (t3 / temporal-quantity :quant (N / N-A) :unit (h / hour) :mod (j / just)) :time (a3 / after :op1 (p2 / presence :mod (d3 / decide-01))))) :mod (p3 / probable))
FAILED_TO_PARSE#Two concepts in a row.
(t / throw-01 :arg0 (p / person :name (n / name :op1 "Dominikaanis" :op2 "Jeter") :arg0-of (h / have-org-role-91 :arg2 (r / republic))) :arg1 (p2 / point :quant 16))
(o / obligate-01 :arg1 (h / he) :arg2 (e / explain-01 :arg0 (h2 / he) :arg1 (j / jazz)))
(a / and :op1 (f / follow-01 :arg1 (p / person :name (n / name :op1 "Stephen" :op2 "Fairclough")) :arg2 (e / event :time (w / weekend))) :op2 (s / speak-01 :arg0 (p2 / person) :arg2 (d / demonstrators) :arg1-of (c / cause-01 :arg0 (a2 / arrive-01 :arg1 (p3 / person) :arg3 (c2 / country :name (n2 / name :op1 "Belgium")) :mod (e2 / even)))))
(a / and :op1 (s / say-01 :arg0 (a2 / and :op1 (p / person :arg0-of (h / have-org-role-91 :arg1 (p2 / promoter :poss (c / city :name (n / name :op1 "Berkeley"))) :arg2 (c2 / chairman))) :op2 (p3 / person :name (n2 / name :op1 "Tony" :op2 "Pidgley") :arg0-of (h2 / have-org-role-91 :arg2 (c3 / chairman)))) :arg1 (a3 / and :op1 (r / returned :arg1 (e / economy :time (c4 / current)) :time (s2 / since :op1 (b / begin-01 :arg1 (y / year :time-of (r2 / return-01 :arg1 (a4 / and :op1 (m / market) :op2 (s3 / shop)))))) :op2 (r3 / return-01 :arg1 (s4 / shop) :arg4 (n3 / normal))))) :op2 (a5 / add-01 :arg0 (a6 / and) :arg1 (p4 / provide-01 :arg0 (c5 / country) :arg1 (e2 / environment :arg1-of (s5 / stable-03)))))
(c / contrast-01 :arg1 (a / agree-01 :arg0 (p / person :arg0-of (o / organisations)) :arg1 (s / settlement :mod (a2 / autumn))) :arg2 (e / estimate-01 :arg0 (e2 / estimate-01 :time (r / recent :degree (m / most))) :arg1 (i / it) :time (w / week :mod (t / this))))
(i / include-91 :arg1 (a / and :op1 (p / person :arg0-of (l / love-01 :arg1 (f / film))) :op2 (p2 / person :arg0-of (l2 / love-01 :arg1 (f2 / film))) :op3 (p3 / person :arg0-of (h / have-org-role-91 :arg2 (n / näyttelijä))) :op4 (p4 / person :name (n2 / name :op1 "Liam" :op2 "Hemsworthin") :arg0-of (h2 / have-org-role-91 :arg2 (n3 / näyttelijä))) :op5 (p5 / person :arg0-of (h3 / have-org-role-91 :arg2 (n4 / näyttelijä)))) :arg2 (t / thing :mod (o / other) :arg1-of (i2 / include-91 :arg2 (t2 / thing :mod (o2 / other)) :arg3 (t3 / thing :mod (o3 / other)))))
(p / participate-01 :arg0 (t / thousands :mod (t2 / thousands)) :arg1 (d / democracy :quant 1 :arg1-of (i / include-91 :arg2 (d2 / democracy :mod (l / large :degree (m / most)) :location (r / region)))) :purpose (s / support-01 :arg0 (t3 / tens) :arg1 (d3 / demonstrate-01)))
(n / notice-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg2 (a / agent :mod (e / estate :mod (r / real))))) :arg1 (s / sell-01 :arg0 (p2 / person :arg0-of (h2 / have-org-role-91 :arg2 (a2 / agent :mod (e2 / estate :mod (r2 / real))))) :arg1 (h3 / house) :purpose (n2 / notice-01 :arg0 (p3 / person) :arg1 (p4 / picture :poss (h4 / house) :location (r3 / room :mod (r4 / room :mod (l / large)) :arg1-of (l2 / lie-07 :arg2 (p5 / pig :mod (l3 / large))))))))
(g / go-08 :arg1 (m / market :arg0-of (h / house-01) :location (c / city :name (n / name :op1 "London"))) :arg2 (w / well :degree (v / very)) :time (r / recession-02 :arg1 (p / person :arg0-of (i / invest-01 :mod (f / foreign)))))
(r / recognize-02 :arg0 (c / claim-01 :arg0 (p / person :name (n / name :op1 "Putin") :arg0-of (h / have-org-role-91 :arg1 (g / government-organization :arg0-of (g2 / govern-01 :arg1 (c2 / country :name (n2 / name :op1 "Russia")))) :arg2 (v / venäjämielisten)))) :arg1 (r2 / responsible-03 :arg0 (c3 / country) :arg1 (s / strategy :mod (a / apparent) :poss (c4 / country)) :arg1-of (f / follow-01 :arg2 (a2 / and :op1 (s2 / seek-01 :arg0 (c5 / country) :arg1 (h2 / help-01 :arg0 (c6 / country) :arg1 (t / take-over-12 :arg0 (s3 / separatist) :arg1 (a3 / area))) :time (s4 / since :op1 (b / begin-01 :arg1 (v2 / violence) :time (b2 / before :op1 (n3 / now) :quant (t2 / temporal-quantity :quant (N / N-A) :unit (y / year)))))) :op2 (s5 / seek-01 :arg0 (p2 / person) :arg1 (h3 / help-01 :arg0 (p3 / person) :arg1 (a4 / and :op1 (t3 / take-01 :arg0 (s6 / separatist) :arg1 (a5 / area)) :op2 (f2 / force-01 :arg0 (g3 / government-organization) :arg1 (g4 / government-organization) :arg2 (g5 / government-organization :arg0-of (g6 / govern-01 :arg1 (c7 / country :name (n4 / name :op1 "Russia"))))) :op3 (i / independence :poss (n5 / novorossijalle :mod (n6 / new)) :arg0-of (a6 / allow-01 :arg1 (b3 / be-02 :arg1 (c8 / country) :prep-with (w / world-region :name (n7 / name :op1 "West")) :arg1-of (i2 / instead-of-91 :arg2 (w2 / world-region :name (n8 / name :op1 "West")))))))))))))
(a / and :op1 (d / declare-01 :polarity - :arg2 (b / ban-01 :arg1 (p / person :name (n / name :op1 "Jazziakaan"))) :mod (a2 / actual)) :op2 (p2 / play-11 :arg0 (p3 / person) :mod (j / just)))
(b / byline-91 :arg2 (p / pension :poss (p2 / person :name (n / name :op1 "Karjalainen") :arg0-of (h / have-org-role-91 :arg2 (e / element :mod (n2 / news))))))
(a / accuse-01 :arg0 (m / man) :arg1 (m2 / man) :arg2 (a2 / at :arg1 (l / light :mod (t / traffic))))
(i / investigate-01 :arg0 (p / police) :arg1 (s / steal-01 :arg1 4 :arg2 (l / location :name (n / name :op1 "Kajaani"))) :time (d / day :time (r / recent)))
(c / company :location (c2 / city :name (n / name :op1 "Cannes")) :mod (n2 / new))
(a / and :op1 (r / rise-01 :arg1 (r2 / rate-entity-91 :arg1 (p / percentage-entity :value (N / N-A)) :arg2 (t / temporal-quantity :quant (N2 / N-A) :unit (y / year))) :time (b / before :op1 (n / now) :quant (b2 / between :op1 (t2 / temporal-quantity :quant (N3 / N-A) :unit (y2 / year)) :op2 (t3 / temporal-quantity :quant (N4 / N-A) :unit (y3 / year))))) :op2 (c / cause-01 :arg1 (g / grow-01 :arg1 (t4 / turnover :quant 1.6) :arg2 (t5 / turnover :quant 1.6))))
(s / see-01 :polarity - :arg1 (f / face :part-of (h / he)) :time (e / ever) :arg1-of (s2 / say-01 :arg0 (v / voice)) :arg1-of (s3 / say-01 :arg0 (v2 / voice)) :mod (o / only))
(i / indulgent :arg1-of (i2 / instead-of-91 :arg2 (e / eye :part-of (h / he))))
(o / opportunity :mod (s / still) :purpose (l / look-01 :arg0 (w / we) :arg1 (t / thing :manner-of (g / go-06 :arg0 (w2 / we) :arg1 (l2 / level :mod (i / international))))))
(s / say-01 :arg0 (a / agency :name (n / name :op1 "N-A") :mod (n2 / news)) :arg1 (s2 / say-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (c / country :name (n3 / name :op1 "N-A")) :arg2 (a2 / agency :mod (n4 / news)))) :arg1 (a3 / attack-01 :arg1 (t / talk-01 :arg1 (p2 / peace) :arg1-of (p3 / plan-01)) :arg1-of (c2 / cause-01 :arg0 (a4 / and :op1 (c3 / campaign-01 :arg0 (p4 / politician :mod (c4 / country :name (n5 / name :op1 "N-A"))) :arg1 (e / elect-01 :mod (p5 / parliamentary) :time (d / date-entity :month 10 :day 26))) :op2 (a5 / attack-01 :arg0 (f / force :mod (g / government-organization :arg0-of (g2 / govern-01))) :arg1 (c5 / civilian) :location (a6 / area :arg1-of (c6 / control-01 :arg0 (s3 / separatist)))))))))
(b / bring-up-02 :arg1 (d / dog :arg0-of (h / have-rel-role-91 :arg2 (d2 / dd1))) :direction (d3 / down) :path (t / through :op1 (r / retkipatjan)))
(e / exemplify-01 :arg1-of (e2 / exemplify-01))
(s / say-01 :arg0 (a / agree-01 :mod (l / loan-01)) :arg1 (d / do-02 :arg0 (o / organization :name (n / name :op1 "HJK") :part-of (o2 / organization :name (n2 / name :op1 "HJK") :part-of (o3 / organization :mod (c / club))) :mod (m / main)) :arg1 (p / person :name (n3 / name :op1 "Jo" :op2 "Neville" :op3 "Jones"))))
(r / receive-01 :arg0 (p / person :arg0-of (h / head-01 :arg1 (s / state)) :arg0-of (h2 / have-org-role-91 :arg1 (s2 / state) :arg2 (f / family :arg1-of (h3 / have-org-role-91 :arg0 (p2 / person) :arg2 (m / member))) :location (s3 / south :part-of (p3 / person :name (n / name :op1 "Henrik"))))) :arg1 (t / threat :mod (d / die-01)))
(i / include-91 :arg1 (f / fan :mod (c / country :name (n / name :op1 "Finland")) :mod (w / world :mod (b / basketball))) :arg2 (m / more-than :op1 8000) :location (h / here))
(s / say-01 :arg0 (c / candidate :mod (n / new) :arg0-of (l / love-01 :arg1 (c2 / country))) :arg1 (a / accept-01 :arg1 (a2 / and :op1 (p / person :arg0-of (l2 / love-01 :arg1 (c3 / country))) :op2 (p2 / person :arg0-of (l3 / love-01 :arg1 (c4 / city :name (n2 / name :op1 "Hong" :op2 "Kong"))))) :mod (o / only)))
(c / contrast-01 :arg2 (a / and :op1 (t / transfer-01 :arg0 (p / person :name (n / name :op1 "Sal")) :arg1 (g / glory :quant (a2 / all))) :op2 (d / do-02 :arg0 (p2 / person) :arg1 (i / it) :manner (s / style))))
(r / ready-02 :arg1 (w / we) :arg2 (p / provide-01 :arg0 (w2 / we) :arg1 (a / and :op1 (p2 / person :arg0-of (s / study-01)) :op2 (p3 / person :arg0-of (s2 / study-01))) :arg2 (u / university) :arg1-of (e / easy-05 :degree (m / most))) :time (c / combine-01 :arg1 (t / this) :arg2 (p4 / person :arg0-of (h / have-rel-role-91 :arg1 (p5 / person :arg0-of (h2 / have-rel-role-91 :arg2 (s3 / sister))) :arg2 (f / friend)) :quant (m2 / many))))
(b / believe-01 :arg0 (c / company) :arg1 (d / demand-01 :arg1 (s / service)) :concession (p / pay-01 :arg0 (p2 / person :quant (m / most) :arg0-of (s2 / study-01)) :arg1 (f / fee :mod (y / year :mod (a / academia)))))
(a / and :op1 (f / follow-02 :arg0 (p / person :name (n / name :op1 "Stephen" :op2 "Fair")) :arg1 (e / event :time (o / over :op1 (w / weekend)))) :op2 (s / speak-01 :arg0 (p2 / person) :arg2 (d / demonstrators)) :op3 (a2 / arrive-01 :arg1 (s2 / some) :arg3 (c / country :name (n2 / name :op1 "Belgium")) :mod (e2 / even)))
(s / say-01 :arg0 (a / and :op1 (a2 / area :location (r / relative-position :op1 (c / city) :direction (a3 / area))) :op2 (e / environment :arg1-of (s2 / surround-01))) :arg1 (k / kelko :arg1 (a4 / and :op1 (a5 / area :location (c2 / city)) :op2 (e2 / environment :arg1-of (s3 / surround-01))) :mod (a6 / also) :arg1-of (i / instead-of-91 :arg2 (b / broad-02 :arg1 (m / modify-01 :arg2 (l / location :location-of (l2 / location :example (o / ounasjoe :location (s4 / slash :op1 (s5 / slash :op1 (s6 / slash :op1 (d / distance-quantity :quant (N / N-A) :unit (m2 / mile)) :op2 (d2 / distance-quantity :quant (N2 / N-A) :unit (m3 / mile)))))))))))))
(v / view-02 :arg0 (t / thing :arg2-of (f / fortunate-01 :polarity -) :location (a / around :op1 (w / world))) :arg1 (a2 / and :op1 (e / eläinsuojelullisesti :polarity - :arg1 (w2 / work-of-art :name (n / name :op1 "N-A"))) :op2 (p / possible-01 :polarity - :arg1 (a3 / and :op1 (e2 / eläinsuojelullisesti :arg1 (w3 / work-of-art :name (n2 / name :op1 "N-A"))) :op2 (p2 / possible-01 :polarity - :arg1 (e3 / ethically))) :arg1-of (d / develop-02))) :time (y / year :mod (l / last)) :location (a4 / around :op1 (w4 / world)))
(m / multi-sentence :snt1 (c / cause-01 :arg0 (t / this) :arg1 (t2 / take-01 :mode (i / imperative) :arg0 (y / you) :arg1 (i2 / it) :manner (s / serious))) :snt2 (a / and :op1 (t3 / take-01 :mode (i3 / imperative) :arg0 (y2 / you) :arg1 (i4 / it) :manner (s2 / serious)) :op2 (l / learn-01 :mode (i5 / imperative) :arg0 (y3 / you) :arg1 (c2 / couplet :arg1 (r / research-01 :arg1 (b / background) :mod (l2 / little))))))
(a / assure-01 :arg0 (f / fire) :arg1 (i / i) :arg2 (h / home :poss (o / organization :name (n / name :op1 "SPEK"))))
(k / kill-01 :arg0 (r / riot-01) :arg1 (p / person :quant (n / nearly :op1 (n2 / near))))
(s / say-01 :arg0 (o / organization :name (n / name :op1 "Ministry" :op2 "of" :op3 "Education" :op4 "Fair")) :arg1 (r / return-02 :polarity - :arg1 (f / family :quant 10) :time (y / yet)))
(w / wide-02 :arg1 (a / and :op1 (a2 / area :location (l / location :name (n / name :op1 "Friendship" :op2 "Park"))) :op2 (s / surroundings :mod (i / immediate) :poss (c / city))) :arg2 (g / good :degree (m / more) :compared-to (p / place :arg1-of (d / describe-01 :arg0 (p2 / place :mod (e / exit) :example (s2 / slash :op1 (s3 / slash :op1 (s4 / slash :op1 (s5 / slash :op1 (s6 / slash :op1 (s7 / slash :op1 (s8 / slash :op1 (s9 / slash :op1 (s10 / slash :op1 (s11 / slash :op1 (s12 / slash :op1 (s13 / slash :op1 (s14 / slash :op1 (s15 / slash :op1 (s16 / slash :op1 (s17 / slash :op1 (s18 / slash :op1 (s19 / slash :op1 (s20 / slash :op1 (s21 / slash :op1 (s22 / slash :op1 (s23 / slash :op1 (s24 / slash :op1 (s25 / slash :op1 (s26 / slash :op1 (s27 / slash :op1 (s28 / slash :op1 (s29 / slash :op1 (s30 / slash :op1 (s31 / slash :op1 (a3 / area :mod (e2 / email)) :op2 (s32 / slash :op1 (s33 / slash :op1 (s34 / slash :op1 (s35 / slash :op1 (a4 / area :mod (e3 / email)) :op2 (s36 / slash :op1 (s37 / slash :op1 (s38 / slash :op1 (s39 / slash :op1 (a5 / area :name (n2 / name :op1 (l2 / location :name (n3 / name :op1 "Ounasjoki" :op2 "River")))) :op2 (p3 / place :name (n4 / name :op1 (m2 / mooring))))) :op2 (s40 / surroundings :mod (i2 / immediately)))) :op2 (s41 / surroundings :mod (i3 / immediate) :poss (c2 / city)))) :op2 (s42 / surroundings :mod (i4 / immediate) :poss (c3 / city)))) :op2 (s43 / surroundings :mod (i5 / immediate) :poss (c4 / city)))) :op2 (s44 / surroundings :mod (i6 / immediate) :poss (c5 / city)))) :op2 (i7 / integrate-01 :arg1 (c6 / city) :time (i8 / immediate)))))))))))))))))))))))))))))))))
(m / move-01)
(s / say-01 :arg0 (p / person :name (n / name :op1 "Kuqi")) :arg1 (p2 / probable :domain (a / and :op1 (p3 / person :arg0-of (p4 / play-01 :arg1 (l / league :mod (p5 / pool))) :domain (y / you)) :op2 (d / discover-01 :polarity - :arg0 (y2 / you) :arg1 (p6 / person :arg0-of (p7 / play-01 :arg1 (l2 / league)) :domain (y3 / you))) :op3 (n2 / need-01 :polarity - :arg0 (y4 / you) :arg1 (w / work-01 :arg0 (y5 / you)))) :time (a2 / after :op1 (a3 / and :op1 (a4 / and :op1 (t / treeni :arg0 (y6 / you) :arg1 (f / fun)) :op2 (d2 / discover-01 :arg0 (y7 / you) :arg1 (f2 / fun)))) :op2 (d3 / discover-01 :polarity - :arg0 (y8 / you) :arg1 (p8 / person :arg0-of (p9 / play-01 :arg1 (l3 / league)) :domain (y9 / you))))))
(m / multi-sentence :snt1 (b / basketball) :snt2 (f / faint :arg1 (h / house :poss (p / person :name (n / name :op1 "Sasu"))) :mod (a / actual) :location (g / ground) :mod (a2 / actual)))
(i / include-91 :arg1 (p / person :name (n / name :op1 "Henry") :quant (m / multiple :op1 20) :arg1-of (i2 / include-91 :arg2 (s / speech :mod (l / last)))) :arg2 (a / and :op1 (d / documentary) :op2 (s2 / sell-01 :arg1 (s3 / speech))))
(m / multi-sentence :snt1 (t / try-01 :arg0 (i / i) :arg1 (a / attract-01 :arg0 (i2 / i) :arg1 (i3 / i)) :frequency (m2 / many) :purpose (a2 / and :op1 (a3 / attract-01 :arg0 (i4 / i) :arg1 (i5 / it)) :op2 (t2 / take-out-11 :arg0 (i6 / i) :arg1 (i7 / it) :extent (l / little)))) :snt2 (w / write-01 :arg0 (p / person :name (n / name :op1 "Mikkelsen")) :arg1 (u / updates)))
(r / renew-01 :arg1 (a / agree-01 :arg1 (a2 / and :op1 (s / spring :quant 2014) :op2 (t / treaty :quant 2018 :mod (s2 / spring)))) :arg1-of (r2 / renew-01))
(s / share-01 :arg0 (c / city :name (n / name :op1 "Berkeley")) :arg1 (t / this) :time (a / afternoon :mod (t2 / this)) :location (t3 / thing :arg2-of (p / price-01 :arg1 (e / exchange-01 :arg1 (s2 / stock)) :location (c2 / city :name (n2 / name :op1 "London")))) :manner (s3 / steady))
(t / tell-01 :arg0 (n / news :topic (t2 / transfer-01)) :arg1 (p / person :quant 1 :arg1-of (i / include-91 :arg2 (p2 / person :arg0-of (p3 / play-08 :arg1 (s / star)) :arg1-of (i2 / include-91 :arg2 (p4 / person :arg0-of (p5 / play-08 :arg1 (s2 / star))))))) :arg2 (p6 / person :quant 1 :arg1-of (i3 / include-91 :arg2 (p7 / person :arg0-of (p8 / play-08 :arg1 (s3 / star))))) :time (s4 / season :mod (l / last)))
(s / say-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (c / charity) :arg3 (c2 / cmt :mod (c3 / charity)))) :arg1 (p2 / problem :mod (c4 / common) :domain (d / diagnosis :arg1-of (c5 / correct-02 :polarity -)) :arg1-of (c6 / cause-01 :arg0 (k / know-02 :arg1 (l / little :degree (s2 / so)) :arg2 (t / they)))))
(a / and :op1 (v / video :name (n / name :op1 (l / lut) :op2 (i / internet) :op3 (i2 / internet) :op4 (i3 / internet) :op5 (i4 / internet) :op6 (i5 / internet) :op7 (i6 / internet))) :op2 (s / share-01 :arg1 (a2 / and :op1 (c / company :name (n2 / name :op1 "Facebook")) :op2 (p / product :name (n3 / name :op1 "Twitter")))))
(p / possible-01 :arg1 (h / have-03 :arg0 (b / book :mod (n / new)) :arg1 (t / thing :arg2-of (p2 / price-01 :arg1 (t2 / thing :arg2-of (c / cost-01 :arg1 (c2 / cost-01 :arg1 (i / it) :arg2 (c3 / campus))))) :mod (o / only))))
(c / contrast-01 :arg1 (c2 / confirm-01 :arg1 (d / depart-01 :arg0 (p / person :name (n / name :op1 "Fernando" :op2 "Torres" :op3 "Chelsea")))) :arg2 (c3 / come-01 :arg1 (r / replace-01) :time (t / time :arg1-of (s / same-01) :time-of (o / open-01 :arg1 (d2 / door)) :mod (a / almost))))
(a / age-01 :arg1 (w / water :consist-of (i / ice)) :arg2 (g / ground) :duration (t / temporal-quantity :quant (N / N-A) :unit (y / year)))
(a / and :op1 (r / rise-01 :arg1 (h / house-01 :location (c / city :name (n / name :op1 "London"))) :mod (h2 / huge) :time (t / time :arg1-of (s / same-01))) :op2 (l / luottokupla :arg1 (h3 / house-01) :arg1-of (s2 / spread-02 :arg1-of (w / wide-02)) :arg1-of (l2 / lead-03 :arg2 (o / organization :name (n2 / name :op1 "Bank" :op2 "of" :op3 "England")) :purpose (r2 / restrict-01 :arg1 (m / mortgage) :location (j / june))) :time (t2 / time :arg1-of (s3 / same-01))))
(k / know-01 :polarity - :arg0 (t / they) :arg1 (h / have-manner-91 :arg1 (t2 / this) :arg2 (i / i)) :mod (c / certain))
(e / excite-01 :arg1 (w / we) :arg2 (c / class :ord (o / ordinal-entity :value 1) :part-of (d / demand-01 :arg0 (p / person :arg0-of (s / study-01 :time (t / today)) :mod (l / luxury) :mod (c2 / country :name (n / name :op1 "N-A"))))))
(p / possible-01 :arg1 (a / admit-01 :arg0 (g / government-organization :arg0-of (g2 / govern-01 :arg1 (c / country :name (n / name :op1 "Ukraine")))) :arg1 (n2 / need-01 :arg0 (g3 / government-organization) :arg1 (d / depend-01 :polarity - :arg0 (g4 / government-organization) :arg1 (t / territory :location (e / east))))) :arg1-of (s / say-01 :arg0 (p2 / person :name (n3 / name :op1 "Peskov"))))
(e / enjoy-01 :arg0 (p / person :mod (b / both)) :arg1 (f / fruits :poss (w / work-01)) :time (n / now))
(p / promise-01 :arg2 (p2 / promise-01 :arg2 (e / experience-01 :arg0 (p3 / person :arg0-of (w / work-01 :location (g / ground)) :arg0-of (w2 / work-01 :location (g2 / ground) :arg1-of (d / differ-02 :arg2 (f / frame :part-of (l / location :name (n / name :op1 "Manchester" :op2 "City"))) :arg1-of (c / complete-02)))) :arg1 (p4 / person))))
(e / e-kirja :polarity - :arg1 (c / chegg-kaupasta) :time (b / before :op1 (n / now) :duration (t / temporal-quantity :quant (N / N-A) :unit (m / month))) :time (b2 / before :op1 (n2 / now) :duration (t2 / temporal-quantity :quant (N2 / N-A) :unit (m2 / month))))
(s / say-01 :arg1 (h / hope-01 :arg0 (i / i) :arg1 (h2 / have-03 :arg0 (y / you) :arg1 (s2 / spirit :mod (s3 / spirit :mod (g / good)))) :arg2 (p / person :name (n / name :op1 "Winstead"))) :arg2 (p2 / person :arg0-of (l / look-01 :arg1 (a / and :op1 (i2 / i) :op2 (p3 / person :arg0-of (h3 / have-rel-role-91 :arg1 (i3 / i) :arg2 (h4 / husband))) :location (p4 / privacy) :time (b / before :op1 (n2 / now) :quant (t / temporal-quantity :quant (N / N-A) :unit (y2 / year)))))))
(w / welcome-01 :arg0 (h / he) :arg1 (p / person :arg0-of (h2 / have-org-role-91 :arg2 (m / member))) :arg2 (t / tell-01 :arg1 (p2 / possible-01 :arg1 (g / good :degree (m2 / more) :domain (o / organization :name (n / name :op1 "Cita")) :time (a / already))) :arg2 (m3 / member)))
(d / difficult :domain (c / communicate-01 :arg1 (m / majority) :arg2 (t / they)))
(c / cause-01 :arg0 (b / become-01 :arg1 (a / and :op1 (m / man) :op2 (w / woman)) :arg2 (c2 / cause :mod (c3 / common :degree (m2 / most)) :poss (a2 / and :op1 (m3 / man) :op2 (w2 / woman)))) :arg1 (b2 / become-01 :arg1 (a3 / and :op1 (m4 / man) :op2 (w3 / woman)) :arg2 (t / thing :arg0-of (c4 / cause-01 :arg1 (t2 / tell-01 :arg0 (a4 / and :op1 (m5 / man) :op2 (w4 / woman)) :arg1 (w5 / word :arg1-of (p / place-01 :arg0 (a5 / and :op1 (m6 / man) :op2 (w6 / woman)) :arg2 (r / receiver) :arg1-of (p2 / place-01 :arg0 (a6 / and :op1 (m7 / man) :op2 (w7 / woman)) :arg2 (r2 / receiver) :time (a7 / at-first)))))))))
(f / fire-01 :arg0 (a / and :op1 (p / person :arg0-of (h / have-org-role-91 :arg1 (c / country-region :name (n / name :op1 "Gaza")) :arg2 (s / soldier))) :op2 (p2 / person :arg0-of (h2 / have-org-role-91 :arg1 (o / organization :name (n2 / name :op1 "Hamas")) :arg2 (s2 / soldier))) :op3 (s3 / soldier :mod (o2 / other) :arg0-of (h3 / have-org-role-91 :arg2 (s4 / soldier)))) :arg1 (a2 / and :op1 (t / town :mod (i / israeli)) :op2 (g / grenade :location (s5 / south :part-of (s6 / south)))))
(a / and :op1 (r / regime :mod (e / employee) :mod (e2 / employee :mod (c / central))) :op2 (r2 / regime :mod (o / organization :name (n / name :op1 "STTK"))) :op3 (d / deal-01 :arg2 (s / situation :mod (n2 / negotiate-01))))
(a / and :op1 (' / ' :polarity - :arg1 (w / we)) :op2 ('2 / ' :arg0 (w2 / we) :arg1 (o / other)))
(c / contrast-01 :arg1 (p / possible-01 :polarity - :arg1 (d / discuss-01 :arg1 (i / issue-02 :mod (t / this)) :arg2 (b / between :op1 (c2 / country :name (n / name :op1 "Ukraine")) :op2 (c3 / country :name (n2 / name :op1 "Russia"))))) :arg2 (s / say-01 :arg0 (p2 / person :name (n3 / name :op1 "Peskov")) :arg1 (c4 / contrast-01 :arg1 (c5 / conflict-01 :arg0 (c6 / country) :arg1 (c7 / country)) :arg2 (c8 / conflict-01 :polarity - :arg0 (c9 / country) :arg1 (c10 / country) :arg1-of (i2 / internal-02)))))
(e / enjoy-01 :arg0 (n / nobody) :arg1 (e2 / eat-01 :arg1 (c / carrots)))
(l / lead-03 :polarity - :arg0 (a / agency :mod (l2 / large) :mod (c / country :name (n / name :op1 "N-A"))) :arg2 (o / oppose-01 :arg0 (a2 / agency) :arg1 (r / research-01 :arg1 (r2 / research-01))))
(p / promise-01 :arg0 (p2 / person :mod (y / young)) :arg2 (p3 / person :arg2-of (s / staff-01)))
(r / report-01 :arg0 (o / organization :name (n / name :op1 "German" :op2 "Intelligence" :op3 "Agency") :part-of (h / head :part-of (h2 / head))) :arg1 (r2 / react-01 :arg0 (p / person :arg0-of (s / spy-01 :arg1 (s2 / spy-01 :arg0 (p2 / person)))) :arg1 (r3 / react-01 :arg0 (g / government-organization :arg0-of (g2 / govern-01 :arg1 (c / country-region))) :mod (v / vihaisemma))) :time (e / early :degree (m / more)))
(g / good :degree (v / very) :domain (i / it))
(m / multi-sentence :snt1 (- / -rrb- :arg0 (p / person :name (n / name :op1 "Kari" :op2 "Kal")) :mod (r / right)) :snt2 (s / stretched :mode (e / expressive)))
(i / include-01 :arg1 (a / and :op1 (j / journalist) :op2 (c / coaches :mod (b / basketball)) :op3 (p / person :arg0-of (p2 / play-01)) :op4 (p3 / person :arg0-of (p4 / play-01)) :op5 (f / fan :mod (s / some))) :arg2 (g / group))
(a / and :op1 (c / compare-01 :arg1 (p / person :arg0-of (d / deal-01) :arg1-of (d2 / differ-02)) :arg2 (d3 / discipline)) :op2 (t / thing :domain (t2 / thing :arg1-of (c2 / choose-01))))
(a / and :op1 (h / hold-04 :arg1 (t / thing :arg1-of (d / decide-01)) :location (c / city :name (n / name :op1 "Hong" :op2 "Kong")) :time (b / before :op1 (n2 / now) :quant (s / some :op1 (t2 / temporal-quantity :quant (N / N-A) :unit (y / year))))) :op2 (p / protest-01 :arg0 (p2 / person :quant (m / most) :arg0-of (p3 / protest-01))))
(h / have-condition-91 :arg1 (o / obligate-01 :arg2 (c / chegg.com :arg1 (p / paper))) :arg2 (o2 / obligate-01 :arg2 (c2 / chegg.com :arg1 (p2 / paper))))
(c / contrast-01 :arg1 (t / try-01 :arg0 (i / i) :arg1 (s / shut-down-05 :arg0 (i2 / i) :arg1 (m / mouth :part-of (i3 / i)))) :arg2 (r / realize-01 :arg0 (i4 / i) :arg1 (w / wrong-04 :arg1 (s2 / something)) :time (t2 / then)))
(s / serve-01 :arg0 (w / we :mod (c / civil)) :prep-without (p / product :name (n / name :op1 "N-A")))
(g / get-01 :arg0 (f / film) :arg1 (e / ensi-ilta :poss (f2 / film)) :location (c / country :name (n / name :op1 "Finland")) :time (d / date-entity :month 9 :year 2015))
(s / say-01 :arg0 (p / person :name (n / name :op1 "Pauli" :op2 "Sivonen" :op3 "Serlachius-museosta") :arg0-of (h / have-org-role-91 :arg2 (d / director))) :arg1 (n2 / need-01 :arg0 (p2 / person) :arg1 (a / and :op1 (d2 / door :mod (l / lapannut)) :op2 (' / '' :mod (w / windows)))))
(a / and :op1 (t / train-01 :arg1 (p / person :name (n / name :op1 "Henry")) :arg2 (r / record :arg1-of (r2 / rare-02) :poss (p2 / person :name (n2 / name :op1 "Rudy"))) :time (c / current)) :op2 (b / base-02 :arg1 (a2 / and :op1 (p3 / person :arg0-of (h / have-rel-role-91 :arg1 (p4 / person) :arg2 (f / father))) :op2 (p5 / person :arg0-of (h2 / have-rel-role-91 :arg1 (p6 / person) :arg2 (f2 / father))) :op3 (p7 / person :arg0-of (h3 / have-rel-role-91 :arg1 (p8 / person) :arg2 (f3 / father))) :op4 (p9 / person :arg0-of (h4 / have-rel-role-91 :arg1 (p10 / person) :arg2 (f4 / father))) :op5 (p11 / person :arg0-of (h5 / have-rel-role-91 :arg1 (p12 / person) :arg2 (f5 / father))) :op6 (p13 / person :arg0-of (h6 / have-rel-role-91 :arg1 (p14 / person) :arg2 (f6 / father))) :op7 (p15 / person :arg0-of (h7 / have-rel-role-91 :arg1 (p16 / person) :arg2 (f7 / father))))))
(o / own-01 :arg0 (a / apollo) :arg1 (m / majority :poss (c / company)) :time (a2 / after :op1 (t / trade-01 :quant 2007 :arg2 (m2 / monetary-quantity :quant 850 :unit (d / dollar :mod (r / renminbi))))))
(w / warn-01 :arg0 (p / person :name (n / name :op1 "Foxtons") :arg0-of (h / have-org-role-91 :arg1 (p2 / person :name (n2 / name :op1 "Foxtons") :arg0-of (h2 / have-org-role-91 :arg2 (i / intermediaries))) :arg2 (i2 / intermediaries))) :arg1 (l / lead-03 :arg0 (r / report-01 :arg1 (l2 / lend-01 :mod (s / strict :degree (m / more)))) :arg2 (l3 / level :arg1-of (l4 / low-04 :degree (m2 / more)) :mod (g / grow-01 :arg1 (a / and :op1 (s2 / sell-01 :arg1 (p3 / property)) :op2 (t / thing :arg2-of (p4 / price-01))) :time (y / year :ord (o / ordinal-entity :value 2))))) :time (w2 / week :mod (l5 / last)))
(d / describe-01 :arg1 (t / thing :arg1-of (i / include-91 :arg2 (t2 / thing :mod (o / other)))) :arg2 (t3 / thing :arg2-of (i2 / include-91 :arg1 (t4 / thing :mod (o2 / other)))) :arg1-of (c / cause-01 :arg0 (d2 / describe-01 :polarity - :arg0 (l / law) :arg1 (c2 / campaign-01 :polarity - :arg0 (l2 / law)))))
(t / take-01 :arg0 (h / he) :arg1 (p / picture) :accompanier (p2 / person :arg0-of (h2 / have-rel-role-91 :arg1 (h3 / he) :arg2 (h4 / husband))) :time (b / before :op1 (n / now) :quant (t2 / temporal-quantity :quant (N / N-A) :unit (y / year))))
(a / and :op1 (s / sign-01 :arg1 (f / fish :source (b / boat :mod (r / rowing))) :mod (e / even)) :op2 (c / contain-01 :arg0 (f2 / fish) :arg1 (m / muerte :polarity -)))
(s / speak-01 :polarity - :arg0 (i / i) :arg2 (h / he) :time (e / ever) :prep-on (i2 / issue-02 :mod (t / that)))
(p / person :quant 22 :domain (i / i))
(c / cause-01 :arg1 (p / possible-01 :arg1 (f / forget-01 :arg0 (w / we) :arg1 (i / it))))
(a / and :op1 (r / rescued :arg1 (s / soldier :quant 2 :mod (m / marine))) :op2 (m2 / miss-01 :arg1 (s2 / soldier :quant 2) :mod (s3 / still)))
(s / say-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (o / organization :name (n / name :op1 "Ministry" :op2 "of" :op3 "Justice")) :arg3 (w / work-01))) :arg1 (a / and :op1 (p2 / person :arg0-of (w2 / work-01 :arg2 (p3 / prison)) :mod (p4 / prison)) :op2 (p5 / person :arg0-of (r / represent-01 :arg1 (o2 / organization))) :op3 (p6 / person :arg0-of (r2 / represent-01 :arg1 (o3 / organization))) :op4 (p7 / person :arg0-of (r3 / represent-01 :arg1 (o4 / organization))) :op5 (p8 / person :arg0-of (r4 / represent-01 :arg1 (o5 / organization)))))
(c / contrast-01 :arg1 (p / possible-01 :arg1 (l / leave-15 :arg0 (p2 / person :name (n / name :op1 "Francois" :op2 "Holland") :arg0-of (h / have-org-role-91 :arg2 (s / senator))) :arg1 (c2 / call-03 :arg0 (p3 / person) :arg1 (w / war)))) :arg2 (h2 / have-purpose-91 :arg1 (g / government-organization :arg0-of (g2 / govern-01) :mod (n2 / new)) :arg2 (g3 / government-organization :arg0-of (g4 / govern-01) :mod (n3 / new)) :time (a / after :op1 (t / take-01 :polarity - :arg1 (o / over :op1 (s2 / summer)) :mod (e / even)))))
(i / include-01 :arg1 (a / and :op1 (p / person :arg0-of (h / have-rel-role-91 :arg1 (c / child :mod (t / tradition)) :arg2 (c2 / child))) :op2 (p2 / person :arg0-of (h2 / have-rel-role-91 :arg1 (c3 / child) :arg2 (c4 / child))) :op3 (f / flower :poss (p3 / person :arg0-of (t2 / teach-01)))) :arg2 (d / day :ord (o / ordinal-entity :value 1) :mod (s / school)))
(l / learn-01 :arg0 (h / he) :arg1 (w / way :arg1-of (h2 / hard-04) :domain (t / this)))
(s / say-01 :arg0 (a / and :op1 (a2 / area :location (r / relative-position :op1 (c / city) :direction (a3 / area))) :op2 (e / environment :arg1-of (s2 / surround-01))) :arg1 (k / kelko :arg1 (a4 / and :op1 (a5 / area :location (c2 / city)) :op2 (e2 / environment :arg1-of (s3 / surround-01))) :mod (a6 / also) :arg1-of (i / instead-of-91 :arg2 (b / broad-02 :arg1 (m / modify-01 :arg2 (l / location :location-of (l2 / location :example (o / ounasjoe :location (s4 / slash :op1 (s5 / slash :op1 (s6 / slash :op1 (d / distance-quantity :quant (N / N-A) :unit (m2 / mile)) :op2 (d2 / distance-quantity :quant (N2 / N-A) :unit (m3 / mile)))))))))))))
(l / leave-11 :arg0 (t / thing :arg1-of (d / decide-01 :arg0 (p / person :name (n / name :op1 "Perry")))) :arg1 (c / complain-01 :arg0 (c2 / country) :arg1 (m / matter) :mod (f / formal)) :arg2 (r / rest :part-of (o / organization :name (n2 / name :op1 "Monitoring" :op2 "Group"))))
(q / question-01 :arg1-of (c / cause-01 :arg0 (s / seem-01 :arg1 (e / endanger-01 :arg0 (p / public) :arg1 (e2 / effect :mod (i / immediate))))))
(s / say-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (h2 / he) :arg2 (l / location :name (n / name :op1 "Mogwai") :mod (n2 / newsletter)))) :arg1 (o / opportunity :domain (v / vote-01) :beneficiary (p2 / person :mod (e / ethnic-group :name (n3 / name :op1 "Scot")) :arg0-of (e2 / event :time (o2 / once :op1 (l2 / life) :mod (o3 / only))))) :location (l3 / location :name (n4 / name :op1 "Mogwai") :mod (n5 / newsletter) :poss (h3 / he)))
(c / contrast-01 :arg2 (e / explain-01 :arg0 (i / it) :arg1 (c2 / cause-01 :arg0 (a / amr-unknown) :arg1 (s / sing :arg0 (t / they) :arg1 (i2 / it) :arg2 (i3 / i)))))
(w / way :arg1-of (s / simple-02 :degree (m / most)) :purpose (s2 / save-01 :arg1 (m2 / money)))
(c / contrast-01 :arg2 (c2 / call-03 :arg0 (p / person :name (n / name :op1 "Lavrov")) :arg1 (o / obligate-01 :arg1 (t / troop) :arg2 (w / withdraw-01 :arg0 (t2 / troop) :arg1 (c3 / country :name (n2 / name :op1 "Ukraine")) :time (i / immediate) :arg1-of (c4 / cause-01 :arg0 (p2 / possible-01 :polarity - :arg1 (f / fire-02 :arg0 (t3 / troop) :arg1 (c5 / civilian))))))))
(k / kaatumiskuva :arg0 (p / person :name (n / name :op1 "Lasse" :op2 "Virénin")) :arg1 (c / city :name (n2 / name :op1 "Munich")) :mod (g / good :degree (m / most)))
(b / be-temporally-at-91 :arg1 (i / it) :arg2 (b2 / back :op1 (t / then)))
(g / great :domain (s / see-01 :arg1 (h / have-03 :arg0 (o / other) :arg1 (p / plot-01))))
(w / win-01 :arg0 (p / person :name (n / name :op1 "Croze")) :arg1 (t / tube :mod (n2 / naispääosan) :mod (g / good :degree (m / most)) :location (c / city :name (n3 / name :op1 "Cannes"))) :arg2 (r / role :poss (p2 / person) :topic (i / invade-01 :arg0 (b / barbarian :mod (f / film)) :location (t2 / thing :quant 2003))))
(c / crash-01 :time (a / after :op1 (c2 / crash-01 :arg1 (c3 / city :name (n / name :op1 "Athens")) :arg1-of (d / deep-02))))
(h / have-concession-91 :arg2 (r / return-02 :arg0 (g / government-organization :arg0-of (g2 / govern-01) :arg1-of (l / local-02)) :arg1 (t / thing :arg1-of (p / propose-01)) :arg2 (p2 / prepare-01 :arg1 (t2 / team :arg0-of (m / manage-01)) :direction (f / forward))))
(d / do-02 :arg0 (p / person :name (n / name :op1 "Lentopalloväki") :arg0-of (m / move-01)) :arg1 (t / thing :mod (s / same)) :time (e / early :degree (m2 / more) :mod (l / little)))
(( / ( :( (n / name) :op1 "Seppo" :op2 "Sirkka")
(o / obligate-01 :arg2 (f / fight-01 :arg0 (w / we) :arg2 (p / peace)))
(t / try-01 :arg0 (i / i) :arg1 (t2 / take-on-09 :arg0 (i2 / i) :arg1 (i3 / it)) :concession-of (o / obligate-01 :arg1 (i4 / i) :arg2 (l / let-01 :arg0 (i5 / i) :arg1 (b / be-02 :arg1 (i6 / i)))))
(a / and :op2 (s / say-01 :arg0 (i / i) :arg1 (c / continue-01 :arg1 (s2 / say-01 :arg0 (y / you)))))
(p / picture :polarity - :mod (f / fanihuuma))
(a / and :op1 (r / remove-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg2 (a2 / agent :mod (e / estate)))) :arg1 (u / university :name (n / name :op1 "Suffolk")) :arg2 (s / sell-01 :arg1 (i / image :mod (s2 / sell-01 :arg1 (h2 / house))))) :op2 (b / become-01 :arg1 (e2 / elephant :location (r2 / room :location (o / organization :name (n2 / name :op1 "Picture" :op2 "House")))) :arg2 (p2 / pig :mod (b2 / big))))
(o / own-01 :arg0 (m / municipal :duration (m2 / more-than :op1 (t / temporal-quantity :quant (N / N-A) :unit (y / year)))) :arg1 (a / area))
(r / roaring :arg1 (p / person :name (n / name :op1 "Isabelle" :op2 "Roberts") :mod (c / country :name (n2 / name :op1 "N-A"))) :manner (l / loud :degree (s / so)) :time (p2 / pour :arg1 (w / water :mod (c2 / cold) :consist-of (i / ice)) :arg2 (h / he) :arg1-of (c3 / cause-01 :arg0 (d / damage-01 :arg0 (w2 / water :mod (c4 / cold)) :arg1 (t / tone :arg1-of (f / facial))))))
(a / and :op1 (g / go-08 :arg1 (s / scientist) :arg2 (m / more-than :op1 (c / country :name (n / name :op1 "N-A") :mod (c2 / country :name (n2 / name :op1 "N-A"))))) :op2 (s2 / say-01 :arg0 (s3 / scientist) :arg1 (i / include-91 :arg1 (w / woman :quant (p / percentage-entity :value (N / N-A) :mod (o / only))) :arg2 (t / temporal-quantity :quant (N2 / N-A) :unit (y / year)) :time (a2 / after :op1 (w2 / war :name (n3 / name :op1 "N-A"))))))
(o / or :op1 (d / damage-01 :arg1 (a / attack-01 :mod (i / israeli))) :op2 (d2 / destroy-01 :arg0 (a2 / attack-01) :arg1 (h / home :poss (p / person :quant (m / more-than :op1 100) :arg1-of (c / change-01 :arg2 (s / school :quant 100 :mod (o2 / organization :name (n / name :op1 "UN")) :arg1-of (c2 / change-01 :time (e / eventual))))))))
(s / say-01 :arg0 (o / online :arg1-of (p / publish-01 :medium (o2 / online))) :arg1 (a / and :op1 (k / keep-02 :arg1 (o3 / occupy-01 :arg0 (p2 / person :arg0-of (h / have-org-role-91 :arg2 (' / '' :mod (b / business)))) :arg1 (r / resort :mod (l / last) :arg1-of (i / introduce-01 :arg2 (h2 / hopeful-03 :polarity - :arg1 (d / dialogue-01)))))) :op2 (w / way :polarity - :mod (o4 / other) :mod (w2 / way))) :medium (o5 / online))
(a / appear-01 :arg1 (h / he) :location (f / film :arg2-of (i / include-01 :arg1 (a2 / and :op1 (p / person :name (n / name :op1 "Steven" :op2 "Grand")) :op2 (p2 / person :name (n2 / name :op1 "Julian" :op2 "Schnabelin")) :location (f2 / film :mod (g / glass :mod (b / butterfly)))))))
(m / multi-sentence :snt1 (s / start-01 :arg0 (p / person :name (n / name :op1 "Henry") :arg0-of (h / have-org-role-91 :arg1 (c / career :mod (t / tv)) :arg3 (c2 / career :mod (t2 / tv)))) :arg1 (s2 / seventies :arg1 (c3 / career :mod (t3 / tv)))) :snt2 (a / and :op1 (i / imitaattori :arg1 (i2 / i) :medium (t4 / tv) :mod (o / only) :arg1-of (l / long-03 :degree (q / quite))) :op2 (s3 / say-01 :arg0 (h2 / he))))
(c / contrast-01 :arg1 (k / know-01 :polarity - :arg0 (i / i) :arg1 (h / have-manner-91 :arg1 (i2 / it))) :arg2 (s / succeed-01 :arg1 (s2 / succeed-01 :arg0 (a / all))))
(s / say-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (o / organization :name (n / name :op1 "Brigham" :op2 "Young" :op3 "Universityn")) :arg2 (p2 / person :arg0-of (s2 / study-01)) :time (y / year :mod (l / last)))) :arg1 (b / buy-01 :arg0 (p3 / person) :arg1 (t / thing :arg1-of (d / decide-01 :arg0 (m / media)) :mod (s3 / strategy) :mod (s4 / strategic)) :arg1-of (c / cause-01 :arg0 (u / understand-01 :arg0 (p4 / person) :arg1 (e / end-01 :arg1 (b2 / business :mod (b3 / business) :mod (m2 / monetary-quantity :quant 0.42 :unit (d2 / dollar) :mod (o2 / only))) :mod (b4 / business))))) :time (y2 / year :mod (l2 / last)))
(c / challenge-01 :arg2 (p / participate-01 :arg0 (p2 / person :mod (c2 / country :name (n / name :op1 "N-A"))) :arg1 (h / hospital :location-of (s / set-up-03 :arg1 (p3 / person :mod (c3 / country :name (n2 / name :op1 "N-A"))) :location (p4 / place :location-of (s2 / set-up-03 :arg1 (p5 / person) :location (p6 / place)))))))
(b / become-01 :arg1 (p / person :name (n / name :op1 "Liikevoittoprosentti")) :arg2 (t / thing :quant 7.1))
(h / have-03 :arg0 (a / and :op1 (p / person :arg0-of (h2 / have-org-role-91 :arg1 (c / country :name (n / name :op1 "N-A")))) :op2 (p2 / person :arg0-of (h3 / have-org-role-91 :arg1 (f / factory))) :op3 (p3 / person :arg0-of (h4 / have-org-role-91 :arg1 (r / region) :arg3 (l / lead-02 :arg0 (p4 / person)))) :op4 (p5 / person :arg0-of (p6 / produce-01 :arg1 (m / metal))) :op5 (p7 / person :arg0-of (p8 / produce-01 :arg1 (p9 / product :mod (v / vital) :mod (c2 / country))) :arg0-of (p10 / produce-01 :arg1 (p11 / product :mod (v2 / vital) :mod (c3 / country))))) :arg1 (p12 / person :mod (c4 / country :name (n2 / name :op1 "N-A"))))
(e / encourage-01 :arg0 (h / he) :arg1 (c / child) :arg2 (a / and :op1 (s / study-01 :arg0 (c2 / child) :arg1-of (h2 / hard-02)) :op2 (p / promise-01 :arg0 (c3 / child) :arg2 (c4 / care-03 :arg0 (c5 / child) :arg1 (l / lasten :mod (' / ''))))))
(d / dans :arg0 (a / and :op1 (p / person :name (n / name :op1 "Kirsi" :op2 "Alm") :arg0-of (h / have-org-role-91 :arg2 (w / wrong-footed))) :op2 (p2 / person :name (n2 / name :op1 "Nina" :op2 "Rahko") :arg0-of (h2 / have-org-role-91 :arg2 (w2 / wrong-footed))) :op3 (p3 / person :name (n3 / name :op1 "Pekka" :op2 "Pou") :arg0-of (h3 / have-org-role-91 :arg2 (m / meteorological))) :op4 (p4 / person :name (n4 / name :op1 "Pekka" :op2 "Pou") :arg0-of (h4 / have-org-role-91 :arg2 (m2 / meteorological))) :op5 (p5 / person :name (n5 / name :op1 "Pekka" :op2 "Pou") :arg0-of (h5 / have-org-role-91 :arg2 (m3 / meteorological))) :op6 (p6 / person :arg0-of (h6 / have-org-role-91 :arg2 (m4 / meteorological))) :op6 (p7 / person :arg0-of (h7 / have-org-role-91 :arg2 (m5 / meteorological))) :op7 (p8 / person :arg0-of (h8 / have-org-role-91 :arg2 (m6 / meteorological))) :op6 (p9 / person :arg0-of (h9 / have-org-role-91 :arg2 (m7 / meteorological))) :op7 (p10 / person :arg0-of (h10 / have-org-role-91 :arg2 (m8 / meteorological)))))
(a / and :op1 (o / out :arg1 (a2 / and :op1 (m / model :mod (o2 / ordinary) :mod (o3 / ordinary)) :op2 (m2 / model :mod (v / vedenpitäviin)))) :op2 (c / criticize-01 :arg0 (a3 / and) :arg1 (m3 / model)))
(m / multi-sentence :snt1 (g / gather-03 :arg0 (p / person :quant (a / about :op1 150)) :location (l / location :name (n / name :op1 "Cardiff" :op2 "City" :op3 "Hall"))) :snt2 (r / respond-01 :arg1 (s / summit)))
(p / part :part-of (p2 / presentation :poss (l / life)) :mod (o / only))
(c / create-01 :arg0 (p / person :arg0-of (h / have-rel-role-91 :arg1 (p2 / person :name (n / name :op1 "Lopes")) :arg2 (m / mate) :time (l / late :degree (m2 / most))) :arg0-of (h2 / have-rel-role-91 :arg1 (p3 / person) :arg2 (m3 / mate))) :arg1 (a / and :op1 (p4 / person :name (n2 / name :op1 "Hoffmann") :arg0-of (h3 / have-org-role-91 :arg1 (d / disruption) :arg2 (p5 / predecessor))) :op2 (p6 / person :name (n3 / name :op1 "Hoffmann") :arg0-of (h4 / have-org-role-91 :arg1 (s / sam) :arg2 (p7 / predecessor))) :op3 (p8 / person :name (n4 / name :op1 "Hoffmann") :arg0-of (h5 / have-org-role-91 :arg1 (n5 / nana) :arg2 (p9 / predecessor))) :op4 (p10 / person :arg0-of (h6 / have-rel-role-91 :arg1 (p11 / person) :arg2 (p12 / predecessors))) :op5 (p13 / person :arg0-of (h7 / have-rel-role-91 :arg1 (p14 / person) :arg2 (p15 / predecessors))) :op6 (p16 / person :arg0-of (h8 / have-rel-role-91 :arg1 (p17 / person) :arg2 (p18 / predecessors))) :op6 (p19 / person :arg0-of (h9 / have-rel-role-91 :arg1 (p20 / person) :arg2 (p21 / predecessors))) :op6 (p22 / person :arg0-of (h10 / have-rel-role-91 :arg1 (p23 / person) :arg2 (p24 / predecessors))) :op7 (p25 / person :arg0-of (h11 / have-rel-role-91 :arg1 (p26 / person) :arg2 (w / whistle-blowing))) :op7 (p27 / person :arg0-of (h12 / have-rel-role-91 :arg1 (p28 / person) :arg2 (w2 / whistle-blowing)))) :time (l2 / late :degree (m4 / most)) :mod (o / only))
(m / multi-sentence :snt1 (b / block-01 :arg0 (p / person :name (n / name :op1 "Perry" :op2 "Lehmbergin")) :arg1 (f / fund-01 :arg1 (p2 / post))) :snt2 (a / and :op1 (b2 / block-01 :arg0 (p3 / person :arg0-of (l / lead-02 :arg1 (j / jury :mod (g / grand) :location (c / city :name (n2 / name :op1 "Austin"))) :time (m2 / month :mod (t / this)))) :arg1 (m3 / meet-03 :arg0 (p4 / person) :arg1 (p5 / person :arg1-of (a2 / accuse-01))) :time (m4 / month :mod (t2 / this))) :op2 (c2 / candidate :mod (p6 / potential) :domain (p7 / person :name (n3 / name :op1 "Perry")) :beneficiary (p8 / person))))
(l / love-01 :arg0 (i / i) :arg1 (r / room :purpose (t / train-01)))
(c / contrast-01 :arg1 (m / money :polarity - :time (n / no-longer) :domain (i / it)) :arg2 (s / say-01 :arg0 (p / person :arg0-of (o / own-01 :arg1 (s2 / shop)) :quant (m2 / multiple :op1 1)) :arg1 (c2 / court)))
FAILED_TO_PARSE#Couldn't convert to full AMR graph.
(i / insist-01 :arg0 (p / person :name (n / name :op1 "Vladimir" :op2 "Putin") :arg0-of (h / have-org-role-91 :arg1 (c / country :name (n2 / name :op1 "Ukraine")) :arg2 (p2 / president))) :arg1 (a / and :op1 (e / end-01 :arg0 (g / government-organization :arg0-of (g2 / govern-01 :arg1 (c2 / country))) :arg1 (f / fight-01 :arg0 (g3 / government-organization) :arg1 (s / separatist) :location (e2 / east :part-of (c3 / country)))) :op2 (s2 / start-01 :arg0 (g4 / government-organization) :arg1 (n3 / negotiate-01 :arg0 (g5 / government-organization) :arg1 (s3 / separatist) :time (i2 / immediate))) :op3 (s4 / start-01 :arg0 (g6 / government-organization) :arg1 (n4 / negotiate-01) :time (i3 / immediate) :location (r / region)) :op4 (t / tell-01 :arg0 (c4 / country) :arg2 (c5 / country))))
(s / send-01 :polarity - :arg1 (m / meet-03 :arg0 (c / council)) :arg2 (r / result-01 :arg1 (p / problem :topic (t / technical)) :arg1-of (d / direct-02)))
(b / be-located-at-91 :arg1 (l / location :name (n / name :op1 "Black" :op2 "Sea" :op3 "peninsula") :arg1-of (a / annexed :arg2 (c / country :name (n2 / name :op1 "Russia")) :time (b2 / before :op1 (n3 / now) :quant (t / temporal-quantity :quant (N / N-A) :unit (m / month))))) :arg2 (a2 / and :op1 (p / port :location (a3 / and :op1 (a4 / area :part (c2 / coast)) :op2 (p2 / port :location (c3 / coast)))) :op2 (p3 / port :location (c4 / coast) :mod (h / history))))
(o / offer-01 :arg0 (s / stimulation :arg1 (p / pupil :part-of (s2 / school))) :arg1 (o2 / option :mod (v / vegetarian)) :manner (p2 / permit-01 :arg1 (p3 / permit-01 :arg1 (o3 / or :op1 (p4 / person :arg0-of (h / have-rel-role-91 :arg1 (p5 / person :arg0-of (h2 / have-rel-role-91 :arg1 (p6 / person :arg0-of (h3 / have-rel-role-91 :arg1 (p7 / person :arg0-of (h4 / have-rel-role-91 :arg1 (p8 / person :arg0-of (h5 / have-rel-role-91 :arg1 (p9 / person :arg0-of (h6 / have-rel-role-91 :arg2 (p10 / parent))) :arg2 (p11 / parent))) :arg2 (p12 / parent))))))))) :op2 (p13 / person :arg0-of (h7 / have-rel-role-91 :arg1 (p14 / person) :arg2 (d / doctor))) :op3 (d2 / diet :mod (v2 / vegetarian))) :mod (o4 / only))) :time (t / today))
(l / loud :domain (p / person :name (n / name :op1 "Ms" :op2 "Roberts") :mod (m / male) :mod (m2 / male)) :degree (s / so) :time (r / run-02 :arg0 (p2 / person) :arg1 (w / water :consist-of (i / ice) :arg1-of (d / damage-01 :arg0 (f / face :part-of (p3 / person))))))
(s / say-01 :arg0 (h / he) :arg1 (a / and :op1 (o / obligate-01 :arg1 (w / we) :arg2 (s2 / stay-01 :arg1 (w2 / we) :location (s3 / side :poss (h2 / he)))) :op2 (s4 / say-01 :arg0 (h3 / he) :arg1 (t / thing :arg2-of (o2 / obligate-01 :arg1 (w3 / we))))))
(b / boy :arg0-of (t / take-01 :arg1 (p / photo) :time (a / after :op1 (b2 / become-01 :arg1 (b3 / boy) :arg2 (t2 / thing :arg1-of (s / symbolize-01 :arg2 (g / game :name (n / name :op1 "N-A"))))))))
FAILED_TO_PARSE#Couldn't convert to full AMR graph.
(i / important :domain (t / this) :condition (a / and :op1 (n / natá?íte :arg1 (c / camera :mod (o / outdoorovou))) :op2 (l / lenses :arg1 (f / facility :mod (s / such)) :mod (u / usual) :arg1-of (w / wide-02)) :arg1-of (m / mean-01 :arg2 (a2 / and :op1 (f2 / firm :mod (u2 / usual) :domain (f3 / facility)) :op2 (l2 / lenses :arg1-of (w2 / wide-02)) :domain (f4 / facility))) :arg1-of (m2 / mean-01 :arg2 (n2 / need-01 :arg0 (y / you) :arg1 (p / point :mod (m3 / more)) :condition (w3 / want-01 :arg0 (y2 / you) :arg1 (p2 / person :arg0-of (h / have-rel-role-91 :arg1 (y3 / you) :arg2 (f5 / fotoráme?ek))))))))
(g / get-01 :arg0 (p / person :arg0-of (p2 / play-01 :arg1 (l / lottery)) :location (p3 / person :name (n / name :op1 "Harvey"))) :arg1 (s / slice :quant (N / N-A)))
(a / and :op1 (s / state-01 :arg0 (s2 / state :mod (c / country :name (n / name :op1 "N-A"))) :arg1 (a2 / and :op1 (p / pass-01 :arg0 (l / law :arg1-of (r / resemble-01)) :arg1 (c2 / court :location (p2 / peninsula :name (n2 / name :op1 "N-A")))) :op2 (m / message-01 :arg0 (s3 / state)))) :op2 (d / declare-01 :arg0 (s4 / state) :arg2 (m2 / measure-02 :arg0 (c3 / constitution :mod (p3 / provisions)) :mod (s5 / such))))
(m / multi-sentence :snt1 (a / and :op1 (s / say-01 :arg0 (n / needle :consist-of (p / person :arg0-of (s2 / say-01 :arg1 (t / treasure)))) :arg1 (t2 / treasure)) :op2 (s3 / say-01 :arg0 (p2 / person :arg0-of (h / have-org-role-91 :arg1 (l / lungs))) :arg1 (t3 / treasure))) :snt2 (p3 / push-02 :arg0 (i / it) :arg2 (e / edges :location (l2 / location :location-of (l3 / locates :arg1 (v / výstelka))))))
(o / old :polarity - :domain (p / person :name (n / name :op1 "Andrew" :op2 "Lawson")))
(m / multi-sentence :snt1 (c / contrast-01 :arg1 (h / have-03 :arg0 (w / we) :arg1 (f / fear-01 :quant (b / bit :degree (l / little)))) :arg2 (h2 / have-03 :arg0 (w2 / we) :arg1 (f2 / fear-01 :arg0 (w3 / we) :direction (f3 / forward)))) :snt2 (s / say-01 :arg0 (i / i) :arg1 (r / reside-01 :arg0 (p / person :name (n / name :op1 "Ronit" :op2 "Bartová")) :arg1 (a / and :op1 (p2 / person :name (n2 / name :op1 "Kibbutz" :op2 "Saad")) :op2 (p3 / person :mod (c2 / country) :arg0-of (t / teach-01))) :location (s2 / school :arg1-of (l2 / local-02)))))
(c / contrast-01)
(m / multi-sentence :snt1 (r / recommend-01 :arg0 (w / we) :arg1 (r2 / revisit :arg0 (y / you) :arg1 (d / doctor :arg0-of (w2 / write-01 :arg1 (w3 / write-01 :arg0 (d2 / doctor) :arg1 (a / accident :arg1-of (c / confirm-01 :arg0 (d3 / doctor)))))))) :snt2 (p / prove-01 :arg0 (i / it) :arg1 (- / -rrb- :arg1 (d4 / doctor)) :mod (o / only)) :snt3 (p2 / prove-01 :arg0 (i2 / it) :arg1 (-2 / -rrb- :arg0 (d5 / doctor)) :mod (o2 / only)))
(p / price-01 :quant 43 :mod (e / exact))
(s / shock-01 :arg0 (i / i) :arg1 (i2 / i) :arg1-of (c / complete-02) :time (a / answer-01 :arg0 (i3 / i)))
(a / and :op1 (r / realize-01 :arg0 (i / i) :arg1 (d / do-02 :arg0 (y / year :mod (t / this)) :arg1 (f / family :arg1-of (h / have-org-role-91 :arg0 (i2 / i) :arg2 (m / member))) :time (y2 / year :mod (t2 / this)))) :op2 (b / begin-01 :arg0 (i3 / i) :arg1 (a2 / appreciate-02 :arg0 (i4 / i) :arg1 (m2 / more :compared-to (h2 / he)))))
(l / landed :arg1 (a / and :op1 (c / czechs) :op2 (s / slovaks)) :location (l2 / location :name (n / name :op1 "Dunkirk")) :time (b / before :op1 (n2 / now) :quant (m / multiple :op1 (t / temporal-quantity :quant (N / N-A) :unit (y / year)))))
(c / contrast-01 :arg1 (l / like-01 :arg0 (b / boy) :arg1 (s / sport)) :arg2 (p / possible-01 :polarity - :arg1 (d / do-02 :arg0 (b2 / boy) :arg1 (i / it) :arg1-of (c2 / cause-01 :arg0 (h / have-polarity-91 :arg2 - :degree (v / very))))))
(c / connect-01 :polarity - :arg1 (c2 / company :name (n / name :op1 "Abbott")) :arg2 (c3 / case :poss (h / he)) :time (t / then :mod (e / even)))
(m / multi-sentence :snt1 (r / remember-01 :arg0 (i / i) :arg1 (' / '' :arg0 (i2 / i) :arg1 (p / person :name (n / name :op1 "Damire") :arg1-of (r2 / run-01 :arg0 (i3 / i))))) :snt2 (c / contrast-01 :arg2 (c2 / convince-01 :arg1 (i4 / i) :arg2 (h / hear-01 :arg0 (i5 / i)))))
(t / thing :arg2-of (c / characteristic-02 :arg1 (p / person :name (n / name :op1 "Arona" :op2 "Ra") :mod (a / atheist) :mod (c2 / country :name (n2 / name :op1 "N-A")))) :mod (a2 / another) :mod (a3 / another))
(a / and :op1 (r / remove-01 :arg1 (p / person :arg1-of (e / employ-01 :location (s / south :part-of (c / country)))) :arg2 (w / wall :location (s2 / south :part-of (c2 / country)))) :op2 (r2 / remove-01 :arg1 (r3 / return-01 :arg1 (c3 / child)) :manner (g / gradual) :manner (g2 / gradual)) :location (c4 / country :location (s3 / south :part-of (c5 / country))))
(l / look-02 :arg0 (i / it) :arg1 (w / wait-01 :arg1 (t / they) :arg2 (t2 / trouble) :arg1-of (d / do-02 :polarity - :arg0 (t3 / they))))
(i / include-01 :arg1 (p / picture :topic (r / room :mod (l / live-01))) :arg2 (p2 / picture-01 :arg1 (p3 / pig :arg0 (p4 / pig) :arg1 (h / head :part-of (h2 / head :part-of (h3 / he))))))
(h / help-01 :arg0 (p / picture :arg1-of (f / focus-01 :arg2 (a / area :mod (s / small) :part-of (i / image :mod (p2 / previous))))) :arg1 (b / become-01 :arg1 (p3 / picture) :arg2 (s2 / see-01 :arg0 (p4 / picture))))
(s / serve-01 :arg0 (i / it) :arg1 (e / example :mod (g / good)) :location (c / country :name (n / name :op1 "Italy")) :arg1-of (c2 / cause-01 :arg0 (c3 / chess :arg1 (b / board :mod (c4 / cribbage) :topic (s2 / size :poss (p / product-of :op1 42 :op2 42))))))
(a / and :op2 (o / obligate-01 :polarity - :arg1 (p / person) :arg2 (b / believe-01 :arg0 (p2 / person) :arg1 (i / it) :arg1-of (c / cause-01 :arg0 (a2 / and :op1 (s / support-01 :arg0 (p3 / person) :arg1 (m / morality :arg1-of (d / deep-02)) :arg1-of (c2 / cause-01 :arg0 (z / zjevovat :arg0 (p4 / person) :arg1 (m2 / morality :arg1-of (d2 / deep-02))))) :op2 (e / exceed-01 :arg0 (w / wisdom) :arg1 (l / limit-01 :arg1 (h / human) :quant (a3 / all)) :extent (f / far)))))))
(m / matter :mod (r / routine) :domain (b / bring-01 :arg1 (p / pots :source (s / storage :mod (s2 / summer))) :arg2 (c / class) :destination (a / and :op1 (c2 / class) :op2 (n / nafasovat))) :mod (m2 / most))
(a / and :op1 (c / contribute-01 :arg0 (h / he) :arg2 (w / weather :mod (s / storm))) :op2 (c2 / contribute-01 :arg0 (a2 / and :op1 (l / location :name (n / name :op1 "Virgina")) :op2 (o / organization :name (n2 / name :op1 "Airlines")) :op3 (o2 / organization :name (n3 / name :op1 "Airlines")) :op4 (c3 / city :name (n4 / name :op1 "Melbourne")) :op5 (c4 / country :name (n5 / name :op1 "N-A"))) :arg2 (l2 / location :name (n6 / name :op1 "Adelaide"))))
(s / say-01 :arg0 (p / person :arg0-of (l / lead-02 :arg1 (p2 / person :arg0-of (l2 / lead-02)))) :arg1 (r / refuse-01 :arg0 (a / apollo) :arg1 (c / comment-01 :arg0 (a2 / apollo) :arg3 (s2 / situation))) :arg1-of (c2 / cause-01 :arg0 (r2 / request-01 :arg0 (p3 / person :arg0-of (l3 / lead-02)) :arg1 (r3 / request-01 :arg0 (p4 / person) :arg1 (t / thing :arg1-of (s3 / say-01)) :time (d / date-entity :decade (N / N-A))))))
(g / go-02 :arg0 (a / amr-unknown) :arg4 (c / car) :arg1-of (l / long-03))
(f / fun :domain (i / it))
(s / say-01 :arg0 (a / and :op1 (p / person :arg0-of (c / campaign-01 :arg1 (r / right-05 :arg1 (w / woman) :arg2 (w2 / woman)))) :op2 (p2 / person :arg0-of (h / have-org-role-91 :arg1 (o / organization :name (n / name :op1 "Association" :op2 "of" :op3 "American")))) :op3 (p3 / person :arg0-of (h2 / have-org-role-91 :arg1 (o2 / organization :name (n2 / name :op1 "American" :op2 "Medical" :op3 "Association")))) :op4 (p4 / person :arg0-of (h3 / have-org-role-91 :arg1 (o3 / organization) :arg3 (c2 / campaign-01))) :op5 (p5 / person :arg0-of (h4 / have-org-role-91 :arg1 (o4 / organization) :arg3 (c3 / campaign-01))) :op6 (p6 / person :arg0-of (h5 / have-org-role-91 :arg1 (o5 / organization) :arg3 (c4 / campaign-01))) :op6 (p7 / person :arg0-of (h6 / have-org-role-91 :arg1 (o6 / organization) :arg3 (c5 / campaign-01))) :op6 (p8 / person :arg0-of (h7 / have-org-role-91 :arg1 (o7 / organization) :arg3 (c6 / campaign-01))) :op7 (p9 / person :arg0-of (h8 / have-org-role-91 :arg1 (o8 / organization) :arg3 (c7 / campaign-01)))) :arg1 (n3 / need-01 :arg0 (n4 / need-01 :arg1 (p10 / permit-01 :arg1 (p11 / permit-01 :arg0 (d / doctor) :arg1 (n5 / need-01 :polarity - :arg1 (t / thing :arg1-of (r2 / require-01 :arg1-of (p12 / possible-01 :polarity -))))))) :arg1 (p13 / permit-01 :mod (t2 / this))))
(r / realize-01 :polite (+ / +) :polite (+2 / +) :arg0 (y / you) :arg1 (a / and :op1 (a2 / aim-01 :arg0 (o / organization :name (n / name :op1 "Hamas")) :arg1 (l / liquidations :arg0 (o2 / organization) :arg1 (s / state :poss (c / country :name (n2 / name :op1 "Israel"))))) :op2 (t / thing :arg2-of (p / price-01) :mod (a3 / any))))
(c / contrast-01 :arg1 (h / hurt-01 :arg1 (o / objective)) :arg2 (n / need-01 :arg1 (w / work-09 :arg1 (i / it) :mod (r / really))))
(a / and :op1 (a2 / aid-01 :arg0 (h / he) :arg2 (c / country-region :name (n / name :op1 "Gaza")) :mod (r / real) :mod (r2 / real)) :op2 (a3 / area :arg0 (h2 / he) :arg1 (a4 / area :poss (s / she)) :purpose (a5 / and :op1 (d / deprive :arg0 (h3 / he) :arg1 (s2 / she)) :op2 (d2 / disarm-01 :arg0 (h4 / he) :arg1 (s3 / she)))))
(k / know-03 :arg0 (h / he) :arg1 (l / little :degree (v / very)))
(m / multi-sentence :snt1 (l / look-01 :polarity - :arg0 (a / amr-unknown) :direction (f / forward)) :snt2 (s / say-01 :arg0 (h / he) :arg1 (b / be-located-at-91 :arg1 (h2 / he) :arg2 (i / in-front-of :op1 (p / press)))))
(p / promise-01 :arg0 (p2 / person :name (n / name :op1 "Kenyatta") :arg0-of (p3 / prevent-01 :arg1 (c / corrupt-01))) :arg1 (p4 / prevent-01 :arg0 (p5 / person) :arg1 (c2 / corrupt-01) :location (g / government-organization :arg0-of (g2 / govern-01))) :time (a / after :op1 (m / multiple :op1 2013)))
(c / contrast-01 :arg1 (f / fast :domain (w / we)) :arg2 (g / go-02 :polarity - :arg0 (i / i) :arg4 (v / vint)))
(w / write-01 :mode (i / imperative) :arg0 (y / you) :arg1 (d / discuss-01 :arg0 (w2 / we) :arg2 (w3 / we)) :condition (a / and :op1 (l / like-01 :arg0 (y2 / you) :arg1 (r / route)) :op2 (t / thing :arg1-of (s / say-01 :arg0 (y3 / you) :prep-on (s2 / situation :location (f / finish-01))))))
(c / contrast-01 :arg2 (f / fear-01 :arg0 (s / scientist) :arg1 (p / possible-01 :arg1 (o / open-01 :arg1 (t / tube :mod (l / lava)) :arg1-of (c2 / cause-01 :arg0 (b / be-located-at-91 :arg1 (i / ice :location (o2 / on :op1 (i2 / ice)))))))))
(c / clear-06 :arg1 (l / link-01 :mod (t / this)))
(m / multi-sentence :snt1 (i / it :arg1-of (g / get-01 :arg0 (y / you) :duration (s / several :op1 (t / temporal-quantity :quant (N / N-A) :unit (m2 / month)))) :arg1-of (g2 / get-01 :arg0 (y2 / you) :duration (s2 / several :op1 (t2 / temporal-quantity :quant (N2 / N-A) :unit (m3 / month))))) :snt2 (c / confident-01 :arg1 (p / person :mod (c2 / country :name (n / name :op1 "N-A"))) :mod (e / even)))
(a / and :op1 (f / fly-01 :arg1 (p / person :name (n / name :op1 "Damir")) :destination (c / city :name (n2 / name :op1 "London")) :time (t / then)) :op2 (a2 / and :op1 (d / declare-01 :arg0 (p2 / person :arg0-of (h / have-org-role-91 :arg2 (m / minister :mod (p3 / prime)))) :arg2 (p4 / person :arg0-of (h2 / have-rel-role-91 :arg1 (p5 / person) :arg2 (w / wife)))) :op2 (a3 / and :op1 (d2 / declare-01 :arg0 (p6 / person :arg0-of (h3 / have-rel-role-91 :arg1 (p7 / person) :arg2 (c2 / child))) :arg2 (p8 / person :arg0-of (h4 / have-rel-role-91 :arg1 (p9 / person) :arg2 (c3 / child)))) :op2 (p10 / person :arg0-of (h5 / have-rel-role-91 :arg1 (p11 / person) :arg2 (c4 / child))) :op3 (p12 / person :arg0-of (h6 / have-rel-role-91 :arg1 (p13 / person) :arg2 (c5 / child))))))
(p / possible-01 :arg1 (c / continue-01 :arg0 (s / scientist) :arg1 (w / work-01 :arg0 (s2 / scientist))))
(c / contrast-01 :arg1 (a / and :op1 (a2 / accept-01 :arg1 (t / thing :quant 4) :manner (f / frank)) :op2 (r / reject-01 :arg0 (h / hand :arg1-of (s / simple-02)) :arg1 (o / other))) :arg2 (r2 / reject-01 :arg0 (h2 / hand :part-of (h3 / hand)) :arg1 (o2 / other) :condition (o3 / or :op1 (a3 / accept-01 :arg1 (f2 / fact)) :op2 (r3 / reject-01 :arg1 (v / vote-01)))))
(a / and :op1 (w / work-01 :arg0 (s / she) :duration (s2 / string :op1 (t / temporal-quantity :quant (N / N-A) :unit (y / year)))) :op2 (b / be-located-at-91 :arg1 (s3 / store :quant 2 :arg1-of (i / include-91 :arg2 (s4 / store :quant 2 :location (s5 / section :arg1-of (i2 / include-91 :arg2 (p / place)))))) :arg2 (s6 / store :name (n / name :op1 (f / flagship)) :location (s7 / section :location (l / location :name (n2 / name :op1 "Oxford" :op2 "Street"))))))
(t / thing :arg1-of (q / question-01) :arg1-of (q2 / question-01) :arg1-of (c / cause-01 :arg0 (f / fact :arg1-of (o / obvious-01) :domain (s / see-01 :arg0 (w / we) :arg1 (d / dimensions :quant 3 :mod (s2 / space))))) :time (o2 / once))
(k / know-01 :polarity - :arg0 (i / i) :mod (o / of-course) :mod (o2 / of-course))
(s / speculate-01 :arg0 (o / organization :name (n / name :op1 "Paris" :op2 "SG")) :arg1 (i / interest-01) :mod (a / also))
(d / delay-01 :arg0 (d2 / delay-01 :arg1 (a / aircraft)) :arg1 (f / fly-01 :arg1 (f2 / fly-01 :source (a2 / and :op1 (c / city :name (n / name :op1 "Dubai")) :op2 (c2 / company :name (n2 / name :op1 "Qantas") :mod (c3 / company))) :source (c4 / city :name (n3 / name :op1 "Sydney")))) :time (s / subsequent))
(m / multi-sentence :snt1 (f / force-01 :arg1 (p / person :mod (t / this)) :arg2 (c / country :name (n / name :op1 "Scotland"))) :snt2 (a / and :op1 (c2 / choose-01 :arg0 (s / society :mod (c3 / civil)) :arg1 (a2 / and :op1 (s2 / society :mod (c4 / civil)) :op2 (f2 / financier :mod (l / londýnskými))) :time (d / date-entity :decade (N / N-A))) :op2 (f3 / fall-01 :arg1 (g / grimasou) :arg4 (t2 / trapped))))
(s / say-01 :arg0 (p / person :name (n / name :op1 "Peskov")) :arg1 (a / achieve-01 :arg0 (a2 / allusion :arg0 (p2 / person :name (n2 / name :op1 "Putin")) :arg1 (s2 / sovereignty :mod (s3 / state))) :arg1 (a3 / and :op1 (a4 / achieve-01 :arg0 (p3 / person :arg0-of (l / lead-02 :arg1 (c / city) :time (a5 / already))) :arg1 (p4 / person :arg0-of (l2 / lead-02 :arg1 (c2 / city :name (n3 / name :op1 "Kiev")))) :time (a6 / already) :duration (s4 / several :op1 (t / temporal-quantity :quant (N / N-A) :unit (m / month)))) :op2 (c3 / concern-01 :arg0 (a7 / area :mod (r / russian-speaking)) :arg1 (a8 / area :location-of (t2 / threaten-01 :arg1 (a9 / and :op1 (c4 / culture) :op2 (r2 / right :mod (l3 / linguistic)))))))))
(m / multi-sentence :snt1 (l / let-01 :arg0 (p / person :name (n / name :op1 "Defenzíva" :op2 "Sigmy") :arg1-of (i / include-91 :arg2 (p2 / person :mod (o / opava)) :arg3 (m2 / much))) :arg1 (e / except-01 :arg1 (r / raid-01 :mod (m3 / mikul?v)) :arg2 (r2 / raid-01 :quant 11))) :snt2 (c / contrast-01 :arg2 (c2 / cover-01 :arg1 (p3 / person :name (n2 / name :op1 "Reichl") :mod (g / goalie)))))
(a / and :op1 (g / get-05 :arg1 (p / person :quant 18) :arg2 (c / control-01 :arg0 (p2 / person))) :op2 (s / set :arg0 (p3 / person) :arg1 (z / zatá?ky :mod (o / other))) :op3 (c2 / cause-01 :arg1 (s2 / send-01 :arg1 (c3 / car :mod (b / both)) :arg2 (r / reimbursement))))
(l / look-02 :arg0 (h / hose :location (l2 / location :name (n / name :op1 "Afar"))) :arg1 (l3 / line :arg1-of (t / thin-03) :arg1-of (t2 / thin-03)) :mod (s / still))
(a / and :op1 (s / say-01 :arg0 (m / man :arg1-of (n / name-01 :arg2 (p / person :name (n2 / name :op1 "Chen")))) :arg1 (e / enter-01 :arg0 (m2 / man) :arg1 (b / building :mod (s2 / school) :mod (p2 / primary)))) :op2 (a2 / attack-01 :arg0 (m3 / man) :arg1 (p3 / person :quant (a3 / around :op1 10) :arg1-of (l / local-02))) :time (m4 / morning :mod (o / organization :name (n3 / name :op1 "New" :op2 "China" :op3 "News" :op4 "Agency"))))
(o / operate-01 :arg0 (m / magazine :name (n / name :op1 "N-A") :mod (c / cruise) :location (l / location :name (n2 / name :op1 "Miami"))) :arg1 (s / ship :mod (c2 / cruise) :location (a / and :op1 (t / talk-02 :arg2 (a2 / and :op1 (p / person :location (c3 / continent :name (n3 / name :op1 "North" :op2 "America"))) :op2 (p2 / person :arg0-of (h / have-org-role-91 :arg2 (h2 / head-of-state))) :op3 (p3 / person :arg0-of (h3 / have-org-role-91 :arg2 (h4 / head-of-state))) :op4 (p4 / person :arg0-of (h5 / have-org-role-91 :arg2 (h6 / head-of-state))) :op5 (e / et-cetera))))))
(s / say-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (f / federal) :arg3 (j / judge-01)) :arg0-of (h2 / have-org-role-91 :arg1 (f2 / federal) :arg3 (j2 / judge-01))) :arg1 (b / block-01 :arg0 (l / lawyer) :arg1 (l2 / law :location (l3 / location :name (n / name :op1 "Louisiana"))) :duration (t / temporary) :arg1-of (s2 / say-01 :arg0 (l4 / lawyer)) :arg1-of (s3 / say-01 :arg0 (l5 / lawyer)) :arg1-of (s4 / say-01 :arg0 (l6 / lawyer)) :arg1-of (s5 / say-01 :arg0 (l7 / lawyer) :mod (p2 / probable) :location (s6 / state))))
(m / multi-sentence :snt1 (c / continue-01 :arg0 (p / person :name (n / name :op1 "Stewart"))) :snt2 (i / instead-of-91 :arg2 (w / withdraw-01 :arg1 (p2 / person))))
(d / differ-02 :arg1 (i / it) :mod (s / such) :arg1-of (c / cause-01 :arg0 (a / amr-unknown)))
(h / have-rel-role-91 :arg0 (p / person :mod (c / country :name (n / name :op1 "N-A"))) :arg1 (c2 / country :name (n2 / name :op1 "N-A")) :arg2 (f / friend :mod (g / good)) :time (s / still) :arg1-of (c3 / cause-01 :arg0 (m / marry-01 :arg1 (p2 / person) :arg2 (t / temporal-quantity :quant (N / N-A) :unit (y / year)))))
(a / and :op1 (g / go-02 :arg0 (a2 / and :op1 (p / person :name (n / name :op1 "Seymour") :arg0-of (h / have-rel-role-91 :arg1 (i / i) :arg2 (b / brother :mod (o / old :degree (m / more))))) :op2 (p2 / person :arg0-of (h2 / have-rel-role-91 :arg1 (i2 / i) :arg2 (b2 / brother :mod (o2 / old))))) :arg4 (u / under :op1 (p3 / person :arg0-of (h3 / have-rel-role-91 :arg1 (i3 / i) :arg2 (c / child)))) :time (a3 / already)) :op2 (d / discuss-01 :arg0 (a4 / and) :arg1 (m2 / matter :example (o3 / or :op1 (b3 / beer :consist-of (b4 / beer)) :op2 (w / woe :poss (p4 / pass-01 :location (c2 / cricket)))))))
(s / say-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg2 (c / commissioner))) :arg1 (f / find-01 :polarity - :arg0 (w / we) :arg1 (m / money :mod (a / any)) :beneficiary (h2 / he)) :arg1-of (s2 / say-01 :arg0 (p2 / person :arg0-of (h3 / have-org-role-91 :arg2 (c2 / commissioner)))))
(a / and :op1 (b / begin-01 :arg0 (c / company :name (n / name :op1 "Abbott")) :arg1 (m / meet-03 :arg0 (c2 / company) :arg1 (s / sisters :source (p / person :name (n2 / name :op1 "MacMillan") :mod (c3 / charity))))) :op2 (t / tell-01 :arg0 (p2 / person :quant 1) :arg1 (c4 / contact-01 :arg0 (p3 / person) :arg1 (l / lawyer)) :arg2 (p4 / person)))
(b / buy-01 :arg0 (c / company :arg0-of (w / win-01)) :arg1 (r / rate-entity-91 :arg1 1000 :arg2 (t / temporal-quantity :quant (N / N-A) :unit (y / year))) :time (t2 / then))
(r / represent-01 :arg0 (a / and :op1 (c / company) :op2 (l / location :name (n / name :op1 "D.C."))) :arg1 (e / estate :mod (r2 / real) :arg1-of (i / include-91 :arg2 (t / thing :arg1-of (t2 / tax-01 :arg3 (a2 / and :op1 (s / state) :op2 (t3 / tax-01 :arg1-of (l2 / local-02)))) :quant (a3 / almost :op1 (1 / 1/2))))))
(p / passes :domain (p2 / passes :mod (d / day :arg1-of (s / single-02))) :location (t / tragedy))
(b / block-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg3 (j / judge-01))) :arg1 (l / law :arg0-of (c / close-01 :arg1 (k / kliniks :quant (a / all) :location (l2 / location :name (n / name :op1 "Louisiana"))) :arg1-of (p2 / possible-01))) :duration (t / temporary))
(t / think-01 :polarity - :arg0 (i / i) :arg1 (d / differ-02 :mod (s / such)) :arg1-of (i2 / instead-of-91 :arg2 (d2 / depend-01 :arg0 (i3 / it) :arg1 (w / we) :manner (a / amr-unknown) :prep-with (i4 / it))))
(a / and :op1 (h / have-03 :arg0 (u / universe :quant 3 :arg1-of (i / include-91 :arg2 (- / -lrb- :name (n / name :op1 (s / spatial) :op2 (d / dimensions) :op3 (d2 / dimensions) :op4 (d3 / dimensions) :op5 (d4 / dimensions) :op6 (d5 / dimensions) :op7 (d6 / dimensions))))) :arg1 (-2 / -rrb- :quant 3 :mod (o / only))) :op2 (w / while :arg0 (u2 / universe) :arg1 (d7 / dimension :quant (l / large) :mod (o2 / only))))
(p / passes :location (w / world-region :name (n / name :op1 "East")) :domain (p2 / passes :location (w2 / world-region :name (n2 / name :op1 "East"))) :manner (d / differ-02))
(i / important :domain (t / this) :time (s / shoot :arg0 (y / you) :arg1 (c / camera :mod (e / email))) :mod (e2 / especially) :arg1-of (m / mean-01 :arg2 (h / have-03 :arg0 (y2 / you) :arg1 (l / lens :arg1-of (s2 / strong-02) :arg1-of (m2 / mean-01 :arg2 (h2 / have-03 :arg0 (y3 / you) :arg1 (t2 / thing :arg2-of (t3 / tattoo-01 :arg1 (f / frame :part-of (p / photo)))) :condition (w / want-01 :arg0 (y4 / you) :arg1 (f2 / fill :arg0 (y5 / you) :arg1 (f3 / frame :mod (p2 / photo))) :condition (w2 / want-01 :arg0 (y6 / you) :arg1 (f4 / fill :arg0 (y7 / you) :arg1 (f5 / frame :mod (p3 / photo)))))))))))
(c / continue-01 :arg0 (t / try-02) :arg1 (c2 / court :mod (h / hradeckého)) :arg3 (c3 / court :mod (h2 / hradeckého)) :location (t2 / tuesday :arg1 (p / person :arg1-of (e / expert-01 :arg2 (j / judiciary)))))
(h / have-concession-91 :arg1 (d / difficult :domain (f / find-01 :arg1 (j / job :mod (n / new))) :arg1-of (i / increase-01) :arg1-of (c / cause-01 :arg0 (p / possible-01 :polarity - :arg1 (r / receive-01 :arg0 (a / absence :mod (n2 / neomluvená)) :arg1 (c2 / consequence :arg1-of (s / same-01 :arg2 (p2 / possible-01 :polarity - :arg1 (r2 / receive-01)))))))) :arg2 (h2 / have-03 :polarity - :arg0 (a2 / absence :mod (n3 / neomluvená)) :arg1 (c3 / consequence :arg1-of (s2 / same-01))))
(c / condemn-01 :arg1 (i / image :mod (h / humorous) :poss (p / person :name (n / name :op1 "Rosemary" :op2 "Lehmbergové") :arg0-of (h2 / have-org-role-91 :arg1 (r / research-institute :name (n2 / name :op1 "N-A") :mod (s / state)) :arg2 (t / travis)))) :arg2 (d / drive-01 :arg0 (p2 / person) :location (d2 / drunkenness)) :time (d3 / date-entity :month 4 :year 2013))
(c / cup)
(h / have-concession-91 :arg2 (a / and :op1 (c / concrete :domain (i / it)) :op2 (a2 / accept-01 :arg1 (i2 / it) :degree (q / quite))))
(a / apply-02 :arg1 (p / prohibit-01 :arg1 (g / gambling)) :arg2 (o / organization :name (n / name :op1 "Prague") :arg0-of (e / exemplify-01)) :time (t / time :time (c / current)))
(m / multi-sentence :snt1 (r / return-01 :arg1 (p / person :arg0-of (h / have-rel-role-91 :arg1 (c / child :mod (i / israeli) :arg1-of (n / near-02 :arg2 (c2 / country-region :name (n2 / name :op1 "Gaza" :op2 "Strip")))) :arg2 (c3 / child))) :arg4 (s / school) :time (a / after :op1 (s2 / spend-02 :arg0 (p2 / person) :arg1 (s3 / spend-02 :arg0 (p3 / person) :arg1 (s4 / spend-02 :arg0 (p4 / person) :arg1 (s5 / summer :location (s6 / shelters :mod (b / bomb))) :arg2 (c4 / child))))) :time (a2 / after :op1 (s7 / spend-02 :arg0 (p5 / person) :arg1 (s8 / spend-02 :arg0 (p6 / person) :arg1 (s9 / spend-02 :arg0 (p7 / person) :arg1 (s10 / summer :location (s11 / shelters :mod (b2 / bomb)))))))) :snt2 (c5 / contrast-01 :arg2 (r2 / remain-01 :arg1 (t / territory :arg1-of (r3 / remain-01 :arg3 (c6 / close-01))) :arg3 (c7 / close-01) :mod (s12 / still))))
(d / depend-01 :arg0 (i / it) :time (n / now))
(p / precipitated :arg0 (i / it) :arg1 (a / and :op1 (e / effort :mod (c / civilian) :mod (h / huge)) :op2 (e2 / effort :mod (m / military) :purpose (f / fortified :arg1 (p2 / person :quant (a2 / about :op1 500) :arg1-of (l / lie-07 :arg2 (b / between :op1 (p3 / person :arg0-of (i2 / inhabit-01)) :op2 (p4 / person :arg0-of (h2 / have-org-role-91 :arg2 (h3 / head-of-state)))) :arg1-of (l2 / lie-07 :arg2 (b2 / between :op1 (l3 / location :name (n / name :op1 "Novoazovskem"))))))))))
(m / multi-sentence :snt1 (h / have-03 :arg0 (w / we) :arg1 (p / person :arg0-of (h2 / have-rel-role-91 :arg1 (w2 / we) :arg2 (s / sister))) :time (t / then)) :snt2 (c / contrast-01 :arg1 (p2 / possible-01 :arg1 (s2 / stop-01 :arg0 (y / you) :arg1 (l / laughing))) :arg2 (h3 / have-03 :arg0 (i / i) :arg1 (l2 / laughing) :arg1-of (q / quick-02))))
(a / and :op1 (e / erased :arg1 (t / thing) :time (l / late :degree (m / more))) :op2 (p / publish-01 :arg0 (p2 / person :quant 1 :mod (a2 / another) :arg0-of (d / distanced :arg1 (p3 / person) :arg2 (p4 / person) :time (p5 / previous))) :arg1 (p6 / person)))
(t / think-01 :arg0 (i / i) :arg1 (s / something :mod (j / just) :prep-in (r / report-01 :arg1 (o / or :op1 (n / nudí) :op2 (d / do-02 :arg1 (s2 / something :mod (e / else)))))))
(s / say-01 :arg0 (p / person :name (n / name :op1 "Susan" :op2 "Jordan") :arg0-of (h / have-org-role-91 :arg1 (o / organization :name (n2 / name :op1 "QIMR" :op2 "Berghofer" :op3 "Medical" :op4 "Research" :op5 "Institute")) :arg2 (p2 / person :arg0-of (m / manage-01 :arg1 (r / research-01))))) :arg1 (l / likely-01 :arg1 (d / die-01 :arg1 (w / woman :location (a / and :op1 (a2 / area :location (r2 / rural)) :op2 (a3 / area :mod (r3 / remote) :part-of (s2 / state)))) :degree (m2 / more :quant (a4 / about :op1 (p3 / percentage-entity :value (N / N-A)))) :time (s3 / study-01 :arg0 (w2 / woman) :location (a5 / area :mod (u / urban))))))
(f / find-02 :arg0 (w / we) :arg1 (a / amaze-01 :arg0 (p / person :mod (y / young) :arg0-of (e / examine-01 :arg1 (m / misfortune))) :arg1 (p2 / person :mod (y2 / young) :arg0-of (e2 / examine-01 :arg1 (m2 / misfortune))) :concession (c / continue-01 :arg0 (t / terrorist) :arg1 (l / live-01 :arg0 (t2 / terrorist)))))
(w / walk-01 :arg0 (i / it) :destination (c / church :mod (j / ji?í :mod (w2 / well))) :mod (s / short))
(m / multi-sentence :snt1 (c / come-01 :arg1 (y / you) :mod (s / still) :mod (s2 / still)) :snt2 (o / or :op1 (m2 / manage-01 :arg0 (y2 / you) :arg1 (i / it)) :op2 (e / enjoy-01 :arg0 (i2 / i) :arg1 (r / run-01 :arg0 (w / we) :arg1 (l / location :name (n / name :op1 "Prague"))))))
(a / and :op1 (s / suffer-01 :polarity - :arg0 (p / person) :mod (r / really)) :op2 (n / need-01 :arg0 (p2 / person) :arg1 (h / help-01) :time (n2 / now)) :arg1-of (s2 / say-01 :arg0 (h2 / he)) :time (y / year :mod (l / last) :time-of (r2 / read-01 :arg0 (h3 / he) :arg1 (l2 / law :arg1-of (r3 / relate-01 :arg2 (m / mesothelioma))) :ord (o / ordinal-entity :value 2))))
(u / understand-01 :arg1 (c / contribute-01 :arg0 (w / weather :mod (s / stormy)) :arg2 (d / delay-01 :arg1 (o / organization :name (n / name :op1 "Virgin" :op2 "Airlines") :source (c2 / city :name (n2 / name :op1 "Melbourne"))))))
(a / ask-02 :arg0 (p / person :name (n / name :op1 "Alois" :op2 "Li?ka") :arg0-of (h / have-org-role-91 :arg2 (c / commander))) :arg1 (a2 / and :op1 (c2 / complete-01 :arg0 (p2 / person) :arg1 (e / equipment)) :op2 (s / send-01 :arg0 (p3 / person) :arg1 (e2 / equipment) :arg2 (f / front))) :arg2 (p4 / person :arg0-of (h2 / have-org-role-91 :arg2 (c3 / commander))) :manner (c4 / constant))
(b / become-01 :arg1 (r / refuse-01 :arg0 (p / person :name (n / name :op1 "Cameron")) :arg1 (d / discuss-01 :arg0 (p2 / person) :arg1 (d2 / depend-01 :polarity - :arg0 (a / and :op1 (p3 / person :arg0-of (h / have-org-role-91 :arg2 (m / minister :mod (p4 / prime)))) :op2 (p5 / person :arg0-of (h2 / have-org-role-91 :arg2 (m2 / minister :mod (p6 / prime))))))) :purpose (m3 / mistake :mod (s / serious))))
(o / offend-01 :polarity - :arg0 (i / it) :arg1 (i2 / i))
(s / say-01 :arg1 (o / obligate-01 :polarity - :arg1 (i / i) :arg2 (a / answer-01 :arg0 (i2 / i) :arg1 (i3 / it))) :arg2 (p / person :name (n / name :op1 "Esme" :op2 "Nussbaumová")))
(s / say-01 :arg0 (p / person :name (n / name :op1 "Stewart")) :arg1 (h / have-03 :arg0 (s2 / service) :arg1 (p2 / page :mod (s3 / security) :poss (s4 / service))) :mod (a / also))
(c / climax :domain (t / this) :mod (t2 / type :mod (t3 / type :mod (t4 / type))) :location (c2 / country :name (n / name :op1 "Britain")))
FAILED_TO_PARSE#Couldn't convert to full AMR graph.
(p / play-11 :arg0 (i / it) :arg2 (c / country :name (n / name :op1 "Russia") :mod (g / great)) :time (t / then))
(h / have-03 :polarity - :arg0 (i / i) :arg1 (i2 / idea :topic (g / gain-02 :arg0 (p / place :mod (n / narrowest)) :arg1 (i3 / importance :poss (c / concept) :mod (t / true)) :time (l / late :degree (m / more)))))
(c / concern-02 :arg0 (t / this) :arg1 (c2 / concern-01 :arg0 (c3 / conflict-01 :arg0 (a / and :op1 (c4 / country :name (n / name :op1 "Israel")) :op2 (o / organization :name (n2 / name :op1 "Hamas"))) :arg1 (z / zone :mod (z2 / zone)) :mod (e / especially))))
(r / reggae :arg0 (j / je :name (n / name :op1 (s / soundtrack) :op2 (j2 / je))) :arg1 (o / optimistic :name (n2 / name :op1 (j3 / je) :op2 (j4 / je) :op3 (j5 / je))))
(b / break-up-08 :arg1 (p / produce-01 :arg1 (w / world)) :arg3 (r / rate-entity-91 :arg1 2000000 :arg2 (t / temporal-quantity :quant (N / N-A) :unit (y / year))))
(a / and :op1 (w / want-01 :arg0 (m / market) :arg1 (p / plan-01 :arg0 (b / bank) :arg1 (b2 / bank) :arg1-of (c / clear-06)) :arg1-of (c2 / cause-01 :arg0 (t / threaten-01 :arg0 (b3 / bank) :arg1 (d / deflation :mod (e / eurozone)) :arg2 (p2 / product-of :op1 0.3 :op2 (p3 / percentage-entity :value (N / N-A)))))))
(t / thing :mod (o / one) :domain (w / watch-01 :arg1 (a / and :op1 (p / person :arg0-of (h / have-rel-role-91 :arg1 (h2 / he) :arg2 (f / friend))) :op2 (p2 / person :arg0-of (h3 / have-rel-role-91 :arg1 (h4 / he) :arg2 (f2 / friend))) :op3 (p3 / person :arg0-of (h5 / have-rel-role-91 :arg1 (h6 / he) :arg2 (f3 / friend))) :op4 (p4 / person :arg0-of (h7 / have-rel-role-91 :arg1 (h8 / he) :arg2 (f4 / friend))) :op5 (t2 / thing :mod (o2 / other)))) :arg1-of (c / cause-01 :arg0 (a2 / and :op1 (p5 / play-02 :arg0 (p6 / person :arg0-of (r / reside-01) :mod (e / evil) :arg0-of (r2 / reside-01)) :arg1 (s / someone :mod (e2 / else))) :op2 (t3 / thing :mod (o3 / other) :domain (g / get-01 :arg0 (s2 / someone :mod (e3 / else)) :arg1 (h9 / hits :mod (t4 / twenty)) :manner (c2 / call-02 :arg1 (d / duty)))))))
(m / multi-sentence :snt1 (c / cause-01 :arg0 (a / age :poss (t / they)) :arg1-of (c2 / cause-01 :arg0 (a2 / age :poss (t2 / they)))) :snt2 (p / person :arg1-of (b / black-05) :domain (p2 / person :arg0-of (s / sing-01) :time (d / date-entity :decade (N / N-A)))))
(m / multi-sentence :snt1 (h / have-03 :arg0 (p / person :arg0-of (l / lucidity :arg1 (p2 / person :name (n / name :op1 "Barry" :op2 "Levison") :arg1-of (o / oscar-winning :arg0 (p3 / person :name (n2 / name :op1 "Philip" :op2 "Roth"))))) :arg0-of (h2 / have-org-role-91 :arg2 (o2 / oscar-winning))) :arg1 (p4 / person :arg0-of (h3 / have-org-role-91 :arg2 (o3 / oscar-winning)) :arg0-of (h4 / have-org-role-91 :arg2 (o4 / oscar-winning)))) :snt2 (h5 / have-03 :arg0 (p5 / person :name (n3 / name :op1 "Pacino") :arg1-of (c / close-10 :arg2 (p6 / person))) :arg1 (a / and :op1 (e / end-01 :arg1 (g / glory :poss (g2 / glory))) :op2 (l2 / live-01 :arg0 (p7 / person) :arg1-of (p8 / personal-02)))))
(m / multi-sentence :snt1 (c / contrast-01 :arg1 (t / tire-01 :arg1 (h / he)) :arg2 (w / weak-02 :arg1 (h2 / he) :mod (a / also) :arg1-of (c2 / cause-01 :arg0 (s / strong-02 :polarity - :arg1 (i / it) :time (e / ever)) :mod (a2 / also)))) :snt2 (c3 / complains :arg1 (e2 / everything) :manner (c4 / constant) :mod (j / just)))
FAILED_TO_PARSE#Not concept after open bracket.
(i / infer-01 :arg1 (r / recommend-01 :arg1 (l / leave-11 :arg0 (i2 / it))))
(a / and :op1 (t / tip-05 :arg1 (t2 / thing :manner-of (c / cope-01 :arg1 (s / situation :arg1-of (c2 / change-01))))) :op2 (e / enjoy-01 :mode (i / imperative) :arg0 (y / you) :arg1 (s2 / sleep-01 :time (n / night :mod (g / good)))) :arg2-of (f / fortunate-01))
(a / and :op1 (c / class :mode (i / interrogative)) :op2 (r / resemble-01 :arg2 (c2 / class)))
(a / and :op2 (b / be-temporally-at-91 :arg1 (i / it) :arg2 (b2 / before :op1 (n / now) :quant (f / few :op1 (t / temporal-quantity :quant (N / N-A) :unit (y / year))) :mod (o / only))))
(h / have-03 :polarity - :arg0 (i / i) :arg1 (s / someone :location (p / place :poss (y / you))) :purpose (a / and :op1 (a2 / apologize-01 :arg0 (s2 / someone) :arg1 (t / that) :time (p2 / past)) :op2 (u / understand-01 :arg0 (s3 / someone) :arg1 (p3 / presence :purpose (t2 / talk-01 :arg0 (y2 / you) :arg1 (a3 / and :op1 (' / '' :arg1 (w / we)) :op2 ('2 / '' :arg0 (w2 / we) :arg1 (w3 / we)) :op3 ('3 / '' :arg0 (y3 / you) :arg1 (t3 / they))))))))
(c / contrast-01 :arg1 (k / know-01 :arg0 (i / i) :arg1 (w / want-01 :polarity - :arg0 (y / you) :arg1 (r / remember-01 :arg0 (y2 / you)))) :arg2 (a / and :op1 (c2 / close-10 :arg1 (h / he) :arg2 (g / gym) :degree (v / very)) :op2 (g2 / go-02 :arg0 (h2 / he) :arg4 (g3 / gym)) :op3 (l / lit :arg1 (h3 / he))))
(a / and :op2 (a2 / anger-01 :arg0 (g / good :domain (p / person :mod (t / that) :arg0-of (a3 / anger-01 :arg1 (p2 / person :name (n / name :op1 "Vladimir")) :degree (p3 / pretty :mod (t2 / too))))) :arg1 (a4 / and :op1 (p4 / person :quant 45) :op2 (p5 / person :mod (b / backside)))))
(j / justify-01 :arg0 (y / you) :arg1 (c / cooperate-01 :arg0 (y2 / you) :arg1 (b / b?lo?ka)))
(p / precipitated :arg0 (t / this) :arg1 (a / and :op1 (e / effort :mod (c / civilian) :mod (h / huge)) :op2 (e2 / effort :mod (m / military) :purpose (f / fortified :arg1 (p2 / port :location (l / location :name (n / name :op1 "Mariupol")))))) :arg2 (p3 / person :arg0-of (i / inhabit-01) :quant (a2 / about :op1 500) :arg1-of (l2 / lie-07 :arg2 (b / between :op1 (s / sea :name (n2 / name :op1 "N-A")) :op2 (e3 / entrance :location (c2 / country-region :name (n3 / name :op1 "N-A")))))))
(b / be-located-at-91 :arg1 (e / event :location (p / place :mod (o / other))) :arg2 (w / watch-01 :arg1 (e2 / event :location (w2 / world))) :time (n / now))
(p / play-02 :arg0 (r / role :mod (a / amr-unknown)) :arg1 (t / thing :arg1-of (d / decide-01 :arg0 (f / family))))
(a / and :op1 (n / number :quant-of (d / die-01 :arg1 (p / person :arg1-of (d2 / die-01)))) :op2 (d3 / die-01 :arg1 (n2 / number :quant-of (p2 / person :arg1-of (d4 / die-01 :time (f / future :poss (c / country :name (n3 / name :op1 "UK"))))))) :time (f2 / future))
(a / and :op1 (o / obligate-01 :arg1 (i / it) :arg2 (c / consistent-01 :arg1 (i2 / it) :arg2 (p / party :quant (a2 / all)) :manner (p2 / particular))) :op2 (d / depend-01 :arg0 (i3 / it) :arg1 (p3 / position :poss (l / location :name (n / name :op1 "Chelsea"))) :condition (o2 / or :op1 (d2 / deal-01 :arg2 (c2 / club) :mod (a3 / any)) :op2 (d3 / deal-01 :polarity - :arg2 (c3 / club)))))
(t / talk-01 :arg0 (w / we) :arg1 (p / person :arg0-of (t2 / think-01 :arg1 (i / integer :domain (a / and :op1 (p2 / person :arg0-of (h / have-org-role-91 :arg2 (h2 / head-of-state))) :op2 (p3 / person :arg0-of (h3 / have-org-role-91 :arg2 (h4 / head-of-state))) :op3 (p4 / person :arg0-of (h5 / have-org-role-91 :arg2 (h6 / head-of-state))) :op4 (p5 / person :arg0-of (h7 / have-org-role-91 :arg2 (h8 / head-of-state))) :op5 (p6 / person :arg0-of (h9 / have-org-role-91 :arg2 (h10 / head-of-state))))))))
(a / and :op1 (a2 / accuse-01 :arg0 (p / person :name (n / name :op1 "George" :op2 "Webster")) :arg1 (p2 / person) :arg2 (r / rape-01 :location (h / hotel)) :location (h2 / hotel :location (p3 / person :name (n2 / name :op1 "Nairn")))) :op2 (p4 / pitlochry :arg0 (p5 / person)))
(d / difficult :degree (v / very) :domain (i / it))
(a / and :op1 (r / rise-01 :arg1 (t / thing :arg1-of (t2 / tax-01) :arg1-of (b / burden-01 :arg2 (t3 / tax))) :arg2 (r2 / rate-entity-91 :arg1 (p / percentage-entity :value (N / N-A)) :arg2 (t4 / temporal-quantity :quant (N2 / N-A) :unit (y / year))) :arg4 (m / monetary-quantity :quant 671 :unit (d / dollar) :arg1-of (c / compare-01 :arg2 (p2 / product-of :op1 (p3 / percentage-entity :value (N3 / N-A)) :op2 (t5 / temporal-quantity :quant (N4 / N-A) :unit (y2 / year)))))) :op2 (g / grow-01 :arg1 (y3 / year :mod (c2 / consecutive)) :arg3 (t6 / temporal-quantity :quant (N5 / N-A) :unit (y4 / year)) :time (r3 / reduce-01 :arg1 (t7 / tax-01))))
(k / knocked :arg0 (p / person :name (n / name :op1 "Gordon" :op2 "Stewart")) :location (l / location :name (n2 / name :op1 "East" :op2 "Neuk" :op3 "Pittenween")) :arg1-of (r / report-01))
FAILED_TO_PARSE#Not concept after open bracket.
(n / nourishing :arg1 (f / fish :location (b / beams) :mod (e / especially)))
(h / have-condition-91 :arg1 (p / prepare-02 :arg2 (m / more-than :op1 40)) :arg2 (l / like-01 :arg0 (y / you)))
(p / possible-01 :arg1 (p2 / person :mod (j / just) :arg0-of (h / have-03 :arg1 (f / foot :mod (b / big :degree (v / very))))))
(c / contrast-01 :arg2 (d / differ-02 :arg1 (m / measure-02 :quant 2 :mod (t / this)) :arg1-of (c2 / clear-06)))
(l / look-01 :arg0 (p / person :name (n / name :op1 "Aida")) :arg1 (p2 / person :arg0-of (h / have-rel-role-91 :arg1 (h2 / he) :arg2 (m / mother))) :manner (d / desperate) :arg1-of (c / cause-01 :arg0 (f / forty :arg1 (p3 / person) :time (n2 / now))))
(t / think-01 :polarity - :arg0 (i / i) :arg1 (w / want-01 :arg0 (i2 / i) :arg1 (g / give-up-07 :arg0 (i3 / i) :arg1 (t2 / thing)) :time (e / ever)) :arg1-of (c / cause-01 :arg0 (s / sit-01 :arg1 (t3 / thing :arg2-of (t4 / tattoo-01 :arg1 (s2 / sit-01 :arg2 (r / room :arg1-of (s3 / same-01 :arg2 (r2 / room :mod (s4 / same)))) :arg2 (d / director)))) :arg2 (d2 / director))))
(c / contrast-01 :arg2 (c2 / compare-01 :arg1 (p / product-of :op1 (l / less-than :op1 1000) :op2 (m / m3 :quant (3 / 300-400) :mod (o / only))) :arg2 (t / thing :arg1-of (e / estimate-01) :mod (o2 / original)) :compared-to (e2 / estimate-01 :mod (o3 / original))))
(t / take-10 :arg0 (a / and :op1 (m / match-03 :arg0 (i / it)) :op2 (r / realize-01 :arg0 (i2 / it) :arg1 (t2 / thing :domain (l / league)))) :arg1 (i3 / it))
(c / contrast-01 :arg1 (p / point :mod (o / of-course :mod (o2 / of-course))) :arg2 (b / belong-01 :arg0 (i / i) :arg1 (n / need-01 :arg1 (f / family)) :mod (o3 / of-course)) :mod (o4 / of-course))
(a / adapt-01 :arg1 (p / person :arg0-of (h / have-rel-role-91 :arg1 (c / child) :arg2 (c2 / child))) :arg2 (a2 / and :op1 (p2 / person :arg0-of (h2 / have-rel-role-91 :arg1 (c3 / child) :arg2 (c4 / child))) :op2 (p3 / person :arg0-of (t / teach-01)) :op3 (p4 / person :arg0-of (t2 / teach-01)) :op4 (p5 / person :arg0-of (t3 / teach-01)) :op5 (p6 / person :arg0-of (t4 / teach-01))) :time (d / day :ord (o / ordinal-entity :value 1) :part-of (s / school)) :mod (t5 / tradition))
(c / contrast-01 :arg1 (t / try-01 :arg0 (i / i) :arg1 (p / pusu :arg0 (i2 / i))) :arg2 (r / realize-01 :arg0 (i3 / i) :arg1 (e / event :mod (s / something))))
(h / have-03 :arg0 (p / person :arg0-of (h2 / have-rel-role-91 :arg1 (p2 / person :name (n / name :op1 "Henry")) :arg2 (m / mother))) :arg1 (c / cold))
(c / contrast-01 :arg2 (a / and :op1 (h / have-03 :arg0 (w / we) :arg1 (m / match-03)) :op2 (f / filmed :arg1 (i / it)) :op3 (d / disassemble :arg1 (i2 / it))))
(s / say-01 :arg0 (p / person :name (n / name :op1 "Morgan")) :arg1 (s2 / say-01 :arg0 (p2 / person) :arg1 (h / harmful-02 :arg0 (p3 / person :arg0-of (h2 / harmful-02 :arg1 (a / asbestos)) :quant (m / multiple :op1 1898)))))
(l / last-01 :arg1 (y / year :mod (l2 / longest)) :arg2 (t / temporal-quantity :quant (N / N-A) :unit (m / month)))
(c / contrast-01 :arg2 (p / possible-01 :arg1 (t / tell-01 :arg0 (p2 / person) :arg1 (s / story) :arg2 (p3 / person))))
(l / limit-01 :arg0 (w / we))
(a / and :op1 (c / consider-01 :arg0 (s / separatist) :arg1 (m / man :mod (t / this) :prep-as (m2 / mercenary :mod (l / lease)))) :op2 (s2 / say-01 :arg0 (s3 / separatist) :arg1 (n / nothing)))
(c / concern-01 :mod (t / this) :topic (c2 / conflict-01 :arg0 (a / and :op1 (c3 / country :name (n / name :op1 "Israel")) :op2 (o / organization :name (n2 / name :op1 "Hamas"))) :location (c4 / country-region :name (n3 / name :op1 "Gaza" :op2 "Strip"))) :mod (p / particular))
(f / find-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (c / company :name (n / name :op1 "BBC")) :arg2 (b / boss))) :arg1 (t / time :arg1-of (h2 / hard-04)) :arg1-of (p2 / possible-01))
(a / and :op1 (h / have-03 :arg0 (p / person :arg0-of (r / research-01)) :arg1 (r2 / record :mod (m / medicine) :mod (m2 / more-than :op1 (b / between :op1 (t / temporal-quantity :quant (N / N-A) :unit (y / year)) :op2 (t2 / temporal-quantity :quant (N2 / N-A) :unit (y2 / year)))))) :op2 (f / find-01 :arg0 (p2 / person) :arg1 (t3 / temporal-quantity :quant (N3 / N-A) :unit (y3 / year) :mod (o / only) :time (a2 / after :op1 (l / live-01 :arg0 (p3 / person))))))
(i / increase-01 :arg0 (p / profit :mod (u / ultra)) :arg1 (r / rate-entity-91 :arg1 (p2 / percentage-entity :value (N / N-A)) :arg2 (v / volume-quantity :quant (N2 / N-A) :unit (g / gallon))) :arg4 (m / monetary-quantity :quant 380 :unit (y / yuan :mod (r2 / renminbi))) :arg4 (m2 / monetary-quantity :quant 380 :unit (y2 / yuan :mod (r3 / renminbi))))
(d / day :location (c / city :name (n / name :op1 "Berlin")))
(a / and :op1 (t / topic :mod (m / main) :domain (i / it)) :op2 (u / upset-01 :arg1 (e / everyone)))
(a / and :op1 (r / return-01 :arg1 (h / honza :mod (n / next)) :arg4 (p / pentatonice)) :op2 (t / try-01 :arg0 (y / you) :arg1 (p2 / put-01 :arg0 (y2 / you) :arg1 (i / it) :arg2 (t2 / together) :accompanier (s / state :arg0-of (h2 / have-org-role-91 :arg2 (m / member))))))
(o / obligate-01 :arg1 (w / we) :arg2 (e / examine-01 :arg0 (w2 / we) :arg1 (h / hose :arg1 (r / resolution :mod (g / good :degree (m / more)) :arg1-of (s / significant-02)))) :purpose (r2 / realize-02 :arg0 (w3 / we) :arg1 (e2 / exist-01 :arg1 (d / dimension :mod (c / circular)))))
(s / song :mod (s2 / silly :mod (j / just)) :domain (i / it))
(d / difficult :domain (s / snacking :arg1 (s2 / she)))
(h / have-03 :polarity - :arg0 (w / we) :arg1 (b / bias :mod (t / this)) :location (w2 / workplace))
(m / multi-sentence :snt1 (s / skru :quant 3 :mod (j / just) :domain (s2 / she)) :snt2 (a / and :op1 (s3 / svérázný :arg1 (p / person :quant 3)) :op2 (s4 / say-01 :arg0 (i / i) :arg1 (b / be-located-at-91 :arg1 (a2 / all) :arg2 (c / cottage)))))
(a / and :op1 (c / consider-01 :arg0 (a2 / and :op1 (p / person :arg0-of (h / have-org-role-91 :arg1 (o / organization :name (n / name :op1 "Christian" :op2 "Gospels")) :arg2 (m / member :mod (v / vice)))) :op2 (p2 / person :arg0-of (h2 / have-org-role-91 :arg1 (o2 / organization) :arg3 (q / quran))) :op3 (p3 / person :arg0-of (h3 / have-org-role-91 :arg1 (o3 / organization) :arg3 (q2 / quran))) :op4 (p4 / person :arg0-of (h4 / have-org-role-91 :arg1 (o4 / organization) :arg3 (q3 / quran))) :op5 (p5 / person :arg0-of (h5 / have-org-role-91 :arg1 (o5 / organization) :arg3 (q4 / quran))) :op6 (p6 / person :arg0-of (h6 / have-org-role-91 :arg1 (o6 / organization) :arg3 (q5 / quran))) :op6 (p7 / person :arg0-of (h7 / have-org-role-91 :arg1 (o7 / organization) :arg3 (q6 / quran))) :op6 (p8 / person :arg0-of (h8 / have-org-role-91 :arg1 (o8 / organization) :arg3 (q7 / quran))) :op6 (p9 / person :arg0-of (h9 / have-org-role-91 :arg1 (o9 / organization) :arg3 (q8 / quran))) :op6 (p10 / person :arg0-of (h10 / have-org-role-91 :arg1 (o10 / organization) :arg3 (q9 / quran))) :op6 (p11 / person :arg0-of (h11 / have-org-role-91 :arg1 (o11 / organization) :arg3 (q10 / quran))) :op6 (p12 / person :arg0-of (h12 / have-org-role-91 :arg1 (o12 / organization) :arg3 (q11 / quran))) :op6 (p13 / person :arg0-of (h13 / have-org-role-91 :arg1 (o13 / organization) :arg3 (q12 / quran))) :op6 (p14 / person :arg0-of (h14 / have-org-role-91 :arg1 (o14 / organization) :arg3 (q13 / quran))) :op6 (p15 / person :arg0-of (h15 / have-org-role-91 :arg1 (o15 / organization) :arg3 (q14 / quran))) :op6 (p16 / person :arg0-of (h16 / have-org-role-91 :arg1 (o16 / organization) :arg3 (b / bhagavad-gita))) :op6 (p17 / person :arg0-of (h17 / have-org-role-91 :arg1 (o17 / organization) :arg3 (b2 / bhagavad-gita))) :op6 (p18 / person :arg0-of (h18 / have-org-role-91 :arg1 (o18 / organization) :arg3 (b3 / bhagavad-gita))) :op6 (p19 / person :arg0-of (h19 / have-org-role-91 :arg1 (o19 / organization) :arg3 (b4 / bhagavad-gita))) :op6 (p20 / person :arg0-of (h20 / have-org-role-91 :arg1 (o20 / organization) :arg3 (l / lead-02 :arg0 (p21 / person)))) :op6 (p22 / person :arg0-of (h21 / have-org-role-91 :arg1 (o21 / organization) :arg3 (l2 / lead-02 :arg0 (p23 / person)))) :op6 (p24 / person :arg0-of (h22 / have-org-role-91 :arg1 (o22 / organization) :arg3 (l3 / lead-02 :arg0 (p25 / person)))) :op6 (p26 / person :arg0-of (h23 / have-org-role-91 :arg1 (e / each :arg1-of (i / include-91 :arg2 (p27 / person))) :arg3 (e2 / each))))) :arg1 (p28 / person :mod (o23 / other)))
FAILED_TO_PARSE#Not concept after open bracket.
(c / contrast-01 :arg1 (b / be-located-at-91 :arg1 (p / person :name (n / name :op1 "Joan" :op2 "Rivers")) :arg2 (c2 / coma) :duration (t / temporal-quantity :quant (N / N-A) :unit (d / day)) :time (b2 / bring-01 :arg1 (p2 / person) :arg2 (h / hospital) :location (p3 / peninsula :name (n2 / name :op1 "N-A")))) :arg2 (e / express-01 :arg0 (p4 / person :arg0-of (h2 / have-rel-role-91 :arg1 (p5 / person) :arg2 (d2 / daughter))) :arg1 (h3 / hopeful-03 :polarity - :arg0 (p6 / person) :arg1 (c3 / consistent :domain (c4 / comedian :mod (j / jednaosmdesátiletá)))) :time (n3 / now)))
(i / illustration)
(c / cause-01 :arg0 (f / fact :domain (c2 / car :arg1-of (b / busied :arg0 (w / we) :arg2 (w2 / we) :duration (m / more-than :op1 (t / temporal-quantity :quant (1 / 1/2) :unit (y / year)))))) :arg1 (c3 / cause-01 :arg0 (c4 / car) :arg1 (b2 / be-located-at-91 :arg1 (w3 / we) :arg2 (u / under :op1 (l / level :quant (s / some))))))
(a / and :op1 (w / watch-01 :arg0 (p / person :name (n / name :op1 "Stephen" :op2 "Fairclough")) :arg1 (s / situation) :time (w2 / weekend)) :op2 (s2 / speak-01 :arg0 (p2 / person) :arg2 (p3 / person :arg0-of (p4 / protest-01) :arg0-of (t / travel-01 :arg4 (c / country :name (n2 / name :op1 "Belgium"))))))
(c / create-01 :arg0 (l / law) :arg1 (e / envelopes :quant 350 :mod (f / finance) :arg1-of (c2 / cover-01 :arg0 (c3 / company :arg0-of (i / insure-02)) :arg1-of (i2 / intend-01) :time (a / after :op1 (d / date-entity :year 2012 :month 7))) :arg0-of (p / prove-01 :arg1 (s / subject-01 :arg1 (a2 / anyone :arg0-of (p2 / prove-01 :arg1 (s2 / subject-01 :arg1 (p3 / person) :arg2 (a3 / asbestos)))) :arg2 (c4 / court)))))
(i / include-91 :arg1 (p / percentage-entity :value (N / N-A) :arg3-of (i2 / include-91 :arg2 (p2 / person :arg0-of (u / undergo-28 :arg1 (p3 / person) :arg2 (d / die-01 :arg1 (p4 / person)))))) :arg2 (d2 / die-01 :arg1 (p5 / person)) :duration (u2 / up-to :op1 (t / temporal-quantity :quant (N2 / N-A) :unit (m / month))))
(w / want-01 :arg0 (i / i) :arg1 (f / fulfill-01 :arg0 (i2 / i) :arg1 (m / memory :poss (p / person :arg0-of (h / have-rel-role-91 :arg2 (f2 / friend))))))
(k / know-01 :arg0 (h / he) :arg1 (e / expect-01 :arg1 (h2 / he :mod (a / all)) :mod (o / only)))
(a / and :op2 (c / contrast-01 :arg1 (a2 / and :op1 (l / lose-02 :arg0 (i / i) :arg1 (h / head)) :op2 (l2 / lose-02 :arg0 (i2 / i) :arg1 (h2 / head)) :time (a3 / after :op1 (l3 / lose-02 :arg0 (i3 / i) :arg1 (h3 / head)))) :arg2 (a4 / and :op1 (l4 / lose-02 :arg0 (i4 / i) :arg1 (h4 / head)) :op2 (v / view-02 :arg0 (i5 / i) :arg2 (r / route :mod (i6 / interesting :degree (m / more)) :arg1-of (v2 / value-01 :arg2 (t / temporal-quantity :quant (N / N-A) :unit (y / year)))) :manner (g / goal)))))
(a / and :op2 (c / cause-01 :arg1 (p / push-01 :polarity - :arg0 (y / you) :arg1 (d / depart-01) :arg2 (y2 / you))))
(m / multi-sentence :snt1 (c / contrast-01 :arg1 (h / have-03 :arg0 (w / we) :arg1 (f / fear-01 :arg0 (w2 / we) :quant (b / bit))) :arg2 (h2 / have-03 :mode (i / interrogative) :arg0 (w3 / we) :arg1 (f2 / fear-01 :arg0 (w4 / we)))) :snt2 (s / say-01 :mode (i2 / interrogative) :arg0 (a / and :op1 (p / person :name (n / name :op1 "Saad")) :op2 (p2 / person :mod (c2 / country :name (n2 / name :op1 "N-A")) :arg0-of (t / teach-01 :location (s2 / school :arg1-of (l / local-02))))) :arg1 (b2 / bartová :arg0 (w5 / we))))
(l / let-01 :polarity - :arg0 (b / boss :poss (w / wo :mod (s / small) :mod (f / football))) :arg1 (a / and :op1 (p / party :mod (o / other)) :op2 (m / move-01)))
(m / multi-sentence :snt1 (a / and :op1 (a2 / aspect :mod (n / nonperturbative)) :op2 (a3 / aspect :ord (o / ordinal-entity :value 12))) :snt2 (- / -rrb- :mode (e / expressive)))
(c / convince-01 :arg1 (t / they) :arg2 (t2 / this))
(a / and :op1 (s / seeped :arg1 (s2 / seeped :arg1-of (d / die-01 :arg1-of (p / possible-01 :polarity -))) :location (t / tubs)) :op2 (t2 / think-01 :arg0 (t3 / they) :arg1 (a2 / and :op1 (o / overgrown :arg1 (p2 / place :location-of (o2 / own-01 :arg0 (t4 / they) :arg1 (g / garden :polarity -)))) :op2 (r / resembled :arg0 (t5 / they) :arg1 (h / hlávka :mod (h2 / huge) :mod (r2 / resembled)) :manner (w / weed))) :condition (s3 / sign-01 :arg1 (o3 / oslizle :arg1-of (s4 / sign-02 :arg0 (t6 / they) :arg2 (w2 / windows))))))
(w / want-01 :arg0 (w2 / we :quant (a / all)) :arg1 (p / pull-out-02 :arg1 (w3 / we)))
(m / multi-sentence :snt1 (w / wait-01 :arg1 (p / person) :arg2 (f / funeral :arg0 (p2 / person) :arg1 (h / hand :part-of (p3 / person)) :arg2 (h2 / hand :part-of (p4 / person)) :direction (u / up))) :snt2 (c / chanting :mode (i / imperative) :polarity - :arg0 (y / you)))
(m / multi-sentence :snt1 (s / say-01 :mode (i / interrogative) :arg0 (y / you) :arg1 (n / new)) :snt2 (s2 / say-01 :arg0 (i2 / i) :arg1 (n2 / new) :arg2 (r / refer-01 :arg1 (g / government-organization :arg0-of (g2 / govern-01) :mod (r2 / region))) :time (s3 / subsequent)))
(m / multi-sentence :snt1 (a / add-01 :arg0 (w / we) :arg1 (t / that)) :snt2 (a2 / agree-01 :arg0 (w2 / we) :arg1 (t2 / this)))
(h / hold-04 :arg0 (s / school :quant (a / all)) :arg1 (c / ceremony :mod (t / traditional)) :time (d / date-entity :month 1 :day (N / N-A)))
(c / cause-01 :polarity - :arg0 (c2 / capable-01 :arg1 (p / person :arg0-of (h / have-org-role-91 :arg1 (p2 / political-party :name (n / name :op1 "N-A")))) :arg2 (c3 / capable-01 :polarity - :arg1 (p3 / person))) :arg1 (l / lack-01 :arg1 (e / equipment :mod (m / material))))
(s / say-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (g / government-organization :name (n / name :op1 "Defense" :op2 "Ministry") :mod (c / country :name (n2 / name :op1 "DPRK"))) :arg2 (s2 / spokesman))) :arg1 (a / and :op1 (f / fire-01 :arg1 (m / missile) :source (p2 / place :location (n3 / northwest :part-of (c2 / country :name (n4 / name :op1 "DPRK"))))) :op2 (f2 / fly-01 :arg1 (m2 / missile) :destination (r / range :quant (a2 / about :op1 200)))))
(r / reveal-01 :arg0 (t / test-01 :mod (c / country :name (n / name :op1 "N-A")) :quant (s / several)) :arg1 (h / have-03 :arg0 (h2 / he) :arg1 (c2 / cmt)))
(b / begin-01 :arg1 (a / and :op1 (f / follow-02 :arg1 (p / person :name (n / name :op1 "Jesus") :arg1-of (m / mean-01 :arg2 (a2 / and :op1 (d / docéts) :op2 (d2 / docéts) :op3 (e / ebionita)))) :op2 (t / thing :arg1-of (b2 / believe-01) :mod (o / other) :mod (e2 / entire)))) :arg1-of (c / cause-01 :arg0 (a3 / and :op1 (t2 / thing :arg1-of (b3 / believe-01) :mod (g / gnostický)) :op2 (t3 / thing :arg1-of (b4 / believe-01) :mod (o2 / other :mod (e3 / entire))))) :arg1-of (c2 / cause-01 :arg0 (a4 / and :op1 (t4 / thing :arg1-of (b5 / believe-01) :mod (g2 / gnostický)) :op2 (d3 / docéts) :op3 (e4 / ebionita))))
(c / contrast-01 :arg2 (a / amr-unknown :condition (p / play-11 :arg0 (y / you) :arg2 (l / location :name (n / name :op1 "New" :op2 "Jersey")))))
(c / call-01 :arg0 (p / party :mod (k / kbelíkové)) :arg1 (j / jaw :poss (p2 / party)) :arg2 (k2 / kbelíkové))
(s / stop-01 :arg1 (m / motor) :time (a / after :op1 (z / zone :mod (s2 / speed :mod (m2 / maximum)) :arg1-of (l / limit-01 :arg2 (a2 / and :op1 (h / h :quant 70 :location (r / relative-position :op1 (r2 / river :name (n / name :op1 "N-A")) :quant (d / distance-quantity :quant (N / N-A) :unit (k / kilometer)))) :op2 (w / weaponry :quant 125 :name (n2 / name :op1 (/ / /))) :op3 (w2 / weaponry :name (n3 / name :op1 (/2 / /))))))))
(c / contrast-01 :arg2 (k / know-01 :arg0 (i / i) :arg1 (l / location :arg4-of (c2 / contact-01 :arg0 (y / you) :location (l2 / location :name (n / name :op1 "Prague"))) :location-of (a / and :op1 (m / mess-up-02 :arg0 (w / we) :arg1 (c3 / compatriots :poss (y2 / you))) :op2 (p / possible-01 :arg1 (r / rescue-01 :arg0 (w2 / we) :arg1 (h / he)))))))
(s / send-01 :arg1 (t / team :arg0-of (s2 / search-01) :arg2-of (i / include-01 :arg1 (a / and :op1 (t2 / team :arg0-of (r / rescue-01 :arg1 (p / police :arg1-of (l / local-02)))) :op2 (t3 / team :arg0-of (r2 / rescue-01) :arg1-of (l2 / local-02))))) :arg2 (t4 / team :arg0-of (s3 / search-01) :arg2-of (i2 / include-01 :arg1 (a2 / and :op1 (t5 / team :arg0-of (r3 / rescue-01) :arg1-of (l3 / local-02)) :op2 (t6 / team :arg0-of (r4 / rescue-01))))))
(m / move-01 :arg1 (s / speak-01) :arg2 (s2 / space :location (b / between :op1 (w / wing :poss (p / person :mod (w2 / world-region :name (n / name :op1 "N-A")))) :op2 (p2 / person :arg0-of (s3 / show :arg1 (a / and :op1 (o / organization :name (n2 / name :op1 "Cheb" :op2 "Ultralight" :op3 "Club")) :op2 (m2 / mat?jí?ek :mod (l / lud?k)) :op3 (o2 / organizer :mod (a2 / airshow))))))) :time (e / end-01 :arg1 (s4 / speech)))
(b / big :degree (t / too) :domain (l / leg :part-of (y / you)))
(w / write-01 :arg0 (i / i) :arg1 (w2 / write-01 :arg0 (p / person :name (n / name :op1 "Brian" :op2 "Green") :arg0-of (h / have-org-role-91 :arg1 (o / organization :name (n2 / name :op1 "Columbia")) :arg3 (w3 / write-01))) :arg1 (s / shoot-02 :arg1 (p2 / person :quant 1999 :arg0-of (h2 / have-org-role-91 :arg1 (o2 / organization) :arg2 (v / v))) :arg1-of (c / cause-01 :arg0 (b / black :arg1 (p3 / person))))) :mod (u / usual))
(a / and :op1 (d / die-01 :arg1 (b / boy :arg0-of (e / escape-01 :arg1 (r / rain-01)))) :op2 (b2 / believe-01 :arg0 (b3 / boy) :arg1 (d2 / die-01 :arg1 (p / person :arg0-of (h / have-rel-role-91 :arg1 (b4 / boy) :arg2 (m / mother))))))
(b / bail-out-02 :arg1-of (c / close-10 :arg2 (c2 / complain-01 :mod (f / fotografovanému))))
(s / seem-01 :arg1 (p / past :domain (a / and :op1 (p2 / person :name (n / name :op1 "Sarah" :op2 "L") :arg0-of (h / have-org-role-91 :arg1 (o / organization :name (n2 / name :op1 "Sigmy" :op2 "Olomouc" :op3 "Josef") :poss (p3 / person)) :arg2 (p4 / person :arg0-of (h2 / have-rel-role-91 :arg1 (p5 / person) :arg2 (c / child))))) :op2 (p6 / person :arg0-of (h3 / have-rel-role-91 :arg1 (p7 / person) :arg2 (c2 / child)))) :time (w / week :mod (l / last))))
(a / attack-01 :arg1 (p / person :arg1-of (n / neighbor-01 :arg2 (o / one)) :mod (o2 / one)) :degree (f / full :polarity -) :mod (w / wrong))
(h / have-condition-91 :arg1 (a / and :op1 (s / see-01 :arg1 (n / nothing) :location (w / water)) :op2 (s2 / stick-01 :arg1 (w2 / we) :arg2 (b / bottom) :direction (d / down))) :arg2 (s3 / see-01 :arg1 (n2 / nothing)))
(c / contrast-01 :arg1 (f / fear-01 :polarity - :arg0 (i / i) :arg1 (g / go-back-19 :arg1 (i2 / i) :arg2 (g2 / gym))) :arg2 (t / think-01 :polarity - :arg0 (i3 / i) :arg1 (p / person)))
(a / and :op1 (r / receive-01 :arg0 (t / they) :arg1 (a2 / amount :arg1-of (i / include-91 :arg2 (a3 / amount :arg1-of (i2 / include-91 :arg2 (a4 / amount))) :arg3 (p / percentage-entity :value (N / N-A)))) :prep-in (c / case :mod (t2 / this))) :op2 (t3 / treat-01 :arg1 (t4 / they) :arg2 (a5 / about :op1 (m / monetary-quantity :quant 120,000 :unit (p2 / pound)))) :prep-in (c2 / case :mod (t5 / this)))
(p / possible-01 :arg1 (c / cruel :domain (h / he) :mod (c2 / cruel)))
(p / put-01 :arg0 (p2 / person :name (n / name :op1 "Luther" :op2 "Rabinowitz")) :arg1 (f / fingertips :poss (p3 / person)) :arg2 (t / together))
(c / contrast-01 :arg1 (p / possible-01 :polarity - :arg1 (c2 / consider-02 :arg1 (p2 / person :name (n / name :op1 "Janice" :op2 "Allen")) :arg2 (v / victim :arg1-of (t / typical-02) :consist-of (m / mesothelioma)))) :arg2 (w / work-01 :arg0 (p3 / person) :arg1 (p4 / point-out-02 :arg0 (p5 / person) :arg1 (s / story :poss (p6 / person) :arg1-of (r / record-01) :quant (a / all)))))
(h / hard-02 :arg1 (i / imagine-01 :arg1 (s / stir :arg1 (t / twitch :mod (t2 / twitch)) :arg2 (o / organization :name (n / name :op1 "Amazon" :op2 "Instant" :op3 "Video")) :prep-as (p / possible-01 :arg1 (o2 / obligate-01 :arg1 (h2 / he) :arg2 (s2 / swallow :arg0 (h3 / he) :arg1 (p2 / publication :name (n2 / name :op1 "YouTube"))))))))
(r / reiterated :arg0 (w / we) :arg1 (m / mistake-02 :arg0 (w2 / we) :arg1-of (s / same-01) :arg1-of (l / lead-03 :arg2 (e / event :mod (a / amr-unknown)) :condition (e2 / event :mod (i / it)))) :condition (a2 / advise-01 :arg0 (i2 / it) :manner (a3 / advance-01)))
FAILED_TO_PARSE#Not concept after open bracket.
(g / great :domain (w / water))
(m / make-02 :arg0 (i / it) :arg1 (p / person :arg0-of (h / have-rel-role-91 :arg1 (h2 / he) :arg2 (f / father))) :time (a / always) :time (s / suppress-01 :arg0 (i2 / i) :arg1 (j / j :arg1-of (e / emerge :arg2 (m2 / mouth)))))
(s / suspect-01 :arg0 (g / government-organization :arg0-of (g2 / govern-01)) :arg1 (s2 / send-01 :arg1 (t / thing :arg2-of (a / amplify-01)) :arg2 (a2 / account :mod (b / bank)) :time (s3 / still) :time (a3 / after :op1 (d / die-01 :arg1 (o / or :op1 (p / person :arg0-of (h / have-org-role-91 :arg1 (g3 / government-organization :arg0-of (g4 / govern-01)) :arg2 (m / member))) :op2 (p2 / person :arg0-of (r / report-01) :mod (c / company :name (n / name :op1 "BBC"))) :op3 (p3 / person :arg0-of (r2 / report-01)) :op4 (p4 / person :arg0-of (r3 / report-01)) :op5 (p5 / person :arg0-of (r4 / report-01)))))) :arg2 (p6 / person :name (n2 / name :op1 "Wanyama" :op2 "Chebusiri")))
(a / and :op1 (r / recalled :arg0 (p / person :arg0-of (h / have-rel-role-91 :arg1 (h2 / he) :arg2 (w / wife))) :arg1 (p2 / person :quant 1 :arg1-of (i / include-91 :arg2 (p3 / person :arg0-of (s / seek-01 :arg1 (h3 / help-01 :arg0 (p4 / person)))))) :arg2 (p5 / person :arg0-of (s2 / seek-01 :arg1 (h4 / help-01 :arg0 (p6 / person))))) :op2 (o / officer :mod (m / mi6) :arg0-of (l / live-01 :arg1 (c / consequence :arg0-of (c2 / crippled :arg1 (p7 / person))))))
(a / and :op1 (b / big :degree (m / more :degree (m2 / much)) :domain (t / this)) :op2 (s / say-01 :arg0 (i / i) :arg1 (a2 / and :op1 (g / gas :quant (m3 / much :degree (m4 / more))) :op2 (g2 / gas :quant (m5 / much :degree (m6 / more))))))
(a / attacked :arg0 (h / headline :name (n / name :op1 (h2 / headlines) :op2 (h3 / headline))) :arg1 (p / person :name (n2 / name :op1 "Izrael")) :manner (g / gazu))
(p / possible-01 :arg1 (a / and :op1 (h / have-polarity-91 :arg2 -) :op2 (m / more :quant (m2 / much))))
(a / and :op1 (t / thing :arg1-of (r / resemble-01 :arg2 (f / floor :location (f2 / floor)))) :op2 (t2 / thing :arg1-of (r2 / resemble-01 :arg2 (f3 / floor))) :location (o / or :op1 (t3 / talk-02 :arg2 (f4 / floor)) :op2 (p / presence :location (h / home :poss (w / we) :arg1-of (c / contain-01 :arg0 (c2 / commonly))))))
(c / contrast-01 :arg1 (f / forget-01 :arg0 (p / person :arg0-of (a / attack-01 :arg1 (l / labor)) :arg0-of (a2 / attack-01)) :arg1 (t / truth :arg1-of (s / simple-02) :mod (t2 / this))) :arg2 (r / remembers :arg0 (p2 / person) :arg1 (h / history)))
(p / phone-number-entity :value (N / N-A))
(m / match-03 :arg1 (c / country :name (n / name :op1 "Netherlands")) :arg1-of (n2 / nice-01))
(s / say-01 :arg0 (p / person :name (n / name :op1 "Peter" :op2 "Baránek" :op3 "Sillies") :arg0-of (h / have-org-role-91 :arg2 (' / ''))) :arg1 (c / contrast-01 :arg1 (l / let-01 :polarity - :arg0 (w / we) :arg1 (t / thing :arg1-of (s2 / smuggle-01 :arg0 (s3 / she)))) :arg2 (l2 / let-01 :polarity - :arg0 (w2 / we) :arg1 (t2 / thing :arg1-of (s4 / smuggle-01 :arg0 (s5 / she))))))
(c / contrast-01 :arg2 (d / differ-02 :arg1 (m / mezoteliom)))
(c / cause-01 :arg0 (m / make-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg3 (j / judge-01))) :arg1 (t / thing :arg2-of (b / base-02 :arg1 (v / visit-01 :arg0 (p2 / person) :arg1 (a / and :op1 (d / drug) :op2 (c2 / chemical :mod (i / industry)) :op3 (b2 / bag :mod (s / salary :mod (i2 / industry))) :op4 (b3 / bag :mod (s2 / salary :mod (o / other))) :op5 (i3 / item :mod (o2 / other)) :op6 (i4 / item :mod (o3 / other)) :op7 (i5 / item :mod (o4 / other) :arg1-of (r / refer-02 :arg2 (s3 / subject) :arg1-of (p3 / possible-01))))))) :arg1 (p4 / possible-01 :arg1 (c3 / consider-02 :arg1 (a2 / and :op1 (e / equipment :arg1-of (c4 / complete-02)) :op2 (i6 / item :mod (o5 / other))) :arg2 (s4 / subject) :arg1-of (p5 / possible-01)))))
(a / and :op1 (e / expose-01 :arg1 (s / seduced :arg0-of (k / kill-01)) :arg2 (o / or :op1 (c / company :quant 1) :op2 (p / place :quant (m / multiple :op1 1))) :location (o2 / or :op1 (c2 / company :quant 1) :op2 (p2 / place :quant (m2 / multiple :op1 (t / temporal-quantity :quant (N / N-A) :unit (d / decade)))))) :op2 (t2 / turned :arg0 (s2 / seduced) :arg1 (p3 / person :arg0-of (s3 / seek-01 :arg1 (c3 / compensate-01 :arg0 (p4 / person) :arg1 (c4 / compensate-01)))) :arg2 (p5 / problem :mod (h / huge) :domain (p6 / person))))
(s / shone :arg1 (s2 / skin :part-of (s3 / skin :part-of (i / it))) :manner (d / distance-01 :arg1 (s4 / skin)))
(d / demonstrate-01 :arg0 (p / person :mod (c / country :name (n / name :op1 "Germany")) :arg1-of (n2 / neighbor-01 :arg2 (c2 / country :name (n3 / name :op1 "Germany")))) :arg1 (a / aircraft :arg0-of (r / reconstructed :arg1 (o / or :op1 (1 / 18t) :op2 (d2 / dvouplo?ník :quant 3)))))
(a / and :op1 (b / begin-01 :arg0 (p / person :name (n / name :op1 "Stewart")) :arg1 (r / rate-entity-91 :arg1 12 :arg2 (t / temporal-quantity :quant (N / N-A) :unit (y / year))) :time (b2 / begin-01 :arg1 (r2 / race))) :op2 (b3 / be-located-at-91 :arg1 (p2 / person) :arg2 (u / under :op1 4 :mod (e / even))))
(s / say-01 :arg0 (p / person :name (n / name :op1 "Hatteryová")) :arg1 (a / and :op1 (b / be-located-at-91 :arg1 (a2 / and :op1 (p2 / person :quant 1865) :op2 (p3 / person :quant 1890)) :arg2 (p4 / person :quant (a3 / at-least :op1 10000))) :op2 (r / reason :arg0-of (c / cause-01 :arg1 (r2 / rape-01 :arg1 (p5 / person)) :mod (a4 / almost)))))
(r / resemble-01 :arg1 (i / it) :arg2 (t / today :ord (o / ordinal-entity :value 1)) :time (t2 / today))
(k / know-01 :polarity - :arg0 (i / i) :mod (o / of-course) :mod (o2 / of-course))
(a / and :op1 (d / disperse :arg0 (g / group :mod (r / religious-group :name (n / name :op1 "N-A")) :mod (o / other) :prep-as (l / luciferiáni)) :arg1 (g2 / group :mod (o2 / other) :mod (r2 / religious-group :name (n2 / name :op1 "N-A")))) :op2 (d2 / discredited :arg0 (g3 / group) :arg1 (r3 / revisions :mod (o3 / other))))
(a / and :op1 (r / remain-01 :arg1 (p / person :name (n / name :op1 "Henry")) :arg3 (b / brain :part-of (b2 / brain)) :mod (s / still) :time (c / converse-01 :arg0 (w / we) :arg1 (p2 / perform-01 :mod (h / humornými) :mod (i / interrupts)) :arg2 (p3 / perform-01 :arg0 (p4 / person)) :time (e / ever))) :op2 (o / out-06 :arg1 (p5 / person) :arg2 (r2 / role)))
(s / say-01 :arg0 (h / he) :arg1 (c / contrast-01 :arg1 (a / and :op1 (f / fight-01 :arg0 (w / we) :time (f2 / fight-01 :arg0 (w2 / we))) :op2 (r / ride-01 :arg0 (w3 / we) :arg1 (f3 / fucked :quant (a2 / all)))) :arg2 (a3 / and :op1 (f4 / fight-01 :arg0 (w4 / we)) :op2 (r2 / ride-01 :arg0 (w5 / we) :arg1 (f5 / fucked :quant (a4 / all))))) :time (t / today))
(m / multi-sentence :snt1 (t / tell-01 :arg0 (i / i) :arg1 (t2 / truth) :arg2 (y / you)) :snt2 (e / explain-01 :polarity - :arg0 (i2 / i) :arg1 (t3 / thing :arg0-of (c / cause-01))))
(c / come-03 :arg1 (n / news :mod (p / positive) :mod (o / one)) :arg2 (c2 / country :name (n2 / name :op1 "Irish" :op2 "Republic")) :arg1-of (c3 / cause-01 :arg0 (r / rise-01 :arg1 (p2 / pmi :quant 57.3) :arg4 (l / level :arg1-of (h / high-02 :degree (m / most))) :time (s / since :op1 (e / end-01 :arg1 1999 :quant 1999)))))
(d / difficult :domain (j / join-01 :arg0 (i / i) :arg1 (c / center)) :concession-of (h / have-03 :arg0 (i2 / i) :arg1 (i3 / it)))
(p / point :mod (j / just) :mod (p2 / point :mod (j2 / just)))
(e / estimate-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (c / country :name (n / name :op1 "Britain")) :arg2 (p2 / person :arg1-of (e2 / expert-01 :arg2 (h2 / have-org-role-91 :arg0 (p3 / person) :arg2 (p4 / professor))))) :arg0-of (h3 / have-org-role-91 :arg2 (p5 / professor))) :arg1 (e3 / estimate-01 :arg1 (p6 / person :quant 1970) :arg2 (d / die-01 :arg1 (p7 / person :quant (a / about :op1 90))) :mod (g / good :degree (m / most))))
(m / maintain-01 :arg0 (o / organization :name (n / name :op1 "Army" :op2 "LESOTHO" :op3 "Kingdom")) :arg1 (p / plan-01 :polarity - :arg0 (p2 / person :arg0-of (h / have-org-role-91 :arg2 (m2 / minister :mod (p3 / prime)))) :arg1 (r / remain-01 :arg1 (p4 / person :arg0-of (h2 / have-org-role-91 :arg2 (m3 / minister :mod (p5 / prime)))) :location (c / country :name (n2 / name :op1 "South" :op2 "Africa")))))
(c / contrast-01 :arg1 (r / rate :mod (g / grow-01 :arg1 (g2 / grow-01 :location (l / location :name (n / name :op1 "D.C."))))) :arg2 (h / high-02 :arg1 (r2 / rate :mod (g3 / grow-01)) :arg2 (p / product-of :op1 4.3 :op2 4.9) :arg1-of (s / significant-02)))
(l / like-01 :arg0 (i / i) :arg1 (i2 / it) :mod (r / really))
(l / look-02 :arg0 (s / she) :arg1 (u / upset-01 :arg1 (s2 / she) :degree (r / really)))
(s / say-01 :arg0 (a / and :op1 (p / person :arg0-of (c / campaign-01 :arg1 (r / right :poss (w / woman)))) :op2 (p2 / person :arg0-of (h / have-org-role-91 :arg1 (o / organization :name (n / name :op1 "Association" :op2 "of" :op3 "America" :op4 "of" :op5 "Obstetrics" :op6 "and" :op7 "Gynecology")))) :op3 (p3 / person :arg0-of (h2 / have-org-role-91 :arg1 (o2 / organization :name (n2 / name :op1 "American" :op2 "Medical" :op3 "Association")))) :op4 (p4 / person :arg0-of (h3 / have-org-role-91 :arg1 (o3 / organization) :arg3 (c2 / campaign-01)))) :arg1 (n3 / need-01 :arg1 (h4 / have-03 :arg1 (p5 / place :mod (t / this) :arg0-of (p6 / permit-01) :arg1-of (n4 / need-01 :source (p7 / point :mod (m / medicine) :arg1-of (n5 / need-01 :arg3 (v / view-01))))))))
(m / multi-sentence :snt1 (c / cost-01 :arg1 (t / thing :arg1-of (r / report-01)) :arg2 (a / amr-unknown)) :snt2 (a2 / accord-02 :polarity - :arg2 (r2 / rule)))
(a / accuse-01 :arg0 (p / police :location (l / location :name (n / name :op1 "Karrathská"))) :arg1 (m / man :mod (y / young)) :arg2 (d / disobeying :arg0 (m2 / man) :arg1 (c / call-03 :arg0 (m3 / man) :arg1 (h / halt-01 :arg0 (m4 / man) :arg1 (d2 / drive-01 :arg0 (m5 / man))))))
(w / want-01 :arg0 (t / they :quant (a / all)) :arg1 (p / pull-out-02 :arg0 (t2 / they) :arg1 (w2 / we)))
(c / concentrated :arg0 (w / we) :arg1 (c2 / country :name (n / name :op1 "Netherlands")) :time (n2 / now))
(m / multi-sentence :snt1 (t / take-01 :arg0 (i / i) :arg1 (m2 / match-03 :quant 1 :mod (m3 / more))) :snt2 (c / contrast-01 :arg1 (t2 / take-01 :arg0 (i2 / i) :arg1 (m4 / match-03 :quant 1 :mod (m5 / more)) :time (t3 / talk-01 :arg0 (i3 / i) :arg1 (i4 / it) :time (w / week :mod (l / last)))) :arg2 (o / optimistic :domain (i5 / i) :degree (m6 / more :degree (f / far)))) :snt3 (s / say-01 :arg0 (p / person :name (n / name :op1 "Sarah" :op2 "L")) :arg1 (c2 / convince-01 :arg0 (p2 / person) :arg1 (p3 / person) :arg2 (p4 / perform-01 :arg1-of (i6 / improve-01))) :concession (w2 / win-01 :polarity - :arg0 (o2 / organization :name (n2 / name :op1 "Sigma")))))
(m / multi-sentence :snt1 (p / possible-01 :arg1 (s / see-01 :arg0 (p2 / person) :arg1 (p3 / petra :mod (b / branká?e)))) :snt2 (e / echa :arg0 (p4 / person :name (n / name :op1 "Pavla") :arg0-of (h / have-org-role-91 :arg2 (t / trainer))) :arg1 (p5 / person :arg0-of (h2 / have-org-role-91 :arg2 (t2 / trainer)))))
(m / multi-sentence :snt1 (p / person :name (n / name :op1 "Petr")) :snt2 (e / ech :mode (i / interrogative) :time (m2 / moment :mod (l / last))))
FAILED_TO_PARSE#Number of opening and closing brackets doesn't match.
(a / and :op1 (c / criticize-01 :arg0 (p / person :name (n / name :op1 "Steven" :op2 "Spielberg") :arg0-of (h / have-org-role-91 :arg2 (d / director))) :arg1 (s / study-01) :arg2 (r / rely-01 :polarity - :arg0 (s2 / study) :arg1 (r2 / right :poss (c2 / cartoons)) :degree (m / much :degree (t / too)))) :op2 (p2 / predict-01 :arg0 (p3 / person) :arg1 (c3 / collapse-01 :arg1 (p4 / province :name (n2 / name :op1 "N-A")))) :time (s3 / summer :mod (l / last)))
(i / increase-01 :arg1 (i2 / increase-01 :arg1 (t / tax-01) :location (b / below :op1 (p / product-of :op1 4.1 :op2 (p2 / percentage-entity :value (N / N-A))))) :location (s / state :name (n / name :op1 "Virginia")) :mod (o / only))
(c / contrast-01 :arg2 (a / and :op1 (c2 / chance-02 :arg0 (s / sheer) :arg1 (t / turn-01 :polarity - :arg0 (p / person :name (n / name :op1 "Vasicek")))) :op2 (e / end-01 :arg1 0 :arg3 (p2 / person :name (n2 / name :op1 "Hanako" :op2 "Leos" :op3 "Kalvoda") :arg0-of (h / have-org-role-91 :arg2 (c3 / coach))))))
(h / have-03 :arg0 (h2 / he) :arg1 (h3 / home :poss (h4 / he) :location (a / airport :location (c / city :name (n / name :op1 "Munich")))) :time (t / today))
(m / multi-sentence :snt1 (l / love-02 :arg0 (i / i) :arg1 (b / believe-01 :arg0 (i2 / i) :arg1 (i3 / it))) :snt2 (a / add-01 :arg0 (h / he) :arg1 (i4 / it)))
(a / and :op2 (f / follow-01 :arg1 (s / session :mod (a2 / autograph) :arg1-of (c / czech :polarity - :arg0 (p / person :name (n / name :op1 "Rosicky")))) :arg2 (s2 / session :mod (a3 / autograph))))
(a / and :op2 (f / fight-01 :arg0 (p / person :arg0-of (f2 / fight-01 :arg1 (a2 / accuse-01 :arg0 (p2 / person) :arg1 (p3 / person)) :time (n / now))) :arg2 (s / side :poss (p4 / person)) :mod (d / definite)))
(c / contrast-01 :arg1 (s / show-01 :arg0 (f / footage :arg1-of (r / report-01)) :arg1 (i / interest-01 :location (m / magazine :mod (c2 / country :name (n / name :op1 "N-A")))) :arg1-of (r2 / report-01)) :arg2 (w / want-01 :arg0 (p / person :arg0-of (h / hack-04)) :arg1 (w2 / want-01 :arg0 (p2 / person) :arg1 (m2 / money) :source (c3 / community))))
(a / and :op1 (a2 / applaud-01 :arg0 (p / person :quant (s / some) :arg1-of (e / expert-01)) :arg1 (s2 / source :quant 4 :arg1-of (d / differ-02)) :arg2 (l / location :name (n / name :op1 "Pentateuch")) :time (n2 / now)) :op2 (s3 / sources :arg0 (b / book :quant 5 :arg1-of (i / include-91 :arg2 (b2 / book :quant 5))) :arg1 (b3 / book :quant 5 :arg1-of (i2 / include-91 :arg2 (b4 / book :quant 5))) :arg2 (b5 / book :quant 5 :arg1-of (i3 / include-91 :arg2 (b6 / book :quant 5 :arg1-of (i4 / include-91 :arg2 (b7 / book :quant 5 :arg1-of (i5 / include-91 :arg2 (b8 / book :quant 5)))))))) :op3 (a3 / authorship :arg1 (b9 / book) :arg1-of (c / cause-01 :arg0 (d2 / describe-01 :arg1 (b10 / book) :manner (c2 / certain :polarity -)))))
(a / and :op1 (d / deal-01 :arg0 (l / lawyer) :arg2 (l2 / lawyer :location (a2 / around :op1 (f / football :mod (s / small) :mod (f2 / football)) :ord (o / ordinal-entity :value 1))) :time (a3 / already)) :op2 (r / recommend-01 :arg0 (l3 / lawyer) :arg1 (c / change-01) :arg2 (s2 / system :arg1-of (d2 / distribute-01))))
(a / and :op1 (a2 / a.cz :mode (i / interrogative)) :op2 (m / manage-02 :arg0 (y / you) :arg1 (s / save-02 :arg0 (y2 / you) :arg1 (p / person :arg1-of (i2 / imprison-01 :arg2 (c / country :name (n / name :op1 "N-A"))))) :degree (a3 / amr-unknown)))
(i / important :degree (m / more :mod (e / even)) :arg1-of (t / talk-01 :arg0 (w / we) :arg2 (a / and :op1 (g / geometry :arg1 (u / universe)) :op2 (c / complain-01 :arg0 (w2 / we) :arg1 (u2 / universe) :location (i2 / inside :op1 (u3 / universe))))) :mod (i3 / important :degree (m2 / more :mod (e2 / even))))
(p / point :beneficiary (c / country :name (n / name :op1 "Italy")))
(d / decide-01 :arg0 (c / company :name (n / name :op1 "Abbott")) :arg1 (c2 / continue-01 :arg0 (c3 / company) :arg1 (t / treat-01 :arg0 (c4 / company) :arg1 (p / person :name (n2 / name :op1 "Loic" :op2 "Lang-Lazduskim") :arg0-of (h / have-org-role-91 :arg2 (p2 / professor))) :arg2 (d2 / department :part-of (s / surgery-01 :mod (t2 / thoracic))) :location (c5 / country-region :name (n3 / name :op1 "N-A") :mod (h2 / hospital)))) :time (a / after :op1 (v / visit-01 :arg0 (c6 / company) :arg1 (d3 / doctor :quant (s2 / several)))))
(a / and :op1 (w / work-09 :arg1 (i / it)) :op2 (h / have-condition-91 :arg1 (b / begin-01 :arg0 (i2 / it) :arg1 (r / race) :mod (g / great)) :arg2 (h2 / have-03 :arg0 (w2 / we) :arg1 (d / deal :mod (g2 / great) :topic (i3 / it)))))
(a / and :op1 (l / large :degree (m / more :degree (m2 / much)) :domain (t / this)) :op2 (s / say-01 :arg0 (i / i) :arg1 (a2 / and :op1 (l2 / large :degree (m3 / more :degree (m4 / much)) :mod (a3 / also) :domain (t2 / this)) :op2 (g / gas :quant (l3 / lot :mod (a4 / also))) :mod (a5 / also))))
(c / contrast-01 :arg1 (i / include-91 :arg1 (p / person :arg0-of (h / have-org-role-91 :arg2 (o / officer))) :arg2 (p2 / person :arg0-of (h2 / have-org-role-91 :arg2 (o2 / officer)))) :arg2 (v / veteran :source (c2 / country :name (n / name :op1 "Afghanistan")) :mod (a / also)))
(t / teamed :arg0 (p / person :name (n / name :op1 "Luther" :op2 "Rabinowitz")) :arg1 (f / fingertips :poss (p2 / person)))
(b / boast :arg0 (t / they) :arg1 (c / create-01 :arg0 (t2 / they) :arg1 (r / row :ord (o / ordinal-entity :value 4))) :mod (a / also))
(c / ceremony :polarity -)
(r / respond-01 :arg1 (l / legislation :mod (n / new) :mod (t / this) :arg1-of (a / approve-01 :time (y / year :mod (t2 / this))) :arg0-of (m / make-02 :arg1 (e / easy-05 :arg1 (c / compensate-01 :arg2 (p / person :arg0-of (s / seek-01 :arg1 (c2 / compensate-01))) :degree (m2 / more) :concession (e2 / even-if :op1 (p2 / possible-01 :polarity - :arg1 (t3 / trace-02 :arg1 (e3 / employer :poss (t4 / they) :time (f / former)))))) :degree (m3 / more)))) :arg2 (l2 / legislation :mod (n2 / new) :mod (t5 / this) :arg1-of (a2 / approve-01 :time (y2 / year :mod (t6 / this)))))
(a / and :op1 (r / rise-01 :arg1 (t / thing :arg2-of (p / price-01 :arg1 (a2 / and :op1 (h / house-01 :arg1-of (p2 / private-03)) :op2 (h2 / house-01 :arg1-of (a3 / afford-01 :arg1-of (p3 / possible-01)))))) :arg2 (c / city :name (n / name :op1 "Berkeley")) :time (y / year :ord (o / ordinal-entity :value 5))) :op2 (c2 / climbed :arg0 (s / sell-01) :arg1 (m / monetary-quantity :quant 423 :unit (y2 / yuan :mod (r2 / renminbi)))))
(c / contrast-01 :arg1 (f / feel-01 :arg0 (i / it) :arg1 (r / rozmrzelá)) :arg2 (s / surprise-01 :arg0 (b / burden-01 :arg1 (h / he)) :arg1 (i2 / it)))
(i / include-91 :arg1 (a / and :op1 (a2 / amount :mod (p / pound)) :op2 (s / share :arg1-of (b / buy-01 :arg0 (p2 / public))) :op3 (s2 / share :arg1-of (b2 / buy-01 :arg0 (p3 / public)))) :arg2 (s3 / something :arg1-of (s4 / share-01 :arg0 (p4 / public))) :location (w / world) :mod (c / certain))
(s / say-01 :arg1 (l / look-01 :mode (i / imperative) :arg0 (y / you) :arg1 (p / person :name (n / name :op1 "Aida" :op2 "Larisa") :arg0-of (h / have-rel-role-91 :arg1 (h2 / he) :arg2 (m / mother))) :time (n2 / now :quant 40)) :arg2 (c / confuse-01 :arg1 (p2 / person)))
(m / multi-sentence :snt1 (b / begin-01 :arg1 (c / car :quant 122) :time (t / then)) :snt2 (w / wheels :polarity -))
(a / and :op1 (s / sign-02 :arg0 (l / location :name (n / name :op1 "North" :op2 "Carolina")) :arg1 (l2 / law :arg0-of (r / reduce-01 :arg1 (t / tax-01 :arg2 (c / corporation)) :arg3 (p / percentage-entity :value (N / N-A)) :arg4 (p2 / percentage-entity :value (N2 / N-A)))) :time (r2 / recent)) :op2 (r3 / reduce-01 :arg1 (t2 / thing :arg1-of (t3 / tax-01)) :arg4 (p3 / percentage-entity :value (N3 / N-A))))
(v / view-02 :arg0 (w / we) :arg1 (c / cause-01 :arg0 (a / amr-unknown) :arg1 (b / believe-01 :polarity - :arg0 (t / they) :arg1 (w2 / woman :mod (c2 / color) :mod (c3 / color)))) :mod (i / important) :condition (r / realize-01 :arg0 (w3 / we) :arg1 (t2 / this)))
FAILED_TO_PARSE#Number of opening and closing brackets doesn't match.
(c / cause-01 :arg0 (d / delay-01 :arg1 (f / fly-01)) :arg1 (d2 / delay-01 :arg1 (f2 / fly-01 :mod (o / other) :arg2-of (i / include-01 :arg1 (f3 / fly-01 :source (a / and :op1 (c2 / city :name (n / name :op1 "Dubai")) :op2 (c3 / company :name (n2 / name :op1 "Qantas"))) :source (c4 / city :name (n3 / name :op1 "Sydney")))))) :time (t / then))
(a / and :op1 (h / hard-02 :arg1 (a2 / adopt-01 :arg1 (l / life)) :degree (f / further)) :op2 (w / want-01 :polarity - :arg0 (y / you) :arg1 (a3 / adopt-01)))
(s / say-01 :arg0 (h / he) :arg1 (c / clear-06 :arg1 (t / thing :arg2-of (s2 / sanction-02) :arg1-of (t2 / tough-02) :arg1-of (a / announce-01 :manner (r / regard-01 :arg1 (a2 / aircraft :mod (c2 / civilian) :mod (c3 / civilian)) :arg2 (d / die-01 :quant (n / nearly :op1 300))) :arg0-of (c4 / cause-01 :arg1 (a3 / army :mod (c5 / country :name (n2 / name :op1 "N-A"))) :manner (v / vehement))))))
(a / adapt-01 :arg1 (s / school :mod (d / day) :ord (o / ordinal-entity :value 1)) :mod (t / tradition) :arg0-of (c / cause-01 :arg1 (g / give-01 :arg0 (c2 / child) :arg1 (f / flower) :arg2 (c3 / child))) :mod (t2 / tradition))
(i / investigate-01 :arg1 (c / crash-01 :arg1 (c2 / company :name (n / name :op1 "Boeing")) :location (c3 / country :name (n2 / name :op1 "Ukraine"))) :time (n3 / now))
(i / include-91 :arg1 (a / and :op1 (p / person :mod (c / country :name (n / name :op1 "Israel"))) :op2 (c2 / citizenship :mod (i2 / israeli)) :quant (a2 / almost :op1 20)) :arg2 (t / territory :poss (s / state :location (c3 / country))))
(a / and :op1 (p / present-01 :arg0 (m / machine :name (n / name :op1 (n2 / na) :op2 (p2 / pt-17)) :mod (m2 / machine :name (n3 / name :op1 (p3 / pt-17) :op2 (s / se)))) :arg1 (p4 / person :name (n4 / name :op1 "Walentinová" :op2 "Walentinová" :op3 "Walentinová") :arg0-of (h / have-org-role-91 :arg1 (w / wing :mod (u / upper) :part-of (w2 / wing :mod (u2 / upper))) :arg2 (z / z))) :arg2 (w3 / wing :mod (w4 / wing :mod (u3 / upper)) :name (n5 / name :op1 (n6 / na)) :mod (w5 / wing :name (n7 / name :op1 (n8 / na)) :mod (w6 / wing :name (n9 / name :op1 (n10 / na)) :mod (u4 / upper))))) :op2 (w7 / wing :mod (w8 / wing :mod (u5 / upper)) :mod (n11 / na)))
(d / describe-01 :arg0 (i / i) :arg1 (w / work-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg2 (d2 / director))) :arg2 (c / chalice :arg1 (p2 / person))) :arg1-of (p3 / possible-01))
(a / and :op1 (s / say-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg2 (d / director))) :arg1 (b / believe-01 :arg0 (a2 / and :op1 (o / organization :name (n / name :op1 "Twitche" :op2 "Shear")) :op2 (c / country :name (n2 / name :op1 "N-A")) :op3 (t / twitch)) :arg1 (f / future :poss (a3 / and :op1 (' / '' :arg1 (g / game)) :op2 (d2 / do-02 :arg0 (m / media)))) :time (f2 / future))) :op2 (r / reluctant :domain (p2 / person :arg0-of (v / view-01) :mod (g2 / gulp :mod (e / even)))))
(a / and :op1 (w / want-01 :arg0 (y / you) :arg1 (p / preserve-01 :arg0 (y2 / you) :arg1 (g / government-organization :arg0-of (g2 / govern-01) :poss (w2 / we))) :manner (a2 / amr-unknown) :condition (d / decide-01 :arg0 (p2 / person :quant 1 :arg1-of (i / include-91 :arg2 (p3 / person :arg1-of (n / neighbor-01 :arg2 (w3 / we))))) :arg1 (n2 / nation :mod (c / czech)))) :op2 (w4 / wipes :arg0 (h / he) :arg1 (c2 / country :name (n3 / name :op1 "Czech" :op2 "Republic")) :arg2 (m / map :location (w5 / world))))
(r / realize-01 :mode (i / interrogative) :arg0 (j / journalist :poss (w / we)) :arg1 (f / fact :topic (l / liquidation :arg0 (p / person :mod (e / ethnic-group)) :arg1 (p2 / person :mod (e2 / ethnic-group)))))
(h / have-concession-91 :arg1 (w / wish-01 :arg0 (i / i) :arg1 (p / possible-01 :arg1 (s / stop-01 :arg0 (i2 / i) :arg1 (t / think-01 :arg0 (i3 / i) :arg1 (i4 / it))))) :arg2 (w2 / wish-01 :arg0 (h2 / he) :arg1 (t2 / think-01 :arg0 (i5 / i) :arg1 (t3 / think-01 :arg0 (i6 / i) :arg1 (i7 / it)))))
(t / tell-01 :mode (i / imperative) :arg0 (y / you) :arg1 (l / list-01 :arg1 (o / organization :name (n / name :op1 "Hamas")) :arg2 (o2 / organization :mod (t2 / terrorism) :mod (t3 / terrorism))))
(g / gain-02 :arg0 (c / company) :arg1 (m / monetary-quantity :arg2-of (e / expend-01 :arg0 (c2 / company))) :arg3 (r / rate-entity-91 :arg1 1000 :arg2 (t / temporal-quantity :quant (N / N-A) :unit (y / year))))
(p / plunged :arg0 (h / he) :arg1 (t / theater) :time (a / after :op1 (r / receive-01 :arg0 (h2 / he) :arg1 (r2 / recognition) :arg2 (p2 / person :arg0-of (c / criticize-01)))))
(c / cause-01 :arg0 (e / extend-01 :arg1 (r / right :mod (r2 / right :mod (c2 / civil)))) :arg1 (r3 / recognition :mod (f / formal) :topic (e2 / extend-01 :arg1 (r4 / right :mod (c3 / civil)))) :arg0-of (c4 / cause-01 :arg1 (p / prevent-01 :arg1 (d / discriminate-02 :arg1 (o / organize-01 :arg1 (t / trade-01))))))
(c / crying :arg1 (p / person) :time (t / tell-01 :arg0 (i / i) :arg1 (s / story :poss (w / we) :location (c2 / city :name (n / name :op1 "London"))) :arg2 (p2 / person)))
(u / use-01 :mode (i / imperative) :arg0 (y / you) :arg1 (p / person :arg0-of (l / live-01 :location (t / territory :poss (p2 / person)))) :arg2 (p3 / person :arg0-of (l2 / live-01 :location (t2 / territory :poss (p4 / person)))))
(h / hope-01 :arg0 (i / i) :arg1 (o / open-01 :arg0 (s / school) :arg1 (a / and :op1 (e / educate-01 :arg1 (s2 / school)) :op2 (a2 / and :op1 (c / child :mod (c2 / country :name (n / name :op1 "N-A"))) :op2 (c3 / child :mod (o2 / other) :location (w / world)) :op3 (b / boy :mod (o3 / other) :location (w2 / world)))) :time (s3 / soon) :arg1-of (c4 / cause-01 :arg0 (s4 / say-01 :arg0 (p / person :arg0-of (h2 / have-rel-role-91 :arg1 (s5 / school) :arg2 (c5 / child))) :arg1 (b2 / boy :mod (t / thirteen-year-old) :source (s6 / school) :location (c6 / country-region :name (n2 / name :op1 "Gaza") :mod (l / large :degree (m / most))))))))
(s / support-01 :polarity - :arg0 (o / organization :name (n / name :op1 "Darling")) :arg1 (m / mandate :poss (p / person :arg0-of (v / vote-01 :arg1 (c / country :name (n2 / name :op1 "N-A"))))) :mod (o2 / of-course))
(g / good :degree (v / very))
(n / nothing :domain (p / pain-01 :mod (s / such)) :duration (t / temporal-quantity :quant (N / N-A) :unit (y / year)))
(a / and :op1 (f / fault-01 :polarity - :arg1 (t / thing) :arg2 (t2 / thing :arg1-of (b / bring-01))) :op2 (r / recommend-01 :polarity - :arg1 (c / corrected :arg1 (t3 / thing)) :concession (e / even-if :op1 (a2 / and :op1 (s / suitable-04 :arg1 (t4 / thing)) :op2 (p / possible-01 :arg1 (t5 / thing))))))
(t / think-01 :arg0 (i / i) :arg1 (f / family :arg1-of (h / have-org-role-91 :arg0 (i2 / i) :arg2 (m / member))) :time (l / late :degree (m2 / more)))
(s / say-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg3 (j / judge-01))) :arg1 (p2 / possible-01 :arg1 (c / cause-01 :arg0 (a / and :op1 (c2 / change-01 :arg1 (p3 / person :arg0-of (v / view-01))) :op2 (i / increase-01 :arg1 (p4 / popularity :poss (s2 / site :medium (w / web) :example (o / organization :name (n / name :op1 "Netflix")))) :arg1-of (i2 / increase-01))) :arg1 (p5 / person :arg0-of (h2 / have-org-role-91 :arg3 (j2 / judge-01))))))
(u / use-01 :arg1 (b / buy-01))
(c / contrast-01 :arg2 (h / have-03 :arg0 (i / it) :arg1 (s / something :arg0-of (a / attract-01 :arg1 (c2 / company :mod (y / young) :arg0-of (w / want-01 :arg1 (w2 / want-01 :arg0 (m / man :mod (y2 / young)))))))))
(e / exemplify-01 :arg0 (e2 / expose-01 :arg1 (j / june :mod (t / this)) :arg2 (o / organization :name (n / name :op1 "Marks" :op2 "&" :op3 "Spencer") :arg1-of (a / asbestos :arg0 (p / person :name (n2 / name :op1 "Janice" :op2 "Janice"))))))
(m / multi-sentence :snt1 (s / sit-01 :arg1 (h / he) :arg2 (o / organization :name (n / name :op1 "NH" :op2 "Hotel") :mod (s2 / smíchovský))) :snt2 (a / and :op1 (s3 / speak-01 :arg0 (h2 / he) :arg2 (j / journalist :mod (c / czech))) :op2 (p / prepare-02 :arg0 (h3 / he) :arg2 (b / bias-01 :arg1 (h4 / he) :arg2 (r / representation :arg0 (h5 / he) :arg1 (a2 / and :op1 (p2 / person :mod (c2 / country :name (n2 / name :op1 "Netherlands"))) :op2 (p3 / person :mod (c3 / country)) :op3 (p4 / person :mod (c4 / country)) :op4 (p5 / person :mod (c5 / country)) :op5 (p6 / person :mod (c6 / country)) :arg1-of (s4 / sharp-02) :mod (a3 / also)))))))
(e / elect-01 :mode (i / interrogative) :arg2 (e2 / elect-01))
(n / note-01 :mode (i / imperative) :arg0 (y / you) :arg1 (w / want-01 :arg0 (i2 / i) :arg1 (m / make-01 :arg0 (i3 / i) :arg1 (e / everything) :arg1-of (i4 / instead-of-91 :arg2 (s / soon :degree (m2 / more) :compared-to (l / late :degree (m3 / more)))))))
(l / liberation :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (c / country :name (n / name :op1 "N-A")) :arg2 (s / soldier))) :arg1 (s2 / separatist) :arg2 (s3 / separatist :arg0-of (f / favor-01 :arg1 (c2 / captivity))) :location (a / around :op1 (s4 / stage)))
(a / and :op1 (w / want-01 :arg0 (i / i) :arg1 (w2 / work-01 :arg0 (i2 / i) :location (p / police) :time (o / once))) :op2 (h / hope-01 :arg0 (i3 / i) :arg1 (t / take-01 :arg0 (t2 / they) :arg1 (i4 / i) :arg2 (a2 / academy) :time (y / year :mod (n / next)))))
(c / capture-01 :arg0 (s / soldier :mod (c2 / country :name (n / name :op1 "N-A"))) :arg1 (s2 / separatist))
(n / nep?ed?eli :arg0 (w / we) :arg1 (w2 / we) :manner (t / together) :topic (t2 / thickness :arg1 (d / dimension :poss (d2 / dimension :mod (h / hose)))) :mod (j / just) :prep-in (c / case :mod (t3 / that)))
(c / call-01 :arg0 (p / publication :name (n / name :op1 "N-A")) :arg1 (t / theory :name (n2 / name :op1 (k / kaluzovou-kleinovou) :op2 (k2 / kaluzovou-kleinovou)) :mod (s / small)) :arg2 (t2 / theory :name (n3 / name :op1 (k3 / kaluzovou-kleinovou)) :mod (s2 / small)) :time (s3 / since :op1 (t3 / then)))
(a / and :op1 (l / learn-01 :polarity - :arg0 (w / we) :arg1 (i / it) :mod (r / really)) :op2 (t / think-01 :arg0 (i2 / i) :arg1 (s / something :beneficiary (c / class :mod (m / middle) :mod (c2 / class :mod (m2 / middle))))) :location (s2 / school))
(w / warn-01 :arg0 (p / person :name (n / name :op1 "Pascal" :op2 "Perrineau") :mod (p2 / politics) :arg0-of (w2 / warn-01 :arg1 (a / and :op1 (f / fail-01 :arg1 (g / government-organization :arg0-of (g2 / govern-01) :mod (s / socialist) :mod (s2 / socialist)) :arg2 (i / improve-01 :arg0 (g3 / government-organization) :arg1 (e / economy))) :op2 (r / reduce-01 :arg0 (g4 / government-organization) :arg1 (e2 / employ-01 :polarity - :mod (r2 / record))))) :time (s3 / soon)))
(j / justify-01 :arg0 (y / you) :arg1 (l / lynching :arg0 (y2 / you) :arg1 (w / woman :mod (w2 / white))))
(a / and :op1 (o / offer-01 :arg0 (c / company :name (n / name :op1 "Abbott")) :arg1 (l / live-01 :arg0 (c2 / company) :duration (t / temporal-quantity :quant (N / N-A) :unit (m / month)) :arg1-of (l2 / last-01 :arg2 (t2 / temporal-quantity :quant (N2 / N-A) :unit (m2 / month))))) :op2 (p / probable :domain (p2 / prolonged :arg0 (h / he) :arg1 (l3 / life) :time (m3 / month :mod (o2 / one) :mod (j / just)))) :time (b / begin-01 :arg1 (o3 / offer-01 :arg0 (c3 / company))))
(s / say-01 :arg0 (h / he) :arg1 (g / go-01 :arg1 (y / you) :arg4 (f / far :degree (t / too))) :arg1-of (s2 / say-01 :arg0 (h2 / he)) :arg1-of (s3 / say-01 :arg0 (h3 / he)) :arg1-of (s4 / say-01 :arg0 (h4 / he)) :arg1-of (s5 / say-01 :arg0 (h5 / he)) :arg1-of (s6 / say-01 :arg0 (h6 / he)) :arg1-of (s7 / say-01 :arg0 (h7 / he)) :arg1-of (s8 / say-01 :arg0 (h8 / he)) :arg1-of (s9 / say-01 :arg0 (h9 / he)) :arg1-of (s10 / say-01 :arg0 (h10 / he)) :arg1-of (s11 / say-01 :arg0 (h11 / he)) :arg1-of (s12 / say-01 :arg0 (h12 / he)) :arg1-of (s13 / say-01 :arg0 (h13 / he)) :arg1-of (d / describe-01 :arg0 (h14 / he) :arg1-of (p / possible-01) :arg1-of (d2 / describe-01 :arg0 (h15 / he) :arg2 (m / mistake-02 :arg0 (y2 / you)) :arg1-of (p2 / possible-01))))
(s / say-01 :arg0 (h / he) :arg1 (t / tell-01 :arg0 (p / person :name (n / name :op1 "Vladimir") :arg0-of (h2 / have-org-role-91 :arg1 (p2 / person :name (n2 / name :op1 "Damir") :arg0-of (h3 / have-org-role-91 :arg2 (' / ''))) :arg2 (p3 / person :arg0-of (h4 / have-rel-role-91 :arg1 (h5 / he) :arg2 (f / father))))) :arg1 (d / die-01 :arg1 (p4 / person :arg0-of (h6 / have-rel-role-91 :arg1 (h7 / he) :arg2 (m / mother)))) :arg2 (i / i)) :arg2 (i2 / i))
(l / lose-02 :arg0 (i / i) :arg1 (p / person :quant (l2 / lot) :arg1-of (l3 / love-01 :arg0 (i2 / i)) :arg1-of (c / close-10 :arg2 (i3 / i))))
(z / zalapal :arg1 (w / world :quant 2004) :time (a / after :op1 (b / breath) :quant (t / temporal-quantity :quant (N / N-A) :unit (y / year))) :time (b2 / bring-01 :arg0 (a2 / alyonu :mod (s / small)) :arg1 (a3 / arm) :arg2 (c / captivity :arg0 (p / person :mod (c2 / country :name (n / name :op1 "N-A"))) :arg1 (a4 / arm))))
(m / multi-sentence :snt1 (c / contrast-01 :arg1 (s / surprise-01 :polarity - :arg1 (w / we)) :arg2 (s2 / surprise-01 :polarity - :arg1 (w2 / we))) :snt2 (s3 / say-01 :arg0 (p / person :name (n / name :op1 "Emily" :op2 "Lau") :arg0-of (h / have-org-role-91 :arg1 (p2 / political-party :name (n2 / name :op1 "Democratic" :op2 "Party")))) :arg1 (i / it)))
(c / contrast-01 :arg1 (h / have-03 :arg0 (p / plane) :arg1 (p2 / plane :arg0-of (h2 / have-03 :arg1 (d / distance-01 :arg1 (p3 / plane) :arg2 (d2 / distance-01 :arg1 (p4 / plane) :mod (s / short)))))) :arg2 (h3 / hit-01 :arg0 (p5 / plane) :arg1 (o / or :op1 (s2 / speed :arg1-of (c2 / change-01)) :op2 (d3 / direction :mod (w / wind)) :op3 (l / land-01 :arg1 (p6 / plane)) :op4 (l2 / land-01 :arg1 (p7 / plane)))))
(i / island :domain (t / this) :mod (u / unsustainable :mod (a / almost)) :arg0-of (r / require-01 :arg1 (r2 / reform-01 :manner (t2 / thorough))))
(s / say-01 :arg0 (p / person :arg0-of (s2 / survive-01 :arg1 (c / cancer :mod (l / lung)))) :arg1 (t / treasure :arg0-of (s3 / survive-01 :arg1 (c2 / cancer :mod (l2 / lung)))) :frequency (s4 / sometimes))
(e / exchange-01 :arg0 (p / person :arg0-of (h / have-rel-role-91 :arg2 (s / sister))) :arg1 (p2 / person :name (n / name :op1 "Lucie" :op2 "Borhyová")) :arg2 (a / at-least :op1 (p3 / person :arg0-of (w / work-01 :mod (t / that))) :mod (a2 / at-least)))
(u / use-01 :arg1 (p / possible-01 :arg1 (t / teach-01)) :condition (o / or :op1 (d / do-02 :polarity - :arg0 (y / you) :arg1 (t2 / thing :arg1-of (r / remark-01 :arg0 (p2 / person :mod (o2 / other))))) :op2 (w / wear-01 :arg0 (y2 / you) :arg1 (a / and :op1 (a2 / appropriate-02) :op2 (d2 / destroy-01)))))
(h / have-condition-91 :arg1 (p / possible-01 :arg1 (k / koketovat :arg0 (y / you) :arg1 (s / song :mod (a / any)) :time (a2 / already))) :arg2 (t / take-01 :arg0 (y2 / you) :arg1 (s2 / string :ord (o / ordinal-entity :value 3))))
(h / have-concession-91 :arg1 (f / follow-01 :arg1 (f2 / fast-start) :arg2 (s / scurrying :arg1 (l / line :arg1-of (s2 / start-01))) :arg1-of (i / instead-of-91)))
(t / take-01 :arg0 (p / person :name (n / name :op1 "Costanza") :arg0-of (h / have-org-role-91 :arg1 (c / chamber) :arg3 (a / apprentice-01 :arg0 (p2 / person)))) :arg1 (h2 / heart :part-of (p3 / person :name (n2 / name :op1 "Alba" :op2 "Rohrwacherová") :arg0-of (h3 / have-rel-role-91 :arg1 (w / woman) :arg2 (c2 / child)))) :arg1-of (c3 / cause-01 :arg0 (k / kill-01 :arg0 (p4 / person) :arg1 (p5 / person :arg0-of (h4 / have-rel-role-91 :arg1 (w2 / woman) :arg2 (c4 / child))) :mod (a2 / almost))) :mod (a3 / also))
(c / contrast-01 :arg1 (l / lead-03 :arg0 (f / fire-01) :arg2 (e / end-01 :arg1 (f2 / fight-01) :time (i / immediate))) :arg2 (s / solve-01 :polarity - :arg0 (c2 / cease-01) :arg1 (p / problem :arg1-of (k / key-02)) :prep-as (d / demand-01 :arg0 (o / organization :name (n / name :op1 "Hamas")) :arg1 (a / and :op1 (b / blockade-01 :arg0 (a2 / and :op1 (d2 / draft :name (n2 / name :op1 (i2 / israeli-palestinian))) :op2 (u / url-entity :value (r / reopening)))) :op2 (r2 / reopening :location (c3 / country-region :name (n3 / name :op1 "Gaza")))))))
(s / say-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (f / federal) :arg3 (j / judge-01))) :arg1 (b / block-01 :arg0 (l / lawyer) :arg1 (l2 / law :source (l3 / location :name (n / name :op1 "Louisiana"))) :duration (t / temporary) :arg1-of (s2 / say-01 :arg0 (l4 / lawyer)) :arg1-of (s3 / say-01 :arg0 (l5 / lawyer)) :arg1-of (s4 / say-01 :arg0 (l6 / lawyer)) :arg1-of (s5 / say-01 :arg0 (l7 / lawyer)) :location (s6 / state) :mod (p2 / probable)))
(m / multi-sentence :snt1 (i / it :li 30) :snt2 (b / be-temporally-at-91 :arg2 (d / date-entity :month 8 :year 1944 :time-of (m2 / move-01 :arg1 (p / person :arg0-of (d2 / depend-01 :polarity -) :arg0-of (d3 / depend-01 :polarity -)) :arg2 (c / country :name (n / name :op1 "France"))))))
(m / matter :mod (r / routine) :mod (m2 / most) :example (n / need-01 :arg1 (b / bring-01 :arg1 (p / pot) :arg2 (s / store) :destination (s2 / store) :source (a / and :op1 (c / class :mod (s3 / summer)) :op2 (n2 / nafasovat :arg1 (p2 / pot))))))
(c / cause-01 :arg0 (o / obligate-01 :arg1 (t / they) :arg2 (l / leg :mod (e / educate-01))))
(a / and :op2 (w / want-01 :arg0 (p / person :name (n / name :op1 "Fabia" :op2 "Honza" :op3 "Sýkora")) :arg1 (b / borrow-01 :arg0 (p2 / person) :arg1 (r / race :mod (t / this)) :arg2 (w2 / we))))
(a / and :op1 (t / take-01 :arg0 (w / win-01) :arg1 (b / bet) :duration (t2 / temporal-quantity :quant (N / N-A) :unit (y / year))) :op2 (s / say-01 :arg0 (w2 / win-01) :arg1 (a2 / allow-01 :arg0 (m / money :mod (a3 / aircraft-type :name (n / name :op1 "N-A"))) :arg1 (a4 / and :op1 (t3 / travel-01 :arg0 (t4 / they) :arg1 (w3 / world)) :op2 (b2 / buy-01 :arg0 (t5 / they) :arg1 (h / house :mod (n2 / new)))))))
(w / work-01 :arg0 (p / person :name (n / name :op1 "David" :op2 "Fiala")) :arg2 (d / department :name (n2 / name :op1 (g / graphic) :op2 (t / television) :op3 (t2 / television) :op4 (t3 / television) :op5 (t4 / television) :op6 (t5 / television) :op7 (t6 / television))) :time (f / former))
(b / believe-01 :arg0 (p / person :mod (t / this)) :arg1 (b2 / believe-01 :arg0 (p2 / person) :arg1 (t2 / that) :condition (s / show-01 :arg0 (t3 / they) :arg1 (v / visa :mod (c / cow :mod (c2 / cow)) :mod (g / grand)) :purpose (b3 / bear-02 :arg0 (t4 / they) :arg1 (c3 / calves :mod (s2 / striped))))))
(m / multi-sentence :snt1 (s / say-p :mode (i / interrogative) :arg0 (w / we)) :snt2 (e / ejedli :mode (i2 / imperative) :arg0 (y / you) :arg1 (t / throat)))
(m / multi-sentence :snt1 (r / realize-01 :arg0 (w / we) :arg1 (m2 / mr :arg0 (w2 / we) :arg1 (w3 / warn-01 :arg0 (p / person :name (n / name :op1 "Lébra"))))) :snt2 (n2 / notice-01 :arg0 (w4 / we) :arg1 (a / and :op1 (p2 / person :name (n3 / name :op1 "Kalvoda")) :op2 (a2 / address :poss (p3 / person :arg0-of (s / shoot-02) :mod (s2 / sleep-01)))) :arg0-of (c / cause-01 :arg1 (a3 / and :op1 (b / believe-01 :arg0 (p4 / person) :arg1 (c2 / come-01)) :op2 (g / give-up-07 :arg0 (p5 / person) :arg1 (g2 / goal))) :arg0-of (c3 / cause-01 :arg1 (s3 / start-01 :arg0 (p6 / person) :arg1 (g3 / goal :mod (g4 / goal))) :arg0-of (c4 / cause-01 :arg1 (s4 / start-01 :arg0 (p7 / person) :arg1 (f / fall-01 :arg1 (p8 / person))))))))
(h / have-concession-91 :arg1 (r / release-01 :arg0 (t / terrorist) :arg1 (a / and :op1 (p / person :arg0-of (h2 / have-rel-role-91 :arg2 (m / mother))) :op2 (p2 / person :quant 10 :arg0-of (h3 / have-rel-role-91 :arg1 (p3 / person) :arg2 (s / sister))) :op3 (p4 / person :arg0-of (h4 / have-rel-role-91 :arg1 (p5 / person) :arg2 (b / brother))) :op4 (p6 / person :arg0-of (h5 / have-rel-role-91 :arg1 (p7 / person) :arg2 (b2 / brother))) :op5 (p8 / person :arg0-of (h6 / have-rel-role-91 :arg1 (p9 / person) :arg2 (b3 / brother))))) :arg2 (r2 / release-01 :arg1 (t2 / terrorist) :location (c / captivity :location (c2 / captivity))))
(c / cause-01 :arg0 (a / amr-unknown) :arg1 (p / possible-01 :polarity - :arg1 (s / save-02 :arg0 (g / guardians :mod (g2 / galaxies)) :arg1 (s2 / sell-01))))
(m / multi-sentence :snt1 (s / say-01 :arg0 (p / person :arg0-of (r / report-01)) :arg1 (d / decline-01 :arg1 (r2 / revenue :poss (p2 / person :name (n / name :op1 "Simon" :op2 "Kinberg"))) :time (r3 / recent) :manner (s2 / simple))) :snt2 (s3 / say-01 :arg0 (p3 / person :arg0-of (r4 / report-01)) :arg1 (a / and :op1 (d2 / declined :arg0 (p4 / person :arg0-of (r5 / report-01)) :arg1 (r6 / revenue :mod (l / large :degree (m2 / most)) :time (h / history))) :op2 (w / worry-01 :arg0 (s4 / sell-01) :arg1 (p5 / person)))))
(m / multi-sentence :snt1 (a / and :op2 (w / worry-01 :arg0 (w2 / word :mod (g / good :degree (m2 / more))) :arg1 (i / i) :degree (v / very) :time (l / last))) :snt2 (p / prefer-01 :arg1 (w3 / word-01 :arg1 (i2 / it))))
(p / possible-01 :arg1 (u / use-01 :arg0 (h / he) :arg1 (r / return-01 :arg1 (h2 / he) :arg3 (o / or :op1 (b / beach :mod (s / sunny)) :op2 (c / cottage :purpose (w / work-01 :arg1 (w2 / work-01 :arg1-of (n / normal-02)))))) :beneficiary (s2 / stud :quant (m / many))))
(s / situation :time (c / catch-up-04 :polarity - :arg1 (i / i) :arg2 (m / match-03 :ord (o / ordinal-entity :value 1) :part-of (s2 / season :mod (n / new)))) :beneficiary (i2 / i) :time (a / after :op1 (c2 / career :mod (c3 / career :mod (n2 / new)))))
(t / think-01 :arg0 (i / i) :arg1 (f / family) :time (l / late :degree (m / more)))
(s / say-01 :arg0 (p / person :name (n / name :op1 "John" :op2 "Mráky")) :arg1 (p2 / party :mod (p3 / politics) :mod (o / other) :location (l / leagues)))
(s / say-01 :arg0 (p / person :arg0-of (h / have-rel-role-91 :arg1 (p2 / person :name (n / name :op1 "Angela")) :arg2 (m / minister :mod (v / vice)))) :arg1 (d / do-02 :arg0 (c / clothes :poss (p3 / person)) :arg1 (o / opposite)) :time (t / today :mod (e / even) :mod (e2 / even)) :location (a / and :op1 (m2 / merge-01 :arg1 (a2 / and :op1 (r / race :mod (w / work-01)) :op2 (g / gender :location (c2 / circle :poss (p4 / person :arg0-of (h2 / have-org-role-91 :arg2 (h3 / head-of-state))))) :op3 (p5 / person :arg0-of (h4 / have-org-role-91 :arg2 (p6 / professor))) :op4 (p7 / person :arg0-of (h5 / have-org-role-91 :arg2 (p8 / professor))) :op5 (s2 / study-01 :arg0 (p9 / person))))))
(c / cause-01 :arg1 (r / respect-01 :polarity - :arg0 (i / i) :arg1 (l / layer :mod (s / social) :consist-of (o / or :op1 (w / wealth) :op2 (j / job) :op3 (a / age)))))
(s / say-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg2 (m / minister))) :arg1 (i / invite-01 :arg0 (p2 / person :arg0-of (h2 / have-org-role-91 :arg2 (m2 / minister))) :arg1 (i2 / i) :arg2 (a / attend-01 :arg0 (p3 / person) :arg1 (s2 / start-01 :arg1 (y / year :mod (s3 / school))))) :ord (o / ordinal-entity :value 1))
(l / lack-01 :arg0 (e / employer) :arg1 (t / thing :arg0-of (e2 / evidence-01) :mod (d / demonstrably)) :arg0-of (c / cause-01 :arg1 (l2 / lack-01 :arg0 (e3 / employer) :arg1 (d2 / disagree-01 :arg2 (e4 / employer)))))
(p / price-01 :arg1 (t / thing :arg2-of (p2 / price-01) :arg1-of (h / high-02 :degree (m / most))) :arg2 (p3 / post :location (l / location :name (n / name :op1 "Perslyne") :mod (n2 / na))))
(i / infer-01 :arg1 (b / be-02 :arg1 (t / this) :mod (c / certain)))
(g / give-01 :arg1 (n / name) :arg1-of (c / cause-01 :arg0 (s / structure :mod (f / fibrous) :poss (i / it) :arg0-of (g2 / give-01 :arg1 (a / and :op1 (s2 / strength) :op2 (d / dissent-01)) :arg2 (i2 / it)))))
(o / offer-01 :arg0 (w / we) :arg1 (a / and :op1 (p / person :arg0-of (r / read-01)) :op2 (p2 / person :arg0-of (r2 / read-01)) :op3 (p3 / person :arg0-of (r3 / read-01)) :op4 (p4 / person :arg0-of (r4 / read-01)) :op5 (p5 / person :arg0-of (r5 / read-01))) :arg3 (f / form :mod (b / book :mod (e / electronic)) :source (v / valá?ka :arg0 (p6 / person :name (n / name :op1 "Michael")) :arg1 (f2 / format :mod (b2 / broadcast-program :name (n2 / name :op1 "N-A"))))))
(c / contrast-01 :arg1 (f / forget-01 :polarity - :arg0 (i / i) :arg1 (i2 / it)) :arg2 (s / sorry-01 :arg1 (i3 / i)))
(k / know-01 :arg0 (i / i) :arg1 (w / work-01 :polarity - :arg0 (p / person :name (n / name :op1 "Grigory"))))
(o / or :op1 (s / say-01 :arg0 (w / we) :arg1 (k / kill-01 :arg0 (t / they) :arg1 (t2 / they)) :time (e / ever)) :op2 (d / die-01 :arg1 (t3 / they)))
(m / multi-sentence :snt1 (p / person :name (n / name :op1 "Ron" :op2 "Paultard")) :snt2 (p2 / person :name (n2 / name :op1 "Fairheadové")))
(s / shame-01 :arg1 (p / possible-01 :arg1 (a / and :op1 (s2 / steal-01 :arg1 (i / information :arg1-of (p2 / personal-02))) :op2 (e / extend-01 :arg1 (i2 / information) :arg2 (p3 / public)))))
(b / be-located-at-91 :arg1 (f / film :mod (i / italian)) :arg2 (l / location :name (n / name :op1 "Venice")) :mod (w / well :degree (v / very)) :time (y / year :mod (t / this)))
(h / have-03 :arg0 (t / they) :arg1 (k / kahan :arg1-of (b / build-01 :arg0 (t2 / they) :location (c / cz?ste :mod (a / azbestové)))))
(a / and :op1 (w / watch-01 :arg0 (p / person :name (n / name :op1 "Stephen" :op2 "Fairclough")) :arg1 (s / situation) :time (o / over :op1 (w2 / weekend))) :op2 (t / talk-01 :arg0 (p2 / person) :arg2 (p3 / person :arg0-of (p4 / protest-01)) :location (c / country :name (n2 / name :op1 "Belgium"))))
(s / same-01 :arg1 (i / it) :arg2 (c / child :mod (s2 / same)))
(e / expect-01 :polarity - :arg0 (w / we) :arg1 (n / nothing :mod (l / less)) :condition (w2 / write-01 :arg0 (g / god) :arg1 (i / it)))
(s / show-01 :arg0 (d / data :source (f / fly-01)) :arg1 (a / and :op1 (o / obligate-01 :arg1 (a2 / aircraft :source (l / land-01 :ord (o2 / ordinal-entity :value 2))) :arg2 (a3 / abandon-01)) :op2 (s2 / sit-01 :arg1 (a4 / aircraft) :arg2 (22 / 20:40) :time (f2 / final))))
(b / block-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg3 (j / judge-01))) :arg1 (l / law :arg0-of (a / abort-01 :arg1 (c / clinics :mod (a2 / abort-01) :quant (a3 / all)) :arg1-of (p2 / possible-01))) :duration (t / temporary))
(m / multi-sentence :snt1 (b / begin-01 :arg1 (c / career :mod (t / tv) :poss (h / he)) :location (m2 / mid-1970s :arg1-of (l / long-03))) :snt2 (m3 / mimic/comedian :mode (e / expressive) :mod (o / only) :prep-on (t2 / tv) :domain (i / i)))
(a / and :op1 (k / know-03 :arg0 (p / person :name (n / name :op1 "Alex" :op2 "Salmond") :arg0-of (h / have-org-role-91 :arg1 (n2 / nationalist :mod (c / country :name (n3 / name :op1 "England"))) :arg2 (b / boss))) :arg1 (t / this)) :op2 (c2 / cause-01 :arg1 (q / question-03 :arg0 (p2 / person) :arg1 (a2 / and :op1 (w / will-02 :arg0 (p3 / person) :arg1 (r / respect-01 :arg0 (p4 / person) :arg1 (s / sovereign :mod (' / '')))) :op2 (s2 / start-01 :arg0 (p5 / person) :arg1 (p6 / promote-02 :arg0 (p7 / person) :arg1 (c3 / currency :arg1-of (s3 / single-02) :beneficiary (a3 / and :op1 (c4 / country :name (n4 / name :op1 "Scotland")) :op2 (c5 / country :name (n5 / name :op1 "England")))))))) :medium (d / debate-01 :medium (t2 / television)) :arg1-of (r2 / repeat-01)))
(c / cause-01 :arg0 (l / look-01 :arg0 (w / we) :arg1 (p / picture :mod (b / big :degree (m / more)))) :arg1 (s / surface :part-of (h / hose :location (s2 / space))))
(b / begin-01 :arg1 (c / career :medium (t / television) :poss (h / he)) :arg1-of (c2 / cause-01 :arg0 (' / '' :arg0 (m / man :arg1-of (b2 / black-05) :arg1-of (b3 / black-05) :mod (o / only)) :medium (t2 / television))))
(h / have-rel-role-91 :arg0 (p / person :arg0-of (h2 / have-rel-role-91 :arg1 (c / child :quant 2) :arg2 (c2 / child))) :arg1 (p2 / person :arg0-of (h3 / have-rel-role-91 :arg1 (c3 / child) :arg2 (c4 / child))) :arg2 (p3 / person :arg0-of (k / know-01 :arg1 (p4 / pregnancy :arg1 (p5 / pregnancy :arg0 (p6 / person))) :arg1-of (a / allege-01))) :mod (j / just))
(a / and :op1 (r / realize-01 :arg0 (p / person :mod (c / country :name (n / name :op1 "N-A"))) :arg1 (n2 / need-01 :arg0 (p2 / person :arg0-of (w / work-01)) :arg1 (o / organize-01 :arg0 (p3 / person) :arg1 (a2 / and :op1 (o2 / organize-01 :arg0 (p4 / person)) :op2 (p5 / promote-02 :arg0 (p6 / person)))))) :op2 (i / infer-01 :arg1 (i2 / include-01 :arg1 (r2 / right-05 :arg1 (p7 / person) :arg2 (c2 / create-01 :arg0 (p8 / person) :arg1 (a3 / association) :purpose (a4 / and :op1 (s / safeguard-01 :arg0 (p9 / person) :arg1 (a5 / association)) :op2 (i3 / improve-01 :arg0 (p10 / person) :arg1 (a6 / and :op1 (p11 / person :arg0-of (w2 / work-01 :mod (w3 / work-01))) :op2 (p12 / person :mod (e / every) :arg0-of (o3 / occupy-01 :mod (e2 / every)))) :mod (e3 / every))))) :arg1-of (o4 / open-04)) :arg2 (p13 / person :arg0-of (w4 / work-01))))
(p / possible-01 :arg1 (s / see-01 :arg0 (r / report :mod (s2 / such)) :arg1 (f / fan :location (c / country :name (n / name :op1 "Czech" :op2 "Republic"))) :time (o / ordinal-entity :value 1)))
(a / and :op1 (v / visit-01 :quant 55 :arg1 (p / person :quant 55)) :op2 (b / be-located-at-91 :arg1 (p2 / person) :arg2 (t / top :part-of (t2 / traffic :mod (i / internet))) :ord (o / ordinal-entity :value 4)))
(c / cause-01 :arg0 (h / hit-01 :arg0 (a / and :op1 (m / man) :op2 (w / woman)) :arg1 (e / expression :mod (c2 / common :degree (m2 / most)) :beneficiary (a2 / and :op1 (m3 / man) :op2 (w2 / woman))) :time (a3 / at-first)) :arg1 (b / become-01 :arg1 (h2 / hug) :arg2 (e2 / expression :mod (c3 / common :degree (m4 / most)) :beneficiary (a4 / and :op1 (m5 / man) :op2 (w3 / woman))) :time (a5 / at-first)))
(k / kill-01 :arg0 (h / he) :arg1 (p / policeman) :location (l / location :name (n / name :op1 "Fergusonu") :arg1-of (a / arm-01 :polarity -) :mod (y / young) :arg1-of (a2 / arm-01 :polarity -)) :time (b / begin-01 :arg1 (m / month)))
(l / lead-03 :arg0 (i / it) :arg2 (v / vyskakovali :arg1 (c / country :name (n / name :op1 "N-A")) :mod (l2 / large)))
(c / come-01 :arg1 (t / thing :arg2-of (r / result-01 :arg1 (d / divide-02))))
(o / obligate-01 :arg1 (w / we) :arg2 (e / examine-01 :arg0 (w2 / we) :arg1 (h / hose :prep-with (r / resolution :mod (g / good :degree (m / more)) :arg1-of (s / significant-02)))))
(a / answer-01 :arg1 (a2 / and :op1 (a3 / assume-01 :arg0 (p / person :name (n / name :op1 "Kaluza")) :arg1 (l / line) :manner (q / quiet)) :op2 (a4 / and :op1 (e / express-01 :arg0 (y / you) :arg1 (p2 / person :name (n2 / name :op1 "Oskar" :op2 "Klein") :arg0-of (h / have-org-role-91 :arg1 (s / swedish) :arg2 (m / mathematician))) :manner (q2 / quiet)) :op2 (c / clarified :arg0 (p3 / person) :arg1 (s2 / state-01 :arg1 (p4 / possible-01 :arg1 (h2 / have-03 :arg0 (g / geometry :name (n3 / name :op1 (s3 / spatial) :op2 (g2 / geometry)) :poss (u / universe :poss (w / we))) :arg1 (d / dimensions :mod (l2 / large)))))))) :arg2 (c2 / curled :arg0 (i / i) :arg1 (d2 / dimensions)))
(p / person :arg0-of (p2 / play-01) :mod (e / even) :arg0-of (p3 / participate-01 :arg1 (h / hat-trick :mod (g / golden))))
(q / question-01 :arg1 (b / believe-01 :arg0 (y / you) :arg1 (a / amr-unknown)) :time (d / debate-01 :arg0 (b2 / believe-01) :arg1 (t / thing :quant (a2 / about :op1 1) :arg1-of (c / conflict-01 :accompanier (r / religion :poss (t2 / they))))))
(m / multi-sentence :snt1 (c / come-01 :arg1 (p / person :name (n / name :op1 "Joe" :op2 "Gault") :mod (s / school :mod (s2 / soon)) :mod (t / that)) :arg4 (o / organization :name (n2 / name :op1 "Pepperdine")) :time (s3 / soon)) :snt2 (r / recommend-01 :arg0 (h / he) :arg1 (f / follow-02 :arg0 (h2 / he) :arg1 (s4 / say-01 :arg0 (h3 / he) :arg1 (b / buy-01 :arg0 (y / you) :arg1 (b2 / book :mod (r2 / right))) :arg1-of (c2 / conform-01 :arg2 (i / isbn))))))
(a / and :op1 (s / suffer-01 :arg0 (c / country :name (n / name :op1 "Czech" :op2 "Republic") :arg1-of (s2 / suffer-01 :arg0 (p / person :quant (b / between :op1 (t / three) :op2 21)))) :arg1 (p2 / person :quant (a2 / approximately :op1 (t2 / three)))) :op2 (u / undergo-28 :arg1 (p3 / person :quant 21 :arg0-of (h / have-rel-role-91 :arg2 (p4 / patient))) :arg2 (t3 / treat-03 :arg0 (p5 / person) :arg1 (c2 / cell :mod (s3 / stem)) :manner (e / experiment-01))))
(m / multi-sentence :snt1 (h / have-03 :arg0 (h2 / he) :arg1 (p / problem) :prep-with (i / it) :time (y / young :domain (h3 / he))) :snt2 (r / remember-01 :mode (i2 / imperative) :arg0 (y2 / you) :arg1 (a / and :op1 (l / lay :arg1 (f / face :part-of (h4 / he)) :arg2 (f2 / face :part-of (h5 / he)) :source (f3 / face :part-of (h6 / he))) :op2 (l2 / lay :arg0 (h7 / he) :duration (t / temporal-quantity :quant (N / N-A) :unit (h8 / hour))))))
(o / obligate-01 :arg1 (i / i) :arg2 (c / chance-02 :arg0 (i2 / i) :arg1 (c2 / chance-02 :arg0 (i3 / i))))
(m / multi-sentence :snt1 (d / destroy-01 :mod (p / particular)) :snt2 (c / cause-01 :arg0 (c2 / cancer :mod (a / amr-unknown)) :arg1 (c3 / cancer :mod (a2 / amr-unknown) :arg0-of (c4 / cause-01 :arg1 (c5 / cancer :mod (k / kill))))))
(a / and :op1 (m / mean-01 :arg1 (r / resolution :arg0-of (o / oppose-01 :arg1 (p / person :arg0-of (h / have-org-role-91 :arg3 (j / judge-01))))) :arg2 (p2 / possible-01 :arg1 (c / carrying :arg0 (d / doctor) :arg1 (a2 / abortions :arg1-of (l / legal-02)) :duration (t / temporary)))) :op2 (o2 / obligate-01 :arg2 (o3 / obtain-01 :arg0 (d2 / doctor) :arg1 (p3 / permit-01)) :time (m2 / meantime)))
(k / know-01 :arg0 (w / we) :arg1 (t / thing :arg0-of (c / cause-01)) :frequency (s / sometimes))
(w / water :domain (w2 / water))
(a / and :op1 (r / reiterated :arg0 (c / call-02 :arg0 (p / political-party :name (n / name :op1 "N-A") :poss (i / i)) :arg1 (c2 / call-02 :arg0 (p2 / party :poss (i2 / i)) :arg1 (g / government-organization :name (n2 / name :op1 "Parliament")))) :arg1 (p3 / possible-01 :arg1 (w / win-01 :arg0 (s / side :mod (t / this)) :arg1 (e / elect-01 :mod (e2 / early))))) :op2 (r2 / ready-02 :arg1 (c3 / country) :arg2 (f / follow-02 :arg0 (c4 / country) :arg1 (c5 / country))))
(a / and :op2 (r / refer-01 :arg0 (y / you) :arg1 (n / newspaper :name (n2 / name :op1 "N-A") :arg0-of (e / enter-01 :arg1 (s / shoe :mod (h / human)))) :time (r2 / refer-02 :arg0 (y2 / you) :arg1 (y3 / you) :arg2 (w / word :mod (' / '') :poss (g / god)))))
(e / even :op1 (p / plane :mod (r / racing)))
(a / and :op2 (w / worry-02 :mode (i / imperative) :arg0 (y / you) :arg1 (p / person :name (n / name :op1 "Lafatu"))))
(i / imagine-01 :mode (i2 / imperative) :arg0 (y / you) :arg1 (p / perimeter :arg0 (w / we) :arg1 (p2 / perimeter :mod (t / thick :degree (r / relative)) :arg1-of (b / black-05))))
(c / cause-01 :arg0 (w / write-01 :arg0 (i / i) :arg1 (s / something :topic (i2 / it))) :arg1 (d / deafen :domain (i3 / it)) :time (w2 / write-01 :arg0 (i4 / i) :arg1 (s2 / something :topic (i5 / it))))
(r / refuse-01 :arg0 (c / country :name (n / name :op1 "China")) :arg1 (g / give-01 :arg0 (c2 / country) :arg1 (p / power) :arg2 (c3 / choose-01 :arg0 (c4 / country) :arg1 (p2 / promise-01 :arg0 (c5 / country) :arg2 (c6 / choose-01 :arg0 (p3 / person :arg0-of (l / lead-02)) :arg1 (r2 / revenge))))))
(s / say-01 :arg1 (t / thing :arg2-of (a / advise-01 :arg0 (y / you) :arg1 (a2 / and :op1 (p / person :arg0-of (h / have-org-role-91 :arg1 (s2 / separatist) :arg2 (s3 / soldier))) :op2 (p2 / person :arg0-of (h2 / have-org-role-91 :arg1 (c / country :name (n / name :op1 "N-A")) :arg2 (s4 / soldier)))))) :arg2 (a3 / amr-unknown))
(s / something :polarity - :topic (r / recommend-01 :arg1 (a / and :op1 (k / know-01 :arg0 (c / child)) :op2 (s2 / something :polarity - :arg1-of (e / experience-01 :arg1-of (r2 / recommend-01))))))
(e / evaluate :polarity - :arg0 (s / study :mod (c / c. :mod (s2 / sub))))
(c / contrast-01 :arg2 (c2 / contrary-01 :arg1 (a / amount :quant-of (a2 / amount :quant (l / less-than :op1 1000))) :arg2 (' / '' :quant (3 / 300-400) :mod (o / only))) :arg1-of (c3 / contrary-01 :arg2 (e / estimate-01 :time (i / initial))))
(m / multi-sentence :snt1 (i / increase-01 :arg0 (t / tax-01 :arg2 (t2 / tax-01 :arg3 (t3 / tax-01 :arg3 (t4 / tax-01 :arg3 (t5 / tax-01 :arg3 (m2 / monetary-quantity :quant (N / N-A) :unit (d / dollar :mod (r / renminbi))) :arg1-of (p / personal-02)))))) :arg1 (t6 / thing :arg1-of (t7 / tax-01 :arg3 (t8 / thing :arg1-of (t9 / tax-01 :arg3 (t10 / thing :arg1-of (t11 / tax-01 :arg3 (t12 / thing :arg1-of (t13 / tax-01 :arg3 (t14 / thing :arg2-of (c / cost-01 :arg1 (t15 / thing :arg2-of (c2 / cost-01 :arg1 (t16 / thing :arg2-of (c3 / cost-01 :arg1 (t17 / thing :arg2-of (c4 / cost-01 :arg1 (t18 / thing :arg2-of (c5 / cost-01 :arg1 (t19 / thing :arg2-of (p2 / price-01))))))))))))))))))))) :snt2 (i2 / increase-01 :arg1 (r2 / rate-entity-91 :arg1 (p3 / percentage-entity :value (N2 / N-A)) :arg2 (t20 / temporal-quantity :quant (N3 / N-A) :unit (y / year))) :arg4 (m3 / monetary-quantity :quant (N4 / N-A) :unit (d2 / dollar :mod (c6 / country :name (n / name :op1 "N-A"))))))
(r / room :quant 1 :mod (o / only) :condition (b / be-located-at-91 :arg2 (l / life)))
(s / say-01 :arg0 (y / you) :arg1 (a / amr-unknown) :arg2 (p / perform-01 :arg0 (h / he)))
(a / and :op1 (a2 / analyzed :arg0 (p / person :arg0-of (r / research-01)) :arg1 (r2 / record :mod (m / medicine) :mod (m2 / more-than :op1 (s / slash :op1 (m3 / more-than :op1 (m4 / monetary-quantity :quant (N / N-A))) :op2 (s2 / slash :op1 (t / temporal-quantity :quant (N2 / N-A) :unit (y / year)) :op2 (t2 / temporal-quantity :quant (N3 / N-A) :unit (y2 / year))))))) :op2 (f / find-01 :arg0 (p2 / person) :arg1 (t3 / temporal-quantity :quant (N4 / N-A) :unit (y3 / year) :mod (o / only)) :time (a3 / after :op1 (l / live-01 :arg0 (p3 / person)))))
(m / multi-sentence :snt1 (s / say-01 :arg0 (a / and :op1 (p / person :name (n / name :op1 "Tony" :op2 "Pidgley") :arg0-of (h / have-org-role-91 :arg1 (c / company :arg0-of (d / develop-02)) :arg2 (c2 / chairman))) :op2 (p2 / person :arg0-of (h2 / have-org-role-91 :arg1 (c3 / company :arg0-of (d2 / develop-02)) :arg2 (c4 / chairman))) :op3 (p3 / person :arg0-of (h3 / have-org-role-91 :arg1 (c5 / company :arg0-of (d3 / develop-02)) :arg2 (c6 / chairman))) :op4 (p4 / person :arg0-of (h4 / have-org-role-91 :arg1 (c7 / company :arg0-of (d4 / develop-02)) :arg2 (c8 / chairman))) :op4 (p5 / person :arg0-of (h5 / have-org-role-91 :arg1 (c9 / company :arg0-of (d5 / develop-02)) :arg2 (c10 / chairman))) :op5 (p6 / person :arg0-of (h6 / have-org-role-91 :arg1 (c11 / company :arg0-of (d6 / develop-02)) :arg2 (c12 / chairman)))) :arg1 (' / '' :arg1 (m2 / market)) :time (s2 / since :op1 (b / begin-01 :arg1 (m3 / market :time (c13 / current) :mod (f / finance)) :location (p7 / point :arg1-of (h7 / high-02))))) :snt2 (a2 / adds :arg0 (h8 / he)))
(c / contrast-01 :arg1 (p / possible-01 :arg1 (t / tell-01 :arg0 (h / he) :arg1 (' / '' :arg1 (s / she)) :arg2 (s2 / she))) :arg2 (s3 / soon :degree (t2 / too)))
(r / recommend-01 :arg1 (l / leave-11 :arg0 (i / it)))
(a / and :op1 (u / understand-01 :arg0 (i / i) :arg1 (t / this)) :op2 (a2 / and :op1 (e / eye :part-of (h / he)) :op2 (e2 / eye :part-of (h2 / he)) :domain (e3 / eye :part-of (h3 / he)) :extent (w / whole) :arg1-of (c / cause-01 :arg0 (a3 / and :op1 (l / long-03 :arg1 (e4 / eye :part-of (h4 / he)) :arg2 (w2 / whole)) :op2 (t2 / thin-03 :arg1 (h5 / hose :mod (g / garden :polarity -)) :beneficiary (p / person :mod (w3 / whole)))))))
(c / cause-01 :arg0 (r / reform-01 :arg0 (p / person :arg0-of (l / lead-02 :arg1 (c2 / country :name (n / name :op1 "N-A")))) :mod (p2 / politics)) :arg1 (w / worry-02 :arg0 (p3 / person :arg0-of (l2 / lead-02) :mod (c3 / country :name (n2 / name :op1 "N-A"))) :arg1 (e / extend-01 :arg1 (r2 / require-01 :arg1 (d / democratization)) :arg2 (c4 / city :mod (o / other))) :mod (m / main)))
(p / place :polarity - :beneficiary (h / he) :domain (i / it) :condition (l / like-01 :polarity - :arg0 (s / someone) :arg1 (c / crowd)))
(g / gasped :mod (w / world) :time (b / bring-01 :arg0 (a / alyonu :mod (l / little)) :arg1 (a2 / arm :part-of (c / country :name (n / name :op1 "N-A"))) :arg2 (a3 / arm :part-of (c2 / country :name (n2 / name :op1 "N-A")))) :li 2004)
(c / contrast-01 :arg2 (p / possible-01 :arg1 (m / more :quant (m2 / much))))
(s / say-01 :arg0 (p / person :name (n / name :op1 "Marina") :arg0-of (h / have-rel-role-91 :arg1 (h2 / he) :arg2 (m / mother))) :arg1 (p2 / pain :arg1 (p3 / pain-01) :time (a / always) :location (h3 / here)) :li 42)
(a / and :op2 (s / succeed-01 :arg1 (i / it)))
(s / say-01 :arg0 (p / person :name (n / name :op1 "Shani" :op2 "Bartová") :arg0-of (h / have-rel-role-91 :arg1 (s2 / she) :arg2 (d / daughter :mod (e / eleven-year-old)))) :arg1 (o / odd :domain (g / go-01 :arg1 (i / it) :direction (b / back) :destination (s3 / school)) :mod (o2 / odd :degree (b2 / bit))))
(c / continue-01 :arg1 (t / team))
(e / enough :mod (s / small) :domain (r / reveal-01 :arg1 (s2 / she)) :condition (s3 / small :domain (s4 / size :poss (d / dimension :mod (e2 / extra)))) :mod (e3 / enough) :arg1-of (c / cause-01 :arg0 (o / over :op1 (s5 / strength :poss (i / instrument :arg1-of (m / modern-02) :location (e4 / enlargement))))))
(h / have-03 :arg0 (l / longest) :arg1 (t / temporal-quantity :quant (N / N-A) :unit (m / month)))
(c / cause-01 :arg0 (a / amr-unknown) :arg1 (c2 / come-01 :polarity - :arg1 (a2 / and :op1 (n / nervous) :op2 (o / other) :quant (s / some)) :location (h / here) :arg1-of (c3 / cause-01 :arg0 (a3 / amr-unknown))))
(d / do-02 :polarity - :arg0 (i / it) :arg1 (l / life))
(a / and :op1 (r / return-01 :arg1 (p / person :name (n / name :op1 "Honza")) :arg4 (p2 / pentatonice)) :op2 (t / try-01 :arg0 (p3 / person) :arg1 (p4 / put-01 :arg0 (p5 / person) :arg1 (i / it) :arg2 (t2 / together) :manner (t3 / together))) :time (t4 / time :mod (n2 / next)))
(c / contrast-01 :arg1 (r / refuse-01 :arg0 (p / part :part-of (n / nobody)) :arg1 (i / image :mod (f / false))) :arg2 (g / grant-01 :arg0 (i2 / image :arg1-of (q / question-01) :quant (s / several)) :arg1 (i3 / image) :time (a / already)))
(a / and :op1 (a2 / arrest-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg3 (j / judge-01))) :arg1 (p2 / person :arg0-of (h2 / have-org-role-91 :arg1 (p3 / police :mod (s / state)) :arg3 (a3 / apprentice-01 :arg0 (p4 / person)))) :arg3 (c / connect-01 :arg1 (p5 / person) :arg2 (c2 / corrupt-01))) :op2 (h3 / hear-01 :arg0 (p6 / person :arg0-of (h4 / have-org-role-91 :arg3 (j2 / judge-01))) :arg1 (p7 / person)))
(f / fall-01 :arg1 (e / economy :mod (l / large :degree (m / most :ord (o / ordinal-entity :value 2)) :compared-to (c / country :name (n / name :op1 "France")))) :arg4 46.9 :quant 46.9)
FAILED_TO_PARSE#Number of opening and closing brackets doesn't match.
(m / multi-sentence :snt1 (r / resemble-01 :arg1 (t / thing :arg1-of (r2 / resemble-01 :arg2 (t2 / thing :arg1-of (r3 / require-01 :arg0 (p / politician)))) :mod (g / great)) :arg2 (t3 / thing :arg1-of (r4 / require-01 :arg0 (p2 / politician))) :mod (g2 / great)) :snt2 (c / come-01 :polarity - :arg1 (t4 / thing :arg1-of (r5 / require-01))))
(a / and :op1 (b / begin-01 :arg1 (c / career :arg1-of (c2 / consult-01)) :location (o / organization :name (n / name :op1 "Bain" :op2 "and" :op3 "Co"))) :op2 (c3 / continue-01 :arg1 (a2 / and :op1 (o2 / organization :name (n2 / name :op1 "Morgan" :op2 "Stanley")) :op2 (b2 / bombadier) :op3 (o3 / organization :name (n3 / name :op1 "Pearsons") :mod (m / media)) :op4 (o4 / organization :name (n4 / name :op1 "Pearsons") :mod (m2 / media)))))
(a / announce-01 :arg0 (c / company) :arg1 (s / sell-01 :arg0 (c2 / company) :arg1 (e / estate :mod (r / real)) :time (s2 / since :op1 (e2 / end-01 :arg1 (y / year))) :time (s3 / since :op1 (e3 / end-01 :arg1 (y2 / year))) :arg1-of (c3 / cause-01 :arg0 (b / before :op1 (c4 / crisis :time (d / date-entity :month 4 :day 3) :location (b2 / before :op1 (c5 / crisis :location (t / thing :quant 2007))))))))
(c / cause-01 :arg1 (a / and :op1 (a2 / altered :arg1 (b / bible) :manner (d / deliberate)) :op2 (a3 / altered :arg1 (a4 / and :op1 (r / reason :mod (r2 / religious)) :op2 (r3 / reason :mod (r4 / religious))))))
(c / contrast-01 :arg2 (r / remove-01 :arg0 (t / they) :arg1 (b / book :quant 10 :arg0-of (c2 / cause-01 :arg1 (a / and :op1 (b2 / book :quant (m / more :degree (s / so))) :op2 (b3 / book :arg1-of (a2 / approve-01 :arg0 (b4 / book))))))))
(a / and :op1 (t / try-01 :arg0 (i / i) :arg1 (c / clap :arg0 (i2 / i) :arg1 (e / everyone :arg0-of (o / offer-01 :arg1 (h / hand))))) :op2 (a2 / advise-01 :arg0 (i3 / i) :arg1 (p / person :quant 10 :arg1-of (i4 / include-91 :arg2 (p2 / person :arg0-of (h2 / have-org-role-91 :arg2 (h3 / head-of-state))) :arg3 (h4 / half :mod (s / such)))) :mod (a3 / also)))
(d / deny-01 :arg0 (p / person :name (n / name :op1 "Stewart") :arg1-of (i / include-91 :arg2 (p2 / person :quant 78 :location (p3 / peninsula :name (n2 / name :op1 "N-A"))) :arg3 (c / charge-05 :mod (a / anstrutheru)))) :arg1 (p4 / person :quant 78 :arg0-of (h / have-org-role-91 :arg2 (- / -rrb-))) :location (c2 / court))
(m / multi-sentence :snt1 (p / person :name (n / name :op1 "Viktoria" :op2 "Plze")) :snt2 (l / lead-03 :arg0 (l2 / league :mod (f / football) :arg0-of (l3 / lead-03 :arg2 (p2 / point :location (i / in-front-of :op1 (a / and :op1 (c / country :name (n2 / name :op1 "N-A")) :op2 (' / '') :mod (b / both)))))) :arg2 (p3 / point)))
(d / day :ord (o / ordinal-entity :value 1 :range (d2 / day :ord (o2 / ordinal-entity :value 1) :part-of (s / spring))) :arg0-of (i / impact-01 :arg1 (f / fly-01 :location (a / airport :location (l / location :name (n / name :op1 "Adelaide"))))))
(t / take-01 :arg1 (s / schoolchildren :mod (s2 / small :degree (m / most))) :arg4 (c / class :poss (t2 / they)) :arg1-of (c2 / cause-01 :arg0 (w / wait-01 :arg1 (p / person :arg0-of (t3 / teach-01)) :arg2 (a / arrive-01 :arg1 (p2 / person) :arg3 (p3 / person :arg0-of (h / have-org-role-91 :arg2 (p4 / president)))))))
(p / prohibit-01 :arg1 (a / asbestos) :arg2 (c / country :quant (m / more-than :op1 50)) :concession (c2 / continue-01 :arg1 (u / use-01 :arg1 (a2 / asbestos :mod (w / white)) :arg2 (m2 / material :arg1-of (c3 / cheap-02))) :location (p2 / part :part-of (w2 / world) :quant (m3 / many))))
(c / contrast-01 :arg2 (n / nova :arg0 (p / program :mod (n2 / news) :mod (m / main)) :arg1 (s / show-04 :medium (t / tv)) :time (s2 / still)))
(r / return-01 :arg1 (p / person :name (n / name :op1 "Lucie")) :arg4 (c / camera) :manner (d / dramatic))
(c / constricted :arg1 (h / heart :part-of (s / she)) :arg1-of (c2 / cause-01 :arg0 (f / fact :domain (t / take-01 :arg0 (p / person :quant (f2 / few :op1 (t2 / temporal-quantity :quant (N / N-A) :unit (m / month)))) :arg1 (s2 / she)))))
(m / multi-sentence :snt1 (s / say-01 :arg0 (p / person :name (n / name :op1 "Le" :op2 "Pen") :arg0-of (h / have-org-role-91 :arg2 (m2 / marine))) :arg1 (s2 / say-01 :arg0 (p2 / person) :arg1 (e / expect-01 :polarity - :arg0 (p3 / person) :arg1 (p4 / person :name (n2 / name :op1 "Vallsova") :mod (n3 / new) :arg0-of (g / govern-01 :arg1 (g2 / government-organization)) :mod (n4 / new)) :time (b / before :op1 (n5 / now) :quant (f / few :op1 (t / temporal-quantity :quant (N / N-A) :unit (m3 / month))))))) :snt2 (r / right-06 :mode (i / interrogative) :degree (e2 / extreme)))
(a / admit-01 :arg0 (h / he) :arg1 (i / it))
(c / contrast-01 :arg2 (i / ignore-01 :arg0 (c2 / creationists) :arg1 (t / this) :mod (s / still)))
(b / behave :arg0 (h / he) :arg1 (g / girl :mod (t / teenage)))
(c / call-03 :arg0 (c2 / country :name (n / name :op1 "Israel")) :arg1 (a / and :op1 (d / disarm-01 :arg0 (o / organization :name (n2 / name :op1 "Hamas"))) :op2 (r / recover-01 :arg1 (b / body :consist-of (p / person :quant 2 :arg0-of (h / have-org-role-91 :arg2 (s / soldier)))))) :arg2 (w / war))
(r / rounds :arg1 (d / dimension :mod (a / additional)) :mod (i / important :degree (m / most)) :arg1-of (c / cause-01 :arg0 (s / suggest-01 :arg0 (e / erroneously :name (n / name :op1 (t / two-dimensional) :op2 (e2 / erroneously)) :mod (t2 / two-dimensional)))) :mod (i2 / important :degree (m2 / most)))
(a / and :op1 (h / have-03 :arg0 (w / we) :arg1 (g / game :mod (g2 / good :degree (m / more))) :time (a2 / already)) :op2 (t / threaten-01 :arg0 (w2 / we) :arg2 (s / situation :mod (s2 / standard) :mod (o / only))) :time (a3 / already) :ord (o2 / ordinal-entity :value 2))
(c / contrast-01 :arg1 (s / sentence-01 :arg1 (i / i) :arg2 (t / thing :arg2-of (s2 / sentence-01 :arg1 (i2 / i))) :time (n / now)) :arg2 (h / hold-01 :arg0 (i3 / i) :arg1 (c2 / contradiction :mod (i4 / irreconcilable))))
(a / and :op2 (c / come-01 :arg1 (p / person :quant (a2 / about :op1 150)) :arg4 (l / location :name (n / name :op1 "Town" :op2 "Hall")) :time (m / meet-03 :arg1-of (d / describe-01 :arg2 (a3 / anti-summit :arg1 (p2 / person))))))
(a / and :op1 (b / become-01 :arg1 (p / person :arg0-of (p2 / play-01 :location (o / organization :name (n / name :op1 "Canning" :op2 "Vale")))) :arg2 (p3 / person :quant 1 :arg1-of (i / include-91 :arg2 (p4 / person :quant 5 :arg0-of (h / have-org-role-91 :arg1 (o2 / organization) :arg3 (p5 / play-01))))) :time (w / weekend :mod (l / last))) :op2 (w2 / win-01 :arg0 (p6 / person) :arg1 (r / rate-entity-91 :arg1 (m / monetary-quantity :quant 7,5 :unit (d / dollar) :mod (i2 / incredible)) :arg2 (t / temporal-quantity :quant (N / N-A) :unit (w3 / week)) :mod (o3 / only))) :time (w4 / weekend :mod (l2 / last)))
(m / multi-sentence :snt1 (v / volejbalist :mode (i / interrogative)) :snt2 (b / bring-01 :mode (i2 / imperative) :arg0 (y / you) :arg1 (r / record :mod (a / audience)) :location (c / city :name (n / name :op1 "Warsaw"))))
(r / receive-01 :arg0 (s / stalls :quant 103 :mod (p / parking)) :arg1 (y / year :quant (a / approximately :op1 12.3)))
(c / contrast-01 :arg1 (c2 / clear-06 :polarity - :arg1 (o / or :mode (i / interrogative) :op1 (w / want-01 :arg0 (s / she) :arg1 (s2 / save-02 :arg0 (s3 / she) :arg1 (t / toad))) :op2 (w2 / want-01 :arg0 (s4 / she) :arg1 (e / eat-01 :arg0 (s5 / she) :manner (a / alone))))) :arg2 (r / relevant-01 :arg1 (t2 / that)))
(l / lend-01 :arg0 (b / book :mod (t / this)) :arg1 (f / form :mod (l2 / licence :mod (e / electronics)) :arg1-of (v / valid-02 :arg2 (p / period :mod (c / certain) :arg1-of (v2 / valid-02 :arg2 (a / and :op1 (o / organization :name (n / name :op1 "Amazon.com")) :op2 (c2 / country :name (n2 / name :op1 "N-A")) :op3 (o2 / organization :name (n3 / name :op1 "Barnes" :op2 "&" :op3 "Noble"))))))) :mod (e2 / essential) :frequency (s / sometimes))
(a / and :op1 (a2 / all-students) :op2 (n / nurse) :op3 (c / custom) :op4 (u / use-01 :arg1 (g / gatekeepers-corridor)))
(a / and :op1 (p / picked :arg1 (p2 / person :quant (N / N-A) :mod (y / young) :arg0-of (t / tour-01)) :arg2 (p3 / plane)) :op2 (t2 / take-01 :arg1 (p4 / person) :arg3 (s / safe-01)) :time (a2 / after :op1 (s2 / spend-02 :arg0 (p5 / person) :arg1 (n / night) :location (l / location :name (n2 / name :op1 "Blue" :op2 "Mountains") :location (s3 / state :name (n3 / name :op1 "New" :op2 "South" :op3 "Wales"))))))
(s / say-01 :arg0 (p / person :arg0-of (r / represent-01 :arg1 (c / country :name (n / name :op1 "N-A")))) :arg1 (v / violate-01 :arg1 (p2 / privacy) :arg1-of (c2 / clear-06)))
(i / increase-01 :arg1 (t / tax-01 :arg3 (b / below :op1 (a / average-01))) :location (s / state :name (n / name :op1 "Virginia")) :mod (o / only))
(s / survive-01 :arg0 (a / amr-unknown) :manner (h / holiday))
FAILED_TO_PARSE#Number of opening and closing brackets doesn't match.
(s / say-01 :arg0 (p / person :name (n / name :op1 "Barry" :op2 "Levison") :arg1-of (p2 / place-01 :arg2 (o / outside :op1 (c / compete-01 :location (o2 / outside :op1 (c2 / compete-01 :arg1-of (p3 / place-01 :arg2 (o3 / outside :op1 (c3 / compete-01 :arg1-of (p4 / place-01 :arg2 (s2 / spirit))))))))))) :arg1 (r / role :mod (p5 / profane) :poss (p6 / person :name (n2 / name :op1 "Pacino")) :arg1-of (c4 / close-10 :arg2 (d / depression) :time (e / end-01 :arg1 (a / and :op1 (c5 / career :poss (p7 / person)) :op2 (l / life :arg1-of (p8 / personal-02)))))) :arg1-of (p9 / place-01 :arg2 (o4 / outside :op1 (c6 / compete-01 :arg1-of (p10 / place-01 :arg2 (o5 / outside :op1 (c7 / compete-01 :location (o6 / outside :op1 (c8 / compete-01 :arg1-of (p11 / place-01 :arg2 (o7 / outside :op1 (c9 / compete-02))))))))))))
(s / say-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (o / organization :name (n / name :op1 "Seventh" :op2 "Framework" :op3 "Programme")) :arg2 (d / director)) :arg0-of (h2 / have-org-role-91 :arg1 (o2 / organization) :arg2 (d2 / director))) :arg1 (b / be-located-at-91 :arg1 (a / and :op1 (c / city :name (n2 / name :op1 "Sydney")) :op2 (c2 / city :name (n3 / name :op1 "Melbourne"))) :arg2 (m / market)))
(c / cause-01 :arg0 (n / new-01 :arg1 (c2 / car) :arg1-of (c3 / complete-02)) :arg1 (t / think-01 :arg0 (i / i) :arg1 (s / something :arg1-of (r / resemble-01 :arg2 (t2 / this))) :time (e / ever)))
(a / and :op1 (f / force-01 :arg1 (p / person :mod (c / country :name (n / name :op1 "N-A"))) :arg2 (c2 / choose-01 :arg0 (p2 / person) :arg1 (b / between :op1 (s / society :mod (c3 / civil) :mod (c4 / country :name (n2 / name :op1 "N-A"))) :op2 (f2 / financier :mod (c5 / city))))) :op2 (f3 / fall-07 :arg1 (p3 / person) :arg2 (t / trapped :mod (t2 / this))))
(f / fear-01 :arg0 (i / i) :arg1 (a / at-least :op1 (p / product-of :op1 300 :op2 5)) :time (a2 / always))
(s / say-01 :arg0 (p / person :name (n / name :op1 "Clayson" :op2 "Monyela") :arg0-of (h / have-org-role-91 :arg1 (g / government-organization :arg0-of (g2 / govern-01 :arg1 (c / country :name (n2 / name :op1 "N-A")))) :arg2 (s2 / spokesman))) :arg1 (l / look-02 :arg0 (a / action :mod (m / military)) :arg1 (a2 / attempt-01 :arg0 (a3 / action) :arg1 (o / overthrow-01 :arg0 (a4 / action) :arg1 (g3 / government-organization :arg0-of (g4 / govern-01))))))
(c / contrast-01 :arg1 (b / be-located-at-91 :arg1 (p / person :name (n / name :op1 "Zachránci")) :arg2 (w / war-01 :arg0 (d / doctor))) :arg2 (d2 / do-02 :polarity - :arg0 (w2 / we) :mod (c2 / certain)))
(d / differ-02 :arg1 (i / it) :mod (s / such) :arg1-of (c / cause-01 :arg0 (a / amr-unknown)))
(r / return-01 :arg1 (w / we) :location (s / south :part-of (c / country :name (n / name :op1 "Russia"))) :purpose (s2 / seek-01 :arg0 (w2 / we) :arg1 (v / victim :quant (s3 / some) :arg1-of (i / include-91 :arg2 (v2 / victim)) :arg0-of (e / escape-01 :arg1 (d / die-01 :arg1 (v3 / victim))))) :time (a / after :op1 (t / temporal-quantity :quant (N / N-A) :unit (y / year))))
(w / want-01 :polarity - :arg0 (t / they) :arg1 (p / play-01 :arg0 (t2 / they) :arg1 (g / game :quant (m / more :mod (a / any))) :arg2 (o / oligarch :mod (c / country :name (n / name :op1 "N-A")))))
(m / multi-sentence :snt1 (a / allow-01 :arg0 (i / it) :arg1 (c / capture-01 :arg0 (y / you) :arg1 (l / light :quant (m2 / more)) :location (p / photos-the :arg1-of (d / deep-02 :degree (m3 / more)))) :mod (a2 / also)) :snt2 (s / see-01 :arg0 (y2 / you)))
(r / remain-01 :arg1 (p / person :arg0-of (r2 / remain-01 :arg1 (p2 / person) :arg3 (d / dishes))) :arg3 (p3 / plumbers :arg1 (p4 / person)))
(m / multi-sentence :snt1 (a / and :op1 (t / turn-02 :arg0 (a2 / and :op1 (s / she) :op2 (p / person :arg0-of (h / have-rel-role-91 :arg1 (m2 / man) :arg2 (s2 / shoulders))) :op3 (p2 / person :arg0-of (h2 / have-rel-role-91 :arg1 (m3 / man) :arg2 (s3 / slumped))) :op4 (p3 / person :arg0-of (h3 / have-rel-role-91 :arg1 (m4 / man) :arg2 (d / defeated))) :op5 (p4 / person :arg0-of (h4 / have-rel-role-91 :arg1 (m5 / man) :arg2 (d2 / defeated))) :op6 (p5 / person :arg0-of (h5 / have-rel-role-91 :arg1 (m6 / man) :arg2 (d3 / defeated))) :op6 (p6 / person :arg0-of (h6 / have-rel-role-91 :arg1 (m7 / man) :arg2 (d4 / defeated))) :op7 (p7 / person :arg0-of (h7 / have-rel-role-91 :arg1 (m8 / man) :arg2 (c / child))) :op7 (p8 / person :arg0-of (h8 / have-rel-role-91 :arg1 (m9 / man) :arg2 (c2 / child)))) :arg1 (f / find-01 :arg0 (p9 / person) :arg1 (l / look-02 :arg1 (t2 / this))))) :snt2 (h9 / have-concession-91 :arg1 (f2 / find-02 :arg0 (p10 / person) :arg1 (l2 / look-02 :arg1 (t3 / this))) :arg2 (p11 / possible-01 :polarity - :arg1 (r / recall-02 :arg0 (s4 / she) :arg1 (m10 / moment :arg1-of (s5 / single-02) :time-of (s6 / see-01 :arg0 (s7 / she) :arg1 (i / it) :time (b / before)))))))
(p / prompt-01 :arg0 (p2 / person :arg0-of (h / have-org-role-91 :arg1 (p3 / police :location (l / location :name (n / name :op1 "Karrathská"))) :arg2 (p4 / police))) :arg1 (a / and :op1 (s / stop-01 :arg1 (p5 / person)) :op2 (d / drive-01 :arg0 (p6 / person))))
(v / value-01 :arg0 (o / organization :name (n / name :op1 "Norwegian" :op2 "Cruise")) :arg1 (m / monetary-quantity :quant 6.8 :unit (d / dollar :mod (c / country :name (n2 / name :op1 "N-A"))) :arg1-of (v2 / value-01 :arg2 (m2 / market))) :arg2 (m3 / monetary-quantity :quant 6.8 :unit (d2 / dollar :mod (c2 / country)) :arg1-of (v3 / value-01 :arg2 (m4 / market))) :arg1-of (c3 / cause-01 :arg0 (c4 / compete-01 :arg0 (c5 / company) :arg1 (a / and :op1 (p / person :arg0-of (c6 / compete-02 :arg1 (c7 / company) :mod (l / large :degree (m5 / more)))) :op2 (p2 / person :arg0-of (c8 / compete-02 :arg3 (c9 / company :arg0-of (c10 / compete-02) :mod (l2 / large :degree (m6 / more)))))) :op3 (a2 / access-01 :arg1 (s / ship :mod (c11 / cruise :mod (l3 / luxury)))) :op4 (p3 / person :mod (w / wealth) :arg0-of (h / have-rel-role-91 :arg1 (c12 / company) :arg2 (u / uncle))))))
(s / struggle-02 :arg0 (p / person :name (n / name :op1 "Graham" :op2 "Abbott") :arg0-of (h / have-org-role-91 :arg2 (d / diagnosis))) :arg1 (s2 / struggle-02 :arg0 (p2 / person)) :time (s3 / still) :time (s4 / since :op1 (y / year :quant (1 / 1/2))))
(e / ensure-01 :arg1 (c / close-01 :arg1 (a / and :op1 (b / battery) :op2 (s / sections :mod (o / other))) :arg1-of (f / firm-03)) :concession (e2 / even-if :op1 (h / have-03 :arg0 (y / you) :arg1 (c2 / camera))))
(a / and :op2 (p / person :name (n / name :op1 "Yatsenyuk") :mode (i / interrogative)))
(h / have-concession-91 :arg2 (g / get-01 :arg0 (p / person :arg0-of (s / smoke-02) :quant (s2 / some)) :arg1 (c / cancer :mod (l / lung)) :arg1-of (c2 / cause-01 :arg0 (c3 / cancer :mod (l2 / lung)))))
(m / multi-sentence :snt1 (g / good :degree (m2 / more) :domain (g2 / grow-01 :arg1 (g3 / grow-01 :mod (s / some))) :concession (g4 / grow-01 :polarity - :arg1 (g5 / grow-01) :mod (a / at-least))) :snt2 (b / become-01 :arg1 (g6 / grow-01) :arg2 (a2 / apparent :arg1-of (i / increase-01))) :snt3 (b2 / become-01 :arg1 (p / person :name (n / name :op1 "Rob" :op2 "Dobson") :arg0-of (h / have-org-role-91 :arg1 (o / organization :name (n2 / name :op1 "Markit")) :arg2 (c / chief))) :arg2 (a3 / apparent :arg1-of (i2 / increase-01))))
(q / quote-01 :arg0 (p / publication :name (n / name :op1 "ABC") :time (d / day :mod (d2 / day))) :arg1 (i / impact-01 :arg0 (p2 / person :arg0-of (o / own-01 :arg1 (b / business))) :arg1 (b2 / business :poss (p3 / person)) :manner (s / serious)) :arg2 (p4 / person :arg0-of (o2 / own-01 :arg1 (b3 / business))))
(a / and :op1 (p / pass-01 :arg1 (u / unit :mod (g / ground) :mod (t / this)) :time (f / final)) :op2 (b / be-located-at-91 :arg1 (u2 / unit :mod (g2 / ground) :mod (t2 / this)) :arg2 (f2 / force :quant 1 :arg1-of (i / include-91 :arg2 (f3 / force :poss (u3 / unit)) :time (d / during :op1 (l / location :name (n / name :op1 "Dunkirk") :mod (p2 / port))) :arg1-of (r / remain-01 :arg3 (p3 / power :poss (t3 / troop :mod (p4 / port))))))))
(e / encourage-01 :arg0 (a / and :op1 (c / country :name (n / name :op1 "United" :op2 "States")) :op2 (p / person :name (n2 / name :op1 "Douglas" :op2 "MacArthur") :arg0-of (h / have-org-role-91 :arg2 (g / general))) :op3 (p2 / person :name (n3 / name :op1 "Douglas" :op2 "MacArthur") :arg0-of (h2 / have-org-role-91 :arg2 (g2 / general)))) :arg1 (c2 / country) :arg2 (a2 / adopt-01 :arg0 (c3 / country) :arg1 (c4 / constitution :arg1-of (d / design-01 :arg3 (e2 / ensure-01 :arg0 (c5 / constitution) :arg1 (r / replace-01 :arg1 (p3 / person :name (n4 / name :op1 "Hideki" :op2 "Toja") :arg0-of (h3 / have-org-role-91 :arg1 (m / military) :arg2 (a3 / autocracy))) :arg2 (e3 / ensure-01 :arg0 (p4 / person) :arg1 (r2 / replace-01 :arg1 (p5 / person :name (n5 / name :op1 "Hideki" :op2 "Toja") :arg0-of (h4 / have-org-role-91 :arg1 (m2 / military) :arg2 (a4 / autocracy)))))))))) :time (a5 / after :op1 (o / occupy-01 :arg0 (c6 / country) :arg1 (c7 / country) :time (w / war))))
(s / stop-01 :arg0 (w / we) :arg1 (c / count-01 :arg1 (t / thing :quant-of (p / person :arg1-of (h / help-01 :arg0 (p2 / person :quant (m / many)))))) :time (b / before :op1 (n / now) :quant (l / long)))
(h / hope-01 :arg0 (w / we) :arg1 (a / and :op1 (p / peace :time (l / last)) :op2 (g / gain-02 :arg0 (c / child) :arg1 (k / knowledge :arg1-of (u / useful-05 :time (f / future))))))
(t / thing :quant 1 :domain (l / look-01 :arg1 (a / and :op1 (p / person :arg0-of (h / have-rel-role-91 :arg1 (h2 / he) :arg2 (f / friend))) :op2 (p2 / person :arg0-of (h3 / have-rel-role-91 :arg1 (h4 / he) :arg2 (f2 / friend))) :op3 (p3 / person :arg0-of (h5 / have-rel-role-91 :arg1 (h6 / he) :arg2 (f3 / friend))) :op4 (p4 / person :arg0-of (h7 / have-rel-role-91 :arg1 (h8 / he) :arg2 (f4 / friend))) :op5 (p5 / person :arg0-of (h9 / have-rel-role-91 :arg1 (h10 / he) :arg2 (f5 / friend))) :op6 (p6 / person :arg0-of (h11 / have-rel-role-91 :arg1 (h12 / he) :arg2 (f6 / friend))) :op6 (p7 / person :arg0-of (h13 / have-rel-role-91 :arg1 (h14 / he) :arg2 (f7 / friend))) :op6 (p8 / person :arg0-of (h15 / have-rel-role-91 :arg1 (h16 / he) :arg2 (f8 / friend))) :op7 (p9 / person :arg0-of (h17 / have-rel-role-91 :arg1 (h18 / he) :arg2 (f9 / friend))) :op7 (p10 / person :arg0-of (h19 / head-01 :arg1 (c / call-02 :arg1 (d / duty))))) :mod (a2 / another :mod (q / quite))) :time (m / morning))
(s / say-01 :arg0 (g / group) :arg1 (s2 / stop-01 :arg0 (d / doctor :mod (t / this)) :arg1 (s3 / surgery-01 :arg1 (d2 / doctor) :arg2 (s4 / surgery-01)) :mod (a / also) :condition (f / force-01 :arg1 (d3 / doctor :quant (a2 / all) :location (s5 / state)) :arg2 (s6 / stop-01 :arg0 (d4 / doctor) :arg1 (a3 / abortions)))))
(( / ( :( (n / name) :op1 "Alyona" :op2 "Tskaeva")
(c / content-01 :arg1 (y / you) :arg2 (p / perform-01 :arg0 (h / he)) :manner (a / amr-unknown))
(t / two-dimensional :arg1 (s / surface :quant 1 :arg1-of (l / long-03) :arg1-of (s2 / show-01 :arg0 (a / and :op1 (d / dimension :arg1-of (s3 / straight-04)) :op2 (d2 / dimension :location (d3 / direction :name (n / name :op1 (c / circumferential)))) :arg1-of (d4 / designate-01 :arg2 (a2 / arrow :mod (c2 / circular)))))) :arg2 (a3 / and :op1 (s4 / short) :op2 (b / bigot)))
(c / contrast-01 :arg1 (h / have-rel-role-91 :arg0 (p / person :arg0-of (h2 / have-rel-role-91 :arg1 (c2 / child :mod (b / both)) :arg2 (c3 / child))) :arg1 (p2 / person :arg0-of (h3 / have-rel-role-91 :arg1 (c4 / child) :arg2 (c5 / child))) :arg2 (p3 / person :arg0-of (h4 / have-rel-role-91 :arg1 (c6 / child) :arg2 (c7 / child))) :mod (j / just)) :arg2 (k / know-01 :polarity - :arg0 (p4 / person) :arg1 (p5 / pregnancies :arg1 (p6 / person) :arg1-of (a / allege-01))))
(c / contrast-01 :arg1 (k / know-01 :arg0 (i / i) :arg1 (r / right-06 :polarity - :arg1 (i2 / i))) :arg2 (a / and :op1 (c2 / come-01 :arg1 (t / thing :arg2-of (s / solve-01 :arg0 (i3 / i))) :arg4 (i4 / i) :time (m / moment :mod (t2 / this))) :op2 (c3 / concealing :arg0 (h / he) :arg1 (i5 / indignation :poss (d / defendant) :arg1-of (s2 / suppose-02 :arg2 (a2 / and :op1 (r2 / relation-03 :arg0 (m2 / man) :arg2 (m3 / man)) :op2 (f / fear-01 :arg0 (h2 / he))))))))
(s / say-01 :arg0 (p / person :name (n / name :op1 "Mráka")) :arg1 (p2 / problem :polarity - :domain (m / meet-03 :arg1-of (g / general-02) :arg1-of (g2 / general-02)) :prep-with (i / it)))
(m / multi-sentence :snt1 (t / think-01 :arg0 (i / i) :arg1 (t2 / that)) :snt2 (l / lie-08 :mode (i2 / imperative) :arg0 (y / you)))
(c / contrast-01 :arg2 (h / hold-01 :arg0 (b / body :poss (s / she)) :arg1 (s2 / shape :poss (b2 / body))))
(m / multi-sentence :snt1 (p / person :name (n / name :op1 "Ron" :op2 "Paultard")) :snt2 (p2 / possible-01 :arg1 (f / find-01 :arg0 (c / company :name (n2 / name :op1 "BBC")) :arg1 (s / supervisor) :purpose (t / time :arg1-of (t2 / tough-02)))))
(p / possible-01 :arg1 (v / view-02 :arg1 (l / leakage :arg1 (i / image :mod (n / naked) :poss (n2 / nobody))) :arg2 (r / reminder :arg1 (u / use-01 :arg1 (s / service :mod (o / online)) :manner (s2 / safe-01)))))
(a / advantage :domain (i / it) :time (h / have-03 :arg0 (y / you) :arg1 (t / temporal-quantity :quant (N / N-A) :unit (d / day) :mod (t2 / together))))
(s / say-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (c / country :name (n / name :op1 "UK")) :arg3 (l / lead-02 :arg0 (p2 / person)))) :arg1 (b / bad-07 :arg1 (d / diagnosis :arg0 (p3 / person) :arg1 (p4 / problem)) :arg1-of (c2 / cause-01 :arg0 (l2 / little :degree (v / very) :domain (d2 / disease)))))
(a / alternative :arg1-of (p / popular-02 :arg2 (b / book :arg1-of (u / use-01))) :mod (a2 / also) :domain (o / organization :name (n / name :op1 "eBay" :op2 "Inc")) :mod (a3 / also))
(w / work-01 :arg0 (i / industry :mod (c / certain) :location (i2 / industry :mod (c2 / certain))) :arg1-of (d / direct-02) :prep-with (a / and :op1 (p / person :arg0-of (w2 / work-01 :arg2 (s / substance))) :op2 (p2 / person :arg0-of (w3 / work-01) :mod (c3 / construct-01)) :op3 (p3 / person :arg0-of (w4 / work-01) :mod (s2 / shipyards)) :op4 (p4 / person :arg0-of (w5 / work-01) :mod (s3 / shipyards)) :op5 (p5 / person :arg0-of (w6 / work-01) :mod (s4 / shipyards))))
(c / cause-01 :arg0 (g / girl :mod (t / three-year-old) :location (f / fife :location (c2 / court))) :arg1 (s / stand :poss (m / man)))
(a / and :op1 (b / be-located-at-91 :arg1 (a2 / and :op1 (c / cyclists) :op2 (j / joggers)) :arg2 (h / here) :time (y / yesterday) :location (h2 / here) :ord (o / ordinal-entity :value 8)) :op2 (s / support-01 :arg0 (a3 / and) :arg1 (h3 / help-01 :arg0 (p / person :arg0-of (h4 / have-rel-role-91 :arg1 (p2 / person) :arg2 (c2 / child))) :arg1 (p3 / person :arg0-of (h5 / have-rel-role-91 :arg1 (p4 / person) :arg2 (c3 / child))) :arg2 (c4 / cancer))))
(c / cause-01 :arg0 (i / inform-01 :arg0 (p / person :name (n / name :op1 "Medau")) :arg1 (r / request-01 :arg0 (p2 / person) :arg1 (r2 / request-01 :arg0 (u / university)))) :arg1 (' / '' :arg1 (f / family) :time (a / already)))
(m / multi-sentence :snt1 (p / possible-01 :arg1 (p2 / publish :arg0 (i / i) :arg1 (s / something :topic (c / company :name (n / name :op1 "Facebook") :topic (a / and :op1 (i2 / i) :op2 (p3 / person :arg0-of (h / have-rel-role-91 :arg1 (i3 / i) :arg2 (p4 / partner)))))))) :snt2 (s2 / say-01 :arg0 (p5 / person :name (n2 / name :op1 "Mitchell")) :arg1 (a2 / and :op1 (p6 / person :arg0-of (h2 / have-rel-role-91 :arg1 (i4 / i) :arg2 (p7 / partner))) :op2 (p8 / person :arg0-of (h3 / have-rel-role-91 :arg1 (i5 / i) :arg2 (p9 / partner))))))
(h / have-condition-91 :arg1 (w / want-01 :arg0 (i / it) :arg1 (s / see-01 :arg0 (y / you))) :arg2 (n / nothing))
(r / report)
(a / and :op2 (s / say-01 :arg0 (y / you) :arg1 (h / hate-01 :mode (i / interrogative) :arg0 (y2 / you) :arg1 (i2 / i)) :arg1-of (c / cause-01 :arg0 (f / fat :domain (a2 / ankles :poss (i3 / i)) :degree (t / too)))))
(a / and :op2 (s / succeed-01 :arg1 (i / it)))
(s / suggest-01 :arg0 (i / i) :arg1 (r / read-01 :arg0 (y / you) :arg1 (n / novels :quant (f / few))))
(s / say-01 :arg0 (p / person :name (n / name :op1 "Andrew" :op2 "Morgan") :arg0-of (h / have-org-role-91 :arg2 (' / ''))) :arg1 (r / represent-01 :arg0 (p2 / person :arg0-of (r2 / represent-01 :arg1 (p3 / person :name (n2 / name :op1 "Andrew" :op2 "Lawson"))) :arg0-of (r3 / represent-01 :arg1 (p4 / person) :time (t / try-02 :arg1 (p5 / person) :arg2 (h2 / hospital :poss (p6 / person :name (n3 / name :op1 "Guy")))))) :arg1 (p7 / person)) :arg2 (p8 / poisoned :mod (i / industry)))
(s / say-01 :arg0 (o / organization :name (n / name :op1 "Ministry" :op2 "of" :op3 "Education")) :arg1 (r / return-02 :polarity - :arg1 (f / family :quant (a / about :op1 (N / N-A))) :time (y / yet)))
(b / become-01 :arg1 (i / i) :arg2 (d / district :name (n / name :op1 "N-A") :mod (h / heart)))
(s / stand-01 :arg1 (m / man :mod (o / old :degree (m2 / most)) :mod (o2 / old)) :arg1-of (c / cause-01 :arg0 (d / drive-01 :arg0 (g / girl :mod (t / three-year)) :arg1 (c2 / cross-02 :arg0 (g2 / girl) :arg1 (c3 / cross-02 :arg0 (g3 / girl) :arg1 (c4 / cross-02 :arg0 (g4 / girl) :arg1 (c5 / cross-02 :arg0 (g5 / girl) :arg1 (c6 / cross-02 :arg0 (g6 / girl)))) :location (c7 / court))))))
(l / lead-03 :arg0 (c / condition :mod (w / weather :mod (g / gusty))) :arg2 (b / belated :arg1 (f / fly-01 :arg1 (o / organization :name (n / name :op1 "Virgin" :op2 "Airlines")) :destination (c2 / city :name (n2 / name :op1 "Melbourne")))) :mod (p / probable))
(a / and :op1 (g / get-05 :arg1 (i / i) :arg2 (u / up)) :op2 (c / climb :arg0 (i2 / i) :mod (a2 / again) :purpose (s / search-01 :arg0 (i3 / i) :arg2 (p / person :arg0-of (h / have-rel-role-91 :arg1 (i4 / i) :arg2 (m / mother))))))
(a / and :op1 (p / person :name (n / name :op1 "Chen" :op2 "Yunxian") :arg0-of (h / have-org-role-91 :arg1 (p2 / province) :arg2 (g / governor :mod (v / vice)))) :op2 (w / wish-01 :arg0 (p3 / person) :arg1 (c / converse-01 :arg0 (p4 / person) :arg1 (d / democrat :mod (s / social)) :arg2 (g2 / government-organization :name (n2 / name :op1 "N-A")))))
(f / friendly-01 :arg1 (a / and :op1 (t / thing :arg0-of (p / play-12 :arg2 (v / vacuum))) :op2 (w / wage :arg1-of (r / rise-01))) :arg2 (e / environmentally))
(a / and :op1 (l / look-01 :arg0 (i / it) :arg1 (s / sell-01 :arg1 (s2 / service :mod (v / video)) :arg2 (c / company :name (n / name :op1 "Google")) :purpose (d / deal-01 :arg2 (m / monetary-quantity :arg1-of (c2 / cool-04 :arg1-of (c3 / cool-04))))) :time (b / before :op1 (n2 / now) :quant (t / temporal-quantity :quant (N / N-A) :unit (m2 / month)))) :op2 (a2 / appear-01 :arg1 (c4 / cooperate-01) :mod (o / of-course :mod (t2 / too))))
(m / multi-sentence :snt1 (p / possible-01 :arg1 (s / safe-01 :arg1 (t / talk-01 :arg0 (w / woman) :arg1 (r / relation-03 :arg0 (w2 / woman) :arg2 (w3 / woman) :arg1-of (o / open-04)))) :manner (a / amr-unknown)) :snt2 (c / contrast-01 :arg2 (a2 / ask-01 :arg0 (s2 / she))))
(l / likely-01 :arg1 (s / suffer-01 :arg0 (p / person :quant (a / about :op1 23,000) :location (c / country :name (n / name :op1 "Britain"))) :arg1 (p2 / possible-01 :arg1 (s2 / suffer-01 :arg0 (o / organization :name (n2 / name :op1 "CMT") :arg0-of (l2 / lead-03 :arg2 (a2 / and :op1 (w / weak-02 :arg1 (m / muscle) :arg2 (m2 / muscle)) :op2 (w2 / weakness :mod (i / insecure)) :op3 (t / toe :mod (c2 / curved))) :arg1-of (p3 / possible-01)))))))
(p / publish-01 :arg1 (p2 / photo :arg1-of (b / beautiful-02 :degree (m / most))))
(c / cause-01 :arg0 (p / push-02 :arg0 (o / organization :name (n / name :op1 "Ifa")) :arg2 (w / we) :mod (a / absolute)) :arg1 (c2 / clear-06 :arg0 (p2 / push-02 :arg0 (w2 / we) :arg2 (w3 / we) :mod (a2 / absolute) :time (w4 / week :mod (t / this))) :arg1 (q / question-01 :arg1 (e / electronics))))
(s / say-01 :arg0 (i / it) :arg1 (o / obligate-01 :arg2 (s2 / see-01 :arg1 (r / refer-01 :arg0 (o2 / organization :name (n / name :op1 "Putins")) :arg1 (c / city :mod (g / great :degree (m / more)) :arg1-of (d / discuss-01 :arg0 (l / leadership :mod (g2 / great :degree (m2 / more)) :arg1-of (d2 / discuss-01 :arg0 (l2 / lead-02 :arg0 (p / person :arg0-of (l3 / lead-02) :mod (k / kiewer)) :duration (m3 / multiple :op1 (t / temporal-quantity :quant (N / N-A) :unit (m4 / month)))))))) :arg2 (d3 / dispel :arg1 (c2 / city) :arg2 (f / fields :arg1 (f2 / field :mod (r2 / russian-speaking)) :arg2 (f3 / field :mod (r3 / russian-speaking))))))))
(p / personification :mode (i / interrogative) :mod (n / new) :domain (t / this))
(c / cause-01 :arg1 (r / remain-01 :arg1 (m / match-03 :ord (o / ordinal-entity :value 1)) :arg3 (m2 / memory :arg1-of (s / special-02))))
(c / contrast-01 :arg1 (h / hold-02 :arg1 (d / die-01 :arg1 (b / both))) :arg2 (s / survive-01 :arg0 (t / they)))
(m / multi-sentence :snt1 (c / come-04 :polarity - :arg1 (e / everything) :arg2 (a / anything :mod (s / small :degree (m2 / more) :compared-to (r / revolution-03)))) :snt2 (a2 / and :op1 (p / possible-01 :arg1 (c2 / connect :arg0 (o / one) :arg1 (m3 / machine :arg0-of (f / filter-02) :prep-with (h / headphones :mod (s2 / some))))) :op2 (i / indicate-01 :arg0 (t / thing :arg1-of (b / border-01 :arg2 (a3 / and :op1 (p2 / product :mod (w / white)) :op2 (p3 / product :arg0-of (h2 / have-org-role-91 :arg1 (b2 / branch)))))) :arg1 (m4 / machine :arg0-of (f2 / filter-02) :prep-with (h3 / headphones :mod (s3 / some))) :arg0-of (i2 / indicate-01 :arg1 (n / need-01 :polarity - :arg0 (p4 / pizza) :arg1 (a4 / anything) :arg1-of (c3 / cause-01 :arg0 (s4 / stand-01 :arg1 (w2 / we) :arg2 (j / jam))))))))
(a / and :op1 (f / fall-01 :arg1 (i / i) :arg4 (t / there) :manner (c / constant)) :op2 (l / last-01 :arg1 (e / everything) :arg2 (e2 / everything :arg1-of (l2 / last-01 :arg2 (t2 / temporal-quantity :quant (N / N-A) :unit (y / year))))))
(a / and :op1 (d / die-01 :arg1 (p / person :quant (m / many))) :op2 (b / believe-01 :arg0 (i / i) :arg1 (a2 / and :op1 (k / kill-01 :arg1 (p2 / person :quant (m2 / many) :arg0-of (h / have-rel-role-91 :arg1 (p3 / person) :arg2 (c / child)))) :op2 (k2 / kill-01 :arg1 (p4 / person) :mod (s / still)))) :location (c2 / country :name (n / name :op1 "Ukraine")) :mod (a3 / again :mod (n2 / now)))
(h / have-03 :arg0 (a / and :op1 (p / person :name (n / name :op1 "Fatima") :arg0-of (h2 / have-rel-role-91 :arg1 (h3 / he) :arg2 (m / mother))) :op2 (p2 / person :arg0-of (h4 / have-rel-role-91 :arg1 (h5 / he) :arg2 (m2 / mother))) :op3 (p3 / person :arg0-of (h6 / have-rel-role-91 :arg1 (h7 / he) :arg2 (d / doctor))) :op4 (p4 / person :arg0-of (h8 / have-rel-role-91 :arg1 (h9 / he) :arg2 (d2 / doctor))) :op5 (p5 / person :arg0-of (h10 / have-rel-role-91 :arg1 (h11 / he) :arg2 (d3 / doctor)))) :arg1 (p6 / person :name (n2 / name :op1 "Vladimir") :arg0-of (h12 / have-rel-role-91 :arg1 (h13 / he) :arg2 (d4 / doctor))) :time (b / before :op1 (r / run-02 :arg0 (p7 / person) :arg1 (u / university) :mod (o / old :degree (m3 / more)))))
(m / mother :mod (g / great) :domain (i / it))
(s / say-01 :arg0 (a / agency :mod (c / country :name (n / name :op1 "N-A"))) :arg1 (o / or :op1 (k / kill-01 :arg1 (s2 / soldier :quant (a2 / around :op1 100)) :mod (a3 / also)) :op2 (i / injure-01 :arg1 (s3 / soldier) :manner (c2 / combat-01 :arg1 (s4 / soldier) :location (r / region :location (l / location :name (n2 / name :op1 "Donetsk")))))))
(c / confirm-01 :arg0 (c2 / court :mod (a / appeal-01)) :arg1 (d / damage-01 :arg1 (p / person :ord (o / ordinal-entity :value 1) :arg0-of (s / sue-02 :arg2 (c3 / country :name (n / name :op1 "Great" :op2 "Britain")))) :arg1-of (c4 / cause-01 :arg0 (c5 / contact-01 :arg0 (p2 / person) :arg1 (p3 / person)))))
(p / position-01 :polarity - :arg1 (p2 / person :arg0-of (h / have-org-role-91 :arg2 (h2 / head-of-state))) :arg2 (c / create-01 :arg0 (p3 / person) :arg1 (s / sound-01 :arg1-of (r / reasonable-02 :degree (f / fair)))))
(r / regard-01 :arg1 (p / person :arg0-of (h / have-org-role-91 :arg1 (c / crew) :arg2 (m / member))) :arg2 (p2 / person :arg1-of (m2 / miss-01)))
(c / claim-01 :arg0 (p / person :arg0-of (r / rebel-01)) :arg1 (w / waste-01 :arg0 (p2 / person) :arg1 (b / boat :quant 2 :name (n / name :op1 (c2 / coastguards) :op2 (c3 / coastguards))) :duration (o / ordinal-entity :value 1) :location (s / sea :location (a / azov))) :mod (a2 / also))
(f / food :domain (f2 / food))
(m / multi-sentence :snt1 (a / and :op1 (g / go-02 :arg0 (i / i) :arg4 (h / hopeful-03 :arg0 (i2 / i) :mod (g2 / good)) :manner (g3 / good :degree (p / pretty))) :op2 (s / say-01 :arg0 (i3 / i) :arg1 (t / thing :arg2-of (r / result-01) :mod (g4 / good)))) :snt2 (s2 / say-01 :arg0 (p2 / person :name (n / name :op1 "Johnston")) :arg1 (a2 / add-01 :arg0 (p3 / person) :arg1 (w / work-09 :polarity - :arg1 (i4 / it) :mod (j / just)))))
(c / contrast-01 :arg2 (h / have-03 :arg0 (p / person :name (n / name :op1 "Henry")) :arg1 (h2 / head :part-of (o / outbursts :name (n2 / name :op1 (h3 / humorous)))) :time (s / still) :arg1-of (c2 / cause-01 :arg0 (i / imitated :arg0 (p2 / person) :arg1 (i2 / imitated :arg0 (p3 / person))))))
(a / and :op1 (i / include-91 :li 45 :arg1 (h / he) :arg2 (h2 / he)) :op2 (l / late :op1 (e / evening :time (e2 / evening))) :li 45)
(a / and :op1 (i / introduce-02 :arg1 (c / character :mod (c2 / culture :arg1-of (b / black-07) :mod (b2 / both)) :mod (b3 / both))) :op2 (w / work-01 :arg0 (p / person :name (n / name :op1 "Henry")) :location (1 / 1980s :purpose (c3 / comedy :mod (a2 / alternative)))))
(f / follow-01 :arg1 (a / and :op1 (o / operation :mod (e / emergency)) :op2 (i / intervention :quant 2 :mod (m / more))))
(s / suggest-01 :arg0 (s2 / she) :arg1 (s3 / something :arg1-of (s4 / suggest-01 :arg0 (s5 / she) :arg1-of (s6 / suggest-01 :arg0 (s7 / she) :arg1-of (s8 / suggest-01 :arg0 (s9 / she) :arg1-of (s10 / suggest-01 :arg0 (s11 / she) :arg1-of (s12 / suggest-01 :arg0 (s13 / she) :arg1-of (s14 / suggest-01 :arg0 (s15 / she) :arg1-of (s16 / suggest-01 :arg0 (s17 / she) :arg1-of (s18 / suggest-01 :arg0 (s19 / she) :arg1-of (s20 / suggest-01 :arg0 (s21 / she) :arg1-of (s22 / suggest-01 :arg0 (s23 / she) :arg1-of (s24 / suggest-01 :arg0 (s25 / she) :arg1-of (s26 / suggest-01 :arg0 (s27 / she) :arg1-of (s28 / suggest-01 :arg0 (s29 / she) :arg1-of (s30 / suggest-01 :arg0 (s31 / she) :arg1-of (s32 / suggest-01 :arg0 (s33 / she))))))))))))))))) :arg2 (p / person :arg0-of (s34 / specialize-01)) :purpose (a / and :op1 (p2 / provide-01 :arg0 (p3 / person) :arg1 (o / opportunity :mod (m / more :compared-to (p4 / person :arg0-of (l / live-01 :location (h / home :poss (p5 / person))))))) :op2 (t / treat-03 :arg1 (p6 / person) :arg2 (p7 / person :arg0-of (l2 / live-01)) :location (o2 / outside :op1 (r / region :poss (p8 / person))))))
(c / confirm-01 :arg0 (p / person :arg0-of (c2 / confirm-01 :arg1 (c3 / club))) :arg1 (s / stand-01 :arg1 (p2 / person :name (n / name :op1 "Torsten" :op2 "Invest")) :arg2 (a / and :op1 (- / -rrb-) :op2 (p3 / person :arg0-of (h / have-rel-role-91 :arg1 (p4 / person :name (n2 / name :op1 "Herbert" :op2 "Piffl")) :arg2 (f / friend))) :op3 (p5 / person :arg0-of (h2 / have-rel-role-91 :arg1 (p6 / person) :arg2 (f2 / friend))) :op4 (p7 / person :arg0-of (h3 / have-rel-role-91 :arg1 (p8 / person) :arg2 (f3 / friend))) :op5 (p9 / person :arg0-of (h4 / have-rel-role-91 :arg1 (w / we) :arg2 (f4 / friend))))))
(a / allow-01 :arg1 (c / cameras :arg1 (c2 / cameras :quant (s / some)) :arg3 (f / foot :quant (o / or :op1 5 :op2 60))) :mod (o2 / only))
(m / multi-sentence :snt1 (p / portrait :arg0 (p2 / person :name (n / name :op1 "Howard" :op2 "Jacobson") :arg0-of (a / author-01)) :arg1 (p3 / person :arg0-of (a2 / author-01))) :snt2 (j / j :mode (i / interrogative) :arg1 (p4 / person :quant 1 :arg0-of (h / have-org-role-91 :arg1 (p5 / preis :quant 1) :arg2 (p6 / preis)))))
(m / multi-sentence :snt1 (a / and :op1 (d / documentary :name (n / name :op1 (r / radio))) :op2 (d2 / documentary :name (n2 / name :op1 (r2 / radio)))) :snt2 (g / great :degree (s / so) :domain (d3 / documentary :name (n3 / name :op1 (r3 / radio)))))
(t / think-01 :arg0 (i / i) :arg1 (a / and :op1 (b / be-located-at-91 :arg1 (i2 / i) :arg2 (u / under :op1 (v / value-interval :op1 18 :op2 25))) :op2 (l / lose-02 :arg0 (i3 / i) :arg1 (s / skill :poss (i4 / i) :quant (a2 / all)))))
(c / come-01 :arg1 (p / proportion :quant-of (l / location :name (n / name :op1 "Schwandorf") :arg0-of (h / have-org-role-91 :arg1 (a / and :op1 (p2 / person :name (n2 / name :op1 "Tobias" :op2 "Braun")) :op2 (p3 / person :name (n3 / name :op1 "Thomas" :op2 "Buecherl")) :op3 (p4 / person :name (n4 / name :op1 "Stefan" :op2 "Brickl"))) :arg2 (l2 / location :name (n5 / name :op1 "Schwarzach"))))) :arg3 (a2 / and :op1 (l3 / location :name (n6 / name :op1 "Schwarzach")) :op2 (p5 / person :name (n7 / name :op1 "Stefan" :op2 "Brickl") :arg0-of (h2 / have-org-role-91 :arg1 (a3 / and) :arg2 (l4 / location :name (n8 / name :op1 "Schwarzach")))) :op3 (p6 / person :name (n9 / name :op1 "Stefan" :op2 "Brickl") :arg0-of (h3 / have-rel-role-91 :arg1 (a4 / and) :arg2 (l5 / location :name (n10 / name :op1 "Schwarzach")))) :op4 (p7 / person :name (n11 / name :op1 "Sebastian" :op2 "Zahner") :arg0-of (h4 / have-rel-role-91 :arg1 (a5 / and) :arg2 (b / brother))) :op5 (p8 / person :name (n12 / name :op1 "Felix" :op2 "Domaier") :arg0-of (h5 / have-rel-role-91 :arg1 (a6 / and) :arg2 (b2 / brother))) :op7 (p9 / person :name (n13 / name :op1 "Felix" :op2 "Domaier") :arg0-of (h6 / have-rel-role-91 :arg1 (a7 / and) :arg2 (b3 / brother))) :op7 (p10 / person :name (n14 / name :op1 "Felix" :op2 "Domaier") :source (l6 / location :name (n15 / name :op1 "Teunz"))) :op7 (p11 / person :name (n16 / name :op1 "Felix" :op2 "Domaier") :source (l7 / location :name (n17 / name :op1 "Teunz")))))
(s / say-01 :arg0 (s2 / she) :arg1 (' / '' :arg0 (i / i) :arg1 (j / joy)) :time (a / after :op1 (r / reunify-01 :arg1 (i2 / it))))
(c / contrast-01 :arg1 (l / let-01 :arg0 (t / terrorist) :arg1 (g / go-01 :arg1 (t2 / terrorist))) :arg2 (a / and :op1 (h / hold-01 :arg0 (t3 / terrorist) :arg1 (p / person :arg0-of (h2 / have-rel-role-91 :arg1 (t4 / terrorist) :arg2 (m / mother))) :location (c2 / cruelty :mod (s / school))) :op2 (p2 / person :name (n / name :op1 "Makhar") :arg0 (p3 / person :arg0-of (h3 / have-rel-role-91 :arg1 (p4 / person) :arg2 (s2 / sister))) :arg1 (a2 / and :op1 (p5 / person :name (n2 / name :op1 "Kristina")) :op2 (p6 / person :name (n3 / name :op1 "Makhar") :arg0-of (h4 / have-rel-role-91 :arg1 (p7 / person) :arg2 (b / brother)))) :location (s3 / sports :mod (s4 / school)))))
FAILED_TO_PARSE#Couldn't convert to full AMR graph.
(d / decide-01 :arg0 (i / i) :arg1 (c / conditions :arg0 (i2 / i) :arg1 (c2 / comedy)) :arg1-of (c3 / cause-01 :arg0 (f / find-02 :arg0 (i3 / i) :arg1 (d2 / dangerous :domain (s / satisfaction :mod (k / kind :mod (t / this))) :manner (s2 / somehow)))))
(c / call-03 :arg0 (p / person :name (n / name :op1 "Houthis") :arg0-of (h / have-org-role-91 :arg1 (g / government-organization :arg0-of (g2 / govern-01)) :arg2 (c2 / capital :mod (y / yemeni)))) :arg1 (d / disobedience :mod (c3 / civil) :location (c4 / city :name (n2 / name :op1 "Sanaa") :location (c5 / city :name (n3 / name :op1 "Sanaa")))))
(d / difficult :domain (u / understand-01 :arg1 (p / person :arg0-of (s / say-01 :arg1 (p2 / prefer-01 :arg0 (p3 / person) :arg1 (w / watch-01 :arg0 (p4 / person) :arg1 (s2 / sport)))))) :arg1-of (c / cause-01 :arg0 (d2 / difficult :domain (w2 / watch-01 :arg0 (p5 / person) :arg1 (s3 / sport :arg1-of (t / take-01 :arg0 (p6 / person) :purpose (t2 / take-01 :arg0 (p7 / person) :arg1 (c2 / consolation :mod (c3 / control-01)) :location (h / hand))))))))
(b / become-01 :arg1 (p / person :name (n / name :op1 "Josef" :op2 "Schmalzl")) :arg2 (p2 / person :arg0-of (a / advise-01)))
(d / doubt-01 :arg0 (i / i) :arg1 (k / know-01 :arg0 (w / we) :arg1 (t / truth) :time (e / ever)))
(a / and :op2 (c / clear-06 :arg1 (d / deal-01 :arg0 (w / we) :arg2 (r / regime :mod (a2 / authoritarian)))))
(a / arrest-01 :arg1 (p / policeman :quant (s / series) :mod (t / turkish)) :arg1-of (c / cause-01 :arg0 (e / engage-01 :arg1 (p2 / policeman) :arg2 (a2 / association :arg2-of (c2 / criminal-03) :arg1-of (o / organize-01))) :arg1-of (c3 / cause-01 :arg0 (h / have-03 :arg0 (p3 / policeman) :arg1 (a3 / and :op1 (n / number :mod (t2 / tapped)) :op2 (n2 / number :mod (t3 / telephone)))) :arg1-of (a4 / allege-01))) :location (j / july))
(g / girl :arg0-of (s / shoot-02 :arg1 (g2 / girl) :time (a / attempt-01)))
(r / report)
(m / multi-sentence :snt1 (e / except-01 :arg1 (a / and :op1 (p / person :mod (c / country :name (n / name :op1 "N-A"))) :op2 (p2 / person :arg0-of (h / have-org-role-91 :arg1 (o / organization)))) :mod (a2 / also)) :snt2 (a3 / alternative :mod (p3 / popular) :purpose (n2 / need-01 :arg1 (b / book))))
(u / use-01 :arg0 (p / person :mod (o / only)) :arg1 (m / material) :arg2 (m2 / material :location (a / and :op1 (s / sector :mod (c / certain)) :op2 (p2 / person :arg0-of (w / work-01) :mod (c2 / construct-01)) :op3 (p3 / person :arg0-of (w2 / work-01 :arg2 (p4 / person :arg0-of (w3 / work-01)))) :op4 (p5 / person :arg0-of (w4 / work-01 :mod (s2 / shipyards))) :op5 (p6 / person :arg0-of (w5 / work-01 :mod (s3 / shipyards)))) :arg1-of (d / direct-02)))
(c / concern-01 :arg0 (w / warn-01 :polarity - :arg0 (i / i)) :arg1 (p / possible-01 :arg1 (f / find-01 :arg0 (w2 / we) :arg1 (w3 / we) :prep-in (p2 / process-02 :arg1 (m / mistake-02 :arg1-of (m2 / make-01 :time (a / and :op1 (e / event :mod (v / very)) :op2 (e2 / event :mod (m3 / merit-01)))))))))
(s / start-01 :arg1 (l / league :location (l2 / location :name (n / name :op1 "Lower" :op2 "Saxony"))) :arg1-of (c / cause-01 :arg0 (b / boy :arg1-of (m / mean-01 :arg2 (b2 / boy :mod (s2 / sports) :mod (w / weende))))))
(a / and :op1 (o / own-01 :arg0 (o2 / or :op1 (g / government-organization :arg0-of (g2 / govern-01)) :op2 (o3 / organization :arg0-of (p / profit-01 :polarity -))) :arg1 (o4 / or :op1 (g3 / government-organization :arg0-of (g4 / govern-01)) :op2 (o5 / organization :arg0-of (p2 / profit-01 :polarity -))) :mod (e / either) :location (s / state :name (n / name :op1 "Maryland"))) :op2 (s2 / say-01 :arg0 (o6 / or :op1 (g5 / government-organization :arg0-of (g6 / govern-01)) :op2 (o7 / organization :arg0-of (p3 / profit-01 :polarity -))) :arg1 (p4 / person :name (n2 / name :op1 "Douglas" :op2 "Lindholm") :arg0-of (h / have-org-role-91 :arg1 (c / center :part-of (t / tax-01 :arg2 (s3 / state))) :arg2 (d / director :mod (m / manage-01))))) :location (s4 / state :name (n3 / name :op1 "Maryland")))
(w / wish-01 :arg0 (i / i) :arg1 (a / and :op1 (p / possible-01 :arg1 (c / call-02 :arg0 (p2 / person :name (n / name :op1 "Cherie")))) :op2 (s / say-01 :arg0 (i2 / i) :arg1 (a2 / and :op1 (m / meet-03 :arg0 (i3 / i) :arg1 (i4 / i) :time (y / year :mod (t / that))) :op2 (s2 / say-01 :arg0 (i5 / i) :arg1 (a3 / and :op1 (m2 / meet-03 :arg0 (i6 / i) :arg1 (i7 / i)) :op2 (t2 / thing :manner-of (r / remember-01 :arg0 (p3 / person :name (n2 / name :op1 "Damir")))) :op3 (t3 / thing :manner-of (a4 / and :op1 (h / help-01 :arg0 (p4 / person :name (n3 / name :op1 "Damir"))) :op2 (t4 / thing :manner-of (h2 / help-01 :arg0 (p5 / person :name (n4 / name :op1 "Damir")))))))))) :arg2 (i8 / i)))
(c / contrast-01 :arg1 (s / sorry-01 :arg1 (i / i)) :arg2 (e / expect-01 :arg0 (p / person :name (n / name :op1 "Melanie" :op2 "Meier") :mod (c2 / country :name (n2 / name :op1 "N-A"))) :arg1 (' / '' :arg0 (p2 / person) :arg1 (s2 / side :mod (o / organization))) :degree (m / more :quant 1) :mod (s3 / simple)))
(p / photographed :arg0 (a / and :op1 (p2 / person :name (n / name :op1 "Dimitri" :op2 "Beliakow") :arg0-of (h / have-org-role-91 :arg1 (c / country :name (n2 / name :op1 "N-A")) :arg2 (s / star))) :op2 (p3 / person :arg1-of (f / fame-01) :arg0-of (h2 / have-org-role-91 :arg1 (c2 / country) :arg3 (s2 / star)))) :arg1 (s3 / she) :time (t / try-01 :arg0 (p4 / person :arg0-of (h3 / have-rel-role-91 :arg1 (s4 / she) :arg2 (s5 / star))) :arg1 (s6 / she) :mod (o / only) :time (a2 / after :op1 (e / explode-01 :arg1 (t2 / thing :poss (i / i))))))
(l / lose-02 :arg0 (i / i) :arg1 (c / consciousness))
(s / say-01 :arg0 (p / person :name (n / name :op1 "Qadri")) :arg1 (r / resemble-01 :arg2 (r2 / resemble-01)))
(c / contrast-01 :arg1 (u / unexpected :polarity - :domain (t / this)) :arg2 (s / say-01 :arg0 (p / person :name (n / name :op1 "Emily" :op2 "Lau") :arg0-of (h / have-org-role-91 :arg1 (p2 / political-party :name (n2 / name :op1 "Democratic" :op2 "Party")) :arg2 (p3 / person :arg1-of (e / expert-01)) :arg1-of (l / legal-02)) :arg0-of (h2 / have-org-role-91 :arg1 (p4 / political-party :name (n3 / name :op1 "Democratic" :op2 "Party")) :arg2 (p5 / person :arg1-of (e2 / expert-01)))) :arg1 (u2 / unexpected :polarity - :domain (t2 / this))))
(e / encourage-01 :arg0 (p / person :mod (c / country :name (n / name :op1 "N-A"))) :arg1 (c2 / country :mod (a / all)) :arg2 (w / world) :purpose (a2 / and :op1 (p2 / provoke-01 :arg0 (c3 / country) :arg1 (r / right)) :op2 (e2 / expand-01 :arg1 (r2 / right))) :concession (s / setbacks :arg1-of (s2 / subject-01 :arg2 (u / union) :time (y / year :mod (r3 / recent)) :location (t / throughout :op1 (c4 / country)))))
(s / seem-01 :arg1 (t / tremble :arg1 (i / it) :arg2 (l / location :name (n / name :op1 "Palmwedel") :location (s2 / storm))))
(a / and :op1 (s / sociable :degree (v / very) :domain (p / person :name (n / name :op1 "Tamsin"))) :op2 (i / impetuous :arg1 (p2 / person)))
(r / ride-01 :arg0 (p / person :name (n / name :op1 "N-A") :arg0-of (b / bath :arg1 (a / and :op1 (- / -lrb- :arg1-of (s / soft-02)) :op2 (p2 / person :mod (c / country :name (n2 / name :op1 "N-A")))))) :location (p3 / park))
(u / understand-01 :arg0 (i / i) :arg1 (t / that) :concession-of (t2 / think-01 :arg0 (i2 / i) :arg1 (f / feel-01 :arg0 (p / person :location (a / around :op1 (w / world))) :arg1 (f2 / feel-01 :arg0 (p2 / person) :arg1 (p3 / pain-01 :arg0 (w2 / we)))) :arg1-of (t3 / thank-01 :arg2 (i3 / image :mod (t4 / this))) :mod (a2 / also)))
(c / contrast-01 :arg2 (a / and :op1 (h / have-03 :arg0 (i / it) :arg1 1) :op2 (w / weggelaufen :arg1 (i2 / it))))
(a / arrest-01 :arg1 (p / person :arg0-of (h / have-org-role-91 :arg1 (p2 / police :mod (c / country :name (n / name :op1 "N-A"))) :arg2 (d / dozens))) :arg2 (o / oppose-01 :arg0 (p3 / person) :arg1 (g / government-organization :arg0-of (g2 / govern-01)) :prep-against (g3 / government-organization :arg0-of (g4 / govern-01))))
(l / large :degree (t / too) :domain (f / foot :part-of (y / you)))
(t / tell-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg2 (c / coach))) :arg1 (c2 / coach) :arg2 (c3 / coach) :arg1-of (r / regular-02))
(r / remember-01 :arg0 (i / i) :arg1 (a / and :op1 (c / child :polarity - :mod (a2 / any) :arg0-of (c2 / call-02 :arg1 (a3 / around :op1 (a4 / around)) :arg1-of (p / possible-01)) :mod (s / simple)) :op2 (l / last-01 :arg1 (a5 / amusement-park :name (n / name :op1 "N-A") :mod (t / this)) :arg2 (a6 / around) :duration (m / many :op1 (t2 / temporal-quantity :quant (N / N-A) :unit (m2 / month)))) :mod (s2 / simple)))
(r / remain-01 :arg1 (s / size :poss (w / world)) :mod (s2 / still))
(a / and :op1 (t / trying :mode (i / imperative) :arg0 (y / you) :arg1 (a2 / and :op1 (p / person :name (n / name :op1 "Laura")) :op2 (p2 / person :name (n2 / name :op1 "Lena")) :op3 (p3 / person :name (n3 / name :op1 "Lisa")) :op4 (p4 / person :name (n4 / name :op1 "Marie")) :op5 (p5 / person :name (n5 / name :op1 "Bettina")) :op6 (p6 / person :name (n6 / name :op1 "Emma")) :op7 (p7 / person :name (n7 / name :op1 "Lisa" :op2 "Neitzel") :arg0-of (h / have-org-role-91 :arg2 (d / director)))) :manner (s / simple)) :op2 (l / look-04 :arg0 (a3 / and :op1 (p8 / person :name (n8 / name :op1 "Lisa" :op2 "Neitzel")) :op2 (p9 / person :name (n9 / name :op1 "Lisa" :op2 "Neitzel"))) :arg1 (c / colleagues) :direction (f / forward)) :manner (s2 / simple))
(s / say-01 :arg0 (h / he) :arg1 (a / appear-02 :arg1 (' / '' :arg1 (i / it) :arg2 (h2 / he))))
(a / and :op2 (a2 / appear-01 :arg1 (h / he) :location (c / comedy) :time (s / soon)))
(o / obligate-01 :arg2 (a / appear-01 :arg1 (p / person :quant (a2 / all) :arg0-of (h / have-org-role-91 :arg2 (o2 / official))) :time (n / now) :time (a3 / after :op1 (n2 / now) :quant (b / between :op1 (t / temporal-quantity :quant (N / N-A) :unit (w / week)) :op2 (t2 / temporal-quantity :quant (N2 / N-A) :unit (w2 / week)))) :purpose (g / guarantee-01 :arg0 (p2 / person) :arg1 (i / incorporated :arg1 (d / data :poss (p3 / person)) :arg2 (r / registrations :mod (b2 / biometrical))))))
(a / and :op1 (p / possible-01 :arg1 (d / die-01 :arg1 (s / she))) :op2 (a2 / and :op1 (f / flee-05 :arg0 (h / he)) :op2 (a3 / and :op1 (f2 / flee-05 :arg0 (h2 / he)) :op2 (f3 / fled :arg0 (h3 / he) :arg1 (h4 / hand)) :op3 (f4 / flee-05 :arg0 (h5 / he) :manner (h6 / hailed :arg0 (h7 / he))))))
FAILED_TO_PARSE#Couldn't convert to full AMR graph.
(p / person :arg0-of (p2 / participate-01) :quant (m / many :degree (s / so)) :arg1-of (c / cause-01 :arg0 (h / hope-01 :arg0 (p3 / person) :arg1 (p4 / probable :domain (a / and :op1 (w / weather :arg1-of (b / bad-07)) :op2 (r / rain-01 :time (m2 / morning)))))) :arg2-of (f / fortunate-01 :polarity -))
(t / tell-01 :arg0 (p / person :name (n / name :op1 "Vladimir" :op2 "Putin") :arg0-of (h / have-org-role-91 :arg1 (c / country :name (n2 / name :op1 "N-A")) :arg2 (p2 / president))) :arg1 (a / and :op1 (s / stop-01 :arg0 (g / government-organization :arg0-of (g2 / govern-01 :arg1 (c2 / country :name (n3 / name :op1 "N-A")))) :arg1 (f / fight-01 :arg0 (g3 / government-organization) :arg1 (s2 / separatist) :location (e / east :part-of (c3 / country)))) :op2 (b / begins :arg0 (g4 / government-organization) :arg1 (n4 / negotiate-01 :arg0 (g5 / government-organization) :arg1 (s3 / separatist) :arg2 (n5 / negotiate-01 :arg0 (g6 / government-organization) :arg1 (' / '' :mod ('2 / '')))) :time (i / immediate))) :arg2 (m / media :mod (c4 / country)))
(e / explode-01 :arg1 (a / and :op1 (h / hops) :op2 (m / malt)) :mod (a2 / also) :location (c / country :name (n / name :op1 "China")) :mod (a3 / also))
(a / and :op1 (p / phoned :arg0 (i / i) :arg1 (p2 / person :name (n / name :op1 "Piffl"))) :op2 (s / suggest-01 :arg0 (i2 / i) :arg1 (p3 / possible-01 :arg1 (s2 / sit-01 :arg1 (w / we) :arg2 (d / down :op1 (w2 / we))))) :arg1-of (s3 / say-01 :arg0 (' / '')))
(l / look-up-05 :arg0 (w / we) :arg1 (y / year :mod (t / this)) :purpose (e / ensure-01 :arg0 (w2 / we) :arg1 (a / and :op1 (p / person :arg0-of (s / study-01 :arg1 (u / university))) :op2 (e2 / effort :mod (m / maximum :op1 (l2 / luxury)) :mod (m2 / minimum))) :time (y2 / year :mod (t2 / this))) :manner (t3 / together))
(s / say-01 :arg0 (c / comment-01 :arg0 (p / person :arg0-of (l / lead-02 :arg1 (c2 / country :name (n / name :op1 "Germany"))) :arg0-of (l2 / lead-02 :arg1 (d / delegation :mod (g / german))) :arg0-of (l3 / lead-02 :arg1 (d2 / delegation :mod (g2 / german))))) :arg1 (p2 / pay-01 :arg0 (h / he) :arg1 (t / they) :arg3 (p3 / partner-01 :arg0 (h2 / he) :arg1 (c3 / country) :mod (p4 / potential) :purpose (p5 / project))))
(r / return-01 :arg1 (c / child :quant (a / all :polarity -) :location (c2 / country :name (n / name :op1 "Ukraine"))) :arg4 (s / school))
(c / cause-01 :arg0 (h / have-03 :arg0 (p / person :arg0-of (h2 / have-org-role-91 :arg2 (h3 / head-of-state))) :arg1 (p2 / profit-01) :location (d / division :ord (o / ordinal-entity :value 1)) :time (m / month :mod (l / last))) :arg1 (c2 / conclude-01 :arg0 (p3 / person :arg0-of (p4 / play-01)) :arg1 (p5 / person :arg0-of (p6 / play-01) :location (s / state)) :duration (f / few :op1 (t / temporal-quantity :quant (N / N-A) :unit (w / week)))))
(a / and :op1 (f / favor-01 :arg0 (y / you) :arg1 (o / organization :name (n / name :op1 "Gazprom") :location (c / country :name (n2 / name :op1 "Italy")))) :op2 (t / transport-01 :arg1 (g / gas :arg1-of (n3 / natural-03) :mod (c2 / country :name (n4 / name :op1 "Ukraine"))) :arg4 (s / south :part-of (c3 / country)) :arg1-of (d / direct-02) :mod (a2 / also)))
(d / dawn :prep-with (c / country :name (n / name :op1 "N-A")))
(a / and :op1 (r / realistic-03 :arg1 (a2 / and :op1 (p / pursue-01 :arg0 (a3 / and :op1 (p2 / person :arg0-of (h / have-org-role-91 :arg1 (c / country :name (n / name :op1 "Poland")) :arg2 (m / member))) :op2 (p3 / person :arg0-of (h2 / have-org-role-91 :arg1 (c2 / country :name (n2 / name :op1 "Poland")) :arg2 (m2 / member))) :op3 (p4 / person :arg0-of (h3 / have-org-role-91 :arg1 (c3 / country) :arg2 (m3 / member))) :mod (e / especially)) :arg1 (a4 / and :op1 (p5 / pursue-01 :arg0 (p6 / person) :arg1 (c4 / crisis) :location (c5 / country :name (n3 / name :op1 "Ukraine"))) :op2 (f / framed :arg0 (p7 / person) :arg1 (p8 / person)))) :op2 (f2 / framed :arg0 (p9 / person) :mod (o / of-course)))) :location (c6 / city :mod (e2 / especially)))
(d / deny-01 :arg0 (c / country :name (n / name :op1 "China")) :arg1 (l / law :mod (c2 / city :name (n2 / name :op1 "Hong" :op2 "Kong")) :topic (e / elect-01 :arg1 (g / government-organization :arg0-of (g2 / govern-01)))))
FAILED_TO_PARSE#Couldn't convert to full AMR graph.
(j / judge-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg3 (j2 / judge-01))) :frequency (s / sometimes) :time (c / case :mod (e / every)))
FAILED_TO_PARSE#Couldn't convert to full AMR graph.
(s / show-01 :arg0 (h / he) :arg1 (t / thing :manner-of (l / learn-01 :arg0 (h2 / he) :arg1 (t2 / tolerance) :arg2 (d / deal-01 :arg0 (h3 / he) :arg2 (m / man :mod (f / fellow) :mod (f2 / fellow) :poss (h4 / he))))) :mod (a / also))
(t / think-01 :arg2 (p / person))
(s / say-01 :arg0 (f / figure :mod (h / hospital)) :arg1 (i / injure-01 :arg1 (p / policeman)))
(d / difficult :domain (k / know-01 :arg1 (r / recommend-01 :arg1 (a / and :op1 (s / say-01 :arg0 (w / we) :arg1 (t / thing)) :op2 (m / much :degree (s2 / so))))))
(i / include-91 :arg1 (a / and :op1 (p / person :name (n / name :op1 "Birstein") :arg0-of (h / have-org-role-91 :arg2 (s / stations))) :op2 (p2 / person :arg0-of (h2 / have-org-role-91 :arg2 (h3 / head-of-state))) :op3 (p3 / person :arg0-of (h4 / have-org-role-91 :arg2 (o / orb))) :op4 (p4 / person :arg0-of (h5 / have-org-role-91 :arg2 (h6 / head-of-state))) :op5 (p5 / person :arg0-of (h7 / have-org-role-91 :arg2 (t / trenkwaldern)))) :arg2 (d / day :ord (o2 / ordinal-entity :value 2)))
(i / include-91 :arg1 (a / and :op1 (p / person :arg0-of (h / have-org-role-91 :arg1 (o / organization :name (n / name :op1 "Palmers")))) :op2 (p2 / person :arg0-of (h2 / have-org-role-91 :arg1 (o2 / organization) :arg3 (l / lead-02 :arg0 (p3 / person))))) :arg2 (' / '' :arg0 (p4 / person) :arg1 (p5 / person :name (n2 / name :op1 "Liam" :op2 "Hemsworth"))))
(t / think-01 :arg0 (i / i) :arg1 (c / cooperate-01 :arg1-of (p / possible-01)) :time (n / now))
(h / have-concession-91 :arg1 (d / detail-01 :polarity - :arg0 (d2 / detail :topic (d3 / detail :arg1-of (c / complicate-01) :quant (a / all)))))
(f / follow-01 :arg1 (d / decide-01) :arg2 (s / summer :mod (l / large :degree (m / most)) :arg1-of (i / include-91 :arg2 (p / protest-01 :arg1-of (p2 / public-02) :arg0-of (e / effective-04 :degree (m2 / most))) :location (c / city :name (n / name :op1 "Hong" :op2 "Kong")) :duration (s2 / several :op1 (t / temporal-quantity :quant (N / N-A) :unit (y / year))))))
(t / transport-01 :arg1 (w / warnstreiks) :mod (m / main))
(m / multi-sentence :snt1 (a / and :op1 (g / go-08 :arg1 (r / row :ord (o / ordinal-entity :value 1) :part-of (s / show-04 :arg1 (p / person :name (n / name :op1 "Lenny" :op2 "Henry")))) :arg2 (t / thing :quant 1984 :arg1-of (s2 / ship-01))) :op2 (i / include-91 :arg1 (t2 / thing :mod (o2 / other)) :arg2 (t3 / thing :mod (o3 / other)))) :snt2 (k / know-02 :arg1 (t4 / thing :arg1-of (k2 / know-02)) :manner (w / well)))
(r / report-01 :arg0 (m / media :mod (c / country :name (n / name :op1 "N-A"))) :arg1 (c2 / chaos :mod (t / traffic) :location (c3 / capital)))
(a / and :op1 (h / hold-01 :arg0 (p / person :quant 2004) :arg1 (b / breath)) :op2 (c / carry-01 :arg0 (b2 / baby :arg0-of (e / eat-01 :arg1 (a2 / arm :part-of (p2 / policeman :mod (c2 / country :name (n / name :op1 "N-A")))))) :arg1 (a3 / arm-01 :arg1 (b3 / baby))))
(g / give-01 :arg0 (h / he) :arg1 (m / monetary-quantity :quant 120 :unit (d / dollar)))
(h / hard-02 :arg1 (a / accept-01 :arg1 (t / that)) :condition (f / fair :polarity - :degree (b / bit) :domain (a2 / accept-01)))
(h / hate-01 :polarity - :arg0 (i / i) :arg1 (y / you) :arg1-of (n / natural-03))
(u / understand-01 :arg0 (i / i) :arg1 (p / possible-01 :arg1 (a / and :op1 (u2 / understand-01 :arg0 (p2 / person :prep-on (s / side :mod (o / other) :part-of (w / world))) :arg1 (f / feel-01 :arg0 (w2 / we))) :op2 (s2 / show-01 :arg0 (p3 / person) :arg1 (s3 / support-01 :arg0 (w3 / we))))) :time (t / time :mod (t2 / that)))
(c / contrast-01 :arg2 (a / and :op1 (e / enjoy-01 :arg0 (p / person :quant 700 :arg0-of (p2 / participate-01 :arg1 (a2 / and :op1 (p3 / person :arg0-of (h / have-org-role-91 :arg2 (h2 / head-of-state))) :op2 (p4 / person :arg0-of (h3 / have-org-role-91 :arg1 (p5 / person :name (n / name :op1 "Rastenden") :arg0-of (h4 / have-org-role-91 :arg1 (p6 / person :name (n2 / name :op1 "Begleittross"))))))))) :arg1 (b / break :location (p7 / park :arg1-of (l / low-04 :degree (m / more))))) :op2 (l2 / later :arg0 (p8 / person) :arg1 (p9 / party) :time (l3 / late :degree (m2 / more)) :subevent-of (s / sky :arg1-of (o / open-09) :location (s2 / schottener)))))
(c / call-01 :arg0 (a / and :op1 (g / government-organization :name (n / name :op1 "Kremlin")) :op2 (s / separatist)) :arg1 (o / or :op1 (' / '' :name (n2 / name :op1 ('2 / ''))) :op2 (k / khadjibey :name (n3 / name :op1 ('3 / '')))) :arg2 (o2 / or :op1 ('4 / '') :op2 ('5 / '')) :time (r / recent) :arg1-of (c2 / cause-01 :arg0 (r2 / reminiscent :arg1 (h / heyday :mod (p / pre-revolutionary) :poss (e / empire :name (n4 / name :op1 (p2 / pre-revolutionary) :op2 (e2 / empire)))))))
(w / win-01 :arg0 (p / person :name (n / name :op1 "Harvey") :arg0-of (w2 / win-01 :arg1 (d / division :ord (o / ordinal-entity :value 1)) :location (e / ethnic-group :name (n2 / name :op1 "WA")))) :arg2 (t / total-01 :arg2 (n3 / nearly :op1 (m / monetary-quantity :quant (n4 / nearly :op1 85) :unit (d2 / dollar)))) :time (y / year :mod (t2 / this)))
(a / and :op1 (a2 / agree-01 :arg0 (c / coalition) :arg1 (i / it)) :op2 (s / say-01 :arg0 (i2 / i) :arg1 (a3 / and :op1 (a4 / agree-01 :arg0 (c2 / coalition)) :op2 (c3 / come-01 :arg1 (p / person :arg0-of (l / lead-02 :arg1 (p2 / party))) :time (a5 / after :op1 (m / meet-03 :arg0 (p3 / person) :arg1 (b / body :mod (t / top) :poss (o / organization :name (n / name :op1 "CDU")) :location (c4 / city :name (n2 / name :op1 "Berlin")))))))))
(m / multi-sentence :snt1 (e / easy-05 :polarity - :arg1 (d / decide-01)) :snt2 (m2 / matured :arg1 (d2 / decide-01) :duration (s / several :op1 (t / temporal-quantity :quant (N / N-A) :unit (m3 / month)))))
(m / multi-sentence :snt1 (k / know-01 :arg0 (w / we) :arg1 (i / it) :topic (i2 / it) :mod (a / all) :time (m2 / moment)) :snt2 (c / cause-01 :arg0 (s / state-01 :arg0 (p / person :name (n / name :op1 "Emmet") :arg0-of (h / have-org-role-91 :arg1 (t / twitch) :arg2 (p2 / president))) :arg1 (d / decide-01 :arg0 (o / organization :name (n2 / name :op1 "Amazon"))) :arg1-of (c2 / cause-01 :arg0 (a2 / and :op1 (b / believe-01 :arg0 (p3 / person) :arg1 (c3 / community :poss (w2 / we))) :op2 (a3 / and :op1 (s2 / share-01 :arg0 (p4 / person) :arg1 (v / value :poss (w3 / we) :duration (l / long-03))) :op2 (w4 / want-01 :arg0 (p5 / person) :arg1 (h2 / help-01 :arg0 (p6 / person) :arg1 (g / get-05 :arg1 (w5 / we) :arg2 (t2 / there) :manner (f / fast :degree (m3 / more)))) :arg2 (w6 / we))))))))
(a / adapt-01 :arg1 (p / person :arg0-of (h / have-rel-role-91 :arg1 (c / child) :arg2 (c2 / child))) :arg2 (a2 / and :op1 (w / wear-01 :arg0 (c3 / child) :arg1 (e / embroidered)) :op2 (b / balloons :arg0 (c4 / child) :arg1 (h2 / hand :part-of (p2 / person :arg0-of (t / teach-01 :arg1 (e2 / embroidered))))) :op3 (g / give-01 :arg0 (c5 / child) :arg1 (f / flower))) :mod (t2 / tradition) :time (d / day :ord (o / ordinal-entity :value 1) :part-of (s / school :mod (n / new))))
(t / thrust :mod (m / main) :domain (s / strike-01 :arg2 (w / warn-01)))
(t / think-01 :mode (i / imperative) :arg0 (y / you) :arg1 (p / person :arg0-of (r / reside-01)))
(t / think-01 :arg0 (i / i) :arg1 (a / and :op1 (s / see-01 :arg0 (p / person :quant (m / many)) :arg1 (i2 / it) :time (o / ordinal-entity :value 1)) :op2 (u / understand-01 :arg0 (i3 / i) :arg1 (a2 / and :op1 (d / disaster :poss (w / we)) :op2 (c / contribute-01 :arg0 (w2 / we) :arg2 (s2 / something :arg1-of (r / resemble-01 :arg2 (e / event :mod (t2 / that) :mod (a3 / again)))))))) :condition (s3 / see-01 :arg0 (i4 / i) :arg1 (p2 / photo :source (i5 / i) :mod (o2 / online)) :arg2 (i6 / i)))
(c / claim-01 :arg0 (p / person :arg0-of (p2 / prosecute-01)) :arg1 (v / violate-01 :arg0 (p3 / person :arg0-of (p4 / prosecute-01)) :arg1 (c2 / control-01 :arg0 (o / organization :name (n / name :op1 "Audi")) :arg1 (q / q3)) :manner (a / and :op1 (c3 / care-03 :arg1-of (n2 / need-01)) :op2 (a2 / attend-02 :arg1 (g / girl)))))
(a / actor :domain (i / i))
(m / multi-sentence :snt1 (p / present-01 :arg0 (h / he) :arg1 (s / study :topic (a / affect-01 :arg1 (t / that)))) :snt2 (c / cause-01 :arg0 (c2 / contact-01 :arg0 (h2 / he) :arg1 (e / environment) :manner (a2 / asbestos)) :arg1 (t2 / thing :arg1-of (e2 / effect-03) :mod (t3 / that))))
(e / express-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg2 (p2 / premier))) :arg1 (f / family :arg1-of (h2 / have-org-role-91 :arg0 (h3 / he) :arg2 (m / member))) :location (c / country :name (n / name :op1 "South" :op2 "Africa") :arg1-of (n2 / neighbor-01)) :time (a / after :op1 (r / report-01 :arg0 (p3 / person) :arg1 (t / threaten-01 :arg1 (a2 / attack-01)))))
(p / play-01 :arg0 (w / we) :manner (t / together) :time (a / and :op1 (s / small :domain (w2 / we)) :op2 (g / go-02 :arg0 (w3 / we) :arg4 (t2 / therefrom :prep-to (s2 / school)))))
(p / point-out-02 :arg0 (r / report :name (n / name :op1 (g / goddard))) :arg1 (h / handle-01 :polarity - :arg1 (p2 / presence :mod (a / asbestos)) :arg1-of (a2 / accord-02 :arg2 (t / thing :arg1-of (p3 / provide-01 :arg1-of (r2 / relevant-01))))) :mod (a3 / also))
(w / want-01 :arg0 (p / person) :arg1 (s / start-01 :arg0 (p2 / person) :arg1 (v / verse :arg1 (e / end-01 :arg1 (e2 / end-01 :arg1 (p3 / person)))) :degree (q / quite)))
FAILED_TO_PARSE#Number of opening and closing brackets doesn't match.
(p / promise-01 :arg0 (p2 / person :arg0-of (o / organize-01)) :arg1 (f / festival :beneficiary (g / generation :quant (a / all))))
(r / read-01 :arg0 (p / person :name (n / name :op1 "George" :op2 "Webster") :quant 28) :arg1 (c / charge-05) :time (h / hear-01 :arg0 (p2 / person) :arg1 (g / government-organization :name (n2 / name :op1 "High" :op2 "Court") :location (c2 / city :name (n3 / name :op1 "Glasgow")))) :li 28)
(o / organize-01 :arg0 (a / and :op1 (g / government-organization :arg0-of (g2 / govern-01 :arg1 (c / city :name (n / name :op1 "Hong" :op2 "Kong")))) :op2 (o2 / organization :name (n2 / name :op1 "Chinese" :op2 "Liaison" :op3 "Office") :location (c2 / city))) :arg1 (s / survey-01 :arg1 (l / lis)))
(i / interest-01 :arg1 (s / school :arg1-of (h / high-02)) :time (a / already) :time (a2 / after :op1 (s2 / school :arg1-of (h2 / high-02) :duration (t / temporal-quantity :quant (N / N-A) :unit (y / year)))))
(m / money :mod (c / crucial) :domain (p / person :arg0-of (s / suffer-01 :arg1 (t / therapies :mod (g / good :degree (m2 / most)) :arg2-of (a / available-02)))) :mod (c2 / crucial) :domain (m3 / money))
(c / contribute-01 :arg0 (t / that) :arg2 (d / die-01 :arg1 (s / she)))
(a / and :op2 (l / let :mode (i / imperative) :arg0 (y / you) :location (l2 / location :name (n / name :op1 "San" :op2 "Marino")) :mod (e / even) :time (n2 / now)))
(c / coincidences)
(p / possible-01 :arg1 (f / fix-02 :arg0 (t / they) :arg1 (s / skin :arg1-of (b / breast)) :arg2 (s2 / skin :part-of (l / lungs))) :condition (a / and :op1 (t2 / tremors :arg1 (a2 / and :op1 (a3 / asbestos) :op2 (f2 / fibres)))))
(h / honest :arg1-of (b / brutal-02) :domain (h2 / he) :mod (t / too) :location (h3 / here) :mod (t2 / too))
(m / multi-sentence :snt1 (s / say-01 :arg0 (p / person :name (n / name :op1 "Richard" :op2 "Dimbath") :arg0-of (h / have-rel-role-91 :arg1 (i / i) :arg2 (f / friend))) :arg1 (l / let-01 :arg0 (w / we) :arg1 (a / activity-06 :arg0 (s2 / society) :arg1 (s3 / society))) :time (a2 / after :op1 (d / die-01 :arg1 (p2 / person :arg0-of (h2 / have-rel-role-91 :arg1 (i2 / i) :arg2 (f2 / friend))))) :time (a3 / after :op1 (d2 / die-01 :arg1 (p3 / person :arg0-of (h3 / have-rel-role-91 :arg1 (i3 / i) :arg2 (f3 / friend)))))) :snt2 (t / think-01 :arg0 (p4 / person :arg0-of (t2 / think-01 :arg1 (t3 / think-01 :arg0 (p5 / person) :arg1 (t4 / think-01 :arg0 (p6 / person) :arg1 (p7 / possible-01 :arg1 (' / '' :arg1 (t5 / thing :arg1-of (t6 / think-01 :arg0 (p8 / person))) :arg1-of (n2 / need-01))))))) :arg1 (t7 / thing :manner-of (c / consider-02 :arg1 (t8 / thing :manner-of (c2 / consider-02 :arg1 (t9 / thing)))))))
(c / cause-01 :arg1 (i / inform-01 :arg1 (p / person :name (n / name :op1 "Medau") :arg0-of (h / have-org-role-91 :arg1 (f / family) :arg2 (m / member))) :time (a / already) :time (m2 / middle :op1 (r / request-01 :arg0 (p2 / person :arg0-of (h2 / have-org-role-91 :arg1 (u / university))) :arg1 (f2 / family)))))
(a / and :op1 (x / x-rays :arg0 (d / doctor :mod (v / verwunderte)) :arg1 (b / breast :arg0 (d2 / doctor))) :op2 (p / put-01 :arg0 (d3 / doctor) :arg1 (p2 / pleurakathether) :arg2 (p3 / pleurakathether) :purpose (a2 / and :op1 (d4 / detect-01 :arg0 (d5 / doctor) :arg1 (l / liquid)) :op2 (t / test-01 :arg0 (d6 / doctor) :arg1 (l2 / liquid) :location (l3 / laboratory)))))
(a / and :op1 (a2 / attack-01 :arg0 (i / it) :arg1 (h / health :poss (i2 / i))) :op2 (f / feel-01 :arg0 (i3 / i) :arg1 (i4 / it) :mod (s / still)))
(o / obligate-01 :arg1 (w / woman :mod (w2 / white)) :arg2 (i / involve-01 :arg1 (w3 / woman) :arg2 (s / story) :purpose (j / justify-01 :arg0 (w4 / woman) :arg1 (m / murder-01 :arg1 (p / person :name (n / name :op1 "Lynch"))))))
(a / and :op1 (t / take-01 :arg0 (s / state :name (n / name :op1 "Maryland")) :arg1 (r / rate-entity-91 :arg1 1000000000 :arg2 (m / monetary-quantity :quant (N / N-A) :unit (d / dollar))) :arg3 (t2 / tax-01 :arg3 (i / income :poss (c / corporation)))) :op2 (a2 / amount :arg1-of (h / high-02 :degree (m2 / most)) :location (r2 / region)))
(r / return-01 :arg1 (a / and :op1 (i / ideal :mod (r2 / right :mod (h / human)) :mod (c / country :name (n / name :op1 "N-A"))) :op2 (r3 / right :mod (r4 / right :mod (h2 / human))) :degree (v / very)))
(c / contrast-01 :arg1 (f / family :mod (a / alone :polarity - :degree (q / quite)) :arg0-of (h / have-rel-role-91 :arg1 (w / we) :arg2 (r / relative))) :arg2 (k / kill-01 :arg1 (p / person :mod (a2 / all) :arg0-of (h2 / have-rel-role-91 :arg1 (w2 / we) :arg2 (r2 / relative)))))
(m / multi-sentence :snt1 (i / identify-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (o / organization :name (n / name :op1 "Prudential")))) :arg1 (r / rate-entity-91 :arg1 (r2 / rate :mod (d / die-01)) :arg2 (d2 / die-01 :arg1 (p2 / person)))) :snt2 (r3 / receive-01 :arg0 (t / this) :arg1 (i2 / insure-02 :arg1 (l / life) :quant (m2 / more :polarity -)) :time (t2 / then)))
(m / multi-sentence :snt1 (s / same-01 :mode (i / interrogative) :arg1 (w / we) :arg2 (d / do-02 :arg0 (w2 / we) :arg1 (s2 / same))) :snt2 (i2 / intend-01 :mode (i3 / interrogative) :arg0 (y / you) :arg1 (* / * :arg0 (y2 / you) :arg1 (*2 / *)) :arg1-of (i4 / intend-01)))
(l / love-01 :arg0 (p / person) :arg1 (s / story))
(r / recommend-01 :arg0 (p / person :name (n / name :op1 "David" :op2 "Cameron") :arg0-of (h / have-org-role-91 :arg1 (c / company :name (n2 / name :op1 "BP")) :arg2 (c2 / chairman) :time (f / former)) :arg0-of (h2 / have-org-role-91 :arg1 (c3 / company :name (n3 / name :op1 "BP")) :arg2 (c4 / chairman) :time (f2 / former)) :arg0-of (h3 / have-org-role-91 :arg1 (c5 / company :name (n4 / name :op1 "BP")) :arg2 (c6 / chairman) :time (f3 / former))) :arg1 (h4 / have-org-role-91 :arg0 (p2 / person) :arg1 (c7 / cabinet) :arg2 (c8 / consultant)))
(b / believe-01 :arg0 (i / i) :arg1 (c / create-01 :polarity - :arg0 (i2 / i) :arg1 (t / trip-03 :arg1 (t2 / trip-03)) :time (n / no-longer :mod (a / any))))
(s / see-01 :arg0 (l / left) :arg1 (p / plan-01 :arg1 (d / dispute-01 :arg2 (d2 / dispute-01 :arg2 (u / union-02)))))
(p / put-01 :arg1 (r / refugee) :arg2 (r2 / refugee) :time (n / now) :location (c / country :mod (n2 / new)))
(s / say-01 :arg0 (p / person :name (n / name :op1 "Hattery")) :arg1 (a / and :op1 (d / decide-01 :arg0 (t / they) :arg1 (c / campaign-01 :arg0 (t2 / they) :arg1 (s2 / suffrage :arg0 (w / woman) :arg1 (w2 / woman)))) :op2 (r / right-05 :arg1 (v / vote-01 :arg0 (p2 / person :arg1-of (b / black-05)) :arg1 (v2 / vote-01 :arg0 (p3 / person) :arg1 (p4 / person :arg1-of (b2 / black-05)))))))
(s / state-01 :arg0 (s2 / state :quant 1 :arg1-of (i / include-91 :arg2 (s3 / state :quant 11 :arg0-of (i2 / inform-01 :arg1 (l / law :arg1-of (r / resemble-01)))))) :arg1 (a / and :op1 (m / measure-02 :arg0 (c / court) :arg1 (m2 / measure-02 :mod (s4 / such)) :location (p / peninsula :name (n / name :op1 "N-A"))) :op2 (d / direct-01 :arg0 (c2 / court) :arg1 (m3 / measure-02 :mod (s5 / such))) :time (r2 / recent)))
(m / multi-sentence :snt1 (i / it :prep-with (i2 / i) :mod (s / still)) :snt2 (h / have-03 :polarity - :arg0 (i3 / i) :arg1 (a / anything :arg1-of (l / let-01 :arg0 (i4 / i) :location (b / behind :op1 (i5 / i))))))
(c / consist-01 :arg1 (p / point :arg1-of (d / differ-02) :mod (v / view-01)) :arg2 (t / thing :arg1-of (p2 / precede-01 :arg2 (e / eye))) :time (a / after :op1 (n / now) :duration (t2 / time :mod (n2 / next))))
(b / bring-01 :arg0 (h / he) :arg1 (h2 / he) :arg2 (t / trouble) :frequency (o / often) :condition (t2 / try-01 :arg0 (h3 / he) :arg1 (f / funny :domain (h4 / he))) :arg1-of (c / cause-01 :arg0 (l / like-01 :polarity - :arg0 (h5 / he) :arg1 (a / and :op1 (p / person :arg0-of (h6 / have-rel-role-91 :arg1 (h7 / he) :arg2 (f2 / father))) :op2 (p2 / person :arg0-of (h8 / have-rel-role-91 :arg1 (h9 / he) :arg2 (f3 / father))) :op3 (p3 / person :arg0-of (h10 / have-rel-role-91 :arg1 (h11 / he) :arg2 (f4 / father))) :op4 (p4 / person :arg0-of (h12 / have-rel-role-91 :arg1 (h13 / he) :arg2 (f5 / father))) :op5 (p5 / person :arg0-of (h14 / have-rel-role-91 :arg1 (h15 / he) :arg2 (f6 / father))) :op6 (e / et-cetera)))))
FAILED_TO_PARSE#Number of opening and closing brackets doesn't match.
(j / judge-01 :arg0 (p / person :name (n / name :op1 "Lady" :op2 "Rae") :arg0-of (h / have-org-role-91 :arg3 (j2 / judge-01))) :arg1 (p2 / person :arg0-of (h2 / have-org-role-91 :arg3 (j3 / judge-01))) :time (d / date-entity :month 11 :day 17) :location (g / government-organization :name (n2 / name :op1 "High" :op2 "Court") :location (c / city :name (n3 / name :op1 "Edinburgh"))))
(u / use-01 :arg0 (y / you) :arg1 (i / it) :condition (h / have-03 :arg0 (c / camera :poss (y2 / you)) :arg1 (s / series)) :condition (h2 / have-03 :arg0 (c2 / camera :poss (y3 / you)) :arg1 (s2 / series)))
(a / and :op1 (b / be-temporally-at-91 :arg1 (w / we) :arg2 (d / during :op1 (r / return-01 :polarity - :arg1 (w2 / we)))) :op2 (w3 / warn-01 :arg0 (i / i) :arg2 (p / person :name (n / name :op1 "Poroshenko"))))
(a / and :op1 (c / characteristics :arg1 (c2 / crisis)) :op2 (c3 / cause-01 :arg0 (e / ethnisiert :arg1 (s / situation) :degree (s2 / so)) :arg1 (o / obligate-01 :arg2 (e2 / express-01 :arg0 (t / they)))))
(b / block-01 :arg1 (a / access-01 :arg1 (g / government-organization :name (n / name :op1 "Parliament"))) :mod (a2 / also))
(( / ( :( (n / name) :op1 "Georgi" :op2 "Fanijew")
(d / deploy-01 :arg1 (f / force :mod (s / security) :quant (m / more-than :op1 40)) :arg2 (p / protect-01 :arg0 (f2 / force) :arg1 (d2 / district :mod (g / government-organization :arg0-of (g2 / govern-01)))))
(b / become-01 :arg1 (t / this) :arg2 (e / evident) :time (e2 / early :op1 (e3 / early :op1 (e4 / early :op1 (e5 / early :op1 (e6 / early :op1 (e7 / early :op1 (e8 / early :op1 (e9 / early :op1 (d / date-entity :decade (N / N-A))))))))) :ord (o / ordinal-entity :value 1)))
(m / multi-sentence :snt1 (m2 / make-01 :arg0 (w / we) :arg1 (a / activity-06 :arg0 (p / person :name (n / name :op1 "Richard" :op2 "Dimbath") :arg0-of (h / have-rel-role-91 :arg1 (i / i) :arg2 (f / friend))) :mod (a2 / association)) :time (a3 / after :op1 (d / die-01 :arg1 (p2 / person :arg0-of (h2 / have-rel-role-91 :arg1 (i2 / i) :arg2 (f2 / friend))))) :time (a4 / after :op1 (d2 / die-01 :arg1 (p3 / person :arg0-of (h3 / have-rel-role-91 :arg1 (i3 / i) :arg2 (f3 / friend)))))) :snt2 (n2 / need-01 :arg1 (' / '' :name (n3 / name :op1 (t / thinking-phase) :op2 (t2 / thinking-phase)) :mod (t3 / this)) :purpose (c / consider-02 :arg0 (w2 / we) :arg1 (t4 / thing :manner-of (g / go-06 :arg1 (i4 / it) :arg1-of (p4 / possible-01))))))
(a / and :op1 (s / seem-01 :arg1 (g / go-01 :arg1 (c / city :name (n / name :op1 "Washington")) :arg4 (b / business :mod (s2 / small)) :arg4 (b2 / business :mod (s3 / small) :location (r / room))) :time (m / meantime)) :op2 (p / pay-01 :arg0 (t / they) :arg1 (a2 / and :op1 (p2 / person :mod (n2 / nation) :mod (m2 / more)) :op2 (p3 / person :arg1-of (l / local-02) :mod (n3 / nation)) :quant (m3 / more)) :arg0-of (c2 / cause-01 :arg1 (s4 / study-01 :mod (y / youngest)))) :time (m4 / meantime))
(h / have-condition-91 :arg1 (a / amr-unknown :domain (a2 / amr-unknown) :condition (c / continue-01 :arg0 (y / you) :arg1 (b / beaten :arg0 (y2 / you) :arg1 (t / this)))) :arg2 (h2 / have-condition-91 :arg1 (h3 / have-03 :arg0 (y3 / you) :arg1 (e / event) :time (y4 / yesterday) :condition (h4 / have-03 :arg0 (i / it) :arg1 (e2 / event))) :arg2 (h5 / have-03 :arg0 (i2 / it) :arg1 (e3 / event) :time (y5 / yesterday))))
(t / task :mod (d / difficult) :domain (i / it))
(a / and :op1 (l / leave-15 :arg0 (i / i) :arg1 (r / rate-entity-91 :arg1 (a2 / about :op1 (b / between :op1 (t / temporal-quantity :quant (N / N-A) :unit (m / minute)) :op2 (t2 / temporal-quantity :quant (N2 / N-A) :unit (m2 / minute)))) :arg2 (t3 / temporal-quantity :quant (N3 / N-A) :unit (m3 / minute)) :time (b2 / before :op1 (s / storm-02 :arg0 (t4 / terrorist) :arg1 (t5 / terrorist))))) :op2 (r2 / remember-01 :arg0 (i2 / i) :arg1 (i3 / it)) :op3 (r3 / remember-01 :arg0 (i4 / i) :arg1 (i5 / it)))
(r / report-01 :arg0 (p / person :name (n / name :op1 "Li")) :time (y / year :mod (n2 / next)) :condition (r2 / reach-01 :arg0 (t / they) :arg1 (p2 / product :arg1-of (g / gross-03) :mod (d / domestic) :mod (m / monetary-quantity :quant 250 :unit (e / euro)))))
(p / possible-01 :arg1 (b / befriend-01 :arg0 (p2 / person :quant (a / all) :arg0-of (h / have-org-role-91 :arg1 (c / club :mod (b2 / both)) :arg2 (m / member))) :arg1 (o / opine-01 :arg0 (p3 / person)) :time (f / future) :mod (a2 / again)))
(a / and :op1 (p / play-01 :arg0 (p2 / person :name (n / name :op1 "Stallone")) :arg1 (r / rate-entity-91 :arg1 (l / less-than :op1 (m / monetary-quantity :quant 90 :unit (d / dollar :mod (r2 / renminbi)))) :arg2 (v / volume-quantity :quant (N / N-A) :unit (g / gallon))) :time (d2 / date-interval :op1 (d3 / date-entity :decade (N2 / N-A)) :op2 (d4 / date-entity :dayperiod (N3 / N-A))) :location (c / country :name (n2 / name :op1 "US"))) :op2 (p3 / play-01 :arg0 (p4 / person) :arg1 (m2 / monetary-quantity :quant 30 :unit (d5 / dollar :mod (c2 / country)) :arg1-of (i / include-91 :arg2 (m3 / monetary-quantity :quant 30 :unit (d6 / dollar :mod (c3 / country))))) :arg3 (m4 / monetary-quantity :quant 30 :unit (d7 / dollar :mod (c4 / country)) :arg1-of (i2 / include-91 :arg2 (m5 / monetary-quantity :quant 30 :unit (d8 / dollar :mod (c5 / country))))) :time (d9 / date-entity :year (N4 / N-A))))
(p / play-02 :arg0 (l / lady :poss (o / organization :name (n / name :op1 "TTV" :op2 "Geismar"))) :arg1 (g / game) :location (o2 / organization :name (n2 / name :op1 "National" :op2 "League")) :ord (o3 / ordinal-entity :value 2))
(m / multi-sentence :snt1 (a / and :op1 (g / get-05 :arg1 (h / he) :arg2 (u / up) :manner (s / simple)) :op2 (s2 / say-01 :arg0 (i / i) :arg1 (l / love-01 :arg0 (i2 / i) :arg1 (i3 / i)))) :snt2 (b / believe-01 :polarity - :arg0 (i4 / i) :arg1 (h2 / have-03 :arg0 (y / you) :arg1 (h3 / have-condition-91 :arg1 (h4 / have-03 :arg0 (y2 / you) :arg1 (t / that) :time (n / now) :location (c / chair :mod (r / rotation)) :time (a2 / already)) :arg2 (y3 / you)))))
FAILED_TO_PARSE#Couldn't convert to full AMR graph.
(r / recommend-01 :arg0 (p / person :name (n / name :op1 "David" :op2 "Cameron") :arg0-of (h / have-org-role-91 :arg1 (c / company :name (n2 / name :op1 "BP")) :arg2 (c2 / chairman) :time (f / former)) :arg0-of (h2 / have-org-role-91 :arg1 (c3 / company :name (n3 / name :op1 "BP")) :arg2 (c4 / chairman) :time (f2 / former)) :arg0-of (h3 / have-org-role-91 :arg1 (c5 / company :name (n4 / name :op1 "BP")) :arg2 (c6 / chairman) :time (f3 / former))) :arg1 (b / become-01 :arg1 (p2 / person) :arg2 (p3 / person :arg0-of (a / advise-01 :arg2 (c7 / cabinet)))))
(k / know-01 :arg0 (i / it) :arg1 (p / person :name (n / name :op1 "Kratzbürstig")))
(s / suppose-01 :arg1 (g / good :domain (c / cyclist :source (r / resort)) :time (d / depart-01 :arg0 (t / they) :time (a / after :op1 (t2 / temporal-quantity :quant (N / N-A) :unit (h / hour))))))
(m / multi-sentence :snt1 (e / equal-01 :arg1 (w / we) :arg2 (e2 / equal-01 :arg1 (w2 / we) :arg2 (o / ordinal-entity :value (b / beginnings)))) :snt2 (w3 / wortspiel :mode (e3 / expressive)))
(a / and :op1 (r / responsible :arg0 (p / person :arg0-of (h / hack-04) :arg0-of (h2 / hack-04)) :arg1 (p2 / photograph-01 :quant 60 :mod (t / that)) :arg1-of (c / cause-01 :arg0 (' / '' :arg0 (a2 / and :op1 (p3 / person :name (n / name :op1 "Lawrence")) :op2 (p4 / person :name (n2 / name :op1 "Cara" :op2 "Delevingne") :arg0-of (h3 / have-org-role-91 :arg1 (a3 / and :op1 (p5 / person :name (n3 / name :op1 "Cara" :op2 "Delevingne")) :op2 (p6 / person :name (n4 / name :op1 "Cara" :op2 "Delevingne")) :op3 (p7 / person :name (n5 / name :op1 "Ariana" :op2 "Grande")) :op4 (p8 / person :name (n6 / name :op1 "Ariana" :op2 "Grande")) :op5 (p9 / person :name (n7 / name :op1 "Ariana" :op2 "Grande")) :op6 (p10 / person :name (n8 / name :op1 "Lea")) :op7 (p11 / person :name (n9 / name :op1 "Lea")))))) :arg1 (a4 / and :op1 (p12 / person :name (n10 / name :op1 "Rihanna") :arg0-of (h4 / have-org-role-91 :arg2 (m / models))) :op2 (p13 / person :name (n11 / name :op1 "Rihanna") :arg0-of (h5 / have-org-role-91 :arg2 (s / singers))))))) :op2 (v / vapor :arg0 (p14 / person :name (n12 / name :op1 "Kirsten") :arg0-of (h6 / have-org-role-91 :arg2 (a5 / actress))) :arg1 (a6 / and)))
(k / kill-01 :arg1 (h / human :quant (m / more-than :op1 (1 / 1/2)) :arg1-of (i / include-91 :arg2 (c / child :arg0-of (h2 / have-rel-role-91 :arg1 (c2 / child) :arg2 (c3 / child))))) :arg1-of (c4 / cause-01 :arg0 (s / shock-01 :arg0 (s2 / shock-01 :arg0 (w / world)) :arg1 (h3 / human))))
(u / utilize-01 :arg0 (c / crisis :location (a / around :op1 (g / globe))) :arg1 (e / economy :poss (p / person :arg1-of (r / rank-01 :ord (o / ordinal-entity :value 2)))))
(p / possible-01 :arg1 (e / exemplify-01 :arg0 (c / cost-01 :arg1 (m / monetary-quantity :quant 20 :unit (d / dollar)) :arg2 (d2 / duration :mod (s / semester :mod (a / about :op1 (m2 / monetary-quantity :quant 20 :unit (d3 / dollar))))))))
(a / and :op2 (b / bring-01 :arg0 (s / separatist) :arg1 (t / town :mod (s2 / small) :quant (s3 / several)) :arg2 (c / control-01 :arg0 (s4 / separatist) :arg1 (f / field :location (l / location :name (n / name :op1 "Donezk"))))))
(b / bring-01 :arg0 (a / and :op1 (p / person :arg0-of (h / have-org-role-91 :arg2 (d / doctor :mod (f / family :arg1-of (h2 / have-org-role-91 :arg0 (p2 / person) :arg2 (m / member)))))) :op2 (p3 / person :arg0-of (h3 / have-org-role-91 :arg1 (f2 / family :arg1-of (h4 / have-org-role-91 :arg0 (p4 / person) :arg2 (m2 / member)))))) :arg1 (a2 / and :op1 (c / ct-scans :arg0 (p5 / person)) :op2 (x / x-rays :arg0 (p6 / person))) :arg2 (g / group :arg1-of (e / expert-01)) :time (d2 / date-entity :month 9 :year 2011) :mod (a3 / again))
(u / understand-01 :arg0 (i / i) :arg1 (w / whereon :degree (a / absolute) :arg1-of (w2 / want-01 :arg0 (y / you))) :arg1-of (c / cause-01 :arg0 (s / say-01 :arg0 (i2 / i) :arg1 (a2 / and :op1 (s2 / say-01 :arg0 (i3 / i) :arg1 (w3 / whereon :arg0 (p / person :name (n / name :op1 "Esme")) :arg1 (v / voice :mod (q / quiet)) :arg2 (v2 / voice :mod (q2 / quiet)) :time (i4 / it :mod (c2 / certain)))) :op2 (s3 / speak-01 :arg0 (p2 / person) :arg1 (a3 / and :op1 (s4 / speak-01 :arg0 (p3 / person) :arg1 (a4 / and :op1 (e / end-01 :arg1 (v3 / voice)) :op2 (' / '' :arg0 (p4 / person)))) :op2 (s5 / spoken :arg0 (p5 / person) :arg1 (n2 / nothing :mod (o / other)) :time (h / healed :polarity - :arg1 (w4 / we) :degree (s6 / so) :arg0-of (e2 / effective-04 :arg1 (e3 / effective-04 :arg0 (w5 / we) :arg1 (w6 / we)))))))))))
(a / and :op2 (l / like-02 :arg0 (i / i) :arg1 (f / forget-01 :arg0 (i2 / i))))
FAILED_TO_PARSE#Couldn't convert to full AMR graph.
(m / multi-sentence :snt1 (h / hope-01 :arg0 (i / i) :arg1 (c / contrast-01 :arg1 (h2 / have-03 :arg0 (w / woman :arg0-of (h3 / have-03 :arg1 (t / thing :arg1-of (d / differ-02)))) :arg1 (w2 / woman :arg1-of (d2 / differ-02))) :arg2 (r / reason :arg0-of (c2 / cause-01 :arg1 (u / understand-01 :arg0 (w3 / woman) :arg1 (d3 / danger :arg1-of (d4 / differ-02 :arg2 (p / poll-01 :arg2 (o / opine-01 :arg0 (p2 / public))) :arg1-of (s / significant-02)))))))) :snt2 (w4 / write-01 :arg0 (p3 / person :name (n / name :op1 "Steinem"))))
(a / and :op1 (w / want-01 :arg0 (l / location :name (n / name :op1 "Amazon") :mod (e / exact)) :arg1 (m / make-01 :arg0 (l2 / location :name (n2 / name :op1 "Amazon")) :arg1 (m2 / money) :arg2 (i / it))))
(m / multi-sentence :snt1 (i / instead-of-91 :arg1 (b / become-01 :arg1 (i2 / it) :arg2 (p / platform :beneficiary (p2 / person :arg0-of (p3 / play-01) :arg0-of (w / want-01 :arg1 (s / stunts :arg0 (p4 / person)))))) :arg1-of (q / quick-02)) :snt2 (s2 / say-01 :arg0 (p5 / person :arg0-of (h / have-org-role-91 :arg2 (' / ''))) :arg1 (i3 / insiders :arg0 (p6 / person))))
(a / and :op2 (a2 / appear-01 :arg1 (h / he) :location (c / comedy) :time (s / soon)))
(a / and :op2 (r / recommend-01 :arg1 (c / consider-02 :arg0 (y / you) :arg1 (p / person :name (n / name :op1 "Gault")) :condition (a2 / available-02 :arg2 (b / book) :mod (a3 / actual))) :time (b2 / before :op1 (o / order :mod (o2 / online)))))
(a / and :op1 (w / want-01 :arg0 (i / i) :arg1 (e / everything) :time (o / once :op1 (l / late :degree (m / more) :compared-to (l2 / late :degree (m2 / more))))) :op2 (q / quote-01 :arg0 (h / he)))
(s / state-01 :arg0 (i / it) :arg1 (r / remain-01 :arg1 (o / organization :name (n / name :op1 "The" :op2 "Army")) :arg3 (c / commit-01 :arg1 (o2 / organization) :arg2 (e / ensure-01 :arg0 (o3 / organization) :arg1 (s2 / security :poss (s3 / state))))) :medium (s4 / statement))
(b / be-located-at-91 :arg1 (a / and :op1 (p / person :name (n / name :op1 "Güntersen")) :op2 (o / organization :name (n2 / name :op1 "TTC")) :op3 (c / company :name (n3 / name :op1 "N-A") :mod (t / ttv))) :arg2 (g / game))
(e / easy-05 :polarity - :arg1 (t / that) :time (a / always) :arg1-of (c / cause-01 :arg0 (a2 / and :op1 (p / person :arg0-of (h / have-rel-role-91 :arg1 (p2 / person :name (n / name :op1 "Ellie")) :arg2 (f / father))) :op2 (p3 / person :name (n2 / name :op1 "Tamsin") :arg0-of (h2 / have-rel-role-91 :arg1 (p4 / person) :arg2 (f2 / father))) :li 16)))
(s / shrank :arg1 (e / economy :mod (g / german)) :arg2 (p / percentage-entity :value (N / N-A)) :location (s2 / spring))
(r / report)
(d / district-firing :domain (o / one :arg1-of (i / include-91 :arg2 (c / climaxes :mod (b / big) :location (h / history :mod (a / association))))) :ord (o2 / ordinal-entity :value 44 :range (h2 / history :mod (a2 / association))) :arg1-of (c2 / cause-01 :arg0 (c3 / consecration :arg1 (c4 / consecration :mod (s / solemnly) :poss (f / flag :mod (n / new))) :time (d2 / date-entity :month 7 :year 1991))))
(c / contrast-01 :arg1 (f / feel-01 :arg0 (w / we) :arg1 (h / have-condition-91 :arg1 (g / go-02 :mode (i / imperative) :arg0 (w2 / we) :arg4 (g2 / government-organization :name (n / name :op1 "FSB"))) :arg2 (g3 / go-01 :arg1 (w3 / we) :arg4 (g4 / government-organization :name (n2 / name :op1 "FSB")) :time (y / yesterday)))) :arg2 (c2 / cause-01 :arg0 (d / damage-01 :arg1 (h2 / health :poss (p / person)) :arg1-of (c3 / cause-01 :arg0 (p2 / possible-01 :arg1 (d2 / do-02 :arg0 (p3 / person) :arg1 (i2 / it)))))))
(o / occupy-01 :arg0 (m / movement-07) :arg1 (a / and :op1 (l / love-01) :op2 (p / peace)) :location (b / behind :op1 (c / campaign-01 :arg0-of (f / favor-01 :arg1 (d / democracy)))) :arg1-of (c2 / cause-01 :arg0 (t / threaten-01 :arg0 (p2 / person :arg0-of (o2 / organize-01) :arg1-of (i / include-91 :arg2 (p3 / person :arg0-of (o3 / organize-01)))) :arg1 (s / suffrage :polarity - :mod (u / universal) :mod (r / real)))) :location (c3 / city :name (n / name :op1 "Hong" :op2 "Kong")))
(m / multi-sentence :snt1 (c / contribute-01 :arg0 (a / act-02 :mod (t / this)) :arg2 (a2 / and :op1 (r / rationalisation :arg1 (s / service :mod (p / public))) :op2 (n / number :arg1-of (a3 / actual-02) :quant-of (p2 / person :arg0-of (s2 / serve-01) :mod (c2 / civil)))) :arg1-of (s3 / significant-02)) :snt2 (a4 / and :op1 (e / eliminate-01 :arg0 (p3 / person :name (n2 / name :op1 "Geisterangestellten")) :arg1 (p4 / person :name (n3 / name :op1 "Anne" :op2 "Waiguru") :arg0-of (f / found-01 :arg1 (p5 / person)))) :op2 (s4 / say-01 :arg0 (p6 / person) :arg1 (a5 / and :op1 (e2 / eliminate-01 :arg0 (p7 / person :name (n4 / name :op1 "Anne" :op2 "Waiguru") :arg0-of (f2 / found-01 :arg1 (p8 / person))) :arg1 (f3 / found-01 :arg1 (p9 / person))) :op2 (m2 / message-01 :arg0 (p10 / person))))))
(s / say-01 :arg0 (p / person :name (n / name :op1 "Matt" :op2 "Abschlussstudent" :op3 "Casaday") :quant (m / multiple :op1 25) :arg0-of (h / have-org-role-91 :arg1 (o / organization :name (n2 / name :op1 "Brigham" :op2 "Young" :op3 "University")))) :arg1 (s2 / spend-02 :arg0 (p2 / person) :arg1 (m2 / monetary-quantity :quant 42 :unit (c / cent) :arg2-of (c2 / copy-01 :arg1 (t / thing :arg2-of (c3 / copy-01 :arg1 (t2 / thing :arg1-of (d / decide-01 :arg0 (m3 / media)) :mod (s3 / strategy) :mod (s4 / strategic)))))) :arg3 (t3 / thing :arg2-of (c4 / copy-01 :arg1 (t4 / thing :arg2-of (c5 / copy-01 :arg1 (t5 / thing :arg1-of (d2 / decide-01 :arg0 (m4 / media)) :mod (s5 / strategy) :mod (s6 / strategic))))))))
(s / succeed-01 :arg0 (p / premiere :arg1-of (o / open-04)) :arg1 (m / more :compared-to (n / number :quant-of (p2 / person :arg0-of (v / visit-01)))))
(a / and :op1 (g / go-02 :arg0 (i / i) :arg4 (s / school) :time (l / late :degree (m / more))) :op2 (f / fear-01 :arg0 (i2 / i) :frequency (r / rate-entity-91 :arg3 (t / temporal-quantity :quant (N / N-A) :unit (d / day)))))
(s / song :mod (s2 / stupid) :mod (t / that) :mod (j / just) :domain (i / it))
(t / tube :mod (d / dangerous :degree (m / most)) :prep-with (i / isolations :location (b / below :op1 (e / earth))) :arg0-of (c / cause-01 :arg1 (s / stop-01 :polarity - :arg0 (p / person :arg0-of (h / have-rel-role-91 :arg2 (p2 / patient))) :arg1 (m2 / material))))
(r / reach-01 :arg1 (r2 / record :mod (a / association)) :frequency (r3 / rate-entity-91 :arg3 (t / temporal-quantity :quant (N / N-A) :unit (y / year))) :frequency (r4 / rate-entity-91 :arg3 (t2 / temporal-quantity :quant (N2 / N-A) :unit (y2 / year))) :arg1-of (c / cause-01 :arg0 (p / person :name (n / name :op1 "Rudi" :op2 "Meier"))))
(s / say-01 :arg0 (p / person :name (n / name :op1 "Andrew" :op2 "Morgan")) :arg1 (l / life-threatening :polarity - :arg1 (m / mesothelioma :mod (' / ''))))
(c / comment-01 :arg0 (a / and :op1 (p / person :name (n / name :op1 "Palmer")) :op2 (p2 / person :name (n2 / name :op1 "Chuck-Star" :op2 "Strahovski")) :op3 (a2 / actress)) :arg3 (c2 / comments :arg1 (i / image :arg0-of (h / hack-04))) :time (y / yesterday) :arg1-of (c3 / cause-01 :arg0 (a3 / available-02 :polarity - :arg2 (i2 / image :arg0-of (h2 / hack-04)))))
(b / book :mod (e / e) :mod (a / also) :arg1-of (i / instead-of-91 :arg2 (o / option)))
(a / and :op1 (e / expert-01 :arg1 (p / person :arg0-of (h / have-org-role-91 :arg1 (c / country :name (n / name :op1 "UK")) :arg2 (p2 / person :arg1-of (e2 / expert-01 :arg2 (l / lead-02 :arg0 (p3 / person))))) :arg0-of (h2 / have-org-role-91 :arg2 (p4 / professor))) :arg2 (p5 / person :name (n2 / name :op1 "Julian" :op2 "Peto") :arg0-of (h3 / have-org-role-91 :arg2 (p6 / professor))) :location (b / between :op1 (t / talk-02 :arg2 1870) :op2 (e3 / expect-01 :arg1 (c2 / come-01 :arg1 (c3 / criminal-organization :name (n3 / name :op1 "N-A") :location (c4 / country :name (n4 / name :op1 "Britain"))))))) :op2 (f / fall-07 :arg1 (p7 / person) :arg2 (d / disease)) :condition (e4 / expect-01 :arg1 (c5 / come-01 :arg1 (c6 / criminal-organization :name (n5 / name :op1 "N-A") :location (c7 / country :name (n6 / name :op1 "Britain"))) :arg4 (s / standstill))))
(s / say-01 :arg0 (d / doctor :poss (i / i)) :arg1 (o / obligate-01 :arg2 (r / radical) :condition (a / and :op1 (o2 / overweight :degree (v / very) :domain (i2 / i) :degree (v2 / very)) :op2 (s2 / show-01 :arg0 (i3 / i) :arg1 (s3 / symptom :mod (c / cold))))))
(w / want-01 :arg0 (p / person :quant 1) :arg1 (e / express-01 :arg0 (p2 / person) :arg1 (i / intend-01 :polarity - :arg0 (p3 / person) :arg1 (i2 / intend-01 :arg0 (p4 / person)) :time (y / yet))))
(a / and :op1 (d / do-02 :polarity - :arg0 (a2 / all :arg1-of (i / include-91 :polarity - :arg2 (t / this))) :arg1 (t2 / thing :arg1-of (r / remove-01 :arg2 (p / payroll) :mod (s / sole)))) :op2 (m / message-01 :arg0 (i2 / i)))
(a / and :op1 (c / confirm-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (a2 / association :mod (a3 / association)) :arg2 (e / executive :mod (a4 / association)))) :arg1 (a5 / and :op1 (p2 / person :arg0-of (h2 / have-org-role-91 :arg1 (p3 / person :name (n / name :op1 "Torsten" :op2 "Sjöberg")) :arg2 (- / -rrb-))) :op2 (p4 / person :arg0-of (h3 / have-rel-role-91 :arg1 (p5 / person :name (n2 / name :op1 "Herbert" :op2 "Piffl")) :arg2 (f / friend))) :op3 (p6 / person :arg0-of (h4 / have-rel-role-91 :arg1 (p7 / person) :arg2 (f2 / friend))) :op4 (p8 / person :arg0-of (h5 / have-rel-role-91 :arg1 (p9 / person) :arg2 (f3 / friend))) :op5 (p10 / person :arg0-of (h6 / have-rel-role-91 :arg1 (p11 / person) :arg2 (f4 / friend))) :op6 (p12 / person :arg0-of (h7 / have-rel-role-91 :arg1 (p13 / person) :arg2 (f5 / friend))) :op7 (p14 / person :arg0-of (h8 / have-rel-role-91 :arg1 (w / we) :arg2 (f6 / friend))))))
(o / obligate-01 :arg1 (f / family) :arg2 (l / leave-15 :arg0 (f2 / family) :arg1 (h / house :poss (f3 / family))) :duration (u / up-to :op1 (t / temporal-quantity :quant (N / N-A) :unit (h2 / hour))))
(m / multi-sentence :snt1 (a / and :op1 (p / person :name (n / name :op1 "Reisewagen" :op2 "Kaltblütern") :prep-with (p2 / person :quant 2 :arg0-of (h / have-org-role-91 :arg2 (r / roman :mod (o / original))))) :op2 (d / drive-02 :arg0 (p3 / person) :arg1 (p4 / person :arg0-of (v / visit-01)) :arg2 (p5 / park))) :snt2 (a2 / and :op1 (b / be-located-at-91 :arg1 (p6 / person :arg0-of (v2 / visit-01)) :arg2 (c / city :location (o2 / over :op1 (s / school)))) :op2 (b2 / be-located-at-91 :arg1 (p7 / person) :arg2 (s2 / state :location (o3 / over :op1 (s3 / school)))) :op3 (t / thing :arg2-of (r2 / result-01 :arg1 (r3 / römer-projektwochen :poss (p8 / person) :arg1-of (p9 / present-01 :arg0 (p10 / person))))) :location (h2 / here)))
(g / give-01 :arg0 (p / person :name (n / name :op1 "Strasser") :arg0-of (h / have-org-role-91 :arg2 (m / minister))) :arg1 (c / church) :arg2 (r / room :mod (n2 / new) :mod (m2 / marksman)) :time (a / after :op1 (p2 / perform-01 :arg1 (t / temporal-quantity :quant (N / N-A) :unit (h2 / hour)))))
(r / remember-01 :arg0 (i / i) :arg1 (a / and :op1 (p / person :mod (t / this) :arg0-of (h / have-rel-role-91 :arg1 (i2 / i) :arg2 (k / kid))) :op2 (p2 / person :arg0-of (d / do-02 :polarity - :arg1 (y / yard)))))
(a / and :op1 (r / represent-01 :arg0 (a2 / and :op1 (l / lenglern :mod (c / country :name (n / name :op1 "N-A"))) :op2 (r2 / reserve :name (n2 / name :op1 (t / torpedo)))) :arg1 (l2 / league :mod (a3 / association) :mod (n3 / new))) :op2 (r3 / represent-01 :polarity - :arg0 (l3 / league :mod (c2 / country)) :arg1 (c3 / club :mod (g / göttinger)) :degree (m / more)))
(h / horrible :domain (r / ranking :mod (p / politics) :poss (s / she)))
(a / and :op2 (m / mesothelioma :arg1 (p / person :mod (y / young :degree (m2 / more)) :arg0-of (w / work-01 :polarity - :location (o / occupations :arg1-of (t / typical-02))))))
(m / multi-sentence :snt1 (s / sorry-01 :arg1 (i / i) :arg2 (p / person :arg0-of (s2 / suffer-01 :arg1 (a / atrocity)) :quant (a2 / all) :arg0-of (s3 / suffer-01 :arg1 (a3 / atrocity)))) :snt2 (s4 / say-01 :arg0 (p2 / person :name (n / name :op1 "Damir")) :arg1 (w / work-01 :arg0 (p3 / person) :arg1 (v / volunteer-01 :arg0 (p4 / person)) :time (w2 / week :mod (l / last)))))
(a / and :op1 (r / remove-01 :arg1 (t / table :poss (c / class :name (n / name :op1 (t2 / tennis-district) :op2 (t3 / tennis-district))) :ord (o / ordinal-entity :value 2)) :time (b / before :op1 (n2 / now) :quant (f / few :op1 (t4 / temporal-quantity :quant (N / N-A) :unit (y / year))))) :op2 (s / step :direction (d / direction :mod (r2 / right)) :domain (t5 / this)))
(a / and :op1 (c / come-01 :arg1 (p / person :name (n / name :op1 "Gloria" :op2 "Steinem") :arg0-of (h / have-org-role-91 :arg1 (f / feminist :arg1-of (f2 / fame-01) :mod (w / white)) :arg2 (a2 / activist))) :time (w2 / week :quant (N / N-A)) :time (a3 / after :op1 (s / shooting :poss (p2 / person :name (n2 / name :op1 "Michael" :op2 "Brown")) :prep-on (c2 / company :name (n3 / name :op1 "Facebook"))))) :op2 (p3 / publish-01 :arg0 (p4 / person) :arg1 (a4 / article :mod (p5 / pithy) :arg1-of (d / distribute-01 :arg0 (p6 / person :name (n4 / name :op1 "Rebecca" :op2 "Carroll")))) :arg1-of (c3 / cause-01 :arg0 (d2 / distribute-01 :arg0 (p7 / person) :arg1 (p8 / protest-01 :arg0 (p9 / person) :arg1 (r / racism) :degree (m / more))))))
(p / possible-01 :arg1 (w / wegstecken :arg1 (i / it) :arg1-of (e / easy-05)) :arg1-of (c / cause-01 :arg0 (p2 / participate-01 :arg0 (i2 / it) :arg1 (p3 / person :name (n / name :op1 "Feldberg") :arg0-of (f / favor-01 :arg1 (p4 / person :arg0-of (s / suffer-01 :arg1 (a / and :op1 (s2 / suffer-01 :arg0 (c2 / child) :arg1 (p5 / person :arg0-of (s3 / suffer-01 :arg1 (c3 / cancer :mod (' / ''))))) :op2 (p6 / person :arg0-of (s4 / suffer-01 :arg1 (p7 / person :arg0-of (s5 / suffer-01 :arg1 (c4 / cancer :name (n2 / name :op1 (- / -lrb-))))))))))))) :arg1-of (p8 / personal-02) :arg1-of (p9 / personal-02)))
(s / seek-01 :arg0 (b / business :mod (n / new) :mod (t / this) :prep-as (c / company :arg0-of (p / provide-01) :mod (c2 / cruise))) :arg1 (p2 / position-02 :arg0 (c3 / customer)))
(a / and :op1 (t / thing :arg1-of (p / present-01) :quant (s / series)) :op2 (p2 / perform-01) :op3 (e / exhibit-01) :op4 (i / information) :op5 (i2 / information) :op6 (i3 / information))
(h / have-concession-91 :arg2 (g / grow-01 :arg1 (p / person :name (n / name :op1 "Henry")) :arg2 (c / child :arg0-of (h2 / have-rel-role-91 :arg1 (p2 / person) :arg2 (c2 / child))) :prep-without (p3 / person :name (n2 / name :op1 "Liebesbezeugungen") :arg0-of (h3 / have-rel-role-91 :arg1 (p4 / person) :arg2 (p5 / parent)))))
(m / multi-sentence :snt1 (a / appreciate-02 :arg0 (i / i) :arg1 (g / god :arg1-of (r / return-01 :arg4 (i2 / i))) :degree (s / so)) :snt2 (p / painted :arg1 (t / they :quant (a2 / all)) :location (l / location :name (n / name :op1 "Beslan"))))
(m / move-01 :arg0 (t / this) :arg1 (p / person :arg0-of (h / have-org-role-91 :arg3 (j / judge-01)) :arg0-of (h2 / have-org-role-91 :arg3 (j2 / judge-01))) :arg2 (p2 / person :arg0-of (h3 / have-org-role-91 :arg3 (j3 / judge-01))) :time (a / after :op1 (r / retire-01 :arg0 (p3 / person) :arg1 (p4 / person :arg0-of (h4 / have-org-role-91 :arg1 (c / council) :arg3 (j4 / judge-01))) :time (a2 / after :op1 (r2 / retire-01 :arg0 (p5 / person) :arg1 (s / stand :beneficiary (c2 / council) :purpose (e / elect-01)) :mod (l / last)) :mod (l2 / last)))))
(s / see-01 :arg1 (t / thing :arg2-of (c / characteristic-02 :arg1 (p / person :arg0-of (d / drive-01)))) :time (l / late :degree (m / more)) :location (h / house :location (l2 / location :name (n / name :op1 "Walcott" :op2 "Way") :location (p2 / peninsula :name (n2 / name :op1 "N-A")))))
(b / be-located-at-91 :arg1 (f / fragments :mod (g / garnet) :quant (s / some)) :arg2 (k / knee :poss (i / i)) :mod (s2 / still))
(t / tell-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (' / '' :arg1-of (r / regular-03)) :arg2 (b / begins))) :arg1 (t2 / trainerin))
(c / contrast-01 :arg1 (p / provide-01 :arg0 (f / fire-01) :arg1 (e / end-01 :arg1 (f2 / fight-01)) :time (i / immediate)) :arg2 (r / remain-01 :arg1 (p2 / problem :arg1-of (m / major-02) :example (o / organization :name (n / name :op1 "Hamas")) :example (a / and :op1 (d / demand-01 :arg0 (o2 / organization) :arg1 (b / blockade-01 :arg0 (c2 / country-region) :arg1 (c3 / country-region :name (n2 / name :op1 "Gaza")) :mod (i2 / israeli-egyptian))) :op2 (r2 / reopening :arg1 (a2 / and :op1 (u / url-entity :value (a3 / air)) :op2 (u2 / url-entity :value (r3 / reopening))) :location (c4 / country-region :name (n3 / name :op1 "Gaza")))))))
(s / shooting :time (a / after :op1 (n / now) :quant (a2 / almost :op1 (t / temporal-quantity :quant (N / N-A) :unit (y / year)))) :location (l / location :name (n2 / name :op1 "Münsingen")) :time (b / before :op1 (n3 / now) :duration (a3 / almost :op1 (t2 / temporal-quantity :quant (N2 / N-A) :unit (y2 / year)))))
(s / suggest-01 :arg0 (p / person :name (n / name :op1 "Robbie" :op2 "Collin") :arg0-of (c / criticize-01 :arg1 (f / film :mod (t / telegraph)))) :arg1 (p2 / possible-01 :arg1 (l / lack-01 :arg0 (l2 / lack-01 :arg1 (q / quality) :location (f2 / film :poss (c2 / child))) :arg1 (r / reason :arg0-of (c3 / cause-01)))))
(f / follow-01 :arg1 (d / decide-01) :arg2 (a / and :op1 (s / summer :mod (l / large :degree (m / most)) :arg1-of (i / include-91 :arg2 (p / protest-01 :mod (v / violent) :quant (m2 / most) :location (c / city :name (n / name :op1 "Hong" :op2 "Kong"))))) :op2 (p2 / place-01 :arg1 (d2 / decide-01) :duration (m3 / multiple :op1 (t / temporal-quantity :quant (N / N-A) :unit (y / year))))))
(a / ask-01 :arg0 (i / i) :arg1 (d / do-02 :mode (i2 / interrogative) :arg0 (i3 / it) :arg1 (s / stand-up-comedytour :mode (i4 / interrogative) :mod (a2 / again)) :time (e / ever)) :arg2 (h / he))
(o / obligate-01 :arg2 (c / criticize-01 :arg0 (p / person :arg0-of (o2 / organize-01)) :arg1 (c2 / criticize-01 :arg0 (p2 / person))))
(a / attempt-01 :arg0 (p / person :quant (a2 / about :op1 3000)) :arg1 (r / reach-01 :arg0 (p2 / person) :arg1 (r2 / residence :source (p3 / person :name (n / name :op1 "Nawaz" :op2 "Sharif") :arg0-of (h / have-org-role-91 :arg2 (m / minister :mod (p4 / prime)))))) :time (s / simultaneous))
(i / include-91 :arg1 (a / and :op1 (p / person :quant 66 :arg0-of (h / have-org-role-91 :arg2 (s / soldier))) :op2 (c / civilian :quant 6)) :arg2 (a2 / and :op1 (c2 / civilian :quant 66) :op2 (c3 / civilian :quant 6)) :arg2-of (i2 / include-01 :arg1 (p2 / person :arg0-of (w / work-01) :mod (i3 / incoming))))
(o / obligate-01 :arg1 (w / woman :mod (w2 / white)) :arg2 (i / involve-01 :arg1 (w3 / woman) :arg2 (s / story)) :purpose (j / justify-01 :arg0 (w4 / woman) :arg1 (m / murder-01 :arg1 (p / person :name (n / name :op1 "Lynch")))))
(a / and :op1 (p / prove-01 :arg0 (n / newspaper :name (n2 / name :op1 "La" :op2 "Repubblica")) :arg1 (e / equal-01 :arg1 (t / that) :arg2 (e2 / equal-01 :arg1 (t2 / that) :arg2 (o / office :mod (p2 / party) :arg0-of (l / lead-01)) :duration (a2 / almost :op1 (m / multiple :op1 (t3 / temporal-quantity :quant (N / N-A) :unit (d / decade))))))) :op2 (t4 / thing :arg1-of (k / know-02 :arg2 (n3 / name :op1 (' / '') :op2 (e3 / enormous) :op3 (e4 / enormous) :op4 (e5 / enormous) :op5 (e6 / enormous)))))
(t / think-01 :arg0 (i / i) :arg1 (s / so))
(a / and :op1 (e / earlier :arg1 (p / person :arg0-of (h / have-rel-role-91 :arg1 (i / i) :arg2 (f / father))) :time (e2 / early :degree (m / more) :mod (s / simple))) :op2 (p2 / possible-01 :arg1 (h2 / hear-01 :arg0 (y / you) :arg1 (h3 / he) :manner (s2 / slow)) :time (t / then) :arg1-of (c / cause-01 :arg0 (b / begin-01 :arg0 (h4 / he) :arg1 (s3 / sing-01 :arg0 (h5 / he)))) :arg1-of (c2 / cause-01 :arg0 (p3 / possible-01 :arg1 (c3 / consent-01 :arg0 (h6 / he) :arg1 (a2 / aircraft-type :name (n / name :op1 "N-A")))))))
(s / spots :quant (s2 / several) :location (c / chest :part-of (i / i)))
(m / mean-01 :arg1 (s / society :mod (c / conformal)) :arg2 (a / agree-01 :arg0 (s2 / society :mod (s3 / society :mod (t / this))) :arg1 (g / gratefully :arg0 (e / element :mod (e2 / each) :poss (s4 / society :mod (t2 / this))) :arg1 (p / principle :poss (g2 / gift-01 :arg0 (g3 / group))))))
(b / boy :arg1-of (i / include-91 :arg2 (p / picture :mod (t / terrible) :time (a / after :op1 (t2 / thing :arg1-of (s / symbolize-01 :arg2 (h / horror :poss (l / location :name (n / name :op1 "Beslan")))))))))
(m / money :quant (m2 / more) :mod (a / also) :domain (g / get-01 :arg0 (p / person :name (n / name :op1 "Bauer")) :arg1 (w / wage-01 :arg0 (p2 / person) :arg1 (t / thing :arg1-of (i / intend-01 :arg0 (p3 / person)) :mod (m3 / minimum)) :condition (e / euro))))
(c / contrast-01 :arg1 (p / possible-01 :arg1 (r / run-02 :arg0 (h / he)) :quant (m / multiple)) :arg2 (d / do-02 :polarity - :arg0 (h2 / he) :arg1 (s / sport :mod (a / any))))
(f / find-01 :arg1 (a / and :op1 (r / rate-entity-91 :arg1 (m / monetary-quantity :quant 1 :unit (d / dollar)) :arg2 (v / volume-quantity :quant (N / N-A) :unit (g / gallon))) :op2 (r2 / rate-entity-91 :arg1 (m2 / monetary-quantity :quant 700,000 :unit (d2 / dollar)) :arg2 (t / temporal-quantity :quant (N2 / N-A) :unit (m3 / month))) :arg3 (r3 / rate-entity-91 :arg1 (m4 / monetary-quantity :quant 700,000 :unit (d3 / dollar)) :arg2 (t2 / temporal-quantity :quant (N3 / N-A) :unit (m5 / month))) :arg3 (s / spirit :mod (s2 / spirit :mod (' / '')) :arg1-of (r4 / range-01 :arg3 (a2 / and :op1 ('2 / '') :op2 (p / practice-01 :mod (f2 / finance) :arg1-of (g2 / guilty-01 :polarity -) :mod (o / other)))))) :time (t3 / test-01 :arg1 (y / year :mod (t4 / this))))
(c / contrast-01 :arg2 (k / know-01 :arg0 (i / i) :arg1 (t / thing :arg1-of (r / resemble-01 :arg2 (t2 / thing :arg1-of (k2 / know-01 :arg0 (i2 / i) :time (a / already)))))))
(c / contrast-01)
FAILED_TO_PARSE#Number of opening and closing brackets doesn't match.
(g / give-01 :arg0 (h / he) :arg1 (m / monetary-quantity :quant 120 :unit (d / dollar)))
(h / have-condition-91 :arg1 (w / win-01 :arg0 (s / service :mod (m / main) :mod (m2 / main)) :time (y / year :mod (p / past))) :arg2 (h2 / have-03 :arg0 (w2 / win-01) :arg1 (t / thing :arg2-of (p2 / price-01) :arg1-of (c / correct-02)) :mod (a / also)))
(a / and :op1 (p / possible-01 :arg1 (s / sniffed :arg0 (a2 / and :op1 (c / child) :op2 (p2 / person :mod (y / young))) :arg1 (d / dance :name (n / name :op1 (j / jazz) :op2 (j2 / jazz) :op3 (j3 / jazz))) :time (a3 / always))) :op2 (b / bambini-ballet :arg0 (a4 / and :op1 (p3 / person :name (n2 / name :op1 "Videoclip-Dancing")) :op2 (p4 / person :mod (y2 / young)) :op3 (p5 / person :arg0-of (h / have-rel-role-91 :arg1 (p6 / person) :arg2 (c2 / child)))) :arg1 (a5 / and :op1 (d2 / dance :mod (j4 / jazz)) :op2 (d3 / dance :arg1 (p7 / person)) :op3 (h2 / hip-hop :arg1 (p8 / person) :arg2 (e / educate-01))) :time (a6 / always)))
(h / have-purpose-91 :arg1 (a / announce-01 :arg0 (p / person :name (n / name :op1 "Seehofer")) :arg1 (s / speak-01 :arg0 (p2 / person) :mod (a2 / again) :medium (s2 / subject)) :time (n2 / now)) :arg2 (r / respect-01 :mod (t / this)))
(m / multi-sentence :snt1 (l / look-02 :arg0 (i / it) :arg1 (s / sell-01 :arg1 (s2 / service :mod (v / video) :poss (c / company :name (n / name :op1 "Google"))) :arg2 (o / over :op1 (m2 / monetary-quantity :quant (N / N-A)))) :time (b / before :op1 (n2 / now) :quant (t / temporal-quantity :quant (N2 / N-A) :unit (m3 / month)))) :snt2 (a / appear-01 :arg1 (c2 / cooperate-01 :mod (o2 / of-course)) :mod (o3 / of-course)))
(a / ask-02 :arg0 (s / source) :arg1 (r / remain-01 :arg1 (s2 / source) :arg3 (a2 / anonymous)) :arg1-of (c / cause-01 :arg0 (p / public-02 :polarity - :arg1 (n / negotiate-01))))
(a / and :op1 (d / deleted :arg1 (t / thing :arg2-of (s / source-01 :arg0 (p / person :arg0-of (u / use-01 :arg1 (p2 / person :arg0-of (u2 / use-01))) :mod (a2 / another)))) :time (l / late :degree (m / more))) :op2 (r / replaces :arg0 (p3 / person :mod (a3 / another) :arg0-of (a4 / account-01 :arg1 (t2 / thing :time (p4 / prior)))) :arg1 (t3 / thing)))
(s / sight :arg1 (l / lady :quant 25 :arg1-of (f / fix-03) :accompanier (l2 / lady :arg1-of (f2 / fix-03))) :mod (p / particular))
(o / or :op1 (u / use-01 :arg1 (t / thing :mod (l / large :degree (m / more)) :arg1-of (i / involve-01 :arg2 (w / workshop :mod (s / skateboard)))) :arg2 (w2 / workshop :mod (s2 / skateboard))) :op2 (i2 / involve-01 :arg1 (c / crew :name (n / name :op1 (g / goodfoot))) :arg2 (w3 / workshop :arg1-of (s3 / soft-02))))
(m / multi-sentence :snt1 (c / contrast-01 :arg1 (c2 / change-01 :arg0 (t / tragedy :mod (t2 / this)) :arg1 (l / life :poss (i / i))) :arg2 (c3 / change-01 :polarity - :arg0 (t3 / tragedy :mod (t4 / this)) :arg1 (l2 / life :poss (i2 / i)))) :snt2 (s / say-01 :arg0 (s2 / she) :arg1 (t5 / tear)))
(c / condemn-01 :arg0 (p / person :name (n / name :op1 "Seth" :op2 "Rogen")) :arg1 (p2 / person :arg0-of (h / hack-04)) :location (t / thing :arg1-of (w / work-12 :arg0 (p3 / person))) :purpose (p4 / post-01 :arg0 (p5 / person) :arg1 (p6 / picture :mod (c2 / chopped) :arg1-of (r / resemble-01 :arg2 (s / sell-01 :arg1 (p7 / product :arg1-of (s2 / steal-01) :arg1-of (s3 / steal-01)))))))
(h / have-condition-91 :arg1 (e / event :mod (a / amr-unknown) :condition (h2 / have-03 :arg0 (i / it) :arg1 (e2 / event) :time (y / yesterday))) :arg2 (t / take-01 :arg0 (i2 / it) :arg1 (v / vitality :poss (h3 / he) :mod (e3 / essential)) :condition (h4 / have-03 :arg0 (i3 / it) :arg1 (e4 / event) :time (y2 / yesterday))))
(e / estimate-01 :arg0 (p / person :arg0-of (a / analyze-01)) :arg1 (p2 / profit-01 :arg0 (p3 / profit :mod (u / ultra)) :arg2 (m / monetary-quantity :quant 450 :unit (y / yuan))))
(c / continue-01 :arg0 (p / person :name (n / name :op1 "Charles" :op2 "Macnair")) :arg1 (p2 / procedure :topic (t / thing :arg1-of (s / stake-01))))
(f / fall-01 :arg1 (t / temperature :part-of (t2 / temperature :part-of (c / city))) :arg4 (m / maximum :op1 (p / product-of :op1 15.8 :op2 (c2 / c.)) :mod (j / just)) :time (a / after :op1 (h / have-03 :arg0 (w / winter :time (w2 / week :mod (l / last))) :arg1 (d / dose-01 :arg2 (s / spring)))) :mod (a2 / again))
(a / and :op2 (w / want-01 :arg0 (l / location :name (n / name :op1 "Amazon")) :arg1 (m / make-01 :arg0 (l2 / location :name (n2 / name :op1 "Amazon")) :arg1 (m2 / money) :arg2 (i / it)) :manner (e / exact)))
(m / multi-sentence :snt1 (s / see-01 :arg0 (w / we) :arg1 (w2 / we :location (o / or :op1 (t / talk-02 :arg2 2015 :arg1 (w3 / weather :arg1-of (n / nice-01)) :time (d / date-entity :month 8 :day 30)) :op2 (p / promise-01 :arg0 (w4 / we) :time (w5 / weekend :arg1-of (d2 / differ-02)))))) :snt2 (a / and :op1 (c / come-01 :arg1 (c2 / countryside :location (l / location :name (n2 / name :op1 "Münsterland"))) :arg4 (b / back) :mod (s2 / still)) :op2 (p2 / plan-01 :arg0 (o2 / organisers) :arg1 (e / edition :mod (n3 / new)))))
(c / contrast-01 :arg2 (t / threaten-01 :arg0 (a / and :op1 (a2 / approach-02 :arg1 (c2 / compete-01)) :op2 (t2 / technology :mod (n / new))) :arg1 (n2 / negotiation :arg1 (r / royalties :arg1-of (c3 / connect-01 :arg2 (d / danger :arg1-of (s / special-02))))) :arg2 (a3 / and :op1 (a4 / approach-02 :arg1 (c4 / compete-01)) :op2 (t3 / technology :mod (n3 / new)))))
(m / multi-sentence :snt1 (c / contrast-01 :arg1 (i / influence-01 :arg0 (a / and :op1 (s / series :name (n / name :op1 (d / documentaries)) :mod (t / tv)) :op2 (r / role :mod (t2 / tv)) :op3 (r2 / role :mod (f / film))) :arg1 (h / he) :time (d2 / decade :mod (n2 / next))) :arg2 (t3 / think-01 :arg0 (h2 / he) :arg1 (t4 / think-01 :arg0 (h3 / he) :arg1 (t5 / thing :arg1-of (d3 / do-02 :arg0 (y / you) :time (n3 / next)))))) :snt2 (c2 / cause-01 :arg0 (f2 / feel-02 :arg0 (h4 / he) :arg1 (r3 / resemble-01 :arg1 (i2 / it) :arg2 (o / or :op1 (s2 / sit-01 :arg1 (t6 / time) :arg2 (a2 / around)) :op2 (p / play-01 :arg0 (y2 / you) :location (s3 / spot))) :mod (j / just))) :arg1 (t7 / think-01 :arg0 (h5 / he) :arg1 (t8 / thing :arg1-of (d4 / do-02 :arg0 (y3 / you) :time (n4 / next))))))
(s / say-01 :arg0 (p / person :name (n / name :op1 "Berngau") :arg0-of (o / oppress-01 :arg1-of (f / fix-03))) :arg1 (c / chapel :arg1-of (f2 / fix-03)))
(a / and :op1 (h / hand :part-of (h2 / hand)) :op2 (s / shook :arg1 (h3 / hand)) :time (t / then))
(a / and :op1 (h / have-03 :arg0 (p / person :name (n / name :op1 "Stewart")) :arg1 (c / cup :quant 3 :mod (o / organization :name (n2 / name :op1 "NASCAR"))) :time (a2 / after :op1 (c2 / car :poss (p2 / person) :location (a3 / and :op1 (s / state :location (n3 / north :part-of (c3 / city :name (n4 / name :op1 "New" :op2 "York")))) :op2 (p3 / person :arg1-of (k / kill-01)))))) :op2 (r / race :mod (r2 / race)))
(l / leave-14 :mode (i / imperative) :arg0 (y / you) :arg1 (p / person :arg0-of (h / have-rel-role-91 :arg1 (y2 / you) :arg2 (s / sister))) :arg2 (p2 / peace))
(a / accuse-01 :arg0 (p / police :location (l / location :name (n / name :op1 "Karratha"))) :arg1 (m / man :mod (o / old) :mod (o2 / old) :arg1-of (m2 / mean-01 :arg2 (d / drive-01 :arg0 (m3 / man)))) :arg2 (d2 / drive-01 :arg0 (m4 / man)))
(r / return-01 :arg1 (p / person :name (n / name :op1 "Tony" :op2 "Stewart")) :arg4 (t / through :op1 (e / end-01 :arg1 (r2 / race-02 :arg0 (p2 / person) :arg3 (r3 / race-02 :arg0 (p3 / person)) :location (p4 / peninsula :name (n2 / name :op1 "N-A"))))))
(a / and :op1 (i / introduce-02 :arg0 (p / person :name (n / name :op1 "Henry")) :arg1 (l / line :quant 20) :arg3 (s / speak-01 :arg3 (d / documentary) :mod (l2 / last))) :op2 (t / thrilled :domain (h / he)))
(a / and :op1 (c / come-01 :arg1 (o / organization :name (n / name :op1 "Abbotts") :arg0-of (h / have-rel-role-91 :arg2 (p / patient))) :arg3 (s / symptom :arg1-of (r / resemble-01))) :op2 (m / make-18 :arg0 (p2 / person :arg0-of (h2 / have-rel-role-91 :arg2 (p3 / patient))) :arg1 (s2 / symptom :arg1-of (r2 / resemble-01)) :time (l / late :degree (m2 / more))))
(a / and :op2 (e / exemplify-01 :arg0 (h / have-03 :arg0 (h2 / he) :arg1 (s / sets :medium (t / television) :poss (o / organization :name (n / name :op1 "CRT")) :location (r / room :mod (l / live-01))) :mod (s2 / still)) :arg1 (r2 / reject-01 :arg0 (h3 / he) :arg1 (t2 / television) :mod (b / basic))))
(p / play-02 :arg0 (m / military) :arg1 (r / role :mod (i / important) :location (c / country :name (n / name :op1 "Pakistan"))) :arg1-of (c2 / cause-01 :arg0 (a / and :op1 (p2 / play-02 :arg0 (m2 / military) :arg1 (r2 / role)) :op2 (r3 / revolted :arg1 (m3 / military) :degree (m4 / more) :time (a2 / already)))))
(f / fall-01 :arg1 (r / rain-01) :arg4 (u / under :op1 (c / city)) :time (d / date-interval :op1 (d2 / date-entity :day (N / N-A)) :op2 (d3 / date-entity)) :time (a / after :op1 (f2 / fall-01 :arg1 (p / pupil :quant 21) :arg4 (u2 / under :op1 (c2 / city)) :time (a2 / after :op1 (m / mm :quant 6,6 :arg1-of (c3 / come-01 :arg4 (s / sunday) :time (a3 / already) :time (a4 / already)))))))
(a / and :op1 (c / contribute-01 :arg0 (' / '' :arg1 (s / service :mod (t / this)) :arg1-of (a2 / actual-02)) :arg2 (r / rationalization :poss (s2 / service :mod (p / public))) :manner (s3 / substantial)) :op2 (b / become-01 :arg1 (l / list-01 :arg1 (p2 / person :arg0-of (h / have-org-role-91 :arg1 (g / government-organization :arg0-of (g2 / govern-01)) :arg2 (s4 / secretary :mod (v / vice)))) :arg2 (p3 / person :arg0-of (h2 / have-org-role-91 :arg1 (c2 / cabinet) :arg2 (s5 / secretary :mod (v2 / vice))))) :arg2 (a3 / and :op1 (p4 / person :arg0-of (h3 / have-org-role-91 :arg1 (c3 / cabinet) :arg2 (s6 / secretary :mod (v3 / vice)))) :op2 (p5 / person :arg0-of (h4 / have-org-role-91 :arg1 (c4 / cabinet) :arg2 (s7 / secretary))) :op3 (p6 / person :arg0-of (h5 / have-org-role-91 :arg1 (m / ministry) :arg2 (s8 / secretary))) :op4 (p7 / person :arg0-of (h6 / have-org-role-91 :arg1 (m2 / ministry) :arg2 (s9 / secretary)))) :purpose (a4 / and :op1 (d / decentralization) :op2 (p8 / plan-01))))
(a / and :op2 (c / clear-06 :arg1 (d / deal-01 :arg0 (w / we) :arg2 (r / regime :mod (a2 / authoritarian)))))
(a / and :op1 (k / know-01 :polarity - :arg0 (t / that) :arg1 (t2 / time :domain (t3 / time) :beneficiary (c / claim-01))) :op2 (c2 / contrast-01 :arg1 (k2 / know-01 :polarity - :arg0 (t4 / that) :arg1 (t5 / time :domain (t6 / time))) :arg2 (c3 / certain :polarity - :degree (v / very) :prep-with (c4 / complainants))))
(g / go-02 :arg0 (c / cruise :mod (n / norwegian)) :arg4 (m / market :mod (s / stock)) :time (d / date-entity :month 1 :year 2013))
(p / possible-01 :arg1 (s / save-02 :arg0 (y / you) :arg1 (m / monetary-quantity :arg1-of (i / include-91 :arg2 (m2 / monetary-quantity :arg1-of (p2 / purchase-01 :arg0 (b / book)) :mod (n / new))) :quant (m3 / more-than :op1 80))))
(c / contrast-01)
(a / and :op1 (f / fall-01 :arg1 (5 / 5mm :quant 9.00 :mod (a2 / another)) :arg4 (c / city) :time (u / until :op1 (f2 / fall-01 :arg1 (52 / 5mm :quant 9.00 :mod (a3 / another)) :arg4 (c2 / city))) :time (u2 / until :op1 (f3 / fall-01 :arg1 (53 / 5mm :quant 9.00 :mod (a4 / another)) :arg4 (c3 / city)))))
(a / and :op1 (s / seize-01 :arg1 (m / motor)) :op2 (c / confiscate-01 :arg1 (m2 / motor) :duration (t / temporal-quantity :quant (N / N-A) :unit (m3 / month))))
(m / multi-sentence :snt1 (w / want-01 :arg0 (w2 / we) :arg1 (s / show-01 :arg0 (w3 / we) :arg1 (r / respond-01 :mod (p / positive)))) :snt2 (s2 / say-01 :arg0 (i / i) :arg1 (a / ask-02 :arg0 (p2 / person :name (n / name :op1 "Thomas" :op2 "Schrammel") :arg0-of (h / have-org-role-91 :arg2 (d / defender)) :mod (f / foreign)) :arg1 (w4 / win-01) :time (m2 / minute :ord (o / ordinal-entity :value 14)))))
(c / contact-01 :arg0 (p / person :name (n / name :op1 "Faserbaustoff") :arg1-of (k / know-02 :arg2 (n2 / name :op1 (' / '') :op2 (w / wunderstoff)) :time (o / once))) :arg1 (t / trigger) :mod (a / all :mod (a2 / almost)))
(p / promise-01 :polarity - :arg0 (t / that) :arg2 (c / city :name (n / name :op1 "Beijing")))
(c / concern-01 :arg0 (n / notice-01 :arg0 (w / we) :arg1 (m / mistake-02 :arg0 (w2 / we))) :arg1 (p / possible-01 :arg1 (f / find-01 :arg0 (w3 / we)) :arg1-of (c2 / cause-01 :arg0 (r / repeat-01 :arg0 (w4 / we) :arg1 (m2 / mistake-02 :arg0 (w5 / we) :arg1-of (l / lead-03 :arg2 (d / disclose :arg1 (e / event :time (e2 / event :ord (o / ordinal-entity :value 1))))))))))
(a / and :op1 (r / resemble-01 :arg1 (p / project :arg1-of (a2 / advanced-02 :arg2 (p2 / project :arg1-of (a3 / advanced-02 :degree (f / far)) :location (c / country :name (n / name :op1 "Austria"))) :time (a4 / already))) :arg2 (p3 / project :arg1-of (a5 / advanced-02 :degree (f2 / far)))) :op2 (s / show-01 :arg0 (p4 / project :mod (t / this)) :arg1 (t2 / thing :arg1-of (d / dream-01) :mod (t3 / this))))
(p / propose-01 :arg0 (i / improve-01 :arg1 (s / service :mod (s2 / service :mod (t / telemedizinischen))) :arg1-of (i2 / instead-of-91 :arg2 (i3 / improve-01 :arg1 (s3 / service :mod (t2 / telemedizinischen))))) :arg1 (p2 / possible-01 :arg1 (r / remedy :arg1 (s4 / serve-01 :arg0 (s5 / service) :arg1 (s6 / serve-01 :arg0 (s7 / service) :arg1 (f / fly-01 :location (t3 / transnational)))) :purpose (g / give-01 :arg0 (s8 / service) :arg1 (p3 / possible-01 :arg1 (g2 / give-01 :arg0 (a / and :op1 (p4 / person :arg0-of (s9 / specialize-01)) :op2 (p5 / person :arg0-of (h / have-org-role-91 :arg2 (h2 / head-of-state))) :op3 (p6 / person :arg0-of (h3 / have-org-role-91 :arg2 (h4 / head-of-state))) :op4 (p7 / person :arg0-of (h5 / have-org-role-91 :arg2 (h6 / head-of-state))) :op5 (p8 / person :arg0-of (h7 / have-org-role-91 :arg2 (h8 / head-of-state))) :location (o / outside :op1 (r2 / region :poss (i4 / it)))) :arg1 (p9 / person)))))))
(m / multi-sentence :snt1 (r / recommend-01 :arg1 (a / and :op1 (k / keep-02 :arg1 (q / quiet :arg1 (s / socialists :location (c / country :name (n / name :op1 "France"))))) :op2 (t / tidy :arg1 (' / '' :mod (c2 / country))))) :snt2 (a2 / ally-01 :arg1 (p / person :name (n2 / name :op1 "Francois" :op2 "Hollande")) :mod (i / important :degree (m2 / most))))
(c / contrast-01 :arg2 (a / and :op1 (g / grow-01 :arg1 (p / person :name (n / name :op1 "Petershausen"))) :op2 (s / so :arg0 (a2 / and :op1 (c2 / child) :op2 (p2 / person)) :arg1 (p3 / person :arg0-of (t / teach-01 :arg1 (r / retire-01 :arg0 (p4 / person)))) :arg2 (p5 / person :arg0-of (h / have-org-role-91 :arg3 (j / judge-01))) :time (d / date-entity :year 1982 :month 9))))
(a / and :op2 (i / intelligence :mod (a2 / ausgedrückter) :domain (j / jazz)))
(a / act-02 :arg0 (c / confidence) :location (d / direction :quant 2) :location (d2 / direction :quant 2) :arg1-of (c2 / cause-01 :arg0 (a2 / and :op1 (i / inward :arg1 (p / person :arg0-of (g / guard-01 :arg1 (m / manage-01 :arg1 (m2 / manage-01 :arg1 (p2 / public))) :ord (o / ordinal-entity :value 1)) :ord (o2 / ordinal-entity :value 1)) :location (c3 / company :name (n / name :op1 "BBC")) :ord (o3 / ordinal-entity :value 1)) :op2 (v / voice :arg0 (p3 / person) :arg1 (v2 / voice :poss (c4 / concern-01 :arg0 (p4 / public)))) :op3 (u / unrest :arg0 (p5 / person) :arg1 (v3 / voice :poss (c5 / concern-01 :arg0 (p6 / public)))) :condition (r / run-out-05 :arg1 (t / thing) :manner (w / wrong)))))
(r / recommend-01 :arg1 (h / house :poss (c / council) :domain (p / person :arg0-of (h2 / have-org-role-91 :arg2 (c2 / chairman :mod (n / new))))))
(a / and :op1 (h / have-03 :arg0 (p / person :arg0-of (h2 / have-org-role-91 :arg3 (j / judge-01))) :arg1 (o / opportunity :purpose (b / buy-01 :arg0 (p2 / person) :arg1 (p3 / pairs :quant 2)))) :op2 (l / let-01 :arg0 (p4 / person) :arg1 (c / compete-01 :arg0 (p5 / person :quant 2 :arg0-of (r / rival-01) :arg0-of (r2 / rival-01)) :prep-against (o2 / other :mod (e / each)))) :op3 (h3 / have-condition-91 :arg1 (c2 / compete-01 :mod (o3 / other :mod (e2 / each))) :arg2 (v / violet)))
(b / band :mode (i / imperative) :arg0 (y / you) :arg1 (d / district :mod (c / city :name (n / name :op1 "Bern"))))
(c / contrast-01 :arg1 (r / release-01 :arg1 (p / photo)) :arg2 (s / say-01 :arg0 (p2 / person :arg0-of (h / have-org-role-91 :arg1 (c2 / company :name (n / name :op1 "N-A")) :arg2 (s2 / spokeswoman))) :arg1 (h2 / have-org-role-91 :arg0 (p3 / person) :arg1 (c3 / company) :arg2 (s3 / spokeswoman)) :time (n2 / now)))
(c / change-01 :arg1 (t / thing :arg2-of (r / result-01 :arg1 (t2 / thing :arg1-of (t3 / tax-01 :arg3 (t4 / tax)) :mod (u / ultra)))) :arg2 (r2 / rate-entity-91 :arg1 (p / percentage-entity :value (N / N-A)) :arg2 (t5 / temporal-quantity :quant (N2 / N-A) :unit (y / year))) :arg3 (p2 / percentage-entity :value (N3 / N-A)))
(c / create-01 :arg0 (t / this) :arg1 (d / duopoly :mod (u / unsustainable :mod (a / almost)) :arg0-of (r / require-01 :arg1 (r2 / reform-01 :mod (c2 / comprehensive :degree (f / full))))))
(t / think-01 :arg0 (i / i) :arg1 (a / and :op1 (d / die-01 :arg1 (i2 / i)) :op2 (l / lose-02 :arg0 (i3 / i) :arg1 (s / skill :poss (i4 / i) :quant (a2 / all)) :manner (s2 / slow))))
(r / request-01 :arg0 (p / person :name (n / name :op1 "Seehofer")) :arg1-of (c / cause-01 :arg0 (c2 / criticize-01 :arg0 (c3 / coalition :mod (c4 / coalition :mod (o / organization :name (n2 / name :op1 "CDU")))) :arg1 (p2 / paycheck))))
(a / and :op1 (h / have-03 :arg0 (s / state :name (n / name :op1 "Virginia")) :arg1 (t / thing :arg1-of (t2 / tax-01 :arg3 (i / income :poss (c / corporation))) :arg1-of (l / low-04 :degree (m / more))) :location (a2 / area :quant 3 :mod (a3 / all))) :op2 (r / rate :mod (b / business) :arg1-of (s2 / strong-02) :mod (b2 / business)))
(h / have-concession-91 :arg2 (e / eye :part-of (h2 / he) :arg1-of (f / friendly-01)))
(a / and :op1 (w / welcome-01 :arg1 (t / this) :arg2 (d / direction :mod (r / right))) :op2 (d2 / develop-02 :arg1 (d3 / develop-02 :arg0-of (m / make-02 :arg1 (l / likely-01 :arg1 (c / come-01 :arg1 (i / i) :arg4 (a2 / and :op1 (f / fight-01 :arg0 (o / organization :name (n / name :op1 "NPD")) :manner (p / political)) :op2 (b / before :op1 (o2 / organization :name (n2 / name :op1 "Constitutional" :op2 "Court"))))) :degree (m2 / more))))))
(h / have-concession-91 :arg1 (c / come-01 :arg1 (r / revenue :quant (b / between :op1 56 :op2 36)) :arg3 (c2 / company)) :arg2 (c3 / come-01 :arg1 (r2 / revenue :poss (c4 / corporation)) :arg3 (p / percentage-entity :value (N / N-A)) :arg4 (c5 / country)))
(a / and :op1 (w / work-01 :arg0 (t / they) :arg2 (c / chain) :duration (t2 / temporal-quantity :quant (N / N-A) :unit (y / year))) :op2 (r / responsible-03 :arg0 (t3 / they) :arg1 (d / department :mod (c2 / clothing) :part-of (l / location :quant 2 :location (l2 / location :name (n / name :op1 "Oxford" :op2 "Street"))))))
(a / and :op1 (d / devote-01 :arg0 (h / he) :arg1 (h2 / he) :arg2 (t / task-01 :arg1 (c / career :poss (h3 / he)))) :op2 (a2 / and :op1 (s / sick-05 :arg1 (h4 / he)) :op2 (a3 / agony :arg1 (d2 / disease)) :op3 (a4 / agony :arg1 (d3 / disease)) :op4 (t2 / treatment :arg1 (d4 / disease)) :op5 (t3 / treat-03 :arg1 (h5 / he))))
(a / adjust-01 :arg0 (y / you) :arg1 (c / camera :poss (y2 / you)) :arg3 (o / or :op1 (p / photograph-01) :op2 (v / video)) :mod (a2 / also) :arg1-of (w / want-01 :arg0 (y3 / you) :arg1-of (w2 / want-01 :arg0 (y4 / you))))
(c / contrast-01 :arg2 (m / make-02 :arg0 (p / person :name (n / name :op1 "Lawson")) :arg1 (m2 / make-02 :arg0 (i / it) :arg1 (a / appear-01 :arg1 (t / they) :manner (l / light :mod (p2 / positive :degree (m3 / more)))))))
(c / contrast-01 :arg1 (p / person :name (n / name :op1 "Richard" :op2 "Dimbath") :time (l / late) :time (u / until :op1 (r / reconstruct-01 :arg1 (m / multivitamin) :location (m2 / massif :mod (m3 / mountain)))) :time (u2 / until :op1 (r2 / reconstruct-01 :arg1 (m4 / multivitamin) :location (m5 / massif :mod (m6 / mountain))))) :arg2 (d / development :arg1 (d2 / develop-02 :arg1 (' / '') :mod ('2 / '')) :location (f / forefronts)))
(a / and :op1 (r / rise-01 :arg1 (s / she) :arg4 (p / politics :arg1-of (h / high-02))) :op2 (w / work-01 :arg0 (s2 / she) :location (g / government-organization :name (n / name :op1 "Foreign" :op2 "Affairs" :op3 "Department")) :arg1-of (c / cause-01 :arg0 (b / become-01 :arg1 (h2 / head :part-of (h3 / head :part-of (h4 / head))) :arg2 (s3 / soon :degree (s4 / soon))))))
FAILED_TO_PARSE#Number of opening and closing brackets doesn't match.
(f / feel-01 :arg0 (c / company :name (n / name :op1 "Abbott")) :arg1 (t / thing :arg1-of (f2 / fortify)))
(a / and :op1 (i / inferences :arg1 (p / person :name (n / name :op1 "Petro" :op2 "Poroschenko") :arg0-of (h / have-org-role-91 :arg1 (c / country :name (n2 / name :op1 "N-A")) :arg2 (p2 / president))) :arg2 (d / defeat-01 :arg1 (a2 / army :poss (p3 / person)) :manner (h2 / heavy)) :time (p4 / previous)) :op2 (a3 / announce-01 :arg0 (p5 / person) :arg1 (c2 / change-01 :arg1 (l / leadership :mod (t / top) :poss (a4 / army)) :manner (g / give-01 :polarity - :arg1 (d2 / detail)))))
(s / say-01 :arg0 (p / person :name (n / name :op1 "Alexander" :op2 "Nowak") :arg0-of (h / have-org-role-91 :arg1 (c / country :name (n2 / name :op1 "N-A")) :arg2 (m / minister :mod (e / energy)))) :arg1 (s2 / schedule-01 :arg1 (n3 / negotiate-01) :arg3 (c2 / come-01 :arg1 (n4 / negotiate-01))))
(g / get-01 :arg0 (p / person :name (n / name :op1 "Manfred" :op2 "Richter")) :arg1 (t / thing :arg1-of (o / occasion-02) :mod (s / sleep-01)) :time (a / after :op1 (m / multiple :op1 (t2 / temporal-quantity :quant (N / N-A) :unit (m2 / month)))) :location (p2 / peninsula :name (n2 / name :op1 "N-A")) :prep-with (s2 / schoolmates :quant (u / up-to :op1 15)) :location (h / hall :mod (s3 / sleep-01)))
(a / and :op1 (e / easy-05 :polarity - :arg1 (d / decide-01) :beneficiary (i / i)) :op2 (m / matured :arg1 (d2 / decide-01) :duration (s / several :op1 (t / temporal-quantity :quant (N / N-A) :unit (m2 / month)))))
(c / contrast-01 :arg2 (a / and :op1 (c2 / continue-01 :arg1 (p / person :arg0-of (h / have-org-role-91 :arg3 (j / judge-01)))) :op2 (j2 / join-01 :arg0 (p2 / person) :arg1 (o / organization :name (n / name :op1 "CSU")))))
(s / say-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (c / country :name (n / name :op1 "South" :op2 "Africa")) :arg2 (m / member))) :arg1 (p2 / plan-01 :polarity - :arg1 (c2 / coup :arg1-of (r / remain-01 :arg3 (p3 / person :arg0-of (h2 / have-org-role-91 :arg2 (m2 / minister :mod (p4 / prime)))) :location (c3 / country)))))
(a / and :op1 (i / irritation :arg1 (a2 / asbestos :name (n / name :op1 (b / brustfell)) :mod (b2 / brustfell))) :op2 (p / possible-01 :arg1 (t / trigger-01 :arg0 (i2 / irritation) :arg1 (p2 / person :name (n2 / name :op1 "Zellmutationen")))))
(c / celebrate-02 :arg0 (i / i) :arg1 (a / anniversary :poss (t / they) :ord (o / ordinal-entity :value 50)))
(a / accuse-01 :arg1 (p / person :name (n / name :op1 "Gordon" :op2 "Steward")) :arg2 (g / girl :arg0 (g2 / girl) :arg1 (l / location :name (n2 / name :op1 "East" :op2 "Neuk") :purpose (r / renovate-01 :arg0 (g3 / girl)))))
(b / base-02 :arg1 (c / contact-01 :mod (t / this) :quant (p / proportion :mod (l / large))) :arg2 (a / and :op1 (u / use-01 :arg1 (b2 / building :poss (w / we)) :arg1-of (n / normal-02)) :op2 (a2 / age-01 :arg1 (c2 / contact-01) :arg2 (t2 / temporal-quantity :quant (N / N-A) :unit (y / year)))) :medium (s / statement :poss (h / he)))
(a / and :op2 (h / hospital :polarity - :mod (j / just) :domain (i / it)))
(s / stay-01 :arg1 (i / i) :location (g / gym) :time (a / always) :purpose (a2 / apologize-01 :arg0 (i2 / i) :arg1 (i3 / it :location (t / there))))
(m / multi-sentence :snt1 (l / look-02 :arg0 (p / person :name (n / name :op1 "Maximilian" :op2 "Karner") :arg0-of (h / have-org-role-91 :arg2 (d / defender))) :arg1 (i / it)) :snt2 (c / contrast-01 :arg2 (a / and :op1 (f / find-01 :arg0 (w / we) :arg1 (i2 / it) :mod (o / only)) :op2 (m2 / make-18 :arg0 (w2 / we) :arg1 (g / gated) :mod (e / even)))))
(p / point-out-02 :arg0 (o / one :arg1-of (i / include-91 :arg2 (g / genus :mod (p2 / prominent :degree (m / most)) :location (c / city :name (n / name :op1 "London")))) :mod (p3 / prominent :degree (m2 / most))) :arg1 (r / return-01 :arg1 (h / house-01) :arg4 (l / level :arg1-of (n2 / normal-02) :location (c2 / country :name (n3 / name :op1 "England")))))
(r / reside-01 :arg0 (e / enterprise :arg1-of (r2 / reside-01 :arg0 (e2 / enterprise)) :location (l / location :name (n / name :op1 "Miami"))) :arg1 (s / ship :quant 13 :part (c / cruise)) :location (l2 / location :name (n2 / name :op1 "Miami")) :arg1-of (c2 / cause-01 :arg0 (a / and :op1 (s2 / sea :name (n3 / name :op1 "Mediterranean" :op2 "Sea") :arg0 (c3 / continent :name (n4 / name :op1 "North" :op2 "America")) :arg1 (s3 / ship :quant 13 :mod (c4 / cruise)) :location (r3 / route :mod (c5 / cruise) :location (b / between :op1 (c6 / country :name (n5 / name :op1 "N-A")) :op2 (s4 / sea :name (n6 / name :op1 "Baltic" :op2 "Sea")) :op3 (l3 / location :name (n7 / name :op1 "Central" :op2 "America")) :op4 (l4 / location :name (n8 / name :op1 "Central" :op2 "America"))))))))
(f / fear-01 :arg0 (b / background) :arg1 (a / affect-01 :arg0 (p / paycheck) :arg1 (t / traffic :mod (b2 / border) :arg1-of (l / local-02)) :accompanier (c / country :location (s / sea :name (n / name :op1 "N-A")))))
(p / play-11 :polarity - :arg2 (j / jazz) :concession (e / even-if :op1 (f / forbidden :polarity - :arg1 (j2 / jazz) :arg1-of (d / direct-02))))
(c / cause-01 :arg0 (p / possible-01 :arg1 (c2 / chalked :arg0 (g / guest) :mod (a / also))))
(a / and :op1 (o / obligate-01 :arg1 (p / plane) :arg2 (l / land :mod (o2 / or :op1 (s / speed :mod (w / wind)) :op2 (d / direction :mod (o3 / over :op1 (d2 / distance-01 :mod (s2 / short))))) :time (s3 / sudden))) :op2 (o4 / obligate-01 :arg2 (s4 / start-01 :arg0 (p2 / plane))))
(a / and :op1 (t / tell-01 :arg0 (i / it) :arg1 (s / story) :time (a2 / always)) :op2 (g / great :domain (t2 / that)))
(e / excerpt :arg0 (a / and :op1 (l / love-01) :op2 (l2 / letter)) :arg1 (a2 / and :op1 (l3 / love-01) :op2 (l4 / letter) :mod (' / '')) :arg2 (p / person :name (n / name :op1 "Howard" :op2 "Jacobson")) :manner (e2 / exclusive-02))
(c / contrast-01 :arg1 (p / probable :domain (f / fire-01 :arg0 (a / approach-02 :mod (t / this)) :arg1 (p2 / protest-01 :location (d / district :mod (b / business) :poss (c2 / city :name (n / name :op1 "Hong" :op2 "Kong")))) :mod (p3 / probable))) :arg2 (a2 / and :op1 (a3 / activist :arg0-of (h / have-org-role-91 :arg2 (a4 / activist))) :op2 (p4 / person :arg0-of (h2 / have-org-role-91 :arg2 (a5 / activist))) :time (a6 / after :op1 (a7 / announce-01 :arg0 (a8 / activist) :arg1 (w / way)) :duration (u / up-to :op1 (t2 / temporal-quantity :quant (N / N-A) :unit (h3 / hour))))))
(c / contrast-01 :arg2 (s / serve-01 :arg0 (w / we) :time (p / past) :condition (l / learn-01 :polarity - :arg0 (w2 / we) :arg1 (a / amr-unknown))))
(a / and :op1 (r / receive-01 :arg0 (p / person :name (n / name :op1 "Eleanor" :op2 "Roosevelt") :arg0-of (h / have-org-role-91 :arg1 (c / commission :mod (r2 / right :mod (h2 / human))) :arg2 (c2 / chair))) :arg1 (s / she) :arg2 (a2 / agree-01 :arg0 (c3 / commission :mod (r3 / right :mod (h3 / human))) :arg1 (t / thing :manner-of (r4 / receive-01 :arg0 (a3 / and :op1 (p2 / person :name (n2 / name :op1 "Roosevelt")) :op2 (p3 / person :name (n3 / name :op1 "Roosevelt"))) :arg1 (t2 / thing :quant 1948 :arg1-of (i / include-91 :arg2 (t3 / thing :quant 1948 :arg2-of (r5 / right-05 :arg1 (h4 / human))))))))) :op2 (g / guarantee-01 :arg0 (a4 / and :op1 (p4 / person :name (n4 / name :op1 "Roosevelt")) :op2 (i2 / inserted :mod (o / other))) :arg1 (r6 / right-05 :arg1 (u / union) :arg2 (o2 / or :op1 (p5 / protect-01 :arg1 (i3 / interest :poss (u2 / union))) :op2 (j / join-up-02 :arg0 (u3 / union) :arg1 (' / ''))))) :time (p6 / possessed :arg0 (l / lady :ord (o3 / ordinal-entity :value 1) :mod (r7 / right :mod (h5 / human))) :arg1 (c4 / chair)))
(o / obligate-01 :polarity - :arg1 (w / we) :arg2 (l / lose-02 :arg0 (w2 / we) :arg1 (a / anything)))
(w / warn-01 :arg0 (p / person :arg0-of (l / lead-02 :arg1 (o / organization :name (n / name :op1 "CSU")))) :arg1 (p2 / person :name (n2 / name :op1 "Horst" :op2 "Seehofer") :arg0-of (l2 / lead-02 :arg1 (o2 / organization))) :arg2 (d / develop-02 :arg0 (p3 / person) :arg1 (c / concept :mod (b / bottle) :prep-against (p4 / person :arg0-of (h / have-org-role-91 :arg1 (g / government-organization :name (n3 / name :op1 "Cabinet")) :arg2 (m / minister)) :arg1-of (r / relevant-01)))) :time (t / then))
(a / and :op1 (s / seek-01 :arg0 (r / reason :arg0-of (c / cause-01 :arg1 (o / overcrowding :location (r2 / religious-group :name (n / name :op1 "N-A"))))) :arg1 (o2 / onslaught :mod (a2 / aid-01))) :op2 (p / possible-01 :polarity - :arg1 (p2 / provide-01 :arg0 (a3 / authority) :arg1 (p3 / place :quant (e / enough) :location (f / facility :mod (c2 / community))))))
(c / contrast-01 :arg1 (l / look-01 :arg0 (p / person :name (n / name :op1 "ESME" :op2 "Nussbaum")) :direction (a / around)) :arg2 (s / speak-01 :arg0 (p2 / person :name (n2 / name :op1 "Rabinowitz"))))
(h / he :quant 55 :domain (h2 / he) :time (d / die-01 :arg1 (h3 / he) :time (d2 / date-entity :month 2 :day 17)))
(u / use-01 :arg0 (p / person :arg0-of (p2 / participate-01) :quant (a / all)) :arg1 (e / entrance :poss (p3 / person)) :arg2 (a2 / announce-01 :arg0 (p4 / person) :arg1 (d / demand-01 :arg0 (p5 / public)) :arg1-of (p6 / public-02)) :location (f / forefield))
(l / look-01 :arg0 (p / person :name (n / name :op1 "Ailinn" :op2 "Solomons")) :arg1 (f / foot :part-of (p2 / person)) :time (a / alone :domain (i / it) :mod (a2 / again)))
(n / need-01 :polarity - :arg0 (' / '' :arg1 (b / beer)) :arg1 (m / match-01 :arg0 (h / he) :arg1 (a / and :op1 (w / water :mod (g / good)) :op2 (c / commodity) :op3 (f / factor :arg1-of (h2 / high-02))) :time (s / swim-01 :arg0 (h3 / he) :arg2 (r / rate-entity-91 :arg1 1 :arg2 (t / temporal-quantity :quant (N / N-A) :unit (y / year)) :location (c2 / city :name (n2 / name :op1 "Guangzhou"))))))
(c / camaraderie :mod (o / of-course))
(h / hope-01 :arg1 (p / possible-01 :arg1 (v / visit-01 :arg0 (h2 / he) :arg1 (p2 / peninsula :name (n / name :op1 "N-A")) :time (y / year :mod (n2 / next)) :purpose (m / meet-03 :arg0 (h3 / he) :arg1 (c / city :name (n3 / name :op1 "Guangzhou"))))))
(c / contrast-01 :arg1 (o / open-01 :arg0 (s / station) :arg1 (o2 / operation :poss (s2 / station) :duration (a / about :op1 (t / temporal-quantity :quant (N / N-A) :unit (m / minute))))) :arg2 (b / broadcast-01 :arg0 (s3 / station) :mod (a2 / again) :time (n / now)))
(a / answer-01 :arg1 (t / treasure) :arg2 (n / negative))
(p / possible-01 :arg1 (k / know-01 :arg0 (n / no-one) :arg1 (c / cost-01 :mode (i / interrogative) :arg1 (m / mismanage-01 :mod (t / this)) :arg2 (l / life))))
(s / say-01 :arg1 (i / important :domain (p / possible-01 :polarity - :arg1 (e / event :mod (s2 / such) :time (e2 / ever :polarity -) :mod (a / again)))) :time (t / today))
(p / produce-01 :arg1 (a / asbestos :mod (g / globe)) :arg4 (r / rate-entity-91 :arg1 (m / more-than :op1 (m2 / mass-quantity :quant (N / N-A) :unit (k / kilogram))) :arg2 (t / temporal-quantity :quant (N2 / N-A) :unit (y / year))))
(s / say-01 :arg0 (p / person :name (n / name :op1 "Rodgers")) :arg1 (a / and :op1 (r / realize-02 :arg0 (i / it) :arg1 (d / document :arg1-of (s2 / sick-05) :poss (i2 / it)) :time (a2 / age-01 :arg1 (i3 / it) :arg2 (t / temporal-quantity :quant (N / N-A) :unit (y / year))) :time (a3 / after :op1 (o / operate-01 :arg1 (a4 / and :op1 (a5 / achillessehnen :poss (i4 / it)) :op2 (s3 / stretch :poss (i5 / it))) :quant (s4 / several)))) :op2 (r2 / read-01 :arg0 (i6 / it) :arg1 (l / leave-11 :arg0 (i7 / it) :arg1 (r3 / room))) :op3 (s5 / suffer-01 :arg0 (i8 / it) :arg1 (l2 / leave-11 :arg0 (i9 / it) :arg1 (r4 / room)))))
(m / multi-sentence :snt1 (n / need-01 :arg0 (s / she) :arg1 (c / chairman :mod (c2 / considerable))) :snt2 (h / hope-01 :arg0 (i / i) :arg1 (f / find-01 :arg0 (s2 / she) :arg1 (i2 / it))))
(a / and :op1 (c / come-01 :arg1 (t / thing :arg2-of (n / name-01 :arg1 (p / pvc :name (n2 / name :op1 (a2 / asbestiform) :op2 (' / '') :op3 (f / fabric))))) :arg3 (w / word :name (n3 / name :op1 (a3 / asbestiform) :op2 (a4 / asbestiform) :op3 ('2 / '') :op4 ('3 / '') :op5 (f2 / fabric)))))
(a / and :op1 (c / consult-01 :arg0 (p / person :name (n / name :op1 "Wolfgang" :op2 "Schneider")) :arg1 (p2 / person :mod (o / old :degree (m / more)) :arg1-of (i / include-91 :arg2 (p3 / person :mod (w / white))))) :op2 (i2 / interview-01 :arg0 (p4 / person) :arg1 (p5 / person :mod (o2 / old :degree (m2 / more)) :source (w2 / white))) :op3 (d / discover-01 :arg0 (p6 / person) :arg1 (e / explain-01 :arg0 (p7 / person) :arg1 (i3 / it))))
(a / and :op1 (p / play-02 :arg0 (m / military) :arg1 (r / role :mod (i / important) :location (c / country :name (n / name :op1 "Pakistan")))) :op2 (g / geputscht :arg1 (m2 / military) :arg1-of (f / frequent-02) :time (a2 / already)))
(c / confirm-01 :arg0 (p / person :arg0-of (c2 / confirm-01 :arg1 (c3 / club))) :arg1 (s / stand-01 :arg1 (p2 / person :name (n / name :op1 "Torsten" :op2 "Invest")) :arg2 (a / and :op1 (- / -rrb-) :op2 (p3 / person :arg0-of (h / have-rel-role-91 :arg1 (p4 / person :name (n2 / name :op1 "Herbert" :op2 "Piffl")) :arg2 (f / friend))) :op3 (p5 / person :arg0-of (h2 / have-rel-role-91 :arg1 (p6 / person) :arg2 (f2 / friend))) :op4 (p7 / person :arg0-of (h3 / have-rel-role-91 :arg1 (p8 / person) :arg2 (f3 / friend))) :op5 (p9 / person :arg0-of (h4 / have-rel-role-91 :arg1 (w / we) :arg2 (f4 / friend))))))
(s / say-01 :arg0 (t / thing :arg1-of (s2 / say-01)) :arg1 (t2 / think-01 :arg0 (i / it) :arg1 (d / die-01 :arg1 (i2 / it)) :time (a / about :op1 (t3 / temporal-quantity :quant (N / N-A) :unit (y / year)))))
(b / believe-01 :arg0 (i / i) :arg1 (h / have-03 :arg0 (y / you) :arg1 (s / something :quant (l / less :degree (f / far)))))
(w / way :arg1-of (c / clever) :purpose (s / save-01 :arg1 (b / book :mod (t / teach-01) :mod (u / university))))
(c / contrast-01 :arg2 (p / past :domain (a / amr-unknown) :condition (l / learn-01 :polarity - :arg0 (w / we) :arg2 (i / it))))
(r / recommend-01 :arg1 (l / let-01 :arg0 (w / we) :arg1 (h / house :poss (w2 / we))) :prep-in (f / fact) :duration (s / some :op1 (t / temporal-quantity :quant (N / N-A) :unit (y / year))))
(c / cause-01 :arg0 (t / take-10 :arg0 (p / press-01 :arg0 (w / we) :arg2 (o / organization :name (n / name :op1 "Ifa"))) :arg1 (p2 / person :name (n2 / name :op1 "Funkturm") :arg0-of (h / have-org-role-91 :arg1 (o2 / organization) :arg3 (l / lead-02 :arg0 (w2 / we) :arg1 (o3 / organization) :mod (a / absolute)))) :time (w3 / week :mod (t2 / this)) :location (m / mind) :mod (a2 / again)))
(a / and :op1 (f / fill-01 :arg0 (s / she) :arg1 (a2 / and :op1 (e / emphases :arg1 (p / policy :mod (f2 / foreign)) :arg2 (l / location :name (n / name :op1 "Near" :op2 "East"))) :op2 (b / become-01 :arg1 (p2 / policy) :arg2 (s2 / study-01 :arg0 (p3 / person :arg0-of (h / have-org-role-91 :arg1 (c / city-district :name (n2 / name :op1 "N-A") :location (c2 / country :name (n3 / name :op1 "Afghanistan"))) :arg3 (s3 / study-01 :arg0 (p4 / person)))))) :manner (t / tradition))) :op2 (p5 / participate-01 :arg0 (p6 / person) :arg1 (c3 / contact-01 :arg0 (p7 / person) :arg1 (d / democrat :mod (s4 / society) :location (c4 / country :name (n4 / name :op1 "USA"))))) :op3 (c5 / contact-01 :arg0 (p8 / person) :arg1 (d2 / democrat) :location (c6 / country :name (n5 / name :op1 "USA"))))
(h / have-03 :arg0 (e / economy :mod (c / country :name (n / name :op1 "N-A"))) :arg1 (r / rate-entity-91 :arg1 0.2 :arg2 (t / temporal-quantity :quant (N / N-A) :unit (y / year))) :location (s / spring))
(a / and :op1 (c / criticize-01 :arg0 (p / person :arg0-of (c2 / criticize-01)) :arg1 (r / race :mod (p2 / polizeiverhalten))) :op2 (c3 / criticize-01 :arg0 (p3 / person) :arg1 (p4 / person :name (n / name :op1 "Ferguson")) :time (a2 / after)))
(c / contrast-01 :arg2 (s / show-01 :arg0 (p / photo) :arg1 (i / include-01 :arg1 (a / and :op1 (p2 / person :arg0-of (r / rebel-01)) :op2 (p3 / person :arg0-of (r2 / rebel-01)) :op3 (p4 / person :arg0-of (h / have-org-role-91 :arg1 (g / government-organization :name (n / name :op1 "Kremlin")) :arg2 (b / boss))) :op4 (p5 / person :arg0-of (h2 / have-org-role-91 :arg1 (g2 / government-organization :name (n2 / name :op1 "Kremlin")) :arg2 (b2 / boss))) :op5 (p6 / person :arg0-of (h3 / have-org-role-91 :arg1 (g3 / government-organization :name (n3 / name :op1 "Kremlin")) :arg2 (b3 / boss))) :op5 (p7 / person :arg0-of (h4 / have-org-role-91 :arg1 (g4 / government-organization :name (n4 / name :op1 "Kremlin")) :arg2 (b4 / boss)))) :arg2 (l / location :name (n5 / name :op1 "Milan") :beneficiary (s2 / summit :mod (e / economy) :poss (g5 / government-organization :name (n6 / name :op1 "Kremlin")))))) :arg2 (p8 / photo))
(a / and :op1 (p / person :name (n / name :op1 "Andrew" :op2 "Lawson") :domain (m / man :arg1-of (i / include-91 :arg2 (p2 / person :arg0-of (c / change-01 :arg1 (c2 / character)))) :mod (a2 / altogether))) :op2 (c3 / change-01 :arg0 (p3 / person) :arg1 (t / thing) :mod (e / even) :prep-as (g / government-organization :name (n2 / name :op1 "NHS"))))
(h / have-concession-91 :arg1 (r / remember-01 :arg0 (i / i) :arg1 (h2 / hear-01 :polarity - :arg0 (i2 / i) :arg1 (h3 / hear-01 :polarity - :arg0 (i3 / i) :arg1 (i4 / i)))) :arg2 (r2 / remember-01 :arg0 (i5 / i) :arg1 (s / shout-01 :arg0 (i6 / i) :arg2 (h4 / he))))
(c / contrast-01 :arg2 (i / inappropriate :arg1 (e / event :name (n / name :op1 "N-A") :mod (t / this))))
(s / say-01 :arg1 (r / remember-01 :polarity - :mode (i / imperative) :arg0 (y / you) :arg1 (a / and :op1 (i2 / intelligent :arg1 (g / girl :mod (i3 / intelligent))) :op2 (g2 / grow-01 :arg1 (g3 / girl :mod (l / lucky))) :arg1-of (s2 / say-01 :arg0 (p / person :arg1-of (n / neighbor-01))))) :arg2 (p2 / person :name (n2 / name :op1 "Davie")) :time (b / before :op1 (n3 / now) :duration (t / temporal-quantity :quant (N / N-A) :unit (y2 / year))))
(d / disease :arg1-of (i / ignore-01 :arg1-of (e / easy-05)) :domain (w / we :quant (m / most)))
(g / go-01 :arg1 (t / topic :topic (r / reform-01 :arg1 (i / immigrate-01))) :arg4 (s / surface) :mod (a / again) :time (a2 / after :op1 (p / picked :arg0 (p2 / police :mod (c / country :name (n / name :op1 "US"))) :arg1 (m / minor :quant (a3 / almost :op1 63,000)) :location (b / border-01 :arg1 (c2 / country) :arg2 (c3 / country) :location (s2 / southwest :part-of (c4 / country))) :time (y / year :mod (t2 / this)))) :time (a4 / after :op1 (w / wake-up-02 :arg1 (p3 / police :mod (c5 / country)) :mod (a5 / almost))) :time (y2 / year :mod (t3 / this)) :subevent-of (t4 / topic :mod (w2 / woman)))
(a / and :op1 (v / view-01 :arg0 (i / i) :arg1 (c / cable :arg0 (c2 / cable :name (n / name :op1 (s / slammer)) :arg0-of (c3 / connect-01 :arg1 (l / listener :medium (p / phone)))))) :op2 (t / think-01 :arg0 (i2 / i) :arg1 (h / have-manner-91 :arg1 (t2 / this) :arg2 (a2 / amr-unknown))))
(c / cause-01 :arg1 (p / possible-01 :arg1 (p2 / possess-01 :arg0 (p3 / person) :arg1 (p4 / power :mod (b / buy-01)) :purpose (a / afford-01 :arg0 (p5 / person) :arg1 (b2 / beer :mod (g / german)))) :mod (a2 / also)))
(s / see-01 :polarity - :arg0 (w / we) :arg1 (v / voice :poss (h / he)) :time (e / ever) :purpose (h2 / hear-01 :arg0 (w2 / we) :arg1 (v2 / voice :poss (h3 / he))) :arg1-of (c / cause-01 :arg0 (l / listen-01 :arg0 (w3 / we) :arg1 (v3 / voice :poss (h4 / he))) :mod (o / only)))
(s / say-01 :arg0 (h / he) :arg1 (t / this))
(i / include-91 :arg1 (h / house) :arg2 (s / sell-01 :arg1 (i2 / interest-01 :arg2 (m / media :mod (s2 / social)))) :time (w / wonder-01 :arg0 (s3 / some) :arg1 (i3 / include-01 :mode (i4 / interrogative) :arg1 (p / pig) :arg2 (t / thing :arg2-of (p2 / price-01 :arg1 (p3 / purchase-01))))))
(s / say-01 :arg0 (s2 / she) :arg1 (c / cause-01 :arg0 (a / amr-unknown) :arg1 (f / feel-01 :arg0 (i / i) :arg1 (a2 / attract-01 :arg1 (i2 / i) :arg2 (a3 / attract-01 :arg0 (i3 / i) :arg1 (y / you))) :arg1-of (c2 / cause-01 :arg0 (a4 / amr-unknown))) :manner (p / precise)) :manner (p2 / precise))
(s / say-01 :arg1 (i / idea :mod (g / good :degree (v / very)) :domain (t / this)) :arg2 (s2 / say-01 :arg0 (p / person :name (n / name :op1 "Saeed") :arg0-of (h / have-org-role-91 :arg1 (c / country :name (n2 / name :op1 "Germany")) :arg2 (m / minister :mod (v2 / vice)))) :arg1 (k / know-01 :arg0 (a / and :op1 (p2 / person :name (n3 / name :op1 "Li" :op2 "Jinjun") :arg0-of (h2 / have-org-role-91 :arg2 (m2 / minister :mod (v3 / vice)))) :op2 (p3 / person :arg0-of (h3 / have-org-role-91 :arg1 (c2 / country) :arg2 (m3 / minister :mod (v4 / vice))))) :arg1 (t2 / thing :arg1-of (k2 / know-02 :arg2 (c3 / country :name (n4 / name :op1 "Germany")) :mod (e / exclusive-02))))))
(p / put-01 :arg0 (y / you) :arg1 (c / camera) :arg2 (o / or :op1 (p2 / photo) :op2 (v / video)) :arg1-of (w / want-01 :arg0 (y2 / you) :arg1-of (w2 / want-01 :arg0 (y3 / you))))
(s / say-01 :arg0 (p / person :name (n / name :op1 "Alexander" :op2 "Nowak") :arg0-of (h / have-org-role-91 :arg1 (c / country :name (n2 / name :op1 "N-A")) :arg2 (m / minister :mod (e / energy)))) :arg1 (s2 / schedule-01 :arg1 (n3 / negotiate-01) :arg3 (s3 / saturday :mod (n4 / next))))
(h / have-org-role-91 :arg0 (p / person :name (n / name :op1 "Ludwig" :op2 "Götz") :arg0-of (h2 / have-org-role-91 :arg1 (o / organization :name (n2 / name :op1 "CSU")) :arg2 (m / mayor) :time (f / former))) :arg1 (p2 / person :arg0-of (h3 / have-org-role-91 :arg3 (j / judge-01))) :arg2 (g / good :poss (s / school :poss (p3 / person :arg0-of (h4 / have-org-role-91 :arg3 (j2 / judge-01))))))
(s / say-01 :arg0 (s2 / she) :arg1 (a / and :op1 (b / become-01 :arg1 (p / person :arg0-of (h / have-org-role-91 :arg2 (g / general :mod (a2 / als)))) :arg2 (s3 / strong-02 :arg1 (p2 / person) :degree (s4 / so)) :arg1-of (s5 / strong-02 :degree (s6 / so))) :op2 (c / consult-01 :arg0 (p3 / person) :arg1 (d / doctor :poss (p4 / person)))) :li 17)
(m / meet-03 :arg0 (p / person :name (n / name :op1 "Radelns")) :time (y / yesterday) :time (a / after :op1 (m2 / meet-02 :arg0 (p2 / person) :arg1 (a2 / athletes :quant 180) :location (p3 / peninsula :name (n2 / name :op1 "N-A")))))
(g / get-03 :arg1 (y / you) :arg2 (b / bad-04 :arg1 (y2 / you) :degree (m / more)) :condition (g2 / go-02 :arg0 (y3 / you)))
(a / and :op1 (r / raced :arg0 (p / person :name (n / name :op1 "Stewart")) :arg1 (w / wall) :ord (o / ordinal-entity :value 2 :range (o2 / ordinal-entity :value 2))) :op2 (e / end-01 :arg0 (p2 / person) :arg1 (e2 / evening :poss (p3 / person))) :time (o3 / ordinal-entity :value 2))
(s / say-01 :arg0 (p / person :arg0-of (r / report-01)) :arg1 (a / and :op1 (r2 / reach-01 :arg0 (m / movement-07 :arg0 (t / they)) :arg1 (s2 / stage :mod (n / new) :consist-of (d / disobedience :mod (c / civil)))) :op2 (p2 / plan-01 :arg0 (m2 / movement-07) :arg1 (t2 / they) :time (w / week :arg1-of (c2 / come-01)))) :medium (d2 / demonstrate-01))
(t / think-01 :arg0 (s / she) :arg1 (b / beat-03 :arg0 (h / he) :arg1 (t2 / they)))
(e / explain-01 :arg0 (p / person :name (n / name :op1 "Dimitri" :op2 "Peskow") :arg0-of (h / have-org-role-91 :arg1 (h2 / he) :arg3 (s / speak-01))) :time (l / late :degree (m / more)) :arg1-of (c / cause-01 :arg0 (t / think-01 :arg0 (p2 / person :name (n2 / name :op1 "Putin")) :arg1 (c2 / contrast-01 :arg1 (b / become-01 :arg1 (f / field :mod (s2 / standing :poss (s3 / standing :location (e2 / east :part-of (c3 / country :name (n3 / name :op1 "Ukraine")))))) :arg2 (p3 / part :part-of (c4 / country :name (n4 / name :op1 "Russia")))) :arg2 (o / obligate-01 :arg2 (d / define-01 :arg1 (s4 / status :poss (p4 / person)) :mod (a / again) :purpose (g / give-01 :arg1 (p5 / power) :arg2 (b2 / bias-01 :arg1 (a2 / and :op1 (r / right) :op2 (i / interest-01))))))))))
(c / campaign-01 :arg0 (p / person :name (n / name :op1 "Truppenübungsplatz")) :arg1 (s / shooting :mod (m / more :polarity -)) :time (f / former) :duration (n2 / nearly :op1 (t / temporal-quantity :quant (N / N-A) :unit (y / year))))
(r / ready-02 :arg1 (i / i) :arg2 (t / tell-01 :arg0 (p / person :arg0-of (h / have-rel-role-91 :arg1 (f / family :arg1-of (h2 / have-org-role-91 :arg0 (p2 / person) :arg2 (m / member))) :arg2 (m2 / member))) :arg1 (i2 / i) :arg2 (t2 / tell-01 :arg0 (p3 / person :arg0-of (h3 / have-rel-role-91 :arg1 (f2 / family) :arg2 (f3 / father))) :arg1 (p4 / person :arg0-of (h4 / have-rel-role-91 :arg1 (f4 / family) :arg2 (f5 / father)))) :time (a / always)))
(a / and :op1 (s / sought-after :arg1 (h / home :poss (c / capital)) :degree (h2 / high)) :op2 (s2 / subject-01 :arg1 (h3 / home) :arg2 (i / increase-01 :arg1 (t / thing :arg2-of (p / price-01) :mod (h4 / huge))) :arg1-of (c2 / cause-01 :arg0 (f / fear-01 :arg1 (c3 / credit-02 :mod (c4 / credit)) :arg1-of (l / lead-03 :arg2 (p2 / put-03 :arg1 (l2 / limit-01 :arg1 (l3 / loan-01 :mod (m / mortgage)))) :arg1-of (w / wide-02))))))
(a / and :op1 (h / have-03 :arg0 (p / person :name (n / name :op1 "Petro" :op2 "Poroshenko") :arg0-of (h2 / have-org-role-91 :arg1 (c / country :name (n2 / name :op1 "N-A")) :arg2 (p2 / president))) :arg1 (c2 / consequence :mod (h3 / human)) :arg3 (d / defeat-01 :arg1 (s / separatist) :manner (h4 / heavy)) :time (a2 / already)) :op2 (a3 / announce-01 :arg0 (l / leadership :mod (a4 / army :mod (t / top)) :arg1-of (a5 / announce-01 :manner (d2 / detail :polarity -))) :arg1 (p3 / person)))
(n / need-01 :arg0 (a / and :op1 (t / thing :arg1-of (c / content)) :op2 (s / size :poss (w / work-01 :arg0 (e / event)))) :arg1 (m / make-01 :arg1 (s2 / sem :ord (o / ordinal-entity :value 1) :arg1-of (m2 / make-01 :arg0 (o2 / organization :name (n2 / name :op1 "Volksstimme"))))) :concession (a2 / and :op1 (c2 / content :prep-in (c3 / content)) :op2 (s3 / size :poss (w2 / work-01))))
(s / state-01 :arg0 (s2 / state :quant 1 :arg1-of (i / include-91 :arg2 (s3 / state :quant 11)) :arg0-of (i2 / inform-01 :arg1 (a / and :op1 (l / law :arg1-of (r / resemble-01)) :op2 (c / court :mod (c2 / court))))) :arg1 (a2 / and :op1 (u / unconstitutional :domain (l2 / location :name (n / name :op1 "Louisiana"))) :op2 (d / direct-01 :arg0 (s4 / state) :arg1 (m / measure-02 :mod (s5 / such))) :time (r2 / recent)))
(a / appointments :arg0 (c / company :name (n / name :op1 "Abbott")) :arg1 (p / person :arg0-of (a2 / advise-01 :arg2 (t / take-01 :arg0 (p2 / person) :arg1 (l / lawyer))) :quant (m / multiple :op1 1)) :manner (s / sudden))
(d / dare-01 :polarity - :arg0 (p / person :arg0-of (f / farm-01)) :arg2 (l / leave-11 :arg0 (p2 / person) :arg1 (h / home :poss (p3 / person))))
(p / promise-01 :arg0 (g / generation :quant (a / all)) :arg2 (p2 / person :arg0-of (o / organize-01)))
(f / find-01 :arg0 (p / person :arg0-of (h / head-01 :arg1 (c / company :name (n / name :op1 "BBC")) :manner (f2 / fair))) :arg1 (n2 / need-01 :arg0 (p2 / person) :arg1 (h2 / have-org-role-91 :arg0 (p3 / person) :arg1 (c2 / company :name (n3 / name :op1 "BBC")) :arg2 (d / director :mod (g / great))) :arg1-of (p4 / possible-01)))
(a / and :op1 (s / search-01 :arg0 (g / generation :mod (n / new)) :arg2 (s2 / sport :mod (k / kind))) :op2 (m / make-01 :arg0 (g2 / generation) :arg1 (t / thing :arg2-of (j / joke-01) :mod (l / large))) :time (n2 / now))
(s / say-01 :arg1 (p / person :name (n / name :op1 "Georgy" :op2 "Fanijew") :time (t / today)) :arg2 (p2 / photo :topic (p3 / person :location (h / hospital))) :time (t2 / today))
(b / big :degree (t / too) :domain (f / foot :part-of (y / you)))
(s / say-01 :arg0 (o / organization :name (n / name :op1 "Connells") :arg0-of (h / have-org-role-91 :arg2 (a / agent :mod (e / estate)))) :arg1 (p / pig :arg0 (p2 / person :arg0-of (o2 / own-01)) :arg1 (p3 / pig)))
(c / cost-01 :arg1 (m / monetary-quantity :arg2-of (c2 / cost-01)) :arg2 (y / you) :condition (b / begin-01 :arg0 (y2 / you) :arg1 (w / word :prep-with (p / person :arg0-of (h / have-rel-role-91 :arg1 (y3 / you) :arg2 (g / girlfriend))))))
(c / cup)
(d / difficult :degree (v / very) :domain (i / it))
(a / and :op1 (l / leck :domain (p / person :arg0-of (b / broker-01 :arg1 (b2 / building :name (n / name :op1 "N-A"))))) :op2 (b3 / believe-01 :arg0 (p2 / person) :arg1 (a2 / and :op1 (m / mark-01 :arg0 (p3 / person) :arg1 (a3 / and :op1 (b4 / belong-01 :arg0 (p4 / person) :arg1 (a4 / all :arg1-of (i / include-91 :arg2 (t / this)))) :op2 (o / overgrown :arg1 (p5 / person))))) :op2 (o2 / overgrown :arg1 (p6 / person) :arg2 (w / weeds :arg0-of (l2 / look-02 :arg1 (r / resemble-01 :arg2 (h / head :mod (g / giant))))))))
(c / come-01 :arg1 (r / rain-01 :mod (b / big)) :time (u / until :op1 (c2 / come-01 :arg1 (r2 / rain-01 :mod (b2 / big)))))
(g / great :degree (g2 / great) :domain (h / history))
(m / multi-sentence :snt1 (o / obligate-01 :arg1 (p / person :name (n / name :op1 "Manfred" :op2 "Richter")) :arg2 (a / and :op1 (r / run-01 :arg0 (p2 / person) :arg1 (s / station :mod (r2 / railway :mod (n2 / next))) :frequency (r3 / rate-entity-91 :arg1 6 :arg2 (t / temporal-quantity :quant (N / N-A) :unit (w / week))) :arg4 (s2 / station :mod (r4 / railway :mod (n3 / next)))) :op2 (g / go-02 :arg0 (p3 / person) :arg4 (r5 / railway)))) :snt2 (s3 / say-01 :arg0 (p4 / peninsula :name (n4 / name :op1 "N-A")) :arg1 (a2 / and :op1 (c / crossways :location (c2 / city :mod (w2 / whole)) :path (c3 / city :mod (w3 / whole)) :path (c4 / city :mod (w4 / whole))) :op2 (e / evening :time (e2 / evening)))))
(r / recommend-01 :arg1 (h / have-03 :arg0 (p / person :arg0-of (h2 / have-org-role-91 :arg1 (a / ascent :mod (a2 / animal)) :arg2 (e / exhausted))) :arg1 (r2 / rested)) :location (f / foot :part-of (t / tree)))
(a / and :op1 (i / itemized :arg0 (p / person :name (n / name :op1 "Henry")) :arg1 (l / line :quant 20) :arg3 (s / speak-01 :arg3 (d / documentary) :mod (l2 / last))) :op2 (e / enthused :arg1 (l3 / line)))
(s / scraped :arg1 (o / organization :name (n / name :op1 "NPD")) :time (v / vote-01 :arg1 (s2 / sunday :location (f / five-percent))))
(a / and :op2 (c / contain-01 :arg0 (a2 / and :op1 (i / item :arg1-of (i2 / innocent-01) :location (h / home :poss (w / we))) :op2 (t / thing :arg1-of (s / shed :arg0 (w2 / we)))) :arg1 (a3 / asbestos :arg1 (i3 / item))) :time (m / meanwhile))
(s / shoot-02 :arg0 (s2 / separatist :mod (p / prorussische)) :arg1 (p2 / plane) :direction (d / down))
(a / and :op1 (u / update-01 :arg1 (a2 / account :mod (o / official) :poss (p / person :name (n / name :op1 "Perry"))) :arg1-of (f / frequent-02)) :op2 (f2 / fame-01 :arg1 (a3 / account) :frequency (s / sometimes)))
(c / contrast-01 :arg1 (i / insult-01 :polarity - :arg0 (p / person :arg0-of (h / have-rel-role-91 :arg1 (i2 / i) :arg2 (f / father))) :arg1 (s / someone) :time (e / ever)) :arg2 (l / love-01 :arg0 (h2 / he) :arg1 (s2 / song :mod (t / this))))
(a / and :op1 (d / design-01 :arg0 (p / person :name (n / name :op1 "Dimitri" :op2 "Beliakow") :arg0-of (h / have-org-role-91 :arg1 (c / country :name (n2 / name :op1 "N-A")) :arg2 (p2 / photographer :mod (s / star)))) :arg1 (i / it)) :op2 (f / fame-01 :arg1 (i2 / it) :time (a2 / age-01 :arg1 (p3 / person) :arg2 (t / temporal-quantity :quant (N / N-A) :unit (y / year)) :mod (o / only)) :time (a3 / age-01 :arg1 (p4 / person) :arg2 (t2 / temporal-quantity :quant (N2 / N-A) :unit (y2 / year)))) :time (a4 / after :op1 (e / explode-01 :arg1 (t3 / thing :poss (i3 / i)))))
(c / contrast-01 :arg1 (h / hunger-01 :arg0 (p / person :name (n / name :op1 "Kämpfertruppe") :arg0-of (w / warlike :arg1 (d / day))) :arg1 (d2 / day) :mod (m / main)) :arg2 (o / oppose-01 :arg0 (p2 / person :arg0-of (h2 / have-org-role-91 :arg1 (r / regenpause :mod (e / every)) :arg3 (' / ''))) :arg1 (d3 / demonstrate-01 :arg0 (p3 / person) :arg1 (d4 / demonstrate-01 :arg0 (p4 / person) :arg1 (p5 / person :name (n2 / name :op1 "Kampfeskunst") :arg0-of (h3 / have-org-role-91 :arg2 (r2 / robust))) :location (a / arena :arg1-of (s / soft-02))))))
(n / need-01 :arg0 (c / child) :arg1 (a / and :op1 (r / roots) :op2 (w / wing)))
(a / and :op1 (s / site :quant 6500 :location (h / heart :part-of (r / reserve :name (n / name :op1 (b / biosphere))))) :op2 (o / open-01 :arg1 (t / trails :quant 13) :arg3 (a2 / and :op1 (h2 / hikers) :op2 (c / cyclists))) :time (s2 / since :op1 (t2 / that)))
(w / win-01 :arg0 (p / person :name (n / name :op1 "Harvey") :arg0-of (w2 / win-01 :ord (o / ordinal-entity :value 59 :range (y / year :mod (t / this))))) :arg2 (e / ethnic-group :name (n2 / name :op1 "WA")) :time (y2 / year :mod (t2 / this)) :prep-with (t3 / total-01 :arg2 (n3 / nearly :op1 (m / monetary-quantity :quant 85 :unit (d / dollar) :mod (n4 / near)))))
(a / and :op1 (c / content-01 :arg1 (w / we)) :op2 (e / experience-01 :arg1 (i / involve-01 :arg1 (a2 / all)) :arg1-of (w2 / wonderful-03)))
(c / contrast-01 :arg1 (t / tell-01 :polarity - :arg0 (s / she) :arg1 (a / about :op1 (l / life :location (n / north :part-of (n2 / north :part-of (c2 / country :name (n3 / name :op1 "N-A")))))) :arg2 (h / he)) :arg2 (d / doubt-01 :polarity - :arg1 (r / resemble-01 :arg1 (i / it) :arg2 (h2 / here) :mod (e / essential) :mod (j / just))))
(a / asbestos :time (a2 / after :op1 (a3 / all)))
(a / and :op1 (i / inform-01 :mode (i2 / imperative) :arg0 (y / you) :arg1 (y2 / you) :arg2 (d / determinations :arg1 (b / business :mod (m / monetary-quantity :arg1-of (e / expend-01 :arg0 (y3 / you))))) :mod (a2 / also)) :op2 (b2 / be-located-at-91 :arg1 (y4 / you) :arg2 (u / under :op1 (f / fee :mod (p / punish-01))) :arg1-of (c / cause-01 :arg0 (a3 / appropriate-02 :arg1 (l / letter :mod (o / or :op1 (l2 / letter :arg1-of (l3 / low-04 :degree (m2 / more))) :op2 (d2 / deletion :arg1-of (l4 / low-04 :degree (m3 / more))) :op3 (u2 / use-01 :arg1 (t / trace))))))))
(c / contrast-01 :arg1 (s / see-01 :arg0 (i / i) :arg1 (t / thing :quant (n / numerous) :arg1-of (s2 / see-01 :frequency (o / often))) :frequency (o2 / often)) :arg2 (e / experience-01 :arg1 (f / footsteps :arg1 (r / romans :location (l / location :name (n2 / name :op1 "Wachtberg"))) :ord (o3 / ordinal-entity :value 1)) :mod (a / again)))
(' / '' :arg1 (p / program :mod (g / government-organization :arg0-of (g2 / govern-01)) :mod (b / black-and-red)) :mod (c / certain))
(g / gather-03 :arg0 (p / person :arg0-of (s / support-01 :arg1 (p2 / person :arg0-of (s2 / support-01) :mod (c / central)) :location (i / in-front-of :op1 (h / headquarters :poss (g2 / government-organization :arg0-of (g3 / govern-01)) :location (c2 / city :name (n / name :op1 "Hong" :op2 "Kong")))))) :duration (u / up-to :op1 (t / temporal-quantity :quant (N / N-A) :unit (h2 / hour))) :time (d / date-entity :year (N2 / N-A)))
(s / say-01 :arg0 (h / he) :arg1 (c / cost-01 :arg1 (b / book :arg1-of (n / need-01 :time (s2 / semester :mod (l / last)))) :arg2 (m / monetary-quantity :quant 430 :unit (d / dollar))))
(r / result-01 :arg2 (e / examine-01 :arg1 (d / divide-02)))
(a / and :op1 (l / lead-01 :arg0 (p / person :name (n / name :op1 "Henry")) :arg1 (l2 / line :quant 20) :arg3 (d / documentary) :mod (l3 / last)) :op2 (t / thrilled :domain (h / he)))
(a / and :op1 (c / called :arg0 (i / i)) :op2 (s / suggest-01 :arg0 (i2 / i) :arg1 (p / possible-01 :arg1 (s2 / sit-01 :arg1 (w / we) :arg2 (t / together) :manner (t2 / together) :time (m / mr. :arg0 (p2 / person :name (n / name :op1 "Piffl")) :arg1 (p3 / person :name (n2 / name :op1 "Sjöberg")))))))
(a / and :op1 (d / do-02 :arg0 (o / organization :name (n / name :op1 "NPD")) :arg1 (b / bad-04 :arg1 (o2 / organization) :arg2 (t / time :mod (l / last)))) :op2 (s / say-01 :arg0 (p / person :name (n2 / name :op1 "Scheck") :arg0-of (h / have-org-role-91 :arg2 (l2 / location :name (n3 / name :op1 "Baden-Württemberg")))) :arg1 (a2 / and :op1 (p2 / person :arg0-of (f / found-01 :arg1 (o3 / organization) :mod (a3 / also))) :op2 (a4 / age-01 :arg1 (p3 / person) :arg2 (t2 / temporal-quantity :quant (N / N-A) :unit (y / year))) :mod (a5 / also))))
(c / contrast-01 :arg1 (m / manage-02 :arg0 (p / person :name (n / name :op1 "Lawsone")) :arg1 (' / '' :arg0 (p2 / person) :arg1 (a / appear-01 :arg1 (p3 / person)))) :arg2 ('2 / '' :arg0 (p4 / person) :arg1 (t / thing) :manner (l / light :mod (p5 / positive :degree (m2 / more :degree (l2 / little))))))
(f / fear-01 :arg0 (i / i) :arg1 (o / obligate-01 :arg2 (o2 / operated :arg1 (i2 / i) :mod (a / again))))
(c / contrast-01 :arg1 (s / sjöberg :arg0 (c2 / club :name (n / name :op1 (' / ''))) :arg1 (a / and :op1 (d / develop-02 :arg1 ('2 / '')) :op2 ('3 / '' :arg1 (s2 / site))) :location (f / forest :location (f2 / forefronts)) :time (u / until :op1 (h / have-03 :arg0 (p / person :arg0-of (h2 / have-rel-role-91 :arg1 (p2 / person) :arg2 (f3 / friend))) :arg1 (r / reconstruct-01 :arg1 (m / multivitamin) :location (f4 / forest :location (m2 / mountain))) :time (u2 / until :op1 (r2 / recent))))) :arg2 (h3 / have-rel-role-91 :arg0 (p3 / person) :arg1 (m3 / multivitamin) :arg2 (f5 / friend) :time (u3 / until :op1 (r3 / recent))))
(c / contrast-01 :arg1 (h / hundreds :arg1 (p / programmes :arg1-of (s / special-02)) :arg2 (a / and :op1 (g / girl) :op2 (w / woman :mod (y / young))) :time (n / now)) :arg2 (n2 / nothing :beneficiary (b / boy) :mod (a2 / almost)))
(h / he :quant 55 :domain (h2 / he) :time (d / die-01 :arg1 (h3 / he) :time (d2 / date-entity :month 2 :day 17)))
(m / mix-01 :arg1 (s / soundtrack) :arg2 (a / and :op1 (r / reggae) :op2 (r2 / rap)) :manner (m2 / melodies :polarity -))
(f / fail-01 :arg1 (o / organization :name (n / name :op1 "NPD")) :arg2 (v / vote-01 :arg0 (o2 / organization) :arg1 (s / sunday :location (t / threshold :quant 5 :mod (p / percentage-entity :value (N / N-A))))))
(a / and :op1 (h / have-03 :arg0 (s / state :name (n / name :op1 "Virginia")) :arg1 (p / product-of :op1 6 :op2 (p2 / percentage-entity :value (N / N-A))) :location (a2 / area :quant 3 :mod (a3 / all))) :op2 (t / thing :arg1-of (t2 / tax-01 :arg3 (t3 / tax-01 :arg3 (i / income)) :arg1-of (s2 / significant-02)) :arg1-of (s3 / significant-02)) :op3 (r / rate :mod (t4 / tax-01 :arg3 (c / corporation)) :arg1-of (f / fix-03)))
(p / prove-01 :arg1 (o / objective :mod (b / bike :mod (r / red))) :time (s / start-01 :arg0 (a / and :op1 (a2 / assembly :arg0-of (o2 / organize-01 :arg1 (a3 / assembly))) :op2 (d / dress :mod (r2 / red)) :op3 (b2 / bike :mod (r3 / red))) :mod (s2 / still)) :time (s3 / start-01 :arg1 45 :arg1 (a4 / amount :arg1-of (a5 / amount-01 :arg2 (a6 / amount :mod (e / every)))) :time (a7 / after :op1 (t / temporal-quantity :quant (N / N-A) :unit (m / minute) :mod 45))) :arg1-of (h / have-concession-91 :arg2 (a8 / and :op1 (t2 / tip-05 :arg1 (p2 / politician) :arg2 (p3 / pro :quant (h2 / half))) :op2 (g / go-08 :arg1 (p4 / politician) :arg2 (u / under :op1 (t3 / temporal-quantity :quant (N2 / N-A) :unit (m2 / minute)) :manner (o3 / objective))))))
FAILED_TO_PARSE#Number of opening and closing brackets doesn't match.
(a / and :op1 (f / fly-01 :arg1 (a2 / and :op1 (s / swords) :op2 (m / molecule) :op3 (h / hand-bells) :op4 (l / littered)) :path (a3 / arena :arg0-of (f2 / fear-01 :arg1 (h2 / health :poss (g / gladiators))))) :op2 (w / worry-02 :arg0 (a4 / and) :arg1 (h3 / health :poss (g2 / gladiators))) :time (s2 / since :op1 (c / crash-01)))
(d / difficult :degree (s / so) :domain (g / get-05 :arg1 (y / you) :arg2 (p / place :quant (a / all) :location-of (a2 / and :op1 (r / remember-01 :arg0 (y2 / you) :arg1 (t / that)) :op2 (w / work-01 :arg0 (y3 / you) :arg1 (d2 / data))))))
(c / cause-01 :arg0 (s / survive-01 :arg0 (r / radio :mod (n / next)) :mod (a / also)) :arg1 (s2 / survive-01 :arg0 (c2 / cable :mod (s3 / self-coiling)) :mod (a2 / also)))
(a / admit-01 :arg0 (p / person :name (n / name :op1 "Mike" :op2 "Penning") :arg0-of (h / have-org-role-91 :arg2 (m / minister :mod (p2 / pension)))) :arg1 (a2 / admit-01 :arg0 (a3 / and :op1 (p3 / person :arg0-of (h2 / have-org-role-91 :arg2 (m2 / minister :mod (t / time :mod (t2 / that))))) :op2 (p4 / person :arg0-of (h3 / have-org-role-91 :arg2 (m3 / minister :mod (p5 / pension))))) :arg1 (? / ?? :polarity - :arg1 (l / law))) :mod (a4 / also))
(f / follow-01 :arg1 (o / operation :mod (e / emergency)) :arg2 (o2 / operation :quant 2 :mod (m / more)))
(s / say-01 :arg0 (c / candidate :mod (n / new)) :arg1 (a / and :op1 (l / love-01 :arg0 (c2 / candidate) :arg1 (a2 / and :op1 (c3 / country) :op2 (l2 / love-01 :arg1 (c4 / city :name (n2 / name :op1 "Hong" :op2 "Kong"))))) :op2 (s2 / suppose-02 :arg1 (c5 / candidate) :arg2 (a3 / admit-01 :arg1 (a4 / and)))))
(s / say-01 :arg0 (p / person :name (n / name :op1 "Hattery")) :arg1 (a / and :op1 (l / lynched :arg1 (m / man :quant (a2 / at-least :op1 1865) :arg1-of (b / black-05))) :op2 (j / justify-01 :arg1 (r / rape-01 :arg1 (w / woman :mod (w2 / white))) :time (a3 / always :mod (a4 / almost)))) :li 1865)
(r / remain-01 :arg1 (i / it) :arg3 (w / we))
(s / stay-01 :arg1 (s2 / stay-01 :arg3 (n / near-02 :arg2 (s3 / surface))))
(c / coincidences :location (t / there))
(r / recommend-01 :arg1 (t / tolerate-01 :polarity - :arg1 (s / spread-03 :arg1 (p / picture :arg1-of (s2 / steal-01))) :manner (l / law)) :manner (l2 / law))
(c / cycle :arg0 (c2 / company :name (n / name :op1 "Abbott")) :mod (a / again) :mod (a2 / again))
(f / follow-01 :arg1 (i / it) :arg2 (a / and :op1 (c / cyclists :ord (o / ordinal-entity :value 1)) :op2 (a2 / a.m. :quant 10 :mod (a3 / a.m.))))
(f / forecast-01 :arg0 (o / organization :name (n / name :op1 "Hamptions" :op2 "International") :part-of (e / estate :location (e2 / estate) :mod (r / real) :mod (a / another))) :arg1 (r2 / rise-01 :arg1 (p / price-01 :arg1 (h / house) :location (c / city :name (n2 / name :op1 "London"))) :arg3 (p2 / percentage-entity :value (N / N-A)) :arg4 (p3 / percentage-entity :value (N2 / N-A)) :arg4 (p4 / percentage-entity :value (N3 / N-A)) :time (a2 / already)))
(s / surprise-01 :arg0 (a / and :op1 (w / wave-04 :arg1 (b / breast :poss (p / passenger))) :op2 (s2 / set-02 :arg1 (p2 / pleurakathether) :arg2 (p3 / pleurakathether))) :arg1 (a2 / and :op1 (x / x-ray :arg0 (p4 / passenger) :arg1 (p5 / pleurakathether)) :op2 (t / test-01 :arg0 (a3 / aircraft-type) :arg1 (l / laboratory))))
(h / have-concession-91 :arg1 (f / function-01 :polarity - :mod (t / this) :time (y / yet)) :arg2 (b / be-located-at-91 :arg1 (p / person :name (n / name :op1 "Li" :op2 "Yiwei")) :arg2 (m / main) :time (a / already)))
(a / ask-02 :arg0 (s / source) :arg1 (r / remain-01 :arg1 (s2 / source) :arg3 (a2 / anonymous)) :arg1-of (c / cause-01 :arg0 (p / public-02 :polarity - :arg1 (n / negotiate-01))))
(u / utilize-01 :arg0 (t / trade-01 :mod (f / foreign)) :arg1 (e / economy) :mod (a / also))
(i / investigate-01 :polarity - :arg1 (l / location :name (n / name :op1 "District")))
(c / cause-01 :arg0 (c2 / cease-fire :arg1 (a / and :op1 (f / fight-01) :op2 (i / issue-02 :mod (i2 / important)))) :arg1 (r / remain-01 :arg1 (i3 / issue-02 :arg1-of (r2 / remain-01 :arg3 (r3 / resolve-01 :arg1 (f2 / fight-01))) :example (d / demand-01 :arg0 (o / organization :name (n / name :op1 "Hamas")) :arg1 (a2 / and :op1 (b / blockade-01 :arg0 (o2 / organization) :arg1 (c3 / country-region :name (n2 / name :op1 "Gaza")) :mod (i4 / israeli-egyptian)) :op2 (r4 / reopening :arg1 (a3 / and :op1 (u / url-entity :value (a4 / air)) :op2 (u2 / url-entity :value (a5 / air))) :location (c4 / country-region :name (n3 / name :op1 "Gaza"))))))))
(c / contrast-01 :arg1 (c2 / confident-01 :arg1 (i / i) :arg2 (f / find-02 :arg0 (i2 / i) :arg1 (f2 / find-01 :arg0 (s / someone) :arg1 (' / '')))) :arg2 (c3 / cause-01 :arg0 (h / have-03 :arg0 (h2 / he) :arg1 (r / residence :poss (h3 / he) :arg1-of (b / bad-07))) :arg1 (i3 / i)))
(c / cancer-spots :quant (s / several) :location (a / around :op1 (c2 / chest :part-of (i / i))))
(c / create-01 :arg0 (i / increase-01 :arg1 (s / standard :mod (l / live-01 :arg0 (p / person)))) :arg1 (m / market :location (a / and :op1 (i2 / industry) :op2 (r / raise-02 :arg1 (n / nation :mod (e / entire)) :arg2 (l2 / level :mod (p2 / produce-01))))) :manner (i3 / increase-01 :arg1 (s2 / standard :mod (l3 / live-01 :arg0 (p3 / person)))))
(c / contrast-01 :arg1 (s / share-01 :arg0 (p / person :name (n / name :op1 "Collegeleitung")) :arg1 (r / rate-entity-91 :arg1 (m / more-than :op1 (m2 / monetary-quantity :quant 1,200 :unit (d / dollar))) :arg2 (t / temporal-quantity :quant (N / N-A) :unit (y / year))) :arg3 (p2 / person :arg0-of (s2 / study-01))) :arg2 (d2 / differ-02 :arg1 (p3 / person :arg0-of (s3 / study-01)) :arg2 (p4 / person :arg0-of (s4 / study-01))))
(a / and :op1 (f / fall-01 :arg1 (s / shoot-02 :arg1-of (s2 / sharp-02) :mod (l / last)) :arg4 (a2 / area :location-of (t / train-01 :mod (m / military))) :time (d / date-entity :month 12 :year 2004)) :op2 (c / close-01 :arg1 (s3 / store :name (n / name :op1 2005)) :time (e / end-01 :arg1 2005) :time (a3 / after :op1 (c2 / close-01 :arg1 (c3 / company :mod (m2 / military) :duration (t2 / temporal-quantity :quant (N / N-A) :unit (y / year)))))))
(d / die-01 :arg1 (p / person :name (n / name :op1 "Stephen" :op2 "Jay" :op3 "Gould") :arg0-of (a / author-01)) :time (a2 / after :op1 (w / war :name (n2 / name :op1 "N-A")) :quant (t / temporal-quantity :quant (N / N-A) :unit (y / year))))
(h / head-01 :arg0 (p / person :name (n / name :op1 "Artem" :op2 "Deev") :arg0-of (h2 / head-01 :arg1 (d / department :mod (a / analytical) :part-of (f / fc)))) :arg1 (p2 / person :arg0-of (h3 / head-01 :arg1 (d2 / department :mod (a2 / analytical) :part-of (f2 / fc)))))
(a / and :op1 (a2 / asbestos :arg1 (i / i)) :op2 (r / remain-01 :arg1 (o / office :location-of (l / live-01 :arg0 (w / we)) :location-of (a3 / and :op1 (l2 / learn-01 :arg0 (w2 / we)) :op2 (s / shop :location-of (l3 / learn-01 :arg0 (w3 / we)) :location-of (g / go-02 :arg0 (w4 / we) :arg4 (s2 / shop-01))))) :prep-in (h / house :location-of (l4 / live-01 :arg0 (w5 / we)))))
(a / and :op1 (e / exchange-01 :arg0 (s / soldier :quant (b / between :op1 63 :op2 63) :arg1-of (h / hold-01 :location (l / location :name (n / name :op1 "Ilovaysk")) :arg1-of (r / report-01))) :arg1 (p / person :quant 63 :mod (c / country :name (n2 / name :op1 "N-A")) :arg0-of (h2 / have-org-role-91 :arg1 (c2 / country) :arg2 (s2 / soldier))) :arg1-of (r2 / report-01) :location (l2 / location :name (n3 / name :op1 "Ilovaysk")) :arg1-of (c3 / cause-01 :arg0 (r3 / result-01 :arg1 (i / invade-01) :arg2 (i2 / invade-01 :arg0 (c4 / country) :arg1 (c5 / country))))) :op2 (r4 / report-01 :arg0 (p2 / person) :medium (s3 / sunday) :time (b2 / before :op1 (n4 / now) :quant (t / temporal-quantity :quant (N / N-A) :unit (w / week)))))
(a / and :op1 (s / shake-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (t / team :mod (b / bank :mod (b2 / bank :mod (p2 / piggy)) :poss (s2 / she))))) :arg1 (b3 / bronze :arg1 (m / man))) :op2 (p3 / put-01 :arg0 (p4 / person :arg0-of (s3 / speak-01)) :arg1 (p5 / person :arg0-of (s4 / speak-01)) :arg2 (c / category :quant (m2 / more-than :op1 100))))
(m / multi-sentence :snt1 (a / and :op1 (n / nature :mod (g / graphic) :poss (i / it)) :op2 (s / shut-down-05 :polarity - :arg1 (n2 / nature)) :domain (t / time :ord (o / ordinal-entity :value 1) :location (s2 / screen))) :snt2 (a2 / and :op1 (n3 / nature :mod (g2 / graphic) :poss (i2 / it)) :op2 (s3 / shut-down-05 :polarity - :arg1 (f / film))))
(a / and :op1 (h / hack-04 :arg0 (m / mass) :arg1 (a2 / account :consist-of (s / star)) :degree (m2 / mass)) :op2 (p / possible-01 :arg1 (h2 / hacking :arg0 (p2 / person :arg0-of (a3 / apply-01)) :arg1 (p3 / phone :poss (i / i)))))
(a / and :op1 (n / need-01 :polarity - :arg0 (t / they) :arg1 (b / blame-01 :arg1 (a2 / anyone))) :op2 (p / possible-01 :polarity - :arg1 (j / justify-01 :arg1 (a3 / anyone)) :condition (o / or :op1 (a4 / appropriate-02 :arg1 (i / it)) :op2 (p2 / possible-01 :arg1 (f / fix-02 :arg0 (y / you) :arg1 (s / something))))))
(s / say-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (g / government-organization :name (n / name :op1 "Foreign" :op2 "Ministry") :mod (c / country :name (n2 / name :op1 "Russia"))) :arg2 (s2 / spokesman))) :arg1 (p2 / position :arg0 (c2 / city :name (n3 / name :op1 "Paris")) :arg1 (t / thing :arg2-of (p3 / position-01 :arg1 (a / and :op1 (s3 / supply-01 :arg1 (t2 / type :mod (t3 / type :mod (c3 / country :name (n4 / name :op1 "Russia"))))) :op2 (e / et-cetera)) :arg1-of (c4 / continue-01)))))
(a / and :op1 (d / decide-01 :arg0 (f / fan :poss (p / person :name (n / name :op1 "Ksyusha"))) :arg1 (s / smoke :mod (a2 / also))) :op2 (c / condemn-01 :arg0 (f2 / fan) :arg1 (s2 / she) :arg2 (i / it)))
(t / transfer-01 :arg0 (p / person :arg1-of (b / black-05) :quant (a / all)) :arg1 (p2 / person :arg0-of (h / have-org-role-91 :arg1 (m / militia) :arg2 (o / official :mod (s / security)))))
(t / think-01 :arg0 (i / i) :arg1 (a / and :op1 (s / see-01 :arg0 (p / person :quant (m / many)) :arg1 (i2 / it) :time (o / ordinal-entity :value 1)) :op2 (l / learn-01 :arg0 (i3 / i) :arg1 (a2 / and :op1 (l2 / learn-01 :arg0 (p2 / person) :arg1 (t2 / tragedy :poss (w / we))) :op2 (m2 / make-02 :arg0 (p3 / person) :arg1 (e / event :time (e2 / ever :polarity -)))))) :time (s2 / see-01 :arg0 (i4 / i) :arg1 (p4 / photo :prep-on (i5 / internet))))
(c / compete-01 :arg0 (p / person :arg0-of (i / inhabit-01 :arg1 (c2 / continent))) :arg1 (c3 / compete-01 :location (s / sphere :poss (a / and :op1 (g / good) :op2 (s2 / service)))))
(d / die-01 :arg1 (p / person :name (n / name :op1 "Nelly" :op2 "Kershaw")) :location (l / location :name (n2 / name :op1 "Rochdale")))
(r / read-01 :mode (i / imperative) :arg0 (y / you) :arg1 (s / supply-01 :arg0 (c / country :name (n / name :op1 "Russia")) :arg1 (s2 / supply-01 :arg0 (c2 / country) :arg1 (m / material :arg1-of (d / distribute-01 :arg0 (' / '' :name (n2 / name :op1 ('2 / '') :op2 (m2 / mistral) :op3 (m3 / mistral)))))) :arg2 (w / we :mod (a / almost))))
(f / find-02 :arg0 (p / poll-01 :arg2 (p2 / person :arg0-of (h / have-org-role-91 :arg1 (o / organization :name (n / name :op1 "Journal" :op2 "du" :op3 "Dimanche"))))) :arg1 (b / believe-01 :arg0 (p3 / person :quant 76 :arg1-of (i / include-91 :arg2 (p4 / person :mod (c / country :name (n2 / name :op1 "N-A"))))) :arg1 (b2 / break-up-08 :arg0 (p5 / political-party) :arg1 (f2 / factions :quant (s / several)) :time (b3 / before :op1 (e / end-01 :arg1 (p6 / presidency :poss (p7 / person :name (n3 / name :op1 "Hollande") :arg0-of (h2 / have-org-role-91 :arg1 (g / government-organization :name (n4 / name :op1 "N-A")) :arg2 (p8 / president)))))))))
(d / duty :poss (i / i) :domain (i2 / it))
(a / ask-02 :arg0 (p / person :name (n / name :op1 "Vladimir" :op2 "Putin") :arg0-of (h / have-org-role-91 :arg1 (c / country :name (n2 / name :op1 "N-A")) :arg2 (p2 / president))) :arg1 (r / release-01 :arg0 (p3 / person) :arg1 (t / troop :mod (c2 / country :name (n3 / name :op1 "N-A"))) :arg2 (e / environment)) :arg2 (p4 / person :arg0-of (l / lead-02 :arg1 (c3 / country))))
(s / show-01 :arg0 (p / person :mod (e / ethnic-group :name (n / name :op1 "N-A"))) :arg1 (t / trace-02 :polarity - :arg1 (d / disease)) :time (s2 / subsequent))
(a / ask-02 :arg0 (s / source) :arg1 (r / remain-01 :arg1 (s2 / source) :arg3 (a2 / anonymous)) :arg1-of (c / cause-01 :arg0 (o / open-01 :polarity - :arg1 (n / negotiate-01))))
(a / and :op2 (p / play-01 :mode (i / imperative) :arg0 (w / we) :arg1 (v / video :mod (g / genre) :mod (' / '')) :arg1-of (c / cause-01 :arg0 (g2 / give-01 :arg0 (g3 / girl :mod (w2 / wise)) :arg1 (p2 / process-01 :arg1 (g4 / game) :mod (o / old :degree (m / more))) :arg2 (p3 / process-01 :arg1 (g5 / game) :mod (o2 / old :degree (m2 / more)) :arg1-of (p4 / popular-02 :arg2 (p5 / publication :name (n / name :op1 "YouTube")) :time (a2 / already)))))))
(t / think-01 :arg0 (w / we) :arg1 (s / secret :domain (w2 / win-01 :mod (s2 / such))))
(h / have-03 :arg0 (t / team :mod (c / country :name (n / name :op1 "N-A"))) :arg1 (a / and :op1 (b / bronze :quant 3 :mod (o / only)) :op2 (s / silver :quant 1) :op3 (b2 / bronze :quant 2)) :time (t2 / then))
(d / deny-01 :polarity - :arg0 (' / '' :name (n / name :op1 (e / east-west) :op2 (e2 / east-west))) :arg1 (e3 / exemplify-01 :arg0 (p / produce-01 :arg1 (p2 / product :arg0-of (d2 / dairy :arg1 (d3 / dairy))) :time (s / since :op1 (r / rise-01 :arg1 (t / thing :arg2-of (p3 / price-01 :arg1 (t2 / thing :arg2-of (p4 / price-01 :arg1 (t3 / thing :quant 10-15))))))))))
(l / leave-17 :arg1 (c / claim-01 :arg0 (c2 / court :location (r / river :name (n / name :op1 "N-A"))) :arg1 (c3 / claim-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (o / organization :name (n2 / name :op1 "Ministry" :op2 "for" :op3 "State" :op4 "Property" :op5 "Management") :part-of (o2 / organization :name (n3 / name :op1 "Ministry" :op2 "for" :op3 "State" :op4 "Property" :op5 "Management") :part-of (r2 / region))) :arg2 (e / executive))) :arg1 (- / -rrb- :polarity - :arg1 (f / foundation :arg1-of (i / include-91 :arg2 (p2 / person :arg0-of (h2 / have-org-role-91 :arg1 (g / government-organization :arg0-of (g2 / govern-01 :arg1 (p3 / person :name (n4 / name :op1 "Yekaterinburg" :op2 "Yevgeny" :op3 "Roizman")))) :arg2 (m / mayor))))) :arg2 (c4 / city)))) :time (t / today))
(a / appear-01 :arg1 (p / person :arg0-of (h / have-org-role-91 :arg2 (m / minister :mod (p2 / prime)))) :mod (a2 / again :mod (o / once)))
(a / and :op1 (f / force-01 :arg1 (d / doctor :mod (o / other) :quant (a2 / all) :location (s / state)) :arg2 (s2 / stop-01 :arg0 (d2 / doctor) :arg1 (p / perform-02 :arg0 (d3 / doctor) :arg1 (a3 / and :op1 (p2 / procedure) :op2 (d4 / doctor) :op3 (s3 / safe-01 :arg1 (d5 / doctor)))))) :op2 (p3 / perform-02 :arg0 (d6 / doctor) :arg1 (p4 / procedure)) :op3 (t / tell-01 :arg0 (d7 / doctor) :arg2 (g / group) :time (n / no-longer)))
(p / possible-01 :polarity - :arg1 (g / go-02 :arg0 (h / he) :arg4 (w / work-01 :arg0 (h2 / he) :duration (t / temporal-quantity :quant (N / N-A) :unit (m / month)))) :time (e / end-01))
(r / remember-01 :arg0 (i / i) :arg1 (t / thing :manner-of (w / want-01 :arg0 (p / person :name (n / name :op1 "Damir")) :arg1 (e / eat-01 :arg0 (p2 / person) :arg1 (b / borshch))) :time (w2 / want-01 :arg0 (p3 / person) :arg1 (e2 / eat-01 :arg0 (p4 / person) :arg1 (b2 / borshch)))))
(k / kill-01 :arg1 (p / person :quant (m / more-than :op1 (1 / 1/2)) :arg1-of (i / include-91 :arg2 (p2 / person :arg0-of (h / have-rel-role-91 :arg1 (t / they) :arg2 (c / child))))) :time (t2 / try-02 :arg1 (p3 / person :quant (m2 / more-than :op1 (12 / 1/2)) :arg0-of (h2 / have-rel-role-91 :arg1 (t3 / they) :arg2 (c2 / child)))))
FAILED_TO_PARSE#Number of opening and closing brackets doesn't match.
(h / have-concession-91 :arg2 (k / know-01 :arg0 (p / person :name (n / name :op1 "Alexander" :op2 "Lukashenko")) :arg1 (k2 / know-01 :arg0 (p2 / party :quant (a / all)) :arg1 (r / remain-01 :polarity - :arg1 (p3 / peninsula :name (n2 / name :op1 "N-A")) :arg3 (p4 / platform :mod (c / central) :instrument-of (m / meet-03 :arg0 (a2 / and :op1 (p5 / person :arg0-of (r2 / represent-01 :arg1 (p6 / person :arg0-of (r3 / represent-01 :arg1 (s / state))))) :op2 (p7 / person :arg0-of (r4 / represent-01 :arg1 (o / organization :name (n3 / name :op1 "European" :op2 "Commission") :arg1-of (h2 / high-02)))))) :mod (c2 / central)))) :time (b / briefing :mod (f / final))))
(r / record :mod (h / history) :mod (n / new) :domain (t / this))
(t / think-01 :arg0 (h / he) :arg1 (d / do-02 :arg0 (y / you) :arg1 (t2 / thing :arg1-of (d2 / do-02 :arg0 (y2 / you) :time (n / next))) :arg1-of (c / cause-01 :arg0 (t3 / think-01 :arg0 (y3 / you) :arg1 (o / or :op1 (t4 / time :mod (n2 / next)) :op2 (t5 / thing :arg1-of (d3 / do-02 :arg0 (y4 / you) :time (n3 / next)))) :arg1-of (c2 / cause-01 :arg0 (t6 / think-01 :arg0 (y5 / you) :arg1 (o2 / or :op1 (t7 / time) :op2 (q / quiet) :prep-to (s / side)) :manner (q2 / quiet))))) :time (a / after :op1 (s2 / show-04 :arg1 (c3 / company :name (n4 / name :op1 "BBC") :location (' / '' :quant 2008 :mod (l / lennyhenry.tv)))))))
(r / remove-01 :polarity - :arg1 (p / person :name (n / name :op1 "Kolbai")) :arg2 (m / menu :part-of (c / cuisine :arg1-of (s / single-02))) :time (s2 / so-far) :location (i / institution))
(p / possible-01 :arg1 (m / make-01 :arg1 (a / account :arg0-of (h / hack-04 :arg1 (s / star)) :arg0-of (h2 / hack-04 :arg1 (s2 / star))) :location (v / vulnerability :arg0-of (f / find-01 :arg1 (p2 / phone :poss (i / i))))))
(a / and :op1 (o / over :domain (p / period :mod (t / tax-01))) :op2 (t2 / thing :arg2-of (p2 / price-01 :arg1 (o2 / oil))) :op3 (t3 / thing :arg2-of (s / sanction-02)) :op4 (p3 / problem :topic (t4 / transit-01 :arg1 (g / gas))) :op5 (p4 / problem :topic (t5 / transit-01 :arg1 (g2 / gas))))
(m / multi-sentence :snt2 (r / rate-entity-91 :arg1 (r2 / rate-entity-91 :arg1 (r3 / rate :mod (g / game :name (n / name :op1 "N-A"))) :arg2 (r4 / rate-entity-91 :arg1 10 :arg2 (t / temporal-quantity :quant (N / N-A) :unit (y / year))) :location (c / country :name (n2 / name :op1 "Norway")) :prep-with (i / implement-01 :arg1 (p / product) :location (c2 / country :name (n3 / name :op1 "Russia"))))) :snt2 (r5 / rate-entity-91 :arg1 (r6 / rate :mod (g2 / game :name (n4 / name :op1 "N-A"))) :arg2 (r7 / rate-entity-91 :arg1 10 :arg2 (t2 / temporal-quantity :quant (N2 / N-A) :unit (y2 / year))) :location (c3 / country)) :medium (a / article :arg1-of (b / base-02 :arg2 (r8 / regulate-01 :arg0 (s / state) :arg1 (a2 / activity-06 :arg0 (s2 / state) :arg1 (t3 / trade-01) :location (c4 / country))))))
(e / emphasize-01 :arg0 (p / person :arg0-of (o / own-01 :arg1 (c / cuisine :mod (c2 / cafes) :mod (c3 / central) :mod (c4 / central)))) :arg1 (p2 / produce-01 :arg0 (a / and :op1 (p3 / product :arg0-of (o2 / own-01 :arg1 (c5 / country :name (n / name :op1 "N-A")))) :op2 (c6 / cuisine :mod (c7 / country :name (n2 / name :op1 "N-A")) :mod (c8 / central))) :arg1 (p4 / product) :degree (m / more)))
(m / multi-sentence :snt1 (a / and :op1 (o / old :degree (m2 / more) :domain (i / i) :time (n / now)) :op2 (s / say-01 :arg0 (i2 / i) :arg1 (p / possible-01 :arg1 (c / cope-01 :arg0 (c2 / child) :arg1 (e / event :arg1-of (b / bad-07)) :arg1-of (e2 / easy-05))))) :snt2 (o2 / obligate-01 :arg2 (s2 / say-01 :arg0 (i3 / i) :arg1 (t / true :polarity - :domain (t2 / this)))))
(p / prepare-01 :arg0 (a / and :op1 (p2 / person :name (n / name :op1 "Esmé" :op2 "Nussbaum") :arg1-of (s / smart-06)) :op2 (p3 / person :arg1-of (s2 / smart-06)) :op3 (p4 / person :arg0-of (s3 / serve-01 :arg2 (s4 / service :mod (f / formal :polarity -))))) :arg1 (r / report-01 :arg1 (a2 / and :op1 (l / level :arg1-of (l2 / low-04)) :op2 (l3 / level :mod (l4 / level :mod (p5 / process-01))) :location (p6 / part :part-of (c / country) :mod (t / that))) :arg1-of (c2 / cause-01 :arg0 (e / expect-01 :arg1 (s5 / stop-01 :polarity - :arg1 (a3 / and :op1 (m / money) :op2 (p7 / power) :arg0-of (g / give-01 :arg1 (a4 / and :op1 (m2 / money) :op2 (p8 / power)) :arg2 (e2 / eradication :arg1 (a5 / and)))))))) :duration (t2 / temporal-quantity :quant (N / N-A) :unit (y / year)) :time (b / before :op1 (d / describe-01 :arg1 (e3 / event) :arg2 (a6 / above :op1 (e4 / event :arg1-of (d2 / describe-01 :arg0 (a7 / and :op1 (p9 / person :arg1-of (s6 / smart-06)) :op2 (p10 / person :arg0-of (h / have-org-role-91 :arg1 (s7 / service :mod (f2 / formal :polarity -)))))))))))
(s / say-01 :arg0 (c / country :name (n / name :op1 "Russia")) :arg1 (r / reserve-01 :arg0 (c2 / country) :arg1 (r2 / right-05 :arg1 (c3 / country) :arg2 (p / protect-01 :arg0 (c4 / country) :arg1 (i / interest :arg1-of (l / legitimate-02) :poss (c5 / country)))) :purpose (p2 / protect-01 :arg0 (c6 / country) :arg1 (i2 / interest :arg1-of (l2 / legitimate-02) :poss (c7 / country)))) :arg1-of (s2 / say-01 :arg0 (g / government-organization :name (n2 / name :op1 "Ministry") :mod (f / foreign))))
(a / and :op1 (t / talk-01 :arg0 (y / you) :arg1 (s / story) :time (a2 / always)) :op2 (p / place :mod (g / great) :location-of (d / do-02 :arg1 (t2 / this)) :location (h / here)))
(p / publish-01 :arg1 (d / decree :arg1-of (p2 / publish-01 :medium (i / information :arg1-of (l / legal-02)))))
(m / multi-sentence :snt1 (s / say-01 :arg0 (p / person :arg0-of (a / author-01 :arg1 (p2 / person :name (n / name :op1 "Ferguson") :arg0-of (a2 / author-01 :arg1 (f / feminist)) :arg0-of (a3 / author-01 :arg1 (f2 / feminist))))) :arg1 (v / vulnerable :degree (m2 / more :degree (m3 / much)) :domain (p3 / person :arg0-of (a4 / author-01 :arg1 (f3 / feminist)) :arg0-of (a5 / author-01 :arg1 (f4 / feminist))))) :snt2 (c / contrast-01 :arg1 (v2 / vulnerable :degree (m4 / more :degree (m5 / much)) :domain (m6 / man :mod (y / young) :location (c2 / country :name (n2 / name :op1 "United" :op2 "States")))) :arg2 (e / express-01 :arg0 (r / remark-01 :arg0 (p4 / person :name (n3 / name :op1 "Stein")) :topic (p5 / person :name (n4 / name :op1 "Ferguson"))) :arg1 (e2 / express-01 :arg0 (p6 / person) :time (p7 / previous)))))
(m / multi-sentence :snt1 (t / that :mod (a / all)) :snt2 (' / '' :mode (e / expressive)))
(p / provide-01 :arg1 (t / thing :instrument-of (s / subsidize-01)) :arg2 (l / limit-01 :arg1 (f / fund-01 :arg0 (f2 / federal) :arg1 (a / and :op1 (c / communicate-01) :op2 (o / organization :name (n / name :op1 "Mass" :op2 "Media" :op3 "Ministry"))))))
(p / plan-01 :arg1 (w / work-01 :arg0 (a / and :op1 (p2 / person :arg0-of (h / have-org-role-91 :arg1 (s / session :ord (o / ordinal-entity :value 3)))) :op2 (l / list :mod (f / final) :consist-of (i / indicators))) :purpose (m / measure-01 :arg0 (p3 / person) :arg1 (e / effective-04 :arg0 (o2 / organization :mod (s2 / science))) :mod (f2 / final))) :time (m2 / meet-03 :ord (o3 / ordinal-entity :value 3)))
(e / enter-01 :polarity - :arg0 (s / sentence-01) :arg1 (f / force-04))
(a / and :op1 (e / explain-01 :arg0 (c / country :mod (t / this)) :arg1 (r / right-05 :arg1 (u / union) :arg2 (o / organize-01))) :op2 (e2 / explain-01 :arg0 (c2 / country) :arg1 (a2 / and :op1 (r2 / right-05 :arg1 (u2 / union) :arg2 (o2 / organize-01)) :op2 (e3 / ensure-01 :arg0 (c3 / country) :arg1 (e4 / engage-01 :arg1 (u3 / union-02 :mod (t2 / this)) :arg2 (p / partner-01 :arg0 (a3 / and :op1 (c4 / corporation) :op2 (a4 / agency :mod (g / government-organization :arg0-of (g2 / govern-01)))) :mod (c5 / collective)))))) :time (c6 / country :mod (t3 / this) :topic (c7 / country :mod (o3 / other)) :topic (t4 / thing :manner-of (c8 / create-01 :arg1 (s / society :mod (c9 / civil) :mod (d / democracy))))))
(c / cheese :mod (a / any) :time (a2 / after :op1 (e / embargo-01)))
(s / say-01 :arg0 (h / he) :arg1 (p / possible-01 :polarity - :arg1 (s2 / save-02 :arg0 (i / i) :arg1 (s3 / she))))
(m / meat :mod (c / country :name (n / name :op1 "Italy")) :location (c2 / cell :mod (c3 / country :name (n2 / name :op1 "Italy"))) :duration (t / temporal-quantity :quant (N / N-A) :unit (d / day) :time-of (t2 / temperature :quant (1 / 1-2))))
(c / contrast-01 :arg2 (c2 / come-01 :arg1 (p / person :arg0-of (t / teach-01)) :arg4 (w / work-01) :time (d / date-entity :month 1 :day (N / N-A))))
(h / hard-02 :arg1 (u / understand-01 :arg1 (a / appeal-02 :arg2 (o / obligate-01 :arg2 (w / watch-01 :arg1 (g / game))))) :arg1-of (c / cause-01 :arg0 (h2 / hard-02 :arg1 (u2 / understand-01 :arg1 (a2 / appeal :arg1 (g2 / game))) :arg1-of (i / instead-of-91 :arg2 (t / take-01 :arg1 (g3 / game))))))
(s / see-01 :arg0 (y / you) :arg1 (p / person :mod (t / this) :arg0-of (h / have-rel-role-91 :arg2 (p2 / patient))) :frequency (t2 / time :quant (a / all)))
(a / and :op1 (o / occupy-01 :arg0 (p / person :quant (s / some) :arg0-of (o2 / occupy-01 :arg1 (m / movement-07))) :arg1 (c / center)) :op2 (s2 / say-01 :arg0 (p2 / person) :arg1 (d / demonstrate-01 :arg0 (d2 / demonstrate-01 :arg0 (p3 / person)) :arg1 (r / risk-01 :arg0 (p4 / person) :arg2 (b / business :poss (c2 / city :name (n / name :op1 "Hong" :op2 "Kong")))))))
(c / cause-01 :arg0 (f / fish :mod (w / wild) :domain (i / it)) :arg1 (f2 / fatty :polarity - :arg1 (t / they) :degree (e / equal) :compared-to (s / salmon :arg1 (t2 / they))))
(a / and :op2 (s / succeed-01 :arg1 (i / it)))
(m / multi-sentence :snt1 (s / speak-01 :manner (s2 / strict)) :snt2 (c / contrast-01 :arg1 (s3 / substance :quant 1 :domain (t / this)) :arg2 (g / group :consist-of (m2 / mineral :quant 6) :domain (t2 / this))))
(a / and :op1 (p / publish-01 :arg1 (p2 / product :name (n / name :op1 "Twitter"))) :op2 (b / become-01 :arg1 (v / vitamin) :arg2 (? / ???????? :arg1 (a2 / and :op1 (c / company :name (n2 / name :op1 "Facebook")) :op2 (p3 / product :name (n3 / name :op1 "Twitter"))))))
(s / suggest-01 :arg0 (p / person :name (n / name :op1 "Yevgeny" :op2 "Roizman") :arg0-of (h / have-org-role-91 :arg1 (p2 / person :name (n2 / name :op1 "Alexander" :op2 "Kosintsev") :arg0-of (h2 / have-org-role-91 :arg2 (d / deputy))) :arg2 (m / mayor :mod (d2 / deputy)))) :arg1 (r / resign-01 :arg0 (p3 / person) :arg1 (p4 / person :arg0-of (h3 / have-org-role-91 :arg1 (c / city) :arg2 (m2 / mayor)) :arg0-of (r2 / resign-01 :arg1 (p5 / person)))) :time (d3 / date-entity :month 7 :day 24) :location (l / location :name (n3 / name :op1 "Yekaterinburg" :op2 "City" :op3 "Duma")))
(s / say-01 :arg1 (a / and :op1 (f / fall-01 :arg1 (m / missile) :arg4 (s2 / sea :location (r / relative-position :op1 (c / country :name (n / name :op1 "Japan")) :direction (s3 / sea)))) :op2 (f2 / fly-01 :arg1 (m2 / missile) :destination (r2 / relative-position :op1 (d / distance-quantity :quant (N / N-A) :unit (k / kilometer))))) :arg2 (o / organization :name (n2 / name :op1 "Joint" :op2 "Chiefs" :op3 "of" :op4 "Staff") :part-of (c2 / country :name (n3 / name :op1 "South" :op2 "Korea"))))
(s / say-01 :arg0 (a / and :op1 (o / organization :name (n / name :op1 "Carnival")) :op2 (o2 / organization :name (n2 / name :op1 "Royal" :op2 "Caribbean" :op3 "Cruises")) :op3 (c / cruise :mod (n3 / norwegian))) :arg1 (p / passenger :mod (c2 / cruise) :arg1-of (i / include-91 :arg2 (p2 / passenger :mod (c3 / cruise) :location (c4 / continent :name (n4 / name :op1 "North" :op2 "America"))) :arg3 (p3 / percentage-entity :value (p4 / percentage-entity :value (m / multiple :op1 82))))) :arg1-of (s2 / say-01 :arg0 (d / document :mod (r / register-02)) :arg1-of (c5 / cause-01 :arg0 (o3 / offer-01 :arg0 (p5 / public) :arg1 (s3 / share :arg0-of (b / bridge-01))) :ord (o4 / ordinal-entity :value 1))))
(s / state-01 :arg0 (p / person :name (n / name :op1 "Merkel") :arg0-of (h / have-org-role-91 :arg1 (o / organization :name (n2 / name :op1 "Bundestag")))) :arg1 (s2 / state-01 :arg0 (g / government-organization :arg0-of (g2 / govern-01)) :arg1 (i / issue-02 :mod (t / this))) :time (d / date-entity :month 9 :day 1))
(a / and :op1 (s / study-01 :arg0 (u / university :name (n / name :op1 "University" :op2 "of" :op3 "California") :poss (u2 / university :name (n2 / name :op1 "University" :op2 "of" :op3 "California")) :location (p / peninsula :name (n3 / name :op1 "N-A")))) :op2 (i / impact-01 :arg0 (a2 / astrophysics) :arg1 (h / homogeneity :mod (c / chemical) :location (f / flocks :mod (s2 / star)))))
(t / tell-01 :arg0 (p / person :name (n / name :op1 "Greco") :arg0-of (m / make-01 :arg1 (p2 / propose-01) :time (m2 / month :mod (l / last)))) :arg1 (d / disgust-01 :arg0 (i / it)))
(s / say-01 :arg1 (o / oblige-02 :polarity - :arg1 (i / i) :arg2 (a / answer-01 :arg0 (i2 / i))) :arg2 (p / person :name (n / name :op1 "Esmé" :op2 "Nussbaum")))
(i / involve-01 :arg1 (p / person :quant (s / some) :arg1-of (i2 / include-91 :arg2 (t / they))) :arg2 (m / measure-02 :arg1 (d / detect-01 :arg1 (c / corrupt-01) :arg1-of (a / aim-02 :arg2 (p2 / person :arg1-of (e / employ-01 :arg0 (g / government-organization :arg0-of (g2 / govern-01))) :arg2-of (i3 / include-01 :arg1 (p3 / person :quant 4 :arg0-of (h / have-org-role-91 :arg1 (g3 / government-organization :arg0-of (g4 / govern-01)) :arg2 (m2 / minister)))))))) :time (d2 / date-entity :month 12))
(s / say-01 :arg0 (p / person :arg0-of (s2 / survive-01) :arg0-of (s3 / survive-01 :arg1 (p2 / person))) :arg1 (g / go-02 :polarity - :arg0 (p3 / person) :arg4 (w / war) :condition (k / know-01 :arg0 (p4 / person) :arg1 (s4 / situation :mod (a / actual) :domain (s5 / situation :location (c / country :name (n / name :op1 "Ukraine")))))))
(r / realize-01 :arg0 (i / i) :arg1 (o / obligate-01 :arg1 (i2 / i) :arg2 (a / and :op1 (g / go-out-17 :arg0 (i3 / i)) :op2 (d / deal-01 :arg0 (i4 / i) :arg2 (h / he)))) :time (t / then))
(s / say-01 :arg1 (a / and :op1 (a2 / admit-01 :arg0 (i / i) :arg1 (c / crime-02 :arg1 (p / person :mod (c2 / country :name (n / name :op1 "N-A")))) :li 260) :op2 (a3 / admit-01 :arg0 (i2 / i) :arg1 (c3 / crime-02 :arg1 (p2 / person :mod (c4 / country :name (n2 / name :op1 "N-A")))) :time (b / before :op1 (n3 / now) :quant (l / long :arg1-of (l2 / long-03))) :time (b2 / before :op1 (n4 / now) :quant (l3 / long :arg1-of (l4 / long-03)))) :op3 (u / up :arg0 (c5 / construct-01 :quant 3000 :mod (? / ????????)) :arg1 (o / onions))) :arg2 (?2 / ???????? :mod (c6 / classic) :mod (c7 / classic)))
(a / and :op1 (r / remove-01 :arg1 (t / thing :arg2-of (m / moisturize-01)) :time (l / late :degree (m2 / more))) :op2 (f / follow-01 :arg1 (t2 / thing :quant 1) :arg2 (p / person :name (n / name :op1 "Perry") :arg0-of (a2 / account-01 :arg1 (r2 / record :mod (t3 / this))))))
(c / contrast-01 :arg1 (a / and :op1 (f / fall-01 :polarity - :arg1 (a2 / account :mod (t / this)) :arg4 (s / system :arg0-of (i / insure-02 :arg1 (d / deposit))) :mod (a3 / also)) :op2 (h / have-03 :polarity - :arg0 (e / exist-01 :arg1 (a4 / account)) :arg1 (c2 / concept :mod (i2 / insurance))) :mod (a5 / also)) :arg2 (h2 / have-03 :polarity - :arg0 (a6 / account :poss (a7 / account))))
(c / contrast-01 :arg1 (w / want-01 :arg0 (h / he) :arg1 (s / say-01 :arg0 (h2 / he) :arg1 (j / joke-01 :arg2 (j2 / joke-01)))) :arg2 (w2 / want-01 :polarity - :arg0 (h3 / he) :arg1 (p / press :topic (m / mouth :part-of (h4 / he)) :prep-with (f / finger :quant 2)) :time (w3 / want-01 :polarity - :arg0 (h5 / he) :arg1 (p2 / press :domain (i / it)))))
(a / and :op1 (t / take-01 :arg0 (k / knowingly :name (n / name :op1 (d / duo))) :arg1 (n2 / name :poss (h / he)) :time (u / until :op1 (t2 / then)) :arg1-of (c / cause-01 :arg0 (d2 / do-02 :arg0 (k2 / knowingly) :arg1 (m / metallists :mod (h2 / hairy :degree (q / quite)))))) :op2 (u2 / understand-01 :arg1 (a2 / and :op1 (t3 / thing :arg1-of (t4 / think-01 :arg0 (t5 / they))) :op2 (b / blood :mod (b2 / blood :mod (a3 / amr-unknown))) :location (v / veins :poss (t6 / they)) :mod (t7 / too))))
(o / option :domain (o2 / option :mod (g / good)) :condition (d / do-02 :polarity - :arg0 (y / you) :arg1 (o3 / or :op1 (n / note) :op2 (d2 / damage-01) :poss (p / person :mod (o4 / other)))))
(g / grant-01 :arg0 (g2 / generation :consist-of (p / person :mod (c / country :name (n / name :op1 "N-A")))) :arg1 (p2 / position-02 :arg0 (w / we) :mod (b / basic) :topic (r / right :mod (h / human))) :arg2 (w2 / we))
(m / multi-sentence :snt1 (c / cause-01 :arg0 (r / reduce-01 :arg1 (n / number :quant-of (n2 / number :quant-of (n3 / number :quant-of (h / house-owners))) :mod (e / exceptional))) :arg1 (p / possible-01 :arg1 (l / lead-03 :arg0 (r2 / reduce-01 :arg1 (n4 / number :quant-of (p2 / person :arg0-of (h2 / have-org-role-91 :arg2 (c2 / center :mod (g / gardening))))) :mod (e2 / exceptional)) :arg2 (t / temporal-quantity :quant (N / N-A) :unit (y / year))))) :snt2 (s / say-01 :arg0 (a / analyze-01 :arg1 (h3 / hta)) :arg1 (t2 / thing :arg1-of (s2 / say-01 :arg0 (o / organization :name (n5 / name :op1 "Financial" :op2 "Times"))))))
(s / say-01 :arg0 (h / he) :arg1 (c / contrast-01 :arg1 (d / duty :poss (w / we) :domain (s2 / stay-01 :arg1 (w2 / we) :accompanier (h2 / he))) :arg2 (s3 / say-01 :arg0 (h3 / he) :arg1 (d2 / display-01 :arg0 (h4 / he) :arg1 (a / applause)))))
(w / way :mod (o / only) :manner-of (e / ensure-01 :arg1 (f / fund-01 :arg1 (a / advertising :mod (a2 / advertising)))))
(a / and :op1 (h / have-03 :arg0 (h2 / he) :arg1 (o / operation :quant (s / several))) :op2 (p / possible-01 :arg1 (w / walk-01 :arg0 (h3 / he)) :concession-of (p2 / possible-01 :polarity - :arg1 (d / do-02 :arg0 (h4 / he) :arg1 (s2 / sports)))))
(p / pride-01 :arg0 (i / i) :arg2 (r / represent-01 :arg0 (i2 / i) :arg1 (a / act-02 :arg1 (e / expand-01 :arg1 (r2 / right :poss (p2 / person :arg0-of (w / work-01))))) :accompanier (t / thing :arg1-of (s / symbolize-01 :arg2 (p3 / person :name (n / name :op1 "John" :op2 "Lewis") :arg0-of (h / have-org-role-91 :arg1 (o / organization) :arg2 (a2 / activist)))))) :arg1-of (c / cause-01 :arg0 (a3 / amr-unknown)))
(b / believe-01 :arg0 (i / i) :arg1 (p / possible-01 :arg1 (s / see-01 :arg0 (w / we) :arg1 (a / and :op1 (n / number :quant-of (d / dollar :arg1-of (i2 / include-91 :arg2 (d2 / dollar)))) :op2 (c / currency :poss (c2 / country :name (n2 / name :op1 "N-A")) :arg1-of (n3 / near-02 :arg2 (l / level :quant 36 :arg1-of (i3 / include-91 :arg2 (c3 / currency :quant 36 :mod (r / ruble)))))))) :time (s2 / soon)))
(s / say-01 :arg0 (s2 / she) :arg1 (a / accuse-01 :arg0 (p / person :name (n / name :op1 "Mr" :op2 "Royzman")) :arg1 (p2 / person) :arg2 (i / involve-01 :arg1 (p3 / person) :arg2 (c / crime-02) :arg1-of (c2 / commit-02 :arg0 (p4 / person :arg0-of (h / have-rel-role-91 :arg1 (p5 / person) :arg2 (h2 / husband) :time (f / former)) :arg0-of (h3 / have-rel-role-91 :arg1 (p6 / person) :arg2 (h4 / husband) :time (f2 / former))) :arg1-of (a2 / allege-01)))))
(a / acknowledge-01 :arg0 (o / organization :name (n / name :op1 "Marks" :op2 "&" :op3 "Spencer")) :arg1 (a2 / acknowledge-01 :arg0 (o2 / organization) :arg1 (c / contact-01 :arg0 (p / person :name (n2 / name :op1 "Janis" :op2 "Ellen")) :arg1 (p2 / person) :manner (a3 / asbestos)) :mod (s / some)) :purpose (e / exemplify-01))
(a / and :op1 (b / block-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (c / country :name (n / name :op1 "United" :op2 "States")) :arg3 (j / judge-01))) :arg1 (e / enactment :poss (p2 / peninsula :name (n2 / name :op1 "N-A"))) :duration (t / temporary)) :op2 (b2 / block-01 :arg0 (p3 / person :arg0-of (s / support-01 :arg1 (p4 / person))) :arg1 (a2 / and :op1 (l / likely-01 :arg1 (c2 / close-01 :arg0 (p5 / person) :arg1 (c3 / clinics :quant 5 :mod (a3 / abortnyh)) :location (s2 / state))) :op2 (l2 / likely-01 :arg1 (c4 / close-01 :arg0 (p6 / person) :arg1 (c5 / clinics :quant 5 :mod (a4 / abortnyh) :location (s3 / state))))) :duration (t2 / temporary)) :location (c6 / country))
(s / say-01 :arg0 (p / person :name (n / name :op1 "Graham" :op2 "Abbott")))
(m / multi-sentence :snt1 (t / trigel :mode (i / interrogative) :source (r / restaurant)) :snt2 (r2 / ready-02 :mode (i2 / interrogative) :arg1 (p / person :arg1-of (i3 / include-91 :arg2 (p2 / person :mod (d / dishes)) :arg3 (h / half :quant (1 / 1/2) :mod (a / another)))) :arg2 (f / forego :arg1 (p3 / person))))
FAILED_TO_PARSE#Number of opening and closing brackets doesn't match.
(a / and :op1 (b / be-temporally-at-91 :arg1 (h / he) :arg2 (b2 / before :op1 (n / now) :quant (t / temporal-quantity :quant (N / N-A) :unit (y / year)))) :op2 (e / energetic :arg1 (h2 / he) :degree (v / very) :mod (s / still)))
(r / rate-entity-91 :arg1 (m / monetary-quantity :quant 3 :unit (d / dollar)) :arg2 (v / volume-quantity :quant (N / N-A) :unit (g / gallon)))
(a / and :op1 (c / create-01 :arg1 (m / music :poss (t / they))) :op2 (c2 / create-01 :arg1 (m2 / music :poss (t2 / they)) :arg3 (l / less :compared-to (p / person :quant (c3 / couple :op1 (c4 / couple :op1 (t3 / temporal-quantity :quant (N / N-A) :unit (y / year))))))) :arg1-of (o / obvious-01))
(m / multi-sentence :snt1 (a / and :op1 (s / say-01 :arg0 (t / they) :arg1 (a2 / and :op1 (c / concealed :arg1 (b / bathroom :poss (w / we))) :op2 (m2 / move-01 :arg1 (p / person :mod (o / old) :arg0-of (b2 / believe-01 :arg1 (h / hide-01 :arg0 (p2 / person) :arg2 (d / danger)))) :arg2 (p3 / person :name (n / name :op1 "White") :arg0-of (l / live-01 :location (h2 / here) :time (o2 / once))))))) :snt2 (b3 / be-located-at-91 :arg1 (p4 / person :mod (o3 / old) :arg0-of (b4 / believe-01 :arg1 (h3 / hide-01 :arg0 (p5 / person) :arg2 (d2 / danger)) :time (o4 / once))) :arg2 (h4 / here)))
(a / and :op1 (c / cause-01 :arg1 (t / tough-02 :arg1 (p / process-02 :arg1 (r / rehearsal)))) :op2 (r2 / read-01 :arg0 (i / i) :arg1 (t2 / temporal-quantity :quant (N / N-A) :unit (m / month)) :time (b / before :op1 (p2 / put-01 :arg0 (w / we) :arg1 (s / she) :arg2 (s2 / she)))))
(d / date-entity :month 10 :year 1976)
(f / follow-01 :arg1 (d / discover-01 :arg1 (f2 / fire-01)) :arg2 (d2 / discover-01 :arg1 (p / parachutist-firefighters :quant 4) :arg1-of (q / quick-02)))
(c / contrast-01 :arg2 (a / and :op1 (t / take-01 :arg1 (d / document) :arg3 (a2 / account) :arg1-of (c2 / cause-01 :arg0 (p / produce-01 :polarity - :arg0 (g / good :arg1-of (p2 / produce-01 :location (c3 / country :name (n / name :op1 "Russia")))) :arg1 (g2 / good :arg1-of (p3 / produce-01 :polarity - :location (c4 / country)))))) :op2 (m / make-01 :arg0 (d2 / document) :arg1 (' / '' :mod (d3 / discount) :mod ('2 / '')) :purpose (a3 / avoid-01 :arg0 (a4 / and) :arg1 (d4 / discomfort :arg1 (c5 / customer) :arg2 (c6 / customer) :arg1-of (p4 / possible-01))))))
(m / man :mod (g / good) :domain (p / person :name (n / name :op1 "Don")))
(i / intend-01 :arg0 (a / authority :mod (c / country :name (n / name :op1 "N-A"))) :arg1 (r / rob-01 :arg0 (a2 / authority) :arg1 (l / land :quant (a3 / area-quantity :quant (N / N-A) :unit (h / hectare)) :arg0-of (b / belong-01 :arg1 (a4 / authority :mod (c2 / country))))))
(u / understand-01 :arg0 (i / i) :arg1 (w / want-01 :arg0 (y / you) :arg1 (s / say-01 :arg0 (y2 / you) :arg1 (w2 / want-01 :arg0 (y3 / you) :arg1 (s2 / say-01 :arg0 (y4 / you) :arg1 (a / and :op1 (w3 / want-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (s3 / supervisor :poss (p2 / person)) :arg2 (s4 / supervisor))) :arg1 (s5 / say-01 :arg0 (p3 / person) :arg1 (a2 / anything))) :op2 (w4 / want-01 :polarity - :arg0 (p4 / person) :arg1 (s6 / say-01 :arg0 (p5 / person) :arg1 (a3 / anything)) :arg2-of (e / except-01 :arg1 (p6 / person :quant 58.5 :domain (w5 / we) :arg1-of (e2 / effective-04 :arg0 (w6 / we) :degree (e3 / equal) :compared-to (c / convince-01 :arg0 (w7 / we) :arg1 (w8 / we))))))))))) :degree (f / full))
(l / lose-02 :polarity - :arg1 (s / songs :mod (t / type :mod (t2 / this))) :time (n / no-longer) :arg1-of (c / cause-01 :arg0 (a / aggressiveness :poss (t3 / they))))
(l / lead-03 :arg0 (t / that) :arg1 (i / introduce-02 :arg1 (q / quota)) :arg2 (q2 / quota))
(a / and :op2 (t / think-01 :arg0 (p / person :name (n / name :op1 "Henry")) :arg1 (r / relation-03 :arg0 (p2 / person) :arg2 (p3 / person :arg0-of (h / have-rel-role-91 :arg1 (h2 / he) :arg2 (f / father)))) :frequency (o / often)) :time (a2 / after :op1 (d / die-01 :arg1 (p4 / person :arg0-of (h3 / have-rel-role-91 :arg1 (h4 / he) :arg2 (m / mother))))))
(k / kill-01 :arg1 (a / and :op1 (p / person :quant 66 :arg0-of (h / have-org-role-91 :arg2 (s / soldier))) :op2 (c / civilian :quant 6)) :arg2-of (i / include-01 :arg1 (p2 / person :quant 1 :arg0-of (w / work-01) :mod (c2 / country :name (n / name :op1 "N-A")))) :location (s2 / side :mod (i2 / israeli)))
(a / and :op1 (a2 / apartment :domain (g / girl :mod (p / petite))) :op2 (s / show-01 :arg0 (g2 / girl) :arg1 (f / floor :ord (o / ordinal-entity :value 2) :part-of (h / house))))
(m / multi-sentence :snt1 (s / solve-01 :arg0 (g / government-organization :arg0-of (a / administrate-01) :time (c / current)) :manner (d / differ-02)) :snt2 (d2 / declare-01 :arg2 (i / it)))
(a / about :op1 50 :domain (i / i) :mod (j / just))
(p / propose-01 :arg0 (m / ministry :mod (m2 / media :degree (m3 / mass)) :mod (m4 / media :degree (m5 / mass))) :arg1 (a / allocated :arg0 (m6 / ministry) :arg1 (a2 / and :op1 (c / company :mod (t / tv) :mod (t2 / tv)) :op2 (c2 / company :mod (r / radio) :mod (r2 / radio)) :quant (m7 / multiple :op1 250000000))))
(r / report)
(l / look-01 :mode (i / imperative) :polarity - :arg0 (y / you) :arg1 (a / and :op1 (r / return-01 :arg1 (y2 / you) :arg3 (t / they)) :op2 (w / want-01 :polarity - :arg0 (y3 / you) :arg1 (l2 / leave-15 :arg0 (y4 / you) :arg1 (t2 / they) :time (a2 / after :op1 (c / complete-01 :arg1 (t3 / they))))) :condition (c2 / contact-01 :arg0 (y5 / you) :arg1 (t4 / they) :mod (w2 / well)) :condition (c3 / contact-01 :arg0 (y6 / you) :arg1 (t5 / they) :mod (w3 / well))))
(a / and :op1 (i / intervene-01 :arg0 (i2 / intervene-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (g / government-organization :name (n / name :op1 "Kremlin")) :arg2 (s / secretary :mod (p2 / press))))) :arg1 (d / decide-01 :arg0 (p3 / person :arg0-of (l / lead-02 :arg1 (c / country :name (n2 / name :op1 "N-A")))) :arg1 (b / behave :arg0 (p4 / person) :arg1 (p5 / person :arg0-of (l2 / lead-02 :arg1 (c2 / country))) :arg2 (b2 / behave :arg0 (p6 / person) :arg1 (p7 / person :arg0-of (l3 / lead-02 :arg1 (c3 / country))) :arg1-of (r / relate-01 :arg2 (u / uprising :mod (s2 / separatist))))))) :op2 (o / open-01 :arg1 (m / majority :arg3-of (i3 / include-91 :arg1 (p8 / population :quant 2000000) :arg3 (m2 / majority)))))
(p / possible-01 :arg1 (f / find-01 :arg1 (e / edition :mod (o / old)) :frequency (o2 / often) :arg1-of (c / cause-01 :arg0 (c2 / cost-01 :arg1 (e2 / edition :mod (l / last)) :arg2 (f2 / fraction :mod (s / small :degree (v / very)))))) :prep-in (c3 / case :mod (s2 / such)))
(k / know-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (c / company :name (n / name :op1 "Abbott")))) :arg1 (p2 / pain-01 :arg0 (s / shell :location (a / around :op1 (l / lungs)))))
(a / appoint-01 :arg0 (p / person :name (n / name :op1 "Charles" :op2 "Makneyr")) :arg1 (p2 / person :mod (r / royal) :mod (r2 / royal) :arg0-of (a2 / appoint-01 :arg1 (p3 / person) :arg2 (t / thing :arg2-of (m / moisturize-01)))) :arg2 (l / lawyer))
(d / deal-01 :arg0 (p / person :arg1-of (c / capture-01) :arg0-of (h / have-org-role-91 :arg2 (m / militant))) :arg2 (p2 / person :arg0-of (h2 / have-org-role-91 :arg2 (m2 / militant)) :arg1-of (c2 / capture-01)) :location (r / region :mod (l / location :name (n / name :op1 "Donetsk"))))
(c / contrast-01 :arg1 (d / differ-02 :arg1 (p / project :time (p2 / present)) :mod (m / main)) :arg2 (e / explain-01 :arg0 (p3 / person :arg0-of (h / have-org-role-91 :arg2 (m2 / minister))) :arg1 (c2 / contrast-01 :arg1 (h2 / have-03 :arg0 (c3 / car) :arg1 (c4 / car :arg1-of (r / reach-01 :arg0 (c5 / car)) :mod (o / only :polarity -)) :time (n / now)) :arg2 (s / suppose-02 :arg1 (o2 / opportunity) :arg2 (a / age-01 :arg1 (c6 / car) :arg2 (t / temporal-quantity :quant (N / N-A) :unit (y / year))) :time (n2 / now) :purpose (g / get-01 :arg0 (c7 / car) :arg1 (p4 / person :arg0-of (d2 / deal-02 :arg1 (c8 / car))) :arg2 (p5 / person :arg0-of (d3 / deal-02)))))))
(v / visit-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg2 (p2 / president))) :arg1 (p3 / person :name (n / name :op1 "Reuven" :op2 "Rivlin") :arg1-of (n2 / near-02 :arg2 (b / border-01 :arg1 (p4 / person) :arg2 (c / country-region :name (n3 / name :op1 "Gaza" :op2 "Strip"))))) :purpose (e / express-01 :arg0 (p5 / person) :arg1 (s / support-01 :arg0 (p6 / person))))
(s / state-01 :arg0 (c / comment-01 :arg0 (o / organization :name (n / name :op1 "Duma") :arg0-of (h / head-01 :arg1 (o2 / organization :name (n2 / name :op1 "Duma" :op2 "Committee") :part-of (o3 / organization :name (n3 / name :op1 "Duma" :op2 "Committee")) :topic (p / policy :topic (i / information))) :mod (d / deputy) :ord (o4 / ordinal-entity :value 1)))) :arg1 (s2 / see-01 :arg0 (p2 / person :name (n4 / name :op1 "Leonid" :op2 "Levin")) :arg1 (p3 / problem :polarity - :topic (p4 / postponement :arg1 (e / enter-01 :arg0 (l / law :topic (p5 / protect-01 :arg1 (d2 / data) :arg1-of (p6 / personal-02))))))) :time (t / today))
(s / say-01 :arg0 (d / data) :arg1 (s2 / seem-01 :arg1 (g / go-02 :arg0 (i / income :poss (c / country :name (n / name :op1 "N-A"))) :arg4 (a / amend-01)) :mod (a2 / also)))
(r / report-01 :arg0 (t / thing :arg1-of (r2 / report-01) :mod (t2 / this) :mod (' / '')))
(m / make-01 :arg0 (w / we) :arg1 (k / kitchen :mod (s / small)) :arg2 (w2 / we) :time (a / and :op1 (d / date-entity :time (f / former)) :op2 (d2 / date-entity :time (f2 / former))))
(g / go-02 :arg0 (h / he) :arg1 (s / skiing :location (l / location :name (n / name :op1 "French" :op2 "Alps"))) :time (e / early :op1 (d / date-entity :year (N / N-A)) :degree (m / more) :mod (j / just)))
(t / thing :quant 1 :arg1-of (i / include-91 :arg2 (t2 / thing :arg1-of (s / symbolize-01 :arg2 (b / barbarism :location (l / location :name (n / name :op1 "Beslan")))) :arg0-of (s2 / shock-01)) :degree (m / most)) :domain (p / photograph-01 :arg0 (h / he)))
(s / stink-01 :arg1 (p / personality) :arg1-of (c / cause-01 :arg0 (a / and :op1 (o / own-01 :arg0 (p2 / person :arg0-of (o2 / own-01 :arg1 (h / house :poss (p3 / person :name (n / name :op1 "Kagin"))))) :arg1 (h2 / house :poss (a2 / and :op1 (h3 / house :arg1-of (b / build-01 :arg0 (p4 / plant))) :op2 (g / gun :arg1-of (b2 / build-01 :arg0 (p5 / plant))) :op3 (g2 / gun :mod (t / tidal))))) :op2 (k / keep-01 :arg0 (p6 / person) :arg1 (m / mine :mod (u / ural))))) :mod (i / indeed))
(t / take-01 :arg0 (a / and :op1 (p / product :mod (m / mansion)) :op2 (p2 / product :arg2-of (s / sanction-02))) :arg1 (p3 / product-of :op1 (m2 / more-than :op1 4) :op2 (p4 / percentage-entity :quant (m3 / more-than :op1 4))) :arg1-of (g / general-02))
(r / receive-01 :arg0 (' / '' :name (n / name :op1 ('2 / '') :op2 (p / peninsula :name (n2 / name :op1 "Crimea")))) :arg1 (l / license-01 :arg1 (b / broadcast-01 :medium (t / television))) :arg2 (b2 / broadcast-01 :medium (t2 / television)))
(s / say-01 :arg0 (d / doctor :quant 1 :mod (o / only) :arg0-of (h / have-03 :arg1 (a / abort-01) :location (l / location :name (n / name :op1 "Louisiana")))) :arg1 (h2 / have-03 :arg0 (p / person :mod (r / religious-group :name (n2 / name :op1 "N-A"))) :arg1 (o2 / organization :name (n3 / name :op1 "Center" :op2 "for" :op3 "Reproductive" :op4 "Rights"))))
(s / spend-01 :arg0 (h / he) :arg1 (m / monetary-quantity :quant 120 :unit (d / dollar)))
(s / say-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg2 (p2 / president))) :arg1 (o / obligate-01 :arg2 (s2 / sozdat?predposylki :arg1 (a / and :op1 (a2 / attract-01 :arg1 (i / invest-01 :quant (m / more)) :arg2 (r / region)) :op2 (f / form-01 :arg1 (t / territory :arg1-of (r2 / relate-01 :arg2 (d / develop-02 :arg1-of (a3 / advanced-02))))) :op3 (c / compete-02 :arg1 (t2 / territory) :arg3 (c2 / center :mod (b / business) :arg1-of (k / key-02) :location (r3 / region :mod (w / world-region :name (n / name :op1 "Asia-Pacific")))))))))
(s / show-01 :arg0 (p / person :arg0-of (l / lead-02 :arg1 (p2 / person :arg0-of (l2 / lead-02)))) :arg1 (e / exemplify-01 :arg0 (a / and :op1 (b / behave-01 :arg0 (m / man) :arg1 (c / courtesy) :mod (j / just)) :op2 (p3 / plan-01 :arg0 (m2 / man) :arg1 (a2 / age :mod (o / old) :mod (o2 / old)) :location (s2 / society :arg1-of (h / high-02))))))
(c / contrast-01 :arg2 (l / link-01 :polarity - :arg0 (c2 / company :name (n / name :op1 "Abbott")) :arg1 (i / it) :arg2 (c3 / case :poss (h / he)) :time (t / then :mod (e / even))))
(m / multi-sentence :snt1 (c / contrast-01 :arg1 (s / sell-01 :arg1 (g / good :arg1-of (s2 / sell-01)) :arg2 (p / percentage-entity :value (N / N-A)) :mod (s3 / still)) :arg2 (p2 / possible-01 :arg1 (b / bring-01 :arg1 (i / initiative :mod (t / this)) :arg2 (a / abroad) :mod (s4 / still)))) :snt2 (c2 / contrast-01 :arg1 (p3 / possible-01 :arg1 (b2 / bring-01 :arg1 (i2 / initiative :mod (t2 / this)) :arg2 (a2 / abroad))) :arg2 (s5 / step-01 :arg1 (d / direction :mod (t3 / this)) :arg1-of (s6 / significant-02))))
(c / contrast-01 :arg2 (s / say-01 :arg0 (c2 / confusion :mod (t / this)) :arg1 (a / and :op1 (m / mess-up-02 :polarity - :arg0 (a2 / and :op1 (i / individual) :op2 (p / part :mod (o / other) :part-of (b / body)) :op3 (p2 / part :mod (o2 / other))) :arg1 (p3 / problem :polarity -)) :op2 (p4 / problem :domain (a3 / and :op1 (p5 / part :mod (o3 / other)) :op2 (p6 / part :mod (o4 / other)) :op3 (p7 / part :mod (o5 / other)) :op4 (p8 / problem :polarity - :mod (o6 / only :polarity -)))))))
(m / multi-sentence :snt1 (c / conduct-01 :arg0 (h / he) :arg1 (s / study-01 :arg0 (p / person :arg0-of (s2 / suggest-01 :arg1 (t / that)) :arg0-of (s3 / suggest-01 :arg1 (p2 / percentage :arg1-of (s4 / significant-02 :arg1-of (p3 / possible-01 :polarity -))))))) :snt2 (l / likely-01 :arg1 (c2 / cause-01 :arg1 (c3 / caused :arg1 (a / asbestos :arg1 (e / environment))))))
(u / up :arg1 (h / he) :arg2 (p / push-01) :arg1-of (r / resemble-01 :arg2 (m / man :mod (o / old))))
(m / multi-sentence :snt2 (' / ''))
(m / multi-sentence :snt1 (d / design-01 :arg1 (p / problem :mod (a / another) :arg1-of (d2 / design-01 :arg3 (p2 / person :quant 1))) :arg3 (p3 / person :quant 1)) :snt2 (p4 / possible-01 :arg1 (r / recipes :arg0 (a2 / and :op1 (c / control-01 :arg1 (a3 / angle :mod (a4 / alone))) :op2 (c2 / control-01 :arg1 (a5 / angle))) :arg1 (r2 / right :prep-for (h / headache)))))
(h / hope-01 :arg0 (c / country :name (n / name :op1 "India")) :arg1 (a / agree-01 :arg1 (c2 / cooperate-01 :arg0 (c3 / country :quant 2) :arg2 (d / defend-01))) :arg1-of (r / report-01) :mod (a2 / also))
(a / animal :domain (p / passion :poss (i / i) :ord (o / ordinal-entity :value 2)) :arg0-of (c / cause-01 :arg1 (g / go-02 :arg0 (i2 / i) :arg4 (p2 / province :name (n / name :op1 "N-A") :mod (v / veterinary)))))
FAILED_TO_PARSE#Number of opening and closing brackets doesn't match.
(u / use-01 :arg0 (g / government-organization :arg0-of (a / administrate-01 :arg1 (r / region)) :time (p / previous)) :arg1 (b / building :mod (t / this)) :arg2 (w / we) :time (a2 / after :op1 (r2 / recognizing :arg0 (g2 / government-organization) :arg1 (m / merits :poss (w2 / we)) :arg2 (s / signal-07 :arg1 (r3 / respect-01 :arg1 (n / narcotic))))))
(m / multi-sentence :snt1 (l / look-01 :polarity - :arg0 (h / he) :arg1 (r / revenge)) :snt2 (e / exemplify-01 :arg0 (f / fixated :polarity - :arg1 (h2 / he) :time (p / past))))
(a / and :op1 (p / place-01 :arg1 (t / thing :arg2-of (m / mask-01)) :arg2 (t2 / thing :arg2-of (m2 / mask-01)) :mod (o / only)) :op2 (d / deprived :arg1 (s / space :mod (a2 / all) :arg1-of (r / remain-01) :arg1-of (r2 / remain-01)) :arg2 (s2 / sunlight) :mod (e / even)) :location (a3 / above :op1 (e2 / earth)))
(u / use-01 :arg1 (l / location :name (n / name :op1 "Asbest")) :arg2 (a / and :op1 (o / office) :op2 (s / shop) :op3 (l2 / libraries) :op4 (m / meriyakh)) :arg1-of (c / cause-01 :arg0 (a2 / and :op1 (a3 / amaze-01 :arg1 (t / they) :mod (a4 / amazing)) :op2 (t2 / thing :arg2-of (c2 / characteristic-02 :arg1 (t3 / they))))) :frequency (o2 / often))
(t / think-01 :arg0 (h / he) :arg1 (d / die-01 :arg1 (s / she)) :time (a / after :quant (m / multiple :op1 1)))
(s / say-01 :arg0 (m / magazine :name (n / name :op1 "N-A")) :arg1 (a / and :op1 (l / lose-02 :arg0 (a2 / and :op1 (p / person :arg0-of (h / have-rel-role-91 :arg1 (p2 / person :arg0-of (h2 / have-rel-role-91 :arg2 (e / enemy))) :arg2 (e2 / enemy))) :op2 (p3 / person :arg0-of (h3 / have-rel-role-91 :arg1 (p4 / person) :arg2 (e3 / enemy))) :op3 (p5 / person :arg0-of (h4 / have-rel-role-91 :arg1 (p6 / person) :arg2 (e4 / enemy))) :op4 (p7 / person :arg0-of (h5 / have-rel-role-91 :arg1 (p8 / person) :arg2 (e5 / enemy))) :op5 (p9 / person :quant (m2 / more-than :op1 120))) :arg1 (p10 / person :arg1-of (k / kill-01))) :op2 (w / wound-01 :arg0 (l2 / lose-02) :arg1 (p11 / person :quant (m3 / more-than :op1 120))) :op3 (w2 / wound-01 :arg0 (l3 / lose-02) :arg1 (p12 / person :quant (m4 / more-than :op1 120)))))
(e / exemplify-01 :arg0 (s / serve-01 :arg1 (s2 / sell-01 :arg1 (c / coupons :example (o / or :op1 (g / groupon) :op2 (v / vigoda.ru))))) :mod (c2 / classic))
(s / say-01 :arg0 (p / person :name (n / name :op1 "Maxim" :op2 "Liksutov")) :arg1 (i / introduce-02 :arg1 (p2 / parking :arg1 (p3 / person :arg0-of (h / have-org-role-91 :arg2 (c / capital))))) :mod (a / also))
(r / recommend-01 :arg1 (a / and :op1 (s / shut-down-05 :arg1 (p / person :mod (c / country :name (n / name :op1 "France")))) :op2 (p2 / put-01 :arg0 (p3 / person) :arg1 (c2 / country) :arg2 (c3 / country))) :arg2 (s2 / say-01 :arg0 (p4 / person) :arg1 (a2 / ally-01 :arg1 (p5 / person) :arg2 (p6 / person :name (n2 / name :op1 "Frasua") :arg1-of (a3 / ally-01 :arg2 (p7 / person :name (n3 / name :op1 "Frasua"))) :arg1-of (k / key-02)))))
(p / possible-01 :arg1 (p2 / participate-01 :arg0 (f / filmmakers :arg1-of (l / local-02)) :arg1 (a / and :op1 (c / class :mod (m / master)) :op2 (f2 / festival :location (a2 / and :op1 (t / theater) :op2 (c2 / cinema))))))
(a / and :op1 (p / plead-02 :polarity - :arg0 (p2 / person :name (n / name :op1 "Perry")) :arg1 (g / guilty-01 :arg1 (p3 / person))) :op2 (c / charge-05 :arg1 (p4 / person) :arg2 (c2 / charge-05 :arg1 (p5 / person) :mod (p6 / politics))))
(a / and :op1 (w / woman :mod (w2 / white) :domain (n / need-01)) :op2 (c / confirm-01 :arg0 (w3 / woman :mod (w4 / white)) :arg1 (s / story) :purpose (j / justify-01 :arg0 (w5 / woman) :arg1 (l / lynching :arg1 (l2 / lynching)))))
(d / detalizirovat?sâ :arg1 (d2 / document) :mod (s / still) :purpose (a / avoid-01 :arg0 (d3 / document) :arg1 (d4 / discomfort :arg1 (d5 / document) :arg2 (p / person :arg0-of (b / buy-01)))))
(a / and :op1 (s / subject-01 :arg1 (h / house :poss (p / person :arg0-of (h2 / have-org-role-91 :arg2 (c / capital)))) :arg2 (c2 / capital)) :op2 (r / rise-01 :arg1 (t / thing :arg2-of (p2 / price-01) :arg1-of (r2 / rise-01) :arg1-of (r3 / rise-01)) :manner (r4 / rapid)) :arg1-of (c3 / cause-01 :arg0 (f / fear-01 :arg1 (p3 / push-01 :arg0 (b / bubble :mod (c4 / credit)) :arg1 (o / organization :name (n / name :op1 "Bank" :op2 "of" :op3 "England")) :arg2 (e / ensure-01 :arg0 (o2 / organization) :arg1 (l / limit-01 :arg1 (l2 / limit-01 :arg1 (l3 / loan-01 :mod (m / mortgage-01)) :location (j / june))))) :arg1-of (w / wide-02))))
(s / state-01 :arg0 (w / we :arg0-of (h / have-org-role-91 :arg2 (d / director :mod (e / executive)))) :arg1 (c / choose-01 :arg0 (w2 / we) :arg1 (o / organization :name (n / name :op1 "Amazon")) :arg1-of (c2 / cause-01 :arg0 (a / and :op1 (b / believe-01 :arg0 (w3 / we) :arg1 (c3 / community :poss (w4 / we)) :arg1-of (c4 / cause-01 :arg0 (b2 / believe-01 :arg0 (w5 / we) :arg1 (c5 / community :poss (w6 / we))))) :op2 (s2 / share-01 :arg0 (w7 / we) :arg1 (a2 / and :op1 (v / value :poss (w8 / we)) :op2 (o2 / objective :arg1-of (l / long-03))))))) :op3 (w9 / want-01 :arg0 (t / they) :arg1 (h2 / help-01 :arg0 (t2 / they) :arg1 (g / get-05 :arg1 (w10 / we) :arg2 (t3 / there) :manner (f / fast :degree (m / more))))))
(r / remove-01 :polarity - :arg1 (i / institution :mod (? / ??????)) :arg2 (m / menu :arg1 (c / cuisine :arg1-of (s / single-02))) :time (y / yet))
(s / say-01 :arg0 (c / change-01 :mod (s2 / such)) :arg1 (c2 / contribute-01 :arg0 (i / initiative) :arg2 (a / and :op1 (r / rapid :degree (m / more)) :op2 (e / ensure-01 :arg1 (r2 / right-05 :arg1 (c3 / citizen :poss (c4 / country :name (n / name :op1 "Russian" :op2 "Federation"))) :arg2 (s3 / safe-01 :arg1 (a2 / and :op1 (d / data :mod (d2 / data :arg1-of (p / personal-02))) :op2 (s4 / secrecy :location (n2 / network :mod (i2 / informational-telecommunication))))))) :arg0-of (e2 / effective-04))))
(m / multi-sentence :snt1 (a / apply-02 :arg1 (t / this) :arg2 (g / good :arg1-of (p / produce-01 :polarity - :location (c / country :name (n / name :op1 "Russia"))))) :snt2 (a2 / and :op1 (n2 / need-01 :arg0 (p2 / person :arg0-of (r / retail-01)) :arg1 (p3 / provide-01 :arg0 (p4 / person) :arg1 (t2 / thing :arg1-of (i / include-91 :arg2 (p5 / product :arg0-of (p6 / produce-01 :arg1 (p7 / product)) :mod (d / domestic))) :quant (a3 / at-least :op1 (1 / 1/2)))) :arg2 (g2 / group :mod (o / other) :consist-of (p8 / product) :arg1-of (p9 / produce-01 :location (c2 / country)))) :op2 (s / say-01 :arg0 (p10 / person) :arg1 (n3 / need-01 :arg0 (p11 / person :arg0-of (r2 / retail-01)) :arg1 (p12 / provide-01 :arg0 (p13 / person) :arg1 (t3 / thing :arg1-of (i2 / include-91 :arg2 (p14 / product :arg0-of (p15 / produce-01 :arg1 (p16 / product))))))))))
(p / possible-01 :polarity - :arg1 (b / believe-01 :arg0 (i / i) :arg1 (i2 / it)))
FAILED_TO_PARSE#Number of opening and closing brackets doesn't match.
(a / agree-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg2 (c / commander))) :arg1 (w / write-01 :arg0 (p2 / person) :arg1 (c2 / care-01 :arg0 (p3 / person)) :time (a2 / already)) :arg2 (p4 / person :arg0-of (h2 / have-org-role-91 :arg2 (c3 / commander))) :time (a3 / already))
(s / say-01 :arg0 (s2 / she) :arg1 (a / and :op1 (u / understand-01 :arg0 (s3 / she) :arg1 (c / capable-01 :polarity - :arg1 (i / it) :arg2 (w / walk-01 :arg0 (i2 / it)))) :op2 (a2 / ask-01 :arg0 (s4 / she) :arg1 (a3 / and :op1 (c2 / capable-01 :arg1 (i3 / it) :arg2 (w2 / walk-01 :arg0 (i4 / it))) :op2 (a4 / ask-01 :arg0 (s5 / she) :arg1 (d / doctor :poss (i5 / it))))) :time (c3 / carry-out-03 :arg1 (i6 / it))) :li 17)
(p / possible-01 :arg1 (s / say-01 :arg0 (h / he) :arg1 (c / contrast-01 :arg1 (l / love-01 :arg0 (i / i) :arg1 (y / you)) :arg2 (e / early :degree (t / too) :domain (i2 / i)))))
(a / and :op1 (g / go-out-17 :arg0 (m / machine :quant 18) :time (d / during :op1 (a2 / adolescence))) :op2 (c / crash-01 :arg1 (m2 / machine) :destination (p / push-01 :arg0 (p2 / person :name (n / name :op1 "Stewart")) :arg1 (c2 / car :mod (b / both)) :arg2 (w / wall))))
(f / follow-01 :arg1 (t / this) :arg2 (a / and :op1 (r / radiotherapy :arg0 (t2 / trip-03 :arg0 (p / person :name (n / name :op1 "Lange-Lazdunski"))) :arg1 (t3 / this)) :op2 (t4 / trip-03 :arg0 (p2 / person :arg0-of (h / have-rel-role-91 :arg2 (c / comrade))) :arg1 (p3 / person :quant (p4 / percentage-entity :value (N / N-A) :mod (w / whole)) :arg0-of (h2 / have-rel-role-91 :arg1 (p5 / person) :arg2 (p6 / patient))) :duration (t5 / temporal-quantity :quant (N2 / N-A) :unit (y / year)))))
(a / and :op1 (n / nahal :arg0 (p / person :arg0-of (r / reside-01) :quant (m / many) :arg0-of (r2 / reside-01)) :arg1 (v / village :arg1-of (n2 / near-02 :arg2 (b / border-01 :arg1 (p2 / person) :arg2 (c / country-region :name (n3 / name :op1 "Gaza" :op2 "Strip")))))) :op2 (d / doubt-01 :arg0 (p3 / person) :arg1 (r3 / recommend-01 :arg1 (g / go-02 :arg0 (p4 / person) :direction (b2 / back)))))
(r / resemble-01 :arg2 (h / head :part-of (i / i)))
(a / and :op1 (b / based :arg1-of (b2 / base-01 :location (l / location :name (n / name :op1 "Miami")) :mod (a2 / also)) :arg1-of (b3 / base-01 :location (l2 / location :name (n2 / name :op1 "Miami")) :mod (a3 / also)) :arg1-of (b4 / base-01 :location (l3 / location :name (n3 / name :op1 "Miami")) :mod (a4 / also)) :arg1-of (b5 / base-01 :location (l4 / location :name (n4 / name :op1 "Miami")) :mod (a5 / also)) :arg1-of (b6 / base-01 :location (l5 / location :name (n5 / name :op1 "Miami")) :mod (a6 / also))) :op2 (w / work-01 :arg1 (a7 / and :op1 (i / install-01 :arg1 (v / vessel :quant 8 :mod (c / cruise) :arg0-of (w2 / walk-01 :destination (w3 / world-region :name (n6 / name :op1 "Scandinavia"))))) :op2 (w4 / walk-01 :arg0 (a8 / and) :destination (w5 / world-region :name (n7 / name :op1 "Scandinavia"))) :op3 (w6 / walk :arg1 (a9 / and)) :op4 (c2 / continent :name (n8 / name :op1 "South" :op2 "America") :arg1 (a10 / and)) :op5 (e / et-cetera))))
(h / have-03 :arg0 (i / it) :arg1 (e / experience-01 :arg1 (w / work-01 :arg1 (p / post :arg0-of (l / lead-01)))) :mod (r / really))
(h / hear-01 :arg0 (p / person :name (n / name :op1 "Sammy" :op2 "Davis" :op3 "Jr.")) :arg1 (k / know-01 :arg0 (p2 / person :name (n2 / name :op1 "Cavern")) :arg1 (j / jazz) :source (c / cds :name (n3 / name :op1 (p3 / polycrates) :op2 (c2 / collezio)) :poss (p4 / person :arg0-of (h2 / have-rel-role-91 :arg1 (p5 / person) :arg2 (f / father))))) :concession (r / reach-01 :arg0 (p6 / person) :arg1 (a / age) :time (y / year :mod (d / date-entity :decade (N / N-A)))))
(i / introduce-01 :arg1 (s / smartphone :ord (o / ordinal-entity :value 1) :prep-with (o2 / organization :name (n / name :op1 "Samsung" :op2 "Nexus" :op3 "S") :part-of (o3 / organization :name (n2 / name :op1 "Samsung" :op2 "Nexus" :op3 "S")))) :arg2 2010 :quant 2010)
(m / multi-sentence :snt1 (l / line :mod (b / bottom) :domain (l2 / line :mod (b2 / bottom)) :frequency (o / often) :prep-with (i / injure-01 :mod (m2 / minor))) :snt2 (p / possible-01 :arg1 (c / catch-02 :arg1 (p2 / person :arg0-of (d / drive-01) :mod (' / '')) :arg2 (p3 / person :arg0-of (d2 / drive-01))) :arg0-of (c2 / cause-01 :arg1 (c3 / catch-02 :arg1 (o2 / organization :name (n / name :op1 "SDP"))))))
(a / and :op1 (i / involve-01 :arg1 (s / ship :quant 848 :arg1-of (i2 / involve-01 :arg2 (o / operation :mod (v / vital)))) :arg2 (o2 / operation :mod (v2 / vital))) :op2 (k / kill-01 :arg0 (s2 / ship) :arg1 (a2 / and :op1 (v3 / vehicle :quant 126) :op2 (c / court :quant (a3 / about :op1 126)))))
(g / go-02 :arg0 (p / person :name (n / name :op1 "Lavrentiev")) :arg4 (m / ministry :topic (c / culture :poss (p2 / peninsula :name (n2 / name :op1 "N-A")))) :purpose (l / learn-01 :arg0 (p3 / person) :arg1 (f / fate :poss (h / house))) :time (b / before :op1 (n3 / now) :quant (b2 / between :op1 (t / temporal-quantity :quant (N / N-A) :unit (y / year)) :op2 (t2 / temporal-quantity :quant (N2 / N-A) :unit (y2 / year)))))
(m / multi-sentence :snt1 (' / '' :arg0 (m2 / meet-03 :arg0 (p / person :name (n / name :op1 "Catherine" :op2 "Ashton")) :arg1 (p2 / person :name (n2 / name :op1 "Lukashenko"))) :arg1 (s / suggest-01 :arg0 (p3 / person) :arg1 (r / release-01 :arg1 (r2 / relation-03 :arg0 (p4 / person) :arg2 (o / organization :name (n3 / name :op1 "EU"))) :arg2 (o2 / organization :name (n4 / name :op1 "EU"))))) :snt2 (s2 / say-01 :arg0 (h / he) :arg1 ('2 / '' :arg1 (t / thing :arg1-of (p5 / precede-01))) :time (f / future)))
(a / and :op1 (c / continue-01 :arg1 (i / it) :arg1-of (c2 / cheap-02 :degree (m / more))) :op2 (u / update-01 :arg0 (i2 / it) :arg1 (m2 / maximum :op1 (d / dollar)) :mod (e / even)))
(r / reach-01 :arg0 (g / gusts :mod (w / wind)) :arg1 (m / mph :quant 50 :location (g2 / ground) :location (l / location :name (n / name :op1 "Adelaide" :op2 "Airport"))) :time (t / time :mod (t2 / this)))
(a / and :op1 (' / '' :arg1 (i / i) :arg2 (i2 / i)) :op2 (p / possible-01 :polarity - :arg1 (c / change-01 :arg0 (y / you) :arg1 (f / fact :mod (t / this)))))
(a / and :op1 (f / find-01 :arg0 (p / person :arg0-of (r / research-01)) :arg1 (c / confirmation :poss (p2 / person :arg0-of (h / have-org-role-91 :arg2 (p3 / person :arg0-of (r2 / research-01)))))) :op2 (a2 / and :op1 (g / get-03 :arg1 (p4 / person :arg1-of (s / strong-02 :manner (p5 / physical))) :arg2 (a3 / assault)) :op2 (g2 / go-02 :arg0 (p6 / person) :arg4 (a4 / assault)) :op3 (f2 / feel-01 :arg0 (p7 / person) :arg1 (e / entitled :arg1 (p8 / person) :arg2 (a5 / assault))) :op4 (f3 / feel-01 :arg0 (p9 / person) :arg1 (e2 / entitled :arg1 (p10 / person) :arg2 (a6 / assault))) :op4 (p11 / prefer-01 :arg0 (p12 / person) :arg1 (i / impose-01 :arg0 (p13 / person) :arg1 (c2 / condition :arg0-of (f4 / favor-01) :mod (o / other)) :purpose (r3 / resolve-01 :arg0 (p14 / person) :arg1 (c3 / conflict-01) :manner (p15 / peaceful))))))
(a / and :op1 (m / mines :arg0 (r / region :mod (c / country :name (n / name :op1 "N-A"))) :arg1 (a2 / and :op1 (l / language :name (n2 / name :op1 "N-A")) :op2 (f / factory) :op3 (p / plant :mod (m2 / melting :polarity -))) :mod (a3 / also)) :op2 (p2 / produce-01 :arg0 (a4 / and) :arg1 (e / equipment :arg1-of (n3 / need-01) :arg0-of (p3 / produce-01 :arg1 (e2 / equipment :arg1-of (n4 / need-01)) :beneficiary (a5 / army :poss (c2 / country))))))
(s / say-01 :arg0 (n / nobody) :arg1 (g / good :degree (m / more) :domain (m2 / mussels :mod (s2 / salad)) :source (l / location :name (n2 / name :op1 "Palm") :mod (n3 / new) :mod (b / brasserie))))
(h / have-03 :arg0 (t / thing :arg1-of (p / plan-01)) :arg1 (t2 / thing :arg2-of (c / copy-01 :arg1 (' / '' :name (n / name :op1 ('2 / '') :op2 (v / vedomosti))))))
(d / demonstrate-01 :arg0 (d2 / data :source (c / company :name (n / name :op1 "National" :op2 "Development" :op3 "Bank") :location (c2 / country :name (n2 / name :op1 "England"))) :arg1-of (f / fresh-04)) :arg1 (d3 / drop-01 :arg1 (m / mortgage :arg0-of (a / approve-01 :arg1 (m2 / mortgage) :time (s / subsequent))) :location (m3 / market :arg0-of (h / house-01)) :time (s2 / subsequent)))
(c / change-01 :arg1 (h / house) :time (s / since :op1 (c2 / change-01 :polarity - :arg1 (b / building :time (d / date-entity :century (N / N-A)) :ord (o / ordinal-entity :value 18)))) :condition (c3 / consider-01 :polarity - :arg1 (d2 / decrepit :domain (b2 / building))))
(c / claim-01 :arg1 (t / this) :arg1-of (c2 / cause-01 :arg0 (a / and :op1 (s / subject :poss (l / location :name (n / name :op1 "Minsk") :arg1-of (s2 / subject-01 :arg2 (p / policy :mod (c3 / continent :name (n2 / name :op1 "N-A")))))) :op2 (m / mediate-01 :arg0 (m2 / mediate-01 :arg0 (c4 / crisis :mod (c5 / country :name (n3 / name :op1 "N-A"))) :mod (b / basic))))))
(e / emphasize-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg2 (m / minister))) :arg1 (c / connect-01 :polarity - :arg1 (i / it) :arg2 (d / door) :arg1-of (c2 / cause-01 :arg0 (a / and :op1 (o / offend-03 :mod (a2 / any)) :op2 (o2 / offend-03 :mod (a3 / any)) :op3 (p2 / person :arg0-of (w / witness-01 :arg1 (i2 / i)))))))
(m / multi-sentence :snt1 (c / cause-01 :arg0 (a / amr-unknown) :arg1 (f / feel-01 :arg0 (w / we) :arg1 (t / thing :arg0-of (c2 / cause-01 :arg1 (f2 / feel-01 :arg0 (w2 / we) :arg1 (c3 / consequence :arg0-of (k / kill-01)) :time (n / now)))) :arg1-of (c4 / cause-01 :arg0 (l / law :mod (t2 / type :quant (m2 / many :op1 (t3 / temporal-quantity :quant (N / N-A) :unit (y / year)))))) :arg1-of (c5 / cause-01 :arg0 (l2 / law :mod (t4 / type :quant 1999) :mod (t5 / type :quant 1999)) :time (e / eventual)))) :snt2 (t6 / tens :arg0 (l3 / law) :duration (t7 / temporal-quantity :quant (N2 / N-A) :unit (y2 / year)) :arg1-of (t8 / typical-02)))
(a / and :op1 (a2 / achieve-01 :arg0 (a3 / and :op1 (' / '') :op2 (t / thing :arg2-of (r / result-01))) :arg1 (n / negotiate-01 :arg0 (o / organization :name (n2 / name :op1 "EU")) :arg1 (v / visa :name (n3 / name :op1 (f / facilitation))) :arg1-of (s / succeed-01))) :op2 (d / dialogues :arg0 (o2 / organization) :arg1 (a4 / and :op1 (m / modernize-01) :op2 (r2 / readmission) :op3 (l / list-01 :arg1 (o3 / organization :name (n4 / name :op1 "Ogonyok") :mod ('2 / ''))) :op4 (l2 / list-01 :arg1 (a5 / and :op1 (i / interlocutor) :op2 ('3 / ''))))))
(a / and :op1 (d / detain-01 :arg1 (h / he) :location (l / location :name (n / name :op1 "Tambov")) :time (d2 / date-entity :month 5 :day 9)) :op2 (d3 / detain-01 :arg1 (h2 / he) :location (l2 / location :name (n2 / name :op1 "Tambov")) :time (a2 / after :op1 (a3 / accident :poss (h3 / he)))))
(a / amount :quant-of (c / compensate-01) :source (r / rate-entity-91 :arg1 (m / monetary-quantity :quant 40 :unit (d / dollar)) :arg2 (v / volume-quantity :quant (N / N-A) :unit (g / gallon))) :prep-for (c2 / cargo :quant 350 :purpose (c3 / cargo)))
(g / go-02 :arg0 (p / person :name (n / name :op1 "Lavrentyev")) :arg4 (m / ministry :topic (l / location :name (n2 / name :op1 "Republic" :op2 "of" :op3 "Bashkortostan"))) :time (b / before :op1 (n3 / now) :quant (b2 / between :op1 (t / temporal-quantity :quant (N / N-A) :unit (y / year)) :op2 (t2 / temporal-quantity :quant (N2 / N-A) :unit (y2 / year)))) :purpose (l2 / learn-01 :arg0 (p2 / person) :arg1 (f / fate :poss (h / home :poss (p3 / person)))))
(h / have-org-role-91 :arg0 (p / person :name (n / name :op1 "Michael" :op2 "Mccrum")) :arg1 (l / location :name (n2 / name :op1 "San" :op2 "Antonio")) :arg2 (p2 / prosecute-01 :arg1 (p3 / person) :arg1-of (s / special-02)) :arg1-of (a / appoint-01 :arg0 (r / republican :mod (j / judge-a))))
(a / and :op1 (h / hit-01 :arg0 (t / this) :arg1 (c / confidence :arg1-of (i / increase-01) :mod (t2 / this))) :op2 (h2 / hit-01 :arg0 (t3 / this) :arg1 (c2 / confidence :mod (p / person :arg0-of (c3 / consume-01))) :mod (p2 / particular)) :op3 (c4 / contributes :arg0 (t4 / this) :arg1 (f / fact :topic (o / or :op1 (d / delay-01) :op2 (o2 / order :mod (e / even) :mod (e2 / even))))))
(r / right-05 :arg1 (t / they) :arg2 (d / dictate-01 :arg0 (t2 / they) :arg1 (t3 / term :poss (t4 / they)) :purpose (a / and :op1 (r2 / retailers :arg0 (t5 / they)) :op2 (p / price-01 :arg1 (t6 / they)))) :arg1-of (c / cause-01 :arg0 (f / force-01 :arg1 (t7 / they) :arg2 (b / buy-01 :arg0 (t8 / they) :arg1 (g / good :poss (t9 / they))))))
(c / cause-01 :arg0 (t / this) :arg1 (r / represent-01 :arg0 (i / i) :arg1 (r2 / report :topic (e / expand-01 :arg1 (r3 / right :poss (p / person :arg0-of (w / work-01))) :manner (t2 / together) :accompanier (t3 / thing :arg1-of (s / symbolize-01 :arg2 (r4 / right :mod (c2 / civil))))))))
FAILED_TO_PARSE#Number of opening and closing brackets doesn't match.
(a / and :op1 (s / sorry-01 :arg1 (i / i) :arg2 (p / person :quant (a2 / all) :arg0-of (s2 / suffer-01 :source (m / metropolis :mod (t / this)))) :degree (s3 / so)) :op2 (s4 / say-01 :arg0 (p2 / person) :arg1 (p3 / person :name (n / name :op1 "Damir") :arg0-of (s5 / suffer-01 :arg1 (w / work-01 :arg1-of (v / volunteer-01)) :time (w2 / week :mod (l / last)) :location (c / convent)))))
(s / start-01 :arg1 (t / tournaments :mod (h / humanitarian) :quant (s2 / series)) :time (a / after :op1 (n / now) :quant (c / couple :op1 (t2 / temporal-quantity :quant (N / N-A) :unit (w / week)))))
(a / agree-01 :arg0 (i / i) :arg1 (t / thing :arg1-of (r / report-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg2 (c / commander))) :time (a2 / already))) :arg2 (p2 / person :arg0-of (h2 / have-org-role-91 :arg2 (c2 / commander))) :time (a3 / already))
(a / and :op1 (a2 / accuse-01 :arg0 (p / person :name (n / name :op1 "George" :op2 "Webster")) :arg1 (r / rape-01 :location (h / hotel)) :arg2 (l / location :name (n2 / name :op1 "Neyrne"))) :op2 (p2 / pitlochry :arg0 (p3 / person)))
(a / and :op1 (p / position-01 :arg1 (w / woman :arg1-of (b / black-05)) :arg2 (p2 / position-01 :arg1 (w2 / woman) :arg2 (i / issue-02 :mod (t / this)) :arg1-of (c / clear-06))) :op2 (c2 / confront-01 :arg0 (w3 / woman) :arg1 (r / reality :mod (d / difficult)) :frequency (r2 / rate-entity-91 :arg3 (t2 / temporal-quantity :quant (N / N-A) :unit (d2 / day)))))
(m / multi-sentence :snt1 (p / possible-01 :arg1 (d / do-02 :arg1 (s / sushi :arg1-of (s2 / same-01)) :arg2 (f / fish :poss (w / we)))) :snt2 (g / goryachitsya :arg0 (h / he)))
(o / obligate-01 :arg1 (h / he) :arg2 (t / think-01 :arg0 (h2 / he) :arg1 (l / location :arg4-of (c / come-01 :arg1 (h3 / he) :arg4 (c2 / contact-01 :arg0 (h4 / he) :arg1 (h5 / he))))) :manner (s / strict))
(s / say-01 :arg0 (h / he) :arg1 (d / difficult :domain (o / obligate-01 :arg2 (i / institution :mod (i2 / institution)))))
(o / outstanding :polarity - :domain (s / situation) :topic (o2 / or :op1 (p / person :mod (n / new) :arg0-of (r / represent-01 :arg1 (a / and :op1 (p2 / person :name (n2 / name :op1 "Lana" :op2 "Del" :op3 "Rey")) :op2 (p3 / person :arg0-of (r2 / represent-01 :arg1 (p4 / person :mod (c / country :name (n3 / name :op1 "N-A")))) :arg0-of (r3 / represent-01 :arg1 (a2 / and :op1 (p5 / person :arg0-of (p6 / play-01 :arg1 (l / level :mod (t / that)))) :op2 (p7 / person :arg0-of (h / have-org-role-91 :arg1 (c2 / country) :arg3 (r4 / represent-01 :arg0 (p8 / person) :arg1 (c3 / country)))) :op3 (p9 / person :arg0-of (h2 / have-org-role-91 :arg1 (c4 / country) :arg3 (r5 / represent-01 :arg0 (p10 / person) :arg1 (c5 / country)))) :op4 (p11 / person :arg0-of (p12 / play-01 :arg1 (p13 / play-01 :arg0 (p14 / person) :arg2 (l2 / level :mod (t2 / that))))) :op5 (t3 / thing :arg2-of (t4 / tattoo-01 :arg1 (p15 / person) :time (b / before :op1 (n4 / now) :quant (c6 / couple :op1 (t5 / temporal-quantity :quant (N / N-A) :unit (d / decade))))))))))))))
(w / want-01 :arg0 (w2 / we) :arg1 (g / gold :mod (g2 / gold)))
(a / announce-01 :arg0 (a2 / authority :mod (c / country :name (n / name :op1 "N-A"))) :arg1 (i / intend-01 :arg0 (a3 / authority) :arg1 (j / join-01 :arg0 (a4 / authority) :arg1 (l / land :quant (a5 / area-quantity :quant (N / N-A) :unit (h / hectare)) :arg1-of (o / own-01 :arg0 (g / government-organization :name (n2 / name :op1 "Palestinian" :op2 "Authority")))))))
(m / multi-sentence :snt1 (o / organization :name (n / name :op1 "Rosneft")) :snt2 (o2 / obtain-01 :mode (i / interrogative) :arg1 (r / refinery :mod (o3 / oil)) :manner (t / together) :accompanier (a / asset :poss (o4 / organization :name (n2 / name :op1 "TNK-BP")) :mod (o5 / other))))
(a / and :op1 (c / country :name (n / name :op1 "Kenya")) :op2 (p / person :arg0-of (h / have-org-role-91 :arg1 (p2 / public) :arg2 (o / official))) :op3 (p3 / person :arg0-of (h2 / have-org-role-91 :arg1 (p4 / public) :arg2 (o2 / official))))
(c / contrast-01 :arg2 (a / and :op1 (c2 / champions :arg1 (t / tournament :time (c3 / current))) :op2 (c4 / champions :arg1 (p / person :name (n / name :op1 "Mansur" :op2 "Isaev" :op3 "Arsene")))))
(c / contrast-01 :arg1 (s / seek-01 :polarity - :arg0 (h / he) :arg1 (r / revenge)) :arg2 (f / fixated :polarity - :arg0 (h2 / he) :prep-on (n / nightmare :mod (l / last) :mod (t / this))))
(m / multi-sentence :snt1 (a / appreciate-02 :arg0 (i / i) :arg1 (g / god :arg1-of (r / return-01 :arg4 (i2 / i))) :degree (s / so)) :snt2 (l / lie-07 :arg1 (h / here :location (h2 / here)) :arg2 (e / everyone) :arg1-of (p / print-01)))
(s / show-01 :arg0 (d / data :source (b / bank :consist-of (p / person :arg0-of (h / have-org-role-91 :arg1 (c / country :name (n / name :op1 "England")) :arg2 (b2 / bank :mod (b3 / bank))))) :arg1-of (f / fresh-04)) :arg1 (d2 / drop-01 :arg1 (m / mortgage :arg1-of (a / approve-01 :location (m2 / market :arg0-of (h2 / house-01)) :degree (f2 / further)) :arg0-of (s2 / suggest-01))))
(t / take-01 :arg0 (p / person :name (n / name :op1 "Arseny" :op2 "Yatsenyuk") :arg0-of (h / have-org-role-91 :arg2 (m / minister :mod (p2 / prime)))) :arg1 (p3 / person :arg0-of (h2 / have-rel-role-91 :arg1 (p4 / person) :arg2 (d / daughter))) :arg4 (s / school) :time (d2 / day :mod (t2 / this)) :mod (t3 / tradition) :arg1-of (r / resemble-01 :arg2 (a / and :op1 (p5 / person :arg0-of (h3 / have-rel-role-91 :arg1 (p6 / person :mod (c / country :name (n2 / name :op1 "N-A")) :arg0-of (h4 / have-rel-role-91 :arg1 (p7 / person) :arg2 (p8 / parent))) :arg2 (p9 / parent))) :op2 (p10 / person :arg0-of (h5 / have-rel-role-91 :arg1 (p11 / person) :arg2 (p12 / parent))))))
(a / and :op1 (t / talk-01 :arg0 (p / person :name (n / name :op1 "Lyudmila")) :arg1 (a2 / apartment :mod (o / ordinary) :poss (p2 / person))) :op2 (a3 / amaze-01 :arg1 (p3 / person) :time (t2 / time :arg1-of (s / same-01) :time-of (s2 / stand-01 :arg1 (h / house) :arg2 (r / ruins :mod (r2 / roman))))))
(t / think-01 :arg0 (i / i) :arg1 (a / and :op1 (p / person :arg0-of (h / have-rel-role-91 :arg1 (t2 / they) :arg2 (f / friend))) :op2 (p2 / person :arg0-of (k / kill-01 :arg1 (p3 / person)))))
(o / obligate-01 :arg2 (f / fight-01 :arg0 (w / we) :arg2 (s / sky :mod (p / peaceful))))
(l / large :degree (m / most) :poss (u / union-02))
(m / multi-sentence :snt1 (a / and :op1 (' / '' :arg0 (a2 / and :op1 (p / person :arg0-of (h / have-rel-role-91 :arg2 (d / dd1))) :op2 (p2 / person :arg0-of (h2 / have-rel-role-91 :arg2 (d2 / dd1))) :op3 (p3 / person :arg0-of (h3 / have-rel-role-91 :arg2 (d3 / dd1))) :op4 (p4 / person :arg0-of (h4 / have-rel-role-91 :arg2 (d4 / dd1))) :op5 (p5 / person :arg0-of (h5 / have-rel-role-91 :arg2 (d5 / dd1))) :op6 (p6 / person :arg0-of (h6 / have-rel-role-91 :arg2 (d6 / dd1))) :op6 (p7 / person :arg0-of (h7 / have-rel-role-91 :arg2 (d7 / dd1))) :op7 (p8 / person :arg0-of (h8 / have-rel-role-91 :arg2 (d8 / dd1))) :op8 (p9 / person :arg0-of (h9 / have-rel-role-91 :arg2 (d9 / dd1))) :op8 (p10 / person :arg0-of (h10 / have-rel-role-91 :arg1 (p11 / person) :arg2 (k / kills))) :op8 (p12 / person :arg0-of (h11 / have-rel-role-91 :arg1 (p13 / person) :arg2 (k2 / kills))) :op8 (p14 / person :arg0-of (h12 / have-rel-role-91 :arg1 (p15 / person) :arg2 (k3 / kills))) :op8 (p16 / person :arg0-of (h13 / have-rel-role-91 :arg1 (p17 / person) :arg2 (k4 / kills))) :op8 (p18 / person :arg0-of (h14 / have-rel-role-91 :arg1 (p19 / person) :arg2 (k5 / kills))) :op8 (p20 / person :arg0-of (h15 / have-rel-role-91 :arg1 (p21 / person) :arg2 (k6 / kills))) :op8 (p22 / person :arg0-of (h16 / have-rel-role-91 :arg1 (p23 / person) :arg2 ('2 / ''))) :op8 (p24 / person :arg0-of (h17 / have-rel-role-91 :arg1 (p25 / person) :arg2 ('3 / ''))) :op8 (p26 / person :arg0-of (h18 / have-rel-role-91 :arg1 (p27 / person) :arg2 ('4 / ''))) :op8 (p28 / person :arg0-of (h19 / have-rel-role-91 :arg1 (p29 / person) :arg2 ('5 / ''))) :op8 (p30 / person :arg0-of (h20 / have-rel-role-91 :arg1 (p31 / person) :arg2 ('6 / ''))) :op8 (p32 / person :arg0-of (h21 / have-rel-role-91 :arg1 (p33 / person) :arg2 ('7 / ''))) :op8 (p34 / person :arg0-of (h22 / have-rel-role-91 :arg1 (p35 / person) :arg2 ('8 / ''))) :op8 (p36 / person :arg0-of (h23 / have-rel-role-91 :arg1 (p37 / person) :arg2 ('9 / ''))) :op8 (e / et-cetera)))))
(p / plan-01 :arg1 (t / thing :arg2-of (p2 / price-01) :arg1-of (i / increase-01 :arg2 (p3 / percentage-entity :value (N / N-A)))) :time (f / future :arg1-of (n / near-02)) :time (f2 / future :arg1-of (n2 / near-02)))
(c / contrast-01 :arg2 (p / post-01 :arg0 (c2 / case-03) :arg1 (p2 / picture :arg0-of (d / demonstrate-01 :arg1 (p3 / possible-01 :arg1 (c3 / change-01 :arg0 (e / event) :arg1 (t / thing :manner-of (a / and :op1 (m / make-01 :arg1 (e2 / event)) :op2 (p4 / photograph-01 :arg0 (e3 / event) :arg1 (h / he) :arg1-of (p5 / process-01))))))))))
(b / be-temporally-at-91 :arg1 122 :arg2 (a / after :op1 (p / person :name (n / name :op1 "Bush"))) :time (t / then))
(e / end-01 :arg1 (m / meet-03 :purpose (s / stone :mod (f / foundation))))
(a / and :op1 (p / possible-01 :arg1 (j / judge-01 :arg1 (p2 / person :arg0-of (p3 / partner-01 :arg1 (o / organization :name (n / name :op1 "Ministry" :op2 "of" :op3 "Foreign" :op4 "Affairs" :op5 "of" :op6 "the" :op7 "Russian" :op8 "Federation"))) :arg0-of (h / have-org-role-91 :arg1 (o2 / organization) :arg3 (h2 / head-01 :arg0 (p4 / person) :arg1 (o3 / organization)))) :manner (w / well :degree (v / very)))) :op2 (j2 / judge-01 :arg1 (p5 / person :arg0-of (h3 / head-01 :arg1 (h4 / head :part-of (o4 / organization))))))
(c / charge-05 :arg0 (p / police) :arg1 (m / man) :arg2 (r / refuse-01 :arg0 (m2 / man) :arg1 (a / and :op1 (s / stop-01 :arg1 (m3 / man)) :op2 (d / dangerous :domain (m4 / man)))))
(c / contrast-01 :arg2 (b / believe-01 :arg0 (p / person :arg1-of (e / expert-01)) :arg1 (s / serious-02 :arg1 (p2 / problem) :degree (m / more :degree (m2 / much)))))
(s / say-01 :arg0 (p / person :arg1-of (e / expert-01)) :arg1 (r / result-01 :arg1 (p2 / place :ord (o / ordinal-entity :value 3)) :arg2 (c / consider-02 :arg1 (l / lack-01 :arg1 (t / train-01 :arg1-of (t2 / target-01))))))
(h / have-03 :arg0 (t / they) :arg1 (b / bill :topic (s / subject)))
(l / lead-01 :arg0 (t / team :consist-of (p / person :arg0-of (h / have-org-role-91 :arg1 (c / country :name (n / name :op1 "Russia")) :arg2 (t2 / team :mod (n2 / nation)))) :mod (n3 / nation)) :time (a / after :op1 (w / win-01 :arg0 (a2 / and :op1 (w2 / win-01 :arg1-of (c2 / clean-04)) :op2 (v / volitional :arg1-of (c3 / clean)) :op3 (w3 / weight :arg1-of (i / include-91 :arg2 (w4 / weight :quant 73)))))))
(a / and :op1 (t / turns :arg0 (i / it) :arg1 (p / product :mod (c / country :name (n / name :op1 "N-A"))) :mod (s / still)) :op2 (s2 / say-01 :arg0 (p2 / person :arg0-of (h / have-org-role-91 :arg1 (c2 / country :name (n2 / name :op1 "N-A")))) :arg1 (p3 / product :mod (c3 / country)) :mod (s3 / still)))
(a / and :op1 (o / over :domain (s / season)) :op2 (o2 / obliged :polarity - :arg0 (w / we) :arg1 (p / person :arg0-of (l / lead-02 :arg1 (w2 / we))) :purpose (p2 / participate-01 :arg0 (p3 / person) :arg1 (m / match-03))))
(u / use-01 :arg1 (u2 / use-01 :arg0 (c / commerce :arg1-of (m / modern-02) :mod (c2 / commerce) :mod (c3 / commerce) :location (c4 / country :name (n / name :op1 "Italy"))) :arg2 (m2 / make-01 :arg1 (a / and :op1 (- / -rrb-) :op2 (t / tissue)) :mod (e / even))) :location (c5 / country :location (c6 / country)))
(a / and :op1 (f / finish-07 :arg0 (a2 / and :op1 (p / person :name (n / name :op1 "Frank" :op2 "Miller")) :op2 (p2 / person :name (n2 / name :op1 "Robert" :op2 "Rodriguez"))) :arg2 (t / thing :quant 2 :arg1-of (k / kill-01 :arg1-of (c / cause-01 :arg0 (r / revolution-03 :mod (t2 / that) :arg1-of (e / expect-01 :arg1-of (p3 / possible-01))))))))
(m / multi-sentence :snt1 (b / bathroom) :snt2 (l / live-01 :arg0 (h / he) :purpose (a / and :op1 (p / person :arg0-of (h2 / have-rel-role-91 :arg1 (i / i) :arg2 (g / grandparents))) :op2 (p2 / person :arg0-of (h3 / have-rel-role-91 :arg1 (i2 / i) :arg2 (d / dad))) :op3 (p3 / person :arg0-of (h4 / have-rel-role-91 :arg1 (i3 / i) :arg2 (h5 / husband))) :op4 (p4 / person :arg0-of (h6 / have-rel-role-91 :arg1 (i4 / i) :arg2 (h7 / husband))) :op5 (p5 / person :arg0-of (h8 / have-rel-role-91 :arg1 (i5 / i) :arg2 (h9 / husband))) :op6 (p6 / person :arg0-of (h10 / have-rel-role-91 :arg1 (i6 / i) :arg2 (d2 / daughter))) :op7 (p7 / person :arg0-of (h11 / have-rel-role-91 :arg1 (i7 / i) :arg2 (h12 / husband))) :op7 (p8 / person :arg0-of (h13 / have-rel-role-91 :arg1 (i8 / i) :arg2 (h14 / husband))))))
(a / and :op1 (i / increase-01 :arg0 (t / this) :arg1 (r / revenue :mod (b / budget))) :op2 (c / create-01 :arg0 (i2 / industry :mod (a2 / any)) :arg1 (j / job :mod (n / new))) :op3 (i3 / introduce-01 :arg1 (i4 / industry :mod (a3 / any)) :arg2 (e / expand-01 :arg1 (r2 / revenue) :manner (f / fast :degree (m / more) :compared-to (b2 / become-01 :arg1 (i5 / industry) :arg2 (a4 / accustomed :arg1 (i6 / industry)))))))
(b / be-located-at-91 :arg1 (t / they) :arg2 (a / ambulance :location (c / condition :arg1-of (s / stable-03) :location (h / hospital :mod (h2 / hospital)))))
(p / possible-01 :arg1 (b / bring-01 :arg0 (l / law :mod (t / this)) :arg1 (r / rate :mod (t2 / tax-01 :arg3 (i / income))) :arg2 (r2 / rate-entity-91 :arg1 (r3 / rate :mod (t3 / tax-01 :arg3 (i2 / income))) :arg2 (r4 / rate-entity-91 :arg1 (u / up-to :op1 3) :arg2 (t4 / temporal-quantity :quant (N / N-A) :unit (y / year)) :mod (e / even)))) :condition (c / continue-01 :arg0 (s / state) :arg1 (a / achieve-01 :arg0 (s2 / state) :arg1 (g / goal :mod (r5 / revenue :mod (t5 / tax-01))) :time (y2 / year :mod (n / next)))))
(p / prove-01 :arg0 (a / anger-01) :arg1 (u / universal :degree (m / most) :domain (a2 / and :op1 (u2 / universal :degree (m2 / most)) :op2 (e / emotion :poss (m3 / man)))))
(s / suggest-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg3 (j / judge-01)) :quant (s2 / some)) :arg1 (p2 / possible-01 :arg1 (a / and :op1 (c / change-01 :arg0 (c2 / case-03) :arg1 (h2 / habit :mod (a2 / audience))) :op2 (g / grow-01 :arg1 (p3 / popularity :poss (s3 / service :mod (i / internet) :mod (s4 / streaming) :example (o / organization :name (n / name :op1 "Netflix"))) :arg1-of (g2 / grow-01))))))
(a / and :op1 (g / give-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (c / country :name (n / name :op1 "Ukraine")) :arg2 (d / diplomat))) :arg1 (g2 / government-organization :arg0-of (g3 / govern-01 :arg1 (r / region))) :arg2 (g4 / government-organization :arg0-of (g5 / govern-01 :arg1 (r2 / region))) :location (f / forum :mod (i / international))) :op2 (g6 / give-01 :arg0 (a2 / authority) :arg1 (a3 / and :op1 (a4 / agree-01 :arg1 (t / trade-01)) :op2 (p2 / policy :mod (f2 / foreign))) :arg2 (a5 / and :op1 (a6 / agree-01 :arg1 (t2 / trade-01)) :op2 (p3 / policy :mod (f3 / foreign))) :mod (e / essential)) :op3 (h2 / handing :arg0 (a7 / authority) :arg1 (c2 / control-01 :arg0 (c3 / country) :arg1 (t3 / territory :location (o / over :op1 (t4 / territory)))) :arg0-of (c4 / combine-01 :arg1 (t5 / territory :mod (m / main) :poss (c5 / country :name (n2 / name :op1 "Russia"))) :arg2 (c6 / country))))
(l / lie-07 :arg1 (t / thing :arg2-of (e / essence :arg1 (o / offline :name (n / name :op1 (o2 / o2o) :op2 (o3 / o2o)) :mod (o4 / online))) :mod (o5 / online)) :arg2 (a / attract-01 :arg0 (c / commerce) :arg1 (c2 / customer) :arg2 (i / internet)) :arg0-of (c3 / cause-01 :arg1 (c4 / come-01 :arg1 (t2 / they) :arg3 (o6 / or :op1 (s / store :mod (o7 / offline) :mod (o8 / ordinary)) :op2 (b / buy-01 :arg1 (s2 / service :mod (t3 / traditional) :mod (o9 / other)))))))
(s / same-01 :arg2 (w / way :mod (s2 / same)))
(s / say-01 :arg1 (a / and :op1 (p / possible-01 :arg1 (d / determine-01 :arg0 (g / government-organization :name (n / name :op1 "N-A") :mod (c / chemical)) :arg1 (p2 / place :location-of (b / bear-02 :arg1 (s2 / she))))) :op2 (p3 / possible-01 :arg1 (a2 / and :op1 (d2 / determine-01 :arg0 (g2 / government-organization :name (n2 / name :op1 "N-A") :mod (c2 / chemical)) :arg1 (p4 / place :location-of (b2 / bear-02 :arg1 (s3 / she)))) :op2 (? / ????????????? :arg1 (?2 / ????? :mod (e / educate-01) :poss (r / region)))))) :arg2 (l / leave-11 :arg0 (p5 / political-party :name (n3 / name :op1 "N-A") :mod (c3 / chemical))))
(g / grant-01 :arg0 (p / person :name (n / name :op1 "Vladimir" :op2 "Putin") :arg0-of (h / have-org-role-91 :arg1 (c / country :name (n2 / name :op1 "N-A")) :arg2 (p2 / president))) :arg1 (c2 / citizenship :mod (c3 / country)) :arg2 (p3 / person :arg1-of (f / fame-01) :arg0-of (h2 / have-org-role-91 :arg1 (c4 / country :name (n3 / name :op1 "N-A")) :arg2 (p4 / president :mod (v / vice)))))
(c / contrast-01 :arg2 (t / turns :arg0 (i / it) :arg1 (b / building :mod (b2 / building :mod (a / almost))) :time (c2 / case :mod (a2 / any))))
(c / contrast-01 :arg1 (k / know-01 :arg0 (e / everyone) :arg1 (u / undermine-01 :polarity - :arg0 (m / movement-07 :arg1 (t / trade-01)) :arg1 (p / power :poss (n / nation))) :time (n2 / now)) :arg2 (i / increase-01 :arg0 (e2 / everyone) :arg1 (a / and)))
(a / appoint-01 :arg0 (p / person :name (n / name :op1 "Prayut") :arg0-of (h / have-org-role-91 :arg2 (g / general))) :arg2 (p2 / post :poss (p3 / person :name (n2 / name :op1 "Pravita" :op2 "Vongsuvana") :arg0-of (h2 / have-org-role-91 :arg2 (m / minister :mod (d / defense))))) :mod (r / right))
(s / say-01 :arg0 (e / event :location (s2 / state :name (n / name :op1 "Maryland"))) :arg1 (o / own-01 :arg0 (o2 / or :op1 (p / property :arg1-of (i / include-91 :arg2 (p2 / property :mod (t / tax-01 :arg3 (t2 / tax)))) :mod (l / large) :mod (s3 / such)) :op2 (b / base :mod (t3 / tax-01) :location (a / around :op1 (p3 / port :name (n2 / name :op1 "N-A")))) :op3 (b2 / base :mod (t4 / tax-01) :mod (e2 / especially) :location (a2 / around :op1 (p4 / port :name (n3 / name :op1 "N-A"))))) :arg1 (a3 / and :op1 (p5 / person :arg0-of (h / have-org-role-91 :arg1 (g / government-organization :arg0-of (g2 / govern-01)) :arg2 (d / director :mod (e3 / executive)))) :op2 (p6 / person :name (n4 / name :op1 "Douglas" :op2 "Lindkholm") :arg0-of (h2 / have-org-role-91 :arg1 (o3 / organization) :arg2 (e4 / executive))) :op3 (p7 / person :arg0-of (h3 / have-org-role-91 :arg1 (o4 / organization) :arg2 (e5 / executive))) :op4 (p8 / person :arg0-of (h4 / have-org-role-91 :arg1 (c / center) :arg2 (e6 / executive))) :purpose (t5 / tax-01 :arg2 (s4 / state)))) :location (s5 / state :name (n5 / name :op1 "Maryland")))
(c / contrast-01 :arg2 (i / initiative :polarity - :mod (r / radical) :domain (i2 / initiative :mod (c2 / country :name (n / name :op1 "N-A"))) :mod (c3 / certain)))
(m / multi-sentence :snt1 (p / possible-01 :arg1 (t / talk-01 :arg0 (y / you) :arg1 (d / demand-01 :arg1 (m2 / material :mod (r / raw) :mod (d2 / domestic)) :arg1-of (i / increase-01))) :time (l / late :degree (m3 / more) :quant (a / almost :op1 (t2 / temporal-quantity :quant (N / N-A) :unit (m4 / month))))) :snt2 (s / say-01 :arg0 (p2 / person :arg0-of (h / have-org-role-91 :arg1 (o / organization :name (n / name :op1 "All-Russian" :op2 "Public" :op3 "Organization")) :arg2 (p3 / president :mod (v / vice)))) :arg1 (p4 / person :name (n2 / name :op1 "Tamara" :op2 "Kasyanov") :arg0-of (h2 / have-org-role-91 :arg1 (o2 / organization) :arg2 (p5 / president :mod (v2 / vice))) :arg0-of (h3 / have-org-role-91 :arg1 (o3 / organization) :arg2 (p6 / president :mod (v3 / vice))) :arg0-of (h4 / have-org-role-91 :arg1 (o4 / organization) :arg2 (p7 / president :mod (v4 / vice))) :arg0-of (h5 / have-org-role-91 :arg1 (o5 / organization) :arg2 (p8 / president :mod (v5 / vice))) :arg0-of (h6 / have-org-role-91 :arg1 (o6 / organization) :arg2 (p9 / president :mod (v6 / vice))))))
(a / and :op1 (b / become-01 :arg1 (i / it) :arg2 (k / know-01 :arg0 (i2 / it) :arg1 (i3 / investigate-01 :arg1 (i4 / investigate-01 :arg1 (a2 / and :op1 (a3 / article :arg1-of (c / criminal-03)) :op2 (a4 / article :name (n / name :op1 (' / '')))))))) :op2 (a5 / article :part-of (p / person :arg0-of (h / have-org-role-91 :arg1 (h2 / hometown :poss (p2 / person :name (n2 / name :op1 "Yekaterinburg" :op2 "Evgeny" :op3 "Royzmana"))) :arg2 (m / mayor :mod (v / vice))))) :time (d / date-entity :month 7 :day 1))
(a / alternative :arg1-of (p / perfect-02) :domain (s / service :mod (t / this)) :beneficiary (p2 / person :arg0-of (s2 / study-01) :arg0-of (h / have-03 :arg1 (b / belongings :poss (s3 / service)) :path (m / machine :mod (o / over-burdened :mod (d / dangerously)))) :mod (u / usual)))
(s / seem-01 :arg1 (p / possible-01 :polarity - :arg1 (s2 / sure-02 :arg1 (s3 / safe-01 :arg1 (h / he)))))
(e / event :mod (a / all) :time (t / time :mod (t2 / this)))
(i / introduce-02 :arg0 (m / method :mod (t / this)) :arg1 (c / character :mod (s / sort :mod (a / all))) :manner (c2 / consistent) :arg1-of (s2 / start-01 :arg1-of (s3 / start-01 :arg1-of (u / use-01 :arg1-of (u2 / use-01 :arg1-of (f / frequent-02 :degree (m2 / most)))))))
(a / and :op1 (c / come-01 :arg1 (e / emotions) :arg4 (n / naught) :manner (g / gradual)) :op2 (q / quote-01 :arg0 (e2 / emotions) :arg2 (g2 / ground :arg1-of (l / lose-02)) :degree (f / full)) :arg1-of (p / practice-01))
(h / hug :polarity - :mode (i / imperative) :arg0 (y / you) :arg1 (i2 / i) :mod (j / just))
(s / support-01 :arg0 (p / person :arg0-of (s2 / study-01) :mod (s3 / school)) :arg1 (b / burners :arg1 (b2 / bunsen)) :location (t / throughout :op1 (c / country :mod (w / whole))) :location (c2 / country :mod (w2 / whole)))
(p / pobezhdavshaya :arg0 (p2 / person :name (n / name :op1 "Kelmendi")) :arg1 (p3 / person :name (n2 / name :op1 "Kuzyutin") :arg0-of (h / have-org-role-91 :arg2 (g / gold))) :time (e / early :degree (m / more) :mod (w / world) :mod (f / final)) :mod (a / again) :mod (a2 / again))
(- / -lrb- :arg1 (-2 / -lrb- :mod (s / script)) :arg2 (f / find-01 :arg1 (p / phone :poss (i / i))))
(a / and :op1 (p / propose-01 :arg0 (t / telecommunication) :arg1 (b / budget-01 :arg0 (p2 / person :quant 2014 :mod (f / federal)) :arg1 (m / monetary-quantity :quant 250 :unit (d / dollar)) :arg2 (v / volume-quantity :quant (N / N-A) :unit (g / gallon)))) :op2 (p3 / proposed :arg0 (o / organization :name (n / name :op1 "Autonomous" :op2 "Nonprofit" :op3 "Organization")) :arg1 (r / rate-entity-91 :arg1 (m2 / monetary-quantity :quant 250 :unit (d2 / dollar)) :arg2 (v2 / volume-quantity :quant (N2 / N-A) :unit (g2 / gallon)))))
(c / contrast-01)
(a / appoint-01 :arg1 (p / person :name (n / name :op1 "Zivko" :op2 "Zhivkov") :arg0-of (h / have-org-role-91 :arg1 (d / directorate :mod (r / region) :mod (f / fund-01)) :arg2 (c / chief))) :location (p2 / peninsula :name (n2 / name :op1 "N-A")) :time (u / until :op1 (d2 / date-entity :year 2014 :month 1)))
(p / publish-01 :arg1 (s / study :arg1-of (f / finance-01 :arg0 (o / organization :name (n / name :op1 "Rio" :op2 "Tinto" :op3 "Ride")) :arg2 (c / cancer :mod (c2 / conquered)))) :time (t / today) :location (j / journal :mod (m / medicine) :poss (c3 / country :name (n2 / name :op1 "Australia"))))
(c / contrast-01 :arg1 (h / have-03 :arg0 (w / we) :arg1 (p / program :arg1-of (s / special-02) :topic (a / and :op1 (g / girl) :op2 (w2 / woman :mod (y / young)))) :time (n / now)) :arg2 (n2 / nothing :beneficiary (b / boy) :mod (a2 / almost)))
(s / sky :mod (p / peaceful) :location (o / over :op1 (c / country :name (n / name :op1 "Ukraine"))))
FAILED_TO_PARSE#Number of opening and closing brackets doesn't match.
(s / say-01 :arg0 (p / person :name (n / name :op1 "Khetteri")) :arg1 (a / and :op1 (s2 / serve-01 :arg0 (a2 / and :op1 (p2 / person :quant (a3 / at-least :op1 1865) :arg1-of (b / black-05)) :op2 (m / man :quant (a4 / at-least :op1 10000))) :arg1 (m2 / man :mod (w / white)) :time (b2 / before :op1 (n2 / now) :quant (b3 / between :op1 (t / temporal-quantity :quant (N / N-A) :unit (y / year)) :op2 (t2 / temporal-quantity :quant (N2 / N-A) :unit (y2 / year))))) :op2 (s3 / serve-01 :arg0 (p3 / person) :arg2 (w2 / woman :mod (w3 / white)) :time (a5 / always :mod (a6 / almost)))))
(c / cause-01 :arg0 (k / know-01 :arg0 (y / you)) :arg1 (s / save-02 :arg1 (t / thing :arg1-of (i / import-01) :mod (b / big :degree (m / most))) :arg2 (p / percentage-entity :value (N / N-A)) :arg4 (p2 / percentage-entity :value (N2 / N-A))))
(m / multi-sentence :snt1 (s / surprise-01 :arg0 (c / call-01 :arg1 (p / person :arg1-of (i / imprison-01)) :arg2 (p2 / person :arg1-of (i2 / imprison-01))) :time (n / now)) :snt2 (a / and :op1 (t / turn-01 :mode (i3 / interrogative) :arg0 (t2 / terrorist) :arg1 (t3 / they) :manner (g / good)) :op2 (g2 / give-01 :arg0 (t4 / terrorist) :arg1 (f / food) :arg2 (t5 / they) :mod (w / well))))
(h / have-03 :arg0 (i / i) :arg1 (m / motivation :mod (h2 / huge) :purpose (r / reach-01 :arg0 (i2 / i) :arg1 (l / level :mod (n / new)))) :time (a / after :op1 (d / disappoint-01)))
(a / associate-01 :arg1 (s / story :ord (o / ordinal-entity :value 2)) :arg2 (f / fact :topic (a2 / and :op1 (a3 / averse :polarity - :arg0 (c / company :mod (c2 / country :name (n / name :op1 "Belarus")) :quant (m / many)) :arg1 (e / establish-01 :arg0 (c3 / company) :arg1 (p / produce-01) :location (c4 / country) :source (c5 / country :name (n2 / name :op1 "Ukraine") :mod (m2 / material :mod (r / raw))))) :op2 (f2 / focus-01 :arg0 (c6 / company) :arg2 (m3 / market :mod (r2 / raw))))))
(e / embedded :arg0 (p / picture :poss (c / country :name (n / name :op1 "N-A"))) :arg1 (s / she) :arg2 (r / reconstruct-01 :arg1 (p2 / person)) :time (t / try-01 :arg0 (p3 / person :quant 1) :arg1 (g / get-05 :arg1 (p4 / person) :arg2 (g2 / gym) :time (a / after :op1 (e2 / explode-01 :arg1-of (e3 / explode-01) :arg1-of (e4 / explode-01))))))
(a / and :op1 (e / exceed-01 :arg0 (c / cost-01 :arg1 (p / person :arg0-of (s / study-01) :quant (m / many)) :arg2 (r / rate-entity-91 :arg1 (m2 / monetary-quantity :quant 1000 :unit (d / dollar)) :arg2 (t / temporal-quantity :quant (N / N-A) :unit (y / year)))) :arg1 (r2 / rate-entity-91 :arg1 (m3 / monetary-quantity :quant 1000 :unit (d2 / dollar)) :arg2 (t2 / temporal-quantity :quant (N2 / N-A) :unit (y2 / year)))) :op2 (a2 / accelerate-01 :arg0 (p2 / person :name (n / name :op1 "Mett" :op2 "Schroeder")) :arg1 (m4 / method :mod (s2 / sly) :purpose (r3 / reduce-01 :arg1 (m5 / monetary-quantity :arg1-of (e2 / expend-01)))) :time (s3 / soon)))
(a / argue-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg3 (j / judge-01)) :quant (s / some)) :arg1 (t / truth :mod (s2 / some) :prep-in (p2 / predict-01 :arg0 (h2 / he) :arg1-of (d / dark-02)) :domain (p3 / person :arg0-of (h3 / have-org-role-91 :arg3 (j2 / judge-01)))))
(m / multi-sentence :snt1 (c / consist-01 :arg1 (t / thing :arg0-of (c2 / cause-01 :arg1 (f / feel-01 :arg0 (w / we) :arg1 (c3 / consequence :arg0-of (k / kill-01)) :time (n / now)))) :arg2 (a / and :op1 (l / law :mod (t2 / type :quant 1999)) :op2 (a2 / asbestos :mod (t3 / type :quant 1999)) :time (e / eventual))) :snt2 (l2 / leave-11 :arg0 (l3 / law) :time (a3 / after :op1 (n2 / now) :quant (m2 / many :op1 (t4 / temporal-quantity :quant (N / N-A) :unit (y / year))))))
(a / and :op1 (s / study-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (u / university :name (n / name :op1 "University" :op2 "of" :op3 "California")) :arg2 (u2 / university :name (n2 / name :op1 "University" :op2 "of" :op3 "California")))) :arg1 (m / mixing :mod (t / turbulent))) :op2 (a2 / affect-01 :arg0 (p2 / person) :arg1 (h2 / homogeneity :mod (c / chemical) :location (c2 / cluster :mod (s2 / stellar)))))
(k / know-01 :polarity - :arg1 (t / thing :arg1-of (k2 / know-01 :polarity -)))
(c / contrast-01)
(p / participate-01 :arg0 (p2 / person :arg0-of (h / have-org-role-91 :arg1 (p3 / person :arg0-of (h2 / have-org-role-91 :arg1 (c / country :name (n / name :op1 "N-A")) :arg2 (c2 / capital))) :arg2 (m / mayor))) :arg1 (c3 / ceremony :topic (s / start-01 :arg0 (a / and :op1 (r / ring :mod (c4 / central) :part-of (c5 / city :name (n2 / name :op1 "Moscow"))) :op2 (r2 / ring :name (n3 / name :op1 (t / tskad) :op2 (t2 / tskad) :op3 (t3 / tskad)))) :ord (o / ordinal-entity :value 1))) :time (c6 / ceremony :time (d / date-entity :month 8 :day 26)))
(s / say-01 :arg0 (h / he) :arg1 (d / dragged :arg0 (t / thing :arg1-of (r / report-01 :arg0 (y / you))) :arg1 (t2 / thing :arg1-of (r2 / report-01 :arg0 (y2 / you)))))
(a / and :op1 (c / create-01 :arg0 (r / raise-01 :arg1 (s / standard :mod (l / live-01) :mod (m / millions))) :arg1 (m2 / market :beneficiary (i / industry))) :op2 (l2 / lifted :arg0 (u / union) :arg1 (n / nation :mod (w / whole)) :arg2 (l3 / level :mod (f / fragile) :mod (p / produce-01))))
(i / introduce-02 :arg0 (o / organization :name (n / name :op1 "Duma") :mod (s / state)) :arg1 (b / bill :arg0-of (m / move-01 :arg1 (d / date :mod (e / enter-01)) :arg2 (f / force-04))) :time (a / already) :time (d2 / date-interval :op1 (d3 / date-entity :day 1 :month 1 :year 2015) :op2 (d4 / date-entity :year 2016 :month 9 :day 1)) :location (b2 / brief-01 :arg1 (o2 / organization)))
(a / and :op1 (r / remember-01 :polarity - :li 10 :arg1 (a2 / anything :topic (s / seize-01)) :time (n / now)) :op2 (s2 / say-01 :arg0 (i / i) :arg1 (a3 / and :op1 (h / have-03 :arg0 (p / person :arg1-of (i2 / include-91 :arg2 (p2 / person))) :arg1 (a4 / anything :topic (s3 / seize-01))) :op2 (b / blossomed :arg0 (p3 / person) :arg1 (g / girl :mod (l / little :degree (m / most)))))))
(h / have-03 :arg0 (a / and :op1 (p / person :name (n / name :op1 "Sobchak")) :op2 (p2 / person :arg0-of (s / smoke-02) :mod (v / vitorgan))) :arg1 (p3 / person :name (n2 / name :op1 "Zhvanetsky")))
(t / think-01 :arg0 (p / person :name (n / name :op1 "Dmitry" :op2 "Medvedev") :arg0-of (h / have-org-role-91 :arg1 (c / country :name (n2 / name :op1 "N-A")) :arg2 (m / minister :mod (p2 / prime)))) :arg1 (r / recommend-01 :arg1 (l / learn-01 :arg0 (a / and :op1 (p3 / person :arg0-of (h2 / have-org-role-91 :arg2 (m2 / minister :mod (p4 / prime)))) :op2 (p5 / person :arg0-of (h3 / have-org-role-91 :arg2 (m3 / minister :mod (p6 / prime))))) :arg1 (t2 / technology :mod (n3 / new)) :purpose (b / build-01 :arg0 (c2 / country) :arg1 (p7 / person :arg0-of (b2 / buy-01 :arg1 (c3 / cheese))))) :prep-in (c4 / condition-01 :arg1 (e / embargo-01))))
(b / bring-up-02 :arg0 (p / person :name (n / name :op1 "Harvey")) :arg1 (n2 / number :quant-of (p2 / person :arg0-of (w / win-01 :arg1 (t / tube :mod (m / main)) :location (p3 / peninsula :name (n3 / name :op1 "N-A"))))) :arg4 (r / rate-entity-91 :arg1 (m2 / monetary-quantity :quant 85 :unit (d / dollar) :mod (t2 / total)) :arg2 (t3 / temporal-quantity :quant (N / N-A) :unit (y / year))))
(m / multi-sentence :snt1 (a / and :op2 (g / give-01 :mode (i / imperative) :arg0 (y / you) :arg1 (e / example :mod (t / this)) :arg2 (o / obligate-01 :arg1 (s / specify-01 :polarity - :arg1 (t2 / thing :arg2-of (r / result-01 :arg1 (t3 / thing :arg2-of (r2 / result-01 :arg1 (t4 / thing :arg2-of (r3 / result-01 :arg1 (t5 / thing :arg2-of (r4 / result-01 :arg1 (t6 / thing :arg2-of (r5 / result-01 :arg1 (t7 / thing :arg2-of (r6 / result-01 :arg1 (t8 / thing :arg2-of (r7 / result-01 :arg1 (t9 / thing :arg2-of (r8 / result-01 :arg1 (o2 / or :op1 (' / '') :op2 (t10 / thing :arg2-of (e2 / equal-01 :arg1 ('2 / '' :name (n / name :op1 ('3 / '') :op2 ('4 / '') :op3 ('5 / ''))))) :op4 ('6 / '' :name (n2 / name :op1 ('7 / ''))) :op5 (e3 / et-cetera)))))))))))))))))))))) :snt2 (a2 / and :op1 (p / possible-01 :arg1 (h / have-03 :arg0 ('8 / '' :name (n3 / name :op1 ('9 / '') :op2 ('10 / '') :op3 ('11 / ''))) :arg1 (p2 / possible-01 :arg1 ('12 / ''))) :op2 (p3 / possible-01 :arg1 (h2 / have-03 :arg0 ('13 / '' :name (n4 / name :op1 ('14 / ''))) :arg1 (m2 / may :mod ('15 / '')) :time (b / before :op1 (a3 / and :op1 (h3 / high-02 :arg1 ('16 / '') :degree (m3 / more)) :op2 (h4 / higher :arg1 ('17 / ''))))))) :op3 (e4 / et-cetera)))
(w / want-01 :arg0 (i / i) :arg1 (w2 / watch-01 :arg0 (i2 / i) :arg1 (c / cricket)))
(c / contrast-01 :arg1 (s / set :quant (j / just :op1 3) :mod (j2 / just)) :arg2 (l / limit-01 :arg1 (b / bronze :quant (b2 / between :op1 3 :op2 1)) :arg2 (b3 / bronze :quant 1 :location (t / tournament :poss (m / man))) :arg4 (v / value-interval :op1 3 :op2 90)))
(p / possible-01 :polarity - :arg1 (j / jeopardize :arg0 (y / you) :arg1 (l / livelihood :poss (w / we))))
(c / collect-01 :arg0 (s / state :name (n / name :op1 "Maryland")) :arg1 (m / monetary-quantity :quant 1 :unit (d / dollar)) :arg2 (r / revenue :mod (t / tax-01 :arg3 (i / income)) :poss (c2 / corporation)) :location (r2 / region))
(a / and :op1 (w / win-01 :arg0 (a2 / and :op1 (p / person :arg0-of (s / speak-01 :arg3 (d / day :ord (o / ordinal-entity :value 6)))) :op2 (p2 / person :arg0-of (s2 / speak-01 :arg3 (d2 / day :ord (o2 / ordinal-entity :value 6))))) :arg1 (b / bronze :arg1 (m / man))) :op2 (s3 / speak-01 :arg0 (p3 / person :name (n / name :op1 "Renat" :op2 "Saidov") :arg0-of (s4 / speak-01 :arg3 (o3 / over :op1 (m2 / mass-quantity :quant (N / N-A) :unit (k / kilogram)))))))
(r / read-01 :mode (i / imperative) :arg0 (y / you) :arg1 (a / and :op1 (m / material :mod (o / other)) :op2 (n / news) :op3 (s / statistic)) :time (s2 / summer))
(a / and :op1 (d / dig :arg0 (t / they) :arg1 (t2 / trench)) :op2 (b / build-01 :arg0 (t3 / they) :arg1 (a2 / and :op1 (r / roadblocks) :op2 (r2 / roadblocks))))
(h / have-concession-91 :arg1 (p / possible-01 :arg1 (p2 / purchase-01 :arg1 (t / thing :arg2-of (c / copy-01) :mod (n / new)) :arg3 (r / rate-entity-91 :arg1 (m / monetary-quantity :quant 290 :unit (d / dollar)) :arg2 (w / website :mod (l / location :name (n2 / name :op1 "Chegg")))))) :arg2 (p3 / possible-01 :arg1 (p4 / purchase-01 :arg1 (t2 / thing :arg2-of (c2 / copy-01) :mod (n3 / new)) :arg3 (r2 / rate-entity-91 :arg1 (m2 / monetary-quantity :quant 19.99 :unit (d2 / dollar)) :arg2 (w2 / website :mod (l2 / location :name (n4 / name :op1 "Chegg"))) :arg0-of (s / sell-01 :arg1 (t3 / textbooks))))))
(h / hope-01 :arg0 (p / person :mod (c / country :name (n / name :op1 "N-A")) :mod (r / rock) :arg0-of (b / bring-01 :arg1 (r2 / rock) :arg2 (c2 / club) :arg1-of (d / direct-02))) :arg1 (p2 / person :mod (r3 / rock) :mod (r4 / rock) :arg0-of (b2 / bring-01 :arg1 (r5 / rock) :arg2 (c3 / club) :arg1-of (d2 / direct-02))))
(a / and :op1 (c / create-01 :arg0 (r / raise-01 :arg1 (s / standard :mod (l / live-01) :mod (m / millions))) :arg1 (m2 / market :beneficiary (i / industry))) :op2 (l2 / lifted :arg0 (u / union) :arg1 (n / nation :mod (w / whole)) :purpose (d / do-02 :arg0 (n2 / nation) :arg1 (l3 / level :mod (p / produce-01)))))
(s / suspend-01 :arg1 (a / action :mod (l / license-01 :arg1 (m / madrassa))) :time (d / date-entity :month 2 :year 2013))
(c / contrast-01 :arg1 (t / tell-01 :arg0 (w / woman) :arg1 (r / run-02 :arg0 (w2 / woman) :arg1-of (h / hard-02)) :arg2 (i / i)) :arg2 (p / possible-01 :polarity - :arg1 (' / '' :arg0 (i2 / i) :time (t2 / then))))
(h / help-01 :arg0 (p / person :name (n / name :op1 "Maidan" :op2 "Lukashenko")) :prep-as (h2 / help-01 :arg0 (p2 / person)))
(m / multi-sentence :snt1 (a / appreciate-02 :arg0 (i / i) :arg1 (g / god :arg1-of (r / return-01 :arg4 (i2 / i))) :degree (s / so)) :snt2 (l / lie-07 :arg1 (h / here :location (h2 / here :location (l2 / location :name (n / name :op1 "Beslan")))) :arg2 (e / each)))
(c / contrast-01 :arg1 (a / adult :domain (p / person :name (n / name :op1 "Georgiy")) :time (n2 / now)) :arg2 (h / have-03 :arg0 (p2 / publication :mod (t / this)) :arg1 (i / it) :mod (s / still)))
(r / reject-01 :arg0 (c / company :arg0-of (r2 / reject-01 :arg1 (c2 / commentaries :mod (a / any)))) :arg1 (t / this))
(n / note-01 :arg0 (r / report :mod (g / goddard)) :arg1 (r2 / rule-03 :polarity - :arg0 (s / situation :arg1-of (a / accord-02 :arg2 (r3 / rule :arg1-of (d / differ-02)))) :arg1 (s2 / situation)))
(c / cause-01 :arg0 (p / possible-01 :polarity - :arg1 (r / run-01 :arg0 (w / we) :arg1 (m / mechanism :mod (s / substitution :arg1-of (i / import-01))))) :arg1 (c2 / continue-01 :arg0 (w2 / we) :arg1 (b / bear-01 :arg0 (w3 / we) :arg1 (r2 / risk-01 :arg1 (c3 / component :arg1-of (r3 / rise-01) :arg1-of (r4 / rise-01))))) :time (s2 / stage :mod (t / this)))
(n / name-01 :arg1 (n2 / nobody :quant 101))
(c / contrast-01 :arg1 (b / be-located-at-91 :arg1 (c2 / complain-01) :arg2 (p / protect-01 :arg1 (s / state))) :arg2 (a / and :op1 (r / release-01 :polarity - :arg1 (c3 / content :poss (i / it)) :duration (m / multiple :op1 (t / temporal-quantity :quant (N / N-A) :unit (d / decade)))) :op2 (f / feel-01 :arg0 (w / we) :arg1 (e / experiment-01 :arg1-of (f2 / forget-01 :arg0 (a2 / authority) :manner (s2 / simple))))))
(p / power-01 :mode (i / interrogative) :arg0 (a / and :op1 (p2 / power) :op2 (b / brother)))
(s / say-01 :arg0 (i / i) :arg1 (w / want-01 :polarity - :arg0 (i2 / i) :arg1 (t / talk-01 :arg0 (i3 / i) :arg2 (m / man :arg0-of (b / bring-01 :arg1 (w2 / we) :arg2 (w3 / we)))) :mod (e / even)))
(s / say-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (l / location :name (n / name :op1 "Louisiana")) :arg2 (o / official))) :arg1 (p2 / punish-01 :polarity - :arg0 (p3 / person) :arg1 (d / doctor :arg0-of (m / make-01 :arg1 (a / abortions))) :time (u / until :op1 (s2 / state-01 :arg0 (p4 / person) :arg1 (a2 / and :op1 (p5 / person :arg0-of (h2 / have-org-role-91 :arg2 (a3 / authority))) :op2 (p6 / person :arg0-of (h3 / have-org-role-91 :arg2 (a4 / authority)))))) :time (u2 / until :op1 (s3 / state-01 :arg0 (p7 / person) :arg1 (t / thing :arg2-of (s4 / solve-01))))))
(s / state-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (p2 / person :name (n / name :op1 "Emmett" :op2 "Shira") :arg0-of (h2 / have-org-role-91 :arg2 (t / twitch))) :arg2 (c / ceo))) :arg1 (c2 / choose-01 :arg0 (p3 / person) :arg1 (o / organization :name (n2 / name :op1 "Amazon")) :arg1-of (c3 / cause-01 :arg0 (a / and :op1 (b / believe-01 :arg0 (p4 / person) :arg1 (c4 / community :poss (w / we))) :op2 (s2 / share-01 :arg0 (p5 / person) :arg1 (a2 / and :op1 (v / value :poss (w2 / we)) :op2 (g / goal :arg1-of (l / long-03)))))) :arg1-of (c5 / cause-01 :arg0 (a3 / and :op1 (b2 / believe-01 :arg0 (p6 / person) :arg1 (c6 / community :poss (w3 / we))) :op2 (s3 / share-01 :arg0 (p7 / person) :arg1 (a4 / and :op1 (v2 / value :poss (w4 / we)) :op2 (g2 / goal :arg1-of (l2 / long-03))))))))
(a / announce-01 :arg0 (g / government-organization :arg0-of (g2 / govern-01 :arg1 (c / country :name (n / name :op1 "Russia")))) :arg1 (e / expand-01 :arg1 (t / thing :arg2-of (s / sanction-02 :arg1 (c2 / country))) :arg3 (a2 / and :op1 (f / field :mod (d / defend-01)) :op2 (f2 / finance) :op3 (i / industry :mod (o / oil)) :op4 (i2 / industry :mod (g3 / gas)))) :mod (a3 / also))
(a / and :op1 (g / get-05 :arg1 (i / i) :arg2 (u / up)) :op2 (b / be-located-at-91 :arg1 (i2 / i) :arg2 (i3 / inside) :purpose (f / find-01 :arg0 (i4 / i) :arg1 (p / person :arg0-of (h / have-rel-role-91 :arg1 (h2 / he) :arg2 (m / mother))))))
(c / contrast-01 :arg1 (a / and :op1 (t / tell-01 :arg0 (h / he) :arg2 (p / person :arg0-of (h2 / head-01 :arg1 (o / organization :name (n / name :op1 "RSL") :mod (c2 / construct-01)))) :time (b / before :op1 (n2 / now) :quant (l / long :arg1-of (l2 / long-03)))) :op2 (p2 / person :name (n3 / name :op1 "Anatoly" :op2 "Demyanko") :arg1 (r / regulate-01) :time (b2 / before :op1 (n4 / now) :quant (l3 / long)))) :arg2 (h3 / have-03 :arg0 (b3 / business :mod (a2 / another)) :arg1 (b4 / business :mod (a3 / another)) :time (u / until :op1 (o2 / offer-01))))
(a / appoint-01 :arg0 (p / person :name (n / name :op1 "Charles" :op2 "Makneyr") :mod (r / royal) :arg1-of (a2 / appoint-01 :arg0 (c / court))) :arg1 (l / lawyer :mod (r2 / royal)) :arg2 (l2 / lawyer))
(q / quoted :polarity - :arg0 (t / thing :arg1-of (d / decide-01 :arg0 (p / person :name (n / name :op1 "Nadal") :arg0-of (h / have-org-role-91 :arg1 (p2 / person :name (n2 / name :op1 "Nadal") :arg0-of (h2 / have-org-role-91 :arg2 (m / mr.))) :arg2 (m2 / mr.))))) :arg1 (' / '' :name (n3 / name :op1 (n4 / novosti) :op2 (n5 / novosti) :op3 (n6 / novosti))))
(s / say-01 :arg0 (h / he) :arg1 (p / plan-01 :arg1 (u / upgrade-02 :arg0 (r / refinery :mod (o / oil) :location (l / location :name (n / name :op1 "Lisichansk"))))))
(a / appeal-02 :arg0 (p / person :name (n / name :op1 "Poroshenko")) :arg1 (m / meet-03 :arg0 (p2 / person :arg0-of (l / lead-02 :arg1 (o / organization :name (n2 / name :op1 "European" :op2 "Union")))) :location (c / city :name (n3 / name :op1 "Brussels"))) :arg2 (c2 / call-03 :arg0 (p3 / person) :arg1 (m2 / measure-02 :arg0 (p4 / person) :arg1 (p5 / prevent-01 :arg0 (p6 / person) :arg1 (a2 / aggression :mod (f / further) :prep-against (c3 / country :name (n4 / name :op1 "Ukraine"))) :arg2 (p7 / person :arg0-of (d / depend-01 :polarity -) :arg0-of (d2 / depend-01 :polarity -)) :time (y / year :mod 23)))) :location (c4 / city :name (n5 / name :op1 "Brussels")))
(a / and :op1 (o / old :degree (m / more) :domain (i / i) :time (n / now)) :op2 (s / say-01 :arg0 (t / they) :arg1 (o2 / obligate-01 :arg1 (c / child) :arg2 (s2 / say-01 :arg0 (c2 / child) :arg1 (t2 / true :polarity - :domain (t3 / this)) :arg1-of (e / easy-05)))))
(p / possible-01 :arg1 (w / wait-01 :arg1 (e / everything) :time (n / now)))
(c / cause-01 :arg0 (r / realize-01 :arg0 (h / he) :arg1 (h2 / have-03 :polarity - :arg0 (h3 / he) :arg1 (a / and :op1 (k / knowledge :quant (e / enough)) :op2 (s / skill)) :purpose (c2 / cover-01 :arg0 (h4 / he) :arg1 (h5 / history :poss (r2 / region))))) :arg1 (b / begin-01 :arg0 (h6 / he) :arg1 (c3 / collect-01 :arg0 (h7 / he) :arg1 (m / material) :purpose (g / game :mod (g2 / game)))))
(d / democrat :mod (d2 / drunk :degree (m / most)) :location (s / state :name (n / name :op1 "Texas")) :domain (i / i))
(a / and :op1 (c / car :quant 4 :domain (c2 / car :poss (i / i))) :op2 (c3 / car :quant 3 :mod (o / only) :domain (c4 / car)) :time (e / end-01))
(c / case :arg2-of (c2 / criminal-03) :location (l / location :name (n / name :op1 "Chuvashia") :location (c3 / court)))
(p / place :mod (r / right) :domain (y / you) :mod (m / much))
(s / say-01 :arg0 (h / he) :arg1 (o / obligate-01 :arg2 (b / begin-01 :arg0 (w / we) :arg1 (a / and :op1 (t / talk-01 :mod (s2 / substantive)) :op2 (i / issue-02 :mod (t2 / technical) :mod (o2 / only :polarity -))) :time (i2 / immediate) :location (a2 / and :op1 (o3 / organization :mod (p / politics) :mod (s3 / society)) :op2 (s4 / status :mod (n / nation) :poss (l / location :name (n2 / name :op1 "Southeast" :op2 "Ukraine")))) :purpose (s5 / serve-01 :arg0 (w2 / we) :arg1 (i3 / interest :poss (p2 / person :arg0-of (l2 / live-01)))))))
(' / ' :arg0 (a / and :op1 (p / person :arg0-of (o / own-01 :arg1 (a2 / and :op1 (p2 / person :arg0-of (o2 / own-01 :arg1 (l / location :name (n / name :op1 "Evdokima")))) :op2 (p3 / person :arg0-of (o3 / own-01 :arg1 (l2 / location :name (n2 / name :op1 "Evdokima"))))) :location (h / house :poss (p4 / person :name (n3 / name :op1 "Ivan" :op2 "Demidov") :arg0-of (h2 / have-rel-role-91 :arg1 (p5 / person) :arg2 (s / son)))))) :op2 (p6 / person :arg0-of (h3 / have-rel-role-91 :arg1 (p7 / person) :arg2 (s2 / son))) :location (a3 / along :op1 (s3 / street))) :arg1 (a4 / apartments :quant 18 :mod (- / -rrb-)) :time (f / former))
(s / schedule-01 :arg1 (a / and :op1 (s2 / session :mod (p / person :arg0-of (h / have-org-role-91 :arg2 (p2 / person :arg1-of (e / expert-01 :arg2 (w / work-01))))) :arg3 (t / temporal-quantity :quant (N / N-A) :unit (y / year))) :op2 (l / list :mod (f / final) :consist-of (i / indicators))) :arg2 (a2 / assess-01 :arg0 (s3 / session) :arg1 (p3 / perform-01 :arg1 (o / organization :mod (s4 / science)))) :time (m / meet-03 :ord (o2 / ordinal-entity :value 3)))
(m / multi-sentence :snt1 (c / contrast-01 :mode (i / interrogative) :arg2 (p / possible-01 :mode (i2 / interrogative) :arg1 (c2 / cease-01 :arg0 (i3 / i) :arg1 (r / recall-02 :arg0 (i4 / i) :arg1 (r2 / recall-02 :arg0 (i5 / i) :arg1 (h / he)))))) :snt2 (s / say-01 :arg0 (h2 / he) :time (y / yesterday)) :snt3 (s2 / say-01 :arg0 (h3 / he) :time (y2 / yesterday)))
(b / byline-91 :arg2 (p / person :name (n / name :op1 "Alexander" :op2 "Miridonov")))
(a / and :op1 (m / men :arg0 (m2 / man :arg1-of (s / same-01 :arg2 (a2 / and :op1 (p / person :arg0-of (s2 / smuggle-01)) :op2 (p2 / person :arg0-of (s3 / smuggle-01)) :op3 (p3 / person :arg0-of (s4 / smuggle-01))))) :arg1 (f / fury :source (p4 / pub) :destination (p5 / pub))) :op2 (r / refuse-01 :arg0 (p6 / person :arg0-of (s5 / smuggle-01)) :arg1 (r2 / raise-03 :arg0 (p7 / person) :arg1 (h / hand))) :op3 (r3 / refuse-01 :arg0 (p8 / person) :arg1 (o / or :op1 (r4 / raise-03 :arg0 (p9 / person) :arg1 (h2 / hand)) :op2 (u / upset-01 :arg0 (p10 / person) :arg1 (w / woman)))) :time (a3 / after :op1 (t / that)))
(s / say-01 :arg0 (b / bill) :arg1 (r / recommend-01 :arg1 (g / good-04 :arg1 (p / product :arg1-of (p2 / produce-01 :arg1-of (l / local-02)) :quant (a / at-least :op1 50)) :arg2 (g2 / good :mod (k / kind :mod (e / each))))) :arg2 (b2 / bill))
(l / look-01 :arg0 (h / he) :arg1 (t / they) :mod (a / again))
(m / multi-sentence :snt1 (r / report-01 :mode (i / interrogative) :arg0 (y / you)) :snt2 (g / give-01 :arg1 (a / action :ord (o / ordinal-entity :value 1)) :arg2 (d / date-entity :month 8 :day 14)))
(u / union-02 :arg1 (u2 / union-02) :arg2 (u3 / union-02 :arg1 (u4 / union-02) :arg2 (u5 / union-02)))
(a / announce-01 :arg1 (t / thing :arg1-of (i / intend-01 :arg0 (t2 / they))) :arg1-of (p / public-02) :time (y / year :mod (t3 / this)) :arg1-of (p2 / public-02))
(t / thing :arg0-of (d / detail-01) :arg0-of (d2 / detail-01) :location (p / photo :topic (r / room :arg1-of (g / guide-01 :arg2 (h / head :part-of (h2 / head :part-of (h3 / head :part-of (h4 / head :part-of (h5 / head :arg1-of (b / base-01 :location (s / sofa)))))))))))
(o / obligate-01 :arg2 (b / bring-01 :arg1 (h / he) :arg2 (b2 / before :op1 (c / court :mod (w / world))) :time (d / date-entity :month 9 :day 23)))
(a / and :op1 (d / docile :domain (s / society)) :op2 (m / mean-01 :arg1 (t / this) :arg2 (a2 / agree-01 :arg0 (e / everyone) :arg1 (a3 / and :op1 (p / person :arg0-of (o / own-01 :arg1 (h / he))) :op2 (p2 / person :arg0-of (h2 / have-org-role-91 :arg2 (h3 / head-of-state)))) :arg2 (s2 / serious-01 :arg1 (p3 / person) :arg2 (d2 / destiny :poss (g / group))))))
(s / say-01 :arg0 (p / person :name (n / name :op1 "Liksutov")) :arg1 (t / take-01 :arg0 (p2 / person) :arg1 (t2 / thing :arg1-of (d / decide-01) :mod (t3 / this)) :time (u / until :op1 (e / early))))
(s / suppose-01 :arg0 (g / government-organization :name (n / name :op1 "N-A") :mod (t / this)) :arg1 (c / cause-01 :arg0 (a / amr-unknown) :arg1 (h / have-03 :arg0 (m / meat) :arg1 (f / flavor :mod (e / extraordinary) :mod (s2 / such))) :manner (e2 / exclusive-02)))
FAILED_TO_PARSE#Number of opening and closing brackets doesn't match.
(c / cause-01 :arg0 (v / visit-01 :polarity - :arg0 (p / person :quant (m / many) :arg1-of (i / include-91 :arg2 (p2 / person)))))
(f / find-02 :arg0 (s / scientist :arg0-of (h / have-org-role-91 :arg2 (s2 / scientist))) :arg1 (e / experience-01 :arg0 (s3 / scientist) :arg1 (a / accuracy :mod (t / this)) :purpose (c / conduct-01 :arg1 (d / dispute-01) :time (c2 / conflict-01))) :prep-as (p / part :part-of (p2 / project :topic (r / research-01 :arg1 (n / nature :mod (a2 / anger-01))) :arg1-of (m / major-02) :topic (n2 / nature :poss (a3 / anger-01)))))
(b / break-01 :arg0 (p / person :arg0-of (h / hack-04)) :arg1 (p2 / passwords :mod (w / weak :degree (m / more))) :location (s / smartphones :name (n / name :op1 (i / icloud))) :time (a / after :op1 (a2 / appear-01 :arg1 (p3 / picture :poss (p4 / person) :mod (i2 / intimate)) :location (w2 / website :poss (p5 / person :name (n2 / name :op1 "Perez" :op2 "Hilton"))))))
(k / kill-01 :arg0 (o / officer :mod (p / police) :location (p2 / person :name (n / name :op1 "Ferguson") :location (s / state :name (n2 / name :op1 "Missouri")))) :arg1 (t / teenager :arg1-of (a / arm-01 :polarity -)) :time (e / early :op1 (m / month :mod (t2 / this)) :degree (m2 / more)))
(s / say-01 :arg0 (s2 / she) :arg1 (t / think-01 :polarity - :arg0 (i / i) :arg1 (a / and :op1 (t2 / talk-01 :arg0 (p / person :quant (l / lot) :arg0-of (t3 / talk-01 :arg1 (s3 / skin :mod (w / white)))) :arg2 (l2 / level :arg1-of (h / high-02 :degree (s4 / such)))) :op2 (t4 / thing :arg1-of (s5 / say-01 :arg0 (s6 / she))))) :location (f / feminist))
(k / keep-04 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (p2 / person :name (n / name :op1 "Atidzhe" :op2 "Alieva-Veli") :arg0-of (f / fund-01)) :arg2 (c / chief :mod (d / deputy)))) :arg1 (p3 / post) :mod (o / only))
(c / crash-01 :arg0 (h / he) :arg1 (p / plane :arg1-of (p2 / private-03)) :location (l / location :name (n / name :op1 "Colorado")))
(m / multi-sentence :snt1 (c / consider-01 :arg0 (g / government-organization :arg0-of (g2 / govern-01 :arg1 (l / location :name (n / name :op1 "Moscow" :op2 "City")))) :arg1 (i / introduce-02 :arg0 (g3 / government-organization) :arg1 (z / zone :arg1-of (p / pay-01 :arg3 (m2 / method :instrument-of (s / struggle-01)))))) :snt2 (r / refer-01 :arg0 (r2 / refer-01 :arg1 (p2 / person :arg0-of (h / have-org-role-91 :arg1 (c2 / city :name (n2 / name :op1 "Moscow")) :arg2 (m3 / mayor :mod (d / deputy)))) :arg2 (p3 / person :arg0-of (h2 / have-org-role-91 :arg1 (c3 / city :name (n3 / name :op1 "Moscow")) :arg2 (m4 / mayor :mod (d2 / deputy))))) :arg1 (p4 / person :arg0-of (h3 / have-org-role-91 :arg1 (c4 / city) :arg2 (m5 / mayor :mod (d3 / deputy)))) :manner (r3 / refer-01 :arg0 (p5 / person) :arg1 (p6 / person :arg0-of (h4 / have-org-role-91 :arg1 (c5 / city) :arg2 (m6 / mayor :mod (d4 / deputy)))))))
(t / thing :manner-of (r / remove-01))
(r / require-01 :arg0 (a / and :op1 (c / committee :arg0-of (h / have-org-role-91 :arg1 (c2 / committee :mod (e / executive)) :arg2 (c3 / committee :mod (e2 / executive)))) :op2 (s / safe-01 :arg1 (a2 / and :op1 (h2 / health) :op2 (s2 / safe-01)) :location (c4 / country :name (n / name :op1 "N-A")))) :arg1 (l / license-01 :arg1 (l2 / license-01 :arg1 (w / work-01 :arg0 (a3 / all)))))
(s / say-01 :arg0 (r / rule) :arg1 (o / obligate-01 :arg1 (s2 / she) :arg2 (o2 / obtain-01 :arg0 (s3 / she) :arg1 (p / permit-01 :arg1 (c / committee :mod (o3 / olympic) :poss (c2 / country :name (n / name :op1 "Ukraine"))) :arg1-of (s4 / special-02)))) :arg1-of (s5 / say-01 :arg0 (r2 / rule)))
(s / say-01 :arg1 (h / hugged :polarity - :arg0 (p / person :arg0-of (h2 / have-rel-role-91 :arg1 (i / i) :arg2 (f / father))) :arg1 (i2 / i) :time (e / ever)) :arg2 (p2 / person :name (n / name :op1 "Lenny" :op2 "Henry")))
(m / multi-sentence :snt1 (c / cause-01 :arg0 (c2 / cost-01 :arg1 (v / vehicle :mod (e / electric)) :arg1-of (h / high-02)) :arg1 (l / low-04 :arg1 (d / demand-01) :arg1-of (c3 / cause-01 :arg0 (c4 / cost-01 :arg1 (v2 / vehicle :mod (e2 / electric)) :arg2 (m2 / monetary-quantity :arg2-of (c5 / cost-01 :arg1 (v3 / vehicle :mod (e3 / electric)) :arg1-of (h2 / high-02))) :arg1-of (h3 / high-02))))) :snt2 (p / person :name (n / name :op1 "Sergey" :op2 "Amanov") :arg0-of (h4 / have-org-role-91 :arg1 (o / organization) :arg3 (l2 / lead-02 :arg0 (p2 / person)))))
(b / bring-01 :arg0 (a / and :op1 (m / manage-01 :arg0 (c / city :name (n / name :op1 "Moscow")) :arg1 (p / person :arg0-of (m2 / manage-01 :arg1 (o / organization :name (n2 / name :op1 "Investigative" :op2 "Committee") :part-of (o2 / organization :name (n3 / name :op1 "Investigative" :op2 "Committee") :mod (c2 / country :name (n4 / name :op1 "Russia"))))))) :op2 (p2 / person :arg0-of (h / have-org-role-91 :arg1 (o3 / organization) :arg3 (m3 / manage-01))) :op3 (p3 / person :arg0-of (h2 / have-org-role-91 :arg1 (o4 / organization) :arg3 (m4 / manage-01))) :op4 (p4 / person :arg0-of (h3 / have-org-role-91 :arg1 (o5 / organization) :arg3 (m5 / manage-01))) :op5 (p5 / person :arg0-of (h4 / have-org-role-91 :arg1 (o6 / organization) :arg3 (m6 / manage-01))) :op6 (p6 / person :arg0-of (h5 / have-org-role-91 :arg1 (o7 / organization) :arg3 (m7 / manage-01))) :op6 (p7 / person :arg0-of (h6 / have-org-role-91 :arg1 (o8 / organization) :arg3 (m8 / manage-01))) :op6 (p8 / person :arg0-of (h7 / have-org-role-91 :arg1 (o9 / organization) :arg3 (m9 / manage-01))) :op6 (p9 / person :arg0-of (h8 / have-org-role-91 :arg1 (o10 / organization) :arg3 (m10 / manage-01))) :op6 (p10 / person :arg0-of (h9 / have-org-role-91 :arg1 (o11 / organization) :arg3 (m11 / manage-01))) :op6 (p11 / person :arg0-of (h10 / have-org-role-91 :arg1 (o12 / organization) :arg3 (m12 / manage-01))) :op6 (p12 / person :arg0-of (h11 / have-org-role-91 :arg1 (o13 / organization) :arg3 (m13 / manage-01))) :op6 (p13 / person :arg0-of (h12 / have-org-role-91 :arg1 (o14 / organization) :arg3 (m14 / manage-01))) :op6 (p14 / person :arg0-of (h13 / have-org-role-91 :arg1 (o15 / organization) :arg3 (m15 / manage-01))) :op6 (p15 / person :arg0-of (h14 / have-org-role-91 :arg1 (o16 / organization) :arg3 (m16 / manage-01))) :op6 (p16 / person :arg0-of (h15 / have-org-role-91 :arg1 (o17 / organization) :arg3 (m17 / manage-01))) :op6 (p17 / person :arg0-of (h16 / have-org-role-91 :arg1 (o18 / organization) :arg3 (m18 / manage-01))) :op6 (p18 / person :arg0-of (h17 / have-org-role-91 :arg1 (o19 / organization) :arg3 (m19 / manage-01))) :op6 (p19 / person :arg0-of (h18 / have-org-role-91 :arg1 (o20 / organization) :arg3 (m20 / manage-01))) :op6 (p20 / person :arg0-of (h19 / have-org-role-91 :arg1 (o21 / organization) :arg3 (m21 / manage-01))) :op6 (p21 / person :arg0-of (h20 / have-org-role-91 :arg1 (o22 / organization) :arg3 (m22 / manage-01))) :op6 (p22 / person :arg0-of (h21 / have-org-role-91 :arg1 (o23 / organization) :arg3 (m23 / manage-01))) :op7 (p23 / person :arg0-of (h22 / have-org-role-91 :arg1 (d / department)))) :arg1 (m24 / message :topic (d2 / department)) :time (d3 / date-entity :day 29 :month 12 :year 2012))
(s / seem-01 :arg1 (s2 / something :arg1-of (r / resemble-01 :arg2 (e / evil :mod (e2 / extreme) :quant (d / degree :mod (e3 / extreme))))) :time (s3 / start-01 :arg1 (a / and :op1 (t / terrorist) :op2 (p / person :mod (r2 / religious-group :name (n / name :op1 "N-A"))) :op3 (p2 / person :arg0-of (h / have-rel-role-91 :arg1 (p3 / person) :arg2 (p4 / parent))) :op4 (p5 / person :arg0-of (h2 / have-rel-role-91 :arg1 (p6 / person) :arg2 (p7 / parent))) :op5 (p8 / person :arg0-of (h3 / have-rel-role-91 :arg1 (p9 / person) :arg2 (p10 / parent))))) :time (s4 / start-01 :arg1 (p11 / percentage-entity :value (N / N-A))))
(s / say-01 :arg0 (m / measure-02 :mod (t / this)) :arg1 (o / obligate-01 :arg2 (h / have-03 :arg0 (d / doctor :arg0-of (h2 / have-03 :arg1 (a / abortions))) :arg1 (a2 / authority) :purpose (r / receive-01 :arg0 (d2 / doctor) :arg1 (p / person :arg0-of (h3 / have-rel-role-91 :arg1 (d3 / doctor) :arg2 (p2 / patient))) :arg2 (p3 / person :arg0-of (h4 / have-rel-role-91 :arg1 (d4 / doctor) :arg2 (p4 / patient))) :location (h5 / hospital) :time (a3 / after :op1 (n / now) :quant (u / up-to :op1 (m2 / multiple :op1 (d5 / distance-quantity :quant (N / N-A) :unit (m3 / mile)))))))))
(l / likely-01 :arg1 (f / fall-01 :arg1 (l2 / level :arg1-of (t / target-01) :mod (p / person :arg0-of (c / consume-01)) :quant (p2 / percentage-entity :value (N / N-A))) :location (c2 / country :name (n / name :op1 "Russia"))) :arg1-of (c3 / cause-01 :arg0 (h / have-03 :arg0 (c4 / country :name (n2 / name :op1 "Russian" :op2 "Federation")) :arg1 (s / save-01 :arg0 (c5 / country) :mod (f2 / finance) :quant (m / more)))))
(p / person :arg0-of (f / farm-01 :arg2 (p2 / person :arg0-of (f2 / farm-01) :mod (c / continent :name (n / name :op1 "N-A")))))
(g / give-01 :arg0 (a / and :op1 (p / person :arg0-of (h / have-org-role-91 :arg1 (c / country :name (n / name :op1 "Ukraine")) :arg2 (d / diplomat))) :op2 (p2 / person :arg0-of (h2 / have-org-role-91 :arg1 (c2 / country :name (n2 / name :op1 "Ukraine")) :arg2 (d2 / diplomat)))) :arg1 (g2 / government-organization :arg0-of (g3 / govern-01 :arg1 (r / region))) :arg2 (a2 / and :op1 (a3 / agree-01 :arg1 (t / trade-01)) :op2 (p3 / policy :mod (f / foreign))) :purpose (a4 / and :op1 (a5 / agree-01 :arg1 (t2 / trade-01)) :op2 (p4 / policy :mod (f2 / foreign))) :arg1-of (c3 / cause-01 :arg0 (g4 / give-01 :arg0 (a6 / and :op1 (g5 / government-organization :arg0-of (g6 / govern-01 :arg1 (c4 / country))) :op2 (g7 / government-organization :arg0-of (g8 / govern-01 :arg1 (c5 / country)))) :arg1 (a7 / and :op1 (a8 / agree-01 :arg1 (t3 / trade-01)) :op2 (p5 / policy :mod (f3 / foreign)))) :arg2 (g9 / government-organization :arg0-of (g10 / govern-01 :arg1 (r2 / region))) :mod (e / essential)))
(h / head :mode (i / interrogative))
(a / and :op1 (p / person :name (n / name :op1 "Sobchak")) :op2 (p2 / person :name (n2 / name :op1 "Zhvanetsky") :arg0-of (h / have-org-role-91 :arg2 (b / breakfast))))
(c / contrast-01 :arg1 (s / speak-01 :polarity - :arg0 (s2 / she) :arg1 (i / it) :arg2 (l / life :location (w / world-region :name (n / name :op1 "North") :mod (c2 / cold)))) :arg2 (d / doubt-01 :polarity - :arg0 (s3 / she) :arg1 (r / resemble-01 :arg1 (i2 / it) :arg2 (r2 / resemble-01 :arg1 (i3 / it) :arg2 (r3 / resemble-01 :arg2 (i4 / it)) :mod (m / main)))))
(i / important :degree (m / most) :domain (p / place :location (h / here)))
(a / and :op1 (g / grow-01 :arg1 (r / rate-entity-91 :arg1 (u / under :op1 (m / monetary-quantity :quant 26.9 :unit (c / cent))) :arg2 (t / temporal-quantity :quant (N / N-A) :unit (y / year))) :arg4 (r2 / rate-entity-91 :arg1 (u2 / under :op1 (m2 / monetary-quantity :quant 26.9 :unit (c2 / cent))) :arg2 (t2 / temporal-quantity :quant (N2 / N-A) :unit (y2 / year))) :arg4 (r3 / rate-entity-91 :arg1 (u3 / under :op1 (m3 / monetary-quantity :quant 26.9 :unit (c3 / cent))) :arg2 (t3 / temporal-quantity :quant (N3 / N-A) :unit (y3 / year))) :arg4 (r4 / rate-entity-91 :arg1 (u4 / under :op1 (m4 / monetary-quantity :quant 26.9 :unit (c4 / cent))) :arg2 (t4 / temporal-quantity :quant (N4 / N-A) :unit (y4 / year)))) :op2 (r5 / raise-01 :arg0 (k / kopecks :quant 37,02) :arg1 (d / data :poss (e / exchange-01 :arg1 (s / stock :mod (c5 / city :name (n / name :op1 "Moscow")))))))
(q / question-01 :arg1 (p / possible-01 :arg1 (g / give-01 :arg0 (h / he) :arg1 (a / answer-01 :mod (p2 / partial)) :arg2 (h2 / he)) :arg2-of (f / fortunate-01 :polarity -)))
(r / require-01 :arg0 (o / organization :name (n / name :op1 "Executive" :op2 "Committee") :topic (a / and :op1 (h / health) :op2 (s / safe-01) :location (c / country :name (n2 / name :op1 "UK")))) :arg1 (c2 / company :arg0-of (w / work-01 :arg1 (l / license-01 :arg1 (a2 / and))) :quant (a3 / all)))
(a / and :op1 (g / go-02 :arg0 (i / i) :duration (m / multiple :op1 (t / temporal-quantity :quant (N / N-A) :unit (m2 / minute))) :time (b / before :op1 (r / run-02 :arg0 (t2 / terrorist) :destination (y / yard)))) :op2 (s / so :arg0 (t3 / terrorist) :arg1 (b2 / boy :mod (l / little) :mod (l2 / little)) :duration (t4 / temporal-quantity :quant (N2 / N-A) :unit (d / day))) :op3 (r2 / recalled :arg0 (s2 / she)))
FAILED_TO_PARSE#Number of opening and closing brackets doesn't match.
(c / contrast-01 :arg1 (p / possible-01 :arg1 (t / take-01 :arg0 (a / and :op1 (s / situation :mod (s2 / same)) :op2 (p2 / product :mod (o / other))) :arg1 (n / niches :quant 1))) :arg2 (c2 / case :polarity - :domain (t2 / this)))
(r / record :mod (a / attract-01 :arg0 (v / volume :quant-of (a2 / attract-01)) :arg1 (t / thing :arg2-of (f / fund-01 :arg1 (t2 / thing :arg2-of (f2 / fund-01 :arg1 (s / system :arg0-of (p / pay-01 :arg1 (m / monetary-quantity :quant 17.9 :unit (d / dollar :mod (c / country :name (n / name :op1 "US")))))) :time (i / initial)))))) :mod (s2 / still) :mod (s3 / still))
(a / advise-01 :arg2 (t / thing :arg2-of (a2 / advise-01)) :time (v / visit-01 :arg0 (f / firm :mod (a3 / agrokompleks) :part-of (f2 / firm :mod (a4 / agrokompleks)))))
(p / play-11 :arg0 (j / jazz) :arg1-of (h / have-concession-91 :arg2 (p2 / prohibit-01 :polarity - :arg1 (j2 / jazz) :arg1-of (e / explicit-03))))
(e / explain-01 :arg0 (p / person :name (n / name :op1 "Galkin")) :arg1 (l / laziness :arg0 (c / chef :mod (c2 / chef)) :arg1 (r / recipe :mod (n2 / new)) :arg2 (f / fish :mod (e2 / east :mod (f2 / far)))))
(b / buy-01 :arg1 (b2 / buy-01 :arg1-of (u / use-01)))
(g / give-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg2 (h2 / hero :mod (c / city-district :name (n / name :op1 "Hollywood")))) :quant (m / many)) :arg1 (a / and :op1 (p2 / person :arg0-of (h3 / have-org-role-91 :arg2 (h4 / hero :mod (c2 / city-district :name (n2 / name :op1 "Hollywood"))))) :op2 (p3 / person :arg0-of (h5 / have-org-role-91 :arg1 (a2 / and :op1 (p4 / person :name (n3 / name :op1 "Superman")) :op2 (p5 / person :name (n4 / name :op1 "Batman")) :op3 (p6 / person :name (n5 / name :op1 "Batman")) :op4 (p7 / person :name (n6 / name :op1 "Dick" :op2 "Tracy")) :op5 (p8 / person :name (n7 / name :op1 "Thor"))) :arg2 (a3 / and :op1 (h6 / hulking) :op2 (s / spider-man))))) :arg2 (a4 / and :op1 (p9 / person :arg0-of (h7 / have-org-role-91 :arg2 (c3 / city-district :name (n8 / name :op1 "Hollywood")))) :op2 (p10 / person :arg0-of (h8 / have-org-role-91 :arg2 (s2 / spinach)))))
(t / test-01 :arg0 (b / bucket :consist-of (i / ice) :consist-of (w / water)) :arg1 (p / pain-01 :arg1 (w2 / water)))
(s / say-01 :arg0 (p / person :name (n / name :op1 "Viktor" :op2 "Zukin") :arg0-of (h / have-org-role-91 :arg1 (m / madrassa) :arg2 (c / ceo))) :arg1 (a / amount :quant-of (a2 / amount :quant 1.6 :mod (r / ruble))))
(p / publish-01 :arg1 (t / thing :arg1-of (w / write-01 :arg0 (p2 / person :mod (a / atheist))) :arg1-of (w2 / write-01 :arg0 (r / rich))) :mod (j / just) :source (a2 / account :poss (i / i)))
(r / rule-01 :arg0 (c / court) :arg2 (r2 / replace-01 :arg0 (c2 / court) :arg1 (t / term :mod (i / imprison-01)) :arg2 (t2 / term :duration (t3 / temporal-quantity :quant (N / N-A) :unit (y / year))) :source (r3 / regime :mod (g / general-02))) :time (d / date-entity :month 8 :day 29))
(c / continue-01 :arg1 (' / '' :arg1 (e / exchange-01 :arg1 (s / stock :mod (c2 / city :name (n / name :op1 "Moscow")))) :arg1-of (s2 / sharp-02)) :time (o / open-01 :arg1 (e2 / exchange-01 :arg1 (s3 / stock :location (c3 / city)))) :arg1-of (s4 / sharp-02))
(a / acquire-01 :arg0 (h / home) :arg1 (m / match-03 :mod (p / proper) :mod (p2 / proper)) :time (b / before :op1 (n / now) :quant (m2 / multiple :op1 3)))
(e / easy-05 :arg1 (r / respond-01 :arg1 (t / thing :arg2-of (s / sanction-02))) :mod (a / also) :arg1-of (e2 / easy-05 :degree (q / quite)) :mod (a2 / also))
(s / say-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (o / organization :name (n / name :op1 "Chelsea")) :arg2 (m / midfielder))) :arg1 (p2 / person :name (n2 / name :op1 "Marco" :op2 "van" :op3 "Ginkel") :arg0-of (h2 / have-org-role-91 :arg1 (o2 / organization) :arg3 (l / lead-02 :arg0 (p3 / person)))) :time (s2 / season :mod (u / upcoming)) :arg1-of (s3 / say-01 :arg0 (o3 / organization :name (n3 / name :op1 "Milan" :op2 "Channel"))))
(a / and :op1 (c / combine-01 :arg0 (t / tragedy) :arg1 (a2 / and :op1 (e / east) :op2 (w / world-region :name (n / name :op1 "West"))) :arg2 (a3 / and :op1 (e2 / east) :op2 (w2 / world-region :name (n2 / name :op1 "West"))) :time (t2 / then)) :op2 (h / hope-01 :arg0 (t3 / tragedy) :arg1 (f / future) :prep-under (c2 / condition-01 :arg1 (g / grief :mod (h2 / heaviest)))))
(m / multi-sentence :snt1 (l / look-01 :mode (i / imperative) :arg0 (y / you) :arg1 (w / wall :poss (e / environmentalist))) :snt2 (t / thick :domain (t2 / they) :degree (d / distance-quantity :quant (N / N-A) :unit (m2 / meter))))
(h / have-concession-91 :arg1 (e / easy-05 :polarity - :arg1 (c / catch-up-04 :arg1 (a / and :op1 (c2 / company :name (n / name :op1 "Ebay") :arg0-of (r / rival-01 :arg1 (c3 / country :name (n2 / name :op1 "N-A")))) :op2 (c4 / company :arg0-of (r2 / rival-01 :arg1 (c5 / country)) :mod (e2 / even) :mod (e3 / even)))) :arg2 (c6 / catch-up-04 :arg1 (i / internet :poss (c7 / country)))))
(m / mention-01 :arg0 (i / it) :arg1 (i2 / increase-01 :arg1 (n / number :quant-of (p / person :arg0-of (l / live-01) :location (a / area :mod (a2 / area :polarity -)))) :location (i3 / in-front-of :op1 (g / government-organization :name (n2 / name :op1 "House") :arg0-of (l2 / live-01 :location (i4 / in-front-of :op1 (g2 / government-organization :arg0-of (g3 / govern-01 :arg1 (c / country :name (n3 / name :op1 "N-A"))))))))) :arg1-of (c2 / cause-01 :arg0 (h / hinder-01 :arg0 (p2 / popularity) :arg1 (t / threaten-01 :arg1 (i5 / industry :mod (g4 / garden :mod (u / ultra))) :arg2 (m2 / monetary-quantity :quant 5 :unit (d / dollar :mod (c3 / country)))))))
(t / talk-01 :polarity - :arg0 (i / i) :arg2 (h / he) :time (e / ever))
(r / return-05 :arg1 (s / ship-01 :arg1 (b / beef) :arg2 (a / and :op1 (c / country :name (n / name :op1 "Argentina")) :op2 (l / local-region :name (n2 / name :op1 "N-A")) :op3 (c2 / country :name (n3 / name :op1 "New" :op2 "Zealand")))))
(a / and :op1 (v / versatile :degree (m / most) :domain (a2 / anger-01)) :op2 (f / functional :arg1 (h / human)))
(o / or :op1 (l / law) :op2 (p / pressure-01) :mod (a / again))
(c / contrast-01 :arg1 (n / need-01 :arg0 (i / i) :arg1 (c2 / cautious-02 :arg0 (i2 / i) :arg1 (k / knee :arg1-of (d / damage-01 :arg1-of (p / possible-01 :polarity -))))) :arg2 (o / okay-04 :arg1 (i3 / i) :time (n2 / now)))
(s / sure-02 :arg1 (b / be-located-at-91 :polarity - :arg1 (y / you) :arg2 (h / hand)))
(u / use-01 :arg0 (a / and :op1 (p / person :arg0-of (s / study-01)) :op2 (n / nurse) :op3 (d / doctor) :op4 (l / lad)) :arg1 (t / tunnel :mod (t2 / this)))
(o / old :polarity - :domain (p / person :name (n / name :op1 "Andrew" :op2 "Lawson")))
(i / import-01 :arg1 (f / fish :mod (w / wield)) :arg2 (a / about :op1 (m / mass-quantity :quant (N / N-A) :unit (t / ton))))
(s / significant-02 :polarity - :arg1 (u / updates) :frequency (s2 / sometimes))
(c / contrast-01 :arg2 (s / sure-02 :arg0 (i / i) :arg1 (p / possible-01 :arg1 (a / and :op1 (h / have-03 :arg0 (y / you) :arg1 (t / they)) :op2 (w / win-01 :arg0 (y2 / you))))))
(s / say-01 :arg0 (s2 / study) :arg1 (c / compare-01 :arg1 (g / grow-01 :arg1 (p / phrase) :location (z / zone :mod (e / euro))) :arg2 (l / low-04 :degree (m / more)) :time (a / after :op1 (n / now) :quant (t / temporal-quantity :quant (N / N-A) :unit (m2 / month)))))
(r / remember-01 :arg0 (i / i) :arg1 (p / person :mod (t / that) :arg0-of (h / have-rel-role-91 :arg1 (i2 / i) :arg2 (c / child)) :arg1-of (p2 / play-01 :arg0 (i3 / i) :location (c2 / court) :arg1-of (c3 / cause-01 :arg0 (g / get :polarity - :arg0 (i4 / i))))))
(n / need-01 :arg1 (a / and :op1 (d / develop-02 :arg1 (c / criteria :purpose (a2 / assess-01 :arg1 (v / vehicle :mod (e / electric))))) :op2 (d2 / decide-01 :arg1 (t / thing :manner-of (a3 / and :op1 (u / use-01 :arg1 (u2 / use-01 :arg1 (v2 / vehicle))) :op2 (p / produce-01 :arg1 (v3 / vehicle)))))))
(m / multi-sentence :snt1 (e / estimate-01 :arg0 (y / you) :arg1 (t / thing :arg2-of (r / result-01 :arg1 (t2 / thing :arg2-of (r2 / result-01 :arg1 (y2 / you))))) :arg2 (t3 / thing :arg2-of (r3 / result-01 :arg1 (t4 / thing :arg2-of (r4 / result-01 :arg1 (t5 / thing :arg2-of (r5 / result-01 :arg1 (t6 / thing :arg2-of (r6 / result-01 :arg1 (t7 / thing :arg2-of (r7 / result-01 :arg1 (t8 / thing :arg2-of (r8 / result-01 :arg1 (t9 / thing :arg2-of (r9 / result-01 :arg1 (t10 / thing :arg2-of (r10 / result-01 :arg1 (t11 / thing :arg2-of (r11 / result-01 :arg1 (t12 / thing :arg2-of (r12 / result-01 :arg1 (t13 / thing :arg2-of (r13 / result-01 :arg1 (t14 / thing :arg2-of (r14 / result-01 :arg1 (t15 / thing :arg2-of (r15 / result-01 :arg1 (t16 / thing :arg2-of (r16 / result-01 :arg1 (t17 / thing :arg2-of (r17 / result-01 :arg1 (t18 / thing :arg2-of (r18 / result-01 :arg1 (t19 / thing :arg2-of (r19 / result-01 :arg1 (t20 / thing :arg2-of (r20 / result-01 :arg1 (t21 / thing :arg2-of (r21 / result-01 :arg1 (t22 / thing :arg2-of (r22 / result-01 :arg1 (t23 / thing :arg2-of (r23 / result-01 :arg1 (t24 / thing :arg2-of (r24 / result-01 :arg1 (t25 / thing :arg2-of (r25 / result-01 :arg1 (t26 / thing :arg2-of (r26 / result-01 :arg1 (y3 / year :mod (t27 / this))))))))))))))))))))))))))))))))))))))))))))))))))))
(t / tense :domain (s / situation :location (l / location :name (n / name :op1 "Lesotho"))) :degree (v / very) :time (s2 / since :op1 (s3 / suspend-01 :arg0 (p / person :name (n2 / name :op1 "Thabane")) :arg1 (s4 / session :mod (p2 / parliament)) :arg1-of (c / cause-01 :arg0 (r / result-01 :arg1 (t2 / thing :arg1-of (d / differ-02)) :arg2 (g / government-organization :arg0-of (g2 / govern-01)))))))
(s / something :polarity - :arg1-of (k / know-02 :arg2 (a / and :op1 (c / child) :op2 (r / recommend-01 :arg1 (s2 / survive-01 :arg0 (t / they))))) :domain (t2 / this))
(c / contrast-01 :arg2 (w / win-01 :arg0 (c2 / country :name (n / name :op1 "N-A")) :arg1 (s / silver :poss (t / team))))
(a / and :op1 (e / explain-01 :arg0 (c / country :mod (t / this)) :arg1 (r / right-05 :arg1 (u / union :mod (l / labor)) :arg2 (o / organization :mod (l2 / labor)))) :op2 (p / participate-01 :arg0 (u2 / union-02 :arg1 (g / government-organization :arg0-of (g2 / govern-01) :mod (t2 / this))) :arg1 (p2 / partner-01 :arg0 (a2 / and :op1 (c2 / corporation) :op2 (a3 / agency :mod (g3 / government-organization :arg0-of (g4 / govern-01)))) :mod (c3 / collective)) :arg1-of (e2 / equal-01 :arg2 (p3 / partner-01 :arg0 (a4 / and :op1 (c4 / corporation) :op2 (a5 / agency :mod (g5 / government-organization :arg0-of (g6 / govern-01)))) :mod (c5 / collective)))) :time (a6 / advise-01 :arg0 (c6 / country :mod (t3 / this)) :arg2 (c7 / country :mod (o2 / other))))
(c / contrast-01 :arg1 (l / let-01 :arg0 (t / terrorist) :arg1 (g / go-01 :arg1 (t2 / terrorist))) :arg2 (l2 / leave-14 :arg0 (t3 / terrorist) :arg1 (a / and :op1 (p / person :arg0-of (h / have-rel-role-91 :arg1 (p2 / person) :arg2 (m / mother))) :op2 (p3 / person :arg0-of (h2 / have-rel-role-91 :arg1 (p4 / person) :arg2 (s / sister))) :op3 (p5 / person :arg0-of (h3 / have-rel-role-91 :arg1 (p6 / person) :arg2 (s2 / sister)))) :location (s3 / sport) :location (s4 / sport)))
(c / cause-01 :arg0 (g / government-organization :name (n / name :op1 "Foreign" :op2 "Ministry") :mod (c2 / country :name (n2 / name :op1 "US"))) :arg1 (h / highest-ranking :arg0 (a / and :op1 (p / person :arg0-of (h2 / have-org-role-91 :arg1 (c3 / country) :arg2 (d / diplomat))) :op2 (p2 / person :arg0-of (h3 / have-org-role-91 :arg1 (c4 / country) :arg2 (d2 / diplomat)))) :arg1 (a2 / and :op1 (p3 / person :arg0-of (h4 / have-org-role-91 :arg1 (c5 / country) :arg2 (d3 / diplomat))) :op2 (p4 / person :arg0-of (s / spy-01 :arg1 (c6 / country)) :location (c7 / country :name (n3 / name :op1 "Turkey"))))))
(p / possible-01 :polarity - :arg1 (s / say-01 :arg0 (y / you) :arg1 (n / no)))
(c / complain-01 :arg0 (p / person :arg0-of (s / supply-01 :arg1 (c2 / country :name (n / name :op1 "N-A")))) :mod (m / main) :arg1-of (c3 / cause-01 :arg0 (p2 / possible-01 :polarity - :arg1 (s2 / sustainable :arg0 (c4 / company :arg0-of (s3 / supply-01)) :arg1 (a / and :op1 (c5 / caliber) :op2 (q / quality))))))
(s / summit :location (m / military :name (n / name :op1 "NATO")) :ord (o / ordinal-entity :value 1))
(c / contrast-01 :arg1 (r / retroroca :arg0 (p / person :arg0-of (s / speak-01)) :arg1 (d / difficult :mod (g / great)) :arg2 (g2 / go-02 :arg0 (p2 / person) :arg4 (b / beyond :op1 (p3 / paradigm :mod (p4 / post-modern))))) :arg2 (d2 / depend-01 :polarity - :arg0 (d3 / depend-01 :polarity - :arg0 (u / unit :arg0-of (d4 / depend-01 :polarity -)) :arg1 (u2 / unit :mod (c2 / creative))) :mod (g3 / great)))
(l / live-01 :arg1-of (l2 / long-03 :degree (s / so)))
(a / and :op1 (i / include-91 :arg1 (c / company :mod (c2 / country :name (n / name :op1 "China")) :arg2-of (i2 / include-91 :arg1 (a2 / and :op1 (p / person :arg0-of (d / develop-02 :arg1 (p2 / properties :mod (c3 / commerce) :mod (c4 / commerce) :poss (c5 / country)))) :op2 (p3 / person :arg0-of (d2 / develop-02 :arg1 (o / organization :name (n2 / name :op1 "Dalian" :op2 "Wanda" :op3 "Group")) :mod (l / large :degree (m / most)))) :op3 (o2 / organization :name (n3 / name :op1 "Tencent" :op2 "Holdings") :arg0-of (h / have-org-role-91 :arg1 (o3 / organization) :arg3 (l2 / lead-02 :arg0 (p4 / person) :arg1 (o4 / organization)))) :op4 (o5 / organization :name (n4 / name :op1 "Tencent" :op2 "Holdings") :arg0-of (h2 / have-org-role-91 :arg1 (o6 / organization) :arg3 (l3 / lead-02 :arg0 (p5 / person) :arg1 (o7 / organization)))) :op5 (o8 / organization :name (n5 / name :op1 "Tencent" :op2 "Holdings") :arg0-of (h3 / have-org-role-91 :arg1 (o9 / organization) :arg3 (l4 / lead-02 :arg0 (p6 / person) :arg1 (o10 / organization))))) :mod (l5 / large :degree (m2 / most) :compared-to (a3 / and :op1 (p7 / person :arg0-of (d3 / develop-02 :arg1 (p8 / properties :mod (c6 / commerce)))) :op2 (p9 / person :arg0-of (h4 / have-org-role-91 :arg1 (o11 / organization) :arg3 (l6 / lead-02 :arg0 (p10 / person)))) :op3 (o12 / organization :name (n6 / name :op1 "Tencent" :op2 "Holdings") :arg0-of (h5 / have-org-role-91 :arg1 (o13 / organization) :arg3 (l7 / lead-02 :arg0 (p11 / person) :arg1 (o14 / organization))))) :mod (l8 / large :degree (m3 / most)))))) :op2 (c7 / create-01 :arg0 (c8 / company) :arg1 (c9 / company :arg0-of (c10 / compete-02 :arg1 (c11 / company) :arg3 (m4 / market :mod (t / trade-01) :mod (o15 / online) :prep-with (o16 / organization :name (n7 / name :op1 "Alibaba"))) :arg1-of (p12 / possible-01)))))
(a / and :op1 (g / go-02 :arg0 (p / person :mod (c / country :name (n / name :op1 "N-A"))) :arg4 (h / here)) :op2 (s / suffer-01 :arg0 (p2 / person) :arg1 (r / right-05 :arg1 (p3 / person) :arg2 (l / live-01 :arg0 (p4 / person) :location (h2 / house :location (l2 / location :name (n2 / name :op1 "Ufa")) :mod (o / old :degree (m / most)))))) :op3 (r2 / remember-01 :arg0 (p5 / person :arg0-of (h3 / have-org-role-91 :arg2 (c2 / commander))) :arg1 (p6 / person :name (n3 / name :op1 "Alexander" :op2 "Suvorov") :arg0-of (h4 / have-org-role-91 :arg2 (c3 / commander)))))
(p / propose-01 :arg0 (l / law) :arg1 (c / create-01 :arg1 (l2 / list-01 :arg1 (a / and :op1 (l3 / list-01 :arg1-of (c2 / call-01 :manner (s / so))) :op2 (s2 / system :name (n / name :op1 (? / ???????????) :op2 (i / information) :op3 (i2 / information))) :op4 (s3 / system :name (n2 / name :op1 (v / violators) :op2 (r / rights)) :mod (d / data :arg1-of (p2 / personal-02)))))) :mod (a2 / also))
(d / deliver-01 :arg0 (d2 / dervish :name (n / name :op1 (' / '') :op2 (d3 / dervish))) :arg1 (a / assist-01 :arg2 (m / military :mod (c / country :name (n2 / name :op1 "USSR")))) :arg2 (a2 / and :op1 (c2 / country :name (n3 / name :op1 "United" :op2 "States")) :op2 (c3 / country :name (n4 / name :op1 "Britain"))))
(a / and :op1 (r / retreat :polarity - :arg1 (? / ?????? :quant (-2 / -2)) :mod (e / even :polarity -)) :op2 (c / capitulation :arg1 (c2 / capitulation :mod (s / style :mod (r2 / radical))) :time (b / before :op1 (t / tradition :poss (c3 / comic)))))
(p / person :quant 2 :arg0-of (h / have-rel-role-91 :arg1 (p2 / person) :arg2 (c / child)) :location (a / around :op1 (w / we)))
(r / remember-01 :mode (i / imperative) :arg0 (y / you) :arg1 (t / talk-01 :arg0 (w / we) :arg1 (m / mansion :arg0-of (h / hold-01 :arg1 (f / fund-01 :arg1 (c / centre :location (c2 / city)) :location (s / street)) :arg1-of (g / grant-01 :arg2 (p / product-of :op1 19 :op2 2011))))))
(h / have-03 :arg0 (w / we :arg1-of (i / include-91 :arg2 (s / suffer-01 :arg1-of (h2 / have-03 :arg0 (w2 / we))) :arg3 (m / most))) :arg1 (l / leg :part-of (l2 / legs)) :manner (l3 / literal))
(a / and :op1 (m / mean-01 :arg1 (e / economy :arg0-of (r / restore-01)) :arg2 (p / person :quant (m2 / more) :arg0-of (h / have-rel-role-91 :arg1 (e2 / economy) :arg2 (u / uncle)))) :op2 (a2 / and :op1 (s / sell-01) :op2 (j / job :mod (n / new)) :domain (e3 / economy)))
(s / show-01 :arg0 (t / they) :arg1 (f / fist :arg1 (s2 / she)) :condition (c / care-04 :polarity - :arg0 (t2 / they)))
(c / cause-01 :arg0 (p / possible-01 :polarity - :arg1 (e / explain-01 :arg0 (p2 / person :arg0-of (h / have-org-role-91 :arg1 (o / organization :name (n / name :op1 "Competition" :op2 "Directorate")) :arg2 (o2 / official))) :arg1 (t / thing :arg0-of (c2 / cause-01 :arg1 (p3 / possible-01 :polarity - :arg1 (e2 / explain-01 :arg0 (d / department :part-of (d2 / department :arg1-of (l / legal-02)) :location (p4 / person :name (n2 / name :op1 "Maxim" :op2 "Titov")))))))) :arg1 (c3 / call-02 :medium (p5 / phone))))
(c / choose-01 :arg1 (a / area :location-of (c2 / construct-01 :arg1 (r / road))))
(( / ( :( (n / name) :op1 "Tony" :op2 "Stewart")
(r / reach-01 :arg0 (i / income :source (s / service :mod (p / person :arg0-of (h / have-org-role-91 :arg1 (o / organization :name (n / name :op1 "Netflix")))))) :arg1 (m / monetary-quantity :quant 1.2 :unit (d / dollar)) :arg2 (m2 / monetary-quantity :quant 837 :unit (d2 / dollar)) :time (y / year :mod (l / last) :mod (a / almost)) :arg1-of (c / cause-01 :arg0 (d3 / drop-01 :arg1 (i2 / income :source (o2 / office :mod (p2 / person :arg0-of (h2 / have-org-role-91 :arg1 (o3 / organization :name (n2 / name :op1 "Netflix")))))) :time (c2 / current))))
(s / say-01 :arg0 (h / he) :arg1 (l / leave-17 :arg1 (c / child :quant 11 :arg1-of (i / include-91 :arg2 (c2 / child :arg0-of (h2 / have-rel-role-91 :arg1 (s2 / school) :arg2 (c3 / child))))) :location (r / region :mod (o / other) :quant (b / between :op1 11 :op2 20)) :location (c4 / country :name (n / name :op1 "Russia"))))
(a / and :op2 (c / clear-06 :polarity - :arg1 (o / or :op1 (w / win-01 :arg0 (p / person :arg0-of (d / drive-01))) :op2 (c2 / convince-01 :arg0 (p2 / person) :arg1 (p3 / person) :arg2 (r / rely-01 :arg0 (p4 / person) :arg1 (p5 / person :arg0-of (d2 / drive-01)))))))
(a / act-01 :arg0 (p / person :name (n / name :op1 "Bilyal")) :mod (a2 / also) :location (s / styles :mod (b / both)))
(a / and :op2 (p / predict-01 :arg1 (p2 / possible-01 :arg1 (r / rise-01 :arg1 (n / number :quant-of (n2 / number :mod (t / this))) :arg4 (p3 / person :quant 850)))))
(c / cause-01 :arg1 (b / believe-01 :arg0 (i / i) :arg1 (b2 / be-located-at-91 :arg1 (c2 / company :arg0-of (r / represent-01) :mod (s / such)) :arg2 (l / level :mod (g / good)))))
FAILED_TO_PARSE#Couldn't convert to full AMR graph.
(a / acknowledge-01 :arg0 (o / organization :name (n / name :op1 "Marks" :op2 "&" :op3 "Spencer")) :arg1 (a2 / acknowledge-01 :arg0 (o2 / organization) :arg1 (c / contact-01 :arg0 (p / person :name (n2 / name :op1 "Dzhenis" :op2 "Idelson")) :arg1 (p2 / person))) :prep-in (j / june :mod (t / this)))
(( / ( :( (n / name) :op1 "Igor" :op2 "Kosten")
(b / bear-02 :arg1 (t / they) :mod (a / also))
(a / and :op1 (b / be-located-at-91 :arg1 (i / i) :arg2 (t / theatre :mod (n / nation))) :op2 (p / possible-01 :polarity - :arg1 (b2 / believe-01 :arg0 (i2 / i) :arg1 (i3 / it) :time (u / until :op1 (e / end-01)) :mod (j / just))))
(a / and :op1 (r / rise-01 :arg1 (n / number :quant-of (p / person :arg0-of (u / use-01 :arg1 (i / internet)) :mod (c / country :name (n2 / name :op1 "India")))) :arg4 632) :op2 (b / bring-up-02 :arg0 (d / data :poss (p2 / person)) :arg1 (s / statistic :mod (o / official)) :degree (m / more :compared-to (p3 / population :poss (c2 / country :mod (a2 / any) :location (w / world) :arg2-of (e / except-01 :arg1 (c3 / country :name (n3 / name :op1 "India"))))))))
(s / say-01 :arg0 (p / person :arg1-of (e / expert-01 :arg2 (p2 / person :name (n / name :op1 "Julian" :op2 "Pitot") :arg0-of (h / have-org-role-91 :arg1 (p3 / person :name (n2 / name :op1 "Julian" :op2 "Pitot") :arg0-of (h2 / have-org-role-91 :arg2 (p4 / professor))) :arg2 (e2 / expert-01 :arg1 (p5 / person) :arg2 (e3 / expert-01 :arg1 (p6 / person) :arg2 (p7 / person :arg1-of (e4 / expert-01))))) :arg0-of (h3 / have-org-role-91 :arg2 (p8 / professor)))) :arg0-of (h4 / have-org-role-91 :arg2 (p9 / professor))) :arg1 (d / die-01 :arg1 (p10 / person :quant (a / about :op1 90000)) :time (r / recommend-01 :arg1 (c / come-01 :arg1 (t / type :quant (b / between :op1 1970 :op2 90000))))))
(g / grow-01 :arg1 (b / basket :quant 28) :arg2 (l / level :poss (a / and :op1 (c / close-01 :time (p / previous)) :op2 (c2 / cost-01 :arg2 42,28))))
(s / say-01 :arg0 (p / person :arg0-of (o / own-01 :arg1 (s2 / shop :mod (f / fish)))) :arg1 (' / '' :arg0 (p2 / person :arg0-of (o2 / own-01 :arg1 (s3 / shop :mod (f2 / fish)))) :arg1 (p3 / person :name (n / name :op1 "Phillip" :op2 "Galkin") :arg0-of (o3 / own-01 :arg1 (s4 / shop :mod (f3 / fish)))) :arg1-of (e / easy-05)))
(r / remain-01 :arg1 (b / background :mod (g / geopolitics)))
(m / multi-sentence :snt1 (p / possible-01 :arg1 (c / close-10 :arg1 (s / slash :op1 (n / nedozrevshie) :op2 (p2 / perejarene)) :arg2 (e / eye :part-of (y / you)) :mod (s2 / still))) :snt2 (c2 / cause-01 :arg0 (a / amr-unknown) :arg1 (l / look-02 :arg0 (a2 / amr-unknown) :arg1 (a3 / and :op1 (u / unfroze :arg0 (h / he) :arg1 (l2 / life :poss (h2 / he))) :op2 (m2 / manage-02 :arg0 (t / they) :arg1 (a4 / and :op1 (u2 / unfroze) :op2 (b / boil))) :frequency (s3 / several)))))
(h / help-01 :polarity - :arg0 (w / we) :arg1 (w2 / woman :arg1-of (b / black-05)) :arg2 (p / protect-01 :arg0 (w3 / woman) :arg1 (a / and :op1 (p2 / person :arg0-of (h2 / have-rel-role-91 :arg1 (w4 / woman) :arg2 (h3 / husband))) :op2 (p3 / person :arg0-of (h4 / have-rel-role-91 :arg1 (w5 / woman) :arg2 (s / son))))) :time (e / ever))
(d / do-02 :polarity - :arg0 (w / we) :arg1 (g / good :mod (a / any)))
(s / series :name (n / name :op1 (t / tournaments) :op2 (b / begins)) :mod (h / humanitarian) :quant (s2 / series) :time (a / already) :time (a2 / after :op1 (n2 / now) :quant (f / few :op1 (t2 / temporal-quantity :quant (N / N-A) :unit (w / week)))))
(m / multi-sentence :snt1 (i / instead-of-91 :arg1 (t / turn-02 :arg0 (h / he) :arg1 (p / platform) :arg2 (p2 / platform) :arg1-of (q / quick-02)) :arg2 (t2 / turn-02 :arg0 (h2 / he) :arg1 (p3 / platform) :arg2 (p4 / platform) :time (m2 / moment :mod (r / real))) :arg1-of (q2 / quick-02)) :snt2 (s / say-01 :arg0 (p5 / person :arg0-of (h3 / have-org-role-91 :arg1 (b / business))) :arg1 (i2 / insiders :arg0 (p6 / person) :arg1 (p7 / platform))))
(v / value-01 :arg1 (s / square :location (i / in-front-of :op1 (c / city :name (n / name :op1 "Moscow") :location (c2 / city :name (n2 / name :op1 "Moscow"))))) :arg2 (a / and :op1 (g / green :mod (b / business) :mod (b2 / business)) :op2 (t / tree)) :location (i2 / in-front-of :op1 (s2 / square)))
(c / contrast-01 :arg2 (s / sure-02 :arg0 (i / i) :arg1 (m / mr :arg1 (p / person :name (n / name :op1 "Litvinenko")) :arg1-of (s2 / sure-02)) :prep-in (i2 / initiative :mod (t / this))))
(a / and :op1 (s / suffer-01 :arg0 (p / person) :arg1 (m / much :degree (s2 / so))) :op2 (n / need-01 :arg0 (p2 / person) :arg1 (h / help-01) :time (n2 / now)) :op3 (s3 / say-01 :arg0 (p3 / person) :arg1 (t / thing :time (r / read-01 :arg0 (p4 / person) :arg1 (p5 / person :name (n3 / name :op1 "Bill")) :time (y / year :mod (l / last)) :ord (o / ordinal-entity :value 2)))))
(e / exhibit-01 :arg1 (t / thing :arg1-of (a / achieve-01 :arg0 (e2 / economy :poss (c / country :name (n / name :op1 "N-A")) :mod (n2 / nation)))))
(s / say-01 :arg0 (p / person :name (n / name :op1 "Graham" :op2 "Abbott")) :arg1 (t / take-10 :arg0 (r / realize-01 :arg1 (t2 / this)) :arg1 (t3 / take-10 :arg0 (t4 / this) :arg1 (t5 / time :arg1-of (l / long-03) :mod (q / quite)))))
(c / contrast-01 :arg2 (s / say-01 :arg0 (s2 / speak-01) :arg1 (g / go-01 :arg1 (c2 / case :mod (o / only) :topic (c3 / case-03 :time (a / accident))) :time (i / issue-01 :arg1 (s3 / state-01 :arg0 (p / police :mod (t / traffic)) :manner (p2 / participate-01 :polarity - :arg0 (p3 / police :mod (t2 / traffic))))))))
(i / include-91 :arg3 1 :arg1 (s / state :name (n / name :op1 "Virginia")) :arg2 (t / thing :arg1-of (t2 / tax-01 :arg3 (t3 / thing :arg1-of (t4 / tax-01 :arg3 (r / rate-entity-91 :arg1 (r2 / rate :mod (c / corporation) :mod (s2 / same)) :arg2 (r3 / rate-entity-91 :arg1 (r4 / rate :mod (c2 / corporation :mod (s3 / same))) :arg2 (r5 / rate-entity-91 :arg1 (r6 / rate :mod (c3 / corporation :mod (s4 / same))) :arg2 (r7 / rate-entity-91 :arg1 (r8 / rate :mod (c4 / corporation)) :arg2 (r9 / rate-entity-91 :arg1 1 :arg2 (t5 / temporal-quantity :quant (N / N-A) :unit (m / month))))))))))))
(l / learn-01 :arg0 (p / person :name (n / name :op1 "Hammett") :arg0-of (h / have-org-role-91 :arg1 (c / city-district :name (n2 / name :op1 "N-A") :poss (p2 / person)) :arg2 (p3 / personnel))) :arg1 (w / work-09 :arg1 (i / it) :location (f / front)))
(c / cause-01 :arg0 (m / mechanical :arg1 (t / thing :manner-of (m2 / maintain-01 :arg0 (w / we) :arg1 (l / life :poss (w2 / we))))) :arg1 (d / danger :mod (p / particular) :domain (m3 / mesothelioma) :arg1-of (c2 / cause-01 :arg0 (a / and :op1 (m4 / maintain-01 :arg0 (w3 / we) :arg1 (l2 / life :poss (w4 / we))) :op2 (a2 / act-02 :arg0 (p2 / person :arg0-of (h / have-rel-role-91 :arg2 (k / kill))) :degree (v / very))))))
(s / survive-01 :arg0 (p / person :name (n / name :op1 "George") :mod (o / only)) :purpose (s2 / survive-01 :arg0 (p2 / person)))
(r / realize-01 :arg0 (h / he) :arg1 (l / lack-01 :arg0 (h2 / he) :arg1 (a / and :op1 (k / knowledge) :op2 (s / skill)) :purpose (c / cover-01 :arg0 (h3 / he) :arg1 (h4 / history :poss (r2 / region)))) :time (a2 / after :op1 (s2 / start-01 :arg0 (h5 / he) :arg1 (c2 / collect-01 :arg0 (h6 / he) :arg1 (m / material) :purpose (g / game)))))
(a / announce-01 :arg0 (p / person :name (n / name :op1 "Sergei" :op2 "Lavrov") :arg0-of (h / have-org-role-91 :arg2 (m / minister :mod (f / foreign)))) :arg1 (t / this) :time (t2 / today) :arg1-of (s / speak-01 :arg3 (a2 / and :op1 (p2 / person :arg0-of (s2 / study-01)) :op2 (p3 / person :arg0-of (t3 / teach-01 :arg1 (o / organization :name (n2 / name :op1 "MGIMO")))))))
(s / stop-01 :arg1 (w / war-01 :arg1 (c / country :name (n / name :op1 "Ukraine") :arg1-of (s2 / same-01 :arg2 (c2 / child :arg1-of (s3 / same-01 :arg2 (c3 / child :mod (s4 / same))))))) :time (n2 / now))
(f / find-01 :arg0 (f2 / face :part-of (o / organization :name (n / name :op1 "Rhone" :op2 "Feyrkhed" :op3 "BBC"))) :arg1 (p / person :arg0-of (l / lead-02 :arg1 (o2 / organization)) :mod (s / such)) :arg1-of (c / cause-01 :arg0 (n2 / need-01 :arg0 (p2 / person :arg0-of (l2 / lead-02 :arg1 (o3 / organization))) :arg1 (p3 / person :arg0-of (l3 / lead-02 :arg1 (o4 / organization)) :mod (s2 / such)))))
(c / cause-01 :arg0 (a / and :op1 (f / find-01 :arg1 (t / thousands :consist-of (p / person)) :mod (s / still)) :op2 (c2 / continue-01 :arg1 (c3 / combat-01)) :op3 (p2 / person :arg0-of (h / have-org-role-91 :arg2 (o / official))) :op4 (p3 / person :arg0-of (h2 / have-org-role-91 :arg2 (o2 / official))) :op5 (p4 / person :arg0-of (h3 / have-org-role-91 :arg2 (o3 / official))) :op6 (p5 / person :arg0-of (h4 / have-org-role-91 :arg2 (o4 / official))) :op7 (b / begin-01 :arg1 (y / year :mod (a2 / academia)))))
(l / lesbian :mode (i / interrogative) :domain (y / you))
(d / declare-01 :arg0 (p / person :name (n / name :op1 "Putin")) :arg2 (f / fund-01 :arg1 (d2 / develop-02 :arg1 (w / world-region :name (n2 / name :op1 "Far" :op2 "East"))) :degree (f2 / full)))
(f / fall-01 :arg1 (o / organization :name (n / name :op1 "PMI") :arg0-of (m / manufacture-01) :arg0-of (p / partner-01 :arg1 (c / country :name (n2 / name :op1 "Russia") :location (o2 / organization :name (n3 / name :op1 "EU") :part-of (o3 / organization :name (n4 / name :op1 "EU")))) :arg1-of (m2 / major-02))) :arg4 (l / level :arg1-of (l2 / low-04 :degree (m3 / more))) :time (a / after :op1 (i / increase-01) :quant (t / temporal-quantity :quant (N / N-A) :unit (m4 / month))))
(b / bad-07 :arg1 (s / salads) :degree (m / more :mod (e / even)))
FAILED_TO_PARSE#Number of opening and closing brackets doesn't match.
(c / contrast-01 :arg2 (s / simple-02 :polarity - :arg1 (r / reason :arg0-of (c2 / cause-01 :arg1 (s2 / suspect-01 :arg1 (m / mesothelioma))))))
(w / want-01 :arg0 (o / organization :name (n / name :op1 "Ministry" :op2 "of" :op3 "Economic" :op4 "Development")) :arg1 (a / accelerate-01 :arg0 (o2 / organization) :arg1 (i / increase-01 :arg1 (m / market :beneficiary (c / car :mod (e / electric))))))
(u / understand-01 :polarity - :arg0 (p / person :name (n / name :op1 "Alinn")) :mod (s / still))
(a / and :op1 (h / highlights :arg0 (i / it) :arg1 (' / '' :mod (d / diverse :degree (m / more :mod (l / little)))) :mod (a2 / also)) :op2 (q / quote-01 :arg0 (i2 / it) :arg2 (p / person :name (n / name :op1 "Shakespeare")) :manner (g / good :degree (m2 / more))) :op3 (q2 / quote-01 :arg0 (p2 / person) :arg2 (t / title-01 :arg1 (p3 / person) :arg2 (t2 / title))))
(f / follow-01 :arg1 (a / and :op1 (f2 / follow-01 :arg1 (e / event :time (t / thing :arg0-of (l / liberate-01))) :arg2 (w / we) :mod (o / of-course)) :op2 (t2 / talk-01 :arg0 (w2 / we) :arg2 (p / protest-01 :mod (t3 / that) :arg1-of (a2 / arrive-01 :arg4 (e2 / everywhere) :source (p2 / peninsula :name (n / name :op1 "N-A")) :destination (p3 / peninsula :name (n2 / name :op1 "N-A")))))) :arg2 (w3 / we))
(s / say-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (p2 / publication :name (n / name :op1 "N-A") :poss (p3 / person :arg0-of (h2 / have-org-role-91 :arg1 (c / country :name (n2 / name :op1 "Ukraine")) :arg2 (m / minister :mod (d / defense)))) :arg2 (m2 / minister :mod (d2 / defense))))) :arg1 (s2 / subject-01 :arg1 (m3 / message :topic (p4 / person :arg0-of (h3 / have-org-role-91 :arg1 (c2 / country) :arg2 (d3 / diplomat)))) :arg2 (p5 / person :arg0-of (s3 / specialize-01 :arg1 (r / research-01)))) :medium (p6 / page :poss (p7 / person :arg0-of (h4 / have-org-role-91 :arg1 (c3 / country) :arg2 (m4 / minister :mod (d4 / defense))))))
(l / lacks :arg0 (h / he) :arg1 (l2 / lack-01 :arg0 (h2 / he) :arg1 (a / and :op1 (k / knowledge) :op2 (s / skill)) :purpose (i / illuminate :arg0 (h3 / he) :arg1 (h4 / history :poss (r / region)))) :time (a2 / after :op1 (s2 / start-01 :arg0 (h5 / he) :arg1 (c / collect-01 :arg0 (h6 / he) :arg1 (m / material) :purpose (g / game)))))
(c / concern-01 :arg0 (p / program) :arg1 (c2 / car :quant (a / all)) :degree (m / more :compared-to (t / temporal-quantity :quant (N / N-A) :unit (y / year))))
(a / add-01 :arg0 (h / he) :arg1 (f / find-01 :arg0 (p / person :name (n / name :op1 "Merski") :arg0-of (h2 / have-org-role-91 :arg1 (f2 / force :mod (a2 / air) :mod (a3 / air) :location (a4 / area :name (n2 / name :op1 (s / settlement)))))) :arg1 (a5 / agree-01 :arg1 (c / cease-fire))))
(a / and :op2 (t / turn-14 :arg0 (t2 / they) :arg1 (c / court) :purpose (c2 / compensate-01) :time (t3 / then)))
(s / say-01 :arg0 (p / person :mod (c / country :name (n / name :op1 "Jordan")) :mod (e / exact)) :arg1 (f / find-01 :arg0 (s2 / study) :arg1 (n2 / need-01 :arg1 (a / and :op1 (t / treat-03 :arg1-of (e2 / effective-04 :degree (m / more))) :op2 (s3 / strategy :purpose (p2 / prevent-01)) :arg0-of (e3 / effective-04))) :concession (l / location :arg1-of (i / include-91 :arg2 (l2 / location :mod (b / brief)))) :concession (l3 / location :mod (b2 / brief))))
(t / tense :degree (v / very) :domain (s / situation) :location (l / location :name (n / name :op1 "Lesotho")) :time (s2 / since :op1 (s3 / suspend-01 :arg1 (t2 / thing :arg2-of (r / result-01 :arg1 (s4 / session :mod (p / parliament)))))))
(a / and :op1 (n / notice-01 :arg0 (a2 / and :op1 (c / city :name (n2 / name :op1 "Brussels")) :op2 (c2 / city :name (n3 / name :op1 "Washington"))) :arg1 (p / position-02 :arg0 (a3 / and) :arg2 (i / issue-02 :arg0 (c3 / country :name (n4 / name :op1 "N-A"))) :arg1-of (b / balance-01))) :op2 (a4 / appreciate-02 :arg0 (a5 / and) :arg1 (p2 / person :arg1-of (e / expert-01) :mod (b2 / belarusian))))
(b / brainwash-01 :arg1 (p / person :name (n / name :op1 "Eylinn" :op2 "Solomonz")) :arg2 (a / and :op1 (h / hair :mod (d / dishevelled)) :op2 (h2 / heart :part-of (h3 / heart :part-of (v / village :location (n2 / north))))) :degree (m / more :mod (e / even)) :arg1-of (c / cause-01 :arg0 (a2 / and :op1 (r / remove-01 :arg1 (a3 / and :op1 (h4 / hair :mod (d2 / dishevelled)) :op2 (h5 / heart :part-of (v2 / village :mod (n3 / north))))) :op2 (r2 / remove-01 :arg1 (h6 / heart) :degree (s / severe) :compared-to (p2 / port :location (p3 / peninsula :name (n4 / name :op1 "N-A")))))))
(s / see-01 :mode (i / imperative) :arg0 (y / you) :arg1 (c / condition :mod (a / amr-unknown)))
(c / cause-01 :arg1 (t / turn-down-05 :arg0 (i / it) :arg1 (r / rotten :domain (i2 / it))))
(c / cause-01 :arg0 (t / toxin :arg1 (i / industry) :time (e / era :mod (a / another))) :arg1 (c2 / cause-01 :arg0 (i2 / it) :arg1 (c3 / concern-01) :mod (h / hardly) :time (t2 / today)))
(s / say-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg2 (d / director :mod (g / general))) :arg0-of (h2 / have-org-role-91 :arg2 (d2 / director :mod (g2 / general))) :arg0-of (h3 / have-org-role-91 :arg2 (d3 / director :mod (g3 / general))) :arg0-of (h4 / have-org-role-91 :arg2 (d4 / director :mod (g4 / general))) :arg0-of (h5 / have-org-role-91 :arg2 (d5 / director :mod (g5 / general))) :arg0-of (h6 / have-org-role-91 :arg2 (d6 / director :mod (g6 / general))) :arg0-of (h7 / have-org-role-91 :arg2 (d7 / director :mod (g7 / general))) :arg0-of (h8 / have-org-role-91 :arg2 (d8 / director :mod (g8 / general))) :arg0-of (h9 / have-org-role-91 :arg2 (d9 / director :mod (g9 / general))) :arg0-of (h10 / have-org-role-91 :arg2 (d10 / director :mod (g10 / general))) :arg0-of (h11 / have-org-role-91 :arg2 (d11 / director :mod (g11 / general))) :arg0-of (h12 / have-org-role-91 :arg2 (d12 / director :mod (g12 / general))) :arg0-of (h13 / have-org-role-91 :arg2 (d13 / director :mod (g13 / general))) :arg0-of (h14 / have-org-role-91 :arg2 (d14 / director :mod (g14 / general))) :arg0-of (h15 / have-org-role-91 :arg2 (d15 / director :mod (g15 / general))) :arg0-of (h16 / have-org-role-91 :arg2 (d16 / director :mod (g16 / general))) :arg0-of (h17 / have-org-role-91 :arg2 (d17 / director :mod (g17 / general))) :arg0-of (h18 / have-org-role-91 :arg2 (d18 / director :mod (g18 / general))) :arg0-of (h19 / have-org-role-91 :arg2 (d19 / director :mod (g19 / general))) :arg0-of (h20 / have-org-role-91 :arg2 (d20 / director :mod (g20 / general))) :arg0-of (h21 / have-org-role-91 :arg2 (d21 / director :mod (g21 / general)))))
(a / and :op1 (r / result-01 :arg1 (t / thing :arg2-of (r2 / result-01 :arg1 (r3 / research-01 :arg0 (t2 / they)))) :arg2 (t3 / thing :arg2-of (r4 / result-01 :arg1 (r5 / research-01 :arg0 (t4 / they))))) :op2 (p / possible-01 :arg1 (f / find-01 :arg1 (t5 / thing :arg2-of (r6 / result-01 :arg1 (r7 / research-01 :arg0 (t6 / they)))))))
(b / bastions :arg1 (s / store :name (n / name :op1 (f / fashionable) :op2 (c / city :name (n2 / name :op1 "London")) :op3 (s2 / school) :op4 (s3 / school) :op5 (s4 / school) :op6 (s5 / school) :op7 (s6 / school))))
(c / contrast-01 :arg1 (c2 / continue-01 :arg0 (p / person :name (n / name :op1 "Stewart"))) :arg2 (f / fall-01 :arg1 (p2 / person) :arg4 (b / behind :op1 (p3 / position :quant 21))))
(p / possible-01 :mode (i / interrogative) :arg1 (l / love-01 :arg0 (p2 / person :arg0-of (h / have-rel-role-91 :arg1 (y / you) :arg2 (f / father))) :arg1 (t / this)))
(r / recall-02 :arg1 (r2 / recall-02 :arg0 (w / we) :arg1 (a / and :op1 (b / burn-01 :arg1 (t / tank :mod (s / storage :mod (o / oil)))) :op2 (b2 / building :mod (s2 / storage :quant 2))) :time (d / date-entity :month 7 :day 18)) :arg2 (w2 / we))
(f / forecast-01 :arg1 (b / be-located-at-91 :arg1 (l / location :name (n / name :op1 "Adelaide")) :arg2 (r / relative-position :op1 (l2 / location :name (n2 / name :op1 "Adelaide")) :quant (m / maximum :op1 (o / or :op1 (p / person :quant (b2 / between :op1 1 :op2 2)) :op2 (p2 / person :quant 2))))))
(d / difficult :polarity - :domain (s / see-01 :arg0 (p / person :quant (m / many)) :arg1 (t / thing :manner-of (r / reduce-01 :arg1 (c / company :name (n / name :op1 "BBC")) :manner (s2 / size :poss (a / and :op1 (p2 / power :poss (c2 / company)) :op2 (f / finance) :op3 (s3 / status)))))) :mod (s4 / so :polarity -))
(g / give-01 :arg0 (f / face :arg1-of (f2 / face-01 :arg0 (p / person :name (n / name :op1 "Catherine" :op2 "Ashton")))) :arg1 (r / reason :arg0-of (b / believe-01 :arg1 (a / and :op1 (? / ??????????????? :arg1 (r2 / relation-03 :arg0 (o / organization :name (n2 / name :op1 "EU")) :arg2 (o2 / organization :name (n3 / name :op1 "EU")))) :op2 (b2 / beyond))) :arg1-of (s / say-01 :arg0 (h / he)) :arg1-of (s2 / say-01 :arg0 (h2 / he)) :arg1-of (s3 / say-01 :arg0 (h3 / he))))
(c / contrast-01 :arg1 (c2 / condition :mod (s / squally)) :arg2 (s2 / serve-01 :arg1 (r / reason :quant 1 :arg1-of (i / include-91 :arg2 (r2 / reason :arg0-of (d / delay-01 :arg1 (l / land-01 :arg1 (o / organization :name (n / name :op1 "Virgin" :op2 "Airlines")) :arg2 (c3 / city :name (n2 / name :op1 "Melbourne")) :location (c4 / country-region :name (n3 / name :op1 "N-A")))))))))
(c / contrast-01 :arg1 (p / percentage-entity :value (N / N-A) :domain (r / rate :mod (c2 / corporate) :mod (s / state :name (n / name :op1 "Maryland")))) :arg2 (p2 / percentage-entity :value (N2 / N-A) :arg1-of (h / high-02 :degree (r2 / relative)) :domain (i / it)))
(h / hold-04 :arg1 (c / cup :mod (n / next) :mod (w / world)) :location (l / location :name (n2 / name :op1 "Astana")) :time (s / summer :mod (n3 / next)))
(t / thing :manner-of (l / live-01 :arg0 (p / person) :location (h / house :mod (o / old) :poss (l2 / location :name (n / name :op1 "Ufa")))))
(s / say-01 :arg0 (p / person :name (n / name :op1 "Johnson")) :arg1 (g / good :degree (m / most) :domain (p2 / provide-01 :arg0 (p3 / provide-01 :arg0 (i / i) :arg1 (r / regresif :degree (m2 / more)) :arg2 (s2 / system)) :arg1 (i2 / i))) :arg2 (f / fee :mod (l / license-01)))
(a / and :op1 (b / be-temporally-at-91 :arg1 (s / season :mod (l / league :mod (f / football)) :poss (c / country :name (n / name :op1 "Turkey"))) :arg2 (p / product-of :op1 2009 :op2 2010)) :op2 (s2 / score-01 :arg1 (b2 / between :op1 (t / temporal-quantity :quant (N / N-A) :unit (y / year)) :op2 (t2 / temporal-quantity :quant (N2 / N-A) :unit (m / minute))) :arg2 (t3 / temporal-quantity :quant (N3 / N-A) :unit (m2 / minute))))
(i / include-91 :arg1 (a / and :op1 (s / season :mod (l / league :mod (d / dinosaur)) :mod (t / turkish)) :op2 (s2 / season :quant 2010)) :arg2 (g / goal :quant (m / most)) :time (a2 / and :op1 (d2 / date-entity :decade (N / N-A)) :op2 (d3 / date-entity :value 90) :ord (o / ordinal-entity :value 76)))
(s / say-01 :arg0 (h / he) :arg1 (w / wish-01 :arg0 (w2 / we) :arg1 (r / recover-01 :arg1 (v / veteran :poss (w3 / we)) :arg2 (v2 / veteran :poss (w4 / we))) :arg1-of (s2 / say-01 :arg0 (h2 / he))))
(a / and :op2 (n / need-01 :arg1 (s / study-01 :frequency (t / time))))
(s / say-01 :arg0 (h / he) :arg1 (a / and :op1 (p / person :name (n / name :op1 "Wagner") :arg0-of (h2 / have-org-role-91 :arg2 (l / lieutenant))) :op2 (i / interest :mod (g / good :degree (m / most)) :poss (p2 / person :arg0-of (h3 / have-org-role-91 :arg1 (o / organization :name (n2 / name :op1 "Brotherhood")) :arg2 (m2 / member))) :purpose (k / keep-04 :arg0 (p3 / person) :arg1 (i2 / item :arg1-of (p4 / personal-02)) :arg2 (p5 / person :name (n3 / name :op1 "Michael" :op2 "Deng"))))) :time (p6 / point :mod (t / this)))
(g / get-03 :arg1 (g2 / game :mod (r / rematch) :poss (o / organization :name (n / name :op1 "Compton"))) :arg2 (l / lucky) :mod (j / just))
(c / contrast-01 :arg1 (k / know-01 :arg1 (k2 / kill-01 :arg1 (p / person :arg1-of (k3 / kill-01)))) :arg2 (a / alternative :mod (l / lethal :degree (l2 / less)) :prep-to (c2 / cat :mod (p2 / plastic)) :arg1-of (c3 / cause-01 :arg0 (a2 / amr-unknown)) :arg1-of (c4 / cause-01 :arg0 (a3 / amr-unknown)) :arg1-of (c5 / cause-01 :arg0 (a4 / amr-unknown)) :arg1-of (c6 / cause-01 :arg0 (a5 / amr-unknown)) :arg1-of (c7 / cause-01 :arg0 (a6 / amr-unknown)) :arg1-of (c8 / cause-01 :arg0 (a7 / amr-unknown)) :arg1-of (c9 / cause-01 :arg0 (a8 / amr-unknown)) :arg1-of (c10 / cause-01 :arg0 (a9 / amr-unknown)) :arg1-of (c11 / cause-01 :arg0 (a10 / amr-unknown)) :arg1-of (c12 / cause-01 :arg0 (a11 / amr-unknown)) :arg1-of (c13 / cause-01 :arg0 (a12 / amr-unknown))))
(a / appear-02 :arg1 (d / do-02 :arg0 (t / team :consist-of (p / person :arg0-of (h / have-org-role-91 :arg1 (t2 / team :poss (c / country :name (n / name :op1 "England"))) :arg3 (l / lead-02 :arg0 (t3 / team) :arg1 (t4 / team))))) :arg1 (t5 / team) :arg2 (e / eklenti :quant (f / few) :mod (k / kurnaz))))
(c / compare-01 :arg1 (p / person :name (n / name :op1 "Marco" :op2 "Rubio")) :arg2 (r / rate-entity-91 :arg1 21 :arg2 (t / temporal-quantity :quant (N / N-A) :unit (m / month) :mod (j / just))))
(w / win-01 :arg0 (r / rate-entity-91 :arg1 (m / monetary-quantity :quant 692 :unit (d / dollar)) :arg2 (v / volume-quantity :quant (N / N-A) :unit (g / gallon))) :time (d2 / date-interval :op1 (e / end-01 :arg1 (d3 / date-entity :month 8 :day 31)) :op2 (w2 / win-01 :arg0 (r2 / revenue) :arg2 (p / percentage-entity :value (N2 / N-A)) :arg1-of (c / compare-01 :arg2 (y / year :mod (p2 / previous))))))
(c / contrast-01 :arg1 (f / face-01 :arg0 (i / i) :arg1 (p / person :quant 2 :arg0-of (h / have-rel-role-91 :arg1 (i2 / i) :arg2 (c2 / child))) :location (s / school)) :arg2 (i3 / interest-01 :arg1 (p2 / person :quant 26 :arg1-of (i4 / interest-01 :arg2 (i5 / it)))))
(a / amount :mod (l / large :degree (m / most)) :arg1-of (i / include-91 :arg2 (c / country :arg0-of (d / deferred :arg1 (r / reserve :mod (g / gas)) :location (a2 / and :op1 (c2 / country :name (n / name :op1 "Mozambique")) :op2 (c3 / country :name (n2 / name :op1 "Australia")) :op3 (c4 / country :name (n3 / name :op1 "Indonesia")) :op4 (c5 / country :name (n4 / name :op1 "Malaysia")) :mod (t / together))))) :prep-for (t2 / total-01 :arg2 (p / percentage-entity :value (N / N-A))))
(a / and :op1 (s / say-01 :arg0 (l / lamb :mod (c / cute)) :arg1 (a2 / and :op1 (l2 / live-01 :arg0 (w / woman) :location (p / phone :arg1-of (m / mobile-02))) :op2 (p2 / probable :domain (f / find-01 :arg1 (p3 / phone :arg1-of (i / include-91 :arg2 (w2 / woman))))))) :op2 (u / upset-01 :arg1 (p4 / person :arg0-of (h / have-rel-role-91 :arg1 (w3 / woman) :arg2 (c2 / child)))))
(s / say-01 :arg0 (p / person :name (n / name :op1 "Lamb")) :arg1 (a / and :op1 (s2 / sad-02 :arg1 (p2 / person :arg1-of (k / kill-01 :location (c / cell :part-of (w / woman))))) :op2 (p3 / possible-01 :arg1 (t / telefonunda :arg1 (f / family :arg1-of (k2 / kill-01 :location (c2 / cell :part-of (w2 / woman))))))))
(m / multi-sentence :snt1 (c / contrast-01 :arg2 (d / differ-02 :arg1 (a / and :op1 (p / person :name (n / name :op1 "McDonnell")) :op2 (p2 / person :name (n2 / name :op1 "Corbyn"))) :arg2 (s / small :mod (s2 / small) :mod (o / only)) :time (n3 / now))) :snt2 (d2 / debate-01 :polarity - :arg0 (p3 / person :arg0-of (o2 / oppose-01 :arg1 (c2 / country :name (n4 / name :op1 "N-A")))) :arg1 (f / factor :arg1-of (k / key-02) :mod (c3 / civil) :arg1-of (k2 / key-02 :arg2 (a2 / and :op1 (e / economy :poss (o3 / organization :name (n5 / name :op1 "EU"))) :op2 (a3 / anti-capitalist))))))
(p / possible-01 :arg1 (i / increase-01 :arg1 (r / rate :mod (i2 / interest)) :arg3 (b / balance-01 :arg1 (t / thing :quant (s / some) :arg1-of (e / expect-01))) :time (b2 / before :op1 (n / now) :duration (t2 / temporal-quantity :quant (N / N-A) :unit (m / month)) :location (m2 / market))))
(m / multi-sentence :snt1 (t / this) :snt2 (y / yes))
(m / multi-sentence :snt1 (a / and :op1 (d / defend-01 :arg0 (p / person :arg0-of (p2 / play-01)) :arg1 (p3 / person :arg0-of (p4 / play-01)) :arg1-of (c / cause-01 :arg0 (t / tears :arg0 (p5 / person) :arg1 (i / incident :mod (t2 / this)) :arg1-of (c2 / cause-01 :arg0 (t3 / tears :arg0 (p6 / person) :arg1 (i2 / incident :mod (t4 / this))))))) :op2 (p7 / possible-01 :arg1 (r / return-01 :arg1 (p8 / person) :arg4 (f / field) :duration (a2 / at-least :op1 (t5 / temporal-quantity :quant (N / N-A) :unit (m2 / month) :mod (a3 / at-least)))))) :snt2 (h / hopeful-03 :arg0 (i3 / i) :arg1 (r2 / remain-01)))
(m / multi-sentence :snt1 (f / fan :domain (s / she) :mod (b / big) :prep-with (c / converse-01 :arg0 (p / person :name (n / name :op1 "Udoh" :op2 "Van" :op3 "Persie")) :arg1 (i / i) :arg2 (' / '' :arg0 (p2 / person) :arg1 (i2 / i)))) :snt2 (c2 / come-01 :arg1 (i3 / i) :purpose (w / watch-01 :arg0 (i4 / i) :arg1 (y / you))))
(a / and :op2 (f / facilitated :arg0 (a2 / and :op1 (p / permit-01 :arg1 (s / settlement) :mod (p2 / permanent)) :op2 (p3 / permit-01 :arg1 (s2 / settlement) :mod (p4 / permanent))) :arg1 (a3 / and :op1 (t / thing :arg1-of (r / require-01)) :op2 (p5 / process-02 :arg1 (a4 / apply-01))) :arg1-of (c / cause-01 :arg0 (p6 / path :consist-of (i / insertion)))))
(a / and :op2 (a2 / and :op1 (c / continue-01 :arg0 (n / number :quant-of (p / person :mod (f / foreign))) :arg1 (p2 / permit-01 :arg1 (s / settlement))) :op2 (o / obtain-01 :arg0 (n2 / number) :arg1 (c2 / card :name (n3 / name :op1 (' / '') :op2 (c3 / card) :op3 (c4 / card) :op4 (c5 / card) :op5 (c6 / card) :op6 (c7 / card) :op7 (c8 / card))) :purpose (a3 / and :op1 (o2 / optimise :arg1 (e / everything)) :op2 (p3 / process-02 :arg1 (a4 / apply-01))))))
(w / want-01 :arg0 (o / organization :name (n / name :op1 "Besiktas")) :arg1 (t / take-01 :arg0 (o2 / organization) :arg1 (p / person :name (n2 / name :op1 "Dnipro") :arg0-of (p2 / play-08 :arg1 (h / half :ord (o3 / ordinal-entity :value 2))) :ord (o4 / ordinal-entity :value 2))))
(a / and :op1 (f / feel-05 :arg1 (m / muddled :mod (' / '')) :arg2 (p / powerful-02 :degree (v / very))) :op2 (s / signal-07 :arg1 (s2 / signal-07 :arg1 (o / open-01 :arg1 (u / up-to :op1 (o2 / other))) :mod (t / too))))
(c / contrast-01 :arg2 (p / person :mod (i / international) :arg0-of (r / report-01)) :arg1-of (c2 / cause-01 :arg0 (w / want-01 :arg0 (p2 / person) :arg1 (w2 / write-01 :arg0 (p3 / person)))))
(m / multi-sentence :snt1 (d / desenler) :snt2 (d2 / desenler))
(c / contrast-01 :arg2 (h / hear-01 :arg0 (a / and :op1 (p / political-party :arg0-of (o / oppose-01 :arg1 (o2 / organization :name (n / name :op1 "ISIL")))) :op2 (t / thing :arg2-of (s / sound-01 :arg1 (b / block-01)))) :arg1 (a2 / and :op1 (t2 / thing :arg1-of (b2 / border-01 :arg2 (b3 / border-01 :arg2 (o3 / organization)))) :op2 (s2 / sound-01 :arg1 (b4 / block-01) :arg2 (b5 / block-01))) :time (h2 / hear-01 :arg0 (c2 / country :name (n2 / name :op1 "Turkey")))))
(h / hear-01 :arg1 (t / thing :arg1-of (b / border-01 :arg2 (a / and :op1 (g / gun) :op2 (b2 / block-01))) :quant (s / some) :arg1-of (c / close-10 :arg2 (b3 / border-01 :arg2 (a2 / and :op1 (g2 / gun) :op2 (b4 / block-01)))) :time (c2 / conflict-01 :arg0 (o / oppose-01 :arg0 (o2 / oppose-01) :arg1 (v / voice :poss (t2 / turkey))))))
(c / cause-01 :arg0 (h / hear-01 :arg0 (c2 / country :name (n / name :op1 "Turkey")) :arg1 (v / voice) :time (a / absent-01 :arg1 (o / oppose-01 :arg1 (a2 / and :op1 (w / weapon) :op2 (b / block-01))))) :arg1 (? / ?? :arg1 (i / i) :arg2 (p / point :mod (b2 / border))))
(a / and :op1 (o / own-01 :arg0 (p / person :arg0-of (o2 / own-01 :arg1 (r / right :mod (l / license-01)))) :arg1 (t / thing :arg2-of (r2 / right-05 :arg1 (l2 / license-01 :arg1 (l3 / license-01)))) :time (e / end-01 :arg1 (s / share :quant 250000000 :arg1-of (p2 / private-03)))))
(e / eliminate-01 :arg1 (a / and :op1 (e2 / eliminate-01 :arg1 (p / problem :mod (t / this))) :op2 (e3 / eliminate-01 :arg1 (p2 / problem :mod (t2 / this)))))
(e / eliminate-01 :arg1 (p / problem :mod (t / this)) :location (g / gut))
(s / say-01 :arg0 (d / democrat :arg1-of (i / include-91 :arg2 (d2 / democrat) :arg3 (p / percentage-entity :value (N / N-A)))) :arg1 (s2 / support-01 :arg0 (d3 / democrat) :arg1 (c / candidate :poss (p2 / person :name (n / name :op1 "Clinton")) :arg0-of (l / lead-02 :arg1 (p3 / person :name (n2 / name :op1 "Donald" :op2 "Trump"))) :arg0-of (t / talk-01 :arg1 (r / rate-entity-91 :arg1 35 :arg2 (t2 / temporal-quantity :quant (N2 / N-A) :unit (y / year)))))))
(s / say-01 :arg0 (h / he) :arg1 (m / make-02 :arg0 (a / and :op1 (p / person :arg0-of (w / write-01 :arg1 (f / film))) :op2 (p2 / person :arg0-of (w2 / write-01 :arg1 (f2 / film))) :op3 (p3 / person :arg0-of (w3 / write-01 :arg1 (f3 / film))) :op4 (p4 / person :arg0-of (w4 / write-01 :arg1 (f4 / film))) :op5 (p5 / person :arg0-of (w5 / write-01 :arg1 (f5 / film))) :op6 (p6 / person :arg0-of (w6 / write-01 :arg1 (f6 / film))) :op7 (p7 / person :arg0-of (w7 / write-01 :arg1 (f7 / film)))) :arg1 (t / thing :arg1-of (t2 / target-01 :arg0 (c / campaign-01 :arg0 (w8 / we))))))
(p / possible-01 :arg1 (u / use-01 :arg1 (s / song :mod (s2 / street) :mod (s3 / street) :poss (p2 / person :name (n / name :op1 "Nazan" :op2 "Öncel"))) :arg2 (t / thing :arg1-of (g / game))))
FAILED_TO_PARSE#Number of opening and closing brackets doesn't match.
(c / contrast-01 :arg2 (r / realize-01 :polarity - :arg0 (p / person :name (n / name :op1 "Steve" :op2 "Lazaridas") :arg0-of (h / have-org-role-91 :arg2 (c2 / curator))) :arg1 (t / this) :mod (e / even)))
(s / say-01 :arg0 (p / person :name (n / name :op1 "Banksy")) :arg1 (r / realize-01 :polarity - :arg0 (p2 / person) :arg1 (e / exhibit-01 :arg1 (t / this)) :mod (e2 / even)))
(t / transfer-01 :arg1 (v / vehicle :quant (n / number :mod (l / large))) :arg2 (r / region) :time (t2 / then) :arg1-of (t3 / transfer-01 :arg2 (t4 / team :poss (h / he))))
(h / have-03 :arg0 (t / they :quant (m / multiple :op1 50000)) :arg1 (t2 / thing :arg0-of (g / gain-02 :arg1 (c / copying :arg0-of (f / fair :polarity -) :arg1-of (d / differ-02 :arg2 (s / surfaces :quant 15 :arg1-of (d2 / differ-02)) :mod (a / again))))) :manner (a2 / atms))
(m / multi-sentence :snt1 (s / shout-01 :mode (i / interrogative) :arg0 (w / we) :arg2 (' / '')) :snt2 (d / deaths :mode (i2 / interrogative) :arg0 (p / person :arg1-of (d2 / die-01)) :arg1 (e / everything) :time (n / now)))
(c / charge-05 :arg1 (p / person :quant (m / many)) :arg2 (r / racism) :mod (s / still) :location (n / news :mod (o / other)))
(m / multi-sentence :snt1 (s / say-01 :arg0 (a / and :op1 (f / food :mod (m2 / metcash)) :op2 (s2 / sell-01 :arg1 (a2 / and :op1 (f2 / food) :op2 (g / groceries)))) :arg1 (a3 / and :op1 (d / decrease-01 :arg1 (p / product-of :op1 2016 :op2 4.1)) :op2 (d2 / decrease-01 :arg1 (p2 / percentage-entity :value (N / N-A) :arg3-of (i / include-91 :arg2 (p3 / percentage-entity :value (N2 / N-A))))) :op3 (d3 / decrease-01 :arg1 (p4 / percentage-entity :value (N3 / N-A) :quant-of (p5 / percentage-entity :value (N4 / N-A) :arg3-of (i2 / include-91 :arg2 (p6 / percentage-entity :value (N5 / N-A)))))) :arg3 (p7 / percentage-entity :value (N6 / N-A)) :arg4 (p8 / percentage-entity :value (N7 / N-A)))) :snt2 (d4 / drop-01 :arg1 (s3 / share :poss (i3 / it) :mod (m3 / market)) :arg3 (p9 / percentage-entity :value (N8 / N-A)) :arg4 (l / level)))
(c / cause-01 :arg0 (n / need-01 :arg0 (t / they) :arg1 (r / reviving :arg0 (t2 / they))) :arg1 (m / manage-02 :arg0 (t3 / they) :arg1 (m2 / make-01 :arg0 (t4 / they) :arg1 (l / laugh-01 :arg1 (a / audience)))))
(c / contrast-01 :arg1 (h / hurt-01 :polarity - :arg1 (s / she)) :arg2 (g / go-08 :arg1 (v / video) :arg2 (m / media :mod (s2 / social) :part-of (f / fall))))
(p / present-01 :arg0 (p2 / person :name (n / name :op1 "Loewe") :arg1-of (p3 / present-01 :time (s / season :mod (t / this)))) :arg1 (v / version :quant 2 :mod (v2 / version)))
(p / prepare-02 :arg0 (p2 / person :name (n / name :op1 "Loewe")) :arg1 (s / season :quant 2 :mod (f / fun) :mod (f2 / fun)) :arg2 (v / version :duration (t / temporal-quantity :quant (N / N-A) :unit (d / day))))
(a / and :op1 (p / person :name (n / name :op1 "Monica" :op2 "Ali") :arg0 (a2 / and :op1 (p2 / person :name (n2 / name :op1 "Monica" :op2 "Ali") :arg0-of (h / have-org-role-91 :arg1 (p3 / person :name (n3 / name :op1 "Alan" :op2 "Bisset")) :arg2 (p4 / president :mod (v / vice)))) :op2 (p5 / person :name (n4 / name :op1 "William" :op2 "Boyd") :arg0-of (h2 / have-org-role-91 :arg1 (p6 / person :name (n5 / name :op1 "William" :op2 "Boyd")) :arg2 (p7 / person :name (n6 / name :op1 "Chris" :op2 "Brookmyre")))) :op3 (p8 / person :name (n7 / name :op1 "Chris" :op2 "Brookmyre") :arg0-of (h3 / have-org-role-91 :arg1 (p9 / person :name (n8 / name :op1 "Drew" :op2 "Campbell")) :arg2 (p10 / president))) :op4 (p11 / person :name (n9 / name :op1 "Chris" :op2 "Brookmyre") :arg0-of (h4 / have-org-role-91 :arg1 (p12 / person :name (n10 / name :op1 "Drew" :op2 "Campbell")) :arg2 (p13 / president))) :op5 (p14 / person :arg0-of (h5 / have-org-role-91 :arg1 (p15 / person :name (n11 / name :op1 "Drew" :op2 "Campbell")) :arg2 (p16 / president))) :op6 (p17 / person :arg0-of (h6 / have-org-role-91 :arg1 (p18 / person :name (n12 / name :op1 "Drew" :op2 "Campbell")) :arg2 (p19 / president))) :op6 (p20 / person :arg0-of (h7 / have-org-role-91 :arg1 (p21 / person :name (n13 / name :op1 "Drew" :op2 "Campbell")) :arg2 (p22 / president))) :op7 (p23 / person :arg0-of (h8 / have-org-role-91 :arg1 (m / manna) :arg2 (p24 / president))) :op8 (p25 / person :arg0-of (h9 / have-org-role-91 :arg1 (p26 / person :name (n14 / name :op1 "Drew" :op2 "Campbell")) :arg2 (p27 / president))) :op8 (p28 / person :arg0-of (h10 / have-org-role-91 :arg1 (p29 / person :name (n15 / name :op1 "Drew" :op2 "Campbell")) :arg2 (p30 / president))) :op8 (p31 / person :arg0-of (h11 / have-org-role-91 :arg1 (p32 / person :name (n16 / name :op1 "Drew" :op2 "Campbell")) :arg2 (p33 / president))) :op8 (p34 / person :arg0-of (h12 / have-org-role-91 :arg1 (p35 / person :name (n17 / name :op1 "Drew" :op2 "Campbell")) :arg2 (p36 / president))) :op8 (p37 / person :arg0-of (h13 / have-org-role-91 :arg1 (p38 / person :name (n18 / name :op1 "Drew" :op2 "Campbell")) :arg2 (p39 / president))) :op8 (p40 / person :arg0-of (h14 / have-org-role-91 :arg1 (p41 / person :name (n19 / name :op1 "Drew" :op2 "Campbell")) :arg2 (p42 / president))) :op8 (p43 / person :arg0-of (h15 / have-org-role-91 :arg1 (p44 / person :name (n20 / name :op1 "Drew" :op2 "Campbell")) :arg2 (p45 / president))) :op8 (p46 / person :arg0-of (h16 / have-org-role-91 :arg1 (p47 / person :name (n21 / name :op1 "Drew" :op2 "Campbell")) :arg2 (p48 / president))) :op8 (p49 / person :arg0-of (h17 / have-org-role-91 :arg1 (p50 / person :name (n22 / name :op1 "Drew" :op2 "Campbell")) :arg2 (p51 / president))) :op8 (p52 / person :arg0-of (h18 / have-org-role-91 :arg1 (c / country :name (n23 / name :op1 "UK")) :arg2 (p53 / president))) :op8 (p54 / person :arg0-of (h19 / have-org-role-91 :arg1 (c2 / country :name (n24 / name :op1 "UK")) :arg2 (p55 / president))) :op8 (p56 / person :arg0-of (h20 / have-org-role-91 :arg1 (c3 / country :name (n25 / name :op1 "UK")) :arg2 (p57 / president))) :op8 (p58 / person :arg0-of (h21 / have-org-role-91 :arg1 (c4 / country :name (n26 / name :op1 "UK")) :arg2 (p59 / president))) :op8 (e / et-cetera))))
(p / president :arg0 (a / and :op1 (p2 / person :name (n / name :op1 "Monica" :op2 "Ali") :arg0-of (h / have-org-role-91 :arg1 (p3 / person :name (n2 / name :op1 "Alan" :op2 "Bissett")) :arg2 (p4 / president))) :op2 (p5 / person :name (n3 / name :op1 "William" :op2 "Boyd") :arg0-of (h2 / have-org-role-91 :arg1 (p6 / person :name (n4 / name :op1 "Chris" :op2 "Brookmyre") :arg0-of (h3 / have-org-role-91 :arg1 (o / organization :name (n5 / name :op1 "PEN" :op2 "Drew" :op3 "Campbell")) :arg2 (p7 / president))) :arg2 (p8 / president :mod (v / vice)))) :op3 (p9 / person :name (n6 / name :op1 "Chris" :op2 "Brookmyre") :arg0-of (h4 / have-org-role-91 :arg1 (o2 / organization :name (n7 / name :op1 "PEN" :op2 "Drew" :op3 "Campbell")) :arg2 (p10 / president))) :op4 (p11 / person :name (n8 / name :op1 "Chris" :op2 "Brookmyre") :arg0-of (h5 / have-org-role-91 :arg1 (o3 / organization :name (n9 / name :op1 "PEN" :op2 "Drew" :op3 "Campbell")) :arg2 (p12 / president))) :op5 (p13 / person :arg0-of (h6 / have-org-role-91 :arg1 (o4 / organization) :arg2 (p14 / president))) :op6 (p15 / person :arg0-of (h7 / have-org-role-91 :arg1 (o5 / organization) :arg2 (p16 / president))) :op7 (p17 / person :arg0-of (h8 / have-org-role-91 :arg1 (o6 / organization :name (n10 / name :op1 "PEN" :op2 "Drew" :op3 "Campbell")) :arg2 (p18 / president))) :op8 (p19 / person :arg0-of (h9 / have-org-role-91 :arg1 (o7 / organization :name (n11 / name :op1 "PEN" :op2 "Drew" :op3 "Campbell")) :arg2 (p20 / president))) :op8 (p21 / person :arg0-of (h10 / have-org-role-91 :arg1 (o8 / organization :name (n12 / name :op1 "PEN")) :arg2 (p22 / president))) :op8 (p23 / person :arg0-of (h11 / have-org-role-91 :arg1 (o9 / organization :name (n13 / name :op1 "PEN")) :arg2 (p24 / president))) :op8 (p25 / person :arg0-of (h12 / have-org-role-91 :arg1 (o10 / organization :name (n14 / name :op1 "PEN")) :arg2 (p26 / president))) :op8 (p27 / person :arg0-of (h13 / have-org-role-91 :arg1 (o11 / organization :name (n15 / name :op1 "PEN")) :arg2 (p28 / president))) :op8 (p29 / person :arg0-of (h14 / have-org-role-91 :arg1 (o12 / organization :name (n16 / name :op1 "PEN")) :arg2 (p30 / president))) :op8 (p31 / person :arg0-of (h15 / have-org-role-91 :arg1 (o13 / organization :name (n17 / name :op1 "PEN")) :arg2 (p32 / president))) :op8 (p33 / person :arg0-of (h16 / have-org-role-91 :arg1 (o14 / organization :name (n18 / name :op1 "PEN")) :arg2 (p34 / president))) :op8 (p35 / person :arg0-of (h17 / have-org-role-91 :arg1 (o15 / organization :name (n19 / name :op1 "PEN")) :arg2 (p36 / president))) :op8 (p37 / person :arg0-of (h18 / have-org-role-91 :arg1 (o16 / organization :name (n20 / name :op1 "PEN")) :arg2 (p38 / president))) :op8 (p39 / person :arg0-of (h19 / have-org-role-91 :arg1 (o17 / organization :name (n21 / name :op1 "PEN")) :arg2 (p40 / president))) :op8 (p41 / person :arg0-of (h20 / have-org-role-91 :arg1 (o18 / organization :name (n22 / name :op1 "PEN")) :arg2 (p42 / president))) :op8 (p43 / person :arg0-of (h21 / have-org-role-91 :arg1 (o19 / organization :name (n23 / name :op1 "PEN")) :arg2 (p44 / president))) :op8 (p45 / person :arg0-of (h22 / have-org-role-91 :arg1 (o20 / organization :name (n24 / name :op1 "PEN")) :arg2 (p46 / president))) :op8 (p47 / person :arg0-of (h23 / have-org-role-91 :arg1 (o21 / organization :name (n25 / name :op1 "PEN")) :arg2 (p48 / president))) :op8 (p49 / person :arg0-of (h24 / have-org-role-91 :arg1 (o22 / organization :name (n26 / name :op1 "PEN")) :arg2 (p50 / president))) :op8 (e / et-cetera)))
(b / bad-07 :mode (i / interrogative) :arg1 (i2 / i) :degree (s / so) :purpose (m / müyüm :arg1 (i3 / industry)))
(c / contrast-01 :arg2 (s / sell-01 :arg1 (b / bread :quant (m / mass-quantity :quant (N / N-A) :unit (d / dollar))) :time (y / yesterday) :location (l / location :name (n / name :op1 "Ankara") :arg0-of (h / have-org-role-91 :arg2 (c2 / capital)))))
(a / and :op1 (b / believe-01 :arg0 (a2 / and :op1 (p / person :arg0-of (h / have-org-role-91 :arg1 (o / organization :name (n / name :op1 "Wenger" :op2 "Arsenal")))) :op2 (p2 / person :arg0-of (h2 / have-org-role-91 :arg1 (c / club)))) :arg1 (h3 / have-03 :arg0 (p3 / person) :arg1 (l / lesson :mod (p4 / proper)) :source (d / defeat-01 :arg1 (c2 / country :name (n2 / name :op1 "Monaco")))) :time (s / season :mod (l2 / last) :mod (l3 / last))) :op2 (b2 / believe-01 :arg0 (c3 / club) :arg1 (m / make-02 :polarity - :arg0 (t / thing :arg1-of (t2 / target-01)) :arg1 (w / win-01))))
(a / and :op1 (v / value-02 :arg0 (a2 / and :op1 (r / r :poss (w / we)) :op2 (t / team :mod (t2 / this))) :arg1 (a3 / and :op1 (r2 / r :mod (t3 / together)) :op2 (t4 / team :mod (t5 / together)) :prep-with (r3 / r))) :op2 (a4 / achieve-01 :arg0 (a5 / and) :arg1 (s / synergy :mod (c / certain)) :time (s2 / so-far)))
(a / and :op1 (s / shoot-02 :arg0 (p / person :name (n / name :op1 "Shannon" :op2 "Lamb") :arg0-of (h / have-org-role-91 :arg1 (u / university :quant 911) :arg2 (p2 / professor))) :arg1 (p3 / person :arg0-of (h2 / have-rel-role-91 :arg1 (p4 / police) :arg2 (g / girlfriend))) :arg2 (g2 / gun)) :op2 (o / obligate-01 :arg1 (p5 / police) :arg2 (c / come-01 :arg1 (p6 / police) :manner (m / manner :poss (h3 / house :arg1-of (s2 / say-01 :arg0 (v / voice :mod (t / trembling :mod (o2 / only)))))))))
(m / multi-sentence :snt1 (f / felek. :arg0 (p / person :name (n / name :op1 "Yusuf" :op2 "Ya")) :arg1 (c / c)) :snt2 (d / die-01 :arg1 (p2 / person :mod (c2 / c))) :snt3 (d2 / die-01 :arg1 (p3 / person) :location (p4 / peninsula :name (n2 / name :op1 "N-A")) :time (d3 / date-entity :month 1 :day 3)))
(a / and :op1 (d / documentary :ord (o / ordinal-entity :value 2) :poss (p / person :name (n / name :op1 "Mete" :op2 "Gümürhan"))) :op2 (p2 / person :name (n2 / name :op1 "Young" :op2 "Pehlivanlar") :arg0-of (h / have-org-role-91 :arg2 (' / ''))) :op3 (p3 / person :name (n3 / name :op1 "Young" :op2 "Pehlivanlar") :arg0-of (h2 / have-org-role-91 :arg2 ('2 / ''))))
(a / announce-01 :arg0 (a2 / and :op1 (o / organization :name (n / name :op1 "Ministry" :op2 "of" :op3 "Education")) :op2 (c / country :name (n2 / name :op1 "N-A")) :op3 (n3 / newspaper :name (n4 / name :op1 "N-A"))) :arg1 (m / make-01 :arg1 (e / exam) :beneficiary (p / person :arg0-of (s / study-01) :location (d / district))))
(a / and :op1 (i / ideal :domain (u / ula?acaks?n?z :name (n / name :op1 (b / bedeninize) :op2 (b2 / bedeninize)) :mod (b3 / bedeninize))) :op2 (g / give-01 :arg1 (m / mass-quantity :quant (N / N-A) :unit (k / kilogram)) :mod (a2 / also)))
(a / and :op1 (i / ideal :domain (t / take-01 :arg0 (y / you) :arg1 (u / ula?acaks?n?z :mod (b / bedeninize)))) :op2 (p / provide-01 :arg0 (t2 / they) :arg1 (u2 / ula?acaklar :mod (d / dear)) :mod (a2 / also)))
(m / make-01 :arg0 (p / person :name (n / name :op1 "Simon") :arg1-of (i / include-91 :arg2 (p2 / person :quant (1 / 13-9)) :arg3 (s / score-entity :op1 (12 / 13-9) :op2 6))) :arg1 (s2 / shoot-01 :quant (13 / 13-9) :arg1-of (i2 / include-91 :arg2 (s3 / shoot-01 :quant (3 / 3-1)))))
(s / say-01 :arg0 (h / he) :arg1 (a / and :op1 (d / do-02 :arg0 (w / we) :arg1 (r / research-01 :arg1 (t / thing :arg1-of (r2 / report-01))) :time (s2 / since :op1 (b / build-01 :arg1 (i / index :mod (a2 / amusement-park :name (n / name :op1 "N-A")) :arg1-of (r3 / rise-01 :arg2 (p / product :mod (d2 / domestic) :arg1-of (g / gross-03) :mod (d3 / domestic))) :arg1-of (b2 / begin-01 :time (t2 / today)))))) :op2 (d4 / decline-01 :arg1 (t3 / thing :arg1-of (s3 / say-01 :arg0 (h2 / he))) :manner (r4 / rapid) :time (u / until :op1 (d5 / date-entity :decade (N / N-A))))) :li 1950)
(i / include-91 :arg1 (r / rate-entity-91 :arg1 (s / slice :quant (m / multiple :op1 (N / N-A))) :arg2 (t / temporal-quantity :quant (N2 / N-A) :unit (y / year))) :arg2 (t2 / test-01 :arg0 (w / weight :poss (t3 / they)) :arg1 (c / course :poss (c2 / course :arg1-of (p / performed :polarity -)))))
(o / obligate-01 :arg2 (u / use-01 :arg0 (a / and :op1 (p / person :arg0-of (d / depend-01)) :op2 (p2 / person :mod (m / motivasyonun))) :arg1 (r / road :arg1-of (s / same-01))))
(a / and :op1 (s / sign-up-03 :arg1 (l / location :name (n / name :op1 "Bergen")) :arg4 (l2 / location :name (n2 / name :op1 "Adana"))) :op2 (m / message-01 :arg0 (l3 / location :name (n3 / name :op1 "Bergen"))) :op3 (m2 / marry-01 :arg1 (l4 / location :name (n4 / name :op1 "Bergen"))) :time (a2 / after :op1 (w / work-01)) :time (l5 / late :degree (m3 / more)) :location (h / here) :time (l6 / late :degree (m4 / more)))
(s / say-01 :arg0 (h / he) :arg1 (r / recommend-01 :arg1 (t / take-01 :arg1 (i / it) :arg3 (s2 / speed :poss (s3 / step-01 :arg1-of (n / need-01 :arg1-of (s4 / say-01 :arg0 (h2 / he))))))) :time (y / yesterday))
(s / say-01 :arg0 (h / he) :arg1 (a / and :op1 (p / possess-01 :arg0 (p2 / person :arg0-of (h2 / have-rel-role-91 :arg1 (p3 / person :name (n / name :op1 "Maksimovic")) :arg2 (l / lawyer))) :arg1 (m / match-03) :arg1-of (c / cause-01 :arg0 (a2 / attempt-01 :arg0 (p4 / person) :arg1 (h3 / have-03 :arg0 (p5 / person) :arg1 (d / drug :arg1-of (i / include-91 :arg2 (d2 / drug :poss (p6 / person))) :quant (a3 / all)))))) :op2 (e / evidence-01 :polarity - :arg1 (p7 / possible-01 :arg1 (b / be-located-at-91 :arg1 (t / thing :arg1-of (i2 / innocent-01)) :arg2 (t2 / thing :arg1-of (s2 / say-01 :arg0 (h4 / he))))))))
(a / and :op1 (d / determine :arg1 (s / source-02 :arg1 (m / money) :arg1-of (u / use-01 :arg2 (e / elect-01 :mod (f / full) :location (c / country :name (n / name :op1 "Romania")))))) :op2 (p / prepare-02 :arg1 (l / law :arg1-of (d2 / draft-01) :mod (n2 / new)) :arg2 (i / introduce-02 :arg1 (s2 / spend-01 :arg1 (c2 / cap)))))
FAILED_TO_PARSE#Two concepts in a row.
(e / exhibit-01 :arg1 (e2 / exhibit-01) :source (p / place :arg1-of (e3 / exhibit-01 :arg0 (p2 / person :name (n / name :op1 "Kadir" :op2 "Öztoprak")) :arg1-of (s / say-01 :arg0 (p3 / person :quant 2016 :arg1-of (s2 / say-01))))))
(m / multi-sentence :snt1 (y / youth :li 1990 :arg1 (y2 / youth :arg1-of (i / include-91 :arg2 (p / person :quant 1999 :mod (c / country :name (n / name :op1 "N-A")) :arg0-of (h / have-rel-role-91 :arg1 (i2 / i) :arg2 (m2 / mc))))) :li 1990) :snt2 (a / available-02 :arg1 (p2 / person :quant 1999 :arg1-of (i3 / include-91 :arg2 (p3 / person :quant 1999 :arg0-of (h2 / have-rel-role-91 :arg1 (i4 / i) :arg2 (m3 / mc))))) :arg2 (t / temporal-quantity :quant (N / N-A) :unit (y3 / year) :arg2-of (a2 / available-02) :arg2-of (a3 / available-02))))
(m / meet-03 :arg0 (a / and :op1 (p / person :arg0-of (h / have-rel-role-91 :arg1 (s / school) :arg2 (c / child))) :op2 (p2 / person :mod (y / young))) :arg1 (l / love-01 :arg1 (a2 / and :op1 (m2 / music) :op2 (a3 / art))) :location (s2 / scene :location (o / outside :op1 (s3 / school))))
(a / add-01 :arg0 (h / he) :arg1 (s / start-01 :arg0 (t / they) :arg1 (u / use-01 :arg0 (t2 / they) :arg1 (p / phone :arg1-of (m / mobile-02) :poss (t3 / they)) :arg2 (p2 / purchase-01 :arg0 (t4 / they) :arg1 (p3 / product :arg1-of (m2 / mobile-02) :arg0-of (s2 / save-02 :arg1 (i / increase-01 :arg1 (s3 / sell-01 :arg1 (i2 / internet)) :arg2 (s4 / sell-01 :arg1 (i3 / internet)) :mod (l / large)))))) :time (b / before :op1 (n / now) :quant (t5 / temporal-quantity :quant (N / N-A) :unit (y / year)))))
(l / learn-01 :arg0 (i / i) :arg1 (p / possible-01 :arg1 (d / distilled :arg0 (i2 / i) :arg1 (r / rule :quant 8 :mod (g / golden)))))
(m / mariners :arg0 (p / person :name (n / name :op1 "Martinez")) :time (b / before :op1 (n2 / now) :quant (o / over :op1 (t / temporal-quantity :quant (N / N-A) :ord (o2 / ordinal-entity :value 6)))) :time (s / since :op1 (n3 / night :mod (t2 / three-hit))) :ord (o3 / ordinal-entity :value 1))
(e / enter-01 :arg0 (p / person :poss (c / country :quant 2 :mod (t / this))) :arg1 (c2 / country :mod (o / other :mod (e2 / each))) :condition (t2 / turn-01 :arg0 (y / you) :arg1 (d / door) :direction (o2 / off)))
(b / be-located-at-91 :arg1 (p / person :quant 2 :mod (t / this)) :arg2 (c / chimney) :condition (c2 / close-13 :arg1 (y / you) :arg2 (d / door :poss (c3 / country :mod (o / other :mod (e / each))))))
(s / say-01 :arg0 (h / he) :arg1 (' / '' :arg0 (a / and :op1 (p / person :arg0-of (h2 / have-org-role-91 :arg1 (f / firm :mod (f2 / firm :mod (m / manage-01)) :poss (o / organization :name (n / name :op1 "Envestnet" :op2 "Inc."))) :arg2 (c / chief))) :op2 (p2 / person :name (n2 / name :op1 "Zachary") :arg0-of (h3 / have-org-role-91 :arg1 (o2 / organization) :arg2 (c2 / chief) :arg3 (l / lead-02 :arg0 (p3 / person) :arg1 (o3 / organization))))) :arg1 (t / talent :prep-for (s2 / science))))
(s / say-01 :arg0 (f / firm :mod (m / manage-01)) :arg1 (b / believe-01 :arg0 (p / person :name (n / name :op1 "Zachary" :op2 "Karabell") :arg0-of (h / head-01 :arg1 (s2 / strategy :mod (g / globe)) :beneficiary (o / organization :name (n2 / name :op1 "Envestnet" :op2 "Inc.")))) :arg1 (t / talent :domain (p2 / process-02 :arg1 (d / decision-making)))))
(b / be-located-at-91 :arg1 (h / he) :arg2 (p / prison) :time (n / now))
(a / and :op1 (t / travel-01 :arg0 (p / person :arg0-of (w / write-01 :arg1 (p2 / person :quant 25 :arg0-of (w2 / write-01) :arg1-of (f / fame-01))) :arg0-of (h / have-org-role-91 :arg2 (m / minister :mod (p3 / prime)))) :arg4 (c / city :name (n / name :op1 "London")) :time (a2 / ahead :op1 (v / visit-01 :arg0 (p4 / person :name (n2 / name :op1 "Davutoglu") :arg0-of (h2 / have-org-role-91 :arg2 (m2 / minister :mod (p5 / prime)))) :arg1 (p6 / person :quant 25 :arg0-of (w3 / write-01) :arg1-of (f2 / fame-01)))) :time (w4 / week :mod (n3 / next))) :op2 (t2 / tell-01 :arg0 (p7 / person) :arg1 (l / letter) :arg2 (p8 / person :name (n4 / name :op1 "Cameron") :arg0-of (h3 / have-org-role-91 :arg1 (c2 / country) :arg2 (m3 / minister :mod (p9 / prime))))))
(m / multi-sentence :snt1 (h / hocas?n :mode (i / interrogative)) :snt2 (a / and :op1 (p / person :name (n / name :op1 "St" :op2 "George-Illawarra") :li 2010) :op2 (p2 / person :name (n2 / name :op1 "Bennett") :arg0-of (w / win-01 :arg1 (t / title :mod (f / football))))) :li 2010)
(s / support-01 :polarity - :arg0 (p / person :name (n / name :op1 "Clinton")) :arg1 (r / rate-entity-91 :arg1 6 :arg2 (t / temporal-quantity :quant (N / N-A) :unit (m / month))))
(c / clear-06 :polarity - :arg1 (c2 / clear-01 :arg1 (p / pope) :arg2 (p2 / pope)) :time (y / yet))
(o / or :op2 (a / accept-01 :polarity - :arg0 (y / you) :arg1 (p / petition-01 :arg0 (i / i) :arg1 (m / meet-03 :arg0 (i2 / i) :arg1 (p2 / person :name (n / name :op1 "Pope")) :arg1-of (m2 / meet-01 :polarity - :arg0 (p3 / person) :time (y2 / yet))))))
(m / multi-sentence :snt1 (a / and :op1 (o / open-01 :arg0 (w / we) :location (c / city :name (n / name :op1 "Shanghai")) :mod (a2 / also)) :op2 (' / ' :arg1 (k / korner :name (n2 / name :op1 ('2 / '') :op2 (k2 / kalayc?o?lu) :op3 (k3 / korner)))) :mod (a3 / also)) :snt2 (m2 / m?z :mode (i / interrogative) :time (f / first)))
(s / sweet :degree (s2 / so) :domain (t / that))
(r / recommend-01 :arg1 (a / and :op1 (w / what :arg1 (s / slash :op1 (y / yapaca) :op2 (n / n?z)) :mod (o / only) :time (p / past)) :op2 (r2 / recommend-01 :arg1 (y2 / yürümek :polarity - :arg1 (t / thing)))) :time (n2 / now))
(m / multi-sentence :snt1 (p / possible-01 :arg1 (d / do-02 :arg0 (y / you) :arg1 (t / thing :mod (o / only) :arg1-of (d2 / do-02 :arg0 (y2 / you) :time (n / now))) :purpose (l / look-01 :arg0 (y3 / you) :time (p2 / past) :location (i / in-front-of :op1 (f / front :poss (y4 / you)))))) :snt2 (w / walk-01 :polarity - :mode (i2 / imperative) :arg0 (y5 / you)))
(r / report-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg2 (o / official))) :arg1 (t / treat-03 :arg1 (p2 / person :quant 158) :mod (s / still) :location (h2 / hospital)))
(f / follow-02 :arg1 (l / luck :poss (t / they)) :accompanier (p / person :mod (c / country :name (n / name :op1 "Australia"))) :time (n2 / night :mod (t2 / that)))
(a / and :op1 (r / rise-01 :arg1 (p / profit-01 :arg0 (c / company)) :arg2 (r2 / rate-entity-91 :arg1 (p2 / percentage-entity :value (N / N-A)) :arg2 (t / temporal-quantity :quant (N2 / N-A) :unit (m / month))) :arg4 (r3 / rate-entity-91 :arg1 (p3 / percentage-entity :value (N3 / N-A)) :arg2 (t2 / temporal-quantity :quant (N4 / N-A) :unit (m2 / month)))) :op2 (i / increase-01 :arg1 (t3 / temporal-quantity :quant (N5 / N-A) :unit (m3 / month) :arg1-of (f / follow-01 :arg2 (t4 / thing :arg1-of (a2 / announce-01))))))
(c / contrast-01 :arg1 (h / hopeful-03 :polarity -) :arg2 (t / try-01 :arg0 (l / location :name (n / name :op1 "Oklahoma" :op2 "County")) :arg1 (m / monitor-01 :arg0 (p / person :arg0-of (m2 / monitor-01 :arg1 (r / room :mod (d / die-01))) :arg0-of (k / kill-01)) :arg1 (r2 / rate-entity-91 :arg1 (u / under :op1 (m3 / monetary-quantity :quant (N / N-A) :unit (m4 / m))) :arg2 (t2 / temporal-quantity :quant (N2 / N-A) :unit (y / year))) :arg4 (d2 / die-01)) :condition (e / event :mod (t3 / this))))
(c / contrast-01 :arg1 (h / hope-01 :arg0 (i / i) :arg1 (n / no)) :arg2 (c2 / contrast-01 :arg1 (e / execute-01 :arg1 (c3 / chamber :mod (d / die-01)) :location (l / location :name (n2 / name :op1 "Oklahoma" :op2 "State" :op3 "Prison")) :manner (i2 / inject-01 :mod (l2 / lethal))) :arg2 (e2 / execute-01 :arg1 (p / person :arg0-of (m / monitor-01)) :location (p2 / person :name (n3 / name :op1 "Richard")))))
(c / crunch :arg1 (t / tan?y?n :mod (e / emotional) :poss (h / he)) :time (b / before :op1 (e2 / enter-01 :arg0 (h2 / he) :arg1 (i / issue-02))) :arg0-of (s / sure-02 :arg1 (o / oldu?unuzdan :mod (q / quiet))))
(a / and :op1 (e / examine-01 :arg0 (a2 / and :op1 (p / person :arg0-of (h / have-org-role-91 :arg2 (h2 / head-of-state))) :op2 (p2 / person :arg0-of (h3 / have-org-role-91 :arg1 (t / team) :arg3 (l / lead-02 :arg0 (p3 / person))))) :arg1 (l2 / laptops :mod (v / video)) :purpose (c / capture-01 :arg0 (p4 / person) :arg1 (p5 / person :arg2-of (s / suspect-01)))) :op2 (s2 / seize-01 :arg0 (t2 / team) :arg1 (r / record-01 :arg1 (v2 / video)) :time (v3 / visit-01 :arg0 (p6 / person) :arg1 (a3 / arrest-01 :arg1 (p7 / person :arg2-of (s3 / suspect-01)))) :time (v4 / visit-01 :arg0 (p8 / person) :arg1 (p9 / person)) :time (t3 / time :mod (s4 / short))))
(h / have-03 :arg0 (a / and :op1 (p / person :name (n / name :op1 "Angel" :op2 "Di" :op3 "Maria")) :op2 (p2 / person :name (n2 / name :op1 "Blaise") :arg0-of (h2 / have-org-role-91 :arg2 (c / cavani)))) :arg1 (c2 / celebration) :time (a2 / after :op1 (g / goal :poss (a3 / and) :prep-with (p3 / person :name (n3 / name :op1 "Malmö")))))
(k / kill-01 :arg0 (p / person :name (n / name :op1 "Michael" :op2 "Brown") :arg1-of (i / include-91 :arg2 (p2 / policeman :mod (y / young)))) :arg1 (p3 / policeman :mod (w / white)) :arg1-of (c / cause-01 :arg0 (l / live-01 :arg0 (a / and :op1 (c2 / company :arg0-of (m / make-01 :arg1 (l2 / law)) :arg0-of (i2 / influence-01)) :op2 (p4 / person :arg0-of (h / have-org-role-91 :arg2 (o / official))) :location (a2 / across :op1 (c3 / country))) :purpose (s / stop-01 :arg0 (a3 / and) :arg1 (p5 / practice-01 :arg0 (p6 / person :mod (c4 / color) :mod (c5 / color)))))) :location (t / thing :arg2-of (n2 / name-01 :arg1 (p7 / person :mod (y2 / young)))))
(a / and :op1 (i / important :domain (k / kill-01 :arg0 (o / officer :mod (p / police) :mod (w / white)) :arg1 (p2 / person :name (n / name :op1 "Michael" :op2 "Brown"))) :time (a2 / after :op1 (k2 / kill-01 :arg0 (p3 / person :arg0-of (h / have-org-role-91 :arg1 (p4 / police) :arg2 (o2 / officer)) :mod (w2 / white)) :arg1 (n2 / name :poss (p5 / person :name (n3 / name :op1 "Black") :mod (y / young))))) :time (a3 / after :op1 (k3 / kill-01 :arg0 (a4 / and :op1 (p6 / person :arg0-of (h2 / have-org-role-91 :arg1 (p7 / police) :arg2 (o3 / officer))) :op2 (p8 / person :arg0-of (m / make-01 :arg1 (l / law))) :location (a5 / across :op1 (c / country))) :arg1 (p9 / person)))) :op2 (e / encourage-01 :arg0 (a6 / and :op1 (c2 / company :arg0-of (m2 / make-01 :arg1 (l2 / law))) :op2 (a7 / authority)) :arg2 (s / stop-01 :arg0 (a8 / and) :arg1 (d / discriminate-02 :arg1 (p10 / person :arg1-of (w3 / warm-07 :degree (m3 / most)))))))
(m / multi-sentence :snt1 (p / person :name (n / name :op1 "Latvian-Meiksins" :op2 "Wood") :arg1-of (b / bear-02 :location (c / city :name (n2 / name :op1 "New" :op2 "York") :arg1-of (b2 / bear-02 :location (c2 / city :name (n3 / name :op1 "New" :op2 "York") :arg1-of (b3 / bear-02 :location (c3 / class :name (n4 / name :op1 (d / democracy)) :mod (c4 / culture)))))))) :snt2 (r / return-01 :arg1 (p2 / person :name (n5 / name :op1 "Marx")) :arg4 (p3 / peace)))
(s / say-01 :arg0 (p / person :arg1-of (b / bear-02 :location (c / country :name (n / name :op1 "Latvia"))) :mod (n2 / new) :arg0-of (h / have-org-role-91 :arg1 (o / organization :name (n3 / name :op1 "Meiksins" :op2 "Wood") :mod (w / work-01)) :arg3 (a / apprentice-01 :arg0 (p2 / person)))) :arg1 (r / return-01 :arg1 (a2 / and :op1 (e / escape-01 :arg0 (c2 / class :arg0-of (w2 / work-01) :source (c3 / class :arg0-of (w3 / work-01)) :prep-against (c4 / capitalism))) :op2 (r2 / return-01 :arg1 (p3 / person :arg0-of (h2 / have-org-role-91 :arg1 (c5 / capitalism) :arg2 (c6 / capital :mod (e2 / empire :name (n4 / name :op1 (o2 / origins))))) :prep-against (c7 / capitalism))))))
(s / search-01 :arg1 (i / it) :time (l / look-01 :arg1 (h / heavy :degree (s2 / safe-01)) :beneficiary (p / person)))
(e / explain-01 :polarity - :arg1 (m / murder-01 :arg1 (l / lamb)))
(t / take-01 :arg1 (p / problem :prep-under (t2 / thing :arg1-of (o / opine-01 :arg0 (p2 / person :prep-on (s / subject :mod (t3 / this)))))) :time (m / month :mod (s2 / short)) :time (a / after :op1 (s3 / split-01) :quant (s4 / short)))
(s / say-01 :arg0 (p / person :arg0-of (s2 / struggle-02 :arg1 (d / drug) :mod (a / also)) :arg0-of (s3 / struggle-02 :arg1 (d2 / drug) :mod (a2 / also))) :arg1 (a3 / arrest-01 :arg1 (p2 / person :arg0-of (s4 / struggle-02 :arg1 (d3 / drug)))))
(d / discuss-01 :arg0 (w / west :part-of (p / person :name (n / name :op1 "Damon"))) :arg1 (r / redefinition :arg0 (c / church :poss (c2 / church :mod (r2 / religious-group :name (n2 / name :op1 "N-A")))) :arg1 (a / and :op1 (p2 / performers) :op2 (m / media) :op3 (m2 / media) :arg1-of (i / include-01 :arg2 (l / list :consist-of (p3 / person :arg0-of (o / own-01)))))) :time (r3 / recent))
(s / say-01 :arg0 (t / thing :quant 3 :arg1-of (i / include-91 :arg2 (t2 / thing :quant 10))) :arg1 (o / opine-01 :arg0 (i2 / i) :mod (n / negative)))
(m / mean-01 :arg1 3 :arg2 (t / thing :arg1-of (o / opine-01) :mod (n / negative)) :li 10)
(o / over :domain (p / person :name (n / name :op1 "Isham" :op2 "Sardouk")))
(m / multi-sentence :snt1 (v / value-01 :arg1 (a / and :op1 (s / safe-01) :op2 (p / pollution)) :arg2 (a2 / and :op1 (s2 / safe-01) :op2 (p2 / pollution))) :snt2 (c / contrast-01 :arg2 (f / fun :domain (a3 / and :op1 (s3 / safe-01) :op2 (p3 / pollution)) :time (e / ever :polarity -) :prep-with (a4 / and :op1 (r / room :part-of (s4 / someone)) :op2 (r2 / room :poss (s5 / someone))))))
(c / contrast-01 :arg1 (p / passionate :domain (w / we)) :arg2 (d / dreaming :polarity - :arg0 (w2 / we)))
(m / multi-sentence :snt1 (c / cost-01 :arg1 (p / pound) :arg2 (r / rate-entity-91 :arg1 (m2 / more-than :op1 (m3 / monetary-quantity :quant (N / N-A) :unit (d / dollar))) :arg2 (t / temporal-quantity :quant (N2 / N-A) :unit (y / year)))) :snt2 (r2 / rise-01 :mode (i / interrogative) :arg1 (p2 / percentage-entity :value (N3 / N-A)) :arg3 (p3 / percentage-entity :value (N4 / N-A))))
(s / set-up-03 :arg1 (a / and :op1 (d / deal-01 :arg2 (a2 / art :mod (p / plastic))) :op2 (a3 / act-02 :arg0 (p2 / person :arg0-of (a4 / act-01)) :arg4 (f / falan))) :condition (m / mean-01 :polarity - :arg1 (m2 / music) :arg2 (f2 / fair :polarity - :domain (m3 / music) :mod (o / only))))
(u / use-01 :polarity - :arg1 (f / fee :mod (l / license-01 :arg1 (l2 / license-01)) :mod (k / kind)) :arg2 (m / make-01 :arg1 (f2 / fee :mod (l3 / license-01) :mod (k2 / kind))) :arg1-of (s / say-01 :arg0 (p / program)))
(r / reach-01 :arg0 (h / he) :arg1 (e / end-01 :arg1 (e2 / era :mod (s / supermodel))))
(t / thing :arg1-of (e / export-01 :arg0 (c / country :name (n / name :op1 "Iran")) :arg2 (o / oil :quant (q / quantity :degree (e2 / equal) :compared-to (t2 / thing :quant 3000000)))) :time (b / before :op1 (s / sanction-02 :arg1 (c2 / country))))
(c / contrast-01 :arg1 (' / '' :arg0 (a / and :op1 (p / person :arg0-of (h / have-org-role-91 :arg1 (o / organization :name (n / name :op1 "Nite")))) :op2 (p2 / person :arg0-of (h2 / have-org-role-91 :arg2 (c2 / chancellor))) :op3 (p3 / person :arg0-of (h3 / have-org-role-91 :arg2 (c3 / chancellor))) :op4 (p4 / person :arg0-of (h4 / have-org-role-91 :arg2 (c4 / chancellor))) :op5 (p5 / person :arg0-of (h5 / have-org-role-91 :arg2 (c5 / chancellor)))) :arg1 (f / force-01 :arg0 (p6 / person) :arg1 (p7 / person) :arg2 (a2 / admit-01 :arg0 (p8 / person) :arg1 (i / idea :arg1-of (b / bad-07) :domain (i2 / it)))) :mod (n2 / naive) :time (w / week :mod (t / this))) :arg2 ('2 / '' :arg0 (p9 / person :arg0-of (h6 / have-org-role-91 :arg1 (a3 / and :op1 (r / radio) :op2 (t2 / television)) :arg2 (c6 / chancellor))) :arg1 (p10 / person :arg0-of (h7 / have-org-role-91 :arg2 (c7 / chancellor))) :mod (n3 / naive) :time (w2 / week :mod (t3 / this))))
(a / and :op1 (d / damage-01 :arg1 (t / theater :mod (b / barbed))) :op2 (b2 / be-located-at-91 :arg1 (c / custody :mod (p / police)) :arg2 (c2 / custody) :time (n / now)) :op3 (a2 / accuse-01 :arg1 (l / law :mod (n2 / new)) :arg2 (c3 / commit-02 :arg0 (l2 / law) :arg1 (c4 / crime-02))))
(r / resemble-01 :arg1 (i / i) :arg2 (h / have-03 :polarity - :arg0 (t / they) :arg1 (c / camera)))
(p / produce-01 :arg0 (a / and :op1 (c / country :name (n / name :op1 "Britain")) :op2 (e / export-01 :arg1 (a2 / and :op1 (p2 / produce-01) :op2 (e2 / export-01)) :arg2 (c2 / country))) :arg1 (f / factory :name (n2 / name :op1 (c3 / chocolate) :op2 (c4 / chocolate) :op3 (f2 / factory) :op4 (f3 / factory) :op5 (f4 / factory) :op6 (f5 / factory) :op7 (f6 / factory)) :poss (o / organization :name (n3 / name :op1 "Ulker"))) :location (l / location :name (n4 / name :op1 "Silivri")))
(a / and :op1 (e / editor :arg0 (i / index :mod (s / sell-01) :poss (o / organization :name (n / name :op1 "IMRG"))) :arg1 (p / person :name (n2 / name :op1 "Andy" :op2 "Mulcahy"))) :op2 (s2 / say-01 :arg0 (p2 / person :arg0-of (h / have-org-role-91 :arg1 (o2 / organization) :arg3 (l / lead-02 :arg0 (p3 / person)))) :arg1 (a2 / and :op1 (' / '' :arg0 (p4 / person) :arg1 (l2 / level :mod (p5 / previous) :mod (g / grow-01) :time (o3 / over :op1 (t / temporal-quantity :quant (N / N-A) :unit (y / year))))) :op2 ('2 / '' :arg1 (l3 / level :mod (g2 / grow-01 :time (o4 / over :op1 (t2 / temporal-quantity :quant (N2 / N-A) :unit (y2 / year))) :mod (e2 / especially))))) :op3 (h2 / have-condition-91 :arg1 (r / return-01 :arg1 (y3 / you)) :arg2 (r2 / return-01 :arg1 (y4 / you) :arg4 (n3 / normalise :arg0 (y5 / you) :arg1 (e3 / everything))))))
(c / contrast-01 :arg1 (s / state-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg2 (o / official :mod (h2 / health)))) :arg1 (p2 / possible-01 :arg1 (m / methyl :arg1 (a / alcohol) :arg2 (a2 / alcohol :mod (e / ethyl)) :direction (f / forward)))) :arg2 (s2 / state-01 :arg0 (p3 / person :arg0-of (h3 / have-org-role-91 :arg2 (o2 / official :mod (h4 / health))))))
(m / multi-sentence :snt1 (s / sign-01 :arg0 (t / theater :quant 138 :arg1-of (s2 / sign-02 :arg0 (t2 / theater :quant 138))) :arg1 (s3 / show-04 :arg1 (p / peace :arg1-of (s4 / sign-02 :arg0 (t3 / theater :quant 138))))) :snt2 (s5 / stand-01 :arg1 (a / and :op1 (u / url-entity :value (b / bizler)) :op2 (u2 / url-entity :value (b2 / bizler))) :arg2 (a2 / and :op1 (f / field) :op2 (f2 / free-04 :arg3 (w / work-01))) :location (f3 / field)) :snt3 (s6 / stand-01 :arg1 (a3 / and :op1 (a4 / artists :location (f4 / field)) :op2 (f5 / free-04 :arg3 (p2 / peace))) :arg2 (a5 / and :op1 (f6 / field) :op2 (f7 / free-04) :op3 (e / et-cetera))))
(a / and :op1 (p / protest-01 :arg0 (w / we) :arg1 (a2 / and :op1 (t / theatre) :op2 (a3 / art :mod (p2 / perform-02)) :prep-as (a4 / artists :arg0-of (w2 / work-01 :location (f / field))))) :op2 (c / call-03 :arg0 (w3 / we) :arg1 (p3 / peace :prep-in (s / side :part-of (m / meet-03 :arg0 (a5 / and :op1 (p4 / person :arg0-of (w4 / work-01 :location (f2 / field))) :op2 (p5 / person :arg0-of (w5 / work-01 :location (f3 / field))) :op3 (p6 / person :arg0-of (w6 / work-01 :location (f4 / field))) :op4 (r / right-05 :arg1 (p7 / person) :arg2 (l / life)) :op5 (d / declare-02 :arg0 (w7 / we) :arg1 (s2 / side-01 :arg0 (w8 / we) :arg1 (s3 / side :part-of (p8 / peace :arg1-of (u / unconditional)))))))))))
(a / allow-01 :arg0 (t / this) :arg1 (m / moderate-03 :arg1 (i / i) :degree (m2 / more) :location (y / yeme?in)) :arg1-of (c / cause-01 :arg0 (t2 / teknikle :arg1 (a2 / and :op1 (a3 / article :arg1-of (c2 / cellulose)) :op2 (a4 / article :arg1-of (c3 / cellulose))))))
(a / and :op1 (e / earn-01 :arg0 (t / they) :arg1 (z / zahmetsiz)) :op2 (b / be-located-at-91 :arg1 (t2 / they) :arg2 (a2 / agenda :mod (m / magazinin))))
(e / enormous :domain (i / impact-01) :time (y / year :mod (r / recent)))
(m / multi-sentence :snt1 (t / try-01 :mode (i / interrogative) :arg0 (w / we) :arg1 (r / read-01 :arg0 (w2 / we) :arg1 (e / e-postalar :quant (a / all)))) :snt2 (c / contrast-01 :arg2 (c2 / cause-01 :mode (i2 / interrogative) :arg0 (p / possible-01 :arg1 (r2 / respond-01 :arg1 (h / herzaman) :mod (o / only) :arg1-of (c3 / cause-01 :arg0 (p2 / possible-01 :arg1 (r3 / respond-01 :arg1 (h2 / herzaman) :mod (o2 / only)))))) :frequency (r4 / rate-entity-91 :arg3 (t2 / temporal-quantity :quant (N / N-A) :unit (d / day))))))
(a / and :op1 (r / reminded :arg1 (p / person :arg0-of (h / have-org-role-91 :arg1 (l / location :name (n / name :op1 "Islington" :op2 "North")) :arg2 (m / mp))) :degree (v / very)) :op2 (a2 / answer-01 :arg0 (p2 / person) :arg1 (a3 / and :op1 (' / '' :arg1 (p3 / person)) :op2 (e / exchange-01 :arg0 (p4 / person) :arg1 (m2 / measure-01 :arg1 (p5 / poverty)) :manner (i / i?neleyici))) :op3 (f / focus-01 :arg0 (p6 / person) :arg2 (d / difficulty :arg1-of (f2 / face-01 :arg0 (p7 / person :mod (y / young))))) :arg1-of (i2 / instead-of-91)))
(a / and :op1 (c / contribute-01 :arg0 (m / municipal :arg0 (a2 / ant :name (n / name :op1 (s / songs) :op2 (s2 / songs)) :mod (p / person :name (n2 / name :op1 "Nazim" :op2 "Hikmet")))) :arg2 (e / event)) :op2 (a3 / accompany :arg0 (m2 / municipal) :arg1 (h / he)))
(c / comes :arg1 (f / form :mod (o / original) :arg1-of (s / superior-01 :arg2 (s2 / sunrise :arg1-of (l / local-02)))) :time (t / today))
(c / cause-01 :arg0 (a / and :op1 (i / investigate-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (c2 / coach :arg1-of (g / go-on-15)) :arg2 (c3 / coach :mod (l / lit)))) :arg1 (p2 / person :name (n / name :op1 "Alan")) :arg2 (c4 / coach :mod (l2 / lit) :location (a2 / around :op1 (p3 / person))) :duration (t / time :arg1-of (l3 / long-03))) :op2 (d / disappoint-01 :arg1 (p4 / person) :time (t2 / then))) :arg1 (m / make-02 :arg0 (p5 / person) :arg1 (l4 / license-01 :arg0 (p6 / person) :arg1 (l5 / license-01 :arg1 (i2 / i)) :time (e / end-01 :arg1 (d2 / desk :mod (f / front))))))
(b / be-temporally-at-91 :arg1 (s / support-01 :arg0 (p / person :name (n / name :op1 "Tomsula" :op2 "Hayne")) :arg1 (s2 / support-01 :arg0 (p2 / person) :arg1 (c / conference :mod (p3 / press)) :time (a / after :op1 (m / match-03))) :arg1-of (o / open-04)) :time (t / time :arg1-of (s3 / same-01)))
(s / say-01 :arg0 (h / he) :arg1 (c / contrast-01 :arg1 (m / meet-03 :polarity - :arg0 (h2 / he) :arg1 (p / person :name (n / name :op1 "Lamb")) :time (e / ever)) :arg2 (i / interest-01 :arg1 (a / and :op1 (p2 / person :arg0-of (h3 / have-rel-role-91 :arg1 (l / lamb) :arg2 (d / daughter))) :op2 (m2 / music :mod (b / blues) :arg1-of (p3 / play-11 :arg0 (h4 / he)))) :arg2 (p4 / person :arg0-of (h5 / have-rel-role-91 :arg1 (l2 / lamb) :arg2 (d2 / daughter))))))
(c / cause-01 :arg0 (e / extradited :arg1 (s / situation)) :arg1 (c2 / cause-01 :arg0 (h / have-03 :polarity - :arg0 (i / i) :arg1 (t / thing :mod (a / all))) :arg1 (s2 / situation)))
(s / state-01 :arg0 (p / person :name (n / name :op1 "Bulent" :op2 "Pirler") :arg0-of (h / have-org-role-91 :arg1 (r / research-institute :name (n2 / name :op1 "N-A") :arg0-of (h2 / have-org-role-91 :arg2 (s2 / secretary :mod (g / general)))) :arg2 (s3 / secretary :mod (g2 / general)))) :arg1 (w / work-09 :polarity - :arg1 (l / law) :arg1-of (l2 / long-03) :location (c / country :mod (o / other)) :duration (t / temporal-quantity :quant (N / N-A) :unit (y / year))))
(c / compares :quant 314.000 :mod (s / sunrise) :prep-with (f / figure :arg1-of (a / average-03)) :time (t / today))
FAILED_TO_PARSE#Two concepts in a row.
(h / hit-01 :arg0 (p / person :arg0-of (o / oppose-01 :arg1 (w / we))) :arg1 (p2 / person :arg0-of (o2 / oppose-01 :arg1 (w2 / we)) :arg1-of (c / clash)))
(s / shoot-02 :arg1 (o / oppose-01 :arg1 (o2 / organization :name (n / name :op1 "ISIL"))))
(s / say-01 :arg0 (p / person :arg0-of (s2 / sing-01)) :arg1 (a / and :op1 (w / word-01 :arg0 (p2 / person :arg0-of (r / read-01 :arg1 (p3 / person :name (n / name :op1 "Calakalem")))) :arg1 (w2 / write-01 :arg0 (p4 / person) :arg1 (l / live-01 :arg0 (p5 / person)))) :op2 (s3 / see-01 :arg0 (p6 / person) :arg1 (l2 / live-01 :arg0 (p7 / person))) :op3 (s4 / see-01 :arg0 (p8 / person) :arg1 (p9 / person :arg0-of (r2 / read-01 :arg1 (p10 / person))))) :frequency (o / often))
(m / multi-sentence :snt1 (r / remember-01 :arg0 (i / i) :arg1 (t / thing :arg1-of (r2 / remember-01 :arg0 (i2 / i) :source (w / word :arg1-of (b / beautiful-02))) :arg1-of (r3 / remember-01 :arg0 (i3 / i) :source (w2 / word :arg1-of (b2 / beautiful-02)))) :location (h / here) :arg1-of (r4 / remember-01 :arg0 (i4 / i) :source (w3 / word :arg1-of (b3 / beautiful-02)))) :snt2 (s / see-01 :polarity - :arg0 (t2 / they) :arg1 (i5 / it)) :snt3 (s2 / see-01 :arg0 (t3 / they) :arg1 (i6 / it)))
(s / say-01 :arg0 (h / he) :arg1 (a / and :op1 (k / kill-01 :arg1 (p / person :quant 1 :arg1-of (d / die-01))) :op2 (s2 / say-01 :arg0 (h2 / he) :arg1 (d2 / die-01 :arg1 (p2 / person :quant 1 :arg1-of (d3 / die-01))))))
(m / multi-sentence :snt1 (c / cause-01 :arg0 (t / this) :arg1 (c2 / come-01 :arg1 (s / season :mod (n / new) :mod (z / zarafet)) :direction (b / back))) :snt2 (c3 / come-04 :arg1 (s2 / season :mod (n2 / new) :mod (z2 / zarafet)) :arg2 (b2 / back)))
(m / multi-sentence :snt1 (' / '' :domain (t / this) :time (s / season :mod (n / new) :mod (s2 / season :mod (n2 / new)))) :snt2 ('2 / '' :mode (e / expressive)))
(a / and :op1 (p / person :name (n / name :op1 "Burkina") :arg0-of (h / have-org-role-91 :arg1 (p2 / person :name (n2 / name :op1 "Paul" :op2 "Rude" :op3 "Thieba") :arg0-of (h2 / have-org-role-91 :arg2 (m / minister :mod (p3 / prime)))) :arg2 (m2 / minister :mod (p4 / prime)))) :op2 (p5 / person :arg0-of (h3 / have-org-role-91 :arg1 (c / cabinet :poss (p6 / person)) :arg2 (m3 / minister :mod (p7 / prime)))) :time (b / before :op1 (n3 / now) :quant (t / temporal-quantity :quant (N / N-A) :unit (d / day))) :time (b2 / before :op1 (n4 / now) :quant (t2 / temporal-quantity :quant (N2 / N-A) :unit (d2 / day))) :time (b3 / before :op1 (n5 / now) :quant (t3 / temporal-quantity :quant (N3 / N-A) :unit (d3 / day))))
(a / and :op1 (p / person :name (n / name :op1 "Deng") :arg0-of (h / have-org-role-91 :arg2 (m / mr.))) :op2 (p2 / pain-01 :arg1 (h2 / head)) :op3 (s / state-01 :arg0 (p3 / person) :arg1 (l / lose-02 :arg0 (p4 / person) :arg1 (c / consciousness)) :time (t / then)))
(m / multi-sentence :snt1 (s / say-01 :arg0 (p / person :mod (y / young) :poss (p2 / person :name (n / name :op1 "Pehlivanlar"))) :arg1 (e / expect-01 :polarity - :arg0 (p3 / person) :arg1 (s2 / select-01 :arg1 (p4 / person) :arg2 (m2 / mete :mod (g / gumurhan))))) :snt2 (p5 / prepare-02 :arg1 (w / we) :arg2 (s3 / surprise-01)))
FAILED_TO_PARSE#Number of opening and closing brackets doesn't match.
(s / say-01 :arg0 (t / thing :arg1-of (d / draft-01)) :arg1 (o / or :op1 (p / possible-01 :polarity - :arg1 (p2 / provide-01 :arg0 (s2 / source :mod (o2 / other) :location (o3 / outside :op1 (c / country :name (n / name :op1 "Turkey")))) :arg1 (s3 / source :mod (o4 / other)) :manner (c2 / case :mod (s4 / serious)))) :op2 (c3 / cost-01 :arg1 (p3 / produce-01 :arg0 (a / and :op1 (c4 / company) :op2 (f / firm)) :arg1 (a2 / and :op1 (p4 / product) :op2 (f2 / firm)) :mod (a3 / additional)) :arg2 (c5 / case :mod (s5 / serious)))))
(s / say-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (c / city :name (n / name :op1 "Berlin")) :arg2 (m / minister :mod (v / vice)))) :arg1 (l / leave-11 :arg0 (p2 / person) :arg1 (y / you) :manner (a / alone)) :arg2 (a2 / and :op1 (w / want-01 :arg0 (p3 / person :arg0-of (h2 / have-org-role-91 :arg1 (o / organization :name (n2 / name :op1 "EU")) :arg2 (m2 / minister))) :arg1 (h3 / have-org-role-91 :arg0 (p4 / person) :arg1 (p5 / person :arg0-of (h4 / have-org-role-91 :arg1 (o2 / organization) :arg2 (m3 / minister :mod (g / general)))) :arg2 (f / friend :mod (e / europeans)))) :op2 (s2 / say-01 :arg0 (p6 / person) :arg1 (c2 / come-01 :polarity - :arg1 (p7 / person :arg0-of (h5 / have-org-role-91 :arg1 (g2 / government-organization :name (n3 / name :op1 "N-A") :poss (w2 / we)) :arg2 (c3 / capital))) :arg4 (p8 / point :mod (l2 / leave-11 :arg0 (p9 / person)))))))
(l / law :polarity - :domain (l2 / law :polarity -) :mod (l3 / law :polarity -))
(a / and :op1 (d / develop-02 :arg1 (a2 / and :op1 (p / person :name (n / name :op1 "Moeen" :op2 "Ali" :op3 "Rashid")) :op2 (f / fair)) :prep-as (b / ball)) :op2 (r / represent-01 :arg0 (t / thing :arg1-of (k / know-01 :polarity -)) :arg1 (o / option :mod (a3 / attack-01)) :concession (e / even-if :op1 (k2 / know-01 :polarity - :arg1 (q / quality)))))
(m / multi-sentence :snt1 (a / and :op1 (s / speak-01 :arg0 (y / you) :arg2 (a2 / and :op1 (s2 / speak-01 :arg0 (y2 / you)) :op2 (t / tutu?sa :arg0 (y3 / you) :arg1 (t2 / tutu?sa :poss (y4 / you))))) :op2 (t3 / tutu?sa :arg0 (y5 / you) :arg1 (t4 / tutu?sa :name (n / name :op1 (k / kirpikleriniz) :op2 (s3 / s?k?yor) :op3 (s4 / s?k?yor))))) :snt2 (h / help-01 :arg0 (o / organization :name (n2 / name :op1 "N-A")) :arg1 (p / person)))
(s / say-01 :arg0 (h / he) :arg1 (i / important :degree (v / very) :domain (d / discover-01 :arg1 (a / and :op1 (m / music :mod (n / new)) :op2 (e / effort :purpose (p / promote-02 :arg1 (w / work-01 :arg0 (r / radio))))))))
(a / and :op1 (p / person :name (n / name :op1 "Moreno") :mod (w / world :quant 2014 :mod (w2 / world)) :location (c / country :name (n2 / name :op1 "Mexico")) :prep-against (p2 / play-01 :arg0 (t / team :consist-of (p3 / person :arg0-of (p4 / play-01 :arg1 (t2 / team :poss (p5 / person :name (n3 / name :op1 "Van" :op2 "Gaal"))))))) :mod (a2 / also)) :op2 (e / experience-01 :arg0 (p6 / person) :arg1 (l / leg)))
(k / know-02 :arg1 (h / he) :arg2 (p / person :name (n / name :op1 "Nazim" :op2 "Hikmet" :op3 "Ran" :op4 "Do?dun" :op5 "Nazim") :arg0-of (h2 / have-org-role-91 :arg2 (s / senator))) :arg1-of (c / cause-01 :arg0 (h3 / honoured :arg1 (b / birth-01 :quant 114 :mod (g / good) :mod (' / '')) :prep-with (e / event))))
(a / anti-gun :arg0 (o / organization :name (n / name :op1 "Amnesty" :op2 "International")) :arg1 (v / video))
(h / have-concession-91 :arg1 (t / think-01 :arg0 (i / i) :arg1 (w / wrong-04 :arg1 (t2 / thing :arg1-of (d / do-02 :arg0 (i2 / i)))) :mod (s / still)) :arg2 (e / express-01 :arg1 (p / possible-01 :arg1 (e2 / express-01 :arg0 (p2 / person :mod (t3 / this)) :arg1 (a / acknowledge-01 :arg0 (p3 / person) :arg1 (' / ''))))))
(c / change-01 :arg1 (t / this) :time (n / now))
(s / say-01 :arg0 (p / person :name (n / name :op1 "Knowles")) :arg1 (' / '' :frequency (r / rate-entity-91 :arg3 (t / temporal-quantity :quant (N / N-A) :unit (d / day))) :frequency (r2 / rate-entity-91 :arg3 (t2 / temporal-quantity :quant (N2 / N-A) :unit (d2 / day)))))
(m / mr :arg0 (p / person :arg0-of (l / lead-02 :arg1 (c / continent :name (n / name :op1 "Africa")) :mod (o / old :degree (m2 / most)))) :arg1 (p2 / person :name (n2 / name :op1 "Mugabe")) :time (e / early :op1 (y / year :mod (t / this)) :degree (m3 / more)) :time (h / hill :mod (m4 / merdivenlerden) :mod (m5 / merdivenlerden)))
(h / hem?ireydi :arg1 (c / company :mod (o / online)) :mod (v / variety))
(s / say-01 :arg0 (p / person :name (n / name :op1 "Kolonun")) :arg1 (c / contrast-01 :arg1 (b / belong-01 :polarity - :arg0 (a / and :op1 (p2 / person :mod (c2 / country :name (n2 / name :op1 "France"))) :op2 (p3 / person :arg0-of (b2 / belong-01 :arg1 (c3 / country)))) :arg1 (p4 / person :mod (c4 / country))) :arg2 (c5 / criticised :arg1 (r / refugee :arg1-of (g / grow-01)) :arg2 (r2 / refugee :arg1-of (g2 / grow-01)))))
(m / multi-sentence :snt1 (5 / 5-rubber :mode (i / interrogative) :source (l / location :name (n / name :op1 "Turgutreis" :op2 "botla" :op3 "Island")) :destination (d / deficit :mod (d2 / deficit))) :snt2 (s / stanköy :arg1 (a / and :op1 (p / person :arg0-of (h / have-org-role-91 :arg1 (c / country :name (n2 / name :op1 "Pakistan")) :arg2 (h2 / head-of-state))) :op2 (p2 / person :arg0-of (h3 / have-org-role-91 :arg1 (c2 / country :name (n3 / name :op1 "Syria")) :arg2 (l2 / location :name (n4 / name :op1 "Kos" :op2 "Island")))) :op3 (p3 / person :arg0-of (b / belong-01 :arg1 (c3 / country :name (n5 / name :op1 "Greece")))) :op4 (p4 / person :arg0-of (b2 / belong-01 :arg1 (c4 / country :name (n6 / name :op1 "Greece")))) :op5 (p5 / person :arg0-of (b3 / belong-01 :arg1 (c5 / country :name (n7 / name :op1 "Greece")))))))
(c / contrast-01 :arg2 (a / and :op1 (a2 / appreciate-02 :arg0 (a3 / and :op1 (c2 / country :name (n / name :op1 "Germany")) :op2 (p / person :mod (c3 / country :name (n2 / name :op1 "Germany")))) :arg1 (e / effort :purpose (d / deal-01 :arg0 (a4 / and) :arg2 (c4 / crisis)))) :op2 (c5 / contrast-01 :arg1 (t / try-01 :arg0 (a5 / and :op1 (c6 / country) :op2 (c7 / country)) :arg1 (d2 / deal-01 :arg0 (a6 / and) :arg2 (c8 / crisis))) :arg2 (l / lama :arg1 (t2 / thing :arg2-of (s / solve-01) :mod (t3 / temporary :mod (j / just)))))))
(a / and :op1 (w / wake-up-02 :arg1 (a2 / and :op1 (p / person :name (n / name :op1 "Hulya" :op2 "Kocyigit")) :op2 (p2 / person :name (n2 / name :op1 "Mehmet" :op2 "Y.Y?lmaz")) :op3 (p3 / person :name (n3 / name :op1 "Ertugrul" :op2 "Ozkok")) :op4 (p4 / person :name (n4 / name :op1 "Nihat" :op2 "Odaba")) :op5 (p5 / person :name (n5 / name :op1 "Aret" :op2 "Vartanyan")) :op6 (p6 / person :name (n6 / name :op1 "Leyla" :op2 "Alaton")) :op7 (p7 / person :name (n7 / name :op1 "Ayse" :op2 "Arman")))) :op2 (t / take-01 :arg0 (j / jury) :arg1 (a3 / and :op1 (p8 / person :name (n8 / name :op1 "Ayse" :op2 "Arman") :arg0-of (h / have-org-role-91 :arg1 (p9 / person :name (n9 / name :op1 "Ayse" :op2 "Arman")))) :op2 (p10 / person :name (n10 / name :op1 "Ayse" :op2 "Arman") :arg0-of (h2 / have-org-role-91 :arg1 (p11 / person :name (n11 / name :op1 "Ayse" :op2 "Arman")) :arg2 (p12 / person :name (n12 / name :op1 "Ahmet" :op2 "Güne?tekin")))))) :time (w2 / wake-up-02 :arg1 (c / candidate)) :time (w3 / wake-up-02 :arg1 (c2 / candidate)))
(e / erodes :arg0 (a / and :op1 (j / journalist) :op2 (p / person :arg0-of (w / write-01)) :op3 (p2 / person :arg0-of (w2 / write-01)) :op4 (s / society :mod (t / turkish))) :arg1 (f / free-04 :arg1 (a2 / and) :arg2 (a3 / attack-01 :quant (a4 / all))))
(p / possible-01 :arg1 (r / respond-01 :arg0 (w / we) :arg1 (n / need-01 :arg0 (p2 / person :arg0-of (c / consume-01)) :arg1 (p3 / person :arg0-of (c2 / consume-01) :arg1-of (d / differ-02)))) :source (c3 / city :name (n2 / name :op1 "Dubai")) :destination (c4 / city :name (n3 / name :op1 "Moscow")))
(c / contrast-01 :arg2 (l / lead-02 :arg0 (p / person :name (n / name :op1 "Peter" :op2 "Szijjarto") :arg0-of (h / have-org-role-91 :arg1 (c2 / country :arg0-of (h2 / have-org-role-91 :arg2 (m / minister :mod (f / foreign)))) :arg2 (m2 / minister :mod (f2 / foreign)))) :arg1 (b / border-01 :arg1 (c3 / country :poss (h3 / he)) :arg2 (c4 / country :name (n2 / name :op1 "Serbia"))) :time (a / after :op1 (t / telden :arg0 (p2 / person) :arg1 (a2 / and :op1 (s / stop-01 :arg0 (p3 / person) :arg1 (f3 / flow-01 :arg1 (p4 / person :arg0-of (i / immigrate-01)))) :op2 (p5 / plan-01 :arg0 (p6 / person) :arg1 (a3 / attract-01 :arg0 (p7 / person) :arg1 (t2 / theater :mod (b2 / barbed))) :mod (a4 / also)))))))
(m / multi-sentence :snt1 (r / resemble-01 :arg1 (r2 / resemble-01 :arg2 (t / thing :arg1-of (r3 / resemble-01 :arg2 (t2 / thing :arg1-of (r4 / resemble-01 :arg2 (t3 / thing :arg1-of (r5 / resemble-01 :arg2 (t4 / thing :arg1-of (r6 / resemble-01 :arg2 (t5 / thing :arg1-of (r7 / resemble-01 :arg2 (t6 / thing :arg1-of (r8 / resemble-01 :arg2 (t7 / thing :arg1-of (p / precede-01 :arg2 (p2 / program))))))))))))))))) :snt2 (a / and :op1 (n / need-01 :arg0 (t8 / they) :arg1 (m2 / man :mod (e / especiaily :degree (m3 / more)))) :op2 (b / be-located-at-91 :arg1 (y / you) :arg2 (u / under :op1 (r9 / rate :mod (s / suicide) :duration (t9 / temporal-quantity :quant (N / N-A) :unit (y2 / year)))) :arg1-of (r10 / resemble-01 :arg2 (r11 / rate :mod (s2 / suicide) :duration (t10 / temporal-quantity :quant (N2 / N-A) :unit (y3 / year)) :arg1-of (r12 / resemble-01 :arg2 (t11 / this)))))))
(u / use-01 :arg0 (w / woman :mod (p / police)) :arg1 (t / thing :arg1-of (b / base-02 :arg2 (d / day))) :arg2 (s / say-01 :arg0 (w2 / woman :mod (p2 / police)) :arg1 (i / investigate-01 :mode (i2 / interrogative) :arg1 (h / have-03 :mode (i3 / interrogative) :arg0 (d2 / drug) :arg1 (r / role) :manner (d3 / die-01)))))
(i / issue-01 :arg0 (p / person :name (n / name :op1 "Wawrinka") :arg0-of (r / rival-01 :arg1 (p2 / person :name (n2 / name :op1 "Ryan" :op2 "Harrison") :arg0-of (r2 / rival-01 :arg1 (p3 / person :name (n3 / name :op1 "Ryan" :op2 "Harrison") :arg0-of (r3 / rival-01 :arg1 (p4 / person))))))) :arg1 (s / state-01 :arg1-of (f / follow-04)) :time (d / date-entity :year (N / N-A)) :location (a / and :op1 (t / talk-02 :arg2 (l / location :name (n4 / name :op1 "Cincinnati"))) :op2 (h / have-frequency-91 :arg2 (t2 / temporal-quantity :quant (N2 / N-A) :unit (y / year)))))
(t / transfers :arg0 (p / person :name (n / name :op1 "Warburton")))
(a / and :op1 (p / possible-01 :arg1 (d / dundar :arg0 (a2 / and :op1 (i / imprison-01 :arg1 (j / journalist) :arg2 (j2 / journalist)) :op2 (v / virtue :poss (r / rose))) :arg1 (p2 / photo)) :op2 (f / featuring :arg0 (v2 / virtues :arg1 (r2 / rose)) :arg1 (p3 / photo) :condition (s / since :op1 (b / be-located-at-91 :arg1 (y / you) :arg2 (u / under :op1 (d2 / dark :mod (w / well))))))) :op3 (b2 / banners :arg0 (a3 / and :op1 (p4 / person :arg0-of (r3 / read-01 :arg1 (p5 / photo))) :op2 (p6 / person :arg0-of (h / have-rel-role-91 :arg1 (p7 / publication) :arg2 (b3 / banners))) :op3 (p8 / person :arg0-of (h2 / have-rel-role-91 :arg1 (p9 / person) :arg2 (b4 / banners))) :op4 (p10 / person :arg0-of (h3 / have-rel-role-91 :arg1 (p11 / person) :arg2 (b5 / banners))) :op5 (p12 / person :arg0-of (h4 / have-rel-role-91 :arg1 (p13 / person) :arg2 (b6 / banners))) :op6 (p14 / person :arg0-of (h5 / have-rel-role-91 :arg1 (p15 / person) :arg2 (b7 / banners))) :op6 (p16 / person :arg0-of (h6 / have-rel-role-91 :arg1 (p17 / person) :arg2 (b8 / banners))) :op7 (p18 / person :arg0-of (h7 / have-rel-role-91 :arg1 (p19 / person) :arg2 (b9 / banners))))))
(i / issue-02 :arg0 (t / thing :arg2-of (p / price-01 :arg1 (t2 / thing :arg2-of (p2 / price-01 :arg1 (s / stock)) :poss (o / organization :name (n / name :op1 "Glencore"))))) :time (e / early :op1 (m / morning :mod (e2 / early) :part-of (c / city :name (n2 / name :op1 "London")))))
(c / cause-01 :arg0 (s / share-01 :arg0 (o / organization :name (n / name :op1 "Glencore")) :arg1 (t / thing :arg2-of (p / price-01 :arg1 (r / right)))) :arg1 (t2 / thing :arg2-of (p2 / price-01 :arg1 (r2 / right))) :time (m / morning) :time (m2 / morning :mod (e / early)) :location (o2 / organization :name (n2 / name :op1 "London" :op2 "Stock" :op3 "Exchange")))
(t / trust-01 :arg1 (o / organization :name (n / name :op1 "Fenerbahce")) :arg2 (c / country :name (n2 / name :op1 "N-A")))
(m / multi-sentence :snt2 (' / ''))
(c / contrast-01 :arg1 (w / win-01 :arg0 (p / person :arg0-of (w2 / win-01 :arg1 (m / match-03 :quant 4 :mod (l / last) :poss (p2 / person)) :time (a / ahead :op1 (t / team :consist-of (p3 / person :arg0-of (h / have-rel-role-91 :arg1 (p4 / person) :arg2 (b / black-and-white))))))) :arg2 (i / idmanyurdu :location (i2 / in-front-of :op1 (t2 / team :consist-of (p5 / person :arg0-of (h2 / have-rel-role-91 :arg1 (p6 / person) :arg2 (b2 / black-and-white))))))) :arg2 (c2 / continue-01 :arg0 (p7 / person) :arg1 (l2 / lead-02 :arg0 (p8 / person)) :mod (a2 / also)))
(c / contrast-01 :arg1 (p / possible-01 :arg1 (a / and :op1 (g / get-01 :arg0 (t / they) :arg1 (l / license-01 :arg1 (i / i))) :op2 (n / need-01 :arg0 (t2 / they) :arg1 (l2 / let-down-04 :arg0 (t3 / they) :arg1 (i2 / i))))) :arg2 (d / doubt-01 :polarity - :arg0 (i3 / i) :arg1 (t4 / thing :arg1-of (t5 / think-01 :arg0 (i4 / i) :arg2 (t6 / they)))))
(s / see-01 :arg0 (a / and :op1 (p / person :arg0-of (p2 / play-01 :arg1 (t / thing :arg1-of (g / gift-01 :arg2 (o / organization :name (n / name :op1 "PSG")))))) :op2 (p3 / person :name (n2 / name :op1 "Marco") :arg0-of (h / have-org-role-91 :arg1 (p4 / person :name (n3 / name :op1 "Marco")) :arg2 (v / verad)))) :arg1 (a2 / and :op1 (p5 / person :arg0-of (p6 / play-01 :arg1 (t2 / thing :arg1-of (g2 / gift-01 :arg2 (o2 / organization))))) :op2 (p7 / person :name (n4 / name :op1 "Marco") :arg0-of (h2 / have-org-role-91 :arg1 (p8 / person :name (n5 / name :op1 "Marco")) :arg2 (v2 / verad)))) :arg2 (l / level :arg1-of (h3 / high-02 :degree (m / more)) :location (c / continent :name (n6 / name :op1 "Europe"))) :time (m2 / month :mod (l2 / last)) :arg1-of (c2 / cause-01 :arg0 (b / bring-01 :arg0 (l3 / level :arg1-of (h4 / high-02 :degree (m3 / more)) :location (c3 / continent :name (n7 / name :op1 "Europe"))) :arg1 (r / rest :part-of (c4 / corner :mod (f / far) :part-of (p9 / person :name (n8 / name :op1 "Johan" :op2 "Wiland") :arg0-of (t3 / think-01 :arg1 (t4 / think-01 :arg0 (a3 / anybody :arg0-of (t5 / think-01 :arg1 (w / wrong-04 :polarity - :arg1 (n9 / netting)))))) :arg1 (r2 / rest)))))))
(s / show-01 :arg0 (r / report-01) :arg1 (t / thing :arg2-of (p / price-01 :arg1 (o / oil) :arg1-of (c / cause-01 :arg0 (c2 / cut-02 :arg1 (m / monetary-quantity :arg1-of (c3 / cost-01 :arg2 (m2 / monetary-quantity :arg1-of (c4 / cost-01 :arg2 (m3 / monetary-quantity :arg1-of (c5 / cost-01 :arg2 (m4 / monetary-quantity :arg1-of (c6 / cost-01 :arg2 (m5 / monetary-quantity :arg1-of (c7 / cost-01 :arg2 (m6 / monetary-quantity :arg1-of (c8 / cost-01 :arg2 (m7 / monetary-quantity :arg1-of (l / low-04 :degree (m8 / more)))))))))) :mod (l2 / large :degree (m9 / most) :compared-to (m10 / monetary-quantity :arg1-of (c9 / cost-01 :arg2 (m11 / monetary-quantity :arg1-of (c10 / cost-01 :arg2 (m12 / monetary-quantity :arg1-of (c11 / cost-01 :arg2 (m13 / monetary-quantity :arg1-of (c12 / cost-01 :arg2 (m14 / monetary-quantity :arg1-of (c13 / cost-01 :arg2 (m15 / monetary-quantity :arg1-of (c14 / cost-01 :arg2 (m16 / monetary-quantity :arg1-of (c15 / cost-01 :arg2 (m17 / monetary-quantity :arg1-of (l3 / low-04 :degree (m18 / more)))))))))))))))))))))))))) :arg3 (m19 / monetary-quantity :arg2-of (p2 / price-01 :arg1 (o2 / oil)) :mod (l4 / large :degree (m20 / most)) :arg1-of (c16 / cost-01 :arg2 (m21 / monetary-quantity :quant 115 :unit (d / dollar))))))
(p / post-01 :arg0 (p2 / person :name (n / name :op1 "Robert" :op2 "Steiner") :arg0-of (h / have-org-role-91 :arg1 (c / city :mod (d / day)) :arg2 (c2 / correspondent))) :arg2 (p3 / person :arg0-of (h2 / have-org-role-91 :arg1 (m / mail :mod (d2 / day)) :arg2 (c3 / correspondent))))
(( / ( :( (n / name) :op1 "Defnedildi")
(s / show-01 :arg0 (s2 / survey-01 :time (r / recent) :mod (s3 / some)) :arg1 (g / get-02 :arg0 (p / person :mod (c / country :name (n / name :op1 "N-A"))) :arg1 (t / thing :arg2-of (r2 / result-01)) :mod (o / only :polarity -) :location (h / here)))
(m / multi-sentence :snt1 (w / write-01 :arg0 (s / study :arg1-of (c / conduct-01 :arg0 (s2 / surgery-01 :arg2 (s3 / surgery-01 :arg2 (s4 / surgery-01)) :poss (p / person :name (n / name :op1 "Jama")))) :arg0-of (w2 / write-01 :arg1 (a / article))) :arg1 (t / time :arg1-of (l / long-03) :time-of (m2 / manifestation :arg1 (a2 / article)))) :snt2 (t2 / time :arg1-of (l2 / long-03)))
(m / multi-sentence :snt1 (w / write-01 :arg0 (h / he) :arg1 (a / and :op1 (w2 / write-01 :arg0 (h2 / he)) :op2 (e / expert-01 :arg1 (p / person :arg1-of (e2 / expert-01)) :arg2 (s / surgery-01 :arg1 (p2 / publication :name (n / name :op1 "N-A"))))) :time (a2 / after :op1 (s2 / surgery-01 :arg1 (s3 / surgery-01 :arg2 (a3 / article :poss (p3 / person :name (n2 / name :op1 "Jama"))))))) :snt2 (s4 / say-01 :arg0 (p4 / person :arg1-of (e3 / expert-01)) :arg1 (t / take-10 :arg0 (r / rate :mod (m2 / mortality) :mod (p5 / person :name (n3 / name :op1 "Robin" :op2 "Blackstone"))) :arg1 (t2 / time :arg1-of (l / long-03)))))
(a / and :op1 (w / write-01 :arg0 (p / person :name (n / name :op1 "Jama") :arg0-of (w2 / write-01) :arg0-of (w3 / write-01 :arg1 (a2 / article :topic (a3 / and :op1 (s / surgery-01) :op2 (r / rate :mod (d / die-01)))))) :arg1 (t / time :arg1-of (l / long-03))) :op2 (s2 / say-01 :arg0 (p2 / person :arg1-of (e / expert-01)) :arg1 (t2 / take-10 :arg0 (s3 / surgery-01 :arg1 (p3 / person :name (n2 / name :op1 "Robin" :op2 "Blackstone"))) :arg1 (t3 / time :arg1-of (l2 / long-03)))))
(a / and :op1 (b / be-located-at-91 :arg1 (s / store :name (n / name :op1 (i / iga)) :poss (o / organization :name (n2 / name :op1 "Metcash")) :location (l / location :name (n3 / name :op1 "South" :op2 "Australia"))) :arg2 (l2 / location :name (n4 / name :op1 "South" :op2 "Australia"))) :op2 (t / try-01 :arg0 (a2 / and) :arg1 (p / protect-01 :arg0 (a3 / and) :arg1 (p2 / person :mod (s2 / sald?r?s?ndan)))))
(m / multi-sentence :snt1 (p / person :name (n / name :op1 "Bolu" :op2 "Abant")) :snt2 (s / search-01 :arg0 (p2 / person :quant 2 :arg1-of (i / include-91 :arg2 (p3 / person :quant 1 :arg0-of (h / have-org-role-91 :arg1 (o / organization :name (n2 / name :op1 "Baysal" :op2 "University" :op3 "Faculty" :op4 "of" :op5 "Arts")))))) :arg1 (a / and :op1 (h2 / house) :op2 (r / room))) :li 2)
(s / say-01 :arg0 (p / person :quant 1 :arg1-of (i / include-91 :arg2 (p2 / person :arg0-of (h / have-org-role-91 :arg1 (g / government-organization :arg0-of (g2 / govern-01)) :arg2 (m / member)))) :arg0-of (h2 / have-org-role-91 :arg1 (g3 / government-organization :arg0-of (g4 / govern-01)) :arg2 (m2 / minister :mod (p3 / prime))) :arg0-of (h3 / have-org-role-91 :arg1 (g5 / government-organization :arg0-of (g6 / govern-01)) :arg2 (m3 / minister :mod (p4 / prime))) :arg0-of (h4 / have-org-role-91 :arg1 (g7 / government-organization :arg0-of (g8 / govern-01)) :arg2 (m4 / minister :mod (p5 / prime))) :arg0-of (h5 / have-org-role-91 :arg1 (g9 / government-organization :arg0-of (g10 / govern-01)) :arg2 (m5 / minister :mod (p6 / prime))) :arg0-of (h6 / have-org-role-91 :arg1 (g11 / government-organization :arg0-of (g12 / govern-01)) :arg2 (m6 / minister :mod (p7 / prime))) :arg0-of (h7 / have-org-role-91 :arg1 (g13 / government-organization :arg0-of (g14 / govern-01)) :arg2 (m7 / member))) :time (w / week :mod (n / next)) :time (w2 / week :mod (n2 / next)))
(n / name :mod (b / big :degree (m / most)) :domain (p / person :name (n2 / name :op1 "Kate" :op2 "moss")) :location (i / industry :mod (f / fashion)) :mod (a / also) :mod (a2 / also))
(h / hinted :arg0 (p / person :name (n / name :op1 "Renzo" :op2 "juncker")) :arg1 (p2 / public))
(t / time :time-of (w / wraps :arg1 (w2 / wound-01)))
(p / plan-01 :arg1 (a / and :op1 (h / holiday) :op2 (l / leisure)))
(a / and :op1 (c / come-01 :arg1 (p / person :name (n / name :op1 "Zafar" :op2 "Ansari")) :arg3 (g / game :mod (t / team) :mod (r / reserve-01))) :op2 (s / surprise-01 :arg0 (m / man :mod (y / young) :mod (i / impress-01) :arg1-of (t2 / talk-01 :arg0 (i2 / i) :arg2 (h / he) :arg1-of (l / limit-01))) :arg1 (i3 / i)))
(l / list-01 :arg1 (e / economy :poss (e2 / economy :mod (g / globe))) :arg2 (c / concern-01 :arg1 (e3 / economy :mod (g2 / globe))) :arg0-of (c2 / cause-01 :arg1 (r / recommend-01 :arg1 (f / factor :polarity - :prep-in (p / process-02 :arg1 (g3 / get-01 :arg1 (b / black-04))) :mod (m / massive)))))
(k / keep-04 :arg1 (k2 / kefir :mod (t / tok) :arg1-of (f / features :time (t2 / time :arg1-of (s / same-01)) :mod (a / also))) :arg2 (k3 / keep-02 :arg1 (k4 / kefir :mod (t3 / tok))))
(s / say-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (c / country :name (n / name :op1 "Australia") :mod (t / tennis)) :arg2 (c2 / chief))) :arg1 (a / and :op1 (d / damage-01 :arg1 (s2 / situation :mod (e / environment) :arg1-of (d2 / damage-01 :time (r / recent)))) :op2 (d3 / deserve-01 :arg0 (p2 / person) :arg1 (p3 / praise :degree (m / more) :compared-to (c3 / criticize-01)))))
(s / say-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (c / country :name (n / name :op1 "Australia")) :arg2 (p2 / president))) :arg1 (a / and :op1 (p3 / person :arg1-of (i / injure-01) :arg0-of (h2 / have-org-role-91 :arg1 (p4 / person :name (n2 / name :op1 "Steve" :op2 "Healy") :arg0-of (h3 / have-org-role-91 :arg2 (p5 / president))) :arg2 (p6 / person :arg1-of (i2 / injure-01)))) :op2 (p7 / person :name (n3 / name :op1 "Thanasi" :op2 "Kokkinakis" :op3 "Nick" :op4 "Kyrgios") :arg0-of (d / deserve-01 :arg1 (p8 / praise :degree (m / more) :compared-to (c2 / criticize-01))))))
(s / say-01 :arg0 (h / he) :arg1 (a / and :op1 (s2 / sponsor-01 :arg0 (a2 / and :op1 (p / person :name (n / name :op1 "McKee")) :op2 (p2 / person :name (n2 / name :op1 "Capewell"))) :arg1 (m / meet-03 :arg0 (p3 / person :quant 1 :arg1-of (i / include-91 :arg2 (p4 / person :arg0-of (d / depend-01 :polarity -) :arg0-of (d2 / depend-01 :polarity -) :arg0-of (d3 / depend-01 :polarity -) :arg0-of (d4 / depend-01 :polarity -) :arg0-of (d5 / depend-01 :polarity -) :arg0-of (d6 / depend-01 :polarity -) :arg0-of (d7 / depend-01 :polarity -))))) :op2 (t / thing :arg1-of (s3 / say-01 :arg0 (h2 / he))))))
(m / multi-sentence :snt1 (s / say-01 :arg1 (c / cease-01 :arg0 (p / person :name (n / name :op1 "Eda" :op2 "Erdener" :op3 "B?NGÖL") :arg0-of (h / have-org-role-91 :arg1 (o / organization :name (n2 / name :op1 "University" :op2 "of" :op3 "Bingol")) :arg2 (p2 / professor))) :arg1 (f / faculty :mod (l / literature)))) :snt2 (i / investigate-01 :arg1 (i2 / investigate-01 :mod (a / administrate-01))))
(s / say-01 :arg0 (h / he) :arg1 (p / person :arg1-of (b / black-05) :domain (p2 / person :name (n / name :op1 "Matt" :op2 "Damon") :arg0-of (u / use-01 :arg1 (m / mrpooni))) :location (r / room) :mod (o / only)) :arg1-of (c / cause-01 :arg0 (s2 / speak-01 :arg0 (p3 / person) :arg1 (d / diversity :poss (p4 / people :prep-on (' / '' :mod (w / white))))) :arg1-of (s3 / say-01 :arg0 (h2 / he))))
(a / and :op1 (p / person :name (n / name :op1 "Neilson")) :op2 (o / organization :name (n2 / name :op1 "Hearts")) :op3 (o2 / organization :name (n3 / name :op1 "Hearts")))
(c / call-01 :arg0 (h / he) :arg1 (p / product :name (n / name :op1 "Twitter")) :arg2 (a / and :op1 (p2 / person :arg0-of (l / lead-02 :arg1 (r / resource :mod (c2 / central) :mod (t / this)))) :op2 (c3 / content :topic (t2 / talk-01 :arg0 (p3 / person :name (n2 / name :op1 "Ali" :op2 "Ozcan") :arg0-of (h2 / have-org-role-91 :arg1 (c4 / city) :arg2 (m / mp))) :arg1 (m2 / message-01 :arg0 (p4 / person))))))
(a / and :op2 (a2 / and :op1 (a3 / answer-01 :arg1 (t / they) :arg2 (t2 / they)) :op2 (w / write-01 :arg0 (t3 / they) :arg1 (a4 / advise-01 :arg0 (t4 / they) :arg1 (w2 / we) :arg2 (a5 / advise-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (g / government-organization :arg0-of (g2 / govern-01 :arg1 (c / country-region))) :arg2 (f / friend :mod (h2 / haz?rlanan)))))))))
(e / event :mod (a / amr-unknown) :time (i / increase-01 :arg0 (g / government-organization :name (n / name :op1 "Fed")) :arg1 (r / rate :mod (i2 / interest))))
(c / cause-01 :arg0 (o / order-02 :arg0 (p / person :arg0-of (h / have-rel-role-91 :arg1 (p2 / person) :arg2 (h2 / husband))) :arg1 (p3 / person :arg0-of (h3 / have-rel-role-91 :arg1 (p4 / person) :arg2 (h4 / husband)))) :time (d / date-entity :year 1982 :month 10))
(a / and :op1 (b / be-located-at-91 :arg1 (o / organization :name (n / name :op1 "Scotland" :op2 "Job" :op3 "Corps")) :arg2 (m / market :mod (e / employ-01)) :time (m2 / month :mod (t / this))) :op2 (s / see-01 :arg0 (w / we) :arg1 (d / decline-01 :arg1 (a2 / and :op1 (e2 / employ-01 :polarity -) :op2 (d2 / develop-01)))))
(m / multi-sentence :snt1 (c / contrast-01 :arg2 (r / recommend-01 :arg1 (g / get-01 :arg0 (p / person :name (n / name :op1 "Wood") :arg0-of (g2 / get-01 :arg1 (l / laugh-01 :mod (l2 / last)))) :arg1 (l3 / laugh-01 :mod (l4 / last)) :condition (d / do-02 :polarity - :arg0 (y / you))))) :snt2 (p2 / possible-01 :arg1 (r2 / relate-01 :arg1 (b / bachelor) :arg2 (i / information))))
(r / responsible-03 :arg0 (p / person :name (n / name :op1 "Jeff" :op2 "van" :op3 "der" :op4 "Eems") :mod (c / country :name (n2 / name :op1 "Britain"))) :arg1 (a / and :op1 (c2 / continents :quant 1) :op2 (c3 / continents :location (c4 / continent :name (n3 / name :op1 "Africa")))))
(a / and :op1 (r / return-01 :arg1 (p / person :arg0-of (i / injure-01)) :arg3 (i2 / injure-01 :arg1 (p2 / person)) :frequency (s / sometimes) :purpose (s2 / strengthen-01 :arg0 (p3 / person) :arg1 (b / body :poss (y / you))) :frequency (s3 / sometimes)) :op2 (p4 / possible-01 :arg1 (l / live-01 :arg0 (y2 / you) :manner (v / vulnerable) :purpose (i3 / injure-01 :arg1 (b2 / body)))) :op3 (p5 / process-02 :arg1 (w / win-01 :arg0 (p6 / person :name (n / name :op1 "Wenger")) :arg1 (f / fight-01 :arg0 (p7 / person)))))
(p / provide-01 :arg0 (p2 / person :name (n / name :op1 "Ben" :op2 "Cousins") :arg0-of (p3 / play-01 :arg1 (f / football))) :arg1 (m / model :mod (p4 / permanent)))
(a / and :op1 (s / seviyordum :arg0 (p / person :name (n / name :op1 "Amy")) :degree (v / very) :time (s2 / so-far)) :op2 (t / tell-01 :arg0 (p2 / person) :arg2 (i / i) :mod (o / only)))
(e / encourages :arg0 (p / paradise :poss (c / country :name (n / name :op1 "Brazil")) :time (d / date-entity :dayperiod (N / N-A))) :manner (h / health))
(a / and :op1 (c / cause-01 :arg0 (i / investigate-01) :arg1 (t / take-01 :arg1 (s / signatures :arg1-of (t2 / take-01 :arg3 (c2 / custody))))) :op2 (s2 / start-01 :arg1 (r / remove-01 :arg1 (s3 / signatures) :arg2 (o / office))))
(m / multi-sentence :snt1 (a / and :op1 (f / font :arg0 (c / city :name (n / name :op1 "London")) :arg1 (b / brand :name (n2 / name :op1 (u / underground)) :mod (u2 / underground))) :op2 (t / turn-02 :arg0 (c2 / city) :arg1 (b2 / brand) :arg2 (t2 / tank)) :op3 (t3 / turn-02 :arg0 (c3 / city) :arg1 (b3 / brand) :arg2 (t4 / tank))) :snt2 (s / say-01 :arg0 (p / political-party) :arg1 (t5 / travel-01 :arg0 (y / you) :arg3 (d / dlr :quant 15-18 :mod (s2 / september)))))
(r / refuse-01 :arg0 (p / person :name (n / name :op1 "Douglass")) :arg1 (r2 / respond-01 :arg0 (p2 / person) :arg1 (t / thing :arg1-of (c / comment-01))))
(a / and :op1 (s / shoot-02 :arg1 (i / i) :location (l / location :name (n / name :op1 "Joburg"))) :op2 (h / have-03 :arg0 (p / person :arg0-of (h2 / have-03 :polarity - :arg1 (p2 / person :mod (y / young)))) :arg1 (a2 / and :op1 (p3 / person :mod (y2 / young)) :op2 (p4 / person :arg0-of (h3 / have-org-role-91 :arg1 (r / revenue) :arg3 (t / teach-01))) :op3 (p5 / person :arg0-of (h4 / have-org-role-91 :arg1 (r2 / revenue) :arg3 (t2 / teach-01))) :op4 (p6 / person :arg0-of (h5 / have-org-role-91 :arg1 (r3 / revenue) :arg3 (t3 / teach-01))) :op5 (p7 / person :arg0-of (h6 / have-org-role-91 :arg1 (r4 / revenue) :arg3 (t4 / teach-01))))))
(s / say-01 :arg0 (p / person :name (n / name :op1 "Bert" :op2 "Koenders") :arg0-of (h / have-org-role-91 :arg1 (p2 / person :name (n2 / name :op1 "Bashar" :op2 "al-Assad") :arg0-of (h2 / have-org-role-91 :arg1 (c / country) :arg2 (m / minister :mod (f / foreign)))) :arg2 (m2 / minister :mod (f2 / foreign)))) :arg1 (r / recommend-01 :arg1 (t / try-01 :arg1 (t2 / try-01 :arg1 (h3 / he)))))
(p / possible-01 :arg1 (a / and :op1 (l / limit-01 :arg1 (m / move-01 :arg1 (r / rate-entity-91 :arg1 (m2 / monetary-quantity :quant 32-33 :unit (d / dollar)) :arg2 (v / volume-quantity :quant (N / N-A) :unit (g / gallon))))) :op2 (p2 / possible-01 :arg1 (i / increase-01 :arg1 (p3 / pressure-01 :manner (l2 / live))))) :arg1-of (l3 / long-03))
(d / destroy-01 :arg0 (t / thing :arg1-of (s / say-01 :arg0 (o / ouster))) :arg1 (d2 / destroy-01 :arg0 (m / mass :arg0-of (p / pain-01)) :arg1 (s2 / site :mod (h / holy))) :time (b / before :op1 (n / now) :quant (f / few :op1 (t2 / temporal-quantity :quant (N / N-A) :unit (d3 / day)))))
(h / have-concession-91 :arg1 (s / say-01 :arg0 (p / person :arg0-of (h2 / have-org-role-91 :arg1 (p2 / publication :name (n / name :op1 "ABC")) :arg2 (p3 / poll-01 :arg0 (p4 / person))) :mod (n2 / new)) :arg1 (a / agree-01 :arg0 (p5 / person) :arg2 (p6 / person :name (n3 / name :op1 "Trump")))) :arg2 (i / issue-02 :arg0 (r / relate-01) :arg1-of (r2 / relate-01)) :li 6)
(c / charge-05 :arg1 (p / person :name (n / name :op1 "Hughes")) :arg2 (a / and :op1 (r / race :quant 6) :op2 (p2 / person :quant 4 :arg1-of (f / find-01 :arg0 (p3 / person)))))
(a / and :op1 (l / last-01 :arg1 (p / period :mod (s / short)) :arg2 (p2 / period :mod (s2 / short))) :op2 (p3 / plan-01 :arg0 (i / i) :duration (t / temporal-quantity :quant (N / N-A) :unit (d / day))))
(a / and :op1 9 :op2 (a2 / arkada?lar?n?za) :op3 (a3 / arkada?lar?n?za))
(a / and :op1 (r / right-05 :polarity - :arg1 (p / person :arg0-of (h / have-org-role-91 :arg1 (o / organization :name (n / name :op1 "Federal" :op2 "Open" :op3 "Market" :op4 "Committee")) :arg2 (m / member))) :arg2 (v / vote-01 :arg0 (p2 / person) :arg1 (a2 / and :op1 (p3 / person :arg0-of (h2 / have-org-role-91 :arg2 (m2 / member))) :op2 (p4 / person :name (n2 / name :op1 "Lacker") :arg0-of (p5 / pressure-01 :arg1 (r2 / raise-01 :arg0 (p6 / person) :arg1 (r3 / rate))))))) :op2 (r4 / refer-01 :arg0 (p7 / person) :arg1 (t / thing :arg1-of (d / decide-01 :arg3 1998-99))))
(m / multi-sentence :snt1 (c / contrast-01 :arg2 (t / think-01 :arg0 (i / i) :arg1 (i2 / increase-01 :polarity - :arg0 (i3 / i) :arg1 (e / excuse-02 :arg1 (a / and :op1 (w / wait-01 :arg1 (t2 / they) :arg2 (w2 / wait-01 :arg1 (t3 / they) :arg2 (b / bit :mod (l / little)))) :op2 (p / provide-01 :arg0 (t4 / they) :arg1 (e2 / enough))))))) :snt2 (s / say-01 :arg0 (h / he)))
(ö / ö?renildi :arg1 (h / hotel) :arg2 (a / and :op1 (p / person :mod (f / foreign)) :op2 (p2 / person :arg0-of (h2 / have-org-role-91 :arg1 (o / organization :name (n / name :op1 "United" :op2 "Nations")) :arg2 (o2 / officer))) :op3 (p3 / person :arg0-of (h3 / have-org-role-91 :arg1 (o3 / organization :name (n2 / name :op1 "UN")) :arg2 (o4 / officer))) :op4 (p4 / person :arg0-of (h4 / have-org-role-91 :arg1 (o5 / organization) :arg2 (o6 / officer)))) :prep-in (p5 / particular))
(m / move-01 :polarity - :arg1 (p / person :arg0-of (h / have-rel-role-91 :arg1 (h2 / he) :arg2 (w / wife) :time (f / future)) :arg0-of (h3 / have-rel-role-91 :arg1 (h4 / he) :arg2 (w2 / wife))) :arg2 (c / corridor :arg1 (p2 / person) :arg1-of (s / same-01)) :degree (v / very))
(o / or :op1 (s / sleep-01 :arg0 (p / person)) :op2 (s2 / study-01 :polarity - :arg0 (p2 / person)) :manner (w / way))
(o / or :op1 (s / sleep-01 :arg0 (p / person)) :op2 (i / inspire-01 :arg0 (t / that) :arg1 (p2 / person) :arg2 (c / class :arg0-of (w / work-01))) :manner (w2 / way))
(c / contrast-01 :arg1 (a / appear-01 :arg1 (b / bag :mod (s / small)) :time (a2 / already) :location (f / face :part-of (w / we)) :time (a3 / already)) :arg2 (r / reduce-01 :arg0 (t / time :mod (t2 / this)) :arg1 (c2 / case-03 :arg1 (b2 / bag :arg0-of (h / handle-01) :mod (l / large)))))
(( / ( :( (n / name) :op1 "Stresliyken")
(d / do-02 :arg0 (i / i) :arg1 (t / thing :poss (i2 / i)) :mod (a / actual))
(g / give-01 :mode (i / imperative) :arg0 (y / you) :arg1 (m / message) :arg2 (w / we))
(a / and :op1 (p / put-01 :arg0 (a2 / and :op1 (m / market :mod (l / labor)) :op2 (m2 / market :mod (l2 / labor))) :arg1 (a3 / and :op1 (m3 / market :mod (l3 / labor)) :op2 (i / inflation)) :ord (o / ordinal-entity :value 1)) :op2 (i2 / important :degree (m4 / most) :domain (t / thing :arg1-of (s / say-01 :arg0 (p2 / person :arg0-of (h / have-org-role-91 :arg1 (f / firm :name (n / name :op1 (s2 / simsar))) :arg2 (o2 / organization :name (n2 / name :op1 "Stifel" :op2 "Nicolaus" :op3 "&" :op4 "Co"))))))))
(s / say-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (f / firm :mod (t / trade-01) :poss (o / organization :name (n / name :op1 "Stifel" :op2 "Nicolaus" :op3 "&" :op4 "Co"))) :arg2 (c / chief :mod (c2 / chief)))) :arg1 (t2 / thing :mod (i / important :degree (m / most)) :domain (t3 / thing :mod (i2 / important :degree (m2 / most)) :domain (a / and :op1 (m3 / market-01 :arg1 (a2 / and :op1 (m4 / market :ord (o2 / ordinal-entity :value 1)) :op2 (m5 / market :mod (l / labor)))) :op2 (t4 / thing :arg1-of (s2 / say-01 :arg0 (p2 / person :name (n2 / name :op1 "Lindsey" :op2 "M." :op3 "Piegza"))))))) :manner (f2 / frank))
(a / and :op1 (s / speak-01 :arg0 (p / person :arg0-of (p2 / produce-01 :arg1 (w / weed :mod (c / city)))) :arg2 (p3 / person :arg0-of (r / report-01)) :mod (a2 / also)) :op2 (c2 / cause-01 :arg0 (a3 / and :op1 (p4 / person :arg0-of (r2 / report-01)) :op2 (f / final)) :arg1 (r3 / reason :arg0-of (c3 / cause-01 :arg1 (r4 / receive-01 :polarity - :arg0 (p5 / person :ord (o / ordinal-entity :value 1) :arg0-of (h / have-org-role-91 :arg2 (c4 / contestants))) :arg1 (a4 / awards :mod (a5 / any)))))))
(b / burn-01 :arg0 (t / terrorist) :arg1 (s / school) :location (l / location :name (n / name :op1 "Diyarbakir")))
(h / high-02 :mode (i / interrogative) :polarity - :arg1 (p / person :mod (o / other)))
(p / person :mode (i / interrogative) :mod (o / other) :domain (p2 / person :mod (o2 / other)))
(s / say-01 :arg1 (o / or :op1 (' / '' :arg1 (p / person :name (n / name :op1 "Trump") :arg1-of (i / include-91 :arg2 (p2 / person :arg0-of (h / have-org-role-91 :arg2 (g / general))) :arg3 (p3 / percentage-entity :value 67)))) :op2 (s2 / satisfy-01 :arg0 (p4 / person :arg0-of (s3 / satisfy-01 :arg1 (p5 / person))) :arg1 (p6 / person))) :arg2 (s4 / say-01 :arg0 (p7 / person) :arg1 (b / be-02 :arg1 (p8 / person))) :time (o2 / over :op1 (w / week :mod (p9 / past))))
(s / sisteminizin :arg1 (i / it) :arg2 (w / work-09 :arg1 (i2 / it)) :manner (h / health))
(c / contrast-01 :arg1 (s / say-01 :arg0 (t / they) :arg1 (s2 / strengthen-01 :arg0 (t2 / they) :arg1 (l / law))) :arg2 (s3 / say-01 :arg0 (t3 / they)))
(a / and :op1 (t / target-01 :arg0 (t2 / thing :arg1-of (c / comment-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (o / organization :name (n / name :op1 "Rangers")) :arg2 (b / boss))))) :arg1 (t3 / target :mod (t4 / transfer-01) :mod (o2 / only) :arg1-of (s / set-02 :arg0 (c2 / comment-01 :arg0 (p2 / person :arg0-of (h2 / have-org-role-91 :arg1 (o3 / organization) :arg2 (b2 / boss)))))) :time (b3 / before :op1 (n2 / now) :quant (s2 / some :op1 (t5 / temporal-quantity :quant (N / N-A) :unit (w / week))))) :op2 (i / insist-01 :arg0 (p3 / person) :arg1 (w2 / want-01 :polarity - :arg0 (p4 / person) :arg1 (u / undermine-01 :arg0 (p5 / person) :arg1 (u2 / union-02)))))
(i / include-91 :arg1 (p / person :arg1-of (i2 / include-91 :arg2 (p2 / person :arg0-of (v / vote-01) :mod (p3 / primary)) :arg3 (s / some))) :arg2 (o / or :op1 (c / candidate :poss (c2 / candidate :mod (d / democracy))) :op2 (c3 / candidate :poss (p4 / party :poss (o2 / or)))) :mod (m / main))
(c / come-01 :arg1 (y / you) :arg4 (s / samand?ra))
(a / and :op1 (f / feel-01 :arg0 (a2 / and :op1 (c / class :arg0-of (w / work-01)) :op2 (p / person :arg0-of (s / study-01)) :op3 (p2 / person :arg0-of (s2 / study-01))) :arg1 (p3 / pretend-01 :arg0 (p4 / person) :arg1 (d / do-02 :arg0 (p5 / person)))) :op2 (c2 / cause-01 :arg0 (a3 / amr-unknown) :arg1 (a4 / and :op1 (f2 / feel-01 :arg0 (p6 / person) :arg1 (p7 / pretend-01 :arg0 (p8 / person) :arg1 (s3 / study-01 :arg0 (p9 / person))) :mod (u / usual) :time (a5 / always)) :op2 (b / become-01 :arg1 (p10 / person) :arg2 (h / habit :beneficiary (p11 / person :arg0-of (s4 / study-01) :arg0-of (c3 / complete-01 :arg1 (t / task :arg1-of (b2 / become-01 :arg2 (a6 / and :op1 (t2 / thing :domain (i / it)) :op2 (h2 / hold-04 :arg1 (t3 / task) :time (a7 / after :op1 (n / now) :quant (u2 / up-to :op1 (t4 / temporal-quantity :quant (N / N-A) :unit (y / year)))))))))))))))
(h / have-concession-91 :arg1 (w / wound-01 :arg1 (p / person :arg0-of (h2 / have-rel-role-91 :arg1 (i / i) :arg2 (s / son))) :arg1-of (s2 / sure-02)) :arg2 (p2 / possible-01 :polarity - :arg1 (g / go-02 :arg0 (w2 / we) :arg4 (h3 / home) :arg1-of (c / cause-01 :arg0 (p3 / person :arg0-of (h4 / have-rel-role-91 :arg1 (i2 / i) :arg2 (s3 / son)))))))
(s / state-01 :arg0 (o / organization :name (n / name :op1 "MHP") :arg1-of (s2 / state-01 :arg0 (g / government-organization :name (n2 / name :op1 "Bureau")))) :arg1 (a / admit-01 :arg0 (g2 / government-organization) :arg1 (c / check-01 :arg1 (h / health) :arg1-of (p / plan-01 :location (f / framework :poss (h2 / hospital)))) :time (p2 / previous)))
(c / contrast-01 :arg1 (e / exceed-01 :polarity - :arg0 (a / agency :mod (n / news)) :arg1 (t / thing :arg2-of (c2 / characteristic-02 :arg1 (s / service :mod (l / language) :mod (c3 / country :name (n2 / name :op1 "N-A")))))) :arg2 (r / report-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (c4 / company) :arg2 (o / official))) :arg1 (b / ban-01 :arg1 (b2 / ban-01) :location (a2 / abroad))))
(' / '' :arg1 (s / story :mod (l / love-01) :arg1-of (e / exhibit-01)) :time (u / until :op1 (d / date-entity :month 1 :day 31)))
(s / say-01 :arg0 (h / he) :arg1 (t / thing :arg1-of (s2 / say-01 :arg0 (h2 / he))))
(s / say-01 :arg0 (p / person :name (n / name :op1 "Meg" :op2 "Whitman") :arg0-of (h / have-org-role-91 :arg1 (a / and :op1 (p2 / person :arg0-of (h2 / have-org-role-91 :arg2 (p3 / president))) :op2 (p4 / person :arg0-of (h3 / have-org-role-91 :arg2 (e / executive))) :op3 (p5 / person :arg0-of (h4 / have-org-role-91 :arg2 (e2 / executive))) :op4 (p6 / person :arg0-of (h5 / have-org-role-91 :arg2 (e3 / executive))) :op5 (p7 / person :arg0-of (h6 / have-org-role-91 :arg2 (e4 / executive)))) :arg0-of (h7 / have-org-role-91 :arg1 (u / unit) :arg2 (e5 / executive)))) :arg1 (a2 / and :op1 (l / leave-15 :arg0 (p8 / person :arg0-of (h8 / have-org-role-91 :arg1 (u2 / unit) :arg2 (e6 / executive)) :arg0-of (h9 / have-org-role-91 :arg1 (u3 / unit)) :arg0-of (h10 / have-org-role-91 :arg1 (u4 / unit))) :arg1 (u5 / unit)) :op2 (p9 / provide-01 :arg0 (p10 / person) :arg1 (s2 / structure :arg1-of (c / cost-01 :arg2 (m / monetary-quantity :arg1-of (c2 / cost-01 :arg2 (m2 / monetary-quantity :arg1-of (c3 / cost-01 :arg2 (m3 / monetary-quantity :arg1-of (c4 / cost-01 :arg2 (m4 / monetary-quantity :arg1-of (c5 / cost-01 :arg2 (m5 / monetary-quantity :arg1-of (p11 / possible-01 :polarity -)))))))))))))))
(l / lose-02 :arg0 (p / person :arg0-of (h / have-rel-role-91 :arg1 (p2 / person :name (n / name :op1 "Celine" :op2 "Dion")) :arg2 (h2 / husband))) :arg1 (l2 / life :poss (p3 / person)) :arg2 (p4 / person :name (n2 / name :op1 "Rene" :op2 "Angelil") :arg0-of (h3 / have-rel-role-91 :arg1 (p5 / person) :arg2 (h4 / husband))) :time (b / bear-02 :arg1 (p6 / person)))
(a / and :op1 (s / say-01 :arg0 (h / he) :arg1 (g / goal :mod (c / company :mod (g2 / globe)) :arg0-of (h2 / have-org-role-91 :arg1 (b / board :mod (g3 / globe)) :arg2 (c2 / chairman))) :time (m / meet-03 :arg1-of (r / relate-01 :arg2 (c3 / combination :poss (c4 / company :mod (g4 / globe) :arg0-of (h3 / hold-01)))))) :op2 (a2 / add-01 :arg0 (h4 / he) :arg1 (g5 / goal :poss (w / we) :mod (g6 / globe))))
(m / multi-sentence :snt2 (o / obligate-01 :arg1 (m2 / market :mod (f / finance) :arg1-of (p / panic :degree (t / total))) :arg2 (t2 / take-01 :arg0 (m3 / market) :arg1 (y / year :arg1-of (l / long-03))) :arg1-of (c / cause-01 :arg0 (t3 / thing :arg1-of (d / decide-01 :arg0 (g / government-organization :name (n / name :op1 "Fed")) :prep-in (d2 / direction :mod (t4 / this)))))))
(o / outcome :arg0 (p / person :arg0-of (h / have-org-role-91 :arg2 (h2 / head-of-state))) :arg1 (a / and :op1 (p2 / person :arg0-of (h3 / have-org-role-91 :arg2 (h4 / head-of-state))) :op2 (p3 / person :arg0-of (h5 / have-org-role-91 :arg2 (h6 / head-of-state))) :op3 (p4 / person :arg0-of (h7 / have-org-role-91 :arg2 (h8 / head-of-state))) :op4 (p5 / person :arg0-of (h9 / have-org-role-91 :arg2 (h10 / head-of-state))) :op5 (p6 / person :arg0-of (h11 / have-org-role-91 :arg1 (o2 / organization :name (n / name :op1 "Lancet")) :arg3 (l / lead-02 :arg0 (p7 / person)))) :mod (m / main) :time (m2 / month :mod (l2 / last)) :location (c / core :poss (t / thing :arg1-of (t2 / target-01)))))
(s / say-01 :arg0 (g / government-organization :name (n / name :op1 "Fed")) :arg1 (p / permanent :domain (s2 / situation :mod (t / this)) :arg1-of (c / cause-01 :arg0 (a / and :op1 (e / expect-01 :arg0 (p2 / person :arg1-of (r / rank-01) :arg1 (r2 / rate-entity-91 :arg1 (p3 / percentage-entity :value (N / N-A)) :arg2 (t2 / temporal-quantity :quant (N2 / N-A) :unit (y / year)))) :op2 (s3 / stand-01 :arg1 (s4 / situation) :arg2 (r3 / rate-entity-91 :arg1 (u / under :op1 (m / monetary-quantity :quant (N3 / N-A) :unit (p4 / pound))) :arg2 (t3 / temporal-quantity :quant (N4 / N-A) :unit (y2 / year)))))))))
(m / multi-sentence :snt1 103 :snt2 (p / provisions))
(s / say-01 :arg0 (h / he) :arg1 (a / and :op1 (s2 / seize-01 :arg0 (a2 / and :op1 (c / casing :consist-of (b / boat)) :op2 (g / gun)) :arg1 (a3 / and :op1 (c2 / casing :consist-of (b2 / boat)) :op2 (g2 / gun) :arg1-of (c3 / compare-01 :arg2 (d / data :arg1-of (f / find-01 :arg0 (d2 / data) :prep-in (s3 / study-01 :mod (b3 / ballistics))))))) :op2 (e / examine-01 :arg0 (p / person :arg0-of (h2 / have-org-role-91 :arg2 (p2 / person :arg1-of (e2 / expert-01)))) :arg1 (p3 / problem :topic (f2 / face-01 :arg0 (p4 / person) :arg1 (p5 / problem))) :time (e3 / examine-01 :arg0 (a4 / and :op1 (c4 / casing :consist-of (b4 / boat)) :op2 (p6 / person :arg0-of (h3 / have-org-role-91 :arg2 (b5 / ballistic)))) :arg1 (p7 / problem)))))
(c / continue-01 :arg1 (f / fight-01) :time (u / until :op1 (c2 / convince-01 :arg1 (e / evil) :arg2 (e2 / evil))))
(p / police :location (o / offing))
(a / and :op1 (' / '' :domain (i / it) :mod (s / stalemate)) :op2 (g / get-01 :polarity - :arg0 (p / person :mod (c / country :name (n / name :op1 "Britain")) :mod (c2 / country :name (n2 / name :op1 "Britain"))) :arg1 (a2 / anything :arg0-of (b / benefit-01 :arg1 (p2 / person)))))
(w / write-01 :arg0 (p / person :arg0-of (w2 / write-01)))
(l / lead-03 :arg2 (p / popularization :arg1 (b / bag) :time (c / current)) :time (w / week :mod (f / fashion)))
(c / contrast-01 :arg2 (p / present-01 :arg1 (a / and :op1 (h / hand :part-of (l / lady)) :op2 (h2 / hand :part-of (l2 / lady))) :arg2 (v / vote-01 :arg0 (l3 / lady) :arg1 (t / thing :arg2-of (n / name-01 :arg1 (p2 / person)) :ord (o / ordinal-entity :value 1)))))
(m / multi-sentence :snt1 (a / amr-unknown :manner-of (a2 / assess-01 :arg0 (p / person) :arg1 (i / it))) :snt2 (a3 / ask-02 :arg0 (w / we) :arg1 (p2 / person :arg0-of (s / study-01) :arg1-of (e / expert-01 :arg2 (e2 / educate-01)) :arg1-of (e3 / expert-01 :arg2 (e4 / educate-01))) :arg2 (p3 / person :name (n / name :op1 "Murat") :arg0-of (s2 / study-01) :arg1-of (e5 / expert-01 :arg2 (e6 / educate-01)))))
(t / think-01 :arg0 (i / i) :arg1 (r / run-02 :arg0 (h / he) :arg1 (a / alien)))
(b / bad-07 :polarity - :arg1 (g / group :mod (t / terrorist) :mod (s / separatist)) :arg1-of (c / cause-01 :arg0 (a / and :op1 (t2 / thing :arg1-of (b2 / bad-07 :degree (m / most :mod (e / even)))) :op2 (s2 / söyleyemedin :mod (s3 / schoolboy :mod (e2 / even))))))
(m / multi-sentence :snt1 (r / rely-01 :arg1 (d / drop-01 :arg1 (t / thing :arg2-of (p / price-01)))) :snt2 (c / cause-01 :arg0 (c2 / compete-01 :source (m2 / monetary-quantity :quant 1 :unit (d2 / dollar)) :arg1-of (i / implement-01 :arg0 (t2 / they) :time (n / now))) :arg1 (d3 / drop-01 :arg1 (t3 / thing :arg2-of (p2 / price-01)))))
(i / inherently :location (f / fascinated :mod (b / both)))
(m / multi-sentence :snt1 (s / say-01 :arg0 (p / person :name (n / name :op1 "Ba?dadio?lu")) :arg1 (t / thing :mod (n2 / new) :arg1-of (o / overcome-01 :arg0 (p2 / person))) :condition (c / come-up-11 :arg0 (p3 / person) :arg1 (w / work-01 :arg0 (p4 / person) :mod (a / again)))) :snt2 (s2 / say-01 :arg0 (h / he) :arg1 (d / develop-01 :arg1-of (s3 / special-02) :arg1-of (r / relate-01 :arg2 (o2 / office :mod (e / employ-01))) :arg1-of (f / follow-01 :arg2 (t2 / thing :arg0-of (c2 / cause-01 :arg1 (f2 / follow-02 :arg0 (h2 / he))))))))
(a / and :op2 (s / side-01 :arg0 (s2 / side) :arg1 (s3 / side) :time (f / feel-01 :arg0 (t / they) :arg1 (c / comfortable-02))))
(t / teach-01 :arg0 (a / and :op1 (p / person :arg0-of (h / have-org-role-91 :arg1 (s / science :mod (s2 / social)) :arg2 (m / member))) :op2 (p2 / person :arg0-of (h2 / have-org-role-91 :arg1 (o / organization :name (n / name :op1 "History" :op2 "Department")) :arg2 (m2 / member)) :quant (m3 / many))) :arg1 (t2 / teach-01 :arg0 (a2 / and) :mod (o2 / of-course)) :arg2 (a3 / and :op1 (s3 / science :mod (s4 / social)) :op2 (p3 / person :arg0-of (h3 / have-org-role-91 :arg1 (o3 / organization) :arg2 (m4 / member)))))
(m / move-02 :arg0 (a / and :op1 (p / person :name (n / name :op1 "Karl" :op2 "Stefanovic")) :op2 (p2 / person :name (n2 / name :op1 "Lisa" :op2 "Wilkinson"))) :arg1 (t / topple-01 :arg0 (a2 / and) :arg1 (l / lead-02 :arg0 (p3 / person :arg1-of (l2 / liberal-02)))) :arg1-of (c / cause-01 :arg0 (s / succeed-01 :polarity - :arg0 (a3 / and) :arg1 (a4 / achieve-01 :arg0 (a5 / and) :arg1 (i / increase-01 :arg1 (r / rate-01))) :time (t2 / today))))
(a / and :op1 (w / wilkinson :arg0 (a2 / and :op1 (s / stefanovic) :op2 (l / lisa)) :arg1 (e / effort :purpose (o / overthrow-01 :arg1 (p / person :arg0-of (l2 / lead-02 :arg1 (p2 / person :arg1-of (l3 / liberal-02)))))) :arg2 (e2 / effort :purpose (o2 / overthrow-01 :arg1 (p3 / person :arg1-of (l4 / liberal-02))))) :op2 (f / fail-01 :arg1 (p4 / person) :arg2 (p5 / provide-01 :arg0 (p6 / person) :arg1 (i / increase-01 :arg1 (r / rate-01)))))
(s / say-01 :arg0 (r / round :quant (b / between :op1 9 :op2 9)) :arg1 (s2 / say-01 :arg1 (q / quality :mod (t / that)) :mod (o / only) :time (p / past)))
(a / and :op1 (r / raise-01 :arg0 (o / organization :name (n / name :op1 "US" :op2 "central" :op3 "bank" :op4 "of" :op5 "the" :op6 "Fed")) :arg1 (r2 / rate :mod (i / interest)) :arg2 (a2 / and :op1 (e / economy) :op2 (a3 / asset :mod (f / finance)))) :op2 (r3 / respond-01 :arg1 (a4 / and :op1 (a5 / asset :mod (e2 / economy)) :op2 (a6 / asset :mod (f2 / finance)))))
(a / and :op1 (f / find-01 :arg1 (a2 / and :op1 (p / person :arg0-of (h / have-org-role-91 :arg1 (s / scholar) :arg2 (s2 / scholar))) :op2 (p2 / person :arg0-of (h2 / have-org-role-91 :arg1 (g / government-organization :arg0-of (g2 / govern-01)) :arg2 (s3 / scholar))) :purpose (c / call-03 :arg0 (s4 / scholar) :arg1 (a3 / and :op1 (p3 / peace) :op2 (n / negotiate-01)) :time (s5 / simultaneous))) :location (l / location :name (n2 / name :op1 "Ankara"))) :op2 (s6 / state-01 :arg0 (s7 / scholar) :arg1 (h3 / have-03 :polarity - :arg0 (w / we) :arg1 (p4 / partner-01 :arg0 (p5 / person :arg0-of (h4 / have-rel-role-91 :arg1 (p6 / person) :arg2 (p7 / partner))) :arg1 (c2 / crime-02 :mod (t / this))) :arg1-of (c3 / cause-01 :arg0 (t2 / title-01 :arg1 (p8 / person) :arg2 (t3 / thing :arg1-of (s8 / state-01)))))) :time (d / date-entity :month 1 :day 11) :location (l2 / location :name (n3 / name :op1 "Ankara")))
(c / cause-01 :arg0 (f / frames :domain (c2 / cartoon :mod (t / that)) :mod (a / actual)) :arg1 (p / part :part-of (c3 / column) :domain (c4 / cartoon) :mod (a2 / actual)))
(r / rest :part-of (y / you) :time (t / today))
(s / set :arg0 (o / organization :name (n / name :op1 "Saudi" :op2 "Press" :op3 "Agency") :arg1-of (o2 / operated :arg0 (g / government-organization :arg0-of (g2 / govern-01)))) :arg1 (v / version :mod (a / arabic) :topic (c / case-03 :arg1 (c2 / case-03))) :arg1-of (c3 / cause-01 :arg0 (b / blame-01 :arg1 (s2 / side :mod (o3 / only)) :arg2 (o4 / organization :name (n2 / name :op1 "Binladin" :op2 "Group")))))
(s / say-01 :arg0 (o / organization :name (n / name :op1 "Saudi" :op2 "Press" :op3 "Agency") :arg1-of (r / run-01 :arg0 (s2 / state))) :arg1 (c / case :polarity - :mod (o2 / only) :domain (s3 / sue-02 :arg2 (o3 / organization :name (n2 / name :op1 "Binladin" :op2 "Group")))) :arg1-of (s4 / say-01 :arg0 (s5 / statement)))
(c / contrast-01 :arg1 (m / meet-03 :arg0 (p / person :quant 1 :arg1-of (i / include-91 :arg2 (p2 / person :quant 12 :arg0-of (m2 / make-01 :arg1 (f / fund :poss (o / organization :name (n / name :op1 "Philip" :op2 "Morris" :op3 "International")))))) :arg0-of (m3 / make-01 :arg1 (f2 / fund :poss (c2 / company))))) :arg2 (r / report-01 :arg1 (r2 / receive-01 :arg0 (m4 / meet-03) :arg1 (t / thing :polarity - :arg2-of (f3 / fund-01)) :arg1-of (r3 / report-01)) :time (p3 / previous)))
(f / fall)
(g / give-01 :arg0 (p / person :name (n / name :op1 "Angela" :op2 "Merkel") :arg0-of (h / have-rel-role-91 :arg2 (d / daughter))) :arg1 (n2 / name :poss (p2 / person)) :arg2 (n3 / name :poss (p3 / person)))
(c / come-03 :arg1 (n / news :mod (g / great) :beneficiary (p / person :arg2-of (p2 / populate-01 :time (f / former)) :arg2-of (p3 / populate-01 :arg1 (p4 / person :name (n2 / name :op1 "Erik" :op2 "Thomson-800") :arg0-of (h / have-rel-role-91 :arg2 (b / brother) :time (f2 / former)))))) :arg2 (b2 / begin-01 :arg1 (c2 / cut-02)))
(s / space :mod (m / main) :domain (i / it))
(a / and :op1 (s / store :mod (h / home) :location (h2 / home)) :op2 (t / total-01 :arg1 (a2 / and :op1 (s2 / store) :op2 (n / number :quant-of (p / person :arg1-of (e / employ-01))) :quant (a3 / approximately :op1 6,500)) :arg2 (p2 / person :quant 320)) :location (h3 / home))
(t / team :consist-of (p / person :arg0-of (h / have-org-role-91 :arg1 (o / organization :name (n / name :op1 "Izmir" :op2 "Police" :op3 "Department")) :arg2 (p2 / police))) :arg1-of (c / cause-01 :arg0 (a / and :op1 (t2 / take-01 :arg1 (i / information :topic (c2 / card :mod (b / bank)) :poss (p3 / person)) :arg3 (a2 / account)) :op2 (s / start-01 :arg0 (w / work-01) :arg1 (c3 / complain-01 :arg0 (p4 / person) :arg1 (c4 / complain-01 :arg0 (p5 / person)))))))
(b / benefit-01 :arg0 (b2 / benefit-01 :arg1 (c / cooking)) :arg1 (a / amr-unknown))
(e / enough :mod (e2 / enough) :domain (m / make-01 :arg1 (p / partner-01 :arg0 (p2 / person :name (n / name :op1 "Barry" :op2 "Van" :op3 "Treese")) :arg2-of (c / criminal-03))))
(c / conduct-01 :arg1 (p / person :arg1-of (e / expert-01)) :location (e2 / e-cigarettes :location (l / location :name (n / name :op1 "Public" :op2 "Health" :op3 "England"))))
(p / person :arg0-of (h / have-org-role-91 :arg1 (p2 / person :name (n / name :op1 "Damien" :op2 "Collins" :op3 "Tory")) :arg2 (m / mp)) :arg0-of (h2 / have-org-role-91 :arg1 (o / organization :name (n2 / name :op1 "Voice")) :arg2 (m2 / mp)) :arg0-of (h3 / have-org-role-91 :arg1 (c / company :name (n3 / name :op1 "BBC")) :arg2 (m3 / mp)) :arg0-of (h4 / have-org-role-91 :arg1 (c2 / company) :arg2 (m4 / mp)) :arg0-of (h5 / have-org-role-91 :arg1 (c3 / company) :arg2 (m5 / mp)) :arg0-of (h6 / have-org-role-91 :arg1 (c4 / company) :arg2 (m6 / mp)) :arg0-of (h7 / have-org-role-91 :arg1 (c5 / company) :arg2 (m7 / mp)) :arg0-of (h8 / have-org-role-91 :arg1 (c6 / company) :arg2 (m8 / mp)) :arg0-of (h9 / have-org-role-91 :arg1 (c7 / company) :arg2 (m9 / mp)) :arg0-of (h10 / have-org-role-91 :arg1 (c8 / company) :arg2 (m10 / mp)))
(c / connect-01 :arg1 (p / person :arg0-of (c2 / claim-01 :arg1 (r / responsible-01 :arg0 (p2 / person) :arg1 (g / group :arg1-of (l / local-02) :mod (m / ma?rip))))) :arg2 (c3 / criminal-organization :name (n / name :op1 "al-Qaeda")))
(a / answer-01 :arg0 (p / person :mod (o / one)) :arg1 (w / word :mod (t / this)) :arg1-of (i / instead-of-91 :arg2 (k / kill-01 :arg0 (p2 / person) :arg1 (p3 / person))))
(m / multi-sentence :snt1 (a / and :op1 (h / have-03 :arg0 (p / person :mod (c / country :name (n / name :op1 "N-A"))) :arg1 (p2 / place :location-of (h2 / have-03 :arg0 (p3 / person) :arg1 (p4 / place :poss (p5 / person))))) :op2 (h3 / have-03 :arg0 (p6 / person) :arg1 (p7 / place :mod (o / other)))) :snt2 (a2 / and :op1 (m2 / ma?azalarla :mod (o2 / other)) :op2 (r / recommend-01 :arg1 (m3 / ma?azalarla))))
(h / have-03 :arg0 (a / and :op1 (s / store) :op2 (r / restaurant) :mod (o / other)) :arg1 (s2 / space :mod (p / parking) :poss (s3 / she)) :arg1-of (s4 / share-01 :arg0 (s5 / she)))
(m / multi-sentence :snt1 (a / and :op1 (g / go-02 :arg0 (p / person :name (n / name :op1 "Johnson")) :arg4 (b / bbc4 :poss (c / company :name (n2 / name :op1 "BBC")))) :op2 (p2 / possible-01 :polarity - :arg1 (d / do-02 :arg0 (a2 / and :op1 (s / service :arg1-of (a3 / appropriate-02 :degree (m2 / more))) :op2 (s2 / service :arg1-of (a4 / appropriate-02 :degree (m3 / more)))) :location (h / here)))) :snt2 (c2 / contrast-01 :arg1 (p3 / possible-01 :polarity - :arg1 (d2 / do-02 :arg0 (a5 / and :op1 (s3 / service :mod (p4 / public) :arg1-of (a6 / appropriate-02)) :op2 (s4 / service :mod (p5 / public))) :arg1 (m4 / monetary-quantity :quant 4 :unit (p6 / pound)) :location (h2 / here))) :arg2 (a7 / add-01 :arg0 (p7 / person) :arg1 (p8 / possible-01 :arg1 (d3 / discuss-01 :arg0 (p9 / person) :arg1 (s5 / subject :mod (' / '') :arg1-of (s6 / subject-01 :arg0 (p10 / person) :arg1-of (p11 / possible-01) :arg1-of (c3 / cause-01 :arg0 (f / followed :arg0 (a8 / anyone) :arg1 (p12 / person) :degree (t / total))))))))))
(m / multi-sentence :snt1 (o / obligate-01 :arg1 (l / law :domain (t / this)) :arg2 (k / keep-04 :arg0 (l2 / law) :arg1 (p / person :quant 1 :mod (a / another)) :arg2 (l3 / law :mod (s / state)))) :snt2 (' / '' :arg1 (y / you) :time (s2 / say-01 :arg0 (w / we) :arg1 (t2 / thing :arg1-of (d / do-02 :arg0 (y2 / you) :arg1-of (s3 / say-01 :arg0 (t3 / they)))) :time (a2 / always))))
(s / say-01 :arg0 (h / he) :arg1 (a / and :op1 (b / be-located-at-91 :arg1 (c / company) :arg2 (f / factory :location (f2 / factory :location (r / relative-position :op1 (r2 / river :name (n / name :op1 "N-A")) :direction (c2 / country :name (n2 / name :op1 "Russia"))))) :condition (r3 / relate-01 :arg1 (h2 / he) :arg2 (t / thing :arg2-of (p / price-01 :arg1 (p2 / person :name (n3 / name :op1 "Moskalevsky")))))) :op2 (i / identify-01 :arg0 (w / we) :arg1 (m / monetary-quantity :quant 200 :unit (d / dollar :mod (c3 / country))))))
(s / share-01 :arg0 (o / organization :name (n / name :op1 "Glencore")) :arg1 (m / monetary-quantity :quant 2.5 :unit (d / dollar)) :arg2 (s2 / sell-01 :arg1 (s3 / sell-01)))
(r / remain-01 :arg1 (t / thing :arg2-of (t2 / taste :arg1 (f / food)) :mod (d / distinctive)) :arg3 (s / same-01))
(a / and :op1 (f / fall-01 :arg1 (p / proceeding-02 :name (n / name :op1 (g / gongundan))) :arg4 (u / under :op1 (m / monetary-quantity :quant 3.85 :unit (d / dollar))) :time (b / before :op1 (n2 / now) :quant (a2 / about :op1 (t / temporal-quantity :quant (N / N-A) :unit (h / hour))))) :op2 (f2 / fall-01 :arg1 (s / share) :arg4 (u2 / under :op1 (m2 / monetary-quantity :quant 150,15 :unit (d2 / dollar)))))
(a / and :op1 (p / person :name (n / name :op1 "Dmitry" :op2 "Medvedev") :arg0-of (h / have-org-role-91 :arg1 (c / country :name (n2 / name :op1 "N-A")) :arg2 (m / minister :mod (p2 / prime)))) :op2 (m2 / monetary-quantity :arg2-of (p3 / price-01 :arg1 (o / oil))) :op3 (t / thing :arg2-of (p4 / price-01 :arg1 (o2 / oil))) :op4 (t2 / thing :arg2-of (p5 / price-01 :arg1 (o3 / oil))) :op5 (t3 / thing :arg2-of (p6 / price-01 :arg1 (o4 / oil))))
(s / say-01 :arg0 (g / government-organization :name (n / name :op1 "White" :op2 "House")) :arg1 (v / visit-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (c / country :name (n2 / name :op1 "United" :op2 "States")) :arg2 (p2 / president))) :arg1 (v2 / visit-01 :arg0 (p3 / person) :arg1 (c2 / country) :mod (o / official)) :time (e / end-01 :arg1 (p4 / person :name (n3 / name :op1 "Jinping") :arg1-of (c3 / confirm-01 :arg0 (p5 / person :name (n4 / name :op1 "Jinping"))))) :mod (o2 / official)) :medium (s2 / statement :medium (t / tuesday)))
(a / antrenmanlarda :arg0 (a2 / antrenmanlarda :ord (o / ordinal-entity :value 1)) :arg1 (i / it))
(a / and :op1 (p / play-01 :arg0 (t / they) :arg1 (g / goal :quant (b / between :op1 7 :op2 7)) :time (w / week :ord (o / ordinal-entity :value 1) :part-of (s / season))) :op2 (p2 / performed :arg0 (o2 / organization :name (n / name :op1 "Besiktas")) :arg1 (g2 / goal :quant 7 :arg0-of (r / rival-01 :arg1 (o3 / organization)))))
(m / multi-sentence :snt1 (c / contrast-01 :arg2 (d / do-02 :polarity - :arg0 (i / i) :arg1 (a / any))) :snt2 (a2 / and :op1 (c2 / come-01 :arg1 (i2 / i)) :op2 (s / sad-02 :arg0 (t / this))))
(m / multi-sentence :snt1 (h / helpful-04 :arg0 (p / person :arg2-of (s / staff-01)) :arg1 (t / tell-01 :arg0 (p2 / person) :arg2 (i / i))) :snt2 (a / and :op1 (l / listen-01 :arg1 (p3 / person)) :op2 (l2 / listen-01 :arg1 (p4 / person)) :op3 (l3 / listen-01 :arg0 (p5 / person :arg0-of (h2 / have-rel-role-91 :arg1 (p6 / person) :arg2 (f / friend)) :mod (s2 / small :degree (m2 / most) :mod (e / even))) :arg1 (t2 / thing :manner-of (m3 / make-05 :arg0 (i2 / i) :arg1 (d / differ-02))))))
(s / see-01 :arg0 (i / i) :arg1 (t / thing :manner-of (p / possible-01 :arg1 (c / create-01 :arg0 (h / he) :arg1 (d / difference :mod (s2 / such)))) :arg1-of (c2 / cause-01 :arg0 (a / and :op1 (l / listen-01 :arg0 (p2 / person :arg0-of (h2 / have-rel-role-91 :arg2 (f / friend))) :arg1 (i2 / it)) :op2 (l2 / listen-01 :arg0 (p3 / person) :arg1 (i3 / it))))))
(s / say-01 :arg0 (p / person :name (n / name :op1 "Karol" :op2 "Kurkova")) :arg1 (p2 / person :arg0-of (h / have-org-role-91 :arg2 (a / angel))))
(c / contrast-01 :arg1 (w / warn-01 :arg0 (h / he) :arg1 (i / increase-01 :arg1 (i2 / increase-01 :arg1 (m / market)))) :arg2 (i3 / indicate-01 :arg0 (a / allow-01 :polarity - :arg1 (r / rise-01 :arg1 (s / situation))) :arg1 (b / believe-01 :arg0 (t / they) :arg1 (r2 / rise-01 :arg1 (s2 / situation)))))
(t / try-01 :arg0 (i / i) :arg1 (s / see-01 :arg0 (i2 / i) :arg1 (t2 / thing :manner-of (b / broadcast-01 :arg0 (s2 / service :mod (p / public))))))
(b / believe-01 :arg0 (g / girl :arg0-of (h / have-rel-role-91 :arg1 (g2 / girl) :arg2 (f / friend))) :arg1 (b2 / believe-01 :arg0 (g3 / girl :arg0-of (h2 / have-rel-role-91 :arg1 (g4 / girl) :arg2 (f2 / friend))) :arg1 (l / live-01 :arg0 (g5 / girl) :location (r / relation-03 :arg0 (g6 / girl) :mod (e / emotional)))) :arg1-of (h3 / have-concession-91 :arg2 (r2 / report-01 :arg1 (o / or :op1 (i / information :polarity -) :op2 (t / thing :arg0-of (e2 / evidence-01 :arg1 (o2 / or :op1 (i2 / information :polarity -) :op2 (t2 / thing :arg0-of (e3 / evidence-01 :arg1 (h4 / hands :polarity -))))))))))
(s / stay-01 :arg1 (f / factory :mod (s2 / sugar) :mod (' / '')) :location (d / dormitory))
(r / return-05 :arg0 (s / situation :location (c / city :name (n / name :op1 "Detroit"))) :arg1 (q / quality :mod (g / good) :arg1-of (r2 / rare-02 :degree (m / most) :compared-to (g2 / game :quant (m2 / most)))) :time (n2 / night :mod (n3 / night :mod 1)))
(a / awards :arg0 (w / woman :arg1-of (s / succeed-01)) :arg1 (p / person :arg0-of (p2 / play-01 :arg1 (t / thing :arg2-of (t2 / title-01))) :quant (m / multiple :op1 2015)) :time (n / night :time-of (t3 / talk-01 :arg0 (w2 / woman) :arg1 (t4 / thing :arg0-of (p3 / play-12 :arg2 (m2 / male)) :mod (m3 / male))) :degree (m4 / most)))
(e / except-01 :arg1 (s / support-01 :arg0 (a / and :op1 (p / person :arg0-of (h / have-org-role-91 :arg1 (l / location :name (n / name :op1 "Carla-Ohio")) :arg2 (g / governor))) :op2 (p2 / person :arg0-of (h2 / have-org-role-91 :arg1 (l2 / location :name (n2 / name :op1 "Carla-Ohio")) :arg2 (g2 / governor)))) :arg1 (a2 / and :op1 (p3 / person :name (n3 / name :op1 "Scott" :op2 "Walker" :op3 "Fiorina") :arg0-of (h3 / have-org-role-91 :arg2 (g3 / governor))) :op2 (p4 / person :name (n4 / name :op1 "Scott" :op2 "Walker" :op3 "Fiorina") :arg0-of (h4 / have-org-role-91 :arg1 (c / city :name (n5 / name :op1 "N-A")) :arg2 (g4 / governor)))) :arg2-of (e2 / except-01 :arg1 (r / rate-entity-91 :arg1 (p5 / percentage-entity :value (N / N-A)) :arg2 (t / temporal-quantity :quant (N2 / N-A) :unit (y / year)))) :time (n6 / now)))
(s / say-01 :arg0 (i / i) :arg1 (h / help-01 :arg0 (p / person :name (n / name :op1 "Ali" :op2 "Ulker")) :arg1 (i2 / i) :arg2 (g / government-organization :arg0-of (a / administrate-01 :arg1 (b / business)))) :arg2 (p2 / person :name (n2 / name :op1 "Cem" :op2 "Karakas")))
(s / say-01 :arg0 (t / thing :arg1-of (e / estimate-01 :arg2 (p / public))) :arg1 (a / and :op1 (h / harmful-02 :arg0 (e2 / e-cigarettes :quant (a2 / about :op1 (p2 / percentage-entity :value (N / N-A)))) :arg1 (t2 / thing :arg0-of (e3 / evidence-01 :arg1 (t3 / thing :arg1-of (a3 / allege-01)))) :degree (l / less) :compared-to (s2 / smoke-02 :arg1 (t4 / thing :arg0-of (e4 / evidence-01 :arg1 (t5 / thing :arg1-of (a4 / allege-01)))))) :op2 (b / base-02 :arg1 (t6 / thing) :arg2 (r / review-01 :arg1 (t7 / thing) :arg0-of (d / detail-01)))))
(s / say-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (o / organization :name (n / name :op1 "PHE") :poss (p2 / public)) :arg2 (' / ''))) :arg1 (a / allege-01 :arg1 (a2 / allege-01 :arg1 (a3 / and :op1 (t / thing :arg0-of (e / evidence-01)) :op2 (t2 / thing :arg0-of (e2 / evidence-01))) :arg1-of (b / base-02 :arg2 (e3 / examine-01 :arg0-of (d / detail-01))) :arg1-of (b2 / base-02 :arg2 (e4 / examine-01 :arg0-of (d2 / detail-01))))))
(a / and :op1 (e / environment :domain (o / or :op1 (p / parent) :op2 (e2 / environment :mod (s / social)))) :op2 (v / value-02 :arg1 (i / idea :topic (h / he) :topic (i2 / issue-02 :arg0 (h2 / he) :mod (m / mutual)))) :op3 (v2 / value-02 :arg1 (i3 / idea)))
(a / accompany-01 :arg0 (c / comment-01 :quant 3 :arg0 (c2 / community :mod (c3 / community :mod (c4 / continent :name (n / name :op1 "N-A"))))) :arg1 (e / event) :mod (a2 / also) :time (e2 / event))
(a / and :op1 (g / good :polarity - :domain (s / spirit :mod (b / between :op1 (c / country :name (n / name :op1 "Italy")) :op2 (r / rest :part-of (c2 / continent :name (n2 / name :op1 "Europe")))))) :op2 (s2 / say-01 :arg0 (p / person :name (n3 / name :op1 "Juncker") :arg0-of (h / have-org-role-91 :arg1 (c3 / country :name (n4 / name :op1 "Italy")))) :arg1 (o / obligate-01 :arg1 (o2 / organization :name (n5 / name :op1 "EU")) :arg2 (f / find-01 :arg0 (o3 / organization :name (n6 / name :op1 "EU"))))))
(a / answer-01 :arg2 (s / sound :arg1-of (o / open-04)) :degree (m / more))
(l / leader :arg0 (p / person :arg0-of (l2 / lead-02 :arg1 (o / organization :name (n / name :op1 "MHP")))) :arg1 (p2 / person :name (n2 / name :op1 "Devlet" :op2 "Bahceli") :arg0-of (h / have-org-role-91 :arg1 (o2 / organization) :arg3 (l3 / lead-02))) :location (b / brief-01 :arg1 (p3 / person)) :time (y / yesterday))
(a / and :op1 (h / hold-01 :arg1 (t / thing :arg1-of (p / provide-01 :arg0 (c / constitution) :arg2 (c2 / company :arg0-of (m / make-01 :arg1 (l / law)) :location (l2 / location :name (n / name :op1 "Kathmandu"))))) :time (w / week :mod (t2 / this)) :location (l3 / location :name (n2 / name :op1 "Kathmandu"))) :op2 (h2 / hold-04 :arg1 (p2 / person :arg0-of (h3 / have-org-role-91 :arg2 (o / official))) :time (u / until :op1 (w2 / work-01 :arg0 (p3 / person) :medium (t3 / text :mod (n3 / new))))))
(n / note-01 :mode (i / imperative) :arg0 (y / you) :arg1 (i2 / issue-02 :polarity - :arg0 (t / topic) :arg1 (t2 / topic) :degree (m / most) :time (p / place-01 :arg0 (y2 / you) :arg1 (p2 / plan-01 :arg0 (y3 / you)))))
(s / something :mod (d / doktorlarda))
(h / highlight-01 :arg1 (a / and :op1 (f / friendship :mod (m / male)) :op2 (m2 / moment :mod (s / small))))
(m / multi-sentence :snt1 (a / and :op1 (o / oppose-01 :arg0 (p / person :name (n / name :op1 "Miliband") :arg1-of (b / bright-02)) :arg1 (i / idea :topic (r / referendum :topic (p2 / person :name (n2 / name :op1 "Blairc"))))) :op2 (o2 / oppose-01 :arg0 (p3 / person) :arg1 (i2 / idea :topic (p4 / person :name (n3 / name :op1 "Blairc"))))) :snt2 (c / cause-01 :arg0 (a2 / and :op1 (p5 / person :name (n4 / name :op1 "Blair") :arg0-of (g / give-01 :arg1 (p6 / person :arg0-of (u / use-01 :arg1 (c2 / card))) :arg2 (p7 / person))) :op2 (v / vote-01 :arg0 (p8 / person) :arg1 (v2 / vote-01 :arg0 (p9 / person) :arg1 (p10 / principle :mod (c3 / constitution :mod (o3 / organization :name (n5 / name :op1 "EU"))))))) :arg1 (c4 / cancelled :arg1 (p11 / person))))
(c / cause-01 :arg0 (w / want-01 :polarity - :arg0 (w2 / we) :arg1 (g / give-01 :arg0 (w3 / we) :arg1 (t / thing :arg1-of (t2 / target-01 :arg0 (p / person :name (n / name :op1 "Burak" :op2 "Yilmaz")))) :arg2 (p2 / protest-01 :arg0 (p3 / person) :arg1 (p4 / protest-01 :arg0 (p5 / person) :mod (w4 / whistling))))) :arg1 (g2 / game :arg1 (g3 / game) :time (m / minute :ord (o / ordinal-entity :value 59) :part-of (g4 / game :mod (h / hickville) :poss (p6 / person)))))
(u / use-01 :arg1 (t / that) :time (p / period))
(m / multi-sentence :snt1 (a / and :op1 (p / person :name (n / name :op1 "Terry" :op2 "Bailey") :time (b / before :op1 (n2 / now) :quant (t / temporal-quantity :quant (N / N-A) :unit (m2 / month)))) :op2 (p2 / person :name (n3 / name :op1 "Brian" :op2 "Stewart") :arg0-of (h / have-org-role-91 :arg1 (m3 / man :mod (e / exact)) :arg2 (m4 / man))) :time (b2 / before :op1 (n4 / now) :quant (t2 / temporal-quantity :quant (N2 / N-A) :unit (m5 / month)))) :snt2 (a2 / and :op1 (c / call-01 :arg0 (i / i) :arg1 (t3 / they) :arg2 (t4 / thing :arg1-of (d / do-02 :arg0 (i2 / i) :arg2 (h2 / he) :arg1-of (r / return-05 :arg0 (i3 / i))))) :op2 (s / say-01 :arg0 (h3 / he) :arg1 (t5 / thing :arg1-of (d2 / do-02 :arg0 (i4 / i) :arg2 (h4 / he) :arg1-of (r2 / return-05 :arg0 (i5 / i) :arg1-of (r3 / return-05 :arg0 (i6 / i) :arg2 (w / work-01 :arg0 (i7 / i) :location (s2 / stables :poss (i8 / i))))))))))
(s / see-01 :arg0 (i / i) :arg1 (g / get-05 :arg1 (c / crowd) :arg2 (s2 / song)) :arg1-of (c2 / cause-01 :arg0 (a / and :op1 (s3 / situation :mod (n / naive)) :op2 (s4 / sincere :prep-in (t / tarz?yla :arg1-of (u / upcoming))))))
(f / floor :li 7)
(a / and :op1 (g / give-01 :polarity - :arg0 (p / police) :arg1 (t / thing :arg1-of (p2 / plan-01) :mod (t2 / this)) :arg2 (p3 / person :arg0-of (m / miss-02 :arg1 (p4 / plan :mod (t3 / this))))) :op2 (d / describe :arg0 (p5 / police) :arg1 (p6 / person) :arg2 (a2 / attempt-01 :arg0 (p7 / person) :arg1 (p8 / punish-01 :arg1 (g2 / government-organization :arg0-of (a3 / administrate-01 :arg1 (s / school))) :manner (d2 / disciplinary)))))
(c / contrast-01 :arg2 (a / and :op1 (r / reach-01 :arg0 (c2 / country :quant 2) :arg1 (d / deal-01)) :op2 (r2 / reach-01 :arg0 (r3 / refugee :mod (c3 / country :name (n / name :op1 "Russia"))) :arg1 (r4 / rate-entity-91 :arg1 (t / temperature-quantity :quant (b / between :op1 20 :op2 20)) :arg2 (d2 / distance-quantity :quant (N / N-A) :unit (g / gallon))) :arg4 (c4 / country))))
(o / obvious-01 :arg1 (c / chef :domain (t / this) :topic (c2 / chef :mod (m / master))))
(h / hell :domain (t / this) :mod (h2 / hell) :arg1-of (o / olman?zla :arg0 (y / you) :location (c / cooked)))
(i / include-91 :arg1 (a / and :op1 (p / person :arg0-of (p2 / process-01 :arg1 (o / office :poss (w / worship-place :name (n / name :op1 "N-A")))) :arg0-of (h / have-org-role-91 :arg1 (o2 / office :poss (w2 / worship-place :name (n2 / name :op1 "N-A"))) :arg3 (c / criminal-03))) :op2 (p3 / person :arg0-of (h2 / have-org-role-91 :arg1 (o3 / office :poss (g / government-organization :name (n3 / name :op1 "N-A"))) :arg2 (p4 / person :arg1-of (e / expert-01))))) :arg2 (o4 / or :op1 (c2 / citizen :poss (p5 / person :arg0-of (h3 / have-org-role-91 :arg1 (g2 / government-organization :arg0-of (g3 / govern-01 :arg1 (c3 / country))) :arg2 (p6 / person :arg1-of (e2 / expert-01 :arg2 (i2 / identification)))))) :op2 (p7 / person :arg0-of (d / die-01 :arg1 (p8 / person))) :op3 (p9 / person :arg0-of (d2 / die-01 :arg1 (p10 / person))) :op4 (p11 / person :arg0-of (d3 / die-01 :arg1 (p12 / person))) :op5 (p13 / person :arg0-of (h4 / have-rel-role-91 :arg1 (p14 / person) :arg2 (e3 / experts))) :op6 (p15 / person :arg0-of (h5 / have-rel-role-91 :arg1 (p16 / person) :arg2 (a2 / autopsies))) :op7 (p17 / person :arg0-of (h6 / have-rel-role-91 :arg1 (p18 / person) :arg2 (e4 / experts)))))
(c / cause-01 :arg0 (p / possible-01 :arg1 (s / see-01 :arg0 (w / we) :arg1 (t / thing :arg1-of (g / get-01 :arg0 (w2 / we))))) :arg1 (p2 / possible-01 :arg1 (s2 / see-01 :arg0 (w3 / we) :arg1 (t2 / thing :arg1-of (g2 / get-01 :arg0 (w4 / we))))))
(i / influence-01 :arg0 (a / and :op1 (s / security :mod (c / country :name (n / name :op1 "US"))) :op2 (s2 / security :mod (c2 / country)) :op3 (p / party :arg0-of (r / rule-03) :location (c3 / country :name (n2 / name :op1 "Syria"))) :op4 (g / government-organization :arg0-of (g2 / govern-01 :arg1 (c4 / country :name (n3 / name :op1 "Iraq")))) :op5 (g3 / government-organization :arg0-of (g4 / govern-01 :arg1 (c5 / country))) :op6 (g5 / government-organization :arg0-of (g6 / govern-01 :arg1 (c6 / country))) :op6 (g7 / government-organization :arg0-of (g8 / govern-01 :arg1 (c7 / country))) :op6 (g9 / government-organization :arg0-of (g10 / govern-01 :arg1 (c8 / country))) :op6 (g11 / government-organization :arg0-of (g12 / govern-01 :arg1 (c9 / country))) :op6 (g13 / government-organization :arg0-of (g14 / govern-01 :arg1 (c10 / country))) :op7 (g15 / government-organization :arg0-of (g16 / govern-01 :arg1 (c11 / country))) :op6 (g17 / government-organization :arg0-of (g18 / govern-01 :arg1 (c12 / country))) :op6 (g19 / government-organization :arg0-of (g20 / govern-01 :arg1 (c13 / country))) :op7 (g21 / government-organization :arg0-of (g22 / govern-01 :arg1 (c14 / country))) :op6 (g23 / government-organization :arg0-of (g24 / govern-01 :arg1 (c15 / country))) :op7 (g25 / government-organization :arg0-of (g26 / govern-01 :arg1 (c16 / country)))) :arg1 (p2 / perform-01 :mod (d / disappoint-01 :degree (v / very))))
(b / be-located-at-91 :arg1 (l / location :name (n / name :op1 "Johannesburg") :location (d / downtown)) :arg2 (p / place :mod (d2 / difficult)))
(c / contrast-01 :arg2 (p / possible-01 :arg1 (i / ignore-01 :arg0 (g / government-organization :name (n / name :op1 "Fed")) :arg1 (p2 / picture :mod (g2 / globe)) :degree (l / less))))
(r / reason :quant (m / many) :arg0-of (c / cause-01 :arg1 (e / elect-01 :arg1-of (g / general-02))))
(e / expect-01 :arg1 (g / go-02 :arg0 (p / person :arg0-of (l / lead-02 :arg1 (a / and :op1 (p2 / person :arg0-of (l2 / lead-02 :arg1 (t / technology :mod (t2 / technology)))) :op2 (p3 / person :arg0-of (l3 / lead-02 :arg1 (c / country :name (n / name :op1 "United" :op2 "States")))) :op3 (p4 / person :arg0-of (l4 / lead-02 :arg1 (o / organization))) :op4 (p5 / person :arg0-of (l5 / lead-02 :arg1 (o2 / organization))) :op5 (p6 / person :arg0-of (l6 / lead-02 :arg1 (o3 / organization)))))) :time (b / before :op1 (m / meet-03 :arg0 (p7 / person) :arg1 (a2 / and :op1 (c2 / city :name (n2 / name :op1 "Washington")) :op2 (c3 / country :quant (s / some) :arg1-of (i / include-91 :arg2 (c4 / country :name (n3 / name :op1 "United" :op2 "States"))))))) :time (b2 / before :op1 (m2 / meet-03 :arg0 (p8 / person) :arg1 (a3 / and :op1 (p9 / person :arg0-of (l7 / lead-02 :arg1 (t3 / technology :mod (t4 / technology)))) :op2 (p10 / person :arg0-of (l8 / lead-02 :arg1 (c5 / country))))))))
FAILED_TO_PARSE#Couldn't convert to full AMR graph.
(s / say-01 :arg0 (a / and :op1 (p / person :arg0-of (h / have-org-role-91 :arg1 (p2 / person :name (n / name :op1 "Pi" :op2 "Delta" :op3 "Psi") :arg0-of (h2 / have-org-role-91 :arg1 (p3 / police))) :arg2 (m / member))) :op2 (p4 / person :arg0-of (h3 / have-org-role-91 :arg1 (p5 / police) :arg2 (m2 / member))) :op3 (p6 / person :name (n2 / name :op1 "Deng") :arg0-of (h4 / have-org-role-91 :arg1 (p7 / police) :arg2 (m3 / member)))) :arg1 (a2 / and :op1 (c / collapse-01 :arg1 (p8 / person) :time (b / before :op1 (t / take-01 :arg0 (p9 / person) :arg1 (p10 / person) :arg2 (h5 / hospital)))) :op2 (w / wait-01 :arg1 (p11 / person) :duration (t2 / temporal-quantity :quant (N / N-A) :unit (h6 / hour)))))
(m / multi-sentence :snt1 (s / slaughter-01 :arg1 (p / person :arg0-of (c / commit-02 :arg1 (c2 / crime-02 :arg1-of (s2 / same-01))))) :snt2 (s3 / say-01 :arg0 (h / he)))
(m / multi-sentence :snt1 (t / try-01 :arg0 (p / period :instrument-of (h / holiday)) :arg1 (t2 / teach-01 :arg0 (p2 / period) :arg1 (o / olman?z :mod (o2 / only)))) :snt2 (a / and :op2 (d / dinlenmenizi :mode (i / interrogative))))
(c / contrast-01 :arg2 (i / impress-01 :arg0 (p / person :name (n / name :op1 "Adriana" :op2 "Lima")) :arg1 (i2 / i) :mod (a / also)))
(s / share-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (p2 / parliament) :arg2 (p3 / person :arg0-of (i / immigrate-01)))) :arg1 (p4 / person :arg0-of (h2 / head-01 :arg1 (p5 / parliament)) :arg0-of (i2 / immigrate-01) :ord (o / ordinal-entity :value 4)) :arg1-of (h3 / high-02 :degree (m / most)) :time (y / yesterday) :location (r / round-05 :arg1 (p6 / parliament) :mod (p7 / parliamentary)))
(a / and :op1 (p / person :name (n / name :op1 "Ulku" :op2 "Erakal?n") :arg0-of (h / have-org-role-91 :arg1 (p2 / person :name (n2 / name :op1 "Yalcin" :op2 "Gülhan") :arg0-of (h2 / have-org-role-91 :arg2 (d / director))) :arg2 (d2 / director))) :op2 (p3 / person :arg0-of (h3 / have-org-role-91 :arg2 (d3 / director))) :op3 (p4 / person :arg0-of (h4 / have-org-role-91 :arg2 (d4 / director))) :op4 (p5 / person :arg0-of (h5 / have-org-role-91 :arg2 (d5 / director))) :op5 (p6 / person :arg0-of (h6 / have-org-role-91 :arg2 (d6 / director))) :op6 (p7 / person :arg0-of (h7 / have-org-role-91 :arg2 (d7 / director))) :op6 (p8 / person :arg0-of (h8 / have-org-role-91 :arg2 (d8 / director))) :op7 (c / camera :mod (l / l)))
(c / close-01 :arg1 (s / school) :time (s2 / start-01 :arg1 (o / operation :arg1-of (m / major-02) :time (d / date-entity :month 12 :day 14))) :location (d2 / district))
(a / and :op1 (f / fall-01 :arg1 (g / girl :mod (l / little))) :op2 (h / hit-01 :arg0 (g2 / girl) :arg1 (h2 / head :part-of (g3 / girl)) :arg0-of (c / cause-01 :arg1 (r / reported :arg1 (a2 / alcohol) :arg2 (s / sign :arg1-of (s2 / signal-07 :arg0 (b / brain :part-of (p / person :arg0-of (h3 / have-rel-role-91 :arg1 (c2 / child :arg1-of (s3 / separate-02)) :arg2 (c3 / child))))))))) :op3 (d / do-02 :arg0 (d2 / doctor) :arg1 (a3 / alcohol)))
(a / and :op2 (d / develop-02 :arg0 (w / we) :arg1 (a2 / and :op1 (i / industry :arg1-of (c / care-03 :arg1-of (p / personal-02))) :op2 (i2 / industry :mod (v / various))) :time (t / time :mod (t2 / this))))
(o / order-01 :arg0 (o2 / organization :name (n / name :op1 "Arbitration" :op2 "Board" :op3 "of" :op4 "Labour")) :arg2 (s / see-01 :arg0 (o3 / organization) :arg1 (o4 / obligate-01 :arg2 (b / be-02 :arg1 (d / decide-01) :duration (t / temporal-quantity :quant (N / N-A) :unit (m / month))))))
(m / multi-sentence :snt1 (s / sell-01 :arg0 (w / we) :arg1 (f / factory) :manner (m2 / moskalevsky)) :snt2 (' / '' :mode (e / expressive)))
(a / attack-01 :location (l / location :name (n / name :op1 "San" :op2 "Bernardino")) :arg0-of (s / shook :arg1 (c / country :name (n2 / name :op1 "United" :op2 "States"))))
(c / caldiero :arg0 (o / organization :name (n / name :op1 "American" :op2 "Ninja" :op3 "Warrior")) :arg1 (a / and :op1 (c2 / climber :mod (r / rock) :mod (r2 / rock)) :op2 (b / busboy :mod (r3 / rock))) :time (n2 / night :mod (m / monday)) :manner (w / win-01 :arg0 (o2 / organization) :arg1 (a2 / athletes :ord (o3 / ordinal-entity :value 1)) :arg2 (p / program :mod (a3 / ammonium :quant (m2 / monetary-quantity :quant 1 :unit (d / dollar))))))
(m / multi-sentence :snt1 (s / seem-01 :arg1 (f / friendly-01 :arg1 (a / and :op1 (c / country :name (n / name :op1 "Russia")) :op2 (c2 / country :name (n2 / name :op1 "Turkey")) :example (a2 / and :op1 (c3 / country) :op2 (c4 / country))) :degree (v / very))) :snt2 (n3 / need-01 :arg0 (d / detective :quant 2) :arg1 (o / other :mod (e / each))))
(p / person :arg0-of (m / murder-01) :domain (p2 / person :arg0-of (m2 / murder-01)))
(w / war :mod (c / civil))
(s / say-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (o / organization :name (n / name :op1 "Essex" :op2 "University")) :arg2 (m / member)) :arg0-of (h2 / have-org-role-91 :arg1 (o2 / organization) :arg2 (m2 / member)) :arg0-of (h3 / have-org-role-91 :arg1 (o3 / organization) :arg2 (m3 / member))) :arg1 (a / and :op1 (a2 / and :op1 (a3 / artists :arg1 (a4 / and :op1 (a5 / artists) :op2 (p2 / politics)) :degree (m4 / more)) :op2 (w / work-01 :mod (p3 / politics) :location (o4 / outside :op1 (g / galleries)))) :op2 (l / look-01 :arg0 (p4 / person) :arg1 (w2 / way :instrument-of (t / transport-01 :arg0 (p5 / person) :arg4 (w3 / worship-place :name (n2 / name :op1 "N-A")))))))
(a / and :op1 (p / punish-01 :arg0 (c / child :quant (a2 / all) :arg0-of (p2 / punish-01 :arg1 (p3 / person :arg0-of (h / have-rel-role-91 :arg1 (c2 / child) :arg2 (p4 / parent))))) :arg1 (t / time)) :op2 (c3 / cause-01 :arg0 (a3 / amr-unknown) :arg1 (l / lie-08 :arg0 (c4 / child) :time (e / end-01))))
(t / tension :mod (b / between :op1 (c / country :name (n / name :op1 "Italy")) :op2 (o / organization :name (n2 / name :op1 "EU"))))
(m / mission :mod (c / country :name (n / name :op1 "US")) :arg1-of (c2 / cause-01 :arg0 (a / appear-01 :arg1 (m2 / mission) :time (w / while))))
(a / and :op1 (c / cause-01 :arg0 (g / give-01 :arg1 (m / mission) :arg2 (w / we)) :arg1 (m2 / mission)) :op2 (l / look-01 :arg0 (i / it) :time (w2 / while)))
(c / contrast-01 :arg1 (f / fall-01 :arg1 (m / monetary-quantity :arg2-of (p / price-01 :arg1 (o / oil)) :mod (c2 / crude)) :arg2 (r / rate-entity-91 :arg1 (m2 / monetary-quantity :quant 30 :unit (d / dollar)) :arg2 (t / temporal-quantity :quant (N / N-A) :unit (d2 / day)))) :arg2 (h / have-03 :arg0 (s / surprises :mod (n / new)) :arg1 (l / level :arg1-of (l2 / low-04 :degree (m3 / more))) :time (f2 / final) :time (b / before :op1 (n2 / now) :duration (t2 / temporal-quantity :quant (N2 / N-A) :unit (y / year)))))
(s / say-01 :arg0 (a / and :op1 (p / person :arg0-of (h / have-org-role-91 :arg1 (c / city :name (n / name :op1 "London")) :arg2 (p2 / professor :mod (h2 / health) :mod (h3 / health))) :location (a2 / and :op1 (o / organization :name (n2 / name :op1 "European" :op2 "School" :op3 "of" :op4 "Tropical" :op5 "Medicine")) :op2 (p3 / person :name (n3 / name :op1 "Martin" :op2 "McKee") :arg0-of (h4 / have-org-role-91 :arg1 (p4 / public) :arg2 (p5 / professor :mod (h5 / health) :mod (p6 / public)))))) :op2 (p7 / person :name (n4 / name :op1 "Martin" :op2 "McKee") :arg0-of (h6 / have-org-role-91 :arg1 (p8 / public) :arg2 (p9 / professor :mod (h7 / health) :mod (p10 / public))))) :arg1 (b / base-02 :arg1 (p11 / principle :mod (b2 / basic) :mod (p12 / policy :mod (h8 / health :mod (p13 / public)))) :arg2 (t / thing :arg0-of (e / evidence-01 :arg1 (e2 / effective-04)))))
(a / and :op1 (d / die-01 :quant (a2 / at-least :op1 20)) :op2 (d2 / die-01 :quant 15))
(s / say-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (c / country :name (n / name :op1 "Mexico")) :arg3 (l / lead-02 :arg0 (p2 / person) :arg1 (c2 / country)))) :arg1 (a / and :op1 (p3 / person :name (n2 / name :op1 "Donald" :op2 "Trump") :arg0-of (a2 / announce-01 :arg1 (c3 / campaign-01) :time (b / before :op1 (n3 / now) :quant (b2 / between :op1 (t / temporal-quantity :quant (N / N-A) :unit (m / month)) :op2 (t2 / temporal-quantity :quant (N2 / N-A) :unit (m2 / month)))))) :op2 (s2 / subject :arg1-of (s3 / subject-01 :arg2 (i / immigrate-01)))) :time (s4 / since :op1 (b3 / begin-01 :arg1 2016 :arg1 (p4 / person :arg0-of (i2 / immigrate-01) :source (c4 / country) :mod (t3 / tecavüzcü)))))
(s / say-01 :arg0 (h / he) :arg1 (r / responsible-01 :arg0 (p / person :name (n / name :op1 "Assad")) :arg1 (i / influx :arg1 (r2 / refugee))) :location (c / conference :arg1-of (a / attend-01 :arg0 (h2 / he) :location (l / location :name (n2 / name :op1 "The" :op2 "Hague" :op3 "Koenders")))))
(g / guide-01 :arg0 (p / phone) :arg1 (y / you) :time (r / rest :part-of (p2 / process-02)))
(c / contrast-01 :arg1 (r / region :arg0-of (e / emerge-02) :location-of (d / dumanlar :arg0 (f / force :mod (s / security) :mod (t / turkish)) :arg1-of (f2 / frequent-02))) :arg2 (l / look-01 :arg0 (l2 / look-01 :arg1 (l3 / line :mod (b / border))) :arg1 (v / vehicle :mod (h / heavy))))
(p / play-02 :arg0 (s / season :quant 5 :mod (o / only)) :arg1 (m / match-03 :arg0 (o2 / organization :name (n / name :op1 "Arsenal")) :mod (l / league)))
(g / give-01 :arg0 (d / deal-01 :arg0 (c / country :quant 2)) :arg1 (p / person :arg0-of (i / immigrate-01)) :arg2 (p2 / person :arg0-of (i2 / immigrate-01)) :location (f / foot) :arg1-of (c2 / cause-01 :arg0 (l / line)))
(p / publish-01 :arg1 (p2 / person :name (n / name :op1 "N-A") :mod (a / all) :arg0-of (h / have-rel-role-91 :arg1 (c / comedy) :arg2 (f / friend))) :time (b / begin-01 :arg1 (e / end-01)))
(s / support-01 :arg0 (p / person :quant 15 :arg1-of (i / include-91 :arg2 (p2 / percentage-entity :value (N / N-A)))) :arg1 (i2 / it) :mod (o / only) :condition (c / condition :mod (c2 / certain) :purpose (s2 / support-01 :arg1 (c3 / candidate))))
(f / follow-04 :arg1 (o / organization :name (n / name :op1 "Besiktas") :quant 11))
(m / multi-sentence :snt2 (d / differ-02 :arg1 (s / situation :poss (i / i) :quant (a / all)) :degree (b / bit) :mod (a2 / also)) :snt2 (d2 / differ-02 :arg1 (s2 / situation :poss (i2 / i) :quant (a3 / all))))
(s / say-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg2 (p2 / person :arg1-of (e / expert-01)))) :arg1 (s2 / say-01 :arg0 (p3 / person) :arg1 (p4 / possible-01 :arg1 (d / dizginlemi :arg1 (p5 / person :arg0-of (s3 / show-01 :arg1 (p6 / possible-01 :arg1 (d2 / dizginlemi :arg1 (p7 / person))))))) :arg0-of (s4 / show-01 :arg1 (p8 / possible-01 :arg1 (d3 / dizginlemi :arg1 (p9 / person :mod (c / country :name (n / name :op1 "N-A"))))))))
(m / multi-sentence :snt1 (h / have-concession-91 :arg1 (e / expect-01 :polarity - :arg0 (w / we) :arg1 (g / get-05 :arg0 (w2 / we) :arg1 (r / rate :mod (i / interest :arg1-of (n / normal-02))) :arg2 (r2 / rate :mod (i2 / interest :arg1-of (l / low-04))))) :arg2 (e2 / expect-01 :polarity - :arg0 (w3 / we) :arg1 (g2 / get-05 :arg0 (w4 / we) :arg1 (r3 / rate :mod (i3 / interest :arg1-of (n2 / normal-02))) :arg2 (l2 / level :mod (i4 / interest :arg1-of (l3 / low-04)) :mod (l4 / level :arg1-of (l5 / low-04)))))) :snt2 (f / fear-01 :arg0 (m2 / many)))
(c / cause-01 :arg0 (h / have-03 :arg0 (p / person :arg0-of (w / want-01 :arg1 (t / talk-01 :arg0 (p2 / person) :arg2 (p3 / party :time (y / yesterday) :poss (p4 / person :arg0-of (h2 / have-org-role-91 :arg2 (p5 / president))))))) :arg1 (m / more :compared-to (n / number :quant-of (c2 / court)))) :arg1 (h3 / have-03 :arg0 (p6 / person) :arg1 (d / difficulty) :location (h4 / hat)))
(s / see-01 :arg0 (p / person :name (n / name :op1 "Son" :op2 "Redmond") :arg0-of (h / have-org-role-91 :arg2 (- / -rrb- :mod (r / right)))) :arg1 (s2 / spend-01 :arg0 (p2 / person :arg0-of (a / act-01)) :arg1 (s3 / spend-01 :arg0 (p3 / person) :mod (s4 / stressful :degree (q / quite))) :time (a2 / after :op1 (n2 / now) :quant (c / couple :op1 (t / temporal-quantity :quant (N / N-A) :unit (y / year))))))
(i / initiative :name (n / name :op1 (p / peace) :op2 (a / academics) :op3 (p2 / peace)) :arg1-of (c / cause-01 :arg0 (s / support-01 :arg0 (w / we) :arg1 (p3 / person :arg1-of (a2 / academic)))))
(c / cause-01 :arg0 (h / have-03 :arg0 (p / person :arg0-of (h2 / have-org-role-91 :arg1 (s / scholar) :arg2 (s2 / scholar))) :arg1 (p2 / person :arg0-of (h3 / have-org-role-91 :arg2 (s3 / scholar))) :purpose (s4 / support-01 :arg0 (s5 / scholar) :arg1 (p3 / person))) :arg1 (s6 / say-01 :arg1 (s7 / support-01 :arg0 (p4 / person) :arg1 (p5 / person))))
(a / and :op1 (e / enjoy-01 :arg0 (f / family :arg1-of (h / have-org-role-91 :arg0 (p / person :arg0-of (h2 / have-org-role-91 :arg1 (f2 / family :arg1-of (h3 / have-org-role-91 :arg0 (p2 / person) :arg2 (m / member))) :arg2 (m2 / member))) :arg2 (m3 / member))) :arg1 (t / tie-01 :arg1 (f3 / family) :arg2 (f4 / family :arg1-of (h4 / have-org-role-91 :arg0 (p3 / person) :arg2 (m4 / member))) :manner (c / close))) :op2 (c2 / charge-05 :arg1 (f5 / family) :arg2 (a2 / and :op1 (p4 / project :mod (c3 / construct-01)) :op2 (m5 / many))))
(l / like-02 :arg0 (i / i) :arg1 (u / use-01 :arg0 (i2 / i) :arg1 (r / right-05 :arg1 (i3 / i) :arg2 (a / appeal-01 :arg0 (i4 / i)))) :location (h / here))
(s / say-01 :arg0 (p / person :name (n / name :op1 "LaForge" :op2 "Ö?rencilerimizi")) :arg1 (t / try-01 :arg0 (w / we) :arg1 (b / bring-01 :arg0 (w2 / we) :arg1 (b2 / back :mod (b3 / back)))) :arg1-of (s2 / say-01 :arg0 (h / he)))
(s / say-01 :arg0 (h / he) :arg1 (t / try-01 :arg0 (w / we) :arg1 (b / bring-01 :arg0 (w2 / we) :arg1 (p / person :arg0-of (s2 / study-01) :poss (w3 / we)) :arg2 (p2 / person :arg0-of (s3 / study-01) :poss (w4 / we)) :mod (a / again))))
(c / contrast-01 :arg1 (s / scene :time (t / then)) :arg2 (i / initiate-01 :arg0 (t2 / team :mod (p / police) :arg0-of (f / flee-05 :arg1 (t3 / terrorist))) :arg1 (i2 / initiate-01 :arg1 (c2 / capture-01 :arg1 (s2 / study :mod (m / multi-ethnic))))))
(s / say-01 :arg0 (p / person :name (n / name :op1 "Safet" :op2 "Sandzak") :arg0-of (l / lead-02 :arg1 (s2 / state)) :arg0-of (h / have-org-role-91 :arg1 (s3 / state) :arg2 (m / member))) :arg1 (a / anjiyodan :arg0 (p2 / person :name (n2 / name :op1 "Bahceli") :arg0-of (h2 / have-org-role-91 :arg1 (o / organization :name (n3 / name :op1 "MHP") :arg1-of (c / come-01 :arg4 (h3 / hospital) :purpose (v / visit-01 :arg0 (p3 / person) :arg1 (p4 / person))))) :arg0-of (h4 / have-org-role-91 :arg1 (o2 / organization) :arg2 (m2 / member)) :arg0-of (h5 / have-org-role-91 :arg1 (o3 / organization) :arg2 (m3 / member)) :arg0-of (h6 / have-org-role-91 :arg1 (o4 / organization) :arg2 (m4 / member)) :arg0-of (h7 / have-org-role-91 :arg1 (o5 / organization) :arg2 (m5 / member)) :arg0-of (h8 / have-org-role-91 :arg1 (o6 / organization) :arg2 (m6 / member)) :arg0-of (h9 / have-org-role-91 :arg1 (o7 / organization) :arg2 (m7 / member)) :arg0-of (h10 / have-org-role-91 :arg1 (o8 / organization) :arg2 (m8 / member)) :arg0-of (h11 / have-org-role-91 :arg1 (o9 / organization) :arg2 (m9 / member)))))
(s / say-01 :arg0 (h / he) :arg1 (a / and :op1 (h2 / have-03 :arg0 (p / person :name (n / name :op1 "Steen") :arg1-of (a2 / age-01 :arg2 (t / temporal-quantity :quant (N / N-A) :unit (y / year)))) :arg1 (k / k?zlar?n?n)) :op2 (d / destroy-01 :arg1 (g / girl)) :time (a3 / age-01 :arg1 (p2 / person) :arg2 (t2 / temporal-quantity :quant (N2 / N-A) :unit (y2 / year)))))
(r / remain-01 :arg1 (o / officer :arg0-of (h / have-org-role-91 :arg1 (p / police :mod (p2 / police)) :arg2 (o2 / officer))) :arg3 (d / dry-02 :arg1 (o3 / officer)) :time (a / advise-01 :arg0 (o4 / officer) :arg1 (m / man)))
(a / and :op1 (b / be-temporally-at-91 :arg1 (s / season :mod (h / holiday)) :arg2 (t / temporal-quantity :quant (N / N-A) :unit (m / month))) :op2 (p / prepare-02 :arg1 (c / company :arg0-of (s2 / sell-01 :arg1 (p2 / product))) :arg2 (h2 / hire-01 :arg0 (a2 / and) :arg1 (p3 / person :arg1-of (e / employ-01)) :purpose (a3 / assist-01 :arg0 (c2 / company) :arg1 (p4 / person) :arg2 (a4 / and :op1 (s3 / send-03 :arg0 (p5 / person) :arg1 (p6 / person)) :op2 (d / distribute-01 :arg0 (p7 / person)))))))
(b / belong-01 :arg0 (a / and :op1 (p / person :arg0-of (p2 / produce-01 :arg1 (b2 / building :name (n / name :op1 "N-A"))) :mod (l / large :degree (m / most) :compared-to (w / world))) :op2 (p3 / person :arg0-of (h / have-org-role-91 :arg1 (c / country :name (n2 / name :op1 "Ukraine")) :arg2 (p4 / president))) :op3 (p5 / person :arg0-of (h2 / have-org-role-91 :arg1 (c2 / country) :arg2 (p6 / president))) :op4 (p7 / person :arg0-of (h3 / have-org-role-91 :arg1 (c3 / country) :arg2 (p8 / president))) :op5 (p9 / person :arg0-of (h4 / have-org-role-91 :arg1 (c4 / country) :arg2 (p10 / president)))) :arg1 (s / state :quant 1 :arg1-of (i / include-91 :arg2 (s2 / state)) :mod (l2 / large :degree (m2 / most) :compared-to (w2 / world))))
(a / and :op1 (r / realize-01 :arg0 (s / she) :arg1 (s2 / sleep-01 :polarity - :arg0 (i / it))) :op2 (w / wake-up-02 :arg1 (i2 / it) :arg3 (p / phone)) :op3 (f / find-01 :arg0 (s3 / she) :arg1 (i3 / it)) :op4 (f2 / find-01 :arg0 (s4 / she) :arg1 (i4 / it)) :op5 (f3 / find-01 :arg0 (s5 / she) :arg1 (i5 / it)))
(m / multi-sentence :snt1 (h / hitters :arg0 (y / you) :location (s / section :mod (l / large))) :snt2 (a / and :op1 (l2 / leaves :quant (l3 / lot)) :op2 (l4 / leave-13 :arg1 (p / pain-01 :arg1 (k / köri))) :op3 (l5 / leaves :arg1 (a2 / and :op1 (f / fish) :op2 (f2 / fish) :op4 (f3 / fish) :op5 (f4 / fish) :op6 (f5 / fish) :op7 (f6 / food :mod (c / commerce))))))
FAILED_TO_PARSE#Couldn't convert to full AMR graph.
(b / brainwash-01 :arg1 (s / seyredebilir :name (n / name :op1 (s2 / seyredebilir) :op2 (s3 / seyredebilir))) :arg2 (m / move-01 :arg1 (b2 / bozuculuktan) :arg2 (h / home)) :arg1-of (c / complete-02))
(s / say-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg2 (o / official))) :arg1 (a / and :op1 (o2 / open-02 :arg0 (p2 / police) :arg1 (f / fire) :instrument (c / cat :mod (r / rubber) :arg2-of (i / include-01 :arg1 (b / boy :arg1-of (a2 / age-01 :arg2 (t / temporal-quantity :quant (N / N-A) :unit (y / year))))))) :op2 (k / kill-01 :arg1 (p3 / person :quant 4))) :location (c2 / country :arg1-of (r2 / report-01 :location (c3 / country))))
(c / chance-02 :arg1 (w / work-01 :arg0 (i / i) :arg2 (h / he)))
(a / and :op1 (c / close-01 :arg0 (c2 / country :name (n / name :op1 "Hungary")) :arg1 (b / border-01 :arg1 (c3 / country) :arg2 (c4 / country :name (n2 / name :op1 "Serbia") :location (s / south))) :purpose (c5 / cut-off-04 :arg0 (c6 / country) :arg1 (f / flow-01 :arg1 (p / person :arg0-of (i / immigrate-01))))) :op2 (d / declare-01 :arg0 (c7 / country) :arg2 (a2 / and :op1 (s2 / state :mod (e / emergency)) :op2 (p2 / person :arg0-of (t / try-01 :arg1 (e2 / enter-01 :arg0 (p3 / person) :arg1 (c8 / country) :manner (l / law :polarity -))) :manner (l2 / law :polarity -)))))
(m / multi-sentence :snt1 (l / location :name (n / name :op1 "Bergen") :arg1-of (i / include-91 :arg2 (l2 / life :mod (s / short)))) :snt2 (a / and :op1 (p / play-01 :arg1 (s2 / song :quant (b / between :op1 29 :op2 11)) :arg1-of (l3 / long-03)) :op2 (f / fit :quant 129 :domain (s3 / song :quant 129))))
(p / pain-01 :mod (a / also))
(a / and :op1 (o / oppose-01 :arg0 (w / we) :arg1 (t / terrorism)) :op2 (c / come-01 :arg1 (w2 / we) :arg3 (f / fact :arg1-of (s / say-01 :arg0 (i / individual :mod (o2 / organization :name (n / name :op1 "CHP")))))))
(p / perform :arg0 (p2 / person :name (n / name :op1 "Sanchez")) :arg1 (s / surgery-01 :arg1 (s2 / shoulder) :arg2 (s3 / shoulder)) :arg2 (p3 / person :name (n2 / name :op1 "James" :op2 "Andrews")) :li 2007)
(s / say-01 :arg0 (p / police) :arg1 (f / flee-05 :arg0 (v / victim) :arg1 (s2 / scene) :purpose (h / help-01 :arg0 (v2 / victim) :arg1 (d / drive-01 :arg0 (v3 / victim) :arg1 (m / multiplier)))))
(c / cause-01 :arg0 (p / position-01 :arg1 (p2 / person :quant (s / some) :arg1-of (i / include-91 :arg2 (p3 / position :poss (a / and :op1 (p4 / person :arg0-of (h / have-org-role-91 :arg2 (h2 / head-of-state))) :op2 (p5 / person :arg0-of (h3 / have-org-role-91 :arg1 (t / tapestries) :arg2 (- / -lrb-))) :op3 (p6 / person :arg0-of (t2 / try-01 :arg1 (c2 / cross-02 :arg0 (p7 / person) :arg1 (s2 / syria :arg0 (p8 / person) :arg1 (a2 / and :op1 (p9 / person :arg0-of (h4 / have-rel-role-91 :arg1 (p10 / person) :arg2 (c3 / child))) :op2 (p11 / person :arg0-of (h5 / have-rel-role-91 :arg1 (p12 / person) :arg2 (c4 / child))) :op3 (p13 / person :arg0-of (h6 / have-rel-role-91 :arg1 (p14 / person) :arg2 (c5 / child))) :op4 (p15 / person :arg0-of (h7 / have-rel-role-91 :arg1 (p16 / person) :arg2 (c6 / child))) :op5 (p17 / person :arg0-of (h8 / have-rel-role-91 :arg1 (p18 / person) :arg2 (c7 / child))) :op5 (p19 / person :arg0-of (h9 / have-rel-role-91 :arg1 (p20 / person) :arg2 (c8 / child))) :op6 (p21 / person :arg0-of (h10 / have-rel-role-91 :arg1 (p22 / person) :arg2 (c9 / child))) :op6 (p23 / person :arg0-of (h11 / have-rel-role-91 :arg1 (p24 / person) :arg2 (c10 / child))) :op7 (p25 / person :arg0-of (h12 / have-rel-role-91 :arg1 (p26 / person) :arg2 (c11 / child))) :op8 (p27 / person :arg0-of (h13 / have-rel-role-91 :arg1 (p28 / person) :arg2 (c12 / child))) :op8 (p29 / person :arg0-of (h14 / have-rel-role-91 :arg1 (p30 / person) :arg2 (c13 / child))) :op8 (p31 / person :arg0-of (h15 / have-rel-role-91 :arg1 (p32 / person) :arg2 (c14 / child))) :op8 (p33 / person :arg0-of (h16 / have-rel-role-91 :arg1 (p34 / person) :arg2 (c15 / child))) :op8 (p35 / person :arg0-of (h17 / have-rel-role-91 :arg1 (p36 / person) :arg2 (c16 / child))) :op8 (p37 / person :arg0-of (h18 / have-rel-role-91 :arg1 (p38 / person) :arg2 (c17 / child))) :op8 (p39 / person :arg0-of (h19 / have-rel-role-91 :arg1 (p40 / person) :arg2 (c18 / child))) :op8 (p41 / person :arg0-of (h20 / have-rel-role-91 :arg1 (p42 / person) :arg2 (c19 / child))) :op8 (p43 / person :arg0-of (h21 / have-rel-role-91 :arg1 (p44 / person) :arg2 (c20 / child))))))))))))))
(s / say-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (a / and :op1 (p2 / person :name (n / name :op1 "Dundar")) :op2 (p3 / person :name (n2 / name :op1 "Erdem" :op2 "Gul"))) :arg2 (a2 / arrest-01 :arg1 (p4 / person)))) :arg1 (a3 / and :op1 (p5 / possible-01 :arg1 (a4 / and :op1 (p6 / person :arg0-of (w / write-01)) :op2 (j / journalist :location (c / country :name (n3 / name :op1 "Turkey"))) :op3 (a5 / asli :location (s2 / society))) :purpose (b / borrow-01 :arg0 (a6 / and) :arg1 (d / duty :poss (a7 / and)))) :op2 (a8 / added :arg0 (a9 / and :op1 (o / opine-01 :arg0 (p7 / public)) :op2 (t / thing :arg1-of (o2 / opine-01 :arg0 (p8 / public))) :op3 (t2 / thing :arg1-of (o3 / opine-01 :arg0 (p9 / public)))))))
(d / doctor :mod (t / tekrardan) :mod (a / also) :time (t2 / tomorrow))
(r / require-01 :arg0 (t / thing :arg2-of (h / have-part-91 :arg1 (g / gas :arg1-of (n / natural-03) :location (s / sea :arg1-of (d / deep-02) :location (s2 / sea :arg1-of (d2 / deep-02)))) :mod (l / large))) :arg1 (a / and :op1 (c / complicate-01 :arg1 (t2 / thing :arg2-of (s3 / solve-01 :arg1 (t3 / thing :arg2-of (s4 / solve-01 :arg1 (t4 / thing :arg1-of (n2 / natural-03))))))) :op2 (t5 / thing :arg2-of (s5 / solve-01 :mod (e / expensive)) :arg1-of (c2 / complicate-01))) :location (h2 / here) :time (w / wait-01 :arg1 (t6 / try-01 :arg1 (s6 / start-01 :arg1 (s7 / start-01 :arg1 (s8 / start-01 :arg1 (a2 / and :op1 (s9 / start :arg1 (g2 / gas :arg1-of (n3 / natural-03) :mod (g3 / gas))) :op2 (d3 / develop-02 :arg1 (p / plant)))))))))
(c / contrast-01 :arg2 (r / realistic-03 :arg1 (e / experience-01 :arg1-of (e2 / experience-01 :arg0 (i / i))) :time (u / until :op1 (y / yak?nd?k :degree (v / very)))))
(r / refer-01 :arg0 (p / person :name (n / name :op1 "Kokkinakis") :arg1-of (i / include-91 :arg2 (p2 / person :arg0-of (h / have-org-role-91 :arg1 (p3 / person :name (n2 / name :op1 "Kyrgios" :op2 "Stan" :op3 "Wawrinka") :mod (y / young :degree (m / most)) :location (c / city :name (n3 / name :op1 "Montreal"))) :arg2 (m2 / member))) :arg2 (m3 / member))) :arg1 (p4 / person :mod (y2 / young) :mod (y3 / young :degree (m4 / most) :compared-to (p5 / person :mod (y4 / young) :arg0-of (w / welcome-01 :arg1 (p6 / person) :arg2 (w2 / way :mod (s / shameful) :manner-of (w3 / welcome-01 :arg1 (p7 / person))))))) :arg1-of (n4 / normal-02) :arg1-of (c2 / cause-01 :arg0 (f / find-01 :arg1 (s2 / spotlight :location (b / butter)))) :arg1-of (n5 / normal-02))
(p / photograph-01 :mode (i / interrogative) :arg0 (p2 / photograph-01 :location (c / country :name (n / name :op1 "Lebanon") :location (c2 / country :name (n2 / name :op1 "Syria")))) :arg1 (p3 / photograph-01 :location (l / location :name (n3 / name :op1 "South" :op2 "East"))))
(b / burn-01 :arg1 (b2 / building :mod (w / wooden)))
(g / give-01 :arg0 (p / person :name (n / name :op1 "Burak" :op2 "Yilmaz")) :arg1 (m / money) :arg2 (p2 / part :part-of (b / bleachers) :mod (b2 / big)) :time (a / after :op1 (g2 / give-01 :arg0 (p3 / person) :arg1 (m2 / money) :arg2 (p4 / person))))
(i / invite-01 :arg0 (p / person :arg0-of (s / study-01) :location (i2 / inside :op1 (p2 / person :arg0-of (s2 / study-01)))) :arg1 (p3 / policy) :condition (l / locked :polarity - :arg1 (d / door)))
(h / have-03 :arg0 (o / other :example (a / argue-01)) :arg1 (t / that))
(s / say-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (o / organization :name (n / name :op1 "Brisbane" :op2 "Broncos")))) :arg1 (t / team :mod (p2 / person :name (n2 / name :op1 "Wayne" :op2 "Bennett")) :arg0-of (h2 / have-org-role-91 :arg1 (o2 / organization) :arg3 (l / lead-02 :arg0 (t2 / team) :arg1 (t3 / team)))) :time (n3 / night :time (a / after :op1 (w / win-01 :arg0 (t4 / team) :arg1 (s2 / storm :mod (o3 / old :degree (m / more :degree (m2 / much))) :arg1-of (m3 / match-01 :arg2 (a2 / and :op1 (s3 / send-01 :arg1 (' / '' :mod (i / ibretlik)) :arg2 (l2 / league :arg1-of (d / describe-01 :arg0 (l3 / leagues) :arg2 (g / game :mod ('2 / ''))))) :op2 ('3 / '' :polarity - :arg1 ('4 / '') :degree (v / very)))))))))
(g / gain-02 :arg1 (t / thing :arg1-of (g2 / gain-02 :arg1-of (e / experience-01))) :time (n / now))
(s / say-01 :arg0 (p / person :name (n / name :op1 "Andrew" :op2 "Bingham")) :arg1 (t / thing :arg2-of (c / copy-01 :arg1 (f / fm :mod (c2 / classic)))) :li 3)
(s / say-01 :arg0 (p / person :name (n / name :op1 "Neilson")) :arg1 (c / contrast-01 :arg1 (g / give-up-07 :polarity - :arg0 (p2 / person) :arg1 (u / up)) :arg2 (c2 / continue-01 :arg1 (p3 / push-01 :arg0 (g2 / government-organization :arg0-of (g3 / govern-01)) :arg1 (t / thing :arg1-of (p4 / perform-01)) :time (e / ever)))))
(s / say-01 :arg0 (p / person :name (n / name :op1 "Paul" :op2 "Molitor") :arg0-of (h / have-org-role-91 :arg2 (p2 / person :arg0-of (m / manage-01)))) :arg1 (d / deal-01 :arg0 (p3 / person :arg0-of (h2 / have-org-role-91 :arg2 (p4 / person :arg0-of (m2 / manage-01)))) :mod (g / great)))
(r / release-01 :arg1 (s / secret :poss (s2 / state :name (n / name :op1 "Victoria"))) :time (b / before :op1 (n2 / now) :quant (b2 / between :op1 (t / temporal-quantity :quant (N / N-A) :unit (m / month)) :op2 (t2 / temporal-quantity :quant (N2 / N-A) :unit (m2 / month)))))
(s / s?n?zd?r :arg0 (? / ?? :name (n / name :op1 (a / anlam) :op2 (a2 / anlam))) :arg1 (i / it) :time (s2 / so-far))
(p / possible-01 :arg1 (t / try-01 :arg0 (y / you) :arg1 (c / card :mod (r / red) :domain (t2 / this))) :time (s / say-01 :arg0 (i / i) :arg1 (t3 / that)))
(c / cause-01 :arg0 (o / offer-01 :arg0 (h / he) :arg1 (j / join-01 :arg0 (h2 / he) :arg1 (c2 / company))) :arg1 (a / accept-01 :polarity - :arg0 (h3 / he) :arg1 (i / it)))
(m / multi-sentence :snt1 (s / story) :snt2 (e / expect-01 :arg0 (w / we) :arg1 (a / address :mod (e2 / e-mail) :poss (w2 / we))))
(a / anger-01 :arg1 (c / city :name (n / name :op1 "Washington")) :mod (a2 / also))
(a / and :op1 (d / documentary :name (n / name :op1 (m / magazine :name (n2 / name :op1 "Time"))) :domain (h / he)) :op2 (e / envision-01 :arg0 (h2 / he) :arg1 (a2 / and :op1 (w / wait-01 :arg1 (w2 / we) :arg2 (p / person :arg0-of (h3 / have-org-role-91 :arg1 (f / family :mod (r / royal)) :arg2 (m2 / member))) :arg1-of (c / cause-01 :arg0 (s / sit-01 :arg1 (w3 / we) :arg2 (f2 / family :mod (r2 / royal) :location (t / theater :mod (m3 / movie)))))) :op2 (n3 / notice-01 :arg0 (w4 / we) :arg1 (s2 / sit-01 :arg1 (p2 / person :arg0-of (h4 / have-org-role-91 :arg2 (h5 / head-of-state))) :arg2 (p3 / person :arg0-of (h6 / have-org-role-91 :arg2 (h7 / head-of-state))))))))
(e / exhibit-01 :arg1 (m / map) :medium (a / above :op1 (e2 / everything :mod (e3 / else) :arg1-of (t / tuttu?una :arg0 (g / government-organization :name (n / name :op1 "Fed")) :arg2 (a2 / and :op1 (p / person :name (n2 / name :op1 "Janet" :op2 "L." :op3 "Yellen")) :op2 (p2 / person :name (n3 / name :op1 "Janet" :op2 "L." :op3 "Yellen") :arg0-of (h / have-org-role-91 :arg2 (c / colleagues))))))))
(s / say-01 :arg1 (t / this) :arg2 (p / person :name (n / name :op1 "Robinson")) :time (b / beat-03 :arg0 (p2 / person) :arg1 (w / we :quant (2 / 24-2)) :arg2 (w2 / wrestling :arg1 (p3 / person))) :arg1-of (c / cause-01 :arg0 (h / hear-01 :polarity - :arg0 (i / i) :arg1 (t2 / talk-01 :arg0 (p4 / person) :arg1 (i2 / invest-01 :arg0 (p5 / person))))))
(o / obligate-01 :arg1 (e / energy) :arg2 (u / use-01 :arg1 (e2 / energy) :purpose (p / prevent-01 :arg0 (e3 / energy) :arg1 (s / secession :source (c / country :mod (t / this)) :arg1-of (l / likely-01 :degree (l2 / less)) :arg1-of (l3 / likely-01 :degree (l4 / less)) :arg1-of (c2 / cause-01 :arg0 (l5 / likely-01 :arg1 (m / make-01 :arg0 (c3 / country) :arg1 (e4 / effort :purpose (s2 / selfie :arg1 (c4 / country :mod (t2 / this)))) :arg1-of (c5 / cause-01 :arg0 (w / want-01 :polarity - :arg0 (c6 / country) :arg1 (t3 / tendencies :arg1 (s3 / separatist))))) :degree (l6 / less)))))))
(w / word :arg0 (w2 / word :quant 4) :arg1 (p / perform-02 :arg0 (p2 / person :name (n / name :op1 "Tolga" :op2 "Celik")) :arg1 (m / movie :name (n2 / name :op1 (? / ??) :op2 (?2 / ??) :op3 (b / bahsettiren)))) :arg2 (p3 / person :name (n3 / name :op1 "Kadir" :op2 "Çermik") :arg0-of (h / have-org-role-91 :arg2 (b2 / bahsettiren))) :manner (s / success))
(r / report-01 :arg0 (m / ministry :mod (h / health)) :arg1 (w / wound-01 :arg1 (p / person :quant 394)) :arg1-of (f / follow-01 :arg2 (c / collapse-01 :arg1 (w2 / work-of-art :name (n / name :op1 "N-A")))))
(d / divide-02 :arg1 (w / world) :arg2 (r / region))
(w / wraps :arg0 (t / trio :poss (p / person :arg0-of (o / oppress-01)) :arg0-of (p2 / play-08 :arg1 (a / album))) :arg1 (c / concert :arg0 (t2 / trio :poss (p3 / person :arg0-of (o2 / oppress-01)) :arg0-of (p4 / play-08 :arg1 (a2 / album)))) :arg2 (c2 / concert) :time (d / day :ord (o3 / ordinal-entity :value 30)))
(m / multi-sentence :snt1 (i / include-91 :arg1 (a / and :op1 (p / person :arg0-of (p2 / perpetrate-01)) :op2 (p3 / person :arg0-of (p4 / perpetrate-01)) :op3 (p5 / person :arg0-of (p6 / perpetrate-01)) :op4 (p7 / person :arg2-of (s / suspect-01)) :op5 (p8 / person :arg2-of (s2 / suspect-01))) :arg2 (a2 / and :op1 (p9 / province :arg1-of (d / differ-02) :location (c / country :name (n / name :op1 "Turkey"))) :op2 (p10 / person :arg0-of (f / find-01 :arg1 (c2 / card :name (n2 / name :op1 (' / '') :op2 (c3 / card) :op3 (c4 / card) :op4 (c5 / card) :op5 (c6 / card) :op6 (c7 / card) :op7 (c8 / card) :op6 (c9 / card) :op7 (c10 / card) :op8 (c11 / card) :op9 (c12 / card) :op8 (c13 / card) :op9 (c14 / card))))))) :snt2 (i2 / information :arg0 (c15 / citizen) :arg1 (i3 / information :topic (c16 / card))))
(m / multi-sentence :snt1 (' / '' :arg0 (p / person :name (n / name :op1 "Brad" :op2 "ausmus") :arg0-of (h / have-org-role-91 :arg1 (p2 / person :arg0-of (h2 / have-org-role-91 :arg2 (p3 / person :arg0-of (m2 / manage-01 :arg1 (t / tigers))))) :arg2 (p4 / person :arg0-of (m3 / manage-01 :arg1 (p5 / person :arg0-of (m4 / manage-01 :arg1 (t2 / tigers))))))) :arg1 (w / whatever :mod (t3 / triumph))) :snt2 ('2 / '' :mode (e / expressive)))
(g / give-01 :arg0 (p / person :arg2-of (i / include-01 :arg1 (c / crisis)) :arg2-of (i2 / include-01 :arg1 (c2 / crisis)) :arg2-of (i3 / include-01 :arg1 (c3 / crisis)) :arg2-of (i4 / include-91 :arg1 (c4 / combat-01 :arg1 (c5 / crisis))) :arg2-of (i5 / include-91 :arg1 (c6 / combat-01 :arg1 (c7 / crisis))) :arg2-of (i6 / include-91 :arg1 (c8 / combat-01 :arg1 (c9 / crisis))) :arg2-of (i7 / include-91 :arg1 (c10 / combat-01 :arg1 (c11 / crisis)))) :arg1 (p2 / power :arg1-of (w / wide-02)) :arg2 (a / authority))
(s / show-01 :arg0 (p / poll-01 :location (o / organization :name (n / name :op1 "Quinnipiac") :arg1-of (i / include-91 :arg2 (a / appear-01 :arg1 (a2 / appear-01 :arg1 (p2 / person :name (n2 / name :op1 "Donald" :op2 "Trump"))))))) :arg1 (p3 / prefer-01 :arg0 (p4 / person) :arg1 (p5 / prefer-01 :arg0 (p6 / person))) :time (w / week :mod (l / last)) :location (o2 / organization))
(a / and :op1 (u / use-01 :arg0 (a2 / and :op1 (p / person :name (n / name :op1 "Lopez") :arg0-of (h / have-rel-role-91 :arg1 (p2 / person :arg0-of (h2 / have-rel-role-91 :arg1 (p3 / person) :arg2 (p4 / parent))) :arg2 (p5 / parent))) :op2 (p6 / person :arg0-of (h3 / have-rel-role-91 :arg1 (p7 / person) :arg2 (p8 / parent))) :op3 (p9 / person :arg0-of (t / teach-01))) :arg1 (t2 / theme :mod (o / or :op1 (p10 / product :mod (a3 / antiseptic)) :op2 (p11 / product :mod (n2 / non-alcoholic))))) :op2 (a4 / advise-01 :arg0 (a5 / and) :arg2 (r / reach-01 :arg0 (a6 / and) :arg1 (r2 / reach-01 :arg0 (c / child) :arg1 (c2 / child)))))
(w / wound-01 :arg1 (f / force :arg1-of (b / back-01 :arg0 (a / and :op1 (f2 / force :arg1-of (s / special-02) :mod (c / country :name (n / name :op1 "N-A"))) :op2 (f3 / force :arg1-of (o / organize-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg2 (m / minister)))) :arg2-of (i / include-91 :arg1 (r / rescue-01 :arg0 (p2 / person :arg0-of (h2 / have-org-role-91 :arg2 (m2 / minister)))) :arg2-of (i2 / include-91 :arg1 (r2 / rescue-01 :arg0 (p3 / person) :arg1 (h3 / hostage))))) :arg2-of (i3 / include-91 :arg1 (r3 / rescue-01 :arg0 (p4 / person) :arg1 (h4 / hostage))) :arg2-of (i4 / include-91 :arg1 (r4 / rescue-01 :arg0 (p5 / person) :arg1 (h5 / hostage))) :arg2-of (i5 / include-91 :arg1 (r5 / rescue-01 :arg0 (p6 / person) :arg1 (h6 / hostage)))))))
(p / possible-01 :arg1 (m / mean-01 :arg1 (t / that) :arg2 (f / face-01 :arg0 (w / we) :arg1 (f2 / face-01 :arg0 (w2 / we) :location (h / here)) :time (l / late :degree (m2 / more)))) :condition (t2 / talk-01 :arg0 (t3 / they) :arg2 (w3 / we)))
(d / develop-02 :arg1 (i / it) :mod (a / also))
(m / multi-sentence :snt1 (c / contrast-01 :arg1 (p / person :name (n / name :op1 "Aaron" :op2 "Hicks") :arg0-of (h / have-org-role-91 :arg2 (m2 / midfielder))) :arg2 (v / vuru :mod (r / right))) :snt2 (v2 / vuru :arg0 (a / and :op1 (p2 / person :name (n2 / name :op1 "Simon")) :op2 (b / briandozier :ord (o / ordinal-entity :value 2) :name (n3 / name :op1 (s / solak))) :ord (o2 / ordinal-entity :value 2)) :time (b2 / before :op1 (k / kald?rmadan :arg1 (s2 / sallarken) :arg2 (m3 / make-01 :arg0 (c2 / country) :arg1 (v3 / vuru))))))
(w / worry-02 :arg0 (t / they) :arg1 (t2 / they) :arg1-of (c / cause-01 :arg0 (n / normal-02 :arg1 (i / involve-01 :arg1 (t3 / they) :arg2 (f / far :degree (s / so))))))
(w / wound-01 :arg1 (p / person :quant 394) :arg1-of (c / cause-01 :arg0 (b / bury-01 :arg1 (b2 / body :consist-of (p2 / person :arg0-of (h / have-org-role-91 :arg1 (f / family :arg1-of (h2 / have-org-role-91 :arg0 (p3 / person) :arg2 (m / member))) :arg2 (m2 / member)))) :arg2 (b3 / bury-01 :arg1 (b4 / body) :arg2 (b5 / body :mod (d / die-01)) :time (a / after :op1 (b6 / bring-up-02 :arg1 (t / twink)))))) :time (t2 / time :arg1-of (s / same-01)))
(d / discuss-01 :polarity -)
(m / multi-sentence :snt1 (t / think-01 :arg0 (i / i) :arg1 (g / good-04 :polarity - :arg1 (i2 / issue-02 :mod (t2 / this)) :arg2 (i3 / issue-02 :mod (t3 / this)) :degree (e / enough))) :snt2 (s / say-01 :arg0 (h / he)))
(d / diva :mode (e / expressive))
(w / want-01 :arg0 (f / family :arg1-of (i / include-91 :arg2 (p / person :arg0-of (h / have-org-role-91 :arg1 (f2 / family :arg1-of (h2 / have-org-role-91 :arg0 (p2 / person) :arg2 (m / member))) :arg3 (a / apprentice-01 :arg0 (p3 / person)))) :arg3 (a2 / all))) :arg1 (s / swim-01 :arg0 (p4 / person) :arg2 (h3 / here)))
(s / say-01 :arg0 (m / match-03) :arg1 (a / and :op1 (h / high-02 :arg1 (a2 / and :op1 (s2 / storm) :op2 (r / roosters)) :degree (m2 / more) :compared-to (s3 / showdown :arg1 (a3 / and :op1 (o / organization :name (n / name :op1 "Broncos")) :op2 (o2 / organization :name (n2 / name :op1 "Cowboys"))))) :op2 (h2 / higher :arg1 (a4 / and) :degree (m3 / more))) :arg1-of (p / point-out-02 :arg0 (m4 / match-03)))
(o / or :op1 (b / bilekleriyle :mod (t / this)) :op2 (c / connect-01 :polarity - :arg2 (s / sakatl?klar?yla :time (p / previous))))
(r / represent-01 :arg0 (a / amr-unknown) :arg1 (t / thing :quant (w / whole)) :time (m / morning :mod (t2 / this)))
(a / and :op1 (t / think-01 :arg0 (t2 / they) :arg1 (s / same-01 :arg1 (t3 / thing :arg1-of (s2 / same-01 :arg2 (b / blair :mod (t4 / tony)))) :frequency (o / often) :time (t5 / time :arg1-of (s3 / same-01))) :frequency (o2 / often)) :op2 (c / cause-01 :arg0 (u / understand-01 :polarity - :arg1 (n / need-01 :arg0 (h / he) :arg1 (f / feed-01 :arg0 (h2 / he) :arg2 (m / muz)))) :arg1 (t6 / thing :arg1-of (n2 / need-01 :arg0 (h3 / he)))))
(a / and :op1 (a2 / ask-02 :arg0 (b / book :arg1-of (s / supply-01 :arg0 (p / person :arg0-of (h / have-rel-role-91 :arg1 (c / child) :arg2 (c2 / child))) :arg2 (p2 / person :arg0-of (c3 / care-03 :arg1 (c4 / child))))) :arg1 (p3 / person :arg0-of (h2 / have-org-role-91 :arg2 (m / minister :mod (p4 / prime)))) :arg2 (p5 / person :arg0-of (h3 / have-org-role-91 :arg2 (m2 / minister :mod (p6 / prime))))) :op2 (c5 / choose-01 :arg0 (p7 / person :arg0-of (h4 / have-org-role-91 :arg2 (m3 / minister :mod (p8 / prime)))) :arg1 (c6 / choose-01 :arg0 (p9 / person :arg0-of (h5 / have-org-role-91 :arg2 (m4 / minister :mod (p10 / prime)))))))
(m / multi-sentence :snt1 (p / possible-01 :polarity - :arg1 (u / understand-01 :arg0 (p2 / person :arg0-of (h / have-rel-role-91 :arg2 (f / father))) :arg1 (t / thing :arg2-of (t2 / taste :arg1 (l / life) :prep-as (p3 / person :arg0-of (s / study-01)))))) :snt2 (p4 / possible-01 :polarity - :arg1 (u2 / understand-01 :arg1 (r / relation-03 :arg1 (w / wrong)))) :snt3 (o / obligate-01 :arg2 (t3 / think-01 :arg1 (o2 / obligate-01 :arg2 (p5 / point :mod (t4 / this))))))
(b / be-located-at-91 :arg1 (p / pot :ord (o / ordinal-entity :value 3) :prep-with (a / and :op1 (w / water) :op2 (d / doldurulur)) :arg1-of (d2 / deep-02)) :arg2 (s / spaces))
(s / say-01 :arg1 (i / invite-01 :arg0 (p / person :arg0-of (v / visit-01)) :arg1 (p2 / person :arg0-of (v2 / visit-01)) :arg2 (w / world :name (n / name :op1 (i2 / idyllic) :op2 (w2 / world) :op3 (w3 / world) :op4 (w4 / world) :op5 (w5 / world) :op6 (w6 / world) :op7 (w7 / world)))) :arg2 (p3 / person :arg0-of (v3 / visit-01)))
(g / grow-01 :arg1 (l / lamb) :location (a / area :mod (t / this)))
(s / say-01 :arg0 (p / person :name (n / name :op1 "Lacker")) :arg1 (p2 / possible-01 :arg1 (d / define-01 :arg0 (c / country :name (n2 / name :op1 "United" :op2 "States")) :arg1 (t / thing :arg1-of (r / recommend-01 :arg0 (c2 / country))) :arg2 (t2 / thing :arg2-of (r2 / recommend-01) :mod (g / grow-01))) :arg1-of (c3 / cause-01 :arg0 (' / '' :arg0 (c4 / crisis :mod (f / finance) :location (c5 / company :name (n3 / name :op1 "N-A"))) :arg1 (r3 / rate :mod (b / benchmark) :poss (s2 / session :quant 3)) :time (c6 / crisis :mod (f2 / finance) :location (c7 / company :name (n4 / name :op1 "N-A")))))))
(( / ( :( (n / name) :op1 "Putin")
(p / phone-number-entity :value (N / N-A))
(r / report-01 :arg0 (m / magazine :name (n / name :op1 "N-A") :mod (w / weekly)) :arg1 (d / decide-01 :arg0 (o / organization :name (n2 / name :op1 "German" :op2 "Federal" :op3 "Prosecutor" :op4 "'s" :op5 "Office")) :arg1 (b / bring-01 :arg0 (o2 / organization) :arg1 (p / person :quant 10) :arg2 (a / attack-01 :arg0 (p2 / person) :arg1 (p3 / person :quant 10)))) :medium (i / internet))
(a / and :op1 (d / dinner :arg0 (i / i) :arg1 (i2 / i)) :op2 (p / person :arg0-of (t / teach-01 :arg1 (i3 / i))) :time (a2 / and :op1 (s / stress-01 :arg0 (i4 / i) :arg1 (s2 / stress-01 :arg0 (i5 / i))) :op2 (d2 / decline-01 :arg1 (w / weight))))
(e / example :quant 1 :arg1-of (i / include-91 :arg2 (e2 / example :arg1-of (b / bad-07 :degree (m / most)) :time (b2 / become-01 :arg1 (g / gerilemeden :mod (p / precedent :polarity -)) :arg2 (r / recover-01)))) :arg1-of (c / contrary-01))
(a / and :op1 (t / terrorist :arg0-of (h / have-org-role-91 :arg1 (c / criminal-organization :name (n / name :op1 "PKK")) :arg2 (t2 / terrorist))) :op2 (t3 / terrorist :arg0-of (d / detonating :arg1 (c2 / control-01 :arg0 (t4 / terrorist) :arg1 (e / explosive)))) :manner (c3 / control-01 :arg0 (t5 / terrorist) :arg1 (v / vehicle :mod (p / police) :mod (p2 / police))))
(m / multi-sentence :snt1 (h / have-concession-91 :arg1 (e / express-01 :arg0 (p / person :quant 1 :arg1-of (i / include-91 :arg2 (p2 / person :arg0-of (h2 / have-org-role-91 :arg2 (p3 / person :arg1-of (e2 / expert-01 :arg2 (t / trust-01))))))) :arg1 (r / rule :poss (p4 / person :name (n / name :op1 "Diyetisyen" :op2 "Pinari")))) :arg2 (e3 / express-01 :arg0 (p5 / person :quant 1 :arg1-of (i2 / include-91 :arg2 (p6 / person :arg0-of (h3 / have-org-role-91 :arg2 (p7 / person :arg1-of (e4 / expert-01 :arg2 (t2 / trust-01)))))) :mod (e5 / every)) :arg1 (r2 / rule :poss (p8 / person)) :degree (m2 / more :mod (c / certain)) :compared-to (p9 / person :arg1-of (i3 / include-91 :arg2 (p10 / person :arg0-of (h4 / have-org-role-91 :arg2 (p11 / person :arg1-of (e6 / expert-01))))) :arg0-of (h5 / have-org-role-91 :arg2 (p12 / person :arg1-of (e7 / expert-01))) :arg0-of (h6 / have-org-role-91 :arg2 (p13 / person :arg1-of (e8 / expert-01))) :arg0-of (h7 / have-org-role-91 :arg2 (p14 / person :arg1-of (e9 / expert-01))) :arg0-of (h8 / have-org-role-91 :arg2 (p15 / person :arg1-of (e10 / expert-01))) :arg0-of (h9 / have-org-role-91 :arg2 (p16 / person :arg1-of (e11 / expert-01))) :arg0-of (h10 / have-org-role-91 :arg2 (p17 / person :arg1-of (e12 / expert-01))) :arg0-of (h11 / have-org-role-91 :arg2 (p18 / person :arg1-of (e13 / expert-01))) :arg0-of (h12 / have-org-role-91 :arg2 (p19 / person :arg1-of (e14 / expert-01))) :arg0-of (h13 / have-org-role-91 :arg2 (p20 / person :arg1-of (e15 / expert-01))) :arg0-of (h14 / have-org-role-91 :arg2 (p21 / person :arg1-of (e16 / expert-01))) :arg0-of (h15 / have-org-role-91 :arg2 (p22 / person :arg1-of (e17 / expert-01))) :arg0-of (h16 / have-org-role-91 :arg2 (p23 / person :arg1-of (e18 / expert-01))) :arg0-of (h17 / have-org-role-91 :arg2 (p24 / person :arg1-of (e19 / expert-01)))))))
(m / multi-sentence :snt1 (l / look-02 :arg0 (h / he) :arg1 (g / good :mod (g2 / good) :arg1-of (p / practice-01 :arg0 (h2 / he)) :mod (g3 / good))) :snt2 (g4 / good :degree (m2 / more) :prep-in (c / case :mod (t / this)) :arg1-of (c2 / cause-01 :arg0 (v / visually :arg0 (h3 / he) :arg1 (c3 / company :name (n / name :op1 "BP") :arg1-of (g5 / go-06 :arg0 (h4 / he) :time (g6 / game)))))))
(c / contrast-01 :arg2 (o / open-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (o2 / organization :name (n / name :op1 "Mehmet" :op2 "Border")) :arg2 (m / minister :mod (v / vice)))) :arg1 (f / fire) :arg1-of (c2 / cause-01 :arg0 (c3 / control-01 :arg0 (p2 / person :arg0-of (h2 / have-org-role-91 :arg2 (m2 / militant))) :arg1 (p3 / person :arg0-of (h3 / have-org-role-91 :arg2 (m3 / militant))) :arg1-of (n2 / near-02 :arg2 (v2 / village :poss (p4 / person :arg0-of (h4 / have-org-role-91 :arg2 (m4 / militant)))))))))
(e / employ-01 :arg1 (p / person :quant (a / about :op1 500)) :location (c / caravan))
(a / and :op1 (a2 / analyze-01 :arg0 (p / person :arg0-of (a3 / analyze-01 :arg1 (o / organization :name (n / name :op1 "Morgan" :op2 "Stanley")))) :arg1 (p2 / person :name (n2 / name :op1 "Tom" :op2 "Kierath") :arg0-of (a4 / analyze-01 :arg1 (r / rate-entity-91 :arg1 (m / monetary-quantity :quant 360 :unit (d / dollar)) :arg2 (v / volume-quantity :quant (N / N-A) :unit (g / gallon)))) :arg2 (r2 / rate-entity-91 :arg1 (m2 / monetary-quantity :quant 250 :unit (d2 / dollar)) :arg2 (v2 / volume-quantity :quant (N2 / N-A) :unit (g2 / gallon))))) :op2 (a5 / analyst :arg0 (o2 / organization) :arg1 (r3 / rate-entity-91 :arg1 (m3 / monetary-quantity :quant 250 :unit (d3 / dollar)) :arg2 (v3 / volume-quantity :quant (N3 / N-A) :unit (g3 / gallon))) :time (p3 / perakendecilerinin :arg0 (o3 / organization :name (n3 / name :op1 "Metcash")) :time (a6 / after :op1 (n4 / now) :quant (u / up-to :op1 (t / temporal-quantity :quant (N4 / N-A) :unit (y / year)))))) :medium (r4 / report))
(o / obtain-01 :arg1 (p / point :mod (m / main) :arg1-of (d / divide-02 :arg2 (p2 / plant))) :li 2)
(s / say-01 :arg0 (h / he) :arg1 (g / guarantee-01 :polarity - :time (t / tomorrow) :time (a / after :op1 (a2 / all))))
(m / multi-sentence :snt1 (c / contrast-01 :arg2 (s / say-01 :arg0 (p / person :name (n / name :op1 "Jane" :op2 "Birkin") :arg0-of (h / have-org-role-91 :arg1 (p2 / press))) :arg1 (w / want-01 :polarity - :arg0 (p3 / person) :arg1 (b / bag :mod (f / full) :consist-of (a / an?lmas?n))))) :snt2 (c2 / contrast-01 :arg2 (i / include-01 :polarity - :arg1 (w2 / way :mod (t / this)) :time (w3 / way :mod (t2 / this)))))
(m / multi-sentence :snt1 (p / person :mode (i / interrogative) :arg0-of (d / drive-01 :arg1 (t / taxi)) :location (l / location :name (n / name :op1 "Diyarbakir"))) :snt2 (e / ehmuz :mode (i2 / interrogative)))
(m / multi-sentence :snt1 (a / and :op1 (a2 / accuse-01 :arg0 (c / company :name (n / name :op1 "BBC")) :arg1 (d / deny-01 :arg0 (c2 / company) :arg1 (d2 / deny-01 :arg1 (m2 / music :mod (l / live-01)) :arg2 (a3 / and :op1 (c3 / commerce) :op2 (p / public)))) :arg2 (a4 / and :op1 (c4 / commerce) :op2 (e / education :arg1-of (p2 / public-02) :topic (i / issue-02 :arg0 (c5 / company :arg0-of (c6 / compete-02))))))) :snt2 (a5 / argue-01 :arg0 (h / he)))
(h / have-concession-91 :arg1 (l / lead-01 :arg0 (p / person :quant 2 :arg1-of (i / include-91 :arg2 (p2 / person :arg1-of (l2 / liberal-02)))) :location (i2 / in-front-of :op1 (g / group :mod (t / this)))) :arg2 (l3 / lead-01 :arg0 (p3 / point :quant 5) :time (n / now)))
(s / study-01 :duration (t / temporal-quantity :quant (1 / 1/2) :unit (y / year)))
(a / and :op2 (l / lie-07 :arg1 (l2 / lesson) :arg2 (t / therein)))
(p / publish-01 :arg0 (p2 / person :arg0-of (v / vote-01) :arg1-of (i / include-91 :arg2 (p3 / person :arg0-of (v2 / vote-01))) :quant (m / more-than :op1 (1 / 1/2))) :arg1 (s / say-01 :arg0 (p4 / person) :arg1 (l / locked :arg0 (p5 / person) :arg1 (v3 / vote-01 :arg0 (p6 / person) :arg1 (p7 / person :name (n / name :op1 "Trump"))))) :medium (t / tuesday :arg1-of (p8 / publish-01 :location (t2 / tuesday :mod (n2 / new)))))
(i / infer-01 :arg1 (o / order-01 :arg0 (s / safe-01 :arg1 (a / and :op1 (c / country :name (n / name :op1 "Norway")) :op2 (s2 / south :part-of (b / border)))) :arg2 (r / repaired :arg1-of (a2 / abandon-01))))
(s / share-01 :arg0 (a / and :op1 (m / mouth :part-of (p / person :name (n / name :op1 "Mondini"))) :op2 (c / company :mod (p2 / paper))) :arg1 (p3 / propose-01 :arg0 (o / organization :name (n2 / name :op1 "Goldman" :op2 "Sachs" :op3 "Group"))) :arg2 (t / thing :arg1-of (p4 / propose-01 :arg0 (o2 / organization))) :arg1-of (c2 / cause-01 :arg0 (s2 / sell-01 :arg0 (c3 / company) :arg1 (p5 / percentage-entity :value (N / N-A) :quant-of (t2 / thing :arg1-of (v / value-01 :arg2 (l / lose-02))))) :time (a2 / after :op1 (d / drop-01 :arg1 (p6 / percentage-entity :value (N2 / N-A) :quant-of (t3 / thing :arg1-of (v2 / value-01 :arg2 (l2 / lose-02))))))))
(m / matter :arg1-of (r / resemble-01 :arg2 (a / and :op1 (b / book) :op2 (l / life :arg1-of (b2 / black-04))) :mod (s / still)))
(a / aspire-01 :arg1 (h / hope-01 :arg1 (s / surprise-01 :arg1 (c / cloud))))
(s / say-01 :arg0 (h / he) :arg1 (p / possible-01 :arg1 (t / take-01 :arg0 (w / we) :arg1 (p2 / person :arg0-of (h2 / have-rel-role-91 :arg1 (i / i) :arg2 (s2 / son))) :arg2 (h3 / hospital)) :time (l / late :op1 (t2 / temporal-quantity :quant (N / N-A) :unit (h4 / hour)) :degree (m / more))))
(t / transfer-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (o / organization :name (n / name :op1 "European" :op2 "Union" :op3 "Commission")) :arg2 (p2 / president)) :arg0-of (h2 / have-org-role-91 :arg1 (p3 / person :name (n2 / name :op1 "Jean" :op2 "Claude" :op3 "Juncker") :arg0-of (h3 / have-org-role-91 :arg1 (o2 / organization) :arg2 (p4 / president))) :arg2 (m / minister :mod (p5 / prime)))) :arg1 (d / duty :purpose (b / block-01 :arg1 (f / fund-01 :arg1 (f2 / fund)))) :arg2 (p6 / person :arg0-of (h4 / have-org-role-91 :arg1 (o3 / organization) :arg2 (p7 / president))))
FAILED_TO_PARSE#Couldn't convert to full AMR graph.
(d / definite :mod (d2 / definite))
(c / cause-01 :arg0 (a / and :op1 (d / do-02 :arg1 (t / time)) :op2 (t2 / thing :manner-of (a2 / and :op1 (d2 / do-02 :arg1 (t3 / time)) :op2 (t4 / thing :manner-of (a3 / and))))) :arg1 (a4 / amr-unknown :domain (a5 / amr-unknown)))
(p / possible-01 :arg1 (s / solve-01 :arg0 (p2 / person :arg1-of (m / miss-01)) :arg1 (p3 / person :quant (1 / 1-2) :arg0-of (s2 / study-01) :arg0-of (h / have-03 :polarity - :arg1 (t / test :quant (l / lot) :arg1-of (p4 / practice-01)))) :time (t2 / time :arg1-of (s3 / same-01)) :mod (a / also)))
(b / block-01 :arg0 (f / force :mod (s / security) :poss (o / organization :name (n / name :op1 "GBT"))) :arg1 (t / thing :arg1-of (p / practice-01)))
(s / send-01 :arg1 (t / they) :arg2 (o / organization :name (n / name :op1 "Diyarbakir" :op2 "Police" :op3 "Directorate")) :time (l / late :degree (m / more)))
(a / and :op1 (i / include-91 :arg1 (a2 / and :op1 (p / person :name (n / name :op1 "Obama")) :op2 (t / thing :arg1-of (a3 / allege-01 :arg0 (p2 / person)))) :arg2 (a4 / allege-01 :arg1 (a5 / activity-06 :arg0 (c / country :name (n2 / name :op1 "China")) :topic (a6 / activity-06 :arg0 (c2 / country :name (n3 / name :op1 "China")) :arg1-of (c3 / conduct-01 :arg0 (c4 / country :name (n4 / name :op1 "China"))))))) :op2 (e / expect-01 :arg1 (t2 / tackle-01 :arg0 (a7 / and) :arg1 (i2 / issue-02 :mod (c5 / controversy) :quant (s / some)))))
(a / and :op1 (r / retailers) :op2 (o / organization :name (n / name :op1 "Union" :op2 "of" :op3 "Chambers") :time (b / before :op1 (n2 / now) :quant (b2 / between :op1 (t / temporal-quantity :quant (N / N-A) :unit (y / year)) :op2 (t2 / temporal-quantity :quant (N2 / N-A) :unit (y2 / year))))))
(a / and :op1 (s / start-01 :arg0 (o / organization :name (n / name :op1 "Fenerbahce") :arg0-of (s2 / start-01 :arg1 (m / match-03) :manner (f / fast)) :arg0-of (s3 / start-01 :arg1 (m2 / match-03) :manner (f2 / fast) :ord (o2 / ordinal-entity :value 1)) :mod (e / especially)) :arg1 (m3 / match-03)) :op2 (a2 / affect-01 :arg0 (t / thing :arg1-of (i / include-91 :arg2 (p / product :arg0-of (p2 / play-01)) :arg3 (h / half))) :arg1 (a3 / affect-01 :arg1 (l / lead-01 :quant (5 / 5-1)))))
(s / say-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (c / city :name (n / name :op1 "Brussels")) :arg2 (c2 / correspondent)) :arg0-of (h2 / have-org-role-91 :arg1 (o / organization :name (n2 / name :op1 "EU")) :arg2 (c3 / correspondent))) :arg1 (r / remember-01 :arg0 (p2 / person) :arg1 (a / and :op1 (a2 / announce-01 :arg0 (p3 / person) :arg1 (n3 / name)) :op2 (a3 / announcing :arg0 (p4 / person) :arg1 (r2 / reputation :poss (p5 / person) :arg1-of (s2 / straight-04)) :manner (a4 / announce-01 :arg0 (p6 / person) :arg1 (n4 / name))))) :time (b / begin-01 :arg1 (d / date-entity :dayperiod (N / N-A))))
(e / except-01 :arg1 (d / die-01 :arg1 (p / person :mod (s / some))) :arg2-of (e2 / except-01 :arg1 (c / case-03 :arg1 (a / alcohol))))
(a / and :op1 (d / drop-05 :arg0 (p / person :name (n / name :op1 "Jarryd" :op2 "Hayne" :op3 "Minnesoa") :arg1-of (i / include-91 :arg2 (p2 / person :arg1-of (r / rank-01 :arg3 (p3 / percentage-entity :value (N / N-A)))) :arg3 (p4 / percentage-entity :value (N2 / N-A)))) :arg1 (b / ball)) :op2 (s / suppose-02 :arg1 (n2 / number) :arg2 (c / cause-01 :arg0 (p5 / person) :arg1 (b2 / ball))))
(a / and :op1 (p / person :name (n / name :op1 "Cameron") :arg0-of (h / have-org-role-91 :arg2 (m / minister :mod (p2 / prime)))) :op2 (p3 / person :name (n2 / name :op1 "Davutoglu") :arg0-of (h2 / have-org-role-91 :arg2 (m2 / minister :mod (p4 / prime)))) :purpose (e / ensure-01 :arg0 (p5 / person) :arg1 (w / want-01 :arg0 (g / government-organization :arg0-of (g2 / govern-01 :arg1 (h3 / he))) :arg1 (c / call-02 :arg0 (g3 / government-organization)))))
(r / recommend-01 :arg0 (p / person :name (n / name :op1 "Monroe") :arg0-of (h / have-org-role-91 :arg1 (j / jury :mod (g / grand)) :arg2 (m / member)) :ord (o / ordinal-entity :value 3)) :arg1 (o2 / open-01 :arg1 (t / try-02)) :arg3 (p2 / person :quant 5 :arg0-of (h2 / have-org-role-91 :arg1 (j2 / jury :mod (g2 / grand)) :arg2 (m2 / member))))
(s / say-01 :arg0 (p / person :name (n / name :op1 "Mustafa") :arg0-of (h / have-org-role-91 :arg2 (g / general)) :arg0-of (h2 / have-org-role-91 :arg2 (g2 / general)) :arg0-of (h3 / have-org-role-91 :arg2 (g3 / general)) :arg0-of (h4 / have-org-role-91 :arg2 (g4 / general)) :arg0-of (h5 / have-org-role-91 :arg2 (g5 / general)) :arg0-of (h6 / have-org-role-91 :arg2 (g6 / general)) :arg0-of (h7 / have-org-role-91 :arg2 (g7 / general)) :arg0-of (h8 / have-org-role-91 :arg2 (g8 / general)) :arg0-of (h9 / have-org-role-91 :arg2 (g9 / general)) :arg0-of (h10 / have-org-role-91 :arg2 (g10 / general)) :arg0-of (h11 / have-org-role-91 :arg2 (g11 / general)) :arg0-of (h12 / have-org-role-91 :arg2 (g12 / general)) :arg0-of (h13 / have-org-role-91 :arg2 (g13 / general)) :arg0-of (h14 / have-org-role-91 :arg2 (g14 / general)) :arg0-of (h15 / have-org-role-91 :arg2 (g15 / general)) :arg0-of (h16 / have-org-role-91 :arg2 (g16 / general)) :arg0-of (h17 / have-org-role-91 :arg2 (g17 / general)) :arg0-of (h18 / have-org-role-91 :arg2 (g18 / general)) :arg0-of (h19 / have-org-role-91 :arg2 (g19 / general)) :arg0-of (h20 / have-org-role-91 :arg2 (g20 / general))))
(s / say-01 :arg0 (o / organization :name (n / name :op1 "NHC") :arg1-of (i / include-91 :arg2 (p / person :arg0-of (h / have-org-role-91 :arg1 (h2 / hurricane :name (n2 / name :op1 (c / cape)) :mod (c2 / cape)) :arg3 (r / rate-entity-91 :arg1 60 :arg2 (t / temporal-quantity :quant (N / N-A) :unit (y / year))))))) :arg1 (l / likely-01 :arg1 (s2 / say-01 :arg0 (p2 / person :arg0-of (h3 / have-org-role-91 :arg1 (o2 / organization) :arg3 (r2 / rate-entity-91 :arg1 60 :arg2 (t2 / temporal-quantity :quant (N2 / N-A) :unit (y2 / year)))) :arg3 (r3 / rate-entity-91 :arg1 60 :arg2 (t3 / temporal-quantity :quant (N3 / N-A) :unit (y3 / year)))))))
(a / and :op1 (a2 / attack-01 :arg0 (p / person :name (n / name :op1 "Meng") :arg2-of (i / include-91 :arg1 (m / mr.))) :arg1 (p2 / person :quant 2 :arg0-of (h / have-org-role-91 :arg1 (g / game :name (n2 / name :op1 "N-A")) :arg2 (m2 / member)))) :op2 (c / ceremony :purpose (k / kumpasla :arg1 (k2 / kumpasla :arg2-of (c2 / criminal-03)) :mod (t / too))))
(a / and :op1 (f / fly-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg2 (d / director)) :arg0-of (h2 / have-org-role-91 :arg2 (d2 / director))) :arg1 (t / tempo :arg1 (g / game))) :op2 (m / manage-02 :arg0 (p2 / person) :arg1 (e / ensure-01 :arg0 (p3 / person) :arg1 (f2 / fluency))))
(a / announce-01 :arg0 (p / person :arg0-of (l / lead-02 :arg1 (p2 / political-party :name (n / name :op1 "Movement" :op2 "for" :op3 "Democratic" :op4 "Change"))) :arg0-of (h / have-org-role-91 :arg1 (p3 / political-party :name (n2 / name :op1 "MDC")) :arg3 (l2 / lead-02 :arg0 (p4 / person) :arg1 (p5 / political-party)))) :arg1 (m / mr :arg0 (p6 / person) :arg1 (p7 / phone :arg1-of (m2 / mobile-02))) :arg0-of (c / cause-01 :arg1 (b / bother-02 :polarity - :arg0 (p8 / person) :arg1 (p9 / person) :time (a2 / arrives :arg1 (s / speech)))))
(s / say-01 :arg0 (h / he) :arg1 (a / and :op1 (p / person :name (n / name :op1 "Gregor" :op2 "Simi") :arg0-of (h2 / have-rel-role-91 :arg1 (p2 / person :name (n2 / name :op1 "Hogg")) :arg2 (l / lawyer))) :op2 (c / crime-02 :arg1 (s2 / sex)) :arg1-of (c2 / cause-01 :arg0 (i / involve-01 :polarity - :arg1 (c3 / crime-02) :arg2 (i2 / involve-01 :arg1 (e / element :mod (s3 / sex :arg1-of (s4 / significant-02))))))))
(a / and :op1 (w / walk-01 :arg0 (s / salutes :name (n / name :op1 (a2 / artists)) :mod (g / great)) :location (s2 / stage)) :op2 (s3 / salutes :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (p2 / person :name (n2 / name :op1 "cengiz" :op2 "tekin" :op3 "senay" :op4 "ozer")) :arg2 (d / director))) :arg1 (g2 / god :mod (g3 / great))) :op3 (b / burning :arg0 (a3 / and :op1 (p3 / person :arg0-of (h2 / have-org-role-91 :arg2 (d2 / director))) :op2 (p4 / person :arg0-of (h3 / have-org-role-91 :arg2 (d3 / director))) :op3 (p5 / person :arg0-of (h4 / have-org-role-91 :arg2 (d4 / director))) :op4 (p6 / person :arg0-of (h5 / have-org-role-91 :arg2 (d5 / director))) :op5 (p7 / person :arg0-of (h6 / have-org-role-91 :arg2 (d6 / director))) :op6 (p8 / person :arg0-of (h7 / have-org-role-91 :arg2 (d7 / director))) :op6 (p9 / person :arg0-of (h8 / have-org-role-91 :arg2 (d8 / director))) :op6 (p10 / person :arg0-of (h9 / have-org-role-91 :arg2 (d9 / director))) :op6 (p11 / person :arg0-of (h10 / have-org-role-91 :arg2 (d10 / director))) :op6 (p12 / person :arg0-of (h11 / have-org-role-91 :arg2 (d11 / director))) :op6 (p13 / person :arg0-of (h12 / have-org-role-91 :arg2 (d12 / director))) :op7 (p14 / person :arg0-of (w2 / want-01 :arg1 (' / '' :arg0 (p15 / person) :arg1 (a4 / album :poss (p16 / person))))))))
(s / say-01 :arg0 (p / person :name (n / name :op1 "Healy")) :arg1 (s2 / strictly :polarity - :arg0 (t / team :name (n2 / name :op1 (-2 / -lsb-) :op2 (k / kyrgios) :op3 (k2 / kyrgios) :op4 (k3 / kyrgios) :op5 (k4 / kyrgios))) :arg1 (g / game :mod (s3 / strict :polarity -) :topic (g2 / game))) :arg1-of (s4 / say-01 :arg0 (h / he)))
(u / unite-01 :arg1 (a / and :op1 (c / company :mod (b / beer) :mod (l / large :degree (m / most :quant 2))) :op2 (o / organization :name (n / name :op1 "Budweiser")) :op3 (p / person :name (n2 / name :op1 "Peroni") :arg0-of (h / have-org-role-91 :arg1 (o2 / organization) :arg3 (l2 / lead-02 :arg0 (a2 / and)))) :op4 (p2 / person :arg0-of (h2 / have-org-role-91 :arg1 (o3 / organization) :arg3 (l3 / lead-02 :arg0 (a3 / and)))) :op5 (b2 / brand :mod (w / well) :example (r / roof :arg1-of (s / same-01 :arg2 (s2 / same))))))
(s / say-01 :arg0 (c / cv :poss (h / he) :location (w / website :poss (o / organization :name (n / name :op1 "University")))) :arg1 (t / take-01 :arg0 (e / educate-01 :arg1-of (p / publish-01 :location (s2 / spring :poss (o2 / organization)))) :arg1 (t2 / title :poss (o3 / organization :name (n2 / name :op1 "Delta" :op2 "State" :op3 "University")))))
(s / say-01 :arg0 (t / thing :arg1-of (d / draft-01) :arg1-of (p / publish-01 :medium (f / field :poss (t2 / thing :arg2-of (s2 / sanction-02))))) :arg1 (c / contrast-01 :arg1 (h / have-03 :polarity - :arg0 (a / and :op1 (c2 / company) :op2 (b / business)) :arg1 (a2 / and :op1 (c3 / company) :op2 (b2 / business)) :purpose (a3 / allow-01 :arg0 (a4 / and) :arg1 (w / work-01 :arg0 (a5 / and) :accompanier (c4 / country :name (n / name :op1 "Russia"))))) :arg2 (t3 / thing :arg1-of (d2 / draft-01) :arg1-of (p2 / publish-01 :medium (f2 / field :poss (s3 / sanction-02))))))
(a / and :op1 (c / come-01 :arg1 (h / he)) :op2 (d / dragged :arg1 (h2 / he) :arg2 (d2 / door)))
(r / reveal-01 :polarity - :arg1 (d / die-01 :arg1 (w / woman :quant 2013 :arg1-of (i / include-91 :arg2 (t / thing :arg2-of (n / name-01 :arg1 (w2 / woman :quant 2)))))) :arg1-of (c / cause-01 :arg0 (e / engulf :arg1 (a / antiseptic :arg0-of (c2 / contain-01 :arg1 (s / substance :mod (t2 / toxic)))))) :location (t3 / thing :arg1-of (c3 / contain-01 :arg0 (t4 / thing :arg1-of (c4 / contain-01 :arg0 (w3 / woman :quant 2))))))
(o / offer-01 :arg0 (i / it) :arg1 (p / perspective :mod (u / unique)))
(m / multi-sentence :snt1 (o / obligate-01 :polarity - :arg1 (y / you) :arg2 (n / nature :mod (w / weather :mod (e / even)) :mod (w2 / weather :mod (e2 / even)))) :snt2 (a / and :op1 (b / boy :arg1-of (n2 / name-01 :arg2 (p / person :arg0-of (w3 / win-01 :arg1 (h / heart :part-of (p2 / person :arg0-of (h2 / have-rel-role-91 :arg1 (h3 / he) :arg2 (d / daughter)))))))) :op2 (s / say-01 :arg0 (b2 / boy) :arg1 (w4 / want-01 :arg0 (p3 / person) :arg1 (s2 / see-01 :arg0 (p4 / person) :arg1 (w5 / want-01 :arg0 (p5 / person) :arg1 (s3 / see-01 :arg0 (p6 / person) :arg1 (w6 / want-01 :arg0 (p7 / person) :arg1 (s4 / see-01 :arg0 (p8 / person) :arg1 (p9 / person :arg1-of (d2 / die-01 :arg1-of (k / know-01 :polarity - :arg0 (l / love-01)))))))))))))
(r / rise-01 :arg1 (i / index :mod 100) :arg4 (p / point :quant (b / between :op1 100 :op2 1,49) :arg1-of (i2 / increase-01 :arg2 (p2 / percentage-entity :value (N / N-A)))))
(d / do-02 :arg0 (w / we) :arg1 (t / this))
(c / complain-01 :arg0 (i / i) :arg1 (h / he))
(a / and :op1 (o / orchestra :arg0 (o2 / organization :name (n / name :op1 "Locomotive" :op2 "Group") :part-of (o3 / organization :name (n2 / name :op1 "Locomotive" :op2 "Group") :time (n3 / night))) :arg1 (a2 / and :op1 (m / music :mod (c / classical) :mod (t / turkish)) :op2 (m2 / music :mod (t2 / turkish)) :op3 (m3 / music :mod (t3 / turkish))) :arg2 (t4 / together)) :op2 (t5 / take-01 :arg0 (a3 / arrange-01 :arg1 (a4 / arrange-01 :arg1-of (r / result-01 :arg2 (l / light)))) :arg1 (s / stage) :time (e / era :mod (e2 / era))))
(m / multi-sentence :snt1 (b / be-located-at-91 :arg1 (c / corner :mod (a / another)) :arg2 (b2 / be-located-at-91 :arg1 (u / universe) :arg2 (c2 / corner :mod (a2 / another) :part-of (u2 / universe)))) :snt2 (e / event :time (n / now)))
(a / and :op1 (c / cost-01 :arg1 (t / thing :arg2-of (p / price-01 :arg1 (o / oil))) :arg2 (r / rate-entity-91 :arg1 (l / less-than :op1 (m / mass-quantity :quant (N / N-A) :unit (k / kilogram))) :arg2 (t2 / temporal-quantity :quant (N2 / N-A) :unit (y / year)))) :op2 (m2 / manufacture-01 :arg1 (r2 / reason :arg0-of (c2 / cause-01 :arg1 (m3 / manufacture-01 :arg1 (e / embargo-01 :arg1 (c3 / country :name (n / name :op1 "United" :op2 "States")))))) :mod (m4 / main)))
(s / say-01 :arg0 (h / he) :arg1 (c / continue-01 :arg0 (w / we) :arg1 (d / determine-01 :arg0 (w2 / we) :arg1 (f / fight-01 :arg0 (w3 / we) :arg1 (t / terrorism)))))
(a / appear-01 :arg1 (p / person :quant 2 :arg1-of (i / include-91 :arg2 (p2 / person :quant 10 :arg0-of (h / have-03 :arg1 (a2 / attitude :mod (p3 / positive))))) :arg0-of (h2 / have-03 :arg1 (a3 / attitude :mod (p4 / positive))) :arg1-of (i2 / include-91 :arg2 (p5 / person :quant 10 :arg1-of (i3 / include-91 :arg2 (p6 / person :quant 10 :arg0-of (h3 / have-03 :arg1 (a4 / attitude :mod (p7 / positive)))))))) :time (m / middle :op1 (d / declares :arg0 (p8 / person :name (n / name :op1 "Donald" :op2 "Trump")) :arg1 (c / candidacy :poss (p9 / person)) :time (m2 / middle :op1 (o / organization :name (n2 / name :op1 "Monmouth" :op2 "University") :mod (j / just))))))
(( / ( :( (n / name) :op1 "Banksy")
(c / contrast-01 :arg1 (p / possible-01 :arg1 (f / feel-01 :arg0 (y / you) :arg1 (p2 / pain-01 :arg1 (y2 / you)) :ord (o / ordinal-entity :value 1 :range (b / before :op1 (f2 / form :poss (p3 / person :name (n / name :op1 "Karayiplere-Lyth") :arg0-of (p4 / peak-01 :arg1 (i / it)))))))) :arg2 (w / waste-01 :arg0 (t / this) :arg1 (o2 / opportunity) :time (n2 / now) :time (n3 / now)))
(m / multi-sentence :snt1 (c / contrast-01 :arg1 (i / it) :arg2 (d / dokunmu?tu :arg0 (p / person :name (n / name :op1 "Moreno")) :arg1 (p2 / person))) :snt2 (b / ball :mod (o / only) :domain (t / thing :arg1-of (d2 / differ-02))))
(i / important :domain (p / position :mod (ü / üstlendim)) :mod (a / also))
(r / repeal-01 :arg1 (t / thing :arg1-of (c / call-01 :arg2 (d / duty)) :quant (s / series)))
(s / speak-01 :arg0 (t / they) :arg2 (p / person :mod (m / male) :arg1-of (i / include-91 :arg2 (p2 / person :mod (m2 / male) :arg0-of (h / have-rel-role-91 :arg1 (t2 / they) :arg2 (f / friend)))) :quant (m3 / most)) :purpose (c / contact-01 :arg0 (t3 / they) :arg1 (w / we)))
(m / measure-02 :arg1 (m2 / measure-02 :arg1 (p / prevent-01 :arg1 (l / leaking :arg1 (t / terrorist)))) :mod (a / also))
(a / and :op2 (p / possible-01 :polarity - :arg1 (c / compare-01 :arg1 (m / music) :arg2 (n / nothing :mod (e / else)))))
(f / find-02 :arg0 (p / person :arg2-of (i / include-01 :arg1 (a / and :op1 (a2 / and :op1 (l / location :name (n / name :op1 "Türkali") :mod (s / sea)) :op2 (p2 / person :name (n2 / name :op1 "Atilla" :op2 "Özdemiro?lu") :arg0-of (h / have-org-role-91 :arg1 (p3 / person :name (n3 / name :op1 "Nadir" :op2 "Sar?bacak")) :arg2 (p4 / person :name (n4 / name :op1 "Özcan" :op2 "Alper")))) :op3 (p5 / person :name (n5 / name :op1 "Özcan" :op2 "Alper") :arg0-of (h2 / have-org-role-91 :arg1 (p6 / person :name (n6 / name :op1 "Pelin" :op2 "Esmer")) :arg2 (p7 / person :name (n7 / name :op1 "Özcan" :op2 "Alper")))) :op4 (p8 / person :name (n8 / name :op1 "Özcan" :op2 "Alper") :arg0-of (h3 / have-org-role-91 :arg1 (p9 / person :name (n9 / name :op1 "Pelin" :op2 "Esmer")) :arg2 (p10 / person :name (n10 / name :op1 "Tolga" :op2 "Karaçelik")))) :op5 (p11 / person :name (n11 / name :op1 "Pelin" :op2 "Esmer") :arg0-of (h4 / have-org-role-91 :arg1 (p12 / person :name (n12 / name :op1 "Pelin" :op2 "Esmer")) :arg2 (p13 / person :name (n13 / name :op1 "Tolga" :op2 "Karaçelik")))))) :op2 (p14 / person :name (n14 / name :op1 "Özcan" :op2 "Alper") :arg0-of (h5 / have-org-role-91 :arg1 (p15 / person :name (n15 / name :op1 "Pelin" :op2 "Esmer")) :arg2 (p16 / person :name (n16 / name :op1 "Tolga" :op2 "Karaçelik")))) :op3 (p17 / person :name (n17 / name :op1 "Özcan" :op2 "Alper") :arg0-of (h6 / have-org-role-91 :arg1 (p18 / person :name (n18 / name :op1 "Pelin" :op2 "Esmer")) :arg2 (p19 / person :name (n19 / name :op1 "Tolga" :op2 "Karaçelik")))) :op4 (p20 / person :name (n20 / name :op1 "Pelin" :op2 "Esmer") :arg0-of (h7 / have-org-role-91 :arg1 (p21 / person :name (n21 / name :op1 "Pelin" :op2 "Esmer")) :arg2 (p22 / person :name (n22 / name :op1 "Tolga" :op2 "Karaçelik")))) :op5 (p23 / person :name (n23 / name :op1 "Pelin" :op2 "Esmer") :arg0-of (h8 / have-org-role-91 :arg1 (p24 / person :name (n24 / name :op1 "Pelin" :op2 "Esmer")) :arg2 (p25 / person :name (n25 / name :op1 "Tolga" :op2 "Karaçelik")))))) :arg1 (' / '' :arg1 (f2 / filmmakers :quant (m / more-than :op1 400))) :mod (a3 / also))
(s / suppress-01 :polarity - :mode (i / imperative) :arg0 (w / we) :arg1 (t / thing :arg1-of (f / feel-01) :poss (y / you)) :time (e / ever))
(c / contrast-01 :arg1 (r / result-01 :mod (t / this)) :arg2 (s / set-up-03 :arg1 (t2 / thing :arg1-of (e / expect-01 :arg0 (m / market))) :arg2 (l / level :arg1-of (h / high-02 :degree (m2 / most))) :time (s2 / since :op1 (d / date-entity :year 2015 :month 6))))
(n / notice-01 :arg0 (i / i) :arg1 (t / that) :arg1-of (n2 / need-01))
(a / and :op1 (w / wound-01 :arg1 (c / civilian :mod (c2 / country :name (n / name :op1 "N-A")))) :op2 (s / say-01 :arg0 (p / police)))
(c / contrast-01 :arg2 (i / increase-01 :arg1 (i2 / increase-01 :time (d / date-entity :year (N / N-A))) :location (c2 / child :arg0-of (h / have-rel-role-91 :arg1 (c3 / child) :arg2 (c4 / child))) :time (d2 / date-entity :year (N2 / N-A))))
(c / contrast-01 :arg1 (t / tuesday :arg1 (r / rate-entity-91 :arg1 (d / day :quant 317.000) :arg2 (t2 / temporal-quantity :quant (N / N-A) :unit (d2 / day))) :time (t3 / today) :arg1-of (c2 / compare-01 :arg2 (i / increase-01 :arg1 (n / note-01 :arg1 (r2 / rate-01)) :degree (s / slight)))) :arg2 (b / be-located-at-91 :arg1 (f / figure) :arg2 (b2 / behind :op1 (v / value-interval :op1 317.000 :op2 283.000)) :mod (s2 / still) :arg1-of (c3 / cause-01 :arg0 (i2 / increase-01 :arg1 (t4 / thing :arg2-of (r3 / rate-01)) :mod (s3 / slight)))))
(m / multi-sentence :snt1 (w / win-01 :arg0 (i / initiative :name (n / name :op1 (i2 / ikincide))) :arg1 (p / prelude :mod (i3 / ikincide))) :snt2 (b / be-located-at-91 :arg1 (a / and :op1 (p2 / person :name (n2 / name :op1 "James" :op2 "McCann")) :op2 (p3 / person :name (n3 / name :op1 "Anthony" :op2 "Gose"))) :arg2 (t / thing :arg1-of (i4 / involve-01 :arg2 (t2 / thing :arg1-of (i5 / involve-01 :arg2 (m2 / middle :quant (3 / 3-0)))))) :location (o / outside)))
(p / possible-01 :arg1 (v / visit-01 :arg0 (l / location :name (n / name :op1 "Schneidertempel") :location (p2 / peninsula :name (n2 / name :op1 "N-A"))) :arg1 (l2 / location :name (n3 / name :op1 "Schneidertempel") :location (p3 / peninsula :name (n4 / name :op1 "N-A")))) :time (d / date-entity :day 31 :month 1 :year (N / N-A)))
(a / arrest-01 :arg0 (p / police :mod (c / country :name (n / name :op1 "N-A"))) :arg1 (m / man :arg0-of (h / hijack-01 :arg1 (m2 / man) :arg1-of (c2 / crash-01 :time (w / weekend)))))
(m / man :mod (g / great) :arg0-of (m2 / man :mod (f / family)))
(s / see-01 :arg0 (f / figure :mod (t / this) :arg0-of (s2 / say-01 :arg1 (g / grow-01 :arg1 (f2 / fastest) :time (s3 / since :op1 (p / product-of :op1 2009 :op2 (m / multiple :op1 1)))))) :arg1 (i / increase-01 :arg1 (i2 / interest-01 :arg2 (i3 / interest-01 :arg2 (i4 / interest-01)))) :time (t2 / time :arg1-of (s4 / same-01)))
(a / and :op1 (o / open-01 :arg1 (s / store :name (n / name :op1 (a2 / aldi)) :mod (t / this)) :time (y / year :mod (n2 / next)) :location (a3 / and :op1 (t2 / talk-02 :arg2 25 :arg1 (s2 / store :quant 25)) :op2 (r / resolution :quant 30))) :op2 (t3 / thing :arg1-of (b / base-02 :arg2 (t4 / thing :arg1-of (a4 / achieve-01 :arg0 (s3 / sell-01)) :arg1-of (b2 / base-02 :arg2 (t5 / thing :arg1-of (a5 / achieve-01 :arg0 (s4 / sell-01))))))))
(g / grow-03 :arg0 (y / you) :arg1 (h / hümanizma :poss (w / we)))
(s / say-01 :arg0 (h / he) :arg1 (t / travelling :arg0 (p / person :mod (c / country :name (n / name :op1 "Serbia"))) :arg1 (p2 / person :mod (c2 / country :name (n2 / name :op1 "Serbia"))) :frequency (o / often)) :location (c3 / court))
(a / and :op1 (i / idmanyurdu :arg0 (t / tosun :name (n / name :op1 (t2 / tosun) :op2 (l / lakes) :op3 (l2 / lakes)) :mod (a2 / another)) :arg1 (c / company :arg0-of (p / provide-01) :mod (a3 / another)) :location (a4 / and :op1 (g / goal) :op2 (f / first) :ord (o / ordinal-entity :value 1))) :op2 (s / score-01 :arg1 (h / he) :arg2 (u / under :op1 (b / between :op1 (t3 / temporal-quantity :quant (N / N-A) :unit (y / year)) :op2 (t4 / temporal-quantity :quant (N2 / N-A) :unit (y2 / year))))) :time (m / meanwhile))
(a / and :op1 (a2 / and :op1 (b / benli?ine :arg1 (p / presence :poss (c / child))) :op2 (r / respect-01 :arg1 (p2 / presence :poss (c2 / child)))) :op2 (r2 / respect-01 :polarity - :arg0 (a3 / and) :arg1 (m / mechanism :poss (c3 / child))) :op3 (b2 / become-01 :arg1 (a4 / and) :arg2 (m2 / mechanism :mod (d / defend-01)) :purpose (a5 / and :op1 (p3 / preserve-01 :arg0 (m3 / mechanism) :arg1 (s / sense-01 :arg0 (a6 / anger-01) :arg1 (a7 / anger-01))) :op2 (h / hate-01 :arg0 (a8 / and) :arg1 (s2 / sense-01 :arg0 (a9 / and) :arg1 (a10 / anger-01))))))
(d / define-01 :arg1 (t / thing :arg2-of (n / name-01 :arg1 (t2 / thing :arg2-of (n2 / name-01 :arg1 (t3 / thing :arg2-of (n3 / name-01 :arg1 (t4 / thing :arg1-of (f / flaw-01 :arg1-of (p / possible-01 :polarity -))))))))) :arg2 (i / illness :mod (m / mental)))
(m / multi-sentence :snt1 (r / recommend-01 :mode (i / interrogative) :arg1 (s / surgery-01 :arg2 (s2 / surgery-01 :arg2 (s3 / surgery-01 :arg2 (s4 / surgery-01)) :mod (p / prime)))) :snt2 (r2 / report-01 :arg0 (p2 / person :name (n / name :op1 "Zaman") :mod (f / family))))
(e / enough :polarity - :domain (t / team :mod (q / qualifying)))
(m / multi-sentence :snt1 (e / exemplify-01 :arg0 (t / ticket :mod (e2 / enter-01) :arg1-of (e3 / exhibit-01))) :snt2 (s / see-01 :arg0 (i / it) :arg1 (s2 / store :mod (s3 / small) :arg1-of (c / create-01 :time (e4 / end-01 :arg1 (s4 / space :mod (g / gallery) :mod (8 / 800-square-foot)))))))
(p / participate-01 :arg0 (a / and :op1 (p2 / person :arg0-of (h / have-rel-role-91 :arg1 (p3 / person :name (n / name :op1 "Schmidt" :op2 "Lees")) :arg2 (w / wife))) :op2 (p4 / person :name (n2 / name :op1 "Geoff" :op2 "Schmidt") :arg0-of (h2 / have-rel-role-91 :arg1 (p5 / person) :arg2 (b / brother)))) :arg1 (a2 / and :op1 (s / star :arg1-of (b2 / bright-02)) :op2 (g / grace :mod (a3 / amazing))) :time (c / ceremony :time (c2 / ceremony)) :mod (a4 / also))
(a / attend-01 :arg0 (a2 / and :op1 (p / person :name (n / name :op1 "Schmidt") :arg0-of (h / have-rel-role-91 :arg1 (p2 / person :name (n2 / name :op1 "Liz") :arg0-of (h2 / have-rel-role-91 :arg1 (p3 / person) :arg2 (w / wife))) :arg2 (w2 / wife))) :op2 (p4 / person :name (n3 / name :op1 "Jeff" :op2 "Schmidt") :arg0-of (h3 / have-rel-role-91 :arg1 (p5 / person) :arg2 (b / brother)))) :arg1 (c / ceremony) :mod (a3 / also) :time (a4 / and :op1 (s / storm-02 :arg0 (c2 / company :name (n4 / name :op1 "N-A") :mod (u / university)) :arg1 (s2 / star :arg1-of (b2 / bright-02))) :op2 (a5 / amaze-01 :arg1 (g / grace))))
(n / need-01 :arg0 (w / we) :arg1 (u / use-01 :arg0 (w2 / we) :arg1 (u2 / use-01 :arg1 (f / force-04))))
(a / and :op1 (b / be-located-at-91 :arg1 (c / company) :arg2 (r / round :mod (l / last)) :mod (o / only)) :op2 (b2 / become-01 :arg1 (c2 / company) :arg2 (p / person :name (n / name :op1 "Mikhail" :op2 "Antipov") :arg0-of (m / manage-02 :arg1 (c3 / caught :arg0 (p2 / person) :arg1 (p3 / person :name (n2 / name :op1 "Jan" :op2 "Krzysztof" :op3 "Dudu") :arg0-of (s / seem-01 :arg1 (w / walk-01 :arg0 (p4 / person) :destination (t / title)))))))))
(a / and :op1 (d / decide-01 :arg0 (c / company :arg0-of (w / win-01)) :mod (o / only) :location (r / round :mod (l / last))) :op2 (a2 / and :op1 (b / become-01 :arg1 (c2 / company) :arg2 (p / person :name (n / name :op1 "Mikhail" :op2 "Antipov") :mod (c3 / country :name (n2 / name :op1 "N-A")))) :op2 (m / manage-02 :arg0 (c4 / company) :arg1 (c5 / catch-02 :arg0 (c6 / company) :arg1 (p2 / pole) :arg2 (n3 / name :op1 (d2 / dudu)) :arg1-of (s / seem-01) :arg0-of (w2 / walk-01 :destination (t / title) :arg1-of (s2 / seem-01))))))
(a / and :op1 (d / drive-02 :arg0 (e / expect-01 :arg1 (r / rise-01)) :arg1 (r2 / rise-01) :arg2 (e2 / expect-01 :arg1 (l / leave-15 :arg0 (i / individual :arg0-of (w / weaken-01 :arg1 (s / strategy :poss (s2 / system :mod (f / federal))))) :arg1 (r3 / rate :mod (t / this)) :time (w2 / week :mod (t2 / this))))) :op2 (s3 / say-01 :arg0 (p / person :name (n / name :op1 "John" :op2 "Lonski") :arg0-of (h / have-org-role-91 :arg1 (o / organization :name (n2 / name :op1 "Moody" :op2 "'s" :op3 "Capital" :op4 "Markets" :op5 "Research")) :arg2 (c / chief))) :arg1 (r4 / rise-01)))
(m / multi-sentence :snt1 (t / trigger-01 :arg0 (e / expect-01 :arg1 (r / rise-01 :arg1 (s / strategy :poss (s2 / system :mod (f / federal))))) :arg1 (r2 / rise-01)) :snt2 (s3 / say-01 :arg0 (p / person :name (n / name :op1 "John" :op2 "Lonski") :arg0-of (h / have-org-role-91 :arg1 (o / organization :name (n2 / name :op1 "Moody" :op2 "'s" :op3 "Capital" :op4 "Markets" :op5 "Research")) :arg2 (c / chief) :arg3 (c2 / chief))) :arg1 (r3 / rise-01)))
(s / say-01 :arg0 (t / thing :arg1-of (e / expect-01 :arg0 (a / and :op1 (p / person :arg0-of (d / determine-01 :arg1 (s2 / strategy :poss (s3 / system :mod (f / federal)))) :arg0-of (d2 / determine-01 :arg1 (s4 / strategy :poss (s5 / system :mod (f2 / federal))))) :op2 (l / leave-15 :arg0 (p2 / person) :arg1 (p3 / person :name (n / name :op1 "John" :op2 "Lonskya") :arg0-of (h / have-org-role-91 :arg1 (o / organization :name (n2 / name :op1 "Moody" :op2 "'" :op3 "s" :op4 "of" :op5 "Capital" :op6 "Markets" :op7 "Research")) :arg2 (c / chief))))))) :arg1 (t2 / takeoff))
(a / and :op1 (a2 / ask-02 :arg0 (p / person :arg0-of (h / have-rel-role-91 :arg2 (r / relative))) :arg1 (h2 / help-01)) :op2 (r2 / raise-01 :arg0 (p2 / person :arg0-of (r3 / reside-01) :source (v / village :mod (n / nearby))) :arg1 (p3 / person :quant (a3 / about :op1 30 :mod (o / only)))) :time (i / immediate))
(a / and :op1 (p / person :arg0-of (h / have-rel-role-91 :arg1 (i / i) :arg2 (g / girlfriend))) :op2 (p2 / person :arg0-of (h2 / have-rel-role-91 :arg1 (i2 / i) :arg2 (m / mother))) :op3 (p3 / person :quant 2 :arg0-of (h3 / have-rel-role-91 :arg1 (i3 / i) :arg2 (c / child))) :op4 (f / family :quant 2 :arg0-of (h4 / have-rel-role-91 :arg1 (i4 / i) :arg2 (c2 / child))) :op5 (f2 / family :quant 2 :arg0-of (h5 / have-rel-role-91 :arg1 (i5 / i) :arg2 (c3 / child))))
(a / and :op1 (r / recommend-01 :arg0 (o / organization :name (n / name :op1 "AMA")) :arg1 (e / engage-01 :polarity - :arg0 (o2 / organization) :arg2 (s / sport :mod (t / this))) :time (n2 / now)) :op2 (g / good :degree (m / more) :domain (b / ban-01 :arg1 (i / it) :manner (a2 / altogether))))
(r / recommend-01 :arg0 (o / organization :name (n / name :op1 "AMA")) :arg1 (d / do-02 :polarity - :arg0 (o2 / organization) :arg1 (o3 / or :op1 (s / sport :mod (t / this)) :op2 (g / good :degree (m / more))) :arg1-of (c / cause-01 :arg0 (v / view-01 :arg0 (o4 / organization) :mod (a / altogether)))) :time (n2 / now))
(' / '' :arg1 ('2 / '' :mod (s / storm)) :time (e / end-01 :arg1 (w / week :mod (t / this))) :time (e2 / end-01 :arg1 (r / right-05 :arg1 (t2 / they) :arg2 (h / host-01 :arg0 (t3 / they) :arg1 (r2 / right-05 :arg1 (p / person :name (n / name :op1 "North" :op2 "Queensland" :op3 "Cubas") :mod (e3 / either)) :arg2 (h2 / host-01 :arg0 (p2 / person) :arg1 (r3 / right-05 :arg1 (p3 / person) :arg2 (h3 / host-01 :arg0 (p4 / person) :arg1 (r4 / right-05 :arg1 (p5 / person) :arg2 (h4 / host-01 :arg0 (p6 / person) :arg1 (r5 / right-05 :arg1 (p7 / person) :arg2 (h5 / host-01 :arg0 (p8 / person) :arg1 (r6 / right-05 :arg1 (p9 / person) :arg2 (h6 / host-01 :arg0 (p10 / person) :arg1 (a / and :op1 (p11 / person :mod (e4 / either)) :op2 (p12 / person :arg0-of ('3 / '')) :op3 (p13 / person :arg0-of ('4 / '')) :mod (e5 / either)) :time (n2 / night :mod (n3 / next)) :location (a2 / amusement-park :name (n4 / name :op1 "Disney") :location (g / ground :name (n5 / name :op1 (s2 / stadium)) :location (g2 / ground :name (n6 / name :op1 (s3 / stadium))))) :time (m / morning :mod (n7 / next))))))))))))))))
(m / multi-sentence :snt1 (c / cause-01 :arg0 (w / win-01 :arg0 (t / they) :arg1 (r / right-05 :arg1 (t2 / they) :arg2 (h / host-01 :arg0 (t3 / they) :arg1 (o / or :op1 (l / location :name (n / name :op1 "North" :op2 "Queensland") :mod (e / either)) :op2 (s / sharks :name (n2 / name :op1 (' / '')))) :mod (e2 / either))) :time (e3 / end-01 :arg1 (w2 / week :mod (t4 / this))))) :snt2 (s2 / sell-01 :arg1 (t5 / ticket) :time (m2 / morning :mod (n3 / next)) :location (p / park :mod (s3 / stadium))))
(e / employ-01 :arg1 (j / job :quant (m / most)) :manner (e2 / employ-01 :polarity -))
(t / time :arg1-of (s / same-01) :time (t2 / time :arg1-of (s2 / same-01)))
(i / improve-01 :arg1 (s / situation) :time (a / after :op1 (d / downgrade :arg0 (o / organization :name (n / name :op1 "Central" :op2 "Bank")) :arg1 (r / rate :mod (i2 / interest)))))
(s / say-01 :arg0 (f / figure :arg1-of (s2 / same-01 :arg2 (f2 / figure :mod (n / number :mod (s3 / same)) :location (c / country)))) :arg1 (t / think-01 :arg0 (p / person :arg1-of (i / include-91 :arg2 (p2 / person :arg0-of (h / have-org-role-91 :arg2 (g / general))) :arg3 (p3 / percentage-entity :value (N / N-A)))) :arg1 (p4 / person :arg0-of (h2 / have-org-role-91 :arg2 (c2 / commander)) :arg0-of (h3 / have-org-role-91 :arg2 (c3 / commander)) :arg0-of (h4 / have-org-role-91 :arg2 (c4 / commander)) :arg0-of (h5 / have-org-role-91 :arg2 (c5 / commander)) :arg0-of (h6 / have-org-role-91 :arg2 (c6 / commander)) :arg0-of (h7 / have-org-role-91 :arg2 (c7 / commander)) :arg0-of (h8 / have-org-role-91 :arg2 (c8 / commander)) :arg0-of (h9 / have-org-role-91 :arg2 (c9 / commander))) :time (w / week :mod (l / last)) :location (c10 / country)))
(m / multi-sentence :snt1 (r / recommend-01 :arg1 (e / expensive :polarity - :domain (c / condition :poss (h / house-01)))) :snt2 (i / include-01 :arg1 (t / thing :arg2-of (p / price-01 :arg1 (' / '' :name (n / name :op1 (f / finishing))))) :arg2 (r2 / rate-entity-91 :arg1 30 :arg2 (t2 / temporal-quantity :quant (N / N-A) :unit (s / second)))))
(a / ask-02 :arg1 (c / check-out-05 :arg0 (p / person) :arg1 (l / law :topic (p2 / protect-01 :arg1 (i / information :topic (p3 / protect-01 :arg1 (i2 / information :topic (c2 / child :arg0-of (h / have-rel-role-91 :arg1 (c3 / child) :arg2 (c4 / child))))))))) :arg2 (b / bible))
(h / have-03 :arg0 (w / we) :arg1 (a / ambition) :concession-of (d / dreamers :polarity - :arg0 (w2 / we)))
(a / allow-01 :polarity - :arg0 (t / this) :arg1 (a2 / and :op1 (e / end-01 :arg1 (i / idea :mod (a3 / any) :arg1-of (m / malmö :arg2 (r / return-01 :arg1 (i2 / idea))))) :op2 (d / dispatch-01 :arg0 (t2 / this) :arg1 (p / person :name (n / name :op1 "Wieland")) :arg2 (r2 / range :mod (c / close)) :mod (o / only)) :op3 (a4 / allow-01 :polarity - :arg0 (p2 / person) :arg1 (i3 / increase-01 :arg0 (p3 / person :name (n2 / name :op1 "David" :op2 "Luiz")) :arg1 (t3 / trouble-01 :mod (f / final)) :time (b / before :op1 (g / goal :mod (e2 / end-01 :arg1 (g2 / game))))))))
(p / point-out-02 :arg0 (w / we) :arg1 (t / thing :arg2-of (n / name-01 :arg1 (y / you)) :arg1-of (s / send-01 :arg0 (y2 / you) :arg2 (i / it) :condition (a / ask-02 :polarity - :arg0 (w2 / we) :arg1 (s2 / specify-01 :polarity - :arg0 (w3 / we) :arg1 (i2 / it) :location (-3 / -rrb- :quant (a2 / all)))) :arg2 (w4 / we))) :arg2 (p2 / publish :polarity - :arg0 (w5 / we) :arg1 (n2 / number :mod (p3 / phone) :poss (y3 / you)) :time (e / ever)))
(r / rate-entity-91 :arg1 (p / percentage-entity :value (N / N-A)) :arg2 (t / temporal-quantity :quant (N2 / N-A) :unit (y / year)) :time (e / end-01 :arg1 (d / date-entity :month 8 :day 31)) :arg1-of (e2 / end-01 :time (d2 / date-entity :month 8 :day 31)))
(r / rate-entity-91 :arg1 (p / percentage-entity :value (N / N-A)) :arg2 (t / temporal-quantity :quant (N2 / N-A) :unit (y / year)) :time (e / end-01 :arg1 (d / date-entity :month (A / Aug.) :day 31)) :arg1-of (e2 / end-01 :time (d2 / date-entity :month (A2 / Aug.) :day 31)))
(a / and :op1 (d / die-01 :arg1 (p / person :quant (a2 / at-least :op1 12))) :op2 (d2 / die-01 :arg1 (p2 / person :quant (a3 / at-least :op1 12))) :location (s / state :name (n / name :op1 "Utah")))
(s / say-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (h2 / hometown :poss (p2 / person)) :arg2 (c / chief))) :arg1 (p3 / possible-01 :arg1 (d / display-01 :arg0 (p4 / person :arg0-of (h3 / have-org-role-91 :arg2 (c2 / chief :arg1-of (h4 / high-02 :degree (m / more))))) :arg1 (e / expand-01))))
(- / -lrb- :arg0 (-2 / -lrb- :arg1 (p / person :arg0-of (h / have-rel-role-91 :arg1 (p2 / person :arg0-of (h2 / have-rel-role-91 :arg1 (c / city :name (n / name :op1 "Redmond")) :arg2 (s / son))) :arg2 (s2 / son))) :arg2 (-3 / -rrb- :mod (r / right))) :time (a / after :op1 (n2 / now) :quant (s3 / several :op1 (t / temporal-quantity :quant (N / N-A) :unit (y / year)) :mod (d / difficult))))
(a / and :op1 (i / interesting :degree (m / more :degree (m2 / much)) :domain (i2 / it)) :op2 (c / comment-01 :arg0 (i3 / it) :arg3 (a2 / apply-01 :arg0 (l / law) :arg2 (p / person :arg0-of (h / have-org-role-91 :arg2 (c2 / correspondent))))))
(i / interest-01 :arg1 (i2 / it) :arg2 (s / show-01 :arg1 (l / law :poss (l2 / law))) :degree (m / more))
(s / say-01 :arg0 (h / he) :arg1 (w / wound-01 :arg1 (a / and :op1 (p / person :arg0-of (h2 / have-org-role-91 :arg1 (p2 / police) :arg2 (o / officer))) :op2 (c / civilian :quant 5))))
(b / believe-01 :arg0 (i / i) :arg1 (e / enough :polarity - :domain (e2 / evidence-01 :arg1 (p / penalize-01 :arg2 (d / die-01)))) :arg1-of (f / firm-03))
(s / say-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg2 (p2 / person :arg1-of (e / expert-01)))) :arg1 (s2 / show-01 :arg0 (s3 / sell-01 :arg1 (s4 / sell-01 :medium (o / online))) :arg1 (i / increase-01 :arg1 (s5 / sell-01 :medium (o2 / online))) :time (n / now) :time (a / after :op1 (s6 / show-01 :arg0 (d / data :time (l / late :degree (m / most))) :arg1 (p3 / percentage-entity :value (N / N-A) :mod (o3 / only))) :time (n2 / now))))
(g / give-01 :mode (i / imperative) :arg0 (y / you) :arg1 (s / space) :arg2 (p / person))
(c / call-01 :arg0 (p / person :name (n / name :op1 "Sergei" :op2 "Lavrov") :arg0-of (h / have-org-role-91 :arg1 (p2 / person :name (n2 / name :op1 "John" :op2 "Kerry") :arg0-of (h2 / have-org-role-91 :arg1 (s / state) :arg2 (s2 / secretary :mod (s3 / state)))) :arg2 (s4 / secretary :mod (s5 / state)))) :arg1 (p3 / person :name (n3 / name :op1 "Sergei" :op2 "Lavrov") :arg0-of (h3 / have-org-role-91 :arg1 (c2 / country) :arg2 (e / empress))) :arg2 (d / discuss-01 :arg0 (p4 / person) :arg1 (s6 / situation) :location (c3 / country :name (n4 / name :op1 "Syria"))))
(c / contrast-01 :arg2 (a / assume-02 :arg1 (c2 / contact-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (b / board :poss (o / organization :name (n / name :op1 "Metcash"))) :arg2 (m / member))) :arg1 (p2 / person :name (n2 / name :op1 "Douglaston")) :time (w / week :mod (l / last)))))
(a / and :op1 (m / miss-02 :arg0 (p / person :arg0-of (' / '')) :arg1 (c / chance-02 :arg1 (c2 / cut-02 :arg1 (g / gap :prep-with (p2 / person :arg0-of (h / have-org-role-91 :arg1 (o / organization :name (n / name :op1 "Houston" :op2 "Astros")) :arg2 ('2 / ''))))))) :op2 (t / take-01 :arg0 (p3 / person) :arg1 (p4 / place :ord (o2 / ordinal-entity :value 2)) :location (p5 / playoffs) :time (a2 / after :op1 (w / war :name (n2 / name :op1 "N-A")))))
(c / confident-01 :arg1 (p / person :mod (c2 / communism)) :arg2 (t / temporal-quantity :quant (N / N-A) :unit (h / hour) :time (b / before :op1 (o / open-01 :arg1 (s / station :mod (p2 / polling) :location (b2 / boxes :mod (b3 / ballot))) :arg1-of (p3 / possible-01)))))
(b / buy-01 :mode (i / imperative) :arg0 (y / you) :arg1 (m / meals) :arg2 (o / organization :name (n / name :op1 "LAX-C" :op2 "BBQ" :op3 "Express")) :condition (s / shop-01 :arg0 (y2 / you)))
FAILED_TO_PARSE#Couldn't convert to full AMR graph.
(c / complain-01 :arg0 (i / i) :arg2 (s / she))
(a / and :op1 (s / suppose-02 :arg1 (t / this) :arg2 (s2 / season :arg1-of (h / high-02))) :op2 (w / want-01 :polarity - :arg0 (y / you) :arg1 (d / do-02 :arg0 (y2 / you) :arg1 (t2 / thing :mod (o / other)))))
(a / and :op1 (a2 / allow-01 :arg1 (a3 / attend-01 :arg0 (j / journalist) :arg1 (e / execute-01 :location (c / country :name (n / name :op1 "America"))))) :op2 (a4 / allow-01 :arg1 (t / thing :arg2-of (r / result-01 :arg1 (t2 / thing :arg2-of (r2 / result-01 :arg1 (e2 / event :name (n2 / name :op1 "N-A"))))))) :op3 (d / decide-01 :arg0 (p / person :arg0-of (w / wish-01 :arg1 (e3 / event :name (n3 / name :op1 "N-A")))) :arg1 (s / select-01 :arg1 (p2 / person))))
(p / play-02 :arg0 (w / woman) :arg1 (r / role :mod (l / large) :topic (p2 / process-02 :arg1 (d / decision-making))))
(r / report)
(s / say-01 :arg0 (y / you) :arg1 (c / contrast-01 :arg1 (a / approach-02 :arg0 (y2 / you) :arg1 (p / party :mod (o / other) :arg2-of (i / include-01 :arg1 (s2 / sirizu :mod (s3 / sirizu)))) :time (c2 / case-03 :arg1 (w / win-01))) :arg2 (s4 / say-01 :arg0 (y3 / you) :arg1 (w2 / win-01 :arg0 (w3 / win-01 :arg1 (w4 / win-01)) :arg2 (e / elect-01)))))
(a / and :op1 (s / support-01 :arg0 (i / it) :arg1 (c / converse-01)) :op2 (h / help-01 :arg0 (i2 / it) :arg1 (y / you) :arg2 (f / find-01 :arg0 (y2 / you) :arg1 (a2 / and :op1 (p / person :arg1-of (l / like-01 :arg0 (y3 / you) :arg1-of (l2 / like-01 :polarity - :arg0 (y4 / you)))) :op2 (p2 / person :polarity - :arg0-of (b / bother-01 :arg1 (y5 / you) :mod (e / even))))) :op3 (h2 / handing :arg0 (y6 / you) :arg1 (e2 / extinguishers :name (n / name :op1 (f2 / fire))))))
(a / and :op1 (a2 / and :op1 (s / support-01 :arg0 (t / this) :arg1 (c / converse-01)) :op2 (h / help-01 :arg0 (t2 / this) :arg1 (f / find-01 :arg0 (y / you) :arg1 (p / person :arg1-of (l / like-01 :arg0 (y2 / you)))))) :op2 (c2 / contrast-01 :arg1 (f2 / find-01 :arg0 (t3 / this) :arg1 (p2 / person :arg1-of (l2 / like-01 :arg0 (y3 / you)))) :arg2 (a3 / and :op1 (t4 / that :polarity - :arg1-of (t5 / talk-01 :arg0 (y4 / you) :mod (e / even) :concession (e2 / even-if :op1 (b / burn-01 :arg0 (y5 / you) :arg1 (e3 / eyelashes)) :concession (e4 / even-if :op1 (b2 / burn-01 :arg0 (y6 / you) :arg1 (e5 / eyelashes))) :concession (e6 / even-if :op1 (b3 / burn-01 :arg0 (y7 / you) :arg1 (e7 / eyelashes)))))))))
(d / deal-01 :arg0 (d2 / discuss-01) :arg2 (e / experience-01 :arg0 (a / and :op1 (g / government-organization :arg0-of (g2 / govern-01 :arg1 (c / country :name (n / name :op1 "Russia")))) :op2 (g3 / government-organization :arg0-of (g4 / govern-01 :arg1 (c2 / country :name (n2 / name :op1 "Belarus"))) :arg1-of (l / local-02))) :arg1 (a2 / and :op1 (g5 / government-organization :arg0-of (g6 / govern-01 :arg1 (c3 / country))) :op2 (g7 / government-organization :arg0-of (g8 / govern-01 :arg1 (c4 / country)) :arg1-of (l2 / local-02)))) :arg1-of (c5 / cause-01 :arg0 (a3 / and :op1 (g9 / guarantee-01 :arg1 (p / policy :mod (i / industry))) :op2 (g10 / guarantee-01 :arg1 (a4 / and :op1 (g11 / guarantee-01 :arg1 (s / state :poss (c6 / country))) :op2 (p2 / program :poss (c7 / country)))))))
(i / important :degree (s / so) :domain (s2 / stay-01 :arg1 (i2 / it) :time (n / now)))
(i / important :degree (s / so) :domain (s2 / stay-01 :arg1 (i2 / it) :time (n / now)))
(b / believe-01 :arg0 (i / i) :arg1 (r / reference-04 :arg1 (t / try-01 :arg0 (p / person :name (n / name :op1 "Khrushchev")) :arg1 (s / sign-01 :arg0 (p2 / person) :arg1 (s2 / something :arg1-of (t2 / try-01 :arg0 (p3 / person))))) :manner (w / way :polarity - :arg1-of (s3 / suitable-04 :arg2 (p4 / picture-01 :arg1 (h / hostel :mod (h2 / human)))) :manner (w2 / way))))
(a / announce-01 :arg0 (a2 / attempt-01 :arg1 (d / deal-01 :arg0 (m / man) :arg2 (p / problem :topic (c / campaign-01 :arg0 (m2 / man) :arg1 (a3 / against :op1 (c2 / campaign-01 :arg0 (m3 / man) :arg1 (a4 / against :op1 (c3 / campaign-01 :arg0 (m4 / man) :arg1 (a5 / against :op1 (c4 / campaign-01 :arg0 (m5 / man) :arg1 (a6 / against :op1 (c5 / campaign-01 :arg0 (m6 / man) :arg1 (a7 / against :op1 (c6 / campaign-01 :arg0 (m7 / man) :arg1 (a8 / against :op1 (c7 / campaign-01 :arg0 (m8 / man) :arg1 (a9 / against :op1 (c8 / campaign-01 :arg0 (m9 / man) :arg1 (a10 / against :op1 (c9 / campaign-01 :arg0 (m10 / man) :arg1 (a11 / against :op1 (c10 / campaign-01 :arg0 (m11 / man) :arg1 (a12 / against :op1 (c11 / campaign-01 :arg0 (m12 / man) :arg1 (a13 / against :op1 (c12 / campaign-01 :arg0 (m13 / man) :arg1 (a14 / against :op1 (c13 / campaign-01 :arg0 (m14 / man) :arg1 (a15 / against :op1 (c14 / campaign-01 :arg0 (m15 / man) :arg1 (a16 / against :op1 (c15 / campaign-01 :arg0 (m16 / man) :arg1 (a17 / against :op1 (c16 / campaign-01 :arg0 (m17 / man) :arg1 (a18 / against :op1 (c17 / campaign-01 :arg0 (m18 / man) :arg1 (a19 / against :op1 (c18 / campaign-01 :arg0 (m19 / man) :arg1 (a20 / against :op1 (c19 / campaign-01 :arg0 (m20 / man) :arg1 (a21 / against :op1 (c20 / campaign-01 :arg0 (m21 / man) :arg1 (a22 / against :op1 (c21 / campaign-01 :arg0 (m22 / man) :arg1 (a23 / against :op1 (c22 / campaign-01 :arg0 (m23 / man) :arg1 (a24 / against :op1 (c23 / campaign-01 :arg0 (m24 / man) :arg1 (a25 / against :op1 (c24 / campaign-01 :arg0 (m25 / man) :arg1 (a26 / against :op1 (c25 / campaign-01 :arg0 (m26 / man) :arg1 (a27 / against :op1 (c26 / campaign-01 :arg0 (m27 / man) :arg1 (a28 / against :op1 (c27 / campaign-01 :arg0 (m28 / man) :arg1 (a29 / against :op1 (c28 / campaign-01 :arg0 (m29 / man) :arg1 (a30 / against :op1 (c29 / campaign-01 :arg0 (m30 / man) :arg1 (a31 / against :op1 (c30 / campaign-01 :arg0 (m31 / man) :arg1 (a32 / against :op1 (c31 / campaign-01 :arg0 (m32 / man) :arg1 (a33 / against :op1 (c32 / campaign-01 :arg0 (m33 / man) :arg1 (a34 / against :op1 (c33 / campaign-01 :arg0 (m34 / man) :arg1 (a35 / against :op1 (c34 / campaign-01 :arg0 (m35 / man) :arg1 (a36 / against :op1 (c35 / campaign-01 :arg0 (m36 / man) :arg1 (a37 / against :op1 (c36 / campaign-01 :arg0 (m37 / man))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(d / decrease-01 :arg1 (m / moods :quant (b / between :op1 2014 :op2 2015)) :time (a / after :op1 (m2 / moods :arg1 (e / end-01 :arg1 (p / product-of :op1 2014 :op2 2015)))))
(a / admit-01 :arg0 (p / person :arg0-of (h / head-01 :arg1 (o / organization :name (n / name :op1 "Barcelona"))) :arg0-of (h2 / have-org-role-91 :arg1 (p2 / person :name (n2 / name :op1 "Luis" :op2 "Enrique") :arg0-of (h3 / have-org-role-91 :arg1 (o2 / organization) :arg3 (c / coach))) :arg2 (c2 / coach))) :arg1 (r / return-01 :arg1 (h4 / he) :arg4 (c3 / country :name (n3 / name :op1 "Rome")) :purpose (m / match-03 :arg0 (h5 / he) :arg1 (r2 / round :ord (o3 / ordinal-entity :value 1) :part-of (l / league :mod (c4 / champions) :arg1-of (f / feel-01 :arg0 (o4 / organization :name (n4 / name :op1 "Roma" :op2 "Champions")) :arg1-of (s / special-02)))))))
(c / call-01 :arg0 (p / person :arg0-of (h / head-01 :arg1 (o / organization :name (n / name :op1 "UN"))) :arg0-of (h2 / have-org-role-91 :arg1 (o2 / organization) :arg3 (l / lead-02 :arg0 (p2 / person)))) :arg1 (p3 / person :arg0-of (p4 / participate-01) :arg2-of (i / include-01 :arg1 (a / and :op1 (d / divide-02 :arg1 (o3 / organization :name (n2 / name :op1 "UN" :op2 "Security" :op3 "Council"))) :op2 (s / support-01 :arg1 (n3 / negotiate-01 :mod (i2 / inclusive)) :purpose (f / find-01 :arg1 (d2 / decide-01 :mod (p5 / politics))))))) :mod (a2 / again))
(s / say-01 :arg1 (h / help-01 :arg0 (t / they) :arg1 (a / attend-02 :arg0 (t2 / they) :arg1 (s2 / sell-01 :arg1 (e / equipment :mod (c / child :mod (l / law :polarity -))))) :arg2 (w / we) :manner (i / incredible)) :arg2 (p / person :name (n / name :op1 "Tom" :op2 "Davis")))
(m / multi-sentence :snt1 (c / consider-01 :arg0 (p / person :arg1-of (e / expert-01)) :arg1 (p2 / possible-01 :arg1 (b / ban-01 :arg0 (p3 / person :arg0-of (h / have-org-role-91 :arg2 (p4 / person :arg1-of (e2 / expert-01)))) :arg1 (p5 / possible-01 :arg1 (l / live-01 :arg0 (p6 / person :quant 1) :location (f / facility :name (n / name :op1 "N-A"))))))) :snt2 (a / and :op1 (s / seem-01 :arg1 (p7 / possible-01 :arg1 (l2 / live-01 :arg0 (p8 / person :quant 1) :location (f2 / facility :name (n2 / name :op1 "N-A"))))) :op2 (p9 / possible-01 :polarity - :arg1 (l3 / live-01 :arg0 (p10 / person :arg0-of (v / visit-01)) :location (f3 / facility :name (n3 / name :op1 "N-A"))))))
(i / it :mod (a / all) :topic (i2 / i))
(a / and :op1 (p / person :quant 10 :arg0-of (h / have-org-role-91 :arg1 (c / crew) :arg2 (m / member))) :op2 (p2 / passenger :quant 72))
(b / be-located-at-91 :arg1 (a / and :op1 (p / person :quant 10 :arg0-of (h / have-org-role-91 :arg1 (c / crew) :arg2 (m / member))) :op2 (p2 / passenger :quant 72)) :arg2 (b2 / board))
(m / multi-sentence :snt1 (t / think-01 :arg0 (t2 / they) :arg1 (a / and :op1 (r / realistic-03 :arg1 (a2 / and :op1 (r2 / realistic-03 :arg1 (c / corporation) :degree (m2 / more)) :op2 (c2 / clever :arg1 (c3 / corporation))) :degree (m3 / more))) :arg2 (a3 / and :op1 (i / inform-01 :arg0 (t3 / they) :arg1 (h / home :poss (s / she)) :arg2 (c4 / colors :arg1-of (b / bright-02))) :op2 (o / occupy-01 :arg0 (t4 / they) :arg1 (h2 / home :poss (s2 / she)) :prep-with (c5 / colors :arg1-of (b2 / bright-02))))) :snt2 (o2 / occupy-01 :arg1 (' / '') :degree (m4 / more)))
(a / and :op1 (p / possible-01 :arg1 (c / cope-01 :arg0 (p2 / person :mod (e / economy)) :arg1 (r / rate :arg1-of (h / high-02 :degree (m / more))))) :op2 (a2 / and :op1 (n / need-01 :arg0 (p3 / person) :arg1 (r2 / rate :arg1-of (h2 / high-02 :degree (m2 / more)))) :op2 (n2 / need-01 :arg0 (p4 / person) :arg1 (m3 / market :mod (l / labor :mod (s / shrinking)))) :op3 (s2 / say-01 :arg0 (p5 / person) :arg1 (p6 / person :name (n3 / name :op1 "Ian" :op2 "Scheferdson") :arg0-of (h3 / have-org-role-91 :arg1 (o / organization :name (n4 / name :op1 "Pantheon" :op2 "Macroeconomics")) :arg2 (c2 / chief))))))
(c / cup)
(b / be-located-at-91 :arg1 (p / person :arg0-of (p2 / play-01 :arg1 (t / tennis)) :mod (c / czech)) :arg2 (h / hospital) :location (l / location :name (n / name :op1 "Brno")) :time (n2 / now))
(s / say-01 :arg0 (h / he) :arg1 (i / important :domain (a / and :op1 (f / find-01 :arg0 (r / radio :quant 3) :arg1 (a2 / and :op1 (f2 / find-01 :arg1 (m / music :mod (n / new))) :op2 (p / promote-02 :arg1 (p2 / product :mod (n2 / new))))) :op2 (p3 / promote-02 :arg0 (r2 / radio) :arg1 (p4 / product :mod (n3 / new))))) :mod (a3 / also))
(h / have-concession-91 :arg1 (t / try-01 :arg0 (c / company) :arg1 (c2 / cope-01 :arg0 (c3 / company) :arg1 (c4 / collapse-01 :arg1 (p / price-01 :arg1 (m / material :mod (r / raw)))))) :arg2 (a / and :op1 (a2 / affect-01 :arg0 (d / decline-01 :arg1 (e / economy :poss (c5 / country :name (n / name :op1 "China")))) :arg1 (d2 / demand-01)) :op2 (c6 / create-01 :arg0 (d3 / decline-01) :arg1 (c7 / chaos) :location (m2 / market :mod (g / globe)))))
(t / tell-01 :arg0 (p / person :name (n / name :op1 "Lamb")) :arg1 (n2 / need-01 :arg0 (p2 / police) :arg1 (s / send-01 :arg0 (p3 / police) :arg1 (p4 / person) :arg2 (h / home :poss (p5 / person)))) :arg2 (p6 / person :arg0-of (h2 / have-org-role-91 :arg1 (p7 / police))))
(s / send-01 :arg0 (y / you) :arg1 (m / message) :arg2 (p / person :quant (+ / +44)) :condition (o / outside :op1 (c / country :name (n / name :op1 "Great" :op2 "Britain"))))
(h / have-concession-91 :arg1 (a / and :op1 (e / empire :arg1 (a2 / and :op1 (e2 / empire :name (n / name :op1 (k / khanate))) :op2 (b / byzantium) :op3 (h2 / hordes :mod (g / gold)))) :arg2 (i / it)))
(s / say-01 :arg0 (b / bi-bi-si :mod (' / '')) :arg1 (l / leave-11 :arg0 (r / refugee :quant (s2 / some)) :arg1 (b2 / border-01 :arg1 (r2 / refugee) :arg2 (a / and :op1 (l2 / location :name (n / name :op1 "Belgrade")) :op2 (b3 / border-01 :arg2 (c / country :name (n2 / name :op1 "Croatia"))))) :location (a2 / and :op1 (t / talk-02 :arg2 (a3 / and :op1 (l3 / location :name (n3 / name :op1 "Belgrade")) :op2 (b4 / border-01 :arg2 (c2 / country)))))))
(a / and :op1 (a2 / approach-02 :arg0 (p / person :arg0-of (l / lead-02 :arg1 (p2 / promise-01 :arg0 (p3 / person)))) :arg1 (p4 / policy :topic (a3 / attract-01 :arg0 (p5 / person) :arg1 (r / resource :mod (c / collective)) :purpose (g / gain-02 :arg0 (p6 / person) :arg1 (i / idea :topic (a4 / and :op1 (p7 / person :name (n / name :op1 "Cameron")) :op2 (p8 / person :arg0-of (h / have-org-role-91 :arg2 (m / mr.))))))))) :op2 (r2 / receive-01 :arg0 (p9 / person) :arg1 (o / offer-01 :quant (m2 / more-than :op1 30))))
(r / report)
(s / show-01 :arg0 (c / candidate :quant 6 :arg1-of (t / test-01)) :arg1 (r / result-01 :arg1 (a / and :op1 (p / person :name (n / name :op1 "Biden")) :op2 (p2 / person :name (n2 / name :op1 "Carson")) :op3 (p3 / person :name (n3 / name :op1 "Bush"))) :arg2 (g / good :degree (m / most))))
FAILED_TO_PARSE#Couldn't convert to full AMR graph.
(s / say-01 :arg0 (p / policy) :arg1 (s2 / support-01 :arg0 (p2 / policy :location (c / city :name (n / name :op1 "Kiev"))) :arg1 (d / dialogue-01) :mod (a / any)) :time (t / time :arg1-of (s3 / same-01)))
(a / and :op1 (s / sick-05 :arg1 (p / person :arg0-of (r / read-01 :arg1 (w / we)) :quant (s2 / some))) :op2 (f / fall-07 :arg1 (p2 / person) :arg2 (c / cannabis)) :op3 (w2 / want-01 :polarity - :arg0 (p3 / person) :arg1 (l / leave-11 :arg0 (p4 / person))))
(a / and :op1 (o / offer-01 :arg0 (w / we) :arg1 (c / concept)) :op2 (p / propose-01 :arg0 (w2 / we) :arg1 (c2 / change-01 :arg0 (w3 / we) :arg1 (l / legislation))) :op3 (q / quote-01 :arg0 (o2 / organization :name (n / name :op1 "TASS")) :arg2 (p2 / person :name (n2 / name :op1 "Evtukhov") :arg0-of (h / have-org-role-91 :arg2 (m / mr.)))) :condition (a2 / approve-01 :arg1 (i / it)))
(a / assure-01 :arg0 (i / it) :arg1 (i2 / i) :arg2 (1 / 1970s :arg1 (i3 / i)) :time (s / struggling :arg0 (s2 / struggle-02 :arg0 (h / he) :arg1 (t / tv :arg0 (h2 / he) :medium (t2 / tv))) :arg1 (a2 / and :op1 (f / far :degree (t3 / too)) :op2 (l / lose-02 :polarity - :arg1 (p / post :poss (h3 / he)) :location (c / cabinet)))))
(c / contrast-01 :arg2 (d / doubt-01 :arg0 (i / i) :arg1 (t / think-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg2 (o / official :mod (p2 / prison)))) :arg1 (a / and :op1 (s / safe-01 :arg1 (s2 / safe-01 :arg1 (p3 / person :mod (s3 / such)))) :op2 (u / understand-01 :arg0 (p4 / person) :arg1 (i2 / identity :poss (p5 / person)))))) :concession (p6 / place :mod (i3 / individual)))
(m / multi-sentence :snt1 (d / difficult :domain (m2 / match-03) :arg1-of (c / cause-01 :arg0 (p / possible-01 :arg1 (h / hold-01 :arg0 (y / you) :arg1 (b / ball))))) :snt2 (l / lead-01 :arg0 (w / website :poss (o / organization :name (n / name :op1 "UEFA")) :mod (o2 / official)) :arg1 (p2 / person :name (n2 / name :op1 "Benitez"))))
(a / arrest-01 :arg1 (p / person :name (n / name :op1 "Mikhail" :op2 "Khodorkovsky") :mod (r / rich :degree (m / more)) :location (c / country :name (n2 / name :op1 "Russia"))) :arg2 (t / threaten-01 :arg0 (m2 / man) :arg1 (u / use-01 :arg1 (w / weapon) :location (a2 / airport :mod (s / siberian)))) :li 2003)
(e / explain-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (c / continent :name (n / name :op1 "N-A")) :arg2 (d / diplomat)) :arg1-of (f / friendly-01)) :arg1 (p2 / position-02 :arg0 (a / and :op1 (p3 / person :arg0-of (h2 / have-org-role-91 :arg1 (c2 / country :name (n2 / name :op1 "N-A")) :arg2 (a2 / agenda :mod (s / self-centred)))) :op2 (p4 / person :arg0-of (h3 / have-org-role-91 :arg1 (c3 / country) :arg2 (m / member)) :quant (s2 / some)) :op3 (p5 / person :arg0-of (h4 / have-org-role-91 :arg1 (c4 / country) :arg2 (m2 / member)) :quant (s3 / some)) :op4 (p6 / person :arg0-of (h5 / have-org-role-91 :arg1 (o / organization) :arg2 (m3 / member))) :op5 (p7 / person :arg0-of (h6 / have-org-role-91 :arg1 (o2 / organization) :arg2 (m4 / member)) :quant (s4 / some))) :arg0-of (u / undermine-01 :arg1 (c5 / change-01 :arg1-of (w / want-01 :polarity - :arg0 (m5 / most))))) :time (r / recent))
(a / and :op1 (h / hospitalized :domain (p / person :name (n / name :op1 "Lucy" :op2 "Shafarjova")) :prep-with (i / infect-01 :mod (b / bacterial))) :op2 (r / report-01 :arg0 (p2 / publication :name (n2 / name :op1 "AFP"))))
(a / and :op2 (f / fatigue :mode (i / interrogative)))
(w / write-01 :arg0 (o / organization :name (n / name :op1 "Kommersant")) :arg1 (p / program :topic (i / introduce-02 :arg1 (c / coupons :arg1 (f / food) :beneficiary (p2 / person :mod (p3 / poor))))) :time (e / early :degree (m / more) :time (e2 / early :degree (m2 / more))))
(a / and :op1 (r / rational :polarity - :domain (t / this) :time (u / until :op1 (c / cubits :arg0 (y / you) :arg1 (n / neighbor-01 :arg1 (y2 / you) :arg2 (p / person :arg0-of (h / have-rel-role-91 :arg1 (h2 / he) :arg2 (w / wife) :time (f / future)) :arg0-of (h3 / have-rel-role-91 :arg1 (h4 / he) :arg2 (w2 / wife) :time (f2 / future))))))) :op2 (a2 / and :op1 (k / keen :arg1 (t2 / they) :arg2 (t3 / they)) :op2 (o / obligate-01 :arg1 (y3 / you) :arg2 (s / see-01 :arg0 (y4 / you) :arg1 (h5 / he) :frequency (r2 / rate-entity-91 :arg3 (t4 / temporal-quantity :quant (N / N-A) :unit (d / day))))) :op3 (p2 / possible-01 :arg1 (w3 / watch-01 :arg0 (y5 / you) :arg1 (h6 / he) :frequency (r3 / rate-entity-91 :arg3 (t5 / temporal-quantity :quant (N2 / N-A) :unit (d2 / day))))) :op4 (p3 / possible-01 :arg1 (w4 / watch-01 :arg0 (y6 / you) :arg1 (p4 / person :arg0-of (h7 / have-rel-role-91 :arg1 (y7 / you) :arg2 (f3 / friend))) :manner (c2 / common)))))
(b / be-located-at-91 :arg1 (p / person :name (n / name :op1 "Barber")) :arg2 (p2 / place :mod (t / this)) :duration (m / many :op1 (t2 / temporal-quantity :quant (N / N-A) :unit (y / year))))
(m / multi-sentence :snt1 (a / analogous :arg1 (s / situation) :arg2 (s2 / situation)) :snt2 (s3 / sit-01 :arg1 (s4 / situation :mod (t / this)) :arg2 (s5 / situation) :time (' / '' :arg1 (s6 / stadium :quant 75 :mod (v / vips)))))
(m / multi-sentence :snt1 (m2 / monitor-01 :arg0 (p / person :arg0-of (r / research-01)) :arg1 (l / level :mod (l2 / level :mod (h / hemoglobin)) :arg1-of (r2 / reflect-01 :arg2 (s / sugar :mod (b / blood)))) :mod (a / also)) :snt2 (d / dynamics :mode (e / expressive)))
(m / multi-sentence :snt1 (m2 / monitor-01 :mode (i / interrogative) :arg0 (p / person :arg0-of (r / research-01)) :arg1 (p2 / person :arg0-of (r2 / research-01)) :mod (a / also)) :snt2 (l / level :mod (b / blood :arg1-of (r3 / reflect-01 :arg2 (l2 / level :mod (s / sugar :mod (b2 / blood))) :location (d / dynamics)))) :li 1)
(s / say-01 :arg0 (t / thing :arg1-of (f / fund-01 :arg0 (a / agency :mod (g / government-organization :arg0-of (g2 / govern-01))))) :arg1 (i / include-91 :arg1 (p / person :quant (s2 / some) :arg1-of (i2 / include-91 :arg2 (p2 / person :quant 12 :arg1-of (l / link-01 :arg2 (i3 / industry :consist-of (t2 / tobacco))) :arg1-of (l2 / link-01 :arg2 (i4 / industry :consist-of (t3 / tobacco)))))) :arg2 (p3 / person :arg0-of (r / research-01))))
(r / report-01 :arg0 (p / person :name (n / name :op1 "Martin" :op2 "McKee") :arg0-of (h / have-org-role-91 :arg1 (o / organization :name (n2 / name :op1 "European" :op2 "Health" :op3 "Institute") :part-of (o2 / organization :name (n3 / name :op1 "London" :op2 "School" :op3 "of" :op4 "Hygiene" :op5 "and" :op6 "Tropical" :op7 "Medicine"))) :arg2 (l / lecturer))) :arg1 (r2 / recommend-01 :arg1 (b / base-02 :arg1 (c / care-03 :arg1 (h2 / health) :mod (f / fundamental)) :arg2 (p2 / prove-01 :arg1 (e / efficient-01))) :arg1-of (b2 / base-02 :arg2 (t / thing :arg0-of (p3 / prove-01 :arg1 (e2 / efficient-01))))))
(d / desire-01 :arg0 (b / boy :arg1-of (n / name-01 :arg0 (b2 / boy) :arg2 (h / hope-01 :arg0 (b3 / boy) :arg1 (c / conquered :arg0 (b4 / boy) :arg1 (a / air :poss (g / girl :arg1-of (m / mean-01 :arg2 (t / thing :arg1-of (d2 / do-02 :arg0 (h2 / heart :part-of (h3 / he))))))))))) :arg1 (t2 / thing :arg2-of (n2 / name-01 :arg1 (p / person :arg1-of (d3 / die-01 :arg1-of (k / know-01 :polarity -)) :arg1-of (d4 / die-01 :location (t3 / thing :arg2-of (n3 / name-01 :arg1 (p2 / person :arg1-of (d5 / die-01 :location (t4 / thing :quant 1991)))) :arg1-of (k2 / know-01 :polarity -)))))) :location (u / url-entity :value (h4 / high)) :location (c2 / city :arg1-of (s / surround-01 :arg2 (w / wall :arg1-of (h5 / high-02)))) :location (c3 / city :arg1-of (n4 / name-01 :arg2 (w2 / wall :arg1-of (h6 / high-02)))))
(r / recommend-01 :arg1 (a / act-02 :arg0 (m / matter :mod (s / such)) :arg1-of (c / cause-01 :arg0 (a2 / and :op1 (g / get-03 :arg1 (p / problem) :arg2 (y / you)) :op2 (r2 / remain-01 :arg1 (p2 / problem) :arg3 (m2 / measure-02 :mod (e / extraordinary) :mod (o / only)))))) :prep-in (m3 / matter :mod (s2 / such)))
(n / need-01 :arg1 (a / act-02 :manner (m / matter :mod (s / such))) :arg1-of (c / cause-01 :arg0 (f / fall-01 :arg1 (p / problem) :arg2 (m2 / measure-02 :mod (e / extraordinary) :mod (o / only)))) :prep-in (m3 / matter :mod (s2 / such)))
(a / and :op1 (b / buy-01 :arg0 (p / person :arg1-of (i / include-91 :arg2 (p2 / person :arg1-of (b2 / buy-01 :arg0 (p3 / person))) :arg3 (p4 / percentage-entity :value (N / N-A)))) :arg1 (p5 / person :arg1-of (i2 / include-91 :arg2 (p6 / person) :arg3 (p7 / percentage-entity :value (N2 / N-A)))) :time (t / time :arg1-of (s / same-01))) :op2 (w / willingly :arg0 (p8 / person) :location (s2 / street :location (c / center))))
(a / and :op1 (b / buy-01 :arg0 (p / person :arg1-of (i / include-91 :arg2 (p2 / person) :arg3 (p3 / percentage-entity :value (N / N-A)))) :arg1 (a2 / and :op1 (c / clothes) :op2 (s / shoe)) :degree (m / more :compared-to (p4 / person :arg1-of (b2 / buy-01 :arg0 (a3 / and :op1 (c2 / clothes) :op2 (s2 / shoe)))))) :time (t / time :arg1-of (s3 / same-01)))
(c / contrast-01 :arg1 (h / hurt-01 :polarity - :arg1 (h2 / he)) :arg2 (s / scene :poss (s2 / scene :location-of (f / fall-01 :arg1 (n / network :mod (s3 / social)) :manner (i / instant)))))
(m / multi-sentence :snt1 (t / threaten-01 :mode (i / interrogative) :arg0 (a / and :op1 (p / prosper-01 :arg0 (w / we) :arg1 (n / network :mod (c / computer) :poss (w2 / we))) :op2 (l / life :arg1-of (p2 / personal-02)) :op3 (s / security :mod (n2 / nation))) :arg1 (a2 / and :op1 (p3 / prosper-01 :arg0 (w3 / we) :mod (e / economy)) :op2 (s2 / security :mod (p4 / personal-02)) :op3 (s3 / security :mod (n3 / nation))) :time (p5 / present)) :snt2 (s4 / state-01 :arg0 (p6 / person :name (n4 / name :op1 "Vladimir" :op2 "Drinkman") :arg0-of (h / have-org-role-91 :arg1 (c2 / country :name (n5 / name :op1 "USA"))))))
(i / indicate-01 :arg1 (a / and :op1 (i2 / indicate-01 :arg0 (l / lamb :arg0-of (l2 / lead-01 :arg1 (c / course :quant 2 :mod (o / online) :location (o2 / organization :name (n / name :op1 "Delta" :op2 "State" :op3 "University")) :location (p / peninsula :name (n2 / name :op1 "N-A")))) :arg0-of (f / found-01 :arg1 (o3 / organization))) :arg1 (g / go-02 :arg0 (l3 / lamb) :arg4 (u / university))) :op2 (b / believe-01 :arg0 (p2 / police) :arg1 (s / shoot-02 :arg0 (p3 / person) :arg1 (p4 / person :name (n3 / name :op1 "Ethan" :op2 "Schmidt") :arg0-of (t / teach-01 :arg1 (h / history)) :mod (a2 / all)) :location (t2 / threshold :poss (c2 / cabinet :poss (p5 / person)))))))
(a / and :op1 (i / indicate-01 :arg0 (n / nothing) :arg1 (h / have-03 :arg0 (l / lamb :arg1-of (l2 / lead-02 :arg0 (p / person :quant 2 :arg0-of (h2 / have-org-role-91 :arg1 (o / organization :name (n2 / name :op1 "Delta" :op2 "State" :op3 "University")))) :location (p2 / peninsula :name (n3 / name :op1 "N-A"))) :arg0-of (f / found-01 :arg1 (o2 / organization))) :arg1 (t / time :mod (t2 / that)) :time (t3 / time :mod (t4 / that)))) :op2 (s / say-01 :arg0 (p3 / police) :arg1 (s2 / shoot-02 :arg0 (h3 / he) :arg1 (p4 / person :name (n4 / name :op1 "Schmidt") :arg0-of (t5 / teach-01 :arg1 (h4 / history)) :mod (o3 / organization :name (n5 / name :op1 "ITA"))) :location (t6 / threshold :poss (c / cabinet :poss (h5 / he))))))
(l / look-01 :arg0 (i / it) :arg1 (c / clownery :poss (p / person :name (n / name :op1 "Zhirinovsky")) :location (o / organization :name (n2 / name :op1 "State" :op2 "Duma"))) :time (t / today))
(m / multi-sentence :snt1 (n / need-01 :arg0 (t / they) :arg1 (i / isolate-01 :arg1 (t2 / they)) :mod (d / definite)) :snt2 (s / suffer-01 :arg0 (t3 / they) :arg1 (a / and :op1 (s2 / suffer-01 :arg0 (t4 / they) :arg1 (f / family :arg1-of (h / have-org-role-91 :arg0 (t5 / they) :arg2 (m2 / member)))) :op2 (s3 / suffer-01 :arg0 (t6 / they) :arg1 (a2 / and :op1 (f2 / family :arg1-of (h2 / have-org-role-91 :arg0 (t7 / they) :arg2 (m3 / member))) :op2 (p / problem :topic (s4 / sea) :beneficiary (s5 / staff :poss (o / organization :name (n2 / name :op1 "FSIN")))))))))
(r / reveal-01 :arg0 (i / it) :arg1 (s / strengthen-01 :arg0 (w / wave-04 :arg1 (u / ultrasonic)) :arg1 (w2 / wave-04 :arg1 (w3 / worm :name (n / name :op1 (u2 / ultrasonic)))) :time (t / then)))
(b / bus :mod (s / school))
(c / contrast-01 :arg1 (d / doctor :polarity - :domain (i / i)) :arg2 (a / and :op1 (a2 / age-01 :arg1 (i2 / i) :arg2 (t / temporal-quantity :quant (N / N-A) :unit (m / month))) :op2 (p / possible-01 :polarity - :arg1 (p2 / play-01 :arg0 (g / guy) :location (s / stage :mod (g2 / group))))))
(a / and :op1 (i / increase-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (o / organization :name (n / name :op1 "Tigers")) :arg3 (a2 / apprentice-01 :arg0 (p2 / person)))) :arg1 (e / expend-01 :arg0 (p3 / person) :arg2 (i2 / inning :ord (o2 / ordinal-entity :value 2)))) :op2 (r / receive-01 :arg0 (a3 / and :op1 (p4 / person :name (n2 / name :op1 "McCann") :arg0-of (h2 / have-org-role-91 :arg2 (c / catcher))) :op2 (p5 / person :name (n3 / name :op1 "Anthony" :op2 "Goza") :arg0-of (h3 / have-org-role-91 :arg1 (d / duhaut) :arg2 (d2 / duhaut)))) :arg1 (a4 / and :op1 (p6 / person :name (n4 / name :op1 "Anthony" :op2 "Goza") :arg0-of (h4 / have-org-role-91 :arg2 (c2 / catcher))) :op2 (p7 / person :name (n5 / name :op1 "Anthony" :op2 "Goza") :arg0-of (h5 / have-org-role-91 :arg1 (o3 / otbivangego) :arg2 (o4 / otbivangego)) :arg1-of (s / single-02) :mod (c3 / central))) :arg2 (3 / 3-0 :quant (32 / 3-0))))
(m / multi-sentence :snt1 (a / and :op1 (h / help-01 :arg0 (t / team :consist-of (p / person :arg0-of (h2 / have-org-role-91 :arg1 (o / organization :name (n / name :op1 "Special" :op2 "Patrol" :op3 "Group"))))) :arg1 (s / spread-02 :arg1 (t2 / they) :path (a2 / across :op1 (c / city :name (n2 / name :op1 "London")))) :location (a3 / across :op1 (c2 / city :name (n3 / name :op1 "London")))) :op2 (' / '' :arg0 (t3 / team) :arg1 (s2 / set :mod (g / gainer) :consist-of (k / keys :mod (g2 / gainer))))) :snt2 (g3 / give-01 :arg0 ('2 / '') :arg1 (a4 / access-01) :arg2 (s3 / space :mod (a5 / advertising) :location (s4 / stop-01 :arg1 (b / bus)))))
(s / say-01 :arg0 (a / and :op1 (p / person :arg0-of (h / have-org-role-91 :arg1 (o / organization :name (n / name :op1 "World" :op2 "Bank")) :arg2 (d / director :mod (v / vice)))) :op2 (f / fan :mod (c / country :name (n2 / name :op1 "Moldova"))) :op3 (f2 / fan :mod (c2 / country :name (n3 / name :op1 "Ukraine")))) :arg1 (a2 / and :op1 (h2 / help-01 :arg0 (r / reform-01 :arg1 (s2 / sector :mod (b / banking))) :arg1 (l / lend-01 :arg0 (r2 / reform-01) :arg1 (e / economy :mod (r3 / real)))) :op2 (r4 / recovery :arg0 (r5 / reform-01) :arg1 (g / grow-01 :arg1 (e2 / economy)))))
(s / say-01 :arg1 (p / possess-01 :arg0 (p2 / person :name (n / name :op1 "Daniele" :op2 "de" :op3 "Rossi") :arg0-of (h / have-org-role-91 :arg1 (o / organization :name (n2 / name :op1 "Barcelona")) :arg3 (l / lead-02 :arg0 (p3 / person)))) :arg1 (s2 / style :mod (u / unique :polarity -) :mod (o2 / only :polarity -))) :arg2 (b / bright :arg1 (p4 / person) :mod (a / also)))
(s / speak-01 :arg0 (p / person :name (n / name :op1 "Jeremy" :op2 "Corbyn") :arg0-of (l / lead-02 :arg1 (p2 / party :mod (p3 / political-party :name (n2 / name :op1 "N-A"))) :mod (n3 / new))) :time (s2 / soon) :time (s3 / session :mod (q / question-01 :arg1 (p4 / person :arg0-of (h / have-org-role-91 :arg2 (m / minister :mod (p5 / prime)))) :arg2 (p6 / person :name (n4 / name :op1 "David" :op2 "Cameron")) :ord (o / ordinal-entity :value 1))))
(r / report-01 :arg1 (p / person :quant (a / about :op1 3) :arg0-of (m / manage-02 :arg1 (s / save-02 :arg1 (c / child)))) :mod (a2 / also))
(s / say-01 :arg0 (p / person :name (n / name :op1 "Jordi" :op2 "Alba")) :arg1 (p2 / possible-01 :polarity - :arg1 (c / compare-01 :arg1 (p3 / person :name (n2 / name :op1 "Cristiano" :op2 "Ronaldo")) :arg2 (p4 / person :name (n3 / name :op1 "Messi")))))
(k / keep-04 :arg1 (s / street :arg1-of (i / include-91 :arg2 (l / location :name (n / name :op1 "Old" :op2 "City") :location (l2 / location :name (n2 / name :op1 "Old" :op2 "City"))) :arg3 (m / multiple :op1 1))) :arg2 (l3 / live-01 :arg0 (p / person :name (n3 / name :op1 "Alexander" :op2 "Bestuzov-Marlinsky") :arg0-of (w / write-01 :arg1 (l4 / literature)) :mod (c / caucasus))))
(g / go-out-17 :arg0 (p / person :name (n / name :op1 "Luke" :op2 "Shaw") :source (o / organization :name (n2 / name :op1 "Manchester" :op2 "United"))) :duration (s / several :op1 (t / temporal-quantity :quant (N / N-A) :unit (m / month))))
(h / hobby :arg0 (p / person :arg0-of (r / reside-01 :arg1 (p2 / person :arg0-of (r2 / reside-01)))) :arg1 (a / and :op1 (c / content) :op2 (d / dine-01)) :mod (p3 / popular))
(e / exemplify-01 :arg0 (e2 / exemplify-01 :arg0 (g / game :mod (c / computer) :poss (a / aircraft :arg0-of (f / fight-01 :arg2 (r / role))))))
(a / and :op2 (g / go-08 :arg1 (i / it) :arg2 (a2 / after :op1 (f / fungus))))
(r / refuse-01 :arg0 (p / person :name (n / name :op1 "Evgeny")) :arg1 (c / comment-01 :arg0 (p2 / person)))
(b / believe-01 :arg0 (t / they) :arg1 (f / fraudster :domain (i / i)) :arg1-of (c / clear-06))
(d / do-02 :arg1 (t / this) :purpose (p / prevent-01 :arg1 (t2 / thing :arg2-of (p2 / price-01 :arg1 (t3 / thing :arg2-of (p3 / price-01 :arg1 (t4 / thing :arg2-of (p4 / price-01 :arg1 (t5 / thing :arg2-of (p5 / price-01 :arg1 (t6 / thing :arg2-of (p6 / price-01 :arg1 (t7 / thing :arg2-of (p7 / price-01 :arg1 (t8 / thing :arg2-of (p8 / price-01 :arg1 (t9 / thing)))))))))))))))))
(m / multi-sentence :snt1 (a / and :op1 (p / procedures :arg0 (p2 / procedure :name (n / name :op1 (i / improper) :op2 (i2 / improper))) :arg1 (a2 / and :op1 (s / supplement) :op2 (w / warm)) :arg2 (h / herbs :name (n2 / name :op1 (o / otvarami) :op2 (h2 / herbs) :op3 (- / -lrb-) :op4 (-2 / -lrb-) :op5 (s2 / secret) :op6 (s3 / secret) :op7 (e / edges) :op8 (e2 / edges) :op8 (e3 / edges) :op8 (e4 / edges) :op8 (e5 / edges) :op8 (e6 / edges) :op8 (e7 / edges) :op8 (e8 / edges) :op8 (e9 / edges) :op8 (e10 / edges) :op8 (e11 / edges) :op8 (e12 / edges) :op8 (e13 / edges) :op8 (m2 / move-01 :arg1 (f / finger :part-of (h3 / he))))))) :snt2 (r / recommend-01 :arg1 (c / carry-out-03 :arg1 (m3 / move-01 :arg1 (f2 / finger :part-of (h4 / he))))))
(m / multi-sentence :snt1 (r / review-01 :arg1 (a / action :mod (j / judiciary)) :time (d / date-entity :month 9 :day 16)) :snt2 (n / number :quant-of (s / station :arg0-of (h / have-org-role-91 :arg3 (j2 / judge-01)))))
(c / contrast-01 :arg1 (i / include-01 :arg1 (s / subject :quant 5) :arg2 (c2 / country :name (n / name :op1 "Russian" :op2 "Federation"))) :arg2 (p / possible-01 :arg1 (c3 / call-01 :arg0 (y / you) :arg1 (h / headquarters :mod (d / district) :mod (e / email)) :arg2 (y2 / you))))
(s / source :mod (s2 / soccer) :location (a / and :op1 (s3 / source :arg1-of (l / local-02)) :op2 (d / decline-01 :arg1 (w / water) :time (n / now))) :time (n2 / nowadays))
(e / extant :arg0 (s / source :mod (s2 / soccer)) :arg1 (w / water) :time (t / today) :mod (e2 / even))
(a / and :op1 (g / give-01 :arg0 (h / he) :arg1 (d / die-01 :arg1 (p / person :name (n / name :op1 "Amura"))) :arg2 (p2 / person :arg0-of (r / recruit-01 :arg1 (p3 / person) :arg2 (d2 / die-01 :arg1 (p4 / person))))) :op2 (a2 / advertise-01 :arg0 (h2 / he) :arg1 (c / country :name (n2 / name :op1 "Russia")) :manner (u / united :arg0 (h3 / he) :arg1 (a3 / and :op1 (' / '' :mod (w / whole)) :op2 (n3 / nothing :mod (e / else))))))
(r / recommend-01 :arg1 (h / help-01 :arg0 (p / process-01 :arg1-of (p2 / purport-01)) :arg1 (r2 / reduce-01 :arg0 (p3 / process-01) :arg1 (i / inequality :location (w / world)))))
(s / say-01 :arg0 (h / he) :arg1 (s2 / solve-01 :arg0 (e / error :arg1-of (s3 / separate-02)) :arg1 (g / game)))
(c / cause-01 :arg0 (f / fear-01 :arg0 (p / person :arg0-of (i / invest-01)) :arg1 (p2 / possible-01 :arg1 (g / grow-01 :arg1 (s / slowdown :location (e / economy :poss (c2 / country :name (n / name :op1 "N-A"))))))) :arg1 (f2 / fall-01 :arg1 (i2 / industry :arg1-of (a / average-03) :arg1-of (a2 / average-03)) :arg2 (p3 / product-of :op1 (p4 / percentage-entity :value (N / N-A)) :op2 (p5 / percentage-entity :value (N2 / N-A))) :arg1-of (p6 / possible-01)))
(l / leave-13 :arg0 (s / shaw :arg1 (b / bachelor :arg1 (c / channel :name (n / name :op1 (t / ten))))) :arg1 (a / along :op1 (m / media)))
(g / go-10 :arg1 (s / show-04 :arg1 (b / bachelor)) :arg2 (w / wednesdays) :time (d / date-entity :year (N / N-A) :month (N2 / N-A)) :medium (c / channel :name (n / name :op1 (7 / 7:30) :op2 (t / ten))))
(o / obligate-01 :arg2 (r / recognize-02 :arg0 (a / authority) :arg1 (s / settle-02 :arg0 (a2 / authority) :arg1 (g / guest :poss (c / city) :quant (a3 / all))) :manner (u / urgent)) :location (r2 / run-up :mod (w / world)))
(r / recommend-01 :arg1 (t / think-01 :arg0 (a / authority) :arg1 (t2 / thing :manner-of (s / settle-02 :arg1 (p / person :arg0-of (v / visit-01) :mod (c / city) :quant (a2 / all)))) :manner (u / urgent)) :arg2 (p2 / person :arg0-of (h / have-org-role-91 :arg2 (a3 / authority))) :manner (u2 / urgent))
(c / contrast-01 :arg1 (r / report-01 :arg0 (p / person :name (n / name :op1 "Lamba") :arg0-of (h / have-org-role-91 :arg1 (p2 / person :name (n2 / name :op1 "William" :op2 "La") :arg0-of (h2 / have-org-role-91 :arg1 (o / organization))))) :arg1 (r2 / report-01 :arg0 (p3 / person) :arg1 (c2 / conflict-01 :polarity - :arg0 (p4 / person) :arg1 (c3 / conflict-01 :arg0 (p5 / person :name (n3 / name :op1 "Lamba")) :arg1 (p6 / person :name (n4 / name :op1 "Schmidt"))) :mod (a / any)))) :arg2 (s / something :location (m / mind :poss (y / you)) :arg1-of (c4 / clear-06)))
(c / cause-01 :arg1 (s / seem-01 :arg1 (r / remain-01 :arg1 (t / trumps :poss (p / person :name (n / name :op1 "Donald"))) :arg3 (p2 / position :arg1-of (s2 / same-01))) :time (u / until :op1 (t2 / then))))
(f / formalize :arg0 (c / city :name (n / name :op1 "Kiev")) :arg1 (r / refuse-01 :arg0 (c2 / country :name (n2 / name :op1 "Ukraine")) :arg1 (c3 / cooperate-01 :arg0 (c4 / country) :arg1 (c5 / country :name (n3 / name :op1 "Russia")) :arg2 (c6 / complete-01 :arg1 (p / plant :mod (p2 / power :mod (n4 / nucleus)) :mod (l / location :name (n5 / name :op1 "Khmelnitsky")))))))
(t / thank-01 :arg1 (y / you))
(s / sayansk :location (r / region :mod (y / youngest) :location (l / location :name (n / name :op1 "Irkutsk"))))
(m / multi-sentence :snt1 (g / garden :mode (i / interrogative) :poss (c / child)) :snt2 (o / open-01 :arg1 (p / person :quant 23 :arg1-of (a / attend-01 :arg0 (c2 / child :quant 200)))))
(a / accept-01 :polarity - :arg1 (t / thing :mod (s / such)) :arg1-of (e / easy-05) :time (e2 / ever))
(r / recommend-01 :arg1 (t / take-01 :polarity - :arg1 (t2 / thing :mod (s / such)) :manner (l / light-06) :time (e / ever)))
(c / check-out-05 :mode (i / imperative) :arg0 (y / you) :arg1 (p / person :arg0-of (o / own-01 :arg1 (m / methamphetamine))))
(m / multi-sentence :snt1 (a / appreciate-02 :arg0 (p / person :mod (a2 / another)) :arg1 (f / fact :topic (s / soft-02 :arg1 (h / head :part-of (t / tunnel :mod (c / central)))) :time (n / now))) :snt2 (a3 / and :op1 (s2 / soft-02 :arg1 (p2 / person :arg0-of (h2 / head-01 :arg1 (f2 / front :mod (c2 / central)))) :time (n2 / now)) :op2 (s3 / say-01 :arg0 (t2 / twist :mod (a4 / ankle)))))
(s / suffice-01 :arg0 (w / win-01 :arg0 (p / person :name (n / name :op1 "Eddie" :op2 "Poppy-Gvayra") :arg0-of (h / have-org-role-91 :arg2 (- / -lrb-))) :arg1 (n2 / number :quant-of (p2 / person :quant 623 :arg0-of (h2 / have-org-role-91 :arg2 (h3 / head-of-state))))) :arg2 (a / and :op1 (w2 / win-01 :arg0 (p3 / person) :arg2 (a2 / above :op1 (p4 / person :quant 613 :arg0-of (h4 / have-org-role-91 :arg2 (s2 / seat :arg1-of (h5 / hot-05)))))) :op2 (p5 / person :quant 613 :arg0-of (h6 / have-org-role-91 :arg2 (h7 / head-of-state)))))
(a / and :op1 (g / give-01 :arg0 (p / person :quant 1 :arg1-of (i / include-91 :arg2 (p2 / person :arg0-of (p3 / play-01) :mod (y / young) :arg0-of (p4 / promise-01)))) :arg1 (g2 / gap :arg1-of (p5 / produce-01 :arg0 (p6 / person))) :arg2 (p7 / person :arg0-of (p8 / play-01) :mod (y2 / young) :quant (m / most))) :op2 (s / seem-01 :arg1 (s2 / significant-02 :polarity - :arg1 (g3 / gap) :arg1-of (i2 / instead-of-91 :arg2 (s3 / significant-02 :polarity - :arg1 (g4 / gap)))) :arg1-of (g5 / general-02)))
(r / represent-01 :polarity - :arg0 (d / doctor) :arg1 (d2 / doctor) :manner (a / absolute) :time (a2 / after :op1 (s / spend-02 :arg0 (m / man :mod (o / old :degree (m2 / more))) :arg1 (l / live-01))))
(c / contrast-01 :arg1 (p / possible-01 :arg1 (s / stay-01 :arg1 (m / man :mod (e / elderly)) :arg3 (l / live-01) :time (a / after :op1 (t / temporal-quantity :quant (N / N-A) :unit (d / day))))) :arg2 (e2 / entire :polarity - :domain (d2 / doctor)))
(i / include-91 :arg1 (a / and :op1 (p / person :arg0-of (l / lead-02 :arg1 (p2 / person :name (n / name :op1 "David" :op2 "Koch") :arg0-of (l2 / lead-02)))) :op2 (p3 / person :name (n2 / name :op1 "Samantha" :op2 "Armitage") :arg0-of (l3 / lead-02 :arg1 (b / broadcast-01 :mod (i2 / international))))) :arg2 (p4 / part :part-of (b2 / broadcast-01 :mod (i3 / international) :quant (s / series) :arg0-of (i4 / include-01 :arg1 (a2 / and :op1 (c / city :name (n3 / name :op1 "Dubai")) :op2 (c2 / city :name (n4 / name :op1 "New" :op2 "York")) :op3 (l4 / location :name (n5 / name :op1 "Niagara" :op2 "Falls")) :op4 (l5 / location :name (n6 / name :op1 "Cancún"))) :mod (a3 / also)))))
(s / say-01 :arg0 (h / he) :arg1 (r / recommend-01 :arg1 (c / concentrate :arg0 (c2 / country :name (n / name :op1 "China")) :arg1 (a / attract-01 :arg0 (c3 / country) :arg1 (a2 / and :op1 (p / person :arg0-of (i / invest-01 :mod (f / foreign))) :op2 (p2 / person :arg0-of (h2 / have-org-role-91 :arg2 (p3 / person :arg1-of (e / expert-01))))))) :arg2 (a3 / and :op1 (a4 / attract-01 :arg0 (c4 / country) :arg1 (p4 / person :arg0-of (i2 / invest-01 :mod (f2 / foreign)))) :op2 (d / develop-02 :arg0 (c5 / country) :arg1 (p5 / policy :topic (r2 / restore-01)))) :op3 (a5 / address-02 :arg0 (c6 / country) :arg1 (p6 / person :arg0-of (p7 / participate-01 :arg1 (m / meet-03 :ord (o / ordinal-entity :value 16))) :arg0-of (a6 / address-02 :arg1 (m2 / meet-03 :arg0 (p8 / person :arg0-of (p9 / participate-01 :arg1 (m3 / meet-03 :ord (o2 / ordinal-entity :value 16) :arg0-of (l / lead-02 :arg1 (o3 / organization)) :arg0-of (l2 / lead-02 :arg1 (o4 / organization) :mod (c7 / central)))))))))))
(m / multi-sentence :snt1 (o / obligate-01 :arg1 (c / country :name (n / name :op1 "China")) :arg2 (f / focus-01 :arg0 (c2 / country) :arg2 (a / attract-01 :arg0 (c3 / country) :arg1 (a2 / and :op1 (p / person :arg0-of (i / invest-01 :mod (f2 / foreign))) :op2 (p2 / person :arg1-of (e / expert-01)) :op3 (p3 / person :arg0-of (h / have-org-role-91 :arg2 (p4 / person :arg1-of (e2 / expert-01)))))))) :snt2 (r / refer-01 :arg0 (h2 / he) :arg1 (p5 / person :arg0-of (p6 / participate-01 :arg1 (m2 / meet-03 :ord (o2 / ordinal-entity :value 16) :arg0-of (h3 / have-org-role-91 :arg1 (g / group :arg0-of (l / lead-01) :mod (c4 / central)))))) :arg2 (p7 / person :arg0-of (p8 / participate-01))))
(a / and :op1 (r / recommend-01 :arg1 (c / concentrate :arg0 (c2 / country :name (n / name :op1 "China")) :arg1 (a2 / attract-01 :arg0 (c3 / country) :arg1 (a3 / and :op1 (p / person :arg0-of (i / invest-01 :mod (f / foreign))) :op2 (p2 / person :arg0-of (h / have-org-role-91 :arg2 (p3 / person :arg1-of (e / expert-01)))))))) :op2 (s / say-01 :arg0 (p4 / person) :arg1 (a4 / address-02 :arg0 (p5 / person) :arg1 (p6 / person :arg0-of (p7 / participate-01 :arg1 (m / meet-03 :ord (o / ordinal-entity :value 16) :poss (o2 / organization :name (n2 / name :op1 "Committee") :arg0-of (l / lead-02 :arg1 (o3 / organization))))))) :op3 (a5 / address-02 :arg0 (p8 / person) :arg1 (p9 / person :arg0-of (p10 / participate-01 :arg1 (m2 / meet-03 :ord (o4 / ordinal-entity :value 16))) :arg0-of (h2 / have-org-role-91 :arg1 (o5 / organization) :arg3 (p11 / participate-01))) :purpose (r2 / reform-01 :arg0 (o6 / organization) :mod (c4 / comprehensive)))))
FAILED_TO_PARSE#Couldn't convert to full AMR graph.
(b / blame-01 :arg0 (p / person :name (n / name :op1 "Peter" :op2 "Moody")) :arg1 (a / and :op1 (s / spy-01 :arg0 (p2 / person)) :op2 (t / threaten-01 :arg0 (p3 / person) :arg2 (s2 / sport :mod (e / equestrian)))))
(i / intend-01 :arg0 (p / person :arg0-of (l / lead-02 :arg1 (f / feisbechka :name (n / name :op1 (' / '') :op2 (f2 / feisbechka))))) :arg1 (o / organization :name (n2 / name :op1 "Ministry" :op2 "of" :op3 "Justice") :mod (c / country :name (n3 / name :op1 "N-A"))) :manner (j / joint) :manner (j2 / joint))
(a / and :op1 (c / contribute-01 :arg0 (p / person :name (n / name :op1 "Alfredo" :op2 "Simon") :arg0-of (h / have-org-role-91 :arg2 (p2 / pitcher))) :arg2 (s / support-01 :arg0 (p3 / person) :arg1 (a2 / attack-01 :arg1-of (r / result-01 :arg2 (p4 / point :quant 3) :location (c2 / city :name (n2 / name :op1 "Detroit")))))) :op2 (a3 / add-01 :arg0 (p5 / person) :arg1 1 :mod (a4 / another) :location (a5 / and) :time (t / then)))
(m / multi-sentence :snt1 (i / it :domain (i2 / it)) :snt2 (n / need-01 :mode (i3 / interrogative) :arg0 (y / you) :arg1 (s / something)))
(r / receive-01 :arg0 (p / person :arg1-of (c / convict-01) :mod (o / other) :quant (m / multiple :op1 (N / N-A))) :arg1 (c2 / course :topic (a / and :op1 14 :op2 (t / temporal-quantity :quant (N2 / N-A) :unit (m2 / month)))))
(c / contrast-01 :arg2 (p / possible-01 :polarity - :arg1 (w / want-01 :arg0 (w2 / we) :arg1 (s / successes :mod (r / real)) :time (u / until :op1 (a / and :op1 (c2 / continue-01 :arg1 (b / bloodshed)) :op2 (f / feel-01 :arg0 (p2 / person) :arg1 (s2 / safe-01 :arg1 (p3 / person) :arg1-of (c3 / complete-02)))))) :condition (w3 / want-01 :arg0 (w4 / we) :arg1 (s3 / successes :mod (r2 / real)))))
(c / charge-05 :arg1 (c2 / commission :polarity -) :arg2 (c3 / cash))
(a / and :op1 (b / be-located-at-91 :arg1 (r / room :name (n / name :op1 (r2 / richly)) :location (w / world-region :name (n2 / name :op1 "N-A"))) :arg2 (m / meet-03 :quant 1 :location (a2 / above :op1 (f / floors :quant 2)))) :op2 (i / image :name (n3 / name :op1 (w2 / wall)) :location (a3 / above :op1 (f2 / floors :poss (c / country)))))
(a / and :op1 (r / react-01 :arg0 (y / you)) :op2 (o / obligate-01 :arg1 (i / i) :arg2 (s / suffer-01 :arg0 (y2 / you) :arg1 (c / consequence))) :op3 (o2 / obligate-01 :arg1 (i2 / i) :arg2 (l / live-01 :arg0 (i3 / i) :accompanier (t / thing :arg1-of (s2 / say-01 :arg0 (i4 / i)))) :time (t2 / then)))
(n / need-01 :arg1 (s / step-01 :arg2 (a / achieve-01 :arg1 (b / balance-01))))
(w / work-01 :arg0 (p / person :quant 2016) :location (r / room :part-of (c / city) :quant (a / all)))
(a / and :op1 (p / put-01 :arg0 (g / government-organization :name (n / name :op1 "N-A")) :arg1 (c / condition :mod (s / such) :arg1-of (e / exist-01 :polarity - :time (b / before))) :arg2 (c2 / condition :mod (s2 / such))) :op2 (p2 / possible-01 :arg1 (s3 / speed-01 :arg0 (g2 / government-organization) :arg1 (r / recession-02))) :prep-in (c3 / case :mod (t / this)))
(a / and :op2 (r / remain-01 :arg1 (h / he) :arg3 (f / favorite :arg0 (h2 / he) :arg1 (f2 / fight-01 :arg2 (t / title)) :arg1-of (o / obvious-01)) :time (a2 / allow-01 :arg0 (a3 / and :op1 (p / person :name (n / name :op1 "Duda")) :op2 (p2 / person :name (n2 / name :op1 "Mikhail" :op2 "Antipov"))) :arg1 (r2 / reduce-01 :arg0 (p3 / person) :arg1 (g / gap) :arg4 (p4 / point :quant 0.5 :mod (j / just))))))
(a / and :op1 (s / stress-01 :arg0 (l / lamb) :arg1 (h / have-03 :arg0 (h2 / house) :arg1 (d / dog :arg0-of (h3 / have-rel-role-91 :arg2 (d2 / dd1))))) :op2 (s2 / say-01 :arg0 (l2 / lamb) :arg1 (p / possible-01 :arg1 (f / find-01 :arg1 (c / contact-01 :arg0 (p2 / person :arg0-of (h4 / have-org-role-91 :arg1 (f2 / family :arg1-of (h5 / have-org-role-91 :arg0 (p3 / person) :arg2 (m / member))) :arg2 (m2 / member))) :arg1 (p4 / phone :poss (p5 / person)))))))
(a / and :op1 (u / use-01 :arg0 (c / company :name (n / name :op1 "Google")) :arg1 (a2 / approach-02 :arg0 (c2 / company) :arg1-of (p / personal-02))) :op2 (a3 / announce-01 :arg0 (c3 / company) :arg1 (c4 / campaign-01 :arg0 (c5 / company) :arg1 (c6 / collect-01 :arg0 (c7 / company) :arg1 (t / thing :arg1-of (d / donate-01)) :arg2 (b / blog-01 :arg0 (h / he))))))
(c / cost-01 :arg1 (d / damage-01 :arg1 (p / person :arg0-of (d2 / defend-01))) :arg2 (m / monetary-quantity :quant 300 :unit (d3 / dollar :mod (r / renminbi))) :manner (c2 / cumulative))
(c / contrast-01 :arg1 (b / become-01 :arg1 (c2 / country :name (n / name :op1 "Germany")) :arg2 (p / person :arg0-of (l / lead-02 :arg1 (c3 / country))) :time (m / month :mod (l2 / last))) :arg2 (s / strengthen-01 :arg0 (c4 / country) :arg1 (c5 / control-01 :arg1 (b2 / border)) :purpose (c6 / contain-01 :arg0 (c7 / country) :arg1 (t / tide :poss (c8 / country))) :time (r / recent)))
(a / answer-01 :arg2 (r / reside-01 :arg1 (c / country-region :name (n / name :op1 "Novosibirsk"))) :time (a2 / after :op1 (n2 / now) :quant (u / up-to :op1 (t / temporal-quantity :quant (N / N-A) :unit (d / day)))))
(a / answer-01 :arg2 (r / reside-01 :arg1 (c / country-region :name (n / name :op1 "Novosibirsk"))) :time (a2 / after :op1 (n2 / now) :quant (u / up-to :op1 (t / temporal-quantity :quant (N / N-A) :unit (d / day)))))
FAILED_TO_PARSE#Couldn't convert to full AMR graph.
(s / say-01 :arg0 (t / thing :arg1-of (g / guide-01)) :arg1 (h / have-03 :arg0 (' / '' :name (n / name :op1 ('2 / '')) :mod ('3 / '')) :arg1 (m / model :topic (a / attack-01 :arg1 (g2 / game :mod (a2 / attack-01) :quant (s2 / several))))))
(e / elect-01 :li 2016 :arg2 (p / person :name (n / name :op1 "Hillary" :op2 "Clinton")))
(d / do-02 :arg1 (t / this) :purpose (p / prevent-01 :arg1 (p2 / provocations :arg1-of (d2 / differ-02))))
(s / shock-01 :arg0 (p / possible-01 :arg1 (r / return-01 :arg1 (w / we) :arg4 (n / negotiate-01 :arg0 (w2 / we) :arg2 (c / creditors :poss (w3 / we))) :ord (o / ordinal-entity :value 1))) :arg1-of (c2 / cause-01 :arg0 (e / expect-01 :arg0 (w4 / we) :arg1 (i / implement-01 :arg0 (w5 / we) :arg1 (i2 / implement-01 :arg1 (a / agree-01) :mod (f / full))))))
(s / say-01 :arg0 (p / person :name (n / name :op1 "Heiko" :op2 "Maas")) :arg1 (s2 / suppose-02 :arg1 (r / receive-01 :arg0 (a / authors :poss (p2 / post :mod (h / harm-01 :polarity -))) :arg1 (c / country :name (n2 / name :op1 "N-A")) :arg2 (i / indicate-01 :arg1 (r2 / remove-01 :arg1 (r3 / record :poss (t / they)))))))
(a / and :op1 (n / note-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (g / government-organization :name (n2 / name :op1 "Parliament")) :arg2 (m / member))) :arg1 (a2 / and :op1 (e / end-01 :arg1 (i / immunity) :location (h2 / house :poss (g2 / government-organization :name (n3 / name :op1 "Parliament")))) :op2 (s / soon :arg1 (i2 / immunity) :time (a3 / as-soon-as :op1 (c / come-out-09 :arg1 (p2 / person)))))) :op2 (v / valid-02 :polarity - :arg1 (i3 / immunity)))
(c / contrast-01 :arg1 (o / obligate-01 :arg2 (g / give-01 :arg1 (o2 / opportunity :mod (s / same)) :arg2 (o3 / opportunity :arg1-of (s2 / same-01 :arg2 (o4 / opportunity :mod (s3 / same)))) :mod (a / at-least))) :arg2 (d / depend-01 :arg0 (c2 / certain) :arg1 (g2 / government-organization :name (n / name :op1 "N-A") :mod (c3 / command-02 :location (c4 / country)))))
(l / like-02 :arg0 (i / i) :arg1 (p / point-out-02 :arg0 (i2 / i) :arg1 (r / recommend-01 :arg1 (c / confused :polarity - :arg0 (w / we) :arg1 (c2 / card :name (n / name :op1 (g / groceries) :op2 (g2 / groceries)) :arg1-of (p2 / propose-01)) :prep-with (a / and :op1 (d / deficit :mod (t / total)) :op2 (s / system :arg0-of (d2 / distribute-01 :arg1 (c3 / card))) :op3 (s2 / system :arg0-of (d3 / distribute-01 :arg1 (c4 / card))) :op4 (n2 / number :quant-of (p3 / product :arg1-of (r2 / receive-01))))))))
(a / abandon-01 :arg1 (a2 / and :op1 (f / food) :op2 (w / water) :arg1-of (a3 / abandon-01) :quant (s / some)))
(a / arrive-01 :arg1 (p / police) :arg4 (p2 / place) :medium (c / call-02 :arg0 (p3 / police)))
(s / say-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg2 (o / official))) :arg1 (c / contrast-01 :arg1 (s2 / say-01 :arg0 (p2 / person :arg0-of (h2 / have-org-role-91 :arg2 (o2 / official))) :arg1 (b / be-located-at-91 :arg1 (a / and :op1 (p3 / person :arg0-of (s3 / study-01)) :op2 (b2 / bag :consist-of (s4 / sand))) :arg2 (b3 / behind :op1 (p4 / push-01 :arg0 (p5 / person) :arg1 (s5 / sand))) :frequency (s6 / several) :time (t / try-01 :arg0 (p6 / person) :arg1 (r / reach-01 :arg0 (p7 / person) :arg1 (g / goal))))) :arg2 (t2 / try-01 :arg0 (p8 / person) :arg1 (r2 / reach-01 :arg0 (p9 / person) :arg1 (g2 / goal)))))
(s / say-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg2 (o / official))) :arg1 (c / contrast-01 :arg1 (s2 / say-01 :arg0 (p2 / person :arg0-of (h2 / have-org-role-91 :arg2 (o2 / official))) :arg1 (a / and :op1 (p3 / person :arg0-of (s3 / study-01)) :op2 (p4 / person :arg0-of (s4 / study-01)) :prep-with (s5 / sand) :location (b / behind :op1 (b2 / back :part-of (h3 / he))))) :arg2 (t / try-01 :arg0 (p5 / person) :arg1 (r / reach-01 :arg0 (p6 / person) :arg1 (g / goal :mod (g2 / go-02 :arg0 (p7 / person) :arg4 (s6 / surface :mod (s7 / slippery))))))))
(p / participate-01 :arg0 (p2 / person :arg2-of (i / include-91 :arg1 (a / and :op1 (p3 / person :arg0-of (h / have-org-role-91 :arg1 (o / organization :name (n / name :op1 "University")) :arg2 (m / member))) :op2 (p4 / person :arg0-of (h2 / have-org-role-91 :arg1 (o2 / organization) :arg2 (m2 / member))) :op3 (p5 / person :arg0-of (h3 / have-org-role-91 :arg1 (c / community) :arg2 (m3 / member))) :op4 (p6 / person :arg0-of (h4 / have-org-role-91 :arg1 (c2 / community) :arg2 (m4 / member))) :op5 (p7 / person :arg0-of (h5 / have-org-role-91 :arg1 (c3 / community) :arg2 (m5 / member)))) :arg2-of (i2 / include-91 :arg1 (a2 / and :op1 (p8 / person :arg0-of (h6 / have-org-role-91 :arg1 (o3 / organization) :arg2 (m6 / member))) :op2 (p9 / person :arg0-of (h7 / have-org-role-91 :arg1 (o4 / organization) :arg2 (m7 / member))) :op3 (p10 / person :arg0-of (h8 / have-org-role-91 :arg1 (c4 / community) :arg2 (m8 / member))) :op4 (p11 / person :arg0-of (h9 / have-org-role-91 :arg1 (c5 / community) :arg2 (m9 / member))) :op5 (p12 / person :arg0-of (h10 / have-org-role-91 :arg1 (c6 / community) :arg2 (m10 / member))))))) :arg1 (c7 / ceremony :mod (m11 / mold) :mod (c8 / candle)) :time (n2 / night :mod (t / tuesday)))
(o / or :op1 (p / published :arg0 (w / we) :arg1 (n / name :poss (y / you)) :manner (f / form) :arg1-of (s / specify-01 :arg0 (y2 / you))) :op2 (p2 / publish :polarity - :arg0 (w2 / we) :arg1 (r / request-01 :arg0 (y3 / you))))
(c / contrast-01 :arg2 (t / tell-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (g / government-organization :name (n / name :op1 "Cabinet") :mod (s / shadow)) :arg2 (m / member))) :arg1 (a / advise-01 :arg0 (p2 / person) :arg1 (p3 / person :arg0-of (l / lead-02 :arg1 (p4 / party :mod (p5 / political-party :name (n2 / name :op1 "N-A"))))) :arg2 (' / '' :arg1 (p6 / park :name (n3 / name :op1 "N-A") :mod (n4 / nation))) :arg2-of (e / except-01 :arg1 (b / believe-01 :arg0 (p7 / person) :arg1 (a2 / abolition :arg1 (m2 / monarchy)))))) :arg2 (p8 / person :arg0-of (h2 / have-org-role-91 :arg1 (c2 / company :name (n5 / name :op1 "BBC")) :arg2 (m3 / member))))
FAILED_TO_PARSE#Couldn't convert to full AMR graph.
FAILED_TO_PARSE#Couldn't convert to full AMR graph.
(c / clear-06 :arg1 (i / increase-01 :arg1 (r / rate :mod (i2 / interest)) :arg1-of (s / sharp-02)))
(e / enough :polarity - :domain (s / skill))
(m / multi-sentence :snt1 (c / contrast-01 :arg2 (a / answer-01 :arg0 (i / it) :arg2 (q / question-01))) :snt2 (h / have-condition-91 :arg1 (r / reach-01 :arg0 (r2 / rise-01 :arg1 (w / wood) :mod (l / last)) :arg1 (r3 / rise-01 :arg1 (w2 / wood) :mod (l2 / last)) :manner (p / prompt) :arg1-of (c2 / cause-01 :arg0 (c3 / conquered :arg0 (t / they) :arg1 (h2 / heart) :manner (p2 / prompt))) :arg2 (y / you))))
(a / and :op1 (p / product :arg1-of (r / reasonable-02)) :op2 (p2 / product :quant (l / lot) :arg1-of (s / sell-01 :location (b / bulk))))
(m / multi-sentence :snt1 (c / contrast-01 :arg2 (l / listen-01 :polarity - :arg0 (h / he) :arg1 (p / preventions :poss (i / i)))) :snt2 (d / declare-01 :arg0 (p2 / person :arg0-of (h2 / have-org-role-91 :arg1 (c2 / country :name (n / name :op1 "U.S.")) :arg2 (p3 / president)))))
(r / reach-01 :arg0 (c / championships :time (l / late :op1 (t / temporal-quantity :quant (N / N-A) :unit (y / year)) :degree (m / more)) :location (w / world)) :arg1 (f / final) :time (l2 / late :op1 (t2 / temporal-quantity :quant (N2 / N-A) :unit (y2 / year)) :degree (m2 / more)) :location (c2 / championships :mod (w2 / world)) :time (a / already))
(c / contrast-01 :arg1 (r / recommend-01 :arg1 (r2 / reminded :domain (t / train-01 :arg0 (p / person :name (n / name :op1 "Luis" :op2 "Enrique")) :arg2 (' / '' :mod ('2 / '')) :time (s / season :quant 2011-12)))) :arg2 (m / manage-01 :polarity - :arg0 (p2 / person) :arg1 (p3 / person) :purpose (s2 / show-01 :arg0 (p4 / person) :arg1 (p5 / person) :arg2 (h / hand :mod (g / good :degree (m2 / most)) :location (c2 / country :name (n2 / name :op1 "Italy"))))))
(c / call-01 :arg0 (c2 / character :name (n / name :op1 (c3 / costume) :op2 (c4 / cartoon)) :location (c5 / country :name (n2 / name :op1 "Japan"))) :arg1 (' / '') :arg2 ('2 / ''))
(c / cause-01 :arg1 (a / allow-01 :polarity - :arg0 (w / win-01 :arg0 (p / person :name (n / name :op1 "Bivol"))) :arg1 (c2 / catch-up-04 :arg1 (p2 / person) :arg2 (l / location :name (n2 / name :op1 "Vaduz")))))
(c / cause-01 :arg1 (a / allow-01 :polarity - :arg0 (w / win-01 :arg0 (w2 / woman :mod (c2 / country :name (n / name :op1 "N-A")) :arg1-of (i / include-91 :arg2 (w3 / woman :mod (c3 / country :name (n2 / name :op1 "N-A")))))) :arg1 (o / overtake :arg0 (w4 / win-01) :arg1 (b / bushing))))
(h / have-concession-91 :arg1 (a / and :op1 (b / beat-03 :arg1 (p / person :name (n / name :op1 "Victor" :op2 "Martelly")) :arg2 (a2 / attempt-01 :arg0 (p2 / person) :arg1 (g / get-05 :arg1 (p3 / person) :arg2 (b2 / base :ord (o / ordinal-entity :value 3)) :degree (m / more)))) :op2 (e / eliminate-01 :arg1 (t / threaten-01))) :arg2 (p4 / person :arg0-of (p5 / play-01 :mod (t2 / third-base)) :arg1-of (r / result-01 :arg2 (w / wound :mod (a3 / another)))))
(p / person :arg0-of (d / depend-01 :polarity -) :arg0-of (d2 / depend-01 :polarity -) :arg0-of (d3 / depend-01 :polarity -) :arg0-of (d4 / depend-01 :polarity -) :arg0-of (d5 / depend-01 :polarity -) :arg0-of (d6 / depend-01 :polarity -) :arg0-of (d7 / depend-01 :polarity -) :arg0-of (d8 / depend-01 :polarity -))
(d / depend-01 :polarity - :arg0 (o / organization :name (n / name :op1 "Australian" :op2 "Medical" :op3 "Association")) :arg1 (s / structure :mod (p / professional) :arg1-of (s2 / sponsor-01 :arg0 (a / and :op1 (d2 / doctor) :op2 (p2 / person :arg0-of (s3 / study-01) :mod (m / medicine))))))
(m / multi-sentence :snt1 (a / and :op1 (d / develop-02 :arg1 (b / business :arg0-of (p / publish-01))) :op2 (a2 / attend-02 :arg1 (b2 / business) :quant (m2 / much))) :snt2 (a3 / attend-02 :arg0 (g / generation) :arg1 (a4 / authors)))
(c / contrast-01 :arg2 (h / have-03 :arg0 (a / and :op1 (p / person :arg0-of (h2 / have-org-role-91 :arg2 (o / official))) :op2 (p2 / person :arg0-of (h3 / have-org-role-91 :arg2 (o2 / official)))) :arg1 (s / side :mod (p3 / positive)) :mod (a2 / at-least)))
(s / say-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (c / city :name (n / name :op1 "Sydney")) :arg2 (p2 / president :mod (v / vice)))) :arg1 (a / allow-01 :arg0 (p3 / person :arg0-of (h2 / have-org-role-91 :arg3 (j / judge-01))) :arg1 (f / fight-01 :arg0 (p4 / person :arg0-of (h3 / have-org-role-91 :arg3 (j2 / judge-01))) :arg1 (f2 / fight-01 :arg0 (p5 / person) :arg1 (t / team :poss (p6 / person)) :arg2 (t2 / team :poss (p7 / person)) :time (w / win-01 :arg0 (w2 / win-01 :arg0 (w3 / win-01 :arg0 (w4 / win-01 :arg0 (w5 / win-01 :arg0 (w6 / win-01 :arg0 (w7 / win-01 :arg0 (w8 / win-01 :arg0 (w9 / win-01 :arg0 (w10 / win-01 :arg0 (w11 / win-01 :arg0 (w12 / win-01 :arg0 (w13 / win-01 :time (d / date-entity :decade (N / N-A))) :location (c2 / city) :time (d2 / date-entity :decade (N2 / N-A))) :mod (f3 / final))))))))))))))))
(m / multi-sentence :snt1 (s / signal-07 :arg0 (a / and :op1 (s2 / strengthen-01 :arg1 (d / dollar)) :op2 (s3 / strengthen-01 :arg1 (d2 / dollar))) :arg1 (s4 / signal-07 :arg1 (a2 / adapt-01 :arg1 (m2 / market) :arg2 (t / thing :arg2-of (n / name-01 :arg1 (p / policy :topic (m3 / money) :arg1-of (t2 / tough-02 :degree (m4 / more)))))))) :snt2 (w / write-01 :arg0 (s5 / she)))
(p / prepare-01 :arg0 (m / ministry) :arg1 (t / thing :arg2-of (l / list-01 :arg1 (g / good :arg1-of (s / subsidized)))) :purpose (i / import-01 :arg1 (g2 / good :arg1-of (s2 / subsidized)) :arg2 (i2 / import-01 :arg1 (g3 / good :arg1-of (s3 / subsidized)) :arg2 (g4 / government-organization :arg0-of (g5 / govern-01 :arg1 (c / country :name (n / name :op1 "N-A"))))) :duration (t2 / temporary)))
(p / prepare-01 :arg0 (m / ministry) :arg1 (t / thing :arg2-of (l / list-01 :arg1 (g / good :arg1-of (q / qualify-02)) :duration (t2 / temporary))) :arg3 (t3 / thing :arg2-of (l2 / list-01 :arg1 (g2 / good :arg1-of (q2 / qualify-02)) :duration (t4 / temporary))))
(a / and :op1 (w / want-01 :arg0 (w2 / we) :arg1 (w3 / win-01 :arg0 (w4 / we))) :op2 (d / do-02 :arg0 (w5 / we) :arg1 (i / it)) :concession (r / regret-01 :arg0 (i2 / i) :arg1 (s / score-01 :polarity - :arg1 (w6 / we) :arg2 (g / goal :quant (o / or :op1 1 :op2 2)))))
(a / and :op1 (p / person :name (n / name :op1 "Lacker") :arg0-of (h / have-org-role-91 :arg1 (o / organization :name (n2 / name :op1 "Federal" :op2 "Open" :op3 "Market" :op4 "Committee") :arg1-of (p2 / powerful-02)) :arg2 (m / member))) :op2 (p3 / person :arg0-of (h2 / have-org-role-91 :arg1 (o2 / organization :name (n3 / name :op1 "Federal" :op2 "Open" :op3 "Market" :op4 "Committee") :arg1-of (p4 / powerful-02)) :arg2 (m2 / member))) :op3 (v / vote-01 :arg0 (p5 / person) :arg1 (r / raise-01 :arg0 (p6 / person) :arg1 (r2 / rate))) :arg0-of (p7 / press-01 :arg2 (s / solution :quant 1998-99 :arg2-of (l / lead-02 :arg0 (p8 / person)))))
(m / multi-sentence :snt1 (b / be-located-at-91 :mode (i / interrogative) :arg1 (t / this) :arg2 (t2 / this)) :snt2 (r / report-01 :arg0 (o / organization :name (n / name :op1 "Izvestia")) :arg1 (p / person :arg0-of (a / assist-01 :arg2 (p2 / person :arg0-of (h / have-org-role-91 :arg2 (m2 / minister :topic (d / develop-02 :arg1 (e / economy)))))))))
(l / likely-01 :polarity - :arg1 (l2 / likely-01 :arg1 (l3 / likely-01 :polarity - :arg1 (l4 / likely-01 :arg1 (p / parents :arg0 (p2 / person :name (n / name :op1 "Cameron") :arg0-of (p3 / parents :arg1 (c / content :arg1-of (n2 / name-01 :polarity - :arg2 (b / boy))) :purpose (d / destroy-01 :arg0 (b2 / boy) :arg1 (a / and :op1 (t / trees :name (n3 / name :op1 (v / vyrubschik))) :op2 (t2 / trees :name (n4 / name :op1 (' / ''))) :op3 (n5 / nahodkins :name (n6 / name :op1 ('2 / ''))) :op4 (n7 / nahodkins :name (n8 / name :op1 ('3 / ''))) :op5 (n9 / nahodkins :mod ('4 / '')))))))))))
(e / encourage-01 :arg0 (h / he) :arg1 (t / they) :arg1-of (i / instead-of-91 :arg2 (d / disruption :arg1 (n / newcomers :location (p / presence :poss (t2 / team))))))
(c / consensus :polarity - :topic (t / thing :arg1-of (d / do-02 :location (s / system :mod (g / government-organization :name (n / name :op1 "Federal" :op2 "Reserve")))) :arg0-of (p / provoke :arg1 (c2 / company :name (n2 / name :op1 "N-A")) :location (m / market :mod (f / finance)))))
(p / possible-01 :arg1 (h / have-condition-91 :arg1 (p2 / possible-01 :arg1 (c / colony :arg1-of (s / separate-02))) :arg2 (p3 / person :mod (t / transgender) :quant (l / lot))))
(c / chance-02 :arg1 (l / learn-01 :arg1 (e / everything :topic (w / world :mod (d / domestic)))) :mod (p / precedent :polarity -))
(a / and :op1 (h / hold-04 :arg1 (v / visit-01) :time (d / date-entity :month 9 :day 25) :location (c / city :name (n / name :op1 "Washington"))) :op2 (v2 / visit-01 :arg1 (v3 / visit-01 :arg0 (p / person :name (n2 / name :op1 "Barack" :op2 "Obama") :arg0-of (h2 / have-org-role-91 :arg2 (p2 / president))) :arg1 (p3 / person :arg0-of (h3 / have-org-role-91 :arg2 (p4 / president))) :location (c2 / city :name (n3 / name :op1 "Beijing")) :time (y / year :mod (l / last)))) :medium (s / statement))
(a / and :op1 (v / visit-01 :arg0 (p / person :name (n / name :op1 "Tinpina" :op2 "Xi")) :arg1 (c / city :name (n2 / name :op1 "Washington")) :ord (o / ordinal-entity :value 1)) :op2 (r / return-01 :arg1 (p2 / person) :arg4 (v2 / visit-01 :arg0 (p3 / person) :arg1 (p4 / person :name (n3 / name :op1 "Barack" :op2 "Obama") :arg0-of (h / have-org-role-91 :arg2 (p5 / president))) :time (d / date-entity :month 9 :day 25))) :medium (s / statement))
(m / multi-sentence :snt1 (a / allow-01 :polarity - :arg0 (n / nothing :prep-in (c / culture)) :arg1 (s / say-01 :arg0 (y / you) :arg1 (a2 / and :op1 (s2 / say-01 :arg0 (y2 / you) :arg1 (l / like-01 :arg0 (y3 / you) :arg1 (y4 / you))) :op2 (w / want-01 :arg0 (i / i) :arg1 (h / have-rel-role-91 :arg0 (i2 / i) :arg1 (y5 / you) :arg2 (f / friend)))))) :snt2 (c2 / contrast-01 :arg1 (w2 / want-01 :arg0 (i3 / i) :arg1 (l2 / leave-11 :arg0 (y6 / you))) :arg2 (n2 / need-01 :arg0 (i4 / i) :arg1 (a3 / and :op1 (l3 / leave-11 :arg0 (i5 / i)) :op2 (r / restore-01 :arg0 (i6 / i) :arg1 (e / energy) :arg2 (y7 / you))))))
(o / obligate-01 :arg2 (d / decide-01 :arg0 (c / candidate :mod (t / this)) :arg1 (d2 / decide-01) :time (a / after :op1 (n / now) :quant (u / up-to :op1 (t2 / temporal-quantity :quant (N / N-A) :unit (d3 / day)))) :condition (w / work-01 :arg0 (c2 / candidate) :location (p / person :arg0-of (h / have-org-role-91 :arg1 (l / location :name (n2 / name :op1 "Duma") :mod (c3 / city)) :arg2 (d4 / deputy)))) :arg1-of (c4 / cause-01 :arg0 (m / move-01 :arg0 (c5 / candidate) :arg2 (c6 / candidate :mod (n3 / next) :topic (l2 / list-01 :arg1 (p2 / party)))))))
(g / great :degree (s / so) :domain (h / have-03 :arg0 (y / you) :arg1 (c / capable-01 :arg1 (y2 / you) :arg2 (c2 / choose-01 :arg0 (y3 / you) :arg1 (o / or :op1 (c3 / clothes :arg1-of (c4 / cool-04 :degree (v / very))) :op2 (b / behave-01 :arg1 (o2 / or :op1 (b2 / behave-01) :op2 (b3 / behave-01 :arg0 (o3 / or)))))))) :time (a / after :op1 (a2 / all)))
(r / read-01 :arg0 (i / i) :arg1 (e / everything :example (a / and :op1 (m / military) :op2 (s / story :mod (h / history)) :op3 (t / tales :mod (f / fairy)) :op4 (e2 / et-cetera))))
(r / recommend-01 :arg1 (a / and :op1 (i / involve-01 :arg1 (t / thing :arg1-of (d / decide-01)) :arg2 (s / summit :mod (o / organization :name (n / name :op1 "EU")))) :op2 (r2 / recommend-01 :arg1 (i2 / involve-01 :arg1 (d2 / decide-01)))))
(c / cause-01 :arg1 (e / emphasize-01 :arg0 (g / government-organization :arg0-of (a / administrate-01 :arg1 (o / organization :name (n / name :op1 "Central" :op2 "bank" :op3 "of" :op4 "the" :op5 "USA")))) :arg1 (e2 / emphasize-01 :arg0 (g2 / government-organization :arg0-of (a2 / administrate-01 :arg1 (o2 / organization))) :arg1 (r / recommend-01 :arg1 (f / focus-01 :polarity - :arg0 (p / person :arg0-of (i / invest-01)) :arg2 (a3 / and :op1 (r2 / raise-01 :arg0 (p2 / person) :arg1 (s / stakes)) :op2 (b / borrow :arg0 (a4 / adaptation :quant (a5 / amr-unknown)) :arg1 (p3 / person))))))))
(c / contrast-01 :arg1 (s / sad-02 :arg1 (i / it)) :arg2 (p / pride-01 :arg0 (i2 / i) :arg2 (c2 / child)))
(s / say-01 :arg0 (p / person :name (n / name :op1 "Kirat") :arg0-of (h / have-org-role-91 :arg2 (m / mr.))) :arg1 (p2 / possible-01 :arg1 (c / cost-01 :arg1 (a / and :op1 (r / revenue) :op2 (s2 / sell-01)) :arg2 (a2 / and :op1 (r2 / revenue) :op2 (s3 / sell-01) :arg1-of (c2 / cost-01 :arg2 (l / level :arg1-of (h2 / high-02) :consist-of (m2 / monetary-quantity :arg2-of (c3 / cost-01) :arg1-of (f / fix-03)))))) :arg1-of (p3 / possible-01)))
(a / and :op1 (r / representations :polarity - :arg0 (g / group :name (n / name :op1 "Afriforum")) :arg1 (c / collapse-01 :arg1 (r2 / range)) :mod (a2 / any)) :op2 (u / unavailable :arg1 (p / person :arg0-of (r3 / represent-01 :arg1 (c2 / country))) :purpose (c3 / comment-01 :arg0 (p2 / person))))
(a / and :op1 (d / deficit :mod (b / budget) :mod (a2 / again :mod (o / once))) :op2 (e / employ-01 :polarity - :arg1 (c / country) :arg1-of (h / high-02)) :time (n / now))
(u / unbeaten :arg1 (o / organization :name (n / name :op1 "Dinamo")) :time (s / since :quant 41) :time (s2 / since :op1 (m / manage-02 :arg0 (t / they) :arg1 (h / hold-01 :arg0 (t2 / they) :arg1 (' / '' :mod (i / invincible) :mod ('2 / ''))))))
(a / and :op1 (c / collect-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (o / organization :name (n / name :op1 "Chase" :op2 "Australia")))) :arg1 (p2 / person :quant 520)) :op2 (s / score-01 :arg1 (p3 / person) :arg2 (s2 / score-entity :op1 720 :op2 720)) :time (e / evening :time (e2 / evening)))
(c / change-01 :arg1 (g / grill :prep-with (l / line :quant 5 :mod (h / horizontal))) :mod (m / main))
(c / contrast-01 :arg2 (n / need-01 :arg0 (p / person :quant (m / many) :arg1-of (r / resemble-01 :arg2 (f / family :arg1-of (h / have-org-role-91 :arg0 (p2 / person) :arg2 (m2 / member))))) :arg1 (h2 / help-01) :manner (d / desperate) :time (s / since)))
(g / go-03 :mode (i / imperative) :arg0 (y / you) :arg1 (f / far :degree (v / very)) :location (p / place :mod (a / another)))
(g / go-02 :mode (i / imperative) :arg0 (y / you) :arg4 (e / elsewhere) :mod (f / far :degree (v / very)))
(c / cut-back-05 :arg0 (o / organization :name (n / name :op1 "Hewlett-Packard")) :arg1 (j / job :quant 30,000))
(i / include-91 :arg1 (a / and :op1 (p / person :arg0-of (r / reside-01 :arg1 (c / country-region :name (n / name :op1 "Novosibirsk"))) :quant (s / several :op1 2)) :op2 (p2 / person :arg0-of (h / have-org-role-91 :arg1 (c2 / country :name (n2 / name :op1 "N-A")) :arg3 (r2 / reside-01))) :op3 (p3 / person :arg0-of (h2 / have-org-role-91 :arg1 (c3 / country :name (n3 / name :op1 "N-A")) :arg3 (r3 / reside-01))) :op4 (p4 / person :arg0-of (h3 / have-org-role-91 :arg1 (c4 / country) :arg3 (r4 / reside-01))) :op5 (p5 / person :arg0-of (h4 / have-org-role-91 :arg1 (c5 / country) :arg3 (r5 / reside-01)))) :arg2 (i2 / imprison-01))
(i / include-91 :arg1 (a / and :op1 (p / person :arg0-of (r / reside-01 :arg1 (c / country-region :name (n / name :op1 "Novosibirsk"))) :arg0-of (h / have-org-role-91 :arg1 (c2 / country-region :name (n2 / name :op1 "Novosibirsk")) :arg3 (r2 / reside-01))) :op2 (p2 / person :arg0-of (h2 / have-org-role-91 :arg1 (c3 / country-region :name (n3 / name :op1 "Novosibirsk")) :arg3 (r3 / reside-01))) :op3 (p3 / person :arg0-of (h3 / have-org-role-91 :arg1 (g / game :name (n4 / name :op1 "N-A")) :arg3 (r4 / reside-01))) :op4 (p4 / person :arg0-of (h4 / have-rel-role-91 :arg1 (p5 / person) :arg2 (r5 / residents))) :op5 (p6 / person :arg0-of (h5 / have-rel-role-91 :arg1 (p7 / person) :arg2 (r6 / residents)))) :arg2 (i2 / imprison-01 :arg1 (p8 / person) :arg2 (i3 / imprison-01 :arg2 (p9 / person))))
(e / emphasize-01 :arg0 (h / he) :arg1 (c / cause-01 :arg0 (r / react-01 :arg0 (c2 / country :location (c3 / continent :name (n / name :op1 "N-A")) :mod (w / west)) :arg1 (c4 / crisis :mod (c5 / crisis :mod (c6 / crisis :polarity -)))) :arg1 (s / situation) :manner (a / adequate)) :mod (a2 / also))
(p / prepare-01 :arg0 (o / organization :name (n / name :op1 "Ministry" :op2 "of" :op3 "Economic" :op4 "Development") :part-of (c / criminal-organization :name (n2 / name :op1 "N-A") :mod (c2 / country :name (n3 / name :op1 "N-A")))) :arg1 (a / and :op1 (t / thing :arg1-of (d / decide-01 :arg3 (t2 / thing :arg1-of (d2 / draft-01 :arg0 (c3 / commission :mod (e / economy :mod (c4 / country-region))) :duration (t3 / temporary))))) :op2 (d3 / duty :mod (c5 / customs) :arg1-of (i / import-01 :arg2 (c6 / conditional :mod (f / full)) :duration (t4 / temporary)))) :op3 (p2 / provide-01 :arg1 (r / remission :mod (f2 / full) :mod (f3 / full) :poss (d4 / duty :mod (c7 / customs)))) :op4 (t5 / tax-01 :arg3 (a2 / and :op1 (r2 / rest) :op2 (s / sport))))
(a / and :op1 (c / come-out-09 :arg1 (p / person :name (n / name :op1 "Norris")) :arg2 (t / tigers :mod (' / '')) :time (s / since :op1 (a2 / acquire-01 :arg0 (p2 / person) :arg1 (a3 / acquire-01 :arg0 (p3 / person) :arg1 (p4 / person :name (n2 / name :op1 "David" :op2 "Pryce") :arg0-of (h / have-org-role-91 :arg2 (p5 / pitcher))) :time (d / date-entity :month 7 :day 30))))) :op2 (d2 / defeat-01 :quant 1 :arg1 (p6 / person)))
(g / good :degree (m / most) :domain (s / self-sufficiency) :time (a / always) :location (i / i) :arg0-of (c / cause-01 :arg1 (v / vykusite :arg0 (y / you))))
(s / self-sufficiency :arg1 (g / good :degree (m / most)) :time (a / always) :arg1-of (c / cause-01 :arg0 (b / bite :arg1 (t / that))))
(a / and :op2 (r / represent-01 :polarity - :arg0 (i / i) :arg1 (i2 / i) :arg2 (t / trainer :arg1-of (n / need-01 :arg0 (i3 / i)))))
(h / hold-04 :arg0 (i / i) :arg1 (m / meet-03 :arg0 (i2 / i) :arg1 (g / government-organization :name (n / name :op1 "Ministry" :op2 "of" :op3 "Foreign" :op4 "Affairs") :poss (o / organization :name (n2 / name :op1 "UN" :op2 "Security" :op3 "Council"))) :time (l / late :op1 (m2 / month :mod (t / this)) :degree (m3 / more))))
(a / agree-01 :arg0 (i / i) :arg1 (w / way :mod (g / good) :manner-of (t / tell-01 :arg0 (t2 / they) :arg1 (h / history :arg0-of (d / detail-01) :mod (p / penalize-01 :manner (d2 / die-01))) :arg2 (i2 / it))))
(c / cause-01 :arg0 (f / fan :domain (p / person :name (n / name :op1 "Miliband")) :arg1-of (i / include-91 :arg2 (f2 / fan :arg0-of (o / oppose-01 :arg1 (p2 / person :name (n2 / name :op1 "Blair")))))) :arg1 (f3 / fan :arg1-of (i2 / include-91 :arg2 (f4 / fan :arg0-of (o2 / oppose-01 :arg1 (i3 / idea :topic (r / referendum)))))) :degree (m / more) :arg1-of (c2 / cause-01 :arg0 (a / and :op1 (r2 / realize-01 :polarity - :arg0 (p3 / person) :arg1 (p4 / principle :poss (p5 / person) :topic (f5 / favor-01 :arg1 (o3 / organization :name (n3 / name :op1 "EU" :op2 "Constitution") :mod (c3 / cancelled))))) :op2 (b / bury-01 :arg0 (p6 / person) :arg1 (p7 / person :arg0-of (v / vote-01 :arg1 (a2 / and :op1 (c4 / country) :op2 (c5 / country)))) :arg2 (p8 / person :arg0-of (w / win-01 :arg1 (t / ticket)))))))
(s / star)
(a / and :op1 (b / back-01 :arg0 (p / person :name (n / name :op1 "Hili")) :arg1 (d / decide-01 :arg0 (p2 / person) :arg1 (f / forgive :arg0 (p3 / person) :arg1 (m / match-03 :mod (i / important) :arg1-of (b2 / begin-01 :medium (f2 / friday :mod (i2 / important)))))) :mod (a2 / also)) :op2 (b3 / believe-01 :arg0 (p4 / person) :arg1 (r / return-01 :arg1 (g / guy :source (c / city :name (n2 / name :op1 "Canberra"))) :arg4 (t / team :consist-of (p5 / person :arg0-of (p6 / play-01 :arg1-of (l / long-03)))))))
(r / respond-01 :arg0 (c / company :arg0-of (s / support-01) :example (a / and :op1 (a2 / and :op1 (o / organization :name (n / name :op1 "UAB" :op2 "Vostok-Center")) :op2 (o2 / organization :name (n2 / name :op1 "Novo-Ziminskaya" :op2 "CHP")) :op3 (o3 / organization :name (n3 / name :op1 "LLC")) :op4 (o4 / organization :name (n4 / name :op1 "LLC"))) :op2 (c2 / company :arg0-of (h / have-org-role-91 :arg1 (o5 / organization) :arg3 (s2 / support-01))) :op3 (c3 / company :arg0-of (h2 / have-org-role-91 :arg1 (o6 / organization) :arg3 (s3 / support-01))) :op4 (c4 / company :arg0-of (h3 / have-org-role-91 :arg1 (o7 / organization) :arg3 (m / manage-01))) :op5 (c5 / company :arg0-of (m2 / manage-01 :arg1 (o8 / organization))))) :arg1 (a3 / appeal-01 :quant (a4 / all)))
(o / overtakes :arg0 (p / person :name (n / name :op1 "Ben" :op2 "Carson")) :arg1 (b / businessman) :arg3 (p2 / point :quant 19 :mod (w / whole) :location (c / contest :name (n2 / name :op1 (h / hypothetical) :op2 1 :op3 1))))
(g / get :arg1 (t / thing :arg1-of (t2 / think-01) :mod (t3 / this)))
(m / multi-sentence :snt1 (i / include-01 :arg0 (p / person :name (n / name :op1 "Schmidt")) :arg1 (p2 / person :name (n2 / name :op1 "Lamba")) :arg2 (b / book :arg1-of (w / write-01 :arg0 (p3 / person))) :medium (b2 / book) :arg1-of (w2 / write-01 :arg0 (p4 / person))) :snt2 (e / excellent-02 :mode (i2 / interrogative) :arg1 (p5 / person) :prep-in (l / life :mod (t / teach-01) :poss (p6 / person))))
(i / include-01 :arg1 (p / person :name (n / name :op1 "Schmidt") :arg1-of (i2 / include-91 :arg2 (p2 / person :name (n2 / name :op1 "Eissa" :op2 "Lamba") :arg0-of (e / express-01 :arg1 (b / book))))) :arg2 (e2 / express-01 :arg0 (p3 / person) :arg1 (s / serious-01 :arg1 (p4 / person) :arg2 (p5 / person :arg1-of (b2 / beautiful-02 :degree (m / most)) :arg0-of (h / have-03 :arg1 (b3 / business :arg1-of (h2 / have-03 :arg0 (p6 / person) :location (l / life :mod (t / teach-01) :poss (p7 / person)))))))))
(a / and :op1 (c / consider-01 :arg1 (i / invalid :quant (m / more-than :op1 11.7))) :op2 (l / lose-02 :arg1 (p / person :quant 24)))
(c / carry-out-03 :arg0 (a / attack-01 :arg1 (a2 / and :op1 (p / person :arg0-of (h / have-rel-role-91 :arg2 (e / enemy))) :op2 (p2 / person :arg0-of (h2 / have-rel-role-91 :arg1 (c2 / company :name (n / name :op1 "N-A")) :arg2 (e2 / enemy)))) :mod (a3 / artillery)) :arg1 (l / location :name (n2 / name :op1 "Baltic" :op2 "Sea" :op3 "Fleet")) :time (d / day :mod (l2 / last) :part-of (d2 / day)))
(a / and :op1 (l / lost :arg0 (p / person :arg0-of (l2 / lead-02 :arg1 (p2 / person :name (n / name :op1 "Natalie" :op2 "Buchs") :arg0-of (h / have-org-role-91 :arg1 (t / tournament))))) :arg1 (p3 / person :arg0-of (l3 / lead-02 :arg1 (c / country :name (n2 / name :op1 "Ukraine")))) :arg2 (w / win-01 :polarity - :arg0 (p4 / person) :arg2 (r / round :mod (f / final))) :degree (e / enough)) :op2 (l4 / lose-02 :arg0 (p5 / person) :arg1 (t2 / title) :manner (s / success)))
(s / say-01 :arg1 (p / person :arg0-of (a / author-01)) :arg2 (p2 / person :name (n / name :op1 "Rupert" :op2 "Steiner") :arg0-of (a2 / author-01)))
(p / purchase-01 :arg0 (o / organization :name (n / name :op1 "Glencore")) :arg1 (p2 / percentage-entity :value (N / N-A)) :arg2 (p3 / percentage-entity :value (N2 / N-A)) :time (a / after :op1 (a2 / announce-01 :arg0 (g / giant :arg0-of (m / mine-01)) :arg1 (g2 / get-01 :arg0 (g3 / giant) :arg1 (m2 / monetary-quantity :quant 2.5 :unit (d / dollar) :arg1-of (v / value-01 :arg2 (m3 / monetary-quantity :quant 2.5 :unit (d2 / dollar))) :arg1-of (d3 / do-02 :arg2 (s / strategy :purpose (r / reduce-01 :arg1 (d4 / debt :poss (o2 / organization))))))))))
(t / tell-01 :arg1 (l / look-up-05 :arg0 (p / person) :arg1 (c / class :poss (p2 / person)) :direction (f / forward)) :arg2 (p3 / person :arg0-of (s / study-01)))
(c / contrast-01 :arg1 (s / see-01 :arg0 (m / most) :arg1 (p / person :name (n / name :op1 "Sanders")) :arg1-of (i / instead-of-91 :arg2 (s2 / see-01 :polarity - :arg0 (p2 / person) :arg1 (m2 / man :mod (h / honest) :mod (h2 / honest)))) :degree (m3 / most) :compared-to (p3 / person :name (n2 / name :op1 "Carson"))) :arg2 (o / opine-01 :arg0 (p4 / person) :arg1 (h3 / have-03 :polarity - :arg0 (p5 / person) :arg1 (t / thing :arg1-of (o2 / opine-01) :topic (h4 / he)))))
(r / rule-out-02 :polarity - :arg0 (p / person :arg1-of (a / arrive-01 :location (c / continent :name (n / name :op1 "Europe")))) :arg1 (s / state :mod (m / militant :mod (e / extremism)) :arg0-of (h / have-org-role-91 :arg2 (m2 / militant))))
(s / say-01 :arg0 (h / he) :arg1 (t / thing :arg1-of (c / comment-01 :arg3 (m / motive :mod (s2 / such)))) :manner (' / ''))
(s / say-01 :arg0 (p / person :mod (c / country :name (n / name :op1 "N-A"))) :arg1 (p2 / possible-01 :polarity - :arg1 (d / do-02 :arg0 (p3 / person :name (n2 / name :op1 "Cristiano" :op2 "Ronaldo")) :arg1 (t / this) :mod (t2 / too))))
(s / show-01 :arg0 (o / organization :name (n / name :op1 "Voice")) :arg1 (p / person :arg1-of (b / broadcast-01 :location (p2 / prime-time))) :arg1-of (c / cause-01 :arg0 (w / want-01 :arg0 (p3 / person) :arg1 (g / gain-02 :arg0 (p4 / person) :arg1 (s2 / support-01 :quant (q / quantity :degree (e / equal) :compared-to (p5 / possible-01 :arg1 (g2 / gain-02))))))))
(l / lose-03 :arg0 (p / person :name (n / name :op1 "Jarrida" :op2 "Hain")) :arg1 (b / ball) :purpose (r / return-02 :arg0 (p2 / person) :arg1 (' / '' :mod (p3 / panting)) :arg2 (o / organization :name (n2 / name :op1 "Minnesota" :op2 "Vikings")) :time (o2 / ordinal-entity :value 1)))
(s / say-01 :arg0 (p / person :name (n / name :op1 "Andrew") :arg0-of (h / head-01 :arg1 (e / effort :mod (e2 / effort :mod (s2 / search-and-rescue))))) :arg1 (f / find-01 :arg1 (h2 / helicopter :arg1-of (c / catch-02 :arg2 (m / man)))))
(h / hero :domain (h2 / he) :beneficiary (a / and :op1 (p / person :arg0-of (h3 / have-rel-role-91 :arg1 (h4 / he) :arg2 (c / child))) :op2 (p2 / person :arg0-of (h5 / have-rel-role-91 :arg1 (h6 / he) :arg2 (w / wife)))))
(p / phone-number-entity :value (N / N-A))
(a / and :op1 (s / side :arg1 (s2 / side-01 :arg0 (s3 / someone) :arg1 (r / room :arg1-of (l / locked :arg2 (r2 / room :arg1-of (l2 / locked :arg0 (s4 / someone)))))) :time (m / moment :mod (t / that))) :op2 (s5 / side :domain (s6 / side-01 :arg0 (s7 / someone) :arg1 (a2 / and :op1 (d / draw-02) :op2 (p / persecution)))))
(c / cause-01 :arg0 (h / high-02 :arg1 (r / rate) :arg2 (d / declare-02 :arg1 (d2 / declare-02 :arg1 (d3 / depend-01 :polarity - :arg0 (d4 / develop-02 :arg1 (i / industry) :manner (i2 / intensive))))) :arg1 (b / become-01 :arg1 (c2 / country :quant 1 :arg1-of (i3 / include-91 :arg2 (a / and :op1 (c3 / country :arg0-of (o / overpopulated :degree (m / most))) :op2 (c4 / country :location (r2 / relative-position :op1 (w / world) :quant (m2 / most)))))) :arg2 (t / temporal-quantity :quant (N / N-A) :unit (y / year)))) :arg1 (h2 / high-02 :arg1 (r3 / rate)))
(s / say-01 :arg0 (p / person :name (n / name :op1 "Naryshkin")) :arg1 (v / violate-01 :arg0 (m / military :name (n2 / name :op1 "NATO")) :arg1 (a / and :op1 (v2 / value :mod (c / continent :name (n3 / name :op1 "N-A"))) :op2 (l / law :mod (i / international)) :quant (m2 / many))))
(s / say-01 :arg0 (r / report :mod (o / official)) :arg1 (a / attend-01 :arg0 (a2 / and :op1 (p / person :name (n / name :op1 "Li" :op2 "Keqiang") :arg0-of (h / have-org-role-91 :arg2 (m / minister :mod (p2 / prime)))) :op2 (p3 / person :arg0-of (h2 / have-org-role-91 :arg1 (p4 / person :name (n2 / name :op1 "Zhang" :op2 "Yunshan" :op3 "Gaoli")) :arg2 (m2 / minister)))) :arg1 (i / it) :mod (a3 / also) :time (a4 / after :op1 (m3 / meet-03))))
(t / think-01 :mode (i / imperative) :polarity - :arg0 (y / you) :arg1 (s / start-01 :arg1 (s2 / study-01 :arg0 (h / he) :location (u / university))) :mod (s3 / still) :time (t2 / topic))
(s / show-01 :arg0 (p / poll-01 :arg0 (p2 / person :name (n / name :op1 "Donald" :op2 "Trump"))) :arg1 (a / attitude :mod (p3 / positive) :topic (e / estate :mod (r / real) :mod (t / this))) :time (b / before :op1 (a2 / announce-01 :arg0 (p4 / person) :arg1 (c / candidacy :poss (p5 / person) :location (m / mid-june))) :mod (j / just)))
(a / and :op1 (l / lack-01 :arg0 (p / professional :source (c / country :mod (p2 / poor))) :arg1 (l2 / level :mod (s / skill))) :op2 (c2 / cooperate-01 :arg0 (p3 / professional) :arg1 (p4 / person :arg1-of (e / expert-01)) :arg2 (c3 / country :mod (r / rich))) :time (a2 / after :op1 (w / war :name (n / name :op1 "N-A"))))
(a / and :op1 (l / lack-01 :arg0 (p / professional :source (c / country :mod (p2 / poor))) :arg1 (l2 / level :mod (s / skill)) :purpose (c2 / cooperate-01 :arg0 (p3 / professional) :arg2 (a2 / and :op1 (p4 / person :arg0-of (s2 / specialize-01)) :op2 (u / universe :source (c3 / country :mod (r / rich)))))) :time (a3 / after :op1 (e / expel-01 :arg0 (p5 / professional) :arg1 (p6 / professional :source (c4 / country :mod (p7 / poor))))))
(a / and :op1 (d / die-01 :arg1 (p / person :quant (a2 / about :op1 80,000)) :arg3 (d2 / disease :arg1-of (r / relate-01 :arg2 (d3 / disease)))) :op2 (c / cost-01 :arg1 (s / smoke-02) :arg2 (m / monetary-quantity :quant 2 :unit (d4 / dollar :mod (g / government-organization :name (n / name :op1 "NHS"))))))
(p / phone-number-entity :value (N / N-A))
(a / and :op1 (p / pressure-01 :arg0 (i / i) :arg1 (t / they)) :op2 (m / make-02 :arg0 (i2 / i) :arg1 (r / responsible-01 :arg0 (t2 / they) :arg1 (d / decide-01 :arg0 (t3 / they)))))
(c / change-01 :polarity - :arg1 (e / employ-01 :polarity -))
(c / contrast-01 :arg1 (a / and :op1 (b / build :arg1 (a2 / area :arg1-of (n / near-02 :arg2 (f / future :arg1-of (n2 / near-02)))) :location (l / location :name (n3 / name :op1 "Domodedovo"))) :op2 (c2 / cemeteries :arg0 (p / person :name (n4 / name :op1 "Shcherbinsky")) :time (l2 / late :degree (m / more)) :location (p2 / part :mod (o / other) :part-of (c3 / capital)))) :arg2 (f2 / future :arg1-of (n5 / near-02)))
(h / have-concession-91 :arg2 (a / agree-01 :polarity - :arg0 (e / everyone) :arg1 (d / determine-01 :arg0 (a2 / and :op1 (i / individual :arg0-of (c / confiscate-01 :arg1 (p / person))) :op2 (i2 / individual :arg0-of (c2 / confiscate-01 :arg1 (p2 / person)))) :arg1 (p3 / person :arg0-of (p4 / play-01)))))
(c / cause-01 :arg1 (t / take-01 :polarity - :arg0 (p / person :arg0-of (h / have-rel-role-91 :arg1 (y / you) :arg2 (f / friend))) :arg1 (p2 / person :arg0-of (h2 / have-rel-role-91 :arg1 (y2 / you) :arg2 (f2 / friend))) :purpose (d / drink-01 :arg0 (p3 / person) :location (c2 / center))) :condition (v / visit-01 :arg0 (y3 / you) :location (c3 / comedy) :time (w / weekend :mod (t2 / this))))
(a / add-01 :arg0 (h / he) :arg1 (m / mean-01 :arg1 (p / plan-01 :arg1 (e / expand-01 :arg1 (s / sports :mod (j / jd)))) :arg2 (r / reduce-01 :arg1 (r2 / reduce-01 :arg1 (n / number :quant-of (j2 / job :mod (a2 / additional)))))))
(m / multi-sentence :snt1 (a / and :op1 (w / want-01 :polarity - :arg0 (p / person :arg0-of (h / have-rel-role-91 :arg1 (i / i) :arg2 (f / friend))) :arg1 (m2 / maintain-01 :arg0 (p2 / person) :arg1 (c / contact-01 :arg0 (p3 / person) :arg1 (c2 / country :name (n / name :op1 "Britain")) :mod (e / external)))) :op2 (l / leave-15 :polarity - :arg0 (p4 / person) :arg1 (w2 / we) :location (a2 / along :op1 (c3 / country :name (n2 / name :op1 "France"))))) :snt2 (s / say-01 :arg0 (p5 / person) :arg1 (o / offer-01 :arg0 (a3 / and :op1 (p6 / person :arg0-of (h2 / have-org-role-91 :arg2 (m3 / minister))) :op2 (p7 / person :arg0-of (h3 / have-org-role-91 :arg2 (o2 / official)))) :arg1 (s2 / say-01 :arg0 (p8 / person) :arg1 (o3 / or :op1 (r / remain-01 :arg1 (a4 / and :op1 (p9 / person :arg0-of (h4 / have-org-role-91 :arg2 (m4 / minister))) :op2 (p10 / person :arg0-of (h5 / have-org-role-91 :arg2 (o4 / official))) :location (c4 / capitals :quant (s3 / some))) :manner (u / understand-01 :arg0 (p11 / person))) :op2 (l2 / leave-11 :arg0 (w3 / we)))))))
(m / multi-sentence :snt1 (a / armor-01 :mode (i / imperative) :arg0 (w / we)) :snt2 (c / carry-out-03 :arg0 (' / '' :mod (d / damn :degree (m2 / most))) :arg1 (b / broadcast-01 :arg0 (i2 / it) :medium (t / text))))
(m / multi-sentence :snt1 (w / word-01 :arg0 (p / person :name (n / name :op1 "Neilson")) :arg1 (w2 / word-01 :arg0 (p2 / person) :arg1 (q / question-03 :polarity - :arg0 (i / i) :arg1 (e / ethical)))) :snt2 (c / comment-01 :polarity - :arg0 (i2 / i) :arg3 (g / game)))
(d / debut :arg1 (n / news :mod (i / important) :topic (s / seventh :arg0 (p / person :name (n2 / name :op1 "Erik" :op2 "Thomson") :arg0-of (h / have-org-role-91 :arg2 (r / rafters) :time (f / former))))) :mod (i2 / important))
(r / receive-01 :arg0 (p / person :name (n / name :op1 "Mirzoyev") :arg0-of (h / have-org-role-91 :arg1 (s / service :mod (n2 / news) :mod (c / country :name (n3 / name :op1 "N-A"))) :arg2 (' / ''))) :arg1 (s2 / sentence-01 :arg1 (p2 / person) :arg2 (i / imprison-01 :arg1 (p3 / person) :arg2 (c2 / colony :mod (p4 / penal)) :duration (t / temporal-quantity :quant (N / N-A) :unit (y / year)))))
(a / argue-01 :arg0 (e / everyone :arg0-of (s / see-01 :arg1 (r / race :poss (y / you)) :location (c / city :name (n / name :op1 "Beijing")))) :arg1 (r2 / run-13 :arg1-of (n2 / nice-01 :degree (v / very))))
(r / receive-01 :arg0 (v / victim :mod (o / other)) :arg1 (s / sum :mod (t / this) :quant (h / half)))
(t / trick :domain (t2 / this) :poss (p / person :name (n / name :op1 "Zhirinovsky") :mod (s / style :mod (s2 / scum. :mod (s3 / such)))) :mod (a / another) :arg1-of (m / mean-01 :arg2 (p2 / protest-01 :polarity - :arg0 (p3 / person) :prep-against (t3 / thing :arg2-of (r / result-01 :arg1 (t4 / thing :arg2-of (r2 / result-01 :arg1 (p4 / party :mod (p5 / politics) :arg1-of (s4 / specific-02)))))))) :mod (a2 / another))
(c / consider-01 :polarity - :arg0 (p / person :arg1-of (r / register-02) :arg1-of (i / include-91 :arg2 (p2 / person :arg0-of (v / vote-01) :arg1-of (r2 / register-02)) :arg3 (p3 / percentage-entity :value (N / N-A)))) :arg1 (a / and :op1 (f / fair) :op2 (c2 / credible) :domain (p4 / person)))
(e / engines :arg1 (e2 / engine :mod (d / diesel) :prep-with (v / volume :quant-of (p / person :quant 2.2 :arg0-of (l / l :arg1-of (h / high-02))))) :arg2 (r / range :arg1-of (w / wide-02) :consist-of (s / speed)))
(a / and :op1 (m / monday :mode (e / expressive)) :op2 (r / report-01 :arg1 (s / shoot-02 :arg0 (h / he) :arg1 (s2 / someone))))
(m / multi-sentence :snt1 (c / contrast-01 :arg2 (c2 / complain-01 :arg0 (m2 / mountain) :arg1 (c3 / complain-01 :quant (m3 / more-than :op1 124) :arg1-of (d / differ-02)) :time (a / already))) :snt2 (s / say-01 :arg0 (p / person :name (n / name :op1 "Alexander" :op2 "Makeeva")) :arg1 (v / violate-01 :polarity - :arg1 (v2 / vings :arg1 (b / ballots :mod (u / unaccounted))))))
(l / let-01 :mode (i / imperative) :polarity - :arg0 (y / you) :arg1 (f / forget-01 :arg0 (i2 / i) :arg1 (i3 / it)))
(a / and :op2 (f / forget-01 :mode (i / imperative) :polarity - :arg0 (y / you) :arg1 (f2 / forget-01 :arg0 (i2 / i) :arg1 (i3 / it))))
(m / make-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg2 (p2 / person :arg0-of (p3 / participate-01)))) :arg1 (i / it) :arg4 (r / round :mod (f / final)) :time (s / season :mod (s2 / season)))
(r / reach-01 :arg0 (a / and :op1 (p / person :name (n / name :op1 "Kaldero") :arg0-of (h / have-org-role-91 :arg2 (p2 / person :arg0-of (p3 / participate-01)))) :op2 (p4 / person :name (n2 / name :op1 "Geoff" :op2 "Britten") :arg0-of (h2 / have-org-role-91 :arg2 (p5 / person :arg0-of (o / operate-01))))) :arg1 (r2 / round :mod (f / final)) :time (d / during :op1 (s / season :mod (s2 / season :mod (s3 / season :quant 2)))))
(d / detain-01 :arg1 (p / person :arg0-of (d2 / detain-01 :arg1 (i / it) :time (a / after :op1 (n / now) :quant (t / temporal-quantity :quant (N / N-A) :unit (y / year))))) :arg2 (t2 / that))
(d / die-01 :arg1 (p / person :arg0-of (i / inhabit-01 :arg1 (a / area :location (a2 / and :op1 (l / location :name (n / name :op1 "Colorado" :op2 "City")) :op2 (l2 / local-region :name (n2 / name :op1 "N-A"))))) :arg0-of (c / collapse-01 :arg1 (e / element))))
(a / and :op1 (s / send-01 :arg0 (e / each) :arg1 (p / person :arg0-of (h / have-org-role-91 :arg2 (p2 / person :arg1-of (e2 / expert-01)))) :arg2 (p3 / petition-01 :arg0 (p4 / person) :arg1 (p5 / participate-01 :arg0 (p6 / person) :arg1 (r / rating)))) :op2 (g / give-01 :arg1 (o / opportunity) :arg2 (p7 / person :quant 10 :arg0-of (h2 / have-org-role-91 :arg1 (c / company :mod (o2 / other)) :arg2 (e3 / executive)))))
(s / soloists :arg0 (a / and :op1 (p / person :name (n / name :op1 "Dargin") :arg0-of (l / learning :arg1 (f / folk :arg1-of (p2 / perfect-02)))) :op2 (p3 / person :arg0-of (h / have-org-role-91 :arg1 (f2 / folk :arg1-of (p4 / perfect-02)))) :op3 (p5 / person :arg0-of (h2 / have-org-role-91 :arg2 (t / tatar))) :op4 (p6 / person :arg0-of (h3 / have-org-role-91 :arg2 (d / dances))) :op5 (p7 / person :arg0-of (h4 / have-org-role-91 :arg2 (d2 / dances)))))
(w / win-01 :arg0 (p / person :name (n / name :op1 "Panikadila")) :duration (c / couple :op1 (t / temporal-quantity :quant (N / N-A) :unit (d / day))))
(m / multi-sentence :snt1 (r / recognize-02 :arg0 (i / it) :arg1 (t / that)) :snt2 (a / and :op1 (p / possible-01 :mode (i2 / interrogative) :arg1 (b / better :arg0 (i3 / it))) :op2 (g / good :degree (m2 / more) :domain (f / formulate-01 :arg1 (i4 / it)))) :snt3 (c / contrast-01 :arg1 (p2 / possible-01 :mode (i5 / interrogative) :arg1 (f2 / formulate :arg1 (i6 / it))) :arg2 (c2 / consider-01 :arg1 (j / just-02 :polarity - :arg1 (i7 / i) :prep-in (f3 / fact :arg1-of (m3 / make-01 :arg0 (i8 / i)))))))
(o / opponent :arg0 (l / location :name (n / name :op1 "Malmo") :arg1-of (d / defeat-01) :arg1-of (c / celtic :arg2 (s / stage :mod (t / this)))) :arg1 (p / person :quant 9 :arg0-of (p2 / play-01) :arg1-of (i / include-91 :arg2 (p3 / person :quant 9 :arg0-of (p4 / play-01) :mod (w / world-class)))) :arg2 (f / field :mod (t2 / this)) :time (e / early :op1 (e2 / early :op1 (d2 / date-entity :decade (N / N-A)))) :arg1-of (c2 / cause-01 :arg0 (a / and :op1 (p5 / person :quant 5 :arg0-of (d3 / defend-01)) :op2 (p6 / person :quant 5 :arg0-of (d4 / defend-01)) :op3 (p7 / person :quant 2 :arg0-of (h / have-org-role-91 :arg2 (m / midfielders)))) :location (f2 / field)))
(s / sign-02 :arg0 (a / and :op1 (p / person :name (n / name :op1 "Andrey" :op2 "Bocharov")) :op2 (p2 / person :name (n2 / name :op1 "Nurlan" :op2 "Nogayev") :arg0-of (h / have-org-role-91 :arg2 (a2 / akim)))) :arg1 (a3 / agree-01 :arg1 (c / cooperate-01)) :time (d / date-entity :month 9 :day 16))
(c / contrast-01 :arg1 (p / possible-01 :arg1 (s / see-01 :arg0 (i / i) :arg1 (b / ball :mod (o / only) :arg1-of (f / fly-01 :time (d / direction :mod (a / another)))))) :arg2 (s2 / see-01 :polarity - :arg0 (i2 / i) :arg1 (d2 / drive-01 :arg0 (y / you) :path (u / under :op1 (p2 / person :name (n / name :op1 "Luke"))))))
(o / offer-01 :arg1 (s / set-02 :arg0 (s2 / set :name (n / name :op1 (w / widest) :op2 (w2 / widest))) :arg1 (s3 / system :mod (s4 / safe-01) :arg1-of (a / activity-06)) :manner (p / precise) :location (o2 / organization :name (n2 / name :op1 "Mazda"))))
(o / offer-01 :arg1 (c / cx-5 :arg0 (o2 / organization :name (n / name :op1 "Mazda")) :arg1 (s / system :mod (s2 / safe-01) :arg1-of (a / activity-06))))
(s / say-01 :arg0 (p / person :arg0-of (r / represent-01 :arg1 (c / country :name (n / name :op1 "Ukraine")) :time (e / early :degree (m / more))) :arg0-of (r2 / represent-01 :arg1 (p2 / person :name (n2 / name :op1 "Leonid" :op2 "Kuchma") :arg0-of (h / have-org-role-91 :arg2 (p3 / president) :time (f / former)))) :arg0-of (h2 / have-org-role-91 :arg1 (c2 / country) :arg2 (p4 / president) :time (f2 / former))) :arg1 (c3 / contrast-01 :arg1 (c4 / change-01 :polarity - :arg0 (a / and :op1 (o / openness) :op2 (l / location :name (n3 / name :op1 "Lugansk" :op2 "Republic"))) :arg1 (p5 / position :poss (a2 / and) :topic (n4 / negotiate-01)) :manner (f3 / fundamental)) :arg2 (b / become-01 :arg1 (t / tone :poss (d / dialogue-01)) :arg2 (p6 / positive :degree (m2 / more)))) :time (e2 / early :degree (m3 / more) :time (e3 / early :degree (m4 / more))))
(s / say-01 :arg0 (t / thing :arg1-of (r / report-01)) :arg1 (g / get-01 :arg0 (p / person :name (n / name :op1 "Deng")) :arg1 (i / injure-01 :arg1 (a / and :op1 (h / head) :op2 (t2 / trunk) :op3 (h2 / hips)) :mod (s2 / stupid) :quant (s3 / several))))
(k / keep-01 :arg0 (p / person :name (n / name :op1 "Sam" :op2 "Wood")) :arg1 (a / amusement-park :name (n2 / name :op1 "N-A")) :time (b / before :op1 (f / final)))
(e / expect-01 :arg1 (c / charge-05 :arg1 (h / he) :arg2 (l / leave-11 :arg0 (h2 / he) :arg1 (s / scene)) :arg0-of (v / violate-01 :arg1 (v2 / violate-01 :arg1 (r / rule :mod (t / traffic) :mod (o / other))))))
(s / say-01 :arg0 (p / person :name (n / name :op1 "Nikita" :op2 "Stasishin") :arg0-of (h / have-org-role-91 :arg1 (m / ministry) :arg2 (d / director)) :arg0-of (h2 / have-org-role-91 :arg1 (m2 / ministry) :arg2 (d2 / director))) :arg1 (d3 / develop-02 :arg0 (m3 / ministry) :arg1 (p2 / procedure :topic (r / rehabilitation)) :beneficiary (p3 / person :arg0-of (d4 / develop-02))))
(a / and :op1 (c / come-01 :arg1 (w / we) :arg4 (f / fact :topic (p / possible-01 :arg1 (m / move-01 :arg0 (b / bank :mod (m2 / main)) :arg2 (t / thing)))) :ord (o / ordinal-entity :value 1)) :op2 (s / say-01 :arg0 (i / i) :arg1 (p2 / person :name (n / name :op1 "Angel" :op2 "Ubide") :mod (f2 / fellow :mod (s2 / senior)) :location (e / economics :mod (o2 / organization :name (n2 / name :op1 "Peterson" :op2 "Institute" :op3 "for" :op4 "International"))))) :ord (o3 / ordinal-entity :value 1))
(t / tell-01 :arg1 (t2 / talk-01 :polarity - :arg0 (p / person) :arg1 (i / it) :time (e / ever)) :arg2 (p2 / person :arg0-of (h / have-org-role-91 :arg1 (p3 / person :name (n / name :op1 "Tsipras")) :arg2 (m / minister))))
(a / and :op1 (h / hard-02 :arg1 (i / it) :degree (v / very) :beneficiary (i2 / i)) :op2 (s / sorry-01 :arg1 (i3 / i) :degree (v2 / very)))
(m / multi-sentence :snt1 (c / cause-01 :arg1 (e / expertise :domain (e2 / expertise :mod (s / such)) :time (a / always) :mod (s2 / such))) :snt2 (s3 / show-01 :arg0 (t / they) :arg1 (n / need-01 :mode (i / interrogative) :arg1 (c2 / change-01 :arg1 (s4 / sex) :accompanier (s5 / surgery-01))) :mod (j / just)))
(h / help-01 :arg0 (p / person :arg0-of (s / sponsor-01)) :arg1 (c / celebrate-02 :arg0 (p2 / person) :arg1 (d / day :mod (c2 / city))))
(a / and :op1 (p / provide-01 :arg0 (p2 / person :arg0-of (p3 / participate-01) :mod (e / each)) :arg1 (a2 / and :op1 (l / login) :op2 (p4 / password)) :arg2 (a3 / access-01 :arg0 (p5 / person) :arg1 (s / site))) :op2 (p6 / possible-01 :arg1 (s2 / set-02 :arg0 (p7 / person) :arg1 (e2 / evaluate-01 :arg0 (p8 / person)) :arg2 (c / criteria :purpose (d / direction :mod (f / functional :mod (e3 / each)))))))
(w / word-01 :arg0 (o / organization :name (n / name :op1 "Mazda")) :arg1 (w2 / write-01 :arg0 (p / person :mod (c / country :name (n2 / name :op1 "N-A"))) :arg1 (h / hieroglyphs :mod (c2 / country))) :manner (s / specific-02))
(c / condition :topic (c2 / create-01 :arg1 (n / news)))
(s / say-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg2 (s2 / scientist))) :arg1 (d / demonstrate-01 :arg0 (w / worm) :arg1 (c / capable-01 :arg1 (t / techniques :mod (n / new) :arg1-of (c2 / call-01 :arg2 (n2 / name :op1 (' / '') :op2 (m / monogenetic) :op3 (m2 / monogenetic)))) :arg2 (e / essence :arg1-of (u / use-01 :arg2 (a / and :op1 (c3 / cell :mod (c4 / certain)) :op2 (c5 / cell :mod (h2 / heart)) :op3 (m3 / muscle)) :location (o / outside :op1 (b / body)))))))
(c / construct-01 :arg1 (h / house :beneficiary (p / person :arg1-of (e / employ-01 :arg0 (s / sector :arg1-of (p2 / public-02))))) :prep-in (p3 / perspective))
(w / woe :poss (a / and :op1 (s / security :mod (a2 / agriculture)) :op2 (s2 / security :mod (f / food))) :arg1-of (k / key-02))
(a / arrive-01 :arg1 (r / refugee :quant (m / more-than :op1 90)) :time (s / since :op1 (b / begin-01 :arg1 (s2 / september :location (c / country)) :time (a2 / already))))
(a / and :op1 (s / speak-01 :arg0 (i / i) :location (g / game :mod (m / military) :mod (w / world) :arg0-of (t / take-01 :arg1 (c / company :name (n / name :op1 "N-A") :location (c2 / country))))) :op2 (t2 / think-01 :arg0 (i2 / i) :arg1 (r / rest) :time (t3 / then)))
(b / benefit-01 :polarity - :arg0 (l / lend-01 :arg2 (p / percentage-entity :value (N / N-A))) :arg1 (a / anyone))
(t / topic :mod (s / some) :arg1-of (o / opine-01 :arg0 (y / you)) :arg1-of (o2 / opine-01 :arg0 (y2 / you)) :arg1-of (o3 / opine-01 :arg0 (y3 / you)) :arg1-of (o4 / opine-01 :arg0 (y4 / you)))
(t / topic :mode (i / interrogative) :mod (a / any) :arg1-of (d / discuss-01 :arg0 (y / you) :arg1-of (t2 / think-01 :arg0 (w / world :mod (w2 / whole)))))
(m / multi-sentence :snt1 (s / state-01 :arg0 (p / person :name (n / name :op1 "Fred" :op2 "Smith") :arg0-of (h / have-org-role-91 :arg2 (c / ceo))) :arg1 (a / and :op1 (p2 / person :arg0-of (h2 / have-org-role-91 :arg2 (c2 / chairman))) :op2 (p3 / person :arg0-of (h3 / have-org-role-91 :arg2 (c3 / ceo))))) :snt2 (a2 / and :op1 (w / work-01 :arg0 (p4 / person) :arg1 (t / take-01 :arg0 (p5 / person) :arg1 (a3 / account :mod (e / economy)))) :op2 (c4 / compare-01 :arg1 (c5 / condition :mod (e2 / economy)) :arg2 (a4 / and :op1 (f / forecast-01) :op2 (t2 / trade-01 :arg0 (w2 / world)) :mod (e3 / especially)))))
(c / call-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (c2 / country :name (n / name :op1 "Syria")) :arg2 (p2 / president))) :arg1 (c3 / cause :arg0-of (c4 / cause-01 :arg1 (a / animosity :arg1 (w / world-region :name (n2 / name :op1 "West"))))) :arg2 (c5 / country :name (n3 / name :op1 "Russia")))
(t / take-01 :arg1 (r / rider) :arg3 (o / organization :name (n / name :op1 "Royal" :op2 "Melbourne" :op3 "Hospital")) :manner (h / helicopter :mod (s / serious)) :time (a / after :op1 (c / car :poss (h2 / he) :location (p / peninsula :name (n2 / name :op1 "N-A")) :time (m / morning :mod (s2 / saturday)))))
(a / admit-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (s / state) :arg2 (g / governor :mod (s2 / state)))) :arg1 (a2 / admit-01 :arg0 (p2 / person :name (n / name :op1 "Sergei" :op2 "Naryshkin") :arg0-of (h2 / have-org-role-91 :arg1 (c / country) :arg3 (s3 / speak-01))) :arg1 (d / destabilize-01 :arg0 (c2 / country) :arg1 (s4 / situation :location (w / world-region :name (n2 / name :op1 "Middle" :op2 "East"))) :arg2 (w2 / wave-04 :arg1 (c3 / come-01 :arg1 (r / refugee) :arg4 (i / island :name (n3 / name :op1 "N-A"))))) :manner (d2 / deliberate)))
(g / get-01 :arg0 (h / he) :arg1 (f / feedback :mod (e / enthusiastically) :quant (m / multiple :op1 (m2 / mass-quantity :quant (N / N-A) :unit (t / ton)))) :arg2 (f2 / fan))
(s / state-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (g / government-organization :name (n / name :op1 "Parliament") :location (c / country :name (n2 / name :op1 "N-A"))) :arg2 (m / member))) :arg1 (a / and :op1 (q / question-03 :arg0 (p2 / person :arg0-of (h2 / have-org-role-91 :arg2 (m2 / minister :mod (p3 / prime)))) :arg1 (c2 / cause :arg0-of (c3 / cause-01 :arg1 (c4 / confront-01 :arg0 (p4 / person))))) :op2 (a2 / and :op1 (a3 / answer-01 :arg0 (p5 / person) :arg1 (t / thing :arg1-of (a4 / answer-01) :mod (i / ingenious)) :mod (a5 / also)) :op2 (e / exchange-01 :arg0 (p6 / person) :arg1 (t2 / thing :arg1-of (a6 / answer-01 :arg2 (p7 / person))) :mod (a7 / also)) :op3 (e2 / exchange-01 :arg0 (p8 / person) :arg1 (q2 / question-01 :mod (s2 / serious) :example (a8 / and :op1 (p9 / poverty) :op2 (i2 / inequality) :op3 (p10 / problem)) :time (b / before :op1 (p11 / person :mod (y / young))))))))
(m / multi-sentence :snt1 (a / and :mode (i / interrogative) :op1 (b / be-located-at-91 :arg1 (g / game :mod (t / this)) :arg2 (t2 / threshold)) :op2 (t3 / take-01 :mode (i2 / imperative) :arg0 (y / you) :arg1 (t4 / thing :arg2-of (m2 / match-01 :arg1 (l / league :location (c / continent :name (n / name :op1 "Europe"))))))) :snt2 (a2 / and :mode (i3 / interrogative) :op1 (t5 / try-01 :mode (i4 / interrogative) :arg0 (w / we) :arg1 (p / prepare-02 :arg1 (w2 / we) :arg2 (g2 / gain-02 :arg0 (w3 / we) :arg1 (w4 / win-01)) :manner (w5 / well :degree (v / very))))))
(a / announce-01 :arg1 (t / thing :arg1-of (d / decide-01)) :location (c / cet :quant 20.00 :location (t2 / thursday)))
(c / contrast-01 :arg2 (a / and :op1 (b / believe-01 :arg0 (p / person :name (n / name :op1 "Tomsula")) :arg1 (p2 / person :arg0-of (p3 / play-01 :arg1 (p4 / person)))) :op2 (g / give-01 :arg0 (p5 / person) :arg1 (o / opportunity :mod (a2 / another) :purpose (r / return-02 :arg0 (p6 / person) :arg1 (p7 / punt))) :arg2 (p8 / person :name (n2 / name :op1 "Haney"))) :op3 (e / engage-01 :arg1 (p9 / person) :time (a3 / after :op1 (i / injure-01 :arg1 (p10 / person))))))
(b / become-01 :arg1 (r / resource :mod (c / credit)) :arg2 (a / access-01 :arg1 (r2 / resource) :degree (m / more)))
(p / play-01 :arg0 (h / he) :mod (c / cricket) :mod (u / unpredictable) :arg1-of (s / see-01 :arg0 (w / we) :time (s2 / season :mod (t / this))) :arg1-of (s3 / see-01 :arg0 (w2 / we) :time (s4 / season :mod (t2 / this)) :time (e / earn-01 :arg0 (h2 / he) :arg1 (m / match-03 :quant 236 :arg1-of (m2 / match-01 :arg2 (p2 / platform :mod (b / bridge) :arg0-of (o / oppose-01 :arg1 (b2 / bridge))) :time (a / already))))))
(c / contrast-01 :arg2 (g / give-01 :arg0 (a / and :op1 (p / person :name (n / name :op1 "Sarah" :op2 "Mackay")) :op2 (p2 / person :name (n2 / name :op1 "Snezana" :op2 "Markoski")) :op3 (p3 / person :name (n3 / name :op1 "Lanah" :op2 "Jeavons-Fellows"))) :arg1 (h / hint :topic (c2 / company)) :time (m / meet-03 :arg0 (w / we) :arg1 (a2 / and :op1 (p4 / person) :op2 (p5 / person :name (n4 / name :op1 "Lanah" :op2 "Jeavons-Fellows")) :op3 (p6 / person :name (n5 / name :op1 "Lanah" :op2 "Jeavons-Fellows"))) :time (d / day :mod (t / that))) :time (m2 / meet-03 :arg0 (w2 / we) :arg1 (g2 / girl :quant 3))))
(r / reach-01 :arg1 (a / attend-02 :arg1 (i / it) :mod (n / new)) :time (t / then))
(w / warn-01 :arg0 (p / person :name (n / name :op1 "Sergei" :op2 "Lavrov") :arg0-of (h / have-org-role-91 :arg1 (c / country :name (n2 / name :op1 "US")) :arg2 (s / secretary :mod (s2 / state)))) :arg1 (c2 / conflict-01 :arg0 (p2 / person :name (n3 / name :op1 "Bashar" :op2 "Assad") :arg0-of (h2 / have-org-role-91 :arg1 (c3 / country) :arg2 (p3 / president))) :arg1 (c4 / conflict-01) :location (c5 / country)) :time (c6 / converse-01 :arg0 (p4 / person :arg0-of (h3 / head-01 :arg1 (p5 / person :arg0-of (h4 / have-org-role-91 :arg1 (c7 / country) :arg2 (m / minister :mod (f / foreign)))) :arg2 (m2 / minister :mod (f2 / foreign)))) :arg1 (s3 / support-01 :arg0 (c8 / country :name (n4 / name :op1 "Russia")) :arg1 (p6 / person :name (n5 / name :op1 "Bashar" :op2 "Assad") :arg0-of (h5 / have-org-role-91 :arg1 (c9 / country) :arg2 (p7 / president))))))
(l / look-02 :arg0 (s / situation) :arg1 (d / differ-02 :arg1 (g / gap :mod (i / income)) :arg2 (a / and :op1 (d2 / develop-02 :arg1 (e / economy)) :op2 (r / rise-01 :arg1 (g2 / gap)))) :prep-in (f / fact))
(c / contrast-01 :arg1 (k / know-01 :polarity - :arg0 (i / i) :arg1 (t / thing :manner-of (s / subsidize-01 :arg1 (t2 / theory :mod (e / economy))))) :arg2 (h / hope-01 :arg0 (i2 / i) :arg1 (j / justify-01 :arg1 (m / measure-01 :mod (t3 / this)))))
(m / multi-sentence :snt1 (c / cause-01 :arg1 (t / try-01 :arg0 (y / you) :arg1 (d / do-02 :arg0 (y2 / you) :arg1 (s / something :arg1-of (d2 / differ-02))) :condition (t2 / try-01 :arg0 (y3 / you) :arg1 (d3 / do-02 :arg0 (y4 / you) :arg1 (s2 / something :arg1-of (d4 / differ-02)))))) :snt2 (e / example :quant 2 :arg1-of (c2 / come-01 :arg4 (m2 / mind :poss (i / i)) :mod (a / actual) :arg1-of (s3 / say-01 :arg0 (p / person :name (n / name :op1 "Bingham"))))))
(c / confirm-01 :arg0 (p / person :name (n / name :op1 "Cristiano" :op2 "Ronaldo")) :arg1 (l / level :poss (i / it)))
(i / indicate-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg2 (p2 / person :arg1-of (e / expert-01)))) :arg1 (g / give-01 :arg0 (p3 / person :name (n / name :op1 "Rick" :op2 "Perry")) :arg1 (p4 / popularity :poss (p5 / person :name (n2 / name :op1 "Herman" :op2 "Cain")) :arg1-of (g2 / grow-01 :arg2 (p6 / process-02 :arg1 (n3 / nominate-01))) :quant (n4 / none)) :arg2 (p7 / person) :time (t / time :mod (t2 / this)) :location (t3 / time :mod (t4 / this))))
(a / and :op1 (g / gather-03 :location (l / location :name (n / name :op1 "Brighton")) :purpose (m / meet-03 :mod (a2 / amphibious))) :op2 (d / decide-01 :arg0 (o / organization :name (n2 / name :op1 "TUC")) :arg1 (w / want-01 :polarity - :arg0 (p / person) :arg1 (t / they) :mod (a3 / anyway) :condition (d2 / destroy-01 :arg0 (p2 / person) :arg1 (s / secure-02 :arg1 (s2 / society))))) :location (l2 / location :name (n3 / name :op1 "Brighton")))
(o / or :op2 (s / strolling :arg0 (a / animal :mod (s2 / small :mod (s3 / such))) :arg1 (s4 / street) :mod (j / just)))
(s / say-01 :arg0 (o / organization :name (n / name :op1 "Black" :op2 "Lives" :op3 "Matter" :op4 "Network") :arg0-of (h / have-org-role-91 :arg1 (m / movement-07))) :arg1 (g / group :consist-of (l / love-01) :domain (o2 / organization)))
(f / friendship :location (h / heart :part-of (b / battle-01 :mod (t / this))) :purpose (t2 / take-on-09 :arg0 (f2 / friendship) :arg1 (c / challenge-01 :arg2 (t3 / this))))
(n / note-01 :mode (i / imperative) :arg0 (n2 / note) :arg1 (p / person :arg0-of (p2 / play-01) :arg1-of (c / connect-01 :arg2 (d / destabilize-01 :arg1 (s / shoulder :part-of (s2 / shoulder :mod (r / right))))) :mod (r2 / right)))
(a / and :op1 (r / remove-01 :arg0 (c / company :name (n / name :op1 "Facebook")) :arg1 (c2 / comment-01 :arg0 (c3 / company))) :op2 (d / disparaging :arg0 (c4 / company) :arg1 (a2 / and :op1 (p / person :arg0-of (u / use-01)) :op2 (r2 / refugee))))
(c / contrast-01 :arg1 (g / good :polarity - :domain (i / it) :mod (e / especially)) :arg2 (f / fall-01 :arg1 (i2 / it) :arg4 (p / point :arg1-of (n / need-01)) :arg1-of (d / direct-02)))
(f / form :mod (s / school :mod (c / country :name (n / name :op1 "N-A"))) :arg1-of (p / possible-01) :mod (f2 / form :mod (s2 / school :mod (c2 / country :name (n2 / name :op1 "N-A")))) :arg1-of (p2 / possible-01) :mod (o / only) :arg1-of (c3 / cause-01 :arg0 (a / and :op1 (b / bear-02 :arg1 (g / girl)) :op2 (c4 / complete-01 :arg0 (g2 / girl) :arg1 (s3 / school)))))
(c / contrast-01 :arg1 (p / play-01 :arg0 (w / we) :mod (o / only) :time (s / since :op1 (t / then))) :arg2 (l / level :polarity - :domain (i / it)))
FAILED_TO_PARSE#Couldn't convert to full AMR graph.
(s / say-01 :arg0 (t / thing :arg1-of (s2 / state-01)) :arg1 (m / make-01 :arg1 (l / list :consist-of (s3 / sector :part-of (e / economy)))))
FAILED_TO_PARSE#Two concepts in a row.
(h / have-condition-91 :arg1 (p / professional :domain (h2 / he)) :arg2 (s / smiled :domain (h3 / he)))
(h / have-03 :arg0 (i / i) :arg1 (m / memory :arg1-of (a / associate-01 :arg2 (c / country :name (n / name :op1 "Rome"))) :mod (o / only)))
(a / and :op1 (g / go-02 :mode (i / imperative) :arg0 (w / we) :arg4 (d / dialogue-01) :direction (b / back)) :op2 (r / right-05 :arg1 (w2 / we) :arg2 (p / practice-01 :arg0 (w3 / we) :arg1 (c / communicate-01 :mod (i2 / international)))))
(m / mix-01 :arg1 (t / teenager :arg3-of (m2 / mix-01 :arg2 (l / liquid :mod (l2 / liquid)))) :arg2 (d / drink-01 :arg0 (t2 / teenager) :arg1-of (s / strong-02 :degree (m3 / more))) :arg1-of (r / report-01))
(r / reportedly :arg0 (t / teenager) :arg1 (l / liquid :arg1-of (m / mix-01 :degree (m2 / mix-01))) :purpose (g / get-01 :arg0 (t2 / teenager) :arg1 (d / drink-01 :arg1-of (s / strong-02))) :arg1-of (r2 / report-01))
(p / promote-01 :arg0 (w / we) :arg1 (r / reform-01) :direction (f / forward))
(a / and :op1 (p / problem :time (c / current) :domain (a2 / and :op1 (s / situation :ord (o / ordinal-entity :value 1)) :op2 (p2 / problem :ord (o2 / ordinal-entity :value 1)))) :op2 (m / make-01 :arg0 (a3 / and :op1 (p3 / problem :ord (o3 / ordinal-entity :value 1)) :op2 (p4 / problem :ord (o4 / ordinal-entity :value 1))) :arg1 (r / rate :mod (i / interest :arg1-of (i2 / increase-01))) :purpose (r2 / receive-01 :arg0 (r3 / rate) :arg1 (i3 / income :mod (r4 / real)))))
(a / and :op1 (t / turns :arg0 (p / person :name (n / name :op1 "Moen" :op2 "Ali")) :arg1 (b / ball) :arg2 (b2 / ball)) :op2 (p2 / promise-01 :arg0 (p3 / person) :arg2 (b3 / balls)) :op3 (r / represent-01 :arg0 (p4 / person) :arg1 (o / option :mod (a2 / aggressive) :poss (y / you)) :arg1-of (k / know-01 :polarity -)))
(b / bear-02 :arg1 (g / girl) :location (c / clinics :poss (c2 / city :name (n / name :op1 "Moscow")) :quant (m / multiple :op1 1)))
(d / define-01 :arg1 (c / character :mod (e / each)) :arg1-of (c2 / contrast-01 :arg2 (d2 / define-01 :arg1 (p / personality :arg0-of (c3 / communications :arg1 (c4 / communicate-01) :arg2 (f / friend))))))
(c / contrast-01 :arg2 (a / and :op1 (g / go-01 :arg1 (i / it) :arg4 (p / plateau) :time (n / now)) :op2 (p2 / possible-01 :arg1 (s / see-01 :arg0 (y / you) :arg1 (d / decline-01 :arg1 (g2 / grow-01 :arg1 (g3 / grow-01 :arg1 (- / -lrb-))))))))
(s / say-01 :arg0 (c / company) :arg1 (a / and :op1 (b / begin-01 :arg0 (c2 / company) :arg1 (c3 / conduct-01 :arg0 (c4 / company) :arg1 (i / interview-01 :arg1 (p / person :arg0-of (h / have-org-role-91 :arg2 (p2 / personnel))) :time (m / month :mod (t / this))))) :op2 (i2 / increase-01 :arg0 (c5 / company) :arg1 (n / number :quant-of (p3 / person :arg0-of (h2 / have-org-role-91 :arg1 (c6 / company :name (n2 / name :op1 "N-A")) :arg2 (p4 / personnel)))) :arg3 (c7 / company :name (n3 / name :op1 "N-A")))))
(m / multi-sentence :snt1 (g / googl :arg0 (o / organization :name (n / name :op1 "Google" :op2 "Inc"))) :snt2 (- / -rrb- :mode (i / imperative) :arg0 (y / you) :arg1 (a / and :op1 (d / declare-02 :arg0 (c / campaign-01 :arg1 (c2 / campaign-01 :arg1 (d2 / donate-01 :arg0 (c3 / country :mod (h / humanitarian))))) :arg1 (m2 / monetary-quantity :quant 11 :unit (d3 / dollar :mod (r / renminbi)) :arg1-of (h2 / help-01 :arg2 (o2 / organization :mod (h3 / humanitarian))) :arg0-of (h4 / help-01 :arg1 (t / take-over-12 :arg0 (a2 / and :op1 (w / war) :op2 (c4 / country :mod (p / poor))))) :arg2 (c5 / country :mod (h5 / humanitarian)))))))
(s / send-01 :arg0 (p / police) :arg1 (m / measure-02 :arg1 (r / respond-01 :arg0 (p2 / police) :arg1 (a / action :mod (a2 / aggressive) :topic (a3 / and :op1 (p3 / person :arg0-of (u / use-01)) :op2 (a4 / attempt-01 :arg0 (p4 / person) :arg1 (v / violate-01 :arg0 (p5 / person) :arg1 (b / border))))))) :arg2 (s2 / scene :poss (c / clashes)))
(a / and :op1 (c / call-01 :polarity - :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (o / organization :name (n / name :op1 "Delta" :op2 "Psi") :part-of (c2 / country :name (n2 / name :op1 "N-A"))) :arg2 (m / member))) :arg1 (r / rate-entity-91 :arg1 911 :arg2 (t / temporal-quantity :quant (N / N-A) :unit (h2 / hour))) :time (l / lose-02 :arg0 (p2 / person) :arg1 (c3 / consciousness))) :op2 (w / wait-01 :arg1 (p3 / person) :arg2 (t2 / temporal-quantity :quant (N2 / N-A) :unit (h3 / hour) :time (b / before :op1 (d / deliver-01 :arg0 (p4 / person) :arg1 (p5 / person) :arg2 (h4 / hospital)))) :mod (s / still)))
(c / cause-01 :arg1 (s / state-01 :arg0 (p / person :name (n / name :op1 "Hyko" :op2 "Mayas")) :arg1 (e / engage-01 :arg1 (p2 / person :arg0-of (s2 / specialize-01 :arg1 (n2 / network :mod (s3 / social)))) :arg2 (c2 / create-01 :arg1 (g / group :arg1-of (s4 / special-02) :consist-of (m / moderators))) :time (p3 / present)) :time (p4 / present)))
(c / change-01 :arg1 (m / market) :manner (d / dramatic) :time (b / before :op1 (n / now) :duration (a / approximately :op1 (t / temporal-quantity :quant (N / N-A) :unit (y / year)))) :frequency (r / rate-entity-91 :arg1 (m2 / more-than :op1 (t2 / temporal-quantity :quant (N2 / N-A) :unit (y2 / year))) :arg2 (t3 / temporal-quantity :quant (N3 / N-A) :unit (y3 / year))) :arg1-of (c2 / cause-01 :arg0 (a2 / and :op1 (g / grow-01 :arg1 (m3 / market) :manner (s / steady :degree (f / fair))) :op2 (r2 / remain-01 :arg1 (m4 / market) :arg4 (n2 / normal :degree (f2 / fair)) :time (a3 / after :op1 (- / -lrb- :arg0 (a4 / and :op1 (p / person :name (n3 / name :op1 "Bob" :op2 "Doll")) :op2 (p2 / person :arg0-of (s2 / specialize-01 :arg1 (s3 / strategy :mod (t4 / trade-01 :arg1 (s4 / stock))))) :op3 (p3 / person :arg0-of (s5 / specialize-01 :arg1 (s6 / strategy :mod (t5 / trade-01 :arg1 (s7 / stock)))) :location (o / organization :name (n4 / name :op1 "Nuveen" :op2 "Asset" :op3 "Management"))) :time (r3 / recent))))))))
(m / multi-sentence :snt1 (l / learn-01 :arg0 (y / you) :arg1 (t / thing :domain (i / it))) :snt2 (l2 / look-02 :arg0 (y2 / you) :arg1 (r / resemble-01 :arg1 (m2 / man :arg1-of (l3 / like-01 :arg0 (i2 / i) :arg1-of (l4 / like-01 :polarity - :arg0 (i3 / i)))) :arg2 (d / die-01 :arg1 (m3 / man)))))
(e / exemplify-01 :arg0 (e2 / exemplify-01 :arg0 (o / organization :name (n / name :op1 "Voice")) :mod (s / such) :mod (s2 / such)) :mod (w / well :mode (e3 / expressive)) :mod (w2 / well :mode (e4 / expressive)))
(c / contrast-01 :arg1 (p / provide-01 :arg0 (v / visit-01 :arg0 (p2 / person :name (n / name :op1 "Xi" :op2 "Jinping") :arg0-of (h / have-org-role-91 :arg1 (c2 / country :name (n2 / name :op1 "US")) :arg2 (p3 / president)))) :arg1 (o / opportunity :purpose (e / expand-01 :arg0 (p4 / person) :arg1 (c3 / cooperate-01 :arg0 (a / and :op1 (c4 / country) :op2 (c5 / country :name (n3 / name :op1 "China"))) :arg2 (i / issue-02 :arg0 (i2 / interest-01 :arg1 (c6 / country) :arg2 (s / side :mod (b / both))) :mod (b2 / bilateral) :mod (b3 / bilateral)))))) :arg2 (a2 / allow-01 :arg0 (v2 / visit-01) :arg1 (c7 / consider-02 :arg0 (a3 / and :op1 (p5 / person :arg0-of (h2 / have-org-role-91 :arg1 (c8 / country :name (n4 / name :op1 "United" :op2 "States")) :arg2 (p6 / president))) :op2 (p7 / person :arg0-of (h3 / have-org-role-91 :arg1 (c9 / country) :arg2 (p8 / president)))) :arg1 (c10 / consider-02 :arg0 (a4 / and) :arg1 (t / topic :mod (c11 / controversy)))) :mod (a5 / also)))
(s / say-01 :arg0 (h / he) :arg1 (h2 / harmful-02 :arg0 (c / cigarette :mod (e / electronic)) :degree (l / less :compared-to (s2 / smoke-02 :arg0 (t / tobacco)))))
(h / help-01 :arg0 (r / report-01) :arg1 (p / prepare-01 :arg0 (r2 / report-01) :arg1 (a / and :op1 (p2 / person :name (n / name :op1 "Emily" :op2 "Wagster" :op3 "Pettus") :arg0-of (h2 / have-org-role-91 :arg2 (h3 / head-of-state))) :op2 (p3 / person :arg0-of (h4 / have-org-role-91 :arg2 (l / location :name (n2 / name :op1 "Mississippi")))) :op3 (p4 / person :name (n3 / name :op1 "Rebecca" :op2 "Santana"))) :location (c / city :name (n4 / name :op1 "New" :op2 "Orleans"))))
(p / pleased :arg0 (i / i) :arg1 (a / and :op1 (g / goal) :op2 (s / score-01 :arg1 (w / we) :arg2 4)))
(m / multi-sentence :snt1 (a / and :op1 (t / think-01 :arg0 (i / i) :arg1 (t2 / think-01 :arg0 (s / someone) :arg1 (a2 / and :op1 (t3 / think-01 :arg0 (s2 / someone) :arg1 (f / flows :arg0 (s3 / someone))) :op2 (k / know-01 :arg0 (s4 / someone) :arg1 (f2 / flows :arg1 (r / refugee)))))) :op2 (a3 / and :op1 (f3 / fortunate-01 :polarity - :arg1 (f4 / flee-05 :arg0 (s5 / someone)) :arg2 (d / die-01 :arg1 (p / person))) :op2 (f5 / flee-05 :arg0 (p2 / person :mod (c / country :name (n / name :op1 "N-A"))) :arg2 (d2 / die-01)))) :snt2 (a4 / add-01 :arg0 (h / he)))
(t / tell-01 :arg0 (p / person :name (n / name :op1 "Artem" :op2 "Vasic") :arg0-of (h / have-org-role-91 :arg1 (p2 / police :mod (c / criminal-03)) :arg2 (c2 / chief :mod (d / deputy) :topic (i / investigate-01))) :arg0-of (h2 / have-org-role-91 :arg1 (p3 / police) :arg2 (c3 / chief :mod (d2 / deputy) :topic (i2 / investigate-01))) :arg0-of (h3 / have-org-role-91 :arg1 (p4 / police) :arg2 (c4 / chief :mod (d3 / deputy) :topic (i3 / investigate-01))) :arg0-of (h4 / have-org-role-91 :arg1 (p5 / police) :arg2 (c5 / chief :mod (d4 / deputy))) :arg0-of (h5 / have-org-role-91 :arg1 (p6 / police) :arg2 (c6 / chief :mod (d5 / deputy))) :arg0-of (h6 / have-org-role-91 :arg1 (p7 / police) :arg2 (c7 / chief :mod (d6 / deputy))) :arg0-of (h7 / have-org-role-91 :arg1 (p8 / police) :arg2 (c8 / chief :mod (d7 / deputy))) :arg0-of (h8 / have-org-role-91 :arg1 (p9 / police) :arg2 (c9 / chief :mod (d8 / deputy))) :arg0-of (h9 / have-org-role-91 :arg1 (p10 / police) :arg2 (c10 / chief :mod (d9 / deputy))) :arg0-of (h10 / have-org-role-91 :arg1 (p11 / police) :arg2 (c11 / chief :mod (d10 / deputy))) :arg0-of (h11 / have-org-role-91 :arg1 (p12 / police) :arg2 (c12 / chief)) :arg0-of (h12 / have-org-role-91 :arg1 (p13 / police) :arg2 (c13 / chief)) :arg0-of (h13 / have-org-role-91 :arg1 (p14 / police) :arg2 (c14 / chief))))
(e / expect-01 :arg1 (a / and :op1 (r / reduce-01 :arg0 (o / organization :name (n / name :op1 "Hewlett-Packard")) :arg1 (j / job :quant 25) :arg3 (j2 / job :quant 30 :part-of (p / program :mod (m / malicious) :poss (o2 / organization)))) :op2 (r2 / reduce-01 :arg1 (r3 / reduce-01 :arg1 (d / deliver-01 :arg1 (s / service))))))
(c / choose-01 :arg0 (i / i) :arg1 (l / look-01 :arg0 (i2 / i) :arg1 (i3 / it) :manner (e / emotion :polarity -)))
(m / multi-sentence :snt1 (c / cause-01 :arg0 (; / ; :polarity - :arg1 (p / protocols :mod (o / other)))) :snt2 (e / except :arg0 (o2 / organization :name (n / name :op1 "LDPR")) :mod (a / apparent) :arg2-of (e2 / except-01 :arg1 (s / sign-01 :arg0 (p2 / person :mod (c2 / country :name (n2 / name :op1 "N-A")))))))
(i / invest-01 :arg0 (p / person :arg0-of (i2 / invest-01) :mod (p2 / potential)) :arg2 (i3 / invest-01 :arg0 (p3 / person) :arg2 (p4 / project :mod (l / launch-01 :arg1 (p5 / project :quant 1500000000 :mod (r / ruble))))) :mod (p6 / potential))
(c / contrast-01 :arg1 (c2 / close-10 :arg1 (w / we) :arg2 (t / thing :quant 2006) :degree (v / very)) :arg2 (r / realist :arg0 (s / side :mod (o / other)) :arg1 (p / period)))
(s / show-01 :arg0 (p / poll-01) :arg1 (e / enjoy-01 :arg0 (p2 / person :name (n / name :op1 "Carson")) :arg1 (s2 / support-01 :arg0 (p3 / person) :arg1 (g / group :consist-of (p4 / person :arg0-of (v / vote-01 :arg1 (e2 / education :arg1-of (h / high-02 :degree (m / more))))))) :location (g2 / group :consist-of (p5 / person :arg0-of (v2 / vote-01 :arg1 (e3 / education :arg1-of (h2 / high-02 :degree (m2 / more))))))) :mod (a / also))
(u / unites :arg0 (c / company) :arg1 (a / and :op1 (r / region :mod (c2 / country-region :name (n / name :op1 "Volga"))) :op2 (r2 / region :mod (e / email)) :op3 (e2 / enlarged :location (r3 / region :arg0-of (b / break-away-14)))) :arg2 (a2 / and :op1 (r4 / region :mod (e3 / email)) :op2 (r5 / region :mod (s / spiritual)) :op3 (l / lab :location (e4 / east))))
(w / work-01 :arg0 (a / and :op1 (p / person :arg0-of (h / have-org-role-91 :arg2 (h2 / head-of-state))) :op2 (p2 / person :arg1-of (s / settle-03))) :arg2-of (i / include-01 :arg1 (r / region :location (l / location :name (n / name :op1 "Tyumen")))))
(t / turn-down-05 :arg0 (s / study :arg1-of (c / carry-out-03 :arg0 (a / and :op1 (p / person :name (n / name :op1 "Robert" :op2 "Watershed") :arg0-of (h / have-org-role-91 :arg1 (o / organization :name (n2 / name :op1 "Medical" :op2 "College")) :arg2 (p2 / professor))) :op2 (p3 / person :arg0-of (h2 / have-org-role-91 :arg1 (c2 / city :name (n3 / name :op1 "London") :location (c3 / city :name (n4 / name :op1 "London"))) :arg2 (p4 / professor))) :op3 (p5 / person :arg0-of (h3 / have-org-role-91 :arg1 (o2 / organization) :arg2 (p6 / professor))) :op4 (p7 / person :arg0-of (h4 / have-org-role-91 :arg1 (o3 / organization) :arg2 (p8 / professor))) :op5 (p9 / person :arg0-of (h5 / have-org-role-91 :arg1 (o4 / organization) :arg2 (p10 / professor)))) :arg0-of (h6 / have-org-role-91 :arg1 (o5 / organization) :arg2 (p11 / professor)))) :arg1 (a2 / affect-01 :arg0 (d / diet :mod (h7 / healthy) :consist-of (w / woman)) :arg1 (e / expression :consist-of (p12 / person :arg0-of (h8 / have-rel-role-91 :arg1 (w2 / woman) :arg2 (c4 / child)))) :arg2 (d2 / develop-02 :arg0 (w3 / woman) :arg1 (t2 / tumours :poss (w4 / woman))) :mod (a3 / actual)) :medium (s2 / study-01 :time (r / recent)))
(f / find-02 :arg0 (s / study :arg1-of (c / conduct-01 :arg0 (p / person :name (n / name :op1 "Robert" :op2 "Waterhouse") :location (o / organization :name (n2 / name :op1 "Baylor" :op2 "Medical" :op3 "College") :location (s2 / state :name (n3 / name :op1 "Texas"))) :arg0-of (h / have-org-role-91 :arg1 (o2 / organization :name (n4 / name :op1 "Baylor" :op2 "Medical" :op3 "College") :location (s3 / state :name (n5 / name :op1 "Texas"))) :arg2 (p2 / professor))))) :arg1 (a / affect-01 :arg0 (d / diet :mod (h2 / healthy) :consist-of (w / woman)) :arg1 (e / expression :consist-of (a2 / and :op1 (p3 / person :arg0-of (h3 / have-rel-role-91 :arg1 (w2 / woman) :arg2 (c2 / child))) :op2 (d2 / develop-02 :arg1 (t / tumors :poss (w3 / woman))))) :mod (a3 / actual)) :medium (s4 / study-01 :time (r / recent) :arg1-of (c3 / conduct-01 :arg0 (p4 / person :name (n6 / name :op1 "Len") :location (c4 / city :name (n7 / name :op1 "N-A"))))))
(s / say-01 :arg0 (p / person :name (n / name :op1 "King" :op2 "Salman")) :arg1 (r / recommend-01 :arg1 (o / obligate-01 :polarity - :arg1 (o2 / organization :name (n2 / name :op1 "Binladin" :op2 "Group")) :arg2 (l / leave-11 :arg0 (o3 / organization) :arg1 (c / city :name (n3 / name :op1 "N-A")) :location (r2 / range :location (p2 / province :name (n4 / name :op1 "N-A")))))) :time (t / today))
(s / say-01 :arg0 (p / person :name (n / name :op1 "Salman") :arg0-of (h / have-org-role-91 :arg2 (k / king))) :arg1 (r / recommend-01 :arg1 (l / leave-11 :polarity - :arg0 (g / group) :arg1 (r2 / range :mod (a / arrow) :arg1-of (r3 / raise-01 :arg2 (s2 / solution))))) :time (t / today))
(d / derbent :arg1 (c / city :mod (o / only) :location (c2 / country :name (n / name :op1 "N-A"))) :time (s / since :op1 (t / time :mod (s2 / soccer))))
(b / be-located-at-91 :arg1 (p / person :name (n / name :op1 "Luke") :mod (s / square)) :arg2 (b2 / basement) :location (r / room :location (r2 / room :part-of (l / library)) :mod (b3 / back)))
(m / multi-sentence :snt1 (s / stand-01 :arg1 (a / and :op1 (p / person :arg0-of (p2 / produce-01 :arg1 (f / film))) :op2 (p3 / person :arg0-of (p4 / produce-01 :arg1 (f2 / film)))) :arg2 (s2 / something :beneficiary (f3 / film))) :snt2 (a2 / and :op1 (o / oppose-01 :arg0 (a3 / and :op1 (p5 / person :name (n / name :op1 "Leo" :op2 "Angelos")) :op2 (p6 / person :name (n2 / name :op1 "Kristen" :op2 "Brancaccio"))) :arg1 (p7 / person :name (n3 / name :op1 "Damon")) :manner (s3 / sharp)) :op2 (s4 / say-01 :arg0 (p8 / person) :arg1 (p9 / possible-01 :arg1 (g / get-01 :polarity - :arg0 (w / we) :arg1 (t / thing :arg1-of (w2 / want-01 :arg0 (w3 / we))))))))
(a / and :op1 (f / favour :arg0 (a2 / and :op1 (p / person :name (n / name :op1 "Leo" :op2 "Angelos")) :op2 (p2 / person :name (n2 / name :op1 "Kristen" :op2 "Brancaccio"))) :arg1 (p3 / person :arg0-of (p4 / produce-01 :arg1 (f2 / film)))) :op2 (o / oppose-01 :arg0 (p5 / person) :arg1 (p6 / person :name (n3 / name :op1 "Damon")) :arg1-of (s / strong-02)) :op3 (s2 / say-01 :arg0 (p7 / person) :arg1 (g / get-01 :polarity - :arg0 (w / we) :arg1 (t / thing :arg1-of (w2 / want-01 :arg0 (p8 / person)))) :arg1-of (s3 / strong-02) :time (e / end-01)))
(s / sell-01 :arg0 (c / company) :arg1 (s2 / share :mod (n / new)) :arg3 (r / rate-entity-91 :arg1 (m / monetary-quantity :quant 125 :unit (c2 / cent)) :arg2 (v / volume-quantity :quant (N / N-A) :unit (g / gallon))) :arg4 (m2 / monetary-quantity :arg2-of (p / price-01 :arg1 (t / trade-01 :arg1 (t2 / trade-01)))))
(s / say-01 :arg0 (p / person :quant (m / multiple :op1 2 :mod (o / only)) :arg1-of (i / include-91 :arg2 (p2 / person :quant 10))) :arg1 (d / disappoint-01 :arg1 (p3 / person) :arg1-of (d2 / disappoint-01) :condition (b / become-01 :arg1 (p4 / person) :arg2 (c / candidate))))
(a / and :op2 (h / have-concession-91 :arg1 (a2 / anger-01 :arg0 (s / same-01 :arg1 (i / i) :degree (m / more)) :arg1 (i2 / i) :degree (m2 / more)) :arg2 (a3 / and :op1 (d / do-02 :polarity - :arg0 (i3 / i) :arg1 (t / thing :arg1-of (s2 / same-01 :arg2 (t2 / thing :arg1-of (s3 / same-01 :arg2 (t3 / thing :arg1-of (s4 / same-01 :arg2 (t4 / thing :arg1-of (s5 / same-01 :arg2 (t5 / thing :arg1-of (s6 / same-01 :arg2 (t6 / thing :arg1-of (s7 / same-01 :arg2 (t7 / thing :arg1-of (s8 / same-01 :arg2 (t8 / thing :arg1-of (s9 / same-01 :arg2 (t9 / thing :arg1-of (s10 / same-01 :arg2 (t10 / thing :quant (N / N-A))))))))))))))))))))) :op2 (s11 / same-01 :arg1 (t11 / thing) :degree (m3 / more)))))
(p / purchase-01 :arg0 (i / instrument :arg1-of (i2 / include-91 :arg2 (i3 / instrument :mod (y / young) :mod (e / extreme)))) :ord (o / ordinal-entity :value 1))
(u / use-01 :arg0 (o / or :op1 (s / surgery-01 :arg1 (p / publication :name (n / name :op1 "N-A"))) :op2 (s2 / surgery-01 :arg2 (b / bariatric))) :arg1 (t / technique :mod (v / variety)) :purpose (r / reduce-01 :arg0 (o2 / or) :arg1 (s3 / size :poss (m / monkey))))
(t / throw-01 :arg1 (l / lack-01 :arg1 (s / story :mod (s2 / such))) :arg2 (e / eye) :arg1-of (c / cause-01 :arg0 (c2 / consider-01 :arg1 (d / desperate :domain (d2 / demand-01 :arg0 (m / man) :arg1 (t2 / thing :arg1-of (d3 / demand-01 :arg0 (m2 / man))) :time (a / after :op1 (n / now) :quant (m3 / more-than :op1 (t3 / temporal-quantity :quant (N / N-A) :unit (y / year)))))) :mod (e2 / especially)) :mod (e3 / especially)))
(p / possible-01 :polarity - :arg1 (a / accept-01 :arg0 (c / candidate :quant (n / none) :arg1-of (i / include-91 :arg2 (o / or :op1 (c2 / candidate :mod (d / democracy)) :op2 (c3 / candidate :mod (p2 / potential))))) :arg1 (p3 / person :arg0-of (v / vote-01) :mod (p4 / primary) :mod (t / this))) :time (m / month :mod (l / last)))
(a / and :op1 (a2 / and :op1 (s / small :degree (m / more) :domain (o / organization :name (n / name :op1 "Hewlett" :op2 "Packard" :op3 "Enterprise"))) :op2 (f / focus-01 :arg0 (o2 / organization) :arg2 (a3 / and :op1 (o3 / organization :name (n2 / name :op1 "Hewlett-packard")) :op2 (b / business))) :degree (m2 / more) :compared-to (a4 / and :op1 (c / current) :op2 (p / portfolio :arg1 (b2 / business)))) :op2 (h / help-01 :arg0 (o4 / organization) :arg1 (t / trend :mod (c2 / company)) :arg2 (s2 / style :mod (n3 / new) :mod (b3 / business))) :arg1-of (s3 / say-01 :arg0 (p2 / person :name (n4 / name :op1 "Whitman"))))
(m / multi-sentence :snt1 (a / allow-01 :arg1 (f / free-01 :arg1 (r / rate-01) :arg2 (b / bail-out-02 :arg1 (h / he)) :topic (c / condition :topic (a2 / and :op1 (s / surrenders :arg0 (h2 / he) :arg1 (p / passport :mod (c2 / country :name (n / name :op1 "N-A")) :mod (c3 / country :name (n2 / name :op1 "N-A")))) :op2 (a3 / adapt-01 :arg1 (h3 / he) :arg2 (p2 / passport :mod (s2 / serbian))))))) :snt2 (a4 / adapt-01 :arg1 (p3 / person :quant 6) :arg2 (p4 / p.m. :quant 6) :time (u / until :op1 (m2 / morning))))
(s / say-01 :arg0 (p / police) :arg1 (g / go-02 :polarity - :arg0 (h / he) :arg4 (j / jail)) :arg1-of (s2 / say-01 :arg0 (p2 / police)))
(m / multi-sentence :snt1 (d / detail-01 :mode (i / imperative) :arg0 (y / you) :arg1 (d2 / doubt-01 :arg1 (h / help-01 :arg0 (c / country :name (n / name :op1 "USA")) :arg1 (r / read-01 :arg0 (c2 / country :name (n2 / name :op1 "Syria")) :arg1 (m2 / material :poss (o / organization :name (n3 / name :op1 "Kommersant"))) :arg2 (m3 / material :poss (o2 / organization :name (n4 / name :op1 "Kommersant"))))) :degree (m4 / more)) :degree (m5 / more)) :snt2 (' / '' :mode (e / expressive)))
(m / multi-sentence :snt1 (c / comment-01 :arg0 (p / person :name (n / name :op1 "David" :op2 "Mandell") :arg0-of (h / have-org-role-91 :arg2 (m2 / minister))) :arg1 (f / figure :mod (l / last :degree (v / very)))) :snt2 (n2 / note-01 :arg0 (p2 / plan-01 :arg0 (g / government-organization :arg0-of (g2 / govern-01)) :arg1-of (r / range-01 :arg2 (l2 / long-03))) :arg1 (s / strengthen-01 :arg1 (e / economy))))
(c / contrast-01 :arg1 (t / tell-01 :polarity - :arg0 (e / edition :mod (c2 / country :name (n / name :op1 "N-A")) :poss (a / agency :mod (n2 / news))) :arg1 (d / detail)) :arg2 (s / say-01 :arg0 (e2 / edition) :arg1 (b / ban-01 :arg0 (p / person :arg0-of (l / lead-02 :arg1 (c3 / company))) :arg1 (l2 / leave-11 :arg0 (p2 / person) :arg1 (c4 / country)))))
(a / and :op1 (p / possible-01 :polarity - :arg1 (p2 / pass-01 :arg0 (a2 / and :op1 (p3 / person :arg0-of (h / have-org-role-91 :arg2 (d / deputy))) :op2 (p4 / person :arg0-of (o / observe-01)) :op3 (p5 / person :arg0-of (o2 / observe-01))) :arg1 (a3 / and :op1 (p6 / person :arg0-of (o3 / observe-01)) :op2 (p7 / person :arg0-of (o4 / observe-01)))) :location (i / inside) :arg1-of (l / long-03)) :op2 (s / show-01 :polarity - :arg0 (a4 / and :op1 (c / candidate) :op2 (p8 / person :arg0-of (o5 / observe-01)) :op3 (p9 / person :arg0-of (o6 / observe-01))) :medium (t / tv)))
(p / possible-01 :arg1 (h / help-01 :arg0 (p2 / person :arg0-of (h2 / have-rel-role-91 :arg1 (p3 / publication :name (n / name :op1 "N-A") :mod (l / little)) :arg2 (p4 / patient :mod (l2 / little)))) :arg1 (s / surgery-01 :arg1 (p5 / publication :name (n2 / name :op1 "N-A")) :arg2 (p6 / publication :name (n3 / name :op1 "N-A")))))
(l / lead-03 :arg0 (p / person :name (n / name :op1 "Biden") :arg1-of (i / include-91 :arg2 (p2 / person :quant 3 :mod (a / all)))) :arg2 (a2 / and :op1 (i2 / integrity) :op2 (s / side-01 :arg0 (p3 / person :name (n2 / name :op1 "Clinton")) :arg1 (q / quality :mod (l2 / leadership :poss (p4 / person))) :arg1-of (s2 / strong-02))))
(a / and :op1 (' / '' :arg1 (m / meet-03) :location (a2 / across :op1 (c / country :name (n / name :op1 "Syria")))) :op2 (d / declare-01 :arg0 (h / he)))
(s / surround-01 :arg0 (m / mystery) :arg1 (w / woman) :arg2 (w2 / woman :arg1-of (s2 / surrounded :arg0 (m2 / mystery))) :time (e / eventual))
(d / documentation :polarity - :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (o / organization :name (n / name :op1 "PSD")) :arg3 (a / apprentice-01 :arg0 (p2 / person)))) :arg1 (c / complain-01 :arg0 (o2 / organization) :mod (a2 / any)) :location (c2 / city))
(d / discuss-01 :arg0 (a / and :op1 (p / problem :location (l / location :name (n / name :op1 "Tyumen" :op2 "Trading" :op3 "House"))) :op2 (w / way :instrument-of (a2 / avoid-01 :arg1 (l2 / lose-02 :arg1 (p2 / problem))))) :arg1 (p3 / problem :location (l3 / location :name (n2 / name :op1 "Tyumen" :op2 "Trading" :op3 "House"))))
(a / announce-01 :arg1 (s / sentence-01 :arg2 (p / person :name (n / name :op1 "Drinkman"))) :time (d / date-entity :month 1 :day 15))
(s / say-01 :arg1 (t / thank-01 :arg0 (i / i) :arg1 (y / you)) :arg2 (p / person :name (n / name :op1 "Evangelos" :op2 "Meimarakis")))
(m / multi-sentence :snt1 (p / play-01 :arg0 (p2 / person :arg0-of (' / '') :mod ('2 / '')) :mod (w / well)) :snt2 (h / have-03 :arg0 (w2 / we :quant (a / all)) :arg1 (m2 / match-03)))
(p / possible-01 :arg1 (c / consent-01 :arg0 (i / i) :arg1 (e / example :arg1-of (r / relate-01 :arg2 (p2 / person :arg0-of (f / farm-01))))))
(u / understand-01 :arg0 (i / i) :arg1 (a / and :op1 (a2 / annoy-01 :arg1 (p / person :quant (n / numerous)) :degree (v / very)) :op2 (o / or :op1 (e / evil :degree (v2 / very) :domain (i2 / it)) :op2 (d / detuned :arg0 (f / fact) :arg1 (o2 / or :op1 (e2 / evil :degree (v3 / very)) :op2 (d2 / detuned :arg0 (f2 / fact)))))))
(a / and :op1 (p / possible-01 :arg1 (a2 / arrest-01 :arg1 (h / he)) :time (b / before :op1 (p2 / possible-01 :arg1 (a3 / arrest-01 :arg1 (h2 / he)))) :time (b2 / before :op1 (p3 / possible-01 :arg1 (a4 / arrest-01 :arg1 (h3 / he))))) :op2 (s / shoot-02 :arg0 (l / lamb) :arg1 (p4 / person :quant 38 :arg1-of (i / include-91 :arg2 (p5 / person :arg0-of (h4 / have-rel-role-91 :arg1 (h5 / he) :arg2 (p6 / parent)))) :arg0-of (h6 / have-rel-role-91 :arg1 (h7 / he) :arg2 (p7 / parent))) :location (r / relative-position :op1 (h8 / home :poss (p8 / person :arg0-of (h9 / have-rel-role-91 :arg1 (h10 / he) :arg2 (p9 / parent)))) :arg0-of (h11 / have-rel-role-91 :arg1 (h12 / he) :arg2 (p10 / parent))) :location (s2 / suburb :part-of (p11 / person :arg0-of (h13 / have-rel-role-91 :arg1 (h14 / he) :arg2 (p12 / parent))) :location (s3 / suburb :part-of (s4 / strait)))) :op3 (t / tell-01 :arg0 (i2 / i) :arg1 (d / demand-01 :arg0 (p13 / person :name (n / name :op1 "Johnson") :arg0-of (h15 / have-org-role-91 :arg1 (b3 / brooms :mod (l2 / location :name (n2 / name :op1 "Washington" :op2 "County"))) :arg2 (c / coroner))) :arg2 (p14 / person :name (n3 / name :op1 "Johnson") :arg0-of (h16 / have-org-role-91 :arg1 (q / quidditch))))))
(c / call-03 :arg0 (s / speak-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (o / organization :name (n / name :op1 "Parliamentary" :op2 "Assembly")) :arg2 (g / governor :mod (v / vice))))) :arg1 (c2 / call-01 :arg0 (p2 / person) :arg1 (g2 / group :arg0-of (c3 / contact-01 :arg1 (c4 / country :name (n2 / name :op1 "Ukraine")))) :arg2 (c5 / country :name (n3 / name :op1 "Ukraine"))))
(c / complain-01 :arg0 (p / person :quant (m / many)) :arg1 (v / violate-01 :arg1 (v2 / violate-01)) :time (c2 / come-01 :arg1 (e / elect-01) :arg3 (r / represent-01 :arg0 (p2 / person :arg0-of (r2 / represent-01 :arg1 (p3 / political-party :name (n / name :op1 "Communist" :op2 "Party")))) :arg1 (p4 / person :arg0-of (r3 / represent-01 :arg1 (p5 / political-party)) :arg0-of (c3 / covering :arg1 (d / defraud-01 :mod (' / '')) :manner (t / threaten-01 :arg0 (p6 / person) :arg1 (e2 / elect-01)))))))
(a / and :op1 (p / provide-01 :arg0 (m / manipulate-01 :mod (t / this)) :arg1 (s / structure :mod (m2 / monetary-quantity :arg1-of (c / cost-01 :arg2 (m3 / monetary-quantity :arg1-of (c2 / cost-01 :arg2 (m4 / monetary-quantity :arg1-of (c3 / cost-01 :arg2 (m5 / monetary-quantity :arg1-of (c4 / cost-01 :arg2 (m6 / monetary-quantity :arg1-of (c5 / cost-01 :arg2 (m7 / monetary-quantity :quant (N / N-A))))))) :mod (t2 / this))))))) :degree (m8 / more)) :op2 (s2 / say-01 :arg0 (p2 / person :arg0-of (h / have-org-role-91 :arg1 (o / organization :name (n / name :op1 "Hewlett" :op2 "Packard" :op3 "Enterprise")) :arg2 (c6 / chairman))) :arg1 (l / lead-02 :arg0 (a2 / and :op1 (p3 / person :name (n2 / name :op1 "Meg" :op2 "Whitman")) :op2 (p4 / person :arg0-of (h2 / have-org-role-91 :arg1 (o2 / organization :name (n3 / name :op1 "Hewlett" :op2 "Packard")) :arg2 (c7 / ceo))) :op3 (p5 / person :arg0-of (l2 / lead-02 :arg1 (o3 / organization)) :arg0-of (l3 / lead-01 :arg1 (o4 / organization) :time (a3 / after)))))))
(s / say-01 :arg0 (p / person :name (n / name :op1 "Laurie")) :arg1 (p2 / predominantly :arg1 (s2 / store :poss (w / we)) :mod (s3 / still) :mod (s4 / still)))
(h / have-concession-91 :arg1 (s / say-01 :arg0 (h2 / he) :arg1 (r / recommend-01 :arg1 (r2 / resign-01 :arg0 (h3 / he)) :time (i / immediate))) :arg2 (w / want-01 :arg0 (p / person) :arg1 (s2 / stay-01 :arg1 (p2 / person))))
(i / introduce-02 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (o / organization :name (n / name :op1 "Duma")) :arg2 (d / deputy))) :arg1 (b / bill) :arg1-of (s / say-01 :arg0 (p2 / person :arg0-of (h2 / have-org-role-91 :arg1 (o2 / organization) :arg2 (d2 / deputy))) :location (h3 / house :mod (r / residential))))
(r / report-01 :arg0 (m / media :degree (m2 / mass)) :arg1 (c / consider-01 :arg0 (o / organization :name (n / name :op1 "Cabinet" :op2 "of" :op3 "Ministers")) :arg1 (o2 / option :quant 2 :mod (b / balancing :arg1 (b2 / budget :poss (s / state))))))
(a / and :op1 (b / become-01 :arg1 (t / thing :arg1-of (t2 / target-01 :arg0 (h / he))) :arg2 (a2 / and :op1 (p / person :arg1-of (e / employ-01 :arg0 (h2 / he))) :op2 (p2 / person :arg1-of (e2 / employ-01 :arg0 (h3 / he)))) :arg1-of (c / cause-01 :arg0 (a3 / accuse-01 :arg0 (h4 / he) :arg1 (p3 / person :arg1-of (a4 / accuse-01 :arg0 (h5 / he) :arg2 (c2 / campaign-01 :arg0 (p4 / person) :arg1 (a5 / against :op1 (c3 / campaign-01 :arg0 (p5 / person) :arg1 (o / oppose-01 :arg0 (p6 / person) :arg1 (h6 / he) :arg1-of (p7 / personal-02))))))) :arg2 (p8 / person :arg1-of (a6 / accuse-01 :arg0 (h7 / he) :arg2 (c4 / campaign-01 :arg0 (p9 / person) :arg1 (o2 / oppose-01 :arg0 (p10 / person) :arg1 (h8 / he) :arg1-of (p11 / personal-02)))))))) :op2 (s / straw :mod (f / final) :domain (t3 / thing :arg1-of (w / withdraw-01 :arg2 (l / lady)))))
(c / contrast-01 :arg2 (e / end-01 :arg1 (c2 / compete-01 :mod (g / girl)) :manner (i / intriguing)))
(c / cup)
(a / and :op1 (p / plan-01 :arg0 (o / organization :name (n / name :op1 "Kingfisher")) :arg1 (o2 / open-01 :arg0 (o3 / organization) :arg1 (s / store :quant 200 :mod (a2 / another)) :arg3 (p2 / person :name (n2 / name :op1 "Screwfix") :arg0-of (s2 / specialize-01 :arg1 (c / craftsmen))))) :op2 (q / q. :arg0 (p3 / plan-01) :arg1 (a3 / and :op1 (u / universe :quant 200 :mod (m / magazinovscladov)) :op2 (u2 / universe :quant 60 :mod (m2 / magazinovscladov))) :time (t / time :arg1-of (s3 / same-01))))
(o / or :op2 (a / and :op1 (c / consider-01 :arg1 (b / break-01 :arg1 (i / impress-01))) :op2 (f / fail-01 :arg1 (c2 / consider-02) :arg2 (a2 / attempt-01))))
(o / or :op2 (f / fail-01 :mode (i / interrogative) :arg1 (a / attempt-01 :arg1 (a2 / attempt-01 :arg1 (a3 / attempt-01 :arg1 (a4 / and))))))
(s / say-01 :arg0 (p / person :name (n / name :op1 "Vangelis" :op2 "Memarakis")) :arg1 (w / want-01 :arg0 (c / continent :name (n2 / name :op1 "Europe") :mod (' / '')) :arg1 (h / help-01 :arg0 (c2 / country) :arg2 (w2 / we))))
(s / say-01 :arg0 (p / person :name (n / name :op1 "N-A")) :arg1 (m / matter :mod (s2 / still) :mod (s3 / still)) :arg1-of (s4 / say-01 :arg0 (p2 / person)))
(c / contrast-01 :arg2 (c2 / contrary-01 :arg1 (a / appeal-02 :arg0 (p / person :name (n / name :op1 "Duma" :op2 "Irina" :op3 "Maslova")) :arg1 (p2 / person :mod (c3 / communism :degree (m / most)) :mod (c4 / country :name (n2 / name :op1 "Russia")))) :arg2 (l / legislation)))
(c / contrast-01 :arg1 (r / react-01 :polarity - :arg0 (n / nematodes) :arg1 (u / ultrasound :polarity -) :mod (u2 / usual)) :arg2 (f / find-02 :arg0 (p / person :name (n2 / name :op1 "Chalasani")) :arg1 (s / start-01 :arg0 (p2 / person) :arg1 (r2 / react-01 :arg0 (p3 / person)) :time (p4 / place-01 :arg1 (p5 / person) :arg2 (t / thing :arg0-of (c2 / contain-01 :arg1 (b / bubbles :mod (m / microscopic)) :manner (f2 / fluid)))))))
(k / know-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (h2 / hometown :poss (p2 / person)))) :arg1 (a / and :op1 (p3 / possible-01 :arg1 (f / flit :arg1 (p4 / predator))) :op2 (s / sceptical :arg0 (m / media) :arg1 (o / organization :name (n / name :op1 "EU"))) :arg1-of (c / cause-01 :arg0 (r / running :arg0 (m2 / media) :arg1 (r2 / run-02 :arg0 (p5 / person :name (n2 / name :op1 "Tony" :op2 "Biden")) :arg1 (r3 / referendum :poss (p6 / person))) :arg0-of (s2 / support-01 :arg1 (e / enter-01 :arg0 (w / we) :quant (b / between :op1 1975 :op2 2)))))))
(a / and :op1 (t / tied :arg1 (p / person :arg0-of (h / have-org-role-91 :arg1 (p2 / person :arg0-of (d / defend-01)) :arg2 (m / minister) :time (f / former)) :arg0-of (h2 / have-org-role-91 :arg2 (m2 / minister) :time (f2 / former)) :arg0-of (h3 / have-org-role-91 :arg2 (m3 / minister) :time (f3 / former)) :arg0-of (h4 / have-org-role-91 :arg2 (m4 / minister) :time (f4 / former)) :arg0-of (h5 / have-org-role-91 :arg2 (m5 / minister) :time (f5 / former)) :arg0-of (h6 / have-org-role-91 :arg2 (m6 / minister) :time (f6 / former)) :arg0-of (h7 / have-org-role-91 :arg2 (m7 / minister) :time (f7 / former)) :arg0-of (h8 / have-org-role-91 :arg2 (m8 / minister) :time (f8 / former)) :arg0-of (h9 / have-org-role-91 :arg2 (m9 / minister) :time (f9 / former)) :arg0-of (h10 / have-org-role-91 :arg2 (m10 / minister) :time (f10 / former)) :arg0-of (h11 / have-org-role-91 :arg2 (m11 / minister) :time (f11 / former)) :arg0-of (h12 / have-org-role-91 :arg2 (m12 / minister) :time (f12 / former)) :arg0-of (h13 / have-org-role-91 :arg2 (m13 / minister) :time (f13 / former)) :arg0-of (h14 / have-org-role-91 :arg2 (m14 / minister) :time (f14 / former)) :arg0-of (h15 / have-org-role-91 :arg2 (m15 / minister) :time (f15 / former)) :arg0-of (h16 / have-org-role-91 :arg2 (m16 / minister) :time (f16 / former)) :arg0-of (h17 / have-org-role-91 :arg2 (m17 / minister) :time (f17 / former)) :arg0-of (h18 / have-org-role-91 :arg2 (m18 / minister) :time (f18 / former)) :arg0-of (h19 / have-org-role-91 :arg2 (h20 / head-of-state) :time (f19 / former)))))
(h / have-concession-91 :arg1 (f / find-02 :arg0 (i / i) :arg1 (d / difficult :domain (i2 / imagine-01 :arg1 (i3 / implement-01 :arg1 (s / system :mod (t / this) :arg1-of (r / relate-01 :arg2 (p / person :arg1-of (c / convict-01)))))))) :arg2 (t2 / take-10 :arg0 (s2 / survey-01) :arg1 (t3 / temporal-quantity :quant (N / N-A) :unit (m / month))))
(e / expect-01 :arg1 (o / open-01 :arg0 (o2 / organization :name (n / name :op1 "Metcash")) :arg1 (d / detail :topic (s / strategy :poss (o3 / organization) :topic (p / protect-01))) :time (d2 / day :time (d3 / date-entity :month 9 :day 29 :time-of (s2 / spend-01 :arg0 (a / and :op1 (p2 / product :arg0-of (s3 / supply-01 :arg1 (f / food)) :mod (t / this)) :op2 (g / good :mod (f2 / fraudulent)) :op3 (g2 / good :mod (e2 / economy))) :arg1 (s4 / strategy :poss (p3 / person :arg0-of (i / invest-01))))))))
(o / offer-01 :arg0 (p / person :name (n / name :op1 "Ernest")) :arg1 (j / join-01 :arg0 (p2 / person) :arg1 (c / coalition :mod (i / international) :arg0-of (c2 / carry-out-03 :arg1 (o2 / operation :arg0-of (c3 / counter-01 :arg1 (t / terrorism)) :prep-against (s / state :mod (r / religious-group :name (n2 / name :op1 "N-A") :mod (c4 / country :name (n3 / name :op1 "N-A")))))))))
(b / build-01 :arg1 (i / infrastructure :arg0-of (r / require-01 :arg1 (s / support-01 :mod (s2 / systemic)))) :time (d / date-entity :century (N / N-A)) :subevent-of (c / center :prep-for (i2 / industry :mod (c2 / chemical))))
(s / say-01 :arg1 (m / mr :mode (e / expressive)) :arg2 (p / person :name (n / name :op1 "Meimarakis")))
(a / and :op1 (y / young :degree (e / enough) :domain (p / person :name (n / name :op1 "Jack"))) :op2 (c / cope-01 :arg0 (p2 / person)))
(a / and :op2 (r / require-01 :arg0 (s / some) :arg1 (s2 / scandal)))
(c / commentators :arg1 (p / person :name (n / name :op1 "Gennady" :op2 "Orlov")) :arg2 (c2 / country :name (n2 / name :op1 "Spain")))
(a / and :op1 (c / corrected :arg0 (p / person :arg0-of (h / have-org-role-91 :arg2 (m / member :mod (v / vice)))) :arg1 (p2 / person :arg0-of (h2 / have-org-role-91 :arg2 (m2 / member :mod (v2 / vice))))) :op2 (h3 / have-org-role-91 :arg0 (p3 / person) :arg1 (p4 / person :name (n / name :op1 "Natalia" :op2 "Andryushina") :arg0-of (h4 / have-org-role-91 :arg2 (m3 / member :mod (g / general)))) :arg2 (m4 / member :mod (v3 / vice))) :time (t / then))
(p / phone-number-entity :value (N / N-A))
(s / say-01 :arg0 (s2 / study :mod (n / new)) :arg1 (p / possible-01 :arg1 (a / affect-01 :arg0 (p2 / person :arg0-of (s3 / suffer-01 :arg1 (c / cold)) :quant (t / temporal-quantity :quant (N / N-A) :unit (y / year)) :mod (t2 / type)) :arg1 (t3 / temporal-quantity :quant (N2 / N-A) :unit (y2 / year) :mod (a2 / at-least))) :time (a3 / after :op1 (s4 / surgery-01 :arg1 (p3 / publication :name (n2 / name :op1 "N-A")) :arg2 (p4 / person :arg0-of (h / have-org-role-91 :arg1 (p5 / publication :name (n3 / name :op1 "N-A")) :arg3 (a4 / apprentice-01 :arg0 (p6 / person))))) :mod (f / favorable))))
(g / good :degree (m / more) :domain (h / hold-01 :arg0 (p / person :arg0-of (r / research-01)) :arg1 (r2 / rate-entity-91 :arg1 (p2 / percentage-entity :value (N / N-A)) :arg2 (t / temporal-quantity :quant (N2 / N-A) :unit (y / year)))))
(c / contrast-01 :arg1 (g / game :arg1-of (s / special-02) :domain (i / it)) :arg2 (i2 / important :polarity - :degree (s2 / so) :domain (i3 / it)))
(a / and :op2 (h / have-03 :arg0 (n / network :mod (s / social)) :arg1 (s2 / support-01 :arg1 (o / organization :arg0-of (c / collect-01 :arg1 (c2 / complain-01 :arg0 (p / person :arg0-of (u / use-01)) :arg2 (c3 / content :mod (l / law :polarity -))))))))
(b / bomb :mod (c / cluster))
(b / bomb :mod (c / cassette))
(s / say-01 :arg0 (s2 / study :arg1-of (c / conform-01 :arg2 (s3 / study :mod (s4 / swedish)))) :arg1 (r / rate-entity-91 :arg1 (p / percentage-entity :value (N / N-A)) :arg2 (t / temporal-quantity :quant (N2 / N-A) :unit (y / year)) :arg1-of (c2 / compare-01 :arg2 (g / group :arg0-of (u / use-01 :arg1 (m / method :mod (t2 / traditional :degree (m2 / more))))))))
(m / multi-sentence :snt1 (l / lead-02 :arg0 (l2 / location :name (n / name :op1 "Accra") :arg1-of (l3 / lead-02 :arg0 (p / person :arg0-of (h / have-rel-role-91 :arg1 (p2 / person :name (n2 / name :op1 "Paterson")) :arg2 (' / ''))))) :arg2 (2 / 2-1 :arg1 (p3 / person)) :time (a / and :op1 (r / remove-01 :arg1 (p4 / person)) :op2 (l4 / lose-02 :arg0 (p5 / person) :arg1 (3 / 3-2)))) :snt2 (c / contrast-01 :arg1 (l5 / lose-02 :arg0 (p6 / person) :arg1 (c2 / card :mod (r2 / red)) :time (l6 / late :degree (m2 / more))) :arg2 (c3 / cancel-01 :arg0 (p7 / person) :arg1 (c4 / card :mod (r3 / red)) :time (l7 / late :degree (m3 / more)))) :snt3 (c5 / card :mod (r4 / red) :ord (o / ordinal-entity :value 3) :domain (t / this)))
(s / sentence-01 :arg1 (p / person :name (n / name :op1 "Alister" :op2 "Carmichael")) :arg2 (t / thing :arg2-of (s2 / sentence-01)) :time (u / until :op1 (o / obtain-01 :arg0 (p2 / person) :arg1 (i / information :topic (s3 / service :mod (s4 / social))))))
(a / and :op1 (k / know-02 :arg1 (f / film :arg1-of (k2 / know-02 :arg2 (f2 / film :example (a2 / and :op1 (' / '') :op2 (p / premonition) :op3 (b / brest))))) :arg2 (f3 / film :example (a3 / and :op1 (w / walk-01 :manner ('2 / '')) :op2 (s / space :mod ('3 / ''))))) :op2 (f4 / fortress :arg1 (t / thing :location-of (t2 / thaw :arg1 (a4 / and :op1 ('4 / '') :op2 ('5 / ''))))))
(a / and :op1 (b / be-temporally-at-91 :arg1 (w / wait-01 :arg1 (g / government-organization :name (n / name :op1 "Fed")) :arg2 (e / end-01 :arg1 (r / recession-02 :mod (l / last)))) :time (b2 / before :op1 (n2 / now) :duration (t / temporal-quantity :quant (N / N-A) :unit (m / month)))) :op2 (e2 / end-01 :polarity - :arg1 (r2 / record) :time (y / yet)))
(s / supply-01 :arg0 (c / city :name (n / name :op1 "Tehran")) :arg1 (e / equipment :mod (m / military)) :arg2 (w / we))
(b / be-located-at-91 :arg1 (i / it) :arg2 (l / location :name (n / name :op1 "Zagreb")) :ord (o / ordinal-entity :value 10 :range (y / year :mod (t / this))))
(b / begin-01 :arg1 (a / and :op1 (c / cut-02 :arg0 (y / you) :arg1 (t / trees :location (a2 / above :op1 (t2 / tunnel :mod (u / underground))))) :op2 (s / say-01 :arg0 (d / data :mod (s2 / some)) :arg1 (t3 / train) :arg2 (g / gold :mod (g2 / gold)))))
(m / multi-sentence :snt1 (s / start-01 :arg0 (p / person :mod (c / country :name (n / name :op1 "N-A"))) :arg1 (f / felling :arg0 (p2 / person) :arg1 (t / tree :location (t2 / tunnel :mod (u / underground))))) :snt2 (s2 / say-01 :arg0 (s3 / some) :arg1 (t3 / train :prep-with (g / gold :mod (g2 / gold)))))
(d / decrease-01 :arg1 (a / a1c :arg1-of (a2 / average-03)) :arg3 (a3 / about :op1 (p / percentage-entity :value (N / N-A))) :arg4 (a4 / about :op1 (p2 / percentage-entity :value (N2 / N-A))) :time (a5 / after :op1 (s / surgery-01)))
(m / maymarakis :arg1 (c / crisis :mod (r / refugee) :arg1-of (d / deal-01 :arg0 (w / we) :arg2 (d2 / deal-01 :arg0 (w2 / we) :arg2 (e / elect-01) :time (a / after :op1 (e2 / elect-01))))) :mod (w3 / wangel))
(a / and :op1 (t / turn-down-05 :arg0 (i / it) :arg1 (p / place :polarity - :location-of (s / spend-02 :arg1 (n / night) :accompanier (h / hotel)))) :op2 (d / difficult :domain (s2 / sleep-01 :arg0 (s3 / station) :arg1-of (h2 / hard-02))))
(a / and :op1 (h / have-03 :arg0 (i / i) :arg1 (s / support-01 :arg1 (f / family))) :op2 (p / possible-01 :arg1 (l / leave-11 :arg0 (i2 / i))))
(t / think-01 :polarity - :arg0 (i / i) :arg1 (e / embrace :arg0 (i2 / it) :arg1 (c / company :name (n / name :op1 "BBC")) :manner (s / somehow)))
(s / show-01 :arg0 (p / person :arg0-of (p2 / participate-01) :arg1-of (i / include-91 :polarity - :arg2 (p3 / person :arg0-of (p4 / participate-01))) :quant (n / none)) :arg1 (g / go-02 :arg0 (p5 / person) :arg4 (s2 / stage :mod (s3 / stage :mod (f / further :polarity -) :mod (f2 / further)))) :medium (s4 / show-04 :mod (t / this)) :arg1-of (e / end-01 :mod (j / just)))
(m / multi-sentence :snt1 (c / contrast-01 :arg1 (c2 / care-01 :arg0 (c3 / care-03 :arg1 (r / refugee) :mod (' / '')) :arg1 (r2 / refugee)) :arg2 (o / obligate-01 :arg1 (y / you) :arg2 (t / think-01 :arg0 (y2 / you) :arg1 (t2 / thing :manner-of (b / bring-01 :arg0 (y3 / you) :arg1 (a / and :op1 (w / world :mod (r3 / real)) :op2 (d / develop-02 :mod (r4 / real)) :op3 (d2 / develop-02 :mod (r5 / real))) :arg2 (c4 / country :mod (r6 / religious-group :name (n / name :op1 "N-A")) :mod (t3 / this))) :arg1-of (l / long-03) :mod (a2 / also)) :time (t4 / time :arg1-of (s / same-01))))) :snt2 (e / emphasize-01 :arg0 (h / he)))
(s / say-01 :arg0 (h / he) :arg1 (h2 / happy :domain (c / couple :mod (j / just))))
(a / and :op1 (i / important :degree (v / very) :domain (d / destroy-01 :polarity - :arg1 (i2 / irk))) :op2 (c / continue-01 :arg1 (w / work-01 :arg1 (f / future))) :time (c2 / circumstance :time (c3 / current)))
(h / heads :arg0 (p / person :arg0-of (h2 / head-01 :arg1 (s / system :mod (f / federal)))) :arg1 (d / declines :mod (t / this)) :time (l / late :degree (m / more)))
(m / multi-sentence :snt1 (o / obligate-01 :arg1 (i / i) :arg2 (b / bear-01 :arg0 (i2 / i) :arg1 (r / responsible-03 :arg0 (i3 / i) :arg1 (i4 / it) :degree (f / full)))) :snt2 (d / declare-01 :arg0 (h / he)))
(b / be-temporally-at-91 :arg1 12 :arg2 (s / since :op1 (a / age-01 :arg1 (l / light) :arg2 (t / temporal-quantity :quant (N / N-A) :unit (y / year)))))
(o / obligate-01 :arg1 (h / he) :arg2 (f / fill :arg0 (h2 / he) :arg1 (d / document :arg1-of (n / need-01))) :condition (c / call-01 :arg1 (s / someone) :arg2 (r / refugee)))
(a / and :op1 (f / feel-01 :arg0 (p / person :arg1-of (n / neighbor-01 :arg2 (y / you))) :arg1 (o / oblige-02 :arg1 (p2 / person) :arg2 (a2 / apologize-01 :arg0 (p3 / person) :arg2 (y2 / you)))) :op2 (p4 / probable :domain (a3 / associated :arg0 (f2 / face :part-of (y3 / you)) :arg1 (t / they) :manner (s / surprise :arg1 (f3 / face)))))
(r / recommend-01 :arg1 (e / ensure-01 :arg0 (w / we) :arg1 (o / or :op1 (u / upgrade-02 :arg1 (p / person :arg1-of (c / charge-05 :arg2 (p2 / phone :poss (y / you))))) :op2 (b / be-located-at-91 :arg1 (p3 / person) :arg2 (n / next) :purpose (p4 / prevent-01 :arg0 (p5 / person) :arg1 (d / discharge :arg1 (n2 / nail)))))))
(s / say-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (p2 / publication :name (n / name :op1 "Interfax")))) :arg1 (e / express-01 :arg0 (p3 / person) :arg1 (t / thing :arg1-of (o / opine-01) :mod (t2 / this)) :arg2 (j / journalist) :location (p4 / peninsula :name (n2 / name :op1 "N-A")) :time (s2 / session :mod (a / autumn) :poss (o2 / organization :name (n3 / name :op1 "OSCE" :op2 "Parliamentary" :op3 "Assembly")))))
(' / '' :arg0 (p / person :name (n / name :op1 "Zhirinovsky")) :arg1 (r / region :mod (r2 / river :name (n2 / name :op1 "Amur"))))
(s / start-01 :arg0 (c / company :name (n / name :op1 "Google")) :arg1 (c2 / campaign-01 :arg0 (c3 / company) :arg1 (c4 / collect-01 :arg0 (c5 / company) :arg1 (m / monetary-quantity :quant 11 :unit (d / dollar :mod (r / renminbi))) :arg2 (r2 / refugee))))
(a / and :op1 (f / fill :arg0 (p / person :arg0-of (s / specialize-01 :arg1 (s2 / stone))) :arg1 (p2 / policeman)) :op2 (a2 / attempt-01 :arg0 (p3 / policeman) :arg1 (e / exploit-01 :arg0 (p4 / policeman) :arg1 (f2 / fence :arg1-of (e2 / establish-01 :location (b / border-01))))))
(p / popular-02 :arg1 (i / it) :arg2 (c / championship :mod (f / football)) :degree (v / very) :mod (a / also) :purpose (e / enjoy-01 :arg0 (y / you) :arg1 (u / use-01 :arg1 (h / house-01 :mod (r / removable)))))
(m / multi-sentence :snt1 (a / approve-01 :arg0 (g / government-organization :arg0-of (g2 / govern-01)) :arg1 (t / thing :arg1-of (t2 / tough-02 :degree (m2 / more))) :arg2 (g3 / government-organization :arg0-of (g4 / govern-01)) :time (p / previous)) :snt2 (t3 / transfer-01 :mode (i / interrogative) :arg0 (c / country :name (n / name :op1 "Ukraine")) :arg1 (t4 / thing :quant 100) :arg2 (c2 / country :name (n2 / name :op1 "Ukraine"))))
(p / person :domain (p2 / person :mod (t / this)))
(a / and :op1 (c / continue-01 :arg0 (c2 / country) :arg1 (s / support-01 :arg0 (c3 / country) :arg1 (o / organization :name (n / name :op1 "Trump")) :manner (m / massive)) :location (a2 / across :op1 (c4 / country)) :arg1-of (c5 / cause-01 :arg0 (i / increase-01 :arg1 (r / rate :mod (s2 / support-01)) :arg3 (p / percentage-entity :value (N / N-A)) :arg4 (p2 / poll-01 :mod (o2 / organization :name (n2 / name :op1 "CBS")) :time (r2 / recent))))) :op2 (u / up-to :op1 (b / between :op1 (t / temporal-quantity :quant (N2 / N-A) :unit (y / year)) :op2 (t2 / temporal-quantity :quant (N3 / N-A) :unit (y2 / year)) :arg1-of (c6 / conduct-01 :location (p3 / poll-01 :arg2 (t3 / tuesday))))))
(c / contrast-01 :arg1 (s / say-01 :arg0 (p / person :arg1-of (i / include-91 :arg2 (p2 / person :mod (p3 / primary)) :arg3 (p4 / percentage-entity :value 48))) :arg1 (s2 / say-01 :arg0 (p5 / person) :arg1 (s3 / support-01 :arg0 (p6 / person) :arg1 (p7 / person :name (n / name :op1 "Clinton")) :manner (e / enthusiastically)))) :arg2 (s4 / say-01 :arg0 (p8 / person :name (n2 / name :op1 "Donald") :arg0-of (h / have-org-role-91 :arg2 (m / minister :mod (p9 / prime)))) :arg1 (i2 / include-91 :arg1 (p10 / person :arg0-of (h2 / have-org-role-91 :arg2 (m2 / minister :mod (p11 / prime)))) :arg2 (p12 / percentage-entity :value (N / N-A)))))
(a / and :op1 (c / close-01 :arg0 (t / they) :arg1 (t2 / tuesday)) :op2 (d / drop-05 :arg0 (t3 / they) :arg1 (r / rate-entity-91 :arg1 (p / percentage-entity :value (N / N-A)) :arg2 (t4 / temporal-quantity :quant (N2 / N-A) :unit (y / year))) :arg4 (r2 / record) :time (d2 / date-entity :month 6 :day 11)))
(a / and :op1 (c / certain :polarity - :mod (b / big) :prep-in (t / thing :arg1-of (c2 / consequence :beneficiary (e / economy :mod (c3 / country :name (n / name :op1 "China"))))) :mod (b2 / big)) :op2 (h / have-03 :polarity - :arg0 (t2 / they) :arg1 (d / data) :mod (a2 / almost) :time (a3 / after :op1 (e2 / event :time (l / late :degree (m / most)) :location (c4 / country))) :arg1-of (t3 / tell-01 :arg0 (p / person :name (n2 / name :op1 "Oliner")))))
(p / possible-01 :polarity - :arg1 (r / raise-01 :arg0 (a / and :op1 (p2 / person :name (n / name :op1 "Clocking" :op2 "Karl" :op3 "Stefanovic")) :op2 (p3 / person :name (n2 / name :op1 "Lisa" :op2 "Wilkinson")) :location (c / city :name (n3 / name :op1 "Canberra"))) :arg1 (c2 / consequence :arg1-of (s / state-01 :arg0 (t / thing :arg1-of (s2 / state-01 :arg0 (t2 / thing :arg1-of (s3 / state-01)))))) :arg2 (r2 / release-01 :arg1 (t3 / thing :arg1-of (s4 / state-01)))) :time (t4 / today))
(c / confident-01 :arg1 (p / person :name (n / name :op1 "Assad")) :condition (w / want-01 :arg0 (c2 / continent :name (n2 / name :op1 "Europe")) :arg1 (t / tackle-01 :arg0 (c3 / country) :arg1 (p2 / problem :topic (r / refugee)))))
(r / recommend-01 :arg1 (p / produce-01 :polarity - :arg0 (y / you) :arg1 (s / sentiment :arg0-of (d / disturb :arg1 (p2 / person) :arg2 (o / or :op1 (s2 / sleep-01 :arg0 (p3 / person)) :op2 (l / learn-01 :arg0 (p4 / person)))))))
(l / locate-01 :arg1 (p / problem) :location (c / city :mod (l2 / large) :location (c2 / city :mod (l3 / large)) :location-of (l4 / lead-03 :polarity - :arg0 (d / develop-02 :arg1 (i / infrastructure)) :arg2 (a / and :op1 (p2 / pesticides :arg1 (c3 / city)) :op2 (w / waste :domain (c4 / city)) :op3 (f / fill-01 :arg1 (c5 / city) :arg2 (a2 / and :op1 (p3 / pesticides :arg1 (c6 / city)) :op2 (w2 / waste :poss (e / enterprise)))) :op3 (c7 / cut-02 :arg1 (d2 / dwellings :quant (f2 / few) :arg1-of (r / remain-01)) :arg2 (c8 / construct-01 :arg1 (q / quarter :mod (n / new) :mod (r2 / residential))))))) :mod (p4 / particular))
(m / multi-sentence :snt1 (f / fun :domain (p / person :name (n / name :op1 "Ellie")) :mod (s / still) :arg0-of (w / walk-01 :path (a / along :op1 (r / road)) :accompanier (g / game :name (n2 / name :op1 "N-A") :mod (y / yellow)))) :snt2 (a2 / and :op1 (e / earn-01 :arg0 (p2 / person :name (n3 / name :op1 "Malchish-Kibalchish")) :arg1 (m2 / match-03 :mod (m3 / magical))) :op2 (s2 / say-01 :polarity - :arg0 (p3 / person :name (n4 / name :op1 "Malchish-Kibalchish")) :arg1 (s3 / strong-02 :arg1 (s4 / secret :mod (m4 / military) :mod (b / burzhuinam)) :degree (t / too) :source (p4 / person)))))
(m / multi-sentence :snt1 (a / act-02 :mode (i / interrogative) :arg0 (c / coach :mod (h / head))) :snt2 (b / be-located-at-91 :mode (i2 / interrogative) :arg1 (p / person :name (n / name :op1 "Vadim" :op2 "Skripchenko")) :arg2 (t / threshold :poss (l / league :mod (p2 / premier)))) :snt3 (n2 / note-01 :mode (i3 / interrogative) :arg0 (y / you) :arg1 (d / diagram :arg1 (c2 / command-02 :arg1 (r / rival-01 :arg0 (p3 / person :arg0-of (r2 / rival-01 :arg1 (c3 / country))))))))
(m / multi-sentence :snt1 (r / remember-01 :arg0 (i / i) :arg1 (t / that)) :snt2 (c / contrast-01 :arg2 (s / say-01 :arg0 (p / person :name (n / name :op1 "Wayne")) :arg1 (c2 / care-01 :polarity - :arg0 (p2 / person) :arg1 (i2 / it)))) :li 2010)
(t / trend :arg0-of (f / favor-01) :mod (a / also))
(s / say-01 :arg1 (t / think-01 :arg0 (i / i) :arg1 (w / wait-01 :arg1 (w2 / we) :arg2 (g / get-04 :arg0 (w3 / we) :arg1 (t2 / take-01 :arg0 (p / person) :arg1 (i2 / it) :manner (s2 / serious))) :mod (t3 / too))) :arg2 (p2 / person :name (n / name :op1 "N-A")))
(s / seem-01 :arg1 (b / be-located-at-91 :arg1 (y / you) :arg2 (m / minority) :time (d / day :mod (t / this))) :condition (k / know-01 :arg0 (y2 / you) :arg1 (t2 / thing :manner-of (h / handle-01 :arg0 (y3 / you) :arg1 (o / or :op1 (h2 / hammer) :op2 (d2 / deftly))))))
(s / see-01 :mode (i / interrogative) :arg0 (y / you) :arg1 (t / thing :arg0-of (c / cause-01 :arg1 (d / discuss-01 :arg1 (p / program :mod (t2 / this)) :arg1-of (f / frequent-02)) :arg1-of (c2 / connect-01 :arg2 (a / absence :op1 (a2 / and :op1 (a3 / absence :poss (o / originality)) :op2 (a4 / abet-01 :arg1 (f2 / features))))))))
(p / problem :domain (t / this) :mod (t2 / thorough :degree (q / quite)) :arg1-of (m / mean-01 :arg2 (p2 / problem :topic (s / society) :domain (t3 / this))) :mod (b / besides))
(a / and :op1 (s / speak-01 :arg0 (t / they) :arg2 (p / person :arg0-of (s2 / specialize-01 :arg1 (t2 / together)) :mod (b / both))) :op2 (i / interest-01 :arg0 (t3 / they) :arg1 (t4 / they)))
(p / pass-01 :arg1 (c / craft :mod (c2 / cyrully)) :arg2 (g / generation :prep-to (g2 / generation)))
(c / conduct-01 :arg1 (s / site :location (s2 / site :quant 2)) :time (n / now))
(d / die-01 :arg1 (c / chicken :quant 2 :arg1-of (i / include-91 :arg2 (c2 / chicken :quant 2 :arg1-of (a / addict-01 :arg2 (c3 / chicken))))))
(r / replace-01 :arg0 (l / location :name (n / name :op1 "Chase" :op2 "Australia")) :arg1 (r2 / rate-entity-91 :arg1 (m / monetary-quantity :quant (N / N-A) :unit (d / dollar)) :arg2 (t / temporal-quantity :quant (N2 / N-A) :unit (m2 / minute))) :arg1-of (c / cause-01 :arg0 (p / possible-01 :polarity - :arg1 (b / beat-01 :arg1 (p2 / person :name (n2 / name :op1 "Mac" :op2 "Gvayra"))))))
(s / say-01 :arg0 (p / person :name (n / name :op1 "Corbin")) :arg1 (r / replace-01 :arg0 (a / and :op1 (p2 / person :name (n2 / name :op1 "Angela" :op2 "Eagle")) :op2 (p3 / person :arg0-of (h / have-org-role-91 :arg2 (m / minister :mod (e / economics)))) :op3 (p4 / person :arg0-of (h2 / have-org-role-91 :arg2 (m2 / minister :mod (e2 / economics)))) :op4 (p5 / person :arg0-of (h3 / have-org-role-91 :arg2 (m3 / minister :mod (e3 / economics)))) :op5 (p6 / person :arg0-of (h4 / have-org-role-91 :arg2 (m4 / minister)))) :arg1 (i / issue-02 :arg0 (p7 / person)) :time (a2 / absent-01 :arg1 (p8 / person) :arg2 (a3 / abroad))))
(a / and :op1 (n / need-01 :arg0 (y / you) :arg1 (c / care-04 :arg0 (y2 / you)) :degree (v / very)) :op2 (f / focus-01 :arg0 (y3 / you) :arg2 (t / techniques :polarity - :arg0 (y4 / you) :arg1 (b / barrier))))
(e / exemplify-01 :arg0 (a / and :op1 (l / look-01 :arg0 (p / person :arg1-of (i / include-91 :arg2 (p2 / person :arg1-of (i2 / imprison-01)) :arg3 (p3 / person :arg1-of (i3 / imprison-01))) :quant (m / multiple :op1 1)) :arg1 (m2 / man)) :op2 (d / declare-02 :arg0 (p4 / person) :arg1 (w / want-01 :arg0 (p5 / person) :arg1 (c / change-01 :arg0 (p6 / person) :arg1 (s / sex))) :arg1-of (t / tell-01 :arg0 (p7 / person :name (n / name :op1 "Alekseev")))) :location (p8 / prison) :time (a2 / already)))
(h / have-concession-91 :arg1 (a / and :op1 (s / satisfy-01 :arg0 (p / person :arg0-of (v / vote-01) :mod (p2 / primary) :arg1-of (p3 / personal-02) :poss (p4 / person :name (n / name :op1 "Hillary" :op2 "Clinton"))) :arg1 (p5 / person :arg0-of (v2 / vote-01) :mod (p6 / primary) :quant (m / majority)) :arg2 (a2 / account :mod (t / this))) :op2 (i / impact-01 :polarity - :arg0 (p7 / person) :arg1 (o / opine-01 :arg0 (p8 / person) :topic (i2 / it) :mod (o2 / overall)))) :arg2 (c / continue-01 :arg1 (a3 / and :op1 (a4 / account :mod (e / email) :arg1-of (p9 / personal-02) :poss (p10 / person)) :op2 (s2 / server)) :time (c2 / continue-01 :arg1 (a5 / and :op1 (a6 / account :mod (e2 / email) :arg1-of (p11 / personal-02) :poss (p12 / person)) :op2 (s3 / server)))))
(t / treat-01 :arg0 (p / person :arg0-of (v / visit-01)) :arg1 (a / and :op1 (t2 / tea :name (n / name :op1 (p2 / poured))) :op2 (p3 / person :arg0-of (h / have-org-role-91 :arg2 (h2 / head-of-state))) :op3 (p4 / person :arg0-of (h3 / have-org-role-91 :arg2 (h4 / head-of-state))) :op4 (p5 / person :arg0-of (h5 / have-org-role-91 :arg2 (h6 / head-of-state))) :op5 (p6 / person :arg0-of (h7 / have-org-role-91 :arg2 (h8 / head-of-state))) :op6 (p7 / person :arg0-of (h9 / have-org-role-91 :arg2 (h10 / head-of-state))) :op7 (p8 / person :arg0-of (h11 / have-org-role-91 :arg2 (h12 / head-of-state))) :op7 (p9 / person :arg0-of (h13 / have-org-role-91 :arg2 (h14 / head-of-state)))))
(a / and :op1 (e / enjoy-01 :arg0 (t / tea :mod (a2 / aromatic)) :arg1 (t2 / tea :mod (u / uttermost))) :op2 (e2 / enjoy-01 :arg0 (a3 / and :op1 (p / person :arg0-of (h / have-org-role-91 :arg1 (o / organization :name (n / name :op1 "Dagestani" :op2 "Inger")) :arg2 (m / member))) :op2 (p2 / person :name (n2 / name :op1 "Musmul") :arg0-of (h2 / have-org-role-91 :arg1 (o2 / organization) :arg3 (h3 / honeymoon))) :op3 (p3 / person :name (n3 / name :op1 "Musmul") :arg0-of (h4 / have-org-role-91 :arg1 (c / country :name (n4 / name :op1 "Iran")) :arg2 (h5 / honeymoon))) :op4 (p4 / person :arg0-of (h6 / have-org-role-91 :arg1 (c2 / country :name (n5 / name :op1 "Iran")) :arg2 (m2 / member))) :op5 (p5 / person :arg0-of (h7 / have-org-role-91 :arg1 (c3 / country :name (n6 / name :op1 "Iran")) :arg2 (m3 / member)))) :arg1 (p6 / part :mod (u2 / uttermost))))
(c / call-01 :arg0 (p / person :name (n / name :op1 "Assad")) :arg1 (a / and :op1 (c2 / country :arg1-of (f / friendly-01 :arg2 (c3 / country :name (n2 / name :op1 "Russia")))) :op2 (c4 / country :arg1-of (f2 / friendly-01 :arg2 (c5 / country :name (n3 / name :op1 "Iran"))))) :arg2 (a2 / and :op1 (c6 / country) :op2 (c7 / country)))
(c / contrast-01 :arg1 (f / fact :domain (l / life :mod (e / economy))) :arg2 (p / play-01 :arg0 (t / they) :arg1 (r / rate) :frequency (o / often) :arg1-of (c2 / cause-01 :arg0 (r2 / raise-01 :arg0 (t2 / they) :arg1 (r3 / rate) :frequency (o2 / often)))))
FAILED_TO_PARSE#Two concepts in a row.
(t / tell-01 :polarity - :arg0 (h / he) :arg1 (a / and :op1 (t2 / thing :arg1-of (w / write-01)) :op2 (d / do-02 :polarity - :arg0 (i / i) :arg1 (t3 / thing))) :arg2 (i2 / i) :concession (e / even-if :op1 (t4 / talk-01 :arg0 (h2 / he))))
(m / multi-sentence :snt1 (s / scenario :mod (e / early :degree (m2 / most)) :arg1-of (w / write-01 :arg0 (p / person :name (n / name :op1 "Herman") :arg1-of (w2 / write-01 :arg0 (p2 / person :quant 1940 :arg1-of (w3 / write-01 :arg0 (p3 / person :arg1-of (w4 / write-01 :arg0 (p4 / person :quant 1940 :arg1-of (w5 / write-01 :arg0 (p5 / person :arg1-of (w6 / write-01 :arg0 (p6 / person :quant 1940 :arg1-of (w7 / write-01 :arg0 (p7 / person :arg1-of (w8 / write-01 :arg0 (p8 / person :quant 1940 :mod (c / country :name (n2 / name :op1 "N-A")))))))))))))))))) :time (e2 / early :degree (m3 / most))) :snt2 (t / title-01 :arg1 (p9 / person :mod (c2 / country) :mod (c3 / country)) :arg2 (t2 / title :mod (w9 / work-01) :poss (m4 / movie))))
(b / become-01 :arg1 (p / person :name (n / name :op1 "Isaac" :op2 "Caldiero") :arg0-of (a / assist-01 :arg2 (a2 / and :op1 (c / climber) :op2 (p2 / person :arg0-of (a3 / assist-01))))) :arg2 (c2 / company :ord (o / ordinal-entity :value 1) :arg0-of (w / win-01 :arg1 (s / show-04))) :time (n2 / night :mod (m / monday)) :arg1-of (c3 / cause-01 :arg0 (s2 / show-01 :arg0 (c4 / company :ord (o2 / ordinal-entity :value 1) :arg0-of (w2 / win-01 :arg1 (s3 / show-04))) :arg1 (h / home :mod (m2 / monetary-quantity :quant 1 :unit (d / dollar :mod (r / renminbi)))))))
(s / solve-01 :arg0 (c / country :polarity - :location (c2 / continent :name (n / name :op1 "Europe"))) :arg1 (a / and :op1 (p / possible-01 :polarity - :arg1 (c3 / cope-01 :arg0 (c4 / country) :manner (a2 / alone) :prep-with (t / this))) :op2 (c5 / country :mod (s2 / small :degree (s3 / such)) :example (c6 / country :name (n2 / name :op1 "Serbia")))))
(h / have-03 :arg0 (p / person :quant 6 :arg1-of (i / include-91 :arg2 (t / top :quant 10 :mod (t2 / top)))) :arg1 (p2 / person :name (n / name :op1 "Donald" :op2 "Trump")) :mod (p3 / positive) :time (n2 / now))
(a / adapt-01 :arg1 (s / system :mod (d / drive-01 :arg1-of (c / complete-02))) :prep-under (c2 / condition :mod (c3 / country :name (n / name :op1 "N-A"))))
(i / intend-01 :arg0 (p / person :arg1-of (e / employ-01) :mod (c / company :name (n / name :op1 "Facebook"))) :arg1 (a / and :op1 (p2 / post-01 :arg0 (p3 / person) :arg1 (p4 / post)) :op2 (c2 / comment-01 :arg0 (p5 / person) :arg3 (a2 / and :op1 (p6 / person :arg0-of (u / use-01)) :op2 (r / refugee)) :mod (n2 / negative))))
(k / know-01 :mode (i / interrogative) :arg0 (p / person :name (n / name :op1 "David" :op2 "Cameron")) :arg1 (' / '' :arg0 (a / anything :mod (e / else)) :arg1 (a2 / anything :mod (e2 / else))))
(u / use)
(f / form-02 :arg0 (t / terminate-01 :arg1 (s / standard :mod (l / location :name (n / name :op1 "Domodedovo")))) :arg1 (a / address-02 :arg1 (t2 / task :arg1-of (a2 / address-01 :arg2 (b / beginners)))))
(m / multi-sentence :snt1 (c / contrast-01 :arg2 (d / difficult :degree (g / great) :domain (s / service :location (a / area :mod (t / this))) :mod (g2 / great))) :snt2 (n / need-01 :arg0 (y / you) :arg1 (g3 / get-01 :arg0 (y2 / you) :arg1 (a2 / approvals :quant (l / lot)))))
(p / possible-01 :arg1 (c / call-01 :arg1 (s / season :mod (t / this)) :arg2 (a / athletes :beneficiary (p2 / person :name (n / name :op1 "Sergey" :op2 "Shubenkov") :location (l / location :name (n2 / name :op1 "Barnaul"))))))
(s / say-01 :arg0 (h / he) :arg1 (h2 / have-03 :arg0 (c / country :name (n / name :op1 "US")) :arg1 (p / presence) :purpose (i / isolate-01 :arg1 (c2 / country :name (n2 / name :op1 "Russia")) :mod (f / further)) :condition (s2 / support-01 :arg0 (c3 / country) :arg1 (p2 / person :name (n3 / name :op1 "Bashar" :op2 "Assad") :arg0-of (h3 / have-org-role-91 :arg1 (c4 / country) :arg2 (p3 / president))) :arg1-of (r / report-01))))
(d / decline-01 :arg1 (f / forecast-01) :concession (i / increase-01 :arg1 (r / rate :arg1-of (a / amount-01 :arg2 (r2 / rate-entity-91 :arg1 4.9 :arg2 (t / temporal-quantity :quant (N / N-A) :unit (y / year)))) :arg1-of (c / come-01 :arg4 (f2 / force-04) :time (d2 / date-entity :month 4 :day (N2 / N-A))) :arg1-of (c2 / come-01 :arg4 (f3 / force-04) :time (d3 / date-entity :month 4 :year (N3 / N-A))) :arg2-of (i2 / increase-01 :arg1 (c3 / charge-05 :arg1 (t2 / transport-01 :arg1 (o / or :op1 (t3 / transport-01 :mod (h / heavy)) :op2 (c4 / cargo :mod (l / large)) :mod (o2 / or :op1 (h2 / heavy) :op2 (l2 / large)))))))))
(a / and :op1 (s / suffer-01 :arg0 (p / person :arg0-of (p2 / play-01) :mod (2 / 29-year-old)) :arg1 (p3 / problem :topic (a2 / ankle)) :duration (t / temporal-quantity :quant (N / N-A) :unit (y / year))) :op2 (p4 / possible-01 :polarity - :arg1 (l / leave-15 :arg0 (p5 / person) :arg1 (c / country :name (n / name :op1 "Wales")) :time (s2 / summer :mod (t2 / this)))))
(c / contrast-01 :arg1 (p / possible-01 :arg1 (t / take-10 :arg0 (d / develop-02 :arg0 (h / he) :arg1 (t2 / time)) :arg1 (t3 / time))) :arg2 (n / need-01 :arg0 (h2 / he) :arg1 (d2 / develop-02 :arg0 (h3 / he) :arg1 (s / strategy :arg1-of (c2 / coherent) :consist-of (p2 / person :arg0-of (h4 / have-rel-role-91 :arg2 (d3 / dh))) :prep-with (p3 / press))) :concession (s2 / sit-01 :arg1 (p4 / person :name (n2 / name :op1 "Andrew" :op2 "Marr")) :arg2 (f / force :mod (a / air) :location (c3 / country :name (n3 / name :op1 "N-A"))) :manner (e / exact))))
(a / and :op1 (p / prepare-02 :polarity - :arg1 (p2 / person :arg0-of (h / have-org-role-91 :arg1 (p3 / person :arg0-of (h2 / have-org-role-91 :arg2 (m / minister))) :arg2 (m2 / minister))) :arg2 (a2 / and :op1 (p4 / prepare-02 :arg1 (p5 / person)) :op2 (i / inform-01 :arg0 (p6 / person) :arg1-of (b / bad-05)))) :op2 (c / conclude-01 :arg0 (p7 / person) :arg1 (a3 / and :op1 (n / negotiate-01 :arg0 (p8 / person)) :op2 (c2 / conclude-01 :arg0 (p9 / person) :arg1 (a4 / agree-01 :arg1 (u / unsuccessful))))))
(a / and :op1 (r / report-01 :arg0 (i / i) :arg1 (t / thing :arg2-of (r2 / result-01 :arg1 (t2 / thing :arg2-of (r3 / result-01 :arg1 (p / percentage-entity :value (N / N-A) :arg3-of (i2 / include-91 :arg2 (p2 / percentage-entity :value (N2 / N-A))))))) :mod (d / disappoint-01))) :op2 (r4 / reduce-01 :arg0 (t3 / thing) :arg1 (p3 / profit-01 :arg0 (s / service)) :arg1-of (c / cause-01 :arg0 (a2 / and :op1 (d2 / demand-01 :arg1 (s2 / service :mod (m / military)) :arg1-of (f / fall-01)) :op2 (i3 / increase-01 :arg1 (i4 / increase-01 :arg1 (t4 / transport-01 :arg1 (l / land))))))))
(e / enter-01 :arg0 (p / person :name (n / name :op1 "Nicholas") :arg0-of (h / have-rel-role-91 :arg2 (b / brother))) :arg1 (m / man :mod (n2 / naked)))
(s / say-01 :arg1 (v / vote-01 :arg0 (w / we) :arg1 (m / movement-07 :arg1 (c / country :name (n / name :op1 "Greece") :location (w2 / way :mod (c2 / continent :name (n2 / name :op1 "N-A"))))) :mod (a / actual) :arg1-of (c3 / cause-01 :arg0 (g / good :domain (w3 / we)))) :arg2 (l / lead-01 :arg0 (c4 / consequence :arg0-of (d / devastate-01)) :arg1 (c5 / country :poss (o / organization :name (n3 / name :op1 "EU"))) :manner (a2 / amr-unknown)))
(s / say-01 :arg0 (p / person :name (n / name :op1 "Elstein")) :arg1 (a / and :op1 (r / recommend-01 :arg1 (m / make-05 :arg0 (c / company :name (n2 / name :op1 "BBC")) :arg1 (e / effort :degree (m2 / more) :topic (m3 / morality :mod (s2 / such))))) :op2 (s3 / say-01 :arg0 (h / he) :arg1 (h2 / have-part-91 :arg1 (t / thing :arg1-of (s4 / say-01 :arg0 (h3 / he))) :arg2 (p2 / part :part-of (t2 / they) :mod (o / only)) :arg1-of (m4 / mean-01 :arg2 (j / join-01 :arg1 (p3 / person :arg0-of (b / broadcast-01) :mod (c2 / commerce)) :purpose (w / watch-01 :arg0 (p4 / person) :arg1 (a2 / available-02 :arg2 (o2 / online)))))))) :medium (p5 / partner-01))
(v / version :arg1-of (c / complete-02 :degree (m / more)) :mod (s / script) :domain (t / thing :arg1-of (d / draft-01 :ord (o / ordinal-entity :value 2))) :arg1-of (c2 / cause-01 :arg0 (p / plan-01 :arg1 (f / film) :mod (f2 / final))))
(l / learn-01 :arg0 (i / i) :arg1 (p / possible-01 :arg1 (s / spread-01 :arg1 (r / rule :quant 8 :arg1-of (s2 / simple-02)) :arg2 (o / out))) :arg1-of (g / general-02))
(r / recognize-02 :arg0 (c / court :poss (p / person :name (n / name :op1 "Lenin"))) :arg1 (g / guilty-01 :arg1 (c2 / citizen :quant 4) :arg2 (v / vandalism :polarity -) :arg1-of (c3 / cause-01 :arg0 (b / be-located-at-91 :arg1 (a / and :op1 (p2 / person :arg1-of (b2 / be-located-at-91 :arg2 (t / territory :poss (o / organization :name (n2 / name :op1 "Committee") :mod (r2 / region))))) :op2 (c4 / complex :mod (m / memorial)) :op3 (c5 / complex :mod (m2 / memorial)) :op4 (c6 / complex :mod (m3 / memorial))) :arg2 (c7 / complex :mod (m4 / memorial))))))
(s / step :mod (i / important) :domain (t / this) :arg1-of (c / cause-01 :arg0 (a / and :op1 (g / give-01 :arg0 (i2 / it) :arg1 (r / role :arg1-of (s2 / significant-02 :degree (m / more))) :arg2 (r2 / resource)) :op2 (e / ensure-01 :arg0 (m2 / market) :arg1 (a2 / and :op1 (r3 / role :mod (b / business)) :op2 (e2 / ensure-01 :arg1 (l / legitimacy)) :op3 (r4 / restore-01 :arg1 (a3 / and))))) :arg1-of (s3 / say-01 :arg0 (s4 / statement))))
(a / and :op1 (r / restore-01 :arg0 (m / market) :arg1 (p / position :poss (m2 / market)) :time (m3 / month :mod (t / this)) :degree (p2 / part)) :op2 (v / value-01 :arg1 (i / industry :mod (j / jones) :arg1-of (a2 / average-03)) :arg2 (b / below :op1 (p3 / product-of :op1 10 :op2 (p4 / percentage-entity :value (N / N-A))) :time (d / date-entity :month 5))))
(a / and :op1 (d / discover-01 :arg0 (p / police) :arg1 (b / body :poss (p2 / person :name (n / name :op1 "Amy" :op2 "Prentiss"))) :li 41) :op2 (d2 / discover-01 :arg0 (p3 / police) :arg1 (a2 / and :op1 (b2 / body :poss (p4 / person)) :op2 (n2 / note :mod (h / handwritten) :source (p5 / person :name (n3 / name :op1 "Lamba"))) :op3 (n4 / note :mod (h2 / handwritten) :source (p6 / person :name (n5 / name :op1 "Lamba") :quant 45)))))
(p / process-01 :arg1 (m / market :mod (g / globe) :mod (g2 / globe)) :arg1-of (s / specific-02))
(s / seem-01 :arg1 (c / change-01 :arg0 (t / thing :arg1-of (p / precede-01)) :arg1 (t2 / thing :arg1-of (p2 / precede-01)) :time (i / immediate) :time (a / after :op1 (r / rate :ord (o / ordinal-entity :value 1) :consist-of (r2 / rate :mod (r3 / rate :ord (o2 / ordinal-entity :value 1)))))))
(e / emphasize-01 :arg0 (s / she) :arg1 (c / contribute-01 :arg0 (t / this) :arg1 (b / building :mod (n / new) :arg0-of (t2 / transport-01) :location (o / outskirts :location (o2 / outskirts :poss (c2 / city))))))
(c / cause-01 :arg1 (s / suggest-01 :arg0 (p / person :quant (s2 / some) :arg0-of (h / have-org-role-91 :arg2 (m / minister)) :mod (s3 / such)) :arg1 (p2 / plan-01 :arg0 (p3 / person) :arg1 (i / issue-01 :arg0 (p4 / person) :arg1 (r / remorse :arg1-of (s4 / smuggle-01 :manner (d / deliberate))) :arg2 (s5 / style :mod (s6 / snp)) :time (c2 / campaign-01 :mod (r2 / referendum) :location (c3 / country :name (n / name :op1 "UK") :location (c4 / country :quant 2017)))) :purpose (o / outlaw-01 :arg0 (p5 / person) :arg1 (p6 / process-02 :arg1 (m2 / might :poss (c5 / country :name (n2 / name :op1 "Britain")))) :arg2 (o2 / organization :name (n3 / name :op1 "EU"))))))
(c / cause-01 :arg0 (p / possible-01 :arg1 (l / live-01 :arg0 (g / guest :poss (l2 / location :name (n / name :op1 "St." :op2 "Petersburg") :arg1-of (i / include-91 :arg2 (a / anniversary :quant 300 :poss (l3 / location :name (n2 / name :op1 "St." :op2 "Petersburg"))))))) :arg1 (p2 / possible-01 :arg1 (l4 / live-01 :arg0 (g2 / guest :poss (p3 / person :arg0-of (h / have-org-role-91 :arg2 (t / tournament)))) :location (c2 / cabins)))))
(c / change-01 :arg0 (n / nematode :mod (s / small)) :arg1 (d / direction) :location (a / amr-unknown) :arg1-of (a2 / affect-01 :arg0 (i / impulse :mod (s2 / sound) :arg1-of (m / mean-01 :arg2 (e / ears :mod (h / human))))))
(t / thank-01 :arg0 (i / i) :arg1 (c / cell :arg1-of (c2 / connect-01 :arg1-of (r / report-01 :location (o / organization :name (n / name :op1 "Nature" :op2 "Communications") :mod (j / journal))))) :arg2 (w / wave-04 :mod (s / sound)))
(p / possible-01 :arg1 (r / return-02 :arg1 (i / idea :arg1-of (l / lead-01 :arg0 (a / and :op1 (c / continent :name (n / name :op1 "Europe") :arg1-of (l2 / lead-02 :arg0 (c2 / continent :name (n2 / name :op1 "Europe")))) :op2 (w / war :quant 2)))) :arg2 (f / form :arg1-of (d / differ-02))) :mod (g / great) :mod (g2 / great))
(a / and :op1 (p / plus :op1 (o / or :op1 (p2 / plus :op1 (p3 / percentage-entity :value (N / N-A))) :op2 (p4 / percentage-entity :value (N2 / N-A)))) :op2 (h / hold-04 :arg1 (t / thing :quant (b / between :op1 6 :op2 6))))
(a / and :op1 (s / see-01 :arg0 (i / i) :arg1 (p / person :name (n / name :op1 "Monica")) :frequency 3) :op2 (b / brainwash-01 :arg1 (p2 / person) :arg2 (i2 / i) :mod (d / definite)))
(m / multi-sentence :snt1 (c / clear-06 :arg1 (a / and :op1 (c2 / clear-06 :arg1 (l / labour :arg1 (a2 / and :op1 (p / person :arg0-of (h / have-org-role-91 :arg2 (g / general :mod (m2 / market)))) :op2 (p2 / person :arg0-of (h2 / have-org-role-91 :arg1 (c3 / company :name (n / name :op1 "N-A")) :arg3 (l2 / lead-02 :arg0 (p3 / person))))) :mod (i / important :degree (m3 / most) :ord (o / ordinal-entity :value 1))))) :op2 (t / thing :mod (i2 / important :degree (m4 / most) :mod (p4 / primary)) :domain (i3 / inflation))) :snt2 (s / say-01 :arg0 (p5 / person :arg0-of (h3 / have-org-role-91 :arg1 (c4 / company :name (n2 / name :op1 "N-A")) :arg3 (l3 / lead-02 :arg0 (p6 / person) :arg1 (c5 / company :name (n3 / name :op1 "N-A"))))) :arg1 (t2 / thing :mod (i4 / important :degree (m5 / most)) :domain (i5 / inflation))))
(o / obligate-01 :arg2 (a / and :op1 (p / pleasant :arg1 (t / time :mod (b / both))) :op2 (d / deliver-01 :arg1 (t2 / time) :arg2 (a2 / around :op1 (t3 / temporal-quantity :quant (N / N-A) :unit (w / week))))))
(c / cause-01 :arg0 (o / obligate-01 :arg1 (c2 / continent :name (n / name :op1 "Europe")) :arg2 (b / behave :arg0 (c3 / continent :name (n2 / name :op1 "Europe")) :arg1 (w / way :mod (s / such)) :condition (p / possible-01 :polarity - :arg1 (d / detain-01 :arg1 (r / register-02))))))
(c / cause-01 :arg0 (b / behaving :arg1 (c2 / continent :name (n / name :op1 "Europe")) :manner (w / way :mod (s / such))) :arg1 (p / possible-01 :polarity - :arg1 (d / detain-01 :arg1 (t / they))))
(c / contrast-01 :arg1 (d / drug :quant (m / multiple) :mod (o / only :polarity -)) :arg2 (b / be-located-at-91 :arg1 (p / person :arg0-of (h / have-rel-role-91 :arg2 (p2 / patient))) :arg2 (p3 / person :arg0-of (h2 / have-rel-role-91 :arg2 (p4 / patient)))))
(s / show-04 :arg1 (c / comedy))
(b / build-01 :arg1 (s / screen :location (b2 / behind :op1 (s2 / screen)) :mod (n / new)) :purpose (u / upgrade-02 :arg1 (m / model :poss (p / person :mod (e / ethnic-group :name (n2 / name :op1 "N-A"))))) :location (h / here))
(a / and :op1 (l / line :mod (n / new) :mod (s / semi-robotic) :location (b / behind :op1 (a2 / apron))) :op2 (f / fitting :arg0 (l2 / line) :arg1 (d / door) :purpose (m / model :mod (u / upgrade-02 :arg1 (p / person :mod (e / ethnic-group :name (n2 / name :op1 "N-A")))))))
(d / detail-01 :arg0 (a / and :op1 (p / person :arg0-of (h / have-org-role-91 :arg1 (a2 / and :op1 (p2 / person :arg0-of (h2 / have-org-role-91 :arg1 (s / state) :arg2 (p3 / person :arg0-of (i / investigate-01)))) :op2 (p4 / person :arg0-of (h3 / have-org-role-91 :arg1 (a3 / and :op1 (p5 / person :arg0-of (s2 / study-01)) :op2 (p6 / person :arg1-of (e / employ-01)))) :op2 (p7 / person :arg1-of (e2 / employ-01)) :op3 (p8 / person :arg1-of (e3 / employ-01)) :op4 (p9 / person :arg1-of (e4 / employ-01)) :op5 (p10 / person :arg1-of (e5 / employ-01))))))) :arg2 (p11 / person :arg0-of (t / teach-01) :mod (p12 / probable) :mod (p13 / probable)))
(s / see-01 :arg1 (p / possible-01 :arg1 (o / operate-01 :arg1 (c / capable-01 :arg1 (p2 / person :arg0-of (h / have-org-role-91 :arg1 (c2 / cabinet :mod (e / electricity)) :arg2 (a / a400m))) :arg2 (a2 / address-02 :arg0 (p3 / person) :arg1 (c3 / capable-01 :arg1 (p4 / person) :arg2 (o2 / operate-01) :mod (k / kind :mod (f / further)))))) :arg1-of (c4 / cause-01 :arg0 (s2 / see-01 :arg1 (c5 / capable-01 :arg1 (p5 / person :arg0-of (h2 / have-org-role-91 :arg1 (c6 / cabinet :mod (e2 / electricity)) :arg2 (a3 / a400m))) :arg2 (a4 / address-02 :arg0 (p6 / person) :arg1 (c7 / capable-01 :arg1 (p7 / person) :arg2 (o3 / operate-01) :mod (k2 / kind :mod (f2 / further)))))))))
(p / possible-01 :arg1 (d / downloading :arg0 (y / you) :arg1 (o / organization :name (n / name :op1 "BBC" :op2 "News")) :arg2 (s / send-01 :arg0 (y2 / you) :arg1 (p2 / photograph-01) :arg2 (w / we) :purpose (u / use-01 :arg0 (w2 / we) :arg1 (p3 / photo :topic (a / apply-01)) :arg2 (w3 / we)))))
(a / and :op1 (b / blind :arg0 (p / person :name (n / name :op1 "Carson")) :arg1 (f / fire-01 :arg0 (o / organization :name (n2 / name :op1 "Trump")) :arg1 (f2 / fire)) :manner (b2 / blind-02)) :op2 (a2 / apologize-01 :arg0 (p2 / person) :arg1 (i / involve-01 :arg1 (p3 / person) :arg2 (f3 / faith :arg1-of (n3 / name-01 :arg2 (p4 / person)) :mod (m / much))) :mod (e / even)))
(o / opine-01 :arg0 (p / person :arg0-of (a / apply-01)) :arg1 (o2 / opine-01 :arg0 (p2 / person)))
(a / and :op2 (d / disappeared :arg0 (i / image :source (l / location :name (n / name :op1 "Callais")) :location-of (w / wait-01 :arg1 (m / man :arg1-of (b / black-05)))) :arg1 (i2 / image) :arg2 (s / see-01 :arg0 (a2 / and) :arg1 (p / possible-01 :mode (i3 / interrogative) :arg1 (c / crawls :arg0 (a3 / and :op1 (m2 / man :arg1-of (b2 / black-05)) :op2 (m3 / man :arg1-of (b3 / black-05)))))) :mod (a4 / also)))
(w / want-01 :arg0 (c / country :name (n / name :op1 "Serbia")) :arg1 (p / participate-01 :arg0 (c2 / country) :arg1 (t / thing :arg2-of (s / solve-01))) :arg1-of (c3 / cause-01 :arg0 (h / harm-01 :polarity - :arg0 (c4 / country) :arg1 (c5 / country) :arg1-of (d / direct-02 :mod (j / just)))))
(m / multi-sentence :snt1 (b / be-located-at-91 :arg1 (t / thing :arg1-of (b2 / be-located-at-91 :arg2 (f / footage :mod (i / illustrative)))) :arg2 (a / amr-unknown) :mod (m2 / main)) :snt2 (u / use-01 :arg0 (f2 / footage :mod (i2 / illustrative)) :arg1 (i3 / image :mod (o / only) :consist-of (a2 / and :op1 (c / child) :op2 (w / woman)))))
(m / multi-sentence :snt1 (p / plan-01 :arg0 (i / i) :arg1 (m2 / meet-03 :arg0 (i2 / i) :arg1 (a / and :op1 (p2 / person :arg0-of (l / lead-02 :arg1 (g / government-organization :name (n / name :op1 "Parliament")))) :op2 (p3 / person :arg0-of (r / represent-01 :arg1 (p4 / person :arg0-of (r2 / represent-01 :arg1 (a2 / and :op1 (p5 / political-party :arg0-of (o / oppose-01 :arg1 (d / democracy))) :op2 (p6 / person :arg0-of (r3 / represent-01 :arg1 (o2 / oppose-01 :arg1 (d2 / democracy)))) :op3 (p7 / person :arg0-of (r4 / represent-01 :arg1 (p8 / person :arg0-of (o3 / oppose-01 :arg1 (d3 / democracy))))))))))))) :snt2 (c / clear-06 :arg1 (t / text :arg1-of (c2 / clear-06))))
(a / and :op1 (j / joke-01 :polarity - :arg2 (a2 / anyone :mod (e / else)) :arg1-of (r / ridiculous-02)) :op2 (a3 / absurd :mod (o / of-course) :domain (a4 / anyone :mod (e2 / else))))
(w / worry-02 :mode (i / interrogative) :polarity - :arg0 (y / you) :arg1 (e / extremism) :time (b / before :op1 (n / now) :quant (t / temporal-quantity :quant (N / N-A) :unit (y2 / year))))
(c / confirm-01 :arg0 (p / person :arg0-of (s / study-01)) :arg1 (l / look-01 :arg0 (p2 / person) :direction (f / forward)))
(t / treat-03 :arg1 (t2 / this))
(m / multi-sentence :snt1 (c / contrast-01 :arg1 (p / person :arg0-of (p2 / play-01) :domain (t / they :mod (b / both))) :arg2 (p3 / person :arg0-of (p4 / play-01))) :snt2 (c2 / contrast-01 :arg1 (e / experience-01 :arg0 (w / we) :arg1 (t2 / tour :name (n / name :op1 (a / atp)))) :arg2 (c3 / convince-01 :arg1 (w2 / we) :arg2 (l / list-01 :arg1 (c4 / cup :mod (t3 / that)) :location (c5 / cup :mod (t4 / turn-01) :poss (p5 / person :name (n2 / name :op1 "Davis")))))))
(a / and :op1 (r / remain-01 :arg1 (t / thing :arg0-of (i / incinerate-01) :mod (w / wind)) :arg3 (t2 / thing :arg1-of (s / symbolize-01 :arg2 (c / city)) :mod (o / only))) :op2 (r2 / rarity :location (h / here)))
(a / and :op1 (t / thing :arg2-of (r / result-01 :arg1 (s / sell-01 :arg0 (o / organization :name (n / name :op1 "Richemont")) :arg1 (s2 / sell-01)) :time (r2 / recent))) :op2 (s3 / show-01 :arg1 (a2 / and :op1 (s4 / sell-01 :arg1 (s5 / sell-01 :location (c / country :name (n2 / name :op1 "China")))) :op2 (b / begin-01 :arg1 (r3 / rise-01 :arg1 (s6 / sell-01) :mod (a3 / again))))))
(a / and :op1 (t / thing :arg2-of (r / result-01 :arg1 (s / sell-01)) :mod (o / organization :name (n / name :op1 "Richemont")) :time (l / late :degree (m / most))) :op2 (s2 / show-01 :arg1 (a2 / and :op1 (s3 / sell-01 :arg1 (s4 / sell-01 :location (c / country :name (n2 / name :op1 "China")))) :op2 (b / begin-01 :arg1 (r2 / rise-01 :arg1 (s5 / sell-01) :mod (a3 / again))))))
(k / know-01 :polarity - :arg0 (y / you) :arg1 (p / possible-01 :arg1 (m / make-02 :arg0 (i / it) :arg1 (f / friendship :poss (y2 / you)))) :time (e / ever))
(s / say-01 :arg0 (n / newspaper :poss (p / person)) :arg1 (c / crime-02 :polarity - :location (c2 / country :name (n2 / name :op1 "Hungary"))) :arg1-of (s2 / say-01 :arg0 (n3 / newspaper :poss (p2 / person))))
(s / short-06 :arg1 (p / person :quant 351 :mod (p2 / primary) :arg0-of (v / vote-01) :mod (p3 / primary)) :arg2 (p4 / point :quant 6 :mod (p5 / percentage-entity :value (N / N-A))))
(o / owe-01 :arg0 (p / person :arg0-of (s / sail-01) :mod (t / this)) :arg1 (m / much) :arg2 (a / and :op1 (l / level :arg1-of (h / high-02 :degree (m2 / most)) :mod (l2 / level :arg1-of (h2 / high-02 :degree (m3 / most)))) :op2 (a2 / acids :quant 6 :mod (f / fat))))
(s / say-01 :arg0 (p / person :name (n / name :op1 "De" :op2 "Boer") :arg0-of (h / have-org-role-91 :arg1 (o / organization :name (n2 / name :op1 "Ajax")) :arg2 (a / ambassador :time (c / current))) :arg0-of (h2 / have-org-role-91 :arg1 (o2 / organization :name (n3 / name :op1 "Ajax")))) :arg1 (a2 / and :op1 (s2 / show-01 :polarity - :arg0 (p2 / person) :arg1 (m / match-03 :arg0 (o3 / organization :name (n4 / name :op1 "Celtic")) :mod (g / good :degree (m2 / most)))) :op2 (c2 / cause-01 :arg0 (a3 / amr-unknown) :arg1 (t / thing :arg0-of (c3 / cause-01)))))
(r / review-01 :arg1 (r2 / review-01) :arg1-of (c / cause-01 :arg0 (t / touch-01 :arg1 (p / person :arg0-of (t2 / train-01)))))
(c / contrast-01 :arg1 (c2 / cause-01 :arg0 (p / put-01 :arg1 (c3 / case-03) :arg2 (o / off))) :arg2 (c4 / count-01 :arg1 (a / accuse-01 :arg1 (p2 / person :name (n / name :op1 "Kailovou")) :time (a2 / after :op1 (e / end-01 :arg1 (m / mandate :poss (p3 / person)))))))
(c / contrast-01 :arg1 (s / support-01 :arg0 (p / person :name (n / name :op1 "Healy")) :arg1 (t / thing :arg1-of (d / decide-01 :arg3 (s2 / struggle-01 :mod (i / important) :arg1-of (b / begin-01 :location (a / and :op1 (f / friday) :op2 (l / local-region :name (n2 / name :op1 "N-A"))))))) :mod (a2 / also)) :arg2 (s3 / support-01 :arg0 (p2 / person) :arg1 (c2 / city :name (n3 / name :op1 "Canberra") :mod (n4 / native)) :purpose (r / return-01 :arg1 (p3 / person) :arg4 (t2 / team) :duration (l2 / long-03))) :mod (a3 / also))
(a / and :op1 (t / test-01 :arg0 (o / one) :arg1 (t2 / they) :location (l / laboratory :poss (t3 / they))) :op2 (c / compare-01 :arg0 (o2 / one) :arg1 (t4 / thing :arg2-of (r / result-01 :arg1 (t5 / thing :arg2-of (r2 / result-01 :arg1 (c2 / control-01 :arg0 (c3 / customer) :arg1 (c4 / city :name (n / name :op1 "Dubai"))))))) :time (t6 / then)))
(g / get-01 :arg0 (a / and :op1 (c / community) :op2 (c2 / community)) :arg1 (a2 / and :op1 (c3 / community) :op2 (p / percentage-entity :value (N / N-A) :arg3-of (i / include-91 :arg2 (s / state)))) :time (c4 / case-03 :arg1 (c5 / cannabis)))
(a / and :op1 (t / travel-01 :arg0 (w / we) :arg3 (a2 / and :op1 (t2 / train :arg1-of (d / dark-02)) :op2 (b / bus) :quant (m / many))) :op2 (e / experience-01 :arg0 (w2 / we) :arg1 (a3 / and :op1 (h / hunger-01 :arg0 (w3 / we)) :op2 (c / coexist-01 :arg1 (w4 / we)) :op3 (w5 / winter) :op4 (w6 / winter) :op5 (f / fear-01))))
(a / and :op1 (d / declares :arg0 (c / company) :arg1 (p / process-02 :arg1 (r / recruit-01)) :time (m / month :mod (t / this))) :op2 (r2 / recruit-01 :arg1 (s / staff) :time (o / october-december)))
(c / contrast-01 :arg1 (i / incline-01 :arg0 (p / person :name (n / name :op1 "Donald" :op2 "Trump")) :arg1 (t / think-01 :arg0 (p2 / person) :arg1 (h / have-03 :arg0 (p3 / person :arg1-of (i2 / include-91 :arg2 (p4 / person :arg0-of (v / vote-01) :mod (r / republican)) :arg3 (p5 / percentage-entity :quant (p6 / percentage-entity :value 52)))) :arg1 (t2 / think-01 :arg0 (p7 / person) :arg1 (h2 / have-03 :arg0 (e / estate :mod (r2 / real)) :arg1 (t3 / temperament :mod (r3 / right) :poss (p8 / person :arg0-of (h3 / have-org-role-91 :arg2 (p9 / president))))))))) :arg2 (c2 / criticize-01 :arg0 (p10 / person :arg0-of (h4 / have-org-role-91 :arg1 (o / organization :name (n2 / name :op1 "ABC" :op2 "News") :poss (p11 / person)) :arg2 (o2 / organization :name (n3 / name :op1 "-" :op2 "Washington" :op3 "Post")))) :arg1 (p12 / person)) :degree (w / wide))
(a / and :op1 (p / prevent-01 :arg0 (e / elite :mod (c / country :name (n / name :op1 "Germany"))) :arg1 (h / homepage :poss (p2 / plane :mod (c2 / country :name (n2 / name :op1 "Germany")))) :arg1-of (l / long-03)) :op2 (l2 / leave-11 :arg0 (e2 / elite) :arg1 (r / room :quant (a2 / all) :prep-against (a3 / atom)) :time (t / then)) :op3 (l3 / leave-15 :arg0 (e3 / elite) :arg1 (p3 / person :arg0-of (f / fight-01) :mod (a4 / all) :prep-against (a5 / atom)) :manner (q / quiet)) :op4 (s / support-01 :arg0 (a6 / and :op1 (p4 / person :arg0-of (h2 / have-org-role-91 :arg2 (p5 / person :arg0-of (m / migrate-01) :mod (o / old)))) :op2 (p6 / person :arg0-of (h3 / have-org-role-91 :arg2 (h4 / head-of-state)))) :arg1 (l4 / live-01 :arg0 (w / we))))
(c / contrast-01 :arg1 (c2 / challenge-01 :arg2 (c3 / country :poss (w / we)) :mod (b / big)) :arg2 (b2 / believe-01 :arg0 (i / i) :arg1 (p / possible-01 :arg1 (b3 / become-01 :arg1 (t / they) :arg2 (u / under :op1 (w2 / we)) :condition (m / manage-01 :arg0 (w3 / we) :arg1 (w4 / we))))))
(s / say-01 :arg0 (h / he) :arg1 (c / contrast-01 :arg1 (c2 / challenge-01 :arg0 (c3 / country :poss (w / we)) :arg1 (i / it) :arg1-of (m / major-02)) :arg2 (b / believe-01 :arg0 (i2 / i) :arg1 (p / possible-01 :arg1 (b2 / benefit-01 :arg0 (r / refugee :arg0-of (i3 / integrate :arg1 (r2 / refugee))) :condition (r3 / refugee :domain (r4 / refugee)))))))
(s / say-01 :arg0 (h / he) :arg1 (c / contrast-01 :arg1 (c2 / challenge-01 :arg2 (c3 / country :poss (w / we)) :degree (g / great)) :arg2 (b / believe-01 :arg0 (i / i) :arg1 (p / possible-01 :arg1 (b2 / become-01 :arg1 (t / they) :arg2 (b3 / benefit-01) :condition (m / manage-01 :arg0 (w2 / we) :arg1 (r / refugee)) :condition (m2 / manage-01 :arg0 (w3 / we) :arg1 (r2 / refugee)))))))
(c / come-01 :arg1 (b / builders) :arg4 (h / hospital) :time (y / year :mod (n / next)))
(t / time :purpose (d / decide-01))
(t / time :time-of (d / decide-01 :arg1 (r / rate :mod (i / interest) :beneficiary (o / organization :name (n / name :op1 "US" :op2 "Federal" :op3 "Reserve")))))
(f / fear-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (h2 / hotel) :arg2 (s / staff))) :arg1 (s2 / speak-01 :arg0 (p2 / person) :arg2 (p3 / person)))
(m / multi-sentence :snt1 (c / complex) :snt2 (s / say-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (f / firm :arg0-of (m2 / manufacture-01) :poss (c2 / company)) :arg2 (d / director))) :arg1 (p2 / person :name (n / name :op1 "Alexander" :op2 "Butovi") :arg0-of (h2 / have-org-role-91 :arg1 (f2 / firm :arg0-of (m3 / manufacture-01) :poss (c3 / company)) :arg2 (d2 / director)))))
(m / mean-01 :arg0 (i / i) :arg2 (h / have-03 :arg0 (p / person :mod (b / both)) :arg1 (h2 / humor) :mod (g / good)))
(d / duty :poss (w / we :quant (a / all)) :mod (a2 / also) :mod (i / in-fact))
(c / contrast-01 :arg1 (p / possible-01 :arg1 (t / take-10 :arg0 (d / develop-02 :arg0 (h / he) :arg1 (s / strategy :arg1-of (c2 / coherent :arg2 (e / engage-01 :arg0 (h2 / he) :arg2 (m / media))))) :arg1 (t2 / time :quant (s2 / some)))) :arg2 (n / need-01 :arg0 (h3 / he) :arg1 (d2 / develop-02 :arg0 (h4 / he) :arg1 (s3 / strategy :arg1-of (c3 / coherent) :purpose (e2 / engage-01 :arg0 (h5 / he) :arg2 (m2 / media))))) :arg1-of (c4 / contrast-01 :arg2 (l / leave-11 :arg0 (p2 / person :name (n2 / name :op1 "Andrew" :op2 "Marr") :arg0-of (s4 / seat-01 :location (c5 / company :name (n3 / name :op1 "BBC")))) :mod (c6 / certain))))
(p / photo :topic (p2 / photo) :location (l / location :name (n / name :op1 "Joburg")))
(f / face-01 :arg0 (h / he) :arg1 (t / temporal-quantity :quant (N / N-A) :unit (y / year) :arg1-of (w / welcome-01 :arg2 (b / bandwagon) :arg1-of (p / purport-01))))
(c / contrast-01 :arg2 (d / digress :arg0 (i / i)))
(c / choose-01 :arg0 (t / thing :quant (a / all) :arg1-of (i / include-91 :arg2 (t2 / thing :mod (t3 / this)))) :arg1 (p / pocket :poss (t4 / thing)) :mod (c2 / certain))
(a / and :op2 (h / have-purpose-91 :arg1 (c / commit-01 :arg1 (t / they) :arg2 (l / live-01 :arg0 (t2 / they))) :arg2 (l2 / level :mod (t3 / top)) :mod (a2 / actual)))
(s / say-01 :arg1 (e / enough :domain (l / let-01 :arg1 (p / piece :mod (p2 / paper) :mod (t / this))) :time (p3 / put-01 :arg1 (p4 / piece :mod (t2 / technical) :mod (t3 / this)) :arg2 (f / features :mod (p5 / paper)))) :arg2 (p6 / person :arg0-of (h / have-org-role-91 :arg2 (d / dryly :mod (c / chief)))))
(s / say-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (p2 / person :arg0-of (h2 / have-org-role-91 :arg2 (c / chief))) :arg2 (c2 / chief))) :arg1 (i / include-01 :arg1 (p3 / person :arg0-of (h3 / have-org-role-91 :arg2 (c3 / chief))) :arg2 (i2 / include-01 :arg1 (a / and :op1 (p4 / person :arg0-of (h4 / have-org-role-91 :arg2 (h5 / head-of-state))) :op2 (p5 / person :arg0-of (h6 / have-org-role-91 :arg2 (c4 / chief))) :op3 (p6 / person :arg0-of (h7 / have-org-role-91 :arg2 (c5 / chief))) :op4 (p7 / person :arg0-of (h8 / have-org-role-91 :arg2 (c6 / chief)))) :mod (t / technical))))
(c / contrast-01 :arg2 (p / possible-01 :polarity - :arg1 (i / ignore-01 :arg0 (g / government-organization :name (n / name :op1 "N-A")) :arg1 (p2 / perspective :mod (g2 / globe) :mod (p3 / pink :degree (l / less))))))
(s / say-01 :arg0 (h / he) :arg1 (r / recommend-01 :arg1 (a / and :op1 (b / break-13 :arg0 (h2 / he) :arg1 (r2 / reason :mod (s2 / social))) :op2 (c / cause-01 :arg0 (s3 / stability :arg1-of (l / long-03) :poss (e / economy) :location (e2 / energy :mod (l2 / large) :mod (d / domestic)))))))
(l / let-01 :mode (i / imperative) :arg0 (y / you) :arg1 (s / see-01 :arg0 (t / they) :arg1 (c / chance-02 :polarity - :arg0 (t2 / they))) :mod (d / definite))
(s / say-01 :arg0 (p / person :name (n / name :op1 "Corbyl")) :arg1 (s2 / submit-01 :arg0 (o / organization :name (n2 / name :op1 "Workers" :op2 "Party")) :arg1 (p2 / propose-01 :arg0 (o2 / organization :name (n3 / name :op1 "Workers" :op2 "Party"))) :arg2 (r / remove-01 :arg0 (o3 / organization) :arg1 (i / idea :mod (w / whole) :topic (l / limit-01 :arg1 (w2 / waste))))) :location (c / conference :mod (o4 / organization :name (n4 / name :op1 "TUC"))))
(b / break-up-08 :arg1 (t / thing :arg0-of (i / incinerate-01)) :time (a / after :op1 (b2 / break-up-08 :arg1 (a2 / and :op1 (c / corrections) :op2 (d / downs) :quant (f / few)))))
(u / use-01 :arg0 (p / person) :arg1 (s / spoon :quant 1) :frequency (o / often) :time (m / morning))
(s / show-01 :arg0 (r / research-01 :arg0 (o / organization :name (n / name :op1 "Jarmily" :op2 "Hamerski")) :arg1-of (l / lead-03 :arg2 (o2 / organization :name (n2 / name :op1 "Masaryk" :op2 "University")))) :arg1 (s2 / show-01 :arg0 (t / thing :arg1-of (i / include-91 :arg2 (r2 / respondents :arg1-of (r3 / respondents)) :arg3 (p / percentage-entity :value 43))) :arg1 (k / kitchen :arg1-of (w / warm))))
(p / publish-01 :mod (o / original) :arg1-of (p2 / publish-01 :time (t / today)) :arg1-of (p3 / publish-01 :time (t2 / today)) :mod (o2 / original))
(a / and :op1 (p / person :name (n / name :op1 "Johnson") :arg0-of (l / lead-02 :arg1 (c / channel :quant 4 :arg1-of (l2 / lead-02 :arg0 (p2 / person))))) :op2 (t / tell-01 :arg0 (b / businessman) :arg1 (g / guilty-01 :arg1 (p3 / person)) :arg1-of (c2 / cause-01 :arg0 (a2 / and :op1 (a3 / ambition :poss (p4 / person :arg0-of (w / work-01 :location (t2 / there)))) :op2 (b2 / believe-01 :arg0 (p5 / person) :arg1 (w2 / way :mod (g2 / good :degree (m / most)) :domain (t3 / this) :purpose (p6 / provide-01 :arg1 (s / support-01) :arg1-of (l3 / long-03)) :domain (t4 / this))))) :arg2 (c3 / company :name (n2 / name :op1 "BBC"))))
(h / have-concession-91 :arg1 (r / raise-01 :arg0 (g / government-organization :name (n / name :op1 "Federal" :op2 "Reserve")) :arg1 (r2 / rate :mod (r3 / raise-01 :arg1 (r4 / rate))) :frequency (o / often)) :arg2 (d / decisive :topic (t / thing :manner-of (r5 / respond-01 :arg0 (a / and :op1 (e / economy) :op2 (a2 / asset :mod (f / finance)))))))
(i / intend-01 :arg0 (g / government-organization :name (n / name :op1 "Pentagon")) :arg1 (i2 / intend-01 :arg0 (g2 / government-organization) :arg1 (e / establish-01 :arg0 (g3 / government-organization) :arg1 (b / base :mod (a / air) :location (p / peninsula :name (n2 / name :op1 "N-A"))) :arg1-of (r / remain-01 :arg3 (b2 / bastion :arg0 (p2 / person :name (n3 / name :op1 "Bashar" :op2 "Assad") :arg0-of (h / have-org-role-91 :arg1 (c / country) :arg2 (p3 / president))) :arg1 (p4 / person :name (n4 / name :op1 "Bashar" :op2 "Assad") :arg0-of (h2 / have-org-role-91 :arg1 (c2 / country) :arg2 (p5 / president)))) :time (n5 / now)))))
(a / announce-01 :arg0 (o / organization :name (n / name :op1 "Google.org")) :arg1 (a2 / arm :mod (c / charitable) :part-of (c2 / company :mod (i / internet)) :domain (o2 / organization)))
(a / agree-01 :arg0 (p / person :quant 6 :arg1-of (i / include-91 :arg2 (p2 / person :quant 10 :arg1-of (r / republican)))) :arg1 (p3 / person :name (n / name :op1 "Donald" :op2 "Trump")) :arg2 (i2 / issue-02 :arg0 (i3 / immigrate-01)) :arg1-of (r2 / report-01))
(a / and :op1 (p / person :name (n / name :op1 "Cap") :prep-with (a2 / and :op1 (n2 / nail) :op2 (w / white) :op3 (c / color) :arg1-of (c2 / cool-04))) :op2 (t / train-01 :arg0 (p2 / person) :arg2 (f / foot :part-of (p3 / person))))
(a / and :op1 (r / read-01 :arg0 (i / i) :arg1 (s / scenario)) :op2 (s2 / say-01 :arg0 (h / he) :arg1 (l / like-01 :arg0 (h2 / he) :arg1 (s3 / scenario))) :arg1-of (c / cause-01 :arg0 (s4 / sad-02 :arg1 (h3 / he))))
(a / and :op1 (r / read-01 :arg0 (i / i) :arg1 (s / script)) :op2 (s2 / say-01 :arg0 (h / he) :arg1 (l / like-01 :arg0 (h2 / he) :arg1 (s3 / sad-02 :arg1 (h3 / he)))))
(s / show-01 :arg0 (i / it) :arg1 (o / observations :time (b / before :op1 (h / hear-01 :arg0 (p / person :arg0-of (h2 / have-org-role-91 :arg1 (c / country :name (n / name :op1 "N-A")))) :arg1 (c2 / club :name (n2 / name :op1 (c3 / club) :op2 (c4 / club) :op3 (c5 / club))) :time (d / day :mod (j / just)) :time (b2 / before :op1 (h3 / hear-01 :arg0 (p2 / person) :arg1 (o2 / owe-01 :arg0 (p3 / person) :arg1 (t / tens :quant (m / multiple :op1 (m2 / mass-quantity :quant (N / N-A) :unit (g / gram)))))))))))
(a / agree-01 :arg0 (w / we :arg0-of (h / have-rel-role-91 :arg1 (h2 / he) :arg2 (p / partner))) :arg1 (h3 / have-condition-91 :arg1 (a2 / and :op1 (r / roaches :polarity - :arg0 (w2 / we) :arg1 (s / skin :part-of (h4 / he)) :purpose (e / eat-01 :arg0 (w3 / we) :arg1 (s2 / skin :name (n / name :op1 (r2 / renegade) :op2 (r3 / renegade) :op3 (s3 / skin))))) :op2 (e2 / eyelashes :arg0 (s4 / some :arg1-of (i / include-91 :arg2 (a3 / and :op1 (e3 / eyelashes :location (w4 / world-region :name (n2 / name :op1 "N-A"))) :op2 (e4 / eyelashes :mod (t / this))))))) :arg2 (r4 / roaches :polarity - :arg1 (w5 / we))))
(k / know-01 :arg0 (w / we) :arg1 (c / cover-01 :polarity - :arg0 (p / person :arg0-of (h / have-org-role-91 :arg2 (o / officer :mod (e / enforce-01 :arg1 (l / law))))) :arg1 (t / thing :arg1-of (c2 / conduct-01) :mod (s / such))))
(k / know-01 :arg0 (w / we) :arg1 (a / affect-01 :arg0 (n / negotiate-01 :mod (s / such)) :arg1 (n2 / negotiate-01 :mod (s2 / such))))
(m / multi-sentence :snt1 (p / possible-01 :arg1 (c / calculator :arg0 (y / you) :arg1 (b / bmi :poss (y2 / you)) :location (h / here))) :snt2 (1 / 1d0zqdv :quant 1 :mod (u / usa.gov)))
(a / and :op1 (g / get-01 :polarity - :arg0 (w / we) :arg1 (a2 / answer-01)) :op2 (c / cause-01 :arg0 (a3 / amr-unknown) :arg1 (w2 / want-01 :arg0 (w3 / we) :arg1 (r / release-01 :arg1 (q / quota) :arg2 (t / text :mod (f / final))))))
(a / and :op1 (h / have-03 :arg0 (i / i) :arg1 (t / theory :mod (a2 / another) :topic (c / cause :arg0-of (c2 / cause-01 :arg1 (r / rage-02 :arg0 (t2 / they)))))) :op2 (o / obligate-01 :arg1 (t3 / they) :arg2 (h2 / have-03 :arg0 (t4 / they) :arg1 (l / link-01 :arg1 (t5 / they) :arg2 (s / spider))) :condition (p / possible-01 :polarity - :arg1 (s2 / see-01 :arg0 (h3 / he)) :condition (p2 / possible-01 :polarity - :arg1 (s3 / see-01 :arg0 (h4 / he))))) :op3 (e / expose-01 :arg1 (t6 / that) :arg2 (e2 / endanger-01 :arg1 (t7 / they) :location (a3 / anywhere)) :condition (p3 / possible-01 :polarity - :arg1 (s4 / see-01))))
(a / and :op1 (b / be-located-at-91 :arg1 (h / he) :arg2 (h2 / here) :time (b2 / before :op1 (n / now) :duration (t / temporal-quantity :quant (N / N-A) :unit (y / year)))) :op2 (t2 / train-01 :arg0 (h3 / he) :arg2 (t3 / team :mod (g / great)) :manner (a2 / apparent)) :arg0-of (c / cause-01 :arg1 (l / likely-01 :arg1 (u / use-01 :polarity - :arg0 (t4 / they) :arg1 (l2 / lose-02) :arg1-of (c2 / cause-01 :arg0 (p / possible-01 :arg1 (u2 / use-01 :polarity - :arg1 (l3 / lose-02) :arg2 (h4 / he) :mod (l4 / little))))))))
(i / important :degree (v / very) :domain (s / stay-01 :arg1 (i2 / it) :manner (t / together)) :time (n / now))
(c / contrast-01 :arg2 (t / treat-01 :arg1 (t2 / thing :arg2-of (v / value-01) :mod (t3 / this)) :arg2 (a / about :op1 (p / percentage-entity :value (N / N-A)))))
(a / agree-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg2 (p2 / person :arg1-of (e / expert-01)))) :arg1 (t / time :quant 50 :domain (s / seed :part-of (s2 / seed :part-of (a2 / and :op1 (v / vitamin) :op2 (e2 / e :quant 20)))) :degree (m / more) :compared-to (v2 / vitamin)))
(a / and :op1 (h / have-03 :arg0 (p / person :quant (m / many) :mod (c / country :name (n / name :op1 "N-A")) :arg1-of (h2 / high-02)) :arg1 (r / rise-01)) :op2 (b / become-01 :arg1 (s / street :arg1-of (h3 / high-02) :mod (c2 / country) :quant (m2 / many)) :arg2 (t / town :mod (d / distance-quantity :quant (N / N-A) :unit (m3 / meter)))))
(s / say-01 :arg0 (p / person :arg0-of (r / research-01) :arg0-of (l / lead-02 :arg1 (a / and :op1 (p2 / person :name (n / name :op1 "Chih-Cheng" :op2 "Hsu")) :op2 (p3 / person :arg0-of (h / have-org-role-91 :arg2 (p4 / president :mod (v / vice))))))) :arg1 (c / contrast-01 :arg2 (r2 / reduce-01 :polarity - :arg0 (c2 / control-01 :arg1 (g / glycaemic) :mod (g2 / good :degree (m / more)) :arg1-of (r3 / reflected :arg2 (l2 / level :arg1-of (h2 / high-02 :degree (m2 / more)) :mod (h3 / haemoglobin)))) :arg1 (m3 / mortality) :time (a2 / after :op1 (n2 / now) :quant (t / temporal-quantity :quant (N / N-A) :unit (y / year))))))
(p / possible-01 :arg1 (e / expect-01 :arg1 (a / and :op1 (w / watch-01 :arg0 (p2 / person :arg0-of (h / have-org-role-91 :arg1 (g / government-organization :name (n / name :op1 "Fed")) :arg2 (o / official))) :arg1 (d / develop-01 :location (e2 / elsewhere))) :op2 (c / consults :arg0 (a2 / and :op1 (p3 / person :arg0-of (h2 / have-org-role-91 :arg1 (u / university :name (n2 / name :op1 "N-A") :mod (c2 / central) :mod (c3 / central)) :arg2 (p4 / person :arg1-of (e3 / expert-01)))) :op2 (p5 / person :arg0-of (h3 / have-org-role-91 :arg2 (p6 / person :arg1-of (e4 / expert-01))))) :arg1 (s / state :poss (e5 / economy :mod (g2 / globe))) :manner (g3 / good :degree (m / more)) :mod (a3 / also)))) :location (w2 / world) :mod (s2 / still))
(p / possible-01 :arg1 (d / do-02 :arg0 (i / i) :arg1 (s / so)))
(a / and :op1 (p / person :name (n / name :op1 "Ben" :op2 "S." :op3 "Bernanke") :arg0-of (h / have-org-role-91 :arg2 (c / chairman))) :op2 (p2 / person :arg0-of (h2 / have-org-role-91 :arg1 (g / government-organization :name (n2 / name :op1 "Fed")) :arg2 (c2 / chairman))) :op3 (p3 / person :arg0-of (h3 / have-org-role-91 :arg1 (g2 / government-organization :name (n3 / name :op1 "Fed")) :arg2 (c3 / chairman))) :op4 (p4 / person :arg0-of (h4 / have-org-role-91 :arg1 (g3 / government-organization) :arg2 (c4 / chairman))) :op5 (p5 / person :arg0-of (h5 / have-org-role-91 :arg1 (g4 / government-organization) :arg2 (c5 / chairman))) :op6 (p6 / person :arg0-of (h6 / have-org-role-91 :arg1 (o / organization) :arg2 (c6 / chairman))) :op6 (p7 / person :arg0-of (h7 / have-org-role-91 :arg1 (o2 / organization) :arg2 (c7 / chairman))) :op7 (p8 / person :arg0-of (h8 / have-org-role-91 :arg1 (g5 / government-organization) :arg2 (c8 / chairman))))
(a / and :op1 (s / suggest-01 :arg0 (p / person :name (n / name :op1 "Ben" :op2 "S." :op3 "Bernanke") :arg0-of (h / have-org-role-91 :arg2 (c / chairman))) :arg1 (' / '' :arg0 (g / government-organization :name (n2 / name :op1 "Fed")) :arg1 (e / expand-01 :arg1 (m / money) :location (m2 / market))) :mod (m3 / mere)) :op2 (t / trigger-01 :arg0 (g2 / government-organization) :arg1 (s2 / spasms :location (o / over :op1 (w / world)))))
(a / and :op1 (p / person :mod (r / rich)) :op2 (p2 / person :mod (r2 / rich) :arg1-of (s / soft-02)) :op3 (p3 / person :mod (c / country :name (n / name :op1 "N-A"))))
(c / claim-01 :arg0 (p / person :name (n / name :op1 "Islington" :op2 "North") :arg0-of (h / have-org-role-91 :arg2 (m / mp))) :arg1 (a / and :op1 (r / recognize-02 :arg0 (p2 / person) :arg1 (a2 / and :op1 (c2 / confrontational :arg1 (p3 / person) :degree (t / too)) :op2 (r2 / refrain :arg0 (p4 / person) :arg1 (r3 / reply :mod (' / '') :mod (l / like-minded))))) :op2 (r4 / refrains :arg0 (p5 / person) :arg1 (t2 / trade-01 :arg1 ('2 / ''))) :op3 (p6 / promise-01 :arg0 (p7 / person) :arg2 (f / focus-01 :arg0 (p8 / person) :arg2 (i / issue-02 :mod (i2 / important) :example (a3 / and :op1 (p9 / poverty) :op2 (i3 / inequality) :op3 (t3 / thing :arg1-of (f2 / face-01 :arg0 (p10 / person :mod (y / young)))))))) :arg1-of (i4 / instead-of-91)))
(g / game :mod (t / three-point :ord (o / ordinal-entity :value 1 :range (s / since :op1 (d / date-entity :month 6)))) :arg1-of (c / cause-01 :arg0 (h / hit-01 :arg0 (h2 / he) :arg1 (g2 / game) :arg2 (a / against :op1 (o2 / organization :name (n / name :op1 "Seattle" :op2 "Mariners"))))))
(e / exemplify-01 :arg0 (o / obligate-01 :arg2 (g / go-01 :arg1 (p / percentage-entity :value (N / N-A)) :arg4 (r / repair-01 :arg1 (d / damage-01)) :time (a / after :op1 (o2 / or :op1 (m / mine-01) :op2 (p2 / provide-01 :arg1 (s / service :purpose (r2 / rescue-01) :mod (y / year-long))))))))
(a / at-least :prep-for (s / some))
(a / and :op1 (s / suffer-01 :arg0 (c / ck :prep-in (c2 / case :mod (t / this))) :arg1 (l / lose-02 :arg1-of (s2 / significant-02))) :op2 (p / possible-01 :arg1 (b / bankrupt-01 :arg1 (c3 / case-03) :mod (e / even))) :op3 (t2 / though :arg1 (e2 / economy :poss (i / it)) :mod (e3 / even) :concession (s3 / shape :domain (e4 / economy))))
(n / note-01 :mode (i / imperative) :arg0 (y / you) :arg1 (e / end-01 :arg1 (g / game) :manner (p / pain-01 :arg1 (s / shoulder :part-of (h / he) :mod (r / right)))))
(s / say-01 :arg0 (p / police) :arg1 (a / and :op1 (l / leave-17 :arg1 (m / motorist :polarity -) :manner (s2 / stop-01 :polarity -)) :op2 (h / help-01 :arg0 (p2 / police) :arg1 (p3 / person :arg1-of (i / injure-01)))))
(c / contrast-01 :arg1 (a / available-02 :polarity - :arg2 (t / thing :arg0-of (c2 / cause-01 :arg1 (a2 / available-02 :arg2 (p / person :arg0-of (h / have-org-role-91 :arg1 (p2 / panel) :arg2 (m / member))))))) :arg2 (i / include-01 :arg1 (p3 / person :arg0-of (c3 / claim-01 :arg1 (f / fund-01 :arg1 (i2 / industry :mod (n / newspaper))) :quant (s / some)) :mod (w / well)) :arg2 (p4 / person :arg0-of (h2 / have-org-role-91 :arg1 (p5 / panel) :arg2 (m2 / member)))))
(t / turn-02 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (g / government-organization :name (n / name :op1 "Fed")) :arg2 (o / official))) :arg1 (c / cut-02 :mod (t2 / this)) :time (l / late :degree (m / more)))
(b / be-located-at-91 :arg1 (a / and :op1 (i / i) :op2 (t / thing :name (n / name :op1 "N-A") :mod (o / other))) :arg2 (t2 / temporal-quantity :quant (N / N-A) :unit (y / year)) :time (n2 / now))
(s / say-01 :arg1 (a / and :op1 (p / put-03 :arg1 (a2 / and :op1 (h / hammer) :op2 (b / brushes)) :arg2 (p2 / person :arg1-of (e / employ-01) :arg1-of (e2 / educate-01 :location (e3 / east :part-of (c / continent :name (n / name :op1 "N-A"))))) :purpose (w / work-01 :arg0 (p3 / person) :location (h2 / home :poss (p4 / person)))) :op2 (w2 / work-01 :arg0 (p5 / person) :arg1 (w3 / work-01 :arg0 (p6 / person) :location (h3 / home :poss (p7 / person))))))
(h / have-concession-91 :arg2 (f / face-01 :arg0 (l / lawyer) :arg1 (t / thing :polarity - :arg0-of (e / evidence-01 :arg1 (a / and :op1 (o / own-01 :arg0 (h2 / he) :arg1 (q / quantity :arg1-of (o2 / own-01 :arg0 (h3 / he)))) :op2 (p / possible-01 :arg1 (b / be-located-at-91 :arg1 (h4 / he) :arg2 (c / café) :arg1-of (c2 / complete-02) :arg1-of (c3 / complete-02)))))) :concession (f2 / face-01 :arg0 (h5 / he) :arg1 (s / sentence-01 :arg1 (l2 / life :mod (c4 / commerce) :mod (c5 / commerce)) :arg2 (p2 / possess-01 :arg1 (q2 / quality :mod (c6 / commerce) :mod (c7 / commerce)))))))
(c / contrast-01 :arg2 (s / say-01 :arg0 (p / person :name (n / name :op1 "Chalasani")) :arg1 (p2 / possible-01 :arg1 (h / have-03 :arg0 (p3 / person :mod (c2 / country :name (n2 / name :op1 "N-A"))) :arg1 (a / advantage :quant (m / many) :compared-to (t / technique :mod (t2 / this)))))))
(s / show-01 :arg0 (i / it) :arg1 (e / escalation :mod (e2 / event)))
(s / say-01 :polarity - :arg0 (n / no-one) :arg1 (n2 / nothing) :time (f / finish-01 :arg0 (n3 / no-one)))
(g / go-02 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg2 (o / official :mod (c / career)))) :time (b / before) :time (b2 / before :op1 (b3 / begin-01)))
(h / hold-01 :arg0 (c / career :poss (p / person :arg0-of (h2 / have-org-role-91 :arg1 (p2 / political-party :name (n / name :op1 "N-A")) :arg2 (o / official)))) :arg1 (s / she) :time (b / before :op1 (b2 / begin-01)))
(s / say-01 :arg0 (i / individual :arg0-of (d / depend-01 :arg1 (p / problem :arg1-of (s2 / specific-02) :poss (p2 / person :arg0-of (h / have-rel-role-91 :arg2 (p3 / patient)))))) :arg1 (c / cease-01 :arg0 (a / and :op1 (p4 / person :name (n / name :op1 "Martin" :op2 "Request")) :op2 (r / rehabilitation) :op3 (m / medicine)) :arg1 (a2 / and :op1 (r2 / rehabilitation) :op2 (r3 / rehabilitation) :op3 (m2 / medicine) :location (h2 / hospital))))
(s / subject-01 :arg1 (t / thing :arg1-of (s2 / subject-01 :arg2 (p / pay-01 :arg0 (p2 / person :arg0-of (h / have-rel-role-91 :arg2 (d / dh))))) :arg2 (p3 / person :arg0-of (h2 / have-rel-role-91 :arg1 (p4 / person) :arg2 (u / uncle)))) :arg1-of (c / cause-01 :arg0 (a / agree-01 :arg0 (p5 / person) :arg1 (l / limit-01 :arg1 (p6 / person)))))
(a / and :op1 (o / obligate-01 :arg1 (c / company :arg0-of (i / insure-02)) :arg2 (p / pay-01 :arg0 (c2 / company) :arg1 (c3 / claim-01))) :op2 (l / limit-01 :arg1 (t / thing :arg1-of (l2 / limit-01 :arg1-of (a2 / agree-01)))))
(a / agree-01 :polarity - :arg0 (c / company :arg0-of (i / insure-02)) :arg1 (o / obligate-01 :arg1 (c2 / company) :arg2 (p / pay-01 :arg0 (c3 / company) :arg1 (e / entitlements :arg1 (c4 / client)))) :arg1-of (c5 / cause-01 :arg0 (a2 / agree-01)))
(s / say-01 :arg0 (p / person :name (n / name :op1 "Johnson")) :arg1 (r / recommend-01 :arg1 (u / use-01 :arg1 (f / fee :mod (l / licence)) :arg2 (p2 / program :arg1-of (m / make-01 :polarity - :arg0 (p3 / person :mod (o / other) :arg0-of (b / broadcast-01) :mod (t / television) :mod (c / country :name (n2 / name :op1 "N-A"))))) :mod (o2 / only))))
(e / edited :arg1 (s / story :mod (t / this)) :purpose (r / reflect-01 :arg1 (s2 / story) :arg2 (c / claim-01 :arg0 (p / police) :arg1 (a / and :op1 (c2 / claim-01 :arg0 (p2 / person :name (n / name :op1 "Lamb")) :arg1 (c3 / call-03 :arg0 (p3 / person) :arg1 (c4 / call-03 :arg0 (p4 / person) :arg1 (l / line :mod (e2 / emergency)) :time (a2 / after :op1 (k / kill-01 :arg0 (p5 / person) :arg1 (p6 / person :name (n2 / name :op1 "Schmidt"))))))) :op2 (e3 / evidence-01 :polarity - :arg1 (s3 / sedated :arg1 (p7 / person) :mod (a3 / actual)))) :time (n3 / now))))
(p / person :arg0-of (h / have-rel-role-91 :arg1 (p2 / person :arg0-of (h2 / have-rel-role-91 :arg2 (c / comrade))) :arg2 (c2 / chief)) :time (m / morning :mod (g / good)))
(a / and :op1 (m / man :mod (t / thirty)) :op2 (w / woman :quant 5))
(s / suffer-01 :arg0 (p / person :name (n / name :op1 "Moreno")) :arg1 (l / leg :arg0-of (b / break-01)) :location (s2 / struggle-01 :arg1 (c / country :name (n2 / name :op1 "Mexico")) :arg2 (p2 / person :name (n3 / name :op1 "Van" :op2 "Holland") :location (w / world :mod (w2 / world)))))
(s / say-01 :arg0 (p / person :name (n / name :op1 "Veronique" :op2 "Laury") :arg0-of (h / have-org-role-91 :arg1 (o / organization :name (n2 / name :op1 "Kingfisher")) :arg2 (d / director :mod (n3 / new) :mod (n4 / new))) :arg0-of (o2 / own-01 :arg1 (c / chain :mod (h2 / home-needs))) :arg0-of (h3 / have-org-role-91 :arg1 (o3 / organization) :arg2 (d2 / director :mod (n5 / new) :mod (n6 / new))) :arg0-of (o4 / own-01 :arg1 (c2 / chain :mod (h4 / home-needs))) :arg0-of (h5 / have-org-role-91 :arg1 (o5 / organization) :arg2 (d3 / director :mod (n7 / new))) :arg0-of (h6 / have-org-role-91 :arg1 (o6 / organization) :arg2 (d4 / director :mod (n8 / new))) :arg0-of (h7 / have-org-role-91 :arg1 (o7 / organization) :arg2 (d5 / director :mod (n9 / new))) :arg0-of (h8 / have-org-role-91 :arg1 (o8 / organization) :arg2 (d6 / director :mod (n10 / new))) :arg0-of (h9 / have-org-role-91 :arg1 (o9 / organization) :arg2 (d7 / director :mod (n11 / new))) :arg0-of (h10 / have-org-role-91 :arg1 (o10 / organization) :arg2 (d8 / director :mod (n12 / new))) :arg0-of (h11 / have-org-role-91 :arg1 (o11 / organization) :arg2 (d9 / director :mod (n13 / new))) :arg0-of (h12 / have-org-role-91 :arg1 (o12 / organization) :arg2 (d10 / director :mod (n14 / new)))))
(s / say-01 :arg0 (p / person :name (n / name :op1 "Ausmus")) :arg1 (l / leaned :mod (' / '')))
(c / contrast-01 :arg1 (h / have-03 :arg0 (p / person :mod (c2 / country :name (n / name :op1 "N-A"))) :arg1 (y / year :mod (g / good :degree (m / most)) :location (l / local-region :name (n2 / name :op1 "N-A"))) :time (a / already)) :arg2 (i / interesting :arg1 (c3 / curriculum :mod (f / football) :mod (i2 / interesting :degree (v / very)) :mod (f2 / football))))
(s / say-01 :arg0 (f / file-01 :arg1 (p / project)) :arg1 (c / collect-01 :arg0 (c2 / company) :arg1 (r / rate-entity-91 :arg1 (m / more-than :op1 (m2 / monetary-quantity :quant 5 :unit (d / dollar))) :arg2 (v / volume-quantity :quant (N / N-A) :unit (g / gallon)))) :time (y / year :mod (t / three)))
(p / possible-01 :arg1 (t / think-01 :arg0 (p2 / person :location (h / here)) :arg1 (d / do-02 :arg0 (p3 / person))))
(m / monitor-01 :arg0 (p / person :arg0-of (r / research-01)) :arg1 (l / level :mod (a / a1c :mod (h / hemoglobin)) :poss (p2 / person :arg0-of (h2 / have-rel-role-91 :arg2 (p3 / patient)))) :arg0-of (r2 / reflect-01 :arg1 (l2 / level) :arg2 (l3 / level :mod (s / sugar :mod (b / blood)) :arg1-of (g / go-on-15) :location (b2 / body))) :mod (a2 / also))
(a / and :op1 (c / capture-01 :arg1 (h / he) :location (j / jar :mod (j2 / jar))) :op2 (b / banished :arg1 (h2 / he) :location (s / somewhere :location (s2 / somewhere :location (s3 / somewhere)))))
(c / contrast-01 :arg1 (a / accept-01 :arg0 (p / person :name (n / name :op1 "Wenger")) :arg1 (p2 / potential :poss (c2 / circle :mod (v / vicious)))) :arg2 (b / believe-01 :arg0 (p3 / person) :arg1 (i / improve-01 :arg1 (a2 / area :location-of (i2 / injure-01 :arg1-of (r / report-01) :time (s / season :mod (l / last)))))))
(r / report-01 :arg0 (a / and :op1 (p / person :name (n / name :op1 "Amy")) :op2 (p2 / person :name (n2 / name :op1 "Rogelio" :op2 "Solis"))) :arg1 (l / location :name (n3 / name :op1 "Mississippi")))
(o / or :op1 (j / jumped :arg1 (i / industry :name (n / name :op1 (d / dow)) :arg1-of (a / average-04)) :arg2 (p / point :quant (a2 / about :op1 228,89))) :op2 (p2 / percentage-entity :value (N / N-A)) :op3 (p3 / percentage-entity :value (N2 / N-A)) :op4 (p4 / percentage-entity :value (N3 / N-A)))
(a / and :op1 (g / gain-02 :arg0 (p / person :name (n / name :op1 "Plouffe")) :arg1 (r / rate-entity-91 :arg1 27 :arg2 (t / temporal-quantity :quant (N / N-A) :unit (y / year)))) :op2 (f / fed :arg0 (p2 / person) :arg1 (t2 / table :mod (l / league))))
(h / have-part-91 :arg1 (p / product :arg1-of (p2 / prepare-01 :mod (i / industrially))) :arg2 (y / you))
(a / and :op1 (h / help-01 :arg0 (o / organization :name (n / name :op1 "Special" :op2 "Patrol" :op3 "Group")) :arg1 (d / distribute-01 :arg0 (o2 / organization) :arg1 (a2 / around :op1 (c / city :name (n2 / name :op1 "London"))) :location (a3 / around :op1 (c2 / city :name (n3 / name :op1 "London")))) :arg2 (r / rate-entity-91 :arg1 (m / monetary-quantity :quant 6 :unit (d2 / dollar :mod (c3 / country))) :arg2 (t / temporal-quantity :quant (N / N-A) :unit (y / year)))) :op2 (k / key-02 :arg1 (p / piece :mod (r2 / rate-entity-91 :arg1 (m2 / monetary-quantity :quant 6 :unit (d3 / dollar :mod (c4 / country))) :arg2 (p2 / piece))) :arg2 (p3 / piece) :arg1-of (c5 / cause-01 :arg0 (o3 / obtain-01 :arg1 (a4 / access-01 :arg1 (s / space :mod (a5 / advertising)) :location (b / bus :mod (a6 / advertising))) :location (p4 / planet)))))
(p / probable :domain (f / find-01 :arg1 (i / it)) :mod (p2 / probable))
(s / see-01 :arg0 (w / we) :arg1 (t / thing :mod (c / cricket) :arg1-of (s2 / see-01 :arg0 (w2 / we) :location (h / here) :time (s3 / start-01 :arg1 (s4 / season)))) :time (w3 / win-01 :arg0 (h2 / he) :arg1 (p / product-of :op1 236 :op2 (b / bit :mod (l / little)))))
(m / multi-sentence :snt1 (a / and :op1 (f / find-01 :arg0 (p / police) :arg1 (b / body :poss (p2 / person :name (n / name :op1 "Amy" :op2 "Prentiss"))) :manner (h / handwritten)) :op2 (m2 / message-01 :arg0 (p3 / police) :arg1 (p4 / possible-01 :arg1 (t / take-01 :arg0 (i / i) :arg1 (i2 / it) :arg3 (p5 / paper :mod (o / office) :mod (w / white)) :manner (h2 / handwritten))))) :snt2 (a2 / and :op1 (s / sorry-01 :arg1 (i3 / i) :degree (s2 / so)) :op2 (w2 / wish-01 :arg0 (i4 / i) :arg1 (p6 / possible-01 :arg1 (t2 / take-01 :arg0 (i5 / i) :arg1 (i6 / it) :direction (b2 / back)))) :op3 (l / love-01 :arg0 (i7 / i) :arg1 (p7 / person :name (n2 / name :op1 "Amy")) :mod (o2 / only)) :op4 (s3 / say-01 :arg0 (a3 / authority) :arg1 (l2 / letter :arg1-of (s4 / sign-01 :arg0 (a4 / authority)) :arg1-of (s5 / sign-01 :arg0 (a5 / authority))))))
(a / and :op1 (c / call-01 :arg0 (p / person :name (n / name :op1 "Donald" :op2 "Trump")) :arg1 (p2 / person :arg0-of (h / have-org-role-91 :arg1 (c2 / country :name (n2 / name :op1 "Mexico")) :arg3 (a2 / apprentice-01 :arg0 (p3 / person)))) :arg2 (s / speak-01 :arg0 (p4 / person) :arg1 (i / immigrate-01 :arg0 (p5 / person) :arg1 (c3 / campaign-01 :arg0 (p6 / person) :arg1 (c4 / campaign-01 :arg0 (p7 / person)))) :mod (s2 / still)) :time (s3 / since :op1 (c5 / converse-01 :arg0 (p8 / person)))) :op2 (c6 / converse-01 :arg0 (p9 / person) :arg1 (p10 / person :quant 2016) :arg2 (t / temporal-quantity :quant (N / N-A) :unit (y / year)) :mod (s4 / still)) :time (s5 / since :op1 (h2 / he :mod (e / even))))
(t / threaten-01 :arg0 (c / company :arg0-of (i / insure-02)) :arg1 (e / end-01 :arg1 (a / and :op1 (p / person :arg0-of (h / have-org-role-91 :arg2 (a2 / agent :mod (t2 / travel-01)))) :op2 (p2 / person :arg0-of (h2 / have-org-role-91 :arg2 (a3 / agent))))) :time (a4 / already) :time (c2 / come-12 :arg1 (p3 / pay-01 :arg0 (c3 / company))))
(c / compromise-01 :arg0 (a / and :op1 (p / price-01) :op2 (s / security)) :arg1 (i / it) :time (a2 / always))
(m / multi-sentence :snt1 (l / love-01 :arg0 (i / i) :arg1 (p / person :name (n / name :op1 "Amy"))) :snt2 (p2 / person :mod (o / only) :domain (s / she)) :snt3 (l2 / love-01 :arg0 (s2 / she) :arg1 (i2 / i) :time (e / ever)))
(m / multi-sentence :snt1 (l / love-01 :arg0 (i / i) :arg1 (p / person :name (n / name :op1 "Amy"))) :snt2 (p2 / person :mod (o / only) :arg0-of (l2 / love-01 :arg1 (i2 / i) :time (e / ever)) :domain (s / she)))
(c / cause-01 :arg1 (e / expect-01 :polarity - :arg1 (g / game :arg1-of (g2 / go-01 :arg4 (s / sets :quant 5) :arg1-of (p / possible-01)))) :location (a / and :op1 (l / location :name (n / name :op1 "Delhi") :mod (n2 / new)) :op2 (h / humidity :arg1-of (h2 / high-02))))
(h / have-03 :arg0 (s / sell-01) :arg1 (l / line :mod (f / future)))
(s / say-01 :arg0 (i / i) :arg1 (a / and :op1 (r / reverently :arg1 (p / person :arg0-of (h / have-org-role-91 :arg2 (r2 / reverently)))) :op2 (z / zipped :arg0 (p2 / person) :arg1 (u / uniforms :quant 2 :name (n / name :op1 (j / jacket)) :arg1-of (j2 / jacket))) :arg1-of (q / quick-02)) :time (m / morning :mod (g / good)))
(k / know-01 :polarity - :arg0 (h / he) :arg1 (a / anything :topic (h2 / horse)))
(k / know-01 :arg0 (f / family :arg1-of (e / extend-01) :arg2-of (t / total-01)) :arg1 (h / have-manner-91 :arg1 (a / amr-unknown)))
(r / reduce-01 :arg1 (f / frame) :concession (i / increase-01 :arg1 (r2 / rate :mod (i2 / interest) :arg1-of (i3 / increase-01 :time (d / date-entity :month 1 :day 4)) :arg0-of (a / affect-01 :arg1 (p / premium :mod (o / or :op1 (h / heavy) :op2 (l / large)) :mod (o2 / or :op1 (h2 / heavy) :op2 (l2 / large)) :arg1-of (s / start-01 :arg1-of (p2 / possible-01 :polarity -)))))))
(m / multi-sentence :snt1 (w / want-01 :arg0 (b / background :mod (k / kind :mod (a / any)) :arg1-of (w2 / want-01 :arg0 (p / person :name (n / name :op1 "Corbyn")))) :arg1 (c / convey-01 :arg0 (b2 / background) :arg1 (i / image :mod (k2 / kind :mod (a2 / any)) :arg1-of (w3 / want-01 :arg0 (p2 / person))))) :snt2 (a3 / and :op1 (r / remain-01 :arg1 (r2 / report :mod (d / discipline) :arg1-of (r3 / remain-01 :arg3 (i2 / important) :time (a4 / age :poss (a5 / and :op1 (t / transmissions :medium (t2 / television)) :op2 (h / hotbed :mod (p3 / particular)))) :op2 (s / swinging :arg1 (a6 / and :op1 (p4 / perspective) :op2 (b3 / betrayal))))))))
(d / decrease-01 :arg0 (s / support-01 :arg0 (s2 / she) :arg1 (m / man)) :arg1 (a / and :op1 (p / person :name (n / name :op1 "Sanders")) :op2 (s3 / she)) :arg1-of (s4 / significant-02) :mod (o / only))
(a / and :op1 (s / support-01 :arg0 (m / man) :arg1 (m2 / man) :arg1-of (s2 / significant-02)) :op2 (l / lose-02 :arg0 (p / person :name (n / name :op1 "Sanders")) :arg1 (p2 / point :quant 5 :mod (o / only))))
(c / contrast-01 :arg2 (c2 / country :name (n / name :op1 "N-A") :polarity -))
(o / obligate-01 :arg2 (f / find-01 :arg0 (c / company) :arg1 (c2 / contract :mod (n / new)) :arg1-of (q / quick-02)))
(m / mean-01 :arg1 (i / it) :arg2 (a / and :op1 (p / possible-01 :arg1 (b / buy-01 :arg0 (p2 / person) :arg1 (o / online))) :op2 (p3 / possible-01 :arg1 (m2 / make-05 :arg0 (p4 / person) :arg1 (c / contexts :arg1-of (d / differ-02) :example (s / sofa :arg1 (p5 / person)))))))
(a / allusions :arg0 (p / person :name (n / name :op1 "Prince") :arg0-of (r / rival-01 :arg1 (m / movement-07))) :arg1 (m2 / movement-07) :arg1-of (c / cause-01 :arg0 (s / state-01 :arg0 (p2 / person) :arg1 (n2 / nominate-01 :arg1 (y / year :mod (y2 / year :mod (g / grammys)))))))
(c / contrast-01 :arg1 (h / hints :arg1-of (m / make-01 :location (m2 / movement-07))) :arg2 (p / place-01 :arg1 (n / nominees :arg1-of (m3 / make-01 :location (m4 / movement-07))) :arg2 (n2 / nominees :location (a / album :part-of (y / year :mod (g / grammy))))))
(s / station :mod (r / report-01) :mod (n / new) :location (s2 / sweep-06 :arg0 (l / location :name (n2 / name :op1 "Bremen") :location (l2 / location :name (n3 / name :op1 "Bremen")))))
(o / or :mode (i / interrogative) :op1 (s / see-01 :arg0 (y / you) :arg1 (y2 / you)) :op2 (h / have-part-91 :arg1 (y3 / you) :arg2 (e / event :mod (n / news))))
(s / say-01 :arg0 (g / government-organization :arg0-of (g2 / govern-01)) :arg1 (m / money :purpose (i / introduce-02 :arg1 (s2 / system :mod (e / electronic)))))
(c / call-on-05 :arg0 (i / it) :arg1 (p / person :arg0-of (l / lead-02 :arg1 (o / organization :name (n / name :op1 "EU")))) :arg2 (c2 / consider-02 :arg0 (p2 / person) :arg1 (t / thing :arg2-of (s / sanction-02 :arg1 (a / and :op1 (p3 / politician) :op2 (p4 / person :arg0-of (h / have-org-role-91 :arg3 (j / judge-01))) :op3 (p5 / person :arg0-of (h2 / have-org-role-91 :arg3 (j2 / judge-01)) :arg1-of (i2 / involve-01 :arg2 (p6 / persecution :mod (p7 / politics)))))))))
(c / contrast-01 :arg1 (i / increase-01 :arg0 (m / minor) :arg1 (a / assess-01 :arg0 (i2 / it) :arg1 (- / -rrb- :quant 317)) :mod (m2 / minor) :arg1-of (c2 / compare-01 :arg2 (a2 / and :op1 (-2 / -lrb- :quant 317) :op2 (t / tuesday :quant 283)))) :arg2 (u / up :arg1 (n / number :poss (t2 / they)) :arg2 (t3 / thursday :quant 343 :mod (l / last))) :time (t4 / today))
(s / solve-01 :arg1 (p / problem :mod (t / this)) :arg2 (w / wait-01 :arg1 (p2 / problem :mod (t2 / this)) :arg2 (a / and :op1 (w2 / wait-01 :arg1 (p3 / problem) :time (u / until :op1 (u2 / update-01))) :op2 (t3 / try-01 :arg1 (t4 / try :arg1 (p4 / problem))))))
(m / multi-sentence :snt1 (a / amount :mod (i / incredible) :quant-of (a2 / and :op1 (c / curves) :op2 (s / settings) :op3 (r / resource :name (n / name :op1 (t / thermex))) :op4 (r2 / resource :name (n2 / name :op1 (t2 / thermex))) :op5 (r3 / resource :name (n3 / name :op1 (t3 / thermex))))) :snt2 (a3 / allow-01 :arg1 (r4 / respond-01 :arg0 (a4 / and :op1 (r5 / resource :name (n4 / name :op1 (t4 / thermex))) :op2 (r6 / resource :name (n5 / name :op1 (r7 / roz?í?itelnost)))) :arg1 (t5 / thing :arg1-of (r8 / require-01) :arg1-of (r9 / result-01 :arg2 (s2 / stop-01 :arg1 (r10 / reduce-01))) :arg2-of (r11 / result-01 :arg1 (a5 / and :op1 (s3 / stop-01 :arg1 (r12 / reduce-01)) :op2 (n6 / need-01 :arg1 (d / displacement :arg1 (a6 / and))))))) :manner (r13 / rapid)))
(o / oppose-01 :arg1 (r / rule))
(g / gain-02 :arg0 (w / wage-01) :arg1 (s / sign :arg1-of (p / picking)))
(c / contrast-01 :arg2 (e / expensive :degree (m / more :quant (a / about :op1 (1 / 1/2))) :domain (i / it)))
(c / contrast-01 :arg1 (i / it :arg1-of (s / say-01 :arg0 (h / he))) :arg2 (e / expensive :degree (m / more :quant (a / about :op1 (1 / 1/2))) :domain (i2 / it)))
(a / and :op1 (f / fall-01 :arg1 (r / rate :mod (e / employ-01 :polarity -)) :arg4 (p / percentage-entity :value (N / N-A)) :arg4 (p2 / percentage-entity :value (N2 / N-A)) :time (m / month :mod (p3 / previous))) :op2 (c / close-10 :arg1 (r2 / rate) :arg2 (l / level) :arg1-of (c2 / cause-01 :arg0 (c3 / consider-01 :arg0 (g / government-organization :name (n / name :op1 "Fed")) :arg1 (e2 / employ-01 :mod (f2 / full))))))
(r / recommend-01 :arg0 (l / lady :mod (c / country :name (n / name :op1 "Argentina"))) :arg1 (p / person :name (n2 / name :op1 "Monika")))
(a / and :op2 (a2 / and :op1 (c / comfortable-02 :arg0 (c2 / capital :mod (e / especially)) :arg1 (a3 / and :op1 (c3 / country :name (n / name :op1 "Germany")) :op2 (o / organization :name (n2 / name :op1 "European" :op2 "Union"))) :arg1-of (c4 / cause-01 :arg0 (c5 / control-01 :arg0 (a4 / and :op1 (c6 / country) :op2 (o2 / organization)) :arg1 (s / state :arg1-of (i / include-91 :arg2 (s2 / state :location (c7 / continent :name (n3 / name :op1 "Europe"))) :arg3 (m / most))) :mod (a5 / actual))))))
(s / say-01 :arg0 (p / person :arg1-of (e / employ-01 :manner (i / increase-01))) :arg1 (e2 / employ-01 :arg0 (p2 / person :name (n / name :op1 "Veronique" :op2 "Laury")) :arg1 (p3 / person) :arg1-of (i2 / increase-01)))
(s / say-01 :arg0 (p / person :name (n / name :op1 "Veronique" :op2 "Laura")) :arg1 (i / increase-01 :arg1 (a / artisans :arg1 (p2 / person)) :arg1-of (i2 / increase-01)))
(h / have-concession-91 :arg1 (s / solve-01 :arg1 (t / thing :arg2-of (s2 / solve-01) :mod (t2 / this) :mod (o / only))) :arg2 (p / praise-01 :arg0 (p2 / person :mod (c / country :name (n / name :op1 "Germany"))) :arg1 (e / effort :poss (a / and :op1 (c2 / country) :op2 (c3 / country :name (n2 / name :op1 "Austria"))))))
(v / vow-01 :arg0 (p / person :name (n / name :op1 "Griffiths")) :arg1 (a / avoid-01 :arg0 (p2 / person) :arg1 (p3 / person :name (n2 / name :op1 "Tynecastleu"))))
(c / confirm-01 :arg0 (h / he) :arg1 (a / affect-01 :arg0 (d / diets :mod (u / unhealthy)) :arg1 (s / system :mod (i / immune) :poss (c2 / child))) :arg2-of (f / fortunate-01 :polarity -) :mod (a2 / also))
(n / name-01 :arg0 (d / dog) :arg1 (p / person :arg0-of (l / live-01 :location (h / house :mod (p2 / product :name (n2 / name :op1 "N-A"))))) :arg2 (s / shoulder :part-of (p3 / person :name (n3 / name :op1 "Gautier") :arg0-of (l2 / live-01 :location (h2 / house :mod (g / game :name (n4 / name :op1 "N-A")))))))
(c / consider-02 :arg0 (p / person :arg0-of (t / transfer-01 :arg1 (t2 / transfer-01 :arg1 (h / headquarters :poss (g / group))))) :arg1 (l / location :location (o / organization :name (n / name :op1 "Prague" :op2 "Stock" :op3 "Exchange"))) :manner (' / ''))
(i / include-91 :arg1 (p / percentage-entity :value (N / N-A)) :arg2 (r / revenue :poss (g / group)))
(t / think-01 :polarity - :arg0 (i / i) :arg1 (u / undermine-01 :arg0 (i2 / it) :arg1 (c / company :name (n / name :op1 "BBC")) :manner (w / way)))
(t / take-10 :arg0 (i / it) :arg1 (t2 / temporal-quantity :quant (N / N-A) :unit (d / day)))
(j / judge-01 :arg1 (o / organization :mod (s / street) :mod (s2 / street)) :time (t / then))
(( / ( :( (n / name) :op1 "Albert" :op2 "Einstein")
(c / contrast-01 :arg1 (a / ambitious) :arg2 (d / dreamers :arg1 (w / we)))
(r / right-06 :mode (i / interrogative) :arg1 (p / person :arg0-of (s / say-01 :arg1 (d / devil :domain (d2 / devil :poss (p2 / person :arg0-of (f / favor-01 :arg1 (c / country :name (n / name :op1 "Germany")))))))) :arg2 (a / and :op1 (a2 / aggression) :op2 (e / equality) :op3 (v / violence)))
(a / and :op1 (f / focus-01 :arg0 (h / he) :arg2 (a2 / and :op1 (o / organisers :arg1 (o2 / organization :name (n / name :op1 "Racing" :op2 "Victoria"))) :op2 (i / integrity :poss (o3 / organization)))) :op2 (b / base-02 :arg1 (b2 / believe-01 :arg1 (h2 / have-03 :arg0 (t / they) :arg1 (c / campaign-01 :arg0 (h3 / he) :arg1 (a3 / against :op1 (p / person :name (n2 / name :op1 "Lady" :op2 "Tatai") :time (l / late))) :time (m / maintain-01 :arg1 (r / race))))) :arg2 (h4 / he) :time (d / day :mod (l2 / last))))
(a / and :op1 (h / have-03 :arg0 (o / organization :name (n / name :op1 "Spole?nost" :op2 "Hewlett" :op3 "Parckard" :op4 "Enterprise")) :arg1 (t / thing :arg1-of (s / state-01 :arg0 (o2 / organization :name (n2 / name :op1 "Post"))))) :op2 (f / focus-01 :arg0 (o3 / organization) :arg2 (p / provide-01 :arg0 (r / revenue) :arg1 (t2 / thing :arg2-of (s2 / solve-01 :arg1 (t3 / technology :arg1-of (i / integrate-01) :mod (t4 / technology) :arg1-of (i2 / integrate-01)))))))
(m / multi-sentence :snt1 (o / obligate-01 :arg1 (a / and :op1 (p / person :name (n / name :op1 "Kokkinakis")) :op2 (p2 / person :name (n2 / name :op1 "Ryan" :op2 "Harrison") :arg0-of (h / have-org-role-91 :arg2 (p3 / president :mod (v / vice))))) :arg2 (a2 / and :op1 (p4 / person :name (n3 / name :op1 "Ryan" :op2 "Harrison") :arg0-of (h2 / have-org-role-91 :arg2 (' / ''))) :op2 (p5 / person :name (n4 / name :op1 "Ryan" :op2 "Harrison") :arg0-of (h3 / have-org-role-91 :arg1 (c / country) :arg2 (o2 / opponent)))) :time (a3 / after :op1 (d / date-entity :mod (s / soon)) :location (l / location :name (n5 / name :op1 "Cincinnati")))) :snt2 (s2 / say-01 :arg0 (p6 / person :name (n6 / name :op1 "Harrison")) :arg1 (a4 / and :op1 (h4 / have-03 :arg0 (p7 / person :name (n7 / name :op1 "Kyrgiosovi" :op2 "Wawrinka")) :arg1 (s3 / stretch :quant 1)) :op2 (o3 / obligate-01 :arg1 (i / i) :arg2 (b / befriend-01 :arg0 (i2 / i) :arg1 (p8 / person) :mod (t / too))))))
(d / direct-01 :arg0 (p / person :name (n / name :op1 "Andrew" :op2 "Hawkins") :arg1-of (d2 / direct-01 :arg0 (p2 / person :mod (o / original)))) :arg1 (n2 / note :quant 2008) :mod (o2 / original) :time (c / current))
(o / open-01 :arg1 (p / person :arg0-of (d / drive-01)) :time (d2 / date-entity :year (N / N-A)))
(h / have-part-91 :arg1 (p / prepare-02 :arg2 (a / annexes)) :mod (e / essential) :mod (a2 / also))
(m / multi-sentence :snt1 (r / recommend-01 :arg1 (c / confident-01 :arg1 (t / thing :arg1-of (r2 / report-01 :arg0 (t2 / thing :arg1-of (r3 / report-01 :arg0 (t3 / thing :arg1-of (r4 / report-01 :arg0 (t4 / thing :arg1-of (r5 / report-01 :arg0 (t5 / thing :arg1-of (r6 / report-01 :arg0 (t6 / thing :arg1-of (r7 / report-01 :arg0 (t7 / thing :arg1-of (r8 / report-01 :arg0 (t8 / thing :arg1-of (r9 / report-01 :arg0 (t9 / thing :arg1-of (r10 / report-01 :arg0 (t10 / thing :arg1-of (r11 / report-01 :arg0 (t11 / thing :arg1-of (r12 / report-01 :arg0 (t12 / thing :arg1-of (r13 / report-01 :arg0 (t13 / thing :arg1-of (r14 / report-01 :arg0 (t14 / thing :arg1-of (r15 / report-01 :arg0 (t15 / thing :arg1-of (r16 / report-01 :arg0 (t16 / thing :arg1-of (r17 / report-01 :arg0 (t17 / thing :arg1-of (r18 / report-01 :arg0 (t18 / thing :arg1-of (r19 / report-01 :arg0 (t19 / thing :arg1-of (r20 / report-01 :arg0 (t20 / thing :arg1-of (r21 / report-01 :arg0 (t21 / thing :arg1-of (r22 / report-01 :arg0 (t22 / thing :arg1-of (r23 / report-01 :arg0 (t23 / thing :arg1-of (r24 / report-01 :arg0 (c2 / country :name (n / name :op1 "N-A")))))))))))))))))))))))))))))))))))))))))))))))))))
(l / land-01 :arg1 (p / person :name (n / name :op1 "Ben" :op2 "Carson")) :location (e / elect-01 :mod (n2 / nation)))
(m / multi-sentence :snt1 (r / resemble-01 :mode (i / interrogative) :arg1 (p / person :name (n / name :op1 "Miliband") :arg1-of (r2 / resemble-01 :arg2 (p2 / person :name (n2 / name :op1 "Blair") :arg0-of (h / have-org-role-91 :arg2 (b / blair))))) :arg2 (p3 / person :arg0-of (h2 / have-org-role-91 :arg1 (b2 / blair))) :degree (m2 / more)) :snt2 (r3 / routine :mode (i2 / interrogative) :time (s / since :op1 (a / admit-01 :arg0 (p4 / person) :arg1 (p5 / principle :mod (c / constitution :arg1-of (s2 / sunk :arg0 (a2 / and :op1 (p6 / person :mod (c2 / country)) :op2 (p7 / person :arg0-of (v / vote-01 :arg1 (d / dutch))) :op3 (p8 / person :arg0-of (v2 / vote-01 :arg1 (c3 / card :name (n3 / name :op1 (d2 / dutch)))))))))))))
(t / try-01 :arg0 (t2 / they :quant (s / some)) :arg1 (m / mark-01 :arg0 (t3 / they) :arg1 (m2 / man :arg0-of (o / opine-01 :arg1-of (f / frequent-02)))))
(c / cause-01 :arg0 (i / interest-01 :arg1 (p / public)) :arg1 (g / go-01 :arg1 (d / date :quant (m / more)) :arg4 (s / sell-01) :time (u / until :op1 (d2 / date-entity :year 2016 :month 5))))
(a / and :op1 (t / take-01 :mode (i / imperative) :arg0 (y / you) :arg1 (t2 / time)) :op2 (w / waste :domain (o / or :op1 (m / material) :op2 (c / correction))))
(a / and :op2 (b / be-temporally-at-91 :arg1 (f / figure :mod (t / this)) :arg2 (s / stage :mod (e / early))))
(s / say-01 :arg0 (o / organization :name (n / name :op1 "Deutsche")) :arg1 (f / fall-01 :arg1 (t / they) :time (i / immediate) :arg1-of (c / cause-01 :arg0 (i2 / increase-01))))
(m / multi-sentence :snt1 (- / -lrb- :mode (i / interrogative) :mod (u / urban) :location (l / location :name (n / name :op1 "Milan"))) :snt2 (c / crucial :domain (-2 / -rrb- :arg0 (p / person :arg0-of (h / have-org-role-91 :arg2 (m2 / member))) :arg1 (t / thing :arg1-of (c2 / conclude-01 :arg0 (p2 / person :arg0-of (h2 / have-org-role-91 :arg1 (g / government-organization :arg0-of (g2 / govern-01)) :arg2 (m3 / member)))) :arg0-of (h3 / have-org-role-91 :arg1 (g3 / government-organization :arg0-of (g4 / govern-01)) :arg2 (m4 / member)) :arg0-of (h4 / have-org-role-91 :arg1 (g5 / government-organization :arg0-of (g6 / govern-01)) :arg2 (m5 / member)) :arg0-of (h5 / have-org-role-91 :arg1 (g7 / government-organization :arg0-of (g8 / govern-01)) :arg2 (m6 / member)) :arg0-of (h6 / have-org-role-91 :arg1 (g9 / government-organization :arg0-of (g10 / govern-01)) :arg2 (m7 / member))) :topic (t2 / thing :arg1-of (u2 / update-01)))))
(c / cause-01 :arg0 (m / map) :arg1 (p / put-01 :arg0 (a / and :op1 (p2 / person :name (n / name :op1 "Janet" :op2 "L." :op3 "Yellen") :arg0-of (h / have-org-role-91 :arg1 (g / government-organization) :arg2 (c2 / chair :mod (g2 / government-organization :name (n2 / name :op1 "Fed"))))) :op2 (p3 / person :arg0-of (h2 / have-rel-role-91 :arg1 (p4 / person) :arg2 (c3 / colleagues)))) :arg1 (i / interest :mod (e / economy) :poss (n3 / nation :mod (a2 / all)))))
(c / cause-01 :arg0 (m / map) :arg1 (p / put-01 :arg0 (a / and :op1 (p2 / person :name (n / name :op1 "Janet" :op2 "L." :op3 "Yellen") :arg0-of (h / have-org-role-91 :arg1 (g / government-organization) :arg2 (c2 / chair :mod (g2 / government-organization :name (n2 / name :op1 "Fed"))))) :op2 (p3 / person :arg0-of (h2 / have-rel-role-91 :arg1 (p4 / person) :arg2 (c3 / colleagues)))) :arg1 (i / interest :mod (e / economy) :poss (n3 / nation :mod (a2 / all)))))
(a / and :op1 (k / know-01 :arg0 (i / i) :arg1 (f / frustrating :degree (v / very) :domain (i2 / it))) :op2 (s / sad-02 :arg0 (e / event :time (c / current)) :degree (r / really)))
(s / say-01 :arg0 (c / company) :arg1 (e / expect-01 :arg0 (c2 / company) :arg1 (g / grow-01 :arg1 (p / profit-01) :time (y / year :mod (p2 / previous)) :arg1-of (c3 / cause-01 :arg0 (a / and :op1 (c4 / cut-02 :arg1-of (c5 / cost-01)) :op2 (r / revenue :arg1-of (h / high-02 :degree (m / more))) :op3 (g2 / grow-01 :arg1 (r2 / revenue) :location (o / online))))) :mod (s2 / still)))
(m / multi-sentence :snt1 (c / cause-01 :arg1 (l / listen-01 :polarity - :arg0 (w / we) :arg1 (a / and :op1 (t / thing :arg2-of (n / name-01 :arg1 (p / person :arg0-of (h / have-org-role-91 :arg2 (s / station))))) :op2 (p2 / person :arg0-of (h2 / have-org-role-91 :arg2 (h3 / head-of-state)))))) :snt2 (o / or :op1 (m2 / mírova :mode (i / interrogative)) :op2 (a2 / after :arg0 (i2 / i) :arg1 (i3 / i))))
(p / possible-01 :arg1 (h / handle-01 :arg0 (p2 / person :arg0-of (h2 / handle-01 :arg1 (p3 / press :mod (p4 / press) :poss (w / we)))) :arg1 (r / rate-entity-91 :arg1 (m / monetary-quantity :quant 8 :unit (p5 / pound)) :arg2 (t / temporal-quantity :quant (N / N-A) :unit (y / year)))))
(s / say-01 :arg0 (p / person :name (n / name :op1 "Butovic")) :arg1 (e / expensive :domain (t / tunnel) :degree (m / more :quant (h / half)) :condition (u / use-01 :arg1 (m2 / measure-01) :arg2 (p2 / person :quant 500 :mod (e2 / expensive :degree (m3 / more))) :time (e3 / early :degree (m4 / more)))))
(u / understand-01 :polarity - :arg0 (i / i) :arg1 (c / case :mod (a / arrange-01 :arg1 (a2 / artificial)) :mod (t / this)) :time (b / before :op1 (p / primátor :arg0 (h / he) :arg1 (p2 / project :arg1-of (r / resemble-01 :arg2 (p3 / project :time (y / year :mod (p4 / previous))))))))
(c / cause-01 :arg0 (w / want-01 :arg0 (t / they) :arg1 (g / get-01 :arg0 (t2 / they) :arg1 (s / support-01 :arg0 (t3 / they) :arg1 (f / future) :arg1-of (p / possible-01)))) :arg1 (o / organization :name (n / name :op1 "Voice") :domain (t4 / they) :time (t5 / time :mod (p2 / prime))))
(l / legacy :arg0 (a / and :op1 (s / school :poss (w / we)) :op2 (f / festival :poss (w2 / we))) :arg1 (l2 / legacy :poss (a2 / and)))
(a / and :op1 (g / g :quant 2 :arg0-of (c / contain-01 :arg1 (d / differ-02 :arg1 (w / weight)))) :op2 (n / negligible :arg1 (n2 / news) :degree (r / really)))
(s / say-01 :arg1 (c / come-01 :arg1 (p / person :name (n / name :op1 "Holcman") :mod (t / this)) :arg4 (i / i) :time (n2 / now)) :arg2 (s2 / say-01 :arg0 (p2 / person) :arg1 (v / voice :poss (c2 / chief))))
(c / continue-01 :arg1 (p / person :name (n / name :op1 "Tomsula") :mod (h / honest)) :manner (h2 / honest) :time (o / over :op1 (g / game)) :mod (a / also))
(g / go-02 :arg0 (i / i) :arg4 (a / and :op1 (r / repair-01 :arg1 (a2 / and :op1 (e / equipment :mod (n / new)) :op2 (e2 / equipment :mod (n2 / new)))) :op2 (r2 / reconstruct-01 :arg1 (a3 / and :op1 (e3 / equipment :mod (n3 / new)) :op2 (e4 / equipment :mod (n4 / new))))) :time (a4 / after :op1 (n5 / now) :quant (u / up-to :op1 (t / temporal-quantity :quant (N / N-A) :unit (y / year)))))
(r / reject-01 :arg0 (p / person :arg0-of (a / author-01 :arg1 (p2 / propose-01)) :arg0-of (r2 / reject-01 :arg1 (c / criticize-01 :arg1 (p3 / person :arg0-of (o / oppose-01))))) :arg1 (s / say-01 :arg0 (p4 / person :arg0-of (a2 / author-01 :arg1 (p5 / propose-01))) :arg1 (c2 / counted :polarity - :arg0 (p6 / person) :arg1 (f / facade :mod (p7 / pink) :arg0-of (g / give-01 :arg1 (p8 / project :topic (t / treat-01 :arg1 (p9 / person :mod (w / white) :mod (w2 / white)) :arg2 (n / nicknamed))))))))
(a / and :op1 (h / hear-01 :arg1 (g / girl)) :op2 (t / talk-01 :arg0 (g2 / girl) :arg1 (t2 / thing :manner-of (a2 / and :op1 (u / use-01 :arg0 (d / defendant) :arg1 (c / computer :poss (g3 / girl))) :op2 (p / possible-01 :arg1 (t3 / talk-01 :arg0 (d2 / defendant) :arg2 (g4 / girl)))) :op3 (l / look-01 :arg0 (d3 / defendant) :arg1 (y / young :degree (m / more :degree (m2 / much)) :compared-to (h2 / he))))))
(c / contrast-01 :arg2 (d / do-02 :arg0 (p / person :quant (s / some) :arg0-of (t / try-01 :arg1 (d2 / downloading :arg0 (p2 / person) :arg1 (p3 / person :name (n / name :op1 "Donald" :op2 "Trump")) :arg2 (t2 / top :part-of (p4 / poll-01))))) :arg1 (- / -rrb- :arg0 (p5 / person) :degree (f / far :degree (s2 / so)))))
(c / contrast-01 :arg2 (q / question-03 :arg0 (p / person :arg0-of (r / research-01) :quant (s / several)) :arg1 (a / attend-02 :arg0 (d / data) :arg1 (b / between :op1 (p2 / person :arg1-of (e / expert-01)) :op2 (i / industry :consist-of (t / tobacco)) :quant (s2 / some)))))
(a / and :op1 (m / massive :domain (s / shop)) :op2 (t / take-10 :arg0 (c / clambered :arg0 (s2 / shop) :arg1 (y / you)) :arg1 (y2 / you)))
(c / contrast-01 :arg1 (i / increase-01 :polarity - :arg1 (h / house)) :arg2 (j / joy :arg0 (p / person :name (n / name :op1 "Vasek")) :arg1 (g / gas :arg1 (g2 / gas) :arg2 (p2 / prepare-01 :arg1 (f / food) :beneficiary (p3 / person :quant 6))) :time (s / subsequent)))
(( / ( :( (n / name) :op1 "Vsetín")
(w / want-01 :polarity - :arg0 (a / and :op1 (c / country :name (n / name :op1 "Hungary")) :op2 (c2 / country :name (n2 / name :op1 "Slovakia")) :op3 (c3 / country :name (n3 / name :op1 "Czech" :op2 "Republic"))) :arg1 (h / hear-01 :arg0 (a2 / and)) :mod (s / still))
(w / want-01 :polarity - :arg0 (a / and :op1 (c / country :name (n / name :op1 "Hungary")) :op2 (c2 / country :name (n2 / name :op1 "Slovakia")) :op3 (c3 / country :name (n3 / name :op1 "Czech" :op2 "Republic")) :op4 (c4 / country :name (n4 / name :op1 "Poland"))) :arg1 (h / hear-01 :arg0 (a2 / and) :arg1 (a3 / and)) :mod (s / still))
(o / obligate-01 :arg1 (w / we) :arg2 (a / and :op1 (l / live-01 :arg0 (h / he) :frequency (o2 / occasional)) :op2 (l2 / live-01 :arg0 (h2 / he) :destination (a2 / and :op1 (o3 / occasional) :op2 (c / consciousness)) :arg1-of (a3 / add-01 :arg0 (w2 / we) :mod (o4 / only)))))
(s / see-01 :arg1 (a / and :op1 (j / judge-01 :arg0 (a2 / and :op1 (p / person :arg0-of (l / lead-02 :arg1 (p2 / person :arg0-of (l2 / lead-02)))) :op2 (p3 / person :arg0-of (l3 / lead-02 :arg1 (t / they))) :op3 (p4 / position-02 :arg0 (p5 / person) :arg2 (p6 / person :mod (o / other) :arg0-of (h / have-org-role-91 :arg2 (m / mp))))) :arg1 (a3 / and :op1 (b / become-01 :arg1 (p7 / person) :arg2 (c / caricature)) :op2 (r / require-01 :arg0 (p8 / person) :arg1 (r2 / reform-01)))) :op2 (r3 / require-01 :arg0 (p9 / person) :arg1 (r4 / reform-01))) :time (s2 / since :op1 (s3 / see-01 :arg1 (p10 / person :arg1-of (b2 / broadcast-01 :arg0 (a4 / and :op1 (p11 / person :arg0-of (l4 / lead-02)) :op2 (p12 / person :arg0-of (l5 / lead-02 :arg1 (t2 / they)))) :ord (o2 / ordinal-entity :value 1))))))
(e / end-01 :arg0 (t / they) :arg1 (a / and :op1 (d / decline-01 :arg1 (p / percentage-entity :value (N / N-A))) :op2 (d2 / decline-01 :arg1 (p2 / percentage-entity :value (N2 / N-A)) :time (d3 / date-entity :month 11 :day (N3 / N-A)))))
(d / do-02 :arg0 (c / chief) :arg1 (w / well :degree (v / very)) :time (p / pull-01 :arg0 (h / he) :arg1 (i / i) :arg2 (s / squad :mod (s2 / squad))))
(d / do-02 :arg0 (c / chief) :arg1 (w / well :degree (v / very)) :time (p / pull-01 :arg0 (h / he) :arg1 (i / i) :arg2 (o / out-06 :arg1 (i2 / i) :arg2 (p2 / platoon))))
(i / ill :arg0 (d / doctor) :arg1 (s / space :purpose (a / activity-06 :arg1 (d2 / disease))) :mod (p / passivity))
(t / tell-01 :arg2 (w / wiped :mod (a / alert-01)) :time (t2 / then))
(m / measure-01 :arg0 (e / event :location (a / around :op1 (a2 / area :location (r / relative-position :op1 (a3 / area :mod (m2 / mountain))))) :location (b / below :op1 (a4 / area :mod (m3 / mountain)))) :arg1 (m4 / measure-01 :arg1 (e2 / ecrins) :arg2 (d / distance-quantity :quant (N / N-A) :unit (m5 / meter))))
(p / possible-01 :arg1 (t / tell-01 :arg0 (i / i) :arg1 (t2 / tolerance :quant 1) :arg2 (t3 / tolerance)) :time (r / run-01 :arg0 (c / controller) :arg1 (f / finger :part-of (r2 / rivets))))
(c / contrast-01 :arg2 (w / warn-01 :arg0 (i / i) :arg1 (p / possible-01 :arg1 (s / set-02 :polarity - :arg0 (s2 / setting :arg0 (r / regulate-01 :arg0 (g / government-organization :arg0-of (g2 / govern-01)))) :arg1 (f / fee) :arg1-of (a / accord-02 :arg2 (c2 / constitution))))))
(p / prepare-02 :arg0 (w / we) :arg1 (b / boy) :arg2 (a / act-02 :arg0 (b2 / boy)) :arg1-of (p2 / promise-01 :arg0 (p3 / person :name (n / name :op1 "Donnelly"))))
(r / rise-01 :arg1 (s / sports :mod (j / jd)) :arg2 (p / percentage-entity :value (N / N-A)) :time (a / after :op1 (a2 / announce-01 :arg0 (c / company) :arg1 (r2 / rate-entity-91 :arg1 (p2 / percentage-entity :value (N2 / N-A)) :arg2 (t / temporal-quantity :quant (N3 / N-A) :unit (y / year))) :time (b / before :op1 (t2 / tax-01 :arg3 (t3 / tax-01 :arg3 (m / monetary-quantity :quant 46.6 :unit (y2 / yuan :mod (r3 / renminbi)))))))))
(g / give-01 :arg0 (p / person :arg0-of (h / have-rel-role-91 :arg1 (i / i) :arg2 (p2 / parent))) :arg1 (t / trust-01) :arg2 (p3 / person :arg0-of (h2 / have-rel-role-91 :arg1 (i2 / i) :arg2 (p4 / parent))))
(a / and :op1 (h / have-rel-role-91 :arg0 (s / she) :arg1 (s2 / she) :arg2 (f / friend) :location (s3 / school :arg1-of (h2 / high-02))) :op2 (k / kid :mod (o / old :degree (g / great)) :arg0-of (t / tutored :arg1 (s4 / she) :duration (f2 / few :op1 (t2 / temporal-quantity :quant (N / N-A) :unit (y / year)))) :domain (s5 / she)))
(m / match-03 :mod (l / league) :mod (c / classic) :mod (c2 / classic) :domain (i / it))
(p / possible-01 :arg1 (i / it))
(p / possible-01 :arg1 (f / fatal :arg1 (i / it) :arg2 (p2 / person :arg0-of (h / have-rel-role-91 :arg1 (i2 / i) :arg2 (c / child)))))
(b / believe-01 :arg0 (i / i) :arg1 (b2 / believe-01 :arg0 (i2 / i) :arg1 (o / organization :name (n / name :op1 "Juventus") :poss (o2 / organization :name (n2 / name :op1 "Juventus")))))
(a / and :op1 (h / have-frequency-91 :arg2 (s / say-01 :arg1 (s2 / start-01 :arg1 (t / treat-01 :arg1 (d / disease) :arg2 (s3 / soon :degree (m / more)))))) :op2 (p / possible-01 :arg1 (h2 / have-03 :arg0 (d2 / doctor) :arg1 (s4 / something) :purpose (d3 / do-02 :arg0 (d4 / doctor) :arg1 (s5 / something)))) :location (s6 / sclerosis :quant (m2 / multiple)))
(m / multi-sentence :snt1 (a / age-01 :arg1 (p / person :quant (m2 / multiple)) :arg2 (t / temporal-quantity :quant (N / N-A) :unit (y / year))) :snt2 (p2 / possible-01 :arg1 (i / influence-01 :arg0 (d / doctor) :degree (m3 / more))) :li (N2 / N-A))
(c / contrast-01 :arg2 (b / become-01 :arg1 (g / government-organization :name (n / name :op1 "Fed")) :arg2 (a / authority :mod (m / money) :location (w / worldwide))))
(s / suggest-01 :arg0 (p / person :name (n / name :op1 "Van" :op2 "Gall")) :arg1 (w / wrong-04 :arg1 (r / referee :mod (i / italian))))
(m / multi-sentence :snt1 (l / look-02 :arg0 (h / he) :arg1 (g / good)) :snt2 (a / and :op1 (p / possible-01 :polarity - :arg1 (g2 / good :degree (m2 / more) :domain (h2 / he))) :op2 (m3 / manage-02 :arg0 (h3 / he) :arg1 (b / bring-01 :arg0 (h4 / he) :arg1 (i / it) :arg2 (g3 / game)))))
(a / and :op1 (l / look-01 :arg0 (h / he) :arg1 (p / practice :arg1-of (p2 / practice-01))) :op2 (p3 / possible-01 :polarity - :arg1 (m / manage-02 :arg0 (h2 / he) :arg1 (b / bring-01 :arg0 (h3 / he) :arg1 (i / it) :arg2 (g / game)))))
(m / multi-sentence :snt1 (a / and :op1 (l / look-02 :arg1 (g / good)) :op2 (p / possible-01 :polarity - :arg1 (a2 / avoid-01 :arg1 (g2 / good :degree (m2 / more))))) :snt2 (a3 / and :op2 (m3 / manage-02 :arg0 (h / he) :arg1 (p2 / pass-03 :arg1 (m4 / match-03 :mod (n / next))))))
(m / multi-sentence :snt1 (l / look-02 :mode (i / imperative) :arg0 (y / you) :arg1 (g / good)) :snt2 (a / and :op1 (b / blowing :mode (i2 / imperative) :arg0 (y2 / you) :arg1 (g2 / good :degree (m2 / more))) :op2 (m3 / manage-02 :arg0 (y3 / you) :arg1 (g3 / get-05 :arg1 (y4 / you) :arg2 (m4 / match-03)))))
(s / say-01 :arg0 (p / person :name (n / name :op1 "Damon")) :arg1 (a / and :op1 (t / terrify-01 :arg0 (f / film) :arg1 (f2 / film)) :op2 (t2 / terrify-01 :polarity - :arg0 (t3 / thing) :arg1 (s2 / show-04))) :time (t4 / talk-01 :arg0 (w / we) :arg1 (d / diversity)))
(a / and :op1 (r / run-01 :arg0 (p / person :name (n / name :op1 "Hughes")) :arg1 (b / base :quant 3)) :op2 (g / gain-02 :arg0 (p2 / person) :arg1 (a2 / and :op1 (h / hits :quant 6) :op2 (s / strike-01 :quant 6))))
(c / compete-01 :arg1-of (c2 / cause-01 :arg0 (p / possible-01 :polarity - :arg1 (o / overcome-01 :arg0 (p2 / person :quant (n / none)) :arg1 (o2 / obstacle :quant (a / all) :location (t / track))) :mod (j / just))) :location (c3 / compete-01 :arg1-of (f / finish-01 :arg0 (s / season :quant (n2 / none)) :mod (j2 / just))))
(s / something :arg1-of (s2 / significant-02) :mod (o / or :op1 (b / bizarre :arg1-of (s3 / significant-02)) :op2 (b2 / bizarre) :op3 (r / record-01) :location (p / place :location-of (l / live-01 :arg0 (y / you)))))
(s / say-01 :arg1 (e / explain-01 :arg0 (p / person :name (n / name :op1 "Masek") :arg0-of (h / have-org-role-91 :arg2 (m / mayor))) :arg1 (p2 / person :arg0-of (h2 / have-org-role-91 :arg2 (m2 / mayor)))) :arg2 (' / '' :location (a / autumn :name (n2 / name :op1 (s2 / suction) :op2 (s3 / strainer) :op3 (s4 / strainer) :op4 (s5 / strainer) :op5 (s6 / strainer) :op6 (s7 / strainer) :op7 (s8 / strainer)))))
(a / and :op1 (g / go-02 :arg0 (i / i) :arg4 (h / home) :time (t / tonight)) :op2 (s / sleep-01 :arg0 (i2 / i) :mod (a2 / as-well) :mod (a3 / as-well)))
(m / multi-sentence :snt1 (f / feel-01 :arg0 (i / i) :arg1 (h / hard-02 :arg1 (i2 / it) :degree (v / very))) :snt2 (s / sorry-01 :arg1 (i3 / i) :degree (v2 / very)))
(h / have-concession-91 :arg1 (c / complain-01 :arg0 (o / organization) :arg1 (p / period :mod (r / rate :mod (i / interest)))) :arg2 (o2 / organization :name (n / name :op1 "Ministry" :op2 "of" :op3 "Finance") :arg0-of (h2 / have-03 :arg1 (m / money))))
(s / say-01 :arg0 (i / i) :arg1 (o / objective :domain (i2 / i) :mod (r / really)))
(a / and :op1 (c / counts :arg0 (a2 / and :op1 (t / team :quant 1) :op2 (p / person :name (n / name :op1 "George" :op2 "Jolly") :arg0-of (h / have-org-role-91 :arg2 (f / forty)))) :arg1 (a3 / and :op1 (t2 / team :quant 1) :op2 (p2 / person :arg0-of (h2 / have-org-role-91 :arg1 (t3 / team :name (n2 / name :op1 (f2 / forty))))))) :op2 (s / sunday :arg0 (a4 / and)))
(a / and :op1 (p / publish-01 :arg0 (a2 / agency :mod (c / country :name (n / name :op1 "N-A"))) :arg1 (r / report :name (n2 / name :op1 (' / '')) :mod (s / satellite :name (n3 / name :op1 ('2 / '')))) :time (m / month :mod (l / last))) :op2 (d / describe-01 :arg0 (a3 / agency) :arg1 (r2 / report-01) :arg2 (r3 / review-01 :arg1 (t / thing :arg0-of (e / evidence-01)) :mod (c2 / comprehensive))))
(g / go-02 :arg0 (p / person :arg0-of (h / have-rel-role-91 :arg2 (d / daughter))) :arg4 (s / sword) :arg1-of (r / regular-02) :time (a / already))
FAILED_TO_PARSE#Two roles in a row.
(e / expect-01 :arg0 (p / person :quant 6 :arg0-of (a / analyze-01)) :arg1 (m / monetary-quantity :quant 12.23 :unit (d / dollar :mod (c / country :name (n / name :op1 "N-A")))))
(s / say-01 :arg1 (a / and :op1 (c / come-01 :arg1 (p / person :arg0-of (h / have-org-role-91 :arg2 (' / '')))) :op2 (s2 / say-01 :arg0 (p2 / person) :arg1 (w / waiter))) :arg2 (p3 / person :name (n / name :op1 "N-A")))
(t / taste :polarity - :arg0 (i / it) :arg1 (g / good) :mod (c / certain) :time (t2 / today))
(a / and :op1 (p / person :name (n / name :op1 "Sanchez") :prep-on (l / list :consist-of (i / injure-01)) :arg1-of (c / cause-01 :arg0 (m / muscle :location (s / shoulder :part-of (p2 / person))))) :op2 (r / recommend-01 :arg1 (g / get-05 :arg1 (p3 / person) :arg2 (g2 / game))))
(e / exemplify-01 :arg0 (o / or :op1 (p / person :name (n / name :op1 "Milano" :op2 "Ivan")) :op2 (m / maria :mod (z / zálo?níkovi))) :mod (p2 / particular))
(m / multi-sentence :snt1 (c / cause-01 :arg0 (t / that) :arg1 (a / and :op1 (s / stress-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (o / organization :name (n / name :op1 "Federal" :op2 "Bank")) :arg2 (o2 / official))) :arg1 (r / recommend-01 :arg1 (f / focus-01 :polarity - :arg0 (p2 / person :arg0-of (i / invest-01)) :arg2 (p3 / person :arg0-of (i2 / invest-01)) :arg1-of (h2 / hard-02 :degree (s2 / so))))) :op2 (r2 / recommend-01 :arg1 (f2 / focus-01 :polarity - :arg0 (p4 / person :arg0-of (i3 / invest-01)) :arg2 (p5 / person :arg0-of (i4 / invest-01)))))) :snt2 (c2 / contrast-01 :arg1 (r3 / recommend-01 :arg1 (f3 / focus-01 :polarity - :arg0 (p6 / person :arg0-of (i5 / invest-01)) :arg2 (p7 / person :arg0-of (i6 / invest-01))))))
(e / exprimátor :arg2 (c / court))
(h / have-concession-91 :arg1 (g / give-01 :arg0 (c / channel) :arg1 (h2 / hand :mod (r / right)) :arg2 (t / they)) :arg2 (c2 / channel :mod (a / additional) :mod (h3 / honest)))
(t / think-01)
(h / have-concession-91 :arg2 (s / suggest-01 :arg0 (s2 / surveys :mod (n / new)) :arg1 (m / measure-02 :polarity - :arg0 (p / person :arg0-of (h2 / have-rel-role-91 :arg2 (m2 / mother))) :arg1 (f / follow-02 :arg0 (p2 / person) :arg1 (p3 / person :arg0-of (h3 / have-rel-role-91 :arg2 (m3 / mother)))) :mod (o / only :polarity -))))
(c / contrast-01 :arg2 (d / dramatic :polarity - :degree (s / so) :domain (e / effect) :time (a / as-soon-as :op1 (i / increase-01 :arg1 (i2 / increase-01)))))
(a / and :op1 (h / hold-01 :arg0 (p / police :mod (c / country :name (n / name :op1 "Serbia"))) :arg1 (b / border-01 :arg1 (p2 / police) :arg2 (o / organization :name (n2 / name :op1 "Agency" :op2 "AP") :arg1-of (h2 / hold-01 :arg0 (c2 / country))) :quant (s / short))) :op2 (m / make-02 :arg0 (p3 / police) :arg1 (r / record :arg1-of (r2 / reverse-01 :arg1-of (p4 / possible-01))) :arg1-of (c3 / cause-01 :arg0 (k / knock-01 :arg0 (d / dog) :arg1 (r3 / refugee) :arg1-of (a2 / allege-01)))))
(a / and :op1 (p / possible-01 :arg1 (r / read-01 :arg0 (s / scientist))) :op2 (w / write-01 :arg0 (s2 / scientist) :arg1 (a2 / activity-06 :arg1 (b / brain))))
(c / contrast-01 :arg1 (f / feed-01 :arg0 (i / i) :arg2 (h / he) :degree (b / bit)) :arg2 (c2 / close-01 :arg0 (i2 / i) :arg1 (d / door) :time (s / soon) :arg1-of (c3 / cause-01 :arg0 (t / think-01 :arg0 (h2 / he) :arg1 (p / play-01 :arg0 (h3 / he) :location (o / outside :op1 (t2 / tiger :mod (h4 / hutch) :mod (r / rabbit))))))))
(s / say-01 :arg0 (c / coach) :arg1 (w / wait-01 :arg1 (w2 / wait-01 :arg2 (s2 / style :mod (a / aggressive)))))
(a / and :op1 (e / express-01 :arg0 (p / person :arg0-of (a2 / address-02 :arg1 (i / issue-02 :arg0 (a3 / address-02 :arg1 (v / violence))))) :arg1 (p2 / person :name (n / name :op1 "George" :op2 "Bush")) :time (a4 / after :op1 (a5 / attack-01 :quant 9-11 :arg0 (t / terrorist))) :mod (a6 / also)) :op2 (r / respond-01 :arg0 (p3 / person) :arg1 (r2 / respond-01 :arg0 (p4 / person :arg0-of (h / have-org-role-91 :arg1 (c / chain :name (n2 / name :op1 (u / uncontrollable))) :arg2 (e2 / event :mod (u2 / uncontrollable)))) :manner (v2 / violent))))
(c / contrast-01 :arg2 (l / latecoere :arg1 (c2 / capacity :mod (p / produce-01)) :location (c3 / country :name (n / name :op1 "Czech" :op2 "Republic"))))
(s / see-01 :arg0 (i / i) :arg1 (t / thing :quant (a / all) :arg1-of (i2 / include-91 :arg2 (g / game :poss (t2 / they)))) :time (t3 / time :mod (t4 / that)))
(a / accident :mod (j / just))
(d / disrupt-01 :arg0 (e / exist-01 :arg1 (t / they)) :arg1 (e2 / exist-01 :arg1 (t2 / they)) :time (o / over :op1 (t3 / time)))
(s / stand-01 :arg1 (o / organization :name (n / name :op1 "Kingfisher")) :arg2 (a / alone :degree (a2 / almost)) :arg1-of (c / cause-01 :arg0 (h / have-03 :arg0 (o2 / organization) :arg1 (b / bias-01 :arg1 (w / woman) :arg2 (w2 / woman :arg2-of (i / include-01 :arg1 (a3 / and :op1 (p / person :arg0-of (h2 / have-org-role-91 :arg2 (e / executive))) :op2 (p2 / person :arg0-of (h3 / have-org-role-91 :arg2 (e2 / executive))))))))))
(s / stand-01 :arg1 (o / organization :name (n / name :op1 "Kingfisher")) :arg2 (a / alone :degree (a2 / almost)) :arg1-of (c / cause-01 :arg0 (h / have-03 :arg0 (o2 / organization) :arg1 (b / bias-01 :arg1 (w / woman) :arg2 (w2 / woman) :arg2-of (i / include-01 :arg1 (a3 / and :op1 (p / person :arg0-of (h2 / have-org-role-91 :arg2 (e / executive))) :op2 (p2 / person :arg0-of (h3 / have-org-role-91 :arg2 (d / director :mod (f / finance))))))))))
(k / keep-01 :arg1 (p / person :location (t / territory)))
(r / recommend-01 :arg1 (s / show-01 :arg0 (a / all) :arg1 (i / information :poss (t / they))) :arg1-of (c / cause-01 :arg0 (e / effort :purpose (f / fail-01 :arg1 (i2 / i) :arg2 (f2 / fail-01 :arg1 (i3 / i) :degree (u / utter))))))
(a / and :op2 (b / be-located-at-91 :arg1 (p / person :name (n / name :op1 "Eva") :mod (a2 / all)) :arg2 (s / swim-01)))
(d / die-01 :arg1 (w / woman :quant 2013) :source (l / location :name (n / name :op1 "Ontario")) :time (a / after :op1 (s / swallowing :arg0 (d2 / device :mod (s2 / sanitation) :arg0-of (c / contain-01 :arg1 (i / ingredient :mod (t / toxic))) :arg0-of (c2 / contain-01 :arg1 (a2 / amphetamine))))))
(e / explain-01 :arg0 (h / he) :arg1 (s / strengthen-01 :arg1 (s2 / sell-01 :arg1 (i / internet)) :time (b / before :op1 (n / now) :quant (t / temporal-quantity :quant (N / N-A) :unit (y / year))) :time (s3 / start-01 :arg0 (c / customer) :arg1 (u / use-01 :arg0 (c2 / customer) :arg1 (p / phone :arg1-of (m / mobile-02) :poss (s4 / sell-01)) :arg2 (p2 / purchase-01 :arg0 (c3 / customer) :arg1 (p3 / phone))))))
(k / kill-01 :arg1 (p / person :quant 4) :time (a / after :op1 (f / fire-01 :arg0 (p2 / policeman) :arg1 (c / cat :mod (r / rubber)) :location (p3 / person :arg0-of (p4 / protest-01) :location (c2 / country :name (n / name :op1 "Nepal"))))))
(a / and :op1 (d / divide-02 :arg1 (c / company :quant 2) :arg2 (c2 / company :quant 2) :time (l / late :op1 (y / year :mod (t / this)) :degree (m / more))) :op2 (q / quote-01 :arg1 (a2 / and :op1 (e / exchange-01 :arg1 (c3 / computer)) :op2 (t2 / trade-01 :arg2 (c4 / computer))) :arg2 (a3 / and :op1 (c5 / computer) :op2 (o / operation :name (n / name :op1 (f / faster-growing) :op2 (f2 / faster-growing) :op3 (p / printers)) :poss (c6 / corporation)))))
(s / split-01 :arg1 (y / year :mod (t / this) :time (l / late :op1 (y2 / year :mod (t2 / this)) :degree (m / more))) :arg2 (c / company :quant 2 :arg1-of (s2 / separate-02) :arg1-of (l2 / list-01 :arg2 (a / and :op1 (e / exchange-01 :arg1 (s3 / stock)) :op2 (t3 / trade-01 :arg1 (c2 / computer) :location (a2 / and :op1 (c3 / computer) :op2 (o / operation :mod (s4 / service) :mod (s5 / service) :poss (c4 / corporation)) :poss (c5 / corporation)))))))
(a / accident :time (a2 / accident) :location (m / middle :part-of (a3 / and :op1 (w / wind :arg1-of (s / strong-02)) :op2 (r / rain-01)) :time (b / before :op1 (n / now) :quant (f / few :op1 (t / temporal-quantity :quant (N / N-A) :unit (d / day)) :mod (j / just)))) :arg1-of (c / cause-01 :arg0 (o / obligate-01 :arg1 (p / person :quant (f2 / few :op1 (t2 / temporal-quantity :quant (N2 / N-A) :unit (d2 / day)))) :arg2 (p2 / person :mod (c2 / country :name (n2 / name :op1 "UK")) :mod (g / good :mod (e / every)) :mod (g2 / good :mod (e2 / every))))))
(s / suitable-04 :arg1 (i / it) :arg2 (a / and :op1 (f / frying) :op2 (g / grilling)) :mod (a2 / also) :arg1-of (c / cause-01 :arg0 (h / have-03 :arg0 (i2 / it) :arg1 (d / degree :quant (d2 / degree :arg1-of (h2 / high-02))))))
(c / claim-01 :arg0 (o / organization :name (n / name :op1 "Blackstone")) :arg1 (r / recommend-01 :arg1 (b / begin-01 :arg0 (a / and :op1 (p / person) :op2 (d / doctor :poss (a2 / and))) :arg1 (t / take-01 :arg0 (a3 / and) :arg1 (w / weight) :manner (s / serious)) :time (a4 / after :op1 (d2 / drop-01 :arg1 (b2 / bmi :quant 27))))) :mod (a5 / also))
(r / remain-01 :arg1 (l / line) :arg3 (p / percentage-entity :value (N / N-A) :arg3-of (i / include-91 :arg2 (s / sell-01 :arg1-of (p2 / plan-01) :arg1-of (p3 / plan-01)))))
(s / say-01 :arg0 (s2 / she) :arg1 (g / get-03 :arg1 (h / he) :arg2 (g2 / get-01 :arg0 (h2 / he) :arg1 (i / it))) :arg1-of (s3 / say-01 :arg0 (s4 / she)))
(c / construct-01 :arg1 (s / stem) :mod (c2 / controversy))
(n / need-01 :arg0 (w / we) :arg1 (l / limit-01 :arg0 (w2 / we) :arg1 (u / use-01 :arg1 (f / force-04))))
(p / play-02 :arg0 (h / he) :arg1 (g / game :mod (l / league) :quant (m / multiple :op1 65)) :mod (o / only) :time (b / before :op1 (n / now) :duration (t / temporal-quantity :quant (N / N-A) :unit (y / year))))
(t / test :arg1 (t2 / television :name (n / name :op1 (c / czech) :op2 (t3 / television) :op3 (t4 / television) :op4 (t5 / television) :op5 (t6 / television) :op6 (t7 / television) :op7 (t8 / television))))
(c / come-01 :arg1 (o / organization :name (n / name :op1 "SPRS") :mod (s / society :mod (b / brazilian))) :purpose (t / try-01 :arg0 (o2 / organization) :arg1 (r / regain-01 :arg0 (o3 / organization) :arg1 (k / knowledge :topic (i / importance :domain (f / feed-01 :arg0 (w / woman) :arg2 (i2 / image :mod (f2 / food :arg1 (f3 / food :mod (j / junk)) :arg1-of (b2 / breast)))))))) :manner (s2 / shock-01))
(b / beside :arg0 (f / few :op1 (t / temporal-quantity :quant (N / N-A) :unit (m / month)) :mod (o / only)) :arg1 (l / line :purpose (a / assembly :arg0-of (o2 / organize-01 :arg1 (d / door) :arg4 (d2 / decker :mod (u / upper) :part-of (s / strait)) :arg1-of (c / complete-02)))))
(r / report)
(p / possible-01 :arg1 (i / incurred :arg0 (d / department :mod (n / new) :mod (c / country :name (n2 / name :op1 "N-A"))) :arg1 (d2 / department :mod (n3 / new) :mod (c2 / country :name (n4 / name :op1 "N-A")))))
(g / gap :location (s / sunrise) :time (t / today) :time (m / month :mod (r / recent)))
(a / and :op1 (o / operate-01 :arg1 (p / person :arg0-of (h / have-rel-role-91 :arg2 (p2 / patient))) :arg1-of (c / complete-02)) :op2 (o2 / operate-01 :arg1 (c2 / case :quant 28) :arg1-of (c3 / complete-02)))
(a / and :op1 (l / let-01 :mode (i / imperative) :arg0 (y / you) :arg1 (s / sleep-01 :arg0 (t / they) :duration (m / multiple :op1 (t2 / temporal-quantity :quant (N / N-A) :unit (h / hour)))) :time (d / date-entity :time (8 / 8:00))) :op2 (a2 / and :op1 (s2 / set-up-03 :mode (i2 / imperative) :arg0 (y2 / you) :arg1 (m2 / music :poss (h2 / he))) :op2 (l2 / locked :arg0 (t3 / they) :arg1 (d2 / door)) :op3 (w / went :arg0 (h3 / he) :arg1 (d3 / door)) :op4 (g / go-02 :arg0 (h4 / he) :arg4 (e / exam :mod (t4 / three-hour))) :time (t5 / then)))
(e / enable-01 :arg0 (a / activity-06 :mod (m / mold) :mod (t / this)) :arg1 (c / compete-02 :arg0 (w / we) :arg1 (m2 / monetary-quantity :arg1-of (e2 / expend-01 :arg0 (w2 / we) :arg2 (e3 / enterprise :mod (n / new) :mod (o / organization :name (n2 / name :op1 "Hewlett" :op2 "Packard"))) :arg1-of (p / possible-01 :polarity -))) :degree (m3 / more)) :arg2 (a2 / and :op1 (p2 / person :name (n3 / name :op1 "MEG" :op2 "Whitman") :arg0-of (h / have-org-role-91 :arg2 (d / director :mod (g / general)))) :op2 (p3 / person :arg0-of (h2 / have-org-role-91 :arg2 (d2 / director :mod (g2 / general)))) :op3 (p4 / person :arg0-of (h3 / have-org-role-91 :arg1 (o2 / organization) :arg2 (c2 / chairman))) :op4 (b / board :arg0-of (h4 / have-org-role-91 :arg1 (o3 / organization) :arg2 (c3 / chairman)) :arg0-of (h5 / have-org-role-91 :arg1 (o4 / organization) :arg2 (c4 / chairman)) :arg0-of (h6 / have-org-role-91 :arg1 (o5 / organization) :arg2 (c5 / chairman)) :arg0-of (h7 / have-org-role-91 :arg1 (o6 / organization) :arg2 (c6 / chairman)) :arg0-of (h8 / have-org-role-91 :arg1 (o7 / organization) :arg2 (c7 / chairman)) :arg0-of (h9 / have-org-role-91 :arg1 (o8 / organization) :arg2 (c8 / chairman)) :arg0-of (h10 / have-org-role-91 :arg1 (o9 / organization) :arg2 (c9 / chairman)))))
(p / person :arg0-of (i / immigrate-01) :quant (a / about :op1 1500000) :location (c / continent :name (n / name :op1 "Europe")))
(r / refer-01 :arg0 (o / organization :name (n / name :op1 "Costco") :mod (c / country :name (n2 / name :op1 "N-A"))) :arg1 (m / market :name (n3 / name :op1 (w / wholesale)) :arg1-of (s / sell-01 :arg2 (p / public) :mod (a / also))) :arg2 (o2 / organization :name (n4 / name :op1 "Costco") :mod (c2 / country :name (n5 / name :op1 "N-A"))) :frequency (o3 / often))
(s / say-01 :arg0 (w / we) :arg1 (o / operate-01 :arg1 (a / and :op1 (s2 / spots :arg1-of (h / hot-05)) :op2 (p / protect-01 :arg1 (b / border)) :op3 (o2 / operation :mod (m / military)))))
(a / and :op1 (r / remain-01 :arg1 (d / door :prep-to (c / country :arg0-of (p / produce-01 :arg1 (c2 / country :name (n / name :op1 "N-A"))))) :arg3 (g / gaga :mod (j / just))) :op2 (d2 / deliver-01 :polarity - :arg0 (p2 / person :quant 1999) :arg1 (i / industry :mod (o / organization :name (n2 / name :op1 "Prague" :op2 "Conference" :op3 "international" :op4 "Association") :mod (n3 / na))) :location (l / latecoere)))
(l / love-01 :arg0 (i / i) :arg1 (g / girl :mod (b / both)) :mod (a / anyway) :location (b2 / between :op1 (l2 / location :name (n / name :op1 "Snezen")) :op2 (p / person :name (n2 / name :op1 "Lana"))))
(s / say-01 :arg1 (a / and :op1 (w / write-01 :arg0 (p / person :arg0-of (h / have-rel-role-91 :arg1 (h2 / he) :arg2 (d / daughter))) :arg1 (m / music :poss (p2 / person))) :op2 (s2 / sing-01 :arg0 (p3 / person) :arg1 (m2 / music :poss (p4 / person)))) :arg2 (p5 / person :name (n / name :op1 "N-A")))
(m / multi-sentence :snt1 (w / want-01 :arg0 (p / person :arg0-of (w2 / want-01 :arg1 (w3 / wear-01 :arg0 (p2 / person) :arg1 (c / country :name (n / name :op1 "Britain") :mod (n2 / nezahled?nou) :location (c2 / continent :name (n3 / name :op1 "Europe")))) :arg0-of (h / have-rel-role-91 :arg1 (i / i) :arg2 (f / friend)))) :arg1 (a / and :op1 (p3 / person :arg0-of (h2 / have-org-role-91 :arg1 (c3 / country) :arg2 (m2 / minister :mod (s / short-sighted)))) :op2 (p4 / person :arg0-of (h3 / have-org-role-91 :arg1 (c4 / country) :arg2 (o / official)))) :arg0-of (s2 / suggest-01 :arg1 (s3 / suggest-01 :arg0 (p5 / person) :arg1 (g / get-05 :arg1 (a2 / and :op1 (p6 / person :arg0-of (h4 / have-org-role-91 :arg1 (c5 / country) :arg2 (m3 / minister))) :op2 (p7 / person :arg0-of (h5 / have-org-role-91 :arg2 (o2 / official))) :location (c6 / city :arg1-of (m4 / major-02) :quant (s4 / some))) :arg2 (p8 / point :location-of (g2 / get-05 :arg1 (a3 / and) :arg2 (m5 / matter))))))) :snt2 (s5 / suggest-01 :arg0 (i2 / i) :arg1 (s6 / suggest-01 :arg0 (p9 / person) :arg1 (g3 / get-05 :arg1 (a4 / and :op1 (p10 / person :arg0-of (h6 / have-org-role-91 :arg1 (c7 / country) :arg2 (m6 / minister))) :op2 (p11 / person :arg0-of (h7 / have-org-role-91 :arg2 (o3 / official))) :location (c8 / city :arg1-of (m7 / major-02) :quant (s7 / some))) :arg2 (p12 / point)))))
(a / and :op1 (a2 / accuse-01 :arg0 (p / person :name (n / name :op1 "Peter" :op2 "Moody")) :arg1 (p2 / person :name (n2 / name :op1 "Racing" :op2 "Victoria") :arg0-of (h / have-org-role-91 :arg2 (o / organiser))) :arg2 (t / try-01 :arg0 (p3 / person) :arg1 (g / get-01 :arg0 (p4 / person) :arg1 (m / moles :arg1-of (s / stable-03)) :time (y / year :mod (l / last))))) :op2 (t2 / threaten-01 :arg0 (p5 / person) :arg1 (e / end-01 :arg1 (e2 / end-01 :arg1 (r / racing))) :time (i / immediate)))
(c / contrast-01 :arg2 (i / increase-01 :arg0 (t / this) :arg1 (r / risk-01 :arg1 (i2 / increase-01 :arg0 (s / spaceship :name (n / name :op1 "N-A") :arg0-of (m / mine-01)) :arg1 (m2 / monetary-quantity :arg1-of (p / pay-01) :arg1-of (p2 / pay-01 :arg3 (c2 / compensate-01) :purpose (r2 / reduce-01 :arg0 (s2 / spaceship) :arg1 (e / expend-01 :arg0 (s3 / spaceship) :mod (o / operate-01)))))) :arg1-of (m3 / mean-01 :arg2 (r3 / reduce-01 :arg1 (r4 / reduce-01 :arg1 (n2 / number :quant-of (p3 / person :arg1-of (e2 / employ-01))))) :mod (e3 / essential))) :mod (r5 / really)))
(a / admit-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg2 (p2 / professor))) :arg1 (s / shoot-02 :arg0 (p3 / person) :arg1 (p4 / person :arg0-of (h2 / have-rel-role-91 :arg1 (h3 / he) :arg2 (g / girlfriend)))) :time (c / call-02 :mod (e / emergency)))
(b / back-01 :arg0 (o / organization :name (n / name :op1 "Chiefs")) :arg1 (v / version :poss (g / government-organization :name (n2 / name :op1 "Senate")) :topic (l / law)))
(i / include-91 :arg1 (a / and :op1 (p / person :arg0-of (h / have-rel-role-91 :arg1 (p2 / person :quant 4) :arg2 (c / child))) :op2 (p3 / person :arg0-of (h2 / have-rel-role-91 :arg1 (p4 / person) :arg2 (c2 / child))) :op3 (p5 / person :arg0-of (h3 / have-rel-role-91 :arg1 (p6 / person) :arg2 (c3 / child))) :op4 (p7 / person :arg0-of (h4 / have-rel-role-91 :arg1 (p8 / person) :arg2 (c4 / child))) :op5 (p9 / person :arg0-of (h5 / have-rel-role-91 :arg1 (p10 / person) :arg2 (c5 / child))) :time (c6 / collapse-01 :arg1 (c7 / crane))) :arg2 (d / die-01))
(c / contrast-01 :arg2 (s / surprise-01 :arg0 (a / affair :mod (y / year :mod (l / last)) :arg1-of (w / worry-01 :arg0 (o / organization :name (n / name :op1 "Apple")) :degree (g / great))) :arg1 (i / it)))
(c / contrast-01 :arg1 (p / promise-01 :arg0 (p2 / person :arg0-of (h / have-org-role-91 :arg1 (o / organization :name (n / name :op1 "Commission") :poss (p3 / person)) :arg2 (o2 / organization :name (n2 / name :op1 "Commission")))) :arg1 (i / introduce-02 :arg0 (p4 / person) :arg1 (p5 / place)) :time (a / as-soon-as :op1 (p6 / possible-01 :arg1 (i2 / introduce-02)))) :arg2 (m / mention-01 :polarity - :arg0 (p7 / person) :arg1 (o3 / or :op1 (n3 / number) :op2 (d / date))))
(p / possible-01 :arg1 (s / scare-01 :arg0 (t / turbulence :time (r / recent) :location (m / market :mod (f / finance) :poss (w / world))) :arg1 (g / government-organization :name (n / name :op1 "Fed") :mod (w2 / wary)) :purpose (a / add-02 :arg0 (g2 / government-organization) :arg1 (g3 / government-organization) :arg2 (a2 / and :op1 (r2 / raise-01 :arg0 (g4 / government-organization) :arg1 (r3 / rate :arg1-of (f2 / fund-01 :arg0 (f3 / federal)) :mod (f4 / federal))) :op2 (m2 / more-than :op1 (p2 / percentage-entity :value (N / N-A) :mod (j / just)) :arg1-of (i / include-91 :arg2 (p3 / point :mod (p4 / percentage-entity :value (N2 / N-A))))))) :time (a3 / already)) :concession (s2 / show-01 :arg0 (d / data :arg1-of (i2 / include-91 :arg2 (d2 / data) :arg3 (m3 / most))) :arg1 (e / economy)))
(a / and :op1 (t / turn-02 :arg1 (p / person :arg1-of (a2 / average-03)) :arg2 (c / computer :poss (p2 / person))) :op2 (d / drop-05 :arg0 (p3 / person) :arg1 (w / website :mod (w2 / website :quant (s / several)))) :time (y / year :mod (l / last)))
(o / obligate-01 :arg2 (h / have-03 :arg0 (c / company) :arg1 (a / and :op1 (c2 / certificates :mod (q / quality)) :op2 (c3 / certification :arg1 (a2 / and :op1 (p / process-01 :arg1 (p2 / produce-01 :quant 170 :arg1-of (s / special-02))) :op2 (c4 / card :mod (q2 / qualification))) :beneficiary (p3 / person :arg1-of (e / employ-01) :arg1-of (k / key-02))))))
(s / say-01 :arg0 (p / person :name (n / name :op1 "Gyorgy" :op2 "Bakondi") :arg0-of (h / have-org-role-91 :arg1 (p2 / person :name (n2 / name :op1 "Orban") :mod (d / domestic)) :arg2 (d2 / defend-01 :mod (d3 / domestic)))) :arg1 (s2 / seize-01 :arg0 (a / authority) :arg1 (p3 / person :quant 45 :arg0-of (t / try-01 :arg1 (c / cross-02 :arg0 (p4 / person) :arg1 (b / border))) :arg0-of (s3 / seize-01 :arg1 (b2 / border) :time (a2 / already) :location (c2 / country)))))
(a / affect-01 :arg0 (c / change-01 :arg1 (w / winds)) :arg1 (m / more :compared-to (g / government-organization :name (n / name :op1 "Parliament") :mod (j / just))) :time (m2 / morning :mod (t / this)))
(s / say-01 :arg0 (o / organization :name (n / name :op1 "Institute" :op2 "of" :op3 "Health" :op4 "Information" :op5 "and" :op6 "Statistics") :arg1-of (i / include-91 :arg2 (p / person :arg0-of (h / have-org-role-91 :arg1 (c / country :name (n2 / name :op1 "Czech" :op2 "Republic")))))) :arg1 (c2 / cause-01 :arg0 (c3 / common :mod (c4 / common :degree (m / most)) :arg1-of (d / die-01 :duration (s2 / several :op1 (t / temporal-quantity :quant (N / N-A) :unit (y / year))))) :arg1 (t2 / this)))
(a / and :op1 (f / factor :quant (x / x)) :op2 (p / person :arg0-of (v / view-01)) :op3 (p2 / person :arg0-of (v2 / view-01)) :op4 (p3 / person :arg0-of (v3 / view-01)) :op5 (p4 / person :arg0-of (v4 / view-01)))
(a / and :op1 (t / think-01 :arg0 (i / i) :arg1 (a2 / and :op1 (c / compete-02 :arg0 (w / we) :degree (w2 / well)) :op2 (s / show-01 :arg0 (r / round :mod (q / qualifying)) :arg1 (a3 / and :op1 (c2 / compete-02 :arg0 (w3 / we) :mod (d / domestic)) :op2 (s2 / show-01 :arg0 (r2 / round :mod (q2 / qualifying)) :arg1 (s3 / strong-02 :arg1 (w4 / we) :location (s4 / stadium :poss (w5 / we)))))))) :op2 (s5 / say-01 :arg0 (i2 / i) :arg1 (c3 / coach :arg1-of (l / lose-02 :arg0 (c4 / coach :arg1-of (l2 / lose-02 :arg0 (t2 / team) :time (s6 / season :mod (t3 / this))))) :arg0-of (c5 / cause-01 :arg1 (o / opening :arg0 (t4 / team) :time (s7 / season :mod (t5 / this)))))))
(o / order-02 :arg0 (p / person :name (n / name :op1 "Dominantu")) :arg1 (o2 / order) :time (y / year :mod (t / this)))
(a / and :op1 (d / decide-01 :arg0 (p / person :arg0-of (h / have-rel-role-91 :arg1 (i / i) :arg2 (g / grandfather))) :arg1 (l / live-01 :arg0 (p2 / person :arg0-of (h2 / have-rel-role-91 :arg1 (i2 / i) :arg2 (g2 / grandfather))))) :op2 (a2 / age-01 :arg1 (p3 / person) :arg2 (t / temporal-quantity :quant (N / N-A) :unit (y / year))) :op3 (f / funeral))
(a / and :op2 (i / important :degree (m / most) :domain (p / person :arg0-of (h / have-org-role-91 :arg2 (p2 / president)))))
(w / want-01 :arg0 (o / organization :name (n / name :op1 "EU")) :arg1 (h / help-01 :arg0 (o2 / organization) :arg1 (e / expand-01 :arg0 (c / country :name (n2 / name :op1 "Greece")) :arg1 (c2 / capacity :poss (c3 / country)) :purpose (a / and :op1 (e2 / expand-01 :arg1 (s / seeker :mod (j / jihad))) :op2 (s2 / strengthen-01 :arg1 (o3 / oversight :arg1 (i / island)))))))
(w / want-01 :arg0 (o / organization :name (n / name :op1 "EU")) :arg1 (h / help-01 :arg0 (o2 / organization) :arg1 (e / expand-01 :arg0 (c / country :name (n2 / name :op1 "Greece")) :arg1 (c2 / capacity :poss (c3 / country)) :purpose (a / and :op1 (e2 / expand-01 :arg1 (s / seekers :mod (j / jihad))) :op2 (s2 / strengthen-01 :arg1 (s3 / supervise-01 :arg1 (i / island)))))))
(i / it :mod (d / decent) :domain (y / you) :mod (o / of-course))
(s / say-01 :arg0 (g / government-organization :arg0-of (g2 / govern-01)) :arg1 (c / cause-01 :arg0 (c2 / change-01 :arg0 (g3 / government-organization) :arg1 (a / alia :mod (i / inter))) :arg1 (r / react-01 :arg0 (g4 / government-organization) :arg2 (s2 / situation :time (c3 / current) :mod (e / economy)))))
(g / go-02 :arg0 (p / person :name (n / name :op1 "Berg")) :arg4 (c / country :name (n2 / name :op1 "Hungary")) :purpose (v / view-02 :arg0 (p2 / person) :arg1 (b / bring-01 :arg0 (p3 / person) :arg1 (a / aid-01 :mod (h / humanitarian)) :arg2 (r / refugee))))
(s / say-01 :arg1 (t / trend-01 :arg1 (t2 / trend-01 :arg2 (a / assembly :arg0-of (h / have-org-role-91 :arg2 (h2 / head-of-state))))) :arg2 (p / person :name (n / name :op1 "Dubský")))
(g / gain-02 :arg0 (p / person :name (n / name :op1 "Byron" :op2 "Buxton") :arg0-of (h / have-org-role-91 :arg2 (g2 / governor :mod (v / vice)))) :arg1 (s / shift-01 :arg2 (p2 / point :quant 2 :location (s2 / side :mod (l / left) :part-of (f / field)))))
(c / contain-01 :arg0 (t / thing :arg1-of (d / decide-01 :arg3 (t2 / territory)) :arg1-of (q / question-01)) :arg1 (a / and :op1 (d2 / distance-01 :arg1 (l / land :mod (t3 / type)) :arg2 (b / building :mod (a2 / adjacent)) :arg1-of (c2 / clear-06) :arg1-of (c3 / clear-06)) :op2 (d3 / describe-01 :arg1 (d4 / distance-01 :arg1 (t4 / territory :arg1-of (c4 / concern-01 :arg0 (c5 / construct-01))) :arg2 (s / shape :poss (t5 / territory :arg1-of (c6 / concern-01 :arg0 (c7 / construct-01))))) :arg1-of (c8 / cause-01 :arg0 (d5 / decide-01 :arg0 (c9 / construct-01 :arg1 (c10 / construct-01)))))))
(d / decide-01 :arg0 (t / they) :arg1 (t2 / thing :arg2-of (s / solve-01 :arg1 (t3 / thing :arg2-of (s2 / solve-01 :time (u / until :op1 (d2 / date-entity :time (t4 / then))))))) :li 1910)
(a / and :op2 (o / obligate-01 :arg2 (r / remember-01 :arg0 (y / you)) :arg1-of (c / cause-01 :arg0 (d / depend-01 :arg0 (w / work-01 :arg0 (t / they)) :arg1 (o2 / outcome :poss (p / person))))))
(p / probable :time (b / before :op1 (n / now) :quant (t / temporal-quantity :quant (N / N-A) :unit (w / week))) :mod (p2 / probable) :time (g / get-05 :arg1 (t2 / they) :arg2 (m / match-03 :mod (b2 / big))) :mod (p3 / probable))
(d / do-02 :arg0 (w / we) :arg1 (o / or :op1 (p / part :mod (s / small)) :op2 (c / component)) :arg1-of (p2 / possible-01))
(c / contrast-01 :arg2 (d / describe-01 :polarity - :arg1 (t / thing :arg1-of (l / link-01) :mod (t2 / this) :quant (n / none)) :arg2 (t3 / thing :arg1-of (r / report-01))))
(c / cause-01 :arg0 (r / replace-01 :arg0 (i / it) :arg1 (b / building :arg1-of (m / modern-02) :arg1-of (l / link-01 :arg2 (i2 / income)))) :arg1 (f / few :op1 (t / temporal-quantity :quant (N / N-A) :unit (y / year))))
(m / multi-sentence :snt1 (a / and :op1 (s / sit-01 :arg1 (w / we) :arg2 (t / theater)) :op2 (w2 / wait-01 :arg1 (w3 / we) :arg2 (a2 / arrive-01 :arg1 (w4 / we) :arg4 (f / family :mod (r / royal)))) :time (r2 / realize-01 :arg0 (i / i) :arg1 (r3 / regret-01 :arg1 (s2 / seat-01 :prep-to (f2 / family :mod (r4 / royal))))) :time (r5 / realize-01 :arg0 (i2 / i) :arg1 (a3 / and :op1 (e / empty-02 :arg1 (s3 / seat-01 :prep-to (i3 / i))) :op2 (r6 / realize-01 :arg0 (i4 / i) :arg1 (s4 / sit-01 :arg1 (p / person :name (n / name :op1 "Diana") :arg0-of (h / have-org-role-91 :arg2 (s5 / senator))) :arg2 (p2 / person :arg0-of (h2 / have-org-role-91 :arg2 (s6 / senator)))))))) :snt2 (' / '' :mode (e2 / expressive)))
(a / and :op1 (v / voices :arg1 (v2 / voices :mod (n / new)) :location (r / room :mod (l / locker))) :op2 (s / say-01 :arg0 (v3 / voices) :arg1 (p / possible-01 :arg1 (a2 / and :op1 (l2 / lighten :arg1 (t / thing)) :op2 (a3 / atmosphere :mod (r2 / refresh)) :frequency (s2 / sometimes)))))
(s / say-01 :arg1 (a / and :op1 (b / build-01 :arg1 (i / intern :poss (w / we)) :time (b2 / before :op1 (n / now) :quant (t / temporal-quantity :quant (N / N-A) :unit (y / year)))) :op2 (b3 / be-located-at-91 :arg1 (h / he) :arg2 (u / under :op1 (l / life :poss (h2 / he))))) :arg2 (p / person :name (n2 / name :op1 "Pavel" :op2 "Calábek")) :time (b4 / before :op1 (n3 / now) :quant (t2 / temporal-quantity :quant (N2 / N-A) :unit (y2 / year))))
(s / surprise-01 :arg0 (n / number :quant-of (h / hanging-07 :mod (l / little) :source (s2 / surroundings :poss (s3 / she)))) :arg1 (w / we) :time (t / think-01 :arg0 (w2 / we) :arg1 (i / it)))
(m / multi-sentence :snt1 (c / contrast-01 :arg1 (t / think-01 :arg0 (p / person :quant 44) :arg1 (h / have-03 :arg0 (p2 / personality) :arg1 (p3 / personality) :arg1-of (e / effective-04))) :arg2 (t2 / think-01 :arg0 (p4 / person :quant (p5 / percentage-entity :value 44)) :arg1 (p6 / personality) :arg1-of (e2 / effective-04))) :snt2 (s / say-01 :arg0 (p7 / person :arg0-of (h2 / have-org-role-91 :arg1 (p8 / publication :name (n / name :op1 "ABC")))) :arg1 (b / belong-01 :polarity - :arg0 (t3 / temperament :poss (p9 / person)) :arg1 (g / government-organization :name (n2 / name :op1 "White" :op2 "House")))))
(p / possible-01 :arg1 (i / immerse :arg0 (h / he) :arg1 (h2 / he) :arg0-of (c / cause-01 :arg1 (f / find-01 :arg1 (c2 / create-01) :time (a / always) :arg1-of (s / stunning)))))
(c / contrast-01 :arg1 (d / discover-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg2 (s / scientist))) :arg1 (c2 / contrast-01 :arg1 (d2 / discover-01 :arg0 (s2 / scientist) :time (b / before :op1 (n / now) :quant (a / about :op1 (t / temporal-quantity :quant (N / N-A) :unit (y / year))))) :arg2 (d3 / discover-01 :arg0 (p2 / person :arg0-of (h2 / have-org-role-91 :arg2 (s3 / scientist)))))) :arg2 (r / resemble-01 :arg1 (s4 / something :mod (m / much :degree (v / very))) :arg2 (r2 / remnant :mod (b2 / breakfast))))
(s / say-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg2 (m / member) :time (f / former)) :arg0-of (h2 / have-org-role-91 :arg2 (m2 / member) :time (f2 / former)) :arg0-of (h3 / have-org-role-91 :arg2 (m3 / member) :time (f3 / former)) :arg0-of (h4 / have-org-role-91 :arg2 (m4 / member) :time (f4 / former)) :arg0-of (h5 / have-org-role-91 :arg2 (m5 / member) :time (f5 / former)) :arg0-of (h6 / have-org-role-91 :arg2 (m6 / member) :time (f6 / former)) :arg0-of (h7 / have-org-role-91 :arg2 (m7 / member) :time (f7 / former)) :arg0-of (h8 / have-org-role-91 :arg2 (m8 / member) :time (f8 / former)) :arg0-of (h9 / have-org-role-91 :arg2 (m9 / member) :time (f9 / former)) :arg0-of (h10 / have-org-role-91 :arg2 (m10 / member) :time (f10 / former)) :arg0-of (h11 / have-org-role-91 :arg2 (m11 / member) :time (f11 / former)) :arg0-of (h12 / have-org-role-91 :arg2 (m12 / member) :time (f12 / former)) :arg0-of (h13 / have-org-role-91 :arg2 (m13 / member) :time (f13 / former)) :arg0-of (h14 / have-org-role-91 :arg2 (m14 / member) :time (f14 / former)) :arg0-of (h15 / have-org-role-91 :arg2 (m15 / member))) :arg1 (o / organize-01 :arg0 (c / citizen :arg1-of (a / average-03)) :arg1 (o2 / organize-01 :arg1 (p2 / property))))
(a / and :op1 (w / warn-01 :arg0 (p / person :name (n / name :op1 "John") :arg0-of (h / have-org-role-91 :arg2 (p2 / provisions))) :arg1 (- / -rrb- :arg0 (p3 / person) :arg1 (p4 / position-02 :arg0 (w2 / work-01 :arg0 (o / office :mod (t / travel-01))) :arg2 (c / compete-02)))) :op2 (p5 / person :name (n2 / name :op1 "Peter") :arg0-of (s / speak-01 :arg1 (s2 / step-01 :arg1 (p6 / person) :arg2 (a2 / agency :mod (t2 / travel-01))))) :mod (a3 / also))
(s / speak-01 :arg0 (p / person :location (h / here)) :mod (o / only) :topic (r / return-01 :arg1 (p2 / person)))
(c / cause-01 :arg0 (s / save-02 :arg0 (p / person :name (n / name :op1 "Héctor" :op2 "Moreno")) :arg1 (s2 / save-02 :arg0 (p2 / person) :arg1 (a / area :mod (o / organization :name (n2 / name :op1 "PSV"))))) :arg1 (i / injure-01))
(c / come-01 :arg1 (t / thing :arg1-of (s / symbolize-01 :arg2 (c2 / community))) :arg4 (l / life))
(s / say-01 :arg0 (p / person :name (n / name :op1 "Laura") :arg1-of (i / include-91 :arg2 (w / woman :quant 1 :arg1-of (i2 / include-91 :arg2 (w2 / woman :arg0-of (l / lead-01) :arg0-of (l2 / lead-01)))) :arg3 (i3 / include-91 :arg1 (w3 / woman) :arg2 (w4 / woman :quant 5 :arg1-of (i4 / include-91 :arg2 (w5 / woman :arg0-of (l3 / lead-01) :arg0-of (l4 / lead-01))))))) :arg1 (p2 / p?estrukturovala :arg0 (t / team :arg0-of (p3 / peak-01 :arg1 (s2 / she))) :arg1 (t2 / team :arg0-of (p4 / peak-01 :arg1 (b / between :op1 (m / man) :op2 (w6 / woman)))) :mod (a / also) :mod (a2 / also)))
(c / contrast-01 :arg1 (a / approach-02 :arg0 (a2 / and :op1 (c2 / company) :op2 (c3 / company)) :arg1 (a3 / accept-01 :arg0 (c4 / company) :arg1 (p / person :arg0-of (w / work-01) :time (e / eventual)))) :arg2 (p2 / prepare-02 :arg0 (c5 / company) :arg1 (a4 / accept-01 :arg0 (c6 / company) :arg1 (p3 / person :arg0-of (w2 / work-01) :mod (t / temporary)) :purpose (a5 / and :op1 (s / send-03 :arg0 (c7 / company) :arg1 (a6 / and :op1 (s2 / shop) :op2 (s3 / sell-01))) :op2 (d / deliver-01 :arg0 (c8 / company) :arg1 (g / good))))) :time (h / holiday))
(a / affect-01 :arg0 (c / change-01) :arg1 (r / region :quant (a2 / all)) :degree (g / great))
(a / and :op1 (s / say-01 :arg0 (i / i) :arg1 (t / thing :mod (a2 / all) :arg1-of (p / pay-01 :time (a3 / after :op1 (p2 / past)))) :mod (a4 / all)) :op2 (s2 / say-01 :arg0 (i2 / i) :arg1 (o / or :op1 (c / cause-01 :arg0 (t2 / thing :arg1-of (s3 / say-01 :arg0 (p3 / person :name (n / name :op1 "Mládková")))) :arg1 (o2 / outstanding :domain (p4 / person))) :op2 (d / dispute-01 :arg0 (p5 / person) :arg2 (t3 / thing :arg2-of (o3 / obligate-01 :arg1 (r / remark-01 :arg0 (c2 / country))) :arg1-of (r2 / relate-01))))))
(a / and :op1 (h / have-03 :arg0 (c / city) :arg1 (c2 / contract-02 :arg0 (c3 / city) :arg2 (a2 / administrator))) :op2 (h2 / have-03 :arg0 (c4 / compete-02) :arg1 (c5 / company :mod (d / darothore :mod (o / only)) :arg1-of (c6 / contract-02 :arg2 (c7 / council :mod (c8 / city)) :time (t / then)))) :time (t2 / then))
(a / and :op1 (s / study-01 :arg0 (p / person :arg0-of (h / have-rel-role-91 :arg2 (p2 / praise))) :arg1 (p3 / pr?myslovku)) :op2 (s2 / study-01 :arg0 (p4 / person) :arg1 (p5 / pr?myslovku)) :op3 (w / work-01 :arg0 (p6 / person) :manner (p7 / pr?myslovku)) :op4 (w2 / work-01 :arg0 (p8 / person) :location (u / unit :mod (p9 / piece) :arg1-of (a2 / average-01)) :location (a3 / and :op1 (h2 / hundred) :op2 (p10 / percentage-entity :value (N / N-A)))))
(a / and :op1 (i / issue-01 :arg0 (a2 / and :op1 (g / government-organization :name (n / name :op1 "N-A")) :op2 (p / person :arg0-of (r / reside-01 :arg1 (h / house :mod (n2 / nearby))))) :arg1 (p2 / permit-01 :quant (s / some)) :duration (m / many :op1 (t / temporal-quantity :quant (N / N-A) :unit (y / year))) :time (b / before :op1 (h2 / house :arg1-of (s2 / suppose-02 :arg2 (d / differ-02 :arg1 (p3 / permit-01)))))))
(a / and :op1 (r / rebounded :arg1 (m / market) :time (m2 / month :mod (t / this)) :degree (s / slight)) :op2 (i / include-91 :arg1 (p / percentage-entity :value (N / N-A) :mod (o / only)) :arg2 (t2 / temporal-quantity :quant (N2 / N-A) :unit (y / year)) :arg1-of (p2 / possible-01) :time (n / now)))
(a / and :op1 (s / shoot-02 :arg0 (p / person :name (n / name :op1 "Di" :op2 "Maria")) :arg1 (p2 / person :arg0-of (h / have-org-role-91 :arg1 (o / organization :name (n2 / name :op1 "League")) :arg3 (l / lead-02 :arg0 (p3 / person) :arg1 (o2 / organization :name (n3 / name :op1 "PSG"))))) :time (a2 / after :op1 (d / debut :arg0 (p4 / person) :arg1 (a3 / and :op1 (p5 / person :arg0-of (h2 / have-org-role-91 :arg1 (o3 / organization) :arg3 (l2 / lead-02 :arg0 (p6 / person)))) :op2 (o4 / organization :name (n4 / name :op1 "PSG") :arg0-of (p7 / play-01 :arg1 (o5 / organization)))))) :time (a4 / after :op1 (c / chance-02 :arg0 (p8 / person) :arg1 (c2 / chance-02 :arg0 (p9 / person) :arg1 (w / win-01) :quant (s2 / several)))) :time (a5 / after :op1 (c3 / chance-02 :arg0 (p10 / person) :arg1 (t / title :arg0 (p11 / person) :arg1 (t2 / title :mod (g / gated)) :location (m / minut :quant 61))))))
(r / raise-02 :arg1 (c / capital) :arg2 (m / monetary-quantity :quant 280 :unit (e / euro) :arg2-of (t / total-01)))
(m / manage-01 :arg1 (h / hospital :mod (r / region)))
(o / or :op2 (s / something :mod (e / else)))
(( / ( :( (n / name) :op1 "Luke" :op2 "Shaw")
(s / study-01 :arg0 (w / we) :arg1 (s2 / sniggered :arg1 (w2 / we) :quant (l / lot)) :arg1-of (c / cause-01 :arg0 (w3 / want-01 :arg0 (w4 / we) :arg1 (f / focus-01 :arg0 (w5 / we) :arg2 (g / game :poss (w6 / we)) :arg1-of (a / adapt-01 :arg0 (w7 / we) :arg2 (w8 / workouts) :mod (a2 / also))) :time (t / time :mod (t2 / this)))))
(a / and :op1 (r / record-01 :arg1 (g / grow-01 :arg1-of (l / low-04 :degree (m / more))) :time (m2 / month :mod (l2 / last))) :op2 (b / begin-01 :arg1 (r2 / record :mod (r3 / record))) :li 2000)
(a / and :op1 (b / bad-07 :arg1 (p / problem :topic (n / nnejnov?j?ího) :mod (t / this)) :degree (t2 / too)) :op2 (a2 / and :op1 (e / end-01 :arg0 (p2 / person :name (n2 / name :op1 "Wilshere")) :time (s / season :mod (l / last)) :time (a3 / after :op1 (i / injure-01 :mod (a4 / ankle)))) :op2 (g / get-05 :arg1 (p3 / person) :arg2 (f / form :time (f2 / former)) :time (d / date-entity :time (p4 / p?edsezóny)))))
(a / and :op1 (c / contrast-01 :arg1 (a2 / and :op1 (l / leave-15 :arg0 (t / this) :arg1 (p / person :arg0-of (i / injure-01) :mod (t2 / this) :arg0-of (i2 / injure-01))) :op2 (k / knock-01 :arg0 (p2 / person) :arg1 (h / he) :duration (a3 / at-least :op1 (t3 / temporal-quantity :quant (N / N-A) :unit (m / month) :mod (a4 / at-least))))) :op2 (a5 / and :op1 (r / remain-01 :arg1 (p3 / person) :arg3 (p4 / positive) :duration (a6 / at-least :op1 (t4 / temporal-quantity :quant (N2 / N-A) :unit (m2 / month)))) :op2 (k2 / knock-01 :arg0 (p5 / person) :arg1 (p6 / person) :duration (a7 / at-least :op1 (t5 / temporal-quantity :quant (N3 / N-A) :unit (m3 / month))))) :op3 (t6 / think-01 :arg0 (p7 / person) :arg1 (p8 / possible-01 :arg1 (p9 / play-01 :arg0 (p10 / person :name (n / name :op1 "Shaw")) :mod (a8 / again) :time (e / end-01 :arg1 (s / season)))))))
(c / contrast-01 :arg1 (a / and :op1 (l / leave-15 :arg0 (p / person :arg0-of (l2 / left-back) :mod (t / this)) :arg1 (w / wound-01 :arg1 (p2 / person))) :op2 (k / knock-01 :arg0 (p3 / person) :arg1 (h / he) :duration (a2 / at-least :op1 (t2 / temporal-quantity :quant (N / N-A) :unit (m / month) :mod (a3 / at-least))))) :arg2 (a4 / and :op1 (r / remain-01 :arg1 (p4 / person :name (n / name :op1 "Louis" :op2 "van" :op3 "Gaal")) :arg3 (p5 / positive)) :op2 (t3 / think-01 :arg0 (p6 / person) :arg1 (p7 / possible-01 :arg1 (p8 / play-11 :arg0 (p9 / person :name (n2 / name :op1 "Shaw")) :mod (a5 / again) :time (e / end-01 :arg1 (s / season)))))))
(l / leave-14 :mode (i / imperative) :arg0 (y / you) :arg1 (i2 / it) :arg2 (i3 / i))
(t / tell-01 :arg0 (p / person :name (n / name :op1 "Mr" :op2 "Corbyna") :arg0-of (h / have-org-role-91 :arg1 (c / cabinet :mod (b / bankrupt-01)) :arg2 (m / member))) :arg1 (p2 / person :name (n2 / name :op1 "Owen" :op2 "Smith") :arg0-of (h2 / have-org-role-91 :arg1 (c2 / cabinet :poss (o / organization :name (n3 / name :op1 "BBC" :op2 "Two"))) :arg2 (m2 / member))) :arg2 (p3 / programme :arg0 (p4 / person) :arg1 (a / and :op1 (p5 / person :arg0-of (l / lead-02 :arg1 (c3 / country))) :op2 (p6 / person :arg0-of (h3 / have-org-role-91 :arg1 (o2 / organization) :arg2 (m3 / member))) :op3 (p7 / person :arg0-of (h4 / have-org-role-91 :arg1 (o3 / organization) :arg2 (m4 / member))) :op4 (p8 / person :arg0-of (h5 / have-org-role-91 :arg1 (o4 / organization) :arg2 (m5 / member))) :op5 (p9 / person :arg0-of (h6 / have-org-role-91 :arg1 (o5 / organization) :arg2 (m6 / member)))) :arg0-of (c4 / cause-01 :arg1 (r / recommend-01 :arg1 (a2 / abolished :arg1 (m7 / monarchy))))))
(b / be-located-at-91 :arg1 (h / he) :arg2 (p / prison) :time (n / now))
(c / call-03 :arg1 (o / open-01 :arg1 (e / economy)) :arg2 (w / world :arg1-of (b / base-01 :location (w2 / world))))
(s / study-01 :arg0 (p / person :name (n / name :op1 "Andrew" :op2 "Sokol") :arg1-of (d / direct-01 :arg0 (p2 / person) :mod (o / original))) :arg1 (p3 / person :name (n2 / name :op1 "Monika" :op2 "Absolonová")) :mod (o2 / original))
(p / possible-01 :arg1 (r / return-02 :arg1 (p2 / property) :arg2 (p3 / property)) :time (a / after :op1 (m / multiple :op1 1989)) :arg1-of (c / cause-01 :arg0 (t / turn-02 :arg1 (c2 / claim-01 :arg0 (s / state) :arg1 (d / damage-01 :arg1 (r2 / rehabilitation :mod (o / out-of-court)))) :arg2 (s2 / state))))
(h / hit-01 :arg0 (w / wall :arg1-of (s / seduced :arg0 (v / voices :mod (s2 / siren)))) :arg1 (w2 / wall :mod (r / reality)) :arg2 (w3 / want-01 :arg0 (p / person :name (n / name :op1 "Merkel")) :arg1 (a / and :op1 (s3 / see-01 :arg0 (p2 / person)) :op2 (b / begin-01 :arg0 (p3 / person) :arg1 (r2 / rebel-01 :arg0 (p4 / person))))) :time (s4 / soon))
(p / possible-01 :arg1 (s / sell-01 :arg0 (m / municipality :mod (n / new)) :arg1 (c / car :mod (t / towed)) :time (a / after :quant (u / up-to :op1 (t2 / temporal-quantity :quant (N / N-A) :unit (m2 / month)))) :time (a2 / after :op1 (a3 / announce-01 :arg0 (p2 / person :arg0-of (o / own-01 :arg1 (t3 / they)))))))
(o / or :op2 (a / attempt-01 :mode (i / interrogative) :arg0 (y / you) :arg1 (a2 / attempt-01 :arg0 (y2 / you) :arg1 (i2 / interesting :domain (t / this)))))
(a / and :op1 (m / marry-01 :arg1 (h / he)) :op2 (h2 / have-03 :arg0 (h3 / he) :arg1 (c / child :quant 3 :mod (s / small))))
(s / smuggle-01 :arg0 (t / that) :arg1 (s2 / something :mod (e / else)) :degree (e2 / entire))
(s / smuggle-01 :arg0 (t / they) :arg1 (s2 / something :mod (e / else)) :degree (e2 / entire))
(a / and :op1 (j / jovial) :op2 (p / pompously) :op3 (a2 / authoritarian) :op4 (a3 / arrogant))
(d / depreciating :arg0 (p / person :name (n / name :op1 "Bellamy")) :arg1 (i / idea :topic (a / and :op1 (' / '' :arg0 (p2 / person :name (n2 / name :op1 "Bennett")) :arg1 ('2 / '' :mod (f / football) :mod (e / exciting) :mod (e2 / exciting))) :op2 (r / reminded :poss (p3 / person)))) :arg2 (w / win-01 :arg0 (p4 / person :arg0-of (h / have-org-role-91 :arg1 (t / team :poss (p5 / person)) :arg2 (m / mentoru))) :arg1 (p6 / premiership) :manner (p7 / play-01 :arg0 (p8 / person) :arg1 (d2 / dissent-01 :mod ('3 / '')) :arg2 (f2 / football))))
(m / meet-03 :medium (i / internet) :location (v / va?ka :mod (o / old :degree (m2 / more)) :arg1-of (t / talk-01 :arg0 (h / he) :arg2 (m3 / movie :mod (f / favorites)))))
(f / fight-01 :arg0 (h / heart) :arg2 (c / comment-01 :arg0 (h2 / heart) :arg3 (p / person :name (n / name :op1 "Neilson"))))
(t / time :mod (n / next) :mod (t2 / too))
(a / and :op1 (s / sentence-01 :arg1 (p / person :name (n / name :op1 "Vladimir" :op2 "Putin") :arg0-of (c / confiscate-01 :arg1 (c2 / company :mod (o / oil)))) :arg2 (p2 / person :name (n2 / name :op1 "Khodorkovsky"))) :op2 (a2 / and :op1 (c3 / confiscate-01 :arg0 (p3 / person) :arg1 (c4 / company :mod (o2 / oil))) :op2 (l / limit-01 :arg1 (e / effort :poss (p4 / person) :mod (d / democracy)) :arg1-of (l2 / limit-01))) :time (a3 / after :op1 (c5 / challenge-01 :arg1 (p5 / person) :arg2 (p6 / president) :arg1-of (o3 / open-04))))
(s / say-01 :arg1 (s2 / story) :arg2 (p / person :name (n / name :op1 "Yasmeen" :op2 "Abutaleb")))
(a / and :op1 (t / take-01 :arg1 (h / he) :time (t2 / tomorrow)) :op2 (c / continue-01 :arg1 (o / operate-01 :arg0 (h2 / he) :location (c2 / city :name (n / name :op1 "Manchester"))) :time (t3 / then)))
(t / transfer-01 :arg1 (o / or :op1 (d / day :mod (n / next)) :op2 (c / continue-01 :arg1 (o2 / operated :arg0 (c2 / city :name (n2 / name :op1 "Manchester"))))) :time (d2 / day :mod (n3 / next)))
(c / confirm-01 :arg0 (g / government-organization :name (n / name :op1 "White" :op2 "House")) :arg1 (v / visit-01 :arg0 (c2 / city :name (n2 / name :op1 "Washington")) :arg1 (p / person :name (n3 / name :op1 "Xi" :op2 "Jinping"))))
(w / warn-01 :arg0 (p / person :name (n / name :op1 "Hana" :op2 "Aulická")) :arg1 (r / rise-01 :arg1 (e / employ-01 :polarity -) :time (b / before :op1 (r2 / rise-01 :arg1 (e2 / employ-01 :polarity -)))))
(p / play-02 :arg0 (w / woman) :arg1 (r / role :mod (b / big) :topic (p2 / process-02 :arg1 (d / decision-making))))
(t / think-01 :arg0 (i / i) :arg1 (e / enjoy-01 :arg0 (p / person :arg0-of (p2 / play-01)) :arg1 (i2 / it)))
(s / sit-01 :arg1 (w / we) :arg2 (c / casual :degree (m / more :degree (v / very)) :compared-to (e / expect-01 :arg0 (w2 / we))) :time (n / now))
(p / probable :domain (c / continue-01 :polarity - :arg0 (s / scientist :arg0-of (h / have-org-role-91 :arg1 (h2 / humanity :time (d / date-entity :century (N / N-A))) :arg2 (s2 / scientist))) :arg1 (f / fascinating :arg0 (s3 / scientist)) :time (e / ever)))
(c / cause-01 :arg0 (c2 / chance-02 :arg0 (p / person :arg1-of (s / support-01 :arg0 (c3 / campaign-01 :arg0 (m / media) :arg1-of (g / go-on-15)))) :arg1 (c4 / chance-02 :arg0 (y / you)) :location (p2 / page)))
(c / cause-01 :arg0 (t / this) :arg1 (c2 / chance-02 :arg1 (- / -rrb- :arg1 (s / site) :arg1-of (s2 / support-01 :arg0 (c3 / campaign-01 :arg0 (m / media) :arg1-of (g / go-on-15)) :arg1-of (s3 / support-01 :arg0 (c4 / campaign-01 :arg0 (m2 / media) :arg1-of (g2 / go-on-15)))))))
(a / and :op1 (b / buy-01 :arg0 (s / she) :arg1 (c / company :mod (c2 / czech)) :time (l / late :degree (m / more))) :op2 (c3 / come-01 :arg1 (c4 / company :arg1-of (s2 / strong-02)) :arg4 (c5 / contract :mod (n / new))))
(a / and :op1 (m / marry-01 :arg1 (i / i) :arg2 (f / family :arg0-of (w / work-01))) :op2 (m2 / marry-01 :arg1 (i2 / i) :arg2 (f2 / family :quant 2)) :op3 (f3 / forth :arg0 (i3 / i) :degree (s / so)))
(e / exemplify-01 :arg0 (r / recommend-01 :arg0 (o / oil :mod (s / salad)) :arg1 (s2 / summer :arg1-of (h / hot-05))) :source (l / location :name (n / name :op1 "Bohemia")))
(h / have-concession-91 :arg1 (a / achieve-01 :arg0 (i / i) :arg1 (a2 / attract-01 :arg0 (i2 / it) :arg1 (p / person :quant (m / more)))) :arg2 (t / toyed :arg0 (t2 / they) :arg1 (c / create-01 :arg1 (a3 / advertising :arg1 (c2 / corporation) :arg1-of (r / realistic-03 :degree (m2 / more))))))
(r / recommend-01 :arg1 (s / seat-01 :quant 620,000 :arg1-of (a / average-04)))
(s / say-01 :arg0 (t / thing :quant (a / all) :arg1-of (i / include-91 :arg2 (t2 / thing :quant 10 :arg1-of (s2 / say-01 :arg0 (t3 / thing :arg1-of (o / opine-01 :arg0 (h / health :poss (p / person :name (n / name :op1 "Clinton"))))))))) :arg1 (i2 / it :quant (a2 / all) :arg1-of (i3 / include-91 :arg2 (t4 / thing :quant 10))))
(t / turn-02 :arg0 (i / i) :arg1 (i2 / i) :arg2 (t2 / thing :mod (g / good)) :arg3 (t3 / thing :mod (g2 / good)) :arg3 (p / person :name (n / name :op1 "Deila")))
(c / contrast-01 :arg2 (f / finish-01 :arg0 (i / i) :arg1 (b / be-located-at-91 :arg1 (i2 / i) :arg2 (t / there) :arg2-of (c2 / contrast-01 :arg1 (h / have-03 :arg0 (i3 / i) :arg1 (l / location :arg4-of (h2 / have-03 :arg0 (i4 / i))))))) :arg1-of (c3 / contrast-01 :arg2 (a / and :op1 (r / run-02 :arg0 (i5 / i) :arg1 (r2 / race) :time (a2 / already) :time (a3 / after :op1 (r3 / run-01 :arg0 (r4 / race) :arg1 (r5 / race) :time (a4 / already)))) :op2 (k / know-01 :arg0 (i6 / i) :arg1 (l2 / location :arg4-of (s / send-01 :arg1 (i7 / it)))))))
(a / and :op1 (t / throw-01 :arg0 (h / he) :arg1 (p / piece :mod (p2 / paper) :mod (l / little) :location (t2 / table)) :arg2 (b / back :part-of (t3 / table))) :op2 (l2 / leaned :arg0 (h2 / he) :arg1 (a2 / and :op1 (c / chair :arg1-of (f / fake-02) :mod (u / usual)) :op2 (e / eyes :mod (e2 / evil)) :op3 (e3 / eye :mod (e4 / evil)) :op4 (e5 / eye :mod (p3 / pierce)))))
(a / and :op1 (a2 / afford-01 :arg1 (i / item)) :op2 (s / sell-01 :arg1 (i2 / item) :arg2 (i3 / item :quant (l / lot)) :mod (l2 / large)))
(p / person :arg0-of (p2 / play-01) :mod (g / good :degree (r / really)))
(h / help-01 :arg0 (i / it) :arg1 (f / forum :mod (p / pitching)) :arg2 (p2 / possible-01 :arg1 (m / meet-03 :arg0 (p3 / person :arg0-of (s / study-01)) :arg1 (p4 / person :mod (p5 / professional :mod (f2 / film))) :purpose (a / and :op1 (u / undergo-28 :arg1 (p6 / person) :arg2 (s2 / series :quant (s3 / series)) :time (t / time :arg1-of (s4 / same-01))) :op2 (g / get-01 :arg0 (p7 / person) :arg1 (j / job))))) :mod (a2 / also))
(p / possible-01 :arg1 (e / equate-01 :arg1 (c / child :mod (y / young :degree (m / more))) :arg2 (s / scent :arg1 (d / device) :arg0-of (a / attract-01))))
(a / and :op1 (w / want-01 :arg0 (p / person :arg0-of (p2 / partner-01 :arg1 (c / country :name (n / name :op1 "N-A")))) :arg1 (s / supply-01 :arg0 (p3 / person) :arg2 (o / or :op1 (t / twenty) :op2 (t2 / temporal-quantity :quant (N / N-A) :unit (y / year))))) :op2 (e / explain-01 :arg0 (p4 / person) :arg1 (p5 / person)))
(a / and :op1 (g / give-01 :arg0 (p / promote-02 :arg1 (o / open-01 :arg1 (r / reform-01 :mod (n / nascent)))) :arg1 (a2 / and :op1 (m / momentum :mod (n2 / new)) :op2 (v / vitality)) :mod (n3 / new)) :op2 (s / say-01 :arg0 (t / thing :arg1-of (s2 / say-01)) :arg1 (s3 / space :mod (n4 / new) :purpose (g2 / grow-01 :arg1 (e / economy))) :mod (a3 / also)))
(c / contrast-01 :arg1 (a / and :op1 (f / fit :domain (t / they :quant (a2 / about :op1 20))) :op2 (r / remain-01 :arg1 (t2 / they) :arg3 (o / outside))) :arg2 (r2 / remain-01 :arg1 (t3 / they) :arg3 (o2 / outside)))
(h / have-03 :arg1 (p / power :mod (b / big)) :source (p2 / pick-01 :arg0-of (h2 / have-03 :arg1 (p3 / power :mod (b2 / big)))))
(w / win-01 :arg0 (s / she) :arg1 (p / process-02 :arg1 (s2 / selection)) :arg2 (d / door :mod (e / emergency) :arg0-of (s3 / supply-01 :arg1 (d2 / door :mod (e2 / emergency)))))
(t / theme :arg1-of (s / special-02) :domain (f / festival :arg1-of (d / derive :arg2 (t2 / trailer :mod (f2 / festival)))) :time (y / year :mod (e / each)))
(a / announce-01 :arg0 (o / organization :name (n / name :op1 "Company" :op2 "Fedex")) :arg1 (t / thing :arg2-of (r / result-01 :arg1 (r2 / reduce-01 :arg1 (a2 / and :op1 (p / percentage-entity :value (N / N-A)) :op2 (r3 / reduce-01 :mod (h / huge))))) :arg1-of (c / cause-01 :arg0 (a3 / and :op1 (d / demand-01 :arg1 (l / level :arg1-of (l2 / low-04))) :op2 (i / increase-01 :arg1 (e / expend-01 :arg2 (d2 / division :mod (g / ground))))))))
(p / possible-01 :arg1 (a / and :op1 (e / event :time (y / yesterday)) :op2 (e2 / event :time (y2 / yesterday))))
(c / contrast-01 :arg1 (p / possible-01 :arg1 (a / and :op1 (h / hard-02 :arg1 (r / rival-01) :degree (m / more)) :op2 (h2 / have-03 :polarity - :arg0 (t / that) :arg1 (n / name)))) :arg2 (p2 / person :arg0-of (p3 / play-01) :arg0-of (t2 / think-01 :arg1 (g / give-up-07 :arg0 (c2 / city :name (n2 / name :op1 "Manchester")) :arg1 (g2 / goal :quant 3)))))
(m / multi-sentence :snt1 (p / possible-01 :arg1 (g / guarantee-01 :arg0 (i / i))) :snt2 (a / and :op1 (c / change-01 :arg0 (w / we) :arg1 (a2 / and :op1 (s / system :mod (d / defensive) :poss (w2 / we)) :op2 (t / technique)) :time (y / year :mod (l / last))) :op2 (e / emphasize-01 :arg0 (w3 / we) :arg1 (a3 / and :op1 (s2 / system :mod (d2 / defensive) :poss (w4 / we)) :op2 (t2 / technique :poss (w5 / we))) :time (w6 / week :mod (l2 / last))) :op3 (m2 / mean-01 :arg1 (w7 / we) :arg2 (p2 / point :mod (t3 / turn-02 :arg1 (w8 / we) :arg2 (p3 / point))))))
(c / contrast-01 :arg1 (s / say-01 :arg0 (l / law) :arg1 (c2 / contrast-01 :arg1 (s2 / situation :polarity -) :arg2 (s3 / situation :poss (l2 / law)))) :arg2 (t / terminates :arg0 (c3 / company :arg0-of (i / insure-02)) :arg1 (c4 / contract)))
(b / buy-01 :arg0 (a / amr-unknown) :arg1 (a2 / and :op1 (p / person :arg0-of (o / own-01 :arg1 (r / restaurant))) :op2 (p2 / person :arg0-of (o2 / own-01 :arg1 (r2 / restaurant))) :op3 (p3 / person :arg0-of (o3 / own-01 :arg1 (r3 / restaurant)) :arg1-of (s / separate-02))) :mod (a3 / also))
(c / contrast-01 :arg1 (a / ask-01 :arg0 (i / i) :arg1 (t / thing :arg1-of (c2 / check-01 :arg0 (b / background) :mod (c3 / comprehensive :degree (m / most)))) :frequency (a2 / amr-unknown)) :arg2 (w / want-01 :arg0 (n / no-one) :arg1 (t2 / talk-01 :arg0 (n2 / no-one) :arg1 (t3 / thing))))
(l / leave-17 :arg1 (t / thing :arg2-of (h / have-part-91 :arg1 (s / store)) :mod (g / good)) :arg4 (s2 / section :mod (f / freezer :mod (m / massive)) :location-of (p / possible-01 :arg1 (f2 / find-01 :arg0 (y / you) :arg1 (a / and :op1 (l2 / leave-11 :arg1-of (f3 / freeze-01)) :op2 (m2 / melon :mod (b / bitter)) :op3 (m3 / melon :mod (w / whole)) :op4 (a2 / and :op1 (g2 / gut :mod (p2 / pork)) :op2 (g3 / gut :mod (p3 / pork)) :op3 (g4 / gut :mod (f4 / fish)) :op4 (b2 / balls :mod (r / region)) :op5 (b3 / balls :mod (r2 / region)) :op6 (b4 / balls :mod (r3 / region)) :op7 (m4 / more :mod (r4 / region))))))))
(t / trend :arg1 (t2 / trend :mod (n / new) :mod (e / each)) :arg1-of (c / cause-01 :arg0 (l / lighters :arg0 (g / generation :mod (n2 / new) :mod (e2 / each)) :arg1 (y / you) :time (l2 / last))))
(c / change-01 :arg0 (a / association) :arg1 (t / thing :arg1-of (i / infect-01 :arg1-of (e / exist-01)) :arg1-of (e2 / exist-01)) :mod (a2 / also))
(b / bore-02 :arg0 (l / lack-01 :arg1 (t / title :mod (t2 / title :mod (c / country :name (n / name :op1 "Netherlands"))))) :arg1 (p / person :name (n2 / name :op1 "de" :op2 "Boer") :mod (c2 / country)))
(n / need-01 :arg0 (w / we) :arg1 (d / do-02 :arg0 (w2 / we) :arg1 (m / more) :purpose (o / or :op1 (h / help-01 :arg0 (c / country :location-of (l / leave-11 :arg0 (r / refugee)))) :op2 (d2 / delay-01 :arg1 (r2 / refugee) :time (a / after :op1 (l2 / leave-11 :arg0 (c2 / country) :arg1 (c3 / country)))))))
(c / contrast-01 :arg2 (r / run-09 :arg1 (i / it) :arg2 (h / haul :arg1-of (l / long-03 :degree (v / very)))))
(b / blame-01 :arg0 (c / country :name (n / name :op1 "Saudi" :op2 "Arabia")) :arg1 (b2 / blame-01 :arg1 (c2 / country) :arg2 (c3 / collapse-01 :arg1 (o / organization :name (n2 / name :op1 "Saudi" :op2 "Binladin" :op3 "Group") :arg0-of (c4 / construct-01)))) :manner (p / partial))
(r / remain-01 :arg1 (p / person :name (n / name :op1 "Donald" :op2 "Trump")) :arg3 (a / as-well) :arg1-of (c / cause-01 :arg0 (a2 / as-long-as :op1 (r2 / remain-01 :arg1 (i / immigrate-01) :arg3 (i2 / immigrate-01)))))
FAILED_TO_PARSE#Number of opening and closing brackets doesn't match.
(s / say-01 :arg0 (i / i) :arg1 (c / contrast-01 :arg1 (s2 / say-01 :arg0 (i2 / i) :arg1 (g / goodbye) :arg2 (h / he)) :arg2 (f / feel-01 :arg0 (i3 / i) :arg1 (a / awful) :time (a2 / after :op1 (c2 / coexist-01 :arg1 (i4 / i) :arg1-of (l / long-03 :degree (s3 / so)))) :mod (s4 / still) :condition (r / relative :domain (i5 / i)))))
(a / and :op1 (h / have-03 :arg0 (s / storm) :arg1 (b / break :mod (t / this)) :time (w / weekend :mod (t2 / this))) :op2 (w2 / win-01 :arg0 (w3 / win-01) :arg1 (r / right-05) :arg2 (h2 / host-01 :arg0 (o / or) :arg1 (o2 / or :op1 (l / location :name (n / name :op1 "Queensland") :location (n2 / north)) :op2 (l2 / location :name (n3 / name :op1 "Queensland") :location (n4 / north))) :mod (e / either) :time (n5 / night :mod (n6 / next)) :time (n7 / night :mod (n8 / next)) :location (p / park :mod (a2 / aami)))))
(s / share-01 :arg0 (a / and :op1 (p / person :name (n / name :op1 "Sarah" :op2 "Mackay")) :op2 (p2 / person :name (n2 / name :op1 "Sam" :op2 "Wood"))) :arg1 (r / relation-03 :arg1 (l / light)) :arg2 (d / day :mod (c / certain)))
(r / receive-01 :arg0 (i / injure-01 :mod (o / other)) :arg1 (h / half :mod (t / that)))
(c / contrast-01 :arg2 (t / talk-01 :mode (i / imperative) :arg0 (y / you) :arg1 (i2 / it)) :mod (s / still))
(a / agree-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg2 (m / minister))) :arg1 (s / share-01 :arg0 (p2 / person) :arg1 (r / responsible-03 :arg0 (p3 / person) :arg1 (a2 / and :op1 (s2 / seek-01 :arg0 (p4 / person :quant 40000) :arg1 (p5 / protect-01 :arg0 (p6 / person) :arg1 (p7 / protect-01 :arg1 (a3 / and :op1 (c / country :name (n / name :op1 "Italy")) :op2 (c2 / country :name (n2 / name :op1 "Greece")))))) :op2 (t / talk-01 :arg0 (p8 / person) :arg2 (h2 / hope-01 :arg0 (p9 / person) :arg1 (a4 / achieve-01 :arg0 (p10 / person) :arg1 (a5 / agree-01 :arg0 (p11 / person) :arg1 (a6 / achieve-01 :arg0 (p12 / person) :arg1 (a7 / agree-01 :arg0 (p13 / person) :arg1 (a8 / achieve-01 :arg0 (p14 / person) :arg1 (a9 / agree-01 :arg0 (p15 / person) :arg1 (a10 / achieve-01 :arg0 (p16 / person) :arg1 (o / or :op1 (r2 / refugee :quant (m2 / more-than :op1 120)) :op2 (r3 / refugee :quant (m3 / more-than :op1 120))))))))))))))) :arg2 (p17 / person :arg0-of (h3 / have-org-role-91 :arg2 (m4 / minister))))
(t / time :arg1-of (s / same-01) :time (t2 / time :arg1-of (s2 / same-01)))
(p / publish :arg0 (w / we) :arg1 (n / name :poss (y / you)) :arg1-of (c / cause-01 :arg0 (p2 / provide-01 :arg0 (w2 / we) :arg1 (t / thing :arg2-of (n2 / name-01 :arg1 (y2 / you))))) :arg1-of (h / have-condition-91 :arg2 (a / ask-02 :polarity - :arg0 (y3 / you) :arg1 (p3 / person :mod (a2 / atheist)) :arg2 (w3 / we))))
(a / and :op1 (o / old :domain (o2 / or :op1 (e / eat-01 :arg0 (h / he)) :op2 (d / drink-01 :arg0 (h2 / he))) :mod (j / just)) :op2 (t / turned :arg0 (i / it) :arg1 (h3 / he)))
(t / thing :arg2-of (r / result-01) :arg2-of (r2 / result-01) :arg0-of (o / own-01 :arg1 (a / and :op1 (o2 / organization :name (n / name :op1 "Screwfix")) :op2 (o3 / organization :name (n2 / name :op1 "Screwfix")))))
(t / that :time (n / now))
(f / family :arg1-of (h / have-org-role-91 :arg0 (p / person :name (n / name :op1 "Binladinova")) :arg2 (m / member)) :arg1-of (i / include-91 :arg2 (f2 / family :arg0-of (r / rule-03 :arg1 (f3 / family :arg0-of (r2 / rule-03)))) :duration (m2 / multiple :op1 (t / temporal-quantity :quant (N / N-A) :unit (d / decade)))) :arg1-of (r3 / run-01 :arg0 (p2 / project :mod (c / construct-01 :mod (l / large)))))
(a / and :op1 (g / go-02 :arg0 (t / they)) :op2 (g2 / go-02 :arg0 (t2 / they)) :op3 (g3 / go-02 :arg0 (t3 / they)))
(s / say-01 :arg0 (p / person :arg0-of (a / amend-01 :arg1 (a2 / amend-01))) :arg1 (c / crucial :domain (p2 / person :arg0-of (h / have-org-role-91 :arg1 (o / organization :name (n / name :op1 "Milan" :op2 "Urban")) :arg2 (m / member))) :time (b / before :op1 (p3 / pass-01 :arg1 (t / thing :arg1-of (c2 / conclude-01 :topic (a3 / and :op1 (p4 / policy :mod (e / energy) :arg1-of (u / update-01)) :op2 (t2 / thing :arg1-of (d / decide-01 :arg0 (g / government-organization :arg0-of (g2 / govern-01 :arg1 (c3 / coal))))))))))))
(a / and :op1 (r / remember-01 :mode (i / imperative) :arg0 (y / you) :arg1 (y2 / you)) :op2 (s / say-01 :arg0 (y3 / you) :arg1 (o / obligate-01 :arg2 (a2 / act-02 :arg0 (y4 / you)))))
(c / continue-01 :arg0 (l / law) :arg1 (w / word-01 :arg0 (c2 / city :name (n / name :op1 "Athens")) :mod (l2 / last)))
(r / refuse-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (c / company :name (n / name :op1 "BBC")) :arg3 (c2 / charge-05 :arg1 (p2 / person)))) :arg1 (b / be-located-at-91 :arg1 (o / organization :name (n2 / name :op1 "BBC" :op2 "radio")) :arg2 (a / ahead :op1 (b2 / business :arg0-of (c3 / compete-02 :arg1 (a2 / and :op1 (m / music :mod (l / live-01)) :op2 (p3 / public :mod (l2 / live-01))))))) :location (g / ground))
(s / say-01 :arg0 (r / report-01 :location (p / press :mod (c / country :name (n / name :op1 "Syria")))) :arg1 (c2 / contrast-01 :arg1 (r2 / report-01 :arg1 (s2 / supply-01 :arg1 (a / and :op1 (w / weapon) :op2 (e / equipment :mod (m / military)))) :arg2 (c3 / country)) :arg2 (s3 / since :op1 (b / begin-01 :arg1 (a2 / august)))))
(1 / 125th :arg0 (p / person :name (n / name :op1 "Yuki" :op2 "Bhambriho") :arg0-of (w / win-01 :arg1 (c / challenger :time (w2 / week :mod (l / last)) :location (c2 / city :name (n2 / name :op1 "Shanghai"))))) :arg1 (p2 / person :arg0-of (p3 / play-01) :location (l2 / location :location-of (b / beat-03 :arg0 (p4 / person) :arg1 (p5 / person :arg0-of (p6 / play-01) :ord (o / ordinal-entity :value 3)) :ord (o2 / ordinal-entity :value 4)))) :location (- / -rrb- :mod (a / atp)))
(a / and :op2 (s / say-01 :arg0 (p / person :arg0-of (t / try-01 :arg1 (t2 / tell-01 :arg0 (w / we) :arg1 (s2 / story :topic (f / film :poss (w2 / we)))))) :arg1 (s3 / story :topic (f2 / film :poss (w3 / we)))))
(h / host-01 :arg0 (f / festival) :arg1 (p / photograph-01 :quant 2) :mod (a / also))
(i / introduce-02 :arg0 (p / person :quant 9) :arg1 (f / features :mod (n / new) :arg2-of (i2 / include-01 :arg1 (a / and :op1 (p2 / person :arg0-of (a2 / assist-01) :arg1-of (p3 / personal-02)) :op2 (p4 / person :arg0-of (a3 / assist-01 :arg2 (i3 / ipad)))) :arg2-of (i4 / include-01 :arg1 (a4 / and :op1 (p5 / person :arg0-of (a5 / assist-01) :arg1-of (p6 / personal-02)) :op2 (p7 / person :arg0-of (a6 / assist-01 :arg2 (i5 / ipad))) :op3 (p8 / person :arg0-of (a7 / assist-01 :arg2 (i6 / ipad))) :op4 (p9 / person :arg0-of (a8 / assist-01 :arg2 (i7 / ipad))) :op5 (p10 / person :arg0-of (a9 / assist-01 :arg2 (a10 / and :op1 (a11 / accelerate-01 :arg0 (p11 / person) :arg1 (s / system :arg0-of (o / operate-01))) :op2 (r / repair-01 :arg0 (p12 / person) :arg1 (s2 / system :arg0-of (o2 / operate-01))) :quant (l / large :degree (m / most))))))))) :arg2 (f2 / features :mod (n2 / new)) :arg1-of (s3 / sure-02 :arg0 (y / you)))
(t / think-01 :arg0 (h / he) :arg1 (h2 / help-01 :arg0 (c / case-03 :arg1 (h3 / he)) :arg1 (p / procedure :prep-against (d / die-01 :arg1 (h4 / he))) :condition (d2 / die-01 :arg1 (h5 / he)) :condition (d3 / die-01 :arg1 (h6 / he))))
(c / contrast-01 :arg1 (n / new-01 :polarity - :arg1 (i / idea :mod (t / this))) :arg2 (e / event :name (n2 / name :op1 "N-A") :domain (i2 / idea)))
(p / point-out-02 :arg0 (t / that) :arg1 (r / raise-01 :arg0 (g / government-organization :name (n / name :op1 "N-A")) :arg1 (r2 / rate) :condition (p2 / proceed-01 :arg0 (p3 / politician) :arg1 (p4 / promise-01 :arg0 (p5 / politician))) :mod (o / only) :condition (p6 / proceed-01 :arg0 (p7 / politician) :arg1 (p8 / promise-01))))
(t / title-01 :arg1 (y / you) :arg2 (a / and :op1 (j / journey :arg1 (y2 / you)) :op2 (j2 / journey :arg1 (y3 / you)) :op3 (j3 / journey :arg0 (y4 / you) :arg1 (- / -lrb- :mod (a2 / accompanied) :mod (-2 / -rrb-)))))
(r / refuse-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (p2 / political-party :name (n / name :op1 "N-A")) :arg2 (m / member :mod (v / vice)))) :arg1 (a / and :op1 (a2 / appear-01 :arg1 (p3 / person) :time (b / before :op1 (d / date-entity :decade (N / N-A)))) :op2 (l / leave-11 :arg0 (p4 / person) :arg1 (p5 / party) :arg1-of (a3 / allege-01) :purpose (r2 / reason :mod (h2 / health))) :time (s / subsequent)))
(a / address-03 :arg0 (l / lama :name (n / name :op1 (d / dalai))) :arg2 (q / question-01 :arg1 (c / crisis :mod (r / refugee) :location (s / station :name (n2 / name :op1 "N-A") :arg0-of (o / open-01 :arg1 (c2 / centre :mod (e / ethical)))))) :time (b / begin-01 :arg1 (v / visit-01 :arg0 (h / he) :arg1 (c3 / country :name (n3 / name :op1 "Great" :op2 "Britain")) :mod (1 / 10-day))) :location (s2 / speech :poss (h2 / he)))
(s / struggled :arg1 (m / man :quant 2) :arg2 (a / and :op1 (r / round :mod (f / final)) :op2 (l / location :name (n / name :op1 "Caldiero")) :op3 (p / person :name (n2 / name :op1 "Geoff" :op2 "Britten") :arg0-of (h / have-org-role-91 :arg2 (c / cameraman)))) :time (s2 / season :mod (t / this)))
(s / say-01 :arg0 (i / i) :arg1 (s2 / say-01 :arg0 (i2 / i) :arg1 (s3 / see-01 :arg0 (y / you) :arg1 (b / baby :mod (t / this) :arg0-of (w / wear-01 :arg1 (b2 / baby))))) :arg2 (s4 / say-01 :arg0 (i3 / i) :arg1 (s5 / see-01 :arg0 (y2 / you) :arg1 (b3 / baby :mod (t2 / this) :arg0-of (w2 / wear-01 :arg1 (b4 / baby))))) :time (t3 / tonight))
(d / difficult :domain (f / find-01 :arg1 (w / woman :mod (g / good) :arg1-of (t / take-01 :arg0 (w2 / we) :arg2 (w3 / we)))))
FAILED_TO_PARSE#Number of opening and closing brackets doesn't match.
(h / have-03 :arg0 (p / person :quant (m / multiple :op1 6)) :arg1 (v / view-01 :arg0 (p2 / person :name (n / name :op1 "Donald" :op2 "Trump")) :mod (p3 / positive)) :time (n2 / now))
(o / obligate-01 :arg1 (i / i) :arg2 (r / remember-01 :arg0 (i2 / i) :arg1 (d / detail :quant (a / all))))
(m / multi-sentence :snt1 (c / cause-01 :arg0 (t / tell-01 :arg1 (a / and :op1 (t2 / tell-01 :arg0 (y / you) :arg1 (t3 / thing :arg1-of (o / opine-01 :arg0 (y2 / you) :topic (t4 / thing :arg1-of (o2 / opine-01 :arg0 (y3 / you)))))) :op2 (t5 / thing :arg1-of (o3 / opine-01 :arg0 (y4 / you) :prep-on (c2 / corbyna))) :op3 (t6 / thing :arg1-of (o4 / opine-01 :arg0 (y5 / you) :prep-on (c3 / corbyna))) :op4 (t7 / thing :arg1-of (o5 / opine-01 :arg0 (y6 / you) :medium (c4 / corbyna))) :op5 (t8 / thing :arg1-of (o6 / opine-01 :arg0 (y7 / you) :prep-on (t9 / thing :arg1-of (o7 / opine-01 :arg0 (y8 / you) :medium (t10 / thing :arg1-of (o8 / opine-01 :arg0 (y9 / you))) :manner (f / frank)))))))) :snt2 (b / be-located-at-91 :arg1 (i / i) :arg2 (r / room :part-of (h / he) :location (r2 / room))))
(m / multi-sentence :snt1 (s / story :topic (a / and :op1 (p / pregnancies :quant 4) :op2 (b / births))) :snt2 (n / night :mod (t / tuesday) :time (n2 / night :quant 9) :location (v / value-interval :op1 9 :op2 9)))
(l / late :domain (b / bus))
(c / clear-06 :polarity - :arg1 (o / or :op1 (a / accept-01 :arg0 (h / he) :arg1 (p / petition-01)) :op2 (m / meet-03 :arg0 (h2 / he) :arg1 (p2 / pope) :time (a2 / already))))
(e / expect-01 :arg1 (r / release-01 :arg0 (i / i) :arg1 (d / detail :topic (s / strategy :poss (i2 / it) :mod (d2 / defend-01))) :degree (m / more) :time (d3 / date-entity :month 9 :day 29 :time-of (c / celebrate-02 :arg0 (a / and :op1 (f / food :poss (r2 / retail-01)) :op2 (a2 / alcohol) :op3 (r3 / range)) :arg1 (d4 / day :mod (s2 / strategy) :poss (p / person :arg0-of (i3 / invest-01)))))))
(s / say-01 :arg0 (m / media :mod (c / country :name (n / name :op1 "N-A"))) :arg1 (p / pregnant :domain (s2 / seat-01 :part-of (g / government-organization))))
(a / and :op1 (t / take-01 :arg0 (c / city :name (n / name :op1 "Detroit")) :arg1 (a2 / advantage)) :op2 (g / get-01 :arg0 (c2 / city) :arg1 (a3 / advantage) :arg2 (p / person :name (n2 / name :op1 "Phil" :op2 "Hughes"))))
(i / i :mod (a / at-least))
(s / say-01 :arg0 (f / few :op1 (t / temporal-quantity :quant (N / N-A) :unit (h / hour))) :arg1 (p / plan-01 :arg0 (p2 / person :name (n / name :op1 "Smith") :arg0-of (h2 / have-org-role-91 :arg1 (a / and :op1 (w / work-01 :arg0 (p3 / person)) :op2 (p4 / person :arg0-of (h3 / have-org-role-91 :arg2 (s2 / secretary))) :op3 (p5 / pension)))) :arg1 (p6 / plan-01 :arg0 (g / government-organization :arg0-of (g2 / govern-01)) :arg1 (r / reduce-01 :arg0 (g3 / government-organization) :arg1 (l / limit-01 :arg1 (m / monetary-quantity :quant 23,000 :unit (y / yuan)) :arg2 (m2 / monetary-quantity :quant 23,000 :unit (y2 / yuan)))) :arg1-of (c / clear-06 :degree (v / very)))) :time (l2 / late :op1 (f2 / few :op1 (t2 / temporal-quantity :quant (N2 / N-A) :unit (h4 / hour))) :degree (m3 / more)))
(i / issue-02 :arg0 (t / think-01 :arg0 (y / you) :arg1 (r / recommend-01 :arg1 (d / discuss-01 :arg0 (w / world)))))
(f / free-03 :polarity - :arg1 (p / position-02 :arg0 (c / company :arg0-of (s / supply-01 :arg1 (a / aircraft)))) :manner (e / exclusive-02))
(f / free-03 :polarity - :arg1 (p / position-02 :arg0 (c / company :arg0-of (s / supply-01) :arg0-of (s2 / supply-01))) :manner (e / exclusive-02))
(a / and :op1 (c / catch-01 :arg1 (p / person :name (n / name :op1 "Hayne")) :location (d / delegate) :time (l / leave-11 :arg0 (p2 / person) :arg1 (f / field) :time (a2 / after :op1 (l2 / leave-15 :arg0 (p3 / person) :arg1 (f2 / field) :time (a3 / after :op1 (e / error)))))) :op2 (t / tell-01 :arg0 (p4 / person) :arg1 (s / start-01 :arg0 (p5 / person) :arg1 (c2 / career :poss (p6 / person) :location (o / organization :name (n2 / name :op1 "NFL") :part-of (o2 / organization :name (n3 / name :op1 "NFL")))) :arg1-of (b / bad-07 :degree (m / more)) :arg1-of (c3 / cause-01 :arg0 (s2 / start-01 :arg0 (p7 / person) :arg1 (c4 / career :poss (p8 / person) :location (o3 / organization :name (n4 / name :op1 "NFL"))) :arg1-of (b2 / bad-07 :degree (m2 / more)))))))
(t / take-01 :arg0 (i / i) :arg1 (i2 / it) :arg3 (p / play-01 :arg0 (w / we) :location (h / home)) :arg0-of (c / cause-01 :arg1 (h2 / have-polarity-91 :arg2 - :mod (d / definite))))
(t / talk-01 :polarity - :arg0 (d / doctor :name (n / name :op1 "N-A") :mod (p / person :arg0-of (u / use-01))) :arg1-of (r / resemble-01 :arg2 (s / sack :arg1 (o / or :op1 (s2 / salt) :op2 (g / geopolitics)))))
(a / and :op1 (c / come-01 :arg1 (p / person :name (n / name :op1 "Paul" :op2 "Collingwood")) :location (p2 / part :part-of (t / tour))) :op2 (b / bring-01 :arg0 (p3 / person) :arg1 (t2 / team) :arg2 (a2 / and :op1 (t3 / team :mod (e / energy)) :op2 (s / spark :arg1 (t4 / team)))))
FAILED_TO_PARSE#Number of opening and closing brackets doesn't match.
(s / see-01 :arg0 (p / person :arg0-of (v / visit-01)) :arg1 (s2 / selection :poss (f / film :mod (i / interesting :degree (m / most)) :topic (a / and :op1 (p2 / produce-01 :arg0 (p3 / person :arg0-of (s3 / study-01))) :op2 (a2 / animation :arg0 (p4 / person)) :op3 (d / documentary)))))
(r / reflect-01 :arg1 (t / table :arg1-of (e / empty-02)) :arg2 (a / amr-unknown) :condition (m / mess :location (m2 / mind)))
(s / state-01 :arg0 (p / person :arg0-of (p2 / prosecute-01) :arg2-of (i / include-01 :arg1 (a / and :op1 (p3 / police) :op2 (c / court) :op3 (c2 / court))) :arg2-of (i2 / include-91 :arg1 (a2 / and :op1 (p4 / police) :op2 (c3 / court) :op3 (o / office))) :arg2-of (i3 / include-91 :arg1 (a3 / and :op1 (p5 / police) :op2 (c4 / court) :op3 (o2 / office))) :mod (t / this) :quant (a4 / all)) :arg1 (c5 / country :name (n / name :op1 "Kosovo") :mod (s2 / safe-01)))
(m / move-01 :arg1 (l / location :name (n / name :op1 "Kofola")) :arg2 (c / country :name (n2 / name :op1 "Poland")) :arg3 (c2 / country :name (n3 / name :op1 "Czech" :op2 "Republic")) :arg1-of (c3 / cause-01 :arg0 (c4 / consider-02 :arg1 (e / enter-01 :arg1 (o / organization :name (n4 / name :op1 "Prague" :op2 "Stock" :op3 "Exchange"))))))
(a / and :op1 (m / move-01 :arg1 (a2 / and :op1 (c / company :arg0-of (m2 / manufacture-01 :arg1 (b / building :name (n / name :op1 "N-A")))) :op2 (c2 / company :quant 1 :arg1-of (i / include-91 :arg2 (c3 / company :mod (t / tech :arg1-of (h / high-02)) :location (c4 / country :name (n2 / name :op1 "America")))))) :arg2 (l / late :degree (m3 / most))) :op2 (b2 / base-02 :arg1 (t2 / thing :arg2-of (r / result-01 :arg1 (t3 / thing :arg1-of (b3 / believe-01 :arg0 (c5 / company))))) :arg2 (t4 / thing :arg2-of (r2 / result-01) :mod (g / good :degree (m4 / more)))))
(s / say-01 :arg1 (k / know-01 :polarity - :arg0 (i / i) :arg1 (p / possible-01 :arg1 (t / tell-01 :arg0 (i2 / i)))) :arg2 (p2 / person :name (n / name :op1 "N-A")))
(c / contrast-01 :arg1 (p / possible-01 :arg1 (t / threaten-01 :arg0 (c2 / country :name (n / name :op1 "Germany")) :arg1 (f / force :arg1-of (n2 / neighbor-01 :arg2 (c3 / country))) :mod (a / again) :mod (a2 / again) :arg1-of (p2 / possible-01)) :mod (a3 / again)) :arg2 (s / seem-01 :arg1 (p3 / participate-01 :arg0 (h / he) :arg1 (p4 / part :part-of (p5 / person)) :arg1-of (i / increase-01 :arg1-of (i2 / increase-01))) :arg1-of (c4 / cause-01 :arg0 (s2 / seem-01 :arg1 (p6 / participate-01 :arg0 (h2 / he) :arg1 (r / reality) :time (a4 / always))))))
(m / multi-sentence :snt2 (p / possible-01 :arg1 (a / act-01 :arg0 (w / we) :arg1 (a2 / act-01 :arg0 (t / they) :arg1 (s / spojler :arg0 (a3 / amr-unknown) :arg1 (p2 / person :arg0-of (h / heart :mod (h2 / heart)))))) :condition (h3 / have-polarity-91 :arg2 - :mod (a4 / anyway))) :snt1 (' / '' :mode (i / interrogative) :mod (a5 / anyway)))
(m / multi-sentence :snt1 (a / and :op1 (p / person :name (n / name :op1 "Terry" :op2 "Bailey") :time (b / before :op1 (n2 / now) :quant (t / temporal-quantity :quant (N / N-A) :unit (m2 / month)))) :op2 (p2 / person :name (n3 / name :op1 "Dayle") :arg0-of (h / have-org-role-91 :arg2 (g / general))) :op3 (p3 / person :arg0-of (h2 / have-rel-role-91 :arg1 (p4 / person) :arg2 (b2 / brown))) :op4 (p5 / person :arg0-of (h3 / have-rel-role-91 :arg1 (p6 / person) :arg2 (b3 / brown))) :op5 (p7 / person :arg0-of (h4 / have-rel-role-91 :arg1 (p8 / person) :arg2 (m3 / man))) :op6 (p9 / person :arg0-of (h5 / have-rel-role-91 :arg1 (p10 / person) :arg2 (m4 / man))) :op6 (p11 / person :arg0-of (h6 / have-rel-role-91 :arg1 (p12 / person) :arg2 (m5 / man))) :op7 (p13 / person :arg0-of (h7 / have-rel-role-91 :arg1 (p14 / person) :arg2 (m6 / man))) :op7 (p15 / person :arg0-of (h8 / have-rel-role-91 :arg1 (p16 / person) :arg2 (m7 / man)))) :snt2 (s / say-01 :arg0 (p17 / person :arg0-of (h9 / have-org-role-91 :arg1 (o / organization :name (n4 / name :op1 "Moody" :op2 "racing.com")))) :arg1 (o2 / organization :name (n5 / name :op1 "Moody" :op2 "racing.com"))))
(f / fears :arg0 (a / and :op1 (p / person :arg0-of (h / have-org-role-91 :arg1 (o / organization :name (n / name :op1 "Presidium" :op2 "of" :op3 "the" :op4 "Association" :op5 "of" :op6 "Czech" :op7 "Travel" :op8 "Agents")) :arg2 (m / member))) :op2 (p2 / person :name (n2 / name :op1 "Tomio" :op2 "Okamura") :arg0-of (h2 / have-org-role-91 :arg1 (o2 / organization) :arg2 (m2 / member))) :op3 (p3 / person :arg0-of (h3 / have-org-role-91 :arg1 (o3 / organization) :arg2 (m3 / member))) :op4 (p4 / person :arg0-of (h4 / have-org-role-91 :arg1 (o4 / organization) :arg2 (m4 / member))) :op5 (p5 / person :arg0-of (h5 / have-org-role-91 :arg1 (o5 / organization) :arg2 (m5 / member)))) :arg1 (f2 / fear-01 :mod (l / location :name (n3 / name :op1 "Kalouskovými")) :arg1-of (b / base-02 :arg2 (s / survey-01 :arg1 (p6 / person :arg0-of (h6 / have-org-role-91 :arg2 (m6 / member)) :arg0-of (h7 / have-org-role-91 :arg2 (m7 / member)))))))
(s / spend-01 :arg0 (p / politician :mod (c / cell)) :duration (t / temporal-quantity :quant (N / N-A) :unit (h / hour)))
(m / monument :mod (t / technical) :arg1-of (l / local-02) :domain (p / pump :mod (c / chlum)))
(m / multi-sentence :snt1 (n / need-01 :mode (i / interrogative) :arg0 (y / you) :arg1 (h / he)) :snt2 (p / peaches :li 1 :arg1 (p2 / person :quant 1 :arg0-of (h2 / have-rel-role-91 :arg2 (d / dd1)))) :snt3 (l / leave-11 :mode (i2 / interrogative) :arg0 (p3 / person :quant 1 :arg1-of (i3 / include-91 :arg2 (p4 / person :quant 3 :arg0-of (h3 / have-rel-role-91 :arg2 (d2 / dd1)))))) :snt3 (l2 / leave-11 :mode (i4 / interrogative) :arg0 (p5 / person :quant 1 :arg0-of (h4 / have-rel-role-91 :arg2 (d3 / dd1)))) :li 3)
(c / cause-01 :arg0 (w / withdraw-01 :arg0 (p / person :name (n / name :op1 "Martin") :arg0-of (h / have-org-role-91 :arg1 (o / organization :name (n2 / name :op1 "Constitutional" :op2 "Court")))) :arg1 (t / thing :arg1-of (p2 / propose-01 :arg0 (p3 / person))) :arg1-of (c2 / cause-01 :arg0 (w2 / withdraw-01 :arg0 (p4 / person) :arg1 (p5 / propose-01 :arg0 (p6 / person))))) :arg1 (l / limit-01 :arg0 (v / verdict :poss (o2 / organization)) :arg1 (t2 / thing :arg1-of (p7 / propose-01 :arg0 (p8 / person)) :arg0-of (l2 / limit-01 :arg1 (i / insure-02 :mod (l3 / liability)) :prep-in (c3 / case-03) :arg1-of (c4 / cause-01 :arg0 (c5 / cover-01 :polarity - :arg0 (p9 / person) :arg1 (r / risk-01)))))))
(s / say-01 :arg0 (p / person :name (n / name :op1 "David" :op2 "Mundell") :arg0-of (h / have-org-role-91 :arg1 (s2 / state) :arg2 (s3 / secretary :mod (s4 / state)))) :arg1 (p2 / plan-01 :arg0 (g / government-organization :arg0-of (g2 / govern-01) :arg1-of (l / long-03)) :arg1 (f / foundation) :purpose (e / economy :arg1-of (s5 / strong-02 :degree (m / more)))) :medium (c / comment-01 :arg0 (p3 / person) :arg3 (f2 / figure :time (l2 / late :degree (m2 / most)))))
(s / say-01 :arg0 (p / person :arg0-of (v / vote-01 :arg1 (s2 / state :mod (e / entire))) :quant (a / about :op1 (1 / 1/2))) :arg1 (s3 / say-01 :arg0 (p2 / person) :arg1 (s4 / support-01 :arg0 (p3 / person) :arg1 (p4 / person :name (n / name :op1 "Clinton")) :condition (b / become-01 :arg1 (p5 / person) :arg2 (c / candidate :beneficiary (p6 / party))))))
(r / rate :name (n / name :op1 (s / sunrise) :op2 (d / dominates)) :mod (d2 / dominates) :mod (s2 / sunrise) :mod (s3 / sunrise))
(a / and :op1 (f / feel-01 :arg0 (p / person :arg0-of (h / have-rel-role-91 :arg1 (y / you) :arg2 (r / roommates))) :arg1 (o / obligate-01 :arg1 (p2 / person) :arg2 (t / talk-01 :arg0 (p3 / person) :arg2 (y2 / you)))) :op2 (e / end-up-03 :arg1 (e2 / everything) :arg2 (a2 / add-02 :arg0 (p4 / person) :arg1 (f2 / face :part-of (y3 / you)) :arg2 (s / surprise :mod (t2 / tasty)))))
(g / get-01 :arg0 (p / person :name (n / name :op1 "Lyth")) :arg1 (d / division :quant 7) :time (b / before :op1 (w / win-01 :arg0 (p2 / person :name (n2 / name :op1 "Nick" :op2 "Compton")) :arg1 9 :quant 9) :mod (j / just)))
(c / cause-01 :arg0 (a / and :op1 (r / represent-01 :arg0 (a2 / and :op1 (s / south) :op2 (w / west)) :arg1 (r2 / rate-entity-91 :arg1 (p / percentage-entity :value (N / N-A)) :arg2 (t / temporal-quantity :quant (N2 / N-A) :unit (y / year)))) :op2 (g / generate-01 :arg0 (a3 / and) :arg1 (t2 / turnover :arg1-of (h / high-02 :degree (m / more :quant (m2 / much)))) :compared-to (n / network :name (n2 / name :op1 (m3 / metcash)) :location (l / location :name (n3 / name :op1 "Eastern" :op2 "States"))))) :arg1 (l2 / lot :domain (s2 / stake)))
(s / say-01 :arg0 (g / government-organization :arg0-of (g2 / govern-01)) :arg1 (c / cause-01 :arg0 (c2 / change-01 :arg0 (g3 / government-organization) :arg1 (a / alia :mod (i / inter))) :arg1 (r / react-01 :arg0 (g4 / government-organization) :arg2 (s2 / situation :time (c3 / current) :mod (e / economy)))))
(a / and :op1 (p / pension :location (c / country :name (n / name :op1 "Czech" :op2 "Republic")) :arg1-of (r / regular-02)) :op2 (r2 / rise-01 :arg1 (a2 / and :op1 (t / thing :arg2-of (p2 / price-01)) :op2 (g / grow-01 :arg1 (w / wage-01) :mod (r3 / real))) :ord (o / ordinal-entity :value 3)))
(f / find-02 :arg0 (w / we) :arg1 (f2 / female :domain (i / it)) :manner (w2 / way :mod (b / biometric) :arg1-of (c / contact-01 :arg0 (e / each :arg1-of (n / need-01)) :arg1-of (r / regular-02))))
(c / collaborate-01 :mode (i / imperative) :arg0 (y / you) :arg1 (i2 / it) :arg2 (a / and :op1 (s / stabilize :arg1 (i3 / it)) :op2 (c2 / contain-00 :arg1 (a2 / adds) :manner (s2 / sickness))) :arg1-of (d / direct-02))
(n / need-01 :arg0 (w / we) :arg1 (t / think-01 :arg0 (w2 / we) :arg1 (t2 / thing :manner-of (r / reduce-01 :arg1 (k / kill-01) :location (c / country :poss (t3 / they))))) :time (f / final))
(t / thrives :arg1 (i / it) :manner (u / unpredictable) :location (g / garden :poss (w / we)))
(a / and :op2 (s / saddled :arg1 (p / person :quant 1) :arg2 (o / or :op1 (s2 / six-inch) :op2 (c / cross-02 :arg1 (g / gold) :mod (m / massive)))))
(s / say-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (o / organization :name (n / name :op1 "Delta" :op2 "State" :op3 "University") :location (p2 / person :name (n2 / name :op1 "Lynn" :op2 "Buford") :arg0-of (h2 / have-org-role-91 :arg1 (o2 / organization) :arg2 (c / chief))) :arg2 (c2 / chief)))) :arg1 (h3 / hear-01 :arg0 (p3 / person :arg0-of (h4 / have-org-role-91 :arg1 (u / university) :arg2 (s2 / staff :mod (u2 / university)))) :arg1 (s3 / shooting)))
(s / say-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (p2 / political-party :name (n / name :op1 "N-A")))) :arg1 (n2 / network :consist-of (l / life :arg1-of (b / black-04)) :domain (n3 / network :consist-of (l2 / life :arg1-of (b2 / black-04)))))
(t / talk-01 :arg0 (s / she) :arg1 (p / practice-01 :manner (d / disciplinary)) :time (m / meantime))
(r / rule-out-02 :polarity - :arg0 (p / person :name (n / name :op1 "Bogdanovskij") :time (v / visit-01 :arg0 (p2 / person) :arg1 (c / country-region :name (n2 / name :op1 "Novosibirsk")))) :arg1 (b / base :mod (a / air) :poss (c2 / country :name (n3 / name :op1 "Syria")) :location (c3 / country :name (n4 / name :op1 "Syria"))) :time (f / future))
(c / contrast-01 :arg1 (r / remain-01 :arg1 (e / employ-01 :polarity - :mod (c2 / country :name (n / name :op1 "UK"))) :arg3 (u / unchanged)) :arg2 (r2 / rise-01 :arg1 (r3 / rate :mod (e2 / employ-01 :polarity -) :mod (o / overall)) :mod (o2 / overall)))
(s / suffer-01 :arg0 (o / organization :name (n / name :op1 "Apple")) :arg1 (e / effect :mod (y / yes-yes)))
(c / come-01 :arg1 (r / recession-02) :time (a / after :op1 (a2 / and :op1 (h / hike :arg1 (r2 / rate :ord (o / ordinal-entity :value 1))) :op2 (l / last-01 :arg1 (r3 / recession-02) :arg2 (t / temporal-quantity :quant (N / N-A) :unit (m / month))))))
(d / disagree-01 :arg0 (w / we) :arg1 (q / quota :arg1 (s / system :arg0-of (w2 / work-01 :polarity - :arg1-of (p / possible-01)))) :arg2 (q2 / quota))
(m / multi-sentence :snt1 (e / except-01 :arg1 (a / and :op1 (i / inform-01 :arg0 (t / they) :arg1 (p / person :arg0-of (h / have-org-role-91 :arg1 (p2 / police) :arg2 (o / officer))) :arg2 (o2 / out-06 :arg1 (p3 / person) :arg2 (a2 / and :op1 (p4 / person :arg0-of (h2 / have-org-role-91 :arg1 (p5 / police) :arg2 (o3 / officer))) :op2 (p6 / person :arg0-of (h3 / have-org-role-91 :arg1 (p7 / police) :arg2 (o4 / officer))) :op3 (p8 / person :arg0-of (h4 / have-org-role-91 :arg1 (p9 / police) :arg2 (o5 / officer))) :op4 (p10 / person :arg0-of (h5 / have-org-role-91 :arg1 (p11 / police) :arg2 (o6 / officer))) :op5 (p12 / person :arg0-of (h6 / have-org-role-91 :arg1 (p13 / police) :arg2 (o7 / officer))) :op6 (p14 / person :arg0-of (h7 / have-org-role-91 :arg1 (p15 / police) :arg2 (o8 / officer))) :op6 (p16 / person :arg0-of (h8 / have-org-role-91 :arg1 (p17 / police) :arg2 (o9 / officer))) :op6 (p18 / person :arg0-of (h9 / have-org-role-91 :arg1 (p19 / police) :arg2 (o10 / officer))) :op6 (p20 / person :arg0-of (h10 / have-org-role-91 :arg1 (p21 / police) :arg2 (o11 / officer))) :op6 (p22 / person :arg0-of (h11 / have-org-role-91 :arg1 (p23 / police) :arg2 (o12 / officer))) :op7 (p24 / person :arg0-of (h12 / have-org-role-91 :arg1 (p25 / police) :arg2 (o13 / officer)))))))) :snt2 (t2 / thing :arg2-of (n / name-01 :arg1 (c / cover-03 :arg0 (i2 / individual)))))
(c / clash :domain (t / this) :time (w / week :mod (l / last)) :location (a / across :op1 (c2 / country :name (n / name :op1 "Nepal"))) :arg1-of (c3 / cause-01 :arg0 (s / say-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (g / group :mod (e / ethnic) :poss (g2 / group)) :arg2 (m / member))) :arg1 (a2 / and :op1 (e2 / establish-01 :arg0 (p2 / person) :arg1 (p3 / province :mod (n2 / new))) :op2 (h2 / have-03 :arg0 (p4 / person) :arg1 (d / digit :mod (p5 / politics) :poss (p6 / person)))))))
(f / find-01 :arg0 (p / person :arg1-of (i / include-91 :arg2 (p2 / person :arg0-of (h / have-org-role-91 :arg1 (o / organization :name (n / name :op1 "University" :op2 "of" :op3 "Quinnipiac")))) :arg3 (p3 / percentage-entity :value (p4 / percentage-entity :value 60)))) :arg1 (p5 / person :name (n2 / name :op1 "Trump")) :mod (p6 / positive) :time (a / after :op1 (v / vote-01 :arg0 (o2 / organization) :arg1 (o3 / organization) :time (w / week :mod (l / last)))))
(p / possible-01 :polarity - :arg1 (d / duel :arg0 (y / you) :arg1 (p2 / person :arg0-of (p3 / play-01) :mod (h / hockey)) :arg2 (p4 / person :arg0-of (p5 / play-01) :mod (h2 / hockey) :quant (3 / 3-5 :mod (h3 / hockey)))) :time (a / after :op1 (l / lose-02 :arg0 (y2 / you) :arg1 (c / championship :location (i / ice)))))
(s / say-01 :arg2 (p / person :name (n / name :op1 "N-A")))
(l / look-01 :arg1 (t / thing :manner-of (r / respond-01 :arg0 (t2 / they) :arg1 (a / area :mod (c / certain) :part-of (e / economy)) :arg1-of (b / base-02 :arg2 (t3 / trend :mod (h / history))))))
(c / contrast-01 :arg2 (n / now :mode (i / interrogative)))
(c / contrast-01 :arg2 (m / make-01 :arg1 1 :polarity -))
(a / announce-01 :arg0 (s / she) :arg1 (h / have-org-role-91 :arg0 (p / person :name (n / name :op1 "Angela" :op2 "Merkel") :arg0-of (h2 / have-org-role-91 :arg2 (c / chancellor))) :arg1 (p2 / person :arg0-of (h3 / have-org-role-91 :arg2 (c2 / chancellor))) :time (a2 / after :op1 (m / meet-03 :arg0 (p3 / person) :arg1 (p4 / premiere :mod (g / german))))))
(a / and :op2 (l / learn-01 :arg0 (i / i) :arg1 (a2 / and :op1 (l2 / lead-03 :polarity - :arg0 (i2 / interference :arg0-of (i3 / interference :arg1 (e / ecosystem))) :arg2 (s / succeed-01 :arg0 (i4 / interference))) :op2 (r / replace-01 :arg1 (p / person :quant 1 :arg0-of (h / have-org-role-91 :arg2 (p2 / pest))) :arg2 (p3 / possible-01 :arg1 (r2 / replace-01 :arg0 (p4 / person :quant 1) :arg1 (p5 / person :ord (o / ordinal-entity :value 2))))))))
(a / and :op2 (t / take-10 :arg0 (a2 / amr-unknown) :arg1 (s / step :arg1-of (s2 / soft-02) :domain (t2 / that)) :mod (e / exact)))
(a / ask-02 :arg0 (h / he) :arg1 (d / die-01 :arg1 (p / person :quant 1 :arg1-of (i / include-91 :arg2 (p2 / person :quant 4 :arg0-of (w / witness-01 :arg1 (d2 / die-01 :arg1 (p3 / person))))))) :arg2 (i2 / i))
(a / and :op1 (s / suspect-01 :polarity - :arg1 (p / person :arg0-of (t / teach-01 :arg1 (s2 / shoot-02 :arg0 (p2 / person) :arg1 (p3 / person :arg0-of (h / have-org-role-91 :arg1 (o / organization :name (n / name :op1 "Delta" :op2 "State" :op3 "University")) :arg2 (p4 / professor :mod (f / favorite)))) :location (p5 / peninsula :name (n2 / name :op1 "N-A"))))) :arg2 (s3 / suspect-01 :arg0 (p6 / person) :arg1 (s4 / shoot-02 :arg0 (p7 / person) :arg1 (p8 / person :name (n3 / name :op1 "Ethan" :op2 "Schmidt") :arg0-of (h2 / have-org-role-91 :arg2 (p9 / professor :mod (f2 / favorite)))) :location (d / doorway :poss (o2 / office :poss (p10 / person)))))))
(f / focus-01 :arg1 (l / launch-01 :arg1 (m / music :mod (c / company :name (n / name :op1 "BBC")))) :arg2 (a / awards :mod (m2 / music :mod (c2 / company))) :time (y / year :mod (l2 / last)) :mod (a2 / also))
(a / and :op1 (r / receive-01 :arg0 (i / i) :arg1 (p / petition-01 :arg0 (i2 / i) :arg2 (p2 / person :arg0-of (h / have-rel-role-91 :arg1 (h2 / he) :arg2 (f / friend :mod (g / good :degree (m / most)))))) :time (f2 / first)) :op2 (a2 / agree-01 :arg0 (i3 / i)))
(s / submits :arg1 (t / thing :location (a / around :op1 (p / person :quant (a2 / around :op1 20000000)))) :arg2 (m / motion :beneficiary (s2 / service :mod (o / online) :mod (t2 / this)) :source (l / location :name (n / name :op1 "Pacific" :op2 "Samoa"))) :time (a3 / after :op1 (t3 / temporal-quantity :quant (N / N-A) :unit (m2 / month) :mod (a4 / almost))))
(c / contrast-01 :arg2 (h / have-polarity-91 :arg2 -))
(c / cause-01 :arg0 (a / arrive-01 :arg1 (t / team :poss (h / he)) :arg4 (n / network) :arg1-of (c2 / cause-01 :arg0 (a2 / arrive-01 :arg1 (t2 / team :poss (h2 / he)) :arg4 (n2 / network) :time (a3 / after :op1 (s / start-01 :arg1 (p / person :name (n3 / name :op1 "Cavani") :ord (o / ordinal-entity :value 2) :ord (o2 / ordinal-entity :value 2) :ord (o3 / ordinal-entity :value 2) :ord (o4 / ordinal-entity :value 2) :ord (o5 / ordinal-entity :value 2) :ord (o6 / ordinal-entity :value 2) :ord (o7 / ordinal-entity :value 2) :ord (o8 / ordinal-entity :value 2) :ord (o9 / ordinal-entity :value 2) :ord (o10 / ordinal-entity :value 2) :ord (o11 / ordinal-entity :value 2) :ord (o12 / ordinal-entity :value 2) :ord (o13 / ordinal-entity :value 2) :ord (o14 / ordinal-entity :value 2))))))) :arg1 (a4 / and :op1 (p2 / pecking :arg0 (t3 / they) :arg1 (a5 / attack-01 :arg1 (t4 / they))) :op2 (f / finish-01 :arg0 (t5 / they) :arg1 (f2 / finish-07 :arg0 (t6 / they) :arg2 (g / good :polarity -) :mod (e / either)))) :arg1-of (i / instead-of-91))
FAILED_TO_PARSE#Two concepts in a row.
(c / contrast-01 :arg2 (d / do-02 :arg1 (i / it) :manner (s / success)))
(t / think-01 :arg0 (i / i) :arg1 (b / believe-01 :arg0 (p / person :name (n / name :op1 "Stephen" :op2 "Thompson")) :arg1 (w / we)))
(p / predict-01 :arg0 (p2 / person :mod (e / economy) :quant (a / about :op1 (1 / 1/2))) :arg1 (i / increase-01 :arg1 (r / rate) :time (w / week :mod (t / this))) :time (r2 / recent))
(m / multi-sentence :snt1 (h / have-org-role-91 :arg0 (h2 / he) :arg2 (m2 / minister :mod (r / right))) :snt2 (a / attempt-01 :mode (i / interrogative) :arg0 (p / person :name (n / name :op1 "Otto" :op2 "von" :op3 "Bismarck") :arg0-of (h3 / have-org-role-91 :arg2 (c / chancellor))) :arg1 (d / dominate-01 :arg0 (p2 / person) :arg1 (c2 / centre :mod (e / entire) :location (c3 / continent :name (n2 / name :op1 "Europe"))))))
(r / remembers :arg0 (h / he) :arg1 (w / want-01 :arg0 (h2 / he) :arg1 (l / live-01 :arg0 (h3 / he) :location (a / and :op1 (d / dignity) :op2 (f / free-04)))) :time (o / once))
(g / game :mod (g2 / good) :mod (o / only) :poss (h / he) :domain (g3 / game :quant 9 :mod (l / last) :poss (h2 / he)))
(s / say-01 :arg0 (h / he) :arg1 (c / contrast-01 :arg1 (s2 / seem-01 :arg1 (u / use-01 :arg0 (i / i) :arg1 (w / word :name (n / name :op1 (d / deafened) :op2 (d2 / deafened))))) :arg2 (s3 / seem-01 :arg1 (u2 / use-01 :arg0 (i2 / i) :arg1 (w2 / word :name (n2 / name :op1 (d3 / deafened) :op2 (d4 / deafened)))))) :arg2 (r / radio :mod (' / '')))
(b / behind :op1 (p / point :mod (g / grow-01)) :location (w / world-region :name (n / name :op1 "Eastern" :op2 "Europe")))
(c / contrast-01 :arg1 (u / use-01 :arg1 (n / nail :mod (l / large :degree (m / more))) :arg2 (m2 / model :mod (l2 / large :degree (m3 / more)))) :arg2 (c2 / change-01 :polarity - :arg0 (p / person :arg0-of (h / have-rel-role-91 :arg2 (d / dd1)))))
(c / contrast-01 :arg1 (f / flavour :polarity - :domain (o / oil) :mod (d / distinctive)) :arg2 (s / say-01 :arg0 (p / person :name (n / name :op1 "Daniel" :op2 "Ortega") :arg0-of (h / have-org-role-91 :arg1 (f2 / firm :part-of (o2 / oven)) :arg2 (o3 / organization :name (n2 / name :op1 "Bohemia" :op2 "Oil")))) :arg1 (o4 / oil) :mod (g / great)))
(c / contrast-01 :arg2 (f / feel-01 :arg0 (f2 / frustrate-01) :arg1 (f3 / frustrate-01)))
(s / say-01 :arg0 (h / he) :arg1 (c / contrast-01 :arg1 (w / want-01 :arg0 (a / and :op1 (v / view-02 :quant 2010) :op2 (t / team :mod (e / every :polarity -))) :arg1 (p / play-01 :arg0 (t2 / team) :arg1 (s2 / style :mod (f / football) :poss (h2 / he))) :time (n / now)) :arg2 (h3 / have-03 :polarity - :arg0 (t3 / team :mod (e2 / every) :example (a2 / and :op1 (p2 / person :name (n2 / name :op1 "Anthony" :op2 "Milford")) :op2 (p3 / person :name (n3 / name :op1 "Ben" :op2 "Hunt")))) :arg1 (p4 / play-01 :polarity - :arg0 (t4 / team) :arg1 (s3 / style)))))
(s / say-01 :arg0 (c / company) :arg1 (p / plan-01 :arg0 (c2 / company) :arg1 (h / hire-01 :arg0 (c3 / company) :arg1 (p2 / person :arg1-of (e / employ-01) :quant (a / about :op1 40000)) :arg2 (a2 / and :op1 (s2 / store) :op2 (c4 / center :arg1-of (d / distribute-01)) :location (a3 / across :op1 (c5 / country)) :arg1-of (l / last-01 :arg2 (s3 / season :quant 45,000 :mod (l2 / last)))))) :mod (a4 / also))
FAILED_TO_PARSE#Two concepts in a row.
(r / refugee :quant 40 :mod (s / still) :time (m / morning :mod (w / wednesday)))
(m / multi-sentence :snt1 (l / lead-01 :arg0 (o / organization :name (n / name :op1 "Hearts" :op2 "Verteidigers")) :arg1-of (l2 / lead-02 :arg0 (a / and :op1 (p / person :name (n2 / name :op1 "Paterson")) :op2 (l3 / lose-02 :time (t / then))))) :snt2 (c / contrast-01 :arg1 (l4 / lose-02 :arg1 (c2 / card :mod (r / red) :poss (p2 / person :name (n3 / name :op1 "Collum"))) :time (l5 / late :degree (m2 / more))) :arg2 (r2 / revoked :arg1 (c3 / card :mod (r3 / red) :poss (p3 / person :name (n4 / name :op1 "Collum"))) :time (l6 / late :degree (m3 / more)))))
(a / and :op2 (c / collects :arg0 (p / person :name (n / name :op1 "Bieber")) :mod (a2 / also)) :mod (a3 / also))
(s / say-01 :arg0 (p / person :name (n / name :op1 "Gyorgy" :op2 "Bakondi") :arg0-of (a / advise-01 :arg1 (s2 / security :mod (c / country)) :arg2 (p2 / person :arg0-of (a2 / advise-01 :arg2 (s3 / security))))) :arg1 (d / deep-02 :arg1 (p3 / person :quant 45 :mod (o / other)) :arg2 (c2 / country) :time (a3 / already) :arg1-of (d2 / deep-02 :degree (m / more)) :time (a4 / already)))
(a / arrest-01 :arg1 (p / police) :time (w / weekend :time (w2 / weekend)) :arg1-of (f / follow-01 :arg2 (a2 / and :op1 (h / hit-01 :arg0 (p2 / police) :arg2 (c / cyclist)) :op2 (r / run-02 :arg0 (p3 / police) :location (l / location :name (n / name :op1 "Cobram"))))))
(a / arrest-01 :arg0 (p / police) :arg1 (m / man) :time (o / over :op1 (w / weekend)) :time (a2 / after :op1 (e / expel-01 :arg0 (p2 / police) :arg1 (p3 / person :arg0-of (d / drive-01)) :location (l / location :name (n / name :op1 "Cobram")))))
(a / affect-01 :arg0 (t / turmoil) :arg1 (c / complex) :time (r / recommend-01 :arg1 (r2 / raise-01 :arg0 (t2 / they) :arg1 (r3 / rate :mod (i / interest)))))
(s / say-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (o / organization :name (n / name :op1 "SAP") :arg0-of (h2 / have-org-role-91 :arg1 (p2 / person :name (n2 / name :op1 "Hasso" :op2 "Plattner") :arg0-of (h3 / have-org-role-91 :arg1 (o2 / organization) :arg3 (l / lead-02 :arg0 (p3 / person)))) :arg2 (c / co-founder)))) :arg0-of (h4 / have-org-role-91 :arg1 (o3 / organization) :arg3 (l2 / lead-02 :arg0 (p4 / person) :arg1 (o4 / organization))) :arg0-of (h5 / have-org-role-91 :arg1 (o5 / organization) :arg3 (c2 / co-founder)) :arg0-of (h6 / have-org-role-91 :arg1 (o6 / organization) :arg3 (c3 / co-founder)) :arg0-of (h7 / have-org-role-91 :arg1 (o7 / organization) :arg3 (c4 / co-founder)) :arg0-of (h8 / have-org-role-91 :arg1 (o8 / organization) :arg3 (c5 / co-founder)) :arg0-of (h9 / have-org-role-91 :arg1 (o9 / organization) :arg3 (c6 / co-founder)) :arg0-of (h10 / have-org-role-91 :arg1 (o10 / organization) :arg3 (c7 / co-founder)) :arg0-of (h11 / have-org-role-91 :arg1 (o11 / organization) :arg3 (c8 / co-founder)) :arg0-of (h12 / have-org-role-91 :arg1 (o12 / organization) :arg3 (c9 / co-founder)) :arg0-of (h13 / have-org-role-91 :arg1 (o13 / organization) :arg3 (c10 / co-founder)) :arg0-of (h14 / have-org-role-91 :arg1 (o14 / organization) :arg3 (c11 / co-founder)) :arg0-of (h15 / have-org-role-91 :arg1 (o15 / organization) :arg3 (c12 / co-founder)) :arg0-of (h16 / have-org-role-91 :arg1 (o16 / organization) :arg3 (c13 / co-founder)) :arg0-of (h17 / have-org-role-91 :arg1 (o17 / organization) :arg3 (c14 / co-founder)) :arg0-of (h18 / have-org-role-91 :arg1 (o18 / organization) :arg3 (c15 / co-founder)) :arg0-of (h19 / have-org-role-91 :arg1 (o19 / organization) :arg3 (c16 / co-founder)) :arg0-of (h20 / have-org-role-91 :arg1 (o20 / organization) :arg3 (c17 / co-founder)) :arg0-of (h21 / have-org-role-91 :arg1 (o21 / organization) :arg3 (c18 / co-founder)) :arg0-of (h22 / have-org-role-91 :arg1 (o22 / organization) :arg3 (c19 / co-founder)) :arg0-of (h23 / have-org-role-91 :arg1 (o23 / organization) :arg3 (c20 / co-founder)) :arg0-of (h24 / have-org-role-91 :arg1 (o24 / organization) :arg3 (c21 / co-founder)) :arg0-of (h25 / have-org-role-91 :arg1 (o25 / organization) :arg3 (c22 / co-founder)) :arg0-of (h26 / have-org-role-91 :arg1 (o26 / organization) :arg3 (c23 / co-founder)) :arg0-of (h27 / have-org-role-91 :arg1 (o27 / organization) :arg3 (c24 / co-founder)) :arg0-of (h28 / have-org-role-91 :arg1 (o28 / organization) :arg3 (c25 / co-founder)) :arg0-of (h29 / have-org-role-91 :arg1 (o29 / organization) :arg3 (c26 / co-founder)) :arg0-of (h30 / have-org-role-91 :arg1 (o30 / organization) :arg3 (c27 / co-founder)) :arg0-of (h31 / have-org-role-91 :arg1 (o31 / organization) :arg3 (c28 / co-founder)) :arg0-of (h32 / have-org-role-91 :arg1 (o32 / organization) :arg3 (c29 / co-founder)) :arg0-of (h33 / have-org-role-91 :arg1 (o33 / organization) :arg3 (c30 / co-founder)) :arg0-of (h34 / have-org-role-91 :arg1 (o34 / organization) :arg3 (c31 / co-founder))))
(s / shape :arg1 (p / plan-01 :arg1 (s2 / settlement :mod (h / holiday) :location (l / location :name (n / name :op1 "Small" :op2 "Sea")))))
(r / ready-02 :polarity - :arg1 (p / person :arg0-of (d / drive-01 :arg1 (c / car))) :arg2 (r2 / rely-01 :arg0 (p2 / person) :arg1 (v / vehicle :mod (s / self-propelled)) :location (c2 / country :name (n / name :op1 "Germany")) :arg1-of (c3 / complete-02)) :mod (a / anyway))
(r / ready-02 :polarity - :arg1 (p / person :arg0-of (d / drive-01) :location (c / country :name (n / name :op1 "Germany"))) :arg2 (r2 / rely-01 :arg0 (p2 / person) :arg1 (v / vehicle :mod (s / self-propelled)) :arg1-of (c2 / complete-02)) :mod (a / anyway))
(c / cause-01 :arg1 (p / possible-01 :arg1 (s / shift-01 :arg0 (i / it) :arg1 (r / route :mod (w / world-region :name (n / name :op1 "Balkan") :mod (p2 / previous))) :arg2 (a / and :op1 (c2 / country :name (n2 / name :op1 "Turkey")) :op2 (c3 / country :name (n3 / name :op1 "Greece")) :op3 (c4 / country :name (n4 / name :op1 "Macedonia")) :op4 (c5 / country :name (n5 / name :op1 "Serbia")) :op5 (c6 / country :name (n6 / name :op1 "Hungary"))) :time (a2 / already) :arg1-of (p3 / predict-01 :arg0 (p4 / person :arg0-of (o / observe-01)) :arg2 (c7 / come-01 :arg1 (r2 / route :mod (f / further :degree (l / little))))))))
(p / present-01 :arg1 (p2 / person :arg0-of (i / invest-01)) :arg2 (p3 / plan-01 :arg1 (p4 / project) :ord (o / ordinal-entity :value 1)) :arg1-of (p5 / public-02))
FAILED_TO_PARSE#Two concepts in a row.
(a / and :op1 (p / person :name (n / name :op1 "Matt" :op2 "Lever") :arg0-of (h / have-org-role-91 :arg2 (d / director))) :op2 (p2 / person :arg0-of (h2 / have-org-role-91 :arg2 (d2 / director))) :op3 (p3 / person :arg0-of (h3 / have-org-role-91 :arg2 (d3 / director))) :op4 (p4 / person :arg0-of (h4 / have-org-role-91 :arg2 (d4 / director))) :op5 (p5 / person :arg0-of (h5 / have-org-role-91 :arg2 (d5 / director))))
(p / play-02 :arg0 (p2 / person :name (n / name :op1 "Matt" :op2 "Damon")) :arg1 (d / diversity :topic (c / create-01 :arg1 (f / film))))
(a / announce-01 :arg0 (h / he) :arg1 (c / change-01 :arg1 (p / position :mod (g / goalkeeper))))
(h / have-concession-91 :arg2 (q / question-03 :arg0 (p / person :arg0-of (v / vote-01 :arg1 (d / democracy))) :arg1 (q2 / question-01 :arg1 (o / over :op1 (e / eligibility))) :degree (m / more)) :arg1-of (h2 / have-concession-91))
(a / and :op1 (a2 / attack-01 :arg0 (o / organization :name (n / name :op1 "Lancet") :mod (j / journal :mod (m / medicine))) :arg1 (t / thing :arg1-of (b / base-02 :arg2 (n2 / name :op1 (' / '')))) :time (m2 / month :mod (l / last)) :time (m3 / month :mod (l2 / last))) :op2 (c / conclude-01 :arg0 (h / he) :arg1 (c2 / conclude-01 :arg0 (h2 / he) :mod (m4 / main))))
(a / attack-01 :arg1 (o / organization :name (n / name :op1 "Lancet") :mod (j / journal :mod (m / medicine))) :time (m2 / month :mod (l / last)) :arg1-of (b / base-02 :arg2 (e / explain-01 :arg1 (e2 / explain-01 :arg0 (h / he) :arg1 (c / conclude-01 :arg0 (h2 / he) :mod (m3 / main))))))
(a / agree-01 :arg0 (i / i) :arg1 (w / way :mod (g / good) :manner-of (t / tell-01 :arg1 (s / story :mod (w2 / whole) :topic (p / penalize-01 :manner (d / die-01))) :domain (i2 / it))))
(f / find-01 :arg0 (p / person :name (n / name :op1 "Carson") :arg0-of (h / have-org-role-91 :arg1 (o / organization :name (n2 / name :op1 "Trump")))) :arg1 (p2 / page :mod (s / some)) :arg3 (n3 / neurosurgeon :time (f2 / former)) :time (a / after :op1 (a2 / apologize-01 :arg0 (p3 / person) :arg1 (q / question-03 :arg0 (p4 / person) :arg1 (f3 / faith :poss (o2 / organization) :topic (q2 / question-01))))))
(f / find-01 :arg0 (p / person :arg0-of (v / view-01 :arg1 (p2 / person :name (n / name :op1 "Carson") :arg1-of (r / rise-01)) :time (w / week :mod (l / last)))) :arg1 (s / side-01 :arg0 (o / organization :name (n2 / name :op1 "Trump")) :arg1 (s2 / side :mod (s3 / some)) :time (f2 / former)) :time (a / after :op1 (a2 / apologize-01 :arg0 (p3 / person) :arg1 (t / that) :arg2 (f3 / faith :poss (o2 / organization) :topic (q / question-01)))))
(p / person :arg0-of (l / lead-02 :arg1 (p2 / political-party :name (n / name :op1 "Labour" :op2 "Party"))) :ord (o / ordinal-entity :value 5) :arg0-of (f / face-01 :arg1 (p3 / person :name (n2 / name :op1 "David" :op2 "Cameron")) :time (s / since :op1 (t / tory-leader :arg1 (p4 / person) :time (d / decade :mod (l2 / last)) :location (p5 / parliament)))) :domain (p6 / person))
(s / sit-01 :arg1 (p / person :name (n / name :op1 "Sufjan" :op2 "Stevens")) :arg2 (s2 / stage :location (o / organization :name (n2 / name :op1 "Cologne" :op2 "Prime" :op3 "Club"))) :time (b / before :op1 (n3 / now) :quant (t / temporal-quantity :quant (N / N-A) :unit (y / year))))
(s / say-01 :arg0 (p / person :name (n / name :op1 "Xi" :op2 "Jinping") :arg0-of (h / have-org-role-91 :arg2 (p2 / president))) :arg1 (n2 / need-01 :arg0 (e / economy) :arg1 (o / open-up-03 :arg0 (e2 / economy) :arg1 (w / world :mod (o2 / outside)) :degree (m / more) :compared-to (w2 / world :mod (o3 / outside)) :purpose (p3 / promote-02 :arg0 (e3 / economy) :arg1 (g / grow-01)))) :arg1-of (s2 / say-01 :arg0 (p4 / person :arg0-of (h2 / have-org-role-91 :arg2 (p5 / president)))) :arg1-of (s3 / say-01 :arg0 (p6 / person :arg0-of (h3 / have-org-role-91 :arg2 (p7 / president)))))
(a / add-01 :arg0 (o / organization :name (n / name :op1 "Blackstone")) :arg1 (r / recommend-01 :arg1 (s / start-01 :arg0 (a2 / and :op1 (p / person) :op2 (d / doctor :poss (a3 / and))) :arg1 (t / take-01 :arg0 (a4 / and) :arg1 (w / weight :mod (s2 / serious)))) :time (o2 / once :op1 (h / have-rel-role-91 :arg0 (a5 / and) :arg1 (p2 / person :quant 27) :arg2 (p3 / patient)))))
(l / lack-01 :arg0 (a / access-01 :arg1 (m / market :mod (l2 / labour))) :arg1 (t / thing :arg1-of (k / know-02 :arg2 (m2 / market :mod (l3 / labour)))) :mod (b / big))
(l / lack-01 :arg0 (p / person :mod (c / country :name (n / name :op1 "N-A"))) :arg1 (t / thing :arg1-of (a / access-01 :arg0 (m / market :mod (p2 / political-party :name (n2 / name :op1 "N-A")))) :arg1-of (m2 / major-02)))
(b / bone :polarity - :domain (i / it) :mod (a / as-well))
(b / bone :polarity - :domain (i / it) :mod (a / as-well))
(b / bone :domain (i / it) :mod (a / as-well))
(m / multi-sentence :snt1 (c / cause-01 :arg0 (m2 / market-01 :arg1 (m3 / market :arg0-of (h / house-01))) :arg1 (a / adult :mod (y / young)) :arg1-of (c2 / cause-01 :arg0 (m4 / market :arg0-of (h2 / house-01)) :time (n / no-longer))) :snt2 (' / '' :mode (e / expressive)))
(s / special-02 :arg1 (p / play-01 :arg0 (t / team :poss (w / we)) :prep-against (s2 / side :mod (d / division :ord (o / ordinal-entity :value 3)))))
(s / something :domain (p / play-01 :arg1 (t / team :consist-of (d / division :ord (o / ordinal-entity :value 3)))) :arg1-of (s2 / special-02))
(f / fall-01 :arg1 (e / euro) :arg4 (u / under :op1 (m / monetary-quantity :quant 1.1262 :unit (d / dollar) :mod (l / last))))
(p / predominate :arg0 (m / man) :arg1 (s / staff) :time (m2 / moment))
(( / ( :( (n / name) :op1 "Peißenberg")
(s / stress-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg2 (c / chancellor))) :arg1 (o / obligate-01 :arg2 (c2 / cope-01 :arg0 (s2 / state :mod (w / whole)) :arg1 (e / effort :mod (h2 / huge) :mod (h3 / huge :mod (' / ''))) :time (n / now))))
(r / recommend-01 :arg0 (j / jury :mod (g / grand) :location (l / location :name (n / name :op1 "Monroe" :op2 "County"))) :arg1 (c / charge-05 :arg1 (p / person :arg0-of (m / murder-01) :ord (o / ordinal-entity :value 3)) :arg2 (m2 / murder-01) :ord (o2 / ordinal-entity :value 3)))
(l / lead-03 :arg0 (m / move-02) :arg2 (c / charge-01 :arg2 (a / about :op1 (m2 / monetary-quantity :quant 2.7 :unit (d / dollar)) :arg1-of (s / suitable-04 :arg2 (p / percentage-entity :value (N / N-A)))) :mod (e / exceptional)))
(i / include-91 :arg1 (g / guy :quant 1 :arg1-of (i2 / include-91 :arg2 (g2 / guy :arg0-of (b / bring-01 :arg1 (w / wealth :arg1-of (e / experience-01)))))) :arg2 (g3 / guy) :arg1-of (c / cause-01 :arg0 (p / play-11 :arg0 (h / he) :arg2 (c2 / condition :quant (a / all))) :arg1-of (c3 / cause-01 :arg0 (p2 / play-11 :arg0 (h2 / he) :arg2 (c4 / condition :quant (a2 / all))))))
(a / and :op1 (i / interest-01 :arg1 (h / he) :arg2 (w / woman :arg1-of (s / strong-02)) :time (a2 / always)) :op2 (s2 / smarter :arg0 (w2 / woman :arg1-of (d / differ-02 :degree (b / bit))) :arg1 (w3 / woman)))
(p / publish-01 :arg1 (c / choose-01 :arg0 (s / she) :arg1 (p2 / person :name (n / name :op1 "Sam" :op2 "Wood")) :ord (o / ordinal-entity :value 1)) :mod (o2 / original))
(s / say-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (o / organization :name (n / name :op1 "University")) :arg2 (p2 / president))) :arg1 (k / know-01 :arg0 (p3 / person :name (n2 / name :op1 "William" :op2 "LaForge")) :arg1 (c / conflict-01 :arg0 (a / and :op1 (l / lamb) :op2 (p4 / person :name (n3 / name :op1 "Schmidt"))) :arg1 (c2 / conflict-01 :arg0 (a2 / and :op1 (l2 / lamb) :op2 (p5 / person :name (n4 / name :op1 "Schmidt")))))))
(s / show-01 :arg0 (s2 / show-04 :arg1 (b / breakfast) :source (o / organization :name (n / name :op1 "9")) :source (a / air :poss (o2 / organization))) :arg1 (f / fall :poss (p / person :name (n2 / name :op1 "Tony" :op2 "Abbott"))))
FAILED_TO_PARSE#Couldn't convert to full AMR graph.
(s / see-01 :arg0 (p / person :arg1-of (i / include-91 :arg2 (p2 / person :arg0-of (r / republican)) :arg3 (m / majority))) :arg1 (p3 / problem :polarity - :domain (t / temperament :poss (p4 / person :name (n / name :op1 "Trump")))))
(b / be-located-at-91 :arg1 (a / and :op1 (p / person :arg0-of (u / undergo-28 :arg1 (p2 / publication :name (n / name :op1 "N-A")) :arg2 (s / surgery-01 :arg1 (o / obesity)))) :op2 (l / likely-01 :arg1 (d / die-01 :arg1 (p3 / person :arg0-of (u2 / undergo-28 :arg1 (w / worship-place :name (n2 / name :op1 "N-A"))))))) :arg2 (p4 / person :arg0-of (u3 / undergo-28 :arg1 (p5 / person) :arg2 (s2 / surgery-01 :arg1 (w2 / worship-place :name (n3 / name :op1 "N-A"))))) :time (a2 / after :op1 (n4 / now) :quant (a3 / about :op1 (t / temporal-quantity :quant (N / N-A) :unit (y / year)))) :arg1-of (c / compare-01 :arg2 (g / group :arg0-of (t2 / try-01 :arg1 (m / method :mod (c2 / conventional) :quant (m2 / more))))))
(b / believe-01 :arg0 (p / person :arg0-of (v / vote-01 :arg1 (o / organization :name (n / name :op1 "Trump" :op2 "Republican")))) :arg1 (r / real :domain (p2 / person)) :condition (p3 / put-01 :arg0 (t / they) :arg1 (p4 / person :arg0-of (h / have-org-role-91 :arg1 (s / scholar :poss (p5 / person)) :arg2 (h2 / hats)))))
(a / and :op1 (b / ban-01 :arg0 (o / organization :name (n / name :op1 "Baruch" :op2 "College")) :arg1 (o2 / organization :name (n2 / name :op1 "Brotherhood"))) :op2 (r / revoked :arg0 (f / fraternity :mod (n3 / nation)) :arg1 (p / person) :arg2 (g / group)))
(s / say-01 :arg2 (p / person :name (n / name :op1 "Tim" :op2 "Wiese")))
(d / decline-01 :arg1 (n / number :quant-of (a / area-quantity :quant (N / N-A) :unit (d2 / dollar :mod (s / square)))) :time (y / year :mod (r / recent)) :time (o / ordinal-entity :value 1) :location (c / city))
(s / say-01 :arg0 (t / thing :arg1-of (s2 / state-01)) :arg1 (l / lead-03 :arg0 (c / cut-02 :arg1 (j / job) :arg1-of (e / expect-01)) :arg2 (l2 / load :quant (l3 / load) :mod (m / more-than :op1 (m2 / monetary-quantity :quant 2.7 :unit (d / dollar))))) :medium (s3 / statement))
(a / and :op1 (t / terminated :arg0 (p / person :name (n / name :op1 "Wilshere")) :arg1 (p2 / problem :time (c / current) :mod (t2 / this)) :arg1-of (s / strong-02) :time (a2 / after :op1 (i / injure-01 :arg1 (p3 / person :arg0-of (i2 / injure-01 :arg1-of (s2 / separate-02))) :mod (a3 / again :mod (l / last))))) :op2 (f / find-01 :arg0 (p4 / person) :arg1 (w / way :direction (b / back) :mod (b2 / back)) :time (t3 / then)))
(h / have-03 :arg0 (p / person :name (n / name :op1 "Konrad")) :arg1 (h2 / hand :quant (a / all)) :purpose (t / transfer-01 :arg0 (p2 / person) :arg1 (r / refugee)))
(o / obligate-01 :arg1 (p / person :name (n / name :op1 "Konrad")) :arg2 (d / do-02 :arg0 (p2 / person) :arg1 (h / hand :quant (a / all)) :arg2 (a2 / accommodation :mod (r / refugee)) :degree (f / full)))
(g / great :domain (s / start-01 :arg0 (c / club :quant 36 :instrument-of (l / license-01)) :arg1 (p / project :poss (c2 / club)) :location (p2 / place :poss (c3 / club))) :degree (g2 / great))
FAILED_TO_PARSE#Number of opening and closing brackets doesn't match.
(a / and :op2 (a2 / appear-01 :arg1 (o / organization :name (n / name :op1 "Astra") :location (o2 / organization :name (n2 / name :op1 "IAA") :location (o3 / organization :name (n3 / name :op1 "IAA") :mod (n4 / new))))))
(a / add-01 :arg0 (h / he) :arg1 (p / possible-01 :arg1 (a2 / and :op1 (m / muscle :domain (a3 / application :mod (o / other))) :op2 (i / insulin-producing :arg1 (c / cell)))))
(a / and :op1 (l / lack-01 :arg1 (p / person :name (n / name :op1 "Timo")) :mod (a2 / also) :time (t / time :mod (t2 / that))) :op2 (b / become-01 :arg1 (w / we) :arg2 (c / champions :arg1 (c2 / continent :name (n2 / name :op1 "Europe")))))
(m / multi-sentence :snt1 (t / thing :arg1-of (a / announce-01) :mod (i / important) :arg1-of (m2 / mean-01 :arg2 (g / go-06 :arg1 (t2 / thing :quant 15 :arg1-of (m3 / mean-01 :arg2 (d / date-entity :month 9 :day 18))) :arg2 (d2 / date-entity :month 9 :day 18)))) :snt2 (a2 / and :op1 (r / reads :arg1 (a3 / and :op1 (r2 / railway :mod (r3 / railway :arg1-of (l / light-06))) :op2 (t3 / thing :quant 1)) :location (c / character :poss (a4 / and :op1 (l2 / location :name (n / name :op1 "London" :op2 "Underground")) :op2 (o / organization :name (n2 / name :op1 "DLR"))) :arg0-of (c2 / converts :arg1 (i2 / image :poss (t4 / tank)))))))
(s / say-01 :arg0 (p / police) :arg1 (a / and :op1 (c / call-01 :arg0 (p2 / person :arg0-of (h / have-org-role-91 :arg1 (o / organization :name (n / name :op1 "Delta" :op2 "PSI")) :arg2 (m / member))) :arg1 (n2 / number :mod (e / emergency)) :arg2 (n3 / number :mod (e2 / emergency)) :time (a2 / after :op1 (p3 / person :name (n4 / name :op1 "Deng") :arg0-of (h2 / have-org-role-91 :arg1 (o2 / organization) :arg2 (m2 / member))))) :op2 (w / wait-01 :arg1 (p4 / person) :arg2 (h3 / hospital) :time (b / before :op1 (b2 / bring-01 :arg0 (p5 / person) :arg1 (p6 / person) :arg2 (h4 / hospital))))))
(a / and :op1 (s / stake :quant (l / lot)) :op2 (a2 / account-01 :arg1 (p / percentage-entity :value (N / N-A) :arg3-of (i / include-91 :arg2 (s2 / shop :mod (o / organization :name (n / name :op1 "Metcashs" :op2 "IGA")))))) :op3 (g / generate-01 :arg0 (a3 / and) :arg1 (p2 / profit :arg1-of (h / high-02 :degree (m / more) :compared-to (p3 / profit-01 :arg0 (o2 / organization :name (n2 / name :op1 "Metcashs" :op2 "Oststaaten" :op3 "IGA")))))))
(s / suffer-01 :arg0 (p / person :name (n / name :op1 "Luke" :op2 "Shaw")) :arg1 (f / fracture :arg1 (l / leg :part-of (h / he)) :mod (d / double)) :arg1-of (c / cause-01 :arg0 (d2 / defeat-01 :arg1 (c2 / city :name (n2 / name :op1 "Manchester") :arg0-of (h2 / have-org-role-91 :arg1 (o / organization :name (n3 / name :op1 "PSV" :op2 "Eindhoven")))))))
(g / game :mod (b / ball) :domain (t / this) :arg1-of (w / want-01 :arg0 (y / you) :arg1-of (w2 / want-01 :arg0 (y2 / you))) :condition (h / have-03 :arg0 (y3 / you) :arg1 (p / person :arg0-of (p2 / play-01) :mod (k / kind :mod (t2 / this)))))
(i / invites :arg1 (p / person :name (n / name :op1 "Dean") :arg0-of (h / have-org-role-91 :arg2 (i2 / invites))) :arg3 (s / score-entity :op1 17 :op2 8.00) :arg4 (i3 / idea :poss (p2 / person)) :time (d / date-entity :day 20 :month 9 :year (N / N-A)))
(s / set-01 :arg0 (h / heart :part-of (h2 / heart)) :arg2 (b / battle-01 :arg0 (h3 / heart) :arg1 (c / comment-01 :arg0 (p / person :name (n / name :op1 "Neilson")))))
(c / contrast-01 :arg1 (c2 / cause-01 :arg1 (h / have-03 :arg0 (y / you) :arg1 (s / stand :mod (w / whisky) :mod (a / around)) :location (a2 / around))) :arg2 (a3 / and :op1 (l / leave-15 :arg0 (p / person) :arg1 (h2 / hand :mod (t / this)) :arg1-of (c3 / cause-01 :arg0 (r / reach-01 :arg0 (p2 / person) :arg1 (h3 / hand :part-of (c4 / child))))) :op2 (h4 / have-condition-91 :arg1 (w2 / way :manner-of (c5 / consume-01 :arg1 (a4 / alcohol :quant (l2 / lot)))) :arg2 (c6 / come-out-09 :arg1 (c7 / child)))))
(h / have-03 :arg0 (p / person :mod (s / seven)) :arg1 (r / result :arg3-of (m / mix-01)) :time (e / evening :time (e2 / evening)) :source (l / location :name (n / name :op1 "Chase" :op2 "Australia")))
(k / kill-01 :arg1 (p / person :quant 4) :time (a / after :op1 (f / fire-01 :arg0 (p2 / police) :arg1 (c / cat :name (n / name :op1 (f2 / fire) :op2 (r / rubber) :op3 (r2 / rubber))) :location (d / demonstrators :location (c2 / country :name (n2 / name :op1 "Nepal"))))))
(e / early :degree (t / too) :domain (s / say-01 :arg1 (s2 / say-01 :arg0 (p / person :arg0-of (r / receive-01 :arg1 (m / medicine :mod (n / non-surgical)))) :arg1 (p2 / person :arg0-of (r2 / receive-01 :arg1 (m2 / medicine :mod (n2 / non-surgical)))) :degree (m3 / more :degree (s3 / slight)))) :mod (s4 / still) :mod (s5 / still))
(m / multi-sentence :snt1 (c / changed :arg0 (p / person :arg0-of (v / visit-01 :arg1 (' / '' :name (n / name :op1 (e / exhibition) :op2 ('2 / '') :op3 ('3 / '') :op4 ('4 / '') :op5 ('5 / '') :op6 ('6 / '') :op7 (- / -rrb-))))) :arg1 (a / attitude :mod (n2 / negative :mod (i / initial)) :poss (p2 / person)) :arg2 (l / look-01 :arg0 (p3 / person) :arg1 (p4 / person :poss (p5 / person)))) :snt2 (p6 / possible-01 :arg1 (a2 / attitude :mod (n3 / negative :mod (i2 / initial)) :poss (h / he)) :topic (l2 / look-01 :arg0 (h2 / he) :arg1 (p7 / person :poss (h3 / he)))))
(s / say-01 :arg0 (p / person :name (n / name :op1 "Mr" :op2 "Smith") :arg0-of (h / have-org-role-91 :arg1 (a / and :op1 (p2 / person :arg0-of (h2 / have-org-role-91 :arg2 (m / minister :mod (l / labor)))) :op2 (p3 / person :arg0-of (h3 / have-org-role-91 :arg2 (m2 / minister :mod (l2 / labor)))) :op3 (p4 / person :arg0-of (h4 / have-org-role-91 :arg2 (m3 / minister :mod (p5 / pension))))))) :arg1 (o / oppose-01 :arg0 (p6 / party) :arg1 (p7 / plan-01 :arg0 (g / government-organization) :arg1 (c / cut-off-04 :arg0 (g2 / government-organization) :arg1 (l3 / limit-01 :arg1 (m4 / monetary-quantity :quant 26000 :unit (y / yuan)) :arg2 (m5 / monetary-quantity :quant 23,000 :unit (y2 / yuan))) :mod (o2 / only))) :arg1-of (c2 / clear-06 :degree (v / very))) :duration (t / temporal-quantity :quant (N / N-A) :unit (h5 / hour)))
(s / say-01 :arg0 (p / person :name (n / name :op1 "Goldman")) :arg1 (l / lose-02 :arg1 (e / enterprise :prep-with (p2 / portion :part-of (i / interest :mod (f / flexible)) :arg1-of (h / high-02))) :degree (m / most)))
(p / person :arg1-of (m / miss-01) :source (c / crime-02 :mod (v / violent)) :source (c2 / crime-02 :mod (v2 / violent)))
FAILED_TO_PARSE#Two concepts in a row.
(c / country :polarity - :arg0-of (h / have-org-role-91 :arg1 (o / organization :name (n / name :op1 "EU") :poss (c2 / country))) :mod (y / yet) :time (y2 / yet))
(s / say-01 :arg1 (t / try-01 :arg0 (i / i) :arg1 (a / and :op1 (k / keep-01 :arg0 (i2 / i) :arg1 (b / balance-01)) :op2 (n / need-01 :arg0 (p / person :arg0-of (p2 / play-01)) :arg1 (t2 / take-01 :arg0 (p3 / person) :arg1 (b2 / breather :mod (l / little)))))) :arg2 (p4 / person :name (n2 / name :op1 "Wenger")))
(2 / 29-year-old :arg1 (l / location :name (n / name :op1 "Gotha") :location (d / district :mod (d2 / district))))
(a / and :op1 (t / turn-02 :arg1 (h / hill :mod (s / so)) :arg2 (d / down)) :op2 (s2 / search-01 :arg1 (s3 / space :mod (n / new))) :op3 (r / request-01 :arg1 (p / permit-01 :arg1 (b / build-01))) :time (n2 / now))
(b / belong-01 :arg0 (p / person :name (n / name :op1 "Godefroid")) :arg1 (t / team :consist-of (a / and :op1 (w / woman :quant 45 :arg1-of (i / include-91 :arg2 (w2 / woman :quant 45))) :op2 (m / man :quant 43 :arg0-of (h / have-rel-role-91 :arg1 (m2 / man) :arg2 (p2 / patient))) :op3 (m3 / man :quant 2 :arg0-of (h2 / have-rel-role-91 :arg1 (m4 / man) :arg2 (p3 / patient))) :op4 (p4 / person :arg0-of (h3 / have-rel-role-91 :arg1 (m5 / man) :arg2 (p5 / patient))) :op5 (p6 / person :name (n2 / name :op1 "Vincent") :arg0-of (h4 / have-rel-role-91 :arg1 (m6 / man) :arg2 (b2 / brother))))))
(w / wait-01 :arg1 (p / person :quant (a / about :op1 1400)) :arg2 (j / journey :arg0 (p2 / person) :arg2 (c / country :name (n / name :op1 "Germany"))) :location (l / location :name (n2 / name :op1 "Salzburg")))
(b / be-located-at-91 :arg1 (s / store :mod (i / industry) :location (c / city :name (n / name :op1 "Los" :op2 "Angeles") :location (a / and :op1 (s2 / sea :name (n2 / name :op1 "N-A")) :op2 (d / downtown)) :quant (f / few))) :arg2 (a2 / away :op1 (b2 / block :mod (i2 / industry) :location (a3 / and :op1 (s3 / sea :name (n3 / name :op1 "N-A")) :op2 (d2 / downtown)))))
(o / offer-01 :arg0 (i / it) :arg1 (p / perspective :mod (u / unique)))
(s / sad-02 :arg1 (p / place) :degree (v / very) :condition (l / leave-11 :arg0 (p2 / person :arg0-of (p3 / play-01)) :arg1 (i / injure-01 :mod (t / type) :mod (t2 / this))))
(p / possible-01 :arg1 (l / lead-03 :arg0 (s / spritzer :quant (f / few)) :arg2 (p2 / poisoning :arg1 (a / alcohol)) :time (a2 / already)) :mod (e / especially))
(p / possible-01 :arg1 (c / cause-01 :arg0 (b / blog :mod (p2 / particular)) :arg1 (s / splashes :consist-of (a / alcohol) :quant (f / few))))
(p / possible-01 :arg1 (l / lead-03 :arg0 (s / splashes :quant (f / few) :mod (j / just)) :arg2 (p2 / poisoning :arg1 (a / alcohol))) :mod (p3 / particular))
(m / multi-sentence :snt1 (l / look-01 :mode (i / imperative) :arg0 (y / you) :arg1 (c / club :mod (s / small :degree (m2 / more)))) :snt2 (s2 / show-01 :arg0 (s3 / stage) :arg1 (s4 / spectacle :arg1 (a / and :op1 (b / bands :mod (b2 / bands)) :op2 (s5 / stage :name (n / name :op1 (f / fluorine)) :mod (l2 / large))))))
(s / show-01 :arg0 (s2 / stage) :arg1 (b / be-located-at-91 :arg1 (a / and :op1 (p / person :arg0-of (h / have-org-role-91 :arg2 (h2 / head-of-state))) :op2 (p2 / person :name (n / name :op1 "Bühnendeko") :arg0-of (h3 / have-org-role-91 :arg2 (f / fluorescent :mod (l / large))))) :arg2 (h4 / here) :manner (c / colorful)) :time (s3 / since :op1 (e / emerge-02 :arg0 (c2 / club :mod (s4 / small :degree (m / more))))))
(p / possible-01 :arg1 (t / think-01 :arg0 (p2 / person) :arg1 (b / be-located-at-91 :arg1 (i / it) :arg2 (t2 / there))))
(r / result-01 :arg2 (r2 / result :arg1 (h / hair :part-of (h2 / hair)) :location (l / location :name (n / name :op1 "Föhntälern")) :prep-with (a / and :op1 (g / gusts :quant (b / between :op1 60 :op2 100)) :op2 (c / case :arg1-of (i / isolate-01)) :op3 (p / province :name (n2 / name :op1 "Canton") :quant (s / some :op1 100)) :mod (e / especially))) :prep-in (r3 / result-01))
(c / cause-01 :arg0 (e / extend-01 :arg1 (a / association :mod (f / football) :mod (g / german)) :arg2 (i / initiative :name (n / name :op1 (' / '')) :mod (r / refugee)) :purpose (w / welcome-01 :arg1 (p / person :arg1-of (w2 / welcome-01)) :arg2 (t / temporal-quantity :quant (N / N-A) :unit (y / year)))) :arg1 (e2 / extend-01 :arg1 (a2 / association :mod (f2 / football) :mod (g2 / german))))
(r / report-01 :arg1 (l / lose-02 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (o / organization :name (n / name :op1 "SAP")) :arg2 (e / executive :mod (c / chief)))) :arg1 (e2 / eye) :prep-in (a / accident)))
(h / hold-04 :arg1 (y / year :mod (t / this)) :location (c / country :name (n / name :op1 "Germany")) :time (y2 / year :mod (t2 / this)) :arg1-of (c2 / compare-01))
(a / appreciate-02 :arg0 (a2 / and :op1 (t / thing :arg2-of (v / value-01 :arg1 (s / system :arg0-of (a3 / assist-01 :arg1 (p / person :arg0-of (d / drive-01)))))) :op2 (d2 / drive-02 :arg1 (n / negotiators :location (c / country :name (n2 / name :op1 "Germany"))) :manner (a4 / automate :degree (h / high)))) :arg1 (a5 / authors :poss (s2 / study :location (a6 / around :op1 (m / monetary-quantity :quant 8.4 :unit (e / euro))))))
(e / estimate-01 :arg0 (s / study :arg1-of (e2 / estimate-01 :arg0 (s2 / study))) :arg1 (r / rate-entity-91 :arg1 (a / around :op1 (m / monetary-quantity :quant 8.4 :unit (e3 / euro))) :arg2 (a2 / around :op1 (m2 / monetary-quantity :quant 8.4 :unit (e4 / euro)))) :arg2 (a3 / and :op1 (f / field :poss (p / person :arg0-of (d / drive-01) :arg0-of (d2 / drive-01))) :op2 (p2 / person :arg0-of (d3 / drive-01 :arg1 (f2 / function :location (c / country :name (n / name :op1 "Germany"))) :manner (a4 / automate :degree (h / high))))))
(p / possible-01 :arg1 (h / hell :domain (s / someone :arg0-of (t / try-01 :arg1 (r / recover-02 :arg0 (s2 / someone))))))
(b / bring-01 :arg0 (h / he) :arg1 (i / idea :topic (a / and :op1 (s / speak-01 :arg0 (p / person :mod (o / other) :arg0-of (s2 / speak-01 :time (t / time :mod (t2 / time))))) :op2 (r / refer-01 :arg0 (p2 / person) :arg1 (p3 / person :name (n / name :op1 "John" :op2 "Bercow")) :arg2 (d / discuss-01 :arg0 (p4 / person) :arg1 (p5 / problem))))) :mod (a2 / also))
(l / lead-01 :arg0 (c / conflict-01 :arg0 (u / union-02 :arg1 (t / trade-01) :arg2 (t2 / trade-01))) :time (b / before :op1 (n / now) :duration (t3 / temporal-quantity :quant (N / N-A) :unit (m / month))) :arg4 (s / strike-01 :mod (v / various)))
(a / and :op1 (w / work-09 :polarity - :arg1 (t / that) :time (n / no-longer)) :op2 (e / explain-01 :arg0 (p / person :name (n2 / name :op1 "Andreas" :op2 "Reinhardt") :arg0-of (h / have-org-role-91 :arg2 (d / director :mod (m / manage-01)))) :arg1 (p2 / person :name (n3 / name :op1 "Plauen") :arg0-of (h2 / have-org-role-91 :arg2 (d2 / director :mod (m2 / manage-01))))))
(n / need-01 :arg0 (w / we) :arg1 (t / think-01 :arg0 (w2 / we) :arg1 (r / reduce-01 :arg1 (k / kill-01) :location (c / country :poss (t2 / they)))) :mod (u / ultimate))
(p / pivotal :arg1 (i / immigrate-01) :arg1-of (p2 / public-02) :time (b / before :op1 (n / now) :quant (b2 / between :op1 (t / temporal-quantity :quant (N / N-A) :unit (m / month)) :op2 (t2 / temporal-quantity :quant (N2 / N-A) :unit (m2 / month)))) :arg1-of (p3 / public-02) :time (s / since :op1 (c / call-01 :arg0 (p4 / person :name (n2 / name :op1 "Donald" :op2 "Trump")) :arg1 (p5 / person :arg0-of (i2 / immigrate-01) :source (c2 / country :name (n3 / name :op1 "Mexico"))) :arg2 (c3 / campaign-01 :arg0 (p6 / person) :arg1 (e / elect-01)))))
(p / person :arg1-of (b / broadcast-01 :location (w / wednesday :op1 (v / value-interval :op1 7 :op2 30))))
(s / say-01 :arg0 (p / person :name (n / name :op1 "Peter" :op2 "Szijjarto") :arg0-of (h / have-org-role-91 :arg1 (p2 / person :arg0-of (h2 / have-org-role-91 :arg2 (m / minister :mod (f / foreign)))) :arg2 (m2 / minister :mod (f2 / foreign)))) :arg1 (p3 / plan-01 :arg0 (c / country :poss (h3 / he)) :arg1 (c2 / construct-01 :arg1 (f3 / fence :location (a / along :op1 (b / border-01 :arg1 (c3 / country) :arg2 (c4 / country :name (n2 / name :op1 "Romania")))))) :mod (a2 / also) :purpose (s2 / stop-01 :arg0 (c5 / country) :arg1 (i / influx :arg1 (p4 / person :arg0-of (u / use-01 :arg1 (c6 / country))))) :time (a3 / after :op1 (f4 / finish-01 :arg0 (c7 / country) :arg1 (f5 / fence :location (b2 / border-01 :arg2 (s3 / serbian)))))) :time (m3 / meanwhile))
(c / come-03 :arg1 (a / ancestor :location (l / location :name (n / name :op1 "Palatine"))) :arg2 (v / village :arg1-of (c2 / called :arg2 (p / person :arg0-of (i / inhabit-01)))))
(c / cause-01 :arg1 (b / bounced :arg0 (i / island :name (n / name :op1 "N-A")) :arg1 (o / orbit-01 :location (a / around :op1 (p / planet))) :degree (s / slight)))
(n / next :domain (e / enthusiasm))
(n / next :domain (e / enthusiasm))
(i / indicate-01 :polarity - :arg1 (w / wrong-04 :arg1 (a / anything)))
(c / contrast-01 :arg1 (p / possible-01 :arg1 (t / true :domain (t2 / that) :source (v / view-01 :arg0 (p2 / person :name (n / name :op1 "Wenger")) :arg1-of (p3 / pure-02)))) :arg2 (r / risk-01 :arg2 (i / injure-01 :mod (f / further)) :arg1-of (c2 / cause-01 :arg0 (t3 / try-01 :arg0 (p4 / person :arg0-of (p5 / play-01)) :arg1 (r2 / return-01 :arg1 (p6 / person) :time (m / middle :op1 (s / season)))) :mod (a / also))))
(c / contrast-01 :arg1 (p / possible-01 :arg1 (t / true :domain (t2 / that) :source (v / view-01 :arg0 (p2 / person :name (n / name :op1 "Wenger")) :arg1-of (p3 / pure-02)))) :arg2 (r / risk-01 :arg2 (i / injure-01 :mod (f / further)) :time (t3 / try-01 :arg0 (p4 / person) :arg1 (r2 / return-01 :arg1 (p5 / person) :time (m / middle :op1 (s / season))))))
(r / refuse-01 :arg0 (c / country :name (n / name :op1 "Croatia")) :arg1 (' / '' :mod (c2 / corridor)))
(c / create-01 :arg0 (p / person :name (n / name :op1 "Ben" :op2 "Carson")) :arg1 (t / thing :arg1-of (s / same-01 :arg2 (e / enthusiasm :arg1-of (s2 / same-01)))) :mod (o / only) :arg1-of (s3 / say-01 :arg0 (p2 / person :name (n2 / name :op1 "Trump"))) :arg1-of (s4 / say-01 :arg0 (p3 / person :quant 43 :arg0-of (s5 / say-01 :arg1 (t2 / thing :arg1-of (s6 / same-01 :arg2 (t3 / thing :arg1-of (s7 / same-01 :arg2 (t4 / thing :arg1-of (s8 / same-01 :arg2 (t5 / thing :arg1-of (s9 / same-01 :arg2 (t6 / thing :arg1-of (s10 / same-01 :arg2 (p4 / person)))))))))))))))
(b / be-located-at-91 :arg1 (t / table) :arg2 (o / off :op1 (t2 / table)))
(b / be-located-at-91 :arg1 (t / table) :arg2 (o / off :op1 (t2 / table)))
(s / say-01 :arg0 (a / and :op1 (p / person :name (n / name :op1 "McKee")) :op2 (p2 / person :name (n2 / name :op1 "Capewell"))) :arg1 (r / recommend-01 :arg1 (r2 / receive-01 :arg0 (p3 / person :arg0-of (h / have-org-role-91 :arg1 (c / company) :arg2 (c2 / ceo))) :arg1 (p4 / person :arg0-of (h2 / have-org-role-91 :arg1 (c3 / company) :arg2 (c4 / ceo))) :arg2 (p5 / person :arg0-of (h3 / have-org-role-91 :arg1 (o / organization) :arg3 (s2 / study-01 :arg0 (p6 / person)))) :time (e / early :degree (m / more)))))
(c / contrast-01 :arg1 (u / use-01 :arg1 (i / it) :arg2 (w / white :domain (i2 / it))) :arg2 (s / say-01 :arg0 (p / person :name (n / name :op1 "Gaultier")) :arg1 (g / genuine :domain (i3 / it)) :time (m / meantime)))
(a / and :op1 (i / increase-01 :arg1 (c / company :prep-with (c2 / company :arg0-of (b / balance-01 :arg1 (s / sheet) :arg1-of (s2 / strong-02))) :prep-with (b2 / balance-01 :arg1 (s3 / sheet) :arg1-of (w / weak-02))) :time (a2 / after :op1 (i2 / increase-01 :arg1 (r / rate :mod (i3 / interest) :mod (e / each))))) :op2 (e2 / exceed-01 :arg0 (c3 / company) :arg1 (p / point :quant 5 :mod (p2 / percentage-entity :value (N / N-A)))))
(c / contrast-01)
(c / convince-01 :arg1 (p / person :arg0-of (h / have-org-role-91 :arg1 (m / military :name (n / name :op1 "NATO")) :arg2 (m2 / minister :mod (f / foreign)))) :arg2 (o / oblige-02 :arg1 (p2 / person) :arg2 (t / try-01 :arg0 (p3 / person) :arg1 (f2 / find-01 :arg0 (p4 / person) :arg1 (s / sense-01 :arg0 (p5 / person) :arg1 (f3 / find-01 :arg0 (p6 / person) :arg1 (s2 / sense-01 :arg0 (p7 / person) :arg1 (s3 / superior :arg0 (p8 / person)))))))) :degree (a / absolute) :arg1-of (c2 / cause-01 :arg0 (a2 / ambiguities :arg0 (p9 / person) :arg1 (a3 / ambiguity :poss (p10 / person)) :arg2 (g / government-organization :name (n2 / name :op1 "N-A")) :quant (a4 / all))) :degree (a5 / absolute))
(c / convince-01 :arg1 (p / person :arg0-of (h / have-org-role-91 :arg1 (m / military :name (n / name :op1 "NATO")) :arg2 (a / ambiguity))) :arg2 (o / obligate-01 :arg1 (t / try-01 :polarity - :arg0 (p2 / person) :arg1 (c2 / campaign-01 :arg0 (p3 / person) :arg1 (w / withdraw-01 :arg0 (p4 / person) :arg1 (p5 / person :arg0-of (h2 / have-org-role-91 :arg2 (d / diplomat :mod (f / foreign)))))))) :arg1-of (f2 / firm-03) :purpose (t2 / try-01 :arg0 (p6 / person) :arg1 (e / everything :arg0 (p7 / person) :arg1 (s / sense-01 :arg0 (p8 / person) :arg1 (f3 / find-01 :arg0 (p9 / person))))) :arg1-of (f4 / firm-03))
(a / and :op1 (l / lose-02 :arg0 (o / organization :name (n / name :op1 "Metcash")) :arg1 (s / share :mod (m / market)) :location (s2 / state :location (e / east))) :op2 (c / contrast-01 :arg1 (l2 / lose-02 :arg0 (o2 / organization) :arg1 (s3 / share :mod (m2 / market)) :location (a2 / and :op1 (o3 / organization :name (n2 / name :op1 "Aldi")) :op2 (p / person :name (n3 / name :op1 "Coles")) :mod (m3 / main))) :arg2 (f / find-02 :arg0 (p2 / poll-01 :arg0 (p3 / person :name (n4 / name :op1 "Roy" :op2 "Morgan")) :mod (r / recent)) :arg1 (t / thread :mod (t2 / thread :degree (m4 / most)) :domain (p4 / person)))) :time (t3 / time :arg1-of (s4 / same-01)))
(d / department :mod (c / car) :mod (e / even) :condition (n / need-01 :arg0 (y / you) :arg1 (p / person :name (n2 / name :op1 "Motorenöl"))))
(a / and :op1 (s / strike-01 :arg0 (f / figure :mod (s2 / sell-01) :mod (n / new :degree (m / most))) :arg1 (t / thing :quant (a2 / all) :arg1-of (e / expect-01))) :op2 (s3 / show-01 :arg0 (f2 / figure) :arg1 (r / revenue :arg1-of (k / key-02) :mod (m2 / market :arg1-of (k2 / key-02)) :beneficiary (o / organization :name (n2 / name :op1 "Burberry"))) :mod (a3 / also)))
(f / force :mod (d / declining) :domain (h / he) :mod (a / also))
(c / cause-01 :arg1 (s / say-01 :arg0 (t / they) :arg1 (l / locked :arg1 (h / he) :arg2 (c2 / cell) :time (u / until :op1 (d / damages :arg1 (p / prisoner))))))
(a / and :op1 (o / obtain-01 :arg0 (p / person :quant (h / half :ord (o2 / ordinal-entity :value 1))) :arg1 (o3 / organization :name (n / name :op1 "Chase" :op2 "Australia"))) :op2 (o4 / obtain-01 :arg0 (p2 / person) :arg1 720.000 :ord (o5 / ordinal-entity :value 2) :ord (o6 / ordinal-entity :value 2) :ord (o7 / ordinal-entity :value 2) :ord (o8 / ordinal-entity :value 2) :ord (o9 / ordinal-entity :value 2) :ord (o10 / ordinal-entity :value 2) :ord (o11 / ordinal-entity :value 2) :ord (o12 / ordinal-entity :value 2) :ord (o13 / ordinal-entity :value 2)))
(a / and :op1 (f / found-01 :arg0 (o / organization :name (n / name :op1 "Chess" :op2 "Club") :arg1-of (f2 / found-01 :arg2 (n2 / name :op1 (k / kissing) :op2 (- / -lrb-)))) :arg1 (p / person :mod (a2 / another) :arg0-of (h / have-org-role-91 :arg2 (m / member))) :location (r / rank :poss (p2 / person))) :op2 (a3 / add-01 :arg0 (p3 / person) :arg1 (i / increase-01 :arg1 (n3 / number :quant-of (p4 / person :arg0-of (h2 / have-org-role-91 :arg2 (m2 / member)))) :arg4 (p5 / person :quant 19 :arg0-of (p6 / play-01)))) :time (t / temporal-quantity :quant (N / N-A) :unit (m3 / month)))
(s / say-01 :arg0 (p / person :name (n / name :op1 "Mrs" :op2 "Laury")) :arg1 (i / include-91 :arg1 (m / man :quant (m2 / majority) :location (s2 / store :poss (w / we))) :arg2 (i2 / it) :mod (s3 / still)))
(p / present-01 :arg1 (m / model :mod (c / concept :mod (n / new)) :quant (a / all)) :arg2 (a2 / and :op1 (c2 / car) :op2 (c3 / car :mod (l / luxury) :mod (n2 / new))) :time (y / year :mod (t / this)) :mod (e / especially) :mod (e2 / especially))
(a / and :op2 (a2 / and :op1 (p / peace) :op2 (s / security) :mod (g / great :degree (m / more :mod (e / even))) :domain (m2 / maintain-01 :arg1 (a3 / and))))
(a / and :op1 (f / fall-01 :arg1 (s / sell-01 :arg0 (o / organization :name (n / name :op1 "Morgan" :op2 "Stanley")) :arg1 (b / business :mod (f2 / food)) :arg2 (p / percentage-entity :value (N / N-A))) :arg3 (p2 / percentage-entity :value (N2 / N-A)) :arg4 (a2 / and :op1 (p3 / percentage-entity :value (N3 / N-A)) :op2 (p4 / percentage-entity :value (N4 / N-A)))) :op2 (r / reduce-01 :arg1 (s2 / share :mod (m / market)) :arg3 (p5 / percentage-entity :value (N5 / N-A)) :arg4 (p6 / percentage-entity :value (N6 / N-A))))
(c / cause-01 :arg0 (g / goal :mod (d / double)) :arg1 (r / run-02 :arg0 (p / person :name (n / name :op1 "Thomas" :op2 "Müller") :arg0-of (h / have-rel-role-91 :arg2 (b / brother))) :mod (s / simple)))
(m / move-01 :arg1 (c / cell :mod (l / large :degree (m2 / more))) :arg2 (c2 / cell :mod (l2 / large :degree (m3 / more))) :time (a / after :op1 (t / that)))
(h / have-concession-91 :arg1 (f / fear-01 :arg0 (p / person :arg0-of (h2 / have-org-role-91 :arg1 (g / government-organization :name (n / name :op1 "Fed")) :arg2 (o / official)) :arg0-of (c / cautious-02)) :arg1 (f2 / fear-01 :arg0 (p2 / person) :arg1 (t / this) :manner (i / increase-01 :arg0 (p3 / person) :arg1 (r / rate :mod (i2 / interest) :topic (b / bond :mod (f3 / federal)))))) :arg2 (f4 / fear-01 :arg0 (p4 / person :arg0-of (h3 / have-org-role-91 :arg1 (g2 / government-organization :name (n2 / name :op1 "Fed")) :arg2 (o2 / official))) :arg1 (a / and :op1 (i3 / increase-01 :arg0 (p5 / person) :arg1 (r2 / rate :mod (i4 / interest)) :manner (i5 / increase-01 :arg0 (p6 / person) :arg1 (r3 / rate :mod (i6 / interest)) :purpose (i7 / increase-01 :arg1 (r4 / rate)))) :op2 (a2 / about :op1 (p7 / percentage-entity :value (N / N-A) :mod (o3 / only)) :domain (i8 / increase-01)))))
(s / strengthen-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg3 (j / judge-01)) :mod (c / constitution)) :arg1 (r / right :poss (p2 / person :arg1-of (i / imprison-01))) :frequency (o / often))
(( / ( :( (n / name) :op1 "Griffiths")
(s / see-01 :arg0 (t / this) :arg1 (a / and :op1 (p / person :arg0-of (h / have-org-role-91 :arg1 (o / organization :name (n / name :op1 "Interior")) :arg2 (m / minister))) :op2 (p2 / person :name (n2 / name :op1 "Vesna" :op2 "Györkös" :op3 "Znidar") :arg0-of (h2 / have-org-role-91 :arg1 (o2 / organization) :arg2 (m2 / minister)))) :concession-of (h3 / have-polarity-91 :arg2 - :degree (q / quite)))
(c / cause-01 :arg0 (a / amr-unknown) :arg1 (g / get-03 :arg1 (w / woman :quant (m / many :degree (s / so))) :arg2 (s2 / sight :arg1 (h / handbag :arg1-of (b / beautiful-02) :location (r / rapture)))) :arg1-of (c2 / cause-01 :arg0 (a2 / amr-unknown)) :arg1-of (c3 / cause-01 :arg0 (a3 / amr-unknown)) :arg1-of (c4 / cause-01 :arg0 (a4 / amr-unknown)))
(c / come-01 :arg1 (l / location :name (n / name :op1 "Red" :op2 "Sea") :location (c2 / country :name (n2 / name :op1 "Egypt"))) :arg4 (t / temperature-quantity :quant 28))
(s / say-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (o / organization :name (n / name :op1 "FC" :op2 "Arsenal")) :arg2 (c / captain))) :arg1 (o2 / obligate-01 :arg1 (p2 / person :name (n2 / name :op1 "Mikel" :op2 "Arteta") :arg0-of (h2 / have-org-role-91 :arg1 (o3 / organization) :arg2 (c2 / captain))) :arg2 (s2 / stand :prep-against (o4 / organization :name (n3 / name :op1 "Dynamo" :op2 "Zagreb"))) :time (b / before :op1 (g / game :prep-against (o5 / organization :name (n4 / name :op1 "Dynamo" :op2 "Zagreb"))))))
(s / say-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (o / organization :name (n / name :op1 "FC" :op2 "Arsenal")) :arg2 (c / captain))) :arg1 (o2 / obligate-01 :arg1 (p2 / person :mod (c2 / country :name (n2 / name :op1 "N-A"))) :arg2 (s2 / stand-01 :arg1 (p3 / person) :arg2 (a / against :op1 (m / match-03 :arg0 (o3 / organization :name (n3 / name :op1 "Dynamo" :op2 "Zagreb")) :arg1 (o4 / organization :name (n4 / name :op1 "Dynamo" :op2 "Zagreb")))))))
(h / have-03 :arg0 (p / person :quant (m / multiple :op1 6)) :arg1 (o / opine-01 :arg0 (p2 / person) :mod (p3 / positive)) :time (n / now))
(h / have-rel-role-91 :arg0 (p / person :arg0-of (l / lead-02 :arg1 (c / criminal-organization :name (n / name :op1 "al-Qaeda")) :time (l2 / late))) :arg1 (p2 / person :name (n2 / name :op1 "Osama" :op2 "bin" :op3 "Laden")) :arg2 (s / son :mod (a / abtrünniger) :arg1-of (e / enteignet :arg0 (f / family) :location (f2 / family :quant 1990))))
(a / announce-01 :arg1 (l / list-01 :arg1 (p / person :name (n / name :op1 "Damon")) :arg2 (a2 / and :op1 (t / thing :arg2-of (l2 / list-01 :arg1 (a3 / and :op1 (p2 / person :arg0-of (h / have-org-role-91 :arg2 (h2 / head-of-state))) :op2 (p3 / person :arg0-of (h3 / have-org-role-91 :arg2 (m / moguls :mod (m2 / media)))) :op3 (p4 / person :arg0-of (i / invite-01 :arg1 (p5 / person) :arg2 (v / visit-01 :arg0 (p6 / person) :arg1 (p7 / pope) :purpose (d / discuss-01 :arg0 (p8 / person) :arg1 (p9 / portrayal :poss (r / religious-group :name (n2 / name :op1 "Catholic" :op2 "Church") :location (w / west)))))))))))) :time (r2 / recent))
(c / create-01 :arg1 (t / thing :arg1-of (l / list-01 :arg2 (a / and :op1 (s / sector) :op2 (e / enterprise)) :arg1-of (a2 / apply-02 :polarity - :arg2 (i / invest-01)))) :time (a3 / after :op1 (s2 / state-01 :arg1 (t2 / thing :arg1-of (s3 / state-01) :mod (n / negative)))))
(o / or :mode (i / interrogative) :op1 (s / see-01 :arg0 (y / you) :arg1 (e / event)) :op2 (a / affect-01 :arg1 (y2 / you)))
(s / say-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (s2 / street) :arg2 (s3 / spokeswoman :mod (s4 / street)))) :arg1 (l / likely-01 :arg1 (c / come-01 :arg1 (t / text :poss (o / office :poss (p2 / person :name (n / name :op1 "Cameron")) :mod (d / duck))))))
(l / list-01 :arg1 (p / part :part-of (b / business) :mod (b2 / both)) :arg2 (e / exchange-01 :arg1 (s / stock)))
(c / could :arg0 (a / appoint-01 :arg0 (p / person :name (n / name :op1 "Mahela" :op2 "Jayawardene") :arg0-of (a2 / appoint-01 :arg1 (c2 / country :name (n2 / name :op1 "Sri" :op2 "Lanka")) :arg2 (a3 / appoint-01 :arg0 (p2 / person) :arg1 (p3 / person) :arg2 (c3 / consultant))))) :arg1 (c4 / coup :mod (m / master)))
(a / and :op1 (l / leave-13 :arg0 (n / news :arg1-of (r / relate-01) :mod (t / this)) :arg1 (s / squad :mod (t2 / test) :mod (c / country :name (n2 / name :op1 "England")))) :op2 (r2 / replace-01 :arg0 (p / person :name (n3 / name :op1 "Alex" :op2 "Hales")) :arg1 (p2 / person)))
(b / become-01 :arg1 (r / refugee :mod (w / war) :quant (m / many) :location (c / country :name (n / name :op1 "Hungary"))) :arg2 (a / and :op1 (b2 / bottleneck :arg1-of (s / significant-02)) :op2 (p / point :mod (e / enter-01))) :arg4 (o / organization :name (n2 / name :op1 "European" :op2 "Union")) :time (m2 / month :mod (r2 / recent)) :location (w2 / world-region :name (n3 / name :op1 "Middle" :op2 "East")))
(a / about :op1 (i / i) :domain (i2 / it) :time (a2 / always))
(o / offer-01 :arg0 (r / rate-entity-91 :arg1 (t / temporal-quantity :quant (N / N-A) :unit (y / year)) :arg2 (t2 / temporal-quantity :quant (N2 / N-A) :unit (y2 / year))) :arg1 (t3 / train-01 :arg2 (c / cooperate-01 :mod (n / new))))
(o / offer-01 :arg0 (a / and :op1 (p / person :arg0-of (h / have-rel-role-91 :arg2 (m / mother))) :op2 (p2 / person :arg0-of (h2 / have-rel-role-91 :arg2 (m2 / mother)))) :arg1 (d / deposit :consist-of (m3 / monetary-quantity :quant 200000 :unit (d2 / dollar))) :purpose (s / secure-02 :arg0 (a2 / and) :arg1 (r / release-01 :arg1 (a3 / and))))
(a / and :op1 (i / increase-01 :arg1 (r / rate :mod (r2 / rate))) :op2 (a2 / and :op1 (u / upset-01 :arg0 (r3 / rise-01 :arg1 (t / thing :arg1-of (f / flaw-01 :arg1-of (p / possible-01 :polarity -))))) :op2 (s / slide :arg1 (e / economy) :arg2 (r4 / recession-02))))
(s / say-01 :arg2 (p / person :name (n / name :op1 "N-A")))
(p / possible-01 :polarity - :arg1 (a / accept-01 :arg1 (i / idea :topic (p2 / possible-01 :polarity - :arg1 (a2 / accept-01 :arg0 (c / country :name (n / name :op1 "Slovenia")) :arg1 (t / thing :arg2-of (m / monitor-01 :arg1 (b / border)) :arg1-of (i2 / intensify-01 :arg0 (c2 / country :name (n2 / name :op1 "Hungary"))) :mod (m2 / main)))))) :manner (a3 / absolute))
(c / contrast-01 :arg1 (f / face-01 :arg0 (p / participate-01 :arg1 (s / soldier :arg1-of (f2 / fight-01 :arg2 (f3 / fight-01 :location (c2 / country :name (n / name :op1 "Iraq"))) :arg1-of (d / direct-02))) :arg1-of (d2 / direct-02))) :arg2 (r / reject-01 :arg1 (p2 / percentage-entity :value (N / N-A)) :arg2 (p3 / percentage-entity :value (N2 / N-A))))
(c / contrast-01 :arg2 (p / possible-01 :arg1 (s / see-01 :arg0 (p2 / person :arg0-of (p3 / participate-01 :arg1 (m / market))) :arg1 (e / enhance-01 :arg1 (e2 / excitement :mod (w / whole)) :arg1-of (c2 / cause-01 :arg0 (r / rise-01 :arg1 (r2 / rate :mod (i / interest))) :arg1-of (p4 / possible-01))))) :time (e3 / end-01))
(c / cause-01 :arg0 (r / reduce-01 :arg1 (r2 / reduce-01 :arg1 (n / number :mod (s / small)))) :arg1 (' / '' :arg1 (r3 / reduce-01 :arg1 (n2 / number :mod (s2 / small))) :arg0-of (c2 / cause-01 :arg1 (e / explain-01 :arg0 (p / person :name (n3 / name :op1 "Wolfschmidt")) :arg1 (t / thing :arg1-of (e2 / explain-01 :arg0 (p2 / person)))))))
(a / and :op1 (l / look-01 :arg0 (y / you) :arg1 (i / it)) :op2 (f / find-01 :arg0 (y2 / you) :arg1 (m / message-01 :arg0 (p / person :arg0-of (h / have-rel-role-91 :arg1 (p2 / person) :arg2 (m2 / mother))) :time (i2 / immediate))))
(h / have-concession-91 :arg1 (f / fulfill-01 :arg0 (w / we) :arg1 (r / responsible-03 :arg0 (w2 / we) :mod (n / nation))) :arg2 (c / clear-06 :polarity - :arg1 (t / thing :arg0-of (e / evidence-01 :arg1 (r2 / risk-01 :polarity - :arg2 (r3 / risk-01 :arg2 (s / smoke-02))) :mod (o / only)))))
(m / multi-sentence :snt1 (s / say-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (o / organization :name (n / name :op1 "Brisbane" :op2 "Broncos")) :arg2 (c / coach))) :arg1 (p2 / person :name (n2 / name :op1 "Wayne" :op2 "Bennett") :arg0-of (h2 / have-org-role-91 :arg1 (t / team :mod (s2 / storm)) :arg2 (c2 / coach))) :mod (h3 / hardly) :arg1-of (c3 / cause-01 :arg0 (o2 / obtain-01 :arg0 (c4 / crew :poss (p3 / person)) :arg1 (w / win-01 :arg0 (c5 / country :arg0-of (h4 / have-org-role-91 :arg1 (c6 / country :arg0-of (h5 / have-org-role-91 :arg2 (q / queen))) :arg2 (c7 / country :arg0-of (h6 / have-org-role-91 :arg2 (q2 / queen))))) :mod (f / final))))) :snt2 (a / and :op1 (l / leagues :mode (i / interrogative)) :op2 (s3 / say-01 :arg1 (g / good :degree (t2 / too)))))
(c / contrast-01 :arg1 (m / mean-01 :arg1 (t / this) :arg2 (m2 / mean-01 :arg1 (t2 / this) :arg2 (p / possible-01 :arg1 (m3 / mean-01 :arg1 (t3 / this) :arg2 (c2 / create-01 :arg1 (s / space)))))) :arg2 (m4 / make-02 :arg0 (o / organization :name (n / name :op1 "Apple")) :arg1 (a / and :op1 (l / likely-01 :arg1 (d / do-02 :arg0 (o2 / organization) :arg1 (s2 / so) :manner (s3 / streamlining :arg0 (o3 / organization) :arg1 (t4 / thing))) :degree (l2 / less)) :op2 (e / easy-05 :arg1 (d2 / do-02 :arg0 (o4 / organization) :arg1 (t5 / that) :condition (u / use-01 :arg0 (y / you) :arg1 (t6 / tool :arg1-of (s4 / special-02) :instrument-of (a2 / and :op1 (r / reverse-01 :arg1 (a3 / apps)) :op2 (r2 / reinstall :arg1 (p2 / process-02) :time (o5 / once :op1 (c3 / complete-01 :arg1 (p3 / process-02))))))))))))
(a / and :op1 (c / come-01 :arg1 (p / person :arg0-of (h / have-rel-role-91 :arg1 (h2 / he) :arg2 (g / grandfather))) :arg3 (m / much) :location (l / location :name (n / name :op1 "Palatinate"))) :op2 (p2 / person :name (n2 / name :op1 "Donald" :op2 "Trump") :location (h3 / here) :arg0-of (c2 / campaign-01)))
(c / call-03 :arg0 (l / location :name (n / name :op1 "Linz")))
(f / fachamt :arg1 (s / slash :op1 (p / project :mod (c / construct-01 :arg1 (s2 / soil :location (d / district :mod (c2 / city)))) :quant (a / all)) :op2 (p2 / project :location (d2 / district :mod (c3 / city)))) :time (a2 / always))
(h / have-part-91 :arg1 (s / store) :arg2 (d / department :part-of (d2 / department :mod (m / massive) :mod (f / freezer)) :location-of (f2 / find-01 :arg0 (y / you) :arg1 (a / and :op1 (l / leave-11 :arg1-of (f3 / freeze-01)) :op2 (m2 / melon :mod (b / bitter)) :op3 (m3 / melon :mod (b2 / bitter)) :op4 (a2 / and :op1 (p / person :arg0-of (h2 / have-org-role-91 :arg2 (h3 / head-of-state))) :op2 (p2 / person :arg0-of (h4 / have-org-role-91 :arg2 (h5 / head-of-state))) :op3 (p3 / person :arg0-of (h6 / have-org-role-91 :arg2 (h7 / head-of-state))) :op4 (p4 / person :arg0-of (h8 / have-org-role-91 :arg2 (h9 / head-of-state))) :op5 (p5 / person :arg0-of (h10 / have-org-role-91 :arg2 (h11 / head-of-state))) :op6 (p6 / person :arg0-of (h12 / have-org-role-91 :arg2 (h13 / head-of-state))) :op7 (p7 / person :arg0-of (h14 / have-org-role-91 :arg2 (h15 / head-of-state))) :op7 (p8 / person :arg0-of (h16 / have-org-role-91 :arg2 (h17 / head-of-state))) :op7 (p9 / person :arg0-of (h18 / have-org-role-91 :arg2 (h19 / head-of-state))))))))
(c / contrast-01 :arg1 (r / raise-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg2 (p2 / president :mod (v / vice)))) :arg1 (p3 / potential :beneficiary (p4 / person :arg0-of (h2 / have-org-role-91 :arg2 (p5 / president :mod (p6 / primary :mod (d / democracy)))))) :arg2 (p7 / person :arg0-of (h3 / have-org-role-91 :arg2 (p8 / president :mod (v2 / vice)))) :location (l / location :name (n / name :op1 "Waagschale"))) :arg2 (b / believe-01 :arg0 (p9 / person) :arg1 (r2 / recommend-01 :arg1 (d2 / do-02 :polarity - :arg0 (p10 / person) :arg1 (i / it)))) :prep-as (p11 / person :arg0-of (h4 / have-org-role-91 :arg2 (p12 / president :mod (v3 / vice)))))
(a / and :op1 (c / child :mod (r / refugee) :domain (c2 / child :mod (r2 / refugee))) :op2 (e / explain-01 :arg0 (c3 / child) :arg1 (p / person :name (n / name :op1 "Dietrich" :op2 "Munz") :arg0-of (h / have-org-role-91 :arg1 (b / bptk)))))
(s / share-01 :arg0 (o / organization :name (n / name :op1 "Infineon")) :arg1 (t / thing :arg2-of (t2 / tip-05 :arg1 (o2 / organization))) :arg3 (p / percentage-entity :value (N / N-A) :mod (a / another)))
(p / possible-01 :arg1 (a / attract-01 :arg0 (a2 / attract-01 :arg0 (a3 / attract-01 :arg0 (p2 / person :name (n / name :op1 "Düften")) :arg1 (p3 / person)) :arg1 (c / child))))
(n / night :mod (a / all) :time (n2 / night :mod (a2 / all)) :source (b / border-01 :arg1 (c / country :name (n3 / name :op1 "Serbia")) :arg2 (w / way) :direction (a3 / away)))
(n / night :mod (n2 / night :mod (a / approximately :op1 (d / distance-quantity :quant (N / N-A) :unit (k / kilometer)))) :source (b / border-01 :arg1 (c / country :name (n3 / name :op1 "Serbia")) :arg2 (c2 / country :name (n4 / name :op1 "Serbia"))))
(b / bail-out-02 :arg1 (r / rate-entity-91 :arg1 (m / monetary-quantity :quant 200000 :unit (d / dollar)) :arg2 (t / temporal-quantity :quant (N / N-A) :unit (y / year))) :time (a / after :op1 (c / charge-05 :arg1 (d2 / drug) :arg2 (d3 / drug))))
(r / recommend-01 :arg1 (c / close-01 :arg1 (a / and :op1 (p / person :name (n / name :op1 "Fischer")) :op2 (t / team :consist-of (p2 / person :arg0-of (h / have-org-role-91 :arg2 (h2 / hospital :mod (v / vice)) :time (f / former)))) :arg0-of (h3 / have-org-role-91 :arg1 (h4 / hospital :mod (m / miner :polarity -)) :arg2 (h5 / hospital) :time (f2 / former))) :time (a2 / after :op1 (n2 / now) :quant (a3 / almost :op1 (t2 / temporal-quantity :quant (N / N-A) :unit (y / year) :mod (a4 / almost)))) :condition (l / lead-03 :arg0 (a5 / and :op1 (l2 / lead-03 :arg0 (o / organization :name (n3 / name :op1 "Supervisory" :op2 "Board")) :arg2 (c2 / consents)) :op2 (l3 / lead-02 :arg0 (p3 / person :arg0-of (h6 / have-org-role-91 :arg1 (o2 / organization) :arg3 (l4 / lead-02 :arg0 (p4 / person)) :time (f3 / former)))) :arg2 (c3 / consents)))))
(c / contrast-01 :arg1 (c2 / cut-02 :arg0 (p / person :name (n / name :op1 "Biden")) :arg1 (t / thing :quant 3 :arg1-of (i / include-91 :arg2 (c3 / candidate :quant 3))) :arg3 (c4 / candidate :quant 3)) :arg2 (l / lead-01 :arg0 (s / strength :poss (p2 / person :name (n2 / name :op1 "Clinton")))))
(c / contrast-01 :arg1 (a / and :op1 (a2 / attack-01 :quant 7 :mod (g / good)) :op2 (a3 / attack-01 :quant 2 :mod (g2 / good))) :arg2 (f / focus-01 :arg1 (r / reality :mod (t / that)) :arg2 (t2 / thing :arg2-of (r2 / result-01)) :arg1-of (h / harsh-02)))
(c / claim-01 :arg0 (p / person :name (n / name :op1 "Peter" :op2 "Moody")) :arg1 (t / try-01 :arg0 (p2 / person :arg0-of (b / broker-01 :arg1 (b2 / building :name (n2 / name :op1 "N-A"))) :mod (r / racing)) :arg1 (a / and :op1 (i / install-01 :arg0 (p3 / person) :arg1 (s / spy-01) :location (s2 / stables :poss (p4 / person))) :op2 (t2 / threaten-01 :arg0 (p5 / person) :arg1 (q / quit-01 :arg0 (p6 / person) :arg1 (r2 / race)) :time (i2 / immediate))) :time (y / year :mod (l / last))))
(a / accident :quant 1 :mod (o / only) :domain (t / this))
(' / '' :polarity - :arg0 (p / person :name (n / name :op1 "Luisa" :op2 "Binder")) :arg1 (w / we) :degree (s / so) :mod (a / actual) :mod (a2 / actual))
(a / and :op1 (b / beside :arg0 (h / here) :arg1 (i / information :topic (p / purchase-01)) :arg1-of (d / direct-02)) :op2 (r / receive-01 :arg0 (h2 / here) :arg1 (i2 / information) :arg2 (o / or :op1 (i3 / insure-02 :arg1 (c / care :mod (c2 / care))) :op2 (a2 / achieve-01 :arg1 (a3 / and :op1 (i4 / insure-02 :mod (c3 / care)) :op2 (t / thing :arg1-of (a4 / achieve-01 :arg0 (a5 / and))))))) :location (h3 / here) :arg1-of (d2 / direct-02))
(s / say-01 :arg0 (p / person :name (n / name :op1 "Mike" :op2 "Shaffer") :arg0-of (h / have-org-role-91 :arg1 (c / city-district :name (n2 / name :op1 "N-A") :arg1-of (n3 / near-02 :arg2 (l / location :name (n4 / name :op1 "Gautier")))) :arg2 (e / entertainment))) :arg1 (h2 / have-03 :arg0 (p2 / person) :arg1 (a / and :op1 (l2 / lamb) :op2 (n5 / night :mod (p3 / prentiss))) :time (e2 / end-01 :arg1 (n6 / night)) :time (e3 / end-01 :arg1 (n7 / night) :time (d / date-entity :month 5 :day (N / N-A)) :time (a2 / after :op1 (f / finish-07 :arg0 (l3 / lamb) :arg1 (a3 / and :op1 (c2 / career :poss (p4 / person)) :op2 (p5 / play-01 :arg0 (p6 / person))) :location (i / in-front-of :op1 (a4 / audience :mod (s2 / sparse))))))))
(m / multi-sentence :snt1 (c / cause-01 :arg0 (a / amr-unknown)) :snt2 (w / want-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg3 (j / judge-01))) :arg1 (k / know-01 :arg0 (p2 / person))))
(s / say-01 :arg0 (p / person :name (n / name :op1 "Geoff")) :arg1 (g / glad-02 :arg0 (b / beat-03 :arg0 (s2 / someone) :arg1 (i / i)) :arg1 (i2 / i) :condition (o / obligate-01 :arg1 (i3 / i) :arg2 (b2 / beat-03 :arg0 (s3 / someone) :arg1 (i4 / i)))))
(h / have-part-91 :arg1 (c / country :name (n / name :op1 "Slovenia")) :arg2 (c2 / country :arg0-of (r / represent-01 :arg1 (c3 / country) :arg2 (c4 / country) :manner (c5 / consistent) :time (s / since :op1 (t / testimonial :arg1 (s2 / standard :mod (c6 / control-01 :arg1 (b / border))))))))
(w / want-01 :arg0 (n / no-one) :arg1 (e / express-01 :arg0 (n2 / no-one)))
(w / want-01 :arg0 (n / no-one) :arg1 (c / comment-01 :arg0 (n2 / no-one) :arg3 (t / thing :arg0-of (i / incinerate-01) :mod (t2 / this))))
(f / funny :polarity - :domain (t / transport-01 :arg1 (a / animal) :arg3 (c / city :name (n / name :op1 "London"))) :mod (a2 / and :polarity -))
(s / say-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (a / and :op1 (c / city :name (n / name :op1 "Brussels")) :op2 (p2 / person :name (n2 / name :op1 "Ivica" :op2 "Dacic") :arg0-of (h2 / have-org-role-91 :arg2 (' / '')))))) :arg1 (o / obligate-01 :arg2 (p3 / place-01 :arg1 (i / it) :time (d / day :arg1-of (c2 / come-01)))))
(a / and :op1 (f / found-01 :arg0 (i / it) :arg1 (a2 / and :op1 (p / produce-01 :arg0 (a3 / and :op1 (p2 / person :arg0-of (h / have-org-role-91 :arg1 (o / organization :name (n / name :op1 "Stanford" :op2 "University")))) :op2 (p3 / person :name (n2 / name :op1 "Dave" :op2 "Packard") :arg0-of (h2 / have-org-role-91 :arg1 (o2 / organization) :arg3 (l / lead-02 :arg0 (p4 / person)))) :op3 (p5 / person :name (n3 / name :op1 "Dave" :op2 "Packard") :arg0-of (h3 / have-org-role-91 :arg1 (o3 / organization) :arg3 (l2 / lead-02 :arg0 (p6 / person))))) :arg1 (c / company)) :arg1 (p7 / produce-01 :arg0 (c2 / company) :arg1 (p8 / plant :mod (e / electric)))) :op2 (' / '' :arg0 (a4 / and) :arg1 (b / birthplace :mod (l3 / location :name (n4 / name :op1 "Silicon" :op2 "Valley"))))))
(s / say-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (p2 / police :mod (f / federal)) :arg2 (s2 / spokesman))) :arg1 (p3 / person :arg0-of (h2 / have-org-role-91 :arg1 (p4 / police :mod (f2 / federal)) :arg2 (s3 / spokesman))))
(h / have-concession-91 :arg1 (e / expand-01 :polarity - :arg1 (e2 / expand-01 :arg1 (t / thing :arg1-of (h2 / hide-01)))))
(q / question-01 :arg1 (p / possible-01 :polarity - :arg1 (r / reply-01 :arg0 (i / i) :arg1 (l / lamb) :time (n / no-longer))))
(a / and :op1 (s / state-01 :arg0 (s2 / state :mod (o / other)) :arg1 (s3 / strike-01 :arg0 (s4 / state) :arg1 (c / country :name (n / name :op1 "Iraq")) :mod (a2 / air))) :op2 (f / find-01 :arg0 (c2 / country :name (n2 / name :op1 "Syria")) :arg1 (p / positive :quant (p2 / percentage-entity :value (N / N-A)))))
(a / and :op1 (l / lose-02 :arg0 (p / person :arg0-of (c / control-01 :arg1 (c2 / car :mod (s / sports)))) :arg1 (c3 / car :mod (s2 / sports))) :op2 (g / go-02 :arg0 (p2 / person) :arg4 (c4 / corridor)))
(d / deny-01 :arg0 (i / it) :arg1 (p / portion :ord (o / ordinal-entity :value 2) :mod (a / also)))
(s / suggest-01 :arg0 (p / person :name (n / name :op1 "Van" :op2 "Gaal")) :arg1 (w / wrong-04 :arg1 (r / referee :mod (i / italian))))
(a / allow-01 :arg0 (m / manipulate-01 :mod (t / this)) :arg1 (c / compete-02 :arg0 (a2 / and :op1 (p / person :name (n / name :op1 "Meg" :op2 "Whitman") :arg0-of (h / have-org-role-91 :arg1 (o / organization) :arg2 (c2 / chairman))) :op2 (p2 / person :arg0-of (h2 / have-org-role-91 :arg1 (o2 / organization) :arg2 (e / executive))) :op3 (p3 / person :arg0-of (h3 / have-org-role-91 :arg1 (o3 / organization) :arg2 (e2 / executive)) :arg0-of (l / lead-01 :arg1 (u / unit) :time (a3 / after :op1 (w / war :name (n2 / name :op1 "N-A")))) :arg0-of (h4 / have-org-role-91 :arg1 (o4 / organization) :arg2 (e3 / executive)) :arg0-of (h5 / have-org-role-91 :arg1 (o5 / organization) :arg2 (e4 / executive)) :arg0-of (h6 / have-org-role-91 :arg1 (o6 / organization) :arg2 (e5 / executive)) :arg0-of (h7 / have-org-role-91 :arg1 (o7 / organization) :arg2 (e6 / executive)) :arg0-of (h8 / have-org-role-91 :arg1 (o8 / organization) :arg2 (e7 / executive)) :arg0-of (h9 / have-org-role-91 :arg1 (o9 / organization) :arg2 (e8 / executive))))))
(b / bring-01 :arg0 (p / person :arg0-of (d / drive-01)) :arg1 (p2 / person :arg1-of (i / injure-01)) :arg2 (h / hospital) :manner (s / serious))
(c / cost-01 :arg1 (m / monetary-quantity :quant 16 :unit (e / euro)) :arg2 (m2 / monetary-quantity :quant 990 :unit (e2 / euro)))
(k / know-01 :polarity - :arg0 (y / you) :arg1 (d / differ-02 :arg1 (f / friendship :poss (y2 / you)) :arg2 (a / amr-unknown)) :time (e / ever))
(m / multi-sentence :snt1 (t / think-01 :arg0 (i / i) :arg1 (a / amaze-01 :arg1 (t2 / think-01 :arg0 (i2 / i) :arg1 (i3 / it)))) :snt2 (e / earn-01 :polarity - :arg0 (i4 / i) :arg1 (o / or :op1 (m2 / more-than :op1 (m3 / monetary-quantity :quant 10000 :unit (d / dollar))) :op2 (l / live-01 :arg0 (p / person :name (n / name :op1 "Isaac")))) :time (e2 / ever)) :snt3 (m4 / money :quant (b / bunch)))
(p / possible-01 :arg1 (s / see-01 :arg0 (p2 / person :arg0-of (h / have-org-role-91 :arg2 (p3 / person :arg1-of (e / expert-01)))) :arg1 (p4 / profit-01) :manner (t / thing :arg1-of (f / flaw-01 :arg1-of (h2 / high-02 :degree (m / more))))) :concession (v / view-02 :arg0 (p5 / person :arg1-of (e2 / expert-01)) :arg1 (t2 / thing :manner-of (t3 / take-01 :arg0 (p6 / person) :arg1 (p7 / place) :arg1-of (q / quick-02)))))
(s / solve-01 :arg1 (t / thing :arg2-of (s2 / solve-01)) :degree (v / very))
(s / solve-01 :arg1 (h / house :quant 3 :mod (t / terraced) :mod (s2 / storey)) :degree (v / very))
(w / want-01 :arg0 (c / country :name (n / name :op1 "Croatia")) :arg1 (l / let-01 :arg0 (c2 / country) :arg1 (p / pass-03 :arg1 (r / refugee))))
(c / contrary-01 :arg1 (h / he) :arg2 (f / fear-01 :arg0 (h2 / he) :mod (i / initial)) :arg1-of (c2 / contrary-01 :arg2 (f2 / fear-01 :mod (i2 / initial))))
(c / contrast-01 :arg1 (p / possible-01 :arg1 (s / seem-01 :arg1 (c2 / composed :arg1 (' / '' :mod (e / email)) :manner (w / wise) :arg1-of (c3 / cause-01 :arg0 (c4 / close-10 :arg1 (c5 / company :name (n / name :op1 "Nestle")) :arg2 (f / folk :mod (c6 / country :name (n2 / name :op1 "N-A")) :mod (c7 / close :degree (v / very)) :mod (c8 / close :degree (v2 / very)))))))) :arg2 (p2 / possible-01 :arg1 (c9 / composed :arg1 ('2 / '' :mod (y / yuhua)) :manner (w2 / wise))))
(r / rudzinska :prep-as (r2 / rudzinska :mod (w / wiktoria)))
(a / and :op1 (g / grant-01 :arg0 (p / person :name (n / name :op1 "Derek" :op2 "McInnes")) :arg1 (o / obligate-01 :arg1 (c / crew :poss (i / it)) :arg2 (f / fight-01 :arg0 (c2 / crew) :arg1 (p2 / person :name (n2 / name :op1 "Hamilton" :op2 "Accies")) :manner (d / desperate))) :purpose (s / see-01 :arg0 (p3 / person) :arg1 (w / win-01 :arg0 (l / league :ord (o2 / ordinal-entity :value 7) :arg1-of (s2 / single-02)) :arg2 (p4 / person :name (n3 / name :op1 "Hamilton" :op2 "Accies")))) :purpose (s3 / see-01 :arg0 (p5 / person) :arg1 (w2 / win-01 :arg0 (l2 / league :ord (o3 / ordinal-entity :value 7) :arg1-of (s4 / single-02)))) :purpose (s5 / see-01 :arg0 (p6 / person) :arg1 (w3 / win-01 :arg0 (l3 / league :ord (o4 / ordinal-entity :value 7)) :arg2 (p7 / person)))))
(h / have-03 :arg0 (c / country :name (n / name :op1 "Hungary")) :arg1 (b / border-01 :arg1 (c2 / country) :arg2 (c3 / country :name (n2 / name :op1 "Serbia")) :arg1-of (l / long-03) :location (r / relative-position :op1 (c4 / country) :quant (d / distance-quantity :quant (N / N-A) :unit (k / kilometer)))) :time (n3 / night))
(h / have-concession-91 :arg1 (s / stress-01 :arg0 (h2 / he) :arg1 (s2 / solve-01 :arg1 (i / it) :duration (t / temporary) :mod (o / only))) :arg2 (p / praise-01 :arg0 (p2 / person :mod (c / country :name (n / name :op1 "Germany"))) :arg1 (t2 / try-01 :arg0 (c2 / country :name (n2 / name :op1 "Austria")) :arg1 (d / deal-01 :arg0 (c3 / country) :arg2 (c4 / crisis)))))
(m / multi-sentence :snt1 (r / recommend-01 :arg1 (t / touch-01 :polarity - :arg1 (i / i))) :snt2 (c / contrast-01 :arg1 (r2 / recommend-01 :arg1 (t2 / touch-01 :polarity - :arg1 (i2 / i))) :arg2 (f / float-01 :arg1 (f2 / film :mod (n / new) :part-of (p / person :name (n2 / name :op1 "Mary" :op2 "Poppins") :arg0-of (h / have-org-role-91 :arg1 (' / '') :arg2 ('2 / ''))) :mod (n3 / new)) :arg2 (v / ventures) :mod (s / still))))
(m / multi-sentence :snt1 (w / want-01 :mode (i / interrogative) :arg0 (p / person :mod (c / country :name (n / name :op1 "N-A"))) :arg1 (c2 / come-01 :arg1 (p2 / person))) :snt2 (r / result-01 :mode (i2 / interrogative) :arg2 (r2 / record :mod (r3 / record :mod (p3 / prognosticated))) :time (y / year :mod (o / one)) :manner (f / fast :degree (m2 / most) :compared-to (p4 / possible-01 :arg1 (t / thing :arg2-of (r4 / result-01) :arg1-of (p5 / possible-01 :polarity -))))))
(w / want-01 :arg0 (p / person :name (n / name :op1 "Angela" :op2 "Merkel") :arg0-of (h / have-org-role-91 :arg1 (f / federal) :arg2 (c / chancellor))) :arg1 (d / discuss-01 :arg0 (p2 / person) :arg1 (s / situation :mod (r / refugee)) :location (c2 / country :name (n2 / name :op1 "Germany"))) :time (d2 / date-entity :day 23 :month 9 :year (N / N-A)) :location (c3 / city :name (n3 / name :op1 "Berlin")))
(c / contrast-01 :arg1 (a / afflicted :arg1 (a2 / and :op1 (d / die-01 :arg1 (t / topic)) :op2 (d2 / die-01 :arg1 (d3 / die-01))) :mod (s / still)) :arg2 (a3 / afflicted :arg1 (e / experience-01 :arg0 (p / person :arg0-of (h / have-rel-role-91 :arg1 (p2 / person :name (n / name :op1 "Josefine" :op2 "Lammer")) :arg2 (d4 / dd2)))) :concession (c2 / contribute-01 :arg0 (m / movement-07 :arg0 (h2 / hospice) :arg1-of (s2 / straight-04)) :time (y / year :mod (l / last)) :degree (m2 / much))))
(r / remain-01 :arg1 (p / policeman :name (n / name :op1 (c / canning) :op2 (v / vale) :op3 (p2 / policeman) :op4 (p3 / policeman) :op5 (p4 / policeman) :op6 (p5 / policeman) :op7 (p6 / policeman) :op8 (p7 / policeman) :op8 (p8 / policeman) :op8 (p9 / policeman) :op8 (p10 / policeman) :op9 (p11 / policeman))))
(h / have-03 :arg0 (p / person :name (n / name :op1 "Tanna")) :arg1 (c / confident-01 :arg1 (p2 / person) :arg2 (m / manage-01 :arg1 (o / organization :name (n2 / name :op1 "Dundee" :op2 "United")))))
(p / play-02 :arg0 (v / variables :quant (s / several)) :arg1 (r / role) :mod (i / in-fact))
(s / say-01 :arg2 (p / person :name (n / name :op1 "de" :op2 "Boer")))
(a / and :op1 (w / work-01 :arg0 (p / person :name (n / name :op1 "Otmar" :op2 "Alt")) :location (b / bible-project :poss (p2 / person)) :duration (a2 / about :op1 (t / temporal-quantity :quant (N / N-A) :unit (y / year)))) :op2 (w2 / work-01 :arg0 (p3 / person) :arg1 (t2 / thing :arg1-of (c / choose-01 :arg0 (p4 / person)) :arg1-of (c2 / choose-01 :arg0 (p5 / person))) :arg3 (i / issue-02 :quant (m / many) :topic (b2 / book :mod (' / '') :poss (b3 / book :quant (a3 / all))))))
(s / say-01 :arg0 (p / person :quant (m / multiple) :arg1-of (i / include-91 :arg2 (c / cell :part-of (c2 / cell) :arg1-of (s2 / separate-02)))) :arg1 (t / thing :arg1-of (d / decide-01 :arg3 (t2 / thing :arg1-of (d2 / decide-01 :arg3 2011)))))
(c / contrast-01 :arg1 (l / look-02 :arg0 (m / majority :arg1-of (i / include-91 :arg2 (p / person :name (n / name :op1 "Sanders")))) :arg1 (h / honest :degree (m2 / more) :compared-to (t / that))) :arg2 (o / opine-01 :polarity - :arg0 (p2 / person) :arg1 (t2 / thing :arg1-of (o2 / opine-01 :arg0 (p3 / person)))))
(p / possible-01 :arg1 (h / have-03 :arg0 (a / and :op1 (p2 / person :name (n / name :op1 "Lana" :op2 "Jeavons-Fellows")) :op2 (p3 / person :name (n2 / name :op1 "Sarah" :op2 "Mackay")) :op3 (p4 / person :name (n3 / name :op1 "Snezana" :op2 "Markoski"))) :arg1 (u / unknowingly :arg0-of (w / win-01 :arg1 (b / bachelor)))))
(s / say-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg2 (g / general))) :arg1 (e / expect-01 :arg0 (p2 / person :arg0-of (h2 / have-org-role-91 :arg2 (g2 / general))) :arg1 (s2 / supply-01 :arg0 (p3 / person) :arg1 (r / refugee) :arg2 (p4 / person :arg0-of (h3 / have-org-role-91 :arg2 (d / doctor :mod (m / medicine)))) :time (s3 / so-far))) :arg1-of (g3 / general-02))
(m / mean-01 :polarity - :arg1 (o / organization :name (n / name :op1 "Apple")) :arg2 (c / continue-01 :arg1 (u / update-01)) :condition (l / low-04 :arg1 (c2 / charge-01) :degree (t / too)) :arg1-of (c3 / cause-01 :arg0 (a / and :op1 (p / possible-01 :arg1 (h / halfway :arg0 (p2 / phone) :arg1 (s / switch-01))) :op2 (l2 / lead-03 :arg0 (p3 / phone) :arg2 (b / break-down-12 :arg1 (u2 / updates))))))
(a / and :op2 (s / see-01 :arg0 (i / i) :arg1 (d / die-01 :arg1 (h / he))))
(a / and :op1 (p / play-02 :arg0 (' / '' :time (s / since :op1 (i / issue-02))) :arg1 (r / role :mod (c / central)) :manner (c2 / certain)) :op2 (a2 / announce-01 :arg0 (h / he)))
(s / say-01 :arg0 (f / figure :mod (p / police :mod (f2 / federal)) :compared-to (f3 / figure :mod (p2 / police) :mod (f4 / federal))) :arg1 (s2 / significant-02 :arg1 (r / refugee :quant (m / more :compared-to (t / temporal-quantity :quant (N / N-A) :unit (w / week)))) :arg1-of (b / begin-01 :time (w2 / week :mod (d / date-entity :year (N2 / N-A)))) :location (c / city :name (n / name :op1 "Munich"))))
(s / say-01 :arg0 (s2 / state-01))
(m / multi-sentence :snt1 (o / obligate-01 :arg1 (w / we) :arg2 (t / think-01 :arg0 (w2 / we) :time (n / now)) :mod (o2 / of-course)) :snt2 (s / say-01 :arg0 (p / person :name (n2 / name :op1 "Necat" :op2 "Ayamicn") :arg0-of (h / have-org-role-91 :arg1 (n3 / newspaper :mod (' / '')) :arg2 (d / director))) :arg1 (l / look-01 :arg0 (p2 / person) :arg1 (c / commit-01 :arg1 (p3 / person) :mod (p4 / potential)))))
(a / and :op1 (w / write-01 :arg0 (p / person :arg0-of (r / research-01) :mod (o / other) :quant (m / multiple :op1 (N / N-A))) :location (l / location :name (n / name :op1 "BMJ"))) :op2 (a2 / ask-01 :arg0 (p2 / person) :arg1 (a3 / allege-01 :mode (i / interrogative) :arg1 (b / build-01 :arg1 (o2 / or :op1 (s / sand) :op2 (s2 / stone))))))
(a / and :op1 (e / express-01 :arg0 (i / i) :arg1 (c / condolence :poss (i2 / i) :topic (l / letter :beneficiary (p / person :name (n / name :op1 "Bush") :arg0-of (h / have-org-role-91 :arg2 (p2 / president)))))) :op2 (t / tell-01 :arg0 (i3 / i) :arg1 (w / way :manner-of (s / solve-01 :arg1 (p3 / problem :mod (t2 / this)))) :arg2 (h2 / he)) :time (a2 / after :op1 (d / date-entity :month 9 :day 11)))
(s / say-01 :arg0 (s2 / she) :arg1 (p / point :arg1-of (c / critical-02) :domain (t / this) :poss (s3 / study :mod (t2 / this)) :arg1-of (c2 / cause-01 :arg0 (s4 / say-01 :arg0 (s5 / study) :arg1 (i / increase-01 :polarity - :arg1 (r / risk-01 :arg2 (o / or :op1 (d / die-01) :op2 (d2 / disease :mod (k / kidney)))) :arg1-of (i2 / increase-01))))))
(i / include-01 :arg1 (w / warn-01 :arg0 (c / continent :name (n / name :op1 "Europe")) :arg2 (c2 / country :name (n2 / name :op1 "N-A"))) :arg2 (w2 / warn-01 :arg1 (r / risk-01 :arg0 (r2 / risk-01 :arg2 (h / health)) :arg2 (o / organization :name (n3 / name :op1 "EU") :arg1-of (r3 / report-01))) :time (a / already)) :time (y / year :mod (l / last)))
(( / ( :( (n / name) :op1 "Rama")
(a / and :op1 (g / give-01 :arg0 (c / comment-01 :arg0 (h / he) :medium (b / broadcasts :mod (p / popular :degree (m / most)) :poss (c2 / company :name (n / name :op1 "BBC")))) :arg1 (t / this) :arg2 (b2 / back :prep-to (t2 / thing :arg2-of (h2 / head-01 :arg0 (p2 / person :name (n2 / name :op1 "Tony" :op2 "Ball") :arg0-of (h3 / head-01 :arg1 (s / sky) :time (f / former))))) :arg1 (t3 / this))) :op2 (s2 / suggest-01 :arg0 (p3 / person) :arg1 (r / recommend-01 :arg1 (s3 / sell-01 :arg0 (c3 / company) :arg1 (s4 / show-04 :arg1 (c4 / company) :example (e / eastenders))))))
(a / act-02 :arg0 (h / he) :time (a2 / after :op1 (m / murder-01 :arg0 (p / person :name (n / name :op1 "Barry" :op2 "Van" :op3 "Treese")))) :mod (i / indeed) :mod (i2 / indeed))
(l / like-01 :arg0 (i / i) :arg1 (g / guy))
(l / like-01 :arg0 (i / i) :arg1 (g / guy))
(a / and :op1 (s / sunday :arg1 (p / program)) :op2 (d / date-entity :season (N / N-A)) :op3 (d2 / date-entity :season (N2 / N-A)))
(a / and :op1 (p / possible-01 :arg1 (s / see-01 :arg0 (p2 / person) :arg1 (s2 / statistic :poss (h / he)) :arg1-of (i / include-91 :arg2 (a2 / and :op1 (p3 / person :quant 31 :arg1-of (i2 / include-91 :arg2 (p4 / person :quant 31))) :op2 (p5 / person :quant 35 :arg1-of (i3 / include-91 :arg2 (p6 / person :quant 35))))))) :op2 (t / think-01 :arg0 (p7 / person) :arg1 (p8 / punt :domain (i4 / it))) :op3 (t2 / think-01 :arg0 (p9 / person) :arg1 (p10 / punt :arg1 (a3 / and :op1 (h2 / hand :part-of (p11 / person)) :op2 (p12 / person :arg0-of (t3 / train-01))) :beneficiary (y / youth))))
(f / fan :polarity -)
(i / instead-of-91 :arg1 (a / and :op1 (h / have-03 :arg0 (p / person :arg0-of (h2 / have-org-role-91 :arg2 (c / chancellor))) :arg1 (a2 / attitude :poss (g / government-organization :arg0-of (g2 / govern-01 :arg1 (c2 / country :name (n / name :op1 "N-A"))))) :arg1-of (h3 / high-02)) :op2 (p2 / push-01 :arg0 (p3 / person :arg0-of (h4 / have-org-role-91 :arg2 (c3 / chancellor))) :arg1 (a3 / attitude :poss (g3 / government-organization :arg0-of (g4 / govern-01 :arg1 (o / organization :name (n2 / name :op1 "National" :op2 "Socialism")))))) :arg1-of (p4 / public-02)) :arg2 (h5 / help-01 :arg0 (a4 / and :op1 (h6 / help-01 :arg0 (p5 / person :arg0-of (h7 / have-org-role-91 :arg1 (h8 / humanity) :arg2 (c4 / chancellor))) :arg1 (c5 / construct-01 :arg0 (p6 / person) :arg1 (t / thing :arg0-of (e / ensure-01 :arg1 (h9 / humanity))))) :op2 (p7 / pushed :arg0 (p8 / person)))))
(a / and :op2 (a2 / agree-01 :arg1 (b / buy-01 :arg0 (p / person :name (n / name :op1 "Mueller")) :arg1 (h / house) :instrument (p2 / practice)) :arg1-of (g / general-02)))
(l / level :mod (l2 / level :arg1-of (h / high-02)) :domain (t / this))
(s / say-01 :arg0 (p / person :name (n / name :op1 "Roger" :op2 "Diederen") :arg0-of (h / have-org-role-91 :arg1 (p2 / person :name (n2 / name :op1 "Roger" :op2 "Diederen") :arg0-of (h2 / have-org-role-91 :arg1 (l / location :name (n3 / name :op1 "Kunsthalle")) :arg2 (d / director))) :arg2 (d2 / director))) :arg1 (m / much :degree (m2 / more :degree (m3 / much :degree (s2 / so)) :compared-to (c / clothes :arg1-of (b / beautiful-02 :mod (j / just)))) :domain (i / it)))
(s / say-01 :arg0 (p / person :name (n / name :op1 "Diedrich") :arg0-of (h / have-org-role-91 :arg1 (p2 / person :name (n2 / name :op1 "Roger") :arg0-of (h2 / have-org-role-91 :arg1 (l / location :name (n3 / name :op1 "Kunsthalle")) :arg2 (d / director))) :arg2 (d2 / director))) :arg1 (a / and :op1 (m / more :degree (m2 / much :degree (s2 / so)) :compared-to (c / clothes :arg1-of (b / beautiful-02 :mod (j / just)))) :op2 (p3 / person :arg0-of (h3 / have-org-role-91 :arg1 (l2 / location :name (n4 / name :op1 "Kunsthalle")) :arg2 (d3 / director))) :domain (i / it)))
(a / and :op1 (u / up :arg1 (w / we)) :op2 (f / float-01 :arg1 (w2 / we) :arg2 (a2 / another :quant 1)))
(s / say-01 :arg1 (f / favorite :arg0 (p / person :mod (c / continent :name (n / name :op1 "N-A")) :arg1-of (s2 / single-02) :mod (c2 / continent :name (n2 / name :op1 "N-A"))) :arg1 (p2 / person :name (n3 / name :op1 "Dimitrij" :op2 "Ovtcharov") :arg0-of (r / rival-01 :arg1 (c3 / continent)) :arg1-of (s3 / single-02)) :time (n4 / now :polarity -)) :arg2 (' / ''))
(l / listen-01 :mode (i / imperative) :polite (+ / +) :arg0 (y / you) :arg1 (s / series :quant (s2 / series) :arg1-of (m / make-18 :arg0 (i2 / i))) :condition (w / want-01 :arg0 (y2 / you) :arg1 (k / know-01 :arg0 (y3 / you) :arg1 (m2 / more :topic (c / case-03)))))
(l / launch-01 :arg1 (s / sell-01 :arg1 (l2 / location :name (n / name :op1 "Baleno"))) :location (c / continent :name (n2 / name :op1 "Europe")) :location (s2 / spring :quant 2016))
(a / and :op1 (b / be-located-at-91 :arg1 (t / they) :arg2 (a2 / above :op1 (a3 / and :op1 (e / end-01 :arg1 (o / ornate :quant 1)) :op2 (c / courtroom :arg1 (m / mural :poss (c2 / country :name (n / name :op1 "United" :op2 "States"))))))))
(a / and :op1 (l / looming :arg1 (p / person :quant (b / between :op1 1 :op2 2)) :location (a2 / above :op1 (a3 / and :op1 (e / end-01 :arg1 (o / ornate)) :op2 (e2 / end-01 :arg1 (s / storey :quant 2))))) :op2 (m / mural :arg0 (c / country :name (n / name :op1 "United" :op2 "States"))))
(s / say-01 :arg0 (t / thing :arg1-of (e / estimate-01 :arg0 (o / organization :name (n / name :op1 "Institute" :op2 "for" :op3 "Employment" :op4 "Research")))) :arg1 (p / possible-01 :arg1 (e2 / employ-01 :arg1 (p2 / person :arg1-of (i / include-91 :arg2 (p3 / person :location (c / country :name (n2 / name :op1 "Germany"))) :arg3 (p4 / percentage-entity :value (N / N-A)))) :time (r / run-13 :arg1-of (l / long-03)))))
(f / focus-01 :arg0 (f2 / focus-01 :arg2 (s / shop :mod (n / new))))
(l / list-01 :arg1 (o / organization :name (n / name :op1 "IT" :op2 "company" :op3 "S" :op4 "&" :op5 "T") :arg1-of (l2 / list-01 :arg2 (a / and :op1 (o2 / office) :op2 (p / produce-01))) :quant (m / multiple :op1 4)) :arg2 (a2 / and :op1 (y / young) :op2 (c / company :arg1-of (i / innovate-01)) :op3 (c2 / company :arg1-of (i2 / innovate-01) :location (s / sector :mod (t / technology)))) :arg1-of (i3 / include-91 :arg2 (a3 / and :op1 (b / building :quant 4 :arg1-of (i4 / include-91 :arg2 (f / floors :quant 6 :part-of (a4 / and :op1 (o3 / office) :op2 (p2 / produce-01))))) :op2 (b2 / building :arg0-of (p3 / produce-01 :arg1 (s2 / stock))))))
(m / multi-sentence :snt1 (l / list-01 :arg1 (a / and :op1 (b / building :quant 4 :arg1-of (i / include-91 :arg2 (f / floors :quant 6 :mod (e / exchange-01 :arg1 (s / stock))))) :op2 (b2 / building :arg0-of (p / produce-01 :arg1 (e2 / exchange-01 :arg1 (s2 / stock))))) :arg2 (a2 / and :op1 (b3 / building :quant 4 :arg1-of (i2 / include-91 :arg2 (f2 / floors :quant 6 :poss (e3 / exchange-01 :arg1 (s3 / stock))))) :op2 (b4 / building :quant 6 :arg1-of (i3 / include-91 :arg2 (b5 / building :quant 6 :mod (e4 / exchange-01 :arg1 (s4 / stock))))))) :snt2 (r / rented :arg0 (o / organization :name (n / name :op1 "S&T") :arg1-of (i4 / innovate-01)) :arg1 (c / company :arg1-of (i5 / innovate-01)) :arg2 (s5 / sector :mod (t / technology))))
(s / say-01 :arg0 (p / person :name (n / name :op1 "Silvia" :op2 "Müller")) :arg1 (a / and :op1 (c / come-01 :arg1 (p2 / person :quant (a2 / about :op1 2000) :arg0-of (h / have-rel-role-91 :arg2 (p3 / patient))) :arg4 (p4 / practice)) :op2 (s2 / say-01 :arg0 (p5 / person :name (n2 / name :op1 "Gongoll" :op2 "Felstehausen")) :arg1 (p6 / practice-01 :arg0 (p7 / person :quant (a3 / about :op1 500) :arg0-of (h2 / have-rel-role-91 :arg2 (p8 / patient))) :arg1 (p9 / practice-01)))))
(a / appreciate-02 :arg1 (t / they) :degree (v / very))
(b / believe-01 :arg0 (p / person :arg1-of (e / expert-01)))
(h / have-concession-91 :arg2 (c / cause-01 :arg0 (c2 / condition :mod (p / poor) :prep-against (s / state :poss (c3 / city :name (n / name :op1 "Berlin"))))))
(c / cause-01 :arg0 (c2 / condition-01 :arg1 (d / detain-01 :arg1 (c3 / country) :arg2 (c4 / country))) :arg1 (s / sue-02 :arg0 (h / he) :mod (l / liability)))
(a / and :op1 (s / suffer-01 :arg0 (v / victim) :arg1 (f / fracture :mod (b / bone :mod (n / nasal)))) :op2 (h / heavily :arg0 (v2 / victim) :arg1 (g / game :name (n2 / name :op1 "N-A")) :manner (h2 / heavy) :manner (h3 / heavy)))
(p / possible-01 :arg1 (c / clarified :arg1 (d / dispute-01 :arg0 (a / and :op1 (e / enterprise) :op2 (s / state :arg0-of (h / have-org-role-91 :arg1 (o / organization :name (n / name :op1 "European" :op2 "Union")) :arg2 (m / member))))) :mod (a2 / also)))
(c / contrast-01 :arg1 (b / bail-out-02 :arg1 (p / person :name (n / name :op1 "Hogg")) :prep-in (c2 / case :mod (t / this))) :arg2 (k / keep-04 :arg1 (p2 / person) :arg2 (c3 / custody) :purpose (c4 / case-03 :arg1 (c5 / case :mod (o / outstanding) :mod (o2 / other)))))
(g / get-03 :arg1 (h / he) :arg2 (g2 / gratification :arg1 (h2 / he) :degree (g3 / great)) :arg1-of (c / cause-01 :arg0 (c2 / change-01 :arg1 (m / money :quant (a / amr-unknown)))))
(m / multi-sentence :snt1 (s / say-01 :mode (i / interrogative) :arg0 (i2 / i) :arg1 (a / amr-unknown :arg1-of (d / desire-01 :arg0 (i3 / i)))) :snt2 (c / contrast-01 :arg1 (b / begin-01 :mode (i4 / interrogative) :polarity - :arg0 (i5 / i)) :arg2 (f / feel-01 :mode (i6 / interrogative) :arg0 (i7 / i) :arg1 (u / unite-01 :arg1 (i8 / i) :arg2 (p / pitch :mod (g / good :degree (q / quite)) :arg1-of (c2 / create-01 :location (i9 / inning :ord (o / ordinal-entity :value 3))))))))
(s / say-01 :arg0 (p / person :name (n / name :op1 "LaForge")) :arg1 (t / try-01 :arg0 (w / we) :arg1 (e / encourage-01 :arg0 (w2 / we) :arg1 (p2 / person :arg0-of (s2 / study-01) :poss (w3 / we)) :arg2 (r / return-01 :arg1 (p3 / person)))))
(h / have-03 :arg0 (p / person :name (n / name :op1 "Richard" :op2 "Glossip")) :arg1 (p2 / problem :topic (t / thing :arg1-of (i / include-91 :arg2 (t2 / thing :arg1-of (s / say-01 :arg0 (i2 / i)) :arg1-of (w / write-01 :arg0 (i3 / i)))) :quant (s2 / some))))
(h / hospitalized :arg1 (t / then-plaintiff) :duration (t2 / temporal-quantity :quant (N / N-A) :unit (m / month)) :frequency (r / rate-entity-91 :arg3 (t3 / temporal-quantity :quant (N2 / N-A) :unit (h2 / hour)) :arg4 (c / cell :arg1-of (r2 / resemble-01)) :location (c2 / cell :part-of (l / location :name (n / name :op1 "Karlsruhe")))))
(( / ( :( (n / name) :op1 "Marco" :op2 "Rubio")
(e / exemplify-01 :purpose (e2 / exemplify-01 :arg0 (s / steered :arg0 (h / he) :arg1 (s2 / shoot-02 :arg1 (l / location :name (n / name :op1 "Ideye")) :location (o / over :op1 (- / -rrb- :ord (o2 / ordinal-entity :value 56)))))))
(a / and :op1 (p / participate-01 :arg0 (p2 / person :arg0-of (p3 / participate-01 :arg1 (m / market))) :arg1 (t / temporal-quantity :quant (N / N-A) :unit (y / year)) :time (h / hike :arg1 (r / rate :mod (r2 / rate)))) :op2 (m2 / meet-03 :arg0 (p4 / person :arg0-of (h2 / have-org-role-91 :arg1 (o / organization :name (n / name :op1 "Federal" :op2 "Open" :op3 "Market" :op4 "Committee")))) :time (w / week :mod (t2 / this)) :arg1-of (e / end-01 :location (t3 / thursday))))
(p / possible-01 :polarity - :arg1 (c / comply-01 :arg0 (c2 / company :arg0-of (p2 / provide-01 :arg1 (a / accommodation))) :arg1 (a2 / amount :mod (c3 / certain) :quant-of (o / or :op1 (r / rails) :op2 (s / size :poss (s2 / skylights))))) :time (t / time :mod (e / emergency)))
(t / tight :arg1 (s / situation :location (m / market :arg0-of (h / house-01) :mod (g / german))))
(e / enrich-01 :arg0 (a / album) :arg1 (g / group :consist-of (e2 / excellent-02 :arg1-of (e3 / excellent-02))) :prep-without (a2 / audience))
(a / and :op2 (r / reason :quant (m / many) :arg0-of (c / cause-01 :arg1 (o / obligate-01 :arg1 (h / he) :arg2 (f / fight-01 :arg0 (h2 / he) :arg2 (e / elect-01 :arg1-of (g / general-02)))))))
(a / and :op1 (r / recommend-01 :arg1 (o / overtake :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (p2 / police) :arg2 (o2 / officer))) :arg1 (c / car :poss (p3 / person)) :arg2 (s / side)) :time (d / drive-01 :arg0 (p4 / person) :arg1 (h2 / highway :quant 1 :arg1-of (n / near-02 :arg2 (l / location :name (n2 / name :op1 "Greenville")))) :time (l2 / late :degree (m / more))) :time (l3 / late :degree (m2 / more))) :op2 (f / flee-05 :arg0 (p5 / person) :arg1 (c2 / car :poss (p6 / person)) :arg2 (s2 / side)) :op3 (a2 / and :op1 (r2 / run-02 :arg0 (p7 / person) :destination (w / woods)) :op2 (k / kill-01 :arg0 (p8 / person) :arg1 (p9 / person) :accompanier (s3 / shoot-02))))
(t / tell-01 :arg0 (p / person :name (n / name :op1 "Sreekanth" :op2 "Chalasani") :arg0-of (h / have-org-role-91 :arg1 (o / organization :name (n2 / name :op1 "Salk" :op2 "Institute") :part-of (u / university :name (n3 / name :op1 "N-A") :location (c / country-region :name (n4 / name :op1 "N-A")))) :arg3 (r / research-01))) :arg1 (p2 / possible-01 :arg1 (r2 / replace-01 :arg0 (p3 / procedure) :arg1 (i / impulses :mod (e / electricity)) :time (d / day :mod (o2 / one)) :location (b / brain :part-of (p4 / people)) :purpose (t2 / treat-01 :arg0 (p5 / procedure) :arg1 (s / symptom :mod (d2 / disease :mod (p6 / parkinson))))) :time (d3 / day :mod (o3 / one))) :arg2 (g / guardian))
(p / present-01 :arg0 (h / he) :arg1 (a / and :op1 (c / carrie) :op2 (c2 / carrie) :op3 (l / lowell)) :mod (m / main) :time (s / since :op1 (m2 / marched)))
(a / and :op1 (p / present-01 :arg0 (h / he) :arg1 (a2 / available-02 :arg2 (t / theatre)) :mod (m / main) :time (s / since :op1 (m2 / marched)) :mod (m3 / main)) :op2 (l / lowell :arg0 (h2 / he)))
(i / invites :mode (i2 / imperative) :arg0 (y / you) :arg1 (y2 / you) :time (n / now) :time (r / ride-01 :arg0 (y3 / you) :arg1 (t / thing :arg1-of (d / dream-01 :arg0 (y4 / you)) :mod (p / product :name (n2 / name :op1 "N-A")))))
(s / say-01 :arg0 (d / disclosure :mod (f / full)) :arg1 (b / ball :polarity - :mod (c / crystal) :mod (c2 / clearest) :domain (p / person :arg0-of (v / vote-01) :mod (p2 / political-party :name (n / name :op1 "GOP"))) :time (p3 / past)))
(m / more :mod (e / even))
(a / and :op1 (c / change-01 :arg1 (s / stammelf :poss (h / he)) :mod (o / only :polarity -)) :op2 (c2 / change-01 :arg0 (h2 / he) :arg1 (r / reus-position)))
(m / multi-sentence :snt1 (r / rise-01 :arg1 (r2 / rate :mod (i / interest :mod (s / short))) :arg1-of (c / cause-01 :arg0 (r3 / rise-01 :arg1 (r4 / rate :mod (i2 / interest :mod (s2 / short)))))) :snt2 (a / and :op1 (f / flatter :arg1 (c2 / curve :mod (c3 / credit))) :op2 (i3 / increase-01 :arg1 (v / volatility) :arg2 (t / thing :arg2-of (c4 / characteristic-02 :arg1 (m2 / market)) :mod (a2 / all)) :condition (t2 / tightens :arg0 (g / government-organization :name (n / name :op1 "Fed")) :arg1 (s3 / strategy :poss (g2 / government-organization))))))
(s / show-01 :arg0 (s2 / study :mod (n / new)) :arg1 (c / cost-01 :arg1 (f / float-01 :arg1 (a / area-quantity :quant (N / N-A) :unit (m / meter :mod (s3 / square))) :mod (p / particular)) :arg2 (m2 / most)))
(m / multi-sentence :snt2 (w / want-01 :arg0 (g / government-organization :arg0-of (g2 / govern-01 :arg1 (f / federal))) :arg1 (a / and :op1 (r / review-01 :arg1 (f2 / framework :arg1-of (l / legal-02))) :op2 (l2 / location :location-of (a2 / adapt-01 :arg1 (t / thing :arg2-of (a3 / adapt-01 :arg1 (d / develop-01 :mod (n / new)))) :arg1-of (n2 / need-01))))) :snt1 (s / saddled :polarity - :arg1 (p / person :arg0-of (d2 / drive-01)) :arg2 (r2 / risk-01 :arg0 (p2 / person) :arg2 (l3 / liability :mod (a4 / additional) :mod (a5 / any)))))
(s / see-01 :mode (i / imperative) :arg0 (y / you) :arg1 (v / video :name (n / name :op1 (a / anti-arms) :op2 (f / fairs)) :mod (i2 / international) :mod (i3 / international)))
(c / contrast-01 :arg1 (f / fact :domain (l / life :mod (e / economy))) :arg2 (i / increase-01 :arg1 (r / rate :mod (i2 / interest)) :frequency (o / often)))
(p / place :location-of (p2 / person :name (n / name :op1 "Martin" :op2 "Luther")) :time (n2 / now) :mod (n3 / near) :time (a / after :op1 (r / reformation :location (c / country))))
(a / and :op1 (o / obligate-01 :arg1 (p / person :arg0-of (h / have-org-role-91 :arg1 (i / it) :arg2 (m / member))) :arg2 (a2 / account-01 :arg0 (p2 / person))) :op2 (i2 / important :degree (v / very) :domain (m2 / move-02 :arg0 (a3 / authority))))
(c / commit-01 :arg0 (o / organization :name (n / name :op1 "DFB")) :arg1 (r / refugee) :arg2 (r2 / refugee))
(c / contrast-01 :arg2 (a / and :op1 (c2 / cheap-02 :arg1 (h / he) :degree (e / extreme) :arg1-of (c3 / cause-01 :arg0 (c4 / circumstance :mod (p / provocative :degree (e2 / extreme)) :prep-with (p2 / person :name (n / name :op1 "Harrison"))))) :op2 (t / think-01 :arg0 (i / i) :arg1 (d / deserve-01 :arg0 (h2 / he) :arg1 (c5 / credit :quant (m / much))))))
(i / include-91 :arg1 (m / man :quant (a / about :op1 1,80)) :arg2 (s / size :poss (m2 / man)))
(a / and :op2 (o / offer-01 :arg0 (o2 / office :mod (d / district) :mod (n / new)) :arg1 (a2 / and :op1 (p / prevent-01) :op2 (h / health) :op3 (w / wellness)) :mod (a3 / also)))
(b / bad-07 :mode (i / interrogative) :arg1 (i2 / industry) :degree (s / so))
(e / employ-01 :arg0 (p / person :arg1-of (e2 / employ-01)) :arg1 (p2 / person :quant (a / around :op1 302.000)) :time (e3 / end-01 :arg1 (y / year :mod (f / finance) :quant (b / between :op1 302.000 :op2 14))))
(r / report-01 :arg0 (p / person :arg1-of (e / expert-01)) :arg2 (l / location :name (n / name :op1 "Public" :op2 "Health" :op3 "England")))
(c / cup)
(s / say-01 :arg1 9 :arg2 (g / get-01 :arg0 (y / you) :arg1 (s2 / system :arg0-of (o / operate-01 :mod (n / new)) :mod (n2 / new))) :time (r / release-01 :arg1 (o2 / organization :name (n3 / name :op1 "Apple"))))
(s / say-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (p2 / person :name (n / name :op1 "Marcus" :op2 "Trier") :arg0-of (h2 / have-org-role-91 :arg2 (d / director))) :arg2 (d2 / director :mod (v / vice)))) :arg1 (p3 / person :name (n2 / name :op1 "Marcus" :op2 "Trier") :arg0-of (h3 / have-org-role-91 :arg2 (d3 / director :mod (v2 / vice)))) :arg1-of (c / cause-01 :arg0 (a / and :op1 (n3 / near-02 :arg1 (s2 / site :arg1-of (n4 / near-02 :arg2 (n5 / near-02 :arg2 (s3 / site :mod (n6 / new) :location (c2 / city :name (n7 / name :op1 "N-A"))))))) :op2 (r / remain-01 :arg1 (a2 / and) :arg3 (b / building :mod (h4 / historic))))))
(c / contrast-01 :arg1 (r / recover-01 :arg1 (m / market) :degree (s / somewhat) :time (m2 / month :mod (t / this))) :arg2 (b / be-located-at-91 :arg1 (p / percentage-entity :value (N / N-A)) :arg2 (b2 / below :op1 (p2 / peak-01 :arg1-of (p3 / possible-01))) :time (n / now)))
(a / account-01 :arg0 (a2 / and :op1 (p / person :name (n / name :op1 "Donald" :op2 "Trump")) :op2 (p2 / person :name (n2 / name :op1 "Ben" :op2 "Carson"))) :arg1 (s / support-01 :arg1 (p3 / person :arg0-of (v / vote-01 :arg1 (c / criminal-organization :name (n3 / name :op1 "N-A")))) :arg1-of (i / include-91 :arg2 (s2 / support-01 :arg0 (p4 / person) :arg1 (p5 / person :arg0-of (v2 / vote-01 :arg1 (c2 / criminal-organization :name (n4 / name :op1 "N-A"))))) :arg1-of (i2 / include-91 :arg2 (s3 / support-01 :arg0 (p6 / person) :arg1 (p7 / person :arg0-of (v3 / vote-01 :arg1 (c3 / criminal-organization :name (n5 / name :op1 "N-A")))) :mod (p8 / particular))))) :time (n6 / now))
(s / show-01 :arg0 (i / increase-01 :arg1 (w / wage)) :arg1 (s2 / sign :arg1-of (r / recover-01)))
(i / increase-01 :arg0 (w / wage-01) :arg1 (s / sign :arg1-of (r / recover-01)))
(i / increase-01 :arg0 (w / wage-01) :arg1 (s / sign :arg1-of (r / recover-01)))
(s / say-01 :arg0 (p / person :arg0-of (s2 / support-01 :arg1 (p2 / person :name (n / name :op1 "Clinton"))) :quant (m / more-than :op1 (1 / 1/2))) :arg1 (c / choose-01 :arg0 (p3 / person :name (n2 / name :op1 "Biden")) :arg1 (c2 / choose-01 :arg0 (p4 / person) :arg1 (p5 / person :name (n3 / name :op1 "Sanders")) :ord (o / ordinal-entity :value 2))))
(e / enter-01 :arg0 (e2 / enter-01 :arg1 (h / home :poss (p / person :arg0-of (s / study-01)))) :arg1 (t / terrifying :arg1 (e3 / enter-01) :degree (a / absolute)))
(d / differ-02 :arg1 (s / study-01 :arg0 (o / organization :name (n / name :op1 "Premier" :op2 "injuries" :op3 "Ltd"))) :arg2 (d2 / disease :arg1-of (r / record-01 :arg0 (p / person :name (n2 / name :op1 "Wilshere")))) :time (s2 / since :op1 (b / before :op1 (n3 / now) :quant (t / temporal-quantity :quant (N / N-A) :unit (y / year)))))
(a / and :op1 (s / support-01 :arg0 (a2 / and :op1 (p / person :arg0-of (h / have-org-role-91 :arg2 (m / member))) :op2 (p2 / person :arg0-of (h2 / have-org-role-91 :arg2 (m2 / member)))) :arg1 (a3 / and :op1 (f / fund :purpose (i / insure-02 :arg1 (h3 / health))) :op2 (t / thing :arg1-of (d / donate-01))) :arg3 (a4 / and :op1 (p3 / person :arg0-of (h4 / have-org-role-91 :arg2 (m3 / member))) :op2 (p4 / person :arg0-of (h5 / have-org-role-91 :arg2 (m4 / member)))) :arg3 (a5 / and :op1 (p5 / person :arg0-of (h6 / have-org-role-91 :arg2 (m5 / member))) :op2 (p6 / person :arg0-of (h7 / have-org-role-91 :arg2 (m6 / member))))) :op2 (c / continue-01 :arg0 (a6 / and) :arg1 (a7 / and :op1 (e / educate-01) :op2 (c2 / companions :mod (g / grief)))))
(m / multi-sentence :snt1 (a / and :op2 (b / be-located-at-91 :arg1 (t / thing :arg2-of (r / result-01)) :arg2 (c / control-01 :arg1 (a2 / and :op1 (p / pressure :mod (b2 / blood)) :op2 (t2 / triglycerides) :op3 (' / '') :op4 ('2 / '') :arg1-of (b3 / bad-07 :degree (m2 / more)))))) :snt2 (g / good :degree (m3 / more) :domain (t3 / thing :arg2-of (r2 / result-01))) :snt3 (f / find-01 :arg0 (p2 / person :mod (a3 / authors)) :arg1 (p3 / person :arg1-of (f2 / find-01))))
(a / assure-01 :arg0 (t / they) :arg1 (h / he) :arg2 (p / possible-01 :arg1 (r / reached :arg0 (t2 / they) :arg1 (r2 / refugee :arg1-of (c / come-01)) :mod (s / still))))
(a / and :op1 (p / person :name (n / name :op1 "Hogg") :arg0-of (h / have-org-role-91 :arg1 (o / organization :name (n2 / name :op1 "Dundee")) :arg2 (o2 / organization :name (n3 / name :op1 "Dundee")))) :op2 (p2 / person :arg0-of (h2 / have-org-role-91 :arg1 (o3 / organization) :arg2 (m / member))) :op3 (p3 / person :arg0-of (h3 / have-org-role-91 :arg1 (o4 / organization) :arg3 (g / guilty-01 :arg1 (p4 / person)))) :op4 (p5 / person :arg0-of (h4 / have-rel-role-91 :arg1 (p6 / person) :arg2 (c / child))) :op5 (p7 / person :arg0-of (h5 / have-rel-role-91 :arg1 (p8 / person) :arg2 (c2 / child))) :op6 (p9 / person :arg0-of (h6 / have-rel-role-91 :arg1 (p10 / person) :arg2 (c3 / child))) :op6 (p11 / person :arg0-of (h7 / have-rel-role-91 :arg1 (p12 / person) :arg2 (c4 / child))) :op6 (p13 / person :arg0-of (h8 / have-rel-role-91 :arg1 (p14 / person) :arg2 (c5 / child))) :op6 (p15 / person :arg0-of (h9 / have-rel-role-91 :arg1 (p16 / person) :arg2 (c6 / child))) :op6 (p17 / person :arg0-of (h10 / have-rel-role-91 :arg1 (p18 / person) :arg2 (c7 / child))) :op7 (p19 / person :arg0-of (h11 / have-rel-role-91 :arg1 (p20 / person) :arg2 (c8 / child))) :op7 (p21 / person :arg0-of (h12 / have-rel-role-91 :arg1 (p22 / person) :arg2 (c9 / child))) :time (y / year :mod (t / this)))
(s / say-01 :arg0 (p / person :arg0-of (p2 / participate-01 :arg1 (m / meet-03)) :arg1-of (i / include-91 :arg2 (p3 / person :quant 12 :arg0-of (p4 / participate-01)))) :arg1 (c / contrast-01 :arg1 (r / receive-01 :arg0 (p5 / person) :arg1 (f / fund) :arg2 (p6 / person :arg0-of (m2 / manufacture-01 :arg1 (d / drug :mod (e / electronic))))) :arg2 (f2 / fund-01 :polarity - :arg1 (t / thing :arg1-of (r2 / report-01)) :time (a / after :op1 (r3 / report-01 :arg1 (r4 / recommend-01 :arg1 (r5 / receive-01 :arg0 (o / organization :name (n / name :op1 "Philip" :op2 "Morris" :op3 "International") :consist-of (t2 / tobacco)) :arg1 (r6 / report-01) :time (e2 / early :degree (m3 / more)))))))))
(i / injure-01 :arg1 (p / person :arg0-of (d / drive-01 :mod (l / lorry))) :manner (s / serious) :time (e / evening :mod (t / tuesday)) :manner (s2 / serious) :location (o / organization :name (n / name :op1 "Karlsruhe")))
(a / and :op1 (v / value-01 :arg1 (e / enterprise :arg0-of (l / lose-02 :arg1 (p / percentage-entity :value (N / N-A) :arg3-of (i / include-91 :arg2 (v2 / value :mod (m / market) :poss (e2 / enterprise)))))) :arg2 (t / thing :arg2-of (p2 / price-01 :arg1 (m2 / market)) :arg1-of (f / fall-01 :arg4 (t2 / thing :arg2-of (p3 / price-01 :arg1 (m3 / material :mod (r / raw)))))) :time (y / year :mod (t3 / this))) :op2 (a2 / affect-01 :arg0 (e3 / enterprise) :arg1 (t4 / thing :arg2-of (p4 / price-01 :arg1 (m4 / material :mod (r2 / raw))))) :time (y2 / year :mod (t5 / this)))
(c / contrast-01 :arg1 (g / get-01 :arg0 (y / you) :arg1 (n / nothing)) :arg2 (p / possible-01 :arg1 (k / keep-01 :arg0 (y2 / you) :arg1 (c2 / clothes))))
(o / obligate-01 :arg2 (p / play-01 :arg0 (d / districts :mod (o2 / other)) :arg1 (p2 / part :part-of (d2 / districts)) :location (h / here)))
(a / and :op1 (s / spend-02 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (g / government-organization :name (n / name :op1 "Federal" :op2 "Reserve")) :arg2 (g2 / governor))) :arg1 (r / rate-entity-91 :arg1 (u / up-to :op1 (b / between :op1 (t / temporal-quantity :quant (N / N-A) :unit (d / day)) :op2 (t2 / temporal-quantity :quant (N2 / N-A) :unit (d2 / day)))) :arg2 (t3 / temporal-quantity :quant (N3 / N-A) :unit (d3 / day))) :location (a2 / around :op1 (t4 / table :mod (t5 / this))) :time (w / week :mod (t6 / this)) :purpose (d4 / decide-01 :arg0 (p2 / person) :arg1 (d5 / decide-01))) :op2 (d6 / decide-01 :arg0 (p3 / person) :arg1 (d7 / decide-01) :purpose (d8 / decide-01 :arg0 (p4 / person) :arg1 (r2 / raise-01 :arg0 (p5 / person) :arg1 (i / interest :arg1-of (k / key-02) :quant (n2 / nearly :op1 1)) :duration (o / ordinal-entity :value 1)))))
(a / and :op1 (l / lightness) :op2 (s / sing-01) :prep-with (w / word :mod (t / this)) :arg1-of (i / identify-01 :arg0 (t2 / they)))
(r / require-01 :arg1 (r2 / refugee) :time (a / after :op1 (s / stay-01 :arg1 (r3 / refugee) :duration (t / temporal-quantity :quant (N / N-A) :ord (o / ordinal-entity :value 1) :part-of (s2 / stay-01 :arg1 (y / you))))) :purpose (l / live-01 :arg0 (r4 / refugee) :arg1 (s3 / seeker :mod (m / malicious)) :time (a2 / accommodation :mod (i / initial) :mod (i2 / initial))))
(s / say-01 :arg0 (s2 / she) :arg1 (' / '' :polarity - :domain (p / person :arg0-of (h / have-org-role-91 :arg1 (i / i) :arg2 (p2 / president)))))
(a / and :op1 (c / criticize-01 :arg0 (c2 / city :name (n / name :op1 "Washington")) :arg1 (c3 / construct-01 :arg1 (s / settlement) :arg1-of (g / go-on-15))) :op2 (b / blame-01 :arg0 (p / person :name (n2 / name :op1 "Netanyahu")) :arg1 (p2 / person) :arg2 (c4 / commit-01 :arg1 (p3 / person) :arg2 (p4 / process-02 :arg1 (p5 / peace)))))
(c / contrast-01 :arg1 (f / funny :domain (p / prank :mod (g / good))) :arg2 (t / take-10 :arg0 (m / moment :mod (o / only) :time (b / before :op1 (b2 / become-01 :arg1 (h / he) :arg2 (b3 / boomerang)))) :arg1 (m2 / moment :mod (g2 / good))))
(a / and :op1 (c / company :mod (l / large :degree (m / most) :compared-to (w / world)) :arg1-of (i / include-91 :arg2 (c2 / company :mod (t / tech :arg1-of (h / high-02)) :mod (l2 / large :degree (m2 / most) :compared-to (w2 / world))))) :op2 (c3 / company :arg1-of (i2 / include-91 :arg2 (c4 / company :mod (t2 / tech :arg1-of (h2 / high-02)) :mod (l3 / large :degree (m3 / most) :compared-to (w3 / world))))) :time (l4 / late :degree (m4 / most)) :arg1-of (b / base-02 :arg2 (b2 / believe-01 :arg1 (p / perform-02 :arg0 (c5 / company) :arg1 (g / good :degree (m5 / more))))))
(s / spit :arg1 (a / and :op1 (m / meat) :op2 (p / potatoes)) :location (s2 / shop :poss (h / he)) :time (s3 / since :op1 (t / then)))
(t / tenable :arg1 (d / date :mod (t2 / this)) :arg1-of (d2 / deem-01) :time (d3 / date :mod (t3 / this)))
(a / ask-01 :arg0 (h / he) :arg1 (a2 / and :op1 (p / person :arg1-of (k / know-01 :polarity -) :arg0-of (s / send-01 :arg1 (p2 / picture))) :op2 (a3 / ask-02 :arg0 (h2 / he) :arg1 (s2 / send-01 :arg0 (h3 / he) :arg1 (p3 / photograph-01 :quant (m / more))) :arg2 (h4 / he))) :arg2 (h5 / he))
(w / want-01 :arg0 (p / person :name (n / name :op1 "Conrad")) :arg1 (s / set-up-03 :arg0 (p2 / person) :arg1 (c / container :location (p3 / peninsula :name (n2 / name :op1 "N-A"))) :arg2 (o / office)))
(h / have-03 :arg0 (t / they) :arg1 (d / dog :arg0-of (l / live-01 :location (h2 / house :mod (g / game :name (n / name :op1 "N-A")) :arg1-of (b / border-01 :arg2 (b2 / bayou :location (a / animal :mod (g2 / gau))))))))
(e / expect-01 :arg1 (c / charge-05 :arg1 (h / he) :arg2 (a / and :op1 (e2 / escape-01 :arg0 (h2 / he)) :op2 (a2 / assist-01 :arg0 (p / person :arg0-of (d / drive-01) :mod (o / omitted))) :op3 (o2 / offence :mod (t / traffic) :mod (o3 / other)))))
(s / support-01 :arg0 (p / person :name (n / name :op1 "Steve" :op2 "Healy") :arg0-of (h / have-org-role-91 :arg1 (c / country :name (n2 / name :op1 "N-A")) :arg2 (p2 / president :mod (a / association :mod (t / tennis))))) :arg1 (k / kokkinakis))
(s / support-01 :arg0 (p / person :name (n / name :op1 "Steve" :op2 "Healy") :arg0-of (h / have-org-role-91 :arg1 (a / association :mod (t / tennis) :mod (c / country :name (n2 / name :op1 "N-A"))) :arg2 (p2 / president))) :arg1 (k / kokkinakis))
(a / and :op1 (a2 / agree-01 :arg0 (s / scientist) :arg2 (p / person :arg0-of (h / have-org-role-91 :arg2 (s2 / scientist)))) :op2 (n / need-01 :arg0 (a3 / and :op1 (p2 / person :arg0-of (h2 / have-org-role-91 :arg2 (s3 / scientist))) :op2 (p3 / person :arg0-of (h3 / have-org-role-91 :arg1 (f / federal) :arg2 (m / minister :mod (c / construct-01 :arg1 (f2 / federal)))))) :arg1 (g / give-01 :arg0 (a4 / and) :arg1 (b / benefit :mod (t / tax-01) :quant (m2 / more)) :arg2 (i / invest-01 :arg2 (h4 / house-01))) :mod (a5 / also)))
(a / approach-02 :arg0 (c / company :name (n / name :op1 "Google")) :arg1 (a2 / and :op1 (a3 / announce-01 :arg1 (t / thing :arg1-of (d / donate-01))) :op2 (c2 / call-03 :arg1 (b / blog-01 :arg0 (h / he)))) :arg1-of (p / personal-02 :arg2 (t2 / thing :arg1-of (d2 / donate-01))))
(h / have-concession-91 :arg2 (l / leave-11 :arg0 (p / person :name (n / name :op1 "Manuel" :op2 "Neuer"))))
(m / multi-sentence :snt1 (s / say-01 :arg0 (h / he) :arg1 (p / person :arg0-of (h2 / have-rel-role-91 :arg1 (p2 / person) :arg2 (d / daughter)))) :snt2 (h3 / have-rel-role-91 :arg0 (p3 / person) :arg1 (p4 / person) :arg2 (f / friend :mod (g / good :degree (m2 / most)))))
(h / house-01 :arg1 (o / organization :name (n / name :op1 "Federal" :op2 "Constitutional" :op3 "Court")) :arg2 (c / cell :mod (s / small)) :time (f / former) :location (c2 / cell :mod (s2 / small)))
(i / issue-02 :polarity - :arg0 (t / this) :arg1-of (m / major-02))
(p / prepare-02 :arg1 (p2 / practice) :arg2 (b / boss :mod (n / new)) :time (d / date-entity :month 9 :day 19))
(f / fall-01 :arg1 (t / thing :mod (f2 / final) :arg1-of (d / decide-01)) :time (l / late :op1 (d2 / date-entity :month 9 :day 22)))
(a / affect-01 :arg0 (l / lose-02 :arg1 (t / tooth)) :arg1 (p / product-of :op1 (m / more-than :op1 (p2 / percentage-entity :value (N / N-A))) :op2 (p3 / population :arg1-of (i / include-91 :arg2 (p4 / population)))) :arg1-of (c / cause-01 :arg0 (a2 / affect-01 :arg0 (l2 / lose-02 :arg1 (t2 / tooth)) :arg1 (t3 / temporal-quantity :quant (N2 / N-A) :unit (y / year)))) :location (c2 / country :name (n / name :op1 "Germany")))
(c / cost-01 :arg1 (h / house :mod (r / rectory) :quant (a / area-quantity :quant (N / N-A) :unit (e / euro))) :arg2 (s / street) :location (s2 / street))
(n / need-01 :arg0 (w / we) :arg1 (d / dwelling :arg1-of (s / suffice-01)) :mod (a / also) :time (a2 / after :op1 (n2 / now) :duration (t / temporal-quantity :quant (N / N-A) :unit (d2 / decade))))
(s / sell-01 :arg0 (c / company) :arg1 (t / thing :arg1-of (i / invest-01) :mod (n / new)) :arg2 (s2 / share :quant (m / monetary-quantity :quant 125 :unit (d / dollar :mod (r / renminbi))) :arg0-of (r2 / represent-01 :arg1 (d2 / discount :quant (p / percentage-entity :value (N / N-A))) :arg2 (t2 / thing :arg2-of (p2 / price-01 :arg1-of (c2 / close-01))))))
(a / and :op1 (r / remain-01 :arg1 (m / man :mod (4 / 40-year-old) :source (l / location :name (n / name :op1 "Cobram"))) :arg3 (l2 / location :name (n2 / name :op1 "Cobram"))) :op2 (c / condition :arg1-of (s / stable-03) :domain (m2 / man)))
(c / consider-02 :arg1 (m / measure-01 :arg1 (w / weight :topic (s / size :topic (s2 / size))) :mod (c2 / certain)) :arg2 (b / between :op1 18,5 :op2 18,5) :arg1-of (n / normal-02))
(i / issue-02 :arg0 (o / organisations :arg1 (a / animal) :mod (v / various) :mod (v2 / various)) :frequency (o2 / often :degree (t / too)) :location (a2 / attitude :poss (a3 / animal :arg1-of (c / circus))))
(s / say-01 :arg0 (p / person :name (n / name :op1 "Schmidt")) :arg1 (n2 / need-01 :arg0 (a / and :op1 (b / business) :op2 (b2 / business)) :arg1 (t / think-01 :arg0 (a2 / and) :arg1 (e / economy)) :mod (p2 / particular)))
(m / match-01 :arg0 (a / and :op1 (p / person :arg0-of (h / have-org-role-91 :arg1 (c / country :name (n / name :op1 "Hungary")) :arg2 (p2 / president :mod (v / vice)))) :op2 (r / refugee :mod (n2 / nation) :mod (n3 / nation))) :arg1 (t / team :quant 100 :mod (n4 / nation) :mod (n5 / nation)) :arg2 (l / location :name (n6 / name :op1 "Saale") :location (p3 / peninsula :name (n7 / name :op1 "N-A"))))
(m / masterpiece :arg1 (- / -lrb- :name (n / name :op1 (' / '') :op2 ('2 / '') :op3 (-2 / -lrb-) :op4 (-3 / -lrb-) :op5 (-4 / -lrb-) :op6 (-5 / -lrb-) :op7 (-6 / -lrb-))) :arg2 (f / feel-01 :arg0 (y / you) :arg1 (f2 / feel-01 :arg0 (y2 / you) :arg1 (-7 / -rrb- :name (n2 / name :op1 (i / illinoise) :op2 ('3 / '') :op3 ('4 / '')) :mod (i2 / illinoise)))))
(c / crucial :domain (t / thing :arg1-of (d / decide-01) :arg1-of (i / include-91 :arg2 (t2 / thing :mod (o / other)))) :arg1-of (c2 / cause-01 :arg0 (a / attract-01 :arg0 (i2 / idea :topic (p / person :arg0-of (p2 / produce-01 :arg1 (h / home :poss (p3 / person)) :location (h2 / home))) :mod (t3 / too)) :arg1 (s / sell-01 :arg0 (p4 / person) :mod (o2 / only)))))
(a / and :op1 (r / report-01 :arg0 (o / organization :name (n / name :op1 "Ecumenical" :op2 "Hospice")) :time (i / immediate)) :op2 (p / participate-01 :arg0 (o2 / organization) :arg1 (c / create-01)) :time (s / seek-01 :arg0 (o3 / organization) :arg1 (h / help-01)))
(c / control-01 :arg0 (c2 / control-01 :arg1 (s / station :quant 2 :poss (o / organization :name (n / name :op1 "Mannheimer" :op2 "Salons")))) :arg1 (p / parade-02 :location (p2 / parade-02)))
(p / play-02 :arg0 (r / religious-group :name (n / name :op1 "Islam")) :arg1 (r2 / role :mod (i / important :degree (m / more)) :time (f / future)) :arg1-of (c / cause-01 :arg0 (a / and :op1 (p2 / person :mod (r3 / religious-group :name (n2 / name :op1 "Islam")) :domain (r4 / refugee :quant (m2 / many))) :op2 (h / have-part-91 :arg1 (r5 / religion) :arg2 (i2 / identity :poss (p3 / person)) :mod (i3 / important)))))
(p / picked :arg0 (p2 / person :arg0-of (h / have-rel-role-91 :arg1 (h2 / he) :arg2 (m / mother))) :arg1 (a / adolescents))
(a / and :op1 (p / publish-01 :arg0 (o / organization :name (n / name :op1 "PHE")) :arg1 (r / report :mod (b / basic) :mod (' / '')) :time (m / month :mod (l / last))) :op2 (d / describe-01 :arg0 (o2 / organization) :arg1 (h / he) :arg2 (r2 / review-01 :arg1 (t / thing :arg0-of (e / evidence-01)) :mod (c / comprehensive :degree (m2 / more)))))
(s / say-01 :arg0 (r / report :arg1-of (p / publish-01 :time (w / week :mod (t / this)))) :arg1 (a / and :op1 (l / lose-02 :arg0 (p2 / person :name (n / name :op1 "Tom" :op2 "Kierath") :arg0-of (a2 / analyze-01 :arg1 (o / organization :name (n2 / name :op1 "Morgan" :op2 "Stanley")))) :arg1 (r2 / rate-entity-91 :arg1 (m / monetary-quantity :quant 360 :unit (d / dollar)) :arg2 (v / volume-quantity :quant (N / N-A) :unit (g / gallon)))) :op2 (s2 / sell-01 :arg0 (p3 / person) :arg1 (r3 / rate-entity-91 :arg1 (m2 / monetary-quantity :quant 250 :unit (d2 / dollar)) :arg2 (v2 / volume-quantity :quant (N2 / N-A) :unit (g2 / gallon)))) :op3 (r4 / rate-entity-91 :arg1 (m3 / monetary-quantity :quant 250 :unit (d3 / dollar)) :arg2 (v3 / volume-quantity :quant (N3 / N-A) :unit (g3 / gallon)))))
(h / have-purpose-91 :arg2 (r / repair-01 :arg0 (a / authority) :arg1 (f / fence :mod (f2 / fast :degree (m / more)))))
(h / have-concession-91 :arg2 (a / and :op1 (h2 / have-03 :polarity - :arg0 (h3 / he) :arg1 (p / personality) :purpose (c / carry-out-03 :arg0 (p2 / personality) :arg1 (d / duty :poss (p3 / personality)) :arg1-of (e / effective-04))) :op2 (s / say-01 :arg0 (p4 / person :quant (n / nearly :op1 6) :arg0-of (h4 / have-org-role-91 :arg2 (h5 / head-of-state))) :arg1 (a2 / and :op1 (f / fit :polarity - :domain (t / temperament :poss (p5 / person)) :destination (g / government-organization :name (n2 / name :op1 "White" :op2 "House"))) :op2 (f2 / fit :polarity - :domain (t2 / temperament :poss (p6 / person)))))))
(m / multi-sentence :snt1 (c / cause-01 :arg1 (p / push-01 :arg0 (i / i) :arg1 (i2 / i) :time (b / before :op1 (g / gardening :arg1 (i3 / i))))) :snt2 (p2 / possible-01 :arg1 (d / differ-02 :arg1 (i4 / i) :time (n / now))))
(b / be-located-at-91 :arg1 (c / car :poss (h / he)) :arg2 (d / driveway) :mod (s / still))
(r / responsible-03 :arg0 (p / person :name (n / name :op1 "Carsten" :op2 "Spohr") :arg0-of (h / have-org-role-91 :arg2 (e / executive :mod (c / chief)))) :arg1 (o / organization :name (n2 / name :op1 "Eurowings")) :time (f / future))
(p / present-01 :arg0 (p2 / person :arg0-of (r / research-01)) :arg1 (a / analyze-01 :arg0 (p3 / person)) :time (b / before :op1 (a2 / analyses :arg0 (p4 / person :arg0-of (r2 / research-01)) :arg1 (p5 / person :arg0-of (r3 / research-01)))))
(m / multi-sentence :snt1 (c / cause-01 :arg0 (u / understand-01 :polarity - :arg1 (b / benefit-01 :arg1 (t / thing :arg2-of (f / fund-01))) :quant (m2 / many)) :mod (a / also) :arg1-of (c2 / cause-01 :arg0 (u2 / understand-01 :arg1 (t2 / thing :arg2-of (f2 / fund-01)) :manner (p / poor)))) :snt2 (a2 / and :op1 (a3 / available-02 :arg1 (p2 / person :name (n / name :op1 "Jutta" :op2 "Weigand") :arg0-of (h / head-01 :arg1 (p3 / person :arg0-of (h2 / head-01 :arg1 (m3 / movement :name (n2 / name :op1 (o / old-age)) :mod (b2 / business)))))) :arg2 (p4 / person :arg0-of (h3 / have-org-role-91 :arg1 (p5 / person :name (n3 / name :op1 "Antoni")) :arg3 (l / lead-02 :arg0 (p6 / person)))) :mod (a4 / also)) :op2 (a5 / available-02 :arg2 (s / service :name (n4 / name :op1 (c3 / civic) :op2 (a6 / amadeus) :op3 (a7 / amadeus)))) :mod (a8 / also)))
(s / send-01 :mode (i / imperative) :arg0 (w / we) :arg1 (o / or :op1 (p / picture) :op2 (v / video) :op3 (m / message)) :arg2 (w2 / we))
(s / send-01 :mode (i / imperative) :arg0 (w / we) :arg1 (o / or :op1 (p / picture) :op2 (v / video) :op3 (m / message)) :arg2 (w2 / we) :time (d / date-entity :day 9 :month 1 :year 1990))
(w / want-01 :arg0 (p / person :name (n / name :op1 "Jutta" :op2 "Breit")) :arg1 (p2 / purchase-01 :arg0 (p3 / person) :arg1 (d / dog)) :prep-in (f / fact))
(( / ( :( (n / name) :op1 "Monsieur" :op2 "Bieber")
(b / break-01 :arg1 (s / sell-01 :quant (a / around :op1 (p / percentage-entity :value (N / N-A)))) :time (y / year :mod (l / last)))
(c / contrast-01 :arg1 (a / admit-01 :arg0 (h / he) :arg1 (c2 / carry-out-03 :arg0 (h2 / he) :arg1 (s / search :arg1 (c3 / computer)))) :arg2 (s2 / say-01 :arg0 (h3 / he) :arg1 (c4 / cause-01 :arg0 (w / want-01 :arg0 (h4 / he) :arg1 (p / policeman :domain (h5 / he)) :purpose (s3 / scare-01 :arg0 (h6 / he) :arg1 (p2 / paedophile))) :arg1 (i / it))))
(m / multi-sentence :snt1 (a / and :op1 (b / begin-01 :arg1 (c / cooperate-01 :arg2 (n / neighbor-01 :arg2 (p / person :arg1-of (n2 / neighbor-01 :arg2 (p2 / person :name (n3 / name :op1 "Hauser"))) :mod (n4 / new)))) :degree (t / total)) :op2 (i / intend-01 :arg0 (p3 / person) :arg1 (c2 / cooperate-01 :arg0 (p4 / person) :arg1 (p5 / person :arg1-of (l / low-04 :degree (m2 / more)) :arg1-of (l2 / low-04 :degree (m3 / more)))))) :snt2 (m4 / matter-01 :arg1 (r / runtastic :mod (n5 / next)) :mod (o / only) :time (t2 / time)))
(f / feel-01 :arg0 (p / person :name (n / name :op1 "Gaultier")) :arg1 (o / old :degree (t / too) :prep-for (p2 / person :mod (t2 / terrible) :mod (t3 / terrible))))
FAILED_TO_PARSE#Two concepts in a row.
(a / and :op1 (p / pressure-01 :arg0 (i / i) :arg1 (i2 / it)) :op2 (u / urge-01 :arg0 (i3 / i) :arg1 (s / she) :arg2 (d / decide-01 :arg0 (s2 / she) :arg1 (d2 / decide-01 :arg0 (s3 / she)))))
(r / recommend-01 :arg1 (s / scheme :mod (r2 / retire-01) :beneficiary (p / person :arg0-of (p2 / pilot-01)) :domain (t / talk-01)))
(i / intervals :arg1 (b / between :op1 40,000 :op2 40,000) :time (b2 / begin-01 :arg1 (y / year)))
(w / want-01 :arg0 (o / organization :name (n / name :op1 "Lufthansa" :op2 "Group")) :arg1 (s / save-02 :arg0 (o2 / organization) :arg1 (m / money) :arg2 (o3 / organization :mod (g / good :degree (m2 / more)))) :arg1-of (c / cause-01 :arg0 (w2 / want-01 :arg0 (o4 / organization) :arg1 (s2 / save-02 :arg0 (o5 / organization) :arg1 (m3 / money) :arg2 (o6 / organization :mod (g2 / good :degree (m4 / more)))))))
(m / monetary-quantity :quant (N / N-A) :unit (e / euro) :domain (s / save-02 :arg0 (o / organization :name (n / name :op1 "Lufthansa" :op2 "Group")) :arg1 (o2 / organization :mod (g / good :degree (m2 / more))) :mod (a / alone)))
(a / and :op1 (c / combined :arg1 (t / transact-01 :quant 2 :mod (l / large :degree (m / most) :compared-to (w / world)))) :op2 (b / bring-01 :arg0 (t2 / transact-01) :arg1 (b2 / brand :mod (t3 / together) :example (a2 / and :op1 (p / person :name (n / name :op1 "Stella" :op2 "Artois")) :op2 (p2 / person :name (n2 / name :op1 "Peroni")) :op3 (o / organization :name (n3 / name :op1 "Grolsch"))))))
(r / report)
(o / open-01 :arg1 (o2 / office :mod (n / new) :mod (a / accomodation)) :time (r / recent))
(b / be-located-at-91 :arg1 (t / teenager) :arg2 (c / city :name (n / name :op1 "Glasgow") :location (a / around :op1 (p / person :name (n2 / name :op1 "SAM" :op2 "Groth") :arg1-of (s / single-02) :location (b2 / behind :op1 (p2 / person :name (n3 / name :op1 "Bernard" :op2 "Tomic") :location (b3 / behind :op1 (a2 / and :op1 (c2 / country) :op2 (c3 / country)))))))) :time (p3 / present))
(a / aim-01 :arg1 (d / draw-02 :arg0 (g / group :arg1-of (a2 / age-01 :arg2 (t / temporal-quantity :quant (N / N-A) :unit (y / year)))) :arg1 (g2 / group :mod (a3 / age :mod (e / every))) :prep-under (s / spelling :arg1 (a4 / and :op1 (d2 / dress :arg0-of (f / fascinate-01)) :op2 (d3 / dress :mod (a5 / animal)) :op3 (e2 / entertain-01 :mod (u / unique))))))
(s / see-01 :polarity - :arg0 (p / person :arg0-of (h / have-org-role-91 :arg2 (p2 / person :arg0-of (p3 / participate-01)))) :arg1 (p4 / person :arg0-of (p5 / participate-01) :arg0-of (h2 / have-org-role-91 :arg2 (p6 / person :arg0-of (p7 / participate-01))) :arg0-of (h3 / have-org-role-91 :arg2 (p8 / person :arg0-of (p9 / participate-01))) :arg0-of (h4 / have-org-role-91 :arg2 (p10 / person :arg0-of (p11 / participate-01)))) :time (e / ever) :mod (o / of-course) :mod (o2 / of-course))
(e / elect-01 :li 2016 :arg1 (p / person :name (n / name :op1 "Hillary" :op2 "Clinton")) :arg2 (a / ahead :op1 (p2 / person :name (n2 / name :op1 "Bernie" :op2 "Sanders"))))
(a / and :op1 (p / possible-01 :arg1 (h / help-01 :arg0 (f / football))) :op2 (w / want-01 :arg0 (f2 / football) :arg1 (h2 / help-01)))
(g / gathering :arg0 (w / we) :location (i / in-front-of :op1 (m / meet-03 :arg0 (o / organization :name (n / name :op1 "Supervisory" :op2 "Board")) :location (p / peninsula :name (n2 / name :op1 "N-A")))) :arg1-of (s / say-01 :arg0 (p2 / person :name (n3 / name :op1 "Plattner"))))
(r / rise-01 :arg1 (r2 / rate-entity-91 :arg1 (p / percentage-entity :value (N / N-A)) :arg2 (t / temporal-quantity :quant (N2 / N-A) :unit (y / year))) :arg2 (p2 / percentage-entity :value (N3 / N-A)))
(w / want-01 :arg0 (h / he) :arg1 (i / issue-01 :arg0 (p / person :arg0-of (h2 / have-org-role-91 :arg1 (o / organization :name (n / name :op1 "IAA")))) :arg1 (p2 / person :arg0-of (r / represent-01 :arg1 (o2 / organization))) :arg2 (p3 / person :arg0-of (r2 / represent-01 :arg1 (i2 / industry))) :mod (a / also)) :mod (a2 / also))
(s / say-01 :arg0 (p / person :name (n / name :op1 "Der" :op2 "Spiegel")) :arg1 (m / monetary-quantity :quant 30 :unit (e / euro) :mod (p2 / potential) :domain (c / company :mod (e2 / energy) :mod (e3 / energy))))
(s / say-01 :arg0 (o / organization :name (n / name :op1 "Deutsche" :op2 "Bank")) :arg1 (p / possible-01 :arg1 (a / and :op1 (r / risky :domain (b / backdrop :arg1 (b2 / backdrop :mod (e / economy) :mod (f / fragile) :mod (s2 / such)))) :op2 (r2 / raise-01 :arg1 (q / question-01 :arg1 (d / differ-02 :mode (i / interrogative) :arg1 (i2 / it)))))))
(a / and :op1 (p / possible-01 :arg1 (a2 / and :op1 (r / risky :domain (r2 / rate :mod (i / interest) :mod (f / fragile :mod (s / such)))) :op2 (r3 / raise-01 :arg1 (q / question-01 :arg1-of (q2 / question-01))))) :op2 (r4 / raise-01 :arg0 (r5 / rate) :arg1 (q3 / question-01)) :op3 (s2 / say-01 :arg0 (o / organization :name (n / name :op1 "Deutsche" :op2 "Bank")) :arg1 (d / differ-02 :mode (i2 / interrogative) :arg1 (i3 / it))))
(a / and :op1 (o / open-01 :polarity - :arg1 (a2 / and :op1 (b / building :mod (u / urban)) :op2 (b2 / building :mod (o2 / other)) :example (a3 / and :op1 (h / hint) :op2 (c / center :purpose (d / design-01 :arg1 (r / refugee)))))) :op2 (p / plan-01 :arg0 (c2 / center :part-of (r2 / refugee)) :arg1 (a4 / accommodation :poss (r3 / refugee))))
(s / say-01 :arg1 (t / think-01 :polarity - :arg0 (i / i) :arg1 (p / possible-01 :arg1 (i2 / it))) :arg2 (p2 / person :name (n / name :op1 "N-A")))
(h / have-03 :arg0 (h2 / he) :arg1 (m / mask :mod (o / oxygen)) :location (r / room :mod (l / locker)))
(a / and :op1 (m / make-01 :arg1 (c / collection :mod (i / impress-01)) :location (c2 / city :name (n / name :op1 "Montreal") :location (c3 / country :name (n2 / name :op1 "Canada"))) :time (p / previous)) :op2 (m2 / make-01 :arg1 (c4 / collect-01) :location (c5 / city :name (n3 / name :op1 "Paris"))))
(s / say-01 :arg0 (p / person :name (n / name :op1 "Gildner")) :arg1 (a / accuse-01 :arg0 (p2 / person) :arg1 (i / i) :arg2 (c / create-01 :arg0 (p3 / person) :arg1 (s2 / stand :mod (l / luxury)) :beneficiary (p4 / person))))
(m / matter-01 :arg1 (a / and :op1 (t / tolerance) :op2 (e / envision-01 :arg1 (s / society :arg1-of (o / open-09)))) :arg2 (i / it))
(t / thing :quant 1 :domain (l / learn-01 :arg0 (p / person :quant (a / all) :arg0-of (h / have-rel-role-91 :arg1 (p2 / person :arg0-of (h2 / have-rel-role-91 :arg1 (y / you) :arg2 (p3 / parent))) :arg2 (p4 / parent))) :arg1 (l2 / love-01 :arg0 (p5 / person) :arg1 (b / book)) :condition (l3 / love-01 :arg0 (p6 / person :arg0-of (h3 / have-rel-role-91 :arg1 (y2 / you) :arg2 (c / child))) :arg1 (b2 / book))) :time (b3 / before :op1 (k / know-01 :arg0 (y3 / you) :arg1 (i / it) :mod (a2 / almost))))
(c / contrast-01 :arg2 (s / show-01 :arg0 (s2 / series :name (n / name :op1 (n2 / nsu-murder))) :arg1 (i / ignore-01 :arg0 (a / and :op1 (p / police) :op2 (a2 / authority)) :arg1 (m / motive :mod (r / racist))) :manner (s3 / slow :degree (v / very))))
(t / think-01 :arg0 (i / i) :arg1 (c / chance-02 :arg0 (w / we) :arg1 (t2 / tap :arg0 (w2 / we) :arg1 (t3 / title))))
(d / device :mod (t / torture-01) :mod (l / law :polarity -) :prep-on (d2 / doorstep :poss (y / you)))
(c / contrast-01 :arg1 (d / deliver-01 :polarity - :arg1 (r / reason :arg0-of (c2 / cause-01 :arg1 (d2 / deliver-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (p2 / panel) :arg2 (m / member))) :arg1 (p3 / person :arg0-of (h2 / have-org-role-91 :arg1 (p4 / panel) :arg2 (m2 / member))))))) :arg2 (c3 / champions :quant (s / several) :arg1-of (i / include-91 :arg2 (f / fund-01 :arg0 (i2 / industry) :arg1 (p5 / paper) :mod (a / also)))))
(i / include-91 :arg1 (a / and :op1 (t / team :mod (g / good :degree (m / most)) :location (b / baseball)) :op2 (t2 / team :mod (l / league :mod (c / country :name (n / name :op1 "N-A"))))) :arg2 (t3 / team :mod (g2 / good :degree (m2 / most)) :location (b2 / baseball)) :time (e / early :degree (m3 / more)))
(c / contrast-01 :arg2 (d / dishes :arg1 (t / touch :arg1-of (s / special-02)) :mod (a / also)))
(m / multi-sentence :snt1 (a / and :op1 (b / be-located-at-91 :arg1 (p / person :name (n / name :op1 "Bieber")) :arg2 (c / country :name (n2 / name :op1 "US")) :mod (j / just)) :op2 (e / emphasized :arg0 (p2 / person) :arg1 (t / thing :arg1-of (d / do-02 :arg0 (p3 / person)) :arg1-of (s / single-02) :mod (n3 / new) :poss (p4 / person)))) :snt2 (' / '' :li 1 :arg1 (y / you)))
(a / and :op1 (m / miss-01 :arg1 (u / unit :mod (a2 / accommodation) :quant (s / some :op1 77,000)) :time (a3 / already)) :op2 (m2 / miss-01 :arg0 (p / person :name (n / name :op1 "Matthias" :op2 "Günther") :arg0-of (a4 / author-01 :arg1 (s2 / study-01))) :arg1 (p2 / person)) :time (c / current))
(a / and :op1 (l / lack-01 :arg0 (p / person :name (n / name :op1 "Matthias" :op2 "Günther") :arg0-of (a2 / author-01 :arg1 (s / study-01))) :arg1 (u / unit :mod (f / full)) :time (c / current) :location (a3 / around :op1 (c2 / conurbations)) :time (c3 / current)))
(p / plan-01 :arg1 (u / use-01 :arg1 (s / site) :arg2 (a / and :op1 (t / trade-01) :op2 (i / industry) :op3 (h / house-01))))
(t / teach-01 :arg0 (h / he) :arg1 (c / course :quant 2 :mod (o / online) :mod (o2 / only)) :time (y / year :mod (t2 / this)))
(r / record-01 :arg0 (v / venues :mod (t / trade-01) :location (a / and :op1 (c / city :name (n / name :op1 "London")) :op2 (c2 / city :name (n2 / name :op1 "Paris")))) :arg1 (p / profit :arg1-of (s / soft-02)) :mod (a2 / also))
(r / rise-01 :arg1 (s / sell-01) :arg2 (p / percentage-entity :value (N / N-A)) :arg4 (m / monetary-quantity :quant 12.3 :unit (d / dollar)))
(c / championships :arg1 (d / defender :mod (c2 / country :name (n / name :op1 "England"))) :location (c3 / country :name (n2 / name :op1 "France")) :mod (e / extra :degree (e2 / extra)) :time (u / until :op1 (d2 / date-entity :month 6)))
(h / highlights :domain (p / pants-outfit :arg1-of (s / special-02) :prep-with (c / corset)) :time (b / before :quant (s2 / short)))
(s / say-01 :arg0 (s2 / some) :arg1 (g / go-01 :arg1 (h / hype) :arg4 (f / far :degree (t / too))))
(a / and :op1 (w / watch-01 :arg0 (w2 / world) :arg1 (w3 / world)) :op2 (c / come-01 :arg1 (a2 / and :op1 (p / person :arg0-of (h / have-org-role-91 :arg1 (o / organization :name (n / name :op1 "US" :op2 "Federal" :op3 "Reserve")))) :op2 (p2 / person :arg0-of (h2 / have-org-role-91 :arg1 (o2 / organization) :arg3 (t / thursday))) :op3 (p3 / person :arg0-of (h3 / have-org-role-91 :arg1 (o3 / organization) :arg3 (t2 / thursday))) :op4 (p4 / person :arg0-of (h4 / have-org-role-91 :arg1 (o4 / organization) :arg3 (t3 / thursday))) :op5 (p5 / person :arg0-of (h5 / have-org-role-91 :arg1 (o5 / organization) :arg3 (t4 / thursday)))) :purpose (d / decide-01 :arg0 (w4 / world) :arg1 (d2 / decide-01 :arg0 (w5 / world) :arg1 (m / make-05 :arg0 (o6 / organization) :arg1 (t5 / thing :mod (i / important) :arg1-of (d3 / decide-01 :arg3 (o7 / ordinal-entity :value 1) :time (a3 / after :op1 (n2 / now) :quant (n3 / nearly :op1 (t6 / temporal-quantity :quant (N / N-A) :unit (d4 / decade)))))))))))
(m / multi-sentence :snt1 (a / and :op1 (v / voice :mod (c / cheerful)) :op2 (l / leave-15 :polarity - :arg1 (p / person :arg0-of (w / will-02 :arg1 (b / bring-01 :arg0 (o / organization :name (n / name :op1 "Amnesty" :op2 "International") :arg0-of (w2 / will-02 :arg1 (b2 / bring-01 :arg0 (g / government-organization :arg0-of (g2 / govern-01 :arg1 (c2 / country :name (n2 / name :op1 "N-A")))) :arg1 (i / issue-02 :mod (t / this)) :arg2 (s / spotlight))))))))) :snt2 (p2 / parody :arg0 (w3 / will-02 :arg0 (g3 / government-organization :arg0-of (g4 / govern-01 :arg1 (c3 / country))) :arg1 (b3 / bring-01 :arg0 (g5 / government-organization) :arg1 (i2 / issue-02 :mod (t2 / this)) :arg2 (s2 / spotlight))) :arg2 (s3 / sell-01 :arg0 (g6 / government-organization) :arg1 (w4 / weapon) :arg2 (r / regime :mod (r2 / repressive)) :location (a2 / across :op1 (d / docklands :location (c4 / city :name (n3 / name :op1 "London")))))))
(i / incinerate-01 :arg0 (a / all :arg1-of (i2 / include-91 :arg2 (t / this))) :arg1 (p / pocket :poss (i3 / it)) :manner (c / certain))
(a / and :op1 (c / contain-01 :arg0 (r / reserve :mod (f / federal)) :arg1 (m / mandate :mod (w / world-region :name (n / name :op1 "N-A"))) :mod (s / still)) :op2 (a2 / and :op1 (m2 / mention-01 :polarity - :arg0 (a3 / act-02) :arg1 (s2 / stability :mod (f2 / finance))) :op2 (c2 / change-01 :polarity - :arg0 (a4 / act-02) :arg1 (s3 / stability :mod (f3 / finance)) :time (u / until :op1 (c3 / change-01))) :op3 (b / believe-01 :polarity - :arg0 (i / i) :arg1 (r2 / recommend-01 :arg1 (j / jump :arg0 (t / they) :time (a5 / ahead))))))
(s / say-01 :arg0 (r / r :mod (t / toys)) :arg1 (c / contrast-01 :arg1 (s2 / say-01 :arg0 (r2 / r :mod (t2 / toys)) :arg1 (a / and :op1 (h / hire-01 :polarity - :arg1 (p / person :arg0-of (h2 / have-org-role-91 :arg2 (s3 / staff :mod (c2 / christmas-season)))) :time (y / year :mod (l / last))) :op2 (s4 / say-01 :arg0 (a2 / and :op1 (t3 / toy) :op2 (p2 / product :arg0-of (h3 / have-rel-role-91 :arg1 (b / baby) :arg2 (c3 / child)))) :arg1 (c4 / chance-02 :arg1 (e / employ-01 :arg0 (a3 / and :op1 (p3 / person :arg1-of (e2 / employ-01)) :op2 (p4 / person :arg0-of (w / work-01) :mod (s5 / seasonal))) :arg1 (t4 / temporal-quantity :quant (N / N-A) :unit (h4 / hour)) :purpose (w2 / work-01)))))) :arg2 (s6 / say-01 :arg0 (r3 / r :mod (t5 / toys)) :arg1 (h5 / hire-01 :polarity - :arg1 (p5 / person :arg0-of (h6 / have-org-role-91 :arg2 (s7 / staff :mod (c5 / christmas-season)))) :time (y2 / year :mod (l2 / last))))))
(a / and :op1 (c / certain :polarity - :topic (i / impact-01 :arg1 (e / economy :poss (c2 / country :name (n / name :op1 "US")))) :quant (l / lot)) :op2 (p / possible-01 :polarity - :arg1 (d / data :arg1-of (r / rely-01 :arg1-of (p2 / possible-01)) :arg0-of (d2 / describe-01 :arg1 (d3 / develop-01 :location (c3 / country :name (n2 / name :op1 "China"))) :arg2 (p3 / person :name (n3 / name :op1 "Oliner"))) :mod (a2 / almost))))
(a / and :op1 (a2 / affect-01 :arg0 (t / thing :arg2-of (p / price-01 :arg1 (m / material :mod (r / raw))) :arg1-of (a3 / affect-01 :arg0 (m2 / monetary-quantity :arg2-of (p2 / price-01 :arg1 (m3 / material :mod (r2 / raw)))))) :arg1 (o / organization :name (n / name :op1 "Glencore") :mod (g / giant) :arg1-of (a4 / affect-01 :arg0 (m4 / monetary-quantity :arg2-of (p3 / price-01 :arg1 (m5 / material :mod (r3 / raw))))))) :op2 (c / collect-01 :arg0 (o2 / organization) :arg1 (r4 / rate-entity-91 :arg1 (m6 / monetary-quantity :quant (N / N-A) :unit (d / dollar)) :arg2 (t2 / temporal-quantity :quant (N2 / N-A) :unit (y / year))) :arg3 (s / sell-01 :arg1 (p4 / plan :mod (e / enormous) :poss (h / he)))))
(a / and :op1 (c / confront-01 :arg0 (p / person :name (n / name :op1 "Matt" :op2 "Damon") :mod (a2 / african) :mod (c2 / country :name (n2 / name :op1 "N-A"))) :arg1 (d / discuss-01 :arg0 (p2 / person) :arg1 (d2 / diversity))) :op2 (s / say-01 :arg0 (p3 / person) :arg1 (n3 / need-01 :polarity - :arg0 (p4 / person) :arg1 (b / behind :op1 (s2 / scenes)))))
(s / say-01 :arg1 (p / price-01 :arg1 (a / area-quantity :quant (N / N-A) :unit (y / yuan :mod (s2 / square))) :arg2 (r / rate-entity-91 :arg1 (s3 / space :mod (l / live-01)) :arg2 (r2 / rate-entity-91 :arg1 (s4 / space :quant 160) :arg2 (t / temporal-quantity :quant (N2 / N-A) :unit (y2 / year))) :manner (p2 / plot-01 :polarity -))) :arg2 (p3 / person :name (n / name :op1 "N-A")))
(o / offer-01 :arg0 (w / we) :arg1 (a / and :op1 (e / examination :arg1-of (u / ultrasound :polarity -)) :op2 (t / time :arg1-of (l / long-03))) :arg0-of (c / cause-01 :arg1 (n / need-01 :arg0 (w2 / we) :arg1 (r / room :quant 1 :mod (m / more)))))
(c / contrast-01 :arg1 (s / say-01 :arg1 (c2 / contrast-01 :arg1 (' / '' :arg1 (w / weekly :mod (e / entertainment))) :arg2 (r / remake :polarity -))) :arg2 (s2 / sequel :arg1 (s3 / sequel) :time (a / after :op1 (f / film :ord (o / ordinal-entity :value 1) :prep-with (n / nannies :mod (m / magical))))))
(a / and :op1 (w / want-01 :arg0 (w2 / we) :arg1 (e / establish-01 :arg0 (w3 / we) :arg1 (s / system))) :op2 (d / declare-02 :arg0 (t / trust-01 :arg1 (c / citizen)) :arg1 (p / person :name (n / name :op1 "Cecilia" :op2 "Malmström") :arg0-of (h / have-org-role-91 :arg1 (o / organization) :arg2 (c2 / commissioner :mod (c3 / competent)))) :time (l / launch-01)))
(m / multi-sentence :snt1 (h / hear-01 :arg0 (w / we) :arg1 (a / audience)) :snt2 (c / cause-01 :arg1 (p / possible-01 :arg1 (l / let-down-04 :arg0 (y / you) :arg1 (p2 / plate :mod (' / '')) :mod (b / basic)))))
(s / say-01 :arg1 (h / hope-01 :arg0 (w / we) :arg1 (a / and :op1 (f / focus-01 :arg0 (t / team) :arg2 (c / compete-02) :degree (f2 / full)) :op2 (b / be-located-at-91 :polarity - :arg1 (t2 / team) :arg2 (a2 / around :op1 (c2 / controversy :mod (k / kyrgios) :mod (-2 / -lsb-)))))) :arg2 (p / person :name (n / name :op1 "Healy")) :time (f3 / first))
(a / and :op1 (p / possible-01 :arg1 (c / cope-01 :arg0 (e / economy) :arg1 (r / rate :arg1-of (h / high-02 :degree (m / more))))) :op2 (n / need-01 :arg0 (e2 / economy) :arg1 (a2 / and :op1 (r2 / rate :mod (i / interest :arg1-of (h2 / high-02))) :op2 (t / thing :arg1-of (s / say-01 :arg0 (p2 / person :name (n2 / name :op1 "Ian" :op2 "Shepherdson")))) :arg1-of (c2 / cause-01 :arg0 (t2 / tension :location (m2 / market :mod (l / labour)))))) :op3 (s2 / say-01 :arg0 (p3 / person :arg0-of (h3 / have-org-role-91 :arg1 (c3 / country :name (n3 / name :op1 "N-A")) :arg2 (c4 / chief))) :arg1 (e3 / economists :mod (c5 / chief) :location (p4 / pantheon))))
(c / contrast-01 :arg1 (c2 / cause-01 :arg1 (n / need-01 :arg0 (r / refugee :mod (o / only :polarity -)) :arg1 (w / wohnhraum) :mod (a / also))) :arg2 (n2 / need-01 :arg0 (a2 / and :op1 (p / person :arg0-of (h / have-rel-role-91 :arg2 (m / mother)) :arg1-of (s / single-02)) :op2 (p2 / person :arg0-of (h2 / have-rel-role-91 :arg2 (m2 / mother)) :arg1-of (s2 / single-02)) :mod (a3 / also)) :arg1 (r2 / refugee) :mod (a4 / also)))
(a / arrest-01 :arg1 (p / person :arg0-of (c / cut-01 :arg1 (f / fence))) :ord (o / ordinal-entity :value 1))
(c / contrast-01 :arg2 (s / sceptical :arg1 (c2 / car :poss (c3 / country :name (n / name :op1 "N-A"))) :degree (m / more :degree (m2 / much)) :compared-to (o / or :op1 (c4 / country :name (n2 / name :op1 "N-A")) :op2 (p / person :mod (c5 / country)))))
(s / say-01 :arg0 (p / person :name (n / name :op1 "Tom" :op2 "Davies" :op3 "Amnesty")) :arg1 (d / do-02 :arg0 (p2 / person) :arg1 (j / job :arg1-of (r / reasonable-02)) :manner (h / help-01 :arg0 (p3 / person) :arg1 (r2 / raise-01 :arg0 (w / we) :arg1 (r3 / realize-01 :arg0 (w2 / we) :arg1 (f / fair :topic (s2 / sell-01 :arg1 (d2 / device :mod (t / torture-01) :mod (l / law :polarity -))))) :arg2 (w3 / we)))))
(k / know-01 :arg0 (p / person :name (n / name :op1 "Ed" :op2 "Miliband")) :arg1 (p2 / person :arg0-of (h / have-rel-role-91 :arg1 (h2 / he) :arg2 (e / enemy))) :mod (a / all))
(h / have-03 :arg0 (p / person :name (n / name :op1 "Schmidt")) :arg1 (l / lamb :arg1-of (w / write-01 :arg0 (p2 / person) :arg1-of (w2 / write-01 :arg0 (p3 / person) :arg1-of (c / cause-01 :arg0 (s / share-01 :arg0 (p4 / person) :arg1 (l2 / life :mod (a / academia) :poss (p5 / person)) :arg2 (p6 / person)))))) :medium (b / book :arg1-of (w3 / write-01 :arg0 (h2 / he))))
(a / and :op1 (b / be-located-at-91 :arg1 (a2 / and :op1 (t / they) :op2 (p / person :arg0-of (h / have-rel-role-91 :arg1 (t2 / they) :arg2 (f / friend)))) :arg2 (s / school :arg1-of (h2 / high-02))) :op2 (c / chap :arg1 (p2 / person :arg0-of (t3 / try-01 :arg1 (t4 / teach-01 :arg0 (p3 / person) :arg1 (p4 / play-01 :arg0 (p5 / person) :mod (c2 / career)) :arg2 (p6 / person))) :mod (o / old :degree (m / more)))))
FAILED_TO_PARSE#Two concepts in a row.
(s / say-01 :arg0 (p / person :arg0-of (i / investigate-01)) :arg1 (t / total-01 :arg1 (m / more-than :op1 (m2 / monetary-quantity :quant 100 :unit (d / dollar)) :arg2-of (t2 / total-01)) :arg2 (w / way :mod (t3 / this))) :manner (w2 / way :mod (t4 / this)))
(p / published :arg0 (w / we) :arg1 (n / name :poss (y / you)) :arg1-of (c / cause-01 :arg0 (a / ask-02 :arg0 (y2 / you) :arg1 (d / do-02 :polarity - :arg0 (w2 / we) :arg1 (s / so)) :arg2 (w3 / we))))
(c / contrast-01 :arg1 (u / ultrasound :polarity - :arg1 (w / worm :mod (t / thread)) :mod (u2 / usual)) :arg2 (n / note-01 :arg0 (p / person :name (n2 / name :op1 "Chalasani")) :arg1 (w2 / when :arg0 (l / liquid :prep-with (b / bubbles :mod (a / air) :mod (m / microscopic))) :arg1 (t2 / they))))
(c / cause-01 :arg0 (e / experience-01 :arg0 (l / light :poss (o / organization :name (n / name :op1 "HBO"))) :arg1 (a / and :op1 (s / stress-01 :arg0 (p / person :name (n2 / name :op1 "Brown")) :arg1 (n3 / need-01 :arg0 (p2 / person) :arg1 (p3 / perspective :mod (a2 / alternative)))) :op2 (e2 / elect-01 :arg1 (p4 / person) :arg2 (p5 / protagonists :arg1-of (b / black-04) :location (s2 / script :poss (p6 / project)))))) :time (e3 / experience-01 :arg0 (p7 / person :arg0-of (h / have-org-role-91 :arg1 (o2 / organization) :arg3 (l2 / light))) :arg1 (n4 / need-01 :arg0 (p8 / person) :arg1 (p9 / perspective :mod (a3 / alternative)))))
(c / cause-01 :arg0 (e / eats :arg0 (i / i) :arg1 (f / fruit)) :arg1 (s / support-01 :arg0 (i2 / i) :arg1 (a / and :op1 (t / thing :arg1-of (e2 / envision-01)) :op2 (s2 / system :name (n / name :op1 (i3 / immune))) :op3 (p / process-01 :arg1 (m / metabolic))) :location (b / body)))
(h / have-03 :arg0 (g / guy :mod (o / one) :location (h2 / home :poss (i / i))) :arg1 (i2 / idea :topic (d / door :mod (u / unlock))))
(s / suffer-01 :arg0 (p / person :name (n / name :op1 "Luke" :op2 "Shaw") :mod (c / country :name (n2 / name :op1 "N-A")) :mod (c2 / country) :mod (c3 / country)) :arg1 (i / injure-01 :arg1 (l / leg :part-of (p2 / person)) :mod (s2 / serious)))
(d / designate-01 :arg0 (p / person :name (n / name :op1 "Niersbach")) :arg1 (s / support-01 :arg0 (p2 / person) :arg1 (r / refugee)) :arg2 (e / effort :mod (j / joint :mod (g / great)) :arg1-of (m / mean-01 :arg2 (e2 / effort :mod (j2 / joint :mod (g2 / great))))))
(c / close-01 :arg1 (m / market :mod (s / stock) :mod (g / german)) :time (a / after :op1 (a2 / and :op1 (r / rudderless :arg1 (m2 / market) :degree (l / large)) :op2 (t / trade-01 :arg0 (m3 / market) :arg2 (p / profit-01) :mod (o / of-course)))))
(f / fall-01 :arg1 (s / share) :arg2 (a / about :op1 (p / percentage-entity :value (N / N-A))) :time (b / before :op1 (o / open-01 :arg1 (t / trade-01 :arg1 (t2 / trade-01)))))
(l / lie-08 :arg0 (h / he) :arg1 (b / be-located-at-91 :arg1 (h2 / he) :arg2 (l2 / location :arg2-of (c / criminal-03))) :prep-in (c2 / case :arg2-of (c3 / criminal-03)))
(l / look-01 :mode (i / imperative) :arg0 (y / you) :arg1 (d / dignity :mod (h / human) :poss (m / man :arg1-of (i2 / injure-01))))
(a / and :op1 (m / manage-02 :arg0 (h / he) :arg1 (a2 / away :quant 300 :arg1-of (s / straight-04))) :op2 (l / look-01 :polarity - :arg0 (h2 / he) :direction (b / back)))
(s / say-01 :arg0 (p / police) :arg1 (p2 / phoned :arg0 (l / lamb) :arg1 (p3 / person :arg0-of (h / have-rel-role-91 :arg1 (l2 / lamb) :arg2 (r / relative))) :time (t / time :mod (c / certain)) :purpose (s2 / say-01 :arg0 (p4 / police) :arg1 (g / go-02 :polarity - :arg0 (p5 / person) :arg4 (j / jail)))))
(f / fashionable :arg1 (s / step :ord (o / ordinal-entity :value 1) :part-of (d / door)))
(m / multi-sentence :snt1 (l / like-02 :mode (i / interrogative) :arg0 (p / person :name (n / name :op1 "Otmar" :op2 "Alt")) :arg1 (l2 / let-01 :arg0 (p2 / person) :arg1 (a / affect-01 :arg0 (i2 / it) :arg1 (p3 / person :arg0-of (v / view-01))))) :snt2 (f / fall-01 :mode (i3 / interrogative) :arg1 (p4 / picture :arg1-of (m2 / mean-01 :arg2 (a2 / and :op1 (l3 / leave-11 :arg0 (p5 / picture)) :op2 (f2 / feel-01 :arg0 (p6 / picture)))))) :snt3 (l4 / look-02 :arg0 (p7 / picture) :arg1 (o / opposite :arg1 (p8 / picture))))
(p / possible-01 :arg1 (p2 / provide-01 :arg0 (i / individual) :arg1 (a / accommodation :mod (u / uncomplicated))) :medium (p3 / platform))
(s / see-01 :arg0 (y / you) :arg1 (c / cause-01 :arg0 (a / amr-unknown) :arg1 (d / discuss-01 :polarity - :arg1 (p / program :mod (t / this)) :frequency (o / often) :arg1-of (c2 / cause-01 :arg0 (a2 / and :op1 (o2 / original) :op2 (s2 / striking :polarity - :mod (p2 / particular)))))))
(f / fill-01 :arg1 (i / improve-01 :arg1 (m / market :mod (l / labor))) :arg2 (y / year :mod (t / this)) :concession (u / utilize-01 :arg1 (c / create-01 :arg1 (c2 / create-01 :arg1 (m2 / market :mod (l2 / labor))))))
(o / occupy-01 :arg0 (o2 / organization :name (n / name :op1 "Kingfisher")) :arg1 (t / team :consist-of (w / woman) :arg2-of (i / include-01 :arg1 (a / and :op1 (m / manage-01 :arg1 (t2 / team)) :op2 (m2 / manage-01 :arg1 (t3 / team)))) :mod (e / exact)) :mod (a2 / almost) :domain (o3 / organization) :mod (a3 / almost))
(s / show-01 :arg0 (p / poll-01 :arg0 (o / organization :name (n / name :op1 "ABC" :op2 "News")) :time (r / recent :degree (m / most))) :arg1 (p2 / person :name (n2 / name :op1 "Trump")) :arg2 (p3 / person :name (n3 / name :op1 "Trump")) :time (b / before :op1 (p4 / person :name (n4 / name :op1 "Carson"))))
(p / point-out-02 :arg0 (p2 / person :arg0-of (h / have-org-role-91 :arg2 (m / minister))) :arg1 (s / seals :polarity - :arg0 (c / country :name (n / name :op1 "Slovenia")) :arg1 (b / border-01 :arg1 (c2 / country) :arg2 (r / refugee))) :prep-as (p3 / person :arg0-of (h2 / have-org-role-91 :arg2 (m2 / minister))))
(c / cause-01 :arg1 (w / warn-01 :arg0 (g / government-organization :arg0-of (g2 / govern-01 :arg1 (f / federal))) :arg1 (p / possible-01 :arg1 (c2 / cause-01 :arg0 (s / skulls :arg1 (s2 / system :name (n / name :op1 (n2 / nervous)))) :arg1 (q / quantity :mod (s3 / small)) :time (a / already)))))
(c / cause-01 :arg0 (p / possible-01 :polarity - :arg1 (r / recite-01 :arg0 (p2 / person :arg0-of (h / have-org-role-91 :arg2 (p3 / personnel :mod (s / security)))) :arg1 (s2 / situation))) :arg1 (c2 / call-02 :arg0 (p4 / police) :arg1 (p5 / person)))
(c / contrast-01 :arg2 (w / want-01 :arg0 (h / he) :arg1 (w2 / write-01 :arg0 (h2 / he) :location (h3 / here))))
(n / need-01 :polarity - :arg0 (y / you) :arg1 (o / out :arg0 (y2 / you) :location (u / university) :prep-with (r / relation-03 :arg0 (y3 / you) :arg2 (u2 / university))))
(a / and :op1 (m / meadow :domain (p / person :arg0-of (p2 / play-01 :mod (s / soccer))) :location (a2 / and :op1 (c / country :name (n / name :op1 "Germany")) :op2 (c2 / country :name (n2 / name :op1 "Germany")))) :op2 (h / hope-01 :arg0 (p3 / person) :arg1 (a3 / and :op1 (g / goalkeeper :arg1 (p4 / person)) :op2 (h2 / hope-01 :arg0 (p5 / person) :arg1 (h3 / home :poss (p6 / person))))) :time (m2 / meanwhile))
(a / arrive-01 :arg1 (i / it) :arg4 (s / stadium) :time (b / before :op1 (a2 / arrive-01 :arg1 (g / game))))
(t / target-01 :arg0 (p / person :name (n / name :op1 "Michu") :arg1-of (t2 / target-01)) :arg1 (n2 / notice-03 :arg1 (w / withdraw-01)))
(o / opportunity :mod (g / good :degree (m / most)) :location (h / half :ord (o2 / ordinal-entity :value 1)))
(p / possible-01 :arg1 (d / decide-01 :arg0 (p2 / person :quant 29)))
(a / and :op1 (d / drive-01 :arg0 (p / person :arg0-of (d2 / drive-01 :arg1 (t / truck)) :mod (o / old) :mod (o2 / old) :arg1-of (d3 / drive-01 :location (a2 / area :mod (i / industry :mod (i2 / industry)))))) :op2 (n / notice-01 :arg0 (p2 / person) :arg1 (s / stop-01 :arg1 (d4 / drive-01 :arg0 (p3 / person :quant 2 :arg0-of (d5 / drive-01 :arg1 (v / vehicle :location (a3 / ahead))))) :time (l / late :degree (t2 / too)))))
(a / add-01 :arg0 (p / person :arg0-of (h / have-rel-role-91 :arg1 (s / she) :arg2 (h2 / husband))) :arg1 (h3 / have-03 :arg0 (w / we) :arg1 (p2 / plot-01 :mod (6 / 6000-square-foot))))
(c / contrast-01 :arg1 (d / describe-01 :arg0 (p / person :name (n / name :op1 "Matthias" :op2 "Machnig") :arg0-of (h / have-org-role-91 :arg1 (e / economy :poss (c2 / country :name (n2 / name :op1 "N-A"))) :arg2 (s / secretary :mod (s2 / state)))) :arg1 (p2 / plan) :arg2 (t / thing :arg1-of (p3 / plan-01))) :arg2 (p4 / progress-01 :arg1-of (m / major-02)))
(r / report-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (o / organization :name (n / name :op1 "CBS")) :arg2 (c / correspondent :mod (n2 / news)))) :arg1 (u / use-01 :arg1 (p2 / passenger :mod (p3 / prison) :mod (e / even)) :arg2 (r2 / race) :purpose (p4 / provide-01 :arg0 (p5 / passenger) :arg1 (f / fence :location (b / between :op1 (c2 / country :name (n3 / name :op1 "Hungary")) :op2 (c3 / country :name (n4 / name :op1 "Serbia")))))))
(m / multi-sentence :snt1 (p / prohibit-01 :polarity - :arg0 (o / or :op1 (p2 / person :arg0-of (h / have-org-role-91 :arg2 (g / governor :mod (v / vice)))) :op2 (p3 / person :arg0-of (h2 / have-org-role-91 :arg2 (i / indulgent)))) :arg1 (s / study-01 :arg0 (p4 / person :name (n / name :op1 "Frank" :op2 "Henkel") :arg0-of (h3 / have-org-role-91 :arg1 (o2 / organization :name (n2 / name :op1 "CDU")) :arg2 (s2 / senator :mod (i2 / interior)))) :mod (o3 / only))) :snt2 (c / contrast-01 :arg1 (h4 / have-03 :arg0 (p5 / person :arg0-of (h5 / have-org-role-91 :arg2 (s3 / senator :mod (i3 / interior)))) :arg1 (s4 / stand-11 :arg0 (p6 / person)) :time (s5 / so-far)) :arg2 (a / abandon-01 :arg0 (p7 / person) :arg1 (s6 / stand-11 :arg0 (p8 / person)) :time (n3 / now))))
(s / say-01 :arg0 (i / information :arg1-of (w / write-01 :arg0 (a / and :op1 (p / person :arg0-of (h / have-org-role-91 :arg1 (m / ministry :mod (f / federal) :part-of (o / organization :name (n / name :op1 "Bundestag"))) :arg2 (e / emissions))) :op2 (p2 / person :name (n2 / name :op1 "Anna" :op2 "Lena" :op3 "Baerbock") :arg0-of (h2 / have-org-role-91 :arg1 (o2 / organization) :arg3 (i2 / information))) :op3 (p3 / person :arg0-of (h3 / have-org-role-91 :arg1 (o3 / organization) :arg3 (i3 / information))) :op4 (p4 / person :arg0-of (h4 / have-org-role-91 :arg1 (o4 / organization) :arg3 (i4 / information))) :op5 (p5 / person :arg0-of (h5 / have-org-role-91 :arg1 (o5 / organization) :arg3 (i5 / information)))) :arg0-of (h6 / have-org-role-91 :arg1 (o6 / organization) :arg3 (w2 / write-01)))) :arg1 (a2 / amount :quant (m2 / more-than :op1 6) :arg1-of (a3 / amount-01 :arg2 (t / temporal-quantity :quant (N / N-A) :unit (y / year))) :location (c / country :name (n3 / name :op1 "Germany"))))
(a / and :op1 (s / shop :mod (p / person :arg0-of (s2 / specialize-01) :arg1-of (p2 / private-03))) :op2 (t / trade-01 :mod (w / wholesale) :mod (a2 / also)))
(m / multi-sentence :snt1 (e / explain-01 :arg0 (o / organization :name (n / name :op1 "Federal" :op2 "Ministry" :op3 "of" :op4 "the" :op5 "Environment")) :arg1 (h / homepage :poss (o2 / organization) :topic (v / value :mod (m2 / maximum) :arg1-of (v2 / valid-02)))) :snt2 (e2 / expect-01 :polarity - :arg1 (t / thing :arg1-of (e3 / expect-01))))
(r / reduce-01 :arg0 (o / organization :name (n / name :op1 "Hewlett-Packard")) :arg1 (j / job) :arg3 (u / up-to :op1 30.000))
(c / cut-02 :arg0 (o / organization :name (n / name :op1 "Hewlett-Packard")) :arg1 (j / job :quant 30,000 :mod (f / further)))
(c / contrast-01 :arg2 (s / shoot-02 :arg1 (p / person :name (n / name :op1 "Carson")) :arg2 (p2 / percentage-entity :value (N / N-A)) :time (p3 / period :mod (s2 / same))))
(c / contrast-01 :arg1 (r / refugee :mod (o / only :polarity -)) :arg2 (o2 / or :op1 (p / person :arg0-of (h / have-rel-role-91 :arg2 (m / mother)) :arg1-of (s / single-02)) :op2 (p2 / person :arg0-of (h2 / have-rel-role-91 :arg2 (m2 / mother)) :arg1-of (l / low-04)) :mod (a / also)))
(i / infer-01 :arg1 (a / act-02 :arg0 (p / public) :mod (t / this)))
(c / complete-01 :arg1 (o / overhaul :arg1-of (m / major-02) :poss (l / line :name (n / name :op1 (' / '') :op2 (y / yard) :op3 (y2 / yard)) :mod (n2 / new) :mod ('2 / '') :location (l2 / location :name (n3 / name :op1 "Linz")))) :manner (o2 / official))
(c / complex :domain (o / organization :consist-of (p / person :quant 120 :arg1-of (s / strong-02))) :time (s2 / so-far))
(p / person :quant 3 :domain (a / area :mod (s / station :mod (g / gas))) :manner (l / likewise))
(s / say-01 :arg0 (t / thing :arg1-of (v / view-01)) :arg1 (s2 / safe-01 :arg1 (c / country :name (n / name :op1 "Serbia")) :manner (s3 / safe-01 :arg1 (c2 / country))))
(m / multi-sentence :snt1 (s / say-01 :arg0 (p / person :name (n / name :op1 "Luke" :op2 "Johnson") :arg0-of (h / have-org-role-91 :arg1 (c / channel) :arg2 (c2 / chairman) :time (f / former)) :arg0-of (h2 / have-org-role-91 :arg1 (c3 / channel) :arg2 (c4 / chairman) :time (f2 / former)) :arg0-of (h3 / have-org-role-91 :arg1 (c5 / channel) :arg2 (c6 / chairman) :time (f3 / former)) :arg0-of (h4 / have-org-role-91 :arg1 (c7 / channel) :arg2 (c8 / chairman) :time (f4 / former)) :arg0-of (h5 / have-org-role-91 :arg1 (c9 / channel) :arg2 (c10 / chairman) :time (f5 / former)) :arg0-of (h6 / have-org-role-91 :arg1 (c11 / channel) :arg2 (c12 / chairman) :time (f6 / former)) :arg0-of (h7 / have-org-role-91 :arg1 (c13 / channel) :arg2 (c14 / chairman) :time (f7 / former)) :arg0-of (h8 / have-org-role-91 :arg1 (c15 / channel) :arg2 (c16 / chairman) :time (f8 / former)) :arg0-of (h9 / have-org-role-91 :arg1 (c17 / channel) :arg2 (c18 / chairman) :time (f9 / former)) :arg0-of (h10 / have-org-role-91 :arg1 (o / organization) :arg2 (c19 / chairman) :time (f10 / former)) :arg0-of (h11 / have-org-role-91 :arg1 (o2 / organization) :arg2 (c20 / chairman) :time (f11 / former)) :arg0-of (h12 / have-org-role-91 :arg1 (o3 / organization) :arg2 (c21 / chairman) :time (f12 / former)))) :snt1 (s2 / say-01 :arg0 (p2 / person :arg0-of (h13 / have-org-role-91 :arg1 (c22 / channel) :arg2 (c23 / chairman) :time (f13 / former)) :arg0-of (h14 / have-org-role-91 :arg1 (c24 / channel) :arg2 (c25 / chairman) :time (f14 / former)))))
(s / suffice-01 :polarity - :arg0 (s2 / supply-01 :arg1 (a / and :op1 (l / language :mod (g / general-02)) :op2 (l2 / language :mod (v / vocational)))) :arg1 (f / far :degree (s3 / so)) :time (s4 / so-far))
(p / possible-01 :arg1 (t / topped :arg1 (p2 / project) :mod (e / even)) :time (n / now))
(h / have-concession-91 :arg2 (i / insist-01 :arg0 (p / person :name (n / name :op1 "Viktor" :op2 "Orban") :arg0-of (h2 / have-org-role-91 :arg2 (m / minister :mod (p2 / prime)))) :arg1 (a / and :op1 (b / be-located-at-91 :arg1 (r / refugee :arg1-of (a2 / arrive-01 :arg3 (l / life :mod (g / good :degree (m2 / more)))) :arg0-of (s / search-01 :arg1 (l2 / life :mod (g2 / good :degree (m3 / more))))) :arg2 (r2 / refugee :polarity - :arg0-of (r3 / require-01 :arg1 (p3 / protect-01)) :arg0-of (s2 / stand-01 :arg1 (r4 / refugee) :arg2 (s3 / state :mod (o / other) :arg0-of (h3 / have-org-role-91 :arg1 (o2 / organization :name (n2 / name :op1 "European" :op2 "Union")) :arg2 (m4 / member))) :arg1-of (s4 / strong-02) :arg1-of (s5 / strong-02)))))))
(s / say-01)
(f / form-01 :arg1 (g / gun :mod (w / water)) :location (b / behind :op1 (l / line :mod (p / police))))
(r / recommend-01 :arg1 (e / expensive :polarity - :domain (o / organization :name (n / name :op1 "Astra")) :degree (m / more :degree (m2 / much)) :prep-for (t / this)) :purpose (s / sell-01 :arg1 (m3 / model :mod (v / volume)) :mod (w / well)))
(o / open-up-03 :arg1 (a / area :mod (o2 / other)) :arg2 (i / invest-01 :arg1-of (p / private-03)) :arg1-of (c / cause-01 :arg0 (b / bid-03 :arg1 (o3 / open-01 :arg1 (s / sector :mod (s2 / state-controlled))))))
(c / cause-01 :arg0 (l / lack-01 :arg0 (t / this) :arg1 (p / plan :mod (c2 / construct-01) :mod (e / even))))
(e / exist-01 :arg1 (m / media :mod (s / social)) :time (a / ahead :op1 (c / comment-01 :arg0 (p / person :name (n / name :op1 "Damon")))) :time (a2 / after :op1 (d / discuss-01)))
(h / highlight-01 :arg1 (f / feature :arg0-of (l / look-02 :arg1 (f2 / frighteningly :arg1 (h2 / human)))))
(b / be-located-at-91 :arg1 (r / refugee) :arg2 (l / location :name (n / name :op1 "Wiesbaden")))
(m / multi-sentence :snt1 (r / receive-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (o / organization :name (n / name :op1 "Olympiakos")) :arg3 (a / assist-01 :arg0 (p2 / person) :arg1 (p3 / person :name (n2 / name :op1 "Roberto") :arg0-of (h2 / have-org-role-91 :arg1 (o2 / organization) :arg3 (a2 / assist-01 :arg0 (p4 / person) :arg1 (o3 / organization))))))) :arg1 (p5 / person :quant 28 :arg0-of (h3 / have-org-role-91 :arg1 (o4 / organization) :arg3 (a3 / assist-01 :arg0 (p6 / person) :arg1 (o5 / organization) :mod (l / league))))) :snt2 (h4 / hit-01 :arg0 (h5 / hit-01 :arg0 (a4 / and :op1 (p7 / person :arg0-of (h6 / have-org-role-91 :arg1 (o6 / organization) :arg3 (a5 / assist-01 :arg0 (p8 / person) :arg1 (o7 / organization)))) :op2 (p9 / person :arg0-of (h7 / have-org-role-91 :arg1 (o8 / organization) :arg3 (a6 / assist-01 :arg0 (p10 / person) :arg1 (o9 / organization) :mod (l2 / league)))))) :arg1 (t / think-01 :arg0 (p11 / person) :arg1 (t2 / think-01 :arg0 (p12 / person) :arg1 (t3 / think-01 :arg0 (p13 / person) :arg1 (t4 / think-01 :arg0 (p14 / person) :arg1 (t5 / think-01 :arg0 (p15 / person) :arg1 (t6 / think-01 :arg0 (p16 / person) :arg1 (t7 / think-01 :arg0 (p17 / person) :arg1 (t8 / think-01 :arg0 (p18 / person) :arg1 (t9 / think-01 :arg0 (p19 / person) :arg1 (t10 / think-01 :arg0 (p20 / person) :arg1 (t11 / think-01 :arg0 (p21 / person) :arg1 (t12 / think-01 :arg0 (p22 / person) :arg1 (t13 / think-01 :arg0 (p23 / person) :arg1 (t14 / think-01 :arg0 (p24 / person) :arg1 (t15 / think-01 :arg0 (p25 / person) :arg1 (t16 / think-01 :arg0 (p26 / person) :arg1 (t17 / think-01 :arg0 (p27 / person) :arg1 (t18 / think-01 :arg0 (p28 / person) :arg1 (t19 / think-01 :arg0 (p29 / person) :arg1 (t20 / think-01 :arg0 (p30 / person) :arg1 (t21 / think-01 :arg0 (p31 / person) :arg1 (t22 / think-01 :arg0 (p32 / person) :arg1 (t23 / think-01 :arg0 (p33 / person) :arg1 (t24 / think-01 :arg0 (p34 / person) :arg1 (t25 / think-01 :arg0 (p35 / person) :arg1 (t26 / think-01 :arg0 (p36 / person) :arg1 (t27 / think-01 :arg0 (p37 / person) :arg1 (t28 / think-01 :arg0 (p38 / person) :arg1 (t29 / think-01 :arg0 (p39 / person) :arg1 (t30 / think-01 :arg0 (p40 / person) :arg1 (t31 / think-01 :arg0 (p41 / person) :arg1 (t32 / think-01 :arg0 (p42 / person) :arg1 (t33 / think-01 :arg0 (p43 / person) :arg1 (t34 / think-01 :arg0 (p44 / person) :arg1 (t35 / think-01 :arg0 (p45 / person) :arg1 (t36 / think-01 :arg0 (p46 / person) :arg1 (t37 / think-01 :arg0 (p47 / person) :arg1 (t38 / think-01 :arg0 (p48 / person) :arg1 (t39 / think-01 :arg0 (p49 / person) :arg1 (t40 / think-01 :arg0 (p50 / person) :arg1 (t41 / think-01 :arg0 (p51 / person) :arg1 (t42 / think-01 :arg0 (p52 / person) :arg1 (t43 / think-01 :arg0 (p53 / person) :arg1 (t44 / think-01 :arg0 (p54 / person) :arg1 (t45 / think-01 :arg0 (p55 / person) :arg1 (t46 / think-01 :arg0 (p56 / person) :arg1 (t47 / think-01 :arg0 (p57 / person) :arg1 (t48 / think-01 :arg0 (p58 / person) :arg1 (t49 / think-01 :arg0 (p59 / person) :arg1 (t50 / think-01 :arg0 (p60 / person) :arg1 (t51 / think-01 :arg0 (w / world) :arg1 (t52 / think-01 :arg0 (w2 / world) :arg1 (t53 / think-01 :arg0 (w3 / world) :arg1 (t54 / think-01 :arg0 (w4 / world)))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(c / contrast-01)
(i / interpreted :arg0 (t / texts :arg1-of (s / select-01 :arg0 (p / person :name (n / name :op1 "Otmar" :op2 "Alt")))) :arg1 (t2 / texts :mod (b / bible)) :arg2 (c / context :time (c2 / current)))
(a / and :op1 (o / obligate-01 :arg2 (a2 / agree-01 :arg0 (p / person :arg0-of (r / represent-01 :arg1 (r2 / religious-group :name (n / name :op1 "Islam")))) :arg1 (c / contact-01 :arg1-of (c2 / clear-06)))) :op2 (p2 / prepare-02 :arg1 (p3 / person) :arg2 (c3 / cooperate-01 :arg0 (p4 / person) :arg1 (g / government-organization :arg0-of (g2 / govern-01) :location (a3 / area :quant (m / many))))) :op3 (g3 / give-01 :arg0 (p5 / person) :arg1 (c4 / control-01 :arg1 (p6 / person) :quant (s / some)) :arg2 (p7 / person)))
(p / postpone-01 :arg1 (p2 / process-02 :time (c / current)))
(s / say-01 :arg0 (p / person :arg0-of (a / analyze-01)) :arg1 (t / thing :arg1-of (e / expect-01 :arg0 (o / organization :name (n / name :op1 "FactSet") :quant 10.84))))
(h / have-03 :arg0 (y / you) :arg1 (l / letter :mod (g / golden)))
(c / celebrates :arg0 (p / person :name (n / name :op1 "Angel" :op2 "Di" :op3 "Maria")) :arg1 (a / and :op1 (p2 / person :name (n2 / name :op1 "Blaise" :op2 "Matuidi")) :op2 (p3 / person :name (n3 / name :op1 "Edinson" :op2 "Cavani"))) :time (a2 / after :op1 (m / match-03 :arg0 (p4 / person) :arg1 (c2 / country))))
(a / and :op1 (t / tweeted :arg0 (p / person :name (n / name :op1 "Magnussen")) :arg1 (p2 / photo)) :op2 (e / explain-01 :arg0 (p3 / person) :arg1 (s / suffer-01 :arg0 (p4 / person) :arg1 (i / injure-01) :time (t2 / throw-01 :arg1 (p5 / person) :arg2 (b / bike)))))
(s / say-01 :arg1 (s2 / scary-03 :arg0 (i / it) :degree (v / very)) :arg2 (s3 / say-01 :arg0 (i2 / i) :arg1 (s4 / scary-03 :arg0 (p / person :arg0-of (h / have-rel-role-91 :arg1 (p2 / person :name (n / name :op1 "Scott" :op2 "Ortoria" :op3 "Nhaijahs")) :arg2 (m / mother))) :arg2 (p3 / publication :name (n2 / name :op1 "CNN")))))
(a / and :op1 (a2 / allergic :arg1 (p / person :arg0-of (t / teach-01)) :degree (h / high)) :op2 (b / ban-01 :arg0 (p2 / person) :arg1 (p3 / person) :arg2 (s / space :poss (p4 / person))) :degree (h2 / high))
(a / and :op1 (c / cheap-02 :arg1 (p / product)) :op2 (s / sell-01 :arg1 (p2 / product) :arg2 (q / quantity :mod (l / large))))
(a / and :op2 (r / redirected :arg1 (b / bus :source (l / location :name (n / name :op1 "Presevo"))) :arg2 (a2 / and :op1 (d / direction :poss (c / country :name (n2 / name :op1 "Croatia"))) :op2 (r2 / report-01 :arg1 (a3 / and :op1 (c2 / croatian) :op2 (m / media :mod (s / serbian))) :location (d2 / direction :poss (c3 / country))))))
(a / and :op1 (b / be-located-at-91 :arg1 (p / program :topic (s / support-01)) :arg2 (p2 / program :name (n / name :op1 (k / kfw)) :mod (b2 / bank :mod (s2 / state))) :location (c / city)) :op2 (g / good :domain (p3 / program) :time (a2 / already)))
(a / and :op1 (c / close-01 :arg0 (o / organization :name (n / name :op1 "Kingfisher")) :arg1 (s / store :quant 60)) :op2 (a2 / and :op1 (s2 / store :quant 60) :op2 (s3 / store :name (n2 / name :op1 (q / q)))) :time (t / time :arg1-of (s4 / same-01)))
(s / say-01 :arg0 (p / police))
(m / mix-01 :arg0 (p / person :mod (y / young)) :arg1 (a / alcohol) :arg2 (c / contain-01 :arg0 (a2 / alcohol) :arg1 (d / disinfection :arg1 (w / water :mod (m2 / mouth)))) :arg1-of (a3 / allege-01) :purpose (g / get-01 :arg0 (a4 / alcohol) :arg1 (h / härteres :arg1-of (d2 / drink-01))))
(o / over :domain (c / crisis))
(b / benefit-01 :arg0 (d / dollar :arg1-of (r / rise-01)) :arg1 (o / outside :op1 (p / person :arg0-of (c / consume-01 :arg1 (g / game :mod (s / stock)) :arg1-of (p2 / pure-02)))) :mod (a / also))
(b / base-02 :arg1 (t / trend :mod (h / history)) :arg2 (h2 / here) :arg1-of (c / cause-01 :arg0 (p / possible-01 :arg1 (r / react-01 :arg0 (s / sector :mod (s2 / some) :part-of (e / economy))))))
(m / multi-sentence :snt2 (w / write-01 :arg0 (p / person :arg0-of (r / research-01))) :snt2 (w2 / write-01 :arg0 (p2 / person :arg0-of (r2 / research-01))))
(e / establish-01 :arg1 (w / welfare :arg1-of (o / organize-01 :arg0 (p / person :mod (r / religious-group :name (n / name :op1 "N-A")))) :arg0-of (w2 / worry-01 :arg1 (n2 / newcomers) :manner (p2 / professionally))) :mod (a / also))
(a / and :op1 (b / be-located-at-91 :arg1 (s / shop :location (i / in-front-of :op1 (s2 / shop)) :location (i2 / in-front-of :op1 (s3 / shop))) :arg2 (s4 / shop :mod (o / other)) :location (i3 / in-front-of :op1 (s5 / shop)) :location (i4 / in-front-of :op1 (s6 / shop)) :location (i5 / in-front-of :op1 (s7 / shop))) :op2 (i6 / include-91 :arg1 (a2 / and :op1 (b2 / bag) :op2 (b3 / bag) :op3 (s8 / suitcases) :op4 (s9 / shoe) :op5 (g / garments)) :arg2 (m / monetary-quantity :quant 75 :unit (e / euro))))
(c / contrast-01 :arg1 (o / obligate-01 :arg2 (a / agree-01 :arg0 (g / government-organization :name (n / name :op1 "Parliament")) :arg1 (u / use-01 :arg0 (m / military) :arg1 (m2 / military) :arg1-of (e / expect-01 :duration (w / week :mod (n2 / next)))) :mod (s / still))) :arg2 (t / tell-01 :arg0 (p / person :arg0-of (r / report-01)) :arg1 (a2 / and :op1 (s2 / soldier :arg1-of (a3 / arm-01)) :op2 (d / dog)) :arg2 (a4 / and :op1 (v / vehicle) :op2 (d2 / dog)) :time (a5 / already) :arg1-of (s3 / see-01 :duration (t2 / temporal-quantity :quant (N / N-A) :unit (d3 / day)))))
(c / contrast-01 :arg1 (c2 / clear-06 :polarity - :arg1 (g / go-02 :arg0 (l / lamb) :arg4 (h / house :mod (t / this))) :time (i / immediate)) :arg2 (s / say-01 :arg0 (p / person :name (n / name :op1 "Johnson")) :arg1 (b / believe-01 :arg0 (p2 / person) :arg1 (k / know-02 :arg0 (p3 / person) :arg1 (p4 / person :arg0-of (l2 / live-01 :location (t2 / there)))))))
(i / increase-01 :arg1 (p / potential :arg1-of (c / call-01 :arg2 (l / location :name (n / name :op1 "Stilepochen") :time (p2 / past))) :arg2-of (a / appeal-01 :arg1 (l2 / location :name (n2 / name :op1 "Stilepochen") :time (p3 / past))) :arg1-of (c2 / call-01 :manner (s / so))) :mod (a2 / after-all))
(s / say-01 :arg0 (i / i) :arg2 (p / person :name (n / name :op1 "von" :op2 "Güterzug")))
(h / have-condition-91 :arg2 (a / anything))
(r / report-01 :arg0 (i / image :mod (' / '')) :time (f / first))
(c / contrast-01 :arg2 (w / warn-01 :arg0 (h / he) :arg1 (e / enough :polarity - :domain (s / stop-03 :arg1 (h2 / he) :arg2 (a / appear-01 :arg1 (h3 / he))))))
(m / multi-sentence :snt1 (g / game :mod (g2 / good) :domain (g3 / game :mod (o / organization :name (n / name :op1 "Broncos")))) :snt2 (c / contrast-01 :arg1 (s / see-01 :polarity - :arg0 (i / i) :arg1 (i2 / it) :time (y / yet)) :arg2 (t / thing :arg2-of (r / result-01) :li 12)))
(c / contrast-01 :arg1 (w / work-01 :arg0 (h / he) :arg2 (a / architect :mod (f / freelance))) :arg2 (w2 / work-01 :arg0 (h2 / he) :arg3 (a2 / and :op1 (p / person :arg0-of (t / teach-01)) :op2 (p2 / person :arg0-of (w3 / write-01)) :op3 (p3 / person :arg0-of (w4 / write-01))) :mod (a3 / also)) :li 1952)
(p / put-01 :arg0 (n / nobody) :arg1 (i / it) :arg2 (w / window) :time (w2 / want-01 :arg0 (n2 / nobody) :arg1 (s / see-01 :arg0 (n3 / nobody) :time (e / ever))))
(s / say-01 :arg0 (p / person :name (n / name :op1 "MR" :op2 "Corbyns")) :arg1 (a / attend-02 :polarity - :arg0 (p2 / person) :arg1 (p3 / park :name (n2 / name :op1 "N-A") :mod (n3 / nation))))
(s / say-01 :arg0 (p / person :name (n / name :op1 "Véronique" :op2 "Laury") :arg0-of (h / have-org-role-91 :arg1 (o / organization :name (n2 / name :op1 "Kingfisher")) :arg2 (e / executive :mod (n3 / new) :mod (n4 / new))) :arg0-of (h2 / have-org-role-91 :arg1 (o2 / organization :name (n5 / name :op1 "Kingfisher")) :arg2 (e2 / executive :mod (n6 / new)))) :arg1 (o3 / obsolete :domain (i / increase-01 :arg1 (n7 / number :quant-of (c / craftsmen :mod (s2 / skilled)) :source (w / world-region :name (n8 / name :op1 "Eastern" :op2 "Europe"))) :mod (l / large)) :time (n9 / now)))
(p / propose-01 :arg0 (o / organization :name (n / name :op1 "EU" :op2 "Commission")) :arg1 (r / reform-01 :arg0 (o2 / organization) :arg1 (s / system :name (n2 / name :op1 (t / thestudentroom)) :time (c / current)) :mod (c2 / comprehensive :degree (m / more))) :purpose (d / defuse-01 :arg0 (o3 / organization) :arg1 (d2 / dispute-01 :arg1-of (p2 / plan-01 :arg1-of (p3 / possible-01 :polarity -)))))
(a / and :op1 (g / grow-01 :arg1 (g2 / group :mod (p / printers)) :location (l / location :name (n / name :op1 "Palo" :op2 "Alto"))) :op2 (d / dividing :arg1 (a2 / and :op1 (c / computer) :op2 (b / business :mod (p2 / printer))) :time (c2 / current) :time (y / year :mod (t / this)) :arg1-of (c3 / cause-01 :arg0 (p3 / promise-01 :arg1 (a3 / area :mod (n2 / new) :arg0-of (p4 / promise-01)) :arg2 (a4 / area :mod (n3 / new) :location-of (a5 / and :op1 (s / server :mod (c4 / computer)) :op2 (s2 / storage :mod (d2 / data))) :beneficiary (c5 / company) :mod (a6 / as-well))))))
(t / take-01 :arg1 (t2 / temporal-quantity :quant (N / N-A) :unit (m / month)))
(c / cause-01 :arg0 (c2 / charge-05 :arg1 (f / fish :mod (p / peaceful) :example (c3 / carp)) :arg2 (l / low-04 :degree (s / so)) :arg1-of (c4 / cause-01 :arg0 (a / and :op1 (c5 / charge-05 :arg1 (f2 / fish) :arg2 (l2 / level :arg1-of (p2 / plan-01)) :time (a2 / already)) :op2 (c6 / charge-05 :arg1 (f3 / fish) :arg2 (l3 / level :arg1-of (p3 / plan-01)) :time (a3 / already))))))
(m / multi-sentence :snt1 (c / contrast-01 :arg1 (a / ask-02 :arg0 (h / he) :arg1 (a2 / association :mod (r / rate-entity-91 :arg1 (m2 / monetary-quantity :quant 1000 :unit (e / euro)) :arg2 (t / temporal-quantity :quant (N / N-A) :unit (m3 / month))))) :arg2 (h2 / high-02 :arg1 (c2 / cost-01 :arg1-of (a3 / actual-02)))) :snt2 (a4 / add-01 :arg0 (h3 / he)))
(c / contrast-01 :arg2 (c2 / consistent-01 :arg1 (p / person :arg0-of (s / support-01 :arg1 (p2 / person :name (n / name :op1 "Clinton")))) :degree (m / more) :compared-to (c3 / candidate :mod (o / other) :prep-in (e / elect-01))))
(t / thing :arg1-of (s / state-01 :arg0 (t2 / thing :arg1-of (s2 / state-01 :arg0 (t3 / thing :arg1-of (s3 / state-01 :arg0 (t4 / thing :arg1-of (s4 / state-01 :arg0 (d / descendant))) :frequency (s5 / sometimes)))))) :mod (t5 / this))
(o / opine-01 :arg0 (p / public) :arg1 (t / this) :time (a / after :op1 (c / come-01 :arg1 (p2 / problem) :arg4 (l / light)) :quant (s / short)))
(d / do-02 :arg0 (p / person) :arg1 (e / errands :arg0 (p2 / person)) :frequency (s / sometimes) :manner (f / fast :degree (m / more) :frequency (s2 / sometimes)))
(i / imported :arg1 (b / black-friday-phenomenon :arg1-of (i2 / import-01 :arg2 (c / country :name (n / name :op1 "America")))) :arg2 (r / reason :arg0-of (c2 / cause-01 :arg1 (s / sell-01 :arg1 (s2 / sell-01 :mod (d / declining))))))
(m / multi-sentence :snt1 (p / possible-01 :arg1 (c / compute :arg0 (t / they) :arg1 (b / bmi :poss (y / you)) :location (h / here))) :snt2 (1 / 1d0zqdv :quant 1 :mod (u / usa.gov)))
(a / and :op1 (a2 / attack-01 :arg0 (p / person :name (n / name :op1 "Damien" :op2 "Collins")) :arg1 (o / organization :name (n2 / name :op1 "Voice"))) :op2 (s / say-01 :arg0 (p2 / person) :arg1 (a3 / and :op1 (a4 / attack-01 :arg0 (p3 / person) :arg1 (o2 / organization)) :op2 (s2 / say-01 :arg0 (p4 / person) :arg1 (o3 / original :polarity - :domain (t / this) :mod (o4 / original))))))
(f / find-01 :arg0 (d / dropshipper) :arg1 (t / thing :arg1-of (n / need-01 :arg0 (d2 / dropshipper))) :prep-in (p / phase :ord (o / ordinal-entity :value 3) :part-of (b / boulevards :mod (r / rhine))))
(s / stand-01 :arg1 (p / point :mod (t / this)) :arg2 (p2 / part :part-of (a / agenda) :arg1-of (p3 / public-02)) :mod (o / original))
(r / refuse-01 :arg0 (p / person :name (n / name :op1 "Douglass") :arg0-of (h / have-org-role-91 :arg2 (m / metcash))) :arg1 (r2 / respond-01 :arg0 (p2 / person) :arg1 (c / comment-01 :arg0 (p3 / person)) :arg1-of (p4 / public-02)))
(h / have-03 :arg0 (u / unit :arg0-of (h2 / house-01) :mod (e / each)) :arg1 (a / and :op1 (s / song :quant 2) :op2 (s2 / scrap-01 :arg1 (u2 / unit)) :op3 (l / lounge :arg0 (u3 / unit))))
(n / need-01 :arg0 (w / we) :arg1 (s / support-01 :arg0 (w2 / we) :arg1 (c / celtic) :mod (r / really)) :arg1-of (c2 / cause-01 :arg0 (m / make-02 :arg0 (t / this) :arg1 (p / person :arg0-of (p2 / play-01)))) :mod (r2 / really))
(s / stuck :arg1 (t / thousands :arg1 (r / refugee :mod (d / desperate))) :time (m / meantime) :location (r2 / route :location (w / world-region :name (n / name :op1 "N-A"))))
(a / and :op1 (s / strike :arg0 (a2 / and :op1 (s2 / strike-01 :mod (c / city)) :op2 (s3 / strike-01 :arg2 (t / temporal-quantity :quant (N / N-A) :unit (m / month)))) :arg1 (t2 / temporal-quantity :quant (N2 / N-A) :unit (m2 / month))) :op2 (s4 / stipulate-01 :arg0 (a3 / and) :arg1 (d / debate-01 :arg1 (t3 / thing :manner-of (p / possible-01 :arg1 (s5 / safe-01 :arg1 (p2 / person :arg0-of (h / have-rel-role-91 :arg2 (p3 / patient)))))) :mod (f / formal))))
(c / contrast-01 :arg1 (c2 / clear-06 :polarity - :arg1 (r / reach-02 :arg1 (c3 / cat :name (n / name :op1 (r2 / rubber)) :arg1-of (k / kill-01 :arg1-of (p / possible-01 :polarity -)))) :time (i / immediate)) :arg2 (s / seem-01 :arg1 (c4 / cause-01 :arg1 (d / die-01 :quant (m / many :degree (s2 / so))))))
(a / amr-unknown :topic (a2 / and :op1 (s / school) :op2 (n / nurseries)))
(b / beat-03 :arg0 (i / i) :arg1 (t / they) :arg2 (a / away :arg1-of (s / straight-04)))
(s / say-01 :arg0 (c / company) :arg1 (e / expect-01 :arg0 (c2 / company) :arg1 (i / increase-01 :arg1 (p / profit-01 :arg0-of (o / operate-01) :arg1-of (i2 / increase-01 :arg2 (y / year :mod (p2 / previous))))) :arg1-of (c3 / cause-01 :arg0 (a / and :op1 (c4 / cut-02 :arg1 (t / turnover)) :op2 (r / rise-01 :arg1 (t2 / turnover))))))
FAILED_TO_PARSE#Number of opening and closing brackets doesn't match.
(e / estimate-01 :arg0 (w / we) :arg1 (c / contrary-01 :arg1 (i / it) :arg2 (a / and :op1 (v / value :mod (d / democracy :mod (p / parliament))) :op2 (p2 / principle :mod (d2 / dialogue-01 :arg1-of (o / open-04))))))
(b / become-01 :arg1 (m / mouth :part-of (s / slash :op1 (m2 / mouth :part-of (y / you)) :op2 (m3 / mouth :part-of (y2 / you)))) :arg2 (v / voice :poss (y3 / you)) :arg3 (m4 / mouth :part-of (y4 / you)))
(p / possible-01 :arg1 (s / send-01 :arg0 (y / you) :arg1 (t / they) :arg2 (n / number :mod (i / international)) :time (d / date-entity :year 1980 :month 1 :day (N / N-A))) :location (o / outside :op1 (c / country :name (n2 / name :op1 "Britain") :mod (g / great))))
(m / multi-sentence :snt1 (t / tell-01 :arg0 (p / person :name (n / name :op1 "Sipilä") :arg0-of (h / have-org-role-91 :arg2 (m2 / minister :mod (p2 / prime)))) :arg1 (c / cause-01 :arg0 (a / amr-unknown) :arg1 (s / sit-01 :arg1 (g / government-organization :arg0-of (g2 / govern-01 :arg1 (c2 / country :name (n2 / name :op1 "N-A")))) :arg2 (h2 / heritage :mod (t2 / tax-01))) :arg0-of (c3 / cause-01 :arg1 (a2 / and :op1 (s2 / sit-01 :arg1 (g3 / government-organization :arg0-of (g4 / govern-01 :arg1 (c4 / country))) :arg2 (h3 / heritage :mod (t3 / tax))) :op2 (h4 / hiding :arg0 (g5 / government-organization) :arg1 (p3 / person :mod (c5 / country) :arg0-of (h5 / have-rel-role-91 :arg1 (g6 / government-organization) :arg2 (f / friend)))))))) :snt2 (a3 / and :op1 (a4 / ask-01 :arg0 (p4 / person) :arg1 (t4 / touch-01 :arg0 (p5 / person) :arg1 (p6 / person)))))
(m / multi-sentence :snt1 (c / cause-01 :arg0 (d / do-02 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (s / speak-01 :arg0 (p2 / person)) :arg2 (m2 / minister :mod (p3 / prime)))) :arg1 (a / and :op1 (s2 / sit-01 :arg1 (g / government-organization :arg0-of (g2 / govern-01 :arg1 (c2 / country :name (n / name :op1 "N-A")))) :arg2 (c3 / capital :poss (g3 / government-organization))) :op2 (h2 / hiding :arg0 (g4 / government-organization) :arg1 (l / law :arg0-of (p4 / prepare-01 :arg1 (l2 / law :arg1-of (f / force-01 :arg2 (c4 / cut-off-04 :arg0 (p5 / person) :arg1 (m3 / money :arg1-of (f2 / force-01 :arg2 (c5 / cut-off-04 :arg1 (m4 / money) :arg2 (s3 / state)))))))))) :time (t / time :arg1-of (s4 / same-01))))) :snt2 (a2 / ask-01 :arg0 (p6 / person :arg0-of (a3 / ask-01)) :arg1 (p7 / person :name (n2 / name :op1 "Pia" :op2 "Lohikoski"))))
(p / produce-01 :arg0 (o / one :arg1-of (i / include-91 :arg2 (o2 / organization :name (n / name :op1 "Special" :op2 "Patrol" :op3 "Group") :mod (c / collective)))) :arg1 (a / advertisement :mod (p2 / parody)))
(s / say-01 :arg0 (t / thing :arg1-of (s2 / state-01)) :arg1 (c / create-01 :arg0 (a / and :op1 (s3 / sector) :op2 (c2 / company)) :arg1 (l / list :mod (n / negative) :arg2-of (n2 / name-01 :arg1 (a2 / and :op1 (s4 / sector) :op2 (c3 / company)) :arg1-of (a3 / allow-01 :polarity -)))))
(s / say-01 :arg0 (p / person :name (n / name :op1 "Posen")) :arg1 (c / come-04 :polarity - :arg1 (t / turmoil :time (l / late :degree (m / most))) :arg2 (l2 / level :poss (t2 / turmoil))))
(s / say-01 :arg0 (p / person :name (n / name :op1 "Berner")) :arg1 (h / have-org-role-91 :arg0 (s2 / she) :arg1 (r / resign-01) :arg2 (m / member) :time (y / year :mod (t / this))))
(s / say-01 :arg0 (p / person :name (n / name :op1 "Berner")) :arg1 (r / resign-01 :arg0 (p2 / person) :arg1 (r2 / resign-01 :arg0 (p3 / person)) :time (y / year :mod (t / this))))
(a / appeal-02 :arg0 (p / person :mod (c / country :name (n / name :op1 "N-A"))) :arg2 (a2 / appeal-01 :arg0 (p2 / person)))
(m / multi-sentence :snt1 (d / describe-01 :arg0 (p / person :arg0-of (h / have-03 :polarity - :arg1 (p2 / person :mod (y / young)))) :arg1 (p3 / person :mod (y2 / young) :arg1-of (t / train-01 :arg2 (p4 / photographer)))) :snt2 (d2 / describe-01 :arg0 (p5 / person :arg0-of (h2 / have-03)) :arg1 (p6 / person :mod (y3 / young))))
(s / soon :time (a / after :op1 (e / elect-01) :duration (t / temporal-quantity :quant (N / N-A) :unit (m / month))))
(m / make-01 :arg1 (r / rate-entity-91 :arg1 (m2 / more-than :op1 (1 / 1/2)) :arg2 (t / temporal-quantity :quant (N / N-A) :unit (y / year))) :arg3 (t2 / temporal-quantity :quant (N2 / N-A) :unit (y2 / year)) :time (b / be-located-at-91 :arg1 (m3 / ministry :topic (b2 / buy-01 :arg1 (t3 / traffic)) :arg2-of (t4 / total-01)) :arg2 (a / around :op1 (n / nine))))
(a / annually :quant 6.5 :domain (s / start-01 :arg0 (o / organization :name (n / name :op1 "University" :op2 "of" :op3 "savings")) :arg1 (u / up :arg0 (o2 / organization) :arg1 (s2 / staff :mod (e / entire) :arg2-of (s3 / staff-01 :arg1 (t / talk-01))))))
(e / entitled :arg0 (a / article :arg1-of (o / originate-01 :arg2 (n / name :op1 (d / dear) :op2 (d2 / dear) :op3 (d3 / dear) :op4 (d4 / dear)))))
(s / say-01 :arg1 (a / and :op1 (r / reduce-01 :polarity - :arg0 (c / control-01 :arg1 (g / glycemic) :mod (g2 / good :degree (m / more)) :mod (t / this)) :arg1 (r2 / rate-entity-91 :arg1 (r3 / rate :mod (m2 / mortality)) :arg2 (t2 / temporal-quantity :quant (N / N-A) :unit (y / year)))) :op2 (r4 / reduce-01 :polarity - :arg0 (' / '') :arg1 (r5 / rate :mod (m3 / mortality)) :time (a2 / after :op1 (n / now) :quant (t3 / temporal-quantity :quant (N2 / N-A) :unit (y2 / year))))) :arg2 (s2 / say-01 :arg0 (a3 / and :op1 (p / person :name (n2 / name :op1 "Chih" :op2 "Cheng" :op3 "Hsu")) :op2 (p2 / person :arg0-of (h / have-org-role-91 :arg2 (i / investigator))) :op3 (p3 / person :arg0-of (h2 / have-org-role-91 :arg2 (i2 / investigator)))) :arg1 (a4 / and :op1 (r6 / reduce-01 :arg0 (p4 / person) :arg1 (r7 / rate :mod (m4 / mortality))) :op2 (r8 / reduce-01 :arg0 (p5 / person) :arg1 (r9 / rate :mod (m5 / mortality))))))
(f / find-02 :arg0 (s / study :mod (s2 / swedish)) :arg1 (h / have-03 :arg0 (s3 / study :arg1-of (u / use-01 :arg2 (s4 / surgery-01))) :arg1 (p / period :quant (p2 / percentage-entity :value (N / N-A)) :arg1-of (i / include-91 :arg2 (p3 / period :mod (1 / 15-year) :mod (d / die-01)))) :time (c / compare-01 :arg1 (g / group :arg0-of (t / try-01 :arg1 (m / medicine :mod (t2 / traditional :degree (m2 / more))))) :arg2 (g2 / group))))
(f / find-02 :arg1 (g / go-01 :arg1 (s / surgery-01 :arg1 (s2 / surgery-01 :arg2 (g2 / go-01 :arg1 (s3 / surgery-01)))) :arg2 (r / rate-entity-91 :arg1 (u / under :op1 (m / monetary-quantity :quant (N / N-A) :unit (p / pound))) :arg2 (t / temporal-quantity :quant (N2 / N-A) :unit (y / year))) :arg1-of (c / compare-01 :arg2 (g3 / group :arg0-of (t2 / try-01 :arg1 (m2 / method :mod (t3 / traditional) :instrument-of (t4 / treat-03)))))) :medium (s4 / study-01 :mod (s5 / swedish)))
(c / contrast-01 :arg1 (g / go-02 :polarity - :arg0 (y / you) :arg4 (p / place :mod (e / every))) :arg2 (l / like-02 :arg0 (i / i) :arg1 (m / move-01 :arg0 (i2 / i) :direction (f / forward))))
(p / participate-01 :mode (i / interrogative) :arg0 (c / complain-01 :arg1-of (i2 / identify-01 :arg0 (r / reference-04 :arg1 (h / home :mod (t / this))))) :arg1 (c2 / compete-01))
(p / possible-01 :arg1 (r / reveal-01 :arg0 (a / and :op1 (p2 / person :name (n / name :op1 "Lana" :op2 "Jeavons" :op3 "Fellows")) :op2 (p3 / person :name (n2 / name :op1 "Sarah" :op2 "Mackay"))) :arg1 (p4 / person :arg0-of (w / win-01 :arg1 (s / series :mod (b / bachelor)))) :arg2 (p5 / person :name (n3 / name :op1 "Snezana" :op2 "Markoski"))))
(s / say-01 :arg0 (c / complain-01 :location (r / region)) :arg1 (a / and :op1 (r2 / remain-01 :arg1 (i / infrastructure :arg1-of (r3 / remain-01 :arg3 (i2 / infrastructure :arg1-of (c2 / critical-02)))) :arg4 (i3 / infrastructure :arg1-of (c3 / critical-02))) :op2 (a2 / and :op1 (f / force :arg1-of (a3 / arm-01)) :op2 (p / person :arg0-of (h / have-rel-role-91 :arg1 (c4 / country) :arg2 (p2 / partner))) :op3 (d / disposal :mod (o / oy) :poss (c5 / country :name (n / name :op1 "Finland"))))))
(s / show-01 :arg0 (p / person :name (n / name :op1 "Tory" :op2 "Burch")) :arg1 (m / model) :time (y / yesterday))
(d / design-01 :arg1 (p / person :name (n / name :op1 "Tory" :op2 "Burch")) :arg4 (s / screening) :time (y / yesterday))
(p / point-out-02 :arg0 (p2 / person :name (n / name :op1 "Wood")) :arg1 (d / decline-02 :arg0 (p3 / person :name (n2 / name :op1 "Sipilä") :arg0-of (h / have-org-role-91 :arg2 (m / minister :mod (p4 / prime)))) :arg1 (p5 / propose-01 :arg0 (g / government-organization :arg0-of (g2 / govern-01)) :arg1 (c / contract-02 :arg0 (g3 / government-organization) :arg1 (s / society)))))
(r / recalls :arg0 (p / person :name (n / name :op1 "Lyly")) :arg1 (p2 / propose-01 :arg0 (g / government-organization :arg0-of (g2 / govern-01 :arg1 (g3 / government-organization :arg0-of (g4 / govern-01 :arg1 (g5 / government-organization :arg0-of (g6 / govern-01))))) :arg0-of (h / have-org-role-91 :arg2 (m / minister :mod (p3 / prime)))) :arg1 (g7 / good :polarity - :domain (p4 / person :name (n2 / name :op1 "Sak")) :mod (e / enough))))
(w / wonder-02 :polarity - :arg1 (p / protest-01 :arg0 (u / union :mod (t / trade-01))) :mod (s / such))
(w / waiter :arg1 (p / person :arg0-of (h / have-rel-role-91 :arg1 (p2 / person) :arg2 (w2 / wife))) :arg2 (c / client))
(s / seem-01 :arg1 (r / raise-01 :arg0 (b / bank :mod (c / central)) :arg1 (r2 / rate :mod (i / interest)) :arg2 (p / percentage-entity :value (N / N-A)) :time (b2 / before :op1 (n / now) :quant (t / temporal-quantity :quant (N2 / N-A) :unit (m / month)) :mod (o / only))) :arg0-of (c2 / cause-01 :arg1 (v / verify-01 :arg0 (b3 / bank) :arg1 (s2 / step :ord (o2 / ordinal-entity :value 1) :mod (s3 / small)) :purpose (t2 / tighten-01 :arg1 (c3 / condition :mod (m2 / money))) :arg0-of (v2 / verify-01 :arg1 (s4 / stability :poss (r3 / recover-01 :arg1 (c4 / country :name (n2 / name :op1 "US"))))))))
(h / high-02 :arg1 (u / unit :mod (e / express-income)) :arg1-of (c / cause-01 :arg0 (f / fee :mod (b / basic) :arg1-of (h2 / high-02 :degree (m / more)))) :concession (l / lower-05 :arg0 (m2 / monetary-quantity :arg2-of (c2 / cost-01 :arg1 (l2 / labor)) :arg1-of (h3 / high-02 :degree (m3 / more))) :arg1 (u2 / unit)))
(p / possible-01 :arg1 (s / summed :arg0 (t / thing :arg1-of (l / learn-01) :mod (b / big)) :arg1 (r / rule :quant 8 :arg1-of (s2 / simple-02))))
(p / possible-01 :arg1 (s / say-01 :arg0 (i / i) :arg1 (i2 / innocent-01 :arg1 (p2 / person :name (n / name :op1 "Richard" :op2 "Gloss")))))
(d / die-01 :arg1 (p / person :quant 4 :arg1-of (i / include-91 :arg2 (p2 / person :quant 4)) :arg0-of (h / have-org-role-91 :arg1 (p3 / police) :arg3 (l / lead-02 :arg0 (p4 / person) :arg1 (p5 / police)))) :arg3 (d2 / die-01 :arg1 (p6 / person)))
(p / person :quant 36 :arg2-of (d / delegate-01) :source (p2 / person :quant 43 :arg2-of (d2 / delegate-01)) :time (p3 / present))
(m / multi-sentence :snt1 (c / contrast-01 :arg1 (t / try-01 :arg0 (p / person :arg0-of (r / republican) :quant (s / some)) :arg1 (h / hilata :arg0 (p2 / person) :arg1 (p3 / person :name (n / name :op1 "Donald" :op2 "Trumpia")) :direction (a / away))) :arg2 (t2 / try-01 :arg0 (p4 / person) :arg1 (h2 / hilata :arg0 (p5 / person) :arg1 (k / kannatuskyselyjen :poss (p6 / person)) :direction (a2 / away)))) :snt2 (s2 / succeeded :polarity - :time (y / yet)))
(o / opine-01 :arg0 (i / i) :arg1 (o2 / option :domain (o3 / organization :name (n / name :op1 "Trump")) :mod (r / real)) :time (t / think-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg3 (j / judge-01)))))
(o / opine-01 :arg0 (i / i) :arg1 (a / alternative :mod (g / genuine) :domain (p / person :name (n / name :op1 "Trump"))) :time (t / think-01 :arg0 (p2 / person :arg0-of (v / vote-01 :arg1 (r / republican))) :arg1 (a2 / alternative :mod (g2 / genuine) :domain (p3 / person))))
(i / interest-01 :arg1 (l / location :name (n / name :op1 "Suomalaisittain")) :arg2 (m / monetary-quantity :quant 52 :unit (e / euro) :arg1-of (r / report-01)) :mod (a / also))
(t / tell-01 :arg1 (l / lose-02 :arg0 (c / country) :arg1 (h / hundreds :mod (u / underage)) :arg2 (t2 / temporal-quantity :quant (N / N-A) :unit (y / year) :mod (e / each))) :arg2 (a / and :op1 (t3 / thing :mod (o / other)) :op2 (t4 / thing :arg1-of (s / say-01 :arg0 (o2 / organization :name (n / name :op1 "Dagens" :op2 "Nyheter"))))))
(c / create-01 :arg0 (p / person :name (n / name :op1 "Gregory" :op2 "Guillaume") :arg1-of (c2 / create-01 :time (a / age-01 :arg1 (p2 / person) :arg2 (t / temporal-quantity :quant (N / N-A) :unit (y / year))))) :arg1 (r / rounder :degree (m / more)))
(m / more-than :op1 (t / temporal-quantity :quant (N / N-A) :unit (y / year)) :time (a / after :op1 (p / pay-01 :arg0 (c / company) :arg3 (l / loan-01))))
(m / multi-sentence :snt1 (r / recommend-01 :arg1 (f / force-01 :arg1 (p / person :name (n / name :op1 "David" :op2 "Cameron") :arg0-of (h / have-org-role-91 :arg1 (o / organization :name (n2 / name :op1 "EU")) :arg2 (u / uudelleenneuvottelustrategiat))) :arg2 (d / day :prep-to (p2 / problem :mod (l / large :degree (m2 / more :mod (s / still))))) :time (d2 / day :prep-to (p3 / problem :mod (l2 / large :degree (m3 / more) :concession (e / even-if :op1 (t / take-01 :polarity - :arg1 (a / account) :arg3 (a2 / account) :concession (e2 / even-if :op1 (t2 / take-01 :polarity - :arg1 (a3 / account) :arg3 (a4 / account) :mod (e3 / even) :concession (e4 / even-if :op1 (t3 / take-01 :polarity - :arg1 (a5 / account) :arg3 (a6 / account)))))))))))) :snt2 (a7 / anger-01 :arg0 (o2 / or :op1 (s2 / selection :poss (p4 / political-party :name (n3 / name :op1 "Labour" :op2 "Party"))) :op2 (l3 / lead-02 :arg0 (p5 / person :arg0-of (l4 / lead-02 :arg1 (o3 / organization :mod (c / central)))))) :arg1 (p6 / person :arg0-of (l5 / lead-02 :arg1 (p7 / political-party :name (n4 / name :op1 "Labour" :op2 "Party"))))))
(m / multi-sentence :snt1 (g / grow-01 :arg1 (s / strategy :mod (r / renegotiation) :poss (p / person :name (n / name :op1 "David" :op2 "Cameron"))) :arg2 (k / keep-04 :arg0 (s2 / strategy) :arg1 (c / country :name (n2 / name :op1 "Britain")) :arg2 (o / organization :name (n3 / name :op1 "EU")))) :snt2 (g2 / grow-01 :arg1 (a / and :op1 (p2 / person :arg0-of (l / lead-02 :arg1 (i / island :name (n4 / name :op1 "N-A")))) :op2 (p3 / person :arg0-of (l2 / lead-02 :arg1 (i2 / island :name (n5 / name :op1 "N-A")))) :op3 (p4 / person :arg0-of (l3 / lead-02 :arg1 (p5 / person :arg0-of (l4 / lead-02 :arg1 (i3 / island :name (n6 / name :op1 "N-A")))))) :op4 (p6 / person :arg0-of (l5 / lead-02 :arg1 (p7 / person :arg0-of (l6 / lead-02 :arg1 (i4 / island :name (n7 / name :op1 "N-A")))))) :op5 (p8 / person :arg0-of (l7 / lead-02 :arg1 (p9 / person :arg0-of (l8 / lead-02 :arg1 (i5 / island :name (n8 / name :op1 "N-A"))))))) :arg2 (p10 / person :arg0-of (l9 / lead-02 :arg1 (i6 / island :name (n9 / name :op1 "N-A"))))))
(m / multi-sentence :snt1 (g / got :arg0 (d / delegation :mod (c / country :name (n / name :op1 "Mongolia"))) :arg1 (o / off :arg1-of (w / write-01 :arg0 (d2 / delegation)))) :snt2 (c2 / cause-01 :arg1 (a / and :op1 (g2 / go-back-19 :arg1 (p / person :name (n2 / name :op1 "Naryshkin")) :arg2 (t / taunting :arg0 (p2 / person))) :op2 (e / excellent-02 :arg1 (p3 / person) :arg1-of (e2 / excellent-02)))))
(a / accuse-01 :arg0 (r / report :arg1-of (a2 / accuse-01 :arg0 (f / force :arg1-of (a3 / arm-01)) :arg2 (f2 / force :arg1-of (a4 / arm-01)))) :arg1 (a5 / and :op1 (t / torture-01) :op2 (v / violence :mod (a6 / abductions)) :op3 (v2 / violence :mod (c / cluster))) :arg2 (m / man :arg1-of (l / likely-01 :degree (l2 / less) :compared-to (w / woman))))
(k / know-01 :polarity - :arg1 (p / possible-01 :mode (i / interrogative) :arg1 (b / be-02 :arg1 (t / truck :poss (h / he)) :beneficiary (c / country :name (n / name :op1 "Finland")))))
(c / cause-01 :arg0 (f / force-01 :arg1 (p / person :name (n / name :op1 "Clover" :op2 "Thunderball")) :arg2 (e / exercise :arg1-of (l / light-06))) :arg1 (s / say-01 :arg0 (o / organization :name (n2 / name :op1 "Pohjola")) :arg1 (s2 / surprise-01 :arg1 (h / he) :arg2 (s3 / surprise-01) :time (l2 / last :op1 (r / race)))))
(p / publish-01 :arg0 (p2 / person :name (n / name :op1 "Scrooge")) :arg1 (i / image :mod (n2 / new)) :time (y / yesterday) :arg1-of (c / cause-01 :arg0 (o / obligate-01 :arg1 (p3 / person) :arg2 (t / take-01 :arg0 (p4 / person) :arg1 (f / film)))))
(a / and :op1 (c / close-10 :arg1 (t / trade-01 :location (i / inside :op1 (c2 / court :mod (f / food)))) :arg2 (g / good)) :op2 (c3 / close-13 :arg1 (- / -rrb- :arg1-of (c4 / cheap-02)) :arg2 (u / union)) :op3 (o / option :quant (l / lot) :mod (t2 / takeout)))
(a / and :op1 (c / close-10 :arg1 (t / thing :arg1-of (f / find-01 :arg1-of (p / possible-01 :polarity -))) :arg2 (u / union)) :op2 (c2 / close-13 :arg1 (-2 / -rrb- :arg1-of (c3 / cheap-02)) :arg2 (u2 / union)) :op3 (o / option :mod (f2 / food :mod (n / nouto) :quant (s / several))))
(i / include-91 :arg1 (s / strike-01 :quant 1 :arg1-of (i2 / include-91 :arg2 (l / longest :quant (12 / 1990s)))) :arg2 (s2 / strike-01 :arg2 (l2 / longest :quant (13 / 1990s))) :condition (s3 / strike-01 :polarity - :arg0 (c / country :name (n / name :op1 "N-A")) :arg1 (c2 / country :name (n2 / name :op1 "N-A")) :mod (l3 / longest)))
(a / and :op1 (h / high-02 :arg1 (r / rate :mod (i / interest :mod (s / short-term))) :mod (s2 / still) :mod (s3 / still)) :op2 (r2 / rise-01 :arg1 (m / margin :mod (c / credit))) :op3 (r3 / rise-01 :arg1 (m2 / margin :mod (c2 / credit))) :time (t / tighten-01 :arg0 (b / bank :mod (c3 / central)) :arg1 (g / guideline :poss (b2 / bank))))
(p / prepare-02 :arg1 (o / organization :name (n / name :op1 "Hewlett-Packard")) :arg2 (a / and :op1 (c / cut-02 :arg0 (o2 / organization) :arg1 (j / job :quant 25,000) :arg3 (j2 / job :quant 30,000 :poss (o3 / organization))) :op2 (c2 / cut-02 :arg0 (o4 / organization) :arg1 (e / effort :purpose (c3 / cut-02 :arg1 (b / business))))))
(a / and :op1 (s / support-01 :arg1 (e / ensure-01 :arg1 (d / downloaded :domain (t / telephone)))) :op2 (s2 / stop-01 :polarity - :arg1 (n / nail) :time (m / middle)))
(i / injure-01 :arg1 (p / person :name (n / name :op1 "Aguero") :arg1-of (i2 / injure-01)) :time (u / until :op1 (b / before :op1 (n2 / now) :duration (t / temporal-quantity :quant (N / N-A) :unit (m / minute)))))
(f / fear-01 :mode (i / interrogative) :arg0 (i2 / i))
(f / fear-01 :arg0 (a / amr-unknown) :arg1 (a2 / amr-unknown))
(c / close-01 :arg1 (r / road :mod (r2 / rail) :arg0-of (l / lead-03 :arg2 (s / square))) :arg4 (r3 / rate-entity-91 :arg1 (v / vehicle :quant (a / around :op1 9.30)) :arg2 (t / temporal-quantity :quant (N / N-A) :unit (y / year))) :arg4 (p / period :quant 14))
(l / lead-03 :arg0 (r / railroads) :arg2 (c / close-01 :arg1 (r2 / road) :arg3 (r3 / rate-entity-91 :arg1 (v / vehicle :mod (y / yuhua) :quant (a / about :op1 9.30-14)) :arg2 (p / period))))
(i / increase-01 :arg1 (l / lead-03 :arg0 (t / they) :arg2 (p / point :quant 5) :location (o / organization :name (n / name :op1 "Celtic"))))
(a / and :op1 (k / keep-01 :arg0 (h / he) :arg1 (c / connect-01 :arg1 (h2 / he) :arg2 (g / government-organization :arg0-of (g2 / govern-01)))) :op2 (c2 / create-01 :arg0 (h3 / he) :arg1 (p / propose-01 :arg0 (p2 / person :name (n / name :op1 "Juha" :op2 "Sipilän") :arg0-of (h4 / have-org-role-91 :arg2 (m / minister :mod (p3 / prime)))) :arg1 (p4 / productive-03 :arg0 (p5 / person :arg0-of (h5 / have-org-role-91 :arg2 (m2 / minister :mod (p6 / prime)))) :arg3 (p7 / percentage-entity :value 5)))))
(c / choose-01 :arg1 (p / person :name (n / name :op1 "Biden") :arg0-of (n2 / nominate-01 :arg1 (p2 / political-party))) :degree (m / most) :time (a / ask-01 :arg0 (p3 / person) :arg1 (c2 / choose-01 :arg0 (p4 / person) :arg1 (c3 / choose-01 :arg0 (p5 / person) :ord (o / ordinal-entity :value 2)))))
(b / believe-01 :arg0 (p / person :name (n / name :op1 "Siuntiolainen" :op2 "Bengtström")) :arg1 (o / operate-01 :arg1 (o2 / operation :poss (s / state))))
(a / and :op1 (k / keep-01 :arg0 (h / he) :arg1 (e / enthusiasm :poss (h2 / he)) :manner (c / check-01 :arg0 (h3 / he) :arg1 (s / spy-01))) :op2 (w / want-01 :polarity - :arg0 (h4 / he) :arg1 (e2 / envy :arg1 (h5 / he))) :op3 (e3 / envy :arg1 (i / it)) :op4 (' / '' :arg0 (h6 / he) :arg1 (t / that)) :op5 ('2 / '' :arg0 (h7 / he) :arg1 (t2 / that)))
(a / and :op1 (b / be-located-at-91 :arg1 (t / they) :arg2 (c / custody :mod (p / police)) :time (n / now)) :op2 (a2 / accuse-01 :arg1 (t2 / they) :arg2 (l / law :arg1-of (d / define-01 :arg1-of (d2 / define-01)) :mod (n2 / new))))
(a / and :op1 (c / capture-01 :arg0 (p / police) :arg1 (f / fence :arg1-of (c2 / capture-01 :arg0 (p2 / police) :time (n / now)))) :op2 (a2 / accuse-01 :arg0 (p3 / police) :arg1 (t / they) :arg2 (o / offend-03 :arg0 (p4 / police) :arg1 (l / law :mod (n2 / new)))))
(w / write-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg2 (p2 / person :arg1-of (e / expert-01)))) :arg1 (j / join-01 :arg0 (a / and :op1 (p3 / person :arg0-of (h2 / have-org-role-91 :arg2 (p4 / person :arg1-of (e2 / expert-01)))) :op2 (p5 / person :arg0-of (h3 / have-org-role-91 :arg2 (p6 / person :arg1-of (e3 / expert-01))))) :arg1 (p7 / person :name (n / name :op1 "Lancey")) :arg1-of (c / cause-01 :arg0 (t / thing :arg0-of (e4 / evidence-01 :arg1 (u / use-01 :arg1 (c2 / cigarette :mod (e5 / electronic)) :arg2 (c3 / cigarette :mod (e6 / electronic))))))))
(w / write-01 :arg0 (p / person :arg0-of (w2 / work-01 :arg2 (u / url-entity :value (- / -lrb-))) :mod (c / country :name (n / name :op1 "N-A"))) :arg1 (s / share-01 :arg0 (p2 / person :arg0-of (h / have-org-role-91 :arg2 (p3 / person :arg1-of (e / expert-01)))) :arg1 (l / location :name (n2 / name :op1 "Public" :op2 "Health" :op3 "England") :name (n3 / name :op1 (l2 / lancet) :op2 (p4 / phe) :op3 (p5 / phe) :op4 (p6 / phe) :op5 (p7 / phe) :op6 (p8 / phe) :op7 (p9 / phe)) :arg1-of (u2 / use-01 :arg0 (t / thing :arg0-of (e2 / evidence-01 :arg1 (r / report-01 :arg0 (t2 / tobacco :mod (e3 / electric)))))))))
(a / applaud-01 :arg0 (o / organization :name (n / name :op1 "SPRS")) :arg1 (w / way :manner-of (t / try-01 :arg0 (o2 / organization) :arg1 (g / get-04 :arg0 (o3 / organization) :arg1 (u / understand-01 :arg0 (w2 / woman) :arg1 (i / importance :mod (g2 / good)) :time (l / lactation :arg0 (p / picture :arg0-of (p2 / publish-01) :consist-of (p3 / person :arg0-of (h / have-rel-role-91 :arg2 (d / dd1)))) :arg1-of (p4 / painted :arg2 (f / food :mod (d2 / depictions) :mod (d3 / depictions)))))))) :manner (s / shock-01))
(f / favor-01 :arg1 (p / person :name (n / name :op1 "Hamilton")) :time (a / age-01 :arg1 (p2 / person) :arg2 (t / temporal-quantity :quant (N / N-A) :unit (y / year))) :time (t2 / take-04 :arg0 (p3 / person :arg0-of (h / have-rel-role-91 :arg1 (h2 / he) :arg2 (m / mother))) :arg1 (p4 / prostitution :location (p5 / peninsula :name (n2 / name :op1 "N-A")))))
(c / cause-01 :arg0 (a / act-02 :manner (o / organisations)) :arg1 (s / sense-02 :polarity - :arg1 (s2 / stop-01 :arg1 (p / protest-01) :manner (s3 / somehow))))
(s / sign-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (c / country :name (n / name :op1 "N-A")) :arg3 (s2 / study-01))) :arg1 (a / and :op1 (p2 / person :quant 168 :mod (c2 / country :name (n2 / name :op1 "N-A")) :arg0-of (s3 / study-01)) :op2 (p3 / person :quant 124 :mod (c3 / country) :arg0-of (h2 / have-org-role-91 :arg1 (c4 / country) :arg3 (s4 / study-01))) :op3 (p4 / person :quant 124 :arg0-of (h3 / have-org-role-91 :arg1 (c5 / country) :arg3 (s5 / study-01))) :op4 (p5 / person :quant 124 :arg0-of (h4 / have-org-role-91 :arg1 (c6 / country) :arg3 (s6 / study-01))) :op5 (p6 / person :arg0-of (h5 / have-org-role-91 :arg1 (o / organization) :arg3 (s7 / study-01))) :op6 (p7 / person :arg0-of (h6 / have-org-role-91 :arg1 (o2 / organization) :arg3 (s8 / study-01))) :op6 (p8 / person :arg0-of (h7 / have-org-role-91 :arg1 (o3 / organization) :arg3 (s9 / study-01))) :op7 (p9 / person :arg0-of (h8 / have-org-role-91 :arg1 (c7 / country) :arg3 (s10 / study-01)))) :mod (a2 / also))
(e / elect-01 :arg1 (p / person :name (n / name :op1 "Lyth")) :arg2 (t / team :mod (n2 / nation) :example (p2 / person :name (n3 / name :op1 "Sam" :op2 "Robson"))) :frequency 7 :time (b / before :op1 (s / select-01 :arg1 (p3 / person :name (n4 / name :op1 "Nick" :op2 "Compton")) :frequency (r / rate-entity-91 :arg1 9 :arg2 9))))
(a / and :op1 (r / reject-01 :arg0 (c / country :location (w / west)) :arg1 (b / bid-03 :arg0 (c2 / country :name (n / name :op1 "Russia")) :arg1 (p / person :name (n2 / name :op1 "Bashar" :op2 "al-Assad") :arg0-of (h / have-org-role-91 :arg1 (c3 / country) :arg2 (p2 / president)))) :time (b2 / before :op1 (n3 / now) :quant (m / more-than :op1 (t / temporal-quantity :quant (N / N-A) :unit (y / year))))) :op2 (s / say-01 :arg0 (p3 / person :name (n4 / name :op1 "Martti" :op2 "Ahtisaari" :op3 "Guardian") :arg0-of (h2 / have-org-role-91 :arg2 (p4 / president))) :arg1 (p5 / person :name (n5 / name :op1 "Martti" :op2 "Ahtisaari" :op3 "Guardian") :arg0-of (h3 / have-org-role-91 :arg2 (p6 / president)))))
(i / include-91 :arg1 (p / person :name (n / name :op1 "Geoff" :op2 "Britten") :arg0-of (s / survive-01 :arg1 (r / round :mod (f / final))) :quant (s2 / series)) :arg2 (s3 / section :mod (f2 / final) :part-of (m / man :quant 2)))
(a / and :op1 (h / hit-01 :arg0 (p / person :name (n / name :op1 "Victor" :op2 "Martinez") :arg0-of (h2 / have-org-role-91 :arg2 (s / sijaislyöjä))) :arg1 (p2 / person :quant 3)) :op2 (a2 / allow-01 :arg0 (p3 / person) :arg1 (r / run-01 :arg0 (p4 / person) :arg1 (s2 / season :ord (o / ordinal-entity :value 1) :poss (p5 / person) :ord (o2 / ordinal-entity :value 1) :poss (p6 / person)) :time (a3 / after :op1 (m / middle :part-of (a4 / august))))))
(l / like-01 :arg0 (i / i) :arg1 (p / person :arg0-of (h / have-org-role-91 :arg2 (p2 / president))))
(h / have-concession-91 :arg1 (p / point-out-02 :arg0 (t / they) :arg1 (a / and :op1 (r / recover-02 :polarity - :arg0 (e / economy :mod (e2 / even)) :arg1 (c / crisis :mod (f / finance)) :time (y / yet) :source (r2 / recession-02 :arg1 (m / model :mod (t2 / that)) :time (b / before :op1 (n / now) :duration (m2 / multiple :op1 (t3 / temporal-quantity :quant (N / N-A) :unit (d / decade)))))) :op2 (h2 / heavy :arg1 (e3 / economy) :arg2 (r3 / recession-02) :time (b2 / before :op1 (n2 / now) :duration (m3 / multiple :op1 (t4 / temporal-quantity :quant (N2 / N-A) :unit (d2 / decade))))))) :arg2 (a2 / and :op2 (s / strategists :polarity - :arg0 (a3 / and) :arg1 (s2 / sign))))
(p / point-01 :arg0 (s / study :arg2-of (i / involve-01 :arg1 (p2 / person :quant 351 :mod (d / democracy) :arg0-of (v / vote-01)))) :arg2 (p3 / point :quant 6 :mod (p4 / percentage-entity :value (N / N-A))))
(p / possible-01 :arg1 (k / know-01 :polarity - :arg0 (w / we) :arg1 (t / thing :quant-of (f / friendship :poss (y / you))) :arg1-of (p2 / possible-01)) :time (e / ever :polarity -))
(e / estimate-01 :arg0 (p / person :name (n / name :op1 "Kujala")) :arg1 (l / liikennesumppu :arg1-of (b / bad-07 :degree (m / most)) :source (p2 / peninsula :name (n2 / name :op1 "N-A"))))
(f / funny :domain (c / come-01 :arg1 (i / it) :time (t / time :mod (t2 / this))) :time (a / always))
(p / period :time-of (c / change-01) :time (a / and :op1 (t / turn-01 :arg1 (y / year)) :op2 (a2 / abolition :location (a3 / across :op1 (c2 / country)))))
(s / say-01 :arg0 (o / organization :name (n / name :op1 "Kesko")))
(a / and :op1 (o / organize-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (o2 / organization :name (n / name :op1 "Aalto" :op2 "University")) :arg2 (c / capital)) :arg1-of (o3 / organize-01 :arg0 (c2 / capital :arg0-of (h2 / have-org-role-91 :arg2 (c3 / capital)))) :arg1-of (o4 / organize-01 :location (l / list :arg0-of (a2 / author-01)))) :arg1 (p2 / person :name (n2 / name :op1 "Sixten") :arg0-of (h3 / have-org-role-91 :arg2 (c4 / capital))) :mod (a3 / also)) :op2 (h4 / have-org-role-91 :arg0 (p3 / person) :arg1 (o5 / organization) :arg2 (p4 / professor)))
(a / and :op1 (o / organize-01 :arg0 (o2 / organization :name (n / name :op1 "Chevron") :arg1-of (o3 / organize-01 :medium (b / book)) :arg1-of (b2 / base-02 :arg2 (b3 / book))) :arg1 (p / person :arg0-of (h / have-org-role-91 :arg1 (u / university :mod (p2 / person :name (n2 / name :op1 "Aalto"))) :arg2 (p3 / professor))) :mod (a2 / also)) :op2 (p4 / person :arg1-of (e / expert-01 :arg2 (e2 / economy :mod (r / respect-01)))))
(s / state-01 :arg0 (a / article) :arg1 (n / negotiate-01 :arg0 (a2 / and :op1 (o / organization :mod (t / train-01)) :op2 (t2 / thing :arg2-of (r / result-01 :arg1 (p / person :arg0-of (o2 / operate-01 :mod (f / foreign)) :mod (p2 / potential))))) :arg2 (a3 / airport) :time (y / year :mod (l / last))))
(o / overview :arg0 (s / sector :mod (s2 / some) :part-of (e / economy)) :arg1 (p / perform-02 :arg0 (s3 / sector) :arg1 (t / thing :arg2-of (b / base-02 :arg1 (e2 / economy))) :time (p2 / past)))
(s / say-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg2 (a / authority :mod (p2 / prison)))) :arg1 (p3 / possible-01 :polarity - :arg1 (w / witness-01 :arg0 (i / i) :arg1 (a2 / and :op1 (p4 / person :arg0-of (w2 / witness-01)) :op2 (p5 / person :arg0-of (s2 / supply-01 :arg1 (c / company))) :op3 (p6 / person :arg0-of (s3 / supply-01 :arg1 (c2 / company)))) :arg0-of (c3 / cause-01 :arg1 (p7 / possible-01 :polarity - :arg1 (b / be-02 :arg1 (i2 / i) :prep-with (r / record :mod (r2 / record) :arg1-of (s4 / see-01 :arg0 (i3 / i) :time (e / ever)))))))))
FAILED_TO_PARSE#Number of opening and closing brackets doesn't match.
(c / contrast-01 :arg1 (r / remain-01 :arg1 (e / employ-01 :polarity - :location (c2 / country :name (n / name :op1 "Scotland"))) :arg3 (p / person :quant 164) :time (d / date-interval :op1 (d2 / date-entity :decade (N / N-A)) :op2 (d3 / date-entity :year (N2 / N-A)))) :arg2 (r2 / rise-01 :arg1 (r3 / rate :mod (e2 / employ-01 :polarity -) :location (c3 / country :name (n2 / name :op1 "Britain"))) :arg2 (p2 / person :quant 10000 :arg2-of (t / total-01))))
(m / multi-sentence :snt1 (o / opponent :mod (t / tukko) :domain (o2 / opponent :mod (t2 / tukko))) :snt2 (w / win-01 :arg0 (i / it) :arg1 (a / and :op1 (p / person :quant 9 :arg0-of (p2 / play-01) :mod (i2 / international)) :op2 (d / defend-01 :quant 5 :mod (m2 / male))) :arg2 (a2 / and :op1 (p3 / person :quant 9 :arg0-of (p4 / play-01) :mod (i3 / international)) :op2 (d2 / defend-01 :quant 5 :mod (m3 / male) :arg1-of (d3 / deep-02))) :time (l / level :mod (t3 / this))))
(l / laugh-01 :arg0 (w / we) :frequency (o / often))
(i / intend-01 :arg0 (c / couple :arg0-of (r / reside-01) :arg1-of (r2 / reside-01 :arg0 (c2 / couple))) :arg1 (d / drive-01 :arg0 (c3 / couple) :arg1 (h / home)) :arg1-of (c4 / cause-01 :arg0 (a / and :op1 (p / person :mod (y / young) :arg0-of (h2 / have-rel-role-91 :arg1 (c5 / couple) :arg2 (c6 / child))) :op2 (p2 / person :mod (y2 / young) :arg0-of (h3 / have-rel-role-91 :arg1 (c7 / couple) :arg2 (c8 / child)))) :arg1-of (c9 / cause-01 :arg0 (l / long-03 :arg1 (d2 / distance-01) :degree (t / too :polarity -)))))
(a / add-01 :arg0 (p / person :name (n / name :op1 "Robertson")) :arg1 (a2 / and :op1 (s / shake-01 :arg1 (i / image :mod (p2 / phone))) :op2 (s2 / shake-01 :arg1 (a3 / and :op1 (s3 / shake-01 :arg1 (p3 / person :arg0-of (h / have-rel-role-91 :arg1 (h2 / he) :arg2 (m / mother)))) :op2 (s4 / shake-01 :arg1 (i2 / image)))) :time (f / find-01 :arg0 (p4 / person) :arg1 (i3 / image :poss (p5 / phone)))))
(c / contrast-01 :arg2 (p / part :polarity - :domain (s / supply-01 :arg0 (c2 / company :name (n / name :op1 "BBC")) :arg1 (s2 / supply-01 :arg0 (c3 / company) :arg1 (l / luck :mod (c4 / company :arg0-of (c5 / compete-02) :mod (c6 / commerce))) :arg2 (a / and :op1 (c7 / culture) :op2 (m / media) :op3 (u / urheiluerityisvaliokunnan)) :time (h / hear-01))) :mod (o / only)) :li 3)
(l / lie-07 :arg1 (a / and :op1 (b / belt :mod (g / gold)) :op2 (l2 / lipstick :mod (r / red))) :arg2 (w / whole))
(a / and :op1 (m / meet-02 :arg0 (t / they) :arg1 (a2 / and :op1 (s / speak-01 :arg0 (t2 / they) :medium (p / phone)) :op2 (s2 / speak-01 :arg0 (t3 / they) :medium (p2 / phone)))) :op2 (c / consider-02 :arg0 (t4 / they) :arg1 (t5 / titles :mod (i / important) :beneficiary (p3 / person :name (n / name :op1 "Lees")))))
(s / say-01 :arg0 (a / and :op1 (p / person :name (n / name :op1 "McKee")) :op2 (p2 / person :name (n2 / name :op1 "Capewell"))) :arg1 (a2 / argue-01 :arg0 (o / organization :name (n3 / name :op1 "PHE")) :arg1 (e / evidence-01 :polarity - :arg1 (w / work-09 :arg1 (c / cigarette :mod (e2 / electronic)) :prep-as (r / route :location-of (b / burn-01 :arg1 (o2 / or :op1 (c2 / child) :op2 (n4 / non-smokers))))))))
(a / and :op1 (c / cut-02 :arg0 (c2 / concern-01 :arg1-of (s / stall-01) :location (c3 / country :name (n / name :op1 "China"))) :arg1 (m / monetary-quantity :arg2-of (p / price-01 :arg1 (t / thing :arg2-of (p2 / price-01 :arg1 (t2 / thing :arg2-of (p3 / price-01 :arg1 (t3 / thing :arg2-of (p4 / price-01 :arg1 (t4 / thing :arg2-of (p5 / price-01 :arg1 (c4 / commodity)) :mod (o / other)))))))))) :arg2 (t5 / thing :arg2-of (p6 / price-01 :arg1 (t6 / thing :arg2-of (p7 / price-01 :arg1 (t7 / thing :arg2-of (p8 / price-01 :arg1 (t8 / thing :arg2-of (p9 / price-01 :arg1 (c5 / commodity)) :mod (o2 / other)))))))) :manner (i / iron) :time (t9 / time :arg1-of (s2 / same-01))) :op2 (f / fall-07 :arg1 (c6 / concern-01) :arg2 (b / between :op1 (p10 / percentage-entity :value (N / N-A)) :op2 (p11 / percentage-entity :value (N2 / N-A)))))
(a / arrive-01 :arg1 (c / customer :arg1-of (a2 / arrive-01 :arg4 (c2 / continent :location (g / group :mod (s / small))))))
(a / and :op1 (g / go-02 :arg0 (i / i) :arg4 (i2 / inside)) :op2 (c / come-out-09 :arg1 (i3 / i)))
(a / and :op2 (g / get-01 :polarity - :arg0 (m / money) :arg1 (h / happy :mod (g2 / great :degree (m2 / more))) :mod (r / really)))
(m / multi-sentence :snt1 (p / possible-01 :arg1 (c / conceal :arg0 (p2 / person :arg0-of (h / have-org-role-91 :arg1 (o / organization :name (n / name :op1 "Brisbane" :op2 "Broncos")) :arg2 (c2 / coach))) :arg1 (p3 / person :name (n2 / name :op1 "Wayne" :op2 "Bennett") :arg0-of (h2 / have-org-role-91 :arg1 (o2 / organization) :arg3 (l / lead-02 :arg0 (p4 / person) :arg1 (o3 / organization)))) :arg2 (s / storm) :time (a / after :op1 (w / win-01 :arg0 (p5 / person) :arg1 (o4 / organization :name (n3 / name :op1 "North" :op2 "Queensland" :op3 "Cowboys")) :time (n4 / night :mod (s2 / saturday))))) :degree (b / bare)) :snt2 (a2 / and :op1 (c3 / call-01 :arg0 (p6 / person :name (n5 / name :op1 "Bennett")) :arg1 (p7 / person :name (n6 / name :op1 "Bennett")) :arg2 (l2 / leagues :mod (e / enthusiastically :degree (v / very)))) :op2 (s3 / say-01 :arg0 (p8 / person) :arg1 (' / '' :arg1 (t / team :quant 2 :mod (l3 / location :name (n7 / name :op1 "Queensland"))) :degree (v2 / very)))))
(b / believe-01 :polarity - :arg0 (i / i) :arg1 (u / undermine-01 :arg0 (i2 / it) :arg1 (c / company :name (n / name :op1 "BBC")) :degree (a / at-all)))
(t / try-01 :arg1 (h / have-03 :arg1 (t2 / try-01)))
(s / say-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (o / organization :name (n / name :op1 "Automotive" :op2 "Security" :op3 "Review" :op4 "Board")) :arg2 (- / -lrb-))) :arg1 (s2 / support-01 :arg0 (b / board) :arg1 (a / and :op1 (d / develop-02 :arg1 (t / technology)) :op2 (i / innovate-01 :arg1 (t2 / technology)) :poss (i2 / industry))) :mod (a2 / also) :arg1-of (s3 / say-01 :arg0 (p2 / press :poss (o2 / organization :name (n2 / name :op1 "Intel")))))
(e / expect-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg2 (o / official :mod (h2 / health)))) :arg1 (c / contain-01 :arg0 (p2 / product) :arg1 (o2 / or :op1 (m / methanol) :op2 (m2 / material :arg0-of (k / kill-01)) :op3 (a / alcohol :mod (e2 / ethyl)) :arg1-of (r / report-01 :arg1-of (r2 / resemble-01 :arg2 (i / ingredient :arg1-of (a2 / activity-06)))))))
(g / guess-01 :arg0 (i / i) :arg1 (k / know-01 :arg0 (p / person :name (n / name :op1 "David" :op2 "Cameron")) :arg1 (g2 / good :degree (m / more) :compared-to (t / this))))
(s / suicide :mod (p / politics) :domain (t / thing :arg2-of (s2 / sanction-02)) :source (o / organization :name (n / name :op1 "EU")) :arg1-of (d / declare-01 :arg0 (p2 / person :name (n2 / name :op1 "Myshkin"))))
(s / suicide :mod (p / politics) :domain (t / thing :arg2-of (s2 / sanction-02)) :source (o / organization :name (n / name :op1 "EU")) :arg1-of (d / declare-01 :arg0 (p2 / person :name (n2 / name :op1 "Naryshkin"))))
(s / say-01 :arg0 (o / organization :name (n / name :op1 "Deutsche" :op2 "Bank")) :arg1 (f / fall-01 :arg1 (t / thing :arg1-of (p / precede-01 :arg2 (b / bond :mod (i / index)))) :time (i2 / immediate) :time (e / end-01 :arg1 (t2 / thing :arg1-of (p2 / precede-01 :arg2 (b2 / bond :mod (d / dinosaur)))))))
(h / have-03 :arg0 (a / and :op1 (p / person :arg0-of (h2 / have-org-role-91 :arg1 (o / organization :name (n / name :op1 "EU")))) :op2 (p2 / person :arg0-of (h3 / have-org-role-91 :arg1 (o2 / organization) :arg3 (l / lead-02 :arg0 (p3 / person)))) :op3 (p4 / person :arg0-of (h4 / have-org-role-91 :arg1 (o3 / organization) :arg3 (l2 / lead-02 :arg0 (p5 / person)))) :op4 (p6 / person :arg0-of (h5 / have-org-role-91 :arg1 (o4 / organization) :arg3 (l3 / lead-02 :arg0 (p7 / person)))) :op5 (p8 / person :arg0-of (h6 / have-org-role-91 :arg1 (o5 / organization) :arg3 (l4 / lead-02 :arg0 (p9 / person)))) :op6 (p10 / person :arg0-of (h7 / have-org-role-91 :arg1 (o6 / organization) :arg3 (l5 / lead-02 :arg0 (p11 / person)))) :op6 (p12 / person :arg0-of (h8 / have-org-role-91 :arg1 (o7 / organization) :arg3 (l6 / lead-02 :arg0 (p13 / person)))) :op6 (p14 / person :arg0-of (h9 / have-org-role-91 :arg1 (o8 / organization) :arg3 (l7 / lead-02 :arg0 (p15 / person)))) :op6 (p16 / person :arg0-of (h10 / have-org-role-91 :arg1 (o9 / organization) :arg3 (l8 / lead-02 :arg0 (p17 / person)))) :op6 (p18 / person :arg0-of (h11 / have-org-role-91 :arg1 (o10 / organization) :arg3 (l9 / lead-02 :arg0 (p19 / person)))) :op6 (p20 / person :arg0-of (h12 / have-org-role-91 :arg1 (o11 / organization) :arg3 (l10 / lead-02 :arg0 (p21 / person)))) :op6 (p22 / person :arg0-of (h13 / have-org-role-91 :arg1 (o12 / organization) :arg3 (l11 / lead-02 :arg0 (p23 / person)))) :op6 (p24 / person :arg0-of (h14 / have-org-role-91 :arg1 (o13 / organization) :arg3 (l12 / lead-02 :arg0 (p25 / person)))) :op6 (p26 / person :arg0-of (h15 / have-org-role-91 :arg2 (m / member))) :op6 (p27 / person :arg0-of (h16 / have-org-role-91 :arg2 (m2 / member))) :op7 (p28 / person :arg0-of (h17 / have-org-role-91 :arg2 (m3 / member)))) :arg1 (r / referendum :quant 1975))
(c / claim-01 :arg0 (p / person :arg0-of (o / oppose-01 :arg1 (p2 / political-party :name (n / name :op1 "N-A")))) :arg1 (s / send-01 :arg0 (p3 / person) :arg1 (t / threat :mod (d / die-01 :arg1 (p4 / person)) :mod (a / anonymous)) :arg1-of (c2 / cause-01 :arg0 (w / warn-01 :arg0 (p5 / person) :arg1 (b / boo :arg0 (p6 / person) :arg1 (p7 / person :name (n2 / name :op1 "Mugabe") :arg0-of (h / have-org-role-91 :arg2 (m / mr))) :time (s2 / speak-01 :arg0 (p8 / person))))) :mod (a2 / also)))
(s / say-01 :arg0 (p / person :name (n / name :op1 "Mackay")) :arg1 (l / lead-03 :arg0 (k / kotivierailutapaamiset :time (w / week :mod (l2 / last))) :arg2 (r / realize-01 :arg0 (p2 / person) :arg1 (p3 / possible-01 :arg1 (' / '' :arg1 (p4 / person :name (n2 / name :op1 "Wood")))))))
(s / say-01 :arg0 (p / person :name (n / name :op1 "Mackay")) :arg1 (a / and :op1 (r / receive-01 :arg0 (m / meet-03 :time (w / week :mod (l / last))) :arg1 (v / visit-01 :arg0 (p2 / person) :arg1 (h / home))) :op2 (p3 / possible-01 :arg1 (' / ' :arg1 (w2 / wood) :mod (r2 / right)))))
(a / and :op1 (c / close-13 :arg1 (f / family :arg1-of (h / have-org-role-91 :arg0 (p / person :name (n / name :op1 "Binladinin")) :arg2 (m / member))) :arg2 (f2 / family :arg1-of (h2 / have-org-role-91 :arg0 (p2 / person) :arg2 (m2 / member))) :duration (m3 / multiple :op1 (t / temporal-quantity :quant (N / N-A) :unit (d / decade)))) :op2 (p3 / project :mod (c2 / construct-01) :arg1-of (m4 / major-02) :domain (f3 / family)))
(s / suppose-01 :arg1 (t / thing :arg1-of (a / accuse-01 :arg2 (t2 / thing :arg1-of (a2 / accuse-01)))))
(s / say-01 :arg0 (p / person :quant (m / more-than :op1 6) :arg0-of (h / have-org-role-91 :arg1 (p2 / political-party :name (n / name :op1 "Republican")))) :arg1 (c / change-01 :arg1 (t / thing :arg1-of (o / opine-01 :arg0 (p3 / person))) :arg2 (b / bad-04 :arg1 (p4 / person) :arg2 (b2 / bad-04 :arg1 (p5 / person)))))
(a / and :op1 (d / drive-02 :arg0 (a2 / and :op1 (l / location :name (n / name :op1 "Metro")) :op2 (e / elsewhere)) :arg1 (p / participate-01 :arg0 (a3 / and) :arg1 (p2 / protest-01 :arg0 (c / country))) :arg2 (p3 / protest-01 :arg0 (a4 / and)) :time (m / morning :mod (n2 / night))) :op2 (b / begin-01 :arg1 (e2 / end-01 :arg1 (r / road))))
(h / have-concession-91 :arg1 (a / and :op1 (p / pull-01 :arg0 (p2 / person) :arg1 (c / capitalism) :arg2 (f / far :degree (t / too)) :purpose (c2 / conclude-01 :arg0 (p3 / person))) :op2 (c3 / consider-02 :arg0 (p4 / person) :arg1 (c4 / capitalism))) :arg2 (u / understand-01 :arg0 (p5 / person :name (n / name :op1 "Marx")) :arg1 (r / revolution-03 :arg0 (i / industry))))
(i / important :domain (s / stay-01 :arg1 (i2 / it) :manner (t / together)) :time (n / now))
(a / and :op1 (g / get-01 :arg0 (w / wave :mod (s / sound)) :arg1 (c / channel :name (n / name :op1 (i / ion)) :mod (t / this)) :purpose (o / open-up-03 :arg0 (a2 / apply-01) :arg1 (c2 / cell))) :op2 (t2 / tell-01 :arg0 (j / journal :mod (o2 / organization :name (n2 / name :op1 "Nature" :op2 "Communications")) :mod (j2 / journal)) :arg1 (r / report-01 :arg0 (j3 / journal :mod (j4 / journal)))))
(a / and :op1 (t / transport :arg0 (t2 / transport-01 :arg1-of (p / public-02) :arg1-of (i / include-91 :arg2 (t3 / transport-01 :mod (b / big) :mod (t4 / this)) :arg1-of (n / normal-02))) :arg1 (s / see-01 :arg1 (e / everything)) :arg1-of (n2 / normal-02)) :op2 (t5 / turn-01 :arg0 (e2 / everything) :time (n3 / now)))
(i / include-91 :arg1 (p / person :name (n / name :op1 "Schmidt") :arg1-of (i2 / include-91 :arg2 (l / lamb))) :arg2 (w / write-01 :arg0 (p2 / person) :arg1 (b / book :poss (p3 / person)) :arg1-of (c / cause-01 :arg0 (p4 / praise-01 :arg0 (p5 / person) :arg1 (p6 / person :arg1-of (p7 / powerful-02) :arg0-of (d / divide-02 :arg1 (p8 / person) :arg2 (l2 / life :mod (a / academia) :poss (p9 / person))))))))
(e / excuse-02 :polarity - :arg1 (i / it) :time (n / no-longer))
(s / seem-01 :arg1 (w / wrong-04 :arg1 (n / nothing)))
(e / expect-01 :arg1 (p / person :arg0-of (p2 / protest-01) :mod (t / thousand) :quant (s / several)))
(s / say-01 :arg0 (p / person :name (n / name :op1 "Sipilä") :arg0-of (h / have-org-role-91 :arg2 (t / tv-speech))) :arg1 (m / move-02 :arg1-of (c / cause-01 :arg0 (p2 / possible-01 :arg1 (b / bring-01 :arg0 (i / it) :arg1 (v / view :poss (t2 / they)) :manner (d / dissenting :polarity - :mod (a / any)))))))
(a / agony :arg0 (p / person :arg0-of (s / sing-01)) :arg1 (c / chair :mod (l / lounge) :mod (l2 / leelian)))
(t / try-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (o / organization :name (n / name :op1 "IGA")))) :arg1 (p2 / protect-01 :arg0 (p3 / person) :arg1 (o2 / organization) :arg2 (a / attack-01 :arg1 (a2 / and :op1 (s / south :part-of (c / country :name (n2 / name :op1 "Australia"))) :op2 (w / west :part-of (c2 / country))))))
(a / and :op1 (c / come-01 :arg1 (a2 / art :mod (c2 / creative :degree (m / most)) :arg1-of (r / relate-01 :arg2 (w / weapon :arg1-of (r2 / relate-01 :arg2 (w2 / weapon)))) :mod (c3 / creative :degree (m2 / most)) :arg1-of (r3 / relate-01 :arg2 (w3 / weapon))) :arg3 (i / inside :op1 (e / excel))) :op2 (p / produce-01 :arg0 (e2 / embellished :name (n / name :op1 (f / fantastically)) :mod (f2 / fantastically)) :arg1 (w4 / weapon)))
(s / send-01 :arg1 (a / and :op1 (p / person :arg0-of (h / have-rel-role-91 :arg1 (c / comedy) :arg2 (f / friend))) :op2 (p2 / person :arg0-of (h2 / have-rel-role-91 :arg1 (p3 / person) :arg2 (f2 / friend))) :op3 (p4 / person :arg0-of (h3 / have-rel-role-91 :arg1 (p5 / person) :arg2 (f3 / friend))) :op4 (p6 / person :arg0-of (h4 / have-rel-role-91 :arg1 (p7 / person) :arg2 (f4 / friend))) :op5 (p8 / person :arg0-of (h5 / have-rel-role-91 :arg1 (p9 / person) :arg2 (f5 / friend)))) :arg2 (p10 / person :arg0-of (h6 / have-rel-role-91 :arg1 (c2 / comedy) :arg2 (f6 / friend))) :time (e / end-01))
(a / and :op1 (p / person :mod (w / white) :mod (c / country :name (n / name :op1 "N-A"))) :op2 (l / location :name (n2 / name :op1 "Pori")) :op3 (p2 / person :name (n3 / name :op1 "Pele" :op2 "Peltonen")))
(a / and :op1 (e / end-up-03 :arg1 (w / we) :arg2 (c / channel :mod (t / this))) :op2 (e2 / explain-01 :arg0 (p / person :name (n / name :op1 "Sipilä"))) :arg1-of (c2 / cause-01 :arg0 (a2 / amr-unknown)))
(c / contrast-01 :arg2 (q / question-03 :arg0 (s / scientist :quant (m / many)) :arg1 (s2 / sustainability :arg1 (i / information :arg1-of (r / refer-01 :arg2 (a / and :op1 (l / link-01 :arg1 (a2 / and :op1 (i2 / industry :consist-of (t / tobacco)) :op2 (i3 / industry :consist-of (t2 / tobacco)) :quant (s3 / some)))))))))
(a / and :op1 (f / fool-01 :arg0 (o / one) :arg1 (w / write-01 :arg0 (o2 / one))) :op2 (e / echoed :arg0 (o3 / other :quant (a2 / all))))
(a / and :op1 (f / fool-01 :arg0 (o / one) :arg1 (w / write-01)) :op2 (r / repeat-01 :arg0 (o2 / other :quant (a2 / all)) :arg1 (w2 / write-01)))
(t / thing :mod (k / kind :mod (t2 / this)) :arg1-of (b / base-02 :arg2 (a / and :op1 (p / person :name (n / name :op1 "Barack" :op2 "-RRB-" :op3 "Obama") :arg0-of (h / have-org-role-91 :arg1 (c / country) :arg2 (p2 / president))) :op2 (p3 / person :arg0-of (p4 / partner-01 :arg1 (c2 / country))) :arg1-of (r / regular-02))))
(e / estimate-01 :arg0 (t / thing :arg1-of (r / report-01 :arg0 (o / organization :name (n / name :op1 "Morgan" :op2 "Stanley") :arg0-of (a / analyze-01 :arg1 (t2 / thing :arg1-of (r2 / report-01 :arg0 (p / person :name (n2 / name :op1 "Tom" :op2 "Kierath"))) :time (w / week :mod (t3 / this))))))) :arg1 (a2 / and :op1 (l / lose-02 :arg0 (r3 / retailers :poss (c / country)) :arg1 (r4 / rate-entity-91 :arg1 (m / monetary-quantity :quant 360 :unit (d / dollar)) :arg2 (v / volume-quantity :quant (N / N-A) :unit (g / gallon)))) :op2 (l2 / lose-02 :arg0 (m2 / metcash) :arg1 (r5 / rate-entity-91 :arg1 (m3 / monetary-quantity :quant 250 :unit (d2 / dollar)) :arg2 (t4 / temporal-quantity :quant (N2 / N-A) :unit (y / year))) :time (b / by :op1 (e2 / end-01 :arg1 2016)))) :medium (r6 / report :time (w2 / week :mod (t5 / this))))
(i / important :domain (a / and :op1 (y / you) :op2 (o / other)) :mod (i2 / important) :mod (a2 / also))
(i / include-91 :arg1 (o / organization :name (n / name :op1 "Kingfisher")) :arg2 (c / company :mod (o2 / only) :arg2-of (i2 / include-91 :arg1 (w / woman :quant 50 :arg2-of (i3 / include-91 :arg1 (a / and :op1 (w2 / woman :arg0-of (h / have-org-role-91 :arg1 (c2 / country) :arg2 (p / person :arg0-of (m / manage-01 :mod (g / general))))) :op2 (p2 / person :arg0-of (h2 / have-org-role-91 :arg2 (d / director :mod (f / finance))))))))) :mod (a2 / almost) :mod (a3 / almost))
(b / bring-01 :arg0 (m / magazine :name (n / name :op1 "N-A") :mod (o / organization)) :arg1 (t / truth :quant 6 :arg1-of (h / hard-04)) :arg2 (p / person :name (n2 / name :op1 "Leloup") :location (b2 / behind :op1 (s / scenes))))
(p / point-out-02 :arg0 (h / he) :arg1 (g / give-01 :arg0 (u / union-02) :arg1 (a / and :op1 (p2 / person :mod (e / economy)) :op2 (p3 / person :mod (o / other))) :arg2 (l / location :name (n / name :op1 "Northug")) :time (a2 / after :op1 (n2 / now) :quant (s / several :op1 (t / temporal-quantity :quant (N / N-A) :unit (y / year))))) :time (t2 / time :arg1-of (s2 / same-01)))
(s / say-01 :arg0 (r / report-01))
(f / find-02 :arg0 (s / survey-01) :arg1 (a / and :op1 (g / group :arg1-of (d / differ-02 :degree (v / very)) :domain (p / person :name (n / name :op1 "Carson"))) :op2 (p2 / push-02 :arg0 (p3 / person) :arg1 (p4 / person :name (n2 / name :op1 "Trump")) :arg2 (p5 / person :arg0-of (v2 / vote-01 :arg1 (u / university))))) :mod (a2 / also))
(f / find-02 :arg0 (p / poll-01) :arg1 (a / and :op1 (d / do-02 :arg0 (p2 / person :name (n / name :op1 "Carson")) :arg1 (g / group :arg1-of (d2 / differ-02 :degree (v / very)))) :op2 (r / replace-01 :arg0 (p3 / person) :arg1 (e / educate-01 :arg1-of (h / high-02 :degree (m / more))) :arg2 (p4 / person :arg0-of (v2 / vote-01 :arg1 (r2 / republican))))) :mod (a2 / also))
(d / drummer :arg0 (p / person :name (n / name :op1 "Sipe")) :arg1 (m / mainland :part-of (p2 / person :name (n2 / name :op1 "Toni" :op2 "Wirtanen" :op3 "Tatu" :op4 "Sinisalo") :arg0-of (r / rival-01 :arg1 (c / country)))) :arg2 (p3 / person :name (n3 / name :op1 "Tuukka" :op2 "Temonen" :op3 "Iiro" :op4 "Panula")) :time (p4 / present))
(m / multi-sentence :snt1 (a / and :op1 (s / shoot-02 :arg0 (h / he) :arg1 (p / person :arg0-of (h2 / have-rel-role-91 :arg1 (h3 / he) :arg2 (g / girlfriend))) :location (l / location :name (n / name :op1 "Mississippi")) :time (a2 / after :op1 (s2 / shoot-02 :arg0 (h4 / he) :arg1 (p2 / person :arg0-of (h5 / have-rel-role-91 :arg1 (h6 / he) :arg2 (g2 / girlfriend))) :location (l2 / location :name (n2 / name :op1 "Mississippi")) :time (m2 / morning :mod (s3 / same)))) :time (b / before :op1 (s4 / shoot-02 :arg0 (h7 / he) :arg1 (p3 / person :arg0-of (h8 / have-rel-role-91 :arg1 (h9 / he) :arg2 (g3 / girlfriend))) :location (l3 / location :name (n3 / name :op1 "Mississippi")) :time (l4 / late :op1 (t / temporal-quantity :quant (N / N-A) :unit (d / day)) :degree (m3 / more))))) :op2 (s5 / say-01 :arg0 (p4 / person :name (n4 / name :op1 "Shannon" :op2 "Lamb")) :arg1 (s6 / sorry-01 :arg1 (p5 / person)))) :snt2 (a3 / and :op1 (m4 / murder-01 :arg0 (i / i)) :op2 (p6 / possible-01 :arg1 (c / cancel-01 :arg0 (i2 / i) :arg1 (i3 / it)))))
(r / release-01 :arg1 (c / company :name (n / name :op1 "Facebook")) :time (f / from :op1 (d / date-entity :dayperiod (N / N-A))))
(t / title-01 :arg1 (t2 / title :mod (e / expensive :degree (m / most)) :poss (c / country :name (n / name :op1 "Finland"))) :arg2 (g / gamellä :mod (b / big) :mod (h / helanderin)) :time (e2 / early :degree (m2 / more)))
(s / sell-01 :arg0 (p / person :name (n / name :op1 "Nina" :op2 "Mikkonen") :arg0-of (h / have-rel-role-91 :arg2 (c / comrade))) :arg1 (d / device) :arg1-of (c2 / cause-01 :arg0 (s2 / skill :arg1-of (a / advanced-02 :degree (m / most)) :beneficiary (p2 / professional)) :time (t / time)))
(s / say-01 :arg0 (p / person :name (n / name :op1 "Ahtisaari")) :arg1 (p2 / pay-01 :arg0 (w / we) :arg1 (b / bill) :arg1-of (s2 / say-01 :arg0 (f / forum)) :time (n2 / now)))
(o / obvious-01 :arg1 (o2 / obvious-01 :arg1 (m / move-01 :arg1 (m2 / movement-07 :arg1 (u / union-02 :arg1 (u2 / union-02)))) :time (b / before :op1 (n / now) :quant (t / temporal-quantity :quant (N / N-A) :unit (y / year) :mod (e / even)))))
(o / obvious-01 :arg1 (o2 / obvious-01 :arg1 (m / move-01 :arg1 (m2 / movement-07 :arg1 (u / union-02 :arg1 (u2 / union-02)))) :time (b / before :op1 (n / now) :quant (m3 / more-than :op1 (t / temporal-quantity :quant (N / N-A) :unit (y / year))))))
(a / and :op1 (d / difficult :domain (e / enter-01 :arg1 (g / game))) :op2 (w / want-01 :arg0 (i / i) :arg1 (g2 / go-02 :arg0 (i2 / i) :arg4 (g3 / game) :arg1-of (d2 / deep-02))))
(a / and :op1 (d / difficult :domain (f / feed-01 :arg0 (l / location :name (n / name :op1 "Vaihtomiehelle")) :arg2 (g / game))) :op2 (c / cause-01 :arg0 (a2 / amr-unknown) :arg1 (w / want-01 :arg0 (i / i) :arg1 (g2 / go-02 :arg0 (i2 / i) :arg4 (g3 / game) :arg1-of (d2 / deep-02)))))
(a / and :op1 (f / form :arg1-of (l / long-03) :domain (p / person :name (n / name :op1 "Arkkitehtiveljesten"))) :op2 (k / know-01 :arg0 (p2 / person) :arg1 (c / candelabra :prep-with (p3 / precision :mod (m / mathematical)))))
(p / pass-01 :arg0 (c / company :arg0-of (h / have-03 :arg1 (t / turnover :arg1-of (s / strong-02)))) :arg1 (c2 / company :arg0-of (t2 / turnover :mod (w / weak))) :arg2 (a / and :op1 (c3 / company :mod (t3 / turnover :arg1-of (w2 / weak-02))) :op2 (c4 / company :quant 1999) :op3 (c5 / company :arg0-of (t4 / turnover :mod (w3 / weak)))) :time (a2 / after :op1 (i / increase-01 :arg0 (c6 / company) :arg1 (p2 / point :quant 5 :mod (p3 / percentage-entity :value (N / N-A))))))
FAILED_TO_PARSE#Number of opening and closing brackets doesn't match.
(p / possible-01 :arg1 (a / and :op1 (d / downloading :arg0 (y / you) :arg1 (a2 / and :op1 (a3 / application :mod (a4 / android)) :op2 (e / equipment))) :op2 (s / send-01 :arg0 (y2 / you) :arg1 (a5 / and :op1 (p2 / photograph-01) :op2 (s2 / story)) :arg2 (w / we))))
(s / say-01 :arg0 (p / person :name (n / name :op1 "Timo") :arg0-of (h / have-org-role-91 :arg1 (c / city) :arg2 (m / mayor))) :arg1 (a / and :op1 (c2 / contact-01 :arg0 (p2 / person) :arg1 (m2 / matter :topic (m3 / monday))) :op2 (r / react-01 :arg0 (p3 / person) :arg1-of (q / quick-02))))
(c / come-01 :arg1 (p / passenger :arg1-of (c2 / civilize-01)) :arg3 (s / south :part-of (l / location :name (n / name :op1 "Sahara"))))
(c / contrast-01 :arg2 (c2 / claim-01 :arg0 (p / person :name (n / name :op1 "Viktor" :op2 "Orban") :arg0-of (h / have-org-role-91 :arg2 (m / minister :mod (p2 / prime)))) :arg1 (a / and :op1 (l / look-01 :arg0 (p3 / person :arg0-of (h2 / have-org-role-91 :arg2 (p4 / person :arg0-of (m2 / migrate-01)))) :arg1 (l2 / life :mod (g / good :degree (m3 / more)))) :op2 (f / flee-05 :arg0 (p5 / person) :arg2 (w / war)) :op3 (f2 / flee-05 :arg0 (p6 / person) :arg2 (w2 / war) :arg1-of (c3 / cause-01 :arg0 (a2 / and :op1 (c4 / country :mod (o / other) :arg0-of (h3 / have-org-role-91 :arg1 (o2 / organization :name (n2 / name :op1 "EU")))) :op2 (c5 / country :arg2-of (i / include-91 :arg1 (c6 / country :name (n3 / name :op1 "Germany"))))))))))
(a / ask-01 :arg0 (g / girl) :arg1 (a2 / and :op1 (p / possible-01 :arg1 (p2 / play-11 :arg0 (g2 / girl :arg1-of (n / neighbor-01 :arg2 (h / he)))) :condition (p3 / possible-01 :arg1 (p4 / play-11 :arg0 (t / they) :arg2 (a3 / and :op1 (d / drum) :op2 (b / bass))))) :op2 (e / exam :arg0 (g3 / girl) :time (m / morning))) :arg2 (g4 / girl :arg1-of (n2 / neighbor-01 :arg2 (h2 / he))))
(m / multi-sentence :snt1 (a / announce-01 :arg0 (e / enterprise) :arg1 (a2 / and :op1 (s / seize-01 :arg0 (e2 / enterprise) :arg1 (p / problem) :purpose (c / campaign-01 :arg0 (e3 / enterprise) :arg1 (a3 / against :op1 (c2 / campaign-01 :arg1 (o / oppose-01 :arg1 (p2 / person :arg0-of (l / live-01))))))) :op2 (a4 / announce-01 :arg0 (e4 / enterprise) :arg1 (p3 / problem)))) :snt2 (a5 / aim-01 :arg1 (c3 / challenge-01 :arg1 (c4 / culture :arg0-of (s2 / seek-01 :arg1 (h / help-01) :time (n / need-01 :arg0 (m2 / man) :arg1 (h2 / help-01)))))))
(s / stop-01 :arg1 (r / route :mod (q / quietest)))
(k / know-01 :polarity - :arg0 (i / i) :arg1 (d / deal :mod (e / enthusiasm) :topic (e2 / enthusiasm :beneficiary (p / party :mod (t / terrible))) :domain (h / hold-01 :arg0 (p2 / party :mod (t2 / terrible)) :arg1 (d2 / debate-01) :condition (b / be-located-at-91 :arg1 (p3 / person :quant 1) :arg2 100 :quant 100))))
(a / add-01 :arg0 (c / center :mod (w / weather)) :arg1 (c2 / chance-02 :arg1 (d / develop-02 :arg1 (c3 / cyclone :mod (t / tropical)) :time (a2 / after :op1 (n / now) :quant (b / between :op1 (t2 / temporal-quantity :quant (N / N-A) :unit (d2 / day)) :op2 (t3 / temporal-quantity :quant (N2 / N-A) :unit (d3 / day))) :op3 (c4 / center :mod (w2 / weather)))) :mod (a3 / also) :arg1-of (d4 / define-01 :arg1-of (d5 / define-01 :arg1-of (d6 / define-01 :arg2 (m / middle :part-of (a4 / and :op1 (l / location :name (n2 / name :op1 "Cape" :op2 "Verde" :op3 "Islands")) :op2 (o / organization :name (n3 / name :op1 "Lesser" :op2 "Antilles"))))))) :mod (a5 / also) :mod (a6 / also)))
(e / expect-01 :arg1 (m / model :poss (o / organization :name (n / name :op1 "Ford" :op2 "Focus" :op3 "RS")) :arg1-of (r / rise-01)) :duration (t / temporal-quantity :quant (N / N-A) :unit (y / year)))
(b / based :arg0 (p / person :name (n / name :op1 "Scrooge" :op2 "Salminen")) :arg1 (f / film :arg1-of (b2 / base-02 :arg2 (m / member :arg0-of (f2 / found-01 :arg1 (c / country :name (n2 / name :op1 "N-A")))) :time (y / year :mod (e / early :degree (m2 / most))))) :arg2 (p2 / person :name (n3 / name :op1 "Antti" :op2 "Lautala")))
(p / present-01 :arg0 (p2 / person :name (n / name :op1 "Roddy" :op2 "Salminen")) :arg1 (a / aid-01 :arg0 (p3 / person :arg0-of (h / have-org-role-91 :arg1 (p4 / person :name (n2 / name :op1 "Antti") :arg0-of (f / found-01 :arg1 (c / country)) :arg0-of (f2 / found-01 :arg1 (c2 / country)) :arg0-of (f3 / found-01 :arg1 (c3 / country))) :arg2 (m / member)))) :time (y / year :mod (e / early)))
(h / help-01 :arg0 (r / role :poss (p / person :name (n / name :op1 "Olga")) :time (e / early :op1 (y / year :mod (e2 / early)))) :arg1 (p2 / person :name (n2 / name :op1 "Sirkka") :arg0-of (h2 / have-rel-role-91 :arg1 (p3 / person) :arg2 (m / mother)) :arg0-of (h3 / have-rel-role-91 :arg1 (p4 / person) :arg2 (m2 / mother)) :arg0-of (h4 / have-rel-role-91 :arg1 (p5 / person) :arg2 (m3 / mother)) :arg0-of (h5 / have-rel-role-91 :arg1 (p6 / person) :arg2 (m4 / mother)) :arg0-of (h6 / have-rel-role-91 :arg1 (p7 / person) :arg2 (m5 / mother))))
(o / organize-01 :arg0 (u / union :mod (t / trade-01)) :arg1 (p / protest-01 :mod (b / big)) :manner (w / way :quant (m / many)) :manner (w2 / way :quant (m2 / many)) :manner (a / and :op1 (i / interesting :degree (m3 / most)) :op2 (e / exceptional)))
(c / contrast-01 :arg1 (p / possible-01 :arg1 (t / true :domain (t2 / this) :prep-in (p2 / point :mod (m / medicine) :mod (v / view-01)))) :arg2 (r / risk-01 :arg0 (i / injure-01 :mod (a / additional)) :arg2 (p3 / person :arg0-of (p4 / play-01))))
(r / reserve-01 :arg1 (p / person :arg1-of (e / employ-01) :mod (p2 / permanent)) :mod (s / some))
(m / multi-sentence :snt1 (c / contrast-01 :arg2 (h / have-condition-91 :arg1 (r / rise-01 :arg1 (w / wood)) :arg2 (r2 / rise-01 :polarity - :arg1 (w2 / wood) :mod (f / final) :condition (r3 / rise-01 :arg1 (w3 / wood))))) :snt2 (p / possible-01 :arg1 (p2 / provide-01 :arg0 (t / thing :arg1-of (a / answer-01 :arg0 (t2 / they))) :arg1 (p3 / person :arg0-of (w4 / win-01 :arg1 (h2 / heart :part-of (b / bachelor)))) :mod (r4 / revelation))))
(c / contrast-01 :arg1 (o / offer-01 :arg0 (w / website) :arg1 (c2 / candidate :arg0-of (h / have-rel-role-91 :arg1 (w2 / website) :arg2 (w3 / wife)))) :arg2 (c3 / contrast-01 :arg1 (o2 / offer-01 :arg0 (w4 / website) :arg1 (c4 / candidate :mod (k / kind :mod (a / amr-unknown))) :time (a2 / always)) :arg2 (p / prefer-01 :arg0 (p2 / person :mod (k2 / kind :mod (a3 / amr-unknown))) :arg1 (s / sleep-01 :arg0 (p3 / person)))))
(h / have-03 :arg0 (p / publication :name (n / name :op1 "N-A")) :arg1 (v / video :location-of (d / drink-01 :arg0 (t / teenager) :arg1 (r / rise-01 :arg1 (h2 / hops) :arg1-of (c / cheap-02 :degree (m / most))))))
(a / and :op1 (i / immensely :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (p2 / person :arg0-of (s / smuggle-01)) :arg2 (k / king :mod (r / rich)))) :arg1 (a2 / and :op1 (p3 / person :arg0-of (s2 / smuggle-01)) :op2 (p4 / person :arg0-of (h2 / have-org-role-91 :arg2 (h3 / head-of-state))) :op3 (p5 / person :arg0-of (h4 / have-org-role-91 :arg2 (h5 / head-of-state))) :op4 (p6 / person :arg0-of (h6 / have-org-role-91 :arg2 (h7 / head-of-state))) :op5 (p7 / person :arg0-of (h8 / have-org-role-91 :arg2 (h9 / head-of-state))) :op6 (p8 / person :arg0-of (h10 / have-org-role-91 :arg2 (h11 / head-of-state))) :op7 (p9 / person :arg0-of (h12 / have-org-role-91 :arg2 (h13 / head-of-state))))))
(c / cause-01 :arg1 (g / go-on-15 :arg1 (a / amr-unknown)))
(d / describe-01 :arg0 (l / lamb :source (p / person :mod (o / old) :arg0-of (h / have-rel-role-91 :arg2 (f / friend)))) :arg1 (h2 / he) :arg2 (a / and :op1 (i / intelligent) :op2 (c / charismatic) :op3 (f2 / funny)))
(i / include-91 :arg1 (t / this) :arg2 (l / line :quant 3 :ord (o / ordinal-entity :value 1) :source (p / person :name (n / name :op1 "Martinez"))) :time (a / after :op1 (h / hit-02 :arg0 (h2 / he) :arg1 4 :prep-against (o2 / organization :name (n2 / name :op1 "Seattle" :op2 "Mariner")) :time (d / date-entity :month 6 :day (N / N-A)))))
(a / and :op1 (r / rich :degree (m / more) :domain (d / discuss-01)) :op2 (p / possible-01 :arg1 (a2 / approach-02 :arg1 (p2 / person :name (n / name :op1 "Marx")) :prep-without (a3 / and :op1 (i / ideology) :op2 (p3 / politics))) :mod (a4 / also)) :time (t / today))
(r / recommend-01 :arg1 (s / stop-01 :arg0 (w / we) :arg1 (d / disaster :mod (t / this))))
(r / r-line :arg0 (l / line :mod (f / future) :time (f2 / future)) :arg1 (s / station :quant 2) :mod (m / main))
(m / multi-sentence :snt1 (a / amused :polarity - :arg0 (t / thread :name (n / name :op1 (u / unauthorized) :op2 (u2 / unauthorized)) :mod (t2 / this)) :arg1 (c / city :name (n2 / name :op1 "London"))) :snt2 (' / '' :mode (e / expressive)))
(s / suffer-01 :arg0 (p / person :name (n / name :op1 "N-A") :arg0-of (s2 / stop-01 :arg1 (d / develop-02 :arg1 (t / turnover :poss (u / unit))))) :time (b / before :op1 (n2 / now) :duration (f / few :op1 (t2 / temporal-quantity :quant (N / N-A) :unit (y / year)))))
(p / pend-01 :arg1 (s / sue-02) :arg2 (s2 / sue-02))
(k / keep-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (c / country :name (n / name :op1 "Zimbabwe")) :arg2 (p2 / president))) :arg1 (s / speech :arg1-of (s2 / same-01)) :time (b / before :op1 (n2 / now) :quant (t / temporal-quantity :quant (N / N-A) :unit (m / month))))
(a / and :op1 (r / remember-01 :arg0 (i / i) :arg1 (t / thing :quant 2010 :arg1-of (i2 / include-91 :arg2 (t2 / thing :location (d / date-entity :century (N / N-A))))) :frequency (o / often)) :op2 (s / say-01 :arg0 (p / person :name (n / name :op1 "Wayne")) :arg1 (p2 / possible-01 :arg1 (c / care-01 :arg0 (p3 / person) :arg1 (l / less :degree (l2 / less))))))
(t / tell-01 :arg0 (p / person :name (n / name :op1 "Mugabe")) :arg1 (c / contrast-01 :arg1 (t2 / thing :arg1-of (m / message-01) :arg1-of (s / send-01 :arg2 (n2 / number :arg1-of (c2 / correspond :polarity -)))) :arg2 (e / entitled :arg1 (m2 / message) :arg2 (p2 / person :arg0-of (r / report-01)) :time (a / after :op1 (s2 / speak-01)))))
(r / recover-02 :arg1 (e / economy :mod (a / area :mod (e2 / euro))) :degree (a2 / at-all))
(a / and :op1 (p / put-01 :arg0 (p2 / person :arg0-of (h / have-rel-role-91 :arg2 (m / mother))) :arg1 (t / tie) :arg2 (a2 / around :op1 (e / ear :part-of (p3 / person)))) :op2 (s / settle-02 :arg0 (p4 / person) :arg1 (t2 / tie) :location (a3 / around :op1 (e2 / ear :part-of (p5 / person)))))
(l / locate-01 :arg1 (v / village) :location (n / next-to :op1 (c / center)) :arg0-of (r / release-01 :arg1 (f / family :mod (m / main))))
(t / thing :quant (f / few) :arg1-of (r / resemble-01 :arg2 (s / security :mod (p / personalized) :location (r2 / road :location (r3 / road)) :arg0-of (m / make-01 :arg1 (i / idea :mod (r4 / right)) :time (t2 / time :mod (r5 / right))))))
(u / understand-01 :arg0 (p / person :name (n / name :op1 "Koivunen")) :arg1 (i / indignant :arg1 (m / media :mod (c / commerce)) :manner (s / sipilä)))
(s / speak-01 :arg0 (l / lamb :mod (p / person :name (n / name :op1 "Shannon")) :quant (b / bit :mod (j / just))) :time (s2 / speak-01 :arg0 (p2 / person) :arg2 (p3 / police) :arg1-of (c / cause-01 :arg0 (a / and :op1 (s3 / shoot-02 :arg0 (p4 / person) :arg1 (s4 / shoot-02 :arg1 (p5 / person))) :op2 (r / recommend-01 :arg1 (c2 / come-01 :arg1 (p6 / police) :arg4 (h / house :poss (p7 / police))))))))
(l / language :domain (l2 / language :mod (k / karelian)) :mod (s / still) :arg1-of (m / mean-01 :arg2 (i / image :poss (m2 / mouth :part-of (p / person :arg0-of (h / have-org-role-91 :arg1 (c / city-district :name (n / name :op1 "N-A") :location (s2 / sea :name (n2 / name :op1 "N-A"))) :arg2 (c2 / capital)))))))
(a / and :op1 (f / features :domain (l / language :mod (k / karelian)) :mod (s / still)) :op2 (i / image :source (l2 / location :name (n / name :op1 "Joensuu")) :location (t / throughout :op1 (l3 / location :name (n2 / name :op1 "Joensuu")))))
(s / show-01 :arg0 (t / this) :arg1 (m / majority :poss (p / person :arg0-of (v / vote-01) :arg1-of (i / include-91 :arg2 (p2 / person :arg0-of (v2 / vote-01) :mod (r / republican)) :arg3 (m2 / majority))) :purpose (c / campaign-01 :arg0 (p3 / person) :arg1 (c2 / campaign :mod (c3 / credible)))) :prep-in (c4 / case :mod (a / any)))
(s / show-01 :arg0 (t / this) :arg1 (m / majority :domain (m2 / majority :poss (p / person :arg0-of (v / vote-01 :arg1 (c / campaign-01 :arg0 (p2 / person :name (n / name :op1 "Trump")))))) :arg3 (c2 / campaign-01 :arg0 (p3 / person))) :prep-in (c3 / case :mod (a / any)))
(a / and :op2 (i / include-91 :arg1 (h / he) :arg2 5 :time (s / season :mod (l / last) :mod (s2 / season :quant 157 :mod (l2 / league) :mod (o / only) :part-of (g / game :quant 157 :mod (o2 / only))))))
(a / and :op1 (r / run-01 :arg0 (c / continent :name (n / name :op1 "Europe")) :arg1 (c2 / crisis :mod (r2 / refugee) :arg1-of (b / bad-07 :degree (m / most))) :time (s / since :op1 (w / war :mod (w2 / world) :ord (o / ordinal-entity :value 2)))) :op2 (r3 / reason :arg0-of (c3 / cause-01 :arg1 (w3 / war :mod (c4 / civil) :duration (t / temporal-quantity :quant (N / N-A) :unit (y / year))) :arg0-of (d / drive-02 :arg1 (p / person :quant (m2 / more-than :op1 4000000)) :arg2 (h / home :poss (c5 / country)) :time (y2 / year :mod (t2 / this))) :mod (m3 / main))))
(v / view-02 :arg1 (p / person :arg0-of (h / house-01 :arg1 (u / university)) :mod (u2 / university)) :arg2 (v2 / view-02 :arg1 (p2 / person :arg0-of (h2 / house-01 :arg1 (u3 / university))) :condition (u4 / unlock :arg1 (d / door))))
(t / trip-03 :arg0 (o / one) :arg1 (m / monetary-quantity :quant 8 :unit (e / euro) :mod (a / approximately :op1 (m2 / monetary-quantity :quant 000 :unit (e2 / euro)))))
(e / event :mod (t / this) :time (r / raise-01 :arg0 (b / bank :mod (c / central) :mod (c2 / country :name (n / name :op1 "US"))) :arg1 (r2 / rate :mod (i / interest))))
(m / multi-sentence :snt1 (a / amr-unknown :arg1-of (i / include-91 :arg2 (' / '' :arg1-of (m2 / miss-01) :location (c / country))) :quant (l / less-than :op1 (t / temporal-quantity :quant (N / N-A) :unit (y / year)))) :snt2 (m3 / make-01 :arg0 (p / person :mod (c2 / country :name (n / name :op1 "Finland"))) :arg1 (a2 / apply-01 :mod (m4 / malicious) :quant 156 :mod (a3 / alone)) :location (c3 / country)))
(s / say-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg2 (a / authority))) :arg1 (h2 / have-03 :polarity - :mode (i / imperative) :arg0 (y / you) :arg1 (o / or :op1 (i2 / information :mod (a2 / any)) :op2 (t / thing :arg0-of (e / evidence-01 :arg1 (d / drama :mod (k / kind :mod (a3 / any)))))) :arg1-of (c / cause-01 :arg0 (a4 / allege-01 :arg1 (r / relate-01 :arg1 (l / lamb) :arg2 (s2 / schmidtiin :arg1 (l2 / lamb)))) :concession (a5 / allege-01 :arg1 (r2 / relate-01 :arg1 (l3 / lamb) :arg2 (s3 / schmidtiin :arg1 (l4 / lamb)))))))
(c / claim-01 :arg0 (p / person :name (n / name :op1 "Peter" :op2 "Moody")) :arg1 (a / and :op1 (v / vakojaan :arg0 (p2 / person :arg0-of (h / have-org-role-91 :arg1 (c2 / country :name (n2 / name :op1 "N-A")) :arg2 (o / official))) :arg1 (t / talleihinsa :arg0 (p3 / person)) :time (y / year :mod (l / last))) :op2 (t2 / threaten-01 :arg0 (p4 / person) :arg1 (s / stop-01 :arg0 (p5 / person) :arg1 (c3 / compete-02) :time (i / immediate)))))
(s / sit-01 :arg1 (p / person :name (n / name :op1 "Kent" :op2 "Weed") :arg0-of (h / have-org-role-91 :arg2 (p2 / person :arg0-of (m / manage-01 :arg1 (p3 / produce-01))))) :arg2 (a / and :op1 (r / report-01 :arg0 (p4 / person) :arg1 (t / thing :arg2-of (l / list-01 :arg1 (c / criminal-organization :name (n2 / name :op1 "N-A"))))) :op2 (t2 / thing :arg0-of (c2 / cause-01 :arg1 (g / get-01 :arg0 (p5 / person :name (n3 / name :op1 "Britten")) :arg1 (m2 / money :quant (m3 / more))))) :op3 (g2 / get-01 :arg0 (p6 / person) :arg1 (m4 / money :quant (m5 / more))) :concession (c3 / contestant :ord (o / ordinal-entity :value 1) :arg0-of (m6 / manage-02 :arg1 (p7 / pass-01 :arg0 (p8 / person) :arg1 (t3 / track))))))
(s / say-01 :arg0 (p / person :name (n / name :op1 "Jacobsen")) :arg1 (c / content-01 :arg1 (h / he) :arg2 (r / represent-01 :arg0 (h2 / he) :arg1 (l / league :arg0-of (c2 / care-03 :arg1 (g / generation :time (f / future)) :mod (a / also)) :arg0-of (l2 / let-01 :polarity - :arg1 (g2 / go-01 :arg1 (p2 / person :quant 1 :arg1-of (i / include-91 :arg2 (p3 / person :arg0-of (a2 / athletes)))) :mod (a3 / alone)))))))
(s / say-01 :arg0 (p / person :arg0-of (v / vote-01) :arg1-of (r / register-02) :quant (m / multiple :op1 62)) :arg1 (l / like-01 :polarity - :arg0 (p2 / person) :arg1 (p3 / person :name (n / name :op1 "Clinton")) :manner (a / and :op1 (h / honest) :op2 (t / trustworthy))))
(a / and :op1 (r / recession-02 :arg1 (r2 / recession-02)) :op2 (r3 / reality :mod (d / depress)))
(i / inspire-01 :arg0 (s / songs :mod (n / new)) :arg1 (l / life :mod (n2 / new)))
(i / inspire-01 :arg0 (s / situation :mod (n / new)) :arg1 (s2 / songs :mod (n2 / new)))
(d / do-02 :arg0 (p / popularity :poss (f / figure :poss (o / organization :name (n / name :op1 "Trump")))) :arg1 (u / u-turn))
(w / write-01 :arg0 (p / person :name (n / name :op1 "Sylvester" :op2 "Stallone")) :arg1 (m / movie :mod (r / rocky)) :arg1-of (c / cause-01 :arg0 (p2 / play-11 :arg0 (p3 / person) :arg2 (p4 / part :mod (m2 / main)))) :li 1976)
(a / and :op1 (b / break-01 :arg1 (h / he) :time (i / immediate) :time (b2 / begin-01 :arg1 (t / top))) :op2 (d / defend-01 :arg0 (h2 / he) :arg1 (c / case-03 :arg1 (m / manage-01 :arg1 (m2 / manic))) :time (r / run-13)))
(s / say-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (r / republican :quant 10))) :arg1 (a / agree-01 :arg0 (o / organization :name (n / name :op1 "Trump")) :arg1 (i / immigrate-01)))
(s / say-01 :arg0 (p / person :name (n / name :op1 "Amirkhani")) :arg1 (m / message-01 :arg0 (p2 / person) :arg1 (a / ask-02 :arg0 (m2 / message) :arg1 (s2 / see-01 :arg0 (m3 / message) :arg1 (a2 / account :mod (i / instagram))))))
(t / tell-01 :arg0 (p / person :name (n / name :op1 "Amirkhani")) :arg1 (r / receive-01 :arg0 (i / it) :arg1 (m / message :arg0-of (w / watch-01 :arg1 (a / account :quant 1 :mod (i2 / instagram))))) :arg2 (w2 / we))
(a / attack-01 :arg0 (p / police :mod (c / country :name (n / name :op1 "N-A"))) :arg1 (h / hundreds :arg1 (r / refugee) :arg2 (g / gas :arg1-of (t / tear))))
(s / start-01 :arg1 (c / campaign-01 :mod (g / grass-roots)))
(h / have-03 :arg0 (b / book :mod (n / new)) :arg1 (a / attend-02 :arg1 (b2 / book :mod (n2 / new)) :location (c / country :name (n3 / name :op1 "United" :op2 "States"))) :time (t / time :name (n4 / name :op1 (o / olympics) :op2 (o2 / olympics) :op3 (o3 / olympics))))
(s / strike-01 :arg1 (m / metal :quant 1970) :mod (i / important :degree (m2 / most)) :arg1-of (s2 / strike-01 :arg2 (a / and :op1 (p / plant :mod (p2 / power)) :op2 (p3 / plant :mod (p4 / power))) :location (a2 / and :op1 (p5 / plant :quant 1971) :op2 (p6 / plant :mod (p7 / power)))))
(g / guarantee-01 :arg1 (g2 / guarantee-01 :arg1 (a / and :op1 (s / surrender-01 :arg0 (h / he) :arg1 (p / passport :poss (h2 / he))) :op2 (a2 / apply-01 :arg0 (h3 / he) :arg2 (a3 / and :op1 (c / country :name (n / name :op1 "Australia")) :op2 (c2 / country :name (n2 / name :op1 "Serbia"))) :frequency (r / rate-entity-91 :arg3 (t / temporal-quantity :quant (N / N-A) :unit (d / day)))) :op3 (k / keep-01 :arg0 (h4 / he) :arg1 (a4 / and :op1 (i / iltakuuden) :op2 (a5 / aamukuuden))))) :arg2 (c3 / condition :topic (a6 / and :op1 (s2 / surrender-01 :arg0 (h5 / he) :arg1 (p2 / passport :poss (h6 / he))) :op2 (a7 / apply-01 :arg0 (h7 / he) :arg2 (p3 / police) :frequency (r2 / rate-entity-91 :arg3 (t2 / temporal-quantity :quant (N2 / N-A) :unit (d2 / day)))))))
(h / have-03 :arg0 (p / person :mod (f / foreign)) :arg1 (a / and :op1 (p2 / person :name (n / name :op1 "Corbyn")) :op2 (p3 / person :name (n2 / name :op1 "Nigel" :op2 "Farage"))) :mod (a2 / also))
(a / and :op1 (d / difficult :degree (q / quite) :domain (i / it)) :op2 (p / possible-01 :arg1 (p2 / puikkia :arg1 (i2 / it) :arg2 (a2 / and :op1 (l / lähtöauton :arg1 (l2 / lähtöhetkellä)) :op2 (k / kind :poss (t / they))))))
(c / contrast-01 :arg1 (l / lead-01 :arg0 (p / person :name (n / name :op1 "Clinton")) :arg1 (w / woman) :arg1-of (s / strong-02)) :arg2 (r / reduce-01 :arg1 (l2 / leadership :poss (h / he))))
(l / likened :arg0 (p / person :name (n / name :op1 "Hall" :op2 "Payne")) :arg1 (f / fumble :poss (p2 / person)) :arg2 (o / origin-debut :quant 2007) :time (r / result-01 :arg1 (b / ball :mod (g / goal) :poss (p3 / person)) :arg2 (g2 / goal :mod (g3 / goal) :arg1-of (r2 / result-01 :arg2 (p4 / peninsula :name (n2 / name :op1 "N-A"))))))
(c / contrast-01 :arg1 (p / publish :arg0 (w / we) :arg1 (n / name :poss (y / you)) :arg1-of (c2 / cause-01 :arg0 (d / do-02 :arg0 (w2 / we) :arg1 (i / it)))) :arg2 (p2 / publish :polarity - :arg0 (w3 / we) :arg1 (a / address :poss (y2 / you) :mod (e / email)) :time (e2 / ever) :condition (d2 / deny-01 :arg0 (w4 / we) :arg1 (i2 / it))))
(m / multi-sentence :snt1 (l / lamented :arg0 (h / he) :arg1 (f / fact :topic (m2 / make-01 :arg0 (a / and :op1 (c / council) :op2 (p / person :mod (c2 / country :name (n / name :op1 "N-A"))) :op3 (p2 / person :mod (c3 / country :name (n2 / name :op1 "N-A")))) :arg1 (s / situation)))) :snt2 (p3 / possible-01 :polarity - :arg1 (s2 / solve-01 :arg1 (s3 / situation))))
(m / multi-sentence :snt1 (r / regretted :arg0 (h / he) :arg1 (a / and :op1 (c / council) :op2 (p / person :mod (c2 / country :name (n / name :op1 "N-A"))) :op3 (d / division :mod (d2 / division :mod (r2 / region))))) :snt2 (p2 / possible-01 :polarity - :arg1 (r3 / resolve-01 :arg1 (s / situation))))
(t / tell-01 :arg0 (o / organization :name (n / name :op1 "Salk" :op2 "Institute") :location (s / state :name (n2 / name :op1 "California"))) :arg1 (t2 / tell-01 :arg0 (p / person :name (n3 / name :op1 "Sreekanth" :op2 "Chalasani") :arg0-of (h / have-org-role-91 :arg1 (o2 / organization) :arg2 (s2 / scientist :mod (o3 / organization :name (n4 / name :op1 "La" :op2 "Jollassa"))))) :arg1 (p2 / possible-01 :arg1 (r / replace-01 :arg0 (a / and :op1 (c / country) :op2 (c2 / country)) :arg1 (c3 / country) :duration (d / day :mod (o4 / one)))) :arg2 (m / measure-02 :mod (i / invasiivinen) :arg1-of (c4 / cause-01 :arg0 (e / electric :domain (b / brain :mod (h2 / human)) :purpose (t3 / treat-03 :arg1 (d2 / disease :poss (p3 / parkinson))))))))
(g / give-01 :polarity - :arg0 (p / past) :arg1 (h / help-01 :mod (l / little)) :time (p2 / past) :time (c / come-12 :arg1 (e / economy)))
(h / help-01 :polarity - :arg0 (p / past) :mod (l / little) :time (p2 / past) :time (c / come-12 :arg1 (e / economy)) :mod (p3 / particular))
(s / say-01 :arg0 (h / he) :arg1 (p / possible-01 :arg1 (l / leave-15 :arg0 (t / that) :arg1 (o / opportunity :quant (s2 / some) :arg1-of (i / include-91 :arg2 (o2 / opportunity))))) :mod (a / also))
(c / come-01 :arg1 (e / element :mod (c2 / certain) :poss (m / movement-07 :arg0 (p / political-party :name (n / name :op1 "Labour" :op2 "Party")))) :mod (s / still))
(a / and :op1 (c / cost-01 :arg1 (m / monetary-quantity :quant 75 :unit (e / euro)) :arg2 (a2 / around :op1 (m2 / monetary-quantity :quant 75 :unit (e2 / euro)))) :op2 (p / problem :poss (c2 / customer) :domain (p2 / problem :poss (c3 / customer)) :condition (r / run-out-05 :arg1 (c4 / customer) :arg2 (m3 / money))))
(s / say-01 :arg0 (p / person :name (n / name :op1 "Koivumäki")) :arg1 (a / and :op1 (e / educate-01 :mod (a2 / adult) :location (s2 / school)) :op2 (p2 / part :part-of (s3 / study-01 :mod (v / vocational)) :domain (s4 / some))))
(c / contrast-01 :arg2 (h / hope-01 :arg0 (c2 / country :name (n / name :op1 "Hungary")) :arg1 (h2 / hope-01 :arg0 (c3 / country) :arg1 (w / work-09 :arg1 (o / or :op1 (n2 / neighbor-01 :arg1 (i / it)) :op2 (w2 / work-01 :arg0 (c4 / city :name (n3 / name :op1 "Brussels")))) :time (f / future :arg1-of (n4 / near-02))))))
(h / have-concession-91 :arg1 (h2 / hope-01 :polarity - :mode (i / imperative) :arg0 (y / you) :arg1 (a / act-01 :arg0 (o / or :op1 (c / congress) :op2 (c2 / city :name (n / name :op1 "Brussels"))) :time (f / future :arg1-of (n2 / near-02)))))
(t / talk-01 :arg0 (t2 / they) :arg1 (f / firm :mod (o / old)))
(s / star)
(s / sadden :arg0 (i / it) :arg1 (i2 / i) :mod (r / really))
(a / and :op2 (m / make-01 :arg0 (a2 / and :op1 (o / organization :name (n / name :op1 "Adidas")) :op2 (p / person :name (n2 / name :op1 "N-A") :arg0-of (h / have-org-role-91 :arg1 (o2 / organization) :arg3 (e / exemplify-01))) :op3 (p2 / person :arg0-of (h2 / have-org-role-91 :arg1 (o3 / organization) :arg3 (e2 / exemplify-01))) :op4 (p3 / person :arg0-of (h3 / have-org-role-91 :arg1 (o4 / organization) :arg3 (e3 / exemplify-01))) :op5 (p4 / person :arg0-of (h4 / have-org-role-91 :arg1 (c / city) :arg2 (y / yankees-caps))) :op6 (p5 / person :arg0-of (h5 / have-org-role-91 :arg1 (c2 / city) :arg2 (y2 / yankees-caps))) :op6 (p6 / person :arg0-of (h6 / have-org-role-91 :arg1 (c3 / city) :arg2 (y3 / yankees-caps))) :op7 (p7 / person :arg0-of (h7 / have-org-role-91 :arg1 (o5 / organization) :arg3 (e4 / exemplify-01)))) :arg1 (l / language :name (n3 / name :op1 "N-A")) :location (s / street)) :mod (a3 / also))
(a / and :op1 (p / possible-01 :arg1 (a2 / and :op1 (e / epähierarkkinen) :op2 (e2 / emotional) :op3 (i / image :arg1-of (p2 / personal-02)) :domain (i2 / image :arg1-of (p3 / personal-02 :arg2 (p4 / person :name (n / name :op1 "Corbyn"))))) :arg1-of (c / cause-01 :arg0 (w / want-01 :arg0 (a3 / and :op1 (i3 / image :mod (e3 / emotional)) :op2 (e4 / emotional) :op3 (i4 / image :arg1-of (p5 / personal-02))) :arg1 (a4 / and :op1 (e5 / epähierarkkinen) :op2 (e6 / emotional) :op3 (i5 / image :arg1-of (p6 / personal-02))) :mod (e7 / even))) :op2 (i6 / important :domain (d / discipline :mod (c2 / communicate-01)) :mod (e8 / especially) :location (f / forefronts :arg1 (m / media :mod (s / society)) :arg2 (a5 / and :op1 (v / vainoharhoille) :op2 (d2 / defraud-01))) :mod (e9 / especially))))
(t / take-01 :arg0 (p / person :name (n / name :op1 "Moreno")) :arg1 (t2 / this) :arg1-of (h / hard-02) :arg1-of (c / cause-01 :arg0 (a / and :op1 (i / intend-01 :polarity - :arg1 (h2 / hurt-01 :arg0 (p2 / person) :arg1 (o / opponent))) :op2 (b / bad-07 :arg1 (i2 / injure-01) :degree (r / really)) :time (h3 / hear-01 :arg0 (p3 / person) :arg1 (b2 / bad-07 :arg1 (i3 / injure-01) :degree (r2 / really)))) :arg1-of (s / say-01 :arg0 (p4 / person :name (n2 / name :op1 "Cocu")))))
(m / multi-sentence :snt1 (w / worth :domain (e / ensure-01 :arg1 (b / be-located-at-91 :arg1 (y / you) :arg2 (l / list :poss (w2 / we) :topic (t / thing :quant (a / all) :arg1-of (n / need-01) :arg0-of (n2 / need-01 :arg1 (d / do-02 :arg1 (t2 / thing) :time (b2 / before :op1 (d2 / downloading)))))))) :mod (a2 / also)) :snt2 (i / infer-01 :arg1 (b3 / bring-01 :arg0 (p / person :quant 9) :arg1 (p2 / properties :mod (n3 / new) :example (a3 / and :op1 (p3 / person :arg0-of (a4 / assist-01) :arg1-of (p4 / personal-02)) :op2 (p5 / person :arg0-of (a5 / assist-01 :arg2 (i2 / ipad))))) :arg2 (p6 / properties :mod (n4 / new) :example (a6 / and :op1 (p7 / person :arg0-of (a7 / assist-01) :arg1-of (p8 / personal-02)) :op2 (a8 / amount :mod (h / huge) :quant-of (p9 / productive-03)))) :op3 (i3 / improve-01 :arg1 (a9 / and :op1 (s / speed :arg1 (s2 / system :arg0-of (o / operate-01))) :op2 (f / fix-02 :arg1 (s3 / system :arg0-of (o2 / operate-01))))))))
(c / contrast-01 :arg2 (q / question-01 :arg1 (p / place :arg1-of (i / include-91 :arg2 (p2 / place :mod (d / decimal)) :arg3 (f / few :mod (j / just))))))
(c / contrast-01 :arg2 (t / thing :arg1-of (q / question-01) :arg1-of (q2 / question-01) :arg1-of (q3 / question-01) :mod (o / only) :domain (t2 / thing :arg1-of (q4 / question-01) :arg1-of (q5 / question-01))))
(a / and :op1 (i / include-91 :arg1 (h / he) :arg2 (t / thing :arg1-of (i2 / include-91 :arg2 (t2 / thing :arg1-of (e / experience-01)) :arg3 (m / most)))) :op2 (b / bring-up-02 :arg0 (h2 / he) :arg1 (a2 / amount :mod (h3 / huge) :quant-of (e2 / experience-01))) :arg1-of (c / cause-01 :arg0 (a3 / and :op1 (d / do-02 :arg1 (e3 / everything) :prep-in (s / situation :quant (a4 / all))) :op2 (o / oppose-01 :arg1 (e4 / everything) :mod (k / kind :quant (a5 / all))))))
(s / say-01 :arg0 (p / person :name (n / name :op1 "Peter" :op2 "Szijjarto") :arg0-of (h / have-org-role-91 :arg1 (p2 / person :arg0-of (h2 / have-org-role-91 :arg2 (m / minister :mod (f / foreign)))) :arg2 (m2 / minister :mod (f2 / foreign)))) :arg1 (i / intend-01 :arg0 (c / country) :arg1 (e / erected :arg0 (c2 / country) :arg1 (p3 / part :part-of (b / border-01 :arg1 (c3 / country) :arg2 (c4 / country :name (n2 / name :op1 "Romania")))) :arg2 (b2 / border-01 :arg1 (c5 / country) :arg2 (c6 / country)) :purpose (h3 / halt-01 :arg0 (c7 / country) :arg1 (f3 / flood :poss (p4 / person :arg0-of (u / use-01 :arg1 (d / drug)))))) :mod (a / also) :time (r / ready-02 :arg1 (f4 / fence :location (b3 / border-01 :arg2 (c8 / country)))) :time (n3 / now)))
(s / support-01 :polarity - :arg0 (p / percentage-entity :value (N / N-A)) :arg1 (h / he) :degree (a / at-all))
(s / say-01 :arg0 (p / person :name (n / name :op1 "Lamb") :arg1-of (c / call-01 :arg2 (c2 / call-02 :mod (e / emergency)))) :arg1 (c3 / contrast-01 :arg1 (k / kill-01 :arg0 (h / he) :arg1 (p2 / person :arg0-of (h2 / have-rel-role-91 :arg1 (h3 / he) :arg2 (w / wife)))) :arg2 (s2 / shred :polarity - :domain (m / marry-01 :arg1 (t / they)))))
(a / and :op1 (c / conquered :arg0 (o / organization :name (n / name :op1 "Kia")) :arg1 (h / heart :part-of (p / person :arg0-of (b / buy-01 :arg1 (c2 / class :mod (m / middle) :mod (m2 / middle)))))) :op2 (d / drive-01 :arg0 (o2 / organization) :manner (g / good :degree (m3 / more)) :arg1-of (c3 / cause-01 :arg0 (a2 / and :op1 (m4 / melutasolla :arg1-of (l / low-04 :degree (m5 / more))) :op2 (v / varustelulla :arg1-of (l2 / low-04 :degree (m6 / more)))))))
(n / number :arg1-of (i / include-91 :arg2 (p / person :arg0-of (v / view-01))) :arg0-of (h / have-org-role-91 :arg1 (c / company :arg0-of (h2 / have-org-role-91 :arg1 (o / organization :name (n2 / name :op1 "Channel" :op2 "Nine")))) :arg2 (d / director)) :arg0-of (h3 / have-org-role-91 :arg1 (o2 / organization) :arg2 (d2 / director)) :arg0-of (h4 / have-org-role-91 :arg1 (o3 / organization) :arg2 (d3 / director)) :arg0-of (h5 / have-org-role-91 :arg1 (o4 / organization) :arg2 (d4 / director)) :arg0-of (h6 / have-org-role-91 :arg1 (o5 / organization) :arg2 (d5 / director)) :arg0-of (h7 / have-org-role-91 :arg1 (o6 / organization) :arg2 (d6 / director)) :arg0-of (h8 / have-org-role-91 :arg1 (o7 / organization) :arg2 (d7 / director)))
(m / multi-sentence :snt1 (t / tell-01 :arg0 (p / person :name (n / name :op1 "Prentiss") :arg0-of (h / have-rel-role-91 :arg1 (p2 / person) :arg2 (h2 / husband))) :arg1 (p3 / person :name (n2 / name :op1 "Shawn" :op2 "O?Steen") :arg0-of (h3 / have-rel-role-91 :arg1 (i / i) :arg2 (h4 / husband))) :arg2 (t2 / they) :time (b / before :op1 (n3 / now) :quant (t3 / temporal-quantity :quant (N / N-A) :unit (y / year)))) :snt2 (h5 / have-03 :arg0 (t4 / they) :arg1 (p4 / person :arg0-of (h6 / have-rel-role-91 :arg1 (p5 / person) :arg2 (d / daughter))) :time (n4 / now)))
(w / watered :arg0 (g / government-organization :arg0-of (g2 / govern-01 :arg1 (c / city))) :arg1 (t / thing :arg2-of (n / name-01 :arg1 (t2 / thing :arg2-of (n2 / name-01 :arg1 (s / street)) :mod (s2 / street))) :mod (r / radical :degree (m / more))) :location (t3 / thing :arg2-of (n3 / name-01 :arg1 (s3 / street :location (d / downtown)))) :direction (d2 / down))
(p / possible-01 :arg1 (a / and :op1 (b / black-04) :op2 (w / white) :op3 (n / nickel) :domain (l / location :name (n2 / name :op1 "Kubusta"))))
(s / stand-01 :arg1 (r / rest :part-of (w / world)) :time (d / date-entity :year (N / N-A)) :time (m / meet-03 :arg0 (b / bank :mod (c / central) :part-of (b2 / bank :mod (c2 / central))) :arg1 (a / and :op1 (t / temporal-quantity :quant (N2 / N-A) :unit (d2 / day)) :op2 (t2 / temporal-quantity :quant (N3 / N-A) :unit (d3 / day))) :purpose (m2 / make-01 :arg0 (b3 / bank) :arg1 (d4 / decide-01 :arg0 (b4 / bank) :arg1 (r2 / raise-01 :arg0 (b5 / bank) :arg1 (r3 / rate :mod (i / interest)) :arg2 (o / ordinal-entity :value 1) :time (a2 / after :op1 (n / now) :quant (n2 / nearly :op1 (t3 / temporal-quantity :quant (N4 / N-A) :unit (d5 / decade))))) :arg1-of (c3 / critical-02)))))
(w / watch-01 :arg0 (r / rest :part-of (w2 / world)) :arg1 (r2 / rest :part-of (w3 / world)) :time (a / and :op1 (m / meet-03 :arg0 (g / government-organization :name (n / name :op1 "Federal" :op2 "Reserve")) :arg1 (a2 / and :op1 (w4 / wednesday) :op2 (t / thursday)) :duration (m2 / multiple :op1 (t2 / temporal-quantity :quant (N / N-A) :unit (d / day))) :purpose (d2 / decide-01 :arg0 (g2 / government-organization) :arg1 (r3 / raise-01 :arg0 (g3 / government-organization) :arg1 (r4 / rate :mod (i / interest))))) :op2 (d3 / decide-01 :arg0 (g4 / government-organization) :time (a3 / after :op1 (n2 / now) :quant (n3 / nearly :op1 (t3 / temporal-quantity :quant (N2 / N-A) :unit (d4 / decade)))))))
(m / multi-sentence :snt1 (h / have-03 :arg0 (c / company :arg0-of (h2 / have-03 :arg1 (r / return-01 :arg1 (c2 / company) :arg4 (a / and :op1 (s / stock :mod (c3 / capital)) :op2 (s2 / stock :mod (l / low-volatility))) :arg1-of (h3 / high-02))) :arg1-of (h4 / high-02)) :arg1 (g / good :degree (m2 / more) :compared-to (c4 / company :mod (l2 / lower-quality)))) :snt2 (a2 / and :op1 (p / point :mod (p2 / percentage-entity :value (N / N-A)) :domain (a3 / average-01)) :op2 (p3 / point :mod (p4 / point :quant 3 :mod (p5 / percentage-entity :value (N2 / N-A))))))
(c / contrast-01 :arg1 (a / adopt-01 :arg0 (b / board :poss (p / person :arg0-of (h / have-org-role-91 :arg2 (g / governor :mod (v / vice))))) :arg1 (p2 / person :arg0-of (h2 / have-org-role-91 :arg2 (d / doctor))) :mod (u / unanimous)) :arg2 (g2 / great :degree (g3 / great) :domain (e / expand-01 :arg1 (e2 / event :name (n / name :op1 "N-A")))))
(p / possible-01 :arg1 (n / name :mod (h / hospital) :domain (t / thing :arg1-of (g / gift-01) :poss (h2 / he))) :beneficiary (a / area :arg0-of (l / lobby-01)) :arg1-of (p2 / possible-01))
(c / continue-01 :arg1 (l / lesson) :medium (w / wednesday))
(h / have-03 :arg0 (t / traffic :mod (a / air)) :arg1 (f / figure :poss (t2 / traffic)))
(c / contrast-01 :arg1 (a / advocate-01 :arg0 (l / league :mod (f / football) :mod (i / italian) :arg0-of (h / have-03 :arg1 (l2 / level :name (n / name :op1 (k / kompuroinut))))) :arg1 (l3 / level :name (n2 / name :op1 (k2 / kompuroinut)) :mod (f2 / football))) :arg2 (a2 / advocate-01 :arg0 (o / organization :name (n3 / name :op1 "Champions" :op2 "League")) :arg1 (s / start-01 :arg0 (o2 / organization) :arg1 (r / renovate-01 :arg0 (o3 / organization) :arg1 (p / peninsula :name (n4 / name :op1 "N-A")))) :arg1-of (s2 / strong-02)))
(h / hope-01 :arg0 (i / i) :arg1 (a / and :op1 (s / sure-02 :arg0 (i2 / i) :arg1 (t / that)) :op2 (p / possible-01 :arg1 (m / make-01 :arg0 (h2 / he) :arg1 (c / career) :compared-to (d / deserve-01 :arg0 (h3 / he))))))
(c / cause-01 :arg1 (p / possible-01 :arg1 (e / equate-01 :arg1 (r / recession-02 :mod (n / next)) :arg2 (p2 / peak-01 :arg1 (a / and :op1 (f / fall :ord (o / ordinal-entity :value 1)) :op2 (r2 / rate :mod (m / market :mod (f2 / finance)))) :time (b / before :op1 (t / then))))))
(c / contrast-01 :arg1 (c2 / character :polarity - :arg1-of (i / include-91 :arg2 (c3 / character :mod (c4 / character :polarity -))) :domain (c5 / character :quant (n / none)) :prep-in (w / work-01 :arg0 (t / they))) :arg2 (s / stood :arg1 (p / personalities :poss (t2 / they)) :arg2 (p2 / personalities :arg0 (t3 / they) :arg1 (p3 / person :arg0-of (h / have-rel-role-91 :arg1 (t4 / they) :arg2 (f / friend))) :arg1-of (c6 / clear-06))))
(h / have-concession-91 :arg1 (a / and :op1 (y / yksikielinen :arg1 (l / language :name (n / name :op1 (k / karelian)) :mod (k2 / karelian)) :time (l2 / live-01 :arg0 (n2 / netizen))) :op2 (c / change-01 :arg1 (l3 / language) :manner (d / dramatic) :location (l4 / location :name (n3 / name :op1 "North" :op2 "Karjalassakin")))) :arg2 (y2 / yksikielinen :arg1 (e / estuary) :manner (o / official)))
(h / have-concession-91 :arg1 (a / and :op1 (r / recommend-01 :arg1 (t / take-01 :arg0 (p / person :quant 1 :arg1-of (i / include-91 :arg2 (p2 / person :arg1-of (l / liberal-02 :mod (b / bilingual))))) :arg1 (s / space) :time (n / now))) :op2 (r2 / recommend-01 :arg1 (t2 / take-01 :arg0 (p3 / person) :arg1 (s2 / space) :time (a2 / and :op1 (l2 / live-01 :arg0 (p4 / person)) :op2 (c / change-01 :arg1 (p5 / person) :manner (d / drastic) :mod (e / even) :location (p6 / peninsula :name (n2 / name :op1 "N-A"))))))) :arg2 (p7 / person :quant 1 :arg1-of (i2 / include-91 :arg2 (p8 / person :arg1-of (l3 / liberal-02 :mod (b2 / bilingual))) :mod (a3 / also))))
(s / say-01 :arg0 (p / person :name (n / name :op1 "Lopez")) :arg1 (t / think-01 :polarity - :arg0 (p2 / person) :arg1 (b / bad-07 :arg1 (t2 / this) :beneficiary (h / he))))
(a / absence :domain (a2 / absence :poss (p / person :name (n / name :op1 "Sergei" :op2 "Aguero") :arg0-of (h / have-org-role-91 :arg2 (d / dull)))))
(a / and :op1 (u / upset-01 :arg0 (h / he) :degree (v / very)) :op2 (p / person :name (n / name :op1 "O" :op2 "Steen") :arg0-of (h2 / have-rel-role-91 :arg1 (h3 / he) :arg2 (d / daughter))) :op3 (p2 / person :arg0-of (h4 / have-rel-role-91 :arg1 (h5 / he) :arg2 (d2 / daughter))) :op4 (p3 / person :arg0-of (h6 / have-rel-role-91 :arg1 (h7 / he) :arg2 (d3 / daughter))))
(s / say-01 :arg0 (p / person :name (n / name :op1 "Laury")) :arg1 (c / contrast-01 :arg1 (d / decide-01 :mod (c2 / conscious) :domain (t / this)) :arg2 (i / issue-02 :mod (i2 / important) :location (h / here) :domain (t2 / this))))
(c / contrast-01 :arg1 (i / idea :domain (b / ball)) :arg2 (i2 / idea :topic (o / open-01 :arg0 (p / person :name (n / name :op1 "Moe")) :arg1 (o2 / open-01 :arg1 (t / typing) :path (p2 / person :name (n2 / name :op1 "Cook"))) :time (g / get-03 :arg1 (f / field) :arg2 (s / syöttäjä :degree (e / extra))))))
(b / believe-01 :arg0 (p / person :name (n / name :op1 "Marx")) :arg1 (w / worth :domain (l / look-01 :arg1 (i / it))) :mod (s / still))
(c / contrast-01 :arg2 (s / support-01 :arg0 (s2 / study) :arg1 (v / view-02 :arg1 (k / korkmanin :arg0 (p / person :name (n / name :op1 "Marx"))))))
(h / have-concession-91 :arg2 (b / believe-01 :arg0 (p / person :name (n / name :op1 "Marx")) :arg1 (r / recommend-01 :arg1 (f / familiarize-01 :arg1 (y / you) :arg2 (n2 / name :op1 (k / korkman))))))
(b / bring-01 :arg1 (f / future) :time (b2 / before :op1 (n / now) :quant (t / temporal-quantity :quant (N / N-A) :unit (y / year))))
(h / honoured :arg1 (c / ceremony :mod (c2 / commemoration) :time (y / yesterday)) :arg2 (p / person :arg0-of (h2 / have-org-role-91 :arg1 (m / military :name (n / name :op1 "British" :op2 "Royal" :op3 "Air" :op4 "Force")) :arg2 (p2 / person :arg0-of (p3 / pilot-01)))) :time (b / battle-01 :arg0 (p4 / person) :arg1 (o / organization :name (n2 / name :op1 "German" :op2 "Luftwaffe")) :location (t / thing :quant 1940)))
(r / respect-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (s / service :mod (m / mold)) :arg2 (p2 / person :arg0-of (p3 / pilot-01)))) :arg1 (p4 / person :arg0-of (h2 / have-org-role-91 :arg1 (f / force :mod (a / air) :poss (c / country :name (n / name :op1 "Germany"))) :arg2 (p5 / person :arg0-of (p6 / pilot-01)))) :location (a2 / against :op1 (p7 / person :quant 1940)))
(g / go-02 :arg0 (i / i) :arg4 (t / tank :quant (a / all)))
(c / contact-01 :arg0 (i / i) :arg1 (i2 / i) :path (p / product :name (n / name :op1 "Twitter")))
(c / contrast-01 :arg1 (d / do-02 :arg0 (c2 / couple) :arg1 (m / much :degree (t / too)) :time (p / past)) :arg2 (p2 / play-02 :arg0 (p3 / person :name (n / name :op1 "Olga") :ord (o / ordinal-entity :value 1) :arg0-of (h / have-org-role-91 :arg1 (p4 / person :name (n2 / name :op1 "Tuukka")))) :arg1 (p5 / person) :time (n3 / now)))
(p / predict-01 :arg0 (p2 / police))
(s / sound-01 :arg1 (l / léveillé) :arg2 (c / carts :arg1 (a / alleyway) :degree (s2 / so) :compared-to (t / true) :mod (t2 / too)))
(o / optimat :mod (n / new) :time (b / before :op1 (e / end-01 :arg1 (y / year) :beneficiary (c / country :poss (w / we)))))
(s / say-01 :arg0 (r / report-01))
(a / and :op1 (k / know-02 :arg0 (o / organization :name (n / name :op1 "Moody") :arg1-of (k2 / know-02 :arg2 (n2 / name :op1 (i / invincible) :op2 (c / caviarin) :op3 (c2 / caviarin))) :mod (g / good :degree (m / most)) :arg1-of (t / train-01 :arg2 (n3 / name :op1 (c3 / caviarin) :op2 (c4 / caviarin)))) :arg1 (m2 / manage-01 :arg1 (r / rule :topic (r2 / rule :name (n4 / name :op1 (' / ''))))) :time (a2 / after :op1 (o2 / or :op1 (m3 / mud) :op2 (h / haude :mod (c5 / clay))) :arg1-of (c6 / contrary-01 :arg2 (r3 / rule)))))
(s / say-01 :polarity - :arg0 (p / person :name (n / name :op1 "Cowgill")) :arg1 (l / likely-01 :arg1 (e / exceed-01 :arg0 (p2 / power :mod (p3 / purchase-01)) :arg1 (m / monetary-quantity :arg2-of (c / cost-01) :arg1-of (h / high-02 :degree (m2 / more))))))
(a / and :op1 (w / way :quant (N / N-A)) :op2 (b / business :arg1-of (s / succeed-01)))
(m / multi-sentence :snt1 (p / point-out-02 :arg0 (s / state :location (c / city :name (n / name :op1 "Richmond") :arg0-of (h / have-org-role-91 :arg1 (o / organization :name (n2 / name :op1 "Federal" :op2 "Reserve" :op3 "Bank") :part-of (g / government-organization :arg0-of (g2 / govern-01 :arg1 (c2 / country :name (n3 / name :op1 "N-A")))) :arg2 (p2 / president :mod (v / vice)))))) :arg1 (m2 / month :mod (t / this))) :snt2 (p3 / pointed :arg0 (b / bank :mod (c3 / central)) :arg1 (u / unrest :mod (m3 / market :mod (f / finance)) :arg0-of (c4 / contribute-01 :arg2 (s2 / separate-02 :arg1 (b2 / bank) :arg2 (f2 / factor :mod (e / economy :mod (b3 / basic))))) :time (p4 / past))))
(c / contrast-01 :arg1 (n / nothing :mod (n2 / nettiä) :mod (o / of-course)) :arg2 (d / declare-02 :arg0 (s / suicide :mod (p / politics)) :arg1 (m / man :mod (s2 / small)) :arg1-of (o2 / open-04)))
(i / include-91 :arg1 (s / series :quant 1 :arg1-of (c / come-01 :arg4 (m / mind) :time (t / try-01 :arg0 (i2 / i) :arg1 (o / offer-01 :arg0 (i3 / i) :arg1 (s2 / survive-01 :arg0 (i4 / i)))))) :arg2 (f / friend))
(m / multi-sentence :snt1 (c / contrast-01 :arg2 (a / and :op1 (s / sit-01 :polarity - :arg1 (h / he) :arg2 (t / there) :manner (w / way) :duration (t2 / temporal-quantity :quant (N / N-A) :unit (h2 / hour))) :op2 (s2 / sit-01 :arg1 (h3 / he) :arg2 (t3 / there) :duration (t4 / temporal-quantity :quant (N2 / N-A) :unit (h4 / hour))))) :snt2 (s3 / say-01 :arg0 (p / person :name (n / name :op1 "Alexander") :arg0-of (e / exhibit-01)) :arg1 (b / bloknotille :mod (p2 / pisarevski))))
(t / threaten-01 :arg0 (t2 / tehy) :arg1 (a / and :op1 (r / resignations :degree (m / mass)) :op2 (n / nurse :location (t3 / thing :quant 2007))))
(a / amr-unknown :topic (a2 / amr-unknown))
(c / confirm-01 :arg0 (g / government-organization :name (n / name :op1 "White" :op2 "House")) :arg1 (v / visit-01 :arg0 (g2 / government-organization) :arg1 (c2 / city :name (n2 / name :op1 "Washington"))))
(a / and :op1 (d / debate-01 :mod (g / good) :domain (h / hold-01 :arg1 (s / stand :poss (c / child)))) :op2 (l / listen-01 :arg1 (t / thing :arg1-of (a2 / ask-01 :arg0 (h2 / he))) :manner (c2 / careful)))
(a / and :op1 (q / question-01 :arg1 (a2 / and :op1 (p / person :arg0-of (h / have-org-role-91 :arg2 (m / minister :mod (p2 / prime)))) :op2 (p3 / person :arg0-of (h2 / have-org-role-91 :arg2 (m2 / minister :mod (p4 / prime)))) :op3 (p5 / person :arg0-of (h3 / have-org-role-91 :arg2 (m3 / minister :mod (p6 / prime)))) :op4 (p7 / person :arg0-of (h4 / have-org-role-91 :arg2 (m4 / minister :mod (p8 / prime)))) :op5 (p9 / person :arg0-of (h5 / have-org-role-91 :arg2 (m5 / minister :mod (p10 / prime)))) :op6 (p11 / person :arg0-of (h6 / have-org-role-91 :arg2 (m6 / minister :mod (p12 / prime)))) :op6 (p13 / person :arg0-of (h7 / have-org-role-91 :arg2 (m7 / minister :mod (p14 / prime)))) :op6 (p15 / person :arg0-of (h8 / have-org-role-91 :arg2 (m8 / member :mod (o / other)))) :op6 (p16 / person :arg0-of (h9 / have-org-role-91 :arg2 (m9 / member :mod (o2 / other)))) :op7 (p17 / person :arg0-of (h10 / have-org-role-91 :arg2 (m10 / member :mod (o3 / other)))))) :op2 (h11 / have-concession-91 :arg1 (c / criticize-01 :arg0 (c2 / critic) :arg1 (s / survey-01 :arg1 (t / temporal-quantity :quant (N / N-A) :unit (h12 / hour)) :arg1-of (r / require-01 :arg0 (r2 / reform-01)))) :arg2 (c3 / criticize-01 :arg0 (c4 / critic) :arg1 (s2 / survey-01))))
(a / and :op1 (a2 / actor :arg0 (p / picture :mod (m / motion)) :arg1 (- / -rrb- :mod (r / right))) :op2 (t / tough-02 :arg1 (-2 / -rrb- :mod (r2 / right)) :time (b / before :op1 (n / now) :duration (f / few :op1 (t2 / temporal-quantity :quant (N / N-A) :unit (y / year))))) :medium (p2 / picture-01 :arg1 (m2 / motion)))
(h / have-03 :arg0 (p / person :mod (c / country :name (n / name :op1 "N-A"))) :arg1 (a / area :mod (p2 / parking) :poss (p3 / person)) :arg1-of (c2 / cause-01 :arg0 (s / share-01 :arg0 (p4 / person) :arg1 (a2 / and :op1 (s2 / shop) :op2 (r / restaurant) :mod (o / other)))))
(f / friendship :mod (m / meet-03 :mod (t / this)) :domain (f2 / friendship))
(c / contrast-01 :arg2 (s / say-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg2 (p2 / person :arg1-of (e / expert-01)))) :arg1 (s2 / signal-07 :arg0 (s3 / sell-01 :arg1 (t / tasoittumisesta)) :arg1 (r / rise-01 :arg1 (p3 / percentage-entity :value (N / N-A) :mod (o / only)) :location (v / vuosineljännekselle :ord (o2 / ordinal-entity :value 1)) :location (v2 / vuosineljännekselle :ord (o3 / ordinal-entity :value 1)))) :time (n / now)))
(d / day :mod (r / race) :domain (i / it))
(p / prosecute-01 :arg0 (p2 / person :quant 32 :mod (o / other) :arg0-of (h / have-org-role-91 :arg1 (c / customs) :arg2 (m / member)) :arg2-of (i / include-91 :arg1 (p3 / person :arg0-of (h2 / have-org-role-91 :arg1 (c2 / customs) :arg2 (m2 / member)))) :arg2-of (i2 / include-91 :arg1 (p4 / person :arg0-of (h3 / have-org-role-91 :arg1 (c3 / customs) :arg2 (m3 / member)))) :arg2-of (i3 / include-91 :arg1 (p5 / person :arg0-of (h4 / have-org-role-91 :arg1 (c4 / customs) :arg2 (m4 / member)))) :arg0-of (h5 / have-org-role-91 :arg1 (c5 / customs) :arg2 (m5 / member))) :arg1 (a / and :op1 (s / simputtamisesta :mod (v / violent)) :op2 (i4 / intrigues :arg2-of (c6 / criminal-03))) :mod (a2 / also))
(u / understand-01 :polarity - :arg0 (i / i) :arg1 (i2 / idea :topic (a / and :op1 (p / produce-01 :arg0 (c / company :name (n / name :op1 "BBC")) :arg1 (p2 / programmes :arg1-of (p3 / produce-01 :arg0 (c2 / company) :arg1-of (p4 / possible-01 :polarity -)))) :op2 (s / say-01 :arg0 (p5 / person :name (n2 / name :op1 "Johnson")) :arg1 (h / have-org-role-91 :arg0 (p6 / person) :arg1 (o / organization :name (n3 / name :op1 "House" :op2 "of" :op3 "Lords" :op4 "Communications" :op5 "Committee")) :arg2 (i3 / investigate-01 :arg1 (i4 / investigate-01 :arg0 (c3 / company) :arg1 (f / future :poss (c4 / company)))))))))
(m / mean-01 :arg1 (m2 / mean-01 :arg2 (a / and :op1 (b / book) :op2 (l / life :arg1-of (b2 / black-04)))) :mod (s / still))
(s / send-01 :arg1 (m / message) :arg2 (w / we))
(p / possible-01 :arg1 (i / influence-01 :arg0 (y / you) :arg1 (p2 / person :arg0-of (p3 / play-01))) :degree (a / amr-unknown))
(c / contrast-01 :arg1 (r / regard-01 :arg0 (r2 / rule :arg1-of (g / general-02)) :arg1 (p / person :name (n / name :op1 "Sanders")) :arg2 (r3 / rule :arg1-of (g2 / general-02))) :arg2 (o / opine-01 :polarity - :arg0 (p2 / person) :arg1 (o2 / opine-01 :arg0 (p3 / person) :arg1 (t / thing :arg1-of (o3 / opine-01 :arg0 (s / she))) :mod (j / just))))
(i / include-91 :li (1 / 1-1) :arg1 (s / statistic :name (n / name :op1 (t / tigersissä) :op2 (n2 / norriksen))) :arg2 (s2 / statistic :quant 4) :time (a / after :op1 (r / replace-01 :arg0 (p / person :name (n3 / name :op1 "David" :op2 "Price")) :arg1 (p2 / person) :time (d / date-entity :month 7 :day 30))))
(s / say-01 :arg0 (h / he) :arg1 (a / and :op1 (d / do-02 :arg0 (y / you) :arg1 (j / job :poss (i / i)) :mod (j2 / just)) :op2 (h2 / help-01 :arg0 (h3 / he) :arg1 (p / person))) :medium (b / book))
(p / possible-01 :arg1 (s / stand-01 :arg1 (m / majority :poss (p2 / person :arg1-of (i / include-91 :arg2 (p3 / person :arg0-of (h / have-org-role-91 :arg1 (o / organization :name (n / name :op1 "Independence" :op2 "Party") :part-of (o2 / organization :name (n2 / name :op1 "Independence" :op2 "Party"))) :arg3 (m2 / majority))) :arg3 (m3 / majority)))) :arg2 (a / and :op1 (p4 / paint :mod (w / war-01)) :op2 (e / enthusiasm :poss (p5 / political-party :name (n3 / name :op1 "Conservative" :op2 "Party")) :location (o3 / outside :op1 (n4 / nationalist :mod (f / fierce))))) :manner (c / certain) :arg1-of (o4 / opine-01 :arg0 (t / thing :arg1-of (o5 / opine-01) :mod (t2 / this)))) :mod (w2 / well))
(a / and :op1 (a2 / available-02 :arg2 (v / video :topic (a3 / and :op1 (d / demand-01) :op2 (d2 / dvd)))) :op2 (a4 / and :op1 (d3 / dvd) :op2 (d4 / dvd) :op3 (c / cinemas :location (c2 / company :name (n / name :op1 "N-A")))))
(n / need-01 :polarity - :arg1 (t / take-on-09 :arg1 (f / force-01 :arg1 (p / publication :name (n2 / name :op1 "N-A")) :arg2 (m / members :arg1 (l / language :name (n3 / name :op1 "N-A")) :arg2 (p2 / person :arg0-of (h / have-org-role-91 :arg1 (t2 / team) :arg2 (m2 / member)))))))
(q / question-01 :arg0 (p / person :name (n / name :op1 "Jeremy")))
(k / keep-04 :arg1 (a / and :op1 (p / person :name (n / name :op1 "Clinton")) :op2 (p2 / person :name (n2 / name :op1 "Biden" :op2 "Sanders")) :op3 (p3 / person :arg0-of (l / lead-02 :arg1-of (s / strong-02))) :op4 (p4 / person :arg0-of (l2 / lead-02) :arg1-of (s2 / strong-02))) :arg2 (m / most))
(p / possible-01 :arg1 (o / order-01 :arg1 (f / food :arg1-of (o2 / order-02 :arg0 (p2 / person :mod (c / country :name (n / name :op1 "N-A")) :arg0-of (h / have-rel-role-91 :arg1 (p3 / person :mod (c2 / country :name (n2 / name :op1 "N-A"))) :arg2 (w / wife))) :arg2 (w2 / wife))) :arg2 (a / and :op1 (b / bikini) :op2 (w3 / wear-01 :arg1 (a2 / apron)) :mod (j / just))))
(h / have-03 :arg0 (p / person :name (n / name :op1 "Toivola")) :arg1 (b / bulk :arg0 (p2 / person) :arg1 (m / make-01 :arg0 (p3 / person) :arg1 (p4 / person :name (n2 / name :op1 "Pekka" :op2 "Rautakallio")))))
(w / work-01 :arg0 (p / person :name (n / name :op1 "-" :op2 "timo" :op3 "T.A." :op4 "mikkonen")) :arg1 (w2 / work-01 :arg0 (o / organization :name (n2 / name :op1 "National" :op2 "Audiovisual" :op3 "Institute") :arg1-of (i / include-91 :arg2 (p2 / person :arg0-of (r / represent-01))) :arg0-of (g / go-02 :arg4 (p3 / pick-01 :arg0 (p4 / person) :arg1 (a / and :op1 (f / film) :op2 (m / material :mod (o2 / other))) :source (a2 / and :op1 (f2 / film) :op2 (m2 / material :mod (o3 / other))))))) :time (s / summer))
(m / man :arg1-of (i / include-91 :arg2 (p / person :arg2-of (s / staff-01)) :arg3 (m2 / majority)) :time (t / today))
(f / fear-01 :polarity - :mod (f2 / fear-01) :concession (e / even-if :op1 (t / tight :arg1 (t2 / time))))
(r / romantic :mode (i / interrogative) :polarity - :arg1 (i2 / it) :condition (c / change-01 :arg0 (p / person :arg0-of (h / have-rel-role-91 :arg2 (c2 / comrade) :time (f / future))) :arg1 (d / dormitory :arg1-of (s / same-01)) :arg2 (y / you)))
(d / depart-01 :arg0 (t / team :arg0-of (p / produce-01) :mod (w / whole)) :arg2 (p2 / person :name (n / name :op1 "Heinola")) :time (n2 / now))
(a / and :op1 (s / see-01 :arg0 (i / i) :arg1 (t / they) :manner (t2 / together)) :op2 (c / chemistry :domain (t3 / they)))
(b / be-located-at-91 :arg1 (p / person :name (n / name :op1 "François" :op2 "Holland" :op3 "Ella") :mod (c / country :name (n2 / name :op1 "N-A"))) :arg2 (o / or :op1 (r / reelect-01) :op2 (r2 / replace-01)) :location (i / in-front-of :op1 2017))
(a / and :op1 (t / tough-02 :arg1 (t2 / try-02) :degree (m / more) :compared-to (t3 / time :mod (a2 / any))) :op2 (r / rugged :arg1 (t4 / try-02) :degree (m2 / more) :compared-to (t5 / time :mod (a3 / any) :time (s / since :op1 (d / depression :quant (1 / 1930s))))) :arg1-of (r2 / resemble-01))
(r / recommend-01 :arg1 (o / or :op1 (e / expected :arg0 (p / person :arg0-of (u / use-01)) :arg1 (o2 / ohimeno :arg1-of (b / bad-07 :degree (m / most)))) :op2 (t / try-01 :arg0 (p2 / person) :arg1 (u2 / update-01 :arg0 (p3 / person) :arg1 (p4 / person))) :mod (e2 / either)) :purpose (b2 / bypass :arg0 (p5 / person) :arg1 (t2 / this)))
(s / say-01 :arg0 (p / police) :arg1 (c / call-03 :arg0 (t / thing :arg1-of (c2 / call-03 :arg0 (l / lamb) :arg2 (p2 / person :arg0-of (h / have-rel-role-91 :arg1 (l2 / lamb) :arg2 (r / relative))))) :arg1 (g / go-02 :polarity - :arg0 (p3 / person) :arg4 (j / jail)) :arg2 (p4 / person)))
(b / begin-01 :arg1 (o / organization :name (n / name :op1 "Ulan" :op2 "Bator") :arg0-of (h / have-org-role-91 :arg1 (o2 / organization :name (n2 / name :op1 "OSCE" :op2 "Parliamentary" :op3 "Assembly")) :arg2 (c / capital))) :time (s / session :mod (a / autumn) :poss (o3 / organization :name (n3 / name :op1 "OSCE" :op2 "Parliamentary" :op3 "Assembly") :location-of (g / give-01 :arg0 (p / person :name (n4 / name :op1 "Myshkin")) :arg1 (c2 / comment-01 :arg1-of (e / extensive-03)) :arg2 (m / meet-03 :location (c3 / city :name (n5 / name :op1 "Helsinki")))))))
(e / expect-01 :arg0 (c / coach) :arg1 (m / make-18 :arg0 (c2 / compete-01 :mod (d / decent)) :arg1 (a / award :name (n / name :op1 "N-A"))))
(o / or :op2 (w / want-01 :mode (i / interrogative) :arg0 (y / you) :arg1 (f / find-out-03 :arg0 (y2 / you) :arg1 (t / thing :arg1-of (t2 / talk-01 :arg0 (t3 / they))))))
(a / attack-01 :arg0 (c / city :name (n / name :op1 "Melbourne")) :arg1 (p / person :name (n2 / name :op1 "Craig" :op2 "Bellamy") :arg0-of (r / rival-01 :arg1 (c2 / country))))
(a / and :op1 (r / reduce-01 :arg0 (t / they) :arg1 (s / sense-01 :arg0 (t2 / they) :arg1 (h / hunger-01 :arg0 (t3 / they)))) :op2 (l / limit-01 :arg0 (t4 / they) :arg1 (w / wave-04 :arg1 (f / food))))
(s / support-01 :arg0 (j / jury :mod (g / grand) :location (l / location :name (n / name :op1 "Monroe" :op2 "County"))))
(a / advise-01 :arg0 (p / police) :arg1 (p2 / police) :arg2 (a2 / avoid-01 :arg0 (p3 / police) :arg1 (c / car :arg1-of (p4 / private-03) :location (c2 / city :name (n / name :op1 "Helsinki") :location (d / downtown)))))
(m / message-01 :arg0 (c / city :name (n / name :op1 "Helsinki")) :arg1 (d / decide-01 :arg0 (b / board :poss (p / person :arg0-of (h / have-org-role-91 :arg2 (g / governor)))) :arg1 (m2 / make-01 :arg0 (b2 / board) :arg1 (b3 / building :mod (s / school)) :arg2 (s2 / solve-01 :arg0 (b4 / board) :arg1 (t / thing :arg2-of (s3 / solve-01 :arg1 (d2 / department))) :duration (t2 / temporary))) :time (a / already)) :medium (n2 / news))
(p / possible-01 :arg1 (u / use-01 :arg1 (a / and :op1 (t / text) :op2 (k / kuviasi)) :arg2 (c / company :name (n / name :op1 "BBC"))) :prep-in (c2 / case :quant (s / some)))
(i / infer-01 :arg1 (s / seem-01 :arg1 (i2 / immigrate-01 :arg0 (p / person :name (n / name :op1 "Donald" :op2 "Trump")) :mod (t / too :mode (e / expressive)))))
(a / attack-01 :arg0 (p / person :arg0-of (s / study-01) :mod (u / ulkomaalais)) :location (s2 / saturday :location (l / location :name (n / name :op1 "Kiteellä" :op2 "North" :op3 "Karelia") :time (m / morning))))
(s / start-01 :arg0 (i / i) :arg1 (a / and :op1 (i2 / inventoimaan :arg1 (i3 / i)) :op2 (s2 / see-01 :arg0 (i4 / i) :arg1 (l / location :location-of (d / drop-05 :arg1 (g / good))))))
(t / tell-01 :arg0 (h / he) :arg1 (a / and :op1 (t2 / throw-01 :arg0 (h2 / he) :arg1 (o / overboard :mod (p / passenger) :quant (a2 / all))) :op2 (o2 / order-02 :arg0 (h3 / he) :arg1 (s / swim-01 :arg0 (h4 / he) :arg2 (i / island :mod (m / military :name (n / name :op1 "N-A"))))) :time (s2 / spotted :arg0 (p2 / police) :arg1 (h5 / he) :time (o3 / once))) :arg2 (p3 / paper))
(e / estimate-01 :arg0 (l / location :name (n / name :op1 "Palola")) :arg1 (c / capable-01 :polarity - :arg1 (p / person :arg0-of (h / have-org-role-91 :arg1 (c2 / criminal-organization :name (n2 / name :op1 "N-A") :mod (b / business)) :arg2 (-2 / -lrb-))) :arg2 (t / talk-01 :arg0 (p2 / person))))
(s / suggest-01 :arg0 (p / person :name (n / name :op1 "Van" :op2 "Gaal")) :arg1 (m / mistake-02 :arg0 (p2 / person :arg0-of (h / have-org-role-91 :arg1 (c / country :name (n2 / name :op1 "N-A")) :arg2 (o / official)))))
(c / change-01 :arg0 (n / nematodes :mod (t / tiny)) :arg1 (d / direction) :time (a / as-soon-as :op1 (h / hits :arg0 (i / it) :arg1 (i2 / impulses :arg1-of (h2 / high-02 :degree (t2 / too) :location (e / ear :mod (h3 / human)))))))
(c / contrast-01 :arg2 (f / favor-01 :arg0 (p / person :arg0-of (f2 / favor-01 :arg1 (p2 / person :name (n / name :op1 "Hamilton")))) :arg1 (s / say-01 :arg0 (p3 / person) :arg1 (f3 / favor-01 :arg0 (p4 / person) :arg1 (b / book :poss (p5 / person))))))
(s / say-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (o / organization :name (n / name :op1 "Peterson" :op2 "Institute" :op3 "for" :op4 "International" :op5 "Economics" :op6 "Institute")) :arg2 (c / chairman))) :arg1 (w / want-01 :arg0 (p2 / person :name (n2 / name :op1 "Posen") :arg0-of (h2 / have-org-role-91 :arg1 (o2 / organization) :arg2 (c2 / chairman))) :arg1 (s2 / see-01 :arg0 (n3 / no-one) :arg1 (s3 / situation :location-of (i / increase-01 :arg1 (r / rate :mod (i2 / interest)))))) :arg1-of (s4 / say-01 :arg0 (p3 / person :name (n4 / name :op1 "Posen") :arg0-of (h3 / have-org-role-91 :arg1 (o3 / organization) :arg2 (c3 / chairman)))))
(a / and :op1 (s / shave-01 :arg0 (p / person :name (n / name :op1 "Roddy")) :arg2 (f / face :part-of (p2 / person)) :time (p3 / previous)) :op2 (d / dyed :arg0 (p4 / person) :arg1 (h / hair :part-of (p5 / person) :arg1-of (b / black-05))) :time (p6 / previous))
(c / contrast-01 :arg1 (a / ambitious :domain (w / we)) :arg2 (h / haaveksi :polarity - :arg0 (w2 / we)))
(e / effect :arg1-of (s / see-01 :arg1-of (q / quick-02 :degree (p / pretty))) :location (f / forthcoming))
(t / talk-01 :arg0 (p / person :name (n / name :op1 "Wayne")) :arg1 (r / rugby :mod (e / exciting)))
(s / show-01 :arg0 (r / research-01 :mod (n / new)) :arg1 (r2 / receive-01 :arg0 (a / and :op1 (p / person :arg0-of (b / benefit-01 :arg1 (t / thing :arg1-of (l / lose-02 :arg0 (p2 / person))))) :op2 (p3 / person :arg0-of (h / have-03 :arg1 (s2 / surgery-01 :arg1 (p4 / person))))) :arg1 (s3 / surgery-01 :arg1 (p5 / person) :arg2 (l2 / lose-02 :arg1 (w / weight))) :time (a2 / after :op1 (n2 / now) :quant (a3 / at-least :op1 (t2 / temporal-quantity :quant (N / N-A) :unit (y / year))))))
(p / possible-01 :arg1 (m / mean-01 :arg1 (t / this) :arg2 (h / hell)) :arg2 (s / someone :arg0-of (t2 / try-01 :arg1 (r / relax :arg0 (s2 / someone)))))
(l / likely-01 :arg1 (m / make-02 :arg0 (b / blobs :arg3-of (m2 / mix-01 :arg3-of (m3 / mix-01 :arg3-of (m4 / mix-01)))) :arg1 (p / pretend-01 :arg0 (p2 / person) :arg1 (p3 / pregnant :domain (p4 / person) :time (k / knock :arg0 (y / you) :arg1 (d / door :poss (i / i)))) :mod (j / just))))
(a / and :op1 (a2 / and :op1 (j / jumped :arg1 (a3 / and :op1 (t / traders) :op2 (r / recruiters))) :op2 (b / brand :example (p / person :arg0-of (b2 / borough :arg1 (f / future :poss (p2 / person :arg0-of (m / manufacture-01 :arg1 (i / ice)) :arg0-of (m2 / manufacture-01 :arg1 (b3 / building :name (n / name :op1 "N-A"))))))))) :op2 (s / sell-01 :arg0 (p3 / person :arg0-of (o / own-01 :arg1 (s2 / shop))) :arg1 (a4 / and :op1 (p4 / person :arg0-of (o2 / own-01 :arg1 (s3 / shop))) :op2 (p5 / person :arg0-of (o3 / own-01 :arg1 (s4 / shop)))) :arg2 (c / customer :mod (l / loyalty) :mod (c2 / country :name (n2 / name :op1 "N-A")))))
(s / say-01 :arg0 (p / person :name (n / name :op1 "Damien" :op2 "Collins") :arg0-of (h / have-org-role-91 :arg1 (o / organization :name (n2 / name :op1 "Voice") :mod (c / conservative)) :arg2 (m / mp))) :arg1 (c2 / compete-01 :arg0 (a / and :op1 (p2 / person :arg0-of (h2 / have-org-role-91 :arg1 (o2 / organization) :arg2 (m2 / mp))) :op2 (p3 / person :arg0-of (h3 / have-org-role-91 :arg1 (o3 / organization) :arg2 (m3 / mp))) :op3 (p4 / person :arg0-of (h4 / have-org-role-91 :arg1 (c3 / company :name (n3 / name :op1 "BBC")) :arg2 (m4 / mp))) :op4 (p5 / person :arg0-of (h5 / have-org-role-91 :arg1 (o4 / organization) :arg2 (m5 / mp))) :op5 (p6 / person :arg0-of (h6 / have-org-role-91 :arg1 (o5 / organization) :arg2 (m6 / mp)))) :arg1 (m7 / monetary-quantity :quant 22 :unit (p7 / pound))))
(t / think-01 :arg0 (b / boy :arg1-of (a / arrest-01 :location (s / school :location (s2 / state :name (n / name :op1 "Texas"))))))
(c / contrast-01 :arg2 (a / and :op1 (e / equalise :arg1 (i / it) :time (n / now)) :op2 (p / possible-01 :arg1 (c2 / calculated :arg1 (- / -rrb- :mod (g / grow-01))))))
(r / report-01 :arg0 (p / person :name (n / name :op1 "Yasmeen" :op2 "Abu")))
(m / multi-sentence :snt1 (s / side :mod (p / person :arg0-of (c / consume-01))) :snt2 (b / be-located-at-91 :li 3300 :arg2 (t / temporal-quantity :quant (N / N-A) :unit (y / year))))
(c / call-03 :arg0 (h / he) :arg1 (t / thing :arg1-of (t2 / tax-01) :mod (s / such)) :mod (r / really) :mod (a / all))
(s / say-01 :arg0 (p / person :name (n / name :op1 "Ahtisaari")) :arg1 (c / contrast-01 :arg1 (d / determine-01 :arg0 (i / interim) :arg1 (m / message :poss (p2 / person :name (n2 / name :op1 "Tshurkin")) :topic (a / and :op1 (c2 / country :name (n3 / name :op1 "United" :op2 "States")) :op2 (c3 / country :name (n4 / name :op1 "Britain")) :op3 (c4 / country :name (n5 / name :op1 "France"))))) :arg2 (n6 / nothing :mod (n7 / nothing))))
(c / catch-up-04 :arg1 (w / we) :arg2 (t / tv) :time (d / date-entity :season (N / N-A)) :arg1-of (c2 / cause-01 :arg0 (w2 / write-01 :arg0 (p / person :name (n / name :op1 "Saku") :arg0-of (h / have-org-role-91 :arg2 (s / senator))) :arg1 (s2 / stick :poss (p2 / person)))) :time (d2 / date-entity :season (N2 / N-A)))
(w / write-01 :arg0 (i / i) :arg1 (p / person :name (n / name :op1 "Saku" :op2 "Timonen") :arg0-of (h / have-org-role-91 :arg2 (b / bloggari))) :time (d / date-entity :season (N / N-A)) :location (a / around :op1 (t / television)) :time (d2 / date-entity :season (N2 / N-A)) :frequency (r / rate-entity-91 :arg3 (t2 / temporal-quantity :quant (N3 / N-A) :unit (d3 / day))))
(r / recommend-01 :arg1 (m / make-02 :polarity - :arg0 (y / you) :arg1 (o / or :op1 (s / sleep-01 :arg0 (p / person)) :op2 (s2 / study-01 :polarity - :arg0 (p2 / person)))))
(c / contrast-01)
(c / cause-01 :arg0 (b / blairilaisempi :arg0 (p / person :name (n / name :op1 "Miliband")) :arg1 (p2 / person) :time (c2 / come-12 :arg1 (c3 / combat-01 :arg0 (p3 / person) :arg1 (p4 / person :name (n2 / name :op1 "Cameron") :mod (u / uudelleenneuvottelutempun))))) :arg1 (a / agree-01 :arg0 (p5 / person :name (n3 / name :op1 "Bair")) :arg1 (p6 / principle :mod (o / organization :name (n4 / name :op1 "EU")) :arg1-of (r / reject-01 :arg0 (a2 / and :op1 (p7 / person :mod (c4 / country)) :op2 (p8 / person :arg0-of (v / vote-01 :arg1 (d / dutch)))) :arg2 (o2 / out-06 :arg1 (p9 / person) :arg2 (s / situation))))) :mod (i / in-fact))
(c / come-01 :arg1 (m / man :mod (5 / 50-year-old)) :direction (f / forward) :destination (p / person :name (n / name :op1 "Sheppartonissa") :arg0-of (h / have-org-role-91 :arg1 (p2 / police) :arg2 (s / self))) :direction (f2 / forward))
(s / sell-01 :arg0 (c / company) :arg1 (s2 / share :quant (m / monetary-quantity :quant 125 :unit (m2 / mark :mod (r / renminbi)))) :arg1-of (m3 / mean-01 :arg2 (r2 / reduce-01 :arg0 (c2 / company) :arg1 (r3 / reduce-01 :arg1 (t / thing :arg2-of (p / price-01 :arg1 (c3 / close-01 :arg1 (t2 / tuesday)))) :arg3 (p2 / percentage-entity :value (N / N-A))))))
(m / multi-sentence :snt1 (c / cause-01 :arg0 (h / have-03 :arg0 (p / person :mod (c2 / country :name (n / name :op1 "N-A"))) :arg1 (r / right-05 :arg1 (p2 / person) :arg2 (g / game :mod (h2 / home)) :destination (o / or :op1 (l / location :name (n2 / name :op1 "Queensland") :location (n3 / north)) :op2 (c3 / city-district :name (n4 / name :op1 "N-A") :location (n5 / north)))) :time (a / already))) :snt2 (s / sell-01 :arg1 (t / ticket :mod (f / final) :mod (f2 / final)) :time (m2 / morning :mod (n6 / next)) :time (m3 / morning :mod (n7 / next))))
(k / know-01 :polarity - :arg0 (h / he) :arg1 (t / thing :manner-of (l / look-01 :arg0 (m / military :mod (s / serious)) :arg1 (w / way :mod (a / alternative) :instrument-of (a2 / announce-01 :arg0 (g / government-organization :arg0-of (g2 / govern-01)) :arg1 (b / blackmail :mod (i / industry)))))) :mod (a3 / also))
(g / give-01 :polarity - :arg0 (p / press) :arg1 (h / he :arg0-of (f / forgive :arg1 (i / i) :time (e / ever :polarity -))) :arg2 (h2 / he))
(s / say-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg2 (m / minister :mod (p2 / prime)))) :arg1 (s2 / speak-01 :arg0 (p3 / person :arg0-of (h2 / have-org-role-91 :arg2 (m2 / minister :mod (p4 / prime)))) :arg1-of (d / direct-02) :time (m3 / multiple :op1 (t / temporal-quantity :quant (N / N-A) :unit (d2 / decade)))))
(s / say-01 :arg0 (p / person :name (n / name :op1 "Janne" :op2 "Viljamaa") :mod (s2 / state :name (n2 / name :op1 "N-A") :mod (s3 / social))) :arg1 (t / teach-01 :arg0 (p2 / person) :arg1 (h / help-01 :arg0 (p3 / person) :degree (m / more)) :arg2 (p4 / person)))
(h / have-concession-91 :arg1 (i / improve-01 :arg1 (g / game) :arg1-of (c / cause-01 :arg0 (n / need-01 :arg1 (a / against :op1 (p / place :arg2-of (i2 / include-91 :arg1 (a2 / and :op1 (o / organization :name (n2 / name :op1 "Real" :op2 "Madrid")) :op2 (e / equality)) :arg1-of (s / strong-02))))) :mod (a3 / also))) :arg2 (i3 / improve-01 :arg1 (g2 / game) :location (f / final :mod (g3 / good :degree (m / most)) :location (r / round :ord (o2 / ordinal-entity :value 4))) :mod (a4 / also)))
(m / multi-sentence :snt1 (d / down-to-earth :domain (p / person :name (n / name :op1 "Sarah")) :degree (r / really)) :snt2 (n2 / nice-01 :arg1 (h / have-03 :arg0 (p2 / person :name (n3 / name :op1 "Markoski")) :arg1 (t / thing :arg1-of (a / add-01 :arg0 (p3 / person))))))
(l / last-01 :arg1 (s / score-01 :arg2 (o / over :op1 (t / temporal-quantity :quant (N / N-A) :unit (m / minute)))) :arg2 (t2 / temporal-quantity :quant (N2 / N-A) :unit (m2 / minute) :mod (j / just)) :time (b / before :op1 (e / end-01 :arg1 (t3 / track :poss (o2 / organization :name (n / name :op1 "Juventus" :op2 "Alvaro"))))))
FAILED_TO_PARSE#Not concept after open bracket.
(c / carry-out-03 :arg1 (l / lamb) :manner (e / educate-01 :mod (s / science) :location (s2 / spring)))
(a / ask-02 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (o / organization :name (n / name :op1 "Delta" :op2 "State" :op3 "University")))) :arg1 (l / leave-11 :arg0 (p2 / person) :arg1 (o2 / organization) :arg1-of (s / sick-05)) :arg2 (s2 / say-01 :arg0 (p3 / person) :arg1 (h2 / have-03 :arg0 (p4 / person) :arg1 (p5 / problem :topic (h3 / health) :mod (k / kind :mod (s3 / some))))) :time (p6 / previous))
(b / believe-01 :arg0 (i / i) :arg1 (w / wrong-04 :arg1 (e / execute-01 :arg1 (h / he))))
(o / or :op2 (t / tell-01 :mode (i / interrogative) :arg0 (i2 / it) :arg2 (a / at-all)))
(o / off :arg1 (p / person :name (n / name :op1 "Victor" :op2 "Martinez") :quant (b / between :op1 0 :op2 21)) :time (p2 / place-01 :arg1 (r / race) :arg2 (r2 / race)))
(p / parkettivalmistaja :domain (k / kährs) :condition (f / finnish :arg1 (l / location :name (n / name :op1 "Karelia") :mod (f2 / finnish)) :arg2 (u / upofloorin :quant 2012)))
(a / and :op1 (c / come-01 :arg1 (h / he) :arg4 (f / form :mod (t / top))) :op2 (r / run-02 :arg0 (h2 / he) :ord (o / ordinal-entity :value 2 :range (t2 / time :mod (g / good)))))
(c / contrast-01 :arg2 (s / sight :arg1 (p / problem :quant (s2 / some))))
(m / multi-sentence :snt1 (c / contrast-01 :arg1 (t / true :domain (t2 / this) :mod (a / all)) :arg2 (d / describe-01 :arg0 (s / song :mod (n / next) :arg1-of (d2 / describe-01 :arg0 (p / person :name (n2 / name :op1 "Cameron")) :arg1-of (s2 / suppose-01))) :arg1 (v / version :mod (v2 / version :quant 2012)) :arg2 (t3 / text :quant 2012 :mod (f / film) :mod (o / original)) :arg1-of (i / instead-of-91 :arg2 (a2 / add-02 :arg1 (t4 / text :mod (o2 / original) :mod (o3 / original)) :arg2 (c2 / character :mod (n3 / new)))))) :snt2 (a3 / and :op1 (c3 / character :mod (n4 / new)) :op2 (d3 / detail-01)))
(c / contrast-01 :arg1 (o / or :op1 (c2 / coincidence) :op2 (n / not :polarity -)) :arg2 (t / take-01 :mode (i / imperative) :arg0 (y / you) :arg1 (m / momentum :mod (p / palolan) :mod (a / away) :source (s / seisauttajilta :name (n2 / name :op1 (f / finnish) :op2 (s2 / seisauttajilta) :op3 (s3 / sd) :op4 (s4 / sd) :op5 (-2 / -rrb-) :op6 (-3 / -rrb-) :op7 (-4 / -rrb-))))))
(d / drop-01 :arg1 (p / profit-01 :arg0 (c / country :name (n / name :op1 "N-A"))) :time (y / year :mod (f / finance)))
(a / and :op1 (p / profit-01 :arg0 (p2 / person :arg0-of (o / operate-01 :location (w / world-region :name (n / name :op1 "N-A"))) :arg0-of (o2 / operate-01)) :mod (o3 / operate-01)) :op2 (c / calculates :arg0 (p3 / person)))
(m / multi-sentence :snt1 (c / contrast-01 :arg1 (' / '' :arg0 (a / and :op1 (m2 / maoists) :op2 (t / trotskilaiset) :op3 (l / libertarian :mod (o / other))) :arg1 (c2 / capitalism :quant (a2 / all))) :arg2 (m3 / more :mod (e / even) :prep-to (o2 / other :mod (e2 / each)))) :snt2 ('2 / '' :mode (e3 / expressive)))
(t / thing :arg0-of (d / design-01 :arg1 (i / interior)) :mod (t2 / this))
(b / be-located-at-91 :arg1 (h / he) :arg2 (a / and :op1 (c / church :poss (o / organization :name (n / name :op1 "Protestant"))) :op2 (c2 / capital :location (c3 / country :name (n2 / name :op1 "Uganda"))) :op3 (c4 / capital :location-of (h2 / help-01 :arg0 (c5 / center :mod (s / small)) :arg1 (r / refugee :mod (c6 / child :arg0-of (h3 / have-rel-role-91 :arg1 (r2 / refugee) :arg2 (c7 / child))))))) :mod (r3 / real))
(p / possible-01 :arg1 (f / find-01 :arg1 (p2 / part :part-of (p3 / person :arg1-of (m / miss-01))) :mod (a / also) :time (d / date :mod (l / late :degree (m2 / more))) :time (a2 / apply-01 :arg0 (p4 / person) :arg1 (f2 / favor-01 :arg0 (p5 / person) :arg1 (s / state :mod (a3 / another) :arg0-of (h / have-org-role-91 :arg2 (m3 / member)))))) :arg1-of (r / resemble-01))
(b / blowing :arg1 (w / winds :arg1-of (c / change-01)) :time (m / morning :mod (t / this)) :mod (j / just :polarity -))
(a / and :op1 (b / back :prep-to (p / public :mod (g / general-02)) :time (b2 / before :op1 (l / lavoille :arg0 (p2 / public)))) :op2 (e / exciting :polarity - :arg1 (b3 / break :arg1-of (l2 / long-03)) :arg2 (i / i) :mod (r / really)))
(p / punish-01 :polarity - :arg0 (p2 / person :name (n / name :op1 "Nicola" :op2 "Rizzoli")) :arg1 (p3 / person :arg0-of (p4 / play-01) :mod (c / country)))
(e / explain-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (c / continent :name (n / name :op1 "N-A")) :arg2 (f / friend :mod (d / diplomat)))) :arg1 (e2 / explain-01 :arg0 (s / state :quant (s2 / some) :arg0-of (f2 / fault-01 :polarity - :arg1 (s3 / state) :arg2 (a / agenda :mod (s4 / self-centered) :poss (c2 / country :name (n2 / name :op1 "Britain")))) :arg0-of (f3 / full :degree (f4 / full) :domain (a2 / and :op1 (c3 / cause :arg0-of (c4 / cause-01 :arg1 (c5 / cause :arg0-of (c6 / cause-01)))) :op2 (c7 / change-01 :arg1 (c8 / contract-02 :arg0 (m / military :name (n3 / name :op1 "N-A"))))))) :arg2 (p2 / part :mod (p3 / part :degree (m2 / most)) :arg1-of (w / want-01 :polarity - :arg0 (c9 / country)))) :time (s5 / since :op1 (d2 / deep-02 :arg1 (o / organization) :degree (s6 / so))) :time (r / recent))
(c / comment-01 :arg0 (p / person :name (n / name :op1 "Lauri" :op2 "Wood") :arg0-of (h / have-org-role-91 :arg2 (p2 / president-in-office :mod (c2 / central)))) :arg3 (i / issue-02 :arg0 (c3 / concise :arg1 (p3 / product :name (n2 / name :op1 "Twitter")))))
(w / want-01 :arg0 (i / i) :arg1 (h / have-part-91 :arg1 (s / season :mod (s2 / season)) :arg2 (s3 / season :mod (s4 / season))) :arg0-of (c / cause-01 :arg1 (p / possible-01 :arg1 (a / ad :arg0 (h2 / he) :arg1 (s5 / sponsor-01 :arg0 (h3 / he))))))
(s / say-01 :arg0 (p / person :name (n / name :op1 "Siisiäinen")) :arg1 (r / raise-01 :arg0 (i / it) :arg1 (g / government-organization :arg0-of (g2 / govern-01)) :location (i2 / in-front-of :op1 (h / hand :part-of (t / they))) :condition (d / do-02 :polarity - :arg0 (i3 / it) :arg1 (s2 / so))))
(s / say-01 :arg0 (p / person :name (n / name :op1 "Siisiäinen")) :arg1 (r / raise-01 :arg0 (i / it) :arg1 (f / front :poss (y / you)) :condition (d / do-02 :polarity - :arg0 (i2 / it) :arg1 (s2 / so))))
(s / support-01 :arg0 (c / country :name (n / name :op1 "Russia")) :arg1 (o / organization :name (n2 / name :op1 "Al" :op2 "al-Assad")) :time (p / period :mod (w / war)) :mod (o2 / official))
(s / service :mod (p / public))
(s / say-01 :arg0 (p / person :name (n / name :op1 "Luukkainen")) :arg1 (s2 / serious :quant (n2 / none)))
(a / and :op1 (d / discuss-01 :arg1 (b / board :arg1-of (c / connect-01 :arg2 (d2 / directors)))) :op2 (h / have-org-role-91 :arg0 (h2 / he) :arg2 (m / member) :time (t / time :mod (a2 / all))))
(p / possible-01 :arg1 (s / scrap-01 :arg1 (i / it) :time (n / night :mod (l / last))))
(s / say-01 :arg0 (a / and :op1 (p / person :name (n / name :op1 "Hilary" :op2 "Benn")) :op2 (p2 / person :name (n2 / name :op1 "Benn")) :op3 (p3 / person :name (n3 / name :op1 "Benn")) :op4 (f / fan :polarity -)) :arg1 (i / idea :arg1-of (b / bad-07) :domain (a2 / and :op1 (p4 / person :arg0-of (h / have-org-role-91 :arg2 (m / minister :mod (r / radio)))) :op2 (p5 / person :arg0-of (h2 / have-org-role-91 :arg2 (m2 / minister :mod (f2 / finance)))) :op3 (p6 / person :arg0-of (h3 / have-org-role-91 :arg2 (m3 / minister :mod (f3 / finance)))) :op4 (p7 / person :arg0-of (h4 / have-org-role-91 :arg2 (m4 / minister :mod (f4 / finance)))) :op5 (p8 / person :arg0-of (h5 / have-org-role-91 :arg2 (m5 / minister :mod (f5 / finance))))) :time (w / week :mod (t / this))))
(c / contrast-01 :arg2 (a / and :op1 (t / take-01 :arg0 (g / group :example (a2 / and :op1 (p / pac :mod (s / super) :poss (p2 / person :name (n / name :op1 "Jeb" :op2 "Bush"))) :op2 (o / organization :mod (e / economy) :mod (p3 / political-party :name (n2 / name :op1 "Conservative"))))) :arg1 (n3 / note :mod (o2 / organization :name (n4 / name :op1 "Trump")))) :op2 (s2 / start-01 :arg0 (g2 / group) :arg1 (u / use-01 :arg0 (g3 / group) :arg1 (m / money) :arg2 (d / decide-01 :arg0 (o3 / organization) :arg1 (u2 / use-01))))))
(p / problem :polarity - :topic (t / this) :domain (a / and :op1 (t2 / team :consist-of (g / guy :mod (p2 / person :name (n / name :op1 "Collyn"))) :source (l / location :name (n2 / name :op1 "Durham"))) :op2 (p3 / person :name (n3 / name :op1 "Ben" :op2 "Stokes") :arg0-of (h / have-org-role-91 :arg1 (g2 / guy) :arg3 (l2 / lead-02 :arg0 (g3 / guy) :arg1 (g4 / guy)))) :op3 (r / rest :part-of (g5 / guy)) :op4 (r2 / rest)))
(s / say-01 :arg0 (l / list-01 :arg1 (o / organization :name (n / name :op1 "London" :op2 "Stock" :op3 "Exchange"))) :arg1 (s2 / sell-01 :arg0 (o2 / organization :name (n2 / name :op1 "Glencore")) :arg1 (s3 / share :mod (n3 / new) :mod (a / approximately :op1 (m / monetary-quantity :quant 1.6 :unit (d / dollar :mod (c / country))))) :arg2 (d2 / debt :poss (o3 / organization))) :medium (f / franchise :arg1-of (l2 / list-01 :arg2 (o4 / organization))))
(s / say-01 :arg0 (p / person :name (n / name :op1 "Prentiss") :arg0-of (h / have-org-role-91 :arg1 (p2 / police))) :arg1 (h2 / have-03 :arg0 (l / lamb) :arg1 (o / or :op1 (p3 / past :mod (v / violent)) :op2 (r / record :mod (c / criminal-03)))))
(c / contrast-01 :arg2 (e / enough :polarity - :domain (p / prevent-01 :arg1 (a / appear-01 :polarity - :arg1 (h / he) :location (c2 / court)))) :arg1-of (w / warn-01 :arg0 (h2 / he)))
(c / cause-01 :arg0 (p / possible-01 :arg1 (a / and :op1 (c2 / concentrated :arg1 (p2 / person :arg0-of (c3 / care-03 :duration (d / day))) :location (h / home :mod (c4 / certain))) :op2 (n / nursery :polarity - :arg1 (a2 / activity-06 :arg0 (p3 / person)) :arg2 (a3 / activity-06 :arg0 (p4 / person))))) :arg1 (p5 / protest-01 :arg0 (u / union :mod (t / trade-01))))
(c / contrast-01 :arg1 (e / exist-01 :polarity - :arg1 (s / statistic :mod (g / grade :mod (m / minor)) :arg1-of (m2 / miss-01)) :time (y / year :mod (t / this))) :arg2 (o / obligate-01 :arg1 (a / and :op1 (n / number :quant-of (p / person :arg0-of (s2 / serve-02))) :op2 (n2 / number :quant-of (p2 / person :arg0-of (s3 / serve-02)))) :arg2 (s4 / significant-02) :arg1-of (c2 / cause-01 :arg0 (l / likely-01 :arg1 (a2 / affect-01 :arg1 (n3 / number :quant-of (p3 / person :arg1-of (m3 / miss-01))) :mod (a3 / also) :arg1-of (s5 / say-01 :arg0 (h / he)) :arg1-of (s6 / significant-02) :mod (a4 / also))))))
(m / meet-03 :arg0 (l / lamb) :arg1 (a / and :op1 (p / person :name (n / name :op1 "Lamb")) :op2 (p2 / person :name (n2 / name :op1 "Abigail"))) :time (b / before :op1 (n3 / now) :quant (t / temporal-quantity :quant (N / N-A) :unit (y / year))))
(p / publish-01 :arg0 (m / magazine :name (n / name :op1 "N-A") :arg1-of (p2 / publish-01 :arg0 (b / book :medium (t / tuesday)))) :arg1 (e / excerpts))
(r / report-01 :arg0 (c / center :mod (c2 / control-01 :arg1 (s / self)) :location (a / across :op1 (c3 / country :name (n / name :op1 "United" :op2 "States")))) :arg1 (i / increase-01 :arg1 (c4 / contrast-01 :arg1 (i2 / increase-01 :arg1 (c5 / contrast-01 :arg1 (i3 / increase-01 :arg1 (h / hand :part-of (p / person :arg0-of (h2 / have-rel-role-91 :arg2 (c6 / child))))) :arg2 (p2 / person :arg0-of (h3 / have-rel-role-91 :arg1 (p3 / person) :arg2 (c7 / child))) :time (a2 / after :op1 (n2 / now) :quant (t / temporal-quantity :quant (N / N-A) :unit (y / year))) :time (a3 / after :op1 (a4 / age-01 :arg1 (p4 / person) :arg2 (t2 / temporal-quantity :quant (N2 / N-A) :unit (y2 / year))))) :arg2 (p5 / person :arg0-of (h4 / have-rel-role-91 :arg1 (c8 / country :name (n3 / name :op1 "Georgia")) :arg2 (c9 / child)))))))
(s / show-01 :arg0 (s2 / survey-01) :arg1 (g / get-01 :arg0 (p / person :name (n / name :op1 "Trump")) :arg1 (s3 / support-01 :arg1 (p2 / person) :quant (m / majority)) :arg3 (c / case :quant (a / all :mod (a2 / almost)))) :time (b / begin-01 :arg1 (d / date-entity :dayperiod (N / N-A))))
(s / stop-01 :arg0 (c / country :mod (w / whole)) :arg1 (a / and :op1 (r / role :quant 28 :mod (s2 / small)) :op2 (r2 / route :quant (n / number))))
(r / realize-01 :arg0 (y / you) :arg1 (a / and :op1 (b / be-located-at-91 :arg1 (t / thing :quant (l / lot)) :arg2 (l2 / lot)) :op2 (w / want-01 :arg0 (y2 / you) :arg1 (s / spend-02 :arg0 (y3 / you) :arg1 (t2 / time :poss (y4 / you))))))
(a / and :op2 (c / cause-01 :arg1 (b / believe-01 :arg0 (i / i) :arg1 (d / die-01 :arg1 (h / he)))))
(e / equal-01 :arg1 (i / index :mod (m / monetary-quantity :arg2-of (p / price-01 :arg1 (t / thing :arg2-of (p2 / price-01))))) :arg2 (p3 / product-of :op1 0.2 :op2 (p4 / percentage-entity :value (N / N-A))) :location (c / country :name (n / name :op1 "Finland")))
(p / person :arg0-of (p2 / play-01) :mod (c / canadiens) :time (b / before :op1 (h / help-01 :arg0 (p3 / person) :arg1 (s / significant-02) :arg2 (h2 / hospital :arg1-of (l / local-02)))))
(f / find-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (o / organization :name (n / name :op1 "Apple")))) :arg1 (p2 / program :quant (n2 / number) :arg1-of (u / use-01 :arg0 (a / and :op1 (c / call-02 :arg0 (o2 / organization :name (n3 / name :op1 "FaceTime"))) :op2 (c2 / call-02 :arg0 (o3 / organization)) :op3 (h2 / health :arg0 (n4 / newspaper)) :op4 (h3 / health) :op5 (h4 / health) :op6 (h5 / health) :op7 (h6 / health)))) :arg2 (m / mind))
(a / and :op1 (c / criticize-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg2 (p2 / president :mod (v / vice)))) :arg1 (c2 / criticize-01)) :op2 (s / speculate-01 :arg0 (p3 / person) :arg1 (t / thing :arg1-of (c3 / come-01))))
(m / multi-sentence :snt1 (w / wonderful-03 :arg1 (t / this)) :snt2 (c / comment-01 :arg0 (p / person :name (n / name :op1 "kunniatauluaan" :op2 "Loiri")) :arg3 (g / good)))
(c / change-01 :arg1 (t / time :mod (t2 / this)) :time (t3 / time :mod (t4 / this)))
(t / thing :arg1-of (d / dream-01 :arg0 (o / organization :name (n / name :op1 "Zillow") :part-of (w / website :location (e / estate) :mod (r / real)))) :domain (h / house) :arg1-of (d2 / dream-01 :arg0 (p / person :arg0-of (h2 / have-org-role-91 :arg1 (w2 / website :mod (e2 / estate) :mod (r2 / real)) :arg3 (a / apprentice-01 :arg0 (p2 / person))))) :arg0-of (s / suffice-01 :arg1 (c / car :quant 12 :arg2-of (i / include-91 :arg1 (c2 / car :quant 8 :arg1-of (s2 / suffice-01))))))
(c / call-02 :arg0 (r / report-01 :arg0 (o / organization :name (n / name :op1 "UN"))) :arg1 (r2 / recommend-01 :arg1 (i / investigate-01 :arg1 (t / thing :arg1-of (r3 / report-01 :arg0 (o2 / organization))) :manner (p / proper) :time (m / month :mod (l / last)) :location (f / force :arg1-of (a / arm-01)) :mod (e / especially))))
(m / manner :arg1 (p / person :name (n / name :op1 "Antti" :op2 "Palola") :arg0-of (h / have-org-role-91 :arg1 (p2 / person :name (n2 / name :op1 "Antti" :op2 "Palola") :arg0-of (h2 / have-org-role-91 :arg1 (o / organization) :arg2 (c / chairman))) :arg2 (c2 / chairman))) :arg2 (m2 / manner :mod (c3 / conciliatory)) :manner (c4 / conciliatory))
(s / shame-01 :arg1 (a / and :op1 (i / individual :arg1-of (s2 / strong-02) :time (s3 / season :mod (l / last))) :op2 (i2 / individual :arg0-of (r / remembered :arg1 (h / he) :time (b / before :op1 (s4 / start-01 :arg1 (s5 / season)))))) :mod (b2 / big :degree (m / most)) :mod (b3 / big :degree (m2 / most)) :domain (s6 / season :mod (t / this)) :arg1-of (s7 / strong-02) :time (s8 / season :mod (l2 / last) :mod (t2 / this)))
(c / change-01 :arg0 (p / person :name (n / name :op1 "Roope" :op2 "Salminen")) :arg1 (s / style :mod (u / url-entity :value (t / tuntemattominta))))
(a / and :op1 (b / begin-01 :arg0 (a2 / and :op1 (p / person :arg0-of (h / have-org-role-91 :arg1 (o / organization :name (n / name :op1 "SAK")) :arg2 (h2 / head :mod (v / vice)))) :op2 (h3 / head :arg1-of (s / sharp-02) :mod (o2 / other))) :arg1 (f / force-01 :arg0 (a3 / and) :arg2 (a4 / away :arg1-of (s2 / straight-04)))) :op2 (s3 / stand-01 :arg1 (c / country) :arg2 (f2 / friday) :arg1-of (c2 / cause-01 :arg0 (p2 / person :arg0-of (w / work-01) :arg1-of (b2 / broad-02) :arg0-of (w2 / work-01)))))
(a / and :op1 (h / head-02 :arg0 (p / person :quant 11 :mod (n / nation) :arg1-of (i / include-91 :arg2 (p2 / person :quant 10 :mod (n2 / nation)))) :arg1 (p3 / person :name (n3 / name :op1 "Donald" :op2 "Trump")) :time (d / date-entity :century (N / N-A))) :op2 (b / begin-01 :arg0 (s / some) :arg1 (t / think-01 :arg0 (s2 / some) :arg1 (m / mean-01 :arg1 (t2 / this) :arg2 (p4 / possible-01 :arg1 (t3 / thing :arg2-of (n4 / name-01 :arg1 (p5 / property :poss (k / king)))))) :manner (s3 / serious))))
(p / possible-01 :arg1 (t / test-01 :arg0 (s / skill :poss (h / he) :mod (c / country :name (n / name :op1 "N-A"))) :arg1 (c2 / candidate :quant (m / more-than :op1 16))))
(p / probable :domain (t / think-01 :polarity - :arg0 (t2 / they) :arg1 (g / game :mod (i / important))) :time (b / before :op1 (n / now) :quant (t3 / temporal-quantity :quant (N / N-A) :unit (w / week))))
(e / expect-01 :arg1 (d / discuss-01 :arg0 (a / and :op1 (p / person :name (n / name :op1 "Obama")) :op2 (p2 / person :name (n2 / name :op1 "Xin"))) :arg1 (i / issue-02 :quant (n3 / number) :mod (c / controversy) :arg2-of (i2 / include-01 :arg1 (c2 / concern-01 :arg0 (s / spy-01 :arg0 (a2 / and :op1 (s2 / spy-01 :arg0 (c3 / country :name (n4 / name :op1 "China")) :mod (c4 / cyber) :arg1-of (a3 / allege-01)) :op2 (r / rigour :location (w / water :arg2-of (d2 / dispute-01))))))))))
(a / and :op1 (p / pass-01 :arg0 (s / start-01 :arg1 (r / recession-02)) :arg1 (r2 / rate :mod (i / interest :mod (r3 / rapid)) :poss (r4 / recession-02)) :duration (t / time :ord (o / ordinal-entity :value 1))) :op2 (l / last-01 :arg1 (r5 / rate) :arg2 (l2 / less-than :op1 (t2 / temporal-quantity :quant (12 / 1/2) :unit (y / year)))))
(h / have-concession-91 :arg1 (p / possible-01 :arg1 (d / do-02 :arg1 (t / turmoil :time (r / recent) :location (m / market :mod (f / finance) :mod (g / globe))) :arg2 (g2 / guard-01 :arg0 (p2 / person :arg0-of (h2 / have-org-role-91 :arg1 (b / bank :mod (c / central) :part-of (b2 / bank)) :arg2 (o / official))) :arg1 (p3 / person :arg0-of (h3 / have-org-role-91 :arg1 (b3 / bank :mod (c2 / central) :part-of (b4 / bank)) :arg2 (o2 / official))) :degree (m2 / more) :time (a / already)) :manner (r2 / regard-01 :arg1 (i / increase-01 :arg1 (v / volatility)) :arg2 (i2 / increase-01 :arg1 (i3 / increase-01 :arg1 (r3 / rate :arg1-of (f2 / fund-01 :arg0 (f3 / federal))) :arg3 (p4 / percentage-entity :value (N / N-A) :mod (e / even))))))) :arg2 (s / show-01 :arg0 (d2 / data) :arg1 (g3 / grow-01 :arg1 (e2 / economy) :manner (s2 / steady))))
(m / multi-sentence :snt1 (c / contrast-01 :arg1 (e / effective-04 :arg0 (h / he) :degree (m2 / more :degree (m3 / much))) :arg2 (e2 / effective-04 :arg0 (a / and :op1 (r / refer-01 :arg0 (t / they) :arg1 (c2 / colleagues :arg0 (t2 / they))) :op2 (k / kierrepotkun :arg0 (p / person :name (n / name :op1 "Ibrahimovicin")) :arg1 (p2 / person :name (n2 / name :op1 "Di" :op2 "Maria")) :time (a2 / around :op1 (t3 / temporal-quantity :quant (N / N-A) :unit (m4 / minute)))) :mod (j / just)))) :snt1 (c3 / contrast-01 :arg2 (e3 / effective-04 :arg0 (h2 / he) :degree (m5 / more :degree (m6 / much)))))
(c / choose-01 :arg0 (p / person :name (n / name :op1 "Corby")) :arg1 (l / lead-02 :arg0 (p2 / person) :arg1 (l2 / line :mod (l3 / labour))))
(a / ask-02 :arg0 (p / police :mod (c / country :name (n / name :op1 "Finland"))) :arg1 (h / help-01 :arg0 (r / refugee :arg1-of (r2 / register-02) :mod (c2 / country)) :arg2 (t / truck :location (b / background))))
(s / show-01 :arg0 (s2 / study) :arg1 (d / decrease-01 :arg1 (b / bmi :arg1 (p / person) :arg1-of (a / average-04)) :arg2 (p2 / product-of :op1 31 :op2 (e / end-01 :arg1 (y / year :ord (o / ordinal-entity :value 5))))))
(h / have-concession-91 :arg1 (c / clear-06 :polarity - :arg1 (c2 / clear-06 :arg1 (c3 / contribute-01 :mode (i / interrogative) :arg0 (t / try-02) :arg2 (t2 / transact-01 :mod (s / short)) :degree (v / very)))))
(a / and :op1 (s / sell-01 :arg0 (m / mikkonen :name (n / name :op1 (n2 / nlna)) :mod (n3 / nlna)) :arg1 (i / internet)) :op2 (l / look-01 :mode (i2 / imperative) :arg0 (y / you) :arg1 (p / picture :topic (d / device))) :op3 (l2 / look-01 :mode (i3 / imperative) :arg0 (y2 / you) :arg1 (p2 / picture :topic (d2 / device))))
(a / and :op1 (r / relate-01 :polarity - :arg1 (i / issue-02 :mod (t / this))) :op2 (r2 / relate-01 :polarity - :arg1 (i2 / issue-02) :arg2 (i3 / issue-02 :mod (t2 / this))) :prep-in (d / debate-01 :mod (d2 / democracy)))
(a / and :op1 (d / debate-01 :arg1 (d2 / democracy)) :op2 (h / hope-01 :arg0 (i / i) :arg1 (r / relate-01 :polarity - :arg1 (t / thing :mod (t2 / this)))))
(c / contrast-01 :arg1 (b / begin-01 :arg0 (r / recession-02 :mod (n / next)) :arg1 (i / it) :manner (r2 / rapid)) :arg2 (b2 / begin-01 :arg0 (r3 / recession-02 :mod (n2 / next)) :arg1 (r4 / rate :mod (i2 / interest)) :time (a / after :op1 (r5 / raise-01 :arg0 (a2 / and :op1 (b3 / bank :mod (c2 / central) :poss (c3 / country)) :op2 (g / government-organization :name (n3 / name :op1 "Fed"))) :arg1 (r6 / rate :mod (i3 / interest)) :time (t / time :ord (o / ordinal-entity :value 1) :arg1-of (l / long-03))))))
(m / multi-sentence :snt1 (a / and :op1 (s / sequel :arg0 (f / film) :arg1 (s2 / sequel :mod (s3 / sky) :mod (i / iron))) :op2 (r / reach-01 :arg0 (f2 / film) :arg1 (r2 / race :arg1-of (c / come-01)))) :snt2 (r3 / reach-01 :arg0 (f3 / film :mod (e / expensive :degree (m2 / most)) :mod (c2 / country :name (n / name :op1 "Finland"))) :arg1 (m3 / monetary-quantity :quant 17 :unit (e2 / euro)) :location (c3 / country)))
(s / say-01 :arg0 (h / he) :arg1 (a / and :op1 (g / get-03 :arg1 (i / it) :arg2 (s2 / sick-05 :arg1 (i2 / it))) :op2 (w / want-01 :arg0 (h2 / he) :arg1 (l / look-01 :arg0 (h3 / he) :arg1 (p / picture :topic (a2 / and :op1 (r / rape-01) :op2 (m / murder-01))))) :time (a3 / after :op1 (d / drink-01 :arg0 (h4 / he) :arg1 (i3 / it)))))
(a / and :op1 (h / have-03 :arg0 (i / i) :arg1 (s / support-01 :arg1 (f / family :arg1-of (h2 / have-org-role-91 :arg0 (i2 / i) :arg2 (m / member))))) :op2 (p / possible-01 :arg1 (t / turn-01 :arg0 (i3 / i) :arg1 (i4 / i) :direction (b / back) :prep-on (t2 / this))))
(c / change-01 :arg1 (s / service :mod (r / rail) :mod (p / passenger) :location (b / between :op1 (e / eagle))) :time (d / date-entity :month 3))
(s / say-01 :arg0 (r / rule) :arg1 (g / go-01 :arg1 (m / money) :arg4 (p / person)))
(i / intend-01 :arg0 (p / person :name (n / name :op1 "N-A") :arg0-of (h / have-org-role-91 :arg2 (h2 / hp))) :arg1 (r / relocate :arg0 (p2 / person) :arg1 (o / operation :poss (p3 / person)) :manner (w / way :mod (s / such)) :arg1-of (c / cause-01 :arg0 (c2 / cost-01 :arg1 (p4 / person :quant 60 :arg1-of (i2 / include-91 :arg2 (p5 / person :arg0-of (w2 / work-01)))) :arg2 (l / low-04)))))
(a / and :op1 (r / raise-01 :arg0 (o / organization :name (n / name :op1 "First" :op2 "the" :op3 "Fed")) :arg1 (r2 / rate :mod (i / interest))) :op2 (r3 / raised :arg0 (b / burst :mod (f / finance)) :arg1 (p / piece :mod (f2 / finance) :mod (l / large :degree (m / more :mod (e / even)))) :time (s / soon)))
(c / charmer :domain (h / he) :time (t / time))
(s / say-01 :arg0 (p / person :name (n / name :op1 "Souter")) :arg1 (a / approach-02 :arg0 (h / he) :arg1 (o / organization :name (n2 / name :op1 "Ministry" :op2 "of" :op3 "Transport")) :time (a2 / already)))
(t / threaten-01 :arg0 (p / political-party :name (n / name :op1 "Labour" :op2 "Party")) :arg1 (a / and :op1 (s / security :mod (n2 / nation)) :op2 (s2 / security :mod (e / economy)) :op3 (s3 / security :poss (f / family :arg1-of (h / have-org-role-91 :arg0 (w / we) :arg2 (m / member))))) :arg2 (p2 / person :arg0-of (h2 / have-org-role-91 :arg1 (b / bank :poss (w2 / we)) :arg2 (m2 / minister :mod (p3 / prime)))))
(c / come-01 :arg1 (p / person :name (n / name :op1 "Oletta")) :time (m / moment :mod (r / right)))
(c / correct-02 :arg1 (a / assumption))
(c / challenge-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (p2 / political-party :name (n / name :op1 "Social" :op2 "Democratic" :op3 "Party")) :arg2 (c2 / chairman))) :arg1 (p3 / person :name (n2 / name :op1 "Antti" :op2 "Rinne") :arg0-of (h2 / have-org-role-91 :arg1 (p4 / political-party) :arg2 (c3 / chairman))) :arg2 (e / elect-01 :arg1-of (i / include-91 :arg2 (e2 / elect-01) :arg3 (t / temporal-quantity :quant (1 / 1/2) :unit (y / year)))))
(a / agree-01 :arg0 (p / person :name (n / name :op1 "Lauri" :op2 "Lylyn") :arg0-of (h / have-org-role-91 :arg1 (g / government-organization :arg0-of (g2 / govern-01)) :arg2 (- / -rsb-))) :arg1 (s / stand-01 :arg1 (p2 / person) :arg2 (s2 / stand :poss (p3 / person) :location (c / country :location (f / friday)))) :degree (v / very) :mod (d / difficult :degree (v2 / very)))
(a / and :op1 (b / begin-01 :arg0 (p / person :name (n / name :op1 "Hughes")) :arg1 (r / reading :arg1 (p2 / person))) :op2 (p3 / pass-01 :arg0 (p4 / person) :arg1 (j / juoksuttoman :ord (o / ordinal-entity :value 3))) :time (a2 / after :op1 (r2 / replace-01 :arg0 (p5 / person :name (n2 / name :op1 "A.J." :op2 "Achter") :arg0-of (h / have-org-role-91 :arg2 (s / successor))) :arg1 (p6 / person))))
(c / cool-04 :arg1 (i / i) :time (t / then) :arg1-of (c2 / cause-01 :arg0 (c3 / cool-04 :arg1 (i2 / i))))
(c / contrast-01 :arg1 (l / lose-02 :arg0 (a / and :op1 (o / organization :name (n / name :op1 "Aldi")) :op2 (p / person :name (n2 / name :op1 "Coles"))) :arg1 (s / share :mod (m / market)) :arg2 (a2 / and :op1 (o2 / organization) :op2 (p2 / person :name (n3 / name :op1 "Coles") :location (e / east :part-of (c2 / country))) :mod (m2 / market))) :arg2 (f / find-02 :arg0 (r / research-01 :arg0 (o3 / organization :name (n4 / name :op1 "Roy" :op2 "Morgan")) :time (r2 / recent)) :arg1 (l2 / loyalty :arg1 (c3 / customer :poss (o4 / organization :name (n5 / name :op1 "IGAT"))) :degree (m3 / most))) :time (t / time :arg1-of (s2 / same-01)))
(s / say-01 :arg0 (a / authority) :arg1 (b / be-located-at-91 :arg1 (p / person :quant 158) :arg2 (h / hospital) :mod (s2 / still)))
FAILED_TO_PARSE#Not concept after open bracket.
(s / see-01 :arg0 (e / evening) :arg1 (a / and :op1 (m / miss-01 :arg1 (t / thing :arg1-of (m2 / miss-01)) :mod (e2 / exact)) :op2 (s2 / say-01 :polarity - :arg1 (t2 / thing :arg1-of (s3 / say-01 :arg0 (o / organization :name (n / name :op1 "University" :op2 "of" :op3 "Jyväskylä" :op4 "Heikki" :op5 "Kuutti")))))))
(p / possible-01 :arg1 (t / talk-01 :arg0 (p2 / person :location (h / here)) :arg1 (r / return-01 :arg1 (p3 / person) :arg4 (r2 / rangers)) :mod (j / just)))
(p / possible-01 :arg1 (r / recite-01 :arg0 (p2 / person :arg0-of (h / have-org-role-91 :arg2 (p3 / president))) :arg1 (p4 / person :arg0-of (r2 / report-01))) :time (a / allow-01 :polarity - :arg0 (c / country :name (n / name :op1 "Finland")) :arg1 (l / list :mod (s / sanction-02 :arg0 (o / organization :name (n2 / name :op1 "European" :op2 "Union")) :arg1 (p5 / politician :mod (c2 / country)) :mod (s2 / sanction-02)))))
(a / allow-01 :polarity - :arg0 (c / country :name (n / name :op1 "Finland")) :arg1 (a2 / and :op1 (s / sanction-02 :arg0 (o / organization :name (n2 / name :op1 "European" :op2 "Union")) :arg1 (p / politician :arg1-of (d / displace-01) :mod (c2 / country :name (n3 / name :op1 "Finland")))) :op2 (a3 / arrive-01 :arg1 (a4 / arrive-01 :arg1 (m / meet-03 :arg0 (p2 / person :arg0-of (h / have-org-role-91 :arg2 (p3 / president))) :arg1-of (c3 / continue-01))))) :time (t / then))
(a / and :op1 (c / cafes :arg1 (m / market) :time (a2 / already)) :op2 (c2 / cafes :arg1 (c3 / cafes :name (n / name :op1 (r / rabbit) :op2 (c4 / cafes) :op3 (c5 / cafes) :op4 (c6 / cafes) :op5 (h / halikahvila))) :time (a3 / already)))
(m / make-01 :arg0 (i / i) :arg1 (b / bid-03 :arg0 (i2 / i)) :time (y / year :mod (l / last) :mod (l2 / last)))
(r / recommend-01 :arg1 (p / prevent-01 :arg0 (i / it) :arg1 (s / see-01 :arg0 (p2 / person :arg0-of (h / have-org-role-91 :arg1 (p3 / police) :arg2 (t / thermal))) :arg1 (h2 / hide-01 :arg0 (p4 / person)))))
(u / use-01 :polarity - :arg0 (i / i) :arg1 (d / detail :mod (t / this) :quant (a / all)) :mod (a2 / again))
(s / say-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg2 (p2 / president))) :arg1 (c / care-03 :arg0 (c2 / care-03 :arg1 (s2 / situation :mod (r / refugee))) :arg1 (p3 / person :arg0-of (p4 / participate-01) :quant (a / all))))
(d / debt :mod (b / big :degree (m / most)) :topic (h / history :mod (e / economy)) :mod (b2 / big :degree (m2 / most)))
(c / contrast-01 :arg1 (t / talk-01 :arg0 (p / person :name (n / name :op1 "Erkki" :op2 "Ikonen") :arg0-of (h / have-org-role-91 :arg2 (d / director :mod (t2 / technical)))) :arg1 (i / invest-01 :arg1 (m / monetary-quantity :quant 150 :unit (e / euro)) :arg2 (i2 / invest-01 :mod (e2 / euro))) :mod (s / still)) :arg2 (t3 / tell-01 :arg0 (p2 / person :arg0-of (h2 / have-org-role-91 :arg2 (d2 / director :mod (t4 / technical)))) :arg1 (e3 / estimate-01 :arg1 (p3 / price-01) :arg2 (p4 / person :arg0-of (r / report-01)))))
(b / begin-01 :arg1 (g / guest :mod (d / dinner) :mod (e / esteemed)) :mod (o / only))
(c / calmed :arg1 (s / situation) :time (u / until :op1 (t / then)) :arg1-of (c2 / cause-01 :arg0 (r / result-01 :arg1 (c3 / crisis :mod (r2 / refugee)))))
(s / say-01)
(a / arrange-01 :arg0 (p / person :arg0-of (b / broker-01 :arg1 (b2 / building :name (n / name :op1 "N-A"))) :location (l / location :name (n2 / name :op1 "Tornio"))))
(c / claim-01 :arg0 (p / person :arg0-of (h / head-01 :arg1 (o / organization :name (n / name :op1 "BBC" :op2 "Radio"))) :arg0-of (h2 / head-01 :arg1 (p2 / person :name (n2 / name :op1 "Alan" :op2 "Davey") :arg0-of (h3 / have-org-role-91 :arg1 (o2 / organization) :arg3 (h4 / head-01))))) :arg1 (o3 / obligate-01 :arg1 (c2 / channel) :arg2 (d / do-02 :arg0 (c3 / channel) :arg1 (w / work-01 :arg0 (c4 / channel) :degree (m / more) :compared-to (b / before :op1 (r / reach-01 :arg0 (c5 / channel) :arg1 (p3 / public)))))) :arg1-of (c6 / cause-01 :arg0 (k / know-02 :arg0 (c7 / country) :arg1 (m2 / music :mod (c8 / classical)) :degree (l / less))) :time (y / year :mod (t / this)))
(c / claim-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (o / organization :name (n / name :op1 "BBC" :op2 "Radio")) :arg2 (c2 / chief) :arg3 (p2 / person :name (n2 / name :op1 "Alan" :op2 "Davey") :arg0-of (c3 / claim-01 :arg1 (o2 / obligate-01 :arg2 (r / reach-01 :arg0 (c4 / channel) :arg1 (p3 / public))))))) :arg1 (o3 / obligate-01 :arg1 (c5 / channel) :arg2 (d / do-02 :arg0 (c6 / channel) :arg1 (w / work-01 :arg0 (c7 / channel) :degree (m / more) :compared-to (r2 / reach-01 :arg0 (c8 / channel) :arg1 (p4 / public))) :time (p5 / past)) :arg1-of (c9 / cause-01 :arg0 (k / know-02 :arg0 (c10 / country) :arg1 (m2 / music :mod (c11 / classical)) :degree (l / less)))) :time (y / year :mod (t / this)))
(s / say-01 :arg0 (o / organization :name (n / name :op1 "Moody")) :arg1 (c / contrast-01 :arg1 (u / understand-01 :arg0 (w / we :quant (a / all)) :arg1 (n2 / need-01 :arg0 (w2 / we) :arg1 (r / rule))) :arg2 (g / go-01 :arg1 (t / this) :arg4 (f / far :degree (t2 / too)))))
(h / have-concession-91 :arg1 (m / mandate :domain (s / stability :mod (e / economy)) :mod (a / also) :ord (o / ordinal-entity :value 3)) :arg2 (a2 / agree-01 :arg0 (p / person :arg0-of (l / lead-02 :arg1 (b / bank)) :mod (c / central))))
(s / say-01 :arg0 (h / he) :arg1 (s2 / surprise-01 :arg1 (i / it) :condition (r / raise-01 :arg0 (b / bank :mod (c / central)) :arg1 (r2 / rate :mod (i2 / interest)) :time (n / now :mod (r3 / right)))))
(e / exemplify-01 :mode (i / interrogative) :arg0 (d / disappeared :arg1 (t / they) :arg2 (m / market :mod (m2 / market :mod (l / labour)))) :mod (a / also))
(s / start-01 :arg0 (p / person :mod (o / organization :name (n / name :op1 "Rauma"))) :arg1 (s2 / start-01 :arg0 (p2 / person) :arg1 (a / and :op1 (b / be-located-at-91 :arg1 (p3 / person) :arg2 (u / under :op1 (r / round))) :op2 (l / lose-02 :arg0 (p4 / person) :arg1 (p5 / person :arg0-of (r2 / read-01)) :arg2 (a2 / age-01 :arg1 (p6 / person) :arg2 (t / temporal-quantity :quant (N / N-A) :unit (y / year)))))))
(b / believe-01 :arg0 (g / government-organization :arg0-of (g2 / govern-01 :arg1 (p / person :name (n / name :op1 "Tannadicen")))) :arg1 (l / lead-02 :arg0 (o / organization :name (n2 / name :op1 "Dundee" :op2 "United"))))
(a / and :op1 (s / stem :arg1 (p / plan :mod (o / original)) :arg2 (u / university :name (n / name :op1 "N-A"))) :op2 (t / trafficking :arg0 (p2 / plan-01) :arg1 (t2 / traffic) :mod (o2 / only) :prep-on (d / demonstrate-01 :arg1-of (h / hold-01 :arg3 (d2 / duration :poss (d3 / duration :poss (d4 / duration)))))))
(h / have-concession-91 :arg1 (p / person :arg0-of (h2 / have-org-role-91 :arg1 (o / organization :name (n / name :op1 "Institute")) :arg2 (c / ceo) :time (f / former))) :arg2 (p2 / person :arg0-of (h3 / have-org-role-91 :arg1 (a / and :op1 (b / business) :op2 (b2 / business)) :arg2 (c2 / ceo) :time (f2 / former))))
(p / possible-01 :arg1 (s / see-01 :arg0 (w / woman :arg1-of (g / gift-01)) :arg1 (w2 / woman :arg1-of (g2 / gift-01)) :arg2 (h / heaven) :mod (a / also)) :source (h2 / heaven))
(s / show-01 :arg0 (i / it) :arg1 (i2 / interesting :domain (y / you)))
(l / likely-01 :polarity - :arg1 (l2 / likely-01 :arg1 (l3 / likely-01 :polarity - :arg1 (l4 / likely-01 :arg1 (l5 / likely-01 :arg1 (f / familiarize-01 :arg1 (h / he) :arg2 (p / plot-01 :arg0 (b / boy :arg1-of (n / name-01 :polarity -) :arg1-of (n2 / name-01 :polarity -) :arg1-of (n3 / name-01 :polarity -) :arg1-of (n4 / name-01 :polarity -) :arg1-of (n5 / name-01 :polarity -) :arg1-of (n6 / name-01 :polarity -) :arg1-of (n7 / name-01 :polarity -) :arg1-of (n8 / name-01 :polarity -) :arg1-of (n9 / name-01 :polarity -) :arg1-of (n10 / name-01 :arg2 (n11 / name :op1 (t / thneeds) :op2 (t2 / thneeds) :op3 (t3 / thneeds) :op4 (o / once-ler) :op5 (o2 / once-ler) :op6 (o3 / once-ler) :op7 (o4 / once-ler)))))))))))
(h / have-purpose-91 :arg1 (a / access-01) :arg2 (t / thing :mod (a2 / additional) :arg0-of (a3 / access-01 :arg1 (t2 / thing :mod (a4 / additional) :arg1-of (a5 / attract-01)))))
(i / include-91 :arg1 (a / and :op1 (e / educate-01 :mod (s / school :arg1-of (h / high-02)) :mod (s2 / school :arg1-of (h2 / high-02)) :mod (s3 / school :arg1-of (h3 / high-02)) :mod (s4 / school :arg1-of (h4 / high-02))) :op2 (t / thing :arg1-of (r / responsible-03 :arg0 (p / person :arg0-of (t2 / teach-01))))) :arg2 (b / building :arg0-of (t3 / target-01 :arg1 (p2 / person :quant 10 :arg1-of (e2 / estimate-01)))) :time (d / during :op1 (a2 / attack-01)))
(g / get-01 :arg0 (p / person :quant 0.9 :arg0-of (s / sail-01)) :arg1 (s2 / system :arg0-of (o / operate-01 :mod (n / new)) :beneficiary (o2 / organization :name (n2 / name :op1 "Apple"))) :manner (a / amr-unknown) :time (s3 / since :op1 (p2 / presence :poss (u / update-01))))
(s / see-01 :mode (i / imperative) :arg0 (y / you) :arg1 (v / video :source (a / and :op1 (r / road) :op2 (t / transport-01 :mod (r2 / rail)) :op3 (p / passenger :mod (a2 / as-well)))))
(r / run-01 :arg0 (o / organization :name (n / name :op1 "Tigers")) :arg1 (r2 / rate-entity-91 :arg1 3 :arg2 (t / temporal-quantity :quant (N / N-A) :unit (y / year))) :arg3 (p / person :arg0-of (p2 / play-01) :mod (v / veteran) :arg0-of (o2 / off :arg1 (l / list :arg1-of (i / injure-01)) :time (b / before :op1 (o3 / out :op1 (t2 / temporal-quantity :quant (N2 / N-A) :unit (m / month))) :arg1-of (c / cause-01 :arg0 (l2 / low-04 :degree (m2 / more) :arg1-of (c2 / cause-01 :arg0 (l3 / low-04 :degree (m3 / more)))))))))
(a / and :op1 (l / lonely :arg1 (m / model :topic (l2 / law :mod (t / toughest) :poss (w / world)))) :op2 (c / compete-01 :arg0 (y / you) :mod (t2 / terrible)))
(r / receive-01 :arg0 (p / person :arg0-of (b / bridge-01)) :arg1 (w / weight :arg0-of (t / track-01 :arg1 (a / and :op1 (c / coexist-01 :arg1 (b2 / baby) :arg2 (l / light)) :op2 (y / yoga :arg1 (b3 / baby))))) :time (b4 / break :op1 (t2 / temporal-quantity :quant (N / N-A) :unit (y2 / year) :mod (l2 / last))))
(b / budget-01 :arg0 (u / university) :arg1 (m / monetary-quantity :arg1-of (b2 / budget-01 :arg2 (a / around :op1 (p / product-of :op1 85 :op2 10)))) :arg2 (u2 / university) :arg1-of (c / cause-01 :arg0 (b3 / budget-01 :arg1 (s / save-01) :arg2 (b4 / budget :quant (b5 / between :op1 10 :op2 10)))))
(p / possible-01 :arg1 (a / attend-02 :arg0 (o / or :op1 (t / trust-01) :op2 (m / metrics :arg1-of (c / call-01 :manner (s / so)) :mod (o2 / other))) :arg1 (a2 / attend-02 :arg1 (o3 / or) :degree (l / less)) :mod (a3 / again)))
(s / schedule-01 :arg1 (t / thing :arg1-of (p / precede-01 :arg2 (p2 / person :arg0-of (s2 / study-01)))) :arg3 (w / wednesday :arg1 (l / language :mod (f / foreign) :arg1-of (i / include-91 :arg2 (m / majority :location (c / country :name (n / name :op1 "N-A"))) :arg3 (m2 / majority)))) :arg3 (l2 / language :mod (f2 / foreign)))
(d / demand-01 :arg0 (p / person :arg0-of (l / lead-02 :arg1 (p2 / province :name (n / name :op1 "N-A"))) :mod (p3 / province :name (n2 / name :op1 "N-A"))) :arg1 (e / end-01 :arg1 (v / violence :location (c / country :mod (t / this)))))
(s / say-01 :arg0 (p / person :name (n / name :op1 "Geoff")) :arg2 (i / i))
(r / report-01 :arg0 (g / government-organization :name (n / name :op1 "Ministry" :op2 "of" :op3 "Health")) :arg1 (i / injure-01 :arg1 (p / person :quant 394 :arg2-of (t / total-01 :arg1 (p2 / person :quant 394))) :mod (a / also)))
(a / anger-01 :arg0 (g / government-organization :arg0-of (g2 / govern-01) :mod (f / federal)) :arg1 (t / they) :mod (a2 / also))
(r / resemble-01 :arg1 (r2 / resemble-01 :arg2 (c / chair :mod (p / previous) :poss (p2 / person :arg0-of (h / have-org-role-91 :arg2 (m / minister :mod (p3 / prime))))) :arg0-of (m2 / mark-01 :arg1 (b / begin-01 :arg1 (e / end-01 :arg1 (r3 / rebel-01 :mod (m3 / mäntsälän)))))) :arg2 (c2 / chair :mod (p4 / previous) :location (c3 / chair :mod (p5 / previous))))
(r / refer-01 :arg0 (t / this) :arg1 (m / market :mod (s / securities)) :arg2 (m2 / market :mod (s2 / securities)) :condition (p / possible-01 :arg1 (w / work-01 :arg0 (b / bank :mod (c / central)) :arg1 (s3 / softening :arg0 (b2 / bank) :arg1 (l / level))) :condition (p2 / possible-01 :arg1 (w2 / work-01 :arg0 (b3 / bank :mod (c2 / central)) :arg1 (s4 / softening :arg0 (b4 / bank) :arg1 (l2 / level)) :manner (p3 / promise-01 :arg0 (b5 / bank) :arg1 (e / event :mod (n / next) :time (f / future :arg1-of (n2 / near-02))))))))
(a / and :op1 (e / exist-01 :arg1 (h / he) :topic (s / shoe) :frequency (s2 / several)) :op2 (e2 / ensure-01 :arg0 (h2 / he) :arg1 (j / johns :arg0 (p / person :mod (w / white) :mod (w2 / white)) :arg1 (j2 / jeans :mod (e3 / elegant)) :arg2 (j3 / jeans :arg1-of (l / low-04)))))
(o / obligate-01 :arg2 (f / feel-02 :arg0 (i / i) :arg1 (p / person :arg0-of (a / act-01) :domain (p2 / person :arg0-of (h / have-03 :arg1 (m / model :mod (r / role) :mod (s / some)))))))
(p / pay-01 :arg0 (f / faninsa :poss (h / he)) :arg2 (h2 / he))
(r / realize-01 :arg0 (p / person :name (n / name :op1 "Sirkka")) :arg1 (a / and :op1 (d / drama :domain (d2 / drama)) :op2 (p2 / possible-01 :arg1 (n2 / need-01 :arg0 (t / truth) :arg1 (c / color :quant (b / bit))))) :manner (h / happy) :mod (a2 / also))
(s / suggest-01 :arg0 (p / person :name (n / name :op1 "Corbyn")) :arg1 (a / and :op1 (p2 / possible-01 :arg1 (g / give-01 :arg0 (p3 / person :arg0-of (h / have-org-role-91 :arg2 (p4 / president :mod (v / vice)))) :arg1 (p5 / person :arg0-of (s2 / speak-01)) :frequency (s3 / sometimes))) :op2 (s4 / say-01 :arg0 (p6 / person :arg0-of (h2 / have-org-role-91 :arg1 (g2 / government-organization :name (n2 / name :op1 "House" :op2 "of" :op3 "Commons")) :arg2 (p7 / president))) :arg1 (i / issue-02 :arg0 (t / this)))) :mod (a2 / also))
(m / multi-sentence :snt1 (r / rise-01 :arg1 (n / number :quant-of (d / die-01)) :arg4 (a / another :mod (y / yet)) :time (e / end-01 :arg1 (d2 / day))) :snt2 (c / commit-02 :arg0 (p / police) :arg1 (s / suicide)))
(r / reveal-01 :arg0 (o / organization :name (n / name :op1 "Saab")) :arg1 (a / and :op1 (p / place-01 :arg0 (o2 / organization) :arg1 (o3 / order :mod (a2 / army :mod (c / country :name (n2 / name :op1 "US")))) :arg2 (r2 / rate-entity-91 :arg1 4 :arg2 (t / temporal-quantity :quant (N / N-A) :unit (w / week)))) :op2 (r3 / rs :arg0 (a3 / army :mod (c2 / country)) :arg1 (r4 / rate-entity-91 :arg1 4 :arg2 (t2 / temporal-quantity :quant (N2 / N-A) :unit (y / year))))) :medium (p2 / press))
(c / chance-02 :arg0 (c2 / company :arg1-of (s / separate-02)) :arg1 (a / answer-01 :arg0 (c3 / company) :location (a2 / around :op1 (w / world)) :location (l / location :location-of (n / need-01 :arg0 (c4 / customer :poss (w2 / we)) :arg1 (g / good :degree (m / more) :compared-to (w3 / world))))))
(e / event :mod (t / this) :time (t2 / throughout :op1 (m / morning)) :degree (m2 / most) :domain (t3 / this))
(h / harm-01 :mode (i / interrogative) :arg0 (s / sector) :arg1 (i2 / i) :degree (s2 / so))
(a / and :op1 (b / be-located-at-91 :arg1 (a2 / and :op1 (p / person :arg0-of (h / have-rel-role-91 :arg1 (h2 / he) :arg2 (f / friend))) :op2 (p2 / person :arg0-of (h3 / have-rel-role-91 :arg1 (h4 / he) :arg2 (f2 / friend)))) :arg2 (s / school :arg1-of (h5 / high-02))) :op2 (n / nice-01 :arg1 (g / guy :mod (o / old :degree (m / more)) :arg0-of (t / try-01 :arg1 (t2 / teach-01 :arg0 (g2 / guy) :arg1 (p3 / play-11 :arg0 (g3 / guy) :arg2 (p4 / peninsula :name (n2 / name :op1 "N-A") :mod (h6 / hair))))))))
(d / die-01 :arg1 (p / person :mod (r / religious-group :name (n / name :op1 "N-A"))) :time (a / accident))
(a / and :op2 (r / rise-01 :arg1 (p / person :name (n / name :op1 "Nick")) :manner (r2 / rapid :degree (v / very)) :arg1-of (c / cause-01 :arg0 (a2 / and :op1 (p2 / point-out-02 :arg0 (a3 / and :op1 (p3 / person :name (n2 / name :op1 "Federer")) :op2 (p4 / person :name (n3 / name :op1 "Murray"))) :arg1 (e / eye :arg1-of (p5 / public-02))) :op2 (a4 / and :op1 (a5 / aikuistuu :arg0 (h / he) :arg1 (e2 / eye :arg1-of (p6 / public-02))) :op2 (a6 / and :op1 (m / mistake-02 :arg0 (h2 / he) :location (e3 / eye :arg1-of (p7 / public-02))) :op2 (a7 / and :op1 (m2 / mistake-02 :arg0 (h3 / he) :location (e4 / eye :arg1-of (p8 / public-02))) :op2 (a8 / and :op1 (m3 / mistake-02 :arg0 (h4 / he) :location (e5 / eye :arg1-of (p9 / public-02))) :op2 (a9 / and :op1 (m4 / mistake-02 :arg0 (h5 / he) :location (e6 / eye :arg1-of (p10 / public-02))) :op2 (a10 / and :op1 (m5 / mistake-02 :arg0 (h6 / he) :location (e7 / eye :arg1-of (p11 / public-02))) :op2 (a11 / and :op1 (m6 / mistake-02 :arg0 (h7 / he) :location (e8 / eye :arg1-of (p12 / public-02))) :op2 (a12 / and :op1 (m7 / mistake-02 :arg0 (h8 / he) :location (e9 / eye :arg1-of (p13 / public-02))) :op2 (a13 / and :op1 (m8 / mistake-02 :arg0 (h9 / he) :location (e10 / eye :arg1-of (p14 / public-02))) :op2 (a14 / and :op1 (m9 / mistake-02 :arg0 (h10 / he) :location (e11 / eye :arg1-of (p15 / public-02))) :op2 (b / believe-01 :arg0 (a15 / and) :arg1 (g / good :degree (m10 / most) :domain (a16 / and :op1 (t / team) :op2 (h11 / he))))))))))))))))))
(s / say-01 :arg0 (a / and :op1 (p / person :arg0-of (h / have-org-role-91 :arg1 (p2 / person :name (n / name :op1 "Corby")) :arg2 (m / member :mod (v / vice)))) :op2 (p3 / person :name (n2 / name :op1 "Owen" :op2 "Smith") :arg0-of (h2 / have-org-role-91 :arg1 (c / company) :arg2 (m2 / member))) :op3 (p4 / person :arg0-of (h3 / have-org-role-91 :arg1 (c2 / company :name (n3 / name :op1 "BBC")) :arg2 (m3 / member))) :op4 (p5 / person :arg0-of (h4 / have-org-role-91 :arg1 (c3 / company) :arg2 (m4 / member))) :op5 (p6 / person :arg0-of (h5 / have-org-role-91 :arg1 (c4 / company) :arg2 (m5 / member)))) :arg1 (u / urge-01 :arg0 (p7 / person) :arg1 (p8 / person :arg0-of (l / lead-02 :arg1 (p9 / political-party))) :arg2 (s2 / sing-01 :arg0 (p10 / person) :arg1 (p11 / park :name (n4 / name :op1 "N-A") :mod (n5 / nation))) :concession (f / fact :topic (r / recommend-01 :arg1 (a2 / abolished :arg1 (p12 / person :arg0-of (h6 / have-org-role-91 :arg1 (r2 / room) :arg2 (k / king))))))))
(a / and :op1 (r / resolve-01 :arg1 (i / issue-02)) :op2 (t / thursday :arg0 (c / committee :mod (m / market :arg1-of (o / open-09 :manner (s / so)))) :arg1 (d / decide-01 :arg0 (c2 / committee) :arg1 (d2 / decide-01 :arg0 (c3 / committee) :arg1 (i2 / issue-02 :arg0 (m2 / meet-03 :mod (t2 / two-day)))))))
(e / expect-01 :arg1 (o / open-up-03 :arg0 (t / traffic :mod (r / rail)) :arg1 (c / compete-02 :arg0 (t2 / traffic)) :manner (g / gradual)))
(a / and :op1 (f / fall-01 :arg1 (r / rate :mod (e / employ-01 :polarity -)) :arg4 (p / percentage-entity :value (N / N-A)) :arg4 (p2 / percentage-entity :value (N2 / N-A)) :time (m / month :mod (l / last))) :op2 (c / consider-01 :arg0 (b / bank :mod (c2 / central)) :arg1 (l2 / limit-01 :arg1 (r2 / rate) :degree (f2 / full))))
(p / possible-01 :arg1 (h / hold-01 :arg0 (i / it) :arg1 (p2 / person :quant 40)) :condition (s / sulloo :arg1 (b / boat)))
(( / ( :( (n / name) :op1 "Rio" :op2 "Grande")
(m / multi-sentence :snt1 (c / contrast-01 :arg2 (t / tell-01 :arg0 (p / person :name (n / name :op1 "Jeremy" :op2 "Corby") :arg0-of (p2 / patted :arg1 (b / broadcast-program :name (n2 / name :op1 "N-A") :poss (i / i) :topic (b2 / back :part-of (o / organization :name (n3 / name :op1 "Westminster" :op2 "Parliament" :op3 "House")))))) :arg1 (h / have-03 :arg0 (p3 / person) :arg1 (t2 / time :time-of (h2 / have-03 :arg0 (p4 / person) :arg1 (t3 / time :arg1-of (h3 / have-03 :arg0 (p5 / person) :time (n4 / no-longer))))))) :arg2 (h4 / he)) :snt2 (a / appear-02 :arg1 (a2 / and :op1 (b3 / boycott-01 :arg0 (p6 / person :name (n5 / name :op1 "Murdoch") :quant (1 / 1980s) :arg0-of (h5 / have-rel-role-91 :arg1 (p7 / person :name (n6 / name :op1 "Neil" :op2 "Kinnock")) :arg2 (p8 / person :name (n7 / name :op1 "Murdoch")))) :arg1 (s / strategy) :mod (a3 / again)) :op2 (a4 / and :op1 (b4 / boycott-01 :arg0 (p9 / person) :arg1 (s2 / strategy)) :op2 (b5 / be-02 :arg1 (p10 / person) :time (n8 / now))))))
(s / say-01 :arg0 (l / lamb :source (o / organization :name (n / name :op1 "Delta" :op2 "State")) :arg1-of (a / author-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (o2 / organization) :arg3 (a2 / apprentice-01 :arg0 (p2 / person)))))) :arg1 (w / website :poss (u / university) :prep-on (s2 / state :name (n2 / name :op1 "N-A"))))
(s / suffer-01 :arg0 (t / thread :topic (p / person :arg0-of (p2 / play-01 :arg1 (t2 / thing :arg0-of (p3 / play-12 :arg2 (o / organization :name (n / name :op1 "Hibernian"))))))) :arg1 (t3 / thing :arg2-of (r / result-01 :arg1 (s2 / song :arg0-of (o2 / offense-02) :source (p4 / person :name (n2 / name :op1 "Rudi" :op2 "Skacelista") :arg0-of (p5 / play-08 :arg1 (o3 / organization) :time (f / former)))))))
(s / say-01 :arg0 (h / he) :arg1 (h2 / have-03 :arg0 (t / that) :arg1 (r / reform-01 :arg0 (w / we) :arg1 (o / organization :name (n / name :op1 "EU")))))
(c / compare-01 :arg1 (t / team :mod (r / research-01)) :arg2 (t2 / thing :arg2-of (r2 / result-01 :arg1 (t3 / thing :arg2-of (r3 / result-01 :arg1 (t4 / type :quant 2 :arg1-of (d / differ-02)))))) :mod (a / also))
(s / say-01 :arg0 (p / person :name (n / name :op1 "Hillary" :op2 "Clinton") :arg0-of (h / have-org-role-91 :arg1 (s2 / state) :arg2 (s3 / secretary :mod (s4 / state)) :time (f / former))) :arg1 (c / contrast-01 :arg1 (c2 / continue-01 :arg0 (p2 / person :arg0-of (h2 / have-org-role-91 :arg1 (d / democrat) :arg2 (s5 / secretary :mod (s6 / state)) :time (f2 / former))) :arg1 (p3 / person :arg0-of (h3 / head-01 :arg1 (d2 / democrat)))) :arg2 (c3 / catch-up-04 :arg1 (p4 / person :name (n2 / name :op1 "Bernie" :op2 "Sanders") :arg0-of (h4 / have-org-role-91 :arg2 (s7 / senator))) :arg2 (p5 / person))))
(m / multi-sentence :snt1 (r / require-01 :arg1 (s / show-04 :arg1 (w / weekly) :mod (t / this))) :snt2 (a / and :op1 (t2 / theatre :mode (i / interrogative) :degree (l / less)) :op2 (f / fact :degree (m2 / more))))
(c / contrast-01 :arg1 (t / try-01 :arg0 (g / government-organization :arg0-of (g2 / govern-01)) :arg1 (m / myötäsukaista :arg0 (g3 / government-organization) :arg1 (m2 / message)) :quant (l / lot)) :arg2 (p / possible-01 :arg1 (f / find-01 :arg1 (t2 / thing :arg1-of (i / include-91 :arg2 (t3 / thing :arg1-of (c2 / cut-02 :arg1-of (r / recommend-01)) :mod (m3 / much :polarity - :degree (t4 / too))))))))
(p / possible-01 :arg1 (w / weird :polarity - :degree (e / equal) :compared-to (w2 / weird) :domain (p2 / picture :poss (o / organization :name (n / name :op1 "Societe") :arg0-of (f / found-01 :arg1 (p3 / person :name (n2 / name :op1 "Albert" :op2 "Edwards") :arg0-of (h / have-org-role-91 :arg1 (o2 / organization) :arg3 (l / lead-02 :arg0 (p4 / person) :arg1 (o3 / organization)))))))) :arg1-of (c / cause-01 :arg0 (p5 / possible-01 :arg1 (s / seem-01 :arg1 (o4 / offhand :arg0 (i / i))))))
(t / tell-01 :arg0 (p / person :name (n / name :op1 "Steen")) :arg1 (a / and :op1 (d / do-02 :arg0 (p2 / person :arg0-of (h / have-rel-role-91 :arg1 (h2 / he) :arg2 (d2 / daughter))) :arg1 (m / music :poss (p3 / person))) :op2 (s / sing-01 :arg0 (p4 / person) :arg1 (m2 / music :poss (p5 / person)))) :arg2 (i / i))
(s / say-01 :arg0 (p / person :name (n / name :op1 "Niinistö")) :arg1 (d / discuss-01 :arg1 (p2 / page :mod (n2 / nato-questions)) :mod (a / also)))
(s / say-01 :arg0 (o / organization :name (n / name :op1 "FedEx" :op2 "Corp.")))
(a / and :op1 (d / dissatisfied :arg1 (p / person :quant (1 / 1/2) :mod (c / country :name (n / name :op1 "N-A"))) :time (n2 / now)) :op2 (s / satisfy-01 :arg1 (p2 / person :mod (c2 / country :name (n3 / name :op1 "N-A"))) :mod (o / only)))
(a / and :op1 (b / be-located-at-91 :arg1 (p / person) :arg2 (b2 / bus :mod (m / minus))) :op2 (g / go-02 :arg0 (p2 / person) :arg4 (c / coast)))
(n / need-01 :arg0 (i / i) :arg1 (t / try-01 :arg0 (i2 / i) :arg1 (r / remember-01 :arg0 (i3 / i) :arg1 (d / detail :quant (a / all)))) :mod (j / just))
(k / keen :arg1 (p / person :quant 1953 :mod (v / vuosimalli)) :arg2 (s / scene :name (n / name :op1 (t / toivolan) :op2 (p2 / pomoksi)) :mod (t2 / toivolan)) :arg1-of (r / report-01))
(c / cause-01 :arg0 (c2 / crucial :domain (l / let-01 :arg1 (c3 / crisis :mod (f / finance)))) :arg1 (f2 / find-01 :polarity - :arg0 (p / person :arg1-of (g / guilty-01)) :arg1 (r / research-01 :arg1 (r2 / research-01 :arg1 (f3 / field)) :duration (t / temporal-quantity :quant (N / N-A) :unit (d / decade) :mod (e / even))) :arg1-of (n / need-01)))
(m / multi-sentence :snt1 (a / and :op1 (c / childhood :arg0 (i / i)) :op2 (o / obligate-01 :arg1 (h / he) :arg2 (c2 / confess :arg0 (h2 / he) :arg1 (o2 / obligate-01 :arg2 (c3 / confess :arg0 (h3 / he)))))) :snt2 (a2 / and :op1 (b / beautiful-02 :arg1 (l / life)) :op2 (b2 / beautiful :arg1 (l2 / life)) :op3 (h4 / harmonious :arg1 (l3 / life)) :op4 (h5 / harmonious :arg1 (l4 / life)) :op5 (h6 / harmonious :arg1 (l5 / life))))
(g / generate-01 :arg0 (p / person :name (n / name :op1 "Ben" :op2 "Carson")) :arg1 (l / level :arg1-of (s / same-01 :arg2 (l2 / level :mod (e / enthusiasm) :mod (e2 / enthusiasm)))) :arg3 (p2 / percentage-entity :value (N / N-A)) :arg4 (l3 / level :mod (e3 / enthusiasm) :mod (e4 / enthusiasm)) :arg1-of (s2 / say-01 :arg0 (p3 / person :name (n2 / name :op1 "Trump"))) :arg0-of (s3 / say-01 :arg1 (t / thing :arg1-of (s4 / same-01 :arg2 (t2 / thing :arg1-of (s5 / same-01 :arg2 (t3 / thing :arg1-of (s6 / same-01 :arg2 (t4 / thing :arg1-of (s7 / same-01 :arg2 (t5 / thing :arg1-of (s8 / same-01 :arg2 (t6 / thing :arg1-of (s9 / same-01 :arg2 (t7 / thing)))))))))))))))
(t / try-01 :arg0 (p / person :name (n / name :op1 "N-A") :arg0-of (h / have-org-role-91 :arg2 (n2 / nepublica))) :arg1 (t2 / try-02 :ord (o / ordinal-entity :value 1) :arg1-of (r / run-01 :arg0 (m / man :mod (y / young) :arg2-of (a / accuse-01 :arg1 (m2 / man))))) :time (s / session :time-of (a2 / ask-02 :arg0 (m3 / man :mod (y2 / young) :arg2-of (a3 / accuse-01 :arg1 (m4 / man))) :arg1 (w / woman :mod (y3 / young)) :arg2 (w2 / woman :mod (y4 / young)) :time (a4 / after :op1 (n3 / now) :quant (t3 / temporal-quantity :quant (N / N-A) :unit (y5 / year))))))
(a / and :op1 (f / fall-01 :arg1 (r / rate :mod (e / employ-01 :arg1 (c / country :name (n / name :op1 "Scotland")))) :arg4 (u / under :op1 (p / product-of :op1 (2 / 2.612.000) :op2 (22 / 2.612.000))) :time (m / meanwhile)) :op2 (n2 / number :quant-of (p2 / person :arg1-of (e2 / employ-01))) :time (m2 / meanwhile))
(a / and :op1 (p / person :arg0-of (p2 / play-01) :arg1-of (i / include-91 :arg2 (p3 / person :arg0-of (p4 / play-01) :mod (g / good :degree (m / most)))) :quant (m2 / multiple :op1 1)) :op2 (b / bring-01 :arg0 (p5 / person) :arg1 (e / experience-01 :quant (l / lot))) :op3 (g2 / give-01 :arg0 (p6 / person) :arg1 (e2 / experience-01 :quant (l2 / lot)) :arg2 (a2 / and :op1 (s / situation :mod (e3 / every)) :op2 (a3 / attack-01 :mod (t / type :quant (a4 / all))))))
(a / and :op1 (p / person :arg0-of (p2 / play-01) :arg1-of (i / include-91 :arg2 (p3 / person :arg0-of (p4 / play-01) :mod (g / good :degree (m / most)))) :quant (m2 / multiple :op1 1)) :op2 (b / bring-01 :arg0 (p5 / person) :arg1 (e / experience-01 :mod (g2 / great)) :arg1-of (c / cause-01 :arg0 (a2 / and :op1 (p6 / play-11 :arg0 (p7 / person) :arg2 (s / situation :mod (a3 / any))) :op2 (o / oppose-01 :arg0 (p8 / person) :arg1 (a4 / attack-01 :mod (k / kind :quant (a5 / all))))))))
(a / and :op2 (n / nice-01 :arg1 (p / prabuseasca :arg1 (i / it) :time (b / before :op1 (o / or :op1 (p2 / principals :arg1 (o2 / or :op1 (o3 / opponent :poss (h / he)) :op2 (o4 / opponent :poss (h2 / he)))))))))
(e / explain-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (c / continent :name (n / name :op1 "N-A")) :arg2 (d / diplomat))) :arg1 (a / and :op1 (p2 / power-01 :arg0 (a2 / and :op1 (t / thing :arg2-of (c2 / characteristic-02 :arg1 (a3 / agenda :poss (c3 / country :name (n2 / name :op1 "Britain"))))) :op2 (s / state :arg1-of (w / want-01 :polarity - :arg0 (c4 / country)))) :arg1 (s2 / state :quant (s3 / some) :arg0-of (c5 / cause-01 :arg1 (i / internally)))) :op2 (c6 / change-01 :arg0 (s4 / state :arg1-of (w2 / want-01 :polarity - :arg0 (m / most))) :arg1 (t2 / treaty))) :time (p3 / past))
(e / explain-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (c / continent :name (n / name :op1 "N-A")) :arg2 (d / diplomat))) :arg1 (a / and :op1 (p2 / power-01 :arg0 (c2 / country :name (n2 / name :op1 "United" :op2 "Kingdom")) :arg1 (s / state :mod (s2 / some) :arg0-of (h2 / have-org-role-91 :arg1 (o / organization) :arg2 (m / member)))) :op2 (a2 / adjust-01 :arg0 (s3 / state) :arg1 (t / treaty :topic (a3 / and :op1 (t2 / thing :arg1-of (w / want-01 :polarity - :arg0 (p3 / person))) :op2 (t3 / thing :arg1-of (w2 / want-01 :polarity - :arg0 (p4 / person)))))) :time (p5 / past)))
(i / include-01 :arg1 (a / and :op1 (a2 / access-01 :arg1 (a3 / access-01 :path (a4 / across :op1 (c / citizen :arg0-of (n / need-01 :arg1 (l / labor :arg1-of (e / employ-01 :polarity -))))))) :op2 (a5 / access-01 :arg0 (c2 / citizen) :arg1 (i2 / institution :mod (e2 / educate-01) :arg1-of (h / high-02 :degree (m / more))) :location (c3 / country :name (n2 / name :op1 "Romania")))) :arg2 (a6 / and :op1 (a7 / access-01 :arg0 (c4 / citizen) :arg1 (i3 / institution :mod (e3 / educate-01) :arg1-of (h2 / high-02 :degree (m2 / more))) :location (c5 / country)) :op2 (i4 / identify-01 :arg1 (c6 / citizen) :arg2 (d / defective))))
(s / send-03 :arg0 (p / person :arg0-of (l / lead-02 :arg1 (o / organization :name (n / name :op1 "Buddhist"))) :mod (p2 / province :name (n2 / name :op1 "N-A"))) :arg1 (c / call-03 :arg0 (p3 / person) :arg1 (e / end-01 :arg0 (p4 / person) :arg1 (v / violence :location (c2 / country :arg0-of (h / have-rel-role-91 :arg1 (r / refugee) :arg2 (m / mother)))))))
(s / say-01 :arg0 (a / analyze-01 :time (r / recent) :arg1-of (p / publish-01 :arg0 (a2 / analyze-01 :arg0 (p2 / person :arg0-of (h / have-org-role-91 :arg1 (o / organization :name (n / name :op1 "Nuveen" :op2 "Asset" :op3 "Management")) :arg2 (c / chief)) :arg0-of (h2 / have-org-role-91 :arg1 (o2 / organization :name (n2 / name :op1 "Nuveen" :op2 "Asset" :op3 "Management")) :arg2 (c2 / chief)))))) :arg1 (r2 / rise-01 :arg1 (m / market) :manner (s2 / sharp) :manner (s3 / sharp) :arg1-of (c3 / cause-01 :arg0 (a3 / and :op1 (h3 / heading :arg0 (m2 / market) :arg1 (r3 / rate-entity-91 :arg1 (p3 / percentage-entity :value (N / N-A)) :arg2 (t / temporal-quantity :quant (N2 / N-A) :unit (d / day)))) :op2 (r4 / returns :time (a4 / after :op1 (t2 / temporal-quantity :quant (N3 / N-A) :unit (d2 / day)))))) :manner (s4 / specific-02)) :manner (s5 / specific-02) :time (y / year :mod (l / last) :mod 35))
(c / contrast-01 :arg1 (c2 / contribute-01 :arg0 (a / authority :mod (r / romanian)) :arg2 (c3 / create-01 :arg1 (s / system :arg0-of (a2 / authorize-01 :arg1 (f / flexible))))) :arg2 (a3 / attend-02 :arg0 (a4 / and :op1 (c4 / country :arg0-of (h / have-03 :arg1 (s2 / safe-01 :mod (p / potential)) :arg1-of (p2 / possible-01))) :op2 (t / thing :arg1-of (a5 / achieve-01 :arg0 (s3 / source)))) :arg1 (a6 / attend-02 :arg0 (c5 / citizen) :arg1 (c6 / citizen) :mod (p3 / particular)) :time (t2 / time :arg1-of (s4 / same-01))))
(s / seem-01 :arg1 (s2 / say-01 :arg0 (p / person :arg0-of (a / analyze-01) :mod (o / organization :name (n / name :op1 "Deutsche" :op2 "Bank"))) :arg1 (e / event :time (a2 / after :op1 (i / increase-01 :arg1 (g / government-organization :name (n2 / name :op1 "Fed")) :time (a3 / after :op1 (i2 / increase-01 :arg1 (g2 / government-organization :name (n3 / name :op1 "Fed")))))) :time (s3 / survey-01 :arg1 (t / thing :arg1-of (e2 / event :time (a4 / after :op1 (i3 / increase-01 :arg1 (g3 / government-organization :name (n4 / name :op1 "Fed"))))))) :mod (a5 / again :mod 24))) :arg1-of (c / cause-01 :arg0 (r / return-01 :arg1 (c2 / capital :arg0-of (h / have-org-role-91 :arg2 (c3 / capital))) :arg4 (s4 / stagnant :arg0 (c4 / capital) :arg1 (c5 / capital) :duration (t2 / temporal-quantity :quant (N / N-A) :unit (m / month))))))
(m / multi-sentence :snt1 (s / seem-01 :arg1 (t / tendency :arg1 (r / roe :time (a / after :op1 (i / increase-01 :ord (o / ordinal-entity :value 1 :range (a2 / after :op1 (i2 / increase-01 :arg1 (i3 / increase-01 :ord (o2 / ordinal-entity :value 1)))))))))) :snt2 (s2 / say-01 :arg0 (p / person :arg0-of (a3 / analyze-01) :mod (o3 / organization :name (n / name :op1 "Deutsche" :op2 "Bank"))) :arg1 (e / event :time (a4 / after :op1 (i4 / increase-01 :arg1 (g / government-organization :name (n2 / name :op1 "Fed")))))))
(h / have-03 :arg0 (p / person :name (n / name :op1 "David" :op2 "Grimal")) :arg1 (c / career :mod (i / international) :prep-as (v / violinist :mod (s / solo)) :arg0-of (g / gave :arg1 (a / and :op1 (m / music :mod (c2 / classical) :example (a2 / and :op1 (o / organization :name (n2 / name :op1 "Paris" :op2 "Tamburica" :op3 "Tamburica" :op4 "Philharmonique" :op5 "de" :op6 "Radio" :op7 "France" :op8 "," :op9 "Russian" :op10 "National" :op11 "Orchestra")) :op2 (o2 / organization :name (n3 / name :op1 "Tamburica" :op2 "National" :op3 "de" :op4 "Lyon")) :op3 (o3 / organization :name (n4 / name :op1 "Chamber" :op2 "Orchestra" :op3 "of" :op4 "Europe")) :op4 (p2 / person :name (n5 / name :op1 "Berliner" :op2 "Symphoniker")) :op5 (p3 / person :name (n6 / name :op1 "Berliner" :op2 "Symphoniker")) :op6 (c3 / country :name (n7 / name :op1 "N-A")) :op7 (c4 / country :name (n8 / name :op1 "N-A")))) :op2 (o4 / orchestras :mod (p4 / prestigious) :example (l / lead-02 :arg0 (a3 / and :op1 (p5 / person :arg0-of (l2 / lead-02 :arg1 (o5 / organization))) :op2 (p6 / person :arg0-of (h2 / have-org-role-91 :arg1 (o6 / organization) :arg2 (m2 / member))) :op3 (p7 / person :arg0-of (l3 / lead-02 :arg1 (o7 / organization))) :op4 (p8 / person :arg0-of (l4 / lead-02 :arg1 (c5 / country :name (n9 / name :op1 "N-A")))) :op5 (p9 / person :arg0-of (l5 / lead-02 :arg1 (c6 / country :name (n10 / name :op1 "N-A")))) :op6 (p10 / person :arg0-of (l6 / lead-02 :arg1 (c7 / country :name (n11 / name :op1 "N-A")))) :op7 (p11 / person :arg0-of (l7 / lead-02 :arg1 (r / religious-group :name (n12 / name :op1 "N-A")))) :op8 (p12 / person :arg0-of (l8 / lead-02 :arg1 (r2 / religious-group))) :op8 (p13 / person :arg0-of (l9 / lead-02 :arg1 (r3 / religious-group))) :op8 (p14 / person :arg0-of (l10 / lead-02 :arg1 (r4 / religious-group))) :op8 (p15 / person :arg0-of (l11 / lead-02 :arg1 (r5 / religious-group))) :op8 (p16 / person :arg0-of (l12 / lead-02 :arg1 (r6 / religious-group))) :op8 (p17 / person :arg0-of (l13 / lead-02 :arg1 (r7 / religious-group))) :op8 (p18 / person :arg0-of (l14 / lead-02 :arg1 (r8 / religious-group))) :op8 (p19 / person :arg0-of (l15 / lead-02 :arg1 (r9 / religious-group))) :op8 (p20 / person :arg0-of (l16 / lead-02 :arg1 (r10 / religious-group))) :op8 (p21 / person :arg0-of (l17 / lead-02 :arg1 (r11 / religious-group))) :op8 (p22 / person :arg0-of (l18 / lead-02 :arg1 (r12 / religious-group))) :op8 (p23 / person :arg0-of (l19 / lead-02 :arg1 (r13 / religious-group))) :op8 (p24 / person :arg0-of (l20 / lead-02 :arg1 (r14 / religious-group))) :op8 (p25 / person :arg0-of (l21 / lead-02 :arg1 (r15 / religious-group))) :op8 (p26 / person :arg0-of (l22 / lead-02 :arg1 (r16 / religious-group))) :op8 (p27 / person :arg0-of (l23 / lead-02 :arg1 (r17 / religious-group))) :op8 (p28 / person :mod (r18 / religious-group)) :op8 (p29 / person :mod (r19 / religious-group)) :op8 (p30 / person :mod (r20 / religious-group)) :op8 (p31 / person :mod (r21 / religious-group)) :op8 (p32 / person :mod (r22 / religious-group)) :op8 (p33 / person :mod (r23 / religious-group)) :op8 (p34 / person :mod (r24 / religious-group)) :op8 (p35 / person :mod (r25 / religious-group)) :op8 (p36 / person :mod (r26 / religious-group)) :op8 (p37 / person :mod (r27 / religious-group)) :op8 (p38 / person :mod (r28 / religious-group)) :op8 (p39 / person :mod (r29 / religious-group)) :op8 (p40 / person :mod (r30 / religious-group)) :op8 (p41 / person :mod (r31 / religious-group)) :op8 (p42 / person :mod (r32 / religious-group)) :op8 (p43 / person :mod (r33 / religious-group)) :op8 (p44 / person :mod (r34 / religious-group)) :op8 (p45 / person :mod (r35 / religious-group)) :op8 (p46 / person :mod (r36 / religious-group)) :op8 (p47 / person :mod (r37 / religious-group)))))))))
(m / make-01 :arg0 (o / organization :name (n / name :op1 "Hewlett-Packard")) :arg1 (c / car-make :quant 30,000))
(c / change-01 :arg1 (s / situation) :arg1-of (c2 / cause-01 :arg0 (b / bet-01 :arg0 (p / person :quant (m / multiple :op1 4)) :arg2 (p2 / person :name (n / name :op1 "Jeb" :op2 "Bush")))))
(o / offer-01 :arg0 (p / person :name (n / name :op1 "Carey" :op2 "Carey")) :arg1 (j / job :mod (j2 / job :location (f / firm :quant 200))))
(a / and :op1 (a2 / ally-01 :arg1 (p / person :name (n / name :op1 "Angela" :op2 "Merkel") :arg0-of (c / cautious-02) :arg0-of (c2 / cautious-02) :mod (e / extreme) :arg0-of (c3 / cautious-02)) :arg2 (s / stay-01 :arg1 (p2 / person) :duration (t / temporal-quantity :quant (N / N-A) :unit (y / year)))) :op2 (a3 / and :op1 (s2 / stay-01 :arg1 (p3 / person) :arg3 (t2 / temporal-quantity :quant (N2 / N-A) :unit (y2 / year))) :op2 (w / want-01 :arg0 (p4 / person) :arg1 (l / leave-15 :arg0 (p5 / person) :arg1 (p6 / position :poss (p7 / person)) :time (b / before :op1 (s3 / situation :poss (p8 / person))))) :op3 (- / -lrb- :arg0 (p9 / person :name (n2 / name :op1 "Mitterrand")) :arg1 (p10 / person :quant 16 :arg0-of (s4 / stay-01 :arg1 (p11 / person) :arg1-of (l2 / long-03 :degree (t3 / too)))))))
(w / wish-01 :arg0 (i / i) :arg1 (a / and :op1 (d / disappointment :polarity - :arg0 (i2 / i) :arg1 (a2 / anyone :location (f / family :mod (r / rugbiului)))) :op2 (c / come-up-11 :arg0 (a3 / anyone) :arg1 (r2 / result :mod (g / good)) :location (h / home))))
(e / exemplify-01 :arg0 (h / have-03 :arg0 (p / person :name (n / name :op1 "David" :op2 "Grimal")) :arg1 (p2 / phenomenon :mod (t / this)) :time (b / before :op1 (e2 / enter-01 :arg0 (p3 / person) :arg1 (m / member :arg2-of (h2 / have-org-role-91 :arg1 (o / organization :name (n2 / name :op1 "European" :op2 "Union")))) :location (c / country :name (n3 / name :op1 "Romania")))) :time (b2 / before :op1 (e3 / enter-01 :arg0 (y / you) :arg1 (o2 / organization :name (n4 / name :op1 "EU")))) :time (b3 / before :op1 (e4 / enter-01 :arg0 (y2 / you) :arg1 (o3 / organization :name (n5 / name :op1 "EU")))) :time (b4 / before :op1 (e5 / enter-01 :arg0 (y3 / you) :arg1 (o4 / organization :name (n6 / name :op1 "EU"))))))
(e / exemplify-01 :arg0 (a / and :op1 (g / give-01 :arg0 (p / person :name (n / name :op1 "David" :op2 "Grimal")) :arg1 (e2 / example :mod (t / this)) :arg2 (o / organization :name (n2 / name :op1 "Cernavoda")) :time (b / before)) :op2 (a2 / accession :arg0 (p2 / person) :arg1 (o2 / organization :name (n3 / name :op1 "European" :op2 "Union")) :time (b2 / before :op1 (a3 / accession :arg0 (p3 / person) :arg1 (o3 / organization :name (n4 / name :op1 "European" :op2 "Union")) :location (a4 / and :op1 (o4 / organization :name (n5 / name :op1 "EU")) :op2 (v / vegetables :mod (a5 / aveati)) :op3 (m / meat) :op4 (m2 / meat)))))))
(a / and :op1 (t / terminate-01 :arg0 (p / person :arg0-of (h / have-rel-role-91 :arg2 (m / mother))) :mod (a2 / also)) :op2 (b / believe-01 :arg0 (p2 / person) :arg1 (s / something :arg1-of (r / resemble-01 :arg2 (t2 / this))) :mod (h2 / hardly)))
(n / need-01 :arg0 (i / it) :arg1 (a / and :op1 (k / know-01 :arg0 (p / person) :arg1 (g / go-on-15 :arg1 (t / thing) :location (t2 / there))) :op2 (h / have-06 :arg0 (p2 / person) :arg1 (a2 / and :op1 (f / fairness :quant (l / lot)) :op2 (r / respect-01 :arg1 (a3 / and :op1 (i2 / institution) :op2 (t3 / tradition)))))))
(a / and :op1 (b / believe-01 :polarity - :arg0 (p / person :arg0-of (v / vote-01)) :arg1 (p2 / person :arg0-of (v2 / vote-01))) :op2 (r / rely-01 :polarity - :arg0 (p3 / person) :arg1 (p4 / person)))
(a / and :op1 (p / person :name (n / name :op1 "Robert" :op2 "Roulston") :arg0-of (h / have-org-role-91 :arg1 (p2 / person :name (n2 / name :op1 "David" :op2 "Moodie") :arg0-of (h2 / have-org-role-91 :arg1 (r / rvl) :arg2 (p3 / president) :time (f / former))) :arg2 (p4 / president) :time (f2 / former))) :op2 (p5 / person :name (n3 / name :op1 "Bernard" :op2 "Saundry") :arg0-of (h3 / have-org-role-91 :arg1 (r2 / rvl) :arg2 (e / executive) :time (c / current))) :op3 (p6 / person :arg0-of (h4 / have-org-role-91 :arg1 (r3 / rvl) :arg2 (e2 / executive) :time (c2 / current))) :op4 (p7 / person :arg1-of (k / know-02 :arg0 (i / i) :time (t / today))))
(g / game :arg1-of (e / excellent-02))
(g / game :arg1-of (e / excellent-02))
(d / detain-01 :arg1 (p / person :name (n / name :op1 "Pompeo")) :arg2 (a / and :op1 (r / run-01 :arg0 (p2 / person) :arg1 (o / organization :name (n2 / name :op1 "Renault" :op2 "Magnum") :mod (b / brand :name (n3 / name :op1 (a2 / automarfar)) :mod (b2 / brand :name (n4 / name :op1 (a3 / automarfar))))) :location (c / country :name (n5 / name :op1 "Romania"))) :op2 (r2 / run-01 :arg0 (p3 / person) :arg1 (p4 / person :name (n6 / name :op1 "Laz") :arg0-of (c2 / carry-01 :arg1 (p5 / plastic) :beneficiary (c3 / company) :location (c4 / country :name (n7 / name :op1 "Italy"))))) :time (y / year :mod 45)) :op3 (p6 / present-01 :arg1 (t / temporal-quantity :quant (N / N-A) :unit (h / hour)) :arg2 (p7 / present-01 :arg1 (p8 / propose-01 :arg1 (d2 / detain-01 :manner (p9 / preventive))))))
FAILED_TO_PARSE#Couldn't convert to full AMR graph.
(m / multi-sentence :snt1 (a / and :op1 (p / person :arg0-of (h / have-org-role-91 :arg1 (t / team :mod (n / nation) :poss (c / country :name (n2 / name :op1 "Romania"))) :arg2 (p2 / person :arg0-of (m2 / manage-01 :arg1 (t2 / team)))) :arg0-of (h2 / have-org-role-91 :arg1 (t3 / team :mod (n3 / nation) :mod (n4 / nation)) :arg2 (p3 / person :arg0-of (m3 / manage-01 :arg1 (t4 / team)))) :arg0-of (h3 / have-org-role-91 :arg1 (t5 / team) :arg3 (m4 / manage-01 :arg1 (t6 / team))) :arg0-of (h4 / have-org-role-91 :arg1 (t7 / team) :arg3 (m5 / manage-01 :arg1 (t8 / team))) :arg0-of (h5 / have-org-role-91 :arg1 (t9 / team) :arg3 (m6 / manage-01 :arg1 (t10 / team))) :arg0-of (h6 / have-org-role-91 :arg1 (t11 / team) :arg3 (m7 / manage-01 :arg1 (t12 / team))) :arg0-of (h7 / have-org-role-91 :arg1 (t13 / team) :arg3 (m8 / manage-01 :arg1 (t14 / team))) :arg0-of (h8 / have-org-role-91 :arg1 (t15 / team) :arg3 (m9 / manage-01 :arg1 (t16 / team))) :arg0-of (h9 / have-org-role-91 :arg1 (t17 / team) :arg3 (m10 / manage-01 :arg1 (t18 / team))) :arg0-of (h10 / have-org-role-91 :arg1 (t19 / team) :arg3 (m11 / manage-01 :arg1 (t20 / team))) :arg0-of (h11 / have-org-role-91 :arg1 (t21 / team) :arg3 (m12 / manage-01 :arg1 (t22 / team))) :arg0-of (h12 / have-org-role-91 :arg1 (t23 / team) :arg3 (m13 / manage-01 :arg1 (t24 / team))) :arg0-of (h13 / have-org-role-91 :arg1 (t25 / team) :arg3 (m14 / manage-01 :arg1 (t26 / team))) :arg0-of (h14 / have-org-role-91 :arg1 (t27 / team) :arg3 (m15 / manage-01 :arg1 (t28 / team))) :arg0-of (h15 / have-org-role-91 :arg1 (t29 / team) :arg3 (m16 / manage-01 :arg1 (t30 / team))) :arg0-of (h16 / have-org-role-91 :arg1 (t31 / team) :arg3 (m17 / manage-01 :arg1 (t32 / team))) :arg0-of (h17 / have-org-role-91 :arg1 (t33 / team) :arg3 (m18 / manage-01 :arg1 (t34 / team))) :arg0-of (h18 / have-org-role-91 :arg1 (t35 / team) :arg3 (m19 / manage-01 :arg1 (t36 / team))) :arg0-of (h19 / have-org-role-91 :arg1 (t37 / team) :arg3 (m20 / manage-01 :arg1 (t38 / team))) :arg0-of (h20 / have-org-role-91 :arg1 (t39 / team) :arg3 (m21 / manage-01 :arg1 (t40 / team))) :arg0-of (h21 / have-org-role-91 :arg1 (t41 / team) :arg3 (m22 / manage-01 :arg1 (t42 / team))))))
(k / know-02 :polarity - :arg1 (p / person :arg0-of (p2 / participate-01) :mod (o / other)) :arg2 (e / expertise :poss (p3 / person) :topic (c / control-01 :arg1 (t / tobacco))))
(k / know-01 :polarity - :arg0 (o / organization :name (n / name :op1 "EU")) :arg1 (t / thing :arg1-of (w / write-01 :location (p / press :arg1-of (l / local-02)))) :time (n2 / night :time (b / before :op1 (c / come-01 :arg1 (i / i) :arg4 (c2 / city)))))
(a / and :op1 (b / be-located-at-91 :arg1 (a2 / and :op1 (h / he) :op2 (p / person :name (n / name :op1 "Crina") :location (m / middle :op1 (m2 / middle)))) :arg2 (b2 / behind :op1 (h2 / he))))
(s / say-01 :arg0 (p / poll-01 :arg0 (p2 / publication :name (n / name :op1 "CNN"))) :arg1 (c / chance-02 :arg0 (p3 / person :quant 4 :arg1-of (i / include-91 :arg2 (p4 / person :quant 10 :arg1-of (i2 / include-91 :arg2 (p5 / person :quant 10))))) :arg1 (w / win-01 :arg0 (p6 / person) :arg2 (r / race :mod (n2 / nominate-01))) :time (w2 / week :mod (l / last))))
(c / call-on-05 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (o / organization :name (n / name :op1 "UN")) :arg2 (c2 / chief))) :arg1 (s / side :quant (a / all) :arg2-of (i / include-91 :arg1 (d / divide-02 :arg1 (o2 / organization :name (n2 / name :op1 "UN" :op2 "Security" :op3 "Council")) :arg2 (a2 / and :op1 (u / unify :arg0 (o3 / organization) :arg1 (n3 / negotiate-01)) :op2 (s2 / support-01 :arg0 (o4 / organization) :arg1 (n4 / negotiate-01) :purpose (f / find-01 :arg0 (o5 / organization) :arg1 (s3 / solution :mod (p2 / politics)))))))) :mod (a3 / again))
(b / believe-01 :arg0 (o / organization :name (n / name :op1 "Financial" :op2 "Times") :time (l / late :degree (m / most)) :poss (i / it)) :arg1 (i2 / increase-01 :arg0 (e / elect-01 :arg1 (p / person :name (n2 / name :op1 "Corbyn"))) :arg1 (o2 / or :op1 (p2 / person :name (n3 / name :op1 "Brexit")) :op2 (c / country :name (n4 / name :op1 "Britain")))) :time (l2 / late :degree (m2 / most)))
(b / believe-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (o / organization :name (n / name :op1 "Financial" :op2 "Times")) :arg2 (n2 / number :mod (l / late :degree (m / most))))) :arg1 (i / increase-01 :arg0 (e / elect-01 :arg1 (p2 / person :name (n3 / name :op1 "Corbyn"))) :arg1 (c / chance-02 :arg0 (p3 / person) :arg1 (m2 / message-01 :arg0 (p4 / person))) :arg1-of (i2 / instead-of-91 :arg2 (e2 / exit :poss (c2 / country :name (n4 / name :op1 "Britain")) :source (o2 / organization :name (n5 / name :op1 "EU"))))) :time (l2 / late :degree (m3 / most) :poss (o3 / organization)))
(a / and :op1 (i / increase-01 :arg0 (o / organization :name (n / name :op1 "Financial" :op2 "Times") :mod (l / late :degree (m / most)) :poss (p / person :name (n2 / name :op1 "Corbyn"))) :arg1 (c / chance-01 :arg1 (a2 / and :op1 (o2 / openness) :op2 (e / exit :poss (c2 / country :name (n3 / name :op1 "Britain")))))) :op2 (o3 / organization :name (n4 / name :op1 "EU")))
(w / work-01 :arg0 (o / organization :name (n / name :op1 "Binladen" :op2 "Group")) :time (d / date-entity :year (N / N-A)) :location (l / location :name (n2 / name :op1 "Grand" :op2 "Mosque")) :purpose (p / possible-01 :arg1 (h / host-01 :arg0 (o2 / organization) :arg1 (p2 / pilgrims :quant (m / many)))))
(a / agree-01 :arg0 (p / person :arg1-of (e / expert-01)) :arg1 (p2 / possible-01 :arg1 (l / lead-03 :arg0 (p3 / person :name (n / name :op1 "Black" :op2 "Friday-ul")) :arg2 (b / bid-03 :arg0 (p4 / person) :arg1 (e2 / expend-01 :arg0 (p5 / person))))))
(b / believe-01 :arg0 (p / person :arg0-of (s / specialize-01)) :arg1 (p2 / possible-01 :arg1 (c / cause-01 :arg0 (f / friday :arg1-of (b2 / black-05)) :arg1 (m / monetary-quantity :arg1-of (e / expend-01)))))
(o / obligate-01 :arg2 (d / demand-01 :arg0 (w / we) :degree (m / more)))
(n / need-01 :arg0 (w / we) :arg1 (d / demand-01 :arg0 (w2 / we) :degree (m / more)))
(s / say-01)
(m / multi-sentence :snt1 (f / focus-01 :arg1 (a / alcohol) :degree (v / very)) :snt2 (s / say-01 :arg0 (p / person :name (n / name :op1 "Stephen" :op2 "Thornton") :mod (e / exact) :arg0-of (h / have-org-role-91 :arg1 (o / organization :name (n2 / name :op1 "Kansas" :op2 "University" :op3 "Hospital")) :arg2 (d / director :mod (m2 / medicine)))) :arg1 (h2 / have-org-role-91 :arg0 (p2 / person) :arg1 (o2 / organization :name (n3 / name :op1 "Fox")) :arg2 (d2 / director :mod (m3 / medicine))) :location (l / location :name (n4 / name :op1 "Kansas" :op2 "City"))))
(s / say-01 :arg0 (p / person :quant (m / more-than :op1 6) :arg1-of (i / include-91 :arg2 (p2 / person :quant 10))) :arg1 (c / change-01 :arg0 (p3 / person) :arg1 (o / opine-01 :arg0 (p4 / person) :topic (p5 / person :name (n / name :op1 "Clinton")) :mod (n2 / negative))) :mod (m2 / most))
(a / and :op1 (b / build-01 :arg1 (r / rule :arg1-of (r2 / remarkable-02 :degree (q / quite))) :mod (q2 / quite)) :op2 (r3 / rule :mod (a2 / aranjand) :mod (a3 / aranjand)) :arg0-of (c / cause-01 :arg1 (m / much :degree (t / too) :domain (p / pressure-01) :location (c2 / country :location-of (p2 / put-01 :arg0 (p3 / person :arg0-of (m2 / migrate-01) :mod (t2 / this)) :arg1 (f / foot :part-of (w / we)) :arg2 (f2 / foot) :ord (o / ordinal-entity :value 1))))))
(v / vote-01 :arg0 (g / government-organization :name (n / name :op1 "House" :op2 "of" :op3 "Parliament")) :arg1 (a / and :op1 (p / person :name (n2 / name :op1 "Ilie" :op2 "Sarbu") :arg0-of (h / have-org-role-91 :arg1 (o / organization) :arg2 (m / minister :mod (p2 / prime)))) :op2 (p3 / person :name (n3 / name :op1 "Victor" :op2 "Ponta") :arg0-of (h2 / have-org-role-91 :arg1 (c / country) :arg2 (m2 / minister :mod (p4 / prime)))) :op3 (p5 / person :name (n4 / name :op1 "Victor" :op2 "Ponta") :arg0-of (h3 / have-org-role-91 :arg1 (o2 / organization :name (n5 / name :op1 "Autoritatii" :op2 "Audit" :op3 "of" :op4 "the" :op5 "Court" :op6 "of" :op7 "Auditors")) :arg2 (m3 / minister :mod (p6 / prime))))))
(u / upset-01 :arg0 (c / city :name (n / name :op1 "Washington")) :arg1 (p / person) :mod (a / also))
(s / sense-02 :arg1 (p / presence :poss (o / organization :name (n / name :op1 "TVR"))) :mod (c / common) :arg1-of (c2 / cause-01 :arg0 (s2 / subject-01 :arg1 (n2 / no-one :polarity -) :arg2 (o2 / or :op1 (a / attack-01 :arg1-of (p2 / personal-02)) :op2 (s3 / something) :arg1-of (r / resemble-01 :arg2 (t / this))))))
(p / possible-01 :arg1 (a / and :op1 (a2 / add-02 :arg0 (t / they) :arg2 (p2 / person :name (n / name :op1 "comunei" :op2 "Schitu") :arg0-of (h / have-org-role-91 :arg2 (m / mayor)))) :op2 (l / lead-02 :arg0 (p3 / person :name (n2 / name :op1 "Mihai" :op2 "Mihalache")))))
(c / criticize-01 :arg0 (p / person :arg0-of (l / lead-02 :arg1 (p2 / political-party :name (n / name :op1 "Labour" :op2 "Party")))) :arg1 (d / decide-01 :arg0 (p3 / person :arg0-of (l2 / lead-02 :arg1 (p4 / political-party))) :arg1 (s / stab-01 :arg0 (p5 / person) :arg1 (p6 / park :name (n2 / name :op1 "N-A") :mod (n3 / nation) :mod (c2 / country :name (n4 / name :op1 "England"))) :time (d2 / during :op1 (a / anniversary :poss (a2 / anniversary :ord (o / ordinal-entity :value 75) :poss (b / battle-01 :arg0 (c3 / country) :arg1 (c4 / country) :ord (o2 / ordinal-entity :value 75))))))) :time (m / meanwhile) :arg1-of (c5 / cause-01 :arg0 (a3 / and :op1 (c6 / criticize-01 :arg0 (p7 / person :arg0-of (h / have-org-role-91 :arg2 (l3 / legislate-01 :mod (c7 / conservative))) :quant (s2 / some))) :op2 (m2 / make-18 :arg0 (p8 / person) :arg1 (h2 / headline)))))
(s / say-01 :arg0 (o / organization :name (n / name :op1 "Atlanta" :op2 "Fed")) :arg1 (e / expect-01 :arg0 (p / person :quant (f / few) :arg1-of (i / include-91 :arg2 (p2 / person :quant 2015 :arg1-of (i2 / include-91 :arg2 (p3 / person :quant 2015 :arg1-of (i3 / include-91 :arg2 (p4 / person :quant 2015 :arg1-of (i4 / include-91 :arg2 (p5 / person :quant 2015 :arg2-of (v / value-01))))))))) :arg1 (s2 / situation :arg1-of (i5 / include-91 :arg2 (p6 / percentage-entity :value (N / N-A)))) :arg3 (p7 / percentage-entity :value (N2 / N-A)) :concession (e2 / even-if :op1 (p8 / product-of :op1 (p9 / percentage-entity :value (N3 / N-A)) :op2 (p10 / percentage-entity :value (N4 / N-A)))))))
(h / harm-01 :arg0 (y / you) :arg1 (y2 / you) :degree (m / more) :condition (b / bring-01 :arg0 (y3 / you) :arg1 (p / person :arg0-of (p2 / play-01)) :arg2 (p3 / person :arg0-of (p4 / play-01) :arg1-of (n / need-01 :polarity -))))
(t / tell-01 :arg0 (p / person :name (n / name :op1 "Andrew" :op2 "Bingham") :arg0-of (h / have-org-role-91 :arg2 (m / mp)) :arg0-of (h2 / have-org-role-91 :arg2 (m2 / mp))) :arg1 (a / and :op1 (' / '' :arg1 (s / station :mod (r / radio :mod (p2 / public)))) :op2 (r2 / resembles :arg1 (o / opponent :mod (c / commerce)) :arg1-of (i / increase-01))) :arg2 (p3 / person :arg0-of (h3 / have-org-role-91 :arg1 (c2 / company :name (n2 / name :op1 "BBC")) :arg2 (b / boss))) :mod (a2 / also))
(a / appeal-02 :arg0 (p / person :name (n / name :op1 "Viorel" :op2 "Blaj") :arg0-of (d / depend-01 :polarity -) :arg0-of (d2 / depend-01 :polarity -)) :arg1 (a2 / and :op1 (o / organization :name (n2 / name :op1 "PSD")) :op2 (p2 / pnl)) :arg2 (a3 / and :op1 (c / cease-01 :arg0 (a4 / and) :arg1 (i / infighting)) :op2 (s / shift-01 :arg0 (a5 / and) :arg1 (a6 / agenda) :arg2 (t / treaty :name (n3 / name :op1 "N-A")))))
(s / say-01 :arg0 (p / person :name (n / name :op1 "Dedu")) :arg1 (p2 / possible-01 :arg1 (h / host-01 :arg0 (p3 / person :mod (c / country :name (n2 / name :op1 "N-A"))) :arg1 (e / event :arg1-of (m / major-02)))) :medium (v / view-01 :arg0 (i / i)))
(a / and :op1 (s / struggled :arg1 (p / person :arg0-of (p2 / play-01 :arg1 (t / temporal-quantity :quant (N / N-A) :unit (y / year)))) :arg2 (p3 / problem :topic (a2 / ankle :arg0 (p4 / person)))) :op2 (f / fail-01 :arg1 (p5 / person) :arg2 (l / leave-11 :arg0 (p6 / person) :arg1 (c / country :name (n / name :op1 "Wales")) :time (s2 / summer))))
(i / insult-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg3 (j / judge-01))) :arg1 (p2 / person :arg0-of (h2 / have-org-role-91 :arg3 (j2 / judge-01))) :manner (a / amr-unknown))
(i / include-01 :arg1 (a / and :op1 (p / product :mod (c / continent :name (n / name :op1 "N-A"))) :op2 (f / fruit) :op3 (p2 / product :mod (o / other)) :op4 (p3 / product :mod (o2 / other))) :arg2 (p4 / product :arg1-of (f2 / fresh-04)))
(i / include-01 :arg1 (a / and :op1 (h / herbs) :op2 (f / fruit) :op3 (p / product :mod (c / continent :name (n / name :op1 "N-A")) :mod (o / other))) :arg2 (p2 / product :arg1-of (f2 / fresh-04)))
(h / have-03 :arg0 (p / person :mod (c / country :name (n / name :op1 "N-A"))) :arg1 (a / area :location-of (p2 / parking :arg1 (a2 / and :op1 (s / shop) :op2 (r / restaurant) :mod (o / other)))))
(h / have-03 :arg0 (l / lax-c) :arg1 (a / area :mod (p / parking :mod (c / common)) :prep-with (a2 / and :op1 (s / shop) :op2 (r / restaurant) :mod (o / other))))
(a / and :op1 (r / rise-01 :arg1 (r2 / rate :mod (i / interest))) :op2 (a2 / and :op1 (i2 / increase-01 :arg1 (t / thing :arg2-of (v / value-01 :arg1 (m / market :arg1-of (r3 / rise-01))))) :op2 (i3 / increase-01 :arg1 (e / economy) :arg4 (r4 / recession-02))))
(r / reveal-01 :arg1 (o / organization :name (n / name :op1 "European" :op2 "Union")) :arg2 (w / we) :arg3 (a / and :op1 (c / construct-01 :arg1 (a2 / and :op1 (a3 / anatomical) :op2 (c2 / construct-01 :mod (o2 / outdate))) :op2 (c3 / construct-01 :mod (o3 / outdate)))) :prep-in (c4 / crisis :mod (t / this)))
(j / joke-01 :arg2 (j2 / joke-01))
(s / say-01 :arg0 (p / person :arg1-of (i / include-91 :arg2 (p2 / person :arg0-of (r / republican)) :arg3 (p3 / percentage-entity :value (N / N-A)) :time (w / week :mod (l / last)))) :arg1 (o / or :op1 (' / '' :arg0 (p4 / person :arg1-of (i2 / include-91 :arg2 (p5 / person) :arg3 (p6 / percentage-entity :value 67))) :arg1 (o2 / or :op1 ('2 / '') :op2 (p7 / pleased :mod ('3 / '')))) :op2 (w2 / won :arg0 (p8 / person) :arg1 (r2 / race)) :condition (w3 / win-01 :arg0 (p9 / person :name (n / name :op1 "Trump")) :arg1 (r3 / race) :arg2 (n2 / nominate-01))) :time (w4 / week :mod (l2 / last)))
(r / resentment :quant (m / much) :arg1-of (i / increase-01 :time (a / after :op1 (n / now) :quant (t / temporal-quantity :quant (N / N-A) :unit (w / week) :mod (e / even)))))
(c / contrast-01 :arg1 (m / move-01 :arg1 (w / we) :arg3-of (f / free-04) :arg3-of (f2 / free-04)) :arg2 (e / e :arg0 (e2 / e :frequency (e3 / every) :accompanier (p / problem :poss (s / she)))))
(s / say-01 :arg0 (p / person :name (n / name :op1 "Jeffrey" :op2 "Lacker") :arg0-of (h / have-org-role-91 :arg1 (o / organization :name (n2 / name :op1 "Federal" :op2 "Reserve" :op3 "Bank" :op4 "of" :op5 "Richmond")) :arg2 (p2 / president))) :arg1 (h2 / have-03 :arg0 (o2 / organization :name (n3 / name :op1 "the" :op2 "Fed")) :arg1 (h3 / history :topic (r / respond-01 :arg0 (o3 / organization) :arg1 (c / change-01 :arg0 (o4 / organization) :arg1 (m / market :mod (f / finance) :arg0-of (c2 / connect-01 :polarity - :arg1 (f2 / foundation :mod (e / economy)) :arg1-of (s2 / seem-01)))))) :time (m2 / month :mod (t / this))))
FAILED_TO_PARSE#Couldn't convert to full AMR graph.
(s / send-01 :arg1 (c / channel :name (n / name :op1 (m / matinala)) :mod (m2 / matinala)) :arg2 (c2 / capital) :time (a / after :op1 (d / defeat-01 :arg1 (p / person :name (n2 / name :op1 "Tony" :op2 "Abbott")) :arg2 (p2 / person :name (n3 / name :op1 "Malcolm" :op2 "Turnbull")))))
(m / multi-sentence :snt1 (c / contrast-01 :arg1 (w / will-02 :polarity - :arg0 (p / person :mod (c2 / country :name (n / name :op1 "N-A"))) :arg1 (m2 / move-01 :arg0 (p2 / person) :arg1 (m3 / movement-07 :arg3-of (f / free-04)) :location (a / area :location (l / location :name (n2 / name :op1 "Schengen"))))) :arg2 (n3 / need-01 :arg1 (c3 / change-01 :arg1 (r / rule :name (n4 / name :op1 (' / '')) :arg1-of (c4 / create-01 :time (e / era :arg1-of (d / differ-02))))) :time (n5 / now))) :snt2 (a2 / and :op1 (c5 / create-01 :arg1 (s / schengen :arg1-of (c6 / create-01 :time (e2 / era :arg1-of (d2 / differ-02)))) :time (n6 / now)) :op2 (a3 / adapt-01 :polarity - :arg1 (r2 / rule) :arg2 (s2 / situation) :time (n7 / now))))
(c / continue-01 :arg0 (a / and :op1 (p / person :arg0-of (h / have-rel-role-91 :arg1 (a2 / and :op1 (p2 / person :arg0-of (h2 / have-rel-role-91 :arg1 (l / location :name (n / name :op1 "Crine")) :arg2 (p3 / parent))) :op2 (p4 / person :arg0-of (h3 / have-rel-role-91 :arg1 (p5 / person) :arg2 (p6 / parent))) :op3 (p7 / person :arg0-of (h4 / have-rel-role-91 :arg1 (p8 / person) :arg2 (p9 / parent))) :op4 (p10 / person :arg0-of (h5 / have-rel-role-91 :arg1 (p11 / person) :arg2 (p12 / parent))) :op5 (p13 / person :arg0-of (h6 / have-rel-role-91 :arg1 (p14 / person) :arg2 (p15 / parent)))))) :op2 (p16 / person :arg0-of (h7 / have-rel-role-91 :arg1 (p17 / person) :arg2 (p18 / parent))) :op3 (p19 / person :arg0-of (h8 / have-rel-role-91 :arg1 (p20 / person) :arg2 (p21 / parent)))) :arg1 (s / search-01 :arg0 (a3 / and) :manner (s2 / separate-02) :location (l2 / location :location-of (p22 / possible-01 :arg1 (b / be-02 :arg1 (a4 / and))))))
(o / obligate-01 :arg1 (t / they) :arg2 (c / concern-01 :quant 1 :mod (o2 / only) :purpose (p / play-11 :arg0 (t2 / they) :arg2 (f / football) :mod (a / as-well))))
(h / have-03 :arg0 (t / they) :arg1 (v / view :mod (n / negative)) :quant (a / about :op1 3))
(h / have-03 :arg0 (t / they) :arg1 (v / view :mod (n / negative)) :quant (a / about :op1 3))
(d / deploy-01 :arg0 (a / and :op1 (p / person :quant 10 :arg0-of (h / have-rel-role-91 :arg1 (p2 / person) :arg2 (k / kid))) :op2 (p3 / person :quant 5 :arg0-of (h2 / have-rel-role-91 :arg1 (p4 / person) :arg2 (k2 / kid))) :op3 (p5 / person :quant 5 :arg0-of (h3 / have-rel-role-91 :arg1 (p6 / person) :arg2 (k3 / kid))) :op4 (p7 / person :quant 5 :arg0-of (h4 / have-rel-role-91 :arg1 (p8 / person) :arg2 (c / child))) :op5 (p9 / person :arg0-of (h5 / have-rel-role-91 :arg1 (p10 / person) :arg2 (c2 / child))) :op6 (p11 / person :arg0-of (h6 / have-rel-role-91 :arg1 (p12 / person) :arg2 (c3 / child))) :op6 (p13 / person :arg0-of (h7 / have-rel-role-91 :arg1 (p14 / person) :arg2 (c4 / child))) :op6 (p15 / person :arg0-of (h8 / have-rel-role-91 :arg1 (p16 / person) :arg2 (c5 / child))) :op7 (p17 / person :arg0-of (h9 / have-rel-role-91 :arg1 (p18 / person) :arg2 (c6 / child))) :op7 (p19 / person :arg0-of (h10 / have-rel-role-91 :arg1 (p20 / person) :arg2 (c7 / child)))) :arg1 (p21 / person :arg0-of (h11 / have-03 :arg1 (o / opportunity)) :arg0-of (h12 / have-03 :arg1 (o2 / opportunity :arg1-of (r / record-01) :location (a2 / along :op1 (p22 / professional))))) :time (s / stage :time (d2 / date-entity :day 30 :month 11 :year (N / N-A))))
(a / and :op1 (h / hold-01 :arg0 (l / location :name (n / name :op1 "Cinema" :op2 "City")) :arg1 (p / preselection :arg0-of (e / elect-01 :arg1 (p2 / person :quant 10 :arg0-of (h2 / have-rel-role-91 :arg1 (g / girl :quant 10) :arg2 (c / child))))) :time (s / stage :ord (o / ordinal-entity :value 1) :part-of (c2 / contest)) :time (s2 / stage :ord (o2 / ordinal-entity :value 1) :part-of (c3 / contest))) :op2 (h3 / have-03 :arg0 (b / boy :arg1-of (i / include-91 :arg2 (b2 / boy :quant 5)) :arg0-of (h4 / have-03 :arg1 (o3 / opportunity))) :arg1 (o4 / opportunity :purpose (g2 / give-01 :arg1 (t / thing :arg0-of (e2 / evidence-01 :arg1 (s3 / studio :arg1 (p3 / professional))))))))
(b / believe-01 :arg0 (i / i) :arg1 (i2 / increase-01 :arg0 (i3 / increase-01 :arg1 (r / rate :mod (t / this))) :arg1 (d / determine-01 :arg0 (i4 / increase-01 :arg1 (r2 / rate :mod (t2 / this)) :arg1-of (n / near-02 :arg2 (b2 / between :op1 (b3 / bond :mod (s / short-term)) :op2 (o / one :arg1-of (l / long-03))))))))
(c / contrast-01 :arg2 (r / raise-01 :arg0 (t / thing :arg1-of (a / announce-01)) :arg1 (i / issue-02 :arg0 (p / possible-01 :arg1 (b / become-01 :arg1 (c2 / company :name (n / name :op1 "Facebook")) :arg2 (f / friendly-01 :arg1 (c3 / company) :degree (l / less)))))))
(c / contrast-01 :arg2 (r / raise-01 :arg0 (a / announce-01 :arg0 (h / he)) :arg1 (i / issue-02 :arg0 (p / possible-01 :arg1 (b / become-01 :arg1 (c2 / company :name (n / name :op1 "Facebook")) :arg2 (p2 / place :arg1-of (f / friendly-01 :degree (l / less))))))))
(s / say-01 :arg0 (p / person :name (n / name :op1 "Chris" :op2 "Ritchey") :arg0-of (h / have-org-role-91 :arg1 (o / organization :name (n2 / name :op1 "Gwinnett" :op2 "Medical" :op3 "Center") :location (r / room :mod (e / emergency)) :arg0-of (t / treat-01 :arg1 (p2 / person) :location (o2 / outside :op1 (c / city :name (n3 / name :op1 "Atlanta") :location (o3 / outside :op1 (c2 / city :name (n4 / name :op1 "Atlanta"))))))))) :arg1 (a / age-01 :arg1 (p3 / person) :arg2 (t2 / temporal-quantity :quant (N / N-A) :unit (y / year))) :li 14179)
(r / rise-01 :arg1 (p / profit-01) :arg2 (p2 / percentage-entity :value (N / N-A)) :arg4 (m / monetary-quantity :quant 12.3 :unit (d / dollar :mod (c / country :name (n / name :op1 "N-A")))))
(a / and :op1 (i / injure-01 :arg1 (p / policeman :quant (f / far :degree (s / so)))) :op2 (t / take-01 :arg0 (s2 / service :mod (a2 / ambulance)) :arg1 (c / child :quant 2 :arg1-of (i2 / injure-01) :arg1-of (i3 / injure-01 :time (a3 / after :op1 (t2 / throw-01 :arg1 (p2 / policeman) :arg2 (f2 / fence :purpose (s3 / security))))))))
(c / contrast-01 :arg1 (i / indicted :domain (p / person :arg0-of (h / head-01 :arg1 (o / organization :name (n / name :op1 "Office" :op2 "Narciza" :op3 "Nedelcu")) :time (f / former)) :arg0-of (h2 / head-01 :arg1 (o2 / organization) :time (f2 / former)))) :arg2 (i2 / indicted :domain (s / settlement :mod (s2 / service :arg2-of (a / accuse-01)) :mod (o3 / other)) :time (c2 / case :mod (t / this))) :concession (c3 / carry-out-03 :polarity - :arg1 (w / work-01)))
(a / and :op1 (t / try-02 :arg1 (a2 / and :op1 (p / person :arg0-of (h / head-01 :arg1 (o / organization :name (n / name :op1 "Office")) :time (f / former)) :arg0-of (h2 / head-01 :arg1 (o2 / organization) :time (f2 / former))) :op2 (p2 / person :name (n2 / name :op1 "Narciza" :op2 "Nedelcu") :arg0-of (h3 / have-org-role-91 :arg1 (o3 / organization :name (n3 / name :op1 "OCPI")) :time (f3 / former))) :op3 (o4 / organization :name (n4 / name :op1 "OCPI")) :op4 (p3 / person :arg1-of (e / employ-01 :time (f4 / former)))) :arg2 (t2 / try-02 :arg1 (o5 / or)) :time (b / before :op1 (n5 / now) :quant (f5 / few :op1 (t3 / temporal-quantity :quant (N / N-A) :unit (d / day))))) :op2 (t4 / try-02 :arg1 (p4 / person) :arg2 (a3 / and :op1 (c / charge-05 :arg1 (p5 / person)) :op2 (c2 / charge-05 :arg1 (p6 / person) :arg2 (c3 / company)))) :concession (c4 / carry-out-03 :polarity - :arg1 (w / work-01)))
(a / airs :arg0 (p / person :arg0-of (h / have-rel-role-91 :arg1 (c / comedy) :arg2 (f / friend))) :location (c2 / comedy) :time (s / start-01 :arg1 (f2 / finish-01 :arg0 (p2 / person) :arg1 (e / episodes :quant 236 :mod (a2 / all)))))
(p / person :arg0-of (h / have-rel-role-91 :arg1 (c / comedy) :arg2 (f / friend)) :mod (c2 / central) :arg1-of (b / begin-01 :time (b2 / begin-01 :arg1 (e / end-01))))
(a / and :op1 (p / person :name (n / name :op1 "Nhaijah" :op2 "Russell") :arg0-of (h / have-org-role-91 :arg1 (g / girl :mod (s / six-year-old)) :arg2 (g2 / girl :mod (s2 / six-year-old)) :time (r / recent))) :op2 (c / come-01 :arg1 (g3 / girl) :arg4 (r2 / room :mod (e / emergency) :purpose (t / treat-03))))
(d / difficult :domain (a / answer-01 :arg1 (t / thing :manner-of (n / note-01 :arg1 (b / batsman :arg1 (m / match-03 :arg1-of (t2 / test-01)))))))
(a / and :op1 (r / receive-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (g / government-organization :name (n / name :op1 "Ministry" :op2 "of" :op3 "Health")) :arg2 (' / ''))) :arg1 (p2 / person :arg0-of (h2 / have-org-role-91 :arg1 (g2 / government-organization) :arg3 ('2 / ''))) :arg2 (g3 / government-organization :name (n2 / name :op1 "Ministry" :op2 "of" :op3 "Health"))) :op2 (f / follow-02 :arg0 (p3 / person) :arg1 (l / lei :quant (a2 / around :op1 14))))
(( / ( :( (n / name) :op1 "Romania")
(p / prioritize-01 :arg1 (t / thing :arg2-of (r / respond-01) :mod (i / immediate)) :time (e / era :mod (t2 / this) :arg1-of (d / dominate-01 :arg0 (n / network :mod (s / social) :arg1-of (d2 / dominate-01 :arg0 (n2 / network :mod (s2 / social))) :arg1-of (d3 / dominate-01 :arg0 (n3 / network :mod (s3 / social)))))) :frequency (o / often) :time (b / before :op1 (c / contact-01 :arg0 (n4 / network) :arg1 (n5 / network))))
(p / prioritize-01 :arg1 (n / nature :mod (i / immediate) :poss (r / respond-01)) :frequency (o / often) :time (b / before :op1 (c / contact-01 :arg0 (m / media :mod (s / social) :arg1-of (d / dominate-01 :arg0 (m2 / media :mod (s2 / social))) :arg1-of (d2 / dominate-01 :arg0 (m3 / media :mod (s3 / social))) :arg1-of (d3 / dominate-01 :arg0 (m4 / media :mod (s4 / social)))) :arg1 (e / emphasize-01 :arg1 (s5 / style)))))
(c / cost-01 :arg1 (m / monetary-quantity :quant 7,000 :unit (e / euro)) :arg2 (t / temporal-quantity :quant (N / N-A) :unit (y / year)) :purpose (m2 / monetary-quantity :quant 7,000 :unit (e2 / euro)))
(h / have-concession-91 :arg1 (d / difficult :polarity - :domain (p / place :mod (p2 / parking)) :mod (u / usual)) :arg2 (l / likely-01 :arg1 (b / become-01 :arg1 (s / store) :arg2 (t / tangled))))
(c / cause-01 :arg1 (a / age-01 :arg1 (i / it) :arg2 (t / temporal-quantity :quant (N / N-A) :unit (m / minute) :mod (o / only))))
(m / multi-sentence :snt1 (h / hit-01 :arg0 (i / information :topic (a / and :op1 (l / leaflet) :op2 (n / nesimtirea) :op3 (c / controllers) :op4 (b / bonus) :op5 (b2 / bonus))) :arg1 (h2 / he) :prep-without (h3 / hit-01 :arg0 (i2 / information :topic (a2 / and :op1 (l2 / leaflet) :op2 (n2 / nesimtirea) :op3 (c2 / controllers))) :arg1 (h4 / he))) :snt2 (' / '' :mode (e / expressive)))
FAILED_TO_PARSE#Number of opening and closing brackets doesn't match.
FAILED_TO_PARSE#Number of opening and closing brackets doesn't match.
(c / cup)
(f / free-03 :arg1 (s / storm) :time (w / weekend :mod (t / this)) :arg1-of (c / cause-01 :arg0 (w2 / win-01 :arg0 (o / or :op1 (o2 / organization :name (n / name :op1 "North" :op2 "Queensland" :op3 "Cowboys")) :op2 (o3 / organization :name (n2 / name :op1 "Cronulla" :op2 "Sharks"))) :arg1 (r / right-05 :arg1 (o4 / or) :arg2 (p / play-11 :arg0 (o5 / or) :arg2 (h / home)) :mod (e / either)) :arg2 (f2 / final :mod (f3 / final) :arg1-of (s2 / start-01 :time (m / morning :mod (n3 / next)))))))
(t / trade-01 :mod (t2 / this) :time (w / week :mod (l / last)) :arg1-of (c / cause-01 :arg0 (o / or :op1 (e / earn-01 :arg0 (t3 / they) :arg1 (r / right-05 :arg1 (t4 / they) :arg2 (p / play-11 :arg0 (t5 / they) :arg2 (o2 / or :op1 (h / home) :op2 (l2 / location :name (n / name :op1 "North" :op2 "Queensland"))) :location (o3 / or :op1 (h2 / home) :op2 (c2 / cowboys :mod (n2 / next) :mod (n3 / next))))) :op2 (p2 / put-01 :arg0 (t6 / they) :arg1 (t7 / ticket) :arg2 (s / sell-01 :arg1 (t8 / ticket) :arg1-of (s2 / start-01 :time (m / morning :mod (n4 / next)))))))))
(f / find-01 :arg0 (i / it) :arg1 (a / and :op1 (p / person :arg0-of (v / vote-01) :quant (m / most)) :op2 (p2 / person :name (n / name :op1 "Biden" :op2 "Sanders") :arg0-of (h / have-03 :arg1 (q / quality :mod (l / leadership :arg1-of (s / strong-02)))))))
(s / see-01 :arg0 (p / person :arg0-of (v / vote-01) :quant (m / most)) :arg1 (a / and :op1 (p2 / person :name (n / name :op1 "Clinton")) :op2 (p3 / person :name (n2 / name :op1 "Sanders")) :op3 (p4 / person :name (n3 / name :op1 "Biden")) :prep-as (q / quality :mod (l / leadership :arg1-of (s2 / soft-02)))))
(m / multi-sentence :snt1 (r / result-01 :arg2 (r2 / result-01 :arg2 (r3 / result-01))) :snt2 (d / devote-01 :arg1 (e / event :arg1-of (n / nice-01)) :arg2 (a / and :op1 (p / pasionatilor :manner (e2 / exclusive-02)) :op2 (s / specialistilor :location (a2 / area :mod (t / this)))) :time (y / year :mod (t2 / this))))
(a / and :op1 (t / tell-01 :arg1 (p / possible-01 :arg1 (g / give-01 :arg0 (i / i) :arg1 (s / sheep :quant (s2 / some)) :arg2 (f / find-01 :arg0 (p2 / person) :arg1 (b / boy :location (v / village)))) :condition (w / want-01 :arg0 (p3 / person) :arg1 (r / return-01 :arg1 (p4 / person) :arg4 (v2 / village :poss (p5 / person)))))) :op2 (p6 / possible-01 :arg1 (g2 / give-01 :arg0 (i2 / i) :arg1 (s3 / sheep :quant (s4 / some)) :arg2 (f2 / find-01 :arg0 (i3 / i) :arg1 (b2 / boy :location (v3 / village)))) :condition (w2 / want-01 :arg0 (p7 / person) :arg1 (r2 / return-01 :arg1 (p8 / person) :arg4 (v4 / village :poss (p9 / person)))) :condition (w3 / want-01 :arg0 (p10 / person) :arg1 (r3 / return-01 :arg1 (p11 / person) :arg4 (v5 / village :poss (p12 / person))))))
(s / say-01 :arg0 (p / person :name (n / name :op1 "Lopez")) :arg1 (t / tell-01 :arg0 (p2 / person :arg0-of (h / have-rel-role-91 :arg1 (c / child) :arg2 (c2 / child))) :arg1 (a / and :op1 (a2 / access-01 :arg1 (p3 / product) :arg1-of (f / frequent-02 :degree (m / more))) :op2 (a3 / access-01 :arg1 (p4 / product)) :arg2-of (f2 / fortunate-01 :polarity -)) :arg2-of (f3 / fortunate-01 :polarity -)) :arg2 (p5 / publication :name (n2 / name :op1 "CNN")) :arg2-of (f4 / fortunate-01 :polarity -))
(t / tell-01 :arg0 (p / person :name (n / name :op1 "Lopez") :arg0-of (h / have-rel-role-91 :arg1 (c / child) :arg2 (c2 / child))) :arg1 (a / and :op1 (a2 / access-01 :arg1 (p2 / product :mod (t2 / this)) :arg1-of (f / frequent-02)) :op2 (a3 / access-01 :arg0 (c3 / child) :arg1 (p3 / product)) :arg2-of (f2 / fortunate-01 :polarity -)) :arg2-of (f3 / fortunate-01 :polarity -) :arg2-of (f4 / fortunate-01 :polarity -) :arg2-of (f5 / fortunate-01 :polarity -))
(b / bearings :arg0 (a / and :op1 (s / street) :op2 (b2 / bulevarde)) :arg1 (n / name :poss (h / he)) :location (c / country :name (n2 / name :op1 "Romania")))
(c / contrast-01 :arg1 (p / possible-01 :arg1 (e / experience-01 :arg0 (t / team :poss (p2 / person :name (n / name :op1 "Alastair" :op2 "Cook"))) :degree (l / less) :compared-to (b / before :op1 (n2 / now) :quant (l2 / less-than :op1 (t2 / temporal-quantity :quant (N / N-A) :unit (y / year))))) :arg1-of (p3 / possible-01) :time (b2 / before :op1 (n3 / now) :quant (l3 / less-than :op1 (t3 / temporal-quantity :quant (N2 / N-A) :unit (y2 / year))))) :arg2 (h / have-03 :arg0 (t4 / team) :arg1 (a / and :op1 (a2 / attitude :mod (p4 / positive)) :op2 (a3 / attitude :mod (p5 / positive)))))
(s / suspend-01 :arg0 (l / location :name (n / name :op1 "Budapest")) :arg1 (c / cross-02 :arg1 (b / border)) :source (p / person :name (n2 / name :op1 "Duke-Horgos")) :duration (t / temporal-quantity :quant (N / N-A) :unit (d / day)) :time (w / wake-up-02 :arg1 (i / incident :mod (w2 / wednesday))))
(s / say-01 :arg0 (p / person :arg0-of (h / head-01 :arg1 (g / group :mod (p2 / parliament) :mod (p3 / parliament) :mod (p4 / parliamentary)))) :arg1 (r / receive-01 :arg0 (p5 / person :arg0-of (h2 / head-01 :arg1 (g2 / group :quant 7 :arg0-of (o / oppose-01)))) :arg1 (m / message :medium (t / text) :topic (p6 / phone :arg1-of (m2 / mobile-02))) :arg0-of (w / warn-01 :arg1 (d / disrupt-01 :polarity - :arg0 (p7 / person) :arg1 (s2 / speech) :manner (m3 / mr :arg0 (p8 / person) :arg1 (s3 / speak-01))))))
(s / say-01 :arg0 (p / person :arg0-of (h / head-01 :arg1 (o / organization :name (n / name :op1 "Movement" :op2 "for" :op3 "Democratic") :mod (p2 / parliament)))) :arg1 (a / and :op1 (c / change-01 :arg0 (p3 / person :arg0-of (h2 / head-01 :arg1 (o2 / organization :mod (p4 / parliament)))) :arg1 (m / message :medium (t / text) :poss (p5 / person)) :medium (p6 / phone :arg1-of (m2 / mobile-02) :poss (p7 / person))) :op2 (w / warn-01 :arg0 (p8 / person) :arg1 (a2 / and :op1 (r / receive-01 :arg0 (p9 / politician :quant 7 :arg0-of (o3 / oppose-01)) :arg1 (p10 / phone :arg1-of (m3 / mobile-02) :poss (p11 / politician))) :op2 (w2 / warn-01 :arg0 (p12 / politician) :arg1 (d / disrupt-01 :polarity - :arg0 (s2 / speak-01 :arg0 (p13 / person :name (n2 / name :op1 "Mugabe"))) :arg1 (s3 / speech)))))))
(m / multi-sentence :snt1 (c / cause-01 :arg1 (t / try-01 :arg0 (y / you) :arg1 (d / do-02 :arg0 (y2 / you) :arg1 (s / something :arg1-of (d2 / differ-02))) :condition (t2 / try-01 :arg0 (y3 / you) :arg1 (d3 / do-02 :arg0 (y4 / you) :arg1 (s2 / something :arg1-of (d4 / differ-02)))))) :snt2 (e / example :quant 2 :domain (t3 / this) :arg1-of (c2 / come-01 :arg4 (m2 / mind) :time (a / already) :arg1-of (s3 / say-01 :arg0 (p / person :name (n / name :op1 "Bingham"))))))
(w / want-01 :arg0 (w2 / we) :arg1 (g / get-05 :arg1 (w3 / we) :arg2 (o / out) :arg1-of (q / quick-02 :degree (m / most) :compared-to (p / possible-01 :arg1 (g2 / get-05) :prep-in (s / situation :mod (t / this))))))
(c / come-01 :arg1 (p / person :quant 1 :arg1-of (c2 / come-01 :arg4 (m / mind))) :arg4 (m2 / mind) :time (t / try-01 :arg0 (i / i) :arg1 (o / offer-01 :arg0 (i2 / i) :arg1 (m3 / mechanism :quant (s / several) :consist-of (a / adjust-01 :mod (p2 / psychological) :duration (l / long-03))))))
(c / contrast-01 :arg2 (p / possible-01 :arg1 (i / influence-01 :arg0 (h / he) :arg1 (d / develop-01 :mod (i2 / important) :arg0-of (a / affect-01 :arg1 (w / we) :arg1-of (p2 / possible-01) :arg1-of (p3 / possible-01))))))
(c / contrast-01 :arg2 (p / possible-01 :arg1 (i / influence-01 :arg0 (h / he) :arg1 (d / develop-01 :mod (i2 / important) :arg0-of (a / affect-01 :arg1 (w / we) :arg1-of (p2 / possible-01) :arg1-of (p3 / possible-01))))))
(c / contact-01 :arg0 (a / and :op1 (p / person :name (n / name :op1 "Ichim") :arg0-of (h / have-org-role-91 :arg1 (o / organization :name (n2 / name :op1 "Regional" :op2 "Centre" :op3 "for" :op4 "Disease" :op5 "Prevention")) :arg2 (d / director))) :op2 (p2 / person :arg0-of (h2 / have-org-role-91 :arg1 (o2 / organization :name (n3 / name :op1 "Regional" :op2 "Centre" :op3 "for" :op4 "Disease" :op5 "Prevention")) :arg2 (d2 / director))) :op3 (p3 / person :arg0-of (h3 / have-org-role-91 :arg1 (o3 / organization) :arg2 (d3 / director))) :op4 (p4 / person :arg0-of (h4 / have-org-role-91 :arg1 (o4 / organization) :arg2 (d4 / director))) :op5 (p5 / person :arg0-of (e / explain-01 :arg1 (d5 / desire-01 :arg0 (p6 / person) :arg1 (f / find-01 :arg0 (p7 / person) :arg1 (f2 / family :mod (b / biology) :arg1-of (h5 / have-org-role-91 :arg0 (p8 / person) :arg2 (m / member)))))))) :arg1 (p9 / person :source (c2 / country :name (n4 / name :op1 "Italy"))) :time (y / year :mod (t / this)))
(s / show-01 :arg0 (s2 / survey-01 :arg0 (s3 / survey-01 :arg0 (o / organization :name (n / name :op1 "Monmouth" :op2 "University") :arg1-of (c / conduct-01 :arg0 (o2 / organization :name (n2 / name :op1 "Monmouth" :op2 "University")))))) :arg1 (h / have-03 :arg0 (p / person :quant (m / multiple :op1 2 :mod (o3 / only))) :arg1 (v / view-01 :arg1 (e / estate :mod (r / real))) :mod (p2 / positive)) :time (b / before :op1 (a / announce-01 :arg0 (p3 / person) :arg1 (c2 / candidacy :poss (p4 / person) :location (m2 / mid-june)))))
(p / possible-01 :arg1 (c / call-01 :arg0 (w / we) :arg1 (a / and :op1 (p2 / person :name (n / name :op1 "Dave")) :op2 (a2 / agenda :poss (p3 / person :name (n2 / name :op1 "George")))) :arg2 (' / '') :mod (e / even)))
(d / decide-01 :arg0 (t / they) :mod (p / probable) :time (w / week :mod (n / next)))
(c / conclude-01 :arg0 (p / poll-01 :arg0 (o / organization :name (n / name :op1 "Quinnipiac")) :time (w / week :mod (l / last)) :location (s / state :name (n2 / name :op1 "Iowa"))) :arg1 (o2 / opine-01 :arg0 (p2 / person :arg1-of (i / include-91 :arg2 (p3 / person :arg0-of (h / have-org-role-91 :arg2 (g / general))) :arg3 (p4 / percentage-entity :value 60))) :arg1 (p5 / person :name (n3 / name :op1 "Trump")) :mod (f / favorable)))
(c / contrast-01 :arg2 (p / possible-01 :arg1 (n / notice-01 :arg0 (y / you) :arg1 (d / decrease-01 :arg1 (g / grow-01 :arg1 (g2 / grow-01 :arg1 (- / -lrb-))))) :time (n2 / now)))
(s / say-01 :arg0 (g / government-organization :arg0-of (g2 / govern-01)) :arg1 (a / approve-01 :arg0 (g3 / government-organization) :arg1 (s2 / strategy :mod (n / nation) :topic (a2 / and :op1 (' / '') :op2 (p / plan-01 :arg1 (a3 / act-02 :duration (t / temporal-quantity :quant (N / N-A) :unit (y / year)))))) :op3 (p2 / plan-01 :arg0 (g4 / government-organization) :arg1 ('2 / '' :arg0 (g5 / government-organization) :arg1 (p3 / phase :mod (e / effort :purpose (e2 / effort :purpose (m / modernise :arg1 (m2 / manage-01 :arg1 (t2 / territory :mod (n2 / nation))))))))) :arg1-of (c / conform-01 :arg2 (r / release-01 :arg1 (p4 / press)))))
(c / complain-01 :arg0 (i / i) :arg1 (i2 / it))
(p / play-01 :quant (m / many) :mod (i / indeed) :mod (i2 / indeed))
(n / need-01 :arg0 (w / we) :arg1 (c / cooked :mod (s / skilled) :domain (w2 / we)) :arg1-of (o / obvious-01))
(o / obligate-01 :arg2 (c / chef :mod (s / skilful) :domain (y / you)) :arg1-of (o2 / obvious-01))
(n / need-01 :arg0 (w / we) :arg1 (c / cooked :mod (s / skilled) :domain (w2 / we)) :arg1-of (o / obvious-01))
(c / contrast-01 :arg1 (r / remove-01 :polarity - :arg1 (q / quota) :mod (r2 / really)) :arg2 (a / allow-01 :mode (i / interrogative) :arg1 (r3 / raceasca :arg1 (s / subject) :degree (m / more)) :mod (o / only)))
(c / contrast-01 :arg1 (e / eliminate-01 :polarity - :arg1 (q / quota) :mod (r / really)) :arg2 (l / leave-17 :mode (i / interrogative) :arg1 (s / subject) :mod (j / just)))
(m / multi-sentence :snt1 (h / hope-01 :arg0 (i / i) :arg1 (h2 / have-03 :arg0 (i2 / i) :arg1 (m2 / memory :arg1-of (n / nice-01) :prep-with (t / they)))) :snt2 (c / cause-01 :arg0 (t2 / thing :quant (m3 / many :degree (s / so))) :arg1 (p / person :name (n2 / name :op1 "Crina") :arg0-of (h3 / have-org-role-91 :arg2 (c2 / confesses)))))
(a / and :op1 (a2 / allergic :arg1 (t / train-01 :arg2 (p / person :arg0-of (t2 / teach-01))) :degree (v / very)) :op2 (b / ban-01 :arg0 (t3 / train-01) :arg1 (h / he) :location (r / room :part-of (h2 / he))) :degree (v2 / very))
(u / use-01 :arg1 (p / person :arg0-of (v / vote-01 :arg1 (r / republican))) :arg2 (i / idea))
(a / and :op1 (c / close-01 :arg1 (b / border)) :op2 (w / walls :arg1 (w2 / wall) :location (a2 / area :location (l / location :name (n / name :op1 "Schengen")))))
(f / frustrate-01 :arg0 (r / reach-01 :arg0 (a / authority) :arg1 (c / culmi :mod (n / new))) :arg1 (f2 / frustrate-01))
(a / and :op1 (p / person :quant 2 :arg0-of (h / have-rel-role-91 :arg1 (i / i) :arg2 (p2 / parent))) :op2 (p3 / person :quant 2 :arg0-of (h2 / have-rel-role-91 :arg1 (i2 / i) :arg2 (f / father))) :domain (p4 / person :arg0-of (h3 / have-rel-role-91 :arg1 (i3 / i) :arg2 (p5 / parent))))
(l / leave-13 :arg0 (a / and :op1 (v / voice) :op2 (i / image :mod (a2 / animated))) :arg1 (d / doubt-01 :polarity - :arg1 (d2 / desire-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (o / organization :name (n / name :op1 "Amnesty" :op2 "International")) :arg2 (a3 / authority))) :arg1 (s / sell-01 :arg0 (p2 / person) :arg1 (w / weapon) :arg2 (r / regime :mod (r2 / repressive))) :location (o2 / organization :name (n2 / name :op1 "Defence" :op2 "and" :op3 "Security" :op4 "Equipment" :op5 "International") :location (p3 / province :name (n3 / name :op1 "N-A") :arg0-of (f / found-01 :arg1 (c / country)))))) :arg1-of (d3 / doubt-01 :polarity -))
(m / multi-sentence :snt1 (l / leave-11 :arg0 (a / and :op1 (v / voice) :op2 (i / image :mod (a2 / animated))) :arg1 (a3 / advert :mod (t / this)) :manner (l2 / live)) :snt2 (b / blade :arg0 (o / organization :name (n / name :op1 "Amnesty" :op2 "International")) :arg1 (d / desire-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (c / country :name (n2 / name :op1 "N-A")) :arg2 (a4 / authority))) :arg1 (s / sell-01 :arg0 (p2 / person) :arg1 (p3 / person :arg0-of (h2 / have-org-role-91 :arg1 (a5 / and :op1 (r / regime :mod (c2 / country)) :op2 (p4 / person :arg0-of (h3 / have-org-role-91 :arg1 (c3 / country) :arg2 (a6 / authority)))) :arg2 (a7 / and :op1 (d2 / defend-01) :op2 (s2 / security)) :manner (a8 / and :op1 (d3 / defend-01) :op2 (s3 / security)) :location (f / forest :location (c4 / city :name (n3 / name :op1 "London")))))))))
(l / leave-13 :arg0 (a / and :op1 (v / voice) :op2 (i / image :mod (a2 / animated))) :arg1 (d / doubt-01 :polarity - :arg1 (d2 / desire-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (o / organization :name (n / name :op1 "Amnesty" :op2 "International")) :arg2 (a3 / authority))) :arg1 (s / sell-01 :arg0 (p2 / person) :arg1 (r / regime :mod (r2 / repressive :mod (a4 / arm))) :arg2 (o2 / organization :name (n2 / name :op1 "Defence" :op2 "&" :op3 "Security" :op4 "Equipment" :op5 "International")) :path (o3 / organization :name (n3 / name :op1 "Defence" :op2 "&" :op3 "Security" :op4 "Equipment" :op5 "International") :location (p3 / province :name (n4 / name :op1 "N-A") :arg0-of (f / found-01 :arg1 (c / country)))))) :manner (l2 / live)))
(r / recommend-01 :arg1 (a / and :op1 (p / put-01 :arg0 (o / organization :name (n / name :op1 "EDF")) :arg1 (i / issue-02 :arg0 (s / stability :mod (f / finance))) :arg2 (p2 / place :ord (o2 / ordinal-entity :value 1) :mod (o3 / only)) :prep-in (c / case :arg1-of (m / major-02))) :op2 (s2 / say-01 :arg0 (o4 / organization) :arg1 (p3 / person :name (n2 / name :op1 "Adam" :op2 "S." :op3 "Posen") :arg0-of (h / have-org-role-91 :arg1 (o5 / organization) :arg2 (m2 / member) :time (f2 / former)) :arg0-of (h2 / have-org-role-91 :arg1 (o6 / organization) :arg2 (m3 / member) :time (f3 / former)) :arg0-of (h3 / have-org-role-91 :arg1 (o7 / organization) :arg2 (m4 / member) :time (f4 / former))))))
(v / view-01 :arg0 (i / institution :quant (a / all)) :arg1-of (c / coordinate-01) :mod (e / every) :purpose (d / deal-01 :arg2 (c2 / crisis :mod (r / refugee))))
(a / and :op1 (t / try-01 :arg0 (w / we) :arg1 (h / handle-01 :arg0 (w2 / we) :arg1 (c / crisis :mod (r / refugee)))) :op2 (v / view-01 :arg0 (i / institution :quant (a2 / all)) :arg1-of (c2 / coordinate-01)))
(c / contrast-01 :arg1 (p / provide-01 :polarity - :arg0 (t / they) :arg1 (t2 / thing :arg1-of (a / argue-01) :arg1-of (i / include-91 :arg2 (c2 / country :arg0-of (h / have-org-role-91 :arg1 (p2 / person :arg0-of (h2 / have-org-role-91 :arg2 (m / member))) :arg2 (m2 / member)))))) :arg2 (i2 / include-91 :arg1 (s / some) :arg2 (t3 / thing :arg1-of (k / know-02 :arg2 (p3 / produce-01 :arg1 (c3 / cigarette :mod (e / electronic))) :arg0-of (l / lead-01 :arg1 (p4 / produce-01 :arg1 (c4 / cigarette :mod (e2 / electronic))))) :quant (s2 / some) :arg1-of (i3 / include-91 :arg2 (t4 / thing :arg1-of (s3 / say-01 :arg0 (i4 / industry :mod (p5 / paper)) :mod (e3 / even)))))))
(m / multi-sentence :snt1 (t / terrible :domain (i / i)) :snt2 (h / hear-01 :polarity - :arg0 (y / you) :arg1 (n / nothing) :mod (j / just)))
(a / and :op1 (t / take-01 :arg1 (a2 / application) :time (u / until :op1 (d / date-entity :month 9 :day 30))) :op2 (w / want-01 :arg0 (p / person :arg0-of (w2 / want-01 :arg1 (a3 / ask-02 :arg0 (p2 / person) :arg1 (i / information :quant (m / more))))) :arg1 (o / or :op1 (a4 / address :mod (p3 / phone)) :op2 (a5 / address :mod (e / email)))))
(m / maintain-01 :arg0 (p / person :name (n / name :op1 "Clinton")) :arg1 (a / advantage :mod (a2 / and :op1 (w / woman) :op2 (m2 / modera?ilor))) :concession-of (r / reduce-01 :arg1 (a3 / advantage)))
(c / contrast-01 :arg1 (r / retains :arg0 (p / person :name (n / name :op1 "Clinton")) :arg1 (a / advantage) :arg2 (w / woman)) :arg2 (r2 / reduce-01 :arg1 (a2 / advantage)))
(g / give-01 :arg0 (w / wave-04 :arg1 (a / and :op1 (b / border-01 :arg1 (c / country :name (n / name :op1 "Greece")) :arg2 (c2 / country :name (n2 / name :op1 "Turkey"))) :op2 (b2 / border-01 :arg1 (c3 / country :name (n3 / name :op1 "Germany")) :arg2 (c4 / country)))) :arg1 (a2 / and :op1 (b3 / border-01 :arg1 (c5 / country) :arg2 (c6 / country)) :op2 (b4 / border-01 :arg1 (c7 / country) :arg2 (c8 / country))) :arg2 (a3 / and :op1 (b5 / border-01 :arg1 (c9 / country) :arg2 (c10 / country)) :op2 (b6 / border-01 :arg1 (c11 / country) :arg2 (c12 / country))))
(i / include-91 :arg3 1 :arg1 (t / team :mod (t2 / top) :arg1-of (k / knock :location (c / cup :mod (c2 / continent :name (n / name :op1 "N-A"))))) :arg2 (p / pool))
(h / have-purpose-91 :arg1 (l / leave-11 :arg1 (p / politics :mod (l2 / little))) :arg2 (a / and :op1 (g / gather :arg1 (p2 / politics)) :op2 (g2 / gather :arg1 (p3 / politics))))
(t / time :time-of (d / decide-01 :arg1 (r / rate :mod (i / interest)) :beneficiary (o / organization :name (n / name :op1 "US" :op2 "Federal" :op3 "Reserve"))))
(a / and :op1 (f / fall-01 :arg1 (r / rate :mod (e / employ-01 :polarity -)) :arg4 (p / percentage-entity :value (N / N-A)) :arg4 (p2 / percentage-entity :value (N2 / N-A)) :time (m / month :mod (l / last))) :op2 (b / believe-01 :arg0 (g / government-organization :name (n / name :op1 "Fed")) :arg1 (e2 / employ-01 :arg1 (p3 / person :mod (p4 / political-party :name (n2 / name :op1 "N-A"))) :degree (f2 / full))))
(r / receive-01 :arg0 (h / he) :arg1 (a / and :op1 (c / care-03 :arg0 (h2 / he) :arg1 (m / medicine)) :op2 (n / need-01 :arg0 (h3 / he) :arg1 (o / oxygen)) :time (b / before :op1 (t / take-01 :arg1 (o2 / oxygen) :arg3 (h4 / hospital)))))
(c / consider-01 :arg1 (o / or :op1 (c2 / candidate :polarity - :mod (d / democracy)) :op2 (c3 / candidate :mod (p / potential))) :arg1-of (c4 / cause-01 :arg0 (p2 / possible-01 :polarity - :arg1 (a / accept-01 :arg0 (p3 / person :arg0-of (v / vote-01) :mod (t / this)) :arg1 (p4 / person :arg0-of (r / represent-01 :arg1 (p5 / party :arg0-of (h / have-org-role-91 :arg2 (p6 / president)))))))) :time (m / month :mod (l / last)))
(b / be-located-at-91 :arg1 (p / person :name (n / name :op1 "Trump")) :arg2 (p2 / point :quant 13 :arg2-of (i / include-91 :arg1 (a / and :op1 (p3 / person :name (n2 / name :op1 "Carly" :op2 "Fiorina")) :op2 (p4 / person :name (n3 / name :op1 "Marco" :op2 "Rubio")) :op3 (p5 / point :quant 19) :op4 (p6 / point :quant 19) :op5 (p7 / point :quant 19) :op6 (p8 / point :quant 19) :op7 (p9 / point :quant 19 :prep-to (a2 / and :op1 (p10 / person :name (n4 / name :op1 "Rand" :op2 "Paul")) :op2 (p11 / person :name (n5 / name :op1 "John" :op2 "Kasich")) :op3 (p12 / person :name (n6 / name :op1 "John" :op2 "Kasich"))))))))
(c / cause-01 :arg0 (o / offer-01 :arg0 (h / he) :arg1 (c2 / collaborate-01 :arg0 (h2 / he) :arg1 (p / person :name (n / name :op1 "Les" :op2 "Dissonances")) :arg2 (d / develop-02 :arg0 (h3 / he) :arg1 (w / world :mod (a / amphibious) :poss (h4 / he))))) :arg1 (a2 / access-01 :polarity - :arg0 (h5 / he) :arg1 (a3 / artists :mod (s / solo))))
(b / benefit-01 :arg0 (b2 / benefit-01))
(b / benefit-01 :arg0 (b2 / benefit-01))
(e / exemplify-01 :polarity - :arg0 (p / possible-01 :polarity - :arg1 (i / integrated :arg0 (p2 / person :arg0-of (s / sail-01)) :arg1 (p3 / person :arg0-of (s2 / sail-01))) :mod (j / just)))
(a / and :op1 (i / injure-01 :arg1 (a2 / and :op1 (p / police :quant (a3 / at-least :op1 20)) :op2 (c / child :quant 2)) :arg1-of (c2 / cause-01 :arg0 (c3 / clashes))) :op2 (w / write-01 :arg0 (p2 / person :name (n / name :op1 "Zaman") :arg0-of (h / have-org-role-91 :arg1 (c4 / country) :arg2 (c5 / child)))))
(a / accuse-01 :arg0 (o / organization :name (n / name :op1 "Ponta")) :arg1 (o2 / organization) :arg2 (a2 / and :op1 (t / thing :arg1-of (s / state-01 :arg0 (c / country :name (n2 / name :op1 "N-A"))) :arg1-of (c2 / control-01 :polarity -)) :op2 (t2 / thing :arg1-of (s2 / state-01) :mod (r / rational) :mod (r2 / rational))))
(r / remain-01 :arg1 (o / organization :name (n / name :op1 "Ti" :op2 "Cubs")) :arg3 (j / jail-01) :arg3 (a / at-least :op1 (t / temporal-quantity :quant (N / N-A) :unit (d / day) :mod (a2 / another) :mod (a3 / another))) :time (r2 / re-discuss :arg0 (p / person :name (n2 / name :op1 "Jude" :op2 "Yorkers")) :arg1 (p2 / possible-01 :arg1 (p3 / put-01 :arg0 (p4 / person) :arg1 (p5 / person) :arg2 (l / large)))))
(h / have-org-role-91 :arg0 (p / person :arg0-of (h2 / have-org-role-91 :arg1 (g / government-organization :name (n / name :op1 "N-A") :poss (c / country)) :arg2 (m / member))) :arg1 (p2 / person :arg0-of (l / lead-02 :arg1 (p3 / political-party :name (n2 / name :op1 "N-A"))) :mod (n3 / new)) :manner (c2 / consistent-01))
(s / say-01 :arg0 (a / and :op1 (p / person :name (n / name :op1 "Fred" :op2 "Smith") :arg0-of (h / have-org-role-91 :arg2 (p2 / president))) :op2 (p3 / person :arg0-of (h2 / have-org-role-91 :arg2 (c / ceo)))) :arg1 (f / face-01 :arg0 (c2 / company :arg0-of (h3 / have-org-role-91 :arg1 (c3 / company))) :arg1 (s2 / situation :mod (e / economy)) :degree (m / more) :compared-to (e2 / expect-01) :arg1-of (c4 / cause-01 :arg0 (a2 / and :op1 (p4 / produce-01 :arg1 (a3 / and :op1 (p5 / produce-01) :op2 (g / globe)) :mod (p6 / particular))))))
(l / listen-01 :arg1 (f / file :quant (s / series) :arg1-of (d / do-02 :arg0 (i / i))) :condition (w / want-01 :arg0 (y / you) :arg1 (h / hear-01 :arg0 (y2 / you) :arg1 (m / more :topic (c / case-03)))))
(a / and :op1 (r / receive-01 :arg0 (m / money :arg1-of (r2 / receive-01 :arg0 (i / i))) :arg1 (u / unit :mod (m2 / medicine)) :arg2 (u2 / use-01 :arg0 (u3 / unit) :arg1 (t / they) :time (u4 / until :op1 (e / end-01)))) :op2 (c / contrast-01 :arg1 (i2 / invest-01 :arg0 (u5 / unit) :arg2 (u6 / unit :mod (m3 / medicine))) :arg2 (i3 / invest-01 :arg0 (u7 / unit) :arg2 (a2 / and :op1 (e2 / equipment) :op2 (t2 / technology)) :mod (a3 / also) :arg1-of (c2 / cause-01 :arg0 (s / start-01 :arg0 (h / hospital) :arg1 (p / procure-01 :arg0 (h2 / hospital)) :time (a4 / already))))))
(c / contrast-01 :arg1 (r / receive-01 :arg0 (u / unit :mod (m / medicine)) :arg1 (m2 / money) :arg2 (u2 / use-01 :arg0 (u3 / unit) :arg1 (a / and :op1 (e / end-01 :arg1 (y / year)) :op2 (d / develop-02 :arg1 (d2 / develop-02 :arg1 (c2 / clinics)))))) :arg2 (a2 / and :op1 (i / invest-01 :arg0 (u4 / unit) :arg2 (d3 / device :mod (m3 / medicine)) :mod (a3 / also)) :op2 (f / fire-01 :arg0 (u5 / unit) :arg1 (d4 / device :arg1-of (p / procure-01 :arg0 (p2 / public))) :time (a4 / already))))
(s / see-01 :polarity - :arg1 (p / person :name (n / name :op1 "Putin") :arg1-of (p2 / powerful-02 :degree (m / more) :compared-to (i / it))))
(s / see-01 :polarity - :mode (i / imperative) :arg0 (w / we) :arg1 (p / person :name (n / name :op1 "Putin")) :arg2 (s2 / strong-02 :arg1 (p2 / person) :degree (m / more) :compared-to (h / he)))
(c / contrast-01 :arg1 (a / and :op1 (f / feel-01 :arg0 (w / we)) :op2 (o / obligate-01 :arg2 (w2 / we))) :arg2 (o2 / obligate-01 :arg2 (g / go-01 :arg1 (w3 / we) :degree (f2 / further))))
(a / advertise-01)
(a / appeal-01 :arg0 (r / rhetoric :poss (p / person :name (n / name :op1 "Corbyn"))) :arg1-of (l / limit-01) :arg1-of (c / cause-01 :arg0 (d / dominate-01 :arg0 (s / service :mod (i / industry) :mod (n2 / new)) :arg1 (a2 / and :op1 (f / force) :op2 (a3 / automatizari :arg1-of (e / extensive-03))) :beneficiary (i2 / industry))) :location (l2 / landscaping :mod (i3 / industry) :mod (n3 / new)))
(w / work-01 :polarity - :arg0 (c / city) :time (m / moment))
(c / contrast-01 :arg1 (b / be-located-at-91 :arg1 (p / person :name (n / name :op1 "Clinton")) :arg2 (i / in-front-of :op1 (p2 / person :name (n2 / name :op1 "Sanders") :arg1-of (i2 / include-91 :arg2 (f / figure :quant 2)))) :time (m / month :mod (l / last))) :arg2 (h / have-03 :arg0 (p3 / person) :arg1 (a / advantage :mod (s / slight) :consist-of (p4 / point :quant 5) :location (g / group :mod (t / this))) :time (n3 / now)))
(b / be-located-at-91 :arg1 (i / it) :arg2 (p / par) :extent (a / almost))
(b / be-located-at-91 :arg1 (i / it) :arg2 (p / par) :extent (a / almost))
(u / use-01 :arg0 (c / criminal-organization :name (n / name :op1 "N-A")) :arg1 (p / phone :mod (g / girl :mod (1 / 11-year-old))) :arg2 (a / ask-02 :arg0 (g2 / girl) :arg1 (i / image :mod (c2 / child :arg1-of (a2 / abuse-01)))))
(d / do-02 :arg0 (c / candidate :mod (d2 / democracy)) :arg1 (o / or :op1 (c2 / candidate :mod (d3 / democracy)) :op2 (c3 / candidate :arg1-of (p / possible-01))) :arg2 (p2 / person :arg0-of (v / vote-01 :arg1 (p3 / party :poss (p4 / party) :mod (p5 / primary))) :quant (f / few)) :manner (g / good))
(c / contrast-01 :arg1 (a / agree-01 :arg1 (i / it)) :arg2 (s / say-01 :arg0 (p / person :name (n / name :op1 "Victor" :op2 "Piturca") :arg0-of (h / have-org-role-91 :arg1 (o / organization :name (n2 / name :op1 "Dolce" :op2 "Sport")))) :arg1 (c2 / contrast-01 :arg1 (a2 / agree-01 :arg1 (i2 / it)) :arg2 (b / be-located-at-91 :arg1 (p2 / place :ord (o2 / ordinal-entity :value 1) :mod (o3 / only)) :arg2 (g / group)))))
(t / think-01 :arg0 (i / i) :arg1 (w / wrong-04 :arg1 (e / execute-01)))
(p / possible-01 :polarity - :arg1 (c / come-01 :arg1 (e / everyone) :arg4 (c2 / continent :name (n / name :op1 "Europe"))) :arg1-of (s / say-01 :arg0 (h / he)) :medium (s2 / speech :poss (h2 / he)))
(c / contrast-01 :arg2 (w / want-01 :arg0 (h / he) :arg1 (r / report-01 :arg0 (h2 / he) :arg1 (s / subject) :mod (i / international))))
(c / contrast-01 :arg2 (w / want-01 :arg0 (t / thing :arg1-of (r / report-01) :mod (i / international)) :arg1 (w2 / write-01 :arg0 (r2 / report) :arg1 (s / subject))))
FAILED_TO_PARSE#Number of opening and closing brackets doesn't match.
(b / button :topic (s / soon :degree (m / most) :compared-to (s2 / soon)))
(i / intend-01 :arg0 (w / we) :arg1 (r / resume-01 :arg0 (w2 / we) :arg1 (w3 / work-01) :time (s / soon :degree (m / most) :compared-to (p / possible-01 :arg1 (r2 / resume-01)))))
(c / contrast-01 :arg2 (a / and :op1 (c2 / character :quant (s / several) :prep-on (i / intend-01 :arg1 (c3 / candidacy :beneficiary (p / person :arg0-of (h / have-org-role-91 :arg1 (o / organization :name (n / name :op1 "PSD")) :arg2 (p2 / president)))))) :op2 (c4 / comment-01 :arg0 (p3 / person :name (n2 / name :op1 "Stanciu") :arg0-of (h2 / have-org-role-91 :arg1 (o2 / organization) :arg3 (c5 / comment-01 :arg0 (p4 / person)))))))
(p / possible-01 :polarity - :arg1 (a / and :op1 (r / revive-01 :arg1 (h / he)) :op2 (d / die-01 :arg1 (h2 / he) :time (m / morning :mod (n / next)))))
(b / be-temporally-at-91 :arg1 (v / violence) :arg2 (e / evening :location (d / district :mod (d2 / distance-quantity :quant (N / N-A) :unit (k / kilometer)) :mod (d3 / distance-quantity :quant (N2 / N-A) :unit (k2 / kilometer)))))
(m / mean-01 :polarity - :arg1 (v / vote-01 :arg0 (p / person) :arg1 (v2 / vote-01 :arg0 (p2 / person)) :condition (v3 / vote-01 :polarity - :arg0 (p3 / person) :arg1 (w / we))) :arg2 (s / say-01 :arg0 (p4 / person) :arg1 (c / cause-01 :arg0 (a / amr-unknown) :arg1 (i / interest-01 :polarity - :arg1 (p5 / politics) :arg2 (p6 / politics) :time (n / no-longer)))) :condition (v4 / vote-01 :arg0 (p7 / person) :beneficiary (w2 / we)) :condition (v5 / vote-01 :arg0 (p8 / person) :beneficiary (w3 / we)))
(c / create-01 :arg1 (o / organization :name (n / name :op1 "Fortress" :op2 "Europe")))
(l / let-01 :mode (i / imperative) :arg0 (w / we) :arg1 (c / create-01 :arg1 (c2 / continent :name (n / name :op1 "Europe") :arg0-of (c3 / counter-01 :arg1 (d / drug)))))
(s / say-01 :arg0 (t / thing :arg1-of (r / report-01 :arg0 (t2 / thing :arg1-of (r2 / report-01 :arg0 (p / person :name (n / name :op1 "Deng")))))) :arg1 (s2 / suffer-01 :arg0 (p2 / person) :arg1 (a / and :op1 (h / head) :op2 (l / log) :op3 (c / coapse)) :arg1-of (r3 / repeat-01)))
(d / drawn :arg1 (p / person :quant (N / N-A) :arg0-of (u / use-01 :arg1 (d2 / drug))) :arg1-of (c / cause-01 :arg0 (a / accuse-01 :arg1 (p2 / person) :arg2 (a2 / attempt-01 :arg1 (a3 / attempt-01 :arg0 (s / state :arg0-of (c2 / cross-02 :arg1 (b / border)) :mod (l / law :polarity -)) :arg1 (s2 / state :arg0-of (c3 / cross-02 :arg1 (b2 / border))))))))
(a / and :op1 (f / fall-01 :arg1 (r / rate :mod (e / employ-01) :location (c / country :name (n / name :op1 "Scotland"))) :arg4 (r2 / rate-entity-91 :arg1 (r3 / rate :mod (e2 / employ-01 :polarity -)) :arg2 (r4 / rate-entity-91 :arg1 74.0 :arg2 (t / temporal-quantity :quant (N / N-A) :unit (y / year))))) :op2 (f2 / figure :mod (a2 / above :op1 (p / product-of :op1 74.0 :op2 73.5))))
(c / cause-01 :arg0 (s / states :arg0 (s2 / state :arg0-of (h / have-org-role-91 :arg1 (s3 / state :arg0-of (h2 / have-org-role-91 :arg2 (m / member))) :arg2 (s4 / series :name (n / name :op1 (f / franco-german)))) :quant (w / whole)) :arg1 (b / becoming :arg1 (c2 / city :name (n2 / name :op1 "London")) :arg2 (b2 / become-01 :arg1 (c3 / city :name (n3 / name :op1 "Berlin")) :arg2 (t / thing :arg0-of (p / play-12 :arg2 (t2 / thing :arg0-of (p2 / play-01)))) :arg1-of (i / increase-01)))) :degree (m2 / more :quant (a / all)))
(c / cause-01 :arg0 (s / states :arg1 (s2 / state :arg0-of (h / have-org-role-91 :arg1 (s3 / state :arg0-of (h2 / have-org-role-91 :arg2 (m / member))) :arg2 (s4 / series :mod (w / whole))))) :arg1 (c2 / counter :arg1 (c3 / city :name (n / name :op1 "London")) :arg2 (b / become-01 :arg1 (c4 / city :name (n2 / name :op1 "Berlin")) :arg2 (d / dominate-01 :arg0 (c5 / city) :arg1 (- / -rrb- :mod (a / actor))) :arg1-of (i / increase-01))) :degree (m2 / more))
(s / say-01 :arg0 (p / person :name (n / name :op1 "Stephen" :op2 "D." :op3 "Onier") :arg0-of (h / have-org-role-91 :arg1 (a / and :op1 (p2 / person :arg0-of (r / research-01)) :op2 (p3 / person :arg0-of (h2 / have-org-role-91 :arg1 (g / government-organization :name (n2 / name :op1 "Fed")) :arg2 (o / official) :time (f / former))) :op3 (p4 / person :arg0-of (h3 / have-org-role-91 :arg1 (g2 / government-organization :name (n3 / name :op1 "Fed")) :arg2 (o2 / official) :time (f2 / former))) :op4 (p5 / person :arg0-of (h4 / have-org-role-91 :arg1 (g3 / government-organization :name (n4 / name :op1 "Fed")) :arg2 (o3 / official) :time (f3 / former)))) :arg1-of (e / experience-01))) :arg1 (d / decisive :degree (m / more) :domain (a2 / and :op1 (m2 / market-01 :arg1 (a3 / and :op1 (m3 / market :mod (f4 / finance)) :op2 (n5 / news :topic (w / weaken-01 :arg1 (e2 / economy :poss (c / country)))))) :op2 (n6 / news :topic (e3 / economy :poss (c2 / country))))) :time (w2 / week :mod (r2 / recent)))
(f / face-01 :arg0 (g / government-organization :name (n / name :op1 "Fed")) :arg1 (c / condition :mod (s / some) :arg1-of (e / exist-01 :polarity - :time (b / before)) :arg0-of (p / precipitate :arg1 (r / recession-02) :arg1-of (p2 / possible-01))) :time (s2 / situation :time (c2 / current)) :mod (e2 / else))
(s / show-01 :arg0 (e / earnings) :arg1 (s2 / sign :mod (g / grow-01)))
(r / remain-01 :arg1 (p / part :part-of (n / neintegrata :arg0-of (c / create-01 :arg1 (p2 / problem :topic (s / society) :arg1-of (m / major-02) :location (c2 / country :name (n2 / name :op1 "France")))))) :location (c3 / country :name (n3 / name :op1 "Germany")))
(s / say-01 :arg0 (h / he) :arg1 (r / resemble-01 :arg1 (i / it) :arg2 (r2 / resemble-01 :arg1 (i2 / it) :arg2 (o / opponent :mod (t / trade-01)))))
(c / contrast-01 :arg1 (s / sign-02 :arg0 (p / party :quant 4 :mod (p2 / politics) :arg1-of (m / major-02)) :arg1 (a / agree-01 :arg0 (p3 / party) :arg2 (p4 / province))) :arg2 (s2 / sign-02 :arg0 (p5 / party :quant 4 :mod (p6 / politics) :arg1-of (m2 / major-02)) :arg1 (s3 / step-01 :arg1 (c2 / country) :arg2 (c3 / constitution :mod (n / new))) :arg1-of (m3 / major-02) :arg1-of (c4 / contrast-01 :arg2 (i / issue-02 :arg0 (c5 / controversy :mod (c6 / controversy :degree (h / high)) :location (c7 / country :name (n2 / name :op1 "Nepal"))) :duration (t / temporal-quantity :quant (N / N-A) :unit (y / year))))))
(s / say-01 :arg0 (p / person :name (n / name :op1 "De" :op2 "Boer") :arg0-of (h / have-org-role-91 :arg2 (a / ambassador :mod (a2 / ajaks)))) :arg1 (s2 / send-01 :arg0 (p2 / person :arg0-of (h2 / have-org-role-91 :arg1 (c / country :name (n2 / name :op1 "Netherlands")) :arg2 (a3 / ambassador :mod (a4 / ajaks)))) :arg1 (t / thing :arg1-of (m / match-01 :arg2 (o / organization :name (n3 / name :op1 "Celtic"))) :mod (s3 / summary)) :time (n4 / no-longer)))
(p / possible-01 :arg1 (h / have-rel-role-91 :arg0 (p2 / person :name (n / name :op1 "Nick") :mod (t / this)) :arg1 (i / illness :poss (p3 / person)) :arg2 (w / wife :mod (e / even))))
(s / seek-01 :arg0 (l / location :name (n / name :op1 "Cinema" :op2 "City")) :arg1 (a / and :op1 (g / get-01 :arg0 (y / you) :arg1 (s2 / star :mod (f / future))) :op2 (b / between :op1 (t / temporal-quantity :quant (N / N-A) :unit (y2 / year)) :op2 (t2 / temporal-quantity :quant (N2 / N-A) :unit (y3 / year)))) :time (c / campaign-01 :time (l2 / late :degree (m / most)) :prep-to (a2 / and :op1 (p / person :arg0-of (h / have-rel-role-91 :arg1 (c2 / child) :arg2 (c3 / child))) :op2 (p2 / person :arg0-of (h2 / have-rel-role-91 :arg1 (c4 / child) :arg2 (c5 / child))) :op3 (p3 / person :arg0-of (h3 / have-rel-role-91 :arg1 (c6 / child) :arg2 (c7 / child))) :op4 (p4 / person :arg0-of (h4 / have-rel-role-91 :arg1 (c8 / child) :arg2 (c9 / child))) :op5 (p5 / person :arg0-of (h5 / have-rel-role-91 :arg1 (c10 / child) :arg2 (c11 / child))) :op6 (p6 / person :arg0-of (h6 / have-rel-role-91 :arg1 (c12 / child) :arg2 (c13 / child))) :op6 (p7 / person :arg0-of (h7 / have-rel-role-91 :arg1 (c14 / child) :arg2 (c15 / child))) :op6 (p8 / person :arg0-of (h8 / have-rel-role-91 :arg1 (c16 / child) :arg2 (c17 / child))) :op6 (p9 / person :arg0-of (h9 / have-rel-role-91 :arg1 (c18 / child) :arg2 (c19 / child))) :op7 (o / opportunity :mod (e / extraordinary)))))
(b / benefit-01 :arg0 (r / rise-01 :arg1 (d / dollar)) :arg1 (p / person :arg0-of (c / consume-01)) :mod (a / also))
(a / and :op1 (w / wake-up-02 :arg1 (g / girl) :time (l / late :degree (m / more))) :op2 (n / notice-01 :arg0 (g2 / girl) :arg1 (d / disappearance :poss (p / phone) :arg1-of (f / find-01 :arg0 (h / he) :location (h2 / hand :part-of (p2 / person :name (n2 / name :op1 "Hogg"))))) :arg1-of (c / contrast-01 :arg2 (a2 / asleep :arg1 (h3 / he)))))
(a / and :op1 (w / woken :arg1 (g / girl) :time (l / late :degree (m / more))) :op2 (s / see-01 :arg0 (g2 / girl) :arg1 (p / phone :arg1-of (f / find-01 :arg0 (h / he) :location (h2 / hand :part-of (p2 / person :name (n / name :op1 "Hogg"))))) :time (s2 / sleep-01 :arg0 (h3 / he))))
(d / die-01 :arg1 (p / person :quant 2 :mod (o / other)) :time (t / try-01 :arg0 (p2 / person) :arg1 (c / cross-02 :arg0 (p3 / person) :arg1 (l / location :name (n / name :op1 "Aegean" :op2 "Sea")))) :time (e / early :degree (m / more)))
(d / discover-01 :arg1 (f / fruit :arg1-of (f2 / fresh-04) :location (o / outside :op1 (h / house :mod (a / area)) :mod (j / just))))
(m / multi-sentence :snt1 (a / allow-01 :polarity - :arg0 (n / nothing :prep-in (c / culture :mod (t / this))) :arg1 (s / say-01 :arg0 (y / you) :arg1 (a2 / and :op1 (k / kill-01 :arg0 (p / person :mod (c2 / country :name (n2 / name :op1 "N-A"))) :arg1 (y2 / you)) :op2 (w / want-01 :arg0 (i / i) :arg1 (s2 / stay-01 :arg1 (i2 / i)))))) :snt2 (c3 / contrast-01 :arg1 (w2 / want-01 :arg0 (i3 / i) :arg1 (s3 / stay-01 :arg1 (i4 / i))) :arg2 (w3 / want-01 :arg0 (i5 / i) :arg1 (g / get-05 :arg0 (i6 / i) :arg1 (e / energy :poss (i7 / i)) :arg2 (e2 / energy :poss (i8 / i))))))
(a / and :op1 (h / have-frequency-91 :arg2 (r / rate-entity-91 :arg1 (m / monetary-quantity :quant (N / N-A) :unit (d / dollar :mod (c / country :name (n / name :op1 "Australia")))) :arg2 (t / temporal-quantity :quant (N2 / N-A) :unit (m2 / minute)))) :op2 (s / show-01 :arg0 (p / person) :arg1 (f / fail-01 :arg1 (p2 / person) :arg2 (b / beat-03 :arg0 (p3 / person) :arg1 (p4 / person :name (n2 / name :op1 "McGuire"))))))
(a / and :op1 (f / fair :polarity - :domain (i / it)) :op2 (c / complain-01 :arg0 (i2 / i) :arg2 (l / location :name (n / name :op1 "Iasi")) :purpose (r / recover-02 :arg0 (i3 / i) :arg1 (m / money :poss (i4 / i)))))
(c / contrast-01 :arg1 (l / lose-02 :arg0 (n / news :arg1-of (c2 / conduct-01 :arg0 (n2 / news :mod (o / organization :name (n3 / name :op1 "CBS"))) :time (m / month :mod (l2 / last)))) :arg1 (p / person :name (n4 / name :op1 "Clinton"))) :arg2 (w / win-01 :arg0 (p2 / person :name (n5 / name :op1 "Sanders")) :arg1 (p3 / point :mod (p4 / percentage-entity :value (N / N-A)))) :time (m2 / month :mod (l3 / last)))
(d / deserve-01 :arg0 (p / person :name (n / name :op1 "Thanasi" :op2 "Kokkinakis")) :arg1 (a / and :op1 (p2 / praise-01 :arg1 (p3 / person)) :op2 (c / criticised :arg0 (p4 / person) :arg1 (b / behave-01 :arg0 (p5 / person)))))
(s / say-01 :arg2 (p / person :name (n / name :op1 "de" :op2 "Boer")))
(e / enjoy-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (c / canton :part-of (l / location :name (n / name :op1 "Constanta" :op2 "County"))) :arg2 (m / mayor :mod (i / interim)))) :arg1 (t / temporal-quantity :quant (N / N-A) :unit (h2 / hour)) :mod (o / only) :arg1-of (c2 / cause-01 :arg0 (p2 / person :arg0-of (p3 / prosecute-01))))
(b / behave-01 :arg0 (a / and :op1 (p / person :mod (t / this)) :op2 (p2 / person :arg0-of (h / have-rel-role-91 :arg1 (p3 / person) :arg2 (c / child))) :op3 (p4 / person :arg0-of (h2 / have-rel-role-91 :arg1 (p5 / person) :arg2 (c2 / child) :mod (o / old))) :op4 (p6 / person :mod (o2 / old) :location (c3 / crutches)) :op5 (p7 / person :mod (o3 / old))) :arg1 (h3 / holiday :mod (r / religious) :mod (g / great)))
(c / cause-01 :arg1 (a / and :op1 (r / reduce-01 :arg0 (o / organization :name (n / name :op1 "Banca" :op2 "Transilvania")) :arg1 (r2 / rate :mod (b / between :op1 (p / percentage-entity :value (N / N-A)) :op2 (p2 / percentage-entity :value (N2 / N-A)))) :time (a2 / after :op1 (n2 / now) :quant (t / temporal-quantity :quant (N3 / N-A) :unit (y / year)))) :op2 (t2 / theory :time (a3 / after :op1 (n3 / now) :quant (f / few :op1 (t3 / temporal-quantity :quant (N4 / N-A) :unit (y2 / year)))))))
(c / contrast-01 :arg1 (s / say-01 :arg0 (t / that) :arg1 (c2 / contrast-01 :arg1 (s2 / say-01 :arg0 (t2 / that) :arg1 (c3 / contrast-01 :arg1 (s3 / say-01 :arg0 (p / person :name (n / name :op1 "Hilary" :op2 "``" :op3 "A" :op4 "Benn") :arg0-of (h / have-org-role-91 :arg1 (r / radio :mod (p2 / person :name (n2 / name :op1 "Benn"))) :arg2 (r2 / radio :mod (r3 / radio :mod (p3 / person :name (n3 / name :op1 "Benn")))))) :arg1 (r4 / recognize-02 :polarity - :arg0 (p4 / person) :arg1 (a / appoint-01 :arg0 (p5 / person) :arg1 (p6 / person :name (n4 / name :op1 "John" :op2 "McDonnell")) :arg2 (a2 / and :op1 (p7 / person :arg0-of (h2 / have-org-role-91 :arg2 (m / minister))) :op2 (p8 / person :arg0-of (h3 / have-org-role-91 :arg2 (m2 / minister))) :prep-as (a3 / and :op1 (p9 / person :arg0-of (h4 / have-org-role-91 :arg2 (m3 / minister))) :op2 (p10 / person :arg0-of (h5 / have-org-role-91 :arg2 (m4 / minister))))))))))) :arg2 (i / idea :arg1-of (b / bad-07) :domain (i2 / it))))
(s / say-01 :arg0 (t / that) :arg1 (i / idea :arg1-of (b / bad-07) :domain (p / person :name (n / name :op1 "Benn") :arg0-of (h / have-org-role-91 :arg1 (p2 / person :name (n2 / name :op1 "Hilary" :op2 "Benn") :arg0-of (h2 / have-org-role-91 :arg1 (r / radio))) :arg2 (' / ''))) :time (w / week :mod (t2 / this)) :medium (a / and :op1 (r2 / radio) :op2 (t3 / tv)) :time (s2 / struggle-02 :arg0 (p3 / person) :arg1 (r3 / recognize-02 :polarity - :arg0 (p4 / person) :arg1 (a2 / appoint-01 :arg0 (p5 / person :name (n3 / name :op1 "Corbyn") :arg0-of (h3 / have-org-role-91 :arg1 (p6 / person :name (n4 / name :op1 "Corbyn")) :arg2 (m / minister :mod (s3 / spiritual)))) :arg1 (p7 / problem :arg1-of (b2 / bad-07)))))))
(m / multi-sentence :snt1 (a / and :op1 (' / '' :domain (r / renegotiation :mod ('2 / ''))) :op2 (a2 / achieve-01 :arg0 (c / country :name (n / name :op1 "Britain")) :arg1 (n2 / nothing :topic (t / thing :arg2-of (v / value-01))))) :snt2 ('3 / ''))
(s / share-01 :arg1 (s2 / share) :arg2 (r / rate-entity-91 :arg1 (m / monetary-quantity :quant 2.42 :unit (d / dollar)) :arg2 (v / volume-quantity :quant (N / N-A) :unit (g / gallon)) :arg1-of (a / average-04) :arg1-of (m2 / make-01 :arg0 (p / person :quant 12 :arg0-of (a2 / analyze-01) :arg0-of (r2 / respond-01 :arg1 (s3 / survey-01 :arg0 (o / organization :name (n / name :op1 "Zack" :op2 "Investment" :op3 "Research"))))))))
(c / contrast-01 :arg1 (a / and :op1 (h / have-part-91 :arg1 (c2 / country :name (n / name :op1 "Romania")) :arg2 (l / location :name (n2 / name :op1 "Schengen"))) :op2 (s / schengen :arg0 (c3 / country) :location (t / there))) :arg2 (a2 / assure-01 :arg0 (c4 / country) :arg1 (c5 / country) :arg2 (r / responsible-03 :arg0 (c6 / country) :arg1 (r2 / responsible-03 :arg0 (a3 / and :op1 (p / person :arg0-of (u / use-01)) :op2 (r3 / rule :mod (u2 / unique) :topic (d / deportation))) :mod (u3 / unique) :topic (d2 / deportation :beneficiary (p2 / person :arg0-of (r4 / receive-01 :polarity - :arg1 (r5 / rule :mod (m / malicious)) :beneficiary (p3 / person :arg1-of (c7 / consider-01 :arg0 (c8 / country) :arg1-of (c9 / consider-01)))))) :mod (u4 / unique)))))
(c / contrast-01 :arg1 (h / have-part-91 :arg1 (c2 / country :name (n / name :op1 "Romania")) :arg2 (l / location :name (n2 / name :op1 "Schengen"))) :arg2 (c3 / contrast-01 :arg1 (b / become-01 :arg1 (t / thing :arg1-of (b2 / border-01 :arg2 (b3 / border :mod (e / external)))) :arg2 (r / responsible-03 :arg0 (c4 / country) :manner (j / joint))) :arg2 (r2 / rule :mod (u / unique) :topic (a / accept-01 :arg1 (r3 / rule :mod (d / deportation) :arg1-of (s / single-02) :beneficiary (p / person :arg0-of (r4 / receive-01 :polarity - :arg1 (r5 / rule :beneficiary (c5 / country :arg0-of (c6 / consider-01 :arg1 (s2 / safe-01 :arg1 (a2 / and)))))))))) :prep-in (s3 / sense-01 :arg0 (c7 / country) :arg1 (r6 / responsible-03 :arg0 (c8 / country) :manner (j2 / joint)))))
(t / try-01 :arg0 (s / some) :arg1 (l / label :arg0 (s2 / some) :arg1 (h / he) :arg2 (p / politician :mod (' / '') :mod ('2 / '') :mod ('3 / ''))))
(c / contrast-01 :arg1 (t / think-01 :arg0 (i / i) :arg1 (c2 / case :mod (s / such) :medium (t2 / television))) :arg2 (t3 / think-01 :arg0 (i2 / i) :arg1 (p / possible-01 :arg1 (b / be-02 :arg1 (i3 / i)))))
(a / and :op2 (s / say-01 :arg1 (a2 / amr-unknown) :arg2 (m / man :mod (t / this))) :mod (a3 / again :mod (t2 / then)))
(b / beautiful-02 :arg1 (m / meet-03) :arg1-of (e / experience-01 :arg1-of (w / wonderful-03)))
(c / cause-01 :arg0 (r / record-01 :arg0 (p / person :name (n / name :op1 "Chase" :op2 "Australia") :arg1-of (r2 / record-01 :time (e / evening :ord (o / ordinal-entity :value 2)))) :arg1 (t / trust-01 :arg0 (p2 / person) :arg1 (t2 / trust-01 :arg1 (p3 / person :source (o2 / organization :name (n2 / name :op1 "Nine" :op2 "that" :op3 "Hot" :op4 "Seat"))) :arg2 (s / score-entity :op1 17 :op2 30) :time (f / final)))))
FAILED_TO_PARSE#Two concepts in a row.
(r / reject-01 :arg0 (g / government-organization :name (n / name :op1 "Senate")) :arg1 (a / and :op1 (p / person :arg0-of (h / have-rel-role-91 :arg1 (p2 / person :name (n2 / name :op1 "Corneliu" :op2 "Vadim" :op3 "Tudor")) :arg2 (w / wife))) :op2 (p3 / person :arg0-of (h2 / have-rel-role-91 :arg1 (p4 / person) :arg2 (w2 / wife))) :op3 (p5 / person :arg0-of (h3 / have-rel-role-91 :arg1 (p6 / person) :arg2 (w3 / wife)))) :arg2 (b / body :consist-of (b2 / body :consist-of (b3 / body :arg0-of (h4 / have-org-role-91 :arg2 (s / senator) :time (f / former))))) :subevent-of (l / lobby-01 :arg0 (l2 / legislate-01 :arg0 (g2 / government-organization :name (n3 / name :op1 "House")))))
(p / possible-01 :arg1 (f / form :mod (f2 / form :mod (f3 / fair :degree (m / most)) :topic (f4 / fair :topic (w / weapon)))) :arg1-of (c / cause-01 :arg0 (o / offer-01 :arg0 (p2 / person :mod (c2 / country :name (n / name :op1 "N-A"))) :arg1 (p3 / product :mod (e / eufemistice) :arg1-of (s / standard-02)))))
(c / contrast-01 :arg1 (p / possible-01 :polarity - :arg1 (r / resist :arg0 (y / you) :arg1 (h / heart))) :arg2 (c2 / contrast-01 :arg1 (p2 / possible-01 :polarity - :arg1 (r2 / resist :arg0 (y2 / you) :arg1 (h2 / heart))) :arg2 (p3 / person :polarity - :arg0-of (h3 / have-rel-role-91 :arg1 (y3 / you) :arg2 (h4 / husband) :time (f / future)) :arg0-of (t / try-01 :arg1 (r3 / rational :polarity - :domain (p4 / person)) :mod (e / even)))))
(c / criticize-01 :arg0 (p / person :arg1-of (e / expert-01)) :arg1 (t / thing :arg1-of (d / decide-01 :arg0 (o / organization :name (n / name :op1 "Department" :op2 "of" :op3 "Public" :op4 "Health" :op5 "England"))) :topic (c2 / cigarette :mod (e2 / electronic))))
(m / multi-sentence :snt1 (k / know-01 :arg0 (y / you)) :snt2 (c / chance-02 :arg0 (y2 / you) :arg1 (s / succeed-01 :arg0 (y3 / you) :arg1 (l / life) :location (l2 / life) :mod (a / almost)) :condition (h / have-03 :polarity - :arg0 (y4 / you) :arg1 (l3 / luck))))
(a / and :op2 (b / beat-03 :arg0 (p / person :name (n / name :op1 "Stefan" :op2 "Radu")) :arg1 (p2 / person) :arg2 (p3 / presence :poss (p4 / person :arg0-of (h / have-org-role-91 :arg2 (m / mayor :mod (v / vice))))) :time (d / date-entity :month 8 :day (N / N-A))))
(t / think-01 :arg0 (p / person :arg0-of (h / have-rel-role-91 :arg2 (f / father))) :arg1 (p2 / person :name (n / name :op1 "Hull")) :time (a / already))
(b / blairite :arg0 (p / person :name (n / name :op1 "Miliband")) :arg1 (o / oppose-01 :arg0 (p2 / person) :arg1 (i / idea :topic (r / referendum :poss (p3 / person :name (n2 / name :op1 "Cameron"))))) :degree (m / more) :compared-to (o2 / oppose-01 :arg0 (p4 / person) :arg1 (i2 / idea :topic (a / abandon-01 :arg0 (c / constitution :mod (o3 / organization :name (n3 / name :op1 "EU"))) :arg1 (a2 / and :op1 (p5 / person :arg0-of (v / vote-01 :arg1 (c2 / constitution :mod (o4 / organization :name (n4 / name :op1 "EU"))))) :op2 (p6 / person :arg0-of (v2 / vote-01 :arg1 (d / dutch))) :op3 (p7 / person :arg0-of (g / give-01 :arg1 (c3 / card) :arg2 (o5 / out))))))) :degree (m2 / more) :mod (i3 / in-fact))
(a / and :op1 (t / take-01 :arg0 (t2 / they) :arg1 (p / person :arg0-of (h / have-org-role-91 :arg2 (a2 / authority))) :arg2 (f / find-01 :arg0 (a3 / authority) :arg1 (c / cost-01)) :time (m / more-than :op1 (t3 / temporal-quantity :quant (N / N-A) :unit (m2 / month)))) :op2 (p2 / person :arg0-of (h2 / have-org-role-91 :arg2 (a4 / authority))) :op3 (p3 / person :arg0-of (h3 / have-org-role-91 :arg2 (a5 / authority))) :op4 (p4 / person :arg0-of (h4 / have-org-role-91 :arg2 (a6 / authority))) :op5 (p5 / person :arg0-of (h5 / have-org-role-91 :arg2 (a7 / authority))))
(c / come-01 :polarity - :arg1 (o / offer-01) :arg1-of (c2 / cause-01 :arg0 (c3 / convince-01 :polarity - :arg1 (h / he) :arg2 (p / possible-01 :arg1 (s / solve-01 :arg0 (h2 / he) :arg1 (i / issue-02 :arg1-of (c4 / create-01 :arg0 (h3 / he))) :manner (s2 / somehow))))))
(s / share-01 :arg0 (c / company) :arg1 (s2 / share :mod (n / new)) :arg2 (r / rate-entity-91 :arg1 (m / monetary-quantity :quant 125 :unit (p / pound)) :arg2 (s3 / share :quant (l / less-than :op1 2.4) :arg2-of (p2 / price-01 :arg1 (t / thing :arg2-of (p3 / price-01 :arg1-of (c2 / close-01)) :arg1-of (c3 / close-01))))))
(c / contrast-01 :arg1 (l / lead-02 :arg0 (p / person :name (n / name :op1 "Brancusi")) :arg1 (l2 / life :mod (m / modest)) :concession (c2 / come-01 :arg1 (p2 / person) :arg3 (f / family :arg1-of (h / have-org-role-91 :arg0 (p3 / person) :arg2 (m2 / member)) :mod (w / wealth))) :concession (c3 / came :arg0 (p4 / person) :arg1 (f2 / family :arg1-of (h2 / have-org-role-91 :arg0 (p5 / person) :arg2 (m3 / member))))) :arg2 (g / guide-01 :arg0 (t / that) :arg1 (b / benchmarks :poss (t2 / they) :arg0-of (g2 / guide-01 :arg1 (t3 / thing :arg1-of (e / envision-01 :mod (a / artistic))) :time (n2 / night)))))
(d / do-02 :polarity - :arg0 (i / i) :arg1 (t / that))
(m / multi-sentence :snt1 (t / true-01 :arg1 (n / need-01 :arg0 (m2 / musicians) :arg1 (o / or :op1 (e / educate-01) :op2 (b / become-01 :arg2 (s / soloists))))) :snt2 (c / contrast-01 :arg2 (n2 / need-01 :polarity - :arg1 (b2 / become-01 :arg1 (a / and :op1 (e2 / educate-01) :op2 (s2 / soloists)) :arg2 (s3 / soloists)))))
(m / make-02 :arg0 (w / we) :arg1 (w2 / work-09 :arg1 (i / it)) :condition (w3 / want-01 :arg0 (i2 / it) :arg1 (f / formalizam :arg0 (i3 / it) :manner (v / vote-01 :mod (c / congressional)))))
(a / and :op1 (p / plaster :arg0 (h / he) :arg1 (i / internet) :time (t / today)) :op2 (r / receive-01 :arg0 (h2 / he) :arg1 (h3 / hundreds :consist-of (t2 / thousands :arg1 (a2 / and :op1 (a3 / atm) :op2 (s / share-01))))))
FAILED_TO_PARSE#Number of opening and closing brackets doesn't match.
(r / regard :arg0 (g / government-organization :arg0-of (g2 / govern-01)) :arg1 (m / mean-01 :arg1 (s / set-up-03 :arg1 (a / activity-06 :arg1 (c / concrete)) :arg2 (l / lead-03 :arg0 (a2 / activity-06) :arg2 (c2 / create-01 :arg1 (p / phenomenon :mod (f / flexible)) :purpose (h / halt-01 :arg1 (p2 / phenomenon :mod (p3 / person :arg0-of (m2 / migrate-01)) :arg1-of (g3 / grow-01))))))) :arg2 (t / thing :quant 2015 :arg1-of (p4 / plan-01) :mod (a3 / action)))
(t / think-01 :arg0 (g / government-organization :arg0-of (g2 / govern-01)) :arg1 (m / mean-01 :arg1 (g3 / government-organization) :arg2 (e / establish-01 :arg1 (a / activity-06 :arg1 (c / concrete) :arg0-of (l / lead-03 :arg2 (c2 / create-01 :arg1 (s / system :mod (f / flexible)) :purpose (s2 / stop-01 :arg1 (g4 / grow-01 :arg1 (m2 / migrationist)))))))) :medium (p / plan :mod (a2 / action)))
(a / appalled :arg0 (i / idea) :arg1 (i2 / i))
(s / say-01 :arg0 (c / committee :mod (i / investigative)) :arg1 (h / have-03 :arg0 (c2 / company) :arg1 (c3 / complied :arg0 (c4 / company) :arg1 (s2 / standard :mod (s3 / safe-01)) :manner (' / '')) :arg1-of (r / report-01 :arg0 (c5 / company :name (n / name :op1 "BBC"))) :arg1-of (r2 / report-01 :arg0 (a / agency :mod (p / press) :mod (s4 / saudi)) :arg1-of (r3 / report-01 :arg0 (c6 / company)))))
(w / want-01 :arg0 (t / this) :arg1 (m / make-01 :arg0 (t2 / this) :arg1 (o / organization :name (n / name :op1 "Football" :op2 "Academy" :op3 "`" :op4 "Paul" :op5 "Papp"))))
(p / prepare-02 :arg0 (p2 / person :arg0-of (p3 / play-01 :arg1 (m / market))) :arg1 (y / year :mod (a / all)) :arg2 (d / decide-01 :arg0 (g / government-organization :name (n / name :op1 "Fed"))) :arg1-of (c / cause-01 :arg0 (d2 / decide-01 :arg0 (p4 / person :arg0-of (h / have-org-role-91 :arg1 (o / organization :name (n2 / name :op1 "Federal" :op2 "Trade" :op3 "Market" :op4 "Commission")) :arg3 (l / lead-02 :arg0 (p5 / person)))) :arg1 (m2 / meet-03 :arg0 (p6 / person) :arg1 (o2 / organization) :time (w / week :mod (t / this))) :time (w2 / week :mod (t2 / this)))))
(a / and :op1 (s / say-01 :arg0 (i / i) :arg1 (w / want-01 :arg0 (w2 / we) :arg1 (t / talk-01 :arg0 (w3 / we))) :mod (a2 / also)) :op2 (s2 / say-01 :arg0 (w4 / we) :arg1 (a3 / and :op1 (a4 / agree-01 :arg0 (w5 / we) :arg1 (a5 / agree-01 :arg0 (w6 / we) :arg1 (g / game :ord (o / ordinal-entity :value 1) :mod (n / new) :location (l / location :name (n2 / name :op1 "Bucharest"))))) :op2 (d / discuss-01 :arg0 (w7 / we) :arg1 (c / concrete) :time (t2 / then)))))
(h / high-02 :arg1 (p / product :mod (d / domestic) :arg1-of (g / gross-03) :mod (d2 / domestic)) :degree (m / more) :compared-to (i / increase-01 :arg1 (i2 / increase-01 :arg1 (r / rate :mod (i3 / interest)))) :manner (s / specific-02))
(a / and :op2 (c / commentators :domain (c2 / country :name (n / name :op1 "N-A")) :mod (s / sports) :arg0-of (w / want-01 :arg1 (g / give-up-07 :arg0 (j / job) :time (m / moment)))))
(e / express-01 :arg0 (h / he) :arg1 (i / idea :arg0-of (a / allow-01 :arg1 (s / speak-01 :arg0 (o / other) :arg1 (a2 / and :op1 (o2 / organization :name (n / name :op1 "Chamber" :op2 "of" :op3 "Deputies" :op4 "Speaker")) :op2 (p / person :name (n2 / name :op1 "John" :op2 "Bercow")) :op3 (d / discuss-01 :arg0 (p2 / person) :arg1 (i2 / issue-02 :mod (t / this))))))) :mod (a3 / also))
(s / say-01 :arg0 (r / report-01 :arg0 (p / police)) :arg1 (c / colluded :arg0 (p2 / person :quant 3 :arg0-of (s2 / study-01) :source (m / mosque :location (n / north :part-of (c2 / city :name (n2 / name :op1 "New" :op2 "York"))))) :arg1 (p3 / person :arg0-of (h / have-org-role-91 :arg1 (u / university :name (n3 / name :op1 "N-A") :location (n4 / north :part-of (n5 / north))) :arg3 (s3 / study-01))) :arg2 (o / otr?veasc)) :arg1-of (c3 / cause-01 :arg0 (t / thing :arg1-of (r2 / report-01 :arg0 (p4 / police)))))
(n / nostim :time (t / time :mod (t2 / this)) :time (t3 / time :mod (t4 / this)))
(t / think-01 :arg0 (i / i) :arg1 (s / something :arg1-of (r / resemble-01 :arg2 (t2 / this))))
(c / contrast-01 :arg1 (r / raise-01 :arg0 (o / organization :name (n / name :op1 "Reserve") :mod (f / federal)) :arg1 (r2 / rate :mod (i / interest)) :arg2 (r3 / raise-01 :arg0 (o2 / organization) :arg1 (r4 / rate :mod (i2 / interest))) :frequency (o3 / often)) :arg2 (p / possible-01 :polarity - :arg1 (f2 / factor :topic (t / thing :manner-of (r5 / respond-01 :arg0 (a / and :op1 (e / economy) :op2 (a2 / asset :mod (f3 / finance))))))))
(t / take-01 :arg0 (p / person :name (n / name :op1 "Brancusi")) :arg1 (a / and :op1 (m / mature) :op2 (w / workshop)))
(c / call-02 :arg0 (p / person :name (n / name :op1 "Stelian" :op2 "Tanase")) :arg1 (a / and :op1 (t / thing :arg1-of (t2 / tax-01 :arg3 (t3 / thing :arg1-of (t4 / tax-01 :arg3 (s / service :mod (p2 / public)))))) :op2 (t5 / thing :arg1-of (t6 / tax-01 :arg3 (t7 / thing :arg1-of (t8 / tax-01)))) :op3 (t9 / thing :arg1-of (t10 / tax-01 :arg3 (t11 / television :mod (p3 / public))))) :arg4 (f / fee :prep-for (t12 / television :mod (s2 / service :mod (p4 / public)))) :arg1-of (c2 / cause-01 :arg0 (a2 / and :op1 (c3 / change :arg1 (p5 / procedure :topic (c4 / control-01 :arg1 (t13 / technology)))) :op2 (f2 / find-01 :arg1 (a3 / and :op1 (t14 / thing :arg2-of (s3 / sanction-02 :arg1 (t15 / thing :arg1-of (t16 / tax-01 :arg3 (t17 / tax))))) :op2 (a4 / and :op1 (f3 / find-01 :arg1 (t18 / thing)) :op2 (a5 / and :op1 (f4 / find-01 :arg1 (s4 / sanction-02)) :op2 (p6 / penalize-01 :arg0 (p7 / procedure)))))))) :medium (l / letter))
(a / and :op2 (a2 / ask-01 :arg0 (p / person :name (n / name :op1 "Stelian" :op2 "Tanase")) :arg1 (a3 / and :op1 (i / indexing :arg0 (p2 / person) :arg1 (t / tax-01 :arg3 (s / service :mod (t2 / television) :mod (p3 / public)))) :op2 (m / modifying :arg0 (p4 / person) :arg1 (t3 / thing :arg1-of (t4 / tax-01)) :arg3 (t5 / tax-01 :arg3 (s2 / service :mod (t6 / television) :mod (p5 / public)))) :op3 (r / regulating :arg0 (p6 / person) :arg1 (t7 / thing :arg1-of (p7 / provide-01 :arg0 (a4 / and :op1 (t8 / thing :arg1-of (t9 / tax-01 :arg3 (t10 / tax :mod (t11 / tv)))) :op2 (f / find-01 :arg1 (a5 / and :op1 (p8 / penalize-01 :arg2 (t12 / tax-01 :arg3 (t13 / tax))) :op2 (f2 / find-01 :arg1 (a6 / and :op1 (p9 / penalize-01) :op2 (p10 / penalize-01))))))))))) :medium (l / letter))
(m / market :mod (c / continent :name (n / name :op1 "N-A")) :mod (r / real) :domain (t / this))
(d / detail-01 :arg0 (c / company) :arg1 (c2 / company) :time (u / until :op1 (a / and :op1 (m / moment :mod (t / this)) :op2 (c3 / career :mod (f / fair) :arg1-of (f2 / find-01 :location (w / www.targuldecariere.ro))))))
(d / drawn :arg0 (o / organization :name (n / name :op1 "Impex" :op2 "Romcatel" :op3 "SA")) :arg1 (t / thing :arg1-of (d2 / draft-01 :mod (o2 / original))))
(a / and :op1 (p / person :arg0-of (r / report-01)) :op2 (t / thing :arg1-of (s / state-01 :arg0 (t2 / thing :arg1-of (i / involve-01)))) :op3 (t3 / thing :arg1-of (s2 / state-01 :arg0 (t4 / thing :arg1-of (i2 / involve-01)))) :op4 (t5 / thing :arg1-of (s3 / state-01 :arg0 (t6 / thing :arg1-of (i3 / involve-01)))))
(a / announce-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg2 (a2 / authority))) :arg1 (r / responsible :arg0 (a3 / and :op1 (o / organization :name (n / name :op1 "Saudi" :op2 "Binladin" :op3 "Group")) :op2 (f / family) :op3 (f2 / family) :arg0-of (b / belong-01 :arg1 (p2 / person :name (n2 / name :op1 "Osama" :op2 "bin" :op3 "Laden"))) :arg0-of (b2 / belong-01 :arg1 (p3 / person :arg0-of (h2 / have-org-role-91 :arg1 (o2 / organization) :arg3 (l / lead-02 :arg0 (p4 / person) :arg1 (o3 / organization))))) :arg0-of (h3 / have-org-role-91 :arg1 (o4 / organization) :arg3 (l2 / lead-02 :arg0 (p5 / person) :arg1 (o5 / organization)))) :arg1 (p6 / person :arg0-of (h4 / have-org-role-91 :arg1 (o6 / organization) :arg3 (l3 / lead-02 :arg0 (p7 / person) :arg1 (o7 / organization)))) :arg1-of (f3 / follow-01 :arg2 (a4 / accident :arg1-of (f4 / follow-01 :arg2 (a5 / accident :arg1-of (d / die-01 :arg1-of (f5 / follow-01 :arg2 (a6 / accident)))))))))
(p / play-11 :polarity - :arg0 (y / you) :arg2 (l / level :mod (c / country)))
(c / contrast-01 :arg1 (d / doctor :polarity - :domain (i / i)) :arg2 (a / and :op1 (a2 / age-01 :arg1 (p / person :arg0-of (h / have-rel-role-91 :arg2 (d2 / doctor))) :arg2 (t / temporal-quantity :quant (N / N-A) :unit (m / month))) :op2 (p2 / play-11 :polarity - :arg0 (p3 / person) :arg2 (p4 / phase :mod (g / grupelor)))))
(c / cause-01 :arg1 (p / possible-01 :arg1 (p2 / plan-01 :arg0 (p3 / person :quant (s / some) :arg0-of (h / have-org-role-91 :arg2 (m / minister))) :arg1 (r / remark-01 :arg0 (p4 / person) :arg1-of (c2 / cause-01 :arg0 (a / and :op1 (h2 / help-01 :polarity - :arg0 (p5 / person :arg0-of (h3 / have-org-role-91 :arg2 (m2 / minister))) :arg1 (p6 / political-party :name (n / name :op1 "SNP")) :mod (e / even)) :op2 (r2 / remark-01 :arg0 (p7 / person) :mod (s2 / style)) :op3 (c3 / campaign-01 :arg0 (p8 / person) :arg1 (s3 / speed-01 :arg0 (p9 / person) :arg1 (p10 / process-02 :arg1 (s4 / speed-01 :arg0 (p11 / person) :arg1 (p12 / process-02))))) :time (c4 / campaign-01 :arg1 (s5 / speed-01 :arg1 (p13 / process-02)))))))))
(s / show-01 :arg0 (t / ten :arg1 (p / poll-01 :quant 11 :mod (n / nation) :mod (l / last))) :arg1 (a / and :op1 (l2 / lead-03 :arg0 (p2 / person :name (n2 / name :op1 "Donald" :op2 "Trump")) :arg2 (f / figure :quant 11 :mod (f2 / figure :quant 2))) :op2 (w / wonder-01 :arg0 (p3 / person) :arg1 (t2 / thing :mod (t3 / this) :arg1-of (m / mean-01 :arg2 (c / chance-01 :arg1 (n3 / nominate-01) :mod (e / estate :mod (r / real))))) :manner (s2 / serious))))
(r / reason :mode (i / interrogative))
(i / it :topic (i2 / i) :mod (j / just))
(s / say-01 :arg0 (t / they) :arg1 (c / contrast-01 :arg1 (h / have-03 :arg0 (t2 / they) :arg1 (b / boundary :beneficiary (p / person :arg0-of (w / want-01 :arg1 (p2 / pass-01 :arg0 (p3 / person)))))) :arg2 (p4 / person :polarity - :arg0-of (w2 / want-01 :arg1 (c2 / claim-02 :arg0 (p5 / person) :arg1 (p6 / person))))) :time (y / yesterday))
(a / and :op1 (c / close-01 :arg1 (r / rate-entity-91 :arg1 (p / percentage-entity :value (N / N-A)) :arg2 (t / temporal-quantity :quant (N2 / N-A) :unit (y / year)))) :op2 (c2 / close-01 :arg1 (p2 / percentage-entity :value (N3 / N-A)) :arg3 (p3 / peak-01 :mod (r2 / record)) :time (d / date-entity :month 11 :day (N4 / N-A))))
(e / expect-01 :arg1 (c / contrast-01 :arg1 (e2 / expect-01 :arg1 (m / monitor-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (g / government-organization :name (n / name :op1 "Fed")) :arg2 (o / official))) :arg1 (p2 / progress-01) :location (a / area :mod (o2 / other))) :mod (n2 / negative :arg1-of (i / increase-01))) :arg2 (e3 / expect-01 :arg1 (m2 / monitor-01 :arg0 (p3 / person :arg0-of (h2 / have-org-role-91 :arg1 (g2 / government-organization) :arg2 (o3 / official))) :arg1 (p4 / progress-01) :location (a2 / area :mod (o4 / other))) :mod (o5 / only :polarity -) :purpose (c2 / consult-01 :arg0 (p5 / person) :arg1 (a3 / and :op1 (b / bank :mod (c3 / central) :mod (c4 / central)) :op2 (p6 / person :arg1-of (e4 / expert-01))) :arg2 (a4 / and :op1 (b2 / bank :mod (c5 / central) :mod (c6 / central)) :op2 (p7 / person :arg1-of (e5 / expert-01))) :manner (g3 / good :degree (m3 / more))))))
(e / expect-01 :arg1 (m / monitor-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (g / government-organization :name (n / name :op1 "Fed")) :arg2 (o / official))) :arg1 (p2 / progress-01 :arg1 (p3 / person :arg0-of (h2 / have-org-role-91 :arg1 (g2 / government-organization) :arg2 (o2 / official))) :location (a / area :mod (o3 / other))) :mod (o4 / only :polarity -)) :arg1-of (c / cause-01 :arg0 (e2 / expect-01 :arg1 (m2 / monitor-01 :arg0 (p4 / person :arg0-of (h3 / have-org-role-91 :arg1 (g3 / government-organization) :arg2 (o5 / official))) :arg1 (p5 / progress-01) :location (a2 / area :mod (o6 / other)))) :arg1-of (c2 / contrast-01 :arg2 (c3 / consult-01 :arg0 (p6 / person) :arg1 (a3 / and :op1 (b / bank :mod (c4 / central) :mod (c5 / central)) :op2 (p7 / person :arg1-of (e3 / expert-01))) :purpose (b2 / better :arg0 (a4 / and) :arg1 (e4 / economy :poss (w / world)) :manner (g4 / good :degree (m3 / more)))) :mod (a5 / also))))
(a / and :op1 (p / play-02 :arg0 (p2 / person :name (n / name :op1 "Lucian")) :arg1 (m / match-03)) :op2 (d / do-02 :arg0 (p3 / person) :arg1 (m2 / match-03) :mod (a2 / as-well)))
(c / contrast-01 :arg1 (c2 / consider-01 :arg0 (d / democrat :mod (v / vote-01) :arg1-of (i / include-91 :arg2 (p / person :arg0-of (v2 / vote-01)) :arg3 (p2 / percentage-entity :value (N / N-A)))) :arg1 (p3 / person :name (n / name :op1 "Clinton")) :arg2 (c3 / chance-02 :arg1 (w / win-01 :arg0 (p4 / person) :arg2 (e / elect-01 :arg1-of (g / general-02))))) :arg2 (d2 / drop-01 :arg1 (f / figure) :arg3 (p5 / percentage-entity :value (N2 / N-A)) :time (m / month :mod (l / last))))
(a / and :op2 (d / disturb-01 :mode (i / interrogative) :arg0 (p / person :arg0-of (h / have-rel-role-91 :arg1 (h2 / he) :arg2 (f / father))) :arg1 (p2 / person :arg0-of (h3 / have-rel-role-91 :arg1 (h4 / he) :arg2 (f2 / father)))))
(p / propose-01 :arg0 (b / branch :mod (d / democracy :mod (s / social)) :arg1-of (i / include-91 :arg2 (b2 / branch :mod (d2 / democracy :mod (s2 / social)))) :quant (m / majority :mod (v / vast))) :arg1 (a / and :op1 (g / government-organization :name (n / name :op1 "Congress") :mod (e / extraordinary)) :op2 (g2 / government-organization :name (n2 / name :op1 "Congress") :poss (o / organization)) :arg1-of (m2 / monday :arg0 (o2 / organization :name (n3 / name :op1 "Executive" :op2 "Committee")))) :time (d3 / date-entity :month 11 :day (N / N-A)))
(a / and :op1 (r / right-05 :polarity - :arg1 (g / give-01 :arg1 (t / ticket) :arg2 (p / prospect-02 :arg0 (p2 / person :name (n / name :op1 "Cameron")) :location (c / continent :name (n2 / name :op1 "Europe"))))) :op2 (e / enable-01 :arg0 (p3 / person) :arg1 (s / support-01 :arg0 (p4 / person) :arg1 (c2 / campaign-01 :arg0 (p5 / person) :arg1 (c3 / campaign-01 :arg0 (p6 / person) :arg1 (r2 / referendum)))) :arg2 (c4 / campaign-01 :arg0 (p7 / person) :arg1 (r3 / referendum))) :arg1-of (s2 / say-01 :arg0 (p8 / person :name (n3 / name :op1 "McDonnell"))))
(m / move-01 :arg1 (o / organization :name (n / name :op1 "Duba")) :arg2 (e / end-01 :arg1 (o2 / organization :name (n2 / name :op1 "Packers"))))
(m / move-01 :arg0 (p / person :name (n / name :op1 "Duba")) :arg2 (l / location :name (n2 / name :op1 "Pacurari")))
(a / and :op1 (a2 / appear-01 :arg1 (o / organization :name (n / name :op1 "Les" :op2 "Dissonances")) :prep-on (s / scene :mod (m / music))) :op2 (e / ensemble :arg0 (m2 / music :mod (c / classical) :mod (o2 / only)) :arg1 (m3 / music :mod (c2 / classical) :mod (o3 / only) :arg1-of (c3 / conductor :polarity -)) :time (t / time :mod (t2 / that))))
(b / begin-01 :arg0 (t / they) :arg1 (b2 / believe-01 :arg0 (t2 / they) :arg1 (t3 / trainer :arg0 (y / you) :arg1 (t4 / trainer))) :time (b3 / begin-01 :arg0 (t5 / they) :arg1 (b4 / believe-01 :arg0 (t6 / they) :arg1 (e / event :mod (t7 / this)))))
(a / accuse-01 :arg0 (p / person :name (n / name :op1 "Deng")) :arg1 (m / military :name (n2 / name :op1 "N-A")) :arg2 (e / eyebrow) :time (a2 / after :op1 (l / lose-02 :arg0 (p2 / person) :arg1 (c / consciousness))))
(s / show-01 :arg0 (f / figure :quant 8 :location (p / poll-01)) :arg1 (c / chance-02 :arg0 (p2 / person :name (n / name :op1 "Donald" :op2 "Trump")) :arg1 (g / good)))
(c / consensus :polarity - :topic (d / decide-01 :arg0 (w / we) :arg1 (c2 / cause-01 :arg0 (g / government-organization :name (n / name :op1 "Fed")) :arg1 (s / stable-03 :polarity - :arg1 (m / market :mod (f / finance))))))
(a / and :op1 (s / say-01 :arg0 (p / person :arg0-of (m / manage-02 :arg1 (m2 / make-01 :arg0 (p2 / person) :arg1 (m3 / meet-03 :mod (t / this))))) :arg1 (e / event :mod (k / kind :ord (o / ordinal-entity :value 1)))) :op2 (d / do-02 :arg0 (w / we) :arg1 (i / it) :time (f / future) :time (r / revolution-03 :quant (a2 / all))))
(( / ( :( (n / name) :op1 "Andrew" :op2 "Bingham")
(s / set-up-03 :arg0 (h / he) :arg1 (f / firm :name (n / name :op1 (n2 / nsw)) :mod (s2 / security :mod (m / macro))) :accompanier (p / person :arg0-of (h2 / have-rel-role-91 :arg1 (h3 / he) :arg2 (m2 / mother))) :time (d / date-entity :month 4 :year 2009) :time (a / after :op1 (e / expel-01 :arg0 (h4 / he) :arg1 (p2 / person :arg0-of (h5 / have-rel-role-91 :arg1 (p3 / person :name (n3 / name :op1 "Vasile" :op2 "Blaga")) :arg2 (d2 / daughter))))))
(a / and :op1 (r / recommend-01 :arg1 (h / hold-02 :arg1 (a2 / account-01 :arg0 (a3 / and :op1 (p / person :arg0-of (h2 / have-org-role-91 :arg2 (h3 / head-of-state))) :op2 (p2 / person :arg0-of (h4 / have-org-role-91 :arg1 (t / they) :arg2 (m / member)))) :arg1 (a4 / and :op1 (p3 / person :arg0-of (h5 / have-org-role-91 :arg2 (h6 / head-of-state))) :op2 (p4 / person :arg0-of (h7 / have-org-role-91 :arg1 (t2 / they) :arg2 (m2 / member))))))) :op2 (i / important :domain (m3 / measure-02 :arg0 (a5 / authority))))
(a / and :op1 (o / obligate-01 :arg2 (h / hold-02 :arg1 (a2 / account-01 :arg1 (a3 / and :op1 (c / custom) :op2 (p / person :arg0-of (h2 / have-org-role-91 :arg1 (t / they) :arg2 (m / member))))))) :op2 (i / important :domain (m2 / measure-02 :arg0 (a4 / authority))))
(s / see-01 :arg0 (w / we) :arg1 (b / bulwark :location (c / continent :name (n / name :op1 "Europe"))))
(m / multi-sentence :snt1 (l / lord) :snt2 (a / and :op1 (i / insist-01 :arg0 (p / person :name (n / name :op1 "Hall") :arg0-of (h / have-org-role-91 :arg2 (l2 / lord))) :arg1 (t / take-01 :arg0 (p2 / person) :arg1 (a2 / and :op1 (l3 / location :name (n2 / name :op1 "Paloma" :op2 "Faith")) :op2 (j / jury :mod (p3 / person :name (n3 / name :op1 "Boy" :op2 "George")))))) :op2 (d / do-02 :arg1 (' / '') :medium (c / company :name (n4 / name :op1 "BBC") :arg1-of (s / specific-02)))))
(a / and :op1 (s / suspect-01 :arg0 (p / person :name (n / name :op1 "Nick" :op2 "Hess") :mod (c / country :name (n2 / name :op1 "N-A"))) :arg1 (f / family :arg1-of (h / have-org-role-91 :arg0 (p2 / person) :arg2 (m / member))) :arg2 (f2 / family :arg1-of (h2 / have-org-role-91 :arg0 (p3 / person) :arg2 (m2 / member))) :mod (f3 / fraudulent)) :op2 (f4 / filmandu :arg0 (p4 / person :arg0-of (h3 / have-rel-role-91 :arg1 (p5 / person) :arg2 (w / wife))) :arg1 (p6 / person) :mod (e / even) :time (a2 / ametit :arg1 (p7 / person))) :op3 (r / realised :arg1 (w2 / word :poss (p8 / person)) :degree (h4 / hardly)))
(s / say-01 :arg0 (h / he :arg0-of (r / request-01 :arg1 (f / family :arg1-of (h2 / have-org-role-91 :arg0 (p / person :name (n / name :op1 "Corneliu" :op2 "Vadim" :op3 "Tudor")) :arg2 (m / member))))) :arg1 (r2 / remain-01 :arg1 (c / church) :arg3 (o / open-05) :time (n2 / night :mod (n3 / night :mod (l / last)) :arg1-of (c2 / close-01 :time (n4 / night :mod (l2 / last))) :arg1-of (c3 / close-01 :time (m2 / morning :quant 07.00)))))
(a / and :op1 (a2 / and :op1 (s / small :degree (m / more) :domain (o / organization :name (n / name :op1 "Hewlett" :op2 "Packard" :op3 "Enterprise"))) :op2 (f / focus-01 :arg0 (o2 / organization) :degree (m2 / more) :compared-to (h / hp :arg0 (o3 / organization) :time (t / today)))) :op2 (a3 / and :op1 (f2 / focus-01 :arg0 (o4 / organization) :arg2 (b / business :arg0-of (h2 / help-01 :arg1 (b2 / business) :arg2 (s2 / style :mod (b3 / business) :mod (b4 / business))))) :op2 (s3 / say-01 :arg0 (p / person :name (n2 / name :op1 "Whitman")) :arg1 (h3 / help-01 :arg0 (b5 / business) :arg1 (b6 / business) :arg2 (b7 / business)))))
(a / and :op1 (a2 / and :op1 (s / small :degree (m / more) :domain (o / organization :name (n / name :op1 "Hewlett" :op2 "Packard" :op3 "Enterprise"))) :op2 (f / focus-01 :arg0 (o2 / organization) :degree (m2 / more) :compared-to (h / hp :arg0 (o3 / organization) :time (t / today)))) :op2 (a3 / and :op1 (f2 / focus-01 :arg0 (o4 / organization) :arg2 (b / business :arg0-of (h2 / help-01 :arg1 (t2 / trend :mod (r / run-01 :arg1 (b2 / business)) :mod (s2 / style :mod (n2 / new)))))) :op2 (s3 / say-01 :arg0 (p / person) :arg1 (p2 / person :name (n3 / name :op1 "Whitman")))))
(a / and :op1 (b / bear-02 :arg1 (p / person :name (n / name :op1 "Corneliu" :op2 "Vadim" :op3 "Tudor")) :time (d / date-entity :year 1949 :month 11 :day 28) :location (p2 / peninsula :name (n2 / name :op1 "N-A"))) :op2 (p3 / politician) :op3 (j / journalist))
(s / say-01 :arg1 (s2 / scary-03 :arg0 (i / it)) :arg2 (t / tell-01 :arg0 (p / person :name (n / name :op1 "Scott" :op2 "Ortoria") :arg0-of (h / have-rel-role-91 :arg1 (p2 / person :name (n2 / name :op1 "Nhaijah")) :arg2 (m / mother))) :arg1 (t2 / tell-01 :arg0 (p3 / person) :arg2 (p4 / publication :name (n3 / name :op1 "CNN")))))
(w / wonder-01 :arg0 (p / person :quant (m / many)) :arg1 (e / extent :degree-of (p2 / possible-01 :arg1 (a / affect-01 :arg0 (w2 / we) :arg1 (c / choose-01 :arg0 (w3 / we) :arg1 (p3 / politician :arg0-of (h / have-03 :arg1 (t / thing :arg1-of (d / decide-01 :arg3 (t2 / thing :arg2-of (p4 / position-01 :arg1 (p5 / politician))))))))))) :time (a2 / after :op1 (b / become-01 :arg1 (h2 / he) :arg2 (p6 / person :arg0-of (l / lead-02 :arg1 (p7 / political-party :name (n / name :op1 "Labour" :op2 "Party")) :mod (n2 / new)) :location (c2 / country :name (n3 / name :op1 "Britain"))))) :time (t3 / today :mod (e2 / even)))
(a / and :op1 (a2 / and :op1 (s / stand-01 :arg1 (o / organization :name (n / name :op1 "Islamic" :op2 "State")) :arg2 (o2 / organization) :time (t / then)) :op2 (k / know-01 :polarity - :arg0 (w / we) :arg1 (f / fall-01 :arg1 (r / regime :mod (p / person :name (n2 / name :op1 "Assad")))) :time (n3 / now))))
(c / cause-01 :arg0 (v / value-01 :arg1 (t / thing :arg2-of (v2 / value-01 :arg1 (m / market :mod (c2 / commodity))))) :arg1 (t2 / take-01 :arg0 (c3 / company) :arg1 (t3 / thing :arg2-of (p / price-01 :arg1 (m2 / market :mod (c4 / commodity)) :arg1-of (f / fall-01))) :time (y / year :mod (t4 / this)) :arg1-of (c5 / cause-01 :arg0 (a / and :op1 (s / slumped :arg0 (c6 / country :name (n / name :op1 "China")) :arg1 (a2 / activity-06 :arg1 (e / economy) :arg0-of (c7 / counter-01 :arg1 (e2 / economy)))) :op2 (c8 / cause-01 :arg1 (d / disaster :location (m3 / market)))))) :time (y2 / year :mod (t5 / this)))
(e / evolve :arg1 (e2 / economy :poss (c / country :name (n / name :op1 "US"))) :manner (w / well :degree (r / relative)) :arg1-of (c2 / cause-01 :arg0 (a / and :op1 (t / trillions :arg1 (e3 / economy) :arg2 (s / sheet :mod (b / balance-01))) :op2 (g / generate-01 :arg1 (l / level :arg1-of (l2 / low-04) :consist-of (i / inflation))))))
(l / lie-07 :arg1 (e / economy :mod (c / country :name (n / name :op1 "US"))) :arg2 (w / well :degree (r / relative)) :arg1-of (c2 / cause-01 :arg0 (a / and :op1 (b / bring-01 :arg0 (r2 / recovery) :arg1 (m / monetary-quantity :quant (N / N-A) :unit (d / dollar)) :arg2 (s / sheet :mod (b2 / balance-01))) :op2 (g / generate-01 :arg0 (e2 / economy) :arg1 (l2 / level :mod (i / inflation) :arg1-of (l3 / low-04))))))
(p / probable :domain (t / tell-01 :arg0 (y / you) :arg1 (s / serve-01 :arg0 (y2 / you) :arg2 (y3 / you) :condition (c / cooked :arg0 (y4 / you) :location (i / inside))) :arg2 (y5 / you)))
(s / say-01 :arg0 (p / person :name (n / name :op1 "Bishnu" :op2 "Prasad" :op3 "Dhakal") :arg0-of (h / have-org-role-91 :arg1 (p2 / police :mod (d / district)) :arg2 (c / chief))) :arg1 (a / and :op1 (g / gather-03 :arg0 (p3 / person :arg0-of (p4 / protest-01) :quant (m / more-than :op1 1000)) :location (i / in-front-of :op1 (s2 / station :mod (p5 / police)))) :op2 (t / throw-01 :arg0 (s3 / some :arg1-of (i2 / include-91 :arg2 (p6 / person))) :arg1 (a2 / and :op1 (r / rock) :op2 (m2 / molotov)))))
(m / multi-sentence :snt1 (p / play-01 :arg1 (a / advertise-01 :arg1-of (r / realistic-03 :degree (m2 / more))) :manner (a2 / advertise-01 :arg1-of (r2 / realistic-03 :degree (m3 / more)))) :snt2 (b / be-located-at-91 :arg1 (a3 / and :op1 (a4 / animatii) :op2 (c / crap :arg1-of (s / strong-02))) :arg2 (a5 / and :op1 (a6 / animatii) :op2 (c2 / crap :arg1-of (s2 / strong-02))) :degree (m4 / more)))
(m / multi-sentence :snt1 (c / contrast-01 :arg1 (p / play-11 :arg0 (t / they) :arg2 (a / advertising :arg1-of (r / realistic-03 :degree (m2 / more)))) :arg2 (i / imbogatindu :arg0 (t2 / they) :arg1 (h / he) :manner (a2 / and :op1 (a3 / animatii :arg1 (h2 / he)) :op2 (c2 / colours :arg1 (h3 / he) :arg1-of (s / strong-02))))) :snt2 (s2 / striking :degree (m3 / more)))
(a / and :op1 (p / person :name (n / name :op1 "Matt" :op2 "Lever") :arg0-of (h / have-org-role-91 :arg1 (p2 / person :name (n2 / name :op1 "Matt" :op2 "Lever") :arg0-of (h2 / have-org-role-91 :arg1 (o / organization) :arg2 (d / director :mod (c / creative)))) :arg2 (d2 / director :mod (c2 / creative)))) :op2 (t / think-01 :arg0 (p3 / person) :arg1 (p4 / provide-01 :arg0 (p5 / person) :arg1 (c3 / campaign-01 :arg0-of (s / seek-01 :arg1 (a2 / avoid-01 :arg0 (p6 / person) :arg1 (a3 / avoid-01 :arg0 (p7 / person) :arg1 (a4 / avoid-01 :arg0 (p8 / person) :arg1 (' / '' :arg0 (p9 / political-party) :arg1 (p10 / political-party))))))))))
(s / say-01 :arg0 (o / organization :name (n / name :op1 "Moody")) :arg1 (c / contrast-01 :arg1 (a / and :op1 (s2 / say-01 :polarity - :arg0 (p / person) :arg1 (a2 / anything :topic (i / issue-02))) :op2 (r / remain-01 :arg1 (i2 / i) :arg3 (o2 / optimistic) :duration (t / time :arg1-of (l / long-03)))) :arg2 (r2 / reach-01 :arg0 (p2 / person) :arg1 (l2 / level :mod (f / frustrate-01)) :frequency (s3 / sometimes))))
(t / think-01 :arg0 (i / i) :arg1 (c / continue-01 :mode (i2 / interrogative) :arg1 (a / and :op1 (c2 / continue-01 :arg1 (h / have-org-role-91 :arg2 (m / member))) :op2 (t2 / term :time (f / future)))))
(s / say-01 :arg0 (t / thing :arg1-of (s2 / state-01)) :arg1 (p / produce-01 :arg0 (i / it) :arg1 (l / list :mod (n / negative) :arg0-of (i2 / identify-01 :arg1 (a / and :op1 (s3 / sector) :op2 (a2 / area :location-of (a3 / activity-06)) :arg0-of (p2 / permit-01 :polarity - :arg1 (i3 / invest-01)))))))
(p / possible-01 :polarity - :arg1 (p2 / pretend-01 :arg0 (i / i) :arg1 (o / objective :domain (i2 / i) :degree (t / total))))
(s / say-01 :arg0 (p / percentage-entity :value (N / N-A)) :arg1 (l / leave-13 :arg0 (t / that) :arg1 (o / open-01 :arg1 (t2 / thing :arg1-of (c / choose-01 :arg0 (t3 / they))))))
(h / have-condition-91 :arg1 (p / possible-01 :arg1 (m / meet-03 :arg0 (w / we))) :arg2 (t / talk-01 :arg0 (w2 / we) :arg2 (w3 / we)))
(s / seem-01 :arg1 (b / benefit-01 :arg0 (c / change-01 :arg1 (d / direction)) :arg1 (b2 / benefit-01 :arg0 (c2 / change-01) :ord (o / ordinal-entity :value 1)) :time (p / produce-01 :arg0 (i / it) :arg1 (o2 / ordinal-entity :value 1) :location (d2 / dinosaur))))
(a / announce-01 :arg0 (i / i) :arg1 (h / hire-01 :arg0 (i2 / it) :arg1 (p / person :quant 50000 :arg0-of (w / work-01) :mod (s / seasonal)) :arg2 (p2 / period :time-of (h2 / holiday))) :time (y / year :mod (s2 / same)))
(c / contrast-01 :arg2 (f / find-02 :arg0 (t / they) :arg1 (a / and :op1 (c2 / change-01 :arg0 (t2 / they) :arg1 (c3 / clothes :poss (p / person :name (n / name :op1 "Deng")))) :op2 (a2 / and :op1 (s / seek-01 :arg0 (t3 / they) :arg1 (s2 / symptom :poss (p2 / person) :location (c4 / company :name (n2 / name :op1 "Google")))) :op2 (c5 / contact-01 :arg0 (t4 / they) :arg1 (h / he) :prep-on (l / level :mod (n3 / nation))) :op3 (l2 / lab :location (l3 / level :mod (n4 / nation))) :op4 (p3 / person :name (n5 / name :op1 "Chris" :op2 "Wagner") :arg0-of (h2 / have-org-role-91 :arg1 (p4 / police) :arg2 (c6 / chief))) :time (c7 / conference :mod (p5 / press))))))
(m / multi-sentence :snt1 (d / define-01 :arg1 (p / pressure-01 :arg1 (b / between :op1 (l / location :name (n / name :op1 "Green" :op2 "Cape" :op3 "Islands")) :op2 (m2 / meteorologul :mod (l2 / less :degree (m3 / more))))) :arg2 (p2 / pressure-01 :arg1 (b2 / between :op1 (l3 / location :name (n2 / name :op1 "Green" :op2 "Cape" :op3 "Islands")) :op2 (m4 / meteorologul :mod (l4 / less :degree (m5 / more))))) :mod (a / also)) :snt2 (a2 / add-01 :arg0 (h / he)))
(p / put-01 :arg0 (p2 / person :name (n / name :op1 "Radu" :op2 "Constantin" :op3 "Brancusi")) :arg1 (i / it) :arg2 (a / and :op1 (c / collect-01 :arg0 (p3 / person) :arg1 (s / some)) :op2 (b / bring-01 :arg0 (p4 / person) :arg1 (p5 / person))))
(c / change-01 :arg0 (y / you) :arg1 (w / word :quant (f / few) :accompanier (p / person :location (a / around :op1 (t / they)))) :mod (j / just))
(p / put-02 :arg1 (m / mask :arg1 (o / oxygen)) :location (r / room :mod (l / locker)))
(p / put-02 :arg1 (m / mask :arg1 (o / oxygen)) :location (r / room :mod (l / locker)))
(a / and :op1 (p / play-01 :arg0 (p2 / person :mod (c / cricket) :arg0-of (h / have-03 :arg1 (f / factor :quant (x / x)))) :mod (c2 / cricket)) :op2 (s / see-01 :arg0 (w / we) :time (e / early :degree (m / more)) :time (s2 / season :mod (t / this)) :time (s3 / score-01 :arg1 (h2 / he) :arg2 (a2 / against :op1 (p3 / product-of :op1 236 :op2 236)))))
(d / drop-01 :arg1 (e / environment :beneficiary (p / person :arg0-of (u / undergo-28 :arg1 (i / intervene-01 :mod (s / surgical))))) :arg2 (p2 / person :quant 31) :time (u2 / until :op1 (e2 / end-01 :arg1 (y / year :ord (o / ordinal-entity :value 5) :part-of (s2 / study)))))
(s / say-01 :arg0 (s2 / study :mod (n / new)) :arg1 (p / possible-01 :arg1 (m / maintain-01 :arg1 (b / benefit-01 :arg0 (r / reduce-01 :arg1 (w / weight)) :arg1 (s3 / surgery-01 :arg2 (r2 / reduce-01 :arg1 (s4 / surgery-01))) :time (c / case-03 :arg1 (o / obesity :arg1-of (e / easy-05)))))))
(a / and :op1 (c / create-01 :arg1 (a2 / animal :arg1-of (c2 / create-01 :time (e / era :mod (a3 / another)))) :time (n / now)) :op2 (a4 / adapt-01 :polarity - :arg1 (a5 / animal) :arg2 (s / situation) :time (n2 / now)))
(a / advise-01 :arg0 (p / person :name (n / name :op1 "Lopez")) :arg1 (a2 / and :op1 (p2 / person :arg0-of (h / have-rel-role-91 :arg1 (p3 / person) :arg2 (p4 / parent))) :op2 (p5 / person :arg0-of (t / teach-01))) :arg2 (o / or :op1 (u / use-01 :arg0 (p6 / person) :arg1 (o2 / or :op1 (p7 / product) :op2 (w / wet)) :manner (a3 / alcohol :polarity -)) :op2 (l / leave-15 :polarity - :arg0 (p8 / person) :arg1 (h2 / hand :part-of (p9 / person)) :arg1-of (c / cause-01 :arg0 (r / reach-01 :arg0 (p10 / person) :arg1 (h3 / hand))))))
(a / advise-01 :arg0 (p / person :name (n / name :op1 "Lopez")) :arg1 (a2 / and :op1 (p2 / person :arg0-of (h / have-rel-role-91 :arg1 (p3 / person) :arg2 (p4 / parent))) :op2 (p5 / person :arg0-of (t / teach-01))) :arg2 (a3 / and :op1 (u / use-01 :arg0 (p6 / person) :arg1 (o / or :op1 (a4 / and :op1 (w / wipe :mod (w2 / wet)) :op2 (w3 / wipe :mod (w4 / wet)))) :op2 (h2 / hand :mod (d / detergent)))) :op2 (l / let-01 :polarity - :arg0 (p7 / person) :arg1 (r / reach-01 :arg1 (c / child))))
(b / believe-01 :arg0 (p / person :name (n / name :op1 "Simon" :op2 "Jenkins")) :arg1 (t / this) :manner (c / certain))
(a / and :op1 (h / have-03 :arg0 (w / we) :arg1 (a2 / activity-06 :arg1-of (d / differ-02))) :op2 (a3 / associate-01 :arg1 (w2 / we) :arg2 (i / institution :arg0-of (d2 / depend-01 :arg1 (d3 / drug :arg0-of (d4 / depend-01 :arg1 (d5 / drug))) :mod (o / only))) :frequency (o2 / often)) :location (l / location :name (n / name :op1 "Centre")))
(m / multi-sentence :snt1 (c / contrast-01 :arg2 (i / improve-01 :arg0 (' / '' :mod (t / this)) :arg1 ('2 / '' :mod (c2 / control-01 :arg1 (s / self)) :arg1-of (i2 / improve-01)))) :snt2 (r / reduce-01 :polarity - :arg0 (a / and :op1 (p / person :arg0-of (r2 / research-01)) :op2 (p2 / person :arg0-of (r3 / research-01))) :arg1 (r4 / rate :mod (m2 / mortality)) :time (a2 / after :op1 (n / now) :quant (t2 / temporal-quantity :quant (N / N-A) :unit (y / year)))))
(s / say-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (b / body :poss (b2 / body)) :arg3 (l / lead-02 :arg0 (p2 / person) :arg1 (b3 / body)))) :arg1 (m / move-01 :arg1 (p3 / person :mod (w / world :mod (w2 / world :mod (s2 / so)))) :arg2 (o / organization :name (n / name :op1 "St" :op2 "George" :op3 "Church") :part-of (o2 / organization :name (n2 / name :op1 "St" :op2 "George" :op3 "Church") :part-of (b4 / body))) :degree (m2 / much :degree (s3 / so) :compared-to (o3 / or :op1 (l2 / lacasului :arg1 (p4 / person)) :op2 (a / and :op1 (o4 / openness) :op2 (e / equality))))) :medium (w3 / wednesday))
(s / say-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (p2 / person :name (n / name :op1 "Corneliu" :op2 "Vadim" :op3 "Tudor") :arg1-of (i / include-91 :arg2 (w / world :mod (b / both)) :arg3 (n2 / neinsufletit :mod (b2 / body)))) :arg3 (n3 / neinsufletit :mod (b3 / body)))) :arg1 (p3 / person :name (n4 / name :op1 "Emil" :op2 "parohul" :op3 "Caramizaru") :arg0-of (h2 / have-org-role-91 :arg1 (w2 / world :mod (b4 / both)) :arg3 (n5 / neinsufletit :mod (b5 / body)))) :arg4 (t / team :name (n6 / name :op1 "N-A")) :arg1-of (c / cause-01 :arg0 (c2 / church :polarity - :arg0 (c3 / church :poss (p4 / person)) :arg1 (o / or :op1 (l / lacasului) :op2 (l2 / lacasului)) :time (n7 / no-longer))))
(p / person :arg0-of (h / have-rel-role-91 :arg1 (y / you) :arg2 (f / friend)) :arg0-of (h2 / have-rel-role-91 :arg1 (y2 / you) :arg2 (f2 / friend)))
(c / cause-01 :arg0 (i / issue-02 :arg0 (i2 / it) :mod (s / sensitive)) :arg1 (w / want-01 :polarity - :arg0 (a / and :op1 (p / person :mod (c2 / country :name (n / name :op1 "Germany"))) :op2 (p2 / person :arg0-of (h / have-org-role-91 :arg1 (p3 / person :name (n2 / name :op1 "Merkel"))))) :arg1 (a2 / appear-01 :arg1 (p4 / person) :location (c3 / country :quant (m / many))) :arg1-of (c4 / cause-01 :arg0 (r / react-01 :arg0 (p5 / person :arg0-of (m2 / migrate-01) :mod (o / organization :name (n3 / name :op1 "EU"))) :arg1 (' / '' :mod (h2 / head))))))
(e / easy-05 :arg1 (a / apply-01 :arg0 (f / foreign) :arg1 (o / or :op1 (p / permit-01 :arg1 (f2 / fly-01 :mod (p2 / permanent))) :op2 (c / card :mod (g / green) :arg1-of (c2 / call-01 :manner (s / so))) :op3 (t / thing :arg1-of (r / require-01 :arg1-of (p3 / possible-01 :polarity -))) :op4 (p4 / process-02 :arg1 (a2 / apply-01)) :op5 (p5 / process-02 :arg1 (a3 / apply-01)))) :degree (m / more))
(r / report)
(s / say-01 :arg0 (p / person :name (n / name :op1 "Victor" :op2 "Ponta") :arg0-of (h / have-org-role-91 :arg2 (m / minister :mod (p2 / prime)))) :arg1 (i / important :domain (a / and :op1 (i2 / important :domain (o / organization :name (n2 / name :op1 "PSD" :op2 "Congress") :mod (b / beyond :op1 (e / elect-01 :arg0-of (l / lead-02))))) :op2 (m2 / message-01 :arg0 (p3 / person) :arg1 (w / want-01 :arg0 (g / government-organization) :arg1 (c / continue-01 :arg0 (g2 / government-organization) :arg1 (g3 / government-organization :arg0-of (g4 / govern-01) :poss (g5 / government-organization)) :condition (d / decide-01 :arg0 (p4 / party) :arg1 (g6 / go-02 :arg0 (p5 / party) :arg4 (p6 / political-party)))))))) :medium (t / tuesday :arg0 (p7 / person)))
(c / change-01 :polarity - :arg1 (i / it) :arg1-of (c2 / cause-01 :arg0 (a / and :op1 (h / have-03 :arg0 (w / we) :arg1 (t / thing :arg2-of (r / result-01 :arg1 (t2 / thing :arg2-of (r2 / result-01)))) :degree (v / very)) :op2 (s / situation :mod (f / finance) :domain (t3 / that) :time (m / middle)))))
(a / and :op2 (h / have-03 :arg0 (y / you) :arg1 (c / case :mod (d / dramatic) :topic (c2 / child :arg1-of (l / lie-07 :arg2 (a2 / and :op1 (c3 / country :name (n / name :op1 "Turkey")) :op2 (t / thing :arg1-of (o / opine-01 :arg0 (p / public))))))) :time (t2 / then)))
(d / drop-01 :arg1 (o / office :mod (n / new) :poss (o2 / organization :name (n2 / name :op1 "County" :op2 "Council")) :mod (n3 / new)))
(h / headquarter-01 :arg1 (o / organization :name (n / name :op1 "County" :op2 "Council")) :mod (n2 / new) :mod (' / ''))
(t / talk-01 :arg0 (w / we) :arg1 (i / invest-01 :mod (m / massive)) :arg1-of (c / cause-01 :arg0 (m2 / money :quant (m3 / many))))
(s / sure-02 :arg0 (i / i) :arg1 (r / ready-02 :arg1 (p / person :arg0-of (p2 / play-01)) :arg2 (p3 / participate-01 :arg0 (p4 / person) :arg1 (t / tournament))))
(r / rule :mod (o / other) :domain (s / something :mod (e / else)))
(s / say-01 :arg0 (p / politician :mod (c / continent :name (n / name :op1 "N-A"))) :arg1 (s2 / say-01 :polarity - :arg0 (p2 / politician) :arg1 (s3 / slander :polarity - :mod (s4 / such))))
(r / receive-01 :arg0 (i / injure-01 :mod (o / other)) :arg1 (a / amount :quant (1 / 1/2) :arg1-of (i2 / include-91 :arg2 (a2 / amount :mod (t / that)))))
(i / include-91 :arg1 (s / say-01 :arg0 (p / person :quant 2 :arg1-of (i2 / include-91 :arg2 (p2 / person :quant 10))) :arg1 (u / upset-01 :arg1 (p3 / person)) :condition (w / win-01 :arg0 (p4 / person :name (n / name :op1 "Trump")) :arg1 (r / race :mod (n2 / nominate-01)))) :arg2 (p5 / person :quant 10 :arg1-of (i3 / include-91 :arg2 (p6 / person :quant 10))))
(b / be-located-at-91 :arg1 (a / and :op1 (p / person :arg0-of (h / have-org-role-91 :arg1 (b2 / branch :mod (o / outstanding) :part-of (p2 / political-party :name (n / name :op1 "N-A"))) :arg2 (s / secretary))) :op2 (p3 / person :name (n2 / name :op1 "Maricel" :op2 "Popa") :arg0-of (h2 / have-org-role-91 :arg2 (s2 / senator))) :op3 (p4 / person :name (n3 / name :op1 "Florin" :op2 "Constantinescu") :arg0-of (h3 / have-org-role-91 :arg2 (s3 / senator))) :op4 (p5 / person :name (n4 / name :op1 "Sorin" :op2 "Lazar") :arg0-of (h4 / have-org-role-91 :arg2 (s4 / senator))) :op5 (p6 / person :name (n5 / name :op1 "Sorin" :op2 "Lazar") :arg0-of (h5 / have-org-role-91 :arg2 (s5 / senator))) :op6 (p7 / person :name (n6 / name :op1 "Sorin" :op2 "Lazar") :arg0-of (h6 / have-org-role-91 :arg1 (g / government-organization :name (n7 / name :op1 "N-A") :poss (o2 / organization :name (n8 / name :op1 "County" :op2 "Council"))) :arg2 (c / chairman :mod (i / interim)))) :op7 (p8 / person :name (n9 / name :op1 "Victorel" :op2 "Lupu") :arg0-of (h7 / have-org-role-91 :arg1 (p9 / party) :arg2 (c2 / chairman :mod (i2 / interim))))) :arg2 (p10 / party) :mod (s6 / short))
(c / contrast-01 :arg1 (r / rise-01 :arg1 (r2 / revenue :mod (g / ground) :mod (d / division)) :arg2 (p / percentage-entity :value (N / N-A))) :arg2 (s / stall-01 :arg1 (r3 / revenue) :arg1-of (c2 / cause-01 :arg0 (c3 / cost-01 :arg1 (r4 / revenue) :arg2 (a / and :op1 (p2 / packages :mod (l / large)) :op2 (i / insurance :poss (r5 / revenue))) :arg1-of (h / high-02 :degree (m / more))) :mod (v / virtual))))
(c / claim-01 :arg0 (m / man) :arg1 (d / damage-01 :arg0 (c2 / car) :arg1 (a / and :op1 (l / life :poss (h / he)) :op2 (f / family :arg1-of (h2 / have-org-role-91 :arg0 (h3 / he) :arg2 (m2 / member))))))
(s / subject :arg1-of (r / resemble-01))
(t / tender :arg0 (p / political-party :name (n / name :op1 "N-A")) :duration (p2 / period :op1 (t2 / temporal-quantity :quant (N / N-A) :unit (y / year))))
(a / and :op2 (r / recommend-01 :arg1 (n / note-01 :arg0 (w / we) :arg1 (j / job :arg1-of (g / get-01 :arg0 (w2 / we))))))
(d / define-01 :polarity - :arg0 (j / job :poss (t / they)) :arg1 (p / personality :poss (t2 / they)) :arg1-of (s / show-01 :arg0 (p2 / person :arg0-of (h / have-rel-role-91 :arg1 (t3 / they) :arg2 (f / friend)))))
(c / contrast-01 :arg2 (w / want-01 :polarity - :arg0 (y / you) :arg1 (g / go-02 :arg0 (y2 / you) :direction (a / ahead))))
(e / equal-01 :arg1 (n / number :quant-of (p / person :arg0-of (f / flocked :arg1 (c / computer) :purpose (p2 / put-01 :arg0 (p3 / person) :arg1 (h / hand :part-of (p4 / person)) :arg2 (b / bids))))) :arg2 (c2 / collapse-01 :arg1 (w / website :poss (w2 / website :quant (s / several)))) :time (y / year :mod (l / last)))
(a / address-03 :arg0 (p / person :name (n / name :op1 "Corbyn")) :arg2 (q / question-01 :quant 6 :arg1-of (i / include-91 :arg2 (q2 / question-01 :quant 6 :arg1-of (r / right-05 :arg2 (e / examine-01 :arg0 (a2 / and :op1 (m / media) :op2 (p2 / person :arg0-of (h / have-org-role-91 :arg1 (g / government-organization :arg0-of (g2 / govern-01)) :arg2 (m2 / member))))) :manner (c / close))))) :ord (o / ordinal-entity :value 1))
(d / dismantle-01 :arg0 (p / person :name (n / name :op1 "Griffiths")))
(c / contrast-01 :arg2 (a / and :op1 (g / get-22 :arg0 (i / i) :arg1 (p / point :location-of (c2 / care-01 :polarity - :arg0 (i2 / i) :time (a2 / anymore)))) :op2 (s / saddens :arg0 (i3 / i) :arg1 (i4 / i))))
(c / cause-01 :arg0 (t / thing :arg2-of (o / obligate-01 :arg1 (s / service :poss (y / you)))) :arg1 (b / be-located-at-91 :arg1 (y2 / you) :arg2 (i / institution) :arg1-of (c2 / cause-01 :arg0 (t2 / thing :arg2-of (o2 / obligate-01 :arg1 (s2 / service :poss (y3 / you))))) :arg1-of (s3 / say-01 :arg0 (h / he)) :time (a / after :op1 (s4 / session :mod (m / meet-03) :poss (g / government-organization :arg0-of (g2 / govern-01 :arg1 (g3 / government-organization :name (n / name :op1 "Parliament")))) :manner (j / joint)))))
(( / ( :( (n / name) :op1 "Plangea")
(a / aim-02 :arg1 (h / horror) :arg2 (p / person :arg0-of (p2 / passionate :arg1 (a2 / art)) :quant (a3 / all)) :concession (o / or :op1 (a4 / age) :op2 (e / experience)))
(a / address-01 :arg1 (g / golf-01) :arg2 (p / person :mod (a2 / all) :arg0-of (p2 / passionate :arg1 (a3 / art))) :concession (o / or :op1 (a4 / age) :op2 (e / experience)))
(m / multi-sentence :snt1 (l / look-01 :arg0 (i / i) :arg1 (m2 / magrebieni :location (c / country :name (n / name :op1 "France") :location (c2 / country :name (n2 / name :op1 "Germany"))))) :snt2 (e / enclavizati :quant (a / all) :domain (t / they)))
(a / and :op1 (c / colleague :arg0 (p / person :name (n / name :op1 "Colly") :arg0-of (h / have-org-role-91 :arg1 (l / location :name (n2 / name :op1 "Durham") :poss (p2 / person)) :arg2 (c2 / colleague))) :arg1 (p3 / person) :time (d / day)) :op2 (r / receive-01 :arg0 (p4 / person :name (n3 / name :op1 "Ben" :op2 "Stokes")) :arg1 (b / break :arg1-of (r2 / resemble-01) :prep-against (c3 / country :name (n4 / name :op1 "Australia")))) :op3 (h2 / have-03 :polarity - :arg0 (i / i) :arg1 (p5 / problem) :prep-with (t / that)))
(a / and :op1 (c / cure :arg1 (c2 / cold :mod (z / zaharat)) :arg2 (p / percentage-entity :value (N / N-A) :mod (j / just)) :arg1-of (c3 / complete-02)) :op2 (c4 / cured :arg1 (c5 / cold) :arg2 (s / subject :quant (b / between :op1 1 :op2 2 :mod (o / only))) :arg1-of (c6 / complete-02)))
(u / understand-01 :arg1 (o / obligate-01 :arg2 (g / give-01 :arg0 (p / person :quant (m / many)) :arg1 (o2 / other :mod (e / each)))))
(r / remain-01 :arg1 (p / person :name (n / name :op1 "Louis" :op2 "van" :op3 "Gaal")) :arg3 (o / optimistic) :time (a / after :op1 (e / event :arg1-of (b / bring-01 :arg0 (p2 / person) :arg2 (a2 / and :op1 (e2 / eye :part-of (p3 / person)) :op2 (p4 / person :arg0-of (p5 / play-01)) :arg0-of (k / keep-04 :arg1 (p6 / person) :arg2 (u / under :op1 (t / temporal-quantity :quant (N / N-A) :unit (m / month) :mod (a3 / at-least)))))))) :arg1-of (c / cause-01 :arg0 (p7 / possible-01 :arg1 (p8 / play-01 :arg0 (p9 / person :name (n2 / name :op1 "Shaw")) :mod (a4 / again) :time (s / season :mod (t2 / this))))))
(c / contrast-01 :arg1 (c2 / cause-01 :arg1 (m / move-01 :arg0 (w / we) :arg2 (t / threshold :mod (d / despair) :mod (p / pragmatic :degree (m2 / more))))) :arg2 (g / goal :arg1-of (r / remain-01)))
(c / cost-01 :arg1 (t / this) :arg2 (a / all) :mod (c2 / certain))
(m / multi-sentence :snt1 (g / good :degree (m2 / more) :domain (d / do-02 :arg1 (e / environment :mod (s / such)) :manner (g2 / good :degree (m3 / more)))) :snt2 (s2 / say-01 :arg0 (p / person :arg0-of (a / analyze-01 :arg1 (i / income)) :arg1-of (f / fix-03)) :arg1 (a2 / analyze-01 :arg0 (p2 / person :name (n / name :op1 "Kathy" :op2 "Jones") :arg0-of (a3 / analyze-01 :arg1 (i2 / income)) :arg1-of (f2 / fix-03)) :location (p3 / peninsula :name (n2 / name :op1 "N-A")))))
(m / multi-sentence :snt1 (p / possible-01 :arg1 (c / calculator :arg0 (y / you) :arg1 (a / accesand :mod (i / imc)))) :snt2 (1 / 1d0zqdv :quant 1 :mod (u / usa.gov)))
(s / say-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (c / city :name (n / name :op1 "Sydney")) :arg2 (p2 / president :mod (v / vice)))) :arg1 (t / take-01 :arg0 (p3 / person) :arg1 (p4 / person :arg0-of (p5 / play-01) :source (s2 / storm)) :arg3 (s3 / storm) :purpose (t2 / take-01 :arg0 (p6 / person) :arg1 (p7 / person) :arg3 (t3 / team :name (n2 / name :op1 (t4 / throne) :op2 (' / '') :op3 ('2 / '') :op4 ('3 / '') :op5 (f / final) :op6 (f2 / final) :op7 (f3 / final) :op6 (f4 / final) :op7 (f5 / final))) :time (e / evening :mod (f6 / friday)))))
(a / add-01 :arg0 (h / he) :arg1 (s / solve-01 :polarity - :arg0 (f / force) :arg1 (p / problem :mod (t / this)) :time (e / ever)))
(i / iplayer :arg1-of (m / make-01 :arg0 (a / and :op1 (o / organization :name (n / name :op1 "RATP")) :op2 (c / controllers))))
(s / say-01 :arg0 (p / person :name (n / name :op1 "Peter" :op2 "Moody")) :arg1 (a / and :op1 (t / try-01 :arg0 (c / city-district :name (n2 / name :op1 "N-A") :name (n3 / name :op1 (r / racing) :op2 (r2 / racing)) :mod (r3 / racing)) :arg1 (i / infiltrate :arg0 (o / or) :arg1 (s2 / spy-01)) :time (y / year :mod (l / last))) :op2 (t2 / threaten-01 :arg0 (o2 / or) :arg2 (w / withdraw-01 :arg0 (o3 / or) :arg2 (r4 / racing))) :time (i2 / immediate)))
(p / provide-01 :arg0 (b / branch :mod (b2 / branch :mod (g / ground)) :poss (o / organization :name (n / name :op1 "PSD"))) :arg1 (a / and :op1 (p2 / person :name (n2 / name :op1 "Victorel" :op2 "Lupu") :arg0-of (h / have-org-role-91 :arg2 (h2 / head-of-state))) :op2 (p3 / person :name (n3 / name :op1 "Stanciu") :arg0-of (h3 / have-org-role-91 :arg2 (e / empress))) :mod (c / close)) :time (a2 / after :op1 (e2 / elect-01 :arg1-of (i / internal-02))))
(p / provide-01 :arg0 (o / organization :name (n / name :op1 "County" :op2 "Council")) :arg1 (s / swim-01 :arg0 (o2 / organization) :arg2 (c / courtyard :arg1 (l / literature))) :time (a / after :op1 (t / temporal-quantity :quant (N / N-A) :unit (y / year) :arg1-of (r / remain-01 :arg3 (c2 / close-01)))) :time (a2 / after :op1 (t2 / temporal-quantity :quant (N2 / N-A) :unit (y2 / year) :arg1-of (r2 / remain-01 :arg3 (c3 / close-01)))))
(s / say-01 :arg0 (h / he) :arg1 (s2 / serve-01 :arg0 (s3 / service :mod (c / civil) :mod (b / brief)) :arg1 (s4 / service :mod (c2 / civil) :mod (b2 / brief)) :time (a / after :op1 (t / transport-01 :arg1 (i / island :name (n / name :op1 "N-A") :prep-with (b3 / body :consist-of (b4 / body :consist-of (b5 / body :consist-of (b6 / body :consist-of (b7 / body :consist-of (b8 / body :consist-of (b9 / body :consist-of (b10 / body :consist-of (b11 / body :consist-of (b12 / body :consist-of (b13 / body :consist-of (b14 / body :consist-of (b15 / body :poss (p / person :name (n2 / name :op1 "Vadim" :op2 "Tudor")))))))))))))))) :arg2 (d / district :name (n3 / name :op1 "N-A") :mod (j / jihad) :location-of (h2 / hold-04 :arg1 (a2 / and :op1 (r / religioas :mod (c3 / ceremonial)) :op2 (m / military)))))) :time (m2 / morning :quant 10)))
(a / and :op1 (r / restore-01 :arg0 (w / we) :arg1 (f / fence)) :op2 (a2 / and :op1 (s / strengthen-01 :arg0 (w2 / we) :arg1 (s2 / security :poss (c / country :name (n / name :op1 "Hungary")))) :op2 (p / protect-01 :arg0 (w3 / we) :arg1 (s3 / security :poss (c2 / country)) :manner (m / mean :mod (a3 / any))) :op3 (s4 / say-01 :arg0 (p2 / person) :arg1 (p3 / person :name (n2 / name :op1 "Gyorgy" :op2 "Bakondi") :arg0-of (h / have-org-role-91 :arg1 (g / government-organization) :arg2 (p4 / person :arg0-of (a4 / advise-01 :arg2 (s5 / security)) :arg0-of (h2 / have-org-role-91 :arg1 (g2 / government-organization) :arg2 (p5 / person :arg0-of (a5 / advise-01 :arg2 (s6 / security))))))))))
(a / announce-01 :arg1 (o / organization :name (n / name :op1 "PSD")) :time (d / decide-01 :arg0 (c / congress)))
(a / announce-01 :arg0 (o / organization :name (n / name :op1 "PSD")) :time (m / make-01 :arg0 (o2 / organization) :arg1 (c / congress)))
(a / and :op1 (t / take-out-11 :arg0 (o / or :op1 (p / person :arg0-of (h / have-org-role-91 :arg1 (t2 / team :mod (n / nation)))) :op2 (p2 / person :arg0-of (h2 / have-org-role-91 :arg1 (o2 / organization :name (n2 / name :op1 "Galatasaray")))) :op3 (p3 / person :name (n3 / name :op1 "Hagi") :arg0-of (h3 / have-org-role-91 :arg1 (o3 / organization) :arg3 (l / lead-02 :arg0 (o4 / or))))) :arg1 (o5 / over :op1 (t3 / temporal-quantity :quant (N / N-A) :unit (y / year))) :time (b / before :op1 (n4 / now) :quant (t4 / temporal-quantity :quant (N2 / N-A) :unit (y2 / year)))) :op2 (r / role :mod (c / coaching) :time (f / future :poss (a2 / and :op1 (o6 / openness) :op2 (t5 / team :mod (p4 / patroneaza))))))
(a / and :op1 (t / take-out-11 :arg0 (o / or :op1 (p / person :arg0-of (h / have-org-role-91 :arg1 (t2 / team :mod (n / nation)))) :op2 (p2 / person :arg0-of (h2 / have-org-role-91 :arg1 (o2 / organization :name (n2 / name :op1 "Galatasaray")))) :op3 (p3 / person :name (n3 / name :op1 "Hagi") :arg0-of (h3 / have-org-role-91 :arg1 (o3 / organization) :arg3 (l / lead-02 :arg0 (o4 / or))))) :arg1 (o5 / over :op1 (t3 / temporal-quantity :quant (N / N-A) :unit (y / year))) :time (a2 / after :op1 (f / fortunate-01 :polarity -))) :op2 (c / coach :arg0 (t4 / team) :arg1 (t5 / team) :time (f2 / future)))
(s / say-01 :arg1 (a / amr-unknown :location (t / there)) :arg2 (a2 / amr-unknown))
(m / mr :polarity - :arg0 (t / thing :arg1-of (d / decide-01 :arg0 (p / person :name (n / name :op1 "Corbyn")))) :arg1 (a / attend-02 :arg1 (p2 / park :name (n2 / name :op1 "N-A") :mod (n3 / nation))))
(a / and :op1 (b / be-located-at-91 :arg1 (b2 / boat) :arg2 (l / location :name (n / name :op1 "Aegean" :op2 "Sea"))) :op2 (h / head-02 :arg0 (b3 / boat) :arg1 (i / island :mod (g / greek) :mod (k / kos))))
(s / say-01 :arg0 (o / organization :name (n / name :op1 "Glencore") :arg1-of (l / list-01 :arg2 (e / exchange-01 :arg1 (s2 / stock) :location (c / city :name (n2 / name :op1 "London"))))) :arg1 (s3 / sell-01 :arg0 (o2 / organization) :arg1 (m / monetary-quantity :quant 1.6 :unit (d / dollar :mod (n3 / new)) :arg1-of (v / value-01 :arg2 (m2 / monetary-quantity :quant 1.6 :unit (d2 / dollar :mod (c2 / country))))) :arg2 (p / pay-01 :arg0 (o3 / organization) :arg3 (d3 / debt))))
(h / highlight-01 :arg0 (p / person :name (n / name :op1 "Bellamy")) :arg1 (m / match-03 :arg0 (a / and :op1 (s / storm) :op2 (r / roosters)) :arg1-of (c / compare-01 :arg2 (m2 / match-03 :arg0 (a2 / and :op1 (o / organization :name (n2 / name :op1 "Broncos")) :op2 (o2 / organization :name (n3 / name :op1 "Cowboys")))))) :mod (a3 / also))
(a / and :op1 (s / strives :arg0 (p / person :name (n / name :op1 "Grimal")) :arg1 (m / music :mod (c / classical) :domain (m2 / music :mod (c2 / classical)))) :op2 (a2 / and :op1 (h / have-03 :arg0 (p2 / person) :arg1 (t / taste :mod (d / die-01))) :op2 (t2 / taste :arg0 (m3 / music) :arg1 (m4 / music)) :op3 (' / '' :arg0 (m5 / music) :arg1 (m6 / music))))
(l / lesson :arg1-of (l2 / lesson))
(l / lesson :domain (t / that))
(a / and :op1 (h / high-02 :arg1 (t / tension) :location (f / firm :mod (o / old))) :op2 (w / want-01 :polarity - :arg0 (y / you) :arg1 (s / see-01 :arg0 (y2 / you) :arg1 (m / match-03 :mod (t2 / this))) :mod (j / just)))
(c / contrast-01 :arg2 (m / mean-01 :arg2 (w / work-09 :polarity - :arg1 (p / politiensti)) :manner (s / simple)))
(c / contrast-01 :arg2 (m / mean-01 :arg2 (w / work-09 :polarity - :arg1 (i / it) :mod (j / just))))
(r / reveal-01 :arg0 (p / person :name (n / name :op1 "Victor" :op2 "Piturca")) :arg1 (t / thing :manner-of (b / break-up-08 :arg0 (h / he) :arg1 (t2 / team :mod (n2 / nation) :mod (c / country :name (n3 / name :op1 "N-A"))) :mod (l / last))))
(a / absurd :mod (s / still) :domain (i / it) :mod (s2 / still))
(s / say-01 :arg0 (i / i) :arg1 (a / announce-01 :arg0 (i2 / i) :arg1 (r / run-02 :arg0 (p / person :name (n / name :op1 "Dragnea")) :arg1 (o / office) :location (e / end-01 :arg1 (m / meet-03 :arg0 (o2 / organization :name (n2 / name :op1 "National" :op2 "Permanent" :op3 "Bureau") :part-of (o3 / organization :name (n3 / name :op1 "PSD"))))))) :arg2 (i3 / i))
(a / announce-01 :arg0 (i / i) :arg1 (' / '' :mode (i2 / interrogative) :arg0 (p / person :name (n / name :op1 "Dragnea") :arg0-of (l / lead-02 :arg1 (p2 / political-party))) :arg1 (i3 / i) :time (e / end-01 :arg1 (m / meet-03 :arg0 (o / organization :name (n2 / name :op1 "National" :op2 "Permanent" :op3 "Office") :part-of (o2 / organization :name (n3 / name :op1 "National" :op2 "Permanent" :op3 "Office")))))))
(m / multi-sentence :snt1 (' / '' :arg1 (t / thing :arg1-of (a / announce-01) :mod (i / important)) :arg2 (b / between :op1 (b2 / between :op1 15 :op2 (b3 / between :op1 15 :op2 1)) :op2 (d / date-entity :month 9 :day 18))) :snt2 (s / say-01 :arg0 (i2 / i) :arg1 (a2 / advertise-01) :arg2 (a3 / advertise-01 :quant 1 :arg1-of (u / use-01 :arg2 (a4 / and :op1 (f / fonturile :mod (b4 / brandingul)) :op2 (s2 / subway :poss (c / city :name (n / name :op1 "London"))))))) :snt3 (l / line :mod (o / organization :name (n2 / name :op1 "DLR"))))
(a / ask-02 :arg1 (c / contribute-01 :arg0 (p / person :arg0-of (d / deal-01 :arg2 (a2 / arms)) :quant (l / lot)) :arg2 (s / stop-01 :arg0 (p2 / person) :arg1 (f / fair :mod (a3 / arm)))) :arg2 (p3 / person :arg0-of (d2 / deal-01 :arg2 (a4 / arms)) :quant (l2 / lot)) :time (y / year :mod (t / this)))
(w / want-01 :arg0 (i / i) :arg1 (k / know-01 :arg0 (i2 / i) :arg1 (a / and :op1 (p / person :arg0-of (h / have-rel-role-91 :arg1 (i3 / i) :arg2 (p2 / parent))) :op2 (p3 / person :arg0-of (h2 / have-rel-role-91 :arg1 (i4 / i) :arg2 (p4 / parent))) :op3 (p5 / person :name (n / name :op1 "Crina") :arg0-of (h3 / have-rel-role-91 :arg1 (i5 / i) :arg2 (p6 / parents))))))
(c / contrast-01 :arg2 (a / accept-01 :arg0 (p / person :quant (p2 / percentage-entity :value (N / N-A)) :arg1-of (i / include-91 :arg2 (l / loan-01 :location (f / francs)))) :arg1 (a2 / and :op1 (a3 / accept-01 :arg0 (p3 / person :quant (p4 / percentage-entity :value 83) :arg0-of (l2 / loan-01 :location (f2 / francs))) :arg1 (l3 / loan-01 :location (f3 / francs)) :arg1-of (c2 / cause-01 :arg0 (r / reduce-01 :arg1 (b / balance-01 :arg1 (a4 / and :op1 (r2 / risk-01) :op2 (m / manage-01)))))) :op2 (r3 / reduce-01 :arg1 (r4 / reduce-01 :arg1 (p5 / percentage-entity :value (N2 / N-A)) :arg2 (b2 / balance-01 :arg1 (a5 / and))) :mod (f4 / further)))) :location (h / hand :mod (o / other)))
FAILED_TO_PARSE#Two concepts in a row.
(p / produced :arg0 (p2 / paper :arg1-of (p3 / produce-01 :arg0 (g / group)) :arg1-of (p4 / produce-01 :arg0 (g2 / group))) :arg1 (t / thing :arg0-of (e / evidence-01 :arg1 (a / affect-01 :arg0 (m / majority :arg1-of (i / include-91 :arg2 (c / criteria :arg1-of (i2 / include-91 :arg2 (c2 / criteria) :arg3 (m2 / majority))))) :arg1 (a2 / and :op1 (p5 / person :name (n / name :op1 "McKee")) :op2 (p6 / person :arg0-of (h / have-org-role-91 :arg2 (c3 / capewell))) :op3 (p7 / person :arg0-of (h2 / have-org-role-91 :arg2 (' / ''))) :op4 (p8 / person :arg0-of (h3 / have-org-role-91 :arg2 ('2 / ''))) :op5 (p9 / person :arg0-of (h4 / have-org-role-91 :arg2 ('3 / ''))))))))
(b / be-located-at-91 :arg1 (a / and :op1 (p / person :mod (c / country :name (n / name :op1 "England"))) :op2 (p2 / person :location (c2 / country :name (n2 / name :op1 "Romania"))) :op3 (p3 / person :mod (c3 / country))) :arg2 (t / thing :arg1-of (m / match-01 :arg2 (m2 / match-03 :location (c4 / country :name (n3 / name :op1 "France"))) :time (d / date-entity :day 23 :month 9 :year (N / N-A)) :location (a2 / and :op1 (t2 / talk-02 :arg2 (c5 / country) :time (d2 / date-entity :month 9 :day 23)) :op2 (b2 / be-located-at-91 :arg1 (c6 / country) :arg2 (c7 / country) :time (d3 / date-entity :month 6 :day 11) :location (c8 / country)) :op3 (b3 / be-located-at-91 :arg1 (c9 / country) :arg2 (c10 / country :name (n4 / name :op1 "Italy"))) :op4 (b4 / be-located-at-91 :arg1 (c11 / country) :arg2 (c12 / country :name (n5 / name :op1 "Italy"))) :op5 (e / et-cetera))) :time (d4 / date-entity :month 9 :day 23) :location (c13 / country)))
(d / differ-02 :time (t / today) :time (m / month :mod (r / recent)))
(s / say-01 :arg0 (p / person :name (n / name :op1 "Deila")))
(a / ask-01 :arg0 (h / he) :arg1 (a2 / and :op1 (p / person :arg1-of (k / know-01 :polarity -) :arg0-of (s / send-01 :arg1 (p2 / picture))) :op2 (a3 / ask-02 :arg0 (p3 / person) :arg1 (s2 / send-01 :arg0 (p4 / person) :arg1 (p5 / picture :mod (m / more)) :arg2 (p6 / person)) :arg2 (p7 / person))) :arg2 (p8 / person :arg1-of (k2 / know-01 :polarity -)))
(c / contrast-01 :arg1 (s / say-01 :arg0 (p / person :arg0-of (v / vote-01) :mod (d / democrat) :quant (r / rate-entity-91 :arg1 48 :arg2 (t / temporal-quantity :quant (N / N-A) :unit (m / month)))) :arg1 (s2 / say-01 :arg0 (p2 / person) :arg1 (s3 / support-01 :arg0 (p3 / person) :arg1 (p4 / person :arg0-of (v2 / vote-01) :mod (d2 / democrat))))) :arg2 (l / low-04 :arg1 (n / number :quant-of (p5 / person :arg0-of (v3 / vote-01) :mod (r2 / republican)) :arg0-of (s4 / say-01 :arg1 (t2 / thing :arg1-of (s5 / same-01 :arg2 (p6 / product-of :op1 (p7 / percentage-entity :value (N2 / N-A)) :op2 (p8 / percentage-entity :value (N3 / N-A)))))))))
(h / help-01 :arg0 (e / exercise :mod (e2 / exercise) :mod (t / this)) :arg1 (a / and :op1 (y / you) :op2 (p / person)) :arg2 (a2 / and :op1 (y2 / you) :op2 (p2 / person) :arg1-of (l / like-01 :arg0 (y3 / you) :arg1-of (c / cause-01 :arg0 (a3 / and :op1 (d / deluge :arg1 (i / it)) :op2 (h2 / have-03 :arg0 (o / one :arg1-of (h3 / have-03 :arg0 (y4 / you))) :arg1 (b / boat)))))))
(a / and :op2 (b / be-located-at-91 :arg1 (c / class :location (c2 / country :name (n / name :op1 "Britain"))) :arg2 (s / sense-01 :arg0 (c3 / class) :arg1 (a2 / and :op1 (c4 / consistent-01 :arg1 (w / word) :degree (r / relative)) :op2 (c5 / consistent-01 :arg1 (w2 / word) :degree (r2 / relative)))) :time (t / then)))
(m / multi-sentence :snt1 (a / and :op2 (b / be-located-at-91 :mode (i / interrogative) :arg1 (p / person :mod (c / country :name (n / name :op1 "Britain"))) :arg2 (c2 / class :mod (c3 / class)) :time (t / then))) :snt2 (s / sense :mod (a2 / and :op1 (c4 / consistent-01 :arg1 (w / word) :degree (r / relative)) :op2 (c5 / consistent-01 :arg1 (w2 / word) :degree (r2 / relative)))))
(a / and :op1 (p / possible-01 :arg1 (c / contain-01 :arg0 (p2 / person :arg0-of (h / have-rel-role-91 :arg2 (f / father))) :arg1 (t / tears :arg0 (p3 / person))) :degree (b / bare)) :op2 (c2 / continue-01 :arg1 (h2 / hand :part-of (t2 / treadmill))) :degree (b2 / bare))
(r / require-01 :arg1 (b / browsing :arg1 (s / store) :mod (m / minimum) :mod (m2 / minimum)) :duration (t / temporal-quantity :quant (N / N-A) :unit (h / hour)))
(c / cause-01 :arg0 (s / sense-02 :arg1 (i / it) :mod (c2 / common)) :arg1 (c3 / cause-01 :arg0 (g / go-02 :arg0 (y / you) :arg4 (c4 / cioburi :arg1-of (a / actual-02))) :arg1 (t / this) :mod (o / only)))
(s / say-01 :arg0 (a / and :op1 (p / person :name (n / name :op1 "McKee")) :op2 (p2 / person :name (n2 / name :op1 "Capewell"))) :arg1 (c / claim-01 :arg0 (o / organization :name (n3 / name :op1 "PHE")) :arg1 (e / evidence-01 :polarity - :arg1 (f / factor :domain (f2 / factor :arg0-of (c2 / cause-01 :arg1 (s2 / smoke-02 :arg1 (o2 / or :op1 (p3 / person :arg0-of (h / have-rel-role-91 :arg1 (c3 / child) :arg2 (c4 / child))) :op2 (' / '' :mod (n4 / non-smokers))))))) :time (s3 / so-far))))
(a / and :op1 (a2 / agree-01 :polarity - :arg0 (c / country :name (n / name :op1 "Romania"))) :op2 (a3 / apply-01 :polarity - :arg0 (c2 / country) :arg1 (m / measure-02 :arg0 (c3 / country) :arg1 (o / or :op1 (m2 / measure-02 :arg0 (d / dog :arg0-of (g / guard-01)) :arg1 (o2 / or :op1 (f / fence :mod (g2 / guard-01)) :op2 (d2 / dog :arg0-of (g3 / guard-01)) :op3 (s / slash :op1 (f2 / fence :mod (t / theater)) :op2 (f3 / fence :mod (t2 / theater))) :arg2 (g4 / gun)))))))
(a / and :op1 (l / lose-02 :arg0 (p / person :quant (s / some :op1 880,000)) :arg1 (l2 / life :poss (p2 / person)) :arg1-of (c / cause-01 :arg0 (a2 / associate-01 :arg1 (p3 / person) :arg2 (d / disease :arg1-of (a3 / associate-01 :arg2 (s2 / smoke-02)))))) :op2 (i / incurred :arg0 (g / government-organization :name (n / name :op1 "NHS")) :arg1-of (c2 / cause-01 :arg0 (r / reach-01 :arg0 (g2 / government-organization) :arg1 (m / monetary-quantity :quant 2 :unit (d2 / dollar :mod (r2 / renminbi)))))))
(c / clear-06 :arg1 (w / want-01 :polarity - :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (o / organization :name (n / name :op1 "EC")) :arg2 (p2 / president))) :arg1 (f / force-01 :arg0 (p3 / person) :arg1 (v / vote-01 :arg0 (p4 / person) :arg1 (c2 / council)))))
(a / and :op1 (d / diet) :op2 (w / water) :op3 (w2 / water) :location (b / border))
(i / infer-01 :arg1 (r / recommend-01 :arg1 (d / do-02 :arg1 (a / amr-unknown))))
(e / expect-01 :arg1 (b / bury-01 :arg1 (p / person :name (n / name :op1 "Corneliu" :op2 "Vadim" :op3 "Tudor")) :arg2 (t / thursday :location (p2 / peninsula :name (n2 / name :op1 "N-A"))) :manner (h / honours :mod (m / military))))
(c / contrast-01 :arg1 (a / about :polarity - :domain (i / it) :topic (m / money)) :arg2 (f / feel-01 :arg0 (i2 / i) :arg1 (t / thing :arg1-of (f2 / feel-01 :arg0 (i3 / i) :mod (a2 / also)))))
(c / contrast-01 :arg1 (p / propose-01 :arg0 (i / i) :arg1 (i2 / increase-01 :arg0 (p2 / person :arg0-of (h / have-rel-role-91 :arg1 (s / she) :arg2 (b / boss))) :arg1 (s2 / salary :mod (s3 / substantial)) :mod (s4 / substantial))) :arg2 (r / refuse-01 :arg1 (i3 / increase-01 :arg1 (s5 / salary))))
(a / and :op2 (d / difficult :domain (e / excluzi :arg1 (s / something) :arg2 (s2 / scenario :arg1-of (p / possible-01)))))
(s / say-01 :polarity - :arg0 (i / i) :arg1 (i2 / innocent-01 :arg1 (p / person :name (n / name :op1 "Richard" :op2 "Giffe"))))
(m / meet-03 :arg0 (p / person :name (n / name :op1 "Crinei")) :arg1 (a / and :op1 (p2 / person :arg0-of (h / have-rel-role-91 :arg2 (m2 / mother)) :mod (b / biology)) :op2 (p3 / person :arg0-of (h2 / have-rel-role-91 :arg2 (b2 / brother)))))
(a / accident :time (e / evening :time (e2 / evening :mod (f / friday))) :arg1-of (c / cause-01 :arg0 (c2 / crash-01 :arg1 (w / work-of-art :name (n / name :op1 "N-A")) :location (s / side :mod (e3 / east) :part-of (r / roof :part-of (r2 / roof :part-of (l / location :name (n2 / name :op1 "Great" :op2 "Mosque"))))))))
(s / sublinaza :arg0 (c / court :mod (c2 / country :name (n / name :op1 "N-A"))) :arg1 (a / and :op1 (l / lack-01 :arg0 (s2 / something :arg1-of (i / include-91 :arg2 (p / person :arg0-of (d / defend-01)))) :arg1 (q / quality :arg1-of (m / moral-02) :poss (p2 / person :arg1-of (i2 / injure-01)))) :op2 (p3 / possible-01 :polarity - :arg1 (v / violate-01 :arg1 (a2 / and :op1 (f / free-04 :arg1 (p4 / person) :mod (p5 / physical)) :op2 (f2 / free-04 :arg1 (p6 / person) :mod (p7 / physical))) :prep-under (p8 / pretext :mod (a3 / any)) :time (m2 / motivation)))))
(p / possible-01 :polarity - :arg1 (c / come-01 :arg1 (e / everyone) :arg4 (c2 / continent :name (n / name :op1 "Europe"))))
(s / see-01 :arg0 (h / he) :arg1 (e / enough))
(a / amend-01 :arg1 (f / family :arg1-of (h / have-org-role-91 :arg0 (f2 / family) :arg2 (m / member))) :arg1-of (c / cause-01 :arg0 (a2 / and :op1 (i / information :mod (e / erroneous) :source (a3 / and :op1 (p / pliant) :op2 (c2 / controllers)) :arg0-of (a4 / apply-02 :arg1 (l / law) :arg2 (b / blood :mod (' / '')))))))
(t / throw-01 :arg0 (o / organization :name (n / name :op1 "Moody")) :arg1 (b / bomb) :arg2 (i / interview-01 :arg1 (p / person :arg0-of (s / say-01 :arg1 (t2 / try-01 :arg0 (d / department :mod (i2 / integrity)) :arg1 (s2 / spy-01 :arg0 (d2 / department) :arg1 (g / graphies)))))) :time (e / early :degree (m / more) :time (e2 / early :degree (m2 / more))))
(c / cause-01 :arg1 (i / invite-01 :polarity - :arg0 (p / person :arg0-of (h / have-rel-role-91 :arg1 (y / you) :arg2 (f / friend))) :arg1 (c2 / coffee) :location (l / location :name (n / name :op1 "Central" :op2 "Perk")) :arg1-of (c3 / cause-01 :arg0 (a / amr-unknown)) :condition (p2 / participate-01 :arg0 (c4 / center :part-of (c5 / comedy) :arg1-of (h2 / hold-04 :arg0 (c6 / center :part-of (c7 / comedy)) :time (w / week :mod (l2 / last))) :arg1-of (h3 / hold-04 :arg0 (c8 / center :part-of (c9 / comedy)) :time (w2 / week :mod (l3 / last))) :arg1-of (h4 / hold-04 :arg0 (c10 / center :part-of (c11 / comedy)) :time (w3 / week :mod (l4 / last)))))))
(m / mean-01 :polarity - :arg1 (t / this) :arg2 (p / possible-01 :arg1 (b / begin-01 :arg0 (p2 / person :mod (c / country :name (n / name :op1 "N-A"))) :arg1 (s / search-01 :arg0 (p3 / person) :arg2 (d / draftsman :mod (a / another))))))
(w / will-02 :arg1 (m / maintain-01 :arg1 (a / and :op1 (b / balance-01) :op2 (u / unity)) :location (p / party)) :arg1-of (b2 / broad-02))
(e / eliminate-01 :polarity - :arg0 (i / i) :arg1 (v / version :mod (a / any) :mod (w / win-01)))
(a / and :op1 (p / play-01 :arg1 (m / match-03 :quant 7 :mod (t / test)) :prep-against (p2 / person :quant 2 :arg0-of (s / strike-02 :mod (g / good)))) :op2 (c / contrast-01 :arg1 (j / judge-01 :arg1 (p3 / person :arg0-of (p4 / play-01) :mod (c2 / cricket)) :arg1-of (h / harsh-02)) :arg2 (j2 / judge-01 :arg1 (p5 / person :arg0-of (p6 / play-01) :mod (c3 / cricket)) :arg2 (t2 / thing :arg2-of (r / result-01)) :arg1-of (h2 / harsh-02))))
(s / start-01 :arg1 (p / person :name (n / name :op1 "David" :op2 "Grimal") :location (p2 / peninsula :name (n2 / name :op1 "N-A"))) :location (l / location :name (n3 / name :op1 "Dijon" :op2 "Rezidenta")))
(p / promise-01 :arg0 (p2 / person :arg0-of (h / have-org-role-91 :arg2 (a / authority))) :arg1 (a2 / and :op1 (c / continue-01 :arg0 (p3 / person :arg0-of (h2 / have-org-role-91 :arg2 (a3 / authority))) :arg1 (p4 / pilgrimages :arg0 (p5 / person) :arg1 (c2 / city :name (n / name :op1 "Mecca")))) :op2 (r / reach-01 :arg0 (t / thousands :mod (p6 / pilgrims)) :arg1 (t2 / town) :degree (f / further))) :time (a4 / already))
(m / multi-sentence :snt1 (p / possible-01 :arg1 (i / imagine-01 :arg0 (y / you) :arg1 (m2 / market-01 :arg0 (y2 / you) :arg1 (m3 / market-01 :mod (c / collective)) :arg2 (m4 / musicians :mod (c2 / collective))))) :snt2 (a / ask-01 :arg0 (i2 / i) :arg1 (a2 / artists)))
(u / unites :arg0 (f / family :arg1-of (h / have-org-role-91 :arg0 (p / person) :arg2 (m / member))) :arg1 (d / destiny :poss (f2 / family)) :arg2 (f3 / face :part-of (f4 / family)) :location (c / city :name (n / name :op1 "Palermo")) :time (b / begin-01 :arg1 (b2 / begin-01 :arg0 (f5 / family :arg1-of (h2 / have-org-role-91 :arg0 (p2 / person) :arg2 (m2 / member))))) :location (l / location :name (n2 / name :op1 "Uncle" :op2 "Square")) :mod (a / again :mod (o / once)))
(s / seem-01 :arg1 (a / and :op1 (a2 / accuse-01 :arg1 (i / it) :arg2 (s2 / site :location-of (c / crash-01))) :op2 (a3 / aid-01 :arg0 (a4 / and :op1 (a5 / aid-01 :ord (o / ordinal-entity :value 1)) :op2 (o2 / offence :mod (t / traffic) :mod (o3 / other))) :arg2 (i2 / it))))
(c / contrast-01 :arg2 (s / set-02 :arg0 (d / document) :arg1 (o / objective :mod (s2 / strategy) :quant (s3 / several) :arg1-of (r / relate-01 :arg2 (i / immigrate-01)) :arg1-of (r2 / relate-01 :arg2 (i2 / immigrate-01)) :example (a / and :op1 (p / promote-02 :arg1 (m / migration :arg1-of (l / legal-02))) :op2 (c2 / control-01 :arg1 (w / wave-04 :arg1 (a2 / and :op1 (t / territory :arg1 (t2 / territory :poss (c3 / country :name (n / name :op1 "Romania")))) :op2 (m2 / measure-02 :arg1 (m3 / move-01 :arg1 (m4 / measure-02 :arg1 (m5 / move-01 :arg1 (a3 / and :op1 (m6 / measure-02 :arg1 (m7 / move-01 :arg1 (a4 / and :op1 (m8 / measure-02 :mod (a5 / away)) :op2 (m9 / measure-02 :mod (r3 / restrictive)))) :arg2 (a6 / and :op1 (a7 / away) :op2 (m10 / measure-02 :arg1 (m11 / move-01 :arg1 (s4 / system))))))))))))))) :mod (a8 / also) :quant (s5 / several)))
(a / admit-01 :polarity - :arg1 (a2 / and :op1 (f / forget-01 :arg0 (i / i) :arg1 (e / eye :part-of (i2 / i))) :op2 (b / be-located-at-91 :polarity - :arg1 (i3 / i) :arg2 (t / there))) :time (c / come-12 :arg1 (a3 / and :op1 (p / person :arg0-of (h / have-rel-role-91 :arg1 (h2 / he) :arg2 (w / wife))) :op2 (m / man :source (l / location :name (n / name :op1 "Columbus"))))))
(a / and :op2 (p / possible-01 :polarity - :arg1 (a2 / and :op1 (a3 / absorb :arg0 (g / government-organization :arg0-of (g2 / govern-01 :arg1 (c / country :name (n / name :op1 "N-A")))) :arg1 (f / fund :poss (c2 / continent :name (n2 / name :op1 "N-A")))) :op2 (m / make-01 :arg0 (g3 / government-organization) :arg1 (o / or :op1 (r / road) :op2 (r2 / road) :op3 (s / school :arg1-of (m2 / modern-02)) :op4 (s2 / school :arg1-of (m3 / modern-02)) :op5 (s3 / school :arg1-of (m4 / modern-02))))) :op3 (e / ensure-01 :arg0 (g4 / government-organization) :arg1 (o2 / or :op1 (p2 / pay-01 :arg1 (j / job)) :op2 (k / keep-02 :arg1 (o3 / or :op1 (p3 / pay-01 :arg1 (j2 / job)) :op2 (k2 / keep-01 :arg1 (j3 / job))))))))
(a / and :op2 (p / possible-01 :polarity - :arg1 (a2 / and :op1 (a3 / absorb :arg0 (g / government-organization :arg0-of (g2 / govern-01 :arg1 (c / country :name (n / name :op1 "N-A")))) :arg1 (f / fund :poss (c2 / continent :name (n2 / name :op1 "N-A")))) :op2 (m / make-01 :arg0 (g3 / government-organization) :arg1 (o / or :op1 (r / road :arg1-of (m2 / modern-02)) :op2 (r2 / road :arg1-of (m3 / modern-02)) :op3 (s / school) :op4 (s2 / school) :op5 (s3 / school)) :purpose (e / ensure-01 :arg0 (g4 / government-organization) :arg1 (h / healthcare :mod (d / decent)))) :purpose (e2 / ensure-01 :arg0 (g5 / government-organization) :arg1 (o2 / or :op1 (p2 / pay-01 :arg1 (j / job)) :op2 (k / keep-01 :arg1 (j2 / job))) :location (h2 / home)))))
(m / multi-sentence :snt1 (r / report-01 :polarity - :arg0 (p / police) :arg1 (i / incident)) :snt2 (c / cause-01 :mode (i2 / interrogative) :arg0 (u / understand-01 :arg0 (p2 / person :arg0-of (d / drive-01)) :arg1 (c2 / car)) :arg1 (u2 / understand-01 :mode (i3 / interrogative) :arg0 (p3 / person) :arg1 (a / and :op1 (p4 / person :arg0-of (h / have-org-role-91 :arg2 (c3 / commissioner :mod (v / vice)))) :op2 (p5 / person :arg0-of (h2 / have-org-role-91 :arg2 (c4 / commissioner))) :op3 (p6 / person :arg0-of (h3 / have-org-role-91 :arg2 (c5 / commissioner))) :op4 (p7 / person :arg0-of (h4 / have-org-role-91 :arg2 (c6 / commissioner))) :op5 (p8 / person :arg0-of (h5 / have-org-role-91 :arg2 (c7 / commissioner))) :op6 (p9 / person :arg0-of (h6 / have-org-role-91 :arg2 (c8 / commissioner))) :op7 (p10 / person :arg0-of (h7 / have-org-role-91 :arg2 (c9 / commissioner))) :op7 (p11 / person :arg0-of (h8 / have-org-role-91 :arg2 (c10 / commissioner)))))))
(s / subject :arg1-of (r / resemble-01) :domain (s2 / subject :arg1-of (r2 / resemble-01)))
(a / and :op1 (w / wait-01 :arg1 (p / person :mod (a2 / age-01 :arg1 (p2 / person) :arg2 (t / temporal-quantity :quant (N / N-A) :unit (y / year)))) :location (l / line) :arg1-of (c / cause-01 :arg0 (w2 / wait-01 :arg1 (p3 / person) :arg2 (b / bier :arg0 (p4 / person) :arg1 (c2 / church) :location (s / street :location (s2 / side)))))) :op2 (b2 / be-located-at-91 :arg1 (p5 / person) :arg2 (p6 / person :name (n / name :op1 "Corneliu" :op2 "Vadim" :op3 "Tudor"))))
(e / expect-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (v / varstele :quant (a / all)) :arg2 (h2 / hundreds))) :arg1 (f / file-01 :arg0 (p2 / person) :arg1 (c / church) :arg1-of (b / be-located-at-91 :arg2 (e2 / enter-01 :arg0 (p3 / person) :arg1 (c2 / church) :time (u / until :op1 (o / out :op1 (s / street)))))) :purpose (m / move-01 :arg0 (p4 / person) :arg2 (p5 / person :arg0-of (c3 / carry-01 :arg1 (i / island :name (n / name :op1 "N-A")) :accompanier (p6 / person :name (n2 / name :op1 "Corneliu" :op2 "Vadim" :op3 "Tudor") :arg0-of (h3 / have-org-role-91 :arg1 (b2 / body) :arg2 (n3 / neinsufletit)))))))
(a / and :op1 (m / mix-01 :arg1 (t / thing :arg1-of (g / gain-02)) :arg3-of (m2 / mix-01)) :op2 (f / fall-07 :arg1 (t2 / thing) :arg2 (f2 / finance :quant 2016)))
(k / know-01 :arg0 (n / nobody) :arg1 (t / thing :manner-of (c / continue-01 :arg0 (t2 / they) :arg1 (q / quota :mod (m / mandatory) :mod (m2 / mandatory)))) :condition (c2 / come-12 :arg1 (i / it)))
(k / know-01 :arg0 (n / no-one) :arg1 (t / thing :manner-of (w / work-09 :arg1 (q / quota)) :mod (e / exact)) :condition (p / possible-01 :arg1 (r / reach-01 :arg1 (q2 / quota))))
(s / say-01 :arg0 (p / person :arg0-of (l / lead-02 :arg1 (g / group :mod (p2 / parliament)))) :arg1 (w / worry-01 :arg0 (t / threaten-01 :arg1 (t2 / threaten-01 :arg2 (p3 / politician))) :arg1 (p4 / political-party :name (n / name :op1 "N-A"))))
(h / have-03 :arg0 (w / we) :arg1 (r / rate-entity-91 :arg1 (a / around :op1 (m / monetary-quantity :quant 400 :unit (e / euro))) :arg2 (t / temporal-quantity :quant (N / N-A) :unit (y / year))) :arg4 (a2 / around :op1 (m2 / monetary-quantity :quant 600 :unit (e2 / euro))))
(s / say-01 :arg0 (p / person :mod (o / other) :arg0-of (h / have-org-role-91 :arg2 (p2 / person :arg1-of (e / expert-01)))) :arg1 (i / increase-01 :arg0 (i2 / increase-01 :arg1 (r / rate :mod (i3 / interest))) :arg1 (m / market :mod (f / finance)) :arg1-of (c / cause-01 :arg0 (r2 / remove-01 :arg0 (r3 / rate) :arg1 (r4 / relate-01 :mod (c2 / certain)) :time (a / act-02 :arg0 (g / government-organization :name (n / name :op1 "Fed")))))))
(c / cause-01 :arg0 (s / speak-01 :arg0 (p / person :name (n / name :op1 "Enescu") :arg0-of (s2 / speak-01 :arg3 (w / work-01 :arg0 (p2 / person) :arg1 (w2 / work-01 :arg0 (p3 / person)))))) :arg1 (n2 / need-01 :polarity - :arg0 (p4 / person) :arg1 (a / approach-02 :arg1-of (s3 / special-02)) :time (i / introduce-02 :arg0 (p5 / person) :arg1 (w3 / work-01 :arg0 (p6 / person) :location (r / repertoire)))))
(a / and :op1 (s / speak-01 :arg0 (w / we)) :op2 (s2 / see-01 :arg0 (w2 / we)))
(d / debut :arg1 (d2 / debut :mod (s / stunning) :poss (p / person :name (n / name :op1 "Erik" :op2 "Thomson") :arg0-of (h / have-org-role-91 :arg1 (o / organization) :arg2 (s2 / star) :time (f / former)) :quant (s3 / series))) :mod (m / main))
(p / possible-01 :arg1 (f / fatal :arg1 (i / it)))
(s / say-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (o / organization :name (n / name :op1 "UN")) :arg2 (c / chief))) :arg1 (s2 / solution :polarity - :mod (m / military) :location (c2 / country :name (n2 / name :op1 "Syria"))))
(b / byline-91 :arg2 (p / person :name (n / name :op1 "Ginerele" :op2 "Vasile" :op3 "Blaga")))
(p / possible-01 :arg1 (v / volatiliza :arg0 (r / rise-01 :arg1 (r2 / rate :mod (i / interest))) :arg1 (t / thing) :time (w / while)) :time (m / month :mod (r3 / recent)))
(a / and :op1 (l / look-01 :arg0 (h / he) :arg1 (p / phone)) :op2 (f / find-01 :arg0 (h2 / he) :arg1 (m / message-01 :arg0 (h3 / he))) :time (a2 / after :op1 (e / expel-01 :arg0 (h4 / he) :arg1 (p2 / person :arg0-of (h5 / have-rel-role-91 :arg1 (h6 / he) :arg2 (m2 / mother))) :time (i / immediate))))
(s / sign-01 :arg0 (o / organization :name (n / name :op1 "Recognition" :op2 "Agreement") :arg1-of (s2 / sign-02 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (o2 / organization :name (n2 / name :op1 "Iasi" :op2 "Court")) :arg3 (j / judge-01))))) :arg1 (t / thing :arg2-of (s3 / solve-01)) :time (y / yesterday) :location (c / case :mod (t2 / this)) :time (d / date-entity :month 9 :day 29))
(t / take-10 :arg0 (t2 / turn-01 :arg0 (t3 / team) :arg1 (p / place :ord (o / ordinal-entity :value 2)) :mod (g / good :degree (m / more) :mod (e / even))) :arg1 (f / future) :time (s / season :mod (t4 / this)) :arg1-of (c / cause-01 :arg0 (r / reach-01 :arg0 (t5 / team) :arg1 (p2 / place :ord (o2 / ordinal-entity :value 2) :mod (l / less :compared-to (p3 / person :name (n / name :op1 "Astra" :op2 "Giurgiu") :arg0-of (l2 / lead-02 :arg1 (t6 / team))))))))
(a / and :op1 (t / take-10 :arg0 (w / will-02 :arg0 (t2 / team) :arg1 (f / future :poss (s / season :mod (t3 / this)))) :arg1 (a2 / and :op1 (w2 / will-02) :op2 (g / good :degree (m / more)) :time (s2 / season :mod (t4 / this)))) :op2 (c / come-01 :arg1 (t5 / team) :arg3 (p / point :quant 1) :arg4 (p2 / point :quant 1)))
(p / pulls :arg0 (e / everyone) :arg1 (s / soul :poss (t / they)))
(m / meet-03 :arg0 (o / organization :name (n / name :op1 "BBC" :op2 "News")) :arg1 (p / project :quant 1 :arg1-of (i / include-91 :arg2 (p2 / project))))
(s / support-01 :arg0 (d / democrat :mod (p / person :arg0-of (v / vote-01)) :arg1-of (i / include-91 :arg2 (p2 / person :arg0-of (v2 / vote-01)) :arg3 (p3 / percentage-entity :value (N / N-A)))) :arg1 (p4 / person :name (n / name :op1 "Clinton")) :arg3 (r / rate-entity-91 :arg1 (p5 / percentage-entity :value (N2 / N-A)) :arg2 (t / temporal-quantity :quant (N3 / N-A) :unit (y / year))) :time (n2 / now) :arg1-of (c / cause-01 :arg0 (- / -lrb- :arg0 (p6 / person :ord (o / ordinal-entity :value 2) :ord (o2 / ordinal-entity :value 2) :ord (o3 / ordinal-entity :value 2) :ord (o4 / ordinal-entity :value 2)) :arg1 (p7 / person :name (n3 / name :op1 "Sanders")))))
(a / add-01 :arg0 (p / person :name (n / name :op1 "Robertson") :arg0-of (h / have-org-role-91 :arg2 (m / mr.))) :arg1 (c / call-01 :arg0 (p2 / person) :arg1 (a2 / and :op1 (p3 / person :arg0-of (h2 / have-rel-role-91 :arg1 (s / she) :arg2 (m2 / mother))) :op2 (p4 / person :arg0-of (h3 / have-rel-role-91 :arg1 (s2 / she) :arg2 (m3 / mother)))) :arg2 (a3 / and :op1 (p5 / person :arg0-of (h4 / have-rel-role-91 :arg1 (s3 / she) :arg2 (m4 / mother))) :op2 (p6 / person :arg0-of (h5 / have-rel-role-91 :arg1 (s4 / she) :arg2 (m5 / mother))))) :time (f / find-01 :arg0 (p7 / person) :arg1 (m6 / message :topic (p8 / phone))))
(p / possible-01 :arg1 (w / watch-01 :arg1 (s / show-01 :arg1 (s2 / show-01 :arg0 (t / teenager :arg1-of (d / drink-01 :arg0 (t2 / teenager))) :arg1 (c / create-01 :arg0 (t3 / teenager) :arg1 (d2 / drink :arg1-of (c2 / cheap-02)))))))
(d / dezbatut :arg1 (m / meet-03 :mod (p / plenary :mod (n / next))))
(a / associate-01 :arg1 (p / person :quant (s / some) :arg1-of (d / die-01)) :arg2 (d2 / detergents :arg1 (a2 / alcohol)))
(p / probable :domain (f / find-01 :arg1 (t / thing :arg1-of (f2 / find-01))))
(c / contrast-01 :arg2 (a / and :op1 (m / manage-01 :arg1 (i / it) :manner (w / well :degree (e / extreme)) :manner (s / situation :mod (c2 / challenging :degree (q / quite)) :location (c3 / country :name (n / name :op1 "US")) :prep-with (p / person :name (n2 / name :op1 "Harrison")))) :op2 (t / think-01 :arg0 (i2 / i) :arg1 (d / deserve-01 :arg0 (i3 / it) :arg1 (d2 / deserve-01 :arg0 (i4 / it) :arg1 (f / faith :quant (m2 / much)))))))
(a / and :op1 (c / carry-out-03 :arg0 (p / person :mod (r / religious-group :name (n / name :op1 "N-A"))) :arg1 (v / victim :quant 29) :purpose (r2 / recruit-01 :arg0 (p2 / person) :arg1 (v2 / victim :quant 29))) :op2 (k / kill-01 :arg1 (p3 / person :arg1-of (k2 / kill-01)) :arg1-of (c2 / cause-01 :arg0 (c3 / collapse-01 :arg1 (m / mosque :location (m2 / mosque :location (c4 / city) :mod (g / grand)))))) :time (c5 / ceremony :location (c6 / ceremony :arg1-of (c7 / carry-out-03 :location (s / street)))))
(a / and :op1 (l / look-01 :arg0 (p / person :arg0-of (p2 / participate-01) :quant (m / most) :arg0-of (l2 / look-01 :arg1 (j / job))) :arg1 (r / rate-entity-91 :arg1 (m2 / more-than :op1 59.70) :arg2 (t / temporal-quantity :quant (N / N-A) :unit (y / year)))) :op2 (f / follow-01 :arg1 (r2 / rate-entity-91 :arg1 (m3 / more-than :op1 59.70) :arg2 (t2 / temporal-quantity :quant (N2 / N-A) :unit (m4 / month))) :arg2 (r3 / rate-entity-91 :arg1 (p3 / person :quant 23.05) :arg2 (t3 / temporal-quantity :quant (N3 / N-A) :unit (m5 / month)))))
(a / ask-02 :arg0 (w / we) :arg1 (g / good :domain (g2 / god)) :arg2 (g3 / god))
(c / contrast-01 :arg2 (k / know-01 :polarity - :arg1 (t / thing :manner-of (c2 / collapse-01 :arg1 (i / interest :mod (t2 / this)) :time (a / after :op1 (t3 / temporal-quantity :quant (N / N-A) :unit (y / year)))))))
(m / multi-sentence :snt1 (c / contrast-01 :arg1 (l / lesson :mod (h / humorous) :arg1-of (v / value-02) :topic (s / something :arg2-of (c2 / concealing :arg1 (s2 / something)))) :arg2 (l2 / lesson :polarity - :domain (s3 / someone :arg0-of (h2 / have-03 :polarity - :arg1 (a / and :op1 (t / tooth :part-of (s4 / someone)) :op2 (t2 / tooth :part-of (s5 / someone))))))) :snt2 (a2 / ampon :mode (i / interrogative)))
(c / contrast-01 :arg2 (a / and :op1 (m / masses :arg0 (t / they :arg0-of (e / embarked :arg1 (t2 / they)))) :op2 (p / possible-01 :polarity - :arg1 (r / return-02 :arg0 (w / we) :arg1 (h / history)))))
(m / maintain-01 :arg0 (p / person :name (n / name :op1 "Neilson")) :arg1 (t / thing :arg1-of (s / state-01)))
(a / and :op1 (h / have-03 :arg0 (f / film :arg1-of (m / make-01 :arg0 (o / organization :name (n / name :op1 "VCCP") :part-of (o2 / organization :name (n2 / name :op1 "VCCP") :mod (a2 / advertising)) :arg0-of (p / pro :arg1 (a3 / and :op1 (b / bono) :op2 (d / door :mod (g / graphic))))))) :arg1 (t / thing :arg1-of (v / view-02 :arg0 (f2 / film) :arg2 (c / company) :duration (t2 / temporal-quantity :quant (N / N-A) :unit (h2 / hour)))) :time (h3 / hour :mod 24)) :op2 (c2 / create-01 :arg0 (a4 / and :op1 (p2 / person :arg0-of (h4 / have-org-role-91 :arg1 (o3 / organization) :arg3 (l / lead-02 :arg0 (p3 / person)))) :op2 (p4 / person :arg0-of (h5 / have-org-role-91 :arg1 (o4 / organization) :arg3 (l2 / lead-02 :arg0 (p5 / person))))) :arg1 (f3 / free-03 :arg1 (p6 / person)) :mod (a5 / also)))
(k / know-01 :polarity - :arg0 (i / i) :arg1 (a / amr-unknown :arg1-of (h / have-condition-91 :arg2 (n / need-01 :arg0 (i2 / i) :arg1 (c / consider-02 :arg0 (i3 / i) :arg1 (a2 / and :op1 (p / person :arg1-of (e / employ-01)) :op2 (p2 / person :arg1-of (e2 / employ-01)) :op3 (p3 / person :arg1-of (e3 / employ-01)) :op4 (p4 / person :arg1-of (e4 / employ-01))))))))
(b / be-located-at-91 :arg1 (p / project :mod (c / continent :name (n / name :op1 "N-A"))) :arg2 (r / risk-01))
(s / say-01 :arg0 (o / organization :name (n / name :op1 "Mediafax")))
FAILED_TO_PARSE#Two concepts in a row.
(s / say-01 :arg0 (p / person :arg0-of (p2 / promote-02 :arg1 (a / and))) :arg1 (a2 / and :op1 (b / bring-01 :arg0 (a3 / and :op1 (c / congress) :op2 (r / reform-01 :arg0-of (e / encourage-01))) :arg1 (a4 / and :op1 (r2 / rhetoric :mod (n / new)) :op2 (v / vitality))) :op2 (m / make-01 :arg0 (r3 / reform-01) :arg1 (r4 / room :purpose (g / grow-01 :arg1 (e2 / economy))))))
(s / say-01 :arg0 (p / person :name (n / name :op1 "Xi")) :arg1 (a / and :op1 (b / bring-01 :arg0 (a2 / and :op1 (c / congress) :op2 (r / reform-01 :arg1 (e / encourage-01))) :arg1 (a3 / and :op1 (r2 / rhetoric :mod (n2 / new)) :op2 (v / vitality))) :op2 (t / take-01 :arg0 (r3 / reform-01) :arg1 (p2 / place :location-of (g / grow-01 :arg1 (e2 / economy))))))
(a / and :op1 (r / reac?ionezi :arg0 (i / i) :arg1 (c / consequence) :frequency (s / sometimes)) :op2 (o / obligate-01 :arg1 (i2 / i) :arg2 (l / live-01 :arg0 (i3 / i) :accompanier (t / thing :arg1-of (s2 / say-01 :arg0 (i4 / i))))))
(e / establish-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (o / organization :name (n / name :op1 "Al-Ittihad")) :arg2 (s / sheiks))) :arg1 (f / fate :poss (p2 / person :name (n2 / name :op1 "Lucian" :op2 "Sânm?rtean"))))
(a / and :op1 (s / score-01 :arg1 (o / organization :name (n / name :op1 "Angel" :op2 "Di" :op3 "Maria")) :arg2 (m / match-03 :arg0 (o2 / organization) :arg1 (o3 / organization :name (n2 / name :op1 "Champions" :op2 "League")) :mod (o4 / open-01))) :op2 (h / help-01 :arg0 (o5 / organization) :arg1 (o6 / organization :name (n3 / name :op1 "PSG")) :arg2 (i / impose-01 :arg0 (o7 / organization) :arg1 (f / front :op1 (l / location :name (n4 / name :op1 "Malmo") :mod (t / team :mod (s2 / swedish)))))))
(c / convince-01 :arg0 (i / i) :arg1 (l / lose-02 :arg0 (t / they) :arg1 (p / patience :poss (t2 / they)) :ord (o / ordinal-entity :value 1)))
(t / take-01 :arg1 (t2 / they) :arg3 (h / hospital))
(s / seek-01 :arg0 (a / and :op1 (p / person) :op2 (p2 / person) :op3 (h / happy)) :arg1 (l / life :mod (p3 / patriarchal)))
(o / obligate-01 :arg2 (b / break-up-08 :arg1 (l / life :poss (t / they))))
(d / do-02 :polarity - :arg0 (m / miracles))
(s / say-01 :arg0 (h / he) :arg1 (i / increase-01 :arg1 (i2 / increase-01 :arg1 (l / life :poss (h2 / he)) :arg3 (m / most) :prep-as (c / chef))) :medium (i3 / interview-01 :arg1 (h3 / he) :time (r / recent)))
(c / cause-01 :arg1 (c2 / contrast-01 :arg1 (a / avoid-01 :arg1 (l / leave-13 :arg1 (l2 / leave-11 :arg0 (p / person) :arg1 (w / whiskey :quant (g / glass) :location (t / table))))) :arg2 (a2 / and :op1 (l3 / leave-15 :arg0 (p2 / person) :arg1 (d / detergents :mod (t2 / this)) :location (p3 / place :arg1-of (a3 / access-01))) :op2 (h / have-condition-91 :arg1 (w2 / way :manner-of (c3 / consume-01 :arg1 (a4 / alcohol))) :arg2 (r / reach-01 :arg1 (a5 / alcohol :arg1-of (l4 / low-04 :degree (m / more))))))))
(a / attract-01 :arg0 (p / person :name (n / name :op1 "Orange") :arg0-of (h / have-rel-role-91 :arg1 (p2 / person) :arg2 (c / child))) :arg1 (p3 / person :arg0-of (h2 / have-rel-role-91 :arg1 (p4 / person) :arg2 (c2 / child))) :degree (m / most))
(d / do-02 :arg0 (i / it))
(c / cause-01 :arg0 (e / easy :arg1 (t / thing :arg2-of (r / reply-01 :arg1 (s / see-01 :arg0 (w / we) :arg1 (r2 / remain-01 :arg1 (p / person :quant 6 :arg1-of (r3 / remain-01) :arg1-of (r4 / remain-01)) :arg3 (r5 / rate-entity-91 :arg1 6 :arg2 (t2 / temporal-quantity :quant (N / N-A) :unit (m / month)))))))) :arg1 (d / differ-02 :arg1 (d2 / differ-02) :degree (m2 / most) :arg1-of (c2 / cause-01 :arg0 (s2 / see-01 :arg0 (w2 / we) :arg1 (r6 / remain-01 :arg1 (p2 / person :arg1-of (r7 / remain-01) :arg1-of (r8 / remain-01)) :arg3 (r9 / rate-entity-91 :arg1 6 :arg2 (t3 / temporal-quantity :quant (N2 / N-A) :unit (m3 / month))))))))
(c / create-01 :arg0 (s / she) :arg1 (a / and :op1 (s2 / stable-03 :polarity - :arg1 (s3 / she)) :op2 (c2 / chaos :arg1-of (c3 / cause-01 :arg0 (p / possible-01 :polarity - :arg1 (c4 / close-06 :arg1 (s4 / she)))))))
(c / contrast-01 :arg2 (s / solve-01 :polarity - :arg0 (p / problem) :arg1-of (s2 / simple-02)))
(g / give-01 :polarity - :arg0 (p / person :name (n / name :op1 "Dragnea")) :arg1 (u / ultimatum))
(c / contrast-01 :arg1 (p / possible-01 :polarity - :arg1 (r / recognize-02 :arg0 (c2 / country :name (n / name :op1 "Romania")) :arg1 (p2 / project :beneficiary (c3 / country)))) :arg2 (p3 / plan-01 :polarity - :arg0 (o / organization :name (n2 / name :op1 "EU")) :arg1 (f / future) :mod (a / any)))
(c / cause-01 :arg0 (r / rely-01 :arg0 (a / and :op1 (c2 / company :arg0-of (m / make-01 :arg1 (c3 / computer)) :mod (l / large :degree (m2 / most) :compared-to (w / world))) :op2 (c4 / company :quant 1 :arg1-of (i / include-91 :arg2 (c5 / company :mod (t / technology) :mod (t2 / technology) :location (c6 / country :name (n / name :op1 "US")))))) :arg1 (a2 / and :op1 (c7 / company :arg0-of (m3 / make-01 :arg1 (c8 / computer)) :mod (l2 / large :degree (m4 / most) :compared-to (w2 / world))) :op2 (c9 / company :quant 1 :arg1-of (i2 / include-91 :arg2 (c10 / company :mod (t3 / technology) :mod (t4 / technology) :location (c11 / country :name (n2 / name :op1 "US")))))) :time (l3 / late :degree (m5 / most)) :arg1-of (c12 / cause-01 :arg0 (r2 / rely-01 :arg0 (a3 / and) :arg1 (i3 / idea :topic (a4 / attend-02 :arg0 (b / business) :arg1 (g / good :degree (m6 / more))))))))
(d / depend-01 :arg0 (i / it) :arg1 (d2 / discipline) :condition (o / or :op1 (m / musicians :arg0 (p / person :mod (m2 / musician) :arg0-of (s / sing-01 :arg1 (i2 / instrument))) :arg1 (p2 / person :mod (m3 / musician) :arg0-of (s2 / sing-01 :arg1 (i3 / instrument)))) :op2 (s3 / singing :arg0 (p3 / person) :degree (a / at-all))))
(p / promise-01 :arg0 (w / we) :arg2 (r / rate-entity-91 :arg1 10 :arg2 (t / temporal-quantity :quant (N / N-A) :unit (y / year))) :arg1-of (c / cause-01 :arg0 (p2 / promise-01 :arg0 (w2 / we) :arg2 (w3 / we) :time (t2 / today))))
(k / know-01 :polarity - :arg1 (d / differ-02 :arg1 (f / friendship :poss (y / you)) :arg2 (a / amr-unknown)) :time (e / ever))
(a / and :op1 (a2 / annoy-01 :arg1 (s / someone)) :op2 (u / understand-01 :arg0 (i / i) :arg1 (t / try-01 :arg0 (y / you) :arg1 (a3 / address-02 :arg0 (y2 / you) :arg1 (p / problem) :degree (m / more) :compared-to (h / home :poss (p2 / person :arg0-of (h2 / have-rel-role-91 :arg1 (i2 / i) :arg2 (c / colleague)))) :arg0-of (h3 / have-03 :arg1 (m2 / methamphetamine :mod (l / liquid)) :purpose (p3 / punish-01 :arg1 (p4 / person :arg1-of (s2 / steal-01) :arg1-of (s3 / steal-01)))))) :mod (s4 / still)) :condition (p5 / proceed-01 :arg0 (s5 / someone) :arg1 (t2 / thing)))
(i / include-91 :arg1 (r / rate-entity-91 :arg1 (t / temporal-quantity :quant (1 / 1/2) :unit (h / hour)) :arg2 (t2 / temporal-quantity :quant (N / N-A) :unit (h2 / hour))) :arg2 (a / and :op1 (c / climbed :arg0 (p / person :quant 623,000 :arg0-of (h3 / have-org-role-91 :arg2 (- / -rrb-))) :arg1 (p2 / person :arg0-of (v / view-01)) :mod (s / small)) :op2 (w / win-01 :arg0 (p3 / person) :arg2 (p4 / person :arg0-of (v2 / view-01)) :mod (s2 / small) :arg1-of (c2 / cause-01 :arg0 (s3 / show-04 :arg1 (a2 / and :op1 (s4 / show-04 :arg1 (p5 / person :name (n / name :op1 "Eddie"))) :op2 (s5 / seat-01 :arg1-of (h4 / hot-05))))))))
(m / multi-sentence :snt1 (p / parazitat :arg0 (a / and :op1 (m2 / mobsters :arg0 (c / class :mod (p2 / politics)) :arg1 (p3 / parazitat)) :op2 (p4 / paralysed :arg0 (c2 / class :mod (p5 / politics)) :arg1 (p6 / parazitat)))) :snt2 (s / state :location (a2 / area :quant (a3 / all))))
(s / say-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (c / country :name (n / name :op1 "Singapore")))) :arg1 (p2 / person :name (n2 / name :op1 "Simona") :arg0-of (h2 / have-org-role-91 :arg2 (' / ''))) :time (c2 / conference :mod (p3 / press)) :time (a / after :op1 (p4 / possible-01 :arg1 (g / give-01 :arg0 (c3 / country) :arg1 (a2 / answer-01)))))
(s / say-01 :arg0 (d / democrat :mod (p / person :arg0-of (v / vote-01)) :quant (m / most)) :arg1 (s2 / say-01 :arg0 (d2 / democrat) :arg1 (d3 / decide-01 :arg0 (d4 / democrat) :arg1 (d5 / decide-01 :arg0 (d6 / democrat) :arg1 (c / candidate :arg1-of (h / have-03 :arg0 (d7 / democrat))))) :degree (t / too) :time (b / before :op1 (s3 / start-01 :arg1 (e / elect-01 :mod (p2 / primary))))))
(p / put-01 :arg0 (p2 / person :arg1-of (i / include-91 :arg2 (p3 / person :arg1-of (e / employ-01 :arg0 (i2 / i))) :arg3 (o / one))) :arg1 (m / mud) :arg2 (f / foot))
(s / see-01 :arg0 (w / we) :arg1 (i / integrate-01 :arg1 (a / area :mod (e / euro)) :mod (g / great :degree (m / more)) :arg0-of (p / push-01 :arg1 (c / country :arg1-of (i2 / include-91 :arg2 (c2 / country :location (r / region)) :arg3 (m2 / most)))) :time (a2 / and :op1 (d / date-entity :decade (N / N-A)) :op2 (p2 / process-02 :arg1 (d2 / decisionmaking :location (c3 / continent :name (n / name :op1 "Europe")))))) :mod (e2 / especially) :condition (e3 / expect-01))
(m / multi-sentence :snt1 (l / lose-02 :arg1 (c / circumstance :arg1-of (c2 / clear-06 :polarity -)) :location (h / hospital) :time (c3 / circumstance :arg1-of (d / dark-02))) :snt2 (a / and :op2 (b / boln?vioar :mode (i / interrogative) :arg0 (f / family :mod (w / wealth) :location (c4 / country :name (n / name :op1 "Italy"))) :time (a2 / after :op1 (n2 / now) :quant (b2 / between :op1 (t / temporal-quantity :quant (N / N-A) :unit (m2 / month)) :op2 (t2 / temporal-quantity :quant (N2 / N-A) :unit (m3 / month)) :mod (j / just)) :op3 (a3 / adopt-01 :arg0 (f2 / family :mod (w2 / wealth) :location (c5 / country)) :arg1 (f3 / family :mod (w3 / wealth)) :time (a4 / after :op1 (n3 / now) :quant (t3 / temporal-quantity :quant (N3 / N-A) :unit (d2 / decade))) :arg1-of (c6 / cause-01 :arg0 (k / know-02 :arg0 (n4 / nobody) :arg1 (n5 / nothing :mod (e / else)))))))))
(s / say-01 :arg0 (p / person :name (n / name :op1 "McInnes")) :arg1 (a / and :op1 (r / recommend-01 :arg1 (w / win-01 :arg0 (t / team :polarity -) :arg1 (s2 / something) :location (o / or :op1 (c / cup) :op2 (l / league)))) :op2 (w2 / win-01 :polarity - :arg0 (a2 / amr-unknown) :arg1 (g / game :arg1-of (r2 / resemble-01 :arg2 (t2 / that))))))
(c / cause-01 :arg1 (a / and :op1 (w / win-01 :quant 16 :arg0 (p / person :name (n / name :op1 "Hagi") :arg0-of (h / have-org-role-91 :arg2 (c2 / coach))) :time (a2 / after :op1 (t / temporal-quantity :quant (N / N-A) :unit (y / year)))) :op2 (w2 / win-01 :arg0 (a3 / and :op1 (p2 / person :quant 11) :op2 (p3 / person :quant 11) :op3 (d / defeats :quant 11)) :time (f / future))))
(h / have-concession-91 :arg1 (a / and :op1 (e / enter-01 :arg0 (c / company) :arg1 (c2 / company)) :op2 (t / terminated :arg1 (c3 / contract-02 :mod (t2 / this)) :time (a2 / after :op1 (p / pay-01 :arg0 (c4 / company) :arg3 (l / lei :quant 1500000))))))
(s / say-01 :arg0 (t / they) :arg1 (p / possible-01 :arg1 (d / do-02 :arg0 (i / i) :arg1 (a / all :arg1-of (d2 / do-02 :arg0 (i2 / i) :arg1-of (p2 / possible-01))) :arg2 (a2 / and :op1 (i3 / i) :op2 (p3 / person :arg0-of (h / have-rel-role-91 :arg1 (i4 / i) :arg2 (w / wife)))))))
(s / say-01 :arg0 (p / person :arg0-of (s2 / support-01 :arg1 (p2 / person :name (n / name :op1 "Clinton")))) :arg1 (o / option :domain (p3 / person :name (n2 / name :op1 "Biden")) :ord (o2 / ordinal-entity :value 2 :range (a / ahead :op1 (p4 / person :name (n3 / name :op1 "Sanders"))))))
(a / accidenteze :polarity - :arg1 (p / person :arg0-of (p2 / play-01) :poss (w / we)) :arg2 (a2 / adversary) :time (e / ever))
(s / say-01 :arg0 (p / person :name (n / name :op1 "Douglas" :op2 "Blackberg") :arg0-of (h / have-org-role-91 :arg1 (f / family :arg1-of (h2 / have-org-role-91 :arg0 (p2 / person) :arg2 (m / member))) :arg2 (m2 / member))) :arg1 (c / contrast-01 :arg1 (l / lose-02 :arg0 (f2 / family :quant (m3 / many :degree (t / too))) :arg1 (l2 / life :poss (f3 / family))) :arg2 (l3 / lose-02 :arg0 (p3 / person :arg0-of (s2 / study-01) :quant (a / at-least :op1 1)) :arg1 (l4 / life :poss (f4 / family)) :frequency (r / rate-entity-91 :arg3 (t2 / temporal-quantity :quant (N / N-A) :unit (y / year))) :arg1-of (c2 / cause-01 :arg0 (r2 / rituals :arg0 (p4 / person) :arg1 (p5 / person :arg0-of (h3 / have-rel-role-91 :arg1 (p6 / person) :arg2 (l5 / lawyer))))))) :medium (s3 / statement))
(o / obligate-01 :arg2 (e / enter-01 :arg0 (o2 / organization :name (n / name :op1 "EU")) :arg1 (l / law :mod (s / sanitary) :arg0-of (g / good-04 :polarity - :arg1 (a / and :op1 (v / vegetables) :op2 (m / meat))))) :purpose (e2 / enter-01 :arg0 (o3 / organization) :arg1 (o4 / organization)))
(s / say-01 :arg0 (p / person :name (n / name :op1 "Bellamy")) :arg1 (a / and :op1 (o / opine-01 :arg0 (h / he) :arg1 (c / compare-01 :arg0 (o2 / opine-01) :arg1 (g / game :poss (o3 / opine-01)) :time (e / evening :time (n2 / night :mod (f / friday))))) :op2 (t / talk-01 :arg0 (h2 / he) :arg1 (g2 / game))))
(a / and :op1 (a2 / argue-01 :arg0 (h / he) :arg1 (a3 / and :op1 (t / thing :arg1-of (o / opine-01)) :op2 (c / compare-01 :arg1 (g / game) :arg2 (n / night :mod (f / friday)) :prep-with (g2 / game :poss (w / we))))) :op2 (s / say-01 :arg0 (p / person :name (n2 / name :op1 "Bellamy")) :arg1 (g3 / game)))
(m / multi-sentence :snt1 (p / play-01 :arg0 (p2 / person :name (n / name :op1 "Bradley" :op2 "Cooper")) :arg1 (r / role :topic (b / burn-01 :arg1 (' / '' :name (n2 / name :op1 ('2 / '') :op2 ('3 / '') :op3 (b2 / bucatar))))) :manner (a / amr-unknown)) :snt2 (d / dezvaluire :polarity - :domain (a2 / actor :poss (h / he))))
(i / inghitite :arg0 (p / promise-01 :arg0 (h / house-01)) :arg1 (a / amount :mod (a2 / additional)) :arg1-of (q / quick-02) :arg1-of (c / cause-01 :arg0 (b / back-01 :polarity - :arg0 (h2 / house-01) :arg1 (d / demagogues :mod (p2 / populist)))))
(a / and :op1 (f / face-01 :arg0 (w / we) :arg1 (s / situation :prep-in (p / possible-01 :arg1 (d / drop-01 :arg1 (b / bank :arg1-of (m / major-02) :mod (c / central)) :arg4 (s2 / seismic-quantity :quant (N / N-A))))) :ord (o / ordinal-entity :value 1)) :op2 (s3 / say-01 :arg0 (p2 / person :name (n / name :op1 "Angel" :op2 "Ubide")) :arg1 (a2 / analyze-01 :arg0 (c2 / chief) :arg1 (p3 / process-02 :arg1 (n2 / normalisation :arg1 (r / rate :mod (i / interest)))))))
(a / and :op1 (a2 / associate-01 :arg1 (o / organization :name (n / name :op1 "Moody") :arg1-of (i / include-91 :arg2 (n2 / name :op1 (c / campionului) :op2 (b / branded) :op3 (b2 / branded) :op4 (b3 / branded) :op5 (b4 / branded)))) :arg2 (d / day :time-of (a3 / applied :arg1 (r / race))) :frequency (o2 / often :degree (m / most))) :op2 (t / treat-01 :arg1 (p / person :arg1-of (b5 / branded)) :arg2 (d2 / day :time-of (r2 / race)) :time (a4 / after :op1 (a5 / apply-01 :arg1 (r3 / race) :arg2 (f / foot :part-of (o3 / or :op1 (n3 / namol) :op2 (c2 / clay)) :arg0-of (v / violate-01 :arg1 (r4 / rule)))))))
(s / say-01 :arg0 (a / and :op1 (p / person :arg0-of (h / have-org-role-91 :arg1 (c / company :name (n / name :op1 "BBC")) :arg2 (c2 / correspondent :mod (p2 / politics)))) :op2 (p3 / person :name (n2 / name :op1 "Robin" :op2 "Brant") :arg0-of (h2 / have-org-role-91 :arg1 (c3 / company) :arg2 (c4 / correspondent :mod (p4 / politics))))) :arg1 (' / '' :arg1 (d / differ-01 :mod (p5 / politics)) :location (p6 / political-party :name (n3 / name :op1 "Labour" :op2 "Party")) :time (a2 / after :op1 (a3 / appoint-01 :arg0 (p7 / person) :arg1 (p8 / person :name (n4 / name :op1 "Corbyn")) :arg2 (a4 / and :op1 (p9 / position-01 :arg1 (p10 / person) :arg2 (p11 / position-01 :arg1 (p12 / person) :arg2 (o / organization :name (n5 / name :op1 "European" :op2 "Union")))) :op2 (l / limit-01 :arg0 (p13 / person) :arg1 (b / benefit-01)))))))
(c / contrast-01 :arg2 (a / and :op1 (c2 / continue-01 :arg0 (p / person :name (n / name :op1 "Hagi")) :arg1 (p2 / policy :topic (p3 / promote-02 :arg1 (p4 / person :mod (y / young))))) :op2 (a2 / appear-01 :arg1 (n2 / name :poss (t / team)) :time (l / lately) :location (n3 / name :poss (t2 / team)) :prep-as (o / or :op1 (p5 / person :name (n4 / name :op1 "Ianis" :op2 "Hagi")) :op2 (b / brotherhood)))))
(v / vote-01 :arg0 (p / person :name (n / name :op1 "Ilie" :op2 "Sarbu")) :arg1 (p2 / person :arg0-of (h / have-org-role-91 :arg1 (o / organization :name (n2 / name :op1 "Court" :op2 "of" :op3 "Auditors")) :arg2 (p3 / president))) :location (o2 / organization :name (n3 / name :op1 "Court" :op2 "of" :op3 "Auditors")))
(a / and :op2 (l / look-01 :mode (i / imperative) :arg0 (y / you) :arg1 (y2 / you) :time (n / no-longer)))
(b / byline-91 :arg2 (l / location :name (n / name :op1 "Chinatown")))
(t / tell-01 :arg0 (p / person :name (n / name :op1 "Eilidh" :op2 "Robertson") :arg0-of (p2 / prosecute-01)) :arg1 (p3 / person :arg1-of (a / addict-01 :arg2 (s / scare-01 :arg1 (p4 / person))) :domain (i / it)) :arg2 (c / court) :location (l / location :name (n2 / name :op1 "Dundee")))
(s / say-01 :arg0 (p / person :name (n / name :op1 "Corneliu" :op2 "Vadim" :op3 "Tudor") :arg0-of (h / have-org-role-91 :arg1 (c / church) :arg2 (m / member))) :arg1 (a / and :op1 (m2 / mercy :arg1 (c2 / church)) :op2 (s2 / sit-01 :arg1 (p2 / person) :arg2 (m3 / member :arg2-of (h2 / have-org-role-91 :arg1 (o / organization :name (n2 / name :op1 "Holy" :op2 "Synod"))))) :op3 (p3 / person :arg0-of (r / represent-01 :arg1 (p4 / patriarchy :quant 5 :arg0-of (p5 / participate-01 :arg1 (r2 / rehearsals)))) :arg0-of (h3 / have-org-role-91 :arg1 (o2 / organization :name (n3 / name :op1 "Capital" :op2 "of" :op3 "Culture")) :arg2 (m4 / member)))))
(a / ask-02 :arg0 (w / we) :arg1 (t / thing :quant (s / some) :arg1-of (q / qualify-02 :arg2 (t2 / train-01 :mod (p / physical)) :arg1-of (s2 / specific-02)) :arg1-of (h / hear-01 :polarity - :arg0 (i / i) :time (e / ever))) :arg2 (t3 / thing :quant (s3 / some)))
(f / find-01 :arg0 (i / i) :arg1 (t / this) :time (b / before :op1 (n / now) :quant (m / multiple :op1 (t2 / temporal-quantity :quant (N / N-A) :unit (y / year)))) :arg1-of (c / cause-01 :arg0 (f2 / find-01 :polarity - :arg0 (w / we) :arg1 (a / and :op1 (c2 / creativity) :op2 (f3 / fraternity :mod (h / human)) :location (s / system :mod (t3 / this))))))
(a / and :op1 (s / say-01 :arg0 (t / they) :arg1 (s2 / serve-01 :polarity - :time (a2 / after :op1 (n / now) :quant (t2 / temporal-quantity :quant (N / N-A) :unit (y / year))))) :op2 (a3 / announce-01 :arg1 (t3 / thing :arg1-of (a4 / announce-01 :time (p / press :arg1-of (c / cancelled))))))
(p / possible-01 :arg1 (a / and :op1 (c / check-out-05 :arg0 (p2 / person :arg1-of (e / employ-01)) :arg1 (s / status :poss (b / body :poss (y / you)))) :op2 (a2 / advise-01 :arg0 (p3 / person) :arg2 (t / thing :manner-of (l / live-01 :arg0 (p4 / person :arg0-of (l2 / live-01 :arg1-of (c2 / cause-01 :arg0 (d / destroy-01 :polarity - :arg1 (h / health :poss (p5 / person)))))))))))
(c / cause-01 :arg1 (a / and :op1 (f / fear-01 :polarity - :mode (i / imperative) :arg0 (y / you) :arg1 (w / weather) :location (o / outside)) :op2 (d / depend-01 :polarity - :arg0 (p / procedure :arg1-of (i2 / include-91 :arg2 (p2 / procedure) :arg3 (m / majority))) :arg1 (s / season :mod (s2 / season)) :mod (e / especially))))
(g / grow-01 :arg1 (b / broadcast-program :name (n / name :op1 "N-A")) :arg2 (p / percentage-entity :value (N / N-A)) :manner (j / june))
(m / manage-02 :arg0 (s / she) :arg1 (w / win-01 :arg0 (s2 / she) :arg1 (s3 / silver) :location (w2 / world)) :time (p / prior :op1 (t / that)))
(a / and :op1 (e / enter-01 :arg0 (s / she) :arg1 (t / team :mod (y / youth)) :arg1-of (q / quick-02)) :op2 (b / break-01 :arg1 (s2 / she) :location (t2 / team :mod (n / nation) :mod (m / main)) :time (l / late :degree (m2 / more))))
(m / multi-sentence :snt1 (c / contrast-01 :arg1 (n / need-01 :polarity - :arg1 (b / battle-01)) :arg2 (o / organize-01 :arg0 (s / she) :arg1 (b2 / break-through-26 :arg0 (s2 / she) :mod (r / real)))) :snt2 (b3 / bring-01 :arg0 (s3 / she) :arg1 (a / and :op1 (s4 / star) :op2 (t / team :name (n2 / name :op1 (s5 / star)) :mod (n3 / nation))) :arg2 (g / game :mod (o2 / olympic)) :purpose (g2 / game :mod (o3 / olympic) :mod (r2 / rio))))
(c / continue-01 :arg0 (g / girl) :arg1 (s / swim-01 :arg0 (g2 / girl)) :arg0-of (s2 / show-01 :arg1 (r / result-01 :arg2 (l / level :mod (n / nation)) :arg1-of (h / high-02))))
(b / bear-02 :arg1 (p / person :arg1-of (b2 / bear-02 :location (f / family :arg1-of (h / have-org-role-91 :arg0 (p2 / person) :arg2 (m / member))))) :location (f2 / family :arg1-of (h2 / have-org-role-91 :arg0 (p3 / person) :arg2 (m2 / member))) :location (f3 / family :arg1-of (h3 / have-org-role-91 :arg0 (p4 / person) :arg2 (m3 / member))) :location (f4 / family :arg1-of (h4 / have-org-role-91 :arg0 (p5 / person) :arg2 (m4 / member))) :location (f5 / family :arg1-of (h5 / have-org-role-91 :arg0 (p6 / person) :arg2 (m5 / member))))
(b / believe-01 :arg0 (p / person :arg1-of (e / expert-01)) :arg1 (a / and :op1 (i / increase-01 :arg1 (s / split-01 :arg1 (r / relation-03 :arg0 (c / country :name (n / name :op1 "N-A")) :arg2 (w / west)))) :op2 (p2 / possible-01 :arg1 (l / lead-03 :arg0 (s2 / split-01) :arg2 (a2 / attempt-01 :arg1 (c2 / change-01 :arg1 (g / government-organization :arg0-of (g2 / govern-01)) :location (c3 / country)) :mod (n2 / new))))))
(c / choose-01 :arg0 (i / i) :arg1 (c2 / choose-01 :arg0 (a / and :op1 (t / turkey) :op2 (f / feto)) :arg1 (o / organization :mod (t2 / terrorism) :arg0-of (h / have-org-role-91 :arg1 (o2 / organization :mod (t3 / terrorism)) :arg2 (- / -rrb-)))) :time (o3 / or :op1 (s / soon :degree (m / more)) :op2 (l / late :degree (m2 / more))))
(a / admit-01 :arg0 (p / person :arg0-of (s / support-01 :arg1 (p2 / person :name (n / name :op1 "erdogan")))) :arg1 (p3 / possible-01 :arg1 (i / involve-01 :arg1 (c / coup) :arg2 (p4 / person :mod (c2 / country :name (n2 / name :op1 "N-A"))) :arg1-of (d / direct-02) :mod (a2 / also))))
(c / contrast-01 :arg2 (v / value-01 :arg1 (v2 / visit-01) :arg2 (t / thing :mod (p / politics) :mod (a / additional)) :mod (a2 / also)))
(r / reality :domain (m / moscow :arg0-of (h / have-03 :arg1 (f / fear-01 :arg0 (r2 / regime) :arg1 (c / change-01 :arg1 (r3 / regime)) :mod (d / deep-rooted)))) :location (m2 / mind))
(g / go-03 :mode (i / imperative) :arg0 (y / you) :arg1 (a / and :op1 (p / pulls :arg1 (p2 / person)) :op2 (e / engages :arg1 (p3 / person) :location (a2 / activity-06 :mod (p4 / physical) :quant (s / some)))))
(p / publish-01 :arg0 (a / authority) :arg1 (r / report-01 :arg0 (p2 / police) :arg1 (t / thing :arg2-of (h / have-purpose-91 :arg1 (t2 / truck :arg1-of (e / empty-02) :arg1-of (t3 / truck :duration (t4 / temporal-quantity :quant (N / N-A) :unit (h2 / hour) :time (b / before :op1 (m / murder-01 :mod (b2 / bone :part-of (p3 / person :arg0-of (k / kill-01 :mod (s / serial)))) :arg1-of (b3 / believe-01))))))))) :mod (a2 / also) :topic (s2 / shelling))
(l / like-01 :arg0 (h / he) :arg1 (p / play-01 :arg0 (h2 / he) :arg2 (a / and :op1 (p2 / person :quant 2 :arg0-of (h3 / have-rel-role-91 :arg1 (h4 / he) :arg2 (b / brother))) :op2 (s / sing-01 :arg0 (h5 / he)))) :mod (a2 / also))
(g / get-03 :arg1 (y / you) :arg2 (g2 / good :degree (m / more)))
(s / state-01 :arg0 (p / person :arg0-of (r / represent-01 :arg1 (o / office :poss (p2 / person :arg0-of (h / have-org-role-91 :arg1 (o2 / office :poss (p3 / person :arg0-of (h2 / have-org-role-91 :arg2 (g / governor))) :arg2 (o3 / office :topic (s2 / security :mod (n / nation))))))))) :arg1 (r2 / receive-01 :arg0 (p4 / person) :arg1 (r3 / request-01 :arg1 (t / transport-01) :purpose (a / and :op1 (w / water :arg1-of (h3 / high-02)) :op2 (b / boat) :op3 (s3 / sand)))) :arg2 (p5 / person :arg0-of (r4 / represent-01 :arg1 (o4 / office :poss (p6 / person :arg0-of (h4 / have-org-role-91 :arg2 (g2 / governor))) :topic (s4 / security :mod (n2 / nation))))))
(i / identify-01 :arg0 (p / person :arg0-of (h / have-rel-role-91 :arg1 (p2 / person :arg0-of (h2 / have-rel-role-91 :arg1 (c / child) :arg2 (c2 / child))) :arg2 (p3 / parent))) :arg1 (h3 / he) :arg2 (c3 / cbs :arg1 (p4 / person) :arg2 (b / brown :mod (m / mahaz))))
(m / multi-sentence :snt1 (c / cause-01 :arg1 (a / and :op1 (s / soldier :arg1-of (a2 / arm-01) :quant (f / few)) :op2 (s2 / soldier :arg1-of (a3 / arm-01)) :arg1-of (i / involve-01 :arg2 (s3 / shootout)))) :snt2 (r / report-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (p2 / police :mod (p3 / philadelphia)) :arg2 (c2 / captain))) :arg1 (g / ginaldi :arg1 (c3 / captain :prep-with (p4 / police :mod (p5 / philadelphia))))))
(o / obligate-01 :arg2 (a / act-02 :arg0 (p / person :arg0-of (h / have-rel-role-91 :arg2 (d / dh))) :purpose (e / encourage-01 :arg0 (p2 / person) :arg1 (c / concern-01 :arg0 (d2 / doctor :mod (j / junior)))) :time (n / now)))
(a / and :op1 (p / produce-01 :arg0 (t / ticagrelor :arg1-of (p2 / produce-01 :arg0 (f / firm :name (n / name :op1 (a2 / astrazeneca)) :mod (c / country :name (n2 / name :op1 "N-A"))))) :arg1 (t2 / thing :arg2-of (n3 / name-01 :arg1 (f2 / firm :mod (c2 / country :name (n4 / name :op1 "N-A")))))) :op2 (s / sell-01 :arg0 (t3 / ticagrelor) :arg1 (r / risk-01 :arg2 (m / make-01 :arg1 (c3 / clot :mod (b / blood)))) :degree (l / less)))
(m / multi-sentence :snt1 (c / concern-01 :arg0 (t / turn-02 :arg0 (i / institution :mod (s / state)) :arg1 (e / eye :mod (b / blind-02)) :arg2 (b2 / behave-01 :mod (t2 / this)))) :snt2 (' / '' :arg0 (c2 / correctness :mod (p / politics) :mod ('2 / '')) :arg1 (a / and :op1 (e2 / ethnicity) :op2 (r / religion))))
(m / multi-sentence :snt1 (p / possible-01 :arg1 (i / imagine-01 :arg0 (y / you) :arg1 (a / and :op1 (c / cbc) :op2 (c2 / canada)))) :snt2 (p2 / possible-01 :arg1 (l / look-01 :arg0 (w / we) :arg1 (r / racist :quant (b / bunch)))))
(b / bring-01 :arg0 (p / person :quant (n / none)) :arg1 (h / he) :arg2 (t / taste :arg1-of (b2 / bad-07) :location (m / mouth)) :arg2-of (f / fortunate-01))
(s / see-01 :arg0 (w / we) :arg1 (n / number :quant-of (p / person :arg1-of (s2 / see-01 :arg0 (w2 / we) :location (h / here) :arg1-of (b / believe-01 :polarity - :arg0 (w3 / we))))))
(s / say-01 :arg0 (p / person :arg0-of (h / head-01 :arg1 (g / group)) :arg0-of (h2 / have-org-role-91 :arg1 (g2 / group) :arg3 (h3 / head-01 :arg0 (p2 / person) :arg1 (g3 / group)))) :arg1 (p3 / possible-01 :polarity - :arg1 (c / cooperate-01 :arg0 (f / family) :arg1 (a / authority :arg1-of (l / local-02)))))
(r / report-01 :arg0 (i / i) :arg1 (c / contrast-01 :arg1 (l / live-01 :arg0 (p / person :quant (a / all) :arg0-of (h / have-rel-role-91 :arg1 (p2 / person) :arg2 (s / son))) :location (h2 / house) :time (t / time :arg1-of (d / differ-02))) :arg2 (s2 / say-01 :arg0 (p3 / person) :arg1 (h3 / have-03 :arg0 (t2 / they :quant (a2 / all)) :arg1 (m / more :mod (l2 / little))))))
(a / and :op1 (u / use-01 :arg1 (s / system) :arg2 (e / enterprise :mod (f / food) :quant (a2 / all)) :time (n / now)) :op2 (b / be-located-at-91 :arg1 (s2 / system) :arg2 (u2 / union-02 :arg1 (e2 / enterprise) :arg2 (c / continent :name (n2 / name :op1 "N-A"))) :mod (a3 / also)))
(s / say-01 :arg0 (p / person :arg0-of (l / lead-02 :arg1 (d / democrat :location (s2 / senate)))) :arg1 (c / convince-01 :arg0 (c2 / candidate :poss (p2 / person :arg0-of (h / have-org-role-91 :arg2 (p3 / president :mod (v / vice))))) :arg1 (p4 / person :arg0-of (h2 / have-org-role-91 :arg3 (j / judge-01)) :arg0-of (h3 / have-org-role-91 :arg3 (j2 / judge-01))) :arg2 (p5 / person :arg0-of (h4 / have-org-role-91 :arg3 (j3 / judge-01)) :arg0-of (h5 / have-org-role-91 :arg3 (j4 / judge-01))) :condition (e / elect-01 :arg2 (p6 / president))))
(a / agree-01 :arg0 (h / he) :arg1 (a2 / and :op1 (l / likely-01 :arg1 (i / introverts :arg0 (p / person :arg0-of (b / buy-01 :arg1 (r / record))) :arg1 (p2 / person :arg0-of (b2 / buy-01 :arg1 (r2 / record)) :arg1-of (r3 / resemble-01 :arg2 (p3 / person :arg0-of (b3 / buy-01 :arg1 (r4 / record))))))) :op2 (a3 / add-01 :arg0 (p4 / person) :arg1 (d / drink-01 :arg0 (i2 / i) :degree (t / total) :arg1-of (c / cause-01 :arg0 (d2 / drink-01 :arg0 (i3 / i) :arg1 (m / much :degree (v / very)) :degree (t2 / total)))))))
(l / lose-02 :arg0 (t / they) :arg1 1 :mod (j / just) :location (h / here))
(m / multi-sentence :snt1 (a / and :op1 (d / defeat-01 :arg0 (p / person :mod (c / country :name (n / name :op1 "N-A"))) :arg1 (p2 / person :quant (2 / 20-5)) :location (s / semifinals) :time (e / early :degree (m2 / more))) :op2 (s2 / surpassed :arg0 (p3 / person :mod (c2 / country :name (n2 / name :op1 "N-A"))) :arg1 (s3 / south :part-of (c3 / country)) :degree (s4 / slight))) :snt2 (a2 / attempt-01 :arg0 (p4 / person :mod (c4 / country)) :arg1 (a3 / attempt-01 :arg0 (c5 / country))))
(l / likely-01 :polarity - :arg1 (n / neutralize-01 :arg0 (p / precipitation :time (w / week :mod (n2 / next)))))
(f / find-02 :arg0 (p / panel :consist-of (t / thing :name (n / name :op1 "N-A"))) :arg1 (c / contrary-01 :arg1 (a / and :op1 (d / duty :mod (i / import-01)) :op2 (g / gearbox) :op3 (o / oil :mod (p2 / palm))) :arg2 (r / rule :poss (o2 / organization))))
(i / increase-01 :arg1 (s / share :poss (p / pgnig :mod (g / giant) :mod (c / country :name (n / name :op1 "N-A")) :location (c2 / country :name (n2 / name :op1 "N-A")))) :arg4 (p2 / percentage-entity :value (N / N-A)) :arg4 (p3 / percentage-entity :value (N2 / N-A)) :time (e / early :degree (m / more)))
(a / and :op1 (f / feel-01 :arg0 (i / i) :arg1 (a2 / and :op1 (b / build-up-05 :arg1 (g / gas)) :op2 (b2 / burn-01 :arg1 (e / eye)) :op3 (b3 / burn-01 :arg1 (e2 / eye))) :time (l / late :op1 (f2 / few :op1 (t / temporal-quantity :quant (N / N-A) :unit (m / minute))) :degree (m2 / more))) :op2 (b4 / become-01 :arg1 (i2 / it) :arg2 (d / difficult)) :op3 (q / quote-01 :arg0 (i3 / i) :arg1 (d2 / difficult :domain (b5 / breathe-01 :arg0 (e3 / edition :poss (p / person :arg0-of (w / witness-01)))))))
(a / amount-01 :arg1 (m / monetary-quantity :arg1-of (s / save-01 :arg0 (m2 / merge-01 :arg1 (p / pension)))) :arg2 (p2 / product-of :op1 31 :op2 373))
(a / and :op1 (w / work-01 :arg0 (a2 / and :op1 (p / person :arg0-of (r / retire-01)) :op2 (p2 / person :arg0-of (r2 / retire-01)) :op3 (p3 / person :arg0-of (r3 / retire-01)) :op4 (p4 / person :arg0-of (r4 / retire-01)) :op5 (p5 / person :arg0-of (r5 / retire-01)) :op6 (p6 / person :arg0-of (r6 / retire-01)) :op6 (p7 / person :arg0-of (r7 / retire-01)) :op6 (p8 / person :arg0-of (r8 / retire-01)) :op6 (p9 / person :arg0-of (r9 / retire-01)) :op6 (p10 / person :arg0-of (r10 / retire-01)) :op7 (p11 / person :arg0-of (h / have-org-role-91 :arg2 (h2 / head-of-state))) :op7 (p12 / person :arg0-of (h3 / have-org-role-91 :arg2 (h4 / head-of-state))) :op7 (p13 / person :arg0-of (h5 / have-org-role-91 :arg2 (h6 / head-of-state))))) :op2 (o / obligate-01 :arg1 (p14 / person) :arg2 (j / join-01 :arg0 (p15 / person) :arg1 (f / fund) :time (b / before :op1 (e / end-01 :arg1 (y / year :mod (t / this)))))))
(c / contrast-01 :arg1 (s / speak-01 :polarity - :arg0 (a / and :op1 (p / purrs) :op2 (p2 / purrs) :op3 (g / grunts) :op4 (g2 / grunts) :mod (e / even))) :arg2 (w / want-01 :arg0 (h / he) :arg1 (s2 / strokes :arg0 (h2 / he) :arg1 (d / dragons :arg1-of (k / know-02) :quant (a2 / all) :arg1-of (k2 / know-02))) :time (t / time :mod (a3 / all))))
(a / and :op1 (m / make-01 :arg0 (c / change-01) :arg1 (c2 / company :arg1-of (s / settle-03))) :op2 (o / okay-04 :arg1 (c3 / change-01) :time (n / now) :mod (a2 / all)))
(h / have-03 :arg0 (v / village) :arg1 (c / center :prep-for (a / and :op1 (c2 / ceremony :mod (m / meditation)) :op2 (c3 / ceremony :mod (r / religious)) :beneficiary (p / person :quant (a2 / all)))) :arg1-of (g / general-02))
(a / and :op1 (p / plate :domain (a2 / awe-01 :mod (e / each))) :op2 (n / name :arg0 (a3 / and :op1 (c / country :name (n2 / name :op1 "N-A")) :op2 (c2 / country :name (n3 / name :op1 "N-A")) :op3 (p2 / portuguese)) :arg1 (a4 / and :op1 (t / thing :arg2-of (v / value-01 :arg1 (p3 / product))) :op2 (p4 / presence :poss (a5 / allergens)))))
(t / take-01 :arg0 (i / i) :arg1 (m / memory :quant 1) :arg3 (m2 / memory))
(c / cause-01 :arg0 (r / result-01 :arg1 (s / scheme :mod (t / this)) :arg2 (a / account :poss (b / branch :mod (b2 / branch :mod (s2 / samara))))) :arg1 (s3 / steal-01 :quant (m / more-than :op1 2000000000) :arg1-of (s4 / steal-01 :mod (r2 / ruble))))
(f / form-01 :arg1 (t / tube :quant (o / over :op1 (d / distance-quantity :quant (N / N-A) :unit (k / kilometer)))) :location (c / country :name (n / name :op1 "N-A")) :time (h / holiday :mod (s / summer :mod (s2 / short))))
(a / and :op1 (a2 / appear-01 :arg1 (i / information :arg1-of (p / pakistani :arg2 (n / name :op1 (p2 / peshawar) :op2 (m / mi-17) :op3 (l / landed)) :location (l2 / logar :location (e / east :part-of (s / strait)))))) :op2 (c / cause-01 :arg0 (p3 / problem :mod (t / technical)) :arg1 (a3 / appeared :arg1 (i2 / information))))
(e / explode-01 :quant (s / series) :location (r / resorts :mod (p / person :arg0-of (t / tour-01)) :location (r2 / resorts :mod (c / country :name (n / name :op1 "N-A")))))
(a / and :op1 (s / study-01 :arg0 (p / person :mod (c / country :name (n / name :op1 "N-A"))) :ord (o / ordinal-entity :value 1)) :op2 (d / determine-01 :arg0 (p2 / person) :arg1 (a2 / action :mod (f / further) :purpose (o2 / or :op1 (a3 / accept-01 :arg0 (p3 / person) :arg1 (t / thing)) :op2 (c2 / challenge-01 :arg0 (p4 / person) :arg1 (t2 / thing)))) :time (t3 / then)))
(i / injure-01 :arg1 (p / person :quant 5 :mod (a / another)) :arg1-of (i2 / injure-01))
(h / hope-01 :arg0 (w / we) :arg1 (a / and :op1 (a2 / arrive-01 :arg1 (p / person :mod (c / country :name (n / name :op1 "N-A"))) :arg1-of (q / quick-02)) :op2 (p2 / provide-01 :arg0 (p3 / person) :arg1 (a3 / assist-01 :mod (p4 / professional) :arg1-of (n2 / need-01) :quant (a4 / all)))) :time (c2 / call-02 :arg0 (y / you) :arg1 (a5 / ambulance)))
(o / open-01 :arg0 (i / i) :arg1 (s / scoring :time (g / game :ord (o2 / ordinal-entity :value 1) :arg1-of (i2 / include-91 :arg2 (g2 / game :mod (a / awkward) :arg1-of (r / range-01 :arg2 (s2 / short :mod (s3 / short))))))) :time (e / evening :mod (t / thursday)))
(a / and :op1 (d / difficult :domain (k / keep-04 :arg1 (c / country :mod (t / this)) :arg2 (c2 / collapse-01 :arg1 (c3 / country)) :time (a2 / always))) :op2 (h / hard-02 :arg1 (s / say-01 :arg0 (p / person :arg0-of (h2 / head-01 :arg1 (p2 / project :name (n / name :op1 (' / '') :op2 (a3 / africa) :op3 (a4 / africa)))) :arg0-of (h3 / head-01 :arg1 (p3 / project))) :arg1 (p4 / person :arg0-of (h4 / head-01 :arg1 (p5 / project)) :arg0-of (h5 / have-org-role-91 :arg1 (g / group :mod (r / research-01) :mod (i / international)) :arg3 (h6 / head-01))))))
(c / cooperate-01 :arg0 (a / and :op1 (p / person :arg0-of (h / have-org-role-91 :arg1 (m / military :mod (c2 / country :name (n / name :op1 "N-A"))) :arg2 (p2 / personnel))) :op2 (p3 / person :arg0-of (h2 / have-org-role-91 :arg1 (i / intelligence) :arg2 (p4 / personnel))) :op3 (p5 / person :arg0-of (h3 / have-org-role-91 :arg1 (i2 / intelligence) :arg2 (p6 / personnel))) :op4 (p7 / person :arg0-of (h4 / have-org-role-91 :arg1 (i3 / intelligence) :arg2 (p8 / personnel))) :op5 (p9 / person :arg0-of (h5 / have-org-role-91 :arg1 (i4 / intelligence) :arg2 (p10 / personnel)))) :arg1 (a2 / and :op1 (f / fight-01 :arg0 (p11 / person) :arg1 (t / threaten-01 :arg0 (t2 / terrorist) :location (r / region))) :op2 (r2 / receive-01 :polarity - :arg0 (c3 / country :polarity - :location (f2 / fame-01) :mod (v / virtual)) :arg1 (s / support-01 :arg1 (w / west) :mod (s2 / such)))) :manner (c4 / close))
(m / multi-sentence :snt1 (b / bring-up-02 :arg0 (h / he) :arg1 (c / criticize-01 :arg0 (h2 / he) :mod (u / universal)) :time (a / after :op1 (b2 / bring-up-02 :arg0 (h3 / he) :arg1 (c2 / criticize-01 :arg0 (h4 / he) :mod (u2 / universal)))) :time (a2 / after :op1 (b3 / bring-up-02 :arg0 (h5 / he) :arg1 (c3 / criticize-01 :arg0 (h6 / he) :mod (u3 / universal))))) :snt2 (a3 / and :op1 (e / explain-01 :arg0 (h7 / he) :arg1 (t / thing :arg1-of (c4 / comment-01 :arg0 (h8 / he))) :time (l / late :degree (m2 / more))) :op2 (s / say-01 :arg0 (h9 / he) :arg1 (' / '' :domain (i / i)))))
(w / winced :mod (k / kou))
(a / and :op1 (f / focus-01 :arg0 (l / legacy :poss (t / they)) :arg2 (a2 / and :op1 (c / calories) :op2 (n / nutrition)) :mod (c2 / constant)) :op2 (s / say-01 :arg0 (i / i) :arg1 (u / use-01 :arg1 (s2 / science) :manner (a3 / amr-unknown) :location (c3 / cooking))))
(b / be-located-at-91 :arg1 (a / and :op1 (p / person :name (n / name :op1 "kamensky")) :op2 (p2 / person :arg0-of (h / have-org-role-91 :arg2 (g / grigoryan)))) :arg2 (f / final :location (s / shooting :source (r / rifle :mod (s2 / small-caliber)))))
(a / and :op1 (s / support-01 :arg0 (p / person :name (n / name :op1 "Clinton")) :arg1 (r / rule)) :op2 (n2 / name-01 :arg0 (p2 / person) :arg1 (p3 / person :arg0-of (i / invest-01)) :arg2 (r2 / rate-entity-91 :arg1 (m / more-than :op1 (m2 / monetary-quantity :quant 1 :unit (d / dollar))) :arg2 (t / temporal-quantity :quant (N / N-A) :unit (y / year))) :arg0-of (g / guarantee-01 :arg1 (p4 / pay-01 :arg0 (p5 / person :arg0-of (i2 / invest-01)) :arg1 (r3 / rate-entity-91 :arg1 (m3 / more-than :op1 (m4 / monetary-quantity :quant 1 :unit (d2 / dollar))) :arg2 (t2 / temporal-quantity :quant (N2 / N-A) :unit (y2 / year)))))))
(s / say-01 :arg0 (h / he) :arg1 (s2 / safe-01 :arg1 (s3 / say-01 :arg0 (h2 / he) :arg1 (v / visit-01 :arg0 (p / person :arg0-of (t / tour-01) :mod (c / country :name (n / name :op1 "N-A")) :quant (n2 / number :time (y / year :mod (l / last)))) :arg1 (p2 / person :arg0-of (t2 / tour-01) :mod (c2 / country :name (n3 / name :op1 "N-A"))) :time (y2 / year :mod (l2 / last))))))
(a / and :op1 (a2 / appear-01 :arg1 (i / information :topic (n / neskorodov :mod (d / dismissal))) :mod (o / only) :time (e / evening :mod (t / thursday))) :op2 (c / cause-01 :polarity - :arg0 (i2 / information) :arg1 (r / resonance :arg1-of (w / wide-02) :location (m / media))))
(a / and :op1 (r / receive-01 :arg0 (i / industry) :arg1 (o / order-01 :arg0 (i2 / industry) :arg2 (t / tens :quant (m / multiple :op1 (m2 / mass-quantity :quant (N / N-A) :unit (g / gram)))) :arg1-of (l / long-03))) :op2 (k / know-02 :arg1 (m3 / money :mod (b / big)) :arg2 (l2 / love-01 :arg1 (p / peace))))
(c / come-01 :arg1 (y / you) :arg3 (p / person :arg0-of (h / have-rel-role-91 :arg1 (y2 / you) :arg2 (s / significant-other))))
(e / expect-01 :arg0 (d / demonstrate-01 :mod (e2 / exceptional) :mod (e3 / exceptional)) :arg1 (p / prepare-02 :arg0 (d2 / demonstrate-01) :arg2 (p2 / prepare-02 :arg2 (r / rio)) :manner (g / gradual)) :time (a / after :op1 (d3 / demonstrate-01 :mod (e4 / exceptional) :mod (r2 / really))))
(a / and :op1 (r / reduce-01 :arg1 (d / demand-01 :arg1 (m / market)) :arg1-of (s / significant-02)) :op2 (r2 / reduce-01 :arg1 (a2 / and :op1 (- / -91) :op2 (e / electricity) :op3 (e2 / electricity) :op4 (-2 / -93)) :arg1-of (s2 / significant-02)) :condition (l / leave-11 :arg0 (p / plant :mod (t / this) :mod (b / both)) :arg1 (m2 / market)))
(t / take-01 :arg0 (m / meet-03 :arg0 (u / union-02 :arg1 (c / country :name (n / name :op1 "N-A")) :arg2 (g / government-organization :arg0-of (g2 / govern-01 :arg1 (c2 / country :name (n2 / name :op1 "N-A")))) :mod (e / executive))) :arg1 (d / decide-01 :arg1 (p / post-01 :arg0 (p2 / person :arg0-of (h / have-org-role-91 :arg1 (t2 / team :mod (n3 / nation) :mod (c3 / country)) :arg2 (c4 / chief))) :arg1 (p3 / person :arg0-of (h2 / have-org-role-91 :arg1 (t3 / team :mod (n4 / nation) :mod (c5 / country)) :arg2 (c6 / chief))) :location (c7 / cherchesov :mod (s / stanislav :mod (f / football))))))
(a / aimed :arg1 (g / g-class :arg1-of (a2 / aim-02 :arg2 (a3 / achieve-01 :arg1 (e / efficient-01 :arg1-of (h / high-02 :degree (v / very)))))) :location (c / country :name (n / name :op1 "N-A")))
(m / mean-01 :arg1 (i / it) :arg2 (e / emerge-01 :arg0 (c / country :name (n / name :op1 "Russia")) :arg1 (c2 / crisis)))
(p / perform-01 :polarity - :arg0 (s / she) :manner (w / well :degree (e / equal) :compared-to (l / like-01 :arg0 (s2 / she))))
(c / cause-01 :arg0 (a / and :op1 (s / show-01 :arg0 (g / government-organization :arg0-of (g2 / govern-01 :arg1 (g3 / government-organization :arg0-of (g4 / govern-01 :arg1 (c2 / country :name (n / name :op1 "N-A")))))) :arg1 (t / thing :mod (i / iron))) :op2 (p / put-01 :arg0 (g5 / government-organization) :arg1 (t2 / thing) :arg2 (a2 / and :op1 (o / order) :op2 (a3 / anatoly) :op3 (m / member :arg2-of (h / have-org-role-91 :arg1 (c3 / committee :mod (s2 / state) :mod (s3 / state))) :arg0-of (h2 / have-org-role-91 :arg1 (c4 / committee :mod (s4 / state) :mod (s5 / state)) :arg2 (m2 / member))) :op4 (m3 / member :arg0-of (h3 / have-org-role-91 :arg1 (c5 / committee :mod (s6 / state)) :arg2 (m4 / member))) :op5 (e / et-cetera)))))
(b / break-up-08 :arg1 (p / putin :name (n / name :op1 (m / mr.) :op2 (p2 / putin))) :location (t / tirade :arg1-of (a / anger-01)) :arg0-of (a2 / accuse-01 :arg1 (p3 / putin) :arg2 (a3 / ankara :arg1 (b2 / blow-14 :arg1 (m2 / moscow)) :time (b3 / back))))
(p / possible-01 :arg1 (r / return-02 :arg0 (w / we) :arg1 (b / brand :mod (t / this)) :mod (a / again)) :arg0-of (c / cause-01 :arg1 (t2 / think-01 :arg0 (i / i) :arg1 (t3 / time))))
(m / mark-01 :arg0 (t / this) :arg1 (m2 / mark-01 :arg0 (t2 / this) :arg1 (h / help-01 :arg0 (h2 / he) :arg1 (w / win-01 :arg0 (h3 / he) :ord (o / ordinal-entity :value 2)) :arg2 (t3 / track :arg1-of (a / addict-01 :arg2 (h4 / he)) :arg1-of (t4 / train-01 :arg2 (g / gosden :mod (j / john)))))))
(c / contrast-01 :arg2 (l / lead-01 :arg0 (f / frankie :mod (f2 / frankie)) :arg1 (w / winners :location (c2 / country :name (n / name :op1 "N-A"))) :arg1-of (c3 / cause-01 :arg0 (g / great :domain (s / see-01 :arg0 (i / i))))))
(k / know-03 :arg0 (n / nobody) :time (y / yet))
(c / contrast-01 :arg2 (s / state-01 :arg0 (t / thing :arg1-of (s2 / state-01) :mod (o / official)) :arg1 (m / meet-03 :arg0 (m2 / man :arg1-of (i / include-91 :arg2 (p / person :arg0-of (h / have-org-role-91 :arg2 (p2 / president :mod (p3 / potential)))) :arg3 (p4 / person :arg0-of (h2 / have-org-role-91 :arg2 (p5 / president :mod (p6 / potential)))) :manner (s3 / sudden))) :arg1 (s4 / skepticism :mod (g / great)) :manner (s5 / sudden))))
(o / operation :domain (c / complete-01 :arg1 (c2 / close-01 :arg1 (b / between :op1 (v / viaduct) :op2 (b2 / bridge)))) :concession (a / and :op1 (s / size :poss (b3 / bridge) :mod (m / massive)) :op2 (w / weight :poss (b4 / bridge))) :concession (o2 / operate-01 :arg1 (a2 / and :op1 (s2 / size :poss (b5 / bridge)) :op2 (w2 / weight :poss (b6 / bridge)))))
(s / see-01 :polarity - :arg0 (c / company) :arg1 (p / play-02 :arg0 (d / data :mod (i / initial)) :arg1 (d2 / data :arg1-of (p2 / pass-03)) :mod (s2 / simple)))
(( / ( :( (n / name) :op1 "N-A")
(m / multi-sentence :snt1 (c / contrast-01 :arg2 (s / sign-01 :polarity - :arg0 (p / person :mod (o / ordinary) :mod (o2 / ordinary) :mod (j / just)) :arg1 (l / language))) :snt2 (s2 / say-01 :arg0 (s3 / she) :arg1 (b / bother-01 :arg0 (e / edmund :arg0 (h / he)) :arg1 (g / gestures :poss (h2 / he)))))
(a / and :op1 (p / provide-01 :arg0 (w / we) :arg1 (a2 / and :op1 (f / free-03) :op2 (c / class :name (n / name :op1 (i / inexpensive)) :arg1-of (f2 / free-04))) :time (a3 / already) :location (o / organization :poss (i2 / i))) :op2 (a4 / and :op1 (b / blacks :arg0 (c2 / class :name (n2 / name :op1 (i3 / inexpensive) :op2 (y / youngsters))) :arg1 (c3 / class :name (n3 / name :op1 (g / gymnastics) :op2 (y2 / youngsters)) :mod (m / most) :mod (y3 / youngsters))) :op2 (r / raise-02 :arg0 (c4 / class) :arg1 (a5 / and :op1 (c5 / champions :mod (n4 / nation)) :op2 (c6 / champions :mod (i4 / international))))) :location (o2 / organization :poss (i5 / i)) :time (a6 / already))
(m / multi-sentence :snt1 (s / say-01 :arg0 (i / i) :arg1 (s2 / say-01 :arg0 (i2 / i) :arg1 (d / die-01 :arg1 (p / person :source (c / country :name (n / name :op1 "N-A")) :arg1-of (r / resemble-01 :arg2 (p2 / person :mod (c2 / country :name (n2 / name :op1 "N-A")))))) :mod (j / just))) :snt2 (s3 / say-01 :mode (i3 / interrogative) :arg0 (i4 / i) :arg1 (d2 / die-01 :mode (i5 / interrogative) :arg1 (p3 / person :source (c3 / country)))))
(k / know-01 :polarity - :arg0 (p / person :arg0-of (b / buy-01)) :arg1 (b2 / be-located-at-91 :arg1 (p2 / person :arg0-of (b3 / buy-01)) :arg2 (a / away) :time (b4 / bared :arg0 (w / woman) :arg1 (p3 / person :arg0-of (h / have-rel-role-91 :arg1 (w2 / woman) :arg2 (p4 / panties))) :purpose (t / try-01 :arg0 (w3 / woman) :arg1 (o / on :arg0 (w4 / woman) :arg1 (p5 / panties :poss (w5 / woman))))) :location (f / floor :location (m / middle :part-of (p6 / primark)))))
(a / and :op1 (l / leave-17 :arg1 (w / wall :name (n / name :op1 (g / gaping))) :arg3 (h / holes :mod (g2 / gaping))) :op2 (o / opened :arg1 (w2 / wall :location (a2 / and :op1 (f / floor) :op2 (w3 / wall))) :manner (g3 / graffiti)))
(h / horrified :arg1 (p / person :arg0-of (t / tour-01) :location (p2 / portugal)) :time (t2 / touch-01 :arg0 (a / aircraft :mod (m / military) :mod (l / low-flying)) :arg1 (b / beach) :mod (a2 / almost)))
(a / and :op1 (b / become-01 :arg1 (i / inspect-01) :arg2 (a2 / activity-06 :arg1-of (a3 / activity-06 :degree (m / more)))) :op2 (f / face-01 :arg0 (b2 / business) :arg1 (f2 / fines :quant (u / up-to :op1 1000000))))
(m / multi-sentence :snt1 (a / agree-01 :arg0 (h / he) :arg1 (l / likely-01 :arg1 (i / introverts :arg0 (p / person :arg0-of (b / buy-01 :arg1 (r / record))) :arg1 (p2 / person :arg0-of (b2 / buy-01 :arg1 (r2 / record))) :degree (m2 / most) :arg1-of (l2 / likely-01 :degree (m3 / most))))) :snt2 (d / drink-01 :polarity - :arg0 (i2 / i) :arg1 (m4 / much :degree (v / very))))
(w / warms :arg1 (a / air) :arg4 (t / temperature-quantity :quant 25) :arg4 (t2 / temperature-quantity :quant (v / volume-quantity :quant (N / N-A) :unit (g / gallon))))
(i / investigate-01 :arg0 (d / department :name (n / name :op1 (p / privolzhskoye) :op2 (p2 / privolzhskoye)) :arg0-of (h / have-org-role-91 :arg1 (d2 / department :name (n2 / name :op1 (t / tfr))) :arg2 (d3 / department))) :arg1 (t2 / thing :arg0-of (c / cause-01 :arg1 (l / land-01 :arg1-of (h2 / hard-04)))))
(l / last-01 :arg1 (r / regime :arg1-of (s / special-02)) :arg2 (t / temporal-quantity :quant (N / N-A) :unit (d / day)))
(o / offer-01 :arg0 (g / government-organization :arg0-of (g2 / govern-01)) :arg1 (a / agree-01 :arg0 (g3 / government-organization) :arg1 (t / term :mod (d / draft :name (n / name :op1 (s / sukhoi) :op2 (g4 / gold) :op3 (g5 / gold) :op4 (g6 / gold) :op5 (g7 / gold) :op6 (g8 / gold) :op7 (g9 / gold) :op6 (g10 / gold) :op7 (g11 / gold) :op6 (g12 / gold) :op7 (g13 / gold))))))
(i / introduce-01 :arg1 (p / project) :arg2 (t / they :quant (m / multiple :op1 1)) :time (e / evening :mod (w / wednesday)))
(c / contrast-01 :arg2 (l / launch-01 :arg0 (g / group) :arg1 (m / merge-01 :arg1 (g2 / group)) :time (l2 / late :degree (m2 / more) :quant (m3 / much) :compared-to (c2 / company :arg0-of (c3 / compete-02 :arg1 (g3 / group))))))
(h / have-03 :arg0 (l / location :arg2-of (l2 / location :poss (t / team :mod (c / country :name (n / name :op1 "N-A"))))) :arg1 (c2 / center :mod (m / medicine) :arg1-of (r / ready-02 :arg2 (p / provide-01 :arg0 (t2 / team) :arg1 (p2 / person :arg0-of (r2 / reside-01 :arg1 (h2 / house)) :arg2-of (i / include-01 :arg1 (a / and :op1 (r3 / relaxing) :op2 (s / sport)))))) :time (t3 / time :mod (a2 / any))) :mod (o / of-course))
(h / headquarter-01 :arg1 (d / delegation :poss (w / we)) :domain (c / center :poss (d2 / delegation :poss (w2 / we))))
(c / carries :arg0 (p / person :name (n / name :op1 "andrei" :op2 "alekseev")) :arg1 (c2 / care-01 :arg0 (p2 / person) :arg1 (a / athletes :poss (t / team :name (n2 / name :op1 (a2 / abc)) :mod (c3 / country :name (n3 / name :op1 "N-A")))) :mod (s / spiritual)) :arg2 (b / blessing :poss (a3 / and :op1 (m / moscow) :op2 (r / russia :quant (a4 / all)))))
(a / and :op1 (p / picked :arg0 (i / i) :arg1 (c / cod) :arg1-of (p2 / personal-02)) :op2 (s / steamed :arg0 (i2 / i) :arg1 (m / meatballs :mod (t / tomato)) :location (s2 / sauce :mod (t2 / tomato))))
(c / contrast-01 :arg1 (f / formulate-01 :arg1 (t / thing :arg1-of (a / answer-01)) :manner (p / precise :degree (s / such)) :manner (w / way :mod (s2 / such))) :arg2 (s3 / sentences :arg1 (a2 / answer-01) :arg2 (s4 / sentence-01 :arg2 (d / dissuade) :quant (s5 / several)) :arg1-of (s6 / strong-02)))
(a / and :op2 (p / possible-01 :arg1 (a2 / amount :quant-of (t / tax-01 :arg3 (b / budget :poss (t2 / tax-01 :arg3 (l / level :quant (a3 / all)))))) :arg4 (r / ruble :quant 80.9 :mod (r2 / ruble)) :time (a4 / after :op1 (c / commissioning :arg1 (g / gok :mod (g2 / gok))))))
(c / contrast-01)
(m / musician :polarity - :domain (h / he) :mod (p / professional))
(s / say-01 :arg0 (s2 / source) :arg1 (s3 / sure-02 :arg0 (a / and :op1 (a2 / agency :mod (f / fbi)) :op2 (a3 / agency :mod (i / intelligence) :mod (o / other))) :arg1 (i2 / involve-01 :arg1 (a4 / and) :arg2 (a5 / attack-01 :mod (c / cyber))) :mod (a6 / almost)))
(a / and :op1 (f / find-01 :arg0 (i / i) :arg1 (c / confirmation :poss (c2 / claim-01 :mod (t / this)))) :op2 (f2 / find-02 :arg0 (i2 / i) :arg1 (a2 / and :op1 (a3 / abuse-01 :arg0 (c3 / company) :arg1 (t2 / thing :arg2-of (p / position-01 :arg1 (t3 / thing :arg1-of (c4 / claim-01) :mod (t4 / this))))) :op2 (f3 / find-01 :arg0 (c5 / company) :arg1 (a4 / and :op1 (a5 / abuse-02 :arg0 (c6 / company) :arg1 (t5 / thing :arg2-of (p2 / position-01 :arg1 (c7 / company)))) :op2 (f4 / force-01 :arg0 (c8 / company) :arg1 (c9 / company) :arg2 (i3 / install-01 :arg0 (c10 / company) :arg1 (a6 / application :mod (o / other)) :manner (t6 / together) :prep-with (s / store :name (n / name :op1 (g / google))) :manner (t7 / together))))))))
(a / and :op1 (c / continue-01 :arg0 (p / person :arg1-of (e / employ-01 :arg0 (o / organization))) :arg1 (m / monitor-01 :arg0 (p2 / person) :arg1 (s / situation) :location (p3 / point :quant 3 :location (b / border-01 :arg1 (a2 / and :op1 (p4 / person :arg0-of (h / have-org-role-91 :arg2 (h2 / head-of-state))) :op2 (p5 / person :arg0-of (h3 / have-org-role-91 :arg2 (h4 / head-of-state))) :op3 (p6 / person :arg0-of (h5 / have-org-role-91 :arg2 (h6 / head-of-state))) :op4 (p7 / person :arg0-of (h7 / have-org-role-91 :arg2 (h8 / head-of-state))) :op5 (p8 / person :arg0-of (h9 / have-org-role-91 :arg2 (h10 / head-of-state)))))))))
(a / and :op1 (g / grow-01 :arg1 (s / she) :location (b / blue)) :op2 (t / take-01 :arg0 (s2 / she) :arg1 (s3 / stick :mod (h / hockey))) :op3 (p / play-02 :arg0 (s4 / sisters :mod (o / old :degree (m / more)) :poss (s5 / she)) :arg1 (s6 / sport :mod (t2 / this)) :time (a2 / age-01 :arg1 (s7 / she) :arg2 (t3 / temporal-quantity :quant (N / N-A) :unit (y / year)))) :op4 (j / join-01 :arg0 (s8 / she) :arg1 (t4 / team :mod (n / nation)) :time (a3 / age-01 :arg1 (s9 / she) :arg2 (t5 / temporal-quantity :quant (N2 / N-A) :unit (y2 / year)))) :op4 (b2 / become-01 :arg1 (t6 / team :mod (n2 / nation)) :arg2 (t7 / thing :arg0-of (p2 / play-12 :arg2 (y3 / youngest)) :poss (s10 / she)) :time (h2 / history)))
(c / contrast-01 :arg1 (a / approach-02 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (c2 / country :name (n / name :op1 "N-A")))) :arg1 (g / game) :manner (w / win-01 :polarity - :arg0 (p2 / person) :arg1-of (s / single-02))) :arg2 (s2 / show-01 :arg0 (t / team) :arg1 (a2 / and :op1 (t2 / tight :arg1 (p3 / person) :arg0-of (s3 / surprise-01)) :op2 (k / keep-01 :arg0 (p4 / person) :arg1 (p5 / product-of :op1 (1 / 1-0) :op2 (12 / 1-0)) :time (u / until :op1 (e / end-01 :arg1 (p6 / period :ord (o / ordinal-entity :value 3))) :time (t3 / take-04 :arg0 (p7 / person) :arg1 (i / initiative)))))))
(a / and :op1 (s / seem-01 :arg1 (p / possible-01 :polarity - :arg1 (a2 / avoid-01 :arg1 (e / event :location (j / janeiro :mod (d / de)))))) :op2 (p2 / possible-01 :polarity - :arg1 (a3 / avoid-01 :arg1 (a4 / and :op1 (c / compete-02) :op2 (t / thing :arg1-of (a5 / aspire-01)) :domain (t2 / this)))))
(a / and :op1 (g / grow-01 :arg1 (t / tension :location (a2 / along :op1 (b / border :prep-with (b2 / border-01 :arg2 (l / location :name (n / name :op1 "eritrea"))))))) :op2 (c / claim-01 :arg0 (b3 / border :mod (c2 / controversy)) :arg1 (l2 / live-01 :arg0 (b4 / border :mod (t2 / this)))) :time (t3 / time :arg1-of (s / same-01)))
FAILED_TO_PARSE#Couldn't convert to full AMR graph.
(p / phone-number-entity :value (N / N-A) :time (o / once))
(c / coffee :mod (d / drink) :mod (a / again :mod (n / now)) :concession (o / order-02 :arg0 (s / she) :arg1 (t / tea :mod (b / blended)) :arg1-of (i / instead-of-91 :arg2 (i2 / ice-tea :arg1-of (r / regular-02) :mod (a2 / another)))))
(t / tell-01 :arg0 (p / person :name (n / name :op1 "rodriguez")) :arg1 (w / want-01 :arg0 (h / he) :arg1 (e / experiment-01 :arg0 (h2 / he) :arg1 (d / dishes :mod (n2 / new)) :location (m / menu))) :arg2 (h3 / he))
(a / add-01 :arg0 (p / person :arg0-of (h / have-rel-role-91 :arg1 (p2 / person) :arg2 (h2 / husband))) :arg1 (m / message-01 :arg0 (p3 / person) :arg1 (t / thing :manner-of (e / eat-01)) :mod (a2 / also)))
(m / make-18 :arg1 (c / calculation :quant (a / all)))
(s / say-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (p2 / political-party :name (n / name :op1 "N-A")))) :arg1 (r / return-01 :arg1 (i / i) :arg4 (t / turkey) :condition (c / confirm-01 :arg1 (c2 / charge-05 :quant (s2 / some) :arg1-of (i2 / include-91 :arg2 (c3 / charge-05))))) :mod (a / also))
(p / participate-01 :arg0 (p2 / person :arg0-of (s / study-01) :mod (h / hundred) :quant (s2 / several)) :arg1 (d / demonstrate-01) :purpose (e / express-01 :arg0 (p3 / person) :arg1 (c / concern-01 :arg0 (p4 / plan-01))))
(c / contrast-01 :arg1 (p / policy :mod (i / ideal) :domain (t / this)) :arg2 (p2 / policy :mod (i2 / ideal) :domain (t2 / this)) :arg1-of (c2 / cause-01 :arg0 (a / and :op1 (b / background :mod (c3 / corrupt-01 :arg1 (r / rampant))) :op2 (l / lack-01 :arg1 (c4 / compete-02 :arg0 (b2 / background) :arg1 (i3 / industry :mod (d / defense) :part-of (i4 / instrument)) :arg1-of (n / normal-02))))))
(a / admit-01 :arg0 (i / i) :arg1 (f / fall-01 :arg1 (i2 / intentionally) :arg4 (t / track) :time (a2 / after :op1 (s / start-01 :arg1 (u / unsuccessful)))) :time (a3 / after :op1 (t2 / triumph :location (r / relative-position :op1 (v / value-interval :op1 2012 :op2 (h / hoy))))))
(d / discuss-01 :arg0 (h / he) :arg1 (d2 / discuss-01 :arg0 (h2 / he) :time (y / yesterday)) :time (d3 / demand-01 :arg0 (p / person :arg0-of (h3 / have-org-role-91 :arg2 (o / official))) :arg1 (m / measure-01 :arg0 (p2 / person) :arg1 (w / weight :poss (p3 / person)))))
(i / include-01 :arg1 (a / and :op1 (p / person :arg0-of (c / campbell)) :op2 (p2 / person :arg0-of (e / evangelista)) :op3 (p3 / person :arg0-of (k / kate)) :op4 (p4 / person :arg0-of (k2 / kate))) :arg2 (w / woman :time (p5 / previous)))
(c / create-01 :arg0 (w / we) :arg1 (a / and :op1 (j / job :quant 10000 :mod (n / new)) :op2 (j2 / job :quant 40000 :mod (n2 / new)) :op3 (j3 / job :quant 40000 :mod (n3 / new))) :arg0-of (e / end-01 :arg1 (e2 / end-01 :arg1 (e3 / employ-01 :polarity -) :location (a2 / around :op1 (a3 / airport)))) :mod (o / only))
(r / recommend-01 :arg1 (c / call-01 :arg0 (s / someone :arg0-of (h / have-03 :arg1 (i / information :topic (i2 / incident :arg1-of (n / near-02 :arg2 (n2 / near-02 :arg2 (w / walrus))))))) :arg1 (p / police) :arg2 (o / or :op1 (p2 / person :quant 021) :op2 (p3 / person :quant 021))))
(o / obligate-01 :arg2 (r / right-05 :arg1 (h / he) :arg2 (v / vote-01 :arg0 (h2 / he)) :time (d / decide-01 :arg0 (h3 / he) :arg1 (d2 / decide-01 :arg0 (h4 / he) :arg1 (a / affect-01 :arg0 (w / work-01 :arg1 (t / team)) :arg1 (w2 / work-01 :arg0 (t2 / team))))) :mod (a2 / also)))
(e / exhaustible :polarity - :arg1 (r / resource :arg1-of (k / key-02) :mod (n / namibia) :quant (a / all)))
(a / and :op1 (b / boyadzhiev :arg0 (p / person :arg0-of (h / head-01 :arg1 (e / excavation :location (y / yunatsite :name (n / name :op1 (t / telle)))))) :arg1 (f / find-01 :arg0 (p2 / person) :arg1 (b2 / bc :location 4600))) :op2 (s / state-01 :arg0 (p3 / person) :arg1 (o / over :op1 (g / gold :mod (v / varna) :duration (a2 / at-least :op1 (t2 / temporal-quantity :quant (N / N-A) :unit (y2 / year)))))))
(a / and :op1 (b / brother :arg0 (a2 / and :op1 (p / person :arg0-of (h / have-rel-role-91 :arg1 (v / victim) :arg2 (b2 / brother))) :op2 (p2 / person :arg0-of (h2 / have-rel-role-91 :arg1 (v2 / victim) :arg2 (g / galicia))) :op3 (p3 / person :arg0-of (h3 / have-rel-role-91 :arg1 (v3 / victim) :arg2 (g2 / galicia))) :op4 (c / channel :name (n / name :op1 (l / louis))) :op5 (c2 / channel :name (n2 / name :op1 (l2 / louis) :op2 (r / radio)))) :arg1 (w / work-01 :arg0 (p4 / person) :arg1-of (d / dream-01 :arg0 (p5 / person))) :time (p6 / past)) :op2 (o / obtain-01 :arg0 (p7 / person) :arg1 (w2 / work-01 :arg0 (p8 / person) :arg1-of (d2 / dream-01 :arg0 (p9 / person))) :time (b3 / before :op1 (n3 / now) :quant (t / temporal-quantity :quant (N / N-A) :unit (m / month)))) :manner (f / frank))
(a / and :op1 (t / thing :arg1-of (t2 / think-01 :arg0 (w / we))) :op2 (p / person :arg0-of (h / have-rel-role-91 :arg1 (w2 / we) :arg2 (f / friend))) :op3 (p2 / person :arg0-of (h2 / have-rel-role-91 :arg1 (w3 / we) :arg2 (f2 / friend))) :op4 (p3 / person :arg0-of (h3 / have-rel-role-91 :arg1 (w4 / we) :arg2 (f3 / friend))) :op5 (p4 / person :arg0-of (h4 / have-rel-role-91 :arg1 (w5 / we) :arg2 (f4 / friend))))
(s / say-01 :arg0 (p / person :name (n / name :op1 "N-A")) :arg1 (p2 / possible-01 :polarity - :arg1 (i / imagine-01 :arg0 (s2 / someone :arg0-of (d / desire-01 :arg1 (c / cause-01 :arg0 (s3 / someone) :arg1 (p3 / pain-01 :arg1 (p4 / person :mod (j / junior) :arg0-of (h / have-rel-role-91 :arg1 (s4 / someone) :arg2 (b / brother))))))) :arg1 (s5 / someone))))
(s / state-01 :arg0 (t / they :location (b / bank :mod (c / central) :part-of (c2 / country))) :arg1 (m / maximum :op1 (t2 / transfer-01 :arg0 (a / agency :mod (n / news) :mod (i / international) :mod (i2 / international)) :arg1 (s2 / sum))))
(c / communicated :arg0 (i / it) :arg1 (a / and :op1 (p / product :arg1-of (g / gross-03) :mod (d / domestic) :quant (b / between :op1 2015 :op2 132.7)) :op2 (p2 / product :arg1-of (g2 / gross-03) :mod (d2 / domestic)) :op3 (- / -93) :op4 (-2 / -93)) :time (p3 / previous) :time (e / end-01 :arg1 (d3 / debt :quant 2015 :mod (g3 / government-organization :arg0-of (g4 / govern-01)))))
(c / contrast-01 :arg2 (t / test-01 :arg0 (e / email-01) :arg1 (o / order :quant (p / percentage-entity :value (N / N-A)))))
(r / require-01 :arg0 (o / observance :arg1 (w / water :mod (m / mineral))) :arg1 (r2 / recommend-01 :arg1 (d / drink-01 :arg1 (w2 / water)) :time (t / time :arg1-of (s / specific-02)) :arg1-of (c / cause-01 :arg0 (a / and :op1 (t2 / temperature :arg1-of (n / need-01)) :op2 (t3 / temperature :arg1-of (s2 / specific-02))))))
(b / be-temporally-at-91 :arg1 (i / index :mod (t / this)) :arg2 (s / since :op1 (b2 / begin-01 :arg1 (i2 / index :mod 2015))))
(s / say-01 :arg0 (d / data :mod (d2 / data) :time (l / late :degree (m / most))) :arg1 (c / compare-01 :arg1 (e / economy :poss (c2 / country :name (n / name :op1 "N-A"))) :arg2 (p / percentage-entity :value (N / N-A)) :direction (d3 / down)))
(r / remain-01 :arg1 (r2 / recession-02 :location (e / economy :poss (c / country :name (n / name :op1 "N-A")))) :time (p / past))
(d / differ-02 :arg1 (h / history :poss (c / change-01 :arg1 (c2 / citizenship))) :time (c3 / case :mod (e / each)))
(s / sport :domain (g / gymnast :quant 1 :mod (a / additional)) :mod (t / time :mod (t2 / this)) :mod (t3 / time :mod (t4 / this)) :mod (t5 / time :mod (t6 / this)))
(a / acknowledge-01 :arg0 (p / person :arg0-of (p2 / play-01 :arg1 (p3 / planet)) :mod (g / good :degree (m / most))) :arg1 (b / birth-01 :arg1 (p4 / person :arg0-of (h / have-rel-role-91 :arg2 (s / son)))) :manner (l / literal) :time (y / year :mod (l2 / literal)))
(g / gambit :mod (t / turkish))
(a / and :op1 (f / fall-01 :arg1 (t / thing :arg1-of (s / suspect-01) :quant (a2 / all)) :arg2 (p / person :quant (a3 / about :op1 8000))) :op2 (p2 / prove-01 :arg0 (p3 / person :arg0-of (h / have-org-role-91 :arg2 (s2 / servicemen))) :arg1 (a4 / and :op1 (p4 / person :arg0-of (t2 / teach-01)) :op2 (s3 / scientist))))
(c / change-01 :arg1 (s / situation) :time (t / time :mod (s2 / small :degree (e / extreme))))
(m / multi-sentence :snt1 (a / and :op1 (o / other :domain (o2 / other)) :op2 (s / small :degree (m2 / more) :domain (c / care-03 :arg0 (i / individual :arg0-of (c2 / care-03 :arg1 (b / bank))) :arg1 (i2 / individual :arg1-of (p / private-03) :arg0-of (o3 / obtain-01 :arg1 (b2 / bank) :degree (m3 / more) :compared-to (i3 / influence-01 :arg0 (b3 / bank))))))) :snt2 (a2 / and :op1 (c3 / coutts) :op2 (a3 / adam) :op3 (c4 / company) :op4 (c5 / company) :op5 (b4 / bank :mod (m4 / military)) :time (d / date-entity :decade (N / N-A))))
(m / multi-sentence :snt1 (a / and :op2 (p / possible-01 :mode (i / interrogative) :arg1 (f / finish-01 :polarity - :arg0 (h / he) :arg1 (p2 / period :mod (s / some)) :time (y / yet)))) :snt2 (s2 / say-01 :arg0 (i2 / it) :arg1 (w / want-01 :arg0 (h2 / he) :arg1 (c / continue-01 :arg0 (h3 / he) :arg1 (p3 / participate-01 :arg0 (h4 / he) :arg1 (c2 / competition)) :mod (a2 / at-least))) :time (p4 / previous)))
(c / contrast-01 :arg2 (a / appear-02 :arg1 (a2 / appear-02 :arg1 (s / succeed-01 :arg0 (a3 / and :op1 (a4 / application :arg0-of (u / unite-01 :arg1 (a5 / and :op1 (r / reality :mod (p / physical)) :op2 (r2 / reality :mod (v / virtual)) :prep-with (a6 / activity-06 :mod (p2 / physical) :location (w / world :mod (r3 / real)))))) :op2 (h / help-01 :arg1 (a7 / activity-06 :arg0 (p3 / person :quant (m / many)) :arg2 (a8 / activity-06 :arg0 (p4 / person)))) :manner (g / grow-01 :arg1 (a9 / and) :manner (h2 / health) :manner (h3 / health)))))))
(m / multi-sentence :snt1 (p / prevailing :arg1 (t / temporal-quantity :quant (N / N-A) :unit (y / year)) :arg2 (s / sport) :arg1-of (c / cause-01 :arg0 (f / form :poss (s2 / sport))) :time (b / before :op1 (n / now) :duration (t2 / temporal-quantity :quant (N2 / N-A) :unit (y2 / year)))) :snt2 (a / and :op1 (w / win-01 :arg0 (w2 / win-01 :arg1 (g / gold :quant 15 :arg1-of (i / include-91 :arg2 (g2 / gold :mod (s3 / stunning :mod (s4 / such)))))) :arg2 (p2 / program :name (n2 / name :op1 (d / diligently)) :mod (s5 / stunning :mod (s6 / such)))) :op2 (n3 / named :arg0 (p3 / person :arg1-of (s7 / see-01 :arg0 (i2 / i) :frequency (s8 / sometimes))))))
(d / duty :topic (a / act-02 :mod (f / flood)) :location (s / south :part-of (e / expect-01 :arg1 (a2 / act-02 :mod (f2 / flood)))) :time (s2 / since :op1 (c / continue-01 :arg1 (r / rain-01) :location (r2 / region :arg1-of (m / mobile-02)))))
(i / indicate-01 :arg0 (k / khansford :arg1 (w / water :arg1-of (b / be-located-at-91 :arg2 (h / house :poss (w2 / water) :quant (m / more-than :op1 400)) :mod (u / usual)))) :arg1 (r / rise-01 :arg1 (w3 / water) :time (a / after :op1 (n / now) :quant (u2 / up-to :op1 (t / temporal-quantity :quant (N / N-A) :unit (f / foot))))))
(c / contrast-01 :arg1 (a / and :op1 (s / speak-01 :arg0 (a2 / and :op1 (p / person :arg0-of (h / have-rel-role-91 :arg2 (g / grandmother))) :op2 (p2 / person :arg0-of (h2 / have-rel-role-91 :arg2 (g2 / grandfather))))) :op2 (o / obtain-01 :arg0 (p3 / person) :arg1 (w / wound-01 :arg1 (p4 / person) :quant (n / numerous)))) :arg2 (b / be-located-at-91 :arg1 (p5 / person) :arg2 (c2 / consciousness) :time (t / transport-01 :arg0 (p6 / person) :arg1 (i / it) :arg4 (h3 / hospital))))
(r / report-01 :arg0 (p / person :arg0-of (i / inspect-01)) :arg1 (c / cbs :arg0 (p2 / person :quant (s / several) :arg1-of (a / arm-01)) :mod (a2 / apparent)) :arg2 (p3 / person :arg0-of (i2 / inspect-01)))
(c / cause-01 :arg0 (a / amr-unknown) :arg1 (n / need-01 :arg1 (a2 / and :op1 (s / simon) :op2 (g / gabbi) :op3 (l / laurie))))
(t / trained :arg0 (p / person :name (n / name :op1 "laurie" :op2 "hernandez") :arg0-of (h / have-org-role-91 :arg1 (b / baylzs :poss (p2 / person)) :arg2 (t2 / trainer))) :arg1 (s / sportswomen :poss (p3 / person)) :arg2 (m / moment :mod (t3 / that)) :time (m2 / moment :mod (t4 / that)) :arg1-of (c / cause-01 :arg0 (s2 / start-01 :arg0 (p4 / person) :arg1 (g / gymnastics))))
(e / examine-01 :arg1 (v / version) :purpose (r / require-01 :arg1 (v2 / vote-01 :arg1 (c / card :mod (i / identity) :time (p / present)) :time (b / before :op1 (v3 / vote-01)))))
FAILED_TO_PARSE#Couldn't convert to full AMR graph.
(m / multi-sentence :snt1 (a / acknowledge-01 :arg0 (i / it) :arg1 (g / guilty-01 :arg1 (i2 / it)) :arg1-of (d / doubt-01 :time (a2 / absence))) :snt2 (b / be-located-at-91 :mode (i3 / interrogative) :arg1 (s / standard :mod (c / criminal-03)) :arg2 (t / thing :arg0-of (r / reason-01))))
(m / multi-sentence :snt1 (a / and :op1 (s / selection :domain (t / this)) :op2 (s2 / selection :arg1 (w / word) :arg2 (w2 / we)) :domain (t2 / this)) :snt2 (p / pity :domain (p2 / proizoshlo :mod (t3 / this))))
(m / multi-sentence :snt1 (w / want-01 :arg0 (i / i) :arg1 (u / use-01 :arg0 (i2 / i) :arg1 (m2 / moment) :purpose (a / apologize-01 :arg0 (i3 / i) :arg2 (c / comment-01 :arg0 (i4 / i) :arg3 (c2 / commentary))))) :snt2 (s / say-01 :arg0 (h / he) :arg1 (t / thing :arg2-of (c3 / characteristic-02 :arg1 (g / game :mod (o / olympic)))) :medium (i5 / infringe-01 :arg1 (g2 / game :mod (o2 / olympic)))))
(m / multi-sentence :snt1 (s / say-01 :arg0 (p / person :arg0-of (h / have-rel-role-91 :arg1 (p2 / person :quant 2 :arg0-of (h2 / have-rel-role-91 :arg1 (p3 / person :name (n / name :op1 "jenny" :op2 "devidson")) :arg2 (c / child))) :arg2 (m2 / mother))) :arg1 (p4 / person :arg0-of (h3 / have-rel-role-91 :arg1 (p5 / person :quant 2 :arg0-of (h4 / have-rel-role-91 :arg1 (p6 / person :quant 2 :arg0-of (h5 / have-rel-role-91 :arg1 (p7 / person :quant 2 :arg0-of (h6 / have-rel-role-91 :arg1 (p8 / person) :arg2 (c2 / child))) :arg2 (c3 / child))) :arg2 (m3 / mother))) :time (t / time :mod (t2 / this)))) :time (t3 / time :mod (t4 / this)) :location (s2 / store)) :snt2 (a / and :op2 (l / leave-11 :mode (i / interrogative) :arg0 (y / you) :arg1 (s3 / store))))
(i / infer-01 :arg1 (o / obligate-01 :arg2 (b / be-located-at-91 :arg1 (h / hand) :arg2 (f / framework :poss (p / person :quant 60)) :time (r / recent))))
(n / nothing :mod (n2 / nothing :compared-to (t / this)))
(m / multi-sentence :snt1 (s / say-01 :arg0 (c / communicate-01 :mod (r / regulator)) :arg1 (a / akb :mode (i / interrogative) :mod (a2 / ao))) :snt2 (g / gazstroybank :mode (i2 / interrogative) :arg1-of (c2 / connect-01 :arg2 (a3 / arrange-01 :arg1 (r2 / resource :mod (c3 / cash)) :arg1-of (c4 / connect-01 :arg2 (a4 / asset :mod (c5 / cash)))))))
(m / multi-sentence :snt1 (n / network :mod (s / store :name (n2 / name :op1 (s2 / steys)))) :snt2 (b / book :mod (n3 / new) :arg1-of (m2 / mean-01 :arg2 (s3 / sell-01 :arg1 (b2 / book :mod (n4 / news :mod (u / urban)))))) :li 50)
FAILED_TO_PARSE#Couldn't convert to full AMR graph.
(p / probable :domain (r / request-01 :arg0 (i / i) :arg1 (s / stop-01 :arg0 (c / camera) :arg1 (s2 / scene :arg1-of (f / follow-01))) :arg1-of (c2 / cause-01 :arg0 (a / and :op1 (s3 / situated :arg1 (i2 / i) :arg2 (p2 / person :location (s4 / some :arg1-of (i3 / include-91 :arg2 (s5 / store :mod (t / this)))) :manner (c3 / close))) :op2 (a2 / attempt-01 :arg0 (i4 / i) :arg1 (e / estimate-01 :arg0 (i5 / i) :arg1 (a3 / and :op1 (a4 / age :poss (t2 / they)) :op2 (a5 / attitude :mod (e2 / emotional))) :arg2 (a6 / aid-01 :arg2 (o / observation))))))))
(p / pairs :arg1 (a / and :op1 (p2 / person :arg0-of (t / tour-01)) :op2 (p3 / person :arg0-of (t2 / tour-01)) :op3 (p4 / person :arg0-of (t3 / tour-01)) :op4 (p5 / person :arg0-of (t4 / tour-01)) :op5 (p6 / person :arg0-of (t5 / tour-01))))
(c / contrast-01 :arg1 (g / good :domain (i / it)) :arg2 (s / spend-01 :polarity - :arg0 (i2 / it) :arg1 (m / money)))
(s / say-01 :arg0 (h / he) :arg1 (c / convey-01 :arg0 (s2 / spaces) :arg1 (a / and :op1 (r / refugee) :op2 (p / person :arg0-of (v / volunteer-01))) :manner (b / blunt-02)))
(m / multi-sentence :snt1 (a / and :op1 (a2 / add-01 :arg0 (i / i) :arg1 (r / rate-entity-91 :arg1 1 :arg2 (m2 / more-than :op1 (t / temporal-quantity :quant (N / N-A) :unit (y / year))))) :op2 (b / be-located-at-91 :arg1 (i2 / i) :arg2 (u / under :op1 (t2 / temporal-quantity :quant (N2 / N-A) :unit (m3 / minute))))) :snt2 (h / half :mode (i3 / interrogative)))
(s / strong-02 :arg1 (w / we) :time (p / phase))
FAILED_TO_PARSE#Couldn't convert to full AMR graph.
(r / report)
(e / explode-01 :time (b / birthday :poss (q / queen :poss (p / person :arg0-of (h / have-org-role-91 :arg1 (c / country :name (n / name :op1 "N-A")) :arg2 (q2 / queen))))))
(e / equal-01 :polarity - :arg1 (p / presence :location (c / capital :arg0-of (h / have-org-role-91 :arg2 (c2 / capital))) :ord (o / ordinal-entity :value 1)) :arg2 (p2 / product-of :op1 (l / less-than :op1 25) :op2 (p3 / percentage-entity :value (N / N-A))))
(c / cause-01 :arg0 (p / possible-01 :arg1 (a / and :op1 (c2 / call-01 :arg0 (p2 / person :arg0-of (l / lead-02) :quant (s / several)) :arg1 (p3 / person :arg0-of (l2 / lead-02)) :arg2 (a2 / asset :poss (p4 / person))) :op2 (c3 / call-01 :arg0 (p5 / person) :arg1 (p6 / person :arg0-of (h / have-org-role-91 :arg2 (p7 / personnel))) :arg2 (f / fund-01 :arg1 (s2 / sphere :mod (i / influence-01))))) :arg1 (d / designations :arg0 (p8 / person :arg0-of (h2 / have-org-role-91 :arg2 (p9 / personnel))) :arg1 (f2 / fund-01 :arg0 (p10 / person) :arg1 (g / group)))))
(m / multi-sentence :snt1 (w / work-01 :mode (i / interrogative) :arg0 (y / you)) :snt2 (a / and :op1 (p / pite :mode (i2 / interrogative) :arg0 (a2 / and :op1 (l / lowry :name (n / name :op1 (t / tandem))) :op2 (d / dragon :name (n2 / name :op1 (t2 / tandem)))) :arg1 (p2 / project :mod (a3 / ambitious) :mod (a4 / ambitious))) :op2 (e / enter-01 :arg0 (a5 / and :op1 (l2 / lowry :name (n3 / name :op1 (t3 / tandem))) :op2 (s / scenario :name (n4 / name :op1 (l3 / lowry)))) :arg1 (p3 / project :mod (n5 / new) :mod (a6 / ambitious) :topic (b / boy :arg1 (b2 / barry :mod (j / james)))))))
(l / leave-11 :arg0 (i / i) :arg1-of (s / see-01 :arg0 (e / eye :part-of (h / he))) :ord (o / ordinal-entity :value 1))
(i / include-91 :polarity - :arg1 (p / person :quant 10 :arg0-of (t / tour-01) :mod (f / foreign)) :arg2 (p2 / person :arg0-of (t2 / tour-01) :mod (f2 / foreign)))
(c / confirm-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (c2 / company :name (n / name :op1 "N-A") :quant 3) :arg2 (m / member))) :arg1 (d / discuss-01 :arg1 (p2 / project :mod (t / this))))
(s / state-01 :arg0 (t / they) :arg1 (r / remove-01 :arg0 (t2 / they) :arg1 (f / function-01 :mod (t3 / this))) :arg1-of (c / cause-01 :arg0 (a / and :op1 (c2 / communicate-01 :arg1-of (e / extend-01) :location (a2 / and :op1 (r2 / reportings :location (a3 / and :op1 (v / verge) :op2 (m / motherboard))) :op2 (i / indignation :location (a4 / and :op1 (v2 / verge) :op2 (m2 / motherboard))))) :op2 (m3 / motherboard :arg1 (t4 / track)))))
(a / add-01 :arg0 (i / i) :arg1 (g / goal :mod (f / final) :time (m / middle :op1 (p / period :ord (o / ordinal-entity :value 4)))))
(m / multi-sentence :snt1 (e / establish-01 :mode (i / interrogative) :arg1 (p / person :mod (o / old))) :snt2 (w / willow :mode (i2 / interrogative)))
(p / possible-01 :arg1 (s / solve-01 :arg1 (t / thing :arg1-of (q / question-01) :ord (o / ordinal-entity :value 2) :topic (p2 / pension)) :time (a / after :op1 (n / now) :quant (t2 / temporal-quantity :quant (N / N-A) :unit (w / week)))))
(s / say-01 :arg0 (p / person :arg0-of (c / criticize-01) :arg2-of (i / include-01 :arg1 (c2 / candidate :source (a / and :op1 (p2 / person :arg0-of (h / have-org-role-91 :arg1 (p3 / political-party :name (n / name :op1 "Republican")) :arg2 (p4 / president))) :op2 (p5 / person :arg0-of (h2 / have-org-role-91 :arg1 (p6 / political-party) :arg3 (l / lead-02 :arg0 (p7 / person)))) :op3 (p8 / person :arg0-of (h3 / have-org-role-91 :arg1 (p9 / political-party) :arg3 (l2 / lead-02 :arg0 (p10 / person)))) :op4 (p11 / person :arg0-of (h4 / have-org-role-91 :arg1 (p12 / political-party) :arg3 (l3 / lead-02 :arg0 (p13 / person)))) :op5 (p14 / person :arg0-of (h5 / have-org-role-91 :arg1 (p15 / political-party) :arg3 (l4 / lead-02 :arg0 (p16 / person)))))))) :arg1 (r / raise-01 :arg0 (f / fail-01 :arg1 (p17 / person) :arg2 (s2 / state :poss (p18 / person))) :arg1 (a2 / and :op1 (o / operation :mod (b / business) :poss (p19 / person)) :op2 (o2 / operation :mod (b2 / business) :poss (p20 / person))) :arg2-of (i2 / include-01 :arg1 (a3 / and :op1 (c3 / country) :op2 (c4 / country)))))
(c / consist-01 :arg1 (t / thing :ord (o / ordinal-entity :value 1) :arg1-of (c2 / consist-01 :arg2 (t2 / thing :arg2-of (t3 / title-01)))) :arg2 (t4 / thing :quant 2 :arg1-of (c3 / consist-01 :arg2 (t5 / thing :arg2-of (t6 / title-01)))) :time (b / before :op1 (d / destroy-01 :arg0 (a / and :op1 (e / elephant :arg1-of (d2 / destroy-01)) :op2 (p / proceeds :arg1-of (s / supply-01 :arg2 (h / horn)))))))
(s / say-01 :arg0 (t / thing :quant 1 :arg1-of (i / include-91 :arg2 (p / priority :mod (b / basic) :mod (c / cooperate-01 :arg2 (c2 / country :name (n / name :op1 "N-A")))))) :arg1 (e / extend-01 :arg1 (t2 / trade-01) :mod (f / further)) :mod (c3 / certain))
(m / multi-sentence :snt1 (e / exemplify-01 :mode (i / interrogative) :arg0 (d / develop-01)) :snt2 (a / and :op1 (b / begin-01 :mode (i2 / imperative) :arg0 (y / you) :mod (s / still)) :op2 (i3 / introduce-01 :arg1 (i4 / i) :arg2 (b2 / build-01 :arg1 (i5 / it))) :op3 (i6 / introduce-01 :arg1 (i7 / it) :arg2 (b3 / build-01 :arg1 (i8 / it)))))
(m / multi-sentence :snt1 (b / be-located-at-91 :mode (i / interrogative) :arg2 (l / location :name (n / name :op1 "N-A"))) :snt2 (c / cleaning :mode (i2 / interrogative) :arg1-of (c2 / cause-01 :arg0 (s / step-01 :arg2 (m2 / manage-01 :arg1 (p / person :arg0-of (h / have-org-role-91 :arg1 (c3 / country :name (n2 / name :op1 "N-A")) :arg2 (t / troop))))) :arg1-of (c4 / complete-02))))
FAILED_TO_PARSE#Two concepts in a row.
(s / state-01 :arg0 (c / company :mod (c2 / country :name (n / name :op1 "N-A"))) :arg1 (c3 / contrast-01 :arg1 (c4 / conclude-01 :arg0 (c5 / company) :arg1 (c6 / contract-02 :arg0 (c7 / company) :arg1 (c8 / come-01 :arg1 (c9 / company) :arg4 (f / force-04) :time (y / year :mod (t / this))) :arg1-of (o / obligate-01 :arg2 (c10 / come-01 :arg1 (c11 / company) :arg4 (f2 / force-04) :time (y2 / year :mod (t2 / this)))))) :arg2 (o2 / obligate-01 :arg2 (e / explain-01 :arg0 (c12 / company) :arg1 (i / it) :arg0-of (c13 / cause-01 :arg1 (c14 / contract-02 :arg1 (i2 / it)))))))
(m / multi-sentence :snt1 (w / write-01 :arg0 (p / person :name (n / name :op1 "N-A") :arg0-of (r / represent-01 :arg1 (p2 / person :arg0-of (r2 / represent-01 :arg1 (p3 / person :arg0-of (r3 / represent-01 :arg1 (c / country :name (n2 / name :op1 "N-A")))))))) :arg1 (t / that)) :snt2 (a / and :op1 (f / form :mod (f2 / fight-01 :arg0 (a2 / association :arg1-of (b / blokirovshchikov :arg2 (a3 / and :op1 (c2 / code :arg1-of (o / open-09)) :op2 (c3 / code :arg1-of (o2 / open-09)))) :mod (m2 / mutual))) :mod (m3 / mutual)) :op2 (p4 / possible-01 :arg1 (s / solve-01 :arg0 (f3 / facebook) :time (s2 / soon) :time (s3 / soon)))) :medium (b2 / blog-01 :arg0 (h / he)))
(i / importance :domain (h / have-03 :arg0 (l / law :name (n / name :op1 "N-A")) :arg1 (i2 / importance :prep-for (p / process-02 :mod (t / this)))) :arg0-of (c / cause-01 :arg1 (i3 / important :domain (s / support-01 :arg0 (g / government-organization :arg0-of (g2 / govern-01)) :arg1 (f / free-04 :arg1 (s2 / speak-01)) :arg1-of (s3 / strong-02)))))
FAILED_TO_PARSE#Two concepts in a row.
(s / say-01 :arg0 (p / person :arg0-of (r / represent-01 :arg1 (c / country :name (n / name :op1 "Russia")) :arg2 (p2 / permanent) :mod (p3 / permanent))) :arg1 (u / useful-05 :arg1 (m / meet-03 :arg0 (p4 / person :arg0-of (h / have-org-role-91 :arg1 (c2 / council :mod (s2 / security) :mod (c3 / country :name (n2 / name :op1 "Russia"))) :arg2 (p5 / peninsula :name (n3 / name :op1 "Crimea")))) :mod (l / last)) :arg2 (i / interfax)))
(s / say-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (c / country :name (n / name :op1 "N-A")) :arg3 (l / lead-02 :arg0 (p2 / person) :arg1 (c2 / country :name (n2 / name :op1 "N-A"))))) :arg1 (d / defeat-01 :arg1 (p3 / person :quant 4 :arg1-of (i / include-91 :arg2 (p4 / person :quant 1 :arg1-of (i2 / include-91 :arg2 (p5 / person :quant 1 :arg0-of (d2 / daniel)))))) :arg3 (f / final :quant (b / between :op1 4 :op2 16)) :arg4 (f2 / final :quant-of (g / game :name (n3 / name :op1 (o / olympic) :op2 100 :op3 100 :op4 100 :op5 100 :op6 100 :op7 100)))))
(s / say-01 :arg0 (b / bank :mod (c / central) :poss (c2 / country)) :arg1 (p / peak-01 :arg1 (a / amount :mod (t / this)) :mod (h / historic)))
(c / conclude-01 :arg0 (t / team :mod (i / international) :consist-of (c2 / critic)) :arg1 (l / live-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (t2 / team :mod (i2 / international)) :arg3 (a / apprentice-01 :arg0 (p2 / person)))) :arg1-of (c3 / cause-01 :arg0 (p3 / possible-01 :arg1 (l2 / live-01 :arg0 (p4 / person :arg0-of (l3 / live-01 :arg1-of (p5 / possible-01 :polarity -))) :time (a2 / about :op1 (t3 / temporal-quantity :quant (N / N-A) :unit (y / year))) :arg1-of (p6 / possible-01))))))
(r / report-01 :arg0 (p / person :name (n / name :op1 "Vladimir" :op2 "Putin") :arg0-of (h / have-org-role-91 :arg1 (c / country :name (n2 / name :op1 "Russia")) :arg2 (p2 / president))) :arg1 (d / decree :arg0-of (c2 / change-01 :arg1 (c3 / composition :poss (c4 / council :mod (s / security) :poss (c5 / country :name (n3 / name :op1 "Russia") :mod (s2 / security)))))))
(a / apply-02 :arg1 (a2 / and :op1 (p / person :arg0-of (h / have-org-role-91 :arg2 (a3 / agent :mod (c / chemical)))) :op2 (p2 / person :arg0-of (h2 / have-org-role-91 :arg2 (a4 / agent :mod (c2 / chemical)))) :op3 (p3 / person :arg0-of (h3 / have-org-role-91 :arg2 (a5 / agent :mod (c3 / chemical)))) :op4 (s / soap :mod (g / green))) :arg2 (p4 / person :arg0-of (h4 / have-org-role-91 :arg2 (a6 / agent :mod (c4 / chemical)))) :time (e / end-01 :arg1 (s2 / summer)) :mod (o / only))
(c / contrast-01)
(c / contrast-01 :arg2 (p / possible-01 :arg1 (a / assume-02 :arg0 (o / one) :arg1 (a2 / and :op1 (e / expect-01 :arg1 (s / slow-01 :arg0 (p2 / portion :part-of (f / fall-01 :arg1 (e2 / economy :poss (c2 / country :name (n / name :op1 "N-A"))))) :arg1 (p3 / product-of :op1 (p4 / percentage-entity :value (N / N-A)) :op2 (p5 / percentage-entity :value (N2 / N-A)))))) :op2 (s2 / say-01 :arg0 (p6 / person :arg0-of (a3 / analyze-01)) :arg1 (r / rogov :arg0 (p7 / person :arg0-of (a4 / analyze-01)) :arg1 (r2 / rogov :name (n2 / name :op1 (c3 / clubs) :op2 (i / irina)))))) :arg1-of (g / general-02)))
(e / emigrated :arg0 (f / family :arg1-of (h / have-org-role-91 :arg0 (s / she) :arg2 (m / member))) :arg1 (f2 / family :arg1-of (h2 / have-org-role-91 :arg0 (s2 / she) :arg2 (m2 / member))) :arg2 (c / country :name (n / name :op1 "Israel")) :duration (t / temporal-quantity :quant (N / N-A) :unit (y / year) :mod (o / only)) :time (n2 / naste :arg1 (n3 / naste)))
(a / and :op2 (e / example :mod (s / such) :poss (c / country)))
(s / say-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg2 (' / ''))) :arg1 (t / try-01 :arg0 (h2 / he) :arg1 (g / get-01 :arg0 (h3 / he) :arg1 (b / benefit-01 :arg0 (a / and :op1 (p2 / person :arg0-of (h4 / have-org-role-91 :arg2 (h5 / head-of-state))) :op2 (p3 / person :arg0-of (h6 / have-org-role-91 :arg2 ('2 / '')))) :mod (m / maximum)))))
(v / vote-01 :arg0 (a / and :op1 (d / doctor) :op2 (p / person :arg0-of (s / study-01) :mod (j / junior) :location (j2 / july))) :arg1 (a2 / abolition :arg1 (t / transact-01)) :subevent-of (a3 / agree-01 :arg0 (a4 / and) :arg1 (c / contract-02 :arg0 (a5 / and))))
(r / reject-01 :arg0 (p / person :arg1-of (i / include-91 :arg2 (p2 / person :arg0-of (p3 / participate-01 :arg1 (a / agent :mod (s / secret))))) :quant (p4 / percentage-entity :value 58)) :arg1 (s2 / she))
(c / cause-01 :arg0 (r / receive-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg2 (p2 / president :mod (v / vice)))) :arg1 (a / apology :arg1-of (d / demand-01 :arg0 (p3 / person) :source (p4 / person :arg0-of (h2 / have-org-role-91 :arg2 (p5 / president))))) :mod (o / only)) :time (e / end-01))
(k / keep-04 :arg1 (t / this) :arg2 (m / moscow :arg0-of (h / have-03 :arg1 (f / fear-01 :arg1 (c / change-01 :arg1 (r / regime)) :arg1-of (d / deep-02)))) :location (m2 / mind))
(p / possible-01 :arg1 (s / speak-01 :arg0 (p2 / person :arg0-of (h / have-org-role-91 :arg2 (p3 / president))) :arg1 (t / topic) :mod (e / even) :time (a / after :op1 (g / give-01 :arg0 (p4 / person :quant 2 :arg0-of (h2 / have-org-role-91 :arg2 (p5 / president))) :arg1 (c / conference :mod (p6 / press)) :time (a2 / after :op1 (t2 / temporal-quantity :quant (N / N-A) :unit (h3 / hour) :mod (n / near)))))) :arg1-of (p7 / possible-01))
(c / contrast-01 :arg1 (p / prefer-01 :arg0 (h / he) :arg1 (d / difficulty) :time (b / before :op1 (n / now) :quant (m / multiple :op1 (t / temporal-quantity :quant (N / N-A) :unit (y / year)))) :time (r / return-01 :arg1 (h2 / he) :time (a / after :op1 (d2 / disqualification :duration (t2 / temporal-quantity :quant (N2 / N-A) :unit (m2 / month)))))) :arg2 (s / show-01 :arg0 (h3 / he) :arg1 (a2 / and :op1 (c2 / challenge-01 :arg0 (h4 / he) :arg1 (c3 / challenge-01 :arg0 (h5 / he) :arg1 (c4 / challenge-01 :arg0 (h6 / he)))) :op2 (r2 / return-01 :arg1 (h7 / he) :arg4 (f / form)))))
(h / have-org-role-91 :arg0 (h2 / he) :arg1 (a / and :op1 (o / organization :name (n / name :op1 "Security" :op2 "Council") :arg0-of (h3 / have-org-role-91 :arg1 (c / country :name (n2 / name :op1 "N-A")) :arg2 (m / member) :time (f / former))) :op2 (m2 / member :arg2-of (h4 / have-org-role-91 :arg1 (s / service :mod (s2 / security) :mod (s3 / state)))) :op3 (m3 / member :arg2-of (h5 / have-org-role-91 :arg1 (s4 / service :mod (s5 / security :mod (s6 / state)))))) :arg2 (m4 / member))
(o / operation :mod (v / virtuoso) :arg0-of (u / use-01 :arg1 (t / tolerances :mod (p / precise :degree (e / extreme)) :purpose (a / assembly))) :concession (a2 / and :op1 (s / size :poss (l / linkages :arg0 (a3 / and :op1 (b / bridge) :op2 (b2 / bridge)) :mod (m / massive)) :op2 (w / weight :poss (l2 / linkages)))))
(h / have-concession-91 :arg2 (p / possible-01 :polarity - :arg1 (u / underestimated :arg1 (e / exercise :mod (p2 / physical)))))
(a / and :op1 (b / baylz :arg0 (a2 / and :op1 (p / person :mod (c / country :name (n / name :op1 "United" :op2 "States"))) :op2 (p2 / person :mod (l / left)) :op3 (p3 / person :mod (l2 / left))) :arg1 (p4 / petting :mod (s / simone)) :time (a3 / after :op1 (w / win-01 :arg0 (p5 / person) :arg1 (a4 / and :op1 (g / gold) :op2 (s2 / silver)) :mod (r / respective) :time (a5 / after :op1 (w2 / win-01 :arg0 (p6 / person) :arg1 (a6 / and :op1 (g2 / gold) :op2 (s3 / silver)))))) :time (a7 / after :op1 (w3 / win-01 :arg0 (p7 / person) :arg1 (a8 / and :op1 (g3 / gold) :op2 (s4 / silver)) :arg2 (f / final :part-of (i / individual :mod (f2 / female)))))) :op2 (a9 / aug. :arg0 (a10 / and :op1 (c2 / country :name (n2 / name :op1 "Brazil")) :op2 (c3 / country) :op3 (e / et-cetera)) :time (s5 / summer :mod (s6 / summer :quant 2016) :location (o / olympics :mod (s7 / summer)))))
(k / know-01 :arg0 (y / you) :arg1 (g / good :degree (m / more) :domain (e / everything) :beneficiary (y2 / you)))
(s / say-01 :arg0 (a / agency :mod (c / country :name (n / name :op1 "N-A"))) :arg1 (p / possible-01 :arg1 (n2 / nahlynute :arg0 (s2 / snow :quant (b / between :op1 3 :op2 5)) :arg1 (a2 / area))))
(t / tell-01 :arg0 (f / family) :arg1 (e / expect-01 :arg1 (r / recover-02 :arg0 (h / he) :arg1 (s / station))) :arg2 (s2 / station))
(a / and :op1 (a2 / arrest-01 :polarity -) :op2 (s / scans :arg0 (p / police) :arg1 (v / video :arg0-of (s2 / surveil-01)) :arg1-of (r / report-01)))
(p / provide-01 :arg0 (c / combination :mod (t / this)) :arg1 (h / health :mod (g / good)) :arg2 (a / and :op1 (h2 / health :mod (g2 / good)) :op2 (s / succeed-01 :arg1 (h3 / health)) :op3 (s2 / succeed-01 :arg1 (h4 / health)) :op4 (w / work-01)))
(s / say-01 :arg0 (t / thing :arg1-of (r / report-01 :arg0 (g / government-organization :arg0-of (g2 / govern-01))) :arg0-of (d / devastate-01)) :arg1 (l / lead-03 :arg0 (c / culture :mod (p / politics)) :arg2 (c2 / close-01 :arg1 (e / eye)) :arg1-of (r2 / result-01 :arg2 (f / falsification :arg1 (c3 / community :mod (r3 / religious-group :name (n / name :op1 "N-A"))) :arg1-of (s2 / spread-02 :arg1-of (w / wide-02))))))
(s / say-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (c / community :arg1-of (l / local-02)) :arg2 (s2 / secretary) :time (f / former)) :arg0-of (h2 / have-org-role-91 :arg1 (c2 / community :arg1-of (l2 / local-02)) :arg2 (s3 / secretary) :time (f2 / former)) :arg0-of (h3 / have-org-role-91 :arg1 (c3 / community :arg1-of (l3 / local-02)) :arg2 (s4 / secretary) :time (f3 / former)) :arg0-of (h4 / have-org-role-91 :arg1 (c4 / community :arg1-of (l4 / local-02)) :arg2 (s5 / secretary) :time (f4 / former)) :arg0-of (h5 / have-org-role-91 :arg1 (c5 / community :arg1-of (l5 / local-02)) :arg2 (s6 / secretary) :time (f5 / former)) :arg0-of (h6 / have-org-role-91 :arg1 (c6 / community :arg1-of (l6 / local-02)) :arg2 (s7 / secretary) :time (f6 / former)) :arg0-of (h7 / have-org-role-91 :arg1 (c7 / community :arg1-of (l7 / local-02)) :arg2 (s8 / secretary) :time (f7 / former)) :arg0-of (h8 / have-org-role-91 :arg1 (c8 / community :arg1-of (l8 / local-02)) :arg2 (s9 / secretary) :time (f8 / former)) :arg0-of (h9 / have-org-role-91 :arg1 (c9 / community :arg1-of (l9 / local-02)) :arg2 (s10 / secretary) :time (f9 / former)) :arg0-of (h10 / have-org-role-91 :arg1 (c10 / community :arg1-of (l10 / local-02)) :arg2 (s11 / secretary) :time (f10 / former))))
(c / criticize-01 :arg0 (h / he) :arg1 (c2 / check-01 :arg0 (h2 / he) :arg1 (c3 / check :mod (t / ticks) :location (r / relative-position :op1 (c4 / city) :quant (d / distance-quantity :quant (N / N-A) :unit (k / kilometer))))) :mod (a / also))
(f / find-01 :location (r / room :quant (s / several) :location (h / home)) :arg1-of (p / possible-01))
(s / safe-01 :arg1 (f / food :beneficiary (a / astronaut)) :time (t / then))
(g / google :arg1 (o / oshtrafuet :name (n / name :op1 (o2 / oshtrafuet) :op2 (o3 / oshtrafuet))) :mod (o4 / oshtrafuet))
(s / say-01 :arg0 (h / he) :arg1 (t / thing :arg1-of (i / include-91 :arg2 (t2 / thing :arg1-of (g / get-01 :arg0 (i2 / i) :time (e / end-01 :arg1 (1 / 1970s))))) :quant (m / much) :arg1-of (i3 / include-91 :arg2 (t3 / thing :arg1-of (g2 / get-01 :arg0 (i4 / i) :time (o / or :op1 (p / person :quant 11 :domain (i5 / i)) :op2 (p2 / person :quant 12 :domain (i6 / i))))))) :arg1-of (s2 / say-01 :arg0 (h2 / he)) :arg1-of (s3 / say-01 :arg0 (h3 / he)))
(r / recommend-01 :arg1 (d / demolished :arg1 (p / place :mod (t / this)) :arg1-of (c / cause-01 :arg0 (a / and :op1 (e / economy :domain (t2 / they) :arg0-of (p2 / pay-01 :polarity - :arg3 (t3 / tax)) :domain (t4 / they)) :op2 (c2 / cause-01 :arg0 (a2 / and :op1 (f / fire) :op2 (r2 / risk-01 :arg2 (h / health))) :arg1 (p3 / place))))))
(e / estimate-01 :arg0 (a / and :op1 (i / institution :quant 2 :mod (c / charitable)) :op2 (i2 / institution :mod (c2 / charitable)) :op3 (a2 / and :op1 (r / refugee) :op2 (l / l))) :arg1 (a3 / and :op1 (g / grow-03 :arg1 (n / number) :location (a4 / alongside :op1 (p / person :quant (m / more-than :op1 9,000)))) :op2 (p2 / person :quant (m2 / more-than :op1 9,000))) :time (h / history) :time (a5 / after :op1 (i3 / increase-01 :arg1 (a6 / arrivals :mod (n2 / new)) :time (s / summer)) :arg1-of (s2 / sharp-02)))
(h / hold-04 :arg0 (a / and :op1 (l / libraries) :op2 (l2 / library)) :arg1 (m / meet-03 :time (d / day :time-of (a2 / and :op1 (c / cinema :mod (c2 / country :name (n / name :op1 "N-A"))) :op2 (d2 / day :mod (e / even) :mod (e2 / even))))) :time (w / week :mod (t / this)))
(a / and :op1 (w / williams :arg1 (t / thing :arg1-of (t2 / think-01 :arg0 (t3 / they)) :ord (o / ordinal-entity :value 1)) :time (m / moment :mod (n / next))) :op2 (s / spend-02 :arg0 (a2 / amr-unknown) :arg1 (m2 / more :mod (l / little) :compared-to (u / usual))) :op3 (a3 / attempt-01 :arg0 (a4 / amr-unknown) :arg1 (o2 / overcome-01 :arg0 (a5 / amr-unknown) :arg1 (f / feel-01 :arg0 (t4 / they) :arg1 (f2 / feel-01 :arg0 (t5 / they))))) :time (m3 / moment :mod (n2 / next)))
(a / advertise-01 :arg1 (w / we) :manner (h / heavy))
(b / become-01 :arg1 (i / it) :arg2 (k / know-01 :arg1 (b2 / bomb :quant 2 :arg1-of (p / plant-01 :arg2 (g / gas :quant 2)))) :time (s / soon))
(c / contrast-01 :arg1 (b / bathroom :quant (b2 / between :op1 1 :op2 4)) :arg2 (t / thing :quant 4))
(u / use-01 :arg1 (m / mosque :quant (n / number) :location (k / kazan)) :arg2 (c / country :name (n2 / name :op1 "N-A")) :time (p / previous) :time (t / time :arg1-of (s / same-01)))
(c / contrast-01 :arg2 (r / realize-01 :polarity - :arg0 (w / we :quant (a / about :op1 (p / percentage-entity :value (N / N-A)))) :arg1 (l / language :mod (t / tatar))))
(s / share-01 :arg0 (p / pope) :arg1 (c / concept :mod (v / vatican)) :arg2 (s2 / slash :op1 (r / refugee) :op2 (r2 / refugee)))
(a / and :op1 (a2 / accumulate-01 :arg0 (i / i) :arg1 (p / popularity :poss (p2 / play :name (n / name :op1 (' / '') :op2 ('2 / ''))))) :op2 (j / juliet :arg0 (s / shakespeare :mod (w / william)) :arg1 (p3 / popularity)))
(e / except-01 :arg1 (a / and :op1 (p / produce-01 :arg0 (d / database :mod (p2 / person :arg0-of (h / hack-04)) :quant 2014 :arg0-of (h2 / hack-04)) :arg1 (p3 / picture :mod (e2 / entertainment))) :op2 (r / responsible-03 :arg0 (p4 / picture :arg1-of (t / transfer-01 :arg2 (d2 / dprk))))))
(a / argue-01 :arg0 (c / company :mod (c2 / country :name (n / name :op1 "N-A"))) :arg1 (g / give-01 :arg0 (c3 / country) :arg1 (a2 / access-01 :arg1 (t / thing :arg2-of (a3 / access-01 :arg1 (t2 / thing :arg2-of (c4 / compose-01 :arg1 (a4 / and :op1 (a5 / application :mod (p / predustanovku)) :op2 (a6 / application :mod (p2 / predustanovku))) :arg2 (p3 / person :arg0-of (d / develop-02) :mod (o / other)) :mod (p4 / particular)))))) :arg2 (p5 / person :arg0-of (p6 / produce-01 :arg1 (t3 / thing)))))
(o / obligate-01 :arg1 (h / he) :arg2 (a / answer-01 :arg0 (h2 / he) :arg2 (e / extent :mod (f / full) :poss (l / law) :prep-against (c / case-03 :arg1-of (c2 / criminal-03)))) :time (n / now))
(d / damage-01 :arg1 (p / person :quant 4 :arg0-of (r / reside-01 :arg1 (r2 / region :mod (v / volgograd)))) :manner (s / severe) :arg2-of (f / fortunate-01) :arg2-of (f2 / fortunate-01))
(s / say-01 :arg0 (s2 / statistic :mod (n / nation)) :arg1 (r / rate-entity-91 :arg1 (p / percentage-entity :value (N / N-A)) :arg2 (t / temporal-quantity :quant (N2 / N-A) :unit (m / month)) :location (j / july)))
(a / allow-01 :arg1 (a2 / and :op1 (c / change-01 :arg0 (p / person :arg0-of (u / use-01)) :arg1 (r / rate-entity-91 :arg1 (p2 / person :arg0-of (u2 / use-01)) :arg2 (r2 / rate-entity-91 :arg1 (p3 / person :quant (a3 / approximately :op1 150000000) :arg0-of (u3 / use-01)) :arg2 (t / temporal-quantity :quant (N / N-A) :unit (d / day))) :purpose (c2 / change-01 :arg0 (p4 / person) :arg1 (r3 / reality)))) :op2 (p5 / play-01 :arg0 (p6 / person) :arg1 (w / way :instrument-of (a4 / and :op1 (c3 / change-01 :arg0 (p7 / person) :arg1 (r4 / reality)) :op2 (p8 / play-01 :arg0 (p9 / person) :manner (a5 / absurd) :manner (a6 / absurd)))))))
(r / reject-01 :arg1 (c / compare-01 :arg2 (a / anime)) :degree (t / total))
(m / multi-sentence :snt1 (a / and :op1 (r / resign-01 :arg0 (p / person :name (n / name :op1 "N-A") :arg0-of (r2 / resign-01 :arg1 (c / country :name (n2 / name :op1 "N-A")))) :time (a2 / april)) :op2 (r3 / replace-01 :arg1 (p2 / person) :arg2 (g / gene :part-of (c2 / command-02 :mod (c3 / central))))) :snt2 (v / votel :mode (e / expressive)))
(c / contrast-01 :arg1 (r / recommend-01 :arg1 (a / achieve-01 :arg1 (g / goal :quant 5) :manner (g2 / game :quant 5))) :arg2 (s / say-01 :arg0 (i / i) :arg1 (s2 / sure-02 :polarity - :arg1 (h / have-condition-91 :arg1 (s3 / sure-02 :polarity - :arg1 (d / do-02 :mode (i2 / interrogative) :arg0 (i3 / it) :arg1 (s4 / something :arg1-of (r2 / resemble-01 :arg2 (t / this)))) :arg2 (i4 / it))))))
FAILED_TO_PARSE#Number of opening and closing brackets doesn't match.
(c / close-10 :arg1 (s / sport :mod (t / this)) :arg2 (s2 / sport :mod (d / dzenu)) :degree (m / most))
(a / and :op1 (c / competitions :arg0 (w / woman :arg0-of (h / have-org-role-91 :arg1 (w2 / woman))) :arg1 (w3 / woman)) :op2 (t / take-01 :arg0 (f / finale) :arg1 (p / place) :time (d / date-entity :year (N / N-A)) :time (t2 / then)) :op3 (b / broadcast-01 :arg0 (p2 / person :mod (c2 / country :name (n / name :op1 "N-A"))) :duration (t3 / temporal-quantity :quant (N2 / N-A) :unit (h2 / hour)) :mod (a2 / also)))
(k / kill-01 :arg1 (p / person :quant (m / many) :arg0-of (h / have-org-role-91 :arg2 (p2 / protestants))) :concession (a / and :op1 (n / number :mod (s / small :degree (m2 / more) :compared-to (n2 / number :mod (r / recent))) :compared-to (n3 / number :mod (s2 / small :degree (m3 / more) :compared-to (m4 / month :mod (r2 / recent))))) :op2 (p3 / pass-01 :arg1 (p4 / period :mod (t / this)) :arg1-of (q / quick-02 :degree (r3 / relative)))))
(m / multi-sentence :snt1 (d / difficult :domain (p / pass-03 :arg1 (' / '' :mod (r / rope :mod (t / tight)) :mod (t2 / this)))) :snt2 (s / say-01 :arg0 (i / i) :arg1 (d2 / difficult :domain (p2 / pass-03 :arg1 (a / abdi)))))
(m / multi-sentence :snt1 (r / raise-01 :arg0 (h / he) :arg1 (c / criticize-01 :mod (u / universal)) :time (e / end-01 :arg1 (a / after :op1 (r2 / raise-01 :arg0 (h2 / he) :arg1 (c2 / criticize-01 :mod (u2 / universal))))) :mod (v / virtual)) :snt2 (a2 / and :op1 (e2 / explain-01 :arg0 (h3 / he) :arg1 (t / thing :arg1-of (c3 / comment-01 :arg0 (h4 / he))) :time (l / late :degree (m2 / more))) :op2 (s / say-01 :arg0 (h5 / he) :arg1 (j / joking :domain (i / i) :mod (o / of-course)))) :snt3 (j2 / joking :arg1 (i2 / i) :mod (o2 / of-course)))
(b / buffets :arg1 (t / table :mod (c / country :name (n / name :op1 "N-A"))) :time (b2 / before :op1 (d / depression :location (a / area :mod (r / rural)) :mod (e / especially))))
(f / forget :arg1 (t / technique :quant (m / many) :arg1-of (i / include-91 :arg2 (t2 / technique :mod (c / culinary)))) :time (a / as-soon-as :op1 (b / be-located-at-91 :arg1 (c2 / country) :arg2 (f2 / foot :part-of (c3 / country)) :mod (a2 / again))))
(a / and :op1 (c / call-01 :arg1 (m / mousse :mod (p / prunes)) :arg2 (m2 / mousse :mod (p2 / prunes))) :op2 (a2 / add-01 :arg0 (i / i) :arg1 (t / thing :arg2-of (n / name-01 :arg1 (t2 / thing :arg2-of (n2 / name-01 :arg1 (t3 / thing :arg2-of (n3 / name-01 :arg1 (n4 / name :op1 (c2 / catchy))))))))))
(l / lead-01 :arg0 (d / data :mod (s / such)) :arg1 (t / tens :mod (t2 / turkish)) :medium (i / interview-01 :arg1 (j / journalist :arg1-of (l2 / local-02))))
(p / possible-01 :arg1 (s / see-01 :arg0 (p2 / person :arg0-of (p3 / participate-01 :arg1 (p4 / protest-01)) :quant (s2 / some)) :arg1 (w / write-01 :arg0 (p5 / person) :arg1 (w2 / wall :poss (p6 / person :name (n / name :op1 "michael" :op2 "temer") :arg0-of (h / have-org-role-91 :arg2 (p7 / president :mod (i / interim))))))))
(m / meet-03 :arg0 (w / we :quant (a / all)) :time (b / before :op1 (n / now) :duration (t / temporal-quantity :quant (N / N-A) :unit (m2 / month))))
(s / say-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg2 (h2 / head-of-state))) :arg1 (e / enjoy-01 :arg0 (i / i) :time (n / now) :mod (j / just)))
(a / and :op1 (c / call-01 :arg0 (w / we) :arg1 (a2 / and :op1 (p / person :arg0-of (h / have-org-role-91 :arg2 (m / minister :mod (j / justice)))) :op2 (p2 / person :arg0-of (h2 / have-org-role-91 :arg2 (s / senator))) :op3 (p3 / person :arg0-of (h3 / have-org-role-91 :arg2 (s2 / senator)))) :arg2 (c2 / cut-02 :arg1 (f / fund-01) :mod (t / this)) :time (i / immediate)) :op2 (c3 / cause-01 :arg1 (p4 / possible-01 :arg1 (g / get-01 :arg0 (p5 / person) :arg1 (a3 / assist-01 :arg1-of (n / need-01)) :time (f2 / face-01 :arg0 (p6 / person) :arg1 (p7 / problem :arg1-of (l / legal-02)))))))
FAILED_TO_PARSE#Number of opening and closing brackets doesn't match.
(a / and :op1 (c / confirm-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg2 (e / executive)) :arg0-of (h2 / have-org-role-91 :arg2 (e2 / executive))) :arg1 (n / news)) :op2 (n2 / notice-01 :arg0 (p2 / person) :arg1 (s / start-01 :arg0 (c2 / club) :arg1 (l / look-01 :arg0 (c3 / club) :arg1 (c4 / coach :mod (n3 / new)) :time (i / immediate)))))
(a / announce-01 :arg0 (u / unit :arg0-of (s / specialize-01)) :arg1 (d / do-02 :arg0 (u2 / unit :consist-of (p / person :arg0-of (s2 / specialize-01)) :arg0-of (w / work-01 :arg1 (m / machine :mod (s3 / serial)))) :arg1 (t / thing :quant 911 :arg1-of (d2 / design-01 :manner (e / exclusive-02)))) :manner (o / official))
(e / express-01 :arg0 (m / magazine :name (n / name :op1 "N-A")) :arg1 (r / regret-01 :arg0 (f / facebook) :arg1 (a / and :op1 (p / policy :mod (s / such)) :op2 (p2 / promise-01 :arg2 (s2 / solve-01 :arg1 (p3 / problem))))))
(i / identify-01 :arg1 (b / body :arg1-of (f / find-01 :arg0 (b2 / body) :time (m / morning :mod (w / wednesday)))) :arg2 (a / and :op1 (r / reside-01 :arg0 (p / person :arg0-of (r2 / reside-01 :arg1 (p2 / political-party :name (n / name :op1 "N-A"))) :arg0-of (h / have-org-role-91 :arg2 (f2 / francisco))) :arg1 (o / office :poss (p3 / person :arg0-of (h2 / have-org-role-91 :arg1 (g / government-organization :arg0-of (g2 / govern-01 :arg1 (s / state))) :arg2 (o2 / office :mod (m2 / medicine))))) :manner (f3 / frank)) :op2 (r3 / report-01 :arg0 (p4 / person :arg0-of (h3 / have-org-role-91 :arg2 (g3 / galicia :mod (f4 / frankly)))) :arg1 (o3 / office :poss (p5 / person :arg0-of (h4 / have-org-role-91 :arg2 (o4 / office :mod (m3 / medicine))))))) :time (m4 / morning :mod (w2 / wednesday)))
(m / multi-sentence :snt1 (f / find-01 :arg0 (h / he) :arg1 (a / apartment)) :snt2 (a2 / and :op1 (m2 / meet-02 :arg0 (h2 / he) :arg1 (g / girl)) :op2 (m3 / meet-02 :arg0 (h3 / he) :arg1 (g2 / girl)) :op3 (t / tell-01 :arg0 (g3 / galicia :name (n / name :op1 (' / '') :op2 (l / luis))) :arg1 (g4 / girl))))
(s / state-01 :arg0 (p / person :name (n / name :op1 "vitaly" :op2 "churkin") :arg0-of (r / represent-01 :arg1 (r2 / rf :location (c / country :name (n2 / name :op1 "N-A"))) :mod (p2 / permanent))) :arg1 (a / and :op1 (h / helpful-04 :arg0 (m / meet-03 :arg0 (c2 / council :mod (s2 / security) :mod (c3 / country)) :time (p3 / past))) :op2 (r3 / report-01 :arg0 (r4 / report-01 :mod (i / interfax))) :time (p4 / past)))
(s / show-01 :arg0 (r / research-01) :arg1 (r2 / reduce-01 :arg0 (p / person :quant (p2 / percentage-entity :value 98)) :arg1 (a / age :mod (b / biology) :poss (p3 / person)) :time (s2 / stay-01 :arg1 (p4 / person) :location (s3 / spa))))
(h / have-condition-91 :arg1 (i / increase-01 :arg1 (p / percentage-entity :value (N / N-A)) :time (s / since :op1 (b / begin-01 :arg1 (y / year)))) :arg2 (l / look-01 :arg0 (y2 / you) :arg1 (d / dynamics :arg1 (r / rate :mod (e / exchange-01 :arg1-of (l2 / long-03))))))
(l / lose-02 :arg1 (e / elena) :location (b / bout :quant 2012 :name (n / name :op1 (o / olympics))) :location (b2 / bout :poss (s / she) :ord (o2 / ordinal-entity :value 1)))
(m / multi-sentence :snt1 (a / action :mod (j / just :polarity -) :domain (t / this)) :snt2 (f / focus-01 :arg2 (c / combat-01 :arg1 (c2 / corruption))))
(b / believe-01 :arg0 (p / person :arg1-of (e / expert-01)) :arg1 (a / and :op1 (m / mounting :arg1 (s / split-01 :arg1 (r / relation-03 :arg0 (c / country :name (n / name :op1 "N-A")) :arg2 (w / west))) :arg1-of (i / increase-01)) :op2 (l / lead-03 :arg0 (s2 / split-01) :arg2 (a2 / attempt-01 :arg1 (c2 / change-01 :arg1 (p2 / power) :location (c3 / country)) :mod (n2 / new)))))
(a / and :op2 (p / predict-01 :arg0 (t / television :mod (s / state)) :arg1 (a2 / and :op1 (f / fruit :arg1-of (c / cheap-02 :degree (m / more))) :op2 (v / vegetables)) :time (a3 / as-soon-as :op1 (a4 / allow-01 :arg1 (r / return-01 :arg1 (i / import-01 :arg1 (p2 / product :mod (a5 / agriculture))))))))
(h / have-03 :arg0 (p / person :quant 2) :arg1 (d / differ-01 :arg1-of (s / significant-02)) :mod (s2 / still) :concession (d2 / display-01 :arg0 (p2 / public) :arg1 (r / reconciliation)))
(a / and :op1 (i / include-91 :arg1 (t / thing :quant 1 :arg1-of (i2 / include-91 :arg2 (e / era :arg1-of (m / modern-02)))) :arg2 (e2 / era :arg1-of (m2 / modern-02))) :op2 (s / surprise-01 :polarity - :arg0 (r / reach-01 :arg0 (h / he) :arg1 (m3 / mark-01)) :arg1 (r2 / reach-01 :arg0 (f / few :degree (s2 / so)) :arg1 (h2 / he))))
(b / believe-01 :arg1 (p / possible-01 :arg1 (p2 / president :arg0 (p3 / person :arg0-of (h / have-org-role-91 :arg1 (c / country :name (n / name :op1 "N-A")) :arg2 (p4 / president))) :arg1 (p5 / person :arg0-of (h2 / have-org-role-91 :arg1 (c2 / country :name (n2 / name :op1 "N-A")) :arg2 (p6 / president))) :time (a / after :op1 (t / term :ord (o / ordinal-entity :value 2) :mod (t2 / term :ord (o2 / ordinal-entity :value 3)) :prep-for (c3 / constitution :mod (p7 / putin)) :ord (o3 / ordinal-entity :value 3))))) :time (o4 / once))
(r / return-01 :arg1 (s / show-04) :arg4 (s2 / season :ord (o / ordinal-entity :value 12) :poss (s3 / show-04)) :time (s4 / season :ord (o2 / ordinal-entity :value 12)))
(r / represent-01 :arg0 (i / it) :arg1 (a / art :mod (b / building) :arg1-of (m / modern-02 :degree (m2 / most))) :prep-in (p / project :mod (a2 / amazing) :mod (t / this)))
(p / propose-01 :arg0 (t / thing :arg1-of (a / achieve-01 :mod (t2 / this))) :arg1 (s / she) :medium (l / league :arg1-of (s2 / same-01 :arg2 (a2 / athletes :arg1-of (r / rare-02 :degree (m / most)) :example (a3 / and :op1 (p2 / person :arg0-of (r2 / raise-03 :arg1 (s3 / sports :poss (p3 / person)))) :op2 (p4 / person :arg0-of (r3 / raise-03 :arg1 (s4 / sports :poss (p5 / person)))))))))
(a / and :op1 (e / earn-01 :arg0 (p / person :arg0-of (e2 / earn-01 :arg1 (g / gold :ord (o / ordinal-entity :value 1)) :location (t / tuesday))) :arg1 (g2 / gold :ord (o2 / ordinal-entity :value 1) :location (t2 / tuesday))) :op2 (b / become-01 :arg1 (p2 / person) :arg2 (c / chord :mod (f / final) :arg1-of (b2 / beautiful-02) :beneficiary (c2 / coordinator :poss (t3 / team :mod (n / nation))))))
(l / love-01 :arg0 (y / you) :arg1 (a / and :op1 (p / person :arg0-of (h / have-rel-role-91 :arg1 (y2 / you) :arg2 (c / child))) :op2 (p2 / person :arg0-of (h2 / have-rel-role-91 :arg1 (y3 / you) :arg2 (c2 / child)))) :arg0-of (l2 / love-01 :arg1 (y4 / you)))
(s / say-01 :arg0 (p / person :name (n / name :op1 "alec" :op2 "krautmann")) :arg1 (p2 / possible-01 :arg1 (f / flood :arg0 (p3 / person :mod (c / country :name (n2 / name :op1 "N-A"))) :arg1 (h / home :quant (m / many)) :location (a / area :mod (s2 / suburban) :arg1-of (n3 / near-02 :arg2 (b / baton))))))
(s / say-01 :arg0 (a / and :op1 (p / person :arg0-of (h / have-rel-role-91 :arg2 (g / grandmother))) :op2 (p2 / person :arg0-of (h2 / have-rel-role-91 :arg2 (g2 / grandfather)))) :arg1 (c / contrast-01 :arg1 (r / receive-01 :arg0 (a2 / and :op1 (p3 / person :arg0-of (h3 / have-org-role-91 :arg2 (h4 / head-of-state))) :op2 (p4 / person :arg0-of (h5 / have-rel-role-91 :arg2 (g3 / grandfather))) :op3 (p5 / person :arg0-of (h6 / have-rel-role-91 :arg2 (g4 / grandfather))) :op4 (p6 / person :arg0-of (h7 / have-rel-role-91 :arg2 (g5 / grandfather))) :op5 (p7 / person :arg0-of (h8 / have-rel-role-91 :arg2 (g6 / grandfather)))) :arg1 (w / wound-01 :arg1 (p8 / person))) :arg2 (c2 / conscious :polarity - :time-of (t / transport-01 :arg1 (p9 / person) :arg3 (h9 / hospital)))))
(t / thank-01 :arg0 (i / i) :arg1 (y / you) :arg2 (d / demonstrate-01 :arg0 (y2 / you) :arg1 (d2 / demonstrate-01 :arg0 (w / woman) :arg1 (a / and :op1 (w2 / win-01 :arg0 (w3 / woman) :arg1 (g / gold :mod (o / olympic))) :op2 (s / strong :arg1 (g2 / girl :quant (m / many :degree (s2 / so)) :arg1-of (d3 / differ-02))) :op3 (w4 / woman :mod (y3 / young) :arg1-of (s3 / succeed-01)) :op4 (w5 / woman :mod (y4 / young) :arg1-of (s4 / succeed-01)))) :mod (s5 / serious) :mod (t2 / this)) :prep-to (y5 / you))
(t / think-01 :arg0 (p / person :name (n / name :op1 "byron" :op2 "macdonald")) :arg1 (t2 / turned :arg1 (m / microphone :poss (h / he)) :time (b / begin-01 :arg0 (h2 / he) :arg1 (e / express-01 :arg0 (h3 / he) :arg1 (o / opine-01 :arg0 (h4 / he) :arg1 (t3 / thing :arg1-of (o2 / opine-01 :arg0 (h5 / he))) :time (e2 / end-01 :arg1 (s / style :poss (w / woman :mod (f / final)) :mod (b2 / between :op1 (t4 / temporal-quantity :quant (N / N-A) :unit (y / year)) :op2 (t5 / temporal-quantity :quant (N2 / N-A) :unit (y2 / year))))))))))
(a / and :op1 (c / combined :arg0 (a2 / and :op1 (s / system :name (n / name :op1 (i / immune)) :poss (c2 / country)) :op2 (s2 / system :name (n2 / name :op1 (v / vomiting)))) :arg1 (a3 / and :op1 (s3 / system :name (n3 / name :op1 (i2 / immune)) :mod (i3 / immune) :poss (c3 / country)) :op2 (r / reflex :mod (s4 / serious)))) :op2 (l / licking :arg0 (c4 / country) :arg1 (s5 / some :arg1-of (i4 / include-91 :arg2 (p / place :arg1-of (d / dirty-02 :degree (m / most)) :arg1-of (i5 / include-91 :arg2 (p2 / place :arg1-of (d2 / dirty-02 :degree (m2 / most))))))) :location (u / url-entity :value (e / europe))))
(a / and :op1 (c / count-01 :arg0 (a2 / and :op1 (p / person :quant 2 :mod (y / young) :arg0-of (h / have-org-role-91 :arg2 (r / rays))) :op2 (p2 / person :quant 3 :mod (y2 / young) :arg0-of (h2 / have-rel-role-91 :arg1 (m / man) :arg2 (c2 / child))) :op3 (m2 / man :quant 3 :arg0-of (h3 / have-rel-role-91 :arg1 (m3 / man) :arg2 (c3 / child))) :op4 (m4 / man :quant 3 :arg0-of (h4 / have-rel-role-91 :arg1 (m5 / man) :arg2 (c4 / child))) :op5 (m6 / man :quant 3 :arg0-of (h5 / have-rel-role-91 :arg1 (m7 / man) :arg2 (c5 / child))) :op6 (m8 / man :quant 1 :arg0-of (h6 / have-rel-role-91 :arg1 (m9 / man) :arg2 (c6 / child))) :op6 (m10 / man :quant 1) :op6 (w / woman :quant 1) :op6 (w2 / woman :quant 1) :op6 (w3 / woman :quant 1) :op6 (w4 / woman :quant 1) :op6 (w5 / woman :quant 1) :op7 (w6 / woman :quant 1) :op8 (w7 / woman :quant 1) :op8 (w8 / woman :quant 1) :op8 (w9 / woman :quant 1) :op7 (w10 / woman :quant 1))))
(h / have-03 :arg0 (p / person :arg1-of (a / author-01 :arg0 (i / i))) :arg1 (c / collection :poss (p2 / person)) :arg1-of (c2 / cause-01 :arg0 (r / rid-01 :arg0 (p3 / person) :arg1 (c3 / collection :poss (p4 / person)) :arg2 (a2 / around :op1 (o / or :op1 (p5 / person :quant (a3 / around :op1 1998)) :op2 (p6 / person :quant 1999) :mod (u / usual))))))
(m / multi-sentence :snt1 (c / cause-01 :arg0 (n / nothing :polarity - :domain (w / we)) :arg1 (t / thank-01 :arg0 (w2 / we) :arg1 (y / you) :arg2 (h / he) :mod (h2 / huge))) :snt2 (c2 / coach :mod (g / good :degree (m2 / most) :compared-to (w3 / world)) :domain (h3 / he)))
(s / set-02 :arg0 (t / this) :arg1 (r / rhythm :mod (t2 / tight)) :arg2 (r2 / rhythm :mod (t3 / tight) :arg1-of (m / match-01 :arg2 (c / company :arg0-of (c2 / compete-02 :arg1 (c3 / company))) :arg1-of (p / possible-01) :time (e / ever))))
(w / withdraw-01 :arg1 (p / product :arg1-of (b / ban-01) :quant (a / about :op1 (m / mass-quantity :quant (N / N-A) :unit (k / kilogram)))) :arg2 (s / sell-01) :mod (a2 / alone :ord (o / ordinal-entity :value 1)))
(c / continue-01 :arg1 (c2 / consult-01 :arg0 (p / person :arg0-of (r / represent-01 :arg1 (a / and :op1 (p2 / person :arg0-of (r2 / represent-01 :arg1 (p3 / person :arg0-of (r3 / represent-01 :arg1 (p4 / person :arg0-of (r4 / represent-01 :arg1 (c3 / country :name (n / name :op1 "N-A")))))))) :op2 (p5 / person :arg0-of (r5 / represent-01 :arg1 (e / establish-01 :arg1 (' / '' :mod (h / humanitarian) :mod ('2 / ''))))))))))
(d / design-01 :arg1 (c / create-01 :arg1 (' / '' :mod (h / humanitarian) :mod ('2 / ''))) :arg3 (p / provide-01 :arg0 (c2 / create-01) :arg1 (c3 / condition :purpose (a / and :op1 (d2 / deliver-01 :arg1 (a2 / and :op1 (p2 / person :arg0-of (s / serve-02)) :op2 (f / food) :op3 (f2 / food :arg1-of (n / necessity :arg2 (c4 / city)))))))))
(a / and :op1 (v / visit-01 :arg0 (p / person :quant 2016) :arg1 (c / country)) :op2 (v2 / visit-01 :arg0 (p2 / person) :arg1 (c2 / country) :quant 2015) :li 14)
(a / and :op1 (a2 / appoint-01 :arg0 (m / military) :arg1 (p / person :arg0-of (h / have-org-role-91 :arg1 (m2 / military) :arg2 (m3 / minister :mod (p2 / prime)))) :degree (f / full) :arg1-of (c / cause-01 :arg0 (s / support-01 :arg0 (m4 / military) :arg1 (s2 / system :arg0-of (c2 / counter-01 :arg1 (h2 / house :mod (u / upper) :poss (p3 / parliament)))) :degree (f2 / full)))) :op2 (r / role :arg1-of (s3 / significant-02) :domain (p4 / person :arg0-of (h3 / have-org-role-91 :arg2 (m5 / minister :mod (p5 / prime))))))
(b / begin-01 :arg1 (d / develop-01 :arg2 (c / condition)) :prep-in (l / log :mod (s / suh)))
(m / multi-sentence :snt1 (c / contrasts :arg0 (w / weight-bearing :poss (t / they)) :arg1 (m2 / memory :mod (' / '') :topic (d / disease :mod (i / infectious)) :topic (d2 / disease :mod (i2 / infectious))) :beneficiary (s / sing-01)) :snt2 (a / aid-01 :arg0 (a2 / and :op1 (b / body :mod (f / foreign)) :op2 (b2 / body :mod (f2 / foreign)) :op3 (h / heat)) :arg2 (a3 / and :op1 (b3 / body :mod (f3 / foreign)) :op2 (b4 / body :mod (f4 / foreign)) :op3 (h2 / heat :name (n / name :op1 (f5 / fractures))) :op4 (e / et-cetera))))
(m / multi-sentence :snt1 (t / turns :mode (e / expressive) :mod (w / well)) :snt2 (h / have-03 :arg0 (t2 / they) :arg1 (c / chapel :poss (t3 / they))))
(c / choose-01 :arg0 (i / i) :arg1 (c2 / cod :location (a / and :op1 (p / pair) :op2 (f / fridges :mod (t / tomato)))) :arg1-of (p2 / personal-02))
(s / say-01 :arg0 (s2 / service :mod (s3 / security) :mod (f / federal)) :arg1 (f2 / file-01 :arg0 (s4 / service :mod (s5 / security) :mod (f3 / federal)) :arg1 (s6 / sue-02 :arg1 (c / claim-01 :arg1 (d / damage-01 :arg1 (a / amount :quant-of (r / roubles :quant 2.7)))))))
(s / see-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (h2 / he) :arg2 (p2 / president))) :arg1 (p3 / person :arg0-of (h3 / have-org-role-91 :arg1 (c / coup :arg1-of (a / attempt-01) :mod (m / military)) :arg2 (o / organizer))) :time (b / be-located-at-91 :arg1 (p4 / person) :arg2 (u / under :op1 15)))
(e / express-01 :arg0 (p / person :name (n / name :op1 "Vladimir" :op2 "Putin") :arg0-of (h / have-org-role-91 :arg1 (c / country :name (n2 / name :op1 "N-A")) :arg2 (p2 / president))) :arg1 (h2 / hope-01 :arg0 (p3 / person) :arg1 (c2 / contribute-01 :arg0 (p4 / person :arg0-of (h3 / head-01 :arg1 (g / government-organization :arg0-of (a / administrate-01 :arg1 (s / state))) :mod (n3 / new))) :arg2 (w / work-01 :arg0 (p5 / person) :arg1-of (h4 / have-org-role-91 :arg0 (p6 / person) :arg2 (m / member))))))
(s / state-01 :arg0 (t / thing :arg1-of (r / report-01 :arg0 (p / person :arg0-of (l / lead-02 :arg1 (c / country :name (n / name :op1 "N-A")))))) :arg1 (m / meet-03 :arg0 (p2 / person :arg0-of (l2 / lead-02 :arg1 (c2 / country :name (n2 / name :op1 "N-A")))) :time (m2 / meet-03 :arg0 (p3 / person) :arg1 (a / and :op1 (p4 / predecessor :poss (p5 / person)) :op2 (p6 / predecessor :poss (p7 / person))))))
(e / explain-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (p2 / person :arg0-of (h2 / have-org-role-91 :arg2 (m / mayor :mod (r / rwanda)))) :arg2 (m2 / mayor))) :arg1 (a / and :op1 (r2 / rule-out-02 :polarity - :arg0 (p3 / person :arg0-of (h3 / have-org-role-91 :arg2 (m3 / mayor :mod (c / clothing :mod (s / such))))) :arg1 (r3 / rule :topic (a2 / and :op1 (d / decent) :op2 (p4 / principle :mod (s2 / secularism))))) :op2 (r4 / rule-out-02 :polarity - :arg0 (p5 / person) :arg1 (a3 / and :op1 (h4 / hygiene) :op2 (s3 / safe-01)))))
(e / explode-01 :quant 11 :location (c / city :name (n / name :op1 "N-A") :mod (r / resort)) :time (e2 / early :degree (m / more)))
(a / and :op1 (p / produce-01 :mode (i / imperative) :arg0 (y / you) :arg1 (g / gift) :accompanier (t / tip-05)) :op2 (w / watches :arg1 (- / -lrb- :arg2-of (i2 / include-01 :arg1 (a2 / and :op1 (o / one :arg1-of (m / man-01 :polarity -)) :op2 (o2 / one :arg1-of (s / size-01 :arg2 (m2 / medium)))))) :mod (m3 / main) :time (s2 / since :op1 (-3 / -rrb- :quant 2008))))
(c / cause-01 :arg0 (c2 / consider-02 :arg0 (p / person :arg0-of (h / hack-04 :arg1 (d / democrat)) :mod (d2 / democrat)) :arg1 (t / thing :arg2-of (s / sanction-02 :arg0 (p2 / person) :arg1 (t2 / thing :arg2-of (s2 / sanction-02 :arg1 (p3 / person)))))))
(a / amount :quant-of (d / damage-01 :arg1-of (d2 / draw-02 :arg2 (r / roubles :quant 84))) :arg2-of (t / total-01))
(a / and :op1 (t / terminate-01 :arg0 (s / she) :arg1 (b / ball) :arg1-of (l / long-03) :prep-on (s2 / side :mod (l2 / left) :part-of (f / field))) :op2 (g / go-08 :arg1 (s3 / spiral) :arg2 (u / under :op1 (m / middle)) :time (t2 / then)) :op3 (g2 / give-01 :arg0 (s4 / spiral) :arg1 (a2 / advantage :mod (g3 / give-01 :arg1 (a3 / advantage) :arg2 (p / person))) :arg2 (p2 / person :mod (c / country :name (n / name :op1 "N-A")))))
(c / contrast-01 :arg1 (b / be-located-at-91 :arg1 (w / we) :arg2 (p / position :mod (g / good)) :time (n / now :mod (r / right))) :arg2 (d / depend-01 :arg0 (i / it) :arg1 (r2 / result-01 :arg1 (g2 / game :mod (s / saturday)) :arg2 (a / amr-unknown))))
(a / ally-01 :polarity - :arg1 (a2 / and :op1 (i / irrigation) :op2 (a3 / amhara)) :arg1-of (n / natural-03))
(f / force-01 :arg1 (s / she) :arg2 (o / out-06 :arg1 (s2 / she) :arg2 (w / window :mod (s3 / shop) :location (a / avenue :mod (b / bedford)))) :arg1-of (n / natural-03))
(c / contrast-01 :arg1 (p / possible-01 :arg1 (s / serve-01 :arg0 (c2 / coffee) :arg1 (b / beer) :time (n / no-longer))) :arg2 (p2 / prepare-02 :arg0 (t / they) :arg1 (j / juices :mod (s2 / squeezed)) :time (n2 / now)))
(a / add-01 :arg0 (p / person :arg0-of (h / have-rel-role-91 :arg1 (s / she) :arg2 (h2 / husband))) :arg1 (m / message-01 :arg0 (p2 / person) :arg1 (t / thing :manner-of (e / eat-01)) :mod (a2 / also)))
(a / advise-01 :arg0 (t / they) :arg1 (w / woman) :arg2 (b / become-01 :arg1 (w2 / woman) :arg2 (c / contribute-01 :arg0 (w3 / woman) :arg2 (b2 / budget :poss (a2 / and :op1 (n / newspaper) :op2 (m / magazine))))) :purpose (a3 / and :op1 (t2 / take-out-11 :arg0 (t3 / they) :arg1 (c2 / challenge-01)) :op2 (c3 / convert-01 :arg0 (t4 / they) :arg1 (s / storm :arg1-of (r / resemble-01 :arg2 (s2 / spaghetti :arg1 (s3 / spaghetti :mod (p / proverbial)) :arg2 (f / fabric)))) :arg2 (f2 / fabric :mod (p2 / proverbial)))))
(s / stuffed :arg1 (e / everything) :arg2 (p / plunged :arg1 (s2 / spoon) :arg2 (a / and :op1 (k / knitted) :op2 (b / brown) :op3 (s3 / substance :mod (s4 / sticky)))))
(s / say-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg2 (a / ambassador))) :arg1 (a2 / achieve-01 :arg1 (t / trade-01) :manner (a3 / and :op1 (s2 / supply-01 :arg1 (a4 / and :op1 (p2 / product :name (n / name :op1 "N-A")) :op2 (v / vehicle :mod (g / ground)) :op3 (w / weapon))))))
(a / and :op1 (b / begin-01 :arg1 (d / develop-02 :arg1 (m / mortex :name (n / name :op1 (m2 / mortex) :op2 (m3 / mortex)))) :location (t / thing :quant 2007)) :op2 (e / expect-01 :arg1 (t2 / thing :arg1-of (e2 / expect-01 :arg0 (p / person :quant 2013)))))
(c / contrast-01 :arg1 (s / set :arg0 (k / kenny) :arg1 (r / record :mod (o / olympic)) :time (b / before :op1 (n / now) :quant (b2 / between :op1 (t / temporal-quantity :quant (N / N-A) :unit (y / year)) :op2 (t2 / temporal-quantity :quant (N2 / N-A) :unit (y2 / year))))) :arg2 (s2 / surpassed :arg0 (z / zealand :mod (n2 / new) :location (r2 / round :ord (o2 / ordinal-entity :value 1))) :arg1 (n3 / norm)))
(a / and :op1 (r / renounce-01 :arg0 (h / he) :arg1 (t / thing :arg1-of (c / comment-01)) :time (l / late :degree (m / more))) :op2 (a2 / appeal-02 :arg0 (h2 / he) :arg2 (c2 / company :arg0-of (c3 / compete-02 :arg1 (c4 / country :name (n / name :op1 "N-A"))))))
(r / release-01 :arg1 (y / year :mod (r2 / release-01 :arg1 (y2 / year))))
(s / show-01 :arg0 (m / model) :arg1 (h / history :poss (v / venus) :arg1-of (r / resemble-01 :arg2 (d / develop-02 :arg0 (p / person :arg0-of (s2 / specialize-01)) :arg1 (s3 / study-01 :arg0 (p2 / person)) :time (p3 / previous)))))
(s / suggest-01 :arg0 (s2 / speeds :mod (n / new :degree (m / most)) :mod (r / rotation)) :arg1 (s3 / star :mod (s4 / star :degree (m2 / more) :compared-to (s5 / star :mod (m3 / massive) :quant (l / less)))))
(d / declare-02 :arg0 (h / he) :arg1 (d2 / depart-01 :arg0 (h2 / he) :arg2 (p / post :poss (h3 / he))) :time (a / after :op1 (p2 / perform-02 :arg0 (h4 / he) :arg1 (p3 / perform-02 :arg0 (t / team :mod (n / nation) :poss (c / country :name (n2 / name :op1 "Russia")) :location (e / euro)) :mod (f / farewell)))))
(a / and :op2 (e / educate-01 :mod (s / secondary) :arg1-of (f / free-03) :time (s2 / since :op1 2015)))
(r / resource :arg1-of (k / key-02) :mod (n / namibia :polarity -) :domain (r2 / resource :arg1-of (k2 / key-02) :quant (a / all)))
(c / contrast-01 :arg1 (h / have-03 :polarity - :arg0 (n / nomads) :arg1 (c2 / city)) :arg2 (a / and :op1 (h2 / horse) :op2 (w / weapon) :domain (t / they)))
(c / contrast-01 :arg2 (s / survive-01 :polarity - :arg0 (t / they :quant (m / many))) :time (y / year :mod (t2 / this)))
(i / increase-01 :arg1 (s / size :poss (d / debt :arg1-of (p / public-02))) :arg4 (r / record) :mod (r2 / record))
(a / and :op1 (e / easy-05 :arg1 (e2 / extend-01 :arg1 (d / dam :poss (c / carbake))) :mod (a2 / also)) :op2 (a3 / and :op1 (w / warm :arg1 (w2 / water :arg1-of (w3 / warm))) :op2 (s / solve-01 :arg1 (w4 / water)) :op3 (s2 / solve-01 :arg1 (s3 / soil :mod (f / fertile))) :op4 (f2 / feed-01 :arg2 (s4 / soil :mod (f3 / fertile)) :prep-under (b / bush))))
(s / school :mod (s2 / sports :mod (v / volgograd)) :domain (s3 / school :mod (v2 / volgograd)))
(a / and :op1 (r / receive-01 :arg0 (s / she) :arg1 (c / citizenship :mod (s2 / swiss))) :op2 (b / begin-01 :arg0 (s3 / she) :arg1 (p / perform-02 :arg0 (s4 / she) :arg1 (f / flag :mod (r2 / red-white)))) :li 2015)
(m / mean-01 :arg1 (t / this) :arg2 (g / go-01 :arg1 (a / and :op1 (c / change-01 :arg1 (h / house)) :op2 (f / finance) :op3 (i / issue-02 :mod (o / other))) :arg4 (t2 / thing :arg1-of (o2 / opine-01 :arg0 (p / person :arg0-of (o3 / own-01))))))
(m / multi-sentence :snt1 (a / action :arg1-of (s / single-02) :mod (j / just :polarity -) :domain (t / this)) :snt2 (t2 / target-01 :arg1 (f / fight-01 :arg1 (c / corrupt-01))))
(a / approach-02 :arg0 (s / slash :op1 (p / person :arg0-of (h / have-org-role-91 :arg2 (h2 / head-of-state))) :op2 (p2 / person :arg0-of (h3 / have-org-role-91 :arg2 (h4 / head-of-state))) :op3 (p3 / person :arg0-of (h5 / have-org-role-91 :arg2 (h6 / head-of-state))) :op4 (p4 / person :arg0-of (h7 / have-org-role-91 :arg2 (h8 / head-of-state)))) :arg1 (t / this))
(a / and :op1 (w / watch-01 :arg0 (a2 / apple) :arg1 (p / person :arg0-of (u / use-01 :arg1 35,000) :mod (t / that)) :arg1-of (a3 / apple) :time (a4 / after :op1 (l / launch-01 :arg1 (g / game) :quant (u2 / up-to :op1 (b / between :op1 (t2 / temporal-quantity :quant (N / N-A) :unit (d / day)) :op2 (l2 / launch-01 :arg1 (g2 / game))))))) :op2 (j / jumped :arg1 (n / number :quant-of (p2 / person :arg1-of (t3 / tracked :arg0 (t4 / they)))) :arg2 (p3 / percentage-entity :value (N2 / N-A)) :arg4 (p4 / percentage-entity :value (N3 / N-A))) :time (r / recent))
(c / contrast-01 :arg2 (g / go-01 :arg1 (w / woe :poss (p / person :mod (c2 / country :name (n / name :op1 "N-A")))) :arg4 (s / street) :purpose (d / do-02 :arg0 (p2 / person) :arg1 (t / thing :arg1-of (l / love-01 :arg0 (p3 / person))))))
(c / cover-02 :arg1 (h / health :quant 3 :consist-of (h2 / health)) :arg2 (a / and :op1 (m / move-01 :arg1 (a2 / and :op1 (a3 / air) :op2 (s / sunlight)) :arg2 (a4 / and :op1 (a5 / air) :op2 (s2 / sunlight)) :arg1-of (f / fresh-04))) :manner (w / way :mod (t / this)))
(a / and :op1 (d / distance-01 :arg1 (p / person :quant 62.198 :arg1-of (i / include-91 :arg2 (p2 / person :quant 62.198))) :arg2 (d2 / distance-01 :arg1 (p3 / person) :arg2 (a2 / and :op1 (s / silver) :op2 (p4 / person :arg0-of (h / have-rel-role-91 :arg1 (p5 / person) :arg2 (c / comrade))) :op3 (p6 / person :arg0-of (h2 / have-rel-role-91 :arg1 (p7 / person) :arg2 (c2 / comrade))) :op4 (p8 / person :arg0-of (h3 / have-rel-role-91 :arg1 (p9 / person) :arg2 (c3 / comrade))) :op5 (p10 / person :arg0-of (h4 / have-rel-role-91 :arg1 (p11 / person) :arg2 (c4 / comrade))) :op6 (p12 / person :arg0-of (h5 / have-rel-role-91 :arg1 (p13 / person) :arg2 (d3 / daughter))) :op6 (p14 / person :arg0-of (h6 / have-rel-role-91 :arg1 (p15 / person) :arg2 (d4 / daughter))) :op7 (p16 / person :arg0-of (h7 / have-rel-role-91 :arg1 (p17 / person) :arg2 (c5 / comrade))) :op7 (p18 / person :arg0-of (h8 / have-rel-role-91 :arg1 (p19 / person) :arg2 (c6 / comrade)))))))
(h / hugging :arg1 (a / and :op1 (p / person :mod (c / country :name (n / name :op1 "United" :op2 "States"))) :op2 (p2 / person :mod (l / left)) :op3 (p3 / person :mod (l2 / left))) :time (a2 / after :op1 (w / win-01 :arg0 (p4 / person) :arg1 (a3 / and :op1 (g / gold) :op2 (s / silver) :mod (r / respective)) :time (a4 / after :op1 (w2 / win-01 :arg0 (a5 / and :op1 (g2 / gold) :op2 (s2 / silver)) :arg1 (a6 / and :op1 (g3 / gold) :op2 (s3 / silver)) :arg2 (f / final :quant 2016 :arg1-of (o / olympics :time (s4 / summer)) :location (a7 / and :op1 (t / talk-02 :arg2 (a8 / and :op1 (j / janeiro :name (n2 / name :op1 (d / de))) :op2 (p5 / person :arg0-of (h2 / have-org-role-91 :arg1 (c2 / country :name (n3 / name :op1 "Brazil")))) :op3 (e / et-cetera))))))))))
(m / multi-sentence :snt1 (a / and :op1 (w / war :name (n / name :op1 "N-A")) :op2 (e / exercise :mod (f / freestyle)) :location-of (d / defend :arg0 (b / bayles) :arg1 (t / title :poss (t2 / title :poss (w2 / world))))) :snt2 (v / veil))
(r / report-01 :arg0 (p / police) :arg1 (b / boy :arg0-of (r2 / registering :arg1 (s / shooting :ord (o / ordinal-entity :value 2)) :location (6 / 6-year-old :location (c / city)) :time (w / week :mod (t / this)))))
(r / report-01 :arg0 (p / person :arg0-of (i / investigate-01)) :arg1 (a / appear-02 :arg1 (s / shooting :domain (m / man :arg1-of (a2 / arm-01) :quant (s2 / several)))) :arg2 (p2 / person :arg0-of (i2 / investigate-01)))
(c / contrast-01 :arg2 (a / and :op1 (s / sport :mod (e / expensive) :domain (s2 / sport :mod (e2 / expensive))) :op2 (s3 / support-01 :arg0 (p / person :arg0-of (h / have-rel-role-91 :arg1 (p2 / person :arg0-of (h2 / have-rel-role-91 :arg1 (p3 / person :arg0-of (h3 / have-rel-role-91 :arg1 (p4 / person :arg0-of (h4 / have-rel-role-91 :arg1 (p5 / person :arg0-of (h5 / have-rel-role-91 :arg1 (p6 / person :arg0-of (h6 / have-rel-role-91 :arg1 (p7 / person :arg0-of (h7 / have-rel-role-91 :arg1 (p8 / person :arg0-of (h8 / have-rel-role-91 :arg1 (p9 / person :arg0-of (h9 / have-rel-role-91 :arg1 (p10 / person :arg0-of (h10 / have-rel-role-91 :arg1 (p11 / person :arg0-of (h11 / have-rel-role-91 :arg1 (p12 / person :arg0-of (h12 / have-rel-role-91 :arg1 (p13 / person :arg0-of (h13 / have-rel-role-91 :arg1 (p14 / person :arg0-of (h14 / have-rel-role-91 :arg2 (p15 / parent))) :arg2 (p16 / parent))) :arg2 (p17 / parent))) :arg2 (p18 / parent))) :arg2 (p19 / parent))))))))))))))))))) :arg2 (a2 / and :op1 (p20 / person :arg0-of (t / train-01)) :op2 (p21 / person :arg0-of (h15 / have-org-role-91 :arg1 (f / family :arg1-of (h16 / have-org-role-91 :arg0 (p22 / person) :arg2 (m / member))))) :op3 (p23 / person :arg0-of (h17 / have-org-role-91 :arg1 (f2 / family :arg1-of (h18 / have-org-role-91 :arg0 (p24 / person) :arg2 (m2 / member))))) :op4 (p25 / person :arg0-of (h19 / have-org-role-91 :arg1 (f3 / family :arg1-of (h20 / have-org-role-91 :arg0 (p26 / person) :arg2 (m3 / member))))) :op5 (p27 / person :arg0-of (h21 / have-org-role-91 :arg1 (f4 / family :arg1-of (h22 / have-org-role-91 :arg0 (p28 / person) :arg2 (m4 / member)))))))))) :prep-in (r / reality))
(a / and :op1 (t / translated :arg1 (g / group :consist-of (d / doctor) :ord (o / ordinal-entity :value 1)) :time (b / before :op1 (t2 / translated :arg1 (g2 / group :consist-of (d2 / doctor) :ord (o2 / ordinal-entity :value 1)) :arg2 (c / contract :mod (n / new))))) :op2 (p / progress-01 :arg1 (o3 / outcome :arg1-of (n2 / need-01))))
(m / multi-sentence :snt1 (h / have-03 :arg0 (p / person :arg0-of (h2 / have-org-role-91 :arg1 (c / cabinet) :arg2 (m2 / member) :time (f / former)) :arg0-of (h3 / have-org-role-91 :arg1 (c2 / cabinet) :arg2 (m3 / member) :time (f2 / former)) :arg0-of (h4 / have-org-role-91 :arg1 (c3 / cabinet) :arg2 (m4 / member) :time (f3 / former)) :arg0-of (h5 / have-org-role-91 :arg1 (c4 / cabinet) :arg2 (m5 / member) :time (f4 / former)) :arg0-of (h6 / have-org-role-91 :arg1 (c5 / cabinet) :arg2 (m6 / member) :time (f5 / former)) :arg0-of (h7 / have-org-role-91 :arg1 (c6 / cabinet) :arg2 (m7 / member) :time (f6 / former)) :arg0-of (h8 / have-org-role-91 :arg1 (c7 / cabinet) :arg2 (m8 / member) :time (f7 / former)) :arg0-of (h9 / have-org-role-91 :arg1 (c8 / cabinet) :arg2 (m9 / member) :time (f8 / former)) :arg0-of (h10 / have-org-role-91 :arg1 (c9 / cabinet) :arg2 (m10 / member) :time (f9 / former)) :arg0-of (h11 / have-org-role-91 :arg1 (c10 / cabinet) :arg2 (m11 / member) :time (f10 / former)) :arg0-of (h12 / have-org-role-91 :arg1 (c11 / cabinet) :arg2 (m12 / member) :time (f11 / former)) :arg0-of (h13 / have-org-role-91 :arg1 (c12 / cabinet) :arg2 (m13 / member) :time (f12 / former)) :arg0-of (h14 / have-org-role-91 :arg1 (c13 / cabinet) :arg2 (m14 / member) :time (f13 / former)) :arg0-of (h15 / have-org-role-91 :arg1 (c14 / cabinet) :arg2 (m15 / member) :time (f14 / former)) :arg0-of (h16 / have-org-role-91 :arg1 (c15 / cabinet) :arg2 (m16 / member) :time (f15 / former)) :arg0-of (h17 / have-org-role-91 :arg1 (c16 / cabinet) :arg2 (m17 / member) :time (f16 / former)) :arg0-of (h18 / have-org-role-91 :arg1 (c17 / cabinet) :arg2 (m18 / member) :time (f17 / former)) :arg0-of (h19 / have-org-role-91 :arg1 (c18 / cabinet) :arg2 (m19 / member) :time (f18 / former)) :arg0-of (h20 / have-org-role-91 :arg1 (c19 / cabinet) :arg2 (m20 / member)))))
(r / recommend-01 :arg1 (i / indicate-01 :arg0 (p / person :arg0-of (v / vote-01)) :arg1 (a / and :op1 (n / name :poss (p2 / person)) :op2 (a2 / address :poss (p3 / person))) :mod (j / just)) :time (m / moment))
(m / multi-sentence :snt1 (a / and :op1 (r / represent-01 :arg0 (y / you) :arg1 (a2 / and :op1 (c / cbc) :op2 (c2 / canada))) :op2 (m2 / make-02 :arg0 (y2 / you) :arg1 (l / like-01 :arg0 (w / we) :arg1 (r2 / racist :quant (b / bunch))))) :snt2 (d / disgust :mod (> / >) :mod (h / hash)))
(m / multi-sentence :snt1 (m2 / make-02 :mode (i / imperative) :arg0 (w / we) :arg1 (c / clear-06 :arg1 (t / treat-01 :arg0 (c2 / comment-01 :arg0 (c3 / country :name (n / name :op1 "N-A"))) :arg1 (p / perform-01 :arg1 (s / swimmer))))) :snt2 (p2 / personality))
(s / say-01 :arg0 (i / i) :arg1 (a / and :op1 (d / disrespect :polarity -) :op2 (s2 / sorry-01 :arg1 (i2 / i))) :arg2 (p / person :name (n / name :op1 "N-A")))
(u / use-01 :arg0 (h / he) :arg1 (l / luminometer) :arg2 (a / and :op1 (s / show-01 :arg0 (h2 / he) :arg1 (p / person)) :op2 (t / thing :arg1-of (d / do-02 :arg0 (h3 / he)))) :time (b / before :op1 (l2 / licking :mod (e / every))))
(f / fly-01 :arg1 (f2 / force :mod (a / air) :mod (m / military) :mod (m2 / military)) :destination (l / low-04 :degree (i / incredible)) :destination (l2 / low-04 :degree (i2 / incredible)))
(c / contrast-01 :arg1 (g / grabbed :arg0 (d / dan) :arg1 (t / try-01 :arg0 (c2 / country :name (n / name :op1 "N-A")) :arg1 (m / make-01 :arg0 (c3 / country) :arg1 (t2 / touchdown :location (c4 / corner :mod (l / left)))))) :arg2 (g2 / go-06 :arg1 (g3 / game) :arg2 (i / island :location (r / relative-position :op1 (s / sea :location (s2 / south)))) :arg1-of (c5 / cause-01 :arg0 (a / and :op1 (s3 / sing-01 :arg0 (f / fan :arg1-of (s4 / sing-01 :arg0 (f2 / fan))) :arg1 (g4 / game)) :op2 (d2 / dance :arg0 (f3 / fan))))))
(c / contrast-01 :arg1 (j / journey :arg0 (i / it)) :arg2 (m / make-02 :arg0 (i2 / it) :arg1 (m2 / more :degree (b / bit))))
(d / detain-01 :arg1 (p / person :quant (s / several)) :arg2 (s2 / suspect-01 :arg1 (o / organize-01 :arg1 (e / explode-01))) :time (a / already))
(c / contrast-01 :arg1 (f / fall-01 :arg1 (g / grow-01 :arg1 (g2 / grow-01 :arg1 (e / economy))) :arg2 (r / rate-entity-91 :arg1 (p / percentage-entity :value (N / N-A)) :arg2 (t / temporal-quantity :quant (N2 / N-A) :unit (y / year))) :arg4 (v / value-interval :op1 2014 :op2 2012) :arg4 (v2 / value-interval :op1 2014 :op2 2012) :arg4 (v3 / value-interval :op1 2014 :op2 2012)) :arg2 (r2 / remain-01 :arg1 (a / and :op1 (p2 / person :arg0-of (h / have-org-role-91 :arg2 (h2 / head-of-state))) :op2 (p3 / person :arg0-of (h3 / have-org-role-91 :arg1 (i / industry :quant (f2 / few) :arg0-of (s / show-01 :arg1 (d / develop-01)))))) :arg2 (t2 / tourism)) :time (a2 / after :op1 (c2 / come-01 :arg1 (j / junta :mod (m / military)) :arg4 (p4 / power))))
(c / contrast-01 :arg2 (k / know-01 :arg0 (w / we) :arg1 (a / and :op1 (r / relate-01 :polarity - :arg1 (i / incident :mod (t / this)) :arg2 (t2 / terrorism :mod (k2 / kind :mod (a2 / any))) :arg1-of (d / direct-02 :polarity -)) :op2 (t3 / try-01 :arg0 (w2 / we) :arg1 (e / establish-01 :arg0 (w3 / we) :arg1 (i2 / identities :poss (p / person :location (b / behind :op1 (t4 / they)))))) :mod (e2 / exact))))
(d / distinguishable :arg1 (i / it) :arg2 (p / paradise :mod (s / slender :mod (a / another)) :mod (a2 / another)) :time (l / late :op1 (t / temporal-quantity :quant (N / N-A) :unit (y / year)) :degree (m / more)))
(a / and :op1 (b / be-located-at-91 :arg1 (v / village :mod (s / south :mod (s2 / such))) :arg2 (a2 / area :mod (s3 / south :mod (s4 / such))) :location (s5 / side :quant 1 :part-of (m / mountain :location (m2 / mountain)))) :op2 (p / place :location-of (b2 / break-01 :arg1 (w / water))) :domain (v2 / village :mod (o / olympic)))
(c / contrast-01 :arg2 (s / south-australia :arg1 (b / basketball)))
(s / say-01 :arg1 (o / obligate-01 :arg2 (r / rebuilt :arg1 (i / it))) :arg2 (i2 / imam))
(c / cause-01 :arg0 (l / language :mod (n / native) :poss (i / i) :domain (l2 / language :mod (t / tatar) :poss (i2 / i)) :arg1-of (c2 / conclude-01 :arg0 (i3 / i))) :arg1 (e / easy-05 :arg1 (i4 / it) :degree (m / more) :beneficiary (i5 / i)))
(r / recall-02 :mode (i / imperative) :arg0 (w / we) :arg1 (r2 / recall-02 :arg1 (c / case :quant 2 :arg2-of (c2 / criminal-03))))
(m / multi-sentence :snt1 (a / and :op1 (n / note-01 :arg1 (i / it) :time (r / recent)) :op2 (h / have-org-role-91 :arg0 (p / person :arg0-of (h2 / have-org-role-91 :arg1 (c / city-district :name (n2 / name :op1 "N-A") :mod (c2 / chelyabinsk)) :arg2 (g / governor))) :arg1 (p2 / person :arg0-of (v / visit-01 :arg1 (n3 / numbers :mod (j / july) :quant (n4 / number :ord (o / ordinal-entity :value 1))))))) :snt2 (' / '' :mode (e / expressive)))
(s / state-01 :arg0 (p / person :name (n / name :op1 "dygalo")))
(a / and :op1 (c / celebrating :arg1 (p / person :quant 11 :mod (c2 / country :name (n / name :op1 "N-A"))) :time (s / since :op1 (d / date-entity :decade (N / N-A))) :li 2016) :op2 (c3 / consider-01 :arg1 (h / holiday) :manner (o / official)) :li 2016)
(c / create-01 :arg0 (h / he) :arg1 (b / baggage :beneficiary (a / and :op1 (p / person :arg0-of (h2 / have-org-role-91 :arg1 (c2 / country :name (n / name :op1 "N-A")) :arg2 (a2 / aristocracy))) :op2 (p2 / person :arg0-of (h3 / have-org-role-91 :arg1 (c3 / country :name (n2 / name :op1 "N-A")) :arg2 (m / member))) :op3 (p3 / person :arg0-of (h4 / have-org-role-91 :arg1 (f / family :arg1-of (h5 / have-org-role-91 :arg0 (p4 / person) :arg2 (m2 / member))))))) :time (e / end-01 :arg1 (c4 / century :ord (o / ordinal-entity :value 19))))
(o / oblige-02 :arg1 (t / they) :arg2 (i / identify-01 :arg0 (t2 / they) :arg1 (p / person :arg0-of (u / use-01)) :arg2 (p2 / person :arg0-of (u2 / use-01)) :arg1-of (b / base-02 :arg2 (c / contain-01 :arg1 (i2 / information :topic (o2 / operate-01 :arg1 (t3 / telecommunication))))) :arg1-of (b2 / base-02 :arg2 (t4 / thing :arg1-of (c2 / contain-01 :arg0 (a / and :op1 (p3 / person :arg0-of (o3 / operate-01 :arg1 (t5 / telecommunication))) :op2 (c3 / contract-02 :arg0 (p4 / person))))))))
(r / reported :arg1 (b / bus :mod (f / fly-01)) :arg2 (p / person :location (s / station :name (n / name :op1 "N-A") :arg0-of (h / have-org-role-91 :arg1 (m / ministry :name (n2 / name :op1 (c / cabin)))))) :location (a / and :op1 (t / talk-02 :arg2 (s2 / service :mod (p2 / press) :poss (m2 / ministry :mod (c2 / country :name (n3 / name :op1 "N-A")) :location (c3 / country :name (n4 / name :op1 "N-A"))))) :op2 (f2 / feodosia :arg1 (b2 / bus :mod (f3 / fly-01)) :arg2 (p3 / person :location (c4 / cabin)))))
(a / argue-01 :arg0 (h / he) :arg1 (f / feel-02 :arg0 (p / person :arg0-of (a2 / analyze-01)) :arg1 (f2 / feel-02 :arg0 (p2 / person :arg0-of (l / lead-02 :arg1 (c / committee :mod (c2 / central)))) :arg1 (r / represent-01 :arg0 (p3 / person :arg0-of (l2 / lead-02 :arg1 (c3 / committee :mod (c4 / central)))) :arg1 (r2 / represent-01 :arg0 (p4 / person) :arg1 (p5 / person) :arg2 (v / view-02 :arg0 (p6 / person) :arg1 (t / threaten-01 :arg0 (s / state :mod (r3 / religious-group :name (n / name :op1 "N-A"))) :arg2 (s2 / state :mod (r4 / religious-group :name (n2 / name :op1 "N-A"))) :arg1-of (o / optimistic :degree (m / more)) :arg1-of (k / know-02 :arg2 (o2 / or :op1 (i / isis) :op2 (i2 / isil)) :mod (a3 / also)))))))) :concession (c5 / contain-01 :polarity - :arg0 (i3 / it) :arg1 (t2 / thing :arg0-of (e / evidence-01 :arg1 (o3 / order-01 :arg0 (p7 / person :arg0-of (h2 / have-org-role-91 :arg1 (g / government-organization :arg0-of (a4 / administrate-01 :arg1 (c6 / country :name (n3 / name :op1 "N-A")))) :arg2 (m2 / member))))))))
(s / say-01 :arg0 (p / person :name (n / name :op1 "N-A")) :arg1 (w / want-01 :arg0 (p2 / person) :arg1 (a / and :op1 (e / experiment-01 :arg0 (p3 / person) :arg1 (p4 / person)) :op2 (i / introduce-02 :arg0 (p5 / person) :arg1 (d / dishes :mod (n2 / new)) :medium (m / menu)))))
(e / enough :quant 1 :domain (d / deploy-01 :arg1 (e2 / elephant) :arg2 (s / side :mod (o / other))) :mod (u / usual))
(l / lead-02 :arg0 (d / data :mod (s / such) :arg2-of (l2 / lead-02 :arg0 (p / person :arg0-of (h / head-01 :arg1 (p2 / person :arg0-of (h2 / have-org-role-91 :arg2 (m / minister :mod (f / foreign)))))))) :arg1 (j / journalist :arg1-of (l3 / local-02)) :time (c / converse-01))
(a / and :op1 (a2 / arabs :domain (p / person :arg1-of (i / include-91 :arg2 (g / guest :poss (w / we)) :arg3 (m / most)))) :op2 (d / demand-01 :arg0 (p2 / person) :arg1 (r / remove-01 :arg1 (c / code :mod (c2 / country :name (n / name :op1 "N-A")))) :arg1-of (c3 / conform-01 :arg2 (e / employee :poss (h / hotel)))))
(s / say-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg2 (a / ambassador))) :arg1 (a2 / achieve-01 :arg1 (i / increase-01 :arg1 (t / trade-01)) :manner (a3 / and :op1 (s2 / supply-01 :arg1 (a4 / and :op1 (p2 / product :name (n / name :op1 "N-A")) :op2 (v / vehicle :mod (g / ground)) :op3 (w / weapon))))))
(c / continue-01 :arg0 (s / state) :arg1 (t / twist :arg0 (s2 / state) :arg1 (l / language :name (n / name :op1 "N-A")) :location (c2 / complex :mod (i / industry))))
(b / believe-01 :arg0 (p / person :name (n / name :op1 "N-A") :arg0-of (h / have-org-role-91 :arg1 (g / government-organization :name (n2 / name :op1 "N-A") :mod (p2 / portal)) :arg3 (k / kornev))) :arg1 (c / cause-01 :arg0 (b2 / break-down-12 :arg1 (t / term :poss (p3 / project))) :arg1 (d / dismissal :mod (n3 / neskorov))))
(a / admit-01 :arg0 (i / i) :arg1 (f / fall-01 :arg1 (h / hindes) :arg4 (t / track) :time (a2 / after :op1 (f2 / fail-01 :arg1-of (f3 / fail-01)))) :time (a3 / after :op1 (t2 / triumph :location (r / relative-position :op1 (v / value-interval :op1 2012 :op2 (h2 / hoy))))))
(c / cause-01 :arg0 (h / have-03 :arg0 (t / they) :arg1 (p / period :mod (t2 / terminate-01 :arg1 (c2 / contract-02)))) :arg1 (e / end-01 :arg1 (c3 / contract-02) :mod (i / in-fact) :prep-in (f / fact)))
(h / help-01 :arg0 (m / mission :mod (l / late :degree (m2 / most)) :mod (l2 / late :degree (m3 / most)) :mod (s / space)) :arg1 (c / collect-01 :arg0 (a / astronomers) :arg1 (c2 / catalogues :mod (s2 / speed :poss (s3 / star :location (p / pleiades))) :arg1-of (c3 / complete-02 :degree (m4 / most)))))
(m / measure-02 :arg1 (s / speed :poss (r / rotation :mod (s2 / star :mod (e / each)))) :time (b / between :op1 (d / date-entity :decade (N / N-A)) :op2 (d2 / date-entity :year (N2 / N-A))) :subevent-of (e2 / emergence :arg1 (s3 / spots :mod (s4 / star) :mod (r2 / recognisable))))
(a / and :op1 (c / cause-01 :arg0 (a2 / amr-unknown) :arg1 (i / improve-01 :polarity - :arg1 (g / g :quant 63 :mod (5 / 571-strong) :accompanier (a3 / aerodynamics :mod (t / tank))))) :op2 (u / up-to :op1 (b / between :op1 (t2 / temporal-quantity :quant (N / N-A) :unit (y / year)) :op2 (u2 / up-to :op1 5.4))) :mod (i2 / indeed))
(a / and :op1 (t / take-01 :arg1 (p / person :quant (s / some) :arg0-of (h / have-rel-role-91 :arg1 (p2 / person) :arg2 (p3 / parent))) :arg3 (c / country :mod (a2 / another))) :op2 (l / leave-11 :polarity - :arg0 (p4 / person) :arg1 (t2 / thing :arg1-of (c2 / choose-01))))
(f / find-01 :arg0 (p / person :arg0-of (' / '')) :arg1 (a / athletes :quant (a2 / at-least :op1 16) :arg0-of (d / decide-01 :arg1 (c / change-01 :arg0 (a3 / athletes) :arg1 (c2 / citizenship :poss (c3 / country) :mod (c4 / country :name (n / name :op1 "N-A")))))))
(a / and :op1 (b / bear-02 :arg1 (p / person :arg0-of (h / have-org-role-91 :arg2 (m / maria))) :location (c / city :name (n / name :op1 "N-A") :location (y / yaroslavl :ord (o / ordinal-entity :value 1)))) :op2 (m2 / meet-02 :arg0 (p2 / person) :arg1 (s / swim-01 :arg0 (p3 / person))))
(c / continue-01 :arg0 (g / girl) :arg1 (l / lesson :arg1-of (s / swim-01 :arg0 (g2 / girl)) :mod (s2 / simultaneous)) :arg0-of (s3 / show-01 :arg1 (r / result-01 :arg1 (l2 / level :mod (n / nation)) :arg2 (l3 / level :mod (n2 / nation)))))
(a / and :op1 (a2 / appoint-01 :arg0 (p / person :arg0-of (h / head-01 :arg1 (s / state))) :arg1 (d / decree :arg0-of (h2 / have-org-role-91 :arg1 (g / government-organization :arg0-of (a3 / administrate-01 :arg1 (c / country :name (n / name :op1 "N-A")))) :arg2 (v / vaino))) :arg2 (v2 / vaino :arg0 (p2 / person) :arg1 (g2 / government-organization :arg0-of (a4 / administrate-01 :arg1 (c2 / country :name (n2 / name :op1 "N-A")))))) :op2 (s2 / say-01 :arg0 (p3 / person) :arg1 (d2 / decree :arg1-of (s3 / sign-02 :arg0 (a5 / and :op1 (p4 / putin) :op2 (w / website :poss (p5 / person)))))))
(t / turn-14 :arg0 (i / idea :mod (n / new)) :arg1 (p / populism :arg1-of (c / cheap-02)) :condition (a / and :op1 (d / diplomacy :mod (d2 / diplomacy)) :op2 (n2 / neznamo) :quant (a2 / all)))
(c / contrast-01 :arg1 (c2 / collect-01 :arg0 (p / person :arg0-of (o / own-01 :arg1 (p2 / population))) :arg1 (m / money) :arg2 (p3 / population)) :arg2 (a / and :op1 (p4 / pay-01 :polarity - :arg0 (c3 / company :arg0-of (p5 / provide-01 :arg1 (s / service)))) :op2 (s2 / spend-01 :arg0 (c4 / company) :arg1 (c5 / company) :arg3 (n / need-01 :arg0 (c6 / company) :arg1 (c7 / company)))) :prep-as (p6 / person :arg0-of (o2 / own-01 :arg1 (c8 / code :arg2-of (c9 / criminal-03)))))
(c / contrast-01 :arg2 (l / lead-01 :arg0 (f / franks :mod (f2 / franks)) :arg1 (w / winners :location (c2 / country :name (n / name :op1 "N-A"))) :arg1-of (c3 / cause-01 :arg0 (g / great :domain (s / see-01 :arg0 (i / i))))))
(c / contrast-01 :arg1 (e / evacuated :arg1 (p / person :arg0-of (r / reside-01)) :location (c2 / churches :quant 2)) :arg2 (z / zatoplyaetsya :arg0 (t / they :mod (b / both)) :time (n / now)))
(t / trained :arg0 (p / person :name (n / name :op1 "laurie" :op2 "hernandez") :arg0-of (h / have-org-role-91 :arg2 (b / burman))) :arg1 (a / athletes :poss (p2 / person)) :arg2 (a2 / and :op1 (b2 / biles) :op2 (c / coach) :op3 (m / maggie)) :time (s / since :op1 (g / go-02 :arg0 (p3 / person) :arg4 (w / war :name (n2 / name :op1 "N-A")))) :mod (a3 / aimee))
(s / say-01 :arg1 (n / need-01 :arg1 (p / provide-01 :arg1 (p2 / protect-01 :arg1 (i / informant) :mod (g / good :degree (m / most))))) :arg2 (i2 / it))
(s / say-01 :arg0 (i / i) :arg1 (d / die-01 :arg1 (p / person :arg1-of (d2 / die-01 :arg1-of (c / cause-01 :arg0 (s2 / speak-01 :arg0 (p2 / person) :arg1 (s3 / speak-01 :topic (p3 / person :mod (c2 / country :name (n / name :op1 "N-A")) :mod (c3 / country :name (n2 / name :op1 "N-A"))))))))) :arg2 (p4 / person :arg0-of (s4 / speak-01 :arg3 (s5 / speak-01 :arg0 (p5 / person) :topic (s6 / swimmer :arg1 (p6 / person))))))
(c / cup)
(f / floor :location (h / house :poss (s / sell-01 :arg1 (d / drug) :time (p / past))))
(a / and :op1 (s / search-01 :arg0 (p / police) :arg1 (h / house)) :op2 (f / find-01 :arg0 (p2 / police) :arg1 (h2 / house)) :op3 (f2 / find-01 :arg0 (p3 / police) :arg1 (h3 / house)) :op4 (f3 / find-01 :arg0 (p4 / police) :arg1 (c / cannabis :quant (m / more-than :op1 (m2 / mass-quantity :quant (N / N-A) :unit (g / gram)))) :mod (a2 / as-well) :arg1-of (a3 / appropriate-02)))
(s / say-01 :arg0 (p / person :name (n / name :op1 "harry" :op2 "reid") :arg0-of (l / lead-02 :arg1 (d / democrat :location (s2 / senate)))) :arg1 (c / convince-01 :arg0 (p2 / person) :arg1 (p3 / person :arg0-of (h / have-org-role-91 :arg3 (j / judge-01)) :arg0-of (n2 / nominate-01 :arg1 (p4 / person :arg0-of (h2 / have-org-role-91 :arg3 (j2 / judge-01)))) :arg0-of (h3 / have-org-role-91 :arg3 (j3 / judge-01))) :arg2 (p5 / person :arg0-of (h4 / have-org-role-91 :arg3 (j4 / judge-01))) :condition (e / elect-01 :arg2 (p6 / president))))
(d / detain-01 :arg1 (p / person :source (a / and :op1 (c / citizen :quant (n / number)) :op2 (c2 / citizen :mod (c3 / country :name (n2 / name :op1 "N-A"))))) :arg2 (a2 / assist-01 :arg0 (p2 / person) :arg1 (p3 / person) :arg2 (p4 / prepare-01 :arg1 (a3 / act-02 :arg0 (t / terrorist)))))
(a / and :op1 (r / reside-01 :arg0 (p / person :arg0-of (r2 / reside-01 :arg1 (r3 / region :mod (z / zaporozhye)))) :arg1 (p2 / person :arg1-of (d / detain-01 :arg2 (s / suspect-01 :arg1 (o / organize-01 :arg1 (a2 / attack-01) :location (c / crimea))))) :time (f / former)) :op2 (a3 / admit-01 :arg0 (p3 / person) :arg1 (g / guilt :arg0 (p4 / person)) :time (i / interrogate-01 :arg2 (p5 / person))))
(a / and :op1 (c / confirm-01 :arg0 (c2 / court :mod (d / district)) :arg1 (v / violate-01 :arg1 (r / require-01 :arg1 (s / spread-02 :arg1 (t / thing :arg1-of (r2 / require-01 :arg1-of (e / establish-01)) :arg1-of (s2 / spread-02 :arg1-of (e2 / establish-01))))))) :op2 (d2 / decide-01 :arg0 (c3 / court) :arg1 (a2 / appoint-01 :arg0 (c4 / court) :arg1 (p / punish-01 :arg1 (p2 / person :arg0-of (h / have-rel-role-91 :arg1 (p3 / product :mod (i / information)) :arg2 (c5 / child)))))) :op3 (d3 / decide-01 :arg0 (c6 / court) :arg1 (a3 / appoint-01 :arg0 (c7 / court) :arg1 (p4 / punish-01 :arg1 (t2 / thing :quant 49 :arg2-of (c8 / copy-01 :arg1 (p5 / product :arg1-of (p6 / print-01))))) :arg2 (m / manage-01 :arg1 (r3 / rospotrebnadzor)))))
(n / notice-01 :arg0 (h / he) :arg1 (w / wave-04 :arg1 (w2 / wave-04 :arg1 (p / person :arg1-of (b / be-located-at-91 :arg2 (a / and :op1 (i / influence-01 :arg0 (p2 / person) :arg1 (m / media)) :op2 (f / feel-01 :arg0 (p3 / person) :arg1 (d / duty :purpose (b2 / buy-01 :arg0 (p4 / person) :arg1 (r / record :mod (o / old) :poss (p5 / person))))))) :mod (n2 / new)))))
(m / multi-sentence :snt1 (c / contrast-01 :arg1 (s / simple-02 :arg1 (l / listen-01 :arg1 (m2 / music :prep-on (o / or :op1 (c2 / computer) :op2 (d / device :mod (o2 / other)))))) :arg2 (s2 / simple-02 :arg1 (w / woe :poss (v / vinyl)))) :snt2 (i / immersed :arg1 (s3 / she) :manner (t / thing :arg1-of (f / fill-01 :arg2 (l2 / love-01) :manner (s4 / sigh)))))
(r / rule-01 :arg0 (c / court :mod (c2 / country :name (n / name :op1 "N-A"))) :arg1-of (c3 / contrast-01 :arg2 (s / say-01 :arg0 (c4 / court) :arg1 (t / thing :polarity - :arg1-of (b / base-02 :arg2 (a / and :op1 (m / manage-01 :arg0 (p / person) :arg1 (s2 / store :quant 72 :arg1-of (l / light-06))) :op2 (s3 / say-01 :arg0 (c5 / court) :arg1 (u / understand-01 :arg1 (p2 / problem :topic (' / '' :mod (c6 / calais))) :degree (f / full)))))))))
(c / contrast-01 :arg1 (a / attempt-01 :arg0 (p / person :mod (c2 / country :name (n / name :op1 "N-A"))) :arg1 (a2 / attempt-01 :arg0 (p2 / person) :arg1 (m / make-01 :arg0 (p3 / person) :arg1 (t / touchdown :location (c3 / corner :mod (l / left)))))) :arg2 (g / go-01 :arg1 (g2 / game) :arg4 (w / way :poss (a3 / and :op1 (s / sing-01 :arg0 (f / fan :arg1-of (s2 / sing-01 :arg0 (f2 / fan)))) :op2 (f3 / flags :arg0 (f4 / fan)) :op3 (d / dancing :arg0 (f5 / fan))) :arg1-of (l2 / long-03))))
(a / announce-01 :arg0 (p / person :name (n / name :op1 "N-A") :arg0-of (h / have-org-role-91 :arg1 (b / board :arg0-of (h2 / hold-01)) :arg2 (c / chairman :mod (d / deputy)))) :arg1 (t / this))
(s / say-01 :arg0 (h / he) :arg1 (a / and :op1 (e / emboldened :arg0 (a2 / army) :arg1 (c / crisis :mod (p / politics) :arg1-of (g / go-on-15))) :op2 (l / lack-01 :arg0 (a3 / army) :arg1 (n / negotiate-01 :arg0 (g2 / government-organization :arg0-of (g3 / govern-01))))) :medium (m / move-02))
(m / multi-sentence :snt1 (g / get-01 :arg0 (k / keys :source (p / person :arg0-of (h / have-org-role-91 :arg1 (p2 / product :name (n / name :op1 "N-A")) :arg2 (d / director :mod (m2 / multivitamin))))) :arg1 (p3 / person :mod (a / again :mod (o / once)) :arg0-of (h2 / have-org-role-91 :arg2 (d2 / director))) :mod (a2 / again :mod (o2 / once))) :snt2 (' / '' :arg0 (s / story :topic (p4 / person :arg0-of (h3 / have-org-role-91 :arg2 (d3 / director :mod (d4 / dear)))))))
(p / present-01 :arg1 (j / journalist :name (n / name :op1 (a / alexander) :op2 (a2 / alexander)) :mod (r / rbc)) :arg2 (c / charge-05 :mod (n2 / new)))
(h / have-03 :arg0 (t / team :mod (n / nation) :mod (c / country :name (n2 / name :op1 "N-A"))) :arg1 (l / location :location-of (r / ready-02 :arg1 (t2 / team) :arg2 (p / provide-01 :arg0 (t3 / team) :arg1 (p2 / person :arg0-of (r2 / reside-01 :arg1 (c2 / country :name (n3 / name :op1 "N-A")) :mod (h2 / home)) :arg2-of (i / include-01 :arg1 (a / and :op1 (r3 / relaxing) :op2 (m / massage :mod (s / sports))))))) :time (m2 / moment :mod (a2 / any))) :mod (o / of-course))
(b / believe-01 :arg0 (i / i) :arg1 (d / decide-01 :arg0 (t / they) :arg1 (h / have-06 :arg0 (t2 / they) :arg1 (t3 / temporal-quantity :quant (N / N-A) :unit (h2 / hour) :mod (q / quiet)) :arg1-of (d2 / direct-02) :prep-on (r / rungs :mod (c / cold)))) :time (m / moment :mod (a / any)))
(m / multi-sentence :snt1 (q / question-01 :location (c / country :name (n / name :op1 "N-A"))) :snt2 (a / attack-01 :arg0 (g / girl) :arg1 (i / i) :source (w / wada)))
(b / birthplace :arg0 (s / sport :mod (w / whole)) :arg1 (s2 / sport :arg1-of (r / record-01) :mod (w2 / whole)) :manner (s3 / somehow))
(a / and :op2 (a2 / accuse-01 :arg0 (a3 / article :quant (m / multiple :op1 1) :arg1-of (i / include-91 :arg2 (c / code :arg2-of (c2 / criminal-03) :poss (a4 / and :op1 (a5 / acquire-01 :arg0 (c3 / criminal-organization :name (n / name :op1 "N-A")) :arg1 (a6 / acquire-01 :arg1 (- / -rrb- :mod (a7 / ammunition)))) :op2 (p / possess-01 :arg1 (-2 / -rrb- :mod (a8 / ammunition))))))) :arg1 (k / krivolap)))
(f / find-01 :arg0 (p / person :name (n / name :op1 "nikolai" :op2 "krivolapov") :arg1-of (o / originate-01 :arg2 (d / defraud-01) :arg1-of (k / know-01 :polarity -)) :arg0-of (a / allow-01 :arg1 (p2 / produce-01 :arg0 (p3 / person) :arg1 (c / charge-01 :mod (a2 / additional)))) :arg1-of (k2 / know-01 :polarity -)) :arg1 (d2 / defraud-01))
(a / and :op1 (c / company :name (n / name :op1 "N-A") :mod (s / serious) :domain (t / this)) :op2 (b / break-01 :polarity - :arg0 (t2 / this) :arg1 (t3 / term) :time (e / ever)))
(r / receive-01 :arg0 (c / coffers :mod (f / federal)) :arg1 (m / monetary-quantity :quant 8.9 :unit (d / dollar) :arg1-of (c2 / cost-01 :arg2 (m2 / monetary-quantity :quant 8.9 :unit (d2 / dollar)))) :arg2 (t / term :mod (e / entire) :poss (p / project)) :time (s / since :op1 (b / begin-01 :arg1 (a / and :op1 (c3 / construct-01 :arg1 (s2 / stage :mod (s3 / stage :ord (o / ordinal-entity :value 2)))) :op2 (i / infringe-01 :arg1 (s4 / stage :ord (o2 / ordinal-entity :value 2)))))))
(a / and :op1 (p / person :arg0-of (a2 / author-01)) :op2 (p2 / person :arg0-of (a3 / author-01)) :op3 (p3 / person :arg0-of (a4 / author-01)) :op4 (p4 / person :arg0-of (a5 / author-01)) :op5 (p5 / person :arg0-of (a6 / author-01)))
(o / order-01 :arg0 (p / person :name (n / name :op1 "Ócsa") :arg0-of (h / have-org-role-91 :arg2 (p2 / premier)) :arg0-of (h2 / have-org-role-91 :arg2 (p3 / premier))) :arg2 (t / take-01 :arg0 (p4 / person) :arg1 (m / measure-02 :arg1 (s / security) :mod (a / additional)) :purpose (a2 / and :op1 (p5 / prevent-01 :arg0 (p6 / person) :arg1 (e / explode-01 :mod (n2 / new))) :op2 (e2 / exclude-01 :arg0 (p7 / person) :arg1 (c / casualty :arg1-of (p8 / possible-01))))))
(s / sell-01 :arg1 (c / copy-01 :quant (a / all)) :arg3 (d / day))
(c / consider-02 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (c2 / country :name (n / name :op1 "N-A")) :arg2 (o / official))) :arg1 (s / sanction-02 :arg0 (p2 / person) :arg1 (t / thing :arg2-of (s2 / sanction-02 :arg1 (a / and :op1 (s3 / server :arg0-of (h2 / hack-04) :poss (p3 / party :mod (d / democracy))) :op2 (j / journal :name (n2 / name :op1 (w / wall) :op2 (s4 / street) :op3 (s5 / street))) :op4 (j2 / journal :name (n3 / name :op1 (w2 / wall) :op2 (s6 / street))))))) :arg2 (s7 / source :arg0-of (c3 / cite-01 :arg1 (s8 / source))))
(n / note-01 :arg0 (n2 / note :name (n3 / name :op1 (w / wsj))) :arg1 (p / prefer-01 :arg0 (s / state) :arg1 (s2 / specify-01 :polarity - :arg0 (s3 / state) :arg1 (t / thing :arg2-of (n4 / name-01 :arg1 (p2 / person :arg0-of (c / carry-out-03 :arg1 (a / attack-01 :arg0-of (h / hack-04))))))) :mod (u / usual)))
(a / accident :mod (t / terrible) :time (d / during :op1 (e / evening)) :time (e2 / evening :mod (e3 / evening)) :location (a2 / area :poss (t2 / tract :name (n / name :op1 (c / cornus) :op2 (t3 / tash) :op3 (c2 / crimean)))))
(s / share-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg3 (j / judge-01)) :mod (o / other)) :arg1 (t / thing :arg1-of (v / view-01 :arg0 (s2 / she))) :arg2 (e / express-01 :arg0 (p2 / person) :arg1 (r / respond-01 :polarity - :arg0 (p3 / person) :arg2 (t2 / thing :arg1-of (i / include-91 :arg2 (t3 / thing :arg1-of (q / question-01 :arg0 (s3 / she)) :quant (m / most)))))))
(o / open-01 :arg0 (g / goal :quant 3 :arg1-of (m / match-01) :arg1-of (e / end-01 :accompanier (w / win-01 :arg0 (c / country :name (n / name :op1 "India")) :arg2 (o2 / over :op1 (p / product-of :op1 3 :op2 (6 / 6-1)))))) :arg1 (g2 / goal :quant 2 :ord (o3 / ordinal-entity :value 1) :beneficiary (t / team :poss (w2 / woman :mod (c2 / country :name (n2 / name :op1 "India")) :mod (c3 / country)))) :time (w3 / win-01 :arg0 (p2 / person :mod (c4 / country)) :arg1 (t2 / team :poss (c5 / country)) :arg2 (o4 / ordinal-entity :value 1)))
(m / meet-03 :arg0 (a / and :op1 (t / team :mod (c / country :name (n / name :op1 "N-A"))) :op2 (t2 / team :mod (c2 / country :name (n2 / name :op1 "N-A")))) :time (g / game :mod (f / final) :part-of (r / round :ord (o / ordinal-entity :value 1))))
(a / and :op1 (v / video :source (p / protest-01)) :op2 (s / shoot-02 :arg1-of (a2 / allege-01) :time (e / end-01 :arg1 (y / year :mod (l / last)))) :op3 (s2 / show-01 :arg1 (b / beat-03 :arg0 (p2 / person :arg0-of (h / have-org-role-91 :arg1 (s3 / security) :arg2 (o / officer))) :arg1 (m / man :mod (y2 / young)) :arg2 (s4 / sticks) :time (p3 / put-01 :arg0 (p4 / person) :arg1 (h2 / hand :part-of (p5 / person)) :arg2 (h3 / hand :part-of (p6 / person))))))
(t / try-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (c / country :name (n / name :op1 "N-A")) :arg2 (t2 / trumps))) :arg1 (d / downplayed :arg0 (p2 / person) :arg1 (c2 / conflict-01 :arg0 (p3 / person) :arg1 (h2 / headquarters :poss (p4 / person) :mod (e / elect-01)) :mod (l / last))) :arg0-of (c3 / claim-01 :arg1 (j / joked :arg0 (a / and :op1 (p5 / person :arg0-of (h3 / have-org-role-91 :arg2 (p6 / president))) :op2 (p7 / person :arg0-of (h4 / have-org-role-91 :arg2 (h5 / head-of-state))) :op3 (p8 / person :arg0-of (h6 / have-org-role-91 :arg1 (g / group :name (n2 / name :op1 "N-A") :mod (t3 / terrorist)) :arg3 (a2 / apprentice-01 :arg0 (p9 / person))))) :arg1 (' / '' :arg0 (a3 / and :op1 (p10 / person :arg0-of (h7 / have-org-role-91 :arg2 (p11 / president))) :op2 (p12 / person :arg0-of (h8 / have-org-role-91 :arg1 (g2 / group :name (n3 / name :op1 "N-A") :mod (t4 / terrorist)))))) :time (w / week :mod (t5 / this)))))
(v / visit-01 :arg0 (p / person :name (n / name :op1 "N-A") :arg0-of (h / have-org-role-91 :arg2 (f / faithfully)) :mod (a / another)) :arg1 (' / '' :name (n2 / name :op1 ('2 / '') :op2 (w / willow))) :time (s / since :op1 (d / date-entity :decade (N / N-A))))
(s / say-01 :arg0 (h / he) :arg1 (a / and :op1 (c / come-01 :arg1 (i / i) :time (a2 / after :op1 (n / now) :quant (t / temporal-quantity :quant (N / N-A) :unit (m / minute)))) :op2 (p / prepare-02 :arg0 (i2 / i) :arg1 (i3 / i) :arg2 (a3 / and :op1 (p2 / prepare-01 :arg0 (i4 / i) :arg1 (b / bagel :arg0 (i5 / i)) :accompanier (s2 / stuff :quant (a4 / all))) :op2 (s3 / stuff :mod (a5 / all))))))
(a / and :op1 (c / confessed :arg0 (p / person :name (n / name :op1 "rodriguez")) :arg1 (w / want-01 :arg0 (p2 / person) :arg1 (e / experiment-01))) :op2 (i / introduce-02 :arg0 (p3 / person) :arg1 (d / dishes :mod (n2 / new) :location (m / menu))))
(a / and :op1 (u / use-01 :arg0 (p / person :arg0-of (c / campaign-01 :arg1 (e / environment))) :arg1 (w / way :mod (c2 / conventional :polarity -)) :purpose (p2 / prevent-01 :arg0 (p3 / person) :arg1 (w2 / wander :mod (e2 / elephants))) :manner (w3 / way :mod (c3 / conventional :polarity -)) :purpose (p4 / prevent-01 :arg0 (p5 / person) :arg1 (w4 / wander :mod (e3 / elephants)))))
(a / and :op1 (c / consequence :arg1-of (t / take-01 :arg0 (g / government-organization :arg0-of (g2 / govern-01 :arg1 (c2 / country-region))) :time (y / year :mod (t2 / this))) :arg1-of (t3 / take-01 :arg0 (g3 / government-organization :arg0-of (g4 / govern-01 :arg1 (c3 / country :name (n / name :op1 "N-A")))))) :op2 (r / renew-01 :polarity - :arg0 (m / move-02) :arg1 (t4 / thing :instrument-of (s / subsidize-01 :arg1 (t5 / thing :instrument-of (s2 / support-01 :arg1 (p / plant)))))))
(s / say-01 :arg0 (c / company :arg0-of (s2 / supply-01 :arg1 (p / plant :mod (l / large) :location (l2 / lower :name (n / name :op1 (l3 / latrobe)) :mod (l4 / large))))) :arg1 (e / expect-01 :arg0 (c2 / company) :arg1 (s3 / step-01 :arg1 (p2 / person :quant 3 :mod (o / other) :arg0-of (o2 / own-01)) :arg2 (t / terminate :arg0 (p3 / person) :arg1 (c3 / contract)) :mod (a / also))))
(r / recommend-01 :arg1 (l / lose-02 :arg0 (c / centre :arg1-of (l2 / legal-02) :mod (t / this)) :arg1 (t2 / thing :arg1-of (i / include-91 :arg2 (f / fund-01 :arg0 (f2 / federal)) :arg3 (p / percentage-entity :value 30)))) :time (y / year :mod (n / next)))
(a / account-01 :arg0 (p / person :arg0-of (u / use-01 :arg1 (d / device :arg1-of (m / mobile-02)))) :arg1 (r / revenue :poss (c / company :name (n / name :op1 "Facebook")) :arg1-of (i / include-91 :arg2 (r2 / revenue :poss (c2 / company)) :arg3 (p2 / percentage-entity :value (N / N-A)))) :arg3 (p3 / person :arg0-of (u2 / use-01 :arg1 (d2 / device :arg1-of (m2 / mobile-02)))) :time (n2 / now))
(s / suggest-01 :arg0 (s2 / scientist) :arg1 (e / explain-01 :arg0 (a / atmosphere :mod (d / dense) :poss (s3 / scientist)) :arg1 (s4 / speed :mod (r / rotation :mod (s5 / small)) :mod (v / venus))) :time (p / previous))
(o / organize-01 :arg0 (s / strike-01 :arg1 (g / group :consist-of (w / wood) :mod (w2 / wood))) :arg1 (p / platform :location (n / north :part-of (n2 / north)) :arg1-of (r / run-01 :arg0 (s2 / shell :mod (r2 / royal) :mod (r3 / royal)))))
(h / hold-04 :arg0 (w / we) :arg1 (m / meet-03 :quant (s / several) :time (d / day :mod (f / full)) :duration (f2 / few :op1 (t / temporal-quantity :quant (N / N-A) :unit (w2 / week)))) :arg1-of (s2 / start-01 :time (b / begin-01 :arg1 (p / problem :topic (e / eye :arg1-of (f3 / fresh-04))))))
(s / suggest-01 :arg0 (s2 / speed :mod (n / new) :mod (r / rotation)) :arg1 (s3 / star :mod (m / massive :degree (m2 / more) :compared-to (s4 / star :mod (m3 / massive) :quant (l / less)))))
(t / talk-01 :arg0 (n / nobody) :arg1 (b / build-01 :arg1 (w / wall :arg0-of (s / separate-02 :arg1 (c / country) :arg2 (a / and :op1 (n2 / neighbor-01 :arg1 (c2 / country) :arg2 (p / poor)) :op2 (c3 / corrupt-01 :arg1-of (c4 / corrupt-01) :arg1-of (c5 / corrupt-01)))))) :location (l / location :name (n3 / name :op1 "namibia")))
(m / multi-sentence :snt1 (a / and :op2 (g / got :arg0 (p / person :mod (t / top) :arg0-of (h / have-org-role-91 :arg2 (t2 / top))) :arg1 (p2 / person :mod (w / white)) :location (a2 / along :op1 (a3 / and :op1 (b / boards) :op2 (2 / 20-inch :arg1-of (s / special-02)))))) :snt2 (' / '' :arg0 (d / detail :mod (s2 / some) :topic (p3 / painted :arg1 (b2 / body) :arg2 (m2 / metallic :mod (g2 / gold) :mod (w2 / white) :mod (w3 / white))) :mod (s3 / some))))
(c / cause-01 :arg1 (a / ad :arg1 (t / technology :mod (n / new) :poss (a2 / adblock) :arg0-of (e / effective-04 :arg1 (e2 / effective-04 :arg0 (t2 / technology) :arg1 (t3 / time :mod (s / short)))))))
(a / and :op1 (w / wait-01 :polarity - :arg1 (p / person :mod (t / this)) :arg2 (s / slash :op1 (m / mail) :op2 (r / realize-01 :polarity - :arg0 (p2 / person) :arg1 (i / it)))) :op2 (f / fall-07 :arg1 (p3 / person) :arg2 (s2 / seismic-quantity :quant (N / N-A) :arg1-of (c / cause-01 :arg0 (c2 / consequence :mod (e / ensuing) :quant (a2 / all))))))
(s / say-01 :arg0 (p / person :name (n / name :op1 "N-A")) :arg1 (i / imagine-01 :arg0 (p2 / person) :arg1 (i2 / imagine-01 :arg0 (p3 / person) :arg1 (a / anyone :arg0-of (w / want-01 :arg1 (h / hurt-01 :arg0 (a2 / anyone) :arg1 (p4 / person :mod (y / young :degree (m / more)) :arg0-of (h2 / have-rel-role-91 :arg1 (h3 / he) :arg2 (b / brother :mod (y2 / young :degree (m2 / more)))))))) :degree (t / total))))
(e / equal-01 :arg1 (s / size :poss (d / debt :mod (i / italian))) :arg2 (p / product-of :op1 2016 :op2 (m / monetary-quantity :quant 2.248 :unit (e2 / euro))))
(a / ahead :mod (g / grow-01))
(e / exemplify-01 :arg0 (r / reduce-01 :arg1 (p / pressure-01 :arg1 (p2 / price-01))))
(d / decline-02 :arg0 (t / trade-01 :mod (f / foreign)) :arg1 (r / rate-entity-91 :arg1 (r2 / rate-entity-91 :arg1 32.8 :arg2 (t2 / temporal-quantity :quant (N / N-A) :unit (y / year))) :arg2 (r3 / rate-entity-91 :arg1 2016 :arg2 (t3 / temporal-quantity :quant (N2 / N-A) :unit (y2 / year))) :arg1-of (p / possible-01)))
(c / contrast-01 :arg2 (s / say-01 :arg1 (w / wrong-04 :arg1 (p / person :arg0-of (h / have-rel-role-91 :arg1 (w2 / we) :arg2 (c2 / coaches))) :arg2 (p2 / person :arg0-of (h2 / have-rel-role-91 :arg1 (w3 / we) :arg2 (c3 / coaches))))))
(t / true-01 :arg1 (o / occupy-01 :arg0 (p / person :mod (c / country :name (n / name :op1 "N-A"))) :arg1 (p2 / place :ord (o2 / ordinal-entity :value 17)) :mod (o3 / only) :purpose (h / hit-01 :arg0 (p3 / person) :arg1 (f / final) :arg2 (t2 / tournament :arg1-of (p4 / personal-02)))) :mod (t3 / true))
(a / and :op1 (g / grant-01 :arg0 (s / she) :arg1 (c / citizenship :mod (s2 / swiss))) :op2 (b / begin-01 :arg0 (s3 / she) :arg1 (s4 / speak-01 :arg0 (s5 / she) :prep-under (f / flag :mod (r / red)))) :li 2015)
(c / cause-01 :arg0 (a / and :op1 (h / have-03 :arg0 (h2 / he) :arg1 (t / tie-01 :arg1 (h3 / he) :arg2 (w / west)) :quant (l / lot)) :op2 (h4 / have-org-role-91 :arg0 (h5 / he) :arg1 (p / perspective :mod (m / military)) :arg2 (m2 / member))) :arg1 (t2 / think-01 :arg0 (i / i) :arg1 (t3 / try-01 :arg0 (p2 / person :mod (c2 / country :name (n / name :op1 "N-A"))) :arg1 (m3 / maintain-01 :arg0 (p3 / person) :arg1 (r / relation-03 :arg0 (p4 / person) :arg2 (w2 / west))))) :source (p5 / perspective :mod (m4 / military)))
(m / multi-sentence :snt1 (a / and :op1 (c / coincidence :polarity - :arg1 (p / person :arg0-of (h / have-org-role-91 :arg2 (p2 / politician :mod (t / turkish))))) :op2 (d / declare-02 :arg0 (p3 / person) :arg1 (w / will-02 :arg0 (p4 / person) :arg1 (c2 / change-01 :arg0 (p5 / person) :arg1 (p6 / position :poss (p7 / person)) :arg2 (i / issue-02 :quant (n / number) :location (s / syria))))) :op3 (d2 / declare-02 :arg0 (p8 / person) :arg1 (r / relation-03 :arg0 (p9 / person) :arg2 (c3 / country :name (n2 / name :op1 "Israel"))) :purpose (e / engage-01 :arg0 (p10 / person) :arg1 (p11 / person :mod (c4 / country)) :arg2 (c5 / country))) :op4 (e2 / explain-01 :arg0 (p12 / person) :arg1 (s2 / step :mod (n3 / next)) :arg2 (r2 / relation-03 :arg0 (c6 / country :name (n4 / name :op1 "Israel")) :arg2 (c7 / country)))) :snt2 (g / glazov :arg1 (s3 / step :mod (n5 / next)) :arg2 (r3 / relation-03 :arg0 (c8 / country) :arg2 (c9 / country))))
(v / visit-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg2 (p2 / president))) :arg1 (a / and :op1 (p3 / person :arg0-of (h2 / have-org-role-91 :arg2 (p4 / president))) :op2 (p5 / person :arg1-of (f / fame-01))) :mod (g / good :degree (v2 / very)) :time (n / now))
(a / and :op1 (i / include-91 :arg3 1 :arg1 (e / era :mod (e2 / era :arg1-of (m / modern-02))) :arg2 (e3 / era :arg1-of (m2 / modern-02))) :op2 (s / surprise-01 :polarity - :arg1 (r / reach-01 :arg0 (h / he) :arg1 (p / point :mod (t / this)) :arg1-of (r2 / reach-01 :arg0 (f / few :op1 (t2 / temporal-quantity :quant (N / N-A) :unit (m3 / month)))))))
(a / and :op1 (e / earn-01 :arg0 (i / i) :arg1 (g / gold :ord (o / ordinal-entity :value 1) :location (t / tuesday))) :op2 (b / become-01 :arg1 (g2 / gold :ord (o2 / ordinal-entity :value 1)) :arg2 (c / chord :mod (f / final) :arg1-of (b2 / beautiful-02) :beneficiary (p / party :mod (f2 / farewell) :arg0-of (c2 / coordinator :arg1 (t2 / team :mod (n / nation) :mod (n2 / nation :mod (n3 / nation))))))))
(r / reach-01 :arg0 (p / person :arg0-of (r2 / reach-01 :arg1 (a / attack-01 :quant 1) :time (a2 / already))) :arg1 (r3 / risk-01 :arg2 (g / get-01 :arg1 (a3 / another)) :mod (g2 / great :degree (m / more))))
(p / phone-number-entity :value (N / N-A))
(g / go-08 :arg1 (f / fan :poss (o / olympics :quant 2016 :arg1-of (o2 / olympics) :time (w / week :mod (t / this)))) :arg2 (p / prevost :arg1 (p2 / prevost :name (n / name :op1 (c / circuit) :op2 (c2 / circuit) :op3 (c3 / circuit) :op4 (c4 / circuit) :op5 (c5 / circuit) :op6 (p3 / prevost) :op7 (p4 / prevost)) :arg0-of (r / resemblance :arg1 (r2 / resemblance :arg1 (c6 / cambridge) :arg2 (d / duchess))))) :time (w2 / week :mod (t2 / this)))
(a / and :op2 (a2 / and :op1 (f / find-out-03 :arg0 (i / i) :arg1 (m / madness :arg1 (s / society))) :op2 (a3 / admit-01 :arg0 (i2 / i) :arg1 (l / look-02 :arg0 (h / he) :arg1 (r / resemble-01 :arg1 (h2 / he) :arg2 (r2 / resemble-01 :arg1 (h3 / he) :arg2 (k / kid :domain (h4 / he)))))) :prep-in (f2 / fact)))
(a / and :op1 (c / continue-01 :arg0 (s / she) :arg1 (s2 / search-01)) :op2 (m / measure-01 :arg0 (s3 / she) :arg1 (p / pairs :quant (m2 / multiple :op1 4)) :time (e / eventual) :location (m3 / mall :name (n / name :op1 (b / bouverie)) :location (b2 / bouverie))))
(c / contrast-01 :arg1 (e / endanger-01 :arg1 (a / around :op1 (w / world))) :arg2 (p / possible-01 :arg1 (h / help-01 :arg0 (v / video :mod (t / this) :source (c2 / country :name (n / name :op1 "N-A"))) :arg1 (m / make-02 :arg0 (v2 / video) :arg1 (m2 / more :degree (m3 / more :degree (l / little)) :beneficiary (y / you))))))
(f / forcibly :arg0 (h / house-01 :arg0-of (h2 / house-01)) :arg1 (a / and :op1 (s / she) :op2 (h3 / home :poss (p / person :arg0-of (h4 / have-rel-role-91 :arg1 (s2 / she) :arg2 (p2 / partner))))) :time (w / week :mod (t / this)) :time (a2 / after :op1 (g / grant-01 :arg1 (p3 / period :arg1-of (e / extend-01) :consist-of (d / depart-01 :arg1-of (v / voluntary-02))) :arg2 (d2 / depart-01 :arg1-of (v2 / voluntary-02)))))
(s / say-01 :arg0 (s2 / she) :arg1 (m / message :domain (t / this) :beneficiary (p / person :arg0-of (f / feel-01 :arg1 (p2 / possible-01 :arg1 (b / behave :arg0 (p3 / person) :arg1 (a / and :op1 (p4 / person :arg0-of (p5 / prosecute-01)) :op2 (p6 / person :arg1-of (v / victimize-01 :arg0 (b2 / behave-01 :mod (s3 / such)))))))))))
(a / and :op1 (p / post-01 :arg1 (i / it) :arg2 (s / site :name (n / name :op1 (r / rospotrebnadzor)))) :op2 (p2 / print-01 :arg1 (v / version) :arg2 (a2 / and :op1 (v2 / version :arg1-of (p3 / print-01)) :op2 (v3 / version :arg1-of (p4 / print-01)))) :time (t / then))
(f / fined :domain (n / network :mod (b / book) :mod (n2 / new)) :purpose (s / sell-01 :arg0 (n3 / network) :arg1 (b2 / book :mod (k / kramer) :mod (s2 / stace)) :time (b3 / before :op1 (s3 / suicide :poss (i / i)))) :arg1-of (c / cause-01 :arg0 (r / report-01 :arg0 (a / agency :name (n4 / name :op1 "N-A") :mod (n5 / news) :mod (c2 / city)))))
(c / contrast-01 :arg2 (t / thing :arg2-of (r / result-01) :domain (t2 / thing :arg2-of (r2 / result-01))))
(s / say-01 :arg1 (s2 / see-01 :mode (i / imperative) :arg0 (w / we)) :arg2 (o / okay-04))
(s / say-01 :arg0 (h / he) :arg1 (t / thing :arg1-of (i / include-91 :arg2 (t2 / thing :arg1-of (g / get-01 :arg0 (i2 / i)))) :quant (m / much) :arg1-of (g2 / get-01 :arg0 (i3 / i) :arg1-of (g3 / get-01 :arg0 (i4 / i) :arg1-of (g4 / get-01 :arg0 (i5 / i) :time (o / or :op1 (p / person :quant 11 :domain (i6 / i)) :op2 (p2 / person :quant 12 :domain (i7 / i)) :op3 (t3 / thing :arg1-of (s2 / say-01 :arg0 (h2 / he)) :mod (p3 / probable))))))) :li (7 / 70s))
(s / say-01 :arg0 (h / he) :arg1 (s2 / sell-01 :arg0 (c / customer :mod (' / '') :arg0-of (s3 / sell-01 :arg1 (v / vinyl :poss (c2 / customer)) :arg2 (b / buy-01 :arg0 (c3 / customer) :arg1 (r / record :poss (c4 / customer))))) :time (n / now)))
(i / include-91 :arg1 (p / place :quant 1 :arg1-of (t / threaten-01 :arg2 (d / demolition)) :arg0-of (h / have-rel-role-91 :arg1 (c / child) :arg2 (c2 / child))) :arg2 (p2 / place :location-of (a / and :op1 (w / work-01 :polarity - :arg0 (c3 / child) :arg1 (p3 / profit-01)) :op2 (o / offer-01 :arg0 (a2 / and :op1 (c4 / class :mod (c5 / country :name (n / name :op1 "N-A"))) :op2 (c6 / class :mod (c7 / country)) :op3 (c8 / class :mod (c9 / country))) :arg1 (a3 / and :op1 (c10 / class :mod (c11 / country :name (n2 / name :op1 "N-A"))) :op2 (c12 / class :mod (c13 / country)) :op3 (c14 / class :mod (c15 / country))) :purpose (h2 / hundreds :arg1 (m / minor :mod (v / vulnerable)) :location (c16 / camp))))))
(i / include-91 :arg1 (a / and :op1 (p / person :quant 10 :arg1-of (i2 / include-91 :arg2 (p2 / person :quant 2))) :op2 (p3 / person :quant 2 :arg1-of (i3 / include-91 :arg2 (p4 / person :quant 2 :arg0-of (h / have-rel-role-91 :arg1 (i4 / i) :arg2 (n / neighbourhood))))) :op3 (p5 / person :arg0-of (h2 / have-rel-role-91 :arg1 (i5 / i) :arg2 (l / library-affiliate))) :op4 (p6 / person :arg0-of (h3 / have-rel-role-91 :arg1 (i6 / i) :arg2 (p7 / presentation))) :op5 (p8 / person :arg0-of (h4 / have-rel-role-91 :arg1 (i7 / i) :arg2 (p9 / presentation)))) :arg2 (p10 / presentation :mod (c / cruise)) :time (t / today))
(a / and :op1 (c / come-01 :arg1 (d / defeat-01) :arg3 (p / poor :polarity - :degree (t / too :polarity -) :location (s / silver))) :op2 (p2 / possible-01 :arg1 (p3 / pride-01 :arg0 (p4 / person :ord (o / ordinal-entity :value 3) :arg0-of (h / have-org-role-91 :arg1 (c2 / country :name (n / name :op1 "Argentina")))) :arg2 (a2 / and :op1 (p5 / poor :degree (t2 / too :polarity -)) :op2 (p6 / person :ord (o2 / ordinal-entity :value 3) :arg0-of (h2 / have-org-role-91 :arg1 (c3 / country :name (n2 / name :op1 "Argentina")))) :op3 (p7 / person :ord (o3 / ordinal-entity :value 1) :arg0-of (h3 / have-org-role-91 :arg1 (c4 / country) :arg3 (l / lead-02 :arg0 (p8 / person)))) :op4 (p9 / person :arg0-of (h4 / have-org-role-91 :arg1 (c5 / country) :arg3 (l2 / lead-02 :arg0 (p10 / person)))) :op5 (p11 / person :arg0-of (h5 / have-org-role-91 :arg1 (c6 / country) :arg3 (l3 / lead-02 :arg0 (p12 / person)))) :op6 (p13 / person :arg0-of (h6 / have-org-role-91 :arg1 (a3 / africa :mod (s2 / south)) :arg3 (a4 / africa :mod (n3 / new)))) :op7 (a5 / africa :location (r / road))))))
(' / ' :arg0 (i / i) :arg1 (a / ask-02 :arg0 (i2 / i) :arg1 (o / or :op1 (p / partner-01 :mod (g / good :degree (m / more))) :op2 (c / coach :mod (g2 / good :degree (m2 / more)))) :arg2 (c2 / coach :mod (g3 / good :degree (m3 / more)))))
(p / prohibit-01 :arg1 (i / import-01 :arg1 (a / and :op1 (p2 / product :mod (a2 / agriculture)) :op2 (m / material :mod (r / raw))) :arg2 (a3 / and :op1 (a4 / and :op1 (m2 / material :mod (a5 / agriculture)) :op2 (m3 / material :mod (r2 / raw))) :source (c / country :name (n / name :op1 "United" :op2 "States"))) :op2 (a6 / and :op1 (m4 / material :mod (r3 / raw)) :op2 (m5 / material :mod (r4 / raw)) :op3 (a7 / and :op1 (m6 / material :mod (r5 / raw)) :op2 (m7 / material :mod (r6 / raw))))) :arg2 (i2 / import-01 :arg1 (a8 / and) :arg2 (c2 / country :name (n2 / name :op1 "Russia"))))
(i / investment :arg0 (a / and :op1 (p / person :arg0-of (h / head-01 :arg1 (u / union-02 :arg1 (g / government-organization :name (n / name :op1 "N-A") :mod (g2 / goldminers))))) :op2 (p2 / person :arg0-of (h2 / head-01 :arg1 (u2 / union :name (n2 / name :op1 (s / sergei))))) :op3 (p3 / person :arg0-of (h3 / head-01 :arg1 (g3 / government-organization :arg0-of (g4 / govern-01 :arg1 (c / country-region))))) :op4 (p4 / person :arg0-of (h4 / head-01 :arg1 (g5 / government-organization :arg0-of (g6 / govern-01 :arg1 (c2 / country-region))))) :op5 (p5 / person :arg0-of (h5 / head-01 :arg1 (g7 / government-organization :arg0-of (g8 / govern-01 :arg1 (c3 / country-region)))))) :arg1 (m / monetary-quantity :quant (2 / 2.5-4) :unit (d / dollar :mod (d2 / december))) :arg3 (m2 / monetary-quantity :quant (22 / 2.5-4) :unit (d3 / dollar :mod (d4 / december))))
(p / possible-01 :polarity - :arg1 (b / buy-01 :arg0 (p2 / person :mod (c / country :name (n / name :op1 "N-A"))) :arg1 (r / rate-entity-91 :arg1 (m / more-than :op1 (p3 / percentage-entity :value (N / N-A))) :arg2 (t / temporal-quantity :quant (N2 / N-A) :unit (y / year))) :arg1-of (d / deploy-01 :arg1-of (a / activity-06 :arg0 (g / group)))) :time (u / until :op1 (r2 / recent)))
(c / call-01 :arg0 (p / person :arg0-of (h / have-rel-role-91 :arg1 (h2 / he) :arg2 (b / buddy))) :arg1 (p2 / person :arg0-of (h3 / have-rel-role-91 :arg1 (h4 / he) :arg2 (b2 / buddy))) :arg2 (a / and :op1 (p3 / person :arg0-of (h5 / have-rel-role-91 :arg1 (h6 / he) :arg2 (b3 / buddy))) :op2 (p4 / person :arg0-of (h7 / have-rel-role-91 :arg1 (h8 / he) :arg2 (b4 / buddy))) :op3 (p5 / person :arg0-of (h9 / have-rel-role-91 :arg1 (h10 / he) :arg2 (b5 / buddy))) :op4 (p6 / person :arg0-of (h11 / have-rel-role-91 :arg1 (h12 / he) :arg2 (b6 / buddy))) :op5 (p7 / person :arg0-of (h13 / have-rel-role-91 :arg1 (h14 / he) :arg2 (b7 / buddy))) :op7 (p8 / person :arg0-of (h15 / have-rel-role-91 :arg1 (h16 / he) :arg2 (b8 / buddy)))))
(t / turn-down-05 :arg0 (d / dragon :mod (g / giant) :mod (g2 / giant)) :arg1 (s / scary-03 :polarity - :arg2 (a / and :op1 (b / bulldog :mod (g3 / good)) :op2 (w / wingspan :mod (w2 / world-region :name (n / name :op1 "N-A"))) :op3 (c / capable-01 :arg2 (b2 / become-01 :arg1 (d2 / dragon) :arg2 (w3 / world-region :name (n2 / name :op1 "N-A")))))) :mod (a2 / also))
(c / contrast-01 :arg1 (b / begin-01 :arg0 (a / and :op1 (i / image :mod (v / visual) :poss (e / elliot)) :op2 (m / manner :poss (h / he))) :arg1 (w / weeping :arg0 (a2 / and) :arg1 (s / stream :quant 3 :mod (e2 / emotional))) :time (m2 / moment :arg1-of (t / tense :degree (m3 / most)) :mod (s2 / such))) :arg2 (b2 / begin-01 :arg0 (a3 / adult) :arg1 (w2 / weeping :arg0 (t2 / they) :arg1 (s3 / stream :quant 3)) :time (m4 / moment :arg1-of (t3 / tense :degree (m5 / most)) :mod (s4 / such))))
(d / do-02 :arg0 (i / i) :arg1 (t / thing :mod (g / good)) :arg2 (i2 / i) :arg1-of (l / last-01 :arg2 (t2 / temporal-quantity :quant (N / N-A) :unit (s / second))))
(a / and :op2 (t / threaten-01 :arg1 (m / move-01 :arg1 (f / furniture))))
(h / hope-01 :arg1 (m / match-01 :arg0 (m2 / man :mod (y / young) :arg1-of (s / shout-01 :arg2 (n / news :mod (g / great)) :time (f / first))) :arg2 (s2 / semi-finals :arg0 (m3 / man) :arg1 (g2 / gold) :time (f2 / future))) :mod (o / of-course) :mod (o2 / of-course))
(d / describe-01 :arg0 (p / person :arg0-of (h / head-01 :arg1 (u / urals :location (s / south)))) :arg1 (c / change-01 :arg0 (p2 / person) :arg1 (p3 / place :arg1-of (t / take-01 :accompanier (e / enterprise)))) :arg2 (e2 / enterprise) :time (s2 / since :op1 (m / move-01 :arg1 (k / karabashmed :mod (' / '')) :arg2 (g / group :mod (h2 / hoam)))))
(c / construct-01 :arg0 (a / activity-06 :arg1 (m / modernize-01 :arg1 (' / '')) :mod (m2 / main)) :arg1 (w / workshop :poss (w2 / workshop :mod (n / new))) :purpose (c2 / capture-01 :arg0 (a2 / activity-06) :arg1 (u / up-to :op1 (p / percentage-entity :value (N / N-A) :arg3-of (i / include-91 :arg2 (g / gas :mod (m3 / metallurgical)))))) :time (y / year :mod (r / recent)))
(a / and :op1 (h / help-01 :arg0 (e / enterprise :mod (c / country :name (n / name :op1 "N-A"))) :arg1 (r / repair-01 :arg0 (e2 / enterprise) :arg1 (s / school))) :op2 (m / maintain-01 :arg0 (e3 / enterprise) :arg1 (a2 / and :op1 (s2 / school) :op2 (k / kindergartens) :op3 (f / facility :mod (s3 / sports)) :op4 (f2 / facility :mod (s4 / sports)) :op5 (f3 / facility :arg1-of (r2 / recreation-02) :arg0-of (i / improve-01 :arg1 (t / territory))))))
(a / arrest-01 :arg1 (b / blueberries) :time (u / until :op1 (a2 / arrest-01 :quant 9)))
(o / out-06 :arg1 (p / part :part-of (s / saga) :mod (n / new)) :arg2 (b / before :op1 (e / end-01 :arg1 (m / multiple :op1 2016))) :location (c / country :name (n2 / name :op1 "N-A")))
(a / and :op1 (g / grow-01 :arg1 (s / she) :location (b / blue :name (n / name :op1 (b2 / blue))) :location (b3 / blue :name (n2 / name :op1 (b4 / blue))) :time (o / ordinal-entity :value 1)) :op2 (t / take-01 :arg0 (s2 / she) :arg1 (s3 / stick :mod (h / hockey)) :time (d / date-entity :dayperiod (N / N-A))) :op3 (p / play-02 :arg0 (s4 / siblings :mod (o2 / old :degree (m / more)) :poss (s5 / she)) :arg1 (s6 / sport :mod (t2 / this)) :time (a2 / age-01 :arg1 (s7 / she) :arg2 (t3 / temporal-quantity :quant (N2 / N-A) :unit (y / year)))) :op4 (b5 / become-01 :arg1 (t4 / team :mod (n3 / nation)) :arg2 (t5 / thing :arg0-of (p2 / play-12 :arg2 (y2 / youngest)) :poss (s8 / she)) :time (h2 / history)))
(t / thing :arg1-of (r / resemble-01 :arg2 (t2 / thing :arg1-of (p / precede-01 :arg2 (n / name :op1 (s / swimmer) :op2 (s2 / swimmer) :op3 (t3 / triatlonistu) :op4 (t4 / triatlonistu))))) :arg1-of (b / burn-01))
(s / shabby :arg1 (s2 / shop :mod (c / coffee) :name (n / name :op1 (' / '') :op2 ('2 / '') :op3 (c2 / coffee))) :arg2 (s3 / shop :mod (c3 / coffee) :arg0-of (h / have-03 :polarity - :arg1 (c4 / coffee :mod (g / good)) :arg1-of (c5 / contrast-01 :arg2 (h2 / have-03 :arg0 (s4 / shop) :arg1 (c6 / coffee) :duration (t / temporal-quantity :quant (N / N-A) :unit (y / year)))) :mod (o / only))))
(s / squeezed :arg1 (c / customer :quant (m / many) :arg1-of (i / include-91 :arg2 (c2 / customer :time (f / former)))) :arg2 (j / jamsberga :name (n / name :op1 (u / uil) :op2 (j2 / jamsberga) :op3 (j3 / jamsberga)) :arg1-of (s2 / share-01 :arg0 (h / he))) :mod (a / also))
(c / consider-01 :arg0 (c2 / couple) :arg1 (p / point :arg1-of (s / start-01 :arg1-of (p2 / possible-01 :polarity -)) :purpose (d / discuss-01 :arg1 (f / food) :location (d2 / depression)) :domain (c3 / couple)) :time (o / order-01 :arg0 (p3 / person :arg0-of (r / report-01))))
(s / say-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (p2 / person :name (n / name :op1 "Clinton") :arg0-of (h2 / have-org-role-91 :arg2 (p3 / person :arg0-of (a / advise-01 :arg2 (e / elect-01))))) :arg3 (a2 / advise-01 :arg0 (p4 / person)))) :arg1 (c / continue-01 :arg0 (a3 / and :op1 (p5 / person :arg0-of (h3 / have-org-role-91 :arg2 (h4 / hillary))) :op2 (p6 / person :arg0-of (h5 / have-org-role-91 :arg2 (k / kane)))) :arg1 (s2 / set-02 :arg0 (a4 / and) :arg1 (s3 / standard :mod (m / motive :mod (f / finance))))) :medium (s4 / statement :arg1-of (s5 / state-01 :arg0 (p7 / person :name (n2 / name :op1 "clinton" :op2 "jennifer" :op3 "palmieri")))))
(c / call-01 :arg0 (a / and :op1 (b / businessman :mod (n / new)) :op2 (a2 / attorneys :poss (h / he))) :arg1 (a3 / audit-01 :arg1 (s / service :mod (r / revenue) :mod (p / public))) :arg2 (r2 / reason :arg0-of (c2 / cause-01 :arg1 (r3 / refuse-01 :arg0 (h2 / he) :arg1 (p2 / publish :arg0 (h3 / he) :arg1 (r4 / returns :poss (h4 / he)))))))
(d / device :arg0-of (l / launch-01) :arg0-of (s / shoots :arg1 (c / candles :mod (r / roman)) :location (a / air)) :arg0-of (p / produce-01 :arg1 (e / explode-01 :arg1-of (b / bright-02))) :domain (m / measure-01 :mod (e2 / extreme)))
(o / or :op1 (r / retire-01 :arg0 (c / company :arg0-of (h / have-org-role-91 :arg1 (c2 / company :arg0-of (d / defend-01)) :arg2 (d2 / directors))) :arg2 (p / position :poss (a / and :op1 (p2 / person :arg0-of (h2 / have-org-role-91 :arg1 (p3 / party))) :op2 (p4 / person :arg0-of (h3 / have-org-role-91 :arg1 (p5 / party))) :op3 (p6 / person :arg0-of (h4 / have-org-role-91 :arg1 (p7 / party) :arg3 (l / lead-02 :arg0 (c3 / company))))))) :op2 (t / transfer-01 :arg1 (a2 / agree-01 :arg0 (p8 / party)) :arg2 (j / job :mod (a3 / another))))
(r / result-01 :arg1 (t / thing :mod (t2 / this)) :arg2 (f / future :poss (p / plant :arg1-of (g / go-on-15 :duration (s / several :op1 (t3 / temporal-quantity :quant (N / N-A) :unit (y / year)))))) :arg1-of (c / cause-01 :arg0 (a / and :op1 (s2 / strength :poss (d / dollar :mod (c2 / country :name (n / name :op1 "N-A")))) :op2 (t4 / thing :arg2-of (p2 / price-01 :arg1 (p3 / product :poss (p4 / plant)))) :time (l / late :degree (m / more)))))
(h / hope-01 :arg0 (p / person :arg0-of (r / represent-01 :arg1 (c / country :name (n / name :op1 "N-A")))) :arg1 (s / slow :domain (r2 / respond-01 :arg1 (r3 / request-01 :arg1 (c2 / comment-01 :arg0 (p2 / person))))))
(s / suggest-01 :arg0 (s2 / speeds :mod (n / new :degree (m / most))) :arg1 (s3 / sympathize-01 :arg0 (s4 / star :mod (m2 / massive) :quant (m3 / more)) :arg1 (s5 / slower) :compared-to (s6 / star :mod (s7 / small :degree (m4 / more)))))
(a / and :op1 (o / observe-01 :arg0 (w / we) :arg1 (p / person :mod (t / that) :arg0-of (p2 / prevail-01 :manner (s / slow)))) :op2 (o2 / observe-01 :arg0 (w2 / we) :arg1 (t2 / that) :mod (m / massive :degree (m2 / more) :mod (u / usual))) :op3 (s2 / say-01 :arg0 (p3 / person :arg0-of (h / have-org-role-91 :arg2 (h2 / head-of-state))) :arg1 (p4 / person :arg0-of (h3 / have-org-role-91 :arg2 (h4 / head-of-state))) :mod (u2 / usual) :mod (u3 / usual) :arg1-of (s3 / say-01 :arg0 (p5 / person))))
(i / information :arg0-of (c / cause-01 :arg1 (r / rate-entity-91 :arg1 (m / monetary-quantity :quant 2.6 :unit (e / euro)) :arg2 (t / temporal-quantity :quant (N / N-A) :unit (y / year)))))
(d / declining :arg1 (i / it) :arg2 (t / trend-01 :arg1 (t2 / trend-01 :arg2 (g / grow-01 :arg1 (i2 / inequality :mod (i3 / international))) :mod (i4 / international))))
(p / probable :domain (t / thing :mod (b / big :degree (m / most)) :mod (b2 / big :degree (m2 / most)) :arg1-of (m3 / mean-01 :arg2 (f / found-more :arg1 (a / artifacts :mod (g / gold) :quant (q / quantity :quant (q2 / quantity :quant (p2 / product-of :op1 (t2 / three) :op2 6) :unit (y / yuan :mod (r / renminbi)))))))) :mod (p3 / probable) :mod (p4 / probable))
(n / new-01 :arg1 (p / person :mod (a / another) :mod (c / country :name (n2 / name :op1 "N-A")) :mod (c2 / country :name (n3 / name :op1 "N-A")) :mod (a2 / another)))
(a / and :op1 (t / think-01 :arg0 (i / i) :arg1 (u / useful-05 :arg1 (d / discuss-01) :arg2 (w / we))) :op2 (p / provide-01 :arg0 (w2 / we) :arg1 (i2 / information :topic (e / event :topic (e2 / event :mod (a2 / amr-unknown))))))
(i / increase-01 :arg1 (s / size :poss (d / debt :mod (s2 / state))) :arg4 (r / record-breaking :arg1 (d2 / debt)))
(i / increase-01 :arg1 (p / percentage-entity :value (N / N-A) :arg3-of (i2 / include-91 :arg2 (p2 / percentage-entity :value (N2 / N-A) :time (c / current)))) :arg4 (p3 / percentage-entity :value (N3 / N-A)) :time (c2 / current) :arg1-of (e / estimate-01 :arg2 (p4 / percentage-entity :value (N4 / N-A) :arg1-of (i3 / include-91 :arg2 (p5 / percentage-entity :value (N5 / N-A))))))
(a / admit-01 :arg0 (l / lawyer) :arg1 (a2 / attend-02 :arg1 (r / right :arg0-of (h / house-01) :location (u / university)) :degree (l2 / little :degree (v / very))))
(m / multi-sentence :snt1 (a / action :arg1-of (s / single-02) :mod (j / just :polarity -) :domain (t / this)) :snt2 (t2 / target-01 :arg1 (f / fight-01 :arg1 (c / corruption))))
(a / and :op1 (m / meet-03 :arg0 (p / person :arg0-of (l / lead-02 :arg1 (a2 / and :op1 (p2 / person :arg0-of (l2 / lead-02 :arg1 (c / country :name (n / name :op1 "N-A")))) :op2 (p3 / person :arg0-of (l3 / lead-02 :arg1 (c2 / country :name (n2 / name :op1 "N-A"))))))) :arg1 (a3 / and :op1 (r / restore-01 :arg0 (p4 / person) :arg1 (h / hand)) :op2 (d / declare-01 :arg0 (p5 / person) :arg2 (h2 / hand)))) :op2 (d2 / declare-01 :arg0 (p6 / person) :arg2 (e / end-01 :arg1 (w / war-01 :arg0 (a4 / and :op1 (w2 / word) :op2 (s / sanction-02 :arg1 (e2 / economy))) :mod (o / official)) :mod (o2 / official))))
(a / and :op1 (a2 / accuse-01 :arg1 (p / person :arg0-of (h / have-org-role-91 :arg2 (o / official :mod (s / senior)))) :arg2 (p2 / person :arg0-of (h2 / have-org-role-91 :arg2 (o2 / official :mod (s2 / senior)))) :arg3 (p3 / person :arg0-of (h3 / have-org-role-91 :arg2 (o3 / official :mod (s3 / senior)))) :arg3 (p4 / person :arg0-of (h4 / have-org-role-91 :arg2 (o4 / official :mod (s4 / senior)))) :arg3 (p5 / person :arg0-of (h5 / have-org-role-91 :arg2 (o5 / official :mod (s5 / senior)))) :arg3 (p6 / person :arg0-of (h6 / have-org-role-91 :arg2 (o6 / official :mod (s6 / senior)))) :arg3 (p7 / person :arg0-of (h7 / have-org-role-91 :arg2 (o7 / official :mod (s7 / senior)))) :arg3 (p8 / person :arg0-of (h8 / have-org-role-91 :arg2 (o8 / official :mod (s8 / senior)))) :arg3 (p9 / person :arg0-of (h9 / have-org-role-91 :arg2 (o9 / official :mod (s9 / senior)))) :arg3 (p10 / person :arg0-of (h10 / have-org-role-91 :arg2 (o10 / official :mod (s10 / senior)))) :arg3 (p11 / person :arg0-of (h11 / have-org-role-91 :arg2 (o11 / official :mod (s11 / senior)))) :arg3 (p12 / person :arg0-of (h12 / have-org-role-91 :arg2 (o12 / official :mod (s12 / senior))))))
(t / tell-01 :arg0 (h / he) :arg1 (a / and :op1 (b / become-01 :arg1 (b2 / brand :name (n / name :op1 (r / rbs)) :mod (b3 / brand :name (n2 / name :op1 (r2 / rbs)))) :arg2 (b4 / brand :mod (i / invest-01) :poss (w / we)) :time (e / eventual)) :op2 (b5 / busy :domain (p / person :quant 1 :arg2-of (s / staff-01 :arg1 (w2 / we)))) :arg1-of (c / cause-01 :arg0 (b6 / become-01 :arg1 (w3 / we) :arg2 (b7 / bank :part-of (b8 / brand) :quant (m / more)) :time (n3 / now)))) :arg2 (p2 / person :name (n4 / name :op1 "N-A")))
(a / achieve-01 :arg0 (p / person :name (n / name :op1 "franki" :op2 "dettori")) :arg1 (w / win-01 :arg0 (p2 / person :quant 3000 :mod (c / country :name (n2 / name :op1 "N-A")) :mod (c2 / country)) :location (n3 / newmarket)))
(s / struggle-02 :arg0 (m / man :quant 3) :arg1 (r / reach-01 :arg0 (m2 / man) :arg1 (p / place :mod (s2 / safe-01))) :concession (c / continue-01 :arg1 (g / go-02 :arg0 (s3 / ship :poss (m3 / man)))))
(c / contrast-01 :arg1 (h / have-03 :arg0 (e / engine :part-of (b / boat)) :arg1 (b2 / blurring :mod (e2 / emergency))) :arg2 (t / take-01 :arg1 (e3 / engine) :arg3 (p / person :arg0-of (m / manage-02 :arg1 (b3 / boat) :time (o / overhauled :arg1 (b4 / boat)))) :manner (s / somehow)))
(m / multi-sentence :snt1 (a / and :op1 (w / wait-01 :arg1 (p / person :quant 1 :mod (l / last)) :location (c / country :name (n / name :op1 "N-A"))) :op2 (c2 / compete-01 :arg0 (r / rest :part-of (a2 / area :mod (t / this))) :mod (m2 / much :polarity - :degree (s / so)) :location (a3 / area :mod (t2 / this)))) :snt2 (a4 / and :op1 (m3 / much :degree (s2 / so)) :op2 (t3 / thing :quant-of (t4 / thing :arg1-of (e / expect-01) :mod (i / inflated)))))
(a / and :op1 (w / walk-01 :arg0 (h / he) :instrument (o / outside)) :op2 (r / ride-01 :arg0 (h2 / he) :arg1 (b / bike)))
(s / say-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (p2 / person :name (n / name :op1 "N-A") :arg0-of (h2 / have-org-role-91 :arg1 (c / country :name (n2 / name :op1 "N-A")) :arg2 (g / governor))) :arg2 (e / edwards))) :arg1 (a / and :op1 (c2 / contact-01 :arg0 (p3 / person :arg0-of (h3 / have-org-role-91 :arg1 (a2 / authority :arg1-of (l / local-02)) :arg2 (o / official))) :arg1 (p4 / person :arg0-of (h4 / have-org-role-91 :arg1 (a3 / authority :arg1-of (l2 / local-02)) :arg2 (o2 / official))) :manner (c3 / constant)) :op2 (g2 / go-01 :arg1 (a4 / aid-01) :arg4 (p5 / parishes :arg1-of (a5 / affect-01)) :time (a6 / already))))
(i / identify-01 :arg0 (a / and :op1 (p / person :arg0-of (h / have-rel-role-91 :arg1 (p2 / person :arg0-of (h2 / have-rel-role-91 :arg2 (c / child))) :arg2 (g / grandmother))) :op2 (p3 / person :arg0-of (h3 / have-rel-role-91 :arg1 (p4 / person) :arg2 (g2 / grandfather))) :op3 (p5 / person :arg0-of (h4 / have-rel-role-91 :arg1 (p6 / person) :arg2 (g3 / grandfather))) :op4 (p7 / person :arg0-of (h5 / have-rel-role-91 :arg1 (p8 / person) :arg2 (g4 / grandfather))) :op5 (p9 / person :arg0-of (h6 / have-rel-role-91 :arg1 (p10 / person) :arg2 (g5 / grandfather)))) :arg1 (h7 / he) :arg2 (p11 / philadelphia :mod (c2 / cbs)))
(a / and :op1 (b / be-located-at-91 :arg1 (b2 / boy) :arg2 (h / hospital) :prep-in (c / condition :arg1-of (c2 / critical-02))) :op2 (e / experience-01 :arg0 (b3 / boy) :arg1 (o / operation :quant (s / several))))
(f / find-02 :arg1 (s / shoot-02 :arg1 (c / child) :location (s2 / seat :mod (f2 / front) :part-of (c2 / car)) :location (n / next-to :op1 (a / and :op1 (c3 / condition :arg1-of (c4 / critical-02)) :op2 (r / report-01 :arg1 (s3 / station))))))
(a / and :op1 (m / meet-03 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (c / country :name (n / name :op1 "N-A")))) :arg1 (a2 / attempt-01 :arg0 (p2 / person) :arg1 (a3 / act-02 :arg0 (p3 / person)))) :op2 (s / silent :arg0 (b / bid-03) :arg1 (p4 / part :part-of (g / government-organization :arg0-of (g2 / govern-01)) :arg2-of (t / total-01)) :frequency (s2 / sometimes)))
(s / say-01 :arg0 (i / i) :arg1 (l / leave-11 :arg0 (a / and :op1 (p / person :arg0-of (h / have-org-role-91 :arg1 (t / team :mod (m / male) :poss (w / we)) :arg2 (m2 / member))) :op2 (p2 / person :arg0-of (h2 / have-org-role-91 :arg1 (t2 / team :mod (m3 / male) :poss (w2 / we)) :arg2 (m4 / member))) :op3 (p3 / person :arg0-of (h3 / have-org-role-91 :arg1 (t3 / team :mod (m5 / male) :poss (w3 / we)) :arg2 (m6 / member))) :op4 (p4 / person :arg0-of (h4 / have-org-role-91 :arg1 (t4 / team :mod (m7 / male) :poss (w4 / we)) :arg2 (m8 / member))) :op5 (p5 / person :arg0-of (h5 / have-org-role-91 :arg1 (t5 / team :mod (m9 / male) :poss (w5 / we)) :arg2 (m10 / member)))) :arg2 (p6 / person :arg0-of (h6 / have-rel-role-91 :arg1 (t6 / team) :arg2 (c / child)))))
(a / and :op2 (a2 / and :op1 (f / fortunate-01 :polarity - :arg2 (c / choose-01 :arg1 (w / word))) :op2 (f2 / fortunate-01 :polarity - :arg1 (t / thing) :arg2 (t2 / thing :arg1-of (s / say-01 :arg0 (h / he))) :degree (v / very))))
(m / multi-sentence :snt1 (e / establish-01 :arg0 (o / order :poss (m2 / ministry :topic (a / and :op1 (h / health) :op2 (s / society)))) :arg1 (a2 / and :op1 (t / thing :arg2-of (c / condition-01 :arg1 (e2 / extradite-01))) :op2 (c2 / condition-01 :arg1 (e3 / extradite-01))) :time (t2 / time :arg1-of (s2 / same-01))) :snt2 (4 / 45n :mode (i / interrogative)))
(a / and :op1 (a2 / age-01 :arg1 (p / person :arg0-of (h / have-org-role-91 :arg1 (f / family :arg1-of (h2 / have-org-role-91 :arg0 (p2 / person) :arg2 (m / member))) :arg2 (m2 / member))) :arg2 (t / temporal-quantity :quant (N / N-A) :unit (y / year))) :op2 (s / say-01 :arg0 (f2 / family :arg1-of (h3 / have-org-role-91 :arg0 (p3 / person) :arg2 (m3 / member))) :arg1 (k / kill-01 :arg1 (s2 / she) :time (p4 / plan-01 :arg0 (h4 / he) :arg1 (a3 / and :op1 (l / leave-15 :arg0 (h5 / he) :arg1 (c / country :mod (m4 / military))) :op2 (r / return-01 :arg1 (h6 / he) :arg4 (e / england)))) :mod (j / just))))
(a / admit-01 :arg0 (p / person :arg0-of (r / reside-01 :arg1 (r2 / region :mod (z / zaporizhzhya))) :arg0-of (r3 / reside-01 :arg1 (s / suspect-01 :arg1 (o / organize-01 :arg1 (a2 / attack-01 :arg0 (t / terrorist) :location (c / crimea)))))) :arg1 (g / guilt :arg0 (p2 / person)) :time (e / early :degree (m / more) :time (e2 / early :degree (m2 / more))))
(a / argue-01 :arg0 (a2 / authority :mod (c / country :name (n / name :op1 "N-A"))) :arg1 (a3 / argue-01 :arg0 (a4 / authority) :arg1 (r / recommend-01 :arg1 (p / possible-01 :arg1 (c2 / capable-01 :arg1 (s / state) :arg2 (d / demolition :arg0 (s2 / state) :arg1 (s3 / store :quant 72 :mod (h / home-made) :arg2-of (i / include-91 :arg1 (a5 / and :op1 (p2 / person :location (i2 / inside :op1 (a6 / and :op1 (p3 / person :arg0-of (s4 / sell-01 :arg1 (g / good))) :op2 (p4 / person :arg0-of (h2 / have-rel-role-91 :arg1 (p5 / person) :arg2 (c3 / child))) :op3 (p6 / person :arg0-of (h3 / have-rel-role-91 :arg1 (p7 / person) :arg2 (c4 / child))) :op4 (p8 / person :arg0-of (s5 / sell-01 :arg1 (t / tea :mod (e / energy)))) :op5 (p9 / person :arg0-of (s6 / sell-01 :arg1 (t2 / tea :arg1-of (c5 / cost-01 :arg2 (m / monetary-quantity :quant 50 :unit (c6 / cent)))) :arg3 (m2 / monetary-quantity :quant 50 :unit (c7 / cent))))))))))))))) :time (w / week :mod (t3 / this)) :location (c8 / court))
(s / seize-01 :arg1 (p / product :arg1-of (b / ban-01) :quant (a / about :op1 (m / mass-quantity :quant (N / N-A) :unit (t / ton)))) :arg1-of (i / include-91 :arg2 (p2 / product :arg1-of (b2 / ban-01) :quant (a2 / about :op1 (m2 / mass-quantity :quant (N2 / N-A) :unit (t2 / ton))))))
(f / find-02 :arg0 (p / panel :mod (t / thing :name (n / name :op1 "N-A"))) :arg1 (a / and :op1 (d / duty :mod (i / import-01) :mod (c / country :name (n2 / name :op1 "N-A")) :topic (a2 / and :op1 (p2 / paper) :op2 (r / refrigerator) :op3 (o / oil :mod (p3 / palm)))) :op2 (c2 / contradictions :arg1 (r2 / rule :poss (o2 / organization)))))
(s / say-01 :arg0 (w / we :arg0-of (l / let-01 :arg1 (a / apologize-01 :arg0 (w2 / we) :arg1 (a2 / and :op1 (g / government-organization :arg0-of (g2 / govern-01 :arg1 (c / country :name (n / name :op1 "N-A")))) :op2 (g3 / government-organization :arg0-of (g4 / govern-01 :arg1 (c2 / country :name (n2 / name :op1 "N-A")))) :op3 (g5 / government-organization :arg0-of (g6 / govern-01 :arg1 (c3 / country))) :op4 (g7 / government-organization :arg0-of (g8 / govern-01 :arg1 (c4 / country))) :op5 (g9 / government-organization :arg0-of (g10 / govern-01 :arg1 (c5 / country))))))) :arg1 (d / decide-01 :arg0 (a3 / authority :mod (r / resolution)) :arg1 (e / extend-01 :polarity - :arg0 (a4 / authority) :arg1 (c6 / contract-02) :arg2 (s2 / supply-01 :arg0 (a5 / authority) :arg1 (g11 / gas) :arg2 (c7 / country)))))
(e / evacuated :arg1 (t / they) :arg2 (p / place :mod (s / safe-01)) :arg1-of (q / quick-02))
(b / be-located-at-91 :arg1 (a / area :mod (s / south :mod (s2 / such)) :arg1-of (f / fill-01 :arg2 (s3 / side :quant 1 :part-of (m / mountain)))) :arg2 (a2 / area :mod (s4 / sleep-01) :arg1-of (f2 / fill-01 :arg2 (s5 / side :quant 1 :part-of (m2 / mountain)))) :arg1-of (f3 / fill-01 :arg2 (w / water)))
(c / contrast-01 :arg1 (r / ridiculous-02 :arg1 (w / wardrobe :arg0 (t / trust-01)) :mod (o / of-course)) :arg2 (p / possible-01 :arg1 (p2 / put-02 :arg1 (t2 / thing))))
(s / support-01 :arg0 (c / committee :arg0-of (h / have-org-role-91 :arg1 (c2 / city-district :name (n / name :op1 "N-A") :part-of (w / world)) :arg2 (e / executive))) :arg1 (t / thing :arg1-of (d / decide-01)) :arg1-of (a / activity-06 :arg0 (c3 / committee :mod (e2 / executive) :part-of (w2 / world))) :arg1-of (a2 / activity-06 :arg0 (c4 / committee :mod (e3 / executive) :part-of (w3 / world))))
(m / multi-sentence :snt1 (s / show-01 :arg0 (a / allah) :arg1 (w / way :direction (o / out) :part-of (s2 / situation :mod (t / this)))) :snt2 (c / conclude-01 :arg0 (h / he)))
(s / suspect-01 :arg1 (i / involve-01 :arg1 (s2 / shukür)) :arg2 (i2 / involve-01 :arg1 (s3 / shukür)))
(s / spend-01 :arg0 (h / he) :arg1 (c / career :poss (h2 / he) :arg1-of (i / include-91 :arg2 (c2 / career :poss (h3 / he)) :arg3 (m / most))))
(a / appear-02 :arg1 (r / ready-02 :arg1 (p / person :mod (c / country :name (n / name :op1 "N-A"))) :arg2 (a2 / and :op1 (r2 / responsible-03 :arg0 (p2 / person) :arg1 (r3 / responsible-03 :arg0 (p3 / person) :arg1 (s / society))) :op2 (a3 / attend-02 :arg0 (p4 / person) :arg1 (a4 / aspect :mod (e / environment) :poss (b / business :poss (p5 / person))) :degree (m / more)))))
(a / and :op1 (s / significant-02 :arg1 (e / economy :poss (e2 / enterprise :mod (i / industry) :mod (c / country)))) :op2 (e3 / ensured :arg0 (e4 / economy) :arg1 (l / life :poss (c2 / city :mod (w / whole))) :mod (a2 / actual)) :time (t / time :mod (c3 / country :name (n / name :op1 "N-A"))))
(s / say-01 :arg0 (p / person :arg0-of (h / have-rel-role-91 :arg1 (h2 / he) :arg2 (w / wife))) :arg1 (b / be-located-at-91 :arg1 (p2 / person :arg0-of (h3 / have-rel-role-91 :arg1 (m / man) :arg2 (w2 / wife))) :arg2 (o / ordinal-entity :value 1) :time (h4 / hit-02 :arg0 (b2 / blue) :arg1 (b3 / blue :quant 1990))))
(o / obligate-01 :arg1 (h / he) :arg2 (a / answer-01 :arg0 (h2 / he) :arg1 (s / steal-01 :arg1 (r / rule :quant (a2 / all) :mod (l / law)) :arg1-of (i / initiate-01 :arg0 (c / case-03 :arg1-of (c2 / criminal-03)) :prep-against (p / person :arg0-of (h3 / have-org-role-91 :arg2 (h4 / head-of-state)))))) :time (n / now))
(a / activity-06 :polarity - :arg0 (p / person :arg0-of (o / observe-01)) :location (b / border-01 :arg1 (p2 / person) :arg2 (b2 / border-01 :arg1 (p3 / person) :arg2 (c / crimea))))
(c / criticize-01 :arg1 (l / lens :mod (s / snapchat)) :time (p / past) :time (a / accuse-01 :arg1 (t / they) :arg2 (a2 / apply-02 :arg1 (a3 / apply-01 :arg1 (o / or :op1 (a4 / ad :arg1 (s2 / skin :arg1-of (d / dark-02) :poss (f / face))) :op2 (e / encourage-01 :arg1 (p2 / person :arg0-of (s3 / sing-01)) :arg2 (i / ideal :mod (b / beauty))))))))
(a / and :op1 (c / claim-01 :arg0 (t / team :mod (b / both)) :arg1 (a2 / and :op1 (c2 / claim-01 :arg0 (t2 / team :mod (b2 / both)) :arg1 (q / quarter-finals)) :op2 (d / determine-01 :arg0 (t3 / thing :arg2-of (r / result-01 :arg1 (g / game))) :arg1 (p / place :ord (o / ordinal-entity :value 1)) :location (g2 / group :consist-of (t4 / team :consist-of (p2 / person :quant 6 :arg0-of (h / have-org-role-91 :arg1 (t5 / team)))))))) :op2 (p3 / person :ord (o2 / ordinal-entity :value 2) :ord (o3 / ordinal-entity :value 2)))
(r / recommend-01 :arg1 (g / go-01 :arg1 (p / person :arg2-of (s / staff-01 :arg1 (m / medal))) :arg4 (a / and :op1 (h / high-02 :degree (m2 / more)) :op2 (h2 / high-02 :degree (m3 / more)) :op3 (p2 / pursue-01 :arg1 (g2 / gold)) :op4 (f / finish-07 :arg0 (p3 / person) :arg2 (f2 / finish-07) :frequency (s2 / sometimes)))) :arg2 (m4 / medal))
(e / engage-01 :arg1 (s / shop :name (n / name :op1 (t / the) :op2 (s2 / sheri) :op3 (s3 / sheri)) :arg0-of (t2 / take-01 :arg1 (p / place :mod (v / verb)))) :arg2 (s4 / sell-01 :arg1 (s5 / soap) :location (f / form :mod (c / cakes))))
(t / table :mod (s / swedish) :domain (t2 / table :mod (c / country :name (n / name :op1 "N-A")) :mod (e / especially)) :time (b / before :op1 (d / depressia :arg1 (t3 / table))))
(c / cause-01 :arg0 (s / step :mod (t / this)) :arg1 (a / anger-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg2 (d / director))) :arg1 (p2 / person :arg0-of (h2 / have-org-role-91 :arg2 (d2 / director))) :mod (g / great :degree (m / more :mod (e / even)))))
(a / add-01 :arg0 (c / code) :arg1 (a2 / adds :domain (c2 / code)) :time (n / now))
(p / possible-01 :arg1 (s / see-01 :arg1 (p2 / person :arg0-of (p3 / protest-01) :quant (s2 / some)) :arg2 (w / write-01 :arg0 (p4 / person) :arg1 (w2 / wall :poss (p5 / person :name (n / name :op1 "michael" :op2 "temer") :arg0-of (h / have-org-role-91 :arg2 (p6 / president))) :duration (t / temporary)))))
(s / say-01 :arg0 (h / he) :arg1 (a / and :op1 (r / recommend-01 :arg0 (i / i) :arg1 (v / visit-01 :arg0 (i2 / i) :arg1 (c / city :location (a2 / and :op1 (c2 / city :mod (i3 / isfahan)) :op2 (c3 / chirac :mod (c4 / chirac)) :op3 (y / yam :location (c5 / condition :mod (g / good))))))) :arg1-of (p / personal-02)) :op2 (s2 / say-01 :arg0 (h2 / he)))
(a / and :op1 (r / receive-01 :arg0 (i / industry) :arg1 (o / order-01 :arg0 (i2 / industry) :arg2 (t / tens :quant (m / multiple :op1 (m2 / mass-quantity :quant (N / N-A) :unit (g / gram)))) :arg1-of (l / long-03))) :op2 (k / know-01 :arg1 (m3 / money :mod (b / big) :arg1-of (k2 / know-02 :arg2 (a2 / amusement-park :name (n / name :op1 "N-A"))))))
(s / say-01 :arg1 (e / enjoy-01 :arg0 (i / i) :arg1 (i2 / it) :time (n / now) :mod (j / just)) :arg2 (p / person :name (n2 / name :op1 "N-A")))
(d / debranches :arg0 (i / it) :arg1 (j / jacobs :arg1 (i2 / it)))
(a / and :op1 (r / resume-01 :arg0 (p / person :location (n / north)) :arg1 (t / talk-01 :arg0 (p2 / person))) :op2 (s / stop-01 :arg0 (p3 / person) :arg1 (s2 / strike-01 :arg0 (p4 / person))))
(b / begin-01 :arg0 (i / index :mod (u / urban)) :arg1 (c / consult-01 :arg0 (i2 / index) :arg1 (a / around :op1 (p / process-01 :arg1 (m / metal)))) :time (d / date-entity :ord (o / ordinal-entity :value 5)))
(a / appear-01 :arg1 (a2 / and :op1 (f / find-01 :arg1 (f2 / fact :mod (n / new))) :op2 (f3 / fact :mod (n2 / new))) :arg1-of (c / cause-01 :arg0 (c2 / change-01 :arg0 (a3 / and) :arg1 (n3 / notion :mod (u / usual) :poss (m / military :name (n4 / name :op1 "N-A"))))))
(h / have-concession-91 :arg1 (p / promise-01 :arg2 (p2 / promise-01 :arg0 (p3 / person :arg0-of (o / own-01)) :arg1 (b / budget-01 :arg0 (p4 / person :arg0-of (o2 / own-01)) :arg1 (l / level :quant 6.7 :arg1-of (i / include-91 :arg2 (p5 / person :arg0-of (o3 / own-01)))) :arg2 (l2 / level :quant 100 :location (r / relative-position :op1 (v / value-interval :op1 6.7 :op2 100)))))) :arg2 (a / and :op1 (q / quality :poss (m / machine) :mod (d / dynamic)) :op2 (q2 / quality :poss (m2 / machine))))
(c / change-01 :arg0 (i / inspect-01 :arg1 (t / tax-01)) :arg1 (o / order :consist-of (t2 / tax-01 :arg2 (p / property))))
(d / deploy-01 :arg1 (6 / 63-year-old) :arg2 (r / represent-01 :arg0 (a / and :op1 (e / environment) :op2 (p / problem :topic (t / transport-01))) :arg1-of (s / special-02)) :time (n / now))
(a / and :op1 (g / graduated :arg0 (h / he) :arg1 (s / section :name (n / name :op1 (m / mgimo) :op2 (- / -rrb-) :op3 (-2 / -rrb-)) :mod (i / international) :arg0-of (-3 / -lrb- :arg1 (s2 / section :name (n2 / name :op1 (m2 / mgimo)) :mod (i2 / international))))) :op2 (s3 / serve-01 :arg0 (h2 / he) :location (e / embassy :mod (t / tokyo))) :location (t2 / tallinn :quant 1972 :mod (c / capital :mod (e2 / estonian))))
(v / volunteer-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg2 (p2 / president))) :arg1 (v2 / volunteer-01 :arg1 (i / item :arg1-of (p3 / private-03))) :time (a / and :op1 (m / meet-03 :arg0 (p4 / person) :arg1 (p5 / president)) :op2 (r / release-01 :arg1 (t / television :mod (s / state)))))
(c / contrast-01 :arg2 (t / transfer-01 :arg1 (t2 / task :mod (t3 / that)) :arg2 (p / person :name (n / name :op1 "Dmitry" :op2 "Medvedev"))))
(a / and :op1 (r / receive-01 :arg0 (w / woman :ord (o / ordinal-entity :value 4) :mod (c / country :name (n / name :op1 "N-A")) :mod (c2 / country :name (n2 / name :op1 "N-A"))) :arg1 (a2 / award-01 :arg1 (a3 / award :name (n3 / name :op1 "N-A")) :arg1-of (g / general-02))) :op2 (a4 / announce-01 :arg0 (w2 / woman) :arg1 (a5 / and :op1 (g2 / generously :arg0 (w3 / woman)) :op2 (g3 / good :degree (m / most) :arg1-of (i / include-91 :arg2 (t / time :quant (a6 / all)))))))
(k / know-01 :arg0 (y / you) :arg1 (g / good :degree (m / more) :domain (i / it) :beneficiary (y2 / you)))
(p / phone-number-entity :value (N / N-A))
(c / continue-01 :arg0 (p / person :arg0-of (r / rescuers)) :arg1 (s / save-02 :arg0 (p2 / person) :arg1 (p3 / person) :arg2 (r2 / raid-01 :arg1 (w / water) :location (a / and :op1 (a2 / and :op1 (a3 / accidents :mod (a4 / amite)) :op2 (a5 / accidents :mod (w2 / wilkinson)))) :op2 (a6 / accidents :location (s2 / southwest :part-of (s3 / strait))))))
(s / say-01 :arg0 (p / person :name (n / name :op1 "N-A")) :arg1 (r / report-01 :arg0 (p2 / person :arg0-of (o / observe-01) :arg1-of (n2 / near-02 :arg2 (l / livingston))) :arg1 (r2 / rain-01 :quant 13.75 :arg1-of (r3 / rain-01)) :time (m / morning :mod (f / friday))))
(o / offer-01 :arg0 (e / explode-01 :mod (t / this)) :arg1 (b / benefit-01 :arg1 (a / and :op1 (h / health) :op2 (s / school) :op3 (s2 / succeed-01 :arg0 (a2 / and))) :duration (l / long-03)))
(a / and :op1 (d / delay-01 :arg1 (s / strike-01 :mod (r / routine) :quant (a2 / almost :op1 13,000)) :time (e / end-01 :arg1 (d2 / date-entity :decade (N / N-A)))) :op2 (f / force-01 :arg1 (a3 / and :op1 (n / nurse) :op2 (c / consultants)) :arg2 (l / look-01 :arg0 (a4 / and)) :time (a5 / after :op1 (d3 / doctor :mod (s2 / strike-01 :arg0 (d4 / doctor) :arg1 (d5 / doctor))))))
(c / cause-01 :arg0 (c2 / culture :mod (p / politics) :arg1-of (p2 / present-01 :time (t / today))) :arg1 (p3 / person :arg0-of (v / vote-01) :arg1-of (s / spread-02 :arg1-of (w / wide-02))) :location (c3 / community :mod (r / religious-group :name (n / name :op1 "N-A"))) :time (t2 / today))
(s / say-01 :arg0 (p / person :name (n / name :op1 "jenny" :op2 "davidson") :arg0-of (h / have-rel-role-91 :arg1 (c / child :quant 2 :arg0-of (h2 / have-rel-role-91 :arg1 (c2 / child) :arg2 (m / mother))) :arg2 (m2 / mother))) :arg1 (h3 / have-03 :arg0 (w / woman) :arg1 (r / re-clothes :arg1 (w2 / woman)) :time (a / after :op1 (t / try-01 :arg0 (w3 / woman) :arg1 (a2 / and :op1 (w4 / weapon :arg1-of (i / internal-02) :poss (w5 / woman)) :op2 (g / go-out-17 :arg0 (w6 / woman))) :manner (a3 / anything :polarity -)))))
(t / talk-01 :arg0 (w / we) :arg1 (a / and :op1 (m / mizrachi :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (c / criminal-organization :name (n / name :op1 "N-A") :mod (n2 / new) :name (n3 / name :op1 (y / york-based)) :mod (n4 / new)) :arg2 (c2 / chief))) :arg2 (l / learn :mod (c3 / chief))) :op2 (l2 / learn-01 :arg0 (p2 / person) :arg1 (t2 / thing :manner-of (p3 / picked :arg1 (r / robberies :arg1-of (a2 / arm-01)))))))
(b / bedroom :arg1-of (d / dirty-02) :location (h / house :poss (h2 / house) :quant (m / multiple :op1 1)))
(a / and :op1 (d / devastate :arg0 (f / fire-02 :arg1 (p / power)) :arg1 (p2 / part :mod (c / certain) :part-of (m / mainland :part-of (s / strait)))) :op2 (c2 / cause-01 :arg0 (f2 / fire) :arg1 (d2 / die-01 :quant 4 :location (i / island :mod (m2 / madeira)))) :time (s2 / summer :mod (t / this)))
(s / say-01 :arg0 (p / person :name (n / name :op1 "N-A")) :arg1 (h / hope-01 :arg0 (w / we) :arg1 (a / and :op1 (r / risky :domain (s2 / situation :mod (t / this)) :purpose (g / go-02 :arg0 (s3 / situation) :arg4 (z / zone :mod (w2 / war)) :prep-as (a2 / and :op1 (s4 / satellite) :op2 (v / vastness :beneficiary (o / other))))) :op2 (p2 / pretend-01 :arg0 (p3 / person) :arg1 (m / make-01 :arg0 (p4 / person) :arg1 (c / choose-01 :mod (t2 / this)))))))
(h / have-concession-91 :arg1 (h2 / have-condition-91 :arg1 (t / try-01 :arg0 (i / i) :arg1 (s / stop-01 :arg0 (i2 / i) :arg1 (c / camera) :beneficiary (p / part :mod (n / next)))) :arg2 (t2 / try-01 :arg0 (i3 / i) :arg1 (f / find-01 :arg0 (i4 / i) :arg1 (t3 / thing :arg1-of (a / aspire-01) :topic (p2 / part :mod (n2 / next)))))) :arg2 (t4 / try-01 :arg0 (i5 / i) :arg1 (f2 / find-01 :arg0 (i6 / i) :arg1 (i7 / information :topic (a2 / and :op1 (a3 / age :poss (t5 / they)) :op2 (s2 / situation :mod (e / emotional))) :path (s3 / standing :arg1-of (n3 / near-02 :arg2 (s4 / store :mod (t6 / this) :quant (s5 / some))))))))
(t / think-01 :arg0 (i / i) :arg1 (s / story :poss (i2 / i) :domain (t2 / that)))
(p / protest-01 :arg0 (p2 / person :name (n / name :op1 "N-A") :arg1-of (a / ally-01 :arg2 (w / we :arg1-of (a2 / ally-01 :arg2 (w2 / we) :arg1-of (l / long-03))))) :mod (n2 / nesil))
(a / ally-01 :arg1 (a2 / and :op1 (n / nation :arg1-of (s / stable-03 :degree (m / most)) :location (c / continent :name (n2 / name :op1 "Africa"))) :op2 (e / economy :poss (c2 / country))) :arg2 (w / west) :time (b / before :op1 (n3 / now) :duration (t / temporal-quantity :quant (N / N-A) :unit (d / decade))))
(e / elect-01 :arg1 (a / and :op1 (p / person :arg0-of (h / have-org-role-91 :arg1 (c / country :name (n / name :op1 "ethiopia")) :arg2 (m / minister :mod (p2 / prime) :mod (n2 / new)))) :op2 (p3 / person :arg0-of (h2 / have-org-role-91 :arg2 (m2 / minister :mod (p4 / prime) :mod (n3 / new)))) :op3 (p5 / person :arg0-of (h3 / have-org-role-91 :arg2 (m3 / minister :mod (p6 / prime) :mod (n4 / new)))) :op4 (p7 / person :arg0-of (h4 / have-org-role-91 :arg2 (m4 / minister :mod (p8 / prime) :mod (n5 / new)))) :op5 (p9 / person :arg0-of (h5 / have-org-role-91 :arg2 (m5 / minister :mod (p10 / prime) :mod (n6 / new))))))
(o / order-01 :arg0 (s / she) :arg1 (a / and :op1 (- / -lrb- :quant 54 :mod (-2 / -lrb-)) :op2 (c / cheese :name (n / name :op1 (c2 / cream) :op2 (c3 / cheese) :op3 (s2 / sandwiches)))) :arg2 (a2 / and :op1 (-3 / -rrb- :quant 54 :mod (-4 / -rrb-)) :op2 (c4 / cheese :name (n2 / name :op1 (c5 / cream))) :op3 (s3 / sandwich :name (n3 / name :op1 (o2 / olive))) :op4 (s4 / sandwiches :name (n4 / name :op1 (o3 / olive) :op2 (o4 / olive)))))
(t / try-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg3 (j / judge-01))) :arg1 (c / catch-up-04 :arg1 (p2 / person) :arg2 (g / gilead)) :arg1-of (c2 / cause-01 :arg0 (t2 / try-01 :arg0 (p3 / person :arg0-of (h2 / have-org-role-91 :arg3 (j2 / judge-01))) :arg1 (g2 / gilead :arg0 (p4 / person) :arg1 (g3 / generation :mod (c3 / c) :mod (n / new :degree (m / most)) :arg0-of (i / improve-01 :arg1 (p5 / product-of :op1 (m2 / more-than :op1 (p6 / percentage-entity :value (N / N-A))) :op2 (p7 / person :arg0-of (h3 / have-rel-role-91 :arg2 (p8 / patient)))) :arg1-of (p9 / possible-01)))))))
(e / express-01 :arg0 (s / speech :location (l / location :name (n / name :op1 "michigan"))) :arg1 (p / problem))
(a / allow-01 :arg0 (p / person :mod (c / country :name (n / name :op1 "Israel"))) :arg1 (s / search-01 :arg0 (p2 / person) :arg1 (t / thing :arg1-of (c2 / call-01 :arg0 (p3 / person)))) :arg1-of (i / instead-of-91))
(r / rise-01 :arg1 (s / sell-01 :arg0-of (h / house-01)) :arg2 (r2 / rate-entity-91 :arg1 (m / monetary-quantity :quant 1 :unit (p / pound)) :arg2 (v / volume-quantity :quant (N / N-A) :unit (g / gallon))) :arg4 (r3 / rate-entity-91 :arg1 (m2 / monetary-quantity :quant 1 :unit (d / dollar)) :arg2 (v2 / volume-quantity :quant (N2 / N-A) :unit (g2 / gallon))))
(m / multi-sentence :snt1 (r / recommend-01 :arg1 (i / increase-01 :arg1 (t / thing :arg2-of (p / price-01)) :arg3 (r2 / rate-entity-91 :arg1 10 :arg2 (t2 / temporal-quantity :quant (N / N-A) :unit (y / year)))) :prep-in (f / fact)) :snt2 (s / say-01 :arg0 (p2 / person :arg0-of (d / develop-02)) :arg1 (d2 / do-02 :mode (i2 / interrogative) :arg0 (y2 / you) :arg1 (o / opportunity :mod (d3 / darbe)))))
(a / and :op1 (c / complain-01 :arg0 (w / we) :arg1 (a2 / and :op1 (c2 / complain-01 :arg0 (w2 / we) :mod (s / such)) :op2 (i / information :topic (a3 / and :op1 (b / bank) :op2 (b2 / bank :name (n / name :op1 (' / '))) :op3 (b3 / bank :name (n2 / name :op1 (c3 / company-based)))))) :mod (s2 / such)) :op2 (f / followers :arg0 (w3 / we) :arg1 (l / line :mod (c4 / complain-01))))
(y / yine)
(d / deal-01 :polarity - :arg0 (p / police) :arg2 (j / job :mod (a / another)) :duration (t / temporal-quantity :quant (N / N-A) :unit (d2 / day)))
(b / begin-01 :arg1 (f / face-01 :arg0 (p / person :arg0-of (s / struggle-02 :arg1 (f2 / finish-01 :arg0 (p2 / person) :arg1 (t / terrorism :arg1-of (f3 / finish-01 :arg0 (p3 / person))) :duration (m / more-than :op1 (t2 / temporal-quantity :quant (N / N-A) :unit (y / year)))))) :arg1 (d / day :time-of (f4 / fail-01 :arg1 (p4 / person) :arg2 (d2 / destroy-01 :arg0 (p5 / person) :arg1 (p6 / person :arg0-of (l / lead-02 :arg1 (p7 / person :arg0-of (l2 / lead-02) :arg1-of (o / organize-01)))) :manner (f5 / fight-01 :mod (t3 / this)))))))
(p / point :location-of (s / strand :mod (b / big) :location (b2 / bridge)))
(t / transfer-01 :arg1 (i / incident) :arg1-of (i2 / instead-of-91 :arg2 (i3 / incident)))
(p / possible-01 :arg1 (t / take-10 :arg0 (r / return-01 :arg1 (p2 / person :arg0-of (k / kill-01 :arg1 (p3 / person :arg0-of (m / mine-01))))) :arg1 (t2 / temporal-quantity :quant (N / N-A) :unit (m2 / month))))
(a / and :op1 (k / know-02 :arg1 (t / this :mod (a2 / all)) :arg2 (o / opine-01 :arg0 (p / public))) :op2 (s / say-01 :arg0 (p2 / person :name (n / name :op1 "cako") :arg0-of (h / have-org-role-91 :arg2 (m / minister))) :arg1 (a3 / and :op1 (p3 / person :arg0-of (h2 / have-org-role-91 :arg2 (m2 / minister))) :op2 (p4 / person :arg0-of (h3 / have-org-role-91 :arg2 (m3 / minister))) :arg0-of (h4 / have-org-role-91 :arg2 (m4 / minister)) :arg0-of (h5 / have-org-role-91 :arg2 (m5 / minister)) :arg0-of (h6 / have-org-role-91 :arg2 (m6 / minister)) :arg0-of (h7 / have-org-role-91 :arg2 (m7 / minister))) :location (a4 / and :op1 (m8 / media) :op2 (w / world :mod (b / business)) :mod (a5 / also))))
(g / give-01 :arg0 (t / turk :location (h / here)) :arg1 (p / person :arg0-of (h2 / have-rel-role-91 :arg1 (t2 / they) :arg2 (c / child))) :arg2 (p2 / person :arg0-of (h3 / have-rel-role-91 :arg1 (t3 / they) :arg2 (c2 / child))) :time (b / before :op1 (n / now) :quant (t4 / temporal-quantity :quant (N / N-A) :unit (y / year))) :degree (t5 / total))
(r / return-01 :arg1 (p / person :mod (c / country :name (n / name :op1 "N-A"))) :arg4 (c2 / canakkale :arg0 (p2 / person)) :time (n2 / now) :arg1-of (c3 / cause-01 :arg0 (a / and :op1 (t / thrace :arg1 (c4 / city) :arg2 (a2 / and :op1 (h / human) :op2 (s / society) :mod (o / other))))))
(p / possible-01 :arg1 (t / try-01 :arg0 (t2 / team :mod (f / football))) :time (m / meanwhile))
(e / extended :arg0 (p / person :arg0-of (h / have-org-role-91 :arg2 (p2 / president :mod (v / vice)))) :arg1 (f / friendship :poss (p3 / person)) :arg2 (f2 / fenerbahce))
(t / turn-down-05 :arg0 (i / it) :arg1 (c / cover-01 :arg1 (a / animal :arg0-of (f / filmed :arg1 (2 / 2-year-old)))))
(t / transfer-01 :arg1 (a / and :op1 (p / police) :op2 (h / health) :op3 (f / firefighter)) :arg1-of (i / instead-of-91 :arg2 (t2 / thing :arg2-of (t3 / tip-05))))
(a / assessed :domain (a2 / all))
(p / point :polarity - :arg1-of (c / cause-01 :arg0 (a / as-long-as :op1 (p2 / produce-01 :arg0 (u / union-02 :arg1 (o / opine-01)) :arg1 (t / thing :arg2-of (r / result-01)) :mod (a2 / actual)))))
(d / discover-01 :arg0 (a / and :op1 (c / child) :op2 (c2 / child)) :arg1 (b / baggage :arg1 (c3 / car)))
(b / bring-01 :arg0 (h / he) :arg1 (i / injure-01 :arg1 (c / car)) :arg2 (n / narince :arg1 (h2 / he)))
(a / and :op1 (a2 / announce-01 :arg0 (p / person :arg0-of (s / speak-01 :time (e / event :mod (p2 / press) :location (c / country :name (n / name :op1 "South" :op2 "Korea"))) :time (d / day :mod (l / last)) :location (c2 / city :name (n2 / name :op1 "Seoul") :arg0-of (h / have-org-role-91 :arg1 (c3 / country) :arg2 (c4 / capital))))) :arg1 (p3 / plan-01 :arg1 (l2 / launch-01 :arg1 (a3 / and :op1 (r / ram :name (n3 / name :op1 (6 / 6gb))) :op2 (m / memory :name (n4 / name :op1 (1 / 128gb)))))) :manner (o / official)) :op2 (n5 / note-01 :arg0 (p4 / person) :arg1 (m2 / model :quant 7)))
(s / set-up-03 :arg1 (c / captain :mod (h / hakan) :arg1-of (c2 / close-01 :arg0 (p / person :arg0-of (h2 / have-org-role-91 :arg1 (t / tax-01) :arg3 (i / inspect-01))) :arg3 (p2 / person :arg0-of (h3 / have-org-role-91 :arg1 (m / ministry :topic (c3 / control-01 :arg1 (t2 / tax))) :arg2 (b / board :topic (c4 / control-01 :arg1 (t3 / tax)))) :arg1-of (c5 / close-01 :arg0 (i2 / investigate-01 :arg0 (p3 / person :arg0-of (h4 / have-org-role-91 :arg1 (m2 / ministry :topic (c6 / control-01 :arg1 (t4 / tax))) :arg2 (b2 / board :mod (f / finance))))))))) :location (p4 / province :name (n / name :op1 "N-A") :mod (c7 / city)) :mod (a / also))
(a / and :op2 (p / possible-01 :arg1 (r / return-01 :arg1 (p2 / person :arg0-of (h / have-rel-role-91 :arg1 (w / we) :arg2 (p3 / patient))) :arg4 (l / life :arg1-of (n / normal-02) :poss (p4 / person))) :time (d / day :mod (n2 / next))))
(a / and :op1 (c / criticize-01 :arg0 (a2 / and :op1 (m / model :mod (o / original) :poss (c2 / city-district :name (n / name :op1 "N-A") :mod (o2 / original))) :op2 (m2 / model :name (n2 / name :op1 (s / stephanie)) :mod (o3 / original) :poss (c3 / company :name (n3 / name :op1 "N-A") :mod (o4 / original)))) :arg1 (a3 / and :op1 (j / jenner) :op2 (h / hadid))) :op2 (c4 / call-01 :arg0 (a4 / and) :arg1 (a5 / and) :arg2 (t / time-screaming)) :op3 (c5 / call-01 :arg0 (a6 / and) :arg1 (t2 / time-screaming) :arg2 (t3 / time-screaming)))
(s / say-01 :arg0 (p / person :name (n / name :op1 "N-A")) :arg1 (b / bad-07 :arg1 (s2 / situation) :degree (m / more :quant (m2 / much)) :condition (r / recover-01 :polarity - :arg1 (d / decide-01 :arg0 (g / government-organization :arg0-of (g2 / govern-01) :mod (f / federal))))))
(m / multi-sentence :snt1 (b / bordini :arg0 (p / person :name (n / name :op1 "donald" :op2 "j." :op3 "trump") :arg0-of (h / have-org-role-91 :arg2 (p2 / president))) :arg1 (p3 / person :arg0-of (h2 / have-org-role-91 :arg2 (p4 / president))) :arg2 (p5 / person :arg0-of (h3 / have-org-role-91 :arg2 (p6 / president)))) :snt2 (a / and :op1 (t / try-02 :arg1 (p7 / person :arg0-of (h4 / have-org-role-91 :arg2 (p8 / president)))) :op2 (t2 / try-02 :arg1 (p9 / person) :arg2 (c / court :mod (g / general-02))) :op3 (c2 / crash-01 :arg1 (- / -rrb- :mod (-2 / -lrb-)))))
(s / suspect-01 :arg1 (d / detain-01 :arg1 (p / person :arg2-of (s2 / suspect-01))) :arg2 (p2 / person :arg0-of (t / teach-01)) :location (s3 / school :arg1-of (c / close-01) :location (s4 / school :arg1-of (c2 / close-01))))
(a / arrest-01 :arg1 (p / person :name (n / name :op1 "N-A") :arg1-of (a2 / arrest-01 :location (e / erzurum :mod (e2 / erzurum)))))
(s / say-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg2 (c / chakirapeker :mod (' / '')))) :arg1 (i / indifference :domain (c2 / code :mod (t / this)) :mod (b / big :degree (m / most)) :location (b2 / boat)))
(i / include-01 :arg1 (a / and :op1 (p / person :prep-in (c / case :mod (b / both))) :op2 (p2 / person :arg1-of (c2 / convict-01 :arg2 (n / normal-02 :arg1 (p3 / person))))) :arg2 (p4 / person :arg0-of (d / drive-01)) :arg1-of (c3 / cause-01 :arg0 (n2 / normal-02 :arg1 (e / expect-01 :polarity - :arg0 (p5 / person) :arg1 (s / spread-02 :arg1 (h / highway) :location (h2 / highway) :time (s2 / shave-01))))))
(c / cause-01 :arg1 (d / discover-01 :arg1 (t / temperature :quant (f / few :mod (o / only)) :arg1-of (d2 / discover-01 :time (t2 / today))) :compared-to (w / world) :time (t3 / today)))
(a / award-01 :arg1 (a2 / award-01 :arg1 (a3 / award-01 :arg1 (a4 / adams))) :arg2 (c / coordinator :mod (g / good :degree (m / most))) :time (s / season :mod (s2 / season :ord (o / ordinal-entity :value 1) :part-of (s3 / season :quant 2013-14))))
(c / cut-02 :arg0 (g / group :consist-of (w / wood)) :arg1 (p / percentage-entity :value (N / N-A)) :time (y / year :mod (t / this)) :arg1-of (c2 / cause-01 :arg0 (p2 / pressure-01 :arg0 (p3 / pressure-01 :mod (n / negative) :location (m / market)))))
(a / ask-02 :arg0 (p / person :arg0-of (r / represent-01 :arg1 (d / doctor :arg0-of (a2 / assist-01)))) :arg1 (a3 / allow-01 :arg0 (u / union) :arg1 (d2 / dispute-01 :arg2 (b / business) :arg1-of (r2 / relate-01 :arg2 (d3 / dispute-01 :arg2 (c / contract-02) :mod (n / new))))) :arg2 (p2 / person :arg0-of (r3 / represent-01 :arg1 (d4 / doctor :arg0-of (a4 / assist-01)))))
(t / tell-01 :arg0 (p / person :name (n / name :op1 "N-A") :arg0-of (b / bbc)) :arg1 (a / associate-01 :arg1 (b2 / brand :name (n2 / name :op1 (r / rbs) :op2 (b3 / brand))) :arg2 (g / goal :mod (g2 / globe) :poss (b4 / bank))) :arg2 (s / scotland))
(c / cause-01 :arg0 (a / and :op1 (f / find-01 :arg1 (p / person :quant 5 :arg1-of (i / include-91 :arg2 (p2 / person :quant 4 :arg0-of (g / gymnasts))))) :op2 (f2 / find-01 :arg1 (p3 / person :quant 4 :mod (o / only) :arg0-of (h / have-org-role-91 :arg1 (t / team :name (n / name :op1 (m / marta))) :time (y / year :mod (l / last)))))) :arg1 (' / '' :arg1 (p4 / person :quant 5 :mod (f3 / final) :arg1-of (i2 / include-91 :arg2 (p5 / person :quant 4 :arg0-of (g2 / gymnasts))))))
(a / and :op1 (e / enhances :arg1 (s / strength :poss (b / body)) :arg2 (a2 / and :op1 (s2 / strength) :op2 (d / dissent-01) :op3 (c / coordinate-01 :arg1 (b2 / body)))) :op2 (t / thing :arg2-of (c2 / characteristic-02 :arg1 (b3 / body))) :op3 (t2 / thing :arg2-of (c3 / characteristic-02 :arg1 (a3 / angle :mod (m / mental)))))
(c / contain-01 :arg0 (r / report) :arg1 (t / thing :arg1-of (s / state-01) :arg1-of (f / follow-04)) :arg1-of (f2 / follow-01 :arg2 (s2 / state-01 :arg0 (a / and :op1 (c2 / community :mod (m / minority :mod (e / ethnic)) :mod (s3 / some)) :op2 (c3 / community :mod (e2 / especially)) :op3 (p / person :mod (y / young)) :op4 (p2 / person :mod (y2 / young)) :op5 (p3 / person :mod (y3 / young))) :arg1 (t2 / thing :arg0-of (e3 / evidence-01 :arg1 (i / issue-01 :arg0 (p4 / person) :arg1 (t3 / thing :arg0-of (e4 / evidence-01 :arg1 (i2 / issue-01 :arg0 (p5 / person))))))))))
(a / and :op1 (t / traveler :arg0 (c / country :name (n / name :op1 "N-A")) :arg1 (p / place :name (n2 / name :op1 (d / dirtiest)) :arg1-of (i / include-91 :arg2 (p2 / place :name (n3 / name :op1 (d2 / dirtiest)))) :quant (s / some))) :op2 (t2 / test-01 :arg0 (c2 / country) :arg1 (a2 / and :op1 (s2 / system :name (n4 / name :op1 (i2 / immune))) :op2 (s3 / system :name (n5 / name :op1 (g / gagged)))) :mod (s4 / serious)))
(a / approach :arg0 (a2 / aircraft :mod (m / military) :mod (a3 / almost)) :arg1 (s / sun) :location (l / level :mod (t / touch-01)) :location (i / image :mod (d / dramatic)) :location (i2 / image :mod (d2 / dramatic)))
(c / contrast-01 :arg2 (t / try-01 :arg0 (t2 / they) :arg1 (f / find-01 :arg0 (t3 / they) :arg1 (m / model :mod (n / new) :mod (g / generation :mod (n2 / new)) :arg1-of (i / inspire-01 :arg0 (n3 / nu :quant 2017 :mod (n4 / nu))))) :arg1-of (i2 / instead-of-91 :arg2 (t4 / try-01 :arg0 (a / and :op1 (p / person :arg1-of (f2 / fame-01)) :op2 (p2 / person :mod (n5 / naked)))))))
(s / say-01 :arg0 (s2 / system :name (n / name :op1 (w / wez))) :arg1 (o / offend-01 :arg0 (s3 / system :mod (p / pay-01 :arg3 (t / tax))) :arg1 (c / customer :mod (s4 / senior) :quant (s5 / some)) :mod (p2 / particular)))
(h / have-concession-91 :arg1 (r / reflect-01 :polarity - :arg1 (i / image :mod (t / this)) :arg2 (q / quality :poss (w / win-01)) :manner (a / accurate)) :arg2 (s / see-01 :arg0 (w2 / we) :arg1 (a2 / athletes :quant 2 :arg1-of (w3 / wonderful-03) :location (s2 / surface :location (s3 / swan)))))
(p / promote-02 :arg1 (t / that) :arg2 (i / i))
(a / and :op1 (b / be-located-at-91 :arg1 (i / i) :arg2 (h / hospital)) :op2 (h2 / have-concession-91 :arg1 (w / walk-01 :arg0 (i2 / i) :destination (a2 / and :op1 (p / person :quant 6) :op2 (p2 / person :quant 9) :op3 (y / yards :quant 15) :op4 (y2 / yards :quant 15))) :arg2 (s / say-01 :arg0 (t / they) :arg1 (i3 / it))))
(s / start-01 :arg1 (i / it) :manner (a / amr-unknown))
(a / and :op1 (c / call-01 :arg0 (i / i) :arg1 (p / process-02) :arg2 (p2 / process-02)) :op2 (w / watch-01 :arg0 (i2 / i) :arg1 (p3 / process-02)))
(c / cause-01 :arg0 (w / wish-01 :duration (l / long-03)) :arg1 (b / be-located-at-91 :arg1 (p / person :mod (c2 / country :name (n / name :op1 "N-A"))) :arg2 (w2 / we) :time (a / always)))
(p / protest-01 :arg0 (y / youth) :degree (f / full))
(t / think-01 :arg0 (h / he) :arg1 (g / genius :domain (h2 / he) :mod (t2 / tactical) :arg0-of (s / see-01 :polarity - :arg1 (p / possible-01 :arg1 (s2 / see-01 :arg0 (e / everyone))))))
(c / continue-01 :arg0 (c2 / country :name (n / name :op1 "N-A")) :arg1 (a / accuse-01 :arg0 (c3 / country) :arg1 (m / media :mod (n2 / news)) :arg2 (a2 / and :op1 (w / word :mod (e / every)) :op2 (a3 / act-02 :arg0 (m2 / media)))) :time (p / prior :op1 (h / hold-04 :arg1 (i / impasse) :location (p2 / pennsylvania :location (f / friday)))))
(a / advantage :mod (o / other) :prep-to (l / location :mod (n / new)))
(s / say-01 :arg0 (h / he) :arg1 (t / think-01 :arg0 (h2 / he) :arg1 (p / possible-01 :arg1 (c / close-06 :arg1 (w / we) :arg2 (w2 / war :name (n / name :op1 "N-A")) :time (a / as-soon-as :op1 (p2 / possible-01 :arg1 (m / move-01)))) :arg1-of (c2 / cause-01 :arg0 (a2 / and :op1 (s2 / sector :poss (p3 / person :arg0-of (l / lead-02 :arg1 (c3 / country :quant 2)))) :op2 (s3 / sector :part-of (c4 / country :quant 2))) :manner (f / fast :degree (v / very))))))
(p / pay-01 :arg1 (f / fee :mod (t / transfer-01) :mod (m / monetary-quantity :quant 750 :unit (e / euro))) :arg3 (p2 / person :arg0-of (p3 / play-01 :arg1 (c / club :name (n / name :op1 (p4 / porto))))) :arg3 (t2 / temporal-quantity :quant (N / N-A) :unit (y / year)))
(a / and :op1 (f / feö) :op2 (g / gulen) :op3 (g2 / gulen))
(a / assume-02 :arg0 (w / we) :arg1 (g / get-05 :arg1 (w2 / we) :arg2 (o / out-06 :arg1 (w3 / we) :arg2 (t / there) :degree (t2 / total))))
(h / have-org-role-91 :arg0 (p / person :name (n / name :op1 "Çelebi") :arg0-of (h2 / have-org-role-91 :arg1 (o / office :mod (b / branch)) :arg2 (o2 / office :mod (b2 / branch)))) :arg1 (p2 / person :arg2-of (s / suspect-01) :quant (a / about :op1 40) :arg2-of (s2 / suspect-01) :arg1-of (d / detain-01 :arg2 (c / custody))) :arg2 (o3 / office :mod (b3 / branch) :part-of (f / fight-01 :arg1 (c2 / crime-02 :mod (f2 / finance)))))
(d / determine-01 :arg1 (p / person :arg0-of (h / have-org-role-91 :arg1 (d2 / department :mod (i / intelligence :mod (s / security))) :arg2 (p2 / president))))
(a / arrest-01 :arg1 (a2 / and :op1 (p / person :quant 51) :op2 (p2 / person :quant 14) :op3 (p3 / person :quant 14 :arg0-of (h / have-org-role-91 :arg1 (p4 / police) :arg2 (p5 / police))) :op4 (p6 / person :quant 10 :arg0-of (h2 / have-org-role-91 :arg1 (p7 / police) :arg2 (p8 / police))) :op5 (p9 / person :quant 10 :arg0-of (h3 / have-org-role-91 :arg1 (p10 / police :mod (a3 / adana))))))
(s / struggle-02 :arg1 (a / and :op1 (e / end-01 :arg1 (t / terror :name (n / name :op1 (p / pkk)))) :op2 (b / begin-01 :arg1 (f / face-01 :arg1 (d / day :time-of (p2 / possible-01 :polarity - :arg1 (d2 / destroy-01 :arg0 (h / he) :arg1 (p3 / person :arg0-of (l / lead-02 :arg1 (o / organization))) :location (s2 / struggle-01 :mod (t2 / this)))))))) :duration (m / more-than :op1 (t3 / temporal-quantity :quant (N / N-A) :unit (y / year))))
(a / and :op1 (s / seize-01 :arg1 (p / pdy :name (n / name :op1 (/ / /) :op2 (/2 / /))) :arg2 (m / mass-quantity :quant (N / N-A) :unit (k / kilogram)) :time (o / operate-01 :arg1 (s2 / structuring :poss (b / businessman)))) :op2 (c / confiscate-01 :arg1 (p2 / pdy) :time (s3 / ship-01 :arg1 (s4 / ship-01) :arg2 (p3 / pennsylvania))))
(t / trap-01 :arg1 (p / person :arg2-of (s / suspect-01) :arg1-of (i / include-91 :arg2 (p2 / person :arg2-of (s2 / suspect-01))) :quant (m / multiple :op1 1)) :arg2 (a / avenue :arg1 (s3 / sovereignty)) :time (a2 / after :op1 (a3 / apprentice-01 :arg0 (p3 / person))))
(i / initiate-01 :arg1 (r / review-01 :arg1 (e / event)))
(t / target-01 :arg0 (p / person :arg0-of (w / work-01) :time (f / former)) :arg1 (a / and :op1 (w2 / woman :arg1-of (a2 / addict-01 :arg2 (l / life))) :op2 (p2 / person :arg1-of (a3 / addict-01 :arg2 (d / drug)))) :location (m / murder-01 :arg1 (p3 / person)))
(s / say-01 :arg0 (a / and :op1 (b / businessman) :op2 (d / dvd) :op3 (p / person :arg0-of (h / have-org-role-91 :arg2 (o / officer)))) :arg1 (w / work-01 :arg0 (a2 / and) :location (l / level :arg1-of (d2 / differ-02))) :arg1-of (c / conform-01 :arg2 (a3 / and :op1 (p2 / position :poss (a4 / and)) :op2 (s2 / support-01 :arg0 (a5 / and)))))
(e / evaluated :domain (t / this) :mod (a / all))
(s / say-01 :arg0 (h / he) :arg1 (r / release-01 :arg1 (p / person :quant 8) :mod (a / also) :arg1-of (s2 / say-01 :arg0 (h2 / he))))
(t / take-01 :mode (i / imperative) :arg0 (y / you) :arg1 (r / road) :arg3 (a / and :op1 (m / mountain :location (m2 / mountain :mod (w / wind))) :op2 (s / sea :arg1-of (b / black-04)) :op3 (e / experience-01 :arg1 (t2 / thrills :mod (n / new)) :location (a2 / and :op1 (r2 / route :name (n2 / name :op1 (a3 / adventures))) :op2 (r3 / route :name (n3 / name :op1 (a4 / adrenaline-filled)))) :location (a5 / and :op1 (r4 / route :name (n4 / name :op1 (a6 / adventures))) :op2 (r5 / route :name (n5 / name :op1 (a7 / adrenaline-filled)))))))
(s / show-01 :arg0 (a / attitude :poss (k / kenny)) :arg1 (p / possible-01 :polarity - :arg1 (r / repetition :arg0 (r2 / repetition :arg1 (r3 / record :quant 3 :mod (g / gold-winning) :poss (c / country :name (n / name :op1 "N-A")))) :arg1 (r4 / record :quant 3 :mod (g2 / gold-winning)))))
(k / kill-01 :quant 2 :location (s / shootout))
FAILED_TO_PARSE#Two concepts in a row.
(m / make-01 :arg0 (w / we) :arg1 (a / arrange-01 :arg1 (r / recover-02 :arg0 (y / you) :arg1 (t / thing :arg1-of (a2 / arrange-01 :arg0 (y2 / you))) :arg2 (y3 / you) :time (p / past :op1 (p2 / past))) :arg1-of (e / extensive-03)) :mod (a3 / also) :arg1-of (c / cause-01 :arg0 (a4 / and :op1 (d / develop-02 :arg1 (e2 / economy)) :op2 (i / increase-01 :arg1 (p3 / produce-01)) :op3 (p4 / provide-01 :arg1 (p5 / produce-01) :mod (k / kind :quant (a5 / all))) :prep-for (a6 / area :mod (e3 / employ-01 :mod (n / new))))))
(l / look-01 :arg0 (p / police) :arg1 (p2 / person :arg0-of (w / witness-01 :arg1 (c / collision :arg1 (v / vehicle :quant (f / few)) :location (h / highway) :time (e / early :op1 (d / date-entity :decade (N / N-A)))))) :time (e2 / event :arg1-of (s / seem-01) :arg1-of (s2 / seem-01)))
(p / possible-01 :mode (i / interrogative) :arg1 (a / avoid-01 :arg1 (e / event :name (n / name :op1 "N-A"))))
(s / share-01 :arg0 (p / person :arg0-of (r / research-01)) :arg1 (t / thing :arg2-of (r2 / result-01 :arg1 (m / model :topic (c / climate :mod (n / new)) :mod (n2 / new)))) :arg2 (a / article :mod (r3 / research-01) :mod (g / geophysical)))
(p / pressure-01 :arg1 (c / company :mod (e / energy)) :arg1-of (c2 / cause-01 :arg0 (d / decide-01 :arg0 (p2 / person :mod (c3 / country :name (n / name :op1 "N-A"))) :arg1 (l / leave-15 :arg0 (p3 / person) :arg1 (u / union-02 :arg1 (c4 / continent :name (n2 / name :op1 "N-A")) :arg2 (j / june))))))
(s / say-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg2 (g / galicia :mod (l / louis)))) :arg1 (w / way :manner-of (c / connect-01 :arg1 (w2 / we) :arg2 (f / family) :time (a / always)) :domain (c2 / connect-01 :arg1 (w3 / we) :arg2 (f2 / family) :time (a2 / always))))
(c / change-01 :arg1 (i / idea :topic (c2 / country :name (n / name :op1 "N-A"))) :time (s / since :op1 (f / festival :name (n2 / name :op1 "N-A"))))
(c / consensus :arg1-of (c2 / clear-06) :topic (d / determine-01 :arg1 (z / zemy :mod (c3 / common) :location (s / syria))))
(b / become-01 :arg1 (s / slash :op1 (b2 / brand :mod (g / globe)) :op2 (b3 / brand :name (n / name :op1 (r / rbs)))) :arg2 (b4 / brand :mod (g2 / globe)) :prep-as (b5 / bank))
(a / and :op1 (v / visit-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg2 (m / minister :mod (e / economy)))) :arg1 (f / facility) :time (t / today)) :op2 (i / include-91 :arg1 (p2 / person :quant 1 :arg1-of (i2 / include-91 :arg2 (p3 / person :ord (o / ordinal-entity :value 1)))) :arg2 (w / walk-01 :arg0 (p4 / person) :destination (b / bridge))))
(r / responsible-03 :arg0 (w / we :quant (a / all)) :arg1 (s / scale :mod (e / engineer-01) :mod (e2 / engineer-01) :arg1-of (u / use-01 :arg2 (c / construct-01 :arg1 (b / bridge :mod (t / this))) :quant (m / more-than :op1 30,000))) :arg1-of (p / personal-02))
(s / see-01 :arg1 (h / he) :arg2 (d / disappoint-01 :arg0 (h2 / home :mod (f / family)) :arg1 (h3 / home :mod (f2 / family)) :extent (l / less :compared-to (f3 / fire-01 :arg1 (d2 / drone :mod (g / gold))))))
(a / and :op1 (s / shaken :domain (p / person :name (n / name :op1 "raisman")) :arg1-of (c / cause-01 :arg0 (w / wait-01 :arg1 (p2 / person) :arg2 (t / trouble-01 :arg0 (p3 / person) :mod (f / final))))) :op2 (e / envision-01 :arg0 (a2 / and :op1 (t2 / thing :arg1-of (e2 / envision-01 :arg0 (p4 / person))) :op2 (t3 / thing :arg1-of (e3 / envision-01 :arg0 (p5 / person))) :time (o / once)) :arg1 (r / real :domain (p6 / person))) :op3 (s2 / set-02 :arg0 (a3 / and :op1 (p7 / person :mod (r2 / red)) :op2 (p8 / person :arg0-of (b / blue))) :arg1 (e4 / eye)))
(s / say-01 :arg0 (p / police) :arg1 (a / appear-02 :arg1 (r / rob-01 :polarity - :arg0 (p2 / person :quant 3 :mod (t / this) :arg0-of (m / murder-01))) :arg1-of (c / cause-01 :arg0 (r2 / receive-01 :polarity - :arg0 (a2 / adult :mod (a3 / aggressive)) :arg1 (c2 / confiscation :arg1 (o / or :op1 (v / victim) :op2 (m2 / monetary-quantity :quant 2,900 :unit (d / dollar))))))))
(c / create-01 :arg0 (f / firm :name (n / name :op1 (u / united) :op2 (k / kingdom)) :arg1-of (c2 / create-01 :arg0 (f2 / firm :name (n2 / name :op1 (b / brilique) :op2 (k2 / kingdom) :op3 (c3 / commerce) :op4 (c4 / commerce) :op5 (c5 / commerce) :op6 (c6 / commerce) :op7 (c7 / commerce) :op6 (c8 / commerce) :op7 (c9 / commerce))))) :arg1 (p / possible-01 :arg1 (r / reduce-01 :arg1 (r2 / risk-01 :mod (t / this)))))
(w / write-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (c / cabinet) :arg2 (m / minister) :time (f / former)) :arg0-of (h2 / have-org-role-91 :arg1 (c2 / cabinet) :arg2 (m2 / minister) :time (f2 / former)) :arg0-of (h3 / have-org-role-91 :arg1 (c3 / cabinet) :arg2 (m3 / minister) :time (f3 / former)) :arg0-of (h4 / have-org-role-91 :arg1 (c4 / cabinet) :arg2 (m4 / minister) :time (f4 / former)) :arg0-of (h5 / have-org-role-91 :arg1 (c5 / cabinet) :arg2 (m5 / minister) :time (f5 / former)) :arg0-of (h6 / have-org-role-91 :arg1 (c6 / cabinet) :arg2 (m6 / minister) :time (f6 / former)) :arg0-of (h7 / have-org-role-91 :arg1 (c7 / cabinet) :arg2 (m7 / minister) :time (f7 / former)) :arg0-of (h8 / have-org-role-91 :arg1 (c8 / cabinet) :arg2 (m8 / minister) :time (f8 / former))))
(s / strengthen-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg2 (p2 / personnel))) :arg1 (e / education :poss (p3 / person :arg0-of (v / vote-01))) :purpose (s2 / sanction-02 :arg0 (p4 / person) :arg1 (r / rule-03 :arg0 (c / cabinet))))
(r / race :arg1-of (i / include-91 :arg2 (r2 / race :arg1-of (f / free-04 :arg2 (4 / 4x200m)) :mod (b / byron))) :li 14)
(p / probable :domain (w / worry-01 :arg0 (t / thing :arg1-of (r / report-01)) :arg1 (i / i) :mod (p2 / probable) :time (i2 / incorporated :arg0 (t2 / they) :arg1 (f / fee :quant (s / series) :mod (n / nova) :mod (b / bossa)))))
(r / reach-01 :arg0 (s / sky) :arg1 (2 / 29-0) :manner (s2 / sky))
(a / and :op1 (c / clear-06 :arg1 (j / justices :arg1 (j2 / justices)) :degree (q / quite)) :op2 (r / race-02 :arg0 (s / series :mod (p / precedent :polarity -) :mod (p2 / precedent :polarity -)) :ord (o / ordinal-entity :value 39)))
(a / and :op2 (p / possible-01 :arg1 (i / interpreted :arg1 (i2 / it) :arg2 (l / level :arg1-of (h / high-02 :degree (m / more)) :consist-of (p2 / person :mod (y / young) :arg0-of (o / oppose-01 :arg1 (p3 / person :mod (o2 / other) :arg0-of (o3 / oppose-01)))) :arg1-of (w / wide-02)))))
(r / resemble-01 :arg1 (r2 / resemble-01 :arg1 (t / thing :arg2-of (t2 / title-01 :arg1 (o / olympic))) :arg2 (b / battalion :mod (f / fierce))) :arg2 (b2 / battalion :mod (f2 / fierce)))
(c / complain-01 :arg0 (p / person :quant (m / many)) :arg1 (u / use-01 :arg1 (l / land) :arg2 (p2 / pressure-01 :arg1 (c2 / coalition :arg0-of (r / rule-03)))) :quant (m2 / many))
(c / contrast-01 :arg2 (c2 / clear-06 :arg1 (s / stop-01 :polarity - :arg1 (r / rise-01 :arg1 (b / blood :poss (g / government-organization :arg0-of (g2 / govern-01 :arg1 (c3 / country :name (n / name :op1 "N-A")))))))))
(a / and :op1 (r / right-06 :arg1 (b / book :mod (l / late :degree (m / most)) :poss (p / person :arg0-of (h / have-org-role-91 :arg1 (c / country :name (n / name :op1 "N-A")) :arg2 (s / suey)))) :time (l2 / late :degree (m2 / most))) :op2 (t / tell-01 :arg0 (p2 / person :arg0-of (h2 / have-org-role-91 :arg2 (z / ziegelman))) :arg1 (' / '' :quant 97 :name (n2 / name :op1 (o / orchards) :op2 (o2 / orchards) :op3 (o3 / orchards))) :arg2 ('2 / '' :quant 97 :name (n3 / name :op1 (o4 / orchards) :op2 (o5 / orchards) :op3 97))) :op4 (d / describe-01 :arg0 (p3 / person) :arg1 (l3 / life) :arg2 (l4 / lives :location (f / flows :location (e / east :part-of (e2 / east))))))
(h / hesitant :arg0 (e / everybody) :arg1 (c / coffee))
(d / date :mod (c / case-03) :prep-to (a / and :op1 (p / property :poss (p2 / person :arg0-of (h / have-org-role-91 :arg2 (h2 / head-of-state)))) :op2 (p3 / person :arg0-of (h3 / have-org-role-91 :arg2 (m / merck))) :op3 (p4 / person :arg0-of (h4 / have-org-role-91 :arg2 (m2 / merck))) :op4 (p5 / person :arg0-of (h5 / have-org-role-91 :arg2 (m3 / merck))) :op5 (p6 / person :arg0-of (h6 / have-org-role-91 :arg2 (h7 / head-of-state))) :op6 (p7 / person :arg0-of (h8 / have-org-role-91 :arg2 (h9 / head-of-state))) :op7 (p8 / person :arg0-of (h10 / have-org-role-91 :arg2 (h11 / head-of-state)))))
(a / and :op1 (h / hiding :arg1 (t / trumps :mod (d / donald)) :arg2 (b / behind :op1 (s / spring :arg1-of (f / fake-02)))) :op2 (t2 / take-01 :arg1 (t3 / trumps) :direction (b2 / back) :direction (b3 / back)) :arg1-of (r / resemble-01 :polarity - :arg2 (t4 / this)))
(s / share-01 :arg0 (w / we) :arg1 (t / thing :arg1-of (o / offer-01) :mod (t2 / this)) :arg2 (t3 / tff))
(c / catch-01 :arg0 (p / police :arg1-of (c2 / come-01 :time (b / before :op1 (i / incident)))) :arg1 (t / terrorist :mod (t2 / this)))
(h / hear-01 :polarity - :arg0 (w / we) :arg1 (s / shift-01 :arg0 (p / person :arg0-of (h2 / have-org-role-91 :arg2 (m / minister :mod (p2 / prime)))) :arg1 (s2 / shift-01 :arg0 (p3 / person))) :mod (a / at-least))
(a / alcohol :domain (i / i))
(a / and :op1 (r / realize-01 :arg0 (h / he) :arg1 (m / meet-03 :arg0 (t / they) :arg1 (p / person :arg0-of (h2 / have-org-role-91 :arg1 (i / institution :mod (n / new) :arg1-of (p2 / public-02)) :arg2 (e / executive))) :purpose (f / future :poss (g / generation :mod (n2 / new))))) :op2 (s / say-01 :arg0 (h3 / he) :arg1 (d / divorced :arg1 (p3 / protocol) :arg2 (a2 / and :op1 (c / child) :op2 (p4 / person :mod (y / young))))))
(c / contrast-01)
(s / say-01 :arg0 (p / person :arg0-of (r / reside-01) :mod (m / mahalle)) :arg1 (l / leave-11 :arg0 (w / woman) :arg1 (h / house) :time (b / before :op1 (n / now) :quant (a / about :op1 (t / temporal-quantity :quant (N / N-A) :unit (m2 / month)))) :arg1-of (c / cause-01 :arg0 (a2 / and :op1 (r2 / repression :arg1 (p2 / person :arg0-of (h2 / have-rel-role-91 :arg1 (w2 / woman) :arg2 (w3 / wife)))) :op2 (c2 / coexist-01 :arg1 (w4 / woman) :arg2 (t2 / thing))))))
(s / send-01 :arg0 (w / we) :arg1 (p / person :arg0-of (r / represent-01 :arg1 (p2 / person :arg0-of (r2 / represent-01 :arg1 (p3 / person :arg0-of (r3 / represent-01) :mod (s2 / senior)))) :mod (s3 / senior))) :arg2 (p4 / person :arg0-of (r4 / represent-01 :arg1 (p5 / person :arg0-of (r5 / represent-01) :mod (s4 / senior)))) :duration (f / few :op1 (t / temporal-quantity :quant (N / N-A) :unit (y / year))))
(a / and :op1 (b / be-located-at-91 :arg1 (w / we) :arg2 (s / side :part-of (c / country :mod (t / this)))) :op2 (s2 / say-01 :arg0 (h / he) :arg1 (i / issue-02 :arg0 (i2 / issue-02 :arg0 (i3 / issue-02 :arg0 (c2 / club :mod (a2 / all)))))))
(s / say-01 :arg0 (p / person :name (n / name :op1 "N-A")) :arg1 (p2 / put-01 :polarity - :arg1 (a / animal :arg1-of (l / liberal-02 :time (y / year :mod (l2 / last)))) :arg2 (s2 / sell-01) :mod (a2 / also)))
(a / and :op1 (d / direct-01 :arg0 (p / person :arg0-of (l / lead-02 :arg1 (p2 / person :arg0-of (l2 / lead-02)))) :arg1 (p3 / property :arg1-of (o / organize-01)) :arg2 (p4 / property :location (p5 / pensilia))) :op2 (a2 / add-01 :arg0 (p6 / person) :arg1 (c / clear-06 :arg1 (o2 / organize-01 :arg1 (c2 / contract-02 :arg1 (c3 / contract-02 :quant (a3 / about :op1 150)) :location (c4 / country :name (n / name :op1 "United" :op2 "States"))) :manner (c5 / close) :arg1-of (e / equip-01 :arg2 (o3 / organize-01 :arg1 (c6 / contract)))))))
(a / and :op1 (t / thing :arg1-of (s / symbolize-01 :arg2 (p / parliament :mod (t2 / turkish)) :time (t3 / today)) :domain (t4 / trip-03 :arg0 (i / i) :arg1 (p2 / parliament :mod (t5 / turkish)) :time (t6 / today))) :op2 (b / be-located-at-91 :arg1 (w / we) :arg2 (h / hand :part-of (d / democracy :mod (t7 / turkish)))))
(a / and :op1 (c / close-01 :arg0 (i / i) :arg1 (d / door) :mod (a2 / again)) :op2 (t / take-01 :arg0 (i2 / i) :arg1 (d2 / door) :arg3 (v / village :mod (n / narinje))))
(l / live-01 :arg0 (h / he) :accompanier (p / person :name (n / name :op1 "jodi" :op2 "bowlin") :arg1-of (k / know-02 :arg2 (l2 / life :poss (h2 / he))) :arg1-of (k2 / know-02 :arg2 (l3 / life :poss (h3 / he))) :location-of (b / build-01 :arg0 (h4 / he) :arg1 (p2 / plastic :quant 150000 :mod (p3 / plastic)))) :location (f / facebook))
(c / consist-01 :arg1 (s / system :mod (t / this)) :arg2 (a / and :op1 (p / phase :quant 2 :arg1-of (m / major-02)) :op2 (p2 / phase :quant 2 :mod (s2 / small))))
(p / pay-01 :arg0 (w / we) :arg1 (m / monetary-quantity :arg2-of (c / cost-01) :mod (h / heavy)) :arg2 (n / nation) :time (n2 / night :mod (t / that)))
(a / and :op1 (b / break-01 :arg0 (w / we) :arg1 (r / record :mod (o / olympic))) :op2 (b2 / beat-01 :arg0 (w2 / we) :arg1 (c / champions :mod (w3 / world))))
(a / and :op1 (e / express-01 :arg0 (i / i) :arg1 (c / concern-01 :arg0 (p / plan-01 :arg1 (e2 / establish-01 :arg1 (a2 / and :op1 (f / fund :mod (t / this)) :op2 (l / law :arg1-of (d / draft-01) :topic (c2 / commission :mod (b / budget))))) :op2 (l2 / law :arg1-of (d2 / draft-01) :topic (c3 / commission :mod (b2 / budget))))) :time (c4 / come-12 :arg1 (p2 / plan-01 :arg1 (e3 / establish-01 :arg1 (a3 / and :op1 (f2 / fund-01) :op2 (l3 / law) :mod (t2 / this)) :topic (c5 / commission :mod (b3 / budget)))))) :op2 (s / say-01 :arg0 (h / he) :arg1 (a4 / and :op1 (c6 / concern-01 :arg0 (l4 / law)) :op2 (d3 / discuss-01 :arg1 (a5 / and) :manner (t3 / thorough)))))
(a / aim-01 :arg0 (f / fund-01) :arg1 (f2 / finance-01 :arg0 (f3 / fund-01) :arg1 (p / project :arg1-of (m / major-02))))
(k / kill-01 :arg1 (p / person :quant 2 :arg0-of (a / attack-01 :arg1 (c / car))) :prep-in (p2 / principle :mod (k2 / kahta) :mod (a2 / adiyaman)))
(r / recommend-01 :arg1 (a / and :op1 (s / spirit :mod (o / olympic)) :op2 (e / expand-01 :arg1 (h / heathrow))))
(c / case :quant 2 :arg1-of (r / resemble-01) :time (b / before :op1 (n / now) :duration (t / temporal-quantity :quant (N / N-A) :unit (y / year))) :arg0-of (s / show-01 :arg1 (r2 / responsible-01 :polarity - :arg0 (p / person) :arg1 (r3 / responsible-01))))
(a / and :op1 (p / possible-01 :arg1 (f / find-out-03 :arg0 (h / he))) :op2 (a2 / and :op1 (o / out-06 :arg1 (h2 / he) :arg2 (w / water)) :op2 (s / sake :polarity - :arg1 (w2 / water))))
(r / resemble-01 :arg1 (a / attempt-01) :arg2 (g / get-05 :polarity - :arg1 (a2 / attempt-01) :arg2 (v / vaccine) :time (e / ever)))
(i / interview-01 :arg1 (p / person :arg0-of (m / mr)) :location (r / round-05 :arg1 (c / compete-02 :arg3 (a / and :op1 (c2 / customer) :op2 (s / staff)) :location (i2 / inverness-shire))))
(p / presided :arg0 (p2 / putin :name (n / name :op1 (m / mr.) :op2 (p3 / putin))) :arg1 (p4 / period :ord (o / ordinal-entity :value 3) :time-of (p5 / possible-01 :arg1 (h / have-org-role-91 :arg0 (p6 / person :arg0-of (h2 / have-org-role-91 :arg2 (p7 / president))) :arg1 (p8 / person :arg0-of (h3 / have-org-role-91 :arg2 (p9 / president))) :arg2 (p10 / person :arg0-of (h4 / have-org-role-91 :arg2 (p11 / president))) :time (a / after :op1 (t / term :ord (o2 / ordinal-entity :value 2) :poss (m2 / mr.)))))) :mod (a2 / also))
(c / cause-01 :arg0 (p / play-01 :arg0 (a / and :op1 (p2 / person :mod (y / young)) :op2 (p3 / person :arg0-of (h / have-rel-role-91 :arg1 (p4 / person) :arg2 (c2 / child))))) :arg1 (s / sorry-01 :arg1 (p5 / person :quant (m / most)) :time (b / before :op1 (n / now) :duration (t / temporal-quantity :quant (N / N-A) :unit (y2 / year)))) :time (p6 / play-01 :arg0 (a2 / and :op1 (p7 / person :mod (y3 / young)) :op2 (p8 / person :arg0-of (h2 / have-rel-role-91 :arg1 (p9 / person) :arg2 (c3 / child))))))
(d / down :direction (d2 / down :op1 (s / slope)))
(g / go-02 :arg0 (w / we) :arg4 (t / time :mod (e / exciting :degree (r / really))))
(r / result-01 :arg1 (v / vote-01 :arg2 (p / person :arg0-of (h / have-org-role-91 :arg2 (p2 / president)))) :arg2 (p3 / person :arg2-of (s / suspect-01 :arg1 (o / or :op1 (p4 / person :quant 300 :arg2-of (s2 / suspect-01) :mod (g / gaming)) :op2 (p5 / person :arg2-of (s3 / suspect-01 :arg1 (i / identification :arg1-of (f / fake-02))))))))
(s / say-01 :arg0 (h / he) :arg1 (d / decide-01 :arg0 (i / institute :mod (e / elect-01)) :arg1 (c / charge-05 :polarity - :arg1 (a / allege-01 :arg1 (a2 / and :op1 (c2 / corruption) :op2 (a3 / activity-06 :mod (l / law :polarity -)) :beneficiary (a4 / and :op1 (p / person :arg0-of (r / represent-01 :arg1 (h2 / he))) :op2 (p2 / person :arg0-of (r2 / represent-01 :arg1 (h3 / he)))) :arg1-of (r3 / repeat-01))))))
(a / and :op1 (a2 / apply-02 :arg1 (t / technique :arg1-of (r / resemble-01)) :arg2 (l / line :name (n / name :op1 (f / fire)))) :op2 (p / possible-01 :arg1 (s / shoot :arg0 (p2 / person :arg0-of (b / betray-01)) :arg1 (w / weapon) :time (n2 / no-longer))) :time (a3 / approaching :arg1 (p3 / person :arg1-of (a4 / arm-01))))
(a / and :op1 (i / include-91 :arg1 (i2 / it) :arg2 (m / milk :arg1-of (g / general-02) :location (s / station))) :op2 (t / test-01 :arg0 (t2 / they) :arg1 (s2 / system :name (n / name :op1 (i3 / immune))) :arg2 (t3 / task :mod (t4 / this)) :mod (d / definite)))
(t / think-01 :arg0 (i / i) :arg1 (s / show-01 :arg0 (f / film) :arg1 (u / understand-01 :arg0 (w / we) :arg1 (t2 / thing :mod (g / great)))) :mod (a / also))
(r / return-05 :arg0 (a / aspect :quant 1 :poss (r2 / return-01 :mod (t / this))) :arg1 (a2 / aspect :mod (' / '') :arg1-of (s / sound-01 :arg2 (a3 / and :op1 (c / count-01 :arg1 (d / data :arg1-of (m / mean-01 :arg2 (d2 / data :quant 3 :mod (m2 / middle-aged))))) :op2 (w / work-01 :arg0 (m3 / man :quant 3 :arg1-of (i / include-91 :arg2 (m4 / man :quant 3 :mod (m5 / middle-aged))) :arg0-of (w2 / work-01 :location (j / jonny :op1 (v / value-interval :op1 42 :op2 42)))))))))
(r / reject-01 :arg0 (c / court :mod (c2 / country :name (n / name :op1 "N-A"))) :arg1 (o / offer-01 :arg1 (d / demolition :location (c3 / camp :mod (r2 / refugee) :mod (c4 / country :name (n2 / name :op1 "N-A"))))))
(c / create-01 :arg0 (t / this) :arg1 (p / pressure-01 :quant (m / much :degree (t2 / too))))
(a / announce-01 :arg0 (p / person :name (n / name :op1 "N-A") :arg0-of (h / have-org-role-91 :arg2 (t / trumps))) :arg1 (a2 / allege-01 :arg1 (' / '' :arg1 (p2 / person))) :arg1-of (c / cause-01 :arg0 (t2 / thing :arg1-of (a3 / allege-01) :mod ('2 / ''))))
(c / contrast-01 :arg1 (r / receive-01 :arg0 (p / person :name (n / name :op1 (m / mr.) :op2 (r2 / rosenthal))) :arg1 (o / order :mod (u / usual)) :time (s / still)) :arg2 (r3 / receive-01 :arg0 (a / and :op1 (f / figure :mod (b / bacon)) :op2 (e / egg) :op3 (c2 / cheese)) :arg1 (c3 / change-01 :quant (s2 / some)) :frequency (s3 / sometimes) :frequency (s4 / sometimes) :frequency (s5 / sometimes)))
(a / and :op1 (s / say-01 :arg0 (s2 / store :name (n / name :op1 (j / juice)) :arg1-of (l / local-02)) :arg1 (s3 / store :name (n2 / name :op1 (b / breakfast)) :arg1-of (l2 / local-02))) :op2 (s4 / say-01 :arg0 (a2 / and) :arg1 (w / want-01 :arg0 (a3 / and) :arg1 (s5 / sell-01 :arg0 (a4 / and) :arg1 (s6 / store)))))
(m / multi-sentence :snt1 (e / explain-01 :arg0 (p / person :name (n / name :op1 "mr" :op2 "coe")) :arg1 (t / thing :arg0-of (c / cause-01 :arg1 (d / desire-01 :arg0 (a / and) :arg1 (w / write-01 :arg0 (a2 / and) :arg1 (i / issue-02 :mod (t2 / this))))))) :snt2 (s / say-01 :arg1 (t3 / time :time-of (b / become-01 :arg1 (f / food) :arg2 (c2 / center :beneficiary (p2 / person :mod (c3 / country :name (n2 / name :op1 "N-A"))))))))
(s / say-01 :arg0 (c / couple :arg0-of (w / write-01 :arg1 (b / book))) :arg1 (t / throw-01 :polarity - :arg1 (c2 / concept) :arg2 (o / out) :time (e / ever)) :arg1-of (s2 / say-01 :arg0 (w2 / write-01 :arg0 (c3 / couple) :arg1 (b2 / book))))
(a / and :op1 (h / have-03 :arg0 (f / family :arg1-of (h2 / have-org-role-91 :arg0 (d / dropshipper) :arg2 (m / member))) :arg1 (t / thing :arg1-of (p / pay-01 :arg3 (t2 / tax)) :arg1-of (a2 / average-03)) :arg3 (a3 / about :op1 (p2 / percentage-entity :value (N / N-A)))) :op2 (a4 / about :op1 (p3 / percentage-entity :value (N2 / N-A) :quant-of (r / rate :mod (t3 / tax-01) :arg1-of (c / combine-01)))) :time (c2 / current) :location (y / york :mod (n / new)))
(c / contrast-01 :arg2 (a / and :op1 (a2 / arrest-01 :arg1 (p / person :quant 9)) :op2 (a3 / arrest-01 :arg1 (p2 / person :quant 9) :arg2-of (i / include-01 :arg1 (a4 / and :op1 (c2 / chamber :arg1-of (i2 / include-91 :arg2 (c3 / chamber :part-of (a5 / and :op1 (p3 / person :arg0-of (h / have-org-role-91 :arg2 (p4 / president :mod (c4 / commerce)))) :op2 (p5 / person :quant 7)))))))) :op2 (r / release-01 :arg1 (p6 / person :quant 7)) :op3 (r2 / release-01 :arg1 (c5 / condition :topic (c6 / control-01 :arg1 (c7 / criminal-03))))) :location (h2 / hand :part-of (o / other)))
(m / monetary-quantity :quant 5.5 :unit (d / dollar :mod (c / country :name (n / name :op1 "N-A"))))
(c / close-01 :arg1 (v / vessel :mod (t / this)) :arg4 (t2 / traffic :mod (s / sea)) :duration (n / nearly :op1 (t3 / temporal-quantity :quant (N / N-A) :unit (y / year))) :arg1-of (c2 / cause-01 :arg0 (c3 / construct-01 :arg1 (t4 / threshold :arg1-of (c4 / conduct-01 :arg0 (i / istanbul :name (n2 / name :op1 (i2 / istanbul) :op2 (m / metropolitan) :op3 (m2 / metropolitan) :op4 (i3 / ibb) :op5 (- / -rrb-) :op6 (-2 / -rrb-) :op7 (-3 / -rrb-))))))))
(c / curious-01 :arg0 (t / this) :arg1 (a / amr-unknown))
(d / distribute-01 :arg1 (t / thing :arg1-of (d2 / donate-01)) :arg2 (v / victim))
(s / say-01 :arg0 (h / he) :arg1 (i / important :domain (a / and :op1 (c / country :poss (w / we)) :op2 (h2 / health :poss (h3 / he))) :beneficiary (h4 / he)) :arg2 (h5 / he))
(c / cause-01 :arg0 (a / and :op1 (l / lose-02 :arg1 (p / property)) :op2 (l2 / lose-02 :arg1 (p2 / property)) :arg0-of (c2 / cause-01 :polarity - :arg1 (t / tsunami))) :arg1 (a2 / afterwards :quant (s / short)))
(a / arrive-01 :arg1 (p / person :arg0-of (h / have-rel-role-91 :arg1 (p2 / person :arg0-of (h2 / have-rel-role-91 :arg1 (p3 / person :arg0-of (h3 / have-rel-role-91 :arg1 (p4 / person :arg0-of (h4 / have-rel-role-91 :arg1 (p5 / person :arg0-of (h5 / have-rel-role-91 :arg1 (p6 / person :arg0-of (h6 / have-rel-role-91 :arg1 (p7 / person :arg0-of (h7 / have-rel-role-91 :arg1 (p8 / person :arg0-of (h8 / have-rel-role-91 :arg1 (p9 / person :arg0-of (h9 / have-rel-role-91 :arg1 (p10 / person :arg0-of (h10 / have-rel-role-91 :arg1 (p11 / person :arg0-of (h11 / have-rel-role-91 :arg1 (p12 / person :arg0-of (h12 / have-rel-role-91 :arg1 (p13 / person :arg0-of (h13 / have-rel-role-91 :arg1 (p14 / person :arg0-of (h14 / have-rel-role-91 :arg1 (p15 / person :arg0-of (h15 / have-rel-role-91 :arg1 (p16 / person :arg0-of (h16 / have-rel-role-91 :arg1 (p17 / person) :arg2 (b / boyfriend))) :arg2 (b2 / boyfriend))) :arg2 (b3 / boyfriend))) :arg2 (k / kemal)))))))))))))))))))))))))) :time (d / date-entity :dayperiod (N / N-A))))
(s / say-01 :arg0 (i / information :source (u / url-entity :value (p / plotters))) :arg1 (b / begin-01 :arg1 (s2 / shooting :arg1-of (d / direct-02)) :time (d2 / during :op1 (b2 / begin-01 :arg1 (r / read-01 :arg0 (t / they) :arg1 (s3 / sala)) :quant (s4 / short))) :arg1-of (d3 / direct-02)))
(r / research-01 :arg1 (d / die-01 :arg1 (p / person :mod (y / young))))
(t / think-01 :arg0 (w / we) :arg1 (a / act-02 :arg1-of (i / internal-02) :domain (t2 / this)))
(s / signal-07 :arg1 (m / monitor-01 :arg1 (s2 / society) :mod (o / of-course)) :mod (a / also))
(a / and :op1 (l / live-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (v / victim) :arg2 (m / member))) :mod (a2 / also)) :op2 (l2 / live-01 :arg0 (p2 / person :arg0-of (h2 / have-org-role-91 :arg1 (v2 / victim) :arg2 (m2 / member)))))
(b / bronze :arg1 (b2 / bronze) :location (s / seismic-quantity :quant (N / N-A) :arg1-of (c / come-03 :arg2 (c2 / country :name (n / name :op1 "South" :op2 "Africa") :arg0-of (d / defeat-01 :arg1 (c3 / country :quant 54-14))) :mod (s2 / simple))))
(d / detain-01 :arg1 (p / person :quant 18 :arg2-of (s / suspect-01) :arg1-of (d2 / detain-01 :location (o / office :poss (p2 / person :arg0-of (p3 / prosecute-01))))) :arg2 (a / arrest-01 :arg1 (p4 / person)) :time (a2 / after :op1 (t / transfer-01 :arg1 (t2 / thing :arg1-of (s2 / state-01 :arg0 (p5 / person))) :arg2 (d3 / division :mod (c / criminal-03) :mod (s3 / sultans)))))
(a / address-01 :arg0 (a2 / and :op1 (p / person :quant 22 :arg0-of (h / have-org-role-91 :arg3 (j / judge-01))) :op2 (p2 / person :arg0-of (p3 / prosecute-01))) :arg2 (p4 / proceeding-02 :mod (s / search-01)) :arg1-of (p5 / possible-01))
(a / and :op1 (a2 / arrest-01 :arg1 (p / person :arg0-of (h / have-org-role-91 :arg2 (c / colonel)) :arg0-of (h2 / have-org-role-91 :arg2 (c2 / colonel)) :arg0-of (h3 / have-org-role-91 :arg2 (c3 / colonel)))) :op2 (d / detain-01 :arg1 (p2 / person) :location (a3 / ankara)) :op3 (d2 / detain-01 :arg1 (p3 / person) :location (a4 / ankara :location-of (d3 / decide-01 :arg0 (p4 / person) :arg1 (c4 / catch-up-04 :arg1 (p5 / person) :arg2 (o / operation :prep-against (a5 / and :op1 (p6 / person :arg0-of (h4 / have-org-role-91 :arg2 (h5 / head-of-state))) :op2 (p7 / person :arg0-of (h6 / have-org-role-91 :arg2 (h7 / head-of-state))) :op3 (p8 / person :arg0-of (h8 / have-org-role-91 :arg2 (h9 / head-of-state))) :op4 (p9 / person :arg0-of (h10 / have-org-role-91 :arg2 (h11 / head-of-state))) :op5 (p10 / person :arg0-of (h12 / have-org-role-91 :arg2 (h13 / head-of-state))))))))))
(' / ' :arg0 (i / i) :degree (t / total) :arg1-of (m / mean-01 :arg2 (a / as-long-as :op1 (o / opine-01 :arg0 (i2 / i) :arg1 (m2 / matter) :mod (a2 / actual)))))
(a / and :op1 (c / condemn-01 :arg0 (r / republic :mod (r2 / religious-group :name (n / name :op1 "N-A"))) :arg1 (a2 / attempt-01 :arg0 (c2 / coup)) :time (h / hour :ord (o / ordinal-entity :value 1) :part-of (a3 / attempt-01 :arg0 (c3 / coup)))) :op2 (c4 / case :arg1-of (s / same-01 :arg2 (s2 / side :part-of (a4 / and :op1 (p / person :mod (c5 / country :name (n2 / name :op1 "N-A"))) :op2 (g / government-organization :arg0-of (g2 / govern-01))) :time (a5 / always)))))
(a / and :op1 (g / go-02 :arg0 (i / i) :arg4 (n / nephew :poss (i2 / i)) :time (t / then)) :op2 (l / look-01 :arg0 (i3 / i) :arg1 (c / car) :location (c2 / car :poss (i4 / i))))
(s / say-01 :arg0 (g / guy) :arg1 (p / put-01 :polarity - :arg0 (i / i) :arg1 (l / luggage :poss (i2 / i)) :arg2 (i3 / i)) :mod (a / also))
(c / create-01 :arg0 (a / addict-01) :arg1 (r / rate-entity-91 :arg1 700 :arg2 (t / temporal-quantity :quant (N / N-A) :unit (y / year)) :arg1-of (d / develop-02 :arg3 (p / platform :arg1-of (s / succeed-01 :degree (h / high))))))
(a / and :op1 (v / vacuum :domain (r / retire-01 :arg0 (p / person :arg0-of (r2 / retire-01))) :mod (a2 / also)) :op2 (t / try-01 :arg0 (p2 / person :mod (m / matt)) :arg1 (f / filled :arg0 (p3 / person))) :mod (a3 / also))
(p / possible-01 :arg1 (b / be-located-at-91 :arg1 (a / alcoa :location (p2 / portland)) :arg2 (r / risk-01 :arg2 (b2 / business :quant 2000))))
(f / file-01 :arg1 (s / sue-02) :arg3 (r / rate-entity-91 :arg1 (d / day :quant (N / N-A)) :arg2 (t / temporal-quantity :quant (N2 / N-A) :unit (d2 / day))) :time (a / after :op1 (r2 / respond-01 :arg0 (c / candidate :poss (p / person :arg0-of (h / have-org-role-91 :arg1 (f2 / family :name (n / name :op1 "N-A")) :arg2 (p2 / president)))) :arg1 (a2 / and :op1 (p3 / person :arg0-of (o / own-01 :arg1 (g / gun)) :arg0-of (o2 / own-01 :arg1 (g2 / gun))) :op2 (p4 / person :arg0-of (s2 / support-01 :arg1 (g3 / gun))) :op3 (p5 / person :arg0-of (s3 / support-01 :arg1 (g4 / gun))) :op4 (p6 / person :arg0-of (s4 / support-01 :arg1 (g5 / gun))) :op5 (p7 / person :arg0-of (h2 / have-org-role-91 :arg3 (j / judge-01))) :op6 (p8 / person :arg0-of (h3 / have-org-role-91 :arg3 (j2 / judge-01))) :op7 (p9 / person :arg0-of (h4 / have-org-role-91 :arg3 (j3 / judge-01))) :op7 (p10 / person :arg0-of (h5 / have-org-role-91 :arg3 (j4 / judge-01)))))))
(e / evidence-01 :arg1 (o / operate-01 :arg1 (d / drug)))
(i / issue-01 :arg0 (d / delegation :poss (c / court)) :arg1 (w / warrant :beneficiary (a / and :op1 (d2 / defendant :mod (t / top)) :op2 (g / gulen :name (n / name :op1 (f / fethullah) :op2 (g2 / gulen) :op3 (e / ekinci) :op4 (o / omar) :op5 (g3 / gamsoncu) :op6 (g4 / gamsoncu) :op7 (g5 / gamsoncu))))))
(a / and :op1 (t / terminate-01 :arg0 (a2 / and) :arg1 (c / car)) :op2 (l / leave-11 :arg0 (a3 / and) :arg1 (c2 / car) :manner (h / happy)))
(m / mention-01 :arg0 (t / thing :arg1-of (m2 / mention-01 :time (o / open-01 :arg1 (c / crisis)))) :arg1 (t2 / thing :arg1-of (b / border-01 :arg2 (a / and :op1 (s / syria) :op2 (p / plane :mod (m3 / military) :mod (c2 / country :name (n / name :op1 "N-A"))) :arg0-of (s2 / shoot-02 :arg1 (p2 / plane :mod (m4 / military) :mod (c3 / country :name (n2 / name :op1 "N-A"))))))) :prep-in (t3 / thing :arg1-of (s3 / state-01 :time (o2 / open-01 :arg1 (c4 / crisis)))))
(c / clear-06 :arg1 (c2 / consensus :polarity - :domain (g / ground :mod (c3 / common) :location (c4 / country :name (n / name :op1 "Syria")))))
(c / contrast-01 :arg2 (m / move-01 :arg1 (p / person :name (n / name :op1 "Dmitry" :op2 "Medvedev") :arg1-of (a / ally-01 :arg2 (c2 / country :name (n2 / name :op1 "N-A")) :manner (c3 / close)) :mod (a2 / another))))
(a / and :op1 (b / be-temporally-at-91 :arg1 3 :arg2 (a2 / after :op1 (b2 / become-01 :arg1 (h / he) :arg2 (m / minister :mod (p / prime))))) :op2 (b3 / become-01 :arg1 (h2 / he) :arg2 (m2 / minister :mod (p2 / prime)) :time (b4 / before :op1 (r / return-01 :arg1 (h3 / he) :arg4 (p3 / president) :mod (a3 / again)))) :li 3)
(s / secret :mod (s2 / secret) :mod (s3 / secret))
(f / future :poss (p / picciuto :mod (s / shaky)) :location-of (b / burden-01 :arg1 (r / recalls) :arg2 (r2 / recalls)))
(a / and :op1 (h / hansford :arg0 (a2 / and :op1 (h2 / he) :op2 (p / person :arg0-of (h3 / have-org-role-91 :arg1 (f / family :arg1-of (d / disable-01)) :arg2 (m / member)))) :arg1 (a3 / and :op1 (h4 / he) :op2 (p2 / person :arg0-of (h5 / have-org-role-91 :arg1 (f2 / family :arg1-of (d2 / disable-01)) :arg2 (m2 / member))))) :op2 (p3 / person :arg0-of (h6 / have-org-role-91 :arg1 (f3 / family :arg1-of (d3 / disable-01)) :arg2 (m3 / member))))
(m / multi-sentence :snt1 (p / put-01 :arg0 (p2 / person :arg0-of (w / work-01) :mod (e / emergency)) :arg1 (t / truck :mod (l / large)) :arg2 (a / and :op1 (p3 / person :arg0-of (w2 / work-01) :mod (e2 / emergency)) :op2 (p4 / person :arg0-of (w3 / work-01) :mod (e3 / emergency)) :op3 (p5 / person :arg0-of (w4 / work-01) :mod (e4 / emergency)))) :snt2 (l2 / lead-01 :arg0 (t2 / thing :arg1-of (s / say-01 :arg0 (h / he)))))
(c / contrast-01 :arg1 (e / evacuated :domain (p / person :arg0-of (r / reside-01))) :arg2 (d / dominate-01 :arg0 (p2 / person :quant 2 :mod (c2 / churches)) :arg1 (w / water) :time (m / moment) :mod (a / also)))
(p / possible-01 :arg1 (s / surveyed :arg0 (t / thing :arg1-of (r / report-01)) :arg1 (a / and :op1 (d / defraud-01 :arg1 (a2 / and :op1 (i / immigrate-01) :op2 (w / welfare))) :op2 (d2 / defraud-01 :arg1 (a3 / and :op1 (i2 / immigrate-01) :op2 (w2 / welfare)))) :time (t2 / time :arg1-of (s2 / same-01)) :purpose (p2 / prevent-01 :arg0 (t3 / thing) :arg1 (u / use-01 :arg1 (u2 / use-01 :arg1 (r2 / record-01)) :arg2 (c / control-01 :arg1 (d3 / drug))) :mod (a4 / also)) :time (t4 / time :arg1-of (s3 / same-01))))
(v / vote-01 :arg0 (a / anyone :arg0-of (v2 / vote-01 :arg1 (p / person :quant 2))) :arg1 (v3 / vote-01 :arg0 (a2 / anyone) :arg1 (p2 / prevent-01 :arg1 (p3 / parmaklar?na :mod (p4 / permanent)))) :time (u / until :op1 (a3 / after :op1 (i / implement-01 :arg1 (i2 / ink)))))
(s / say-01 :arg0 (h / he) :arg1 (d / decide-01 :arg0 (a / and :op1 (c / camp :mod (e / elect-01)) :op2 (p / person :arg0-of (r / represent-01 :arg1 (r2 / rahman))) :op3 (p2 / person :arg0-of (r3 / represent-01)) :op4 (p3 / person :arg0-of (r4 / represent-01)) :op5 (p4 / person :arg0-of (r5 / represent-01))) :arg1 (h2 / have-03 :arg0 (a2 / and) :arg1 (a3 / and :op1 (a4 / activity-06 :arg0 (a5 / and)) :op2 (a6 / activity-06 :arg0 (a7 / and) :mod (l / law :polarity -))))) :arg1-of (s2 / say-01 :arg0 (h3 / he)))
(m / multi-sentence :snt1 (t / tell-01 :arg0 (h / he) :arg1 (p / post :mod (h2 / huffington)) :arg2 (a / and :op1 (h3 / hair :domain (i / i)) :op2 (s / sakal :arg0 (i2 / i) :arg1 (l / large :degree (v / very)) :arg2-of (e / except-01 :arg1 (l2 / large :degree (v2 / very) :domain (i3 / i)))))) :snt2 (t2 / think-01 :arg0 (i4 / i) :arg1 (t3 / think-01 :arg0 (i5 / i) :arg1 (s2 / same-01))))
(m / multi-sentence :snt2 (c / content-01 :arg1 (p / person :quant 1 :arg0-of (u / use-01)) :arg2 (p2 / person :mod (o / other)) :degree (v / very)))
(s / say-01 :arg0 (i / i) :arg1 (f / feel-01 :arg0 (i2 / i) :arg1 (t / thing :manner-of (f2 / feel-01 :arg0 (i3 / it) :arg1 (t2 / thing :manner-of (f3 / feel-01 :arg0 (i4 / it) :arg1 (t3 / thing :manner-of (f4 / feel-01 :arg0 (i5 / it) :arg1 (t4 / thing :manner-of (f5 / feel-01 :arg0 (i6 / it) :arg1 (t5 / thing :manner-of (f6 / feel-01 :arg0 (i7 / it) :arg1 (t6 / thing :manner-of (f7 / feel-01 :arg0 (i8 / it) :arg1 (t7 / thing :manner-of (f8 / feel-01 :arg0 (i9 / it) :arg1 (t8 / thing :manner-of (f9 / feel-01 :arg0 (i10 / it) :arg1 (t9 / thing :manner-of (f10 / feel-01 :arg0 (i11 / it) :arg1 (t10 / thing :manner-of (f11 / feel-01 :arg0 (i12 / it) :arg1 (t11 / thing :manner-of (f12 / feel-01 :arg0 (i13 / it) :arg1 (t12 / thing :manner-of (f13 / feel-05 :arg1 (i14 / it)))))))))))))))))))))))))))
(a / and :op1 (h / hailed :arg1 (r / release-01 :arg1 (p / person :arg0-of (r2 / return-01 :arg1 (p2 / person) :arg4 (r3 / relieve-01))))) :op2 (h2 / hail-02 :arg1 (l / life :poss (p3 / person)) :arg2 (l2 / life :poss (p4 / person))))
(m / multi-sentence :snt1 (i / implement-01 :arg0 (t / this) :arg1 (n / n?z :mod (? / ???))) :snt2 (s / slightly :mode (i2 / interrogative) :degree (s2 / slight)))
(s / study-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (g / government-organization :name (n / name :op1 "Ministry" :op2 "of" :op3 "Defence")) :arg2 (g2 / general :mod (g3 / general)))) :arg1 (i / intelligence) :mod (a / also))
(k / know-01 :arg1 (a / and :op1 (k2 / know-01 :arg0 (p / person :mod (c / country :name (n / name :op1 "N-A"))) :arg1 (4 / 4-0 :arg0 (a2 / and :op1 (p2 / person :arg0-of (l / lead-02 :arg1 (c2 / country :name (n2 / name :op1 "N-A")))) :op2 (p3 / person :quant (2 / 2-0) :location (c3 / country))) :time (a3 / after :op1 (u / unbeaten :arg1 (p4 / person)))) :time (n3 / now)) :op2 (b / be-located-at-91 :arg1 (p5 / person) :arg2 (u2 / under :op1 (t / track)) :time (a4 / after :op1 (u3 / unbeaten :arg0 (p6 / person) :arg1 (t2 / track :prep-with (p7 / place :poss (w / we) :location (g / group)) :ord (o / ordinal-entity :value 1)))))))
(m / multi-sentence :snt1 (b / bullshit-01 :mode (i / interrogative) :domain (t / this)) :snt2 (b2 / bam :mode (i2 / interrogative)))
(b / be-located-at-91 :arg1 (p / person :arg0-of (w / work-01)) :arg2 (p2 / person :arg0-of (w2 / work-01)) :time (n / now))
(l / legalize-01 :arg1 (w / we) :arg1-of (c / complete-02))
(u / use-01 :arg0 (v / verb :time (f / former) :mod (e / even)) :arg1 (i / infringe-01 :arg1 (l / lights)) :location (h / here))
(s / say-01 :arg0 (h / he) :arg1 (d / determined-02 :polarity - :arg0 (p / person :name (n / name :op1 "mr." :op2 "rodriguez") :arg0-of (h2 / have-org-role-91 :arg2 (m / müdavimlerin) :time (f / former))) :arg1 (t / thing :arg1-of (d2 / differ-02)) :time (l / late :op1 (t2 / temporal-quantity :quant (N / N-A) :unit (m2 / month)) :degree (m3 / more))))
(c / contrast-01 :arg2 (a / and :op1 (c2 / coffee :mod (n / now)) :op2 (b / begin-01 :arg1 (c3 / coffee) :time (d / day :mod (l / last) :part-of (c4 / coffee)) :arg1-of (i / instead-of-91 :arg2 (t / testifying :arg1 (c5 / coffee) :arg2 (ç / çiya :mod (n2 / new) :arg0-of (c6 / choose-01 :arg1 (t2 / thing :name (n3 / name :op1 "N-A")))))))))
(a / and :op1 (t / think-01 :mode (i / interrogative) :arg0 (y / you) :arg1 (t2 / there) :time (b / before)) :op2 (b2 / be-located-at-91 :arg1 (y2 / you) :arg2 (c / country)))
(m / multi-sentence :snt1 (a / and :op1 (' / '' :mode (i / interrogative) :frequency (r / rate-entity-91 :arg3 (t / temporal-quantity :quant (N / N-A) :unit (d / day))) :frequency (r2 / rate-entity-91 :arg3 (t2 / temporal-quantity :quant (N2 / N-A) :unit (d2 / day)))) :op2 (u / understand-01 :polarity - :arg0 (i2 / i) :arg1 (t3 / thing :arg1-of (s / say-01 :arg0 (h / he)))) :frequency (r3 / rate-entity-91 :arg3 (t4 / temporal-quantity :quant (N3 / N-A) :unit (d3 / day)))) :snt2 (h2 / haz?rlarlard :mode (i3 / interrogative) :arg1-of (s2 / say-01 :arg0 (h3 / he))) :snt3 (s3 / say-01 :arg0 (h4 / he) :arg1 (a2 / amr-unknown :arg1-of (s4 / say-01 :arg0 (h5 / he)))))
(w / write-01 :arg0 (h / he) :arg1 (t / thing :arg1-of (a / answer-01) :arg1-of (w2 / write-01 :arg0 (h2 / he))) :manner (d / dismay :arg0 (h3 / he) :arg1 (a2 / answer-01)))
(a / agree-01 :arg0 (w / we) :arg1 (t / thing :arg2-of (p / price-01 :arg1 (t2 / thing :arg2-of (p2 / price-01))) :location (r / relative-position :op1 (e / east :part-of (s / strait)))))
(a / and :op1 (v / value-01 :arg1 (m / monetary-quantity :quant 150 :unit (p / pound) :arg1-of (i / include-91 :arg2 (s / station :mod (s2 / season :mod (n / new)) :mod (s3 / season :mod (n2 / new))))) :arg2 (s4 / station :mod (s5 / season :mod (n3 / new))) :location (a2 / area) :time (p2 / present)) :op2 (c / create-01 :arg0 (p3 / person :arg0-of (s6 / study-01)) :arg1 (a3 / and :op1 (s7 / space :quant (b / between :op1 30 :op2 30)) :op2 (d / discount :ord (o / ordinal-entity :value 2) :ord (o2 / ordinal-entity :value 2) :ord (o3 / ordinal-entity :value 2) :ord (o4 / ordinal-entity :value 2) :ord (o5 / ordinal-entity :value 2))) :time (a4 / announce-01 :arg1 (a5 / and))))
(w / write-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg2 (p2 / person :arg1-of (e / expert-01)))) :arg1 (c / cut-02 :arg1 (p3 / presence) :location (t / thing :arg1-of (r / report-01 :arg0 (p4 / person :arg1-of (e2 / expert-01))))))
(m / multi-sentence :snt1 (d / detain-01 :arg1 (f / figure :mod (f2 / finance)) :location (h / head :part-of (d2 / directorate :mod (d3 / directorate)))) :snt2 (q / question-01 :arg1 (u / ube)))
(c / contrast-01 :arg2 (s / signal-07 :arg1 (i / incident) :quant (l / lot) :time (i2 / incident)))
(a / alg?layamad?k :arg0 (w / we))
(m / multi-sentence :snt1 (m2 / mavi :mode (i / interrogative) :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (p2 / political-party :name (n / name :op1 "N-A") :mod (a / ak) :part-of (p3 / parliament)) :arg2 (m3 / member))) :arg1 (p4 / person :arg0-of (h2 / have-org-role-91 :arg1 (p5 / parliament) :arg2 (m4 / member)) :arg0-of (h3 / have-org-role-91 :arg1 (p6 / parliament) :arg2 (m5 / member)) :arg0-of (h4 / have-org-role-91 :arg1 (p7 / parliament) :arg2 (m6 / member)) :arg0-of (h5 / have-org-role-91 :arg1 (p8 / parliament) :arg2 (m7 / member)) :arg0-of (h6 / have-org-role-91 :arg1 (p9 / parliament) :arg2 (m8 / member)) :arg0-of (h7 / have-org-role-91 :arg1 (p10 / parliament) :arg2 (m9 / member)) :arg0-of (h8 / have-org-role-91 :arg1 (o / organization) :arg2 (m10 / member)) :arg0-of (h9 / have-org-role-91 :arg1 (o2 / organization) :arg2 (m11 / member)) :arg0-of (h10 / have-org-role-91 :arg1 (o3 / organization) :arg2 (m12 / member)) :arg0-of (h11 / have-org-role-91 :arg1 (o4 / organization) :arg2 (m13 / member)) :arg0-of (h12 / have-org-role-91 :arg1 (o5 / organization) :arg2 (m14 / member)) :arg0-of (h13 / have-org-role-91 :arg1 (o6 / organization) :arg2 (m15 / member)) :arg0-of (h14 / have-org-role-91 :arg1 (o7 / organization) :arg2 (m16 / member)) :arg0-of (h15 / have-org-role-91 :arg1 (o8 / organization) :arg2 (m17 / member)) :arg0-of (h16 / have-org-role-91 :arg1 (o9 / organization) :arg2 (m18 / member)) :arg0-of (h17 / have-org-role-91 :arg1 (o10 / organization) :arg2 (m19 / member)) :arg0-of (h18 / have-org-role-91 :arg1 (o11 / organization) :arg2 (m20 / member)) :arg0-of (h19 / have-org-role-91 :arg1 (o12 / organization) :arg2 (m21 / member)))) :snt2 (s / seek-01 :arg1 (a2 / aç?kgöz :arg1 (a3 / aç?kgöz))))
(b / be-located-at-91 :arg1 (a / and :op1 (p / person :quant 14 :arg1-of (i / include-91 :arg2 (p2 / person :quant 30 :arg0-of (h / have-org-role-91 :arg2 (p3 / professor))))) :op2 (p4 / person :arg0-of (h2 / have-org-role-91 :arg2 (p5 / professor))) :op3 (p6 / person :arg0-of (h3 / have-org-role-91 :arg2 (p7 / professor))) :op4 (p8 / person :arg0-of (h4 / have-org-role-91 :arg2 (p9 / professor))) :op5 (p10 / person :arg0-of (h5 / have-org-role-91 :arg2 (p11 / professor))) :op6 (p12 / person :arg0-of (h6 / have-org-role-91 :arg2 (p13 / professor))) :op6 (p14 / person :arg0-of (h7 / have-org-role-91 :arg2 (p15 / professor))) :op7 (p16 / person :arg0-of (h8 / have-org-role-91 :arg2 (p17 / professor)))) :arg2 (c / custody))
(a / and :op1 (k / kill-01 :arg1 (a2 / and :op1 (p / person :arg0-of (h / have-org-role-91 :arg2 (p2 / president :mod (v / vice)))) :op2 (p3 / person :arg0-of (h2 / have-org-role-91 :arg2 (p4 / president)))) :location (a3 / and :op1 (t / talk-02 :arg2 (a4 / and :op1 (p5 / person :arg0-of (r / retire-01) :arg0-of (h3 / have-org-role-91 :arg1 (p6 / political-party :name (n / name :op1 "N-A")))) :op2 (p7 / person :ord (o / ordinal-entity :value 1) :arg0-of (h4 / have-org-role-91 :arg2 (p8 / president)))))) :op2 (c / come-01 :arg1 (i / it) :arg3 (s / someone :arg1-of (d / do-02 :arg0 (s2 / someone :arg1-of (s3 / suggest-01 :manner (f / fetö))))))))
(c / contrast-01 :arg1 (f / fire-01 :arg1 (c2 / centre :mod (m / medicine) :mod (b / bay?nd?r))) :arg2 (b2 / business :poss (e / everyone)))
(w / wish-01 :arg0 (w2 / wish-01 :arg1 (t / this)) :arg1 (c / choosing :arg1 (t2 / tree)) :manner (h / helm :poss (t3 / tomb)))
(r / rate :mod (m / mortality) :beneficiary (p / person :mod (y / young)) :topic (r2 / research-01 :arg1 (t / try-02 :arg1 (p2 / person))))
(m / multi-sentence :snt1 (a / and :op1 (m2 / move-01 :arg1 (s / satellite :name (n / name :op1 (c / celestial)) :mod (s2 / satellite :name (n2 / name :op1 (c2 / celestial)))) :arg2 (s3 / speed :part-of (v / visual :mod (a2 / around :mod 60))) :time (a3 / around :op1 (t / temporal-quantity :quant (N / N-A) :unit (s4 / second)))) :op2 (r / reason-01 :arg1 (v2 / visual :mod (t2 / this)))) :snt2 (v3 / voiced :arg1 (s5 / sky :location (l / light :poss (p / place :quant (a4 / all)))) :manner (a5 / apparent) :time (n3 / night)))
(m / multi-sentence :snt1 (? / ??? :arg0 (a / and :op1 (p / person :name (n / name :op1 "al" :op2 "sisi") :arg0-of (l / lead-02 :arg1 (c / coup))) :op2 (p2 / person :arg0-of (l2 / lead-02 :arg1 (c2 / coup))) :op3 (p3 / person :arg0-of (l3 / lead-02 :arg1 (c3 / coup))) :op4 (p4 / person :arg0-of (l4 / lead-02 :arg1 (c4 / coup))) :op5 (p5 / person :arg0-of (l5 / lead-02 :arg1 (c5 / coup)))) :arg1 (a2 / and :op1 (p6 / person :arg0-of (l6 / lead-02 :arg1 (c6 / coup))) :op2 (p7 / person :arg0-of (l7 / lead-02 :arg1 (c7 / coup))) :op3 (p8 / person :arg0-of (l8 / lead-02 :arg1 (c8 / coup))) :op4 (p9 / person :arg0-of (l9 / lead-02 :arg1 (c9 / coup))) :op5 (p10 / person :arg0-of (l10 / lead-02 :arg1 (c10 / coup)))) :time (a3 / after :op1 (c11 / coup :time (d / date-entity :dayperiod (N / N-A)) :ord (o / ordinal-entity :value 1) :part-of (p11 / person :arg0-of (r / represent-01 :arg1 (o2 / organization) :arg1-of (h / high-02)))))) :snt2 (c12 / contains :mode (i / interrogative) :arg1 (l11 / lack-01 :arg1 (a4 / abnormal :polarity -))))
(w / while :arg0 (c / continent :name (n / name :op1 "N-A") :mod (l / last) :ord (o / ordinal-entity :value 3)) :arg1 (m / metres :ord (o2 / ordinal-entity :value 3) :ord (o3 / ordinal-entity :value 2) :ord (o4 / ordinal-entity :value 2) :ord (o5 / ordinal-entity :value 2) :ord (o6 / ordinal-entity :value 2) :ord (o7 / ordinal-entity :value 2)) :time (a / attempt-01 :arg1 (s / shooting)))
(a / and :op1 (p / politics) :op2 (t / trade-01) :op3 (t2 / transport-01) :op4 (e / energy) :op5 (e2 / energy) :op6 (p2 / person :quant (- / -93)))
(a / and :op1 (f / fire-01) :op2 (i / issue-02 :arg0 (f2 / fikiriz)) :op3 (i2 / issue-02 :arg0 (f3 / fikiriz)))
(c / contrast-01 :arg2 (r / remain-01 :arg1 (p / person :arg0-of (c2 / cross-02 :arg1 (b / baggage))) :arg3 (i / include-91 :arg1 (p2 / person) :arg2 (b2 / baggage))))
(a / and :op1 (l / level :arg1-of (h / high-02 :degree (m / most)) :time (e / early :op1 (m2 / month :mod (t / this)) :degree (m3 / more))) :op2 (a2 / announce-01 :arg1 (n / note :mod (g / galaxies))))
(a / and :op2 (a2 / age-01 :arg1 (p / person :quant 18 :arg1-of (a3 / age-01 :arg2 (t / temporal-quantity :quant (N / N-A) :unit (y / year))) :mod (e / each)) :arg2 (s / see-01 :arg1 (p2 / procedure :mod (t2 / this) :arg1-of (s2 / see-01 :arg0 (y2 / you) :condition (d / disease :mod (e2 / eye) :arg1-of (e3 / expert-01)))) :mod (a4 / also))))
(a / and :op1 (f / femoral :domain (t / they) :arg1-of (d / deep-02)) :op2 (v / ven :arg1 (a2 / and :op1 (f2 / femoral) :op2 (n / name :poss (y / you)))) :arg1-of (d2 / deep-02))
(m / multi-sentence :snt1 (c / cause-01 :arg0 (t / this) :arg1 (l / lose-02 :arg0 (w / we) :arg1 (w2 / win-01 :arg0 (r / race) :location (o / olympics))) :mod (a / again)) :snt2 (i / incredible :domain (i2 / it) :mod (r2 / really)))
(p / possible-01 :arg1 (p2 / practice-01 :arg0 (p3 / practice :arg1-of (s / same-01)) :arg1 (h / he) :condition (r / return-01 :arg1 (h2 / he) :arg4 (c / city))) :mod (a / again))
(e / exemplify-01 :arg0 (s / sivas :location (v / village :location (v2 / village))))
(ö / örnek)
(a / and :op2 (k / keep-02 :arg0 (w / we) :arg1 (f / find-01 :arg0 (w2 / we) :arg1 (h / house :poss (a2 / and :op1 (p / person :mod (w3 / white)) :op2 (b / blue)) :quant (a3 / all)))))
(s / say-01 :arg0 (h / he) :arg1 (s2 / send-03 :arg1 (t / treasure) :direction (d / down)))
(i / include-91 :arg1 (a / and :op1 (r / rate-entity-91 :arg1 34 :arg2 (t / temporal-quantity :quant (N / N-A) :unit (y / year))) :op2 (c / car :poss (p / person :arg0-of (h / have-rel-role-91 :arg1 (p2 / person :arg0-of (h2 / have-rel-role-91 :arg1 (p3 / person :arg0-of (h3 / have-rel-role-91 :arg1 (p4 / person :arg0-of (h4 / have-rel-role-91 :arg1 (p5 / person :arg0-of (h5 / have-rel-role-91 :arg1 (p6 / person :arg0-of (h6 / have-rel-role-91 :arg1 (p7 / person :arg0-of (h7 / have-rel-role-91 :arg1 (p8 / person :arg0-of (h8 / have-rel-role-91 :arg1 (p9 / person :arg0-of (h9 / have-rel-role-91 :arg1 (p10 / person :arg0-of (h10 / have-rel-role-91 :arg1 (p11 / person :arg0-of (h11 / have-rel-role-91 :arg1 (p12 / person :arg0-of (h12 / have-rel-role-91 :arg1 (p13 / person :arg0-of (h13 / have-rel-role-91 :arg1 (p14 / person :arg0-of (h14 / have-rel-role-91 :arg1 (p15 / person :arg0-of (h15 / have-rel-role-91 :arg1 (p16 / person :arg0-of (h16 / have-rel-role-91 :arg1 (p17 / person :arg0-of (h17 / have-rel-role-91 :arg1 (p18 / person :arg0-of (h18 / have-rel-role-91 :arg1 (p19 / person :arg0-of (h19 / have-rel-role-91 :arg1 (p20 / person :arg0-of (h20 / have-rel-role-91 :arg1 (p21 / person :arg0-of (h21 / have-rel-role-91 :arg1 (p22 / person :arg0-of (h22 / have-rel-role-91 :arg1 (p23 / person :arg0-of (h23 / have-rel-role-91 :arg1 (p24 / person :arg0-of (h24 / have-rel-role-91 :arg1 (p25 / person :arg0-of (h25 / have-rel-role-91 :arg1 (p26 / person :arg0-of (h26 / have-rel-role-91 :arg2 (f / father))) :arg2 (f2 / father))) :arg2 (f3 / father))))))))))))))))))))))))))))))))))))))))))))))))))))
(c / contrast-01 :arg1 (l / lack-01 :arg0 (c2 / control-01 :arg1 (f / fund-01 :arg1 (r / restore-01))) :arg1 (f2 / fund-01 :arg1 (s / support-01 :arg1 (m / mine-01))) :arg1-of (c3 / cause-01 :arg0 (m2 / meet-03 :mod (y / year-end)))) :arg2 (d / discuss-01 :polarity - :arg1 (c4 / change-01 :mod (a / any)) :mod (a2 / again)))
(s / say-01 :arg0 (h / he) :arg1 (s2 / signal-07 :arg0 (w / we) :arg1 (c / confidence)) :arg1-of (c2 / cause-01 :arg0 (a / and :op1 (m / meet-03 :arg0 (p / person :arg0-of (h2 / have-org-role-91 :arg1 (b / board :part-of (b2 / board)) :arg2 (c3 / chairman :mod (s3 / spiritual)))) :arg1 (i / invest-01 :arg0 (p2 / person) :arg2 (c4 / country :poss (w2 / we)) :quant (m2 / multiple :op1 (m3 / monetary-quantity :quant 30 :unit (p3 / pound)))) :time (f / future :poss (c5 / country :poss (w3 / we)))) :op2 (s4 / signal-07 :arg0 (w4 / we) :arg1 (c6 / confident-01)))) :time (m4 / meet-03 :arg0 (p4 / person) :arg1 (p5 / person :arg0-of (h3 / have-org-role-91 :arg1 (b3 / board) :arg2 (c7 / chairman)))))
(p / phone-number-entity :value (N / N-A))
(t / tem?zlenmes :mode (i / interrogative) :name (n / name :op1 (g / g?r) :op2 (d / devletten) :op3 (d2 / devletten) :op4 (d3 / devletten) :op5 (d4 / devletten) :op6 (t2 / tem?zlenmes) :op7 (t3 / tem?zlenmes)))
(a / and :op1 (r / right-06 :arg1 (p / place :mod (t / this)) :arg2 (c / car)) :op2 (r2 / ramadan :arg0 (p2 / person :source (a2 / across :op1 (p3 / person :mod (b / big) :arg0-of (h / have-rel-role-91 :arg2 (b2 / brother))))) :op3 (p4 / person :source (a3 / across :op1 (p5 / person :mod (b3 / big) :arg0-of (h2 / have-rel-role-91 :arg2 (b4 / brother)))))) :arg1 (n / new :poss (h3 / he) :mod (n2 / new)))
(p / possible-01 :arg1 (p2 / produce-01 :arg0 (a / and :op1 (p3 / person :arg0-of (h / have-org-role-91 :arg2 (s / scientist))) :op2 (p4 / person :arg0-of (h2 / have-org-role-91 :arg2 (s2 / scientist))) :op3 (p5 / person :arg0-of (h3 / have-org-role-91 :arg2 (s3 / scientist))) :op4 (p6 / person :arg0-of (h4 / have-org-role-91 :arg2 (s4 / scientist))) :op5 (p7 / person :arg0-of (h5 / have-org-role-91 :arg2 (s5 / scientist)))) :arg1 (a2 / and :op1 (v / vehicle :arg1-of (r / resemble-01)) :op2 (p8 / person :arg0-of (h6 / have-org-role-91 :arg2 (s6 / scientist)))) :time (p9 / past) :manner (u / use-01 :arg0 (p10 / person) :arg1 (m / model) :arg2 (e / explore-01 :arg0 (p11 / person) :arg1 (m2 / model)))))
(s / start-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg2 (n / negotiators :mod (c / chief)))) :arg1 (s2 / start-01 :arg0 (p2 / person :arg0-of (h2 / have-org-role-91 :arg2 (n2 / negotiators :mod (c2 / chief)))) :arg1 (s3 / start-01 :arg0 (p3 / person)) :mod (n3 / new)) :arg1-of (c3 / cause-01 :arg0 (a / and :op1 (s4 / suspend-01 :arg1 (s5 / strike-01)) :op2 (r / round-05 :arg1 (t / talk-01) :mod (n4 / new)))))
(f / feel-01 :arg0 (i / i) :arg1 (a / and :op1 (r / relieved :arg1 (i2 / i)) :op2 (l / light :degree (s / so))))
(s / say-01 :arg0 (t / thing :arg1-of (s2 / state-01 :arg0 (t2 / thing :arg1-of (s3 / state-01 :arg0 (t3 / thing :arg1-of (r / report-01)))))) :arg1 (p / play-02 :arg0 (c / character :arg1-of (p2 / play-02 :arg0 (g / group :consist-of (a / agent :mod (p3 / person :arg0-of (h / have-org-role-91 :arg2 (a2 / agent))))))) :arg1 (c2 / character :arg0-of (d / detail-01) :topic (t4 / thing :manner-of (h2 / history :time (h3 / history :poss (p4 / program)))))))
(r / reduce-01 :arg1 (u / use-01 :arg1 (a / and :op1 (i / influence-01) :op2 (i2 / innovate-01))) :time (o / over :op1 (t / time)))
(c / continue-01 :arg0 (p / person :arg0-of (r / rescue-01)) :arg1 (s / save-02 :arg0 (p2 / person) :arg1 (w / water) :arg2 (a / and :op1 (a2 / amit) :op2 (a3 / accidents :mod (w2 / wilkinson)))) :location (r2 / raid-01 :location (s2 / southwest)))
(s / say-01 :arg0 (h / he) :arg1 (a / allow-01 :arg1 (r / return-01 :arg1 (w / water :mod (' / '')) :arg4 (h2 / home) :time (s2 / start-01 :arg0 (h3 / he) :arg1 (w2 / withdraw-01 :arg0 (h4 / he))))))
(c / cause-01 :arg0 (b / belong-01 :arg0 (w / weapon :mod (a / assault)) :arg1 (w2 / weapon :mod (a2 / assault)) :location (w3 / weapon :mod (a3 / assault) :arg1-of (b2 / belong-01 :arg0 (s / style :arg1-of (d / differ-02))))) :arg1 (w4 / weapon :mod (a4 / assault)))
(p / person :arg0-of (h / have-org-role-91 :arg1 (g / government-organization :arg0-of (g2 / govern-01)) :arg2 (m / mayor) :time (f / former)) :quant (l / lot) :time (y / year :mod (l2 / last)) :time (a / after :op1 (s / suspend-01 :arg1 (r / report-01))))
(b / buy-01 :arg0 (a / and :op1 (p / person :arg0-of (h / have-org-role-91 :arg2 (o / official))) :op2 (p2 / person :arg0-of (h2 / have-org-role-91 :arg2 (a2 / activist)))) :arg1 (p3 / paper :poss (y / you) :mod (p4 / paper)) :arg1-of (s / send-01 :arg0 (a3 / and :op1 (p5 / person :arg0-of (h3 / have-org-role-91 :arg2 (o2 / official))) :op2 (p6 / person :arg0-of (h4 / have-org-role-91 :arg2 (a4 / activist)))) :arg1-of (s2 / send-01 :arg0 (a5 / and :op1 (p7 / person :arg0-of (h5 / have-org-role-91 :arg2 (o3 / official))) :op2 (p8 / person :arg0-of (h6 / have-org-role-91 :arg2 (a6 / activist)))) :arg1-of (s3 / send-01 :arg0 (a7 / and :op1 (p9 / person :arg0-of (h7 / have-org-role-91 :arg2 (o4 / official))) :op2 (a8 / activist))))))
(a / and :op1 (b / blows :arg0 (w / whistle) :arg1 (b2 / britain :mod (g / great) :location (r / room :arg1-of (s / suppose-01)))) :op2 (s2 / start-01 :arg0 (i / i) :arg1 (c / celebrating :arg0 (w2 / whistled) :arg1 (w3 / way :poss (w4 / whistled)) :manner (w5 / way :poss (w6 / whistled)))))
(c / create-01 :arg1 (p / pressure-01 :quant (l / lot)))
(s / say-01 :arg0 (h / he) :arg1 (r / reflect-01 :arg1 (a / article :topic (a2 / and :op1 (d / diversity :purpose (a3 / and :op1 (d2 / diversity :mod (p / process-01)) :op2 (d3 / diversity :mod (r2 / race))))) :arg2 (a4 / and :op1 (d4 / diversity :mod (p2 / process-01)) :op2 (d5 / diversity :mod (r3 / race))))) :medium (p3 / phone) :medium (p4 / phone))
(l / leave-17 :arg1 (s / scouts :mod (o / other) :mod (c / country :name (n / name :op1 "N-A"))) :degree (l2 / large) :arg1-of (c2 / cause-01 :arg0 (c3 / complain-01 :arg0 (h / he) :arg1 (v / view :poss (t / they))) :degree (l3 / large)))
(a / and :op1 (' / '' :arg0 (t / thing :arg1-of (r / report-01)) :arg1 (t2 / thing :arg1-of (r2 / report-01)) :location (h / half :ord (o / ordinal-entity :value 1) :arg1-of (i / include-91 :arg2 (t3 / thing :quant 2015 :arg1-of (i2 / include-91 :arg2 2015 :arg3 2015))))) :op2 (s / state-01 :arg0 (t4 / thing :arg1-of (s2 / state-01)) :arg1 (p / positive :mod (p2 / positive :degree (m / more)) :arg1-of (c / call-01 :arg2 (r3 / rate :arg1-of (s3 / significant-02))))))
(r / review-01 :arg0 (i / intelligence :arg1-of (r2 / review-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg2 (g / general)) :arg0-of (h2 / have-org-role-91 :arg2 (g2 / general)) :arg0-of (h3 / have-org-role-91 :arg2 (g3 / general)) :arg0-of (h4 / have-org-role-91 :arg2 (g4 / general)) :arg0-of (h5 / have-org-role-91 :arg2 (g5 / general)) :arg0-of (h6 / have-org-role-91 :arg2 (g6 / general))))) :arg1 (g7 / government-organization :name (n / name :op1 "Ministry" :op2 "of" :op3 "Defence")))
(a / and :op2 (e / endanger-01 :arg1 (i / it)))
(c / claim-01 :arg0 (p / person :name (n / name :op1 "Donald" :op2 "Trump") :arg0-of (h / have-org-role-91 :arg1 (l / language :name (n2 / name :op1 "N-A")) :arg3 (i / isis))) :arg1 (d / direction :name (n3 / name :op1 (k / k?lar) :op2 (k2 / k?lar) :op3 (k3 / k?lar) :op4 (d2 / direction) :op5 (d3 / direction) :op6 (d4 / direction) :op7 (d5 / direction))))
(w / want-01 :arg0 (p / person :name (n / name :op1 "mr." :op2 "trump")) :arg1 (c / continue-01 :arg0 (p2 / person) :arg1 (t / that) :mod (a / again)))
(c / cash :prep-to (n / news :mod (e / economy) :source (f / fetö :mod (i / izmirli))))
(c / choose-01 :arg3 (t / temporal-quantity :quant (N / N-A) :unit (y / year)))
(c / choose-01 :arg0 (p / person :arg0-of (u / use-01 :arg1 (c2 / credit :mod (h / house-01))) :quant (m / majority :mod (v / vast))) :arg1 (p2 / plan :arg1-of (p3 / pay-01 :duration (l / long-03))))
(p / person :arg0-of (h / have-org-role-91 :arg1 (p2 / person :arg0-of (h2 / have-org-role-91 :arg1 (p3 / political-party :name (n / name :op1 "N-A")) :arg2 (p4 / president))) :arg2 (t / torun)))
(p / possible-01 :arg1 (h / have-03 :arg0 (w / we) :arg1 (a / again :mod (a2 / again))))
(a / add-01 :arg0 (h / he) :arg1 (b / ball) :time (n / now))
(p / pay-01 :arg1 (t / temporal-quantity :quant (N / N-A) :unit (y / year) :purpose (t2 / transfer-01 :arg1 (m / monetary-quantity :quant 750 :unit (e / euro)) :arg2 (p2 / person :arg0-of (p3 / play-01 :arg1 (c / club)) :mod (p4 / puerto)))) :duration (t3 / temporary))
(s / say-01 :arg0 (h / he) :arg1 (o / or :op2 (g / go-02 :mode (i / imperative) :arg0 (y / you) :extent (f / far))))
(p / probable :domain (e / end-01 :arg0 (a / amr-unknown) :arg1 (s / service :mod (m / military) :poss (h / he))))
(n / neighbor-01 :arg1 (p / person :arg1-of (n2 / neighbor-01 :arg2 (c / country :name (n3 / name :op1 "N-A")))) :arg2 (c2 / country :name (n4 / name :op1 "N-A")))
(g / give-01 :arg0 (a / and :op1 (l / lawyer) :op2 (f / family)) :arg1 (a2 / and :op1 (t / thing :arg0-of (e / evidence-01)) :op2 (s / struggle-01 :arg1-of (l2 / legal-02))) :arg2 (a3 / and :op1 (t2 / thing :arg0-of (e2 / evidence-01)) :op2 (s2 / struggle-01 :arg1-of (l3 / legal-02))) :time (l4 / late :op1 (t3 / temporal-quantity :quant (N / N-A) :unit (y / year)) :degree (m / more)) :time (a4 / after :op1 (o / open-01 :arg1 (i / investigate-01 :mod (m2 / murder-01)))))
(b / behind :location (t / there) :mod (o / of-course))
(a / attempt-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (c / coup :mod (t / terrorist) :mod (c2 / country :name (n / name :op1 "N-A"))) :arg2 (m / member))) :arg1 (p2 / process-02 :arg1 (g / gülen)) :time (a2 / after :op1 (b / begin-01 :arg1 (p3 / process-02 :arg1 (f / float-01 :arg1 (a3 / and :op1 (m2 / ministry :topic (d / defend-01)) :op2 (f2 / force :arg1-of (a4 / arm-01) :mod (n2 / nation))))))))
(m / multi-sentence :snt1 (d / die-01 :arg1 (i / i) :time (d2 / date-interval :op1 (u / until :op1 (b / between :op1 (b2 / between :op1 (t / temporal-quantity :quant (N / N-A) :unit (y / year)) :op2 (t2 / temporal-quantity :quant (N2 / N-A) :unit (y2 / year))))) :op2 (d3 / die-01 :arg1 (i2 / i) :time (m2 / moment :mod (a / any))))) :snt2 (c / cause-01 :arg0 (a2 / amr-unknown) :arg1 (a3 / and :op1 (w / watch-01 :arg0 (s / soldier :mod (t3 / that)) :arg1 (p / person :arg0-of (w2 / watch-01 :arg1 (p2 / person :arg0-of (h / have-org-role-91 :arg2 (p3 / president)))) :arg0-of (w3 / watch-01 :arg1 (p4 / person :arg0-of (h2 / have-org-role-91 :arg2 (p5 / president)))))) :op2 (t4 / thing :arg1-of (s2 / say-01 :arg0 (h3 / he))))) :snt3 (s3 / say-01 :arg0 (h4 / he) :arg1 (a4 / and :op1 (w4 / watch-01 :arg0 (s4 / soldier) :arg1 (t5 / thing :arg1-of (c2 / charge-05 :arg2 (s5 / situation)))) :op2 (t6 / thing :arg1-of (s6 / say-01 :arg0 (h5 / he))))))
(a / and :op1 (c / call-02 :arg0 (t / they) :arg1 (i / i)) :op2 (g / go-02 :arg0 (t2 / they) :arg3 (e / engage-01) :location (a2 / ankara :mod (h / hilton) :mod (h2 / hilton))))
(s / say-01 :arg0 (c / coup) :arg1 (t / target-01 :arg0 (c2 / coup) :arg1 (p / person :quant (a / about :op1 50) :arg0-of (t2 / target-01 :arg1 (p2 / person :arg0-of (s2 / speak-01)) :arg1-of (d / direct-02) :time (a2 / after :op1 (s3 / start-01 :arg0 (p3 / person) :arg1 (s4 / shooting)) :quant (s5 / short))))))
(s / scene :location-of (m / meteor))
(c / cause-01 :arg1 (c2 / come-01 :arg1 (a / and :op1 (w / worship-place :name (n / name :op1 "N-A") :location (p / province :name (n2 / name :op1 "N-A") :mod (p2 / politics) :location (c3 / city-district :name (n3 / name :op1 "N-A") :mod (p3 / politics)))) :op2 (a2 / adoption :polarity -)) :arg4 (s / station)))
(u / use-01 :arg1 (a / airport :mod (m / military)) :arg1-of (c / cause-01 :arg0 (h / have-03 :arg1 (d / depths :quant (l / lot) :location (a2 / airport :mod (a3 / airport :mod (r / rize)))))))
(e / emerge-01 :arg0 (a / and :op1 (p / person :arg0-of (p2 / play-01) :mod (f / football) :mod (t / turkish)) :op2 (c / converse-01 :arg0 (p3 / person :mod (n / nation) :arg0-of (p4 / play-01)) :arg2 (t2 / take-01 :arg0 (p5 / person) :arg1 (p6 / place) :location (f2 / fethullahç?s :name (n2 / name :op1 (f3 / fetö)) :mod (f4 / fetö))))) :li 1996)
(g / game :ord (o / ordinal-entity :value 4 :range (o2 / ordinal-entity :value 4)))
(m / make-02 :arg0 (c / coach) :arg1 (c2 / car :mod (d / desperate)))
(l / learn-01 :arg0 (i / i) :arg1 (a / accident :poss (i2 / i) :prep-on (p / phone)) :arg2 (d / do-02 :arg0 (i3 / i) :arg1 (g / grandson :arg0 (i4 / i)) :arg2 (i5 / i)))
(t / transfer-01 :arg1 (o / operation :mod (s / safe-01)) :time (a / after :op1 (t2 / transfer-01 :arg1 (h / he) :arg2 (c / court))))
(a / and :op1 (n / night :domain (n2 / night :mod (a2 / another))) :op2 (c / complain-01 :arg0 (t / trifokal :mod (l / lenses))))
(a / and :op1 (f / factor :mod (p / primary) :arg1-of (l / long-03 :arg2 (t / temporal-quantity :quant (N / N-A) :unit (h / hour)))) :op2 (i / increase-01 :arg1 (h2 / hour :mod (w / work-01) :arg1-of (l2 / long-03))) :op3 (i2 / increase-01 :arg1 (t2 / temporal-quantity :quant (N2 / N-A) :unit (h3 / hour)) :arg3 (t3 / thing :arg1-of (s / stop-01 :arg1-of (l3 / long-03)))))
(h / heirs :arg1 (f / fail-01 :arg2 (a / and :op1 (d / develop-01 :arg2 (p / person :quant 4)) :op2 (d2 / develop-02 :arg1 (f2 / fail-01)))))
(n / news :mod (6 / 6a))
(a / and :op1 (p / problem :domain (p2 / problem :topic (b / beijing))) :op2 (p3 / person :arg0-of (p4 / play-01 :arg1-of (e / expert-01))) :op3 (r / replace-01 :arg1 (p5 / person :arg1-of (e2 / expert-01))))
(p / possible-01 :polarity - :arg1 (w / win-01 :arg0 (r / record :poss (c / country :name (n / name :op1 "N-A"))) :arg1 (s / stand-11 :quant 3 :arg1-of (a / adopt-01 :manner (s2 / stand-11 :arg0 (c2 / country) :arg1 (o / oppose-01 :arg0 (c3 / country) :arg1 (h / hoy :mod (h2 / hoy))))))))
(p / patrol-01 :arg0 (f / fire :name (n / name :op1 (p2 / pkk) :op2 (f2 / fire) :op3 (f3 / fire) :op4 (f4 / fire) :op5 (f5 / fire) :op6 (f6 / fire) :op7 (f7 / fire))) :arg1 (c / car))
(a / and :op1 (f / fund-01 :arg0 (f2 / fund-01 :arg0 (g / government-organization :arg0-of (g2 / govern-01)) :mod (i / invest-01)) :arg1 (f3 / fund :purpose (f4 / fund-01 :arg1 (p / project :arg1-of (l / long-03)))) :purpose (f5 / fund-01 :arg0 (f6 / fund-01) :arg1 (p2 / project :arg1-of (l2 / long-03)))) :op2 (r / recommend-01 :arg1 (d / discuss-01 :arg1 (t / thing :arg0-of (o / oppose-01)) :arg2 (d2 / direction :poss (b / bill :part-of (b2 / bill :name (n / name :op1 (o2 / omnibus))))) :mod (a2 / also))))
(c / come-01 :arg1 (w / we) :arg1-of (l / long-03 :arg2 (t / temporal-quantity :quant (N / N-A) :unit (y / year))))
(c / continue-01 :arg0 (s / sector :mod (b / banking) :poss (w / we)) :arg1 (w2 / work-01 :arg0 (s2 / sector) :manner (h / health) :manner (h2 / health)))
(s / say-01 :arg0 (h / he) :arg1 (c / continue-01 :arg0 (a / and :op1 (y / you) :op2 (c2 / country)) :arg1 (a2 / and :op1 (c3 / continue-01 :arg0 (a3 / and :op1 (y2 / you) :op2 (g / government-organization :arg0-of (g2 / govern-01 :arg1 (y3 / you)))) :arg1 (r / remove-01 :arg0 (a4 / and) :arg1 (o / obstacle :location (i / in-front-of :op1 (f / front :poss (y4 / you)))))) :op2 (c4 / continue-01 :arg0 (a5 / and :op1 (y5 / you) :op2 (g3 / government-organization :arg0-of (g4 / govern-01 :arg1 (y6 / you)))) :arg1 (r2 / remove-01 :arg0 (a6 / and) :arg1 (t / thing :arg1-of (s2 / say-01 :arg0 (h2 / he))))))))
(a / and :op1 (a2 / adding :arg0 (a3 / and :op1 (l / law :arg1-of (i / include-91 :arg2 (l2 / law :arg1-of (f / finish-01 :arg0 (w / we) :location (m / ministry :mod (e / economy))))) :quant (m2 / multiple :op1 1)) :op2 (r / regulate-01 :arg1-of (f2 / finish-01 :arg0 (w2 / we) :location (m3 / ministry :mod (e2 / economy))))) :arg1 (t / thing :arg1-of (d / decide-01) :mod (f3 / final)) :mod (a4 / also) :time (d2 / date :mod (l3 / late :degree (m4 / more)))) :op2 (a5 / and :op1 (c / came :arg1 (t2 / thing :quant 1 :arg1-of (i2 / include-91 :arg2 (l4 / law :arg0-of (r2 / represent-01 :arg1 (c2 / country :mod (t3 / this))) :arg0-of (r3 / represent-01 :arg1 (c3 / country :mod (t4 / this))) :arg0-of (r4 / represent-01 :arg1 (c4 / country :mod (t5 / this))) :arg0-of (r5 / represent-01 :arg1 (c5 / country :mod (t6 / this))) :arg0-of (r6 / represent-01 :arg1 (c6 / country :mod (t7 / this))) :arg0-of (r7 / represent-01 :arg1 (c7 / country :mod (t8 / this))) :arg0-of (r8 / represent-01 :arg1 (c8 / country :mod (t9 / this))) :arg0-of (r9 / represent-01 :arg1 (c9 / country :mod (t10 / this)))))))))
(n / need-01 :arg1 (r / reform-01 :arg1 (a / and :op1 (c / climate) :op2 (a2 / administrate-01))) :arg1-of (c2 / cause-01 :arg0 (d / declare-02 :arg1 (r2 / reform-01 :arg1 (s / structure) :mod (s2 / serious :degree (v / very))) :time (s3 / so-far))))
(m / multi-sentence :snt1 (a / approved :arg0 (p / person :arg0-of (h / have-org-role-91 :arg2 (p2 / president))) :arg1 (l / law :name (n / name :op1 (t / tayyip)) :mod (i / international)) :manner (e / erdogan)) :snt2 (a2 / approve-01 :li 6735 :arg1 (l2 / law :mod (i2 / international))) :li 6735)
(f / find-01 :arg1 (a / and :op1 (p / person :arg0-of (h / have-rel-role-91 :arg2 (l / lawyer))) :op2 (p2 / person :arg0-of (h2 / have-rel-role-91 :arg1 (p3 / person) :arg2 (l2 / lawyer))) :op3 (p4 / person :arg0-of (h3 / have-rel-role-91 :arg1 (p5 / person) :arg2 (l3 / lawyer))) :op4 (p6 / person :arg0-of (h4 / have-rel-role-91 :arg1 (p7 / person) :arg2 (l4 / lawyer))) :op5 (p8 / person :arg0-of (h5 / have-rel-role-91 :arg1 (p9 / person) :arg2 (l5 / lawyer))) :op6 (p10 / person :arg0-of (h6 / have-rel-role-91 :arg1 (p11 / person) :arg2 (l6 / lawyer))) :op6 (p12 / person :arg0-of (h7 / have-rel-role-91 :arg1 (p13 / person) :arg2 (l7 / lawyer))) :op6 (p14 / person :arg0-of (h8 / have-rel-role-91 :arg1 (p15 / person) :arg2 (l8 / lawyer))) :op7 (p16 / person :arg0-of (h9 / have-rel-role-91 :arg1 (p17 / person) :arg2 (l9 / lawyer)))))
(s / stage-01 :arg1 (g / group :mod (s2 / service :mod (o / oil)) :mod (s3 / service :mod (o2 / oil))) :location (p / platform :mod (s4 / sea) :location (n / north) :arg1-of (o3 / operated :manner (g2 / gradual))))
(s / say-01 :arg0 (h / he) :arg1 (a / act-02 :arg0 (u / union :mod (t / trade-01)) :arg3 (p / percentage-entity :value (N / N-A)) :arg4 (p2 / protest-01 :arg0 (u2 / union) :arg1 (w / wage-01)) :time (s2 / since :op1 (a2 / act-02 :ord (o / ordinal-entity :value 1)))))
(r / represent-01 :arg0 (t / this) :arg1 (b / break :topic (s / star :mod (o / old :degree (m / more)))) :location (f / field :mod (m2 / magnetic :arg1 (s2 / star))))
(d / demand-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg2 (p2 / president))) :arg1 (r / receive-01 :arg1 (a / apology)) :mod (u / ultimate) :mod (u2 / ultimate))
(s / say-01 :arg0 (h / he) :arg1 (i / incident :mod (s2 / such) :arg0-of (c / cause-01 :arg1 (t / take-01 :arg0 (i2 / i) :arg1 (i3 / incident :mod (s3 / such)) :location (p / presentation)))))
(s / say-01 :arg0 (h / he) :arg1 (a / and :op1 (c / construct-01 :arg1 (p / parade-02 :mod (q / queensferry))) :op2 (s2 / symbolic :arg1 (a2 / and :op1 (m / moment :mod (h2 / historic)) :op2 (m2 / moment :arg1-of (s3 / symbolize-01))))))
(m / multi-sentence :snt1 (f / fortunate-01 :polarity -) :snt2 (a / and :op1 (b / be-located-at-91 :arg1 (w / we) :arg2 (p / path :mod (r / right)) :time (u / until :op1 (r2 / reach-01 :arg0 (i / it) :arg1 (g / gusts :arg1 (u2 / uzakla?m :mod (w2 / wind) :mod (w3 / wind)) :arg1-of (s / strong-02)))))))
(m / multi-sentence :snt1 (w / wonderful :polarity - :arg1 (a / and :op1 (t / technology) :op2 (t2 / technology) :op3 (o / other :mod (e / each))) :purpose (a2 / act-02 :arg0 (a3 / and) :location (a4 / air :arg1-of (o2 / open-09)))) :snt2 (w2 / wonderful-03 :arg1 (a5 / and :op1 (t3 / technology) :op2 (t4 / technology)) :mod (r / really)))
(m / multi-sentence :snt1 (d / develop-02 :arg1 (a / and :op1 (d2 / develop-01 :arg2 (a2 / apple)) :op2 (m2 / monitor-01 :arg1 (k / kullan?c?y :quant 35000)) :op3 (e / enforce-01 :arg1 (k2 / kullan?c?y :quant 35000))) :time (b / before :op1 (p / play-01 :arg0 (h / he) :location (p2 / post :mod (w / washington))))) :snt2 (r / rise-01 :arg1 (r2 / rate :quant-of (p3 / person)) :arg3 (r3 / rate-entity-91 :arg1 (r4 / rate-entity-91 :arg1 (d3 / day :quant (b2 / between :op1 35000 :op2 45)) :arg2 (t / temporal-quantity :quant (N / N-A) :unit (d4 / day))) :arg4 (r5 / rate-entity-91 :arg1 (r6 / rate :mod (p4 / person :quant 45)) :arg2 (r7 / rate-entity-91 :arg1 (r8 / rate :mod (p5 / person :quant 45)) :arg2 (r9 / rate-entity-91 :arg1 (r10 / rate :quant-of (p6 / person)) :arg2 (t2 / temporal-quantity :quant (N2 / N-A) :unit (d5 / day))))))))
(s / say-01 :arg0 (t / thing :arg1-of (s2 / state-01)) :arg1 (b / be-located-at-91 :arg1 (h / house :poss (s3 / settlement)) :arg2 (a / area :location-of (s4 / settlement)) :time (e / early :op1 (m / month :mod (t2 / this)) :degree (m2 / more))) :arg1-of (s5 / say-01 :arg0 (p / political-party :name (n / name :op1 "N-A"))))
(s / say-01 :arg0 (h / he) :arg1 (l / language :arg1-of (s2 / sign-01) :domain (a / and :op1 (l2 / language :arg1-of (s3 / sign-01)) :op2 (l3 / language :arg1-of (s4 / sign-01)))) :arg2 (p / person :name (n / name :op1 "N-A")))
(a / amr-unknown :domain (a2 / amr-unknown))
(a / and :op1 (v / victim :polarity - :domain (o / other :quant 2)) :op2 (p / police :arg0 (p2 / police) :arg1 (p3 / person :quant 1 :arg1-of (i / include-91 :arg2 (p4 / person :arg0-of (a2 / attack-01)))) :arg2 (o2 / or :mode (i2 / interrogative) :op1 (l / look-01 :arg0 (p5 / person)) :op2 (l2 / look-01 :polarity - :arg0 (p6 / person)))))
(s / say-01 :arg0 (h / he) :arg1 (a / and :op1 (b / be-located-at-91 :arg1 (p / person :arg0-of (s2 / specialize-01) :arg1-of (a2 / arm-01) :quant (m / more-than :op1 1)) :arg2 (p2 / person :arg0-of (s3 / specialize-01) :arg1-of (a3 / arm-01))) :op2 (a4 / activity-06 :arg0 (p3 / person :arg0-of (h2 / have-org-role-91 :arg2 (c / commissioner :mod (' / '')))) :location (s4 / station :mod (g / gas)))))
(a / and :op1 (w / watchdog :mod (n / nhs) :arg1-of (n2 / nice-01)) :op2 (p / problem :arg1-of (n3 / nice-01)) :op3 (p2 / problem :arg1-of (n4 / nice-01)) :op4 (p3 / problem :topic (c / cardiovascular)) :purpose (r / reduce-01 :arg0 (a2 / and) :arg1 (r2 / risk-01 :arg2 (r3 / recommend-01 :arg1 (r4 / restore-01 :arg0 (p4 / person) :arg1 (t / thing :arg1-of (r5 / recommend-01 :arg0 (p5 / person))) :time (a3 / after :op1 (n5 / now) :quant (u / up-to :op1 (t2 / temporal-quantity :quant (N / N-A) :unit (y / year)))))))))
(s / say-01 :arg0 (h / he) :arg1 (b / bad-07 :arg1 (i / it) :degree (v / very) :purpose (t / think-01 :arg0 (i2 / i) :arg1 (i3 / it)) :arg1-of (c / cause-01 :arg0 (t2 / tell-01 :arg0 (h2 / he) :arg1 (i4 / it) :arg2 (i5 / i))) :time (g / go-02 :arg0 (i6 / i) :arg4 (h3 / home)) :time (g2 / go-02 :arg0 (i7 / i) :arg4 (h4 / home))) :mod (k / külot :mode (e / expressive)))
(i / infer-01 :arg1 (o / obligate-01 :arg2 (g / give-01 :arg0 (p / person :quant 1 :arg1-of (i2 / include-91 :arg2 (w / way :arg1-of (s / secure-02 :degree (m / most)) :purpose (a / avoid-01 :arg1 (s2 / soygundan))))) :arg1 (g2 / give-01 :arg1 (m2 / money) :arg2 (p2 / person)))))
(m / multi-sentence :snt1 (a / and :op1 (w / wright :mode (i / interrogative) :arg1 (a2 / and :op1 (w2 / wright) :op2 (g / gezerek :mod (w3 / world)) :op3 (t / thing :arg1-of (w4 / wonderful-03)))) :op2 (t2 / things :arg1 (a3 / and))) :snt2 (t3 / test-01 :mode (i2 / interrogative) :arg0 (y / you)))
(m / multi-sentence :snt2 (p / period :arg1-of (e / extend-01) :time (a / after :op1 (s / see-01 :arg0 (h / he) :arg1 (a2 / and :op1 (h2 / he) :op2 (p2 / person :arg0-of (h3 / have-rel-role-91 :arg1 (p3 / person) :arg2 (h4 / husband)))))) :time (w / week :mod (t / this)) :time (a3 / after :op1 (s2 / see-01 :arg0 (h5 / he) :arg1 (a4 / and :op1 (h6 / he) :op2 (p4 / person :arg0-of (h7 / have-rel-role-91 :arg1 (p5 / person) :arg2 (h8 / husband)))) :time (w2 / week :mod (t2 / this))))))
(h / have-concession-91 :arg1 (s / say-01 :arg0 (h2 / he) :arg1 (t / take-01 :polarity - :arg1 (n / no-one) :arg3 (a / alone :degree (t2 / that))) :arg1-of (c / cause-01 :arg0 (b / be-located-at-91 :arg1 (s2 / smoke) :arg2 (u / under :op1 (u2 / usual)) :arg1-of (c2 / cause-01 :arg0 (p / poor :domain (s3 / smoke) :arg1-of (c3 / cause-01 :arg0 (p2 / poor :domain (s4 / smoke)))))) :compared-to (u3 / usual) :arg1-of (c4 / cause-01 :arg0 (p3 / poor :domain (s5 / smoke))))))
(s / say-01 :arg0 (p / person :arg0-of (h / have-rel-role-91 :arg1 (p2 / person) :arg2 (c / child))) :arg1 (p3 / person :arg0-of (h2 / have-rel-role-91 :arg1 (p4 / person) :arg2 (c2 / child)) :domain (t / this) :arg1-of (i / include-91 :arg2 (p5 / process-02 :arg1 (c3 / closure))) :quant (s2 / some) :arg1-of (i2 / include-91 :arg2 (p6 / process-02 :arg1 (c4 / closure)))) :arg1-of (s3 / say-01 :arg0 (p7 / person :arg0-of (h3 / have-rel-role-91 :arg1 (p8 / person) :arg2 (c5 / child))) :arg1-of (s4 / say-01 :arg0 (p9 / person))) :arg1-of (s5 / send-01 :arg2 (p10 / person :arg0-of (h4 / have-rel-role-91 :arg2 (c6 / child)))))
(c / contrast-01 :arg1 (i / intervene-01 :arg0 (m / mitchell :arg1-of (w / wonderful-03) :example (p / prevent-01 :arg0 (ü / üçüncüyü :mod (m2 / mountain)) :arg1 (t / that)))) :arg2 (d / delay-01 :quant (n / number) :mod (o / only)))
(s / suggest-01 :arg1 (m / match-03 :arg0 (c / country :name (n / name :op1 "N-A")) :arg1 (c2 / country :name (n2 / name :op1 "N-A")) :arg1-of (t / tough-02 :degree (m2 / most)) :arg1-of (m3 / match-01 :arg2 (n3 / name :op1 (s2 / south) :op2 (a / africa)) :location (f / face :part-of (f2 / face)))) :arg1-of (c3 / cause-01 :arg0 (s3 / suggest-01 :arg1 (p / point :arg1-of (s4 / single-02) :domain (c4 / country)))) :time (b / begin-01 :arg1 (d / day)))
(c / chance-02 :arg1 (w / watch-01 :arg1 (a / architecture :mod (d / dramatic) :consist-of (p / person :mod (o / ordinary) :mod (o2 / ordinary)))))
(a / and :op1 (r / receive-01 :arg0 (a2 / and :op1 (p / person :arg0-of (h / have-org-role-91 :arg2 (g / gee))) :op2 (p2 / person :arg0-of (h2 / have-org-role-91 :arg2 (s / schwartzman))) :quant 1926 :mod (b / bertram)) :arg1 (d / discuss-01 :arg0 (p3 / person))) :op2 (a3 / and :op1 (r2 / receive-01 :arg0 (p4 / person) :arg1 (t / thing :arg1-of (d2 / discuss-01))) :op2 (s2 / share-01 :arg0 (p5 / person) :arg1 (t2 / thing :arg1-of (p6 / plan-01 :arg0 (p7 / person))) :arg2 (g2 / görsellerini))))
(m / multi-sentence :snt1 (m2 / mercekleri :mode (i / interrogative) :arg0 (p / person :mod (o / other) :arg1-of (b / back-01 :arg0 (o2 / other :mod (o3 / other))) :arg1-of (b2 / back-01 :arg0 (o4 / other :mod (o5 / other)))) :arg1 (o6 / or :op1 (s / skin :arg1-of (b3 / black-04)) :op2 (s2 / slash :op1 (s3 / skin :name (n / name :op1 (b4 / beyazla?t?r?lm))) :op2 (s4 / slash :op1 (s5 / skin :arg1-of (b5 / black-04)) :op2 (s6 / slash :op1 (s7 / skin :arg1-of (b6 / black-04)) :op2 (s8 / slash :op1 (s9 / skin :arg1-of (b7 / black-04)) :op2 (s10 / slash :op1 (s11 / skin :mod (b8 / beyazla?t?r?lm)) :op2 (? / ?? :mod (b9 / beyazla?t?r?lm)))))))) :time (p2 / past)) :snt2 (c / charge-05 :mode (i2 / interrogative)))
(p / participate-01 :arg0 (p2 / person :arg0-of (h / have-org-role-91 :arg1 (c / committee :mod (i / intelligence :mod (h2 / house))) :arg2 (m / member)) :arg0-of (h3 / have-org-role-91 :arg1 (c2 / committee :mod (i2 / intelligence) :mod (i3 / intelligence)) :arg2 (m2 / member))) :arg1 (t / thing :arg1-of (c3 / conclude-01 :arg1-of (r / reach-01 :arg0 (a / arm :part-of (p3 / person :arg0-of (w / work-01)) :arg0-of (w2 / work-01))) :quant (s / some))))
(p / possible-01 :arg1 (p2 / promise-01 :arg0 (i / i) :mod (g / great)) :location (m / middle :part-of (ç / ç?lg?nl :name (n / name :op1 (? / ???) :op2 (?2 / ???) :op3 (?3 / ???) :op4 (g2 / general) :op5 (g3 / general) :op6 (g4 / general) :op7 (s / soon)))))
(i / include-91 :arg3 1 :arg1 (c / continent :name (n / name :op1 "Africa")) :arg2 (a / and :op1 (e / economy :arg1-of (s / stable-03 :degree (m / most))) :op2 (e2 / economy :arg1-of (g / grow-01 :manner (r / rapid))) :op3 (s2 / sound-01 :arg2 (a2 / ally-01 :arg2 (w / west)))) :time (d / decade :mod (p / past)))
(a / and :op1 (o / out-06 :arg1 (p / person) :arg2 (s / street) :time (w / week :mod (l / last) :mod (j / just))) :op2 (c / call-03 :arg0 (p2 / person) :arg1 (c2 / change-01 :arg1 (p3 / politics) :mod (f / fundamental))))
(ö / özellikti :arg1 (h / home :poss (e / economy :mod (t / this)) :quant (m / majority)))
(a / and :op1 (h / have-org-role-91 :arg0 (p / person :name (n / name :op1 "Bill" :op2 "Clinton") :arg1-of (i / include-91 :arg2 (p2 / person :arg0-of (h2 / have-org-role-91 :arg1 (g / game :name (n2 / name :op1 "N-A")) :arg2 (m / member))) :arg3 (m2 / most))) :arg1 (f / fee :mod (r / rate-entity-91 :arg1 (a2 / about :op1 (m3 / monetary-quantity :quant 5.3 :unit (d / dollar))) :arg2 (v / volume-quantity :quant (N / N-A) :unit (g2 / gallon)))) :arg2 (i2 / institution :mod (c / charity) :arg2-of (i3 / include-91 :arg1 (a3 / and :op1 (p3 / person :arg0-of (h3 / have-org-role-91 :arg2 (m4 / minister :mod (s / spiritual)) :time (f2 / former))) :op2 (p4 / person :arg0-of (h4 / have-org-role-91 :arg2 (m5 / minister :mod (f3 / foreign)) :time (f4 / former))) :op3 (p5 / person :arg0-of (h5 / have-org-role-91 :arg2 (m6 / minister :mod (f5 / foreign)) :time (f6 / former))) :op4 (p6 / person :arg0-of (h6 / have-org-role-91 :arg2 (m7 / minister :mod (f7 / foreign)) :time (f8 / former))) :op5 (p7 / person :arg0-of (h7 / have-org-role-91 :arg2 (m8 / minister :mod (f9 / foreign)) :time (f10 / former))) :op6 (p8 / person :arg0-of (h8 / have-org-role-91 :arg2 (m9 / minister :mod (f11 / foreign)) :time (f12 / former))) :op6 (p9 / person :arg0-of (h9 / have-org-role-91 :arg2 (m10 / minister :mod (f13 / foreign)) :time (f14 / former))) :op7 (p10 / person :arg0-of (h10 / have-org-role-91 :arg2 (m11 / minister :mod (f15 / foreign)) :time (f16 / former))))))))
(w / write-01 :arg0 (p / person :name (n / name :op1 "lanzmann")))
(n / need-01 :polarity - :arg1 (i / izah :arg1 (t / this)))
(r / rise-01 :arg1 (t / trade-01 :arg0 (c / country :name (n / name :op1 "N-A")) :arg2 (c2 / country :name (n2 / name :op1 "N-A"))) :arg2 (p / percentage-entity :value (N / N-A)))
(u / uyar?n :arg1 (o / overthrow-01 :arg1 (a / aran?zda)))
(a / and :op1 (u / unity :arg1 (a2 / and :op1 (u2 / unity :mod (t / turkish)) :op2 (b / beraberli?ine :location (f / flags :mod (t2 / turkish))))) :op2 (t3 / table :purpose (e / effort :purpose (d / do-02 :arg1 (i / it)))))
(a / and :op1 (u / use-01 :arg0 (f / fetö :name (n / name :op1 (' / '') :op2 (f2 / fetö))) :arg1 (p / person :arg0-of (h / help-01)) :mod (a2 / also)) :op2 (o / open-01 :arg0 (p2 / person) :arg1 (e / eye :part-of (e2 / everyone))) :time (a3 / after :op1 (1 / 15th :mod (j / july))))
(s / say-01 :arg0 (h / he) :arg1 (c / contrast-01 :arg1 (h2 / have-03 :arg0 (p / person :quant (s2 / some) :arg1-of (i / include-91 :arg2 (p2 / person :arg0-of (c2 / cables)))) :arg1 (p3 / publication :arg1-of (b / base-01 :location (c3 / cables))) :mod (a / also)) :arg2 (s3 / say-01 :arg0 (h3 / he))))
(o / order-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg2 (g / governor))) :arg2 (b / block-01 :arg0 (p2 / person :arg0-of (h2 / have-org-role-91 :arg2 (g2 / governor))) :arg1 (a / and :op1 (p3 / person :mod (s / sovereign)) :op2 (p4 / person :arg0-of (h3 / have-org-role-91 :arg2 (g3 / governor)))) :arg1-of (s2 / show-01 :arg0 (p5 / person :arg0-of (h4 / have-org-role-91 :arg2 (g4 / governor))))))
(d / detain-01 :arg1 (p / person :arg0-of (h / have-org-role-91 :arg2 (o / office :mod (p2 / public)))) :arg2 (t / thing :arg2-of (n / name-01 :arg1 (p3 / person :arg0-of (h2 / have-org-role-91 :arg2 (p4 / professor))))) :time (o2 / operate-01 :arg1 (o3 / office :poss (p5 / person :arg0-of (h3 / have-org-role-91 :arg2 (g / governor :mod (p6 / public)))))))
(a / and :op1 (c / cut-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (p2 / person :arg0-of (h2 / have-org-role-91 :arg1 (p3 / province) :arg2 (d / director :mod (h3 / health)))) :arg2 (d2 / director :mod (h4 / health)))) :arg1 (a2 / and :op1 (c2 / cut-01 :arg0 (p4 / person) :arg1 (p5 / person :mod (y / young))) :op2 (p6 / person :mod (y2 / young) :arg0-of (f / found-01 :arg1 (p7 / person) :arg2 (h5 / habit :arg1-of (b / bad-07)))))) :op2 (r / report-01 :arg0 (p8 / person)))
(c / continue-01 :arg1 (p / post :poss (t / they)) :arg1-of (c2 / cause-01 :arg0 (r / relation-03 :arg0 (p2 / person :arg0-of (h / have-org-role-91 :arg2 (o / officer))) :arg2 (p3 / person :arg0-of (h2 / have-org-role-91 :arg2 (o2 / officer))))))
(m / multi-sentence :snt2 (f / fire :location (p / place :mod (t / this))) :snt3 (f2 / fire :location (p2 / place :mod (t2 / this))))
(b / bridge :location (o / on :op1 (t / there)) :arg1-of (m / major-02))
(a / and :op1 (m / marched :arg1 (c / country :quant 190 :arg1-of (i / include-91 :arg2 (c2 / country :quant 190))) :arg2 (s / street)) :op2 (r / reported :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (p2 / police) :arg2 (d / direnmedi?ini))) :arg1 (s2 / street) :location (s3 / street)) :op3 (r2 / report-01 :arg0 (p3 / police)))
(i / include-91 :li 2 :arg1 (p / person :quant 2) :arg2 (b / bridge :location (b2 / bridge :quant 1915)))
(t / take-10 :arg0 (i / it) :time (u / until :op1 (l / late :op1 (t2 / temporal-quantity :quant (N / N-A) :unit (h / hour)))))
(i / issue-02 :arg0 (c / country :name (n / name :op1 "N-A")) :quant (l / lot))
(i / issue-02 :arg0 (r / region) :mod (a / also))
(s / say-01 :arg0 (h / he) :arg1 (t / thing :mod (i / important) :domain (g / get-01 :arg1 (r / result-01))))
(s / say-01 :arg0 (h / he) :arg1 (a / and :op1 (l / launch-01 :arg0 (p / person :arg0-of (l2 / lead-02 :arg1 (c / campaign-01 :arg0 (p2 / person) :arg1 (c2 / campaign-01 :arg0 (p3 / person) :arg1 (c3 / campaign :name (n / name :op1 (k / kerem)) :mod (r / red)))))) :arg1 (c4 / campaign-01 :arg0 (p4 / person) :arg1 (a2 / and :op1 (f / festival :arg0 (p5 / person) :arg1 (f2 / festival :mod (' / ''))) :op2 (o / offer-01 :arg0 (p6 / person) :arg1 (e / etleri :arg0 (p7 / person)))))) :op2 (o2 / offer-01 :arg0 (p8 / person) :arg1 (e2 / etleri :arg1 (p9 / person)) :manner (w / way :mod (w2 / way)))) :arg2 (p10 / person :arg0-of (d / donate-01 :arg2 (c5 / campaign-01 :arg0 (p11 / person) :arg1 (p12 / press)))))
(m / multi-sentence :snt1 (' / '' :domain (t / this) :time (t2 / throughout :op1 (y / year))) :snt2 (a / add-01 :arg0 (h / he)))
(c / crash-01 :arg1 (b / bridge :name (n / name :op1 (m / mehmet) :op2 (m2 / mehmet) :op3 (b2 / bridge) :op4 (b3 / bridge) :op5 (b4 / bridge) :op6 (b5 / bridge) :op7 (b6 / bridge))))
(s / say-01 :arg0 (s2 / scene) :arg1 (s3 / scene :mod (a / ankara :arg1 (b / bridge :arg0-of (a2 / attain :arg1 (h / highway))) :time (a3 / after :op1 (n / now) :quant (t / temporal-quantity :quant (N / N-A) :unit (h2 / hour)) :location (l / line :location (l2 / line :arg1-of (e / explode-01)))))))
(s / say-01 :arg0 (t / thing :arg1-of (s2 / state-01)) :arg1 (t2 / thing :arg1-of (s3 / state-01) :quant (m / much :degree (s4 / so))) :medium (s5 / statement))
(e / expect-01 :arg0 (o / office :poss (p / person :arg0-of (h / have-org-role-91 :arg2 (o2 / office :mod (p2 / public))))) :arg1 (i / immune :arg1 (a / and :op1 (s / sakarya) :op2 (i2 / immune :name (n / name :op1 (h2 / hakan))) :op3 (i3 / immune :mod (h3 / hakan))) :arg2 (d / decide-01 :arg1 (d2 / detain-01 :arg1 (h4 / he)))))
(s / system :name (n / name :op1 (c / contaminated) :op2 (r / report) :op3 (r2 / report)) :arg0-of (m / merged :arg1 (s2 / system :name (n2 / name :op1 (t / toplardamar) :op2 (t2 / toplardamar))) :arg1-of (m2 / mean-01 :arg2 (s3 / system :name (n3 / name :op1 (t3 / toplardamar) :op2 (t4 / toplardamar))) :mod (j / just)) :arg0-of (s4 / system :name (n4 / name :op1 (t5 / toplardamar)))))
(a / and :op1 (h / have-03 :arg0 (p / person :mod (c / country :name (n / name :op1 "N-A"))) :arg1 (p2 / person) :time (p3 / previous)) :op2 (d / disqualified :arg0 (p4 / person) :arg1 (p5 / person) :arg2 (p6 / potential :poss (p7 / person :mod (c2 / country :name (n2 / name :op1 "N-A")) :arg0-of (h2 / have-org-role-91 :arg2 (v / vazgeçmemi?ti))))) :time (n3 / now))
(b / begin-01 :arg0 (w / we) :arg1 (p / project :mod (t / this) :prep-as (e / exemplify-01 :arg0 (p2 / place :arg1-of (c / call-01 :arg2 (n / name :op1 (a / alaca) :op2 (? / ??)))))))
(m / multi-sentence :snt1 (r / result-01 :arg1 (l / launch-01 :arg1 (i / investigate-01)) :arg2 (r2 / result-01 :arg1 (i2 / investigate-01) :arg2 (i3 / investigate-01 :arg1 (i4 / investigate-01) :time (a / after :op1 (l2 / launch-01 :arg1 (i5 / investigate-01) :time (a2 / after :op1 (l3 / launch-01 :arg1 (i6 / investigate-01)))))))) :snt2 (a3 / and :op1 (e / explain-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg2 (p2 / president :mod (v / vice)) :time (f / former))) :arg1-of (l4 / long-03)) :op2 (a4 / arrest-01 :arg1 (p3 / person :arg0-of (h2 / have-org-role-91 :arg2 (c / chamber :mod (a5 / adana)) :time (f2 / former))) :arg1-of (l5 / long-03))))
(i / include-91 :arg1 (a / and :op1 (a2 / arrest-01 :arg1 (p / person :quant 12)) :op2 (a3 / arrest-01 :arg1 (p2 / person :quant 12))) :arg2 (i2 / investigate-01 :arg1 (i3 / investigate-01)))
(t / transfer-01 :arg1 (a / and :op1 (y / yildirim) :op2 (p / person :arg0-of (h / have-rel-role-91 :arg1 (h2 / he) :arg2 (w / wife)))) :arg2 (t2 / transfer-01 :arg1 (c / car)))
(s / sit-01 :arg1 (s2 / sit-01) :arg2 (c / control-01 :arg1 (r / reconstruct-01 :arg1 (f / fund))))
(h / have-purpose-91 :arg1 (f / finance-01 :arg1 (p / project :arg1-of (m / major-02))) :arg2 (g / goal))
(m / multi-sentence :snt1 (c / contrast-01 :arg1 (' / '' :arg0 (b / bankam?z :mod (c2 / central)) :arg1 (r / rate-entity-91 :arg1 (1 / 15th) :arg2 (t / temporal-quantity :quant (N / N-A) :unit (y / year)))) :arg2 (n / need-01 :arg0 (n2 / need-01 :arg1 (e / end-01 :arg1 (m2 / market :mod (e2 / exchange-01 :mod (f / foreign))))) :arg1 (a / and :op1 (e3 / end-01 :arg1 (m3 / market :mod (e4 / exchange-01 :mod (f2 / foreign)))) :op2 (r2 / reduce-01 :arg1 (m4 / monetary-quantity :quant 121 :unit (d / dollar)))))) :snt2 (r3 / rezervimiz :arg1-of (g / gross-03) :mod (m5 / more-than :op1 (m6 / monetary-quantity :quant 121 :unit (d2 / dollar)))))
(s / say-01 :arg0 (p / person :name (n / name :op1 "nihat" :op2 "zeybekci") :arg0-of (h / have-org-role-91 :arg2 (m / minister :mod (e / economy)))) :arg1 (a / and :op1 (e2 / emerge-02 :arg0 (p2 / person :arg0-of (h2 / have-org-role-91 :arg2 (m2 / minister :mod (e3 / economy)))) :arg3 (a2 / attempt-01 :arg1 (c / coup))) :op2 (a3 / add-01 :arg0 (p3 / person) :arg1 (d / declare-01 :arg0 (g / government-organization :arg0-of (g2 / govern-01)) :arg2 (c2 / campaign-01 :arg0 (g3 / government-organization) :arg1 (i / issue-02 :mod (t / this)))))) :li (1 / 15th))
(e / estimate-01 :arg0 (h / he) :arg1 (r / resemble-01 :arg1 (i / it) :arg2 (r2 / resemble-01 :arg1 (i2 / it) :arg2 (t / that))) :arg1-of (s / say-01 :arg0 (h2 / he)))
(b / border-01 :arg1 (t / thing :arg1-of (b2 / border-01 :arg2 (b3 / border-01 :arg2 (b4 / border-01 :arg1 (c / country :name (n / name :op1 "N-A")) :arg2 (c2 / country :name (n2 / name :op1 "N-A")))))) :arg2 (t2 / thing :arg1-of (b5 / border-01 :arg2 (b6 / border-01 :arg1 (c3 / country) :arg2 (b7 / border-01 :arg1 (c4 / country) :arg2 (b8 / border-01 :arg1 (c5 / country) :arg2 (c6 / country))))) :arg1-of (n3 / near-02 :arg2 (a / and :op1 (c7 / control-01 :arg1 (b9 / border-01 :arg2 (c8 / country))) :op2 (c9 / control-01 :arg1 (a2 / air :quant 2 :arg1-of (s / separate-02) :mod (a3 / air) :arg1-of (s2 / separate-02)))))))
(a / and :op1 (s / say-01 :arg0 (s2 / study :arg1-of (s3 / study-01 :arg0 (p / person :quant (n / nearly :op1 200000000)) :mod (g / globe))) :arg1 (p2 / person :quant 2013) :time (y / year :mod (l / last))) :op2 (s4 / say-01 :arg0 (s5 / study) :arg1 (n2 / number :quant-of (p3 / person :arg0-of (u / use-01 :arg1 (s6 / software :mod (k / kind :mod (t / this)))) :arg0-of (u2 / use-01 :arg1 (s7 / software :mod (k2 / kind :mod (t2 / this))))))))
(c / cause-01 :arg0 (t / thing :arg2-of (p / price-01 :arg1 (o / oil)) :arg1-of (l / low-04)) :arg1 (d / decide-01 :arg0 (c2 / company :mod (e / energy)) :arg1 (l2 / leave-15 :arg0 (c3 / company :mod (e2 / energy)) :arg1 (l3 / legacy :mod (s / situation :mod (e3 / economy)) :arg1-of (p2 / pressure-01 :arg1-of (c4 / cause-01 :arg0 (m / monetary-quantity :arg2-of (p3 / price-01 :arg1 (o2 / oil)) :arg1-of (l4 / low-04))))))))
(c / change-01 :arg1 (r / rbs :quant (a / all)) :arg2 (r2 / rbs) :arg2-of (e / except-01 :arg1 (a2 / and :op1 (c2 / case-03 :arg1 (c3 / country :name (n / name :op1 "N-A"))) :op2 (q / quote-01 :arg1 (e2 / exchange-01 :arg1 (a3 / and :op1 (e3 / exchange-01 :arg1 (s / stock)) :op2 (e4 / exchange-01 :arg1 (s2 / stock))))))))
(f / follow-02 :arg0 (h / he) :arg1 (t / trace :consist-of (a / and :op1 (r / richards) :op2 (s / smith) :op3 (l / lester) :op4 (l2 / lester) :op5 (p / pat) :op6 (w / willie) :op7 (w2 / willie))))
(p / push-02 :arg0 (p2 / person :arg0-of (a / act-01 :arg1 (a2 / act-01 :arg0 (p3 / person)))) :arg2 (p4 / person :arg0-of (a3 / act-01 :arg1 (h / have-org-role-91 :arg2 (d / deputy)))) :time (s / since :op1 (d2 / date-entity :decade (N / N-A))))
(a / and :op1 (a2 / announce-01 :arg0 (p / person :name (n / name :op1 "N-A") :arg0-of (h / have-org-role-91 :arg2 (p2 / putin))) :arg1 (l / like-02 :arg0 (p3 / person) :arg1 (a3 / and :op1 (w / withdraw-01 :arg0 (p4 / person) :arg1 (j / job :poss (p5 / person)) :arg2 (o / office :mod (i / ivanov) :location (c / country :name (n2 / name :op1 "N-A")))) :op2 (p6 / propose-01 :arg0 (p7 / person) :arg1 (v / vaino :arg0 (p8 / person) :arg1 (p9 / person)))))) :op2 (p10 / propose-01 :arg0 (p11 / person) :arg1 (v2 / vaino :arg0 (p12 / person) :arg1 (p13 / person))) :medium (c2 / channel :name (n3 / name :op1 (m / mr.))))
(b / be-located-at-91 :arg1 (a / and :op1 (p / person :arg0-of (h / have-org-role-91 :arg2 (a2 / actress))) :op2 (c / comedy :mod (s / status :mod (g / greg)))) :arg2 (p2 / program) :time (s2 / since :op1 (s3 / seize-01 :ord (o / ordinal-entity :value 1 :range (s4 / seize-01 :ord (o2 / ordinal-entity :value 1))))))
(s / struggle-02 :arg0 (m / man :quant 3) :arg1 (s2 / swim-01 :arg0 (m2 / man) :arg2 (a / area :mod (s3 / safe-01))) :arg1-of (c / cause-01 :arg0 (c2 / continue-01 :arg1 (w / way :poss (m3 / man)))))
(c / create-01 :arg0 (f / firm :name (n / name :op1 (a / astrazeneca) :op2 (a2 / astrazeneca)) :arg1-of (c2 / create-01 :arg0 (f2 / firm :name (n2 / name :op1 (b / brilique)) :mod (c3 / country :name (n3 / name :op1 "N-A"))))) :arg1 (r / risk-01 :mod (t / this)) :manner (r2 / reduce-01 :arg0 (f3 / firm) :arg1 (w / world-region :mod (c4 / clots))))
(' / '' :arg0 (m / macfarlane :name (n / name :op1 (c / cbc) :op2 (m2 / macfarlane))) :arg1 (1 / 14-year-old :arg1 (12 / 14-year-old :poss (h / he)) :arg1-of (r / resemble-01 :arg2 ('2 / '' :arg1 (p / pig)))) :mod (j / just))
(p / possible-01 :polarity - :arg1 (h / help-02 :arg0 (p2 / person :arg0-of (u / use-01 :arg1 (p3 / person :arg0-of (u2 / use-01)))) :arg1 (p4 / person) :time (h2 / hear-01 :arg0 (p5 / person) :arg1 (t / thing :manner-of (b / byron :arg1 (m / macdonald :mod (b2 / byron)))))))
(t / think-01 :arg0 (i / i) :arg1 (s / show-01 :arg0 (w / we) :arg1 (s2 / sense-01 :arg0 (w2 / we) :arg1 (h / humor) :mod (g / great)) :arg2 (w3 / we)) :time (t2 / time :arg1-of (s3 / same-01)))
(m / meet-03 :arg0 (p / person :arg1-of (n / neighbor-01 :arg2 (r / relieved)) :arg0-of (t / tell-01 :arg1 (t2 / turn-02 :arg1 (l / life :poss (p2 / person)) :arg2 (t3 / throat :part-of (p3 / person)))) :arg2 (p4 / person)))
(r / reveal-01 :arg0 (s / survey-01 :arg1 (s2 / survey-01 :time (b / before :op1 (n / now) :duration (t / temporal-quantity :quant (N / N-A) :unit (m / month))))) :arg1 (a / album) :time (y / yet))
(h / have-concession-91 :arg1 (s / show-01 :arg0 (i / i) :arg1 (a / accurate :domain (t / thing :arg2-of (r / result-01 :arg1 (t2 / thing :arg2-of (r2 / result-01 :arg1 (s2 / store :name (n / name :op1 (y / yougov))))))) :degree (e / equal :compared-to (s3 / store :mod (r3 / record) :poss (s4 / store :name (n2 / name :op1 (s5 / soho)))))) :arg1-of (c / cause-01 :arg0 (c2 / count-01 :polarity - :arg0 (t3 / they) :arg1 (n3 / number :quant-of (a2 / and :op1 (p / person :mod (f / female)) :op2 (p2 / person :arg0-of (e2 / enthusiasts :arg1 (o / or :op1 (s6 / store) :op2 (f2 / forum :mod (o2 / online))) :mod (a3 / actual)))))))))
(o / offer-01 :arg0 (a / and :op1 (s / store) :op2 (r / restaurant)) :arg1 (a2 / and :op1 (t / thing :arg2-of (s2 / shelter-01)) :op2 (f / food :arg1-of (f2 / free-04))) :arg4 (p / person) :arg1-of (n / need-01) :frequency (o2 / often))
(d / dominate-01 :arg0 (m / medal :name (n / name :op1 (s / silver) :op2 (m2 / medal) :op3 (m3 / medal) :op4 (m4 / medal) :op5 (m5 / medal) :op6 (m6 / medal) :op7 (m7 / medal))) :arg1 (c / country :name (n2 / name :op1 "N-A")))
(s / start-01 :arg1 (i / it))
(a / and :op1 (t / team :arg0-of (h / have-org-role-91 :arg1 (t2 / team :name (n / name :op1 (q / quarter-finals)))) :mod (b / both)) :op2 (d / determine-01 :arg0 (m / match-03) :arg1 (p / person :arg0-of (w / win-01 :ord (o / ordinal-entity :value 1)) :arg0-of (f / finish-01 :arg1 (m2 / match-03 :arg0 (g / group :mod (s / six-team)) :ord (o2 / ordinal-entity :value 2))))))
(a / allow-01 :arg0 (p / person :mod (c / country :name (n / name :op1 "N-A"))) :arg1 (t / take-01 :arg0 (y / you) :arg1 (b / break) :arg3 (a2 / all)))
(i / insist-01 :arg0 (p / person :name (n / name :op1 "donald" :op2 "j." :op3 "trump")) :arg1 (s / serious-02 :polarity - :arg1 (a / and :op1 (p2 / person :name (n2 / name :op1 "Obama") :arg0-of (h / have-org-role-91 :arg2 (p3 / president))) :op2 (m / metropolis :mod (h2 / hillary))) :time (c / claim-01 :arg0 (p4 / person) :arg1 (' / '' :arg0 (a2 / and :op1 (p5 / person :arg0-of (h3 / have-org-role-91 :arg2 (p6 / president))) :op2 (p7 / person :arg0-of (h4 / have-org-role-91 :arg1 (g / group :mod (t / terrorist) :part-of (s2 / state))))) :arg1 (p8 / person :arg0-of (h5 / have-org-role-91 :arg1 (g2 / group :mod (t2 / terrorist) :poss (s3 / state :mod (t3 / terrorist)))) :arg0-of (t4 / try-01 :arg1 (r / remove-01 :arg0 (p9 / person) :arg1 (d / dispute-01 :mod (l / last) :location (a3 / around :op1 (c2 / campaign-01)))))))) :time (b / before :op1 (n3 / now) :duration (f / few :op1 (t5 / temporal-quantity :quant (N / N-A) :unit (w / week))))))
(s / say-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg2 (a / ambassador))) :arg1 (i / increase-01 :arg1 (i2 / interest-01 :arg1 (c / company :mod (c2 / country :name (n / name :op1 "N-A")))) :manner (d / dramatic) :time (s2 / since :op1 (r / remove-01 :arg1 (s3 / sanction-02 :arg1 (c3 / country :name (n2 / name :op1 "N-A")) :mod (i3 / international))))))
(c / contrast-01 :arg2 (d / detain-01 :arg1 (p / person :quant 9) :arg1-of (c2 / cause-01 :arg0 (c3 / connect-01 :arg1 (p2 / person) :arg2 (i / investigate-01 :arg1 (c4 / coup :arg1-of (a / attempt-01))) :arg2-of (i2 / include-01 :arg1 (h / head :part-of (a2 / and :op1 (p3 / person :arg0-of (h2 / head-01 :arg1 (c5 / chamber :mod (c6 / commerce) :mod (c7 / commerce)))) :op2 (p4 / person :quant 7 :arg1-of (i3 / include-91 :arg2 (p5 / person :quant 7 :arg1-of (a3 / arrest-01 :arg2 (c8 / condition :topic (c9 / control-01 :arg1 (f / forensic))))))))))) :time (d2 / date-entity :dayperiod (N / N-A)))))
(o / obligate-01 :arg2 (p / put-01 :arg0 (b / bank :quant (a / all)) :arg1 (h / hand :part-of (b2 / bank)) :arg2 (s / stone)))
(b / break-up-08 :arg1 (t / temporal-quantity :quant (N / N-A) :unit (y / year)) :arg3 (k / kabata))
(a / and :op1 (t / take-01 :arg1 (t2 / traffic) :arg3 (u / underground)) :op2 (p / provide-01 :arg1 (f / flow-01 :arg1 (p2 / pedestrian :arg1-of (c / continue-01))) :location (a2 / along :op1 (c2 / coast))))
(s / support-01 :arg0 (c / campaign-01 :mod (1 / 1-month)) :arg1 (b / bank) :manner (r / rate :mod (i / interest :mod (u / ultra))) :mod (a / also))
(v / van :arg1 (r / robin) :degree (s / slight))
(a / and :op1 (k / know-01 :polarity - :arg0 (i / i) :arg1 (t / thing :quant 2)) :op2 (a2 / and :op1 (s / spread-02 :arg1 (t2 / thing :quant 2) :arg1-of (w / wide-02)) :op2 (b / be-located-at-91 :arg1 (a3 / and :op1 (p / person :arg0-of (h / have-org-role-91 :arg2 (c / commander :mod (g / general)))) :op2 (p2 / person :arg0-of (h2 / have-org-role-91 :arg1 (a4 / and :op1 (p3 / person :arg0-of (h3 / have-org-role-91 :arg2 (c2 / commander :mod (g2 / general)))) :op2 (p4 / person :arg0-of (h4 / have-org-role-91 :arg2 (l / lieutenant))) :op3 (p5 / person :arg0-of (h5 / have-org-role-91 :arg2 (l2 / lieutenant))) :op4 (p6 / person :arg0-of (h6 / have-org-role-91 :arg2 (l3 / lieutenant))) :op5 (p7 / person :arg0-of (h7 / have-org-role-91 :arg2 (l4 / lieutenant)))) :arg0-of (h8 / have-org-role-91 :arg2 (l5 / lieutenant))))))))
(f / feel-01 :arg0 (i / i) :arg1 (g / give-up-07 :arg0 (i2 / i) :arg1 (o / owned :arg0 (i3 / i))) :time (m / moment :mod (t / that)))
(h / hold-04 :arg1 (m / meet-03) :time (a / advance-01 :arg1 (d / day :quant 3 :mod (t / this)) :arg1-of (a2 / accept-01 :arg2 (c / center))))
(r / reflected :arg1 (p / project :mod (t / this)) :time (a / after :op1 (a2 / and :op1 (j / july :quant 15) :op2 (p2 / party :mod (a3 / ak)) :op3 (m / mhp :prep-against (c / coup :mod (u / unity :mod (n / nation)))))))
(s / safe-01 :arg1 (y / you) :accompanier (j / justice :mod (t / turkish)))
(a / and :op1 (p / person :name (n / name :op1 "nurhan" :op2 "Önder") :location (p2 / prison) :arg1-of (b / be-located-at-91 :arg2 (p3 / prison) :purpose (c / crime-02 :mod (a2 / another))) :arg0-of (s / say-01 :arg1 (i / involve-01 :arg1 (p4 / person) :arg2 (d / die-01 :arg1 (p5 / person))))) :op2 (s2 / sentence-01 :arg1 (p6 / person) :arg2 (i2 / imprison-01 :arg1 (p7 / person) :arg2 (d2 / die-01 :arg1 (p8 / person)))) :op3 (a3 / and :op1 (s3 / sentence-01 :arg1 (p9 / person) :arg2 (i3 / imprison-01 :arg1 (p10 / person) :arg2 (c2 / commit-02 :arg0 (p11 / person) :arg1 (c3 / crime-02)))) :op2 (d3 / direct-01 :arg0 (p12 / person) :arg1 (p13 / person :arg0-of (h / have-org-role-91 :arg1 (j / judiciary) :arg2 (a4 / authority))))))
(c / claim-01 :arg1 (p / prevent-01 :arg1 (i / intelligence :arg1-of (g / give-01 :arg0 (m / m?t :location (f / footsteps :poss (p2 / person :arg0-of (l / lead-02 :arg1 (o / organization :mod (t / terrorism)))))))) :arg2 (h / hit-01 :arg1 (s / sönmezate :mod (g2 / gökhan)))))
(c / contrast-01 :arg1 (h / have-org-role-91 :arg0 (p / person :quant 39 :arg0-of (h2 / have-org-role-91 :arg2 (o / officer))) :arg1 (p2 / person :quant 39 :arg0-of (h3 / have-org-role-91 :arg2 (o2 / officer))) :arg2 (p3 / person :quant 37 :arg0-of (h4 / have-org-role-91 :arg2 (o3 / officer))) :time (r / recent)) :arg2 (m / make-18 :arg0 (a / and :op1 (p4 / person :arg0-of (h5 / have-org-role-91 :arg2 (g / general))) :op2 (p5 / person :mod (c2 / country :name (n / name :op1 "N-A")) :mod (c3 / country :name (n2 / name :op1 "N-A")))) :arg1 (p6 / person :arg0-of (h6 / have-org-role-91 :arg2 (o4 / officer)))))
(h / have-concession-91 :arg1 (f / finish-01 :arg0 (i / i)) :arg2 (c / center :mod (m / medicine) :location (l / location :name (n / name :op1 "Çankaya"))))
(r / recommend-01 :arg1 (o / open-01 :arg1 (t / tomb :mod (t2 / turkes)) :mod (a / again)))
(s / say-01 :arg1 (i / include-91 :arg1 (p / person :quant 1 :arg1-of (i2 / include-91 :arg2 (p2 / person :arg0-of (s2 / sail-01)))) :arg2 (h / history :mod (c / california))) :arg2 (p3 / person :name (n / name :op1 "N-A")))
(m / mention-01 :arg0 (i / i) :arg1 (b / be-located-at-91 :arg1 (t / this) :arg2 (u / university :name (n / name :op1 "N-A"))))
(m / multi-sentence :snt1 (c / connect-01 :arg1 (p / person :arg0-of (p2 / play-01) :mod (f / football) :quant (s / some)) :arg2 (a / and :op1 (p3 / person :arg0-of (p4 / play-01) :mod (f2 / football) :mod (s2 / some)) :op2 (p5 / person :arg0-of (m2 / manage-01)) :source (a2 / and :op1 (c2 / club) :op2 (h / hakan))) :arg1-of (d / direct-02)) :snt2 (ü / ükür))
(i / important :degree (v / very) :domain (a / animal) :mod (a2 / also) :mod (a3 / also))
(t / transmitted :arg1 (i / instruct-01 :mod (t2 / this)) :arg2 (m / meet-03 :accompanier (a / and :op1 (g / gülen) :op2 (p / poconos)) :mod (f / face-to-face)) :mod (u / usual))
(m / multi-sentence :snt1 (a / ask-01 :arg1 (a2 / allege-01 :arg1 (c / capture-01 :arg1 (a3 / and :op1 (p / person :name (n / name :op1 "zekeriya" :op2 "Öz")) :op2 (p2 / person :arg0-of (ö / öksüz :arg1 (a4 / adil)))) :location (g / georgia)))) :snt2 (r / right-06 :polarity - :arg1 (i / information :mod (t / this)) :time (m2 / moment)))
(m / meet-03 :location (a / august :quant 23-24))
(s / state-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (g / government-organization :name (n / name :op1 "N-A") :mod (r / red)) :arg2 (p2 / president))) :arg1 (s2 / start-01 :arg0 (p3 / person) :arg1 (m / mobilization :arg1 (m2 / meat :name (n2 / name :op1 (s3 / sacrificial) :op2 (m3 / meat) :op3 (m4 / meat) :op4 (m5 / meat) :op5 (m6 / meat) :op6 (m7 / meat) :op7 (m8 / meat))) :op7 (c / convert-01 :arg1 (m9 / meat) :arg2 (c2 / canister) :manner (m10 / manner :mod (h2 / hygienic)))) :mod (g2 / great)))
(p / possible-01 :arg1 (p2 / pay-01 :arg0 (c / citizen :poss (w / we)) :arg1 (m / monetary-quantity :arg2-of (c2 / cost-01 :arg1 (s / sacrifice-01))) :manner (m2 / mean-01 :arg1 (n / number :mod (c3 / crescent :mod (r / red)) :quant (n2 / number)) :arg2 (b / bank :name (n3 / name :op1 (z / ziraat))))))
(s / spend-02 :arg0 (s2 / sowa :arg1-of (f / fame-01)) :arg1 (t / temporal-quantity :quant (N / N-A) :unit (y / year) :arg1-of (i / include-91 :arg2 (b / building :arg0-of (b2 / build-01 :arg1 (e / ecology))))) :time (b3 / before :op1 (n / now) :duration (t2 / temporal-quantity :quant (N2 / N-A) :unit (y2 / year))))
(l / locate-01 :arg1 (s / system :name (n / name :op1 (r / reserves)) :arg1-of (u / use-01 :arg2 (s2 / surgery-01 :arg2 (h / heart)) :arg1-of (p / possible-01)) :arg1-of (u2 / use-01 :arg2 (s3 / surgery-01 :arg2 (h2 / heart)))) :location (a / around :op1 (a2 / and :op1 (w / wrist) :op2 (w2 / wrist :part-of (w3 / wrist)))))
(a / and :polarity - :op1 (t / thing :domain (m / match-03 :mod (t2 / this)) :ord (o / ordinal-entity :value 1)) :op2 (g / game :mod (l / last) :topic (c / compete-01 :arg0 (c2 / club :quant 2 :mod (o2 / outstanding) :poss (w / we)))) :op3 (l2 / leave-11 :arg0 (m2 / match-03) :time (b / behind :op1 (d / date-entity :century (N / N-A)))))
(s / superior-01 :polarity - :arg1 (p / person :arg0-of (o / oppose-01)) :arg2 (o2 / other :mod (e / each)) :time (f / face :part-of (f2 / face :part-of 111)))
(h / hope-01 :arg0 (p / person :arg0-of (h2 / have-org-role-91 :arg1 (p2 / person :arg0-of (h3 / have-org-role-91 :arg1 (c / country :name (n / name :op1 "N-A")) :arg2 (s / spokesman))) :arg2 (s2 / spokesman))) :arg1 (r / return-01 :polarity - :arg1 (p3 / person) :arg4 (m / message :arg0-of (a / ask-02 :arg1 (c2 / comment-01 :arg0 (p4 / person)))) :arg1-of (q / quick-02)))
(w / watch-01 :arg0 (w2 / we) :arg1 (h / house :prep-with (a / and :op1 (p / paint :mod (w3 / white)) :op2 (b / blue))) :time (g / go-02 :arg0 (w4 / we) :arg4 (b2 / bodrum)))
(b / budget-01 :polarity - :arg0 (y / you) :arg1 (i / it) :arg1-of (c / cause-01 :arg0 (a / amr-unknown)))
(a / and :op1 (l / leave-15 :arg0 (h / he) :arg1 (a2 / and :op1 (p / person :arg0-of (g / guard-01)) :op2 (c / car))) :op2 (r / return-01 :arg1 (h2 / he) :arg4 (c2 / country :poss (h3 / he)) :manner (h4 / happy)))
(p / phone-number-entity :value (N / N-A))
(s / say-01 :arg0 (c / company) :arg1 (p / provide-01 :arg0 (c2 / cut-02 :mod (a / additional)) :arg1 (s2 / space :arg1-of (n / need-01 :purpose (g / get-05 :arg1 (c3 / company) :arg2 (p2 / period :arg1-of (t / trouble-01) :location (m / market)))))))
(s / say-01 :arg0 (h / he) :arg1 (n / need-01 :arg0 (w / we) :arg1 (e / economy :arg0-of (e2 / effective-04) :beneficiary (m / majority) :beneficiary (a / and :op1 (s2 / sea :location (n2 / north)) :op2 (c / country :mod (w2 / whole))))) :medium (t / thing :arg1-of (s3 / state-01)))
(c / contrast-01 :arg2 (p / possible-01 :polarity - :arg1 (s / say-01 :arg1 (s2 / spread-03 :arg0 (h / he) :arg1 (t / temperature :mod (a / any))) :mod (e / even))))
(s / say-01 :arg0 (p / person :name (n / name :op1 "N-A") :arg0-of (w / win-01 :arg1 (t / titles :quant 3) :time (p2 / previous))) :arg1 (s2 / situation :arg1-of (s3 / special-02) :domain (t2 / this)))
(d / dismiss-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (c / country :name (n / name :op1 "Russia")) :arg2 (p2 / putin))) :arg1 (p3 / person :mod (c2 / country :name (n2 / name :op1 "Russia"))) :arg1-of (s / special-02))
(i / include-91 :arg1 (a / and :op1 (s / steel :quant (v / volume-quantity :quant (N / N-A) :unit (k / kilogram))) :op2 (c / concrete :quant (m / mass-quantity :quant (N2 / N-A) :unit (k2 / kilogram)))) :arg2 (a2 / and :op1 (c2 / concrete) :op2 (s2 / support-01 :quant 46)))
(a / and :op1 (s / show-01 :arg0 (t / this) :arg1 (p / person :arg0-of (s2 / specialize-01) :arg1-of (a2 / arm-01) :quant (m / multiple))) :op2 (a3 / activity-06 :arg0 (p2 / person :name (n / name :op1 "anthony" :op2 "gjindi") :arg0-of (h / have-org-role-91 :arg2 (c / commissioner :mod (p3 / philadelphia)))) :location (s3 / station)))
(c / contrast-01 :arg2 (p / propose-01 :arg0 (i / i) :arg1 (p2 / propose-01 :arg1 (g / give-01 :arg1 (r / risk-01 :arg2 (p3 / person)) :arg2 (p4 / person) :time (a / after :op1 (n / now) :quant (u / up-to :op1 (t / temporal-quantity :quant (N / N-A) :unit (y / year)))) :purpose (r2 / reduce-01 :arg0 (p5 / person) :arg1 (r3 / risk-01 :arg2 (p6 / problem :topic (c2 / cardiovascular)))) :degree (f / further)))))
(a / and :op1 (e / excite-01 :arg1 (i / i) :degree (m / more)) :op2 (t / turned :arg1 (i2 / i) :arg1-of (r / resemble-01 :arg2 (p / pig)) :arg1-of (r2 / resemble-01 :arg2 (p2 / pig))) :degree (m2 / more))
(p / person :arg0-of (t / tour-01) :location (a / and :op1 (s / sun) :op2 (p2 / person :arg0-of (t2 / tour-01)) :op3 (s2 / shock-01 :arg0 (l / life :poss (p3 / person)))))
(i / indicate-01 :arg0 (s / say-01 :arg0 (s2 / she) :arg1 (s3 / say-01 :arg0 (s4 / she) :arg1 (g / give-up-07 :polarity - :arg0 (t / that) :arg1 (c / candidate :beneficiary (c2 / candidate :beneficiary (c3 / court :mod (c4 / c))) :condition (e / elect-01))))))
(h / have-03 :arg0 (t / they) :arg1 (b / break) :time (b2 / before :op1 (d / deciding :arg0 (t2 / they) :arg1 (t3 / thing :arg1-of (d2 / do-02 :time (f / future))))))
(c / contrast-01 :arg1 (i / inspire-01 :arg0 (m / memory :mod (b / bottom)) :arg1 (l / line :mod (b2 / bottom))) :arg2 (s / say-01 :arg0 (p / person :arg0-of (o / observe-01) :quant (s2 / some)) :arg1 (s3 / say-01 :arg0 (p2 / person :arg0-of (o2 / observe-01) :quant (s4 / some)) :arg1 (p3 / product :name (n / name :op1 "N-A") :mod (r / race) :domain (l2 / line)))))
(a / announce-01 :arg1 (t / thing :arg2-of (r / result-01 :arg1 (c / congress)) :mod (p / preliminary)) :time (b / by :op1 (d / date-entity :dayperiod (N / N-A))) :medium (t2 / tuesday))
(p / progress-01 :arg1 (p2 / person :mod (c / country :name (n / name :op1 "N-A"))) :mod (s / surprise-01) :location (h / here) :time (a / after :op1 (o / olympics :arg0 (p3 / person) :arg1 (w / win-01 :arg0 (p4 / person) :arg1 (t / team :quant 12 :mod (l / last))))))
(c / cause-01 :arg0 (f / factor :mod (f2 / factor :quant (f3 / few) :time (n / now))) :arg1 (f4 / feel-01 :arg0 (b / bitter) :arg1 (b2 / boiled :arg1 (b3 / boiled :location (s / surface)) :duration (t / temporal-quantity :quant (N / N-A) :unit (y / year)))))
(s / say-01 :arg0 (h / he) :arg1 (a / and :op1 (c / close-01 :arg0 (h2 / he) :arg1 (d / door)) :op2 (d2 / drink-01 :arg0 (h3 / he) :arg1 (c2 / coffee) :duration (p / period))))
(s / say-01 :arg0 (h / he) :arg1 (a / and :op1 (p / possible-01 :polarity - :arg1 (g / go-02 :arg0 (i / i) :arg4 (v / vetted)) :time (e / ever) :frequency (r / rate-entity-91 :arg3 (t / temporal-quantity :quant (N / N-A) :unit (d / day)))) :op2 (p2 / prepare-02 :arg0 (i2 / i) :arg1 (i3 / i) :arg2 (o / order-01 :arg0 (i4 / i) :arg2 (e2 / each :arg1-of (i5 / include-91 :arg2 (t2 / they)))))) :time (d2 / day :mod (e3 / every) :mod (p3 / percentage-entity :value (N2 / N-A))))
(p / possible-01 :arg1 (f / find-01 :arg0 (t / that) :arg1 (f2 / favourites :mod (o / old) :poss (t2 / they) :mod (o2 / old)) :beneficiary (c / customer :quant (m / most)) :arg1-of (p2 / possible-01)))
(w / write-01 :arg0 (p / person :quant (s / some) :arg1-of (p2 / participate-01 :arg0 (p3 / protest-01)) :arg0-of (p4 / protest-01)) :arg1 (p5 / posting :prep-against (w2 / wall :poss (p6 / person :arg0-of (h / have-org-role-91 :arg2 (p7 / president :mod (i / interim)))))))
(s / send-01 :arg1 (m / money) :arg2 (f / form :poss (m2 / member :arg2-of (h / have-org-role-91 :arg1 (o / organization)))) :time (s2 / send-01 :arg1 (m3 / money) :arg2 (g / gulen :polarity - :arg1 (m4 / money))))
(a / affect-01 :arg0 (r / rate :mod (i / interest)) :arg1 (p / positive) :mod (a2 / also))
(a / and :op2 (c / close-01 :arg0 (h / he) :arg1 (p / press :arg1-of (l / last-01 :arg2 (t / temporal-quantity :quant (N / N-A) :unit (m / minute))))))
(q / questionnaire :arg1 (t / thing :arg2-of (p / price-01 :arg1 (a / and :op1 (f / fortress) :op2 (w / west :part-of (e / east))))))
(a / after :op1 (b / begin-01 :arg1 (g / galaxies)))
(b / begin-01 :arg0 (c / channel :quant 3 :arg1-of (r / range-01 :arg2 (r2 / range-01 :arg3 (r3 / range-01 :arg3 (p / person :arg2-of (s / staff-01)))) :arg1-of (w / wide-02))) :arg1 (w2 / work-01 :arg0 (c2 / channel) :purpose (c3 / cut-off-04 :arg0 (w3 / we) :arg1 (t / tsunami))))
(t / think-01 :arg0 (w / we) :arg1 (c / contrast-01 :arg1 (h / have-03 :polarity - :arg0 (w2 / we) :arg1 (n / news) :source (h2 / home)) :arg2 (c2 / come-01 :arg1 (i / instruct-01 :arg2 (a / and :op1 (w3 / we) :op2 (w4 / we))) :arg4 (m / moment :mod (e / exact)))) :location (w5 / word :quant 1 :arg1-of (i2 / include-91 :arg2 (w6 / word :part-of (s / shooting)))))
(h / help-01 :arg0 (i / i) :arg1 (a / and :op1 (h2 / have-03 :polarity - :arg0 (w / we) :arg1 (t / time :arg1-of (h3 / hard-04))) :op2 (p / print-01 :arg0 (w2 / we) :arg1 (t2 / thing :arg1-of (a2 / answer-01)))) :arg2 (w3 / we))
(b / be-located-at-91 :arg1 (t / they) :arg2 (u / under :op1 (h / hand :part-of (w / we))))
(a / and :op1 (o / operate-01 :arg1 (o2 / operation :name (n / name :op1 (i / izmir)) :mod (f / finance) :mod (c / country :name (n2 / name :op1 "N-A")))) :op2 (c2 / carry-out-03 :arg1 (o3 / operation) :location (u / university :location-of (d / detain-01 :arg1 (u2 / university) :arg2 (a2 / address :poss (p / person :quant 40 :arg2-of (s / suspect-01) :source (u3 / university))))) :location (u4 / university :location (i2 / izmir))))
(a / accuse-01 :arg1 (p / person :arg0-of (h / have-org-role-91 :arg1 (f / family) :arg2 (m / member))) :arg2 (m2 / mess-up-02 :arg0 (p2 / person) :arg1 (f2 / finger :part-of (f3 / finger :part-of (p3 / person))) :time (a2 / and :op1 (s / show-04) :op2 (t / try-02 :arg1 (f4 / finger)))) :time (p4 / previous))
(c / complete-01 :arg1 (i / investigate-01 :mod (c2 / comprehensive)) :time (b / before :op1 (c3 / complete-01 :arg1 (i2 / investigate-01))))
(a / and :op1 (l / lie :arg1 (w / we)) :op2 (r / register-02 :arg1 (w2 / we)) :time (b / before :op1 (a2 / age-01 :arg1 (w3 / we) :arg2 (t / temporal-quantity :quant (N / N-A) :unit (d / day)))))
(m / multi-sentence :snt1 (p / possible-01 :arg1 (o / owe-01 :arg0 (t / they) :arg1 (g / gratitude :poss (t2 / they)) :arg2 (p2 / person :arg0-of (v / visit-01 :arg1 (t3 / they)))) :mod (a / also)) :snt2 (a2 / ask-02 :arg0 (g2 / god :mod (t4 / that)) :arg1 (s / settle-03 :arg1 (h / he)) :arg2 (h2 / he)))
(i / incident :time-of (t / take-01 :arg0 (w / work-01 :arg1 (r / review-01)) :arg1 (a / and :op1 (b / break-01 :arg1 (b2 / bag :mod (p / part :mod (b3 / bone)))) :op2 (t2 / take-01 :arg1 (i2 / incident) :arg3 (i3 / institution :mod (f / forensic))))))
(r / result-01 :arg1 (t / thing :arg2-of (r2 / result-01 :arg1 (r3 / research-01 :arg0 (f / family) :arg1-of (m / miss-01)))) :arg2 (t2 / thing :arg2-of (r4 / result-01 :arg1 (r5 / research-01 :arg0 (p / person :arg0-of (h / have-rel-role-91 :arg1 (p2 / person :arg0-of (h2 / have-rel-role-91 :arg1 (p3 / person :arg0-of (h3 / have-rel-role-91 :arg1 (p4 / person :arg0-of (h4 / have-rel-role-91 :arg1 (p5 / person :arg0-of (h5 / have-rel-role-91 :arg1 (p6 / person :arg0-of (h6 / have-rel-role-91 :arg1 (p7 / person :arg0-of (h7 / have-rel-role-91 :arg1 (p8 / person :arg0-of (h8 / have-rel-role-91 :arg2 (b / boyfriend))) :arg2 (b2 / boyfriend))) :arg2 (s / s.))) :arg2 (s2 / s.)))))))))))))))
(s / say-01 :arg0 (i / information :arg1-of (r / receive-01)) :arg1 (t / take-01 :arg1 (p / person :quant 5 :arg1-of (i2 / include-91 :arg2 (p2 / person :arg0-of (a / attend-01 :arg1 (f / festival :mod (y / youth)) :time (d / date-entity :decade (N / N-A)))))) :arg3 (h / hospital)))
(s / say-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (p2 / publication :name (n / name :op1 "N-A") :poss (a / and :op1 (m / manage-01 :arg1 (p3 / prison)) :op2 (p4 / pension)) :arg2 (s2 / spokesman)))) :arg1 (k / kill-01 :arg1 (p5 / person :quant 10 :arg1-of (i / imprison-01) :arg1-of (d / determine-01 :time (y / yet) :arg1-of (c / cause-01 :arg0 (c2 / cause-01 :arg0 (p6 / prison :location (c3 / city)) :arg1 (p7 / prison :location (c4 / city))))))))
(m / measure-02 :arg1 (o / oppose-01 :arg1 (' / '' :location (m2 / macedonia))))
(m / multi-sentence :snt1 (g / get-05 :mode (i / imperative) :arg0 (w / we) :arg1 (p / party) :arg2 (i2 / inside)) :snt2 (s / say-01 :mode (i3 / imperative) :arg0 (w2 / we) :arg1 (p2 / possible-01 :arg1 (t / take-01 :arg0 (s2 / slash :op1 (w3 / we) :op2 (c / country)) :arg1 (o / outside)))))
(s / say-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg2 (a / athletes :mod (n / nation)))) :arg1 (g / goodbye :prep-to (o / olympics) :domain (p2 / person :mod (n2 / nation) :arg0-of (h2 / have-org-role-91 :arg2 (o2 / olympics))) :mod (o3 / overall :ord (o4 / ordinal-entity :value 11))))
(p / play-01 :arg0 (w / we :quant (m / multiple :op1 1) :poss (w2 / we)) :arg1-of (c / cause-01 :arg0 (p2 / play-11 :arg0 (w3 / we) :arg2 (o / olympics :quant 2016 :arg1-of (m2 / mean-01 :arg2 (v / vs :arg1 (m3 / match-03)))))))
(a / and :op1 (c / category :domain (w / win-01 :arg0 (c2 / company :arg0-of (w2 / win-01 :arg1 (e / ezekiel :name (n / name :op1 (e2 / ezekiel)) :mod (u / uefa))))) :arg2 (o / ordinal-entity :value (n2 / ninth)) :time (c3 / career :poss (h / he))) :op2 (s / serve-01 :arg0 (p / person :arg0-of (s2 / serve-01 :arg1 (f / final :mod (i / international)))) :arg2 (f2 / final :mod (i2 / international))))
(s / say-01 :arg0 (t / thing :arg1-of (s2 / state-01)) :arg1 (t2 / thing :arg1-of (s3 / state-01)))
(s / struggle-01 :arg0 (a / and :op1 (p / politics) :op2 (c / commerce) :op3 (t / transport-01) :op4 (e / energy) :op5 (e2 / energy)) :arg2 (t2 / terrorism))
(s / shouting :location (i / i))
(c / complain-01 :polarity - :arg0 (i / i) :arg1 (p / pill))
(i / include-91 :arg1 (t / this) :arg2 (c / child :quant 1 :arg1-of (i2 / include-91 :arg2 (c2 / child :mod (t2 / this)))))
(s / sport :mod (n / new) :mod (t / this) :arg0-of (r / reveal-01 :arg1 (p / potential :domain (r2 / reveal-01 :arg1 (p2 / potential :poss (m / motorcycles :arg1-of (a / actual-02) :arg1-of (t2 / touring :arg2 (a2 / and :op1 (i / improve-01 :arg1 (m2 / motor)) :op2 (i2 / improve-01 :arg1 (s2 / special))))))))))
(s / shut-down-05 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (m / ministry :mod (m2 / ministry :mod (f / finance)) :poss (g / group :name (n / name :op1 "N-A") :mod (s2 / sakarya))))) :arg1 (p2 / person :arg0-of (h2 / have-org-role-91 :arg2 (p3 / person :arg0-of (i / inspect-01)))) :location (c / class :arg1-of (c2 / close-01 :arg0 (i2 / investigate-01 :arg0 (p4 / person)))) :location (p5 / province :name (n2 / name :op1 "N-A") :location (p6 / province :name (n3 / name :op1 "N-A") :mod (c3 / city))))
(d / disease :domain (d2 / disease :arg1-of (i / increase-01 :time (y / year :mod (r / recent)))))
(s / start-01 :arg0 (g / government-organization :arg0-of (g2 / govern-01 :arg1 (f / federal))) :arg1 (f2 / fund-01 :arg0 (g3 / government-organization :arg0-of (g4 / govern-01 :arg1 (f3 / federal))) :arg1 (r / rate-entity-91 :arg1 30 :arg2 (t / temporal-quantity :quant (N / N-A) :unit (y / year))) :arg1-of (m / mean-01 :arg2 (f4 / force-01 :arg1 (p / person :arg0-of (r2 / reside-01 :arg1 (i / island :mod (r3 / rhode)))) :arg2 (o / out-06 :arg1 (p2 / person) :arg2 (t2 / top) :manner (h / help-01 :polarity - :arg0 (p3 / person) :arg1 (i2 / issue-02 :arg0 (c / complex :mod (m2 / more)) :arg1-of (l / legal-02))))))))
(e / exemplify-01 :arg0 (a / and :op1 (c / content-01 :arg1 (t / they) :arg2 (v / village) :degree (v2 / very)) :op2 (a2 / add-02 :arg0 (a3 / and :op1 (p / person) :op2 (p2 / person :location (v3 / village))) :arg2 (l / last :mod (l2 / last)))))
(a / and :op1 (l / look-01 :arg0 (w / we) :arg1 (i / incident :mod (t / this))) :op2 (l2 / look-01 :arg0 (w2 / we) :arg1 (i2 / incident :mod (t2 / this))))
(p / phone-number-entity :value (N / N-A))
(d / die-01 :quant 25)
(d / design-01 :arg1 (m / model) :arg3 (d2 / determine-01 :arg0 (m2 / model) :arg1 (h / home :domain (t / thing :arg1-of (r / resemble-01 :arg2 (t2 / thing :arg1-of (r2 / resemble-01 :arg2 (t3 / thing :arg1-of (r3 / resemble-01 :arg2 (t4 / thing :arg2-of (c / condition-01 :arg1 (t5 / thing :arg1-of (r4 / resemble-01 :arg2 (t6 / thing :arg1-of (r5 / resemble-01 :arg2 (t7 / thing :arg1-of (r6 / resemble-01 :arg2 (t8 / thing :arg1-of (r7 / resemble-01 :arg2 (t9 / thing :arg1-of (r8 / resemble-01 :arg2 (t10 / thing :location (w / world)) :time (o / once))))))))))))))))))))))
(a / and :op1 (e / evaporated :arg1 (t / thing :arg1-of (m / mean-01 :arg2 (s / steam :polarity -)))) :op2 (d / destroy-01 :arg0 (c / cooler :arg1 (w / water)) :arg1 (t2 / thing)))
(a / and :op1 (g / give-01 :arg0 (p / plate) :arg1 (w / way :manner-of (b / bonds :arg0 (w2 / we) :arg1 (f / family))) :arg2 (w3 / we) :time (a2 / always)) :op2 (p2 / prepare-02 :arg0 (p3 / plate) :arg1 (w4 / we) :arg2 (m / make-01 :arg0 (w5 / we) :arg1 (d / dinner))) :op3 (s / say-01 :arg0 (p4 / person :arg0-of (h / have-org-role-91 :arg2 (' / ''))) :arg1 (g2 / galicia :mod (l / louis))))
(a / and :op1 (o / obligate-01 :arg1 (w / we) :arg2 (f / forget-01 :polarity - :arg0 (w2 / we) :arg1 (t / that))) :op2 (f2 / fear-01 :arg0 (w3 / we) :arg1 (p / possible-01 :polarity - :arg1 (a2 / avoid-01 :arg0 (t2 / this) :arg1 (c / carry-01 :arg0 (t3 / this) :arg1 (a3 / attitude))) :mod (a4 / also))))
(c / contrast-01 :arg2 (a / and :op1 (l / last-01 :arg1 (d / divide-02 :arg1-of (g / go-on-15)) :arg2 (m / multiple :op1 (t / temporal-quantity :quant (N / N-A) :unit (m2 / month))) :arg1-of (c2 / clear-06) :duration (m3 / multiple :op1 (t2 / temporal-quantity :quant (N2 / N-A) :unit (m4 / month)))) :op2 (s / shoot-02 :arg0 (c3 / country :name (n / name :op1 "N-A")) :arg1 (c4 / country :name (n2 / name :op1 "N-A")) :time (a2 / after :op1 (s2 / shoot-02 :arg0 (c5 / country) :arg1 (c6 / country) :arg1-of (c7 / cause-01 :arg0 (p / potential :domain (s3 / start-01 :arg1 (c8 / converse-01 :arg1 (p2 / person :quant 2 :arg0-of (l2 / lead-02)) :mod (d2 / definite) :mod (d3 / definite))))))))))
(c / contrast-01 :arg2 (t / think-01 :arg0 (i / i) :arg1 (s / see-01 :arg0 (y / you) :arg1 (s2 / see-01 :arg0 (y2 / you) :arg1 (c2 / change-01 :quant (l / lot :degree (m / more)))))))
(s / say-01 :arg0 (t / thing :source (u / url-entity :value (k / kremlin) :part-of (u2 / url-entity :value (k2 / kremlin)))) :arg1 (i / ivanov :arg0 (c / challenging :mod (t2 / this)) :arg1 (p / possible-01 :arg1 (c2 / call-01 :arg0 (y / you) :arg1 (y2 / you) :arg2 (t3 / thing :arg1-of (c3 / call-01 :arg0 (y3 / you) :arg2 (t4 / thing :arg1-of (c4 / call-01 :arg0 (y4 / you) :arg2 (i2 / i) :duration (t5 / temporal-quantity :quant (N / N-A) :unit (y5 / year))))))) :mod (e / even)) :arg1-of (c5 / cause-01 :arg0 (e2 / excerpt :arg1 (w / website :poss (p2 / person :name (n / name :op1 "N-A") :arg0-of (h / have-org-role-91 :arg1 (c6 / country :name (n2 / name :op1 "N-A")))))))))
(e / expect-01 :arg1 (r / return-01 :arg1 (p / program :ord (o / ordinal-entity :value 12) :part-of (p2 / program)) :arg4 (s / screen) :time (s2 / season :ord (o2 / ordinal-entity :value 28))))
(a / and :op1 (c / combine-01 :arg0 (p / person :arg0-of (e / engineer-01)) :arg1 (a2 / and :op1 (g / gated) :op2 (v / viaduct)) :arg2 (n / north :part-of (s / strait))) :op2 (c2 / connect-01 :arg1 (p2 / person) :arg2 (b / bridge :mod (t / this)) :time (n2 / now)))
(p / possible-01 :arg1 (o / obtain-01 :arg0 (y / you) :arg1 (p2 / person :mod (s / some) :mod (n / new :mod (e / even))) :time (h / hunt :arg0 (p3 / person))))
(d / down :direction (d2 / down :op1 (p / perfection)))
(c / contrast-01 :arg2 (r / reach-01 :arg1 (p / point :quant (s / some) :arg1-of (i / include-91 :arg2 (p2 / point :mod (t / turn-02)))) :manner (s2 / slow)))
(a / and :op1 (c / continue-01 :arg0 (a2 / and :op1 (p / person :arg0-of (r / reside-01)) :op2 (a3 / authority :mod (o / other))) :arg1 (d / discuss-01 :arg0 (w / we) :arg2 (a4 / and :op1 (c2 / committee) :op2 (m / ministry :topic (h / health :mod (r2 / reconnaissance))))) :time (b / before :op1 (n / now) :duration (b2 / between :op1 (t / temporal-quantity :quant (N / N-A) :unit (m2 / month)) :op2 (t2 / temporal-quantity :quant (N2 / N-A) :unit (m3 / month))))) :op2 (c3 / continue-01 :arg0 (a5 / and :op1 (p2 / person :arg0-of (r3 / reside-01)) :op2 (m4 / ministry :topic (h2 / health))) :arg1 (a6 / and :op1 (c4 / committee) :op2 (m5 / ministry :topic (h3 / health))) :manner (m6 / manner :mod (p3 / positive)) :purpose (c5 / concern-01 :arg0 (a7 / and) :arg1 (a8 / and))))
(s / say-01 :arg0 (p / person :name (n / name :op1 "N-A") :arg0-of (h / have-org-role-91 :arg2 (e / eric))) :arg1 (a / alarm-01 :arg0 (t / thing :arg1-of (d / decide-01 :arg3 (t2 / thing :arg1-of (d2 / decide-01 :arg3 (t3 / thing :arg1-of (d3 / decide-01 :arg3 (t4 / thing :arg1-of (d4 / decide-01 :arg3 (t5 / thing :arg1-of (d5 / decide-01 :arg3 (t6 / thing :arg1-of (d6 / decide-01 :arg3 (t7 / thing :arg1-of (d7 / decide-01 :arg3 (t8 / thing :arg1-of (d8 / decide-01 :arg3 (t9 / thing :arg1-of (d9 / decide-01 :arg3 (t10 / thing :arg1-of (d10 / decide-01 :arg3 (t11 / thing :arg1-of (d11 / decide-01 :arg3 (t12 / thing :arg1-of (d12 / decide-01 :arg3 (t13 / thing :arg1-of (d13 / decide-01 :arg3 (c / court)))))))))))))))))))))))))))))
(a / and :op1 (g / greeted :domain (p / process-02 :arg1 (l / life))) :op2 (r / relieved :arg0 (p2 / person :arg1-of (n / neighbor-01) :arg0-of (t / turn-02 :arg1 (p3 / person) :arg2 (m / message))) :arg1 (s / she)))
(s / significant-02 :arg1 (e / emotional :arg1-of (a / allege-01)))
(a / additions :arg0 (a2 / and :op1 (v / village :mod (m / maa)) :op2 (v2 / village :time (l / late :degree (m2 / most)))) :arg1 (g / game) :time (a3 / after :op1 (n / now) :quant (t / temporal-quantity :quant (N / N-A) :unit (y / year))) :manner (n2 / need-01 :polarity - :arg1 (d / decorate :arg1 (w / worshipped :degree (t2 / too)))))
(' / ' :arg0 (i / i) :arg1 (s / say-01 :arg0 (i2 / i) :arg1 (r / race-02 :arg0 (i3 / i) :mod (l / last) :mod (t / this))) :degree (t2 / total))
(a / and :op1 (t / twisted :arg1 (f / field :prep-with (b / ball))) :op2 (t2 / throw-01 :arg0 (y / you) :arg1 (b2 / ball) :arg2 (g / goal)) :op3 (m / make-18 :arg0 (p / person :mod (c / country :name (n / name :op1 "N-A"))) :arg1 (2 / 2-0 :arg2-of (l / lead-01 :arg0 (p2 / person))) :time (t3 / then)))
(a / and :op1 (i / identify-01 :arg0 (p / person :arg0-of (a2 / analyze-01)) :arg1 (s / sign :ord (o / ordinal-entity :value 1) :mod (u / unrest))) :op2 (a3 / appease-01 :arg0 (p2 / person) :arg1 (p3 / person :arg0-of (o2 / oppose-01 :arg1 (t / they)))) :op3 (s2 / say-01 :arg0 (p4 / person) :arg1 (e / expert-01 :arg1 (p5 / person :arg1-of (e2 / expert-01)) :arg2 (d / deactivation))))
(s / say-01 :arg0 (h / he) :arg1 (a / and :op1 (a2 / add-02 :arg0 (p / person :arg0-of (h2 / have-org-role-91 :arg2 (h3 / head-of-state))) :arg1 (i / item :mod (n / new)) :arg2 (m / menu)) :op2 (w / want-01 :arg0 (p2 / person) :arg1 (c / change-01 :arg0 (p3 / person) :arg1 (i2 / item)))))
(s / say-01 :arg0 (h / he) :arg1 (t / thing :arg1-of (s2 / say-01 :arg0 (h2 / he)) :arg1-of (m / mean-01 :arg2 (t2 / thing :arg1-of (s3 / say-01 :arg0 (h3 / he)) :arg1-of (m2 / mean-01 :arg2 (t3 / thing :arg1-of (s4 / say-01 :arg0 (h4 / he)))))) :location (t4 / table :mod (d / dinner)) :location (t5 / table :mod (d2 / dinner))))
(r / re-were :arg1 (c / country) :arg2 (f / foot :part-of (c2 / country)) :time (a / after :op1 (s / sidelined :arg1 (m / method :quant (m2 / most) :arg1-of (i / include-91 :arg2 (m3 / method :arg0-of (m4 / make-01 :arg1 (f2 / food) :time (c3 / crisis))))))))
(i / impact-01 :arg0 (i2 / interest-01) :arg1 (s / sell-01 :mod (d / discount)) :mod (p / positive))
(s / stipulate-01 :arg0 (t / thing :arg1-of (c / call-01 :arg2 (a / and :op1 (p / person :arg0-of (h / have-org-role-91 :arg2 (p2 / president))) :op2 (r / rate :mod (i / interest))))) :arg1 (t2 / thing :arg1-of (c2 / call-01 :arg2 (a2 / and :op1 (p3 / person :arg0-of (h2 / have-org-role-91 :arg2 (p4 / president))) :op2 (r2 / rate :mod (i2 / interest))))))
(h / have-rel-role-91 :arg0 (i / i) :arg1 (p / person :arg0-of (h2 / have-org-role-91 :arg1 (b / bank :arg1-of (p2 / public-02)) :arg2 (f / friend))) :arg2 (f2 / friend))
(l / loan-01 :arg1-of (p / personal-02) :prep-for (b / business :arg1-of (r / relate-01 :arg2 (s / sensation))))
(c / cause-01 :arg0 (a / attempt-01 :arg0 (c2 / coup :quant 15 :mod (j / july)) :arg1 (f / fetullahci :arg1 (o / organization :mod (t / terrorism) :arg0-of (p / participate-01 :arg1 (s / summit :arg1-of (o2 / organize-01 :arg0 (c3 / contractor :mod (c4 / construct-01)) :time (s2 / summit)))))) :time (c5 / converse-01 :arg0 (w / we) :arg2 (n / newspaper :poss (w2 / we)))) :time (m / meantime) :time (l / late :degree (m2 / more)))
(a / and :op1 (c / complain-01 :arg0 (w / we) :arg1 (a2 / and :op1 (c2 / complain-01 :arg0 (w2 / we) :arg1 (t / thing :arg2-of (n / name-01 :arg1 (b / bank)))) :op2 (i / information :topic (p / person :arg1-of (n2 / name-01 :arg2 (b2 / bank)))))) :op2 (g / give-01 :arg0 (w3 / we) :arg1 (s / some :arg1-of (i2 / include-91 :arg2 (l / line :mod (c3 / complain-01 :arg0 (b3 / bank))))) :arg2 (a3 / apply-01)))
(p / possible-01 :arg1 (p2 / prolonged :arg1 (s / season) :time (u / until :op1 (e / end-01 :arg1 (o / or :op1 (c / company :name (n / name :op1 "N-A")) :op2 (l / language :name (n2 / name :op1 "N-A")))))))
(r / reach-01 :arg1 (a / agree-01 :arg1 (c / cut-02 :arg1 (t / thing :arg1-of (p / pay-01) :mod (t2 / this)))))
(g / give-01 :arg1 (n / nani :arg1-of (l / luis :arg2 (l2 / luis)) :mod (m / martyr)) :arg2 (w / war :prep-with (p / person :name (n2 / name :op1 "victor" :op2 "pereira"))))
(g / go-10 :arg1 (p / pereira) :arg2 (f / fenerbahce))
(a / and :op1 (s / split-01 :arg1 (b / butterfly :name (n / name :op1 (b2 / butterfly) :op2 (b3 / butterfly))) :location (c / country :name (n2 / name :op1 "N-A")) :arg1-of (s2 / show-01 :arg0 (f / favorites :quant (b4 / between :op1 (t / temporal-quantity :quant (N / N-A) :unit (m / minute)) :op2 (t2 / temporal-quantity :quant (N2 / N-A) :unit (y / year)))))) :op2 (r / reach-01 :arg1 (t3 / temporal-quantity :quant (N3 / N-A) :unit (s3 / second))))
(k / kill-01 :arg1 (a / and :op1 (p / person :quant 10-15 :arg0-of (h / have-rel-role-91 :arg2 (g / guardhouse))) :op2 (p2 / person :arg0-of (h2 / have-rel-role-91 :arg1 (p3 / person) :arg2 (f / friend)))) :arg1-of (t / think-01 :arg0 (i / i)) :arg1-of (t2 / think-01 :arg0 (i2 / i)) :arg1-of (t3 / think-01 :arg0 (i3 / i)) :arg1-of (t4 / think-01 :arg0 (i4 / i)) :arg1-of (t5 / think-01 :arg0 (i5 / i)) :arg1-of (t6 / think-01 :arg0 (i6 / i)) :arg1-of (t7 / think-01 :arg0 (i7 / i)) :arg1-of (t8 / think-01 :arg0 (i8 / i)) :arg1-of (t9 / think-01 :arg0 (i9 / i)) :arg1-of (t10 / think-01 :arg0 (i10 / i)) :arg1-of (t11 / think-01 :arg0 (i11 / i)) :arg1-of (t12 / think-01 :arg0 (i12 / i)) :arg1-of (t13 / think-01 :arg0 (i13 / i)) :arg1-of (t14 / think-01 :arg0 (i14 / i)) :arg1-of (t15 / think-01 :arg0 (i15 / i)) :arg1-of (t16 / think-01 :arg0 (i16 / i)) :arg1-of (t17 / think-01 :arg0 (i17 / i)) :arg1-of (t18 / think-01 :arg0 (i18 / i)) :arg1-of (t19 / think-01 :arg0 (i19 / i)) :time (t20 / think-01 :arg0 (i20 / i)))
(c / cause-01 :arg1 (w / write-01 :arg0 (w2 / we) :arg1 (s / screen :mod (e / entire)) :manner (m / move :polarity -)))
(c / claim-01 :arg0 (t / that) :arg1 (c2 / commit-02 :arg0 (t2 / they) :arg1 (s / suicide) :manner (s2 / stick-01 :arg0 (t3 / they) :arg1 (g / gun :poss (h / he)) :arg2 (r / rate-entity-91 :arg1 (g2 / gun :poss (h2 / he)) :arg2 (g3 / gun)))))
(a / and :op1 (s / screens :arg0 (s2 / screens :quant 13 :name (n / name :op1 (a2 / atv) :op2 (a3 / atv) :op3 (m / müge))) :arg1 (p / program :name (n2 / name :op1 (k / kemal)) :arg1-of (k2 / kemal :arg2 (p2 / program :name (n3 / name :op1 (k3 / kemal))))) :arg2 (p3 / program :name (n4 / name :op1 (k4 / kemal) :op2 (k5 / kemal) :op3 (s3 / s.) :op4 (b / brother) :op5 (h / hussein) :op6 (s4 / s.) :op7 (s5 / s.)))) :op2 (r / report-01 :arg1 (w / work-01 :arg1 (w2 / work-01) :location (d / digging :arg1-of (o / own-01 :arg0 (s6 / state))))) :op3 (h2 / have-03 :arg1 (r2 / report :topic (w3 / work-01))))
(a / and :op1 (c / cause-01 :arg0 (p / pressure-01 :arg0 (p2 / pressure-01 :arg0 (p3 / person :arg0-of (h / have-rel-role-91 :arg1 (w / woman) :arg2 (h2 / husband))))) :arg1 (h3 / house) :time (b / before :op1 (n / now) :quant (a2 / about :op1 (t / temporal-quantity :quant (N / N-A) :unit (m / month))))) :op2 (s / state-01 :arg0 (p4 / person) :arg1 (t2 / that)))
(c / contrast-01 :arg1 (t / this) :arg2 (v / victim :poss (p / person :arg0-of (r / rebel-01) :location (p2 / passport :poss (a / animal))) :domain (c2 / citizen :poss (w / we))))
(c / competition :location (s / stadium :mod (o / olympic) :location (s2 / stadium :name (n / name :op1 (d / de) :op2 (d2 / de) :op3 (j / janeiro)))) :time (e / end-01 :arg1 (s3 / shoot-02 :arg1 (w / woman))))
(a / article :part-of (a2 / article))
(s / see-01 :arg1 (t / thing :arg2-of (h / have-part-91 :arg1 (t2 / thing :arg1-of (f / find-01 :arg0 (w / we) :time (s2 / so-far)) :arg1-of (u / use-01 :arg0 (w2 / we) :time (s3 / so-far)))) :arg1-of (s4 / see-01 :arg0 (w3 / we) :time (s5 / so-far))) :domain (t3 / this) :mod (b / besides))
(s / seem-01 :arg1 (s2 / strengthen-01 :arg1 (p / position :poss (t / they)) :time (a / after :op1 (c / coup) :quant (u / up-to :op1 (t2 / temporal-quantity :quant (N / N-A) :unit (y / year))))))
(a / arrest-01 :arg1 (a2 / and :op1 (p / person :arg0-of (h / have-org-role-91 :arg1 (o / organization :mod (t / terrorism)) :arg2 (m / member))) :op2 (p2 / person :arg0-of (h2 / have-org-role-91 :arg1 (o2 / organization :mod (t2 / terrorism)) :arg2 (m2 / member))) :op3 (p3 / person :arg0-of (h3 / have-org-role-91 :arg1 (o3 / organization :mod (t3 / terrorism)) :arg2 (m3 / member))) :op4 (p4 / person :arg0-of (h4 / have-org-role-91 :arg1 (o4 / organization) :arg2 (m4 / member))) :op5 (p5 / person :arg0-of (h5 / have-org-role-91 :arg1 (o5 / organization) :arg2 (m5 / member))) :op6 (p6 / person :arg0-of (h6 / have-org-role-91 :arg1 (o6 / organization) :arg2 (m6 / member))) :op7 (p7 / person :arg0-of (h7 / have-org-role-91 :arg1 (o7 / organization) :arg2 (m7 / member)))))
(h / have-03 :arg0 (w / we) :arg1 (b / between :op1 (p / person :mod (c / country :name (n / name :op1 "N-A"))) :op2 (p2 / person :mod (c2 / country :name (n2 / name :op1 "N-A"))) :quant (l / lot)))
(a / agree-01 :arg0 (w / we) :arg1 (i / issue-02 :quant (m / many) :example (g / government-organization :arg0-of (g2 / govern-01 :arg1 (c / country :name (n / name :op1 "Syria"))))) :arg2 (a2 / and :op1 (i2 / integrity :mod (t / territory)) :op2 (i3 / integrity :mod (b / border)) :source (a3 / and :op1 (c2 / country :name (n2 / name :op1 "Syria")) :op2 (o / organization :mod (o2 / other) :mod (t2 / terrorist)))))
(a / and :op1 (b / bag) :op2 (t / toys) :op3 (s / shit-01) :op4 (s2 / screwdriver :arg1 (b2 / bag)) :op5 (n / nail :arg1 (b3 / bag) :example (o / output :mod (m / material))))
(l / learn-01 :arg1 (c / contain-01 :arg0 (s / suspend-01) :arg1 (c2 / contain-01 :arg1 (s2 / suspend-01))))
(a / and :op1 (v / vein :arg0 (f / femoral :name (n / name :op1 (f2 / femoral)) :mod (f3 / femoral)) :arg1 (n2 / name :op1 (f4 / femoral) :op2 (v2 / vein) :op3 (s / superficial))) :op2 (t / take-01 :arg0 (f5 / femoral) :arg1 (n3 / name) :arg3 (t2 / this)))
(s / show-01 :arg0 (a / adopt-01 :arg1 (a2 / attitude :poss (w / win-01 :arg0 (p / person :quant 3 :arg0-of (w2 / win-01 :arg1 (g / golds :quant 3)) :arg1-of (s2 / single-02))))) :arg1 (p2 / possible-01 :polarity - :arg1 (d / dream-01 :arg1-of (r / repeat-01))))
(p / possible-01 :arg1 (r / risk-01 :arg1 (b / business) :arg2 (r2 / risk-01)) :time (u / until :op1 (p2 / possible-01 :arg1 (r3 / risk-01 :arg2 (f / facility :mod (p3 / portland) :mod (a / alcoa))))))
(a / and :op1 (l / lose-02 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (o / organization :name (n / name :op1 "alcoa")) :arg2 (s / smelter))) :arg1 (m / money)) :op2 (f / face-01 :arg0 (p2 / person) :arg1 (r / risk-01 :arg2 (c / closure))))
(a / and :op1 (p / painted :arg0 (w / we) :arg1 (h / house :mod (a2 / all) :location (a3 / and :op1 (w2 / white) :op2 (b / blue)))) :op2 (b2 / blue :name (n / name :op1 (b3 / blue) :op2 (c / colors))))
(t / team :arg0-of (r / realize-01 :arg1 (c / come-01 :arg1 (p / police) :arg4 (d / door :mod (b / back) :arg1-of (w / want-01 :arg0 (h / he))))) :time (e / enter-01 :arg0 (t2 / team) :arg1 (r2 / restaurant)))
(k / kill-01 :arg1 (o / officer :quant 1 :mod (p / police)) :arg1-of (c / cause-01 :arg0 (a / attack-01 :arg1 (v / vehicle))))
(u / use-01 :arg1 (f / fund :mod (t / this)) :arg2 (a / account-01 :arg0 (f2 / fund) :arg1 (t2 / thing :manner-of (a2 / ask-01 :arg0 (h / he) :arg1 (o / one :polarity -)))))
(m / multi-sentence :snt1 (d / do-02 :arg0 (w / we) :arg1 (t / this :mod (a / all))) :snt2 (a2 / and :op1 (m2 / move-01 :arg0 (w2 / we) :arg2 (p / principle :mod (d2 / democracy))) :op2 (r / rule-03 :arg0 (l / law)) :op3 (r2 / rule-03 :arg0 (l2 / law))))
(a / and :op1 (w / wrong-04 :arg1 (p / person :arg0-of (d / doubt-01 :arg1 (s / see-01 :arg0 (p2 / person) :arg1 (w2 / wrong-04 :arg1 (p3 / person))))) :li 2012) :op2 (w3 / wrong-04 :arg1 (p4 / person) :arg2 (h / heathrow)) :li 2012)
(a / and :op1 (b / be-located-at-91 :polarity - :arg1 (p / person :quant (f / few :mod (o / only))) :arg2 (o2 / olympics) :mod (a2 / also)) :op2 (p2 / project :mod (i / infrastructure) :domain (i2 / it)))
(c / constitute-01 :arg0 (p / person :arg0-of (u / use-01 :arg1 (d / device :arg1-of (m / mobile-02))) :quant (m2 / multiple :op1 1,03)) :arg1 (r / revenue :mod (a / advertise-01) :poss (c2 / company :name (n / name :op1 "Facebook"))) :arg3 (a2 / advertise-01 :arg1-of (m3 / mobile-02)) :time (n2 / now))
(d / discuss-01 :arg1 (p / person :arg0-of (d2 / drive-01) :arg1-of (i / involve-01 :arg2 (i2 / incident)) :quant (s / some) :arg1-of (i3 / involve-01 :arg2 (i4 / incident))) :arg2 (a / and :op1 (s2 / state-01 :arg0 (p2 / person) :arg1 (p3 / possible-01 :polarity - :arg1 (d3 / detected :arg1 (p4 / person)))) :op2 (a2 / ask-02 :arg0 (p5 / person) :arg1 (c / contact-01 :arg0 (p6 / person) :arg1 (e / everyone :arg1-of (i5 / involve-01))) :arg2 (p7 / person))))
(c / contrast-01 :arg1 (a / and :op1 (e / earn-01 :arg0 (c2 / club) :arg1 (p / point :quant 112)) :op2 (e2 / enable-01 :arg0 (t / team) :arg1 (f / finish-07 :arg0 (w / we) :arg2 (w2 / we) :time (f2 / first)) :arg2 (w3 / we))) :arg2 (a2 / and :op1 (d / defeat-01 :arg1 (p2 / person :arg1-of (d2 / defeat-01)) :location (r / round-05 :arg1 (e3 / era :name (n / name :op1 (p3 / playoffs))) :ord (o / ordinal-entity :value 1)) :ord (o2 / ordinal-entity :value 1)) :op2 (m / miss-02 :arg0 (t2 / team) :arg1 (g / game) :time (y / year :mod (b / both)))))
(s / say-01 :arg0 (i / i) :arg1 (c / contrast-01 :arg1 (l / live-01 :arg0 (p / person) :location (h / house :poss (g / guest)) :time (a / at-first)) :arg2 (g2 / get-03 :arg1 (e / everything) :arg2 (g3 / good :degree (m / more)) :time (r / recent))))
(s / say-01 :arg0 (p / person :name (n / name :op1 "jeremy" :op2 "hunt") :arg0-of (h / have-org-role-91 :arg2 (m / minister :mod (h2 / health)))) :arg1 (e / enforce-01 :arg1 (c / contract-02) :manner (e2 / england) :manner (e3 / england)) :arg1-of (f / follow-01 :arg2 (v / vote-01)))
(d / difficult :domain (p / possible-01 :polarity - :arg1 (t / trust-01 :arg1 (t2 / trust-01 :mod (r / real)))))
(t / think-01 :arg1 (p / possible-01 :arg1 (s / serve-01 :arg0 (p2 / person :arg0-of (h / have-org-role-91 :arg1 (m / mr.) :arg2 (p3 / president :mod (v / vice)))) :arg1 (p4 / person :arg0-of (h2 / have-org-role-91 :arg2 (p5 / president))) :time (a / after :op1 (t2 / term :ord (o / ordinal-entity :value 2)))) :arg1-of (c / cause-01 :arg0 (u / unconstitutional :domain (t3 / term :ord (o2 / ordinal-entity :value 3))))) :time (o3 / once))
(s / serve-01 :arg0 (p / person :name (n / name :op1 "mr." :op2 "putin")) :arg1 (p2 / person :arg0-of (h / have-org-role-91 :arg1 (c / country :name (n2 / name :op1 "N-A")) :arg2 (m / minister :mod (p3 / prime)))) :time (b / before :op1 (a / and :op1 (p4 / person :arg0-of (h2 / have-org-role-91 :arg2 (p5 / president))) :op2 (p6 / person :arg0-of (h3 / have-org-role-91 :arg2 (p7 / president))) :quant (h4 / half :quant (1 / 1/2)))))
(a / and :op1 (i / install-01 :arg1 (r / rate-entity-91 :arg1 (u / under :op1 (m / monetary-quantity :quant (N / N-A) :unit (p / pound))) :arg2 (t / temporal-quantity :quant (N2 / N-A) :unit (y / year))) :time (n / now)) :op2 (p2 / poured :arg1 (t2 / thing :arg2-of (m2 / mean-01 :arg1 (t3 / thing :arg2-of (m3 / mean-01 :arg1 (t4 / thing :arg2-of (m4 / mean-01 :arg1 (t5 / thing :arg2-of (m5 / mean-01 :arg1 (t6 / thing :arg2-of (m6 / mean-01 :arg1 (t7 / thing :arg2-of (m7 / mean-01 :arg1 (t8 / thing :arg2-of (m8 / mean-01 :arg1 (t9 / thing :arg2-of (m9 / mean-01 :arg1 (t10 / thing :arg2-of (m10 / mean-01 :arg1 (t11 / thing :arg2-of (m11 / mean-01 :arg1 (t12 / thing :arg2-of (m12 / mean-01 :arg1 (t13 / thing :arg2-of (m13 / mean-01 :arg1 (t14 / thing :arg2-of (m14 / mean-01 :arg1 (t15 / thing :arg2-of (m15 / mean-01 :arg1 (t16 / thing :arg2-of (m16 / mean-01 :arg1 (d / decks)) :mod (a2 / all))))) :mod (l / last)))))))))))))))))))))))))) :time (n2 / now)))
(c / contrast-01 :arg1 (r / resemble-01 :arg1 (p / perform-01 :mod (l / lesman)) :arg2 (r2 / revenge :time (b / before :op1 (n / now) :quant (u / up-to :op1 (t / temporal-quantity :quant (N / N-A) :unit (y / year))))) :degree (b2 / bit)) :arg2 (l2 / lose-02 :arg1 (p2 / perform-01) :arg2 (d / decider :arg1 (p3 / perform-02))))
(c / call-03 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (p2 / person :name (n / name :op1 "N-A") :arg0-of (h2 / have-org-role-91 :arg2 (e / executive :mod (e2 / emplers)))) :arg2 (e3 / executive :mod (c2 / chief)))) :arg1 (s / stage :mod (a / any) :mod (f / further)) :arg2 (d / doctor :mod (j / junior)))
(u / use-01 :arg1 (t / thing :manner-of (u2 / use-01)) :arg2 (p / protect-01 :arg1 (p2 / person) :arg2 (a / attack-01 :instrument (g / gun))))
(j / justice :domain (p / person :arg0-of (h / have-org-role-91 :arg1 (c / court :mod (c2 / country :name (n / name :op1 "N-A"))) :arg3 (j2 / justice :mod (c3 / chief)))) :arg3 (p2 / person :arg0-of (h2 / have-org-role-91 :arg1 (c4 / court :mod (c5 / country :name (n2 / name :op1 "N-A"))) :arg3 (j3 / justice))) :arg4 (d / district :mod (c6 / columbia)))
(a / and :op2 (o / orient :arg1 (w / we) :arg2 (w2 / woman)))
(t / threaten-01 :arg0 (p / person :quant 1 :arg1-of (i / include-91 :arg2 (p2 / person :arg0-of (h / have-rel-role-91 :arg1 (p3 / person :arg0-of (h2 / have-rel-role-91 :arg2 (k / kid))) :arg2 (k2 / kid)))) :arg0-of (o / offer-01 :arg1 (a / advise-01 :arg0 (p4 / person) :arg1 (a2 / and :op1 (p5 / person :quant 200) :op2 (p6 / person :mod (c / country :name (n / name :op1 "N-A"))) :op3 (p7 / person :arg0-of (h3 / have-rel-role-91 :arg1 (p8 / person) :arg2 (c2 / child))) :op4 (p9 / person :arg0-of (h4 / have-rel-role-91 :arg1 (p10 / person) :arg2 (c3 / child))) :op5 (p11 / person :arg0-of (h5 / have-rel-role-91 :arg1 (p12 / person) :arg2 (c4 / child))) :op5 (p13 / person :arg0-of (h6 / have-rel-role-91 :arg1 (p14 / person) :arg2 (c5 / child))) :op6 (p15 / person :arg0-of (h7 / have-rel-role-91 :arg1 (p16 / person) :arg2 (c6 / child))) :op7 (p17 / person :arg0-of (h8 / have-rel-role-91 :arg1 (p18 / person) :arg2 (c7 / child))) :op7 (p19 / person :arg0-of (h9 / have-rel-role-91 :arg1 (p20 / person) :arg2 (c8 / child)))) :arg0-of (a3 / advise-01 :arg2 (h10 / hundreds :arg0 (p21 / person) :arg1 (m / minor :mod (v / vulnerable) :mod (u / unaccompanied)) :location (c9 / camp)))))))
(c / come-01 :arg1 (a / and :op1 (p / person :arg0-of (l / lead-02 :arg1 (t / team :mod (p2 / province)))) :op2 (p3 / person :arg0-of (l2 / lead-02 :arg1 (t2 / team :mod (p4 / province)))) :op3 (p5 / person :arg0-of (l3 / lead-02 :arg1 (t3 / team))) :op4 (p6 / person :arg0-of (l4 / lead-02 :arg1 (t4 / team))) :op5 (p7 / person :arg0-of (l5 / lead-02 :arg1 (t5 / team))) :op6 (p8 / person :arg0-of (l6 / lead-02 :arg1 (t6 / team))) :op6 (p9 / person :arg0-of (l7 / lead-02 :arg1 (t7 / team))) :op7 (p10 / person :arg0-of (l8 / lead-02 :arg1 (t8 / team :mod (p11 / province))))) :time (t9 / time :mod (t10 / this)) :mod (o / only :polarity -))
(m / multi-sentence :snt1 (s / say-01 :arg0 (s2 / she) :arg1 (m2 / make-01 :arg0 (p / person :arg0-of (h / have-rel-role-91 :arg1 (s3 / she) :arg2 (d / daughter))) :arg1 (t / toys :poss (s4 / she)) :frequency (o / often))) :snt2 (a / and :op1 (g / good :domain (s5 / she)) :op2 (g2 / good :domain (s6 / she)) :op3 (p2 / possible-01 :arg1 (l / lifelike :arg1 (s7 / she) :time (a2 / always)))))
(p / possible-01 :arg1 (i / interest-01 :polarity - :arg2 (f / force :mod (a / air))) :concession (p2 / possible-01 :arg1 (h / help-01 :arg0 (m / military :name (n / name :op1 "N-A") :arg1-of (s / steady-01) :consist-of (e / electrons :arg1-of (f2 / free-04))) :arg1 (l / listen-01 :arg0 (p3 / person) :arg1 (p4 / person :arg0-of (l2 / listen-01 :arg1 (s2 / station :mod (r / radio) :mod (u / university))))))))
(p / participate-01 :arg0 (a / and :op1 (h / he) :op2 (p2 / person :arg0-of (h2 / have-rel-role-91 :arg1 (h3 / he) :arg2 (d / daughter)))) :arg1 (s / show-04 :mod (v / variety) :example (a2 / and :op1 (g / go-02 :arg0 (p3 / person :arg0-of (h4 / have-rel-role-91 :arg1 (h5 / he) :arg2 (d2 / daughter)))) :op2 (a3 / attend-02 :arg0 (' / '' :mod (r / romantic)) :arg1 (a4 / attend-02 :arg1 (p4 / person))))))
(f / follow-01 :arg1 (a / and :op1 (p / person :arg0-of (r / report-01)) :op2 (p2 / person :arg0-of (r2 / report-01)) :op3 (p3 / person :arg0-of (r3 / report-01)) :op4 (p4 / person :arg0-of (r4 / report-01)) :op5 (p5 / person :arg0-of (r5 / report-01))) :arg2 (p6 / person :arg0-of (h / have-org-role-91 :arg1 (t / team :arg0-of (s / serve-01) :mod (c / country :name (n / name :op1 "N-A")) :mod (c2 / country :name (n2 / name :op1 "N-A"))) :arg3 (l / lead-02 :arg0 (p7 / person) :arg1 (l2 / location :name (n3 / name :op1 "west" :op2 "lake" :op3 "town" :op4 "of" :op5 "the" :op6 "west" :op7 "lake"))))) :arg3 (s2 / score-entity :op1 11 :op2 8))
(l / location :mod (r / remote) :domain (v / village) :location (r2 / relative-position :op1 (a / area :mod (u / urban)) :quant (s / some :op1 24)) :arg0-of (c / cause-01 :arg1 (i / inconvenience :arg1 (p / person :quant (m / many) :mod (e / elderly) :arg0-of (h / have-rel-role-91 :arg2 (p2 / patient))) :arg1-of (c2 / cause-01 :arg0 (a2 / and :op1 (e2 / economy) :op2 (t / transport-01) :op3 (l2 / limit-01 :mod (p3 / physical)))))))
(c / contrast-01 :arg1 (p / provide-01 :arg0 (w / we) :arg1 (s / service :poss (a / and :op1 (d / doctor) :op2 (b / b-super)))) :arg2 (p2 / provide-01 :arg0 (t / team :mod (o / other)) :arg1 (s2 / service :mod (m / medicine :arg3-of (f / free-04)) :arg1-of (f2 / free-03)) :location (v / village :location (v2 / village :location (w2 / wuzhou))) :mod (a2 / also)))
(a / and :op1 (h / have-part-91 :arg1 (t / this :mod (o / only)) :arg2 (h2 / healthy :domain (t2 / this))) :op2 (c / carry-out-03 :arg1 (a2 / activity-06 :mod (o2 / other)) :time (c2 / come-01 :arg1 (d / day :arg1-of (c3 / come-01)))))
(s / say-01 :arg0 (f / forecast-01 :arg0 (f2 / forecast-01 :arg0 (t / tower) :arg1 (d / develop-02 :arg1 (a / and :op1 (t2 / trade-01) :op2 (e / economy))))) :arg1 (a2 / and :op1 (g / grow-01 :arg1 (e2 / economy :location (r / river :name (n / name :op1 "N-A"))) :arg3 (r2 / rate-entity-91 :arg1 7 :arg2 2016)) :op2 (g2 / grow-01 :arg1 (e3 / economy) :arg2 (a3 / above :op1 (l / level :mod (t3 / that))) :mod (e4 / essential))))
FAILED_TO_PARSE#Two concepts in a row.
(f / find-01 :arg0 (t / try-02 :arg0 (c / court :poss (p / person)) :arg1 (a / and :op1 (c2 / court :mod (d / district :mod (w / wollongong))) :op2 (p2 / person :arg0-of (h / have-org-role-91 :arg2 (h2 / head-of-state))) :op3 (p3 / person :arg0-of (h3 / have-org-role-91 :arg2 (h4 / head-of-state))) :op4 (p4 / person :arg0-of (h5 / have-org-role-91 :arg2 (h6 / head-of-state))) :op5 (p5 / person :arg0-of (h7 / have-org-role-91 :arg2 (h8 / head-of-state))) :op6 (p6 / person :arg0-of (h9 / have-org-role-91 :arg2 (h10 / head-of-state))) :op6 (p7 / person :arg0-of (h11 / have-org-role-91 :arg2 (h12 / head-of-state))) :op6 (p8 / person :arg0-of (h13 / have-org-role-91 :arg2 (h14 / head-of-state))) :op6 (p9 / person :arg0-of (h15 / have-org-role-91 :arg2 (h16 / head-of-state))) :op6 (p10 / person :arg0-of (h17 / have-org-role-91 :arg2 (h18 / head-of-state))) :op6 (p11 / person :arg0-of (h19 / have-org-role-91 :arg2 (h20 / head-of-state))) :op6 (p12 / person :arg0-of (h21 / have-org-role-91 :arg2 (h22 / head-of-state))) :op6 (p13 / person :arg0-of (h23 / have-org-role-91 :arg2 (h24 / head-of-state))) :op6 (p14 / person :arg0-of (h25 / have-org-role-91 :arg2 (h26 / head-of-state))) :op6 (p15 / person :arg0-of (h27 / have-org-role-91 :arg2 (h28 / head-of-state))) :op6 (p16 / person :arg0-of (h29 / have-org-role-91 :arg2 (h30 / head-of-state))) :op7 (p17 / person :arg0-of (h31 / have-org-role-91 :arg2 (h32 / head-of-state))))) :arg1 (s / send-01 :arg0 (p18 / person) :arg1 (i / information :mod (f2 / fraudulent)) :arg2 (s2 / send-01 :arg0 (p19 / person) :arg1 (i2 / information :mod (f3 / fraudulent)) :arg2 (a2 / area :mod (u / urban)))))
(a / and :op1 (i / important :degree (g / great) :domain (l / lead-02 :arg0 (p / person :arg0-of (l2 / lead-02 :arg1 (p2 / police :mod (s / security :mod (p3 / public)))))) :arg2 (i2 / importance :degree (g2 / great))) :op2 (o / organize-01 :arg0 (p4 / person) :arg1 (t / team :consist-of (p5 / person :arg0-of (h / have-org-role-91 :arg1 (p6 / police :mod (l3 / lean)) :arg2 (o2 / officer))) :purpose (c / carry-out-03 :arg0 (t2 / team) :arg1 (i3 / investigate-01))) :time (i4 / immediate)) :time (d / during :op1 (c2 / case-03)))
(s / succeed-01 :polarity - :arg0 (t / they) :arg1 (l / league :name (n / name :op1 (r / rugby) :op2 (r2 / rugby) :op3 (r3 / rugby)) :mod (i / international) :mod (i2 / international)) :time (b / before :op1 (n2 / now) :quant (m / multiple :op1 (t2 / temporal-quantity :quant (N / N-A) :unit (y / year)))))
(t / touch-01 :arg0 (t2 / team :mod (c / country :name (n / name :op1 "N-A"))) :arg1 (b / ball) :degree (b2 / bare))
(c / contrast-01 :arg1 (i / include-91 :arg1 (a / and :op1 (m / man :mod (a2 / another) :location (b / boat)) :op2 (c2 / coach :name (n / name :op1 (c3 / coach))) :op3 (p / person :arg0-of (h / have-org-role-91 :arg2 (c4 / coach))) :op4 (p2 / person :arg0-of (h2 / have-org-role-91 :arg2 (c5 / coach))) :op5 (p3 / person :arg0-of (h3 / have-org-role-91 :arg2 (c6 / coach))) :op5 (p4 / person :arg0-of (h4 / have-org-role-91 :arg2 (c7 / coach)) :ord (o / ordinal-entity :value 2) :arg0-of (h5 / have-org-role-91 :arg1 (t / team :ord (o2 / ordinal-entity :value 2) :arg0-of (h6 / have-org-role-91 :arg1 (w / woman :ord (o3 / ordinal-entity :value 2)) :arg2 (w2 / woman :ord (o4 / ordinal-entity :value 2))) :arg0-of (h7 / have-org-role-91 :arg1 (t2 / team :ord (o5 / ordinal-entity :value 2) :arg0-of (h8 / have-org-role-91 :arg1 (w3 / woman :ord (o6 / ordinal-entity :value 1)) :arg2 (w4 / woman :ord (o7 / ordinal-entity :value 1)))))))))) :arg2 (i2 / include-91 :arg1 (t3 / they) :arg2 (t4 / they :mod (a3 / another))))
(c / cause-01 :arg0 (w / write-01 :arg0 (p / person :name (n / name :op1 "gregory" :op2 "hooker") :arg0-of (a / analyze-01 :arg1 (i / intelligence)) :mod (c2 / central)) :arg1 (a2 / and :op1 (w2 / write-01 :arg0 (p2 / person :arg0-of (a3 / analyze-01 :arg1 (i2 / intelligence)) :mod (c3 / central)) :arg1 (a4 / article :mod (r / research-01)) :time (b / before :op1 (n2 / now) :quant (m / more-than :op1 (t / temporal-quantity :quant (N / N-A) :unit (d / decade))))) :op2 (i3 / insist-01 :arg0 (p3 / person :arg0-of (a5 / analyze-01 :arg1 (i4 / intelligence)) :mod (c4 / central)) :arg1 (a6 / and :op1 (s / send-01 :arg0 (p4 / person) :arg1 (t2 / troop :mod (s2 / small)) :arg2 (c5 / country)) :op2 (c6 / consider-02 :arg0 (p5 / person) :arg1 (i5 / invade-01 :arg1 (t3 / troop :mod (s3 / small))) :arg2 (c7 / country)) :degree (b2 / bare))))))
(a / and :op1 (d / die-01 :arg1 (c / company :mod (h / healthcare) :arg1-of (i / include-91 :arg2 (c2 / company :mod (h2 / healthcare) :mod (i2 / internet-based)) :arg3 (a2 / about :op1 (p / percentage-entity :value (N / N-A))))) :mod (a3 / also) :time (a4 / after :op1 (n / now) :quant (u / up-to :op1 (t / temporal-quantity :quant (N2 / N-A) :unit (y / year)))) :mod (a5 / also)) :op2 (e / exist-01 :polarity - :arg1 (c3 / company :arg1-of (i3 / include-91 :arg2 (c4 / company :mod (h3 / healthcare) :mod (i4 / internet-based)) :arg3 (a6 / about :op1 (p2 / percentage-entity :value (N3 / N-A)))))) :op3 (s / say-01 :arg0 (d2 / data) :arg1 (e2 / exist-01 :polarity - :arg1 (c5 / company) :time (n2 / no-longer))))
(c / compete-01 :arg0 (k / kvitova) :arg1 (t / ticket :prep-for (t2 / ticket :mod (f / final))) :concession (b / berth :arg1 (f2 / final :mod (a / another)) :arg2 (b2 / between :op1 (k2 / keith) :op2 (c2 / corbell))))
FAILED_TO_PARSE#Two concepts in a row.
(a / and :op1 (e / express-01 :arg0 (p / person :arg0-of (a2 / author-01) :arg0-of (a3 / author-01 :arg1 (d / documentary :name (n / name :op1 (' / '')) :mod (h / holocaust :mod (n2 / nucleus))))) :arg1 (d2 / disappoint-01 :arg1 (p2 / person) :location (h2 / hotel :mod (k / kempinski)))) :op2 (p3 / publish-01 :arg0 (p4 / person) :arg1 (l / letter :arg1-of (o / open-09)) :location (r / report-01 :arg0 (c / country :name (n3 / name :op1 "Germany")) :mod (f / frankfurt))))
(c / clash :arg0 (p / person :arg0-of (s / study-01)) :arg1 (p2 / police) :arg2 (p3 / police) :time (p4 / protest-01 :arg0 (p5 / person) :arg1 (r / reform-01 :arg1 (s2 / system :mod (e / educate-01) :mod (p6 / public) :poss (g / government-organization :arg0-of (g2 / govern-01))) :location (s3 / system :name (n / name :op1 (s4 / sao)) :arg1-of (p7 / public-02) :poss (g3 / government-organization :arg0-of (g4 / govern-01))))))
(r / replace-01 :arg0 (c / cyclist :name (n / name :op1 (2 / 23-year-old) :op2 (g / glasgow) :op3 (c2 / cyclist) :op4 (c3 / cyclist) :op5 (c4 / cyclist) :op6 (c5 / cyclist) :op7 (c6 / cyclist))) :arg1 (h / he) :time (b / beat-03 :arg0 (p / person :mod (y / young) :arg0-of (h2 / have-org-role-91 :arg1 (p2 / political-party :name (n2 / name :op1 "N-A")))) :arg1 (t / team :mod (n3 / new) :mod (c7 / country :name (n4 / name :op1 "N-A")) :mod (n5 / new)) :arg2 (r2 / reputation :poss (p3 / person))) :time (b2 / beat-03 :arg0 (p4 / person :mod (y2 / young)) :arg1 (t2 / team :mod (n6 / new) :mod (z / zealand)) :arg2 (r3 / reputation)))
(m / match-03 :mod (j / just) :domain (m2 / medal :mod (g / gold) :beneficiary (t / team :mod (c / country :name (n / name :op1 "N-A")) :arg0-of (w / win-01 :arg1 (d / drone :mod (g2 / gold) :quant (m3 / multiple :op1 7)) :location (a / and :op1 (o / olympics :mod (b / beijing)) :op2 (o2 / olympics :location (b2 / beijing)))))))
(a / and :op1 (a2 / affect-01 :arg0 (a3 / act-02 :arg0 (p / person :arg0-of (h / have-rel-role-91 :arg1 (p2 / person) :arg2 (p3 / parent)))) :arg1 (g / grow-01 :arg1 (c / child))) :op2 (i / imitating :arg0 (p4 / person :arg0-of (h2 / have-rel-role-91 :arg1 (p5 / person) :arg2 (p6 / parent))) :arg1 (p7 / person :arg0-of (h3 / have-rel-role-91 :arg1 (p8 / person) :arg2 (p9 / parent))) :arg1-of (s / say-01 :arg0 (p10 / person :arg0-of (h4 / have-rel-role-91 :arg1 (p11 / person) :arg2 (p12 / parent))) :arg1-of (s2 / say-01 :arg0 (p13 / person :arg0-of (h5 / have-rel-role-91 :arg1 (p14 / person) :arg2 (p15 / parent)))) :arg0-of (h6 / have-rel-role-91 :arg1 (p16 / person) :arg2 (p17 / parent)) :arg0-of (h7 / have-rel-role-91 :arg1 (p18 / person) :arg2 (p19 / parent)) :arg0-of (h8 / have-rel-role-91 :arg1 (p20 / person) :arg2 (p21 / parent)) :arg0-of (h9 / have-rel-role-91 :arg1 (p22 / person) :arg2 (p23 / parent)) :arg0-of (h10 / have-rel-role-91 :arg1 (p24 / person) :arg2 (p25 / parent)))))
(c / cause-01 :arg0 (i / implement-01 :polarity - :arg0 (i2 / implement-01 :arg1 (m / measure-02 :arg1 (p / protect-01 :arg1 (t / trade-01)))) :arg1 (s / solve-01 :arg1 (d / develop-02 :arg1 (i3 / industry :mod (a / aerospace) :mod (g / globe))) :mod (f / fundamental))) :arg1 (s2 / shock :arg0 (i4 / implement-01) :arg1 (o / order :mod (i5 / international)) :degree (f2 / further)))
(c / contract-02 :arg1 (j / james) :time (s / season :quant 2017-18 :mod (o / official) :mod (o2 / official)))
(s / say-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (c / community :mod (c2 / community) :mod (c3 / community)) :arg2 (d / director :mod (v / vice)))) :arg1 (t / turn-02 :arg1 (p2 / person :arg1-of (i / include-91 :arg2 (p3 / person))) :arg2 (a / away) :time (y / year :mod (e / each))) :arg1-of (s2 / say-01 :arg0 (r / report-01 :arg0 (c4 / community :mod (c5 / community :mod (c6 / community :mod (n / nation)) :mod (l / late :degree (m / most)))))))
(c / charge-05 :arg1 (o / officer :arg0-of (h / have-org-role-91 :arg1 (p / police) :arg2 (o2 / officer))) :arg2 (d / die-01 :arg1 (o3 / officer)) :arg1-of (c2 / cause-01 :arg0 (a / and :op1 (a2 / accuse-01 :arg1 (m / man :arg1-of (a3 / accuse-01 :arg2 (h2 / hit-01 :arg0 (m2 / man) :arg1 (m3 / man))) :quant (m4 / multiple :op1 2014)) :arg2 (h3 / hit-01 :arg0 (m5 / man) :arg1 (m6 / man))) :op2 (c3 / cause-01 :arg0 (m7 / man) :arg1 (d2 / die-01 :arg1 (m8 / man) :location (m9 / motorway :arg1-of (n / near-02 :arg2 (p2 / pareena))))))) :time (y / year :mod (l / last)))
(w / win-01 :arg0 (g / gymnast :name (n / name :op1 (1 / 19-year-old)) :mod (c / country :name (n2 / name :op1 "N-A")) :mod (c2 / country :name (n3 / name :op1 "N-A"))) :arg1 (c3 / championship :mod (o / opera)) :arg2 (t / thursday) :arg0-of (d / demonstrate-01 :arg1 (t2 / talent :poss (p / person) :mod (w2 / world-leading)) :location (c4 / city :name (n4 / name :op1 "N-A"))))
(c / contrast-01 :arg2 (l / lead-01 :arg0 (c2 / captain :mod (2 / 22-year-old) :arg1-of (' / '' :arg0 (p / person :mod (c3 / country :name (n / name :op1 "N-A"))))) :arg1 (w / way)) :time (t / time :mod (t2 / this)))
(t / tell-01 :arg0 (p / person :arg0-of (i / investigate-01)) :arg1 (l / look-02 :arg0 (i2 / it) :arg1 (r / resemble-01 :arg1 (i3 / it) :arg2 (c / crossfire :mod (g / gunmen)))) :arg2 (p2 / person :arg0-of (i4 / investigate-01)))
(s / suggest-01 :arg0 (t / thing :arg0-of (e / evidence-01) :mod (' / '')) :arg1 (p / pressure-01 :arg0 (a / and :op1 (c / country :mod (s2 / senior) :arg0-of (h / have-org-role-91 :arg1 (c2 / community :mod (b / background :mod (b2 / bangladesh))) :arg2 (m / member) :mod (s3 / senior))) :op2 (c3 / country :mod (e2 / especially) :arg0-of (h2 / have-org-role-91 :arg1 (c4 / community :mod (b3 / background :mod (b4 / bangladesh))) :arg2 (m2 / member) :mod (s4 / senior))) :op3 (p2 / pressure-01 :arg0 (a2 / and :op1 (p3 / person :arg0-of (h3 / have-org-role-91 :arg1 (c5 / community :mod (b5 / background :mod (b6 / bangladesh))) :arg2 (m3 / member))) :op2 (p4 / person :mod (e3 / especially) :arg0-of (h4 / have-org-role-91 :arg1 (c6 / community) :arg2 (m4 / member))) :op3 (p5 / person :mod (y / young) :arg0-of (h5 / have-org-role-91 :arg1 (c7 / community) :arg2 (m5 / member))) :op4 (p6 / person :mod (y2 / young) :arg0-of (a3 / allow-01 :arg1 (v / vote-01 :arg0 (p7 / person)))))) :arg1 (t2 / thing :arg1-of (r / report-01)))) :medium (r2 / report))
(s / say-01 :arg0 (p / person :name (n / name :op1 "julius" :op2 "nielsen") :arg0-of (s2 / study-01) :arg0-of (s3 / study-01)) :arg1 (e / expect-01 :arg1 (a / age-01 :arg1 (p2 / person :arg1-of (a2 / age-01 :arg2 (t / temporal-quantity :quant (N / N-A) :unit (y / year)))) :arg2 (b / between :op1 (t2 / temporal-quantity :quant (N2 / N-A) :unit (y2 / year)) :op2 (t3 / temporal-quantity :quant (N3 / N-A) :unit (y3 / year))) :arg4 (d / distance-quantity :quant (N4 / N-A) :unit (m / meter)))))
(m / multi-sentence :snt2 (c / come-04 :arg1 (t / thing :arg0-of (r / refine-01 :arg1 (p / piece :quant 4200 :mod (s / speed :arg1-of (h / high-02)) :consist-of (a / and :op1 (r2 / rail :mod (s2 / speed :arg1-of (h2 / high-02))) :op2 (a2 / accessory :mod (i / interior))) :purpose (p2 / purchase-01 :arg1 (r3 / right :mod (e / emission)))))) :arg2 (t2 / thing :arg0-of (r4 / refine-01 :arg1 (a3 / and :op1 (r5 / rail :mod (s3 / speed :arg1-of (h3 / high-02))) :op2 (a4 / accessory :mod (i2 / interior))))) :mod (a5 / also)) :time (d / day :arg1-of (s4 / same-01)))
(f / form-01 :arg0 (e / economy :mod (c / collective) :mod (n / new) :location (s / south :part-of (s2 / strait))) :arg1 (d / develop-02 :arg1 (a / and :op1 (d2 / develop-02 :arg1 (a2 / and :op1 (s3 / stock :mod (e2 / enterprise)) :op2 (s4 / stock :mod (e3 / enterprise)) :op3 (d3 / develop-02 :arg1 (a3 / agriculture)) :op4 (d4 / develop-02 :manner (j / joint)))))) :time (p / present) :mod (m / main))
(t / target-01 :arg0 (l / launch-01 :arg0 (c / country :name (n / name :op1 "China")) :arg1 (l2 / launch-01)) :arg1 (a / and :op1 (w / want-01 :arg0 (c2 / country) :arg1 (a2 / and :op1 (a3 / around) :op2 (l3 / land-01) :op3 (p / patrol-01 :arg0 (c3 / country)))) :op2 (l4 / land-01 :arg1 (c4 / country)) :op3 (p2 / patrol-01 :arg0 (c5 / country)) :op4 (t2 / task :mod (t3 / this)) :degree (c6 / considerable)))
(a / and :op1 29 :op2 2014 :op3 (s / survey-01 :arg0 (s2 / survey-01 :arg1 (n / news)) :arg1 (p / person :arg2-of (s3 / staff-01 :arg1 (p2 / person :arg0-of (h / have-org-role-91 :arg2 (d / doctor :mod (c / corridor))))))) :li 2014)
(m / multi-sentence :snt1 (p / possible-01 :arg1 (' / ' :arg1 (p2 / person :arg0-of (c / consume-01)) :arg2 (m2 / monetary-quantity :quant 7 :unit (y / yuan) :mod (o / only)))) :snt2 (p3 / possible-01 :arg1 (b / buy-01 :arg0 (y2 / you) :arg1 ('2 / ' :mod (i / iphone7)))))
(s / say-01 :arg0 (p / person :arg0-of (m / merchandise-01) :mod (c / country :name (n / name :op1 "N-A"))) :arg1 (i / increase-01 :arg0 (i2 / increase-01 :arg1 (t / thing :arg1-of (i3 / include-91 :arg2 (l / license-01 :arg1 (l2 / license-01)) :arg3 (p2 / percentage-entity :value (N / N-A))))) :arg1 (i4 / increase-01 :arg1 (s2 / share :poss (c2 / company)) :arg4 (a / and :op1 (s3 / share :quant (a2 / approximately :op1 600000000)) :op2 (s4 / share :quant (a3 / approximately :op1 600000000)))) :op3 (a4 / account-01 :arg0 (i5 / increase-01) :arg1 (s5 / share :quant 2.77) :arg3 (b / bank :name (n2 / name :op1 (s6 / shanghai)) :mod (d / develop-02)))) :arg1-of (s7 / say-01 :arg0 (p3 / person :arg0-of (m2 / merchandise-01) :mod (c3 / country :name (n3 / name :op1 "N-A")))))
(m / multi-sentence :snt1 (a / and :op1 (o / office :quant 3 :mod (t / ticket) :location (a2 / and :op1 (n / north) :op2 (s / side :mod (s2 / south) :part-of (c / city-district :name (n2 / name :op1 "N-A") :location (n3 / north))))) :op2 (s3 / side :mod (n4 / north) :part-of (a3 / area :mod (o2 / outbound)))) :snt2 (a4 / and :op1 (t2 / ticket :quant 39 :mod (t3 / ticket)) :op2 (m2 / machine :quant 34 :mod (t4 / ticket) :mod (a5 / automatic))))
(r / reach-01 :arg0 (q / quality :poss (e / export-01 :arg0 (c / country :name (n / name :op1 "China")) :arg1 (o / oil) :arg2 (c2 / country :mod (f / foreign)))) :arg1 (l / level :arg1-of (s / same-01)) :manner (g / gradual) :arg1-of (c3 / cause-01 :arg0 (- / -lrb- :arg0 (c4 / country) :arg1 (-2 / -rrb- :mod (q2 / quality) :arg1-of (h / high-02 :degree (m / most)) :poss (w / world)))))
(m / marked :arg1 (p / packaging :mod (s / sunscreen)) :arg2 (a / and :op1 (s2 / spf :arg1 (i / index :mod (u / uvb) :poss (w / we))) :op2 (h / have-03 :arg0 (i2 / index :poss (w2 / we) :mod (c / common)) :arg1 (p2 / product-of :op1 (1 / 15,30,50) :op2 (s3 / so)))) :arg1-of (g / general-02))
(c / contrast-01 :arg1 (a / appear-01 :arg1 (a2 / appear-01 :arg1 (p / person :arg0-of (h / have-rel-role-91 :arg2 (l / liu))) :arg1-of (b / beautiful-02)) :arg0-of (c2 / cause-01 :arg1 (r / remembered :domain (p2 / person) :arg1-of (q / quick-02)))) :arg2 (l2 / lay-off-02 :arg0 (p3 / person) :arg1 (f / future :poss (p4 / person)) :arg2 (c3 / circle :mod (e / entertainment)) :mod (a3 / also)))
(s / say-01 :arg0 (u / url-entity :value (l / lingshui)) :arg1 (b / begin-01 :arg0 (s2 / sector :mod (t / transport-01) :arg0-of (c / counter-01 :arg1 (t2 / traffic))) :arg1 (b2 / begin-01 :arg0 (s3 / sector) :arg1 (o / operation :mod (l2 / law :polarity -) :arg1-of (t3 / total-01 :arg2 (o2 / operation :quant 613 :mod (p / passenger) :mod (p2 / passenger))) :arg2-of (t4 / total-01)) :time (y / year :mod (t5 / this))) :time (y2 / year :mod (t6 / this))))
(t / tell-01 :arg0 (d / doctor) :arg1 (w / want-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg2 (d2 / doctor))) :arg1 (c / cure :arg0 (p2 / person) :arg1 (l / likely-01 :polarity -))) :arg2 (p3 / possible-01 :arg1 (a / alleviated :arg1 (a2 / adhere-02 :arg1 (m / medication)) :mod (u / usual))))
(e / embarrassing :arg1 (s / situation :poss (c / country :name (n / name :op1 "N-A"))) :degree (m / more) :arg1-of (c2 / cause-01 :arg0 (c3 / choose-01 :arg0 (p / person :quant (b / between :op1 76 :op2 76)) :arg1 (c4 / compete-01 :arg0 (p2 / person) :arg1 (a / and :op1 (s2 / simmons) :op2 (e2 / enbid)) :time (s3 / season :mod (n2 / new)) :purpose (p3 / play-11 :arg0 (h / he) :arg2 (r / right))) :time (s4 / season :mod (l / last)))) :degree (m2 / more))
(m / multi-sentence :snt1 (o / oh :mode (e / expressive)) :snt2 (b / bring-01 :arg0 (j / james) :arg1 (t / trophy :ord (o2 / ordinal-entity :value 1) :mod (p / professional) :mod (p2 / professional) :ord (o3 / ordinal-entity :value 1)) :time (b2 / before :op1 (n / now) :duration (t2 / temporal-quantity :quant (N / N-A) :unit (y / year)))))
(b / break-01 :arg0 (p / person :mod (c / country :name (n / name :op1 "N-A"))) :arg1 (l / line :mod (d / defensive) :poss (t / team :mod (c2 / country :name (n2 / name :op1 "N-A"))) :arg1-of (s / straight-04)) :arg4 (l2 / line :mod (s2 / scoring)) :time (t2 / then))
(i / inspire-01 :arg0 (c / cancer) :arg1 (a / and :op1 (g / graff) :op2 (h / heather)))
(a / and :op1 (r / receive-01 :arg0 (a2 / and :op1 (p / person :arg0-of (h / have-org-role-91 :arg2 (g / graff))) :op2 (p2 / person :arg0-of (h2 / have-org-role-91 :arg2 (s / steinning))) :op3 (p3 / person :arg0-of (h3 / have-org-role-91 :arg2 (s2 / steinning))) :op4 (p4 / person :arg0-of (h4 / have-org-role-91 :arg2 (s3 / steinning))) :op5 (p5 / person :arg0-of (h5 / have-org-role-91 :arg2 (s4 / steinning))) :op6 (p6 / person :arg0-of (h6 / have-org-role-91 :arg2 (s5 / steinning))) :op6 (p7 / person :arg0-of (h7 / have-org-role-91 :arg2 (s6 / steinning))) :op6 (p8 / person :arg0-of (h8 / have-org-role-91 :arg2 (s7 / steinning))) :op6 (p9 / person :arg0-of (h9 / have-org-role-91 :arg2 (s8 / steinning))) :op6 (p10 / person :arg0-of (h10 / have-org-role-91 :arg2 (s9 / steinning))) :op6 (p11 / person :arg0-of (h11 / have-org-role-91 :arg2 (s10 / steinning))) :op6 (p12 / person :arg0-of (h12 / have-org-role-91 :arg2 (s11 / steinning))) :op6 (p13 / person :arg0-of (h13 / have-org-role-91 :arg2 (s12 / steinning))) :op6 (p14 / person :arg0-of (h14 / have-org-role-91 :arg2 (s13 / steinning))) :op6 (p15 / person :arg0-of (h15 / have-org-role-91 :arg2 (s14 / steinning))) :op7 (p16 / person :arg0-of (h16 / have-org-role-91 :arg2 (s15 / steinning))))) :arg1 (t / thing :arg2-of (m / mean-01) :arg1-of (r2 / remarkable-02 :degree (m2 / more))))
(l / live-01 :arg0 (i / i) :location (h / hospital) :concession-of (w / walk-01 :arg0 (i2 / i) :destination (a / around :op1 (v / value-interval :op1 20 :op2 30 :op3 (f / foot :quant 50))) :mod (s / still)) :concession (l2 / live-01 :arg0 (i3 / i) :location (h2 / hospital)))
(d / drop-01 :arg1 (m / monetary-quantity :arg2-of (p / price-01)) :arg3 (a / and :op1 (c / clothing :mod (c2 / clothing)) :op2 (f / furniture) :op3 (a2 / appliances :mod (h / home)) :op4 (m2 / maintain-01 :arg1 (h2 / home)) :op5 (m3 / maintain-01 :arg1 (r / rate-entity-91 :arg1 (p2 / percentage-entity :value (N / N-A)) :arg2 (t / temporal-quantity :quant (N2 / N-A) :unit (y / year))))))
FAILED_TO_PARSE#Number of opening and closing brackets doesn't match.
(p / possible-01 :polarity - :arg1 (m / match-01 :arg1 (a / and :op1 (o / oil) :op2 (b / baked)) :mod (s / simple)))
(h / hope-01 :arg0 (i / i) :arg1 (a / and :op1 (o / organize-01 :arg0 (c / company) :arg1 (a2 / activity-06 :arg0 (c2 / company) :mod (s / such)) :time (l / late :degree (m / more))) :op2 (o2 / organize-01 :arg0 (p / person :mod (y / young :degree (m2 / more)) :mod (y2 / young :degree (m3 / more))) :arg1 (a3 / and :op1 (c3 / communicate-01) :op2 (e / exchange-01)))))
(a / and :op1 (e / express-01 :arg0 (p / person :arg0-of (a2 / author-01) :arg0-of (a3 / author-01 :arg1 (d / documentary :name (n / name :op1 (' / '')) :mod (e2 / ethnic-group)))) :arg1 (d2 / disappoint-01 :arg0 (d3 / documentary :name (n2 / name :op1 ('2 / ''))) :arg1 (h / hotel :mod (k / kempinski)))) :op2 (e3 / express-01 :arg0 (p2 / person) :arg1 (d4 / disappoint-01 :arg0 (a4 / and :op1 (h2 / hotel :mod (k2 / kempinski)) :op2 (l / letter :mod (k3 / kempinski))) :arg1 (l2 / letter :arg1-of (o / open-09)))))
(p / possible-01 :arg1 (c / call-01 :arg0 (g / guest) :arg1 (c2 / country :name (n / name :op1 "Israel")) :arg2 (c3 / center :part-of (h / hotel :arg1-of (c4 / call-01 :arg2 (h2 / hotel))))) :arg1-of (i / instead-of-91))
FAILED_TO_PARSE#Number of opening and closing brackets doesn't match.
(t / threaten-01 :polarity - :arg0 (r / resist-01 :arg0 (i / individual) :arg1 (a / and :op1 (s / self-exposure) :op2 (e / experience-01 :arg0 (h / he) :mod (e2 / emotional)))) :arg1 (a2 / and :op1 (s2 / self-awareness :poss (i2 / individual)) :op2 (s3 / self-esteem :arg0 (i3 / individual))) :arg2 (i4 / individual))
(a / accident :time (m / morning :mod (t / thursday)) :location (m2 / motorway :arg1-of (n / near-02 :arg2 (m3 / moore)) :arg1-of (n2 / near-02 :arg2 (m4 / moore))))
(a / and :op2 (s / say-01 :arg0 (a2 / and :op1 (p / person :arg0-of (h / have-org-role-91 :arg1 (p2 / person :arg0-of (h2 / have-rel-role-91 :arg2 (s2 / son))) :arg2 (s3 / spokesman))) :op2 (p3 / person :arg0-of (h3 / have-rel-role-91 :arg1 (p4 / person) :arg2 (d / daughter)))) :arg1 (' / '' :arg1 (t / they) :manner (d2 / die-01 :arg1 (t2 / they) :manner (f / frank)) :degree (v / very))))
(u / use-01 :arg0 (d / detective :mod (b / brand)) :arg1 (r / rbs :purpose (p / protect-01 :arg1 (b2 / brand :mod (p2 / person :arg0-of (c / consume-01)) :mod (o / other) :arg0-of (c2 / consume-01)))) :time (t / time :mod (t2 / that)))
(a / and :op1 (p / prominent :degree (m / more) :mod (o / other)) :op2 (b / brand :mod (b2 / banking) :arg1-of (p2 / private-03) :mod (s / small :degree (m2 / more)) :example (a2 / and :op1 (b3 / bank :mod (c / capital :mod (m3 / macro))) :op2 (b4 / bank :name (n / name :op1 (a3 / adam))) :op3 (c2 / company :name (n2 / name :op1 "N-A")) :op4 (c3 / company) :op5 (b5 / bank :mod (m4 / military) :mod (h / holt)))))
(s / say-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg2 (e / executive :mod (c / chief))) :arg0-of (h2 / have-org-role-91 :arg2 (e2 / executive :mod (c2 / chief))) :arg0-of (h3 / have-org-role-91 :arg2 (e3 / executive :mod (c3 / chief))) :arg0-of (h4 / have-org-role-91 :arg2 (e4 / executive :mod (c4 / chief))) :arg0-of (h5 / have-org-role-91 :arg2 (e5 / executive :mod (c5 / chief))) :arg0-of (h6 / have-org-role-91 :arg2 (e6 / executive :mod (c6 / chief))) :arg0-of (h7 / have-org-role-91 :arg2 (e7 / executive :mod (c7 / chief))) :arg0-of (h8 / have-org-role-91 :arg2 (e8 / executive :mod (c8 / chief)))) :arg1 (t / time :time-of (b / become-01 :arg1 (i / it) :arg2 (b2 / bank :mod (m / multi-brand)))))
(a / appoint-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (a2 / agency :mod (s / security) :mod (s2 / security :mod (n / nation))) :arg2 (d / director))) :arg1 (p2 / person :arg0-of (h2 / have-org-role-91 :arg2 (d2 / deputy))) :time (e / end-01 :arg1 (1 / 1990s)) :time (e2 / end-01 :arg1 (p3 / person :arg0-of (h3 / have-org-role-91 :arg1 (s3 / service :mod (s4 / security) :mod (f / federal)) :arg2 (d3 / director)))))
(h / hope-01 :arg0 (i / i) :arg1 (p / possible-01 :arg1 (e / explain-01 :arg0 (s / someone) :arg1 (t / thing :arg0-of (c / cause-01 :arg1 (a / appear-01 :arg1 (f / fish :quant 2 :mod (t2 / this))))))) :arg1-of (p2 / post-01 :arg0 (a2 / and :op1 (p3 / person :arg0-of (l / live-01 :location (s2 / sea)) :quant (a3 / about :op1 500)) :op2 (v / video :topic (s3 / scene :mod (s4 / strange) :location (p4 / periscope))))))
(a / and :op1 (o / own-01 :arg0 (p / person :arg0-of (o2 / own-01 :arg1 (m / music :mod (l / latin))) :arg2-of (i / include-91 :arg1 (s / sign-01 :arg0 (p2 / person)))) :arg1 (s2 / string :mod (f / floor))) :op2 (l2 / listen-01 :arg0 (p3 / person) :arg1 (m2 / music :mod (l3 / latin)) :arg1-of (c / cause-01 :arg0 (l4 / listen-01 :arg0 (p4 / person) :arg1 (t / thing :arg2-of (s3 / shelter-01 :arg3 (r / rio)) :mod (o3 / one-street)) :frequency (o4 / often)))))
(h / help-01 :arg0 (p / person :mod (c / country :name (n / name :op1 "N-A"))) :arg1 (a / achieve-01 :arg0 (t / team :mod (c2 / country :name (n2 / name :op1 "N-A"))) :arg1 (t2 / titles :quant 4) :location (p2 / project :mod (o / opera) :mod (i / individual) :mod (i2 / individual))) :arg2 (t3 / team :mod (c3 / country)))
(h / hope-01 :arg0 (p / person :arg0-of (h2 / have-org-role-91 :arg2 (m / minister))) :arg1 (e / end-01 :arg1 (d / dispute-01 :arg2 (c / change-01 :arg1 (c2 / contract :arg0-of (e2 / emerge-02) :poss (p2 / person :arg0-of (h3 / have-org-role-91 :arg2 (m2 / minister))))))) :time (i / initial))
(e / easy-05 :arg1 (a / accuse-01 :arg1 (t / thing :arg1-of (p / provide-01 :arg0 (l / law))) :arg2 (e2 / easy-05 :arg1 (a2 / accuse-01 :arg1 (p2 / person) :arg2 (c / concern-01 :arg0 (c2 / crime-02 :arg1 (p3 / person :mod (c3 / country :name (n / name :op1 "N-A")))) :arg1-of (a3 / accord-02 :arg2 (b / bias-01 :arg1 (p4 / person))))))))
(d / discover-01 :arg0 (n / netizen :quant (m / many)) :arg1 (d2 / discover-01 :arg0 (n2 / netizen :arg0-of (h / have-rel-role-91 :arg1 (n3 / netizen) :arg2 (n4 / netizens))) :arg1 (p / person :arg0-of (h2 / have-rel-role-91 :arg1 (n5 / netizens) :arg2 (b / brother :mod (t / twin)))) :mod (s / simple) :mod (s2 / simple)) :arg1-of (q / quick-02))
(a / and :op1 (c / come-01 :arg1 (e / enterprise :quant (n / number)) :arg4 (c2 / center :mod (t / trade-01) :mod (e2 / emission)) :purpose (s / submit-01 :arg0 (e3 / enterprise) :arg1 (r / right :mod (r2 / right :mod (e4 / emission))))) :op2 (p / pay-01 :arg0 (p2 / person :arg0-of (u / use-01 :arg1 (r3 / requisitions))) :arg1 (f / fee :mod (p3 / person :arg0-of (u2 / use-01)))) :time (d / date-entity :decade (N / N-A)))
(s / say-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (p2 / publication :name (n / name :op1 "N-A") :poss (w / we)) :arg3 (a / apprentice-01 :arg0 (p3 / person)))) :arg1 (p4 / possible-01 :arg1 (r / receive-01 :arg0 (r2 / rest :part-of (c / city :poss (w2 / we))) :arg1 (t / temperature-quantity :quant (d / degree :arg1-of (d2 / differ-02)) :arg1-of (d3 / differ-02 :arg2 (t2 / temperature :quant (d4 / degree :arg1-of (h2 / high-02))))))))
(i / increase-01 :arg1 (y / year :mod (b / between :op1 (t / temporal-quantity :quant (N / N-A) :unit (y2 / year)) :op2 (t2 / temporal-quantity :quant (N2 / N-A) :unit (y3 / year)))) :arg2 (e / encryption :poss (c / continent :name (n / name :op1 "N-A") :mod (c2 / central))) :duration (t3 / temporal-quantity :quant (N3 / N-A) :unit (y4 / year)))
(h / have-purpose-91 :arg1 (p / plan-01 :arg1 (a / and :op1 (m / meet-01 :arg1 (n / need-01 :arg1 (d / develop-02 :time (f / future)))) :op2 (p2 / plan :mod (c / construct-01) :arg1-of (i / integrate-01 :arg2 (r / railway))))) :arg2 (c2 / center :part-of (s / station :mod (c3 / construct-01 :mod (n2 / new)) :arg1-of (i2 / integrate-01 :arg2 (c4 / center :part-of (s2 / station :mod (c5 / construct-01) :mod (n3 / new)))))) :purpose (b / build-01 :arg0 (p3 / plan-01) :arg1 (p4 / park :mod (n4 / nucleus) :arg1-of (i3 / integrate-01) :mod (r2 / railway :mod (n5 / new)))))
(a / aim-02 :arg1 (p / product :arg1-of (a2 / aim-02 :arg2 (n / name :op1 (u / uva)))) :arg2 (a3 / and :op1 (e / express-01 :arg0 (p2 / person :arg0-of (h / have-org-role-91 :arg2 (g / general))) :arg1 (r / role :arg0-of (e2 / effective-04) :arg0-of (e3 / effective-04 :degree (m / more)))) :op2 (e4 / express-01 :arg0 (p3 / person :quant (m2 / more-than :op1 1)) :arg1 (p4 / period :arg1-of (e5 / extend-01) :consist-of (p5 / protect-01 :arg0-of (e6 / effective-04))))) :arg1-of (a4 / aim-02 :arg2 (u2 / uva)))
(c / contrast-01)
(q / quote-01 :arg0 (a / agency :name (n / name :op1 "N-A") :mod (n2 / news) :mod (' / '')) :arg1 (i / include-91 :arg1 (r / rate :mod (i2 / inflation)) :arg2 (p / percentage-entity :value (N / N-A)) :time (y / year :ord (o / ordinal-entity :value 1) :part-of (y2 / year :mod (t / this)))) :arg2 (a2 / agency :mod (c / central)))
(l / list-01 :arg1 (t / tiger :name (n / name :op1 (s / siberian)) :arg1-of (- / -rrb- :arg0 (g / government-organization :name (n2 / name :op1 "N-A") :mod (w / world))) :arg0-of (i / iucn :arg1 (l2 / list :mod (r / red) :consist-of (s2 / species :arg1-of (e / endanger-01))))) :arg2 (s3 / species :arg1-of (e2 / endanger-01)) :time (c / current))
(s / show-01 :arg0 (m / ministry :topic (m2 / monitor-01 :arg0 (a / and :op1 (p / person :mod (c / country :name (n / name :op1 "N-A"))) :op2 (p2 / person :mod (c2 / country :name (n2 / name :op1 "N-A"))) :op3 (p3 / person :arg0-of (h / have-org-role-91 :arg1 (c3 / country) :arg3 (m3 / monitor-01))) :op4 (p4 / person :arg0-of (h2 / have-org-role-91 :arg1 (c4 / country) :arg3 (m4 / monitor-01))) :op5 (p5 / person :arg0-of (h3 / have-org-role-91 :arg1 (c5 / country) :arg3 (l / lead-02 :arg0 (p6 / person))))))) :arg1 (i / include-91 :arg1 (a2 / and :op1 (p7 / person :quant (b / between :op1 4 :op2 4 :mod (o / only))) :op2 (p8 / person :quant 3 :arg0-of (h4 / have-org-role-91 :arg2 (h5 / head-of-state)))) :arg2 (a3 / and :op1 (t / tigers :mod (w / wild)) :op2 3 :location (n3 / northeast :location (n4 / northeast)))))
(s / show-01 :arg0 (a / analyze-01 :arg0 (t / they)) :arg1 (l / last-01 :arg1 (e / expectancy :mod (l2 / life) :mod (b / big :degree (m / most))) :arg2 (t2 / temporal-quantity :quant (N / N-A) :unit (y / year) :mod 120)))
(h / have-concession-91 :arg1 (a / appear-02 :arg1 (a2 / and :op1 (g / go-01 :arg1 (p / process-02) :direction (u / up)) :op2 (d / down :arg1 (r / rate)))) :arg2 (r2 / rate :mod (e / exchange-01 :arg1 (a3 / against :op1 (d2 / dollar :quant (o / over :op1 100)))) :arg1-of (r3 / repeat-01)) :time (t / time :arg1-of (s / same-01)))
(c / contrast-01 :arg1 (u / underdeveloped :degree (r / relative) :domain (' / '' :arg1 (p / politics))) :arg2 (h / high-02 :arg1 (n / number :quant-of (c2 / country :arg0-of (c3 / cause-01 :arg1 (a / and :op1 (r2 / regard-01 :arg0 (c4 / country :name (n2 / name :op1 "N-A")) :arg1 (f / field :mod (t / ticket) :mod (b / big) :mod (b2 / big)) :arg2 (f2 / field :mod (t2 / ticket) :mod (b3 / big))) :op2 (a2 / analyze-01 :arg0 (c5 / country) :arg1 (p2 / person :arg1-of (e / expert-01)) :location (c6 / country)))) :time (a3 / always)))))
(f / follow-01 :arg1 (a / audience) :arg2 (a2 / and :op1 (s / story :topic (s2 / story :arg1-of (f2 / fame-01))) :op2 (s3 / sing-01 :arg0 (s4 / sing-01 :arg0 (p / person :arg0-of (a3 / act-01)))) :op3 (s5 / smile :mod (w / warm)) :frequency (s6 / sometimes)))
(w / watch-01 :arg0 (p / person :arg0-of (w2 / watch-01 :arg1 (p2 / perform-01 :mod (o / opera) :mod (p3 / peking)) :time (b / before :op1 (n / now) :quant (t / temporal-quantity :quant (N / N-A) :unit (y / year))))) :arg1 (s / show-04 :arg1 (p4 / person :arg0-of (h / have-rel-role-91 :arg1 (p5 / person) :arg2 (d / daughter)))) :time (b2 / before :op1 (n2 / now) :quant (t2 / temporal-quantity :quant (N2 / N-A) :unit (y2 / year))))
(a / and :op1 (h / have-03 :arg0 (p / person :mod (c / country :name (n / name :op1 "N-A")) :arg1-of (u / use-01 :arg2 (t / top :quant 2))) :arg1 (c2 / country :name (n2 / name :op1 "N-A")) :location (t2 / top :quant 2)) :op2 (s / seasons :arg1 (c3 / career :mod (g / good :degree (m / most)) :mod (t3 / this)) :arg2 (c4 / career :poss (p2 / person))) :time (p3 / past))
(s / serve-01 :arg0 (p / person :arg1-of (e / expert-01)) :arg1 (p2 / person :arg1-of (e2 / expert-01)) :arg2 (p3 / person :arg1-of (e3 / expert-01) :arg0-of (p4 / participate-01 :arg1 (a / activity-06 :arg0 (f / fan :arg1-of (l / local-02) :mod (v / various))))) :time (t / then))
(e / exciting :degree (r / really) :time (t / time))
(a / and :op1 (p / person :name (n / name :op1 "ms." :op2 "zhu") :arg0-of (w / work-01 :arg2 (a2 / and :op1 (p2 / person :arg0-of (h / have-org-role-91 :arg2 (p3 / person :arg0-of (m / manage-01 :arg1 (p4 / product))))) :op2 (p5 / person :arg0-of (e / engineer-01 :arg1 (p6 / product)))))) :op2 (d / decide-01 :arg0 (p7 / person) :arg1 (a3 / and :op1 (d2 / delete :arg0 (p8 / person) :arg1 (a4 / account :mod (s / snapchat) :poss (p9 / person))) :op2 (e2 / encourage-01 :arg0 (p10 / person) :arg1 (p11 / person) :arg2 (d3 / do-02 :arg0 (p12 / person) :arg1 (s2 / same-01))))) :medium (t / thursday :arg1 (p13 / person)))
(s / say-01 :arg0 (s2 / she) :arg1 (t / think-01 :arg0 (s3 / she) :arg1 (t2 / think-01 :arg0 (s4 / she) :arg1 (a / and :op1 (l / lack-01 :arg0 (c / controversy :mod (r / race)) :arg1 (d / diversity :mod (r2 / race))) :op2 (l2 / lack-01 :arg1 (p / process-02 :arg1 (r3 / recruit-01))))) :arg2 (a2 / article :arg1-of (w / write-01 :purpose (a3 / and :op1 (p2 / process-01) :op2 (i / interview-01 :mod (t3 / telephone)))))))
(a / and :op1 (b / boycott-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (i / intelligence :arg1-of (h2 / high-02 :degree (m / more)) :arg0-of (h3 / have-org-role-91 :arg1 (i2 / intelligence) :arg2 (o / official))) :arg2 (o2 / official))) :arg1 (p2 / product :mod (i3 / intelligence) :poss (c / command-02))) :op2 (t / threaten-01 :arg0 (t2 / threaten-01 :arg0 (s / state :mod (r / religious-group :name (n / name :op1 "N-A")))) :arg1 (t3 / threaten-01 :arg0 (s2 / state :mod (c2 / country :name (n2 / name :op1 "N-A"))))))
(m / multi-sentence :snt1 (r / reflect-01 :arg1 (i / it) :arg2 (w / way :manner-of (e / eat-01 :arg0 (c / country :name (n / name :op1 "N-A")))) :mod (a / also)) :snt2 (a2 / add-01 :arg0 (i2 / i) :arg1 (a3 / and :op1 (p / person :arg0-of (h / have-rel-role-91 :arg1 (p2 / person) :arg2 (h2 / husband))) :op2 (p3 / person :arg0-of (h3 / have-rel-role-91 :arg1 (p4 / person) :arg2 (h4 / husband))) :op3 (p5 / person :arg0-of (h5 / have-rel-role-91 :arg1 (p6 / person) :arg2 (h6 / husband))) :op4 (p7 / person :arg0-of (h7 / have-rel-role-91 :arg1 (p8 / person) :arg2 (h8 / husband))))))
(e / explain-01 :arg0 (p / person :name (n / name :op1 "mr" :op2 "ko")) :arg1 (c / cause-01 :arg0 (a / amr-unknown) :arg1 (b / become-01 :arg1 (a2 / and :op1 (h / he) :op2 (p2 / person :arg0-of (h2 / have-rel-role-91 :arg1 (h3 / he) :arg2 (w / wife)))) :arg2 (t / topic :arg1-of (m / major-02) :consist-of (p3 / person :mod (c2 / country :name (n2 / name :op1 "N-A")))) :time (t2 / time :mod (t3 / that)))))
(d / detached :arg1 (h / he) :arg2 (p / person) :arg1-of (o / obvious-01))
(m / multi-sentence :snt1 (a / and :op1 (c / call-01 :arg1 (i / it) :arg2 (f / fruit :arg1-of (d / dry-02 :mod (b / butter)))) :op2 (s / say-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg2 (z / ziegman))) :arg1 (t / thing :arg2-of (n / name-01 :arg1 (t2 / trick :mod (c2 / common)))))) :snt2 (' / '' :arg0 (t3 / trick :mod (u / usual)) :arg1 (t4 / trick :mod (u2 / usual)) :arg2 (t5 / trick)))
(s / suggest-01 :arg0 (p / person :arg0-of (h / have-rel-role-91 :arg1 (p2 / person :mod (o / old :degree (m / more))) :arg2 (f / friend :mod (o2 / old :degree (m2 / more))))) :arg1 (t / try-01 :polarity - :arg0 (p3 / person) :arg1 (s2 / stay-01 :arg1 (p4 / person) :time (l / late) :purpose (w / watch-01 :arg0 (p5 / person) :arg1 (g / game :mod (o3 / olympic))) :mod (e / especially))) :arg2 (h2 / history :topic (d / disease :mod (c / cardiovascular)) :mod (e2 / especially)))
(m / multi-sentence :snt1 (a / and :op1 (p / provide-01 :arg0 (c / company) :arg1 (a2 / and :op1 (r / relaxed :arg1 (w / we) :mod (s / such)) :op2 (h / happy) :op3 (p2 / platform :mod (h2 / harmonious))) :arg2 (w2 / we)) :op2 (a3 / and :op1 (h3 / happy) :op2 (h4 / happy) :op3 (p3 / platform :mod (h5 / harmonious)))) :snt2 (a4 / and :op1 (m2 / meaningful :mod (m3 / much :degree (v / very))) :op2 (i / interesting :domain (p4 / platform))))
(a / and :op1 (e / earn-01 :arg0 (c / couple :mod (d / dropshipper)) :arg1 (r / rate-entity-91 :arg1 (m / monetary-quantity :quant 10.75 :unit (d2 / dollar)) :arg2 (v / volume-quantity :quant (N / N-A) :unit (g / gallon)))) :op2 (p / pay-01 :arg0 (c2 / couple) :arg1 (t / tax-01 :arg3 (t2 / tax-01 :arg3 (f / federal))) :arg3 (p2 / percentage-entity :value (N2 / N-A))))
(a / and :op1 (h / hold-04 :arg0 (p / person :name (n / name :op1 "Clinton")) :arg1 (r / rally-01 :location (c / country :name (n2 / name :op1 "N-A"))) :time (w / week :mod (l / last))) :op2 (a2 / ask-02 :arg0 (p2 / person) :arg1 (a3 / and :op1 (m / meet-03 :arg0 (p3 / person)) :op2 (e / exchange-01 :arg0 (p4 / person) :arg1 (r2 / returns :mod (e2 / exchange-01 :arg1 (t / tax-01))))) :arg2 (p5 / person)) :time (w2 / week :mod (l2 / last)))
(a / and :op1 (p / point-01 :arg0 (p2 / post :name (n / name :op1 (' / '')) :mod (a2 / another)) :arg2 (f / face :part-of (h / hotel)) :degree (t / total)) :op2 (p3 / point-out-02 :arg0 (p4 / post) :arg1 (s / street :mod (m / main) :location (s2 / street :arg1-of (f2 / fame-01) :location (s3 / street :arg1-of (f3 / fame-01))))))
(m / multi-sentence :snt1 (c / cause-01 :arg1 (h / have-03 :arg0 (h2 / he) :arg1 (a / and :op1 (d / drone :mod (g / gold)) :op2 (m2 / medal :mod (g2 / gold)) :frequency (r / rate-entity-91 :arg3 (t / temporal-quantity :quant (N / N-A) :unit (y / year)))))) :snt2 (s / seem-01 :arg1 (d2 / day :mod (h3 / holy) :poss (a2 / and :op1 (w / world :mod (s2 / sports :mod (c2 / country :name (n / name :op1 "N-A")))) :op2 (r2 / redgrave :mod (c3 / country :name (n2 / name :op1 "N-A"))) :op3 (f / farra :mod (c4 / country)) :op4 (b / bannister :mod (r3 / roger)) :op5 (b2 / bannister :mod (r4 / roger))) :time (d3 / day :time-of (d4 / day)))))
(s / say-01 :arg0 (p / person :name (n / name :op1 "N-A") :arg0-of (h / have-org-role-91 :arg1 (g / government-organization :arg0-of (g2 / govern-01 :arg1 (c / country :name (n2 / name :op1 "N-A")))) :arg2 (o / officer-in-charge))) :arg1 (a / and :op1 (r / restore-01 :arg1 (s2 / society) :manner (g3 / gradual)) :op2 (a2 / and :op1 (d / decline-01 :arg1 (r2 / rate :mod (f / factor) :poss (i / industry :quant (s3 / some)))) :op2 (i2 / increase-01 :arg1 (d2 / difficulty :topic (a3 / and :op1 (p2 / produce-01) :op2 (o2 / operation)))))) :time (y / year :mod (r3 / recent)))
(i / increase-01 :arg0 (a / area :mod (t / this)) :arg1 (c / convenience :poss (p / person :arg0-of (h / have-rel-role-91 :arg1 (t2 / they) :arg2 (c2 / child)))) :purpose (e / examine-01 :arg0 (p2 / person :arg0-of (h2 / have-rel-role-91 :arg1 (t3 / they) :arg2 (c3 / child))) :arg1 (e2 / examine-01 :arg1 (e3 / enter-01 :arg0 (c4 / college :mod (n / nation))) :location (l / level :arg1-of (l2 / local-02)) :prep-under (c5 / condition :arg1-of (r / relevant-01)))))
(s / say-01 :arg0 (p / person :name (n / name :op1 "N-A")) :arg1 (a / and :op1 (w / write-01 :arg0 (c / company) :arg1 (v / value-01 :arg1 (m / monetary-quantity :quant 187 :unit (d / dollar)) :arg2 (c2 / contract-02 :arg1 (a2 / activity-06 :arg0 (a3 / activity-06))))) :op2 (t / thing :arg1-of (e / expect-01 :arg0 (c3 / company)))))
(a / and :op1 (e / exceed-01 :arg0 (l / lack-01 :arg1 (f / fund-01 :arg1 (s / service :mod (c / community) :arg1-of (l2 / legal-02)))) :arg1 (l3 / limit-01) :time (a2 / already)) :op2 (f2 / face-01 :arg0 (l4 / lack-01) :arg1 (c2 / cut-02 :mod (f3 / further)) :time (n / now)))
(s / say-01 :arg0 (p / person :name (n / name :op1 "N-A")) :arg1 (g / get-03 :arg1 (s2 / situation) :arg2 (b / bad-04 :arg1 (s3 / situation) :degree (m / more)) :mod (o / only) :condition (c / change-01 :polarity - :arg0 (g2 / government-organization :arg0-of (g3 / govern-01) :mod (f / federal)) :arg1 (d / decide-01 :arg1-of (e / exist-01)))))
(c / contrast-01 :arg2 (c2 / continue-01 :arg0 (p / person :name (n / name :op1 (m / mr.) :op2 (p2 / putin))) :arg1 (e / explain-01 :arg0 (p3 / person) :arg1 (f / forgotten :arg1-of (h / have-03 :polarity - :arg0 (p4 / person))))))
(s / say-01 :arg0 (o / officer :arg0-of (h / have-org-role-91 :arg1 (p / person :arg0-of (h2 / have-org-role-91 :arg2 (o2 / officer :mod (e / executive :mod (c / chief))))) :arg2 (o3 / officer))) :arg1 (c2 / cause-01 :arg0 (s2 / seek-01 :arg0 (p2 / person :arg0-of (s3 / seek-01 :arg1 (b / become-01 :arg1 (p3 / person) :arg2 (s4 / service :mod (g / good :degree (m / more))) :location (b2 / bank :part-of (c3 / customer))))) :arg1 (b3 / become-01 :arg1 (p4 / person) :arg2 (b4 / bank :mod (m2 / multi-brand))))))
(a / and :op1 (p / pull-01 :arg0 (p2 / person :arg0-of (d / dettori)) :arg1 (p3 / predilections) :time (a2 / after :op1 (a3 / achieve-01 :arg0 (p4 / person)))) :op2 (c / cause-01 :arg0 (p5 / person) :arg1 (i / invite-01 :arg0 (p6 / person) :arg1 (a4 / audience) :arg2 (c2 / cheer :arg0 (p7 / person) :arg1 (a5 / audience)))))
(c / contrast-01 :arg2 (v / view-02 :arg0 (v2 / view-02 :mod (o / official)) :arg1 (c2 / choose-01 :arg0 (c3 / candidate :poss (c4 / candidate :arg0-of (h / have-org-role-91 :arg2 (p / president)))) :arg1 (w / wielding :arg0 (c5 / candidate) :arg1 (p2 / policy :topic (e / environment) :poss (c6 / country :name (n / name :op1 "N-A")))) :manner (s / sudden))))
(a / and :op1 (w / witness-01 :arg0 (w2 / we) :arg1 (w3 / work-01 :arg1 (e / engineer-01) :mod (g / great :degree (s / so))) :location (p / project :mod (g2 / great :degree (s2 / so)))) :op2 (c / constructs :arg1 (b / bridge :mod (t / this)) :arg2 (u / use-01 :arg0 (b2 / bridge) :arg1 (a2 / and :op1 (p2 / product :mod (c2 / concretes)) :op2 (p3 / product :mod (a3 / aerospace)) :quant (o / over :op1 30,000))) :mod (o2 / only)))
(s / say-01 :arg0 (p / person :name (n / name :op1 "michael" :op2 "martin") :arg0-of (h / have-org-role-91 :arg1 (p2 / project :mod (c / construct-01 :arg1 (b / bridge))) :arg2 (d / director :mod (c2 / construct-01 :arg1 (b2 / bridge))))) :arg1 (m / matter :polarity - :arg1 (p3 / project :mod (b3 / bridge)) :arg1-of (s2 / significant-02)))
(t / tell-01 :arg0 (p / person :arg0-of (i / investigate-01)) :arg1 (s / seem-01 :arg1 (f / fire-01 :arg0 (p2 / person :arg0-of (i2 / investigate-01)))) :arg2 (p3 / person :arg0-of (i3 / investigate-01)))
(n / need-01 :arg0 (w / we) :arg1 (a / and :op1 (s / simon) :op2 (g / gabrielle) :op3 (l / larry)) :arg1-of (c / cause-01 :arg0 (a2 / amr-unknown)))
(r / realize-01 :arg0 (p / person :arg0-of (p2 / play-01) :mod (t / this)) :arg1 (h / hit-01 :arg0 (a / and :op1 (m / media :mod (r2 / relation-03 :arg0 (p3 / public))) :op2 (a2 / acknowledge-01 :arg0 (p4 / person) :arg1 (p5 / person :mod (y / young) :mod (s / some)))) :arg1 (l / likely-01 :arg1 (p6 / plum :mod (s2 / small)))) :prep-in (f / fact))
(l / located :arg1 (f / female :mod (t / this)) :location (f2 / folkestone :arg1 (s / shop :poss (c / center :instrument-of (s2 / shop-01)))) :time (t2 / then))
(i / indicate-01 :arg0 (p / police) :arg1 (p2 / pursue-01 :arg0 (p3 / police) :arg1 (l / lessee :arg0-of (d / defies :arg1 (r / rule :mod (r2 / renter))))))
(i / indicate-01 :arg0 (a / and :op1 (p / person :arg0-of (h / have-org-role-91 :arg1 (p2 / police :mod (c / country :name (n / name :op1 "N-A"))) :arg2 (a2 / authorities))) :op2 (p3 / person :arg0-of (h2 / have-org-role-91 :arg1 (p4 / police) :arg2 (a3 / authority))) :op3 (p5 / person :arg0-of (h3 / have-org-role-91 :arg1 (p6 / police) :arg2 (a4 / authority))) :op4 (p7 / person :arg0-of (h4 / have-org-role-91 :arg1 (p8 / police) :arg2 (a5 / authority))) :op5 (p9 / person :arg0-of (h5 / have-org-role-91 :arg1 (p10 / police) :arg2 (a6 / authority)))) :arg1 (c2 / continue-01 :arg1 (p11 / pursue-01 :arg0 (p12 / pursue-01 :mod (t / this)) :arg1 (r / rule :name (n2 / name :op1 (r2 / renter)) :arg0-of (i2 / issue-01 :arg1 (l / lessee :arg0-of (i3 / issue-01 :arg1 (w / warn-01 :arg1-of (s / suppose-01)) :arg2 (o / other))))))))
(s / solve-01 :arg0 (m / monetary-quantity :quant 5000 :unit (y / yuan :mod (r / renminbi)) :mod (t / this)) :arg1 (m2 / matter :mod (u / urgent) :poss (i / i)))
(r / report)
(a / and :op1 (r / reach-01 :arg0 (a2 / and :op1 (m / middle) :op2 (l / low-04 :degree (m2 / more))) :arg1 (c / compete-01 :duration (d / day :mod (s / same)))) :op2 (s2 / seem-01 :arg1 (r2 / remote :degree (v / very)) :arg2 (f / final)))
(l / like-01 :arg0 (a / and :op1 (p / person :quant 2 :arg0-of (h / have-org-role-91 :arg2 (m / minister :mod (p2 / prime) :mod (p3 / prime)))) :op2 (p4 / person :quant 2 :arg0-of (h2 / have-org-role-91 :arg2 (m2 / minister :mod (p5 / prime) :mod (p6 / prime))))) :arg1 (t / take-01 :arg0 (p7 / person :quant 2 :arg0-of (h3 / have-org-role-91 :arg2 (m3 / minister :mod (p8 / prime) :mod (f / female)))) :arg1 (p9 / place :arg1-of (h4 / hot-05)) :purpose (f2 / form-01 :arg0 (p10 / person) :arg1 (t2 / thing :arg2-of (h5 / have-concession-91)))))
(b / believe-01 :arg0 (i / i) :arg1 (d / donate-01 :arg0 (n / nobody :arg1-of (p / produce-01 :time (t / today))) :arg1 (d2 / donate-01 :arg0 (p2 / party) :arg1 (m / money) :arg2 (y / you)) :arg1-of (l / long-03 :degree (s / so)) :mod (a / also) :arg1-of (c / cause-01 :arg0 (a2 / and :op1 (c2 / confiscate-01 :arg0 (p3 / party) :arg1 (t2 / take-01 :arg0 (p4 / party) :arg1 (m2 / money) :extent (e / entire))) :op2 (p5 / possible-01 :arg1 (r / request-01 :arg0 (p6 / party) :arg1 (a3 / and :op1 (s2 / support-01) :op2 (s3 / support-01)) :arg1-of (c3 / cause-01 :arg0 (h / have-03 :polarity - :arg0 (p7 / party) :arg1 (o / opportunity :mod (r2 / really) :purpose (w / want-01 :arg1 (' / '')))))))))))
(a / and :op2 (c / claim-01 :arg0 (s / source :mod (m / message) :quant (m2 / many)) :arg1 (a2 / and :op1 (c2 / cancel-01 :arg0 (s2 / source :mod (n / new) :mod (g / generation :mod (n2 / new))) :arg1 (c3 / connect-01 :arg1 (p / person :quant 3.5 :arg0-of (h / have-org-role-91 :arg2 (h2 / head-of-state))))) :op2 (u / use-01 :arg0 (p2 / person) :arg1 (a3 / and :op1 (c4 / connectivity :arg1 (p3 / person)) :op2 (c5 / charge-01 :arg0 (p4 / person)))) :op3 (i / increase-01 :arg0 (p5 / person) :arg1 (p6 / person :ord (o / ordinal-entity :value 2) :arg0-of (s3 / speak-01)) :purpose (p7 / provide-01 :arg0 (p8 / person) :arg1 (s4 / space) :purpose (a4 / apple))))))
(m / multi-sentence :snt1 (i / include-91 :li 8 :arg1 (v / value-interval :op1 8 :op2 00) :arg2 (a / approximately :op1 10) :purpose (c / carry-01 :arg0 00 :arg1 (b / bus :mod (p / person :arg0-of (t / tour-01)) :location (a2 / around :op1 (h / hotel :mod (k / kaibinsiji)))))) :snt2 (g / go-01 :arg1 (v2 / vehicle :mod (t2 / this)) :arg4 (t3 / tianchi :arg0 (g2 / group :mod (i2 / individual) :mod (i3 / individual)) :arg1 (g3 / group :consist-of (t4 / tour-01) :mod (i4 / individual))) :mod (m2 / most)))
(a / and :op1 (t / toucan :domain (g / grecia :mod (f / female))) :op2 (l / lend-01 :arg0 (b / body :mod (w / whole)) :arg1 (b2 / breath :mod (r / rain-01))))
(m / multi-sentence :snt1 (t / technology :polarity - :time (f / future) :domain (' / '')) :snt2 (e / enter-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg2 (d / director :mod (v / vice)))) :arg1 (l / life :poss (p2 / person)) :time (a / accept-01 :arg0 (p3 / person) :arg1 (p4 / person :arg0-of (r / report-01) :mod (i / international) :mod (c / country :name (n / name :op1 "N-A")))) :time (a2 / accept-01 :arg0 (p5 / person) :arg1 (p6 / person :arg0-of (r2 / report-01) :mod (i2 / international) :mod (c2 / country :name (n2 / name :op1 "N-A"))))))
(m / multi-sentence :snt1 (w / worry-01 :arg0 (t / thing :arg2-of (p / price-01) :arg1-of (r / rise-01 :arg2 (t2 / thing :arg2-of (p2 / price-01)) :mod (a / again))) :arg1 (p3 / possible-01 :arg1 (r2 / resume-01 :arg0 (b / beam :quant (n / number) :mod (c / coal :mod (s / small))) :arg1 (w2 / work-01 :arg1 (w3 / work-01))))) :snt2 (p4 / produce-01 :mode (i / interrogative) :arg0 (p5 / person :quant (n2 / number))))
(c / cause-01 :arg0 (f / factor :mod (f2 / factor :mod (s / surface)) :mod (t / this)) :arg1 (c2 / convey-01 :polarity - :arg0 (g / government-organization :arg0-of (g2 / govern-01) :arg1-of (l / lead-02 :arg0 (g3 / government-organization :arg0-of (g4 / govern-01)))) :arg1 (t2 / transformation :mod (f3 / fundamental)) :time (p / past :op1 (p2 / past))))
(s / suggest-01 :arg0 (p / police) :arg1 (o / obligate-01 :arg1 (p2 / person :mod (r / residential)) :arg2 (c / choose-01 :arg0 (p3 / person) :arg1 (p4 / product :mod (a / aerospace) :arg1-of (h / hard-04) :mod (q / quality :arg1-of (h2 / hard-04))))) :time (o2 / obligate-01 :arg1 (p5 / person) :arg2 (a2 / and :op1 (l / land-01 :arg1 (p6 / person) :location (f / family :arg1-of (h3 / have-org-role-91 :arg0 (p7 / person) :arg2 (m / member)))) :op2 (d / door :topic (c2 / choose-01 :arg1 (w / window :mod (s2 / security)))))))
(c / contrast-01 :arg1 (e / enter-01 :arg0 (p / person :mod (c2 / country :name (n / name :op1 "N-A"))) :arg1 (r / road :quant (b / between :op1 (1 / 1990s) :op2 1993)) :purpose (b2 / begin-01 :arg0 (p2 / person) :time (e2 / early))) :arg2 (i / initiate-01 :arg0 (p3 / person) :arg1 (a / africa :arg0 (p4 / person) :arg1 (a2 / and :op1 (d / develop-02 :arg0 (p5 / person) :arg1 (c3 / conference :arg1-of (b3 / begin-01 :arg0 (c4 / country)))) :op2 (c5 / coincidence :polarity - :domain (t / this))))))
(p / propose-01 :arg0 (c / court :mod (s / sea :mod (h / haikou))) :arg1 (g / guarantee-01 :arg0 (c2 / court) :arg1 (t / that) :time (b / before :op1 (d / dawn :arg0 (c3 / court) :arg1 (b2 / boat :mod (l / linkao)) :time (b3 / before :op1 (d2 / dawn :arg1 (b4 / boat)))))))
(m / multi-sentence :snt1 (l / look-02 :arg0 (' / '' :medium (o / online) :mod (t / this)) :arg1 (h / holiday :arg1-of (s / special-02) :mod (t2 / this))) :snt2 (c / cause-01 :arg1 (f / feel-01 :arg0 (y / you) :arg1 (f2 / fresh-04 :arg1 (y2 / you) :degree (v / very)))))
(w / watch-01 :arg0 (p / person :name (n / name :op1 "melissa" :op2 "jimenez") :arg0-of (p2 / peking :arg1 (o / opera))) :arg1 (w2 / watch-01 :arg0 (p3 / person) :arg1 (p4 / person :arg0-of (h / have-rel-role-91 :arg1 (p5 / person) :arg2 (d / daughter)))) :time (b / before :op1 (n2 / now) :quant (m / multiple :op1 (t / temporal-quantity :quant (N / N-A) :unit (y / year)))))
(s / say-01 :arg1 (m / move-01 :arg1 (m2 / medal :mod (g / gold)) :degree (m3 / most)) :arg2 (e / exaggeration :polarity - :degree (m4 / most)))
(p / possible-01 :arg1 (v / visit-01 :arg0 (p2 / person :arg0-of (p3 / participate-01)) :arg1 (a / and :op1 (r / room :mod (e / exhibit-01)) :op2 (r2 / room :mod (c / cactus)) :op3 (r3 / restroom :mod (c2 / cactus)))))
(a / and :op1 (k / know-01 :arg0 (s / she) :arg1 (o / obtain-01 :arg0 (t / team :consist-of (p / person :arg0-of (h / have-org-role-91 :arg1 (t2 / team :mod (c / country :name (n / name :op1 "N-A"))) :arg3 (l / lead-02 :arg0 (t3 / team))))) :arg1 (t4 / team :mod (c2 / country :name (n2 / name :op1 "N-A"))))) :op2 (d / defeat-01 :polarity - :arg1 (p2 / person :arg1-of (i / include-91 :arg2 (p3 / person :arg0-of (h2 / have-org-role-91 :arg1 (g / group) :arg3 (l2 / lead-02 :arg0 (p4 / person)))))) :arg3 (g2 / group) :time (f / first) :time (a2 / after)))
(s / say-01 :arg0 (p / person :name (n / name :op1 "N-A") :arg0-of (h / have-org-role-91 :arg2 (z / zigman))) :arg1 (' / '' :arg1 (p2 / person :arg0-of (h2 / have-03 :arg1 (a / and :op1 (j / joys) :op2 (s2 / sorrows))) :domain (t / this))))
(p / play-02 :arg0 (g / gentleman :mod (k / kuwait)) :arg1 (r / role :mod (m / moue)))
(c / contrast-01 :arg1 (p / possible-01 :arg1 (f / free :arg0 (p2 / person :arg0-of (h / have-rel-role-91 :arg2 (m / mother))) :arg1 (t / temporal-quantity :quant (N / N-A) :unit (h2 / hour)) :arg2 (i / interrogated :arg0 (p3 / person) :arg1 (d / doctor :mod (h3 / head) :mod (h4 / head)))) :mod (o / only :polarity -)) :arg2 (p4 / possible-01 :arg1 (d2 / detect-01 :arg0 (d3 / direction :arg1-of (p5 / pay-01) :mod (d4 / direction)) :arg1 (m2 / medicine) :arg4 (i2 / interrogated)) :mod (a / also)))
(e / express-01 :arg0 (n / newspaper :mod (t / this)) :arg1 (j / join-01 :arg0 (c / code :mod (i / israeli)) :arg1 (l / list-01)) :mod (a / also))
(m / multi-sentence :snt1 (o / obligate-01 :arg1 (i / i) :arg2 (d / do-02 :arg0 (i2 / i) :arg1 (p / person :arg0-of (t / tour-01) :mod (c / country :name (n / name :op1 "N-A"))) :arg1-of (f / frequent-02))) :snt2 (s / see-01 :arg0 (i3 / i) :arg1 (a / arrive-01 :arg1 (t2 / they) :arg4 (c2 / content-01 :arg1 (c3 / country :name (n2 / name :op1 "N-A"))))))
(c / contrast-01 :arg2 (s / satisfy-01 :polarity - :arg0 (c2 / condition :mod (t / this))) :time (p / present))
(i / indicate-01 :arg0 (r / reduce-01 :arg0 (c / company) :arg1 (t / thing :arg2-of (a / amplify-01))) :arg1 (d / drop-01 :arg0 (c2 / company) :arg1 (d2 / difficult :domain (d3 / drop-01 :arg0 (m / market) :arg1 (m2 / market)))))
(a / and :op1 (r / raise-01 :arg0 (s / surveys :mod (k / kepler)) :arg1 (s2 / star :mod (c / cluster))) :op2 (r2 / raise-01 :arg0 (s3 / surveys) :arg1 (s4 / star :mod (c2 / cluster))))
FAILED_TO_PARSE#Number of opening and closing brackets doesn't match.
(c / continue-01 :arg1 (t / take-01 :arg0 (d / drug :mod (t2 / this)) :arg1 (t3 / temporal-quantity :quant (N / N-A) :unit (m / month)) :time (a / after :op1 (a2 / attack-01 :mod (h / heart) :arg0-of (r / reduce-01 :arg1 (r2 / risk-01 :arg2 (o / or :op1 (s / stroke) :op2 (a3 / attack-01 :mod (h2 / heart)))))))))
(a / and :op1 (a2 / apologize-01 :arg0 (c / channel)) :op2 (i / issue-01 :arg0 (c2 / channel) :arg1 (s / state-01)) :time (s2 / soon) :mod (a3 / also))
(t / throw-01 :arg1 (a / and :op1 (j / junk) :op2 (t2 / toys :mod (o / old))) :arg2 (s / side :part-of (f / flat)))
(a / and :op1 (s / search-01 :arg0 (p / police) :arg1 (h / house)) :op2 (f / find-01 :arg0 (p2 / police) :arg1 (c / cannabis :mod (7 / 70dock))) :op3 (f2 / find-01 :arg0 (p3 / police) :arg1 (a2 / and :op1 (s2 / scale) :op2 (d / drug) :op3 (m / monetary-quantity :quant 1,700 :unit (y / yuan :mod (r / renminbi)))) :mod (a3 / also)))
FAILED_TO_PARSE#Two concepts in a row.
(c / contrast-01 :arg2 (a / and :op1 (r / return-01 :arg1 (p / person :mod (c2 / country :name (n / name :op1 "N-A"))) :arg4 (x / xiamen)) :op2 (r2 / return-01 :arg1 (p2 / person) :arg4 (x2 / xiamen)) :time (a2 / after :op1 (r3 / repeated :arg0 (c3 / coach :name (n2 / name :op1 (c4 / coach) :op2 (c5 / coach)) :poss (p3 / person)) :arg1 (w / work-01 :arg0 (p4 / person))))))
(p / produce-01 :arg0 (a / and :op1 (p2 / person :arg0-of (h / have-org-role-91 :arg2 (i / investigate-01 :arg0 (p3 / person)))) :op2 (p4 / person :arg0-of (h2 / have-org-role-91 :arg2 (d / doctor :mod (c / corridor)))) :op3 (p5 / person :arg0-of (h3 / have-org-role-91 :arg1 (d2 / doctor :mod (c2 / corridor)) :arg3 (a2 / apprentice-01 :arg0 (p6 / person))))) :arg1 (p7 / person :arg1-of (b / broadcast-01 :arg0 (d3 / doctor :mod (c3 / corridor)))) :li 2014)
FAILED_TO_PARSE#Number of opening and closing brackets doesn't match.
(e / exhibit-01 :arg1 (e2 / exhibit-01 :mod (t / this)) :arg4 (a / audience :mod (g / globe)) :time (a2 / absent-01 :arg1 (a3 / and :op1 (c / country) :op2 (c2 / country :arg1-of (t2 / target-01)) :location (a4 / along :op1 (r / road))) :mod (e3 / especially)))
(h / have-concession-91 :arg1 (r / relation-03 :arg0 (i / industry :arg1-of (t / target-01)) :arg2 (i2 / industry :mod (c / cannabis)) :arg1-of (d / direct-02)) :arg2 (t2 / target-01 :polarity - :arg0 (i3 / industry :arg1-of (t3 / target-01) :ord (o / ordinal-entity :value 1)) :arg1 (i4 / industry :mod (c2 / coal))))
(h / have-concession-91 :arg1 (f / free-04 :arg1 (h2 / he) :mod (o / only :polarity -)) :arg2 (p / path :mod (s / sole) :mod (a / also) :domain (c / choose-01 :arg0 (y / you) :arg1 (r / retire-01 :arg0 (y2 / you) :destination (c2 / circle :mod (e / entertainment)) :time (t / time :mod (t2 / this)))) :concession (e2 / even-if :op1 (c3 / choose-01 :arg0 (y3 / you) :arg1 (r2 / retire-01 :arg0 (y4 / you) :destination (c4 / circle :mod (e3 / entertainment)) :time (t3 / time :mod (t4 / this)))))))
(a / and :op1 (c / continent :name (n / name :op1 "N-A") :domain (c2 / clashes :location (c3 / conflict-01 :quant 4)) :mod (a2 / also)) :op2 (d / drive-02 :arg0 (p / person :mod (o / other) :arg0-of (d2 / drive-01)) :arg1 (h / home :poss (p2 / person)) :location (h2 / home :poss (p3 / person)) :location (h3 / home :poss (p4 / person))))
(m / multi-sentence :snt1 (f / fear-01 :arg0 (i / i) :time (n / now)) :snt2 (s / scare-01 :arg0 (t / tell-01 :arg0 (p / person :arg0-of (h / have-rel-role-91 :arg1 (i2 / i) :arg2 (c / child))) :arg1 (b / break-01 :arg1 (h2 / heart :part-of (i3 / i))))) :snt3 (s2 / say-01 :arg0 (h3 / he) :arg1 (b2 / break-01 :arg1 (h4 / heart :part-of (i4 / i)))))
(l / list-01 :arg1 (t / tiger :location (n / northeast)) :arg2 (a / and :op1 (s / species :arg1-of (e / endanger-01)) :op2 (s2 / species :arg1-of (e2 / endanger-01)) :op3 (s3 / species :arg1-of (e3 / endanger-01))) :time (n2 / now))
(f / focus-01 :arg0 (r / research-01 :time (c / current)) :arg2 (c2 / change-01 :arg1 (a / area :example (a2 / and :op1 (p / politics :mod (p2 / politics) :mod (g / globe)) :op2 (e / economy) :op3 (c3 / culture) :op4 (c4 / culture) :op5 (c5 / culture)))) :arg1-of (c6 / cause-01 :arg0 (c7 / change-01 :arg0 (c8 / change-01 :mod (t / this)) :arg1 (a3 / and :op1 (g2 / govern-01 :mod (n / nation)) :op2 (g3 / govern-01 :mod (g4 / globe)) :op3 (g5 / govern-01 :mod (g6 / globe))))))
(m / multi-sentence :snt1 (a / and :op1 (p / perform-01 :arg1-of (b / brilliant-01)) :op2 (m2 / music) :op3 (l / light) :op4 (s / stage)) :snt2 (i / impress-01 :arg1 (i2 / i)))
(h / have-concession-91 :arg1 (i / indicate-01 :arg0 (p / person :arg0-of (o / observe-01) :quant (s / some)) :arg1 (h2 / have-03 :arg0 (p2 / person) :arg1 (c / colors :mod (e / ethnic)))) :arg2 (i2 / indicate-01 :arg0 (p3 / person :arg0-of (o2 / observe-01) :mod (s2 / some)) :arg1 (i3 / inspire-01 :arg0 (t / thing :mod (t2 / this)) :arg1 (t3 / thing :name (n / name :op1 "N-A")))))
(a / and :op1 (b / book :mod (c / country :name (n / name :op1 "N-A")) :domain (b2 / book :name (n2 / name :op1 (m / mr.) :op2 (k / krugman) :op3 (k2 / krugman)) :mod (l / last)) :location (b3 / book :ord (o / ordinal-entity :value 1))) :op2 (t / tell-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg2 (z / zizman))) :arg1 (s / story :topic (l2 / life) :arg1-of (s2 / slum-tenants :arg0 (f / food :location (o2 / orchards :quant 97)))) :arg2 (l3 / life)) :medium (b4 / book :ord (o3 / ordinal-entity :value 1)))
(a / and :op1 (c / convert-01 :arg1 (y / yard :name (n / name :op1 (' / '')) :arg1-of (b / black-04)) :arg2 (f / field :name (n2 / name :op1 ('2 / '')) :mod ('3 / ''))) :op2 (c2 / convert-01 :arg1 (s / spires :name (n3 / name :op1 (r / red-brick))) :arg2 (s2 / sports :arg1-of (m / modern-02))))
(s / share-01 :arg0 (p / police :mod (c / country :name (n / name :op1 "N-A"))) :arg1 (p2 / paradise :poss (p3 / police)) :arg2 (t / tour-01 :arg0 (p4 / police) :arg1 (c2 / country :name (n2 / name :op1 "N-A"))) :time (t2 / tour-01 :arg0 (p5 / police) :arg1 (p6 / police) :time (t3 / tour-01 :arg0 (p7 / police) :arg1 (p8 / police))) :time (d / day :arg1-of (s2 / same-01)) :mod (a / also))
(e / expect-01 :arg1 (a / and :op1 (c / continue-01 :arg1 (o / operate-01 :arg1 (a2 / agl))) :op2 (s / say-01 :arg0 (i / i) :arg1 (v / venture :mod (j / joint) :arg1-of (m / mean-01 :arg2 (c2 / continue-01 :arg0 (p / person :mod (c3 / country :name (n / name :op1 "N-A"))) :arg1 (p2 / produce-01 :arg0 (p3 / person) :arg1 (d / demand-01 :arg1 (e2 / electricity)))))))))
(s / state-01 :arg0 (p / person :name (n / name :op1 "N-A")) :arg1 (a / and :op1 (r / reduce-01 :arg0 (t / thing :arg2-of (v / value-01 :arg1 (c / contract-02))) :arg1 (a2 / activity-06 :arg0 (c2 / company))) :op2 (v2 / value-01 :arg1 (m / monetary-quantity :quant 1.87 :unit (y / yuan :mod (d / dollar))) :arg2 (c3 / contract-02))))
(a / and :op1 (w / wrong-02 :arg1 (q / question-01 :arg1 (t / thing :arg1-of (q2 / question-01) :mod (t2 / that))) :arg2 (s / suspect-01 :arg1 (g / game :quant 2012 :mod (o / olympic)))) :op2 (p / prove-01 :arg0 (q3 / question-01) :arg1 (w2 / wrong :domain (s2 / suspect-01 :arg1 (p2 / project :mod (h / heathrow))))))
(e / expect-01 :arg1 (e2 / exceed-01 :arg0 (m / monetary-quantity :arg1-of (e3 / expend-01) :arg1-of (e4 / expend-01 :arg2 (p / project :mod (n / new) :location (n2 / north) :mod (n3 / north)))) :arg1 (m2 / monetary-quantity :quant 1.4 :unit (d / dollar))) :time (e5 / expect-01 :arg1 (e6 / exceed-01 :arg0 (p2 / project) :arg1 (m3 / monetary-quantity :quant 70 :unit (d2 / dollar) :arg1-of (a / amount-01 :arg2 (a2 / approximately :op1 (m4 / monetary-quantity :quant 70 :unit (d3 / dollar))))) :time (y / year :mod (l / last)))) :mod 2016)
(e / express-01 :arg0 (w / we) :arg1 (s / sympathize-01 :arg0 (w2 / we) :arg1 (a / and :op1 (f / family :arg1-of (h / have-org-role-91 :arg0 (w3 / we) :arg2 (m / member))) :op2 (p / person :arg0-of (h2 / have-rel-role-91 :arg1 (w4 / we) :arg2 (f2 / friend)))) :arg1-of (d / deep-02)) :location (s2 / sorrow :mod (t / this)))
(o / occupy-01 :arg1 (p / person :arg0-of (h / have-org-role-91 :arg2 (p2 / president))) :arg1-of (s / succeed-01) :time (o2 / occupy-01 :arg1 (p3 / person :arg0-of (h2 / have-org-role-91 :arg2 (p4 / president)))))
(c / cause-01 :arg0 (s / start-01 :arg0 (i / i) :location (h / here) :time (b / before :op1 (n / now) :quant (t / temporal-quantity :quant (N / N-A) :unit (y / year)))) :arg1 (i2 / i))
(s / serve-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (c / country :name (n / name :op1 "N-A")) :arg2 (m / minister :mod (p2 / prime)))) :arg1 (p3 / person :arg0-of (h2 / have-org-role-91 :arg1 (c2 / country :name (n2 / name :op1 "N-A")) :arg2 (m2 / minister :mod (p4 / prime)))) :time (p5 / prior :op1 (a / and :op1 (r / resumption :poss (p6 / person :arg0-of (h3 / have-org-role-91 :arg2 (p7 / president)))) :op2 (p8 / person :arg0-of (h4 / have-org-role-91 :arg2 (p9 / president))) :quant (t / temporal-quantity :quant (1 / 1/2) :unit (y / year)))))
(s / say-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (m / mr.) :arg3 (m2 / mortimer))) :arg1 (a / and :op1 (e / effective-04 :arg0 (a2 / act-02 :arg0 (g / government-organization :arg0-of (g2 / govern-01 :arg1 (c / country :name (n / name :op1 "N-A"))))) :arg1 (p2 / pressure-01 :arg0 (a3 / action) :arg1 (a4 / and :op1 (t / team) :op2 (s2 / service) :mod (f / full))) :degree (l / little)) :op2 (c2 / contrary-01 :arg1 (a5 / action) :arg2 (f2 / fear-01)) :op3 (c3 / concern-01 :arg0 (a6 / action) :arg1 (a7 / and :op1 (p3 / person :arg0-of (h2 / have-rel-role-91 :arg2 (p4 / patient))) :op2 (f3 / family :arg1-of (h3 / have-org-role-91 :arg0 (p5 / person) :arg2 (m3 / member))) :op3 (f4 / family :arg1-of (h4 / have-org-role-91 :arg0 (p6 / person) :arg2 (m4 / member)))))))
(b / believe-01 :arg0 (p / person :arg0-of (u / use-01 :arg1 (i / internet)) :mod (o / other)) :arg1 (s / select-01 :arg1 (p2 / person :arg0-of (u2 / use-01 :arg1 (i2 / internet)) :mod (o2 / other)) :mod (a / actual) :arg1-of (s2 / say-01 :arg0 (h / he) :medium (o3 / online))))
(p / person :arg0-of (h / have-org-role-91 :arg3 (j / judge-01)) :arg0-of (h2 / have-org-role-91 :arg3 (j2 / judge-01)) :arg0-of (h3 / have-org-role-91 :arg3 (j3 / judge-01)) :arg0-of (h4 / have-org-role-91 :arg3 (j4 / judge-01)) :arg0-of (h5 / have-org-role-91 :arg3 (j5 / judge-01)) :arg0-of (h6 / have-org-role-91 :arg3 (j6 / judge-01)) :arg0-of (h7 / have-org-role-91 :arg3 (j7 / judge-01)) :arg0-of (h8 / have-org-role-91 :arg3 (j8 / judge-01)) :arg0-of (h9 / have-org-role-91 :arg3 (j9 / judge-01)) :arg0-of (h10 / have-org-role-91 :arg3 (j10 / judge-01)) :arg0-of (h11 / have-org-role-91 :arg3 (j11 / judge-01)) :arg0-of (h12 / have-org-role-91 :arg3 (j12 / judge-01)) :arg0-of (h13 / have-org-role-91 :arg3 (j13 / judge-01)) :arg0-of (h14 / have-org-role-91 :arg3 (j14 / judge-01)) :arg0-of (h15 / have-org-role-91 :arg3 (j15 / judge-01)) :arg0-of (h16 / have-org-role-91 :arg3 (j16 / judge-01)) :arg0-of (h17 / have-org-role-91 :arg3 (j17 / judge-01)) :arg0-of (h18 / have-org-role-91 :arg3 (j18 / judge-01)))
(a / and :op1 (f / fund-01 :arg1 (m / monetary-quantity :quant 5000 :unit (y / yuan) :mod (t / this))) :op2 (s / solve-01 :arg1 (n / need-01 :arg0 (i / i))))
(s / say-01 :arg0 (p / person :arg0-of (h / have-rel-role-91 :arg1 (p2 / person :arg0-of (h2 / have-rel-role-91 :arg1 (p3 / person) :arg2 (p4 / parent))) :arg2 (p5 / parent))) :arg1 (a / and :op1 (h3 / hard-02 :arg1 (s2 / say-01 :arg0 (p6 / person :arg0-of (h4 / have-rel-role-91 :arg1 (p7 / person) :arg2 (p8 / parent))) :arg1 (h5 / hard-02 :arg1 (p9 / person)))) :op2 (c / content-01 :arg1 (p10 / person) :arg2 (c2 / content-01 :arg1 (p11 / person))) :arg1-of (r / rare-02)))
(a / and :op1 (e / enter-01 :arg0 (p / police :mod (c / central) :part-of (s / state :ord (o / ordinal-entity :value 1))) :arg1 (p2 / prison :mod (r / region) :mod (l / leyte))) :op2 (k / kill-01 :arg0 (p3 / police) :arg1 (p4 / person :arg0-of (a2 / attempt-01 :arg1 (a3 / attempt-01 :arg0 (p5 / person) :arg1 (h / have-org-role-91 :arg0 (p6 / person) :arg1 (p7 / police)))) :mod (' / ''))) :time (y / yesterday))
(m / move-01 :arg0 (d / documentary :name (n / name :op1 (p / paula)) :arg1-of (f / fame-01) :arg0-of (h / have-org-role-91 :arg2 (d2 / director))) :arg1 (s / story :topic (g / greecia)) :arg2 (a / and :op1 (p2 / person :arg0-of (h2 / have-org-role-91 :arg2 (d3 / director :mod (d4 / documentary))) :arg1-of (f2 / fame-01)) :op2 (m2 / merge-01 :arg1 (c / channel :mod (n2 / news)))) :degree (m3 / more :degree (f3 / far)))
(f / fall :domain (f2 / fall-01 :arg1 (c / capital :mod (f3 / foreign)) :arg3 (d / develop-02 :arg1 (p / product :arg1-of (g / gross-03) :mod (d2 / domestic) :poss (c2 / country :name (n / name :op1 "N-A"))))))
(s / step-01 :arg2 (s2 / say-01 :arg1 (t / thing :arg2-of (v / value-01 :arg1 (t2 / thing :arg1-of (p / precede-01 :arg2 (b / brain))))) :arg1-of (c / complete-02)) :li (t3 / ten))
(a / and :op1 (a2 / affect-01 :arg0 (l / lens :mod (t / this)) :arg1 (t2 / thing :arg2-of (c / characteristic-02 :arg1 (p / passivation)))) :op2 (p2 / produce-01 :arg0 (t3 / thing) :arg1 (s / self :quant (m / more-than :op1 30000000) :arg1-of (p3 / pass-03))))
(a / and :op1 (i / issue-01 :polarity - :arg0 (c / company) :arg1 (d / data) :arg2 (d2 / diversity :poss (p / person :arg1-of (e / employ-01)))) :op2 (s / say-01 :arg0 (c2 / company) :arg1 (c3 / company :arg1-of (p2 / private-03) :domain (d3 / data))))
(k / know-01 :arg0 (s / she) :arg1 (a / and :op1 (a2 / achieve-01 :arg0 (s2 / state :arg0-of (c / check-01)) :arg1 (t / thing :quant 4 :arg1-of (w / win-01 :arg0 (s3 / state) :arg2 (g / game :mod (o / olympic))))) :op2 (c2 / compete-01 :arg0 (s4 / state) :arg2 (t2 / team :ord (o2 / ordinal-entity :value 1) :location (t3 / thursday)))))
(b / be-located-at-91 :arg1 (t / team :mod (t2 / that)) :arg2 (t3 / team :mod (t4 / that)))
(r / replace-01 :arg1 (f / fruit :arg1-of (f2 / fresh-04)) :arg2 (f3 / fruit) :arg1-of (c / cheap-02 :degree (m / more)))
(h / have-part-91 :arg1 (r / radar :mod (t / this)) :arg2 (m / missile :mod (b / ballistics)) :time (e / early) :purpose (m2 / monitor-01 :arg0 (s / system) :arg1 (m3 / missile :mod (c / country :name (n / name :op1 "N-A")))))
(b / become-01 :arg1 (f / features) :arg2 (p / problem :arg1-of (m / major-02) :topic (c / campaign-01 :arg0 (p2 / president))))
(s / support-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg2 (p2 / president))) :arg1 (t / thing :arg1-of (p3 / propose-01) :mod (t2 / this)) :mod (a / also))
(g / good :degree (m / most) :domain (t / team) :time (a / always))
(i / issue-02 :arg0 (p / permit-01 :arg1 (p2 / permit-01 :arg1 (d / day :mod (w / work-01) :quant (u / up-to :op1 3)))) :arg1-of (c / clear-06))
(m / multi-sentence :snt1 (a / and :op2 (a2 / account-01 :arg0 (c / consume-01 :arg1 (e / electricity)) :arg1 (r / rate-entity-91 :arg1 (a3 / about :op1 (m2 / monetary-quantity :quant (N / N-A) :unit (p / pound))) :arg2 (t / thing :arg0-of (r2 / refine-01 :arg1 (e2 / electricity)))))) :snt2 (p2 / possible-01 :arg1 (r3 / react-01 :arg0 (c2 / chain))))
(a / and :op1 (e / exceed-01 :arg0 (l / lack-01 :arg1 (f / fund :purpose (s / service :mod (c / community) :arg1-of (l2 / legal-02)))) :arg1 (l3 / limit-01) :arg1-of (l4 / long-03)) :op2 (f2 / face-01 :arg0 (l5 / lack-01) :arg1 (c2 / cut-02 :arg1 (f3 / fund) :degree (f4 / further)) :time (n / now)))
(r / respond-01 :polarity - :arg0 (s / spokesmen :mod (t / trumps)) :arg1 (n / news :mod (t2 / this)))
(s / start-01 :arg0 (t / tribune :name (n / name :op1 (g / geneva))) :arg1 (i / investigate-01 :arg1 (t2 / tribune :mod (e / event :mod (e2 / event :mod (c / conventional)) :mod (e3 / event :mod (c2 / conventional))))))
(c / contrast-01 :arg1 (p / possible-01 :arg1 (b / be-located-at-91 :arg1 (a / area :arg1-of (d / dry-08) :poss (v / venus)) :arg2 (e / earth))) :arg2 (a2 / and :op1 (e2 / enough :quant (e3 / enough) :domain (c2 / change-01 :arg1 (w / water))) :op2 (c3 / change-01 :arg0 (a3 / area) :arg1 (l / life)) :op3 (p2 / prevent-01 :arg0 (a4 / area) :arg1 (l2 / life) :manner (f / fast))))
(e / expose-01 :arg1 (a / and :op1 (t / temperature :arg1-of (h / high-02)) :op2 (u / ultraviolets :mod (u2 / ultraviolet))) :arg2 (a2 / and :op1 (t2 / temperature :arg1-of (h2 / high-02)) :op2 (u3 / ultraviolets :time (a3 / after :op1 (n / now) :quant (m / multiple :op1 (t3 / temporal-quantity :quant (N / N-A) :unit (y / year)))))) :concession (p / possible-01 :arg1 (e2 / exist-01 :arg1 (p2 / person :mod (c / country :name (n2 / name :op1 "N-A"))) :arg1-of (e3 / exist-01))))
(b / boom :arg0 (t / they) :arg1 (p / person :arg0-of (t2 / tour-01) :mod (m / mediterranean)) :time (e / end-01 :arg1 (s / season)))
(a / appoint-01 :arg1 (p / person :name (n / name :op1 "anton" :op2 "vaino") :arg0-of (h / have-org-role-91 :arg2 (d / deputy)) :arg0-of (h2 / have-org-role-91 :arg2 (d2 / deputy)) :arg0-of (h3 / have-org-role-91 :arg2 (d3 / deputy)) :arg0-of (h4 / have-org-role-91 :arg2 (d4 / deputy))) :arg2 (s / successor :poss (p2 / person)))
(a / and :op1 (c / close-10 :arg1 (f / fan :mod (b / bridge) :arg1-of (n / near-02 :arg2 (n2 / near-02 :arg2 (b2 / bridgeheads :quant 3 :part-of (b3 / bridge))))) :arg2 (c2 / complete-01 :arg1 (f2 / fan)) :time (n3 / now)) :op2 (l / lead-01 :arg0 (b4 / bridge) :arg1 (p / project) :degree (k / kind-of)))
(m / multi-sentence :snt1 (a / age-01 :arg1 (p / person :mod (o / old)) :arg2 (t / temporal-quantity :quant (N / N-A) :unit (y / year)) :time (b / before :op1 (n / now) :duration (t2 / temporal-quantity :quant (N2 / N-A) :unit (y2 / year)))) :snt2 (a2 / and :op1 (s / spread-01 :arg1 (n2 / news) :arg2 (v / virus :location (t3 / twitter))) :op2 (b2 / be-02 :arg1 (n3 / news))))
(d / declare-02 :arg0 (p / person :name (n / name :op1 "N-A") :arg0-of (h / have-org-role-91 :arg1 (r / research-institute :name (n2 / name :op1 "N-A")))) :arg1 (s / say-01 :arg0 (p2 / person) :arg1 (d2 / duty :mod (r2 / religion) :domain (d3 / duty :mod (r3 / religion)) :purpose (o / oppose-01 :arg0 (p3 / person) :arg1 (p4 / person)))) :arg1-of (r4 / report-01) :time (c / campaign-01 :arg0 (p5 / person)))
(a / and :op1 (b / begin-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg2 (z / zhao))) :arg1 (t / try-02 :arg1 (m / material :mod (a2 / apply-01)) :arg2 (t2 / try-02 :arg1 (a3 / and :op1 (p2 / person :ord (o / ordinal-entity :value 1) :arg0-of (a4 / apply-01)) :op2 (p3 / person :arg0-of (h2 / have-org-role-91 :arg2 (t3 / trade-01))) :ord (o2 / ordinal-entity :value 1))) :mod (p4 / preliminary) :purpose (t4 / try-02 :arg1 (a5 / apply-02 :arg1 (a6 / apply-01 :arg1 (a7 / apply-01))) :ord (o3 / ordinal-entity :value 1)))) :op2 (i / impact-01 :arg0 (e / environment :mod (c / center :part-of (s / settlement))) :arg1 (p5 / project :topic (c2 / construct-01)) :time (a8 / after :op1 (i2 / impact-01 :arg0 (a9 / and :op1 (d / date-entity :year (N / N-A)) :op2 (d2 / date-entity :year (N2 / N-A)))))))
(b / become-01 :arg1 (a / and :op1 (b2 / benefit-01 :arg0 (r / reduce-01 :arg1 (t / thing :arg1-of (b3 / behave-01 :arg0 (g / government-organization :arg0-of (g2 / govern-01)))))) :op2 (r2 / reduce-01 :arg1 (p / pollutant) :arg2 (b4 / behave-01 :arg0 (g3 / government-organization :arg0-of (g4 / govern-01)) :arg1-of (h / hanging-07)))) :arg1 (b5 / behave-01 :arg0 (e / enterprise) :arg1 (p2 / protect-01 :arg0 (e2 / enterprise) :arg1 (a2 / and :op1 (e3 / environment) :op2 (n / nature) :op3 (h2 / health :mod (p3 / public))))) :arg2 (b6 / behave-01 :arg1 (m / market :mod (c / conscious))))
(o / organize-01 :arg0 (p / person :mod (c / country :name (n / name :op1 "N-A"))) :arg1 (t / team :quant 2 :arg0-of (r / research-01)) :purpose (a / and :op1 (p2 / participate-01 :arg0 (t2 / team) :arg1 (r2 / research-01 :arg1 (c2 / city))) :op2 (p3 / prepare-02 :arg0 (t3 / team) :arg2 (t4 / topic)) :op3 (p4 / prepare-01 :arg0 (t5 / team) :arg1 (t6 / topic))) :location (m / mid-august))
(p / provide-01 :polarity - :arg0 (a / authority :mod (p2 / prison)) :arg1 (i / instruct-01 :arg0-of (d / detail-01) :arg2-of (i2 / include-01 :arg1 (t / thing :manner-of (g / give-01 :arg1 (h / hand :arg1-of (i3 / imprison-01)) :arg2 (p3 / person :arg1-of (i4 / imprison-01)))))))
(a / and :op1 (c / cause-01 :arg0 (a2 / adjust-01 :arg1 (e / economy) :arg1-of (d / deep-02) :mod (s / still)) :arg1 (c2 / complicate-01 :arg1 (s2 / situation) :degree (s3 / so))) :op2 (c3 / complicate-01 :arg1 (s4 / situation) :degree (s5 / so) :arg0-of (c4 / cause-01 :arg1 (e2 / expect-01 :polarity - :arg1 (p / pressure-01 :arg0 (r / recovery :arg1 (e3 / economy :poss (w / world))) :mod (l / large :degree (r2 / relative) :mod (s6 / still)))))))
(i / involve-01 :arg1 (a / and :op1 (t / technology :name (n / name :op1 (p / printing))) :op2 (t2 / technology :name (n2 / name :op1 (c / chuck)))) :arg2 (d / design-01 :arg1 (b / beaks)) :mod (a2 / also) :mod (3 / 3d))
(i / include-91 :arg1 (t / thing :arg0-of (c / cause-01 :arg1 (p / pollution :mod (e / environment))) :quant (m / multiple :op1 1)) :arg2 (p2 / produce-01 :arg1 (p3 / product :mod (o / oil)) :arg1-of (h / high-02)))
(a / and :op1 (p / publish-01 :arg1 (p2 / paper :mod (t / this)) :purpose (e / ensure-01 :arg1 (f / fair :domain (a2 / action :mod (p3 / person :arg0-of (s / study-01)))))) :op2 (a3 / and :op1 (o / open-01 :arg1 (p4 / paper)) :op2 (o2 / open-01 :arg1 (p5 / paper)) :op3 (a4 / accept-01 :arg1 (s2 / supervise-01 :arg1 (p6 / person :arg0-of (r / read-01))) :arg1-of (b / base-02 :arg2 (i / information :arg1-of (p7 / public-02)))) :time (t2 / today)))
(a / and :op2 (i / increase-01 :arg0 (p / population :mod (n / new)) :arg1 (p2 / population :mod (n2 / new))) :time (p3 / period :mod (s / same)))
(m / multi-sentence :snt1 (i / invest-01 :location (l / location :name (n / name :op1 "288")) :arg1-of (c / compare-01 :arg2 (p / product-of :op1 2003 :op2 (t / temporal-quantity :quant (N / N-A) :unit (y / year))))) :snt2 (' / '' :mode (e / expressive)))
(c / cause-01 :arg0 (a / and :op1 (a2 / activity-06 :arg0 (p / person :mod (b / both))) :op2 (b2 / become-01 :arg1 (p2 / person) :arg2 (f / familiarize-01 :arg1 (p3 / person)) :time (s / soon))) :arg1 (m / meet-03 :location (g / group :mod (l / large))))
(p / person :arg0-of (s / study-01) :location (a / and :op1 (u / university :location (a2 / and :op1 (s2 / school :mod (c / central) :mod (c2 / country :name (n / name :op1 "N-A"))) :op2 (s3 / school :location (s4 / south) :mod (c3 / country :name (n2 / name :op1 "N-A")))))))
(m / multi-sentence :snt1 (m2 / miss-01 :arg1 (b / boy :mod (l / little))) :snt2 (t / throw-01 :arg0 (g / girl :mod (l2 / little)) :arg1 (w / water) :arg2 (w2 / water) :mod (o / only) :purpose (r / reveal-01 :arg0 (g2 / girl) :arg1 (a / and :op1 (h / head :mod (s / small) :poss (g3 / girl)) :op2 (s2 / sinking :arg0 (g4 / girl) :arg1 (h2 / head :part-of (s3 / she) :mod (s4 / small)) :time (t2 / time :direction (d / down)))) :op3 (j / jumped :arg1 (g5 / girl) :arg2 (r2 / river :arg1-of (l3 / learn-01 :arg0 (g6 / girl) :arg2 (s5 / swim-01)))))))
(a / attempt-01 :polarity - :arg0 (d / defendant) :arg1 (a2 / and :op1 (c / cause-01 :arg0 (d2 / defendant) :arg1 (c2 / consequence)) :op2 (r / recommend-01 :arg1 (a3 / adopt-01 :arg0 (d3 / defendant) :arg1 (p / punish-01 :arg1-of (l / light-06))))) :time (c3 / case-03 :arg1 (p2 / person :arg1-of (a4 / arrest-01) :arg1-of (a5 / arrest-01))))
(s / say-01 :arg0 (a / attorney :name (n / name :op1 (f / forestry)) :poss (c / country)) :arg1 (t / task :mod (u / urgent :degree (m / most)) :domain (t2 / task :mod (u2 / urgent :degree (m2 / most)) :beneficiary (a2 / and :op1 (p / person :mod (c2 / country :name (n2 / name :op1 "N-A")) :mod (c3 / country :name (n3 / name :op1 "N-A"))) :op2 (r / research-institute :name (n4 / name :op1 "N-A") :mod (l / leopards)) :op3 (p2 / protect-01 :arg1 (l2 / leopard)) :op4 (p3 / protect-01 :arg0 (c4 / country) :arg1 (p4 / protect-01)) :op5 (p5 / protect-01 :arg0 (a3 / and) :arg1 (p6 / protect-01)) :mod (a4 / also))) :beneficiary (a5 / and :op1 (t3 / tiger :mod (c5 / country :name (n5 / name :op1 "N-A"))) :op2 (a6 / and :op1 (a7 / attorney :name (n6 / name :op1 (a8 / abc))) :op2 (p7 / population :mod (l3 / leopard))) :mod (a9 / also))))
(f / file-01 :arg0 (p / person :arg0-of (h / have-rel-role-91 :arg1 (v / victim) :arg2 (r / relative))) :arg1 (a / apply-01 :arg2 (c / court) :mod (f2 / full)) :arg2 (c2 / court) :time (e / early :op1 (h2 / hour :mod (e2 / early) :part-of (j / july :quant 7))) :arg1-of (c3 / cause-01 :arg0 (e3 / expiration :arg1 (p2 / period :mod (d / detain-01) :poss (a2 / authority :mod (s / sea))))))
(a / and :op1 (i / inspire-01 :arg0 (c / cancer :topic (c2 / cancer)) :arg1 (a2 / and :op1 (g / graf) :op2 (h / heather))) :op2 (w / win-01 :arg0 (a3 / and) :arg1 (m / medal :mod (g2 / gold)) :location (r / rowing :mod (r2 / rowing))))
(h / headquarter-01 :arg0 (m / military) :arg1 (o / operation :mod (m2 / military) :location (a / and :op1 (w / world-region :name (n / name :op1 "Middle" :op2 "East")) :op2 (c / company :name (n2 / name :op1 "N-A") :mod (c2 / central)))) :mod (m3 / military))
(i / indicate-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg2 (o / official))) :arg1 (c / conclude-01 :arg0 (t / team :poss (p2 / person :arg0-of (h2 / have-org-role-91 :arg2 (p3 / president :mod (v / vice))))) :arg1 (r / reduce-01 :polarity - :arg0 (s / strike-01 :arg1 (r2 / refinery :mod (s2 / state :mod (s3 / state))) :mod (a / air)) :arg1 (i2 / income :poss (o2 / organization :mod (t2 / terrorism))) :arg1-of (s4 / significant-02)) :time (s5 / since :op1 (b / build-01 :arg0 (o3 / organization :mod (t3 / terrorism)) :arg1 (r3 / refinery :mod (o4 / oil) :arg0-of (c2 / continue-01 :arg1 (s6 / sell-01 :arg1 (o5 / oil) :location (m / market :arg1-of (b2 / black-07))) :arg1-of (c3 / contrary-01 :arg2 (t4 / thing :arg1-of (s7 / state-01) :arg1-of (d / declare-02)))))))) :time (y / year :mod (l / last)))
(t / trust-01 :arg1 (a / and :op1 (s / she) :op2 (p / person :arg0-of (h / have-rel-role-91 :arg1 (s2 / she) :arg2 (t2 / teammates)))) :li 2012)
(a / and :op1 (q / quick-02 :arg1 (s / service :mod (n / new)) :arg1-of (q2 / quick-02)) :op2 (a2 / and :op1 (r / respect-01 :arg1 (c / citizen :arg0-of (p / protect-01 :arg1 (p2 / privacy :poss (c2 / citizen))))) :op2 (p3 / protect-01 :arg1 (c3 / citizen :arg1-of (m / mean-01 :arg2 (a3 / and :op1 (d / day :ord (o / ordinal-entity :value 3)) :op2 (s2 / service :mod (a4 / all-weather)) :op3 (s3 / service :mod (a5 / all-time))))))))
(a / attend-01 :arg0 (a2 / and :op1 (p / person :arg0-of (h / have-org-role-91 :arg1 (c / country :name (n / name :op1 "United" :op2 "States")) :arg2 (s / secretary :mod (d / defense)))) :op2 (p2 / person :arg0-of (h2 / have-org-role-91 :arg1 (c2 / country :name (n2 / name :op1 "Japan")) :arg2 (s2 / secretary :mod (d2 / defense)))) :op3 (p3 / person :arg0-of (h3 / have-org-role-91 :arg1 (c3 / country) :arg2 (m / minister :mod (f / foreign)))) :op4 (p4 / person :arg0-of (h4 / have-org-role-91 :arg1 (c4 / country) :arg2 (m2 / minister :mod (d3 / defense)))) :op5 (p5 / person :arg0-of (h5 / have-org-role-91 :arg1 (c5 / country) :arg2 (m3 / minister :mod (d4 / defense)))) :op6 (p6 / person :arg0-of (h6 / have-org-role-91 :arg1 (c6 / country) :arg2 (m4 / minister :mod (d5 / defense)))) :op6 (p7 / person :arg0-of (h7 / have-org-role-91 :arg1 (c7 / country) :arg2 (m5 / minister :mod (d6 / defense)))) :op6 (p8 / person :arg0-of (h8 / have-org-role-91 :arg1 (c8 / country) :arg2 (m6 / minister :mod (d7 / defense)))) :op7 (p9 / person :arg0-of (h9 / have-org-role-91 :arg1 (c9 / country) :arg2 (m7 / minister :mod (d8 / defense))))) :arg1 (c10 / conference :mod (p10 / press)))
(s / say-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg3 (j / judge-01)) :location (d / district :poss (c / country :name (n / name :op1 "N-A")))) :arg1 (o / obligate-01 :polarity - :arg1 (p2 / person :arg0-of (h2 / have-org-role-91 :arg1 (c2 / country :name (n2 / name :op1 "N-A")) :arg3 (j2 / judge-01))) :arg2 (b / bear-01 :arg0 (p3 / person) :arg1 (m / monetary-quantity :arg2-of (c3 / cost-01 :arg1 (d2 / defend-01))))) :medium (s2 / sue-02 :arg0 (p4 / person)))
(t / transfer-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (p2 / paulo :mod (s / são)) :arg2 (g / governor))) :arg1 (p3 / plan-01 :arg1 (a / and :op1 (s2 / school :quant 100 :arg1-of (p4 / public-02)) :op2 (p5 / person :quant 300,000 :arg0-of (s3 / study-01)))) :purpose (s4 / save-01 :arg0 (p6 / person) :arg1 (m / money)) :purpose (s5 / save-01 :arg0 (p7 / person) :arg1 (m2 / money)))
(i / impact-01 :arg0 (i2 / industry :mod (t / taxi :mod (t2 / tradition)) :arg1-of (l / local-02)) :arg1 (i3 / industry :mod (t3 / taxi :mod (t4 / tradition)) :arg1-of (l2 / local-02)) :time (e / enter-01 :arg0 (u / uber) :arg1 (m / market :arg1-of (s / standard-02)) :duration (u2 / up-to :op1 (t5 / temporal-quantity :quant (N / N-A) :unit (y / year)))))
(a / and :op1 (f / focus-01 :arg0 (p / person :arg0-of (t / tour-01) :mod (i / international)) :arg2 (a2 / attract-01 :arg0 (p2 / person) :arg1 (p3 / person :arg0-of (t2 / tour-01) :mod (i2 / international)))) :op2 (w / want-01 :arg0 (w2 / we) :arg1 (i3 / improve-01 :arg0 (w3 / we) :arg1 (c / capacity :poss (w4 / we)) :purpose (m / match-01 :arg0 (w5 / we) :arg1 (s / status :poss (i4 / island :mod (i5 / international) :mod (t3 / tourism)))))))
(r / receive-01 :arg0 (s / surrey) :arg1 (a / and :op1 (p / point :quant 17) :op2 (r2 / rebounds :quant 17) :op3 (a2 / assists :quant 17)) :prep-in (g / game :quant (b / between :op1 2 :op2 2)))
(a / and :op1 (s / supply-01 :arg0 (c / company :arg0-of (s2 / supply-01 :arg1 (p / power)) :mod (e / electric) :poss (c2 / company)) :arg1 (f / factory) :arg2 (f2 / factory)) :op2 (i / invalidated :arg1 (c3 / contract :name (n / name :op1 (p2 / portland) :op2 (p3 / portland) :op3 (p4 / portland) :op4 (p5 / portland) :op5 (p6 / portland) :op6 (p7 / portland) :op7 (p8 / portland)) :poss (c4 / company :name (n2 / name :op1 "N-A"))) :arg2 (f3 / factory) :time (c5 / current)))
(s / say-01 :arg0 (p / person :arg0-of (h / head-01 :arg1 (c / center :mod (c2 / community :mod (c3 / community :mod (q / queensland)) :arg1-of (l / legal-02))))) :arg1 (r / reject-01 :arg1 (p2 / person :arg0-of (h2 / head-01 :arg1 (c4 / center :mod (c5 / community) :arg1-of (l2 / legal-02)))) :frequency (r2 / rate-entity-91 :arg3 (t / temporal-quantity :quant (N / N-A) :unit (y / year))) :arg1-of (c6 / conform-01 :arg2 (a / association :mod (c7 / community) :mod (l3 / late :degree (m / most)) :poss (c8 / community)))))
(f / find-02 :arg1 (d / die-01 :arg1 (p / person :quant 28 :arg0-of (m / move-01 :arg1 (f2 / francisco :mod (s / san)) :mod (j / just)))) :arg1-of (c / cause-01 :arg0 (f3 / founded :arg1 (m2 / mall :arg1-of (l / local-02)) :time (w / week :mod (t / this)))))
(a / and :op1 (g / good :domain (r / resumption :poss (d / dialogue-01 :arg0 (p / person :arg0-of (l / lead-02 :arg1 (c / country :quant 2))))) :mod (c2 / certain)) :op2 (b / bring-up-02 :arg0 (p2 / person :arg0-of (l2 / lead-02 :arg1 (o / organization :quant 2))) :arg1 (a2 / and :op1 (t / temporal-quantity :quant (N / N-A) :unit (m / month)) :op2 (d2 / disaster :arg1-of (m2 / major-02)))) :mod (c3 / certain) :mod (c4 / certain) :domain (r2 / resumption :poss (d3 / dialogue-01)))
(c / contrast-01 :arg1 (g / good-04 :arg1 (c2 / character :poss (h / he)) :arg2 (h2 / horse :mod (c3 / country :name (n / name :op1 "N-A")))) :arg2 (j / jockey :mod (i / incredible) :domain (c4 / character :poss (h3 / he))))
(r / represent-01 :arg0 (f / field :mod (c / country :name (n / name :op1 "N-A"))) :arg1 (f2 / field :mod (c2 / country :name (n2 / name :op1 "N-A"))) :arg1-of (t / typical-02) :time (b / before :op1 (n3 / now) :duration (m / multiple :op1 (t2 / temporal-quantity :quant (N / N-A) :unit (d / decade)))))
(c / contrast-01 :arg1 (g / game :mod (l / last) :mod (s / still)) :arg2 (c2 / compete-02 :polarity - :arg0 (a / and :op1 (b / biles) :op2 (d / duck :mod (o / other))) :arg1-of (i / instead-of-91 :arg2 (c3 / contest :mod (b2 / between :op1 (b3 / biles) :op2 (t / thing :mod (g2 / great)))))))
(s / say-01 :arg0 (i / i) :arg1 (a / apologize-01 :arg0 (t / they) :arg2 (p / person :quant (m / more-than :op1 90) :mod (o / other) :arg0-of (p2 / protest-01 :arg1 (i2 / interpretation :poss (p3 / person :arg0-of (p4 / protest-01 :arg1 (i3 / interpretation :mod (b / byron)))))))) :arg2 (p5 / person :name (n / name :op1 "N-A")) :time (t2 / then))
(a / and :op1 (c / continue-01 :arg1 (p / promote-02 :arg1 (r / reform-01 :arg1 (s / share-01 :arg1 (c2 / community))))) :op2 (e / encourage-01 :arg0 (s2 / step) :arg1 (p2 / person :arg0-of (f / farm-01)) :arg2 (a2 / and :op1 (d / develop-02 :arg0 (p3 / person) :arg1 (d2 / develop-02 :mod (j / joint))) :op2 (e2 / establish-01 :arg0 (p4 / person) :arg1 (m / mechanism :mod (o / operation :mod (o2 / operation :mod (d3 / democracy))) :location (l / level :location (v / village)))))))
(a / and :op1 (g / generate-01 :arg0 (i / industry :mod (t / tourism)) :arg1 (r / revenue)) :op2 (r2 / reach-01 :arg0 (r3 / revenue) :arg1 (p / percentage-entity :value (N / N-A) :quant-of (p2 / product :arg1-of (g2 / gross-03) :mod (d / domestic)))) :op3 (r4 / reach-01 :arg0 (r5 / revenue) :arg1 (p3 / percentage-entity :value (N2 / N-A)) :location 2015))
FAILED_TO_PARSE#Number of opening and closing brackets doesn't match.
(c / contrast-01)
(a / and :op1 (a2 / accumulate-01 :arg0 (t / team) :arg1 (e / experience-01 :arg1 (r / research-01 :arg1-of (c / continue-01)) :mod (r2 / rich)) :time (f / first)) :op2 (f2 / follow-01 :arg1 (t2 / team) :arg2 (t3 / train-01 :mod (s / science) :arg0-of (n / need-01 :arg1 (c2 / consult-01 :arg1 (t4 / team) :arg2 (t5 / term :arg1-of (l / long-03)))))))
(s / show-01 :arg0 (p / person :arg0-of (s2 / surgery-01 :arg2 (s3 / surgery-01))) :arg1 (p2 / print-01 :arg0 (p3 / person) :arg1 (b / bird :mod (p4 / plastic)) :arg1-of (p5 / print-01)) :location (c / conference :mod (p6 / press)) :location (c2 / conference :mod (p7 / press)) :location (c3 / conference :mod (p8 / press)))
(h / have-concession-91 :arg1 (a / and :op1 (m / move-01 :arg1 (i / it) :arg2 (b / birdhouses :mod (l / luxury))) :op2 (m2 / meet-03 :arg0 (i2 / it) :arg1 (p / person :arg0-of (c / care-01 :arg1 (i3 / it)) :arg0-of (c2 / care-01 :arg1 (i4 / it))))) :arg2 (p2 / proclaims :arg1 (d / day :mod (t / this)) :mod (o / only :polarity -)))
(a / and :op1 (k / kill-01 :arg0 (p / police) :arg1 (p2 / person :arg1-of (s / suspect-01)) :time (b / before :op1 (c / come-01 :arg1 (p3 / person) :arg4 (p4 / power) :time (y / year :mod (l / last)))) :ord (o / ordinal-entity :value 1)) :op2 (c2 / come-01 :arg1 (p5 / person :name (n / name :op1 "justin" :op2 "trudeau")) :arg4 (p6 / power) :time (y2 / year :mod (l2 / last))))
(t / take-10 :arg0 (o / operation :mod (m / market :arg1-of (p / pure-02))) :arg1 (w / way :manner-of (o2 / operation :mod (m2 / market :arg1-of (p2 / pure-02)))) :mod (e / edmond :mod (o3 / old)) :location (r / relative-position :op1 (n / north) :direction (n2 / north)))
(s / say-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (a / agency :mod (n / news) :mod (' / '') :poss (c / country :name (n2 / name :op1 "N-A"))) :arg3 (t / temporal-quantity :quant (N / N-A) :unit (m / month)))) :arg1 (r / rate-entity-91 :arg1 (r2 / rate :mod (i / inflation)) :arg2 (t2 / temporal-quantity :quant (N2 / N-A) :unit (y / year))))
(a / and :op1 (o / over :domain (r / rehearsal :arg1 (c / ceremony :mod (o2 / open-02 :arg1 (o3 / open-01))))) :op2 (h / hold-04 :arg1 (p / perform-02 :mod (f / formal)) :time (m / morning :mod (t / tomorrow))) :time (p2 / present))
(w / win-01 :arg0 (t / team :mod (f / fiji)) :arg1 (m / medal :mod (g / gold)) :arg2 (p / perform-02 :arg0 (t2 / team) :arg1 (a / and :op1 (p2 / perform-02 :arg0 (t3 / team) :arg1 (a2 / and :op1 (c / control-01 :arg0 (t4 / team) :arg1 (a3 / and :op1 (c2 / control-01 :arg0 (t5 / team) :arg1 (a4 / and :op1 (c3 / control-01 :arg0 (t6 / team)) :op2 (b / break-01 :arg1 (t7 / team)) :op3 (c4 / cooperate-01 :arg0 (t8 / team)) :op4 (r / run-01 :arg0 (t9 / team) :arg1 (p3 / power)) :op5 (r2 / run-01 :arg0 (t10 / team) :arg1 (p4 / power)) :op6 (r3 / run-01 :arg0 (t11 / team) :arg1 (p5 / power)) :op7 (p6 / power :ord (o / ordinal-entity :value 1) :location (c5 / country)))))))))))
(m / multi-sentence :snt1 (c / contrast-01 :arg1 (h / help-01 :arg0 (b / brown :mod (k / kyle)) :arg1 (l / lead-01 :arg0 (b2 / brown))) :arg2 (s / score-01 :arg1 (p / person :name (n / name :op1 "dan" :op2 "norton")) :arg2 (g / good)) :ord (o / ordinal-entity :value 1)) :snt2 (h2 / half :mode (i / interrogative)))
(j / journey :arg1 (j2 / journey :arg0-of (m / make-02 :arg1 (j3 / journey :time (n / no-longer :mod (l / little))))))
(i / important :domain (a / affect-01 :polarity - :arg0 (o / opponent :poss (y / you)) :arg1 (i2 / it)) :mod (r / really))
(a / and :op1 (c / change-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (t / team :mod (c2 / congressional) :mod (c3 / country :name (n / name :op1 "United" :op2 "States"))) :arg2 (o / official))) :arg1 (r / report-01 :arg0 (p2 / person :arg0-of (h2 / have-org-role-91 :arg1 (t2 / team :mod (c4 / central) :part-of (c5 / command-02)) :arg2 (o2 / official))))) :op2 (d / describe-01 :arg0 (p3 / person) :arg1 (w / war-01 :location (a2 / and :op1 (c6 / country) :op2 (s / state :mod (r2 / religious-group)))) :arg2 (t3 / thing :arg1-of (r3 / report-01))) :medium (r4 / report :arg1-of (r5 / release-01 :arg0 (t4 / team :mod (c7 / congressional)))))
(s / say-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg2 (o / official))) :arg1 (c / conclude-01 :arg0 (t / team :poss (p2 / person :arg0-of (h2 / have-org-role-91 :arg2 (o2 / official :mod (g / general))))) :arg1 (r / reduce-01 :polarity - :arg0 (s2 / strike-01 :arg1 (r2 / refinery :mod (s3 / state)) :mod (a / air)) :arg1 (i / income :mod (f / finance) :poss (o3 / organization :mod (t2 / terrorism))) :arg1-of (s4 / significant-02)) :arg1-of (c2 / cause-01 :arg0 (b / build-01 :arg0 (o4 / organization :mod (t3 / terrorism)) :arg1 (r3 / refinery :mod (o5 / oil) :purpose (c3 / continue-01 :arg1 (s5 / sell-01 :arg1 (o6 / oil) :location (m / market :arg1-of (b2 / black-04)) :arg1-of (d / differ-02 :degree (q / quite)))))))) :time (y / year :mod (l / last)))
(m / multi-sentence :snt1 (i / interest-01 :arg2 (n / note-01 :arg1 (r / respond-01 :arg0 (g / government-organization :arg0-of (g2 / govern-01)) :arg2 (p / person :arg0-of (h / hunger-01)))) :mod (p2 / particular)) :snt2 (p3 / possible-01 :arg1 (h2 / handle-01 :arg0 (i2 / i) :arg1 (a / anything :mod (e / else)) :degree (t / total))))
(s / say-01 :arg0 (l / low-04) :arg1 (a / and :op1 (p / prompt-01 :arg0 (p2 / price-01 :arg1 (o / oil) :arg1-of (l2 / low-04)) :arg1 (r / refiner :mod (g / globe)) :purpose (p3 / produce-01 :arg0 (r2 / refiner) :arg1 (o2 / oil :arg1-of (d / distribute-01 :degree (m / more))))) :op2 (f / facilitate-01 :arg0 (t / thing) :arg1 (o3 / oversupply :arg1 (m2 / market)))) :medium (r3 / report :mod (m3 / monthly)) :mod (a2 / also))
(e / enter-01 :arg0 (a / and :op1 (s / support-01 :arg0 (c / country) :arg1 (s2 / system :mod (m / medicine) :poss (c2 / country))) :op2 (s3 / support-01 :arg0 (c3 / country) :arg1 (s4 / system :mod (m2 / manage-01 :arg1 (c4 / chain)) :arg1-of (i / integrate-01)))) :arg1 (h / hospital :mod (a2 / all)) :manner (g / gradual) :time (y / year :mod (r / recent)) :manner (g2 / gradual))
(w / win-01 :arg0 (p / person :arg0-of (h / have-rel-role-91 :arg1 (i / i) :arg2 (l / lawyer))) :arg2 (c / compete-01 :purpose (p2 / patent-01 :arg1 (c2 / c :mod (c3 / c) :mod (c4 / c)))) :location (c5 / compete-01 :mod (c6 / c)))
(s / say-01 :arg0 (p / person :name (n / name :op1 "mr" :op2 "buffett")) :arg1 (a / and :op1 (r / receive-01 :arg0 (p2 / person) :arg1 (a2 / audit-01 :mod (i / irs)) :mod (a3 / also)) :op2 (f / fear-01 :arg0 (p3 / person) :arg1 (f2 / fear-01 :polarity - :arg0 (p4 / person :arg0-of (v / vote-01))))))
(w / write-01 :arg0 (i / i) :manner (? / ???))
(a / and :op1 (h / have-03 :arg0 (p / person :quant 63 :arg0-of (h2 / have-03)) :arg1 (k / knife) :prep-with (t / tramp :mod (a2 / another))) :op2 (k2 / kill-01 :arg0 (k3 / knife) :arg1 (k4 / knife)))
(h / have-03 :polarity - :arg0 (p / person :quant 76 :arg1-of (i / include-91 :arg2 (p2 / person :arg0-of (p3 / play-01) :mod (y / young)))) :arg1 (l / line :mod (o / outside)) :concession (p4 / person :arg0-of (p5 / play-01) :mod (y2 / young :degree (m / most)) :domain (p6 / person :quant 76) :time (n / now)))
(s / say-01 :arg0 (p / person :name (n / name :op1 "N-A")) :arg1 (b / become-01 :arg1 (s2 / situation) :arg2 (b2 / bad-04 :arg1 (s3 / situation) :degree (m / more)) :condition (c / change-01 :polarity - :arg0 (g / government-organization :arg0-of (g2 / govern-01) :mod (f / federal)) :arg1 (d / decide-01 :arg1-of (e / exist-01)))))
(l / light :quant 445 :domain (c / cluster :mod (p / pleiades)) :source (e / earth))
(h / have-03 :arg0 (t / they) :arg1 (e / effect :instrument-of (b / brake-01) :topic (s / star)) :time (p / pass-07 :arg1 (t2 / they) :arg2 (f / field :mod (m / magnet) :poss (s2 / star))))
(t / tell-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg2 (m / mcewan))) :arg1 (c / commit-01 :arg1 (s / sentiment :poss (b / brand :name (n / name :op1 (s2 / scotland) :op2 (b2 / brand)) :mod (r / royal) :poss (b3 / brand :name (n2 / name :op1 (s3 / scotland)) :mod (r2 / royal)))) :arg2 (a / ambition :mod (g / globe) :poss (s4 / sentiment)) :time (e / ever)) :arg2 (p2 / person :name (n3 / name :op1 "N-A")))
(c / contrast-01 :arg1 (p / provide-01 :arg0 (b / bank :mod (r / royal) :part-of (c2 / country :name (n / name :op1 "N-A"))) :arg1 (c3 / customer :mod (c4 / country :name (n2 / name :op1 "N-A")))) :arg2 (r2 / reply-01 :polarity - :arg0 (b2 / bank) :arg1 (c5 / customer)))
(m / multi-sentence :snt1 (t / tell-01 :arg0 (h / he) :arg2 (b / branch :mod (c / country :name (n / name :op1 "N-A")))) :snt2 (b2 / become-01 :arg1 (b3 / brand :name (n2 / name :op1 (e / employee) :op2 (b4 / brand)) :mod (r / royal)) :arg2 (b5 / brand :mod (p / person :arg0-of (i / invest-01 :arg2 (p2 / person :arg0-of (i2 / invest-01))))) :mod (a / also) :arg1-of (c2 / cause-01 :arg0 (s / sense-02 :arg1 (b6 / become-01 :arg1 (w / we) :arg2 (b7 / brand :quant (m2 / many) :part-of (b8 / bank)))) :mod (a2 / also))))
(t / tell-01 :arg0 (p / person :name (n / name :op1 "N-A") :arg0-of (h / have-org-role-91 :arg1 (c / country :name (n2 / name :op1 "N-A")) :arg2 (p2 / putin))) :arg1 (a / and :op1 (d / demand-01 :arg0 (p3 / person) :arg1 (r / resign-01)) :op2 (r2 / recommend-01 :arg0 (p4 / person) :arg1 (j / jean :arg0 (j2 / jean :name (n3 / name :op1 (m / mr.) :op2 (m2 / mr.))) :arg1 (p5 / pick-01 :arg0 (p6 / person) :arg1 (a2 / any :arg1-of (i / include-91 :arg2 (p7 / person))))))) :arg2 (t2 / television :name (n4 / name :op1 (m3 / mr.) :op2 (t3 / television) :op3 (t4 / television))))
(f / find-01 :arg0 (s / scene) :arg1 (s2 / scene :arg0-of (o / offense-02 :arg1 (s3 / shell)) :quant (l / lot) :arg1-of (i / inferred :arg2 (u / use-01 :arg0 (t / they) :arg1 (w / weapon :arg0-of (o2 / offense-02) :arg1-of (d / differ-02))))))
(a / and :op1 (c / consult-01 :arg0 (w / we :arg1-of (i / include-91 :arg2 (w2 / we) :arg3 (s / slash :op1 (d / distance-quantity :quant (N / N-A) :unit (y / york)) :op2 (d2 / distance-quantity :quant (N2 / N-A) :unit (- / -rrb-)))) :mod (n / new) :mod (y2 / york))) :op2 (l / learn-01 :arg0 (w3 / we) :arg1 (t / thing :manner-of (d3 / deal-01 :arg2 (p / person :arg0-of (s2 / specialize-01 :arg1 (g / gun))) :manner (c2 / close)))))
(s / sound-01 :mode (i / interrogative) :arg2 (c / complicate-01 :degree (v / very)))
(s / say-01 :arg0 (h / he) :arg1 (u / unfit :domain (p / person :arg0-of (h2 / have-org-role-91 :arg2 (p2 / president)))))
(a / and :op1 (s / spirit :mod (t / thing :arg1-of (o / opine-01 :arg0 (t2 / thing :arg1-of (o2 / opine-01 :arg0 (t3 / thing :arg1-of (o3 / opine-01 :arg0 (t4 / thing :arg1-of (o4 / opine-01 :arg0 (t5 / thing :arg1-of (o5 / opine-01 :arg0 (t6 / thing :arg1-of (o6 / opine-01 :arg0 (t7 / thing :arg1-of (o7 / opine-01 :arg0 (t8 / thing :arg1-of (o8 / opine-01 :arg0 (t9 / thing :arg1-of (o9 / opine-01 :arg0 (t10 / thing :arg1-of (o10 / opine-01 :arg0 (t11 / thing :arg1-of (o11 / opine-01 :arg0 (t12 / thing :arg1-of (o12 / opine-01 :time (p / present))))))))))))))))))))))))) :op2 (p2 / policy :mod (i / inconsistent) :mod (i2 / inconsistent)) :op3 (m / measure-02 :arg1-of (m2 / modify-01) :arg1-of (m3 / modify-01))))
(b / bring-01 :arg0 (p / park :location (d / district)) :arg1 (h / home :mod (o / old :degree (m / most :quant 29))) :arg2 (h2 / home) :time (b2 / before :op1 (n / now) :quant (f / few :op1 (t / temporal-quantity :quant (N / N-A) :unit (d2 / day)))) :mod (j / just) :arg1-of (r / replace-01 :arg2 (s / screen :quant 65 :mod (b3 / big) :mod (d3 / distance-quantity :quant (N2 / N-A) :unit (i / inch)))))
(m / multi-sentence :snt1 (t / tell-01 :arg0 (p / person :arg0-of (h / have-rel-role-91 :arg1 (h2 / he) :arg2 (m2 / mother))) :arg1 (p2 / person :arg0-of (r / report-01)) :arg2 (p3 / person :arg0-of (r2 / report-01)) :location (h3 / hesitation :poss (p4 / person))) :snt2 (g / guest :mode (i / interrogative) :mod (c / c)) :snt3 (g2 / guest :mod (c2 / c)))
(e / expo :arg0 (a / and :op1 (p / person :arg0-of (h / have-org-role-91 :arg1 (v / villager))) :op2 (p2 / person :arg0-of (v2 / visit-01))) :arg1 (a2 / and :op1 (v3 / villager) :op2 (p3 / person :arg0-of (v4 / visit-01))) :arg2 (a3 / and :op1 (v5 / villager) :op2 (p4 / person :arg0-of (v6 / visit-01))) :manner (o / official) :time (r / recent))
FAILED_TO_PARSE#Number of opening and closing brackets doesn't match.
(m / multi-sentence :snt1 (s / say-01 :arg0 (p / person :arg0-of (e / enforce-01 :arg1 (l / law :arg0-of (e2 / enforce-01 :arg1 (l2 / law :mod (t / tourism)))))) :frequency (r / rate-entity-91 :arg1 2 :arg2 (t2 / temporal-quantity :quant (N / N-A) :unit (d / day))) :purpose (c / check-out-05 :arg0 (p2 / person) :arg1 (s2 / situation))) :snt2 (a / and :op1 (m2 / matter-01 :polarity - :arg1 (t3 / travel-01 :arg0 (v / vehicle))) :op2 (m3 / matter-01 :polarity - :arg1 (t4 / travel-01 :arg0 (v2 / vehicle)) :time (o / once :op1 (h / hurt-01 :arg0 (g / group) :arg1 (g2 / group))))))
(a / and :op1 (t / train-01 :arg0 (m / military) :arg2 (s / sun) :time (b / before :op1 (n / now) :quant (b2 / between :op1 (t2 / temporal-quantity :quant (N / N-A) :unit (h / hour)) :op2 (t3 / temporal-quantity :quant (N2 / N-A) :unit (h2 / hour)))) :purpose (h3 / have-03 :arg0 (m2 / military) :arg1 (e / effect :arg1-of (l / last-01 :arg2 (t4 / temporal-quantity :quant (N3 / N-A) :unit (h4 / hour)))))) :op2 (l2 / lazy :domain (s2 / sunscreens) :degree (t5 / total)))
(s / state :mod (b / blanking) :domain (a / athletes :quant (a2 / all)) :time (a3 / after :op1 (s2 / stepping :arg1 (a4 / athletes) :arg2 (f / field :mod (n / new)))))
(m / multi-sentence :snt1 (m2 / mention-01 :polarity - :arg1 (s / setbacks :arg1 (c / career :mod (s2 / sports)) :extent (c2 / compared :degree (s3 / slight)) :compared-to (a / and :op1 (l / liang :mod (y / yutian)) :op2 (x / xuan :mod (l2 / liu)) :op3 (p / person :mod (o / other)) :op4 (p2 / person :mod (o2 / other)) :op5 (p3 / person :mod (o3 / other)) :op5 (p4 / person :mod (o4 / other)) :op6 (p5 / person :mod (o5 / other)) :op6 (p6 / person :mod (o6 / other)) :op6 (p7 / person :mod (o7 / other)) :op6 (p8 / person :mod (o8 / other)) :op6 (p9 / person :mod (o9 / other)) :op6 (p10 / person :mod (o10 / other)) :op7 (p11 / person :mod (o11 / other))))) :snt2 (p12 / probable :domain (i / immeasurable :arg1 (i2 / image :mod (s4 / sports)))))
(c / combine-01 :arg1 (m / mechanism :arg1-of (p / pay-01 :arg3 (p2 / pay-01))) :arg2 (d / date :time (a / after :op1 (c2 / complete-01 :arg1 (b / business :mod (p3 / pay-01)) :purpose (u / undertake :arg1 (w / work-01 :arg0 (b2 / business)))))))
(r / ride-01 :arg0 (a / and :op1 (c / commission :mod (e / elderly)) :op2 (b / bureau :mod (f / finance :mod (c2 / city))) :op3 (b2 / bureau :mod (c3 / city))) :arg1 (b3 / bus :mod (c4 / city)) :arg2 (n / notice-03 :arg1 (p / policy :mod (p2 / prefer-01)) :time (y / year :mod (d / date-entity :decade (N / N-A)) :arg1-of (i / implement-01 :manner (o / official)))) :time (b4 / before :op1 (n2 / now) :quant (b5 / between :op1 (t / temporal-quantity :unit (y2 / year)) :op2 (t2 / temporal-quantity :quant (N2 / N-A) :unit (y3 / year)))))
(s / show-01 :arg0 (d / data :quant 2015 :arg0-of (m / monitor-01) :time (l / late :degree (m2 / most)) :arg0-of (m3 / monitor-01)) :arg1 (b / be-located-at-91 :arg1 (a / and :op1 (p / person :arg0-of (m4 / monitor-01 :arg1 (d2 / data))) :op2 (p2 / person :location (r / relative-position :op1 (r2 / river :name (n / name :op1 "N-A")) :quant (m5 / multiple :op1 27)))) :arg2 (d3 / distance-quantity :quant (N / N-A) :unit (k / kilometer) :mod (o / only))))
(t / transfer-01 :arg0 (p / person :arg2-of (s / suspect-01) :arg1-of (i / involve-01)) :arg1 (p2 / person :arg2-of (s2 / suspect-01) :arg1-of (i2 / involve-01)) :arg2 (p3 / prosecute-01 :arg0 (p4 / person) :arg1 (p5 / person :arg0-of (p6 / prosecute-01))) :time (r / recent))
(a / and :op1 (w / watch-01 :arg0 (i / i) :arg1 (p / perform-01 :arg0 (p2 / person :arg0-of (h / have-rel-role-91 :arg1 (p3 / person :arg0-of (h2 / have-rel-role-91 :arg1 (h3 / he) :arg2 (d / daughter))) :arg2 (d2 / daughter))) :arg2 (p4 / person :arg0-of (h4 / have-rel-role-91 :arg1 (h5 / he) :arg2 (d3 / daughter)))) :time (b / before :op1 (n / now) :quant (t / temporal-quantity :quant (N / N-A) :unit (y / year)))) :op2 (w2 / watch-01 :arg0 (i2 / i) :arg1 (p5 / perform-01 :arg0 (p6 / person :arg0-of (h6 / have-rel-role-91 :arg1 (h7 / he) :arg2 (d4 / daughter))) :arg1 (s / show-04))))
(a / and :op1 (a2 / achieve-01 :arg0 (l / liu :name (n / name :op1 (m / mr.) :op2 (l2 / liu)) :mod (p / pilot-01)) :arg1 (r / result :mod (i / initial))) :op2 (c / create-01 :arg0 (l3 / liu) :arg1 (e / experience-01 :mod (g / good))) :op3 (g2 / give-01 :arg0 (p2 / practice-01 :mod (g3 / good)) :arg1 (p3 / practice :mod (g4 / good))))
(r / race :mod (l / line :mod (s / security :mod (n / nation)) :location (o / out :op1 (l2 / line :mod (b / bottom))) :domain (l3 / line :name (n2 / name :op1 (f / fernando) :op2 (s2 / small-angle))) :arg1-of (c / continue-01) :mod (e / even)) :time (a / after :op1 (t / temporal-quantity :quant (N / N-A) :unit (m / minute))) :arg1-of (c2 / continue-01) :mod (e2 / even))
(a / and :op1 (r / restrict-01 :arg0 (p / person :mod (c / country :name (n / name :op1 "N-A"))) :arg1 (a2 / area) :time (b / before :op1 (s / shoveled :mod (v / vicious) :purpose (g / grab-01 :arg1 (v2 / violate-01 :arg1 (m / metz :mod (k / kerry))))))) :op2 (r2 / receive-01 :arg0 (h / he) :arg1 (c2 / card :mod (y / yellow)) :arg1-of (j / just-02)))
(h / have-03 :arg0 (w / we) :arg1 (r / roll :arg1-of (c / complete-02)))
(p / provide-01 :arg0 (a / and :op1 (t / thing :arg1-of (l / learn-01 :medium (o / online)) :arg2-of (i / include-01 :arg1 (a2 / and :op1 (t2 / thing :arg1-of (l2 / learn-01 :medium (o2 / online))) :op2 (d / discuss-01 :mod (a3 / academia)) :op3 (e / exchange-01 :mod (a4 / academia))))) :op2 (t3 / thing :arg1-of (d2 / discuss-01) :mod (a5 / academia)) :op3 (e2 / exchange-01 :mod (a6 / academia))) :arg1 (o3 / or :op1 (r / relation-03 :arg0 (d3 / doctor) :arg1-of (l3 / legal-02)) :op2 (s / support-01 :arg1 (a7 / and :op1 (s2 / support-01) :op2 (s3 / service :mod (o4 / other))) :op3 (s4 / service :mod (o5 / other)) :arg1-of (l4 / legal-02))) :location (h / hospital :mod (s5 / same)))
(h / have-condition-91 :arg1 (i / increase-01 :arg1 (f / function-01 :arg0 (s / system :name (n / name :op1 (i2 / immune))) :mod (e / even))) :arg2 (i3 / increase-01 :arg1 (f2 / function-01 :arg0 (s2 / system :name (n2 / name :op1 (i4 / immune))) :mod (e2 / even)) :arg1-of (c / cause-01 :arg0 (a / and :op1 (f3 / function-01 :arg0 (c2 / cancer :mod (i5 / immune))) :op2 (s3 / suffer-01 :arg0 (s4 / system :name (n3 / name :op1 (i6 / immune))) :mod (e3 / even))))))
(m / multi-sentence :snt1 (r / rate-entity-91 :arg1 2008 :arg2 (t / temporal-quantity :quant (N / N-A) :unit (m2 / month))) :snt2 (c / compete-02 :arg0 (r2 / ring :mod 3) :arg1 (c2 / compete-01 :mod (o / olympic)) :purpose (w / win-01 :arg0 (r3 / ring) :arg1 (m3 / medal :mod (g / gold)))) :li 8)
(c / cause-01 :arg0 (e / enforce-01 :arg0 (t / team :name (n / name :op1 (o / olympics) :op2 (o2 / olympics)) :mod (c2 / country :name (n2 / name :op1 "N-A"))) :arg1 (d / dominance :arg1 (t2 / team) :degree (s / somewhat)) :time (a / after :op1 (h / head-02 :arg0 (t3 / team :mod (c3 / country :name (n3 / name :op1 "N-A")) :mod (c4 / country)) :arg1 (r / rio :arg1 (t4 / team) :degree (s2 / somewhat))))) :arg1 (e2 / enforce-01 :arg1 (a2 / and :op1 (b / beijing) :op2 (l / london))))
(a / and :op2 (f / feel-01 :arg0 (s / she) :arg1 (a2 / and :op1 (r / relax :arg0 (s2 / she)) :op2 (r2 / regain-01 :arg0 (s3 / she) :arg1 (f2 / free-04))) :time (o / once :op1 (s4 / situation :arg1-of (t / trap-01 :arg2 (t2 / that))))))
(a / and :op1 (b / be-located-at-91 :arg1 (t / thing :mod (t2 / this)) :arg2 (p / plant) :time (a2 / after :op1 (n / now) :duration (f / few :op1 (t3 / temporal-quantity :quant (N / N-A) :unit (y / year)))) :purpose (p2 / predict-01 :arg1 (p3 / predict-01))) :op2 (c / cause-01 :arg0 (p4 / produce-01 :arg0 (p5 / plant :mod (p6 / plant)) :arg1 (t4 / thing :arg2-of (p7 / price-01))) :time (r / recent)))
(m / multi-sentence :snt1 (s / say-01 :arg0 (i / i) :arg1 (b / be-located-at-91 :arg1 (c / company) :arg2 (u / under :op1 (m2 / monetary-quantity :quant 96 :unit (d / dollar :mod (r / renminbi)))))) :snt2 (e / expect-01 :mode (i2 / interrogative) :arg1 (w / written :arg1 (m3 / monetary-quantity :quant 96 :unit (d2 / dollar :mod (r2 / renminbi))))))
(r / reduce-01 :arg1 (d / demand-01 :arg1 (m / market :mod (p / power))) :degree (g / great) :condition (c / close-01 :arg1 (f / factory :quant 2)))
(o / obvious-01 :arg1 (o2 / obvious-01 :arg1 (o3 / obvious-01 :arg1 (b / benefit-01))))
(m / multi-sentence :snt1 (c / club :polarity - :mod (b / big) :domain (t / this)) :snt2 (-2 / -rrb- :polarity - :arg1 (r / race :mod (r2 / royal) :mod (r3 / royal) :mod (r4 / royal)) :time (n / night :mod (f / friday)) :mod (o / only)))
(s / say-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (g / government-organization :arg0-of (g2 / govern-01)) :arg2 (p2 / person :arg1-of (e / employ-01)))) :arg1 (a / and :op1 (p3 / person :arg0-of (h2 / have-org-role-91 :arg2 (p4 / president :mod (m / manage-01)))) :op2 (p5 / person :arg1-of (e2 / employ-01 :arg0 (g3 / government-organization :arg0-of (g4 / govern-01))))) :time (l / late :degree (m2 / more) :time (l2 / late :degree (m3 / more))))
(a / and :op1 (b / be-located-at-91 :polarity - :arg1 (v / victim :quant 2 :mod (o / other)) :arg2 (c / car)) :op2 (i / investigate-01 :arg0 (p / police) :arg1 (w / wound-01 :mode (i2 / interrogative) :arg1 (g / gunmen))))
(h / have-concession-91 :arg2 (s / say-01 :arg0 (h2 / he) :arg1 (o / open-01 :arg1 (d / door :part-of (h3 / he)) :time (a / always)) :time (m / month :mod (l / last) :mod (j / just))))
(s / say-01 :arg0 (p / person :name (n / name :op1 "N-A")) :arg1 (r / recommend-01 :arg1 (f / focus-01 :arg0 (p2 / person) :arg2 (p3 / protect-01 :arg1 (w / whistleblower)))))
(s / say-01 :arg2 (p / person :name (n / name :op1 "N-A")))
(s / say-01 :arg0 (h / he) :arg1 (s2 / show-01 :arg0 (t / thing :arg0-of (e / evidence-01) :mod (' / '')) :arg1 (a / and :op1 (p / person :arg0-of (h2 / have-org-role-91 :arg2 (m / member :mod (s3 / senior)))) :op2 (p2 / person :arg0-of (h3 / have-org-role-91 :arg1 (c / community) :arg2 (m2 / member :mod (s4 / senior)))) :op3 (p3 / person :arg0-of (h4 / have-org-role-91 :arg1 (c2 / community) :arg2 (m3 / member :mod (s5 / senior)))) :op4 (p4 / person :mod (y / young) :arg0-of (h5 / have-org-role-91 :arg1 (c3 / community) :arg2 (m4 / member))) :op5 (p5 / person :mod (y2 / young) :arg0-of (a2 / allow-01 :arg1 (v / vote-01 :arg0 (p6 / person)))))) :medium (r / report))
(m / multi-sentence :snt1 (d / describe-01 :arg1 (t / teenager :arg1-of (i / include-91 :arg2 (t2 / teenager :mod (c / country :name (n / name :op1 "N-A")) :mod (f / final)) :arg3 (d2 / distance-quantity :quant (N / N-A) :unit (m2 / meter)))) :arg2 (t3 / teenager :mod (c2 / country :name (n2 / name :op1 "N-A")) :mod (f2 / final) :mod (f3 / final)) :arg1-of (r / resemble-01 :arg2 (t4 / this)) :arg1-of (r2 / resemble-01 :arg2 (t5 / this)) :arg1-of (r3 / resemble-01 :arg2 (t6 / this))) :snt2 (m3 / mistake-02 :arg0 (g / girl :mod (c3 / country)) :mod (s / silly)))
(d / destroy-01 :arg0 (f / family :location (h / house :location (c / cornwall))) :arg1 (p / project :time (f2 / former)) :location (o / outside :op1 (t / tash :mod (t2 / tash))))
(g / got :arg0 (w / we) :time (e / early) :arg1-of (c / cause-01 :arg0 (q / quiet :polarity - :arg1 (w2 / we) :arg2 (h / here))))
(m / multi-sentence :snt1 (a / add-01 :arg0 (h / he) :arg1 (r / regret-01 :arg1 (' / '' :polarity - :arg1 (a2 / and :op1 (b / behave-01 :arg0 (f / family :arg1-of (h2 / have-org-role-91 :arg0 (s / she) :arg2 (m2 / member)))) :op2 (b2 / behave-01 :arg0 (f2 / family :arg1-of (h3 / have-org-role-91 :arg0 (s2 / she) :arg2 (m3 / member)))))))) :snt2 (a3 / approach-02 :arg0 (p / person :arg0-of (h4 / house-01)) :mod (f3 / final)))
(n / need-01 :arg0 (w / we) :arg1 (s / show-01 :arg0 (w2 / we) :arg1 (a / and :op1 (f / feel-01 :arg0 (a2 / and :op1 (w3 / woman) :op2 (m / man)) :arg1 (a3 / and :op1 (w4 / woman) :op2 (m2 / man))) :op2 (t / timeless :arg0 (a4 / and)) :op3 (n2 / nudity :arg0 (a5 / and)) :time (t2 / time :mod (t3 / this)) :arg1-of (s2 / say-01 :arg0 (b / briefing)))))
(s / say-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (p2 / political-party :name (n / name :op1 "N-A")))) :arg1 (e / expect-01 :arg1 (h2 / head-01 :arg0 (p3 / person :arg1-of (a / age-01 :arg2 (t / temporal-quantity :quant (N / N-A) :unit (y / year)))) :arg1 (s2 / shark :arg0 (p4 / person) :arg1 (s3 / shark :quant (b / between :op1 272 :op2 272)) :time (a2 / age-01 :arg1 (p5 / person) :arg2 (t2 / temporal-quantity :quant (N2 / N-A) :unit (y2 / year)))) :time (a3 / age-01 :arg1 (p6 / person) :arg2 (t3 / temporal-quantity :quant (N3 / N-A) :unit (y3 / year))))))
(a / and :op1 (p / put-01 :arg0 (t / temporal-quantity :quant (N / N-A) :unit (y / year)) :arg1 (r / regulate-01 :arg1-of (p2 / put-01 :arg2 (r2 / rule :location-of (p3 / place)))) :arg2 (r3 / rule :location-of (p4 / place)) :time (r4 / recent)) :op2 (u / upgrade-02 :arg1 (' / '' :mod ('2 / '')) :arg4 ('3 / '' :op1 ('4 / ''))))
(a / and :op1 (s / submit-01 :arg0 (x / xiuping :name (n / name :op1 (z / zhao))) :arg1 (a2 / apply-02 :arg1 (e / environment)) :arg2 (a3 / and :op1 (p / project :mod (c / construct-01)) :op2 (p2 / project :mod (c2 / construct-01)) :op3 (m / material :mod (o / other)) :location (c3 / city :name (n2 / name :op1 "N-A") :location (c4 / country :name (n3 / name :op1 "N-A"))))) :op2 (b / begin-01 :arg1 (c5 / conduct-01 :arg0 (a4 / and) :arg1 (m2 / material :mod (a5 / apply-01) :mod (p3 / preliminary)))))
(a / and :op1 (m / make-01 :arg1 1 :arg3 2016 :arg3 2016) :op2 (p / pay-01 :polarity - :arg0 (p2 / person :arg0-of (h / have-org-role-91 :arg1 (u / unit :arg1-of (e / exist-01)))) :arg2 (r / royalties)) :li 2016)
(s / say-01 :arg0 (s2 / she) :arg1 (m / make-02 :arg0 (a / and :op1 (p / person :arg0-of (h / have-rel-role-91 :arg1 (s3 / she) :arg2 (d / daughter))) :op2 (p2 / person :arg0-of (h2 / have-rel-role-91 :arg1 (s4 / she) :arg2 (d2 / daughter))) :op3 (p3 / person :arg0-of (h3 / have-rel-role-91 :arg1 (s5 / she) :arg2 (d3 / daughter))) :op4 (p4 / person :arg0-of (h4 / have-rel-role-91 :arg1 (s6 / she) :arg2 (d4 / daughter))) :op5 (p5 / person :arg0-of (h5 / have-rel-role-91 :arg1 (s7 / she) :arg2 (d5 / daughter)))) :arg1 (a2 / and :op1 (g / good :domain (s8 / she)) :op2 (c / come-01 :arg1 (s9 / she) :arg4 (l / life) :time (a3 / always)))))
(a / and :op1 (r / report-01 :arg0 (m / media :mod (c / country :name (n / name :op1 "N-A"))) :arg1 (p / peak-01 :arg1 (i / information :mod (m2 / medicine) :arg1-of (e / excessive-02) :arg1-of (c2 / call-01 :manner (s / so))))) :op2 (s2 / support-01 :polarity - :arg1 (t / thing :arg0-of (e2 / evidence-01))))
(s / say-01 :arg0 (p / person :arg0-of (p2 / play-01 :arg1 (w / water :mod (c / country :name (n / name :op1 "N-A"))))) :arg1 (t / thing :arg0-of (p3 / play-12 :arg2 (w2 / water)) :mod (c2 / country :name (n2 / name :op1 "N-A"))) :time (a / after :op1 (s2 / sting :arg1 (e / eye :part-of (p4 / person)))))
(s / say-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (- / -rrb- :name (n / name :op1 (o / olympics) :op2 (o2 / olympics) :op3 (o3 / olympics)) :arg0-of (h2 / have-org-role-91 :arg1 (p2 / political-party :name (n2 / name :op1 "N-A")) :arg2 (s2 / spokesman))) :arg2 (s3 / spokesman))) :arg1 (b / be-located-at-91 :arg1 (w / water :mod (p3 / pool :arg0-of (s4 / sing-01))) :arg2 (l / level :mod (b2 / bone :part-of (a / alkaline))) :time (a2 / afternoon :mod (f / first)) :time (f2 / first)))
(u / understand-01 :arg1 (o / obligate-01 :arg1 (d / department :mod (e / enforce-01 :arg1 (l / law))) :arg2 (t / travel-01 :arg0 (d2 / department) :location (a / and :op1 (p / park :location (w / west)) :op2 (t2 / tourism :mod (r / red)) :op3 (t3 / tourism :mod (r2 / red) :example (d3 / districts :mod (r3 / retail-01)))))))
(s / say-01 :arg0 (b / bureau :poss (s2 / statistic :topic (s3 / statistic :mod (w / weather :arg1-of (h / hot-05))))) :arg1 (o / obligate-01 :arg1 (i / i) :arg2 (r / receive-01 :arg0 (p / person :quant (a / all)) :arg1 (a2 / allowance) :arg2 (t / temperature-quantity :quant (v / volume-quantity :quant (N / N-A) :unit (g / gallon))))))
(a / and :op1 (p / person :arg0-of (s / spontaneously :arg1 (p2 / person))) :op2 (d / do-02 :arg0 (p3 / person) :arg1 (g / good :degree (m / most) :poss (p4 / person)) :purpose (t / try-01 :arg0 (p5 / person) :arg1 (h / help-01 :arg0 (p6 / person) :degree (e / equal) :compared-to (p7 / possible-01 :arg1 (h2 / help-01) :time (b / before :op1 (l / live-01 :arg0 (p8 / person :arg0-of (i / injure-01)))))))))
(c / channel :name (n / name :op1 (r / river) :op2 (f / flows) :op3 (f2 / flows)) :mod (o / old) :location (c2 / channel :name (n2 / name :op1 (g / grand) :op2 (c3 / canal) :op3 (n3 / nanyanghu) :op4 (n4 / nanyanghu) :op5 (n5 / nanyanghu) :op6 (c4 / canal) :op7 (c5 / canal))))
(a / and :op1 (s / study-01 :arg0 (p / person :arg1-of (e / expert-01 :arg2 (p2 / plan-01 :mod (u / urban)))) :location (t / there) :purpose (l / learn-01 :arg0 (p3 / person) :arg1 (d / design-01 :arg1 (a2 / architectural :arg1-of (l2 / local-02))))) :op2 (m / man :arg0-of (t2 / travel-01 :arg2 (m2 / man))))
(d / direct-01 :arg0 (p / person :arg1-of (h / host-01 :arg0 (p2 / person :mod (s / sports)))) :arg1 (g / game) :time (d2 / day :mod 13) :time (c / ceremony :mod (o / open-02 :arg1 (o2 / open-01))) :location (p3 / province :name (n / name :op1 "N-A") :arg1-of (h2 / host-01 :arg0 (p4 / person :mod (s2 / sports)))))
(r / review-01 :arg0 (p / person :arg1-of (s / suspect-01)) :arg1 (o / office :poss (p2 / person :arg0-of (h / have-org-role-91 :arg2 (o2 / office :mod (d / district)))) :purpose (p3 / prosecute-01 :arg1 (p4 / person))) :time (b / before :op1 (n / now) :quant (f / few :op1 (t / temporal-quantity :quant (N / N-A) :unit (d2 / day)))))
(a / and :op1 (p / pull-01 :arg0 (p2 / person :mod (c / country :name (n / name :op1 "N-A")) :mod (c2 / country :name (n2 / name :op1 "N-A"))) :arg1 (p3 / project :topic (p4 / perform-02 :arg0 (p5 / person))) :arg2 (p6 / project :topic (p7 / perform-02 :arg0 (p8 / person) :arg1 (t / thing :arg1-of (k / key-02 :arg2 (t2 / thing :arg1-of (p9 / perform-01 :arg1-of (k2 / key-02 :arg2 (m / monetary-quantity :quant (N / N-A) :unit (d / dollar :mod (c3 / country)))))))))) :time (y / year :mod (e / exchange-01 :arg1-of (k3 / key-02 :arg2 (' / ''))))) :op2 (p10 / performances :arg0 (p11 / person :mod (n3 / nation) :mod (c4 / country)) :arg1 (g / game :quant 7) :location (c5 / country)))
(a / and :op1 (g / get-02 :arg0 (p / person :quant 18 :arg2-of (t / total-01 :arg1 (c / career :mod (a2 / athletic)))) :arg1 (c2 / champion :mod (w / world)) :time (a3 / after :op1 (n / now) :quant (t2 / temporal-quantity :quant (N / N-A) :unit (y / year)))) :op2 (b / become-01 :arg1 (p2 / person) :arg2 (h / history :poss (c3 / country :name (n2 / name :op1 "China")) :ord (o / ordinal-entity :value 1)) :purpose (w2 / win-01 :arg0 (c4 / country) :arg1 (d / drone :mod (g2 / gold) :quant 4 :mod (g3 / gold)) :arg2 (p3 / person))))
(a / and :op1 (h / have-03 :arg0 (t / thompson) :arg1 (u / use-01 :arg1 (t2 / top :quant (b / between :op1 2 :op2 20)))) :op2 (g / good :degree (m / most) :domain (c / career :poss (h2 / he) :mod (s / season :mod (l / last)) :domain (t3 / this))))
(a / and :op1 (s / shot :arg1 (s2 / shoot-02 :arg1-of (l / low :arg2 (l2 / leave-17 :arg1 (a2 / area :arg1-of (p / penalize-01))))) :arg3 (p2 / percentage-entity :value (N / N-A)) :arg4 (l3 / leave-17 :arg1 (a3 / area :arg1-of (p3 / penalize-01)))) :op2 (b / ball :arg1 (d / deflecting :name (n / name :op1 (b2 / ball) :op2 (c / calderon) :op3 (c2 / calderon)))))
(u / undergo-28 :arg1 (p / person :mod (w / williams)) :arg2 (c / cancer) :li 2013)
(s / solyariya :arg1 (a / and :op1 (g / graf) :op2 (h / heather)) :time (a2 / after :op1 (n / now) :quant (t / temporal-quantity :quant (N / N-A) :unit (y / year)) :mod (o / outstanding)))
(e / explain-01 :arg0 (c / company) :arg1 (a / and :op1 (p / pay-01 :arg0 (t / thing :name (n / name :op1 "N-A")) :arg3 (r / role :mod (c2 / comic))) :op2 (p2 / pay-01 :arg0 (t2 / thing :name (n2 / name :op1 "N-A")) :arg3 (r2 / role :mod (c3 / comic)))))
(a / and :op1 (d / decide-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg2 (p2 / person :arg0-of (m / manage-01 :arg1 (p3 / product))))) :arg1 (r / remove-01 :arg0 (p4 / person) :arg1 (a2 / account :mod (s / snapchat) :poss (p5 / person)))) :op2 (e / encourage-01 :arg0 (p6 / person) :arg1 (o / other) :arg2 (d2 / do-02 :arg0 (p7 / person) :arg1 (s2 / same-01))) :location (p8 / process-01 :arg1 (a3 / and :op1 (p9 / person :arg0-of (h2 / have-org-role-91 :arg2 (p10 / person :arg0-of (m2 / manage-01 :arg1 (p11 / product))))) :op2 (p12 / person :arg0-of (e2 / engineer-01 :arg1 (p13 / product))))))
(s / say-01 :arg0 (t / thing :arg1-of (r / report-01) :arg1-of (r2 / release-01 :arg0 (a / and :op1 (p / person :arg0-of (h / have-org-role-91 :arg2 (o / official :mod (c / command-02 :mod (c2 / central))))) :op2 (p2 / person :arg0-of (h2 / have-org-role-91 :arg2 (o2 / official))) :op3 (p3 / person :arg0-of (h3 / have-org-role-91 :arg2 (o3 / official))) :op4 (p4 / person :arg0-of (h4 / have-org-role-91 :arg2 (o4 / official))) :op5 (p5 / person :arg0-of (h5 / have-org-role-91 :arg2 (o5 / official)))))) :arg1 (a2 / and :op1 (c3 / change-01 :arg0 (p6 / person :arg0-of (h6 / have-org-role-91 :arg2 (o6 / official :mod (c4 / command-02 :mod (c5 / central))))) :arg1 (r3 / report-01 :arg0 (i / intelligence))) :op2 (f / fight-01 :arg0 (p7 / person) :arg1 (s2 / situation :mod (w / war)) :location (a3 / and :op1 (c6 / country :name (n / name :op1 "N-A")) :op2 (c7 / country :name (n2 / name :op1 "N-A"))))) :op3 (o7 / optimistic :domain (s3 / situation :mod (w2 / war)) :degree (m / more) :mod (a4 / actual)))
(h / historians :arg0 (c / couple :arg0-of (l / live-01 :location (h2 / heights :mod (b / brooklyn)))) :arg1 (c2 / couple))
(f / fruit :arg1-of (c / cheap-02) :domain (f2 / fruit :arg1-of (f3 / fresh-04)) :arg1-of (c2 / cheap-02))
(s / state-01 :arg0 (s2 / state :arg0-of (h / have-org-role-91 :arg1 (s3 / state :arg0-of (h2 / have-org-role-91 :arg2 (m / member))) :arg2 (m2 / member))) :arg1 (f / fail-01 :arg1 (a / agree-01 :arg0 (s4 / state :arg0-of (h3 / have-org-role-91 :arg1 (s5 / state :arg0-of (h4 / have-org-role-91 :arg2 (m3 / member))) :arg2 (m4 / member))) :arg1 (a2 / agree-01 :arg0 (s6 / state) :arg1 (r / reach-01 :arg0 (s7 / state) :arg1 (a3 / agree-01)) :mod (a4 / any))) :time (l / last)))
(s / s. :arg0 (a / and :op1 (p / person :arg0-of (h / have-org-role-91 :arg2 (s2 / secretary :mod (d / defense)))) :op2 (p2 / person :arg0-of (h2 / have-org-role-91 :arg1 (s3 / state) :arg2 (s4 / secretary :mod (s5 / state)))) :op3 (p3 / person :arg0-of (h3 / have-org-role-91 :arg1 (c / country :name (n / name :op1 "N-A")) :arg2 (s6 / secretary :mod (v / vice)))) :op4 (p4 / person :arg0-of (h4 / have-org-role-91 :arg1 (c2 / country :name (n2 / name :op1 "N-A")) :arg2 (m / minister :mod (f / foreign)))) :op5 (p5 / person :arg0-of (h5 / have-org-role-91 :arg1 (c3 / country) :arg2 (m2 / minister :mod (f2 / foreign)))) :op6 (p6 / person :arg0-of (h6 / have-org-role-91 :arg1 (c4 / country) :arg2 (m3 / minister :mod (f3 / foreign)))) :op6 (p7 / person :arg0-of (h7 / have-org-role-91 :arg1 (c5 / country) :arg2 (m4 / minister :mod (f4 / foreign)))) :op7 (p8 / person :arg0-of (h8 / have-org-role-91 :arg1 (c6 / country) :arg2 (m5 / minister :mod (f5 / foreign)))) :op7 (p9 / person :arg0-of (h9 / have-org-role-91 :arg1 (c7 / country) :arg2 (m6 / minister :mod (f6 / foreign))))) :arg1 (a2 / attend-01 :arg0 (a3 / and) :arg1 (c8 / conference :mod (p10 / press))))
(b / become-01 :arg1 (t / tax-01 :arg2 (p / person :arg0-of (h / have-org-role-91 :arg2 (p2 / president)))) :arg2 (p3 / problem :mod (h2 / huge)))
(s / say-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (p2 / political-party :name (n / name :op1 "N-A")))) :arg1 (c / contrast-01 :arg1 (a / audit-01 :arg1 (h2 / he) :mod (a2 / also) :mod (a3 / also)) :arg2 (f / fear-01 :arg0 (p3 / person :arg0-of (v / vote-01)) :arg1 (p4 / person :arg0-of (h3 / have-org-role-91 :arg2 (a4 / authority :mod (t / tax)))))))
(a / and :op1 (k / khan :arg0 (p / person :arg0-of (h / have-03 :arg1 (a2 / and :op1 (o / old :domain (p2 / person)) :op2 (p3 / person :arg0-of (h2 / have-03 :polarity - :arg1 (k2 / knife))) :op3 (p4 / person :arg0-of (h3 / have-03 :polarity - :arg1 (k3 / knife))) :op4 (p5 / person :arg0-of (h4 / have-03 :arg1 (k4 / knife))) :op5 (p6 / person :arg0-of (h5 / have-03 :arg1 (k5 / knife))))))))
(m / multi-sentence :snt1 (a / and :op1 (d / deal-01 :arg0 (i / i) :arg2 (p / person :arg0-of (t / tour-01) :mod (c / country :name (n / name :op1 "N-A"))) :frequency (o / often)) :op2 (s / see-01 :arg0 (i2 / i) :arg1 (c2 / content-01 :arg1 (p2 / person) :arg2 (p3 / person :arg0-of (t2 / tour-01) :mod (c3 / country :name (n2 / name :op1 "N-A")))))) :snt2 (c4 / content-01 :arg1 (p4 / person :arg0-of (t3 / tour-01) :mod (c5 / country)) :degree (v / very)))
(c / contrast-01 :arg1 (h / have-03 :arg0 (t / team :consist-of (m / man :quant 76 :arg1-of (i / include-91 :arg2 (m2 / man :quant 76 :mod (y / young :degree (m3 / most)) :mod (y2 / young :degree (m4 / most)))))) :arg1 (c2 / capable-01 :arg1 (t2 / team) :arg2 (s / saric :arg0 (t3 / team) :location (o / outside))) :concession (b / be-located-at-91 :arg1 (t4 / team :consist-of (m5 / man :quant 76)) :arg2 (p / person :arg0-of (p2 / play-01) :mod (y3 / young :degree (e / extreme))))) :arg2 (b2 / be-located-at-91 :arg1 (t5 / team :consist-of (m6 / man :quant 76)) :arg2 (s2 / stock :mod (p3 / person :arg0-of (p4 / play-01) :mod (y4 / young :degree (e2 / extreme))))))
(c / contrast-01 :arg1 (s / say-01 :arg0 (c2 / company :arg0-of (h / have-org-role-91 :arg1 (c3 / company))) :arg1 (c4 / contract-02 :arg1 (c5 / contract-02 :arg1 (c6 / contract-02) :arg1-of (c7 / cause-01 :arg0 (c8 / come-04 :arg1 (c9 / contract-02) :arg2 (f / force-04) :time (y / year :mod (t / this))))))) :arg2 (e / explain-01 :polarity - :arg0 (c10 / company) :arg1 (t2 / thing :arg0-of (c11 / cause-01 :arg1 (c12 / contract-02)))))
(r / respond-01 :arg0 (p / person :name (n / name :op1 "stephen" :op2 "michelsen") :arg0-of (h / have-org-role-91 :arg2 (d / director :mod (o / operate-01)))) :arg1 (c / consume-01 :arg0 (e / energy :mod (a / amphibious) :mod (u / ultra)) :arg1 (f / factory :quant (a2 / about :op1 600) :unit (m / megawatt)) :arg2 (f2 / factory :quant (a3 / about :op1 900) :unit (m2 / megawatt))) :time (e2 / early :op1 (d2 / date-entity :year (N / N-A)) :degree (m3 / more)))
(s / say-01 :arg0 (p / person :arg0-of (p2 / prosecute-01)) :arg1 (d / determine-01 :arg0 (p3 / person :arg0-of (p4 / prosecute-01)) :arg1 (t / this)))
(c / contrast-01 :arg2 (t / think-01 :arg0 (i / i) :arg1 (i2 / implies :arg0 (h / he) :arg1 (s / something :arg1-of (o / opposite-01)) :mod (e / enthusiasm))))
(t / tell-01 :arg0 (f / family :arg1-of (h / have-org-role-91 :arg0 (h2 / he) :arg2 (m / member))) :arg1 (e / expect-01 :arg1 (r / recover-02 :arg1 (c / child))) :arg2 (f2 / family :arg1-of (h3 / have-org-role-91 :arg0 (h4 / he) :arg2 (m2 / member))))
(a / and :op1 (g / got :arg0 (w / we) :time (m / month :mod (l / last))) :op2 (s / say-01 :arg0 (h / he) :arg1 (o / open-01 :arg1 (d / door :part-of (h2 / he)))) :mod (s2 / so :mod (e / even)))
(f / find-02 :arg0 (c / court) :arg1 (a / and :op1 (a2 / abuse-02 :arg0 (a3 / abuse-02 :arg1 (c2 / community :mod (r / religious-group :name (n / name :op1 "N-A"))) :arg1-of (r2 / ridiculous-02 :degree (v / very))) :arg1 (f2 / feel-01 :arg0 (c3 / community :mod (r3 / religious-group :name (n2 / name :op1 "N-A"))) :arg1 (f3 / feel-01 :arg0 (c4 / community :mod (r4 / religious-group :name (n3 / name :op1 "N-A"))) :arg1 (r5 / religion) :time (d / date-entity :decade (N / N-A))))) :op2 (a4 / allege-01 :arg1 (a5 / allege-01 :arg1 (a6 / allege-01)))))
(d / deal-01 :arg0 (d2 / deal-01 :arg1-of (c / come-01)) :arg2 (l / launch-01 :arg1 (r / right :mod (p / pollution)) :arg1-of (m / mean-01 :arg2 (a / and :op1 (l2 / level :ord (o / ordinal-entity :value 1) :mod (l3 / level :ord (o2 / ordinal-entity :value 1)) :mod (l4 / level :ord (o3 / ordinal-entity :value 1))) :op2 (l5 / level :mod (n / nation) :mod (l6 / level :mod (n2 / nation))) :location (p2 / province)))) :mod (a2 / also))
(s / say-01 :arg0 (p / person :name (n / name :op1 "N-A") :arg0-of (l / live-01 :location (a / apartment) :duration (t / temporal-quantity :quant (N / N-A) :unit (y / year)))) :arg1 (' / ' :arg1 (i / it) :arg1-of (r / resemble-01 :arg2 (f / fall-01 :arg1 (b / bomb) :arg4 (o / off)))))
FAILED_TO_PARSE#Not concept after open bracket.
(d / decide-01 :arg0 (s / side :quant 2) :arg1 (v / violate-01 :arg0 (a / and :op1 (p / person :arg0-of (h / have-org-role-91 :arg2 (h2 / head-of-state))) :op2 (p2 / person :arg0-of (h3 / have-org-role-91 :arg2 (h4 / head-of-state)))) :arg1 (r / reputation :poss (r2 / reputation :poss (r3 / reputation :poss (p3 / person))) :time (d2 / date-entity :decade (N / N-A)))) :time (t / try-02 :arg1 (p4 / person)))
(a / and :op1 (b / be-temporally-at-91 :arg1 (i / it) :arg2 (b2 / before :op1 (n / now) :quant (h / half :mod (h2 / half)))) :op2 (m / mouth :arg1 (m2 / mouth :mod (d / die-01))) :op3 (l / life :mod (n2 / new)) :time (n3 / now))
(w / wary :domain (a / and :op1 (r / rise-01 :arg1 (c / company :mod (o / oil) :mod (c2 / country :name (n / name :op1 "N-A")))) :op2 (r2 / rise-01 :arg1 (r3 / refinery :arg1-of (k / know-02 :arg2 (n2 / name :op1 (' / '')) :time (d / date-entity :decade (N / N-A))))) :mod (p / particular)) :mod (p2 / particular))
(a / and :op1 (p / possible-01 :arg1 (i / impact-01 :arg0 (f / factor :quant (m / many) :location (o / outside :op1 (c / court))) :arg1 (f2 / future) :mod (g / great))) :op2 (i2 / interest-01 :arg1 (h / he) :arg2 (e / enter-01 :arg0 (h2 / he) :arg1 (c2 / circle :mod (e2 / entertainment))) :degree (m2 / more) :time (n / now)))
(a / and :op2 (k / king :arg0 (p / person :arg0-of (l / lead-02 :arg1 (c / country :name (n / name :op1 "N-A")) :arg2 (g / group :quant 2012 :mod (o / olympic)))) :arg1 (p2 / person :arg0-of (l2 / lead-02 :arg1 (c2 / country :name (n2 / name :op1 "N-A")))) :mod (a2 / also)))
(a / and :op1 (p / produce-01 :arg0 (g / group) :arg1 (t / tree) :purpose (e / ensure-01 :arg0 (t2 / tree) :arg1 (a2 / affect-01 :arg0 (t3 / tree) :arg1 (t4 / tree) :arg1-of (l / long-03))) :mod (a3 / also)) :op2 (d / distribute-01 :arg0 (g2 / group) :arg1 (p2 / person :quant 15 :mod (s / school :mod (p3 / primary)) :arg0-of (s2 / study-01))) :op3 (p4 / provide-01 :arg0 (g3 / group) :arg1 (t5 / technical :arg1-of (l2 / long-03) :arg1-of (g4 / guide-01 :arg2 (a4 / and :op1 (p5 / person :arg0-of (t6 / teach-01)) :op2 (p6 / person :arg0-of (h / have-rel-role-91 :arg1 (p7 / person) :arg2 (p8 / parent))))))))
FAILED_TO_PARSE#Not concept after open bracket.
(a / and :op1 (r / result-01 :polarity - :arg1 (a2 / and :op1 (p / person :arg1-of (a3 / accuse-01)) :op2 (a4 / attitude :mod (g / good :degree (m / more)))) :arg2 (c / crime-02)) :op2 (s / suggest-01 :arg0 (p2 / person) :arg1 (r2 / recommend-01 :arg1 (g2 / give-01 :arg1 (t / thing :arg1-of (o / opine-01)) :arg2 (p3 / punish-01 :arg1 (t2 / thing))))))
(s / suck-01 :arg0 (a / and :op1 (p / person :arg0-of (h / have-org-role-91 :arg2 (p2 / professor))) :op2 (p3 / person :arg0-of (h2 / have-org-role-91 :arg2 (p4 / president :mod (v / vice)))) :op3 (p5 / person :arg0-of (h3 / have-org-role-91 :arg2 (p6 / president :mod (v2 / vice))))) :arg1 (a2 / and :op1 (c / college :mod (p7 / politics)) :op2 (c2 / college :mod (m / manage-01 :arg1-of (p8 / public-02)))))
(s / score-01 :arg1 (p / person :name (n / name :op1 "Jerry")) :arg2 (w / wing :mod (r / right)) :mod (a / again) :time (a2 / after :op1 (t / temporal-quantity :quant (N / N-A) :unit (m / minute) :mod (o / only))))
(m / maintain-01 :arg0 (t / they) :arg1 (r / record :mod (r2 / record) :mod (r3 / record)) :manner (a / absolute))
(p / possible-01 :arg1 (t / turn-01 :arg0 (y / you) :arg1 (y2 / you) :arg4 (o / or :op1 (p2 / pineapple) :op2 (d / dog) :op3 (c / character) :op4 (c2 / character))))
(s / say-01 :arg0 (p / person :arg0-of (a / anda)) :arg1 (p2 / possible-01 :polarity - :arg1 (a2 / accept-01 :arg0 (a3 / and :op1 (p3 / person :arg0-of (a4 / analyze-01)) :op2 (p4 / person :arg0-of (a5 / analyze-01))) :arg1 (t / thing :arg1-of (o / opine-01) :arg1-of (d / differ-02)))))
(m / multi-sentence :snt1 (m2 / meet-02 :arg0 (t / they) :arg1 (s / shop :mod (s2 / sandwich) :time (d / date-entity :decade (N / N-A))) :time (a / after :op1 (s3 / show-01 :arg0 (t2 / they) :arg1 (f / food :quant (s4 / some))))) :snt2 (o / open-01 :arg1 (s5 / swim-01 :location (a2 / area :mod (i / iron))) :arg1-of (s6 / simple-02)))
(c / cause-01 :arg0 (a / attack-01 :arg1 (a2 / and :op1 (m / man :mod (j / jin)) :op2 (p / person :arg0-of (i / injure-01 :arg1 (h / he))) :op3 (p2 / person :arg0-of (i2 / injure-01 :arg1 (h2 / he))) :op4 (p3 / person :arg0-of (i3 / injure-01 :arg1 (h3 / he))) :op5 (p4 / person :arg0-of (i4 / injure-01 :arg1 (h4 / he))))) :arg1 (d / deal :mod (g / great)))
(p / promote-01 :arg1 (c / culture :mod (s / strategy) :mod (s2 / strategy) :time (d / date-entity :decade (N / N-A))) :arg2 (a / and :op1 (p2 / person :quant 19) :op2 (p3 / person :quant 2013) :op3 (p4 / person :quant 23) :op4 (p5 / person :quant 23) :op5 (e / et-cetera)) :arg1-of (p6 / publish-01 :location (r / report :instrument-of (e2 / evaluate-01) :mod (m / military) :poss (c2 / country :name (n / name :op1 "N-A")))) :time (p7 / prior :op1 (t / this)))
(d / date :mod (c / case-03) :time (b / back :op1 (a / and :op1 (d2 / date-entity :decade (N / N-A)) :op2 (c2 / charge-05 :arg1 (o / other :mod (e / each)) :arg2 (o2 / other :mod (e2 / each))))) :arg1-of (c3 / claim-01 :arg0 (p / person :arg1-of (c4 / claim-01 :arg0 (o3 / other :mod (e3 / each))) :arg0-of (e4 / effective-04 :arg1 (w / work-01 :arg1 (l / laboratory) :time (d3 / date-entity :decade (N2 / N-A)))))))
(m / multi-sentence :snt1 (m2 / make-02 :arg0 (i / it) :arg1 (f / flattered :arg0 (i2 / i) :arg1 (i3 / i))) :snt2 (s / say-01 :arg0 (i4 / i) :arg1 (c / contrast-01 :arg1 (s2 / say-01 :arg0 (i5 / i) :arg1 (c2 / contrast-01 :arg1 (b / bike :mod (b2 / bike)) :arg2 (a / age-01 :arg2 (t / temporal-quantity :quant (N / N-A) :unit (y / year))))))))
(a / and :op1 (m / meet-01 :arg0 (p / person :quant 2014) :arg1 (n / need-01 :arg0 (t / team :mod (p2 / police) :mod (p3 / police)) :arg1 (p4 / patrol-01 :arg0 (t2 / team) :arg1 (a2 / attract-01 :arg1 (t3 / team) :mod (m2 / main))))) :op2 (h / help-01 :arg0 (t4 / team) :arg1 (p5 / person :arg0-of (v / visit-01))) :op3 (g / guide-01 :arg0 (t5 / team) :arg1 (p6 / person)))
(l / launch-01 :arg1 (s / series :quant (s2 / series)) :time (b / before :op1 (l2 / long)) :mod (a / also))
(m / multi-sentence :snt1 (e / expect-01 :arg0 (i / i) :arg1 (c / continue-01 :arg0 (f / factory :mod (p / portland)) :arg1 (o / operate-01 :arg0 (f2 / factory)))) :snt2 (s / say-01 :arg0 (v / venture :mod (j / joint)) :arg1 (c2 / continue-01 :arg1 (p2 / produce-01 :arg0 (r / refinery) :arg1 (d / demand-01 :arg1 (e2 / electricity))))))
(p / project :domain (p2 / project :mod (i / infrastructure) :beneficiary (p3 / person :mod (m / most))) :beneficiary (p4 / person :mod (e / ethnic-group)) :arg1-of (r / resemble-01 :arg2 (o / olympics)))
(a / and :op1 (k / kill-01 :arg1 (w / woman)) :op2 (k2 / kill-01 :arg1 (w2 / woman)))
(t / tell-01 :arg0 (l / lawyer) :arg1 (a / and :op1 (b / be-located-at-91 :arg1 (i / investigate-01 :arg2-of (c / criminal-03)) :arg2 (w / way) :time (n / now)) :op2 (p / process-02 :arg1 (e / event :mod (r / routine)) :mod (r2 / routine) :domain (t2 / this))) :arg2 (l2 / lawyer))
(r / result-01 :arg1 (t / temperature :quant (f / few :op1 (v / volume-quantity :quant (N / N-A) :unit (g / gallon)))) :arg2 (f2 / few :op1 (t2 / temporal-quantity :quant (N2 / N-A) :unit (m / month)) :mod (a / actual)) :compared-to (t3 / thing :arg2-of (r2 / result-01 :arg1 (a2 / aircraft-type :name (n / name :op1 "N-A")))))
(c / compare-01 :arg1 (s / star :arg1-of (c2 / compare-01 :arg2 (d / dancer :mod (l / large :degree (m / more))))) :arg2 (d2 / dancer :mod (s2 / small :degree (m2 / more) :compared-to (d3 / dancer :mod (s3 / small :degree (m3 / more))))))
(i / italian :arg0 (p / person :mod (p2 / professional) :mod (p3 / professional) :ord (o / ordinal-entity :value 6) :arg0-of (s / score-01 :arg1 (m / milestone :mod (t / this)) :arg2 (f / field :mod (p4 / plain)))) :ord (o2 / ordinal-entity :value 6))
(u / use-01 :arg0 (i / it) :arg1 (a / and :op1 (s / steel :quant (m / mass-quantity :quant (N / N-A) :unit (t / ton :mod (m2 / mass-quantity :quant (N2 / N-A) :unit (t2 / ton))))) :op2 (c / concrete :quant (m3 / mass-quantity :quant (N3 / N-A) :unit (t3 / ton))) :op3 (c2 / concrete :quant 46)))
(c / contrast-01 :arg1 (g / game :quant 1 :mod (s / still) :mod (s2 / still)) :arg2 (c2 / contest :mod (m / much :polarity - :degree (s3 / so)) :compared-to (a / and :op1 (b / byers :arg1 (a2 / and :op1 (b2 / byers) :op2 (o / other))) :op2 (p / pressure :arg1 (t / thing :arg1-of (e / expect-01) :mod (g2 / great))))))
(m / multi-sentence :snt1 (c / claim-01 :arg0 (p / person :quant 1 :arg0-of (u / use-01) :mod (t / twitter)) :arg1 (h / hope-01 :arg0 (p2 / person) :arg1 (a / and :op1 (s / solo) :op2 (c2 / carpenter :mod (j / jennifer))) :mod (a2 / also))) :snt2 (l / look-02 :arg0 (c3 / carpenter :mod (' / '')) :arg1 (s2 / same-01 :mod (e / exact)) :mod (a3 / actual)))
(m / mcdonald :arg1 (b / byron :mod (n / narrator) :poss (w / woman)) :time (e / end-01 :arg1 (f / freestyle :poss (w2 / woman))) :time (t / think-01 :arg0 (h / he) :arg1 (t2 / turned :arg1 (m2 / microphone :poss (h2 / he)))))
(a / and :op2 (f / face-01 :arg0 (w / we) :arg1 (w2 / woman)))
(p / possible-01 :arg1 (a / and :op1 (s / submit-01 :arg0 (m / model) :arg1 (p2 / photo) :arg2 (o / online)) :op2 (a2 / apply-01 :arg0 (m2 / model) :arg2 (r / recruit-01 :arg0 (p3 / public) :arg1 (a3 / and :op1 (a4 / angeles) :op2 (y / york :mod (n / new))) :location (p4 / person)))))
(h / have-03 :arg0 (c / country :name (n / name :op1 "China") :arg1-of (i / include-91 :arg2 (p / person :arg0-of (p2 / pilot-01)))) :arg1 (a / and :op1 (r / region :mod (- / -lrb-)) :op2 (r2 / region :quant 14 :mod (o / other)) :op3 (r3 / region :quant 14 :mod (o2 / other))) :purpose (i2 / implement-01 :arg0 (c2 / country) :arg1 (i3 / implement-01 :mod (f / full))) :time (n2 / now))
(r / report)
(e / estimate-01 :arg0 (p / person :arg0-of (c / cross-02 :arg1 (r / red)) :mod (c2 / country :name (n / name :op1 "N-A"))) :arg1 (h / have-03 :polarity - :arg0 (p2 / person :arg0-of (h2 / have-03 :arg1 (p3 / person :quant (b / between :op1 100 :op2 60)))) :arg1 (p4 / person :quant (b2 / between :op1 100 :op2 60) :arg1-of (i / include-91 :arg2 (p5 / person :quant 60 :arg1-of (i2 / include-91 :arg2 (p6 / person :quant 60 :arg0-of (r2 / reside-01 :arg1 (p7 / person :arg0-of (r3 / reside-01 :arg1 (c3 / community :mod (n2 / nearby)))))) :duration (t / temporary))))) :duration (t2 / temporary)))
(s / say-01 :arg0 (t / thing :arg1-of (r / require-01 :arg0 (a / and :op1 (t2 / thing :arg1-of (r2 / require-01 :arg0 (m / mainland :part-of (c / customs)))) :op2 (t3 / thing :arg1-of (r3 / require-01 :arg0 (j / journeys :arg0 (m2 / mainland))))))) :arg1 (a2 / and :op1 (p / possible-01 :arg1 (s2 / sentence-01 :arg1 (p2 / person :arg0-of (h / have-org-role-91 :arg1 (m3 / mainland :part-of (c2 / country :name (n / name :op1 "N-A"))) :arg2 (n2 / non-travellers))) :arg2 (i / imprison-01 :arg1 (p3 / person) :arg2 (g / good :poss (p4 / person))))) :op2 (c3 / contrary-01 :arg1 (p5 / person) :arg2 (d / declare-02 :arg1 (p6 / person)) :time (t4 / time :time-of (a3 / and :op1 (e / enter-01 :arg0 (p7 / person)) :op2 (o / offload-01 :arg2 (p8 / person)))))))
(p / possible-01 :arg1 (i / import-01 :arg0 (' / '' :name (n / name :op1 ('2 / '')) :mod (r / refinery)) :arg1 (o / oil :mod (c / crude)) :arg2 (a / and :op1 (i2 / import-01 :arg1 (o2 / oil) :arg1-of (l / low-04)) :op2 (o3 / oil :mod (c2 / crude) :poss (c3 / country)) :op3 (q / quality :poss (p2 / product :mod (o4 / oil) :poss (c4 / country)))) :time (a2 / after :op1 (o5 / obtain-01 :arg0 (c5 / country) :arg1 (p3 / permit-01 :arg1 (i3 / import-01)))) :mod (a3 / also)))
(a / and :op1 (b / be-located-at-91 :arg1 (p / person :arg0-of (h / have-rel-role-91 :arg1 (p2 / person :mod (c / country :name (n / name :op1 "N-A"))) :arg2 (u / uncle))) :arg2 (c2 / crash-01 :arg1 (p3 / plane) :location (a2 / airport :mod (i / international)))) :op2 (w / win-01 :arg0 (w2 / win-01 :time (w3 / week :mod (t / this))) :arg1 (r / rate-entity-91 :arg1 (m / monetary-quantity :quant 1 :unit (d / dollar)) :arg2 (v / volume-quantity :quant (N / N-A) :unit (g / gallon))) :location (a3 / airport :mod (s / same))))
(s / simple-02 :polarity - :arg1 (c / capacity) :purpose (c2 / control-01 :arg1 (c3 / control-01 :arg2-of (t / total-01))) :mod (a / after-all))
(m / multi-sentence :snt2 (e / enjoy-01 :arg0 (a / account :mod (f / foreign) :location (l / line)) :arg1 (o / offer-01 :mod (t / this)) :mod (a2 / also)) :snt3 (e2 / enjoy-01 :arg0 (p / person :mod (e3 / elderly)) :arg1 (o2 / offer-01 :mod (t2 / this))))
(i / important :degree (g / great) :domain (l / lead-02 :arg0 (p / person :arg0-of (l2 / lead-02 :arg1 (p2 / police :mod (p3 / public)))) :arg1 (o / organization :mod (i2 / immediate) :arg0-of (h / have-org-role-91 :arg1 (p4 / police))) :arg2 (o2 / organization :mod (i3 / immediate)) :purpose (l3 / launch-01 :arg0 (p5 / person) :arg1 (i4 / investigate-01))) :time (a / after :op1 (c / case-03)))
(m / multi-sentence :snt1 (o / oh :mode (e / expressive)) :snt2 (b / brought :arg1 (s / sports :ord (o2 / ordinal-entity :value 1) :mod (p / professional) :mod (p2 / professional)) :time (y / year :mod (l / last))))
(c / contrast-01 :arg1 (l / likely-01 :arg1 (a / and :op1 (f / fall-01 :arg1 (d / data) :arg4 (f2 / further)) :op2 (t / take-01 :arg0 (d2 / data) :arg1 (b / burden-01 :arg1 (d3 / data)) :degree (f3 / further))) :time (s / season :arg1-of (r / regular-03))) :arg2 (a2 / and :op1 (e / easy-05 :arg1 (d4 / data) :degree (f4 / further)) :op2 (t2 / take-01 :arg0 (h / he) :arg1 (t3 / thing :arg1-of (i / include-91 :arg2 (t4 / thing :arg1-of (b2 / burden-01 :arg2 (o / owen))))) :mod (s2 / still))))
(s / say-01 :arg0 (i / introduce-02) :arg1 (a / and :op1 (f / fall :arg1 (i2 / image :mod (l / league) :mod (l2 / league :mod (b / bundesliga)) :poss (a2 / and :op1 (p / person :arg0-of (h / have-org-role-91 :arg2 (a3 / ambassador))) :op2 (p2 / person :arg0-of (h2 / have-org-role-91 :arg2 (a4 / ambassador))) :op3 (p3 / person :arg0-of (h3 / have-org-role-91 :arg2 (a5 / ambassador))) :op4 (p4 / person :arg0-of (h4 / have-org-role-91 :arg2 (a6 / ambassador))) :op5 (p5 / person :arg0-of (h5 / have-org-role-91 :arg2 (a7 / ambassador))))) :location (a8 / and :op1 (i3 / island :name (n / name :op1 "N-A")) :op2 (c / continent :name (n2 / name :op1 "N-A"))) :purpose (l3 / launch-01 :arg0 (a9 / and) :arg1 (t / tour :mod (p6 / product :name (n3 / name :op1 "N-A"))))) :op2 (o / open-01 :arg0 (a10 / and) :arg1 (t2 / tour :name (n4 / name :op1 (l4 / legendary)) :mod (l5 / legendary)))))
(a / and :op1 (h / have-03 :arg0 (i / i) :arg1 (c / cancer :mod (b / bladder))) :op2 (o / operated :arg0 (t / they) :arg1 (i2 / i)))
(o / or :op1 (e / equal-01 :arg1 (i / index :mod (p / person :arg0-of (c / consume-01))) :arg2 (p2 / product-of :op1 2016 :op2 101)) :op2 (r / rate-entity-91 :arg1 (p3 / percentage-entity :value (N / N-A)) :arg2 (t / temporal-quantity :quant (N2 / N-A) :unit (y / year))) :op3 (r2 / rate :mod (i2 / inflation :mod (m / monthly))))
(w / write-01 :arg0 (p / person :name (n / name :op1 "gregory" :op2 "hucker") :arg0-of (a / analyze-01 :arg1 (i / intelligence)) :mod (m / more :compared-to (b / before :op1 (n2 / now) :quant (m2 / more-than :op1 (t / temporal-quantity :quant (N / N-A) :unit (y / year)))))) :arg1 (c / criticize-01 :arg0 (p2 / person :arg0-of (a2 / analyze-01 :arg1 (i2 / intelligence)) :mod (c2 / central)) :arg1 (a3 / article :mod (r / research-01)) :time (b2 / before :op1 (n3 / now) :quant (m3 / more-than :op1 (t2 / temporal-quantity :quant (N2 / N-A) :unit (y2 / year))))) :time (w2 / write-01 :arg0 (p3 / person :arg0-of (a4 / analyze-01 :arg1 (c3 / command-02)) :mod (c4 / central)) :arg1 (a5 / and :op1 (s / send-01 :arg0 (p4 / person) :arg1 (t3 / troop :mod (s2 / small-scale)) :arg2 (c5 / country)) :op2 (c6 / consider-01 :arg0 (p5 / person) :arg1 (d / declare-02 :arg1 (i3 / invade-01 :quant 2003)) :mod (l / little)))))
(i / interest-01 :arg1 (n / note-01 :arg1 (r / respond-01 :arg0 (g / government-organization :arg0-of (g2 / govern-01)) :arg1 (t / thing :arg1-of (r2 / respond-01 :arg0 (p / person :arg0-of (h / hunger-01)) :arg2 (p2 / person :arg0-of (h2 / hunger-01))) :example (p3 / person :arg0-of (h3 / have-org-role-91 :arg2 (p4 / president)))) :example (p5 / person :arg0-of (h4 / have-org-role-91 :arg2 (p6 / president)))) :arg1-of (c / cause-01 :arg0 (p7 / possible-01 :polarity - :arg1 (c2 / control-01 :arg0 (i2 / i) :arg1 (a / attitude :mod (' / '')))))) :mod (p8 / particular))
(a / and :op2 (i / ibaby :arg0 (a2 / and :op1 (p / person :arg0-of (h / have-org-role-91 :arg1 (o / organization :mod (g / grass-roots)) :arg2 (p2 / person :arg1-of (e / expert-01)))) :op2 (p3 / person :arg0-of (h2 / have-org-role-91 :arg2 (d / doctor))) :op3 (p4 / person :arg0-of (h3 / have-org-role-91 :arg2 (d2 / doctor))) :op4 (p5 / person :arg0-of (h4 / have-org-role-91 :arg2 (d3 / doctor))) :op5 (p6 / person :arg0-of (h5 / have-org-role-91 :arg2 (d4 / doctor)))) :arg1 (f / form :mod (b / break-01 :arg1 (r / restrict-01 :mod (b2 / brief)))) :time (e2 / end-01 :arg1 (o2 / organization :poss (p7 / person :arg1-of (e3 / expert-01))))))
(a / and :op1 (l / lack-01 :polarity - :arg0 (l2 / lack-01 :arg1 (p / professionalism :location (a2 / and :op1 (c / company :mod (i / internet)) :op2 (c2 / company :mod (d / data))))) :arg1 (e / enter-01 :arg0 (a3 / and) :arg1-of (s / same-01))))
(m / multi-sentence :snt1 (c / cause-01 :arg1 (n / need-01 :arg0 (p / person :location (i / in-front-of :op1 (p2 / person :arg0-of (h / have-rel-role-91 :arg1 (c2 / child) :arg2 (c3 / child))))) :arg1 (m2 / model :mod (g / good) :mod (g2 / good)))) :snt2 (p3 / possible-01 :arg1 (h2 / help-01 :arg0 (t / this) :arg1 (p4 / person :arg0-of (h3 / have-rel-role-91 :arg1 (p5 / person) :arg2 (c4 / child))) :arg2 (s / shape :arg0 (p6 / person) :arg1 (m3 / mind :mod (g3 / good :degree (m4 / more))))) :op3 (l / let-01 :arg0 (p7 / person) :arg1 (g4 / good :degree (m5 / more) :domain (p8 / person))) :arg1-of (d / direct-02 :polarity -)))
(s / sign-02 :arg0 (p / person :mod (c / country :name (n / name :op1 "N-A"))) :arg1 (c2 / contract :quant 2 :mod (m / monetary-quantity :quant (N / N-A) :unit (d / dollar))) :time (s2 / since :op1 (d2 / decide-01 :arg0 (p2 / person) :arg1 (r / regain-01 :arg0 (p3 / person) :arg1 (c3 / cavaliers :arg1 (p4 / person))))))
(s / say-01 :arg0 (t / thing :arg1-of (s2 / state-01) :mod (j / joint)) :arg1 (p / possible-01 :arg1 (c / confirm-01 :arg0 (a / and :op1 (g / group :consist-of (w / wood)) :op2 (u / unite-01) :op3 (u2 / union :mod (r / rmt))) :arg1 (a2 / agree-01 :arg0 (a3 / and) :arg1 (r2 / restart-01 :arg0 (w2 / we) :arg1 (p2 / process-02 :arg1 (d / dispute-01 :arg2 (d2 / dispute-01)) :time (c2 / current)))))))
(s / say-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg2 (p2 / pleiades))) :arg1 (l / laid :arg0 (p3 / person) :arg1 (g / groundwork) :arg2 (t / theory :topic (t2 / theory :mod (t3 / two-way)) :beneficiary (a / and :op1 (p4 / person :mod (y / young)) :op2 (s2 / star :arg1-of (a2 / age-01))))))
(a / and :op1 (m / make-01 :arg0 (p / person :quant 3) :arg1 (c / career :mod (c2 / career))) :op2 (w / win-01 :arg0 (w2 / win-01 :quant 000 :arg0 (p2 / person)) :arg2 (s / succeed-01 :arg0 (p3 / person))))
(w / witness-01 :arg0 (w2 / we :quant (a / all)) :arg1 (w3 / work-01 :arg1 (e / engineer-01) :mod (e2 / engineer-01) :arg0-of (u / use-01 :arg1 (a2 / and :op1 (c / concrete) :op2 (s / steel) :quant (m / more-than :op1 (m2 / mass-quantity :quant (N / N-A) :unit (t / ton)))) :purpose (c2 / construct-01 :arg1 (b / bridge)))))
(c / cause-01 :arg1 (p / possible-01 :arg1 (s / see-01 :arg1 (a / and :op1 (m / man :arg1-of (a2 / arm-01) :quant (n / number) :location (s2 / state :mod (w / war))) :op2 (p2 / person :arg0-of (h / have-org-role-91 :arg1 (p3 / police :mod (p4 / philadelphia)) :arg2 (g / ginaldi))) :op3 (p5 / person :arg0-of (h2 / have-org-role-91 :arg1 (p6 / police :mod (p7 / philadelphia)) :arg2 (g2 / ginaldi))) :op4 (p8 / person :arg0-of (h3 / have-org-role-91 :arg1 (p9 / police :mod (p10 / philadelphia)) :arg2 (g3 / ginaldi))) :op5 (p11 / person :arg0-of (h4 / have-org-role-91 :arg1 (p12 / police :mod (p13 / philadelphia)) :arg2 (g4 / ginaldi)))))))
(c / call-03 :arg0 (h / he) :arg1 (i / increase-01 :arg0 (h2 / he) :arg1 (a / access-01 :arg0 (m / media) :arg1 (a2 / and :op1 (d / document :mod (c2 / conference)) :op2 (t / thing :arg1-of (d2 / decide-01 :arg0 (o / or :op1 (c3 / committee :mod (u / unofficial)) :op2 (g / group :arg0-of (w / work-01)))))))) :arg2 (m2 / media))
(p / pursue-01 :arg0 (p2 / person :mod (c / country :name (n / name :op1 "N-A")) :arg0-of (l / look-02 :arg1 (p3 / princess :arg1 (k / kate :location (o / olympics :quant 2016 :mod (r / rio)))))) :arg1 (a / audience) :manner (h / heavy) :time (w / week :mod (t / this)))
(a / and :op2 (t / think-01 :arg0 (i / i) :arg1 (a2 / and :op1 (l / long-03 :arg1 (i2 / it) :degree (v / very)) :op2 (t2 / tell-01 :arg0 (p / person :arg0-of (b / brady)) :arg1 (p2 / post :mod (h / huffington))))))
(s / say-01 :arg0 (c / candidate :poss (p / person :name (n / name :op1 "Donald" :op2 "Trump") :arg0-of (h / have-org-role-91 :arg1 (p2 / political-party :name (n2 / name :op1 "Republican")) :arg2 (p3 / president)))) :arg1 (a / and :op1 (c2 / candidate :poss (p4 / person :arg0-of (h2 / have-org-role-91 :arg2 (p5 / president)))) :op2 (p6 / person :arg0-of (h3 / have-org-role-91 :arg1 (p7 / political-party :name (n3 / name :op1 "Republican")) :arg2 (p8 / president :mod (v / vice)))) :op3 (p9 / person :arg0-of (h4 / have-org-role-91 :arg1 (g / government-organization :name (n4 / name :op1 "N-A")) :arg2 (p10 / president))) :op4 (p11 / person :arg0-of (h5 / have-org-role-91 :arg1 (g2 / government-organization :name (n5 / name :op1 "N-A")) :arg2 (p12 / president)))))
(m / mission :poss (c / country :poss (w / we)) :domain (a / and :op1 (a2 / achieve-01 :arg0 (c2 / country :poss (w2 / we)) :arg1 (a3 / and :op1 (c3 / circular) :op2 (l / land-01) :op3 (p / patrol-01 :arg0 (c4 / country))) :time (e / ever :polarity -)) :op2 (p2 / propose-01 :arg1 (a4 / achieve-01 :arg1 (a5 / and :op1 (p3 / person :mod (c5 / circle)) :op2 (l2 / land)) :time (o / once :op1 (f / fail-01 :arg1 (l3 / land-01)))))))
(s / say-01 :arg0 (h / he) :arg1 (s2 / serve-01 :arg0 (h2 / he) :arg1 (t / thing :arg1-of (b / base-02 :arg2 (c / commission :arg0-of (u / up :arg1 (c2 / case-03 :arg1 (c3 / case-03 :mod (p / party :mod (i / inappropriate))) :time (p2 / past)))))) :time (p3 / past)) :op3 (u2 / use-01 :arg0 (c4 / commission) :arg1 (e / experience-01 :arg1 (h3 / huntsman :arg1-of (r / relevant-01)))))
(c / contrast-01 :arg1 (s / shy :arg1 (p / person :arg0-of (e / enter-01 :arg1 (h / home :mod (n / new))) :arg0-of (e2 / enter-01 :arg1 (h2 / home :mod (n2 / new)) :time (f / first)))) :arg2 (b / become-01 :arg1 (p2 / person) :arg2 (a / and :op1 (r / rational :polarity -) :op2 (r2 / rolling :location (w / water)) :op3 (e3 / eat-01 :arg0 (p3 / person) :arg1 (g / grapes :prep-with (b2 / beak :mod (n3 / new))))) :time (s2 / soon)))
(a / and :op1 (p / possible-01 :arg1 (r / reduce-01 :arg0 (t / this) :arg1 (r2 / risk-01 :arg0 (t2 / this) :arg2 (h / harm-01 :arg0 (h2 / harm-01 :arg1 (s / sex) :mod (f / further)) :arg1 (h3 / harm-01 :arg1 (s2 / sex) :degree (f2 / further)))))) :op2 (t3 / tell-01 :arg0 (p2 / person :arg0-of (h4 / have-org-role-91 :arg1 (a2 / agency :mod (n / news)) :arg2 (l / langger))) :arg1 (t4 / this)))
(a / and :op2 (g / grow-01 :arg1 (n / number :quant-of (p / population :arg1-of (n2 / natural-03))) :mod (n3 / new) :time (p2 / period :mod (s / same))))
(a / and :op1 (c / crash-01 :arg1 (p / person :arg0-of (h / have-rel-role-91 :arg1 (p2 / person :mod (c2 / country :name (n / name :op1 "N-A"))) :arg2 (u / uncle))) :location (l / location :name (n2 / name :op1 "dubai" :op2 "international" :op3 "airport")) :time (w / week :mod (l2 / last))) :op2 (m / make-01 :arg0 (p3 / person) :arg1 (t / tube :quant (m2 / monetary-quantity :quant 1 :unit (d / dollar))) :location (a2 / airport :mod (s / same)) :time (w2 / week :mod (t2 / this))))
(a / and :op1 (c / collect-01 :arg1 (t / tolls :mod (b / basic)) :arg2 (m / monetary-quantity :quant 1.75 :unit (y / yuan :mod (r / renminbi)))) :op2 (c2 / collect-01 :arg1 (t2 / tolls :mod (m2 / mileage)) :arg2 (m3 / monetary-quantity :quant 0.05 :unit (y2 / yuan :mod (r2 / renminbi)))))
(a / and :op1 (b / be-located-at-91 :arg1 (p / platform :mod (s / social) :mod (o / online)) :arg2 (c / circle :mod (c2 / communicate-01))) :op2 (e / establish-01 :arg0 (p2 / platform) :arg1 (s2 / sense-01 :arg0 (p3 / person) :arg1 (l / loneliness))) :location (s3 / surface))
(t / tell-01 :arg0 (d / doctor) :arg1 (l / likely-01 :arg1 (c / cure :arg1 (b / bronchitis :mod (c2 / chronic)) :degree (l2 / less))) :arg2 (p / possible-01 :arg1 (e / eased :arg1 (u / use-01 :arg1 (d2 / drug)))))
(s / say-01 :arg0 (f / forecast-01 :arg0 (f2 / forecast-01 :arg0 (d / department :part-of (a / and :op1 (d2 / department :mod (t / trade-01)) :op2 (d3 / department :mod (d4 / develop-02 :arg1 (e / economy))))))) :arg1 (r / reach-01 :arg0 (g / grow-01 :arg1 (e2 / economy :poss (c / country))) :arg1 (p / percentage-entity :value (N / N-A)) :time (a2 / above :op1 (l / level :mod (t2 / this)) :mod (b / basic))))
(a / and :op1 (c / change-01 :arg1 (m / monetary-quantity :quant (N / N-A) :unit (y / yuan)) :time (s / since :op1 (i / introduce-02 :arg1 (r / reform-01 :arg1 (r2 / remittance) :mod (n / new)))) :time (s2 / since :op1 (i2 / introduce-02 :arg1 (r3 / reform-01 :arg1 (r4 / remittance) :mod (n2 / new))))) :op2 (v / value-01 :arg1 (p / percentage-entity :value (N2 / N-A)) :arg2 (t / temporal-quantity :quant (N3 / N-A) :unit (y2 / year)) :time (m2 / middle :op1 (y3 / year))))
(a / and :op1 (a2 / accept-01 :arg0 (f / fund-01 :arg1 (m / money) :mod (i / international)) :arg1 (t / thing :arg2-of (f2 / fund-01 :arg1 (m2 / money)) :mod (i2 / international)) :time (y / year :mod (t2 / this))) :op2 (a3 / accept-01 :arg0 (f3 / fund-01 :arg1 (m3 / money) :mod (i3 / international)) :arg1 (t3 / thing :arg2-of (r / right-05 :arg1 (r2 / rights :arg1 (r3 / right :arg1-of (s / special-02)) :arg1-of (s2 / special-02))))) :time (y2 / year :mod (t4 / this)))
(s / say-01 :arg0 (s2 / she) :arg1 (p / possible-01 :arg1 (s3 / see-01 :arg1 (c / ceremony :topic (a / and :op1 (s4 / scale :mod (s5 / such)) :op2 (w / worship :arg1-of (o / organize-01)) :mod (s6 / scale :mod (s7 / such))))) :prep-in (m / metropolis :mod (b / busy :mod (s8 / such)) :mod (s9 / such))))
(s / say-01 :arg0 (h / he) :arg1 (p / participate-01 :arg0 (t / team :quant 24 :arg2-of (i / include-91 :arg1 (t2 / team :quant 24 :arg0-of (p2 / participate-01 :arg1 (a / association :mod (o / only :polarity -))) :arg2-of (i2 / include-91 :arg1 (a2 / association :mod (o2 / only :polarity -)))))) :arg1 (c / cooperate-01 :arg0 (s2 / school :quant (s3 / some)) :arg2 (a3 / allow-01 :arg0 (p3 / person :arg0-of (s4 / study-01)) :arg1 (p4 / participate-01 :arg0 (p5 / person))) :mod (a4 / also))) :mod (a5 / also))
(u / understand-01 :arg1 (i / include-01 :arg1 (t / thing :arg2-of (l / list-01 :arg1 (h / heritage :name (n / name :op1 (' / '')) :mod (h2 / heritage :mod (c / culture)) :name (n2 / name :op1 ('2 / '')) :mod (h3 / heritage :name (n3 / name :op1 ('3 / '')) :mod (h4 / heritage :mod (c2 / culture)) :mod (n4 / nation))))) :arg2 (t2 / thing :arg2-of (l2 / list-01 :arg1 (h5 / heritage :mod (c3 / culture) :mod (c4 / culture))))))
(s / say-01 :arg0 (p / person :name (n / name :op1 "mr" :op2 "coe")) :arg1 (c / common :polarity - :domain (i / it) :location (t / table :mod (d / dinner))))
(f / focus-01 :arg0 (a / and :op1 (c / company :mod (h / healthcare :mod (i / internet)) :quant (m / many)) :op2 (c2 / company :arg0-of (t / tillage :arg1 (s / side :mod (b / both))) :arg1-of (d / deep-02))) :arg2 (i2 / i) :time (i3 / initial))
(w / want-01 :arg0 (p / person :mod (c / country :name (n / name :op1 "Israel"))) :arg1 (f / find-01 :arg0 (p2 / person) :arg1 (t / thing :arg2-of (l / list-01 :arg1 (m / morality :mod (p3 / phone) :arg1-of (p4 / provide-01 :arg0 (h / hotel)))))) :time (s / stay-01 :arg1 (p5 / person) :time (r / recent)))
(s / say-01 :arg0 (n / newspaper) :arg1 (a / add-02 :arg1 (c / code :poss (c2 / country :name (n2 / name :op1 "Israel"))) :arg2 (l / list-01)) :mod (a2 / also))
(m / multi-sentence :snt1 (r / resemble-01 :arg1 (i / it) :arg2 (l / london :arg1 (i2 / it))) :snt2 (s / say-01 :arg0 (h / he) :arg1 (p / platform)))
(a / apply-01 :arg0 (f / facility :name (n / name :op1 "N-A")) :arg1 (a2 / apply-01 :arg1 (e / execute-01)) :time (a3 / after :op1 (f2 / fail-01 :arg1 (j / judge-01) :arg2 (f3 / force-04))) :time (a4 / after :op1 (f4 / fail-01 :arg1 (h / he) :arg2 (c / comply-01 :arg0 (h2 / he) :arg1 (t / thing :arg2-of (s / sentence-01))))))
(p / possible-01 :arg1 (f / face-01 :arg0 (p2 / person :quant 2000 :arg0-of (w / work-01) :source (p3 / plant :name (n / name :op1 (a / alcoa) :op2 (p4 / portland)))) :arg1 (e / employ-01 :polarity -)))
(s / say-01 :arg0 (c / company) :arg1 (r / reduce-01 :arg0 (c2 / company) :arg1 (m / monetary-quantity :quant 187 :unit (y / yuan :mod (r2 / renminbi)) :arg1-of (a / activity-06 :arg0 (c3 / company)))))
(r / resemble-01 :arg1 (m / model :arg1-of (s / simulation :arg2 (a / and :op1 (s2 / scientist :mod (p / previous)) :op2 (s3 / scientist :mod (p2 / previous))))) :arg2 (m2 / model))
(r / resign-01 :mode (i / imperative) :arg0 (y / you) :arg1 (c / coach :mod (a / avalanche)))
(e / end-01 :arg1 (c / crisis))
(r / ridiculed :arg1 (i / it) :condition (a / aspire-01 :arg0 (w / we) :arg1 (b / become-01 :arg1 (w2 / we) :arg2 (b2 / bank :mod (b3 / big)) :prep-with (b4 / brand :quant (l / lot)))))
(s / suppose-02 :arg1 (h / he) :arg2 (s2 / start-01 :arg0 (h2 / he) :arg1 (h3 / have-org-role-91 :arg0 (h4 / he) :arg1 (s3 / school :ord (o / ordinal-entity :value 1)) :arg2 (s4 / school :mod (p / primary) :arg1-of (l / local-02)))))
(r / resemble-01 :arg1 (t / team) :arg2 (t2 / team :mod (c / country :name (n / name :op1 "N-A"))) :time (f / final))
(e / expand-01 :arg0 (w / we) :arg1 (d / detroit :arg0 (w2 / we) :arg1 (h / hometown :arg0 (h2 / hometown :poss (i / i)) :arg2 (a / and :op1 (p / provide-01 :arg0 (p2 / person :mod (y / young) :arg0-of (d2 / deserve-01 :arg1 (o / opportunity :arg1-of (l / learn-01) :mod (t / this)))) :arg1 (o2 / opportunity :arg1-of (l2 / learn-01) :mod (t2 / this))) :op2 (b / benefit-01 :arg0 (s / sport :arg1-of (r / remarkable-02) :mod (t3 / this)) :arg1 (p3 / person))))) :location (c / country :name (n / name :op1 "N-A")))
(w / want-01 :arg0 (p / person :mod (c / country :name (n / name :op1 "N-A"))) :arg1 (g / get-03 :arg1 (p2 / person) :arg2 (p3 / pay-01 :arg0 (d / doctor :quant 54,000 :mod (j / junior) :arg1-of (i / involve-01 :arg2 (c2 / contract-02))) :time (w2 / weekend :mod (g2 / good :degree (m / more))))))
(m / make-02 :arg0 (c / culture :mod (c2 / computer)) :arg1 (d / defraud-01 :arg0 (a / and :op1 (d2 / defraud-01 :arg1 (a2 / area :mod (r / religious-group :name (n / name :op1 "N-A")))) :op2 (d3 / defraud-01 :location (a3 / area :mod (r2 / religious-group :name (n2 / name :op1 "N-A")))))))
(e / easy-05 :arg1 (a / accuse-01 :arg0 (l / law) :arg1 (p / person :arg0-of (c / concern-01 :arg1 (p2 / person :mod (c2 / country :name (n / name :op1 "N-A"))))) :arg1-of (a2 / accord-02 :arg2 (b / bias-01 :arg1 (p3 / person)))) :degree (m / more))
(s / strengthen-01 :arg1 (t / train-01) :purpose (e / ensure-01 :arg1 (e2 / enforce-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg2 (s2 / staff))) :arg1 (r / require-01 :arg1 (g / go-02 :arg0 (p2 / person) :arg4 (v / vote-01 :arg0 (p3 / person) :arg1 (p4 / person :arg0-of (v2 / vote-01)))) :manner (s3 / strict)))))
(p / plan-01 :arg0 (t / they) :arg1 (l / look-01 :arg0 (t2 / they) :arg1 (m / model :mod (g / generation :mod (n / new)) :consist-of (m2 / model :name (n2 / name :op1 (2 / 2017nu) :op2 (m3 / muses)) :arg1-of (22 / 2017nu :polarity -)))) :time (t3 / time :mod (t4 / this)))
(a / and :op1 (d / differ-02 :arg1 (c / coach :mod (e / each)) :arg2 (p / person :arg0-of (p2 / play-01))) :op2 (s / see-01 :arg0 (i / i) :arg1 (b / beautiful-02 :arg1 (h / hand :part-of (p3 / person :arg0-of (p4 / play-01))) :degree (v / very)) :time (s2 / see-01 :arg0 (i2 / i) :arg1 (a2 / and :op1 (b2 / beautiful-02 :arg1 (h2 / hand :part-of (p5 / person :arg0-of (p6 / play-01)))) :op2 (b3 / beautiful-02 :arg1 (h3 / hand) :degree (v2 / very)) :time (o / once :op1 (n / now))))))
(a / and :op1 (g / gather-03 :arg0 (a2 / and :op1 (p / person :arg0-of (h / have-org-role-91 :arg2 (h2 / head-of-state))) :op2 (p2 / person :arg0-of (h3 / have-org-role-91 :arg1 (f / family) :arg2 (m / member))) :op3 (p3 / person :arg0-of (h4 / have-org-role-91 :arg1 (f2 / family) :arg2 (m2 / member))) :op4 (p4 / person :arg0-of (h5 / have-org-role-91 :arg1 (f3 / family) :arg2 (m3 / member))) :op5 (p5 / person :arg0-of (h6 / have-org-role-91 :arg1 (f4 / family) :arg2 (m4 / member))))) :op2 (p6 / possible-01 :arg1 (g2 / go-02 :arg0 (h7 / holiday :mod (o / only)) :arg4 (h8 / home) :mod (u / usual))))
(m / multi-sentence :snt1 (t / talk-01 :arg0 (i / i) :arg1 (m2 / medal :mod (g / gold) :poss (s / she)) :arg2 (m3 / medal :mod (g2 / gold) :poss (s2 / she)) :time (a / after :op1 (c / ceremony :mod (a2 / award :name (n / name :op1 "N-A")) :mod (a3 / archery) :poss (w / woman)))) :snt2 (p / possible-01 :arg1 (b / bring-up-02 :arg0 (t2 / this) :arg1 (t3 / thing :arg2-of (r / result-01) :mod (g3 / good)))) :snt3 (s3 / satisfaction))
(u / understand-01 :arg1 (i / inspect-01 :arg0 (d / department :mod (e / enforce-01 :arg1 (l / law)) :mod (t / tourism)) :arg1 (p / place :location-of (c / concentrated :arg1 (p2 / person :arg0-of (t2 / tour-01)) :location (a / and :op1 (p3 / park :location (w / west)) :op2 (m / mountain :mod (r / red))))) :time (a2 / already)))
(a / and :op1 (r / rush-01 :arg1 (u / unit :quant (m / many)) :arg2 (t / temperature :arg1-of (t2 / temperature :arg1-of (h / high-02)))) :op2 (s / say-01 :arg0 (g / group :name (n / name :op1 "N-A") :mod (s2 / safe-01)) :arg1 (a2 / accord-02 :polarity - :arg1 (p / practice-01) :arg2 (m2 / method :time (c / current)))) :time (p2 / past))
(c / call-03 :arg1 (a / and :op1 (l / law :arg0-of (p / protect-01 :arg1 (a2 / animal)) :arg1-of (t / tough-02 :degree (m / more))) :op2 (p2 / penalize-01 :arg2 (a3 / abuser) :mod (g / great :degree (m2 / more)))))
(u / up :arg1 (p / person :arg2-of (s / staff-01)) :time (b / before :op1 (o / overthrow-01 :arg0 (p2 / person) :arg1 (p3 / person :arg0-of (h / have-org-role-91 :arg2 (h2 / head-of-state))))) :frequency (r / rate-entity-91 :arg3 (t / temporal-quantity :quant (N / N-A) :unit (d / day)) :purpose (p4 / prevent-01 :arg0 (p5 / person) :arg1 (i / infect-01))))
(a / and :op1 (b / be-located-at-91 :arg1 (p / platform :mod (s / social) :mod (n / network)) :arg2 (c / circle :consist-of (c2 / communicate-01))) :op2 (e / establish-01 :arg0 (p2 / platform) :arg1 (s2 / sense-01 :arg1 (l / loneliness))) :location (s3 / surface))
(a / and :op1 (h / hiding :arg1 (y / you) :arg2 (a2 / avoid :arg0 (i / i) :arg1 (y2 / you))) :op2 (c / contrast-01 :arg1 (h2 / have-03 :arg0 (y3 / you) :arg1 (r / room :mod (o / only :polarity -) :purpose (h3 / have-03 :arg0 (y4 / you) :arg1 (r2 / room)))) :arg2 (g / give-01 :arg0 (i2 / i) :arg1 (a3 / and :op1 (t / time) :op2 (s / space) :mod (o2 / other :mod (e / each))) :arg2 (t2 / think-01 :arg0 (i3 / i) :arg1 (a4 / and :op1 (w / word) :op2 (d / deed))))))
(l / learn-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (n / network :mod (s / sea) :mod (c / country :name (n2 / name :op1 "N-A")) :mod (c2 / country :name (n3 / name :op1 "N-A"))) :arg3 (r / report-01))) :arg1 (a / accept-01 :arg0 (p2 / police) :arg1 (r2 / report-01 :arg1 (c3 / case :quant 2)) :time (n4 / now)) :arg1-of (c4 / cause-01 :arg0 (a2 / and :op1 (a3 / accept-01 :arg0 (p3 / police) :arg1 (r3 / report-01 :arg1 (c5 / case :quant 2)) :time (n5 / now)) :op2 (i / investigate-01 :arg1 (c6 / case :quant 2 :arg1-of (i2 / involve-01))) :op3 (i3 / investigate-01 :arg1 (e / et-cetera) :degree (f / further))) :time (n6 / now)))
(h / hold-02 :arg1 (e / exchange-01 :arg1 (v / view-02)) :mod (a / also) :arg1-of (c / cause-01 :arg0 (a2 / and :op1 (p / party :arg1-of (i / interest-01) :location (o / organization :mod (e2 / extremism))) :op2 (a3 / activity-06 :arg1 (t / terrorism)))))
(c / contrast-01 :arg2 (f / fail-01 :arg1 (p / person :name (n / name :op1 "Junichiro" :op2 "Koizumi") :mod (c2 / country :name (n2 / name :op1 "N-A"))) :time (l / late :op1 (t / temporal-quantity :quant (N / N-A) :unit (y / year)) :degree (m / more)) :time (b / before :op1 (n3 / now) :quant (t2 / temporal-quantity :quant (N2 / N-A) :unit (y2 / year)))))
(a / and :op1 (s / spend-02 :arg0 (c / couple :quant (c2 / couple :op1 (t / temporal-quantity :quant (N / N-A) :unit (h / hour)))) :arg1 (t2 / temporal-quantity :quant (N2 / N-A) :unit (h2 / hour)) :location (s2 / scene :poss (e / event))) :op2 (e2 / experience-01 :arg0 (c3 / couple) :arg1 (b / be-located-at-91 :arg1 (c4 / couple) :arg2 (l / laptop :arg1-of (m / mobile-02) :mod (m2 / mini-flower)))))
(a / and :op1 (h / have-org-role-91 :arg0 (h2 / he) :arg1 (n / newspaper :mod (d / day) :poss (p / person)) :arg2 (s / secretary :mod (d2 / deputy))) :li 2010)
(m / multi-sentence :snt2 (' / ''))
(a / and :op1 (l / last-01 :arg1 (s / score-01 :arg1 (l2 / league :mod (p / premier)) :arg2 (l3 / leagues :mod (p2 / premier))) :mod (a2 / also)) :op2 (l4 / lead-01 :arg0 (p3 / person :quant 0)))
(s / say-01 :arg0 (a / art :mod (c / country :name (n / name :op1 "N-A")) :mod (c2 / country :name (n2 / name :op1 "N-A"))) :arg1 (a2 / and :op1 (c3 / comfortable-02 :polarity - :arg1 (c4 / country) :mod (a3 / at-least)) :op2 (c5 / comfortable-02 :polarity - :arg1 (a4 / art) :mod (a5 / at-least))) :medium (n3 / newspaper :name (n4 / name :op1 "N-A")))
(s / say-01 :arg0 (s2 / she) :arg1 (k / know-01 :arg0 (i / i) :arg1 (a / anything :topic (i2 / it)) :degree (t / total)) :arg1-of (s3 / say-01 :arg0 (s4 / she)))
FAILED_TO_PARSE#Not concept after open bracket.
(a / and :op1 (r / relate-01 :arg1 (l / level :mod (c / compete-02 :arg3 (c2 / compete-02))) :arg2 (f / foundation :poss (s / sports :mod (n / nation))) :manner (c3 / close)) :op2 (d / depend-01 :arg0 (s2 / sport :poss (c4 / country :mod (w / whole))) :arg1 (s3 / sport :mod (w2 / whole))) :op3 (d2 / depend-01 :arg0 (s4 / sport :poss (c5 / country :mod (w3 / whole))) :arg1 (c6 / condition :poss (f2 / field))))
(a / and :op1 (r / reach-01 :arg0 (t / thing :arg1-of (c / contribute-01 :arg2 (r2 / rate-entity-91 :arg1 (m / monetary-quantity :quant 5.3 :unit (d / dollar)) :arg2 (v / volume-quantity :quant (N / N-A) :unit (g / gallon))))) :arg1 (r3 / rate-entity-91 :arg1 (m2 / monetary-quantity :quant 1 :unit (d2 / dollar)) :arg2 (v2 / volume-quantity :quant (N2 / N-A) :unit (g2 / gallon))) :arg4 (r4 / rate-entity-91 :arg1 (m3 / monetary-quantity :quant 1 :unit (d3 / dollar)) :arg2 (v3 / volume-quantity :quant (N3 / N-A) :unit (g3 / gallon)))) :op2 (r5 / reach-01 :arg0 (f / fee :mod (s / speak-01) :poss (p / person :arg0-of (h / have-org-role-91 :arg2 (p2 / president) :time (f2 / former)) :arg0-of (h2 / have-org-role-91 :arg2 (p3 / president) :time (f3 / former)))) :arg1 (r6 / rate-entity-91 :arg1 (m4 / monetary-quantity :quant 5.3 :unit (d4 / dollar) :mod (n / near)) :arg2 (v4 / volume-quantity :quant (N4 / N-A) :unit (g4 / gallon)))) :op3 (s2 / schuster :arg0 (b / book :topic (t2 / tenure :poss (s3 / state) :location (d5 / department :mod (s4 / state)))) :arg1 (r7 / rate-entity-91 :arg1 (m5 / monetary-quantity :quant 5.3 :unit (d6 / dollar)) :arg2 (v5 / volume-quantity :quant (N5 / N-A) :unit (g5 / gallon)))))
(s / say-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg2 (o / official))) :arg1 (h2 / hope-01 :arg0 (w / we) :arg1 (p2 / possible-01 :arg1 (d / draw-02 :arg0 (h3 / hotel) :arg1 (t / thing :arg1-of (c / conclude-01 :mod (r / right)))))))
(a / and :op1 (' / ' :arg0 (p / person :arg0-of (h / have-rel-role-91 :arg1 (p2 / person :arg0-of (h2 / have-rel-role-91 :arg1 (p3 / person :arg0-of (h3 / have-rel-role-91 :arg1 (p4 / person :arg0-of (h4 / have-rel-role-91 :arg1 (p5 / person :arg0-of (h5 / have-rel-role-91 :arg1 (p6 / person :arg0-of (h6 / have-rel-role-91 :arg1 (p7 / person :arg0-of (h7 / have-rel-role-91 :arg1 (p8 / person :arg0-of (h8 / have-rel-role-91 :arg2 (s / son))) :arg2 (s2 / son))) :arg2 (s3 / son))) :arg2 (p9 / parent))))))))))) :arg1 (g / grow-01 :arg1 (p10 / person :arg0-of (h9 / have-rel-role-91 :arg1 (p11 / person) :arg2 (p12 / parent))))) :op2 (i / imitating :arg0 (p13 / person) :arg1 (p14 / person :arg0-of (h10 / have-rel-role-91 :arg1 (p15 / person) :arg2 (p16 / parent)))) :op3 (p17 / person :arg0-of (h11 / have-rel-role-91 :arg1 (p18 / person) :arg2 (p19 / parent))) :op4 (p20 / person :arg0-of (h12 / have-rel-role-91 :arg1 (p21 / person) :arg2 (p22 / parent))) :op5 (p23 / person :mod (k / kind :mod (a2 / amr-unknown)) :arg0-of (h13 / have-rel-role-91 :arg1 (p24 / person) :arg2 (p25 / parent))))
(a / and :op2 (f / feel-01 :arg0 (s / she) :arg1 (a2 / and :op1 (r / relaxed) :op2 (f2 / free-04 :arg1 (s2 / she))) :time (o / once :op1 (l / leave-15 :arg0 (h / he) :arg1 (s3 / situation :arg1-of (t / trap-01 :arg2 (h2 / he)))))))
(a / and :op1 (l / land :mod (o / official) :time (s / season :mod (n / next))) :op2 (j / join-01 :arg1 (t / team :quant 76 :mod (p / philadelphia))) :mod (o2 / official) :time (s2 / season :mod (n2 / next) :mod (n3 / nba)))
(t / tell-01 :arg0 (h / he :arg0-of (h2 / have-org-role-91 :arg1 (a / and :op1 (d / doctor :mod (p / primary)) :op2 (p2 / person :arg0-of (s / study-01) :mod (m / medicine))) :arg2 (m2 / member))) :arg1 (a2 / and :op1 (g / good :domain (d2 / deal-01)) :op2 (r / recommend-01 :arg1 (a3 / accept-01 :arg1 (d3 / deal-01)))) :arg2 (m3 / member) :time (s2 / session :mod (p3 / pre-voting) :consist-of (a4 / and :op1 (p4 / person :quant 54,000 :arg0-of (h3 / have-org-role-91 :arg1 (d4 / doctor :mod (p5 / primary)) :arg2 (m4 / member))) :op2 (p6 / person :arg0-of (s3 / study-01 :arg1 (m5 / medicine))))))
(r / reverse-01 :arg1 (o / opine-01 :arg0 (c / country :name (n / name :op1 "N-A")) :arg1-of (p / public-02)) :mod (a / also) :time (s / since :op1 (n2 / november)))
(u / use-01 :arg0 (i / it) :arg1 (a / and :op1 (s / steel :quant (m / mass-quantity :quant (N / N-A) :unit (t / ton :mod (m2 / mass-quantity :quant (N2 / N-A) :unit (t2 / ton))))) :op2 (c / concrete :quant (m3 / mass-quantity :quant (N3 / N-A) :unit (t3 / ton))) :op3 (c2 / concrete :quant 46)))
(a / and :op1 (p / person :name (n / name :op1 "keith" :op2 "brown") :arg0-of (v / visit-01 :arg1 (s / scene) :time (t / today)) :arg0-of (v2 / visit-01 :arg1 (s2 / scene) :time (t2 / today))) :op2 (b / become-01 :arg1 (p2 / person) :arg2 (b2 / board-01 :arg0 (p3 / person) :arg1 (b3 / bridge)) :ord (o / ordinal-entity :value 1)))
(s / show-01 :arg0 (d / dragon) :arg1 (b / backbone :mod (e / engineer-01 :mod (c / civil))) :arg1-of (c2 / concern-01))
(i / include-91 :arg1 (p / person :quant 1 :arg1-of (s / shoot-02 :location (a / area :mod (g / germantown)))) :arg2 (b / brown))
(a / accuse-01 :arg0 (a2 / and :op1 (p / person :arg0-of (h / have-org-role-91 :arg1 (c / cabinet :poss (p2 / person)) :arg2 (m / minister) :time (f / former))) :op2 (p3 / person :arg0-of (h2 / have-org-role-91 :arg1 (c2 / cabinet) :arg2 (m2 / minister) :time (f2 / former))) :op3 (p4 / person :arg0-of (h3 / have-org-role-91 :arg1 (c3 / cabinet) :arg2 (m3 / minister) :time (f3 / former))) :op4 (p5 / person :arg0-of (h4 / have-org-role-91 :arg1 (c4 / cabinet) :arg2 (m4 / minister) :time (f4 / former))) :op5 (p6 / person :arg0-of (h5 / have-org-role-91 :arg1 (c5 / cabinet) :arg2 (m5 / minister) :time (f5 / former))) :op6 (p7 / person :arg0-of (h6 / have-org-role-91 :arg1 (c6 / cabinet) :arg2 (m6 / minister) :time (f6 / former))) :op6 (p8 / person :arg0-of (h7 / have-org-role-91 :arg1 (c7 / cabinet) :arg2 (m7 / minister) :time (f7 / former))) :op6 (p9 / person :arg0-of (h8 / have-org-role-91 :arg1 (c8 / cabinet) :arg2 (m8 / minister) :time (f8 / former))) :op6 (p10 / person :arg0-of (h9 / have-org-role-91 :arg1 (c9 / cabinet) :arg2 (m9 / minister) :time (f9 / former))) :op7 (p11 / person :arg0-of (h10 / have-org-role-91 :arg1 (c10 / cabinet) :arg2 (m10 / minister) :time (f10 / former)))) :arg1 (t / thing :arg0-of (e / evidence-01 :arg1 (a3 / abuse-01 :arg1 (e2 / elect-01)))))
FAILED_TO_PARSE#Number of opening and closing brackets doesn't match.
(a / and :op1 (s / swimmer :arg0 (p / person :mod (c / country :name (n / name :op1 "China")) :arg0-of (h / have-org-role-91 :arg1 (c2 / country :name (n2 / name :op1 "China")) :arg2 (s2 / swimmer))) :arg1 (p2 / person :arg0-of (h2 / have-org-role-91 :arg1 (c3 / country) :arg3 (l / lead-02))) :ord (o / ordinal-entity :value 2)) :op2 (a2 / aide :arg0 (p3 / person) :arg1 (g / gap :mod (c4 / canadian))) :op3 (n3 / narrowed :arg0 (t / team :mod (c5 / canadian)) :arg1 (g2 / gap) :arg2 (c6 / country) :time (t2 / then)) :ord (o2 / ordinal-entity :value 2))
(s / say-01 :arg0 (p / person :arg1-of (n / neighbor-01)) :arg1 (a / and :op1 (s2 / see-01 :arg0 (p2 / person) :arg1 (f / fight-01 :arg0 (p3 / person) :location (s3 / street)) :frequency (o / often)) :op2 (c / call-01 :arg0 (p4 / person) :arg1 (p5 / police) :arg2 (s4 / street) :frequency (o2 / often))))
(s / say-01 :arg0 (p / person :name (n / name :op1 "mitch" :op2 "mcconnell") :arg0-of (l / lead-02 :arg1 (p2 / person :arg0-of (h / have-org-role-91 :arg2 (p3 / president :mod (v / vice)))))) :arg1 (c / choose-01 :arg0 (p4 / person :arg0-of (h2 / have-org-role-91 :arg2 (p5 / president :mod (n2 / next)))) :arg1 (r / replace-01 :arg0 (m / man) :arg1 (p6 / person :arg0-of (h3 / have-org-role-91 :arg3 (j / judge-01))) :arg2 (p7 / person :arg0-of (h4 / have-org-role-91 :arg3 (j2 / judge-01))))))
(l / locate-01 :arg1 (m / move-01 :arg1 (e / environment) :arg2 (l2 / level :poss (a / area :mod (n / new) :location (p / plant)))) :arg1-of (c / complete-02) :time (e2 / end-01 :arg1 (y / year :mod (l3 / last))))
(p / piloted :arg1 (p2 / pilot-01) :arg2 (p3 / province :quant 14 :example (a / and :op1 (a2 / and :op1 (d / district :mod (z / zhejiang)) :op2 (d2 / district :mod (- / -lrb-)))) :op2 (i / implement-01 :arg1 (p4 / pilot-01) :degree (f / full))) :time (s / since :op1 2007))
(s / say-01 :arg0 (h / he) :arg1 (e / extend-01 :arg1 (f / force) :arg2 (c / country :name (n / name :op1 "N-A")) :condition (a / attack-01 :polarity - :arg0 (f2 / force) :arg1 (f3 / force :mod (e2 / extremism)))) :mod (a2 / also))
(a / and :op1 (h / halfway :arg1 (b / bingbin :name (n / name :op1 (z / zhang))) :direction (d / down :op1 (m / middle))) :op2 (s / seem-01 :arg1 (a2 / away :op1 (f / final) :domain (b2 / bingbin))) :time (g / game :mod (d2 / day)))
(t / tell-01 :arg0 (p / person :name (n / name :op1 "zhang" :op2 "xiaolong")) :arg1 (p2 / person :arg0-of (r / report-01)) :arg2 (p3 / person :arg0-of (r2 / report-01)) :time (a / always) :arg1-of (r3 / resemble-01 :arg2 (a2 / and :op1 (p4 / person :arg0-of (r4 / report-01)) :op2 (p5 / person :mod (q / quiet) :arg0-of (h / have-rel-role-91 :arg1 (p6 / person) :arg2 (c / child))) :op3 (p7 / person :arg0-of (h2 / have-rel-role-91 :arg1 (p8 / person) :arg2 (c2 / child)))) :time (a3 / always)))
(a / and :op1 (r / resemble-01 :arg1 (w / way :manner-of (e / explore-01 :arg1 (p / person :arg0-of (h / have-org-role-91 :arg2 (h2 / head-of-state))))) :arg2 (a2 / and :op1 (d / detecting :arg1 (p2 / person)) :op2 (b / be-located-at-91 :arg1 (p3 / person) :arg2 (a3 / around) :direction (a4 / around)) :op3 (t / travel-01 :arg0 (p4 / person) :direction (a5 / around) :direction (a6 / around)) :op4 (t2 / travel-01 :arg0 (p5 / person) :direction (a7 / around)) :op5 (t3 / travel-01 :arg0 (p6 / person) :arg4 (g / goal :mod (l / land-01 :arg1-of (m / man-01)))))) :op2 (a8 / achieve-01 :arg0 (p7 / person) :arg1 (g2 / goal :mod (l2 / land-01 :arg1-of (m2 / man-01))) :time (f / final)))
(a / and :op1 (i / investigate-01 :arg0 (c / committee)) :op2 (i2 / impose-01 :arg0 (c2 / committee) :arg1 (p / penalize-01 :arg1-of (a2 / accord-02 :arg2 (t / term :mod (r / reference-04)))) :arg1-of (a3 / accord-02 :arg2 (t2 / term :mod (r2 / reference-04))) :arg1-of (a4 / accord-02 :arg2 (t3 / term :mod (r3 / reference-04)))) :arg1-of (a5 / accord-02 :arg2 (t4 / term :mod (r4 / reference-04))))
(c / contrast-01 :arg1 (o / obligate-01 :arg1 (a / authority :mod (p / prison)) :arg2 (p2 / publish :arg0 (a2 / authority) :arg1 (t / thing :arg2-of (n / name-01 :arg1 (p3 / person :arg1-of (i / imprison-01 :arg1-of (d / decease))))))) :arg2 (i2 / include-01 :arg1 (c2 / country :quant 2 :mod (c3 / country :name (n2 / name :op1 "N-A"))) :arg2 (r / report-01 :medium (t2 / television))))
(a / and :op1 (s / station :mod (p / passenger) :mod (o / old) :domain (s2 / station :mod (p2 / passenger) :mod (o2 / old))) :op2 (a2 / arrive-01 :arg1 (s3 / station) :arg4 (s4 / station :mod (u / urumqi)) :location (s5 / station :mod (u2 / urumqi) :arg1-of (b / base-02 :arg2 (s6 / step-by-step)))) :li (1 / 1st))
(d / determine-01 :arg0 (a / and :op1 (t / thing :arg1-of (p / perform-01 :arg0 (h / he))) :op2 (t2 / thing :arg1-of (a2 / achieve-01 :arg0 (h2 / he)) :mod (g / good :degree (m / most) :compared-to (w / world)))) :arg1 (l / likely-01 :polarity - :arg1 (n / neutralize-01 :arg0 (h3 / he) :arg1 (b / break-through-26 :arg0 (h4 / he) :arg1 (p2 / project :mod (t3 / this)))) :mod (a3 / also)) :prep-in (f / fact :mod (n2 / ningzhi)))
(a / and :op1 (c / communicate-01 :arg0 (f / friend) :arg2 (p / person :arg0-of (h / have-rel-role-91 :arg1 (p2 / person) :arg2 (f2 / friend))) :frequency (o / often)) :op2 (b / because :arg0 (p3 / person :arg0-of (h2 / have-rel-role-91 :arg1 (p4 / person) :arg2 (f3 / friend))) :arg1 (p5 / person :arg0-of (h3 / have-rel-role-91 :arg1 (p6 / person) :arg2 (f4 / friend))) :time (l / late :degree (m / more) :quant (s / some)) :time (l2 / late :degree (m2 / more)) :location (g / group :mod (l3 / large) :consist-of (c2 / converse-01 :arg1 (p7 / person) :arg2 (w / word :quant (f5 / few)))) :time (l4 / late :degree (m3 / more)) :mod (a2 / again)))
(h / hear-01 :arg0 (v / villager :quant (m / many)) :arg1 (w / wait-01 :arg1 (p / person :arg0-of (h2 / have-org-role-91 :arg1 (v2 / villager) :arg2 (p2 / person :arg1-of (e / expert-01)))) :location (v3 / village) :time (m2 / morning :mod (e2 / early))))
(c / continue-01 :arg0 (b / bank :consist-of (p / person :mod (c2 / country :name (n / name :op1 "China"))) :poss (p2 / person)) :arg1 (c3 / carry-out-03 :arg0 (p3 / person) :arg1 (r / renewal :arg1 (l / license-01 :arg1 (b2 / business)) :arg1-of (a / accord-02 :arg2 (l2 / law)))))
(s / say-01 :arg0 (s2 / system :mod (v / value :mod (s3 / socialist))) :arg1 (c / career :arg1-of (l / long-03) :domain (s4 / system :arg1-of (l2 / long-03) :prep-with (s5 / system :mod (v2 / value :mod (s6 / socialist)))) :arg0-of (h / have-org-role-91 :arg1 (o / organization :name (n / name :op1 "communist" :op2 "party" :op3 "committee")) :arg2 (m / member)) :arg0-of (h2 / have-org-role-91 :arg1 (c2 / country :name (n2 / name :op1 "N-A")) :arg2 (m2 / member)) :arg0-of (h3 / have-org-role-91 :arg1 (o2 / organization) :arg2 (m3 / member))))
(m / mark-01 :arg0 (a / anniversary :ord (o / ordinal-entity :value 5) :mod (e / establish-01 :arg1 (r / relation-03 :arg0 (c / country :name (n / name :op1 "China")) :arg1 (d / diplomacy) :arg2 (c2 / country :name (n2 / name :op1 "China"))))) :arg1 (h / hold-04 :arg1 (e2 / exchange-01 :arg1 (c3 / culture) :quant (m2 / more)) :location (a2 / and :op1 (c4 / country) :op2 (m3 / mexico))) :time (y / year :mod (n3 / next)))
(a / and :op1 (a2 / area :location (i / in-front-of :op1 (a3 / area :name (n / name :op1 (f / ferocious) :op2 (s / shoveled) :op3 (s2 / shoveled)))) :location (i2 / in-front-of :op1 (a4 / area :name (n2 / name :op1 (f2 / ferocious) :op2 (s3 / shoveled) :op3 (s4 / shoveled))))) :op2 (w / wang :arg0 (a5 / and :op1 (h / he) :op2 (a6 / agitation :mod (e / emotional) :poss (h2 / he))) :arg2 (c / card :mod (y / yellow))))
(o / order-01 :arg0 (p / person :arg0-of (r / report-01)) :arg2 (p2 / piece :mod (b / baking)) :arg1-of (c / cause-01 :arg0 (t / think-01 :arg0 (c2 / couple) :arg1 (s / suitable-04 :arg1 (d / dishes :mod (t2 / this)) :arg2 (d2 / discuss-01 :arg1 (d3 / diet) :time (d4 / depression))))))
(a / and :op1 (o / offer-01 :arg0 (c / company) :arg1 (p / platform :mod (r / relaxing :mod (s / such)) :mod (s2 / such))) :op2 (a2 / and :op1 (h / happy) :op2 (h2 / happy) :op3 (p2 / platform :mod (h3 / harmonious))))
(f / facility :mod (s / sports :arg1-of (p / public-02)) :mod (c / complemented))
(c / contrast-01 :arg1 (m / medal :mod (o / only) :domain (i / it) :time (d / day)) :arg2 (r / receive-01 :arg0 (t / team :mod (c2 / country :name (n / name :op1 "N-A"))) :arg1 (n2 / news :mod (g / good) :mod (o2 / other))))
(e / explain-01 :arg0 (p / police :mod (t / tour :name (n / name :op1 (m / moscow)))) :arg1 (p2 / person :arg0-of (h / have-rel-role-91 :arg1 (p3 / police) :arg2 (p4 / patient))) :arg2 (p5 / person :arg0-of (h2 / have-rel-role-91 :arg1 (p6 / police) :arg2 (p7 / patient))) :arg0-of (c / cause-01 :arg1 (l / leave-11 :arg0 (p8 / person) :arg1 (i / ice :mod (f / facility :name (n2 / name :op1 "N-A"))) :arg1-of (d / deep-02))) :time (c2 / come-01 :arg1 (p9 / person :arg0-of (t2 / tour-01)) :purpose (c3 / consult-01 :arg0 (p10 / person))))
(a / and :op1 (j / journalist :mod (n / new) :mod (c / country :name (n2 / name :op1 "N-A")) :mod (c2 / country :name (n3 / name :op1 "N-A"))) :op2 (f / find-01 :arg1 (p / province :quant (a2 / at-least :op1 9)) :location (p2 / province :arg1-of (m / mean-01 :arg2 (a3 / and :op1 (h / hebei) :op2 (j2 / jilin) :op3 (t / tianjin) :op4 (j3 / jiangxi) :op5 (s / sichuan) :op6 (s2 / sichuan) :op7 (b / beijing) :op8 (b2 / beijing) :op10 (b3 / beijing))))))
(e / end-01 :arg1 (t / thing :arg2-of (t2 / tattoo-01 :arg1 (t3 / thing :arg1-of (f / fix-03) :arg1-of (f2 / fix-03)))))
(k / keep-01 :arg0 (g / group :name (n / name :op1 "N-A") :mod (c / community)) :arg1 (d / door :quant 160,000))
(s / say-01 :arg0 (p / police :mod (c / country :name (n / name :op1 "N-A"))) :arg1 (a / and :op1 (l / lie-07 :arg1 (w / woman) :arg2 (h / highway) :time (l2 / late :op1 (n2 / night :time (l3 / late)))) :op2 (t / tossed :arg0 (c2 / car) :arg1 (w2 / woman))))
(s / say-01 :arg0 (h / he) :arg1 (f / fear-01 :arg0 (p / person :arg0-of (o / own-01) :mod (i / individual) :arg0-of (b / buy-01 :arg1 (b2 / block :mod (c / cell))) :arg0-of (c2 / cause-01 :arg1 (a / and :op1 (a2 / affect-01 :arg0 (p2 / person) :arg1 (t / thing :arg2-of (p3 / price-01 :arg1 (c3 / car :poss (p4 / person))))) :op2 (d / doubted :arg0 (p5 / person) :arg1 (h2 / have-03 :arg0 (p6 / person :mod (o2 / other)) :arg1 (h3 / heart :arg1-of (p7 / private-03)))))))))
(s / say-01 :arg0 (c / committee :arg0-of (h / have-org-role-91 :arg1 (d / doctor :mod (j / junior)))) :arg1 (r / resolve-01 :polarity - :arg0 (p / person :arg0-of (h2 / have-org-role-91 :arg2 (m / minister))) :arg1 (c2 / contract)))
(n / need-01 :arg0 (y / you) :arg1 (c / complete-01 :arg0 (y2 / you) :arg1 (r / remain-01 :arg1 (t / thing :arg1-of (r2 / remain-01) :arg1-of (r3 / remain-01)) :arg3 (o / or :op1 (n2 / north) :op2 (n3 / near-02 :arg2 (l / land))))) :time (a / after :op1 (a2 / and :op1 (i / install-01 :arg1 (i2 / install-01 :arg1 (b / board :mod (l2 / last) :mod (p / pavement)))) :op2 (c2 / connect-01 :arg1 (i3 / install-01) :arg2 (b2 / boards :mod (b3 / bridge) :location (n4 / north))))))
(h / have-concession-91 :arg1 (s / say-01 :arg0 (t / they) :arg1 (c / contrast-01 :arg1 (w / wound-01 :arg1 (a / and :op1 (p / person :arg0-of (h2 / have-org-role-91 :arg2 (h3 / head-of-state))) :op2 (l / leg :part-of (p2 / person)) :op3 (a2 / arm) :op4 (a3 / abdomen))) :arg2 (a4 / awake :arg1 (c2 / child) :arg2 (d / deliver-01 :arg0 (c3 / child) :arg1 (d2 / doctor :mod (m / medicine)))))))
(s / suggest-01 :arg0 (r / report) :arg1 (c / coating :arg1 (i / ink :mod (u / unbroken)) :arg2 (f / finger :part-of (p / person :arg0-of (v / vote-01))) :purpose (p2 / prevent-01 :arg0 (c2 / coating) :arg1 (v2 / vote-01 :arg2 (v3 / vote-01)))) :mod (e / even))
(i / include-91 :polarity - :arg1 (t / thing :quant 1 :arg1-of (i2 / include-91 :arg2 (p / person :mod (o / only)))) :arg2 (f / find-02 :arg1 (s / see-01 :arg0 (p2 / person :mod (o2 / other)) :arg1 (s2 / see-01 :arg0 (p3 / person) :arg1 (t2 / thing :arg1-of (d / differ-02) :mod (t3 / this)) :arg1-of (r / resemble-01) :mod (a / also)))))
(a / apologize-01 :arg0 (s / speak-01 :arg0 (p / person :arg0-of (s2 / speak-01) :mod (o / olympic) :arg0-of (s3 / speak-01))) :arg2 (t / thing :arg1-of (c / comment-01 :arg0 (p2 / pig :name (n / name :op1 (' / '') :op2 ('2 / '')) :mod (c2 / country :name (n2 / name :op1 "N-A"))) :manner ('3 / ''))))
(c / comment :arg0 (a / and :op1 (p / person :arg2-of (s / staff-01 :arg1 (c2 / corporation :mod (b / broadcast-01 :mod (c3 / canadian))))) :op2 (p2 / person :arg0-of (h / have-org-role-91 :arg1 (c4 / corporation) :arg3 (b2 / broadcast-01))) :op3 (p3 / person :arg0-of (h2 / have-org-role-91 :arg1 (c5 / corporation) :arg3 (b3 / broadcast-01))) :op4 (p4 / person :arg0-of (h3 / have-org-role-91 :arg1 (c6 / corporation) :arg3 (b4 / broadcast-01))) :op5 (p5 / person :arg0-of (h4 / have-org-role-91 :arg1 (c7 / corporation) :arg3 (b5 / broadcast-01))) :op6 (p6 / person :arg0-of (h5 / have-org-role-91 :arg1 (c8 / corporation) :arg3 (b6 / broadcast-01))) :op6 (p7 / person :arg0-of (h6 / have-org-role-91 :arg1 (c9 / corporation) :arg3 (b7 / broadcast-01))) :op6 (p8 / person :arg0-of (h7 / have-org-role-91 :arg1 (c10 / corporation) :arg3 (b8 / broadcast-01))) :op6 (p9 / person :arg0-of (h8 / have-org-role-91 :arg1 (c11 / corporation) :arg3 (b9 / broadcast-01))) :op6 (p10 / person :arg0-of (h9 / have-org-role-91 :arg1 (c12 / corporation) :arg3 (b10 / broadcast-01))) :op7 (g / game :name (n / name :op1 (o / olympic) :op2 (o2 / olympic) :op3 (o3 / olympic)))) :arg1 (w / wednesday))
(s / shock-01 :arg0 (a / and :op1 (t / tone) :op2 (w / wording) :poss (c / commentators)) :arg1 (a2 / audience :mod (w2 / whole)) :time (a3 / after :op1 (r / react-01 :arg0 (t2 / they) :arg1 (n / network) :arg1-of (q / quick-02))))
(c / contrast-01 :arg1 (p / possible-01 :arg1 (r / reach-01 :arg1 (t / temperature :quant (n / number :mod (l / large :degree (m / most)) :arg1-of (i / include-91 :arg2 (t2 / temperature :quant (m2 / monetary-quantity :quant 80 :unit (y / yuan)))))) :arg3 (m3 / monetary-quantity :quant 80 :unit (y2 / yuan) :arg2-of (i2 / include-91 :arg1 (m4 / monetary-quantity :quant 80 :unit (y3 / yuan) :arg2-of (i3 / include-91 :arg1 (m5 / monetary-quantity :quant 80 :unit (y4 / yuan) :arg2-of (i4 / include-91 :arg1 (m6 / monetary-quantity :quant 80 :unit (y5 / yuan) :arg2-of (i5 / include-91 :arg1 (m7 / monetary-quantity :quant 80 :unit (y6 / yuan) :arg2-of (i6 / include-91 :arg1 (m8 / monetary-quantity :quant 80 :unit (y7 / yuan) :arg2-of (i7 / include-91 :arg1 (m9 / monetary-quantity :quant 80 :unit (y8 / yuan) :arg2-of (i8 / include-91 :arg1 (m10 / monetary-quantity :quant 80 :unit (y9 / yuan) :arg2-of (i9 / include-91 :arg1 (m11 / monetary-quantity :quant 80 :unit (y10 / yuan) :arg2-of (i10 / include-91 :arg1 (m12 / monetary-quantity :quant 80 :unit (y11 / yuan) :arg2-of (i11 / include-91 :arg1 (m13 / monetary-quantity :quant 80 :unit (y12 / yuan) :arg2-of (i12 / include-91 :arg1 (m14 / monetary-quantity :quant 80 :unit (y13 / yuan) :arg2-of (i13 / include-91 :arg1 (m15 / monetary-quantity :quant 80 :unit (y14 / yuan) :arg2-of (i14 / include-91 :arg1 (m16 / monetary-quantity :quant 80 :unit (y15 / yuan))))))))))))))))))))))))))))) :time (m17 / month :mod (l2 / last))) :arg2 (t3 / temperature :polarity - :arg1-of (h / high-02)))
(s / say-01 :arg0 (s2 / survey-01 :arg1 (h / habit :mod (s3 / social))) :arg1 (u / use-01 :arg0 (p / person :arg1-of (i / include-91 :arg2 (p2 / person :arg0-of (s4 / study-01) :mod (c / college)) :arg3 (p3 / percentage-entity :value (N / N-A)))) :arg1 (r / rate-entity-91 :arg1 (m / more-than :op1 (t / temporal-quantity :quant (N2 / N-A) :unit (h2 / hour))) :arg2 (t2 / temporal-quantity :quant (N3 / N-A) :unit (h3 / hour))) :duration (m2 / more-than :op1 (t3 / temporal-quantity :quant (N4 / N-A) :unit (h4 / hour))) :duration (t4 / temporal-quantity :quant (N5 / N-A) :unit (h5 / hour))))
(h / hold-04 :arg0 (c / committee) :arg1 (c2 / conference :mod (p / press)) :purpose (i / introduce-02 :arg0 (c3 / committee) :arg1 (e / event :mod (a / and :op1 (e2 / event :mod (o / organisational)) :op2 (e3 / event :mod (o2 / open-01 :arg1 (c4 / compete-01)))))) :li 12)
(s / significant-02 :arg1 (c / cooperate-01 :arg0 (c2 / country :name (n / name :op1 "N-A")) :arg1 (a / and :op1 (r / research-institute :name (n2 / name :op1 "N-A") :location (n3 / northeast)) :op2 (c3 / company :name (n4 / name :op1 "N-A") :location (n5 / northeast)))) :arg1-of (s2 / significant-02))
(s / show-01 :arg0 (a / analyze-01 :arg0 (t / they)) :arg1 (a2 / and :op1 (e / estimate-01 :arg1 (l / life :mod (s2 / shark) :mod (b / big :degree (m / most))) :arg2 (t2 / temporal-quantity :quant (N / N-A) :unit (y / year))) :op2 (a3 / age-01 :arg1 (l2 / life) :arg2 (t3 / temporal-quantity :quant (N2 / N-A) :unit (y2 / year)))))
(a / and :op2 (m / mature :arg1 (s / shark :name (n / name :op1 (g / greenland) :op2 (g2 / greenland)) :mod (f / female)) :arg1-of (a2 / allege-01) :time (a3 / and :op1 (a4 / about :op1 (a5 / about :op1 (t / temporal-quantity :quant (N / N-A) :unit (y / year)))) :op2 (a6 / age-01 :arg2 (t2 / temporal-quantity :quant (N2 / N-A) :unit (y2 / year)) :mod (a7 / at-least)))))
(a / and :op1 (a2 / arrive-01 :arg1 (p / person :arg0-of (h / have-rel-role-91 :arg1 (p2 / person :quant 3 :arg0-of (h2 / have-org-role-91 :arg1 (c / crew :quant 3 :arg1-of (d / die-01)) :arg2 (r / relative))) :arg2 (p3 / person :arg0-of (h3 / have-rel-role-91 :arg1 (p4 / person) :arg2 (r2 / relative))))) :arg4 (c2 / court :mod (s / sea))) :op2 (f / file-01 :arg0 (p5 / person) :arg1 (a3 / apply-01 :arg1 (s2 / seize-01 :arg1 (c3 / carrier :arg2-of (s3 / suspect-01))))))
(r / rage-02 :arg0 (p / person :name (n / name :op1 "N-A") :arg0-of (h / have-org-role-91 :arg1 (u / university :location (c / country :name (n2 / name :op1 "N-A"))) :arg2 (d / director :mod (v / vice)))) :location (u2 / university :location (a / and :op1 (u3 / university :mod (p2 / peking)) :op2 (p3 / person :arg0-of (h2 / have-org-role-91 :arg2 (d2 / director :mod (d3 / deputy)))) :op3 (p4 / person :arg0-of (h3 / have-org-role-91 :arg1 (u4 / university) :arg2 (s / secretary-general))) :op4 (p5 / person :arg0-of (h4 / have-org-role-91 :arg1 (u5 / university) :arg2 (s2 / secretary-general))) :op5 (p6 / person :arg0-of (h5 / have-org-role-91 :arg1 (u6 / university) :arg2 (s3 / secretary-general)))) :purpose (g / govern-01 :arg0 (p7 / person) :arg1 (u7 / university) :mod (g2 / globe))))
(c / change-01 :arg0 (p / person :name (n / name :op1 "mr" :op2 "ann")) :arg1 (a / and :op1 (c2 / change-01) :op2 (x / xiaobin :mod (z / zhang)) :op3 (m / ming :location (l / lord :mod (o / old)))) :time (m2 / minute :ord (o2 / ordinal-entity :value 37)))
(a / and :op1 (s / seem-01 :arg1 (b / bear-02 :arg1 (p / person :quant 7) :accompanier (p2 / person :quant 7))) :op2 (l / louddle :arg1 (t / team :mod (c / country :name (n / name :op1 "N-A"))) :mod (s2 / still)))
FAILED_TO_PARSE#Not concept after open bracket.
(b / bring-01 :arg0 (s / she) :arg1 (b2 / ball) :arg2 (s2 / side :mod (l / left) :part-of (p / pitch)) :time (t / then) :arg1-of (c / cause-01 :arg0 (a / and :op1 (c2 / cut-02 :arg1 (m / middle :part-of (m2 / middle))) :op2 (p2 / pull-01 :arg0 (s3 / she) :arg2 (n / net)) :op3 (a2 / and :op1 (p3 / pull-01 :arg0 (s4 / she) :arg2 (n2 / net)) :op2 (l2 / lead-01 :arg0 (t2 / team :quant (2 / 2-0)))))))
(l / like-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg2 (p2 / president))) :arg1 (c / cuisine :ord (o / ordinal-entity :value 5) :example (a / and :op1 (s / sauce :name (n / name :op1 (l2 / liver))) :op2 (f / fish :name (n2 / name :op1 (m / maryland))))) :prep-as (p3 / person :mod (a2 / atheist)))
(h / have-condition-91 :arg1 (p / possible-01 :arg1 (m / mistake-02 :arg0 (p2 / person :arg0-of (h2 / have-org-role-91 :arg2 (p3 / president))) :arg1-of (s / same-01))) :arg2 (e / encourage-01 :polarity - :arg0 (p4 / person :arg0-of (h3 / have-rel-role-91 :arg2 (w / wife))) :arg1 (h4 / he) :arg2 (s2 / set-02 :arg0 (p5 / person) :arg1 (e2 / example) :arg2 (d / diet :poss (p6 / person)))))
(h / have-03 :arg0 (d / doctor) :arg1 (p / plate :quant 3 :purpose (c / continue-01 :arg0 (d2 / doctor) :arg1 (a / and :op1 (d3 / doctor) :op2 (d4 / doctor) :op3 (d5 / doctor)) :purpose (h2 / help-01))) :time (p2 / present))
(a / and :op1 (d / divide-02 :arg1 (p / person :arg0-of (h / have-org-role-91 :arg2 (h2 / head-of-state))) :arg2 (p2 / piece :quant 3)) :op2 (d2 / divide-02 :arg1 (p3 / person) :arg2 (a2 / and :op1 (h3 / health :poss (p4 / person)) :op2 (p5 / person :mod (p6 / pharmaceutical)) :op3 (p7 / person :mod (p8 / pharmaceutical)) :op4 (h4 / hospital :mod (f / future)))))
(s / say-01 :arg0 (p / person :arg0-of (a / assist-01 :arg1 (p2 / person :name (n / name :op1 "Clinton")) :arg2 (c / campaign-01)) :arg0-of (h / have-org-role-91 :arg2 (p3 / palmeyi))) :arg1 (c2 / continue-01 :arg1 (p4 / pole :mod (t / transparent :mod (f / finance)) :mod (f2 / finance))) :medium (s2 / statement))
(c / contrast-01 :arg1 (e / encourage-01 :polarity - :arg0 (c2 / country :name (n / name :op1 "China")) :arg1 (e2 / export-01 :arg1 (a / aerospace))) :arg2 (a2 / adopt-01 :arg0 (c3 / country) :arg1 (s / series :consist-of (a3 / aerospace) :quant (s2 / series) :purpose (c4 / control-01 :arg0 (c5 / country) :arg1 (e3 / export-01 :arg1 (s3 / steel))) :mod (p / practical)) :mod (a4 / also)))
(a / and :op1 (i / increase-01 :arg0 (e / exist-01 :arg1 (i2 / ingredient :mod (m / market))) :arg1 (e2 / efficient-01 :arg1 (i3 / ingredient :mod (m2 / market)))) :op2 (i4 / increase-01 :arg0 (e3 / exist-01) :arg1 (e4 / efficient-01 :arg1 (f / factor :mod (f2 / factor)))) :op3 (i5 / increase-01 :arg1 (e5 / establish-01 :arg1 (c / condition :mod (m3 / market :mod (f3 / fair)) :mod (f4 / fair)))))
(r / receive-01 :arg0 (p / person :mod (m / mr)) :arg1 (t / total-01 :arg2 (a / and :op1 (p2 / point :quant 17) :op2 (r2 / rebounds :quant 17) :op3 (a2 / assists :quant 17))) :prep-in (g / game :quant 2 :ord (o / ordinal-entity :value 1)))
(a / and :op1 (s / show-01 :arg0 (p / person :name (n / name :op1 "N-A") :arg0-of (h / have-org-role-91 :arg2 (g / governor))) :arg1 (c / capable-01 :arg1 (p2 / person) :arg2 (p3 / pull-out-02 :arg0 (p4 / person) :arg1 (s2 / space) :arg2 (p5 / pitch))) :ord (o / ordinal-entity :value 1)) :op2 (p6 / possible-01 :arg1 (s3 / shoot :arg0 (p7 / person) :arg1 (b / basket :part-of (l / line :mod (t / three-point))) :time (a2 / after :op1 (r / remove-01 :arg1 (b2 / blockage :poss (p8 / person)))))) :ord (o2 / ordinal-entity :value 1))
(a / and :op1 (l / lose-02 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (c / company) :arg2 (s / smelter))) :arg1 (m / money) :time (n / now)) :op2 (f / face-01 :arg0 (p2 / person) :arg1 (r / risk-01 :arg2 (c2 / close-01 :arg1 (i / it)))))
(c / contrast-01 :arg1 (v / venture :mod (j / joint) :domain (f / factory) :prep-with (a / and :op1 (o / organization :name (n / name :op1 "chinalco")) :op2 (c2 / company :mod (a2 / alumina)))) :arg2 (h / hold-01 :arg0 (a3 / and :op1 (g / group :poss (c3 / country :name (n2 / name :op1 "China")) :mod (c4 / citic)) :op2 (s / society :mod (w / wushong) :poss (c5 / country))) :arg1 (s2 / share) :mod (a4 / also)))
(b / benefit-01 :arg0 (g / game) :arg1 (e / east))
(a / ask-02 :arg1 (a2 / accept-01 :arg0 (p / person :arg0-of (r / represent-01 :arg1 (d / doctor :mod (j / junior)))) :arg1 (m / measure-02 :mod (c / collective) :mod (n / new) :arg0-of (h / hold-01 :arg1 (k / kiistassaan :poss (p2 / person)) :medium (a3 / agree-01 :mod (n2 / new))))) :arg2 (p3 / person :arg0-of (r2 / represent-01 :arg1 (d2 / doctor :mod (j2 / junior)))))
(g / good :degree (m / more) :domain (a / and :op1 (p / person :arg0-of (l / lead-02)) :op2 (p2 / person :quant 2 :arg0-of (l2 / lead-02))) :mod (a2 / again) :arg1-of (c / cause-01 :arg0 (s / speak-01 :arg0 (p3 / person) :arg1 (t / term) :mod (e / even))) :arg1-of (s2 / sure-02) :time (a3 / after :op1 (t2 / temporal-quantity :quant (N / N-A) :unit (y / year) :time (a4 / after :op1 (t3 / temporal-quantity :quant (N2 / N-A) :unit (y2 / year))))) :arg0-of (c2 / cause-01 :arg1 (g2 / good :degree (m2 / more) :domain (p4 / person :quant 2 :arg0-of (l3 / lead-02)) :mod (a5 / again))))
(l / lose-02 :arg0 (b / bank :mod (r / royal) :part-of (c / country :name (n / name :op1 "N-A"))) :arg1 (c2 / customer :mod (e / external)))
(j / jockey :ord (o / ordinal-entity :value 6) :purpose (r / reach-01 :arg0 (m / milestone :mod (t / that)) :arg1 (r2 / race)))
(c / contrast-01 :arg1 (h / hope-01 :arg0 (i / i) :arg1 (i2 / involve-01 :arg1 (i3 / i) :time (u / until :op1 (e / end-01)))) :arg2 (p / possible-01 :polarity - :arg1 (i4 / involve-01 :arg1 (i5 / i) :time (u2 / until :op1 (e2 / end-01)))))
(a / and :op1 (j / join-01 :arg0 (p / person :arg0-of (e / engineer-01)) :arg1 (c / cross-02 :arg0 (p2 / person :arg0-of (e2 / engineer-01)) :arg1 (c2 / cross-02 :arg0 (p3 / person) :arg1 (d / decker)))) :op2 (l / leave-11 :arg0 (p4 / person) :location (b / behind :op1 (t / thing :arg2-of (e3 / extend-01 :arg1 (b2 / bridge) :time (n / now))))))
(a / and :op1 (d / dumb) :op2 (s / subsides :mod (o / operate-01)) :arg1-of (c / cause-01 :arg0 (o2 / of-course :mod (o3 / of-course))))
(c / champion :domain (a / and :op1 (b / balance-01 :arg1 (a2 / and :op1 (e / exercise :mod (b2 / beams)) :op2 (e2 / exercise :mod (f / floor)))) :op2 (w / wait-01 :arg1 (w2 / world))))
(p / propose-01 :arg0 (r / report) :arg1 (i / imperishable :arg1 (v / vote-01 :arg1 (f / finger :part-of (p2 / person)))) :mod (e / even) :arg0-of (c / cause-01 :arg1 (p3 / possible-01 :arg1 (v2 / vote-01 :arg0 (n / no-one) :frequency (s / several)))) :mod (e2 / even))
(s / say-01 :arg0 (p / person :name (n / name :op1 "N-A")) :arg1 (f / find-01 :arg1 (t / thing :arg0-of (e / evidence-01 :arg1 (d / defraud-01)) :mod (a / all)) :location (o / over :op1 (c / country))))
(o / obligate-01 :arg2 (a / apologize-01 :arg0 (p / person :mod (c / country :name (n / name :op1 "N-A"))) :arg1 (a2 / apologize-01 :arg0 (p2 / person) :arg2 (p3 / person :mod (c2 / country :name (n2 / name :op1 "N-A"))))))
(c / contrast-01 :arg2 (a / and :op1 (i / inappropriate :arg1 (c2 / choose-01 :arg1 (w / word))) :op2 (f / fortunate-01 :polarity - :arg1 (t / thing) :arg2 (t2 / thing :arg1-of (w2 / word-01)) :degree (v / very))))
(a / aghast :arg0 (c / customer :mod (p / primarkin)) :arg1 (w / woman :arg0-of (b / brazenly :arg1 (a2 / atoned) :arg2 (m / middle :part-of (t / trade-01 :arg1 (t2 / trade-01))))))
(a / and :op1 (p / phenomenon :mod (g / globe) :domain (p2 / phenomenon :mod (i / intestinal))) :op2 (a2 / allow-01 :arg0 (d / documentary :mod (t / this)) :arg1 (t2 / tell-01 :arg0 (d2 / documentary) :arg1 (m / more :topic (p3 / person :arg0-of (c / consume-01))) :arg2 (w / we))))
(s / say-01 :li 1 :arg1 (b / bother-02 :arg0 (t / they) :arg1 (a / anyone) :degree (t2 / total)))
(c / contrast-01 :arg1 (q / question-01 :polarity - :arg1 (t / thing :mod (o / only :polarity -) :mod (o2 / only :polarity -))) :arg2 (i / include-01 :arg1 (a / and :op1 (l / likely-01 :arg1 (k / keep-01 :arg0 (p / person :arg0-of (h / have-rel-role-91 :arg1 (p2 / person) :arg2 (p3 / parent))) :arg1 (t2 / thing :arg1-of (f / feel-01) :poss (p4 / person)) :location (i2 / inside :op1 (r / rate-entity-91 :arg1 (p5 / percentage-entity :value (N / N-A)) :arg2 (t3 / temporal-quantity :quant (N2 / N-A) :unit (y / year)))) :arg2 (r2 / rate-entity-91 :arg1 (p6 / percentage-entity :value (N3 / N-A)) :arg2 (t4 / temporal-quantity :quant (N4 / N-A) :unit (y2 / year))))) :op2 (a2 / attempt-01 :arg0 (p7 / person :arg0-of (h2 / have-rel-role-91 :arg1 (p8 / person) :arg2 (p9 / parent))) :arg1 (-4 / -lrb- :arg0 (p10 / person))))))
(m / multi-sentence :snt1 (l / listen-01 :arg1 (m2 / music :mod (o / or :op1 (c / computer) :op2 (s / something :mod (e / else)) :mod (e2 / either))) :arg1-of (e3 / easy-05)) :snt2 (s2 / sighs :mode (e4 / expressive)))
(c / cause-01 :arg0 (a / and :op1 (d / decorations :domain (t / they) :mod (o / only)) :op2 (h / high-02 :arg1 (s / some) :degree (s2 / so) :arg0-of (c2 / cause-01 :arg1 (p / possible-01 :polarity - :arg1 (c3 / circuits))))) :arg1 (s3 / see-01 :arg0 (n / no-one) :arg1 (t2 / them-perhaps)))
(b / become-01 :arg1 (f / food) :arg2 (c / cheap-02 :arg1 (f2 / food) :degree (m / more)) :beneficiary (a / and :op1 (p / person :arg0-of (c2 / consume-01 :arg1 (a2 / and :op1 (p2 / person :arg0-of (c3 / consume-01)) :op2 (p3 / person :arg0-of (p4 / produce-01 :arg1 (a3 / and :op1 (p5 / person :arg0-of (c4 / consume-01)) :op2 (p6 / person :arg0-of (p7 / produce-01 :arg1 (a4 / and :op1 (p8 / person :arg0-of (c5 / consume-01)) :op2 (p9 / person :arg0-of (p10 / produce-01 :arg1 (a5 / and :op1 (p11 / person :arg0-of (c6 / consume-01)) :op2 (p12 / person :arg0-of (p13 / produce-01 :arg1 (t / thing)))))))))))))))))
(p / price-01 :arg1 (b / ban-01 :arg1 (i / import-01 :arg1 (f / food)) :arg1-of (i2 / impose-01 :arg0 (w / weight :poss (c / country :name (n / name :op1 "N-A"))) :arg2 (c2 / country :name (n2 / name :op1 "N-A")))) :arg2 (t / thing :arg2-of (p2 / price-01 :arg1 (i3 / import-01 :arg1 (f2 / food)))) :time (n3 / now))
(s / say-01 :arg0 (t / thing :arg2-of (p / price-01 :arg1 (f / food :arg1-of (s2 / sell-01)))) :arg1 (t2 / thing :arg2-of (p2 / price-01 :arg1 (f2 / food :arg1-of (s3 / sell-01 :location (c / country :name (n / name :op1 "N-A")))))))
(c / contrast-01 :arg1 (d / decide-01 :arg0 (t / they) :arg1 (d2 / detail :topic (d3 / detail))) :arg2 (t2 / tell-01 :arg0 (p / plan-01) :arg1 (t3 / target :mod (o / official))))
(s / say-01 :arg0 (d / department :part-of (p / person :mod (e / ethnic-group :name (n / name :op1 "N-A")))) :arg1 (r / reduce-01 :polarity - :arg1 (s2 / service :mod (c / customer))))
(a / allow-01 :arg1 (s / sit-01 :arg1 (a2 / and :op1 (p / person :arg0-of (h / have-org-role-91 :arg1 (p2 / person :arg0-of (h2 / have-org-role-91 :arg2 (p3 / personnel :mod (g / general)))) :arg2 (p4 / personnel))) :op2 (p5 / person :arg0-of (h3 / have-org-role-91 :arg1 (a3 / army) :arg2 (p6 / personnel)))) :arg2 (p7 / place :arg1-of (e / empty-02))) :arg1-of (c / contrast-01 :arg2 (a4 / allow-01 :polarity - :arg1 (a5 / and :op1 (n / need-01 :arg0 (p8 / person :arg0-of (o / organize-01)) :arg1 (m / money)) :op2 (t / try-01 :arg0 (p9 / person) :arg1 (g2 / get-04 :arg0 (p10 / person) :arg1 (s2 / sell-01 :arg0 (p11 / person) :arg1 (t2 / ticket)) :time (u / until :op1 (m2 / moment :mod (l / last))))))) :prep-in (r / rio)))
(h / hit-01 :arg0 (c / cities :arg0 (c2 / city :mod (g / great)) :arg1-of (b / bad-05 :degree (m / most))) :arg1 (s / situation :poss (y / you)) :arg1-of (b2 / bad-05 :degree (m2 / most)))
(d / describe-01 :arg0 (p / police) :arg1 (g / government-organization :arg0-of (g2 / govern-01)) :time (e / expect-01 :arg0 (p2 / police) :arg1 (r / rise-01 :arg1 (a / and :op1 (t / turku) :op2 (h / helsinki) :op3 (o / oulu)) :arg4 (t2 / top :part-of (c / compare-01)))))
(g / give-01 :arg0 (i / i) :arg1 (p / protect-01 :mod (g2 / good :degree (m / more))) :arg2 (p2 / protect-01 :arg1 (f / form :mod (o / other) :quant (m2 / many) :mod (o2 / other))))
(s / steal-01 :arg0 (p / part :part-of (b / buy-01)) :arg1 (b2 / bicycle) :manner (k / know-01 :polarity - :arg0 (p2 / part) :arg1 (b3 / bicycle)) :mod (p3 / probable))
(p / possible-01 :arg1 (d / doubt-01 :arg1 (p2 / part :part-of (i / it))))
(a / and :op1 (i / interest :domain (i2 / interest-01 :arg2 (t / type :mod (o / olympic))) :degree (m / most) :time (s / so-far)) :op2 (o2 / open-01 :arg0 (r / race :ord (o3 / ordinal-entity :value 5) :part-of (d / day)) :arg1 (w / war :name (n / name :op1 "N-A") :mod (a2 / artistic))) :op3 (r2 / reach-01 :arg0 (p / person :quant (h / half :degree (a3 / almost)) :arg0-of (v / view-01)) :arg1 (c / channel :name (n2 / name :op1 (a4 / artistic)))))
(s / say-01 :arg0 (h / he) :arg1 (b / bsb :arg0 (p / person :name (n / name :op1 "N-A") :arg0-of (h2 / have-org-role-91 :arg1 (c / country :name (n2 / name :op1 "N-A")) :arg3 (l / lead-02 :arg0 (p2 / person)))) :arg1 (t / thing :arg1-of (d / design-01 :arg3 (d2 / destroy-01 :arg0 (p3 / person) :arg1 (t2 / tourism :poss (c2 / country))))) :arg1-of (c3 / cause-01 :arg0 (a / attack-01 :quant (a2 / all) :location (a3 / area :mod (p4 / person :arg0-of (t3 / tour-01)))))))
(s / something :time (a / always))
(w / way :manner-of (p / prevent-01 :arg1 (k / kerryttäisivät :arg0 (p2 / person) :arg1 (p3 / person :arg0-of (h / have-org-role-91 :arg1 (p4 / power :arg0-of (d / depend-01 :polarity -)) :arg2 (p5 / president))) :arg2 (p6 / person))))
(g / game :mod (o / olympic) :domain (t / this) :arg0-of (s / separate-02 :arg1 (i / i) :arg2 (o2 / other)))
(w / win-01 :arg0 (w2 / win-01 :arg1 (g / gold) :location (g2 / generation :ord (o / ordinal-entity :value 4) :part-of (t / type :mod (s / same)))) :arg1 (c / cup :mod (g3 / gold)) :time (t2 / time :arg1-of (s2 / same-01)))
(s / stir :arg1 (i / it) :arg2 (s2 / scratch) :condition (c / come-12 :arg1 (h / host-01 :arg0 (i2 / it) :arg1 (- / -rrb- :arg1-of (d / dressing :arg2 (d2 / dressing))))))
(a / and :op1 (r / reside-01 :arg0 (p / person :arg0-of (r2 / reside-01) :mod (p2 / perniössä)) :arg1 (m / market :name (n / name :op1 (i / irtokarkkeja) :op2 (k / k-city))) :manner (t / thursday)) :op2 (b / buy-01 :arg0 (p3 / person) :arg1 (m2 / market :name (n2 / name :op1 (k2 / k-city) :op2 (k3 / k-city)))) :time (h / hit-02 :arg0 (s / signal-07 :arg1 (e / eye)) :arg1 (e2 / eye)))
(r / remembers :arg0 (s / station :mod (v / vetted)) :arg1 (w / woman) :arg2 (t / thing :arg1-of (w2 / word-01)))
(c / contrast-01 :arg2 (w / want-01 :arg0 (w2 / we) :arg1 (g / grow-03 :arg0 (w3 / we) :arg1 (m / much :degree (t / too))) :arg1-of (c2 / cause-01 :arg0 (r / resemble-01 :arg1 (r2 / resemble-01 :arg1 (m2 / mass) :arg2 (b / bus :mod (h / huge)) :arg1-of (c3 / control-01 :arg0 (h2 / herd :mod (c4 / cattle)))) :arg2 (m3 / mass)))))
(h / have-03 :arg0 (p / person :mod (c / country :name (n / name :op1 "N-A"))) :arg1 (t / turnover :mod (a / about :op1 6000000)) :time (y / year :mod (l / last)))
(s / say-01 :arg0 (t / thing :arg1-of (e / estimate-01 :arg0 (a / authority :arg1-of (l / local-02)))) :arg1 (p / possible-01 :arg1 (o / organization :arg2-of (c / criminal-03)) :mod (a2 / also)))
(s / say-01 :arg2 (p / person :name (n / name :op1 "N-A")))
(r / recalls :arg1 (b / book) :time (d / date-entity :decade (N / N-A)))
(l / learn-01 :arg0 (i / i) :arg1 (i2 / impose-01 :polarity - :arg0 (t / time :quant (a / all)) :arg1 (a2 / and :op1 (t2 / total) :op2 (p / peak-01))))
(i / idea :topic (d / depend-01 :polarity - :arg0 (n / number :quant-of (j / job)) :arg1 (n2 / number :quant-of (n3 / number :quant-of (p / person :arg0-of (w / work-01)))) :mod (s / still)) :manner (w2 / way :quant (m / many)) :mod (s2 / still))
(e / ensitietoja :arg1 (d / develop-02 :arg1 (m / market :location (e2 / estate) :mod (r / real))) :time (a / already))
(u / use-01 :arg1 (i / information) :arg2 (m / market-01 :arg1-of (t / target-01) :mod (c / client)))
(c / contrast-01 :arg1 (l / lose-02 :arg0 (m / man :arg1-of (m2 / man-01 :polarity -) :mod (t / tech :arg1-of (h / high-02))) :arg1 (c2 / cover-01 :arg0 (m3 / man) :arg1 (t2 / thing :arg2-of (c3 / cover-01 :arg0 (p / person :arg0-of (h2 / have-rel-role-91 :arg1 (m4 / man) :arg2 (d / dd1))) :arg1-of (q / quick-02))))) :arg2 (f / flame :arg1 (r / returns :purpose (c4 / cover-01 :arg1 (' / '' :arg1-of (s / soft-02)) :time (a / as-soon-as :op1 ('2 / '' :arg1 (l2 / lelulta)))))))
(c / contrast-01 :arg1 (p / possible-01 :arg1 (l / long-03 :arg1 (h / hour) :arg2 (t / temporal-quantity :quant (N / N-A) :unit (h2 / hour)))) :arg2 (t2 / työosuudet :arg1-of (a / activity-06) :time (b / before :op1 (n / now) :duration (c2 / couple :op1 (t3 / temporal-quantity :quant (N2 / N-A) :unit (h3 / hour)) :mod (o / only)))))
(a / aim-01 :arg1 (a2 / attract-01 :arg0 (c / campaign-01) :arg1 (p / person :mod (c2 / country :name (n / name :op1 "N-A"))) :purpose (s / start-01 :arg0 (p2 / person) :arg1 (l / lights :arg1 (l2 / lights :mod (n2 / north)) :time (e / early) :time (e2 / early)))) :medium (r / report))
(h / hold-04 :arg0 (i / i) :arg1 (a / and :op1 (r / read-01 :arg1 (a2 / and :op1 (r2 / read-01 :arg1 (g / game)) :op2 (p / puruissa) :op3 (s / support-01 :arg1 (l / line :arg0-of (r3 / run-02)))) :op2 (s2 / support-01 :arg1 (l2 / line :arg0-of (r4 / run-02))) :op3 (s3 / support-01 :arg1 (l3 / line :mod (g2 / gold)) :manner (w / win-01 :arg0 (a3 / and) :arg1 (m / medal :mod (g3 / gold)) :location (m2 / medal :ord (o / ordinal-entity :value 1) :location (m3 / medal :ord (o2 / ordinal-entity :value 1)) :location (m4 / medal)))))))
(a / and :op1 (f / feel-01 :polarity - :arg0 (t / thing :mod (t2 / this)) :arg1 (t3 / thing :arg0-of (a2 / appall-01 :arg1 (t4 / that)))) :op2 (m / mean-01 :arg1 (g / game) :arg2 (s / something) :mod (r / really)))
(m / multi-sentence :snt1 (l / look-01 :arg0 (w / we) :arg1 (a / and :op1 (g / good :domain (w2 / we)) :op2 (a2 / abet-01 :arg0 (w3 / we) :arg1 (r / race))) :mod (o / only) :time (t / today)) :snt2 (a3 / and :op1 (f / fireworks :arg0 (w4 / we) :arg1 (r2 / race)) :op2 (f2 / fireworks :arg0 (w5 / we) :arg1 (r3 / race)) :op3 (c / cause-01 :arg1 (d / do-02 :arg0 (w6 / we)))))
(a / attend-01 :arg0 (p / person :name (n / name :op1 "N-A") :arg0-of (h / have-org-role-91 :arg2 (g / glover))) :time (m / month :mod (n2 / next)) :time (m2 / marry-01 :arg1 (p2 / person) :arg2 (a2 / adventurer :mod (t / tv) :mod (a3 / adventurer))))
(h / have-concession-91 :arg1 (t / thing :arg1-of (p / propose-01) :mod (t2 / tax-01)) :arg2 (f / find-01 :arg1 (c / criticize-01 :arg1 (a / award :name (n / name :op1 "N-A")))))
(a / age-01 :arg1 (p / person :arg0-of (o / own-01 :arg1 (w / web))) :arg2 (b / background))
(m / multi-sentence :snt1 (a / almodovar-the :arg0 (i / i) :arg1 (f / film :arg1-of (i2 / include-91 :arg2 (f2 / film :mod (p / particular)) :frequency (o / often))) :arg2 (h / humor) :frequency (o2 / often)) :snt2 (d / distance-01 :arg1 (p2 / person :arg0-of (h2 / have-org-role-91 :arg2 (h3 / head-of-state))) :mod (f3 / fair)))
(a / accurate :domain (a2 / almodovar) :concession-of (i / improve-01 :polarity - :arg0 (s / scene :time (c / current) :poss (s2 / scene :time (c2 / current))) :arg1 (i2 / improve-01 :arg1 (v / viritelmät) :mod (p / particular))))
(a / and :op1 (s / sucked :arg1 (t / truck) :arg2 (b / bend :poss (k / kaartuvassa :mod (l / left)) :direction (o / out))) :op2 (c / crash-01 :arg1 (t2 / truck) :location (s2 / side :part-of (d / ditches))))
(a / and :op1 (j / josban) :op2 (j2 / juniper) :op3 (r / river))
(b / be-temporally-at-91 :arg1 (r / rate :mod (i / inflation :arg1-of (a / average-04)) :arg1-of (a2 / average-03)) :arg2 (r2 / rate-entity-91 :arg1 (p / percentage-entity :value (N / N-A)) :arg2 (t / temporal-quantity :quant (N2 / N-A) :unit (y / year))) :time (d / date-interval :op1 (d2 / date-entity :decade (N3 / N-A)) :op2 (d3 / date-entity :dayperiod (N4 / N-A))) :arg1-of (c / compare-01 :arg2 (p2 / product-of :op1 (t2 / temporal-quantity :quant (N5 / N-A) :unit (m / month)) :op2 (t3 / temporal-quantity :quant (N6 / N-A) :unit (m2 / month)) :arg1-of (c2 / compare-01 :arg2 (n / name :op1 (j / july) :op2 (- / -rrb-) :op3 (-2 / -rrb-))))))
(m / multi-sentence :snt1 (c / create-01 :arg0 (i / intelligence :arg1-of (i2 / include-91 :arg2 (i3 / intelligence :mod (i4 / intelligence :mod (c2 / country :name (n / name :op1 "N-A")))) :arg3 (b / between :op1 2014 :op2 (t / temporal-quantity :quant (N / N-A) :unit (y / year))))) :arg1 (a / and :op1 (i5 / isolate-01 :arg1 (f / force)) :op2 (i6 / isolate-01 :arg1 (f2 / force) :degree (t2 / too)))) :snt2 (s / say-01 :arg0 (d / democrat :arg0-of (l / lead-01) :poss (c3 / committee)) :medium (s2 / statement)))
(m / multi-sentence :snt1 (d / day :time (a / after :op1 (m2 / make-01 :arg1 (g / goal :quant 3) :location (t / triumph :poss (t2 / team) :location (c / country :name (n / name :op1 "N-A") :mod (c2 / country :name (n2 / name :op1 "N-A")))))) :time (d2 / day :mod (a2 / after :op1 (m3 / make-01 :arg1 (g2 / goal :quant 3) :location (t3 / triumph :poss (t4 / team)))))) :snt2 (g3 / goal :quant 2 :ord (o / ordinal-entity :value 1) :poss (t5 / team :name (n3 / name :op1 (' / ') :op2 2 :op3 2 :op4 2 :op5 2 :op6 2 :op7 2))))
(a / and :op1 (a2 / appoint-01 :arg1 (p / person :mod (c / country :name (n / name :op1 "N-A")) :mod (c2 / country :name (n2 / name :op1 "N-A"))) :arg2 (c3 / coach :mod (n3 / new) :mod (h / head)) :time (y / year :arg1-of (f / follow-01))) :op2 (b / begin-01 :arg1 (c4 / change-01 :arg1 (t / thing))))
(o / oppose-01 :arg0 (p / person :source (n / north :part-of (n2 / north)) :mod (n3 / north)) :arg1 (p2 / person :source (n4 / north :part-of (n5 / north))))
(u / use-01 :arg1 (t / trumps) :time (p / past))
(c / contrast-01 :arg2 (b / believe-01 :arg0 (i / i) :arg1 (a / and :op1 (k / know-01 :arg0 (i2 / i) :arg1 (k2 / know-01 :arg0 (h / he) :arg1 (t / thing :arg1-of (o / opine-01 :arg0 (i3 / it))))) :op2 (k3 / know-01 :arg0 (i4 / i) :arg1 (v / vague :domain (t2 / they) :arg1-of (c2 / cause-01 :arg0 (p / possible-01 :arg1 (e / equate-01 :arg1 (t3 / they) :arg2 (l / lenses :mod (a2 / altogether)))))))) :mod (a3 / also)))
(a / and :op1 (s / start-01 :arg0 (h / he) :arg1 (v / verb :quant 2001)) :op2 (b / be-located-at-91 :arg1 (h2 / he) :arg2 (t / there) :time (u / until :op1 (e / end-01))))
(t / taste :arg1 (f / fire) :mod (h / historic) :domain (c / concept :mod (s / square)))
(c / come-04 :arg1 (i / it) :arg2 (i2 / incident :mod (h / hat :mod (w / wind))))
(h / have-concession-91 :arg2 (a / and :op1 (h2 / hiding :arg1 (t / trumps :mod (d / donald)) :arg2 (b / behind :op1 (p / pretexts :mod (f / false)))) :op2 (p2 / publish-01 :arg1 (t2 / thing :arg1-of (p3 / publish-01 :time (p4 / previous)) :arg1-of (p5 / publish-01 :time (p6 / previous))))))
(m / multi-sentence :snt1 (a / and :op1 (c / continue-01 :arg1 (c2 / compete-01 :arg0 (w / woman) :arg1-of (e / equal-01))) :op2 (e2 / end-01 :arg1 (a2 / and :op1 (t / trott) :op2 (t2 / trott :name (n / name :op1 (l / laura))) :op3 (s / shand :name (n2 / name :op1 (r / rowsell))) :op4 (s2 / shand :name (n3 / name :op1 (r2 / rowsell))) :op5 (s3 / shand :name (n4 / name :op1 (r3 / rowsell))) :op6 (s4 / shand :name (n5 / name :op1 (r4 / rowsell))) :op6 (k / katie :name (n6 / name :op1 (r5 / rowsell))) :op6 (k2 / katie :name (n7 / name :op1 (r6 / rowsell))) :op6 (k3 / katie :name (n8 / name :op1 (r7 / rowsell))) :op7 (k4 / katie :name (n9 / name :op1 (a3 / archibald) :op2 (a4 / archibald)))))) :snt2 (s5 / stop-01 :arg0 (p / person :mod (s6 / stage)) :arg1 (t3 / time :mod (r8 / record))))
(t / tell-01 :arg0 (p / person :name (n / name :op1 "stephen" :op2 "mikkelsen") :arg0-of (h / have-org-role-91 :arg2 (d / director :mod (e / executive)))) :arg1 (t2 / tell-01 :arg0 (p2 / person :arg0-of (h2 / have-org-role-91 :arg2 (d2 / director :mod (e2 / executive)))) :arg1 (a / and :op1 (e3 / electricity :quant (a2 / about :op1 600)) :op2 (e4 / electricity :quant (a3 / about :op1 900)))) :arg2 (p3 / person :arg0-of (a4 / analyze-01)) :time (w / week :mod (p4 / past)) :subevent-of (a5 / agl))
(m / model :domain (h / he) :prep-for (j / jacobs :mod (m2 / marc)))
(l / lose-02 :arg0 (p / person :quant (n / number :mod (t / this)) :arg1-of (l2 / legal-02)) :arg1 (f / fund-01 :arg0 (f2 / federal) :quant (p2 / percentage-entity :value 30)) :time (y / year :mod (n2 / next)) :arg1-of (l3 / legal-02))
(s / selection :arg1 (p / person :quant (m / many) :arg2-of (i / include-01 :arg1 (h / heathrow :mod (h2 / heathrow)))) :arg2 (f / few :op1 (t / temporal-quantity :quant (N / N-A) :unit (m2 / month)) :mod (j / just :polarity -)))
(c / claim-01 :arg0 (m / magazine :name (n / name :op1 "N-A")) :arg1 (w / worry-01 :arg1 (f / filter :mod (n2 / new) :mod (a / adblockin)) :arg1-of (c2 / cause-01 :arg0 (p / prevent-01 :arg0 (t / they) :arg1 (p2 / portion :part-of (s / site :mod (o / other)))))) :medium (u / url-entity :value (t2 / thursday)))
(c / contrast-01 :arg1 (t / try-01 :arg1 (e / enter-01 :arg0 (p / person :quant (n / number) :arg0-of (d / drive-01)) :arg1 (e2 / enter-01) :time (a / already))) :arg2 (t2 / tell-01 :arg1 (a2 / and :op1 (a3 / appeal-02 :arg0 (a4 / all) :arg2 (p2 / person :arg0-of (w / witness-01 :arg1 (i / incident)) :arg0-of (w2 / witness-01 :arg1 (i2 / incident)))) :op2 (c2 / come-01 :arg1 (p3 / person) :direction (f / forward))) :arg2 (p4 / police)))
(m / multi-sentence :snt1 (c / cause-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (p2 / police) :arg2 (n / negligence))) :arg1 (d / die-01 :arg1 (p3 / person)) :time (y / year :mod (l / last))) :snt2 (c2 / cause-01 :arg0 (n2 / negligence :arg0 (n3 / negligence :poss (p4 / person :arg0-of (h2 / have-rel-role-91 :arg2 (n4 / negligence))) :time (a / after :op1 (h3 / hit-02 :arg0 (p5 / person) :arg1 (k / kill-01 :arg0 (p6 / person) :arg1 (m2 / man)) :time (a2 / after :op1 (k2 / kill-01 :arg0 (p7 / person) :arg1 (m3 / man) :time (a3 / after :op1 (k3 / kill-01 :arg0 (p8 / person) :arg1 (m4 / man))))))))) :arg1 (n5 / night :quant 1) :time (a4 / after :op1 (n6 / now) :quant 2014 :op1 2014)))
(m / multi-sentence :snt1 (c / contrast-01 :arg2 (r / refer-01 :arg0 (s / simulation :quant (m2 / most)) :arg1 (f / fact :topic (p / possible-01 :arg1 (t / thin-03 :arg1 (v / venuksella)))))) :snt2 (p2 / possible-01 :arg1 (r2 / rotating :arg1 (a / atmosphere :mod (t2 / terrestrial)) :mod (s2 / still))))
(r / refer-01 :arg0 (a / and :op1 (p / person :arg0-of (h / have-rel-role-91 :arg1 (v / victim) :arg2 (b / brother))) :op2 (c / channel :name (n / name :op1 (s / san))) :op3 (c2 / channel :name (n2 / name :op1 (s2 / san))) :op4 (c3 / channel :name (n3 / name :op1 (s3 / san))) :op5 (c4 / channel :name (n4 / name :op1 (s4 / san))) :op6 (c5 / channel :name (n5 / name :op1 (s5 / san))) :op6 (c6 / channel :name (n6 / name :op1 (s6 / san))) :op6 (c7 / channel :name (n7 / name :op1 (s7 / san))) :op6 (c8 / channel :name (n8 / name :op1 (s8 / san))) :op6 (c9 / channel :name (n9 / name :op1 (s9 / san))) :op6 (c10 / channel :name (n10 / name :op1 (s10 / san))) :op6 (c11 / channel :name (n11 / name :op1 (s11 / san))) :op6 (c12 / channel :name (n12 / name :op1 (s12 / san))) :op6 (c13 / channel :name (n13 / name :op1 (s13 / san))) :op6 (c14 / channel :name (n14 / name :op1 (s14 / san))) :op6 (c15 / channel :name (n15 / name :op1 (s15 / san))) :op6 (c16 / channel :name (n16 / name :op1 (s16 / san))) :op6 (c17 / channel :name (n17 / name :op1 (s17 / san))) :op7 (p2 / person :arg0-of (h2 / have-rel-role-91 :arg1 (v2 / victim) :arg2 (c18 / child)))) :arg1 (a2 / accident :arg1-of (d / dream-01 :arg0 (h3 / he))) :time (b2 / before :op1 (n18 / now) :quant (t / temporal-quantity :quant (N / N-A) :unit (m / month))))
(c / contrast-01 :arg2 (s / say-01 :arg0 (t / thing :arg1-of (r / report-01)) :arg1 (a / and :op1 (s2 / speak-01 :arg0 (p / person :arg0-of (s3 / speak-01 :arg1 (l / lose-02 :arg0 (p2 / person) :arg1 (p3 / putin :name (n / name :op1 (' / ')))))) :frequency (r2 / rate-entity-91 :arg2 (t2 / temporal-quantity :quant (N / N-A) :unit (d / day)))) :op2 (s4 / say-01 :arg0 (r3 / report-01)))))
(m / multi-sentence :snt1 (c / cause-01 :arg1 (a / allow-01 :arg0 (m2 / meet-03 :mod (t / this) :location (c2 / coast)) :arg1 (a2 / and :op1 (r / russia :arg0 (a3 / and :op1 (p / person :arg0-of (h / have-org-role-91 :arg1 (c3 / country :name (n / name :op1 "N-A")))) :op2 (p2 / presentation :poss (u / unify-01 :arg1 (c4 / country :name (n2 / name :op1 "N-A")) :arg2 (n3 / non-turkish)))) :arg1 (p3 / presentation :poss (u2 / unify-01 :arg1 (c5 / country) :arg2 (n4 / non-turkish)))) :op2 (p4 / presentation :poss (u3 / unify-01 :arg1 (c6 / country) :arg2 (n5 / non-turkish)))))) :snt2 (f / feel-02 :arg0 (c7 / country :quant 2) :arg1 (f2 / feel-02 :arg0 (c8 / country :quant 2) :arg1 (a4 / and :op1 (t2 / treat-03 :arg1 (c9 / country)) :op2 (m3 / mistreating :arg0 (c10 / country) :arg1 (f3 / force))))))
(l / lose-03 :arg0 (b / bank :mod (r / royal) :part-of (c / country :name (n / name :op1 "N-A"))) :location (o / outside :op1 (c2 / country)))
(u / use-01 :arg0 (s / strategy :poss (b / bank)) :arg1 (b2 / body :mod (r / rb2) :part-of (k / kind :mod (t / this))) :arg2 (p / protect-01 :arg0 (b3 / body) :arg1 (f / finance-01 :arg1 (p2 / person :arg0-of (c / consume-01) :mod (o / other)))))
(c / contrast-01 :arg1 (a / and :op1 (e / elegant :domain (h / he)) :op2 (s / strong-02 :arg1 (h2 / he))) :arg2 (a2 / attitude :mod (t / tactical) :poss (h3 / he) :domain (h4 / he) :location (r / room :mod (m / mental) :mod (o / other))))
(a / and :op1 (d / differ-01 :arg2 (t / thing :arg2-of (v / view-01))) :op2 (t2 / thing :arg2-of (p / position-01 :arg1 (t3 / thing :arg1-of (v2 / view-01)))) :mod (c / creative))
(c / cause-01 :arg0 (p / permit-01 :arg0 (p2 / permit-01 :arg1 (p3 / permit-01 :arg1 (w / work-01 :arg0 (t / team)))) :mod (m / minimum) :mod (o / only) :location (d / direction :mod (b / both))) :arg1 (f / factor :arg0-of (d2 / demand-01)))
(p / postponed :domain (p2 / presence :poss (g / game :location (c / country :mod (o / other)))) :arg1-of (c2 / cause-01 :arg0 (o2 / overseeing :arg0 (s / server :poss (s2 / server)) :arg1 (g2 / game))) :time (s3 / subsequent))
(c / contrast-01 :arg2 (r / result-01 :arg1 (d / disruption :mod (c2 / country :name (n / name :op1 "N-A"))) :arg2 (d2 / disruption :arg0 (p / person :arg0-of (h / have-rel-role-91 :arg1 (s / she) :arg2 (m / mother))) :arg1 (p2 / person :arg0-of (h2 / have-rel-role-91 :arg1 (p3 / person) :arg2 (m2 / mother))) :manner (h3 / heavy)) :arg1-of (r2 / resemble-01 :polarity - :arg2 (p4 / part :mod (l / large) :part-of (a / age :poss (p5 / person))))))
(f / facilitated :domain (s / situation))
(v / valid-02 :arg1 (f / flooding :mod (t / this)) :time (u / until :op1 (m / majority :arg1 (m2 / majority :poss (c / country :name (n / name :op1 "N-A"))))))
(s / say-01 :arg0 (p / person :name (n / name :op1 "alek" :op2 "krautmann") :arg0-of (h / have-org-role-91 :arg1 (c / controller))) :arg1 (p2 / possible-01 :arg1 (f / flood :arg0 (p3 / person :mod (b / both)) :arg1 (h2 / house :quant (n2 / number) :location (a / area :mod (s2 / suburban) :arg1-of (c2 / close-10 :arg2 (r / rougen :mod (b2 / baton))))))))
(s / say-01 :arg0 (p / person :name (n / name :op1 "mr" :op2 "robby" :op3 "miller") :arg0-of (h / have-org-role-91 :arg2 (c / chair :mod (g / ground)))) :arg1 (r / rescued :arg0 (a / and :op1 (a2 / authority) :op2 (p2 / person :arg1-of (i / islanded :arg0 (w / water)))) :arg1 (p3 / person :quant 72)))
(w / wonderful-03 :arg1 (t / that))
(s / say-01 :arg0 (p / person :name (n / name :op1 "mr" :op2 "rahman") :prep-on (g / ground :location-of (c / campaign-01 :arg1 (e / elect-01) :arg0-of (l / lead-01)))) :arg1 (o / obligate-01 :arg1 (p2 / person :mod (r / religious-group :name (n2 / name :op1 "N-A")) :mod (r2 / religious-group :name (n3 / name :op1 "N-A")) :mod (r3 / religious-group)) :arg2 (v / vote-01 :arg0 (p3 / person) :arg1 (p4 / person))))
FAILED_TO_PARSE#Number of opening and closing brackets doesn't match.
(c / consult-01 :mode (i / imperative) :arg0 (y / you) :arg1 (p / person :arg0-of (c2 / coloured :arg1 (p2 / person :mod (y2 / young) :arg0-of (h / have-rel-role-91 :arg1 (p3 / person) :arg2 (c3 / child)))) :arg0-of (h2 / have-rel-role-91 :arg1 (p4 / person) :arg2 (c4 / child))) :arg0-of (c5 / cause-01 :arg1 (c6 / consult-01 :arg0 (p5 / person) :arg1 (p6 / person :mod (y3 / young) :arg0-of (h3 / have-rel-role-91 :arg1 (p7 / person) :arg2 (c7 / child))))))
(r / request-01 :arg0 (p / person :mod (c / country :name (n / name :op1 "N-A"))) :arg1 (f / forgive :arg0 (p2 / person) :arg1 (t / time :quant (m / more-than :op1 90) :arg0-of (i / ignore-01 :arg1 (t2 / thing :arg1-of (c2 / comment-01))))))
(s / say-01 :arg0 (p / person :name (n / name :op1 "jenny" :op2 "davidson") :arg0-of (h / have-rel-role-91 :arg1 (p2 / person :quant 2 :arg0-of (h2 / have-rel-role-91 :arg1 (c / child) :arg2 (c2 / child))) :arg2 (m / mother))) :arg1 (a / and :op1 (d / drop-05 :arg1 (p3 / person :arg0-of (h3 / have-rel-role-91 :arg1 (w / woman) :arg2 (m2 / mother))) :mod (a2 / again)) :op2 (w2 / walk-01 :arg0 (p4 / person) :direction (a3 / away) :manner (b / buy-01 :polarity - :arg0 (w3 / woman) :arg1 (a4 / anything))) :time (a5 / after :op1 (a6 / argue-02 :arg0 (p5 / person) :arg1 (w4 / woman :mod (s2 / secret)) :arg2 (w5 / woman :mod (s3 / secret))))) :time (t / time :arg1-of (s4 / same-01)))
(t / try-01 :polarity - :arg0 (s / she) :arg1 (f / find-01 :arg0 (s2 / she) :arg1 (p / place :mod (u / university)) :arg1-of (c / cause-01 :arg0 (s3 / standing :mod (s4 / simple)) :manner (s5 / simple))) :mod (a / at-least))
FAILED_TO_PARSE#Number of opening and closing brackets doesn't match.
(s / speak-01 :arg0 (w / we) :arg1 (y / york :mod (n / new) :arg0-of (m / mizrachi :arg1 (f / federation :mod (k / krav) :mod (k2 / krav)) :purpose (f2 / find-out-03 :arg0 (w2 / we) :arg1 (t / thing :manner-of (d / deal-01 :arg0 (p / person :arg0-of (w3 / withdraw-01 :arg1 (r / robbers))) :arg2 (n2 / neighbourhood)))))))
(a / and :op1 (s / set-01 :arg0 (t / trip-03 :arg0 (c / country :name (n / name :op1 "N-A"))) :arg1 (s2 / system :name (n2 / name :op1 (i / immune)) :poss (c2 / country)) :arg2 (s3 / system :name (n3 / name :op1 (i2 / immune)) :poss (c3 / country))) :op2 (c4 / challenge-01 :arg0 (t2 / trip-03) :arg1 (s4 / system :name (n4 / name :op1 (i3 / immune)) :poss (c5 / country)) :manner (s5 / serious)) :op3 (c6 / challenge-01 :arg0 (t3 / trip-03) :arg1 (a2 / and :op1 (s6 / system :name (n5 / name :op1 (i4 / immune)) :arg1-of (d / direct-02 :degree (m / most))) :op2 (s7 / seat :arg1-of (i5 / include-91 :arg2 (s8 / seat :arg1-of (d2 / direct-02 :arg1-of (d3 / direct-02 :degree (m2 / most))))) :quant (s9 / some)))))
(a / and :op1 (c / combine-01 :arg1 (p / person :arg0-of (h / have-org-role-91 :arg2 (a2 / activist)) :arg1-of (i / include-91 :arg2 (p2 / person :arg0-of (h2 / have-org-role-91 :arg2 (a3 / activist)) :arg1-of (l / land-01)) :arg3 (p3 / percentage-entity :value (N / N-A)))) :arg2 (p4 / prosper-01 :arg0 (a4 / activist :arg0-of (h3 / have-org-role-91 :arg1 (d / dairy))))) :op2 (s / say-01 :arg0 (p5 / person :arg0-of (h4 / have-org-role-91 :arg2 (a5 / activist)) :arg1-of (i2 / include-91 :arg2 (p6 / person :arg0-of (h5 / have-org-role-91 :arg2 (a6 / activist)) :arg1-of (l2 / land-01)) :arg3 (p7 / percentage-entity :value (N2 / N-A)))) :arg1 (a7 / and :op1 (p8 / prosper-01 :arg0 (a8 / activist :arg0-of (h6 / have-org-role-91 :arg1 (d2 / dairy)))) :op2 (w / welfare :mod (i3 / intensive)))) :op3 (s2 / say-01 :arg0 (p9 / person :quant (p10 / percentage-entity :value (N3 / N-A)) :arg0-of (u / use-01 :arg1 (a9 / access-01 :arg1 (m / methamphetamine)))) :arg1 (p11 / person) :mod (a10 / at-least)))
FAILED_TO_PARSE#Number of opening and closing brackets doesn't match.
(a / and :op1 (c / come-up-11 :arg0 (p / police) :arg1 (r / raid-01 :arg1 (r2 / raid-01))) :op2 (f / find-01 :arg0 (p2 / police) :arg1 (a2 / and :op1 (p3 / person :quant (m / more-than :op1 70)) :op2 (p4 / person :quant (m2 / more-than :op1 70)) :op3 (p5 / person :quant (m3 / more-than :op1 70)) :op4 (p6 / person :quant (m4 / more-than :op1 70)) :op5 (e / et-cetera))))
(r / result-01 :arg1 (e / externation :mod (e2 / externation)) :arg2 (p / product-of :op1 (t / temporal-quantity :quant (N / N-A) :unit (m / month)) :op2 (t2 / temporal-quantity :quant (N2 / N-A) :unit (m2 / month))))
(a / allocate-01 :arg1 (a2 / activity-06 :arg0 (p / police :mod (e / everyday))) :arg2 (l / location :location-of (n / need-01 :arg1 (a3 / activity-06) :degree (m / most))) :path (i / information :arg1-of (c / compile-01 :arg0 (s / service))))
(i / intelligence :location (o / outside :op1 (r / region)))
(s / say-01 :arg1 (a / and :op1 (w / woman :quant 2 :mod (y / young)) :op2 (w2 / woman :quant 3 :mod (y2 / young)) :op3 (m / man :quant 3 :mod (m2 / middle-aged))) :arg2 (p / person :arg0-of (h / have-rel-role-91 :arg2 (s2 / sister))) :arg1-of (f / follow-01 :arg2 (p2 / person :arg0-of (h2 / have-rel-role-91 :arg1 (p3 / person) :arg2 (s3 / sister)))))
(h / have-03 :arg0 (w / we) :arg1 (p / person :arg0-of (s / say-01 :arg1 (h2 / have-03 :polarity - :arg0 (i / i) :arg1 (m / meltager)))))
(a / and :op1 (c / come-01 :arg1 (i / it)) :op2 (s / surprise-01 :arg0 (l / likely-01 :arg1 (u / use-01 :arg0 (s2 / section :arg1-of (i2 / include-91 :arg2 (p / population))) :arg1 (t / thing :quant 1 :arg0-of (u2 / use-01 :arg1 (g / game :mod (l2 / luxury) :example (m / minels)))) :degree (m2 / more)))))
(n / notice-01 :arg0 (w / we) :arg1 (t / thing :arg2-of (p / price-01 :arg1 (t2 / thing :arg2-of (p2 / price-01) :arg2-of (p3 / price-01 :arg1 (t3 / thing :arg2-of (p4 / price-01 :arg1 (t4 / thing :arg2-of (p5 / price-01 :arg1 (t5 / thing :arg2-of (p6 / price-01)))))))))))
(p / prove-01 :arg0 (s / shark :arg1-of (a / average-03)) :arg1 (a2 / at-least :op1 (t / temporal-quantity :quant (N / N-A) :unit (y / year)) :mod (a3 / at-least)))
(e / explain-01 :arg0 (m / message) :arg1 (t / thing :arg2-of (b / base-02 :arg1 (a / act-02 :arg1-of (i / inform-01 :arg0 (p / police :arg1-of (i2 / inform-01 :arg0 (p2 / police) :arg2 (c / city :quant 10 :mod (b2 / big :degree (m2 / most)) :arg1-of (i3 / include-91 :arg2 (c2 / city :quant 10 :mod (b3 / big :degree (m3 / most))))))))))) :time (y / year :mod (t2 / this)) :time (y2 / year :mod (t3 / this)) :location (t4 / thing :arg1-of (b4 / base-02 :arg2 (a2 / act-02 :arg1-of (i4 / inform-01 :arg0 (p3 / police))))))
(d / difficult :degree (e / extreme) :domain (s / say-01 :arg1 (s2 / steal-01 :arg1 (t / thing :arg0-of (c / cause-01 :arg1 (s3 / steal-01 :location (t2 / turkey :location (e2 / elsewhere))))))) :degree (e3 / extreme))
(b / base-02 :arg1 (g / good :domain (t / that)) :arg2 (a / and :op1 (t2 / temporal-quantity :quant (N / N-A) :unit (h / hour)) :op2 (t3 / temporal-quantity :quant (N2 / N-A) :unit (h2 / hour)) :op3 (r / rate-entity-91 :arg1 000 :arg2 000 :arg3 000)) :time (c / come-01 :arg1 (i / it) :arg3 (t4 / temporal-quantity :quant (N3 / N-A) :unit (h3 / hour)) :arg4 (a2 / and :op1 (t5 / temporal-quantity :quant (N4 / N-A) :unit (h4 / hour)) :op2 (t6 / temporal-quantity :quant (N5 / N-A) :unit (h5 / hour)) :op3 (r2 / rate-entity-91 :arg1 000 :arg2 000))))
(t / tax-01 :arg2 (t2 / tax-01 :arg3 (t3 / tax)))
(s / see-01 :arg0 (e / embassy) :arg1 (f / finns :location (h / hua :mod (p / particular)) :purpose (o / obtain-01 :arg1 (i / information :topic (s2 / situation :location (c / city))))))
(s / say-01 :arg0 (h / he) :arg1 (r / recommend-01 :arg1 (f / fuel :polarity - :arg0 (w / we) :arg1 (p / person :mod (f2 / fuel)) :degree (m / more))))
(w / win-01 :frequency 3 :arg0 (s / she) :time (b / between :op1 (t / time :mod (l / last)) :op2 (y / year :mod (l2 / last))) :frequency (r / rate-entity-91 :arg1 3 :arg2 (t2 / temporal-quantity :quant (N / N-A) :unit (y2 / year))))
(a / and :op1 (t / tsunami) :op2 (b / bomb-01 :time (y / year :mod (l / last)) :location (b2 / bangkok)) :time (t2 / then))
(s / say-01 :arg0 (n / newspaper :name (n2 / name :op1 "N-A") :mod (b / brazilian)) :arg1 (t / take-01 :arg0 (o / officer :mod (c / country :name (n3 / name :op1 "N-A"))) :arg1 (c2 / corps :mod (i / international) :mod (c3 / country)) :arg3 (a / appeal-02 :arg0 (o2 / officer) :arg2 (c4 / court :mod (i2 / international)))))
(t / think-01 :arg0 (h / he) :arg1 (p / point :polarity - :domain (t2 / that)))
(a / argue-01 :arg1 (p / prevent-01 :arg0 (t / this) :arg1 (i / infect-01)))
(e / explain-01 :li 1 :arg1 (p / possible-01 :arg1 (l / live-01 :arg0 (p2 / person :mod (a / ambitious)) :manner (w / way :arg0-of (b / bring-up-02 :arg1 (l2 / life :poss (p3 / person)) :duration (t / temporal-quantity :quant (N / N-A) :unit (y / year) :mod (f / further)))))))
(m / multi-sentence :snt1 (r / regretted :arg0 (d / damage-01 :arg1 (s / service :mod (b / business :mod (m2 / mail)))) :arg1 (o / operate-01 :arg1 (s2 / service :mod (b2 / business) :mod (m3 / mail)))) :snt2 (s3 / sanom :mode (e / expressive)))
(h / hope-01 :arg0 (f / family :arg1-of (h2 / have-org-role-91 :arg0 (w / woman) :arg2 (m / member))) :arg1 (r / remember-01 :arg0 (f2 / family) :arg1 (v / victim) :arg1-of (i / instead-of-91 :arg2 (a / and :op1 (f3 / flower) :op2 (a2 / adresions :arg1 (w2 / work-01 :arg0 (p / police)))))) :time (b / before :op1 (n / now) :quant (t / temporal-quantity :quant (N / N-A) :unit (w3 / week))))
(h / have-rel-role-91 :arg0 (t / that) :arg1 (t2 / that) :arg2 (f / friend :mod (g / good)))
(c / contrast-01 :arg1 (p / possible-01 :arg1 (m / model :mod (l / little) :domain (i / i))) :arg2 (p2 / possible-01 :arg1 (m2 / maintain-01 :arg0 (w / we) :arg1 (s / spirit :mod (f / flow-01))) :time (t / time :arg1-of (s2 / same-01))))
(f / face-01 :arg0 (p / person :quant 6) :arg1 (s / situation :mod (o / overall)))
(s / shock-01 :arg1 (p / person :mod (e / economy)) :time (v / voice :poss (p2 / person)))
(b / behave-01 :arg0 (r / room :mod (i / indigenous) :quant (a / amr-unknown)) :condition (c / cut-back-05 :arg0 (t / they)))
(b / build-01 :arg1 (b2 / building :arg0-of (f / fund-01 :arg1 (a / aberdeen))))
(i / increase-01 :arg0 (w / we) :arg1 (f / fund :arg1-of (i2 / increase-01)))
(a / and :op1 (n / number :arg1-of (i / include-91 :arg2 (t / thing :quant 9 :arg1-of (f / fund-01 :arg0 (p / property)))) :domain (t2 / this) :arg1-of (h / high-02 :degree (m / most))) :op2 (s / say-01 :arg0 (i2 / i) :arg1 (f2 / fund-01 :arg0 (b / building :arg1-of (f3 / fund-01 :arg0 (p2 / property :mod (c / country :name (n2 / name :op1 "N-A")))) :quant (a2 / all)) :arg1 (t3 / thing :arg2-of (f4 / fund-01 :arg1 (p3 / property))))))
(l / live-01 :arg0 (c / city :arg1-of (m / moral-02)) :arg1-of (c2 / complete-02) :time (a / already) :concession (m2 / moral-02))
(c / cause-01 :polarity - :arg0 (f / finalize-01 :arg1 (t / thing :arg2-of (f2 / fund-01 :arg1 (p / property :mod (c2 / country :name (n / name :op1 "N-A")) :mod (b / big :degree (m / most)) :location (c3 / country :name (n2 / name :op1 "N-A")))))) :arg1 (f3 / finalize-01 :arg1 (t2 / thing :arg1-of (f4 / fund-01 :arg0 (t3 / trade-01 :arg1 (b2 / build-01 :arg1 (t4 / trade-01 :quant 2 :arg1 (b3 / building)))))) :time (d / day)))
(s / say-01)
(s / sunti :arg1 (a / and :op1 (p / person :arg0-of (h / have-org-role-91 :arg1 (p2 / police) :arg2 (p3 / person :arg1-of (e / expert-01)))) :op2 (p4 / person :arg0-of (h2 / have-org-role-91 :arg1 (f / force :mod (m / military)) :arg2 (p5 / person :arg1-of (e2 / expert-01))))) :arg2 (h3 / heorla :mod (m2 / mrs)) :mod (a2 / also))
(p / possible-01 :arg1 (s / see-01 :arg1 (h / heila :mod (h2 / heila)) :time (a / after :op1 (n / now) :duration (t / temporal-quantity :quant (N / N-A) :unit (y / year))) :condition (p2 / plan-01 :arg1 (e / everything) :arg1-of (c / conform-01 :arg2 (t2 / thing :arg1-of (p3 / plan-01))))))
(c / contrast-01)
(r / recommend-01 :arg1 (c / collect-01 :polarity - :arg0 (w / we) :arg1 (r2 / rate-entity-91 :arg1 (u / under :op1 1) :arg2 (t / temporal-quantity :quant (N / N-A) :unit (y / year)))) :arg2 (w2 / we))
(t / true :domain (t2 / this) :mod (p / particular) :arg1-of (c / cause-01 :arg0 (a / and :op1 (r / rotation :source (s / sector :quant 1)) :op2 (e / equal-01 :arg1 (s2 / sector :source (s3 / sector :quant 1)) :arg2 (e2 / equal-01 :arg1 (s4 / sector))))))
(b / base-02 :arg1 (p / person :quant 3 :arg0-of (s / sing-01)) :arg2 (p2 / person :arg0-of (s2 / sing-01)))
(a / and :op1 (i / increase-01 :arg1 (h / hand :part-of (w / we)) :arg2 (m / middle :part-of (t / term :mod (p / parliament))) :ord (o / ordinal-entity :value 1)) :op2 (r / recognize-02 :arg0 (i2 / i) :arg1 (p2 / possible-01 :polarity - :arg1 (c / comply-01 :arg0 (g / government-organization :arg0-of (g2 / govern-01)) :arg1 (p3 / programme :arg0 (g3 / government-organization))))) :ord (o2 / ordinal-entity :value 1))
(r / reject-01 :arg1 (d / debt-friendliness :arg1-of (p / propose-01 :arg0 (l / left))) :arg1-of (c / cause-01 :arg0 (c2 / consider-01 :arg1 (c3 / consider-02 :polarity - :arg1 (i / it)))))
(u / understand-01 :arg0 (a / and :op1 (m / meet-03) :op2 (m2 / meet-03) :op3 (p / person :mod (f / fundamental) :arg0-of (r / responsible-01))) :arg1 (t / that))
(b / bring-01 :arg0 (b2 / blow-14 :arg1 (p / person :arg0-of (d / drive-01))) :arg1 (p2 / person :quant 0.75 :arg0-of (d2 / drive-01)))
(i / investigate-01 :arg1 (c / case-03) :arg2 (t / threaten-01 :arg1 (s / safe-01 :arg1 (r / road)) :arg1-of (r2 / reasonable-02)) :prep-in (p / particular))
(m / mention-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (a / association :mod (p2 / parafesty)) :arg2 (c / chairman))) :arg1 (a2 / and :op1 (a3 / access-01 :arg1 (f / festival) :manner (f2 / finance)) :op2 (p3 / possible-01 :arg1 (h2 / hold-04 :arg1 (e / event) :time (y / year :arg1-of (c2 / come-01))))))
(s / see-01 :arg0 (s2 / study-01) :arg1 (e / enough :mod (s3 / small) :domain (p / pass-01 :arg1 (s4 / skin :part-of (s5 / skin)))))
(c / change-01 :arg0 (f / family) :arg1 (a / anniversary :poss (y / year)) :manner (h / helsinki))
(c / cause-01 :arg0 (b / be-located-at-91 :arg1 (a / adult :quant (s / series)) :arg2 (o / often :degree (v / very)) :frequency (o2 / often :degree (v2 / very))) :arg1 (f / fine-04 :arg1 (p / play-01 :arg1 (t / tunnel :mod (h / hasu)))))
(a / and :op1 (i / involve-01 :arg1 (f / family :quant (a2 / all) :arg0-of (h / have-rel-role-91 :arg1 (c / company :mod (t / team)) :arg2 (f2 / father))) :arg1-of (s / strong-02)) :op2 (p / president-in-office :arg1 (p2 / person :arg0-of (h2 / have-rel-role-91 :arg1 (c2 / company :mod (t2 / team)) :arg2 (m / mother))) :arg1-of (l / long-03)))
(v / volley :arg0 (h / hasul :mod (e / essé)) :arg1 (s / species) :arg1-of (n / natural-03) :time (p / past))
(a / allow-01 :arg0 (l / line :mod (w / work-01) :poss (i / it)) :arg1 (u / use-01 :arg0 (p / person :arg0-of (u2 / use-01) :mod (d / day) :quant (a2 / approximately :op1 150000000)) :arg1 (p2 / person :arg0-of (u3 / use-01) :mod (d2 / day)) :arg2 (w2 / way :instrument-of (a3 / and :op1 (r / reality :mod (m / modifying)) :op2 (i2 / identity)) :manner (w3 / way :mod (l2 / laughable :mod (a4 / almost))))) :manner (l3 / line :mod (w4 / work-01) :poss (i3 / it)))
(a / and :op1 (p / positive :domain (a2 / and :op1 (r / releases :mod (p2 / press)) :op2 (t / thing :arg1-of (o / opine-01)) :quant (m / many))) :op2 (p3 / positive :domain (a3 / and :op1 (t2 / thing :arg1-of (o2 / opine-01)) :op2 (t3 / thing :arg1-of (o3 / opine-01)) :op3 (t4 / thing :arg1-of (o4 / opine-01))) :degree (m2 / more :degree (m3 / much)) :compared-to (e / event :time (e2 / event))))
(k / know-01 :arg0 (h / he) :arg1 (a / and :op1 (b / be-located-at-91 :arg1 (p / person :mod (c / country :name (n / name :op1 "Britain"))) :arg2 (b2 / between :op1 (s / situation :quant 4) :op2 (s2 / situation :poss (p2 / person)))) :op2 (s3 / share-01 :arg0 (p3 / person) :arg1 (p4 / place :ord (o / ordinal-entity :value 1) :poss (g / group :poss (p5 / person) :prep-with (c2 / country :arg0-of (h2 / have-03 :arg1 (b3 / blessing) :time (a2 / after :op1 (o2 / overcome-01 :arg0 (p6 / person) :arg1 (a3 / and :op1 (p7 / person :mod (c3 / country :name (n2 / name :op1 "Britain"))) :op2 (p8 / person :mod (c4 / country)) :op3 (c5 / country))) :mod (s4 / still)))))))))
(s / species :domain (t / this) :arg1-of (c / cause-01 :arg0 (p / possible-01 :polarity - :arg1 (a / accept-01 :arg0 (e / everyone :mod (t2 / this)) :arg1 (a2 / and :op1 (t3 / tolls) :op2 (d / dissent-01) :op3 (c2 / calculation) :op4 (e2 / et-cetera)) :mod (u / universal)))) :mod (f / further :op1 (p2 / point :mod (t4 / treaty :name (n / name :op1 "N-A")))))
(c / contrast-01 :arg2 (p / possible-01 :arg1 (c2 / change-01 :arg1 (t / that))))
(s / say-01 :arg0 (p / person :arg0-of (a / analyze-01)) :arg1 (p2 / put-01 :arg0 (d / demonstrate-01) :arg1 (a2 / and :op1 (c / country :name (n / name :op1 "United" :op2 "States")) :op2 (w / west :part-of (c2 / country))) :arg2 (p3 / position :mod (c3 / clumsy))))
(b / be-located-at-91 :arg1 (r / rice) :arg2 (t / there))
(s / say-01 :arg0 (c / couple) :arg1 (g / gain-02 :arg0 (c2 / couple) :arg1 (u / understand-01 :arg1 (h / holder :arg0-of (e / eat-01 :arg1 (p / person :arg0-of (h2 / have-rel-role-91 :arg2 (m / mother)))) :arg0-of (e2 / exemplify-01 :arg1 (p2 / possible-01 :polarity - :arg1 (l / let-down-04 :arg0 (p3 / person) :arg1 (f / food)))) :mod (g2 / good :degree (m2 / more))))) :medium (w / write-01 :arg0 (c3 / couple) :arg1 (b / book)))
(r / raise-01 :arg0 (h / he) :arg1 (p / problem) :arg2 (a / adjust-01 :arg0 (h2 / he) :arg1 (e / economy :poss (h3 / he)) :location (m / michigan)))
(o / offer-01 :arg0 (p / person :mod (c / country :name (n / name :op1 "N-A"))) :arg1 (o2 / opportunity :purpose (p2 / play-11 :arg0 (p3 / person) :arg2 (c2 / country :name (n2 / name :op1 "N-A")) :path (c3 / centre :mod (t / telephone) :poss (p4 / person)))) :arg1-of (c4 / contrary-01))
(s / say-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (g / glaswoglane :name (n / name :op1 (2 / 23-year-old))) :arg2 (s2 / skinner))) :arg1 (f / flattery :domain (c / compare-01 :arg1 (' / '))))
(o / overcome-01 :arg1 (i / it) :instrument (f / floor))
(c / contrast-01 :arg1 (m / medal-competition :domain (t / this) :mod (o / only) :duration (d / day)) :arg2 (n / news :mod (g / good :degree (m2 / more)) :beneficiary (c2 / country :name (n2 / name :op1 "N-A")) :domain (t2 / this)))
(a / and :op1 (r / resembles :arg0 (t / thread :mod (t2 / this)) :arg1 (c / coffee :quant (m / more) :arg1-of (i / include-91 :arg2 (c2 / coffee :mod (c3 / coffee))))) :op2 (a2 / attract-01 :arg0 (t3 / thread) :arg1 (n / number :mod (e / enormous) :quant (n2 / number :mod (e2 / enormous)) :arg1-of (- / -rrb- :time (y / year :mod (l / last))))))
(a / and :op2 (s / start-01 :arg0 (t / television) :arg1 (s2 / see-01 :arg0 (h / he) :arg1 (a2 / and :op1 (k / kourtyye) :op2 (c / child :mod (t2 / this))) :mod (o / only)) :time (t3 / time :mod (l / leisure))))
(d / die-01 :arg1 (h / he) :location (s / site))
(b / burn-01 :arg1 (w / water :arg1-of (b2 / burn-01 :arg0 (o / ocean :name (n / name :op1 (u / ultraviolet) :op2 (l / light) :op3 (l2 / light) :op4 (l3 / light) :op5 (l4 / light))))))
(s / say-01 :arg0 (p / person :name (n / name :op1 "jeremy" :op2 "hunt") :arg0-of (h / have-org-role-91 :arg2 (m / minister :mod (h2 / health)))) :arg1 (s2 / superior-01 :arg1 (a / agreement) :arg2 (d / doctor :mod (c / country))) :time (a2 / after :op1 (v / vote-01)))
(r / relieved :arg1 (a / and :op1 (c / company :arg0-of (o / operate-01 :arg1-of (l / local-02))) :op2 (c2 / company :mod (c3 / charter) :mod (c4 / charter))) :time (c5 / continue-01 :arg1 (f / fly-01) :time (e / eventual)) :mod (d / definite))
(c / contrast-01 :arg1 (i / issue-02 :arg1-of (k / key-02) :domain (i2 / issue-02 :arg1-of (k2 / key-02))) :arg2 (r / reconciled :arg0 (p / person :mod (c2 / country :name (n / name :op1 "N-A"))) :arg1 (p2 / person) :arg2 (r2 / role :mod (p3 / peacemaker)) :time (r3 / recent) :arg1-of (c3 / contrast-01 :arg2 (s / support-01 :arg0 (p4 / person) :arg1 (s2 / side :arg0-of (o / oppose-01) :arg0-of (s3 / support-01))))))
(c / cite-01 :arg0 (h / he) :arg1 (p / person :quant 1 :arg1-of (i / include-91 :arg2 (p2 / person :quant 5 :arg1-of (t / trust-01 :arg0 (h2 / he) :arg1-of (t2 / trust-01 :arg0 (h3 / he)))))) :time (r / rise-01 :arg1 (p3 / putin) :arg4 (p4 / power)))
(c / contrast-01 :arg2 (g / go-08 :arg1 (e / everything) :arg2 (g2 / good)) :arg2-of (f / fortunate-01))
(m / multi-sentence :snt1 (e / explain-01 :mode (i / interrogative) :arg0 (p / person :arg0-of (p2 / play-01)) :arg1 (u / use-01 :arg0 (p3 / person) :arg1 (ä / älypuhelimiaan)) :time (l / look-01 :arg0 (p4 / person) :arg1 (p5 / pokémon :arg1-of (t / tracked :arg0 (g / gps))))) :snt2 (a / and :op1 (- / -rrb- :mode (i2 / interrogative) :mod (p6 / phone)) :op2 (-2 / -rrb- :mod (p7 / phone))))
(a / and :op2 (k / know-01 :polarity - :arg0 (h / he) :mod (s / still)))
(a / attack-01 :arg0 (a2 / attack-01 :arg1-of (c / come-01 :arg3 (w / weapon :mod (a3 / altogether))) :arg1-of (c2 / come-01 :arg3 (w2 / weapon :mod (a4 / altogether)))) :arg1 (p / place :location-of (e / event)))
(a / and :op1 (r / receive-01 :arg0 (p / person :arg0-of (r2 / receive-01 :arg1 (s / scene :quant 1) :time (a2 / already))) :arg1 (s2 / scene :quant 1) :time (a3 / already)) :op2 (r3 / risk-01 :arg2 (g / get-01 :arg1 (a4 / another))))
(r / recommend-01 :arg1 (d / develop-02 :arg0 (w / we) :arg1 (t / ticagreloria :mod (p / preliminary)) :purpose (p2 / possible-01 :arg1 (i / increase-01 :arg0 (w2 / we) :arg1 (o / option :mod (t2 / treat-03 :arg1 (w3 / we) :arg2 (p3 / person))) :purpose (p4 / possible-01 :arg1 (i2 / increase-01 :arg0 (w4 / we) :arg1 (o2 / option :mod (t3 / treat-03) :arg2-of (a / available-02 :arg1 (p5 / person)) :arg1-of (u / useful-05 :arg2 (p6 / person) :mod (p7 / potential)))))))))
(s / set-02 :arg0 (s2 / set :duration (t / temporal-quantity :quant (N / N-A) :unit (y / year))) :arg1 (r / request-01 :arg1 (m / mail :mod (a / automatic))) :arg2 (v / vote-01))
FAILED_TO_PARSE#Number of opening and closing brackets doesn't match.
(a / allow-01 :arg0 (t / this) :arg1 (d / defend-01 :arg0 (y / you) :arg1 (a2 / attack-01 :arg1-of (a3 / arm-01))))
(m / multi-sentence :snt1 (s / say-01 :arg0 (h / he) :arg1 (t / thing :arg1-of (s2 / say-01 :arg0 (h2 / he)))) :snt2 (a / and :op1 (k / kid :domain (i / i) :topic (h3 / health :poss (i2 / i)) :degree (p / pretty)) :op2 (p2 / put-01 :arg0 (i3 / i) :arg1 (m2 / mouth :part-of (i4 / i)) :arg2 (m3 / mouth :part-of (i5 / i)) :manner (k2 / kind :mod (a2 / all))) :op3 (k3 / kuraisesta :arg0 (i6 / i) :arg1 (w / water))))
(s / see-01 :arg0 (w / we) :arg1 (p / police) :location (h / here) :frequency (m / many :degree (i / incredible)))
(c / cause-01 :arg0 (q / quiet :polarity - :arg1 (w / we) :degree (s / so)) :arg1 (g / get-05 :arg1 (w2 / we) :arg2 (u / up)))
(p / phone-number-entity :value (N / N-A))
(d / destroy-01 :arg1 (p / part :part-of (m / mainland :part-of (c / country :name (n / name :op1 "N-A")))) :time (s / summer :mod (t / this)) :arg1-of (c2 / cause-01 :arg0 (a / and :op1 (d2 / destroy-01 :arg0 (m2 / mainland :part-of (m3 / mainland :part-of (c3 / country :name (n2 / name :op1 "N-A")))) :arg1 (p2 / person :quant 4 :arg1-of (d3 / die-01))) :op2 (d4 / die-01 :arg1 (i / island)))))
(u / use-01 :arg1 (a / and :op1 (s / shortened) :op2 (m / measure-02)) :arg2 (p / purchase-01 :arg1 (p2 / person :arg0-of (h / have-rel-role-91 :arg2 (p3 / patient)))) :arg1-of (p4 / possible-01))
(p / put-01 :arg0 (a / authors) :arg1 (d / door :mod (a2 / apartment)) :arg2 (o / or :op1 (s / stick) :op2 (p2 / pin) :op3 (p3 / piece)) :arg1-of (c / cause-01 :arg0 (e / experimenting :arg1 (p4 / person :arg0-of (r / reside-01)) :mod (a3 / actual))) :location (h / here))
(b / block-01 :arg0 (o / organization :name (n / name :op1 "senate" :op2 "republicans")) :arg1 (c / confirmation :poss (p / person :name (n2 / name :op1 "Barack" :op2 "Obama") :arg0-of (h / have-org-role-91 :arg2 (p2 / president)))) :time (s / since :op1 (a / appoint-01 :arg0 (p3 / person :name (n3 / name :op1 "Barack" :op2 "Obama") :arg0-of (h2 / have-org-role-91 :arg2 (p4 / president))) :arg1 (p5 / person) :arg2 (m / marched))))
(s / say-01 :arg0 (p / person :arg0-of (r / represent-01 :arg1 (p2 / person :arg0-of (r2 / represent-01)))) :arg1 (a / and :op1 (s2 / speak-01 :polarity - :arg0 (p3 / person) :arg2 (p4 / person :name (n / name :op1 "Clinton")) :arg1-of (d / direct-02)) :op2 (s3 / speculate-01 :arg1 (p5 / person))) :time (l / late :degree (m / more)))
(l / love-01 :arg0 (m / man :mod (m2 / middle-aged)) :arg1 (v / vinyl))
(m / multi-sentence :snt1 (h / have-03 :arg0 (w / we) :arg1 (p / person :arg0-of (s / say-01 :arg1 (p2 / person :arg0-of (s2 / say-01 :arg1 (s3 / say-01)))))) :snt2 (h2 / have-03 :arg0 (i / i) :arg1 (t / thing :mod (r / record))))
(m / multi-sentence :snt1 (c / contrast-01 :arg2 (p / possible-01 :arg1 (m2 / mean-01 :arg1 (r / receive-01 :arg0 (b / beam :mod (t / this)) :arg1 (m3 / money :quant (m4 / more)) :arg2 (i / industry)))) :arg2 (p2 / possible-01 :arg1 (m5 / mean-01 :arg1 (r2 / receive-01 :arg0 (b2 / beam :mod (t2 / this)) :arg1 (m6 / money :quant (m7 / more)) :arg2 (i2 / industry))))) :snt2 (c2 / complain-01 :polarity - :arg0 (i3 / i) :arg1 (m8 / much :polarity -)))
(a / affect-01 :arg0 (c / compete-01 :arg1-of (i / intensify-01)) :arg1 (t / thing :arg2-of (p / price-01) :arg2-of (p2 / price-01)) :mod (a2 / also))
FAILED_TO_PARSE#Two concepts in a row.
(s / say-01 :arg0 (p / person :arg0-of (s2 / sell-01 :arg1 (s3 / sell-01))) :arg1 (r / reduce-01 :polarity - :arg1 (n / number :quant-of (s4 / sell-01))) :arg0-of (c / cause-01 :arg1 (s5 / suffer-01 :polarity - :arg0 (s6 / service :mod (c2 / customer)))))
(p / phone-number-entity :value (N / N-A))
(c / contrast-01 :arg1 (s / start-01 :arg1 (f / friday :arg1 (r / rio))) :arg2 (a / allow-01 :arg1 (s2 / showcase :arg0 (i / individual :mod (t / top) :poss (w / world)) :arg1 (s3 / skill :poss (i2 / individual)) :arg2 (a2 / audience :arg1-of (e / empty-02)))))
(t / terminate-01 :arg0 (w / website :poss (f / foundation)) :arg1 (h / holder :arg1 (r / right-05 :arg2 (a / acquire-01 :arg1 (i / information :arg2-of (n / name-01)) :location (m / map :mod (s / same))))) :arg1-of (f2 / find-01 :arg1-of (p / possible-01)))
(c / contrast-01 :arg1 (r / risk-01 :arg2 (w / work-09 :arg1 (f / foundation) :manner (s / somehow))) :arg2 (r2 / recommend-01 :arg1 (p / possible-01 :polarity - :arg1 (w2 / work-09))))
(t / try-01 :mode (i / imperative) :arg0 (y / you) :arg1 (j / jury :arg0 (j2 / jury :mod (p / peer :degree (s / so))) :arg1 (p2 / prevent-01 :arg0 (j3 / jury) :arg1 (p3 / person :mod (y2 / young)) :arg2 (c / crime-02))) :location (h / helsinki))
(l / letter :quant 1 :arg1-of (i / include-91 :arg2 (o / organization :arg0-of (t / trumps :arg1 (t2 / trumps :arg1 (a / andrew :name (n / name :op1 (r / republican) :op2 (a2 / andrew))))))))
(s / satisfy-01 :arg0 (a / and :op1 (p / person :arg0-of (h / have-org-role-91 :arg2 (c / chief :mod (y / yle)))) :op2 (p2 / person :arg0-of (h2 / have-org-role-91 :arg2 (r / recalls)))) :arg1 (t / thing :arg2-of (r2 / rate-01)) :arg2 (a2 / and :op1 (t2 / thing :arg2-of (r3 / rate-01)) :op2 (r4 / recalls)) :arg1-of (c2 / cause-01 :arg0 (d / divide-02 :arg1 (p3 / person :arg0-of (v / view-01)) :arg2 (o / olympics :arg1 (i / instrument :arg1-of (d2 / differ-02)) :ord (o2 / ordinal-entity :value 1)))))
(s / satisfy-01 :arg0 (a / and :op1 (p / person :arg0-of (h / have-org-role-91 :arg2 (m / minister :mod (p2 / prime)))) :op2 (p3 / person :arg0-of (h2 / have-org-role-91 :arg2 (m2 / minister :mod (p4 / prime)))) :op3 (p5 / person :arg0-of (h3 / have-org-role-91 :arg2 (m3 / minister :mod (p6 / prime))))) :arg1 (a2 / and :op1 (p7 / person :arg0-of (h4 / have-org-role-91 :arg2 (m4 / minister :mod (p8 / prime)))) :op2 (p9 / person :arg0-of (h5 / have-org-role-91 :arg2 (m5 / minister :mod (p10 / prime))))) :arg2 (a3 / and :op1 (p11 / person :arg0-of (h6 / have-org-role-91 :arg2 (m6 / minister :mod (p12 / prime)))) :op2 (p13 / person :arg0-of (h7 / have-org-role-91 :arg2 (m7 / minister :mod (p14 / prime))))))
(c / contrast-01 :arg1 (r / reason :polarity - :arg0-of (c2 / cause-01 :arg1 (c3 / cancel-01 :arg0 (p / person) :arg1 (j / journey :arg0 (p2 / person) :arg2 (e / explode-01)))) :domain (p3 / plan-01 :arg0 (p4 / person :arg0-of (t / tour-01) :mod (c4 / country :name (n / name :op1 "N-A"))) :arg1 (c5 / cancel-01 :arg0 (p5 / person) :arg1 (e2 / explode-01)))) :arg2 (r2 / recommend-01 :arg1 (f / follow-02 :arg0 (p6 / person :mod (c6 / country :name (n2 / name :op1 "N-A"))) :arg1 (t2 / thing :arg1-of (s / say-01)))))
(a / attraction :arg0 (a2 / authority :arg1-of (l / local-02)) :arg1 (a3 / and :op1 (p / person :arg0-of (h / have-org-role-91 :arg2 (a4 / authority)) :arg1-of (l2 / local-02)) :op2 (p2 / person :arg2-of (t / total-01 :arg1 (b / bomb :quant 4) :time (y / yesterday)) :arg2-of (t2 / total-01))) :time (t3 / turn-01 :arg0 (a5 / authority :arg1-of (l3 / local-02)) :arg1 (b2 / bomb :quant 4) :time (y2 / yesterday)))
(s / say-01 :arg0 (h / he) :arg1 (h2 / have-purpose-91 :arg1 (h3 / have-purpose-91 :arg2 (d / destroy-01 :arg1 (t / tourism :poss (c / country)))) :arg2 (h4 / have-purpose-91 :arg1 (a / attack-01 :mod (a2 / all)) :arg2 (a3 / area :mod (p / person :arg0-of (t2 / tour-01))))))
(h / have-org-role-91 :arg0 (p / person :arg0-of (h2 / have-org-role-91 :arg2 (p2 / professor))) :arg2 (p3 / professor))
(s / say-01 :arg0 (p / person :name (n / name :op1 "voutilainen")) :arg1 (c / contrast-01 :arg1 (p2 / possible-01 :polarity - :arg1 (b / base-02 :arg1 (a / access-01 :arg1 (d / document)) :arg2 (g / guideline :poss (a2 / authority)))) :arg2 (b2 / base-02 :arg1 (a3 / access-01) :arg2 (l / law))))
(r / remain-01 :arg1 (c / car :mod (p / passenger) :arg0-of (c2 / carry-01 :arg1 (w / woman :mod (1 / 1972-born)))) :arg3 (p2 / pin) :location (c3 / car :poss (c4 / car)))
(t / tell-01 :arg0 (h / he) :arg1 (w / want-01 :arg0 (h2 / he) :arg1 (g / get-01 :arg0 (h3 / he) :arg1 (w2 / weight :arg1-of (n / normal-02) :arg1-of (c / cost-01 :arg2 (m / monetary-quantity :quant 10 :unit (p / pound)) :time (t2 / then))))) :arg2 (p2 / press :time (e / evening)) :time (t3 / tell-01 :arg0 (h4 / he) :arg2 (p3 / press)))
(m / multi-sentence :snt1 (a / and :op1 (r / return-01 :arg1 (p / person :arg0-of (r2 / respect-01 :arg1 (a2 / and :op1 (r3 / right :mod (d / democracy)) :op2 (r4 / right :mod (h / human))))) :arg4 (a3 / and :op1 (t / thing :arg2-of (r5 / right-05 :arg1 (d2 / democracy))) :op2 (r6 / right :mod (h2 / human)))) :op2 (w / write-01 :arg0 (p2 / person) :arg1 (a4 / and :op1 (p3 / person :arg0-of (h3 / have-org-role-91 :arg2 (m2 / minister :mod (p4 / prime)))) :op2 (p5 / person :arg0-of (h4 / have-org-role-91 :arg2 (m3 / minister :mod (p6 / prime)))) :op3 (p7 / person :arg0-of (h5 / have-org-role-91 :arg2 (m4 / minister :mod (f / foreign)))) :op4 (p8 / person :arg0-of (h6 / have-org-role-91 :arg2 (m5 / minister :mod (f2 / foreign)))) :op5 (p9 / person :arg0-of (h7 / have-org-role-91 :arg2 (m6 / minister :mod (f3 / foreign)))) :op6 (p10 / person :arg0-of (h8 / have-org-role-91 :arg2 (m7 / minister :mod (f4 / foreign)))) :op7 (p11 / person :arg0-of (h9 / have-org-role-91 :arg2 (j / journalist)))))) :snt2 (r7 / reply :arg0 (j2 / journalist)))
(r / replace-01 :arg0 (p / person :arg0-of (l / lead-02 :arg1 (p2 / persecution :mod (a / anton)))) :arg1 (p3 / person :arg0-of (l2 / lead-02 :arg1 (c / communist :mod (c2 / communist)))) :arg2 (p4 / person :arg0-of (l3 / lead-02 :arg1 (p5 / persecution :mod (a2 / anton)))))
(p / possible-01 :arg1 (w / watch-01 :arg0 (y / you) :arg1 (i / it) :location (h / here)) :condition (d / display-01 :polarity - :arg1 (t / thing) :manner (p2 / proper)))
(s / say-01 :arg0 (p / political-party :name (n / name :op1 "N-A")) :arg1 (t / tell-01 :polarity - :arg1 (t2 / train-01 :arg1-of (r / require-01)) :arg2 (m / mission)))
(f / find-01 :arg0 (r / risk-01 :arg2 (h / health)) :arg1 (o / or :op1 (t / thing :arg1-of (s / symbolize-01 :arg2 (t2 / thing :arg1-of (e / enable-01)))) :op2 (t3 / thing :arg2-of (b / be-located-at-91 :arg1 (o2 / or :op1 (u / url-entity :value (l / limit-value)) :op2 (u2 / url-entity :value (b2 / basement))) :op3 (u3 / url-entity :value (b3 / basement)) :op4 (w / window :purpose (r2 / room :mod (l2 / live-01))) :op5 (w2 / window :purpose (r3 / room :mod (l3 / live-01)))))) :arg2 (r4 / room :part-of (r5 / room :part-of (l4 / laundry))))
(b / belong-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg2 (s / sillanpää))) :arg1 (a / artists :name (n / name :op1 (f / finnish)) :mod (f2 / finnish)) :duration (m / more-than :op1 (t / temporal-quantity :quant (N / N-A) :unit (y / year))))
(c / cause-01 :arg0 (l / listen-01 :polarity - :arg0 (p / person :mod (e / economy)) :arg1 (i / interest :mod (c2 / common)) :arg1-of (c3 / cause-01 :arg0 (r / represent-01 :arg0 (p2 / person :mod (e2 / economy)) :arg1 (p3 / person :mod (e3 / elite) :mod (e4 / elite))))) :arg1 (h / have-condition-91 :arg1 (c4 / care-01 :polarity - :arg0 (p4 / person)) :arg2 (r2 / represent-01 :arg0 (p5 / person :mod (e5 / economy)) :arg1 (k / kind :mod (e6 / elite)))))
(h / have-condition-91 :arg1 (j / job :quant (a / amr-unknown)) :arg2 (g / go-02 :arg0 (t / they) :direction (a2 / away)))
(w / warn-01 :arg0 (p / person :arg0-of (i / invest-01)) :arg1 (p2 / possible-01 :arg1 (o / obligate-01 :arg1 (p3 / person :arg0-of (i2 / invest-01)) :arg2 (f / fund-01 :arg0 (p4 / person) :arg1 (c / catch-up-04 :arg1 (p5 / person)) :location (s / side :quant 2017)))) :time (w2 / week :mod (t / this)))
(p / play-01 :arg0 (p2 / person :arg0-of (h / have-org-role-91 :arg1 (c / customs) :arg3 (i / inspect-01)) :arg0-of (h2 / have-org-role-91 :arg1 (c2 / customs) :arg3 (i2 / inspect-01))) :arg0-of (c3 / cause-01 :arg1 (p3 / play-11 :arg0 (p4 / person) :arg2 (t / toy :mod (f / favorite) :poss (p5 / person)))))
(a / and :op1 (d / duty :poss (s / search-01 :arg1 (a2 / and :op1 (a3 / arm) :op2 (e / explosive)) :ord (o / ordinal-entity :value 1))) :op2 (p / place-01 :arg1 (d2 / duty) :arg2 (w / work-01 :location (a4 / airport :mod (h / helsinki-vantaa))) :time (y / year :mod (n / next))))
(n / need-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg2 (r / ropsille))) :arg1 (a / attacker :mod (n2 / new)) :time (m / move-01 :arg0 (p2 / person :arg0-of (h2 / have-org-role-91 :arg2 (k / king)) :arg0-of (h3 / have-org-role-91 :arg2 (k2 / king))) :arg1 (p3 / person :arg0-of (h4 / have-org-role-91 :arg2 (k3 / king))) :arg2 (p4 / person :arg0-of (h5 / have-org-role-91 :arg2 (k4 / king)))))
(a / and :op1 (p / part :part-of (f / fan :mod (f2 / female)) :arg1-of (i / instead-of-91 :arg2 (m / make-01 :arg0 (f3 / fan) :arg1 (e / excuse-02 :arg0 (f4 / fan) :arg2 (a2 / actor))))) :op2 (i2 / instructed :polarity - :arg0 (f5 / fan) :arg1 (c / criticize-01)))
(a / and :op1 (k / know-01 :arg0 (p / person :quant (f / few)) :arg1 (b / begins :arg1 (s / season :mod (l / lights :mod (n / north))) :time (e / early))) :op2 (c / continue-01 :arg0 (p2 / person) :arg1 (s2 / spring) :arg1-of (l2 / long-03)))
(a / and :op1 (1 / 12-0) :op2 (t / touch-01 :arg0 (c / country :name (n / name :op1 "United" :op2 "Kingdom")) :arg1 (b / ball) :degree (b2 / bare)) :li (12 / 12-0))
(m / multi-sentence :snt1 (h / have-03 :arg0 (b / boat) :arg1 (v / vote-01 :arg2 3 :arg1 (b2 / boat)) :concession (e / even-if :op1 (r / rowing :arg1 (t / they) :manner (t2 / together)))) :snt2 (p / present :mod (a / all) :time (p2 / present) :time (h2 / hang-01 :arg0 (d / duo) :arg1 (m2 / medal :mod (g / gold) :ord (o / ordinal-entity :value 2) :poss (w / woman :ord (o2 / ordinal-entity :value 1) :arg0-of (c / compete-02 :arg1 (w2 / woman :ord (o3 / ordinal-entity :value 1) :arg0-of (c2 / compete-02 :arg1 (w3 / woman :ord (o4 / ordinal-entity :value 1) :arg0-of (c3 / compete-02 :arg1 (w4 / woman)) :ord (o5 / ordinal-entity :value 1)) :location (c4 / country :name (n / name :op1 "N-A"))))))))) :snt3 (p3 / possible-01 :arg1 (r2 / reach-01 :arg0 (w5 / woman) :arg1 (a2 / achieve-01 :mod (s / such)))))
(s / set :arg0 (c / couple) :arg1 (r / rhythm :mod (r2 / rough) :arg1-of (r3 / reach-01 :polarity - :arg0 (c2 / company :arg0-of (c3 / compete-02 :arg1 (c4 / company))))))
(c / contrast-01 :arg1 (r / resign-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg2 (m / minister :mod (p2 / prime)))) :arg1 (p3 / person :arg0-of (h2 / have-org-role-91 :arg2 (m2 / minister :mod (p4 / prime)))) :arg3 (s / scandal :mod (s2 / scandal))) :arg2 (e / enough :polarity - :domain (p5 / person :arg0-of (p6 / protest-01))))
(p / promise-01 :arg0 (p2 / person :name (n / name :op1 "sigurdur" :op2 "ingi" :op3 "johannsson") :arg0-of (h / have-org-role-91 :arg1 (h2 / he) :arg3 (a / apprentice-01 :arg0 (p3 / person)))) :time (t / time :mod (t2 / that)) :purpose (o / organize-01 :arg0 (p4 / person) :arg1 (e / elect-01 :mod (p5 / parliamentary) :mod (n2 / new) :location (a2 / autumn))))
(a / and :op1 (g / good :domain (i / idea :arg0-of (p / promote-02 :arg1 (s / status :mod (e / email) :poss (c / change-01 :arg1 (g2 / generation)))) :arg0-of (p2 / promote-02 :arg1 (s2 / status :mod (e2 / email))))) :op2 (c2 / comment-01 :arg0 (i2 / idea) :arg3 (p3 / person :arg0-of (o / own-01 :arg1 (l / land)) :mod (c3 / central))) :op3 (h / have-org-role-91 :arg0 (p4 / person :name (n / name :op1 "juha" :op2 "hakkarainen") :arg0-of (o2 / own-01 :arg1 (c4 / country :name (n2 / name :op1 "N-A")))) :arg2 (d / director :mod (s3 / spiritual))))
(s / say-01 :arg0 (p / person :arg1-of (i / include-91 :arg2 (p2 / person :arg0-of (r / represent-01 :arg1 (p3 / person :arg0-of (o / own-01)))) :arg3 (p4 / percentage-entity :value 82)) :arg1-of (i2 / include-91 :arg2 (p5 / person :arg0-of (r2 / represent-01 :arg1 (m / movement :name (n / name :op1 (v / victoria))))))) :arg1 (q / qualifications :arg0 (p6 / person :arg0-of (r3 / represent-01 :arg1 (w / web)) :arg1-of (i3 / include-91 :arg2 (p7 / person :arg0-of (r4 / represent-01 :arg1 (w2 / web))) :arg3 (p8 / percentage-entity :value 82))) :arg2 (p9 / person :arg0-of (r5 / represent-01 :arg1 (w3 / web)))))
(a / and :op1 (a2 / act-02 :arg1-of (s / strong-02) :domain (a3 / and :op1 (m / music :mod (g / good)) :op2 (l / low-key) :op3 (m2 / music :mod (g2 / good) :mod (s2 / some))) :arg1-of (s3 / strong-02)) :op2 (f / film :arg1 (m3 / music :mod (g3 / good) :quant (s4 / some)) :arg1-of (c / cause-01 :arg0 (i / ingredient :mod (i2 / ingredient) :mod (q / quite)))))
(r / rise-01 :arg1 (d / debt :arg1-of (p / present-01 :arg2 (d2 / debt :mod (g / government-organization :arg0-of (g2 / govern-01)))) :arg0-of (e / exceed-01 :arg1 (t / threshold :quant 60 :mod (p2 / percentage-entity :value (N / N-A))))) :time (a / after :op1 (n / now) :duration (t2 / temporal-quantity :quant (N2 / N-A) :unit (d3 / decade))))
(m / move-01 :arg0 (m2 / man) :arg1 (y / yard) :instrument (t / tractor :arg1 (m3 / man)))
(h / have-condition-91 :arg1 (a / and :op1 (b / boy :mod (j / juniper)) :op2 (b2 / boy :mod (j2 / juniper)) :op3 (b3 / boy :mod (r / river))) :arg2 (t / team :mod (n / nation) :mod (c / country :name (n2 / name :op1 "N-A"))))
(b / be-located-at-91 :arg1 (t / together :prep-with (t2 / tent :mod (b2 / big))) :arg2 (s / show-04))
(a / announce-01 :arg1 (r / rate :mod (i / inflation)) :time (o / ordinal-entity :value 1 :range (o2 / ordinal-entity :value 1)))
(h / have-concession-91 :arg1 (a / and :op1 (i / interviewed :arg0 (p / person :quant (m / many) :arg1-of (i2 / interview-01 :arg0 (i3 / i))) :arg1 (p2 / person :arg1-of (i4 / interview-01 :arg0 (i5 / i))) :degree (t / total) :time (b / before :op1 (n / now) :duration (t2 / temporal-quantity :quant (N / N-A) :unit (y / year)))) :op2 (a2 / attend-02 :arg0 (p3 / person :arg1-of (i6 / include-91 :arg2 (p4 / person) :arg3 (m2 / many))) :arg1 (r / realize-01 :arg0 (p5 / person) :arg1 (a3 / aware :arg1 (s / species) :degree (t3 / total))))) :arg2 (s2 / sport :domain (s3 / sport :poss (t4 / trampolines)) :time (b2 / before :op1 (n2 / now) :duration (t5 / temporal-quantity :quant (N2 / N-A) :unit (y2 / year)))))
(m / multi-sentence :snt1 (t / try-01 :arg0 (p / person :mod (c / country :name (n / name :op1 "N-A"))) :arg1 (s / suppress-01 :arg0 (p2 / person) :arg1 (c2 / campaign-01 :arg0 (p3 / person) :arg1 (t2 / take-over-12 :arg0 (p4 / person) :arg1 (d / dispute-01 :arg0 (p5 / person) :arg2 (c3 / country :name (n2 / name :op1 "N-A"))) :time (l / late :degree (m2 / most)))))) :snt2 (i / insist-01 :arg0 (p6 / person :mod (r / religious-group)) :arg1 (g / group :mod (t3 / terrorism) :mod (s2 / state) :domain (a / and :op1 (p7 / person :arg0-of (h / have-org-role-91 :arg2 (p8 / president))) :op2 (p9 / person :mod (c4 / country))))))
(m / multi-sentence :snt1 (m2 / mocked :mode (i / interrogative) :arg0 (h / he)) :snt2 (s / say-01 :arg0 (p / person :arg0-of (t / try-01 :arg1 (g / get-05 :arg0 (p2 / person) :arg1 (p3 / person) :arg2 (o / out)))) :arg1 (s2 / succeed-01 :polarity - :arg0 (p4 / person))))
(c / cause-01 :arg0 (d / democrat :mod (s / some)) :arg1 (c2 / cause-01 :arg0 (d2 / democrat) :arg1 (u / unfit :arg0 (d3 / democrat) :arg1 (p / person :arg0-of (h / have-org-role-91 :arg2 (p2 / president))) :mod (n / new))))
(c / contrast-01 :arg1 (m / make-01 :arg0 (r / rosenthal) :arg1 (o / order :mod (u / usual)) :time (s / still)) :arg2 (c2 / cause-01 :arg0 (b / bagel :arg1 (h / he) :arg2 (a / and :op1 (b2 / bacon) :op2 (e / egg) :op3 (c3 / cheese))) :arg1 (h2 / he) :frequency (s2 / sometimes)))
(d / direct-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (a / agency :mod (h2 / home :mod (h3 / home)) :mod (f / federal)) :arg2 (d2 / director :mod (h4 / home :mod (h5 / home))))) :arg1 (h6 / habit :mod (e / eat-01) :poss (c / country)) :degree (m / more :compared-to (o / or :op1 (b / before :op1 (b2 / before :op1 (n / now))) :op2 (a2 / after :op1 (a3 / after :op1 (a4 / after :op1 (o2 / or :op1 (b3 / before :op1 (n2 / now)) :op2 (a5 / after))))))) :arg2 (p2 / person :arg1-of (e2 / expert-01 :arg2 (e3 / economy :mod (h7 / home))) :example (a6 / and :op1 (p3 / person :arg0-of (h8 / have-org-role-91 :arg2 (p4 / person :arg1-of (e4 / expert-01 :arg2 (e5 / economy :mod (h9 / home)))))) :op2 (p5 / person :arg0-of (h10 / have-org-role-91 :arg1 (a7 / agency :mod (h11 / home) :mod (h12 / home) :mod (h13 / home)) :arg2 (d3 / director))))))
(t / try-01 :arg0 (p / person :mod (c / country :name (n / name :op1 "N-A"))) :arg1 (c2 / catch-02 :arg1 (p2 / person) :arg2 (g / gilead :arg0-of (d / dominates :arg1 (m / market) :arg2 (g2 / generation :mod (d2 / drug) :mod (c3 / c) :mod (c4 / c) :arg1-of (i / improve-01 :arg1-of (p3 / possible-01) :arg1-of (p4 / possible-01 :arg1-of (p5 / possible-01) :arg1-of (i2 / improve-01 :arg1-of (p6 / possible-01) :arg1-of (c5 / cause-01 :arg0 (d3 / disease :mod (g3 / geopolitics) :mod (t2 / this)) :arg1-of (c6 / clear-06))))))))))
(a / and :op1 (d / date :mod (s / sue-02) :time (b / back :op1 (d2 / date-entity :decade (N / N-A)))) :op2 (c / challenge-01 :arg0 (s2 / sue-02) :arg1 (o / other :mod (e / each)) :arg2 (c2 / court) :arg3 (c3 / court :mod (o2 / other :mod (e2 / each))) :arg4 (c4 / court) :purpose (s3 / substance :arg1-of (a2 / activity-06) :arg1-of (b2 / base-02 :arg2 (o3 / own-01 :arg0 (l / laboratory))))))
(a / and :op1 (i / include-91 :arg1 (r / rate-entity-91 :arg1 (r2 / rate :mod (t / tax-01 :arg2 (f / federal)) :arg1-of (a2 / actual-02)) :arg2 (r3 / rate-entity-91 :arg1 (p / percentage-entity :value (N / N-A)) :arg2 (t2 / temporal-quantity :quant (N2 / N-A) :unit (y / year)))) :op2 (r4 / rate-entity-91 :arg1 (r5 / rate :mod (t3 / tax-01) :arg1-of (a3 / actual-02)) :arg2 (a4 / approximately :op1 40.5))) :time (t4 / today))
(a / and :op1 (m / man :arg1-of (c / catch-02 :arg2 (p / person :mod (c2 / country :name (n / name :op1 "N-A"))))) :op2 (c3 / catch-01 :arg1 (p2 / person :mod (c4 / country :name (n2 / name :op1 "N-A"))) :location (i / in-front-of :op1 (c5 / country :arg0-of (u / understand-01 :arg1 (p3 / potential) :time (n3 / now))))))
(m / multi-sentence :snt1 (s / say-01 :arg0 (p / person :name (n / name :op1 "N-A") :arg0-of (h / have-org-role-91 :arg2 (s2 / senator)))) :snt2 (e / enjoy-01 :arg0 (i / i) :arg1 (t / this :mod (j / just))))
(r / rise-01 :arg1 (t / thing :arg1-of (f / feel-01) :mod (t2 / this)) :arg4 (s / surface :part-of (c / cover-01 :arg1 (v / vogue :mod (j / jenner)))) :mod (a / again))
(p / phone-number-entity :value (N / N-A))
(c / cause-01 :arg0 (b / block-01 :arg1 (a / advertise-01)) :arg1 (f / focus-01 :arg0 (c2 / cause-01 :arg0 (a2 / amr-unknown) :arg1 (f2 / focus-01 :arg0 (w / we) :arg2 (b2 / build-01 :arg0 (w2 / we) :arg1 (a3 / advertise-01)) :arg0-of (g / give-01 :arg1 (p / person :arg0-of (m / manage-01)) :arg2 (p2 / person :arg0-of (m2 / manage-01)))) :arg1-of (i / instead-of-91))))
(c / contrast-01 :arg1 (q / question-01 :arg1 (p / person :arg0-of (d / drive-01) :mod (e / event-related) :quant (s / several)) :time (a / already)) :arg2 (t / tell-01 :arg0 (p2 / person) :arg1 (a2 / and :op1 (a3 / appeal-02 :arg0 (p3 / person) :arg2 (p4 / person)) :op2 (w / witness-01 :arg0 (p5 / person) :arg1 (p6 / person :arg0-of (w2 / witness-01)) :purpose (m / make-02 :arg0 (p7 / person) :arg1 (k / know-01 :arg0 (p8 / person) :arg1 (k2 / know-01 :arg0 (p9 / person))))) :arg2 (p10 / police))))
(s / suggest-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg2 (s2 / scientist))) :arg1 (s3 / speed :arg0 (s4 / speed :poss (p2 / person)) :arg1 (a / atmosphere :mod (t / thick) :poss (p3 / person))) :time (p4 / previous))
FAILED_TO_PARSE#Two concepts in a row.
(s / slow :arg0 (t / they) :arg1 (s2 / star) :time (p / pass-02 :arg0 (w / winds :mod (t2 / this)) :path (f / field :mod (r / reverse-01 :arg1 (s3 / star)))))
(a / and :op2 (s / say-01 :arg0 (a2 / and :op1 (p / person :arg0-of (h / have-rel-role-91 :arg2 (s2 / son))) :op2 (p2 / person :arg0-of (r / represent-01 :arg1 (d / daughter)))) :arg1 (a3 / and :op1 (' / '' :arg1 (t / they)) :op2 ('2 / '' :arg0 (d2 / die-01 :arg1 (h2 / he)) :arg1 (t2 / they)))))
(a / and :op1 (c / country :name (n / name :op1 "N-A")) :op2 (c2 / country :name (n2 / name :op1 "N-A")) :op3 (c3 / consortium :mod (o / outside)))
(m / motive :mod (e / economy) :mod (a / also))
(g / guarantee-01 :arg1 (r / receive-01 :arg0 (p / person :arg0-of (l / lead-02 :arg1 (c / country :name (n / name :op1 "N-A")))) :arg1 (p2 / person :arg0-of (l2 / lead-02 :arg1 (c2 / country :name (n2 / name :op1 "N-A")))) :arg1-of (c3 / cause-01 :arg0 (c4 / call-01 :arg0 (p3 / person) :arg1 (c5 / company :mod (r2 / revolution-03)) :arg2 (s / support-01 :arg0 (p4 / person) :arg1 (a / authority :arg1-of (d / designate-01)))))))
(a / avoid-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (p2 / political-party :name (n / name :op1 "N-A")) :arg2 (p3 / president))) :arg1 (a2 / answer-01 :arg0 (p4 / person) :arg1 (t / thing :arg1-of (q / question-01 :arg0 (p5 / person)))) :time (c / choose-01 :arg0 (p6 / person) :arg1 (e / emphasize :arg0 (p7 / person) :arg1 (p8 / person))) :manner (d / deliberate))
(a / abandon-01 :arg0 (i / it) :arg1 (g / goal :mod (t / this)) :time (a2 / after :op1 (c / collapse-01 :arg1 (b / bank) :time (b2 / before :op1 (n / now) :quant (n2 / nearly :op1 (t2 / temporal-quantity :quant (N / N-A) :unit (y / year)))))))
(w / win-01 :arg0 (a / and :op1 (w2 / win-01 :arg0 (d / dettori) :arg2 (n / newcomer)) :op2 (w3 / win-01 :quant 3000 :arg0 (w4 / win-01))) :arg2 (a2 / and :op1 (n2 / newcomer) :op2 (a3 / achieves)))
(s / say-01 :arg0 (p / person :name (n / name :op1 "N-A") :arg0-of (w / win-01 :time (e / early :degree (m / more))) :arg0-of (w2 / win-01 :time (e2 / early :degree (m2 / more)))) :arg1 (s2 / special-02 :arg1 (t / this)))
(a / ask-02 :arg0 (p / person :arg0-of (r / reside-01 :arg1 (c / country :name (n / name :op1 "N-A")))) :arg1 (i / identify-01 :arg0 (p2 / person) :arg1 (f / fish :arg1-of (a2 / appear-01 :location (g / garden :poss (p3 / person))))) :arg2 (p4 / person :arg1-of (r2 / reside-01 :arg0 (p5 / person))))
(s / say-01 :arg0 (p / person :name (n / name :op1 "michael" :op2 "martin") :arg0-of (h / head-01 :arg1 (p2 / project :topic (b / bank-01 :mod (b2 / bridge)) :arg0-of (c / cross-02 :arg1 (b3 / bridge))))) :arg1 (' / '' :arg1 (b4 / barrier :ord (o / ordinal-entity :value 1) :location (p3 / project :mod (b5 / bridge) :mod (a / any))) :time (a2 / always) :arg1-of (m / major-02)))
(m / multi-sentence :snt1 (h / help-01 :arg0 (a / activity-06) :arg1 (m2 / manage-01 :arg1 (a2 / and :op1 (m3 / manage-01 :arg1 (w / weight)) :op2 (p / pressure :mod (b / blood :arg1-of (h2 / high-02))) :op3 (c / cold)))) :snt2 (r / rich :degree (t / too) :domain (b2 / benefit-01 :arg1 (i / it)) :location (h3 / here)))
(s / say-01 :arg0 (h / he) :arg1 (t / true :polarity - :domain (t2 / thing :arg1-of (s2 / say-01 :arg0 (h2 / he))) :mod (o / of-course) :mod (o2 / of-course)))
(r / remembers :arg0 (p / picciuto) :arg1 (l / load :quant (l2 / load) :time (f / future) :mod (c / certain)))
(a / and :op2 (k / know-01 :polarity - :arg0 (h / he) :mod (s / still)))
(s / say-01 :arg0 (h / he) :arg1 (c / contrast-01 :arg1 (r / report-01 :arg0 (h2 / he) :arg1 (f / flooding)) :arg2 (r2 / report-01 :polarity - :arg1 (f2 / frustrate-01 :arg0 (f3 / far :arg1 (h3 / house)) :time (s2 / so-far)))))
(b / benefit-01 :arg0 (a / attack-01 :arg1 (h / heart) :quant (m / multiple :op1 (m2 / monetary-quantity :quant 2 :unit (p / pound)))) :arg1 (m3 / medication :quant (m4 / multiple :op1 (m5 / monetary-quantity :quant 2 :unit (p2 / pound)))) :time (a2 / after :op1 (a3 / advise-01 :arg0 (a4 / authority) :arg1 (a5 / authority) :arg2 (g / give-01 :arg1 (t / thing :arg1-of (g2 / give-01 :arg2 (p3 / person) :arg1-of (l / long-03))) :arg2 (p4 / person)))))
(h / have-03 :arg0 (s / scene :quant 1) :arg1 (r / risk-01 :arg2 (g / get-01 :arg1 1) :arg1-of (i / increase-01)) :time (a / already))
(s / say-01 :arg0 (p / person :name (n / name :op1 "N-A") :arg0-of (h / have-org-role-91 :arg2 (m / mizrach))) :arg1 (o / obligate-01 :arg1 (y / you) :arg2 (t / turn-14 :arg0 (y2 / you) :arg1 (a / and :op1 (s2 / see-01 :arg0 (y3 / you) :arg1 (b / betray-01 :arg0 (y4 / you))) :op2 (c / clear-06 :arg1 (' / '' :arg1 (l / line :name (n2 / name :op1 (f / fire)))))) :time (f2 / first)) :condition (a2 / approach-02 :arg0 (y5 / you) :arg1 (c2 / church))))
(c / case :mod (a / amazing :degree (v / very)) :domain (t / this) :arg1-of (c2 / cause-01 :arg0 (a2 / and :op1 (e / extreme :degree (e2 / extreme) :domain (b / behave-01)) :op2 (h / horrified :arg0 (a3 / action) :arg1 (n / neighbor-01 :arg1 (t2 / they)) :arg1-of (s / sure-02)))))
(a / and :op1 (b / be-located-at-91 :arg1 (a2 / aircraft) :arg2 (f / fly-01 :purpose (t / train-01))) :op2 (a3 / ask-02 :arg1 (i / identify-01 :arg0 (p / pilot-01) :arg1 (b2 / boat :mod (f2 / fishing))) :arg2 (p2 / part)))
(s / step-01 :arg2 (a / approach-02 :mod (n / new)) :time (b / before :op1 (n2 / now) :quant (t / temporal-quantity :quant (N / N-A) :unit (y / year))))
(s / say-01 :arg0 (p / person :name (n / name :op1 "harry" :op2 "reid") :arg0-of (h / have-org-role-91 :arg2 (s2 / senator))) :arg1 (c / convince-01 :arg0 (p2 / person) :arg1 (p3 / person :arg0-of (h2 / have-org-role-91 :arg3 (j / judge-01)) :mod (d / democracy)) :arg2 (p4 / person :arg0-of (h3 / have-org-role-91 :arg3 (j2 / judge-01)) :arg0-of (h4 / have-org-role-91 :arg3 (j3 / judge-01))) :condition (e / elect-01 :arg1 (p5 / person) :arg2 (p6 / president))))
(n / note-01 :arg0 (y / you) :arg1 (b / base-02 :arg1 (c / claim-01 :mod (t / this)) :arg2 (b2 / base-02 :arg1 (c2 / claim-01) :arg2 (i / information :arg1-of (a / actual-02)))) :time (b3 / before :op1 (r / rush-01 :arg1 (y2 / you) :arg2 (s / section :arg1-of (c3 / comment-01) :arg1-of (w / write-01 :arg0 (a2 / and :op1 (p / person :arg1-of (w2 / write-01 :arg0 (p2 / person :arg0-of (i2 / insult-01 :arg1 (n2 / nicknamed)) :arg1-of (w3 / write-01 :arg0 (p3 / person :arg0-of (i3 / insult-01 :arg1 (n3 / nicknamed)) :arg1-of (w4 / write-01 :arg0 (p4 / person :arg0-of (i4 / insult-01 :arg1 (n4 / nicknamed)) :arg1-of (w5 / write-01 :arg0 (p5 / person :arg0-of (i5 / insult-01 :arg1 (n5 / nicknamed)) :arg1-of (w6 / write-01 :arg0 (p6 / person :arg0-of (i6 / insult-01 :arg1 (c4 / country-region)) :arg1-of (w7 / write-01 :arg0 (p7 / person :arg0-of (i7 / insult-01 :arg1 (c5 / country-region)) :arg1-of (w8 / write-01 :arg0 (p8 / person :arg0-of (i8 / insult-01 :arg1 (c6 / country-region)) :arg1-of (w9 / write-01 :arg0 (p9 / person :arg0-of (i9 / insult-01 :arg1 (c7 / country-region)) :arg1-of (w10 / write-01 :arg0 (p10 / person :arg0-of (i10 / insult-01 :arg1 (c8 / country-region)) :arg1-of (w11 / write-01 :arg0 (p11 / person :arg0-of (i11 / insult-01 :arg1 (c9 / country-region)))))))))))))))))))))))))))))
(t / think-01 :arg0 (i / i) :arg1 (p / possible-01 :arg1 (o / or :op1 (f / filling :arg1 (g / gap :mod (o2 / or :op1 (g2 / gap) :op2 (k / kind :mod (s / some))) :topic (i2 / item :arg1-of (o3 / own-01 :arg0 (s2 / state))))) :op2 (c / consolation :mod (k2 / kind :mod (s3 / some))))))
(b / become-01 :arg1 (f / food) :arg2 (e / expensive :quant (p / percentage-entity :value (N / N-A))) :time (m / meanwhile) :arg1-of (c / cause-01 :arg0 (b2 / become-01 :arg1 (f2 / food) :arg2 (e2 / expensive :degree (m2 / more)))) :time (m3 / meanwhile))
(f / fall-01 :arg1 (t / thing :arg2-of (p / price-01 :arg1 (f2 / food))) :arg4 (f3 / fast :degree (m / more) :compared-to (c / country :name (n / name :op1 "N-A"))) :mod (o / only))
(r / rise-01 :arg1 (t / thing :arg2-of (p / price-01 :arg1 (f / food))) :manner (s / sharp) :time (b / begin-01 :arg1 (2 / 2010s)))
(m / multi-sentence :snt1 (r / recommend-01 :arg1 (a / and :op1 (h / halved :arg1 (l / level :arg1-of (a2 / average-04)) :arg2 (l2 / level :arg1-of (a3 / average-04))) :op2 (c / continue-01 :arg1 (t / thing :arg2-of (p / price-01 :arg1 (t2 / thing :arg2-of (p2 / price-01)))))) :condition (w / want-01 :arg0 (w2 / we) :arg1 (r2 / reach-01 :arg0 (w3 / we) :arg1 (l3 / level :arg2-of (p3 / price-01 :arg1 (f / food)) :mod (o / old)) :prep-in (p4 / price-01 :arg1 (f2 / food))))) :snt2 (w4 / write-01 :arg0 (l4 / lehtinen :mod (' / ''))))
(h / hailing :location (a / along :op1 (n / north)))
(m / multi-sentence :snt1 (c / cause-01 :arg0 (r / result-01 :arg1 (n / negotiate-01) :arg2 (n2 / negotiate-01 :arg2 (n3 / negotiate-01 :quant (a / about :op1 300)))) :arg1 (r2 / reduce-01 :arg1 (j / job :quant (a2 / about :op1 300)))) :snt2 (s / say-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (p2 / political-party :name (n4 / name :op1 "N-A")))) :arg1 (s2 / stockmann)))
(c / cause-01 :arg0 (s / succeed-01 :arg0 (c2 / chain :mod (c3 / clothing) :poss (c4 / country :name (n / name :op1 "N-A")))) :arg1 (i / improve-01 :arg1 (p / profit-01 :arg0 (p2 / profit-01) :ord (o / ordinal-entity :value 2))))
(s / summery :arg1 (t / temperature) :degree (v / very) :time (n / no-longer) :location (c / country :quant (w / whole) :location (c2 / country :mod (w2 / whole))))
(e / explain-01 :polarity - :arg0 (c / coach) :arg1 (s / situation :beneficiary (p / person :arg0-of (h / have-org-role-91 :arg2 (o / officer)))) :arg1-of (c2 / cause-01 :arg0 (f / fear-01 :arg0 (p2 / person) :arg1 (p3 / person :arg0-of (r / report-01)))))
(s / steal-01 :arg1 (b / bike) :arg2 (c / courtyard :part-of (b2 / building)) :time (b3 / before :op1 (n / now) :quant (t / temporal-quantity :quant (N / N-A) :unit (y / year))))
(s / say-01 :arg1 (m / message-01 :arg0 (y / you) :arg1 (c / continue-01 :arg0 (y2 / you) :arg1 (w / way :poss (y3 / you))) :arg1-of (s2 / say-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg2 (l / lovio))))) :arg2 (p2 / person :name (n / name :op1 "N-A")))
(l / look-01 :arg0 (i / i) :arg1 (p / person :arg0-of (h / have-org-role-91 :arg2 (p2 / president))) :purpose (m / make-02 :arg0 (p3 / person) :arg1 (g / go-01 :arg1 (e / economy :poss (w / we)) :arg3 (e2 / everyone) :mod (w2 / well))))
(s / say-01 :arg0 (p / person :arg0-of (v / view-01)) :arg1 (s2 / start-01 :arg0 (p2 / person :arg0-of (v2 / view-01)) :arg1 (c / close-10 :arg1 (n / number) :arg2 (c2 / close))))
(i / inarijärvi :arg1 (l / lake :arg1-of (d / deep-02) :mod (o / other)) :arg2 (a / and :op1 (- / -rrb- :quant (d2 / distance-quantity :quant (N / N-A) :unit (m / meter))) :op2 (s / suvasvesi :quant (b / between :op1 90 :op2 90))))
(h / heated :arg0 (m / matter) :arg1 (a / and :op1 (p / person :arg0-of (r / represent-01 :arg1 (p2 / parliament)) :arg0-of (h2 / have-org-role-91 :arg1 (p3 / parliament) :arg2 (m2 / minister))) :op2 (p4 / person :arg0-of (h3 / have-org-role-91 :arg1 (p5 / parliament) :arg2 (m3 / minister))) :op3 (p6 / person :arg0-of (h4 / have-org-role-91 :arg1 (p7 / parliament) :arg2 (m4 / minister))) :op4 (p8 / person :arg0-of (h5 / have-org-role-91 :arg1 (p9 / parliament) :arg2 (m5 / minister))) :op5 (p10 / person :arg0-of (h6 / have-org-role-91 :arg1 (p11 / parliament) :arg2 (m6 / minister)))))
(s / say-01 :arg0 (a / agency :name (n / name :op1 "N-A") :mod (n2 / news) :mod (p / police)) :arg1 (r / rule-out-02 :arg1 (t / terrorism :mod (r2 / religious-group :name (n3 / name :op1 "N-A"))) :mod (a2 / also)))
(m / multi-sentence :snt1 (c / contrast-01 :arg1 (p / possible-01 :polarity - :arg1 (h / have-polarity-91 :arg2 -)) :arg2 (p2 / point :mod (a / all) :domain (a2 / and :op1 (d / do-02 :arg0 (s / swimmers :mod (t / this)) :arg1 (t2 / thing :manner-of (d2 / do-02 :arg0 (s2 / swimmers :mod (t3 / this))))) :op2 (a3 / amr-unknown :manner-of (m2 / make-05 :arg0 (t4 / they)))))) :snt2 (o / okay-04 :arg1 (g / grumble :arg0 (i / i) :arg1 (s3 / skelton))))
(b / believe-01 :arg1 (l / link-01 :arg1 (d / detainees) :arg2 (o / organization :mod (e / extremism :mod (i / isis)))))
(l / lose-02 :arg1 (t / thing :quant 2 :arg1-of (l2 / lose-02)) :time (s / start-01 :arg1 (w / win-01 :arg0 (s2 / spain :mod (t2 / tournament)) :arg2 (p / point :quant 96-87))))
(c / consider-01 :arg1 (p / protest-01 :mod (p2 / protracted)))
(f / find-02 :arg1 (c / coffee) :arg2 (p / protect-01 :arg1 (a / and :op1 (c2 / cancers :quant (s / some)) :op2 (c3 / cold :mod (t / type :quant 2)) :op3 (d / disease :mod (p2 / parkinson)))))
(r / recommend-01 :arg1 (h / have-03 :arg0 (h2 / he) :arg1 (o / orgasm) :mod (a / also)) :purpose (g / gain-02 :arg0 (p / person) :arg1 (y / year :mod (e / extra)) :prep-in (l / life :poss (p2 / person))))
(s / show-01 :arg0 (p / picture) :arg1 (c / change-01 :arg1 (l / lotta :mod (e / enormous)) :time (o / over :op1 (t / temporal-quantity :quant (N / N-A) :unit (y / year)))))
(d / drop-05 :arg0 (p / person :mod (c / country :name (n / name :op1 "N-A"))) :arg1 (p2 / project :name (n2 / name :op1 (' / '')) :mod (l / last)) :time (b / before :op1 (n3 / now) :quant (m / multiple :op1 (m2 / mass-quantity :quant (N / N-A) :unit (p3 / pound)))))
(s / say-01 :arg0 (m / media :mod (c / country :name (n / name :op1 "N-A"))) :arg1 (p / pay-01 :arg0 (p2 / person :arg0-of (p3 / play-01 :arg1 (t / thing :arg1-of (g / gift-01 :arg2 (n2 / name :op1 (i / italian) :op2 (i2 / italian)))))) :arg3 (p4 / person :arg0-of (p5 / play-01 :arg1 (i3 / italian)) :mod (i4 / italian))))
(h / have-purpose-91 :arg1 (a / and :op1 (a2 / achieve-01 :arg1 (l / level :arg1-of (n / need-01))) :op2 (a3 / act-02 :arg1-of (c / conform-01 :arg2 (r / regulate-01 :mod (o / official))))) :arg2 (s / say-01 :arg0 (r2 / regulate-01 :mod (o2 / official)) :arg1 (h2 / have-org-role-91 :arg0 (p / person :arg0-of (h3 / have-org-role-91 :arg2 (d / director :mod (v / vice)))) :arg1 (e / event) :arg2 (d2 / director :mod (v2 / vice)))) :frequency (o3 / often))
(p / possible-01 :arg1 (u / use-01 :arg1 (i / it) :arg2 (c / create-01 :arg1 (t / thing :arg2-of (c2 / creek :arg1 (t2 / thing :arg1-of (r / resemble-01 :arg2 (c3 / construct-01 :arg1 (t3 / tent :mod (t4 / that))))))))))
(a / and :op1 (i / it :location (b / bartenders :quant 1 :arg1-of (i2 / include-91 :arg2 (b2 / bartenders :mod (b3 / big :degree (m / most)))))) :op2 (t / tell-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg2 (s / swedish))) :arg1 (a2 / aftonbladet :mod (h2 / hooligans))))
(s / say-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg2 (h2 / head-of-state))) :arg1 (f / fight-01 :arg0 (p2 / person) :arg2 (f2 / fight-01 :arg0 (p3 / person) :arg1 (d / duty) :mod (o / only) :time (a / after :op1 (h3 / hijack-01 :arg0 (p4 / person) :arg1 (p5 / person :arg0-of (h4 / have-org-role-91 :arg2 (s2 / soldier :mod (m / military)))) :duration (s3 / several :op1 (t / temporal-quantity :quant (N / N-A) :unit (m2 / month))))))) :arg1-of (s4 / say-01 :arg0 (p6 / person :name (n / name :op1 "N-A"))))
FAILED_TO_PARSE#Two concepts in a row.
(i / include-91 :arg1 (t / thing :arg1-of (p / precede-01 :arg2 (n / name :op1 (f / finnish) :op2 (f2 / favorite)))) :arg2 (a / artists :arg1-of (f3 / favorite :time (o / over :op1 (t2 / temporal-quantity :quant (N / N-A) :unit (y / year))))))
(c / curly :mod (f / finance))
(h / have-03 :arg0 (p / person :quant (m / many)) :arg1 (i / idea :topic (d / depend-01 :polarity - :arg0 (n / number :quant-of (p2 / person :arg1-of (e / employ-01))) :arg1 (n2 / number :quant-of (p3 / person :arg1-of (e2 / employ-01))) :mod (a / almost))) :mod (s / still))
(s / say-01 :arg0 (p / person :name (n / name :op1 "N-A") :arg0-of (h / have-org-role-91 :arg2 (d / director :mod (v / vice)))) :arg1 (p2 / positive :mod (m / main) :domain (f / friendship :source (p3 / program))))
(p / paradise :domain (c / channel :arg0-of (e / effective-04 :degree (m / most))))
(u / update-01 :arg1 (r / rate-01) :arg1-of (u2 / update-01))
(s / say-01 :arg0 (g / group :time (d / date-entity :decade (N / N-A))) :arg1 (i / inform-01 :arg0 (g2 / group) :arg1 (c / customer :poss (i2 / it)) :arg2 (c2 / change-01)))
(g / go-01 :polarity - :arg1 (i / it) :time (s / sit-01 :arg1 (i2 / it) :arg2 (n / next-to :op1 (b / box :mod (m / middle)))))
(t / touch-01 :arg0 (a / and :op1 (p / person :quant (1 / 12-0)) :op2 (p2 / person :mod (c / country :name (n / name :op1 "N-A")))) :arg1 (b / ball) :degree (b2 / bare))
(f / frosting :arg1 (p / paint :poss (v / viliame :name (n / name :op1 (l / last-minute) :op2 (v2 / viliame)))) :location (i / ice :part-of (i2 / ice :part-of (c / country :name (n2 / name :op1 "N-A"))) :arg0-of (n3 / need-01 :polarity - :arg1 (p2 / peeled))))
(a / attend-01 :arg0 (p / person :mod (c / country :name (n / name :op1 "N-A"))) :arg1 (w / wedding) :time (m / month :mod (n2 / next)) :time (m2 / marry-01 :arg1 (p2 / person) :arg2 (a2 / adventurer :medium (t / tv) :mod (t2 / tv))))
(a / age-01 :arg1 (b / background) :arg2 (p / population :arg1-of (a2 / age-01 :arg2 (t / temporal-quantity :quant (N / N-A) :unit (y / year)))))
(s / say-01 :arg0 (s2 / study :arg1-of (p / publish-01 :medium (j / journal :mod (s3 / science)))) :arg1 (c / confirm-01 :arg1 (a / age :consist-of (i / ice)) :arg2 (p2 / person :arg0-of (l / live-01 :location (w / world)) :mod (l2 / longest))))
(a / and :op1 (w / write-01 :arg0 (i / i) :arg1 (m / manuscript :location (l / laureate :name (n / name :op1 (n2 / nobel)) :mod (n3 / nobel)))) :op2 (b / base-02 :arg1 (a2 / almodóvar) :arg2 (n4 / novel :quant 3 :mod (a3 / alice) :mod (a4 / alice))))
(a / and :op1 (b / benefit-01 :arg0 (a2 / and :op1 (p / pension :mod (n / nation)) :op2 (p2 / pension :mod (n2 / nation)) :op3 (e / employ-01 :mod (b2 / basic) :quant (a3 / all :mod (n3 / near)))) :arg1 (i / index :mod (p3 / pension :mod (n4 / nation)))) :op2 (c / cut-02 :arg1 (p4 / percentage-entity :value (N / N-A))))
(c / contrast-01 :arg2 (s / say-01 :arg0 (i / i) :arg1 (e / expect-01 :arg0 (p / party :arg0-of (r / rule-03)) :arg1 (t / treaty :name (n / name :op1 "N-A"))) :concession (r2 / result-01 :arg1 (e2 / elect-01 :time (p2 / previous)) :arg2 (r3 / rate-entity-91 :arg1 12.3 :arg2 (t2 / temporal-quantity :quant (N / N-A) :unit (m / month)) :compared-to (e3 / elect-01 :mod (p3 / parliamentary))))))
(a / and :op1 (d / drifted :arg1 (t / truck) :arg2 (l / left :mod (c / curving) :arg1-of (o / out :arg2 (w / way)))) :op2 (f / fall-07 :arg1 (t2 / truck) :arg2 (d2 / ditches :arg1 (t3 / truck))))
(c / cause-01 :arg1 (p / pollution :mod (a / air) :domain (c2 / cause-01 :arg1 (s / skin))))
(b / be-located-at-91 :arg1 (t / top :mod (b2 / big :degree (t2 / too)) :mod (b3 / big :degree (t3 / too))) :arg2 (a / and :op1 (j / jumpsuit :mod (b4 / big :degree (t4 / too))) :op2 (p / pads :name (n / name :op1 (k / knee) :op2 (k2 / knee) :op3 (g / glittering))) :op4 (a2 / aces :mod (g2 / glittering)) :time (a3 / after :op1 (p2 / point :mod (p3 / point)))))
(h / help-01 :arg0 (p / person :arg0-of (h2 / have-rel-role-91 :arg1 (t / they) :arg2 (d / dad))) :arg1 (a / and :op1 (h3 / help-01 :arg0 (p2 / person)) :op2 (a2 / advise :arg0 (p3 / person) :arg1 (e / experience-01 :arg0 (p4 / person)))) :arg2 (p5 / person :arg0-of (h4 / have-rel-role-91 :arg1 (t2 / they) :arg2 (d2 / dad))))
(a / and :op2 (w / wonder-01 :arg0 (t / they) :arg1 (p / possible-01 :arg1 (s / signal-07 :arg0 (p2 / polemics :mod (t2 / this)) :arg1 (p3 / problem :mod (b / big :degree (m / more))) :arg2 (d / diversity)))))
(s / say-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (a / art :mod (k / korean-american)) :arg2 (p2 / person :arg0-of (s2 / study-01) :mod (a2 / art)))) :arg1 (a3 / and :op1 (' / '' :arg1 (p3 / person :arg0-of (h2 / have-org-role-91 :arg2 (l / lenses))) :mod (a4 / at-least)) :op2 (c / comfortable-02 :polarity - :arg1 (p4 / person) :mod (a5 / at-least))) :medium (e / email-01 :arg0 (p5 / person) :arg2 (p6 / person :arg0-of (s3 / study-01 :arg1 (p7 / photo)) :arg0-of (h3 / have-org-role-91 :arg1 (a6 / art :mod (k2 / korean-american)) :arg3 (s4 / study-01)))))
(p / possible-01 :arg1 (m / mean-01 :arg0 (a / and :op1 (h / huge :mod (h2 / huge) :poss (p2 / person :arg0-of (h3 / have-rel-role-91 :arg2 (p3 / parent :mod (o / old :degree (m2 / more)))))) :op2 (p4 / person :mod (o2 / old :degree (m3 / more)) :arg0-of (h4 / have-rel-role-91 :arg1 (p5 / person) :arg2 (p6 / parent)))) :arg2 (l / likely-01 :arg1 (e / expect-01 :arg0 (p7 / person) :arg1 (a2 / attitude :mod (u / understand-01))) :degree (m4 / more :mod (e2 / even)))))
(r / report-01 :arg0 (d / day) :arg1 (t / thing :arg2-of (r2 / result-01 :arg1 (i / inquire-01 :arg0 (v / veteran :mod (c / congressional))) :mod (p / provisional))))
(m / make-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (t / team) :arg3 (l / lead-02 :arg0 (p2 / person)))) :arg1 (t2 / team :name (n / name :op1 (g / ground-hockey) :op2 2 :op3 2 :op4 2 :op5 2 :op6 2 :op7 2)) :time (a / after :op1 (w / win-01 :arg0 (p3 / person :mod (c / country :name (n2 / name :op1 "N-A"))) :arg1 (h2 / half :ord (o / ordinal-entity :value 1) :poss (w2 / woman)))) :time (w3 / win-01 :arg0 (p4 / person :mod (c2 / country :name (n3 / name :op1 "N-A"))) :location (c3 / country)))
(a / add-01 :arg0 (p / person :name (n / name :op1 "melissa" :op2 "gonzalez")) :arg1 (g / goal :mod (l / last) :location (m / middle :part-of (b / batch :ord (o / ordinal-entity :value 4)))))
(m / multi-sentence :snt1 (o / obligate-01 :arg1 (i / i) :arg2 (a / admit-01 :arg0 (i2 / i) :arg1 (e / expert-01 :polarity - :arg1 (i3 / i) :arg2 (e2 / expert-01 :arg1 (i4 / i) :arg2 (e3 / expert-01 :polarity - :arg1 (i5 / i))))) :location (h / here)) :snt2 (f / fan :mod (w / world-region :name (n / name :op1 "N-A") :mod (j / just)) :domain (i6 / i)))
(r / rush-01 :arg1 (p / person :arg0-of (d / demand-01 :arg1 (c / change-01 :arg1 (p2 / politics) :mod (r2 / radical)))) :arg2 (s / street) :time (w / week :mod (l / last)) :mod (a / alone))
(a / and :op1 (c / country :name (n / name :op1 "ethiopia") :domain (c2 / country :mod (p / populous :degree (m / most) :compared-to (c3 / country :mod (p2 / populous :degree (m2 / most)))))) :op2 (a2 / appreciate-02 :arg0 (c4 / country :location (w / west)) :arg1 (s / stability :poss (c5 / country))) :time (a3 / after :op1 (n2 / nigeria :arg1 (c6 / country))))
(m / multi-sentence :snt1 (g / grow-01 :arg1 (t / tension :location (b / border-01 :arg2 (t2 / thing :arg1-of (b2 / border-01 :arg2 (e / eritrea))))) :time (t3 / time :arg1-of (s / same-01))) :snt2 (a / and :op1 (s2 / struggle-01 :arg1 (s3 / struggle-01 :mod (t4 / this))) :op2 (d / demand-01 :arg0 (b3 / border :mod (c / controversy)) :arg1 (l / live-01 :arg0 (a2 / and :op1 (b4 / border :mod (t5 / this)) :op2 (b5 / border :mod (c2 / controversy)))))))
(c / contrast-01 :arg2 (t / think-01 :arg0 (i / i) :arg1 (a / and :op1 (c2 / cunning :arg0 (h / he) :arg1 (t2 / thing :arg1-of (s / state-01 :arg0 (h2 / he)))) :op2 (k / know-01 :arg0 (i2 / i) :arg1 (v / vague :arg1 (t3 / they) :degree (e / enough) :arg1-of (c3 / cause-01 :arg0 (l / lens :quant (s2 / several)))))) :mod (a2 / also)))
(o / open-01 :arg1 (c / conference :name (n / name :op1 "N-A") :name (n2 / name :op1 (r / revive-01))) :mod (l / last) :location (r2 / relative-position :op1 (l2 / location :quant (l3 / less-than :op1 (d / distance-quantity :quant (N / N-A) :unit (m / mile)) :mod (o2 / original)))))
(s / say-01 :arg0 (p / person :name (n / name :op1 "Clinton") :arg0-of (h / have-org-role-91 :arg2 (h2 / hillary))) :arg1 (s2 / set-02 :arg0 (a / and :op1 (p2 / person :arg0-of (h3 / have-org-role-91 :arg2 (h4 / hillary))) :op2 (p3 / person :arg0-of (h5 / have-org-role-91 :arg2 (t / tim)))) :arg1 (b / benchmark :prep-for (m / motive :mod (f / finance)))) :medium (s3 / statement))
(s / say-01 :arg0 (p / person :name (n / name :op1 "N-A")) :arg1 (a / and :op1 (h / have-03 :arg0 (h2 / he) :arg1 (a2 / audit-01 :arg1 (t / tax-01)) :mod (a3 / also)) :op2 (s2 / scare-01 :polarity - :arg0 (p2 / person :arg0-of (v / vote-01)) :arg1 (t2 / trumps))))
(c / call-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg2 (a / ambassador :mod (i / israeli)))) :arg1 (c2 / case-03) :arg2 (i2 / injustice :mod (g / great)) :arg1-of (r / report-01 :arg0 (z / zeitung :name (n / name :op1 (z2 / zuddeutsche) :op2 (z3 / zeitung)))))
(g / grow-01 :arg1 (b / business :mod (b2 / between :op1 (c / country :name (n / name :op1 "Russia")) :op2 (c2 / country :name (n2 / name :op1 "Russia")))) :arg2 (p / percentage-entity :value (N / N-A)) :manner (s / sudden))
(i / increase-01 :arg1 (i2 / import-01 :arg0 (c / country :name (n / name :op1 "N-A")) :arg2 (c2 / country :name (n2 / name :op1 "N-A"))) :arg2 (p / percentage-entity :value (N / N-A)) :arg4 (r / rate-entity-91 :arg1 (m / monetary-quantity :quant 158 :unit (d / dollar)) :arg2 (v / volume-quantity :quant (N2 / N-A) :unit (g / gallon))))
(a / anchored :arg0 (2 / 23-year-old :poss (m / man :mod (y / young) :arg0-of (p / pride-01 :arg2 (m2 / man :mod (y2 / young))))) :arg1 (l / legend :arg1 (l2 / legend :poss (m3 / man :mod (y3 / young) :arg0-of (p2 / pride-01 :arg1 (m4 / man) :time (k / knock :arg1 (m5 / man) :arg2 (l3 / line :name (n / name :op1 (f / finish))))))) :arg0-of (w / win-01 :arg1 (w2 / win-01 :arg0 (m6 / man) :arg2 (t / team :mod (n2 / new) :mod (z / zealand))))) :manner (a2 / anchored))
(d / do-02 :arg1 (t / this) :time (a / appear-01 :arg1 (h / hindes)) :mod (j / just))
(i / include-91 :arg1 (v / value-interval :op1 2012 :op2 3) :arg2 (r / record :mod (w / world) :arg0-of (w2 / win-01 :arg1 (r2 / record :mod (w3 / world)))))
(s / say-01 :arg0 (p / person :name (n / name :op1 "N-A")) :arg1 (' / '' :arg1 (i / it) :time (a / already) :purpose (r / reduce-01 :arg1 (t / thing :arg2-of (v / value-01 :arg1 (c / contract))) :arg3 (m / monetary-quantity :quant 187 :unit (y / yuan :mod (r2 / renminbi))) :location (b / book :poss (i2 / it)))))
(l / lay :arg1 (v / victim) :time (m / middle :op1 (n / night)))
(e / expect-01 :arg1 (i / invest-01 :arg0 (s / sea :location (n / north)) :arg1 (r / rate-entity-91 :arg1 (l / less-than :op1 (m / monetary-quantity :quant 1.4 :unit (d / dollar))) :arg2 (p / project :mod (n2 / new))) :arg2 (p2 / project :mod (n3 / new) :arg1-of (c / cost-01 :arg2 (a / around :op1 (m2 / monetary-quantity :quant 7 :unit (d2 / dollar)))))))
(f / find-01 :arg0 (c / chef :quant 28 :age (t / temporal-quantity :quant (N / N-A) :unit (y / year))) :source (p / province :name (n / name :op1 "N-A") :mod (l / language :name (n2 / name :op1 "N-A"))) :source (p2 / province :name (n3 / name :op1 "N-A") :mod (a / asleep)))
(r / reflect :arg0 (h / he) :arg1 (o / opposite) :manner (e / enthusiasm))
(a / and :op1 (d / do-02 :arg0 (p / person :arg1-of (a2 / ally-01 :arg2 (c / country :name (n / name :op1 "N-A")))) :arg1 (p2 / putin :mod (v / vladimir)) :arg2 (a3 / ally :mod (a4 / adjacent)) :arg1-of (l / long-03)) :op2 (m / move-01 :arg0 (p3 / person) :arg1 (s / security :mod (s2 / soviets)) :arg2 (k / kgb)) :arg1-of (l2 / long-03))
(m / multi-sentence :snt1 (m2 / mrd :quant 1.35) :snt2 (e / expect-01 :arg1 (r / ready-02 :arg1 (p / project :mod (p2 / pound)) :arg2 (r2 / ready-02 :arg1 (p3 / project)) :time (n / now))))
(m / multi-sentence :snt1 (a / and :op1 (w / watch-01 :arg0 (e / each) :arg1 (p / person :arg0-of (u / use-01) :mod 35,000)) :op2 (t / tell-01 :arg0 (e2 / each) :arg1 (r / rate-entity-91 :arg1 (d / day :mod (t2 / together)) :arg2 (r2 / rate-entity-91 :arg1 (p2 / point :quant 45 :mod (h / human)) :arg2 (t3 / temporal-quantity :quant (N / N-A) :unit (y / year))) :arg3 (p3 / point :quant (b / between :op1 45 :op2 53))) :time (d2 / day :mod (t4 / together)))) :snt2 (s / score-01 :arg1 (p4 / person :arg0-of (u2 / use-01)) :arg2 (p5 / point :quant (p6 / point :quant 45)) :location (p7 / person :arg0-of (u3 / use-01))))
(a / and :op1 (s / soaring :arg0 (h / he) :arg1 (p / point :mod (b / beams))) :op2 (e / exceed-01 :arg0 (h2 / he) :arg1 (t / this) :manner (l / let-01 :arg0 (h3 / he) :arg1 (p2 / parterre :quant 15.933))))
(p / possible-01 :arg1 (d / do-02 :polarity - :arg0 (p2 / person :mod (c / country :name (n / name :op1 "N-A"))) :arg1 (t / this) :time (f / fire-01 :arg0 (p3 / person) :arg1 (h / huts) :time (f2 / first))))
(l / let-01 :polarity - :mode (i / imperative) :arg0 (y / you) :arg1 (s / such))
(a / and :op1 (o / or :op1 (s / sit-01 :polarity - :arg1 (p / person :mod (c / country :name (n / name :op1 "N-A"))) :arg2 (t / temporal-quantity :quant (N / N-A) :unit (y / year))) :op2 (c2 / crept :polarity - :arg1 (p2 / person))) :op2 (s2 / speak-01 :polarity - :arg0 (p3 / person) :mod (e / even)))
(m / multi-sentence :snt1 (t / teach-01 :arg0 (w / we) :arg1 (s / sign-01 :arg0 (h / he) :arg1 (l / language)) :arg2 (h2 / he)) :snt2 (t2 / tell-01 :mode (i / imperative) :arg0 (y / you) :arg2 (n / newsille)))
(d / do-02 :arg0 (v / vigil :mod (f / flood)) :arg1 (f2 / force-04 :arg2 (s / saturday)) :time (u / until :op1 (l / louisiana :mod (g / great) :location (s2 / south :part-of (s3 / strait)))))
(i / inspire-01 :arg0 (a / and :op1 (p / person :arg0-of (h / have-org-role-91 :arg1 (t / team) :arg3 (l / lead-02 :arg0 (p2 / person)))) :op2 (p3 / person :arg0-of (h2 / have-org-role-91 :arg2 (b / biles))) :op3 (p4 / person :arg0-of (h3 / have-org-role-91 :arg2 (h4 / head-of-state))) :op4 (p5 / person :arg0-of (h5 / have-org-role-91 :arg2 (h6 / head-of-state))) :op5 (p6 / person :arg0-of (h7 / have-org-role-91 :arg2 (h8 / head-of-state))) :op6 (p7 / person :arg0-of (h9 / have-org-role-91 :arg2 (h10 / head-of-state))) :op7 (p8 / person :arg0-of (h11 / have-org-role-91 :arg2 (h12 / head-of-state))) :op7 (p9 / person :arg0-of (h13 / have-org-role-91 :arg2 (h14 / head-of-state)))) :arg1 (p10 / person :arg0-of (i2 / inspire-01 :arg1 (g / girl :mod (c / coloured) :quant (m / many)))) :location (h15 / here :location (h16 / here :mod (a2 / also))) :ord (o / ordinal-entity :value 2))
(m / multi-sentence :snt1 (k / katolinen :arg0 (a / and :op1 (p / person :arg0-of (h / have-org-role-91 :arg1 (t / team :mod (t2 / this)) :arg2 (k2 / koostumus))) :op2 (p2 / person :arg0-of (h2 / have-org-role-91 :arg2 (j / jew))) :op3 (p3 / person :arg0-of (h3 / have-org-role-91 :arg2 (h4 / head-of-state))) :op4 (p4 / person :arg0-of (h5 / have-org-role-91 :arg2 (h6 / head-of-state))) :op5 (p5 / person :arg0-of (h7 / have-org-role-91 :arg2 (h8 / head-of-state))) :op6 (p6 / person :arg0-of (h9 / have-org-role-91 :arg2 (h10 / head-of-state))) :op6 (p7 / person :arg0-of (h11 / have-org-role-91 :arg2 (h12 / head-of-state))) :op6 (p8 / person :arg0-of (h13 / have-org-role-91 :arg2 (h14 / head-of-state))) :op7 (p9 / person :arg0-of (h15 / have-org-role-91 :arg2 (h16 / head-of-state))))) :snt2 (p10 / proud :mode (e / expressive)))
(s / superior-01 :arg1 (t / thursday :mod (e / each)) :arg2 (w / woman :mod (g / golden :mod (i / individual)) :mod (i2 / individual)) :location (m / moniottelu))
(a / and :op1 (w / walk-01 :arg0 (t / they) :destination (p / path :mod (s / same) :quant (a2 / all))) :op2 (w2 / walk :arg0 (t2 / they) :arg1 (p2 / path :mod (s2 / same))) :op3 (a3 / achieve-01 :arg0 (t3 / they) :arg1 (o / olympiajoukkue)) :op4 (a4 / achieve-01 :arg0 (t4 / they) :arg1 (o2 / olympiajoukkue)))
(a / and :op1 (l / let-01 :arg0 (i / inspire-01 :arg0 (t / team :poss (t2 / team :mod (t3 / this)))) :arg1 (w / war :name (n / name :op1 "N-A"))) :op2 (b / begin-01 :arg1 (e / eminent :arg1 (g / girl :mod (t4 / this)))))
(r / recommend-01 :arg1 (c / cause-01 :arg0 (r2 / recommend-01 :arg1 (p / possible-01 :arg1 (i / increase-01 :arg1 (t / ticagreloria :mod (t2 / tentatively))))) :arg1 (p2 / possible-01 :arg1 (i2 / increase-01 :arg0 (t3 / ticagreloria :mod (t4 / tentatively)) :arg1 (o / option :quant (m / multiple) :arg1-of (t5 / treat-03 :arg2 (f / feasibly :arg1 (h / human) :arg2 (h2 / human))))))))
(w / worry-02 :arg0 (i / i) :arg1 (w2 / worry-02 :arg0 (i2 / institution :mod (s / state)) :arg1 (c / correct-02 :polarity - :arg1 (b / behave-01 :arg0 (a / and :op1 (i3 / institution :mod (s2 / state)) :op2 (i4 / institution :mod (s3 / state))) :manner (p / political) :manner (p2 / politics) :arg1-of (c2 / cause-01 :arg0 (a2 / and :op1 (c3 / correct-02 :arg1 (t / thing :arg1-of (r / relate-01 :arg2 (f / flow-01 :arg1 (r2 / religion)))) :mod (a3 / also)) :op2 (' / '' :arg1 (r3 / religion))))))))
(r / reckon :arg0 (r2 / reckon :name (n / name :op1 (m / mac) :op2 (m2 / mac) :op3 (m3 / mac) :op4 (m4 / mac) :op5 (m5 / mac) :op6 (m6 / mac) :op7 (m7 / mac))) :arg1 (m8 / microphone :arg0 (h / he)) :time (b / begin-01 :arg0 (h2 / he) :arg1 (s / share-01 :arg0 (h3 / he) :arg1 (s2 / something :arg1-of (o / opine-01 :arg0 (w / woman :arg1-of (o2 / opine-01 :arg0 (h4 / he))))) :arg2 (f / final :mod (f2 / final)))))
(m / multi-sentence :snt1 (c / complain-01 :mode (i / imperative) :arg0 (y / you) :arg1-of (q / question-01)) :snt2 (s / sorry-01 :arg1 (i2 / i) :arg2 (s2 / see-01 :arg0 (i3 / i) :arg1 (w / work-01 :arg1 (w2 / work-01)))))
(a / and :op1 (a2 / ask-01 :arg0 (c / company :arg0-of (s / set-02 :medium (t / tv))) :arg1 (g / gift-01) :mod (a3 / also)) :op2 (p / publish-01 :arg0 (t2 / thing) :arg1 (o / opine-01)))
(s / speak-01 :arg0 (w / we) :arg1 (a / and :op1 (m / mizrachin :arg1 (y / york :name (n / name :op1 (m2 / maga) :op2 (k / krav) :op3 (r / rhon) :op4 (r2 / rhon) :op5 (r3 / rhon) :op6 (r4 / rhon) :op7 (p / ply)))) :op2 (t / thing :manner-of (w2 / wielding :arg1 (r5 / robbers :name (n2 / name :op1 (r6 / rods) :op2 (p2 / ply))) :location (c / close-range)))))
(l / luck :polarity - :domain (l2 / luck :poss (h / he)) :arg1-of (c / cause-01 :arg0 (l3 / leave-11 :polarity - :arg0 (h2 / he) :arg1 (h3 / he) :mod (e / evil) :mod (e2 / evil))))
(a / and :op1 (c / come-01 :arg1 (p / person :arg0-of (h / have-org-role-91 :arg2 (w / wrightista))) :arg4 (a2 / around :op1 (w2 / world)) :manner (w3 / well)) :op2 (e / eat :arg0 (p2 / person) :arg1 (m / matter :arg1-of (w4 / wonderful-03) :mod (a3 / also)) :mod (a4 / also)))
(a / and :op1 (r / resettled :arg0 (f / family) :location (e / elsewhere) :time (n / now)) :op2 (b / believe-01 :arg1 (l / live-01 :arg0 (f2 / family) :location (y / yksityismajoitus))))
(i / increase-01 :arg1 (i2 / increase-01 :arg1 (' / '' :mod (a / arra))) :mod (a2 / also) :mod (a3 / also) :arg1-of (r / resemble-01 :arg2 (f / fall-01 :arg1 (m / machine) :arg4 (u / under :op1 ('2 / '' :arg1 (m2 / machine))))))
(r / result-01 :arg1 (t / thing :arg2-of (r2 / result-01)) :arg2 (m / monetary-quantity :quant 4.3 :unit (e / euro)) :location (v / vuosipuolisko :ord (o / ordinal-entity :value 1)))
(w / work-01 :arg0 (t / they) :arg1 (g / garb :mod (c / civilian)) :mod (a / all))
(a / and :op1 (e / establish-01 :arg0 (r / reform-01 :arg0 (c / country :name (n / name :op1 "N-A"))) :arg1 (a2 / and :op1 (e2 / establish-01 :arg0 (c2 / country) :arg1 (c3 / centre :quant 1 :mod (i / intelligence) :mod (c4 / crime-02))) :op2 (e3 / establish-01 :arg0 (c5 / country) :arg1 (u / unit :quant 1 :mod (i2 / intelligence) :mod (l / less :degree (s / so)))))) :op2 (i3 / include-91 :arg1 (r2 / reform-01) :arg2 (u2 / unit :mod (p / police) :poss (d / department :mod (p2 / police)) :poss (d2 / department))))
(b / be-located-at-91 :arg2 (n / next) :time (o / once :op1 (l / leave-15 :arg1 (t / thieves))))
(d / do-02 :arg0 (i / i) :arg1 (t / this))
(f / face-01 :arg0 (r / report :mod (n / news)) :arg1 (l / likely-01 :arg1 (s / say-01 :arg0 (t / thing :arg1-of (r2 / report-01) :mod (n2 / news)) :arg1 (w / worry-01 :arg0 (p / pile :mod (b / bossa)) :arg1 (p2 / pile :mod (b2 / bossa))))))
(a / and :op1 (o / obligate-01 :arg2 (t / tax-01 :arg2 (t2 / thing :arg2-of (p / price-01 :arg1 (t3 / thing :arg2-of (p2 / price-01 :arg1 (f / food)))) :mod (o2 / old)))) :op2 (o3 / obligate-01 :arg2 (t4 / tax-01 :arg3 (t5 / thing :arg2-of (p3 / price-01 :arg1 (t6 / thing :arg2-of (p4 / price-01 :arg1 (t7 / thing :arg2-of (p5 / price-01 :arg1 (t8 / thing :arg2-of (p6 / price-01 :arg1 (t9 / thing :arg2-of (p7 / price-01 :arg1 (t10 / thing :arg2-of (p8 / price-01 :arg1 (t11 / thing :arg2-of (p9 / price-01 :arg1 (t12 / thing :arg2-of (p10 / price-01 :arg1 (t13 / thing :arg2-of (p11 / price-01 :arg1 (t14 / thing :arg2-of (p12 / price-01 :arg1 (t15 / thing :arg2-of (p13 / price-01 :arg1 (t16 / thing :arg2-of (p14 / price-01 :arg1 (t17 / thing :arg2-of (p15 / price-01 :arg1 (t18 / thing :arg2-of (p16 / price-01 :arg1 (t19 / thing :arg2-of (p17 / price-01 :arg1 (t20 / thing :arg2-of (p18 / price-01 :arg1 (t21 / thing :arg2-of (p19 / price-01 :arg1 (t22 / thing :arg2-of (p20 / price-01 :arg1 (t23 / thing :arg2-of (p21 / price-01 :arg1 (t24 / thing :arg2-of (p22 / price-01 :arg1 (f2 / food))))))))))) :mod (o4 / old) :mod (o5 / old)))))))))))))))))))))))))))))) :time (f3 / final)))))
(s / start-01 :arg0 (p / person :mod (c / country :name (n / name :op1 "N-A"))) :arg1 (e / efficient-01 :arg1 (p2 / person)) :time (e2 / early :degree (m / more)) :arg1-of (c2 / cause-01 :arg0 (h / have-purpose-91 :arg1 (a / achieve-01 :arg0 (p3 / person) :arg1 (m2 / monetary-quantity :quant 50 :unit (e3 / euro)) :arg2 (m3 / monetary-quantity :quant 50 :unit (e4 / euro))))))
(e / expect-01 :arg1 (p / positive :domain (a / amend-01 :arg1-of (a2 / amend-01)) :time (y / year :mod (t / this))))
(p / place :arg1-of (e / empty-02) :mod (f / forenoon) :location (p2 / place :arg1-of (e2 / empty-02)))
(a / and :op1 (m / mean-01 :arg2 50-60 :arg1 (d / day :mod (e / each))) :op2 (h / helsing :quant (s / some :op1 4000 :mod (o / only))) :time (y / year :mod (e2 / each)))
(a / and :op1 (t / take-01 :arg0 (t2 / they) :arg1 (m / more :mod (a2 / also)) :mod (a3 / also)) :op2 (a4 / announce-01 :arg0 (p / person :source (v / victim) :arg1-of (a5 / announce-01 :arg0 (v2 / victim))) :arg1 (p2 / person :arg0-of (s / steal-01)) :mod (o / only)))
(a / and :op1 (d / drawn :arg1 (i / ice :part-of (t / thieves :name (n / name :op1 (t2 / thieves) :op2 (t3 / thieves)))) :frequency (r / rate-entity-91 :arg3 (t4 / temporal-quantity :quant (N / N-A) :unit (w / week))) :arg3 (o / or :op1 (a2 / action) :op2 (w2 / work-01 :arg0 (p / police)))) :op2 (t5 / tell-01 :arg0 (p2 / person :mod (o2 / old) :arg0-of (h / have-org-role-91 :arg2 (h2 / head-of-state))) :arg1 (c / constable :mod (o3 / old) :mod (c2 / constable))))
(o / oppose-01 :arg0 (h / he) :arg1 (v / vapaakauppasopimus :location (c / city :name (n / name :op1 "N-A"))) :time (c2 / current) :arg1-of (c3 / cause-01 :arg0 (s / support-01)))
(m / multi-sentence :snt1 (r / reason :ord (o / ordinal-entity :value 2) :arg0-of (c / cause-01 :arg1 (i / interest :mod (l / lukewarm))) :arg0-of (c2 / cause-01 :arg1 (o2 / obligate-01 :arg2 (d / do-02 :arg0 (p / person :mod (c3 / country :name (n / name :op1 "N-A"))) :arg1 (r2 / reason :mod (t / traditional :mod (c4 / certain))) :condition (o3 / obligate-01 :arg2 (t2 / take-01 :arg1 (g / game :mod (s / surprise-01 :mod (a / any))))))))) :snt2 (p2 / pompsahtanut :arg1 (i2 / interest-01)))
(h / have-03 :arg0 (a / apply-01) :arg1 (t / time :quant 150000))
(t / tense :arg1-of (r / resemble-01 :arg2 (t2 / thing :arg1-of (t3 / tax-01 :arg3 (t4 / tax-01 :arg3 (t5 / tax))))))
(s / say-01 :arg0 (p / person :name (n / name :op1 "ihalainen")) :arg1 (c / come-04 :arg1 (t / thing :arg1-of (v / voluntary-02) :mod (t2 / that)) :arg2 (t3 / thing :arg1-of (t4 / tax-01 :arg3 (t5 / thing :arg1-of (s2 / see-01 :arg0 (t6 / thing :arg1-of (s3 / see-01 :arg0 (t7 / thing :arg1-of (t8 / tax-01 :arg3 (t9 / tax))))))))) :mod (a / also)))
(l / let-01 :arg0 (e / embassy :poss (c / country :name (n / name :op1 "N-A"))) :arg1 (f / finnish :arg0 (t / thing :arg1-of (c2 / comment-01) :mod (s / something)) :arg1 (t2 / thing :arg1-of (c3 / comment-01) :mod (s2 / something)) :path (s3 / scent :mod (p / pommi-isku))))
(t / try-01 :arg0 (e / embassy) :arg1 (a / aspire :arg0 (e2 / embassy) :arg1 (h / hinissa :mod (p / particular) :arg0-of (l / let-01 :arg1 (s / situation :poss (c / city :mod (i / information)))))))
(d / do-02 :arg0 (a / and :op1 (w / woman :arg1-of (l / local-02)) :op2 (w2 / woman :arg1-of (l2 / local-02)) :quant (o / over :op1 20)) :arg1 (p / person :arg0-of (t / tour-01) :mod (f / foreign) :quant 9 :mod (a2 / anyway)))
(w / worry-02 :polarity - :arg0 (o / office :name (n / name :op1 (p / phuket) :op2 (r / real-estate)) :mod (b / business) :poss (c / country :name (n2 / name :op1 "Thailand"))) :arg1 (p2 / property :arg1-of (s / same-01 :arg2 (p3 / property :arg1-of (r2 / run-01 :arg0 (c2 / club)) :arg0-of (r3 / run-01 :arg1 (e / esa :name (n3 / name :op1 (e2 / esa)) :arg0-of (r4 / run-01 :arg1 (c3 / club))))))) :arg4 (t / tourism) :mod (a / also))
(l / lie-07 :arg1 (o / office :poss (p / person :arg0-of (h / have-org-role-91 :arg2 (o2 / office :mod (c / company :name (n / name :op1 "N-A")))))) :arg2 (h2 / harvests :quant (f / few) :location (p2 / place :location-of (e / explode-01))))
(a / achieve-01 :arg0 (t / thing :arg1-of (s / same-01 :arg2 (t2 / thing :arg1-of (a2 / achieve-01 :arg0 (t3 / thing :ord (o / ordinal-entity :value 1) :arg1-of (s2 / same-01 :arg2 (t4 / thing :arg1-of (a3 / achieve-01 :arg0 (t5 / thing :ord (o2 / ordinal-entity :value 1)))))))))) :arg1 (n / neljäs :arg1-of (s3 / succeed-03)) :time (t6 / thing :arg1-of (s4 / same-01)))
(h / have-concession-91 :arg1 (h2 / have-polarity-91 :arg2 -))
(a / and :op1 (a2 / arrest-01 :arg1 (p / person :quant (b / bit :polarity -) :mod (o / other))) :op2 (a3 / arrest-01 :arg1 (p2 / person :quant 2) :time (b2 / before :op1 (m / multivitamin :domain (t / this)))))
(s / site :location (a / along :op1 (t / terrorism)) :location (a2 / along :op1 (t2 / terrorism)) :arg1-of (c / cause-01 :arg0 (s2 / suppress-01 :arg0 (p / person) :arg1 (p2 / person :arg1-of (h / hear-01 :arg0 (p3 / person) :arg2 (g / group :arg1-of (s3 / same-01)) :time (a3 / already) :time (a4 / already))))))
(v / violate-01 :arg0 (t / tuula) :arg1 (p / palpably))
(p / prove-01 :arg0 (m / matter :mod (t / this)) :arg1 (a / and :op1 (a2 / afferent :arg1 (l / life :poss (p2 / person))) :op2 (l2 / live-01 :arg0 (p3 / person) :duration (t2 / temporal-quantity :quant (N / N-A) :unit (y / year)))))
(m / multi-sentence :snt1 (f / forssa :arg0 (i / i) :arg1-of (d / direct-02 :polarity -)) :snt2 (d2 / directly :arg0 (i2 / i) :arg1-of (c / cause-01 :arg0 (h / hit-01 :arg0 (t / thing :arg1-of (r / respond-01 :arg0 (i3 / i))) :arg1 (r2 / right :poss (l / lorry))))))
(m / multi-sentence :snt1 (c / congestion :polarity - :arg1 (j / joll) :mod (s / so)) :snt2 (s2 / sign-up-03 :arg1 (i / i)))
(a / and :op1 (- / -rrb- :arg0 (p / person :arg0-of (h / have-org-role-91 :arg2 (m / minister :mod (f / foreign)))) :arg1 (p2 / person :arg0-of (h2 / have-org-role-91 :arg2 (m2 / minister :mod (f2 / foreign)))) :arg2 (p3 / person :arg0-of (h3 / have-org-role-91 :arg2 (m3 / minister :mod (f3 / foreign)))) :mod (a2 / also)) :op2 (d / do-02 :arg0 (p4 / person :arg0-of (h4 / have-org-role-91 :arg2 (m4 / minister :mod (f4 / foreign)))) :arg1 (p5 / person :arg0-of (h5 / have-org-role-91 :arg2 (m5 / minister :mod (f5 / foreign)))) :arg2 (p6 / person :arg0-of (h6 / have-org-role-91 :arg2 (m6 / minister :mod (f6 / foreign)))) :mod (a3 / also)))
(m / multi-sentence :snt1 (a / ask-02 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (p2 / person :name (n / name :op1 "Ivanov")))) :arg1 (t / transfer-01 :arg0 (p3 / person) :arg1 (t2 / task :ord (o / ordinal-entity :value 2)) :arg2 (t3 / task :ord (o2 / ordinal-entity :value 2)) :mod (a2 / also))) :snt2 (t4 / tell-01 :arg0 (c / country :name (n2 / name :op1 "Russia")) :time (t5 / today)))
(t / tell-01 :arg0 (d / detonate :mod (t2 / this)) :arg1 (a / and :op1 (b / begin-01 :arg0 (y / you) :arg1 (l / leave-11 :arg0 (y2 / you))) :op2 (r / resume-01 :arg0 (y3 / you) :arg1 (h / hotel)) :op3 (t3 / tell-01 :arg0 (p / person :arg0-of (r2 / represent-01 :arg1 (p2 / police)) :mod (p3 / police)) :arg1 (c / cnn :arg0 (p4 / person :arg0-of (r3 / represent-01 :arg1 (p5 / police))) :arg1 (p6 / person :arg0-of (r4 / represent-01 :arg1 (p7 / police)))))) :time (t4 / time :arg1-of (s / same-01)))
(b / be-located-at-91 :arg1 (b2 / bomb :quant 2 :arg1-of (l / local-02)) :arg2 (b3 / bomb :quant 2 :location (s / surat)) :time (m / morning :mod (n / next)))
(t / tell-01 :arg1 (w / war-01 :arg2 (s / situation :prep-in (s2 / situation))) :arg2 (m / mission :mod (c / combat-01) :time (a / after :op1 (c2 / cheat-03 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg2 (h2 / head-of-state))) :arg1 (p2 / person :arg0-of (h3 / have-org-role-91 :arg2 (h4 / head-of-state)))) :quant (m2 / multiple :op1 (t2 / temporal-quantity :quant (N / N-A) :unit (m3 / month) :mod (j / just))))))
(s / superior-01 :arg1 (a / and :op1 (p / person :arg0-of (h / have-rel-role-91 :arg1 (h2 / he) :arg2 (h3 / husband) :time (f / former))) :op2 (p2 / person :arg0-of (h4 / have-rel-role-91 :arg1 (h5 / he) :arg2 (h6 / husband) :time (f2 / former))) :op3 (p3 / person :arg0-of (h7 / have-rel-role-91 :arg1 (h8 / he) :arg2 (h9 / husband) :time (f3 / former))) :op4 (p4 / person :arg0-of (h10 / have-rel-role-91 :arg1 (h11 / he) :arg2 (h12 / husband) :time (f4 / former))) :op5 (p5 / person :arg0-of (h13 / have-rel-role-91 :arg1 (h14 / he) :arg2 (h15 / husband) :time (f5 / former))) :op6 (p6 / person :arg0-of (h16 / have-rel-role-91 :arg1 (h17 / he) :arg2 (h18 / husband) :time (f6 / former))) :op7 (p7 / person :arg0-of (h19 / have-rel-role-91 :arg1 (h20 / he) :arg2 (h21 / husband) :time (f7 / former))) :op7 (p8 / person :arg0-of (h22 / have-rel-role-91 :arg1 (h23 / he) :arg2 (h24 / husband) :time (f8 / former)))))
(t / tell-01 :arg0 (p / person :arg0-of (s / sell-01) :mod (b / besides)) :arg1 (t2 / tell-01 :arg0 (p2 / person) :arg1 (m / monetary-quantity :quant 47,344 :unit (e / euro)) :arg2 (p3 / person :arg0-of (s2 / sell-01)) :mod (a / also)) :arg2 (p4 / person :arg0-of (s3 / sell-01)))
(o / obligate-01 :arg1 (w / woman) :arg2 (a / and :op1 (a2 / abandon-01 :arg0 (w2 / woman) :arg1 (c / citizenship :poss (p / person :arg0-of (h / have-org-role-91 :arg2 (h2 / head-of-state))))) :op2 (g / give-01 :arg0 (w3 / woman) :arg1 (t / thing :arg2-of (r / recommend-01) :mod (g2 / good)) :arg2 (t2 / thing :arg2-of (r2 / recommend-01) :mod (g3 / good)))) :mod (a3 / also))
(t / tell-01 :arg1 (r / resemble-01 :polarity - :arg1 (t2 / thing :arg1-of (r2 / resemble-01 :arg2 (t3 / thing :arg1-of (r3 / resemble-01 :arg2 (t4 / thing :arg1-of (r4 / resemble-01 :arg2 (t5 / thing :arg1-of (r5 / resemble-01 :arg2 (t6 / thing :arg1-of (r6 / resemble-01 :arg2 (t7 / thing :arg1-of (r7 / resemble-01 :arg2 (t8 / thing :arg1-of (w / word-01 :arg0 (s / song :mod (c / commissioned :polarity -)))))))))))))))) :arg2 (t9 / thing :arg1-of (r8 / resemble-01 :arg2 (s2 / sillanpää)))) :arg2 (b / book))
(w / work-01 :arg0 (t / they) :mod (t2 / this))
(a / and :op1 (c / coordinate-01 :arg1 (e / education :arg1-of (d / do-02 :arg2 (n / name :op1 (c2 / customs) :op2 (k / koirakoulu)))) :time (t / to-date)) :op2 (c3 / coordinate-01 :arg1 (e2 / educate-01)))
(e / exchange-01 :arg1 (e2 / exchange-01 :arg1 (i / iceland)) :arg2 (g / government-organization :arg0-of (g2 / govern-01)))
(m / multi-sentence :snt1 (s / say-01 :arg1 (e / express-01 :arg0 (t / they) :arg1 (e2 / express-01 :arg0 (t2 / they) :arg1 (l / linkages :mod (r / religious)))) :mod (a / also)) :snt2 (t3 / target-01 :arg0 (e3 / each) :arg1 (t4 / thing :arg1-of (t5 / target-01))))
(a / and :op1 (e / end-01 :arg1 (r / rate-entity-91 :arg1 2 :arg2 (t / temporal-quantity :quant (N / N-A) :unit (y / year))) :arg1-of (o / organize-01) :time (f / final)) :op2 (k / kill-01 :arg1 (m / man :quant (o2 / over :op1 80) :arg1-of (a2 / age-01 :arg2 (t2 / temporal-quantity :quant (N2 / N-A) :unit (y2 / year))))))
(p / phone-number-entity :value (N / N-A))
(c / concern-01 :arg0 (m / model) :arg1 (h / he) :mod (s / small :mod (o / only)) :arg1-of (c2 / cause-01 :arg0 (c3 / concern-01 :arg0 (m2 / model) :arg1 (h2 / he))))
(c / come-01 :arg1 (c2 / car :mod (c3 / country :name (n / name :op1 "N-A")) :mod (c4 / country :name (n2 / name :op1 "N-A"))) :arg4 (a / and :op1 (l / lead-02 :arg0 (c5 / car)) :op2 (a2 / aircraft :mod (c6 / country)) :op3 (s / ship :mod (c7 / country))) :purpose (m / monitor-01 :arg0 (c8 / car) :location (a3 / anywhere :location (c9 / country :location (c10 / country) :mod (n3 / new)))))
(s / start-01 :arg0 (h / he) :time (b / before :op1 (b2 / birth-01 :arg1 (p / person :arg0-of (h2 / have-rel-role-91 :arg1 (h3 / he) :arg2 (f / father))))) :time (m / meet-03 :arg0 (h4 / he) :arg1 (p2 / person :arg0-of (h5 / have-rel-role-91 :arg1 (p3 / person :arg0-of (h6 / have-rel-role-91 :arg2 (f2 / father) :time (f3 / future)) :arg0-of (h7 / have-rel-role-91 :arg2 (f4 / father))) :arg2 (- / -rrb- :name (n / name :op1 (g / grao) :op2 (g2 / grao))) :time (f5 / future)))))
(d / determine-01 :arg0 (t / they) :arg1 (t2 / thing :quant 4 :arg1-of (s / save-01 :arg0 (t3 / they))) :time (a / already))
(r / rate-entity-91 :arg1 500 :arg6 400 :arg2 (t / temporal-quantity :quant (N / N-A) :unit (y / year)))
(p / phone-number-entity :value (N / N-A))
(h / hear-01 :arg0 (p / person :mod (e / each) :arg0-of (h2 / have-org-role-91 :arg2 (h3 / head-of-state)) :arg1-of (l / local-02) :location (i / in-front-of :op1 (f / front :name (n / name :op1 (e2 / essi) :op2 (e3 / essi)) :location (i2 / in-front-of :op1 (v / value-interval :op1 (N / N-A) :op2 (e4 / essi)))))) :arg1 (v2 / volley :mod (f2 / finland)) :time (f3 / from :op1 (l2 / lead-01 :arg0 (i3 / i) :duration (m / multiple :op1 (t / temporal-quantity :quant (N2 / N-A) :unit (y / year))))))
(c / contrast-01 :arg1 (m / move-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg2 (a / anime))) :arg1 (s / source :mod (i / inspirations)) :arg2 (t / thing :name (n / name :op1 "N-A"))) :arg2 (p2 / person :arg0-of (o / observe-01) :mod (r / racist)))
(s / simple-02 :arg1 (s2 / skill :mod (w / wring) :arg1-of (m / mean-01 :arg2 (p / produce-01 :arg0 (t / they) :arg1 (d / dinner :quant (o / over :op1 30000000) :arg1-of (i / improve-01))))) :arg1-of (s3 / simple-02))
(m / multi-sentence :snt1 (a / and :op1 (g / give-01 :arg0 (e / each) :arg1 (e2 / eye :part-of (p / person :arg0-of (u / use-01))) :arg2 (e3 / eye :part-of (p2 / person :arg0-of (u2 / use-01)))) :op2 (r / rotund :arg1 (t / tooth :part-of (p3 / person)) :mod (a2 / also))) :snt2 (c / call-01 :arg0 (p4 / person :arg0-of (c2 / criticize-01) :mod (a3 / any)) :arg1 (r2 / racist :mod (s / such)) :arg2 (f / face :part-of (h / human :mod (c3 / continent :name (n / name :op1 "N-A")))) :arg0-of (c4 / cause-01 :arg1 (y / yellowfaceksi))) :time (w / week :mod (t2 / this)))
(b / ban-01 :arg0 (t / they) :manner (c / compare-01) :ord (o / ordinal-entity :value 2))
(m / multi-sentence :snt1 (i / increase-01 :arg1 (c / claim-01 :arg0 (h / he))) :snt2 (d / difficult :domain (c2 / claim-01 :arg0 (p / person :arg0-of (' / '')) :arg1 (c3 / compare-01 :arg0 (p2 / person) :arg1 (t / thing :arg1-of (e / effect-03 :arg0 (c4 / caricature :arg0 (c5 / continent :name (n / name :op1 "N-A") :arg1-of (g / gross-03) :mod (h2 / humanitarian)) :mod (a / also))))))))
(s / say-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (p2 / person :name (n / name :op1 "N-A") :age (t / temporal-quantity :quant (N / N-A) :unit (y / year)) :arg0-of (h2 / have-org-role-91 :arg2 (z / zhu))) :arg2 (z2 / zhu))) :arg1 (d / difficult :domain (d2 / do-02 :arg0 (a / and :op1 (p3 / person :arg0-of (u / use-01 :arg1 (p4 / picture :arg1-of (g / guilty-01 :polarity -)))) :op2 (p5 / person :arg0-of (h3 / have-org-role-91 :arg2 (z3 / zhu))) :op3 (p6 / person :arg0-of (h4 / have-org-role-91 :arg2 (z4 / zhu))) :op4 (p7 / person :arg0-of (h5 / have-org-role-91 :arg2 (z5 / zhu))) :op5 (p8 / person :arg0-of (h6 / have-org-role-91 :arg2 (z6 / zhu)))) :arg1 (d3 / difficult :mod (s2 / subtlety)) :time (p9 / prior :op1 (s3 / snapchatin)))) :medium (i / interview-01 :arg1 (p10 / person)))
(a / and :op1 (t / transport-01 :arg0 (h / he) :arg1 (f / field :arg1-of (l / long-03)) :time (b / before :op1 (n / now) :quant (l2 / long))) :op2 (t2 / take-01 :arg0 (h2 / he) :arg1 (l3 / leaderships :quant (2 / 2-0) :mod (c / country :name (n2 / name :op1 "N-A")))) :time (b2 / before :op1 (n3 / now) :quant (l4 / long)))
(s / silent :arg0 (s2 / street :location (c / city)) :arg1-of (t / typical-02) :mod (a / also))
(a / and :op1 (u / use-01 :arg0 (y / you) :arg1 (j / journalist :mod (s / same) :arg1-of (s2 / same-01))) :op2 (b / buy-01 :arg0 (y2 / you) :arg1 (m / machine :mod (e / espresso) :arg1-of (b2 / buy-01))))
(s / say-01 :arg0 (h / he) :arg1 (n / need-01 :arg0 (p / person :mod (c / country :name (n2 / name :op1 "N-A"))) :arg1 (l / let-01 :arg0 (p2 / person) :arg1 (s2 / smell :arg0 (p3 / person) :arg1 (' / '' :mod (t / that))))))
(a / and :op1 (e / eat-01 :arg0 (r / recession-02 :quant (m / many)) :arg1 (w / way :mod (r2 / right)) :time (e2 / early)) :op2 (r3 / reach-01 :arg0 (r4 / recession-02) :arg1 (f / foot :mod (o / old))))
(c / contrast-01 :arg1 (m / manage-01 :arg0 (c2 / city :mod (' / '')) :arg1 (m2 / manage-01) :degree (t / total) :time (n / now)) :arg2 (a / and :op1 (e / examine-01 :arg0 (c3 / city) :arg1 ('2 / '' :mod (t2 / that))) :op2 (t3 / tell-01 :arg0 (h / he) :arg2 (r / reuters))))
(a / appeal-02 :arg0 (b / businessman :name (n / name :op1 (t / trumps) :op2 (t2 / trumps)) :mod (n2 / new) :mod (c / country :name (n3 / name :op1 "N-A"))) :arg1 (r / reason :arg0-of (c2 / cause-01 :arg1 (s / spread-03 :arg1 (t3 / thing :arg0-of (c3 / cause-01 :arg1 (s2 / spread-03 :arg1 (d / declarations))))))) :arg2 (l / lawyer))
(w / write-01 :arg0 (i / i))
(h / have-concession-91 :arg1 (h2 / hopeful-03 :arg0 (p / person :arg0-of (h3 / have-org-role-91 :arg2 (a / ambassador))) :manner (c / consistent) :time (b / before :op1 (n / now) :quant (f / few :op1 (t / temporal-quantity :quant (N / N-A) :unit (m / month))))) :arg2 (s / same-01 :arg1 (v / visit-01 :arg0 (p2 / person :arg0-of (h4 / have-org-role-91 :arg2 (a2 / ambassador))) :arg1 (c2 / country :name (n2 / name :op1 "N-A")))))
(m / multi-sentence :snt1 (m2 / mean-01 :arg1 (a / and :op1 (d / do-02 :arg0 (e / each) :arg1 (t / temporal-quantity :quant (N / N-A) :unit (y / year)) :mod (e2 / exact)) :op2 (b / born :arg0 (e3 / each))) :arg2 (d2 / do-02 :arg0 (e4 / each) :arg1 (p / product-of :op1 23 :op2 (t2 / temporal-quantity :quant (N2 / N-A) :unit (y2 / year)) :mod (e5 / exact)))) :snt2 (- / -lrb- :arg0 (e6 / each) :arg1 (s / sport :poss (c / country :name (n / name :op1 "N-A"))) :mod (a2 / also)) :snt3 (-2 / -lrb- :arg0 (a3 / and :op1 (c2 / country :name (n2 / name :op1 "N-A")) :op2 (c3 / country :name (n3 / name :op1 "N-A"))) :arg1 (a4 / and :op1 (r / redgraven) :op2 (b2 / birthday :name (n4 / name :op1 (m3 / mo)))) :mod (a5 / also) :mod (a6 / also)))
(p / presence :mod (l / lemonaden) :time (y / year :mod (p2 / past)) :location (a / along :op1 (c / career :mod (s / some) :arg1-of (s2 / strong-02))))
(m / multi-sentence :snt1 (a / and :op1 (l / let-01 :arg0 (c / company :arg0-of (h / have-03 :arg1 (m2 / money :source (a2 / and :op1 (c2 / company :arg0-of (h2 / have-org-role-91 :arg2 (h3 / head-of-state))) :op2 (p / person :arg0-of (p2 / prevent-01 :arg1 (p3 / programme))) :op3 (p4 / person :arg0-of (p5 / prevent-01 :arg1 (p6 / programme))) :op4 (p7 / person :arg0-of (p8 / prevent-01 :arg1 (p9 / programme))) :op5 (p10 / person :arg0-of (p11 / prevent-01 :arg1 (p12 / programme))))))) :arg1 (c3 / cat :name (n / name :op1 (' / ''))) :mod (a3 / also) :mod (a4 / also))) :snt2 (s / say-01 :arg0 (i / i) :arg1 (s2 / some :mod (s3 / such)) :arg2 (c4 / company :mod (p13 / preparative))))
(p / phone-number-entity :value (N / N-A))
(a / argue-01 :arg0 (t / thing :arg1-of (l / list-01 :arg2 (r / rate-entity-91 :arg1 (u / under :op1 (t2 / temporal-quantity :quant (N / N-A) :unit (m / minute))) :arg2 (t3 / temporal-quantity :quant (N2 / N-A) :unit (m2 / minute))))) :arg1 (c / convey-01 :arg0 (t4 / they) :manner (s / slow) :arg1-of (r2 / resemble-01 :arg2 (a2 / asters :mod (m3 / massive) :degree (l2 / less)))))
(a / and :op1 (d / describe-01 :arg0 (t / they) :arg1 (p / plejadien :mod (l / last)) :arg2 (r / rate-entity-91 :arg1 (a2 / article :quant 3) :arg2 (t2 / temporal-quantity :quant (N / N-A) :unit (m / minute)))) :op2 (p2 / publish-01 :arg0 (h / he) :arg1 (a3 / article :quant 3 :arg1-of (p3 / publish-01 :time (s / soon)) :arg1-of (p4 / publish-01 :time (s2 / soon) :location (g / graphic)))))
(l / lead-03 :arg0 (m / media :mod (s / state-controlled)) :arg2 (a / astonishing :arg1 (a2 / ankara)) :duration (m2 / multiple :op1 (t / temporal-quantity :quant (N / N-A) :unit (m3 / month))))
(a / absorbs :arg0 (p / person :name (n / name :op1 "dettori")) :arg1 (h / hurrauksia :mod (t / taluttaa)) :time (r / raise-01 :arg0 (p2 / person) :arg1 (i / issue-02) :time (a2 / after :op1 (w / win-01))))
(w / work-09 :arg1 (i / it) :manner (a / amr-unknown))
(p / phone-number-entity :value (N / N-A))
(a / and :op1 (b / break-up-08 :arg1 (h / he) :arg3 (t / tears :arg0 (h2 / he))) :op2 (c / close-01 :arg1 (j / journey :arg0 (h3 / he) :arg1-of (l / long-03)) :time (m / moment :mod (t2 / this))))
(b / bring-01 :arg0 (w / we) :arg1 (a / and :op1 (p / person :arg0-of (l / live-01 :location (c / community)) :arg0-of (l2 / live-01 :location (c2 / community))) :op2 (p2 / person :arg0-of (l3 / live-01 :location (c3 / community))) :op3 (p3 / person :arg0-of (l4 / live-01 :location (c4 / community)) :quant (m / many))) :arg2 (p4 / person :arg0-of (l5 / live-01 :location (c5 / community))))
(a / and :op1 (t / transfer-01 :arg1 (p / progress-01) :time (b / before :op1 (t2 / transfer-01 :arg1 (g / group :consist-of (d / doctor) :ord (o / ordinal-entity :value 1)) :arg2 (a2 / agree-01 :mod (n / new)))) :time (t3 / transfer-01 :arg1 (g2 / group :ord (o2 / ordinal-entity :value 1) :consist-of (d2 / doctor)))) :op2 (o3 / obligate-01 :arg2 (m / make-05 :arg1 (p2 / progress-01))))
(b / block-01 :arg0 (h / hyytymistä :mod (b2 / blood)) :arg1 (m / medicine :name (n / name :op1 (t / ticagrelor))) :purpose (r / reduce-01 :arg0 (h2 / hyytymistä) :arg1 (r2 / risk-01 :arg2 (s / scenes :mod (h3 / heart)))))
(p / possible-01 :arg1 (c / cause-01 :arg0 (i / it) :arg1 (v / verihyytymän :arg1 (h / heart :part-of (h2 / heart)) :arg0-of (c2 / cause-01 :arg1 (a / attack-01 :mod (h3 / heart))))) :condition (e / expend-01 :arg0 (i2 / i)))
(m / make-01 :arg0 (h / he) :arg1 (c / cause-01 :arg0 (v / vote-01 :arg0 (p / person :arg0-of (h2 / have-org-role-91 :arg1 (c2 / community :mod (r / religious-group :name (n / name :op1 "N-A"))) :arg2 (m2 / member) :arg1-of (r2 / rank-01 :arg1-of (h3 / high-02))))) :arg1 (v2 / vote-01 :arg0 (p2 / person) :arg1 (c3 / candidate :poss (c4 / choose-01 :arg0 (p3 / person))))) :arg1-of (s / specific-02))
(r / resemble-01 :arg1 (a / and :op1 (k / kasvonmuoto) :op2 (e / eye)) :arg2 (a2 / and :op1 (k2 / kasvonmuoto) :op2 (e2 / eye)) :mod (i / indeed) :mod (i2 / indeed) :mod (i3 / indeed))
(a / and :op1 (s / stand-01 :arg1 (w / woman) :arg2 (m / middle :part-of (f / floor :mod (t / trade-01)))) :op2 (t2 / take-01 :arg0 (w2 / woman) :arg1 (c / couple :arg0-of (s2 / sukkahousunsa :arg1 (s3 / sukkahousunsa)) :poss (c2 / couple))) :op3 (p / put-01 :arg0 (w3 / woman) :arg1 (c3 / couple) :arg2 (f2 / foot)) :op4 (s4 / solve-01 :arg0 (w4 / woman) :arg1 (f3 / foot)))
(a / and :op1 (h / heittelimme :arg1 (i / idea :mod (c / crazy-03 :arg1 (a2 / air)) :quant (l / lot))) :op2 (c2 / come-up-11 :arg0 (w / we) :arg1 (i2 / idea :topic (i3 / ianille :name (n / name :op1 (' / ') :op2 (s / soitetaanpa) :op3 (i4 / ianille))))))
(v / vow-01 :arg0 (p / person :mod (c / country :name (n / name :op1 "N-A"))) :arg1 (v2 / varusmiestä :quant 70))
(d / direct-01 :arg1 (a / and :op1 (a2 / analysoiman) :op2 (h / help-01 :arg1 (g / gather-03 :duration (d2 / day)))) :arg2 (l / location :location-of (n / need-01 :arg1 (t / thing :arg1-of (n2 / need-01) :quant (m / most)))))
(p / possible-01 :arg1 (o / or :op1 (d / do-02 :arg1 (s / sarjoittamista :mod (e / either))) :op2 (b / base-02 :arg1 (p2 / person) :arg2 (p3 / person)) :arg0-of (d2 / depend-01 :arg1 (i / information :mod (m / more) :domain (o2 / one) :beneficiary (p4 / police)))))
(c / contrast-01 :arg1 (g / go-02 :polarity - :arg0 (p / person :arg0-of (w / work-01) :mod (r / rta-service)) :arg4 (t / town)) :arg2 (j / julkistakaan :polarity - :arg1 (w2 / work-01 :arg0 (p2 / person)) :degree (e / entire)))
(a / and :op1 (a2 / age-01 :arg1 (h / he) :arg2 (t / temporal-quantity :quant (N / N-A) :unit (y / year))) :op2 (s / say-01 :arg0 (f / family :arg1-of (h2 / have-org-role-91 :arg0 (h3 / he) :arg2 (m / member))) :arg1 (d / die-01 :arg1 (h4 / he) :time (p / plan-01 :arg0 (t2 / they) :arg1 (d2 / depart-01 :arg0 (t3 / they) :arg2 (c / country :location (m2 / military :name (n / name :op1 "N-A")))))) :mod (j / just)))
(f / foppissa :arg1 (f2 / foppissa :quant (e / entire :mod (a / almost))) :time (a2 / arrive-01 :arg1 (i / i) :arg4 (a3 / audience :mod (d / diverse :degree (m / more :degree (m2 / much))))) :time (n / now))
(d / do-02 :arg0 (h / he) :arg1 (d2 / do-02 :polarity - :arg0 (h2 / he) :arg1 (m / money :quant (m2 / much))))
(s / say-01 :arg0 (t / thing :arg1-of (s2 / send-01 :arg2 (n / name :op1 (a / amsterdam)))) :arg1 (d / disaster :domain (c / closure :arg1 (' / '' :mod (a2 / amsterdam))) :beneficiary (p / person :mod (t2 / this) :quant (s3 / some) :arg1-of (a3 / age-01 :arg2 (t3 / temporal-quantity :quant (N / N-A) :unit (y / year) :mod (o / only))))) :medium (l / letter :arg1-of (s4 / send-01 :arg2 (p2 / person :name (n2 / name :op1 "N-A")))))
(a / and :op1 (f / fall-01 :arg1 (t / thing :arg2-of (p / price-01 :arg1 (f2 / food))) :arg2 (c / country :name (n / name :op1 "N-A")) :time (y / year :mod (l / last))) :op2 (f3 / fall-01 :arg1 (t2 / thing :arg2-of (p2 / price-01 :arg1 (f4 / food))) :arg4 (c2 / country :arg0-of (h / have-03 :arg1 (r / rate :arg1-of (r2 / resemble-01 :arg2 (r3 / rate :arg1-of (p3 / pay-01 :arg3 (r4 / rate :arg1-of (p4 / pay-01))))))))) :time (y2 / year :mod (l2 / last)))
(c / contrast-01 :arg1 (h / hotbed :arg1 (f / food)) :arg2 (c2 / cheap-02 :polarity - :arg1 (f2 / food) :mod (s / still) :concession (d / decline-01 :arg1 (t / thing :arg2-of (p / price-01 :arg1 (f3 / food))) :manner (a / abundance))))
(t / turned :arg1 (r / rout :mod (s / sharks) :arg1-of (a / average-03)) :time (a2 / after :op1 (n / now) :quant (a3 / at-least :op1 (t2 / temporal-quantity :quant (N / N-A) :unit (y / year)))))
(b / begin-01 :arg1 (t / tehokkuusohjelman :arg1-of (d / design-01 :arg3 (a / achieve-01 :arg1 (t2 / thing :arg1-of (s / save-01 :time (y / year :mod (t3 / this))))))) :time (a2 / already))
(d / deficit :quant 4.1 :time (y / year :mod (l / last)) :location (a / across :op1 (p / product-of :op1 4.1 :op2 (w / whole))))
(a / and :op1 (b / be-located-at-91 :arg1 (a2 / and :op1 (c / cup :mod (w / world)) :op2 (c2 / cup :mod (w2 / world))) :arg2 (w3 / way :ord (o / ordinal-entity :value 4)) :time (y / year :mod (l / last)) :location (c3 / cup :mod (w4 / world))) :op2 (b2 / be-located-at-91 :arg1 (a3 / and) :arg2 (u / under :op1 (r / rio))))
(b / be-located-at-91 :arg1 (a / amr-unknown) :arg2 (a2 / all))
(r / right :mode (i / interrogative) :domain (a / all))
(w / want-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (c / country :name (n / name :op1 "N-A")) :arg2 (m / member))) :arg1 (c2 / channelled :arg1 (m2 / money :poss (p2 / party))) :arg1-of (i / instead-of-91 :arg2 (c3 / campaign-01)))
(p / possible-01 :arg1 (p2 / prevent-01 :arg0 (k / koristeinen :name (n / name :op1 (t / trumps) :op2 (k2 / koristeinen) :op3 (k3 / koristeinen) :op4 (k4 / koristeinen) :op5 (k5 / koristeinen))) :arg1 (a / anchored :mod (t2 / trumps)) :time (i / immediate) :arg1-of (p3 / possible-01) :mod (o / only)))
(m / multi-sentence :snt1 (p / possible-01 :arg1 (g / get-01 :arg0 (n / network :name (n2 / name :op1 (' / ''))) :arg1 (t / thing :mod (t2 / this)) :time (u / until :op1 (l / late :degree (m2 / more))))) :snt2 (p2 / pokkinen))
(s / say-01 :arg0 (a / agency :name (n / name :op1 "N-A") :mod (n2 / news)) :arg1 (a2 / and :op1 (r / rule-out-02 :arg0 (t / terrorism :mod (r2 / religious-group :name (n3 / name :op1 "N-A"))) :arg1 (t2 / terrorism :mod (r3 / religious-group :name (n4 / name :op1 "N-A")))) :op2 (t3 / tell-01 :arg0 (p / police :mod (c / country :name (n5 / name :op1 "N-A"))) :arg1 (t4 / terrorism))))
(i / injure-01 :arg1 (p / person :quant (a / at-least :op1 3)) :arg1-of (c / cause-01 :arg0 (a2 / attack-01)) :location (n / net))
(s / state :arg0-of (c / crash-01))
(d / dominate-01 :arg0 (a / awash :poss (w / woman)) :arg1 (b / biles) :time (b2 / before :op1 (n / now) :duration (f / few :op1 (t / temporal-quantity :quant (N / N-A) :unit (y / year)))))
(c / concern-01 :polarity - :arg0 (a / attack-01 :arg1 (a2 / and :op1 (p / person :arg0-of (h / have-rel-role-91 :arg2 (c2 / child))) :op2 (p2 / person :arg0-of (h2 / have-rel-role-91 :arg1 (p3 / person) :arg2 (c3 / child))) :op3 (p4 / person :arg0-of (h3 / have-rel-role-91 :arg1 (p5 / person) :arg2 (c4 / child))) :op4 (p6 / person :arg0-of (h4 / have-rel-role-91 :arg1 (p7 / person) :arg2 (c5 / child))) :op5 (p8 / person :arg0-of (h5 / have-rel-role-91 :arg1 (p9 / person) :arg2 (c6 / child))))) :arg1 (i / impact-01 :arg0 (a3 / attack-01 :arg1 (t / tourism)) :arg1 (t2 / tourism)))
(b / boltin :name (n / name :op1 (o / olympianäytös) :op2 (b2 / begins) :op3 (b3 / begins) :op4 (b4 / begins) :op5 (b5 / begins) :op6 (b6 / begins) :op7 (b7 / begins)))
(r / report-01 :arg0 (r2 / research-institute :name (n / name :op1 "N-A")) :arg1 (g / give-01 :arg0 (d / danekova :name (n2 / name :op1 (n3 / naisestejuoksija) :op2 (s / silvia))) :arg1 (s2 / sign :arg1-of (i / include-91 :arg2 (s3 / sign :arg0-of (s4 / signal-07 :arg1 (e / epo)))) :quant (m / multiple :op1 1))))
(c / contrast-01 :arg1 (o / oppose-01 :arg0 (p / person :mod (c2 / country :name (n / name :op1 "N-A"))) :arg1 (w / want-01 :arg0 (p2 / person) :arg1 (s / säväyttää))) :arg2 (s2 / stress-01 :arg0 (p3 / person) :arg1 (w2 / want-01 :polarity - :arg0 (p4 / person) :arg1 (p5 / person :arg0-of (p6 / play-01) :mod (m / main) :domain (p7 / person)))))
(s / same-01 :arg1 (p / police) :arg2 (a / and :op1 (a2 / arrest-01 :arg1 (p2 / person :quant 5 :mod (o / other))) :op2 (a3 / arrest-01 :arg1 (p3 / person :quant 2) :time (b / before :op1 (r / release-01 :arg1 (p4 / person))))))
(a / and :op1 (p / package :domain (p2 / police)) :op2 (l / leaking :arg1 (p3 / police) :arg2 (h / halliin :arg1-of (p4 / public-02)) :time (u / until :op1 (t / then))))
(s / say-01 :arg1 (a / and :op1 (l / leave-11 :arg0 (h / he) :arg1 (t / thing :arg2-of (r / result-01 :arg1 (a2 / and :op1 (k / kolari) :op2 (k2 / karkasivat :mod (o / other)))))) :op2 (s2 / say-01 :arg0 (p / person :arg0-of (h2 / have-org-role-91 :arg1 (w / wilenius :name (n / name :op1 (f / finnish))) :arg2 (w2 / wilenius))) :arg1 (h3 / he))) :arg2 (s3 / stranded))
(s / say-01 :arg0 (s2 / study) :arg1 (p / possible-01 :arg1 (e / extend-01 :arg0 (u / use-01 :arg1 (h / hammaslangan) :arg1-of (r / regular-02)) :arg1 (l / life :poss (p2 / person)))))
(g / get-01 :arg0 (w / we) :arg1 (l / load :quant (m / more)) :time (r / receive-01 :arg0 (m2 / mail)))
(p / post :arg0 (p2 / post :name (n / name :op1 (k / kuljetuspalvelujen) :op2 (k2 / kuljetuspalvelujen))) :arg1 (d / damage-01 :arg1 (b / business :arg0-of (r / responsible-01 :arg1 (s / sanomille :time (e / evening))))))
(m / multi-sentence :snt1 (h / hard-02 :arg1 (m2 / motivation)) :snt2 (h2 / hehkuttaa :quant 1))
(t / tell-01 :arg1 (r / review-01) :arg2 (a / and :op1 (d / do-02 :arg0 (v / victim) :arg1 (s / standing :mod (e / eläinlääkäriasemalla) :mod (s2 / sipoon)) :purpose (w / work-01)) :op2 (c / carry-out-03 :arg0 (v2 / victim) :location (o / out :op1 (t2 / there)) :mod (a2 / also))))
(r / report-01 :arg0 (p / person) :arg1 (n / news) :time (f / first))
(c / contrast-01 :arg1 (p / possible-01 :arg1 (m / megalomaniac :arg0 (i / i) :degree (l / little)) :arg1-of (p2 / possible-01)) :arg2 (p3 / possible-01 :arg1 (m2 / maintain-01 :arg0 (w / we) :arg1 (f / flow-01 :arg1 (l2 / live-01 :arg0 (w2 / we) :arg1-of (c2 / cause-01 :arg0 (r / risk-01)))) :time (t / time :arg1-of (s / same-01))) :time (t2 / time :arg1-of (s2 / same-01))))
(t / tell-01 :arg0 (p / police) :arg1 (f / find-01 :arg0 (p2 / police) :arg1 (b / bomb :quant (a / at-least :op1 1) :arg0-of (h / have-03 :polarity - :arg1 (t2 / time) :time (y / yet))) :arg1-of (r / report-01)) :arg2 (p3 / person :name (n / name :op1 "N-A")) :arg1-of (r2 / report-01))
(u / use-01 :arg1 (a / action :mod (m / military)) :time (a2 / already) :condition (n / need-01) :condition (n2 / need-01))
(p / possible-01 :arg1 (c / contaminated :arg1 (h / house :mod (l / länsipuolella) :location (a / air)) :arg2 (e / estimate-01 :arg1 (g / get-05 :arg2 (i / inside :op1 (i2 / inside))) :mod (t / too))))
(s / say-01 :arg0 (c / court :mod (a / appeal-01)) :arg1 (n / neglected :polarity - :arg1 (p / person :arg0-of (b / buy-01))) :medium (r / rule-01 :arg0 (c2 / court)))
(h / have-concession-91 :arg1 (g / guess-01 :polarity - :arg0 (i / i) :arg1 (o / obligate-01 :arg2 (l / laulettu :polarity - :arg1 (i2 / initiative))) :time (i3 / immediate)) :arg2 (v / valtaiseksi :mod (s / substantial) :mod (s2 / substantial)))
(a / and :op1 (j / job) :op2 (h / house-01) :op3 (s / service :arg1-of (p / public-02)) :domain (t / they))
(c / contrast-01 :arg1 (f / fund :polarity - :mod (m / massive) :mod (m2 / massive) :arg1-of (n / normal-02)) :arg2 (p / possible-01 :arg1 (n2 / need-01 :arg1 (t / thing)) :time (n3 / now)))
(e / estimate-01 :arg0 (h / he) :arg1 (o / or :op1 (f / fall-01 :arg1 (f2 / fund :arg1-of (f3 / fund-01 :arg0 (l / low-04)) :mod (t / this)) :arg2 (p / percentage-entity :value (N / N-A))) :op2 (l2 / less :degree (l3 / less :mod (e2 / even)))))
(c / contrast-01 :arg1 (c2 / close-01 :polarity - :arg0 (t / they) :arg1 (t2 / trade-01) :mod (a / actual)) :arg2 (c3 / change-01 :arg0 (t3 / they) :arg1 (t4 / thing :arg2-of (p / price-01))))
(l / live-01 :arg0 (c / city :arg0-of (h / have-org-role-91 :arg2 (h2 / head-of-state))) :degree (f / full) :concession (l2 / live-01 :arg0 (c2 / city)))
(a / and :op1 (f / fall-01 :arg1 (p / pound)) :op2 (g / go-02 :arg0 (l / leadership :mod (c / country :name (n / name :op1 "N-A"))) :arg4 (e / exchange-01)))
(u / use-01 :arg1 (d / data) :arg2 (m / market-01 :arg1-of (t / target-01)))
(c / collect-01 :arg0 (o / ostotietoja :name (n / name :op1 (t / tuotekohtaisia))) :arg1 (k / k-group :poss (o2 / ostotietoja) :mod (o3 / only)))
(a / and :op1 (r / receive-01 :arg0 (p / person :mod (c / country :name (n / name :op1 "N-A"))) :arg1 (o / ordinal-entity :value 1)) :op2 (g / get-01 :arg0 (p2 / person) :arg1 (h / holiday)))
(a / and :op1 (c / card :name (n / name :op1 (t / trumps) :op2 (t2 / trumps)) :domain (a2 / aurora)) :op2 (l / link-01 :arg1 (t3 / they) :arg2 (a3 / and :op1 (s / sydäntalveen :arg1-of (s2 / strong-02)) :op2 (l2 / landscapes :mod (l3 / lumisiin)))))
(l / lured :arg1 (t / thing :arg2-of (i / include-91 :arg1 (t2 / thing :mod (o / other))) :arg2-of (t3 / total-01)) :arg2-of (t4 / total-01))
(c / change-01 :arg0 (i / it) :arg1 (b / bit :mod (l / little)))
(e / email-address-entity :value (i / iceland) :domain (e2 / exchange-01 :arg1 (p / paper :mod (p2 / panama))))
(s / secured :arg1 (a / and :op1 (e / e.coli :arg1 (w / water)) :op2 (e2 / enterokokkipitoisuudet :arg1 (w2 / water))) :arg2 (w3 / wednesday) :time (f / fall-01 :arg1 (b / bakteeripitoisuudet :mod (r / reviewing)) :arg4 (b2 / below)))
(a / and :op1 (r / receive-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (p2 / political-party :name (n / name :op1 "N-A")))) :arg1 (r2 / rule-01)) :op2 (s / say-01 :arg0 (t / thing :arg1-of (s2 / state-01) :mod (e / explanatory)) :arg1 (h2 / have-org-role-91 :arg0 (p3 / person) :arg2 (d / director))))
(s / say-01 :arg1 (p / publish-01 :arg1 (n / novellit)) :arg2 (p2 / person :name (n2 / name :op1 "N-A")))
(m / multi-sentence :snt1 (i / invest-01 :arg0 (p / person :arg0-of (i2 / invest-01 :arg2 (c / country :name (n / name :op1 "N-A")))) :arg2 (d / dialogue-01)) :snt2 (t / tasapaksun :mod (b / bit :degree (b2 / bit :mod (l / little))) :domain (r / result-01)))
(c / continue-01 :arg1 (k / koulutusleikkaukset))
(w / woman :quant 96 :mod (o / old) :arg1-of (m / miss-01 :time (u / until :op1 (l / lahdenkylässä :time (d / date-entity :year (N / N-A))) :location (s / south))))
(h / have-org-role-91 :arg0 (t / team :mod (n / nation)) :arg1 (t2 / team :mod (n2 / nation)) :arg2 (f / floorball))
(a / and :op1 (p / play-01 :arg0 (i / i) :location (c / company :arg0-of (h / have-org-role-91 :arg1 (u / university :mod (f / floorball)) :arg2 (u2 / university)))) :op2 (p2 / passed :arg1 (j / josbassa :quant 3 :arg1-of (f2 / follow-01))))
(c / contrast-01 :arg1 (t / take-01 :arg0 (p / person :mod (y / young) :arg0-of (f / farm-01)) :arg1 (p2 / person :arg0-of (f2 / farm-01) :mod (y2 / young)) :li 25) :arg2 (b / believe-01 :arg0 (p3 / person) :arg1 (p4 / positive :domain (i / it) :beneficiary (f3 / future) :mod (a / also) :location (a2 / area :mod (r / rural)))) :li 25)
(m / multi-sentence :snt1 (s / share-01 :arg0 (p / person :arg0-of (o / observe-01) :quant (s2 / some)) :arg1 (t / thing :arg1-of (o2 / opine-01 :arg0 (p2 / person)))) :snt2 (f / file-01 :arg0 (p3 / person :arg0-of (o3 / observe-01) :quant (s3 / some)) :arg1 (c / complain-01 :arg0 (p4 / person))))
(s / say-01 :arg0 (a / and :op1 (p / person :mod (c / country :name (n / name :op1 "N-A"))) :op2 (d / democrat)) :arg1 (f / find-01 :polarity - :arg0 (a2 / and) :arg1 (t / thing :arg0-of (e / evidence-01 :arg1 (t2 / try-01 :arg0 (h / house :mod (w / white)) :arg1 (p2 / pressure-01 :arg0 (h2 / house) :arg1 (c2 / conclusions :arg0 (h3 / house) :arg1 (t3 / thing :arg1-of (c3 / conclude-01 :arg0 (o / or :op1 (s2 / set) :op2 (k / kerrontaan :mod (p3 / politics))))))))))))
(c / contrast-01 :arg1 (r / report-01 :arg1 (t / thing :polarity - :arg1-of (d / discover-01) :mod (t2 / this))) :arg2 (t3 / tell-01 :arg1 (d2 / discover-01 :arg1 (t4 / this)) :arg2 (h / headquarters)))
(s / say-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg2 (b / bam :mod (' / '')))) :arg1 (c / change-01 :arg1 (a / and :op1 (c2 / culture) :op2 (c3 / change-01 :mod (s2 / spiritual)) :op3 (c4 / change-01 :mod (p2 / physical)))))
(c / contrast-01 :arg2 (c2 / cause-01 :arg0 (t / thing :arg0-of (c3 / cause-01 :arg1 (p / possible-01 :arg1 (w / wear-01 :arg1 (g / game) :degree (b / bit))))) :mod (a / also)))
(s / start-01 :arg1 (s2 / send-01 :arg1 (f / final) :arg2 (p / part :part-of (o / ohjelmistoaan :time (a / afternoon :mod (l / last))))) :time (d / day :mod (b / both)))
(s / say-01 :arg0 (p / person :arg0-of (w / witness-01 :arg1 (e / eye))) :arg1 (s2 / shoot-02 :arg1 (p2 / person :arg0-of (h / have-org-role-91 :arg2 (d / demonstrators))) :arg1-of (c / cause-01 :arg0 (c2 / clashes :arg0 (p3 / police) :arg1 (p4 / person)))))
(a / and :op1 (q / quiet :domain (s / street :location (c / city))) :op2 (s2 / safe-01 :arg1 (s3 / street)) :op3 (c2 / clean-04))
(t / try-01 :arg0 (p / person :mod (c / country :name (n / name :op1 "N-A"))) :arg1 (r / return-01 :arg1 (p2 / person) :arg4 (s / subject)) :mod (a / again :mod (o / once)))
(u / use-01 :arg0 (i / it) :arg1 (l / lights :mod (v / verbin) :mod (o / old)) :mod (e / even))
(r / ruskeaa :arg1 (r2 / rice))
(a / and :op1 (c / call-01 :arg1 (p / person :name (n / name :op1 "N-A") :arg0-of (h / have-org-role-91 :arg2 (z / ziegelman))) :arg2 (l / luumuvaahdoksi)) :op2 (a2 / add-01 :arg0 (p2 / person) :arg1 (r / reflected :arg1 (t / trick :arg1-of (m / moderate-03)) :arg2 (n2 / name))))
(m / multi-sentence :snt1 (a / appeal-02 :arg0 (b / businessman :mod (n / newyorkilainen)) :arg2 (c / cause :arg0-of (c2 / cause-01 :arg1 (a2 / audit-01)))) :snt2 (r / refuse-01 :arg0 (p / person :time (d / date-entity :decade (N / N-A))) :arg1 (p2 / published :arg0 (p3 / person) :arg1 (r2 / returns :mod (t / tax-01))) :time (d2 / date-entity :decade (N2 / N-A))))
(a / and :op1 (b / be-located-at-91 :arg1 (m / meet-03 :arg0 (d / dropshipper) :arg1 (s / system :name (n / name :op1 (o / omahassa) :op2 (n2 / nebraska)))) :arg2 (s2 / system :name (n3 / name :op1 (o2 / omahassa))) :time (w / week :mod (l / last))) :op2 (c / challenge-01 :arg2 (m2 / meet-03 :purpose (a2 / and :op1 (m3 / meet-01 :arg1 (v / veroilmoituksia)) :op2 (e / exchange-01 :arg1 (v2 / veroilmoituksia))))))
(c / contrast-01 :arg1 (c2 / continue-01 :arg0 (c3 / company :mod (c4 / country :name (n / name :op1 "N-A"))) :arg1 (l / link-01 :arg1 (c5 / company) :arg2 (c6 / country) :arg1-of (e / exist-01))) :arg2 (r / ready-02 :arg1 (c7 / company :mod (n2 / new)) :arg2 (c8 / come-01 :arg1 (c9 / company) :arg4 (m / market))))
(r / rise-01 :arg1 (e / export-01 :arg0 (c / country :name (n / name :op1 "Russia")) :arg2 (c2 / country :name (n2 / name :op1 "Russia"))) :arg2 (r2 / rate-entity-91 :arg1 (p / percentage-entity :value (N / N-A)) :arg2 (v / volume-quantity :quant (N2 / N-A) :unit (g / gallon))))
(d / do-02 :arg0 (i / i) :arg1 (r / reputation :poss (i2 / i) :mod (g / good :degree (m / most)) :poss (i3 / i)) :location (h / here) :mod (j / just))
(g / good :degree (m / most) :domain (a / ambergris) :time (a2 / always))
(c / contrast-01 :arg2 (h / have-03 :arg0 (h2 / he) :arg1 (i / image :mod (g / good :degree (p / pretty)) :arg1-of (m / mean-01 :arg2 (c2 / category :ord (o / ordinal-entity :value 1)))) :condition (b / be-located-at-91 :arg1 (t / that) :arg2 (u / under :op1 (i2 / image :mod (g2 / generation :arg0-of (l / lehti :arg1 (m2 / menestysmalliksi))))))))
(a / and :op1 (r / raise-01 :arg0 (e / earl :name (n / name :op1 (p / phillip) :op2 (p2 / phillip) :op3 (' / '') :op4 ('2 / '') :op5 ('3 / '') :op6 ('4 / '') :op7 ('5 / ''))) :arg1 (p3 / pistoolin)) :op2 (p4 / put-01 :arg0 ('6 / '') :arg1 (p5 / pistoolin) :arg2 (c / context :poss (p6 / person :arg0-of (o / oppose-01 :arg1 (p7 / political-party :name (n2 / name :op1 "N-A"))) :arg0-of (o2 / oppose-01)))) :op3 (e2 / express-01 :arg0 ('7 / '') :arg1 (a2 / action)))
(s / succeed-01 :polarity - :arg0 (a / attempt-01 :arg1 (r / reach-01 :arg1 (p / phillipiä))))
(p / publish-01 :arg0 (c / company :name (n / name :op1 "Facebook")) :arg1 (w / website :arg0-of (s / say-01 :arg1 (p2 / possible-01 :arg1 (u / upgrade-02 :arg0 (p3 / person :arg0-of (u2 / use-01)) :arg1 (p4 / programme :arg0 (p5 / person) :arg1 (b / block-01 :arg0 (p6 / person) :arg1 (p7 / programme)) :purpose (b2 / block-01 :arg0 (p8 / person) :arg1 (a / advertisement))) :time (o / once :op1 (a2 / again :mod (o2 / once) :mod (a3 / again :mod (o3 / once))))))) :location (w2 / website)) :time (a4 / after :op1 (a5 / announce-01 :arg0 (c2 / company) :arg1 (p9 / prevent-01 :arg0 (p10 / person :arg0-of (u3 / use-01)) :arg1 (p11 / possible-01 :arg1 (u4 / upgrade-02 :arg0 (p12 / person :arg0-of (u5 / use-01)) :arg1 (p13 / programme :arg0 (p14 / person))))))))
(s / say-01 :arg0 (c / company :name (n / name :op1 "Facebook")) :arg1 (d / difficult :degree (m / more) :domain (s2 / see-01 :arg1 (t / thing :arg2-of (h / have-part-91 :arg1 (p / page :mod (p2 / page))))) :degree (m2 / more)) :medium (u / url-entity :value (t2 / tuesday)))
(a / and :op1 (b / bear-02 :arg1 (s / star :quant (m / many) :arg1-of (i / include-91 :arg2 (s2 / star))) :time (b2 / before :op1 (n / now) :quant (a2 / around :op1 (t / temporal-quantity :quant (N / N-A) :unit (y / year))))) :op2 (h / have-purpose-91 :arg1 (s3 / star) :arg2 (a3 / achieve-01 :arg1 (a4 / aikuisuuden)) :time (n2 / now)))
(r / recommend-01 :arg1 (t / thing :arg1-of (c / condition-01 :arg2 (t2 / thing :arg2-of (c2 / condition-01 :arg1 (c3 / contract :arg1-of (p / propose-01))))) :arg0-of (r2 / resign-01 :arg1 (p2 / person :arg0-of (r3 / represent-01 :arg1 (d / doctor) :mod (n / new)) :arg0-of (r4 / represent-01 :arg1 (d2 / doctor) :mod (n2 / new))))) :time (a / after :op1 (v / vote-01)))
(c / contrast-01 :arg2 (s / show-01 :arg0 (p / peculated :mod (p2 / putin) :mod (p3 / putin)) :arg1 (f / forgotten :polarity -)))
(m / multi-sentence :snt1 (w / win-01 :arg0 (p / person :mod (c / country :name (n / name :op1 "N-A"))) :time (a / after :op1 (w2 / war :name (n2 / name :op1 "N-A")) :quant (m2 / multiple :op1 3000))) :snt2 (p2 / predilecton :mode (i / interrogative) :prep-with (h / horse)))
(o / outcome :mode (i / interrogative) :domain (l / link-01 :arg1 (s / struggle-01 :arg2 (p / power))))
(s / say-01 :arg0 (t / thing :arg1-of (r / remark-01 :arg0 (p / person :name (n / name :op1 "Putin")))) :arg1 (s2 / say-01 :arg0 (p2 / person) :arg1 (c / contrast-01 :arg1 (a / ask-01 :arg0 (p3 / person) :arg1 (t2 / thing :arg2-of (p4 / position-01 :arg1 (p5 / person)) :mod (t3 / this))) :arg2 (s3 / say-01 :arg0 (p6 / person) :arg1 (p7 / possible-01 :arg1 (s4 / say-01 :arg0 (o / one) :arg1 (t4 / thing :arg2-of (p8 / position-01 :arg1 (p9 / post :mod (p10 / problematic)) :time (a2 / after :op1 (n2 / now) :quant (u / up-to :op1 (t5 / temporal-quantity :quant (N / N-A) :unit (y / year)))))) :mod (e / even)))))))
(d / disappoint-01 :arg1 (i / it) :condition (r / return-01 :arg1 (t / they) :arg4 (s / spring :mod (h / home) :poss (t2 / they))) :condition (r2 / return-01 :arg1 (t3 / they) :arg4 (s2 / spring :mod (h2 / home) :poss (t4 / they))))
(a / and :op1 (v / victim :quant 2 :mod (o / other) :location (c / car)) :op2 (i / investigate-01 :arg0 (p / police)) :op3 (i2 / include-91 :arg1 (v2 / victim) :arg2 (t / there)))
(e / explain-01 :arg0 (a / and :op1 (t / technology :mod (h / health)) :op2 (k / knappett)) :arg1 (a2 / and :op1 (t2 / technology :mod (h2 / health) :poss (n / nice-01)) :op2 (t3 / thing :arg2-of (a3 / available-02 :arg1 (p / person :arg1-of (i / include-91 :arg2 (p2 / person :arg1-of (r / release-01 :arg1-of (f / face-01 :arg0 (p3 / person :arg1-of (i2 / include-91 :arg2 (p4 / person) :arg3 (p5 / percentage-entity :value (N / N-A)))) :arg3 (m / more-than :op1 (p6 / percentage-entity :value (N2 / N-A)))) :arg1-of (f2 / face-01 :arg0 (p7 / person :arg1-of (i3 / include-91 :arg2 (p8 / person :arg1-of (r2 / release-01 :arg1-of (f3 / face-01 :arg0 (p9 / person)))))))))))))) :op3 (f4 / face-01 :arg0 (p10 / person) :arg1 (c / consequence :mod (s / severe)) :frequency (o / often)) :arg1-of (c2 / cause-01 :arg0 (a4 / and :op1 (t4 / technology :mod (h3 / health) :poss (n2 / nice-01)) :op2 (k2 / knappett))))
(h / have-purpose-91 :arg1 (o / opportunity :purpose (c / check-01 :arg1 (p / person :arg0-of (v / vote-01)))) :arg2 (p2 / person :arg0-of (v2 / vote-01)) :time (b / before :op1 (v3 / vote-01)))
(u / use-01 :arg0 (p / person :mod (c / country :name (n / name :op1 "N-A")) :mod (o / only)) :arg1 (s / station :mod (p2 / polling) :mod (c2 / country :name (n2 / name :op1 "N-A")) :mod (o2 / only)) :arg2-of (e / except-01 :arg1 (- / -rrb- :location (c3 / country))))
(a / and :op1 (s / star :mod (f / football) :arg1-of (r / resemble-01 :arg2 (a2 / and :op1 (s2 / shape :mod (f2 / face)) :op2 (e / eye)) :mod (i / indeed))) :op2 (d / dexter :arg1 (a3 / and)))
(m / multi-sentence :snt1 (s / say-01 :arg0 (i / i) :arg1 (c / cbc :mode (i2 / interrogative) :arg0 (p / person :mod (c2 / country :name (n / name :op1 "N-A"))) :arg1 (p2 / person :quant 14 :arg0-of (h / have-org-role-91 :arg1 (c3 / country :name (n2 / name :op1 "N-A")) :arg2 (t / theismann))) :arg1-of (d / direct-02) :mod (j / just))) :snt2 (' / '' :mode (i3 / interrogative)))
(a / and :op1 (r / regret-01 :arg0 (w / we) :arg1 (t / thing :arg1-of (c / comment-01) :mod (s / such)) :degree (m / much :degree (v / very))) :op2 (s2 / say-01 :arg0 (s3 / she) :arg1 (t2 / thing :arg1-of (c2 / comment-01) :mod (s4 / such))))
(a / amr-unknown :manner-of (p / protect-01))
FAILED_TO_PARSE#Two concepts in a row.
(s / say-01 :arg0 (h / he) :arg1 (a / and :op1 (p / possible-01 :arg1 (r / record :mod (r2 / record :mod (g / good)) :mod (g2 / good))) :op2 (w / win-01 :arg0 (p2 / person))))
(c / contrast-01 :arg1 (a / and :op1 (n / nice-01 :arg1 (h / he)) :op2 (n2 / natural-03 :arg1 (p / photo)) :concession (e / even-if :op1 (p2 / photo :domain (p3 / photograph-01)))) :arg2 (c2 / challenge-01 :arg2 (h2 / he)))
(k / know-02 :arg1 (p / person :arg0-of (f / fight-01) :mod (s / state) :quant (a / amr-unknown)) :arg2 (k2 / know-02 :polarity - :arg1 (p2 / person)))
(l / lie-08 :arg0 (w / woman :mod (f / finance) :mod (f2 / finance)) :arg1-of (c / cause-01 :arg0 (g / government-organization :arg0-of (g2 / govern-01) :mod (s / sánchez-led) :domain (i / it))))
(i / introduce-02 :arg0 (g / government-organization :arg0-of (a / administrate-01)) :arg1 (t / thing :arg2-of (r / recommend-01 :arg1 (c / control-01 :arg0 (c2 / control-01 :arg1 (n / nation)) :arg1 (t2 / thing :arg2-of (r2 / recommend-01 :arg1 (d / develop-02 :arg1 (i2 / infrastructure))) :quant (a2 / all) :arg1-of (i3 / include-91 :arg2 (c3 / control-01 :arg0 (c4 / control-01 :arg1 (i4 / infrastructure)))) :arg1 (t3 / thing :arg2-of (r3 / recommend-01 :arg1 (d2 / develop-02 :arg1 (i5 / infrastructure))))))) :time (n2 / now)))
FAILED_TO_PARSE#Two concepts in a row.
(l / list-01 :arg1 (p / person :arg1-of (d / die-01 :location (b / between :op1 (b2 / boy :arg2-of (i / include-91 :arg1 (b3 / boy :arg1-of (a / age-01 :arg2 (t / temporal-quantity :quant (N / N-A) :unit (y / year))))) :arg2-of (i2 / include-91 :arg1 (b4 / boy :arg2-of (i3 / include-91 :arg1 (b5 / boy :arg1-of (a2 / age-01 :arg2 (t2 / temporal-quantity :quant (N2 / N-A) :unit (y2 / year))))))) :arg2-of (i4 / include-91 :arg1 (f / family :arg1-of (a3 / age-01 :arg2 (t3 / temporal-quantity :quant (N3 / N-A) :unit (y3 / year))))) :arg2-of (i5 / include-91 :arg1 (f2 / family :arg1-of (a4 / age-01 :arg2 (t4 / temporal-quantity :quant (N4 / N-A) :unit (y4 / year))))) :arg2-of (i6 / include-91 :arg1 (f3 / family :arg1-of (h / have-org-role-91 :arg0 (b6 / boy) :arg2 (m / member)))) :arg2-of (i7 / include-91 :arg1 (f4 / family :arg1-of (h2 / have-org-role-91 :arg0 (b7 / boy) :arg2 (m2 / member)))))))))
(e / equal-01 :arg1 (a / amount :quant-of (r / resource :mod (f / fish))) :arg2 (r2 / resource :mod (r3 / reconstruct-01 :arg1 (f2 / fish))))
(h / have-03 :arg0 (h2 / he) :arg1 (t / thing :arg1-of (d / decide-01)) :time (u / until :op1 (d2 / decide-01 :arg0 (h3 / he) :arg1 (d3 / decide-01 :arg0 (h4 / he) :arg1 (s / skipping :arg0 (h5 / he) :arg1 (a / and :op1 (s2 / season :mod (s3 / senior)) :op2 (p / programme :mod (r / resource)) :poss (h6 / he)))))))
(p / possible-01 :arg1 (p2 / parazynski :arg1 (i / it)))
(a / approve-01 :arg0 (o / organization :name (n / name :op1 "senate" :op2 "republicans")) :arg1 (a2 / approve-01 :arg1 (g / garlanda)) :time (s / since :op1 (o2 / obama :arg0 (p / president) :arg1 (r / risers :poss (p2 / president)))))
(e / explain-01 :arg0 (c / court) :arg1 (e2 / essential :domain (b / business :mod (s / small) :mod (t / this)) :arg1-of (c2 / cause-01 :arg0 (p / provide-01 :arg0 (a / and :op1 (g / government-organization :arg0-of (g2 / govern-01)) :op2 (g3 / group :arg0-of (a2 / aid-01))) :arg1 (n / need-01 :polarity - :arg1 (r / rise-01 :arg1 (n2 / number :quant-of (p2 / person :arg0-of (r2 / reside-01)))))))))
(h / have-03 :arg0 (a / and :op1 (p / person :ord (o / ordinal-entity :value 1) :arg0-of (h2 / have-org-role-91 :arg2 (h3 / head-of-state))) :op2 (p2 / person :arg0-of (h4 / have-org-role-91 :arg2 (h5 / head-of-state))) :op3 (p3 / person :arg0-of (h6 / have-org-role-91 :arg2 (h7 / head-of-state))) :op4 (p4 / person :arg0-of (h8 / have-org-role-91 :arg2 (h9 / head-of-state))) :op5 (p5 / person :arg0-of (h10 / have-org-role-91 :arg2 (h11 / head-of-state))) :op6 (p6 / person :arg0-of (h12 / have-org-role-91 :arg2 (h13 / head-of-state))) :op6 (p7 / person :arg0-of (h14 / have-org-role-91 :arg2 (h15 / head-of-state))) :op7 (p8 / person :arg0-of (h16 / have-org-role-91 :arg2 (h17 / head-of-state)))) :arg1 (r / role :arg1-of (s / special-02)))
(s / say-01 :arg1 (p / possible-01 :arg1 (a / agree-01 :arg0 (s2 / she)) :condition (o / offer-01 :arg0 (s3 / she) :arg1 (s4 / stand-01 :arg1 (s5 / she) :arg2 (c / candidate :beneficiary (p2 / post))) :time (t / today))) :medium (i / interview-01 :arg1 (r / radio :mod (l / latvian)) :time (t2 / today)))
(a / argue-01 :arg0 (p / person :arg0-of (c / criticize-01)) :arg1 (c2 / consistent-01 :polarity - :arg1 (t / thing :arg1-of (d / decide-01 :arg0 (p2 / person))) :arg2 (d2 / decide-01 :arg0 (p3 / person) :arg1 (a2 / and :op1 (d3 / decide-01 :arg0 (p4 / person) :arg1 (r / rule :mod (c3 / common))) :op2 (f / fail-01 :arg1 (p5 / person) :arg2 (a3 / apply-01 :arg0 (p6 / person) :arg1 (l / life :mod (r2 / real))) :time (t2 / then))))))
(c / cause-01 :arg0 (p / possible-01 :arg1 (i / ieskaloti :arg1 (w / water :mod (w2 / waste) :time (f / facility :name (n / name :op1 "N-A") :mod (h / heavy))))) :arg1 (i2 / infer-01 :arg1 (q / quality :mod (m / male) :domain (i3 / it))))
(c / cause-01 :arg0 (t / that) :arg1 (u / understand-01 :arg0 (i / i) :arg1 (d / desire-01 :arg0 (y / you) :arg1 (c2 / change-01 :arg0 (y2 / you) :arg1 (r / rural)))))
(a / and :op1 (h / have-03 :arg0 (w / we) :arg1 (c / cup :mod (w2 / world) :quant (s / some))) :op2 (b / be-located-at-91 :arg1 (f / frame) :arg2 (f2 / frame) :mod (a2 / also)))
(c / contrast-01 :arg1 (i / it :polarity - :arg1-of (m / mean-01 :arg2 (t / thing :domain (i2 / it)))) :arg2 (w / word-01 :arg0 (j / journalist :mod (s / sports)) :arg1 (i3 / it)))
(t / tell-01 :arg1 (d / depend-01 :arg0 (e / everything) :arg1 (e2 / everything)) :arg2 (e3 / everything) :time (y / year :mod (l / last)))
(r / refer-01 :arg0 (i / image :arg1-of (l / link-01 :arg2 (g / group)) :arg1-of (l2 / link-01 :arg2 (g2 / group))) :arg1 (a / and :op1 (c / call-02 :arg0 (i2 / image)) :op2 (o / objects :arg0 (i3 / image))) :arg2 (i4 / image :arg1-of (l3 / link-01 :arg2 (g3 / group))))
(t / tell-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (p2 / person :arg0-of (h2 / have-org-role-91 :arg2 (m / minister :mod (p3 / prime)))) :arg2 (s / spokesman :mod (p4 / prime)))) :arg1 (c / compete-01 :mod (n / new) :domain (p5 / post :mod (v / vacant) :poss (s2 / service :mod (r / revenue)))) :arg2 (p6 / person :name (n2 / name :op1 "N-A")))
(a / and :op1 (t / tend-02 :polarity - :arg1 (p / population :poss (i / it)) :arg2 (a2 / and :op1 (r / rain-01) :op2 (s / snow))) :op2 (r2 / recommend-01 :arg1 (f / free-04 :polarity - :arg1 (a3 / and :op1 (c / car) :op2 (d / deluxe) :op3 (c2 / communicate-01) :op4 (c3 / communicate-01)))))
(s / say-01 :arg0 (h / he) :arg1 (a / and :op1 (p / playgrounds :arg1-of (b / broad-02) :domain (s2 / ship :prep-with (e / element :mod (v / various) :part-of (a2 / and :op1 (b2 / blackberry) :op2 (l / loud) :op3 (a3 / apartment :mod (l2 / loud))))))))
(p / possible-01 :arg1 (l / lead-03 :arg0 (e / explode-01 :mod (t / this)) :arg2 (c / cop)))
(c / contain-01 :arg0 (p / process-01 :arg1 (a / and :op1 (m / meat) :op2 (e / egg))) :arg1 (a2 / and :op1 (i / iron :arg1-of (e2 / exist-01)) :op2 (m2 / mineral :mod (o / other)) :arg1-of (e3 / easy-05 :degree (m3 / more)) :mod (o2 / other)))
FAILED_TO_PARSE#Two concepts in a row.
(s / state-01 :arg0 (r / report) :arg1 (s2 / state-01 :arg0 (a / and :op1 (t / thing :arg1-of (r2 / report-01)) :op2 (t2 / thing :arg1-of (s3 / state-01)) :op3 (r3 / report-01 :arg0 (a2 / and :op1 (t3 / thing :arg1-of (s4 / state-01)) :op2 (t4 / thing :arg1-of (s5 / state-01))) :ord (o / ordinal-entity :value 1) :arg1-of (i / include-91 :arg2 (t5 / thing :quant 2015 :arg1-of (i2 / include-91 :arg2 (t6 / thing :quant 2015 :arg1-of (i3 / include-91 :arg2 (t7 / thing :quant 2015 :arg1-of (s6 / state-01 :arg0 (a3 / and :op1 (r4 / releases :mod (p / press)) :op2 (t8 / thing :arg1-of (s7 / state-01)) :op3 (r5 / report-01 :arg0 (p2 / press))))))))))) :ord (o2 / ordinal-entity :value 1))))
(p / publish-01 :arg0 (d / democrat :mod (i / intelligence) :mod (i2 / intelligence)) :arg1 (r / report-01 :arg0 (p2 / political-party :name (n / name :op1 "N-A"))) :arg0-of (a / agree-01 :arg1 (t / thing :arg1-of (r2 / report-01 :arg0 (f / force :mod (t2 / task))) :quant (s / some))))
(c / contrast-01 :arg2 (k / know-01 :arg0 (s / she) :arg1 (r / result-01 :arg1 (g / game :mod (o / olympic) :mod (c2 / country :name (n / name :op1 "N-A"))) :arg2 (p / product-of :op1 4 :op2 0 :domain (g2 / game :mod (o2 / olympic) :mod (c3 / country :name (n2 / name :op1 "N-A"))) :arg0-of (g3 / give-01 :arg1 (g4 / group :poss (t / they)) :arg2 (g5 / group :poss (t2 / they)) :time (a / after :op1 (w / win-01 :arg0 (w2 / win-01 :arg0 (c4 / country) :arg2 (c5 / country)) :arg2 (c6 / country))))))))
(s / say-01 :arg1 (t / this) :arg2 (g / guy) :time (e / early) :ord (o / ordinal-entity :value 1 :range (o2 / ordinal-entity :value 1)) :arg0-of (c / cause-01 :arg1 (b / break-up-08 :arg1 (g2 / guy) :arg3 (g3 / game :quant 3 :mod (e2 / each)))))
(c / contrast-01 :arg1 (' / '' :arg0 (p / paper :name (n / name :op1 (k / kou) :op2 ('2 / ''))) :arg1 (r / risk-01 :arg2 (d / describe-01 :arg1 (c2 / cuisine :mod (c3 / country :name (n2 / name :op1 "America"))) :arg2 (c4 / country)))) :arg2 ('3 / ' :arg0 (p2 / paper :name (n3 / name :op1 (z / ziegelmane) :op2 (z2 / ziegelmane)) :mod (z3 / ziegelmane)) :arg1 (l / life) :path (u / under :op1 (e / east :part-of (m / manhattan)))))
(w / walls :arg0 (a / and :op1 (p / person :arg0-of (h / have-org-role-91 :arg2 (d / demonstrators))) :op2 (p2 / person :arg0-of (h2 / have-org-role-91 :arg2 (h3 / head-of-state))) :quant (s / some)) :arg2 (m / message :prep-against (m2 / message :prep-against (p3 / person :arg0-of (h4 / have-org-role-91 :arg2 (p4 / president :mod (i / interim)))))))
(b / begin-01 :arg1 (r / replace-01 :arg1 (a / and :op1 (p / person :arg0-of (s / specialize-01)) :op2 (p2 / person :arg0-of (s2 / specialize-01)) :op3 (p3 / person :arg0-of (s3 / specialize-01)) :op4 (p4 / person :arg0-of (s4 / specialize-01))) :arg2 (p5 / person :arg0-of (s5 / specialize-01))))
(c / cause-01 :arg0 (h / have-03 :arg0 (t / treaty) :arg1 (m / multiple :op1 (t2 / temporal-quantity :quant (N / N-A) :unit (m2 / month)))) :arg1 (c2 / cause-01 :arg1 (b / be-located-at-91 :arg1 (t3 / treaty) :arg2 (f / force-04))))
(r / reduce-01 :arg0 (g / government-organization :arg0-of (g2 / govern-01 :arg1 (f / federal))) :arg1 (f2 / fund-01 :arg0 (g3 / government-organization) :arg1 (r2 / rate-entity-91 :arg1 30 :arg2 (t / temporal-quantity :quant (N / N-A) :unit (m / month)))) :arg1-of (m2 / mean-01 :arg2 (n / need-01 :arg0 (g4 / government-organization :arg0-of (g5 / govern-01 :arg1 (f3 / federal))) :arg1 (a / address-02 :arg0 (g6 / government-organization) :arg1 (p / problem :arg1-of (a2 / address-02 :arg0 (p2 / population)) :arg1-of (a3 / address-02 :arg0 (p3 / population))) :manner (a4 / assist-01 :polarity - :arg1 (g7 / government-organization))))) :li 2017)
(p / possible-01 :polarity - :arg1 (s / succeed-01 :arg0 (a / attempt-01 :arg1 (c / contact-01))))
(s / start-01 :arg0 (i / i) :arg1 (s2 / sports :arg0 (i2 / i)))
(s / so :time (m / middle :op1 (n / night)))
(a / attack-01 :arg0 (m / magazine :name (n / name :op1 "N-A")) :arg1 (p / person :quant 2 :arg0-of (h / have-rel-role-91 :arg1 (p2 / park) :arg2 (c / child))) :manner (s / sexual))
(c / contrast-01 :arg1 (p / plan-01 :arg0 (f / family) :arg1 (g / go-02 :arg0 (f2 / family) :arg4 (f3 / festivals :arg1 (m / music) :location (b / belgium)))) :arg2 (p2 / possible-01 :polarity - :arg1 (c2 / calculated :arg1 (c3 / customer) :location (r / reservation :arg1-of (m2 / mean-01 :arg2 (a / and :op1 (p3 / possible-01 :arg1 (c4 / consult-01 :arg0 (c5 / customer) :arg1 (c6 / customer)) :time (n / no-longer)) :op2 (p4 / purchase-01 :arg1 (t / ticket) :arg3 (m3 / monetary-quantity :quant 204 :unit (e / euro)))))))))
(y / you :mod (e / either))
(c / ceremony :mod (r / room) :location (n / nybc))
(a / and :op1 (h / have-03 :arg0 (h2 / he) :arg1 (s / stone :mod (r / rolling) :mod (' / '')) :time (a2 / ask-01 :arg1 (r2 / relation-03))) :op2 (r3 / reply-01 :arg0 (h3 / he) :arg1 (g / good :domain (t / they) :degree (r4 / really))) :time (a3 / ask-01 :arg1 (r5 / relation-03)))
(a / and :op1 (p / pressure-01 :arg1 (c / company :mod (e / energy)) :arg1-of (c2 / cause-01 :arg0 (f / fall-01 :arg1 (p2 / price-01 :arg1 (o / oil))))) :op2 (c3 / compounded :arg0 (d / decide-01 :arg0 (c4 / country :name (n / name :op1 "N-A")) :arg1 (l / leave-15 :arg0 (c5 / country) :arg1 (u / union-02 :arg1 (c6 / continent :name (n2 / name :op1 "N-A"))))) :arg1 (s / situation)))
(d / demand-01 :arg0 (d2 / doctor :mod (n / new)) :arg1 (d3 / demand-01 :arg0 (p / person :arg0-of (r / represent-01 :arg1 (u / union :poss (p2 / person)))) :arg1 (p3 / protest-01 :arg0 (u2 / union)) :purpose (l / launch-01 :arg0 (u3 / union) :arg1 (p4 / protest-01) :manner (d4 / dispute-01 :arg2 (c / contract :mod (n2 / new))))))
(c / contrast-01 :arg2 (m / meet-03 :arg0 (m2 / meet-03 :time (d / date-entity :year (N / N-A))) :mod (m3 / main) :purpose (f / forget-01 :arg0 (m4 / meet-03) :arg1 (p / past))))
(a / anger-01 :arg0 (r / respond-01 :arg1 (c / coup :arg1-of (a2 / attempt-01)) :arg1-of (w / weak-02)) :arg1 (l / location :name (n / name :op1 "ankara")) :location (w2 / west))
(a / announce-01 :arg0 (p / person :quant 2 :arg0-of (h / have-org-role-91 :arg2 (p2 / president))) :arg1 (d / discuss-01 :polarity - :arg0 (p3 / person) :arg1 (i / issue-02)) :condition (w / want-01 :arg0 (y / you) :arg1 (d2 / disclose :arg0 (y2 / you) :arg1 (a2 / and :op1 (w2 / want-01 :arg0 (y3 / you) :arg1 (d3 / disclose :arg0 (y4 / you) :arg1 (i2 / information)) :degree (t / total)) :op2 (w3 / want-01 :arg0 (y5 / you) :arg1 (d4 / disclose :arg0 (y6 / you) :arg1 (i3 / information)))))) :time (a3 / after :op1 (t2 / temporal-quantity :quant (N / N-A) :unit (h2 / hour))))
(a / and :op1 (r / represent-01 :arg0 (h / he) :arg1 (h2 / he) :arg1-of (r2 / reasonable-02)) :op2 (a2 / attract-01 :arg0 (h3 / he) :arg1 (f / fan :mod (t / type :mod (t2 / this))) :duration (t3 / temporal-quantity :quant (N / N-A) :unit (y / year))))
(e / expect-01 :arg1 (c / complete-01 :arg1 (p / project :mod (m / monetary-quantity :quant 1.35 :unit (d / dollar :mod (r / renminbi)))) :time (n / now) :arg1-of (c2 / cause-01 :arg0 (p2 / possible-01 :arg1 (c3 / complete-01 :arg1 (p3 / project))))))
(p / postponed :domain (w / we) :purpose (c / connect :arg0 (w2 / we) :arg1 (p2 / part :part-of (o / or :op1 (l / land) :op2 (v / viaduktu)) :location (n / north))) :arg1-of (f / follow-01 :arg2 (p3 / path :poss (p4 / phase :mod (l2 / last) :poss (i / installation)))))
(c / cause-01 :arg0 (h / have-03 :arg0 (p / person :mod (c2 / country :name (n / name :op1 "N-A"))) :arg1 (r / rate-entity-91 :arg1 222 :arg2 (t / temporal-quantity :quant (N / N-A) :unit (y / year)))) :arg1 (a / and :op1 (h2 / have-frequency-91 :arg2 (a2 / approximately :op1 (m / mass-quantity :quant (N2 / N-A) :unit (k / kilogram)))) :op2 (j / j?pavelk :arg1 (b / bed :quant (a3 / around :op1 6,000)))))
(o / obligate-01)
(p / plan-01 :arg0 (d / doctor :mod (y / young)) :arg1 (d2 / deploy-01 :arg0 (d3 / doctor) :arg1 (s / strike-01 :quant (m / more))) :time (a / after :op1 (e / expel-01 :arg0 (d4 / doctor) :arg1 (t / thing :arg1-of (o / offer-01)))))
(c / confront-01 :arg0 (a / attempt-01 :arg1 (r / resolve-01 :arg1 (p / problem :topic (n / negotiate-01)))) :arg1 (a2 / and :op1 (e / engage-01 :arg0 (g / government-organization :arg0-of (g2 / govern-01)) :arg2 (u / unwillingness :poss (g3 / government-organization))) :op2 (c2 / complete-01 :arg0 (g4 / government-organization) :arg1 (a3 / amusement-park :name (n2 / name :op1 "N-A") :arg1-of (c3 / complete-02)) :frequency (s / sometimes))))
(p / promote-02 :arg0 (c / culture :mod (c2 / correctness :mod (p2 / politics))) :arg1 (d / defraud-01) :time (e / elect-01 :location (c3 / community :mod (r / religious-group :name (n / name :op1 "N-A")))))
(f / find-02 :arg0 (c / court) :arg1 (s / say-01 :arg0 (c2 / court) :arg1 (a / and :op1 (' / '' :arg0 (a2 / and :op1 (c3 / community :mod (r / religious-group :name (n / name :op1 "N-A"))) :op2 (e / envision-01 :mod (r2 / religious)) :poss (w / we)) :arg1 (a3 / and :op1 (c4 / community :mod (r3 / religious-group :name (n2 / name :op1 "N-A"))) :op2 (e2 / envision-01 :mod (r4 / religious)) :poss (w2 / we))) :op2 (a4 / accuse-01 :arg0 (a5 / and) :arg1 (a6 / and) :arg2 (a7 / and :op1 (r5 / racism) :op2 (i / islamophobia))))))
(a / and :op1 (b / ban-01 :arg0 (b2 / ban-01 :arg1 (p / person :arg0-of (c / campaign-01 :mod (p2 / politics)))) :arg1 (v / vote-01 :arg0 (a2 / and :op1 (p3 / person :arg0-of (c2 / campaign-01 :mod (p4 / politics))) :op2 (p5 / person :arg0-of (h / have-org-role-91 :arg2 (a3 / activist)))) :arg1 (v2 / vote-01))) :op2 (v3 / vote-01 :arg0 (p6 / person) :arg1 (v4 / vote-01 :arg0 (p7 / person) :arg1 (m / mail))))
(s / surprise-01 :arg1 (p / person :quant 1 :arg0-of (u / use-01)) :arg2 (s2 / surprise-01))
(a / and :op1 (i / inflicts :arg1 (a2 / and :op1 (p / pressure-01 :arg1 (w / weapon)) :op2 (t / take-01 :arg1 (b / bow) :arg3 (a3 / against :op1 (i2 / i)))) :time (t2 / time :arg1-of (s / same-01))) :op2 (a4 / and :op1 (h / hand :part-of (i3 / i)) :op2 (h2 / hand :part-of (i4 / i)) :domain (a5 / and :op1 (h3 / hand :part-of (i5 / i)) :op2 (h4 / hand :part-of (h5 / he)))) :op3 (g / go :arg0 (h6 / he) :arg1 (h7 / he) :degree (f / further)))
(s / say-01 :arg0 (p / person :name (n / name :op1 "N-A")) :arg1 (a / and :op1 (k / k?vu?ies :arg0 (t / they) :arg1 (s2 / street) :arg1-of (r / regular-02)) :op2 (c / call-01 :arg1 (t2 / they) :arg2 (p2 / police) :manner (c2 / constant))))
(p / possible-01 :polarity - :arg1 (r / rectify-01 :arg1 (m / morning :mod (t / this))))
(s / say-01 :arg0 (s2 / she) :arg1 (a / and :op1 (w / warn-01 :arg0 (s3 / she) :arg2 (p / person :arg0-of (b / believe-01 :arg1 (p2 / possible-01 :arg1 (b2 / behave :arg0 (t / they) :arg1-of (w2 / want-01 :arg0 (t2 / they))))))) :op2 (c / consequence :polarity - :time (t3 / then))) :manner (l / likewise))
(t / task :mod (m / main) :poss (c / company) :domain (c2 / continue-01 :arg1 (i / increase-01 :arg1 (a / and :op1 (t2 / turnover) :op2 (p / profit-01) :mod (b / both)))) :time (y / year :mod (t3 / this)) :mod (a2 / also))
(m / multi-sentence :snt1 (b / bullshit-01 :mode (i / interrogative)) :snt2 (u / uzkars :mode (i2 / interrogative)))
(m / multi-sentence :snt1 (c / contrast-01 :arg1 (p / proclaimed :arg0 (s / state :mod (l / latvian)) :arg1 (z / zemgals)) :arg2 (d / describe-01 :arg0 (p2 / person :arg0-of (h / have-org-role-91 :arg2 (p3 / president :mod (v / vice)))) :arg1 (p4 / person :arg0-of (h2 / have-org-role-91 :arg2 (p5 / president :ord (o / ordinal-entity :value 1) :arg0-of (h3 / have-org-role-91 :arg2 (p6 / president))))) :arg2 (p7 / person :arg0-of (h4 / have-org-role-91 :arg2 (p8 / president :ord (o2 / ordinal-entity :value 1) :arg0-of (h5 / have-org-role-91 :arg2 (p9 / president))))) :degree (w / wide))) :snt2 (a / and :op1 (a2 / akstes :arg0 (p10 / person :arg0-of (h6 / have-org-role-91 :arg2 (p11 / president :mod (v2 / vice)))) :arg1 (p12 / person :arg0-of (h7 / have-org-role-91 :arg2 (p13 / president :mod (v3 / vice)))))))
(m / multi-sentence :snt1 (p / presidency :arg0 (p2 / person :arg0-of (h / have-org-role-91 :arg2 (p3 / president :mod (v / vice)))) :arg1 (p4 / person :arg0-of (h2 / have-org-role-91 :arg2 (p5 / president :mod (v2 / vice)))) :arg3 (s / score-entity :op1 1927 :op2 1930) :time (u / until :op1 (e / end-01 :arg1 (y / year))) :mod (a / also)) :snt2 (a2 / and :op1 (m2 / mean-02 :arg0 (p6 / person :arg0-of (h3 / have-org-role-91 :arg1 (c / country :name (n / name :op1 "N-A")))) :arg1 (r / recognition :mod (f / full))) :op2 (i / include-01 :arg1 (a3 / and :op1 (r2 / recognition :mod (f2 / full)) :op2 (i2 / include-01 :arg1 (n2 / nation :mod (n3 / nation :mod (d / democracy)) :location (c2 / country :name (n4 / name :op1 "N-A"))))) :arg2 (r3 / recognition :mod (f3 / full)))))
(h / have-concession-91 :arg1 (p / pass-07 :arg1 (h2 / he) :arg2 (t / thing :quant 1939)) :arg2 (p2 / pass-07 :arg1 (h3 / he) :arg2 (a / away)))
(h / highlight-01 :arg0 (p / protagonists :arg1 (f / film)) :arg1 (i / issue-02 :arg0 (f2 / film :mode (i2 / interrogative) :arg0 (p2 / person :arg0-of (h2 / have-rel-role-91 :arg1 (p3 / person :arg0-of (h3 / have-rel-role-91 :arg1 (p4 / person :arg0-of (h4 / have-rel-role-91 :arg1 (p5 / person :arg0-of (h5 / have-rel-role-91 :arg1 (p6 / person :arg0-of (h6 / have-rel-role-91 :arg1 (p7 / person :arg0-of (h7 / have-rel-role-91 :arg1 (p8 / person :arg0-of (h8 / have-rel-role-91 :arg1 (p9 / person :arg0-of (h9 / have-rel-role-91 :arg1 (p10 / person :arg0-of (h10 / have-rel-role-91 :arg1 (p11 / person :arg0-of (h11 / have-rel-role-91 :arg1 (p12 / person :arg0-of (h12 / have-rel-role-91 :arg1 (p13 / person :arg0-of (h13 / have-rel-role-91 :arg1 (p14 / person :arg0-of (h14 / have-rel-role-91 :arg1 (p15 / person :arg0-of (h15 / have-rel-role-91 :arg1 (p16 / person :arg0-of (h16 / have-rel-role-91 :arg1 (p17 / person :arg0-of (h17 / have-rel-role-91 :arg1 (p18 / person :arg0-of (h18 / have-rel-role-91 :arg1 (p19 / person :arg0-of (h19 / have-rel-role-91 :arg1 (p20 / person :arg0-of (h20 / have-rel-role-91 :arg1 (p21 / person :arg0-of (h21 / have-rel-role-91 :arg1 (p22 / person :arg0-of (h22 / have-rel-role-91 :arg1 (p23 / person :arg0-of (h23 / have-rel-role-91 :arg1 (p24 / person :arg0-of (h24 / have-rel-role-91 :arg1 (p25 / person :arg0-of (h25 / have-rel-role-91 :arg1 (p26 / person :arg0-of (h26 / have-rel-role-91 :arg1 (p27 / person :arg0-of (h27 / have-rel-role-91 :arg1 (p28 / person :arg0-of (h28 / have-rel-role-91 :arg1 (p29 / person :arg0-of (h29 / have-rel-role-91 :arg1 (p30 / person) :arg2 (p31 / parent))) :arg2 (p32 / parent))) :arg2 (p33 / parent))) :arg2 (p34 / parents))))))))))))))))))))))))))))))))))))))))))))))))))))))
(m / menbi?u :arg0 (s / state :mod (r / religious-group :name (n / name :op1 "N-A"))) :arg1 (o / over :op1 2014))
(a / and :op1 (r / reviewing :domain (h / he :accompanier (p / person :arg0-of (r2 / research-01) :mod (o / other) :location (u / university :arg1-of (f / free-04)) :mod (o2 / other))) :time (c / current)) :op2 (m / manage-02 :arg0 (h2 / he) :arg1 (a2 / approve-01 :arg0 (t / they) :arg1 (c2 / case :quant 260 :mod (o3 / only))) :time (s / so-far)))
(p / pone :arg0 (p2 / person :arg0-of (h / have-org-role-91 :arg1 (c / committee :mod (e / executive) :part-of (l / lok)) :arg2 (m / member))) :arg1 (b / blame-01 :arg1 (p3 / person) :arg2 (s / sport :mod (o / olympic) :arg1-of (o2 / organize-01) :arg1-of (o3 / organize-01))) :arg2 (p4 / person :arg0-of (h2 / have-org-role-91 :arg1 (c2 / committee :mod (e2 / executive) :part-of (l2 / lok)) :arg2 (m2 / member))) :arg1-of (s2 / strong-02))
(a / and :op1 (t / take-01 :arg0 (f / festival) :arg1 (p / place :name (n / name :op1 (s / sus?jas)))) :op2 (n2 / neeksist?jo?a :arg0 (a2 / and :op1 (p2 / person :arg0-of (h / have-org-role-91 :arg2 (h2 / head-of-state) :time (f2 / former))) :op2 (p3 / person :arg0-of (h3 / have-org-role-91 :arg2 (h4 / head-of-state) :time (f3 / former))) :op3 (p4 / person :arg0-of (h5 / have-org-role-91 :arg2 (h6 / head-of-state) :time (f4 / former))) :op4 (p5 / person :arg0-of (h7 / have-org-role-91 :arg2 (h8 / head-of-state) :time (f5 / former))) :op5 (e / et-cetera))))
(f / fin?lbrauciens :location (o / on :op1 (r / river)) :mod (d / decisive))
(b / block-01 :arg0 (p / party :mod (o / organization :name (n / name :op1 "senate" :op2 "republican"))) :arg1 (a / approve-01 :mod (g / garlanda)) :time (s / since :op1 (n2 / nominate-01 :arg0 (p2 / person :arg0-of (h / have-org-role-91 :arg2 (p3 / president))) :arg1 (h2 / he))))
(s / say-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg2 (a / authority))) :arg1 (a2 / and :op1 (d / demolished :arg0 (c / country) :arg1 (c2 / country)) :op2 (o / offer-01 :arg0 (c3 / country) :arg1 (a3 / and :op1 (c4 / cut-off-04 :arg0 (p2 / person) :arg1 (g / good :arg1-of (c5 / cost-01 :arg2 (m / monetary-quantity :quant 50 :unit (c6 / cent))))) :op2 (o2 / offer-01 :arg0 (p3 / person) :arg1 (c7 / cut-off-04 :arg0 (p4 / person) :arg1 (r / rate-entity-91 :arg1 (m2 / monetary-quantity :quant 50 :unit (c8 / cent)) :arg2 (v / volume-quantity :quant (N / N-A) :unit (g2 / gallon)))) :op3 (s2 / simply :arg1 (t / tea) :arg2 (r2 / restaurant :name (n / name :op1 (p5 / pa?izveidotos)) :mod (e / euro) :quant (s3 / some))))))) :time (h2 / hear-01 :arg0 (a4 / authority) :arg1 (t2 / this) :time (w / week :mod (t3 / this)) :location (t4 / thing :arg1-of (s4 / say-01 :arg0 (a5 / authority)))))
FAILED_TO_PARSE#Two concepts in a row.
(m / multi-sentence :snt1 (e / expose-01 :arg1 (s / site :quant 1 :arg1-of (i / include-91 :arg2 (s2 / site :poss (p / person :arg0-of (h / have-rel-role-91 :arg2 (k / kid :mod (b / book))))))) :arg2 (r / risk-01 :arg2 (d / demolition))) :snt2 (a / and :op1 (p2 / person :arg0-of (h2 / have-rel-role-91 :arg1 (p3 / person :mod (c / country :name (n / name :op1 "N-A"))) :arg2 (k2 / kid))) :op2 (p4 / person :arg0-of (h3 / have-rel-role-91 :arg1 (p5 / person) :arg2 (k3 / kid))) :op3 (p6 / person :arg0-of (h4 / have-rel-role-91 :arg1 (p7 / person) :arg2 (k4 / kid))) :op4 (p8 / person :arg0-of (h5 / have-rel-role-91 :arg1 (p9 / person) :arg2 (k5 / kid))) :op5 (p10 / person :arg0-of (h6 / have-rel-role-91 :arg1 (p11 / person) :arg2 (k6 / kid))) :op6 (p12 / person :arg0-of (h7 / have-rel-role-91 :arg1 (p13 / person) :arg2 (k7 / kid))) :op6 (p14 / person :arg0-of (h8 / have-rel-role-91 :arg1 (p15 / person) :arg2 (k8 / kid))) :op7 (a2 / advise-01 :arg0 (p16 / person) :arg1 (i2 / issue-02 :arg0 (m2 / minor :mod (v / vulnerable))))))
(c / contrast-01 :arg1 (p / pain-01 :arg1 (d / defeat-01)) :arg2 (a / amaze-01 :arg1 (g / grow-01)))
(s / start-01 :arg0 (p / person :mod (c / country :name (n / name :op1 "N-A"))) :arg1 (m / match-03) :prep-against (t / technique :mod (f / force :mod (c2 / country :name (n2 / name :op1 "N-A"))) :purpose (f2 / fun)))
(r / result-01 :arg1 (a / and :op1 (p / person :quant 12) :op2 (t / team :mod (c / country :name (n / name :op1 "N-A")))) :arg2 (g / go-06 :polarity - :arg0 (t2 / team :mod (c2 / country :name (n2 / name :op1 "N-A"))) :mod (e / even) :mod (e2 / even)))
(c / contrast-01 :arg1 (p / possible-01 :arg1 (b / begin-01 :arg0 (p2 / person :mod (c2 / country :name (n / name :op1 "N-A"))) :arg1 (c3 / celebrate-02 :arg0 (p3 / person)))) :arg2 (p4 / person :mod (c4 / country :name (n2 / name :op1 "N-A")) :time (a / after :op1 (l / lose-02 :arg0 (p5 / person) :arg1 (c5 / capable-01 :arg1 (p6 / person) :arg2 (s / sit-down-02 :arg1 (p7 / person)) :mod (j / just))))))
(a / and :op1 (c / confirm-01 :arg0 (t / this) :arg1 (m / mean-01 :arg1 (i / it) :arg2 (m2 / much :degree (s / so)) :beneficiary (w / we)) :mod (o / only)) :op2 (w2 / work-01 :arg0 (a2 / and :op1 (i2 / i) :op2 (r / robin) :op3 (r2 / robin))))
(s / say-01 :arg0 (s2 / she) :arg1 (f / feel-01 :arg0 (s3 / she) :arg1 (i / it) :arg1-of (r / reasonable-02)))
FAILED_TO_PARSE#Two concepts in a row.
(s / site :location (r / riga) :mod (a / also))
(t / time :quant 1 :mod (a / another) :time-of (w / work-01 :arg0 (p / person :arg0-of (l / lead-02 :arg1 (y / you)))))
(c / contrast-01 :arg1 (p / possible-01 :arg1 (t / try-01 :arg0 (y / you) :arg1 (h / haraldu :arg0 (y2 / you) :arg1 (r / reg?u :mod (r2 / reg?u))))) :arg2 (w / win-01 :arg0 (y3 / you) :arg1 (g / good :degree (m / more) :compared-to (v / version :mod (t2 / this))) :arg1-of (c2 / contrast-01 :arg2 (s / show-01 :arg0 (y4 / you) :arg1 (g2 / good :degree (m2 / more) :compared-to (v2 / version :mod (t3 / this))) :arg1-of (c3 / contrast-01 :arg2 (s2 / show-01 :arg0 (v3 / version) :arg1 (s3 / stage :mod (g3 / good :degree (m3 / more) :compared-to (v4 / version :mod (t4 / this))))))))))
(c / contrast-01 :arg1 (s / safe-01 :arg1 (i / island :name (n / name :op1 "N-A")) :degree (e / enough)) :arg2 (o / obligate-01 :arg2 (l / lose-03 :polarity - :arg0 (v / vigilance) :location (h / here) :mod (t / too))))
(a / and :op1 (e / exciting :degree (s / so) :topic (b / building :mod (t / this)) :topic (b2 / building :mod (t2 / this))) :op2 (a2 / assesses :arg0 (o / opera :mod (' / '')) :arg1 (a3 / and :op1 ('2 / '' :mod (o2 / opera)) :op2 ('3 / '' :name (n / name :op1 (o3 / opera))) :op3 (p / person :arg0-of (d / drive-01 :arg1 (m / muzik?lais))) :op4 (p2 / person :arg0-of (d2 / drive-01 :arg1 (m2 / muzik?lais))) :op5 (p3 / person :arg0-of (d3 / drive-01 :arg1 (m3 / muzik?lais))) :op6 (p4 / person :arg0-of (d4 / drive-01 :arg1 (m4 / muzik?lais))) :op7 (p5 / person :arg0-of (d5 / drive-01 :arg1 (m5 / muzik?lais))) :op7 (p6 / person :arg0-of (d6 / drive-01 :arg1 (m6 / muzik?lais))))))
(a / and :op1 (a2 / acknowledge-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (p2 / person :name (n / name :op1 "N-A") :arg0-of (h2 / have-org-role-91 :arg2 (d / director :mod (v / vice)))) :arg2 (d2 / director :mod (v2 / vice)))) :arg1 (c / create-01 :arg0 (a3 / and :op1 (p3 / person :arg0-of (h3 / have-org-role-91 :arg2 (a4 / authority :arg1-of (l / local-02)))) :op2 (p4 / person :arg0-of (h4 / have-org-role-91 :arg2 (g / general)))) :arg1 (d3 / deal :mod (g2 / good)))) :op2 (c2 / contrast-01 :arg1 (w / welcome-01 :arg0 (a5 / authority :arg1-of (l2 / local-02)) :arg1 (i / idea :mod (t / this))) :arg2 (a6 / agree-01 :arg0 (a7 / authority :arg1-of (l3 / local-02)) :arg1 (t2 / thing :arg1-of (s / suggest-01)))))
(c / contrast-01 :arg1 (p / possible-01 :arg1 (h / help-01 :arg0 (c2 / combination :mod (p2 / product :mod (d / diet))) :arg1 (r / reduce-01 :arg0 (p3 / product) :arg1 (w / weight :mod (b / blood))))) :arg2 (d2 / determined-02 :arg0 (p4 / product) :arg1 (p5 / promote-02 :arg0 (p6 / product) :arg1 (p7 / process-01 :arg1 (b2 / bodily) :mod (a / altogether))) :mod (a2 / also)))
(f / fat :prep-with (f2 / food :mod (r / rich :arg1-of (p / protein))))
(s / show-01 :arg0 (r / report) :arg1 (a / and :op1 (t / thing :arg1-of (r2 / report-01)) :op2 (t2 / thing :arg1-of (s2 / state-01)) :op3 (r3 / report-01 :arg0 (a2 / and :op1 (t3 / thing :arg1-of (s3 / state-01)) :op2 (t4 / thing :arg1-of (s4 / state-01)) :op3 (r4 / report-01 :arg0 (a3 / and :op1 (t5 / thing :arg1-of (s5 / state-01)) :op2 (t6 / thing :arg1-of (s6 / state-01))) :ord (o / ordinal-entity :value 1))) :arg1 (i / image :mod (p / positive) :arg1-of (s7 / significant-02)) :mod (a4 / actual))))
(b / bad-07 :arg1 (s / surprise-01) :degree (s2 / so :polarity -) :arg0-of (s3 / surprise-01))
(m / multi-sentence :snt1 (w / write-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (c / country :name (n / name :op1 "N-A")) :arg3 (w2 / write-01 :arg0 (p2 / person)))) :arg1 (c2 / cost-01 :arg1 (o / or :op1 (m2 / monetary-quantity :arg1-of (t / tax-01)) :op2 (t2 / thing :arg1-of (t3 / tax-01))) :arg2 (o2 / or :op1 (t4 / thing :arg1-of (t5 / tax-01)) :op2 (t6 / thing :arg1-of (t7 / tax-01))) :mod (l / little :degree (v / very))) :op2 (p3 / pay-01 :polarity - :arg0 (p4 / person) :arg3 (c3 / column :mod (b / business) :mod (n2 / new))) :op3 (p5 / pay-01 :arg0 (p6 / person) :arg3 (c4 / column :mod (b2 / business) :mod (n3 / new))) :op4 (r / report-01 :arg0 (p7 / person) :arg1 (c5 / change-01 :arg1 (n4 / nothing) :time (t8 / today)))) :snt2 (c6 / change-01 :arg1 (n5 / nothing) :time (t9 / today)))
(d / demand-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg2 (d2 / director))) :arg1 (e / explain-01 :arg0 (s / staff :location (h2 / hotel))))
(r / resonance :arg1 (e / event :mod (t / this)) :arg1-of (b / broad-02 :degree (r2 / rather)) :location (i / internet) :arg1-of (c / cause-01 :arg0 (c2 / call-02 :arg0 (p / person) :arg1 (i2 / internet))))
(u / use-01 :arg0 (p / police) :arg1 (a / and :op1 (c / cat :mod (r / rubber)) :op2 (g / gas)) :arg2 (p2 / person :arg0-of (s / study-01)))
(g / graffiti :arg0 (p / person :quant (s / some) :arg1-of (i / include-91 :arg2 (p2 / person :arg0-of (h / have-org-role-91 :arg2 (d / demonstrators))))) :arg1 (w / wall) :arg2 (m / message :prep-against (m2 / message :prep-against (p3 / person :arg0-of (h2 / have-org-role-91 :arg2 (p4 / president :mod (i2 / interim)))))))
(m / manage-02 :arg0 (t / they) :arg1 (i / it) :time (m2 / minute :mod (l / last)))
(c / contrast-01 :arg1 (f / fight-01 :arg2 (d / drone) :mod (o / only) :time (d2 / day :mod (t / that))) :arg2 (n / news :polarity - :mod (g / good :degree (o2 / only :polarity -) :beneficiary (c2 / country :name (n2 / name :op1 "N-A")) :domain (t2 / they))))
(h / hope-01 :arg0 (d / delegation :mod (c / country :name (n / name :op1 "N-A"))) :arg1 (a / and :op1 (t / team :mod (c2 / country :name (n2 / name :op1 "N-A")) :mod (c3 / cycling)) :op2 (t2 / team :mod (c4 / cycling) :mod (c5 / country))) :time (m / middle))
(n / news :arg1 (n2 / news :arg1-of (b / become-01 :arg2 (t / tradition) :mod (a / also) :arg1-of (p / possible-01) :mod (a2 / also)) :arg0-of (g / go-06 :arg1 (a3 / and :op1 (t2 / tractors) :op2 (m / motorcycles)))))
(a / and :op2 (c / come-01 :arg1 (s / stage :mod (w / wet)) :arg4 (b / beings) :mod (a2 / also)))
(a / and :op1 (e / excellent-02 :arg1 (t / team :arg1-of (e2 / excellent-02) :arg0-of (l / lead-03 :arg2 (m / monetary-quantity :quant 11 :unit (d / dollar :mod (r / renminbi)) :arg1-of (v / value-01 :arg2 (m2 / monetary-quantity :quant 11 :unit (p / pound))) :arg1-of (v2 / value-01 :arg2 (m3 / monetary-quantity :quant 11 :unit (p2 / pound))) :arg1-of (v3 / value-01 :arg2 (m4 / monetary-quantity :quant 11 :unit (p3 / pound)))))) :arg3 (m5 / monetary-quantity :quant 11 :unit (m6 / mark :mod (r2 / renminbi)) :arg1-of (v4 / value-01 :arg2 (m7 / monetary-quantity :quant 11 :unit (p4 / pound))))) :op2 (a2 / and :op1 (n / name-01 :arg1 (t2 / team) :arg2 (d2 / district :name (n2 / name :op1 "N-A") :mod (a3 / airport) :mod (g / good :degree (m8 / most)) :location (w / world))) :op2 (e3 / end-01 :arg1 (b / between :op1 (t3 / temporal-quantity :quant (N / N-A) :unit (y / year)) :op2 (t4 / temporal-quantity :quant (N2 / N-A) :unit (y2 / year))) :location (w2 / world))))
(a / and :op1 (b / blue :arg0 (b2 / blue :name (n / name :op1 (l / lag?na)) :mod (' / '')) :arg1 (c / container :mod (e / experiment-01) :ord (o / ordinal-entity :value 1)) :arg2 (c2 / country :name (n2 / name :op1 "Israel"))) :op2 (e2 / expand-01 :arg0 (b3 / blue) :arg1 (a2 / agree-01 :arg1 (c3 / cooperate-01 :arg2 (c4 / chain :consist-of (s / supermarket) :mod (n3 / new) :location (c5 / country :name (n4 / name :op1 "United" :op2 "States")))) :mod (c6 / cooperate-01))) :li 2016)
(a / apply-02 :polarity - :arg1 (t / thing :arg1-of (r / restrict-01) :mod (t2 / this)) :arg2 (a2 / and :op1 (p / person :arg0-of (p2 / participate-01)) :op2 (t3 / transport-01 :arg1-of (p3 / public-02))))
(l / look-01 :arg0 (m / model) :arg1 (t / topography :mod (v / venus)) :mod (a / also))
(a / and :op1 (p / plej?des :arg1 (i / it) :degree (s / so)) :op2 (s2 / serve-01 :arg0 (i2 / it) :arg1 (l / laboratory :mod (s3 / space) :mod (g / great) :location-of (p2 / possible-01 :arg1 (c / compare-01 :arg0 (y / you) :arg1 (t / thing :arg2-of (c2 / characteristic-02 :arg1 (s4 / star))) :arg2 (s5 / speeds :arg1 (s6 / star)))))))
(a / announce-01 :arg0 (p / police :mod (c / country :name (n / name :op1 "N-A"))) :arg1 (a2 / and :op1 (r / recognize-02 :arg0 (p2 / police) :arg1 (d / die-01 :arg1 (h / he))) :op2 (i / investigate-01 :arg1 (d2 / die-01 :arg1 (h2 / he)) :time (c2 / current))))
(m / meet-03 :arg0 (a / and :op1 (p / person :arg0-of (l / lead-02 :arg1 (c / country :name (n / name :op1 "N-A")))) :op2 (p2 / person :arg0-of (l2 / lead-02 :arg1 (c2 / country :name (n2 / name :op1 "N-A"))))) :arg1 (a2 / and :op1 (r / restore-01 :arg0 (a3 / and) :arg1 (h / hand)) :op2 (t / tell-01 :arg0 (a4 / and) :arg1 (a5 / and :op1 (w / word :quant (a6 / about :op1 (t2 / temporal-quantity :quant (N / N-A) :unit (m2 / month)))) :op2 (t3 / thing :arg2-of (s / sanction-02 :arg1 (c3 / country)))) :arg2 (e / end-01 :arg1 (w2 / war)))))
(m / make-01 :arg0 (t / tv :mod (t2 / this)) :arg1 (a / and :op1 (f / fruit) :op2 (t3 / thing :arg2-of (p / price-01))) :arg1-of (c / cause-01 :arg0 (r / revert :arg1 (a2 / and :op1 (t4 / thing :arg2-of (p2 / price-01 :arg1 (f2 / fruit))) :op2 (t5 / thing :arg2-of (p3 / price-01))))) :time (w / week :mod (t6 / this)))
(i / improve-01 :arg1 (s / situation) :arg1-of (c / cause-01 :arg0 (h / hit-01 :arg0 (a / aircraft :quant 2 :arg0-of (h2 / have-org-role-91 :arg1 (c2 / country :name (n / name :op1 "N-A")) :arg2 (m / member))) :arg1 (s2 / situation) :arg1-of (c3 / cause-01 :arg0 (n2 / negotiate-01 :arg0 (p / person :quant 2 :arg0-of (l / lead-02)) :mod (a2 / at-least)))) :time (a3 / after :op1 (h3 / hit-02 :arg0 (a4 / aircraft :arg0-of (c4 / combat-01 :arg1 (c5 / combat-01))) :arg1 (a5 / and :op1 (r / relation-03 :arg0 (c6 / country) :arg2 (c7 / country)) :op2 (d / disaster :mod (p2 / potential))))) :time (a6 / after :op1 (h4 / hit-02 :arg0 (a7 / aircraft :arg0-of (c8 / combat-01 :arg1 (c9 / combat-01))) :arg1 (a8 / and :op1 (r2 / relation-03 :arg0 (c10 / country) :arg2 (c11 / country)) :op2 (d2 / disaster :mod (p3 / potential)))))))
(a / and :op1 (c / cheerful :domain (h / he) :arg1-of (p / perfect-02 :arg2 (r / race :mod (c2 / country :name (n / name :op1 "N-A"))))) :op2 (j / jockey :domain (h2 / he) :arg1-of (b / brilliant-01)))
(a / appear-01 :arg1 (f / fish :mod (h / horrendous) :location (c / city :name (n / name :op1 "N-A") :mod (g / garden :polarity -))))
(i / illusion :domain (i2 / it) :mod (j / just) :concession (r / raise-01 :arg0 (r2 / rotation :quant 2) :arg1 (l / lead-02 :arg0 (i3 / i)) :degree (s / slight)))
(f / find-01 :arg1 (s / side :mod (b / both) :part-of (p / person :arg0-of (h / have-org-role-91 :arg2 (h2 / head-of-state)))))
(c / contrast-01 :arg1 (h / hit-01 :arg0 (b / boat :arg0-of (s / stray-01)) :arg1 (g / girl :mod (6 / 6-year-old))) :arg2 (p / play-01 :arg0 (s2 / she) :location (i / in-front-of :op1 (h2 / house :poss (h3 / he) :location (d / district :mod (v / vestouklein))))))
(a / and :op1 (s / spend-01 :arg1 (a2 / athletes :mod (c / club) :mod (t / this)) :arg3 (a3 / all)) :op2 (c2 / contribute-01 :arg0 (a4 / athletes) :arg2 (f / family :arg1-of (h / have-org-role-91 :arg0 (h2 / he) :arg2 (m / member))) :arg1-of (l / long-03)))
(f / find-01 :arg0 (w / we) :arg1 (c / chance-02 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (h2 / hometown :poss (i / i)) :arg2 (g / general))) :arg1 (p2 / provide-01 :arg0 (p3 / person) :arg1 (c2 / chance-02 :arg0 (p4 / person) :arg1 (k / know-01 :arg0 (p5 / person) :arg1 (s / sport :mod (g2 / great) :mod (t / this))))) :arg2 (p6 / person :arg0-of (h3 / have-org-role-91 :arg1 (h4 / hometown :poss (i2 / i)) :arg2 (g3 / general))) :manner (d / detroit)))
(p / possible-01 :arg1 (e / examine-01 :arg0 (p2 / person :mod (c / country :name (n / name :op1 "N-A"))) :arg1 (r / register-02) :manner (t / thorough :degree (m / more)) :purpose (p3 / prevent-01 :arg0 (p4 / person) :arg1 (u / use-01 :arg1 (a / and :op1 (r2 / roll :mod (e2 / elect-01)) :op2 (d / defraud-01 :arg0 (e3 / elect-01))) :arg2 (e4 / elect-01)) :manner (t2 / thorough :degree (m2 / more))) :mod (a2 / also)) :medium (m3 / message))
(a / and :op1 (c / confirm-01 :arg0 (p / popularity :mod (g / great :degree (m / more :mod (e / even)))) :arg1 (t / thing :quant 1 :arg1-of (i / include-91 :arg2 (t2 / thing :arg1-of (p2 / popular-02 :arg2 (t3 / thing :quant 2012 :arg1-of (p3 / popular-02 :arg2 (n / name :op1 (g2 / greg) :op2 (r / ruterford)))))))) :time (y / year :mod (t4 / this))) :op2 (u / undoubtedly :arg0 (s / similarity :name (n2 / name :op1 (b / breathtaking) :op2 (s2 / similarity) :op3 (a2 / actor) :op4 (a3 / actor) :op5 (a4 / actor) :op6 (p4 / patrick) :op7 (a5 / actor))) :arg1 (h / harris :mod (p5 / patrick))) :time (y2 / year :mod (t5 / this)))
(m / multi-sentence :snt1 (a / apologize-01 :arg0 (p / person :arg1-of (l / lead-02 :arg0 (p2 / person :arg1-of (b / broadcast-01 :arg2 (l2 / live-01 :arg0 (p3 / person))))) :arg0-of (a2 / apologize-01 :arg1 (t / thing :arg1-of (c / comment-01 :arg0 (p4 / person :arg0-of (l3 / live-01)))))) :arg1 (s / sorry-01 :arg1 (p5 / person) :arg2 (c2 / come-01 :arg1 (p6 / person) :arg3 (t2 / thing :arg2-of (r / result-01 :arg1 (s2 / swim-01))))) :time (s3 / soon :op1 (a3 / after :op1 (a4 / after :op1 (t3 / temporal-quantity :quant (N / N-A) :unit (y / year)))))) :snt2 (' / '' :arg1 (t4 / thing :arg1-of (c3 / comment-01 :arg3 (t5 / thing :arg2-of (r2 / result-01 :arg1 (s4 / swim-01))))) :mod (j / just) :location (h / here)))
(a / and :op1 (w / watch-01 :arg0 (e / everyone) :arg1 (p / panties :poss (s / she))) :op2 (l / like-01 :polarity - :arg0 (t / they) :arg1 (s2 / she) :arg1-of (c / cause-01 :arg0 (p2 / put-01 :arg0 (s3 / she) :arg1 (s4 / she) :arg2 (b / back :op1 (s5 / shelf)) :mod (j / just)))))
(m / multi-sentence :snt1 (w / wake-up-02 :arg1 (w2 / we) :arg1-of (c / cause-01 :arg0 (q / quiet :domain (i / it) :degree (s / so) :location (h / here)))) :snt2 (a / accustomed :polarity - :arg1 (w3 / we) :arg2 (i2 / it)))
(p / plan-01 :arg0 (p2 / park :mod (w / water) :location (c / city :arg0-of (h / have-org-role-91 :arg1 (m / marseille)))) :arg1 (e / event :arg1-of (p3 / private-02)) :time (w2 / week :mod (t / this)) :arg1-of (c2 / cause-01 :arg0 (a / and :op1 (r / right :mod (r2 / right) :domain (m2 / measure-02 :mod (s / such))) :op2 (l / leave-15 :arg0 (p4 / person :mod (c3 / circle :mod (p5 / politics))) :arg1 (c4 / circle :mod (p6 / politics))))) :time (w3 / week :mod (t2 / this)))
(t / task :mod (m / main) :poss (c / company) :domain (c2 / continue-01 :arg1 (i / increase-01 :arg1 (a / and :op1 (t2 / turnover :mod (b / both)) :op2 (p / profit :mod (b2 / both))))) :time (y / year :mod (t3 / this)) :mod (a2 / also))
(t / turns :arg0 (p / person :name (n / name :op1 "N-A") :arg0-of (h / have-org-role-91 :arg2 20030112)) :arg1 (t2 / temporal-quantity :quant (N / N-A) :unit (y / year)) :time (s / since :op1 (b / bear-02 :arg1 (p2 / person :arg0-of (h2 / have-org-role-91 :arg2 (p3 / president)) :arg0-of (h3 / have-org-role-91 :arg2 (p4 / president))) :ord (o / ordinal-entity :value 2))))
(c / correct-02 :arg1 (r / rest :part-of (e / event :name (n / name :op1 "N-A"))) :degree (v / very) :time (a / always))
(t / tell-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg2 (p2 / president :mod (v / vice)))) :arg1 (h2 / historians) :time (a / after :op1 (t2 / take-over-12 :arg0 (p3 / person :arg0-of (h3 / have-org-role-91 :arg2 (p4 / president :mod (v2 / vice)))) :arg1 (t3 / tradition :mod (t4 / this)))) :time (t5 / time :mod (t6 / that)))
(v / visit-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg2 (p2 / president :mod (v2 / vice)))) :arg1 (a / and :op1 (r / recognition :mod (f / full) :poss (c / country :location (s / sea :name (n / name :op1 "N-A")))) :op2 (n2 / nation :mod (d / democracy) :location (n3 / north :part-of (n4 / north)))) :mod (a2 / also) :mod (a3 / also) :li 1927)
FAILED_TO_PARSE#Two concepts in a row.
(h / have-condition-91 :arg1 (m / moment :time (s / start-01 :arg0 (y / you) :arg1 (f / fall-01 :arg1 (p / person :arg0-of (h2 / have-rel-role-91 :arg1 (y2 / you) :arg2 (p2 / partner))) :arg4 (u / under :op1 (y3 / you)) :purpose (d / detail-01 :arg0 (y4 / you))))) :arg2 (r / recommend-01 :arg1 (e / explore-01 :arg0 (y5 / you) :arg1 (f2 / field :mod (o / other) :arg0-of (h3 / have-rel-role-91 :arg1 (y6 / you) :arg2 (p3 / partner))) :purpose (s2 / see-01 :arg0 (y7 / you) :arg1 (o2 / or :op1 (m2 / missing :arg0 (y8 / you) :arg1 (h4 / he)) :op2 (t / think-01 :arg0 (y9 / you) :arg1 (o3 / or :op1 (p4 / person :arg0-of (h5 / have-rel-role-91 :arg1 (y10 / you) :arg2 (p5 / partner))) :op2 (p6 / person :mod (e2 / especially) :arg0-of (w / want-01 :arg1 (s3 / see-01 :arg0 (y11 / you) :arg1 (h6 / he) :time (a / anymore)) :mod (e3 / even))))))))))
FAILED_TO_PARSE#Two concepts in a row.
(r / report)
(p / person :arg1-of (i / include-91 :arg2 (p2 / person :arg1-of (i2 / imprison-01)) :arg3 (a / around :op1 270)) :time (l / late :degree (m / more)))
(a / and :op1 (p / place-01 :arg0 (c / city :arg0-of (h / have-org-role-91 :arg1 (c2 / country :name (n / name :op1 "Slovakia")) :arg2 (c3 / capital))) :arg1 (p2 / person :quant 16 :mod (c4 / continent :name (n2 / name :op1 "N-A")) :arg0-of (h2 / have-org-role-91 :arg1 (c5 / country) :arg2 (c6 / capital))) :location (s / summit :name (n3 / name :op1 (- / -rrb-)) :mod (c7 / continent :name (n4 / name :op1 "N-A")) :mod (f / formal :polarity -))) :op2 (a2 / attend-01 :arg0 (s2 / state :quant (a3 / all) :arg2-of (e / except-01 :arg1 (c8 / country :name (n5 / name :op1 "Slovakia")))) :arg1 (c9 / country)))
(o / opine-01 :arg0 (i / i) :arg1 (a / and :op1 (a2 / approve-01 :arg0 (c / committee :mod (e / executive)) :arg1 (c2 / circle :consist-of (p / person :quant 5))) :op2 (t / take-01 :polarity - :arg0 (c3 / committee) :arg1 (p2 / person :quant 1 :arg1-of (i2 / include-91 :arg2 (p3 / person))))) :medium (v / view-01 :arg0 (i3 / i)))
(r / report-01 :arg0 (a / agency) :arg1 (t / thursday :arg0 (a2 / agency) :arg1 (w / weight :quant (u / up-to :op1 (m / mass-quantity :quant (N / N-A) :unit (k / kilogram)))) :condition (l / lose-02 :arg1 (l2 / lose-02 :arg0 (h / he) :arg1 (f / fight-01 :arg0 (h2 / he) :ord (o / ordinal-entity :value 1) :arg0-of (e / experienced :arg1 (b / borodavk :name (n / name :op1 (e2 / eugene) :op2 (e3 / eugene) :op3 (e4 / eugene)))))))) :time (a3 / already))
(d / divide-02 :arg1 (g / game :mod (o / olympic)) :arg2 (a / and :op1 (s / sets-archery :quant 24 :mod (m / medal)) :op2 (g2 / gearbox) :op3 (c / cycling :mod (t / track)) :op4 (c2 / cycling :mod (e / equestrian)) :op5 (f / fencing :arg1 (g3 / game)) :op6 (s2 / shooting :arg1 (g4 / game)) :op7 (s3 / swimming :arg1 (g5 / game)) :op8 (w / weightlifting :arg1 (g6 / game)) :op8 (s4 / swim-01 :arg0 (a2 / and)) :op8 (w2 / weightlifting :arg0 (a3 / and)) :op8 (w3 / weightlifting :arg0 (a4 / and)) :op8 (w4 / weightlifting :arg0 (a5 / and)) :op8 (w5 / weightlifting :arg0 (a6 / and)) :op8 (w6 / weightlifting :arg0 (a7 / and))) :time (t2 / today))
(p / point-out-02 :arg0 (o / office :poss (p2 / person :name (n / name :op1 "N-A"))) :arg1 (o2 / obligate-01 :arg1 (c / company :mod (t / this)) :arg2 (p3 / pull-01 :arg1 (c2 / company)) :arg1-of (c3 / cause-01 :arg0 (a / and :op1 (f / form-01 :arg0 (c4 / company) :arg1 (e / economy :mod (a2 / and))) :op2 (p4 / pay-01 :polarity - :arg0 (c5 / company) :arg1 (t2 / thing :arg1-of (t3 / tax-01))) :op3 (c6 / cause-01 :arg0 (a3 / and) :arg1 (a4 / and :op1 (f2 / fire) :op2 (r / risk-01 :arg2 (s / sanitary))))))))
(a / and :op1 (i / increase-01 :arg1 (l / lead-02 :arg0 (p / person :quant (h / half :ord (o / ordinal-entity :value 1)))) :degree (f / further)) :op2 (e / end-01 :arg1 (h2 / half :ord (o2 / ordinal-entity :value 1))))
(c / critical-02 :arg1 (c2 / cleanliness :location (g / gulf :mod (r / riga))))
(e / explain-01 :arg0 (c / council :mod (c2 / city :arg0-of (h / have-org-role-91 :arg2 (c3 / capital)))) :arg1 (d / difficult :domain (f / fight-01 :arg1 (p / person :arg0-of (v / visit-01) :mod (s / slovenly))) :degree (q / quite)) :time (d2 / day :mod (e2 / every)))
(p / pleased :arg0 (i / i) :arg1 (p2 / perform-02 :arg0 (y / you) :arg1 (d / duty :arg1-of (s / superior-01 :arg2 (y2 / you)) :poss (y3 / you))))
(r / rearranged :arg0 (p / person :name (n / name :op1 "Vladimir" :op2 "Putin") :arg0-of (h / have-org-role-91 :arg2 (p2 / president))) :arg1 (e / elite :arg0-of (r2 / rule-03)) :time (b / before :op1 (e2 / elect-01 :arg1-of (c / come-01) :quant (m / multiple :op1 2018))))
(l / lose-02 :arg0 (p / person :mod (a / all)) :arg1 (b / board :mod (a2 / all)))
(s / stay-on-02 :arg1 (w / we) :time (n / no-longer))
(z / zhongnanhai :arg0 (c / culture :mod (f / first-vef)) :arg1 (a / and :op1 (a2 / access-01 :arg1 (h / home :mod (h2 / home))) :op2 (i / improve-01 :arg1 (h3 / home :mod (h4 / home)))))
(a / and :op1 (g / groups :polarity - :arg0 (g2 / group) :arg1 (g3 / group) :manner (a2 / above :op1 (a3 / act-02 :manner (m / musicians) :example (a4 / and :op1 (h / hugo) :op2 (w / wave-04) :op3 (s / stern) :op4 (s2 / stark :name (n / name :op1 (? / ??))) :op5 (s3 / stark :name (n2 / name :op1 (?2 / ??))) :op6 (t / talis :name (n3 / name :op1 (?3 / ??))) :op6 (t2 / talis :name (n4 / name :op1 (?4 / ??))) :op6 (t3 / talis :name (n5 / name :op1 (?5 / ??))) :op6 (t4 / talis :name (n6 / name :op1 (?6 / ??))) :op7 (t5 / talis :name (n7 / name :op1 (a5 / ainars) :op2 (t6 / talis))) :op8 (t7 / talis :name (n8 / name :op1 (?7 / ??))) :op8 (t8 / talis :name (n9 / name :op1 (l / leo))) :op8 (t9 / talis :name (n10 / name :op1 (l2 / leo))) :op8 (t10 / talis :name (n11 / name :op1 (g4 / guntars))) :op8 (t11 / talis :name (n12 / name :op1 (g5 / guntars))) :op8 (t12 / talis :name (n13 / name :op1 (g6 / guntars))) :op8 (e / et-cetera))))))
(a / and :op1 (s / show-01 :arg0 (a2 / and :op1 (r / respond-01 :arg1 (l / life :mod (h / human)) :manner (f / frank)) :op2 (p / problem :topic (k / kaj)) :degree (m / most))) :op2 (i / inspire-01 :arg0 (a3 / and) :arg1 (h2 / he) :mod (n / next)))
(b / be-located-at-91 :arg1 (c / city :arg0-of (h / have-org-role-91 :arg1 (c2 / country :name (n / name :op1 "N-A")) :arg2 (c3 / capital))) :arg2 (s / side :part-of (r / road :part-of (m / man :mod (d / die-01)))))
(a / and :op1 (c / contain-01 :arg0 (a2 / and :op1 (o / oatmeal) :op2 (b / berries)) :arg1 (f / fiber :arg1-of (a3 / accord-02 :arg2 (t / thing :arg1-of (c2 / conclude-01 :arg0 (s / scientist) :arg1-of (c3 / control-01 :arg0 (c4 / company :name (n / name :op1 "N-A") :arg1-of (c5 / control-01 :arg0 (c6 / company :name (n2 / name :op1 "N-A") :arg1-of (c7 / control-01 :arg0 (g / grel?n))))))))))) :op2 (i / infer-01 :arg1 (f2 / feel-01 :arg0 (a4 / and) :arg1 (h / hunger-01 :arg0 (s2 / scientist)))))
(a / and :op2 (c / contain-01 :arg0 (t / thing :arg1-of (c2 / contain-01 :arg0 (r / reduce-01 :arg1 (w / weight)))) :arg1 (b / build-up :arg1 (f / fat)) :mod (a2 / also)))
(c / cause-01 :arg1 (e / essential :domain (e2 / eat-01 :arg1 (f / food :mod (s / sweet)) :time (i / immediate) :time (a / after :op1 (r / rose)))))
(a / and :op1 (t / take-10 :arg0 (t2 / treat-03 :arg1 (m / meat) :arg2 (a2 / and :op1 (e / egg) :op2 (h / heat))) :arg1 (p / protein :arg1-of (n / natural-03)) :direction (a3 / away)) :op2 (m2 / make-02 :arg0 (t3 / treat-03) :arg1 (d / digestible :arg1-of (e2 / easy-05 :degree (m3 / more)))))
(m / multi-sentence :snt1 (a / and :op1 (c / create-01 :arg0 (p / person :arg0-of (u / use-01 :arg1 (p2 / person :arg0-of (u2 / use-01 :arg1 (p3 / person :arg0-of (u3 / use-01)))))) :arg1 (i / image :mod (s / such))) :op2 (r / remain-01 :polarity - :arg1 (t / thing :mod (s2 / such)) :arg3 (p4 / person :arg0-of (u4 / use-01 :arg1 (p5 / person :arg0-of (u5 / use-01))))) :time (t2 / today)) :snt2 (i2 / interview :arg1 (t3 / thing :mod (s3 / such)) :medium (i3 / interview-01 :arg1 (k / katie :name (n / name :op1 (2 / 25-year-old))))))
(a / and :op1 (c / criticize-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (c2 / company :name (n / name :op1 "N-A")))) :arg1 (m / manage-01 :arg1 (c3 / company)) :arg2 (m2 / manage-01 :arg0 (c4 / company) :arg1 (m3 / man :mod (w / white)) :mod (p2 / primary))) :op2 (c5 / close-01 :arg0 (p3 / person) :arg1 (a2 / article :poss (p4 / person)) :manner (d / deletesnapchat :arg1 (p5 / person)) :time (t / then)))
(m / multi-sentence :snt1 (n / news :time (l / late :degree (m2 / most)) :topic (t / tell-01 :arg1 (r / report-01 :arg0 (i / intelligence) :arg1 (r2 / reflect-01 :arg1 (r3 / report-01 :arg0 (i2 / intelligence) :arg0-of (c / confirm-01 :arg1 (p / person :arg0-of (h / have-org-role-91 :arg2 (e / executive :arg1-of (h2 / high-02)))) :arg2 (p2 / person :arg0-of (h3 / have-org-role-91 :arg2 (e2 / executive :mod (r4 / ranking))))) :arg0-of (c2 / confirm-01 :arg1 (f / fight-01 :arg0 (w / we) :arg2 (p3 / positive :degree (m3 / more)))))))) :arg2 (y / you)) :snt2 (s / show-01 :arg1 (t2 / thing :mod (g / good :degree (m4 / more) :compared-to (s2 / show-01 :arg1 (t3 / thing :mod (g2 / good :degree (m5 / more) :compared-to (a / analyze-01 :arg0 (i3 / intelligence) :arg1 (i4 / intelligence))))))) :arg1-of (r5 / regular-02)))
(p / progressed :arg0 (r / report :arg1-of (p2 / publish-01 :medium (u / url-entity :value (t / thursday)))) :arg1 (c / case-03) :time (c2 / case-03))
(a / and :op2 (d / do-02 :arg1 (s / so)))
(m / make-01 :arg1 (a / and :op1 (i / ingredient :mod (b / basic)) :op2 (i2 / ingredient :mod (o / other) :arg0-of (e / enrich-01 :arg1 (c / concept)))) :arg2 (t / they))
(m / multi-sentence :snt1 (t / tell-01 :arg0 (l / lord) :arg1 (a / amr-unknown) :arg2 (a2 / amr-unknown)) :snt2 (l2 / love-01 :arg0 (h / he) :arg1 (c / cuisine :mod (c2 / continent :name (n / name :op1 "N-A")) :example (s / sauce :mod (c3 / cucumber)))))
(i / initiate-01 :arg1 (c / case-03) :time (a / and :op1 (i2 / initiate-01 :arg1 (c2 / case-03)) :op2 (b / bring-01 :arg0 (a2 / and :op1 (g / gilead) :op2 (m / merck)) :arg1 (p / proceeding-02) :prep-against (o / other :mod (e / each))) :manner (t / try-01 :arg0 (a3 / and) :arg1 (o2 / obtain-01 :arg0 (a4 / and) :arg1 (o3 / own-01 :arg1 (c3 / component :arg1-of (d / develop-02 :mod (n / new)) :arg1-of (d2 / develop-02 :mod (n2 / new)))) :mod (m2 / main)))))
(h / hope-01 :arg0 (d / delegation :mod (c / country :name (n / name :op1 "N-A"))) :arg1 (h2 / hope-01 :arg0 (t / team :mod (c2 / country :name (n2 / name :op1 "N-A"))) :arg1 (i / include-91 :arg1 (a / and :op1 (t2 / team :mod (c3 / country)) :op2 (t3 / team :poss (c4 / country))) :arg2 (p / period :mod (g / game :mod (o / olympic))))))
(p / project :mod (i / infrastructure) :arg0-of (b / benefit-01 :arg1 (c / community :mod (e / entire)) :arg1-of (i2 / instead-of-91 :arg2 (b2 / benefit-01 :arg0 (p2 / project) :arg1 (i3 / individual)))) :arg1-of (r / resemble-01 :arg2 (o / olympics)))
(a / and :op1 (i / initiate-01 :arg1 (i2 / investigate-01 :arg2-of (c / criminal-03)) :mod (a2 / also) :prep-in (c2 / case :mod (t / this)) :mod (a3 / also)) :op2 (s / say-01 :arg0 (e / edition :name (n / name :op1 (d / de) :op2 (d2 / de) :op3 (d3 / de))) :arg1 (p / person :arg0-of (h / have-rel-role-91 :arg1 (p2 / person) :arg2 (l / lawyer)))))
(m / multi-sentence :snt1 (a / adds :domain (a2 / adds :mod (h / hofsteller))) :snt2 (l / learn-01 :arg0 (i / it) :arg1 (p / person :arg0-of (p2 / prosecute-01))))
(c / cause-01 :arg1 (p / play-11 :arg0 (i / i) :arg1-of (b / bad-05) :condition (l / lose-03 :arg0 (w / we))))
(c / cause-01 :arg1 (e / express-01 :arg0 (i / i) :arg1 (a / and :op1 (i2 / involve-01 :arg1 (a2 / and :op1 (c2 / create-01) :op2 (l / legislation) :arg1-of (i3 / involve-01 :arg2 (a3 / and :op1 (c3 / create-01) :op2 (l2 / legislate-01)))) :arg2 (p / part) :arg1-of (a4 / activity-06 :arg0 (i4 / it))) :op2 (s / submit-01 :arg0 (i5 / it) :arg1 (t / thing :arg1-of (p2 / propose-01 :arg0 (t2 / they))) :arg2 (t3 / thing :arg1-of (p3 / propose-01 :arg0 (t4 / they)))))))
(a / and :op1 (s / send-01 :arg0 (b / blue :name (n / name :op1 (l / lagoon) :op2 (l2 / lagoon))) :arg1 (c / container :mod (e / experiment-01) :ord (o / ordinal-entity :value 1)) :arg2 (c2 / country :name (n2 / name :op1 "Israel"))) :op2 (e2 / expand-01 :arg0 (b2 / blue) :arg1 (a2 / and :op1 (o2 / outlet :mod (m / market)) :op2 (o3 / outlets :mod (m2 / market))) :arg4 (c3 / country) :time (y / year :mod (t / this))) :op3 (s2 / sign-02 :arg0 (b3 / blue) :arg1 (a3 / agree-01 :arg1 (c4 / cooperate-01) :arg2 (c5 / chain :consist-of (s3 / supermarket) :mod (n3 / new) :location (c6 / country :name (n4 / name :op1 "United" :op2 "States")))) :time (y2 / year :mod (t2 / this))))
(s / succeed-01 :arg0 (a / antonenko :mod (o / opera :mod (m / metropolitan))) :arg1 (r / role :poss (p / prince :location (' / '' :name (n / name :op1 ('2 / '') :op2 (m2 / mermaid) :op3 (m3 / mermaid))))) :degree (g / great))
(m / multi-sentence :snt1 (p / possible-01 :arg1 (m2 / make-02 :arg0 (p2 / person :arg0-of (h / hack-04) :arg0-of (c / crack :arg1 (c2 / computer :mod (d / democrat :mod (c3 / country :name (n / name :op1 "N-A"))) :mod (c4 / country :name (n2 / name :op1 "N-A"))))) :arg1 (a / attack-01 :mod (c5 / cyber) :mod (o / other) :quant (s / several)))) :snt2 (u / uzlauzu :arg0 (a2 / and :op1 (p3 / person :arg0-of (h2 / have-org-role-91 :arg2 (c6 / commander) :time (f / former)) :arg0-of (h3 / have-org-role-91 :arg2 (c7 / commander) :time (f2 / former)) :arg0-of (h4 / have-org-role-91 :arg2 (c8 / commander) :time (f3 / former))) :op2 (p4 / person :arg0-of (h5 / have-org-role-91 :arg2 (c9 / commander) :time (f4 / former)) :arg0-of (h6 / have-org-role-91 :arg2 (c10 / commander))) :op3 (p5 / person :arg0-of (h7 / have-org-role-91 :arg2 (c11 / commander) :time (f5 / former)) :arg0-of (h8 / have-org-role-91 :arg2 (c12 / commander))) :op4 (p6 / person :arg0-of (h9 / have-org-role-91 :arg2 (c13 / commander) :time (f6 / former)) :arg0-of (h10 / have-org-role-91 :arg2 (c14 / commander))) :op5 (p7 / person :arg0-of (h11 / have-org-role-91 :arg2 (c15 / commander))) :op6 (p8 / person :arg0-of (h12 / have-org-role-91 :arg2 (t / thursday))) :op7 (p9 / person :arg0-of (h13 / have-org-role-91 :arg1 (n3 / news :mod (n4 / news) :mod (b / business)) :arg2 (t2 / thursday))))))
(v / venus :arg1 (b / brighter :quant (a / about :op1 30)) :time (e / early :op1 (s / sun)))
FAILED_TO_PARSE#Two concepts in a row.
(s / say-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg2 (s2 / spokesman))) :arg1 (a / and :op1 (t / team :mod (s3 / small) :domain (w / we)) :op2 (w2 / work-01 :arg0 (w3 / we) :arg1 (f / family :arg1-of (h2 / have-org-role-91 :arg0 (h3 / he) :arg2 (m / member))))) :op3 (s4 / say-01 :arg0 (p2 / person :arg0-of (h4 / have-org-role-91 :arg2 (s5 / spokesman))) :arg1 (p3 / person :arg0-of (h5 / have-org-role-91 :arg2 (s6 / spokesman)))))
(s / say-01 :arg0 (w / website :mod (u / url-entity :value (k / kremlin)) :location (c / country :name (n / name :op1 "N-A"))) :arg1 (l / lead-02 :arg0 (h / he) :arg1 (a / and :op1 (p / protocol :mod (p2 / president)) :op2 (g / government-organization :arg0-of (g2 / govern-01 :arg1 (g3 / government-organization :arg0-of (g4 / govern-01)) :arg1-of (e / employ-01)))) :time (l2 / late :degree (m / more))))
(o / obligate-01)
(c / charge-05 :arg1 (p / person :arg0-of (h / have-org-role-91 :arg1 (p2 / police :mod (c2 / criticises)) :arg2 (l / lilan))) :arg1-of (s / strong-02) :time (c3 / case-03))
(s / say-01 :arg1 (s2 / see-01 :polarity - :arg0 (i / i) :arg1 (t / thing :quant (l / lot) :arg1-of (i2 / include-91 :arg2 (t2 / thing :arg2-of (e / except-01 :arg1 (t3 / thing :arg2-of (e2 / except-01 :arg1 (e3 / edition :name (n / name :op1 (h / huffington))))))))) :arg1-of (p / personal-02)) :arg2 (p2 / person :name (n2 / name :op1 "N-A")) :arg1-of (p3 / personal-02))
(a / and :op1 (f / fortunate-01 :polarity - :arg1 (c / choose-01 :arg1 (w / word))) :op2 (s / sorry-01 :arg1 (w2 / we) :arg2 (e / event :mod (i / it)) :degree (v / very)))
(a / and :op1 (b / broken :arg1 (a2 / and :op1 (g / gr?d?s) :op2 (h / holes :location (w / wall))) :degree (w2 / wide :degree (t / too))) :op2 (b2 / barely :arg1 (w3 / wall) :arg2 (g2 / graffiti)))
(s / say-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (s2 / security :mod (d / district)) :arg2 (c / chief :mod (s3 / security :mod (d2 / district))))) :arg1 (c2 / cooperate-01 :polarity - :arg0 (f / family) :arg1 (a / authority :mod (s4 / security) :arg1-of (l / local-02))))
(s / say-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (p2 / political-party :name (n / name :op1 "N-A")))) :arg1 (p3 / person :quant 1 :domain (h2 / he) :arg1-of (c / close-10 :arg2 (p4 / person))) :arg1-of (s2 / say-01 :arg0 (p5 / person)))
(h / he :mod (a / after :op1 (n / netiec?s :arg0 (h2 / he) :arg1 (i / it) :manner (s / simple))))
(t / think-01 :mode (i / imperative) :arg0 (y / you) :arg1 (b / betrayal :mod (s / small) :time (a / already)))
(r / register-02 :arg1 (a / accidents :mod (t / traffic) :quant 71 :mod (r2 / road) :arg0-of (s / suffer-01 :arg1 (p / person :quant 16))) :time (d / day :mod (l / last)))
(s / say-01 :arg0 (s2 / study :mod (n / new)) :arg1 (c / contrast-01 :arg1 (p / possible-01 :arg1 (h / high-02 :arg1 (n2 / number :quant-of (t / thing :arg1-of (b / border-01 :arg2 (y / yoke :mod (c2 / communism)) :time (f / former)))) :degree (m / more :quant (m2 / much)) :compared-to (e / estimate-01 :time (p2 / previous)))) :arg2 (d / doubt-01 :arg1 (a / address-02 :polarity - :arg1 (n3 / number :quant-of (v / victim) :mod (t2 / true))))))
(m / multi-sentence :snt1 (c / contrast-01 :mode (i / interrogative)) :snt2 (c2 / convince-01 :mode (i2 / interrogative) :arg1 (y / you) :arg2 (d / draw-02 :arg0 (t / that) :arg1 (d2 / distinction :topic (p / person :mod (e / elderly) :arg1-of (d3 / die-01 :arg1-of (p2 / possible-01) :arg1-of (c3 / cause-01 :arg0 (r / result-01 :arg1 (t2 / treat-03 :arg1 (p3 / person)) :arg2 (p4 / person :mod (e2 / elderly)) :arg1-of (c4 / cause-01 :arg0 (a / and :op1 (f / face-01 :arg0 (p5 / person) :arg1 (t3 / treat-03 :arg1 (p6 / person))) :op2 (w / wait-01 :arg1 (p7 / person) :arg2 (w2 / wait-01 :arg1 (p8 / person) :arg2 (b / bus :location (b2 / border-01))))))))))))))
(m / multi-sentence :snt1 (k / know-01 :arg0 (i / i) :arg1 (k2 / know-01 :arg0 (i2 / i) :arg1 (t / thing :arg0-of (c / cause-01 :arg1 (r / room :polarity - :mod (e / enough :polarity -)) :mod (e2 / exact))))) :snt2 (s / say-01 :arg0 (i3 / i) :arg1 (a / appreciate-02 :polarity - :arg0 (s2 / society) :arg1 (a2 / and :op1 (c2 / criminal-organization :name (n / name :op1 "N-A")) :op2 (p / person :arg0-of (h / have-org-role-91 :arg1 (c3 / criminal-organization :name (n2 / name :op1 "N-A")) :arg2 (p2 / president))) :op3 (p3 / person :arg0-of (h2 / have-org-role-91 :arg1 (c4 / criminal-organization) :arg2 (p4 / president))) :op4 (p5 / person :arg0-of (h3 / have-org-role-91 :arg1 (c5 / criminal-organization) :arg2 (p6 / president))) :op5 (p7 / person :arg0-of (h4 / have-org-role-91 :arg1 (c6 / criminal-organization) :arg2 (p8 / president)))))))
(g / guarantee-01 :arg0 (c / company :arg0-of (p / provide-01 :arg1 (i / information))) :arg1 (g2 / guarantee-01))
(s / sign-01 :arg0 (p / person :quant (m / more-than :op1 170000)) :arg1 (p2 / petition-01 :arg0 (p3 / person) :arg1 (p4 / protect-01 :arg1 (p5 / person :arg0-of (h / have-rel-role-91 :arg1 (c / child) :arg2 (c2 / child))))))
(c / contrast-01 :arg1 (p / pain-01 :arg1 (d / defeat-01 :mod (t / this))) :arg2 (s / surprise-01 :arg1 (s2 / surprise-01)))
(r / result-01 :arg1 12 :arg2 (a / and :op1 (p / person :quant 0) :op2 (t / team :mod (c / country :name (n / name :op1 "N-A"))) :op3 (t2 / team :mod (c2 / country :name (n2 / name :op1 "N-A")))) :mod (e / even :polarity -))
(t / think-01 :arg0 (t2 / think-01 :ord (o / ordinal-entity :value 1)) :arg1 (a / and :op1 (f / frustrate-01) :op2 (i / irritation) :domain (a2 / and :op1 (f2 / frustrate-01) :op2 (i2 / irritation) :arg0-of (s / speak-01 :degree (m / more :compared-to (u / usual)))) :time (m2 / morning :mod (t3 / that))) :time (a3 / after :op1 (w / win-01)))
(s / say-01 :arg0 (u / unit :mod (m / military :mod (r / royal)) :location (c / country :name (n / name :op1 "Afghanistan"))) :arg1 (c2 / contrast-01 :arg1 (t / tough-02 :arg1 (t2 / this) :time (w / week :arg1-of (t3 / tough-02))) :arg2 (m2 / mean-01 :arg1 (t4 / this) :arg2 (l / lot))))
(m / multi-sentence :snt1 (a / and :op2 (i / intend-01 :mode (i2 / interrogative) :arg0 (y / you))) :snt2 (i3 / intend-01 :mode (i4 / interrogative) :arg0 (y2 / you) :arg1 (a2 / and :op1 (d / discuss-01 :arg0 (y3 / you)) :op2 (s / show-01 :arg0 (y4 / you) :arg1 (i5 / image :arg0-of (s2 / show-01 :arg1 (d2 / design-01 :arg1 (a3 / and :op1 (d3 / design-01 :arg1 (g / gudhue)) :op2 (d4 / design-01 :arg1 (g2 / gudhue)) :quant (m2 / multiple :op1 1993))) :op3 (r / restoration :arg0 (a4 / and :op1 (p / person :quant 1993 :arg0-of (m3 / mine-01)) :op2 (p2 / person :arg0-of (e / extort-01))) :arg2 (t / team))))))))
(e / except-01 :arg1 (a / and :op1 (s / site :location (l / liepaja)) :op2 (s2 / site :quant (s3 / some) :location (k / kurzeme))) :arg2 (a2 / and :op1 (b / beach) :op2 (s4 / site :quant (s5 / some) :location (k2 / kurzeme))))
(a / and :op1 (' / '' :arg0 (f / figure :arg1-of (a2 / average-03)) :arg1 (f2 / figure :arg1-of (a3 / average-03) :quant (a4 / all :op1 3) :arg1-of (i / include-91 :arg2 (a5 / area :name (n / name :op1 (r / riga) :op2 (b / bathing) :op3 (i2 / iem) :op4 (i3 / iem) :op5 (i4 / iem) :op6 (i5 / iem) :op7 (i6 / iem)))))) :op2 (m / meet-01 :arg0 (f3 / figure) :arg1 (o / or :op1 (t / thing :arg1-of (t2 / target-01)) :op2 (t3 / target :name (n2 / name :op1 (? / ??))) :op3 (t4 / thing :arg1-of (t5 / target-01))) :arg2-of (f4 / fortunate-01 :polarity -)) :arg2-of (f5 / fortunate-01 :polarity -) :arg1-of (m2 / mean-01 :arg2 (a6 / and :op1 (m3 / meet-01 :arg0 (f6 / figure :arg1-of (a7 / average-03)) :arg1 (a8 / and :op1 (t6 / thing :arg1-of (t7 / target-01)) :op2 (t8 / target :name (n3 / name :op1 (?2 / ??))))) :op2 (t9 / target :arg1-of (t10 / target-01))) :arg2-of (f7 / fortunate-01 :polarity -)))
(l / leave-14 :mode (i / interrogative) :arg0 (i2 / it) :arg1 (o / office))
(c / cause-01 :arg1 (c2 / convince-01 :arg0 (i / i) :arg1 (a / and :op1 (r / ready-02 :arg1 (h / he) :arg2 (j / job)) :op2 (r2 / ready-02 :arg1 (h2 / he) :arg2 (j2 / job)) :time (a2 / after :op1 (a3 / and :op1 (c3 / character :mod (p / professional) :mod (a4 / all)) :op2 (c4 / character :arg1-of (p2 / personal-02)))))))
(v / vaino :arg0 (f / family :arg0-of (b / belong-01 :arg1 (e / elite :mod (p / party :mod (c / country :name (n / name :op1 "N-A")))))) :arg1 (v2 / vaino))
(m / multi-sentence :snt1 (s / significant-02) :snt2 (o / obligate-01 :arg2 (t / take-01 :arg0 (y / you) :arg1 (p / part) :arg3 (c / class :mod (w / weight) :mod (a / another))) :arg1-of (s2 / significant-02)) :snt3 (o2 / obligate-01 :arg2 (p2 / participate-01 :arg0 (y2 / you) :arg1 (c2 / class :mod (w2 / weight :mod (a2 / another))) :compared-to (u / usual)) :arg1-of (c3 / cause-01 :arg0 (c4 / category :mod (w3 / weight) :destination (u2 / up-to :op1 (m2 / mass-quantity :quant (N / N-A) :unit (k / kilogram)))))))
(m / multi-sentence :snt1 (w / want-01 :polarity - :arg0 (n / no-one) :arg1 (d / die-01 :arg1 (n2 / no-one)) :arg1-of (c / cause-01 :arg0 (w2 / want-01 :polarity - :arg0 (n3 / no-one) :arg1 (d2 / die-01 :arg1 (n4 / no-one))))) :snt2 (k / korta :mode (i / interrogative) :location (t / throughout :op1 (m2 / match-03 :mod (w3 / whole)))))
(a / and :op1 (f / flight :arg1 (? / ?? :name (n / name :op1 (d / d?te) :op2 (d2 / d?te) :op3 (d3 / d?te))) :arg2 (f2 / floor :ord (o / ordinal-entity :value 2) :arg1-of (c / close-10 :arg2 (n2 / network) :degree (t / too)))) :op2 (r / remain-01 :arg1 (f3 / floor :ord (o2 / ordinal-entity :value 2)) :arg4 (a2 / and :op1 (n3 / network) :op2 (s / samoilovam)) :arg1-of (c2 / cause-01 :arg0 (v / version :mod (l / little :degree (v2 / very)) :mod (v3 / version :mod (l2 / little :degree (v4 / very)))))))
(i / include-91 :arg1 (m / multivitamin) :arg2 (r / room :quant (s / several) :arg2-of (i2 / include-01 :arg1 (a / and :op1 (p / person :quant 2 :arg0-of (v / view-01)) :op2 (p2 / person :arg0-of (v2 / view-01)) :op3 (b / building :arg1-of (r2 / reduce-01 :arg2 (r3 / reduce-01 :arg1 (p3 / person))))))))
(a / and :op1 (' / '' :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (c / church :mod (r / religious-group :name (n / name :op1 "N-A"))) :arg2 (m / metropol?ts))) :arg1 (c2 / church :mod (r2 / religious-group :name (n2 / name :op1 "N-A"))) :medium (i / interview-01 :arg1 (p2 / person) :mod (s / seimas))) :op2 (o / obligate-01 :arg2 (b / be-located-at-91 :arg1 (p3 / person) :arg2 (h2 / heart :part-of (m2 / message :mod (f / frank))) :condition (w / want-01 :arg0 (w2 / we) :arg1 (m3 / make-01 :arg0 (w3 / we) :arg1 (f2 / force :mod (l / life)))))))
(p / presides :arg1 (d / day :time (p2 / previous)) :arg2 (w / worship :mod (v / vig?lijas) :mod (f / festive)))
(s / show-01 :arg0 (c / cameras :arg0-of (s2 / surveil-01) :arg0-of (s3 / surveil-01)) :arg1 (a / and :op1 (p / person :arg0-of (d / drive-01 :arg1 (c2 / car))) :op2 (p2 / person :arg0-of (d2 / drive-01 :arg1 (c3 / car))) :purpose (a2 / access-01 :arg0 (p3 / person) :arg1 (v / victim)) :time (t / then)))
(b / be-located-at-91 :arg1 (a / and :op1 (l / location :name (n / name :op1 (p / paspilgtina)) :mod (s / small)) :op2 (l2 / location :name (n2 / name :op1 (p2 / paspilgtina)))) :arg2 (l3 / location :location-of (s2 / shores :arg1 (a2 / and :op1 (p3 / port :mod (p4 / passenger)) :op2 (s3 / ship :mod (c / cruise))))) :location (s4 / shore :poss (k / ku?ot?jiem :mod (s5 / small))))
(s / show-01 :arg0 (s2 / study-01) :arg1 (p / possible-01 :arg1 (h / help-01 :arg0 (p2 / person :arg0-of (s3 / study-01)) :arg1 (r / rid-01 :arg0 (p3 / person) :arg1 (f / fat) :location (a / area :mod (a2 / abdominal))))))
(c / cause-01 :arg1 (i / important :domain (e / eat-01 :polarity - :arg1 (t / they) :time (a / after :op1 (m / meals)))))
(p / possible-01 :arg1 (c / combine-01 :arg1 (p2 / protein) :arg2 (a / amount :mod (s / small :degree (v / very)) :mod (s2 / small :degree (v2 / very)))))
(m / multi-sentence :snt1 (h / help-01 :mode (i / interrogative) :arg0 (v / vitamin :mod (c / c)) :arg1 (c2 / change-01 :arg0 (v2 / vitamin) :arg1 (n / not-asinsrado))) :snt2 (i2 / iron :mode (e / expressive)) :snt3 (c3 / cause-01 :arg1 (i3 / iron :arg0 (o / organism :poss (w / we)) :arg1 (e2 / easy-05 :arg1 (a / absorb :arg0 (w2 / we)) :degree (m2 / more)))))
(o / open-01 :arg0 (p / person :arg0-of (p2 / play-01) :mod (c / ceturdienas)) :arg1 (t / thing :arg2-of (r / result-01)) :arg0-of (a / achieve-01 :arg1 (g / goal :mod (h / half :ord (o2 / ordinal-entity :value 1)) :arg1-of (s / shoot-01 :arg2 (d / distance-01 :arg2 (c2 / close))))))
(c / contrast-01 :arg1 (s / start-01 :arg0 (c2 / country :name (n / name :op1 "N-A")) :arg1 (g / game) :manner (w / win-01 :polarity - :arg0 (c3 / country) :location (a / account :poss (h / he)))) :arg2 (a2 / and :op1 (t / tough-02 :arg1 (t2 / team :poss (t3 / they)) :degree (v / very)) :op2 (h2 / hold-01 :arg0 (t4 / team) :arg1 (r / result :arg1-of (c4 / civilize-01)) :time (u / until :op1 (p / period :ord (o / ordinal-entity :value 3) :ord (o2 / ordinal-entity :value 3) :ord (o3 / ordinal-entity :value 3))))))
(a / ap?da :mode (i / imperative) :arg0 (y / you) :arg1 (f / few :op1 (t / temporal-quantity :quant (N / N-A) :unit (m / month))))
(d / decide-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg3 (j / judge-01)) :mod (d2 / district)) :arg1 (r / receive-01 :arg0 (p2 / person :arg0-of (h2 / have-org-role-91 :arg3 (j2 / judge-01))) :arg1 (t / thing :arg2-of (c / cost-01 :arg1 (l / lawyer :arg0-of (p3 / pay-01 :arg1 (p4 / patent-01 :arg1 (p5 / patent-01) :prep-against (o / organization :name (n / name :op1 "merck" :op2 "&" :op3 "co" :op4 "inc") :mod (p6 / pharmaceutical)))))))))
(s / say-01 :arg0 (p / person :name (n / name :op1 "N-A")) :arg1 (a / and :op1 (c / carry-out-03 :arg0 (p2 / person :arg0-of (v / vote-01)) :arg1 (p3 / person :arg0-of (v2 / vote-01))) :op2 (f / fear-01 :arg0 (p4 / person) :arg1 (p5 / person :arg0-of (v3 / vote-01)) :arg1-of (i / instead-of-91 :arg2 (a2 / authority :mod (t / tax))))))
(m / multi-sentence :snt1 (g / gathered :arg1 (g2 / game :mod (6 / 6a)) :time (a / after :op1 (g3 / gather-03 :mod (62 / 6a)) :quant (a2 / all))) :snt2 (s / start-01 :arg1 (s2 / start-01 :arg1 (c / celebration))))
(m / multi-sentence :snt1 (a / and :op1 (w / wrong-02 :arg1 (s / sceptics :mod (s2 / sceptics)) :arg2 2012) :op2 (c / case :mod (h / heathrow) :mod (a2 / also))) :snt2 (t / true :polarity - :domain (t2 / they)))
(a / and :op1 (c / come-01 :arg1 (t / time) :purpose (a2 / and :op1 (r / revival :arg0 (w / we) :arg1 (s / spirit :mod (o / olympic))) :op2 (e / expand-01 :arg0 (w2 / we) :arg1 (h / heathrow)) :op3 (e2 / ensure-01 :arg0 (w3 / we) :arg1 (f / future :poss (t2 / trade-01 :arg0 (w4 / we)))))) :op2 (p / possible-01 :arg1 (p2 / pride-01 :arg0 (c2 / country :name (n / name :op1 "N-A")) :arg2 (c3 / country :name (n2 / name :op1 "N-A")))))
(m / multi-sentence :snt1 (s / say-01 :arg0 (p / person :mod (c / country :name (n / name :op1 "N-A"))) :arg1 (n2 / ne?rt?k :domain (p2 / person)) :time (b / before :op1 (d / date-entity :time (a / already)))) :snt2 (p3 / possible-01 :arg1 (b2 / be-02 :arg1 (a2 / amr-unknown))))
(o / opine-01 :arg0 (t / thing :arg1-of (o2 / opine-01 :arg0 (t2 / thing :arg1-of (o3 / opine-01 :arg0 (p / person :arg1-of (e / expert-01)))))) :arg1 (a / and :op1 (p2 / possible-01 :arg1 (o4 / operate-01 :polarity - :arg0 (a2 / apartments :quant 2))) :op2 (b / be-located-at-91 :arg1 (t3 / thing) :arg2 (f / flat :mod (d / dmitry)))) :arg1-of (l / long-03))
(m / multi-sentence :snt1 (h / hotel :mode (i / interrogative) :poss (p / park)) :snt2 (f / fund-01 :arg0 (a / and :op1 (p2 / person :arg0-of (o / own-01 :arg1 (c / clinics))) :op2 (p3 / person :arg0-of (o2 / own-01 :arg1 (c2 / clinics))) :op3 (p4 / person :arg0-of (o3 / own-01 :arg1 (c3 / clinics))) :op4 (p5 / person :arg0-of (o4 / own-01 :arg1 (c4 / clinics))) :op5 (p6 / person :arg0-of (o5 / own-01 :arg1 (c5 / clinics))) :op6 (p7 / person :arg0-of (o6 / own-01 :arg1 (c6 / clinics))) :op6 (p8 / person :arg0-of (o7 / own-01 :arg1 (c7 / clinics))) :op6 (p9 / person :arg0-of (o8 / own-01 :arg1 (c8 / clinics))) :op6 (p10 / person :arg0-of (o9 / own-01 :arg1 (c9 / clinics))) :op6 (p11 / person :arg0-of (o10 / own-01 :arg1 (c10 / clinics))) :op6 (p12 / person :arg0-of (o11 / own-01 :arg1 (c11 / clinics))) :op6 (p13 / person :arg0-of (o12 / own-01 :arg1 (c12 / clinics))) :op7 (p14 / person :arg0-of (o13 / own-01 :arg1 (c13 / clinics))))))
(m / multi-sentence :snt1 (s / succeed-01 :arg0 (p / person :quant 2009 :mod (a / anto?enko)) :arg1 (s2 / succeed-01 :arg0 (p2 / person) :arg1 (r / role :mod (p3 / prince :mod (o / opera :mod (m2 / metropolitan)))) :mod (g / great))) :snt2 (' / '' :mode (i / interrogative)))
(u / undermine-01 :arg0 (p / person :name (n / name :op1 "mccartney") :mod (b / beatles)) :arg1 (o / ono :mod (j / joko)))
(p / pain-01 :arg1 (i / it) :degree (t / too) :condition (s / see-01 :arg0 (y / you) :arg1 (a / animal :mod (d / domestic) :poss (a2 / animal))))
(r / result-01 :arg1 (t / temperature :arg1-of (m / moderate-03) :mod (c / climate)) :arg2 (f / few :op1 (v / volume-quantity :quant (N / N-A) :unit (g / gallon))) :time (f2 / fact) :arg1-of (c2 / cause-01 :arg0 (t2 / temperature :part-of (e / earth) :time (t3 / today))))
(r / return-01 :arg1 (p / person :arg0-of (w / work-01 :arg1 (o / oil)) :location (n / north)) :arg4 (t / table :mod (n2 / negotiate-01)))
(s / state-01 :arg1 (a / agree-01 :arg0 (a2 / and :op1 (g / group :consist-of (w / wood)) :op2 (u / unite-01) :op3 (u2 / union :mod (r / rmt))) :arg1 (r2 / resume-01 :arg0 (a3 / and) :arg1 (t / talk-01 :arg0 (g2 / group) :arg1 (r3 / resolve-01 :arg1 (d / dispute-01))))))
(a / and :op1 (c / cut-02 :arg0 (s / shell) :arg1 (w / wage :poss (p / person)) :time (a2 / already)) :op2 (a3 / announce-01 :arg0 (s2 / shell) :arg1 (p2 / plan-01 :arg1 (s3 / stop-01 :arg1 (a4 / and :op1 (o / operation :mod (o2 / oil)) :op2 (o3 / operation :mod (g / gas) :arg1-of (n / natural-03) :location (c2 / country :quant 10)))) :purpose (o4 / optimise :arg0 (a5 / and) :arg1 (w2 / work-01 :arg0 (a6 / and)) :purpose (m / merge-01 :arg1 (d / deal-01 :arg0 (g2 / group) :arg1 (g3 / group) :arg2 (e / energy) :arg1-of (m2 / major-02)))))) :time (m3 / meanwhile))
FAILED_TO_PARSE#Two concepts in a row.
(t / thank-01 :arg0 (i / i) :arg1 (a / and :op1 (c / close-10 :arg1 (l / laboratory :mod (s / space :mod (g / great))) :arg2 (l2 / laboratory :mod (s2 / space) :mod (g2 / great))) :op2 (b / be-located-at-91 :arg1 (s3 / star) :arg2 (l3 / laboratory :mod (s4 / space) :mod (g3 / great) :location-of (c2 / compare-01 :arg1 (s5 / star) :arg2 (p / perform-01 :arg1 (p2 / perform-02 :arg0 (s6 / star) :arg1 (s7 / speed))))))))
(s / say-01 :arg0 (p / person :arg1-of (f / find-01 :location (s2 / supermarket :mod (w / westphan))) :arg1-of (f2 / find-01 :location (s3 / supermarket :mod (w2 / westphan))) :arg1-of (f3 / find-01 :location (s4 / supermarket :mod (w3 / westphan)))) :arg1 (c / court :mod (s5 / san) :mod (s6 / san)))
(c / claim-01 :arg0 (i / i) :arg1 (k / know-01 :arg0 (i2 / i) :arg1 (k2 / know-01 :arg0 (i3 / i) :arg1 (k3 / know-01 :arg0 (i4 / i) :arg1 (a / amr-unknown :arg1-of (r / resemble-01 :arg2 (g / go-02 :arg0 (i5 / i) :arg4 (a2 / across :op1 (p / person :mod (y / young :degree (m / more)) :arg0-of (h / have-rel-role-91 :arg1 (h2 / he) :arg2 (b / brother :mod (y2 / young :degree (m2 / more))))))))) :degree (t / total)))))
(r / report)
(c / contrast-01 :arg2 (d / differ-01 :arg0 (c2 / country :quant 2) :arg1-of (s / significant-02) :mod (s2 / still) :concession (s3 / show-04 :arg1-of (p / public-02))))
(j / jack :arg0 (j2 / jack :ord (o / ordinal-entity :value 6)) :arg1 (t / thing :arg2-of (r / result-01)))
FAILED_TO_PARSE#Two concepts in a row.
(w / write-01 :arg1 (p / person :arg0-of (s / serve-02) :mod (t / this)) :duration (t2 / temporal-quantity :quant (N / N-A) :unit (m / month)) :time (a / already) :time (a2 / after :op1 (h / heart :part-of (h2 / heart))) :arg0-of (r / reduce-01 :arg1 (r2 / risk-01 :arg2 (h3 / heart :arg1-of (r3 / repeat-01)))))
(c / commissioned :arg1 (r / report) :time (a / after :op1 (s / scandal :arg1-of (c2 / connect-01 :arg2 (c3 / city :mod (t / tauerhamletas))))))
(s / say-01 :arg0 (i / i) :arg1 (a / assume-02 :arg0 (i2 / i) :arg1 (t / take-on-09 :arg0 (s2 / shop :location (s3 / shop)) :arg1 (c / clothes :source (s4 / shop)) :time (a2 / after :op1 (d / depart-01 :arg0 (s5 / she))))))
(c / combated :arg0 (g / group :consist-of (g2 / group :consist-of (p / person :arg0-of (h / have-org-role-91 :arg1 (a / and :op1 (t / trade-01 :mod (a2 / acropolis)) :op2 (p2 / person :arg0-of (h2 / have-org-role-91 :arg2 (e / entertainment))) :op3 (p3 / person :arg0-of (h3 / have-org-role-91 :arg2 (h4 / head-of-state))) :op4 (p4 / person :arg0-of (h5 / have-org-role-91 :arg2 (h6 / head-of-state))) :op5 (p5 / person :arg0-of (h7 / have-org-role-91 :arg2 (h8 / head-of-state))) :op5 (p6 / person :arg0-of (h9 / have-org-role-91 :arg2 (h10 / head-of-state))) :op6 (p7 / person :arg0-of (h11 / have-org-role-91 :arg2 (h12 / head-of-state))) :op6 (p8 / person :arg0-of (h13 / have-org-role-91 :arg2 (h14 / head-of-state))) :op6 (p9 / person :arg0-of (h15 / have-org-role-91 :arg2 (h16 / head-of-state))) :op7 (p10 / person :arg0-of (h17 / have-org-role-91 :arg2 (h18 / head-of-state))) :op7 (p11 / person :arg2-of (s / staff-01) :arg0-of (p12 / partner-01 :arg1 (p13 / political-party :name (n / name :op1 "N-A"))))))))) :arg1 (g3 / group :consist-of (g4 / group :consist-of (g5 / group :consist-of (a3 / acropolis)))))
(h / have-condition-91 :arg1 (o / obligate-01 :arg2 (t / take-01 :arg0 (w / we) :arg1 (a / account-01 :arg1 (c / change-01 :arg1-of (c2 / change-01 :arg1-of (p / possible-01 :polarity -)))))) :arg2 (d / depend-01 :arg0 (c3 / change-01) :arg1 (t2 / thing :arg1-of (s / same-01))) :condition (c4 / case :domain (t3 / this)))
(w / wheeled :arg1 (b / bag) :arg2 (a / and :op1 (d / document) :op2 (p / phone :arg1-of (m / mobile-02))))
(a / and :op1 (t / terrify-01 :arg0 (v / vacancy :arg0 (p / person :arg0-of (h / have-rel-role-91 :arg1 (c / child) :arg2 (c2 / child))) :arg1-of (l / legal-02)) :arg1 (l2 / law)) :op2 (g / go-02 :arg0 (p2 / person) :arg4 (p3 / point)))
(s / say-01 :arg0 (i / i) :arg1 (a / and :op1 (a2 / appeal-02 :arg0 (h / he) :arg2 (c / criminal-organization :name (n / name :op1 "N-A") :mod (i2 / international) :arg0-of (- / -rrb- :arg1 (-2 / -rrb-)))) :op2 (c2 / call-03 :arg0 (h2 / he) :arg1 (s2 / send-01 :polarity - :arg0 (h3 / he) :arg1 (a3 / athletes :mod (a4 / any)) :arg2 (l / latvia))) :time (b / before :op1 (a5 / approve-01 :arg0 (p / person :arg0-of (p2 / participate-01)) :arg1 (p3 / person :arg0-of (p4 / participate-01)))) :time (b2 / before :op1 (a6 / approve-01 :polarity - :arg1 (p5 / person :arg0-of (p6 / participate-01))))))
(p / possible-01 :polarity - :arg1 (t / tell-01 :arg0 (i / i) :arg1 (c / cause-01 :arg0 (a / amr-unknown) :arg1 (b / be-located-at-91 :arg1 (h / he) :arg2 (g / game :mod (o / olympic)) :arg1-of (c2 / cause-01 :arg0 (l / likely-01 :arg1 (b2 / be-02 :arg1 (h2 / he))))))))
(b / be-located-at-91 :arg1 (w / we) :arg2 (g / game :mod (o / olympic) :ord (o2 / ordinal-entity :value 1)))
(c / contrast-01 :arg1 (r / receive-01 :arg0 (t / traveller :name (n / name :op1 (u / uash) :op2 (t2 / traveller)) :mod (o / olympic)) :arg1 (d / day) :time (a / announce-01 :arg1 (c2 / composition :poss (d2 / delegation :mod (l / latvian))) :manner (o2 / official))) :arg2 (t3 / tell-01 :arg1 (s / safe-01 :arg1 (i / it) :degree (q / quite) :time (s2 / since :op1 (d3 / date-entity :year (N / N-A)))) :arg2 (t4 / tell-01 :arg0 (h / he) :arg1 (s3 / safe-01 :arg1 (i2 / it)) :time (l2 / late :degree (m / more)))))
(d / divide-02 :arg1 (g / game :mod (o / olympic)) :arg2 (a / and :op1 (s / shoot-02 :quant 24 :mod (l / lovely)) :op2 (s2 / shoot-02 :mod (l2 / lovely)) :op3 (c / cycling :mod (t / tread)) :op4 (c2 / cycling :mod (t2 / tread)) :op5 (j / judging :arg1 (g2 / game)) :op6 (j2 / judging :arg1 (g3 / game)) :op7 (s3 / scourge :arg1 (g4 / game)) :op8 (s4 / scourge :arg1 (g5 / game)) :op8 (s5 / scourge :arg1 (g6 / game)) :op8 (s6 / scourge :arg1 (g7 / game)) :op8 (s7 / scourge :arg1 (g8 / game)) :op8 (s8 / scourge :arg1 (g9 / game)) :op8 (s9 / scourge :arg1 (g10 / game)) :op8 (s10 / scourge :arg1 (g11 / game)) :op8 (s11 / scourge :arg1 (g12 / game))))
(a / and :op1 (a2 / arrive-01 :arg1 (p / person :arg0-of (b / buy-01) :mod (p2 / potential))) :op2 (b2 / boarding :arg1 (p3 / person)) :op3 (g / go-02 :arg0 (p4 / person)) :time (t / time :arg1-of (s / same-01)))
(r / role :arg1-of (s / special-02) :domain (a / and :op1 (m / mortality :mod (g / globe)) :op2 (m2 / mortality :name (n / name :op1 (h / helsinki)) :mod (g2 / globe)) :op3 (m3 / mortality :mod (g3 / gold))) :arg1-of (s2 / special-02) :purpose (l / lagoa :arg1 (l2 / lagoa :mod (e / estation))))
(c / contrast-01 :arg1 (b / be-located-at-91 :arg1 (s / she) :arg2 (h / hand :part-of (v / viljamsa :mod (r / robin)) :arg0-of (i / inspire-01 :arg1 (s2 / she) :arg2 (m / medal :mod (g / gold) :ord (o / ordinal-entity :value 2) :mod (g2 / gold :ord (o2 / ordinal-entity :value 2)) :mod (g3 / gold :ord (o3 / ordinal-entity :value 2)) :mod (g4 / gold :ord (o4 / ordinal-entity :value 2)))))) :arg2 (b2 / become-01 :arg1 (b3 / boat) :arg2 (f / female :ord (o5 / ordinal-entity :value 1) :arg0-of (s3 / succeed-01 :arg1 (s4 / succeed-01 :mod (s5 / such))))))
(i / issue-01 :arg0 (c / commission :mod (c2 / continent :name (n / name :op1 "N-A"))) :arg1 (o / opine-01 :arg0 (c3 / commission) :arg1 (i2 / implement-01 :polarity - :arg0 (a / and) :arg1 (m / measure-02 :arg1-of (s / suffice-01)) :purpose (r / reduce-01 :arg0 (a2 / and) :arg1 (l / level :mod (d / deficit) :arg1-of (i3 / include-91 :arg2 (p / product :arg1-of (g / gross-03) :mod (d2 / domestic) :arg1-of (g2 / gross-03) :mod (d3 / domestic) :poss (p2 / product :arg1-of (g3 / gross-03) :mod (d4 / domestic)) :arg1-of (g4 / gross-03) :mod (d5 / domestic))))))) :arg2 (c4 / commission :mod (c5 / continent :name (n2 / name :op1 "N-A"))))
(b / beaches :arg1 (s / source :mod (m / main)) :arg1-of (c / cause-01 :arg0 (a / and :op1 (p / plastic :arg1 (w / waste :quant (m2 / more-than :op1 (1 / 1/2)) :arg1-of (i / include-91 :arg2 (w2 / waste)))) :op2 (w3 / waste :arg1-of (d / differ-02) :source (s2 / stage :mod (a2 / already) :time (a3 / already) :time (s3 / stage :mod (s4 / stage :mod (a4 / already))))) :op3 (p2 / possible-01 :arg1 (i2 / identify-01 :arg0 (t / they) :arg1 (a5 / and :op1 (s5 / smoke) :op2 (s6 / smoke) :op3 (m3 / military :name (n / name :op1 "N-A")) :op4 (u / ulme)) :time (n2 / no-longer))))))
(a / advocate-01 :arg0 (f / figure :arg1-of (a2 / average-03)) :arg1 (a3 / and :op1 (f2 / figure :arg1-of (i / include-91 :arg2 (f3 / figure :quant 3 :name (n / name :op1 (r / riga))))) :op2 (s / site :name (n2 / name :op1 (d / daugavgrivu))) :op3 (v / vecca) :op4 (v2 / vecca)) :arg2-of (f4 / fortunate-01 :polarity -) :arg2-of (f5 / fortunate-01 :polarity -) :arg1-of (c / cause-01 :arg0 (o / or :op1 (d2 / desire-01 :arg0 (f6 / figure) :arg1 (r2 / reduce-01 :arg0 (f7 / figure) :arg1 (n3 / number :quant-of (u / unit :mod (w / waste))))) :op2 (t / target-01 :arg0 (f8 / figure) :arg1 (n4 / number :quant-of (u2 / unit :consist-of (w2 / waste))))) :op3 (a4 / advocate-01 :arg0 (e / environment) :arg1 (e2 / environment))))
(a / and :op1 (g / good :domain (q / quality :quant 56 :mod (w / water) :mod (b / bathing))) :op2 (l / limit-01 :polarity - :arg1 (l2 / limit-01 :arg1 (q2 / quality))) :time (n / now))
(r / report-01 :arg1 (c / concert :arg1 (c2 / culture :mod (l / latvian)) :time (b / before :op1 (h / hijack-01 :arg0 (b2 / building) :arg1 (b3 / building) :time (i / immediate)))) :li 2015)
(m / multi-sentence :snt1 (s / see-01 :arg1 (e / exhibit-01) :source (v / value-interval :op1 19 :op2 30)) :snt2 (a / august :mode (e2 / expressive)))
(a / and :op1 (s / select-01 :arg1 (t / transport-01 :arg1-of (p / public-02))) :op2 (r / rebuilt :arg1 (p2 / proportion :quant-of (t2 / transport-01 :arg1-of (p3 / public-02)))))
(m / multi-sentence :snt1 (c / contain-01 :arg0 (a / and :op1 (p / person :arg0-of (h / have-org-role-91 :arg2 (s / scientist :mod (c2 / canadian)))) :op2 (p2 / person :arg0-of (h2 / have-org-role-91 :arg2 (s2 / scientist))) :op3 (p3 / person :arg0-of (h3 / have-org-role-91 :arg2 (s3 / scientist))) :op4 (p4 / person :arg0-of (h4 / have-org-role-91 :arg2 (s4 / scientist))) :op5 (p5 / person :arg0-of (h5 / have-org-role-91 :arg2 (s5 / scientist)))) :arg1 (a2 / and :op1 (c3 / control-01 :arg0 (a3 / and :op1 (p6 / person :arg0-of (h6 / have-org-role-91 :arg2 (s6 / scientist))) :op2 (p7 / person :arg0-of (h7 / have-org-role-91 :arg2 (s7 / scientist))) :op3 (p8 / person :arg0-of (h8 / have-org-role-91 :arg2 (s8 / scientist))) :op4 (p9 / person :arg0-of (h9 / have-org-role-91 :arg2 (s9 / scientist))) :op5 (p10 / person :arg0-of (h10 / have-org-role-91 :arg2 (s10 / scientist))) :op6 (p11 / person :arg0-of (h11 / have-org-role-91 :arg2 (s11 / scientist))) :op6 (p12 / person :arg0-of (h12 / have-org-role-91 :arg2 (s12 / scientist))) :op6 (p13 / person :arg0-of (h13 / have-org-role-91 :arg2 (s13 / scientist))) :op7 (p14 / person :arg0-of (h14 / have-org-role-91 :arg2 (s14 / scientist))))))) :snt2 (s15 / sense-02 :arg1 (s16 / salutes) :mod (a4 / also)))
(o / operating :arg1 (e / environment :mod (a / alkaline)) :mod (o2 / only) :location (e2 / environment :mod (a2 / alkaline)))
(m / multi-sentence :snt1 (a / apply-02 :arg1 (t / this) :arg2 (f / fresh-04) :mod (a2 / also) :arg1-of (f2 / fresh-04) :mod (a3 / also)) :snt2 (c / contain-01 :arg0 (t2 / this) :arg1 (- / -rrb- :quant (q / quantity :mod (l / large)) :arg1-of (c2 / contain-01 :arg0 (p / proteins) :manner (p2 / protein) :prep-with (s / source-02 :arg1 (-2 / -lrb- :mod (a4 / avocados)) :mod (w / whole))))))
(m / make-02 :arg0 (p / process-01 :arg1 (a / and :op1 (m2 / meat) :op2 (e / egg))) :arg1 (e2 / easy-05 :arg1 (p2 / produce-01) :degree (m3 / more)) :arg1-of (c / cause-01 :arg0 (a2 / and :op1 (p3 / produce-01 :arg0 (p4 / product) :arg1 (p5 / product)) :op2 (s / substances :arg0 (a3 / and :op1 (p6 / product) :op2 (s2 / substance :mod (o / other) :mod (m4 / mineral))) :arg1 (p7 / product)))))
(l / lenses :arg1 (i / instrument :arg0-of (g / generate-01 :arg1 (r / rate-entity-91 :arg1 (m / more-than :op1 30000000) :arg2 (t / temporal-quantity :quant (N / N-A) :unit (d / day))))))
(e / explain-01 :arg0 (s / she) :arg1 (h / have-03 :arg0 (t / they) :arg1 (p / problem :topic (r / relate-01 :arg1 (t2 / they) :arg2 (p2 / policy :mod (e2 / employ-01 :polarity -)) :arg1-of (e3 / enough :polarity - :purpose (s2 / support-01 :arg1 (d / diversity :mod (r2 / race))))))) :location (i / interview-01 :arg1 (i2 / i) :mod (t3 / telephone)))
(a / announce-01 :arg0 (c / congress) :arg1 (a2 / amend-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (m / military) :arg2 (o / official))) :arg1 (r / report-01 :arg1 (p2 / person :mod (r2 / religious-group :name (n / name :op1 "N-A"))))))
(b / base :mod (m / military) :location (s / state :name (n / name :op1 "Florida") :arg0-of (o / oversee-01 :arg1 (o2 / operation :mod (m2 / military) :location (a / and :op1 (w / world-region :name (n2 / name :op1 "Middle" :op2 "East")) :op2 (c / center)))) :arg0-of (o3 / oversee-01 :arg1 (o4 / operation :mod (m3 / military) :location (a2 / and :op1 (w2 / world-region :name (n3 / name :op1 "Middle" :op2 "East")) :op2 (c2 / center))))))
(r / report-01 :arg1 (l / launch-01 :arg0 (d / directorate-general :poss (g / government-organization :name (n / name :op1 "Pentagon"))) :arg1 (i / investigate-01) :time (a / after :op1 (c / complain-01 :arg0 (p / person :arg0-of (a2 / analyze-01) :mod (c2 / citycom))))) :time (d2 / date-entity :dayperiod (N / N-A)))
(c / compatible :polarity - :arg1 (n / nut :arg1-of (l / low-04) :consist-of (b / butter)))
(t / try-01 :arg0 (p / person :mod (c / country :name (n / name :op1 "N-A"))) :arg1 (f / find-01 :arg0 (p2 / person) :arg1 (l / list :consist-of (m / morality :name (n2 / name :op1 (i / israeli) :op2 (t2 / telephony)) :location (l2 / list :location (h / hotel))))) :time (v / visit-01 :time (r / recent)))
(t / tell-01 :arg0 (s / somebody :mod (e / else)) :arg1 (l / locate-01 :arg1 (h / hotel) :location (s2 / street :name (n / name :op1 (k / kurfurstendamm) :op2 (s3 / street) :op3 (s4 / street))) :location (s5 / street :name (n2 / name :op1 (k2 / kurfurstendamm) :op2 (s6 / street)))) :arg2 (h2 / house :poss (k3 / kauniebot :mod (' / ''))))
(m / manage-02 :arg0 (t / they) :arg1 (g / get-05 :arg1 (t2 / they) :arg2 (t3 / they) :time (m2 / minute :mod (l / last))))
(a / and :op1 (s / sprint :domain (c / country :name (n / name :op1 "Kenya")) :time (t / today)) :op2 (c2 / continue-01 :arg1 (d / day :mod (n2 / next))))
(s / say-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (c / country :name (n / name :op1 "N-A")) :arg3 (l / lead-02 :arg0 (p2 / person)))) :arg1 (a / and :op1 (s2 / spend-01 :arg0 (p3 / person :arg0-of (a2 / analyze-01 :arg1 (p4 / portland))) :arg1 (r / rate-entity-91 :arg1 600 :arg2 (t / temporal-quantity :quant (N / N-A) :unit (y / year)))) :op2 (s3 / spend-01 :arg0 (p5 / person :arg0-of (a3 / analyze-01)) :arg1 (e / energy :quant 900 :mod (m / megaavatus))) :time (a4 / after :op1 (e2 / estimate-01 :arg0 (p6 / person :arg0-of (a5 / analyze-01)) :arg1 (s4 / spend-01 :arg0 (p7 / person :arg0-of (h2 / have-org-role-91 :arg2 (p8 / person :arg0-of (a6 / analyze-01))))))) :time (w / week :mod (l2 / last))))
(c / call-03 :arg0 (w / we) :arg1 (s / suspend-01 :arg0 (w2 / we) :arg1 (r / reduce-01 :arg1 (f / fund-01 :arg1 (f2 / fund)))) :time (i / immediate) :purpose (s2 / suspend-01 :arg0 (w3 / we) :arg1 (r2 / reduce-01 :arg1 (f3 / fund-01))) :arg0-of (c2 / cause-01 :arg1 (p / possible-01 :arg1 (o / obtain-01 :arg0 (p2 / person :arg0-of (n / need-01 :arg1 (a / assist-01) :arg1-of (l / legal-02))) :arg1 (o2 / obtain-01 :arg0 (p3 / person) :arg1 (a2 / assist-01))))))
(a / add-01 :arg0 (i / i) :arg1 (c / clarified :arg1 (p / person :arg0-of (p2 / prosecute-01))))
(c / call-03 :arg0 (a / anyone :arg0-of (h / have-03 :arg1 (i / information :topic (m / morges :arg1-of (n / near-02 :arg2 (m2 / morges)))))) :arg1 (c2 / contact-01 :arg0 (a2 / anyone) :arg1 (p / police) :manner (o / or :op1 (p2 / person :quant 021) :op2 (p3 / person :quant 021))))
(r / report)
(a / and :op1 (r / rise-01 :arg1 (s / sentiment :mod (p / person :arg0-of (i / invest-01)) :location (w / world)) :time (m / morning :mod (f / friday)) :time (m2 / morning :mod (f2 / friday))) :op2 (p2 / positive :domain (s2 / sentiment :mod (p3 / person :arg0-of (i2 / invest-01)) :arg0-of (s3 / step :arg1 (e / expect-01 :arg1 (a2 / act-01 :arg0 (w2 / winners :mod (o / oil) :mod (l / large :degree (m3 / most)) :location (s4 / september)) :arg1 (m4 / market :mod (o2 / oil) :mod (w3 / world))))))))
(i / infer-01 :arg1 (o / obligate-01 :arg2 (c / care-04 :arg0 (p / person :arg0-of (d / drive-01)) :mod (p2 / particular) :arg1-of (c2 / cause-01 :arg0 (r / route :mod (r2 / road) :arg1-of (d2 / differ-02) :domain (r3 / route :mod (r4 / road) :arg1-of (d3 / differ-02)))))))
(t / tell-01 :arg1 (t2 / thing :arg1-of (d / do-02 :arg0 (g / girl))) :arg2 (g2 / girl))
(c / contrast-01 :arg1 (e / expect-01 :arg1 (t / thing :arg1-of (o / opine-01 :arg0 (t2 / thing :arg1-of (o2 / opine-01 :arg0 (t3 / thing :arg1-of (o3 / opine-01 :arg0 (t4 / thing :arg1-of (o4 / opine-01 :arg0 (t5 / thing :arg1-of (o5 / opine-01 :arg0 (t6 / thing :arg1-of (o6 / opine-01 :arg0 (t7 / thing :arg1-of (o7 / opine-01 :arg0 (t8 / thing :arg1-of (o8 / opine-01 :arg0 (t9 / thing :arg1-of (o9 / opine-01 :arg0 (t10 / thing :arg1-of (o10 / opine-01 :arg0 (t11 / thing :arg1-of (o11 / opine-01 :arg0 (t12 / thing :arg1-of (o12 / opine-01 :arg0 (t13 / thing :arg1-of (o13 / opine-01 :arg0 (t14 / thing :arg1-of (o14 / opine-01 :arg0 (t15 / thing :arg1-of (o15 / opine-01 :arg0 (t16 / thing :arg1-of (o16 / opine-01 :arg0 (t17 / thing :arg1-of (o17 / opine-01 :arg0 (t18 / thing :arg1-of (o18 / opine-01 :arg0 (t19 / thing :arg1-of (o19 / opine-01 :arg0 (t20 / thing :arg1-of (o20 / opine-01 :arg0 (t21 / thing :arg1-of (o21 / opine-01 :arg0 (t22 / thing :arg1-of (o22 / opine-01 :arg0 (t23 / thing :arg1-of (o23 / opine-01 :arg0 (t24 / thing :arg1-of (o24 / opine-01 :arg0 (t25 / thing :arg1-of (o25 / opine-01 :arg0 (t26 / thing :arg1-of (o26 / opine-01 :arg0 (t27 / thing :arg1-of (o27 / opine-01 :arg0 (t28 / thing :arg1-of (o28 / opine-01 :arg0 (t29 / thing :arg1-of (o29 / opine-01 :arg0 (p / person)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(a / and :op1 (w / wellness :domain (s / stage :ord (o / ordinal-entity :value 2))) :op2 (o2 / open-01 :arg1 (c / clinic :mod (n / negative :mod (g / good))) :arg1-of (c2 / cause-01 :arg0 (s2 / schedule-01 :arg1 (l / launch-01 :arg1 (h / hotel)) :arg3 2022 :quant 2018))))
(c / create-01 :arg0 (p / person :name (n / name :op1 "N-A") :arg0-of (h / have-org-role-91 :arg2 (m / mccreevy))) :arg1 (s / sense-01 :arg0 (p2 / person) :arg1 (t / threaten-01 :arg0 (g / group :mod (l / legendary)))))
(a / and :op1 (c / compare-01 :arg1 (s / star :arg1-of (c2 / compare-01 :arg2 (d / deed))) :arg2 (f / fruit :quant (m / more :degree (m2 / more)))) :op2 (b / buy-01 :arg0 (a2 / and :op1 (f2 / fruit :mod (s2 / small)) :op2 (n / number :quant-of (p / plant :mod (f3 / fruit)))) :arg1 (f4 / fruit :quant (m3 / more))))
(g / give-01 :arg0 (a / and :op1 (p / person :arg0-of (h / have-org-role-91 :arg2 (r / rebuls))) :op2 (p2 / person :arg0-of (h2 / have-org-role-91 :arg2 (c / colleagues)))) :arg1 (p3 / presentation :arg1 (s / speed :poss (s2 / star :arg1-of (p4 / publish-01 :location (f / forum :quant 3 :mod (n / new))) :arg1-of (p5 / publish-01 :location (f2 / forum :mod (a2 / astronomy))) :quant (s3 / short)))) :arg2 (p6 / presentation :arg0-of (d / detail-01)))
(a / avoid-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (p2 / person :arg0-of (h2 / have-org-role-91 :arg2 (p3 / president))) :arg2 (p4 / president :mod (v / vice)))) :arg1 (q / question-01 :arg1 (d / differ-02 :arg1 (b / between :op1 (c / country :quant 2) :op2 (p5 / person :arg0-of (h3 / have-org-role-91 :arg2 (p6 / president)))) :arg1-of (s / separate-02) :mod (o / only))) :arg2 (p7 / person :arg0-of (h4 / have-org-role-91 :arg2 (p8 / president :mod (v2 / vice)))))
(e / expect-01 :arg1 (a / and :op1 (a2 / applause) :op2 (g / gazes)) :time (a3 / after :op1 (r / return-01 :arg1 (a4 / and) :arg3 (w / win-01))))
(p / postpone :arg0 (w / we) :arg1 (l / link-01 :arg1 (s / section :mod (n / north) :mod (n2 / north)) :arg2 (o / or :op1 (l2 / land) :op2 (v / viaduct))) :time (a / after :op1 (h / hijack-01 :arg0 (w2 / we) :arg1 (a2 / and :op1 (s2 / support :arg1 (r / road) :mod (l3 / last)) :op2 (c / connect-01 :arg1 (r2 / road) :arg2 (t / tower :mod (n3 / north)))))))
(e / emerge-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (t / team :name (n / name :op1 (' / '') :op2 (c / captain)) :mod (c2 / country :name (n2 / name :op1 "N-A"))) :arg2 (c3 / captain))) :arg2 (l / lead-01 :arg0 (p2 / person) :mod (c4 / compelling)) :time (t2 / time :mod (t3 / this)))
(i / include-91 :arg1 (p / person :quant 1 :arg1-of (s / shoot-02 :location (c / city :name (n / name :op1 "N-A") :mod (j / jermantown)))) :arg2 (p2 / person :quant 4))
(s / say-01 :arg0 (p / person :name (n / name :op1 "N-A")) :arg1 (f / find-01 :arg1 (c / child :arg0-of (h / have-rel-role-91 :arg1 (c2 / child) :arg2 (c3 / child))) :location (n2 / next-to :op1 (c4 / car :arg1-of (b / be-located-at-91 :arg2 (c5 / condition :arg1-of (c6 / critical-02)))))))
(a / and :op1 (b / become-01 :arg1 (d / duglasa :mod (g / gaby)) :arg2 (c / champions :arg1 (d2 / duglasa))) :op2 (p / possible-01 :arg1 (g2 / glued :arg1 (d3 / duglasa))) :time (g3 / game :mod (p2 / previous) :mod (o / olympic)))
(t / treat-03 :arg1 (w / we) :arg2 (p / possible-01 :arg1 (e / extend-01 :arg0 (w2 / we) :arg1 (o / opportunity :purpose (t2 / treat-03)) :arg2 (t3 / thousands :arg0 (w3 / we) :arg1 (p2 / person :arg0-of (c / cause-01 :arg1 (b / beneficiaries :arg1 (p3 / person))))))) :arg1-of (c2 / cause-01 :arg0 (t4 / treat-03 :arg1 (p4 / person :mod (c3 / country :name (n / name :op1 "N-A"))) :arg2 (t5 / ticagreloria))))
(c / cause-01 :arg0 (f / fear-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (g / government-organization :arg0-of (g2 / govern-01)) :arg2 (m / minister) :time (f2 / former))) :arg1 (i / ignore-01 :arg0 (p2 / person) :arg1 (s / sign :arg1-of (s2 / signal-07 :arg0 (d / defraud-01))))) :arg1 (i2 / ignore-01 :arg0 (p3 / person) :arg1 (s3 / sign :arg1-of (s4 / signal-07 :arg0 (d2 / defraud-01))) :arg1-of (c2 / cause-01 :arg0 (f3 / fear-01 :arg0 (p4 / person) :arg1 (o / offend-01 :arg0 (p5 / person) :arg1 (m2 / minority :mod (e / ethnic)))))))
(s / say-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (g / government-organization :arg0-of (g2 / govern-01 :arg1 (c / country :name (n / name :op1 "N-A")))) :arg2 (s2 / secretary :mod (v / vice)) :time (f / former)) :arg0-of (h2 / have-org-role-91 :arg1 (m / movement-07 :arg1 (c2 / corrupt-01)) :arg2 (m2 / member) :time (f2 / former)) :arg0-of (h3 / have-org-role-91 :arg1 (m3 / movement-07 :arg1 (c3 / corrupt-01)) :arg2 (m4 / member) :time (f3 / former)) :arg0-of (h4 / have-org-role-91 :arg1 (m5 / movement-07 :arg1 (c4 / corrupt-01)) :arg2 (m6 / member))) :arg1 (r / recommend-01 :arg1 (a / allow-01 :arg1 (a2 / allow-01 :arg1 (d / deploy-01 :arg0 (p2 / police) :arg1 (p3 / person :arg0-of (g3 / guard-01)) :arg2 (o / outside :op1 (s3 / station :mod (p4 / polling))) :purpose (p5 / protect-01 :arg0 (p6 / person) :arg1 (p7 / person :arg0-of (v2 / vote-01 :arg1 (i / intimidated)))))))))
(f / find-02 :arg1 (g / guilty-01 :arg1 (h / he) :arg1-of (b / base-02 :arg2 (t / thing :arg0-of (e / evidence-01) :mod (c / continent :name (n / name :op1 "N-A")))) :arg1-of (b2 / base-02 :arg2 (t2 / thing :arg0-of (e2 / evidence-01) :mod (c2 / continent :name (n2 / name :op1 "N-A"))))))
(a / and :op1 (r / regret-01 :arg0 (w / we) :arg1 (t / thing :arg1-of (c / comment-01) :mod (s / such)) :degree (m / much :degree (v / very))) :op2 (c2 / come-03 :arg1 (c3 / comment-01) :arg2 (e / ether :arg1-of (d / direct-02))))
(c / contrast-01)
(b / buy-01 :arg0 (c / company) :arg1 (p / plate :arg1-of (s / sailing :arg2 (m / monetary-quantity :quant 89.5 :unit (e / euro)))))
(t / turn-02 :polarity - :arg0 (w / we) :arg1 (a / aggression :poss (w2 / we)) :arg2 (o / other) :arg1-of (c / cause-01 :arg0 (k / know-02 :arg0 (w3 / we) :arg1 (w4 / way :mod (o2 / other) :mod (v / various) :instrument-of (c2 / coping :prep-with (e / emotions :mod (t2 / this)))))))
(e / expect-01 :arg1 (a / arrive-01 :arg1 (a2 / and :op1 (e2 / environment :mod (l / latvian)) :op2 (g / gearbox) :op3 (c / centre :mod (m / meteorology))) :arg4 (l2 / latvia) :location (f / friday :location (p / place :quant (s / some)))) :mod (a3 / also))
(m / multi-sentence :snt1 (a / and :op1 (c / complete-01 :arg1 (c2 / construct-01 :arg1-of (c3 / co-financed :arg0 (f / fund-01 :arg1 (c4 / cohesion))))) :op2 (p / put-01 :arg1 (c5 / construct-01) :arg2 (s / service) :time (e / end-01 :arg1 (y / year :mod (l / last))))) :snt2 (i / include-91 :li 10600000 :arg1 (i2 / it) :arg2 (i3 / it)))
(l / list-01 :arg0 (p / person :name (n / name :op1 "N-A") :arg0-of (h / have-org-role-91 :arg1 (c / checkpoint) :arg3 (a / apprentice-01 :arg0 (p2 / person)))) :arg1 (c2 / case :mod (s / suicide) :quant (a2 / all) :topic (p3 / person :arg0-of (g / guard-01 :arg1 (b / border)) :location (e / east))) :mod (a3 / also) :concession (l2 / link-01 :mode (i / interrogative) :arg1 (p4 / person) :arg2 (s2 / service :poss (p5 / person)) :arg1-of (d / direct-02)))
(h / have-concession-91 :arg1 (c / converse-01 :arg0 (p / person :arg0-of (h2 / have-org-role-91 :arg1 (p2 / political-party :name (n / name :op1 "N-A")) :arg2 (p3 / president))) :arg1 (d / desire-01 :arg0 (p4 / person) :arg1 (m / make-01 :arg0 (p5 / person) :arg1 (s / sportsmen) :time (b / before :op1 (s2 / start-01))) :mod (r / routine))) :arg2 (f / follow-01 :arg1 (i / information :arg1-of (a / available-02 :arg2 (n2 / name :op1 (l / leta) :op2 (l2 / leta)) :time (b2 / before :op1 (s3 / start-01) :quant (c2 / couple :op1 (t / temporal-quantity :quant (N / N-A) :unit (d2 / day)))))) :arg2 (t2 / tears :arg1 (i2 / information))))
(s / say-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (c / criminal-organization :name (n / name :op1 "N-A")) :arg2 (p2 / president))) :arg1 (a / and :op1 (i / important :degree (v / very) :mod (a2 / also) :domain (i2 / issue-02 :arg0 (d / drowning)) :mod (a3 / also)) :op2 (s2 / speak-01 :arg0 (p3 / person) :arg1 (a4 / and :op1 (s3 / speak-01 :arg0 (p4 / person)) :op2 (s4 / speak-01 :arg0 (p5 / person) :time (a5 / after :op1 (n2 / now) :quant (a6 / almost :op1 (t / temporal-quantity :quant (N / N-A) :unit (w / week)))))))))
(m / multi-sentence :snt1 (a / and :op1 (m2 / manage-02 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (t / team :mod (c / country :name (n / name :op1 "N-A"))) :arg3 (l / lead-02 :arg0 (p2 / person)))) :arg1 (p3 / point :beneficiary (g / good :poss (t2 / team :mod (c2 / country :name (n2 / name :op1 "N-A")))))) :op2 (c3 / carry-01 :arg0 (p4 / person) :arg1 (g2 / ground :quant 36)) :op3 (a2 / achieve-01 :arg0 (p5 / person) :arg1 (r / result-01 :arg1 36 :arg2 7))) :snt2 (c4 / contrast-01 :arg1 (l2 / lose-02 :arg1 (g3 / game) :time (a3 / already)) :arg2 (a4 / and :op1 (s / sing-01 :arg0 (f / fan :mod (s2 / salesmen :mod (s3 / sea)) :location (s4 / south))) :op2 (d / dance :arg0 (f2 / fan) :location (t3 / trick)))))
(w / want-01 :arg0 (i / i) :arg1 (s / say-01 :arg0 (i2 / i) :arg1 (r / race :mod (l / last) :poss (i3 / i) :domain (t / this)) :degree (t2 / total)))
(m / multi-sentence :snt1 (a / and :op1 (p / place-01 :arg1 (m2 / meet-03) :arg2 (r / rate-entity-91 :arg1 21 :arg2 (t / temporal-quantity :quant (N / N-A) :unit (y / year))) :arg3 (v / value-interval :op1 21 :op2 00)) :op2 (m3 / moderne :arg0 (m4 / meet-03) :arg1 (s / school :arg1-of (l / legal-02)) :arg2 (v2 / value-interval :op1 00 :op2 00))) :snt2 (b / bullocks :arg0 (a2 / art) :arg1 (s2 / school :arg1-of (l2 / legal-02)) :time (f / former)) :snt3 (b2 / bullets :arg0 (a3 / art) :arg1 (r2 / rate-entity-91 :arg1 (u / under :op1 16) :arg2 (t2 / temporal-quantity :quant (N2 / N-A) :unit (y2 / year)))))
(c / cause-01 :arg0 (c2 / collect-01 :arg0 (w / waste :mod (c3 / city) :arg1-of (d / differ-02)) :arg1 (a / and :op1 (w2 / waste :mod (c4 / city)) :op2 (r / remnant :mod (p / picnic)))) :time (y / year :mod (t / this)))
(t / tell-01 :arg0 (p / person :mod (c / country :name (n / name :op1 "N-A"))) :arg1 (a / and :op1 (l / leave-15 :arg0 (p2 / person) :arg1 (p3 / post)) :op2 (c2 / continue-01 :arg0 (p4 / person) :arg1 (r / represent-01 :arg0 (p5 / person :arg0-of (h / have-org-role-91 :arg2 (p6 / president)) :arg1-of (s / special-02)) :arg1 (a2 / and :op1 (p7 / protect-01 :arg1 (n2 / nature)) :op2 (e / ecology) :op3 (t2 / transport-01)) :arg1-of (s2 / special-02)))) :arg2 (m / media :mod (c3 / country :name (n3 / name :op1 "N-A"))))
(s / satisfy-01 :arg0 (w / way :arg0 (y / you) :arg1 (e / entrust :mod (d / duty)) :arg2 (y2 / you)) :arg1 (i / i))
(c / contrast-01 :arg1 (b / become-01 :arg1 (p / person :name (n / name :op1 "Sergei" :op2 "Ivanov")) :arg2 (p2 / person :arg0-of (h / have-org-role-91 :arg1 (c2 / country :name (n2 / name :op1 "Russia")) :arg2 (m / minister :mod (d / defense)))) :li 2001) :arg2 (a / and :op1 (b2 / become-01 :arg1 (p3 / person) :arg2 (p4 / person :arg0-of (h2 / have-org-role-91 :arg1 (c3 / country) :arg2 (m2 / minister :mod (d2 / defense))))) :op2 (r / responsible-03 :arg0 (p5 / person) :arg1 (d3 / develop-02 :arg1 (a2 / and :op1 (c4 / company :mod (i / industry :mod (d4 / defense)) :mod (c5 / country)) :op2 (e / export-01 :arg1 (a3 / arm))))) :time (a4 / already)) :li 2001)
(a / and :op2 (c / contacting :arg1 (w / we) :frequency (r / rate-entity-91 :arg3 (t / temporal-quantity :quant (N / N-A) :unit (d / day))) :frequency (r2 / rate-entity-91 :arg3 (t2 / temporal-quantity :quant (N2 / N-A) :unit (d2 / day)))))
(s / sound-01 :arg1 (a / and :op1 (p / porgium) :op2 (b / besa)) :arg2 (l / liepaja) :time (a2 / after :op1 (b2 / break-up-08 :mod (1 / 10-year))))
(a / and :op1 (e / exciting :degree (m / most) :domain (c / construct-01 :mod (t / this))) :op2 (a2 / appreciate-02 :arg0 (a3 / and :op1 (c2 / conductor :mod (m2 / music) :mod (o / opera)) :op2 (' / '' :name (n / name :op1 (b / besa))) :op3 (p / pogba :name (n2 / name :op1 (d / diritive)))) :arg1 (o2 / opera)))
(s / say-01 :arg0 (f / figure :mod (c / country :name (n / name :op1 "N-A"))) :arg1 (h / have-03 :arg0 (p / person :arg0-of (h2 / have-org-role-91 :arg2 (c2 / capital))) :arg1 (p2 / percentage :arg1-of (h3 / high-02 :degree (m / most)) :arg1-of (i / include-91 :arg2 (w / woman))) :location (p3 / place :ord (o / ordinal-entity :value 1)) :location (p4 / place :ord (o2 / ordinal-entity :value 1) :arg1-of (i2 / include-91 :arg2 (c3 / city :mod (l / large :degree (m2 / most) :compared-to (c4 / city :quant 127 :arg1-of (i3 / include-91 :arg2 (w2 / woman :quant 127)))))))))
(a / and :op1 (t / terminate-01 :arg0 (p / protein) :arg1 (p2 / process-02 :arg1 (d / digestive))) :op2 (p3 / provide-01 :arg0 (p4 / protein) :arg1 (s / sense-01 :arg1 (s2 / slice)) :time (t2 / time :arg1-of (l / long-03))) :time (t3 / time :arg1-of (s3 / same-01)))
(p / possible-01 :arg1 (i / increase-01 :arg0 (y / you) :arg1 (i2 / infringe-01 :arg1 (n / non-bloated :mod (n2 / non-bloated))) :manner (u / use-01 :arg0 (y2 / you) :arg1 (p2 / product :arg0-of (c / contain-01 :arg1 (p3 / product :mod (c2 / c) :example (a / and :op1 (o / oranges) :op2 (t / tomatoes) :op3 (b / berries)))))) :arg1-of (s / significant-02)))
(a / add-02 :mode (i / imperative) :arg0 (y / you) :arg1 (t / they) :arg2 (a2 / and :op1 (f / fat :mod (h / healthy)) :op2 (o / oil :example (o2 / or :op1 (o3 / olive) :op2 (o4 / oil :mod (l / linseed))))))
(a / and :op1 (c / criticize-01 :arg0 (p / person :name (n / name :op1 "N-A") :arg0-of (c2 / consist-01 :arg1 (m / man :mod (w / white)) :arg3 (m2 / most))) :arg1 (l / lead-02 :arg0 (c3 / company))) :op2 (c4 / conclude-01 :arg0 (p2 / person) :arg1 (t / thing :arg1-of (s / suitable-04 :arg2 (h / hat :mod (d / deletesnapc)))) :time (t2 / then)))
(s / state-01 :arg0 (h / house :poss (c / congress)) :arg1 (a / amend-01 :arg0 (a2 / and :op1 (p / person :arg0-of (r / represent-01 :arg1 (p2 / person :arg0-of (r2 / represent-01 :arg1 (c2 / command-02 :mod (c3 / central)))))) :op2 (p3 / person :arg0-of (r3 / represent-01 :arg1 (p4 / person :arg0-of (r4 / represent-01 :arg1 (p5 / person :arg0-of (c4 / command-02) :mod (c5 / central))))))) :arg1 (r5 / report-01 :arg1 (a3 / and :op1 (s2 / state :location (c6 / country)) :op2 (s3 / state :location (c7 / country))) :degree (m / more :degree (f / far)) :compared-to (i / it) :mod (a4 / actual))) :medium (s4 / statement :arg1-of (i2 / issue-01 :medium (u / url-entity :value (t / thursday)))))
(e / express-01 :arg0 (p / person :arg0-of (a / analyze-01 :arg1 (i / intelligence)) :mod (c / central)) :arg1 (e2 / express-01 :arg0 (p2 / person :arg0-of (a2 / analyze-01 :arg1 (i2 / intelligence)) :mod (c2 / central) :arg1-of (s / set-up-03 :arg0 (a3 / and :op1 (c3 / committee :mod (a4 / arm-01)) :op2 (c4 / committee :mod (i3 / intelligence)) :op3 (f / finance :mod (d / defense)))) :mod (i4 / interim)) :arg1 (r / report-01 :arg0 (a5 / and :op1 (c5 / committee) :op2 (c6 / committee) :op3 (f2 / finance :mod (d2 / defense)))) :arg0-of (i5 / indicate-01 :arg1 (s2 / succeed-01 :arg0 (p3 / person :arg0-of (l / lead-02) :mod (l2 / lead-02 :arg0 (p4 / person))) :arg1 (f3 / fight-01 :arg0 (p5 / person) :arg1 (s3 / state :mod (r2 / religious-group :name (n / name :op1 "N-A"))))))))
(t / tell-01 :arg0 (p / person :arg0-of (r / represent-01 :arg1 (o / organization :name (n / name :op1 "california" :op2 "republican"))) :arg0-of (h / have-org-role-91 :arg1 (o2 / organization) :arg3 (r2 / represent-01))) :arg1 (s / story) :arg2 (a / and :op1 (p2 / possible-01 :polarity - :arg1 (a2 / accept-01 :arg1 (a3 / action :poss (p3 / person :arg0-of (h2 / have-org-role-91 :arg2 (s2 / soldier)))))) :op2 (s3 / suffer-01 :arg0 (p4 / person :arg0-of (h3 / have-org-role-91 :arg2 (s4 / soldier))) :condition (g / get-01 :arg0 (p5 / person :arg0-of (h4 / have-rel-role-91 :arg1 (w / we) :arg2 (d / dd2))) :arg1 (r3 / report-01 :mod (f / false))))))
(t / take-01 :arg0 (c / company :arg0-of (w / win-01 :arg1 (p / place :ord (o / ordinal-entity :value 1)))) :arg1 (m / meet-03 :arg0 (c2 / company) :arg1 (p2 / person :arg0-of (l / lead-02 :arg1 (g / group :mod (o2 / other))) :arg1-of (s / strong-02))) :time (n / no-longer :mod (l2 / little)))
(g / game :arg1-of (d / dry-02 :ord (o / ordinal-entity :value 1)) :domain (t / this) :poss (s / state :arg0-of (c / check-01)) :location (e / each :arg1-of (i / include-91 :arg2 (g2 / game :quant 3 :mod (e2 / each)))))
(s / shuddered :mod (m / mr))
(d / disappeared :arg1 (d2 / diameter :poss (e / era :mod (d3 / depression)) :quant (m / most)) :time (a / as-soon-as :op1 (r / recover-01 :arg1 (e2 / economy :poss (c / country)))))
(g / gain-02 :arg0 (e / event) :arg1 (r / resonance :arg1-of (w / wide-02 :degree (q / quite)) :location (i / internet)) :mod (a / also) :location (i2 / internet :location-of (d / dubbed :arg0 (p / person) :arg1 (i3 / it))))
(b / begin-01 :arg1 (p / problem) :time (t / try-01 :arg0 (p2 / person :mod (c / country :name (n / name :op1 "N-A"))) :arg1 (k / kill-01 :arg0 (p3 / person) :arg1 (p4 / person :arg0-of (s / study-01))) :arg1-of (r / result-01 :arg2 (u / use-01 :arg0 (p5 / police) :arg1 (a / and :op1 (c2 / cat :mod (r2 / rubber)) :op2 (g / gas))))))
(p / play-02 :arg0 (a / athletes :mod (2 / 23-year-old)) :arg1 (r / role :mod (i / important) :topic (r2 / race)) :arg0-of (p2 / pride-01 :arg2 (r3 / race)) :arg0-of (p3 / pride-01 :arg1 (a2 / and :op1 (p4 / person :arg0-of (h / have-org-role-91 :arg2 (h2 / head-of-state))) :op2 (p5 / person :arg0-of (h3 / have-org-role-91 :arg2 (h4 / head-of-state))) :op3 (p6 / person :arg0-of (h5 / have-org-role-91 :arg2 (h6 / head-of-state))) :op4 (p7 / person :arg0-of (h7 / have-org-role-91 :arg2 (h8 / head-of-state))) :op5 (p8 / person :arg0-of (h9 / have-org-role-91 :arg2 (h10 / head-of-state))) :op5 (p9 / person :arg0-of (h11 / have-org-role-91 :arg2 (h12 / head-of-state))) :op6 (p10 / person :arg0-of (h13 / have-org-role-91 :arg2 (h14 / head-of-state))) :op7 (p11 / person :arg0-of (h15 / have-org-role-91 :arg2 (h16 / head-of-state))))))
(a / and :op1 (w / work-01 :arg0 (s / slaughterhouses :name (n / name :op1 (a2 / alpha)) :mod (a3 / alpha)) :arg1 (l / lose-02 :arg1 (s2 / slaughterhouses))) :op2 (p / possible-01 :arg1 (c / close-01 :arg1 (s3 / slaughterhouses))))
(m / multi-sentence :snt1 (n / need-01 :arg1 (c / compete-02 :arg3 (c2 / criteria :arg1-of (j / judge-01 :arg0 (c3 / candidate :quant (a / all)))) :arg1-of (c4 / clear-06 :degree (m2 / most)))) :snt2 (s / say-01 :arg0 (t / text :part-of (p / petition-01))))
(c / clear-06 :polarity - :arg1 (t / thing :arg1-of (i / intend-01 :arg0 (c2 / candidate)) :beneficiary (s / service :mod (r / revenue))))
(c / contrast-01 :arg1 (e / expect-01 :arg1 (a / approve-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (s / service :mod (r / revenue) :poss (p2 / person :arg0-of (h2 / have-org-role-91 :arg2 (m / minister :mod (f / finance)))) :arg2 (m2 / minister :mod (f2 / finance))))) :arg1 (p3 / post :mod (n / new)) :time (w / week :mod (l / last)))) :arg2 (v / vote-01 :arg0 (p4 / person :quant (a2 / all) :arg0-of (h3 / have-org-role-91 :arg1 (p5 / political-party :name (n2 / name :op1 "N-A")) :arg2 (m3 / minister :mod (g / general) :mod (u / unity))) :arg0-of (h4 / have-org-role-91 :arg1 (p6 / party) :arg2 (m4 / minister :mod (g2 / general))) :arg0-of (h5 / have-org-role-91 :arg1 (p7 / party) :arg2 (m5 / minister)) :arg0-of (h6 / have-org-role-91 :arg1 (p8 / party) :arg2 (m6 / minister)) :arg0-of (h7 / have-org-role-91 :arg1 (p9 / party) :arg2 (m7 / minister)) :arg0-of (h8 / have-org-role-91 :arg1 (p10 / party) :arg2 (m8 / minister)) :arg0-of (h9 / have-org-role-91 :arg1 (p11 / party) :arg2 (m9 / minister)) :arg0-of (h10 / have-org-role-91 :arg1 (p12 / party) :arg2 (m10 / minister)) :arg0-of (h11 / have-org-role-91 :arg1 (p13 / party) :arg2 (m11 / minister)) :arg0-of (h12 / have-org-role-91 :arg1 (p14 / party) :arg2 (m12 / minister)) :arg0-of (h13 / have-org-role-91 :arg1 (p15 / party) :arg2 (m13 / minister)) :arg0-of (h14 / have-org-role-91 :arg1 (p16 / party) :arg2 (m14 / minister)) :arg0-of (h15 / have-org-role-91 :arg1 (p17 / party) :arg2 (m15 / minister)) :arg0-of (h16 / have-org-role-91 :arg1 (p18 / party) :arg2 (m16 / minister)) :arg0-of (h17 / have-org-role-91 :arg1 (p19 / party) :arg2 (m17 / minister)) :arg0-of (h18 / have-org-role-91 :arg1 (p20 / party) :arg2 (m18 / minister)) :arg0-of (h19 / have-org-role-91 :arg1 (p21 / party) :arg2 (m19 / minister)) :arg0-of (h20 / have-org-role-91 :arg1 (p22 / party) :arg2 (m20 / minister)) :arg0-of (h21 / have-org-role-91 :arg1 (p23 / party) :arg2 (m21 / minister))) :duration (t / temporal-quantity :quant (N / N-A) :unit (w2 / week))))
(f / find-01 :arg0 (m / man :arg1-of (t / trap-01 :arg2 (m2 / man))) :arg1 (w / weapon :mod (g / gas) :arg1-of (f2 / find-01 :arg0 (m3 / man))))
(c / contrast-01 :arg1 (e / express-01 :arg0 (s / she) :arg1 (o / option :polarity - :arg1-of (e2 / easy-05 :arg1-of (e3 / easy-05 :polarity -)) :domain (i / it))) :arg2 (e4 / experience-01 :arg0 (p / person :arg0-of (h / have-rel-role-91 :arg1 (s2 / she) :arg2 (r / relative))) :arg1 (p2 / pressure-01 :mod (e5 / emotional) :mod (s3 / serious)) :concession (c2 / carry-out-03 :polarity - :arg0 (p3 / person) :arg1 (a / act-02 :mod (r2 / reprehensible) :mod (a2 / any))) :time (w / week :mod (l / last))))
(s / say-01 :arg0 (t / thing :arg1-of (r / report-01 :arg0 (t2 / thing :arg1-of (r2 / report-01 :arg0 (c / company))))) :arg1 (w / work-01 :arg0 (c2 / company) :arg1-of (c3 / cause-01 :arg0 (r3 / reason :quant (s2 / several) :arg2-of (i / include-01 :arg1 (s3 / short-06 :arg1 (a / and :op1 (w2 / withdraw-01 :arg1 (b / bank :name (n / name :op1 (u / unicredit))) :arg2 (m / market :name (n2 / name :op1 (b2 / baltic)))) :op2 (i2 / interrupting :arg1 (l / line :mod (c4 / credit-02) :arg1-of (e / exist-01))) :op3 (l2 / leave-13 :arg1 (b3 / belt :name (n3 / name :op1 (b4 / blue))) :manner (c5 / contract-02 :polarity - :arg1 (c6 / contract-02 :arg0 (b5 / blue))))))))) :location (c7 / company :quant 2015)))
(p / prevent-01 :arg0 (w / withdraw-01 :arg1 (b / bank) :arg2 (b2 / bank)) :arg1 (c / company) :arg2 (i / implement-01 :arg0 (c2 / company) :arg1 (p2 / project :arg0-of (s / support-01 :arg1 (g / government-organization :arg0-of (g2 / govern-01 :arg1 (c3 / continent :name (n / name :op1 "N-A"))))) :arg0-of (a / allow-01 :arg1 (p3 / purchase-01 :arg0 (f / factory) :arg1 (a2 / and :op1 (e / equipment :mod (p4 / produce-01) :mod (n2 / new)) :op2 (i2 / infrastructure :mod (m / modernise)) :mod (n3 / new)))))) :mod (a3 / also))
(a / and :op1 (p / possible-01 :arg1 (m / meet-03 :mod (t / this)) :time (d / during :op1 (s / show-04))) :op2 (f / feel-01 :arg0 (p2 / person :arg0-of (h / have-org-role-91 :arg2 (k / kerivica :mod (i / iva))) :arg1-of (e / excellent-02)) :arg1 (a2 / and :op1 (p3 / person :quant 2016) :op2 (r / role :arg1-of (e2 / excellent-02) :mod (z / zar)))))
(a / and :op1 (c / continue-01 :arg1 (c2 / cool :arg1 (t / temperature :mod (w / water))) :time (t2 / time :arg1-of (c3 / cool-04))) :op2 (b / be-located-at-91 :arg1 (a2 / and :op1 (r / rivers :quant (a3 / all)) :op2 (a4 / and :op1 (r2 / rivers) :op2 (l / lake)) :quant (a5 / all)) :arg2 (b2 / below :op1 (s / sea))) :op3 (s2 / say-01 :arg0 (d / data) :arg1 (d2 / data :source (a6 / and :op1 (e / environment :mod (l2 / latvian)) :op2 (g / gearbox) :op3 (c4 / centre :mod (m / meteorology))))))
(l / look-01 :arg0 (p / police :mod (b / berkshire) :poss (c / city)) :arg1 (a / attacker :arg0-of (a2 / abuse-01 :arg1 (g / girl :quant 2 :mod (s / six-year-old)) :manner (s2 / sexual) :location (p2 / park :mod (e / entertainment))) :arg0-of (' / '' :arg1 (m / mail :mod (d / day) :arg1-of (r / report-01)))))
(s / study-01 :arg0 (u / unit :mod (v / vocal) :part-of (m / music :mod (m2 / music) :mod (a / academy :mod (m3 / music)))) :location (u2 / unit :mod (v2 / vocal) :part-of (m4 / music)))
(s / say-01 :arg0 (n / news :mod (b / bloomberg)) :arg1 (c / carry-out-03 :arg0 (p / person :arg0-of (h / hack-04) :mod (s2 / same) :arg0-of (h2 / hack-04) :arg0-of (h3 / hack-04 :arg1 (d / dnc))) :arg1 (a / attack-01 :mod (c2 / cyber) :mod (t / this))))
(c / contrast-01 :arg1 (a / admit-01 :arg0 (p / person :arg0-of (a2 / author-01) :arg0-of (a3 / author-01 :arg1 (s / submarine :mod (y / yellow) :mod (' / '')))) :arg1 (a4 / and :op1 (c2 / contact-01 :arg0 (p2 / person :arg0-of (h / have-org-role-91 :arg1 (g / group) :arg2 (m / member) :time (f / former)) :arg0-of (h2 / have-org-role-91 :arg1 (g2 / group) :arg2 (m2 / member))) :arg1 (h3 / he) :arg1-of (r / regular-02) :time (n / now)) :op2 (a5 / approve-01 :arg0 (p3 / person :arg0-of (a6 / author-01 :arg1 (s2 / studio :arg1-of (r2 / record-01)))) :arg1 (p4 / plan-01 :arg1 (w / work-01 :arg1 (s3 / studio :arg1-of (r3 / record-01)))) :frequency (o / occasional))) :mod (a7 / also)) :arg2 (h4 / have-03 :arg0 (p5 / person :arg0-of (a8 / author-01)) :arg1 (w2 / work-01 :arg0 (p6 / person))))
(r / recommend-01 :arg1 (p / possible-01 :arg1 (i / influence-01 :arg0 (h / he) :arg1 (t / thing :arg1-of (r2 / relate-01 :arg2 (p2 / perform-01 :arg0 (t2 / team))))) :mod (a / also)))
(a / and :op1 (a2 / appreciate-02 :arg0 (w / we) :arg1 (e / everything :arg1-of (o / organize-01))) :op2 (w2 / wish-01 :arg0 (w3 / we) :arg1 (g / good :degree (m / most) :domain (h / he) :time (f / future))))
(m / multi-sentence :snt1 (g / get-01 :arg0 (w / winds) :arg1 (s / star :location (f / field :mod (r / reverse-01)))) :snt2 (h / have-03 :arg0 (t / they) :arg1 (b / brake-01) :location (s2 / star)))
(t / tell-01 :arg0 (p / publication :name (n / name :op1 "N-A")) :arg1 (h / help-01 :arg0 (s / star :poss (p2 / person :arg0-of (h2 / have-rel-role-91 :arg2 (b / brother)))) :arg1 (b2 / build-01 :arg0 (p3 / person) :arg1 (m / model :mod (t2 / theoretical)) :purpose (s2 / star :mod (s3 / star))) :location (d / direction :mod (b3 / both))) :arg2 (w / we))
(t / think-01 :arg0 (w / we) :arg1 (a / and :op1 (p / person :arg0-of (h / have-rel-role-91 :arg1 (w2 / we) :arg2 (f / friend))) :op2 (f2 / family :arg1-of (h2 / have-org-role-91 :arg0 (w3 / we) :arg2 (m / member)))) :time (d / difficult :mod (t2 / this)))
(p / promise-01 :arg0 (h / he) :arg1 (i / improve-01 :arg0 (r / relation-03 :arg0 (c / country :name (n / name :op1 "Russia")) :arg2 (c2 / country)) :arg1 (l / level :mod (p2 / pre-crisis) :mod (o / only :polarity -)) :concession (h2 / high-02 :arg1 (r2 / relation-03) :degree (m / more :mod (e / even)))) :mod (a / also))
(c / change-01 :arg1 (p / position-02 :arg0 (c2 / country :name (n / name :op1 "Russia")) :arg1-of (p2 / public-02)) :time (s / since :op1 (n2 / november)))
(c / clear-06 :arg0 (g / gain-02 :arg0 (l / location :name (n / name :op1 "ankara")) :arg1 (r / reconciliation :mod (p / peace))) :arg1 (e / everyone))
(w / win-01 :arg0 (p / person :name (n / name :op1 "N-A") :arg0-of (w2 / win-01 :arg2 (d / detori))) :time (a / after :op1 (w3 / win-01 :quant (5 / 5-1) :arg0 (p2 / person) :arg2 (r / rate-entity-91 :arg1 (u / under :op1 (52 / 5-1)) :arg2 (t / temporal-quantity :quant (N / N-A) :unit (y / year))))))
(j / jockey :ord (o / ordinal-entity :value 6) :arg0-of (f / fight-01 :arg2 (r / race :mod (s / sprinta :mod (h / horse)))) :domain (4 / 45-year-old :ord (o2 / ordinal-entity :value 6)))
(a / and :op1 (f / feel-01 :arg0 (i / i) :arg1 (r / relieved)) :op2 (a2 / appreciate-02 :arg0 (i2 / i) :degree (v / very)))
(a / appoint-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg2 (d / deputy))) :arg1 (p2 / person :arg0-of (h2 / have-org-role-91 :arg2 (d2 / deputy)) :arg1-of (c / charge-05 :arg2 (p3 / person :arg0-of (h3 / have-org-role-91 :arg2 (d3 / deputy)))) :arg0-of (h4 / have-org-role-91 :arg2 (d4 / deputy))) :arg1-of (i / instead-of-91))
(h / have-org-role-91 :arg0 (h2 / he) :arg1 (a / and :op1 (o / organization :name (n / name :op1 "Security" :op2 "Council")) :op2 (p / person :arg0-of (h3 / have-org-role-91 :arg1 (c / country :name (n2 / name :op1 "N-A")) :arg2 (o2 / officer :mod (s / security :mod (n3 / nation))) :time (f / former))) :op3 (o3 / officer :mod (s2 / security :mod (n4 / nation)) :arg1-of (r / resemble-01 :arg2 (p2 / putin)))))
(t / tell-01 :arg0 (p / person :name (n / name :op1 "N-A") :arg0-of (h / have-org-role-91 :arg2 (i / investigator))) :arg1 (l / likely-01 :arg1 (i2 / involve-01 :arg1 (g / gun) :arg2 (s / shooters :quant (n2 / number)))) :arg2 (c / cbs))
(n / need-01 :arg0 (w / we) :arg1 (a / and :op1 (a2 / avenue) :op2 (g / gabia) :op3 (l / lauria)) :arg1-of (c / cause-01 :arg0 (a3 / amr-unknown)))
(e / enter-01 :arg0 (a / and :op1 (s / simona) :op2 (g / gabija) :op3 (l / laurija)) :arg1 (t / team :mod (o / olympic) :example (a2 / and :op1 (a3 / alija) :op2 (m / medisona))))
FAILED_TO_PARSE#Number of opening and closing brackets doesn't match.
FAILED_TO_PARSE#Number of opening and closing brackets doesn't match.
(a / and :op1 (g / go-02 :arg0 (s / she) :purpose (l / look-01 :arg0 (s2 / she) :arg1 (a2 / and :op1 (c / clothing :mod (b / bouverie)) :op2 (c2 / centre :purpose (s3 / shop-01) :location (f / folkeston))))) :op2 (h / have-03 :arg0 (s4 / she) :arg1 (b2 / biks :quant 4 :mod (a3 / another))))
(a / and :op1 (o / obligate-01 :arg2 (a2 / and :op1 (p / put-01 :arg1 (p2 / pressure-01) :arg2 (w / weapon)) :op2 (t / take-01 :arg0 (p3 / pressure-01) :arg1 (b / blow-14 :arg1 (h / he) :arg2 (o2 / over :op1 (b2 / breast))))) :time (t2 / time :arg1-of (s / same-01))) :op2 (t3 / take-01 :arg0 (p4 / pressure-01) :arg1 (a3 / and :op1 (g / gun :poss (h2 / he)) :op2 (s2 / step-01 :arg1 (h3 / he) :arg2 (p5 / play-11 :arg0 (h4 / he) :arg2 (h5 / he)))) :time (f / final)))
(s / say-01 :arg0 (p / person :name (n / name :op1 "donna" :op2 "makevoja") :arg0-of (h / house-01) :arg0-of (h2 / house-01)) :arg1 (c / concern-01 :polarity - :arg0 (h3 / house-01)))
(a / and :op1 (r / raid-01 :arg0 (p / police) :arg1 (h / house)) :op2 (f / find-01 :arg0 (p2 / police) :arg1 (h2 / house)) :op3 (f2 / find-01 :arg0 (p3 / police) :arg1 (a2 / and :op1 (r2 / rifle :quant (m / more-than :op1 (m2 / mass-quantity :quant (N / N-A) :unit (g / gram)))) :op2 (m3 / mass-quantity :quant (N2 / N-A) :unit (p4 / pound)) :op3 (m4 / mass-quantity :quant (N3 / N-A) :unit (p5 / pound)) :op4 (m5 / monetary-quantity :quant 1700 :unit (p6 / pound)))))
(b / buy-01 :arg0 (c / company) :arg1 (m / monetary-quantity :quant (N / N-A) :unit (e / euro)) :arg3 (e2 / equipment :mod (s / sawing)))
(i / implement-01 :arg0 (s / service :mod (r / rural) :mod (r2 / rural)) :arg1 (p / purchase-01))
(c / contrast-01 :arg1 (e / expect-01 :arg1 (e2 / enter-01 :arg0 (g / group :name (n / name :op1 (s / shikari) :op2 (' / '') :op3 ('2 / '')) :mod (s2 / such)) :arg1 ('3 / '' :source (c2 / country :name (n2 / name :op1 "N-A") :arg1-of (e3 / expect-01 :time (y / year :mod (l / last))))) :source (c3 / country :name (n3 / name :op1 "N-A")) :arg1-of (e4 / expect-01 :time (y2 / year :mod (l2 / last))))) :arg2 (m / maxim :arg0 (p / panki :name (n4 / name :op1 (p2 / panki) :op2 (p3 / panki) :op3 (d / dj) :op4 (d2 / dj) :op5 (d3 / dj) :op6 (d4 / dj) :op7 (d5 / dj))) :arg1 (m2 / maxim :source (g2 / group))))
(c / cause-01 :arg0 (s / suspect-01 :polarity - :arg1 (o / or :op1 (i / irregularities) :op2 (c2 / corrupt-01))) :arg1 (l / live-01 :arg1 (l2 / life :mod (p / peaceful))))
(p / possible-01 :arg1 (r / remove-01 :arg1 (p2 / person :mod (c / country :name (n / name :op1 "N-A"))) :arg2 (l / list :consist-of (a / athletes :arg1-of (b / ban-01))) :time (y / year :mod (t / this))))
(p / perched :polarity - :arg1 (w / we) :arg2 (t / they) :arg1-of (c / cause-01 :arg0 (a / and :op1 (f / flee-05 :arg0 (t2 / they) :arg2 (p2 / pitch :arg1-of (f2 / fleeing :arg0 (t3 / they) :arg2 (c2 / civilian)))) :op2 (p3 / picked :arg0 (t4 / they) :arg1 (c3 / civilian)) :op3 (h / have-org-role-91 :arg0 (h2 / he) :arg1 (c4 / council :mod (m / military)) :arg2 (s / spokesman)))))
(i / include-91 :arg1 (p / person :arg0-of (h / have-org-role-91 :arg2 (h2 / head-of-state))) :arg2 (v / victim :mod (n / new) :part-of (w / wall :mod (b / berlin))))
(c / contrast-01 :arg2 (s / significant-02 :arg1 (i / it) :mod (s2 / still) :arg1-of (s3 / significant-02) :mod (s4 / still)))
(t / tell-01 :arg0 (p / person :mod (c / country :name (n / name :op1 "N-A")) :mod (b / both)) :arg1 (c2 / cause-01 :arg0 (a / amr-unknown) :arg1 (b2 / be-located-at-91 :arg1 (h / he) :arg2 (o / olympics) :arg1-of (c3 / cause-01 :arg0 (l / likely-01 :arg1 (o2 / owe-01 :arg1 (h2 / he) :arg2 (j / jakubovsky)))))) :arg2 (w / we) :degree (t2 / total))
(r / report-01 :arg1 (l / lose-02 :arg1 (w / weight :poss (u / up-to :op1 (u2 / up-to :op1 (m / mass-quantity :quant (N / N-A) :unit (k / kilogram))))) :arg2 (f / fight-01 :arg0 (h / he) :arg2 (f2 / famous :location (b / borodavko :mod (j / jevgeny))) :ord (o / ordinal-entity :value 1))) :arg1-of (r2 / report-01))
(s / say-01 :arg0 (p / person :arg0-of (p2 / play-01 :arg1 (t / thing :arg1-of (g / gift-01 :arg2 (p3 / person :arg0-of (h / have-rel-role-91 :arg1 (p4 / person :arg0-of (h2 / have-rel-role-91 :arg1 (p5 / person :arg0-of (h3 / have-rel-role-91 :arg2 (b / brother))) :arg2 (b2 / brother))) :arg2 (r / rugby-15)))) :arg0-of (h4 / have-rel-role-91 :arg1 (p6 / person) :arg2 (b3 / brother)))) :arg0-of (h5 / have-rel-role-91 :arg1 (p7 / person) :arg2 (b4 / brother))) :arg1 (a / and :op1 (w / win-01 :arg0 (t2 / team) :arg2 (a2 / and :op1 (w2 / win-01 :arg0 (t3 / team)) :op2 (s2 / silver :mod (a3 / another) :mod (s3 / silver))) :arg1-of (e / excellent-02))))
(d / difficult :domain (a / achieve-01 :arg0 (o / objective :mod (t / this)) :arg1 (a2 / and :op1 (a3 / agree-01 :arg0 (p / party) :arg1 (c / consult-01 :arg0 (p2 / party) :arg1 (g / government-organization))) :op2 (l / likely-01 :arg1 (o2 / obligate-01 :arg1 (p3 / party) :arg2 (h / hold-01 :arg0 (p4 / party) :arg1 (e / elect-01 :mod (p5 / parliamentary) :mod (e2 / early)) :time (a4 / after :op1 (n / now) :duration (o3 / ordinal-entity :value 3))) :arg1-of (p6 / possible-01)) :arg1-of (i / increase-01 :arg1-of (i2 / increase-01)))) :mod (p7 / particular)) :mod (p8 / particular))
(c / conclude-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg2 (a / activist))) :arg1 (i / increase-01 :arg1 (n / number :quant-of (r / rubbish :arg1-of (l / leave-11 :arg0 (p2 / population :arg1-of (i2 / include-91 :arg2 (p3 / person :arg0-of (h2 / have-org-role-91 :arg2 (a2 / activist)))))))) :time (y / year :ord (o / ordinal-entity :value 5) :part-of (w / walk-01 :location (a3 / along :op1 (r2 / road))))))
(c / contrast-01 :arg1 (p / possible-01 :arg1 (w / warn-01 :mod (n / new) :quant (s / some)) :arg1-of (p2 / possible-01)) :arg2 (t / think-01 :arg0 (i / i) :arg1 (t2 / think-01 :arg0 (i2 / i) :arg1 (c2 / change-01 :arg0 (t3 / this) :arg1 (s2 / situation)) :degree (t4 / total))))
(c / contrast-01 :arg2 (h / highlight-01 :arg1 (p / post :mod (i / important :degree (v / very)) :domain (a / administrate-01 :arg0 (g / government-organization :arg0-of (a2 / administrate-01 :arg1 (p2 / president))) :arg1 (p3 / person :quant 1 :arg1-of (i2 / include-91 :arg2 (p4 / person :arg0-of (i3 / influence-01 :degree (m / most)) :location (c2 / country))))))))
(c / cause-01 :arg1 (c2 / conclude-01 :arg0 (r / race :mod (s / sparring) :poss (c3 / country :name (n / name :op1 "Ireland")))))
(f / find-01 :arg1 (p / part :part-of (b / beach)) :location (h / hotel :location (k / kopakaban)) :arg1-of (r / resemble-01))
(j / justify-01 :arg1 (r / risk-01) :time (t / this))
(c / contrast-01 :arg1 (s / safe-01 :arg1 (i / island :name (n / name :op1 "N-A")) :extent (e / enough :mod (f / favelas))) :arg2 (r / recommend-01 :polarity - :arg1 (b / be-located-at-91 :arg1 (v / vigilance :poss (l / lose-02)) :arg2 (h / here) :mod (t / too))))
FAILED_TO_PARSE#Two concepts in a row.
(r / report-01 :arg1 (h / held :arg0 (c / culture :name (n / name :op1 (v / vef) :op2 (c2 / culture) :op3 (c3 / culture)) :mod (c4 / culture)) :arg1 (g / gig :mod (f / farewell)) :time (b / before :op1 (n2 / now) :quant (m / more-than :op1 (t / temporal-quantity :quant (N / N-A) :unit (y / year)))) :time (b2 / before :op1 (n3 / now) :quant (m2 / more-than :op1 (t2 / temporal-quantity :quant (N2 / N-A) :unit (y2 / year)))) :manner (c5 / collective) :time (b3 / before :op1 (a / anticipate-01 :arg1 (s / settle-02 :arg1 (b4 / building)) :time (i / immediate)))))
FAILED_TO_PARSE#Two concepts in a row.
(e / exhibit-01 :arg1 (e2 / exhibit-01) :source (c / company :name (n / name :op1 "N-A") :quant (b / between :op1 19 :op2 30)))
(i / include-91 :arg1 (p / product-of :op1 2015 :op2 2016) :arg2 (p2 / product-of :op1 2015 :op2 2016) :time (a / after :op1 (p3 / pci :arg1 (p4 / product-of :op1 2015 :op2 2016) :arg1-of (c / compare-01 :arg2 (y / year :mod (p5 / previous))) :arg1-of (c2 / compare-01 :arg2 (y2 / year :mod (p6 / previous))))))
(w / write-01 :arg0 (i / it) :arg1 (u / ushakov :arg1 (r / risk-01 :arg2 (r2 / risk-01 :arg2 (d / damage-01)) :mod (a / any)) :arg1-of (c / contrast-01 :arg2 (l / look-02 :arg0 (a2 / and :op1 (' / '') :op2 ('2 / '')) :arg1 (l2 / lashes :arg0 (a3 / and))))) :medium (p / page :mod (t / this) :mod (f / facebook)) :mod (a4 / also))
(a / and :op1 (c / contain-01 :arg0 (a2 / and :op1 (p / person :arg0-of (h / have-org-role-91 :arg2 (s / scientist :mod (c2 / canadian)))) :op2 (p2 / person :arg0-of (h2 / have-org-role-91 :arg2 (s2 / scientist :mod (c3 / canadian))))) :arg1 (f / fibre :arg1-of (c4 / control-01 :arg0 (p3 / person :arg0-of (h3 / have-org-role-91 :arg2 (s3 / scientist)))))) :op2 (c5 / cause-01 :arg0 (g / greens) :arg1 (s4 / sense-01 :arg0 (p4 / person) :arg1 (h4 / hunger-01 :arg0 (p5 / person)))))
(o / or :op1 (m / monosaccharides :arg1 (f / fruit)) :op2 (d / disaccharides :quant (o2 / or :op1 1 :op2 2)) :domain (f2 / fruit))
(l / lie-08 :arg0 (p / person :arg0-of (l2 / lead-02 :arg1 (t / top :arg1-of (o / organize-01)))) :mod (m / manage-01))
(d / detail-01 :arg0 (r / report :mod (t / this) :topic (a / and :op1 (c / cover-03 :arg1 (c2 / command-02 :mod (c3 / central))) :op2 (a2 / analyze-01 :arg1 (e / effort :mod (c4 / country :name (n / name :op1 "N-A"))) :purpose (p / prepare-01 :arg0 (c5 / country) :arg1 (f / force :mod (c6 / country)) :location (a3 / and :op1 (t2 / talk-02 :arg2 2014) :op2 (f2 / force :quant 2015)))))) :manner (d2 / detail-01))
(s / say-01 :arg0 (p / person :arg0-of (r / represent-01 :arg1 (d / democrat)) :mod (d2 / democrat)) :arg1 (l / limit-01 :arg1 (r2 / report-01 :arg0 (i / intelligence) :arg1 (r3 / relate-01 :arg1 (r4 / report-01 :arg1 (r5 / relate-01 :arg2 (a / and :op1 (i2 / isis) :op2 (f / force :mod (s2 / security) :mod (c / country :name (n / name :op1 "N-A")))))) :arg2 (i3 / intelligence))) :arg2 (t / thing :arg1-of (r6 / report-01 :arg0 (h / he)))) :medium (r7 / report :poss (h2 / he)))
(p / play-02 :arg0 (c / country :name (n / name :op1 "N-A")) :arg1 (r / role :arg1-of (s / significant-02) :topic (o / open-01 :arg1 (i / issue-02 :arg0 (i2 / intelligence :mod (s2 / state) :mod (s3 / state))))) :mod (a / also))
(p / prepare-02 :arg0 (w / woman) :arg1 (w2 / woman) :arg2 (e / eat-01 :arg0 (w3 / woman) :arg1 (a / and :op1 (h / husbands-workers :poss (w4 / woman)) :op2 (s / swim-01 :arg0 (w5 / woman)) :op3 (d / dinner :arg0 (w6 / woman) :arg1 (w7 / woman))) :arg0-of (c / cause-01 :arg1 (p2 / prepare-02 :arg1 (w8 / woman) :arg2 (s2 / sacepings :arg1-of (f / fresh-04))))))
(a / and :op1 (d / disprove-01 :arg0 (t / they) :arg1 (h / hostage :quant (m / more-than :op1 2000) :mod (c / civilian) :arg1-of (c2 / capture-01 :arg0 (g / gunman)) :arg1-of (c3 / capture-01 :arg0 (g2 / gunman)))) :op2 (t2 / tell-01 :arg0 (g3 / gunman) :arg1 (a2 / ally-01 :arg1 (c4 / council :mod (n / news) :mod (s / sds)) :arg2 (c5 / council :mod (n2 / news)))))
(c / cite-01 :arg0 (a / and :op1 (p / person :arg0-of (h / have-org-role-91 :arg2 (t / trumps :mod (b / business-maker)))) :op2 (p2 / person :arg0-of (h2 / have-rel-role-91 :arg1 (h3 / he) :arg2 (l / lawyer))) :op3 (p3 / person :arg0-of (h4 / have-rel-role-91 :arg1 (h5 / he) :arg2 (l2 / lawyer))) :op4 (p4 / person :arg0-of (h6 / have-rel-role-91 :arg1 (h7 / he) :arg2 (l3 / lawyer))) :op5 (p5 / person :arg0-of (h8 / have-rel-role-91 :arg1 (h9 / he) :arg2 (l4 / lawyer)))) :arg1 (a2 / audit-01 :arg1 (s / service :mod (n / nation))))
(c / call-03 :arg0 (p / person :name (n / name :op1 "N-A") :arg1-of (c2 / called :arg2 (n2 / name :op1 (h / hathaway) :op2 (h2 / hathaway)))) :arg1 (t / trumps :arg0 (p2 / person) :arg1 (t2 / thing :arg1-of (t3 / tax-01))) :time (w / week :mod (l / last)) :time (a / appear-01 :arg1 (c3 / country :name (n3 / name :op1 "N-A")) :location (o / omah)))
(s / say-01 :arg0 (p / person :name (n / name :op1 "N-A")) :arg1 (a / and :op1 (c / carry-out-03 :arg0 (a2 / audit-01 :arg1 (r / revenue)) :arg1 (h / he) :mod (a3 / also)) :op2 (f / fear-01 :arg0 (p2 / person :arg0-of (h2 / have-org-role-91 :arg2 (a4 / authority :mod (t / tax)))) :arg1 (p3 / person))))
(v / victories :polarity - :mod (g / good :degree (m / more)))
(t / time :quant 3)
(b / blessing :domain (p / parade-02 :arg1-of (b2 / become-01 :arg2 (t / tradition) :mod (a / also)) :arg0-of (g / go-06 :arg1 (a2 / and :op1 (t2 / tractors) :op2 (m / motorcycles) :mod (b3 / both)))))
(i / incident :time-of (p / place-01 :arg1 (i2 / incident) :time (a / after :op1 (s / shave-01 :arg0 (i3 / incident) :arg2 (r / road :mod (a2 / a1) :arg1-of (n / near-02 :arg2 (m / morges :mod (v / vo))))))))
(a / and :op1 (' / '' :arg0 (t / thing :arg1-of (d / decide-01)) :arg1 (m / market :mod (g / gas))) :op2 (e / establish-01 :arg1 (f / framework :arg1-of (l / legal-02))) :op3 (e2 / establish-01 :arg1 (f2 / framework :arg1-of (l2 / legal-02))))
(t / talk-01 :arg0 (w / we) :arg1 (c / change-01 :arg0 (w2 / we) :arg1 (t2 / term)) :time (w3 / week :mod (j / just) :mod (j2 / just)))
(s / say-01 :arg0 (h / he) :arg1 (l / lead-03 :arg0 (d / discuss-01 :arg1 (c / candidacy :poss (s2 / she))) :arg2 (c2 / controversy :arg1-of (p / possible-01 :polarity - :mod (a / also)))) :mod (a2 / also))
(c / cause-01 :arg0 (r / rise-01 :arg1 (i / index :mod (e / exchange-01 :arg1 (s / stock)) :location (c2 / continent :name (n / name :op1 "N-A")))) :arg1 (r2 / rise-01 :arg1 (m / monetary-quantity :arg2-of (p / price-01 :arg1 (o / oil)) :arg1-of (s2 / strong-02))) :mod (a / also))
(c / contrast-01 :arg1 (e / expect-01 :arg1 (t / thing :arg1-of (o / opine-01 :arg0 (t2 / thing :arg1-of (o2 / opine-01 :arg0 (t3 / thing :arg1-of (o3 / opine-01 :arg0 (t4 / thing :arg1-of (o4 / opine-01 :arg0 (t5 / thing :arg1-of (o5 / opine-01 :arg0 (t6 / thing :arg1-of (o6 / opine-01 :arg0 (t7 / thing :arg1-of (o7 / opine-01 :arg0 (t8 / thing :arg1-of (o8 / opine-01 :arg0 (t9 / thing :arg1-of (o9 / opine-01 :arg0 (t10 / thing :arg1-of (o10 / opine-01 :arg0 (t11 / thing :arg1-of (o11 / opine-01 :arg0 (t12 / thing :arg1-of (o12 / opine-01 :arg0 (t13 / thing :arg1-of (o13 / opine-01 :arg0 (t14 / thing :arg1-of (o14 / opine-01 :arg0 (t15 / thing :arg1-of (o15 / opine-01 :arg0 (t16 / thing :arg1-of (o16 / opine-01 :arg0 (t17 / thing :arg1-of (o17 / opine-01 :arg0 (t18 / thing :arg1-of (o18 / opine-01 :arg0 (t19 / thing :arg1-of (o19 / opine-01 :arg0 (t20 / thing :arg1-of (o20 / opine-01 :arg0 (t21 / thing :arg1-of (o21 / opine-01 :arg0 (t22 / thing :arg1-of (o22 / opine-01 :arg0 (t23 / thing :arg1-of (o23 / opine-01 :arg0 (t24 / thing :arg1-of (o24 / opine-01 :arg0 (t25 / thing :arg1-of (o25 / opine-01 :arg0 (t26 / thing :arg1-of (o26 / opine-01 :arg0 (t27 / thing :arg1-of (o27 / opine-01 :arg0 (t28 / thing :arg1-of (o28 / opine-01 :arg0 (t29 / thing :arg1-of (o29 / opine-01 :arg0 (t30 / thing :arg1-of (o30 / opine-01 :arg0 (p / person)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
FAILED_TO_PARSE#Number of opening and closing brackets doesn't match.
(t / tell-01 :arg0 (h / he) :arg1 (g / good :domain (t2 / they) :mod (r / really)) :arg2 (t3 / tell-01 :arg0 (p / person :arg0-of (s / sing-01)) :arg1 (g2 / good :domain (p2 / person) :degree (r2 / really))) :time (a / ask-01 :arg0 (p3 / person) :arg1 (r3 / relation-03 :arg0 (p4 / person) :arg2 (p5 / person :quant 2))))
(a / accuse-01 :arg1 (p / person :arg1-of (a2 / accuse-01 :arg2 (h / have-03 :arg0 (p2 / person) :arg1 (d / dag :poss (p3 / person))))) :arg2 (b / back :part-of (p4 / person)))
(b / broadcast-01 :arg0 (t / television :name (n / name :op1 (g / government-controlled) :op2 (t2 / television)) :mod (t3 / television)) :arg1 (a / assassination :mod (v / violent) :prep-against (a2 / ankara)) :duration (s / several :op1 (t4 / temporal-quantity :quant (N / N-A) :unit (m / month))))
(c / cause-01 :arg0 (t / thing :arg2-of (s / sanction-02 :arg0 (c2 / country :name (n / name :op1 "N-A")))) :arg1 (l / lose-02 :arg1 (t2 / thing :arg2-of (s2 / sanction-02 :arg0 (c3 / country :name (n2 / name :op1 "N-A")))) :mod (m / massive) :arg1-of (c4 / cause-01 :arg0 (p / provide-01 :arg0 (r / rule :arg1-of (r2 / rule-03 :arg0 (r3 / rule))) :arg1 (p2 / person :arg0-of (t3 / tour-01) :mod (a / ammonium :quant (s3 / several)) :mod (c5 / country)) :arg2 (t4 / temporal-quantity :quant (N / N-A) :unit (y / year))) :mod (p3 / particular))))
(n / name-02 :arg0 (h / he) :arg1 (t / thing :arg1-of (i / include-91 :arg2 (p / person :quant 5))) :arg2 (p2 / person :quant 5 :arg1-of (t2 / trust-01 :arg0 (h2 / he))) :time (c / come-12 :arg1 (p3 / power-01 :arg0 (h3 / he))))
(g / get-03 :arg1 (b / billsa :mod (s / simona)) :arg2 (w / woman))
(a / adopt-01 :arg0 (g / girl :arg1-of (a2 / adopt-01 :arg0 (p / person :arg0-of (h / have-rel-role-91 :arg1 (g2 / girl) :arg2 (g3 / grandparents))))) :arg1 (g4 / girl :arg0-of (h2 / have-rel-role-91 :arg1 (g5 / girl) :arg2 (g6 / grandparents))) :time (a3 / and :op1 (b / baby :arg0-of (h3 / have-rel-role-91 :arg1 (g7 / girl) :arg2 (c / child))) :op2 (p2 / person :arg0-of (h4 / have-rel-role-91 :arg1 (g8 / girl) :arg2 (m / mother))) :op3 (p3 / person :arg0-of (h5 / have-rel-role-91 :arg1 (g9 / girl) :arg2 (m2 / mother))) :op4 (p4 / person :arg0-of (h6 / have-rel-role-91 :arg1 (g10 / girl) :arg2 (m3 / mother))) :op5 (p5 / person :arg0-of (h7 / have-rel-role-91 :arg1 (g11 / girl) :arg2 (m4 / mother))) :op6 (p6 / person :arg0-of (h8 / have-rel-role-91 :arg1 (g12 / girl) :arg2 (m5 / mother))) :op6 (p7 / person :arg0-of (h9 / have-rel-role-91 :arg1 (g13 / girl) :arg2 (m6 / mother))) :op7 (p8 / person :arg0-of (h10 / have-rel-role-91 :arg1 (g14 / girl) :arg2 (m7 / mother)))))
(m / multi-sentence :snt1 (s / sport :mod (e / expensive) :domain (s2 / sport :arg1-of (p / practice-01))) :snt2 (a / and :op1 (t / train-01 :arg0 (p2 / person :arg0-of (p3 / pay-01 :arg3 (c / club :name (n / name :op1 (w / workouts)) :arg1-of (p4 / private-03))) :arg0-of (h / have-rel-role-91 :arg1 (p5 / person) :arg2 (p6 / parent))) :arg2 (c2 / club :name (n2 / name :op1 (- / -lrb-)) :arg1-of (p7 / private-03))) :op2 (s3 / support-01 :arg0 (p8 / person :arg0-of (h2 / have-rel-role-91 :arg1 (p9 / person) :arg2 (p10 / parent))) :arg1 (a2 / and :op1 (p11 / person :arg0-of (p12 / pay-01 :arg3 (w2 / workouts))) :op2 (p13 / person :arg0-of (p14 / pay-01 :arg3 (a3 / and :op1 (w3 / workouts) :op2 (r / room) :op3 (u / uniforms) :op4 (u2 / uniforms) :op5 (u3 / uniforms) :op6 (h3 / hotel) :op7 (m2 / monetary-quantity :arg1-of (e2 / expend-01) :mod (o / other)))))))))
(c / contrast-01 :arg2 (r / recommend-01 :arg1 (u / use-01 :arg0 (y / you) :arg1 (p / prepare-02 :mod (t / this)) :time (d / date-entity :year (N / N-A)) :time (a / after :op1 (a2 / attack-01 :arg0 (h / heart) :arg1 (r2 / risk-01 :arg2 (d2 / disease :mod (c2 / cardiovascular))) :degree (f / further))))))
(m / multi-sentence :snt1 (c / concern-01 :arg0 (a / attend-02 :polarity - :arg0 (a2 / authority :mod (r / region)) :arg1 (p / problem :mod (t / this)))) :snt2 (p2 / possible-01 :arg1 (o / offend-01 :arg0 (c2 / correctness :mod (p3 / politics)) :arg1 (a3 / and :op1 (i / interest :mod (e / ethnic)) :op2 (i2 / interest :mod (r2 / religious))))))
(s / set-02 :arg0 (s2 / set :mod (t / three-year)) :arg1 (l / limit-01 :arg1 (r / request-01 :arg1 (v / vote-01 :mod (a / automatic) :mod (a2 / automatic)))))
(c / convict-01 :arg1 (h / he) :arg2 (g / guilty-01 :arg1 (h2 / he) :arg2 (s / standard :mod (t / thing :arg0-of (e / evidence-01 :arg1 (l / law :arg2-of (c2 / criminal-03))) :arg1-of (b / base-02 :arg2 (t2 / thing :arg0-of (e2 / evidence-01) :mod (c3 / conclusive)))))))
(u / understand-01 :polarity - :arg0 (i / idiot) :arg1 (b / be-located-at-91 :arg1 (i2 / idiot) :arg2 (a / air) :mod (s / still)))
(m / multi-sentence :snt1 (t / tell-01 :arg0 (h / he) :arg1 (a / and :op1 (o / obligate-01 :arg1 (i / i) :arg2 (t2 / take-01 :arg0 (i2 / i) :arg1 (m2 / moment))) :op2 (a2 / apologize-01 :arg0 (i3 / i) :arg2 (c / comment-01 :arg0 (i4 / i) :arg3 (s / style :mod (s2 / style :arg1-of (f / free-04)) :poss (w / woman)) :time (y / yesterday))))) :snt2 (c2 / compete-02 :arg0 (i5 / i) :arg3 (t3 / thing :mod (s3 / style :arg1-of (f2 / free-03)) :poss (w2 / woman)) :time (y2 / yesterday)))
(a / and :op1 (t / take-out-11 :arg0 (s / she) :arg1 (p / panties :mod (s2 / shelf) :poss (h / he))) :op2 (t2 / take-out-11 :arg0 (s3 / she) :arg1 (a2 / and :op1 (t3 / tights :poss (h2 / he)) :op2 (t4 / trousers :arg1 (h3 / he)))) :op3 (s4 / spotted :arg0 (s5 / she) :arg1 (t5 / they) :location (s6 / spot)))
(s / say-01 :arg0 (p / person :name (n / name :op1 "david" :op2 "kennedy") :arg0-of (h / have-org-role-91 :arg1 (c / country :name (n2 / name :op1 "N-A")) :arg3 (t / temporal-quantity :quant (N / N-A) :unit (y / year)))) :arg1 (i / idea :topic (b / buy-01 :arg0 (s2 / someone) :arg1 (c2 / clothes :arg1-of (a / and :op1 (d / dressing :arg1 (p2 / person :mod (a2 / another))) :op2 (w / washed :polarity - :arg1 (c3 / clothes)))))) :time (y2 / year :mod 33))
(s / say-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (p2 / person :name (n / name :op1 "N-A") :arg0-of (h2 / have-org-role-91 :arg1 (c / country :name (n2 / name :op1 "N-A")) :arg2 (s2 / spokesman))) :arg2 (s3 / spokesman))) :arg1 (r / realize-01 :arg0 (p3 / person) :arg1 (i / incident :time-of (i2 / incident :arg0-of (p4 / place-01 :arg1 (p5 / place :quant 9))))))
(m / marked :arg1 (w / wall :mod (h / home) :quant (m2 / many)))
(s / state-01 :arg0 (a / and :op1 (p / person :arg0-of (h / have-org-role-91 :arg1 (p2 / police :mod (c / country :name (n / name :op1 "N-A"))) :arg2 (s2 / spokeswoman))) :op2 (p3 / person :arg0-of (h2 / have-org-role-91 :arg1 (p4 / police) :arg2 (s3 / spokeswoman))) :op3 (p5 / person :arg0-of (h3 / have-org-role-91 :arg1 (p6 / police) :arg2 (s4 / spokeswoman))) :op4 (p7 / person :arg0-of (h4 / have-org-role-91 :arg1 (p8 / police) :arg2 (s5 / spokeswoman))) :op5 (p9 / person :arg0-of (h5 / have-org-role-91 :arg1 (p10 / police) :arg2 (s6 / spokeswoman)))) :arg1 (w / warn-01 :arg0 (p11 / person :mod (o / other) :arg0-of (c2 / continue-01 :arg1 (v / violate-01 :arg0 (p12 / person) :arg1 (r / rule))) :mod (o2 / other)) :arg1-of (c3 / clear-06)))
(r / recommend-01 :arg1 (r2 / remain-01 :arg1 (p / profit-01 :time (y / year :mod (l / last))) :arg3 (r3 / remain-01 :arg1 (p2 / profit-01))) :time (m / meanwhile))
(m / multi-sentence :snt1 (p / possible-01 :arg1 (a / and :op1 (b / be-located-at-91 :arg1 (w / we) :arg2 (a2 / and :op1 (a3 / anger-01 :arg0 (a4 / anger-01 :arg0 (w2 / we))) :op2 (s / suppress-01 :arg0 (w3 / we) :arg1 (w4 / we)) :op3 (k / keep-02 :arg0 (w5 / we) :arg1 (a5 / and :op1 (p2 / person :arg0-of (h / have-rel-role-91 :arg1 (w6 / we) :arg2 (f / friend))) :op2 (p3 / person :arg0-of (h2 / have-rel-role-91 :arg1 (w7 / we) :arg2 (r / relative))) :op3 (p4 / person :arg0-of (h3 / have-rel-role-91 :arg1 (w8 / we) :arg2 (r2 / relative))) :op4 (p5 / person :mod (o / other) :arg0-of (h4 / have-rel-role-91 :arg1 (w9 / we) :arg2 (r3 / relative))) :op5 (p6 / person :arg0-of (h5 / have-rel-role-91 :arg1 (w10 / we) :arg2 (r4 / relative))) :op5 (p7 / person :arg0-of (h6 / have-rel-role-91 :arg1 (w11 / we) :arg2 (r5 / relative))) :op7 (p8 / person :arg0-of (h7 / have-rel-role-91 :arg1 (w12 / we) :arg2 (r6 / relative)))))))) :op2 (w13 / way :polarity - :mod (g / good :degree (m2 / most)) :domain (s2 / smoke :arg1-of (d / do-02 :arg0 (w14 / we) :mod (u / usual) :mod (u2 / usual))))) :snt2 (g2 / go-02 :mode (i / imperative) :arg0 (y / you) :arg4 (t / team :name (n / name :op1 "N-A"))))
(a / and :op1 (b / be-located-at-91 :arg1 (p / person :arg0-of (h / have-rel-role-91 :arg1 (c / child) :arg2 (c2 / child))) :arg2 (h2 / here :mod (r / right)) :arg1-of (c3 / complete-02) :time (m / moment :mod (t / this))) :op2 (a2 / and :op1 (s / spontaneous :arg1 (t2 / they)) :op2 (b2 / be-located-at-91 :arg1 (t3 / they) :arg2 (h3 / hand :part-of (e / emotions :mod (v / various))) :frequency (o / often))))
(n / named :arg0 (s / society :mod (f / friendship) :mod (f2 / finnish-latvian)) :arg1 (s2 / society :name (n2 / name :op1 (r / rozentals-seura) :op2 (r2 / rozentals-seura) :op3 (r3 / rozentals-seura))) :time (a / after :op1 (o / offer-01 :arg0 (p / person :arg0-of (t / travel-01 :mod (s3 / small)) :arg0-of (t2 / travel-01) :mod (s4 / small)) :arg1 (' / '' :arg0 (p2 / person) :arg1 (p3 / person :arg0-of (t3 / travel-01) :mod (s5 / small)) :instrument (h / heart :location ('2 / '' :mod (l / latvia))))) :time (a2 / after :op1 (o2 / offer-01 :arg0 (p4 / person :arg0-of (h2 / have-org-role-91 :arg1 (c / city-district :name (n3 / name :op1 "N-A") :mod (s6 / small)) :arg3 (a3 / apprentice-01 :arg0 (p5 / person)))) :arg1 (e / exhibition :arg0 (p6 / person) :arg1 (h3 / heart :mod (a4 / art :mod (n4 / nation)) :mod (l2 / latvian))))) :time (t4 / time :arg1-of (s7 / same-01))))
(e / event :time (n / now) :mod (o / official))
(r / release-01 :arg0 (p / person :mod (r2 / religious-group :name (n / name :op1 "N-A"))) :arg1 (p2 / person :arg1-of (i / imprison-01) :quant (a / about :op1 270)) :time (l / late :degree (m / more)))
(i / increase-01 :arg1 (s / security :location (f / facility)) :arg1-of (c / cause-01 :arg0 (t / threaten-01)))
(s / say-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (c / criminal-organization :name (n / name :op1 "N-A")) :arg2 (p2 / president))) :arg1 (a / and :op1 (i / important :degree (v / very) :domain (i2 / issue-02 :arg0 (d / drowning))) :op2 (t / talk-01 :arg0 (p3 / person) :arg1 (p4 / program :mod (s2 / such)) :time (a2 / after :op1 (n2 / now) :quant (n3 / nearly :op1 (b / between :op1 (t2 / temporal-quantity :quant (N / N-A) :unit (w / week)) :op2 (t3 / temporal-quantity :quant (N2 / N-A) :unit (w2 / week))))))))
(i / include-91 :arg1 (t / thing :quant 1 :arg1-of (c / compensate-01 :arg2 (p / program :name (n / name :op1 (l / latvenergo))))) :arg2 (p2 / program :topic (r / recovery :arg1 (r2 / resource :mod (f / fish)))))
(a / and :op1 (p / possible-01 :arg1 (s / set-02 :arg0 (p2 / person :mod (c / country :name (n / name :op1 "N-A"))) :arg1 (p3 / point :mod (r / record :mod (n2 / new) :mod (n3 / nation)) :mod (n4 / new)) :arg2 (p4 / point :quant 6622))) :op2 (w / win-01 :arg0 (p5 / person) :arg1 (p6 / place :ord (o / ordinal-entity :value 2)) :location (c2 / compete-01 :name (n5 / name :op1 (p7 / prestigious)) :location (g / gecis :location (a2 / austria)))))
(r / report-01 :arg0 (a / agency) :arg1 (b / be-located-at-91 :arg1 (b2 / borodavko :name (n / name :op1 (l / latvian) :op2 (e / eugene) :op3 (e2 / eugene) :op4 (e3 / eugene) :op5 (e4 / eugene) :op6 (e5 / eugene) :op7 (e6 / eugene))) :arg2 (f / fight-01 :arg1 (c / class :mod (w / weight)) :arg2 (m / mass-quantity :quant (N / N-A) :unit (k / kilogram)))) :time (a2 / already))
(j / justice :domain (p / person :name (n / name :op1 "N-A") :arg0-of (h / have-org-role-91 :arg1 (c / court :mod (d / district) :mod (c2 / country :name (n2 / name :op1 "United" :op2 "States"))) :arg2 (c3 / chief))))
(t / tries :arg0 (p / person :arg0-of (b / buy-01)) :location (o / out :op1 (m / motor)))
(e / end-01 :arg1 (p / perform-02 :arg0 (t / team :consist-of (p2 / person :arg0-of (h / have-org-role-91 :arg1 (t2 / team :mod (c / country :name (n / name :op1 "N-A"))) :arg2 (s / series :name (n2 / name :op1 (r / rugby-7))))) :mod (s2 / spectacular))) :arg4 (t3 / thursday) :time (e2 / end-01 :arg1 (d / division :mod (f / fiji) :mod (r2 / rio))) :time (d2 / defeat-01 :arg0 (d3 / division :name (n3 / name :op1 (r3 / rio)) :mod (f2 / fiji)) :arg1 (t4 / they) :prep-with (t5 / trouble-01 :arg1 (r4 / race :quant 43 :mod (f3 / final) :arg0-of (f4 / fascinate-01)) :location (s3 / stadium :mod (d4 / deodoro)))))
(c / contrast-01 :arg1 (w / win-01 :arg0 (w2 / win-01 :arg0 (c2 / country :name (n / name :op1 "N-A")) :arg2 (s / score-entity :op1 (2 / 20-5) :op2 (22 / 20-5))) :arg1 (b / between :op1 (t / temporal-quantity :quant (N / N-A) :unit (y / year)) :op2 (t2 / temporal-quantity :quant (N2 / N-A) :unit (y2 / year)))) :arg2 (c3 / contrast-01 :arg1 (w3 / win-01 :arg0 (t3 / team :mod (b2 / both)) :arg1 (g / ground :location-of (l / lose-02 :arg0 (t4 / team :mod (b3 / both)) :arg1 (g2 / ground) :location (g3 / ground)))) :arg2 (l2 / lose-02 :arg0 (t5 / team :mod (b4 / both)) :arg1 (p / point :quant (f / few :mod (j / just))))) :time (d / day :ord (o / ordinal-entity :value 1)))
(t / think-01 :arg0 (i / i) :arg1 (a / and :op1 (w / williams :arg1 (a2 / amr-unknown) :degree (v / very) :time (m / morning :mod (a3 / all))) :op2 (s / speak-01 :arg0 (a4 / amr-unknown) :arg1 (m2 / more :compared-to (u / usual :polarity -) :mod (u2 / usual)))) :time (a5 / after :op1 (w2 / win-01)))
(s / say-01 :arg0 (s2 / she) :arg1 (r / regret-01 :arg1 (t / thing :arg1-of (f / feel-01))))
(t / threaten-01 :arg0 (c / capable-01 :polarity - :arg1 (s / set-up-03 :arg1 (g / government-organization :arg0-of (g2 / govern-01)))) :arg2 (c2 / capable-01 :arg1 (r / reduce-01 :arg1 (d / deficit :mod (b / budget)))) :prep-in (s2 / spain))
(m / mean-01 :arg1 (t / this) :arg2 (n / need-01 :arg0 (g / government-organization :arg0-of (g2 / govern-01 :arg1 (c / country :mod (t2 / this)))) :arg1 (i / implement-01 :arg0 (g3 / government-organization) :arg1 (m2 / measure-02 :arg1-of (i2 / include-91 :arg2 (p / product :arg1-of (g4 / gross-03) :mod (d / domestic)) :arg3 (p2 / percentage-entity :value (N / N-A)))) :time (y / year :mod (t3 / this))) :location (f / framework :poss (p3 / program :mod (s / stability)))))
(c / complicate-01 :arg1 (s / situation) :degree (m / more :degree (m2 / much)) :time (c2 / case-03 :arg1 (s2 / spain)))
(b / beaches :arg1 (b2 / beaches :arg1-of (d / dirty-02)) :mod (a / also) :location (r / riga))
(e / explain-01 :arg0 (p / person :arg0-of (o / organize-01 :arg1 (c / campaign-01))) :arg1 (a / and :op1 (e2 / everywhere :location (e3 / everywhere)) :op2 (s / signal-07 :arg1 (o2 / or :op1 (w / warn-01) :op2 (p2 / prohibit-01))) :location (e4 / everywhere)) :mod (a2 / also))
(m / multi-sentence :snt1 (a / and :op1 (' / '' :arg0 (f / figure :arg1-of (a2 / average-03)) :arg1 (p / place :quant 3 :mod (b / bathing) :mod (a3 / all)) :location (a4 / and :op1 (p2 / place :name (n / name :op1 (r / riga))) :op2 (v / vakarbulli) :op3 (v2 / vec)) :arg2-of (f2 / fortunate-01 :polarity -)) :op2 (e / exceed-01 :arg0 (f3 / figure) :arg1 (o / or :op1 (d / desire-01) :op2 (t / target-01))) :arg2-of (f4 / fortunate-01 :polarity -)) :snt2 (a5 / advocate-01 :arg0 (i / i) :arg1 (a6 / advocate-01 :arg1 (m2 / move-01 :arg1 (n2 / number :quant-of (u / unit :mod (w / waste))) :arg2 (u2 / unit :quant (A / A-135))))))
(a / advocate-01 :arg0 (p / person :arg0-of (h / head-01 :arg1 (g / government-organization :arg0-of (a2 / administrate-01 :arg1 (p2 / president))))) :arg1 (t / thing :arg2-of (p3 / position-01 :arg1 (p4 / person :arg0-of (h2 / head-01 :arg1 (g2 / government-organization :arg0-of (a3 / administrate-01 :arg1 (p5 / president))))))))
(f / familiarize-01 :arg1 (w / we) :arg2 (e / eduardovich :mod (a / anton)) :duration (t / time :arg1-of (l / long-03)))
(r / rage-02 :location (s / sand :mod (r2 / rio)))
(l / look-up-05 :arg0 (w / we) :arg1 (m / match-03 :name (n / name :op1 (b / beaches) :op2 (v / volleyball) :op3 (p / pedro) :op4 (p2 / pedro) :op5 (p3 / pedro) :op6 (s / solberg) :op7 (s2 / solberg))) :direction (f / forward) :time (e / evening))
(r / run :arg0 (i / intrigueing :arg1 (g / game)) :arg1 (l / losers :arg1 (g2 / game)))
(p / possible-01 :arg1 (f / find-01 :arg1 (f2 / form :mod (s / sporty))))
(c / cause-01 :arg1 (p / possible-01 :polarity - :arg1 (c2 / comfortable-02 :polarity - :arg0 (v / view-01) :arg1 (t / they))))
(m / multi-sentence :snt1 (d / differ-02 :arg1 (s / see-01 :arg1 (a / and :op1 (b / bad-07 :polarity - :arg1 (b2 / boy :mod (t / this))) :op2 (h / hair :arg1-of (m2 / mean-01 :arg2 (h2 / hair))) :op3 (b3 / boy :mod (t2 / this))) :arg1-of (s2 / significant-02)) :arg2 (s3 / stereotype :mod (u / usual) :poss (s4 / stage :name (n / name :op1 (s5 / stage)) :mod (s6 / stage)))) :snt2 (s7 / say-01 :arg0 (p / person :name (n2 / name :op1 "N-A") :arg0-of (h3 / have-org-role-91 :arg2 (' / ''))) :arg1 (v / vaver :arg1 (m3 / music))))
(h / high-02 :arg1 (t / this) :degree (m / most) :arg1-of (c / cause-01 :arg0 (b / be-located-at-91 :arg1 (a / and :op1 (t2 / thing :quant 2012) :op2 (b2 / broadcast-program :name (n / name :op1 "N-A") :ord (o / ordinal-entity :value 1))) :arg2 (a2 / above :op1 (t3 / thing)) :time (s / since :op1 (e / expel-01 :arg1 (y / year :mod (p / previous))))) :time (b3 / before :op1 (n2 / now) :quant (a3 / approximately :op1 (t4 / temporal-quantity :quant (N / N-A) :unit (y2 / year))))))
(a / and :op1 (f / fall-01 :arg1 (t / thing :arg2-of (p / price-01 :arg1 (t2 / thing :arg2-of (p2 / price-01)))) :arg3 (a2 / and :op1 (c / clothing) :op2 (e / equipment :name (n / name :op1 (f2 / footwear))) :op3 (e2 / equipment :name (n2 / name :op1 (h / household))) :op4 (h2 / home :poss (h3 / house-01)) :op5 (h4 / home :arg1-of (r / regular-03)) :op6 (h5 / home :arg1-of (r2 / regular-03)) :op7 (h6 / home :arg1-of (r3 / regular-03)))) :op2 (h7 / health :arg1 (h8 / health :quant (b / between :op1 2.2 :op2 0.1))))
(u / understand-01 :arg0 (y / you) :arg1 (a / amr-unknown))
(e / explode-01 :arg0-of (e2 / effective-04 :arg1 (l / lose-02 :arg1 (w / weight))) :mod (s / such))
(n / need-01 :arg1 (p / produce-01 :arg1 (h / hemoglobin :arg0-of (p2 / provide-01 :arg1 (s / supply-01 :arg1 (o / oxygen) :arg2 (a / and :op1 (m / muscle) :op2 (b / brain)))))) :mod (i / iron))
(b / blurred :arg1 (s / skill :mod (i / image-distorting) :arg0-of (g / generate-01 :arg1 (r / rate-entity-91 :arg1 (m / more-than :op1 30000000) :arg2 (t / temporal-quantity :quant (N / N-A) :unit (d / day))))))
FAILED_TO_PARSE#Number of opening and closing brackets doesn't match.
(r / receive-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (c / country :name (n / name :op1 "N-A")))) :arg1 (m / monetary-quantity :arg1-of (e / expend-01) :arg1-of (l / legal-02)) :arg2 (f / fight-01 :arg1 (p2 / patent-01 :arg1 (p3 / patent-01 :mod (c2 / c) :mod (c3 / c)))))
(a / and :op1 (r / round :ord (o / ordinal-entity :value 1)) :op2 (f / final :time (t / today)) :domain (a2 / and :op1 (r2 / round :ord (o2 / ordinal-entity :value 1)) :op2 (f2 / final :arg1-of (i / include-91 :arg2 (d / day :ord (o3 / ordinal-entity :value 2))))) :location (c / center :location-of (a3 / attend-02)) :mod (d2 / definite))
(m / multi-sentence :snt1 (c / come-across-21 :arg0 (a / art :name (n / name :op1 (a2 / amateurs) :op2 (c2 / collectives)) :source (r / region :name (n2 / name :op1 (e / engure)))) :arg1 (c3 / campsites :arg1 (a3 / art))) :snt2 (i / impress-01 :arg0 (p / perform-01 :arg0 (p2 / person :arg1-of (d / differ-02)) :arg1-of (p3 / perform-01 :arg0 (p4 / person :arg1-of (d2 / differ-02))) :arg1-of (p5 / perform-01 :arg0 (p6 / person :arg1-of (d3 / differ-02)))) :arg1 (a4 / and :op1 (' / '' :name (n3 / name :op1 ('2 / '')) :mod (r2 / red)) :op2 (g / golden :mod ('3 / '') :poss (p7 / person :mod (y / young))))))
(c / contrast-01 :arg1 (o / obstacle :time (a / always) :purpose (o2 / overcome-01)) :arg2 (o3 / overcome-01 :arg0 (h / hittower) :arg1 (e / everything) :time (s / so-far)))
(s / say-01 :arg0 (r / report-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (p2 / police :poss (c / country :name (n / name :op1 "N-A"))) :arg3 (r2 / report-01 :arg0 (p3 / person))))) :arg1 (w / want-01 :arg0 (w2 / woman :arg1-of (i / include-91 :arg2 (w3 / woman))) :arg1 (c2 / commit-02 :arg0 (w4 / woman) :arg1 (s2 / suicide)) :manner (d / desperate) :location (r3 / road :location-of (f / flee-05 :arg0 (w5 / woman) :arg1 (s3 / she)))))
(d / die-01 :arg1 (s / she) :location (s2 / scene))
(a / and :op1 (c / count-01 :arg1 (n / number :quant-of (p / person :quant 3 :arg0-of (p2 / pairs :arg1 (p3 / point :mod (s / small))))) :arg1-of (f / follow-04) :time (a2 / after :op1 (s2 / suffer-01 :arg0 (l / lose-02 :arg0-of (a3 / advise-01)) :arg1 (m / match-03 :mod (t / this))))) :op2 (f2 / favorable :degree (m2 / most) :domain (d / duet :mod (l2 / latvian))) :arg1-of (f3 / follow-04))
(p / possible-01 :arg1 (a / and :op1 (r / regard-01 :arg1 (r2 / riga) :arg2 (a2 / and :op1 (b / begin-01 :arg1 (b2 / begin-01)) :op2 (i / inspire-01 :arg0 (c / career :poss (c2 / career :name (n / name :op1 (c3 / celebrated) :op2 (c4 / cinema) :op3 (z / zar)))))))))
(s / seem-01 :arg1 (g / guilty-01 :arg1 (t / treaty :name (n / name :op1 "N-A"))) :manner (s2 / sudden))
(f / find-01 :arg0 (p / person :quant 2 :arg0-of (h / have-org-role-91 :arg2 (p2 / president))) :arg1 (h2 / hadn :arg0 (p3 / person) :arg1 (i / issue-02) :mod (e / even) :mod (e2 / even)) :time (a / after :op1 (d / discuss-01 :duration (m / more-than :op1 (t / temporal-quantity :quant (N / N-A) :unit (h3 / hour))))))
(a / abandon-01 :arg0 (i / it) :arg1 (t / they) :time (s / since :op1 (a2 / and :op1 (b / before :op1 (n / now) :quant (n2 / nearly :op1 (t2 / temporal-quantity :quant (N / N-A) :unit (y / year)))) :op2 (n3 / need-01 :arg1 (a3 / assist-01)))))
(c / contrast-01 :arg1 (a / available-02 :arg1 (p / person :mod (c2 / country :name (n / name :op1 "N-A")) :mod (e / ethnic-group :name (n2 / name :op1 "N-A"))) :arg2 (c3 / customer :mod (c4 / country :name (n3 / name :op1 "N-A")))) :arg2 (w / win-01 :arg0 (p2 / public :arg1-of (p3 / public-02)) :arg1-of (p4 / public-02)))
(m / multi-sentence :snt1 (s / say-01 :arg0 (i / i) :arg1 (h / have-03 :polarity - :arg0 (w / we) :arg1 (a / ambition :mod (g / globe)) :time (n / no-longer))) :snt2 (h2 / have-03 :arg0 (w2 / we) :arg1 (a2 / ambition :arg1-of (l / local-02))))
(k / know-03 :arg0 (n / nobody) :arg1 (t / that))
(a / accompany-01 :arg0 (m / music :mod (l / latin) :arg1-of (f / fit :arg2 (n / next :op1 (s / street) :location (n2 / next-to :op1 (s2 / street)) :location (n3 / next-to :op1 (s3 / street))))) :arg1 (p / perform-02 :arg0 (s4 / she) :arg1 (m2 / move-01 :arg3-of (f2 / free-04))))
(f / find-01 :arg1 (g / gun :mod (g2 / gun) :mod (o / only) :arg0-of (b / belong-01 :arg1 (w / weapon :arg1-of (d / differ-02)))) :location (s / scene) :time (e / event))
(a / and :op1 (n / need-01 :arg0 (p / person :arg0-of (h / have-rel-role-91 :arg2 (d / dh))) :arg1 (a2 / act-02 :arg0 (p2 / person) :time (n2 / now))) :op2 (s / stop-03 :arg0 (p3 / person) :arg1 (p4 / person :mod (d2 / doctor :mod (y / young))) :arg2 (d3 / doctor :mod (y2 / young))))
(m / multi-sentence :snt1 (a / and :op1 (p / person :arg0-of (h / have-org-role-91 :arg1 (g / government-organization :arg0-of (g2 / govern-01)) :arg2 (m2 / minister) :time (f / former))) :op2 (p2 / person :arg0-of (h2 / have-org-role-91 :arg1 (g3 / government-organization :arg0-of (g4 / govern-01)) :arg2 (m3 / minister) :time (f2 / former))) :op3 (p3 / person :arg0-of (h3 / have-org-role-91 :arg1 (g5 / government-organization :arg0-of (g6 / govern-01)) :arg2 (m4 / minister) :time (f3 / former))) :op4 (p4 / person :arg0-of (h4 / have-org-role-91 :arg1 (g7 / government-organization :arg0-of (g8 / govern-01)) :arg2 (m5 / minister) :time (f4 / former))) :op5 (p5 / person :arg0-of (h5 / have-org-role-91 :arg1 (g9 / government-organization) :arg2 (m6 / minister) :time (f5 / former))) :op6 (p6 / person :arg0-of (h6 / have-org-role-91 :arg1 (g10 / government-organization) :arg2 (m7 / minister) :time (f6 / former))) :op7 (p7 / person :arg0-of (h7 / have-org-role-91 :arg1 (g11 / government-organization) :arg2 (m8 / minister) :time (f7 / former)) :arg0-of (i / ignore-01 :arg1 (s / sign :arg1-of (s2 / signal-07 :arg0 (p8 / person)))))) :snt2 (f8 / fear-01 :arg0 (p9 / person) :arg1 (o / offend-01 :arg0 (p10 / person) :arg1 (m9 / minority :mod (e / ethnic)))))
(s / say-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (g / government-organization :arg0-of (g2 / govern-01 :arg1 (c / country :name (n / name :op1 "N-A")))) :arg2 (s2 / secretary :mod (v / vice)) :time (f / former)) :arg0-of (h2 / have-org-role-91 :arg1 (m / movement-07 :arg1 (c2 / corrupt-01)) :arg2 (m2 / member) :time (f2 / former)) :arg0-of (h3 / have-org-role-91 :arg1 (m3 / movement-07 :arg1 (c3 / corrupt-01)) :arg2 (m4 / member) :time (f3 / former)) :arg0-of (h4 / have-org-role-91 :arg1 (m5 / movement-07 :arg1 (c4 / corrupt-01)) :arg2 (m6 / member) :time (f4 / former)) :arg0-of (h5 / have-org-role-91 :arg2 (m7 / member))) :arg1 (r / recommend-01 :arg1 (a / allow-01 :arg1 (d / deploy-01 :arg0 (p2 / police) :arg1 (p3 / person :arg0-of (g3 / guard-01)) :arg2 (o / outside :op1 (s3 / station :mod (p4 / polling)) :purpose (p5 / protect-01 :arg0 (p6 / person) :arg1 (p7 / person :arg0-of (v2 / vote-01 :arg1 (k / kidnap-01)))))))))
(a / apologize-01 :arg0 (p / person :mod (c / country :name (n / name :op1 "N-A"))) :arg1 (p2 / person :quant (m / more-than :op1 90) :arg0-of (r / respond-01 :arg1 (t / twitter :arg0 (p3 / person) :arg1 (c2 / comment-01 :mod (t2 / this))))))
(s / say-01 :arg1 (a / and :op1 (m / mean-02 :arg0 (i / i) :arg1 (s2 / say-01 :arg0 (i2 / i) :arg1 (m2 / mean-02 :arg0 (i3 / i) :arg1 (s3 / show-04 :arg1 (i4 / i)) :degree (t / total)))) :op2 (s4 / sorry-01 :arg1 (i5 / i) :arg2 (e / event :mod (i6 / it)) :mod (r / really))) :arg2 (p / person :name (n / name :op1 "N-A")))
(m / multi-sentence :snt1 (g / go-02 :arg0 (t / they) :time (f / final)) :snt2 (w / wonderful-03 :arg1 (t2 / they) :location (h / here)))
(f / found-01 :arg1 (p / person :quant 2007))
(s / say-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (p2 / person :arg1-of (l / local-02) :arg0-of (h2 / have-org-role-91 :arg2 (o / official))) :arg2 (o2 / official))) :arg1 (a / and :op1 (w / wear-01 :arg0 (p3 / person :arg0-of (h3 / have-org-role-91 :arg1 (c / city :name (n / name :op1 "N-A") :location (s2 / south) :mod (c2 / country :name (n2 / name :op1 "N-A"))) :arg2 (m / mayor))) :arg1 (s3 / swimsuits :arg0 (p4 / person) :arg1 (s4 / swimsuits :mod (b / burkini)) :location (b2 / beach :mod (t / this)) :arg1-of (c3 / complete-02 :degree (a2 / almost)))) :op2 (r / reminiscent :arg0 (p5 / person :arg0-of (h4 / have-org-role-91 :arg2 (o3 / official)) :arg1-of (l2 / local-02)) :arg1 (p6 / person))))
(a / and :op1 (a2 / aspire :arg0 (h / he) :arg1 (i / it) :degree (t / total)) :op2 (a3 / aspire :arg0 (h2 / he) :arg1 (g / glory) :degree (t2 / total) :mod (j / just)))
(c / cause-01 :arg0 (k / know-01 :arg0 (w / we) :arg1 (a / and :op1 (e / event :beneficiary (w2 / we)) :op2 (t / thing :manner-of (d / deal-01 :arg0 (w3 / we) :arg2 (i / it)))) :mod (u / usual)) :arg1 (a2 / angry :domain (a3 / adult)))
(d / decide-01 :arg0 (y / you) :arg1 (s / spend-01 :arg0 (y2 / you) :arg1 (l / life :poss (y3 / you)) :manner (t / together)))
(c / capture-01 :arg0 (s / state :mod (r / religious-group :name (n / name :op1 "N-A"))) :arg1 (p / person :quant 2000 :mod (c2 / civilian) :arg0-of (r2 / reside-01)) :location (s2 / syria))
(k / know-01 :polarity - :arg1 (f / flee-05 :arg0 (p / person :arg0-of (f2 / fight-01) :mod (s / state) :quant (a / amr-unknown))))
(i / inform-01 :arg0 (p / police) :arg1 (c / court :mod (o / orphans)) :arg2 (c2 / court :mod (o2 / orphans) :arg0-of (d / decide-01 :arg1 (f / fate :poss (c3 / child) :time (f2 / future)) :mod (a / also))) :time (i2 / immediate))
(b / bias-01 :arg1 (s / security :location (f / facility)) :arg1-of (c / cause-01 :arg0 (t / threaten-01 :arg1 (s2 / security :location (f2 / facility)))))
(s / say-01 :arg0 (g / government-organization :name (n / name :op1 "Interior" :op2 "Ministry")))
(t / tell-01 :arg0 (i / i) :arg1 (c / cause-01 :arg0 (a / amr-unknown) :arg1 (b / be-located-at-91 :arg1 (h / he) :arg2 (t2 / thing :arg0-of (c2 / cause-01 :arg1 (l / likely-01 :arg1 (b2 / be-02 :arg1 (h2 / he) :arg1-of (c3 / cause-01 :arg0 (y / yakubovsky :arg1 (h3 / he)))))))) :degree (t3 / total)) :arg2 (p / person :name (n / name :op1 "N-A")))
(a / and :op1 (w / work-01 :arg0 (i / i) :location (h / here)) :op2 (s / spend-02 :arg0 (i2 / i) :arg1 (t / time :poss (i3 / i))) :op3 (t2 / try-01 :arg0 (i4 / i) :arg1 (r / realize-02 :arg0 (i5 / i) :arg1 (p / program :mod (f / four-year)))) :location (h2 / here) :arg1-of (e / emerge-01 :arg0 (i6 / i)))
(a / and :op1 (c / carry-out-03 :arg1 (i / introduce-02 :arg1 (a2 / and :op1 (j / juvenile :mod (f / fish)) :op2 (l / larvae))) :location (a3 / and :op1 (p / presence) :op2 (v / volume :name (n / name :op1 (n2 / numerical)) :arg1-of (m / mean-01 :arg2 (a4 / and :op1 (s / species :mod (s2 / scientifically)) :op2 (b / body :poss (s3 / species))))))) :time (y / year :mod (e / each)))
(a / announce-01 :arg0 (i / i) :arg1 (c / confident-01 :arg1 (h / he) :arg2 (c2 / choose-01 :arg0 (d / dropshipper) :arg1 (g / garland))) :time (c3 / conference :poss (h2 / he)) :time (c4 / conference :poss (h3 / he)))
(j / judge-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg3 (j2 / judge-01))) :arg1 (c / court :mod (d / district) :mod (c2 / country :name (n / name :op1 "N-A"))) :arg2 (c3 / chief))
(s / say-01 :arg0 (h / he) :arg1 (f / fit :polarity - :domain (p / person :arg0-of (h2 / have-org-role-91 :arg2 (p2 / president)))) :mod (a / also))
(c / contrast-01 :arg1 (p / prevent-01 :arg0 (t / technique :name (n / name :op1 (m / mitchell)) :mod (g / great)) :arg1 (n2 / nakaravam :name (n3 / name :op1 (g2 / german))) :arg2 (p2 / point :quant 3)) :arg2 (a / affect-01 :arg0 (f / fire-01) :arg1 (t2 / thing :arg2-of (r / result-01)) :mod (o / only)))
(p / possible-01 :arg1 (l / look-01 :arg0 (p2 / person :arg0-of (v / visit-01)) :arg1 (a / and :op1 (r / room :location (c / center)) :op2 (r2 / room :mod (e / exhibit-01)) :op3 (r3 / room :mod (t / tea)) :op4 (r4 / room :mod (t2 / tea)))))
(c / complicate-01 :arg1 (s / situation) :degree (m / more :degree (m2 / much)) :prep-in (c2 / case :mod (s2 / spain)))
(e / explain-01 :arg0 (c / council :mod (c2 / city :arg0-of (h / have-org-role-91 :arg2 (c3 / capital)))) :arg1 (d / difficult :domain (f / fight-01 :arg1 (a / area :mod (b / bathing))) :frequency (r / rate-entity-91 :arg3 (t / temporal-quantity :quant (N / N-A) :unit (d2 / day)))) :degree (q / quite))
(a / and :op1 (r / right :mod (r2 / right) :domain (q / quality :poss (w / water)) :mod (a2 / all)) :op2 (s / satisfactory :arg1 (q2 / quality) :location (e / everywhere)) :time (y / year :mod (t / this)))
(m / multi-sentence :snt1 (a / announce-01 :arg0 (i / i) :arg1 (c / change-01)) :snt2 (a2 / and :op1 (w / welcome :arg0 (a3 / and :op1 (w2 / we) :op2 (y / you)) :arg1 (a4 / and :op1 (r / respect-01 :arg0 (a5 / and :op1 (w3 / we) :op2 (y2 / you)) :arg1 (a6 / and :op1 (p / person :arg0-of (h / have-org-role-91 :arg2 (h2 / head-of-state))) :op2 (p2 / person :arg0-of (w4 / work-01 :arg1 (r2 / respected))))) :op2 (w5 / work-01 :arg0 (y3 / you) :manner (t / together) :duration (m2 / many :op1 (t2 / temporal-quantity :quant (N / N-A) :unit (y4 / year))))) :op2 (w6 / work-01 :arg0 (y5 / you) :manner (s / success) :duration (m3 / many :op1 (t3 / temporal-quantity :quant (N2 / N-A) :unit (y6 / year)))))))
(r / raise-01 :arg1 (l / link-01 :arg1 (s / step-01 :mod (t / this)) :arg2 (f / fight-01 :arg2 (p / power :location (e / elite :mod (p2 / politics) :poss (c / country :name (n / name :op1 "Russia")))))) :arg1-of (v / view-02 :arg0 (e2 / elect-01 :arg1 (c2 / council :mod (s2 / state) :location (c3 / country)))))
(r / refer-01 :arg1 (p / person :name (n / name :op1 "Ivanov")) :arg2 (m / modify-01 :arg1 (p2 / person) :arg2 (p3 / position-02 :arg0 (p4 / person) :arg2 (p5 / person :arg0-of (h / have-org-role-91 :arg2 (p6 / president))) :arg1-of (p7 / possible-01))) :arg0-of (c / cause-01 :arg1 (c2 / claim-01 :arg1 (w / want-01 :arg0 (p8 / person) :arg1 (t / take-01 :arg0 (p9 / person) :arg1 (p10 / position :poss (p11 / person :arg0-of (r2 / represent-01 :arg1 (p12 / person :arg0-of (r3 / represent-01 :arg1 (a / and :op1 (p13 / protect-01 :arg1 (n2 / nature)) :op2 (t2 / transport-01))))))))))))
(b / blame-01 :arg1 (b2 / blame-01 :arg1 (e / elite :mod (p / party :mod (c / country :name (n / name :op1 "N-A"))))))
(c / contrast-01 :arg1 (h / have-03 :arg0 (h2 / he) :arg1 (o / opponent :mod (c2 / captivated :degree (m / more)))) :arg2 (p / possible-01 :arg1 (s / surprise-01 :arg0 (t / time :mod (a / ambitious)))))
(h / have-concession-91 :arg1 (r / resemble-01 :arg1 (o / outcome) :arg2 (s / stay-01 :arg1 (h2 / he) :duration (o2 / or :op1 (t / temporal-quantity :quant (N / N-A) :unit (m / minute)) :op2 (t2 / temporal-quantity :quant (N2 / N-A) :unit (y / year))))))
(m / miss-01 :arg0 (m2 / metropolis :mod (l / latvian)) :arg1 (a / ambition :mod (m3 / most)) :time (r / recent :degree (m4 / most)) :arg2-of (f / fortunate-01 :polarity -))
(a / and :op1 (h / have-rel-role-91 :polarity - :arg0 (i / i) :arg1 (p / person :arg0-of (h2 / have-rel-role-91 :arg2 (f / friend))) :arg2 (f2 / friend) :time (e / ever)) :op2 (c / cause-01 :arg0 (d / differ-02 :arg1 (n / no-one) :degree (t / too)) :arg1 (n2 / no-one)))
(b / be-located-at-91 :arg1 (a / and :op1 (b2 / barrier :mod (1 / 100-meter)) :op2 (t / thing :arg1-of (r / rise-01))) :arg2 (b3 / behind :op1 (r2 / record :arg1-of (p / personal-02) :poss (s / she))))
(a / and :op1 (p / plan-01 :arg0 (i / it) :arg1 (s / select-01 :arg1 (a2 / and :op1 (i2 / interior :poss (b / building)) :op2 (w / wall :poss (b2 / building)) :op3 (i3 / improve-01 :arg1 (s2 / stage)) :op4 (i4 / improve-01 :arg1 (s3 / stage)) :op5 (i5 / improve-01 :arg1 (s4 / stage))))) :op2 (a3 / arranged :arg0 (i6 / it) :arg1 (c / communicate-01 :arg0 (b3 / building) :mod (e / engineer-01) :mod (i7 / internal-02))))
FAILED_TO_PARSE#Two concepts in a row.
(a / and :op1 (c / congested :degree (m / most) :domain (c2 / country) :mod (m2 / main)) :op2 (p / plan-01 :arg0 (w / we) :arg1 (m3 / make-02 :arg0 (w2 / we) :arg1 (m4 / motorways :arg0 (c3 / country :quant (a2 / all)) :arg1 (c4 / condition :mod (g / good)) :mod (m5 / main)))))
(a / and :op1 (c / contain-01 :arg0 (i / i) :arg1 (a2 / and :op1 (w / water) :op2 (f / fibre))) :op2 (c2 / contribute-01 :arg0 (i2 / i) :arg2 (f2 / feel-01 :arg0 (i3 / i) :arg1 (t / thing :arg1-of (f3 / feel-01 :arg0 (i4 / i))))))
(a / add-02 :arg0 (a2 / add-02 :arg2 (v / vitamin)) :arg1 (o / or :op1 (s / salmon :mod (r / rich)) :op2 (n / no-dose :mod (s2 / sardines))) :arg2 (t / thing :arg2-of (s3 / source-01 :arg1 (c / calcium)) :mod (g / good)) :time (s4 / sandwich :arg1 (c2 / cooking) :arg2 (s5 / salmon)))
(d / decline-02 :arg0 (p / person :arg0-of (d2 / decline-02 :arg1 (d3 / discuss-01 :arg0 (p2 / person) :arg1 (o / originate-01 :arg1 (p3 / person) :arg2 (p4 / person :arg1-of (e / employ-01)))))) :arg1 (c / contrast-01 :arg1 (d4 / discuss-01 :arg0 (p5 / person) :arg1 (p6 / person :arg1-of (o2 / originate-01 :arg2 (i / it)))) :arg2 (h / hire-01 :arg0 (p7 / person :arg0-of (h2 / have-org-role-91 :arg1 (c2 / company) :arg2 (s / spokesman))) :arg1 (p8 / person :arg0-of (s2 / specialize-01) :arg2-of (s3 / staff-01) :arg0-of (f / focus-01 :arg2 (b / bring-01 :arg0 (p9 / person) :arg1 (m / minority :mod (r / race)) :arg2 (p10 / person :arg0-of (s4 / specialize-01))) :arg0-of (r2 / represent-01 :arg1 (p11 / person :arg0-of (s5 / specialize-01)) :location (l / location :poss (c3 / company)) :degree (t / total)))))))
(p / prepare-02 :arg1 (w / woman) :arg2 (a / and :op1 (e / eat-01 :arg0 (w2 / woman) :arg1 (a2 / and :op1 (h / husbands-workers :poss (w3 / woman)) :op2 (s / swim-01 :arg0 (w4 / woman)) :op3 (d / dinner :arg0 (w5 / woman)))) :op2 (s2 / swim-01 :arg0 (w6 / woman)) :op3 (d2 / dinner :arg0 (w7 / woman) :arg1 (w8 / woman))))
(j / judge-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg3 (j2 / judge-01)) :mod (d / district)) :arg1 (r / right-05 :arg1 (p2 / person) :arg2 (c / claim-01 :arg0 (p3 / person) :arg1 (c2 / compensate-01 :arg0 (p4 / person) :arg2 (m / monetary-quantity :arg1-of (e / expend-01 :arg0 (p5 / person) :arg2 (d2 / defend-01 :arg0 (p6 / person) :arg1 (c3 / case-03)) :arg1-of (l / legal-02)))))) :arg2 (p7 / person :arg0-of (h2 / have-org-role-91 :arg3 (j3 / judge-01)) :location (d3 / district :mod (c4 / country :name (n / name :op1 "N-A")))) :time (h3 / hear-01 :arg0 (p8 / person) :arg1 (t / thursday)))
(e / explain-01 :arg0 (h / hotel) :arg1 (t / thing :arg1-of (d / decide-01 :arg3 (h2 / hotel :location (h3 / hotel))) :domain (i / it)))
(i / incident :polarity - :mod (s / such))
(r / receive-01 :arg0 (c / center :arg1-of (l / legal-02) :mod (t / this)) :arg1 (f / fund-01 :quant (p / percentage-entity :value (N / N-A))) :time (s / so-far :op1 (y / year :mod (n / next))) :time (y2 / year :mod (n2 / next)))
(i / intend-01 :polarity - :arg0 (c / candidate) :arg1 (d / do-02 :arg0 (c2 / candidate) :arg1 (t / thing :arg1-of (d2 / do-02 :arg0 (c3 / candidate)))))
(f / follow-01 :arg1 (p / process-02 :arg1 (o / open-01 :arg1 (m / market :mod (g / gas)))) :arg2 (p2 / position :mod (t / trader :mod (p3 / potential))))
(r / restrict-01 :arg1 (t / traffic) :arg1-of (e / extensive-03) :location (n / neighborhood :mod (a / aglonian)))
(s / sing-01 :arg0 (a / and :op1 (r / role :mod (o / othello)) :op2 (o2 / opera :mod (g / garden :polarity -))) :arg1 (r2 / role :mod (g2 / garden :degree (m / more :mod (c / covent)))) :time (l / late :degree (m2 / more)))
(a / and :op1 (c / confirm-01 :arg0 (a2 / and :op1 (p / person :arg0-of (h / have-org-role-91 :arg2 (p2 / president :mod (v / vice)))) :op2 (p3 / person :arg0-of (h2 / have-org-role-91 :arg2 (p4 / person :arg0-of (m / manage-01 :mod (g / general)))))) :arg1 (n / news)) :op2 (a3 / announce-01 :arg0 (p5 / person) :arg1 (s / start-01 :arg0 (c2 / club) :arg1 (l / look-01 :arg0 (c3 / club) :arg1 (c4 / coach :mod (n2 / new))) :time (i / immediate))))
(h / help-01 :arg0 (d / data :mod (n / new)) :arg1 (u / understand-01 :arg1 (t / thing :arg0-of (c / cause-01 :arg1 (a / and :op1 (c2 / cut-01 :arg1 (s / star :prep-in (c3 / constellation :mod (t2 / this)))) :op2 (c4 / cut-01 :arg1 (s2 / speed :mod (s3 / star) :mod (s4 / star) :arg1-of (a2 / apply-02 :arg2 (p / planet))) :manner (w / way)))))))
(m / measure-02 :arg0 (a / and :op1 (s / speed :poss (r / rotation :mod (e / each))) :op2 (s2 / speed :poss (r2 / rotation :mod (e2 / each)))) :arg1 (t / time) :time (b / between :op1 (a2 / appear-01 :arg1 (a3 / appear-01 :arg1 (a4 / area :mod (s3 / star) :mod (r3 / recognizable)))) :op2 (e3 / et-cetera)))
(c / call-02 :mode (i / imperative) :arg0 (y / you) :arg1 (s / sfpd) :condition (h / have-03 :arg0 (y2 / you) :arg1 (i2 / information :mod (a / any))))
(c / contrast-01 :arg2 (a / and :op1 (d / disappear-01 :arg1 (t / train :mod (c2 / conventional) :arg0-of (s / sponsor-01 :arg1 (a2 / and :op1 (w / wagons) :op2 (t2 / towed)))) :arg3 (a3 / and :op1 (c3 / czech) :op2 (r / railway :mod (g / globe))) :manner (g2 / gradual) :time (y / year :mod (r2 / recent))) :op2 (r3 / replace-01 :arg0 (o / or :op1 (u / unit :mod (e / email)) :op2 (u2 / unit :mod (e2 / electric))) :arg1 (a4 / and))))
(o / obligate-01 :arg2 (r / reach-01 :arg0 (p / person :arg0-of (o2 / own-01 :arg1 (b / billboard))) :arg1 (a / advertisements :arg0 (p2 / person) :arg1 (a2 / advertisements))) :time (f / first))
(a / and :op1 (c / contrast-01 :arg2 (c2 / change-01 :arg0 (i / it) :arg1 (n / name))) :op2 (d / deal-01 :arg0 (i2 / it) :arg2 (n2 / nothing)))
(c / contrast-01 :arg1 (p / person :mod (n / nation) :mod (o / only :polarity -)) :arg2 (a / and :op1 (p2 / policy :mod (r / region) :mod (s / sensitive :degree (v / very)) :mod (r2 / region) :mod (a2 / also)) :op2 (t / theme :mod (s2 / schizophrenic :degree (s3 / somewhat)) :mod (s4 / sensitive :degree (s5 / somewhat)))))
(r / reaped :arg0 (p / person :arg0-of (f / farm-01)) :arg1 (c / commodity :quant (m / multiple :op1 (m2 / mass-quantity :quant (N / N-A) :unit (t / ton)))))
(a / and :op1 (e / estimate-01 :arg1 (p / pessimistic :time (b / before :op1 (n / now) :quant (t / temporal-quantity :quant (N / N-A) :unit (m / month))))) :op2 (a2 / assume-02 :arg1 (d / drop-01 :arg1 (d2 / decimal :mod (d3 / decimal)) :prep-against (l / last))))
(a / average-01 :arg1 (t / thing :arg1-of (h / harvest-01) :mod (l / last)) :arg2 (a2 / above :op1 (a3 / average-01)))
(i / include-91 :arg1 (f / field :quant 3 :mod (f2 / few :degree (m / more))) :arg2 (p / person :arg0-of (f3 / farm-01)) :time (y / year :mod (t / this)))
(r / rich :domain (h / harvest-01 :arg1 (p / poppy) :time (y / year :mod (t / this))) :manner (r2 / rich))
(s / say-01 :arg0 (p / police) :arg1 (h / have-03 :arg0 (t / they) :arg1 (a / and :op1 (c / cannabis) :op2 (s2 / sticks) :op3 (m / machetes) :location (h2 / hand :part-of (t2 / they)))))
(p / pay-01 :arg0 (t / they) :arg1 (i / income :quant (p2 / percentage-entity :value 43.2)) :arg3 (t2 / tax-01 :arg3 (t3 / tax)) :arg2-of (t4 / total-01))
(s / say-01 :arg0 (o / organization :mod (h / health) :mod (w / world)) :arg1 (c / cycled :arg0 (p / person :arg0-of (- / -rrb- :arg1 (v / virus)) :arg0-of (-2 / -rrb- :arg1 (v2 / virus)))))
(w / win-01 :arg0 (i / it) :degree (t / total) :manner (h / help-01 :polarity - :arg0 (p / person :mod (r / religious-group :name (n / name :op1 "N-A")))))
(i / intend-01 :arg0 (i2 / it) :arg1 (e / ensure-01 :arg0 (i3 / it) :arg1 (p / preached :arg1 (i4 / imams :mod (o / only) :arg0-of (s / schooled :arg1 (a / and :op1 (m / mosque) :op2 (m2 / modlitebnáchs)))))) :prep-in (p2 / particular))
(g / go-01 :arg1 (p / pilgrimages :mod (t / traditional)) :arg4 (a / around :op1 30) :arg4 (a2 / around :op1 30) :time (y / year :mod (e / every)))
(g / gesture :arg1-of (e / end-01 :time (c / crisis)) :domain (i / it))
(c / contrast-01 :arg2 (s / show-01 :arg0 (c2 / cold :mod (p / persistent)) :arg1 (h / have-03 :arg0 (p2 / person :arg0-of (l / lead-02 :arg1 (c3 / country :name (n / name :op1 "N-A")))) :arg1 (n2 / nothing))))
(c / contrast-01 :arg2 (g / good :degree (m / more) :mod (c2 / certain) :domain (s / speak-01 :arg0 (p / person :arg0-of (l / lead-02)) :mod (a / again) :mod (a2 / at-least)) :time (a3 / after :op1 (a4 / and :op1 (t / temporal-quantity :quant (N / N-A) :unit (m2 / month) :arg1-of (o / open-09)) :op2 (r / risk-01 :arg2 (c3 / catastrophe :mod (u / utterly)))))))
(c / change-01 :arg1 (a / all :arg1-of (m / mean-01 :arg2 (a2 / and :op1 (h / headquarters :arg1 (a3 / and :op1 (h2 / headquarters) :op2 (e / encoding :mod (e2 / exchange-01 :arg1 (s / stock))))) :op2 (e3 / encoding :arg1 (e4 / exchange-01 :arg1 (s2 / stock)))))) :arg2 (n / natwest))
(m / multi-sentence :snt2 (l / lead-03 :arg0 (c / company :arg0-of (w / win-01)) :arg2 (f / finish-07 :arg0 (c2 / company) :arg2 3000)))
(c / criticism :poss (p / person :name (n / name :op1 "frankie" :op2 "dettori")))
FAILED_TO_PARSE#Number of opening and closing brackets doesn't match.
(m / multi-sentence :snt1 (s / sorry-01 :arg1 (i / i) :arg2 (e / event :mod (t / this))) :snt2 (s2 / say-01 :arg0 (h / he) :arg1 (t2 / thing :arg1-of (s3 / state-01))))
(s / say-01 :arg0 (p / person :name (n / name :op1 "michael" :op2 "martin") :arg0-of (h / head-01 :arg1 (c / constructors :mod (b / bridge) :arg0-of (c2 / cross-02 :arg1 (b2 / bridge))))) :arg1 (m / milestone :mod (i / important) :domain (c3 / closure :arg1 (c4 / construct-01 :arg1 (b3 / bridge :mod (e / each))) :ord (o / ordinal-entity :value 1)) :time (a / always)))
(s / say-01 :arg1 (h / happy :domain (m / man :quant 3)) :arg2 (c / content-01 :arg1 (m2 / man :quant 3)))
(s / say-01 :arg0 (p / person :arg0-of (h / have-rel-role-91 :arg1 (p2 / person :arg0-of (h2 / have-rel-role-91 :arg2 (l / lawyer))) :arg2 (l2 / lawyer))) :arg1 (t / thing :arg1-of (r / respond-01 :arg1-of (p3 / possible-01 :polarity -)) :domain (t2 / this)))
(s / say-01 :arg0 (p / person :name (n / name :op1 "N-A")) :arg1 (s2 / sympathized :arg1 (h / he) :arg2 (h2 / hitler :mod (a / adolf))))
(e / estimate-01 :arg1 (p / person :arg0-of (s / specialize-01)) :arg2 (p2 / person :arg0-of (s2 / specialize-01)) :location (r / republic :mod (c / czech)))
(p / person :arg0-of (p2 / practise :arg1 (r / risk-01 :arg2 (o / or :op1 (c / cancer) :op2 (d / depression)))) :arg1-of (r2 / regular-02))
(p / push-02 :arg0 (p2 / person :quant (s / some) :arg0-of (l / look-01 :arg1 (e / excuse-02 :arg0 (p3 / person) :arg1 (c / complain-01)))) :mod (o / of-course) :mod (o2 / of-course))
(p / possible-01 :arg1 (' / ' :arg0 (i / i) :arg1 (t / this) :degree (t2 / total)))
(s / say-01 :arg0 (s2 / she) :arg1 (r / ready-02 :polarity - :arg1 (y / you) :arg2 (t / that)) :arg1-of (s3 / say-01 :arg0 (s4 / she)))
(m / multi-sentence :snt1 (c / couldn :arg0 (h / he) :arg1 (o / or :op1 (s / sit-01 :arg1 (h2 / he) :degree (t / total)) :op2 (c2 / crawls :arg0 (h3 / he)) :time (u / until :op1 (a / age-01 :arg1 (h4 / he) :arg2 3)))) :snt2 (a2 / and :op2 (t2 / talk-01 :polarity - :arg0 (h5 / he) :mod (s2 / still))))
(m / multi-sentence :snt1 (t / teach-01 :arg0 (w / we) :arg1 (l / language :arg1-of (s / sign-01)) :arg2 (h / he)) :snt2 (s2 / say-01 :arg0 (i / i) :arg1 (a / and :op1 (s3 / sign-01 :arg0 (w2 / we) :arg1 (l2 / language :arg1-of (s4 / sign-01))) :op2 (s5 / say-01 :arg0 (i2 / i) :arg1 (p / picciutová :arg1 (n / news :topic (n2 / news :mod (c / cbs))))))))
(s / see-01 :arg0 (i / i) :arg1 (w / water :location (p / place :quant (s2 / several) :location-of (s3 / see-01 :arg0 (i2 / i) :arg1 (s4 / she) :time (b / before :op1 (s5 / see-01 :polarity - :arg0 (i3 / i) :arg1 (s6 / she) :time (b2 / before :op1 (s7 / see-01 :arg0 (i4 / i) :arg1 (s8 / she) :time (b3 / before :op1 (s9 / see-01 :arg0 (i5 / i) :arg1 (s10 / she) :time (b4 / before)))))))))))
(c / contrast-01 :arg1 (a / age-01 :arg1 (m / man :quant 1 :arg1-of (a2 / age-01 :arg2 (t / temporal-quantity :quant (N / N-A) :unit (y / year)))) :arg2 (c2 / condition :arg1-of (c3 / critical-02))) :arg2 (v / victim :quant 2 :mod (o / other) :location (c4 / condition :mod (s / stabilize))))
(a / and :op1 (h / house) :op2 (v / vehicle) :quant (s / several) :mod (a2 / also) :location (a3 / area))
(a / and :op1 (s / strengthen-01 :arg0 (h / he) :arg1 (p / presence :poss (p2 / person :arg1-of (b / black-05))) :mod (a2 / also)) :op2 (l / latinskoameri?anek :arg0 (h2 / he) :arg1 (s2 / sport :poss (s3 / sport :mod (t / this)))))
(c / cause-01 :arg0 (a / and :op1 (c2 / compose-01 :arg1 (t / team :arg0-of (g / gymnast)) :arg2 (a2 / athletes :mod (f / female) :quant (o / only :op1 4))) :op2 (a3 / and :op1 (c3 / compose-01 :arg1 (t2 / team :arg0-of (g2 / gymnasts)) :arg2 (a4 / athletes :quant 4 :mod (f2 / female) :mod (o2 / only))) :op2 (y / year :domain (t3 / this) :time (y2 / year :mod (l / last) :time-of (t4 / train :mod (k / karolyiová)))))) :domain (t5 / they))
(m / multi-sentence :snt1 (t / thank-01 :arg0 (i / i) :arg1 (y / you) :arg2 (a / and :op1 (y2 / you) :op2 (s / simone) :op3 (a2 / aly) :op4 (l / laurie) :op5 (m2 / madison) :op6 (m3 / madison) :op7 (w / win-01 :arg0 (y3 / you) :arg2 (a3 / and :op1 (p / person :arg0-of (h / have-rel-role-91 :arg2 (p2 / power))) :op2 (p3 / person :arg0-of (w2 / win-01 :arg1 (g / gold :mod (o / olympic)))))))) :snt2 (a4 / and :op1 (t2 / thank-01 :arg0 (i2 / i) :arg1 (y4 / you) :arg2 (m4 / motivate)) :op2 (t3 / thank-01 :arg0 (i3 / i) :arg1 (y5 / you) :arg2 (m5 / motivate))) :op3 (t4 / thank-01 :arg0 (i4 / i) :arg1 (y6 / you) :arg2 (m6 / motivate)) :op4 (t5 / thank-01 :arg0 (i5 / i) :arg1 (y7 / you) :arg2 (m7 / motivate)))
(h / hope-01 :arg0 (p / person :arg0-of (h2 / have-org-role-91 :arg2 (m / minister))) :arg1 (c / cease-01 :arg0 (p2 / person :quant 58 :arg1-of (i / include-91 :arg2 (p3 / person :quant 37 :mod (y / young) :arg0-of (a / attend-01 :arg1 (e / elect-01)) :arg0-of (a2 / attend-01 :arg1 (e2 / elect-01)))) :arg0-of (h3 / have-org-role-91 :arg2 (d / doctor :mod (y2 / young))) :arg0-of (h4 / have-org-role-91 :arg2 (d2 / doctor :mod (y3 / young))) :arg0-of (h5 / have-org-role-91 :arg2 (d3 / doctor :mod (y4 / young))) :arg0-of (h6 / have-org-role-91 :arg2 (d4 / doctor :mod (y5 / young))) :arg0-of (h7 / have-org-role-91 :arg2 (d5 / doctor :mod (y6 / young))) :arg0-of (h8 / have-org-role-91 :arg2 (d6 / doctor :mod (y7 / young))) :arg0-of (h9 / have-org-role-91 :arg2 (d7 / doctor)))))
(a / and :op2 (o / open-01 :arg1 (o2 / option :mod (t / this)) :time (s / still) :concession (p / promise-01 :arg0 (p2 / person :arg0-of (h / have-rel-role-91 :arg2 (d / dd2))) :time (m / month :mod (l / last)))))
(p / pleased :arg0 (w / we) :arg1 (p2 / possible-01 :arg1 (e / extend-01 :arg0 (w2 / we) :arg1 (o / option :purpose (t / treat-03) :arg2-of (a / available-02 :arg1 (p3 / person :quant (m / many) :arg0-of (b / benefit-01 :arg1 (p4 / person :arg0-of (b2 / benefit-01 :arg1 (p5 / person) :arg1-of (p6 / possible-01))) :arg1-of (p7 / possible-01))))) :mod (p8 / preliminary)) :prep-in (r / recommend-01 :arg1 (e2 / extend-01 :arg0 (w3 / we) :arg1 (o2 / option :mod (t2 / treat-03)) :mod (p9 / preliminary)))))
(e / express-01 :arg0 (h / he) :arg1 (c / concern-01 :arg0 (d / defraud-01 :arg0 (p / person :arg0-of (h2 / have-org-role-91 :arg2 (c2 / correspondent))) :arg1 (c3 / claim-01 :arg0 (p2 / person :arg0-of (h3 / have-org-role-91 :arg1 (c4 / community :mod (r / religious-group :name (n / name :op1 "N-A"))) :arg2 (m / member :mod (o / old :degree (m2 / more))))) :arg1 (v / vote-01 :arg0 (p3 / person) :arg1 (c5 / candidate :arg1-of (c6 / choose-01 :arg0 (p4 / person)))))) :mod (p5 / particular)))
(c / criticize-01 :arg0 (i / it) :arg1 (c2 / check-01 :name (n / name :op1 (b / box) :op2 (b2 / box) :op3 (b3 / box) :op4 (b4 / box) :op5 (b5 / box) :op6 (b6 / box) :op7 (b7 / box))) :arg2 (d / department :mod (r / register-02) :part-of (p / person :arg0-of (v / vote-01)) :location (t / town)) :mod (a / also))
(h / have-03 :arg0 (a / and :op1 (s / star :arg1-of (h2 / hope-01)) :op2 (s2 / series :name (n / name :op1 (d / dexter) :op2 (s3 / series) :op3 (s4 / series) :op4 (s5 / series) :op5 (s6 / series) :op6 (s7 / series) :op7 (s8 / series)))) :arg1 (a2 / and :op1 (f / face) :op2 (s9 / shape :mod (e / eye)) :arg1-of (r / resemble-01) :mod (r2 / really)))
(w / write-01 :arg0 (p / person :name (n / name :op1 "sarah" :op2 "paradis") :arg0-of (u / use-01 :mod (a / another))) :arg1 (' / ' :mod (w2 / wow :mode (e / expressive))))
(c / contrast-01 :arg1 (p / possible-01 :arg1 (s / seem-01 :arg1 (c2 / creepy :arg1 (i / idea :topic (b / button :mod (l / lick)) :arg0-of (f / flusher :arg1 (t / thousands :arg1 (p2 / person :mod (o / other)))))) :degree (u / utter))) :arg2 (h / harmful-02 :arg0 (s2 / sink :mod (k / kitchen)) :arg1 (c3 / continent :name (n / name :op1 "N-A")) :degree (m / more :mod (a / actual))))
(f / famous :arg1 (a / and :op1 (t / test-01 :arg1 (r / resilience :poss (g / gut :part-of (s / she)) :location (a2 / around :op1 (w / world)))) :op2 (e / eat-01 :arg1 (s2 / strange)) :op3 (a3 / amaze-01 :arg1 (t2 / thing)) :op4 (a4 / amaze-01 :arg1 (t3 / thing))))
(c / confirm-01 :arg0 (h / he) :arg1 (r / reputation :poss (h2 / he) :location (f / film)) :manner (c2 / certain))
(a / and :op1 (e / easy-05 :arg1 (t / thing :quant (s / some)) :arg1-of (n / natural-03)) :op2 (g / get-03 :arg1 (o / other) :arg2 (h / hard-02 :arg1 (t2 / thing) :degree (p / pretty))))
(g / glad-02 :arg0 (t / thing :arg1-of (d / dirty-02) :arg1-of (m / make-01 :arg0 (t2 / they)) :quant (s / some)) :arg1 (i / i))
(s / say-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (p2 / publication :name (n / name :op1 "N-A") :poss (h2 / house-01 :mod (c / country :name (n2 / name :op1 "N-A")))) :arg3 (m / manage-01 :arg1 (p3 / person)))) :arg1 (f / fail-01 :arg1 (f2 / family) :arg2 (c2 / cooperate-01 :arg0 (f3 / family) :arg1 (a / authority :arg1-of (l / local-02)))))
(s / say-01 :arg0 (a / and :op1 (p / person :arg0-of (h / have-org-role-91 :arg1 (p2 / police) :arg2 (d / denovu))) :op2 (p3 / person :arg0-of (h2 / have-org-role-91 :arg1 (p4 / police)))) :arg1 (m / message-01 :arg0 (p5 / person :mod (o / other) :arg0-of (c / continue-01 :arg1 (v / violate-01 :arg0 (p6 / person) :arg1 (r / rule)))) :arg1-of (c2 / clear-06)))
(a / and :op1 (b / be-located-at-91 :arg1 (a2 / aircraft) :arg2 (f / fly-01 :arg1-of (p / practice-01))) :op2 (a3 / ask-02 :arg1 (i / identify-01 :arg0 (p2 / pilot-01) :arg1 (v / vessel :mod (f2 / fishing)) :arg2 (p3 / part :part-of (t / train-01)))))
(k / kill-01 :arg1 (p / person :arg0-of (j / join-01 :arg1 (p2 / person)) :arg0-of (j2 / join-01 :arg1 (p3 / person))))
(s / say-01 :arg0 (h / he) :arg1 (' / ' :arg1 (d / didn :mod (t / trumps)) :arg2 (o / office) :degree (t2 / total)))
(c / contrast-01 :arg2 (t / true :domain (t2 / thing :arg2-of (r / result-01))))
(l / look-01 :mode (i / imperative) :arg0 (w / we) :arg1 (i2 / it))
(m / multi-sentence :snt1 (p / probable :domain (a / ask-02 :arg0 (i / i) :arg1 (s / stop-01 :arg0 (c / camera) :arg1 (f / filming :arg0 (c2 / camera)) :time (w / while)))) :snt2 (a2 / and :op1 (b / build-01 :arg0 (i2 / i) :arg1 (c3 / close-10 :arg1 (i3 / i) :arg2 (s2 / store :mod (v / various) :location (s3 / store :mod (t / this))))) :op2 (t2 / try-01 :arg0 (i4 / i) :arg1 (s4 / see-01 :arg0 (i5 / i) :arg1 (a3 / and :op1 (a4 / age :poss (t3 / they)) :op2 (m2 / mood :mod (e / emotional)))))))
(a / and :op1 (b / be-temporally-at-91 :arg1 2 :arg2 (b2 / before :op1 (n / now) :quant (m / multiple :op1 (t / temporal-quantity :quant (N / N-A) :unit (y / year))))) :op2 (o / over :domain (b3 / brno) :time (n2 / now)))
(c / contrast-01 :arg1 (h / have-03 :arg0 (p / person :arg0-of (h2 / have-org-role-91 :arg2 (k / king :mod (c2 / championships)))) :arg1 (p2 / place :ord (o / ordinal-entity :value 5) :mod (o2 / only)) :time (y / year :mod (l / last))) :arg2 (b / become-01 :arg1 (h3 / he) :arg2 (k2 / king :mod (z / znaka?ským))))
(a / and :op1 (s / sjöströmová :arg1 (s2 / sjöströmová :ord (o / ordinal-entity :value 3) :arg0-of (w / win-01 :arg1 (r / race :quant (b / between :op1 100 :op2 100)))) :location (r2 / record :mod (w2 / world))) :op2 (w3 / win-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg2 (r3 / rio))) :arg1 (r4 / race :quant (b2 / between :op1 100 :op2 100)) :mod (s3 / still)))
(c / contrast-01 :arg2 (t / think-01 :arg0 (i / i) :arg1 (p / prepare-02 :arg0 (w / we) :arg1 (w2 / we) :arg2 (p2 / prepare-01 :arg0 (w3 / we) :arg1 (g / good :degree (m / most)) :arg1-of (p3 / possible-01)))))
(i / inform-01 :arg0 (a / and :op1 (p / person :arg0-of (h / have-org-role-91 :arg1 (o / office :mod (b / broadcast-01 :mod (n / nation))) :arg2 (s / secretary-general))) :op2 (c / commission :mod (t / telecommunication)) :op3 (c2 / commission :mod (t2 / telecommunication))) :arg1 (f / fact :polarity -))
(r / recommend-01 :arg1 (a / appear-01 :arg1 (s / sim :arg1-of (s2 / special-02) :beneficiary (f / foreign)) :time (a2 / after :op1 (n / now) :quant (u / up-to :op1 (t / temporal-quantity :quant (N / N-A) :unit (y / year))))) :arg2 (p / person :mod (f2 / foreign)))
(c / contrast-01 :arg2 (c2 / cause-01 :arg0 (p / possible-01 :arg1 (s / start-01 :arg0 (p2 / person :arg0-of (t / tour-01) :quant (m / most)) :arg1 (l / look-01 :arg0 (p3 / person) :arg1 (s2 / sim :arg1-of (l2 / local-02)) :time (s3 / stay-01 :arg1 (p4 / person) :location (c3 / country :name (n / name :op1 "N-A")))))) :arg1 (d / differ-02 :arg1 (p5 / price-01 :arg1-of (c4 / compare-01 :arg2 (r / rate :mod (p6 / person :arg0-of (o / operate-01 :arg1-of (l3 / local-02)))))) :arg2 (r2 / rate :mod (p7 / person :arg0-of (o2 / operate-01 :arg1-of (l4 / local-02)))))))
(s / subject-01 :arg1 (a / abuse-02 :arg1 (s2 / system) :mod (a2 / any)) :arg2 (p / punish-01 :mod (u / undetermined)))
(s / suffice-01 :arg0 (a / and :op1 (s2 / spaces :arg1 (c / conditions)) :op2 (c2 / consult-01 :arg1 (h / house))) :arg1 (h2 / house :arg0-of (d / disqualified :arg1 (b / building :mod (o / old :degree (m / more))) :mod (e / essential))))
(b / begin-01 :arg1 (f / feel-02 :arg0 (i / i) :arg1 (s / suffocating :arg1 (i2 / i) :time (d / date-entity :dayperiod (N / N-A)))))
(i / interesting :domain (m / mention-01 :arg0 (y / you) :arg1 (n / negativity :mod (j / just))))
(' / ' :arg1 (t / thing :mod (s / such)) :arg2 (t2 / thing :mod (s2 / such)) :degree (t3 / total))
(t / touch-01 :arg0 (i / it) :arg1 (i2 / i) :degree (q / quite))
(p / perceive-01 :arg0 (y / you) :arg1 (i / it) :manner (a / amr-unknown))
(a / and :op1 (w / work-09 :arg1 (i / it) :arg2 (r / relation-03 :arg0 (i2 / it) :mod (m / main)) :time (a2 / already)) :op2 (s / simpler :arg1 (i3 / it) :arg2 (w2 / way :direction (b / between :op1 (v / village)))))
(s / start-01 :arg0 (t / they) :arg1 (p / prepare-01 :arg0 (t2 / they) :arg1 (l / ltd :name (n / name :op1 (s2 / shippansee) :op2 (s3 / shippansee)) :arg0-of (u / use-01 :arg1 (p2 / packages :mod (t3 / transport-01)) :arg2 (b / between :op1 (m / metropolises :mod (w / world)) :op2 (a / aircraft :mod (e / especially)) :op3 (a2 / aircraft :mod (e2 / especially)))))) :li 2014)
(f / form-01 :arg0 (t / this) :arg1 (b / battlefield))
(a / and :op2 (b / be-located-at-91 :polarity - :arg2 (t / there)))
(e / exemplify-01 :arg0 (d / dry-02 :arg1 (i / injure-01 :mod (a / all) :arg1-of (t / threaten-01 :arg2 (j / jump :arg1-of (p / plan-01))))) :condition (d2 / dry-02 :arg1 (i2 / injuries :mod (a2 / all))))
(a / and :op1 (b / base-02 :arg1 (h / he) :arg2 (t / thing :quant 4 :arg1-of (b2 / base-02 :arg2 4)) :arg1-of (r / regular-02)) :op2 (l / leave-11 :arg0 (h2 / he) :arg1 (p / person :quant 3 :arg1-of (b3 / buy-01)) :time (a2 / always)))
(w / write-01 :arg0 (p / person :arg0-of (h / have-rel-role-91 :arg1 (h2 / he) :arg2 (w2 / wife) :time (f / former)) :arg0-of (h3 / have-rel-role-91 :arg1 (h4 / he) :arg2 (w3 / wife) :time (f2 / former)) :arg0-of (h5 / have-rel-role-91 :arg1 (h6 / he) :arg2 (w4 / wife) :time (f3 / former)) :arg0-of (h7 / have-rel-role-91 :arg1 (h8 / he) :arg2 (w5 / wife) :time (f4 / former))) :arg1 (d / diary :arg1 (p2 / person :arg0-of (d2 / depend-01 :polarity -) :arg0-of (d3 / depend-01 :polarity -))))
(a / and :op1 (p / paper :arg1-of (a2 / allow-01)) :op2 (f / filling :arg1 (a3 / and :op1 (f2 / filling :mod (v / vegetable)) :op2 (w / wraps))))
(a / and :op1 (d / defeat-01 :arg1 (c / country :name (n / name :op1 "United" :op2 "Kingdom") :arg1-of (i / include-91 :arg2 (p / person :quant 5))) :arg3 (s / score-entity :op1 20 :op2 5) :time (b / before :op1 (t / that) :mod (e / even))) :op2 (c2 / climbed :arg0 (p2 / person :mod (c3 / country)) :arg1 (a2 / africa :location (s2 / south)) :manner (t2 / tight) :arg1-of (c4 / cause-01 :arg0 (d2 / differ-02 :arg1 (b2 / boundary :quant 1)))))
(c / contrast-01 :arg1 (a / africans :arg0 (p / person :arg0-of (h / have-org-role-91 :arg2 (h2 / head-of-state))) :arg1 (h3 / half :ord (o / ordinal-entity :value 1)) :purpose (l / lead-01 :arg0 (p2 / person))) :arg2 (a2 / and :op1 (b / break-01 :arg1 (l2 / leg :part-of (p3 / person) :mod (d / dazzling)) :path (l3 / line :mod (d2 / defensive)) :path (l4 / line :mod (d3 / defensive))) :op2 (s / score-01 :arg1 (p4 / person) :arg2 (h4 / half :ord (o2 / ordinal-entity :value 2) :location (s2 / snow)))))
(r / race-02 :arg0 (a / and :op1 (g / glover) :op2 (h / heather)) :time (a2 / after :op1 (n / now) :quant (t / temporal-quantity :quant (N / N-A) :unit (y / year)) :mod (o / only)))
(t / take-10 :arg0 (f / find-out-03 :arg0 (i / i) :arg1 (c / champion :domain (i2 / i) :mod (o / olympic))) :arg1 (i3 / it) :duration (a / about :op1 (t2 / temporal-quantity :quant (N / N-A) :unit (m / month))))
(a / and :op1 (m / meet-03 :arg0 (s / society :name (n / name :op1 (a2 / architecture) :op2 (/ / /)) :location (s2 / south :part-of (c / country :name (n2 / name :op1 "N-A")))) :arg1 (m2 / meet-03 :arg0 (a3 / and :op1 (p / person :arg0-of (h / have-org-role-91 :arg2 (s3 / schwartzmanem :mod (a4 / arnold)))) :op2 (p2 / person :arg0-of (h2 / have-org-role-91 :arg2 (g / gee))) :op3 (p3 / person :arg0-of (h3 / have-org-role-91 :arg1 (l / library :mod (n3 / new)) :arg3 (a5 / authors))) :op4 (p4 / person :arg0-of (h4 / have-org-role-91 :arg1 (l2 / library :mod (n4 / new)) :arg3 (l3 / lead-02 :arg0 (p5 / person)))) :op5 (p6 / person :arg0-of (h5 / have-org-role-91 :arg1 (l4 / library :mod (n5 / new)) :arg3 (l5 / lead-02 :arg0 (p7 / person)))))) :arg1 (h6 / history :poss (a6 / art :poss (c2 / country)))))
(m / multi-sentence :snt1 (i / instead-of-91 :arg2 (l / let-01 :mode (i2 / imperative) :arg0 (p / person) :arg1 (t / take-01 :arg0 (p2 / person) :arg1 (t2 / they) :arg3 (f / free-03)))) :snt2 (s / say-01 :arg0 (i3 / i) :arg1 (r / r :mod (t3 / taximafie) :arg1-of (t4 / taximafie :arg2 (i4 / indictment :mod (g / groundbreaking))))))
(s / smuggle-01 :arg1 (t / that))
(a / and :op1 (s / study-01 :arg0 (h / he) :location (a2 / academy :mod (f / film) :mod (m / miroslav) :location (p / písek))) :op2 (s2 / subsequently :arg0 (h2 / he) :location (u / university :mod (b / bata) :location (z / zlín)) :time (s3 / subsequent)))
(d / drive-02 :arg0 (t / taxi) :arg1 (p / person :arg0-of (t2 / tour-01) :mod (f / foreign)) :arg2 (p2 / place :arg1-of (s / same-01 :arg2 (p3 / place :arg1-of (s2 / show-01 :arg0 (o / or :op1 (b / bridge :mod (c / charles)) :op2 (s3 / street :location (p4 / pa?í?ská))))))) :mod (s4 / still))
(y / yes :mod (e / exact))
(l / lose-02 :arg1 (f / fight-01 :ord (o / ordinal-entity :value 1)) :arg2 (k / kvitova :arg0 (p / person :arg0-of (s / succumb :arg1 (s2 / surprise :mod (p2 / portorikánskému)) :time (a / after :op1 (v / value-interval :op1 4 :op2 6 :op3 6 :op4 1))))))
(m / multi-sentence :snt1 (k / kvitova :time (a / after :op1 (w / while))) :snt2 (a2 / afá?ivá :arg0 (p / person :arg0-of (h / have-rel-role-91 :arg1 (h2 / he) :arg2 (u / uncle)))))
(a / and :op1 (d / dictators :arg1 (n / nation :quant 2 :mod (g / great) :mod (g2 / great))) :op2 (r / regimes :arg1 (r2 / regime)) :op3 (c / come-04 :arg1 (r3 / regime) :arg2 (p / power)) :time (d2 / date-entity :century (N / N-A)))
(s / specific-02 :arg1 (t / this) :arg2 (n / nation :mod (t2 / this)) :arg1-of (c / cause-01 :arg0 (g / guilty-01 :arg1 (w / we) :arg2 (n2 / nation :mod (t3 / this)) :arg1-of (r / resemble-01))))
(a / and :op1 (b / bankrupt-01 :arg1 (e / economy :poss (c / country :name (n / name :op1 "Ukraine"))) :arg1-of (l / long-03)) :op2 (b2 / bankruptcy :arg1 (e2 / economy :poss (c2 / country)) :arg1-of (l2 / long-03) :mod (m / main)))
(p / parasites :mod (d / dangerous) :location (s / smoked :mod (a / albert)))
(a / appear-01 :arg1 (s / symptom) :duration (t / temporal-quantity :quant (N / N-A) :unit (w / week)) :time (a2 / after :op1 (e / eat-01 :arg0 (s2 / symptom) :arg1 (f / fish :arg1-of (i / infect-01 :arg2 (h / heat-treated)) :mod (i2 / inadequate)))))
(h / hope-01 :arg0 (t / they) :arg1 (m / meet-03 :arg0 (t2 / they) :arg1 (p / person :arg0-of (s / study-01) :time (f / former)) :mod (a / again)))
FAILED_TO_PARSE#Two concepts in a row.
(a / and :op1 (c / criticize-01 :arg0 (p / person :name (n / name :op1 "N-A") :arg0-of (h / have-org-role-91 :arg2 (z / zhuová))) :arg1 (w / white :mod (v / vast))) :op2 (e / end-01 :arg1 (a2 / and :op1 (s / society :arg0-of (l / lead-02)) :op2 (a3 / article) :arg1-of (c2 / complete-02))))
(r / remain-01 :arg1 (l / location :name (n / name :op1 "Íráku") :mod (l2 / large :degree (m / most :ord (o / ordinal-entity :value 2)))) :arg3 (c / control-01 :arg1 (s / state :mod (r2 / religious-group :name (n2 / name :op1 "N-A")))))
(a / and :op1 (t / team :arg0-of (q / qualify-02 :arg1 (p / person :arg1-of (q2 / qualify-02 :arg2 (q3 / quarterfinals)))) :mod (b / both)) :op2 (d / decide-01 :arg0 (p2 / person :arg0-of (h / have-org-role-91 :arg1 (t2 / team :consist-of (t3 / team :quant 6)))) :arg1 (e / end-up-03 :arg1 (g / group) :arg2 (p3 / place :ord (o / ordinal-entity :value 1) :ord (o2 / ordinal-entity :value 1)))))
(a / ahead :op1 (r / railway :mod (o / olympic)) :mod (u / usual))
(a / and :op1 (r / reflected :arg1 (o / or :op1 (h / he) :op2 (s / she)) :condition (b / be-located-at-91 :arg1 (t / they) :arg2 (w / weightless :mod (s2 / state)))) :op2 (f / flies :arg1 (o2 / or)) :op3 (e / effortlessly :arg1 (o3 / or) :mod (a2 / again) :time (t2 / then)))
(a / allow-01 :arg0 (a2 / approach-02 :mod (t / this)) :arg1 (a3 / and :op1 (p / push-01 :arg0 (y / you) :arg1 (i / infringe-01 :arg1 (t2 / thing :arg1-of (s / state-01) :mod (p2 / politics)))) :op2 (m / moderate-03 :arg1 (t3 / thing) :arg2 (n / need-01))))
(o / oplakali :arg0 (p / person :arg1-of (l / local-02)) :arg1 (i / it) :arg2 (l2 / lose-02 :arg1 (c / city :location (a / aboard)) :mod (l3 / last)))
(s / say-01 :arg0 (s2 / she) :arg1 (t / thing :arg1-of (r / resemble-01 :arg2 (t2 / thing :arg1-of (r2 / resemble-01 :arg2 (a / and :op1 (c / coffee) :op2 (c2 / culture))) :domain (i / i)))))
(w / want-01 :arg0 (p / person :arg1-of (l / local-02) :arg0-of (p2 / produce-01 :arg1 (f / fruit)) :arg1-of (l2 / local-02)) :arg1 (a / and :op1 (i / into :arg1 (p3 / person)) :op2 (s / sell-01 :arg0 (p4 / person) :arg1 (c / coffee))))
(a / and :op1 (d / donate-01 :arg0 (d2 / dropshipper) :arg1 (r / rate-entity-91 :arg1 (m / monetary-quantity :quant 5.3 :unit (d3 / dollar)) :arg2 (v / volume-quantity :quant (N / N-A) :unit (g / gallon))) :arg4 (c / charity)) :op2 (d4 / donate-01 :arg0 (d5 / dropshipper) :arg1 (r2 / rate-entity-91 :arg1 (m2 / monetary-quantity :quant 5.3 :unit (d6 / dollar) :mod (v2 / volume-quantity :quant (N2 / N-A) :unit (g2 / gallon))) :arg2 (v3 / volume-quantity :quant (N3 / N-A) :unit (g3 / gallon))) :arg4 (c2 / charity)) :op3 (a2 / admit-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg2 (s / secretary :mod (s2 / state)) :time (f / former))) :arg1 (r3 / rate-entity-91 :arg1 (m3 / monetary-quantity :quant 5.3 :unit (d7 / dollar) :arg1-of (c3 / cost-01 :arg2 (m4 / monetary-quantity :quant 5.3 :unit (d8 / dollar)))) :arg2 (v4 / volume-quantity :quant (N4 / N-A) :unit (g4 / gallon)) :location (t / tenure :poss (p2 / person) :location (t2 / tenure :poss (s3 / state))))))
(i / instead-of-91 :arg1 (o / offer-01 :arg0 (p / person :mod (c / country :name (n / name :op1 "N-A"))) :arg1 (c2 / call-01 :arg0 (p2 / person) :arg1 (c3 / country :name (n2 / name :op1 "N-A")) :arg2 (c4 / centre :arg1-of (c5 / call-01 :arg2 (n3 / name))))) :arg1-of (i2 / instead-of-91))
(c / cause-01 :arg0 (m / meet-03 :arg0 (p / person :arg0-of (s / study-01)) :arg1 (d / demonstrate-01 :arg0 (p2 / person) :arg1 (r / reform-01 :arg0 (g / government-organization :arg0-of (g2 / govern-01)) :arg1 (s2 / system :mod (e / educate-01) :arg1-of (p3 / public-02)))) :time (m2 / meet-03 :arg0 (p4 / person :arg0-of (s3 / study-01)))) :arg1 (a / and :op1 (p5 / person :arg0-of (s4 / study-01)) :op2 (p6 / person :arg0-of (h / have-org-role-91 :arg1 (p7 / police))) :location (p8 / paulo :mod (s5 / san))))
(p / possible-01 :arg1 (s / see-01 :arg0 (p2 / person :arg0-of (p3 / participate-01 :arg1 (d / demonstrate-01)) :quant (s2 / some) :arg1-of (i / include-91 :arg2 (p4 / person :arg0-of (p5 / participate-01 :arg1 (d2 / demonstrate-01))))) :arg1 (t / thing :manner-of (s3 / sprayed :arg0 (p6 / person) :arg1 (w / wall :arg1 (w2 / wall)) :arg2 (p7 / person :arg0-of (h / have-org-role-91 :arg2 (p8 / president :mod (t2 / temporary))))))))
(s / say-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (c / country :name (n / name :op1 "N-A")) :arg2 (a / ambassador :location (c2 / country :name (n2 / name :op1 "N-A"))))) :arg1 (r / rise-01 :arg1 (t / turnover :mod (l / levana)) :arg2 (p2 / percentage-entity :value (N / N-A)) :time (a2 / after :op1 (a3 / abolition :arg1 (t2 / thing :arg2-of (s2 / sanction-02 :arg1 (a4 / and :op1 (m / moscow) :op2 (t3 / tehran))))))))
(a / appear-01 :arg1 (h / hindes) :time (j / just))
(s / state-01 :arg0 (i / i) :arg1 (c / contract-02 :arg1 (t / treaty) :arg1-of (c2 / call-01 :manner (s2 / so)) :arg1-of (e / enter-01 :arg0 (f / force :arg1-of (e2 / enter-01 :arg0 (p / person :quant 2016))))))
(m / multi-sentence :snt1 (f / follow-01 :arg1 (d / discover-01 :arg1 (p / page :arg0-of (c / cover-01 :arg1 (p2 / page :arg2-of (c2 / cover-01))))) :arg2 (o / or :op1 (- / -lrb- :mod (b / bizarre)) :op2 (s / sequel :mod (s2 / simple))) :beneficiary (g / government-organization :arg0-of (a / administrate-01 :arg1 (c3 / country :name (n / name :op1 "N-A"))))) :snt2 (s3 / stage-01 :arg0 (t / they) :arg1 (v / video) :arg1-of (c4 / cause-01 :arg0 (a2 / and :op1 (f2 / family :mod (w / whole) :arg0-of (h / have-org-role-91 :arg1 (f3 / family :mod (w2 / whole)) :arg2 (m2 / member))) :op2 (p3 / person :arg0-of (h2 / have-rel-role-91 :arg1 (k / kardashian-jenner) :arg2 (u / uncle))) :op3 (p4 / person :arg0-of (h3 / have-rel-role-91 :arg1 (p5 / person) :arg2 (u2 / uncle))) :op4 (p6 / person :arg0-of (h4 / have-rel-role-91 :arg1 (p7 / person) :arg2 (u3 / uncle))) :op5 (p8 / person :arg0-of (h5 / have-rel-role-91 :arg1 (p9 / person) :arg2 (u4 / uncle))) :op6 (p10 / person :arg0-of (h6 / have-rel-role-91 :arg1 (p11 / person) :arg2 (u5 / uncle))) :op7 (p12 / person :arg0-of (h7 / have-rel-role-91 :arg1 (p13 / person) :arg2 (u6 / uncle)))))))
(c / cause-01 :arg0 (l / look-01 :arg0 (w / we) :arg1 (e / era :mod (s / september) :quant (n / number :mod (s2 / september)))) :arg1 (e2 / enter-01 :arg0 (w2 / we) :arg1 (e3 / era :mod (n2 / new)) :mod (c2 / certain)))
(a / and :op1 (s / seymorová :arg0 (s2 / secret :name (n / name :op1 (s3 / stephanie)) :mod (o / original) :location (s4 / station :name (n2 / name :op1 "N-A") :arg0-of (h / have-org-role-91 :arg2 (j / june)))) :arg1 (a2 / and :op1 (j2 / jenner) :op2 (h2 / hadidovou))) :op2 (d / dubbed :arg0 (s5 / secret) :arg1 (' / '' :mod (t / time-hookers))) :op3 (d2 / dubbed :arg0 (a3 / and) :arg1 (t2 / time-hookers)))
(f / flared :arg1 (t / thing :arg1-of (f2 / feel-01) :mod (t2 / this)) :arg2 (n / news :topic (a / appear-01 :arg1 (v / vogue :arg1 (v2 / vogue)))) :mod (a2 / again))
(s / supermodel :arg0 (h / he) :arg1 (w / word) :mod (t / truest))
(p / prepare-02 :arg1 (s / service :mod (c / community) :arg1-of (l / legal-02) :arg1-of (t / tense :time (a / already) :degree (s2 / so))) :arg2 (c2 / cut-02 :arg1 (s3 / service) :degree (f / further)))
(a / action :topic (c / campaign-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg2 (m / member))) :arg1-of (a2 / allege-01)) :time (a3 / after :op1 (p2 / point-01 :arg0 (p3 / person :arg0-of (h2 / have-org-role-91 :arg1 (s / staff) :arg2 (m2 / member))) :arg1 (w / weapon) :arg1-of (a4 / allege-01))))
(a / and :op1 (o / obligate-01 :polarity - :arg1 (w / weapon :mod (c / country :name (n / name :op1 "N-A"))) :arg2 (c2 / cause-01 :arg0 (w2 / weapon) :arg1 (d / damage-01 :arg1 (w3 / weapon)))) :op2 (s / say-01 :arg0 (w4 / weapon) :arg1 (a2 / apply-01)))
(s / say-01 :arg1 (a / and :op1 (e / experience-01 :polarity - :arg0 (p / person) :arg1 (p2 / person)) :op2 (w / want-01 :arg0 (w2 / we) :arg1 (s2 / solve-01 :arg0 (w3 / we) :arg1 (p3 / problem :mod (t / this))))) :arg2 (p4 / person :arg0-of (h / have-org-role-91 :arg2 (m / minister :mod (f / facebook)))) :medium (s3 / statement :mod (e2 / email)))
(l / lay :arg0 (v / victim) :arg1 (h / highway) :time (m / middle :op1 (n / night)))
(m / multi-sentence :snt1 (c / contrast-01 :arg1 (h / hear-01 :arg1 (p / person :arg0-of (d / drive-01) :quant (s / several)) :time (a / already)) :arg2 (h2 / hear-01 :arg0 (p2 / police) :arg1 (a2 / and :op1 (p3 / person :arg0-of (d2 / drive-01) :mod (t / this)) :op2 (p4 / person :mod (o / other) :arg0-of (w / witness-01 :arg1 (a3 / accident)) :arg0-of (w2 / witness-01 :arg1 (a4 / accident)))))) :snt2 (a5 / and :op1 (c2 / call-02 :arg0 (p5 / police) :arg1 (p6 / person :arg0-of (d3 / drive-01) :mod (t2 / this))) :op2 (p7 / person :mod (o2 / other) :arg0-of (w3 / witness-01 :arg1 (a6 / accident)) :arg0-of (w4 / witness-01 :arg1 (a7 / accident)) :quant (a8 / all))))
(m / multi-sentence :snt1 (b / bene :mode (i / interrogative)) :snt2 (a / and :op1 (i2 / invite-01 :mode (i3 / imperative) :arg0 (y / you) :arg1 (c / cooperate-01 :arg0 (a2 / and :op1 (k / kubicek :name (n / name :op1 (j / ji?í))) :op2 (j2 / jiránek :name (n2 / name :op1 (a3 / artists))))) :arg2 (c2 / cooperate-01 :arg2 (a4 / and :op1 (j3 / ji?í) :op2 (a5 / artists)))) :op2 (c3 / create-01 :arg0 (t / they) :arg1 (f / film) :manner (t2 / together))))
(p / popular-02 :arg1 (d / drink :quant (m / multiple :op1 8)) :arg2 (t / top :quant 10) :arg1-of (g / general-02) :arg1-of (g2 / general-02))
(s / say-01 :arg0 (p / person :arg0-of (l / lead-02 :arg1 (p2 / party))) :arg1 (c / contrast-01 :arg1 (s2 / strike-01 :arg1 (s3 / strike-01 :arg1-of (c2 / cause-01 :arg0 (w / wage :beneficiary (p3 / person :arg0-of (w2 / work-01 :arg1 (o / oil)) :location (n / north :part-of (n2 / north))))))) :arg2 (m / meet-01 :arg0 (p4 / party :quant (a / all)) :arg1 (r / round-05 :arg1 (n3 / negotiate-01) :mod (n4 / new)))))
(m / multi-sentence :snt1 (p / pressure-01 :arg1 (c / company :mod (e / energy)) :arg1-of (c2 / cause-01 :arg0 (p2 / price-01 :arg1 (o / oil :arg1-of (l / low-04)) :arg2 (m2 / monetary-quantity :arg2-of (p3 / price-01 :arg1 (o2 / oil)) :arg1-of (l2 / low-04))))) :snt2 (d / decide-01 :arg0 (p4 / person :mod (c3 / country :name (n / name :op1 "N-A"))) :arg1 (l3 / leave-15 :arg0 (p5 / person) :arg1 (u / union-02 :arg1 (c4 / continent :name (n2 / name :op1 "N-A"))))))
(s / say-01 :arg0 (t / thing :arg1-of (s2 / state-01)) :arg1 (n / need-01 :arg0 (w / we) :arg1 (e / economy :arg0-of (w2 / work-09 :arg1 (t2 / thing :arg1-of (s3 / state-01))) :mod (o / only :polarity -)) :location (a / across :op1 (c / country))))
(m / multi-sentence :snt1 (c / concern-01 :arg0 (l / like-02 :arg0 (i / i) :arg1 (w / work-01 :arg0 (i2 / i) :arg1-of (l2 / like-02 :arg0 (i3 / i) :purpose (w2 / work-01 :arg0 (i4 / i)))) :arg1-of (l3 / like-02 :arg0 (i5 / i) :arg1-of (l4 / like-02 :arg0 (i6 / i) :arg1-of (l5 / like-02 :arg0 (i7 / i) :arg1-of (l6 / like-02 :arg0 (i8 / i)))))) :arg1 (h / hospital :mod (o / only) :arg1-of (b / be-located-at-91 :arg2 (h2 / hospital :arg1-of (e / empty-02)))) :time (n / now)) :snt2 (p / possible-01 :arg1 (p2 / possible-01 :arg1 (m2 / make-01 :arg1 (r / room) :location (a / another :location-of (l7 / like-02 :arg0 (i9 / i) :arg1 (w3 / work-01)))))))
(m / multi-sentence :snt1 (i / invest-01 :mode (i2 / interrogative) :arg0 (p / person :arg0-of (p2 / plan-01 :arg1 (v / vehicle))) :arg2 (i3 / invest-01 :arg0 (p3 / person) :arg2 (r / rate-entity-91 :arg1 (u / up-to :op1 (u2 / up-to :op1 (u3 / up-to :op1 (b / between :op1 (t / temporal-quantity :quant (N / N-A) :unit (h / hour)) :op2 (t2 / temporal-quantity :quant (N2 / N-A) :unit (h2 / hour))))) :arg2 (t3 / temporal-quantity :quant (N3 / N-A) :unit (h3 / hour)))))) :snt2 (p4 / possible-01 :arg1 (e / exemplify-01 :arg0 (p5 / purchase-01 :arg0 (c / carrier) :arg1 (u4 / up-to :op1 (b2 / between :op1 (t4 / temporal-quantity :quant (N4 / N-A) :unit (h4 / hour)) :op2 (t5 / temporal-quantity :quant (N5 / N-A) :unit (h5 / hour)))))) :op3 (c2 / contract-02 :arg1 (c3 / carrier) :arg2 (p6 / purchase-01 :arg1 (u5 / unit :mod (e2 / electric)) :purpose (t6 / train :mod (f / fast :degree (m2 / more)) :location (a / along :op1 (r2 / route)))))))
(a / and :op1 (w / win-01 :arg0 (l / law :mod (n / new))) :op2 (h / help-01 :arg0 (l2 / law) :degree (t / total)))
(p / point-out-02 :arg0 (c / critic) :arg1 (r / remain-01 :arg1 (r2 / rule :purpose (c2 / combat-01 :arg1 (a / and :op1 (l / law :polarity -) :op2 (t / transfer-01 :arg1-of (e / easy-05)))))))
(m / multi-sentence :snt1 (a / and :op1 (c / case :mod (b / back)) :op2 (c2 / cost-01 :arg2 (m2 / more-than :op1 (m3 / more))) :mod (b2 / back)) :snt2 (p / place :mod (o / other)))
(a / and :op1 (h / high-02 :arg1 (c / crop :consist-of (p / poppy)) :arg2 (p2 / product-of :op1 2.5 :op2 (p3 / percentage-entity :value (N / N-A))) :time (y / year :mod (t / this))) :op2 (a2 / and :op1 (h2 / high-02 :arg1 (c2 / crop) :arg2 (p4 / percentage-entity :value (N2 / N-A)) :time (y2 / year :mod (l / last))) :op2 (a3 / apos :arg1 (c3 / crop) :time (d / date-entity :decade (N3 / N-A)))))
(h / have-concession-91 :arg1 (s / signal-07 :arg1 (r / rate-entity-91 :arg1 (t / thing :arg1-of (i / incinerate-01) :arg1-of (l / low-04 :degree (m / more))) :arg2 (r2 / rate-entity-91 :arg1 (m2 / mass-quantity :quant (N / N-A) :unit (t2 / ton)) :arg2 (m3 / mass-quantity :quant (N2 / N-A) :unit (t3 / ton))))))
(c / contrast-01 :arg1 (r / return-01 :arg1 (h / hektarový)) :arg2 (a / about :op1 (p / percentage-entity :value (N / N-A)) :domain (i / it)))
(k / kill-01 :arg0 (p / person :mod (r / religious-group :name (n / name :op1 "N-A"))) :arg1 (a / and :op1 (d / defend-01 :manner (c / consistent)) :op2 (p2 / person :arg0-of (h / have-rel-role-91 :arg2 (d2 / doctor)))))
(h / have-03 :arg0 (c / case-03 :mod (p / polio)) :arg1 (c2 / case :mod (p2 / polio)) :mod (a / again))
(t / tell-01 :arg0 (p / person :name (n / name :op1 "N-A") :arg0-of (h / have-org-role-91 :arg1 (z / zaffran :mod (p2 / polio)) :arg2 (d / director))) :arg1 (s / start-01 :arg1 (v / vaccination :location (n2 / nigeria)) :time (w / week :mod (n3 / next))) :arg2 (p3 / person :arg0-of (h2 / have-org-role-91 :arg2 (d2 / director))))
(e / expose-01 :arg1 (p / person :quant (a / all) :arg0-of (s / strike-02 :arg1-of (f / force-01))) :arg2 (v / violence :mod (p2 / physical) :mod (s2 / severe)) :time (b / be-located-at-91 :arg1 (p3 / person) :arg2 (v2 / vatican)))
(s / say-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg2 (p2 / pope))) :arg1 (a / and :op1 (p3 / pope) :op2 (p4 / person :arg0-of (h2 / have-org-role-91 :arg2 (p5 / pope))) :op3 (p6 / person :arg0-of (h3 / have-org-role-91 :arg2 (p7 / pope))) :op4 (p8 / person :arg0-of (h4 / have-org-role-91 :arg2 (s2 / spokesman))) :op5 (p9 / person :arg0-of (h5 / have-org-role-91 :arg2 (s3 / spokesman)))) :purpose (a2 / and :op1 (a3 / attract-01 :arg0 (y / you) :arg1 (a4 / attend-02 :arg1 (t / traffic-01 :arg1 (h6 / human)))) :op2 (s4 / strengthen-01 :arg0 (y2 / you) :arg1 (f / fight-01 :arg1 (h7 / he)))))
(c / call-03 :arg0 (p / person :mod (c2 / country :name (n / name :op1 "N-A"))) :arg1 (f / fate :poss (p2 / person)) :arg2 (f2 / fate :poss (s / society)) :arg1-of (f3 / frequent-02))
(f / foundation :domain (f2 / foundation :mod (r / religious-group :name (n / name :op1 "N-A")) :mod (c / country :name (n2 / name :op1 "N-A")) :mod (n3 / new)) :arg1-of (k / key-02) :arg0-of (e / ensure-01 :arg1 (r2 / revive-01 :arg1 (g / goal :mod (t / this)))))
(c / cause-01 :arg0 (m / mention-01 :arg0 (i / i) :arg1 (t / thing :arg0-of (c2 / cause-01 :arg1 (c3 / crisis)) :mod (r / real))) :arg1 (t2 / thing :ord (o / ordinal-entity :value 1) :arg1-of (m2 / mention-01 :medium (s / speech :poss (i2 / i))) :domain (a / aircraft :arg0-of (f / fight-01) :mod (c4 / country :name (n / name :op1 "N-A")) :arg0-of (f2 / fight-01) :location (b / border-01 :arg1 (c5 / country :name (n2 / name :op1 "N-A")) :arg2 (c6 / country)))))
(a / and :op1 (i / italian :arg1 (a2 / and :op1 (i2 / italian) :op2 (a3 / apos)) :time (d / date-entity :decade (N / N-A)) :ord (o / ordinal-entity :value 6)) :op2 (a4 / achieve-01 :arg0 (j / jockey) :arg1 (o2 / outcome :mod (t / this)) :location (r / race :mod (f / flat))))
(a / and :op1 (a2 / ask-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (s / station :medium (t / television) :poss (c / country :name (n / name :op1 "N-A"))) :arg2 (p2 / putin))) :arg1 (a3 / ask-02 :arg0 (p3 / person) :arg1 (r / release-01 :arg0 (p4 / person) :arg1 (p5 / post)) :arg2 (p6 / person))) :op2 (r2 / recommend-01 :arg0 (p7 / person) :arg1 (r3 / replace-01 :arg0 (p8 / person) :arg1 (p9 / person) :arg2 (r4 / replace-01 :arg0 (p10 / person) :arg1 (p11 / person)) :mod (j / just))))
(a / and :op1 (h / he) :op2 (a2 / apos) :op3 (a3 / apos) :op4 (l / ll))
(g / gibson :arg0 (p / person :arg0-of (p2 / play-01 :arg1 (a / agent :arg1-of (s / special-02))) :arg0-of (h / have-org-role-91 :arg2 (a2 / agent :mod (g2 / general)))) :time (b / before :op1 (a3 / announce-01 :arg1 (f / fire-01 :arg0 (h2 / he)))))
(h / have-concession-91 :arg1 (c / complete-01 :arg1 (a / and :op1 (s / size :poss (v / viaduct)) :op2 (p / platform :poss (b / bridge)))) :arg2 (c2 / complete-01 :arg1 (a2 / and :op1 (s2 / size :poss (v2 / viaduct)) :op2 (p2 / platform :poss (b2 / bridge)))) :concession (c3 / complete-01 :arg1 (a3 / and :op1 (s3 / size :poss (v3 / viaduct)) :op2 (w / weight :poss (b3 / bridge)))))
(c / cause-01 :arg0 (t / total-01 :arg1 (c2 / concrete :arg1-of (i / include-91 :arg2 (a / area :mod (t2 / total) :part-of (b / bridge)) :arg3 (p / percentage-entity :quant (m / more-than :op1 79)))) :arg2 (a2 / area :arg2-of (t3 / total-01) :part-of (b2 / bridge)) :time (n / now)) :arg1 (c3 / cast :arg1 (p2 / platform :mod (w / whole)) :arg2 (c4 / country :name (n2 / name :op1 "N-A") :location (b3 / bridge))))
(t / thing :arg2-of (t2 / tip-05 :arg1 (e / engineer-01)) :domain (c / closure :mod (t3 / this)) :topic (p / project :mod (a / amazing) :mod (t4 / this)))
(c / contrast-01 :arg2 (a / and :op1 (b / benefit-01 :arg0 (b2 / benefit-01) :arg1 (b3 / benefit-01)) :op2 (e / end-01 :arg1 (b4 / benefit-01) :degree (t / total))))
(m / multi-sentence :snt1 (c / cause-01 :arg1 (p / pokrýváte :arg0 (p2 / person :quant 3 :arg0-of (h / have-rel-role-91 :arg2 (d / dd2))) :arg1 (a / and :op1 (a2 / air :mod (a3 / air)) :op2 (a4 / air :arg1-of (f / fresh-04))))) :snt2 (a5 / and :op2 (f2 / fun :domain (f3 / fun))))
(c / contrast-01 :arg1 (p / possible-01 :arg1 (m / monitor-01 :arg0 (a / and :op1 (p2 / phone :arg1-of (s / smart-06) :example (p3 / phone :arg1-of (s2 / smart-06))) :op2 (p4 / phone :arg1-of (s3 / smart-06) :example (f / fitbit))) :arg1 (a2 / activity-06 :arg0 (w / we)))) :arg2 (g / give-01 :polarity - :mode (i / imperative) :arg0 (y / you) :arg1 (r / reason :arg0-of (c2 / cause-01 :arg1 (d / do-02 :arg1 (a3 / anything)))) :arg2 (w2 / we) :time (g2 / game :mod (t / this))))
(- / -rrb- :arg0 (b / bilesová :name (n / name :op1 (b2 / bilesová) :op2 (b3 / bilesová) :op3 (-2 / -lrb-))) :arg1 (-3 / -rrb- :name (n2 / name :op1 (t / thursday) :op2 (-4 / -rrb-))) :medium (t2 / thursday) :time (p / perform-01 :arg1 (b4 / balance-01 :arg1 (b5 / balance) :location (s / sport :arg1-of (o / olympics :time (s2 / summer)) :location (s3 / sport :name (n3 / name :op1 (d / de) :op2 (d2 / de) :op3 (j / janeiro))) :time (s4 / summer)))))
(m / multi-sentence :snt1 (- / -lrb- :arg0 (a / and :op1 (p / person :arg0-of (h / have-org-role-91 :arg2 (h2 / head-of-state))) :op2 (p2 / person :arg0-of (l / leave-11)) :op3 (p3 / person :arg0-of (l2 / leave-11)) :op4 (p4 / person :arg0-of (l3 / left)) :op5 (p5 / person :arg0-of (l4 / left))) :arg1 (o / other :mod (e / each)) :time (a2 / after :op1 (w / win-01 :arg0 (p6 / person) :arg1 (a3 / and :op1 (g / gold) :op2 (s / silver)) :location (f / final :part-of (v / víceboje :mod (f2 / female)))) :time (a4 / after :op1 (w2 / win-01 :arg0 (p7 / person) :arg1 (a5 / and :op1 (g2 / gold) :op2 (s2 / silver)) :location (f3 / final :part-of (v2 / víceboje :mod (f4 / female))))))) :snt2 (j / janeiro :arg0 (a6 / and :op1 (a7 / apos :time (s3 / summer)) :op2 (d / date-entity :decade (N / N-A))) :location (t / thursday)))
(t / toll :arg1 (m / manipulate-01 :arg1 (e / emotional)) :arg2 (f / future :mod (e2 / emotional)) :time (c / choose :op1 (f2 / future :mod (c2 / certain))))
(m / multi-sentence :snt1 (s / say-01 :arg0 (p / police) :arg1 (s2 / shoot-02 :arg0 (p2 / police) :arg1 (b / boy :mod (s3 / six-year-old)))) :snt2 (s4 / shooting :ord (o / ordinal-entity :value 2 :range (t / temporal-quantity :quant (N / N-A) :unit (y / year))) :domain (s5 / shoot-02 :arg1 (b2 / boy :arg1-of (a / age-01 :arg2 (t2 / temporal-quantity :quant (N2 / N-A) :unit (y2 / year)))) :location (c / city)) :time (a2 / already)))
(r / report-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg2 (s / station :arg0-of (i / investigate-01)))) :arg1 (p2 / probable :domain (s2 / shootout :arg1 (m / man :arg1-of (a / arm-01) :quant (n / number)) :mod (p3 / probable))))
(a / and :op2 (i / inspire-01 :arg0 (a2 / and :op1 (p / person :quant 3 :arg1-of (i2 / include-91 :arg2 (p2 / person :quant 3 :arg0-of (h / have-org-role-91 :arg1 (t / team))))) :op2 (p3 / person :arg0-of (h2 / have-org-role-91 :arg1 (t2 / team :name (n / name :op1 (s / simon))))) :op3 (p4 / person :arg0-of (h3 / have-org-role-91 :arg1 (t3 / team :name (n2 / name :op1 (g / gabby))))) :op4 (p5 / person :arg0-of (h4 / have-org-role-91 :arg2 (h5 / head-of-state))) :op5 (p6 / person :arg0-of (h6 / have-org-role-91 :arg2 (h7 / head-of-state))) :op6 (p7 / person :arg0-of (h8 / have-org-role-91 :arg2 (h9 / head-of-state))) :op6 (p8 / person :arg0-of (h10 / have-org-role-91 :arg2 (h11 / head-of-state))) :op7 (p9 / person :arg0-of (h12 / have-org-role-91 :arg2 (h13 / head-of-state))) :op7 (p10 / person :mod (c / color) :quant (m / many :degree (s2 / so))))))
(a / and :op1 (p / practice-01 :arg0 (c / club :mod (t / this)) :arg1 (a2 / and :op1 (p2 / practice :quant (a3 / all)) :op2 (f / family :arg1-of (h / have-org-role-91 :arg0 (h2 / he) :arg2 (m / member))))) :op2 (c2 / commit-01 :arg1 (f2 / family) :arg1-of (l / long-03) :mod (e / essential)))
(s / say-01 :arg0 (d / doctor :mod (p / person :arg0-of (h / have-org-role-91 :arg1 (d2 / doctor :mod (y / young)) :arg2 (m / mccourtová)))) :arg1 (h2 / have-03 :arg0 (d3 / doctor :mod (y2 / young)) :arg1 (c / concern-01 :arg0 (c2 / contract-02 :arg1 (a / and :op1 (c3 / crisis :time (c4 / current)) :op2 (t / thing :arg0-of (c5 / cause-01 :arg1 (t2 / treat-03 :arg1 (p2 / person :quant (a2 / all) :arg0-of (h3 / have-org-role-91 :arg2 (h4 / head-of-state)))) :mod (f / fair)))) :arg1-of (c6 / cause-01 :arg0 (i / increase-01 :arg1 (c7 / crisis :time (c8 / current) :mod (a3 / all))))) :mod (s2 / serious))) :time (n / night :mod (l / last)))
(m / multi-sentence :snt1 (a / and :op1 (' / '' :arg1 (i / it)) :op2 (c / cool-04 :arg1 (i2 / it)) :op3 (l / look-02 :arg1 (g / good)) :op4 (l2 / look-02 :arg1 (g2 / good)) :op5 (l3 / look-02 :arg1 (g3 / good))) :snt2 (c2 / cause-01 :arg1 (t / think-01 :arg0 (i3 / i) :arg1 (a2 / and :op1 (t2 / that) :op2 (a3 / apos :time (d / date-entity :decade (N / N-A)))))))
(t / think-01 :arg0 (p / person :name (n / name :op1 "byron" :op2 "macdonald") :arg0-of (h / have-org-role-91 :arg2 (s / senator))) :arg1 (a / and :op1 (t2 / turned :arg1 (m / microphone :poss (p2 / person)) :time (e / end-01 :arg1 (w / woman)) :time (e2 / end-01 :arg1 (w2 / woman))) :op2 (s2 / start-01 :arg0 (p3 / person) :arg1 (s3 / spouting :arg0 (p4 / person) :arg1 (o / opine-01 :arg0 (p5 / person))) :time (d / date-entity :decade (N / N-A)))))
(m / multi-sentence :snt1 (w / write-01 :arg0 (p / person :name (n / name :op1 "emmett" :op2 "macfarlane")) :medium (t / twitter)) :snt2 (s / swimmer :mode (i / interrogative)) :snt3 (s2 / swimmer :mode (i2 / interrogative) :arg1 (s3 / swimmer :source (c / country :name (n2 / name :op1 "China")))) :snt3 (u / up :mode (i3 / interrogative)))
(r / regrets :arg0 (i / it) :arg1 (s / speak-01 :polarity - :arg0 (w / word) :location (a / air)) :manner (h / honest) :manner (h2 / honest))
(a / and :op1 (p / put-01 :arg0 (s / she) :arg1 (s2 / size :poss (s3 / she)) :arg2 (d / down)) :op2 (a2 / and :op1 (t / take-out-11 :arg0 (s4 / she) :arg1 (p2 / panties :poss (s5 / she))) :op2 (r / return-01 :arg1 (s6 / she) :arg4 (o / on :op1 (s7 / shelf)) :direction (b / back))))
FAILED_TO_PARSE#Two concepts in a row.
(c / cause-01 :arg0 (t / thing :quant (n / none) :location (m / mouth :part-of (h / he))) :arg1 (l / leave-15 :arg0 (h2 / he) :arg1 (n2 / nothing :arg1-of (b / bad-07 :degree (m2 / more) :compared-to (t2 / taste :arg1-of (b2 / bad-07))))) :arg2-of (f / fortunate-01))
(m / make-01 :arg0 (w / we) :arg1 (i / idea :arg1-of (c / crazy-03) :quant (l / lot) :arg0-of (e / end-01 :arg1 (' / '' :arg1-of (c2 / call-01 :arg0 (w2 / we) :arg2 ('2 / ''))))))
(p / phone-number-entity :value (N / N-A))
(e / engulfed :arg0 (p / person :arg0-of (t / tour-01) :mod (f / frightened)) :arg1 (p2 / person :arg0-of (t2 / tour-01) :mod (f2 / frightened)) :time (m / moment :time-of (l / landed :arg1 (j / jet :name (n / name :op1 (c / crowded)) :arg1-of (l2 / low-04)) :location (a / above))))
FAILED_TO_PARSE#Two concepts in a row.
(m / multi-sentence :snt1 (s / say-01 :arg0 (a / and :op1 (p / person :arg0-of (h / have-org-role-91 :arg2 (h2 / head-of-state))) :op2 (p2 / person :arg0-of (h3 / have-org-role-91 :arg2 (a2 / apos))) :op3 (p3 / person :arg0-of (w / want-01 :polarity - :arg1 (e / enjoy-01 :arg0 (p4 / person) :arg1 (o / originality :mod (p5 / physical)))))) :arg1 (p6 / person :arg0-of (w2 / want-01 :arg1 (e2 / enjoy-01 :arg0 (p7 / person) :arg1 (o2 / originality :mod (p8 / physical)))) :time (d / date-entity :decade (N / N-A)))) :snt2 (c / contrast-01 :arg2 (w3 / want-01 :arg0 (a3 / amr-unknown) :arg1 (e3 / enjoy-01 :arg0 (a4 / amr-unknown) :arg1 (o3 / originality :mod (c2 / complain-01 :mod (p9 / physical)))))))
(s / say-01 :arg0 (h / he) :arg1 (' / '' :degree (s2 / so)) :arg1-of (s3 / say-01 :arg0 (h2 / he)))
(n / notice-01 :arg0 (h / he) :arg1 (a / and :op1 (a2 / affect-01 :arg0 (w / wave-04 :arg1 (m / media)) :arg1 (p / person :arg1-of (a3 / affect-01 :arg0 (w2 / wave-04 :arg1 (m2 / media)))) :mod (n2 / new)) :op2 (f / feel-01 :arg0 (p2 / person) :arg1 (f2 / force-01 :arg1 (p3 / person) :arg2 (b / buy-01 :arg0 (p4 / person) :arg1 (r / record :mod (g / gramophone) :mod (o / old) :poss (p5 / person)))))) :mod (a4 / also))
(c / contrast-01 :arg1 (l / look-02 :arg0 (t / they :quant (n / none)) :arg1 (h / haunting :mod (m / mental) :mod (m2 / mental)) :mod (p / particular)) :arg2 (h2 / hard-02 :arg1 (g / guess-01 :arg0 (t2 / they) :time (a / and :op1 (y / you) :op2 (s / stand-01 :arg1 (y2 / you) :arg2 (s2 / stand-01 :arg1 (y3 / you) :arg2 (n2 / next-to :op1 (s3 / someone)) :duration (f / forever)))))))
(t / thing :arg2-of (b / base-02 :arg1 (c / collect-01 :arg1 (r / record) :arg1-of (a / average-04) :mod (a2 / any))) :domain (a3 / and :op1 (p / person :name (n / name :op1 "jeff" :op2 "buckley") :arg1-of (m / mean-01 :arg2 (n2 / name :op1 (a4 / adele) :op2 (a5 / adele) :op3 (m2 / mac) :op4 (m3 / mac) :op5 (m4 / mac) :op6 (m5 / mac) :op7 (m6 / mac))))))
(m / multi-sentence :snt1 (l / look-01 :arg0 (n / nobody) :arg1 (i / it) :arg1-of (c / cause-01 :arg0 (a / and :op1 (b / be-located-at-91 :arg1 (t / they) :arg2 (d / decoration) :mod (j / just)) :op2 (h / high-02 :arg1 (s / some) :degree (s2 / so) :topic (w / wall))))) :snt2 (a2 / and :op1 (p / possible-01 :arg1 (a3 / achieve :arg0 (t2 / they))) :op2 (a4 / achieve-01 :arg0 (t3 / they) :arg1 (a5 / achieve-01 :arg0 (t4 / they)) :degree (t5 / total))))
(a / and :op1 (h / help-01 :arg0 (c / charity) :arg1 (a2 / and :op1 (r / refugess) :op2 (l / l) :op3 (a3 / apos)) :arg2 (c2 / charity)) :op2 (e / estimate-01 :arg0 (c3 / charity) :arg1 (n / number :quant-of (r2 / refugee) :location (c4 / camp)) :time (a4 / after :op1 (r3 / rise-01 :arg1 (r4 / rise-01 :mod (s / steep)) :arg4 (m / more-than :op1 9) :time (b / before :op1 (n2 / now) :duration (t / time :mod (a5 / all)))))))
(a / and :op2 (e / experience-01 :mode (i / imperative) :arg0 (y / you) :arg1 (g / good :degree (m / more) :compared-to (p / place :mod (l / last))) :time (d / date-entity :decade (N / N-A))))
(l / look-02 :arg0 (i / it) :arg1 (a / amr-unknown))
(l / look-up-05 :arg0 (y / you) :arg1 (o / one :mod (n / nahráva?ské)) :manner (a / amr-unknown))
(r / receive-01 :arg0 (b / baby :arg0-of (h / have-rel-role-91 :arg1 (b2 / baby) :arg2 (c / child))) :arg1 (o / oh :ord (o2 / ordinal-entity :value 1) :part-of (h2 / history :poss (w / world))))
(b / be-temporally-at-91 :arg2 (d / date-entity :decade (N / N-A)) :ord (o / ordinal-entity :value 6))
(c / contrast-01 :arg2 (a / and :op1 (w / win-01 :arg0 (i / i) :location (c2 / court)) :op2 (k / know-01 :arg0 (i2 / i) :arg1 (t / thing :arg0-of (c3 / cause-01 :arg1 (r / recommend-01 :arg1 (a2 / answer-01 :arg0 (i3 / i) :arg1 (t2 / thing :arg1-of (q / question-01) :mod (t3 / that)) :mod (s / still))))))))
(p / play-11 :arg0 (y / you) :arg2 (c / court :mod (s / small)) :manner (a / amr-unknown))
(c / cause-01 :arg0 (p / play-01 :arg0 (w / we) :arg1 (g / game :quant 2 :mod (l / last)) :location (g2 / group)) :arg1 (r / recommend-01 :arg1 (s / shift-01 :arg1 (s2 / scheme) :time (b / before))))
(c / contrast-01 :arg1 (r / rule :mod (n / new) :domain (a / apply-02 :arg1 (r2 / rule :mod (n2 / new)) :arg2 (p / passport :mod (e / email)))) :arg2 (d / decide-01 :arg0 (p2 / person :mod (c2 / country :name (n3 / name :op1 "N-A"))) :arg1 (g / get-01 :arg0 (p3 / person) :arg1 (s / sim :source (o / operate-01 :arg1-of (l / local-02) :quant (m / multiple :op1 1))))))
(a / and :op1 (a2 / amr-unknown) :op2 (a3 / apos) :op3 (l / live-01 :arg0 (y / you) :time (b / before :op1 (m / move-01 :arg0 (y2 / you) :arg2 (l2 / location :name (n / name :op1 "prague"))))))
(c / cause-01 :arg0 (a / amr-unknown) :arg1 (d / decide-01 :arg0 (y / you) :arg1 (m / move-01 :arg0 (y2 / you) :arg2 (c2 / country))) :time (t / then))
(c / come-01 :arg1 (i / it) :arg4 (i2 / i) :mod (n / negative :mod (n2 / negative :degree (s / so))))
(m / multi-sentence :snt1 (p / possible-01 :arg1 (h / have-polarity-91 :arg2 - :arg1 (p2 / person :mod (s / some)))) :snt2 (c / cause-01 :arg0 (a / and :op1 (i / it) :op2 (a2 / apos)) :arg1 (m2 / much :polarity - :degree (s2 / so) :compared-to (p3 / person :arg0-of (t / tour-01)))))
(a / and :op1 (w / win-01 :arg0 (t / they)) :op2 (a2 / apos :arg0 (t2 / they)) :op3 (l / let-01 :arg0 (t3 / they) :arg1 (g / get-03 :arg1 (a3 / anyone) :arg2 (c / close-10 :arg1 (a4 / anyone) :degree (s / so))) :degree (t4 / total)))
(o / or :op1 (s / store) :op2 (f / food) :mod (e / even))
(t / tell-01 :arg0 (h / he) :arg1 (g / go-02 :polarity - :arg0 (i / i) :arg4 (p / province :name (n / name :op1 "N-A"))) :arg2 (i2 / i))
(f / fear-01 :mode (i / interrogative) :arg0 (y / you) :arg1 (s / something :arg1-of (r / resemble-01 :arg2 (t / that)) :arg1-of (r2 / resemble-01 :arg2 (t2 / that)) :arg1-of (r3 / resemble-01 :arg2 (t3 / that))) :location (l / location :name (n / name :op1 "prague")) :mod (a / also))
(c / contrast-01 :arg1 (a / approach-02 :arg0 (w / we) :arg1-of (d / differ-02)) :arg2 (r / respect-01 :arg0 (w2 / we) :arg1 (o / other :mod (e / each))))
(a / and :op1 (d / didn :arg0 (i / i) :arg1 (e / else :mod (e2 / else))) :op2 (f / feel-01 :arg0 (i2 / i) :arg1 (g / good :degree (s / so))))
(w / want-01 :arg0 (t / they) :arg1 (c / compete-01 :arg0 (t2 / they) :manner (a / airlines)))
(w / want-01 :arg0 (n / no-one) :arg1 (f / find-01 :arg0 (n2 / no-one) :arg1 (n3 / note :topic (a / and :op1 (o / obligate-01 :arg1 (y / you) :arg2 (p / pick-01 :arg0 (y2 / you) :arg1 (p2 / package) :location (b / branch))) :op2 (d / day :time (a2 / after :quant 19))))))
(a / and :op1 (a2 / app :arg0 (i / i)) :op2 (s / start-01 :arg0 (i2 / i) :time (y / year :mod (l / last))) :op3 (s2 / start-01 :arg0 (i3 / i) :time (y2 / year :mod (t / this)) :arg1-of (p / possible-01)))
(h / have-concession-91 :arg1 (a / and :op1 (a2 / assume-02 :polarity - :arg0 (i / i) :arg1 (l / liability :prep-under (l2 / law :arg2-of (c / criminal-03)))) :op2 (r / responsible-03 :polarity - :arg0 (p / package) :arg1 (a3 / and :op1 (l3 / law :mod (c2 / criminal-03)) :op2 (l4 / law :polarity -) :op3 (t / thing :arg1-of (r2 / responsible-03 :arg0 (i2 / i))) :op4 (t2 / thing :arg1-of (k / know-01 :arg0 (i3 / i))) :manner (l5 / law :polarity -)))) :arg2 (a4 / assume-02 :arg0 (p2 / package) :arg1 (a5 / and :op1 (l6 / law :mod (c3 / criminal-03)) :op2 (l7 / law :polarity -))))
(c / contrast-01 :arg1 (a / and :op1 (w / we) :op2 (a2 / apos)) :arg2 (s / strong-02 :arg1 (l / look-01 :arg0 (p / person :arg0-of (i / invest-01)) :arg1 (p2 / person :arg0-of (i2 / invest-01)) :arg2 (m / market :mod (c2 / czech :polarity -))) :arg1-of (c3 / cause-01 :arg0 (a3 / and :op1 (r / recommend-01 :arg1 (c4 / conduct-01 :arg0 (a4 / amr-unknown) :arg1 (m2 / market :mod (c5 / czech :polarity -)))) :op2 (b / become-01 :arg1 (a5 / amr-unknown) :arg2 (a6 / and :op1 (g / go-back-19 :arg1 (a7 / amr-unknown) :arg2 (p3 / product :mod (g2 / globe))) :op2 (b2 / become-01 :arg1 (a8 / amr-unknown) :arg2 (t / thing :mod (g3 / great :degree (s2 / such)) :location (m3 / market :example (a9 / and :op1 (a10 / airbnb) :op2 (u / uber)))))))))))
(c / cause-01 :polarity - :arg0 (i / include-01 :arg1 (p / possible-01 :arg1 (u / use-01 :arg0 (r / run-02) :arg1 (c2 / colossus :mod (m / martial)))) :mod (a / also)) :arg1 (p2 / possible-01 :arg1 (f / free-04 :arg1 (m2 / movement-07))))
(a / and :op1 (t / they) :op2 (a2 / apos) :op3 (a3 / apos) :op4 (l / ll) :op5 (l2 / ll))
(e / exemplify-01 :arg0 (p / possible-01 :arg1 (a / and :op1 (c / consult-01 :arg0 (i / it) :arg1 (p2 / platform)) :op2 (c2 / close-01 :arg0 (i2 / it) :arg1 (p3 / platform)) :op3 (c3 / close-01 :arg0 (i3 / it) :arg1 (d / door :mod (h / heavy))))) :prep-in (e2 / example :quant 1))
(a / and :op1 (b / be-from-91 :arg1 (t / thing :quant 23 :arg1-of (i / include-91 :arg2 (t2 / thing :quant 23))) :arg2 (c / company)) :op2 (f / firm :polarity - :mod (y / yet) :mod (y2 / yet)))
(h / have-concession-91 :arg1 (b / believe-01 :arg0 (i / i) :arg1 (c / control-01 :arg0 (p / person :arg0-of (h2 / have-rel-role-91 :arg1 (i2 / i) :arg2 (w / wife))) :arg1 (m / mind-05 :arg0 (p2 / person)))) :arg2 (p3 / possible-01 :arg1 (a / and :op1 (y / you) :op2 (a2 / apos))))
(a / and :op1 (p / possible-01 :arg1 (i / i)) :op2 (a2 / apos :arg0 (i2 / i) :mod (s / such :mod (j / just))) :arg1-of (p2 / possible-01))
(a / ask-01 :arg0 (i / i) :arg1 (o / obligate-01 :arg1 (h / he) :arg2 (s / say-01 :arg0 (h2 / he) :arg1 (t / thing))) :arg2 (h3 / he))
(a / and :op1 (; / ; :arg0 (i / i) :arg1 (g / guy :mod (k / kind) :arg0-of (d / didn :arg1 (i2 / i)))) :op2 (a2 / apos :arg0 (i3 / i) :arg1 (g2 / guy :mod (k2 / kind) :arg0-of (d2 / didn :arg1 (i4 / i) :degree (t / total)))) :op3 (p / problem :polarity - :domain (m / meet-02 :arg0 (i5 / i) :arg1 (s / someone))) :op4 (f / find-01 :mode (i6 / imperative) :arg0 (y / you) :arg1 (w / woman) :manner (a3 / alone)) :op5 (f2 / find-01 :arg0 (i7 / i) :arg1 (w2 / woman) :manner (a4 / alone)))
(a / and :op1 (h / have-03 :arg0 (t / they) :arg1 (p / pilgrimages :mod (t2 / traditional)) :time (y / year :mod (e / every))) :op2 (m / move-01 :arg1 (m2 / move-01) :arg2 (a2 / about :op1 30)) :time (y2 / year :mod (e2 / every)))
(w / write-01 :arg0 (p / person :arg0-of (h / have-rel-role-91 :arg1 (h2 / he) :arg2 (w2 / wife) :time (f / former)) :arg0-of (h3 / have-rel-role-91 :arg1 (h4 / he) :arg2 (w3 / wife) :time (f2 / former)) :arg1-of (i / identify-01 :polarity -)) :arg1 (p2 / person :arg0-of (d / depend-01 :polarity -) :arg0-of (d2 / depend-01 :polarity -) :arg0-of (d3 / depend-01 :polarity -)))
(a / and :op2 (c / cause-01 :arg1 (s / smells :arg0 (b / bone :part-of (a2 / and :op1 (b2 / belly :mod (p / pork)) :op2 (s2 / supermarket :mod (p2 / pork)) :op3 (e / et-cetera))) :time (s3 / summer))))
(s / suffice-01 :arg0 (a / and :op1 (p / prepare-02 :arg1 (a2 / and :op1 (m / material :mod (r / raw) :mod (q / quality :mod (g / good))) :op2 (t / thing :arg2-of (a3 / adopt-01 :arg1 (m2 / move-02 :mod (g2 / good) :quant (f / few)))))) :op2 (t2 / thing :arg2-of (a4 / adopt-01 :arg1 (m3 / move-02 :mod (g3 / good) :quant (f2 / few))))) :arg1 (a5 / and :op1 (f3 / fun :domain (p2 / prepare-02)) :op2 (f4 / food :arg1 (f5 / food) :mod (r2 / really) :mod (r3 / really))))
(t / travel-01 :arg0 (c / country :name (n / name :op1 "N-A") :mod (g / great)) :direction (w / way :arg1-of (l / long-03)))
(m / multi-sentence :snt1 (h / hard-02 :mode (i / interrogative) :arg1 (a / admire :arg1 (i2 / it) :degree (a2 / absolute))) :snt2 (a3 / approach-02 :mode (i3 / interrogative) :arg0 (a4 / approach-02)))
(t / take-10 :arg0 (d / decide-01) :arg1 (d2 / decide-01) :time (b / before :op1 (d3 / decide-01 :arg0 (t2 / they) :arg1 (t3 / thing :arg1-of (d4 / do-02 :arg0 (t4 / they) :time (n / next))))))
(m / multi-sentence :snt1 (a / and :op1 (i / it) :op2 (a2 / apos)) :snt2 (t / that :arg0-of (w / watch-01 :arg1 (o / other :mod (e / each))) :time (d / date-entity :decade (N / N-A)) :mod (j / just)))
(p / pieced :mod (w / whole))
(m / multi-sentence :snt1 (t / tracked :arg0 (i / i) :arg1 (e / exemplify-01 :arg0 (a / and :op1 (s / station :mod (t2 / train) :mod (m2 / main) :destination (d / doesn)) :op2 (a2 / apos :arg1 (s2 / station))))) :snt2 (a3 / and :op1 (d2 / doesn :arg0 (p / person :arg0-of (d3 / drive-01 :arg1 (t3 / taxi))) :arg1 (p2 / person :arg0-of (d4 / drive-01 :arg1 (t4 / taxi)))) :op2 (w / wait-01 :arg1 (p3 / person) :arg2 (p4 / person :arg0-of (d5 / drive-01 :arg1 (t5 / taxi))) :arg1-of (r / resemble-01 :arg2 (p5 / person :arg0-of (d6 / drive-01 :arg1 (t6 / taxi)))))))
(a / and :op2 (p / percentage :mod (s / small :degree (v / very)) :domain (i / it)))
(a / and :op1 (b / be-located-at-91 :arg1 (l / location :mod (t / this)) :frequency (r / rate-entity-91 :arg3 (t2 / temporal-quantity :quant (N / N-A) :unit (d / day)))) :op2 (v / violate-01 :arg0 (d2 / decree) :arg1 (d3 / decree) :frequency (r2 / rate-entity-91 :arg3 (t3 / temporal-quantity :quant (N2 / N-A) :unit (d4 / day)))))
(w / wrong-02 :arg1 (t / that) :condition (t2 / take-04 :arg0 (i / i) :arg1 (i2 / it) :arg2 (a / accomplishment :domain (t3 / that))) :arg1-of (c / cause-01 :arg0 (a2 / and :op1 (g / goal :poss (i3 / i) :domain (t4 / that)) :op2 (b / be-02 :arg1 (i4 / i) :time (a3 / always)))))
(p / possible-01 :polarity - :arg1 (s / satisfy-01 :arg1 (t / that)))
(h / have-concession-91 :arg1 (w / want-01 :arg0 (t / they) :arg1 (t2 / thing :arg1-of (w2 / want-01 :arg0 (t3 / they) :mod (r / really))) :arg1-of (c / clear-06 :degree (v / very))) :arg2 (h2 / hold-04 :arg0 (a / and :op1 (p / person :arg0-of (h3 / have-org-role-91 :arg2 (m / mayor))) :op2 (p2 / person :arg0-of (h4 / have-org-role-91 :arg2 (m2 / mayor))) :op3 (p3 / person :arg0-of (h5 / have-org-role-91 :arg2 (m3 / mayor))) :op4 (p4 / person :arg0-of (h6 / have-org-role-91 :arg2 (m4 / mayor))) :op5 (p5 / person :arg0-of (h7 / have-org-role-91 :arg2 (m5 / mayor))) :op6 (p6 / person :arg0-of (h8 / have-org-role-91 :arg2 (m6 / mayor))) :op6 (p7 / person :arg0-of (h9 / have-org-role-91 :arg2 (m7 / mayor))) :op6 (p8 / person :arg0-of (h10 / have-org-role-91 :arg2 (m8 / mayor))) :op6 (p9 / person :arg0-of (h11 / have-org-role-91 :arg2 (m9 / mayor))) :op7 (p10 / person :arg0-of (h12 / have-org-role-91 :arg2 (m10 / mayor))))))
(a / and :op2 (s / surprise-01 :arg1 (w / we) :time (a2 / after :op1 (t / town :mod (o / old) :mod (t2 / town)))) :arg1-of (c / cause-01 :arg0 (a3 / and :op1 (s2 / surprise-01 :arg1 (p / person :arg1-of (s3 / same-01 :arg2 (t3 / thing :arg1-of (a4 / aspire-01)))) :time (d / date-entity :decade (N / N-A))) :op2 (a5 / apos :arg1 (p2 / person)))))
(h / have-condition-91 :arg1 (o / obligate-01 :arg1 (h2 / he) :arg2 (f / from :arg1 (h3 / he) :arg2 (f2 / folds :poss (h4 / he))) :concession (e / even-if :op1 (o2 / obligate-01 :arg1 (h5 / he) :arg2 (p / put-01 :arg0 (h6 / he) :arg1 (s / scalpel) :arg2 (d / down :op1 (s2 / scalpel)) :frequency (s3 / sometimes))))) :arg2 (h7 / he))
(i / inspection :arg1 (t / they) :manner (i2 / inspect-01 :manner (c / close :degree (m / more))) :location (c2 / columns :mod (m2 / marble)))
(m / multi-sentence :snt1 (w / want-01 :arg0 (i / i) :arg1 (p / politician :arg1-of (e / experience-01) :arg0-of (e2 / experience-01 :arg1 (j / job :mod (d / difficult) :mod (t / this))))) :snt2 (s / say-01 :arg0 (p2 / person :arg0-of (h / have-org-role-91 :arg1 (c / commission :mod (c2 / continent :name (n / name :op1 "N-A"))) :arg2 (c3 / chief :mod (v / vice)))) :arg1 (a / and :op1 (e3 / example :mod (g / good :degree (m2 / more)) :topic (a2 / and :op1 (e4 / elite :arg1-of (c4 / call-01 :manner (s2 / so))) :op2 (e5 / elite :mod (c5 / continent :name (n2 / name :op1 "N-A")))) :mod (g2 / good :degree (m3 / more)))) :op2 (f / find-01 :arg0 (w2 / we) :arg1 (d2 / difficult :domain (n3 / negotiate-01 :arg0 (c6 / condition :mod (c7 / commission :mod (c8 / continent :name (n4 / name :op1 "N-A")))) :mod (m4 / main))))) :snt3 (l / leave-13 :arg0 (l2 / leave-11 :arg0 (c9 / condition :mod (c10 / commission :mod (c11 / continent :name (n5 / name :op1 "N-A")))) :arg1 (b / britain :mod (g3 / great) :source (p3 / priority)))))
(f / federalist :domain (b / barnier :mod (c / continent :name (n / name :op1 "N-A"))))
(c / consider-01 :arg1 (s / surprise-01 :arg1 (p / person :name (n / name :op1 "vajno" :op2 "ivanov") :arg0-of (r / represent-01 :time (c2 / current)) :arg0-of (r2 / represent-01 :time (c3 / current)) :arg0-of (r3 / represent-01 :arg1 (g / government-organization :arg0-of (a / administrate-01 :time (c4 / current))))) :degree (q / quite)))
(m / multi-sentence :snt1 (a / and :op1 (k / kvitová) :op2 (d / deblistky)) :snt2 (h / have-03 :arg0 (p / person :mod (c / country :name (n / name :op1 "N-A"))) :arg1 (f / final :purpose (p2 / play-11 :arg0 (p3 / person)))))
(a / and :op1 (f / fight-01 :arg0 (s / she) :arg2 (e / end-01)) :op2 (b / believe-01 :arg0 (s2 / she) :arg1 (t / that) :time (g / game :ord (o / ordinal-entity :value 4) :poss (t2 / they) :mod (t3 / top))))
(d / deal-01 :arg0 (d2 / deal-01 :mod (g / good :degree (m / most)) :mod (g2 / good :degree (m2 / most))) :arg2 (s / sedmiboje))
(a / and :op1 (p / putinovskéhu :arg1 (a2 / and :op1 (p2 / person :arg0-of (h / have-org-role-91 :arg2 (h2 / head-of-state))) :op2 (p3 / person :arg0-of (h3 / have-org-role-91 :arg2 (h4 / head-of-state))) :op3 (p4 / person :arg0-of (h5 / have-org-role-91 :arg2 (h6 / head-of-state))) :op4 (p5 / person :arg0-of (h7 / have-org-role-91 :arg2 (h8 / head-of-state))) :op5 (p6 / person :arg0-of (h9 / have-org-role-91 :arg2 (h10 / head-of-state))) :op6 (p7 / person :arg0-of (h11 / have-org-role-91 :arg2 (h12 / head-of-state))) :op7 (p8 / person :arg0-of (h13 / have-org-role-91 :arg2 (h14 / head-of-state))))))
(r / rate-entity-91 :arg1 (r2 / rate :mod (i / inflation :arg1-of (a / average-04)) :arg1-of (a2 / average-03)) :arg2 (r3 / rate-entity-91 :arg1 (u / under :op1 (b / between :op1 (t / temporal-quantity :quant (N / N-A) :unit (m / month)) :op2 (t2 / temporal-quantity :quant (N2 / N-A) :unit (m2 / month)))) :arg2 (t3 / temporal-quantity :quant (N3 / N-A) :unit (m3 / month)) :arg1-of (c / compare-01 :arg2 (p / product-of :op1 2014 :op2 2015) :time (b2 / before :op1 (n / now) :duration (t4 / temporal-quantity :quant (N4 / N-A) :unit (m4 / month)))) :arg1-of (c2 / compare-01 :arg2 (p2 / product-of :op1 2014 :op2 2015))))
(a / add-01 :arg0 (h / he) :arg1 (p / possible-01 :arg1 (a2 / and :op1 (w / wasn :arg1 (i / it)) :op2 (p2 / possible-01 :polarity - :arg1 (c / caught :arg1 (i2 / it)) :degree (t / total) :prep-without (r / risk-01 :arg2 (c2 / catch-02 :arg1 (t2 / they)))))))
(k / know-02 :polarity - :arg1 (f / fate :mod (k2 / kadiziných)))
(m / multiple :op1 (t / temporal-quantity :quant (N / N-A) :unit (y / year)) :domain (m2 / multiple :op1 (t2 / temporal-quantity :quant (N2 / N-A) :unit (y2 / year))) :location (a / and :op1 (c / city-district :name (n / name :op1 "N-A") :location (r / region) :mod (r2 / region)) :op2 (s / seat-01 :part-of (a2 / argyll))))
(m / mistake :mode (i / imperative) :arg0 (y / you) :arg1 (p / publish) :time (i2 / immediate))
(o / offer-01 :arg0 (c / company) :arg1 (e / explain-01 :arg0 (c2 / company)) :arg1-of (c3 / cause-01 :arg0 (a / and :op1 (s / show-04 :arg1 (c4 / character :mod (u / url-entity :value (a2 / animé)))) :op2 (c5 / caricature :polarity - :arg1 (t / thing)))))
(g / go-01 :arg1 (f / fail-01 :arg1 (p / person :arg0-of (l / lead-02))) :arg2 (t / top :part-of (p2 / person :arg1-of (o / organize-01)) :mod (a / all)))
(a / and :op1 (i / i :arg0 (i2 / i)) :op2 (a2 / apos :polarity - :arg1 (p / person :quant 1 :arg1-of (i3 / include-91 :arg2 (p2 / person :arg0-of (t / take-01 :arg1 (w / wickets :poss (p3 / person))))))))
FAILED_TO_PARSE#Number of opening and closing brackets doesn't match.
(o / obligate-01 :arg1 (i / i) :arg2 (a / admit-01 :arg0 (i2 / i) :arg1 (c / contrast-01 :arg1 (a2 / admit-01 :arg0 (i3 / i) :arg1 (e / expert-01 :polarity - :arg1 (i4 / i) :arg2 (e2 / expert-01 :arg1 (i5 / i) :arg2 (e3 / expert-01 :arg1 (i6 / i) :arg2 (e4 / expert-01 :arg1 (i7 / i) :arg2 (e5 / expert-01 :arg1 (i8 / i) :arg2 (e6 / expert-01 :polarity - :arg1 (i9 / i) :arg2 (e7 / expert-01 :arg1 (i10 / i) :arg2 (e8 / expert-01 :arg1 (i11 / i) :arg2 (e9 / expert-01 :arg1 (i12 / i) :arg2 (e10 / expert-01 :arg1 (i13 / i) :arg2 (e11 / expert-01 :polarity - :arg1 (i14 / i) :arg2 (e12 / expert-01 :arg1 (i15 / i) :arg2 (e13 / expert-01 :arg1 (i16 / i) :arg2 (g / ground)) :mod (o2 / only)))))))))))))))))
(m / multi-sentence :snt1 (c / compete-01 :mode (i / interrogative) :arg0 (y / you)) :snt2 (a / athletes :source (a2 / and :op1 (c2 / country :quant 17) :op2 (m2 / man :quant 16) :op3 (w / woman :quant 16))))
(c / call-03 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (o / organization :name (n / name :op1 "United" :op2 "Nations")) :arg2 (c2 / commissioner :mod (h2 / high-02)))) :arg1 (i / investigate-01 :manner (t / thorough)) :time (n2 / now))
(w / work-01 :arg0 (a / and :op1 (s / service :mod (m / military) :mod (c / country :name (n / name :op1 "N-A"))) :op2 (s2 / service :mod (i / intelligence) :mod (c2 / country :name (n2 / name :op1 "N-A")))) :manner (c3 / close) :purpose (e / eliminate-01 :arg0 (a2 / and) :arg1 (r / risk-01 :arg1 (a3 / attack-01 :arg0 (t / terrorist) :location (a4 / area)) :arg2 (a5 / and :op1 (e2 / eliminate-01 :arg1 (r2 / risk-01 :arg0 (t2 / terrorist) :arg2 (a6 / attack-01 :arg0 (t3 / terrorist) :location (a7 / area)))) :op2 (r3 / receive-01 :arg0 (c4 / country :quant (f / few :degree (v / very))) :arg1 (h / help-01 :mod (s3 / such)) :arg2 (w2 / west))))))
(m / multi-sentence :snt1 (a / amhar :mode (i / interrogative) :quant (m2 / many)) :snt2 (a2 / and :op1 (b / believe-01 :mode (i2 / interrogative) :arg0 (y / you) :arg1 (d / dominate-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (t / tigraj :mod (e / ethnic)) :arg2 (m3 / member))) :arg1 (c / country :name (n / name :op1 "ethiopia")))) :op2 (b2 / believe-01 :arg0 (i3 / i) :arg1 (d2 / dominate-01 :arg0 (p2 / person :arg0-of (h2 / have-org-role-91 :arg1 (t2 / tigraj :mod (e2 / ethnic)) :arg2 (m4 / member))) :arg1 (c2 / country))) :manner (w / wrong)))
(d / die-01 :arg1 (p / person :arg0-of (c / cause-01 :arg1 (u / unrest))) :ord (o / ordinal-entity :value 3))
(f / find-out-03 :arg0 (i / i) :arg1 (t / thing :arg1-of (l / like-01 :arg0 (i2 / i) :arg1-of (l2 / like-02 :arg0 (i3 / i)))) :arg1-of (s / say-01 :arg0 (s2 / she)) :arg1-of (s3 / say-01 :arg0 (s4 / she)))
(s / say-01 :arg0 (h / he) :arg1 (a / and :op1 (c / come-01 :arg1 (a2 / and :op1 (i / i) :op2 (p / person :arg0-of (h2 / have-org-role-91 :arg2 (a3 / apos))) :op3 (p2 / person :arg0-of (h3 / have-rel-role-91 :arg1 (i2 / i) :arg2 (a4 / apos))) :op4 (p3 / person :arg0-of (h4 / have-rel-role-91 :arg1 (i3 / i) :arg2 (a5 / apos))) :op5 (p4 / person :arg0-of (h5 / have-rel-role-91 :arg1 (i4 / i) :arg2 (a6 / apos))) :op6 (p5 / person :arg0-of (h6 / have-rel-role-91 :arg1 (i5 / i) :arg2 (b / bun))) :op6 (p6 / person :arg0-of (h7 / have-rel-role-91 :arg1 (i6 / i) :arg2 (b2 / bun))) :op6 (p7 / person :arg0-of (h8 / have-rel-role-91 :arg1 (i7 / i) :arg2 (b3 / bun))) :op7 (p8 / person :arg0-of (h9 / have-rel-role-91 :arg1 (i8 / i) :arg2 (b4 / bun))))) :location (h10 / here) :frequency (r / rate-entity-91 :arg3 (t / temporal-quantity :quant (N / N-A) :unit (d / day)))))
(a / and :op1 (o / offer-01 :arg0 (c / customer :quant 1 :arg1-of (i / include-91 :arg2 (c2 / customer :mod (n / new)))) :arg1 (t / thing :arg1-of (o2 / offer-01 :arg0 (c3 / customer)))) :op2 (s / say-01 :arg0 (i2 / i) :arg1 (w / want-01 :arg0 (h / he) :arg1 (f / find-01 :arg0 (h2 / he) :arg1 (p / place) :purpose (e / exposed :arg0 (h3 / he) :arg1 (s2 / she) :time (s3 / soon)))) :op3 (f2 / feel-01 :arg0 (h4 / he) :arg1 (f3 / feel-01 :arg0 (h5 / he) :arg1 (p2 / place)) :arg2 (h6 / he) :time (s4 / soon))))
(p / phone-number-entity :value (N / N-A))
(s / say-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg2 (m / meatballs))) :arg1 (' / '' :arg1 (m2 / meatballs :mod ('2 / '')) :degree (v / very)))
(m / multi-sentence :snt1 (s / strange) :snt2 (r / recommend-01 :arg1 (t / take-01 :arg0 (y / you) :arg1 (o / or :op1 (t2 / taste) :op2 (s2 / sense :mod (c / common :mod (e / even)))) :location (c2 / cooking))))
(p / probable :domain (m / make-02 :arg0 (r / roosevelt :arg0 (p2 / person :arg0-of (h / have-org-role-91 :arg2 (p3 / president))) :arg1 (s / set-02 :arg0 (p4 / person) :arg1 (e / example :arg0-of (e2 / exemplify-01 :arg1 (s2 / stomach :arg0 (p5 / person)))))) :arg2 (p6 / person :arg0-of (h2 / have-org-role-91 :arg2 (p7 / president)))) :mod (p8 / probable))
(c / cite-01 :arg0 (a / and :op1 (b / businessman :source (y / york :mod (n / new))) :op2 (b2 / businessman :source (y2 / york :mod (n2 / new)))) :arg1 (a2 / and :op1 (b3 / businessman :mod (d / department :mod (t / treasury)) :mod (c2 / country :name (n3 / name :op1 "N-A"))) :op2 (a3 / audit-01 :arg0 (d2 / department) :arg1 (t2 / thing :arg0-of (c3 / cause-01 :arg1 (r / refuse-01 :arg0 (d3 / department) :arg1 (r2 / release-01 :arg0 (d4 / department) :arg1 (r3 / returns :mod (t3 / tax-01)))))))))
(a / and :op1 (s / shines :arg1 (e / elephant :arg1-of (p / pass-03)) :ord (o / ordinal-entity :value 1)) :op2 (r / run-01 :arg0 (e2 / elephant) :arg1 (c / car)) :ord (o2 / ordinal-entity :value 2))
(l / leaned :arg0 (p / person :arg0-of (h / have-org-role-91 :arg2 (d / director :mod (c / country :name (n / name :op1 "N-A"))))) :arg1 (c2 / code) :arg2 (r / remove-01 :arg0 (p2 / person) :arg1 (c3 / code) :purpose (r2 / request-01 :arg0 (p3 / person) :arg1 (r3 / request-01 :arg0 (p4 / person) :arg1 (r4 / request-01 :arg0 (p5 / person) :arg1 (r5 / request-01 :arg0 (p6 / person) :arg1 (r6 / request-01 :arg0 (p7 / person) :arg1 (r7 / request-01 :arg0 (p8 / person) :arg1 (r8 / request-01 :arg0 (p9 / person) :arg1 (r9 / request-01 :arg0 (p10 / person) :arg1 (r10 / request-01 :arg0 (p11 / person) :arg1 (r11 / request-01 :arg0 (p12 / person) :arg1 (r12 / request-01 :arg0 (p13 / person) :arg1 (r13 / request-01 :arg0 (p14 / person) :arg1 (r14 / request-01 :arg0 (p15 / person) :arg1 (r15 / request-01 :arg0 (p16 / person) :arg1 (r16 / request-01 :arg0 (p17 / person) :arg1 (r17 / request-01 :arg0 (p18 / person) :arg1 (r18 / request-01 :arg0 (p19 / person) :arg1 (r19 / request-01 :arg0 (p20 / person) :arg1 (r20 / request-01 :arg0 (p21 / person) :arg1 (r21 / request-01 :arg0 (p22 / person) :arg1 (r22 / request-01 :arg0 (p23 / person) :arg1 (r23 / request-01 :arg0 (p24 / person) :arg1 (r24 / request-01 :arg0 (p25 / person) :arg1 (r25 / request-01 :arg0 (p26 / person) :arg1 (r26 / request-01 :arg0 (p27 / person) :arg1 (r27 / request-01 :arg0 (p28 / person) :arg1 (r28 / request-01 :arg0 (p29 / person) :arg1 (r29 / request-01 :arg0 (p30 / person) :arg1 (r30 / request-01 :arg0 (p31 / person) :arg1 (r31 / request-01 :arg0 (p32 / person) :arg1 (' / '')))))))))))))))))))))))))))))))))
FAILED_TO_PARSE#Two concepts in a row.
(c / contrast-01 :arg1 (a / and :op1 (h / hindes :arg1 (p / person :arg0-of (h2 / have-rel-role-91 :arg2 (h3 / hoye))) :time (b / before :op1 (n / now) :quant (u / up-to :op1 (t / temporal-quantity :quant (N / N-A) :unit (y / year))))) :op2 (a2 / achieve-01 :arg0 (p2 / person) :arg1 (r / record :mod (o / olympic) :location (q / qualification)))) :arg2 (t2 / take-over-12 :arg0 (l / leotard) :arg1 (r2 / round :ord (o2 / ordinal-entity :value 1) :part-of (z / zealand :mod (n2 / new)))))
(m / multi-sentence :snt1 (a / amr-unknown :li 1) :snt2 (s / say-01 :arg0 (p / person :name (n / name :op1 "N-A") :arg1-of (a2 / age-01 :arg2 (t / temporal-quantity :quant (N / N-A) :unit (y / year)))) :arg1 (a3 / and :op1 (' / '' :arg1 (i / it)) :op2 (a4 / apos :arg1 (i2 / it) :time (d / date-entity :decade (N2 / N-A))) :op3 (c / comparison :arg1 (i3 / it) :manner (c2 / compare-01)))))
(s / say-01 :arg0 (h / he) :arg1 (t / thing :arg1-of (s2 / say-01 :arg0 (h2 / he))) :beneficiary (w / we) :condition (a / and :op1 (w2 / wasn :arg1 (i / it)) :op2 (a2 / apos :arg1 (i2 / it) :degree (t2 / total))))
(i / include-01 :arg1 (o / or :op1 (p / person :arg0-of (c / campbell)) :op2 (p2 / person :arg0-of (c2 / campbell)) :op3 (p3 / person :arg0-of (k / kate)) :op4 (p4 / person :arg0-of (k2 / kate))) :arg2 (w / woman :arg1-of (a / appear-01 :time (p5 / past))))
(s / sell-01 :arg0 (h / he) :arg1 (l / lauder :mod (e / estee)))
(l / lose-02 :arg0 (p / person :arg0-of (a / assist-01) :arg1-of (l2 / legal-02) :mod (t / this)) :arg1 (p2 / person :arg1-of (i / include-91 :arg2 (p3 / person :arg0-of (g / govern-01 :arg1 (f / federal))) :arg3 (p4 / percentage-entity :value 30)) :mod (a2 / another)) :time (y / year :mod (n / next)))
(c / come-01 :arg1 (a / action) :time (a2 / after :op1 (c2 / cause-01 :arg0 (s / say-01 :arg0 (c3 / candidate :poss (p / political-party :name (n / name :op1 "Republican"))) :arg1 (p2 / possible-01 :arg1 (a3 / act-02 :arg0 (p3 / person :arg0-of (h / have-org-role-91 :arg2 (p4 / president))) :arg0-of (c4 / cause-01 :arg1 (p5 / possible-01 :arg1 (a4 / act-02 :arg0 (p6 / person) :arg1-of (c5 / cause-01 :arg0 (a5 / amend-01 :arg1 (a6 / and :op1 (p7 / person :arg0-of (o / own-01)) :op2 (p8 / person :arg0-of (o2 / own-01 :arg1 (w / weapon)))) :arg1-of (r / regulate-01 :time (a7 / amend-01 :ord (o3 / ordinal-entity :value 2))))))))))))) :arg1 (p9 / possible-01 :arg1 (n2 / nominate-01 :arg0 (p10 / person) :arg1 (p11 / person :arg0-of (h2 / have-org-role-91 :arg3 (j / judge-01))))))
(a / and :op2 (d / do-02 :mode (i / imperative) :arg0 (y / you) :arg1 (i2 / it) :mod (a2 / again) :arg0-of (c / cause-01 :arg1 (c2 / create-01 :arg0 (w / we) :arg1 (o / opportunity :beneficiary (a3 / and :op1 (p / person :arg1-of (l / local-02)) :op2 (b / business)) :location (p2 / publication :name (n / name :op1 "N-A") :mod (h / heathrow)))))))
(a / and :op1 (p / publish-01 :arg0 (p2 / person :arg0-of (u / use-01 :arg1 (w / website :poss (p3 / person)))) :arg1 (w2 / website :poss (p4 / person)) :medium (w3 / website :poss (p5 / person) :mod (d / desktop))) :op2 (p6 / publish-01 :arg0 (p7 / person) :arg1 (w4 / website :poss (p8 / person)) :arg1-of (c / cause-01 :arg0 (p9 / possible-01 :arg1 (a2 / and :op1 (u2 / update-01 :arg0 (p10 / person :arg0-of (u3 / use-01)) :arg1 (f / filter) :location (p11 / programme :poss (p12 / person))) :op2 (b / block-01 :arg0 (p13 / person) :arg1 (a3 / advertising :location (n / network :mod (s / society))) :mod (a4 / again)))))) :time (a5 / after :op1 (a6 / announce-01 :arg0 (m / magazine :name (n2 / name :op1 "N-A")) :arg1 (b2 / block-01 :arg0 (p14 / person) :arg1 (f2 / filter :location (w5 / website :poss (p15 / person) :mod (d2 / desktop)))))))
(f / fact :domain (s / show-01 :arg0 (n / network :mod (s2 / social) :mod (l / large :degree (m / most) :compared-to (w / world)) :mod (l2 / large :degree (m2 / most) :compared-to (w2 / world))) :arg1 (s3 / show-01 :arg0 (n2 / network) :arg1 (p / problem :topic (b / block-01 :arg1 (i / industry)))) :mod (j / just)))
(i / indicate-01 :arg0 (s / state-01 :arg0 (p / police)) :arg1 (a / and :op1 (u / utilize-01 :arg0 (f / female) :arg1 (' / '' :mod (d / desperate) :mod (d2 / desperate)) :location (r / road)) :op2 (r2 / run-01 :arg0 (f2 / female) :arg1 (c / car :quant (f3 / few)))))
(c / clear-06 :arg1 (a / and :op1 (a2 / age-01 :arg1 (v / victim) :arg2 (t / temporal-quantity :quant (N / N-A) :unit (y / year))) :op2 (h / hit-01 :arg0 (c2 / car :quant (s / several) :arg2-of (i / include-01 :arg1 (t2 / truck))) :arg1 (w / woman))))
(c / city :arg0-of (h / harm-01))
(c / contrast-01 :arg2 (r / rational :polarity - :domain (p / person :mod (c2 / country :name (n / name :op1 "N-A")) :domain (i / it))))
(m / multi-sentence :snt1 (a / ah :mode (i / interrogative)) :snt2 (a2 / and :op1 (s / say-01 :mode (i2 / interrogative) :arg0 (i3 / i) :arg1 (r / rate-entity-91 :arg1 (a3 / about :op1 (m2 / monetary-quantity :quant 15 :unit (p / pound))) :arg2 (a4 / and :op1 (m3 / more :quant (a5 / about :op1 5)) :op2 (m4 / monetary-quantity :quant 15 :unit (p2 / pound)))))))
(a / and :op1 (h / heating :arg1 (s / surface) :arg2 (s2 / surface)) :op2 (c / create-01 :arg0 (b / behave :arg1-of (r / resemble-01 :arg2 (u / umbrella))) :arg1 (a2 / and :op1 (u2 / umbrella) :op2 (s3 / surface :source (h2 / heat :arg1-of (e / excessive-02))))))
(p / publish-01 :arg1 (t / thing :arg2-of (r / result-01 :arg1 (t2 / thing :arg2-of (r2 / result-01 :arg1 (m / model :topic (c / climate) :mod (n / new)))))) :arg3 (p2 / person :arg0-of (r3 / research-01)) :location (l / letter :mod (r4 / research-01) :mod (u / url-entity :value (g / geophysical))))
(m / meet-01 :polarity - :arg1 (c / condition :mod (t / this)) :time (c2 / current))
(c / claim-01 :arg0 (p / person :arg0-of (l / lead-02 :arg1 (p2 / party)) :mod (t / top)) :arg1 (p3 / punishable-02 :arg2 (s / strike-01 :arg2 (w / wage :mod (o / oil) :location (n / north :part-of (n2 / north))))) :concession (p4 / party :quant (a / all) :mod (t2 / together) :purpose (n3 / negotiate-01) :mod (t3 / together)))
FAILED_TO_PARSE#Two concepts in a row.
(s / say-01 :arg0 (s2 / she) :arg1 (c / contrast-01 :arg1 (s3 / see-01 :arg0 (w / we) :arg1 (s4 / star :mod (m / massive :degree (m2 / more))) :manner (s5 / slow :degree (m3 / more))) :arg2 (s6 / see-01 :arg0 (w2 / we) :arg1 (s7 / star :domain (s8 / star :mod (m4 / massive :degree (m5 / more))) :arg1-of (q / quick-02 :degree (m6 / most) :compared-to (p / possible-01 :arg1 (s9 / spinning)))))) :arg1-of (s10 / say-01 :arg0 (s11 / she)) :arg1-of (s12 / say-01 :arg0 (s13 / she)))
(d / describe-01 :arg0 (a / and :op1 (p / person :arg0-of (h / have-rel-role-91 :arg1 (s / she) :arg2 (c / colleagues))) :op2 (p2 / person :arg0-of (h2 / have-rel-role-91 :arg1 (s2 / she) :arg2 (c2 / colleagues)))) :arg1 (a2 / analyze-01 :arg1 (s3 / speed :poss (r / rotation :quant 3)) :time (l / late :degree (m / most)) :arg1-of (p3 / publish-01 :time (s4 / soon) :location (j / journal :mod (a3 / astronomical)))) :manner (d2 / detail-01))
(s / say-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg2 (g / galicia))) :arg1 (b / begin-01 :arg1 (t / thrived :arg1 (h2 / he) :arg2 (t2 / thrive) :time (r / recent)) :manner (f / frank)))
(f / follow-01 :arg1 (j / journal :mod (o / online) :poss (n / newspaper)) :arg2 (s / story :topic (b / billboard :location (s2 / south :part-of (s3 / strait :mod (s4 / south))))) :arg1-of (c / cause-01 :arg0 (m / motorists :arg1 (m2 / motorists :mod (o2 / only :polarity -) :arg0-of (w / walk-01 :location (t / trees))) :arg2 (p / park :mod (o3 / olympic) :mod (a / also))) :time (n2 / now)))
(s / say-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (p2 / person :name (n / name :op1 "N-A")) :arg2 (s2 / spokeswoman :mod (v / vice)))) :arg1 (a / and :op1 (r / respond-01 :polarity - :arg0 (c / company) :arg1 (c2 / call-03 :arg0 (c3 / company) :arg1 (r2 / remove-01 :arg1 (c4 / case-03) :arg1-of (w / write-01)))) :op2 (p3 / put-01 :arg1 (c5 / case-03) :arg2 (t / table) :time (t2 / then :op1 (p4 / probable :domain (c6 / case-03))))))
(i / include-91 :arg1 (a / and :op1 (c / company :arg2-of (s / suspect-01) :mod (t / that)) :op2 (c2 / company :arg1-of (f / fail-01 :arg2 (c3 / contact-01 :arg0 (c4 / company))))) :arg2 (c5 / commerz))
(a / and :op1 (l / let-01 :arg0 (p / person :mod (c / civil) :arg0-of (s / serve-01)) :arg1 (s2 / send-01 :arg0 (p2 / person) :arg1 (l2 / letter) :arg2 (c2 / company :mod (h / horrendous) :arg0-of (b / billboard :arg1 (h2 / house :poss (p3 / person))))) :time (m / meanwhile)) :op2 (b2 / base-02 :arg1 (f / firm :mod (n / new) :location-of (b3 / base-02 :arg1 (f2 / firm :mod (n2 / new)) :arg1-of (r / report-01))) :arg2 (p4 / person :mod (c3 / civil) :arg0-of (s3 / serve-01))) :time (m2 / meanwhile) :time (b4 / begin-01 :arg1 (t / take-01 :arg0 (p5 / person) :arg1 (i / interest-01 :arg1 (a2 / advertising :mod (l3 / leipzig))))))
(c / contrast-01 :arg2 (t / thing :arg1-of (s / symbolize-01 :arg2 (a / and :op1 (r / rape-01) :op2 (p / poppy)) :time (y / year :mod (t2 / this))) :arg1-of (h / high-02 :degree (m / more))))
(e / estimate-01 :arg1 (p / percentage-entity :value (N / N-A) :arg3-of (i / include-91 :arg2 (c / commodity :mod (i2 / important :degree (m / most)) :beneficiary (r / republic)))) :arg2 (p2 / percentage-entity :value (N2 / N-A)) :time (y / year :mod (t / this)) :arg1-of (e2 / estimate-01))
(s / say-01 :arg0 (p / police))
(s / say-01 :arg0 (t / thing :arg1-of (s2 / say-01 :arg0 (p / political-party :name (n / name :op1 "N-A")))) :arg1 (r / reminiscent :arg1 (p2 / plan :mod (t2 / territory))))
(c / come-03 :arg1 (t / toddlers :quant 2 :arg1-of (a / affect-01)) :arg2 (r / refugee :source (a2 / and :op1 (p / part :part-of (l / liberated :mod (n / new))) :op2 (h / haram :mod (n2 / new)))))
(a / and :op1 (w / want-01 :arg0 (m / meet-03 :mod (t / this)) :arg1 (a2 / attend-02 :arg0 (y / you) :arg1 (t2 / traffic-01 :arg1 (h / human)))) :op2 (c / call-03 :arg0 (y2 / you) :arg1 (i / intensification :arg1 (f / fight-01 :arg2 (h2 / he)))) :prep-with (m2 / meet-03 :mod (t3 / this)))
(e / exemplify-01 :arg0 (h / have-03 :arg0 (h2 / he) :arg1 (s / swim-01 :arg0 (h3 / he) :arg2 (r / refugee :mod (c / country :name (n / name :op1 "N-A")) :arg0-of (a / arrive-01 :arg1 (a2 / and :op1 (r2 / refugee :mod (c2 / country)) :op2 (r3 / refugee :mod (c3 / country))) :arg1-of (c4 / cause-01 :arg0 (p / petition-01 :arg0 (h4 / he) :arg1-of (p2 / personal-02))))))) :purpose (e2 / exemplify-01))
(v / vote-01 :arg0 (a / and :op1 (d / doctor) :op2 (p / person :arg0-of (s / study-01) :mod (j / junior) :location (r / river :name (n / name :op1 "N-A")))) :arg1 (r2 / reject-01 :arg0 (a2 / and) :arg1 (a3 / agree-01 :arg0 (a4 / and) :arg1 (a5 / agree-01 :arg0 (a6 / and)))))
(h / have-03 :arg0 (t / thing :arg2-of (s / sanction-02 :arg0 (c / country :name (n / name :op1 "N-A")))) :arg1 (t2 / thing :arg2-of (s2 / sanction-02 :arg1 (c2 / country :name (n2 / name :op1 "N-A")) :arg1-of (h2 / hard-02))) :arg1-of (c3 / cause-01 :arg0 (n3 / notably :arg1 (c4 / cancellation :mod (c5 / charter) :arg0-of (c6 / carry-01 :arg1 (p / person :mod (c7 / country) :quant (s3 / several) :mod (c8 / country) :arg0-of (t3 / tour-01)) :arg4 (c9 / coast :mod (t4 / turkey)) :time (y / year :mod (e / each))))) :degree (m / most)))
(a / and :op1 (c / concern-01 :arg1 (a2 / and :op1 (c2 / company :arg0-of (o / operate-01)) :op2 (c3 / company :mod (c4 / charter))) :location (h / here) :arg1-of (s / sure-02)) :op2 (r / relieved :arg1 (a3 / and :op1 (c5 / company :arg0-of (o2 / operate-01)) :op2 (c6 / company :mod (c7 / charter))) :time (r2 / resume-01 :arg1 (f / fly-01)) :condition (n / need-01)))
(a / anger-01 :arg0 (s / see-01 :arg1 (t / thing :arg1-of (r / respond-01 :arg2 (c / coup))) :mod (f / feeble)) :arg1 (l / location :name (n / name :op1 "ankara")))
(e / email-address-entity :value (s / scotland) :domain (b / bank :mod (r / royal) :part-of (c / country :name (n / name :op1 "N-A"))))
(s / say-01 :arg0 (i / i) :arg1 (t / try-01 :arg0 (w / we) :arg1 (a / aim-02 :arg0 (w2 / we) :arg2 (s2 / scene :mod (d / domestic)) :time (n / no-longer))) :time (n2 / now))
FAILED_TO_PARSE#Two concepts in a row.
(a / and :op1 (g / gain-02 :arg0 (p / person :arg0-of (u / use-01 :arg1 (p2 / pokémon))) :arg1 (p3 / person :arg0-of (u2 / use-01) :quant (m / more) :compared-to (p4 / person :arg0-of (u3 / use-01))) :time (a2 / after :op1 (n / now) :quant (f / few :op1 (t / temporal-quantity :quant (N / N-A) :unit (d / day))))) :op2 (h / have-03 :arg0 (p5 / person :arg0-of (u4 / use-01 :arg1 (t2 / twitter)) :quant (a3 / almost :op1 (m2 / many))) :arg1 (p6 / person)))
(w / work-09 :arg1 (i / it) :manner (a / amr-unknown))
(m / multi-sentence :snt1 (a / and :op1 (s / seek-01 :arg0 (c / campaign-01 :arg1-of (p / public-02) :quant (m2 / many)) :arg1 (f / find-01 :arg0 (p2 / person) :arg1 (a2 / and :op1 (p3 / person :arg0-of (f2 / find-01 :arg1 (p4 / person :quant 30))) :op2 (p5 / person :arg0-of (h / have-org-role-91 :arg2 (' / ''))) :op3 (p6 / person :arg0-of (h2 / have-rel-role-91 :arg1 (p7 / person) :arg2 ('2 / ''))) :op4 (p8 / person :arg0-of (h3 / have-rel-role-91 :arg1 (p9 / person) :arg2 ('3 / ''))) :op5 (p10 / person :arg0-of (h4 / have-rel-role-91 :arg1 (p11 / person) :arg2 ('4 / ''))) :op6 (p12 / person :arg0-of (h5 / have-rel-role-91 :arg1 (p13 / person) :arg2 ('5 / ''))) :op6 (p14 / person :arg0-of (h6 / have-rel-role-91 :arg1 (p15 / person) :arg2 ('6 / ''))) :op7 (p16 / person :arg0-of (h7 / have-rel-role-91 :arg1 (p17 / person) :arg2 ('7 / ''))) :op7 (p18 / person :arg0-of (h8 / have-rel-role-91 :arg1 (p19 / person) :arg2 ('8 / ''))))))) :snt2 (c2 / cause-01 :arg0 (f3 / focus-01 :arg0 (m3 / message :quant (m4 / most) :arg1-of (i / include-91 :arg2 (m5 / message))) :arg2 (p20 / person :arg0-of (l / look-02 :arg1 (g / good :degree (t / total)))))))
(f / forget-01 :mode (i / imperative) :arg0 (y / you) :arg1 (e / excitement))
(i / immune :arg1 (b / biles :mod (s / simone)) :arg2 (t / this :mod (a / all)))
(i / insist-01 :arg0 (p / person :name (n / name :op1 "biles")) :arg1 (l / look-01 :polarity - :arg0 (s / she) :arg1 (s2 / she) :time (e / ever) :time (a / and :op1 (j / journey :arg0 (s3 / she) :arg2 (t / top) :arg1-of (l2 / long-03)) :op2 (t2 / true :polarity - :domain (s4 / she) :degree (e2 / entire)))))
(a / and :op1 (s / sitting :arg0 (h / he) :arg1 (o / or :op1 (s2 / sit-01 :arg1 (h2 / he) :degree (t / total)) :op2 (c / crawls :arg0 (h3 / he))) :time (u / until :op1 (a2 / age-01 :arg1 (h4 / he) :arg2 3))) :op2 (t2 / talks :arg0 (h5 / he) :arg1 (t3 / talk-01 :mod (t4 / total)) :mod (s3 / still)))
(p / possible-01 :arg1 (d / differ-02 :arg1 (a / and :op1 (s / symptom) :op2 (p2 / prognosis))))
(t / toll :arg1 (b / bottle :mod (e / emotional)) :arg2 (b2 / buy-01 :arg1 (f / future :mod (c / certain))))
(r / report-01 :arg0 (s / service :name (n / name :op1 (- / -lrb-) :op2 (-2 / -lrb-)) :mod (w / weather :mod (n2 / nation))) :arg1 (a / and :op1 (p / pouring :arg1 (r2 / rivers :quant (n3 / number) :location (s2 / southeast :part-of (s3 / strait))) :manner (p2 / precise)) :op2 (t / threaten-01 :arg1 (f / flooding :arg1-of (w2 / wide-02))) :time (a2 / after :op1 (d / downpours :mod (e / extreme)))))
FAILED_TO_PARSE#Two concepts in a row.
(s / say-01 :arg0 (p / person :arg0-of (h / have-rel-role-91 :arg1 (h2 / he) :arg2 (w / wife))) :arg1 (l / level :arg1-of (h3 / high-02 :degree (m / most)) :domain (t / this) :arg1-of (e / experience-01 :time (e2 / ever) :time (b / before :op1 (n / now) :duration (t2 / temporal-quantity :quant (N / N-A) :unit (y / year))))))
(s / say-01 :arg0 (p / police) :arg1 (s2 / shoot-02 :arg1 (b / boy :mod (6 / 6-year-old)) :time (w / week :mod (t / this))))
(m / mean-01 :arg1 (t / that) :arg2 (s / something))
(h / have-concession-91 :arg1 (o / open-01 :arg1 (o2 / option :mod (t / this)) :time (s / still)) :arg2 (p / pledge-01 :arg0 (p2 / person :arg0-of (h2 / have-rel-role-91 :arg2 (d / dd2))) :time (m / month :mod (l / last))))
(a / and :op1 (p / postpone-01 :arg1 (a2 / and :op1 (o / operation :quant (n / nearly :op1 13,000) :mod (r / routine)) :op2 (v / visit-01 :quant 100000 :mod (r2 / routine))) :time (s / strike-01 :time (e / end-01 :arg1 (d / date-entity :decade (N / N-A))))) :op2 (c / call-01 :arg1 (p2 / person :arg0-of (s2 / specialize-01)) :arg2 (d2 / doctor :arg2-of (i / include-91 :arg1 (p3 / person :arg0-of (p4 / protest-01))))))
(s / say-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg2 (d / director :mod (v / vice))) :arg0-of (h2 / have-org-role-91 :arg2 (d2 / director :mod (v2 / vice)))) :arg1 (a / and :op1 (p2 / person :arg1-of (i / include-91 :arg2 (p3 / person :arg0-of (h3 / have-rel-role-91 :arg2 (p4 / patient)))) :arg0-of (s2 / suffer-01 :arg1 (h4 / heart))) :op2 (s3 / suffer-01 :arg0 (a2 / amr-unknown) :arg1 (o / or :op1 (a3 / attack-01 :mod (h5 / heart) :mod (a4 / another)) :op2 (s4 / stroke) :arg0-of (s5 / suffer-01 :arg1 (o2 / or :op1 (a5 / attack-01 :mod (h6 / heart) :mod (a6 / another)) :op2 (s6 / stroke)) :frequency (o3 / often)))) :concession (a7 / available-02 :arg2 (t / thing :arg2-of (t2 / treat-03 :arg1 (t3 / technology :purpose (h7 / health)))))))
(c / call-03 :arg0 (i / it) :arg1 (a / access-01 :arg0 (p / press) :arg1 (d / document) :mod (g / great :degree (m / more)) :arg1-of (t / take-01 :arg0 (o / or :op1 (g2 / group :mod (c2 / committees)) :op2 (g3 / group :arg0-of (s / study-01))))) :arg2 (p2 / press))
(c / criticize-01 :arg0 (h / he) :arg1 (c2 / check-01 :arg0 (p / person :arg0-of (c3 / check-01 :arg1 (b / box)) :arg0-of (c4 / check-01 :arg1 (b2 / box))) :arg2 (d / department :mod (r / register-02)) :location (c5 / city :location (c6 / city))) :mod (a / also))
(a / and :op1 (i / infatuation) :op2 (k / kate) :op3 (d / doppelgangers :mod (o / other)) :op4 (f / figure :mod (o2 / other)) :op5 (f2 / figure :mod (w / well)))
(s / say-01 :arg0 (p / person :arg0-of (s2 / suppose-02 :arg1 (p2 / person) :arg2 (b / bring-01 :arg0 (p3 / person) :arg1 (r / revive-01 :arg1 (r2 / revival :mod (' / '')) :arg2 (t / team :name (n / name :op1 (c / cbc)) :arg0-of (f / favor-01 :arg1 (c2 / country-region))))))) :arg1 (f2 / fool-01 :arg0 (y / you) :arg1 (1 / 14-year-old :mod (l / little) :source (a / and :op1 (c3 / country :name (n2 / name :op1 "N-A")) :op2 (c4 / country :name (n3 / name :op1 "N-A"))))))
(a / and :op1 (s / stand-01 :arg1 (s2 / she) :arg2 (m / middle :part-of (s3 / store))) :op2 (t / take-out-11 :arg0 (s4 / she) :arg1 (p / panties :arg0 (s5 / she) :arg1 (a2 / and :op1 (t2 / tights :poss (s6 / she)) :op2 (p2 / panties :arg1 (s7 / she))))) :op3 (p3 / put-01 :arg0 (s8 / she) :arg1 (t3 / they) :arg2 (o / on)))
(s / say-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (p2 / person :arg0-of (h2 / have-org-role-91 :arg2 (s2 / spokesperson))) :arg2 (s3 / spokesperson))) :arg1 (k / know-01 :arg0 (p3 / person :arg0-of (h3 / have-org-role-91 :arg2 (s4 / spokesperson))) :arg1 (i / incident :time-of (i2 / incident :location (s5 / store :name (n / name :op1 (t / tuesday) :op2 (t2 / tuesday) :op3 9)) :location (s6 / store :name (n2 / name :op1 (t3 / tuesday) :op2 (t4 / tuesday) :op3 9))))))
(r / recommend-01 :arg1 (h / have-03 :arg0 (y / you) :arg1 (h2 / hand :quant (l / less-than :op1 60))) :arg1-of (c / compare-01))
(t / think-01 :arg0 (i / i) :arg1 (s / sense-01 :arg0 (i2 / i) :arg1 (f / film) :mod (g / great)) :mod (a / also))
(s / say-01 :arg0 (m / magazine :name (n / name :op1 "N-A") :mod (t / treats)) :arg1 (c / calendars :arg0 (a / and :op1 (w / woman) :op2 (m2 / man)) :arg1 (a2 / and :op1 (w2 / woman) :op2 (w3 / woman))))
(a / and :op1 (w / work-01 :arg0 (m / magazine :name (n / name :op1 "N-A") :mod (t / treats)) :manner (c / close) :prep-with (r / release-01 :arg1 (q / quarter :quant 2017))) :op2 (i / inspire-01 :arg0 (s / snow :mod (p / pirelli) :part-of (1 / 1970s)) :arg1 (r2 / release-01 :arg1 (q2 / quarter :quant 2017)) :manner (c2 / close)))
(c / cause-01 :arg1 (l / look-01 :mode (i / imperative) :arg0 (w / we) :arg1 (i2 / it)))
(s / staircase :arg1 (w / wall :arg1-of (c / cover-01 :arg0 (a / and :op1 (p / person :name (n / name :op1 "jeff" :op2 "buckley")) :op2 (w2 / winehouse :name (n2 / name :op1 (a2 / amy) :op2 (w3 / winehouse) :op3 (w4 / winehouse) :op4 (f / fleetwood) :op5 (f2 / fleetwood) :op6 (m / maca) :op7 (m2 / maca)))))) :arg2 (l / left) :arg1-of (c2 / cause-01 :arg0 (c3 / covered :arg1 (a3 / and :op1 (m3 / music :mod (b / broadcast-program :name (n3 / name :op1 "N-A"))) :op2 (m4 / music :mod (c4 / classical)) :op3 (t / thing :arg2-of (b2 / base-02 :arg1 (c5 / collect-01 :arg1 (r / record :mod (p2 / phonograph))) :arg1-of (a4 / average-01) :mod (a5 / any)))))))
(s / say-01 :arg0 (p / person :name (n / name :op1 "julius" :op2 "nielsen") :arg0-of (s2 / study-01) :arg0-of (s3 / study-01)) :arg1 (s4 / show-01 :arg0 (f / footage) :arg1 (f2 / female :arg1-of (a / age-01 :arg2 (b / between :op1 (t / temporal-quantity :quant (N / N-A) :unit (y / year)) :op2 (t2 / temporal-quantity :quant (N2 / N-A) :unit (y2 / year)))))))
(t / think-01 :arg0 (h / he) :arg1 (d / die-01 :arg1 (h2 / he)))
(d / deal-01 :arg0 (y / you) :arg2 (i / it) :manner (a / amr-unknown))
(m / multi-sentence :snt1 (c / contrast-01 :arg2 (h / have-03 :arg0 (i / i) :arg1 (a / anything :arg0-of (h2 / have-to-do-with-04 :arg1 (a2 / anything :arg1-of (d / do-02 :arg2 (h3 / he))))))) :snt2 (g / get-05 :arg1 (i2 / i) :time (e / early)))
(m / multi-sentence :snt1 (c / cool-04 :arg1 (h / he) :degree (p / pretty)) :snt2 (t / tall :domain (k / kid)) :snt3 (t2 / tall :domain (k2 / kid)))
(s / say-01 :arg1 (p / possible-01 :arg1 (b / beat-03 :arg0 (w / we) :arg1 (c / country :name (n / name :op1 "N-A")) :arg2 (c2 / country :name (n2 / name :op1 "N-A")))) :arg2 (p2 / possible-01 :arg1 (b2 / beat-03 :arg0 (w2 / we) :arg1 (c3 / country) :arg2 (c4 / country))))
(d / differ-02 :arg1 (t / that) :arg2 (p / province :name (n / name :op1 "N-A")))
(h / have-03 :arg0 (h2 / he) :arg1 (t / thing :arg1-of (a / aspire-01) :quant (l / lot)) :arg0-of (c / cause-01 :arg1 (p / prepare-02 :arg1 (w / we) :mod (w2 / well :degree (p2 / pretty)) :time (a2 / after :op1 (t2 / that)))))
(b / block-01 :arg0 (b2 / block :name (n / name :op1 (r / rusky) :op2 (b3 / birlov))) :arg1 (s / store :name (n2 / name :op1 (p / pre-season))) :location (p2 / playoffs :mod (p3 / pre-season)) :location (o / oh :mode (e / expressive)))
(a / and :op2 (n / need-01 :arg0 (p / police) :arg1 (w / warrant) :condition (n2 / need-01 :arg0 (p2 / police) :arg1 (m / monitor-01 :arg0 (p3 / police) :arg1 (p4 / person :mod (p5 / particular))))))
(c / charge-05 :arg1 (h / he) :arg2 (c2 / crime-02) :condition (m / monitor-01 :arg0 (c3 / company :arg0-of (s / serve-01) :arg0-of (s2 / serve-01)) :arg1 (l / location :arg2-of (b / be-located-at-91 :arg1 (o / order :mod (c4 / court))))))
(m / mention-01 :polarity - :arg1 (p / problematic :location (a / and :op1 (h / house :mod (o / old)) :op2 (p2 / problem :topic (a2 / and :op1 (f / floor) :op2 (p3 / perform-01 :arg1 (e / energy :arg1-of (h2 / high-02))) :op3 (t / thing :arg1-of (r / resemble-01)))))))
(a / and :op1 (s / set :arg0 (w / we) :arg1 (t / thing :arg1-of (e / expect-01 :arg0 (w2 / we) :source (d / design-01)))) :op2 (s2 / show-01 :arg0 (w3 / we) :arg1 (e2 / element :mod (s3 / some) :topic (i / interior) :arg1-of (l / like-02 :arg0 (w4 / we) :arg1-of (l2 / like-02 :arg0 (w5 / we) :destination (d2 / design-01 :arg1 (d3 / design-01 :arg1 (o / or :op1 (c / carpet) :op2 (p / paintings)))))))) :time (b / begin-01))
(u / use-01 :arg1 (g / granite) :arg2 (a / and :op1 (c / counter-01 :arg1 (k / kitchen)) :op2 (l / lining :arg1 (w / wall :mod (f / fireplace)))))
(p / possible-01 :arg1 (r / rebuking :arg1 (r2 / rebuking :mod (o / only)) :arg2 (f / floor)) :time (p2 / prove-01 :arg1 (d / delicate :arg1 (w / wood :mod (w2 / walnut)) :arg2 (h / household :prep-with (d2 / dog)) :degree (t / too))))
(i / include-01 :arg1 (a / and :op1 (p / pool) :op2 (h / hot)) :arg2 (i2 / it) :mod (a2 / also))
(c / contrast-01 :arg1 (a / attuned :arg1 (p / person :arg0-of (h / have-org-role-91 :arg2 (g / general))) :arg1-of (g2 / general-02)) :arg2 (g3 / get-03 :arg1 (i / it) :arg2 (b / bad-04 :arg1 (i2 / it) :degree (m / more)) :time (l / lately)))
(p / possible-01 :arg1 (f / find-01 :polarity - :arg0 (p2 / person :mod (s / some)) :arg1 (i / it) :time (a / arrive-01 :arg1 (p3 / person))) :arg1-of (c / cause-01 :arg0 (s2 / see-01 :arg0 (p4 / person) :arg1 (s3 / see-01 :arg0 (p5 / person) :arg1 (i2 / it) :manner (m / much :degree (s4 / so))))))
(w / work-01 :arg0 (i / i) :arg1 (w2 / website :mod (t / travel-01)) :time (w3 / while) :time (a / after :op1 (w4 / work-01 :location (a2 / air))))
(c / contrast-01 :arg1 (l / like-02 :arg0 (i / i) :arg1 (l2 / learn-01 :arg0 (i2 / i) :arg1 (p / person :mod (c2 / country :name (n / name :op1 "N-A"))))) :arg2 (h / have-03 :arg0 (i3 / i) :arg1 (t / time :quant (m / much) :mod (t2 / that))))
(p / possible-01 :mode (i / interrogative) :arg1 (c / cause-01 :arg0 (r / religious-group :name (n / name :op1 "N-A") :domain (y / you))))
(m / multi-sentence :snt1 (r / riding :arg0 (r2 / ride-01 :arg0 (c / country :name (n / name :op1 "N-A")) :location (s / sea :name (n2 / name :op1 (d / de) :op2 (d2 / de) :op3 (j / janiero)))) :arg1 (v / veronica :name (n3 / name :op1 (y / yachtsman) :op2 (k / kozelski) :op3 (k2 / kozelski) :op4 (k3 / kozelski) :op5 (k4 / kozelski) :op6 (k5 / kozelski) :op7 (k6 / kozelski)))) :snt2 (f / fencl))
(w / want-01 :arg0 (n / no-one) :arg1 (f / find-01 :arg0 (n2 / no-one) :arg1 (n3 / note :location (m / mailbox :purpose (p / pick-01 :arg0 (n4 / no-one) :arg1 (p2 / package :location (b / branch))))) :time (d / day :time (f2 / first) :time (a / after :op1 (o / ordinal-entity :value 19)))))
(c / contrast-01 :arg2 (i / intend-01 :polarity - :arg0 (s / someone) :arg1 (a / and :op1 (c2 / circumvent :arg0 (s2 / someone) :arg1 (a2 / and :op1 (a3 / authority :mod (f / finance)) :op2 (t / thing :arg1-of (t2 / tax-01)))))))
(c / cause-01 :arg0 (h / have-03 :arg0 (p / person :mod (c2 / country :name (n / name :op1 "N-A"))) :arg1 (p2 / picture :location (a / app))) :arg1 (p3 / possible-01 :arg1 (s / see-01 :arg0 (p4 / person :mod (c3 / country :name (n2 / name :op1 "N-A"))) :arg1 (t / thing :arg1-of (w / want-01 :arg0 (p5 / person))))))
(a / and :op1 (p / put-01 :arg0 (y / you) :arg1 (s / sweatshirt :arg1-of (d / dark-02)) :arg2 (h / hand :part-of (c / couriers))) :op2 (b / be-02 :arg1 (i / it)))
(a / and :op1 (l / ltd :mod (b / basic) :domain (l2 / ltd :mod (s / shippansee))) :op2 (u / upgrade-02 :arg1 (p / person :quant 2 :mod (o / other)) :manner (w / way :poss (p2 / person))))
(c / create-01 :arg1 (t / transfer-01) :time (s / say-01 :arg0 (w / we) :arg1 (a / and :op1 (p / possible-01 :arg1 (i / interesting :domain (p2 / person :arg0-of (o / own-01 :arg1 (n / nation))) :degree (m / more :degree (f / far)))) :op2 (l / learn-01 :arg0 (w2 / we) :arg1 (b / be-located-at-91 :arg1 (r / republic :mod (c2 / czech)) :arg2 (r2 / republic) :mod (a2 / at-least))))))
(a / and :op1 (p / possible-01 :arg1 (s / see-01 :arg0 (o / one) :arg1 (l / location :location (a2 / around :op1 (c / city))))) :op2 (c2 / come-01 :arg1 (o2 / one) :arg4 (i / it)) :op3 (s2 / see-01 :arg0 (o3 / one) :arg1 (o4 / obligate-01 :arg2 (a3 / and :op1 (d / deliver-01 :arg1 (o5 / order)) :op2 (a4 / abet-01 :arg1 (s3 / ship-01))))))
(a / and :op2 (p / possible-01 :arg1 (a2 / and :op1 (a3 / assessed :arg1 (r / result-01) :time (a4 / after :op1 (n / now) :quant (m / multiple :op1 (t / temporal-quantity :quant (N / N-A) :unit (m2 / month))))) :op2 (b / bring-01 :arg0 (b2 / bonusweb) :arg1 (y / you) :arg2 (y2 / you) :time (f / first) :time (a5 / after :op1 (w / war :name (n2 / name :op1 "N-A")))))))
(a / and :op2 (r / reveal-01 :arg0 (c / company) :arg1 (t / thing :quant 23 :arg1-of (i / include-91 :arg2 (t2 / thing :arg0-of (p / publish-01))))))
(c / contrast-01 :arg2 (d / deny-01 :arg0 (s / she) :arg1 (i / it) :time (t / tell-01 :arg0 (i2 / i) :arg1 (t2 / thing :arg1-of (g / go-on-15)) :arg2 (s2 / she))))
(g / get-01 :arg0 (i / i) :arg1 (k / keys :poss (i2 / i)) :arg0-of (d / decide-01 :arg1 (c / catch-up-04 :arg1 (t / they) :arg2 (t2 / there))))
(a / and :op1 (o / operated :arg0 (t / they :quant (m / multiple :op1 1)) :arg1 (s / space)) :op2 (a2 / attack-01 :arg0 (t2 / they) :arg1 (t3 / temple :mod (e / ethnic-group :name (n / name :op1 "N-A"))) :time (l / late :degree (m2 / more))))
(a / and :op1 (h / healthy :degree (t / too) :domain (n / nothing)) :op2 (n2 / nothing :mod (t2 / too) :arg1-of (c / cause-01 :arg0 (e / except-01 :arg1 (o / or :op1 (s / salad) :op2 (r / roasted))))))
(p / probable :domain (k / know-01 :arg0 (s / she) :arg1 (n / nori :mod (p2 / particular) :mod (p3 / particular))) :mod (p4 / probable))
(r / race-02 :arg0 (t / they) :mod (a / absolute) :mod (a2 / absolute) :arg1-of (c / cause-01 :arg0 (r2 / remain-01 :arg1 (t2 / they) :arg3 (i / insurmountable :arg1 (t3 / they)))))
(h / have-03 :arg0 (a / and :op1 (c / crews :mod (n / new)) :op2 (d / denmark :mod (d2 / denmark))) :arg1 (r / reserve :mod (l / large :degree (v / very)) :mod (l2 / large :degree (v2 / very))) :time (b / begin-01 :arg1 (a2 / approaching :arg1 (a3 / and :op1 (z / zealand :mod (n2 / new)) :op2 (d3 / denmark)))))
(a / and :op1 (l / likely-01 :arg1 (b / bring-01 :arg0 (t / they) :arg1 (p / person) :arg2 (f / free-04 :arg1 (p2 / person))) :degree (m / more)) :op2 (s / say-01 :arg0 (p3 / person) :arg1 (r / rubins :arg1 (h / hunter :mod (t2 / taxi-mafia)) :arg2 (i / indictment :mod (d / deluxe)))))
(s / sense-02 :polarity - :arg1 (p / put-01 :arg1 (s2 / someone) :arg2 (j / jail) :location (j2 / jail) :mod (e / especially)))
(c / cause-01 :arg1 (a / and :op1 (l / let-01 :mode (i / imperative) :arg0 (y / you) :arg1 (c2 / card :mod (g / good)) :time (n / now)) :op2 (r / roll :arg0 (t / they) :arg1 (p / person) :arg3 (f / free-03))))
(p / picked :arg0 (t / they) :arg1 (p2 / person :quant (f / few :mod (j / just)) :source (g / group :mod (b / big) :mod (b2 / big))))
(g / give-01 :arg0 (i / i) :arg1 (v / video) :arg2 (t / they) :frequency (r / rate-entity-91 :arg3 (t2 / temporal-quantity :quant (N / N-A) :unit (d / day))))
(a / and :op1 (w / washed :arg1 (w2 / water :arg1-of (c / clean-04)) :arg2 (w3 / water :arg1-of (c2 / clean-04)) :degree (m / most) :compared-to (p / possible-01 :polarity - :arg1 (c3 / chemistry))) :op2 (g / good :degree (m2 / more) :arg1-of (l / long-03 :degree (m3 / more))))
(s / surrounded :arg1 (t / tombstone :location (i / in-front-of :op1 (s2 / she))) :location (i2 / in-front-of :op1 (s3 / she)) :time (a / after :op1 (n / need-01 :arg0 (y / you) :arg1 (a2 / and :op1 (c / climbed :arg0 (y2 / you)) :op2 (d / down :op1 (t2 / time :quant (m / multiple :op1 (t3 / temporal-quantity :quant (N / N-A) :unit (t4 / time)))))))))
(s / state-01 :arg0 (s2 / she) :arg1 (r / recommend-01 :arg1 (m / meticulously :arg0 (a / and :op1 (p / person :arg0-of (h / have-rel-role-91 :arg2 (p2 / patient))) :op2 (p3 / person :arg0-of (h2 / have-rel-role-91 :arg2 (p4 / patient))) :op3 (p5 / person :arg0-of (h3 / have-rel-role-91 :arg2 (p6 / patient)))) :arg1 (e / environment :mod (w / work-01)))))
(s / say-01 :arg0 (t / thing :arg1-of (r / report-01 :time (a / after :op1 (t2 / that)))) :arg1 (b / begin-01 :arg0 (r2 / report-01 :arg0 (s2 / service :name (n / name :op1 (r3 / remembrance) :op2 (r4 / remembrance)) :mod (s3 / state) :part-of (o / office :poss (c / city) :location (f / fryer :name (n2 / name :op1 (f2 / fryer)))))) :arg1 (t3 / thing :arg1-of (r5 / report-01)) :time (a2 / after :op1 (t4 / that))) :time (a3 / after :op1 (t5 / that)))
(q / question-01 :arg1 (t / that) :mod (o / of-course) :mod (o2 / of-course))
(p / pleased :arg0 (i / i) :arg1 (a / accept-01 :arg0 (p2 / person :arg0-of (h / have-rel-role-91 :arg1 (i2 / i) :arg2 (f / friend))) :arg1 (a2 / and :op1 (t / task :mod (i3 / important) :mod (t2 / this)) :op2 (t3 / task :mod (c / challenging)) :mod (t4 / this))) :degree (v / very))
(c / conceived :arg0 (h / he) :arg1 (i / it) :arg1-of (c2 / cause-01 :arg0 (p / possible-01 :arg1 (t / take-01 :arg0 (h2 / he) :arg1 (i2 / it) :arg3 (e / enemy :arg0-of (h3 / have-rel-role-91 :arg1 (h4 / he) :arg2 (e2 / enemy)) :arg0-of (h5 / have-rel-role-91 :arg1 (h6 / he) :arg2 (e3 / enemy)) :arg0-of (h7 / have-rel-role-91 :arg1 (h8 / he) :arg2 (e4 / enemy)) :arg0-of (h9 / have-rel-role-91 :arg1 (h10 / he) :arg2 (e5 / enemy)) :arg0-of (h11 / have-rel-role-91 :arg1 (h12 / he) :arg2 (e6 / enemy)) :arg0-of (h13 / have-rel-role-91 :arg1 (h14 / he) :arg2 (e7 / enemy)) :arg0-of (h15 / have-rel-role-91 :arg1 (h16 / he) :arg2 (e8 / enemy)) :arg0-of (h17 / have-rel-role-91 :arg1 (h18 / he) :arg2 (e9 / enemy)))))))
(a / and :op1 (s / specificity :polarity - :domain (t / this) :poss (n / nation :mod (t2 / this) :mod (j / just))) :op2 (g / guilty-01 :arg1 (w / we) :manner (r / resemble-01)))
(g / great :polarity - :degree (g2 / great) :time (a / after :op1 (l / lose-02 :arg1 (w / war :mod (c / cold) :location (c2 / country :name (n / name :op1 "N-A"))))))
(a / and :op2 (f / fear-01 :arg0 (s / stranger)))
(g / grow-01 :arg1 (g2 / grow-01 :arg1 (t / tension)))
(s / say-01 :arg1 (i / involve-01 :arg1 (s2 / service :mod (i2 / intelligence) :mod (c / country :name (n / name :op1 "N-A"))) :arg2 (o / operation :mod (a / attack-01))))
(s / say-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (p2 / person :name (n / name :op1 "N-A") :arg0-of (h2 / have-org-role-91 :arg1 (c / country :name (n2 / name :op1 "N-A")) :arg2 (s2 / spokesman :mod (g / general)))) :arg2 (s3 / spokesman :mod (g2 / general)))) :arg1 (u / underway :domain (d / downloading :arg1 (s4 / stock :source (p3 / product :arg0-of (u2 / unsold :arg1 (p4 / product))))) :time (c2 / current)))
(m / multi-sentence :snt1 (c / case :quant (m2 / many) :location (o / out :op1 (t / there))) :snt2 (r / realize-01 :arg0 (p / person) :arg1 (t2 / thing :manner-of (a / and :op1 (t3 / thing :arg1-of (d / differ-02 :arg2 (p2 / promise-01 :arg0 (p3 / person) :arg1 (p4 / propaganda :mod (s / state) :mod (r2 / religious-group :name (n / name :op1 "N-A")))))) :op2 (w / want-01 :arg0 (p5 / person) :arg1 (c2 / come-01 :arg1 (p6 / person) :direction (b / back))) :op3 (s2 / state-01 :arg0 (p7 / person) :arg1 (f / further :degree (f2 / further)))))))
(a / and :op2 (b / be-located-at-91 :arg1 (s / site :quant 1 :arg1-of (i / include-91 :arg2 (s2 / site :arg1-of (f / fame-01 :arg1-of (p / possible-01 :polarity -))))) :arg2 (p2 / prison)))
(c / contrast-01 :arg2 (r / raise-01 :arg0 (a / accuse-01 :time (y / year :mod (l / last))) :arg1 (t / thing :arg0-of (m / mark-01 :arg1 (p / possible-01 :arg1 (r2 / rely-01 :arg0 (p2 / person :arg0-of (h / have-org-role-91 :arg2 (p3 / president))) :arg1 (p4 / person :arg0-of (h2 / have-org-role-91 :arg2 (s / staff :mod (c2 / central)))) :arg2 (p5 / person :arg0-of (h3 / have-org-role-91 :arg2 (s2 / staff :mod (c3 / central)))) :purpose (e / evaluation :arg0 (p6 / person) :arg1 (o / operation :mod (m2 / military) :location (a2 / and :op1 (c4 / country :name (n / name :op1 "Afghanistan")) :op2 (c5 / country :name (n2 / name :op1 "Afghanistan")) :op3 (l2 / local-region :name (n3 / name :op1 "N-A")) :op4 (c6 / crisis :mod (o2 / other))) :manner (c7 / constant)))))))))
(t / turnaround :arg1-of (c / complete-02))
(j / jump :arg0 (c / champions :name (n / name :op1 (a / aspiring)) :mod (h / huge)) :arg1 (a2 / and :op1 (u / up :arg1 (t / they) :arg2 (h2 / heights :quant (u2 / up-to :op1 10))) :op2 (s / showcases :arg1 (r / report-01) :arg2 (e / element :quant (f / few) :name (n2 / name :op1 (- / -lrb-)))) :op3 (r2 / reports :arg1 (r3 / report-01))) :time (b / before :op1 (l / land-01 :arg1 (t2 / they) :arg2 (f2 / foot :part-of (t3 / they)) :mod (a3 / again))) :mod (t4 / trampolines :mode (e2 / expressive)))
(c / contrast-01 :arg1 (t / try-01 :arg0 (t2 / they) :arg1 (c2 / catch-up-04 :arg1 (t3 / they) :arg2 (o / or :op1 (l / line :name (n / name :op1 (f / finish))) :op2 (w / wall :arg1-of (s / start-01))) :mod (j / just :polarity -))) :arg2 (l2 / line :mod (i / imaginary) :mod (a / another) :example (o2 / or :op1 (w2 / world) :op2 (r / record :mod (o3 / olympic)))))
(a / and :op1 (n / nobler :domain (e / endeavor :mod (t / this) :mod (u / unanimous))) :op2 (s / suffice-01 :arg0 (e2 / endeavor) :degree (b / bit)) :op3 (s2 / suffice-01 :arg0 (e3 / endeavor) :arg1 (b2 / bring-01 :arg0 (e4 / endeavor) :arg1 (p / person :arg0-of (v / view-01)) :arg2 (t2 / tears :arg0 (p2 / person)))))
(t / try-01 :arg0 (p / person :name (n / name :op1 "N-A") :arg0-of (s / say-01 :arg1 (d / didn :arg0 (p2 / person) :arg1 (c / controversy :mod (l / late :degree (m / most)) :arg1-of (m2 / mean-01 :arg2 (c2 / campaign-01 :arg0 (p3 / person))))))) :arg1 (d2 / didn :arg0 (p4 / person) :arg1 (c3 / controversy :mod (l2 / late :degree (m3 / most)) :arg1-of (m4 / mean-01 :arg2 (s2 / say-01 :arg0 (p5 / person) :arg1 (d3 / didn :arg0 (a / and :op1 (p6 / person :arg0-of (h / have-org-role-91 :arg2 (p7 / president))) :op2 (p8 / person :arg0-of (h2 / have-org-role-91 :arg2 (m5 / minister :mod (g / general)))) :op3 (p9 / person :arg0-of (h3 / have-org-role-91 :arg1 (g2 / group :mod (s3 / state) :mod (s4 / state) :mod (s5 / state) :mod (s6 / state))))) :time (w / week :mod (t2 / this))) :frequency (s7 / several) :time (i / insist-01 :arg0 (p10 / person)))))))
(a / and :op1 (r / repeat-01 :arg1 (c / claim-01 :arg1 (o / old :domain (c2 / claim-01 :arg1 (o2 / old))))) :op2 (s / say-01 :arg0 (i / i) :arg1 (s2 / serious-01 :arg1 (h / he) :arg2 (t / thing :arg2-of (a2 / accuse-01 :arg0 (h2 / he)))) :time (i2 / interview-01 :arg1 (h3 / he) :quant (s3 / several))))
(s / say-01 :arg0 (s2 / she) :arg1 (s3 / stop-01 :arg0 (s4 / she) :arg1 (c / coffee) :time (w / while) :arg1-of (c2 / complete-02) :time (c3 / close-01 :arg1 (v / verb))))
(m / multi-sentence :snt1 (m2 / miss-02 :arg0 (i / i) :arg1 (s / smell)) :snt2 (s2 / say-01 :arg0 (h / he)))
(f / fear-01 :arg0 (d / diet :mod (n / new)) :arg1 (a / and :op1 (s / spread-03 :arg0 (i / it) :arg1 (f2 / food :mod (h / horrendous))) :op2 (s2 / spread-03 :arg1 (f3 / food :source (a2 / and :op1 (m / meatballs) :op2 (f4 / food)) :example (a3 / and :op1 (m2 / meatballs) :op2 (f5 / food)))) :arg1-of (c / cause-01 :arg0 (p / possible-01 :arg1 (h2 / hide-01 :arg0 (c2 / county) :arg1 (i2 / ingredient :mod (n2 / non-aesthetic)) :prep-under (l / layer :consist-of (s3 / sauce :mod (c3 / creamy))))))))
(p / probable :domain (m / mistake-02 :arg0 (p2 / person :arg0-of (h / have-org-role-91 :arg2 (p3 / president))) :arg1-of (s / same-01) :condition (a / allow-01 :arg0 (p4 / person :arg0-of (h2 / have-rel-role-91 :arg1 (h3 / he) :arg2 (w / wife))) :arg1 (s2 / set-02 :arg0 (p5 / person) :arg1 (e / example :poss (p6 / person)) :arg2 (m2 / monkey :poss (p7 / person))) :degree (t / total))) :mod (p8 / probable))
(m / make-01 :arg0 (p / person :mod (y / young)) :arg1 (f / fun) :arg2 (p2 / person))
(l / look-02 :arg0 (s / show-04) :arg1 (r / resemble-01 :arg1 (s2 / show-04) :arg2 (d / do-02 :arg0 (w / we) :arg1 (s3 / show-04))))
(c / combing :arg1 (f / force :mod (d / democracy :mod (c2 / country :name (n / name :op1 "N-A")))) :time (n2 / now) :time (a / after :op1 (d2 / depart-01 :arg0 (g / group :consist-of (m / militant :arg0-of (h / hide-01 :location (c3 / city)))))) :time (n3 / now))
(s / show-01 :arg0 (r / returns :quant 2015 :mod (t / tax-01) :poss (d / dropshipper)) :arg1 (m / make-01 :arg0 (t2 / they) :arg1 (m2 / monetary-quantity :quant 100 :unit (d2 / dollar) :mod (j / just)) :arg3 (m3 / monetary-quantity :quant 100 :unit (d3 / dollar) :mod (j2 / just))) :arg1-of (r2 / resemble-01 :polarity - :arg2 (p / person :mod (c / country :name (n / name :op1 "N-A")) :mod (c2 / country :name (n2 / name :op1 "N-A")))))
(d / day :mod (w / world) :domain (p / protect-01 :arg1 (a / animal :mod (t / this))) :time (d2 / day :mod (w2 / world)))
(m / multi-sentence :snt1 (s / see-01 :arg0 (w / we) :arg1 (c / change-01 :arg1 (b / behave-01 :arg1 (c2 / community :mod (t / this)))) :time (s2 / since :op1 (d / develop-02 :arg0 (t2 / they) :arg1 (t3 / this)))) :snt2 (c3 / confident-01 :arg1 (p / person) :arg2 (p2 / possible-01 :arg1 (k / keep-02 :arg0 (p3 / person) :arg1 (e / elephants :arg0 (p4 / person) :arg1 (f / field :poss (p5 / person)) :manner (h / hurt-01 :polarity - :arg0 (p6 / person) :arg1 (p7 / person)))) :degree (m2 / more :degree (m3 / much)))) :medium (s3 / statement))
(w / wrapped :arg1 (a / and :op1 (p / powder :arg1-of (m / mix-01 :arg2 (s / salt))) :op2 (e / end-01 :arg1 (s2 / salt)) :op3 (e2 / end-01 :arg1 (s3 / salt)) :op4 (e3 / end-01 :arg1 (p2 / petard)) :op5 (e4 / end-01 :arg1 (w2 / wick :mod (o / only)))))
(s / say-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg2 (a / ambassador))) :arg1 (s2 / surge :topic (t / trade-01 :arg0 (c / country :name (n / name :op1 "N-A")) :arg2 (c2 / country :name (n2 / name :op1 "N-A")))) :time (s3 / since :op1 (l / lifted :arg1 (t2 / thing :arg2-of (s4 / sanction-02 :arg1 (c3 / country) :mod (i / international)) :prep-against (c4 / country)))))
FAILED_TO_PARSE#Two concepts in a row.
(s / say-01 :arg0 (h / he) :arg1 (g / good-04 :arg1 (i / it) :arg2 (g2 / good :degree (t / total)) :beneficiary (w / we) :arg1-of (s2 / say-01 :arg0 (h2 / he))))
(c / contrast-01 :arg2 (a / and :op1 (l / likely-01 :polarity - :arg1 (n / neutralize-01 :arg0 (p / person :arg1-of (d / describe-01 :arg0 (m / magazine :name (n2 / name :op1 "N-A"))) :arg1-of (d2 / describe-01 :arg0 (f / forum))) :arg1 (c2 / category :ord (o / ordinal-entity :value 1)))) :op2 (f2 / fall-07 :arg1 (s / she) :arg2 (c3 / category :mod (g / good :degree (v / very))))))
(d / difficult :arg1-of (c / cause-01 :arg0 (i / involve-01 :arg1 (s / she) :arg2 (s2 / show-04 :arg1 (r / reality)))) :time (a / always))
(l / lose-02 :arg0 (c / center :mod (a / aid-01) :arg1-of (l2 / legal-02) :mod (t / this)) :arg1 (i / include-91 :arg1 (p / percentage-entity :value (N / N-A) :mod (a2 / additional)) :arg2 (f / fund-01 :arg0 (f2 / federal))) :time (y / year :mod (n / next)))
(c / call-on-05 :arg0 (w / we) :arg1 (a / and :op1 (p / person :arg0-of (h / have-org-role-91 :arg2 (d / da))) :op2 (p2 / person :arg0-of (h2 / have-org-role-91 :arg2 (s / senator))) :op3 (p3 / person :arg0-of (h3 / have-org-role-91 :arg2 (s2 / senator))) :op4 (p4 / person :arg0-of (h4 / have-org-role-91 :arg2 (s3 / senator))) :op5 (p5 / person :arg0-of (h5 / have-org-role-91 :arg2 (s4 / senator)))) :arg2 (p6 / prevent-01 :arg0 (p7 / person) :arg1 (n / need-01 :arg0 (p8 / person) :arg1 (g / get-04 :arg0 (p9 / person) :arg1 (g2 / get-05 :arg1 (p10 / person) :arg2 (t / trouble :arg1-of (l / legal-02))))) :mod (t2 / this)) :time (i / immediate))
(a / and :op1 (d / describe-01 :arg1 (i / incident) :arg2 (c / court :mod (s / state)) :location (c2 / court :mod (s2 / state)) :location (c3 / court :mod (s3 / state))) :op2 (f / filed :arg1 (s4 / software :mod (s5 / software) :time (f2 / former)) :location (s6 / state)))
(s / say-01 :arg0 (c / campaign-01 :arg0 (p / person :arg0-of (c2 / campaign-01))) :arg1 (a / and :op1 (t / take-01 :arg0 (m / media) :arg1 (w / word :poss (h / he)) :arg3 (c3 / context)) :op2 (d / defend-01 :polarity - :arg0 (p2 / person :mod (c4 / country :name (n / name :op1 "N-A"))) :arg1 (v / violence))))
(a / attempt-01 :arg1 (a2 / attempt-01 :arg1 (g / get-01 :arg1 (c / comment-01 :arg3 (p / phillip)))))
(m / multi-sentence :snt1 (a / and :op1 (w / wrong-04 :arg1 (d / doubters :quant 2012)) :op2 (w2 / wrong-04 :arg1 (d2 / doubters) :mod (e / even) :prep-in (c / case :mod (h / heathrow)))) :snt2 (w3 / wrong-04 :arg1 (i / it)))
(e / expand-01 :arg1 (e2 / expand-01) :purpose (c / create-01 :arg0 (e3 / expand-01) :arg1 (a / and :op1 (j / job :quant 180000 :mod (n / new)) :op2 (g / grow-01 :arg1 (e4 / economy)) :op3 (g2 / grow-01 :arg1 (e5 / economy)))) :purpose (a2 / and :op1 (l / leave-15 :arg0 (e6 / expand-01) :arg1 (s / skill :mod (s2 / skill))) :op2 (e7 / employ-01 :arg0 (e8 / expand-01) :arg1 (a3 / and :op1 (a4 / around :op1 (a5 / airport)) :op2 (a6 / across :op1 (a7 / airport))))))
(r / report-01 :arg0 (n / newspaper) :arg1 (d / decide-01 :arg0 (p / person :arg0-of (i / involve-01 :arg1 (p2 / person :arg0-of (w / walk-01 :path (a / along :op1 (h / highway))))) :quant (m / multiple :op1 1) :arg1-of (i2 / involve-01)) :arg1 (p3 / possible-01 :polarity - :arg1 (e / expect-01 :arg0 (p4 / person) :arg1 (c / cross-02 :arg0 (p5 / person) :arg1 (h2 / highway) :location (m2 / middle :part-of (n2 / night)))))) :prep-in (c2 / case :mod (b / both)))
(s / succeed-01 :arg0 (f / fiji) :arg1 (s2 / succeed-01 :arg0 (f2 / fiji) :mod (h / historic)))
(' / ' :arg0 (i / i) :arg1 (l / love-01 :arg0 (i2 / i) :arg1 (s / she) :degree (t / total)))
(r / remarkable-02 :arg1 (e / enforce-01 :arg1 (t / they)) :arg1-of (c / cause-01 :arg0 (d / differ-02 :arg1 (e2 / enforce-01) :manner (p / physical))))
(m / multi-sentence :snt1 (a / and :op1 (s / study-01 :arg0 (i / i) :arg1 (a2 / and :op1 (s2 / study-01 :arg0 (i2 / i)) :op2 (d / devote-01 :arg1 (i3 / i) :arg2 (f / finance)))) :op2 (d2 / devote-01 :arg1 (i4 / i) :arg2 (f2 / finance))) :snt2 (h / have-03 :arg0 (i5 / i) :arg1 (m2 / match-03 :mod (b / boxing :mod (c / charity))) :purpose (e / exemplify-01)))
(a / and :op1 (a2 / answer-01 :arg0 (h / he) :ord (o / ordinal-entity :value 1)) :op2 (w / wait-01 :arg1 (h2 / he) :arg2 (c / chance-02 :arg0 (h3 / he))) :time (a3 / always) :ord (o2 / ordinal-entity :value 1))
(m / multi-sentence :snt1 (c / contrast-01 :arg2 (s / say-01 :arg0 (p / person :arg0-of (h / have-rel-role-91 :arg1 (v / victim) :arg2 (b / brother))) :arg1 (t / think-01 :polarity - :arg0 (p2 / person) :arg1 (w / want-01 :arg0 (p3 / person) :arg1 (h2 / hurt-01 :arg0 (p4 / person) :arg1 (h3 / he)))))) :snt2 (s2 / succeed-01 :arg0 (h4 / he) :time (f / final)))
(s / say-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (f / family :arg1-of (h2 / have-org-role-91 :arg0 (p2 / person) :arg2 (m / member))) :arg2 (m2 / member))) :arg1 (a / and :op1 (f2 / food :domain (h3 / he) :time (a2 / always)) :op2 (m3 / make-02 :arg0 (h4 / he) :arg1 (d / dinner :arg1 (h5 / he))) :time (w / want-01 :arg0 (h6 / he) :arg1 (t / touch-01 :arg0 (h7 / he) :arg1 (f3 / family :arg1-of (h8 / have-org-role-91 :arg0 (h9 / he) :arg2 (m4 / member))))) :time (a3 / always)))
(c / carry-01 :arg0 (c2 / carrier) :arg1 (c3 / carrier :quant 110 :arg1-of (i / include-91 :arg2 (c4 / car :mod (t / this)))) :arg3 (t2 / thing :arg2-of (s / shelter-01 :arg3 (j / july))))
(c / cause-01 :arg0 (o / obligate-01 :arg1 (o2 / office) :arg2 (d / determine-01 :arg0 (o3 / office) :arg1 (s / stand :mod (l / law :polarity -))) :manner (a / accurate)) :arg1 (t / this))
(e / estimate-01 :arg1 (c / crop :consist-of (r / rape-01)) :arg2 (p / product-of :op1 1,305 :op2 (m / more-than :op1 (t / temporal-quantity :quant (N / N-A) :unit (y / year)))))
(s / show-01 :arg0 (p / person :arg0-of (w / write-01)) :arg1 (s2 / strana :mod (a / another)))
(e / earn-01 :arg0 (p / person :name (n / name :op1 "Clinton") :arg0-of (h / have-rel-role-91 :arg2 (c / comrade))) :arg1 (r / rate-entity-91 :arg1 (m / monetary-quantity :quant 10.6 :unit (d / dollar)) :arg2 (t / temporal-quantity :quant (N / N-A) :unit (y / year))))
(p / pay-01 :arg0 (t / they) :arg3 (p2 / percentage-entity :value (N / N-A) :arg3-of (i / include-91 :arg2 (i2 / income))) :arg2-of (t2 / total-01))
(f / find-01 :arg1 (c / case :quant (1 / 1/2) :arg1-of (i / include-91 :arg2 (c2 / case :mod (p / polio) :quant (a / all) :location (w / world)))) :location (n / nigeria))
(s / say-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (p2 / person :arg0-of (h2 / have-org-role-91 :arg2 (p3 / pope))) :arg2 (s2 / spokeswoman))) :arg1 (w / want-01 :arg0 (p4 / person) :arg1 (a / attract-01 :arg0 (p5 / person) :arg1 (a2 / and :op1 (t / traffic-01 :arg1 (s3 / shoe :mod (h3 / human))) :op2 (c / call-03 :arg1 (i / intensification :arg1 (f / fight-01 :arg2 (h4 / he))))))))
(a / and :op1 (s / stand-01 :arg1 (r / riders :quant 27 :mod (r2 / riders)) :arg2 (u / up)) :op2 (t / track-winner :arg1 (t2 / track-winner :mod (g / good :degree (m / most)) :time (p / present)) :time (o / ordinal-entity :value 14) :time (p2 / present)))
(c / cause-01 :arg0 (r / receive-01 :arg0 (p / person :mod (c2 / country :name (n / name :op1 "N-A"))) :arg1 (a / apology :arg1-of (a2 / ask-02 :arg0 (p2 / person) :arg2 (p3 / person :arg0-of (h / have-org-role-91 :arg2 (p4 / president)))))) :mod (o / only) :time (a3 / after :op1 (a4 / all)))
(c / contrast-01 :arg1 (u / use-01 :arg0 (c2 / customer :mod (c3 / country :name (n / name :op1 "N-A"))) :arg1 (b / bank :mod (r / royal))) :arg2 (t / trigger-01 :polarity - :arg0 (c4 / customer) :arg1 (b2 / business :mod (n2 / new))))
(c / contrast-01 :arg2 (a / and :op1 (d / drive-01 :arg0 (p / person :mod (c2 / country :name (n / name :op1 "N-A"))) :arg1 (c3 / company :arg0-of (w / win-01 :arg1 (c4 / career :poss (p2 / person)) :arg3 (m / most)))) :op2 (s / something :mod (r / real) :domain (p3 / person))) :manner (f / frank))
(c / consequence :mode (i / interrogative) :arg1-of (s / struggle-01 :arg2 (p / power)) :domain (t / this))
(l / landed :location (g / garden :poss (f / fish)))
(m / multi-sentence :snt1 (b / bullshit-01 :mode (i / interrogative)) :snt2 (h / have-polarity-91 :arg2 -))
(d / die-01 :arg1 (g / girl) :time (r / raid-01 :arg0 (f / force :arg1-of (a / ally-01 :arg2 (w / world-region :name (n / name :op1 "N-A")))) :arg1 (g2 / girl) :mod (a2 / air)))
(c / contrast-01 :arg1 (a / and :op1 (b / base-02 :arg1 (e / educate-01 :arg1-of (h / high-02 :degree (m / more))) :arg2 (g / good)) :op2 (i / indicator :mod (o / overall) :domain (a2 / and :op1 (i2 / intelligence) :op2 (e2 / educability) :poss (c2 / candidate)))) :arg2 (h2 / have-03 :polarity - :arg0 (a3 / and) :arg1 (m2 / much :topic (d / develop-02)) :frequency (o2 / often)))
(d / demand-01 :arg0 (p / person :arg0-of (m / manage-01 :arg1 (p2 / project))) :mod (a / also))
(a / available-02 :arg2 (s / swim-01 :manner (h / health) :location (a2 / and :op1 (l / locality) :op2 (b / breakfast) :op3 (d / dinner) :quant (s2 / some))) :frequency (r / rate-entity-91 :arg3 (t / temporal-quantity :quant (N / N-A) :unit (d2 / day))))
(i / increase-01 :arg1 (n / number :quant-of (s / step-01 :arg2 (p / person :arg1-of (a / average-03)))) :arg1-of (s2 / significant-02) :time (d / day :mod (t / this)) :arg1-of (c / cause-01 :arg0 (i2 / increase-01 :arg1 (g / game :mod (t2 / this)))))
(e / effort :prep-without (e2 / effort :manner (e3 / effort :polarity -)))
(a / and :op1 (l / leave-15 :arg0 (p / person :name (n / name :op1 "simone" :op2 "biles")) :arg1 (a2 / and :op1 (- / -rrb- :arg1 (p2 / person)) :op2 (e / embrace :arg0 (p3 / person) :arg1 (m / medal :name (n2 / name :op1 (s / silver)) :mod (g / gold))))) :op2 (e2 / embrace :arg0 (p4 / person) :arg1 (m2 / medal :name (n3 / name :op1 (s2 / silver)) :mod (g2 / gold)) :location (m3 / multiboy :mod (s3 / summer) :location (o / olympics :mod (s4 / summer)) :location (o2 / olympics :mod (s5 / summer)) :location (o3 / olympics :mod (s6 / summer)) :location (o4 / olympics :mod (s7 / summer)))))
(h / have-03 :arg0 (p / person :mod (c / country :name (n / name :op1 "N-A"))) :arg1 (m / message :topic (p2 / person :mod (c2 / child :quant (a / all) :arg0-of (s / suffer-01 :arg1-of (c3 / cause-01 :arg0 (m2 / malformations :arg0 (v / virus :name (n2 / name :op1 (c4 / congenital) :op2 (c5 / congenital))))))))))
(s / say-01 :arg0 (p / person :arg0-of (o / observe-01) :arg1-of (n / near-02 :arg2 (n2 / name :op1 (l / livinston)))) :arg1 (f / fall-01 :arg1 (c / centimeter :quant 35 :mod (y / yuhua)) :arg4 (t / through :op1 (t2 / temporal-quantity :quant (N / N-A) :unit (y2 / year)))))
(r / report)
(s / say-01 :arg0 (h / he) :arg1 (c / contrast-01 :arg1 (r / report-01 :arg1 (f / flooding :mod (h2 / home :quant (f2 / few)))) :arg2 (r2 / report-01 :arg1 (t / thing :arg1-of (r3 / report-01)))))
(e / enter-01 :arg0 (h / he) :arg1 (s / school :mod (c / class :ord (o / ordinal-entity :value 1) :part-of (s2 / school :mod (e2 / elementary)))))
(a / and :op1 (n / need-01 :arg1 (p / progress-01)) :op2 (n2 / need-01 :arg1 (p2 / progress-01)) :time (b / before :op1 (g / go-01 :arg1 (g2 / group :consist-of (d / doctor) :ord (o / ordinal-entity :value 1) :mod (o2 / only)) :prep-under (t / treaty :mod (n3 / new)))))
(a / and :op1 (m / meet-03 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (g / government-organization :arg0-of (g2 / govern-01)))) :arg1 (b / bid-03) :purpose (r / resolve-01 :arg0 (p2 / person) :arg1 (d / dispute-01 :arg2 (n / negotiate-01)))) :op2 (m2 / meet-03 :arg0 (p3 / person) :arg1 (a2 / amusement-park :name (n2 / name :op1 "N-A") :mod (d2 / deafening)) :frequency (o / often) :prep-with (g3 / government-organization :arg0-of (g4 / govern-01))))
(s / say-01 :arg0 (h / he) :arg1 (a / and :op1 (r / rahman :arg1 (a2 / and :op1 (r2 / rahman) :op2 (a3 / agent :poss (h2 / he))) :purpose (a4 / and :op1 (c / corruption) :op2 (p / practice-01 :mod (l / law :polarity -)))) :op2 (s2 / say-01 :arg0 (h3 / he))))
(a / and :op1 (o / oppose-01 :arg0 (p / person :quant (m / multiple :op1 1) :arg1-of (p2 / popular-02 :arg2 (t / temporal-quantity :quant (N / N-A) :unit (y / year)))) :arg1 (y2 / year :mod (t2 / this)) :time (y3 / year :mod (t3 / this))) :op2 (o2 / oppose-01 :arg0 (p3 / person :mod (c / country :name (n / name :op1 "N-A")) :mod (c2 / country :name (n2 / name :op1 "N-A"))) :arg1 (h / harris :mod (p4 / patrick) :mod (n3 / neil))) :time (y4 / year :mod (t4 / this)))
(b / believe-01 :arg0 (p / person :name (n / name :op1 "byron" :op2 "macdonald")) :arg1 (o / off :domain (m / microphone :poss (h / he)) :time (b2 / begin-01 :arg0 (h2 / he) :arg1 (s / shed :arg0 (h3 / he) :arg1 (t / thing :arg1-of (o2 / opine-01 :arg0 (h4 / he))) :time (e / end-01 :arg1 (s2 / stage :poss (w / woman) :mod (s3 / style :quant (4 / 4x200) :arg1-of (f / free-03))))))))
(t / test-01 :arg0 (h / he) :arg1 (s / system :mod (i / immune) :poss (h2 / he)) :manner (s2 / safe) :time (a / after :op1 (m / mission :mod (t2 / this))) :manner (s3 / safe))
(f / force-01 :arg0 (a / and :op1 (h / house-01) :op2 (p / person :arg0-of (h2 / have-rel-role-91 :arg1 (s / she) :arg2 (p2 / partner))) :op3 (p3 / person :arg0-of (h3 / have-rel-role-91 :arg1 (s2 / she) :arg2 (p4 / partner))) :op4 (p5 / person :arg0-of (h4 / have-rel-role-91 :arg1 (s3 / she) :arg2 (p6 / partner))) :op5 (p7 / person :arg0-of (h5 / have-rel-role-91 :arg1 (s4 / she) :arg2 (p8 / partner))) :op6 (p9 / person :arg0-of (h6 / have-rel-role-91 :arg1 (s5 / she) :arg2 (p10 / partner))) :op6 (p11 / person :arg0-of (h7 / have-rel-role-91 :arg1 (s6 / she) :arg2 (p12 / partner))) :op6 (p13 / person :arg0-of (h8 / have-rel-role-91 :arg1 (s7 / she) :arg2 (p14 / partner))) :op7 (p15 / person :arg0-of (h9 / have-rel-role-91 :arg1 (s8 / she) :arg2 (p16 / partner)))) :arg1 (h10 / house) :time (w / week :mod (t / this)) :time (a2 / after :op1 (g / given :arg1 (a3 / and) :mod (a4 / additional) :purpose (m / move :arg1 (a5 / and) :manner (v / volunteer-01)))))
(h / hope-01 :arg0 (i / i) :arg1 (a / and :op1 (b / bring-01 :arg0 (s / step :mod (t / this)) :arg1 (c / comfort :quant (b2 / bit)) :arg2 (n / neighbor-01 :arg1 (w / we) :arg2 (w2 / we))) :op2 (c2 / carry-01 :arg0 (t2 / time :arg1-of (s2 / same-01)) :arg1 (m / message :topic (t3 / tolerate-01 :polarity - :arg0 (w3 / we) :arg1 (b3 / behave-01 :arg0 (n2 / non-social)))) :time (t4 / time :arg1-of (s3 / same-01)))))
(s / say-01 :arg0 (p / person :arg0-of (l / lead-02 :arg1 (o / organization :name (n / name :op1 "democratic" :op2 "party" :op3 "senate"))) :arg0-of (h / have-org-role-91 :arg1 (o2 / organization) :arg3 (l2 / lead-02))) :arg1 (c / convince-01 :arg0 (p2 / person) :arg1 (c2 / candidate :poss (p3 / person :arg0-of (h2 / have-org-role-91 :arg2 (p4 / president :mod (v / vice)))) :arg1-of (g / garland :arg2 (c3 / court :mod (s2 / supreme)))) :condition (e / elect-01)))
FAILED_TO_PARSE#Number of opening and closing brackets doesn't match.
(m / multi-sentence :snt1 (w / watch-01 :arg0 (i / i) :arg1 (c / camera) :arg1-of (c2 / cause-01 :arg0 (a / and :op1 (w2 / walk-01 :arg0 (i2 / i) :destination (s / street :mod (b / busy) :arg1-of (g / gray :mod (b2 / busy))) :arg1-of (w3 / wide-02)) :op2 (a2 / and :op1 (s2 / stop-01 :arg0 (i3 / i) :arg1 (h / hand :part-of (i4 / i))) :op2 (a3 / and :op1 (p / pull-01 :arg0 (i5 / i) :arg2 (h2 / hand :part-of (i6 / i))) :op2 (a4 / and :op1 (p2 / pull-01 :arg0 (i7 / i) :arg2 (h3 / hand :part-of (i8 / i))) :op2 (a5 / and :op1 (p3 / pull-01 :arg0 (i9 / i) :arg2 (h4 / hand)) :op2 (p4 / pulling :arg0 (i10 / i))))))))) :snt2 (l / look-01 :mode (i11 / imperative) :arg0 (w4 / we) :arg1 (i12 / it)))
(s / say-01 :arg0 (h / he) :arg1 (s2 / sell-01 :arg0 (c / customer) :arg1 (t / thing :arg2-of (m / mask-01) :mod (r / record) :poss (c2 / customer)) :time (n / now) :arg1-of (c3 / cause-01 :arg0 (s3 / sell-01 :arg0 (c4 / customer) :arg1 (t2 / thing :arg2-of (m2 / mask-01) :mod (r2 / record) :poss (c5 / customer))) :time (n2 / now))))
(h / have-concession-91 :arg1 (a / and :op1 (t / take-01 :polarity - :arg0 (t2 / they) :arg1 (t3 / thing :arg2-of (r / result-01 :arg1 (s / store :name (n / name :op1 (y / yougov))))) :manner (a2 / at-least :op1 (s2 / store :mod (r2 / record)))) :op2 (t4 / take-01 :polarity - :arg0 (t5 / they) :arg1 (t6 / thing :arg2-of (r3 / result-01 :arg1 (s3 / store :name (n2 / name :op1 (v / vinyl)))) :mod (a3 / at-least :op1 (s4 / store :mod (r4 / record))) :arg0-of (e / exist-01 :arg1 (a4 / and :op1 (s5 / store :mod (r5 / record)) :op2 (f / forum :mod (o / online))) :mod (a5 / actual))))) :arg2 (t7 / thing :arg2-of (r6 / result-01 :arg1 (t8 / thing :arg2-of (r7 / result-01 :arg1 (y2 / yougov))))))
(p / possible-01 :polarity - :arg1 (a / and :op1 (b / bankrupt-01 :arg1 (p2 / person :name (n / name :op1 "ryan" :op2 "murphy") :arg0-of (w / win-01 :arg1 (d / double :mod (d2 / doubles))))) :op2 (w2 / win-01 :arg0 (p3 / person) :arg1 (d3 / double :mod (d4 / double)) :mod (a2 / also))))
(r / race-02 :arg0 (p / person :arg0-of (w / win-01 :arg1 (r2 / race :mod (t / two-breasted)))) :arg3 (m / medal :ord (o / ordinal-entity :value 1) :mod (o2 / olympic) :arg1-of (a / age-01 :arg2 (t2 / temporal-quantity :quant (N / N-A) :unit (y / year)))))
(s / say-01 :arg1 (d / disappoint-01 :arg1 (w / we)) :arg2 (d2 / disappoint-01 :arg1 (w2 / we)))
(r / remember-01 :polarity - :arg0 (i / i) :arg1 (t / that))
(r / recommend-01 :arg1 (a / apply-02 :arg1 (r2 / rule :mod (n / new)) :arg2 (p / passports :quant (a2 / all) :arg0-of (d / decide-01 :arg1 (a3 / acquire-01 :arg0 (p2 / person) :arg1 (s / sim :source (o / operate-01 :arg1-of (l / local-02)))))) :time (s2 / stay-01 :arg1 (p3 / person) :location (c / country :name (n2 / name :op1 "N-A")))))
(c / contrast-01 :arg1 (p / person :arg0-of (t / tour-01) :mod (o / only :polarity -) :prep-for (p2 / person :arg0-of (t2 / tour-01))) :arg2 (w / work-01 :arg0 (p3 / person) :arg1 (w2 / work-01 :arg0 (p4 / person) :arg1 (w3 / work-01 :arg0 (p5 / person) :arg1 (o2 / or :op1 (e / exemplify-01 :arg0 (p6 / person)) :op2 (m / marrying :arg1 (p7 / person))))) :mod (a / also)))
(c / contrast-01 :arg1 (k / know-01 :arg0 (t / they) :arg1 (n / number :mod (p / phone))) :arg2 (p2 / person :polarity - :arg0-of (o / own-01)))
(m / mention-01 :polarity - :arg1 (p / problematic :location (a / and :op1 (h / house :mod (o / old)) :op2 (p2 / problem :arg1-of (s / swinging :arg2 (f / floor))) :op3 (d / demand-01 :arg1 (e / energy :arg1-of (h2 / high-02))) :op4 (s2 / so))))
(a / access-01 :arg0 (p / person :quant 1 :arg1-of (i / include-91 :arg2 (p2 / person :arg0-of (b / build-01))) :arg0-of (b2 / benefit-01 :arg1 (a2 / apartment :mod (e / entire)) :degree (v / very))) :arg1 (a3 / access-01 :arg0 (p3 / person) :arg1 (b3 / bathroom :mod (m / main)) :arg4 (p4 / pool :name (n / name :op1 (r / rooftop))) :arg1-of (d / direct-02) :mod (a4 / also)))
(c / cause-01 :arg0 (s / spirit :mod (p / person)) :mod (e / especially))
(c / contrast-01 :arg1 (o / operate-01 :arg0 (w / we) :location (p / prague) :mod (o2 / only) :time (s / so-far)) :arg2 (l / like-02 :arg0 (w2 / we) :arg1 (e / extend-01 :arg0 (w3 / we) :arg1 (i / it) :arg3 (e2 / europe :mod (c2 / central) :quant (w4 / whole)))))
(a / and :op1 (t / tell-01 :arg0 (p / person :arg0-of (l / lead-02 :arg1 (i / i))) :arg1 (p2 / person :arg0-of (l2 / lead-02 :arg1 (t2 / team :mod (f / football) :mod (c / country :name (n / name :op1 "N-A"))))) :arg2 (i2 / i) :time (o / once :op1 (t3 / tell-01 :arg0 (t4 / team :mod (f2 / football) :mod (c2 / country :name (n2 / name :op1 "N-A"))) :arg1 (s / something)))) :op2 (s2 / say-01 :arg0 (p3 / person) :arg1 (c3 / contrast-01 :arg1 (p4 / person :polarity - :mod (c4 / country) :domain (p5 / person)) :arg2 (p6 / person :mod (c5 / country) :domain (p7 / person)))))
(a / and :op2 (r / religious-group :name (n / name :op1 "N-A") :mod (j / just :polarity -)))
(c / cause-01 :arg1 (s / say-01 :arg0 (i / i) :arg1 (r / recommend-01 :arg1 (h / hide-01 :arg0 (i2 / i) :arg1-of (c2 / cause-01 :arg0 (a / amr-unknown))) :arg1-of (c3 / cause-01 :arg0 (a2 / amr-unknown))) :time (r2 / read-01 :arg0 (i3 / i) :arg1 (p / pass-01 :arg2 (p2 / person :arg0-of (h2 / have-rel-role-91 :arg1 (h3 / he) :arg2 (p3 / prophet)))) :arg0-of (c4 / cause-01 :arg1 (t / tell-01 :arg0 (g / god) :arg1 (p4 / person :arg0-of (h4 / have-rel-role-91 :arg1 (p5 / person) :arg2 (c5 / child))) :arg2 (h5 / hide-01 :arg0 (p6 / person) :arg1 (w / wives :poss (p7 / person)) :arg2 (s2 / sight :poss (o / other))))))))
(c / contrast-01 :arg2 (a / and :op1 (r / respect-01 :arg0 (i / i) :arg1 (t / that) :time (g / go-02 :arg0 (i2 / i) :arg4 (o / or :op1 (p / person :mod (c2 / country :name (n / name :op1 "N-A"))) :op2 (p2 / person :mod (s / saudi))))) :op2 (t2 / take-01 :arg0 (i3 / i) :arg1 (i4 / it)) :time (g2 / go-02 :arg0 (i5 / i) :arg4 (o2 / or :op1 (p3 / person :mod (c3 / country :name (n2 / name :op1 "N-A"))) :op2 (p4 / person :mod (s2 / saudi))))))
(c / contrast-01 :arg1 (t / think-01 :arg0 (i / i) :arg1 (t2 / territory :name (n / name :op1 "N-A")) :time (w / while)) :arg2 (f / fine-04 :arg1 (i2 / i) :location (l / location :name (n2 / name :op1 "prague"))))
(w / want-01 :arg0 (n / no-one) :arg1 (f / find-01 :arg0 (n2 / no-one) :arg1 (t / ticket :arg0-of (s / say-01 :arg1 (w2 / want-01 :arg0 (h / he) :arg1 (p / pick-01 :arg0 (h2 / he) :arg1 (s2 / ship-01 :location (b / branch)))))) :time (d / day :time (a / after :op1 (p2 / product-of :op1 19 :op2 00) :time (e / early :degree (m / more))))))
(c / cause-01 :arg0 (i / important :domain (n / need-01 :arg0 (i2 / i) :arg1 (p / package) :duration (t / temporal-quantity :quant (N / N-A) :unit (h / hour)))) :arg1 (w / wait-01 :arg1 (i3 / i) :arg2 (h2 / home) :time (t2 / time :mod (t3 / that))))
(a / and :op1 (w / want-01 :arg0 (w2 / we) :arg1 (s / service :mod (g / good :degree (m / more))) :manner (f / fast :degree (m2 / more))) :op2 (a2 / and :op1 (f2 / fast :degree (m3 / more)) :op2 (s2 / service :mod (f3 / fast :degree (m4 / more)) :arg0-of (h / hurt-01 :polarity - :arg1 (a3 / and :op1 (a4 / anyone) :op2 (s3 / send-03 :arg1 (i / ingredient) :arg3 (c / compete-02)))))))
(h / have-03 :arg0 (w / we) :arg1 (a / and :op1 (p / person :quant 3 :arg0-of (m / merchandise-01)) :op2 (p2 / person :mod (s / small)) :op3 (p3 / person :mod (s2 / small)) :op4 (p4 / person :mod (b / big)) :op5 (p5 / person :mod (b2 / big)) :op6 (p6 / person :mod (b3 / big) :mod (b4 / beers))))
(c / cause-01 :arg0 (h / have-03 :arg0 (p / person :mod (c2 / country :name (n / name :op1 "N-A"))) :arg1 (o / option) :purpose (t / take-01 :arg0 (p2 / person) :arg1 (p3 / picture))) :arg1 (s / see-01 :arg0 (p4 / person) :arg1 (t2 / thing :arg1-of (w / want-01 :arg0 (p5 / person)))) :mod (p6 / plus))
(a / and :op1 (c / come-out-09 :arg1 (a2 / amr-unknown) :arg2 (i / idea)) :op2 (t / take-10 :arg0 (r / run-02 :arg0 (a3 / amr-unknown)) :arg1 (s / service)))
(c / contrast-01 :arg1 (k / know-01 :arg0 (w / we) :arg1 (r / run-13 :arg1-of (l / long-03))) :arg2 (w2 / want-01 :arg0 (w3 / we) :arg1 (c2 / create-01 :arg0 (w4 / we) :arg1 (p / product :mod (g / good :degree (r2 / really))) :beneficiary (p2 / people))))
(m / make-02 :arg0 (t / this) :arg1 (l / look-02 :arg0 (t2 / this) :arg1 (b / battlefield)))
(c / contrast-01 :arg2 (a / and :op1 (w / want-01 :arg0 (i / i) :arg1 (c2 / caress :arg0 (i2 / i) :arg1 (s / she)) :frequency (s2 / sometimes)) :op2 (l / leave-11 :polarity - :arg0 (s3 / she))))
(c / contrast-01 :arg1 (p / possible-01 :arg1 (p2 / prepare-01 :arg0 (y / you) :arg1 (i / it) :location (h / home))) :arg2 (h2 / have-03 :arg0 (g / ginger :name (n / name :op1 (p3 / pink) :op2 (g2 / gari)) :mod (r / real)) :arg1 (f / flavor :mod (u / unique) :arg1-of (s / sharp-02)) :arg1-of (c2 / cause-01 :arg0 (r2 / recipes :arg1 (a / and :op1 (v / vinegar :mod (v2 / vinegar)) :op2 (g3 / ginger) :quant (s2 / several))))))
(i / include-91 :arg3 1 :arg1 (i2 / it) :arg2 (t / type :mod (t2 / type :mod (i3 / important :degree (m / most)) :arg1-of (p / produce-01 :arg0 (a / and :op1 (c / chopping) :op2 (p2 / press-01) :op3 (n / nori :arg1-of (c2 / call-01 :manner (s / so)))) :arg1-of (m2 / mean-01 :arg2 (s2 / slides :arg1 (p3 / produce-01 :arg1 (s3 / sushi)) :arg1-of (i4 / intend-01)))))) :location (c3 / country :name (n2 / name :op1 "N-A")))
(h / have-concession-91 :arg1 (d / defeat-01 :arg0 (i / i) :arg1 (t / team :mod (1 / 15-member)) :manner (h2 / health :mod (f / full))))
(l / lose-02 :arg0 (t / they) :arg1 (m / match-03 :frequency (r / rate-entity-91 :arg3 (t2 / temporal-quantity :quant (N / N-A) :unit (y / year)))) :time (b / before :op1 (n / now) :quant (t3 / temporal-quantity :quant (N2 / N-A) :unit (y2 / year))) :subevent-of (l2 / lead-02 :arg0 (p / person :arg0-of (l3 / lead-02))))
(b / begin-01 :arg1 (m / magnificently :arg0 (b2 / breaches :poss (p / person :mod (c / country :name (n / name :op1 "N-A")) :arg0-of (h / have-org-role-91 :arg1 (c2 / country :name (n2 / name :op1 "N-A")))))))
(r / resemble-01 :arg1 (r2 / resemble-01 :arg1 (r3 / run-02 :arg0 (a / and :op1 (p / person :arg0-of (h / have-org-role-91 :arg2 (c / captain))) :op2 (p2 / person :mod (o / other) :arg0-of (h2 / have-org-role-91 :arg2 (t / teammates))))) :arg2 (b / behind :op1 (r4 / range-01 :arg1 (b2 / bus) :arg2 (a2 / and :op1 (m / move-01 :arg1 (b3 / bus)) :op2 (l / lead-02 :arg0 (p3 / person :mod (w / world) :arg0-of (l2 / lead-02 :arg1 (w2 / world))) :arg2 (b4 / behind :op1 (c2 / corner))))))) :arg2 (r5 / run-02 :arg0 (a3 / and)))
(t / think-01 :arg0 (t2 / they) :arg1 (l / less :degree (l2 / less) :compared-to (u / usual) :arg1-of (c / cause-01 :arg0 (t3 / try-01 :arg0 (h / he) :arg1 (h2 / handle-01 :arg0 (h3 / he) :arg1 (a / anxiety :poss (h4 / he)))))) :time (a2 / after :op1 (w / win-01 :arg0 (t4 / they))) :time (a3 / after :op1 (w2 / win-01 :arg0 (t5 / they))))
(m / make-01 :arg0 (y / you) :arg1 (r / report-01 :arg1 (a / and :op1 (d / discover-01 :arg0 (y2 / you) :arg1 (p / practice-01 :mod (f / fraudulent))) :op2 (p2 / person :arg1-of (s / suppose-02 :arg2 (b / be-located-at-91 :arg1 (p3 / person) :arg2 (c / court)))))))
(a / and :op1 (s / study-01 :arg0 (h / he) :location (a2 / academy :name (n / name :op1 (m / miroslav) :op2 (a3 / academy) :op3 (a4 / academy)) :mod (o / ond?í?ek) :location (p / písek))) :op2 (b / be-located-at-91 :arg1 (h2 / he) :arg2 (u / university :mod (b2 / bata) :location (z / zlín)) :time (t / then)))
(w / watch-01 :arg0 (p / police) :arg1 (s / she) :duration (m / multiple :op1 (t / temporal-quantity :quant (N / N-A) :unit (m2 / month))))
(t / try-01 :mode (i / interrogative) :arg0 (y / you) :arg1 (c / confront-01 :arg0 (y2 / you) :arg1 (t2 / they) :arg1-of (d / direct-02)))
(g / go-01 :arg1 (r / release-01 :arg1 (p / part :mod (l / last) :part-of (s / series))) :duration (s2 / several :op1 (t / temporal-quantity :quant (N / N-A) :unit (m / month))))
(m / multi-sentence :snt1 (a / and :op1 (e / easy-05 :polarity - :arg1 (i / it)) :op2 (f / fast :polarity - :domain (i2 / it) :degree (f2 / fast :polarity -))) :snt2 (d / draw-02 :arg0 (t / trost :name (n / name :op1 (r / restorant) :op2 (v / vanesa)) :source (u / url-entity :value (o / old?ichov))) :arg2 (w / work-01 :arg0 (s / she))))
(a / and :op1 (b / be-temporally-at-91 :arg1 (i / index :mod (i2 / index :mod (n / new))) :arg2 (h / high :mod (n2 / new)) :time (n3 / now)) :op2 (a2 / account-01 :arg0 (p / percentage-entity :value (N / N-A)) :arg1 (p2 / percentage-entity :value (N2 / N-A)) :time (s / since :op1 (b2 / begin-01 :arg1 (y / year))) :time (a3 / already)) :li (p3 / p500))
(d / dismiss-01 :arg1 (p / person :arg0-of (h / have-org-role-91 :arg1 (c / country :name (n / name :op1 "N-A")))) :time (r / request-01 :arg0 (p2 / person)))
(a / and :op1 (f / fight-01 :arg0 (p / person :arg0-of (s / succumb :arg1 (p2 / puerto :arg0 (p3 / person)))) :ord (o / ordinal-entity :value 1)) :op2 (s2 / surprise-01 :arg0 (f2 / fight-01 :arg0 (p4 / person) :arg1 (p5 / person :arg0-of (h / have-org-role-91 :arg2 (p6 / puerto)))) :arg1 (p7 / person :quant 4 :arg0-of (h2 / have-org-role-91 :arg2 (s3 / succumbed))) :time (a2 / after :op1 (v / value-interval :op1 4 :op2 6 :op3 6 :op4 1))))
(h / have-condition-91 :arg1 (g / go-01 :arg1 (s / society :mod (g2 / german)) :arg4 (s2 / self-reflection :mod (p / profound))) :arg2 (i / ignore-01 :polarity - :arg0 (c / country :name (n / name :op1 "N-A")) :arg1 (c2 / country :name (n2 / name :op1 "N-A"))))
(c / carry-out-03 :arg0 (a / and :op1 (c2 / country :name (n / name :op1 "N-A")) :op2 (s / soviets)) :arg1 (a2 / atrocity :location (o / or :op1 (o2 / occupy-01) :op2 (a3 / area :arg1-of (a4 / abandon-01)))))
(b / bring-01 :arg0 (t / this) :arg1 (a / and :op1 (r / reflection :mod (t2 / true)) :op2 (i / infringe-01 :arg1 (s / society))) :arg2 (s2 / society))
(b / benefit-01 :arg0 (a / amr-unknown) :arg1 (g / grow-01 :arg1 (t / tension :location (a2 / around :op1 (p / port :name (n / name :op1 "N-A"))))))
(a / and :op1 (t / thing :arg2-of (p / price-01 :arg1 (t2 / thing :arg2-of (p2 / price-01 :arg1 (a2 / and :op1 (p3 / product :consist-of (t3 / tobacco)) :op2 (p4 / product :consist-of (t4 / tobacco)))) :op2 (p5 / product :consist-of (t5 / tobacco)) :op3 (w / water) :op4 (e / electricity) :op5 (e2 / electricity) :op6 (f / fuel :mod (o / other))))) :time (l / level :mod (s / same)))
(a / and :op1 (b / base-02 :arg1 (c / consume-01 :arg0 (p / person :arg0-of (c2 / consume-01)) :arg2 (p2 / problem :topic (h / health))) :time (a2 / after :op1 (c3 / consume-01 :arg0 (p3 / person) :arg1 (p4 / piece :mod (s / smoke-02 :arg1 (h2 / health))) :manner (w / wild))) :time (a3 / after :op1 (c4 / consume-01 :arg0 (p5 / person) :arg1 (p6 / piece :mod (s2 / smoke-02 :arg1 (h3 / health))) :manner (w2 / wild)))) :op2 (c5 / check-01 :arg0 (p7 / person) :arg1 (s3 / store :name (n / name :op1 (a4 / albert)) :location (a5 / and :op1 (s4 / square) :op2 (n2 / na)))))
(a / and :op1 (w / withdraw-01 :arg0 (w2 / we) :arg1 (b / batch) :time (i / immediate)) :op2 (d / downloaded :arg0 (w3 / we) :arg1 (b2 / batch :mod (o / other) :quant (a2 / all) :part-of (i2 / item :mod (t / this))) :mod (a3 / also)))
(p / paradise :topic (t / turn-02 :arg1 (p2 / person :mod (c / country :name (n / name :op1 "N-A"))) :arg2 (g / girl :location (h / hell :location (e / earth)))) :arg1-of (c2 / cause-01 :arg0 (e2 / escape-01 :polarity - :arg0 (p3 / person))))
(a / and :op1 (h / have-03 :arg0 (t / they) :arg1 (o / order :purpose (s / shoot :arg0 (t2 / they) :manner (t3 / think-01 :polarity - :arg0 (t4 / they))))) :op2 (q / quote-01 :arg0 (t5 / they) :arg2 (p / person :arg0-of (h2 / have-rel-role-91 :arg1 (f / family :arg1-of (h3 / have-org-role-91 :arg0 (g / girl :arg1-of (d / deceased)) :arg2 (t6 / telegraph))) :arg2 (t7 / telegraph)))))
(t / try-01 :arg0 (p / person :arg1-of (i / imprison-01) :quant (m / many)) :arg1 (e / escape-01 :arg0 (p2 / person)))
(c / company :polarity - :mod (o / only) :arg0-of (e / exceed-01 :arg1 (l / limit-01 :arg1 (c2 / culture) :mod (t / this))) :domain (s / snapchat))
(s / say-01 :arg0 (t / thing :arg1-of (r / report-01 :arg0 (g / group :arg0-of (w / work-01) :arg1-of (s2 / set-up-03 :arg0 (a / and :op1 (c / committee :arg0-of (h / have-org-role-91 :arg1 (f / force :arg1-of (a2 / arm-01)) :arg2 (c2 / chairman))) :op2 (c3 / committee :arg0-of (h2 / have-org-role-91 :arg1 (i / intelligence))) :op3 (s3 / service :mod (i2 / intelligence))) :mod (p / preliminary))))) :arg1 (' / '' :arg0 (p2 / person :arg0-of (a3 / analyze-01 :arg1 (i3 / intelligence)) :mod (c4 / central)) :arg1 (a4 / assess-01 :arg0 (p3 / person) :arg1 (e / effort :poss (p4 / person)) :purpose (d / defeat-01 :arg0 (p5 / person) :arg1 (s4 / state :mod (r2 / religious-group :name (n / name :op1 "N-A"))))) :arg1-of (w2 / wide-02)) :arg1-of (c5 / conform-01 :arg2 (t2 / thing :arg1-of (r3 / report-01 :arg0 (g2 / group :arg0-of (w3 / work-01) :arg0-of (h3 / have-org-role-91 :arg1 (c6 / committee :mod (f2 / force :arg1-of (a5 / arm-01))) :arg2 (c7 / chairman))) :mod (p6 / preliminary)))))
(l / lead-03 :arg0 (c / crash-01 :arg1 (o / organization)) :arg2 (t / top :poss (o2 / organization)))
(p / publish-01 :arg0 (p2 / person :arg0-of (h / have-org-role-91 :arg1 (s / service :mod (i / intelligence)) :arg2 (m / member))) :arg1 (t / thing :arg1-of (i2 / include-91 :arg2 (t2 / thing :arg1-of (c / conclude-01 :arg0 (g / group :arg0-of (w / work-01) :mod (r / republican))) :quant (s2 / some)))) :arg2 (p3 / person :arg0-of (h2 / have-org-role-91 :arg1 (s3 / service :mod (i3 / intelligence)) :arg2 (m2 / member))))
(s / shines :polarity - :arg0 (f / fire :name (n / name :op1 (f2 / fire) :op2 (f3 / fire))) :mod (a / as-well) :mod (a2 / as-well))
(l / luck :arg1-of (b / bad-07) :mod (a / another) :mod (a2 / another) :arg1-of (c / cause-01 :arg0 (s / seem-01 :arg1 (s2 / suited :arg1 (e / ear :part-of (u / uninitiated)) :degree (m / more) :compared-to (u2 / university :arg1 (e2 / ear :part-of (u3 / uninitiated)) :arg2 (u4 / university))))))
(m / most :domain (t / this) :time (a / and :op1 (o / olympics) :op2 (a2 / approach-02 :arg0 (z / zen))))
(a / and :op1 (d / denounce-01 :arg1 (m / many) :arg2 (i / imprison-01 :arg2 (m2 / many))) :op2 (o / or :op1 (i2 / imprison-01) :op2 (i3 / imprison-01) :op3 (k / kill-01 :arg1 (m3 / many))))
(a / and :op1 (c / complain-01 :quant (m / many)) :op2 (c2 / concern-01 :arg1 (e / everything :source (c3 / controversy) :mod (c4 / controversy)) :time (a2 / after :op1 (c5 / control-01 :arg1 (p / power :poss (c6 / coalition :arg0-of (r / rule-03))) :degree (a3 / absolute)))))
(m / multi-sentence :snt1 (r / rise-01 :arg1 (p / pressure-01 :arg1 (b / border-01 :arg2 (l / location :name (n / name :op1 "eritrea")))) :time (t / time :arg1-of (s / same-01))) :snt2 (m2 / mark-01 :arg0 (c / controversy :location (a / along :op1 (i / inaccurately :mod (t2 / this)))) :arg1 (h / hundreds :arg1 (l2 / life :location (j / june)))))
(d / die-01 :arg1 (p / person :arg0-of (c / cause-01 :arg1 (t / turmoil))) :ord (o / ordinal-entity :value 3))
(a / and :op2 (e / endanger-01 :arg1 (e2 / ethnic) :mod (d / dangerous)))
(p / phone-number-entity :value (N / N-A))
(s / sell-01 :arg1 (a / and :op1 (p / peanuts) :op2 (g / geopolitics) :op3 (l / lunch)))
(a / and :op1 (f / favorite :polarity - :arg1 (i / it) :arg2 (t / table :mod (e / evening))) :op2 (s / say-01 :arg0 (p / person :arg0-of (' / '')) :arg1 (c / coe :arg1 (a2 / andrew))))
(r / rule-01 :arg0 (c / court :mod (d / district)) :arg1-of (r2 / rule-01 :arg0 (c2 / court :mod (d2 / district))) :arg1-of (r3 / rule-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg3 (j / judge-01))) :arg2 (p2 / person :arg0-of (p3 / pay-01 :arg1 (f / fee :mod (p4 / patent-01) :prep-against (p5 / person :arg0-of (m / manufacture-01 :arg1 (d3 / drug)) :arg0-of (m2 / manufacture-01 :arg1 (d4 / drug))))))))
(a / and :op1 (s / say-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (c / city-district :name (n / name :op1 "N-A") :mod (h2 / hillary)) :arg2 (a2 / adjuster))) :arg1 (m / move-02 :arg0 (p2 / person))) :op2 (f / follow :arg0 (p3 / person) :arg1 (t / thing :arg1-of (t2 / tax-01 :arg3 (t3 / thing :arg1-of (t4 / tax-01 :arg3 (c2 / candidate :mod (d / democracy))))))))
(n / news :quant (m / more) :topic (k / kevin))
(m / multi-sentence :snt1 (u / use-01 :arg0 (n / nature) :arg1 (w / way :instrument-of (p / prevent-01 :arg1 (e / elephants :arg1 (d / dwellings :mod (h / human)) :arg2 (g / go-02 :arg4 (g2 / go-02 :arg4 (d2 / dwellings :mod (h2 / human)))))))) :snt2 (t / throw-01 :arg0 (t2 / they) :arg1 (f / fill-01 :arg2 (p2 / powder :mod (c / country :name (n2 / name :op1 "N-A"))))))
(a / attempt-01 :arg0 (p / person :mod (c / country :name (n / name :op1 "Israel"))) :arg1 (f / find-01 :arg0 (p2 / person) :arg1 (c2 / code :location (c3 / code)) :purpose (m / make-18 :arg0 (p3 / person) :arg1 (h / hotel))) :time (s / stay-01 :arg1 (p4 / person) :time (r / recent)))
(s / say-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg2 (a / ambassador))) :arg1 (i / increase-01 :arg1 (i2 / interest-01 :arg2 (c / company :mod (c2 / country :name (n / name :op1 "N-A")) :arg0-of (t / trade-01 :location (c3 / country))))) :time (s2 / since :op1 (l / lifted :arg1 (t2 / thing :arg2-of (s3 / sanction-02 :arg1 (c4 / country) :mod (i3 / international)) :prep-against (c5 / country)))))
(c / contrast-01 :arg1 (h / hindes :arg1 (h2 / hindes) :degree (s / slight) :location (b / behind :op1 (l / lap :poss (h3 / he)))) :arg2 (a / and :op1 (p / push-01 :arg1 (h4 / hindes) :arg2 (f / forward)) :op2 (r / retained :arg0 (h5 / he) :arg1 (l2 / lead-01 :arg0 (h6 / he)))))
(a / and :op1 (b / bradley :arg1 (b2 / bradley :name (n / name :op1 (e / ed) :op2 (b3 / bradley) :op3 (c / clancy) :op4 (d / doull) :op5 (d2 / doull) :op6 (d3 / doull) :op7 (d4 / doull))) :op7 (p / person :arg1-of (q / qualify-02 :arg2 (s / squad :mod (f / four-kilometer))))))
(f / follow-01 :arg1 (m / move-02 :mod (t / this)) :arg2 (s / speculate-01 :arg1 (f2 / future :poss (b / business)) :duration (s2 / several :op1 (t2 / temporal-quantity :quant (N / N-A) :unit (y / year)))) :arg1-of (c / cause-01 :arg0 (r / respond-01 :arg1 (a / and :op1 (d / dollar :mod (c2 / country :name (n / name :op1 "N-A")) :arg1-of (s3 / strong-02)) :op2 (t3 / thing :arg2-of (p / price-01 :arg1 (p2 / produce-01)))) :time (r2 / recent))))
(s / say-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg2 (s2 / spokesman))) :arg1 (o / oppose-01 :arg0 (c / company) :arg1 (f / filter :mod (a / advertising)) :arg1-of (c2 / cause-01 :arg0 (a2 / advertise-01 :arg1 (a3 / and :op1 (a4 / application :arg0-of (o2 / organize-01 :arg1 (s3 / social)) :arg1-of (m / mobile-02)) :op2 (i / instagram)) :arg1-of (m2 / mobile-02)))))
(f / find-02 :arg0 (c / court) :arg1 (a / and :op1 (o / officers :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (p2 / police) :arg2 (o2 / officer)) :arg0-of (r / respond-01 :arg1 (c2 / call-02 :mod (e / emergency))) :arg0-of (h2 / have-org-role-91 :arg1 (p3 / police) :arg2 (o3 / officer)) :arg0-of (h3 / have-org-role-91 :arg1 (p4 / police) :arg2 (o4 / officer)) :arg0-of (h4 / have-org-role-91 :arg1 (p5 / police) :arg2 (o5 / officer)) :arg0-of (h5 / have-org-role-91 :arg1 (p6 / police) :arg2 (o6 / officer)) :arg0-of (h6 / have-org-role-91 :arg1 (p7 / police) :arg2 (o7 / officer)) :arg0-of (h7 / have-org-role-91 :arg1 (p8 / police) :arg2 (o8 / officer)) :arg0-of (h8 / have-org-role-91 :arg1 (p9 / police) :arg2 (o9 / officer)) :arg0-of (h9 / have-org-role-91 :arg1 (p10 / police) :arg2 (o10 / officer)) :arg0-of (h10 / have-org-role-91 :arg1 (p11 / police) :arg2 (o11 / officer)) :arg0-of (h11 / have-org-role-91 :arg1 (p12 / police) :arg2 (o12 / officer)) :arg0-of (h12 / have-org-role-91 :arg1 (p13 / police) :arg2 (o13 / officer)) :arg0-of (h13 / have-org-role-91 :arg1 (p14 / police) :arg2 (o14 / officer))))))
(a / and :op1 (l / lucrative :degree (v / very) :domain (p / person :arg0-of (h / have-rel-role-91 :arg1 (p2 / person) :arg2 (u / uncle)))) :op2 (i / interest-01 :arg1 (p3 / person) :arg2 (t / thing :arg2-of (p4 / price-01 :arg1 (s / service :mod (t2 / travel-01)) :arg1-of (h2 / high-02 :degree (m / more))))) :op3 (s2 / spend-01 :arg0 (p5 / person) :arg3 (a2 / and :op1 (s3 / standard :mod (t3 / travel-01)) :op2 (s4 / spend-01 :arg1 (p6 / person :mod (o / other)))) :arg1-of (h3 / high-02 :degree (m2 / more))))
(f / fulfill-01 :arg0 (p / parade-02 :time (y / year :mod (t / this)) :arg1-of (a / attend-01 :arg0 (p2 / person :arg0-of (h / have-org-role-91 :arg1 (g / government-organization :name (n / name :op1 "N-A") :arg1-of (a2 / attend-01 :arg0 (p3 / person :arg0-of (h2 / have-org-role-91 :arg1 (g2 / government-organization :name (n2 / name :op1 "N-A")))) :time (y2 / year :mod (r / recent))))))) :arg1-of (a3 / attend-01 :arg0 (p4 / person :arg0-of (b / betray-01 :arg1 (p5 / person :quant 49)))) :arg0-of (h3 / have-org-role-91 :arg1 (p6 / person :mod (g3 / gay)) :arg3 (m / most))) :arg1 (p7 / parade-02) :time (y3 / year :mod (r2 / recent)))
(a / and :op1 (h / have-03 :arg0 (g / girl :mod (c / country :name (n / name :op1 "N-A"))) :arg1 (p / person :arg0-of (h2 / have-rel-role-91 :arg1 (g2 / girl) :arg2 (f / friend)))) :op2 (c2 / content-01 :arg1 (g3 / girl) :arg2 (s / she)))
(a / and :op1 (e / escape-01 :arg0 (i / i)) :op2 (l / leave-13 :arg0 (i2 / i) :arg1 (a2 / atmosphere :mod (d / dense) :mod (o / only) :consist-of (d2 / dioxide :arg1 (g / gas :mod (c / country :name (n / name :op1 "N-A")))))) :arg1-of (c2 / cause-01 :arg0 (k / know-01 :arg0 (w / we) :arg1 (i3 / it) :time (t / today))))
(d / describe-01 :arg0 (a / and :op1 (p / person :arg0-of (h / have-org-role-91 :arg2 (r / rebull))) :op2 (p2 / person :arg0-of (h2 / have-rel-role-91 :arg1 (s / she) :arg2 (c / colleagues)))) :arg1 (a2 / analyze-01 :arg1 (s2 / speed)) :arg2 (a3 / analyze-01 :arg1 (s3 / speed)) :time (l / late :degree (m / most)) :arg1-of (p3 / publish-01 :location (j / journal :mod (a4 / astronomical))))
FAILED_TO_PARSE#Number of opening and closing brackets doesn't match.
(c / contrast-01 :arg1 (n / need-01 :polarity - :arg0 (w / we) :arg1 (a / and :op1 (t / tears) :op2 (c2 / compassion) :op3 (p / prayers :mod (e / even)))) :arg2 (n2 / need-01 :arg0 (w2 / we) :arg1 (a2 / and :op1 (c3 / create-01 :arg0 (w3 / we) :arg1 (z / zone :mod (n3 / no-fly) :location (o / over :op1 (r / river :name (n4 / name :op1 "N-A") :mod (e2 / east))))) :op2 (s / stop-01 :arg0 (w4 / we) :arg1 (a3 / action :mod (i / international)) :purpose (s2 / stop-01 :arg0 (w5 / we) :arg1 (a4 / attack-01)))) :op3 (n5 / need-01 :arg0 (w6 / we) :arg1 (a5 / action :mod (i2 / international)) :purpose (e3 / ensure-01 :arg0 (w7 / we) :arg1 (r2 / re-encircled :polarity - :arg1 (h / halab :mod (t2 / that)))))))
(c / contrast-01 :arg1 (a / and :op1 (w / watch-01 :arg0 (w2 / world) :arg1 (w3 / world)) :op2 (o / observe-01 :arg0 (w4 / world) :arg1 (t / thing :manner-of (s / syria :arg1 (c2 / complex))))) :arg2 (d / do-02 :arg0 (w5 / world) :arg1 (l / little) :purpose (p / protect-01 :arg0 (i / it) :arg1 (w6 / we))))
(m / multi-sentence :snt1 (i / it :mod (e / either) :mod (e2 / either)) :snt2 (w / want-01 :arg0 (i2 / i) :arg1 (b / be-02 :arg1 (w2 / we))))
(d / dare-01 :polarity - :arg1 (t / they) :arg2 (s / speak-01 :arg0 (t2 / they) :arg1 (e / experience) :arg1-of (o / open-04)) :arg1-of (c / cause-01 :arg0 (b / big :degree (t3 / too) :domain (s2 / shame-01))))
(w / worsening :arg1 (s / situation) :location (m / market :arg0-of (h / house-01)) :concession (t / this :mod (t2 / this)))
(a / assume-02 :arg1 (u / use-01 :arg0 (s / suspect-01) :arg1 (v / vehicle :quant (s2 / several) :arg2-of (i / include-01 :arg1 (a2 / and :op1 (n / nissan :mod (b / brown) :time (l / late :op1 (d / date-entity :decade (N / N-A)))) :op2 (c / cadillac :mod (w / white)) :op3 (c2 / cadillac :mod (w2 / white)))))))
(i / include-91 :arg1 (a / and :op1 (p / person :arg0-of (h / have-rel-role-91 :arg1 (h2 / he) :arg2 (w / wife))) :op2 (p2 / person :arg0-of (h3 / have-rel-role-91 :arg1 (h4 / he) :arg2 (w2 / wife)))) :arg2 (p3 / person :arg0-of (s / save-02 :arg1 (f / friday :arg1-of (n / near-02 :arg2 (g / gloster))))))
(s / say-01 :arg1 (a / and :op1 (w / woken :arg0 (w2 / we) :arg1 (w3 / water)) :op2 (f / flooded :arg0 (w4 / we) :arg1 (w5 / water))) :arg2 (p / person :name (n / name :op1 "N-A")))
(s / say-01 :arg0 (h / he) :arg1 (p / possible-01 :arg1 (r / return-01 :arg1 (t / they) :arg4 (h2 / home :poss (t2 / they))) :time (a / as-soon-as :op1 (s2 / start-01 :arg1 (g / go-01 :arg1 (w / water) :direction (b / back))))))
(a / and :op1 (l / limit-01 :arg1 (i / information :topic (a2 / and :op1 (e / effective-04 :arg1 (b / blood)) :op2 (s / safe-01 :arg1 (t / ticagrelor)))) :arg2 (p / period :consist-of (u / up-to :op1 (u2 / up-to :op1 (b2 / between :op1 (t2 / temporal-quantity :quant (N / N-A) :unit (y / year)) :op2 (t3 / temporal-quantity :quant (N2 / N-A) :unit (y2 / year))))))) :op2 (r / recommend-01 :polarity - :arg1 (t4 / treat-03 :arg1 (l2 / loan-01 :arg1-of (d / draft-01)) :time (b3 / beyond :op1 (p2 / period :mod (t5 / this))))))
(r / realize-01 :polarity - :arg0 (i / idiot) :arg1 (s / show-04 :arg1 (i2 / idiot) :mod (s2 / still)))
(p / person :arg0-of (t / tour-01) :time (a / after :op1 (f / fly-01 :mod (m / military) :destination (o / over :op1 (j / jet :name (n / name :op1 (p2 / portugal)))))))
(m / multi-sentence :snt1 (d / do-02 :arg0 (h / he) :arg1 (t / truth) :mod (e / else)) :snt2 (' / '' :mode (e2 / expressive)))
(w / win-01 :arg0 (c / country) :arg1 (d / drone :mod (m / most)) :time (c2 / championship :arg0 (w2 / world :quant 2015 :mod (w3 / world)) :location (b / beijing)))
(w / work-01 :arg0 (m / magazine :name (n / name :op1 "N-A") :mod (t / treats)) :arg1 (r / release-01 :arg0 (b / bellemere) :arg1 (s / snow :quant (7 / 70s) :mod (p / pirelli-inspired)) :arg3 (s2 / score-entity :op1 (72 / 70s) :op2 2017)))
(w / win-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg2 (s / spd))) :arg1 (p2 / percentage-entity :value (N / N-A)) :arg1-of (c / clear-06) :time (b / before :op1 (b2 / between :op1 (t / temporal-quantity :quant (N2 / N-A) :unit (y / year)) :op2 (t2 / temporal-quantity :quant (N3 / N-A) :unit (y2 / year)))) :arg1-of (c2 / clear-06))
(c / contrast-01 :arg2 (a / and :op1 (b / brand :name (n / name :op1 (v / volkswagen)) :mod (v2 / volkswagen)) :op2 (b2 / brand :name (n2 / name :op1 (v3 / volkswagen))) :op3 (b3 / brand :name (n3 / name :op1 (v4 / volkswagen)) :mod (e / especially))) :arg1-of (c2 / cause-01 :arg0 (a2 / announce-01 :arg0 (c3 / company :arg1-of (l / list-01) :mod (d / dax)) :arg1 (s / sell-01))))
(a / and :op2 (v / vote-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg2 (s / spokesperson))) :arg1 (l / leave-11 :arg0 (p2 / person) :arg1 (p3 / person :arg0-of (h2 / have-org-role-91 :arg2 (s2 / spokesperson))) :mod (a2 / also)) :location (t / turkey :arg1-of (s3 / surround-01 :arg2 (s4 / situation :arg1-of (s5 / surround-01 :arg2 (c / coup)))))))
(a / and :op1 (p / perspective :polarity - :topic (c / consume-01 :arg1 (f / fuel))) :op2 (c2 / co2 :arg1 (o / or :op1 (p2 / power :arg1-of (s / standard-02)) :op2 (p3 / power :mod (e / engine)))) :time (a2 / after :op1 (w / woe :poss (v / vehicle))))
(f / find-02 :arg0 (s / survey-01) :arg1 (h / have-03 :arg0 (p / person :quant 41 :arg1-of (i / include-91 :arg2 (p2 / person :arg0-of (b / buy-01 :arg1 (r / record) :time (e / ever))))) :arg1 (p3 / play-01 :arg0 (p4 / person) :mod (r2 / record) :arg1-of (u / use-01 :polarity - :arg0 (p5 / person) :time (e2 / ever)))) :mod (a / also) :arg1-of (c / cause-01 :arg0 (h2 / have-03 :arg0 (p6 / person :arg1-of (i2 / include-91 :arg2 (p7 / person :quant 7 :arg0-of (b2 / buy-01 :arg1 (r3 / record) :mod (r4 / record))))) :arg1 (p8 / play-01 :mod (r5 / record)))))
(h / have-concession-91 :arg1 (w / watch-01 :arg0 (i / i) :arg1 (g / group :consist-of (g2 / girl :mod (y / young) :mod (t / teenage) :arg0-of (w2 / work-01 :arg2 (a / around :op1 (c / cameras :mod (p / polaroid)))))) :time (b / before :op1 (c2 / consider-02 :arg0 (a2 / and :op1 (p2 / person :arg0-of (h2 / have-rel-role-91 :arg1 (p3 / person) :arg2 (f / father))) :op2 (p4 / person :arg0-of (h3 / have-rel-role-91 :arg1 (p5 / person) :arg2 (d / daughter)))) :arg1 (b2 / buy-01 :arg0 (p6 / person) :arg1 (p7 / person :arg0-of (p8 / play-01) :mod (r / record) :mod (c3 / crosley)))))) :arg2 (a3 / appear-02 :arg1 (d2 / design-01 :arg0 (i2 / i) :arg1 (h4 / hotpants :mod (j / jeans)))))
(m / multi-sentence :snt1 (a / absolute :domain (e / enforce-01 :arg1 (t / they)) :degree (a2 / absolute) :mod (a3 / absolute)) :snt2 (c / commit-01 :arg1 (t2 / they) :mod (p / precedent :polarity -) :mod (p2 / precedent :polarity -) :mod (a4 / also)))
(t / take-01 :arg0 (c / couple) :arg1 (t2 / time) :duration (t3 / temporal-quantity :quant (N / N-A) :unit (y / year) :time (b / before :op1 (t4 / take-01 :arg0 (c2 / couple) :arg1 (d / decide-01 :arg0 (c3 / couple) :arg1 (f / future :poss (c4 / couple)))))))
(c / clear-06 :arg0 (l / line :mod (o / official)) :arg1 (s / schedule-01 :arg1 (b / business :mod (' / '')) :arg3 ('2 / '' :mod (u / usual))) :time (b2 / before :op1 (d / duel :arg1 (b3 / between :op1 (b4 / between :op1 (b5 / between :op1 (t / temporal-quantity :quant (N / N-A) :unit (y / year)) :op2 (t2 / temporal-quantity :quant (N2 / N-A) :unit (y2 / year))))) :arg2 (s2 / supercup :location (l2 / location :name (n / name :op1 "konya"))))))
(t / thank-01 :arg0 (i / i) :arg1 (p / person :name (n / name :op1 "mario" :op2 "gomez") :arg0-of (p2 / present-01 :arg1 (t2 / title-01 :arg1 (p3 / person) :arg2 (t3 / title :ord (o / ordinal-entity :value 14))))) :mod (e / especially))
(c / contrast-01 :arg2 (r / recognisable :polarity - :arg1 (c2 / control-01 :arg1 (t / terrorism :arg1-of (l / legal-02)))))
(l / leave-11 :arg0 (p / person :name (n / name :op1 "N-A") :arg0-of (h / have-org-role-91 :arg1 (b / board :name (n2 / name :op1 (a / arno) :op2 (s / supervisory) :op3 (m / mahert))) :arg2 (c / chairman))) :arg1 (b2 / board :mod (s2 / supervisory)) :arg2 (a2 / affect-01 :arg1 (s3 / september :quant 12)) :time (a3 / already))
(s / say-01 :arg0 (p / person :name (n / name :op1 "N-A")) :arg1 (' / '' :polarity - :arg1 (f / fruits :poss (e / event :name (n2 / name :op1 "N-A"))) :time (y / yet) :time (a / after :op1 (t / temporal-quantity :quant (N / N-A) :unit (y2 / year)))))
(e / exemplify-01 :arg0 (i / impact-01 :arg0 (b / base :arg1-of (d / distribute-01 :mod (s / small))) :arg1 (e2 / expend-01 :arg2 (r / repair-01 :arg1 (m / monetary-quantity :quant (N / N-A) :unit (e3 / euro)) :arg1-of (n / need-01))) :mod (s2 / serious)))
(h / have-03 :polarity - :arg0 (w / we) :arg1 (w2 / work-01 :arg1-of (h2 / have-03 :arg0 (w3 / we) :time (n / now))))
(b / become-01 :arg1 (a / and :op1 (p / person :arg0-of (p2 / protest-01)) :op2 (p3 / person :arg0-of (p4 / protest-01)) :op3 (h / hate-01 :arg0 (p5 / person) :arg1 (t / tigray))) :arg2 (c / common :arg1-of (i / increase-01) :location (m / media :mod (s / social))) :time (m2 / month :mod (l / last)))
(a / and :op1 (t / teams :arg1 (t2 / team :consist-of (w / woman)) :arg2 (f / feldarmen :mod (m / male))) :op2 (s / serve-01 :arg0 (t3 / team) :arg2 (a2 / and :op1 (b / breakfast) :op2 (s2 / swim-01) :op3 (d / dinner))))
(m / make-01 :arg0 (i / it) :arg1 (f / figure :arg1-of (s / symbolize-01) :mod (s2 / shining) :location (h / horror :poss (w / war))))
(a / and :op1 (d / do-02 :arg0 (p / person :arg0-of (r / research-01)) :arg1 (r2 / remain-01 :arg1 (p2 / person :arg0-of (r3 / research-01))) :time (s / still) :location (m / monkey :poss (a2 / animal)) :time (t / today)) :op2 (f / find-01 :arg0 (p3 / person :arg0-of (r4 / research-01) :arg1-of (r5 / remain-01 :arg3 (n / name :op1 (s2 / seals)))) :arg1 (j / jaw :poss (b / bear-02 :arg1 (p4 / polar :mod (y / young))))))
(c / cause-01 :arg0 (r / require-01 :polarity - :arg0 (l / law) :arg1 (d / do-02 :arg0 (c2 / candidate) :arg1 (s / so))) :arg1 (c3 / customary :arg0 (c4 / candidate :poss (p / president)) :arg1 (c5 / candidate :poss (p2 / president))))
(l / lifted :arg0 (i / interest-01 :arg1 (c / company :location (c2 / country :name (n / name :op1 "N-A")) :location (c3 / country :name (n2 / name :op1 "N-A")))) :arg1 (i2 / increase-01 :arg1 (t / thing :arg2-of (s / sanction-02 :arg0 (c4 / company :location (c5 / country) :location (c6 / country)))) :manner (s2 / sharp)) :time (s3 / since :op1 (i3 / inform-01 :arg1 (s4 / sanction-02 :mod (i4 / international) :prep-against (c7 / country)))))
(s / say-01 :arg2 (p / person :name (n / name :op1 "N-A")))
(g / go-08 :arg1 (i / it) :arg2 (t / through :op1 (t2 / train :prep-to (h / horb))) :time (a / afternoon :mod (d / date-entity :year (N / N-A))))
(a / and :op2 (w / win-01 :arg0 (t / trio :mod (c / country :name (n / name :op1 "N-A"))) :arg1 (d / duell :prep-with (g / gold))))
(c / conclude-01 :arg0 (i / i) :arg1 (p / point :mod (p2 / point) :arg1-of (l / lead-03 :arg2 (c2 / closure :arg1 (p3 / plant :mod (p4 / power) :mod (a / anglesea)) :time (y / year :mod (l2 / last))))) :li 2014)
(a / and :op1 (j / jenner :arg0 (s / secret-model :name (n / name :op1 (s2 / secret-model) :op2 (s3 / secret-model) :op3 (s4 / stephanie) :op4 (s5 / stephanie) :op5 (s6 / stephanie)) :poss (c / company :name (n2 / name :op1 "N-A"))) :arg1 (a2 / and :op1 (j2 / jenner) :op2 (c2 / colleague))) :op2 (c3 / call-01 :arg0 (a3 / and) :arg1 (a4 / and) :arg2 (m / mistpieces)) :op3 (c4 / call-01 :arg0 (a5 / and) :arg1 (a6 / and) :arg2 (m2 / mistpieces)) :op4 (c5 / call-01 :arg0 (a7 / and) :arg1 (a8 / and) :arg2 (m3 / mistpieces)))
(a / and :op1 (c / come-01 :arg1 (c2 / charge-01) :time (a2 / after :op1 (t / trigger-01 :arg0 (c3 / candidate :poss (p / person :arg0-of (h / have-org-role-91 :arg2 (p2 / president)))) :arg1 (c4 / crowd :arg0-of (h2 / have-org-role-91 :arg1 (p3 / person :arg0-of (o / own-01 :arg1 (f / firearm))) :arg2 (a3 / and :op1 (p4 / person :arg0-of (o2 / own-01 :arg1 (f2 / firearm))) :op2 (p5 / person :arg0-of (o3 / own-01 :arg1 (f3 / firearm)))) :ord (o4 / ordinal-entity :value 2))))) :time (a4 / after :op1 (t2 / trigger-01 :arg0 (c5 / candidate :poss (p6 / person :arg0-of (h3 / have-org-role-91 :arg2 (p7 / president)))) :arg1 (c6 / crowd :location (n / north))))) :op2 (r / recommend-01 :arg1 (a5 / act-02 :arg0 (p8 / person :arg0-of (h4 / have-org-role-91 :arg3 (j / judge-01))))))
(c / contrast-01 :arg1 (o / obstacle :time (a / always)) :arg2 (a2 / answer-01 :arg2 (q / question-01 :frequency (e / every) :arg1-of (r / raise-01 :arg0 (h / he)))))
(s / say-01 :arg0 (s2 / study :arg1-of (c / carry-out-03 :arg0 (s3 / study) :time (y / year :mod (l / last)))) :arg1 (b / be-located-at-91 :arg1 (p / person :quant (a / around :op1 200000000) :location (a2 / around :op1 (p2 / person :quant (a3 / around :op1 200000000))) :arg0-of (d / display-01 :arg1 (d2 / display))) :arg2 (m / more-than :op1 (p3 / product-of :op1 4 :op2 4))))
(a / and :op1 (w / warms :arg0 (t / this) :arg1 (s / surface)) :op2 (p / produce-01 :arg0 (t2 / this) :arg1 (r / rain-01)) :arg0-of (c / cause-01 :arg1 (c2 / create-01 :arg0 (t3 / this) :arg1 (m / monkey :arg0-of (a2 / act-02 :mod (t4 / thick)) :arg0-of (a3 / act-02 :arg1 (s2 / shield :arg1 (s3 / surface) :arg2 (p2 / part :part-of (h / heat :location (s4 / sun)) :mod (l / large))))))))
(a / and :op1 (l / lay-off-02 :arg0 (s / shell) :arg1 (a2 / and :op1 (t / thousands :arg1 (p / person) :arg2 (p2 / part)) :op2 (a3 / announce-01 :arg0 (s2 / shell) :arg1 (p3 / plan-01 :arg0 (p4 / person) :arg1 (a4 / abandon-01 :arg0 (p5 / person) :arg1 (a5 / activity-06 :arg0 (p6 / person) :arg1 (a6 / abandon-01 :arg0 (p7 / person) :arg1 (a7 / activity-06 :arg0 (p8 / person) :arg1 (a8 / and :op1 (o / oil) :op2 (g / gas))) :location (c / country :quant 10)))))))) :op2 (a9 / announce-01 :arg0 (s3 / shell) :arg1 (a10 / activity-06 :arg0 (s4 / shell) :arg1 (a11 / abandon-01 :arg0 (a12 / and) :arg1 (a13 / activity-06 :arg0 (c2 / country) :arg1 (a14 / and :op1 (o2 / oil) :op2 (g2 / gas))) :location (c3 / country :quant 10))) :time (s5 / since :op1 (r / rationalises :arg0 (s6 / shell) :arg1 (a15 / activity-06 :arg0 (g3 / group) :mod (b / business))))))
(e / expect-01 :arg1 (r / rate-entity-91 :arg1 (m / monetary-quantity :quant 1.4 :unit (d / dollar)) :arg2 (p / project :mod (n / new)) :location (l / location :name (n2 / name :op1 "north" :op2 "sea"))) :arg1-of (c / cause-01 :arg0 (e2 / expect-01 :arg1 (a / around :op1 (m2 / monetary-quantity :quant 7 :unit (d2 / dollar) :arg1-of (c2 / cost-01 :arg2 (o / over :op1 (m3 / monetary-quantity :quant 7 :unit (d3 / dollar)))))) :time (b / before :op1 (n3 / now) :duration (t / temporal-quantity :quant (N / N-A) :unit (y / year))))))
(m / multi-sentence :snt1 (u / understand-01 :polarity - :arg0 (i / i) :arg1 (t / thing :arg0-of (c / cause-01 :arg1 (d / draw-02 :polarity - :arg0 (a / athletes) :arg1 (t2 / thing :arg1-of (c2 / conclude-01) :mod (r / right)))))) :snt2 (s / say-01 :arg0 (h / he) :arg1 (' / '' :arg1 (p / person :quant (m2 / many :mod (s2 / so))) :time (a2 / already))))
(e / exemplify-01 :arg0 (o / obligate-01 :arg2 (p / participate-01 :polarity - :arg0 (p2 / person :quant (a / all) :source (n / nation :mod (t / tracted :polarity -))) :arg1 (p3 / part))))
(s / say-01 :arg1 (m / make-01 :polarity - :arg0 (y / you) :arg1 (s2 / swim-01 :arg0 (y2 / you)) :mod (o / only)) :arg2 (p / person :name (n / name :op1 "N-A")))
(h / have-condition-91 :arg1 (r / recommend-01 :arg1 (r2 / realize-01 :arg0 (y / you) :arg1 (t / this))) :arg2 (r3 / recommend-01 :arg1 (r4 / realize-01 :arg0 (y2 / you) :arg1 (t2 / this)) :arg1-of (c / cause-01 :arg0 (p / possible-01 :arg1 (c2 / complain-01 :arg0 (s / someone) :arg1 (s2 / sentiment :location (t3 / there)))) :mod (j / just))))
(r / responsible-03 :arg0 (p / person :arg1-of (l / liberal-02)) :arg1 (s / service :arg1-of (c / connect-01)))
(r / responses :arg1 (t / thing :arg2-of (r2 / respond-01 :arg0 (m / moscow))) :time (t2 / time))
(c / cause-01 :arg0 (r / receive-01 :arg0 (p / person :name (n / name :op1 "erdogan") :arg0-of (h / have-org-role-91 :arg2 (p2 / president))) :arg1 (a / apology :source (p3 / person :arg0-of (h2 / have-org-role-91 :arg2 (p4 / president))) :arg1-of (h3 / hear-01 :arg0 (p5 / person) :arg1-of (w / want-01 :arg0 (p6 / person)))) :mod (o / only)) :time (a2 / after :op1 (a3 / all)))
(i / interview-01 :arg1 (m / mcewan) :time (t / tour-01 :arg0 (a / and :op1 (c / customer) :op2 (s / staff)) :arg1 (a2 / and :op1 (c2 / customer) :op2 (s2 / staff)) :mod (s3 / sighting)))
(s / see-01 :polarity - :arg0 (c / company) :arg1 (g / go-01 :arg1 (d / data :mod (r / raw)) :arg4 (i / increase-01 :arg0 (d2 / data) :arg1 (p / perform-02 :arg0 (d3 / data))) :mod (o / only)))
(a / and :op1 (l / lose-02 :arg0 (s / she) :arg1 (c / contest :mod (m / multi-campaign)) :degree (t / total) :time (s2 / since :op1 (s3 / summer :mod 2013))) :op2 (w / win-01 :arg0 (w2 / win-01) :arg1-of (c2 / cause-01 :arg0 (a2 / as-long-as :op1 (w3 / want-01 :arg0 (s4 / series) :arg1 (b / biles))))))
(s / say-01 :arg0 (s2 / she) :arg1 (t / true :polarity - :domain (a / amr-unknown) :mod (o / of-course) :mod (o2 / of-course)))
(l / likely-01 :arg1 (r / reach-01 :arg0 (a / and :op1 (c / comite :arg1-of (n / near-02 :arg2 (n2 / near-02 :arg2 (b / baton)))) :op2 (a2 / amite :mod (r2 / river) :arg1-of (n3 / near-02 :arg2 (d / denham)))) :arg1 (l2 / level :mod (r3 / record)) :time (o / over :op1 (w / weekend))))
(a / and :op1 (c / close-01 :arg1 (r / road :quant (n / nearly :op1 2)) :arg1-of (c2 / cause-01 :arg0 (f / flooding))) :op2 (a2 / and :op1 (p / provide-01 :arg1 (r2 / road :quant (n2 / nearly :op1 2)) :arg2 (p2 / person :arg0-of (r3 / reside-01))) :op2 (h / hope-01 :arg0 (p3 / person) :arg1 (k / keep-01 :arg0 (p4 / person) :arg1 (p5 / part))) :op3 (h2 / hope-01 :arg0 (p6 / person) :arg1 (k2 / keep-04 :arg0 (p7 / person) :arg1 (w / water) :arg2 (a3 / and :op1 (h3 / home :poss (p8 / person)) :op2 (s / shop :poss (p9 / person)))))) :location (c3 / city :name (n3 / name :op1 "N-A")))
(l / leave-13 :arg0 (c / culture :mod (p / politics)) :arg1 (d / defraud-01 :arg1 (e / elect-01)) :location (a / area :mod (r / religious-group :name (n / name :op1 "N-A"))))
(a / and :op1 (r / resettled :arg1 (f / family)) :op2 (b / believe-01 :arg1 (l / live-01 :arg0 (f2 / family) :location (t / thing :arg2-of (s / shelter-01 :arg1-of (p / private-02))) :time (n / now))))
(m / mattress :arg1-of (d / dirty-02) :location (s / song :quant 1 :arg1-of (i / include-91 :arg2 (s2 / song :poss (h / house)))) :time (a / after :op1 (d2 / deleted :location (f / floor))))
(c / contrast-01 :arg2 (f / fact :domain (i / implement-01 :arg1 (r / require-01 :arg1 (i2 / implement-01 :arg1 (a / and :op1 (l / law :mod (p / passenger)) :op2 (l2 / law :mod (g / gun))) :quant (s / several))))))
(m / multi-sentence :snt1 (' / '' :ord (o / ordinal-entity :value 1)) :snt2 (f / free-03 :arg1 100000 :quant 100000))
(p / possible-01 :arg1 (b / become-01 :arg1 (t / this) :arg2 (p2 / problem :topic (b2 / bank :mod (s / small))) :condition (o / oppose-01 :arg0 (t2 / this) :arg1 (m / money :arg1-of (f / free-03)))))
(i / issue-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg2 (f / fiji))) :arg1 (a / and :op1 (h2 / handle-01 :arg1 (a2 / and :op1 (f2 / force :arg1-of (r / run-01 :arg0 (l / line))) :op2 (f3 / force :mod (r2 / raw)) :op3 (f4 / force :mod (r3 / raw)) :op4 (f5 / force :mod (r4 / raw)) :op5 (f6 / force :mod (r5 / raw)))) :arg2 (w / win-01 :arg0 (a3 / and) :arg2 (g / gold) :ord (o / ordinal-entity :value 1))))
(c / contrast-01 :arg1 (s / stop-01 :arg0 (w / wise :mod (h / hevorraging)) :arg1 (r / reach-01 :arg0 (n / nakarawa :mod (l / leone)) :arg1 (g / gated :ord (o / ordinal-entity :value 3)))) :arg2 (h2 / hold-02 :arg1 (f / fiji :arg1 (f2 / fiji) :mod (o2 / only))))
(p / praise-01 :arg0 (a / and :op1 (p2 / person :arg0-of (h / have-org-role-91 :arg2 (p3 / part :mod (r / rupert)))) :op2 (p4 / person :arg0-of (h2 / have-org-role-91 :arg2 (p5 / part))) :op3 (p6 / person :arg0-of (h3 / have-org-role-91 :arg2 (h4 / head-of-state))) :op4 (p7 / person :arg0-of (h5 / have-org-role-91 :arg2 (h6 / head-of-state))) :op5 (p8 / person :arg0-of (w / work-01 :arg2 (h7 / he) :duration (t / temporal-quantity :quant (N / N-A) :unit (y / year))))) :arg1 (w2 / wart :mod (w3 / water)))
(p / plan-01 :arg0 (c / commission :mod (c2 / continent :name (n / name :op1 "N-A"))) :arg1 (a / ask-01 :arg0 (c3 / commission) :arg1 (p2 / person :arg0-of (p3 / produce-01 :arg1 (s / steel)) :arg0-of (u / use-01 :arg1 (g / gas) :arg2 (g2 / generate :arg0 (p4 / person) :arg1 (c4 / consume-01 :arg0 (p5 / person) :arg1 (e / electricity)) :purpose (g3 / generate-01 :arg0 (p6 / person) :arg1 (e2 / electricity) :purpose (c5 / consume-01 :arg0 (p7 / person) :arg1 (e3 / electricity)))))) :arg2 (c6 / commission :mod (c7 / continent :name (n2 / name :op1 "N-A"))) :time (i / initial)))
(p / possible-01 :arg1 (j / join-up-02 :arg0 (y / you) :arg1-of (e / easy-05)) :source (c / circle :mod (c2 / chorus :mod (s / senior))))
(a / and :op1 (e / excited :arg0 (t / thing :arg1-of (d / differ-02 :arg2 (m / middling :mod (l / less)))) :arg1 (a2 / animal :mod (y / young)) :arg2 (a3 / animal :mod (y2 / young)) :manner (h / heavy)) :op2 (s / say-01 :arg0 (i / i) :arg1 (o / or :op1 (u / unperceptible :arg1 (a4 / animal) :mod (e2 / either)) :op2 (i2 / important :polarity - :domain (a5 / animal)))) :op3 (s2 / say-01 :arg0 (i3 / i) :arg1 (k / konerding :arg0 (b / biologists :name (n / name :op1 (b2 / biologists) :op2 (w / wiebke)) :mod (b3 / biologists)) :arg1 (m2 / mhh))))
(i / issue-01 :arg1 (w / warrant :mod (a / arrest-01)) :prep-against (s / sükr :arg1 (s2 / star :mod (f / football) :time (f2 / former))) :location (t / turkey))
(g / go-01 :arg1 (y / year :mod (t / this)) :arg4 (a / account :poss (f / favorite :arg1 (g2 / gold) :mod (g3 / great))) :time (y2 / year :mod (t2 / this)))
(a / and :op1 (s / say-01 :arg0 (p / police) :arg1 (a2 / and :op1 (k / kill-01 :arg1 (p2 / person :quant (a3 / about :op1 20))) :op2 (i / injure-01 :arg1 (p3 / person :quant (a4 / about :op1 20))))) :op2 (i2 / injure-01 :arg1 (p4 / person :quant (a5 / about :op1 20) :arg2-of (i3 / include-01 :arg1 (a6 / and :op1 (p5 / person :quant 3) :op2 (p6 / person :quant 3) :op3 (p7 / person :quant 3) :op4 (p8 / person :quant 3))))))
(m / multi-sentence :snt1 (i / include-91 :li 361.2 :arg1 (s / sell-01) :arg2 (p / percentage-entity :value (N / N-A))) :snt2 (s2 / sell-01 :arg1 (s3 / sell-01) :arg2 (b / below :op1 (l / level :arg1-of (i2 / include-91 :arg2 (p2 / percentage-entity :value (N2 / N-A)))))))
(p / possible-01 :arg1 (c / compensate-01 :arg0 (i / it) :arg2 (o / or :op1 (o2 / over) :op2 (d / discover-01 :mod (c2 / cyber))) :time (d2 / date-interval :op1 (d3 / date-entity :decade (N / N-A)) :op2 (d4 / date-entity :year (N2 / N-A)))) :mod (a / also))
(a / add-01 :arg0 (i / i) :arg1 (d / disappear-01 :arg1 (c / community :mod (m / market)) :location (p / plant :location (s / sewage) :arg1-of (m2 / major-02)) :time (b / before :op1 (n / now) :duration (t / temporal-quantity :quant (N / N-A) :unit (y / year)))) :time (t2 / time :arg1-of (s2 / same-01)))
(v / value-01 :arg1 (t / this) :arg1-of (h / high-02 :degree (m / most)) :arg1-of (c / cause-01 :arg0 (a / and :op1 (- / -rrb- :quant 2012 :time (s / since :op1 (d / date-entity :decade (N / N-A)))) :op2 (c2 / city-district :name (n / name :op1 "N-A") :ord (o / ordinal-entity :value 1)) :ord (o2 / ordinal-entity :value 1))) :time (s2 / since :op1 (r / record-01 :arg1 (y / year :mod (l / last)))))
(f / flaws :arg1 (p / person :arg0-of (l / lead-02)) :arg2 (t / top :part-of (o / organization)))
(c / contrast-01 :arg1 (r / recommend-01 :arg1 (a / admit-01 :arg0 (i / i) :arg1 (e / expert-01 :polarity - :arg1 (i2 / i) :arg2 (e2 / expert-01 :arg1 (i3 / i) :arg2 (e3 / expert-01 :arg1 (i4 / i)))))) :arg2 (r2 / recommend-01 :arg1 (a2 / admit-01 :arg0 (i5 / i) :arg1 (p / person :arg1-of (e4 / expert-01) :domain (i6 / i)))))
(s / show-01 :arg0 (p / poll-01 :arg0 (p2 / publication :name (n / name :op1 "NBC")) :arg1 (j / journal :name (n2 / name :op1 (/ / /) :op2 (s2 / street) :op3 (/2 / /)) :mod (s3 / street) :part-of (o / organization :name (n3 / name :op1 "-"))) :mod (n4 / new)) :arg1 (l / lead-03 :arg0 (p3 / poll-01) :arg2 (l2 / lead-01 :arg0 (s4 / state :location (a / and :op1 (n5 / north) :op2 (v / virginia) :op3 (c / colorado) :op4 (r / race) :op5 (r2 / race))) :mod (b / big))))
(m / multi-sentence :snt1 (t / tense :domain (d / diet :mod (b / budget) :mod (n / new) :example (a / and :op1 (b2 / bread) :op2 (c / casserole)) :example (a2 / and :op1 (b3 / bread) :op2 (c2 / casserole)))) :snt2 (a3 / and :op1 (b4 / become-01 :arg1 (c3 / casserole :example (a4 / and :op1 (b5 / bread) :op2 (c4 / casserole))) :arg2 (f / food :mod (b6 / basic))) :op2 (n2 / note-01 :arg0 (i / i) :arg1 (p / possible-01 :arg1 (h / hide-01 :arg0 (' / '') :arg1 (i2 / ingredient :mod (u / unappetising)) :prep-under (s / sauce :mod (c5 / creamy)))))))
(c / contrast-01 :arg2 (r / recommend-01 :arg1 (i / invest-01 :arg0 (a / animal :mod (l / large :degree (v / very))) :arg1 (r2 / resource :poss (a2 / animal)) :arg2 (l2 / life :arg1-of (l3 / long-03)))))
(a / and :op1 (p / prove-01 :arg0 (m / method) :arg1 (p2 / promote-02 :arg0 (m2 / method) :arg1 (a2 / and :op1 (e / effective-04) :op2 (f / foundation)) :time (b / before :op1 (n / now) :quant (t / temporal-quantity :quant (N / N-A) :unit (y / year))))) :op2 (u / up :arg0 (m3 / method) :arg1 (p3 / promote-02 :arg0 (s / syndicate :location (n2 / north :part-of (c / country))) :arg1 (m4 / method :quant 4 :instrument-of (s2 / step-01 :arg2 (p4 / protect-01 :arg1 (h / home :poss (a3 / animal))))) :manner (s3 / step-01 :polarity - :arg1 (a4 / animal)))))
(a / and :op1 (a2 / and :op1 (r / relieved :arg1-of (w / warm-07 :degree (m / more))) :op2 (h / happy)) :time (l / late :op1 (d / date-entity :year (N / N-A)) :degree (m2 / more)) :op2 (p / pass-07 :arg1 (m3 / minis) :arg2 (g / gated :arg1 (m4 / mercy))))
(j / jenner :arg1 (e / edition :mod (s / september) :mod (v / vogue)))
(s / say-01 :arg0 (s2 / study) :arg1 (u / use-01 :arg0 (s3 / study :arg1-of (p / publish-01 :arg0 (a / and :op1 (p2 / person :quant (a2 / about :op1 200000000)) :op2 (p3 / person :quant (a3 / about :op1 4))))) :arg1 (d / display :quant (n / nearly :op1 4)) :time (y / year :mod (l / last)) :location (a4 / around :op1 (w / world))))
(r / receive-01 :arg0 (a / and :op1 (p / person :arg0-of (m / marry-01 :arg1 (p2 / person) :arg2 (a2 / actress))) :op2 (p3 / person :arg0-of (m2 / madonna :arg1 (s / star :mod (p4 / pop) :mod (p5 / pop))))) :arg1 (s2 / sympathize-01 :arg0 (p6 / person) :arg1 (f / fan :source (s3 / sox :name (n / name :op1 (y / yankee-arch-rival) :op2 (r2 / red) :op3 (r3 / red)) :mod (r4 / red)))) :arg2 (p7 / person :arg0-of (v / view-01)) :time (a3 / after :op1 (a4 / all)))
(r / responsible-03 :arg0 (p / person :name (n / name :op1 "N-A") :arg0-of (r2 / responsible-01 :arg1 (c / case :mod (p2 / positive)))) :arg1 (o / ordinal-entity :value 1) :time (h / history :ord (o2 / ordinal-entity :value 1 :range (h2 / history))))
(k / know-02 :arg1 (c / case-03 :arg1 (' / '' :name (n / name :op1 (z / zielinski) :op2 (z2 / zielinski)) :name (n2 / name :op1 (z3 / zielinski) :op2 (z4 / zielinski)) :name (n3 / name :op1 (z5 / zielinski) :op2 ('2 / '') :op3 ('3 / '')))) :mod (a / also) :arg1-of (c2 / cause-01 :arg0 (t / test-01 :arg0 (o / olympic :name (n4 / name :op1 (l / london-based) :op2 (o2 / olympic)) :mod (l2 / london-based)) :arg1 (p / positive :arg1-of (m / mean-01 :arg2 (b / between :op1 (t2 / temporal-quantity :quant (N / N-A) :unit (d / day)) :op2 (t3 / temporal-quantity :quant (N2 / N-A) :unit (d2 / day))))))) :mod (a2 / also))
(e / explain-01 :arg0 (t / they) :arg1 (v / victim :poss (t2 / they)) :manner (e2 / email-01 :arg0 (t3 / they) :arg2 (t4 / thing :manner-of (p / possible-01 :arg1 (p2 / pay-01 :arg0 (t5 / they) :arg1 (a / and :op1 (w / website :mod (s / support-01) :arg1-of (a2 / access-01 :arg3-of (f / free-04))) :op2 (w2 / website :mod (s2 / support-01 :arg3-of (f2 / free-04))) :op3 (f3 / file :arg0-of (e3 / exemplify-01))))))))
(a / and :op1 (c / come-01 :arg1 (o / option :mod (t / treat-03)) :arg3 (o2 / or :op1 (t2 / thing :mod (o3 / other)) :op2 (c2 / change-01 :mod (b / behavioral)) :op3 (t3 / trip-03 :name (n / name :op1 (b2 / behavioral))) :op4 (a2 / apprentice-01 :arg0 (p / person :arg0-of (h / have-rel-role-91 :arg2 (d / dd1)))) :op5 (p2 / person :arg0-of (h2 / have-rel-role-91 :arg2 (d2 / dd1))) :op6 (p3 / person :arg0-of (h3 / have-rel-role-91 :arg2 (d3 / dd1))) :op6 (p4 / person :arg0-of (h4 / have-rel-role-91 :arg2 (d4 / dd1))) :op7 (p5 / person :arg0-of (h5 / have-rel-role-91 :arg2 (d5 / dd1))) :op6 (p6 / person :arg0-of (h6 / have-rel-role-91 :arg2 (d6 / dd1))) :op7 (p7 / person :arg0-of (h7 / have-rel-role-91 :arg2 (d7 / dd1))) :op7 (p8 / person :arg0-of (h8 / have-rel-role-91 :arg2 (d8 / dd1))) :op7 (p9 / person :arg0-of (h9 / have-rel-role-91 :arg2 (d9 / dd1))))))
(a / and :op1 (a2 / admit-01 :arg0 (w / we :arg0-of (w2 / win-01 :arg2 (a3 / athletes :quant 15 :mod (o / outstanding) :mod (o2 / other)))) :arg1 (b / be-located-at-91 :arg1 (a4 / and :op1 (p / person :arg0-of (w3 / win-01)) :op2 (p2 / person :arg0-of (w4 / win-01))) :arg2 (n / northwest :part-of (s / sports :mod (g / german))))))
(r / ridden :arg1 (f / frankie) :time (a / already) :time (a2 / after :op1 (n / now) :quant (n2 / nearly :op1 (t / temporal-quantity :quant (N / N-A) :unit (y / year)))) :arg1-of (c / cause-01 :arg0 (g / great)))
(e / expect-01 :arg1 (c / complete-01 :arg1 (p / project :mod (m / monetary-quantity :quant 1.35 :unit (d / dollar :mod (c2 / country :name (n / name :op1 "N-A"))))) :manner (p2 / possible-01 :arg1 (c3 / complete-01))))
(p / possible-01 :arg1 (s / solve-01 :arg1 (p2 / problem)))
(a / announce-01 :arg0 (p / police) :arg1 (r / result-01 :polarity - :arg1 (r2 / rob-01 :arg0 (p2 / person :arg0-of (m / murder-01))) :arg2 (o / or :op1 (p3 / person :arg0-of (t / traffic-01)) :op2 (p4 / person :arg0-of (p5 / possess-01 :arg1 (p6 / possess-01 :arg1 (v / victim :quant 1 :mod (a2 / adult))))))))
(s / say-01 :arg0 (p / person :name (n / name :op1 "N-A")) :arg1 (r / request-01 :arg0 (m / municipal :mod (t / tangihapoa)) :arg1 (t2 / tens :arg1 (s2 / sandbags))))
(a / and :op1 (b / be-located-at-91 :polarity - :arg1 (v / victim :quant 2 :mod (o / other)) :arg2 (c / car)) :op2 (i / investigate-01 :arg0 (p / police) :arg1 (p2 / possible-01 :mode (i2 / interrogative) :arg1 (b2 / be-located-at-91 :arg1 (t / they) :arg2 (u / under :op1 (m / man :arg1-of (i3 / injure-01) :arg1-of (i4 / include-91 :arg2 (m2 / man :arg0-of (p3 / perpetrate-01)))))) :mod (j / just))))
(i / include-91 :arg1 (a / and :op1 (p / person :arg1-of (m / manufacture-01 :arg0 (c / company :mod (c2 / country :name (n / name :op1 "N-A")))) :arg1-of (m2 / manufacture-01 :arg0 (c3 / company :mod (c4 / country :name (n2 / name :op1 "N-A"))))) :op2 (p2 / person :arg1-of (d / displace-01) :arg1-of (m3 / manufacture-01 :arg0 (c5 / company :mod (c6 / country))))) :arg2 (t / thing :arg2-of (n3 / name-01 :arg1 (t2 / thing :arg2-of (n4 / name-01 :arg1 (c7 / company))))) :arg1-of (c8 / cause-01 :arg0 (p3 / possible-01 :polarity - :arg1 (n5 / neutralize-01 :arg0 (r / risk-01 :mod (t3 / this)) :arg1 (l / likely-01 :polarity - :arg1 (n6 / neutralize-01 :arg0 (p4 / person :mod (a2 / atheist :mod (b / blood))) :arg1 (p5 / person) :degree (m4 / more)))))))
(m / multi-sentence :snt1 (c / concern-01 :arg1 (k / know-01 :arg0 (i / institution :mod (s / state)) :arg1 (b / behave-01 :arg0 (i2 / institution) :mod (s2 / such)))) :snt2 (i3 / ignore-01 :arg0 (a / and :op1 (i4 / institution :mod (s3 / state)) :op2 (p / person :mod (r / religion) :mod (r2 / religion))) :arg1 (b2 / behave-01 :mod (s4 / such))))
(a / and :op1 (g / get-02 :arg0 (p / person :mod (a2 / archery)) :arg1 (m / madness :location (m2 / media :mod (s / social)))) :op2 (a3 / admit-01 :arg0 (p2 / person) :arg1 (h / hear-01 :arg0 (p3 / person) :time (s2 / since :op1 (c / childhood :poss (p4 / person) :arg1-of (l / look-02 :arg0 (p5 / person) :arg1-of (l2 / look-02 :arg0 (p6 / person))))))) :mod (i / indeed))
(s / say-01 :arg0 (p / person :name (n / name :op1 "N-A")) :arg1 (a / and :op1 (s2 / see-01 :arg0 (p2 / person) :arg1 (f / fight-01 :arg0 (p3 / person) :arg2 (s3 / street))) :op2 (o / obligate-01 :arg1 (p4 / person) :arg2 (c / call-01 :arg0 (p5 / person) :arg1 (p6 / police) :arg2 (s4 / street) :arg1-of (r / regular-02)))))
FAILED_TO_PARSE#Number of opening and closing brackets doesn't match.
(p / panic :arg1 (p2 / person :arg0-of (t / tour-01) :location (b / beach)) :time (a / and :op1 (c / come-03 :arg1 (a2 / aircraft) :arg2 (d / darkness)) :op2 (l / low-04 :arg1 (a3 / aircraft) :degree (i / incredible) :degree (i2 / incredible))))
(a / and :op1 (w / withdraw-01 :arg1 (t / they) :arg2 (g / grandstand)) :op2 (l / leave-13 :arg0 (l2 / leave-11) :arg1 (p / person :arg0-of (p2 / protest-01 :arg1 (t2 / they))) :manner (a2 / alone :degree (f / fair))))
(m / multi-sentence :snt1 (t / throw-01 :arg0 (i / i) :arg1 (p / person :quant 16 :arg0-of (r / rival-01) :arg0-of (r2 / rival-01 :arg1 (c / camp :mod (r3 / republican) :poss (p2 / person)))) :arg2 (s / succeed-01 :arg0 (p3 / person) :arg1 (s2 / succeed-01 :arg0 (g / government-organization :name (n / name :op1 "White" :op2 "House")))) :time (n2 / now)) :snt2 (d / doubt-01))
(s / say-01 :arg2 (p / person :name (n / name :op1 "N-A")))
(a / and :op1 (g / go-02 :arg0 (h / he :mod (c / country :name (n / name :op1 "N-A")) :mod (c2 / country :name (n2 / name :op1 "N-A"))) :arg4 (s / station :arg0-of (c3 / control-01 :arg1 (c4 / country-region)))) :op2 (a2 / and :op1 (s2 / spent :arg0 (h2 / he) :arg1 (r / rotich :mod (f / ferguson))) :op2 (a3 / and :op1 (m / made :arg1 (h3 / he)) :op2 (s3 / sign-01 :arg0 (h4 / he) :arg1 (r2 / rotich :mod (f2 / ferguson))) :op3 (e / explain-01 :arg0 (h5 / he) :arg1 (e2 / explain-01 :arg0 (p / person :arg0-of (h6 / have-org-role-91 :arg1 (c5 / country) :arg2 (e3 / executive :mod (c6 / chief)))) :arg1 (m2 / mission :name (n3 / name :op1 (d / de)) :mod (e4 / executive :mod (c7 / chief))))))))
(a / and :op1 (a2 / age-01 :arg1 (p / person :mod (o / old)) :arg2 (t / temporal-quantity :quant (N / N-A) :unit (y / year))) :op2 (d / die-01 :arg1 (p2 / person)) :time (a3 / after :op1 (p3 / plan-01 :arg0 (p4 / person) :arg1 (a4 / and :op1 (l / leave-15 :arg0 (p5 / person) :arg1 (c / country :mod (m / military :name (n / name :op1 "N-A")))) :op2 (r / return-01 :arg1 (p6 / person) :arg4 (e / england))) :quant (s / short))))
(t / think-01 :arg0 (h / he) :arg1 (d / do-02 :arg0 (i / it) :arg1 (s / snow) :mod (a / as-well)) :mod (a2 / apparent))
(o / open-01 :arg1 (s / street) :mod (s2 / small :mod (o2 / only)) :arg0-of (c / cause-01 :arg1 (o3 / open-01 :arg1 (s3 / street) :mod (a / again) :time (n / now))) :location 27 :mod (b / b))
(l / lack-01 :arg1 (c / customer :source (a / and :op1 (h / hechingen) :op2 (b / balingen) :op3 (r / rottweil))))
(p / present-01 :arg0 (p2 / person :arg0-of (h / have-org-role-91 :arg2 (m / minister :mod (i / interior)))) :arg1 (p3 / package :mod (s / security :mod (t / thick))) :time (a / after :op1 (a2 / attack-01 :time (r / recent))))
(a / and :op2 (c / campaigning :mode (e / expressive)))
(s / say-01 :arg0 (p / person :name (n / name :op1 "josef" :op2 "paul") :arg0-of (h / have-org-role-91 :arg1 (b / bank) :arg2 (e / executive :mod (b2 / bank)))) :arg1 (' / '' :arg1 (c / customer :quant 139 :mod (o / only) :arg0-of (c2 / cost-01 :arg1 (m / monetary-quantity :quant 40 :unit (e2 / euro)) :arg2 (a / account :mod (d / day))))))
(h / headlines :arg1-of (m / make-01 :arg0 (a / and :op1 (p / person :mod (t / thuringer)) :op2 (p2 / person :mod (t2 / thuringer)) :op3 (l / land :mod (a2 / altenburger)))) :prep-with (b / branch :mod (s / skatbank) :poss (a3 / and)) :manner (r / rate :mod (i / interest :mod (c / criminal-03))))
(a / and :op1 (b / be-located-at-91 :arg1 (p / person :arg0-of (t / tour-01)) :arg2 (a2 / around :op1 70)) :op2 (p2 / person :arg0-of (t2 / tour-01)) :op3 (p3 / person :arg0-of (t3 / tour-01)) :op4 (p4 / person :arg0-of (t4 / tour-01)) :op5 (p5 / person :arg0-of (t5 / tour-01)))
(h / horrified :arg1 (i / industry :mod (a / advertising)) :time (a2 / already))
(a / and :op1 (t / twitch :domain (p / platform :arg1-of (k / know-01))) :op2 (y / youtube :arg1 (p2 / platform)))
FAILED_TO_PARSE#Number of opening and closing brackets doesn't match.
(p / possible-01 :arg1 (u / uphold-01 :arg1 (s / supply-01 :arg1 (n / newbrun)) :mod (o / only) :arg1-of (c / cause-01 :arg0 (f / fill-01 :arg0 (y / you) :arg1 (c2 / container :mod (h / high-profile) :mod (t / town :mod (p2 / petton))) :arg2 (h2 / hoses)))))
(m / multi-sentence :snt1 (a / and :op1 (g / go-01 :arg1 (p / person :name (n / name :op1 "anna" :op2 "netrebko")) :accompanier (p2 / person :arg0-of (h / have-rel-role-91 :arg1 (p3 / person) :arg2 (s / son))) :arg1-of (o / open-04)) :op2 (t / turns :arg0 (p4 / person) :arg1 (p5 / person :arg0-of (h2 / have-rel-role-91 :arg1 (p6 / person) :arg2 (p7 / parent))) :arg2 (p8 / person :arg0-of (h3 / have-rel-role-91 :arg1 (p9 / person) :arg2 (p10 / parent))) :arg1-of (o2 / open-04))) :snt2 (h4 / have-03 :arg0 (y / you) :arg1 (c / courage) :purpose (t2 / talk-01 :arg0 (y2 / you) :arg1 (c2 / courage))))
(p / possible-01 :arg1 (o / or :op1 (b / bear-02 :arg1 (p2 / person :mod (t / this))) :op2 (d / develop-02 :arg1 (p3 / person) :arg3 (m / maturity :mod (g / gender)))))
(b / blame-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (s / state) :arg2 (p2 / president))) :arg1 (p3 / person :arg0-of (h2 / have-org-role-91 :arg1 (s2 / state) :arg2 (p4 / president)) :arg1-of (b2 / blame-01 :arg0 (p5 / person :arg0-of (h3 / have-org-role-91 :arg1 (s3 / state) :arg2 (p6 / president))) :arg2 (a / attempt-01 :arg0 (c / coup)))) :arg2 (p7 / person :arg0-of (s4 / support-01)))
FAILED_TO_PARSE#Number of opening and closing brackets doesn't match.
(a / acknowledge-01 :arg0 (c / court :mod (i / international)) :arg1 (b / bronze :arg1 (b2 / bronze) :location (b3 / bronze :arg1 (g / game :quant 2008 :mod (o / olympic)))) :mod (a2 / also))
(e / expect-01 :arg1 (a / address-02 :arg0 (p / propaganda) :arg1 (p2 / person) :manner (e2 / emotionally)))
(s / say-01 :arg0 (s2 / she) :arg1 (b / believe-01 :arg0 (s3 / she) :arg1 (r / reflect-01 :arg1 (c / controversy :mod (r2 / race)) :arg2 (a / and :op1 (l / lack-01 :arg1 (d / diversity)) :op2 (p / practice-01 :arg1 (d2 / diversity))) :location (s4 / snapchat))) :medium (i / interview-01 :medium (p2 / phone)))
(s / say-01 :arg0 (t / thing :arg2-of (r / right-05 :arg1 (h / human))) :arg1 (t2 / thing :arg2-of (r2 / respond-01 :arg0 (g / government-organization :arg0-of (g2 / govern-01)))))
(c / contrast-01 :arg2 (c2 / change-01 :arg1 (t / that) :arg1-of (s / straight-04) :mod (a / also)))
(g / give-01 :arg0 (a / and :op1 (p / person :name (n / name :op1 "rudolph" :op2 "p." :op3 "giuliani") :arg0-of (h / have-org-role-91 :arg1 (y / york :mod (n2 / new)) :arg2 (m / mayor) :time (f / former))) :op2 (p2 / person :arg0-of (h2 / have-org-role-91 :arg1 (u / university :name (n3 / name :op1 "N-A") :mod (n4 / new)) :arg2 (m2 / mayor) :time (f2 / former))) :op3 (p3 / person :arg0-of (h3 / have-org-role-91 :arg2 (m3 / mayor) :time (f3 / former))) :op4 (p4 / person :arg0-of (h4 / have-org-role-91 :arg2 (m4 / mayor) :time (f4 / former))) :op5 (p5 / person :arg0-of (h5 / have-org-role-91 :arg2 (m5 / mayor) :time (f5 / former)) :quant (m6 / multiple :op1 1))) :arg1 (t / trouble :mod (g2 / great)) :arg2 (d / defend-01 :arg0 (a2 / and) :arg1 (c / candidate) :medium (i / interview-01 :arg1 (c2 / candidate) :time (t2 / today))))
(m / meal :topic (c / crisis :mod (e / economy) :location (c2 / concept :mod (r / rich))))
(c / cause-01 :arg0 (p / prefer-01 :arg0 (t / they) :arg1 (t2 / temperature :mod (w / water) :location (a / around :op1 (t3 / temperature-quantity :quant 6)))) :arg1 (b / be-located-at-91 :arg1 (t4 / they) :arg2 (s / surface) :mod (o / only) :time (w2 / winter)))
(m / measure-02 :arg0 (p / person :arg0-of (h / have-rel-role-91 :arg1 (s / she) :arg2 (t / timeless))) :arg1 (t2 / they) :time (e / equip-01 :arg0 (t3 / they) :arg1 (a / animal :quant 6) :arg2 (p2 / person :arg0-of (b / broadcast-01)) :time (b2 / before :op1 (w / war :name (n / name :op1 "N-A")))))
(p / possible-01 :arg1 (o / or :op1 (s / sleeping :arg0 (t / they) :arg1 (a / animal) :location (b / bottom :poss (s2 / seas :consist-of (i / ice)))) :op2 (s3 / search-01 :arg0 (a2 / animal) :arg1 (p2 / person :arg0-of (t2 / torture-01) :arg0-of (t3 / torture-01 :source (p3 / park :name (n / name :op1 "N-A") :arg1-of (h / high-02 :degree (m / more))))))) :arg1-of (p4 / possible-01))
(f / focus-01 :arg0 (c / council) :arg2 (f2 / focus-01 :arg0 (c2 / council) :arg2 (m / meet-03 :time (r / recent))) :manner (i / issue-02 :arg0 (b / building)))
(a / and :op1 (i / increase-01 :arg1 (i2 / import-01 :arg0 (c / country :name (n / name :op1 "N-A")) :location (c2 / country :name (n2 / name :op1 "N-A"))) :arg2 (r / rate-entity-91 :arg1 91.5 :arg2 (r2 / rate-entity-91 :arg1 91.5 :arg2 (t / temporal-quantity :quant (N / N-A) :unit (y / year))))) :op2 (d / draw-02 :arg0 (i3 / import-01) :arg2 (r3 / rate-entity-91 :arg1 (m / monetary-quantity :quant 697 :unit (d2 / dollar)) :arg2 (v / volume-quantity :quant (N2 / N-A) :unit (g / gallon)))) :mod (p / particular))
(a / and :op1 (e / examine-01 :arg1 (d / destinations :mod (p / pilgrimages :mod (v / various)) :mod (v2 / various))) :op2 (d2 / decide-01 :arg0 (y / you) :arg1 (a2 / and :op1 (e2 / examine-01 :arg0 (p2 / person :arg0-of (h / have-org-role-91 :arg2 (h2 / head-of-state))) :arg1 (c / city :arg0-of (h3 / have-org-role-91 :arg2 (f / freiburg))) :time (e3 / eventual) :time (y2 / year :mod (t / this))) :op2 (o / offer-01 :arg0 (p3 / person :arg0-of (h4 / have-org-role-91 :arg2 (m / mercy))) :arg1 (t2 / targets :arg1-of (s / special-02) :arg1-of (t3 / target-01 :arg2 (g / gated :location (m2 / munster :mod (f2 / fribourg)))))) :time (y3 / year :mod (t4 / this)))))
(c / come-01 :arg1 (w / we) :manner (b / bad-05 :degree (s / so)) :arg0-of (c2 / cause-01 :arg1 (w2 / win-01 :arg0 (w3 / we) :mod (a / again) :purpose (w4 / win-01 :arg0 (w5 / we) :mod (a2 / again) :location (o / olympics)))))
(s / sell-01 :arg0 (a / and :op1 (s2 / she) :op2 (s3 / sisters :poss (t / they) :quant (a2 / all))) :arg1 (p / picture :poss (p2 / person :arg0-of (h / have-rel-role-91 :arg1 (t2 / they) :arg2 (h2 / husband))) :mod (r / respective) :mod (r2 / respective)))
(t / time :time-of (a / and :op1 (l / look-01 :arg1 (n / need-01 :arg1 (c / community))) :op2 (i / invest-01 :arg0 (c2 / community :mod (c3 / customer) :poss (t2 / they)) :arg2 (w / work-01 :mod (i2 / important) :mod (t3 / this)))) :time (n2 / now))
(m / multi-sentence :snt1 (v / v. :arg0 (p / procedure) :arg1 (t / trumps :arg0 (p2 / person :arg0-of (h / have-org-role-91 :arg2 (p3 / president))) :arg1 (p4 / person :arg0-of (h2 / have-org-role-91 :arg2 (p5 / president))) :arg2 (p6 / person :arg0-of (h3 / have-org-role-91 :arg2 (p7 / president))))) :snt2 (1 / 16-c-14300 :arg0 (c / court :mod (c2 / c)) :arg1 (p8 / person :arg0-of (h4 / have-org-role-91 :arg2 (p9 / president)))))
(a / and :op1 (a2 / appreciate-02 :arg0 (w / we) :arg1 (e / everyone :arg1-of (d / do-02 :arg0 (w2 / we) :arg1-of (o / organize-01 :arg0 (w3 / we))))) :op2 (w4 / want-01 :arg0 (w5 / we) :arg1 (g / good :degree (m / most) :mod (o2 / only) :prep-for (f / future))))
(m / multi-sentence :snt1 (c / contrast-01 :arg1 (h / have-03 :arg0 (p / passenger) :arg1 (s / space :quant (l / lot) :location (r / row :ord (o / ordinal-entity :value 1)))) :arg2 (h2 / have-03 :arg0 (p2 / passenger) :arg1 (s2 / space :quant (l2 / lot) :location (r2 / row :ord (o2 / ordinal-entity :value 1))))) :snt2 (l3 / look-02 :arg0 (p3 / passenger) :arg1 (t / tight) :degree (t2 / total)))
(c / case :topic (d / disease))
(a / and :op1 (l / loosing :arg1 (y / you) :duration (f / forever)) :op2 (w / wake-up-02 :arg1 (y2 / you) :duration (t / temporal-quantity :quant (N / N-A) :unit (h / hour)) :time (n / night)) :op3 (w2 / wake-up-02 :arg1 (y3 / you) :duration (t2 / temporal-quantity :quant (N2 / N-A) :unit (h2 / hour)) :time (b / before :op1 (p / possible-01 :arg1 (t3 / think-01 :arg0 (r / rings :mod (s / stage)) :arg1 (s2 / sleep-01 :arg0 (y4 / you)) :time (n2 / no-longer))) :time (n3 / night))))
(s / short-06 :polarity - :arg2 (s2 / sympathetic))
(c / cause-01 :arg0 (o / obligate-01 :arg1 (y / you) :arg2 (c2 / change-01 :arg0 (s / self) :arg1 (f / fear-01 :arg0 (s2 / self) :arg1 (r / regime) :mod (d / deep-seated)))) :arg1 (t / this :domain (t2 / this)))
(c / contrast-01 :arg1 (a / avoid-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg2 (p2 / president))) :arg1 (q / question-01 :arg1 (d / differ-01 :arg0 (p3 / person) :arg2 (a2 / answer-01))) :manner (v / vehement)) :arg2 (d2 / decide-01 :arg0 (p4 / person :arg0-of (h2 / have-org-role-91 :arg2 (p5 / president))) :arg1 (a3 / answer-01)))
(c / contrast-01 :arg1 (a / available-02 :arg2 (b / bank :mod (r / royal) :part-of (c2 / country :name (n / name :op1 "N-A"))) :mod (o / only)) :arg2 (a2 / available-02 :polarity - :arg2 (c3 / customer)))
(i / include-91 :arg1 (p / person :name (n / name :op1 "Ivanov")) :arg2 (c / circle :mod (c2 / circle :mod (t / trust-01)) :mod (c3 / close :degree (m / most))) :duration (m2 / many :op1 (t2 / temporal-quantity :quant (N / N-A) :unit (y / year))))
(o / obligate-01 :arg1 (m / man :quant 3) :arg2 (s / swim-01 :arg0 (m2 / man) :arg1 (d / difficulty :topic (s2 / security))) :concession (b / boat :poss (y / you) :source (s3 / strength :poss (y2 / you) :mod (s4 / strength))))
(a / and :op1 (r / recovering :arg1 (s / she)) :op2 (s2 / search-01 :arg0 (p / police) :arg2 (p2 / person :arg1-of (s3 / suspect-01))))
(a / and :op1 (d / do-02 :arg0 (i / i) :arg1 (t / this) :arg2 (t2 / team :mod (o / olympic)) :purpose (i2 / introduce-01 :arg0 (i3 / i))) :op2 (r / reason :quant (m / more-than :op1 1)) :domain (t3 / this))
(a / and :op1 (f / fall-01 :arg1 (e / eric :name (n / name :op1 (s / sir) :op2 (e2 / eric))) :arg4 (p / police :mod (m / metropolitan))) :op2 (f2 / find-02 :arg0 (i / i) :arg1 (a2 / amaze-01 :arg1 (a3 / and :op1 (c / case-03 :mod (h / hamlets)) :op2 (c2 / case :arg1-of (m2 / make-01 :polarity -))))))
(h / have-concession-91 :arg1 (w / watch-01 :arg0 (y / you) :arg1 (v / video :mod (t / this))) :arg2 (w2 / watch-01 :arg0 (y2 / you) :arg1 (v2 / video :mod (t2 / this)) :purpose (s / see-01 :arg0 (y3 / you) :arg1 (t3 / thing :manner-of (t4 / turn-01 :arg0 (y4 / you) :direction (a / around) :beneficiary (p / person :arg0-of (r / rob-01 :arg1 (y5 / you))))))))
(a / and :op1 (u / underwent :arg0 (s / slash :op1 (s2 / system :name (n / name :op1 (t / traveler)) :mod (c / country :name (n2 / name :op1 "N-A"))) :op2 (s3 / system :name (n3 / name :op1 (g / gagged)) :poss (h / he))) :arg1 (t2 / test-01 :mod (s4 / serious)) :arg4 (t3 / test :mod (s5 / serious))) :op2 (t4 / test-01 :arg0 (c2 / country) :arg1 (t5 / test-01 :mod (s6 / serious))) :arg1-of (c3 / cause-01 :arg0 (a2 / and :op1 (l / licked :arg0 (h2 / he) :arg1 (s7 / some :arg1-of (i / include-91 :arg2 (d / dirtiest)))) :op2 (p / place :arg1-of (i2 / include-91 :arg2 (p2 / place :arg0-of (d2 / disgust-01) :quant (m / most)))))))
(p / provide-01 :arg0 (c / company) :arg1 (w / wright :name (n / name :op1 (m / mr.) :op2 (g / gefilus) :op3 (g2 / gefilus) :op4 (g3 / gefilus) :op5 (g4 / gefilus) :op6 (g5 / gefilus) :op7 (g6 / gefilus))) :arg2 (a / and :op1 (a2 / assistance :arg1 (a3 / and :op1 (u / url-entity :value (a4 / acid)) :op2 (v / vitamin :mod (c2 / c)))) :op2 (a5 / assist-01 :arg2 (a6 / assist-01 :arg2 (p2 / promote-02 :arg1 (a7 / and :op1 (c3 / continent :name (n2 / name :op1 "N-A") :arg1-of (i / intestinal)) :op2 (s / system :name (n3 / name :op1 (i2 / immune)))))))))
(s / say-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg2 (s2 / spokesman))) :arg1 (i / insist-01 :arg0 (f / force :mod (a / air)) :arg1 (c / compromised :polarity - :arg1 (s3 / security) :time (t / time :mod (a2 / any))) :arg1-of (c2 / cause-01 :arg0 (v / visibility :mod (p2 / poor) :arg1-of (c3 / cause-01 :arg0 (w / wildfires :mod (p3 / poor) :arg1-of (d / deep-02 :degree (m / more) :compared-to (u / usual))))))))
(e / exercise :arg0 (a / agency :mod (w / world) :mod (c / country :name (n / name :op1 "N-A"))) :time (b / before :op1 (s / summer) :quant (l / lot)) :purpose (a2 / and :op1 (e2 / establish-01 :arg0 (a3 / agency) :arg1 (l2 / law :mod (a4 / anti-doping))) :op2 (e3 / establish-01 :arg0 (a5 / agency) :arg1 (l3 / law :arg0-of (f / function-01 :arg1 (f2 / function-01))))))
(a / and :op1 (p / presents :arg0 (f / festival :mod (w / west :part-of (d / dinosaur))) :arg1 (a2 / and :op1 (t / tony) :op2 (m / maria)) :arg2 (a3 / and :op1 (t2 / tony) :op2 (m2 / maria))) :op2 (r / resemble-01 :arg1 (s / story) :arg2 (a4 / and :op1 (r2 / romeo) :op2 (j / juliet))) :time (y / year :mod (s2 / shakespeare)))
(f / feel-01 :arg0 (i / i) :arg1 (f2 / feel-01 :arg0 (i2 / i) :arg1 (f3 / feel-01 :arg0 (i3 / i) :arg1 (f4 / few :op1 (t / temporal-quantity :quant (N / N-A) :unit (m / month))) :time (b / before :op1 (n / now) :duration (f5 / few :op1 (t2 / temporal-quantity :quant (N2 / N-A) :unit (m2 / month))))) :arg2 (o / ordinal-entity :value 1) :mod (c / certain)))
(a / and :op2 (h / have-03 :arg0 (h2 / he) :arg1 (c / concern-01 :arg0 (c2 / constitution)) :time (c3 / case-03 :arg1 (b / ban-01 :mod (b2 / burqa)))))
(a / and :op2 (c / cause-01 :arg0 (c2 / change-01 :arg0 (c3 / condition :mod (e / economy) :quant (s / some)) :arg1 (t / thing :arg2-of (p / purchase-01 :arg0 (c4 / condition :mod (e2 / economy)))) :arg1 (p2 / purchase-01 :arg0 (c5 / condition)))))
(g / group :arg1-of (a / age-01 :arg2 (t / temporal-quantity :quant (N / N-A) :unit (y / year))) :domain (g2 / group :consist-of (p / person :arg0-of (b / buy-01 :arg1 (p2 / person :arg0-of (b2 / buy-01))))) :mod (i / in-fact))
(m / multi-sentence :snt1 (c / contrast-01 :arg1 (l / listen-01 :arg1 (m2 / music :source (o / or :op1 (c2 / computer) :op2 (o2 / other :mod (a / any))))) :arg2 (e / easy-05 :arg1 (l2 / listen-01 :arg1 (m3 / music)) :manner (w / way :mod (a2 / any) :mod (o3 / other)))) :snt2 (c3 / contact-01 :arg0 (s / she) :instrument (s2 / sigh :mod (l3 / lovestruck))))
(m / multi-sentence :snt1 (h / hope-01 :mode (i / imperative) :arg0 (y / you) :arg1 (/ / / :arg1 (a / angelique :name (n / name :op1 (- / -lrb-) :op2 (-2 / -lrb-) :op3 (k / kiel) :op4 (k2 / kiel) :op5 (k3 / kiel) :op6 (k4 / kiel) :op7 (k5 / kiel))))) :snt2 (c / chance-02 :arg1 (j / jump :arg1 (r / round :mod (s / semi-final))) :time (s2 / still)))
(a / and :op1 (s / standstill :polarity -) :op2 (o / obligate-01 :arg1 (y / you) :arg2 (i / innovation :arg0 (y2 / you)) :time (a2 / always) :arg1-of (c / cause-01 :arg0 (m / mean-01 :arg1 (w / water) :arg2 (a3 / and :op1 (l / life) :op2 (w2 / water) :domain (w3 / water) :degree (m2 / most))))))
(a / and :op1 (w / work-01 :arg0 (h / he) :instrument (b / blood :mod (h2 / heart) :quant (l / lot) :purpose (p / purpose :mod (w2 / water) :poss (h3 / he)))) :op2 (l2 / live-01 :arg0 (h4 / he) :arg1 (w3 / water :mod (l3 / literal :polarity -)) :condition (e / even-if :op1 (c / company :poss (h5 / he)))))
(t / threaten-01 :arg0 (i / industry :mod (a / aerospace)) :arg1 (c / cost-01 :arg1 (m / monetary-quantity :quant 240 :unit (e / euro) :mod (a2 / additional)) :arg2 (r / rate-entity-91 :arg1 (m2 / monetary-quantity :quant 240 :unit (e2 / euro) :mod (a3 / additional)) :arg2 (t2 / temporal-quantity :quant (N / N-A) :unit (y / year)))))
(g / give-01 :arg0 (t / this) :arg1 (i / influence-01 :arg0 (m / military) :mod (g2 / great)) :arg2 (y / year :arg1-of (c / come-01)))
(s / say-01 :arg0 (p / person :name (n / name :op1 "maassen")) :arg1 (c / coordinate-01 :arg0 (d / decide-01 :arg0 (o / office :poss (h / he)) :manner (c2 / close)) :arg1 (d2 / decide-01)))
(p / possible-01 :polarity - :arg1 (s / stop-01 :arg1 (c / company) :time (a / after :op1 (s2 / shock-01 :arg0 (t / travel-01 :arg0 (h / he)) :arg1 (t2 / travel-01 :arg0 (h2 / he) :mod (t3 / travel-01)) :time (a2 / after :op1 (t4 / travel-01 :arg0 (h3 / he) :arg1 (t5 / travel-01 :arg0 (h4 / he)))))) :mod (a3 / also) :ord (o / ordinal-entity :value 2)))
(o / oblige-02 :arg1 (m / market :mod (m2 / market)) :arg2 (b / base-02 :arg1 (a / asset :arg1-of (l / legal-02)) :arg2 (o2 / operate-01 :arg1 (c / cost-covering))))
(m / multi-sentence :snt1 (i / include-91 :arg1 (a / and :op1 (s / sector :arg1-of (i2 / include-91 :arg2 2016 :arg3 2016)) :op2 (s2 / sector :mod (c / commerce)) :op3 (s3 / sector :mod (i3 / industrial)) :op4 (r / reuth) :op5 (a2 / azendorf) :op6 (l / lopp) :op7 (z / zultenberg)) :arg2 (a3 / and :op1 (s4 / sector :mod (c2 / commerce)) :op2 (s5 / sector :mod (c3 / commerce)))) :snt2 (a4 / and :op1 (o / obligate-01 :arg1 (p / person :quant 2016) :arg2 (a5 / attack-01 :arg0 (p2 / person) :arg1 (c4 / citizen))) :op2 (n / neudorf :arg0 (a6 / and :op1 (s6 / sector :mod (c5 / commerce)) :op2 (n2 / neudorf) :op3 (r2 / reuth) :op4 (a7 / azendorf) :op5 (z2 / zultenberg)) :location (p3 / purse))))
(d / decide-01 :arg0 (t / team :mod (b / both)) :arg1 (t2 / thing :arg1-of (b2 / become-01 :arg2 (t3 / thing :arg1-of (b3 / become-01 :arg2 (t4 / thing :quant 2 :arg2-of (i / include-91 :arg1 (a / and :op1 (t5 / team :quant 6 :mod (e / each)) :op2 (p / place :ord (o / ordinal-entity :value 1) :ord (o2 / ordinal-entity :value 1) :ord (o3 / ordinal-entity :value 1) :mod (e2 / each))))))))) :time (a2 / already))
(m / miss-02 :arg0 (y / you) :arg1 (o / olympics :location (t / thing :quant 2008)) :arg1-of (c / cause-01 :arg0 (p / possible-01 :polarity - :arg1 (q / qualify :arg0 (t2 / they) :arg1 (s / squad)))))
(o / open-01 :arg1 (s / scoring :time (n / night :ord (o2 / ordinal-entity :value 1)) :prep-with (r / range-01 :arg3 (r2 / range-01 :arg3 (c / close)))) :time (n2 / night :mod (t / thursday)))
(k / kill-01 :arg1 (p / person :arg0-of (p2 / protest-01) :quant (m / many) :arg1-of (i / include-91 :arg2 (p3 / person :arg0-of (p4 / protest-01)))) :time (e / end-01) :concession (a / and :op1 (l / less :compared-to (f / few :op1 (t / temporal-quantity :quant (N / N-A) :unit (m2 / month)))) :op2 (g / go-08 :arg1 (r / riot-01) :arg2 (u / under :op1 (r2 / riot-01)) :arg1-of (q / quick-02 :degree (r3 / relative)))))
(t / take-01 :arg0 (y / you) :arg1 (p / path :direction (u / up)) :time (a / after :op1 (m / move-01 :arg0 (t2 / they) :arg2 (g / greenpoint))))
(c / contrast-01 :arg1 (p / praise-01 :arg0 (h / he) :arg1 (h2 / house :poss (f / farm :mod (f2 / farm)) :arg1-of (s / simple-02))) :arg2 (p2 / praise-01 :arg0 (h3 / he) :arg1 (a / and :op1 (h4 / house :mod (f3 / farm) :mod (f4 / farm :arg1-of (s2 / simple-02))) :op2 (k / kitchen :poss (h5 / he)))))
(a / and :op1 (m / move-01 :arg0 (t / they)) :op2 (c / coe :arg0 (t2 / they) :arg1 (d / dessert :arg1-of (p / prepare-02 :arg0 (t3 / they) :location (h / home)))) :op3 (r / roosevelt :arg0 (p2 / person :arg0-of (h2 / have-org-role-91 :arg2 (p3 / president))) :arg1 (s / swim-01 :arg0 (p4 / person)) :arg2 (p5 / person :arg0-of (h3 / have-org-role-91 :arg2 (p6 / president))) :arg4 (h4 / home)) :time (a2 / after :op1 (e / expel-01 :arg1 (p7 / person))))
(r / repeat-01 :arg0 (i / i) :arg1 (t / thing :quant 3 :arg1-of (r2 / reference-04)))
(t / think-01 :arg0 (i / i) :arg1 (s / see-01 :arg0 (g / god) :arg1 (i2 / i) :manner (m / martyr)) :condition (d / die-01 :arg1 (i3 / i)))
(c / create-01 :arg0 (p / plan-01 :arg1 (u / use-01 :arg1 (l / land)) :mod (n / new)) :arg1 (p2 / plan-01 :arg1 (u2 / use-01 :arg1 (l2 / land)) :location (s / sub-areas)) :arg1-of (a / associate-01 :arg2 (a2 / and :op1 (e / establish-01 :arg1 (b / business :mod (a3 / additional))) :op2 (c2 / create-01 :arg1 (j / job)) :op3 (c3 / create-01 :arg1 (j2 / job)) :op4 (c4 / create-01 :arg1 (j3 / job)) :op5 (c5 / create-01 :arg1 (j4 / job)))))
(h / have-concession-91 :arg1 (s / say-01 :arg0 (i / i) :arg1 (a / and :op1 (r / remain-01 :arg1 (p / person :arg0-of (r2 / research-01 :arg1 (e / economy))) :arg3 (p2 / person :arg0-of (r3 / research-01 :arg1 (e2 / economy)))) :op2 (p3 / person :arg0-of (r4 / research-01 :arg1 (e3 / economy)) :mod (i2 / important :degree (m / most))))))
(i / include-01 :arg1 (a / and :op1 (p / person :arg0-of (c / campbell)) :op2 (p2 / person :arg0-of (c2 / campbell)) :op3 (p3 / person :arg0-of (k / kate)) :op4 (p4 / person :arg0-of (k2 / kate)) :op5 (p5 / person :arg0-of (k3 / kate))) :arg2 (w / woman :arg2-of (c3 / cover-01)) :time (a2 / already))
(a / and :op1 (i / indicted :arg1 (c / campaign-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg2 (y / york :mod (n / new))))) :arg2 (i2 / inaction :arg1-of (a2 / allege-01)) :time (a3 / after :op1 (i3 / inform-01 :arg1 (p2 / person) :arg2 (p3 / person :arg0-of (h2 / have-org-role-91 :arg1 (c2 / campaign-01 :arg0 (p4 / person) :arg1 (c3 / campaign-01 :arg0 (p5 / person) :arg1 (c4 / campaign-01 :arg0 (p6 / person) :arg1 (c5 / campaign-01 :arg0 (p7 / person) :arg1 (c6 / campaign-01 :arg0 (p8 / person) :arg1 (c7 / campaign-01 :arg0 (p9 / person) :arg1 (c8 / campaign-01 :arg0 (p10 / person) :arg1 (c9 / campaign-01 :arg0 (p11 / person) :arg1 (c10 / campaign-01 :arg0 (p12 / person) :arg1 (c11 / campaign-01 :arg0 (p13 / person) :arg1 (c12 / campaign-01 :arg0 (p14 / person) :arg1 (o / oppose-01 :arg0 (p15 / person) :arg1 (n2 / north)))))))))))))))))) :op2 (d / direct-01 :arg0 (i4 / i) :arg1 (g / gun) :location (o2 / on :op1 (r / road))))
(c / come-01 :arg1 (i / indictment) :time (a / after :op1 (c2 / cause-01 :arg0 (c3 / candidate :poss (p / person :arg0-of (h / have-org-role-91 :arg1 (r / republican) :arg2 (p2 / president)))) :arg1 (a2 / and :op1 (s / shoot-02 :arg0 (f / folk :ord (o / ordinal-entity :value 2) :arg0-of (s2 / shoot-02 :arg1 (p3 / person :arg0-of (o2 / own-01 :arg1 (g / gun))))) :arg1 (a3 / and :op1 (p4 / person :arg0-of (o3 / own-01 :arg1 (g2 / gun))) :op2 (p5 / person :arg0-of (o4 / own-01 :arg1 (g3 / gun))))) :op2 (r2 / recommend-01 :arg1 (a4 / appoint-01 :arg0 (p6 / person :arg0-of (h2 / have-org-role-91 :arg3 (j / judge-01))) :arg1 (p7 / person :arg0-of (h3 / have-org-role-91 :arg3 (j2 / judge-01)))))))) :time (a5 / after :op1 (c4 / cause-01 :arg0 (c5 / candidate :poss (p8 / person :arg0-of (h4 / have-org-role-91 :arg2 (p9 / president)))) :arg1 (c6 / crowd :location (n / north))) :mod (j3 / just)))
(w / write-01 :arg0 (p / person :arg0-of (p2 / post-01 :arg1 (p3 / post :mod (b / ben) :poss (p4 / person :arg0-of (h / have-org-role-91 :arg2 (g / governor :mod (v / vice))))))) :arg1 (a / and :op1 (' / '' :arg1 (b2 / battle-01 :arg0 (c / community :mod (s / source :arg1-of (o / open-04)) :mod (a2 / ad-blocking)) :mod (k / kind :mod (t / this))) :time (a3 / already)) :op2 (p5 / possible-01 :arg1 (c2 / come-01 :arg1 (f / facebook) :prep-with (s2 / solution :mod (n / new)) :time (s3 / soon)))) :medium (p6 / post :mod (b3 / blog) :poss (p7 / person :arg0-of (s4 / speak-01 :arg3 (s5 / speak-01 :arg0 (p8 / person))))))
(a / and :op1 (f / fulfilled :arg0 (i / i) :arg1 (d / duty :poss (i2 / i) :prep-as (a2 / and :op1 (c / coach :mod (h / head)) :op2 (p / person :arg0-of (h2 / have-org-role-91 :arg2 (p2 / president :mod (v / vice)))) :op3 (p3 / person :arg0-of (h3 / have-org-role-91 :arg2 (p4 / president :mod (v2 / vice)))) :op4 (p5 / person :arg0-of (h4 / have-org-role-91 :arg2 (p6 / president :mod (v3 / vice)))) :op5 (p7 / person :arg0-of (h5 / have-org-role-91 :arg2 (p8 / president :mod (v4 / vice)))) :op5 (p9 / person :arg0-of (h6 / have-org-role-91 :arg2 (p10 / president :mod (v5 / vice)))) :op6 (p11 / person :arg0-of (h7 / have-org-role-91 :arg2 (h8 / head-of-state))) :op7 (p12 / person :arg0-of (h9 / have-org-role-91 :arg2 (h10 / head-of-state))))) :time (y / year :mod (l / last))) :op2 (s / say-01 :arg0 (i3 / i) :arg1 (r / roy :mod (5 / 50-year-old) :medium (s2 / statement))))
(h / hope-01 :arg0 (w / we) :arg1 (t / tell-01 :arg0 (w2 / we) :arg1 (a / and :op1 (c / compare-01 :arg0 (w3 / we) :arg1 (t2 / thing :arg2-of (r / result-01 :arg1 (t3 / thing :arg2-of (r2 / result-01 :arg1 (s / star :mod (s2 / star) :mod (o / other)))))) :arg2 (w4 / we) :manner (c2 / compare-01 :arg1 (t4 / thing :arg2-of (r3 / result-01 :arg1 (s3 / star :mod (s4 / star))))) :arg2 (w5 / we)) :op2 (h2 / history :mod (e / even) :poss (s5 / system :mod (s6 / solar))) :op3 (s7 / scientist :mod (r4 / research-01)) :op4 (s8 / scientist :mod (r5 / research-01)) :op5 (s9 / scientist :mod (r6 / research-01)) :location (a2 / and :op1 (c3 / center :mod (p / process-01 :arg1 (i / infrared))) :op2 (c4 / center :mod (a3 / analyze-01 :arg1 (i2 / infrared)) :location (l / location :name (n / name :op1 "pasadena")))) :time (r7 / release-01 :arg1 (p2 / press)))))
(m / miss-02 :arg0 (s / she) :arg1 (b / bronze :arg1 (b2 / bronze)) :location (p / place :ord (o / ordinal-entity :value 4) :location (p2 / place :ord (o2 / ordinal-entity :value 4))) :location (p3 / place :ord (o3 / ordinal-entity :value 4) :location (f / final)))
(s / say-01 :arg0 (p / pattern :arg1-of (s2 / simple-02)) :arg1 (c / contrast-01 :arg1 (s3 / seek-01 :arg0 (r / ransomware) :arg1 (l / look-01 :arg0 (y / you) :arg1 (f / file :arg1-of (m / modify-01) :mod (r2 / recent) :example (o / or :op1 (w / word) :op2 (e / excel) :op3 (d / database) :op4 (d2 / database) :op5 (f2 / file :mod (d3 / database))) :example (a / and :op1 (i / image) :op2 (v / video)))) :arg1-of (s4 / specific-02)) :arg2 (p2 / pattern :arg1-of (s5 / simple-02))))
(s / say-01 :arg0 (p / person :name (n / name :op1 "wisniewski")) :arg1 (i / include-01 :arg1 (a / and :op1 (a2 / appear-01 :arg1 (a3 / and :op1 (p2 / person :mod (s2 / small :degree (m / more))) :op2 (p3 / person :mod (s3 / small :degree (m2 / more))) :op3 (p4 / person :arg0-of (h / have-org-role-91 :arg2 (b / branding))))) :op2 (p5 / possible-01 :arg1 (c / change-01 :arg1 (a4 / and)))) :arg2 (' / '' :arg1 (s4 / scope :poss (s5 / supply-01)))))
(o / obligate-01 :arg1 (s / state) :arg2 (a / and :op1 (p / prudently :arg0 (s2 / state)) :op2 (d / determine-01 :arg0 (s3 / state) :time (t / time :arg1-of (s4 / same-01) :time-of (t2 / threaten-01 :arg0 (t3 / terrorist))))))
(s / say-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (p2 / political-party :name (n / name :op1 "N-A")) :arg2 (b / boss :mod (l / left)))) :arg1 (a / and :op1 (c / contradiction :arg1 (i / ied :mod (' / ''))) :op2 (i2 / intensification :arg1 (r / right-05 :arg2 (b2 / bring-01 :arg1 (p3 / person :location (c2 / country :mod (t / this))))))))
(r / rain-01 :arg1-of (i / instead-of-91 :arg2 (s / star :mod (s2 / shooting))))
(e / exemplify-01 :arg0 (o / or :op1 (c / case-03 :arg1 (l / laboratories :arg1 (l2 / laboratory :name (n / name :op1 (s / sleeping) :op2 (p / physicians) :op3 (d / daytime)))) :op2 (r / rate :mod (d2 / dropouts)) :op3 (c2 / case-03 :mod (d3 / dropouts)) :op4 (f / find-01 :arg0 (y / you) :arg1 (c3 / cause :arg0-of (c4 / cause-01 :arg1 (d4 / dyslexia :arg1 (f2 / fietze))))) :mod (t / total))) :time (c5 / case-03 :arg1 (s2 / snoring :mod (p2 / pathological))))
(a / attack-01 :arg1 (b / building :quant (m / many) :arg1-of (i / include-91 :arg2 (b2 / building :location (r / riga)))) :arg1-of (c / cause-01 :arg0 (t / thing :arg1-of (s / symbolize-01 :arg2 (d / develop-01 :mod (t2 / this))))) :arg1-of (c2 / cause-01 :arg0 (o / or :op1 (h / have-03 :arg0 (t3 / they) :arg1 (o2 / or :op1 (s2 / slice :name (n / name :op1 (i2 / insert))) :op2 (s3 / slash :op1 (i3 / inserted) :op2 (f / freshly)) :arg1-of (t4 / throw-01 :arg2 (c3 / color :mod (c4 / color))))))))
(s / see-01 :arg1 (p / person :arg0-of (h / have-rel-role-91 :arg1 (p2 / person :quant 2 :arg0-of (h2 / have-rel-role-91 :arg1 (p3 / person) :arg2 (s2 / son))) :arg2 (m / mother))) :arg2 (p4 / person :arg0-of (h3 / have-rel-role-91 :arg1 (p5 / person) :arg2 (m2 / mother)) :arg1-of (s3 / single-02) :arg0-of (h4 / have-rel-role-91 :arg1 (p6 / person) :arg2 (m3 / mother))) :time (d / day :mod (d2 / day) :poss (s4 / she)))
(a / and :op2 (g / give-01 :arg0 (h / he) :arg1 (m / money :mod (a2 / aircraft-type :name (n / name :op1 "N-A"))) :arg2 (m2 / monetary-quantity :quant 25,000 :unit (e / euro))))
(c / contrast-01 :arg2 (s / say-01 :arg0 (h / he) :arg1 (d / differ-02 :arg1 (h2 / he) :degree (q / quite))))
(c / contrast-01 :arg2 (s / say-01 :arg0 (p / person :name (n / name :op1 "Clinton") :mod (o / other)) :arg1 (h / have-03 :arg0 (s2 / state) :arg1 (t / task :mod (c2 / certain))) :arg1-of (c3 / cause-01 :arg0 (o2 / obligate-01 :arg1 (s3 / state) :arg2 (a / and :op1 (o3 / open-up-03 :arg0 (s4 / state) :arg1 (o4 / opportunity)) :op2 (n2 / need-01 :arg0 (s5 / state) :arg1 (m / money :beneficiary (i / it))))))))
(c / contrast-01 :arg2 (w / want-01 :polarity - :arg0 (p / person :mod (b / both)) :arg1 (i / isolate :arg0 (p2 / person) :arg1 (w2 / we) :arg2 (t / trade-01 :mod (i2 / international))) :concession-of (p3 / protect-01 :arg0 (j / job :mod (c2 / country :name (n / name :op1 "N-A"))) :arg1 (j2 / job :mod (c3 / country :name (n2 / name :op1 "N-A"))) :manner (s / simple))) :time (t2 / time :arg1-of (s2 / same-01)))
(s / say-01 :arg0 (p / person :arg0-of (b / believe-01 :arg1 (e / end-01)) :arg0-of (b2 / believe-01 :arg1 (e2 / end-01) :time (a / as-soon-as :op1 (a2 / arrive-01 :arg1 (p2 / person) :arg4 (c / country :name (n / name :op1 "Germany")))))) :arg1 (w / wrong-04 :arg1 (p3 / person)))
(a / and :op1 (i / important :degree (v / very) :domain (a2 / and :op1 (m / man) :op2 (w / woman))) :op2 (h / house-01 :arg1 (a3 / and :op1 (m2 / man) :op2 (w2 / woman)) :manner (s / separate-02)) :medium (s2 / study :arg1-of (p / publish-01 :arg0 (c / committee))))
(a / and :op1 (r / recommend-01 :arg1 (s / separate-02 :arg1 (p / person :mod (e / especially)) :arg2 (w / woman)) :mod (e2 / especially)) :op2 (s2 / study-01 :arg0 (s3 / study)))
(c / contrast-01 :arg2 (s / say-01 :arg0 (t / thing :arg1-of (r / report-01)) :arg1 (s2 / spoke :arg0 (p / person :arg0-of (h / have-rel-role-91 :arg1 (h2 / he) :arg2 (f / friend :mod (d / dear) :mod (d2 / dear)))) :arg1 (p2 / person :arg0-of (h3 / have-rel-role-91 :arg1 (h4 / he) :arg2 (f2 / friend :mod (d3 / dear)))) :arg1-of (r2 / repeat-01)) :arg1-of (r3 / repeat-01)))
(a / available-02 :polarity - :arg2 (b / bank :mod (r / royal) :part-of (c / country :name (n / name :op1 "Scotland"))) :time (n2 / no-longer) :location (o / outside :op1 (c2 / country)) :time (n3 / no-longer))
(w / watch-01 :arg0 (s / someone) :arg1 (m / man :mod (t / this)) :time (t2 / today))
(t / thing :arg1-of (b / brilliant-01) :mod (w / whole))
(s / say-01 :arg0 (p / person :name (n / name :op1 "alek" :op2 "krautmann") :arg0-of (h / have-org-role-91 :arg2 (s2 / senator))) :arg1 (p2 / possible-01 :arg1 (f / flood :domain (r / rivers :mod (b / both)) :location (f2 / forest :arg1-of (n2 / near-02 :arg2 (b2 / baton))))))
(a / and :op1 (r / receive-01 :arg0 (c / club :mod (t / this)) :arg1 (t2 / train-01 :arg2 (t3 / they) :extent (e / entire))) :op2 (c2 / commit-01 :arg1 (t4 / this) :arg2 (c3 / commit-01 :arg1 (f / family) :arg2 (f2 / family) :arg1-of (l / long-03))) :location (c4 / club :mod (t5 / this)))
(p / pleased :arg0 (w / we) :arg1 (p2 / possible-01 :arg1 (e / expand-01 :arg0 (w2 / we) :arg1 (o / option :mod (t / treat-03) :arg2-of (a / available-02)) :arg3 (p3 / person :arg0-of (b / benefit-01 :arg1 (p4 / person :arg1-of (b2 / benefit-01 :arg0 (i / it) :arg1-of (p5 / possible-01))))))) :manner (r / recommendation :mod (p6 / preliminary)))
(a / and :op1 (e / excite-01 :arg1 (i / i) :degree (t / too)) :op2 (d / die-01 :arg1 (p / person :arg1-of (r / resemble-01 :arg2 (p2 / pig)))) :mod (t2 / too))
(a / add-01 :arg0 (p / person :name (n / name :op1 "davidson")) :arg1 (t / try-01 :arg0 (p2 / person :arg1-of (e / employ-01)) :arg1 (p3 / pull-out-02 :arg0 (p4 / person) :arg1 (g / garments :arg1-of (o / out-06 :arg2 (s / sell-01))) :time (a2 / after :op1 (g2 / go-08 :arg1 (p5 / person) :arg2 (g3 / good :mod (j / just)))))))
(s / say-01 :arg2 (p / person :name (n / name :op1 "N-A")))
(s / say-01 :arg0 (r / report-01 :arg0 (p / press)) :arg1 (t / threaten-01 :arg0 (p2 / person :arg0-of (h / have-org-role-91 :arg1 (p3 / party))) :arg1 (c / cancel-01 :arg0 (p4 / person) :arg1 (f / fund) :arg3 (s2 / support-01 :arg0 (p5 / person) :arg1 (c2 / campaign-01 :arg0 (p6 / person) :arg1 (e / elect-01)))) :arg1-of (c3 / cause-01 :arg0 (r2 / recommend-01 :arg1 (t2 / thing :arg2-of (r3 / result-01 :arg1 (s3 / survey-01)) :mod (g / good :degree (m / more)))))))
(c / contrast-01 :arg1 (s / speak-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg2 (s2 / sulz))) :arg1 (' / '' :mod (s3 / slight :degree (s4 / slight)) :arg1-of (d / decline-01 :location (m / maier :name (n / name :op1 (a / autohaus))))) :mod (a2 / also)) :arg2 (a3 / admit-01 :arg0 (p2 / person) :arg1 (m2 / miss-01 :arg1 (t / track :arg1-of (r / run-09 :arg2 (t2 / track)))) :mod (a4 / also)))
(s / sell-01 :arg0 (b / brand :name (n / name :op1 (v / vw) :op2 (b2 / brand) :op3 (b3 / brand) :op4 (b4 / brand) :op5 (b5 / brand))) :arg1 (r / rate-entity-91 :arg1 (p / percentage-entity :value (N / N-A)) :arg2 (t / temporal-quantity :quant (N2 / N-A) :unit (m / month))) :time (m2 / month :mod (p2 / previous)) :location (j / july))
(a / and :op2 (i / impact-01 :arg0 (v / vote-01 :arg0 (c / coup :arg1-of (s / surround-01 :arg2 (c2 / coup)))) :arg1 (w / withdraw-01 :arg1 (p / person :arg0-of (h / have-org-role-91 :arg2 (s2 / spokeswoman)))) :mod (a2 / also)))
(c / claim-01 :arg0 (t / they) :arg1 (a / and :op1 (p / provide-01 :arg0 (a2 / and :op1 (s / shop :mod (p2 / provisional)) :op2 (r / restaurant)) :arg1 (a3 / accommodation) :frequency (o / often)) :op2 (p3 / provide-01 :arg0 (a4 / and) :arg1 (a5 / and) :arg1-of (n / need-01))) :mod (a6 / also))
(l / listen-01 :arg1 (i / industry :mod (a / advertising)) :time (a2 / already))
(m / multi-sentence :snt1 (c / cause-01 :arg1 (s / steal-01 :arg1 (i / it) :manner (m2 / mode :polarity -) :mod (s2 / simple))) :snt2 (c2 / cause-01 :arg1 (a / and :op1 (w / wheels :arg0 (a2 / and :op1 (p / person :arg0-of (h / have-org-role-91 :arg2 (h2 / head-of-state))) :op2 (p2 / person :arg0-of (h3 / have-org-role-91 :arg2 (h4 / head-of-state)))) :manner (w2 / way) :mod (a3 / also) :mod (a4 / also)))))
(a / and :op1 (p / promote-02 :arg0 (w / water :arg1-of (d / drink-01) :mod (w2 / water :arg1-of (d2 / drink-01)) :location (k / kottendorf :name (n / name :op1 (v / veitsteingruppe) :op2 (p2 / purification) :op3 (b / bretbrunn)))) :arg1 (a2 / and :op1 (a3 / annually :quant (a4 / about :op1 (d3 / distance-quantity :quant (N / N-A) :unit (m / meter)))) :op2 (s / supply-01 :arg1 (w3 / water))) :arg2 (p3 / person :arg0-of (i / inhabit-01) :quant (a5 / about :op1 5500))))
(c / cause-01 :arg0 (p / possible-01 :arg1 (t / travel-01 :arg0 (p2 / person :mod (c2 / country :name (n / name :op1 "N-A"))) :arg4 (c3 / car))) :time (m / meanwhile))
(s / stagger :arg1 (i / industry :mod (s2 / steel) :mod (g / german)) :arg2 (m / monetary-quantity :arg2-of (c / cost-01) :mod (a / additional)) :source (m2 / monetary-quantity :arg2-of (c2 / cost-01) :mod (a2 / additional)))
(c / contrast-01 :arg1 (t / true-01 :arg1 (a / apply-02 :arg1 (s / state :arg1-of (e / exile-01) :arg1-of (i / impose-01 :duration (i2 / initial) :duration (t2 / temporal-quantity :quant (N / N-A) :unit (d / day)) :time (i3 / initial))))) :arg2 (a2 / affect-01 :polarity - :arg0 (t3 / this) :arg1 (l / life :poss (t4 / turk :quant (m / most))) :mod (a3 / almost)))
(a / and :op1 (l / let-01 :arg0 (w / we :name (n / name :op1 (t / tichon) :op2 (- / -lrb-)) :name (n2 / name :op1 (-2 / -lrb-) :op2 (-3 / -lrb-)) :name (n3 / name :op1 (-4 / -lrb-) :op2 (h / hammer)) :name (n4 / name :op1 (-5 / -lrb-) :op2 (h2 / hammer)) :name (n5 / name :op1 (-6 / -lrb-)) :name (n6 / name :op1 (-7 / -lrb-) :op2 (h3 / hammer))) :arg1 (h4 / hammer)) :op2 (-8 / -rrb- :arg1 (i / it) :mod (h5 / hardly) :arg0-of (r / recognize-02 :arg1 (p / possible-01 :arg1 (r2 / recognize-02 :arg0 (a2 / amr-unknown) :arg1 (c / crap :quant (m / many :degree (s / so))))))))
(b / benefit-01 :arg0 (h / have-03 :arg0 (m / militia :arg0-of (t / take-01 :arg1 (p / power) :time (a / after :op1 (u / unrest :mod (b2 / bloody) :mod (b3 / bloody) :location (t2 / thing :quant 2014))))) :arg1 (r / restore-01 :arg0 (m2 / militia) :arg1 (a2 / and :op1 (s / stability) :op2 (o / order)))))
(a / and :op1 (c / create-01 :arg0 (a2 / and :op1 (p / person :quant 2014) :op2 (p2 / person :quant 2015)) :arg1 (p3 / process-02 :arg1 (p4 / prepare-01 :arg1 (i / intelligence) :location (a3 / and :op1 (t / talk-02 :arg2 (a4 / and :op1 (p5 / person :arg0-of (h / have-org-role-91 :arg2 (h2 / head-of-state))) :op2 (p6 / person :arg0-of (h3 / have-org-role-91 :arg1 (s / service :mod (s2 / security) :mod (c2 / country :name (n / name :op1 "N-A"))) :arg2 (m / member))) :op3 (d / democrat :mod (t2 / top-ranking) :location (a5 / and :op1 (c3 / committee) :op2 (p7 / person :arg0-of (h4 / have-org-role-91 :arg1 (c4 / committee) :arg2 (m2 / member))) :op3 (p8 / person :arg0-of (h5 / have-org-role-91 :arg1 (o / organization) :arg2 (m3 / member))) :op4 (p9 / person :arg0-of (h6 / have-org-role-91 :arg1 (o2 / organization) :arg2 (m4 / member))) :op5 (p10 / person :arg0-of (h7 / have-org-role-91 :arg1 (o3 / organization) :arg2 (m5 / member))))))))))) :op2 (a6 / announce-01 :arg0 (p11 / person) :medium (o4 / opine-01)))
(a / and :op1 (r / repressed :arg0 (g / government-organization :arg0-of (g2 / govern-01) :mod (r2 / right :mod (h / human))) :arg1 (g3 / government-organization :arg0-of (g4 / govern-01)) :manner (c / consistent)) :op2 (r3 / restrict-01 :arg1 (o / oppose-01 :arg1 (c2 / country)) :arg1-of (e / effective-04)) :concession (e2 / even-if :op1 (e3 / even-if :op1 (a2 / anything :domain (c3 / country :name (n / name :op1 "ethiopia"))))))
(s / speak-01 :arg0 (p / person :name (n / name :op1 "Clinton")) :arg1 (s2 / situation :mod (e / economy)) :location (p2 / peninsula :name (n2 / name :op1 "N-A")) :time (w / week :mod (t / this)) :location (p3 / peninsula :name (n3 / name :op1 "N-A")))
(t / think-01 :arg0 (i / i) :arg1 (a / and :op1 (i2 / include-91 :arg1 (m / method :quant 1 :arg1-of (i3 / include-91 :arg2 (m2 / method :poss (h / he)))) :arg2 (t2 / test-01 :arg0 (h2 / he) :arg1 (t3 / thing :manner-of (r / receive-01 :arg0 (f / fan :poss (h3 / he)) :arg1 (m3 / message :mod (c / certain) :arg1-of (r2 / receive-01 :arg0 (f2 / fan :poss (h4 / he)))))))) :op2 (c2 / clarify-10 :arg0 (i4 / i) :arg1 (t4 / thing :manner-of (g / go-08 :arg1 (r3 / react-01 :arg0 (p / person :name (n / name :op1 "ruth" :op2 "sherman") :arg1-of (e / expert-01 :arg2 (c3 / communicate-01))))) :arg2 (p2 / person :arg1-of (e2 / expert-01 :arg2 (c4 / communicate-01)) :arg0-of (o / observe :arg1 (l / language :poss (c5 / candidate :mod (b / both)))))) :time (t5 / then))))
(s / show-01 :arg0 (s2 / survey-01 :arg0 (s3 / survey-01 :arg0 (p / publication :name (n / name :op1 "NBC")) :arg1 (o / organization :name (n2 / name :op1 "-" :op2 "marist") :part-of (o2 / organization :name (n3 / name :op1 "-" :op2 "marist") :part-of (o3 / organization :name (n4 / name :op1 "-" :op2 "marist"))))) :mod (n5 / new)) :arg1 (l / lead-03 :arg0 (s4 / survey-01) :arg2 (l2 / lead-01 :arg0 (s5 / state :location (a / and :op1 (c / country) :op2 (c2 / country) :op3 (c3 / colorado) :op4 (r / race))) :mod (g / great))))
(i / include-01 :arg1 (a / and :op1 (p / prepare-02 :arg2 (e / era :mod (t / this))) :op2 (p2 / prepared :arg1 (z / ziegelman) :arg2 (b / butter :mod (p3 / peanuts))) :time (e2 / era :mod (t2 / this))) :arg2 (s / search-01 :arg0 (s2 / she) :arg2 (b2 / book)) :mod (a2 / also))
(a / and :op1 (c / call-01 :arg1 (i / it) :arg2 (w / whipped :mod (p / prune))) :op2 (a2 / add-01 :arg0 (i2 / i) :arg1 (t / trick :domain (i3 / it) :mod (c2 / common) :purpose (g / give-01 :arg1 (n / name :mod (m / modest)) :arg2 (t2 / thing :name (n2 / name :op1 "N-A"))))))
(s / sight :arg1-of (r / rare-02))
(p / pay-01 :arg0 (t / they) :arg1 (r / rate-entity-91 :arg1 (r2 / rate :mod (f / federal) :arg0-of (e / effective-04)) :arg2 (p2 / product-of :op1 20.3 :op2 2015)))
(i / increase-01 :arg1 (i2 / import-01 :arg0 (c / country :name (n / name :op1 "N-A")) :arg2 (c2 / country :name (n2 / name :op1 "N-A"))) :arg2 (p / percentage-entity :value (N / N-A)) :arg4 (r / rate-entity-91 :arg1 (m / monetary-quantity :quant 158 :unit (d / dollar)) :arg2 (v / volume-quantity :quant (N2 / N-A) :unit (g / gallon))))
(a / and :op1 (f / fishing :mod (o / other) :location (p / pond :mod (n / nearby))) :op2 (e / evenings :arg1 (e2 / evenings :mod (f2 / final)) :time (f3 / fire) :location (a2 / and :op1 (f4 / fire) :op2 (f5 / final))))
(a / and :op1 (b / burkhardt :arg1 (a2 / and :op1 (b2 / burkhardt) :op2 (h / heidi)) :arg2 (a3 / and :op1 (d / dinner :mod (t / tasty)) :op2 (d2 / dinner :arg1-of (s / strong-02)))) :op2 (b3 / breakfast :arg1 (a4 / and)))
(r / refer-01 :arg0 (p / person :arg0-of (a / analyze-01)) :arg1 (t / thing :arg1-of (s / state-01 :arg0 (p2 / person :name (n / name :op1 "stephen" :op2 "mikkelsen") :arg0-of (h / head-01 :arg1 (o / operation))) :time (e / early :op1 (w / week :mod (t2 / this)) :degree (m / more)) :degree (m2 / more))) :arg2 (a2 / and :op1 (r2 / rate-entity-91 :arg1 (e2 / electricity :quant (a3 / about :op1 (m3 / mass-quantity :quant (N / N-A) :unit (k / kilogram)))) :arg2 (t3 / temporal-quantity :quant (N2 / N-A) :unit (y / year))) :op2 (r3 / rate-entity-91 :arg1 (e3 / electricity :quant (a4 / about :op1 900)) :arg2 (t4 / temporal-quantity :quant (N3 / N-A) :unit (y2 / year)))))
(a / attract-01 :arg0 (t / thing :arg0-of (r / refine-01) :arg1-of (r2 / resemble-01 :arg2 (t2 / thing :arg1-of (r3 / resemble-01 :arg2 (b / book :mod (i / image)))))) :arg1 (p / page :quant (n / number :mod (l / large)) :arg1-of (i2 / include-91 :arg2 (f / fashionista :name (n2 / name :op1 (l2 / laut) :op2 (l3 / laut)))) :quant (n3 / number :mod (l4 / large))) :source (p2 / page :quant 832 :part-of (- / -rrb- :name (n4 / name :op1 (w / wälzers)))))
(a / and :op1 (c / come-03 :arg1 (d / decisive) :arg2 (m / market :mod (m2 / mass)) :mod (o / only) :time (b / begin-01 :arg1 (m3 / multiple :op1 2007))) :op2 (a2 / announce-01 :arg0 (c2 / ceo) :arg1 (j / job :arg1-of (a3 / announce-01 :arg0 (c3 / ceo)) :arg1-of (a4 / announce-01 :medium (i / introduce-02 :arg1 (i2 / iphones :arg1 (i3 / iphones)))))))
(s / say-01 :arg0 (t / thing :arg1-of (s2 / state-01) :mod (j / joint)) :arg1 (p / possible-01 :arg1 (c / confirm-01 :arg0 (a / and :op1 (u / unite-01) :op2 (u2 / union :mod (r / rmt))) :arg1 (a2 / agree-01 :arg0 (w / we) :arg1 (r2 / restart-01 :arg0 (w2 / we) :arg1 (p2 / process-02 :arg1 (s3 / settlement)) :arg2 (d / dispute-01 :time (c2 / current))))) :manner (j2 / joint)))
(s / star :quant (m / many) :location (c / cluster :mod (s2 / star) :mod (t / this) :arg1-of (o / originate-01 :arg2 (a / around) :time (b / before :op1 (n / now) :quant (a2 / around :op1 (t2 / temporal-quantity :quant (N / N-A) :unit (y / year)))))) :time (n2 / now) :arg1-of (c2 / cause-01 :arg0 (r / reach-01 :arg1 (a3 / age :mod (a4 / adult)))))
(s / stars :arg0 (s2 / star :mod (t / this)) :arg1 (s3 / star :quant (a / amount :mod (l / large)) :quant (a2 / amount :mod (l2 / large))) :time (p / peak-01 :arg1 (r / rate)))
(s / star :mod (b / baseball :mod (c / controversy)))
(r / reduce-01 :arg1 (l / lock :arg1-of (l2 / legal-02)) :arg4 (e / encounters :quant 162) :time (a / after :op1 (r2 / reduce-01 :arg1 (d / dispute-01 :arg1-of (l3 / legal-02)))))
(c / contrast-01 :arg1 (t / target-01 :arg1 (p / person :arg1-of (p2 / private-03) :arg0-of (u / use-01))) :arg2 (c2 / change-01 :arg1 (a / attack-01 :arg0 (c3 / company)) :time (m / month :mod (l / last)) :manner (f / fast)))
(e / engine :mod (a / another) :domain (e2 / engine :name (n / name :op1 (1 / 1.5-liter) :op2 (p / petrol)) :prep-with (h / hp :quant 96 :name (n2 / name :op1 (/ / /) :op2 130 :op3 130))))
(a / available-02 :arg2 (c / connectivity :mod (f / full)) :arg3 (e / equipment :mod (t / top) :example (a2 / and :op1 (t2 / touchscreen) :op2 (n / nautical) :op3 (i / intend-01 :mod (a3 / app)) :op4 (m / more))))
(o / offer-01 :arg0 (p / person :mod (c / country :name (n / name :op1 "N-A"))) :arg1 (c2 / car :mod (v / versatile)) :manner (h / honda))
(g / go-02 :arg0 (y / you) :arg4 (b / bed) :time (t / time :arg1-of (n / normal-02) :poss (y2 / you)) :time (a / after :op1 (w / war :name (n2 / name :op1 "N-A"))))
(e / exist-01 :polarity - :arg1 (a / and :op1 (d / designer :arg1 (a2 / and :op1 (d2 / door :mod (i / interior)) :op2 (d3 / door :mod (i2 / interior)) :poss (a3 / and :op1 (p / person :arg0-of (h / have-org-role-91 :arg2 (h2 / head-of-state))) :op2 (p2 / person :arg0-of (h3 / have-org-role-91 :arg1 (p3 / police) :arg2 (p4 / police))))) :op2 (p5 / person :arg0-of (h4 / have-org-role-91 :arg1 (p6 / police) :arg3 (l / lead-02 :arg0 (p7 / person)))))) :arg1-of (o / obvious-01 :degree (s / so)))
FAILED_TO_PARSE#Number of opening and closing brackets doesn't match.
(m / multi-sentence :snt1 (v / value-interval :op1 18 :op2 18) :snt2 (s / sport :domain (s2 / sport)))
(d / distance :arg1 (l / langer :mod (b / bernhard)) :arg2 (a / animal :mod (l2 / large)))
(s / strike-01 :arg2 (p / person :arg0-of (a / assist-01)))
(a / and :op1 (d / distribute-01 :arg1 (t / thing :arg1-of (d2 / distribute-01))) :op2 (a2 / accuse-01 :arg1 (c / country :name (n / name :op1 "Russia")) :arg2 (a3 / ankara :arg1 (c2 / country) :mod (b / backs))))
(h / have-org-role-91 :arg0 (h2 / he) :arg1 (a / and :op1 (p / person :arg0-of (h3 / have-org-role-91 :arg2 (m / minister :mod (p2 / prime) :mod (p3 / prime)))) :op2 (s / secretary :mod (d / defense))) :time (b / before :op1 (h4 / have-org-role-91 :arg0 (h5 / he) :arg2 (m2 / minister :mod (d2 / deputy) :mod (p4 / prime)))))
(a / arrive-01 :arg1 (p / putin :arg1 (p2 / power)) :arg3 (p3 / person :quant (m / multiple :op1 1) :arg1-of (f / familiarize-01 :arg2 (p4 / person :quant 5 :arg1-of (f2 / familiarize-01 :arg2 (h / he) :degree (m2 / most))))))
(r / request-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (b / banff :mod (b2 / banff)) :arg3 (a / apprentice-01 :arg0 (p2 / person)))) :arg1 (a2 / assist-01 :arg0 (p3 / person) :arg1 (f / fish) :arg2 (i / identification :poss (f2 / fish))))
(o / obligate-01 :arg2 (t / think-01 :arg1 (g / get-05 :arg1 (y / you) :arg2 (f / facility :name (n / name :op1 "N-A")) :mod (a / again) :destination (a2 / apply-02 :arg1 (p / price-01 :arg1-of (f2 / fix-03))))))
(a / ask-01 :arg0 (i / i) :arg1 (a2 / amr-unknown) :arg2 (a3 / amr-unknown) :manner (c / constant))
(c / contrast-01 :arg1 (u / use-01 :arg1 (s / system :name (n / name :op1 (f / flood) :op2 (f2 / flood))) :arg2 (s2 / system :name (n2 / name :op1 (f3 / flood))) :time (e / early :op1 (d / date-entity :decade (N / N-A)))) :arg2 (r / rain-01 :location (a / area :arg1-of (m / mobile-02) :mod (f4 / further :degree (m2 / more)))))
(s / say-01 :arg0 (m / man :arg1-of (i / include-91 :arg2 (m2 / man :arg0-of (o / observe-01)))) :arg1 (a / and :op1 (p / person :arg0-of (o2 / observe-01) :arg1-of (c / close-10 :arg2 (c2 / close-10 :arg1 (m3 / man) :arg2 (r / rain-01 :quant 13,75 :mod (d / duty)) :time (t / tomorrow))) :arg1-of (c3 / close-10 :arg2 (c4 / close))) :op2 (p2 / person :arg0-of (o3 / observe-01))))
(d / draw-02 :arg0 (a / and :op1 (n / nadal :arg1 (s / star :mod (t / tennis))) :op2 (a2 / actor :name (n2 / name :op1 (j / josh))) :op3 (h / hartnett :name (n3 / name :op1 (j2 / josh) :op2 (j3 / josh)))) :arg2 (a3 / and :op1 (n4 / nadal :mod (t2 / tennis)) :op2 (h2 / hartnett :name (n5 / name :op1 (j4 / josh) :op2 (j5 / josh) :op3 (j6 / josh)))) :arg1-of (c / continue-01) :mod (f / further))
(a / and :op1 (h / hope-01 :arg0 (i / i) :arg1 (h2 / have-03 :arg0 (a2 / and :op1 (p / person :quant 1) :op2 (p2 / person :name (n / name :op1 (d / dexter)))) :arg1 (a3 / and :op1 (f / form :mod (f2 / form)) :op2 (e / eye :part-of (p3 / person))) :arg1-of (r / resemble-01 :arg2 (f3 / face-01 :arg0 (p4 / person) :arg1 (a4 / and :op1 (f4 / form) :op2 (e2 / eye))))) :mod (a5 / actual)))
(m / multi-sentence :snt1 (w / write-01 :arg0 (p / person :arg0-of (u / use-01 :arg1 (t / twitter)) :mod (a / another)) :arg1 (w2 / write-01 :arg0 (p2 / person))) :snt2 (b / byronmacdonald :mode (i / interrogative) :mod (w3 / wow)))
(l / live-01 :arg0 (f / family) :location (h / house) :arg1-of (c / cause-01 :arg0 (c2 / call-01 :arg1 (f2 / family) :arg2 (t / temporal-quantity :quant (N / N-A) :unit (y / year)) :location (h2 / house) :arg1-of (r / regular-02))))
(h / hope-01 :arg0 (i / i) :arg1 (a / and :op1 (d / donate-01 :arg0 (d2 / develop-01 :mod (t / this))) :op2 (m / message-01 :arg0 (i2 / i) :arg1 (t2 / tolerate-01 :polarity - :arg1 (b / behave-01 :arg0 (p / person :arg0-of (a2 / anti-social)) :mod (s / some))))))
FAILED_TO_PARSE#Number of opening and closing brackets doesn't match.
(s / say-01 :arg2 (p / person :name (n / name :op1 "N-A")))
(w / win-01 :arg0 (a / athletes :arg1-of (l / light-06) :poss (c / country)) :arg1 (d / drone :mod (l2 / light)) :location (w2 / wm :quant 2015 :location (p / peking)))
(c / convince-01 :arg0 (p / person :name (n / name :op1 "N-A") :arg0-of (h / have-org-role-91 :arg1 (d / democrat :part-of (s / senate)) :arg2 (a / anführer))) :arg1 (n2 / nominate-01 :arg0 (s2 / surgeon :mod (h2 / hillary)) :arg1 (p2 / person :arg0-of (h3 / have-org-role-91 :arg3 (j / judge-01))) :arg3 (g / gericht :arg1-of (h4 / high-02 :degree (m / most)))) :arg2 (p3 / person :arg0-of (h5 / have-org-role-91 :arg1 (d2 / democrat) :arg3 (l / lead-02 :arg0 (p4 / person) :arg1 (d3 / democrat)))))
(e / eddy :mod (r / recall) :location (a / around :op1 (t / term)))
(e / effect-03 :arg0 (c / change-01 :arg1 (c2 / car)) :arg1 (e2 / effect-03 :polarity - :arg0 (c3 / change-01) :mod (n / negative)) :mod (o / of-course))
(b / believe-01 :arg0 (p / person :quant 25 :arg1-of (w / work-09 :arg2 (p2 / person :arg0-of (h / have-rel-role-91 :arg2 (s / sister))))) :arg1 (b2 / believe-01 :arg0 (i / i) :arg1 (a / apply-02 :arg1 (c / customer :quant (m / many) :arg1-of (m2 / meet-01 :arg0 (c2 / customer :quant (m3 / many)))) :arg2 (p3 / profile :mod (y / yougov))) :mod (a2 / also)) :li 25)
(c / court :mod (c2 / country :name (n / name :op1 "N-A")))
(i / implement-01 :arg0 (t / they) :arg1 (a / and :op1 (a2 / accommodation :mod (o / offer-01 :arg0 (a3 / and :op1 (b / business :mod (p / provisional)) :op2 (r / restaurant))) :op2 (o2 / offer-01 :arg0 (p2 / person :mod (e / emergency)) :arg1 (a4 / and) :mod (e2 / emergency)) :frequency (o3 / often))))
FAILED_TO_PARSE#Number of opening and closing brackets doesn't match.
(a / and :op1 (g / go-06 :arg0 (i / i) :arg1 (o / offer-01 :arg0 (i2 / it)) :arg2 (t / thing :arg1-of (o2 / offer-01 :arg0 (i3 / it))) :mod (o3 / only)) :op2 (h / have-03 :arg0 (i4 / i) :arg1 (p / person :quant (m / more-than :op1 100000) :arg0-of (u / use-01))))
(m / multi-sentence :snt1 (a / and :op1 (c / change-01 :arg0 (p / political-party :name (n / name :op1 "N-A")) :arg1 (t / time :quant (1 / 1/2)) :arg2 (t2 / time :quant (12 / 1/2))) :op2 (c2 / close-01 :arg0 (c3 / country) :arg1 (g / gap :mod (f / fijianische))) :op3 (c4 / close-01 :arg0 (c5 / country) :arg1 (g2 / gap :mod (f2 / fijianische)) :time (a2 / after :op1 (n2 / now) :quant (h / half :ord (o / ordinal-entity :value 1))))) :snt2 (g3 / good :arg1 (t3 / thing :arg2-of (c6 / condition-01 :arg1 (t4 / time :ord (o2 / ordinal-entity :value 1)))) :time (u / until :op1 (a3 / after :op1 (z / zwischenplay :mod (b / brillianten) :consist-of (f3 / fiji))))))
(h / human :mod (o / old :degree (m / more)) :arg0-of (l / live-01 :manner (a / alone) :manner (w / way :mod (s / such))) :arg0-of (c / cause-01 :arg1 (c2 / concentrate :polarity - :arg0 (h2 / human) :arg1 (h3 / human) :mod (o2 / only))))
(a / and :op1 (s / show-01 :arg0 (s2 / study-01 :mod (s3 / some) :arg0-of (r / react-01 :arg1 (s4 / sensitively :degree (m / more)) :prep-to (p / person :arg0-of (m2 / mine-01)))) :arg1 (e / equal-01 :arg1 (w / woman) :arg2 (o / or :mode (i / interrogative) :op1 (m3 / mothers :arg1 (i2 / it) :time (a2 / already)) :op2 (r2 / report-01 :polarity - :arg0 (w2 / woman))) :arg1-of (c / complete-02)) :mod (a3 / also)) :op2 (r3 / report-01 :arg0 (s5 / study-01) :arg1 (s6 / scheumann :mod (b / biologists))))
(a / and :op1 (r / refer-01 :arg0 (w / world :mod (o / old) :mod (o2 / old)) :arg1 (i / income :poss (s / supplement :mod (f / food)))) :op2 (f2 / fail-01 :arg1 (b / barrier :poss (a2 / agency :mod (w2 / world) :arg0-of (h / have-org-role-91 :arg1 (a3 / agency :mod (w3 / world))))) :arg2 (m / milder)) :op3 (r2 / run-02 :arg0 (j / july :quant 13) :time (a4 / already)))
(a / activity-06 :arg1 (s / streetscooter) :location (r / road :quant (b / between :op1 2014 :op2 2014)))
(m / multi-sentence :snt1 (p / process :mode (i / interrogative) :arg1 (p2 / process-02 :mod (t / this))) :snt2 (d / delay-01 :mode (i2 / interrogative) :arg0 (a / and :op1 (p3 / person :arg0-of (a2 / analyze-01)) :op2 (p4 / person :arg0-of (a3 / analyze-01))) :arg1 (t2 / thing :arg1-of (o / opine-01 :arg0 (t3 / thing :arg1-of (o2 / opine-01 :arg0 (t4 / thing :arg1-of (o3 / opine-01 :arg0 (t5 / thing :arg1-of (o4 / opine-01 :arg0 (t6 / thing :arg1-of (o5 / opine-01 :arg0 (t7 / thing :arg1-of (o6 / opine-01 :arg0 (t8 / thing :arg1-of (o7 / opine-01 :arg0 (t9 / thing :arg1-of (o8 / opine-01 :arg0 (t10 / thing :arg1-of (o9 / opine-01 :arg0 (t11 / thing :arg1-of (o10 / opine-01 :arg0 (t12 / thing :arg1-of (o11 / opine-01 :arg0 (i3 / i)))))))))))))))))))))))))
(a / and :op1 (c / come-01 :arg1 (y / year :quant 2012) :arg3 (i / it)) :op2 (g / go-08 :arg1 (e / everything) :arg2 (w / wrong)) :time (t / then))
(c / contrast-01 :arg2 (f / feel-01 :arg0 (i / i) :arg1 (a / amr-unknown :time (w / watch-01 :arg0 (i2 / i) :arg1 (p / play-02 :arg0 (s / something :mod (t / this)) :arg1 (s2 / something)))) :mod (a2 / also)))
(s / say-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (r / radio :mod (c / conservative)) :arg2 (m / moderator))) :arg1 (h2 / help-01 :arg0 (p2 / person) :arg1 (w / want-01 :arg0 (p3 / person) :arg1 (w2 / weaken-01 :arg0 (p4 / person) :arg1 (s2 / state-01 :arg0 (p5 / person) :arg1 (w3 / want-01 :arg0 (p6 / person) :arg1 (k / know-01 :arg0 (p7 / person) :arg1 (w4 / want-01 :arg0 (p8 / person) :arg1 (k2 / know-01 :arg0 (p9 / person) :arg1 (w5 / want-01 :arg0 (p10 / person) :arg1 (k3 / know-01 :arg0 (p11 / person) :arg1 (w6 / want-01 :arg0 (p12 / person) :arg1 (k4 / know-01 :arg0 (p13 / person) :arg1 (w7 / want-01 :arg0 (p14 / person) :arg1 (k5 / know-01 :arg0 (p15 / person) :arg1 (w8 / want-01 :arg0 (p16 / person) :arg1 (k6 / know-01 :arg0 (p17 / person) :arg1 (w9 / want-01 :arg0 (p18 / person) :arg1 (k7 / know-01 :arg0 (p19 / person) :arg1 (w10 / want-01 :arg0 (p20 / person) :arg1 (k8 / know-01 :arg0 (p21 / person) :arg1 (w11 / want-01 :arg0 (p22 / person) :arg1 (k9 / know-01 :arg0 (p23 / person))))))))))))))))))))))) :arg2 (r2 / radio :mod (c2 / conservative)))
(a / and :op1 (h / have-condition-91 :arg1 (a2 / animal :arg1-of (l / long-03 :arg2 (d / distance-quantity :quant (N / N-A) :unit (k / kilometer) :mod (f / full)))) :arg2 (d2 / depend-01 :arg0 (a3 / animal) :arg1 (a4 / animal))) :op2 (h2 / half :degree (m / most) :compared-to (s / speed :mod (s2 / speed :mod (m2 / maximum)) :prep-with (s3 / speed :mod (t / this)))) :condition (d3 / depend-01 :arg0 (i / it) :arg1 (i2 / it)))
(s / say-01 :arg0 (p / person :arg0-of (r / research-01) :arg1-of (k / know-02 :arg2 (p2 / person :arg0-of (r2 / research-01)))) :arg1 (k2 / know-01 :arg0 (p3 / person)))
(h / have-condition-91 :arg1 (g / get-01 :arg0 (p / person :mod (e / ethnic-group :name (n / name :op1 "N-A"))) :arg1 (g2 / generation :mod (n2 / new) :mod (o / only))) :arg2 (g3 / get-01 :arg0 (p2 / person :mod (e2 / ethnic-group :name (n3 / name :op1 "N-A"))) :arg1 (g4 / generation :mod (n4 / new) :mod (o2 / only))))
(i / indicate-01 :arg0 (a / and :op1 (p / person :arg0-of (h / have-org-role-91 :arg2 (h2 / head-of-state))) :op2 (p2 / person :arg0-of (h3 / have-org-role-91 :arg2 (l / lawyer))) :op3 (l2 / lawyer :poss (p3 / person))) :arg1 (i2 / inspect-01 :arg1 (t / tax-01)) :arg2 (r / reason :arg0-of (c / cause-01 :arg1 (r2 / refuse-01 :arg0 (o / office :mod (r3 / revenue))))))
(c / cause-01 :arg0 (s / stand-01 :arg1 (a / and :op1 (r / round :ord (o / ordinal-entity :value 1)) :op2 (r2 / round :quant 22.42 :mod (f / final))) :time (t / today) :time (d / day :ord (o2 / ordinal-entity :value 2) :part-of (w / wettbewers :arg1-of (s2 / stand-01 :arg2 (s3 / security))))) :arg1 (f2 / focus-01))
(r / request-01 :arg0 (w / we) :arg1 (a / and :op1 (p / person :arg0-of (h / have-org-role-91 :arg1 (p2 / person :arg0-of (h2 / have-org-role-91 :arg1 (f / federal) :arg2 (m / minister :mod (f2 / federal)))) :arg2 (m2 / minister :mod (c / chief)))) :op2 (p3 / person :arg0-of (h3 / have-org-role-91 :arg1 (f3 / federal) :arg2 (m3 / minister :mod (f4 / federal)))) :op3 (p4 / person :arg0-of (h4 / have-org-role-91 :arg1 (c2 / country :arg0-of (h5 / have-org-role-91 :arg2 (q / queen))) :arg2 (m4 / minister :topic (j / justice)))) :op4 (p5 / person :arg0-of (h6 / have-org-role-91 :arg1 (c3 / country :arg0-of (h7 / have-org-role-91 :arg2 (q2 / queen))) :arg2 (m5 / minister :topic (j2 / justice)))) :op5 (p6 / person :arg0-of (h8 / have-org-role-91 :arg1 (c4 / country :arg0-of (h9 / have-org-role-91 :arg2 (q3 / queen))) :arg2 (m6 / minister :mod (v / vice))))) :purpose (w2 / waiving :arg0 (w3 / we) :arg1 (c5 / cut-02 :mod (t / this))) :arg0-of (c6 / cause-01 :arg1 (p7 / possible-01 :arg1 (r2 / receive-01 :arg0 (p8 / person) :arg1 (a2 / assist-01 :arg1-of (l / legal-02))))))
(t / time :time-of (v / view-02 :arg1 (n / need-01 :arg0 (a / and :op1 (c / center :mod (c2 / community) :mod (c3 / community)) :op2 (c4 / community :mod (c5 / customer) :poss (t2 / they))) :arg1 (w / work-01 :arg0 (g / government-organization :arg0-of (g2 / govern-01)) :arg1 (w2 / work-01 :mod (i / important) :mod (t3 / this))))) :time (n2 / now))
(a / accuse-01 :arg0 (c / campaign-01 :mod (e / elect-01) :mod (t / trumps)) :arg1 (p / person :arg1-of (e2 / employ-01)) :time (a2 / after :op1 (p2 / pull-01 :arg0 (w / weapon :arg1-of (a3 / allege-01)) :arg1 (p3 / person :arg1-of (e3 / employ-01)))))
(a / and :op2 (c / come-01 :arg1 (p / person :arg0-of (p2 / provide-01 :arg1 (a2 / and :op1 (c2 / company :arg0-of (p3 / provide-01)) :op2 (g / group :mod (t / telecommunication)))) :time (c3 / current) :mod (w / well))))
(a / announce-01 :arg0 (p / person :name (n / name :op1 "N-A") :arg1-of (p2 / publish-01 :time (a2 / after :op1 (a3 / adolescence) :quant (b / between :op1 (t / temporal-quantity :quant (N / N-A) :unit (d / day)) :op2 (t2 / temporal-quantity :quant (N2 / N-A) :unit (d2 / day)) :mod (o / only))))) :arg1 (a4 / announce-01 :arg0 (o2 / office :mod (p3 / post) :mod (p4 / post)) :arg1 (p5 / possible-01 :arg1 (u / update-01 :arg0 (p6 / person :arg0-of (u2 / use-01)) :arg1 (f / filter :poss (o3 / office) :location (p7 / program)) :purpose (b2 / block-01 :arg0 (p8 / person) :arg1 (a5 / advertisements :location (n2 / network :mod (s / society))) :arg1-of (p9 / possible-01))))) :time (a6 / after :op1 (e / expel-01 :arg0 (p10 / person) :arg1 (b3 / blockings :mod (b4 / broadcast-program :name (n3 / name :op1 "N-A"))) :location (s2 / side :mod (d3 / desktop) :poss (p11 / person)))) :mod (p12 / plus))
(m / multi-sentence :snt1 (w / want-01 :polarity - :arg0 (a / amr-unknown) :arg1 (i / invest-01 :arg0 (a2 / amr-unknown) :arg2 (m2 / much :degree (s / so)))) :snt2 (s2 / start-01 :arg1 (c / car :arg1-of (s3 / start-01 :arg3 (m3 / monetary-quantity :quant 20000 :unit (e / euro)))) :arg3 (m4 / monetary-quantity :quant 23000 :unit (e2 / euro))))
(m / multi-sentence :snt1 (c / cause-01 :arg0 (e / endanger-01 :arg1 (t / traffic :mod (a / air) :arg1-of (a2 / average-01 :arg2 (t2 / traffic :mod (a3 / air))) :arg1-of (a4 / average-01 :arg2 (t3 / traffic :mod (a5 / air))))) :arg1 (a6 / az :arg0 (c2 / court :mod (r / region) :arg1-of (h / high-02 :degree (m2 / more))) :arg1 (a7 / az :quant (b / between :op1 18 :op2 124)))) :snt2 (u / u :li 124 :arg1 (/ / / :quant 124)))
(h / have-03 :polarity - :arg0 (p / person :quant 1) :arg1 (i / investigate-01 :arg0 (p2 / person)) :mod (a / actual))
FAILED_TO_PARSE#Number of opening and closing brackets doesn't match.
(r / recommend-01 :arg1 (h / hold-01 :arg0 (p / person :quant 1) :arg1 (i / it) :mod (a / also)) :arg2 (c / country) :mod (e / exact))
(r / recognize-02 :arg0 (p / person :quant (a / around :op1 21.30) :arg0-of (h / have-org-role-91 :arg1 (p2 / person :arg0-of (h2 / have-org-role-91 :arg2 (o / official :mod (c / civilian)))) :arg2 (o2 / official))) :arg1 (g / gang) :mod (a2 / again) :arg0-of (a3 / admit-01 :arg1 (p3 / policeman :arg0-of (a4 / admit-01 :arg1 (p4 / policeman) :source (c2 / crime-02 :time (p5 / past))))) :mod (a5 / again))
(a / and :op1 (c / commit-02 :arg0 (a2 / and :op1 (w / woman :quant 2) :op2 (m / man :quant 2)) :arg1 (a3 / and :op1 (w2 / woman :quant 2) :op2 (m2 / man :quant 2)) :time (s / since) :time (m3 / middle :op1 (m4 / middle :part-of (y / year :mod (t / this))))) :op2 (t2 / thereby :arg1 (a4 / and) :arg2 (l / level :mod (c2 / community)) :mod (p / particular)))
(m / multi-sentence :snt1 (c / concern-01 :arg0 (a / act-02 :arg0 (p / person :arg0-of (c2 / concern-01 :arg1 (v / violence)))) :arg1 (s / she)) :snt2 (a2 / appeasing :polarity - :domain (p2 / person :mod (c3 / certain :polarity -))))
(s / say-01 :arg0 (a / and :op1 (p / person :arg0-of (h / have-org-role-91 :arg1 (p2 / person :arg0-of (h2 / have-rel-role-91 :arg2 (s2 / son))) :arg2 (s3 / spokesman))) :op2 (p3 / person :arg0-of (h3 / have-rel-role-91 :arg1 (p4 / person) :arg2 (d / daughter)))) :arg1 (a2 / and :op1 (s4 / shock-01 :arg1 (t / they)) :op2 (d2 / destroy-01 :arg1 (t2 / they) :location (g / ground))))
(w / wage-01 :arg0 (w2 / wage-01 :arg1 (m / monetary-quantity :quant 7.25 :unit (d / dollar)) :mod (m2 / minimum) :time (c / current)))
(c / conduct-01 :arg0 (m / media :mod (s / state-controlled)) :arg1 (a / attack-01 :arg1 (a2 / ankara) :mod (f / full)) :duration (m2 / multiple :op1 (t / temporal-quantity :quant (N / N-A) :unit (m3 / month))))
(d / differ-02 :mod (b / big :degree (m / most)) :arg1-of (c / contrast-01 :arg2 (s / serve-01 :arg0 (a / and :op1 (c2 / country :name (n / name :op1 "N-A")) :op2 (p / person :arg0-of (s2 / support-01 :arg1 (s3 / side :arg0-of (o / oppose-01))))) :arg1 (s4 / side :arg0-of (o2 / oppose-01)))) :mod (b2 / big :degree (m2 / most)))
(c / claim-01 :arg0 (m / man :mod (b / both)) :arg1 (r / resign-01 :arg0 (m2 / man :mod (b2 / both)) :arg1 (r2 / request-01 :arg0 (m3 / man))) :medium (m4 / meet-03 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg2 (p2 / president))) :medium (t / television)))
(l / lead-03 :arg0 (r / rise-01 :arg1 (g / game) :arg1-of (s / significant-02 :arg1-of (p / possible-01 :polarity -))) :arg2 (r2 / rise :arg1 (g2 / game)) :frequency (r3 / rate-entity-91 :arg3 (t / temporal-quantity :quant (N / N-A) :unit (d / day))) :location (w / we))
(s / say-01 :arg0 (s2 / station) :arg1 (s3 / spotted :arg1 (b / boy) :location (s4 / seat :mod (f / front) :part-of (c / car :arg1-of (b2 / be-located-at-91 :arg2 (c2 / condition :arg1-of (c3 / critical-02)))))))
(p / possible-01 :arg1 (w / witness-01 :arg0 (p2 / person :mod (w2 / world)) :arg1 (p3 / perform-02 :arg0 (w3 / world :mod (t / three-time)) :arg1 (a / and :op1 (b / biles) :op2 (d / douglas) :op3 (d2 / douglas)) :mod (i / incredible)) :arg1-of (c / cause-01 :arg0 (d3 / deliver-01 :arg0 (w4 / world) :arg1 (u / unexpected :mod (g / gymastic))))) :time (n / now))
(b / become-01 :arg1 (h / he) :arg2 (f / fair :prep-to (r / reputation :poss (h2 / he))) :medium (f2 / film))
(a / and :op1 (f / fascinate-01 :arg0 (s / something :arg1-of (s2 / see-01 :arg0 (y / you)))) :op2 (e / explain-01 :arg0 (s3 / something) :arg1 (b / benefit-01 :arg1 (p / person :mod (p2 / probiotics))) :mod (a2 / also)))
(m / multi-sentence :snt1 (h / have-03 :arg0 (w / we) :arg1 (p / problem :mod (h2 / huge) :topic (u / utah))) :snt2 (s / say-01 :arg0 (p2 / person :arg0-of (a / ask-01 :arg1 (s2 / support-01 :arg0 (p3 / person) :arg1 (h3 / he) :topic (s3 / state :arg1-of (k / key-02) :example (o / or :op1 (o2 / ohio) :op2 (f / florida) :op3 (v / virginia)))))) :arg1 (p4 / problem :mod (h4 / huge))))
(m / multi-sentence :snt1 (d / do-02 :arg0 (h / he) :arg1 (t / truth)) :snt2 (t2 / tell-01 :mode (i / imperative) :arg0 (y / you) :arg1 (t3 / truth)))
(t / threaten-01 :arg0 (t2 / threaten-01 :arg0 (c / country :name (n / name :op1 "Kenya")) :mod (s / subsequent)) :time (a / after :op1 (a2 / affair :mod (d / doping) :ord (o / ordinal-entity :value 2) :location (o2 / olympics))))
(w / work-01 :arg0 (m / magazine :name (n / name :op1 "N-A") :mod (t / treats)) :arg1 (b / bring :arg0 (m2 / magazines) :arg1 (s / snow :quant (1 / 1970s) :mod (p / pirelli-inspired)) :arg3 (s2 / score-entity :op1 (12 / 1970s) :op2 2017)))
(a / and :op1 (b / be-located-at-91 :arg1 (b2 / business :mod (f / family)) :arg2 (h / here) :time (f2 / final)) :op2 (r / refer-01 :arg0 (b3 / business) :arg1 (h2 / history :arg1-of (l / long-03))))
(d / doubt-01 :polarity - :arg1 (r / return-01 :arg1 (h / he) :arg4 (w / work-01) :time (a / after :op1 (e / end-01 :arg1 (w2 / work-01 :arg1 (t / transnational))))))
(c / contrast-01 :arg2 (s / status :mod (t / tolerance) :prep-with (t2 / terror) :domain (a / amr-unknown)))
(m / meet-01 :arg0 (s / slash :op1 (p / person :arg0-of (h / have-org-role-91 :arg2 (v / vw))) :op2 (p2 / person :arg0-of (k / kba))) :arg1 (t / thing :arg2-of (o / obligate-01 :arg1 (c / commission :mod (i / investigative) :poss (i2 / i)))))
(m / make-01 :arg0 (a / and :op1 (r / rate :mod (i / interest :arg1-of (p / penalize-01))) :op2 (l / land :mod (t / thuringian)) :op3 (l2 / land :mod (a2 / altenburger))) :arg1 (h / headlines) :arg2 (b / branch :mod (s / skatbank) :poss (a3 / and)) :arg1-of (c / cause-01 :arg0 (a4 / and :op1 (r2 / rate :mod (i2 / interest :arg1-of (p2 / penalize-01)) :arg1-of (c2 / cost-01 :arg2 (m2 / monetary-quantity :quant 3 :unit (e / euro)))) :op2 (l3 / land :mod (t2 / thuringian)))))
(a / and :op1 (s / stuart :arg0 (p / person :source (a2 / and :op1 (p2 / person :arg0-of (h / have-rel-role-91 :arg1 (i / i) :arg2 (s2 / sister))) :op2 (p3 / person :quant 2 :mod (y / young) :arg0-of (h2 / have-rel-role-91 :arg1 (i2 / i) :arg2 (s3 / sister))) :op3 (m / man :quant 3 :mod (y2 / young)) :op4 (m2 / man :quant 3 :mod (y3 / young)) :op5 (m3 / man :quant 3 :mod (y4 / young)))) :arg1 (i3 / i) :arg2 (a3 / and :op1 (n / number :quant-of (d / data :mod (d2 / data :name (n2 / name :op1 (- / -lrb-))))) :op2 (m4 / man :quant 2 :mod (y5 / young)) :op3 (m5 / man :quant 3) :op4 (m6 / man :quant 3) :op5 (m7 / man :quant 3) :op6 (m8 / man :quant 8) :op6 (m9 / man :quant 8) :op6 (m10 / man :quant 8) :op6 (m11 / man :quant 8) :op7 (m12 / man :arg1-of (a4 / age-01 :arg2 (t / temporal-quantity :quant (N / N-A) :unit (h3 / hour)))) :op7 (w / woman :quant 8))))
(m / multi-sentence :snt1 (r / resemble-01 :arg1 (w / we) :arg2 (p / person :arg0-of (w2 / work-01 :arg2 (s / society)) :poss (t / they))) :snt2 (h / have-03 :arg0 (w3 / we) :arg1 (p2 / person :arg2-of (s2 / staff-01 :arg1 (p3 / person :mod (r2 / record))))))
(m / multi-sentence :snt1 (s / stop-01 :arg0 (i / i) :arg1 (b / business :mod (g / generation :mod (n / new)) :mod (g2 / generation :mod (n2 / new)) :mod (g3 / generation :mod (n3 / new)))) :snt2 (o / outfitters :mode (e / expressive)))
(a / and :op1 (l / lower-05 :arg1 (i / it) :arg2 (o / operation :name (n / name :op1 (m / measure))) :manner (s / simple)) :op2 (l2 / lower-05 :arg1 (i2 / it) :arg2 (o2 / operation :name (n2 / name :op1 (s2 / smooth)) :arg1-of (s3 / smooth) :mod (a2 / also))) :prep-in (o3 / order))
(i / introduce-02 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (p2 / political-party :name (n / name :op1 "N-A")))) :arg1 (c / change-01 :mod (f / fundamental)) :arg2 (a / and :op1 (c2 / change-01 :arg0 (p3 / person) :arg1 (g / gap :mod (f2 / fijian))) :op2 (c3 / close-01 :arg0 (p4 / person) :arg1 (g2 / gap :mod (f3 / fijian))) :duration (t / temporal-quantity :quant (N / N-A) :unit (m / minute) :mod (w / whole))) :time (u / until :op1 (g3 / go-06 :arg0 (t2 / tuisova) :arg1 (m2 / midplay :arg1-of (b / brilliant-01) :arg1-of (r / run-01 :arg0 (f4 / fiji))))))
(c / contrast-01 :arg1 (a / affect-01 :arg0 (d / duty :mod (i / import-01) :topic (i2 / import-01 :arg1 (i3 / import-01))) :arg1 (e / effect)) :arg2 (e2 / emerge-02 :arg0 (p / puzzle-01 :arg1 (e3 / economy) :location (c2 / country :name (n / name :op1 "N-A")))))
(a / and :op1 (s / sing-01 :arg0 (s2 / seniors :degree (m / most)) :arg1 (a2 / ant)) :op2 (s3 / share-01 :arg0 (i / i) :arg1 (t / thing :arg2-of (t2 / tattoo-01 :arg1 (m2 / music :name (n / name :op1 (d / describing)))))))
(a / and :op1 (- / -lrb- :arg1 (r / rate-entity-91 :arg1 100 :arg2 (t / temporal-quantity :quant (N / N-A) :unit (y / year))) :arg2 (-2 / -lrb- :name (n / name :op1 (j / jamaica) :op2 (j2 / jamaica) :op3 (j3 / jamaica) :op4 (w / world) :op5 (w2 / world) :op6 (w3 / world) :op7 (w4 / world)))) :op2 (o / obligate-01 :arg1 (a2 / and :op1 (c / champion :name (n2 / name :op1 (t2 / two-time))) :op2 (w5 / world :mod (s / seven-time))) :arg2 (s2 / sit-down-02 :arg1 (a3 / and)) :time (a4 / after :op1 (p / prove-01 :arg1 (t3 / take-01 :arg1 (i / it) :arg3 (o2 / oxycodon))))) :li 100)
(h / have-03 :arg0 (s / she) :arg1 (t / toothaches :arg1-of (s2 / strong-02)) :time (a / after :op1 (s3 / surgery-01 :arg1 (s4 / she) :arg2 (d / defend-01 :arg0 (s5 / she) :arg1 (2 / 29-year-old)))))
(s / say-01 :arg0 (p / police) :arg1 (a / and :op1 (k / kill-01 :arg1 (p2 / person :mod (c / country :name (n / name :op1 "N-A")))) :op2 (i / injure-01 :arg1 (p3 / person :quant (a2 / about :op1 20)) :arg2-of (i2 / include-01 :arg1 (a3 / and :op1 (p4 / person :quant 3) :op2 (p5 / person :quant 3 :mod (e / ethnic-group :name (n2 / name :op1 "N-A"))) :op3 (p6 / person :quant 3 :mod (e2 / ethnic-group :name (n3 / name :op1 "N-A"))) :op4 (p7 / person :quant 3 :arg0-of (h / have-org-role-91 :arg2 (h2 / head-of-state))))))))
(s / say-01 :arg0 (p / person :name (n / name :op1 "maassen")) :arg1 (a / agree-01 :arg0 (a2 / authority :poss (h / he)) :arg1 (o / office :mod (n2 / nation)) :manner (c / close)))
(k / know-02 :polarity - :arg1 (p / person :arg2-of (s / suspect-01) :arg1-of (i / include-91 :arg2 (p2 / person :arg2-of (s2 / suspect-01 :arg1 (a / attack-01 :mod (a2 / asylum-shelter))) :quant (m / many)))) :arg2 (o / or :op1 (p3 / person :arg2-of (c / criminal-03)) :op2 (p4 / person :arg0-of (s3 / support-01 :arg1 (s4 / scene :mod (r / right)))) :manner (p5 / political)))
(p / prepare-02 :arg1 (p2 / person :mod (a / all) :arg0-of (h / have-org-role-91 :arg2 (h2 / habite))) :arg2 (r / race :mod (b / big)) :arg1-of (c / cause-01 :arg0 (p3 / prepare-02)))
(l / lead-03 :arg0 (g / gfk) :time (a / after :op1 (d / disappoint-01)))
(d / detail-01 :mode (i / imperative) :arg0 (y / you) :arg1 (w / want-01 :arg0 (y2 / you) :arg1 (c / call-01 :arg0 (y3 / you) :arg1 (p / person :arg0-of (h / have-org-role-91 :arg1 (c2 / corporation) :arg2 (g / governor :mod (v / vice)))) :arg2 (f / friday)) :degree (t / total)))
(r / report-01 :arg0 (r2 / report :mod (a / anonymous) :arg1-of (c / create-01 :arg0 (a2 / and :op1 (p / person :arg0-of (h / have-org-role-91 :arg1 (c2 / committee :mod (f / force :arg1-of (a3 / arm-01)) :arg0-of (h2 / have-org-role-91 :arg1 (c3 / committee :mod (f2 / force :arg1-of (a4 / arm-01))) :arg2 (m / member))) :arg2 (m2 / member))) :op2 (p2 / person :arg0-of (h3 / have-org-role-91 :arg1 (c4 / committee :mod (i / intelligence)) :arg2 (m3 / member))) :op3 (p3 / person :arg0-of (h4 / have-org-role-91 :arg1 (a5 / agency :mod (i2 / intelligence)) :arg2 (m4 / member))) :op4 (r3 / report-01 :arg0 (p4 / person :arg0-of (a6 / analyze-01 :arg1 (i3 / intelligence)) :mod (c5 / central))) :op5 (r4 / report-01 :arg0 (p5 / person :arg0-of (a7 / analyze-01 :arg1 (i4 / intelligence)) :mod (c6 / central))))) :arg1 (c7 / change-01 :arg0 (p6 / person :arg0-of (a8 / analyze-01 :arg1 (i5 / intelligence)) :mod (c8 / central)) :arg1 (f3 / fight-01 :arg0 (p7 / person) :arg1 (s / state :mod (r5 / religious-group :name (n / name :op1 "N-A")))) :manner (a9 / anonymous))))
(c / contrast-01 :arg1 (' / ' :arg0 (t / they) :arg1 (o / or :op1 (l / line :name (n / name :op1 (f / finishing))) :op2 (p / point :arg1-of (s / start-01)) :op3 (p2 / point :arg1-of (s2 / start-01)) :mod (j / just))) :arg2 (g / goal :mod (h / hitch :mod (a / another)) :mod (a2 / another) :domain (o2 / or :op1 (w / world) :op2 (o3 / olympics))))
(b / broadcast-01 :arg0 (p / person :mod (i / independent)) :arg1 (t / temporal-quantity :quant (N / N-A) :unit (h / hour) :mod (f / final)) :arg2 (b2 / block-01 :arg1 (b3 / block :quant 14.00) :time (a / afternoon :mod (l / last))))
(f / feel-02 :arg0 (a / and :op1 (p / person :arg0-of (h / have-org-role-91 :arg1 (g / group :mod (e / ethnic) :part-of (g2 / group :mod (e2 / ethnic))) :arg2 (m / member))) :op2 (p2 / person :arg0-of (h2 / have-org-role-91 :arg1 (g3 / group :mod (e3 / ethnic) :part-of (t / tigridge)) :arg2 (m2 / member))) :op3 (p3 / person :arg0-of (h3 / have-org-role-91 :arg1 (g4 / group :mod (e4 / ethnic) :part-of (t2 / tigridge)) :arg2 (m3 / member))) :op4 (p4 / person :arg0-of (h4 / have-org-role-91 :arg1 (g5 / group :mod (e5 / ethnic)) :arg2 (m4 / member))) :op5 (p5 / person :arg0-of (h5 / have-org-role-91 :arg1 (g6 / group :mod (e6 / ethnic)) :arg2 (m5 / member)))) :arg1 (a2 / and :op1 (m6 / military) :op2 (t3 / trade-01) :op3 (t4 / trade-01) :op4 (p6 / politics)))
(c / contrast-01 :arg2 (b / bring-up-02 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (h2 / henchmen :name (n / name :op1 (m / mr.) :op2 (t / trumps))) :arg2 (h3 / henchmen))) :arg1 (p2 / person :arg0-of (p3 / protest-01 :arg1 (f / fellow)) :mod (f2 / fellow) :mod (f3 / fellow) :poss (p4 / person)) :arg2 (s / situation :arg1-of (c2 / comfortable-02)) :purpose (f4 / face-01 :arg0 (p5 / person) :arg1 (h4 / he)) :concession (t2 / thing :manner-of (p6 / provocative :domain (t3 / thing :arg1-of (s2 / state-01 :arg0 (h5 / he))))) :arg1-of (c3 / cause-01 :arg0 (f5 / focus-01 :arg0 (t4 / thing :arg1-of (s3 / state-01 :arg0 (p7 / person :arg0-of (h6 / have-org-role-91 :arg2 (p8 / president)))))))))
(u / use-01 :arg0 (p / person :mod (c / country :name (n / name :op1 "N-A"))) :arg1 (d / distributor :arg1-of (s / same-01 :arg2 (d2 / distributor :mod (s2 / same)))) :arg2 (m / model :mod (s3 / same)))
(b / be-temporally-at-91 :arg1 (d / diameter :poss (s / she)) :arg2 (a / announce-01 :arg0 (t / they) :arg1 (a2 / animal :quant 6 :accompanier (s2 / station)) :time (b2 / before :op1 (s3 / spitsbergen-altitude :arg1 (a3 / animal)))))
(r / recommend-01 :arg1 (i / invest-01 :arg0 (a / animal :mod (l / large :degree (v / very))) :arg1 (r2 / resource :poss (a2 / animal)) :arg2 (l2 / life :arg1-of (l3 / long-03))) :arg1-of (i2 / instead-of-91))
(a / available-02 :arg2 (p / passport :arg1-of (c / call-01 :manner (s / so))) :location (c2 / country :name (n / name :op1 "N-A")) :time (n2 / now))
(c / contrast-01 :arg1 (h / home :domain (l / luxembourg) :prep-to (i / industry :mod (f / fund-01) :mod (l2 / large))) :arg2 (i2 / infrastructure :mod (d / dublin)))
(s / support-01 :arg0 (p / person :name (n / name :op1 "Clinton")) :arg1 (s2 / scheme :arg1-of (n2 / name-01 :arg2 (a / and :op1 (p2 / person :arg0-of (i / invest-01)) :op2 (p3 / person :arg0-of (i2 / invest-01))) :arg0-of (e / ensure-01 :arg1 (e2 / earn-01 :arg0 (p4 / person :arg0-of (i3 / invest-01)) :arg1 (r / rate-entity-91 :arg1 (m / more-than :op1 (m2 / monetary-quantity :quant 1 :unit (d / dollar))) :arg2 (t / temporal-quantity :quant (N / N-A) :unit (y / year))) :arg3 (r2 / rate-entity-91 :arg1 (m3 / more-than :op1 30) :arg2 (t2 / temporal-quantity :quant (N2 / N-A) :unit (y2 / year))))))))
(m / multi-sentence :snt1 (r / review-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (r2 / roots :mod (c / country :name (n / name :op1 "N-A"))) :arg2 (d / director)) :arg0-of (h2 / have-org-role-91 :arg1 (c2 / company :name (n2 / name :op1 "N-A")) :arg2 (d2 / director))) :arg1 (r3 / review-01 :arg0 (m2 / media) :arg1 (m3 / media)) :time (a / after :op1 (h3 / have-03 :arg0 (p2 / person) :arg1 (b / betrayed)))) :snt2 (l / list-01 :arg0 (g / guest :mod (a2 / arab)) :arg1-of (c3 / conform-01 :arg2 (e / employee)) :arg1-of (c4 / conform-01 :arg2 (e2 / employee))))
(a / and :op1 (s / spend-02 :arg0 (a2 / and :op1 (p / person :arg0-of (h / have-rel-role-91 :arg2 (c / child))) :op2 (p2 / person :arg0-of (h2 / have-rel-role-91 :arg1 (p3 / person) :arg2 (c2 / child)))) :arg1 (a3 / and :op1 (p4 / person :arg0-of (h3 / have-rel-role-91 :arg1 (c3 / child) :arg2 (c4 / child))) :op2 (p5 / person :arg0-of (h4 / have-rel-role-91 :arg1 (p6 / person) :arg2 (c5 / child))) :op3 (p7 / person :arg0-of (h5 / have-rel-role-91 :arg1 (p8 / person) :arg2 (c6 / child))) :op4 (p9 / person :arg0-of (h6 / have-rel-role-91 :arg1 (p10 / person) :arg2 (c7 / child))) :op5 (p11 / person :arg0-of (h7 / have-rel-role-91 :arg1 (p12 / person) :arg2 (c8 / child))) :op6 (p13 / person :arg0-of (h8 / have-rel-role-91 :arg1 (p14 / person) :arg2 (c9 / child))) :op6 (p15 / person :arg0-of (h9 / have-rel-role-91 :arg1 (p16 / person) :arg2 (c10 / child))) :op7 (p17 / person :arg0-of (h10 / have-rel-role-91 :arg1 (c11 / child) :arg2 (c12 / child))))) :op2 (r / release-01 :arg1 (p18 / person :arg0-of (h11 / have-rel-role-91 :arg1 (c13 / child) :arg2 (c14 / child))) :time (s2 / summer :arg1-of (n / near-02))))
(s / say-01 :arg0 (p / person :name (n / name :op1 "N-A")) :arg1 (f / feel-05 :arg1 (i / it) :arg2 (f2 / flags :mod (c / country :name (n2 / name :op1 "N-A") :mod (w / whole)) :location (g / grandstand :arg1-of (r / resemble-01 :arg2 (l / london))))))
(b / bad-07 :arg1 (w / we) :degree (s / so) :arg0-of (c / cause-01 :arg1 (w2 / win-01 :arg0 (w3 / we) :mod (a / again) :purpose (w4 / win-01 :arg0 (w5 / we) :mod (a2 / again) :location (o / olympics)))))
(c / contrast-01 :arg1 (b / be-located-at-91 :arg1 (t / they) :arg2 (b2 / behind :op1 (b3 / between :op1 (p / percentage-entity :value (N / N-A)) :op2 (p2 / percentage-entity :value (N2 / N-A)))) :mod (s / still)) :arg2 (l / leave-11 :arg0 (t2 / they) :arg1 (r / rate-entity-91 :arg1 (p3 / percentage-entity :value (N3 / N-A)) :arg2 (t3 / temporal-quantity :quant (N4 / N-A) :unit (y / year))) :time (b4 / before :op1 (l2 / leave-17 :arg1 (p4 / percentage-entity :value (N5 / N-A) :quant-of (p5 / percentage-entity :value (N6 / N-A)))))))
(c / contrast-01 :arg1 (i / ioc :polarity - :time (h / history :ord (o / ordinal-entity :value 1 :range (h2 / history))) :time (h3 / history)) :arg2 (c2 / cas :arg1 (s / sanctioning :arg1 (a / athletes :mod (c3 / case :mod (p / positive))))))
(v / visit-01 :arg0 (p / person :arg1-of (a / age-01 :arg2 (t / temporal-quantity :quant (N / N-A) :unit (y / year)))) :arg1 (h / house :mod (s / small)) :arg1-of (i / initiate-01 :arg0 (a2 / and :op1 (i2 / initiate-01 :arg0 (p2 / person :mod (c / country :name (n / name :op1 "N-A"))) :arg1 (' / '')) :op2 (i3 / initiate-01 :arg0 (p3 / person :arg1-of (a3 / age-01 :arg2 (t2 / temporal-quantity :quant (N2 / N-A) :unit (y2 / year)))) :arg1 (h2 / house :mod (s2 / small))))) :time (d / during :op1 (i4 / initiate-01 :arg1 (j / journey :arg0 (p4 / person :arg0-of (h3 / have-org-role-91 :arg2 ('2 / '')))))))
(r / recommend-01 :arg1 (a / and :op1 (g / get-05 :arg1 (a2 / amr-unknown) :arg2 (m / mess)) :op2 (e / event :mod (a3 / amr-unknown))))
(i / implicate-01 :arg1 (d / differ-01 :arg2 (a / and :op1 (e / energy) :op2 (p / policy :topic (c / climate)))))
(h / have-part-91 :arg1 (v / violence :mod (s / sex)) :arg2 (l / live-01 :arg0 (w / woman) :manner (a / alone)) :mod (a2 / almost))
(l / looks :arg0 (h / he) :arg1 (r / room) :instrument (e / eye :mod (b / big)))
(t / tell-01 :arg0 (a / amr-unknown) :arg1 (e / end-01 :arg1 (e2 / end-01 :arg1 (t2 / they)) :time (a2 / as-soon-as :op1 (a3 / arrive-01 :arg1 (t3 / they) :arg4 (i / island :name (n / name :op1 "N-A"))))) :arg2 (b / bahr))
(m / multi-sentence :snt2 (a / accommodation :quant 2 :mod (c / central) :domain (a2 / accommodation :mod (c2 / central)) :beneficiary (w / woman)))
(a / appoint-01 :arg1 (p / person :arg0-of (h / have-org-role-91 :arg1 (s / service :mod (s2 / security) :mod (f / federal)) :arg2 (c / chairman))) :arg2 (p2 / person :arg0-of (h2 / have-org-role-91 :arg2 (d / deputy))) :time (l / late :op1 (d2 / date-entity :decade (N / N-A))) :li (1 / 1990s))
(s / say-01 :arg0 (h / he) :arg1 (a / and :op1 (' / '' :domain (t / this) :mod (h2 / historic)) :op2 (m / moment :arg1-of (s2 / symbolize-01) :arg1-of (s3 / symbolize-01) :domain (t2 / this))))
(d / deploy-01 :arg1 (s / system :arg0-of (w / warn-01) :mod (f / flood)) :arg2 (a / across :op1 (p / part :mod (l / large) :part-of (s2 / south :part-of (s3 / strait)))) :time (u / until :op1 (s4 / saturday :arg1 (s5 / system))))
(s / say-01 :arg0 (p / person :name (n / name :op1 "N-A")) :arg1 (a / and :op1 (s2 / spread-01 :arg1 (f / flood) :manner (r / rapid) :arg1-of (c / cause-01 :arg0 (c2 / continue-01 :arg1 (r2 / rain-01 :mod (h / heavy))))) :op2 (c3 / consider-02 :arg0 (a2 / authority :mod (t / that)) :arg1 (i / instruct-01 :arg0 (a3 / authority) :arg1 (p2 / person)))))
(o / offer-01 :arg0 (e / explode-01 :mod (t / this)) :arg1 (b / benefit-01 :arg1 (a / and :op1 (p / person :mod (s / school)) :op2 (p2 / person :mod (s2 / school)) :op3 (s3 / succeed-01 :arg0 (p3 / professional)))))
(g / glad-02 :arg0 (l / leak-01 :arg1 (f / film) :arg1-of (d / dirty-02) :mod (t / this) :quant (s / some)) :arg1 (i / i))
(f / find-01 :arg0 (p / person :arg1-of (e / employ-01 :arg0 (h / house-01))) :arg1 (p2 / property) :location (c / condition :mod (i / irreparable)) :time (a / after :op1 (r / remove-01 :arg1 (p3 / person) :arg2 (e2 / estate :poss (p4 / person)))))
(b / bank :mod (s / safe-01) :mod (u / usual) :prep-for (r / republican) :domain (u2 / utah))
(m / multi-sentence :snt1 (a / and :op2 (s / shouting :arg1 (t / this))) :snt2 (o / or :op1 (s2 / succeed-01 :arg0 (t2 / this) :mod (e / either)) :op2 (m2 / make-02 :arg0 (t3 / this) :arg1 (h / holiday :arg1-of (n / nice-01 :arg1-of (l / long-03))))))
(o / obligate-01 :arg2 (l / leave-14 :arg0 (i / i) :arg1 (r / race) :arg2 (p / person) :mod (j / just)) :time (u / until :op1 (a / and :op1 (b / between :op1 4 :op2 2016 :op3 (f / final)) :op2 (d / day :mod (f2 / final) :part-of (d2 / day)) :op3 (d3 / day :mod (f3 / final) :part-of (d4 / day)))))
(s / say-01 :arg0 (p / person :name (n / name :op1 "N-A") :arg0-of (h / have-org-role-91 :arg1 (c / country :name (n2 / name :op1 "N-A")) :arg2 (c2 / chairman :mod (v / vice)))) :arg1 (m / müller :arg0 (p2 / person :arg0-of (h2 / have-org-role-91 :arg1 (s2 / state) :arg2 (c3 / chairman))) :arg1 (m2 / müller)))
(s / surprise-01 :polarity - :arg0 (c / call-03 :arg0 (a / agency :mod (s2 / security)) :arg1 (a2 / and :op1 (s3 / surveil-01 :arg1 (v / video)) :op2 (s4 / staff :mod (s5 / security)))) :mod (a3 / also))
(a / and :op2 (b / buy-01 :arg1 (m / market :mod (c / core) :quant (s / some)) :location (m2 / market :mod (c2 / core) :quant (s2 / some))))
(m / multi-sentence :snt1 (d / danger :degree (t / too :mod (f / far)) :domain (l / leave-14 :arg1 (c / cash :location (t2 / tresses :name (n / name :op1 (r / raiffeisenbank))))) :manner (s / simple)) :snt2 (a / and :op1 (e / experience-01 :arg0 (i / i) :arg1 (o / overaults :quant 4) :time (a2 / already)) :op2 (w / want-01 :arg0 (i2 / i) :arg1 (s2 / say-01 :arg0 (b / board :mod (b2 / bank)) :arg1 (i3 / i) :degree (t3 / total)))))
(h / have-03 :arg0 (i / i) :arg1 (o / or :op1 (a / around :op1 (p / person :quant (a2 / around :op1 3000))) :op2 (p2 / plates :quant 4000)))
(m / multi-sentence :snt1 (s / stop-01 :arg0 (i / i) :arg1 (b / business :mod (g / generation :mod (n / new)) :mod (g2 / generation :mod (n2 / new)) :mod (g3 / generation :mod (n3 / new)))) :snt2 (o / outfitters :mode (e / expressive)))
(s / say-01 :arg0 (h / he) :arg1 (o / offer-01 :arg0 (a / area) :arg1 (b / between :op1 (r / refugee) :op2 (p / person :arg0-of (v / volunteer-01)))))
(f / find-01 :arg0 (a / and :op1 (p / person :arg0-of (w / went :ord (o / ordinal-entity :value 1)) :arg0-of (g / go-02 :arg4 (h / history))) :op2 (p2 / person :arg0-of (h2 / have-org-role-91 :arg2 (s / stanning))) :op3 (p3 / person :arg0-of (h3 / have-org-role-91 :arg2 (s2 / stanning))) :op4 (p4 / person :arg0-of (h4 / have-org-role-91 :arg2 (s3 / stanning))) :op5 (p5 / person :arg0-of (h5 / have-org-role-91 :arg2 (s4 / stanning))) :op6 (p6 / person :arg0-of (h6 / have-org-role-91 :arg2 (s5 / stanning))) :op6 (p7 / person :arg0-of (h7 / have-org-role-91 :arg2 (s6 / stanning))) :op6 (p8 / person :arg0-of (h8 / have-org-role-91 :arg2 (s7 / stanning))) :op6 (p9 / person :arg0-of (h9 / have-org-role-91 :arg2 (s8 / stanning))) :op6 (p10 / person :arg0-of (h10 / have-org-role-91 :arg2 (s9 / stanning))) :op6 (p11 / person :arg0-of (h11 / have-org-role-91 :arg2 (s10 / stanning))) :op6 (p12 / person :arg0-of (h12 / have-org-role-91 :arg2 (s11 / stanning))) :op6 (p13 / person :arg0-of (h13 / have-org-role-91 :arg2 (s12 / stanning))) :op6 (p14 / person :arg0-of (h14 / have-org-role-91 :arg2 (s13 / stanning))) :op6 (p15 / person :arg0-of (h15 / have-org-role-91 :arg2 (s14 / stanning))) :op6 (p16 / person :arg0-of (h16 / have-org-role-91 :arg2 (s15 / stanning))) :op6 (p17 / person :arg0-of (h17 / have-org-role-91 :arg2 (s16 / stanning))) :op7 (p18 / person :arg0-of (h18 / have-org-role-91 :arg2 (s17 / stanning)))) :arg1 (m / mean :mod (e / extra)))
(m / multi-sentence :snt1 (h / have-concession-91 :arg1 (a / all-present :quant 3 :arg1-of (s / sit-01 :arg2 (r / ruder))) :arg2 (t / those :arg0 (t2 / they) :arg1 (g / gold :mod (r2 / robin :ord (o / ordinal-entity :value 2)) :ord (o2 / ordinal-entity :value 2)) :location (h2 / history :poss (w / woman :mod (t3 / tax)) :ord (o3 / ordinal-entity :value 2) :location (l / local-region :name (n / name :op1 "N-A"))))) :snt2 (s2 / sport :domain (w2 / woman :ord (o4 / ordinal-entity :value 1) :ord (o5 / ordinal-entity :value 1)) :purpose (s3 / set-02 :arg0 (w3 / woman) :arg1 (b / benchmark :mod (s4 / such)))))
(a / and :op1 (s / sing-01 :arg0 (p / person :arg0-of (s2 / sing-01 :arg1 (a2 / ant)) :quant (m / most)) :location (a3 / ant)) :op2 (s3 / share-01 :arg0 (p2 / person) :arg1 (i / infringe-01 :arg1 (m2 / music) :accompanier (p3 / person :mod (l / like-minded))) :arg1-of (d / describe-01 :arg0 (p4 / person))))
(p / possible-01 :arg1 (o / or :op1 (i / innate :arg1 (c / capable-01 :mod (t / this))) :op2 (d / develop-02 :arg1 (m / maturity :mod (g / gender)))))
(i / issue-01 :arg0 (p / person :arg0-of (p2 / prosecute-01)) :arg1 (w / warrant :mod (a / arrest-01) :prep-against (s / sükür :mod (s2 / star) :time (f / former))))
(d / determine-01 :arg0 (d2 / doping) :arg1 (h / headline) :location (o / olympics :mod (r / rio)) :mod (s / still))
(p / plan-01 :arg0 (s / slash :op1 (j / journey :arg0 (s2 / she)) :op2 (h / home :poss (s3 / she))) :arg1 (s4 / she) :time (e / early))
(c / clear-06 :polarity - :arg1 (c2 / clear-06 :arg1 (a / attack-01 :arg1 (g / group) :location (b / behind :op1 (a2 / attack-01)))) :mod (s / still))
(k / kill-01 :arg1 (p / person :quant 20) :arg1-of (c / cause-01 :arg0 (a / attack-01 :arg1 (w / worship-place :name (n / name :op1 "N-A") :mod (p2 / popular) :arg1-of (i / include-91 :arg2 (p3 / person :arg0-of (t / tour-01) :mod (f / foreign)) :arg3 (m / most))))) :time (b / before :op1 (n2 / now) :quant (o / over :op1 (o2 / over :op1 (t2 / temporal-quantity :quant (N / N-A) :unit (y / year)) :mod (j / just)))))
(a / and :op1 (c / come-01 :arg1 (b / bus) :arg4 (r / right :poss (s / street))) :op2 (s2 / slipped :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (p2 / police :mod (a2 / aurich)) :arg2 (s3 / spokeswoman))) :arg1 (b2 / bus)))
(w / win-01 :arg0 (i / i) :arg1 (m / match-03 :ord (o / ordinal-entity :value 4)) :arg2 (f / field :mod (f2 / field) :poss (w2 / woman)))
(c / contrast-01 :arg1 (c2 / compete-01 :location (h / here) :arg1-of (o / obvious-01)) :arg2 (c3 / contrast-01 :arg1 (c4 / compete-01 :polarity - :location (h2 / here) :arg1-of (o2 / obvious-01)) :arg2 (a / attack-01 :polarity - :arg1 (a2 / and :op1 (d / dreamy :mod (d2 / dreamy :mod (j / just))) :op2 (d3 / dreamy :arg1 (e / elegant)) :op3 (e2 / et-cetera)) :time (d4 / during :op1 (e3 / exercise)))))
(a / and :op1 (l / lack-01 :arg0 (r / regime :time (c / current)) :arg1 (s / skill :mod (f / fundamental) :mod (t / this))) :op2 (s2 / say-01 :arg0 (p / person :arg0-of (a2 / analyze-01 :arg1 (c2 / conflict-01))) :arg1 (p2 / person :arg0-of (a3 / analyze-01 :arg1 (c3 / conflict-01)))))
(a / and :op1 (l / live-01 :arg0 (p / person :quant 34) :location (m / multivitamin :mod (w / william)) :time (f / former)) :op2 (v / visit-01 :arg0 (p2 / person) :arg1 (v2 / verb) :arg1-of (r / regular-02)) :li 34)
(t / try-01 :arg0 (a / and :op1 (p / person :arg0-of (c / calorie-rich)) :op2 (s / satisfaction :mod (n / nourishing))) :arg1 (o / or :op1 (t2 / taste :arg1 (p2 / person)) :op2 (t3 / taste :arg1 (p3 / person) :manner (h / healthy :degree (m / more :mod (e / even))))))
(a / average-01 :arg1 (e / economy :mod (h / house) :quant (m / many)) :arg2 (i / it))
(t / take-01 :arg0 (i / i) :arg1 (t2 / time :quant 3))
(k / know-01 :arg0 (p / person :arg0-of (r / research-01)) :arg1 (l / little :topic (l2 / lifestyle :mod (g / greenland)) :mod (l3 / little)))
(c / cause-01 :arg0 (m / make-01 :arg0 (p / person :arg0-of (r / research-01)) :arg1 (a / and :op1 (r2 / remain-01 :arg1 (p2 / person :arg0-of (r3 / research-01))) :op2 (f / find-01 :arg0 (p3 / person :arg0-of (r4 / research-01)) :arg1 (r5 / remain-01 :arg1 (p4 / person :arg0-of (r6 / research-01))))) :arg1 (s / swallowed :arg0 (a2 / another) :arg1 (b / bone :part-of (b2 / bear-02 :arg1 (p5 / polar)) :mod (y / young)))) :mod (a3 / anyway))
(s / say-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (c / country :name (n / name :op1 "N-A")) :arg2 (t / troop))) :arg1 (r / regain-01 :arg0 (p2 / person) :arg1 (c2 / control-01 :arg1 (m / manbij :mod (f / full)) :source (s2 / state :mod (r2 / religious-group :name (n2 / name :op1 "N-A"))))))
(a / and :op1 (p / plunged :arg0 (p2 / person :name (n / name :op1 "Clinton")) :arg1 (i / issue-02) :time (a2 / already)) :op2 (p3 / post-01 :arg0 (p4 / person) :arg1 (v / video) :medium (i2 / internet)) :op3 (c / call-03 :arg0 (p5 / person :arg1-of (r / rank-01 :arg1-of (h / high-02)) :arg1-of (r2 / rank-01 :arg1-of (h2 / high-02))) :arg1 (r3 / release-01 :arg1 (p6 / person))))
(a / and :op1 (f / fishing :arg1 (h / highlight-01 :arg1 (l / leisure) :mod (o / other)) :location (p / pond :mod (n / nearby))) :op2 (e / evening :arg1 (e2 / evenings) :time (e3 / evening :name (n2 / name :op1 (f2 / fire)) :mod (f3 / final))))
(p / possible-01 :arg1 (w / win-01 :arg0 (y / you) :arg1 (i / it) :arg2 (c / colleagues :arg0 (h / he))))
(c / consult-01 :arg0 (h / he) :arg1 (h2 / he) :arg2 (p / person :arg0-of (r / represent-01)) :time (y / yesterday) :time (c2 / call-03 :arg0 (h3 / he) :arg1 (m / measure-01 :arg0 (h4 / he) :arg1 (s / size :poss (h5 / he)) :arg2 (h6 / he))))
(w / wrong-04 :arg1 (a / attempt-01 :arg1 (c / contact-01 :arg1 (p / philip))) :mod (j / just))
(a / and :op1 (s / surveys :arg0 (g / government-organization :name (n / name :op1 "N-A") :mod (t / this)) :arg1 (i / insa :mod (r / research-01 :arg1 (o / opine-01)))) :op2 (- / -lrb- :arg0 (n2 / newspaper :name (n3 / name :op1 (' / '') :op2 ('2 / '') :op3 ('3 / '') :op4 ('4 / '') :op5 ('5 / '') :op6 ('6 / '') :op7 ('7 / '')))))
(r / represent-01 :arg1 (p / person :arg0-of (h / have-org-role-91 :arg2 (d / deputy))) :location (c / chamber :part-of (p2 / person :arg0-of (h2 / have-org-role-91 :arg2 (d2 / deputy))) :ord (o / ordinal-entity :value 1 :range (o2 / ordinal-entity :value 1))))
FAILED_TO_PARSE#Two concepts in a row.
(e / experience-01 :arg0 (d / doctor :name (n / name :op1 "N-A") :mod (p / phone :mod (c / cell)) :mod (f / finns)) :arg1 (d2 / disaster :mod (p2 / precedent :polarity -)) :time (e2 / eventual) :arg1-of (s / sell-01 :arg2 (m / microsoft)))
(a / and :op1 (p / person :quant (m / many :degree (v / very))) :op2 (p2 / person :quant (m2 / many :degree (v2 / very))) :time (t / today) :location (o / online))
(o / operate-01 :arg1 (a / and :op1 (a2 / apple) :op2 (c / continent :name (n / name :op1 "N-A"))) :arg1-of (r / resemble-01 :arg2 (s / samsung)) :time (n2 / now))
(a / and :op1 (b / block-01 :arg0 (p / person :arg0-of (u / use-01 :arg1 (a2 / advertise-01))) :arg1 (b2 / block-01 :arg1 (a3 / advertise-01) :location (p2 / page :mod (d / desktop) :poss (p3 / person))) :time (a4 / after :op1 (a5 / announce-01 :arg0 (p4 / person) :arg1 (b3 / block-01 :arg0 (p5 / person) :arg1 (b4 / block-01 :arg1 (a6 / advertise-01) :location (p6 / page :mod (d2 / desktop) :poss (p7 / person))))))) :op2 (r / release-01 :arg0 (p8 / person) :arg1 (s / say-01 :arg0 (p9 / person) :arg1 (p10 / possible-01 :arg1 (u2 / update-01 :arg0 (p11 / person :arg0-of (u3 / use-01)) :arg1 (f / filter :poss (p12 / person)) :location (p13 / program) :purpose (b5 / block-01 :arg0 (p14 / person) :arg1 (a7 / advertising :location (n / network :mod (s2 / society))) :mod (a8 / again)))))))
(s / say-01 :arg0 (h / he) :arg1 (i / important :domain (e / economy :mod (r / region))))
(c / cause-01 :arg1 (r / recommend-01 :arg1 (c2 / contact-01 :arg0 (y / you) :arg1 (d / doctor) :time (f / first)) :time (p / problem :topic (s / sleep-01))))
(a / and :op1 (s / surprise-01 :arg0 (p / person :arg0-of (r / reside-01)) :arg1 (p2 / person :quant 2)) :op2 (s2 / suggest-01 :arg0 (p3 / person) :arg1 (c / conventional :polarity -)))
(m / multi-sentence :snt1 (g / give-01 :arg0 (w / way :poss (h / he) :destination (c / connect :arg0 (h2 / he) :arg1 (f / family :arg1-of (h3 / have-org-role-91 :arg0 (h4 / he) :arg2 (m2 / member))) :arg2 (f2 / family :arg1-of (h5 / have-org-role-91 :arg0 (h6 / he) :arg2 (m3 / member))))) :arg1 (w2 / we) :arg2 (w3 / we :arg0-of (h7 / have-org-role-91 :arg1 (f3 / family :arg1-of (h8 / have-org-role-91 :arg0 (h9 / he) :arg2 (m4 / member))) :arg2 (m5 / member))) :time (a / always)) :snt2 (s / say-01 :arg0 (p / person :arg0-of (h10 / have-org-role-91 :arg2 (h11 / head-of-state))) :arg1 (p2 / person :arg0-of (h12 / have-org-role-91 :arg2 (h13 / head-of-state)))))
(c / contrast-01 :arg2 (s / say-01 :arg0 (d / dropshipper) :arg1 (h / have-03 :arg0 (s2 / state) :arg1 (t / task :mod (c2 / certain) :instrument-of (p / perform-02 :arg0 (s3 / state)))) :arg0-of (c3 / cause-01 :arg1 (a / and :op1 (h2 / have-03 :arg0 (s4 / state) :arg1 (o / opportunity)) :op2 (n / need-01 :arg0 (s5 / state) :arg1 (m / money) :beneficiary (i / it))))))
(a / and :op1 (h / have-03 :arg0 (w / we) :arg1 (l / list :arg1-of (w2 / wait-01 :arg1-of (l2 / long-03))) :time (s / since :op1 (b / be-located-at-91 :arg1 (i / it) :arg2 (a2 / around)))) :op2 (s2 / say-01 :arg0 (p / person :arg0-of (h2 / have-org-role-91 :arg1 (p2 / political-party :name (n / name :op1 "N-A")))) :arg1 (w3 / we) :arg1-of (l3 / long-03)))
(s / say-01 :arg0 (p / person :name (n / name :op1 "N-A")) :arg1 (f / fail-01 :arg1 (p2 / person :arg0-of (h / have-org-role-91 :arg2 (m / minister))) :arg2 (a / address-02 :arg0 (p3 / person) :arg1 (c / concern-01 :arg0 (t / treaty)))))
(m / multi-sentence :snt1 (o / opine-01 :arg0 (i / i) :arg1 (o2 / order-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (g / government-organization :arg0-of (a / administrate-01 :arg1 (c / country :name (n / name :op1 "N-A")))) :arg2 (c2 / chairman :mod (v / vice)))) :arg2 (c3 / chairman :arg2-of (h2 / have-org-role-91 :arg1 (g2 / government-organization :arg0-of (a2 / administrate-01 :arg1 (c4 / country :name (n2 / name :op1 "N-A"))))))) :manner (r / reason :polarity -)) :snt2 (' / '' :mode (e / expressive)))
(i / include-91 :arg1 (t / thing :arg1-of (i2 / include-91 :arg2 (t2 / thing :arg0-of (c / cover-01 :arg1 (b / blower)))) :quant 4 :ord (o / ordinal-entity :value 1) :arg0-of (c2 / cover-01 :arg1 (a / around :op1 (p / photograph-01 :quant 3 :location (b2 / bridge) :mod (e / each))))) :arg2 (c3 / closures :quant 4 :mod (' / '')))
(c / contrast-01 :arg2 (c2 / compensate-01 :arg0 (y / you) :arg2 (l / lose-02 :arg1 (h / home :arg1-of (c3 / cheap-02) :quant (s / some :op1 1300))) :manner (a / amr-unknown) :time (a2 / after :op1 (n / now) :duration (f / few :op1 (t / temporal-quantity :quant (N / N-A) :unit (y2 / year))))))
(a / and :op1 (p / possible-01 :polarity - :arg1 (a2 / and :op1 (s / sit-01 :arg1 (i / i)) :op2 (c / crawls :arg0 (i2 / i)) :time (u / until :op1 (l / live-01 :arg0 (h / he) :ord (o / ordinal-entity :value 3))))) :op2 (p2 / possible-01 :polarity - :arg1 (s2 / speak-01 :arg0 (h2 / he) :mod (s3 / still))))
(c / cause-01 :arg0 (h / have-03 :arg0 (p / person :mod (c2 / country :name (n / name :op1 "N-A"))) :arg1 (c3 / cause :arg0-of (c4 / cause-01 :arg1 (i / infect-01 :arg1 (p2 / person) :example (o / or :op1 (m / measles :arg1 (p3 / person)) :op2 (z / zikavirus :arg1 (p4 / person)) :time (p5 / pregnancy)))))) :arg1 (h2 / have-03 :arg0 (p6 / person) :arg1 (c5 / cause :arg0-of (c6 / cause-01)) :mod (p7 / profound)))
(s / say-01 :arg0 (h / he) :arg1 (w / warn-01 :arg0 (p / person :mod (a / another) :arg0-of (l / live-01 :mod (n / nearby)))))
(a / and :op1 (p / phenomenon :mod (g / globe) :domain (a2 / and :op1 (p2 / phenomenon :mod (g2 / globe)) :op2 (p3 / phenomenon :mod (g3 / globe)))) :op2 (p4 / possible-01 :arg1 (p5 / provide-01 :arg0 (w / we) :arg1 (p6 / person :arg0-of (c / consume-01)) :arg2 (i / information :quant (m / more)) :manner (i2 / interesting))))
(s / say-01 :arg0 (p / person :name (n / name :op1 "N-A")) :arg1 (e / expect-01 :arg0 (p2 / person) :arg1 (c / confiscate-01 :arg0 (m / madrassa) :arg1 (' / '' :mod (g / garland)) :prep-with (t / temperature-quantity :quant (d / degree :quant (s2 / some))))) :time (c2 / conference :mod (t2 / telephone)))
(m / multi-sentence :snt1 (n / need-01 :arg0 (w / we) :arg1 (r / return-01 :arg1 (w2 / we) :arg4 (a / and :op1 (d / depiction :arg1 (n2 / nudity :mod (t / timeless))) :op2 (f / feel-01 :arg0 (a2 / and :op1 (w3 / woman) :op2 (m2 / man) :mod (b / both)) :arg1 (c / comfortable-02))))) :snt2 (s / say-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (b2 / body :mod (f2 / female)) :arg3 (s2 / shaw))) :arg1 (a3 / and :op1 (c2 / comfortable-02 :arg0 (i / image :mod (t2 / this)) :arg1 (r2 / release-01 :arg1 (b3 / body :mod (f3 / female)))) :op2 (f4 / feel-01 :arg0 (a4 / and) :arg1 (i2 / inspire-01 :arg0 (i3 / image) :arg1 (r3 / release-01 :arg1 (b4 / body :mod (f5 / female))) :mod (p2 / press))))))
(m / multi-sentence :snt1 (s / strange) :snt2 (a / allow-01 :polarity - :arg1 (c / choose-01 :arg0 (p / person :arg1-of (l / local-02)) :arg1 (c2 / choose-01 :arg0 (p2 / person) :arg1 (d / day :poss (c3 / country))))))
(s / sense-02 :polarity - :arg1 (i / it))
(a / and :op1 (s / spend-02 :polarity - :arg0 (t / they) :arg1 (s2 / stroll :mod (t2 / thursday) :poss (t3 / they)) :manner (c / certain) :path (s3 / shop :poss (s4 / street :mod (b / berwick)))) :op2 (l / leave-11 :arg0 (t4 / they) :manner (p / plates :arg0 (t5 / they) :arg1 (a2 / and :op1 (l2 / look-01 :arg0 (t6 / they) :arg1 (u / uncanny)) :op2 (l3 / look-01 :arg0 (t7 / they) :arg1 (u2 / uncanny)))) :arg1-of (c2 / cause-01 :arg0 (m / mimic :arg0 (t8 / they) :arg1 (a3 / and :op1 (l4 / look-01 :arg0 (t9 / they) :arg1 (u3 / uncanny)) :op2 (l5 / look :arg0 (t10 / they) :arg1 (p2 / presenter :mod (f / false) :arg0-of (r / rise-01 :arg1 (s5 / shoulders :mod (o / over :op1 (m2 / man :mod (m3 / middle-aged))))))))))))
FAILED_TO_PARSE#Number of opening and closing brackets doesn't match.
(a / and :op1 (p / put-01 :arg0 (p2 / person :arg0-of (v / veremalua)) :arg1 (t / touchdown :location (c / corner :mod (r / right))) :arg2 (t2 / touchdown)) :op2 (s / stand-01 :arg1 (p3 / person) :arg2 (p4 / person :quant 0-17 :mod (p5 / political-party :name (n / name :op1 "N-A")))) :time (m / minute :ord (o / ordinal-entity :value 7)))
(p / pressure-01 :arg0 (a / and :op1 (t / tacklings :arg1 (t2 / team :mod (c / country :name (n / name :op1 "N-A"))) :arg1-of (w / weak-02) :degree (f / further)) :op2 (s / storm-02 :arg0 (t3 / team) :arg1 (l / line :purpose (m / make-01 :arg0 (t4 / team) :arg1 (g / gated))))) :arg1 (r / ravouvou :mod (v / vatemo) :mod (f2 / further)))
(a / and :op1 (g / gold :quant (m / more :polarity -) :compared-to (g2 / game :mod (t / this))) :op2 (w / want-01 :arg0 (t2 / they) :arg1 (t3 / thing :arg1-of (w2 / want-01 :arg0 (t4 / they)))))
(s / say-01 :arg0 (p / person :name (n / name :op1 "N-A")) :arg1 (a / and :op1 (w / weighed :arg1 (r / reform-01 :arg1 (a2 / and :op1 (t / trade-01 :arg1 (t2 / trade-01)) :op2 (c / climate) :op3 (t3 / target :mod (e / employ-01)))) :op2 (t4 / target :mod (e2 / employ-01 :polarity -)) :op3 (t5 / target :mod (e3 / employ-01 :polarity -))) :arg2 (p2 / person :arg0-of (h / have-org-role-91 :arg1 (m / metall) :arg2 (c2 / chief :name (n2 / name :op1 (m2 / metall)))) :arg0-of (h2 / have-org-role-91 :arg2 (c3 / chief :mod (m3 / metall)))) :location (f / frankfurt)))
(e / expect-01 :arg0 (a / association) :arg1 (i / increase-01 :arg1 (e2 / emission :arg1-of (c / come-01 :time (a2 / after :op1 (n / now) :duration (m / multiple :op1 (t / temporal-quantity :quant (N / N-A) :unit (m2 / month)))) :arg1-of (i2 / improve-01)))))
(c / contrast-01 :arg1 (s / suffer-01 :arg0 (s2 / she) :arg1 (w / wound-01 :arg1 (s3 / she))) :arg2 (p / possible-01 :arg1 (l / leave-11 :arg0 (s4 / she)) :time (a / already)))
FAILED_TO_PARSE#Number of opening and closing brackets doesn't match.
(c / company :polarity - :mod (o / only) :arg0-of (c2 / cross-02 :arg1 (t / theater :mod (c3 / culture) :mod (t2 / this))) :domain (s / snapchat))
(m / multi-sentence :snt1 (h / have-03 :arg0 (i / it) :arg1 (p / potential)) :snt2 (c / contrast-01 :arg1 (i2 / impact-01 :arg0 (c2 / citation :mod (n / never-ending) :poss (h2 / he)) :arg1 (c3 / citation :mod (c4 / cartoonish) :poss (i3 / impact-01 :arg0 (h3 / he)))) :arg2 (g / grace :domain (a / and :op1 (g2 / grace :poss (a2 / and :op1 (t / tournament) :op2 (i4 / idiot))) :op2 (g3 / grace :poss (a3 / and :op1 (t2 / tournament) :op2 (i5 / idiot)))) :mod (e / essential))))
(h / have-concession-91 :arg1 (s / seem-01 :arg1 (p / patent-01 :arg1 (p2 / patent-01)) :arg2 (a / age :arg1-of (h2 / high-02))))
(a / and :op1 (p / probable :domain (d / determine-01 :arg0 (a2 / animal :arg1-of (i / include-91 :arg2 (a3 / animal :prep-with (c / centimetres :mod 392)))) :arg1 (a4 / and :op1 (p2 / person :arg1-of (a5 / age-01 :arg2 (t / temporal-quantity :quant (N / N-A) :unit (y / year)))) :op2 (a6 / age :mod (s / sexually)))) :time (s2 / since :op1 (a7 / age-01 :arg1 (a8 / animal) :arg2 (t2 / temporal-quantity :quant (N2 / N-A) :unit (y2 / year))))) :op2 (d2 / determine-01 :arg1 (p3 / person :arg0-of (h / have-org-role-91 :arg2 (s3 / sharks))) :time (a9 / after :op1 (n / now) :quant (t3 / temporal-quantity :quant (N3 / N-A) :unit (y3 / year))) :manner (a10 / apparent)))
(c / cite-01 :arg0 (a / and :op1 (p / person :arg0-of (h / have-org-role-91 :arg2 (a2 / authority :mod (t / tax)))) :op2 (p2 / person :arg0-of (h2 / have-rel-role-91 :arg1 (p3 / person) :arg2 (l / lawyer)))) :arg1 (a3 / audit-01 :arg0 (a4 / authority :mod (t2 / tax)) :arg1-of (c2 / cause-01 :arg0 (r / reason :arg0-of (c3 / cause-01 :arg1 (r2 / refuse-01 :arg0 (p4 / person)))))))
(s / storm-02 :arg0 (p / person :mod (c / country :name (n / name :op1 "N-A")) :mod (c2 / country :name (n2 / name :op1 "N-A"))) :arg1 (h / home) :arg2 (h2 / home) :arg1-of (c3 / cause-01 :arg0 (w / win-01 :arg0 (p2 / person) :arg1 (g / gold) :arg2 (p3 / person))))
(c / create-01 :arg0 (r / retire-01 :arg0 (p / person :arg0-of (r2 / retire-01))) :arg1 (g / gap :arg0-of (c2 / cause-01 :arg1 (t / try-01 :arg0 (p2 / person :arg0-of (r3 / retire-01)) :arg1 (c3 / close-10 :arg1 (p3 / person))))))
(c / come-01 :arg1 (t / they) :arg3 (g / goal :quant 3 :mod (g2 / goal)))
(a / and :op1 (r / reality :mod (k / kardashian :mod (j / just))) :op2 (k2 / kendall :arg1 (i / issue-02 :arg0 (i2 / issue-02 :arg0 (s / september)))))
(h / have-03 :arg0 (l / law :mod (c / community)) :arg1 (p / person :quant 160,000) :time (y / year :mod (e / each)))
FAILED_TO_PARSE#Two concepts in a row.
(a / and :op1 (h / have-purpose-91 :arg1 (c / create-01 :arg1 (a2 / and :op1 (j / job :quant 180000 :mod (n / new)) :op2 (g / grow-01 :arg1-of (p / possible-01 :polarity -)))) :arg2 (a3 / and :op1 (j2 / job :quant 180000 :mod (n2 / new)) :op2 (g2 / grow-01 :arg1-of (p2 / possible-01 :polarity -)))) :op2 (l / leave-13 :arg0 (a4 / and) :arg1 (l2 / legacy :mod (a5 / and :op1 (p3 / person :mod (c2 / country :name (n3 / name :op1 "N-A"))) :op2 (p4 / person :mod (c3 / country :name (n4 / name :op1 "N-A")) :mod (w / whole))))))
(a / announce-01 :arg0 (m / magazine :name (n / name :op1 "N-A")) :arg1 (c / change-01 :arg0 (p / page :poss (i / it)) :arg1 (c2 / course :poss (i2 / it)) :purpose (m2 / make-02 :arg0 (i3 / it) :arg1 (d / difficult :degree (m3 / more) :domain (d2 / detect-01 :arg1 (t / thing :arg2-of (h / have-part-91 :arg1 (p2 / page))))))) :medium (u / url-entity :value (t2 / tuesday)))
(a / and :op1 (r / resign-01 :arg0 (p / person :name (n / name :op1 "N-A") :arg0-of (h / have-org-role-91 :arg2 (r2 / roy))) :arg1 (a2 / and :op1 (c / coach) :op2 (p2 / person :arg0-of (h2 / have-org-role-91 :arg2 (p3 / president :mod (v / vice)))) :op3 (p4 / person :arg0-of (h3 / have-org-role-91 :arg2 (p5 / president :mod (v2 / vice)))) :op4 (p6 / person :arg0-of (h4 / have-org-role-91 :arg2 (p7 / president :mod (v3 / vice)))) :op5 (p8 / person :arg0-of (h5 / have-org-role-91 :arg2 (p9 / president :mod (v4 / vice)))) :op6 (p10 / person :arg0-of (h6 / have-org-role-91 :arg2 (p11 / president :mod (v5 / vice)))) :op6 (p12 / person :arg0-of (h7 / have-org-role-91 :arg2 (p13 / president :mod (v6 / vice)))) :op7 (p14 / person :arg0-of (h8 / have-org-role-91 :arg2 (p15 / president :mod (v7 / vice)))))))
(h / honored :arg1 (r / roy) :time (s / season :quant 2013-14 :mod (d / debut) :poss (h2 / he)) :time (s2 / season :mod (d2 / debut) :poss (h3 / he)) :subevent-of (w / win-01 :arg0 (c / company :arg0-of (w2 / win-01 :arg1 (c2 / coach :mod (g / good :degree (m / most)))))))
(c / contrast-01 :arg2 (w / want-01 :arg0 (h / he) :arg1 (s / seek-01 :arg0 (h2 / he) :arg1 (s2 / solve-01 :arg1 (t / thing :arg2-of (s3 / solve-01 :arg1 (t2 / thing :manner-of (r / reduce-01 :arg1 (v / vulnerability :poss (c2 / citizen)) :arg2 (t3 / thing :manner-of (r2 / reduce-01 :arg1 (v2 / vulnerability :poss (c3 / citizen)))))))))) :arg1-of (c4 / cause-01 :arg0 (v3 / view-01 :arg0 (h3 / he) :manner (m / mental)))))
(h / have-purpose-91 :arg1 (p / plan-01 :arg1 (u / use-01 :arg1 (p2 / person :arg0-of (h2 / have-org-role-91 :arg1 (c / covert) :arg2 (p3 / person :arg0-of (i / investigate-01)))))) :arg2 (p4 / prosecute-01 :arg0 (p5 / person) :arg1 (p6 / person :arg2-of (c2 / criminal-03)) :location (a / area :arg1-of (s / specific-02) :part-of (- / -lrb- :mod (i2 / internet)))))
(a / and :op1 (p / possible-01 :polarity - :arg1 (b / ban-01 :arg0 (y / you) :arg1 (e / everything :arg1-of (o / oppose-01 :arg0 (y2 / you))))) :op2 (r / reject-01 :arg0 (i / i) :arg1 (w / wear-01 :arg1 (b2 / burqa))))
(r / report-01 :arg1 (o / obligate-01 :arg2 (r2 / report-01 :arg1 (t / temporal-quantity :quant (N / N-A) :unit (m / month) :time (b / before :op1 (s / start-01 :arg0 (h / he) :arg1 (a / and :op1 (a2 / agency :mod (n / nation) :mod (n2 / nation)) :op2 (- / -rrb- :name (n3 / name :op1 (-2 / -lrb-)))) :ord (o2 / ordinal-entity :value 1)))))) :condition (w / want-01 :arg0 (h2 / he) :arg1 (s2 / start-01 :arg0 (h3 / he) :arg1 (l / language :name (n4 / name :op1 "N-A")))))
(t / total-01 :arg1 (m / more-than :op1 15000) :arg2 (m2 / more-than :op1 15000))
(m / mention-01 :arg1 (s / street :polarity - :mod (o / other)) :frequency (o2 / often :degree (s2 / so)) :accompanier (p / person :arg0-of (' / '' :arg1 (v / violence :mod (m2 / military) :mod (m3 / military :name (n / name :op1 "N-A"))))) :frequency (o3 / often :degree (s3 / so)))
(a / and :op1 (n / need-01 :arg1 (i / invest-01 :arg2 (a2 / and :op1 (t / trumps) :op2 (t2 / trumps) :op3 (m / moon)))) :op2 (s / say-01 :arg0 (a3 / and) :arg1 (e / eloquently :mod (a4 / almost))))
(p / possible-01 :arg1 (d / discuss-01 :arg1 (t / thing :arg1-of (d2 / discuss-01)) :mod (s / still)))
(m / matter :domain (t / this) :mod (o / of-course) :arg1-of (c / cause-01 :arg0 (h / have-03 :arg0 (i / it) :arg1 (f / fear-01 :arg1 (c2 / change-01 :arg1 (r / regime)) :mod (d / deep-seated)))))
(b / be-located-at-91 :arg1 (a / and :op1 (p / person :arg0-of (s / starred :time (p2 / previous))) :op2 (p3 / person :arg0-of (h / have-org-role-91 :arg2 (g / greg))) :op3 (p4 / person :arg0-of (h2 / have-org-role-91 :arg2 (g2 / greg)))) :arg2 (h3 / he) :time (s2 / since :op1 (s3 / series :op1 (s4 / series) :quant 2005 :op1 2005)))
(l / like-02 :arg0 (i / i) :arg1 (t / thank-01 :arg0 (i2 / i) :arg1 (a / and :op1 (a2 / authors) :op2 (p / person :arg0-of (p2 / produce-01 :arg1 (c / crew :arg1-of (w / wonderful-03) :poss (w2 / we)))) :op3 (p3 / person :arg0-of (a3 / act-01)) :op4 (c2 / crew :arg1-of (w3 / wonderful-03) :poss (w4 / we)) :op5 (f / fan :mod (g / good :degree (m / most)) :mod (e / especially))) :arg2 (s / series) :mod (o / only)) :mod (j / just))
(h / have-concession-91 :arg1 (r / require-01 :arg0 (c / complete-01 :arg1 (c2 / closure :arg1 (b / between :op1 (v / viaduct) :op2 (d / decker :mod (b2 / bridge))))) :arg1 (t / tolerances :mod (p / precise :degree (e / extreme)) :prep-for (f / fit))) :arg2 (a / and :op1 (s / size :poss (b3 / bridge) :mod (m / massive)) :op2 (w / weight :poss (b4 / bridge))))
(a / and :op1 (b / be-located-at-91 :arg1 (i / it) :arg2 (a2 / area :mod (r / residential) :location (i2 / in-front-of :op1 (h / house)) :location (i3 / in-front-of :op1 (h2 / house)))) :op2 (t / tell-01 :arg0 (h3 / howard :mod (' / '')) :arg1 (c / company :name (n / name :op1 "N-A") :mod (c2 / cbs)) :time (e / early :op1 (m / month :mod (t2 / this)) :degree (m2 / more))))
(a / and :op2 (h / have-03 :arg0 (t / team :mod (t2 / this)) :arg1 (a2 / and :op1 (t3 / turners :quant 3) :op2 (b / biles :name (n / name :op1 (s / simone))) :op3 (d / douglas :name (n2 / name :op1 (g / gabby))) :op4 (d2 / douglas :name (n3 / name :op1 (g2 / gabby))) :op5 (' / '' :name (n4 / name :op1 (l / lauren) :op2 ('2 / '')))) :arg0-of (i / inspire-01 :arg1 (g3 / girl :mod (y / young) :quant (m / many) :mod (c / color :mod (s2 / skin) :mod (o / other))))))
(a / and :op1 (o / obligate-01 :arg2 (a2 / act-02 :arg0 (p / person :arg0-of (h / have-rel-role-91 :arg2 (d / dh))) :time (n / now))) :op2 (c / consult-01 :arg0 (p2 / person) :arg1 (c2 / concern-01 :arg0 (d2 / doctor :arg0-of (a3 / assist-01 :arg1 (d3 / doctor))))))
(c / change-01 :arg1 (l / law :arg0-of (s / stipulate-01 :arg1 (c2 / charge-05 :arg1 (p / person :mod (c3 / country :name (n / name :op1 "N-A"))) :arg2 (b / bias-01 :arg1 (p2 / person))))))
(d / doubt-01 :arg0 (p / person :quant 1 :arg1-of (i / include-91 :arg2 (p2 / person :quant 2012 :arg1-of (p3 / popular-02 :arg2 (p4 / popular :degree (m / most)))) :time (s / since :op1 (a / age-01 :arg1 (p5 / person) :arg2 (t / temporal-quantity :quant (N / N-A) :unit (y / year)))))) :arg1 (c / center :quant (m2 / more :mod (e / even))) :time (y2 / year :mod (t2 / this)) :arg1-of (c2 / cause-01 :arg0 (a2 / and :op1 (r / rising :arg0 (c3 / country :name (n / name :op1 "N-A")) :arg1 (r2 / rutherford :name (n2 / name :op1 (g / greg) :op2 (g2 / greg) :op3 (n3 / neil) :op4 (p6 / patrick) :op5 (p7 / patrick) :op6 (h / harris) :op7 (p8 / patrick)))))))
(a / and :op1 (c / come-01 :arg1 (c2 / criticize-01 :arg1 (m / macdonald :mod (b / byron))) :manner (f / fast)) :op2 (h / hard-02 :arg1 (c3 / criticize-01)))
(c / compare-01 :arg1 (n / number :quant-of (s / slash :op1 (h / hand :arg1-of (f / freshly)) :op2 (h2 / hand))) :arg2 (l / less-than :op1 60) :manner (c2 / compare-01))
(p / phone-number-entity :value (N / N-A))
(d / destroy-01 :arg0 (i / i) :arg1 (p / part :part-of (m / mainland :part-of (c / country :name (n / name :op1 "N-A"))) :arg0-of (k / kill-01 :arg1 (p2 / person :quant 4) :location (i2 / island :mod (m2 / madeira)) :mod (a / also))) :time (s / summer :mod (t / this)))
(c / cause-01 :arg0 (k / know-01 :arg0 (a / and :op1 (p / person :name (n / name :op1 "lionel" :op2 "messi")) :op2 (c2 / company :arg0-of (h / have-org-role-91 :arg1 (c3 / company)))) :arg1 (t / thing :manner-of (c4 / convince-01)) :degree (t2 / total) :mod (s / still)) :arg1 (d / didn :arg1 (a2 / and :op1 (p2 / person) :op2 (c5 / company)) :mod (s2 / still)))
(a / and :op1 (g / gajek :arg1 (f / front :mod (s / silke)) :arg2 (h / houseboat :path (l / lake :mod (m / mecklenburgian))) :mod (j / just)) :op2 (f2 / find-02 :arg1 (b / beautiful-02 :arg1 (i / it)) :mod (s2 / still)))
(c / cause-01 :arg0 (t / treat-03 :arg1 (p / person :arg0-of (h / have-rel-role-91 :arg2 (p2 / patient)))) :arg1 (o / obligate-01 :arg2 (d / do-02 :arg0 (t2 / this) :arg1 (a / amr-unknown) :arg2 (a2 / and :op1 (s / security) :op2 (t3 / terror)) :mod (a3 / actual))))
(s / sell-01 :arg0 (b / brand :name (n / name :op1 (v / vw))) :arg1 (r / rate-entity-91 :arg1 (v2 / vehicle :quant 1.8 :mod (f / few :degree (m / more))) :arg2 (t / temporal-quantity :quant (N / N-A) :unit (y / year))) :arg2 (c / car :time (d / date-entity :year 1944)) :time (y2 / year :mod (s2 / same)) :mod (g / globe))
(r / result-01 :mode (i / interrogative) :arg2 (t / thing :arg2-of (r2 / result-01 :arg1 (y / yougov))))
(m / multi-sentence :snt1 (l / like-01 :arg0 (w / we) :arg1 (p / person :arg0-of (w2 / work-01 :arg2 (s / society)) :poss (t / they))) :snt2 (i / infuriated :arg1 (e / employee :source (s2 / stack :mod (r / record)))))
(a / argue-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (c / court) :arg2 (a2 / authority))) :arg1 (r / recommend-01 :arg1 (e / empowered :arg1 (s / state) :arg2 (a3 / and :op1 (b / bring-01 :arg0 (s2 / state) :arg1 (s3 / shop :quant 72 :mod (t / temporary) :location (i / inside :op1 (p2 / person :location (i2 / inside :op1 (a4 / and :op1 (p3 / person :arg0-of (s4 / sell-01 :arg1 (g / good))) :op2 (p4 / person :arg0-of (s5 / smoke-02)) :op3 (p5 / person :arg0-of (s6 / sell-01 :arg1 (t2 / tea :mod (e2 / energy)))) :op4 (p6 / person :arg0-of (s7 / sell-01 :arg1 (t3 / tea))) :op5 (p7 / person :arg0-of (s8 / sell-01 :arg1 (t4 / tea))) :op5 (p8 / person :arg0-of (s9 / sell-01 :arg1 (t5 / tea))) :op6 (p9 / person :arg0-of (s10 / sell-01 :arg1 (t6 / tea))) :op7 (r2 / rate-entity-91 :arg1 (m / monetary-quantity :quant 50 :unit (c2 / cent)) :arg2 (v / volume-quantity :quant (N / N-A) :unit (g2 / gallon))))) :arg2 (m2 / monetary-quantity :quant 50 :unit (e3 / euro))))))))) :time (w / week :mod (t7 / this)) :location (p10 / person :name (n / name :op1 "N-A")))
(s / say-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (s2 / staff :poss (s3 / state :name (n / name :op1 "California"))) :arg2 (e / executive :mod (v / vice)))) :arg1 (m / move-01 :arg1 (a / and :op1 (p2 / person :arg0-of (h2 / have-org-role-91 :arg1 (h3 / headquarters :poss (s4 / state :name (n2 / name :op1 "California"))) :arg2 (e2 / executive :mod (c / chief)))) :op2 (p3 / person :arg0-of (h4 / have-org-role-91 :arg2 (e3 / executive :mod (c2 / chief)))) :op3 (p4 / person :arg0-of (h5 / have-org-role-91 :arg2 (e4 / executive :mod (c3 / chief)))) :op4 (p5 / person :arg0-of (h6 / have-org-role-91 :arg2 (e5 / executive :mod (c4 / chief)))) :op5 (p6 / person :arg0-of (h7 / have-org-role-91 :arg2 (e6 / executive :mod (c5 / chief))))) :time (s5 / so-far :op1 (d / date-entity :decade (N / N-A)))))
(a / and :op1 (t / twitch :arg1 (p / platform :mod (w / well))) :op2 (y / youtube :arg1 (p2 / platform)))
(m / multi-sentence :snt1 (f / find-01 :arg0 (a / and :op1 (s / strike-01 :ord (o / ordinal-entity :value 1 :range (o2 / ordinal-entity :value 1))) :op2 (h / hieve :quant 220 :arg1-of (h2 / hard-04) :arg0-of (g / go-06 :arg1 (h3 / history) :time (h4 / history))) :op3 (s2 / stanning :mod (h5 / heather))) :arg1 (s3 / significant-02 :arg1 (m2 / moment :mod (g2 / golden) :poss (a2 / and)) :time (m3 / moment :mod (g3 / golden) :poss (a3 / and)))) :snt2 (s4 / significant-02 :arg1 (a4 / added :mod (g4 / golden))))
(e / expect-01 :arg1 (r / rise-01 :arg1 (r2 / rise-01 :arg1-of (r3 / rise-01)) :time (a / after :op1 (n / now) :duration (t / temporal-quantity :quant (N / N-A) :unit (m / month))) :arg1-of (c / cause-01 :arg0 (s / situation :arg1-of (i / improve-01)))))
(h / have-03 :arg0 (s / she) :arg1 (t / toothache :arg1-of (s2 / strong-02)) :time (a / after :op1 (s3 / surgery-01 :arg1 (s4 / she) :arg2 (d / defend-01 :arg0 (s5 / she) :arg1 (2 / 29-year-old)))))
(a / and :op1 (b / be-located-at-91 :arg1 (a2 / and :op1 (p / person :quant (o / over :op1 200)) :op2 (m / man :quant (4 / 400m) :mod (f / fastest) :location (w / world))) :arg2 (f2 / far :degree (s / so))) :time (y / year :mod (t / this)))
(a / and :op1 (l / learn-01 :arg0 (i / i) :arg1 (s / swim-01 :arg0 (y / you) :arg2 (t / temporal-quantity :quant (N / N-A) :unit (m / month)) :time (b / before :op1 (w / war :name (n / name :op1 "N-A")))) :mod (o / only)) :op2 (c / complete-01 :polarity - :arg0 (i2 / i) :arg1 (d / distance-01 :arg1 (i3 / i) :arg1-of (l2 / long-03) :mod (s2 / such) :time (b2 / before :op1 (c2 / contest)))))
(s / see-01 :arg0 (i / i) :arg1 (t / threaten-01 :arg1 (e / elect-01) :arg2 (e2 / elect-01)))
(a / and :op1 (f / fall-01 :arg1 (t / thing :arg2-of (p / price-01)) :arg4 (a2 / and :op1 (c / clothing :mod (c2 / clothing)) :op2 (- / -lrb- :quant (p2 / percentage-entity :value 2.2)))) :op2 (f2 / footwear :arg0 (t2 / thing) :arg1 (a3 / and :op1 (p3 / person :mod (f3 / furniture)) :op2 (p4 / person :mod (f4 / furniture)) :op3 (p5 / person :mod (f5 / furniture)) :op4 (p6 / person :arg0-of (h / have-org-role-91 :arg2 (h2 / head-of-state))) :op5 (p7 / person :arg0-of (h3 / have-org-role-91 :arg2 (h4 / head-of-state))) :op6 (p8 / person :arg0-of (h5 / have-org-role-91 :arg2 (h6 / head-of-state))) :op7 (p9 / person :arg0-of (h7 / have-org-role-91 :arg2 (h8 / head-of-state))) :op7 (p10 / person :arg0-of (h9 / have-org-role-91 :arg2 (h10 / head-of-state))))))
(f / feel-02 :arg0 (a / and :op1 (p / person :arg0-of (h / have-org-role-91 :arg1 (g / group :mod (e / ethnic) :mod (t / tigray)) :arg2 (m / member))) :op2 (p2 / person :arg0-of (h2 / have-org-role-91 :arg1 (g2 / group :mod (e2 / ethnic) :mod (t2 / tigray)) :arg2 (m2 / member)))) :arg1 (a2 / and :op1 (p3 / person :arg0-of (h3 / have-org-role-91 :arg1 (g3 / group :mod (e3 / ethnic) :mod (t3 / tigray)) :arg2 (m3 / member))) :op2 (p4 / person :arg0-of (d / dominate-01 :arg1 (a3 / and :op1 (m4 / military) :op2 (i / intelligence) :op3 (t4 / trade-01) :op4 (p5 / politics))))) :manner (e4 / evident))
(c / contrast-01 :arg2 (s / say-01 :arg0 (p / person :name (n / name :op1 "mr." :op2 "trump")) :arg1 (s2 / sarcastic :arg1 (h / he) :manner (s3 / simple))))
(a / and :op1 (h / holder :arg1 (w / whale :name (n / name :op1 (2 / 211-year-old) :op2 (g / greenland) :op3 (g2 / greenland)) :mod (g3 / greenland) :mod (22 / 211-year-old) :location (b / bacon :arg1-of (p / put-01 :arg0 (b2 / bacon) :arg2 (s / supermarket))))) :op2 (c / catch-02 :arg1 (w2 / whale) :arg2 (s2 / state :name (n2 / name :op1 "Alaska"))))
(c / contrast-01 :arg1 (h / have-03 :arg0 (p / person :mod (c2 / country :name (n / name :op1 "N-A"))) :arg1 (i / industry :mod (f / fund-01) :mod (l / large))) :arg2 (b / bad-07 :arg1 (i2 / it) :degree (m / more) :time (c3 / come-12 :arg1 (i3 / infrastructure))))
(a / and :op2 (o / offer-01 :arg0 (i / i) :arg1 (q / quality :mod (q2 / quality :arg1-of (h / high-02 :degree (m / more) :compared-to (l / life)))) :arg1-of (c / cause-01 :arg0 (a2 / and :op1 (c2 / care-03 :arg1 (h2 / health) :mod (g / good)) :op2 (i2 / infrastructure) :op3 (c3 / crime-02 :quant (l2 / less :degree (e / equal)))))))
(s / spark :arg0 (i / incident) :arg1 (t / thing :mod (b / big :degree (p / pretty)) :location (i2 / internet)) :arg1-of (c / cause-01 :arg0 (c2 / call-02 :arg0 (p2 / person) :arg1 (t2 / thing :quant (w / whole)))))
(s / say-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg2 (a / ambassador))) :arg1 (i / interest-01 :arg1 (c / company :mod (c2 / country :name (n / name :op1 "N-A")) :location (s2 / shop :location (c3 / country))) :arg2 (s3 / sharp)) :time (s4 / since :op1 (l / lifted :arg1 (t / thing :arg2-of (s5 / sanction-02 :arg1 (c4 / country) :mod (i2 / international))) :mod (i3 / international))))
FAILED_TO_PARSE#Two concepts in a row.
(f / follow-01 :arg1 (t / this) :arg2 (b / business :mod (w / well-running) :poss (c / company :arg0-of (p / provide-01 :arg1 (a / and :op1 (c2 / company :arg0-of (p2 / provide-01)) :op2 (c3 / company :mod (t2 / telecommunication)))))))
(e / expose-01 :arg1 (a / and :op1 (h / heat) :op2 (l / light :mod (u / ultraviolet)) :quant (m / much :degree (t / too))) :concession (b / believe-01 :arg1 (h2 / habitable :arg1 (i / it) :time (b2 / before :op1 (n / now) :duration (s / several :op1 (t2 / temporal-quantity :quant (N / N-A) :unit (y / year)))))))
(p / pressure-01 :arg1 (c / company :mod (e / energy)) :arg1-of (c2 / cause-01 :arg0 (a / and :op1 (l / low-04 :arg1 (t / thing :arg2-of (p2 / price-01 :arg1 (o / oil)) :arg1-of (l2 / low-04 :degree (m / more))) :arg2 (m2 / monetary-quantity :arg2-of (p3 / price-01 :arg1 (o2 / oil)) :arg1-of (l3 / low-04 :degree (m3 / more)))) :op2 (s / situation :mod (e2 / economy) :arg1-of (e3 / exacerbated :arg0 (d / decide-01) :arg2 (l4 / leave-15 :arg0 (c3 / company) :arg1 (u / union-02 :arg1 (c4 / continent :name (n / name :op1 "N-A")))))))))
(e / expect-01 :arg1 (s / spend-01 :arg1 (p / project :mod (n / new) :arg1-of (s2 / spend-01 :arg3 (p2 / project :mod (n2 / new) :location (l / location :name (n3 / name :op1 "north" :op2 "sea"))) :arg3 (a / about :op1 (m / monetary-quantity :quant 1.4 :unit (d / dollar))))) :arg4 (o / over :op1 (m2 / monetary-quantity :quant 7 :unit (d2 / dollar)) :arg1-of (a2 / average-01) :time (b / before :op1 (n4 / now) :duration (t / temporal-quantity :quant (N / N-A) :unit (y / year))))) :location 2016)
(t / tested :arg0 (t2 / test-01) :arg1 (h / hr-v :quant (b / between :op1 88 :op2 120)) :arg1-of (c / cause-01 :arg0 (a / accelerates :arg1 (t3 / torque :quant (b2 / between :op1 88 :op2 120))) :arg1-of (c2 / cause-01 :arg0 (t4 / torque :arg1 (t5 / torque :mod (s / speed :arg1-of (w / wide-02)))))))
(g / go-02 :arg0 (y / you) :arg4 (b / bed) :time (t / time :arg1-of (n / normal-02) :poss (h / he)) :time (a / after :op1 (d / dressing :arg1 (y2 / you))))
(m / manage-02 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (p2 / police :mod (c / country :name (n / name :op1 "N-A"))) :arg2 (p3 / person :arg0-of (i / investigate-01)))) :arg1 (a / arrest-01 :arg1 (a2 / and :op1 (w / woman :quant 2) :op2 (m2 / man :quant 2)) :arg1-of (a3 / age-01 :arg2 (b / between :op1 (t / temporal-quantity :quant (N / N-A) :unit (y / year)) :op2 (t2 / temporal-quantity :quant (N2 / N-A) :unit (y2 / year))))))
(r / rule-01 :arg0 (c / court :mod (a / administrate-01) :mod (b / berlin)) :arg2 (a2 / and :op1 (l / law :polarity -) :op2 (p / person :arg0-of (w / work-01 :arg2 (c2 / construct-01))) :op3 (p2 / person :arg0-of (w2 / work-01 :arg2 (c3 / construct-01))) :op4 (p3 / person :arg0-of (w3 / work-01 :arg2 (c4 / construct-01))) :op5 (p4 / person :arg0-of (w4 / work-01 :arg2 (c5 / construct-01))) :op6 (p5 / person :arg0-of (w5 / work-01 :arg2 (c6 / construct-01))) :op7 (p6 / person :arg0-of (r2 / reside-01 :arg1 (p7 / person :arg0-of (r3 / reside-01))))))
(s / see-01 :arg0 (s2 / she) :arg1 (a / and :op1 (p / person :arg0-of (a2 / act-01)) :op2 (p2 / person :arg0-of (h / have-org-role-91 :arg1 (a3 / agency :mod (r / refugee) :mod (r2 / refugee)) :arg2 (a4 / authority))) :op3 (p3 / person :arg0-of (h2 / have-org-role-91 :arg1 (a5 / agency :mod (r3 / refugee) :mod (r4 / refugee)) :arg2 (a6 / authority))) :op4 (p4 / person :arg0-of (h3 / have-org-role-91 :arg2 (a7 / authority))) :op5 (a8 / anyone :mod (e / else))))
(c / cause-01 :arg1 (n / need-01 :arg1 (o / offer-01 :arg1 (a / and :op1 (t / thing :arg1-of (r / resemble-01 :arg2 (s / sports))) :op2 (c2 / contact-01 :accompanier (a2 / and :op1 (p / person :arg1-of (l / local-02)) :op2 (l2 / language :mod (e / especially))))))))
(w / wake-up-02 :arg1 (s / someone) :time (t / today) :topic (m / man :mod (t2 / this)))
(a / and :op1 (a2 / attack-01 :arg0 (m / man) :arg1 (e / ex-girlfriend :poss (m2 / man)) :manner (h / hamburg-harburg) :prep-with (k / knife)) :op2 (i / injure-01 :arg1 (m3 / man) :manner (s / severe)))
FAILED_TO_PARSE#Number of opening and closing brackets doesn't match.
(c / contrast-01 :arg2 (m / mean-01 :polarity - :arg1 (t / this) :arg2 (p / possible-01 :polarity - :arg1 (f / find-01 :arg1 (c2 / compromise-01) :time (y / yet)))))
(c / contrast-01 :arg1 (i / indicate-01 :arg0 (p / person :arg0-of (h / have-rel-role-91 :arg2 (g / grandparents))) :arg1 (s / suffer-01 :arg0 (p2 / person :arg0-of (h2 / have-org-role-91 :arg2 (h3 / head-of-state))) :arg1 (w / wound-01 :arg1 (p3 / person) :quant (s2 / several) :arg2-of (i2 / include-01 :arg1 (a / and :op1 (p4 / person :arg0-of (h4 / have-org-role-91 :arg2 (h5 / head-of-state))) :op2 (p5 / person :arg0-of (l / leg)) :op3 (p6 / person :arg0-of (h6 / have-org-role-91 :arg2 (h7 / head-of-state))) :op4 (p7 / person :arg0-of (h8 / have-org-role-91 :arg2 (h9 / head-of-state))) :op5 (p8 / person :arg0-of (h10 / have-org-role-91 :arg2 (h11 / head-of-state)))))))) :arg2 (c2 / conscious :polarity - :domain (p9 / person) :poss (t / transport-01 :arg0 (p10 / person) :arg1 (h12 / hospital))))
(s / see-01 :arg0 (s2 / strike-01 :time (e / end-01 :arg1 (d / date-entity :decade (N / N-A)))) :arg1 (a / and :op1 (o / operate-01 :quant (n / nearly :op1 13,000) :mod (r / routine)) :op2 (a2 / appointments :quant 100000) :op3 (p / person :arg0-of (s3 / specialize-01 :arg1 (m / medicine))) :op4 (p2 / person :arg0-of (s4 / specialize-01 :arg1 (m2 / medicine))) :op5 (p3 / person :arg0-of (s5 / specialize-01 :arg1 (m3 / medicine)))) :purpose (p4 / provide-01 :arg0 (s6 / strike-01) :arg1 (c / cover-03) :arg2 (l / line :mod (p5 / picket))))
(l / lead-03 :arg0 (c / culture :mod (c2 / correctness :mod (p / politics))) :arg2 (d / defraud-01 :arg1 (c3 / community :mod (r / religious-group :name (n / name :op1 "N-A"))) :arg1-of (s / spread-02 :arg1-of (w / wide-02))) :arg1-of (c4 / cause-01 :arg0 (i / ignore-01 :arg0 (r2 / report-01 :arg0 (g / government-organization :arg0-of (g2 / govern-01)) :arg0-of (d2 / devastate-01)) :time (t / today))))
(c / crazy-03 :arg1 (a / and :op1 (b / biker-doppelganger :arg1 (a2 / and :op1 (b2 / biker-doppelganger :poss (c2 / country :name (n / name :op1 "N-A"))) :op2 (a3 / athletes :arg1-of (f / fame-01) :mod (o / other) :arg1-of (f2 / fame-01) :mod (o2 / other)))) :op2 (a4 / athletes :mod (o3 / olympic) :arg1-of (f3 / fame-01) :mod (o4 / other))))
(s / say-01 :arg1 (p / possible-01 :arg1 (g / go-06 :arg0 (g2 / gymnast :name (n / name :op1 (g3 / gymnast) :op2 (g4 / gymnast)) :mod (c / country :name (n2 / name :op1 "N-A")) :mod (c2 / country :name (n3 / name :op1 "N-A"))) :arg1 (e / eye :part-of (p2 / person) :mod (l / large)))) :arg2 (p3 / possible-01 :arg1 (g5 / go-06 :arg1 (d / doppelganger :arg1 (d2 / doppelganger :arg0-of (r / rival-01 :arg1 (c3 / cuban-american)))))))
(a / and :op1 (r / represent-01 :arg0 (y / you) :arg1 (a2 / and :op1 (c / cbc) :op2 (c2 / canada))) :op2 (m / make-02 :arg0 (y2 / you) :arg1 (l / look-02 :arg0 (w / we :mod (a3 / all)) :arg1 (r2 / racist))))
(a / and :op1 (i / interview-01 :arg0 (p / person :arg1-of (i2 / include-91 :arg2 (p2 / person :quant (a2 / all) :arg1-of (i3 / include-91 :arg2 (p3 / person :quant (a3 / all) :arg0-of (f / favor-01 :arg1 (p4 / political-party :name (n / name :op1 "N-A")))) :arg3 (p5 / percentage-entity :value (N / N-A)))) :mod (p6 / particular))) :arg1 (p7 / product :arg0-of (c / contain-01 :arg1 (p8 / product :arg0-of (b / brave-02)))) :manner (p9 / particular)) :op2 (s / say-01 :arg0 (p10 / percentage-entity :value (N2 / N-A)) :arg1 (t / thing :arg0-of (c2 / contain-01 :arg1 (p11 / product :arg0-of (b2 / brave-02) :mod (l / lactic))) :mod (a4 / at-least))) :time (s2 / survey-01 :arg0 (a5 / and :op1 (p12 / person :arg0-of (h / have-org-role-91 :arg2 (h2 / head-of-state))) :op2 (p13 / person :arg0-of (h3 / have-org-role-91 :arg2 (i4 / intestines))) :op3 (p14 / person :quant 58 :arg1-of (i5 / include-91 :arg2 (p15 / person :quant 58)))) :mod (p16 / particular)))
(m / moment :time-of (s / start-01 :arg0 (p / person :arg0-of (t / tour-01) :mod (f / frightened)) :arg1 (p2 / panic-01 :arg1 (p3 / person)) :time (a / after :op1 (f2 / fly-01 :arg1 (j / jet) :destination (b / beach :mod (f3 / full))))))
(s / say-01 :arg2 (p / person :name (n / name :op1 "N-A")))
(e / exclude-01 :arg1 (a / athletes :arg1-of (l / light-06) :poss (c / country :name (n / name :op1 "Russia"))) :arg2 (g / game :mod (s / summer)) :time (t / then))
(r / resemble-01 :arg1 (r2 / resemble-01 :arg1 (s / she) :arg2 (c / character :mod (i / italian) :poss (i2 / i)) :degree (v / very) :arg1-of (c2 / cause-01 :arg0 (h / have-03 :arg0 (i3 / i) :arg1 (l / laughs :mod (r3 / roman))))) :arg2 (s2 / she))
(f / feel-01 :polarity - :arg0 (i / i) :arg1 (s / safe-01) :manner (s2 / safe-01) :time (m / month :ord (o / ordinal-entity :value 1 :range (m2 / month :mod (r / recent)))))
FAILED_TO_PARSE#Two concepts in a row.
(o / obligate-01 :arg2 (a / appear-01 :arg1 (p / person :arg0-of (h / have-rel-role-91 :arg1 (s / she) :arg2 (b / backwill :mod (t / tv)))) :time (w / week :mod (n / next)) :mod (i / in-fact)))
(c / consider-01 :arg1 (' / '' :arg1 (a / association :mod (c2 / country :name (n / name :op1 "N-A") :degree (m / most)) :mod (c3 / country :name (n2 / name :op1 "N-A")))))
(d / do-02 :arg0 (s / she) :arg1 (s2 / something) :arg2 (a / and :op1 (h / health :poss (s3 / she)) :op2 (m / mind :poss (s4 / she))) :manner (w / way))
(s / say-01 :arg1 (g / go-02 :arg0 (y / you) :arg3 (c / connect-01 :arg1 (y2 / you) :arg2 (e / explode-01 :location (h / hua)))))
(s / say-01 :arg0 (a / and :op1 (p / person :arg0-of (h / have-org-role-91 :arg1 (j / junta) :arg2 (m / minister :mod (j2 / junta)))) :op2 (p2 / person :arg0-of (h2 / have-org-role-91 :arg2 (m2 / minister :mod (p3 / prime))))) :arg1 (c / contrast-01 :arg1 (a2 / attempt-01 :arg1 (b / bomb)) :arg2 (a3 / and :op1 (m3 / move-01 :arg1 (c2 / country) :arg2 (s2 / stability)) :op2 (i / improve-01 :arg1 (a4 / and :op1 (s3 / situation :mod (e / economy)) :op2 (t / tourism))))))
(c / cooperate-01 :polarity - :arg0 (t / this) :arg1 (c2 / cause :arg1-of (c3 / cause-01 :arg0 (c4 / cause :quant 1))))
(s / schedule-01 :arg1 (s2 / salons :arg1 (p / publication :name (n / name :op1 "N-A")) :arg3 (p2 / product-of :op1 21 :op2 14.00) :location (m / moderne :name (n2 / name :op1 (s3 / salle) :op2 (s4 / southwestern) :op3 (w / wilshire) :op4 (w2 / wilshire) :op5 (b / blvd) :op6 (b2 / blvd) :op7 (b3 / blvd)))) :arg3 (s5 / score-entity :op1 21 :op2 14.00))
(s / suggest-01 :arg0 (p / person :arg0-of (h / have-org-role-91 :arg1 (j / journal-then :name (n / name :op1 (m / mr.) :op2 (s2 / street)) :mod (m2 / male)) :arg2 (d / dooley))) :arg1 (e / expect-01 :arg0 (a / and :op1 (p2 / person :arg0-of (h2 / have-org-role-91 :arg2 (h3 / head-of-state))) :op2 (p3 / person :mod (m3 / male) :arg0-of (h4 / have-org-role-91 :arg2 (a2 / athletes-as)))) :arg1 (a3 / and :op1 (a4 / air-ringing :arg0 (p4 / person)) :op2 (b / base :mod (n2 / new) :mod (f / fan) :poss (p5 / person)))) :condition (p6 / possible-01 :arg1 (a5 / achieve-01 :arg0 (a6 / and :op1 (p7 / person :arg0-of (h5 / have-org-role-91 :arg1 (g / game :name (n3 / name :op1 "N-A")))) :op2 (p8 / person :arg0-of (o / objectification :arg1 (m4 / male)) :mod (m5 / male))) :arg1 (c / consciousness) :mod (o2 / only))))
(c / came :arg1 (c2 / call-03 :arg1 (c3 / change-01 :arg1 (p / politics))) :arg2 (r / resist-01 :arg0 (g / government-organization :arg0-of (g2 / govern-01)) :arg1 (r2 / resist-01 :arg0 (g3 / government-organization) :manner (v / violent))))
(m / meat :arg1-of (f / focus-01 :arg2 (c / cuisine :mod (c2 / country :name (n / name :op1 "N-A"))) :duration (t / temporal-quantity :quant (N / N-A) :unit (y / year))) :arg1-of (b / become-01 :arg2 (l / luxury :arg1-of (r / rare-02))))
(c / cause-01 :arg0 (l / lose-02 :arg0 (h / heat) :arg1 (h2 / heat)) :arg1 (l2 / large :degree (m / more :degree (m2 / much)) :compared-to (e / elephant :arg1 (e2 / elephant))))
(s / say-01 :arg0 (p / person :name (n / name :op1 "N-A") :arg0-of (h / have-org-role-91 :arg1 (b / bank :mod (c / central) :part-of (b2 / bank :mod (c2 / central) :part-of (c3 / country :name (n2 / name :op1 "N-A")))) :arg2 (- / -rrb-))) :arg1 (a / and :op1 (r / responsible-03 :arg0 (p2 / person :arg0-of (h2 / have-org-role-91 :arg1 (b3 / bank :mod (c4 / central) :part-of (c5 / country :name (n3 / name :op1 "N-A"))) :arg3 (a2 / apprentice-01 :arg0 (p3 / person)))) :arg1 (a3 / and :op1 (r2 / responsible-03 :arg0 (p4 / person) :arg1 (p5 / policy :mod (m / money))) :op2 (o / oversight :arg0 (p6 / person) :arg1 (b4 / bank :mod (l / large :degree (m2 / most)) :example (a4 / and :op1 (s2 / supervise-01 :arg1 (i / insure-02 :arg1 (i2 / insure-02 :mod (c6 / continent :name (n4 / name :op1 "N-A"))))) :op2 (s3 / supervise-01 :arg1 (a5 / and :op1 (s4 / supervise-01 :arg1 (i3 / insure-02 :arg1 (c7 / continent :name (n5 / name :op1 "N-A")))) :op2 (c8 / council :mod (r3 / risk-01)))))))))) :arg2 (f / frankfurt))
(s / sell-01 :arg0 (s2 / she) :arg1 (p / picture :poss (s3 / she)) :arg2 (p2 / person :arg0-of (h / have-rel-role-91 :arg1 (s4 / she) :arg2 (d / daughter))) :purpose (l / love-01 :arg0 (s5 / she) :arg1 (f / forum)))
(a / and :op1 (d / dismiss-01 :arg0 (p / person :arg0-of (l / leave-15 :arg1 (a2 / and :op1 (p2 / person :arg0-of (l2 / leave-15 :arg1 (r / relation-03 :arg0 (p3 / person) :arg2 (a3 / and :op1 (p4 / person :arg0-of (t / traffic-01 :arg1 (v / violence))) :op2 (p5 / person :arg0-of (o / oppress-01 :arg1 (d2 / debt :arg0-of (o2 / oppress-01)))))))) :op2 (p6 / person :arg0-of (w / work-01)) :op3 (p7 / person :arg0-of (w2 / work-01)) :op4 (p8 / person :arg0-of (w3 / work-01)) :op5 (p9 / person :arg0-of (w4 / work-01))))) :arg1 (p10 / problem :arg1-of (l3 / legal-02))) :op2 (s / show-01 :arg0 (s2 / survey-01 :mod (t2 / this)) :arg1 (p11 / possible-01 :arg1 (g / get-01 :arg0 (p12 / person) :arg1 (h / help-01 :arg0 (p13 / person)) :degree (t3 / total)))))
FAILED_TO_PARSE#Two concepts in a row.
(s / sell-01 :arg1 (u / unit :quant (a / about :op1 1400000000)) :manner (a2 / and :op1 (s2 / samsung :arg1 (u2 / unit)) :op2 (a3 / apple :arg1 (u3 / unit))))
(l / look-02 :arg0 (g / german :frequency (r / rate-entity-91 :arg3 (t / temporal-quantity :quant (N / N-A) :unit (d / day)))) :arg1 (d2 / day :mod (p / phone :arg1-of (m / mobile-02)) :poss (h / he)) :frequency (r2 / rate-entity-91 :arg3 (t2 / temporal-quantity :quant (N2 / N-A) :unit (d3 / day))))
(k / know-02 :arg1 (r / risk-01 :arg2 (r2 / ransomware)) :arg2 (c / company :quant (m / many) :arg0-of (b / better :arg1 (d / data :poss (c2 / company)) :manner (g / good :degree (m2 / more)))) :time (n / now))
(s / say-01 :arg0 (h / he) :arg1 (v / violate-01 :polarity - :arg0 (h2 / he) :arg1 (d / duty :mod (i / information) :poss (h3 / he))))
(r / reach-01 :arg0 (b / backlog :mod (b2 / backlog)) :arg1 (b3 / bridge :location (a / and :op1 (p / path :mod (a2 / albersloher)) :op2 (b4 / beyond))))
(n / night :mod (r / restful))
(a / and :op1 (f / feel-02 :arg0 (p / person :quant (m / many)) :arg1 (f2 / feel-02 :arg0 (p2 / person) :arg1 (o / or :op1 (u / unsatisfactory :arg1 (s / sleep-01 :arg0 (p3 / person))) :op2 (i / inadequate :domain (p4 / person)))) :mod (p5 / particular)) :op2 (s2 / say-01 :arg0 (p6 / person) :arg1 (a2 / and :op1 (w / wagonman :arg0 (p7 / person :arg0-of (h / have-org-role-91 :arg1 (b / board :mod (h2 / house :mod (g / german))) :arg2 (m2 / member))) :arg1 (p8 / person :arg0-of (h3 / have-org-role-91 :arg1 (b2 / board :mod (h4 / house :mod (g2 / german))) :arg2 (m3 / member))) :arg2 (p9 / practice :arg1-of (l / low-04 :degree (m4 / more)))) :op2 (v / varel :arg1 (p10 / person)))))
(c / comment-01 :arg0 (p / person :name (n / name :op1 "N-A") :arg0-of (h / have-org-role-91 :arg2 (d / deibler) :time (f / former)) :arg0-of (h2 / have-org-role-91 :arg2 (d2 / deibler) :time (f2 / former)) :arg0-of (h3 / have-org-role-91 :arg2 (d3 / deibler) :time (f3 / former)) :arg0-of (h4 / have-org-role-91 :arg2 (d4 / deibler) :time (f4 / former)) :arg0-of (h5 / have-org-role-91 :arg2 (d5 / deibler) :time (f5 / former)) :arg0-of (h6 / have-org-role-91 :arg2 (d6 / deibler))))
(s / see-01 :arg0 (s2 / she) :arg1 (a / and :op1 (p / person :arg0-of (a2 / act-01)) :op2 (r / refugee :arg0-of (a3 / assist-01 :arg2 (r2 / refugee))) :op3 (g / government-organization :arg0-of (a4 / administrate-01)) :op4 (g2 / government-organization :arg0-of (a5 / administrate-01)) :op5 (p2 / person :mod (e / else) :arg0-of (i / involve-01 :arg1 (p3 / person)))))
(s / suggest-01 :arg0 (c / client :source (g / group :arg0-of (w / work-01))) :arg1 (m / more :domain (p / person :arg0-of (v / volunteer-01)) :compared-to (p2 / person :arg0-of (h / have-org-role-91 :arg1 (g2 / group :arg0-of (w2 / work-01)))) :degree (m2 / more :compared-to (p3 / person :arg0-of (h2 / have-org-role-91 :arg1 (g3 / group :name (n / name :op1 "N-A") :arg0-of (w3 / work-01))))) :arg0-of (h3 / have-03 :arg1 (p4 / problem :mod (a / above :op1 (p5 / problem :quant (a2 / all))))) :time (n2 / now)))
(a / and :op1 (i / invade-01 :arg1 (m / man :quant 2 :arg1-of (k / know-01 :polarity -)) :location (a2 / apartment :location (h / house :name (n / name :op1 (l / lime)) :location (h2 / house :name (n2 / name :op1 (l2 / lime))) :time (m2 / morning :mod (f / friday))))) :op2 (i2 / invaded :arg1 (m3 / man :quant 50 :mod (a3 / a.m.))))
(s / say-01 :arg0 (p / profit :time (b / before :op1 (i / increase-01 :arg1 (a / and :op1 (i2 / interest-01) :op2 (t / tax-01))))) :arg1 (m / monetary-quantity :quant 89.5 :unit (e / euro) :arg1-of (a2 / amount-01 :arg2 (m2 / monetary-quantity :quant 110.5 :unit (e2 / euro)))))
