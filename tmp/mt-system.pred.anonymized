photographer :arg1 person_name_0 :arg2 ( championship :quant num_0 :location country_name_1 ) :mod only :arg1-of ( cause-01 :arg0 ( mr :arg0 ( and :op1 ( person_name_2 :arg0-of ( have-org-role-91 :arg1 country_name_3 :arg2 ( agent :mod coach ) :time current ) :ord ( ordinal-entity ordinal-entity_num_1 ) ) :op2 ( person_name_4 :arg0-of ( have-org-role-91 :arg1 country :arg2 agent :time current ) ) :ord ( ordinal-entity ordinal-entity_num_1 ) ) :arg1 ( person :arg0-of ( play-01 :mod globe ) ) ) )
obligate-01 :arg2 ( access-01 :arg1 ( facility :mod home :quant all ) :mod also )
say-01 :arg1 ( interest-01 :arg1 country_name_0 :arg2 country_name_1 ) :mod also
feel-01 :arg0 he :arg1 ( be-located-at-91 :arg1 person_name_0 :arg2 ( foot :part-of he ) ) :time ( alone :domain person :mod again )
shrunk :arg1 ( and :op1 ( turnover :mod supermarkets ) :op2 hypermarketti ) :arg2 ( more-than :op1 ( percentage-entity percentage-entity_num_0 ) ) :time ( begin-01 :arg1 year )
withdraw-01 :arg0 public :arg1 image :time ( summer :mod this )
and :op1 ( flee-05 :arg0 ( person_name_0 :arg0-of ( have-org-role-91 :arg2 ( minister :mod prime ) ) ) :arg1 country ) :op2 ( say-01 :arg0 person :arg1 ( and :op1 ( besiege :arg0 ( apartment :mod official :poss person ) :arg1 army ) :op2 ( seize-01 :arg0 army :arg1 ( building :mod ( government-organization :arg0-of govern-01 ) ) :location ( peninsula_name_1 :mod capital ) ) ) )
multi-sentence :snt1 ( referendum :topic ( depend-01 :polarity - ) ) :snt2 ( september :li num_0 )
leak-01 :arg0 person_name_0 :arg1 ( hakkeri :medium online )
sea :arg1-of freeze-01 :arg0-of ( oppose-01 :arg1 they ) :mod ( huge :arg1-of freeze-01 )
say-01 :arg0 ( presence :mod online :poss ( newspaper :mod day ) ) :arg1 ( appear-02 :arg1 ( affair :mod nee :mod nee ) :arg1-of ( present-01 :arg0 ( and :op1 ( person :arg0-of ( have-org-role-91 :arg1 police :arg2 official ) ) :op2 ( person :arg0-of ( have-org-role-91 :arg1 ( government-organization :arg0-of ( govern-01 :arg1 city_name_0 ) ) :arg2 official ) ) ) :arg2 ( and :op1 ( person :arg0-of ( have-org-role-91 :arg1 police :arg2 official ) ) :op2 ( person :arg0-of ( have-org-role-91 :arg1 ( government-organization :arg0-of ( govern-01 :arg1 city ) ) :arg2 official ) ) ) :location ( blackmail :location ( organization_name_1 :location friday ) ) ) )
change-01 :arg0 ( plan-01 :arg0 town ) :arg1 ( want-01 :arg0 city :arg1 ( allow-01 :arg0 city :arg1 ( continuation :mod ( area :mod tourism ) ) ) )
multi-sentence :snt1 person_name_0 :snt2 ( differ-02 :polarity - :arg1 ( presence :poss image ) :arg2 ( sell-01 :arg1 ( product :arg1-of steal-01 ) ) :mod any )
say-01 :arg1 ( want-01 :arg0 he :arg1 same-01 ) :arg2 person_name_0
obligate-01 :arg1 ( person :arg0-of ( have-rel-role-91 :arg1 he :arg2 father ) ) :arg2 ( escape-01 :arg0 person :arg1 ( lip :poss person ) ) :time always :time ( before :op1 ( '' :arg0 ( person :arg0-of ( have-rel-role-91 :arg1 he :arg2 father ) ) :arg1 ( person :arg0-of ( have-rel-role-91 :arg1 he :arg2 father ) ) ) )
decide-01 :arg0 ( government-organization :arg0-of ( govern-01 :arg1 country_name_0 ) ) :arg1 ( give-01 :arg0 decide-01 :arg1 power :arg2 ( person :mod communism ) :purpose ( weed :arg0 person :arg1 ( candidate :arg0-of ( obedient :polarity - :arg1 city_name_2 ) ) ) )
and :op1 ( silver :domain ( nailonpaita :mod kudottu ) ) :op2 ( sensors :arg1 ( information :topic ( and :op1 ( mokkula :arg1 information ) :op2 ( Ã¤lypuhelin :arg1 information ) :mod still ) ) )
part :arg1 ( star :location ( star :location ( star :quant num_0 ) ) )
have-03 :arg0 ( person :arg0-of ( have-org-role-91 :arg1 ( team :mod nation :poss location_name_0 ) :arg2 ( person_name_1 :mod nation ) ) ) :arg1 ( match-03 :quant num_0 )
comment-01 :polarity - :arg0 ( and :op1 person_name_0 :op2 person_name_1 :op3 ( person_name_2 :arg0-of ( have-org-role-91 :arg2 suckers ) ) :op4 ( person_name_3 :arg0-of ( have-org-role-91 :arg2 suckers ) ) :op5 ( person_name_3 :arg0-of ( have-org-role-91 :arg2 suckers ) ) ) :arg3 ( hack-04 :arg0-of hack-04 ) :time yesterday
invest-01 :arg0 apollo :arg1 ( monetary-quantity monetary-quantity_num_0 :unit ( dollar :mod renminbi ) ) :arg2 ( company :mod cruise :mod ( monetary-quantity monetary-quantity_num_0 :unit ( dollar :mod renminbi ) ) )
multi-sentence :snt1 ( contrast-01 :arg1 ( good :domain battle-01 ) :arg2 ( good :degree ( more :degree little ) :domain battle-01 ) ) :snt2 ( see-01 :arg0 ( person_name_0 :arg0-of ( have-org-role-91 :arg2 coach ) ) :arg1 ( person_name_2 :arg0-of ( have-org-role-91 :arg2 coach ) ) )
total-01 :arg1 ( game :mod city_name_0 ) :arg2 ( more-than :op1 num_0 ) :arg1-of report-01
grow-03 :arg1 ( good :mod everyday ) :arg1-of instead-of-91 :mod ( almost :op1 ( percentage-entity percentage-entity_num_0 ) )
do-02 :arg1 ( that :quant all )
possible-01 :arg1 ( explain-01 :arg0 ( perspective :topic ( amount :quant-of ( amount :quant-of ( amount :quant-of grow-01 ) ) ) ) :manner amr-unknown :mod also ) :mod also
try-01 :arg0 authority :arg1 ( curb-01 :arg0 authority :arg1 ( use-01 :arg1 ( holiday :name ( name :op1 magnus ) ) :arg1-of ( control-01 :polarity - ) ) ) :manner ( reduce-01 :arg0 authority :arg1 ( number :quant-of ( person :arg0-of participate-01 ) :location ( pubs :mod notorious ) ) ) :time ( since :op1 then )
have-part-91 :arg1 ( evening :time early ) :arg2 ( available-02 :arg2 ( location_name_0 :mod media ) :arg3 ( fair :mod ( trade-01 :medium tv ) :mod grand ) )
peace :polarity - :mod whole
meet-03 :arg0 ( person :arg0-of ( have-org-role-91 :arg1 country_name_0 :arg2 ( minister :mod prime :mod new ) ) ) :arg1 ( person_name_2 :arg0-of ( have-org-role-91 :arg1 country :arg2 ( minister :mod prime :mod new ) ) ) :location city_name_3 :purpose ( discuss-01 :arg0 person :arg1 ( and :op1 ( number :mod economy ) :op2 ( number :mod safe-01 ) ) ) :time ( since :op1 ( elect-01 :arg1-of possible-01 ) )
say-01 :arg0 person_name_0 :arg2 person_name_1
multi-sentence :snt1 ( spend-02 :arg0 person_name_0 :arg1 ( and :op1 award_name_1 :op2 ( series :name ( name :op1 documentaries ) ) :op3 ( part :mod tv ) :op4 ( part :mod movie ) :op5 ( part :mod movie ) ) :time ( decade :mod subsequent ) ) :snt2 ( seem-01 :arg1 ( or :op1 ( site :mod ( dumped :mod just ) ) :op2 ( track :mod side :mod transport-01 ) :mod just ) )
have-condition-91 :arg1 ( fault-01 :polarity - :arg1 i :arg2 and ) :arg2 ( want-01 :polarity - :arg0 they :arg1 ( and :op1 ( take-01 :arg0 they :arg1 it :arg3 place ) :op2 ( use-01 :arg0 they :arg1 opportunity ) ) )
have-03 :arg0 i :arg1 ( idea :mod this :arg1-of ( discuss-01 :time ( time :time-of ( care-03 :arg1 health ) ) ) ) :mod apparent :time ( before :op1 ( come-01 :arg1 i :location here ) )
guardian
protect-01 :arg0 we :arg1 ( and :op1 ( interest :poss we ) :op2 ( economy :poss we ) :op3 ( sector :poss we ) :op4 ( company :poss we ) )
contrast-01 :arg2 ( and :op1 ( transfer-01 :arg0 person_name_0 :arg1 ( credit :mod all ) :arg2 ( fan :mod wolf ) ) :op2 ( do-02 :arg0 person :arg1 style ) )
mean-01 :arg1 ( gesture :mod this ) :arg2 patience
contain-01 :arg0 ( thing :arg1-of contain-01 :ord ( ordinal-entity ordinal-entity_num_0 ) ) :arg1 ( person_name_1 :arg1-of ( convict-01 :arg2 drunk ) :arg1-of ( convict-01 :arg2 drunk :time ( date-entity month_date-entity_0 year_date-entity_0 ) ) ) :ord ( ordinal-entity ordinal-entity_num_0 )
die-01 :arg1 ( fire :quant ( majority :mod vast ) ) :location home
say-01 :arg0 she :arg1 ( hopeful-03 :arg0 ( person :arg0-of study-01 :mod each ) :arg1 ( hopeful-03 :arg0 person ) )
love-01 :arg0 i :arg1 ( job :mod this ) :manner frank
and :op1 ( concern-01 :arg0 ( concern-01 :arg0 ( person :mod young ) :arg1 ( person :mod young ) ) ) :op2 ( call-01 :arg0 person :arg1 police :arg2 iltakahdeksalta )
and :op1 ( ' :arg1 ( song :arg1-of fame-01 ) :manner jazzpianisti ) :op2 ( tell-01 :arg0 person_name_0 :arg1 ( and :op1 ( tell-01 :arg0 person :arg2 he ) :op2 ( raise-02 :arg0 ( nature :mod ( time :arg1-of same-01 ) ) :arg1 ( finger :quant num_0 ) :location quiet ) :time ( time :arg1-of same-01 ) ) )
report-01 :arg0 ( authority :mod country_name_0 ) :arg1 sunday
event :mod coincidences
compete-01 :location ( or :op1 ( personalities :mod well ) :op2 ( event :location image ) )
and :op1 ( beautiful-02 :arg1 ( opera :mod soap :mod ( popular :degree most ) :poss country_name_0 ) ) :op2 ( return-01 :arg1 opera :arg0-of brave-02 :time today )
and :op1 ( return-01 :arg1 ( person :arg0-of ( have-rel-role-91 :arg1 ( child :mod israeli ) :arg2 child ) ) :arg4 school :time ( during :op1 ( bomb :mod summer ) ) ) :op2 ( bomb-01 :arg0 ( and :op1 rocket :op2 organization_name_1 ) :arg1 ( and :op1 rocket :op2 school ) :arg1-of ( remain-01 :arg3 close-01 :time ( recover-01 :arg1 region ) ) )
have-concession-91 :arg1 ( have-03 :polarity - :arg0 you :arg1 ( quality :mod ( cameras :mod action ) :mod this ) :frequency often ) :arg2 ( cameras :location ( screen :mod lcd ) )
and :op1 ( cut-02 :arg0 person_name_0 :arg1 ( rate-entity-91 :arg1 ( monetary-quantity monetary-quantity_num_0 :unit dollar ) :arg2 ( volume-quantity volume-quantity_num_1 :unit gallon ) ) :arg3 ( unit :mod ( integrity :mod public ) :poss country ) ) :op2 ( deal-01 :arg0 person :arg2 ( thing :arg2-of ( accuse-01 :arg0 ( sector :arg1-of public-02 ) :time ( refuse-01 :arg0 person_name_2 :arg1 ( resign-01 :arg0 person ) ) ) ) )
say-01 :arg0 ( person_name_0 :arg0-of ( have-org-role-91 :arg1 press ) ) :arg1 ( delay-01 :arg1 project :time recent :arg1-of ( cause-01 :arg0 ( apply-02 :arg1 ( accept-01 :arg1 reactor ) ) ) :mod main )
need-01 :polarity - :arg0 person_name_0 :arg1 ( question-01 :arg1 ( answer-01 :arg1 ( good-04 :arg1 species :arg2 species :degree very ) ) ) :arg1-of need-01
cause-01 :arg1 ( possible-01 :arg1 ( forget-01 :arg0 we :arg1 it ) )
try-01 :mode imperative :arg0 you :arg1 ( close-06 :arg1 you :arg2 subject )
expect-01 :arg1 ( belong-01 :arg0 country_name_0 :arg1 country_name_1 :mod again :arg1-of ( cause-01 :arg0 ( recommend-01 :arg1 ( continue-01 :arg0 country_name_2 :arg1 ( place-01 :arg0 country :arg1 ( profit :arg1-of need-01 ) ) ) ) ) ) :condition ( expect-01 :arg1 ( open-01 :arg1 ( thing :arg1-of ( lose-02 :arg2 country ) ) ) )
and :op1 ( basket :arg1 ( and :op1 basket :op2 air ) :arg2 ( play-01 :mod ball ) ) :op2 ( more :compared-to ( hundreds :arg1 ( person :arg0-of view-01 ) ) )
drawn :arg1 ( rate-entity-91 :arg1 num_0 :arg2 ( temporal-quantity temporal-quantity_num_0 :unit year ) ) :arg4 ( profit-01 :arg1 match-03 )
strike-01 :arg0 person_name_0 :time ( season :quant num_0 :mod last ) :time ( win-01 :arg0 city_name_1 :arg1 ( and :op1 ( universe :mod serie ) :op2 ( roses :location country_name_2 ) ) )
have-concession-91 :arg1 ( possible-01 :arg1 ( say-01 :arg0 i :arg1 ( contrast-01 :arg1 ( love-01 :arg0 i :arg1 you ) :arg2 ( early :degree too :domain i ) ) ) )
appear-01 :arg1 ( person_name_0 :arg0-of ( tell-01 :arg1 ( and :op1 love-01 :op2 j ) :manner literal ) ) :arg2 praise :mod only
and :op2 ( recommend-01 :arg1 ( review-01 :arg1 ( alkusammutusvÃ¤line :mod that :quant all ) :arg1-of easy-05 ) )
e-books
want-01 :arg0 ( town :location location_name_0 ) :arg1 ( strengthen-01 :arg0 town :arg1 ( car :poss town ) :arg3 ( park :mod ( car :arg1-of ( locate-01 :location ( next-to :op1 ( organization_name_1 :location hotel ) ) ) ) ) )
think-01 :arg0 i :arg1 exhibit-01
cruises :arg1 ( and :op1 ( ship :mod cruise :arg2-of ( total-01 :arg1 ( ship :quant num_0 :mod cruise ) ) ) :op2 ( map :location ( over :op1 world-region_name_2 ) ) :op3 ( map :location ( over :op1 world-region_name_2 ) ) :op4 ( map :location ( and :op1 world-region_name_2 :op2 country_name_3 ) ) ) :arg2 ( and :op1 world-region_name_2 :op2 country_name_3 :op3 sea_name_4 :op4 continent_name_8 )
multi-sentence :snt1 ( think-01 :arg0 i :arg1 ( idea :topic ( oho :arg1 '' ) ) ) :snt2 ( change-01 :arg0 you :arg1 '' ) :li num_0
include-91 :arg1 ( organization_name_0 :arg0-of ( threaten-01 :arg1 ( block-01 :arg0 person :arg1 ( operation :mod business :location block ) ) ) ) :arg2 ( grant-01 :polarity - :arg0 city_name_1 :arg1 ( suffrage :mod universal :mod genuine :beneficiary city_name_2 ) :arg2 city ) :degree large
get-01 :arg0 you :arg1 ( foot :part-of you ) :arg3 ( sti :arg1-of actual-02 ) :mod ( large :polarity - )
arrest-01 :arg0 country_name_0 :arg1 ( man :arg2-of ( suspect-01 :arg1 terrorism ) ) :arg2 ( peninsula_name_1 :location peninsula_name_1 )
succeed-01 :arg0 person_name_0 :arg1 ( succeed-01 :arg0 person :arg1 ( succeed-01 :arg0 person :arg1 ( succeed-01 :arg0 person :arg1 ( succeed-01 :arg0 person ) ) ) ) :duration ( multiple :op1 ( temporal-quantity temporal-quantity_num_0 :unit decade ) )
strive-01 :arg0 i :arg1 ( recapitulate :arg0 you :arg1 ( safe-01 :arg1 fire :location ( home :poss they ) ) )
contrast-01 )
except-01 :arg1 ( think-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg2 grandmother ) ) :arg1 cephalopods )
die-01 :arg1 ( person :quant num_0 :arg1-of ( die-01 :time ( year :mod last ) ) )
agree-01 :arg0 ( board :mod city ) :arg1 ( obligate-01 :arg2 ( make-18 :arg1 save-01 ) ) :mod unanimous
show-01 :arg0 ( result :mod data :mod rp ) :arg1 ( and :op1 ( rise-01 :arg1 ( thing :arg2-of ( price-01 :arg1 data ) :location city_name_0 ) :arg2 ( percentage-entity :value num_0 ) ) :op2 ( rise-01 :arg1 ( thing :arg2-of ( price-01 :arg1 data ) ) :location city :time ( year :mod previous ) ) )
say-01 :arg1 ( want-01 :arg0 he :arg1 same-01 ) :arg2 person_name_0
and :op1 ( employ-01 :polarity - :arg1 ( person :arg1-of employ-01 ) :time ( after :op1 now :quant ( between :op1 ( temporal-quantity temporal-quantity_num_0 :unit week ) :op2 ( temporal-quantity temporal-quantity_num_1 :unit week ) ) ) ) :op2 ( announce-01 :arg0 ( government-organization :arg0-of govern-01 ) )
say-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg2 ( prosecute-01 :arg1-of public-02 ) ) ) :arg1 ( and :op1 ( drive-01 :arg0 person_name_0 :arg1 ( 3 :poss organization_name_1 ) ) :op2 ( cause-01 :arg0 person :arg1 ( injure-01 :arg1 girl ) ) )
return-01 :polarity - :arg1 ( child :quant all ) :arg4 school :location country_name_0
contrast-01 :arg1 ( confirm-01 :arg0 ( depart-01 :arg0 person_name_0 ) ) :arg2 ( stepped :arg1 replace-01 :time ( time :arg1-of same-01 :mod almost ) :time ( time :arg1-of same-01 ) )
declare-02 :arg0 person_name_0 :arg1 ( possible-01 :arg1 ( steal-01 :arg0 ( person :arg0-of hack-04 :mod appalled ) :arg1 ( and :op1 ( fiancee :arg0 person ) :op2 ( hollywood :arg0 ( person_name_1 :arg0-of ( have-rel-role-91 :arg1 person :arg2 brother ) ) :arg1 photo ) ) ) )
say-01 :arg0 ( rescue-01 :arg0 country_name_0 ) :arg1 ( kill-01 :arg0 riot-01 :arg1 ( person :quant num_0 :arg1-of differ-02 :arg1-of ( differ-02 :arg2 fire ) ) :time already :time already )
sceptical :arg0 ( facility_name_0 :arg1-of ( near-02 :arg2 ( in-front-of :op1 ( front :poss ( person :mod country_name_1 :arg0-of ( reside-01 :arg1 community ) ) ) ) ) :quant many ) :arg1 ( return-01 :arg1 ( boy :arg1-of ( kill-01 :arg0 ( boy :location community ) ) ) )
contrast-01 :arg2 ( and :op1 ( pass-01 :arg0 chamber :arg1 ( credit :quant all :beneficiary ( fan :mod wolves ) ) ) :op2 ( do-02 :arg0 chamber :arg1 credit :manner style ) )
say-01 :arg0 he :arg1 ( leave-11 :arg0 person_name_0 :arg1 ( person :mod garden ) )
and :op2 ( recommend-01 :arg1 ( check-01 :arg0 everyone :arg1 ( easy-05 :arg1 ( use-01 :arg1 ( instrument :mod early ) ) ) ) )
have-condition-91 :arg1 ( return-01 :polarity - :arg1 we :direction back ) :arg2 ( help-01 :polarity - :arg0 they :arg1 i )
cause-01 :arg0 ( possible-01 :arg1 ( share-01 :arg0 person_name_0 :arg1 ( love-01 :arg0 person :arg1 ( person :arg0-of ( have-rel-role-91 :arg1 person :arg2 child ) ) ) ) ) :arg1 ( possible-01 :arg1 ( share-01 :arg0 person :arg1 ( love-01 :arg0 person ) :arg2 ( person :arg0-of ( have-rel-role-91 :arg1 person :arg2 child ) ) ) )
difficult :degree very :domain it
multi-sentence :snt1 ( and :op1 ( age-01 :arg1 person_name_0 :arg2 ( temporal-quantity temporal-quantity_num_0 :unit year ) ) :op2 ( carried :arg0 person :arg1 ( cut-02 :arg1 ( foot :part-of ( person :arg0-of ( have-rel-role-91 :arg2 dd1 ) ) ) :quant series ) ) :time ( before :op1 now :duration ( temporal-quantity temporal-quantity_num_1 :unit year ) ) ) :snt2 ( left :arg0 doctor :arg1 ( paper :mod research-01 :poss doctor ) :arg1-of quick-02 :arg1-of ( say-01 :arg0 doctor ) :arg1-of ( say-01 :arg0 doctor ) :arg1-of ( say-01 :arg0 doctor :location ( paper :mod research-01 :poss doctor ) :arg1-of quick-02 ) :arg1-of ( say-01 :arg0 doctor ) :arg1-of ( say-01 :arg0 doctor ) :arg1-of ( say-01 :arg0 doctor ) :arg1-of ( say-01 :arg0 doctor ) )
and :op1 ( compare-01 :arg1 ( person :mod various ) :arg2 ( person :mod various ) ) :op2 ( elect-01 :arg1 person :arg2 alternative :time then )
raise-01 :arg0 ( thing :arg2-of ( title-01 :arg1 ( period :mod open-01 ) ) ) :arg1 question-01
cause-01 :arg0 ( honest :domain we :mod ( honest :degree quite ) ) :arg1 ( possible-01 :polarity - :arg1 ( say-01 :arg0 ( group :mod ( society :polarity - ) ) :arg1 ( cheap-02 :arg1 he :degree very ) ) :condition ( honest :domain we :mod quite ) )
contrast-01 :arg1 ( open-01 :arg0 school :arg1 ( and :op1 ( bomb :mod bomb ) :op2 ( rocket :arg1-of ( launch-01 :location ( community :location ( south :part-of strait ) ) ) ) ) ) :arg2 ( see-01 :arg1 ( battle-01 :mod scars ) :mod still )
say-01 :arg0 he :arg1 ( have-03 :arg0 we :arg1 ( time :mod difficult :time-of ( go-02 :polarity - :arg0 we :arg4 home :location anywhere ) ) )
judge-01 :arg0 ( person_name_0 :arg0-of ( have-org-role-91 :arg3 judge-01 ) ) :arg1 ( thing :arg1-of ( decide-01 :arg3 try-02 ) ) :time ( date-entity month_date-entity_0 day_date-entity_0 ) :location ( example :mod upper :location city_name_1 )
contrast-01 :arg1 ( design-01 :polarity - :arg1 study :arg3 ( explain-01 :arg0 study :arg1 ( thing :arg0-of ( cause-01 :arg1 ( have-03 :arg0 woman :arg1 ( thing :arg0-of ( cause-01 :arg1 ( survive-01 :arg0 woman :location ( outside :op1 city ) ) ) :arg1-of ( low-04 :degree more ) ) ) ) ) ) ) :arg2 ( regard-01 :arg0 country_name_0 :arg1 ( reason :mod potential :arg1-of ( cause-01 :arg0 ( reason :mod potential :arg0-of ( access-01 :arg1 ( and :op1 diagnosis :op2 access-01 ) ) ) ) ) :time recent )
open-01 :arg0 ( school :arg1-of ( include-91 :arg2 ( school :poss country_name_0 ) :arg3 most ) ) :arg1 ( door :poss school ) :time ( date-entity month_date-entity_0 day_date-entity_0 ) :time ( after :op1 ( holiday :mod summer ) )
find-01 :arg1 ( hiilivaunusta :mod emigrants ) :location country_name_0
low-emission :domain ( equipment :purpose equipment ) :mod also
include-91 :arg1 ( thing :arg0-of ( cause-01 :arg1 ( die-01 :arg1 ( person :arg0-of ( have-rel-role-91 :arg2 mother ) ) ) ) ) :arg2 it :mod also
say-01 :arg0 ( person :arg0-of prosecute-01 ) :arg1 ( and :op1 ( drive-01 :arg0 person_name_0 :arg1 ( democrat :poss organization_name_1 :mod q3 ) ) :op2 ( cause-01 :arg0 person :arg1 ( injure-01 :arg1 girl ) ) )
disable-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg1 city_name_0 :arg2 ( person :arg0-of ( manage-01 :arg1 city ) ) ) ) :arg1 ( team :mod location_name_3 ) :location ( place :ord ( ordinal-entity ordinal-entity_num_0 ) :location ( place :ord ( ordinal-entity ordinal-entity_num_0 ) ) :path ( place :mod aggressor ) )
wish-01 :arg0 ( person :location location_name_0 ) :arg1 ( strengthen-01 :arg0 person :arg1 ( ystÃ¤vyyspuisto :mod kelkkaparkkitoiminta :arg1-of ( locate-01 :location ( next-to :op1 hotel ) :time next ) ) )
stage-01 :arg0 activist :arg1 ( referendum :topic ( right-05 :arg2 vote-01 ) :arg1-of ( attend-01 :arg0 ( person :quant num_0 ) ) :arg1-of ( attend-01 :arg0 ( person :quant num_0 ) :location city_name_0 ) ) :time ( summer :mod this )
regret-01 :arg0 we :arg1 ( announce-01 :arg0 we :arg1 ( have-03 :arg0 ( dialogue-01 :mod last ) :arg1 ( and :op1 foundered :op2 ( centre :poss market ) ) :mod last ) :time today ) :degree ( much :degree very )
and :op1 ( be-located-at-91 :arg1 he :arg2 ( trip-03 :arg0 he ) :frequency often :time ( after :op1 ( die-01 :arg1 he ) ) ) :op2 ( think-01 :arg0 he :arg1 ( relation-03 :arg0 they :arg2 ( person :arg0-of ( have-rel-role-91 :arg1 he :arg2 father ) ) ) :quant lot )
have-condition-91 :arg1 ( take-01 :mode imperative :arg0 you :arg1 advantage :arg2 ( feature :mod this ) ) :arg2 ( allow-01 :arg0 ( camera :poss you ) :arg1 ( bracketing :arg1 ( picture :quant multiple :arg1-of differ-02 ) ) :mod also )
multi-sentence :snt1 ( and :op1 ( put-01 :arg0 we :arg1 ( bottle :mod die-01 ) :arg2 die-01 ) :op2 ( close-01 :arg0 we :arg1 prison ) :op3 ( start-01 :arg0 we :arg1 ( explore-01 :arg0 we :arg1 prison ) ) :op4 ( start-01 :arg0 we :arg1 ( explore-01 :arg0 we :arg1 ( thing :manner-of ( transfer-01 :arg1 work-of-art_name_0 ) ) ) ) ) :snt2 ( require-01 :arg0 ( tuomivaara :mod sort :mod turvakotiin ) )
consider-01 :arg0 doctor :arg1 ( and :op1 ( pacified :arg1 he ) :op2 ( drug :domain he ) :op3 ( watch-01 :arg0 doctor :arg1 ( condition :poss he ) :manner close :time ( until :op1 ( be-located-at-91 :arg1 he :arg2 ( condition :mod serious ) :time current ) ) ) )
atmosphere :mod electric :domain organization_name_0 :time ( strengthen-01 :arg0 person_name_1 :arg1 ( arrive-01 :arg1 city_name_2 :arg4 ( aliens :mod team_name_3 ) :arg4 team_name_3 ) )
say-01 :arg0 person_name_0 :arg1 ( and :op1 ( speak-01 :arg0 ( speak-01 :arg3 documentary ) :mod last ) :op2 ( sell-01 :arg1 documentary ) )
multi-sentence :snt1 ( and :op1 ( listen-01 :arg1 ( person :arg0-of ( have-rel-role-91 :arg1 ( person :arg0-of ( have-rel-role-91 :arg1 ( person :arg0-of ( have-rel-role-91 :arg1 ( person :arg0-of ( have-rel-role-91 :arg1 ( person :arg0-of ( have-rel-role-91 :arg1 ( person :arg0-of ( have-rel-role-91 :arg1 ( person :arg0-of ( have-rel-role-91 :arg1 ( person :arg0-of ( have-rel-role-91 :arg1 ( person :arg0-of ( have-rel-role-91 :arg1 ( person :arg0-of ( have-rel-role-91 :arg1 ( person :arg0-of ( have-rel-role-91 :arg2 partner ) ) :arg2 partner ) ) :arg2 ballade ) ) :arg2 ballade ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) :arg2 ( person :arg0-of ( have-rel-role-91 :arg1 person :arg2 partner ) ) ) :op2 ( conducts :arg0 person :arg1 person ) ) ) :snt2 ( apologize-01 :arg0 i ) :snt3 ( apologize-01 :arg0 i )
dawn :prep-with country_name_0
event :mod person_name_0 :topic ( and :op1 friday :op2 saturday )
expect-01 :arg1 ( benefit-01 :arg1 ( industry :mod cruise :arg1-of ( value-01 :arg2 ( monetary-quantity monetary-quantity_num_0 :unit dollar ) ) :arg1-of ( value-01 :arg2 ( temporal-quantity temporal-quantity_num_1 :unit year ) ) :example ( and :op1 country_name_0 :op2 country_name_1 :op3 ( class :mod middle :arg1-of rise-01 :poss country ) ) ) )
and :op1 ( lead-03 :arg0 ( thing :arg1-of ( opine-01 :arg0 public ) :arg1-of ( lead-03 :arg2 law ) ) :arg2 ( thing :arg1-of ( opine-01 :arg0 public ) ) ) :op2 ( achieve-01 :arg0 opine-01 :arg1 ( achieve-01 :arg1 ( and :op1 ( choose-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg1 ( political-party_name_3 :mod recipes ) :arg3 ( apprentice-01 :arg0 person ) ) ) :arg1 ( hero :poss person ) ) :op2 ( update-01 :arg0 person :arg1 ( and :op1 book :op2 romance ) :arg1-of ( prefer-01 :arg0 person ) ) ) ) )
publish-01 :arg0 ( website :mod entertainment :arg1-of ( publish-01 :arg0 ( person :arg0-of ( represent-01 :arg1 person_name_0 ) :arg0-of ( represent-01 :arg1 person :arg1-of anger-01 ) ) ) :arg0-of ( confirm-01 :arg1 ( authenticity :poss image ) ) ) :arg1 ( website :mod entertainment )
have-concession-91 :arg1 ( detail-01 :polarity - :arg0 they ) :arg2 ( fear-01 :arg0 they :arg1 ( lead-03 :arg0 it :arg2 ( problem :topic authority ) ) :manner apparent )
say-01 :arg1 ( obligate-01 :polarity - :arg1 i :arg2 ( answer-01 :arg0 i :arg1 that ) ) :arg2 person_name_0 :arg1-of ( say-01 :arg0 person_name_1 )
and :op1 ( examine-01 :arg1 ( merge-01 :arg1 region ) ) :op2 ( come-01 :arg1 ( thing :arg1-of report-01 ) :arg4 ( thing :arg1-of ( border-01 :arg2 ( name :op1 fore ) ) ) )
work-01 :arg0 ( person_name_0 :arg0-of ( have-org-role-91 :arg2 ( minister :mod chief ) ) ) :arg1 ( work-01 :arg0 person ) :time moment
and :op1 ( reach-01 :arg0 ( tÃ¤hti :mod young ) :arg1 ( person_name_0 :mod final ) ) :op2 ( make-01 :polarity - :arg1 ( win-01 :arg0 person_name_1 ) )
and :op1 ( do-02 :arg0 he :arg1 ( temporal-quantity temporal-quantity_num_0 :unit hour ) :arg2 ( and :op1 ( keverniÃ¤ :mod sÃ¤Ã¤lintunnetta ) :op2 ( man :arg1-of general-02 ) ) ) :op2 ( raised :arg0 he :arg1 ( hand :part-of they ) :manner general-02 :concession ( even-if :op1 ( raise-01 :arg0 ( some :arg1-of ( include-91 :arg2 they ) ) :arg1 ( hand :part-of they ) :prep-against he ) ) )
surprise-01 :arg0 ( evening :time ( early :op1 ( evening :mod ( early :degree quite ) ) ) ) :arg1 it
estimate-01 :arg0 person_name_0 :arg1 ( serlachius :arg1 ( person :arg0-of visit-01 :mod whole ) :time ( year :mod this ) :location ( museums :name ( name :op1 lÃ¤hentelemÃ¤Ã¤n :op2 lÃ¤hentelemÃ¤Ã¤n ) ) )
taituri :arg1 ( leg :part-of paint ) :time already :time ( game :ord ( ordinal-entity ordinal-entity_num_0 ) ) :time already
fans :arg0 ( fan :quant num_0 :mod flnnlsh ) :location location_name_0
multi-sentence :snt1 ( have-org-role-91 :arg0 ( person :arg0-of ( have-org-role-91 :arg1 organization_name_0 ) ) :arg1 ( person_name_1 :arg0-of ( have-org-role-91 :arg2 senator ) ) :arg2 ( direct-01 :arg0 person :arg1 ( role :poss person_name_3 ) :arg2 person_name_4 ) ) :snt2 ( secondly :mode expressive )
contrast-01 :arg2 ( and :op1 ( investigate-01 :arg1 ( emission :source region ) ) :op2 ( come-04 :polarity - :arg1 report-01 :arg2 ( more-than :op1 ( number :quant number ) ) ) )
bear-02 :arg1 person_name_0 :location ( family :arg1-of ( have-org-role-91 :arg0 person_name_1 :arg2 member ) ) :location ( location_name_3 :quant num_0 :location location_name_3 )
repeat-01 :mode imperative :arg0 you :arg1 ( event :mod amr-unknown ) :condition ( event :time yesterday ) :condition ( have-03 :arg0 it :arg1 ( event :time yesterday ) :condition ( event :time yesterday ) )
picture-01 :arg0 ( thing :arg1-of ( announce-01 :arg0 ( person :arg0-of ( decide-01 :arg3 nojasi ) ) ) ) :arg1 ( thing :arg1-of announce-01 )
break-01 :arg1 ( property :mod commerce ) :time ( evening :time evening )
have-concession-91 :arg1 ( see-01 :arg1 ( thing :arg0-of ( mark-01 :arg1 fight-01 ) ) :mod still ) :arg2 ( source-02 :arg1 school )
style :mod ( shirt :mod red ) :domain person_name_0 :mod ( style :mod red )
agree-01 :arg0 ( and :op1 country_name_0 :op2 organization_name_1 ) :arg1 ( cease-01 :arg1 cease-01 :time current :mod last )
and :op1 ( continue-01 :arg1 ( decline-01 :arg1 ( sell-01 :arg1 supermarket ) ) :mod also ) :op2 ( tell-01 :arg0 sell-01 :arg2 person_name_0 )
contrast-01 :arg1 ( offer-01 :arg0 company :arg1 ( aircraft :arg1-of private-03 ) ) :arg2 ( contrast-01 :arg1 ( offer-01 :arg0 company :arg1 ( aircraft :arg1-of private-03 ) :mod also ) :arg2 ( possible-01 :arg1 ( ensure-01 :arg0 customer :arg1 ( arrive-01 :arg1 ( memorable :degree most ) :arg4 university ) ) ) )
say-01 :arg0 ( person_name_0 :arg0-of ( have-org-role-91 :arg2 mayor ) ) :arg1 ( cause-01 :arg0 ( decide-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg2 mayor ) ) :arg1 tontista ) :arg1 ( possible-01 :polarity - :arg1 ( hear-01 :arg1 ( voices :mod dissenting ) :time time ) ) )
multi-sentence :snt1 ( right-06 :arg1 person_name_0 :arg2 right ) :snt2 ( stretched :arg1 ( person :arg0-of play-01 :mod other ) )
stay-01 :arg1 ( or :op1 lake :op2 lake :op3 ( thing :arg1-of ocean ) ) :condition ( possible-01 :arg1 stay-01 )
multi-sentence :snt1 ( need-01 :polarity - :arg0 it :arg1 ( talk-01 :arg0 it :arg1 it ) ) :snt2 ( agree-01 :arg0 we )
event :mod coincidences
strengthen-01 :arg1 pound :arg1-of ( cause-01 :arg0 ( contribute-01 :arg0 pound :arg2 ( and :op1 ( law :mod ( tax-01 :arg2 estate ) :mod real ) :op2 ( rhetoric :mod politics :poss ( possible-01 :arg1 ( '' :arg1 map :time ( before :op1 ( possible-01 :arg1 ( elect-01 :arg1-of general-02 ) ) ) ) ) ) ) :mod also ) )
challenging :domain ( word :arg0-of ( discipline :arg1 ( slash :op1 ' :op2 drama ) ) )
kuhissut :arg1 ( world :mod entertainment ) :time ( after :op1 ( publish-01 :arg1 ( thing :arg2-of ( result-01 :arg1 ( julkkiskuvahakkerointiskandaalin :arg1-of broad-02 ) ) :mod vast ) ) )
foot :quant ( some :mod only ) :arg1-of ( mean-01 :arg2 ( foot :part-of broadcast-program_name_0 ) ) :domain ( depths :quant ( some :op1 num_0 :mod only ) )
say-01 :arg0 state_name_0 :arg1 ( law :polarity - :domain country :mod ( law :polarity - ) )
cause-01 :arg0 ( get-03 :arg1 ( get-01 :arg1 ( praise :mod immediate ) :arg2 ( tuntemattomalta :arg1-of public-02 ) ) ) :arg1 ( have-03 :arg0 ( person :mod country_name_0 ) :arg1 tahdonkysymys )
and :op1 ( submit-01 :arg0 company_name_0 :arg1 ( force :mod industry ) :arg2 ( force :mod industry ) ) :op2 ( updated :arg1 ( island :quant num_0 :arg1-of update-01 ) )
and :op1 ( person_name_0 :arg1-of ( accuse-01 :arg2 pitlochryn ) ) :op2 ( person :arg1-of accuse-01 )
say-01 :arg0 ( audit-01 :arg1 ( and :op1 ( person :arg0-of ( broker-01 :arg1 '' ) ) :op2 ( mismanage-01 :mod economy :mod other ) ) ) :arg1 ( rate-entity-91 :arg1 ( monetary-quantity monetary-quantity_num_0 :unit dollar :mod at-least ) :arg2 ( temporal-quantity temporal-quantity_num_1 :unit month ) ) :time ( early :op1 ( year :mod this ) :degree more )
possible-01 :arg1 ( explain-01 :arg0 ( fan :poss ( amount :quant-of ( amount :quant-of grow-01 ) ) ) :manner amr-unknown ) :mod even :mod even
send-01 :polarity - :arg1 ( meet-03 :arg0 council ) :arg2 ( result-01 :arg1 ( problem :topic technical ) :arg1-of direct-02 )
say-01 :arg0 ( report-01 :arg0 press ) :arg1 ( cost-01 :arg1 purchase-01 :arg2 ( approximately :op1 ( monetary-quantity monetary-quantity_num_0 :unit euro ) ) )
hope-01 :arg0 ( family :arg1-of ( have-org-role-91 :arg0 person_name_0 :arg2 member ) ) :arg1 ( good :degree most )
tell-01 :arg0 person_name_0 :arg1 ( start-01 :arg0 person :arg1 ( and :op1 ( role :mod new :poss person ) :op2 happy :op3 pride-01 ) ) :arg2 ( start-01 :arg0 person )
say-01 :arg0 person_name_0 :arg1 ( respond-01 :arg0 country_name_1 :arg1 ( name-01 :arg1 country :arg2 ( sanction-02 :arg1 economy :mod new ) ) ) :mod also
say-01 :arg0 he :arg1 ( and :op1 ( '' :arg1 fat ) :op2 ( appeal-02 :arg0 you :arg2 you :location ( '' :mod shouldering ) ) )
multi-sentence :snt1 ( begin-01 :arg1 ( career :mod tv :poss person_name_0 ) :time ( middle :op1 ( date-entity decade_date-entity_0 ) ) ) :snt2 ( and :op1 ( impressionist :arg1-of black-04 :mod only :domain i ) :op2 ( comedian :arg0 he :arg1-of ( say-01 :arg0 he ) ) )
say-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg1 country_name_0 ) ) :arg1 ( begin-01 :arg0 ( sell-01 :arg1 ( sell-01 :manner extra ) ) :arg1 ( number :quant-of house-01 :arg1-of ( test-01 :arg2 house-01 :mod real ) ) ) :location ( spring :location country )
find-01 :arg0 they :arg1 ( shotguns :mod sawed-off ) :location car
give-01 :arg0 ( thing :arg1-of ( decide-01 :arg0 ( government-organization :arg0-of ( govern-01 :arg1 country_name_0 ) ) ) ) :arg1 ( power :poss ( person :mod communism ) ) :arg2 ( weed :arg0 person :arg1 ( candidate :mod any :arg0-of ( obedient :polarity - :arg1 city_name_2 ) ) ) :mod actual
have-concession-91 :arg1 ( insist-01 :arg0 person_name_0 :arg1 ( obligate-01 :arg1 ( force :mod country_name_2 ) :arg2 ( withdraw-01 :arg0 force :arg1 force :arg2 civilian ) :time immediate ) )
confirm-01 :arg0 ( person_name_0 :arg0-of ( have-org-role-91 :arg2 actress ) ) :arg1 ( spread-02 :arg1 picture :manner genuine )
say-01 :arg0 ( company_name_0 :arg1-of ( send-01 :arg2 ( company :mod media ) ) ) :arg1 ( reflect-01 :polarity - :arg1 it :arg2 ( location :mod all :part-of ( thing :arg0-of ( reason-01 :arg1 security ) ) ) ) :medium ( information :arg1-of ( send-01 :arg2 ( company :mod media ) ) )
host-01 :arg0 person_name_0 :arg1 ( person :quant num_0 :arg1-of ( host-01 :location country_name_1 ) :arg2-of ( include-91 :arg1 ( and :op1 ( person_name_2 :arg0-of ( have-org-role-91 :arg1 country_name_3 :arg2 ( agent :mod coach ) :time current ) ) :op2 ( person_name_4 :arg0-of ( have-org-role-91 :arg1 country :arg2 agent :time current ) :arg0-of ( have-org-role-91 :arg2 agent ) ) :ord ( ordinal-entity ordinal-entity_num_1 ) ) ) ) :mod sole
say-01 :arg0 company_name_0 :arg1 ( and :op1 ( equip-01 :arg1 debate-01 :arg1-of complete-02 :time already ) :op2 ( link-01 :arg1 debate-01 :arg2 network ) )
possible-01 :arg1 ( strict :mod strict ) :time then
try-01 :arg0 i :arg1 ( avoid-01 :arg0 i :arg1 person_name_0 ) :time always
reject-01 :polarity - :arg0 we :arg1 ( idea :mod whole ) :time ( before :op1 ( know-01 :arg0 we :arg1 ( thing :arg1-of ( talk-01 :arg0 we ) ) ) )
multi-sentence :snt1 ( cause-01 :arg0 ( person_name_0 :arg0-of ( have-org-role-91 :arg2 ( minister :mod justice ) ) ) :arg1 ( view-02 :arg0 ( person :arg0-of ( have-org-role-91 :arg2 ( minister :mod justice ) ) ) :arg1 ( request-01 :arg0 political-party :arg1 ( request-01 :arg0 political-party :arg1 ( meet-03 :arg0 political-party :arg1 political-party_name_1 ) ) ) ) ) :snt2 ( and :op1 ( allow-01 :arg0 country :arg1 ( hope-01 :arg0 country :arg1 future ) ) )
think-01 :arg0 i :arg1 ( cricket :time now )
round :quant num_0 :mod still :mod still :purpose ( avoid-01 :arg1 ( fall-01 :arg1 ( number :quant-of ( person :quant num_1 ) ) ) )
cause-01 :arg0 ( result-01 :arg1 ( heatwaves :time ( summer :mod entire ) ) :arg2 ( warm-07 :degree more :compared-to usual ) ) :arg1 ( and :op1 july :op2 august )
love-01 :arg0 ( person :arg0-of ( have-rel-role-91 :arg1 you :arg2 father ) ) :arg1 ( something :arg1-of ( resemble-01 :arg2 that ) ) :arg1-of ( cause-01 :arg0 amr-unknown )
obligate-01 :arg1 i :arg2 ( and :op1 ( learn-01 :arg0 i :arg1 ( produce-01 :arg0 i :arg1 ( joke-01 :arg2 ( person :quant num_0 ) ) ) ) :op2 ( obligate-01 :arg1 i :arg2 ( learn-01 :arg0 i :arg1 ( produce-01 :arg0 i :arg1 ( joke-01 :arg2 ( person :quant num_0 ) ) ) ) ) :op3 ( difficult :domain ( time :mod difficult ) ) )
and :op1 ( look-01 :arg0 person_name_0 :direction around ) :op2 ( talk-01 :arg0 person )
oppose-01 :arg0 ( and :op1 ( person :arg0-of ( have-org-role-91 :arg2 head-of-state ) ) :op2 ( person :arg0-of extort-01 ) :op3 passivity ) :arg1 ( and :op1 ( employ-01 :polarity - ) :op2 exclusion :op3 passivity ) :li num_0
and :op2 obsolete
and :op1 ( say-01 :arg0 ( and :op1 ( level :arg1-of high-02 :poss ( person :arg0-of ( have-org-role-91 :arg1 city_name_0 :arg2 ( chairman :mod vice ) ) ) ) :op2 ( person_name_1 :arg0-of ( have-org-role-91 :arg2 chairman ) ) ) :arg1 ( and :op1 ( return-01 :arg1 ( and :op1 market :op2 ( number :quant-of shop ) ) :arg4 normal :time ( since :op1 ( begin-01 :arg1 year ) ) ) :op2 ( return-01 :arg1 ( and :op1 ( number :quant-of ( shop :poss shop ) ) :op2 ( number :quant-of shop ) ) :time ( since :op1 ( begin-01 :arg1 year ) ) ) ) :op2 ( add-01 :arg0 and :arg1 ( stable-03 :polarity - :arg1 ( environment :mod this ) :arg1-of stable-03 ) ) )
rise-01 :arg1 ( manipulate-01 :arg1 die-01 ) :arg4 ( monday :quant num_0 :location city_name_0 ) :arg1-of ( cause-01 :arg0 ( explode-01 :arg1 ( tower :mod field ) ) )
contrast-01 :arg1 ( ready-02 :arg1 ( lot :mod this ) :arg2 ( trip-03 :arg0 lot :arg1 cup :mod initial ) ) :arg2 ( interest-01 :quant num_0 :mod potential :domain ( club :mod basic :poss they ) )
or :op1 ( close-10 :polarity - :arg1 ( person :mod ( kuvatessasi :location surface ) ) :arg2 surface ) :op2 ( close-10 :arg1 person :arg2 ( under :op1 surface ) ) :condition ( possible-01 :arg1 possible-01 )
multi-sentence :snt1 ( far :mode interrogative :degree ( too :mod little ) :purpose ( say-01 :arg1 ( possible-01 :arg1 ( say-01 :arg0 they :arg1 ( possible-01 :arg1 ( and :op1 ( lack-01 :arg0 they :arg1 confidence ) :op2 ( lack-01 :arg0 they :arg1 confidence ) ) ) ) ) ) ) :snt2 ( ' :mode interrogative :time ( date-entity decade_date-entity_0 ) )
and :op1 ( open-01 :arg1 ( location_name_0 :mod new ) :location june ) :op2 ( present :arg1-of ( include-91 :arg2 ( thing :mod other :arg2-of ( include-91 :arg1 ( and :op1 art :op2 person_name_1 ) ) ) ) )
remember-01 :arg0 i :arg1 game :time ( be-located-at-91 :arg1 it :arg2 here )
and :op1 ( organization_name_0 :degree large :domain ( democracy :location ( behind :op1 ( campaign-01 :mod defensive ) ) ) :degree large ) :op2 ( threaten-01 :arg0 ( person :arg0-of organize-01 ) :arg1 ( block-01 :arg0 person :arg1 ( action :mod ( block :mod world ) ) ) :condition ( grant-01 :polarity - :arg0 city_name_1 :arg1 ( thing :mod universal :mod genuine ) :arg2 city_name_2 ) )
oppose-01 :arg0 ( person :arg0-of ( oppose-01 :arg1 ( summit :mod military_name_0 ) ) ) :arg1 protest-01 :time ( weekend :mod last )
come-01 :arg1 ( man :mod german ) :location here :time ( after :op1 ( think-01 :arg0 we :arg1 ( and :op1 ( thing :arg1-of ( do-02 :arg2 dog ) ) :op2 ( take-01 :arg0 man :arg1 dog :arg3 ( arm :mod moment ) :direction ( down :op1 slope ) ) ) ) )
and :op1 ( suffer-01 :arg0 ( person :mod country_name_0 :arg0-of ( govern-01 :arg1 country_name_1 ) ) :arg1 ( defeat-01 :arg1 political-party :manner crush ) ) :op2 ( possess-01 :arg0 person :arg1 ( possess-01 :arg1 ( elect-01 :mod continent_name_0 ) :mod ( right :mod extreme ) ) :arg1-of possible-01 )
multi-sentence :snt1 ( think-01 :arg0 i :arg1 ( attract-01 :arg0 it :arg1 it ) ) :snt2 ( try-01 :arg0 he :arg1 ( remedy :arg0 he :arg1 situation ) )
total-01 :arg2 num_0 :arg1 ( increase-01 :arg1 price-01 ) :time ( after :op1 now :quant ( more-than :op1 ( percentage-entity percentage-entity_num_0 ) ) )
recommend-01 :arg1 ( continue-01 :arg1 ( negotiate-01 :arg2 pension :mod proper ) ) :time after
publish-01 :arg0 ( person :arg0-of consume-01 :mod every :location world ) :arg1 ( man :mod every :location world ) :time ( after :op1 ( publish-01 :arg1 ( photo :topic ( photo :mod celebrity :arg1-of major-02 :arg0-of hack-04 ) ) ) )
located :location ( koiskalassa :op1 koiskalassa )
possible-01 :arg1 ( option :mod ( good :degree most ) :domain service :beneficiary ( person :arg0-of study-01 :arg0-of ( raahaisivat :arg1 property :path ( rate-entity-91 :arg1 ( vehicle :mod lastatuissa ) :arg2 country ) ) ) )
and :op1 old :op2 low-04 :domain ( equipment :mod new )
and :op1 ( take-01 :arg1 ( boat :source ( boat :arg1-of succeed-03 ) ) ) :op2 ( monday :arg0 ( boat :arg1-of succeed-03 ) :arg1 boat ) :mod again
content-01 :arg1 i :time now :mod again :mod again
raise-01 :arg0 it :arg1 ( culture :mod popular :mod sport )
multi-sentence :snt2 ( be-located-at-91 :arg1 ( and :op1 ( person :arg0-of ( have-org-role-91 :arg2 president ) ) :op2 ( person :arg0-of ( have-org-role-91 :arg2 president ) ) :op3 ( person :arg0-of ( have-org-role-91 :arg2 president ) ) :op4 ( person :arg0-of ( have-org-role-91 :arg2 president ) ) :op5 ( person :arg0-of ( have-org-role-91 :arg2 president ) ) :op6 ( person :arg0-of ( have-org-role-91 :arg2 president ) ) :op6 ( person :arg0-of ( have-org-role-91 :arg2 president ) ) :op6 ( person :arg0-of ( have-org-role-91 :arg2 president ) ) :op6 ( person :arg0-of ( have-org-role-91 :arg2 president ) ) :op6 ( person :arg0-of ( have-org-role-91 :arg2 president ) ) :op7 ( person :arg0-of ( have-org-role-91 :arg2 president ) ) ) :arg0-of ( have-org-role-91 :arg2 president ) )
say-01 :arg0 ( voice :mod small :location ( mind :poss i ) ) :arg1 ( obligate-01 :arg1 you :arg2 ( capable-01 :arg1 you :arg2 ( survive-01 :arg0 you :manner alone :duration ( temporal-quantity temporal-quantity_num_0 :unit minute ) ) ) :time ( until :op1 ( work-09 :arg1 computer :mod again :mod again ) ) ) :medium ( mind :poss i )
invest-01 :arg0 apollo :arg1 ( monetary-quantity monetary-quantity_num_0 :unit ( dollar :mod renminbi ) ) :arg2 ( corporation :mod cruise :mod ( monetary-quantity monetary-quantity_num_0 :unit ( dollar :mod renminbi ) ) )
and :op2 ( hate-01 :mode interrogative :arg0 you :arg1 i :arg1-of ( cause-01 :arg0 ( thick :degree too :domain ankle ) ) )
have-concession-91 :arg1 ( and :op1 ( age-01 :arg1 ( person :arg1-of ( age-01 :arg2 ( temporal-quantity temporal-quantity_num_0 :unit year ) ) ) :arg2 ( grip :arg0 person :arg1 ( thing :arg2-of ( name-01 :arg1 person ) ) ) ) :op2 ( and :op1 ( marry-01 :arg1 person :arg2 ( grip-01 :arg0 person :arg1 ( name :poss person ) ) ) :op2 ( and :op1 ( marry-01 :arg1 person :arg2 ( area :poss person ) ) :op2 ( and :op1 ( marry-01 :arg1 person :arg2 ( area :poss person ) ) :op2 ( and :op1 ( marry-01 :arg1 person :arg2 ( area :mod ( residential :mod common ) ) ) :op2 ( thing :arg0-of ( evidence-01 :arg1 ( new-01 :arg1 ( and :op1 ( person :arg0-of ( have-org-role-91 :arg2 head-of-state ) ) :op2 ( person :arg0-of ( have-org-role-91 :arg2 head-of-state ) ) :op3 ( person :arg0-of ( have-org-role-91 :arg2 head-of-state ) ) :op4 ( person :mod even :arg0-of ( have-org-role-91 :arg2 head-of-state ) ) ) ) ) ) ) ) :time ( time :arg1-of same-01 ) ) :time ( time :arg1-of same-01 ) ) )
and :op1 ( spotted :arg0 ( jockey :mod discs ) :arg1 he :arg2 ( do-02 :arg0 he :arg1 imitations ) ) :op2 ( contact-01 :arg0 you :arg1 ( face :mod new ) )
take-01 :arg0 he :arg1 picture :time ( before :op1 now :quant ( many :op1 ( temporal-quantity temporal-quantity_num_0 :unit year ) ) ) :accompanier ( person :arg0-of ( have-rel-role-91 :arg1 he :arg2 husband ) )
describe-01 :arg0 notice-03 :arg1 ( place :mod ( meet-03 :time former ) :mod organization_name_0 ) :arg2 ( house :quant num_0 :consist-of bedroom )
say-01 :arg0 person_name_0 :arg1 ( possible-01 :arg1 ( grant-01 :arg0 ( government-organization :arg0-of govern-01 :poss country :mod only ) :arg1 ( territory :mod east ) :arg2 ( government-organization :arg0-of govern-01 ) ) )
person_name_0
multi-sentence :snt1 ( ban-01 :polarity - :arg1 they ) :snt2 ( prohibit-01 :polarity - :arg1 anything :arg2 they :mod ( only :polarity - ) :time no-longer )
expect-01 :arg0 i :arg1 ( policy :mod future :domain it )
continue-01 :arg1 game :manner sudden
say-01 :arg0 person_name_0 :arg1 ( possible-01 :arg1 ( thank-01 :arg0 person :arg1 person :mod ( again :mod once ) ) :purpose ( possible-01 :arg1 ( thank-01 :arg0 person :arg1 person :mod ( again :mod once ) ) ) ) :time ( after :op1 ( find-01 :arg0 person :arg1 ( person :arg0-of ( have-org-role-91 :arg1 company_name_1 :arg3 ( apprentice-01 :arg0 person ) ) ) ) )
obligate-01 :arg1 person_name_0 :arg2 ( undergo-28 :arg1 person :arg2 ( memory :mod amphibious :arg0-of pain-01 ) )
and :op1 ( come-01 :arg1 idea :arg4 ( mind :poss i ) :time ( stage :quant num_0 ) ) :op2 ( change-01 :arg1 idea ) :op3 ( change-01 :arg1 idea )
good :domain park :beneficiary ( location :poss park ) :arg1-of ( cause-01 :arg0 ( possible-01 :arg1 ( enlarge :arg1 park :arg2 ( region :mod pavilion ) ) ) )
and :op1 ( stress-01 :arg0 ( person :arg0-of ( represent-01 :arg1 government-organization_name_0 ) :arg1-of ( design-01 :arg3 ( remedy :poss ( comment-01 :arg0 person_name_1 ) ) ) :arg1-of ( design-01 :arg3 ( remedy :poss ( comment-01 :arg0 person ) ) ) ) :arg1 ( be-located-at-91 :arg1 ( regime :mod country ) :arg2 ( region :mod east :part-of rebel-01 ) ) ) :op2 ( stress-01 :arg0 person :arg1 ( be-located-at-91 :arg1 ( person :quant num_0 :arg1-of ( include-91 :arg2 ( population :arg1-of ( include-91 :arg2 population :arg3 majority ) ) :arg3 majority ) ) :arg2 ( region :mod east :part-of rebel-01 ) ) )
say-01 :arg0 ( person_name_0 :arg0-of ( have-org-role-91 :arg1 ( research-institute_name_1 :mod news ) :arg2 ( member :mod news ) ) ) :arg1 ( and :op1 ( '' :arg1 ( talk-01 :arg1 peace :arg1-of plan-01 ) :arg2 ( elect-01 :mod parliamentary ) :time ( date-entity month_date-entity_0 day_date-entity_0 ) ) :op2 ( attack-01 :arg0 ( force :mod ( government-organization :arg0-of govern-01 ) ) :arg1 ( area :location-of ( attack-01 :arg0 separatist :arg1 civilian ) ) ) )
take-01 :arg1 propose-01 :frequency often :location society
recommend-01 :arg0 ( and :op1 ( person :arg0-of ( have-org-role-91 :arg1 organization_name_0 :arg3 ( lead-02 :arg0 person ) ) ) :op2 ( person_name_1 :arg0-of ( have-org-role-91 :arg2 academicians ) ) ) :arg1 ( recommend-01 :arg0 ( person :arg0-of study-01 ) :arg1 ( ask-02 :arg0 ( person :arg0-of study-01 ) :arg1 ( have-org-role-91 :arg0 person :arg2 professor ) :time ( early :degree more :mod this ) ) :arg2 ( person :arg0-of study-01 ) )
possible-01 :arg1 ( try-01 :arg0 person_name_0 :arg1 ( predict-01 :arg0 person :arg1 ( impact-01 :arg0 this :arg1 ( person :arg0-of ( have-03 :arg1 this ) ) :arg1-of ( cause-01 :arg0 ( conditions :arg0 ( statesman :mod new :location july ) :arg1 man :arg1-of ( long-03 :degree more ) ) ) ) ) ) :manner ( impact-01 :arg0 impact-01 )
return-01 :arg1 ( thousands :location ( territory :poss country-region_name_0 ) ) :arg4 school :time ( after :op1 ( spend-02 :arg0 thousands :arg1 ( spend-01 :arg1 ( thing :arg2-of ( shelter-01 :arg3 bomb ) ) ) ) :time ( after :op1 ( spend-02 :arg0 ( and :op1 rocket :op2 block-01 ) :arg1 ( and :op1 ( community :poss they ) :op2 ( community :poss they ) ) :time ( war-01 :arg0 and :arg1 ( and :op1 ( community :poss they ) :op2 ( community :poss they ) ) :time ( war-01 :arg1 ( and :op1 ( community :mod community ) :op2 ( community :poss they ) ) :time war ) ) :time ( battle-01 :location region ) ) ) )
and :op1 ( rowing :mode interrogative :mod plus :domain fish ) :op2 ( contain-01 :arg0 fish :arg1 ( refuse-01 :arg0 keller ) )
glad-02 :arg0 ( have-03 :arg0 we :arg1 ( person :quant num_0 :arg0-of ( will-02 :arg1 ( help-01 :arg0 person :arg1 ( and :op1 person_name_0 :op2 ( person_name_1 :arg0-of ( have-rel-role-91 :arg1 person :arg2 father ) ) ) ) ) ) ) :arg1 i
and :op1 ( sell-01 :arg1 ( and :op1 home :op2 ( product :mod leisure ) ) :arg2 ( sell-01 :mod net ) :arg1-of ( bad-05 :degree most ) :time ( before :op1 now :quant ( one :mod one ) ) ) :op2 ( decrease-01 :arg1 ( product :arg1-of ( decrease-01 :mod net ) ) :arg3 ( rate-entity-91 :arg1 ( percentage-entity percentage-entity_num_0 ) :arg2 ( temporal-quantity temporal-quantity_num_1 :unit year ) ) )
order-01 :arg0 person_name_0 :arg1 ( try-02 :arg1 person :arg1-of ( cause-01 :arg0 ( january :arg1 person ) ) )
and :op1 ( kind :mod nastola :domain bottas ) :op2 ( differ-02 :arg1 ( situation :poss person_name_0 ) ) :op3 ( believe-01 :arg0 person :arg1 ( remain-01 :arg1 peninsula_name_1 :arg3 ( town :mod home ) ) )
have-purpose-91 :arg1 seminar :arg2 ( seek-01 :arg1 ( way :mod new :instrument-of ( balance-01 :arg1 economy ) ) )
and :op1 property :op2 ( seat-01 :quant ( nearly :op1 num_0 ) ) :location ( shores :poss lake )
play-02 :arg0 ( turn-02 :arg1 ( word :mod ( slash :op1 '' :op2 '' ) ) ) :arg1 ( word :mod challenging )
multi-sentence :snt1 ( contrast-01 :arg1 ( fight-01 :mod good ) :arg2 ( good :degree ( more :degree little ) :domain it ) ) :snt2 ( good :degree ( more :degree little ) :domain it ) :snt3 ( include-91 :arg1 i :arg2 ( i :arg0-of ( see-01 :arg1 i ) ) )
estimate-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg2 authority ) ) :arg1 ( or :op1 ( travel-01 :arg0 ( or :op1 ( citizen :quant ( about :op1 num_0 ) :mod country_name_0 ) :op2 ( citizen :arg1-of ( register-02 :location country ) ) ) :arg4 country_name_1 :mod last ) :op2 ( plan-01 :arg1 ( depart-01 :arg0 country :arg2 country ) :time current ) )
option :mod ( good :degree most ) :domain service :beneficiary ( person :arg0-of study-01 ) :location ( across :op1 country :arg2-of ( include-01 :arg1 ( car :location ( across :op1 country ) ) ) )
and :op1 ( contact-01 :arg0 authority ) :op2 ( receive-01 :arg0 ( person :arg0-of ( publish :arg1 ( picture :arg1-of steal-01 :poss person_name_0 ) ) :quant all ) :arg1 ( thing :arg2-of accuse-01 ) )
become-01 :arg1 ( person_name_0 :quant num_0 )
(-(
seem-01 :arg1 ( finns :arg1 ( person_name_0 :arg0-of ( have-org-role-91 :arg1 ( chain :mod grass-roots ) :arg2 ( chain :mod grass-roots ) ) :quant ( multiple :op1 num_0 ) ) :arg1-of ( have-condition-91 :arg2 ( believe-01 :arg1 tulosluku ) ) )
and :op1 ( give-01 :arg0 it :arg1 ( pleasure :mod real ) :arg2 i :purpose ( sit-01 :arg1 i :arg2 ( guide-01 :arg1 i :arg2 ( guide-01 :arg1 ( country :mod whole ) :time ( begin-01 :arg1 ( and :op1 journey :op2 middle :op3 end-01 ) ) ) ) ) ) :op2 ( believe-01 :polarity - :arg0 i :arg1 ( give-up-07 :polarity - :arg0 i :arg1 ( feel-01 :arg0 i :arg1 feel-01 ) :time ever ) )
take-01 :arg0 he :arg1 ( image :mod this ) :time ( before :op1 now :quant ( temporal-quantity temporal-quantity_num_0 :unit year ) ) :accompanier ( person :arg0-of ( have-rel-role-91 :arg1 he :arg2 husband ) )
say-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg1 ( school :arg1-of high-02 ) :arg2 part ) ) :arg1 ( appear-02 :arg1 ( way :mod ( way :arg1-of long-03 ) :source ( life :poss ( person :arg0-of study-01 ) ) ) )
say-01 :arg0 company_name_0 :arg1 ( and :op1 ( equip-01 :arg1 center :arg2 network :degree full :time already ) :op2 ( connect-01 :arg1 center :arg2 network ) )
estimate-01 :arg1 ( thing :arg1-of estimate-01 ) :arg2 ( range-01 :arg3 num_0 :arg1 estimate-01 )
move-01 :arg1 person_name_0 :arg2 ( city_name_1 :mod real ) :arg3 ( period :mod this )
send-01 :polarity - :arg0 i :arg1 it :arg2 compete-01
contrast-01 :arg1 ( reply-01 :arg0 person_name_0 ) :arg2 ( reach-01 :arg1 ( man :mod german ) :mod apparent :mod apparent )
include-91 :arg1 ( thing :arg0-of ( cause-01 :arg1 ( die-01 :arg1 ( person :arg0-of ( have-rel-role-91 :arg2 mother ) ) ) ) ) :arg2 it :mod also
contrast-01 :arg1 ( offer-01 :arg0 company :arg1 ( aircraft :arg1-of private-03 ) ) :arg2 ( offer-01 :arg0 company :arg1 ( and :op1 ( equipment :mod transport-01 :mod other ) :op2 ( equipment :mod transport-01 :mod other :example ( or :op1 person_name_0 :op2 language_name_1 :op3 mclaren ) ) ) :arg0-of ( cause-01 :arg1 ( ensure-01 :arg0 customer :arg1 ( enter-01 :arg0 customer :arg1 university ) ) ) )
think-01 :arg0 i :arg1 ( and :op1 ( last-01 :arg1 ( make-01 :arg1 ( temporal-quantity temporal-quantity_num_0 :unit year ) :arg2 ( temporal-quantity temporal-quantity_num_1 :unit year ) ) :arg4 wheelchair :time ( before :op1 ( turn-01 :arg0 they :arg1 ( person :quant num_0 ) ) ) ) :op2 ( lose-02 :arg0 i :arg1 ( function-01 :arg0 i :extent whole ) :manner slow ) )
fashioned :polarity - :time no-longer
follow-01 :arg1 ( authority :mod ( intelligence :mod country_name_0 ) ) :arg2 ( action :poss man ) :time ( early :degree more )
win-01 :arg0 organization_name_0 :arg1 ( award_name_1 :mod actress :mod ( good :degree most ) ) :arg2 person_name_1 :purpose ( role :poss person :topic ( invasion :mod barbarians :location ( thing :quant num_0 ) ) )
increase-01 :arg1 ( salary :mod also ) :arg1-of ( cause-01 :arg0 ( discuss-01 :arg1 ( person_name_0 :arg0-of ( have-org-role-91 :arg2 ( minister :mod justice :mod justice ) ) ) ) )
appeal-02 :arg0 person_name_0 :arg1 ( right-05 :arg2 ( respond-01 :arg1 ( question-01 :arg1-of personal-02 ) ) ) :mod still
obligate-01 :arg2 ( go-06 :arg1 reduce-01 :arg2 ( memory :mod broadcast-program_name_1 :arg0-of pain-01 ) )
and :op1 ( favor-01 :arg0 person_name_0 :arg1 ( ailinnin :mod regrets ) ) :op2 ( words :arg1 ( word :mod cruel :mod unnecessarily ) ) :op3 ( cause-01 :arg0 ( fear-01 :arg1 ( eye :part-of ( moment :mod this ) ) ) :arg1 ( decide-01 :arg0 person_name_1 :arg1 ( stand :poss person ) ) )
contrast-01 :arg2 ( event :location country_name_0 )
multi-sentence :snt1 ( contrast-01 :arg2 ( obligate-01 :arg2 ( adapt-01 :arg1 everything ) ) ) :snt2 ( say-01 :arg0 i :arg1 ( or :op1 ( say-01 :arg1 ( or :op1 num_0 :op2 num_1 ) ) :op2 ( say-01 :arg0 i :arg1 ( or :op1 ( person :quant num_0 ) :op2 ( person :quant num_1 ) ) ) ) )
renaissance :mode interrogative :mod new :poss he :domain this
say-01 :arg0 ( government-organization :arg0-of ( govern-01 :arg1 country_name_0 ) ) :arg1 ( story :topic media ) :mod also :arg1-of ( say-01 :arg0 ( and :op1 ( revolution-03 :arg0 ( activist :mod democracy ) ) :op2 ( henchmen :arg1 ( power :mod west ) ) ) )
say-01 :arg0 ( thing :arg1-of ( report-01 :purpose upgrade-02 ) ) :arg1 ( cause-01 :arg0 ( and :op1 ( use-01 :arg1 ( use-01 :arg1 house-01 ) ) :op2 ( increase-01 :arg1 ( use-01 :arg1 ( and :op1 house-01 :op2 wealth ) ) ) :arg2 ( end-01 :arg1 ( century :quant num_2 ) :arg4 num_3 ) ) )
and :op2 ( include-91 :arg1 many :arg2 they )
have-concession-91 :arg1 ( become-01 :arg1 ( music :mod jazz ) :arg2 ( familiarize-01 :arg1 music :arg2 he :path ( collection :poss ( person :arg0-of ( have-rel-role-91 :arg1 ( person :arg0-of ( have-rel-role-91 :arg1 ( person :arg0-of ( have-rel-role-91 :arg1 ( person :arg0-of ( have-rel-role-91 :arg1 ( person :arg0-of ( have-rel-role-91 :arg1 ( person :arg0-of ( have-rel-role-91 :arg1 ( person :arg0-of ( have-rel-role-91 :arg1 ( person :arg0-of ( have-rel-role-91 :arg1 ( person :arg0-of ( have-rel-role-91 :arg2 father ) ) :arg2 father ) ) :arg2 father ) ) :arg2 father ) ) ) ) ) ) ) ) ) ) ) ) ) ) :arg2 ( before :op1 ( age-01 :arg1 person :arg2 ( temporal-quantity temporal-quantity_num_0 :unit year ) ) ) )
intend-01 :arg0 ( person_name_0 :arg0-of ( have-org-role-91 :arg2 ( director :mod film ) ) ) :arg1 ( return-01 :arg1 person :arg4 ( factor :mod tv :quant series ) )
and :op1 ( pay-01 :arg0 ( book :mod this ) :arg1-of ( pay-01 :arg3 ( access-01 :arg1 ( holder :poss book ) ) ) ) :op2 ( exemplify-01 :arg0 ( or :op1 organization_name_0 :op2 organization_name_1 :op3 ( kirjakaupoille :mod chegg ) ) )
and :op1 ( fall-01 :arg1 ( sell-01 :arg1 ( product :arg0-of ( produce-01 :arg1 product ) ) ) :arg2 ( percentage-entity percentage-entity_num_0 ) :time ( before :op1 now :quant ( temporal-quantity temporal-quantity_num_1 :unit year ) ) ) :op2 ( fall-07 :arg1 sell-01 :arg2 ( turnover :mod ( more-than :op1 ( percentage-entity percentage-entity_num_1 ) ) ) )
same-01 :arg1 ( wave-04 :arg1 ( wave-04 :arg1 sea :mod sea ) ) :arg2 they :mod massive
person :quant num_0 :arg0-of observe-01 :arg1-of ( ready-02 :arg2 ( help-01 :arg0 person :arg2 ( and :op1 person_name_0 :op2 ( person_name_1 :arg0-of ( have-rel-role-91 :arg1 person :arg2 father ) ) ) ) ) :arg2-of fortunate-01
contrast-01 :arg1 ( and :op1 journalist :op2 journalist :op3 ( person :arg0-of ( have-rel-role-91 :arg2 relative ) ) ) :arg2 ( fan :mod also )
discuss-01 :arg0 ( and :op1 ( person :arg0-of ( partner-01 :arg1 we ) ) :op2 ( person :arg0-of ( partner-01 :arg1 we ) ) :op3 ( person :arg0-of ( have-rel-role-91 :arg1 we :arg2 partner ) ) :op4 ( person :arg0-of ( have-rel-role-91 :arg1 we :arg2 partner ) ) :op5 ( person :arg0-of ( have-rel-role-91 :arg1 we :arg2 partner ) ) :op6 ( person :arg0-of ( have-rel-role-91 :arg1 we :arg2 partner ) ) :op6 ( person :arg0-of ( have-rel-role-91 :arg1 we :arg2 partner ) ) :op6 ( person :arg0-of ( have-rel-role-91 :arg1 we :arg2 partner ) ) :op6 ( person :arg0-of ( listen-01 :polarity - :arg1 person ) ) :op7 ( agree-01 :polarity - :arg0 person ) )
have-purpose-91 :arg1 ( opportunity :arg1-of ( start-01 :arg0 person_name_0 ) ) :arg2 ( software :name ( name :op1 presentation :op2 presentation :op3 presentation :op4 software :op5 software :op6 software :op7 software ) )
look-01 :arg0 person_name_0 :arg1 ( around :op1 ( talk-01 :arg0 person_name_1 ) )
call-03 :arg0 country_name_0 :arg1 ( act-02 :arg0 country :location ( concert :arg0 government-organization :arg1 ( government-organization :arg0-of govern-01 ) ) ) :arg2 ( government-organization :arg0-of govern-01 )
great :domain ( possible-01 :arg1 ( succeed-01 :arg1 ( picture :mod other ) :mod also ) :arg1-of ( cause-01 :arg0 ( as-long-as :op1 ( and :op1 idea :op2 ( visual :mod torque ) :domain it ) ) ) )
be-located-at-91 :arg1 person_name_0 :arg2 ( way :poss person :direction home ) :time already
person :arg0-of inhabit-01 :quant ( approximately :op1 num_0 ) :location ( middle :part-of location_name_0 )
enjoy-01 :arg0 no-one :arg1 ( eat-01 :arg0 no-one :arg1 carrots )
and :op1 ( fortunate-01 :polarity - :arg1 you :arg2 ( tendency :arg0 you :arg1 ( '' :arg0 he ) ) ) :op2 ( comment-01 :arg0 he ) :op3 ( comment-01 :arg0 he ) :time ( read-01 :arg0 he :arg1 report-01 :arg2 whole )
explain-01 :arg1 this :manner sociologist
multi-sentence :snt1 ( and :op1 ( work-01 :arg0 ( person_name_0 :arg0-of ( have-rel-role-91 :arg2 father ) ) :location factory ) :op2 ( die-01 :arg1 person :location factory ) ) :snt2 ( and :op1 boy :op2 ( person :arg0-of ( have-rel-role-91 :arg1 boy :arg2 father ) ) :domain ( and :op1 boy :op2 ( person :arg0-of ( have-rel-role-91 :arg1 person :arg2 father ) ) ) :mod remote )
and :op1 ( know-02 :arg1 he :arg2 ( conductor :arg1 he ) :location international ) :op2 ( receive-01 :arg0 he :arg1 ( medal :name ( name :op1 finlandia :op2 medal :op3 medal :op4 medal :op5 medal ) ) )
transfer-01 :arg1 person_name_0 :arg2 ( leg :part-of organization_name_1 ) :arg3 organization_name_1
have-concession-91 :arg1 ( reflected :arg1 it :time still :location ( website :poss it ) ) :arg2 ( deleted :arg0 ( property :poss military_name_0 ) :arg1 ( url-entity :value advertising ) )
last-01 :arg1 project :arg2 ( behind :op1 ( temporal-quantity temporal-quantity_num_0 :unit year ) )
and :op1 ( rise-01 :arg1 ( profit-01 :arg0 ( person :mod ultra ) ) :arg2 ( percentage-entity percentage-entity_num_0 ) :time ( before :op1 now :quant ( temporal-quantity temporal-quantity_num_1 :unit year ) ) ) :op2 ( increase-01 :arg1 ( turnover :arg1-of ( increase-01 :arg2 ( percentage-entity percentage-entity_num_3 ) ) ) :arg4 ( monetary-quantity monetary-quantity_num_1 :unit pound ) :arg4 ( monetary-quantity monetary-quantity_num_1 :unit pound ) )
estimate-01 :arg0 ( person_name_0 :arg1-of ( include-91 :arg2 ( person :arg0-of ( serlachius-museoissa :arg1 ( year :mod this ) ) ) ) :quant whole ) :arg1 ( year :mod this ) :time ( year :mod this )
possible-01 :arg1 ( follow-02 :arg1 ( thing :arg1-of decide-01 ) :arg3 ( and :op1 ( thing :quant num_0 ) :op2 ( thing :quant num_1 ) ) ) :time ( time :mod next )
rise-01 :arg1 ( and :op1 ( sell-01 :arg1-of private-03 ) :op2 ( sell-01 :arg1-of ( possible-01 :polarity - ) ) :op3 ( sell-01 :arg1-of average-04 ) ) :arg2 ( thing :arg2-of ( price-01 :arg1 ( monetary-quantity monetary-quantity_num_0 :unit ( dollar :mod renminbi ) ) ) ) :time ( by :op1 ( end-01 :arg1 ( year :mod previous ) ) )
include-91 :arg1 ( and :op1 ( person :mod male :quant ( multiple :op1 num_0 ) ) :op2 ( plan-01 :quant num_1 ) ) :arg2 test
and :op1 ( become-01 :arg1 video :arg2 ( popular-02 :arg1 video :arg2 company_name_0 :degree very ) ) :op2 ( like-01 :arg0 video :arg1 company :degree ( equal :compared-to ( distribute-01 :arg1 video :frequency ( time :quant num_0 ) ) ) )
deciding :arg1 ( person :arg0-of study-01 ) :arg2 ( use-01 :arg0 person :arg1 ( approach-02 :mod creative :example ( and :op1 ( shop :mod online ) :op2 person_name_0 ) ) ) :arg1-of increase-01
and :op1 ( good :domain ( part :mod ( good :degree most ) ) ) :op2 ( libero :arg1 ( person_name_0 :arg0-of ( libero :degree equal :compared-to ( possible-01 :arg1 wovo ) ) ) )
publish-01 :polarity - :arg1 ( thing :arg1-of invest-01 :mod other )
tell-01 :arg0 ( company_name_0 :arg1-of public-02 ) :arg1 ( hurt-01 :arg1 ( dog :arg0-of ( have-rel-role-91 :arg1 ( city :location mountain ) :arg2 mountain ) ) :mod day ) :arg2 it
and :op1 ( tell-01 :arg0 person_name_0 :arg2 ( innocent-01 :arg1 person ) ) :op2 ( call-01 :arg0 person :arg1 ( plot-01 :arg1 ( plot-01 :mod politics ) ) :arg2 person )
say-01 :arg0 ( person :arg0-of prosecute-01 ) :arg1 ( go-02 :arg0 man :accompanier ( and :op1 ( person :arg0-of ( have-rel-role-91 :arg1 man :arg2 partner ) ) :op2 ( man :mod another :arg0-of ( kittiwake :arg1 ( kittiwake :quant num_0 ) ) ) ) )
think-01 :arg0 i :arg1 ( disease :mod ( dangerous :degree ( less :degree much ) ) )
say-01 :arg0 ( person :arg0-of ( support-01 :arg1 independence ) :quant many ) :arg1 ( be-located-at-91 :arg1 ( person :arg0-of support-01 ) :arg2 lose-02 )
say-01 :arg1 ( offense-02 :polarity - :arg0 they :mod really ) :arg2 person_name_0
decide-01 :arg0 ( parliament :arg0-of ( have-org-role-91 :arg1 country_name_0 :arg2 parliament ) ) :arg1 ( allow-01 :polarity - :arg1 ( choose-01 :arg0 ( person :arg0-of ( vote-01 :arg1 city_name_1 ) ) :arg1 ( choose-01 :arg0 person :arg1 ( and :op1 ( grow-01 :arg1 ( reform-01 :arg1 democracy ) ) :op2 ( demand-01 :arg1 ( reform-01 :arg1 democracy ) ) :op3 ( unrest :arg1-of ( have-concession-91 :arg2 unrest ) ) ) ) ) )
show-01 :arg0 ( appear-01 :arg1 ( thing :arg1-of ( opine-01 :arg0 organization_name_0 ) ) ) :arg1 ( believe-01 :arg0 ( person :arg1-of ( include-91 :arg2 ( person :mod country_name_1 ) :arg3 ( percentage-entity :value num_0 ) ) ) :arg1 ( believe-01 :arg0 ( person :arg1-of ( include-91 :arg2 ( person :mod country ) :arg3 ( percentage-entity :value num_0 ) ) ) :arg1 ( possible-01 :arg1 ( divide-02 :arg0 political-party_name_1 :arg1 ( group :arg0-of compete-02 :quant several ) :time ( prior :op1 ( date-entity decade_date-entity_0 ) ) :time ( date-interval :op1 ( date-entity decade_date-entity_0 ) :op2 ( date-entity year_date-entity_1 ) ) ) ) ) )
lack-01 :arg1 ( person_name_0 :source language_name_1 ) :concession ( person :arg0-of ( have-rel-role-91 :arg1 person :arg2 parent ) )
say-01 :arg0 ( person_name_0 :arg0-of ( have-org-role-91 :arg1 ( person :arg0-of ( have-org-role-91 :arg2 ( minister :mod prime ) ) ) :arg2 ( minister :mod prime ) ) :arg0-of ( have-org-role-91 :arg2 ( minister :mod prime ) ) :arg0-of ( have-org-role-91 :arg2 ( minister :mod prime ) ) :arg0-of ( have-org-role-91 :arg2 ( minister :mod prime ) ) :arg0-of ( have-org-role-91 :arg2 ( minister :mod prime ) ) :arg0-of ( have-org-role-91 :arg2 ( minister :mod prime ) ) :arg0-of ( have-org-role-91 :arg2 ( minister :mod prime ) ) :arg0-of ( have-org-role-91 :arg2 ( minister :mod prime ) ) :arg0-of ( have-org-role-91 :arg2 ( minister :mod prime ) ) :arg0-of ( have-org-role-91 :arg2 ( minister :mod prime ) ) :arg0-of ( have-org-role-91 :arg2 ( minister :mod prime ) ) :arg0-of ( have-org-role-91 :arg2 ( minister :mod prime ) ) :arg0-of ( have-org-role-91 :arg2 ( minister :mod prime ) ) )
contrast-01 :arg1 ( possible-01 :arg1 ( say-01 :arg1 ( and :op1 wise :op2 ( away :mod far ) :domain it ) ) :time now ) :arg2 ( say-01 :arg0 script :arg1 ( go-01 :polarity - :arg1 ( idiot :quant all ) :arg3 script ) )
say-01 :arg0 ( newspaper :arg0-of ( have-org-role-91 :arg1 political-party_name_0 ) ) :arg1 ( believe-01 :arg0 ( journalist :arg1-of ( include-91 :arg2 ( journalist :poss newspaper ) :arg3 ( percentage-entity percentage-entity_num_0 ) ) ) :arg1 ( believe-01 :arg0 ( person :arg1-of ( include-91 :arg2 ( person :mod country_name_1 ) :arg3 ( percentage-entity percentage-entity_num_0 ) ) ) :arg1 ( possible-01 :arg1 ( split-01 :arg1 political-party :arg2 ( group :arg0-of rival-01 :quant several ) :time ( before :op1 ( land-01 :arg1 ( land :quant num_1 ) ) ) ) ) ) )
say-01 :arg0 ( candidate :mod new ) :arg1 ( adopt-01 :arg1 ( and :op1 ( country :arg0-of ( love-01 :arg1 love-01 ) ) :op2 ( thing :arg1-of love ) ) :mod only )
and :op1 ( rise-01 :arg1 ( case-03 :time ( before :op1 ( rise-01 :arg1 tax-01 ) ) ) :arg2 ( percentage-entity percentage-entity_num_0 ) :time ( before :op1 now :quant ( temporal-quantity temporal-quantity_num_1 :unit year ) ) ) :op2 ( increase-01 :arg1 ( case-03 :arg1 ( and :op1 ( monetary-quantity monetary-quantity_num_1 :unit pound ) :op2 turnover ) ) :arg2 ( monetary-quantity monetary-quantity_num_1 :unit ( dollar :mod renminbi ) ) )
and :op1 ( respond-01 :polarity - :arg0 ( person :arg0-of ( represent-01 :arg1 country_name_0 ) ) :arg1 ( request-01 :arg0 person :arg1 ( comment-01 :arg0 person ) ) ) :op2 ( decline-02 :arg0 ( person :arg0-of ( represent-01 :arg1 organization ) ) :arg1 ( comment-01 :arg0 person ) )
capture-01 :arg0 ( fan :mod ball ) :arg1 ( product-of :op1 ( temporal-quantity temporal-quantity_num_0 :unit day ) :op2 ( temporal-quantity temporal-quantity_num_1 :unit day ) ) :time ( day :time recent )
confirm-01 :arg0 ( person :arg0-of represent-01 ) :arg1 ( and :op1 ( authentic :domain picture ) :op2 ( sentence-01 :arg0 picture :arg1 ( person :arg0-of hack-04 ) :arg2 ( invade-01 :arg0 ( person :arg0-of hack-04 ) :arg1 privacy ) ) )
read-01 :mode imperative :arg0 you :arg1 ( rule :mod ( rule :mod company :example ( and :op1 note :op2 note :op3 ( pass-01 :arg1 ( charge-05 :arg1-of follow-01 ) ) ) ) )
say-01 :arg0 ( species :mod both :example person_name_0 ) :arg1 ( manage-02 :arg0 they :arg1 ( produce-01 :arg0 they :arg1 ( sport :mod top-class :location-of ( work-09 :arg1 ( triad :mod sacred ) :arg2 ( person :arg0-of ( sponsor-01 :arg1 ( media :mod sports ) ) ) ) ) ) )
sit-01 :arg1 person_name_0 :arg2 ( contrast-01 :arg1 ( sit-01 :arg1 person :arg2 ( name :op1 ailinnin :op2 rikkinÃ¤isillÃ¤ :op3 terassituoli :op4 hajamielisesti :op5 hajamielisesti ) :arg1-of ( cause-01 :arg0 ( and :op1 ( listen-01 :arg0 person :arg1 ( and :op1 music :op2 ( news :name ( name :op1 reassuring ) ) ) :time ( before :op1 now :quant ( multiple :op1 ( temporal-quantity temporal-quantity_num_0 :unit year ) ) ) ) :op2 ( listen-01 :arg0 person :arg1 ( and :op1 ( music :mod tyynnyttÃ¤vÃ¤Ã¤ ) :op2 ( news :name ( name :op1 reassuring ) ) ) :time ( before :op1 now :quant ( temporal-quantity temporal-quantity_num_3 :unit year ) ) ) :arg1-of ( cause-01 :arg0 ( listen-01 :arg0 ( and :op1 ( person :arg0-of ( have-org-role-91 :arg2 head-of-state ) ) :op2 ( person :arg0-of ( have-rel-role-91 :arg1 person :arg2 father ) ) :op3 ( person :arg0-of ( have-rel-role-91 :arg1 person :arg2 father ) ) :op4 ( person :arg0-of ( have-rel-role-91 :arg1 person :arg2 father ) ) :op5 ( person :arg0-of ( have-rel-role-91 :arg1 person :arg2 father ) ) :op6 ( person :arg0-of ( have-rel-role-91 :arg1 person :arg2 father ) ) :op6 ( person :arg0-of ( have-rel-role-91 :arg1 person :arg2 father ) ) :op7 ( person :arg0-of ( have-rel-role-91 :arg1 person :arg2 father ) ) :op7 ( person :arg0-of ( have-rel-role-91 :arg1 person :arg2 father ) ) :frequency often ) ) ) ) ) ) )
take-01 :mode imperative :arg0 you :arg1 ( picture :quant series )
raise-01 :arg0 ( person_name_0 :arg0-of ( head-01 :arg1 head ) ) :arg1 ( team :name ( name :op1 mÃ¶ttÃ¶lÃ¤ :op2 lopputurnaus :op3 lopputurnaus ) :mod lopputurnaus )
obligate-01 :arg1 you :arg2 ( pay-01 :arg0 you :arg1 pennies ) :condition ( and :op1 ( get-05 :arg1 devil :arg2 ( mouth :part-of you ) ) :op2 ( remembered :arg0 you :arg1 ( finger :part-of you ) :arg2 ( front :op1 ( mouth :part-of you ) ) ) )
say-01
great :polarity - :degree really :domain that :mod ( great :degree really )
protest-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg1 prison :arg2 official ) ) :arg1 ( person :arg0-of ( have-org-role-91 :arg2 official ) ) :time ( month :mod already ) :arg0-of ( say-01 :arg1 ( want-01 :arg0 person :arg1 ( go-01 :arg1 person :direction back :destination ( system :mod ( shift-01 :duration ( temporal-quantity temporal-quantity_num_0 :unit hour ) ) :mod old ) ) ) )
resembles :arg0 spek :arg1 ( safe-01 :arg1 ( fire :name ( name :op1 fire :op2 fire ) :mod home ) )
invest-01 :arg0 ( organization_name_0 :arg0-of ( have-org-role-91 :arg1 club ) ) :arg1 ( team :consist-of ( person_name_2 :mod nation ) ) :arg2 record
person :arg0-of ( have-org-role-91 :arg1 country_name_0 :arg2 official )
and :op1 ( case :polarity - :domain ( patch :arg1 ( and :op1 food :op2 ( person_name_0 :arg0-of ( have-org-role-91 :arg1 organization_name_1 ) ) ) ) ) :op2 ( remove-01 :arg1 and :time ( before :op1 now :quant long ) )
offer-01 :arg0 person_name_0 :arg1 ( offer-01 :arg0 person :arg3 person ) :time ( support-01 :arg0 ( and :op1 person_name_1 :op2 person_name_2 ) :arg1 ( relation-03 :arg0 person :arg2 relation-03 :mod this ) )
pass-01 :arg1 ( temporal-quantity temporal-quantity_num_0 :unit year :mod almost )
say-01 :arg0 ( picture :poss ( person :arg0-of ( own-01 :arg1 pet ) ) ) :arg1 ( url-entity :value kiinteistÃ¶nvÃ¤littÃ¤jÃ¤ :poss ( person :arg0-of ( own-01 :arg1 pet ) ) )
order-01 :arg0 ( doctor :poss i ) :arg2 ( do-02 :arg0 i :arg1 u-turn ) :time ( start-01 :arg0 i :arg1 ( suffer-01 :arg0 i :arg1 ( and :op1 ( symptom :mod overweight ) :op2 ( symptom :mod cold ) ) ) )
person_name_0 :mod huge :location country_name_1
send-01 :arg1 ( and :op1 ( and :op1 ( police :arg1-of local-02 ) :op2 ( company :arg0-of ( provide-01 :arg1 search-01 ) ) ) ) :arg2 ( and :op1 ( look-01 :arg0 and :arg1 ( person :mod young ) ) :op2 ( find-01 :arg1 ( person :arg0-of ( provide-01 :arg1 ( veil :quant ( about :op1 num_0 ) ) ) ) :location ( off :op1 ( veil :mod dal :mod country_name_0 ) ) ) )
take-01 :mode imperative :arg0 you :arg1 ( trip-03 :arg0 you ) :direction ( down :op1 mattress )
and :op1 ( have-concession-91 :arg1 ( injure-01 :arg1 person_name_0 ) :arg2 ( injure-01 :arg1 person ) ) :op2 ( become-01 :arg1 person :arg2 ( thing :arg1-of ( explode-01 :arg1-of ( strong-02 :degree most ) ) ) )
believe-01 :arg1 ( picture :domain ( person :arg0-of hack-04 ) :quant num_0 :arg1-of ( include-91 :arg2 ( person :quant num_1 :arg0-of ( have-rel-role-91 :arg1 person :arg2 boyfriend ) ) :mod last :arg2-of ( include-91 :arg1 ( palmerista :mod upper ) ) :arg2-of ( include-91 :arg1 ( palmerista :mod upper ) ) :arg2-of ( include-91 :arg1 ( palmerista :mod upper ) ) ) ) :time ( after :op1 all )
grabbed :arg0 it :arg1 ( gang :mod whole )
and :op1 ( pay-01 :arg1 ( book :mod this ) :arg3 ( own-01 :arg0 ( person :arg0-of ( own-01 :arg1 e-book ) ) :arg1 ( person :arg0-of ( own-01 :arg1 e-book ) ) ) :frequency sometimes ) :op2 ( pay-01 :arg0 ( or :op1 organization_name_0 :op2 organization_name_1 :op3 chegga ) )
say-01 :arg0 ( company_name_0 :arg1-of ( include-91 :arg2 ( release-01 :arg1 project :time recent ) ) ) :arg1 ( cause-01 :arg0 ( submit-01 :arg1 ( system :mod automation :poss reactor :arg1-of ( submit-01 :arg2 approve-01 ) ) :arg2 ( release-01 :arg1 project ) :mod main ) )
and :op1 fish :op2 chicken :op3 chicken :domain ( slash :op1 fish :op2 chicken )
and :op1 ( need-01 :polarity - :arg0 i :arg1 ( talk-01 :arg0 i :arg1 ( more :mod any ) ) ) :op2 ( agree-01 :arg0 we )
report-01 :arg0 ( agency :mod press :poss country_name_0 ) :arg1 ( and :op1 ( play :arg0 ( person_name_1 :arg0-of ( have-org-role-91 :arg1 country :arg2 president ) ) :arg1 ( significant-02 :arg1 report-01 ) ) :op2 ( say-01 :arg0 agency :arg1 ( spied :arg0 ( country :quant all :arg1-of major-02 ) :arg1 ( other :mod each ) ) ) )
multi-sentence :snt1 ( move-01 :arg1 ( move-02 :mod maajoukkuehyÃ¶kkÃ¤Ã¤jÃ¤ ) :arg2 ( and :op1 d'ivoire :op2 siirtosumma ) ) :snt2 ( estimate-01 :arg1 it :arg2 ( around :op1 num_0 ) )
mean-02 :arg1 ( cruel :domain ( person :arg0-of ( have-rel-role-91 :arg1 he :arg2 father ) ) ) :arg2 cruel
accuse-01 :arg0 ( man :quant num_0 :mod old ) :arg1 ( girl :mod kolmevuotiaan ) :arg2 ( drive-01 :arg0 girl :location ( fifessÃ¤ :mod liikennevaloristeys ) )
try-01 :arg1 ( get-05 :arg1 you :arg2 ( close :op1 site ) )
return-01 :arg1 person_name_0 :arg3 confirm-01 :arg3 person_name_1
challenge-01 :arg0 i :arg1 ( and :op1 ( participate-01 :arg0 ( man :mod country_name_0 :mod country_name_1 ) :arg1 ( man :mod country :mod country ) ) :op2 ( location :location-of ( put-01 :arg1 jaw :arg2 place :direction back ) ) ) :arg2 ( person :mod tuesday )
cause-01 :arg0 ( arrive-01 :arg1 ( arrive-01 :arg3 continent ) ) :arg1 ( wave-04 :arg1 ( compete-02 :arg3 ( and :op1 product :op2 service ) ) )
'' :arg0 ( person :arg0-of ( play-01 :arg1 ( thing :arg1-of key-02 :arg1-of key-02 :poss country_name_0 ) ) ) :arg1 ( person_name_1 :arg0-of ( have-org-role-91 :arg1 ( person_name_2 :arg0-of ( have-rel-role-91 :arg1 person :arg2 sister ) ) :arg2 '' ) ) :time ( before :op1 now :quant ( temporal-quantity temporal-quantity_num_0 :unit year ) )
and :op1 ( gather-03 :arg0 ( person :quant ( about :op1 num_0 ) ) :beneficiary ( house :mod town ) ) :op2 ( know-02 :arg1 ( person :quant ( about :op1 num_0 ) ) :arg2 ( house :location city_name_0 ) :mod only )
say-01 :arg1 ( possess-01 :arg0 ( person :arg0-of hack-04 ) :arg1 ( possess-01 :arg1 ( and :op1 ( star :arg1-of ( total-01 :arg2 num_0 ) ) :op2 ( star :mod super :mod other ) :example ( and :op1 ( person_name_1 :arg0-of ( have-org-role-91 :arg1 model ) ) :op2 ( person_name_3 :arg0-of ( rival-01 :arg1 person_name_4 ) ) :op3 ( person_name_3 :arg0-of ( lead-02 :arg1 person_name_4 ) ) :op4 ( person_name_5 :arg0-of ( lead-02 :arg1 person ) ) :op5 ( person_name_6 :arg0-of ( lead-02 :arg1 person ) ) ) ) ) )
turnover :arg1 ( turnover :quant num_0 :mod eur ) :arg2 ( score-entity :op1 num_0 :op2 num_1 )
and :op1 ( shook :arg0 person_name_0 :arg1 ( incredulous :mod head :poss person ) ) :op2 ( cover-01 :arg0 ( hair :part-of person ) :arg1 ( thing :arg1-of envision-01 ) )
snapped :arg0 person_name_0 :arg1 ( fight-01 :quant num_0 :arg2 ( win-01 :quant num_1 :arg0 person ) :mod drawn out )
come-01 :arg1 train :arg3 greek
involve-01 :arg1 ( person :quant num_0 :arg1-of ( include-91 :arg2 ( demonstrate-01 :mod ( profitable :degree most ) :location region ) ) ) :arg2 ( person :arg0-of ( demonstrate-01 :mod ( profitable :degree most ) :location region ) )
increase-01 :arg1 ( value-01 :mod cyber :mod everyday ) :arg2 ( percentage-entity percentage-entity_num_0 ) :time ( before :op1 now :quant ( temporal-quantity temporal-quantity_num_1 :unit year ) ) :arg1-of instead-of-91
begin-01 :arg0 ( thing :arg1-of decide-01 ) :arg1 ( and :op1 ( devised :arg1 ( protest-01 :arg0 ( activist :mod business :mod city_name_0 ) :arg1-of long-03 ) ) :op2 ( implement-01 :arg0 thing :arg1 ( temporal-quantity temporal-quantity_num_0 :unit hour :mod just ) :time ( after :op1 ( presence :mod decide-01 ) ) ) ) :mod probable
twisted :arg0 person_name_0 :arg1 ( match-03 :quant num_0 :arg1-of ( include-91 :arg2 ( match-03 :quant num_1 :mod drawn out ) ) )
throw-01 :arg0 ( person_name_0 :arg0-of ( have-org-role-91 :arg2 republic ) ) :arg1 ( point :quant num_0 )
obligate-01 :arg1 he :arg2 ( explain-01 :arg0 he :arg1 jazz )
and :op1 ( follow-01 :arg1 person_name_0 :arg2 ( event :time weekend ) ) :op2 ( speak-01 :arg0 person :arg2 demonstrators :arg1-of ( cause-01 :arg0 ( arrive-01 :arg1 person :arg3 country_name_1 :mod even ) ) )
and :op1 ( say-01 :arg0 ( and :op1 ( person :arg0-of ( have-org-role-91 :arg1 ( promoter :poss city_name_0 ) :arg2 chairman ) ) :op2 ( person_name_1 :arg0-of ( have-org-role-91 :arg2 chairman ) ) ) :arg1 ( and :op1 ( returned :arg1 ( economy :time current ) :time ( since :op1 ( begin-01 :arg1 ( year :time-of ( return-01 :arg1 ( and :op1 market :op2 shop ) ) ) ) ) :op2 ( return-01 :arg1 shop :arg4 normal ) ) ) ) :op2 ( add-01 :arg0 and :arg1 ( provide-01 :arg0 country :arg1 ( environment :arg1-of stable-03 ) ) )
contrast-01 :arg1 ( agree-01 :arg0 ( person :arg0-of organisations ) :arg1 ( settlement :mod autumn ) ) :arg2 ( estimate-01 :arg0 ( estimate-01 :time ( recent :degree most ) ) :arg1 it :time ( week :mod this ) )
include-91 :arg1 ( and :op1 ( person :arg0-of ( love-01 :arg1 film ) ) :op2 ( person :arg0-of ( love-01 :arg1 film ) ) :op3 ( person :arg0-of ( have-org-role-91 :arg2 nÃ¤yttelijÃ¤ ) ) :op4 ( person_name_0 :arg0-of ( have-org-role-91 :arg2 nÃ¤yttelijÃ¤ ) ) :op5 ( person :arg0-of ( have-org-role-91 :arg2 nÃ¤yttelijÃ¤ ) ) ) :arg2 ( thing :mod other :arg1-of ( include-91 :arg2 ( thing :mod other ) :arg3 ( thing :mod other ) ) )
participate-01 :arg0 ( thousands :mod thousands ) :arg1 ( democracy :quant num_0 :arg1-of ( include-91 :arg2 ( democracy :mod ( large :degree most ) :location region ) ) ) :purpose ( support-01 :arg0 tens :arg1 demonstrate-01 )
notice-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg2 ( agent :mod ( estate :mod real ) ) ) ) :arg1 ( sell-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg2 ( agent :mod ( estate :mod real ) ) ) ) :arg1 house :purpose ( notice-01 :arg0 person :arg1 ( picture :poss house :location ( room :mod ( room :mod large ) :arg1-of ( lie-07 :arg2 ( pig :mod large ) ) ) ) ) )
go-08 :arg1 ( market :arg0-of house-01 :location city_name_0 ) :arg2 ( well :degree very ) :time ( recession-02 :arg1 ( person :arg0-of ( invest-01 :mod foreign ) ) )
recognize-02 :arg0 ( claim-01 :arg0 ( person_name_0 :arg0-of ( have-org-role-91 :arg1 ( government-organization :arg0-of ( govern-01 :arg1 country_name_1 ) ) :arg2 venÃ¤jÃ¤mielisten ) ) ) :arg1 ( responsible-03 :arg0 country :arg1 ( strategy :mod apparent :poss country ) :arg1-of ( follow-01 :arg2 ( and :op1 ( seek-01 :arg0 country :arg1 ( help-01 :arg0 country :arg1 ( take-over-12 :arg0 separatist :arg1 area ) ) :time ( since :op1 ( begin-01 :arg1 violence :time ( before :op1 now :quant ( temporal-quantity temporal-quantity_num_0 :unit year ) ) ) ) ) :op2 ( seek-01 :arg0 person :arg1 ( help-01 :arg0 person :arg1 ( and :op1 ( take-01 :arg0 separatist :arg1 area ) :op2 ( force-01 :arg0 government-organization :arg1 government-organization :arg2 ( government-organization :arg0-of ( govern-01 :arg1 country_name_2 ) ) ) :op3 ( independence :poss ( novorossijalle :mod new ) :arg0-of ( allow-01 :arg1 ( be-02 :arg1 country :prep-with world-region_name_3 :arg1-of ( instead-of-91 :arg2 world-region_name_3 ) ) ) ) ) ) ) ) ) )
and :op1 ( declare-01 :polarity - :arg2 ( ban-01 :arg1 person_name_0 ) :mod actual ) :op2 ( play-11 :arg0 person :mod just )
byline-91 :arg2 ( pension :poss ( person_name_0 :arg0-of ( have-org-role-91 :arg2 ( element :mod news ) ) ) )
accuse-01 :arg0 man :arg1 man :arg2 ( at :arg1 ( light :mod traffic ) )
investigate-01 :arg0 police :arg1 ( steal-01 :arg1 num_0 :arg2 location_name_0 ) :time ( day :time recent )
company :location city_name_0 :mod new
and :op1 ( rise-01 :arg1 ( rate-entity-91 :arg1 ( percentage-entity percentage-entity_num_0 ) :arg2 ( temporal-quantity temporal-quantity_num_1 :unit year ) ) :time ( before :op1 now :quant ( between :op1 ( temporal-quantity temporal-quantity_num_1 :unit year ) :op2 ( temporal-quantity temporal-quantity_num_1 :unit year ) ) ) ) :op2 ( cause-01 :arg1 ( grow-01 :arg1 ( turnover :quant num_2 ) :arg2 ( turnover :quant num_2 ) ) )
see-01 :polarity - :arg1 ( face :part-of he ) :time ever :arg1-of ( say-01 :arg0 voice ) :arg1-of ( say-01 :arg0 voice ) :mod only
indulgent :arg1-of ( instead-of-91 :arg2 ( eye :part-of he ) )
opportunity :mod still :purpose ( look-01 :arg0 we :arg1 ( thing :manner-of ( go-06 :arg0 we :arg1 ( level :mod international ) ) ) )
say-01 :arg0 ( agency_name_0 :mod news ) :arg1 ( say-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg1 country_name_0 :arg2 ( agency :mod news ) ) ) :arg1 ( attack-01 :arg1 ( talk-01 :arg1 peace :arg1-of plan-01 ) :arg1-of ( cause-01 :arg0 ( and :op1 ( campaign-01 :arg0 ( politician :mod country_name_2 ) :arg1 ( elect-01 :mod parliamentary :time ( date-entity month_date-entity_0 day_date-entity_0 ) ) ) :op2 ( attack-01 :arg0 ( force :mod ( government-organization :arg0-of govern-01 ) ) :arg1 civilian :location ( area :arg1-of ( control-01 :arg0 separatist ) ) ) ) ) ) )
bring-up-02 :arg1 ( dog :arg0-of ( have-rel-role-91 :arg2 dd1 ) ) :direction down :path ( through :op1 retkipatjan )
exemplify-01 :arg1-of exemplify-01
say-01 :arg0 ( agree-01 :mod loan-01 ) :arg1 ( do-02 :arg0 ( organization_name_1 :part-of ( organization_name_1 :part-of ( organization :mod club ) ) :mod main ) :arg1 person_name_2 )
receive-01 :arg0 ( person :arg0-of ( head-01 :arg1 state ) :arg0-of ( have-org-role-91 :arg1 state :arg2 ( family :arg1-of ( have-org-role-91 :arg0 person :arg2 member ) ) :location ( south :part-of person_name_0 ) ) ) :arg1 ( threat :mod die-01 )
include-91 :arg1 ( fan :mod country_name_0 :mod ( world :mod basketball ) ) :arg2 ( more-than :op1 num_0 ) :location here
say-01 :arg0 ( candidate :mod new :arg0-of ( love-01 :arg1 country ) ) :arg1 ( accept-01 :arg1 ( and :op1 ( person :arg0-of ( love-01 :arg1 country ) ) :op2 ( person :arg0-of ( love-01 :arg1 city_name_0 ) ) ) :mod only )
contrast-01 :arg2 ( and :op1 ( transfer-01 :arg0 person_name_0 :arg1 ( glory :quant all ) ) :op2 ( do-02 :arg0 person :arg1 it :manner style ) )
ready-02 :arg1 we :arg2 ( provide-01 :arg0 we :arg1 ( and :op1 ( person :arg0-of study-01 ) :op2 ( person :arg0-of study-01 ) ) :arg2 university :arg1-of ( easy-05 :degree most ) ) :time ( combine-01 :arg1 this :arg2 ( person :arg0-of ( have-rel-role-91 :arg1 ( person :arg0-of ( have-rel-role-91 :arg2 sister ) ) :arg2 friend ) :quant many ) )
believe-01 :arg0 company :arg1 ( demand-01 :arg1 service ) :concession ( pay-01 :arg0 ( person :quant most :arg0-of study-01 ) :arg1 ( fee :mod ( year :mod academia ) ) )
and :op1 ( follow-02 :arg0 person_name_0 :arg1 ( event :time ( over :op1 weekend ) ) ) :op2 ( speak-01 :arg0 person :arg2 demonstrators ) :op3 ( arrive-01 :arg1 some :arg3 country_name_2 :mod even )
say-01 :arg0 ( and :op1 ( area :location ( relative-position :op1 city :direction area ) ) :op2 ( environment :arg1-of surround-01 ) ) :arg1 ( kelko :arg1 ( and :op1 ( area :location city ) :op2 ( environment :arg1-of surround-01 ) ) :mod also :arg1-of ( instead-of-91 :arg2 ( broad-02 :arg1 ( modify-01 :arg2 ( location :location-of ( location :example ( ounasjoe :location ( slash :op1 ( slash :op1 ( slash :op1 ( distance-quantity distance-quantity_num_0 :unit mile ) :op2 ( distance-quantity distance-quantity_num_1 :unit mile ) ) ) ) ) ) ) ) ) ) )
view-02 :arg0 ( thing :arg2-of ( fortunate-01 :polarity - ) :location ( around :op1 world ) ) :arg1 ( and :op1 ( elÃ¤insuojelullisesti :polarity - :arg1 work-of-art_name_0 ) :op2 ( possible-01 :polarity - :arg1 ( and :op1 ( elÃ¤insuojelullisesti :arg1 work-of-art_name_0 ) :op2 ( possible-01 :polarity - :arg1 ethically ) ) :arg1-of develop-02 ) ) :time ( year :mod last ) :location ( around :op1 world )
multi-sentence :snt1 ( cause-01 :arg0 this :arg1 ( take-01 :mode imperative :arg0 you :arg1 it :manner serious ) ) :snt2 ( and :op1 ( take-01 :mode imperative :arg0 you :arg1 it :manner serious ) :op2 ( learn-01 :mode imperative :arg0 you :arg1 ( couplet :arg1 ( research-01 :arg1 background :mod little ) ) ) )
assure-01 :arg0 fire :arg1 i :arg2 ( home :poss organization_name_0 )
kill-01 :arg0 riot-01 :arg1 ( person :quant ( nearly :op1 near ) )
say-01 :arg0 organization_name_0 :arg1 ( return-02 :polarity - :arg1 ( family :quant num_0 ) :time yet )
wide-02 :arg1 ( and :op1 ( area :location location_name_0 ) :op2 ( surroundings :mod immediate :poss city ) ) :arg2 ( good :degree more :compared-to ( place :arg1-of ( describe-01 :arg0 ( place :mod exit :example ( slash :op1 ( slash :op1 ( slash :op1 ( slash :op1 ( slash :op1 ( slash :op1 ( slash :op1 ( slash :op1 ( slash :op1 ( slash :op1 ( slash :op1 ( slash :op1 ( slash :op1 ( slash :op1 ( slash :op1 ( slash :op1 ( slash :op1 ( slash :op1 ( slash :op1 ( slash :op1 ( slash :op1 ( slash :op1 ( slash :op1 ( slash :op1 ( slash :op1 ( slash :op1 ( slash :op1 ( slash :op1 ( slash :op1 ( slash :op1 ( area :mod email ) :op2 ( slash :op1 ( slash :op1 ( slash :op1 ( slash :op1 ( area :mod email ) :op2 ( slash :op1 ( slash :op1 ( slash :op1 ( slash :op1 ( area :name ( name :op1 location_name_1 ) ) :op2 ( place :name ( name :op1 mooring ) ) ) ) :op2 ( surroundings :mod immediately ) ) ) :op2 ( surroundings :mod immediate :poss city ) ) ) :op2 ( surroundings :mod immediate :poss city ) ) ) :op2 ( surroundings :mod immediate :poss city ) ) ) :op2 ( surroundings :mod immediate :poss city ) ) ) :op2 ( integrate-01 :arg1 city :time immediate ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) )
move-01
say-01 :arg0 person_name_0 :arg1 ( probable :domain ( and :op1 ( person :arg0-of ( play-01 :arg1 ( league :mod pool ) ) :domain you ) :op2 ( discover-01 :polarity - :arg0 you :arg1 ( person :arg0-of ( play-01 :arg1 league ) :domain you ) ) :op3 ( need-01 :polarity - :arg0 you :arg1 ( work-01 :arg0 you ) ) ) :time ( after :op1 ( and :op1 ( and :op1 ( treeni :arg0 you :arg1 fun ) :op2 ( discover-01 :arg0 you :arg1 fun ) ) ) :op2 ( discover-01 :polarity - :arg0 you :arg1 ( person :arg0-of ( play-01 :arg1 league ) :domain you ) ) ) )
multi-sentence :snt1 basketball :snt2 ( faint :arg1 ( house :poss person_name_0 ) :mod actual :location ground :mod actual )
include-91 :arg1 ( person_name_0 :quant ( multiple :op1 num_0 ) :arg1-of ( include-91 :arg2 ( speech :mod last ) ) ) :arg2 ( and :op1 documentary :op2 ( sell-01 :arg1 speech ) )
multi-sentence :snt1 ( try-01 :arg0 i :arg1 ( attract-01 :arg0 i :arg1 i ) :frequency many :purpose ( and :op1 ( attract-01 :arg0 i :arg1 it ) :op2 ( take-out-11 :arg0 i :arg1 it :extent little ) ) ) :snt2 ( write-01 :arg0 person_name_0 :arg1 updates )
renew-01 :arg1 ( agree-01 :arg1 ( and :op1 ( spring :quant num_0 ) :op2 ( treaty :quant num_1 :mod spring ) ) ) :arg1-of renew-01
share-01 :arg0 city_name_0 :arg1 this :time ( afternoon :mod this ) :location ( thing :arg2-of ( price-01 :arg1 ( exchange-01 :arg1 stock ) :location city_name_1 ) ) :manner steady
tell-01 :arg0 ( news :topic transfer-01 ) :arg1 ( person :quant num_1 :arg1-of ( include-91 :arg2 ( person :arg0-of ( play-08 :arg1 star ) :arg1-of ( include-91 :arg2 ( person :arg0-of ( play-08 :arg1 star ) ) ) ) ) ) :arg2 ( person :quant num_1 :arg1-of ( include-91 :arg2 ( person :arg0-of ( play-08 :arg1 star ) ) ) ) :time ( season :mod last )
say-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg1 charity :arg3 ( cmt :mod charity ) ) ) :arg1 ( problem :mod common :domain ( diagnosis :arg1-of ( correct-02 :polarity - ) ) :arg1-of ( cause-01 :arg0 ( know-02 :arg1 ( little :degree so ) :arg2 they ) ) )
and :op1 ( video :name ( name :op1 lut :op2 internet :op3 internet :op4 internet :op5 internet :op6 internet :op7 internet ) ) :op2 ( share-01 :arg1 ( and :op1 company_name_0 :op2 product_name_1 ) )
possible-01 :arg1 ( have-03 :arg0 ( book :mod new ) :arg1 ( thing :arg2-of ( price-01 :arg1 ( thing :arg2-of ( cost-01 :arg1 ( cost-01 :arg1 it :arg2 campus ) ) ) ) :mod only ) )
contrast-01 :arg1 ( confirm-01 :arg1 ( depart-01 :arg0 person_name_0 ) ) :arg2 ( come-01 :arg1 replace-01 :time ( time :arg1-of same-01 :time-of ( open-01 :arg1 door ) :mod almost ) )
age-01 :arg1 ( water :consist-of ice ) :arg2 ground :duration ( temporal-quantity temporal-quantity_num_0 :unit year )
and :op1 ( rise-01 :arg1 ( house-01 :location city_name_0 ) :mod huge :time ( time :arg1-of same-01 ) ) :op2 ( luottokupla :arg1 house-01 :arg1-of ( spread-02 :arg1-of wide-02 ) :arg1-of ( lead-03 :arg2 organization_name_1 :purpose ( restrict-01 :arg1 mortgage :location june ) ) :time ( time :arg1-of same-01 ) )
know-01 :polarity - :arg0 they :arg1 ( have-manner-91 :arg1 this :arg2 i ) :mod certain
excite-01 :arg1 we :arg2 ( class :ord ( ordinal-entity ordinal-entity_num_0 ) :part-of ( demand-01 :arg0 ( person :arg0-of ( study-01 :time today ) :mod luxury :mod country_name_0 ) ) )
possible-01 :arg1 ( admit-01 :arg0 ( government-organization :arg0-of ( govern-01 :arg1 country_name_0 ) ) :arg1 ( need-01 :arg0 government-organization :arg1 ( depend-01 :polarity - :arg0 government-organization :arg1 ( territory :location east ) ) ) ) :arg1-of ( say-01 :arg0 person_name_1 )
enjoy-01 :arg0 ( person :mod both ) :arg1 ( fruits :poss work-01 ) :time now
promise-01 :arg2 ( promise-01 :arg2 ( experience-01 :arg0 ( person :arg0-of ( work-01 :location ground ) :arg0-of ( work-01 :location ground :arg1-of ( differ-02 :arg2 ( frame :part-of location_name_0 ) :arg1-of complete-02 ) ) ) :arg1 person ) )
e-kirja :polarity - :arg1 chegg-kaupasta :time ( before :op1 now :duration ( temporal-quantity temporal-quantity_num_0 :unit month ) ) :time ( before :op1 now :duration ( temporal-quantity temporal-quantity_num_1 :unit month ) )
say-01 :arg1 ( hope-01 :arg0 i :arg1 ( have-03 :arg0 you :arg1 ( spirit :mod ( spirit :mod good ) ) ) :arg2 person_name_0 ) :arg2 ( person :arg0-of ( look-01 :arg1 ( and :op1 i :op2 ( person :arg0-of ( have-rel-role-91 :arg1 i :arg2 husband ) ) :location privacy :time ( before :op1 now :quant ( temporal-quantity temporal-quantity_num_0 :unit year ) ) ) ) )
welcome-01 :arg0 he :arg1 ( person :arg0-of ( have-org-role-91 :arg2 member ) ) :arg2 ( tell-01 :arg1 ( possible-01 :arg1 ( good :degree more :domain organization_name_0 :time already ) ) :arg2 member )
difficult :domain ( communicate-01 :arg1 majority :arg2 they )
cause-01 :arg0 ( become-01 :arg1 ( and :op1 man :op2 woman ) :arg2 ( cause :mod ( common :degree most ) :poss ( and :op1 man :op2 woman ) ) ) :arg1 ( become-01 :arg1 ( and :op1 man :op2 woman ) :arg2 ( thing :arg0-of ( cause-01 :arg1 ( tell-01 :arg0 ( and :op1 man :op2 woman ) :arg1 ( word :arg1-of ( place-01 :arg0 ( and :op1 man :op2 woman ) :arg2 receiver :arg1-of ( place-01 :arg0 ( and :op1 man :op2 woman ) :arg2 receiver :time at-first ) ) ) ) ) ) )
fire-01 :arg0 ( and :op1 ( person :arg0-of ( have-org-role-91 :arg1 country-region_name_0 :arg2 soldier ) ) :op2 ( person :arg0-of ( have-org-role-91 :arg1 organization_name_1 :arg2 soldier ) ) :op3 ( soldier :mod other :arg0-of ( have-org-role-91 :arg2 soldier ) ) ) :arg1 ( and :op1 ( town :mod israeli ) :op2 ( grenade :location ( south :part-of south ) ) )
and :op1 ( regime :mod employee :mod ( employee :mod central ) ) :op2 ( regime :mod organization_name_0 ) :op3 ( deal-01 :arg2 ( situation :mod negotiate-01 ) )
and :op1 ( ' :polarity - :arg1 we ) :op2 ( ' :arg0 we :arg1 other )
contrast-01 :arg1 ( possible-01 :polarity - :arg1 ( discuss-01 :arg1 ( issue-02 :mod this ) :arg2 ( between :op1 country_name_0 :op2 country_name_1 ) ) ) :arg2 ( say-01 :arg0 person_name_2 :arg1 ( contrast-01 :arg1 ( conflict-01 :arg0 country :arg1 country ) :arg2 ( conflict-01 :polarity - :arg0 country :arg1 country :arg1-of internal-02 ) ) )
enjoy-01 :arg0 nobody :arg1 ( eat-01 :arg1 carrots )
lead-03 :polarity - :arg0 ( agency :mod large :mod country_name_0 ) :arg2 ( oppose-01 :arg0 agency :arg1 ( research-01 :arg1 research-01 ) )
promise-01 :arg0 ( person :mod young ) :arg2 ( person :arg2-of staff-01 )
report-01 :arg0 ( organization_name_0 :part-of ( head :part-of head ) ) :arg1 ( react-01 :arg0 ( person :arg0-of ( spy-01 :arg1 ( spy-01 :arg0 person ) ) ) :arg1 ( react-01 :arg0 ( government-organization :arg0-of ( govern-01 :arg1 country-region ) ) :mod vihaisemma ) ) :time ( early :degree more )
good :degree very :domain it
multi-sentence :snt1 ( -rrb- :arg0 person_name_0 :mod right ) :snt2 ( stretched :mode expressive )
include-01 :arg1 ( and :op1 journalist :op2 ( coaches :mod basketball ) :op3 ( person :arg0-of play-01 ) :op4 ( person :arg0-of play-01 ) :op5 ( fan :mod some ) ) :arg2 group
and :op1 ( compare-01 :arg1 ( person :arg0-of deal-01 :arg1-of differ-02 ) :arg2 discipline ) :op2 ( thing :domain ( thing :arg1-of choose-01 ) )
and :op1 ( hold-04 :arg1 ( thing :arg1-of decide-01 ) :location city_name_0 :time ( before :op1 now :quant ( some :op1 ( temporal-quantity temporal-quantity_num_0 :unit year ) ) ) ) :op2 ( protest-01 :arg0 ( person :quant most :arg0-of protest-01 ) )
have-condition-91 :arg1 ( obligate-01 :arg2 ( chegg.com :arg1 paper ) ) :arg2 ( obligate-01 :arg2 ( chegg.com :arg1 paper ) )
contrast-01 :arg1 ( try-01 :arg0 i :arg1 ( shut-down-05 :arg0 i :arg1 ( mouth :part-of i ) ) ) :arg2 ( realize-01 :arg0 i :arg1 ( wrong-04 :arg1 something ) :time then )
serve-01 :arg0 ( we :mod civil ) :prep-without product_name_1
get-01 :arg0 film :arg1 ( ensi-ilta :poss film ) :location country_name_0 :time ( date-entity month_date-entity_0 year_date-entity_0 )
say-01 :arg0 ( person_name_0 :arg0-of ( have-org-role-91 :arg2 director ) ) :arg1 ( need-01 :arg0 person :arg1 ( and :op1 ( door :mod lapannut ) :op2 ( '' :mod windows ) ) )
and :op1 ( train-01 :arg1 person_name_0 :arg2 ( record :arg1-of rare-02 :poss person_name_1 ) :time current ) :op2 ( base-02 :arg1 ( and :op1 ( person :arg0-of ( have-rel-role-91 :arg1 person :arg2 father ) ) :op2 ( person :arg0-of ( have-rel-role-91 :arg1 person :arg2 father ) ) :op3 ( person :arg0-of ( have-rel-role-91 :arg1 person :arg2 father ) ) :op4 ( person :arg0-of ( have-rel-role-91 :arg1 person :arg2 father ) ) :op5 ( person :arg0-of ( have-rel-role-91 :arg1 person :arg2 father ) ) :op6 ( person :arg0-of ( have-rel-role-91 :arg1 person :arg2 father ) ) :op7 ( person :arg0-of ( have-rel-role-91 :arg1 person :arg2 father ) ) ) )
own-01 :arg0 apollo :arg1 ( majority :poss company ) :time ( after :op1 ( trade-01 :quant num_0 :arg2 ( monetary-quantity monetary-quantity_num_1 :unit ( dollar :mod renminbi ) ) ) )
warn-01 :arg0 ( person_name_0 :arg0-of ( have-org-role-91 :arg1 ( person_name_1 :arg0-of ( have-org-role-91 :arg2 intermediaries ) ) :arg2 intermediaries ) ) :arg1 ( lead-03 :arg0 ( report-01 :arg1 ( lend-01 :mod ( strict :degree more ) ) ) :arg2 ( level :arg1-of ( low-04 :degree more ) :mod ( grow-01 :arg1 ( and :op1 ( sell-01 :arg1 property ) :op2 ( thing :arg2-of price-01 ) ) :time ( year :ord ( ordinal-entity ordinal-entity_num_0 ) ) ) ) ) :time ( week :mod last )
describe-01 :arg1 ( thing :arg1-of ( include-91 :arg2 ( thing :mod other ) ) ) :arg2 ( thing :arg2-of ( include-91 :arg1 ( thing :mod other ) ) ) :arg1-of ( cause-01 :arg0 ( describe-01 :polarity - :arg0 law :arg1 ( campaign-01 :polarity - :arg0 law ) ) )
take-01 :arg0 he :arg1 picture :accompanier ( person :arg0-of ( have-rel-role-91 :arg1 he :arg2 husband ) ) :time ( before :op1 now :quant ( temporal-quantity temporal-quantity_num_0 :unit year ) )
and :op1 ( sign-01 :arg1 ( fish :source ( boat :mod rowing ) ) :mod even ) :op2 ( contain-01 :arg0 fish :arg1 ( muerte :polarity - ) )
speak-01 :polarity - :arg0 i :arg2 he :time ever :prep-on ( issue-02 :mod that )
person :quant num_0 :domain i
cause-01 :arg1 ( possible-01 :arg1 ( forget-01 :arg0 we :arg1 it ) )
and :op1 ( rescued :arg1 ( soldier :quant num_0 :mod marine ) ) :op2 ( miss-01 :arg1 ( soldier :quant num_0 ) :mod still )
say-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg1 organization_name_0 :arg3 work-01 ) ) :arg1 ( and :op1 ( person :arg0-of ( work-01 :arg2 prison ) :mod prison ) :op2 ( person :arg0-of ( represent-01 :arg1 organization ) ) :op3 ( person :arg0-of ( represent-01 :arg1 organization ) ) :op4 ( person :arg0-of ( represent-01 :arg1 organization ) ) :op5 ( person :arg0-of ( represent-01 :arg1 organization ) ) )
contrast-01 :arg1 ( possible-01 :arg1 ( leave-15 :arg0 ( person_name_0 :arg0-of ( have-org-role-91 :arg2 senator ) ) :arg1 ( call-03 :arg0 person :arg1 war ) ) ) :arg2 ( have-purpose-91 :arg1 ( government-organization :arg0-of govern-01 :mod new ) :arg2 ( government-organization :arg0-of govern-01 :mod new ) :time ( after :op1 ( take-01 :polarity - :arg1 ( over :op1 summer ) :mod even ) ) )
include-01 :arg1 ( and :op1 ( person :arg0-of ( have-rel-role-91 :arg1 ( child :mod tradition ) :arg2 child ) ) :op2 ( person :arg0-of ( have-rel-role-91 :arg1 child :arg2 child ) ) :op3 ( flower :poss ( person :arg0-of teach-01 ) ) ) :arg2 ( day :ord ( ordinal-entity ordinal-entity_num_0 ) :mod school )
learn-01 :arg0 he :arg1 ( way :arg1-of hard-04 :domain this )
say-01 :arg0 ( and :op1 ( area :location ( relative-position :op1 city :direction area ) ) :op2 ( environment :arg1-of surround-01 ) ) :arg1 ( kelko :arg1 ( and :op1 ( area :location city ) :op2 ( environment :arg1-of surround-01 ) ) :mod also :arg1-of ( instead-of-91 :arg2 ( broad-02 :arg1 ( modify-01 :arg2 ( location :location-of ( location :example ( ounasjoe :location ( slash :op1 ( slash :op1 ( slash :op1 ( distance-quantity distance-quantity_num_0 :unit mile ) :op2 ( distance-quantity distance-quantity_num_1 :unit mile ) ) ) ) ) ) ) ) ) ) )
leave-11 :arg0 ( thing :arg1-of ( decide-01 :arg0 person_name_0 ) ) :arg1 ( complain-01 :arg0 country :arg1 matter :mod formal ) :arg2 ( rest :part-of organization_name_1 )
question-01 :arg1-of ( cause-01 :arg0 ( seem-01 :arg1 ( endanger-01 :arg0 public :arg1 ( effect :mod immediate ) ) ) )
say-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg1 he :arg2 ( location_name_0 :mod newsletter ) ) ) :arg1 ( opportunity :domain vote-01 :beneficiary ( person :mod ethnic-group_name_1 :arg0-of ( event :time ( once :op1 life :mod only ) ) ) ) :location ( location_name_0 :mod newsletter :poss he )
contrast-01 :arg2 ( explain-01 :arg0 it :arg1 ( cause-01 :arg0 amr-unknown :arg1 ( sing :arg0 they :arg1 it :arg2 i ) ) )
way :arg1-of ( simple-02 :degree most ) :purpose ( save-01 :arg1 money )
contrast-01 :arg2 ( call-03 :arg0 person_name_0 :arg1 ( obligate-01 :arg1 troop :arg2 ( withdraw-01 :arg0 troop :arg1 country_name_1 :time immediate :arg1-of ( cause-01 :arg0 ( possible-01 :polarity - :arg1 ( fire-02 :arg0 troop :arg1 civilian ) ) ) ) ) )
kaatumiskuva :arg0 person_name_0 :arg1 city_name_1 :mod ( good :degree most )
be-temporally-at-91 :arg1 it :arg2 ( back :op1 then )
great :domain ( see-01 :arg1 ( have-03 :arg0 other :arg1 plot-01 ) )
win-01 :arg0 person_name_0 :arg1 ( tube :mod naispÃ¤Ã¤osan :mod ( good :degree most ) :location city_name_1 ) :arg2 ( role :poss person :topic ( invade-01 :arg0 ( barbarian :mod film ) :location ( thing :quant num_0 ) ) )
crash-01 :time ( after :op1 ( crash-01 :arg1 city_name_0 :arg1-of deep-02 ) )
have-concession-91 :arg2 ( return-02 :arg0 ( government-organization :arg0-of govern-01 :arg1-of local-02 ) :arg1 ( thing :arg1-of propose-01 ) :arg2 ( prepare-01 :arg1 ( team :arg0-of manage-01 ) :direction forward ) )
do-02 :arg0 ( person_name_0 :arg0-of move-01 ) :arg1 ( thing :mod same ) :time ( early :degree more :mod little )
person_name_0
obligate-01 :arg2 ( fight-01 :arg0 we :arg2 peace )
try-01 :arg0 i :arg1 ( take-on-09 :arg0 i :arg1 it ) :concession-of ( obligate-01 :arg1 i :arg2 ( let-01 :arg0 i :arg1 ( be-02 :arg1 i ) ) )
and :op2 ( say-01 :arg0 i :arg1 ( continue-01 :arg1 ( say-01 :arg0 you ) ) )
picture :polarity - :mod fanihuuma
and :op1 ( remove-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg2 ( agent :mod estate ) ) ) :arg1 university_name_0 :arg2 ( sell-01 :arg1 ( image :mod ( sell-01 :arg1 house ) ) ) ) :op2 ( become-01 :arg1 ( elephant :location ( room :location organization_name_1 ) ) :arg2 ( pig :mod big ) )
own-01 :arg0 ( municipal :duration ( more-than :op1 ( temporal-quantity temporal-quantity_num_0 :unit year ) ) ) :arg1 area
roaring :arg1 ( person_name_0 :mod country_name_1 ) :manner ( loud :degree so ) :time ( pour :arg1 ( water :mod cold :consist-of ice ) :arg2 he :arg1-of ( cause-01 :arg0 ( damage-01 :arg0 ( water :mod cold ) :arg1 ( tone :arg1-of facial ) ) ) )
and :op1 ( go-08 :arg1 scientist :arg2 ( more-than :op1 ( country_name_0 :mod country_name_1 ) ) ) :op2 ( say-01 :arg0 scientist :arg1 ( include-91 :arg1 ( woman :quant ( percentage-entity percentage-entity_num_0 :mod only ) ) :arg2 ( temporal-quantity temporal-quantity_num_1 :unit year ) :time ( after :op1 war_name_1 ) ) )
or :op1 ( damage-01 :arg1 ( attack-01 :mod israeli ) ) :op2 ( destroy-01 :arg0 attack-01 :arg1 ( home :poss ( person :quant ( more-than :op1 num_1 ) :arg1-of ( change-01 :arg2 ( school :quant num_1 :mod organization_name_1 :arg1-of ( change-01 :time eventual ) ) ) ) ) )
say-01 :arg0 ( online :arg1-of ( publish-01 :medium online ) ) :arg1 ( and :op1 ( keep-02 :arg1 ( occupy-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg2 ( '' :mod business ) ) ) :arg1 ( resort :mod last :arg1-of ( introduce-01 :arg2 ( hopeful-03 :polarity - :arg1 dialogue-01 ) ) ) ) ) :op2 ( way :polarity - :mod other :mod way ) ) :medium online
appear-01 :arg1 he :location ( film :arg2-of ( include-01 :arg1 ( and :op1 person_name_0 :op2 person_name_2 :location ( film :mod ( glass :mod butterfly ) ) ) ) )
multi-sentence :snt1 ( start-01 :arg0 ( person_name_0 :arg0-of ( have-org-role-91 :arg1 ( career :mod tv ) :arg3 ( career :mod tv ) ) ) :arg1 ( seventies :arg1 ( career :mod tv ) ) ) :snt2 ( and :op1 ( imitaattori :arg1 i :medium tv :mod only :arg1-of ( long-03 :degree quite ) ) :op2 ( say-01 :arg0 he ) )
contrast-01 :arg1 ( know-01 :polarity - :arg0 i :arg1 ( have-manner-91 :arg1 it ) ) :arg2 ( succeed-01 :arg1 ( succeed-01 :arg0 all ) )
say-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg1 organization_name_0 :arg2 ( person :arg0-of study-01 ) :time ( year :mod last ) ) ) :arg1 ( buy-01 :arg0 person :arg1 ( thing :arg1-of ( decide-01 :arg0 media ) :mod strategy :mod strategic ) :arg1-of ( cause-01 :arg0 ( understand-01 :arg0 person :arg1 ( end-01 :arg1 ( business :mod business :mod ( monetary-quantity monetary-quantity_num_0 :unit dollar :mod only ) ) :mod business ) ) ) ) :time ( year :mod last )
challenge-01 :arg2 ( participate-01 :arg0 ( person :mod country_name_0 ) :arg1 ( hospital :location-of ( set-up-03 :arg1 ( person :mod country_name_1 ) :location ( place :location-of ( set-up-03 :arg1 person :location place ) ) ) ) )
become-01 :arg1 person_name_0 :arg2 ( thing :quant num_0 )
have-03 :arg0 ( and :op1 ( person :arg0-of ( have-org-role-91 :arg1 country_name_0 ) ) :op2 ( person :arg0-of ( have-org-role-91 :arg1 factory ) ) :op3 ( person :arg0-of ( have-org-role-91 :arg1 region :arg3 ( lead-02 :arg0 person ) ) ) :op4 ( person :arg0-of ( produce-01 :arg1 metal ) ) :op5 ( person :arg0-of ( produce-01 :arg1 ( product :mod vital :mod country ) ) :arg0-of ( produce-01 :arg1 ( product :mod vital :mod country ) ) ) ) :arg1 ( person :mod country_name_1 )
encourage-01 :arg0 he :arg1 child :arg2 ( and :op1 ( study-01 :arg0 child :arg1-of hard-02 ) :op2 ( promise-01 :arg0 child :arg2 ( care-03 :arg0 child :arg1 ( lasten :mod '' ) ) ) )
dans :arg0 ( and :op1 ( person_name_0 :arg0-of ( have-org-role-91 :arg2 wrong-footed ) ) :op2 ( person_name_1 :arg0-of ( have-org-role-91 :arg2 wrong-footed ) ) :op3 ( person_name_2 :arg0-of ( have-org-role-91 :arg2 meteorological ) ) :op4 ( person_name_2 :arg0-of ( have-org-role-91 :arg2 meteorological ) ) :op5 ( person_name_2 :arg0-of ( have-org-role-91 :arg2 meteorological ) ) :op6 ( person :arg0-of ( have-org-role-91 :arg2 meteorological ) ) :op6 ( person :arg0-of ( have-org-role-91 :arg2 meteorological ) ) :op7 ( person :arg0-of ( have-org-role-91 :arg2 meteorological ) ) :op6 ( person :arg0-of ( have-org-role-91 :arg2 meteorological ) ) :op7 ( person :arg0-of ( have-org-role-91 :arg2 meteorological ) ) )
and :op1 ( out :arg1 ( and :op1 ( model :mod ordinary :mod ordinary ) :op2 ( model :mod vedenpitÃ¤viin ) ) ) :op2 ( criticize-01 :arg0 and :arg1 model )
multi-sentence :snt1 ( gather-03 :arg0 ( person :quant ( about :op1 num_0 ) ) :location location_name_0 ) :snt2 ( respond-01 :arg1 summit )
part :part-of ( presentation :poss life ) :mod only
create-01 :arg0 ( person :arg0-of ( have-rel-role-91 :arg1 person_name_0 :arg2 mate :time ( late :degree most ) ) :arg0-of ( have-rel-role-91 :arg1 person :arg2 mate ) ) :arg1 ( and :op1 ( person_name_2 :arg0-of ( have-org-role-91 :arg1 disruption :arg2 predecessor ) ) :op2 ( person_name_2 :arg0-of ( have-org-role-91 :arg1 sam :arg2 predecessor ) ) :op3 ( person_name_2 :arg0-of ( have-org-role-91 :arg1 nana :arg2 predecessor ) ) :op4 ( person :arg0-of ( have-rel-role-91 :arg1 person :arg2 predecessors ) ) :op5 ( person :arg0-of ( have-rel-role-91 :arg1 person :arg2 predecessors ) ) :op6 ( person :arg0-of ( have-rel-role-91 :arg1 person :arg2 predecessors ) ) :op6 ( person :arg0-of ( have-rel-role-91 :arg1 person :arg2 predecessors ) ) :op6 ( person :arg0-of ( have-rel-role-91 :arg1 person :arg2 predecessors ) ) :op7 ( person :arg0-of ( have-rel-role-91 :arg1 person :arg2 whistle-blowing ) ) :op7 ( person :arg0-of ( have-rel-role-91 :arg1 person :arg2 whistle-blowing ) ) ) :time ( late :degree most ) :mod only
multi-sentence :snt1 ( block-01 :arg0 person_name_0 :arg1 ( fund-01 :arg1 post ) ) :snt2 ( and :op1 ( block-01 :arg0 ( person :arg0-of ( lead-02 :arg1 ( jury :mod grand :location city_name_1 ) :time ( month :mod this ) ) ) :arg1 ( meet-03 :arg0 person :arg1 ( person :arg1-of accuse-01 ) ) :time ( month :mod this ) ) :op2 ( candidate :mod potential :domain person_name_2 :beneficiary person ) )
love-01 :arg0 i :arg1 ( room :purpose train-01 )
contrast-01 :arg1 ( money :polarity - :time no-longer :domain it ) :arg2 ( say-01 :arg0 ( person :arg0-of ( own-01 :arg1 shop ) :quant ( multiple :op1 num_0 ) ) :arg1 court )
(-(
insist-01 :arg0 ( person_name_0 :arg0-of ( have-org-role-91 :arg1 country_name_1 :arg2 president ) ) :arg1 ( and :op1 ( end-01 :arg0 ( government-organization :arg0-of ( govern-01 :arg1 country ) ) :arg1 ( fight-01 :arg0 government-organization :arg1 separatist :location ( east :part-of country ) ) ) :op2 ( start-01 :arg0 government-organization :arg1 ( negotiate-01 :arg0 government-organization :arg1 separatist :time immediate ) ) :op3 ( start-01 :arg0 government-organization :arg1 negotiate-01 :time immediate :location region ) :op4 ( tell-01 :arg0 country :arg2 country ) )
send-01 :polarity - :arg1 ( meet-03 :arg0 council ) :arg2 ( result-01 :arg1 ( problem :topic technical ) :arg1-of direct-02 )
be-located-at-91 :arg1 ( location_name_0 :arg1-of ( annexed :arg2 country_name_1 :time ( before :op1 now :quant ( temporal-quantity temporal-quantity_num_0 :unit month ) ) ) ) :arg2 ( and :op1 ( port :location ( and :op1 ( area :part coast ) :op2 ( port :location coast ) ) ) :op2 ( port :location coast :mod history ) )
offer-01 :arg0 ( stimulation :arg1 ( pupil :part-of school ) ) :arg1 ( option :mod vegetarian ) :manner ( permit-01 :arg1 ( permit-01 :arg1 ( or :op1 ( person :arg0-of ( have-rel-role-91 :arg1 ( person :arg0-of ( have-rel-role-91 :arg1 ( person :arg0-of ( have-rel-role-91 :arg1 ( person :arg0-of ( have-rel-role-91 :arg1 ( person :arg0-of ( have-rel-role-91 :arg1 ( person :arg0-of ( have-rel-role-91 :arg2 parent ) ) :arg2 parent ) ) :arg2 parent ) ) ) ) ) ) ) ) :op2 ( person :arg0-of ( have-rel-role-91 :arg1 person :arg2 doctor ) ) :op3 ( diet :mod vegetarian ) ) :mod only ) ) :time today
loud :domain ( person_name_0 :mod male :mod male ) :degree so :time ( run-02 :arg0 person :arg1 ( water :consist-of ice :arg1-of ( damage-01 :arg0 ( face :part-of person ) ) ) )
say-01 :arg0 he :arg1 ( and :op1 ( obligate-01 :arg1 we :arg2 ( stay-01 :arg1 we :location ( side :poss he ) ) ) :op2 ( say-01 :arg0 he :arg1 ( thing :arg2-of ( obligate-01 :arg1 we ) ) ) )
boy :arg0-of ( take-01 :arg1 photo :time ( after :op1 ( become-01 :arg1 boy :arg2 ( thing :arg1-of ( symbolize-01 :arg2 game_name_1 ) ) ) ) )
(-(
important :domain this :condition ( and :op1 ( natÃ¡?Ã­te :arg1 ( camera :mod outdoorovou ) ) :op2 ( lenses :arg1 ( facility :mod such ) :mod usual :arg1-of wide-02 ) :arg1-of ( mean-01 :arg2 ( and :op1 ( firm :mod usual :domain facility ) :op2 ( lenses :arg1-of wide-02 ) :domain facility ) ) :arg1-of ( mean-01 :arg2 ( need-01 :arg0 you :arg1 ( point :mod more ) :condition ( want-01 :arg0 you :arg1 ( person :arg0-of ( have-rel-role-91 :arg1 you :arg2 fotorÃ¡me?ek ) ) ) ) ) )
get-01 :arg0 ( person :arg0-of ( play-01 :arg1 lottery ) :location person_name_0 ) :arg1 ( slice :quant num_0 )
and :op1 ( state-01 :arg0 ( state :mod country_name_0 ) :arg1 ( and :op1 ( pass-01 :arg0 ( law :arg1-of resemble-01 ) :arg1 ( court :location peninsula_name_1 ) ) :op2 ( message-01 :arg0 state ) ) ) :op2 ( declare-01 :arg0 state :arg2 ( measure-02 :arg0 ( constitution :mod provisions ) :mod such ) )
multi-sentence :snt1 ( and :op1 ( say-01 :arg0 ( needle :consist-of ( person :arg0-of ( say-01 :arg1 treasure ) ) ) :arg1 treasure ) :op2 ( say-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg1 lungs ) ) :arg1 treasure ) ) :snt2 ( push-02 :arg0 it :arg2 ( edges :location ( location :location-of ( locates :arg1 vÃ½stelka ) ) ) )
old :polarity - :domain person_name_0
multi-sentence :snt1 ( contrast-01 :arg1 ( have-03 :arg0 we :arg1 ( fear-01 :quant ( bit :degree little ) ) ) :arg2 ( have-03 :arg0 we :arg1 ( fear-01 :arg0 we :direction forward ) ) ) :snt2 ( say-01 :arg0 i :arg1 ( reside-01 :arg0 person_name_0 :arg1 ( and :op1 person_name_1 :op2 ( person :mod country :arg0-of teach-01 ) ) :location ( school :arg1-of local-02 ) ) )
contrast-01
multi-sentence :snt1 ( recommend-01 :arg0 we :arg1 ( revisit :arg0 you :arg1 ( doctor :arg0-of ( write-01 :arg1 ( write-01 :arg0 doctor :arg1 ( accident :arg1-of ( confirm-01 :arg0 doctor ) ) ) ) ) ) ) :snt2 ( prove-01 :arg0 it :arg1 ( -rrb- :arg1 doctor ) :mod only ) :snt3 ( prove-01 :arg0 it :arg1 ( -rrb- :arg0 doctor ) :mod only )
price-01 :quant num_0 :mod exact
shock-01 :arg0 i :arg1 i :arg1-of complete-02 :time ( answer-01 :arg0 i )
and :op1 ( realize-01 :arg0 i :arg1 ( do-02 :arg0 ( year :mod this ) :arg1 ( family :arg1-of ( have-org-role-91 :arg0 i :arg2 member ) ) :time ( year :mod this ) ) ) :op2 ( begin-01 :arg0 i :arg1 ( appreciate-02 :arg0 i :arg1 ( more :compared-to he ) ) )
landed :arg1 ( and :op1 czechs :op2 slovaks ) :location location_name_0 :time ( before :op1 now :quant ( multiple :op1 ( temporal-quantity temporal-quantity_num_0 :unit year ) ) )
contrast-01 :arg1 ( like-01 :arg0 boy :arg1 sport ) :arg2 ( possible-01 :polarity - :arg1 ( do-02 :arg0 boy :arg1 it :arg1-of ( cause-01 :arg0 ( have-polarity-91 :arg2 - :degree very ) ) ) )
connect-01 :polarity - :arg1 company_name_0 :arg2 ( case :poss he ) :time ( then :mod even )
multi-sentence :snt1 ( remember-01 :arg0 i :arg1 ( '' :arg0 i :arg1 ( person_name_0 :arg1-of ( run-01 :arg0 i ) ) ) ) :snt2 ( contrast-01 :arg2 ( convince-01 :arg1 i :arg2 ( hear-01 :arg0 i ) ) )
thing :arg2-of ( characteristic-02 :arg1 ( person_name_0 :mod atheist :mod country_name_1 ) ) :mod another :mod another
and :op1 ( remove-01 :arg1 ( person :arg1-of ( employ-01 :location ( south :part-of country ) ) ) :arg2 ( wall :location ( south :part-of country ) ) ) :op2 ( remove-01 :arg1 ( return-01 :arg1 child ) :manner gradual :manner gradual ) :location ( country :location ( south :part-of country ) )
look-02 :arg0 it :arg1 ( wait-01 :arg1 they :arg2 trouble :arg1-of ( do-02 :polarity - :arg0 they ) )
include-01 :arg1 ( picture :topic ( room :mod live-01 ) ) :arg2 ( picture-01 :arg1 ( pig :arg0 pig :arg1 ( head :part-of ( head :part-of he ) ) ) )
help-01 :arg0 ( picture :arg1-of ( focus-01 :arg2 ( area :mod small :part-of ( image :mod previous ) ) ) ) :arg1 ( become-01 :arg1 picture :arg2 ( see-01 :arg0 picture ) )
serve-01 :arg0 it :arg1 ( example :mod good ) :location country_name_0 :arg1-of ( cause-01 :arg0 ( chess :arg1 ( board :mod cribbage :topic ( size :poss ( product-of :op1 num_0 :op2 num_0 ) ) ) ) )
and :op2 ( obligate-01 :polarity - :arg1 person :arg2 ( believe-01 :arg0 person :arg1 it :arg1-of ( cause-01 :arg0 ( and :op1 ( support-01 :arg0 person :arg1 ( morality :arg1-of deep-02 ) :arg1-of ( cause-01 :arg0 ( zjevovat :arg0 person :arg1 ( morality :arg1-of deep-02 ) ) ) ) :op2 ( exceed-01 :arg0 wisdom :arg1 ( limit-01 :arg1 human :quant all ) :extent far ) ) ) ) )
matter :mod routine :domain ( bring-01 :arg1 ( pots :source ( storage :mod summer ) ) :arg2 class :destination ( and :op1 class :op2 nafasovat ) ) :mod most
and :op1 ( contribute-01 :arg0 he :arg2 ( weather :mod storm ) ) :op2 ( contribute-01 :arg0 ( and :op1 location_name_0 :op2 organization_name_1 :op3 organization_name_1 :op4 city_name_2 :op5 country_name_4 ) :arg2 location_name_3 )
say-01 :arg0 ( person :arg0-of ( lead-02 :arg1 ( person :arg0-of lead-02 ) ) ) :arg1 ( refuse-01 :arg0 apollo :arg1 ( comment-01 :arg0 apollo :arg3 situation ) ) :arg1-of ( cause-01 :arg0 ( request-01 :arg0 ( person :arg0-of lead-02 ) :arg1 ( request-01 :arg0 person :arg1 ( thing :arg1-of say-01 ) :time ( date-entity decade_date-entity_0 ) ) ) )
go-02 :arg0 amr-unknown :arg4 car :arg1-of long-03
fun :domain it
say-01 :arg0 ( and :op1 ( person :arg0-of ( campaign-01 :arg1 ( right-05 :arg1 woman :arg2 woman ) ) ) :op2 ( person :arg0-of ( have-org-role-91 :arg1 organization_name_0 ) ) :op3 ( person :arg0-of ( have-org-role-91 :arg1 organization_name_1 ) ) :op4 ( person :arg0-of ( have-org-role-91 :arg1 organization :arg3 campaign-01 ) ) :op5 ( person :arg0-of ( have-org-role-91 :arg1 organization :arg3 campaign-01 ) ) :op6 ( person :arg0-of ( have-org-role-91 :arg1 organization :arg3 campaign-01 ) ) :op6 ( person :arg0-of ( have-org-role-91 :arg1 organization :arg3 campaign-01 ) ) :op6 ( person :arg0-of ( have-org-role-91 :arg1 organization :arg3 campaign-01 ) ) :op7 ( person :arg0-of ( have-org-role-91 :arg1 organization :arg3 campaign-01 ) ) ) :arg1 ( need-01 :arg0 ( need-01 :arg1 ( permit-01 :arg1 ( permit-01 :arg0 doctor :arg1 ( need-01 :polarity - :arg1 ( thing :arg1-of ( require-01 :arg1-of ( possible-01 :polarity - ) ) ) ) ) ) ) :arg1 ( permit-01 :mod this ) )
realize-01 :polite + :polite + :arg0 you :arg1 ( and :op1 ( aim-01 :arg0 organization_name_0 :arg1 ( liquidations :arg0 organization :arg1 ( state :poss country_name_1 ) ) ) :op2 ( thing :arg2-of price-01 :mod any ) )
contrast-01 :arg1 ( hurt-01 :arg1 objective ) :arg2 ( need-01 :arg1 ( work-09 :arg1 it :mod really ) )
and :op1 ( aid-01 :arg0 he :arg2 country-region_name_0 :mod real :mod real ) :op2 ( area :arg0 he :arg1 ( area :poss she ) :purpose ( and :op1 ( deprive :arg0 he :arg1 she ) :op2 ( disarm-01 :arg0 he :arg1 she ) ) )
know-03 :arg0 he :arg1 ( little :degree very )
multi-sentence :snt1 ( look-01 :polarity - :arg0 amr-unknown :direction forward ) :snt2 ( say-01 :arg0 he :arg1 ( be-located-at-91 :arg1 he :arg2 ( in-front-of :op1 press ) ) )
promise-01 :arg0 ( person_name_0 :arg0-of ( prevent-01 :arg1 corrupt-01 ) ) :arg1 ( prevent-01 :arg0 person :arg1 corrupt-01 :location ( government-organization :arg0-of govern-01 ) ) :time ( after :op1 ( multiple :op1 num_0 ) )
contrast-01 :arg1 ( fast :domain we ) :arg2 ( go-02 :polarity - :arg0 i :arg4 vint )
write-01 :mode imperative :arg0 you :arg1 ( discuss-01 :arg0 we :arg2 we ) :condition ( and :op1 ( like-01 :arg0 you :arg1 route ) :op2 ( thing :arg1-of ( say-01 :arg0 you :prep-on ( situation :location finish-01 ) ) ) )
contrast-01 :arg2 ( fear-01 :arg0 scientist :arg1 ( possible-01 :arg1 ( open-01 :arg1 ( tube :mod lava ) :arg1-of ( cause-01 :arg0 ( be-located-at-91 :arg1 ( ice :location ( on :op1 ice ) ) ) ) ) ) )
clear-06 :arg1 ( link-01 :mod this )
multi-sentence :snt1 ( it :arg1-of ( get-01 :arg0 you :duration ( several :op1 ( temporal-quantity temporal-quantity_num_0 :unit month ) ) ) :arg1-of ( get-01 :arg0 you :duration ( several :op1 ( temporal-quantity temporal-quantity_num_1 :unit month ) ) ) ) :snt2 ( confident-01 :arg1 ( person :mod country_name_0 ) :mod even )
and :op1 ( fly-01 :arg1 person_name_0 :destination city_name_1 :time then ) :op2 ( and :op1 ( declare-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg2 ( minister :mod prime ) ) ) :arg2 ( person :arg0-of ( have-rel-role-91 :arg1 person :arg2 wife ) ) ) :op2 ( and :op1 ( declare-01 :arg0 ( person :arg0-of ( have-rel-role-91 :arg1 person :arg2 child ) ) :arg2 ( person :arg0-of ( have-rel-role-91 :arg1 person :arg2 child ) ) ) :op2 ( person :arg0-of ( have-rel-role-91 :arg1 person :arg2 child ) ) :op3 ( person :arg0-of ( have-rel-role-91 :arg1 person :arg2 child ) ) ) )
possible-01 :arg1 ( continue-01 :arg0 scientist :arg1 ( work-01 :arg0 scientist ) )
contrast-01 :arg1 ( and :op1 ( accept-01 :arg1 ( thing :quant num_0 ) :manner frank ) :op2 ( reject-01 :arg0 ( hand :arg1-of simple-02 ) :arg1 other ) ) :arg2 ( reject-01 :arg0 ( hand :part-of hand ) :arg1 other :condition ( or :op1 ( accept-01 :arg1 fact ) :op2 ( reject-01 :arg1 vote-01 ) ) )
and :op1 ( work-01 :arg0 she :duration ( string :op1 ( temporal-quantity temporal-quantity_num_0 :unit year ) ) ) :op2 ( be-located-at-91 :arg1 ( store :quant num_1 :arg1-of ( include-91 :arg2 ( store :quant num_1 :location ( section :arg1-of ( include-91 :arg2 place ) ) ) ) ) :arg2 ( store :name ( name :op1 flagship ) :location ( section :location location_name_0 ) ) )
thing :arg1-of question-01 :arg1-of question-01 :arg1-of ( cause-01 :arg0 ( fact :arg1-of obvious-01 :domain ( see-01 :arg0 we :arg1 ( dimensions :quant num_0 :mod space ) ) ) ) :time once
know-01 :polarity - :arg0 i :mod of-course :mod of-course
speculate-01 :arg0 organization_name_0 :arg1 interest-01 :mod also
delay-01 :arg0 ( delay-01 :arg1 aircraft ) :arg1 ( fly-01 :arg1 ( fly-01 :source ( and :op1 city_name_0 :op2 ( company_name_1 :mod company ) ) :source city_name_2 ) ) :time subsequent
multi-sentence :snt1 ( force-01 :arg1 ( person :mod this ) :arg2 country_name_0 ) :snt2 ( and :op1 ( choose-01 :arg0 ( society :mod civil ) :arg1 ( and :op1 ( society :mod civil ) :op2 ( financier :mod londÃ½nskÃ½mi ) ) :time ( date-entity decade_date-entity_0 ) ) :op2 ( fall-01 :arg1 grimasou :arg4 trapped ) )
say-01 :arg0 person_name_0 :arg1 ( achieve-01 :arg0 ( allusion :arg0 person_name_1 :arg1 ( sovereignty :mod state ) ) :arg1 ( and :op1 ( achieve-01 :arg0 ( person :arg0-of ( lead-02 :arg1 city :time already ) ) :arg1 ( person :arg0-of ( lead-02 :arg1 city_name_2 ) ) :time already :duration ( several :op1 ( temporal-quantity temporal-quantity_num_0 :unit month ) ) ) :op2 ( concern-01 :arg0 ( area :mod russian-speaking ) :arg1 ( area :location-of ( threaten-01 :arg1 ( and :op1 culture :op2 ( right :mod linguistic ) ) ) ) ) ) )
multi-sentence :snt1 ( let-01 :arg0 ( person_name_0 :arg1-of ( include-91 :arg2 ( person :mod opava ) :arg3 much ) ) :arg1 ( except-01 :arg1 ( raid-01 :mod mikul?v ) :arg2 ( raid-01 :quant num_0 ) ) ) :snt2 ( contrast-01 :arg2 ( cover-01 :arg1 ( person_name_1 :mod goalie ) ) )
and :op1 ( get-05 :arg1 ( person :quant num_0 ) :arg2 ( control-01 :arg0 person ) ) :op2 ( set :arg0 person :arg1 ( zatÃ¡?ky :mod other ) ) :op3 ( cause-01 :arg1 ( send-01 :arg1 ( car :mod both ) :arg2 reimbursement ) )
look-02 :arg0 ( hose :location location_name_0 ) :arg1 ( line :arg1-of thin-03 :arg1-of thin-03 ) :mod still
and :op1 ( say-01 :arg0 ( man :arg1-of ( name-01 :arg2 person_name_0 ) ) :arg1 ( enter-01 :arg0 man :arg1 ( building :mod school :mod primary ) ) ) :op2 ( attack-01 :arg0 man :arg1 ( person :quant ( around :op1 num_0 ) :arg1-of local-02 ) ) :time ( morning :mod organization_name_1 )
operate-01 :arg0 ( magazine_name_0 :mod cruise :location location_name_0 ) :arg1 ( ship :mod cruise :location ( and :op1 ( talk-02 :arg2 ( and :op1 ( person :location continent_name_1 ) :op2 ( person :arg0-of ( have-org-role-91 :arg2 head-of-state ) ) :op3 ( person :arg0-of ( have-org-role-91 :arg2 head-of-state ) ) :op4 ( person :arg0-of ( have-org-role-91 :arg2 head-of-state ) ) :op5 et-cetera ) ) ) )
say-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg1 federal :arg3 judge-01 ) :arg0-of ( have-org-role-91 :arg1 federal :arg3 judge-01 ) ) :arg1 ( block-01 :arg0 lawyer :arg1 ( law :location location_name_0 ) :duration temporary :arg1-of ( say-01 :arg0 lawyer ) :arg1-of ( say-01 :arg0 lawyer ) :arg1-of ( say-01 :arg0 lawyer ) :arg1-of ( say-01 :arg0 lawyer :mod probable :location state ) )
multi-sentence :snt1 ( continue-01 :arg0 person_name_0 ) :snt2 ( instead-of-91 :arg2 ( withdraw-01 :arg1 person ) )
differ-02 :arg1 it :mod such :arg1-of ( cause-01 :arg0 amr-unknown )
have-rel-role-91 :arg0 ( person :mod country_name_0 ) :arg1 country_name_1 :arg2 ( friend :mod good ) :time still :arg1-of ( cause-01 :arg0 ( marry-01 :arg1 person :arg2 ( temporal-quantity temporal-quantity_num_0 :unit year ) ) )
and :op1 ( go-02 :arg0 ( and :op1 ( person_name_0 :arg0-of ( have-rel-role-91 :arg1 i :arg2 ( brother :mod ( old :degree more ) ) ) ) :op2 ( person :arg0-of ( have-rel-role-91 :arg1 i :arg2 ( brother :mod old ) ) ) ) :arg4 ( under :op1 ( person :arg0-of ( have-rel-role-91 :arg1 i :arg2 child ) ) ) :time already ) :op2 ( discuss-01 :arg0 and :arg1 ( matter :example ( or :op1 ( beer :consist-of beer ) :op2 ( woe :poss ( pass-01 :location cricket ) ) ) ) )
say-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg2 commissioner ) ) :arg1 ( find-01 :polarity - :arg0 we :arg1 ( money :mod any ) :beneficiary he ) :arg1-of ( say-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg2 commissioner ) ) )
and :op1 ( begin-01 :arg0 company_name_0 :arg1 ( meet-03 :arg0 company :arg1 ( sisters :source ( person_name_1 :mod charity ) ) ) ) :op2 ( tell-01 :arg0 ( person :quant num_0 ) :arg1 ( contact-01 :arg0 person :arg1 lawyer ) :arg2 person )
buy-01 :arg0 ( company :arg0-of win-01 ) :arg1 ( rate-entity-91 :arg1 num_0 :arg2 ( temporal-quantity temporal-quantity_num_0 :unit year ) ) :time then
represent-01 :arg0 ( and :op1 company :op2 location_name_0 ) :arg1 ( estate :mod real :arg1-of ( include-91 :arg2 ( thing :arg1-of ( tax-01 :arg3 ( and :op1 state :op2 ( tax-01 :arg1-of local-02 ) ) ) :quant ( almost :op1 1/2 ) ) ) )
passes :domain ( passes :mod ( day :arg1-of single-02 ) ) :location tragedy
block-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg3 judge-01 ) ) :arg1 ( law :arg0-of ( close-01 :arg1 ( kliniks :quant all :location location_name_0 ) :arg1-of possible-01 ) ) :duration temporary
think-01 :polarity - :arg0 i :arg1 ( differ-02 :mod such ) :arg1-of ( instead-of-91 :arg2 ( depend-01 :arg0 it :arg1 we :manner amr-unknown :prep-with it ) )
and :op1 ( have-03 :arg0 ( universe :quant num_0 :arg1-of ( include-91 :arg2 ( -lrb- :name ( name :op1 spatial :op2 dimensions :op3 dimensions :op4 dimensions :op5 dimensions :op6 dimensions :op7 dimensions ) ) ) ) :arg1 ( -rrb- :quant num_0 :mod only ) ) :op2 ( while :arg0 universe :arg1 ( dimension :quant large :mod only ) )
passes :location world-region_name_0 :domain ( passes :location world-region_name_0 ) :manner differ-02
important :domain this :time ( shoot :arg0 you :arg1 ( camera :mod email ) ) :mod especially :arg1-of ( mean-01 :arg2 ( have-03 :arg0 you :arg1 ( lens :arg1-of strong-02 :arg1-of ( mean-01 :arg2 ( have-03 :arg0 you :arg1 ( thing :arg2-of ( tattoo-01 :arg1 ( frame :part-of photo ) ) ) :condition ( want-01 :arg0 you :arg1 ( fill :arg0 you :arg1 ( frame :mod photo ) ) :condition ( want-01 :arg0 you :arg1 ( fill :arg0 you :arg1 ( frame :mod photo ) ) ) ) ) ) ) ) )
continue-01 :arg0 try-02 :arg1 ( court :mod hradeckÃ©ho ) :arg3 ( court :mod hradeckÃ©ho ) :location ( tuesday :arg1 ( person :arg1-of ( expert-01 :arg2 judiciary ) ) )
have-concession-91 :arg1 ( difficult :domain ( find-01 :arg1 ( job :mod new ) ) :arg1-of increase-01 :arg1-of ( cause-01 :arg0 ( possible-01 :polarity - :arg1 ( receive-01 :arg0 ( absence :mod neomluvenÃ¡ ) :arg1 ( consequence :arg1-of ( same-01 :arg2 ( possible-01 :polarity - :arg1 receive-01 ) ) ) ) ) ) ) :arg2 ( have-03 :polarity - :arg0 ( absence :mod neomluvenÃ¡ ) :arg1 ( consequence :arg1-of same-01 ) )
condemn-01 :arg1 ( image :mod humorous :poss ( person_name_0 :arg0-of ( have-org-role-91 :arg1 ( research-institute_name_1 :mod state ) :arg2 travis ) ) ) :arg2 ( drive-01 :arg0 person :location drunkenness ) :time ( date-entity month_date-entity_0 year_date-entity_0 )
cup
have-concession-91 :arg2 ( and :op1 ( concrete :domain it ) :op2 ( accept-01 :arg1 it :degree quite ) )
apply-02 :arg1 ( prohibit-01 :arg1 gambling ) :arg2 ( organization_name_0 :arg0-of exemplify-01 ) :time ( time :time current )
multi-sentence :snt1 ( return-01 :arg1 ( person :arg0-of ( have-rel-role-91 :arg1 ( child :mod israeli :arg1-of ( near-02 :arg2 country-region_name_0 ) ) :arg2 child ) ) :arg4 school :time ( after :op1 ( spend-02 :arg0 person :arg1 ( spend-02 :arg0 person :arg1 ( spend-02 :arg0 person :arg1 ( summer :location ( shelters :mod bomb ) ) :arg2 child ) ) ) ) :time ( after :op1 ( spend-02 :arg0 person :arg1 ( spend-02 :arg0 person :arg1 ( spend-02 :arg0 person :arg1 ( summer :location ( shelters :mod bomb ) ) ) ) ) ) ) :snt2 ( contrast-01 :arg2 ( remain-01 :arg1 ( territory :arg1-of ( remain-01 :arg3 close-01 ) ) :arg3 close-01 :mod still ) )
depend-01 :arg0 it :time now
precipitated :arg0 it :arg1 ( and :op1 ( effort :mod civilian :mod huge ) :op2 ( effort :mod military :purpose ( fortified :arg1 ( person :quant ( about :op1 num_0 ) :arg1-of ( lie-07 :arg2 ( between :op1 ( person :arg0-of inhabit-01 ) :op2 ( person :arg0-of ( have-org-role-91 :arg2 head-of-state ) ) ) :arg1-of ( lie-07 :arg2 ( between :op1 location_name_0 ) ) ) ) ) ) )
multi-sentence :snt1 ( have-03 :arg0 we :arg1 ( person :arg0-of ( have-rel-role-91 :arg1 we :arg2 sister ) ) :time then ) :snt2 ( contrast-01 :arg1 ( possible-01 :arg1 ( stop-01 :arg0 you :arg1 laughing ) ) :arg2 ( have-03 :arg0 i :arg1 laughing :arg1-of quick-02 ) )
and :op1 ( erased :arg1 thing :time ( late :degree more ) ) :op2 ( publish-01 :arg0 ( person :quant num_0 :mod another :arg0-of ( distanced :arg1 person :arg2 person :time previous ) ) :arg1 person )
think-01 :arg0 i :arg1 ( something :mod just :prep-in ( report-01 :arg1 ( or :op1 nudÃ­ :op2 ( do-02 :arg1 ( something :mod else ) ) ) ) )
say-01 :arg0 ( person_name_0 :arg0-of ( have-org-role-91 :arg1 organization_name_1 :arg2 ( person :arg0-of ( manage-01 :arg1 research-01 ) ) ) ) :arg1 ( likely-01 :arg1 ( die-01 :arg1 ( woman :location ( and :op1 ( area :location rural ) :op2 ( area :mod remote :part-of state ) ) ) :degree ( more :quant ( about :op1 ( percentage-entity percentage-entity_num_0 ) ) ) :time ( study-01 :arg0 woman :location ( area :mod urban ) ) ) )
find-02 :arg0 we :arg1 ( amaze-01 :arg0 ( person :mod young :arg0-of ( examine-01 :arg1 misfortune ) ) :arg1 ( person :mod young :arg0-of ( examine-01 :arg1 misfortune ) ) :concession ( continue-01 :arg0 terrorist :arg1 ( live-01 :arg0 terrorist ) ) )
walk-01 :arg0 it :destination ( church :mod ( ji?Ã­ :mod well ) ) :mod short
multi-sentence :snt1 ( come-01 :arg1 you :mod still :mod still ) :snt2 ( or :op1 ( manage-01 :arg0 you :arg1 it ) :op2 ( enjoy-01 :arg0 i :arg1 ( run-01 :arg0 we :arg1 location_name_0 ) ) )
and :op1 ( suffer-01 :polarity - :arg0 person :mod really ) :op2 ( need-01 :arg0 person :arg1 help-01 :time now ) :arg1-of ( say-01 :arg0 he ) :time ( year :mod last :time-of ( read-01 :arg0 he :arg1 ( law :arg1-of ( relate-01 :arg2 mesothelioma ) ) :ord ( ordinal-entity ordinal-entity_num_0 ) ) )
understand-01 :arg1 ( contribute-01 :arg0 ( weather :mod stormy ) :arg2 ( delay-01 :arg1 ( organization_name_0 :source city_name_1 ) ) )
ask-02 :arg0 ( person_name_0 :arg0-of ( have-org-role-91 :arg2 commander ) ) :arg1 ( and :op1 ( complete-01 :arg0 person :arg1 equipment ) :op2 ( send-01 :arg0 person :arg1 equipment :arg2 front ) ) :arg2 ( person :arg0-of ( have-org-role-91 :arg2 commander ) ) :manner constant
become-01 :arg1 ( refuse-01 :arg0 person_name_0 :arg1 ( discuss-01 :arg0 person :arg1 ( depend-01 :polarity - :arg0 ( and :op1 ( person :arg0-of ( have-org-role-91 :arg2 ( minister :mod prime ) ) ) :op2 ( person :arg0-of ( have-org-role-91 :arg2 ( minister :mod prime ) ) ) ) ) ) :purpose ( mistake :mod serious ) )
offend-01 :polarity - :arg0 it :arg1 i
say-01 :arg1 ( obligate-01 :polarity - :arg1 i :arg2 ( answer-01 :arg0 i :arg1 it ) ) :arg2 person_name_0
say-01 :arg0 person_name_0 :arg1 ( have-03 :arg0 service :arg1 ( page :mod security :poss service ) ) :mod also
climax :domain this :mod ( type :mod ( type :mod type ) ) :location country_name_0
much :degree too :domain ( talk-01 :arg0 you :arg1 ( think-01 :arg0 they :arg1 ( think-01 :arg0 they :arg1 ( think-01 :arg0 they :arg1 ( and :op1 ( '' :mod ( anger-01 :arg0 ( anger-01 :arg0 ( anger-01 :arg0 ( anger-01 :arg0 ( anger-01 :arg0 ( anger-01 :arg0 ( anger-01 :arg0 ( anger-01 :arg0 ( anger-01 :arg0 ( and :op1 ( anger-01 :arg0 ( anger-01 :arg0 ( anger-01 :arg0 ( anger-01 :arg0 ( anger-01 :arg0 ( anger-01 :arg0 ( anger-01 :arg0 ( anger-01 :arg0 ( anger-01 :arg0 ( anger-01 :arg0 ( anger-01 :arg0 ( anger-01 :arg0 ( anger-01 :arg0 ( anger-01 :arg0 ( anger-01 :arg0 ( anger-01 :arg0 ( anger-01 :arg0 ( anger-01 :arg0 ( anger-01 :arg0 ( anger-01 :arg0 ( anger-01 :arg0 ( anger-01 :arg0 ( anger-01 :arg0 ( anger-01 :arg0 ( anger-01 :arg0 ( anger-01 :arg0 ( anger-01 :arg0 ( anger-01 :arg0 ( anger-01 :arg0 ( anger-01 :arg0 ( anger-01 :arg0 ( anger-01 :arg0 ( anger-01 :arg0 ( anger-01 :arg0 ( anger-01 :arg0 ( anger-01 :arg0 ( anger-01 :arg0 ( anger-01 :arg0 ( anger-01 :arg0 ( anger-01 :arg0 ( anger-01 :arg0 ( anger-01 :arg0 ( anger-01 :arg0 ( anger-01 :arg0 ( anger-01 :arg0 ( anger-01 :arg0 ( anger-01 :arg0 ( anger-01 :arg0 ( anger-01 :arg0 ( anger-01 :arg0 ( anger-01 :arg0 ( anger-01 :arg0 ( anger-01 :arg0 ( anger-01 :arg0 ( anger-01 :arg0 ( anger-01 :arg0 ( anger-01 :arg0 ( anger-01 :arg0 ( anger-01 :arg0 ( anger-01 :arg0 ( anger-01 :arg0 ( anger-01 :arg0 ( anger-01 :arg0 ( anger-01 :arg0 ( anger-01 :arg0 ( anger-01 :arg0 ( anger-01 :arg0 ( anger-01 :arg0 ( anger-01 :arg0 ( anger-01 :arg0 ( anger-01 :arg0 ( anger-01 :arg0 ( anger-01 :arg0 ( anger-01 :arg0 ( anger-01 :arg0 ( anger-01 :arg0 ( anger-01 :arg0 ( anger-01 :arg0 ( anger-01 :arg0 ( anger-01 :arg0 ( anger-01 :arg0 ( anger-01 :arg0 ( anger-01 :arg0 ( anger-01 :arg0 ( anger-01 :arg0 ( anger-01 :arg0 ( anger-01 :arg0 ( anger-01 :arg0 ( anger-01 :arg0 ( anger-01 :arg0 ( anger-01 :arg0 ( anger-01 :arg0 ( anger-01 :arg0 ( anger-01 :arg0 ( anger-01 :arg0 ( anger-01 :arg0 ( anger-01 :arg0 ( anger-01 :arg0 ( anger-01 :arg0 ( anger-01 :arg0 ( anger-01 :arg0 ( anger-01 :arg0 ( anger-01 :arg0 ( anger-01 :arg0 ( anger-01 :arg0 ( anger-01 :arg0 ( anger-01 :arg0 ( anger-01 :arg0 ( anger-01 :arg0 ( anger-01 :arg0 ( anger-01 :arg0 ( anger-01 :arg0 ( anger-01 :arg0 ( anger-01 :arg0 ( anger-01 :arg0 ( anger-01 :arg0 ( anger-01 :arg0 ( anger-01 :arg0 ( anger-01 :arg0 ( anger-01 :arg0 ( anger-01 :arg0 ( anger-01 :arg0 ( anger-01 :arg0 ( anger-01 :arg0 ( anger-01 :arg0 ( anger-01 :arg0 ( anger-01 :arg0 ( anger-01 :arg0 ( anger-01 :arg0 ( anger-01 :arg0 ( anger-01 :arg0 ( anger-01 :arg0 ( anger-01 :arg0 ( anger-01 :arg0 ( anger-01 :arg0 ( anger-01 :arg0 ( anger-01 :arg0 ( anger-01 :arg0 ( anger-01 :arg0 ( anger-01 :arg0 ( anger-01 :arg0 ( anger-01 :arg0 ( anger-01 :arg0 ( anger-01 :arg0 ( anger-01 :arg0 ( anger-01 :arg0 ( anger-01 :arg0 ( anger-01 :arg0 (
play-11 :arg0 it :arg2 ( country_name_0 :mod great ) :time then
have-03 :polarity - :arg0 i :arg1 ( idea :topic ( gain-02 :arg0 ( place :mod narrowest ) :arg1 ( importance :poss concept :mod true ) :time ( late :degree more ) ) )
concern-02 :arg0 this :arg1 ( concern-01 :arg0 ( conflict-01 :arg0 ( and :op1 country_name_0 :op2 organization_name_1 ) :arg1 ( zone :mod zone ) :mod especially ) )
reggae :arg0 ( je :name ( name :op1 soundtrack :op2 je ) ) :arg1 ( optimistic :name ( name :op1 je :op2 je :op3 je ) )
break-up-08 :arg1 ( produce-01 :arg1 world ) :arg3 ( rate-entity-91 :arg1 num_0 :arg2 ( temporal-quantity temporal-quantity_num_0 :unit year ) )
and :op1 ( want-01 :arg0 market :arg1 ( plan-01 :arg0 bank :arg1 bank :arg1-of clear-06 ) :arg1-of ( cause-01 :arg0 ( threaten-01 :arg0 bank :arg1 ( deflation :mod eurozone ) :arg2 ( product-of :op1 num_0 :op2 ( percentage-entity percentage-entity_num_0 ) ) ) ) )
thing :mod one :domain ( watch-01 :arg1 ( and :op1 ( person :arg0-of ( have-rel-role-91 :arg1 he :arg2 friend ) ) :op2 ( person :arg0-of ( have-rel-role-91 :arg1 he :arg2 friend ) ) :op3 ( person :arg0-of ( have-rel-role-91 :arg1 he :arg2 friend ) ) :op4 ( person :arg0-of ( have-rel-role-91 :arg1 he :arg2 friend ) ) :op5 ( thing :mod other ) ) ) :arg1-of ( cause-01 :arg0 ( and :op1 ( play-02 :arg0 ( person :arg0-of reside-01 :mod evil :arg0-of reside-01 ) :arg1 ( someone :mod else ) ) :op2 ( thing :mod other :domain ( get-01 :arg0 ( someone :mod else ) :arg1 ( hits :mod twenty ) :manner ( call-02 :arg1 duty ) ) ) ) )
multi-sentence :snt1 ( cause-01 :arg0 ( age :poss they ) :arg1-of ( cause-01 :arg0 ( age :poss they ) ) ) :snt2 ( person :arg1-of black-05 :domain ( person :arg0-of sing-01 :time ( date-entity decade_date-entity_0 ) ) )
multi-sentence :snt1 ( have-03 :arg0 ( person :arg0-of ( lucidity :arg1 ( person_name_0 :arg1-of ( oscar-winning :arg0 person_name_1 ) ) ) :arg0-of ( have-org-role-91 :arg2 oscar-winning ) ) :arg1 ( person :arg0-of ( have-org-role-91 :arg2 oscar-winning ) :arg0-of ( have-org-role-91 :arg2 oscar-winning ) ) ) :snt2 ( have-03 :arg0 ( person_name_2 :arg1-of ( close-10 :arg2 person ) ) :arg1 ( and :op1 ( end-01 :arg1 ( glory :poss glory ) ) :op2 ( live-01 :arg0 person :arg1-of personal-02 ) ) )
multi-sentence :snt1 ( contrast-01 :arg1 ( tire-01 :arg1 he ) :arg2 ( weak-02 :arg1 he :mod also :arg1-of ( cause-01 :arg0 ( strong-02 :polarity - :arg1 it :time ever ) :mod also ) ) ) :snt2 ( complains :arg1 everything :manner constant :mod just )
and :op1 ( inside :arg1 ( and :op1 ( floors :mod cold ) :op2 ( damp :mod cold ) ) :location ( inside :op1 ( and :op1 ( floors :mod cold ) :op2 ( floors :mod cold ) ) ) :location ( inside :op1 ( value-interval :op1 num_0 :op2 floors ) ) ) :op2 ( smell :arg0 ( damp :mod cold ) :arg1 janitor :mod still :arg2-of ( fortunate-01 :polarity - ) ) :arg2-of ( fortunate-01 :polarity - ) :arg1-of ( cause-01 :arg0 ( possible-01 :arg1 ( and :op1 ( leave-15 :arg0 you :arg1 textbooks ) :op2 ( ( little :degree so :mod still ) ) ) ) )
infer-01 :arg1 ( recommend-01 :arg1 ( leave-11 :arg0 it ) )
and :op1 ( tip-05 :arg1 ( thing :manner-of ( cope-01 :arg1 ( situation :arg1-of change-01 ) ) ) ) :op2 ( enjoy-01 :mode imperative :arg0 you :arg1 ( sleep-01 :time ( night :mod good ) ) ) :arg2-of fortunate-01
and :op1 ( class :mode interrogative ) :op2 ( resemble-01 :arg2 class )
and :op2 ( be-temporally-at-91 :arg1 it :arg2 ( before :op1 now :quant ( few :op1 ( temporal-quantity temporal-quantity_num_0 :unit year ) ) :mod only ) )
have-03 :polarity - :arg0 i :arg1 ( someone :location ( place :poss you ) ) :purpose ( and :op1 ( apologize-01 :arg0 someone :arg1 that :time past ) :op2 ( understand-01 :arg0 someone :arg1 ( presence :purpose ( talk-01 :arg0 you :arg1 ( and :op1 ( '' :arg1 we ) :op2 ( '' :arg0 we :arg1 we ) :op3 ( '' :arg0 you :arg1 they ) ) ) ) ) )
contrast-01 :arg1 ( know-01 :arg0 i :arg1 ( want-01 :polarity - :arg0 you :arg1 ( remember-01 :arg0 you ) ) ) :arg2 ( and :op1 ( close-10 :arg1 he :arg2 gym :degree very ) :op2 ( go-02 :arg0 he :arg4 gym ) :op3 ( lit :arg1 he ) )
and :op2 ( anger-01 :arg0 ( good :domain ( person :mod that :arg0-of ( anger-01 :arg1 person_name_0 :degree ( pretty :mod too ) ) ) ) :arg1 ( and :op1 ( person :quant num_0 ) :op2 ( person :mod backside ) ) )
justify-01 :arg0 you :arg1 ( cooperate-01 :arg0 you :arg1 b?lo?ka )
precipitated :arg0 this :arg1 ( and :op1 ( effort :mod civilian :mod huge ) :op2 ( effort :mod military :purpose ( fortified :arg1 ( port :location location_name_0 ) ) ) ) :arg2 ( person :arg0-of inhabit-01 :quant ( about :op1 num_0 ) :arg1-of ( lie-07 :arg2 ( between :op1 sea_name_1 :op2 ( entrance :location country-region_name_2 ) ) ) )
be-located-at-91 :arg1 ( event :location ( place :mod other ) ) :arg2 ( watch-01 :arg1 ( event :location world ) ) :time now
play-02 :arg0 ( role :mod amr-unknown ) :arg1 ( thing :arg1-of ( decide-01 :arg0 family ) )
and :op1 ( number :quant-of ( die-01 :arg1 ( person :arg1-of die-01 ) ) ) :op2 ( die-01 :arg1 ( number :quant-of ( person :arg1-of ( die-01 :time ( future :poss country_name_0 ) ) ) ) ) :time future
and :op1 ( obligate-01 :arg1 it :arg2 ( consistent-01 :arg1 it :arg2 ( party :quant all ) :manner particular ) ) :op2 ( depend-01 :arg0 it :arg1 ( position :poss location_name_0 ) :condition ( or :op1 ( deal-01 :arg2 club :mod any ) :op2 ( deal-01 :polarity - :arg2 club ) ) )
talk-01 :arg0 we :arg1 ( person :arg0-of ( think-01 :arg1 ( integer :domain ( and :op1 ( person :arg0-of ( have-org-role-91 :arg2 head-of-state ) ) :op2 ( person :arg0-of ( have-org-role-91 :arg2 head-of-state ) ) :op3 ( person :arg0-of ( have-org-role-91 :arg2 head-of-state ) ) :op4 ( person :arg0-of ( have-org-role-91 :arg2 head-of-state ) ) :op5 ( person :arg0-of ( have-org-role-91 :arg2 head-of-state ) ) ) ) ) )
and :op1 ( accuse-01 :arg0 person_name_0 :arg1 person :arg2 ( rape-01 :location hotel ) :location ( hotel :location person_name_1 ) ) :op2 ( pitlochry :arg0 person )
difficult :degree very :domain it
and :op1 ( rise-01 :arg1 ( thing :arg1-of tax-01 :arg1-of ( burden-01 :arg2 tax ) ) :arg2 ( rate-entity-91 :arg1 ( percentage-entity percentage-entity_num_0 ) :arg2 ( temporal-quantity temporal-quantity_num_2 :unit year ) ) :arg4 ( monetary-quantity monetary-quantity_num_1 :unit dollar :arg1-of ( compare-01 :arg2 ( product-of :op1 ( percentage-entity percentage-entity_num_3 ) :op2 ( temporal-quantity temporal-quantity_num_2 :unit year ) ) ) ) ) :op2 ( grow-01 :arg1 ( year :mod consecutive ) :arg3 ( temporal-quantity temporal-quantity_num_2 :unit year ) :time ( reduce-01 :arg1 tax-01 ) )
knocked :arg0 person_name_0 :location location_name_1 :arg1-of report-01
multi-sentence :snt1 ( amr-unknown
nourishing :arg1 ( fish :location beams :mod especially )
have-condition-91 :arg1 ( prepare-02 :arg2 ( more-than :op1 num_0 ) ) :arg2 ( like-01 :arg0 you )
possible-01 :arg1 ( person :mod just :arg0-of ( have-03 :arg1 ( foot :mod ( big :degree very ) ) ) )
contrast-01 :arg2 ( differ-02 :arg1 ( measure-02 :quant num_0 :mod this ) :arg1-of clear-06 )
look-01 :arg0 person_name_0 :arg1 ( person :arg0-of ( have-rel-role-91 :arg1 he :arg2 mother ) ) :manner desperate :arg1-of ( cause-01 :arg0 ( forty :arg1 person :time now ) )
think-01 :polarity - :arg0 i :arg1 ( want-01 :arg0 i :arg1 ( give-up-07 :arg0 i :arg1 thing ) :time ever ) :arg1-of ( cause-01 :arg0 ( sit-01 :arg1 ( thing :arg2-of ( tattoo-01 :arg1 ( sit-01 :arg2 ( room :arg1-of ( same-01 :arg2 ( room :mod same ) ) ) :arg2 director ) ) ) :arg2 director ) )
contrast-01 :arg2 ( compare-01 :arg1 ( product-of :op1 ( less-than :op1 num_0 ) :op2 ( m3 :quant num_1 :mod only ) ) :arg2 ( thing :arg1-of estimate-01 :mod original ) :compared-to ( estimate-01 :mod original ) )
take-10 :arg0 ( and :op1 ( match-03 :arg0 it ) :op2 ( realize-01 :arg0 it :arg1 ( thing :domain league ) ) ) :arg1 it
contrast-01 :arg1 ( point :mod ( of-course :mod of-course ) ) :arg2 ( belong-01 :arg0 i :arg1 ( need-01 :arg1 family ) :mod of-course ) :mod of-course
adapt-01 :arg1 ( person :arg0-of ( have-rel-role-91 :arg1 child :arg2 child ) ) :arg2 ( and :op1 ( person :arg0-of ( have-rel-role-91 :arg1 child :arg2 child ) ) :op2 ( person :arg0-of teach-01 ) :op3 ( person :arg0-of teach-01 ) :op4 ( person :arg0-of teach-01 ) :op5 ( person :arg0-of teach-01 ) ) :time ( day :ord ( ordinal-entity ordinal-entity_num_0 ) :part-of school ) :mod tradition
contrast-01 :arg1 ( try-01 :arg0 i :arg1 ( pusu :arg0 i ) ) :arg2 ( realize-01 :arg0 i :arg1 ( event :mod something ) )
have-03 :arg0 ( person :arg0-of ( have-rel-role-91 :arg1 person_name_0 :arg2 mother ) ) :arg1 cold
contrast-01 :arg2 ( and :op1 ( have-03 :arg0 we :arg1 match-03 ) :op2 ( filmed :arg1 it ) :op3 ( disassemble :arg1 it ) )
say-01 :arg0 person_name_0 :arg1 ( say-01 :arg0 person :arg1 ( harmful-02 :arg0 ( person :arg0-of ( harmful-02 :arg1 asbestos ) :quant ( multiple :op1 num_0 ) ) ) )
last-01 :arg1 ( year :mod longest ) :arg2 ( temporal-quantity temporal-quantity_num_0 :unit month )
contrast-01 :arg2 ( possible-01 :arg1 ( tell-01 :arg0 person :arg1 story :arg2 person ) )
limit-01 :arg0 we
and :op1 ( consider-01 :arg0 separatist :arg1 ( man :mod this :prep-as ( mercenary :mod lease ) ) ) :op2 ( say-01 :arg0 separatist :arg1 nothing )
concern-01 :mod this :topic ( conflict-01 :arg0 ( and :op1 country_name_0 :op2 organization_name_1 ) :location country-region_name_2 ) :mod particular
find-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg1 company_name_0 :arg2 boss ) ) :arg1 ( time :arg1-of hard-04 ) :arg1-of possible-01
and :op1 ( have-03 :arg0 ( person :arg0-of research-01 ) :arg1 ( record :mod medicine :mod ( more-than :op1 ( between :op1 ( temporal-quantity temporal-quantity_num_0 :unit year ) :op2 ( temporal-quantity temporal-quantity_num_1 :unit year ) ) ) ) ) :op2 ( find-01 :arg0 person :arg1 ( temporal-quantity temporal-quantity_num_2 :unit year :mod only :time ( after :op1 ( live-01 :arg0 person ) ) ) )
increase-01 :arg0 ( profit :mod ultra ) :arg1 ( rate-entity-91 :arg1 ( percentage-entity percentage-entity_num_0 ) :arg2 ( volume-quantity volume-quantity_num_1 :unit gallon ) ) :arg4 ( monetary-quantity monetary-quantity_num_1 :unit ( yuan :mod renminbi ) ) :arg4 ( monetary-quantity monetary-quantity_num_1 :unit ( yuan :mod renminbi ) )
day :location city_name_0
and :op1 ( topic :mod main :domain it ) :op2 ( upset-01 :arg1 everyone )
and :op1 ( return-01 :arg1 ( honza :mod next ) :arg4 pentatonice ) :op2 ( try-01 :arg0 you :arg1 ( put-01 :arg0 you :arg1 it :arg2 together :accompanier ( state :arg0-of ( have-org-role-91 :arg2 member ) ) ) )
obligate-01 :arg1 we :arg2 ( examine-01 :arg0 we :arg1 ( hose :arg1 ( resolution :mod ( good :degree more ) :arg1-of significant-02 ) ) ) :purpose ( realize-02 :arg0 we :arg1 ( exist-01 :arg1 ( dimension :mod circular ) ) )
song :mod ( silly :mod just ) :domain it
difficult :domain ( snacking :arg1 she )
have-03 :polarity - :arg0 we :arg1 ( bias :mod this ) :location workplace
multi-sentence :snt1 ( skru :quant num_0 :mod just :domain she ) :snt2 ( and :op1 ( svÃ©rÃ¡znÃ½ :arg1 ( person :quant num_0 ) ) :op2 ( say-01 :arg0 i :arg1 ( be-located-at-91 :arg1 all :arg2 cottage ) ) )
and :op1 ( consider-01 :arg0 ( and :op1 ( person :arg0-of ( have-org-role-91 :arg1 organization_name_0 :arg2 ( member :mod vice ) ) ) :op2 ( person :arg0-of ( have-org-role-91 :arg1 organization :arg3 quran ) ) :op3 ( person :arg0-of ( have-org-role-91 :arg1 organization :arg3 quran ) ) :op4 ( person :arg0-of ( have-org-role-91 :arg1 organization :arg3 quran ) ) :op5 ( person :arg0-of ( have-org-role-91 :arg1 organization :arg3 quran ) ) :op6 ( person :arg0-of ( have-org-role-91 :arg1 organization :arg3 quran ) ) :op6 ( person :arg0-of ( have-org-role-91 :arg1 organization :arg3 quran ) ) :op6 ( person :arg0-of ( have-org-role-91 :arg1 organization :arg3 quran ) ) :op6 ( person :arg0-of ( have-org-role-91 :arg1 organization :arg3 quran ) ) :op6 ( person :arg0-of ( have-org-role-91 :arg1 organization :arg3 quran ) ) :op6 ( person :arg0-of ( have-org-role-91 :arg1 organization :arg3 quran ) ) :op6 ( person :arg0-of ( have-org-role-91 :arg1 organization :arg3 quran ) ) :op6 ( person :arg0-of ( have-org-role-91 :arg1 organization :arg3 quran ) ) :op6 ( person :arg0-of ( have-org-role-91 :arg1 organization :arg3 quran ) ) :op6 ( person :arg0-of ( have-org-role-91 :arg1 organization :arg3 quran ) ) :op6 ( person :arg0-of ( have-org-role-91 :arg1 organization :arg3 bhagavad-gita ) ) :op6 ( person :arg0-of ( have-org-role-91 :arg1 organization :arg3 bhagavad-gita ) ) :op6 ( person :arg0-of ( have-org-role-91 :arg1 organization :arg3 bhagavad-gita ) ) :op6 ( person :arg0-of ( have-org-role-91 :arg1 organization :arg3 bhagavad-gita ) ) :op6 ( person :arg0-of ( have-org-role-91 :arg1 organization :arg3 ( lead-02 :arg0 person ) ) ) :op6 ( person :arg0-of ( have-org-role-91 :arg1 organization :arg3 ( lead-02 :arg0 person ) ) ) :op6 ( person :arg0-of ( have-org-role-91 :arg1 organization :arg3 ( lead-02 :arg0 person ) ) ) :op6 ( person :arg0-of ( have-org-role-91 :arg1 ( each :arg1-of ( include-91 :arg2 person ) ) :arg3 each ) ) ) ) :arg1 ( person :mod other )
multi-sentence :snt1 ( amr-unknown
contrast-01 :arg1 ( be-located-at-91 :arg1 person_name_0 :arg2 coma :duration ( temporal-quantity temporal-quantity_num_0 :unit day ) :time ( bring-01 :arg1 person :arg2 hospital :location peninsula_name_1 ) ) :arg2 ( express-01 :arg0 ( person :arg0-of ( have-rel-role-91 :arg1 person :arg2 daughter ) ) :arg1 ( hopeful-03 :polarity - :arg0 person :arg1 ( consistent :domain ( comedian :mod jednaosmdesÃ¡tiletÃ¡ ) ) ) :time now )
illustration
cause-01 :arg0 ( fact :domain ( car :arg1-of ( busied :arg0 we :arg2 we :duration ( more-than :op1 ( temporal-quantity :quant 1/2 :unit year ) ) ) ) ) :arg1 ( cause-01 :arg0 car :arg1 ( be-located-at-91 :arg1 we :arg2 ( under :op1 ( level :quant some ) ) ) )
and :op1 ( watch-01 :arg0 person_name_0 :arg1 situation :time weekend ) :op2 ( speak-01 :arg0 person :arg2 ( person :arg0-of protest-01 :arg0-of ( travel-01 :arg4 country_name_1 ) ) )
create-01 :arg0 law :arg1 ( envelopes :quant num_0 :mod finance :arg1-of ( cover-01 :arg0 ( company :arg0-of insure-02 ) :arg1-of intend-01 :time ( after :op1 ( date-entity year_date-entity_0 month_date-entity_0 ) ) ) :arg0-of ( prove-01 :arg1 ( subject-01 :arg1 ( anyone :arg0-of ( prove-01 :arg1 ( subject-01 :arg1 person :arg2 asbestos ) ) ) :arg2 court ) ) )
include-91 :arg1 ( percentage-entity percentage-entity_num_0 :arg3-of ( include-91 :arg2 ( person :arg0-of ( undergo-28 :arg1 person :arg2 ( die-01 :arg1 person ) ) ) ) ) :arg2 ( die-01 :arg1 person ) :duration ( up-to :op1 ( temporal-quantity temporal-quantity_num_0 :unit month ) )
want-01 :arg0 i :arg1 ( fulfill-01 :arg0 i :arg1 ( memory :poss ( person :arg0-of ( have-rel-role-91 :arg2 friend ) ) ) )
know-01 :arg0 he :arg1 ( expect-01 :arg1 ( he :mod all ) :mod only )
and :op2 ( contrast-01 :arg1 ( and :op1 ( lose-02 :arg0 i :arg1 head ) :op2 ( lose-02 :arg0 i :arg1 head ) :time ( after :op1 ( lose-02 :arg0 i :arg1 head ) ) ) :arg2 ( and :op1 ( lose-02 :arg0 i :arg1 head ) :op2 ( view-02 :arg0 i :arg2 ( route :mod ( interesting :degree more ) :arg1-of ( value-01 :arg2 ( temporal-quantity temporal-quantity_num_0 :unit year ) ) ) :manner goal ) ) )
and :op2 ( cause-01 :arg1 ( push-01 :polarity - :arg0 you :arg1 depart-01 :arg2 you ) )
multi-sentence :snt1 ( contrast-01 :arg1 ( have-03 :arg0 we :arg1 ( fear-01 :arg0 we :quant bit ) ) :arg2 ( have-03 :mode interrogative :arg0 we :arg1 ( fear-01 :arg0 we ) ) ) :snt2 ( say-01 :mode interrogative :arg0 ( and :op1 person_name_0 :op2 ( person :mod country_name_1 :arg0-of ( teach-01 :location ( school :arg1-of local-02 ) ) ) ) :arg1 ( bartovÃ¡ :arg0 we ) )
let-01 :polarity - :arg0 ( boss :poss ( wo :mod small :mod football ) ) :arg1 ( and :op1 ( party :mod other ) :op2 move-01 )
multi-sentence :snt1 ( and :op1 ( aspect :mod nonperturbative ) :op2 ( aspect :ord ( ordinal-entity ordinal-entity_num_0 ) ) ) :snt2 ( -rrb- :mode expressive )
convince-01 :arg1 they :arg2 this
and :op1 ( seeped :arg1 ( seeped :arg1-of ( die-01 :arg1-of ( possible-01 :polarity - ) ) ) :location tubs ) :op2 ( think-01 :arg0 they :arg1 ( and :op1 ( overgrown :arg1 ( place :location-of ( own-01 :arg0 they :arg1 ( garden :polarity - ) ) ) ) :op2 ( resembled :arg0 they :arg1 ( hlÃ¡vka :mod huge :mod resembled ) :manner weed ) ) :condition ( sign-01 :arg1 ( oslizle :arg1-of ( sign-02 :arg0 they :arg2 windows ) ) ) )
want-01 :arg0 ( we :quant all ) :arg1 ( pull-out-02 :arg1 we )
multi-sentence :snt1 ( wait-01 :arg1 person :arg2 ( funeral :arg0 person :arg1 ( hand :part-of person ) :arg2 ( hand :part-of person ) :direction up ) ) :snt2 ( chanting :mode imperative :polarity - :arg0 you )
multi-sentence :snt1 ( say-01 :mode interrogative :arg0 you :arg1 new ) :snt2 ( say-01 :arg0 i :arg1 new :arg2 ( refer-01 :arg1 ( government-organization :arg0-of govern-01 :mod region ) ) :time subsequent )
multi-sentence :snt1 ( add-01 :arg0 we :arg1 that ) :snt2 ( agree-01 :arg0 we :arg1 this )
hold-04 :arg0 ( school :quant all ) :arg1 ( ceremony :mod traditional ) :time ( date-entity month_date-entity_0 day_date-entity_0 )
cause-01 :polarity - :arg0 ( capable-01 :arg1 ( person :arg0-of ( have-org-role-91 :arg1 political-party_name_0 ) ) :arg2 ( capable-01 :polarity - :arg1 person ) ) :arg1 ( lack-01 :arg1 ( equipment :mod material ) )
say-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg1 ( government-organization_name_0 :mod country_name_1 ) :arg2 spokesman ) ) :arg1 ( and :op1 ( fire-01 :arg1 missile :source ( place :location ( northwest :part-of country_name_2 ) ) ) :op2 ( fly-01 :arg1 missile :destination ( range :quant ( about :op1 num_0 ) ) ) )
reveal-01 :arg0 ( test-01 :mod country_name_0 :quant several ) :arg1 ( have-03 :arg0 he :arg1 cmt )
begin-01 :arg1 ( and :op1 ( follow-02 :arg1 ( person_name_0 :arg1-of ( mean-01 :arg2 ( and :op1 docÃ©ts :op2 docÃ©ts :op3 ebionita ) ) ) :op2 ( thing :arg1-of believe-01 :mod other :mod entire ) ) ) :arg1-of ( cause-01 :arg0 ( and :op1 ( thing :arg1-of believe-01 :mod gnostickÃ½ ) :op2 ( thing :arg1-of believe-01 :mod ( other :mod entire ) ) ) ) :arg1-of ( cause-01 :arg0 ( and :op1 ( thing :arg1-of believe-01 :mod gnostickÃ½ ) :op2 docÃ©ts :op3 ebionita ) )
contrast-01 :arg2 ( amr-unknown :condition ( play-11 :arg0 you :arg2 location_name_0 ) )
call-01 :arg0 ( party :mod kbelÃ­kovÃ© ) :arg1 ( jaw :poss party ) :arg2 kbelÃ­kovÃ©
stop-01 :arg1 motor :time ( after :op1 ( zone :mod ( speed :mod maximum ) :arg1-of ( limit-01 :arg2 ( and :op1 ( h :quant num_0 :location ( relative-position :op1 river_name_0 :quant ( distance-quantity distance-quantity_num_0 :unit kilometer ) ) ) :op2 ( weaponry :quant num_1 :name ( name :op1 / ) ) :op3 ( weaponry :name ( name :op1 / ) ) ) ) ) )
contrast-01 :arg2 ( know-01 :arg0 i :arg1 ( location :arg4-of ( contact-01 :arg0 you :location location_name_0 ) :location-of ( and :op1 ( mess-up-02 :arg0 we :arg1 ( compatriots :poss you ) ) :op2 ( possible-01 :arg1 ( rescue-01 :arg0 we :arg1 he ) ) ) ) )
send-01 :arg1 ( team :arg0-of search-01 :arg2-of ( include-01 :arg1 ( and :op1 ( team :arg0-of ( rescue-01 :arg1 ( police :arg1-of local-02 ) ) ) :op2 ( team :arg0-of rescue-01 :arg1-of local-02 ) ) ) ) :arg2 ( team :arg0-of search-01 :arg2-of ( include-01 :arg1 ( and :op1 ( team :arg0-of rescue-01 :arg1-of local-02 ) :op2 ( team :arg0-of rescue-01 ) ) ) )
move-01 :arg1 speak-01 :arg2 ( space :location ( between :op1 ( wing :poss ( person :mod world-region_name_3 ) ) :op2 ( person :arg0-of ( show :arg1 ( and :op1 organization_name_0 :op2 ( mat?jÃ­?ek :mod lud?k ) :op3 ( organizer :mod airshow ) ) ) ) ) ) :time ( end-01 :arg1 speech )
big :degree too :domain ( leg :part-of you )
write-01 :arg0 i :arg1 ( write-01 :arg0 ( person_name_0 :arg0-of ( have-org-role-91 :arg1 organization_name_1 :arg3 write-01 ) ) :arg1 ( shoot-02 :arg1 ( person :quant num_0 :arg0-of ( have-org-role-91 :arg1 organization :arg2 v ) ) :arg1-of ( cause-01 :arg0 ( black :arg1 person ) ) ) ) :mod usual
and :op1 ( die-01 :arg1 ( boy :arg0-of ( escape-01 :arg1 rain-01 ) ) ) :op2 ( believe-01 :arg0 boy :arg1 ( die-01 :arg1 ( person :arg0-of ( have-rel-role-91 :arg1 boy :arg2 mother ) ) ) )
bail-out-02 :arg1-of ( close-10 :arg2 ( complain-01 :mod fotografovanÃ©mu ) )
seem-01 :arg1 ( past :domain ( and :op1 ( person_name_0 :arg0-of ( have-org-role-91 :arg1 ( organization_name_1 :poss person ) :arg2 ( person :arg0-of ( have-rel-role-91 :arg1 person :arg2 child ) ) ) ) :op2 ( person :arg0-of ( have-rel-role-91 :arg1 person :arg2 child ) ) ) :time ( week :mod last ) )
attack-01 :arg1 ( person :arg1-of ( neighbor-01 :arg2 one ) :mod one ) :degree ( full :polarity - ) :mod wrong
have-condition-91 :arg1 ( and :op1 ( see-01 :arg1 nothing :location water ) :op2 ( stick-01 :arg1 we :arg2 bottom :direction down ) ) :arg2 ( see-01 :arg1 nothing )
contrast-01 :arg1 ( fear-01 :polarity - :arg0 i :arg1 ( go-back-19 :arg1 i :arg2 gym ) ) :arg2 ( think-01 :polarity - :arg0 i :arg1 person )
and :op1 ( receive-01 :arg0 they :arg1 ( amount :arg1-of ( include-91 :arg2 ( amount :arg1-of ( include-91 :arg2 amount ) ) :arg3 ( percentage-entity percentage-entity_num_0 ) ) ) :prep-in ( case :mod this ) ) :op2 ( treat-01 :arg1 they :arg2 ( about :op1 ( monetary-quantity monetary-quantity_num_1 :unit pound ) ) ) :prep-in ( case :mod this )
possible-01 :arg1 ( cruel :domain he :mod cruel )
put-01 :arg0 person_name_0 :arg1 ( fingertips :poss person ) :arg2 together
contrast-01 :arg1 ( possible-01 :polarity - :arg1 ( consider-02 :arg1 person_name_0 :arg2 ( victim :arg1-of typical-02 :consist-of mesothelioma ) ) ) :arg2 ( work-01 :arg0 person :arg1 ( point-out-02 :arg0 person :arg1 ( story :poss person :arg1-of record-01 :quant all ) ) )
hard-02 :arg1 ( imagine-01 :arg1 ( stir :arg1 ( twitch :mod twitch ) :arg2 organization_name_0 :prep-as ( possible-01 :arg1 ( obligate-01 :arg1 he :arg2 ( swallow :arg0 he :arg1 publication_name_1 ) ) ) ) )
reiterated :arg0 we :arg1 ( mistake-02 :arg0 we :arg1-of same-01 :arg1-of ( lead-03 :arg2 ( event :mod amr-unknown ) :condition ( event :mod it ) ) ) :condition ( advise-01 :arg0 it :manner advance-01 )
multi-sentence :snt1 ( amr-unknown
great :domain water
make-02 :arg0 it :arg1 ( person :arg0-of ( have-rel-role-91 :arg1 he :arg2 father ) ) :time always :time ( suppress-01 :arg0 i :arg1 ( j :arg1-of ( emerge :arg2 mouth ) ) )
suspect-01 :arg0 ( government-organization :arg0-of govern-01 ) :arg1 ( send-01 :arg1 ( thing :arg2-of amplify-01 ) :arg2 ( account :mod bank ) :time still :time ( after :op1 ( die-01 :arg1 ( or :op1 ( person :arg0-of ( have-org-role-91 :arg1 ( government-organization :arg0-of govern-01 ) :arg2 member ) ) :op2 ( person :arg0-of report-01 :mod company_name_0 ) :op3 ( person :arg0-of report-01 ) :op4 ( person :arg0-of report-01 ) :op5 ( person :arg0-of report-01 ) ) ) ) ) :arg2 person_name_2
and :op1 ( recalled :arg0 ( person :arg0-of ( have-rel-role-91 :arg1 he :arg2 wife ) ) :arg1 ( person :quant num_0 :arg1-of ( include-91 :arg2 ( person :arg0-of ( seek-01 :arg1 ( help-01 :arg0 person ) ) ) ) ) :arg2 ( person :arg0-of ( seek-01 :arg1 ( help-01 :arg0 person ) ) ) ) :op2 ( officer :mod mi6 :arg0-of ( live-01 :arg1 ( consequence :arg0-of ( crippled :arg1 person ) ) ) )
and :op1 ( big :degree ( more :degree much ) :domain this ) :op2 ( say-01 :arg0 i :arg1 ( and :op1 ( gas :quant ( much :degree more ) ) :op2 ( gas :quant ( much :degree more ) ) ) )
attacked :arg0 ( headline :name ( name :op1 headlines :op2 headline ) ) :arg1 person_name_0 :manner gazu
possible-01 :arg1 ( and :op1 ( have-polarity-91 :arg2 - ) :op2 ( more :quant much ) )
and :op1 ( thing :arg1-of ( resemble-01 :arg2 ( floor :location floor ) ) ) :op2 ( thing :arg1-of ( resemble-01 :arg2 floor ) ) :location ( or :op1 ( talk-02 :arg2 floor ) :op2 ( presence :location ( home :poss we :arg1-of ( contain-01 :arg0 commonly ) ) ) )
contrast-01 :arg1 ( forget-01 :arg0 ( person :arg0-of ( attack-01 :arg1 labor ) :arg0-of attack-01 ) :arg1 ( truth :arg1-of simple-02 :mod this ) ) :arg2 ( remembers :arg0 person :arg1 history )
phone-number-entity phone-number-entity_num_0
match-03 :arg1 country_name_0 :arg1-of nice-01
say-01 :arg0 ( person_name_0 :arg0-of ( have-org-role-91 :arg2 '' ) ) :arg1 ( contrast-01 :arg1 ( let-01 :polarity - :arg0 we :arg1 ( thing :arg1-of ( smuggle-01 :arg0 she ) ) ) :arg2 ( let-01 :polarity - :arg0 we :arg1 ( thing :arg1-of ( smuggle-01 :arg0 she ) ) ) )
contrast-01 :arg2 ( differ-02 :arg1 mezoteliom )
cause-01 :arg0 ( make-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg3 judge-01 ) ) :arg1 ( thing :arg2-of ( base-02 :arg1 ( visit-01 :arg0 person :arg1 ( and :op1 drug :op2 ( chemical :mod industry ) :op3 ( bag :mod ( salary :mod industry ) ) :op4 ( bag :mod ( salary :mod other ) ) :op5 ( item :mod other ) :op6 ( item :mod other ) :op7 ( item :mod other :arg1-of ( refer-02 :arg2 subject :arg1-of possible-01 ) ) ) ) ) ) :arg1 ( possible-01 :arg1 ( consider-02 :arg1 ( and :op1 ( equipment :arg1-of complete-02 ) :op2 ( item :mod other ) ) :arg2 subject :arg1-of possible-01 ) ) )
and :op1 ( expose-01 :arg1 ( seduced :arg0-of kill-01 ) :arg2 ( or :op1 ( company :quant num_0 ) :op2 ( place :quant ( multiple :op1 num_0 ) ) ) :location ( or :op1 ( company :quant num_0 ) :op2 ( place :quant ( multiple :op1 ( temporal-quantity temporal-quantity_num_0 :unit decade ) ) ) ) ) :op2 ( turned :arg0 seduced :arg1 ( person :arg0-of ( seek-01 :arg1 ( compensate-01 :arg0 person :arg1 compensate-01 ) ) ) :arg2 ( problem :mod huge :domain person ) )
shone :arg1 ( skin :part-of ( skin :part-of it ) ) :manner ( distance-01 :arg1 skin )
demonstrate-01 :arg0 ( person :mod country_name_0 :arg1-of ( neighbor-01 :arg2 country_name_1 ) ) :arg1 ( aircraft :arg0-of ( reconstructed :arg1 ( or :op1 18t :op2 ( dvouplo?nÃ­k :quant num_0 ) ) ) )
and :op1 ( begin-01 :arg0 person_name_0 :arg1 ( rate-entity-91 :arg1 num_0 :arg2 ( temporal-quantity temporal-quantity_num_0 :unit year ) ) :time ( begin-01 :arg1 race ) ) :op2 ( be-located-at-91 :arg1 person :arg2 ( under :op1 num_2 :mod even ) )
say-01 :arg0 person_name_0 :arg1 ( and :op1 ( be-located-at-91 :arg1 ( and :op1 ( person :quant num_0 ) :op2 ( person :quant num_1 ) ) :arg2 ( person :quant ( at-least :op1 num_2 ) ) ) :op2 ( reason :arg0-of ( cause-01 :arg1 ( rape-01 :arg1 person ) :mod almost ) ) )
resemble-01 :arg1 it :arg2 ( today :ord ( ordinal-entity ordinal-entity_num_0 ) ) :time today
know-01 :polarity - :arg0 i :mod of-course :mod of-course
and :op1 ( disperse :arg0 ( group :mod religious-group_name_0 :mod other :prep-as luciferiÃ¡ni ) :arg1 ( group :mod other :mod religious-group_name_1 ) ) :op2 ( discredited :arg0 group :arg1 ( revisions :mod other ) )
and :op1 ( remain-01 :arg1 person_name_0 :arg3 ( brain :part-of brain ) :mod still :time ( converse-01 :arg0 we :arg1 ( perform-01 :mod humornÃ½mi :mod interrupts ) :arg2 ( perform-01 :arg0 person ) :time ever ) ) :op2 ( out-06 :arg1 person :arg2 role )
say-01 :arg0 he :arg1 ( contrast-01 :arg1 ( and :op1 ( fight-01 :arg0 we :time ( fight-01 :arg0 we ) ) :op2 ( ride-01 :arg0 we :arg1 ( fucked :quant all ) ) ) :arg2 ( and :op1 ( fight-01 :arg0 we ) :op2 ( ride-01 :arg0 we :arg1 ( fucked :quant all ) ) ) ) :time today
multi-sentence :snt1 ( tell-01 :arg0 i :arg1 truth :arg2 you ) :snt2 ( explain-01 :polarity - :arg0 i :arg1 ( thing :arg0-of cause-01 ) )
come-03 :arg1 ( news :mod positive :mod one ) :arg2 country_name_0 :arg1-of ( cause-01 :arg0 ( rise-01 :arg1 ( pmi :quant num_0 ) :arg4 ( level :arg1-of ( high-02 :degree most ) ) :time ( since :op1 ( end-01 :arg1 ( num_1 :quant num_1 ) ) ) ) )
difficult :domain ( join-01 :arg0 i :arg1 center ) :concession-of ( have-03 :arg0 i :arg1 it )
point :mod just :mod ( point :mod just )
estimate-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg1 country_name_0 :arg2 ( person :arg1-of ( expert-01 :arg2 ( have-org-role-91 :arg0 person :arg2 professor ) ) ) ) :arg0-of ( have-org-role-91 :arg2 professor ) ) :arg1 ( estimate-01 :arg1 ( person :quant num_0 ) :arg2 ( die-01 :arg1 ( person :quant ( about :op1 num_1 ) ) ) :mod ( good :degree most ) )
maintain-01 :arg0 organization_name_0 :arg1 ( plan-01 :polarity - :arg0 ( person :arg0-of ( have-org-role-91 :arg2 ( minister :mod prime ) ) ) :arg1 ( remain-01 :arg1 ( person :arg0-of ( have-org-role-91 :arg2 ( minister :mod prime ) ) ) :location country_name_1 ) )
contrast-01 :arg1 ( rate :mod ( grow-01 :arg1 ( grow-01 :location location_name_0 ) ) ) :arg2 ( high-02 :arg1 ( rate :mod grow-01 ) :arg2 ( product-of :op1 num_0 :op2 num_1 ) :arg1-of significant-02 )
like-01 :arg0 i :arg1 it :mod really
look-02 :arg0 she :arg1 ( upset-01 :arg1 she :degree really )
say-01 :arg0 ( and :op1 ( person :arg0-of ( campaign-01 :arg1 ( right :poss woman ) ) ) :op2 ( person :arg0-of ( have-org-role-91 :arg1 organization_name_0 ) ) :op3 ( person :arg0-of ( have-org-role-91 :arg1 organization_name_1 ) ) :op4 ( person :arg0-of ( have-org-role-91 :arg1 organization :arg3 campaign-01 ) ) ) :arg1 ( need-01 :arg1 ( have-03 :arg1 ( place :mod this :arg0-of permit-01 :arg1-of ( need-01 :source ( point :mod medicine :arg1-of ( need-01 :arg3 view-01 ) ) ) ) ) )
multi-sentence :snt1 ( cost-01 :arg1 ( thing :arg1-of report-01 ) :arg2 amr-unknown ) :snt2 ( accord-02 :polarity - :arg2 rule )
accuse-01 :arg0 ( police :location location_name_0 ) :arg1 ( man :mod young ) :arg2 ( disobeying :arg0 man :arg1 ( call-03 :arg0 man :arg1 ( halt-01 :arg0 man :arg1 ( drive-01 :arg0 man ) ) ) )
want-01 :arg0 ( they :quant all ) :arg1 ( pull-out-02 :arg0 they :arg1 we )
concentrated :arg0 we :arg1 country_name_0 :time now
multi-sentence :snt1 ( take-01 :arg0 i :arg1 ( match-03 :quant num_0 :mod more ) ) :snt2 ( contrast-01 :arg1 ( take-01 :arg0 i :arg1 ( match-03 :quant num_0 :mod more ) :time ( talk-01 :arg0 i :arg1 it :time ( week :mod last ) ) ) :arg2 ( optimistic :domain i :degree ( more :degree far ) ) ) :snt3 ( say-01 :arg0 person_name_0 :arg1 ( convince-01 :arg0 person :arg1 person :arg2 ( perform-01 :arg1-of improve-01 ) ) :concession ( win-01 :polarity - :arg0 organization_name_1 ) )
multi-sentence :snt1 ( possible-01 :arg1 ( see-01 :arg0 person :arg1 ( petra :mod brankÃ¡?e ) ) ) :snt2 ( echa :arg0 ( person_name_1 :arg0-of ( have-org-role-91 :arg2 trainer ) ) :arg1 ( person :arg0-of ( have-org-role-91 :arg2 trainer ) ) )
multi-sentence :snt1 person_name_0 :snt2 ( ech :mode interrogative :time ( moment :mod last ) )
contrast-01 )
and :op1 ( criticize-01 :arg0 ( person_name_0 :arg0-of ( have-org-role-91 :arg2 director ) ) :arg1 study-01 :arg2 ( rely-01 :polarity - :arg0 study :arg1 ( right :poss cartoons ) :degree ( much :degree too ) ) ) :op2 ( predict-01 :arg0 person :arg1 ( collapse-01 :arg1 province_name_1 ) ) :time ( summer :mod last )
increase-01 :arg1 ( increase-01 :arg1 tax-01 :location ( below :op1 ( product-of :op1 num_0 :op2 ( percentage-entity percentage-entity_num_0 ) ) ) ) :location state_name_0 :mod only
contrast-01 :arg2 ( and :op1 ( chance-02 :arg0 sheer :arg1 ( turn-01 :polarity - :arg0 person_name_0 ) ) :op2 ( end-01 :arg1 num_0 :arg3 ( person_name_1 :arg0-of ( have-org-role-91 :arg2 coach ) ) ) )
have-03 :arg0 he :arg1 ( home :poss he :location ( airport :location city_name_0 ) ) :time today
multi-sentence :snt1 ( love-02 :arg0 i :arg1 ( believe-01 :arg0 i :arg1 it ) ) :snt2 ( add-01 :arg0 he :arg1 it )
and :op2 ( follow-01 :arg1 ( session :mod autograph :arg1-of ( czech :polarity - :arg0 person_name_0 ) ) :arg2 ( session :mod autograph ) )
and :op2 ( fight-01 :arg0 ( person :arg0-of ( fight-01 :arg1 ( accuse-01 :arg0 person :arg1 person ) :time now ) ) :arg2 ( side :poss person ) :mod definite )
contrast-01 :arg1 ( show-01 :arg0 ( footage :arg1-of report-01 ) :arg1 ( interest-01 :location ( magazine :mod country_name_0 ) ) :arg1-of report-01 ) :arg2 ( want-01 :arg0 ( person :arg0-of hack-04 ) :arg1 ( want-01 :arg0 person :arg1 money :source community ) )
and :op1 ( applaud-01 :arg0 ( person :quant some :arg1-of expert-01 ) :arg1 ( source :quant num_0 :arg1-of differ-02 ) :arg2 location_name_0 :time now ) :op2 ( sources :arg0 ( book :quant num_1 :arg1-of ( include-91 :arg2 ( book :quant num_1 ) ) ) :arg1 ( book :quant num_1 :arg1-of ( include-91 :arg2 ( book :quant num_1 ) ) ) :arg2 ( book :quant num_1 :arg1-of ( include-91 :arg2 ( book :quant num_1 :arg1-of ( include-91 :arg2 ( book :quant num_1 :arg1-of ( include-91 :arg2 ( book :quant num_1 ) ) ) ) ) ) ) ) :op3 ( authorship :arg1 book :arg1-of ( cause-01 :arg0 ( describe-01 :arg1 book :manner ( certain :polarity - ) ) ) )
and :op1 ( deal-01 :arg0 lawyer :arg2 ( lawyer :location ( around :op1 ( football :mod small :mod football ) :ord ( ordinal-entity ordinal-entity_num_0 ) ) ) :time already ) :op2 ( recommend-01 :arg0 lawyer :arg1 change-01 :arg2 ( system :arg1-of distribute-01 ) )
and :op1 ( a.cz :mode interrogative ) :op2 ( manage-02 :arg0 you :arg1 ( save-02 :arg0 you :arg1 ( person :arg1-of ( imprison-01 :arg2 country_name_1 ) ) ) :degree amr-unknown )
important :degree ( more :mod even ) :arg1-of ( talk-01 :arg0 we :arg2 ( and :op1 ( geometry :arg1 universe ) :op2 ( complain-01 :arg0 we :arg1 universe :location ( inside :op1 universe ) ) ) ) :mod ( important :degree ( more :mod even ) )
point :beneficiary country_name_0
decide-01 :arg0 company_name_0 :arg1 ( continue-01 :arg0 company :arg1 ( treat-01 :arg0 company :arg1 ( person_name_1 :arg0-of ( have-org-role-91 :arg2 professor ) ) :arg2 ( department :part-of ( surgery-01 :mod thoracic ) ) :location ( country-region_name_3 :mod hospital ) ) ) :time ( after :op1 ( visit-01 :arg0 company :arg1 ( doctor :quant several ) ) )
and :op1 ( work-09 :arg1 it ) :op2 ( have-condition-91 :arg1 ( begin-01 :arg0 it :arg1 race :mod great ) :arg2 ( have-03 :arg0 we :arg1 ( deal :mod great :topic it ) ) )
and :op1 ( large :degree ( more :degree much ) :domain this ) :op2 ( say-01 :arg0 i :arg1 ( and :op1 ( large :degree ( more :degree much ) :mod also :domain this ) :op2 ( gas :quant ( lot :mod also ) ) :mod also ) )
contrast-01 :arg1 ( include-91 :arg1 ( person :arg0-of ( have-org-role-91 :arg2 officer ) ) :arg2 ( person :arg0-of ( have-org-role-91 :arg2 officer ) ) ) :arg2 ( veteran :source country_name_0 :mod also )
teamed :arg0 person_name_0 :arg1 ( fingertips :poss person )
boast :arg0 they :arg1 ( create-01 :arg0 they :arg1 ( row :ord ( ordinal-entity ordinal-entity_num_0 ) ) ) :mod also
ceremony :polarity -
respond-01 :arg1 ( legislation :mod new :mod this :arg1-of ( approve-01 :time ( year :mod this ) ) :arg0-of ( make-02 :arg1 ( easy-05 :arg1 ( compensate-01 :arg2 ( person :arg0-of ( seek-01 :arg1 compensate-01 ) ) :degree more :concession ( even-if :op1 ( possible-01 :polarity - :arg1 ( trace-02 :arg1 ( employer :poss they :time former ) ) ) ) ) :degree more ) ) ) :arg2 ( legislation :mod new :mod this :arg1-of ( approve-01 :time ( year :mod this ) ) )
and :op1 ( rise-01 :arg1 ( thing :arg2-of ( price-01 :arg1 ( and :op1 ( house-01 :arg1-of private-03 ) :op2 ( house-01 :arg1-of ( afford-01 :arg1-of possible-01 ) ) ) ) ) :arg2 city_name_0 :time ( year :ord ( ordinal-entity ordinal-entity_num_0 ) ) ) :op2 ( climbed :arg0 sell-01 :arg1 ( monetary-quantity monetary-quantity_num_1 :unit ( yuan :mod renminbi ) ) )
contrast-01 :arg1 ( feel-01 :arg0 it :arg1 rozmrzelÃ¡ ) :arg2 ( surprise-01 :arg0 ( burden-01 :arg1 he ) :arg1 it )
include-91 :arg1 ( and :op1 ( amount :mod pound ) :op2 ( share :arg1-of ( buy-01 :arg0 public ) ) :op3 ( share :arg1-of ( buy-01 :arg0 public ) ) ) :arg2 ( something :arg1-of ( share-01 :arg0 public ) ) :location world :mod certain
say-01 :arg1 ( look-01 :mode imperative :arg0 you :arg1 ( person_name_0 :arg0-of ( have-rel-role-91 :arg1 he :arg2 mother ) ) :time ( now :quant num_0 ) ) :arg2 ( confuse-01 :arg1 person )
multi-sentence :snt1 ( begin-01 :arg1 ( car :quant num_0 ) :time then ) :snt2 ( wheels :polarity - )
and :op1 ( sign-02 :arg0 location_name_0 :arg1 ( law :arg0-of ( reduce-01 :arg1 ( tax-01 :arg2 corporation ) :arg3 ( percentage-entity percentage-entity_num_0 ) :arg4 ( percentage-entity percentage-entity_num_0 ) ) ) :time recent ) :op2 ( reduce-01 :arg1 ( thing :arg1-of tax-01 ) :arg4 ( percentage-entity percentage-entity_num_3 ) )
view-02 :arg0 we :arg1 ( cause-01 :arg0 amr-unknown :arg1 ( believe-01 :polarity - :arg0 they :arg1 ( woman :mod color :mod color ) ) ) :mod important :condition ( realize-01 :arg0 we :arg1 this )
contrast-01 )
cause-01 :arg0 ( delay-01 :arg1 fly-01 ) :arg1 ( delay-01 :arg1 ( fly-01 :mod other :arg2-of ( include-01 :arg1 ( fly-01 :source ( and :op1 city_name_0 :op2 company_name_1 ) :source city_name_2 ) ) ) ) :time then
and :op1 ( hard-02 :arg1 ( adopt-01 :arg1 life ) :degree further ) :op2 ( want-01 :polarity - :arg0 you :arg1 adopt-01 )
say-01 :arg0 he :arg1 ( clear-06 :arg1 ( thing :arg2-of sanction-02 :arg1-of tough-02 :arg1-of ( announce-01 :manner ( regard-01 :arg1 ( aircraft :mod civilian :mod civilian ) :arg2 ( die-01 :quant ( nearly :op1 num_0 ) ) ) :arg0-of ( cause-01 :arg1 ( army :mod country_name_0 ) :manner vehement ) ) ) )
adapt-01 :arg1 ( school :mod day :ord ( ordinal-entity ordinal-entity_num_0 ) ) :mod tradition :arg0-of ( cause-01 :arg1 ( give-01 :arg0 child :arg1 flower :arg2 child ) ) :mod tradition
investigate-01 :arg1 ( crash-01 :arg1 company_name_0 :location country_name_1 ) :time now
include-91 :arg1 ( and :op1 ( person :mod country_name_0 ) :op2 ( citizenship :mod israeli ) :quant ( almost :op1 num_0 ) ) :arg2 ( territory :poss ( state :location country ) )
and :op1 ( present-01 :arg0 ( machine :name ( name :op1 na :op2 pt-17 ) :mod ( machine :name ( name :op1 pt-17 :op2 se ) ) ) :arg1 ( person_name_1 :arg0-of ( have-org-role-91 :arg1 ( wing :mod upper :part-of ( wing :mod upper ) ) :arg2 z ) ) :arg2 ( wing :mod ( wing :mod upper ) :name ( name :op1 na ) :mod ( wing :name ( name :op1 na ) :mod ( wing :name ( name :op1 na ) :mod upper ) ) ) ) :op2 ( wing :mod ( wing :mod upper ) :mod na )
describe-01 :arg0 i :arg1 ( work-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg2 director ) ) :arg2 ( chalice :arg1 person ) ) :arg1-of possible-01
and :op1 ( say-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg2 director ) ) :arg1 ( believe-01 :arg0 ( and :op1 organization_name_0 :op2 country_name_1 :op3 twitch ) :arg1 ( future :poss ( and :op1 ( '' :arg1 game ) :op2 ( do-02 :arg0 media ) ) ) :time future ) ) :op2 ( reluctant :domain ( person :arg0-of view-01 :mod ( gulp :mod even ) ) )
and :op1 ( want-01 :arg0 you :arg1 ( preserve-01 :arg0 you :arg1 ( government-organization :arg0-of govern-01 :poss we ) ) :manner amr-unknown :condition ( decide-01 :arg0 ( person :quant num_0 :arg1-of ( include-91 :arg2 ( person :arg1-of ( neighbor-01 :arg2 we ) ) ) ) :arg1 ( nation :mod czech ) ) ) :op2 ( wipes :arg0 he :arg1 country_name_0 :arg2 ( map :location world ) )
realize-01 :mode interrogative :arg0 ( journalist :poss we ) :arg1 ( fact :topic ( liquidation :arg0 ( person :mod ethnic-group ) :arg1 ( person :mod ethnic-group ) ) )
have-concession-91 :arg1 ( wish-01 :arg0 i :arg1 ( possible-01 :arg1 ( stop-01 :arg0 i :arg1 ( think-01 :arg0 i :arg1 it ) ) ) ) :arg2 ( wish-01 :arg0 he :arg1 ( think-01 :arg0 i :arg1 ( think-01 :arg0 i :arg1 it ) ) )
tell-01 :mode imperative :arg0 you :arg1 ( list-01 :arg1 organization_name_0 :arg2 ( organization :mod terrorism :mod terrorism ) )
gain-02 :arg0 company :arg1 ( monetary-quantity :arg2-of ( expend-01 :arg0 company ) ) :arg3 ( rate-entity-91 :arg1 num_0 :arg2 ( temporal-quantity temporal-quantity_num_0 :unit year ) )
plunged :arg0 he :arg1 theater :time ( after :op1 ( receive-01 :arg0 he :arg1 recognition :arg2 ( person :arg0-of criticize-01 ) ) )
cause-01 :arg0 ( extend-01 :arg1 ( right :mod ( right :mod civil ) ) ) :arg1 ( recognition :mod formal :topic ( extend-01 :arg1 ( right :mod civil ) ) ) :arg0-of ( cause-01 :arg1 ( prevent-01 :arg1 ( discriminate-02 :arg1 ( organize-01 :arg1 trade-01 ) ) ) )
crying :arg1 person :time ( tell-01 :arg0 i :arg1 ( story :poss we :location city_name_0 ) :arg2 person )
use-01 :mode imperative :arg0 you :arg1 ( person :arg0-of ( live-01 :location ( territory :poss person ) ) ) :arg2 ( person :arg0-of ( live-01 :location ( territory :poss person ) ) )
hope-01 :arg0 i :arg1 ( open-01 :arg0 school :arg1 ( and :op1 ( educate-01 :arg1 school ) :op2 ( and :op1 ( child :mod country_name_0 ) :op2 ( child :mod other :location world ) :op3 ( boy :mod other :location world ) ) ) :time soon :arg1-of ( cause-01 :arg0 ( say-01 :arg0 ( person :arg0-of ( have-rel-role-91 :arg1 school :arg2 child ) ) :arg1 ( boy :mod thirteen-year-old :source school :location ( country-region_name_1 :mod ( large :degree most ) ) ) ) ) )
support-01 :polarity - :arg0 organization_name_0 :arg1 ( mandate :poss ( person :arg0-of ( vote-01 :arg1 country_name_1 ) ) ) :mod of-course
good :degree very
nothing :domain ( pain-01 :mod such ) :duration ( temporal-quantity temporal-quantity_num_0 :unit year )
and :op1 ( fault-01 :polarity - :arg1 thing :arg2 ( thing :arg1-of bring-01 ) ) :op2 ( recommend-01 :polarity - :arg1 ( corrected :arg1 thing ) :concession ( even-if :op1 ( and :op1 ( suitable-04 :arg1 thing ) :op2 ( possible-01 :arg1 thing ) ) ) )
think-01 :arg0 i :arg1 ( family :arg1-of ( have-org-role-91 :arg0 i :arg2 member ) ) :time ( late :degree more )
say-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg3 judge-01 ) ) :arg1 ( possible-01 :arg1 ( cause-01 :arg0 ( and :op1 ( change-01 :arg1 ( person :arg0-of view-01 ) ) :op2 ( increase-01 :arg1 ( popularity :poss ( site :medium web :example organization_name_0 ) ) :arg1-of increase-01 ) ) :arg1 ( person :arg0-of ( have-org-role-91 :arg3 judge-01 ) ) ) )
use-01 :arg1 buy-01
contrast-01 :arg2 ( have-03 :arg0 it :arg1 ( something :arg0-of ( attract-01 :arg1 ( company :mod young :arg0-of ( want-01 :arg1 ( want-01 :arg0 ( man :mod young ) ) ) ) ) ) )
exemplify-01 :arg0 ( expose-01 :arg1 ( june :mod this ) :arg2 ( organization_name_0 :arg1-of ( asbestos :arg0 person_name_1 ) ) )
multi-sentence :snt1 ( sit-01 :arg1 he :arg2 ( organization_name_0 :mod smÃ­chovskÃ½ ) ) :snt2 ( and :op1 ( speak-01 :arg0 he :arg2 ( journalist :mod czech ) ) :op2 ( prepare-02 :arg0 he :arg2 ( bias-01 :arg1 he :arg2 ( representation :arg0 he :arg1 ( and :op1 ( person :mod country_name_1 ) :op2 ( person :mod country ) :op3 ( person :mod country ) :op4 ( person :mod country ) :op5 ( person :mod country ) :arg1-of sharp-02 :mod also ) ) ) ) )
elect-01 :mode interrogative :arg2 elect-01
note-01 :mode imperative :arg0 you :arg1 ( want-01 :arg0 i :arg1 ( make-01 :arg0 i :arg1 everything :arg1-of ( instead-of-91 :arg2 ( soon :degree more :compared-to ( late :degree more ) ) ) ) )
liberation :arg0 ( person :arg0-of ( have-org-role-91 :arg1 country_name_0 :arg2 soldier ) ) :arg1 separatist :arg2 ( separatist :arg0-of ( favor-01 :arg1 captivity ) ) :location ( around :op1 stage )
and :op1 ( want-01 :arg0 i :arg1 ( work-01 :arg0 i :location police :time once ) ) :op2 ( hope-01 :arg0 i :arg1 ( take-01 :arg0 they :arg1 i :arg2 academy :time ( year :mod next ) ) )
capture-01 :arg0 ( soldier :mod country_name_0 ) :arg1 separatist
nep?ed?eli :arg0 we :arg1 we :manner together :topic ( thickness :arg1 ( dimension :poss ( dimension :mod hose ) ) ) :mod just :prep-in ( case :mod that )
call-01 :arg0 publication_name_0 :arg1 ( theory :name ( name :op1 kaluzovou-kleinovou :op2 kaluzovou-kleinovou ) :mod small ) :arg2 ( theory :name ( name :op1 kaluzovou-kleinovou ) :mod small ) :time ( since :op1 then )
and :op1 ( learn-01 :polarity - :arg0 we :arg1 it :mod really ) :op2 ( think-01 :arg0 i :arg1 ( something :beneficiary ( class :mod middle :mod ( class :mod middle ) ) ) ) :location school
warn-01 :arg0 ( person_name_0 :mod politics :arg0-of ( warn-01 :arg1 ( and :op1 ( fail-01 :arg1 ( government-organization :arg0-of govern-01 :mod socialist :mod socialist ) :arg2 ( improve-01 :arg0 government-organization :arg1 economy ) ) :op2 ( reduce-01 :arg0 government-organization :arg1 ( employ-01 :polarity - :mod record ) ) ) ) :time soon )
justify-01 :arg0 you :arg1 ( lynching :arg0 you :arg1 ( woman :mod white ) )
and :op1 ( offer-01 :arg0 company_name_0 :arg1 ( live-01 :arg0 company :duration ( temporal-quantity temporal-quantity_num_0 :unit month ) :arg1-of ( last-01 :arg2 ( temporal-quantity temporal-quantity_num_0 :unit month ) ) ) ) :op2 ( probable :domain ( prolonged :arg0 he :arg1 life :time ( month :mod one :mod just ) ) ) :time ( begin-01 :arg1 ( offer-01 :arg0 company ) )
say-01 :arg0 he :arg1 ( go-01 :arg1 you :arg4 ( far :degree too ) ) :arg1-of ( say-01 :arg0 he ) :arg1-of ( say-01 :arg0 he ) :arg1-of ( say-01 :arg0 he ) :arg1-of ( say-01 :arg0 he ) :arg1-of ( say-01 :arg0 he ) :arg1-of ( say-01 :arg0 he ) :arg1-of ( say-01 :arg0 he ) :arg1-of ( say-01 :arg0 he ) :arg1-of ( say-01 :arg0 he ) :arg1-of ( say-01 :arg0 he ) :arg1-of ( say-01 :arg0 he ) :arg1-of ( say-01 :arg0 he ) :arg1-of ( describe-01 :arg0 he :arg1-of possible-01 :arg1-of ( describe-01 :arg0 he :arg2 ( mistake-02 :arg0 you ) :arg1-of possible-01 ) )
say-01 :arg0 he :arg1 ( tell-01 :arg0 ( person_name_0 :arg0-of ( have-org-role-91 :arg1 ( person_name_1 :arg0-of ( have-org-role-91 :arg2 '' ) ) :arg2 ( person :arg0-of ( have-rel-role-91 :arg1 he :arg2 father ) ) ) ) :arg1 ( die-01 :arg1 ( person :arg0-of ( have-rel-role-91 :arg1 he :arg2 mother ) ) ) :arg2 i ) :arg2 i
lose-02 :arg0 i :arg1 ( person :quant lot :arg1-of ( love-01 :arg0 i ) :arg1-of ( close-10 :arg2 i ) )
zalapal :arg1 ( world :quant num_0 ) :time ( after :op1 breath :quant ( temporal-quantity temporal-quantity_num_0 :unit year ) ) :time ( bring-01 :arg0 ( alyonu :mod small ) :arg1 arm :arg2 ( captivity :arg0 ( person :mod country_name_0 ) :arg1 arm ) )
multi-sentence :snt1 ( contrast-01 :arg1 ( surprise-01 :polarity - :arg1 we ) :arg2 ( surprise-01 :polarity - :arg1 we ) ) :snt2 ( say-01 :arg0 ( person_name_0 :arg0-of ( have-org-role-91 :arg1 political-party_name_1 ) ) :arg1 it )
contrast-01 :arg1 ( have-03 :arg0 plane :arg1 ( plane :arg0-of ( have-03 :arg1 ( distance-01 :arg1 plane :arg2 ( distance-01 :arg1 plane :mod short ) ) ) ) ) :arg2 ( hit-01 :arg0 plane :arg1 ( or :op1 ( speed :arg1-of change-01 ) :op2 ( direction :mod wind ) :op3 ( land-01 :arg1 plane ) :op4 ( land-01 :arg1 plane ) ) )
island :domain this :mod ( unsustainable :mod almost ) :arg0-of ( require-01 :arg1 ( reform-01 :manner thorough ) )
say-01 :arg0 ( person :arg0-of ( survive-01 :arg1 ( cancer :mod lung ) ) ) :arg1 ( treasure :arg0-of ( survive-01 :arg1 ( cancer :mod lung ) ) ) :frequency sometimes
exchange-01 :arg0 ( person :arg0-of ( have-rel-role-91 :arg2 sister ) ) :arg1 person_name_0 :arg2 ( at-least :op1 ( person :arg0-of ( work-01 :mod that ) ) :mod at-least )
use-01 :arg1 ( possible-01 :arg1 teach-01 ) :condition ( or :op1 ( do-02 :polarity - :arg0 you :arg1 ( thing :arg1-of ( remark-01 :arg0 ( person :mod other ) ) ) ) :op2 ( wear-01 :arg0 you :arg1 ( and :op1 appropriate-02 :op2 destroy-01 ) ) )
have-condition-91 :arg1 ( possible-01 :arg1 ( koketovat :arg0 you :arg1 ( song :mod any ) :time already ) ) :arg2 ( take-01 :arg0 you :arg1 ( string :ord ( ordinal-entity ordinal-entity_num_0 ) ) )
have-concession-91 :arg1 ( follow-01 :arg1 fast-start :arg2 ( scurrying :arg1 ( line :arg1-of start-01 ) ) :arg1-of instead-of-91 )
take-01 :arg0 ( person_name_0 :arg0-of ( have-org-role-91 :arg1 chamber :arg3 ( apprentice-01 :arg0 person ) ) ) :arg1 ( heart :part-of ( person_name_1 :arg0-of ( have-rel-role-91 :arg1 woman :arg2 child ) ) ) :arg1-of ( cause-01 :arg0 ( kill-01 :arg0 person :arg1 ( person :arg0-of ( have-rel-role-91 :arg1 woman :arg2 child ) ) :mod almost ) ) :mod also
contrast-01 :arg1 ( lead-03 :arg0 fire-01 :arg2 ( end-01 :arg1 fight-01 :time immediate ) ) :arg2 ( solve-01 :polarity - :arg0 cease-01 :arg1 ( problem :arg1-of key-02 ) :prep-as ( demand-01 :arg0 organization_name_0 :arg1 ( and :op1 ( blockade-01 :arg0 ( and :op1 ( draft :name ( name :op1 israeli-palestinian ) ) :op2 ( url-entity :value reopening ) ) ) :op2 ( reopening :location country-region_name_1 ) ) ) )
say-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg1 federal :arg3 judge-01 ) ) :arg1 ( block-01 :arg0 lawyer :arg1 ( law :source location_name_0 ) :duration temporary :arg1-of ( say-01 :arg0 lawyer ) :arg1-of ( say-01 :arg0 lawyer ) :arg1-of ( say-01 :arg0 lawyer ) :arg1-of ( say-01 :arg0 lawyer ) :location state :mod probable )
multi-sentence :snt1 ( it :li num_0 ) :snt2 ( be-temporally-at-91 :arg2 ( date-entity month_date-entity_0 year_date-entity_0 :time-of ( move-01 :arg1 ( person :arg0-of ( depend-01 :polarity - ) :arg0-of ( depend-01 :polarity - ) ) :arg2 country_name_0 ) ) )
matter :mod routine :mod most :example ( need-01 :arg1 ( bring-01 :arg1 pot :arg2 store :destination store :source ( and :op1 ( class :mod summer ) :op2 ( nafasovat :arg1 pot ) ) ) )
cause-01 :arg0 ( obligate-01 :arg1 they :arg2 ( leg :mod educate-01 ) )
and :op2 ( want-01 :arg0 person_name_0 :arg1 ( borrow-01 :arg0 person :arg1 ( race :mod this ) :arg2 we ) )
and :op1 ( take-01 :arg0 win-01 :arg1 bet :duration ( temporal-quantity temporal-quantity_num_0 :unit year ) ) :op2 ( say-01 :arg0 win-01 :arg1 ( allow-01 :arg0 ( money :mod aircraft-type_name_0 ) :arg1 ( and :op1 ( travel-01 :arg0 they :arg1 world ) :op2 ( buy-01 :arg0 they :arg1 ( house :mod new ) ) ) ) )
work-01 :arg0 person_name_0 :arg2 ( department :name ( name :op1 graphic :op2 television :op3 television :op4 television :op5 television :op6 television :op7 television ) ) :time former
believe-01 :arg0 ( person :mod this ) :arg1 ( believe-01 :arg0 person :arg1 that :condition ( show-01 :arg0 they :arg1 ( visa :mod ( cow :mod cow ) :mod grand ) :purpose ( bear-02 :arg0 they :arg1 ( calves :mod striped ) ) ) )
multi-sentence :snt1 ( say-p :mode interrogative :arg0 we ) :snt2 ( ejedli :mode imperative :arg0 you :arg1 throat )
multi-sentence :snt1 ( realize-01 :arg0 we :arg1 ( mr :arg0 we :arg1 ( warn-01 :arg0 person_name_0 ) ) ) :snt2 ( notice-01 :arg0 we :arg1 ( and :op1 person_name_1 :op2 ( address :poss ( person :arg0-of shoot-02 :mod sleep-01 ) ) ) :arg0-of ( cause-01 :arg1 ( and :op1 ( believe-01 :arg0 person :arg1 come-01 ) :op2 ( give-up-07 :arg0 person :arg1 goal ) ) :arg0-of ( cause-01 :arg1 ( start-01 :arg0 person :arg1 ( goal :mod goal ) ) :arg0-of ( cause-01 :arg1 ( start-01 :arg0 person :arg1 ( fall-01 :arg1 person ) ) ) ) ) )
have-concession-91 :arg1 ( release-01 :arg0 terrorist :arg1 ( and :op1 ( person :arg0-of ( have-rel-role-91 :arg2 mother ) ) :op2 ( person :quant num_0 :arg0-of ( have-rel-role-91 :arg1 person :arg2 sister ) ) :op3 ( person :arg0-of ( have-rel-role-91 :arg1 person :arg2 brother ) ) :op4 ( person :arg0-of ( have-rel-role-91 :arg1 person :arg2 brother ) ) :op5 ( person :arg0-of ( have-rel-role-91 :arg1 person :arg2 brother ) ) ) ) :arg2 ( release-01 :arg1 terrorist :location ( captivity :location captivity ) )
cause-01 :arg0 amr-unknown :arg1 ( possible-01 :polarity - :arg1 ( save-02 :arg0 ( guardians :mod galaxies ) :arg1 sell-01 ) )
multi-sentence :snt1 ( say-01 :arg0 ( person :arg0-of report-01 ) :arg1 ( decline-01 :arg1 ( revenue :poss person_name_0 ) :time recent :manner simple ) ) :snt2 ( say-01 :arg0 ( person :arg0-of report-01 ) :arg1 ( and :op1 ( declined :arg0 ( person :arg0-of report-01 ) :arg1 ( revenue :mod ( large :degree most ) :time history ) ) :op2 ( worry-01 :arg0 sell-01 :arg1 person ) ) )
multi-sentence :snt1 ( and :op2 ( worry-01 :arg0 ( word :mod ( good :degree more ) ) :arg1 i :degree very :time last ) ) :snt2 ( prefer-01 :arg1 ( word-01 :arg1 it ) )
possible-01 :arg1 ( use-01 :arg0 he :arg1 ( return-01 :arg1 he :arg3 ( or :op1 ( beach :mod sunny ) :op2 ( cottage :purpose ( work-01 :arg1 ( work-01 :arg1-of normal-02 ) ) ) ) ) :beneficiary ( stud :quant many ) )
situation :time ( catch-up-04 :polarity - :arg1 i :arg2 ( match-03 :ord ( ordinal-entity ordinal-entity_num_0 ) :part-of ( season :mod new ) ) ) :beneficiary i :time ( after :op1 ( career :mod ( career :mod new ) ) )
think-01 :arg0 i :arg1 family :time ( late :degree more )
say-01 :arg0 person_name_0 :arg1 ( party :mod politics :mod other :location leagues )
say-01 :arg0 ( person :arg0-of ( have-rel-role-91 :arg1 person_name_0 :arg2 ( minister :mod vice ) ) ) :arg1 ( do-02 :arg0 ( clothes :poss person ) :arg1 opposite ) :time ( today :mod even :mod even ) :location ( and :op1 ( merge-01 :arg1 ( and :op1 ( race :mod work-01 ) :op2 ( gender :location ( circle :poss ( person :arg0-of ( have-org-role-91 :arg2 head-of-state ) ) ) ) :op3 ( person :arg0-of ( have-org-role-91 :arg2 professor ) ) :op4 ( person :arg0-of ( have-org-role-91 :arg2 professor ) ) :op5 ( study-01 :arg0 person ) ) ) )
cause-01 :arg1 ( respect-01 :polarity - :arg0 i :arg1 ( layer :mod social :consist-of ( or :op1 wealth :op2 job :op3 age ) ) )
say-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg2 minister ) ) :arg1 ( invite-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg2 minister ) ) :arg1 i :arg2 ( attend-01 :arg0 person :arg1 ( start-01 :arg1 ( year :mod school ) ) ) ) :ord ( ordinal-entity ordinal-entity_num_0 )
lack-01 :arg0 employer :arg1 ( thing :arg0-of evidence-01 :mod demonstrably ) :arg0-of ( cause-01 :arg1 ( lack-01 :arg0 employer :arg1 ( disagree-01 :arg2 employer ) ) )
price-01 :arg1 ( thing :arg2-of price-01 :arg1-of ( high-02 :degree most ) ) :arg2 ( post :location ( location_name_0 :mod na ) )
infer-01 :arg1 ( be-02 :arg1 this :mod certain )
give-01 :arg1 name :arg1-of ( cause-01 :arg0 ( structure :mod fibrous :poss it :arg0-of ( give-01 :arg1 ( and :op1 strength :op2 dissent-01 ) :arg2 it ) ) )
offer-01 :arg0 we :arg1 ( and :op1 ( person :arg0-of read-01 ) :op2 ( person :arg0-of read-01 ) :op3 ( person :arg0-of read-01 ) :op4 ( person :arg0-of read-01 ) :op5 ( person :arg0-of read-01 ) ) :arg3 ( form :mod ( book :mod electronic ) :source ( valÃ¡?ka :arg0 person_name_0 :arg1 ( format :mod broadcast-program_name_1 ) ) )
contrast-01 :arg1 ( forget-01 :polarity - :arg0 i :arg1 it ) :arg2 ( sorry-01 :arg1 i )
know-01 :arg0 i :arg1 ( work-01 :polarity - :arg0 person_name_0 )
or :op1 ( say-01 :arg0 we :arg1 ( kill-01 :arg0 they :arg1 they ) :time ever ) :op2 ( die-01 :arg1 they )
multi-sentence :snt1 person_name_0 :snt2 person_name_1
shame-01 :arg1 ( possible-01 :arg1 ( and :op1 ( steal-01 :arg1 ( information :arg1-of personal-02 ) ) :op2 ( extend-01 :arg1 information :arg2 public ) ) )
be-located-at-91 :arg1 ( film :mod italian ) :arg2 location_name_0 :mod ( well :degree very ) :time ( year :mod this )
have-03 :arg0 they :arg1 ( kahan :arg1-of ( build-01 :arg0 they :location ( cz?ste :mod azbestovÃ© ) ) )
and :op1 ( watch-01 :arg0 person_name_0 :arg1 situation :time ( over :op1 weekend ) ) :op2 ( talk-01 :arg0 person :arg2 ( person :arg0-of protest-01 ) :location country_name_2 )
same-01 :arg1 it :arg2 ( child :mod same )
expect-01 :polarity - :arg0 we :arg1 ( nothing :mod less ) :condition ( write-01 :arg0 god :arg1 it )
show-01 :arg0 ( data :source fly-01 ) :arg1 ( and :op1 ( obligate-01 :arg1 ( aircraft :source ( land-01 :ord ( ordinal-entity ordinal-entity_num_0 ) ) ) :arg2 abandon-01 ) :op2 ( sit-01 :arg1 aircraft :arg2 20:40 :time final ) )
block-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg3 judge-01 ) ) :arg1 ( law :arg0-of ( abort-01 :arg1 ( clinics :mod abort-01 :quant all ) :arg1-of possible-01 ) ) :duration temporary
multi-sentence :snt1 ( begin-01 :arg1 ( career :mod tv :poss he ) :location ( mid-1970s :arg1-of long-03 ) ) :snt2 ( mimic/comedian :mode expressive :mod only :prep-on tv :domain i )
and :op1 ( know-03 :arg0 ( person_name_0 :arg0-of ( have-org-role-91 :arg1 ( nationalist :mod country_name_1 ) :arg2 boss ) ) :arg1 this ) :op2 ( cause-01 :arg1 ( question-03 :arg0 person :arg1 ( and :op1 ( will-02 :arg0 person :arg1 ( respect-01 :arg0 person :arg1 ( sovereign :mod '' ) ) ) :op2 ( start-01 :arg0 person :arg1 ( promote-02 :arg0 person :arg1 ( currency :arg1-of single-02 :beneficiary ( and :op1 country_name_2 :op2 country_name_3 ) ) ) ) ) ) :medium ( debate-01 :medium television ) :arg1-of repeat-01 )
cause-01 :arg0 ( look-01 :arg0 we :arg1 ( picture :mod ( big :degree more ) ) ) :arg1 ( surface :part-of ( hose :location space ) )
begin-01 :arg1 ( career :medium television :poss he ) :arg1-of ( cause-01 :arg0 ( '' :arg0 ( man :arg1-of black-05 :arg1-of black-05 :mod only ) :medium television ) )
have-rel-role-91 :arg0 ( person :arg0-of ( have-rel-role-91 :arg1 ( child :quant num_0 ) :arg2 child ) ) :arg1 ( person :arg0-of ( have-rel-role-91 :arg1 child :arg2 child ) ) :arg2 ( person :arg0-of ( know-01 :arg1 ( pregnancy :arg1 ( pregnancy :arg0 person ) ) :arg1-of allege-01 ) ) :mod just
and :op1 ( realize-01 :arg0 ( person :mod country_name_0 ) :arg1 ( need-01 :arg0 ( person :arg0-of work-01 ) :arg1 ( organize-01 :arg0 person :arg1 ( and :op1 ( organize-01 :arg0 person ) :op2 ( promote-02 :arg0 person ) ) ) ) ) :op2 ( infer-01 :arg1 ( include-01 :arg1 ( right-05 :arg1 person :arg2 ( create-01 :arg0 person :arg1 association :purpose ( and :op1 ( safeguard-01 :arg0 person :arg1 association ) :op2 ( improve-01 :arg0 person :arg1 ( and :op1 ( person :arg0-of ( work-01 :mod work-01 ) ) :op2 ( person :mod every :arg0-of ( occupy-01 :mod every ) ) ) :mod every ) ) ) ) :arg1-of open-04 ) :arg2 ( person :arg0-of work-01 ) )
possible-01 :arg1 ( see-01 :arg0 ( report :mod such ) :arg1 ( fan :location country_name_0 ) :time ( ordinal-entity ordinal-entity_num_0 ) )
and :op1 ( visit-01 :quant num_0 :arg1 ( person :quant num_0 ) ) :op2 ( be-located-at-91 :arg1 person :arg2 ( top :part-of ( traffic :mod internet ) ) :ord ( ordinal-entity ordinal-entity_num_1 ) )
cause-01 :arg0 ( hit-01 :arg0 ( and :op1 man :op2 woman ) :arg1 ( expression :mod ( common :degree most ) :beneficiary ( and :op1 man :op2 woman ) ) :time at-first ) :arg1 ( become-01 :arg1 hug :arg2 ( expression :mod ( common :degree most ) :beneficiary ( and :op1 man :op2 woman ) ) :time at-first )
kill-01 :arg0 he :arg1 policeman :location ( location_name_0 :arg1-of ( arm-01 :polarity - ) :mod young :arg1-of ( arm-01 :polarity - ) ) :time ( begin-01 :arg1 month )
lead-03 :arg0 it :arg2 ( vyskakovali :arg1 country_name_0 :mod large )
come-01 :arg1 ( thing :arg2-of ( result-01 :arg1 divide-02 ) )
obligate-01 :arg1 we :arg2 ( examine-01 :arg0 we :arg1 ( hose :prep-with ( resolution :mod ( good :degree more ) :arg1-of significant-02 ) ) )
answer-01 :arg1 ( and :op1 ( assume-01 :arg0 person_name_0 :arg1 line :manner quiet ) :op2 ( and :op1 ( express-01 :arg0 you :arg1 ( person_name_1 :arg0-of ( have-org-role-91 :arg1 swedish :arg2 mathematician ) ) :manner quiet ) :op2 ( clarified :arg0 person :arg1 ( state-01 :arg1 ( possible-01 :arg1 ( have-03 :arg0 ( geometry :name ( name :op1 spatial :op2 geometry ) :poss ( universe :poss we ) ) :arg1 ( dimensions :mod large ) ) ) ) ) ) ) :arg2 ( curled :arg0 i :arg1 dimensions )
person :arg0-of play-01 :mod even :arg0-of ( participate-01 :arg1 ( hat-trick :mod golden ) )
question-01 :arg1 ( believe-01 :arg0 you :arg1 amr-unknown ) :time ( debate-01 :arg0 believe-01 :arg1 ( thing :quant ( about :op1 num_0 ) :arg1-of ( conflict-01 :accompanier ( religion :poss they ) ) ) )
multi-sentence :snt1 ( come-01 :arg1 ( person_name_0 :mod ( school :mod soon ) :mod that ) :arg4 organization_name_1 :time soon ) :snt2 ( recommend-01 :arg0 he :arg1 ( follow-02 :arg0 he :arg1 ( say-01 :arg0 he :arg1 ( buy-01 :arg0 you :arg1 ( book :mod right ) ) :arg1-of ( conform-01 :arg2 isbn ) ) ) )
and :op1 ( suffer-01 :arg0 ( country_name_0 :arg1-of ( suffer-01 :arg0 ( person :quant ( between :op1 num_0 :op2 num_1 ) ) ) ) :arg1 ( person :quant ( approximately :op1 num_0 ) ) ) :op2 ( undergo-28 :arg1 ( person :quant num_1 :arg0-of ( have-rel-role-91 :arg2 patient ) ) :arg2 ( treat-03 :arg0 person :arg1 ( cell :mod stem ) :manner experiment-01 ) )
multi-sentence :snt1 ( have-03 :arg0 he :arg1 problem :prep-with it :time ( young :domain he ) ) :snt2 ( remember-01 :mode imperative :arg0 you :arg1 ( and :op1 ( lay :arg1 ( face :part-of he ) :arg2 ( face :part-of he ) :source ( face :part-of he ) ) :op2 ( lay :arg0 he :duration ( temporal-quantity temporal-quantity_num_0 :unit hour ) ) ) )
obligate-01 :arg1 i :arg2 ( chance-02 :arg0 i :arg1 ( chance-02 :arg0 i ) )
multi-sentence :snt1 ( destroy-01 :mod particular ) :snt2 ( cause-01 :arg0 ( cancer :mod amr-unknown ) :arg1 ( cancer :mod amr-unknown :arg0-of ( cause-01 :arg1 ( cancer :mod kill ) ) ) )
and :op1 ( mean-01 :arg1 ( resolution :arg0-of ( oppose-01 :arg1 ( person :arg0-of ( have-org-role-91 :arg3 judge-01 ) ) ) ) :arg2 ( possible-01 :arg1 ( carrying :arg0 doctor :arg1 ( abortions :arg1-of legal-02 ) :duration temporary ) ) ) :op2 ( obligate-01 :arg2 ( obtain-01 :arg0 doctor :arg1 permit-01 ) :time meantime )
know-01 :arg0 we :arg1 ( thing :arg0-of cause-01 ) :frequency sometimes
water :domain water
and :op1 ( reiterated :arg0 ( call-02 :arg0 ( political-party_name_0 :poss i ) :arg1 ( call-02 :arg0 ( party :poss i ) :arg1 government-organization_name_0 ) ) :arg1 ( possible-01 :arg1 ( win-01 :arg0 ( side :mod this ) :arg1 ( elect-01 :mod early ) ) ) ) :op2 ( ready-02 :arg1 country :arg2 ( follow-02 :arg0 country :arg1 country ) )
and :op2 ( refer-01 :arg0 you :arg1 ( newspaper_name_0 :arg0-of ( enter-01 :arg1 ( shoe :mod human ) ) ) :time ( refer-02 :arg0 you :arg1 you :arg2 ( word :mod '' :poss god ) ) )
even :op1 ( plane :mod racing )
and :op2 ( worry-02 :mode imperative :arg0 you :arg1 person_name_0 )
imagine-01 :mode imperative :arg0 you :arg1 ( perimeter :arg0 we :arg1 ( perimeter :mod ( thick :degree relative ) :arg1-of black-05 ) )
cause-01 :arg0 ( write-01 :arg0 i :arg1 ( something :topic it ) ) :arg1 ( deafen :domain it ) :time ( write-01 :arg0 i :arg1 ( something :topic it ) )
refuse-01 :arg0 country_name_0 :arg1 ( give-01 :arg0 country :arg1 power :arg2 ( choose-01 :arg0 country :arg1 ( promise-01 :arg0 country :arg2 ( choose-01 :arg0 ( person :arg0-of lead-02 ) :arg1 revenge ) ) ) )
say-01 :arg1 ( thing :arg2-of ( advise-01 :arg0 you :arg1 ( and :op1 ( person :arg0-of ( have-org-role-91 :arg1 separatist :arg2 soldier ) ) :op2 ( person :arg0-of ( have-org-role-91 :arg1 country_name_1 :arg2 soldier ) ) ) ) ) :arg2 amr-unknown
something :polarity - :topic ( recommend-01 :arg1 ( and :op1 ( know-01 :arg0 child ) :op2 ( something :polarity - :arg1-of ( experience-01 :arg1-of recommend-01 ) ) ) )
evaluate :polarity - :arg0 ( study :mod ( c. :mod sub ) )
contrast-01 :arg2 ( contrary-01 :arg1 ( amount :quant-of ( amount :quant ( less-than :op1 num_0 ) ) ) :arg2 ( '' :quant num_1 :mod only ) ) :arg1-of ( contrary-01 :arg2 ( estimate-01 :time initial ) )
multi-sentence :snt1 ( increase-01 :arg0 ( tax-01 :arg2 ( tax-01 :arg3 ( tax-01 :arg3 ( tax-01 :arg3 ( tax-01 :arg3 ( monetary-quantity monetary-quantity_num_0 :unit ( dollar :mod renminbi ) ) :arg1-of personal-02 ) ) ) ) ) :arg1 ( thing :arg1-of ( tax-01 :arg3 ( thing :arg1-of ( tax-01 :arg3 ( thing :arg1-of ( tax-01 :arg3 ( thing :arg1-of ( tax-01 :arg3 ( thing :arg2-of ( cost-01 :arg1 ( thing :arg2-of ( cost-01 :arg1 ( thing :arg2-of ( cost-01 :arg1 ( thing :arg2-of ( cost-01 :arg1 ( thing :arg2-of ( cost-01 :arg1 ( thing :arg2-of price-01 ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) :snt2 ( increase-01 :arg1 ( rate-entity-91 :arg1 ( percentage-entity percentage-entity_num_0 ) :arg2 ( temporal-quantity temporal-quantity_num_1 :unit year ) ) :arg4 ( monetary-quantity monetary-quantity_num_1 :unit ( dollar :mod country_name_0 ) ) )
room :quant num_0 :mod only :condition ( be-located-at-91 :arg2 life )
say-01 :arg0 you :arg1 amr-unknown :arg2 ( perform-01 :arg0 he )
and :op1 ( analyzed :arg0 ( person :arg0-of research-01 ) :arg1 ( record :mod medicine :mod ( more-than :op1 ( slash :op1 ( more-than :op1 ( monetary-quantity monetary-quantity_num_0 ) ) :op2 ( slash :op1 ( temporal-quantity temporal-quantity_num_1 :unit year ) :op2 ( temporal-quantity temporal-quantity_num_1 :unit year ) ) ) ) ) ) :op2 ( find-01 :arg0 person :arg1 ( temporal-quantity temporal-quantity_num_2 :unit year :mod only ) :time ( after :op1 ( live-01 :arg0 person ) ) )
multi-sentence :snt1 ( say-01 :arg0 ( and :op1 ( person_name_0 :arg0-of ( have-org-role-91 :arg1 ( company :arg0-of develop-02 ) :arg2 chairman ) ) :op2 ( person :arg0-of ( have-org-role-91 :arg1 ( company :arg0-of develop-02 ) :arg2 chairman ) ) :op3 ( person :arg0-of ( have-org-role-91 :arg1 ( company :arg0-of develop-02 ) :arg2 chairman ) ) :op4 ( person :arg0-of ( have-org-role-91 :arg1 ( company :arg0-of develop-02 ) :arg2 chairman ) ) :op4 ( person :arg0-of ( have-org-role-91 :arg1 ( company :arg0-of develop-02 ) :arg2 chairman ) ) :op5 ( person :arg0-of ( have-org-role-91 :arg1 ( company :arg0-of develop-02 ) :arg2 chairman ) ) ) :arg1 ( '' :arg1 market ) :time ( since :op1 ( begin-01 :arg1 ( market :time current :mod finance ) :location ( point :arg1-of high-02 ) ) ) ) :snt2 ( adds :arg0 he )
contrast-01 :arg1 ( possible-01 :arg1 ( tell-01 :arg0 he :arg1 ( '' :arg1 she ) :arg2 she ) ) :arg2 ( soon :degree too )
recommend-01 :arg1 ( leave-11 :arg0 it )
and :op1 ( understand-01 :arg0 i :arg1 this ) :op2 ( and :op1 ( eye :part-of he ) :op2 ( eye :part-of he ) :domain ( eye :part-of he ) :extent whole :arg1-of ( cause-01 :arg0 ( and :op1 ( long-03 :arg1 ( eye :part-of he ) :arg2 whole ) :op2 ( thin-03 :arg1 ( hose :mod ( garden :polarity - ) ) :beneficiary ( person :mod whole ) ) ) ) )
cause-01 :arg0 ( reform-01 :arg0 ( person :arg0-of ( lead-02 :arg1 country_name_0 ) ) :mod politics ) :arg1 ( worry-02 :arg0 ( person :arg0-of lead-02 :mod country_name_1 ) :arg1 ( extend-01 :arg1 ( require-01 :arg1 democratization ) :arg2 ( city :mod other ) ) :mod main )
place :polarity - :beneficiary he :domain it :condition ( like-01 :polarity - :arg0 someone :arg1 crowd )
gasped :mod world :time ( bring-01 :arg0 ( alyonu :mod little ) :arg1 ( arm :part-of country_name_0 ) :arg2 ( arm :part-of country_name_1 ) ) :li num_0
contrast-01 :arg2 ( possible-01 :arg1 ( more :quant much ) )
say-01 :arg0 ( person_name_0 :arg0-of ( have-rel-role-91 :arg1 he :arg2 mother ) ) :arg1 ( pain :arg1 pain-01 :time always :location here ) :li num_0
and :op2 ( succeed-01 :arg1 it )
say-01 :arg0 ( person_name_0 :arg0-of ( have-rel-role-91 :arg1 she :arg2 ( daughter :mod eleven-year-old ) ) ) :arg1 ( odd :domain ( go-01 :arg1 it :direction back :destination school ) :mod ( odd :degree bit ) )
continue-01 :arg1 team
enough :mod small :domain ( reveal-01 :arg1 she ) :condition ( small :domain ( size :poss ( dimension :mod extra ) ) ) :mod enough :arg1-of ( cause-01 :arg0 ( over :op1 ( strength :poss ( instrument :arg1-of modern-02 :location enlargement ) ) ) )
have-03 :arg0 longest :arg1 ( temporal-quantity temporal-quantity_num_0 :unit month )
cause-01 :arg0 amr-unknown :arg1 ( come-01 :polarity - :arg1 ( and :op1 nervous :op2 other :quant some ) :location here :arg1-of ( cause-01 :arg0 amr-unknown ) )
do-02 :polarity - :arg0 it :arg1 life
and :op1 ( return-01 :arg1 person_name_0 :arg4 pentatonice ) :op2 ( try-01 :arg0 person :arg1 ( put-01 :arg0 person :arg1 it :arg2 together :manner together ) ) :time ( time :mod next )
contrast-01 :arg1 ( refuse-01 :arg0 ( part :part-of nobody ) :arg1 ( image :mod false ) ) :arg2 ( grant-01 :arg0 ( image :arg1-of question-01 :quant several ) :arg1 image :time already )
and :op1 ( arrest-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg3 judge-01 ) ) :arg1 ( person :arg0-of ( have-org-role-91 :arg1 ( police :mod state ) :arg3 ( apprentice-01 :arg0 person ) ) ) :arg3 ( connect-01 :arg1 person :arg2 corrupt-01 ) ) :op2 ( hear-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg3 judge-01 ) ) :arg1 person )
fall-01 :arg1 ( economy :mod ( large :degree ( most :ord ( ordinal-entity ordinal-entity_num_0 ) ) :compared-to country_name_0 ) ) :arg4 ( num_1 :quant num_1 )
multi-sentence :snt1 ( amr-unknown
multi-sentence :snt1 ( resemble-01 :arg1 ( thing :arg1-of ( resemble-01 :arg2 ( thing :arg1-of ( require-01 :arg0 politician ) ) ) :mod great ) :arg2 ( thing :arg1-of ( require-01 :arg0 politician ) ) :mod great ) :snt2 ( come-01 :polarity - :arg1 ( thing :arg1-of require-01 ) )
and :op1 ( begin-01 :arg1 ( career :arg1-of consult-01 ) :location organization_name_0 ) :op2 ( continue-01 :arg1 ( and :op1 organization_name_1 :op2 bombadier :op3 ( organization_name_3 :mod media ) :op4 ( organization_name_3 :mod media ) ) )
announce-01 :arg0 company :arg1 ( sell-01 :arg0 company :arg1 ( estate :mod real ) :time ( since :op1 ( end-01 :arg1 year ) ) :time ( since :op1 ( end-01 :arg1 year ) ) :arg1-of ( cause-01 :arg0 ( before :op1 ( crisis :time ( date-entity month_date-entity_0 day_date-entity_0 ) :location ( before :op1 ( crisis :location ( thing :quant num_2 ) ) ) ) ) ) )
cause-01 :arg1 ( and :op1 ( altered :arg1 bible :manner deliberate ) :op2 ( altered :arg1 ( and :op1 ( reason :mod religious ) :op2 ( reason :mod religious ) ) ) )
contrast-01 :arg2 ( remove-01 :arg0 they :arg1 ( book :quant num_0 :arg0-of ( cause-01 :arg1 ( and :op1 ( book :quant ( more :degree so ) ) :op2 ( book :arg1-of ( approve-01 :arg0 book ) ) ) ) ) )
and :op1 ( try-01 :arg0 i :arg1 ( clap :arg0 i :arg1 ( everyone :arg0-of ( offer-01 :arg1 hand ) ) ) ) :op2 ( advise-01 :arg0 i :arg1 ( person :quant num_0 :arg1-of ( include-91 :arg2 ( person :arg0-of ( have-org-role-91 :arg2 head-of-state ) ) :arg3 ( half :mod such ) ) ) :mod also )
deny-01 :arg0 ( person_name_0 :arg1-of ( include-91 :arg2 ( person :quant num_0 :location peninsula_name_1 ) :arg3 ( charge-05 :mod anstrutheru ) ) ) :arg1 ( person :quant num_0 :arg0-of ( have-org-role-91 :arg2 -rrb- ) ) :location court
multi-sentence :snt1 person_name_0 :snt2 ( lead-03 :arg0 ( league :mod football :arg0-of ( lead-03 :arg2 ( point :location ( in-front-of :op1 ( and :op1 country_name_1 :op2 '' :mod both ) ) ) ) ) :arg2 point )
day :ord ( ordinal-entity ordinal-entity_num_0 :range ( day :ord ( ordinal-entity ordinal-entity_num_0 ) :part-of spring ) ) :arg0-of ( impact-01 :arg1 ( fly-01 :location ( airport :location location_name_0 ) ) )
take-01 :arg1 ( schoolchildren :mod ( small :degree most ) ) :arg4 ( class :poss they ) :arg1-of ( cause-01 :arg0 ( wait-01 :arg1 ( person :arg0-of teach-01 ) :arg2 ( arrive-01 :arg1 person :arg3 ( person :arg0-of ( have-org-role-91 :arg2 president ) ) ) ) )
prohibit-01 :arg1 asbestos :arg2 ( country :quant ( more-than :op1 num_0 ) ) :concession ( continue-01 :arg1 ( use-01 :arg1 ( asbestos :mod white ) :arg2 ( material :arg1-of cheap-02 ) ) :location ( part :part-of world :quant many ) )
contrast-01 :arg2 ( nova :arg0 ( program :mod news :mod main ) :arg1 ( show-04 :medium tv ) :time still )
return-01 :arg1 person_name_0 :arg4 camera :manner dramatic
constricted :arg1 ( heart :part-of she ) :arg1-of ( cause-01 :arg0 ( fact :domain ( take-01 :arg0 ( person :quant ( few :op1 ( temporal-quantity temporal-quantity_num_0 :unit month ) ) ) :arg1 she ) ) )
multi-sentence :snt1 ( say-01 :arg0 ( person_name_0 :arg0-of ( have-org-role-91 :arg2 marine ) ) :arg1 ( say-01 :arg0 person :arg1 ( expect-01 :polarity - :arg0 person :arg1 ( person_name_1 :mod new :arg0-of ( govern-01 :arg1 government-organization ) :mod new ) :time ( before :op1 now :quant ( few :op1 ( temporal-quantity temporal-quantity_num_0 :unit month ) ) ) ) ) ) :snt2 ( right-06 :mode interrogative :degree extreme )
admit-01 :arg0 he :arg1 it
contrast-01 :arg2 ( ignore-01 :arg0 creationists :arg1 this :mod still )
behave :arg0 he :arg1 ( girl :mod teenage )
call-03 :arg0 country_name_0 :arg1 ( and :op1 ( disarm-01 :arg0 organization_name_1 ) :op2 ( recover-01 :arg1 ( body :consist-of ( person :quant num_0 :arg0-of ( have-org-role-91 :arg2 soldier ) ) ) ) ) :arg2 war
rounds :arg1 ( dimension :mod additional ) :mod ( important :degree most ) :arg1-of ( cause-01 :arg0 ( suggest-01 :arg0 ( erroneously :name ( name :op1 two-dimensional :op2 erroneously ) :mod two-dimensional ) ) ) :mod ( important :degree most )
and :op1 ( have-03 :arg0 we :arg1 ( game :mod ( good :degree more ) ) :time already ) :op2 ( threaten-01 :arg0 we :arg2 ( situation :mod standard :mod only ) ) :time already :ord ( ordinal-entity ordinal-entity_num_0 )
contrast-01 :arg1 ( sentence-01 :arg1 i :arg2 ( thing :arg2-of ( sentence-01 :arg1 i ) ) :time now ) :arg2 ( hold-01 :arg0 i :arg1 ( contradiction :mod irreconcilable ) )
and :op2 ( come-01 :arg1 ( person :quant ( about :op1 num_0 ) ) :arg4 location_name_0 :time ( meet-03 :arg1-of ( describe-01 :arg2 ( anti-summit :arg1 person ) ) ) )
and :op1 ( become-01 :arg1 ( person :arg0-of ( play-01 :location organization_name_0 ) ) :arg2 ( person :quant num_0 :arg1-of ( include-91 :arg2 ( person :quant num_1 :arg0-of ( have-org-role-91 :arg1 organization :arg3 play-01 ) ) ) ) :time ( weekend :mod last ) ) :op2 ( win-01 :arg0 person :arg1 ( rate-entity-91 :arg1 ( monetary-quantity monetary-quantity_num_2 :unit dollar :mod incredible ) :arg2 ( temporal-quantity temporal-quantity_num_1 :unit week ) :mod only ) ) :time ( weekend :mod last )
multi-sentence :snt1 ( volejbalist :mode interrogative ) :snt2 ( bring-01 :mode imperative :arg0 you :arg1 ( record :mod audience ) :location city_name_0 )
receive-01 :arg0 ( stalls :quant num_0 :mod parking ) :arg1 ( year :quant ( approximately :op1 num_1 ) )
contrast-01 :arg1 ( clear-06 :polarity - :arg1 ( or :mode interrogative :op1 ( want-01 :arg0 she :arg1 ( save-02 :arg0 she :arg1 toad ) ) :op2 ( want-01 :arg0 she :arg1 ( eat-01 :arg0 she :manner alone ) ) ) ) :arg2 ( relevant-01 :arg1 that )
lend-01 :arg0 ( book :mod this ) :arg1 ( form :mod ( licence :mod electronics ) :arg1-of ( valid-02 :arg2 ( period :mod certain :arg1-of ( valid-02 :arg2 ( and :op1 organization_name_0 :op2 country_name_1 :op3 organization_name_2 ) ) ) ) ) :mod essential :frequency sometimes
and :op1 all-students :op2 nurse :op3 custom :op4 ( use-01 :arg1 gatekeepers-corridor )
and :op1 ( picked :arg1 ( person :quant num_0 :mod young :arg0-of tour-01 ) :arg2 plane ) :op2 ( take-01 :arg1 person :arg3 safe-01 ) :time ( after :op1 ( spend-02 :arg0 person :arg1 night :location ( location_name_0 :location state_name_1 ) ) )
say-01 :arg0 ( person :arg0-of ( represent-01 :arg1 country_name_0 ) ) :arg1 ( violate-01 :arg1 privacy :arg1-of clear-06 )
increase-01 :arg1 ( tax-01 :arg3 ( below :op1 average-01 ) ) :location state_name_0 :mod only
survive-01 :arg0 amr-unknown :manner holiday
contrast-01 )
say-01 :arg0 ( person_name_0 :arg1-of ( place-01 :arg2 ( outside :op1 ( compete-01 :location ( outside :op1 ( compete-01 :arg1-of ( place-01 :arg2 ( outside :op1 ( compete-01 :arg1-of ( place-01 :arg2 spirit ) ) ) ) ) ) ) ) ) ) :arg1 ( role :mod profane :poss person_name_2 :arg1-of ( close-10 :arg2 depression :time ( end-01 :arg1 ( and :op1 ( career :poss person ) :op2 ( life :arg1-of personal-02 ) ) ) ) ) :arg1-of ( place-01 :arg2 ( outside :op1 ( compete-01 :arg1-of ( place-01 :arg2 ( outside :op1 ( compete-01 :location ( outside :op1 ( compete-01 :arg1-of ( place-01 :arg2 ( outside :op1 compete-02 ) ) ) ) ) ) ) ) ) )
say-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg1 organization_name_0 :arg2 director ) :arg0-of ( have-org-role-91 :arg1 organization :arg2 director ) ) :arg1 ( be-located-at-91 :arg1 ( and :op1 city_name_1 :op2 city_name_2 ) :arg2 market )
cause-01 :arg0 ( new-01 :arg1 car :arg1-of complete-02 ) :arg1 ( think-01 :arg0 i :arg1 ( something :arg1-of ( resemble-01 :arg2 this ) ) :time ever )
and :op1 ( force-01 :arg1 ( person :mod country_name_0 ) :arg2 ( choose-01 :arg0 person :arg1 ( between :op1 ( society :mod civil :mod country_name_1 ) :op2 ( financier :mod city ) ) ) ) :op2 ( fall-07 :arg1 person :arg2 ( trapped :mod this ) )
fear-01 :arg0 i :arg1 ( at-least :op1 ( product-of :op1 num_0 :op2 num_1 ) ) :time always
say-01 :arg0 ( person_name_0 :arg0-of ( have-org-role-91 :arg1 ( government-organization :arg0-of ( govern-01 :arg1 country_name_2 ) ) :arg2 spokesman ) ) :arg1 ( look-02 :arg0 ( action :mod military ) :arg1 ( attempt-01 :arg0 action :arg1 ( overthrow-01 :arg0 action :arg1 ( government-organization :arg0-of govern-01 ) ) ) )
contrast-01 :arg1 ( be-located-at-91 :arg1 person_name_0 :arg2 ( war-01 :arg0 doctor ) ) :arg2 ( do-02 :polarity - :arg0 we :mod certain )
differ-02 :arg1 it :mod such :arg1-of ( cause-01 :arg0 amr-unknown )
return-01 :arg1 we :location ( south :part-of country_name_0 ) :purpose ( seek-01 :arg0 we :arg1 ( victim :quant some :arg1-of ( include-91 :arg2 victim ) :arg0-of ( escape-01 :arg1 ( die-01 :arg1 victim ) ) ) ) :time ( after :op1 ( temporal-quantity temporal-quantity_num_0 :unit year ) )
want-01 :polarity - :arg0 they :arg1 ( play-01 :arg0 they :arg1 ( game :quant ( more :mod any ) ) :arg2 ( oligarch :mod country_name_0 ) )
multi-sentence :snt1 ( allow-01 :arg0 it :arg1 ( capture-01 :arg0 you :arg1 ( light :quant more ) :location ( photos-the :arg1-of ( deep-02 :degree more ) ) ) :mod also ) :snt2 ( see-01 :arg0 you )
remain-01 :arg1 ( person :arg0-of ( remain-01 :arg1 person :arg3 dishes ) ) :arg3 ( plumbers :arg1 person )
multi-sentence :snt1 ( and :op1 ( turn-02 :arg0 ( and :op1 she :op2 ( person :arg0-of ( have-rel-role-91 :arg1 man :arg2 shoulders ) ) :op3 ( person :arg0-of ( have-rel-role-91 :arg1 man :arg2 slumped ) ) :op4 ( person :arg0-of ( have-rel-role-91 :arg1 man :arg2 defeated ) ) :op5 ( person :arg0-of ( have-rel-role-91 :arg1 man :arg2 defeated ) ) :op6 ( person :arg0-of ( have-rel-role-91 :arg1 man :arg2 defeated ) ) :op6 ( person :arg0-of ( have-rel-role-91 :arg1 man :arg2 defeated ) ) :op7 ( person :arg0-of ( have-rel-role-91 :arg1 man :arg2 child ) ) :op7 ( person :arg0-of ( have-rel-role-91 :arg1 man :arg2 child ) ) ) :arg1 ( find-01 :arg0 person :arg1 ( look-02 :arg1 this ) ) ) ) :snt2 ( have-concession-91 :arg1 ( find-02 :arg0 person :arg1 ( look-02 :arg1 this ) ) :arg2 ( possible-01 :polarity - :arg1 ( recall-02 :arg0 she :arg1 ( moment :arg1-of single-02 :time-of ( see-01 :arg0 she :arg1 it :time before ) ) ) ) )
prompt-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg1 ( police :location location_name_0 ) :arg2 police ) ) :arg1 ( and :op1 ( stop-01 :arg1 person ) :op2 ( drive-01 :arg0 person ) )
value-01 :arg0 organization_name_0 :arg1 ( monetary-quantity monetary-quantity_num_0 :unit ( dollar :mod country_name_1 ) :arg1-of ( value-01 :arg2 market ) ) :arg2 ( monetary-quantity monetary-quantity_num_2 :unit ( dollar :mod country ) :arg1-of ( value-01 :arg2 market ) ) :arg1-of ( cause-01 :arg0 ( compete-01 :arg0 company :arg1 ( and :op1 ( person :arg0-of ( compete-02 :arg1 company :mod ( large :degree more ) ) ) :op2 ( person :arg0-of ( compete-02 :arg3 ( company :arg0-of compete-02 :mod ( large :degree more ) ) ) ) ) :op3 ( access-01 :arg1 ( ship :mod ( cruise :mod luxury ) ) ) :op4 ( person :mod wealth :arg0-of ( have-rel-role-91 :arg1 company :arg2 uncle ) ) ) )
struggle-02 :arg0 ( person_name_0 :arg0-of ( have-org-role-91 :arg2 diagnosis ) ) :arg1 ( struggle-02 :arg0 person ) :time still :time ( since :op1 ( year :quant 1/2 ) )
ensure-01 :arg1 ( close-01 :arg1 ( and :op1 battery :op2 ( sections :mod other ) ) :arg1-of firm-03 ) :concession ( even-if :op1 ( have-03 :arg0 you :arg1 camera ) )
and :op2 ( person_name_0 :mode interrogative )
have-concession-91 :arg2 ( get-01 :arg0 ( person :arg0-of smoke-02 :quant some ) :arg1 ( cancer :mod lung ) :arg1-of ( cause-01 :arg0 ( cancer :mod lung ) ) )
multi-sentence :snt1 ( good :degree more :domain ( grow-01 :arg1 ( grow-01 :mod some ) ) :concession ( grow-01 :polarity - :arg1 grow-01 :mod at-least ) ) :snt2 ( become-01 :arg1 grow-01 :arg2 ( apparent :arg1-of increase-01 ) ) :snt3 ( become-01 :arg1 ( person_name_0 :arg0-of ( have-org-role-91 :arg1 organization_name_1 :arg2 chief ) ) :arg2 ( apparent :arg1-of increase-01 ) )
quote-01 :arg0 ( publication_name_0 :time ( day :mod day ) ) :arg1 ( impact-01 :arg0 ( person :arg0-of ( own-01 :arg1 business ) ) :arg1 ( business :poss person ) :manner serious ) :arg2 ( person :arg0-of ( own-01 :arg1 business ) )
and :op1 ( pass-01 :arg1 ( unit :mod ground :mod this ) :time final ) :op2 ( be-located-at-91 :arg1 ( unit :mod ground :mod this ) :arg2 ( force :quant num_0 :arg1-of ( include-91 :arg2 ( force :poss unit ) :time ( during :op1 ( location_name_0 :mod port ) ) :arg1-of ( remain-01 :arg3 ( power :poss ( troop :mod port ) ) ) ) ) )
encourage-01 :arg0 ( and :op1 country_name_0 :op2 ( person_name_2 :arg0-of ( have-org-role-91 :arg2 general ) ) :op3 ( person_name_2 :arg0-of ( have-org-role-91 :arg2 general ) ) ) :arg1 country :arg2 ( adopt-01 :arg0 country :arg1 ( constitution :arg1-of ( design-01 :arg3 ( ensure-01 :arg0 constitution :arg1 ( replace-01 :arg1 ( person_name_3 :arg0-of ( have-org-role-91 :arg1 military :arg2 autocracy ) ) :arg2 ( ensure-01 :arg0 person :arg1 ( replace-01 :arg1 ( person_name_3 :arg0-of ( have-org-role-91 :arg1 military :arg2 autocracy ) ) ) ) ) ) ) ) ) :time ( after :op1 ( occupy-01 :arg0 country :arg1 country :time war ) )
stop-01 :arg0 we :arg1 ( count-01 :arg1 ( thing :quant-of ( person :arg1-of ( help-01 :arg0 ( person :quant many ) ) ) ) ) :time ( before :op1 now :quant long )
hope-01 :arg0 we :arg1 ( and :op1 ( peace :time last ) :op2 ( gain-02 :arg0 child :arg1 ( knowledge :arg1-of ( useful-05 :time future ) ) ) )
thing :quant num_0 :domain ( look-01 :arg1 ( and :op1 ( person :arg0-of ( have-rel-role-91 :arg1 he :arg2 friend ) ) :op2 ( person :arg0-of ( have-rel-role-91 :arg1 he :arg2 friend ) ) :op3 ( person :arg0-of ( have-rel-role-91 :arg1 he :arg2 friend ) ) :op4 ( person :arg0-of ( have-rel-role-91 :arg1 he :arg2 friend ) ) :op5 ( person :arg0-of ( have-rel-role-91 :arg1 he :arg2 friend ) ) :op6 ( person :arg0-of ( have-rel-role-91 :arg1 he :arg2 friend ) ) :op6 ( person :arg0-of ( have-rel-role-91 :arg1 he :arg2 friend ) ) :op6 ( person :arg0-of ( have-rel-role-91 :arg1 he :arg2 friend ) ) :op7 ( person :arg0-of ( have-rel-role-91 :arg1 he :arg2 friend ) ) :op7 ( person :arg0-of ( head-01 :arg1 ( call-02 :arg1 duty ) ) ) ) :mod ( another :mod quite ) ) :time morning
say-01 :arg0 group :arg1 ( stop-01 :arg0 ( doctor :mod this ) :arg1 ( surgery-01 :arg1 doctor :arg2 surgery-01 ) :mod also :condition ( force-01 :arg1 ( doctor :quant all :location state ) :arg2 ( stop-01 :arg0 doctor :arg1 abortions ) ) )
person_name_0 :quant num_0
content-01 :arg1 you :arg2 ( perform-01 :arg0 he ) :manner amr-unknown
two-dimensional :arg1 ( surface :quant num_0 :arg1-of long-03 :arg1-of ( show-01 :arg0 ( and :op1 ( dimension :arg1-of straight-04 ) :op2 ( dimension :location ( direction :name ( name :op1 circumferential ) ) ) :arg1-of ( designate-01 :arg2 ( arrow :mod circular ) ) ) ) ) :arg2 ( and :op1 short :op2 bigot )
contrast-01 :arg1 ( have-rel-role-91 :arg0 ( person :arg0-of ( have-rel-role-91 :arg1 ( child :mod both ) :arg2 child ) ) :arg1 ( person :arg0-of ( have-rel-role-91 :arg1 child :arg2 child ) ) :arg2 ( person :arg0-of ( have-rel-role-91 :arg1 child :arg2 child ) ) :mod just ) :arg2 ( know-01 :polarity - :arg0 person :arg1 ( pregnancies :arg1 person :arg1-of allege-01 ) )
contrast-01 :arg1 ( know-01 :arg0 i :arg1 ( right-06 :polarity - :arg1 i ) ) :arg2 ( and :op1 ( come-01 :arg1 ( thing :arg2-of ( solve-01 :arg0 i ) ) :arg4 i :time ( moment :mod this ) ) :op2 ( concealing :arg0 he :arg1 ( indignation :poss defendant :arg1-of ( suppose-02 :arg2 ( and :op1 ( relation-03 :arg0 man :arg2 man ) :op2 ( fear-01 :arg0 he ) ) ) ) ) )
say-01 :arg0 person_name_0 :arg1 ( problem :polarity - :domain ( meet-03 :arg1-of general-02 :arg1-of general-02 ) :prep-with it )
multi-sentence :snt1 ( think-01 :arg0 i :arg1 that ) :snt2 ( lie-08 :mode imperative :arg0 you )
contrast-01 :arg2 ( hold-01 :arg0 ( body :poss she ) :arg1 ( shape :poss body ) )
multi-sentence :snt1 person_name_0 :snt2 ( possible-01 :arg1 ( find-01 :arg0 company_name_1 :arg1 supervisor :purpose ( time :arg1-of tough-02 ) ) )
possible-01 :arg1 ( view-02 :arg1 ( leakage :arg1 ( image :mod naked :poss nobody ) ) :arg2 ( reminder :arg1 ( use-01 :arg1 ( service :mod online ) :manner safe-01 ) ) )
advantage :domain it :time ( have-03 :arg0 you :arg1 ( temporal-quantity temporal-quantity_num_0 :unit day :mod together ) )
say-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg1 country_name_0 :arg3 ( lead-02 :arg0 person ) ) ) :arg1 ( bad-07 :arg1 ( diagnosis :arg0 person :arg1 problem ) :arg1-of ( cause-01 :arg0 ( little :degree very :domain disease ) ) )
alternative :arg1-of ( popular-02 :arg2 ( book :arg1-of use-01 ) ) :mod also :domain organization_name_1 :mod also
work-01 :arg0 ( industry :mod certain :location ( industry :mod certain ) ) :arg1-of direct-02 :prep-with ( and :op1 ( person :arg0-of ( work-01 :arg2 substance ) ) :op2 ( person :arg0-of work-01 :mod construct-01 ) :op3 ( person :arg0-of work-01 :mod shipyards ) :op4 ( person :arg0-of work-01 :mod shipyards ) :op5 ( person :arg0-of work-01 :mod shipyards ) )
cause-01 :arg0 ( girl :mod three-year-old :location ( fife :location court ) ) :arg1 ( stand :poss man )
and :op1 ( be-located-at-91 :arg1 ( and :op1 cyclists :op2 joggers ) :arg2 here :time yesterday :location here :ord ( ordinal-entity ordinal-entity_num_0 ) ) :op2 ( support-01 :arg0 and :arg1 ( help-01 :arg0 ( person :arg0-of ( have-rel-role-91 :arg1 person :arg2 child ) ) :arg1 ( person :arg0-of ( have-rel-role-91 :arg1 person :arg2 child ) ) :arg2 cancer ) )
cause-01 :arg0 ( inform-01 :arg0 person_name_0 :arg1 ( request-01 :arg0 person :arg1 ( request-01 :arg0 university ) ) ) :arg1 ( '' :arg1 family :time already )
multi-sentence :snt1 ( possible-01 :arg1 ( publish :arg0 i :arg1 ( something :topic ( company_name_0 :topic ( and :op1 i :op2 ( person :arg0-of ( have-rel-role-91 :arg1 i :arg2 partner ) ) ) ) ) ) ) :snt2 ( say-01 :arg0 person_name_1 :arg1 ( and :op1 ( person :arg0-of ( have-rel-role-91 :arg1 i :arg2 partner ) ) :op2 ( person :arg0-of ( have-rel-role-91 :arg1 i :arg2 partner ) ) ) )
have-condition-91 :arg1 ( want-01 :arg0 it :arg1 ( see-01 :arg0 you ) ) :arg2 nothing
report
and :op2 ( say-01 :arg0 you :arg1 ( hate-01 :mode interrogative :arg0 you :arg1 i ) :arg1-of ( cause-01 :arg0 ( fat :domain ( ankles :poss i ) :degree too ) ) )
and :op2 ( succeed-01 :arg1 it )
suggest-01 :arg0 i :arg1 ( read-01 :arg0 you :arg1 ( novels :quant few ) )
say-01 :arg0 ( person_name_0 :arg0-of ( have-org-role-91 :arg2 '' ) ) :arg1 ( represent-01 :arg0 ( person :arg0-of ( represent-01 :arg1 person_name_1 ) :arg0-of ( represent-01 :arg1 person :time ( try-02 :arg1 person :arg2 ( hospital :poss person_name_2 ) ) ) ) :arg1 person ) :arg2 ( poisoned :mod industry )
say-01 :arg0 organization_name_0 :arg1 ( return-02 :polarity - :arg1 ( family :quant ( about :op1 num_0 ) ) :time yet )
become-01 :arg1 i :arg2 ( district_name_0 :mod heart )
stand-01 :arg1 ( man :mod ( old :degree most ) :mod old ) :arg1-of ( cause-01 :arg0 ( drive-01 :arg0 ( girl :mod three-year ) :arg1 ( cross-02 :arg0 girl :arg1 ( cross-02 :arg0 girl :arg1 ( cross-02 :arg0 girl :arg1 ( cross-02 :arg0 girl :arg1 ( cross-02 :arg0 girl ) ) ) :location court ) ) ) )
lead-03 :arg0 ( condition :mod ( weather :mod gusty ) ) :arg2 ( belated :arg1 ( fly-01 :arg1 organization_name_0 :destination city_name_1 ) ) :mod probable
and :op1 ( get-05 :arg1 i :arg2 up ) :op2 ( climb :arg0 i :mod again :purpose ( search-01 :arg0 i :arg2 ( person :arg0-of ( have-rel-role-91 :arg1 i :arg2 mother ) ) ) )
and :op1 ( person_name_0 :arg0-of ( have-org-role-91 :arg1 province :arg2 ( governor :mod vice ) ) ) :op2 ( wish-01 :arg0 person :arg1 ( converse-01 :arg0 person :arg1 ( democrat :mod social ) :arg2 government-organization_name_1 ) )
friendly-01 :arg1 ( and :op1 ( thing :arg0-of ( play-12 :arg2 vacuum ) ) :op2 ( wage :arg1-of rise-01 ) ) :arg2 environmentally
and :op1 ( look-01 :arg0 it :arg1 ( sell-01 :arg1 ( service :mod video ) :arg2 company_name_0 :purpose ( deal-01 :arg2 ( monetary-quantity :arg1-of ( cool-04 :arg1-of cool-04 ) ) ) ) :time ( before :op1 now :quant ( temporal-quantity temporal-quantity_num_0 :unit month ) ) ) :op2 ( appear-01 :arg1 cooperate-01 :mod ( of-course :mod too ) )
multi-sentence :snt1 ( possible-01 :arg1 ( safe-01 :arg1 ( talk-01 :arg0 woman :arg1 ( relation-03 :arg0 woman :arg2 woman :arg1-of open-04 ) ) ) :manner amr-unknown ) :snt2 ( contrast-01 :arg2 ( ask-01 :arg0 she ) )
likely-01 :arg1 ( suffer-01 :arg0 ( person :quant ( about :op1 num_0 ) :location country_name_0 ) :arg1 ( possible-01 :arg1 ( suffer-01 :arg0 ( organization_name_1 :arg0-of ( lead-03 :arg2 ( and :op1 ( weak-02 :arg1 muscle :arg2 muscle ) :op2 ( weakness :mod insecure ) :op3 ( toe :mod curved ) ) :arg1-of possible-01 ) ) ) ) )
publish-01 :arg1 ( photo :arg1-of ( beautiful-02 :degree most ) )
cause-01 :arg0 ( push-02 :arg0 organization_name_0 :arg2 we :mod absolute ) :arg1 ( clear-06 :arg0 ( push-02 :arg0 we :arg2 we :mod absolute :time ( week :mod this ) ) :arg1 ( question-01 :arg1 electronics ) )
say-01 :arg0 it :arg1 ( obligate-01 :arg2 ( see-01 :arg1 ( refer-01 :arg0 organization_name_1 :arg1 ( city :mod ( great :degree more ) :arg1-of ( discuss-01 :arg0 ( leadership :mod ( great :degree more ) :arg1-of ( discuss-01 :arg0 ( lead-02 :arg0 ( person :arg0-of lead-02 :mod kiewer ) :duration ( multiple :op1 ( temporal-quantity temporal-quantity_num_0 :unit month ) ) ) ) ) ) ) :arg2 ( dispel :arg1 city :arg2 ( fields :arg1 ( field :mod russian-speaking ) :arg2 ( field :mod russian-speaking ) ) ) ) ) )
personification :mode interrogative :mod new :domain this
cause-01 :arg1 ( remain-01 :arg1 ( match-03 :ord ( ordinal-entity ordinal-entity_num_0 ) ) :arg3 ( memory :arg1-of special-02 ) )
contrast-01 :arg1 ( hold-02 :arg1 ( die-01 :arg1 both ) ) :arg2 ( survive-01 :arg0 they )
multi-sentence :snt1 ( come-04 :polarity - :arg1 everything :arg2 ( anything :mod ( small :degree more :compared-to revolution-03 ) ) ) :snt2 ( and :op1 ( possible-01 :arg1 ( connect :arg0 one :arg1 ( machine :arg0-of filter-02 :prep-with ( headphones :mod some ) ) ) ) :op2 ( indicate-01 :arg0 ( thing :arg1-of ( border-01 :arg2 ( and :op1 ( product :mod white ) :op2 ( product :arg0-of ( have-org-role-91 :arg1 branch ) ) ) ) ) :arg1 ( machine :arg0-of filter-02 :prep-with ( headphones :mod some ) ) :arg0-of ( indicate-01 :arg1 ( need-01 :polarity - :arg0 pizza :arg1 anything :arg1-of ( cause-01 :arg0 ( stand-01 :arg1 we :arg2 jam ) ) ) ) ) )
and :op1 ( fall-01 :arg1 i :arg4 there :manner constant ) :op2 ( last-01 :arg1 everything :arg2 ( everything :arg1-of ( last-01 :arg2 ( temporal-quantity temporal-quantity_num_0 :unit year ) ) ) )
and :op1 ( die-01 :arg1 ( person :quant many ) ) :op2 ( believe-01 :arg0 i :arg1 ( and :op1 ( kill-01 :arg1 ( person :quant many :arg0-of ( have-rel-role-91 :arg1 person :arg2 child ) ) ) :op2 ( kill-01 :arg1 person :mod still ) ) ) :location country_name_0 :mod ( again :mod now )
have-03 :arg0 ( and :op1 ( person_name_0 :arg0-of ( have-rel-role-91 :arg1 he :arg2 mother ) ) :op2 ( person :arg0-of ( have-rel-role-91 :arg1 he :arg2 mother ) ) :op3 ( person :arg0-of ( have-rel-role-91 :arg1 he :arg2 doctor ) ) :op4 ( person :arg0-of ( have-rel-role-91 :arg1 he :arg2 doctor ) ) :op5 ( person :arg0-of ( have-rel-role-91 :arg1 he :arg2 doctor ) ) ) :arg1 ( person_name_1 :arg0-of ( have-rel-role-91 :arg1 he :arg2 doctor ) ) :time ( before :op1 ( run-02 :arg0 person :arg1 university :mod ( old :degree more ) ) )
mother :mod great :domain it
say-01 :arg0 ( agency :mod country_name_0 ) :arg1 ( or :op1 ( kill-01 :arg1 ( soldier :quant ( around :op1 num_0 ) ) :mod also ) :op2 ( injure-01 :arg1 soldier :manner ( combat-01 :arg1 soldier :location ( region :location location_name_0 ) ) ) )
confirm-01 :arg0 ( court :mod appeal-01 ) :arg1 ( damage-01 :arg1 ( person :ord ( ordinal-entity ordinal-entity_num_0 ) :arg0-of ( sue-02 :arg2 country_name_0 ) ) :arg1-of ( cause-01 :arg0 ( contact-01 :arg0 person :arg1 person ) ) )
position-01 :polarity - :arg1 ( person :arg0-of ( have-org-role-91 :arg2 head-of-state ) ) :arg2 ( create-01 :arg0 person :arg1 ( sound-01 :arg1-of ( reasonable-02 :degree fair ) ) )
regard-01 :arg1 ( person :arg0-of ( have-org-role-91 :arg1 crew :arg2 member ) ) :arg2 ( person :arg1-of miss-01 )
claim-01 :arg0 ( person :arg0-of rebel-01 ) :arg1 ( waste-01 :arg0 person :arg1 ( boat :quant num_0 :name ( name :op1 coastguards :op2 coastguards ) ) :duration ( ordinal-entity ordinal-entity_num_1 ) :location ( sea :location azov ) ) :mod also
food :domain food
multi-sentence :snt1 ( and :op1 ( go-02 :arg0 i :arg4 ( hopeful-03 :arg0 i :mod good ) :manner ( good :degree pretty ) ) :op2 ( say-01 :arg0 i :arg1 ( thing :arg2-of result-01 :mod good ) ) ) :snt2 ( say-01 :arg0 person_name_0 :arg1 ( add-01 :arg0 person :arg1 ( work-09 :polarity - :arg1 it :mod just ) ) )
contrast-01 :arg2 ( have-03 :arg0 person_name_0 :arg1 ( head :part-of ( outbursts :name ( name :op1 humorous ) ) ) :time still :arg1-of ( cause-01 :arg0 ( imitated :arg0 person :arg1 ( imitated :arg0 person ) ) ) )
and :op1 ( include-91 :li num_0 :arg1 he :arg2 he ) :op2 ( late :op1 ( evening :time evening ) ) :li num_0
and :op1 ( introduce-02 :arg1 ( character :mod ( culture :arg1-of black-07 :mod both ) :mod both ) ) :op2 ( work-01 :arg0 person_name_0 :location ( 1980s :purpose ( comedy :mod alternative ) ) )
follow-01 :arg1 ( and :op1 ( operation :mod emergency ) :op2 ( intervention :quant num_0 :mod more ) )
suggest-01 :arg0 she :arg1 ( something :arg1-of ( suggest-01 :arg0 she :arg1-of ( suggest-01 :arg0 she :arg1-of ( suggest-01 :arg0 she :arg1-of ( suggest-01 :arg0 she :arg1-of ( suggest-01 :arg0 she :arg1-of ( suggest-01 :arg0 she :arg1-of ( suggest-01 :arg0 she :arg1-of ( suggest-01 :arg0 she :arg1-of ( suggest-01 :arg0 she :arg1-of ( suggest-01 :arg0 she :arg1-of ( suggest-01 :arg0 she :arg1-of ( suggest-01 :arg0 she :arg1-of ( suggest-01 :arg0 she :arg1-of ( suggest-01 :arg0 she :arg1-of ( suggest-01 :arg0 she ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) :arg2 ( person :arg0-of specialize-01 ) :purpose ( and :op1 ( provide-01 :arg0 person :arg1 ( opportunity :mod ( more :compared-to ( person :arg0-of ( live-01 :location ( home :poss person ) ) ) ) ) ) :op2 ( treat-03 :arg1 person :arg2 ( person :arg0-of live-01 ) :location ( outside :op1 ( region :poss person ) ) ) )
confirm-01 :arg0 ( person :arg0-of ( confirm-01 :arg1 club ) ) :arg1 ( stand-01 :arg1 person_name_0 :arg2 ( and :op1 -rrb- :op2 ( person :arg0-of ( have-rel-role-91 :arg1 person_name_1 :arg2 friend ) ) :op3 ( person :arg0-of ( have-rel-role-91 :arg1 person :arg2 friend ) ) :op4 ( person :arg0-of ( have-rel-role-91 :arg1 person :arg2 friend ) ) :op5 ( person :arg0-of ( have-rel-role-91 :arg1 we :arg2 friend ) ) ) )
allow-01 :arg1 ( cameras :arg1 ( cameras :quant some ) :arg3 ( foot :quant ( or :op1 num_0 :op2 num_2 ) ) ) :mod only
multi-sentence :snt1 ( portrait :arg0 ( person_name_0 :arg0-of author-01 ) :arg1 ( person :arg0-of author-01 ) ) :snt2 ( j :mode interrogative :arg1 ( person :quant num_0 :arg0-of ( have-org-role-91 :arg1 ( preis :quant num_0 ) :arg2 preis ) ) )
multi-sentence :snt1 ( and :op1 ( documentary :name ( name :op1 radio ) ) :op2 ( documentary :name ( name :op1 radio ) ) ) :snt2 ( great :degree so :domain ( documentary :name ( name :op1 radio ) ) )
think-01 :arg0 i :arg1 ( and :op1 ( be-located-at-91 :arg1 i :arg2 ( under :op1 ( value-interval :op1 num_0 :op2 num_1 ) ) ) :op2 ( lose-02 :arg0 i :arg1 ( skill :poss i :quant all ) ) )
come-01 :arg1 ( proportion :quant-of ( location_name_0 :arg0-of ( have-org-role-91 :arg1 ( and :op1 person_name_1 :op2 person_name_2 :op3 person_name_4 ) :arg2 location_name_3 ) ) ) :arg3 ( and :op1 location_name_3 :op2 ( person_name_4 :arg0-of ( have-org-role-91 :arg1 and :arg2 location_name_3 ) ) :op3 ( person_name_4 :arg0-of ( have-rel-role-91 :arg1 and :arg2 location_name_3 ) ) :op4 ( person_name_6 :arg0-of ( have-rel-role-91 :arg1 and :arg2 brother ) ) :op5 ( person_name_8 :arg0-of ( have-rel-role-91 :arg1 and :arg2 brother ) ) :op7 ( person_name_8 :arg0-of ( have-rel-role-91 :arg1 and :arg2 brother ) ) :op7 ( person_name_8 :source location_name_14 ) :op7 ( person_name_8 :source location_name_14 ) )
say-01 :arg0 she :arg1 ( '' :arg0 i :arg1 joy ) :time ( after :op1 ( reunify-01 :arg1 it ) )
contrast-01 :arg1 ( let-01 :arg0 terrorist :arg1 ( go-01 :arg1 terrorist ) ) :arg2 ( and :op1 ( hold-01 :arg0 terrorist :arg1 ( person :arg0-of ( have-rel-role-91 :arg1 terrorist :arg2 mother ) ) :location ( cruelty :mod school ) ) :op2 ( person_name_1 :arg0 ( person :arg0-of ( have-rel-role-91 :arg1 person :arg2 sister ) ) :arg1 ( and :op1 person_name_0 :op2 ( person_name_1 :arg0-of ( have-rel-role-91 :arg1 person :arg2 brother ) ) ) :location ( sports :mod school ) ) )
(-(
decide-01 :arg0 i :arg1 ( conditions :arg0 i :arg1 comedy ) :arg1-of ( cause-01 :arg0 ( find-02 :arg0 i :arg1 ( dangerous :domain ( satisfaction :mod ( kind :mod this ) ) :manner somehow ) ) )
call-03 :arg0 ( person_name_0 :arg0-of ( have-org-role-91 :arg1 ( government-organization :arg0-of govern-01 ) :arg2 ( capital :mod yemeni ) ) ) :arg1 ( disobedience :mod civil :location ( city_name_1 :location city_name_1 ) )
difficult :domain ( understand-01 :arg1 ( person :arg0-of ( say-01 :arg1 ( prefer-01 :arg0 person :arg1 ( watch-01 :arg0 person :arg1 sport ) ) ) ) ) :arg1-of ( cause-01 :arg0 ( difficult :domain ( watch-01 :arg0 person :arg1 ( sport :arg1-of ( take-01 :arg0 person :purpose ( take-01 :arg0 person :arg1 ( consolation :mod control-01 ) :location hand ) ) ) ) ) )
become-01 :arg1 person_name_0 :arg2 ( person :arg0-of advise-01 )
doubt-01 :arg0 i :arg1 ( know-01 :arg0 we :arg1 truth :time ever )
and :op2 ( clear-06 :arg1 ( deal-01 :arg0 we :arg2 ( regime :mod authoritarian ) ) )
arrest-01 :arg1 ( policeman :quant series :mod turkish ) :arg1-of ( cause-01 :arg0 ( engage-01 :arg1 policeman :arg2 ( association :arg2-of criminal-03 :arg1-of organize-01 ) ) :arg1-of ( cause-01 :arg0 ( have-03 :arg0 policeman :arg1 ( and :op1 ( number :mod tapped ) :op2 ( number :mod telephone ) ) ) :arg1-of allege-01 ) ) :location july
girl :arg0-of ( shoot-02 :arg1 girl :time attempt-01 )
report
multi-sentence :snt1 ( except-01 :arg1 ( and :op1 ( person :mod country_name_0 ) :op2 ( person :arg0-of ( have-org-role-91 :arg1 organization ) ) ) :mod also ) :snt2 ( alternative :mod popular :purpose ( need-01 :arg1 book ) )
use-01 :arg0 ( person :mod only ) :arg1 material :arg2 ( material :location ( and :op1 ( sector :mod certain ) :op2 ( person :arg0-of work-01 :mod construct-01 ) :op3 ( person :arg0-of ( work-01 :arg2 ( person :arg0-of work-01 ) ) ) :op4 ( person :arg0-of ( work-01 :mod shipyards ) ) :op5 ( person :arg0-of ( work-01 :mod shipyards ) ) ) :arg1-of direct-02 )
concern-01 :arg0 ( warn-01 :polarity - :arg0 i ) :arg1 ( possible-01 :arg1 ( find-01 :arg0 we :arg1 we :prep-in ( process-02 :arg1 ( mistake-02 :arg1-of ( make-01 :time ( and :op1 ( event :mod very ) :op2 ( event :mod merit-01 ) ) ) ) ) ) )
start-01 :arg1 ( league :location location_name_0 ) :arg1-of ( cause-01 :arg0 ( boy :arg1-of ( mean-01 :arg2 ( boy :mod sports :mod weende ) ) ) )
and :op1 ( own-01 :arg0 ( or :op1 ( government-organization :arg0-of govern-01 ) :op2 ( organization :arg0-of ( profit-01 :polarity - ) ) ) :arg1 ( or :op1 ( government-organization :arg0-of govern-01 ) :op2 ( organization :arg0-of ( profit-01 :polarity - ) ) ) :mod either :location state_name_0 ) :op2 ( say-01 :arg0 ( or :op1 ( government-organization :arg0-of govern-01 ) :op2 ( organization :arg0-of ( profit-01 :polarity - ) ) ) :arg1 ( person_name_1 :arg0-of ( have-org-role-91 :arg1 ( center :part-of ( tax-01 :arg2 state ) ) :arg2 ( director :mod manage-01 ) ) ) ) :location state_name_0
wish-01 :arg0 i :arg1 ( and :op1 ( possible-01 :arg1 ( call-02 :arg0 person_name_0 ) ) :op2 ( say-01 :arg0 i :arg1 ( and :op1 ( meet-03 :arg0 i :arg1 i :time ( year :mod that ) ) :op2 ( say-01 :arg0 i :arg1 ( and :op1 ( meet-03 :arg0 i :arg1 i ) :op2 ( thing :manner-of ( remember-01 :arg0 person_name_2 ) ) :op3 ( thing :manner-of ( and :op1 ( help-01 :arg0 person_name_2 ) :op2 ( thing :manner-of ( help-01 :arg0 person_name_2 ) ) ) ) ) ) ) ) :arg2 i )
contrast-01 :arg1 ( sorry-01 :arg1 i ) :arg2 ( expect-01 :arg0 ( person_name_0 :mod country_name_1 ) :arg1 ( '' :arg0 person :arg1 ( side :mod organization ) ) :degree ( more :quant num_0 ) :mod simple )
photographed :arg0 ( and :op1 ( person_name_0 :arg0-of ( have-org-role-91 :arg1 country_name_1 :arg2 star ) ) :op2 ( person :arg1-of fame-01 :arg0-of ( have-org-role-91 :arg1 country :arg3 star ) ) ) :arg1 she :time ( try-01 :arg0 ( person :arg0-of ( have-rel-role-91 :arg1 she :arg2 star ) ) :arg1 she :mod only :time ( after :op1 ( explode-01 :arg1 ( thing :poss i ) ) ) )
lose-02 :arg0 i :arg1 consciousness
say-01 :arg0 person_name_0 :arg1 ( resemble-01 :arg2 resemble-01 )
contrast-01 :arg1 ( unexpected :polarity - :domain this ) :arg2 ( say-01 :arg0 ( person_name_0 :arg0-of ( have-org-role-91 :arg1 political-party_name_1 :arg2 ( person :arg1-of expert-01 ) :arg1-of legal-02 ) :arg0-of ( have-org-role-91 :arg1 political-party_name_1 :arg2 ( person :arg1-of expert-01 ) ) ) :arg1 ( unexpected :polarity - :domain this ) )
encourage-01 :arg0 ( person :mod country_name_0 ) :arg1 ( country :mod all ) :arg2 world :purpose ( and :op1 ( provoke-01 :arg0 country :arg1 right ) :op2 ( expand-01 :arg1 right ) ) :concession ( setbacks :arg1-of ( subject-01 :arg2 union :time ( year :mod recent ) :location ( throughout :op1 country ) ) )
seem-01 :arg1 ( tremble :arg1 it :arg2 ( location_name_0 :location storm ) )
and :op1 ( sociable :degree very :domain person_name_0 ) :op2 ( impetuous :arg1 person )
ride-01 :arg0 ( person_name_0 :arg0-of ( bath :arg1 ( and :op1 ( -lrb- :arg1-of soft-02 ) :op2 ( person :mod country_name_2 ) ) ) ) :location park
understand-01 :arg0 i :arg1 that :concession-of ( think-01 :arg0 i :arg1 ( feel-01 :arg0 ( person :location ( around :op1 world ) ) :arg1 ( feel-01 :arg0 person :arg1 ( pain-01 :arg0 we ) ) ) :arg1-of ( thank-01 :arg2 ( image :mod this ) ) :mod also )
contrast-01 :arg2 ( and :op1 ( have-03 :arg0 it :arg1 num_0 ) :op2 ( weggelaufen :arg1 it ) )
arrest-01 :arg1 ( person :arg0-of ( have-org-role-91 :arg1 ( police :mod country_name_0 ) :arg2 dozens ) ) :arg2 ( oppose-01 :arg0 person :arg1 ( government-organization :arg0-of govern-01 ) :prep-against ( government-organization :arg0-of govern-01 ) )
large :degree too :domain ( foot :part-of you )
tell-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg2 coach ) ) :arg1 coach :arg2 coach :arg1-of regular-02
remember-01 :arg0 i :arg1 ( and :op1 ( child :polarity - :mod any :arg0-of ( call-02 :arg1 ( around :op1 around ) :arg1-of possible-01 ) :mod simple ) :op2 ( last-01 :arg1 ( amusement-park_name_0 :mod this ) :arg2 around :duration ( many :op1 ( temporal-quantity temporal-quantity_num_0 :unit month ) ) ) :mod simple )
remain-01 :arg1 ( size :poss world ) :mod still
and :op1 ( trying :mode imperative :arg0 you :arg1 ( and :op1 person_name_0 :op2 person_name_1 :op3 person_name_2 :op4 person_name_3 :op5 person_name_4 :op6 person_name_5 :op7 ( person_name_6 :arg0-of ( have-org-role-91 :arg2 director ) ) ) :manner simple ) :op2 ( look-04 :arg0 ( and :op1 person_name_6 :op2 person_name_6 ) :arg1 colleagues :direction forward ) :manner simple
say-01 :arg0 he :arg1 ( appear-02 :arg1 ( '' :arg1 it :arg2 he ) )
and :op2 ( appear-01 :arg1 he :location comedy :time soon )
obligate-01 :arg2 ( appear-01 :arg1 ( person :quant all :arg0-of ( have-org-role-91 :arg2 official ) ) :time now :time ( after :op1 now :quant ( between :op1 ( temporal-quantity temporal-quantity_num_0 :unit week ) :op2 ( temporal-quantity temporal-quantity_num_1 :unit week ) ) ) :purpose ( guarantee-01 :arg0 person :arg1 ( incorporated :arg1 ( data :poss person ) :arg2 ( registrations :mod biometrical ) ) ) )
and :op1 ( possible-01 :arg1 ( die-01 :arg1 she ) ) :op2 ( and :op1 ( flee-05 :arg0 he ) :op2 ( and :op1 ( flee-05 :arg0 he ) :op2 ( fled :arg0 he :arg1 hand ) :op3 ( flee-05 :arg0 he :manner ( hailed :arg0 he ) ) ) )
contrast-01 :arg1 ( rise-01 :arg1 ( and :op1 ( thing :arg1-of ( tax-01 :arg3 ( thing :arg1-of ( tax-01 :arg3 ( thing :arg1-of ( tax-01 :arg3 ( thing :arg1-of ( tax-01 :arg3 ( thing :arg1-of ( tax-01 :arg3 ( thing :arg1-of ( tax-01 :arg3 ( thing :arg1-of ( tax-01 :arg3 ( thing :arg1-of ( tax-01 :arg3 ( thing :arg1-of ( tax-01 :arg3 ( thing :arg1-of ( tax-01 :arg3 ( thing :arg1-of ( tax-01 :arg3 ( thing :arg1-of ( tax-01 :arg3 ( thing :arg1-of ( tax-01 :arg3 ( thing :arg1-of ( tax-01 :arg3 ( thing :arg1-of ( tax-01 :arg3 ( thing :arg1-of ( tax-01 :arg3 ( thing :arg1-of ( publish-01 :time ( week :mod last ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) :op2 ( thing :arg1-of ( tax-01 :arg3 ( thing :arg1-of ( tax-01 :arg3 tax ) :arg1-of local-02 ) ) ) ) ) :arg2 ( year :mod last ) :time ( year :mod last )
person :arg0-of participate-01 :quant ( many :degree so ) :arg1-of ( cause-01 :arg0 ( hope-01 :arg0 person :arg1 ( probable :domain ( and :op1 ( weather :arg1-of bad-07 ) :op2 ( rain-01 :time morning ) ) ) ) ) :arg2-of ( fortunate-01 :polarity - )
tell-01 :arg0 ( person_name_0 :arg0-of ( have-org-role-91 :arg1 country_name_1 :arg2 president ) ) :arg1 ( and :op1 ( stop-01 :arg0 ( government-organization :arg0-of ( govern-01 :arg1 country_name_2 ) ) :arg1 ( fight-01 :arg0 government-organization :arg1 separatist :location ( east :part-of country ) ) ) :op2 ( begins :arg0 government-organization :arg1 ( negotiate-01 :arg0 government-organization :arg1 separatist :arg2 ( negotiate-01 :arg0 government-organization :arg1 ( '' :mod '' ) ) ) :time immediate ) ) :arg2 ( media :mod country )
explode-01 :arg1 ( and :op1 hops :op2 malt ) :mod also :location country_name_0 :mod also
and :op1 ( phoned :arg0 i :arg1 person_name_0 ) :op2 ( suggest-01 :arg0 i :arg1 ( possible-01 :arg1 ( sit-01 :arg1 we :arg2 ( down :op1 we ) ) ) ) :arg1-of ( say-01 :arg0 '' )
look-up-05 :arg0 we :arg1 ( year :mod this ) :purpose ( ensure-01 :arg0 we :arg1 ( and :op1 ( person :arg0-of ( study-01 :arg1 university ) ) :op2 ( effort :mod ( maximum :op1 luxury ) :mod minimum ) ) :time ( year :mod this ) ) :manner together
say-01 :arg0 ( comment-01 :arg0 ( person :arg0-of ( lead-02 :arg1 country_name_0 ) :arg0-of ( lead-02 :arg1 ( delegation :mod german ) ) :arg0-of ( lead-02 :arg1 ( delegation :mod german ) ) ) ) :arg1 ( pay-01 :arg0 he :arg1 they :arg3 ( partner-01 :arg0 he :arg1 country :mod potential :purpose project ) )
return-01 :arg1 ( child :quant ( all :polarity - ) :location country_name_0 ) :arg4 school
cause-01 :arg0 ( have-03 :arg0 ( person :arg0-of ( have-org-role-91 :arg2 head-of-state ) ) :arg1 profit-01 :location ( division :ord ( ordinal-entity ordinal-entity_num_0 ) ) :time ( month :mod last ) ) :arg1 ( conclude-01 :arg0 ( person :arg0-of play-01 ) :arg1 ( person :arg0-of play-01 :location state ) :duration ( few :op1 ( temporal-quantity temporal-quantity_num_1 :unit week ) ) )
and :op1 ( favor-01 :arg0 you :arg1 ( organization_name_0 :location country_name_1 ) ) :op2 ( transport-01 :arg1 ( gas :arg1-of natural-03 :mod country_name_2 ) :arg4 ( south :part-of country ) :arg1-of direct-02 :mod also )
dawn :prep-with country_name_0
and :op1 ( realistic-03 :arg1 ( and :op1 ( pursue-01 :arg0 ( and :op1 ( person :arg0-of ( have-org-role-91 :arg1 country_name_1 :arg2 member ) ) :op2 ( person :arg0-of ( have-org-role-91 :arg1 country_name_1 :arg2 member ) ) :op3 ( person :arg0-of ( have-org-role-91 :arg1 country :arg2 member ) ) :mod especially ) :arg1 ( and :op1 ( pursue-01 :arg0 person :arg1 crisis :location country_name_2 ) :op2 ( framed :arg0 person :arg1 person ) ) ) :op2 ( framed :arg0 person :mod of-course ) ) ) :location ( city :mod especially )
deny-01 :arg0 country_name_0 :arg1 ( law :mod city_name_1 :topic ( elect-01 :arg1 ( government-organization :arg0-of govern-01 ) ) )
multi-sentence :snt1 ( amr-unknown
judge-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg3 judge-01 ) ) :frequency sometimes :time ( case :mod every )
(-(
show-01 :arg0 he :arg1 ( thing :manner-of ( learn-01 :arg0 he :arg1 tolerance :arg2 ( deal-01 :arg0 he :arg2 ( man :mod fellow :mod fellow :poss he ) ) ) ) :mod also
think-01 :arg2 person
say-01 :arg0 ( figure :mod hospital ) :arg1 ( injure-01 :arg1 policeman )
difficult :domain ( know-01 :arg1 ( recommend-01 :arg1 ( and :op1 ( say-01 :arg0 we :arg1 thing ) :op2 ( much :degree so ) ) ) )
include-91 :arg1 ( and :op1 ( person_name_0 :arg0-of ( have-org-role-91 :arg2 stations ) ) :op2 ( person :arg0-of ( have-org-role-91 :arg2 head-of-state ) ) :op3 ( person :arg0-of ( have-org-role-91 :arg2 orb ) ) :op4 ( person :arg0-of ( have-org-role-91 :arg2 head-of-state ) ) :op5 ( person :arg0-of ( have-org-role-91 :arg2 trenkwaldern ) ) ) :arg2 ( day :ord ( ordinal-entity ordinal-entity_num_0 ) )
include-91 :arg1 ( and :op1 ( person :arg0-of ( have-org-role-91 :arg1 organization_name_0 ) ) :op2 ( person :arg0-of ( have-org-role-91 :arg1 organization :arg3 ( lead-02 :arg0 person ) ) ) ) :arg2 ( '' :arg0 person :arg1 person_name_1 )
think-01 :arg0 i :arg1 ( cooperate-01 :arg1-of possible-01 ) :time now
have-concession-91 :arg1 ( detail-01 :polarity - :arg0 ( detail :topic ( detail :arg1-of complicate-01 :quant all ) ) )
follow-01 :arg1 decide-01 :arg2 ( summer :mod ( large :degree most ) :arg1-of ( include-91 :arg2 ( protest-01 :arg1-of public-02 :arg0-of ( effective-04 :degree most ) ) :location city_name_0 :duration ( several :op1 ( temporal-quantity temporal-quantity_num_0 :unit year ) ) ) )
transport-01 :arg1 warnstreiks :mod main
multi-sentence :snt1 ( and :op1 ( go-08 :arg1 ( row :ord ( ordinal-entity ordinal-entity_num_0 ) :part-of ( show-04 :arg1 person_name_0 ) ) :arg2 ( thing :quant num_1 :arg1-of ship-01 ) ) :op2 ( include-91 :arg1 ( thing :mod other ) :arg2 ( thing :mod other ) ) ) :snt2 ( know-02 :arg1 ( thing :arg1-of know-02 ) :manner well )
report-01 :arg0 ( media :mod country_name_0 ) :arg1 ( chaos :mod traffic :location capital )
and :op1 ( hold-01 :arg0 ( person :quant num_0 ) :arg1 breath ) :op2 ( carry-01 :arg0 ( baby :arg0-of ( eat-01 :arg1 ( arm :part-of ( policeman :mod country_name_0 ) ) ) ) :arg1 ( arm-01 :arg1 baby ) )
give-01 :arg0 he :arg1 ( monetary-quantity monetary-quantity_num_0 :unit dollar )
hard-02 :arg1 ( accept-01 :arg1 that ) :condition ( fair :polarity - :degree bit :domain accept-01 )
hate-01 :polarity - :arg0 i :arg1 you :arg1-of natural-03
understand-01 :arg0 i :arg1 ( possible-01 :arg1 ( and :op1 ( understand-01 :arg0 ( person :prep-on ( side :mod other :part-of world ) ) :arg1 ( feel-01 :arg0 we ) ) :op2 ( show-01 :arg0 person :arg1 ( support-01 :arg0 we ) ) ) ) :time ( time :mod that )
contrast-01 :arg2 ( and :op1 ( enjoy-01 :arg0 ( person :quant num_0 :arg0-of ( participate-01 :arg1 ( and :op1 ( person :arg0-of ( have-org-role-91 :arg2 head-of-state ) ) :op2 ( person :arg0-of ( have-org-role-91 :arg1 ( person_name_0 :arg0-of ( have-org-role-91 :arg1 person_name_1 ) ) ) ) ) ) ) :arg1 ( break :location ( park :arg1-of ( low-04 :degree more ) ) ) ) :op2 ( later :arg0 person :arg1 party :time ( late :degree more ) :subevent-of ( sky :arg1-of open-09 :location schottener ) ) )
call-01 :arg0 ( and :op1 government-organization_name_0 :op2 separatist ) :arg1 ( or :op1 ( '' :name ( name :op1 '' ) ) :op2 ( khadjibey :name ( name :op1 '' ) ) ) :arg2 ( or :op1 '' :op2 '' ) :time recent :arg1-of ( cause-01 :arg0 ( reminiscent :arg1 ( heyday :mod pre-revolutionary :poss ( empire :name ( name :op1 pre-revolutionary :op2 empire ) ) ) ) )
win-01 :arg0 ( person_name_0 :arg0-of ( win-01 :arg1 ( division :ord ( ordinal-entity ordinal-entity_num_0 ) ) :location ethnic-group_name_1 ) ) :arg2 ( total-01 :arg2 ( nearly :op1 ( monetary-quantity :quant ( nearly :op1 num_1 ) :unit dollar ) ) ) :time ( year :mod this )
and :op1 ( agree-01 :arg0 coalition :arg1 it ) :op2 ( say-01 :arg0 i :arg1 ( and :op1 ( agree-01 :arg0 coalition ) :op2 ( come-01 :arg1 ( person :arg0-of ( lead-02 :arg1 party ) ) :time ( after :op1 ( meet-03 :arg0 person :arg1 ( body :mod top :poss organization_name_0 :location city_name_1 ) ) ) ) ) )
multi-sentence :snt1 ( easy-05 :polarity - :arg1 decide-01 ) :snt2 ( matured :arg1 decide-01 :duration ( several :op1 ( temporal-quantity temporal-quantity_num_0 :unit month ) ) )
multi-sentence :snt1 ( know-01 :arg0 we :arg1 it :topic it :mod all :time moment ) :snt2 ( cause-01 :arg0 ( state-01 :arg0 ( person_name_0 :arg0-of ( have-org-role-91 :arg1 twitch :arg2 president ) ) :arg1 ( decide-01 :arg0 organization_name_1 ) :arg1-of ( cause-01 :arg0 ( and :op1 ( believe-01 :arg0 person :arg1 ( community :poss we ) ) :op2 ( and :op1 ( share-01 :arg0 person :arg1 ( value :poss we :duration long-03 ) ) :op2 ( want-01 :arg0 person :arg1 ( help-01 :arg0 person :arg1 ( get-05 :arg1 we :arg2 there :manner ( fast :degree more ) ) ) :arg2 we ) ) ) ) ) )
adapt-01 :arg1 ( person :arg0-of ( have-rel-role-91 :arg1 child :arg2 child ) ) :arg2 ( and :op1 ( wear-01 :arg0 child :arg1 embroidered ) :op2 ( balloons :arg0 child :arg1 ( hand :part-of ( person :arg0-of ( teach-01 :arg1 embroidered ) ) ) ) :op3 ( give-01 :arg0 child :arg1 flower ) ) :mod tradition :time ( day :ord ( ordinal-entity ordinal-entity_num_0 ) :part-of ( school :mod new ) )
thrust :mod main :domain ( strike-01 :arg2 warn-01 )
think-01 :mode imperative :arg0 you :arg1 ( person :arg0-of reside-01 )
think-01 :arg0 i :arg1 ( and :op1 ( see-01 :arg0 ( person :quant many ) :arg1 it :time ( ordinal-entity ordinal-entity_num_0 ) ) :op2 ( understand-01 :arg0 i :arg1 ( and :op1 ( disaster :poss we ) :op2 ( contribute-01 :arg0 we :arg2 ( something :arg1-of ( resemble-01 :arg2 ( event :mod that :mod again ) ) ) ) ) ) ) :condition ( see-01 :arg0 i :arg1 ( photo :source i :mod online ) :arg2 i )
claim-01 :arg0 ( person :arg0-of prosecute-01 ) :arg1 ( violate-01 :arg0 ( person :arg0-of prosecute-01 ) :arg1 ( control-01 :arg0 organization_name_0 :arg1 q3 ) :manner ( and :op1 ( care-03 :arg1-of need-01 ) :op2 ( attend-02 :arg1 girl ) ) )
actor :domain i
multi-sentence :snt1 ( present-01 :arg0 he :arg1 ( study :topic ( affect-01 :arg1 that ) ) ) :snt2 ( cause-01 :arg0 ( contact-01 :arg0 he :arg1 environment :manner asbestos ) :arg1 ( thing :arg1-of effect-03 :mod that ) )
express-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg2 premier ) ) :arg1 ( family :arg1-of ( have-org-role-91 :arg0 he :arg2 member ) ) :location ( country_name_0 :arg1-of neighbor-01 ) :time ( after :op1 ( report-01 :arg0 person :arg1 ( threaten-01 :arg1 attack-01 ) ) )
play-01 :arg0 we :manner together :time ( and :op1 ( small :domain we ) :op2 ( go-02 :arg0 we :arg4 ( therefrom :prep-to school ) ) )
point-out-02 :arg0 ( report :name ( name :op1 goddard ) ) :arg1 ( handle-01 :polarity - :arg1 ( presence :mod asbestos ) :arg1-of ( accord-02 :arg2 ( thing :arg1-of ( provide-01 :arg1-of relevant-01 ) ) ) ) :mod also
want-01 :arg0 person :arg1 ( start-01 :arg0 person :arg1 ( verse :arg1 ( end-01 :arg1 ( end-01 :arg1 person ) ) ) :degree quite )
contrast-01 )
promise-01 :arg0 ( person :arg0-of organize-01 ) :arg1 ( festival :beneficiary ( generation :quant all ) )
read-01 :arg0 ( person_name_0 :quant num_0 ) :arg1 charge-05 :time ( hear-01 :arg0 person :arg1 ( government-organization_name_1 :location city_name_2 ) ) :li num_0
organize-01 :arg0 ( and :op1 ( government-organization :arg0-of ( govern-01 :arg1 city_name_0 ) ) :op2 ( organization_name_1 :location city ) ) :arg1 ( survey-01 :arg1 lis )
interest-01 :arg1 ( school :arg1-of high-02 ) :time already :time ( after :op1 ( school :arg1-of high-02 :duration ( temporal-quantity temporal-quantity_num_0 :unit year ) ) )
money :mod crucial :domain ( person :arg0-of ( suffer-01 :arg1 ( therapies :mod ( good :degree most ) :arg2-of available-02 ) ) ) :mod crucial :domain money
contribute-01 :arg0 that :arg2 ( die-01 :arg1 she )
and :op2 ( let :mode imperative :arg0 you :location location_name_0 :mod even :time now )
coincidences
possible-01 :arg1 ( fix-02 :arg0 they :arg1 ( skin :arg1-of breast ) :arg2 ( skin :part-of lungs ) ) :condition ( and :op1 ( tremors :arg1 ( and :op1 asbestos :op2 fibres ) ) )
honest :arg1-of brutal-02 :domain he :mod too :location here :mod too
multi-sentence :snt1 ( say-01 :arg0 ( person_name_0 :arg0-of ( have-rel-role-91 :arg1 i :arg2 friend ) ) :arg1 ( let-01 :arg0 we :arg1 ( activity-06 :arg0 society :arg1 society ) ) :time ( after :op1 ( die-01 :arg1 ( person :arg0-of ( have-rel-role-91 :arg1 i :arg2 friend ) ) ) ) :time ( after :op1 ( die-01 :arg1 ( person :arg0-of ( have-rel-role-91 :arg1 i :arg2 friend ) ) ) ) ) :snt2 ( think-01 :arg0 ( person :arg0-of ( think-01 :arg1 ( think-01 :arg0 person :arg1 ( think-01 :arg0 person :arg1 ( possible-01 :arg1 ( '' :arg1 ( thing :arg1-of ( think-01 :arg0 person ) ) :arg1-of need-01 ) ) ) ) ) ) :arg1 ( thing :manner-of ( consider-02 :arg1 ( thing :manner-of ( consider-02 :arg1 thing ) ) ) ) )
cause-01 :arg1 ( inform-01 :arg1 ( person_name_0 :arg0-of ( have-org-role-91 :arg1 family :arg2 member ) ) :time already :time ( middle :op1 ( request-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg1 university ) ) :arg1 family ) ) )
and :op1 ( x-rays :arg0 ( doctor :mod verwunderte ) :arg1 ( breast :arg0 doctor ) ) :op2 ( put-01 :arg0 doctor :arg1 pleurakathether :arg2 pleurakathether :purpose ( and :op1 ( detect-01 :arg0 doctor :arg1 liquid ) :op2 ( test-01 :arg0 doctor :arg1 liquid :location laboratory ) ) )
and :op1 ( attack-01 :arg0 it :arg1 ( health :poss i ) ) :op2 ( feel-01 :arg0 i :arg1 it :mod still )
obligate-01 :arg1 ( woman :mod white ) :arg2 ( involve-01 :arg1 woman :arg2 story :purpose ( justify-01 :arg0 woman :arg1 ( murder-01 :arg1 person_name_0 ) ) )
and :op1 ( take-01 :arg0 state_name_0 :arg1 ( rate-entity-91 :arg1 num_0 :arg2 ( monetary-quantity monetary-quantity_num_0 :unit dollar ) ) :arg3 ( tax-01 :arg3 ( income :poss corporation ) ) ) :op2 ( amount :arg1-of ( high-02 :degree most ) :location region )
return-01 :arg1 ( and :op1 ( ideal :mod ( right :mod human ) :mod country_name_0 ) :op2 ( right :mod ( right :mod human ) ) :degree very )
contrast-01 :arg1 ( family :mod ( alone :polarity - :degree quite ) :arg0-of ( have-rel-role-91 :arg1 we :arg2 relative ) ) :arg2 ( kill-01 :arg1 ( person :mod all :arg0-of ( have-rel-role-91 :arg1 we :arg2 relative ) ) )
multi-sentence :snt1 ( identify-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg1 organization_name_0 ) ) :arg1 ( rate-entity-91 :arg1 ( rate :mod die-01 ) :arg2 ( die-01 :arg1 person ) ) ) :snt2 ( receive-01 :arg0 this :arg1 ( insure-02 :arg1 life :quant ( more :polarity - ) ) :time then )
multi-sentence :snt1 ( same-01 :mode interrogative :arg1 we :arg2 ( do-02 :arg0 we :arg1 same ) ) :snt2 ( intend-01 :mode interrogative :arg0 you :arg1 ( * :arg0 you :arg1 * ) :arg1-of intend-01 )
love-01 :arg0 person :arg1 story
recommend-01 :arg0 ( person_name_0 :arg0-of ( have-org-role-91 :arg1 company_name_2 :arg2 chairman :time former ) :arg0-of ( have-org-role-91 :arg1 company_name_2 :arg2 chairman :time former ) :arg0-of ( have-org-role-91 :arg1 company_name_2 :arg2 chairman :time former ) ) :arg1 ( have-org-role-91 :arg0 person :arg1 cabinet :arg2 consultant )
believe-01 :arg0 i :arg1 ( create-01 :polarity - :arg0 i :arg1 ( trip-03 :arg1 trip-03 ) :time ( no-longer :mod any ) )
see-01 :arg0 left :arg1 ( plan-01 :arg1 ( dispute-01 :arg2 ( dispute-01 :arg2 union-02 ) ) )
put-01 :arg1 refugee :arg2 refugee :time now :location ( country :mod new )
say-01 :arg0 person_name_0 :arg1 ( and :op1 ( decide-01 :arg0 they :arg1 ( campaign-01 :arg0 they :arg1 ( suffrage :arg0 woman :arg1 woman ) ) ) :op2 ( right-05 :arg1 ( vote-01 :arg0 ( person :arg1-of black-05 ) :arg1 ( vote-01 :arg0 person :arg1 ( person :arg1-of black-05 ) ) ) ) )
state-01 :arg0 ( state :quant num_0 :arg1-of ( include-91 :arg2 ( state :quant num_1 :arg0-of ( inform-01 :arg1 ( law :arg1-of resemble-01 ) ) ) ) ) :arg1 ( and :op1 ( measure-02 :arg0 court :arg1 ( measure-02 :mod such ) :location peninsula_name_1 ) :op2 ( direct-01 :arg0 court :arg1 ( measure-02 :mod such ) ) :time recent )
multi-sentence :snt1 ( it :prep-with i :mod still ) :snt2 ( have-03 :polarity - :arg0 i :arg1 ( anything :arg1-of ( let-01 :arg0 i :location ( behind :op1 i ) ) ) )
consist-01 :arg1 ( point :arg1-of differ-02 :mod view-01 ) :arg2 ( thing :arg1-of ( precede-01 :arg2 eye ) ) :time ( after :op1 now :duration ( time :mod next ) )
bring-01 :arg0 he :arg1 he :arg2 trouble :frequency often :condition ( try-01 :arg0 he :arg1 ( funny :domain he ) ) :arg1-of ( cause-01 :arg0 ( like-01 :polarity - :arg0 he :arg1 ( and :op1 ( person :arg0-of ( have-rel-role-91 :arg1 he :arg2 father ) ) :op2 ( person :arg0-of ( have-rel-role-91 :arg1 he :arg2 father ) ) :op3 ( person :arg0-of ( have-rel-role-91 :arg1 he :arg2 father ) ) :op4 ( person :arg0-of ( have-rel-role-91 :arg1 he :arg2 father ) ) :op5 ( person :arg0-of ( have-rel-role-91 :arg1 he :arg2 father ) ) :op6 et-cetera ) ) )
contrast-01 )
judge-01 :arg0 ( person_name_0 :arg0-of ( have-org-role-91 :arg3 judge-01 ) ) :arg1 ( person :arg0-of ( have-org-role-91 :arg3 judge-01 ) ) :time ( date-entity month_date-entity_0 day_date-entity_0 ) :location ( government-organization_name_1 :location city_name_2 )
use-01 :arg0 you :arg1 it :condition ( have-03 :arg0 ( camera :poss you ) :arg1 series ) :condition ( have-03 :arg0 ( camera :poss you ) :arg1 series )
and :op1 ( be-temporally-at-91 :arg1 we :arg2 ( during :op1 ( return-01 :polarity - :arg1 we ) ) ) :op2 ( warn-01 :arg0 i :arg2 person_name_0 )
and :op1 ( characteristics :arg1 crisis ) :op2 ( cause-01 :arg0 ( ethnisiert :arg1 situation :degree so ) :arg1 ( obligate-01 :arg2 ( express-01 :arg0 they ) ) )
block-01 :arg1 ( access-01 :arg1 government-organization_name_0 ) :mod also
person_name_0 :quant num_0
deploy-01 :arg1 ( force :mod security :quant ( more-than :op1 num_0 ) ) :arg2 ( protect-01 :arg0 force :arg1 ( district :mod ( government-organization :arg0-of govern-01 ) ) )
become-01 :arg1 this :arg2 evident :time ( early :op1 ( early :op1 ( early :op1 ( early :op1 ( early :op1 ( early :op1 ( early :op1 ( early :op1 ( date-entity decade_date-entity_0 ) ) ) ) ) ) ) ) :ord ( ordinal-entity ordinal-entity_num_0 ) )
multi-sentence :snt1 ( make-01 :arg0 we :arg1 ( activity-06 :arg0 ( person_name_0 :arg0-of ( have-rel-role-91 :arg1 i :arg2 friend ) ) :mod association ) :time ( after :op1 ( die-01 :arg1 ( person :arg0-of ( have-rel-role-91 :arg1 i :arg2 friend ) ) ) ) :time ( after :op1 ( die-01 :arg1 ( person :arg0-of ( have-rel-role-91 :arg1 i :arg2 friend ) ) ) ) ) :snt2 ( need-01 :arg1 ( '' :name ( name :op1 thinking-phase :op2 thinking-phase ) :mod this ) :purpose ( consider-02 :arg0 we :arg1 ( thing :manner-of ( go-06 :arg1 it :arg1-of possible-01 ) ) ) )
and :op1 ( seem-01 :arg1 ( go-01 :arg1 city_name_0 :arg4 ( business :mod small ) :arg4 ( business :mod small :location room ) ) :time meantime ) :op2 ( pay-01 :arg0 they :arg1 ( and :op1 ( person :mod nation :mod more ) :op2 ( person :arg1-of local-02 :mod nation ) :quant more ) :arg0-of ( cause-01 :arg1 ( study-01 :mod youngest ) ) ) :time meantime
have-condition-91 :arg1 ( amr-unknown :domain amr-unknown :condition ( continue-01 :arg0 you :arg1 ( beaten :arg0 you :arg1 this ) ) ) :arg2 ( have-condition-91 :arg1 ( have-03 :arg0 you :arg1 event :time yesterday :condition ( have-03 :arg0 it :arg1 event ) ) :arg2 ( have-03 :arg0 it :arg1 event :time yesterday ) )
task :mod difficult :domain it
and :op1 ( leave-15 :arg0 i :arg1 ( rate-entity-91 :arg1 ( about :op1 ( between :op1 ( temporal-quantity temporal-quantity_num_0 :unit minute ) :op2 ( temporal-quantity temporal-quantity_num_1 :unit minute ) ) ) :arg2 ( temporal-quantity temporal-quantity_num_1 :unit minute ) :time ( before :op1 ( storm-02 :arg0 terrorist :arg1 terrorist ) ) ) ) :op2 ( remember-01 :arg0 i :arg1 it ) :op3 ( remember-01 :arg0 i :arg1 it )
report-01 :arg0 person_name_0 :time ( year :mod next ) :condition ( reach-01 :arg0 they :arg1 ( product :arg1-of gross-03 :mod domestic :mod ( monetary-quantity monetary-quantity_num_0 :unit euro ) ) )
possible-01 :arg1 ( befriend-01 :arg0 ( person :quant all :arg0-of ( have-org-role-91 :arg1 ( club :mod both ) :arg2 member ) ) :arg1 ( opine-01 :arg0 person ) :time future :mod again )
and :op1 ( play-01 :arg0 person_name_0 :arg1 ( rate-entity-91 :arg1 ( less-than :op1 ( monetary-quantity monetary-quantity_num_0 :unit ( dollar :mod renminbi ) ) ) :arg2 ( volume-quantity volume-quantity_num_1 :unit gallon ) ) :time ( date-interval :op1 ( date-entity decade_date-entity_0 ) :op2 ( date-entity dayperiod_date-entity_1 ) ) :location country_name_1 ) :op2 ( play-01 :arg0 person :arg1 ( monetary-quantity monetary-quantity_num_1 :unit ( dollar :mod country ) :arg1-of ( include-91 :arg2 ( monetary-quantity monetary-quantity_num_1 :unit ( dollar :mod country ) ) ) ) :arg3 ( monetary-quantity monetary-quantity_num_1 :unit ( dollar :mod country ) :arg1-of ( include-91 :arg2 ( monetary-quantity monetary-quantity_num_1 :unit ( dollar :mod country ) ) ) ) :time ( date-entity year_date-entity_2 ) )
play-02 :arg0 ( lady :poss organization_name_0 ) :arg1 game :location organization_name_1 :ord ( ordinal-entity ordinal-entity_num_0 )
multi-sentence :snt1 ( and :op1 ( get-05 :arg1 he :arg2 up :manner simple ) :op2 ( say-01 :arg0 i :arg1 ( love-01 :arg0 i :arg1 i ) ) ) :snt2 ( believe-01 :polarity - :arg0 i :arg1 ( have-03 :arg0 you :arg1 ( have-condition-91 :arg1 ( have-03 :arg0 you :arg1 that :time now :location ( chair :mod rotation ) :time already ) :arg2 you ) ) )
multi-sentence :snt1 ( multi-sentence :snt1 ( amr-unknown
recommend-01 :arg0 ( person_name_0 :arg0-of ( have-org-role-91 :arg1 company_name_2 :arg2 chairman :time former ) :arg0-of ( have-org-role-91 :arg1 company_name_2 :arg2 chairman :time former ) :arg0-of ( have-org-role-91 :arg1 company_name_2 :arg2 chairman :time former ) ) :arg1 ( become-01 :arg1 person :arg2 ( person :arg0-of ( advise-01 :arg2 cabinet ) ) )
know-01 :arg0 it :arg1 person_name_0
suppose-01 :arg1 ( good :domain ( cyclist :source resort ) :time ( depart-01 :arg0 they :time ( after :op1 ( temporal-quantity temporal-quantity_num_0 :unit hour ) ) ) )
multi-sentence :snt1 ( equal-01 :arg1 we :arg2 ( equal-01 :arg1 we :arg2 ( ordinal-entity :value beginnings ) ) ) :snt2 ( wortspiel :mode expressive )
and :op1 ( responsible :arg0 ( person :arg0-of hack-04 :arg0-of hack-04 ) :arg1 ( photograph-01 :quant num_0 :mod that ) :arg1-of ( cause-01 :arg0 ( '' :arg0 ( and :op1 person_name_0 :op2 ( person_name_2 :arg0-of ( have-org-role-91 :arg1 ( and :op1 person_name_2 :op2 person_name_2 :op3 person_name_4 :op4 person_name_4 :op5 person_name_4 :op6 person_name_5 :op7 person_name_5 ) ) ) ) :arg1 ( and :op1 ( person_name_3 :arg0-of ( have-org-role-91 :arg2 models ) ) :op2 ( person_name_3 :arg0-of ( have-org-role-91 :arg2 singers ) ) ) ) ) ) :op2 ( vapor :arg0 ( person_name_6 :arg0-of ( have-org-role-91 :arg2 actress ) ) :arg1 and )
kill-01 :arg1 ( human :quant ( more-than :op1 1/2 ) :arg1-of ( include-91 :arg2 ( child :arg0-of ( have-rel-role-91 :arg1 child :arg2 child ) ) ) ) :arg1-of ( cause-01 :arg0 ( shock-01 :arg0 ( shock-01 :arg0 world ) :arg1 human ) )
utilize-01 :arg0 ( crisis :location ( around :op1 globe ) ) :arg1 ( economy :poss ( person :arg1-of ( rank-01 :ord ( ordinal-entity ordinal-entity_num_0 ) ) ) )
possible-01 :arg1 ( exemplify-01 :arg0 ( cost-01 :arg1 ( monetary-quantity monetary-quantity_num_0 :unit dollar ) :arg2 ( duration :mod ( semester :mod ( about :op1 ( monetary-quantity monetary-quantity_num_0 :unit dollar ) ) ) ) ) )
and :op2 ( bring-01 :arg0 separatist :arg1 ( town :mod small :quant several ) :arg2 ( control-01 :arg0 separatist :arg1 ( field :location location_name_0 ) ) )
bring-01 :arg0 ( and :op1 ( person :arg0-of ( have-org-role-91 :arg2 ( doctor :mod ( family :arg1-of ( have-org-role-91 :arg0 person :arg2 member ) ) ) ) ) :op2 ( person :arg0-of ( have-org-role-91 :arg1 ( family :arg1-of ( have-org-role-91 :arg0 person :arg2 member ) ) ) ) ) :arg1 ( and :op1 ( ct-scans :arg0 person ) :op2 ( x-rays :arg0 person ) ) :arg2 ( group :arg1-of expert-01 ) :time ( date-entity month_date-entity_0 year_date-entity_0 ) :mod again
understand-01 :arg0 i :arg1 ( whereon :degree absolute :arg1-of ( want-01 :arg0 you ) ) :arg1-of ( cause-01 :arg0 ( say-01 :arg0 i :arg1 ( and :op1 ( say-01 :arg0 i :arg1 ( whereon :arg0 person_name_0 :arg1 ( voice :mod quiet ) :arg2 ( voice :mod quiet ) :time ( it :mod certain ) ) ) :op2 ( speak-01 :arg0 person :arg1 ( and :op1 ( speak-01 :arg0 person :arg1 ( and :op1 ( end-01 :arg1 voice ) :op2 ( '' :arg0 person ) ) ) :op2 ( spoken :arg0 person :arg1 ( nothing :mod other ) :time ( healed :polarity - :arg1 we :degree so :arg0-of ( effective-04 :arg1 ( effective-04 :arg0 we :arg1 we ) ) ) ) ) ) ) ) )
and :op2 ( like-02 :arg0 i :arg1 ( forget-01 :arg0 i ) )
say-01 :arg0 ( person :arg0-of research-01 ) :arg1 ( stop-01 :arg0 ( and :op1 trend-01 :op2 rise-01 :arg1-of ( near-02 :arg2 ( wheels :mod enterprise ) ) ) :arg1 country :time ( year :mod this ) :prep-with ( rise-01 :arg1 ( thing :arg1-of ( tax-01 :arg3 ( thing :arg1-of ( tax-01 :arg3 ( thing :arg1-of ( tax-01 :arg3 ( thing :arg1-of ( tax-01 :arg3 ( thing :arg1-of ( tax-01 :arg3 ( thing :arg1-of ( tax-01 :arg3 ( thing :arg1-of ( tax-01 :arg3 ( thing :arg1-of ( tax-01 :arg3 ( thing :arg1-of ( tax-01 :arg3 ( thing :arg1-of ( tax-01 :arg3 ( thing :arg1-of ( tax-01 :arg3 ( thing :arg1-of ( tax-01 :arg3 ( thing :arg1-of ( tax-01 :arg3 ( thing :arg1-of ( tax-01 :arg3 ( thing :arg1-of ( tax-01 :arg3 ( thing :arg1-of ( tax-01 :arg3 ( thing :arg1-of ( tax-01 :arg3 ( thing :arg1-of ( tax-01 :arg3 ( thing :arg1-of ( tax-01 :arg3 ( thing :arg1-of ( tax-01 :arg3 ( thing :arg1-of ( tax-01 :arg3 ( thing :arg1-of ( tax-01 :arg3 ( thing :arg1-of ( tax-01 :arg3 ( thing :arg1-of ( tax-01 :arg3 ( thing :arg1-of ( tax-01 :arg3 ( thing :arg1-of ( tax-01 :arg3 ( thing :arg1-of ( tax-01 :arg3 ( thing :arg1-of ( tax-01 :arg3 ( thing :arg1-of ( tax-01 :arg3 ( thing :arg1-of ( tax-01 :arg3 ( thing :arg1-of ( tax-01 :arg3 ( thing :arg1-of ( tax-01 :arg3 ( thing :arg1-of ( tax-01 :arg3 ( thing :arg1-of ( tax-01 :arg3 ( thing :arg1-of ( tax-01 :arg3 ( thing :arg1-of ( tax-01 :arg3 ( thing :arg1-of ( tax-01 :arg3 ( thing :arg1-of ( tax-01 :arg3 ( thing :arg1-of ( tax-01 :arg3 ( thing :arg1-of ( tax-01 :arg3 ( thing :arg1-of ( tax-01 :arg3 ( thing :arg1-of ( tax-01 :arg3 ( thing :arg1-of ( tax-01 :arg3 ( thing :arg1-of ( tax-01 :arg3 ( thing :arg1-of ( tax-01 :arg3 ( thing :arg1-of ( tax-01 :arg3 ( thing :arg1-of ( tax-01 :arg3 ( thing :arg1-of ( tax-01 :arg3 ( thing :arg1-of ( tax-01 :arg3 ( thing :arg1-of ( tax-01 :arg3 ( thing :arg1-of ( tax-01 :arg3 ( thing :arg1-of ( tax-01 :arg3 ( thing :arg1-of ( tax-01 :arg3 ( thing :arg1-of ( tax-01 :arg3 ( thing :arg1-of ( tax-01 :arg3 ( thing :arg1-of ( tax-01 :arg3 ( thing :arg1-of ( tax-01 :arg3 ( thing :arg1-of ( tax-01 :arg3 ( thing :arg1-of ( tax-01 :arg3 ( thing :arg1-of ( tax-01 :arg3 ( thing :arg1-of ( tax-01 :arg3 ( thing :arg1-of ( tax-01 :arg3 ( thing :arg1-of ( tax-01 :arg3 ( thing :arg1-of ( tax-01 :arg3 ( thing :arg1-of ( tax-01 :arg3 ( thing :arg1-of ( tax-01 :arg3 ( thing :arg1-of ( tax-01 :arg3 ( thing :arg1-of ( tax-01 :arg3 ( thing :arg1-of ( tax-01 :arg3 ( thing :arg1-of ( tax-01 :arg3 ( thing :arg1-of ( tax-01 :arg3 ( thing :arg1-of ( tax-01 :arg3 ( thing :arg1-of ( tax-01 :arg3 ( thing :arg1-of ( tax-01 :arg3 ( thing :arg1-of ( tax-01 :arg3 ( thing :arg1-of ( tax-01 :arg3 ( thing :arg1-of ( tax-01 :arg3 ( thing :arg1-of
multi-sentence :snt1 ( hope-01 :arg0 i :arg1 ( contrast-01 :arg1 ( have-03 :arg0 ( woman :arg0-of ( have-03 :arg1 ( thing :arg1-of differ-02 ) ) ) :arg1 ( woman :arg1-of differ-02 ) ) :arg2 ( reason :arg0-of ( cause-01 :arg1 ( understand-01 :arg0 woman :arg1 ( danger :arg1-of ( differ-02 :arg2 ( poll-01 :arg2 ( opine-01 :arg0 public ) ) :arg1-of significant-02 ) ) ) ) ) ) ) :snt2 ( write-01 :arg0 person_name_0 )
and :op1 ( want-01 :arg0 ( location_name_0 :mod exact ) :arg1 ( make-01 :arg0 location_name_0 :arg1 money :arg2 it ) )
multi-sentence :snt1 ( instead-of-91 :arg1 ( become-01 :arg1 it :arg2 ( platform :beneficiary ( person :arg0-of play-01 :arg0-of ( want-01 :arg1 ( stunts :arg0 person ) ) ) ) ) :arg1-of quick-02 ) :snt2 ( say-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg2 '' ) ) :arg1 ( insiders :arg0 person ) )
and :op2 ( appear-01 :arg1 he :location comedy :time soon )
and :op2 ( recommend-01 :arg1 ( consider-02 :arg0 you :arg1 person_name_0 :condition ( available-02 :arg2 book :mod actual ) ) :time ( before :op1 ( order :mod online ) ) )
and :op1 ( want-01 :arg0 i :arg1 everything :time ( once :op1 ( late :degree more :compared-to ( late :degree more ) ) ) ) :op2 ( quote-01 :arg0 he )
state-01 :arg0 it :arg1 ( remain-01 :arg1 organization_name_0 :arg3 ( commit-01 :arg1 organization :arg2 ( ensure-01 :arg0 organization :arg1 ( security :poss state ) ) ) ) :medium statement
be-located-at-91 :arg1 ( and :op1 person_name_0 :op2 organization_name_1 :op3 ( company_name_4 :mod ttv ) ) :arg2 game
easy-05 :polarity - :arg1 that :time always :arg1-of ( cause-01 :arg0 ( and :op1 ( person :arg0-of ( have-rel-role-91 :arg1 person_name_0 :arg2 father ) ) :op2 ( person_name_1 :arg0-of ( have-rel-role-91 :arg1 person :arg2 father ) ) :li num_0 ) )
shrank :arg1 ( economy :mod german ) :arg2 ( percentage-entity percentage-entity_num_0 ) :location spring
report
district-firing :domain ( one :arg1-of ( include-91 :arg2 ( climaxes :mod big :location ( history :mod association ) ) ) ) :ord ( ordinal-entity ordinal-entity_num_0 :range ( history :mod association ) ) :arg1-of ( cause-01 :arg0 ( consecration :arg1 ( consecration :mod solemnly :poss ( flag :mod new ) ) :time ( date-entity month_date-entity_0 year_date-entity_0 ) ) )
contrast-01 :arg1 ( feel-01 :arg0 we :arg1 ( have-condition-91 :arg1 ( go-02 :mode imperative :arg0 we :arg4 government-organization_name_0 ) :arg2 ( go-01 :arg1 we :arg4 government-organization_name_0 :time yesterday ) ) ) :arg2 ( cause-01 :arg0 ( damage-01 :arg1 ( health :poss person ) :arg1-of ( cause-01 :arg0 ( possible-01 :arg1 ( do-02 :arg0 person :arg1 it ) ) ) ) )
occupy-01 :arg0 movement-07 :arg1 ( and :op1 love-01 :op2 peace ) :location ( behind :op1 ( campaign-01 :arg0-of ( favor-01 :arg1 democracy ) ) ) :arg1-of ( cause-01 :arg0 ( threaten-01 :arg0 ( person :arg0-of organize-01 :arg1-of ( include-91 :arg2 ( person :arg0-of organize-01 ) ) ) :arg1 ( suffrage :polarity - :mod universal :mod real ) ) ) :location city_name_0
multi-sentence :snt1 ( contribute-01 :arg0 ( act-02 :mod this ) :arg2 ( and :op1 ( rationalisation :arg1 ( service :mod public ) ) :op2 ( number :arg1-of actual-02 :quant-of ( person :arg0-of serve-01 :mod civil ) ) ) :arg1-of significant-02 ) :snt2 ( and :op1 ( eliminate-01 :arg0 person_name_0 :arg1 ( person_name_1 :arg0-of ( found-01 :arg1 person ) ) ) :op2 ( say-01 :arg0 person :arg1 ( and :op1 ( eliminate-01 :arg0 ( person_name_1 :arg0-of ( found-01 :arg1 person ) ) :arg1 ( found-01 :arg1 person ) ) :op2 ( message-01 :arg0 person ) ) ) )
say-01 :arg0 ( person_name_0 :quant ( multiple :op1 num_0 ) :arg0-of ( have-org-role-91 :arg1 organization_name_1 ) ) :arg1 ( spend-02 :arg0 person :arg1 ( monetary-quantity monetary-quantity_num_1 :unit cent :arg2-of ( copy-01 :arg1 ( thing :arg2-of ( copy-01 :arg1 ( thing :arg1-of ( decide-01 :arg0 media ) :mod strategy :mod strategic ) ) ) ) ) :arg3 ( thing :arg2-of ( copy-01 :arg1 ( thing :arg2-of ( copy-01 :arg1 ( thing :arg1-of ( decide-01 :arg0 media ) :mod strategy :mod strategic ) ) ) ) ) )
succeed-01 :arg0 ( premiere :arg1-of open-04 ) :arg1 ( more :compared-to ( number :quant-of ( person :arg0-of visit-01 ) ) )
and :op1 ( go-02 :arg0 i :arg4 school :time ( late :degree more ) ) :op2 ( fear-01 :arg0 i :frequency ( rate-entity-91 :arg3 ( temporal-quantity temporal-quantity_num_0 :unit day ) ) )
song :mod stupid :mod that :mod just :domain it
tube :mod ( dangerous :degree most ) :prep-with ( isolations :location ( below :op1 earth ) ) :arg0-of ( cause-01 :arg1 ( stop-01 :polarity - :arg0 ( person :arg0-of ( have-rel-role-91 :arg2 patient ) ) :arg1 material ) )
reach-01 :arg1 ( record :mod association ) :frequency ( rate-entity-91 :arg3 ( temporal-quantity temporal-quantity_num_0 :unit year ) ) :frequency ( rate-entity-91 :arg3 ( temporal-quantity temporal-quantity_num_2 :unit year ) ) :arg1-of ( cause-01 :arg0 person_name_0 )
say-01 :arg0 person_name_0 :arg1 ( life-threatening :polarity - :arg1 ( mesothelioma :mod '' ) )
comment-01 :arg0 ( and :op1 person_name_0 :op2 person_name_1 :op3 actress ) :arg3 ( comments :arg1 ( image :arg0-of hack-04 ) ) :time yesterday :arg1-of ( cause-01 :arg0 ( available-02 :polarity - :arg2 ( image :arg0-of hack-04 ) ) )
book :mod e :mod also :arg1-of ( instead-of-91 :arg2 option )
and :op1 ( expert-01 :arg1 ( person :arg0-of ( have-org-role-91 :arg1 country_name_0 :arg2 ( person :arg1-of ( expert-01 :arg2 ( lead-02 :arg0 person ) ) ) ) :arg0-of ( have-org-role-91 :arg2 professor ) ) :arg2 ( person_name_1 :arg0-of ( have-org-role-91 :arg2 professor ) ) :location ( between :op1 ( talk-02 :arg2 num_0 ) :op2 ( expect-01 :arg1 ( come-01 :arg1 ( criminal-organization_name_3 :location country_name_3 ) ) ) ) ) :op2 ( fall-07 :arg1 person :arg2 disease ) :condition ( expect-01 :arg1 ( come-01 :arg1 ( criminal-organization_name_3 :location country_name_3 ) :arg4 standstill ) )
say-01 :arg0 ( doctor :poss i ) :arg1 ( obligate-01 :arg2 radical :condition ( and :op1 ( overweight :degree very :domain i :degree very ) :op2 ( show-01 :arg0 i :arg1 ( symptom :mod cold ) ) ) )
want-01 :arg0 ( person :quant num_0 ) :arg1 ( express-01 :arg0 person :arg1 ( intend-01 :polarity - :arg0 person :arg1 ( intend-01 :arg0 person ) :time yet ) )
and :op1 ( do-02 :polarity - :arg0 ( all :arg1-of ( include-91 :polarity - :arg2 this ) ) :arg1 ( thing :arg1-of ( remove-01 :arg2 payroll :mod sole ) ) ) :op2 ( message-01 :arg0 i )
and :op1 ( confirm-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg1 ( association :mod association ) :arg2 ( executive :mod association ) ) ) :arg1 ( and :op1 ( person :arg0-of ( have-org-role-91 :arg1 person_name_0 :arg2 -rrb- ) ) :op2 ( person :arg0-of ( have-rel-role-91 :arg1 person_name_1 :arg2 friend ) ) :op3 ( person :arg0-of ( have-rel-role-91 :arg1 person :arg2 friend ) ) :op4 ( person :arg0-of ( have-rel-role-91 :arg1 person :arg2 friend ) ) :op5 ( person :arg0-of ( have-rel-role-91 :arg1 person :arg2 friend ) ) :op6 ( person :arg0-of ( have-rel-role-91 :arg1 person :arg2 friend ) ) :op7 ( person :arg0-of ( have-rel-role-91 :arg1 we :arg2 friend ) ) ) )
obligate-01 :arg1 family :arg2 ( leave-15 :arg0 family :arg1 ( house :poss family ) ) :duration ( up-to :op1 ( temporal-quantity temporal-quantity_num_0 :unit hour ) )
multi-sentence :snt1 ( and :op1 ( person_name_0 :prep-with ( person :quant num_0 :arg0-of ( have-org-role-91 :arg2 ( roman :mod original ) ) ) ) :op2 ( drive-02 :arg0 person :arg1 ( person :arg0-of visit-01 ) :arg2 park ) ) :snt2 ( and :op1 ( be-located-at-91 :arg1 ( person :arg0-of visit-01 ) :arg2 ( city :location ( over :op1 school ) ) ) :op2 ( be-located-at-91 :arg1 person :arg2 ( state :location ( over :op1 school ) ) ) :op3 ( thing :arg2-of ( result-01 :arg1 ( rÃ¶mer-projektwochen :poss person :arg1-of ( present-01 :arg0 person ) ) ) ) :location here )
give-01 :arg0 ( person_name_0 :arg0-of ( have-org-role-91 :arg2 minister ) ) :arg1 church :arg2 ( room :mod new :mod marksman ) :time ( after :op1 ( perform-01 :arg1 ( temporal-quantity temporal-quantity_num_0 :unit hour ) ) )
remember-01 :arg0 i :arg1 ( and :op1 ( person :mod this :arg0-of ( have-rel-role-91 :arg1 i :arg2 kid ) ) :op2 ( person :arg0-of ( do-02 :polarity - :arg1 yard ) ) )
and :op1 ( represent-01 :arg0 ( and :op1 ( lenglern :mod country_name_0 ) :op2 ( reserve :name ( name :op1 torpedo ) ) ) :arg1 ( league :mod association :mod new ) ) :op2 ( represent-01 :polarity - :arg0 ( league :mod country ) :arg1 ( club :mod gÃ¶ttinger ) :degree more )
horrible :domain ( ranking :mod politics :poss she )
and :op2 ( mesothelioma :arg1 ( person :mod ( young :degree more ) :arg0-of ( work-01 :polarity - :location ( occupations :arg1-of typical-02 ) ) ) )
multi-sentence :snt1 ( sorry-01 :arg1 i :arg2 ( person :arg0-of ( suffer-01 :arg1 atrocity ) :quant all :arg0-of ( suffer-01 :arg1 atrocity ) ) ) :snt2 ( say-01 :arg0 person_name_0 :arg1 ( work-01 :arg0 person :arg1 ( volunteer-01 :arg0 person ) :time ( week :mod last ) ) )
and :op1 ( remove-01 :arg1 ( table :poss ( class :name ( name :op1 tennis-district :op2 tennis-district ) ) :ord ( ordinal-entity ordinal-entity_num_0 ) ) :time ( before :op1 now :quant ( few :op1 ( temporal-quantity temporal-quantity_num_1 :unit year ) ) ) ) :op2 ( step :direction ( direction :mod right ) :domain this )
and :op1 ( come-01 :arg1 ( person_name_0 :arg0-of ( have-org-role-91 :arg1 ( feminist :arg1-of fame-01 :mod white ) :arg2 activist ) ) :time ( week :quant num_0 ) :time ( after :op1 ( shooting :poss person_name_1 :prep-on company_name_2 ) ) ) :op2 ( publish-01 :arg0 person :arg1 ( article :mod pithy :arg1-of ( distribute-01 :arg0 person_name_3 ) ) :arg1-of ( cause-01 :arg0 ( distribute-01 :arg0 person :arg1 ( protest-01 :arg0 person :arg1 racism :degree more ) ) ) )
possible-01 :arg1 ( wegstecken :arg1 it :arg1-of easy-05 ) :arg1-of ( cause-01 :arg0 ( participate-01 :arg0 it :arg1 ( person_name_0 :arg0-of ( favor-01 :arg1 ( person :arg0-of ( suffer-01 :arg1 ( and :op1 ( suffer-01 :arg0 child :arg1 ( person :arg0-of ( suffer-01 :arg1 ( cancer :mod '' ) ) ) ) :op2 ( person :arg0-of ( suffer-01 :arg1 ( person :arg0-of ( suffer-01 :arg1 ( cancer :name ( name :op1 -lrb- ) ) ) ) ) ) ) ) ) ) ) ) :arg1-of personal-02 :arg1-of personal-02 )
seek-01 :arg0 ( business :mod new :mod this :prep-as ( company :arg0-of provide-01 :mod cruise ) ) :arg1 ( position-02 :arg0 customer )
and :op1 ( thing :arg1-of present-01 :quant series ) :op2 perform-01 :op3 exhibit-01 :op4 information :op5 information :op6 information
have-concession-91 :arg2 ( grow-01 :arg1 person_name_0 :arg2 ( child :arg0-of ( have-rel-role-91 :arg1 person :arg2 child ) ) :prep-without ( person_name_1 :arg0-of ( have-rel-role-91 :arg1 person :arg2 parent ) ) )
multi-sentence :snt1 ( appreciate-02 :arg0 i :arg1 ( god :arg1-of ( return-01 :arg4 i ) ) :degree so ) :snt2 ( painted :arg1 ( they :quant all ) :location location_name_0 )
move-01 :arg0 this :arg1 ( person :arg0-of ( have-org-role-91 :arg3 judge-01 ) :arg0-of ( have-org-role-91 :arg3 judge-01 ) ) :arg2 ( person :arg0-of ( have-org-role-91 :arg3 judge-01 ) ) :time ( after :op1 ( retire-01 :arg0 person :arg1 ( person :arg0-of ( have-org-role-91 :arg1 council :arg3 judge-01 ) ) :time ( after :op1 ( retire-01 :arg0 person :arg1 ( stand :beneficiary council :purpose elect-01 ) :mod last ) :mod last ) ) )
see-01 :arg1 ( thing :arg2-of ( characteristic-02 :arg1 ( person :arg0-of drive-01 ) ) ) :time ( late :degree more ) :location ( house :location ( location_name_0 :location peninsula_name_1 ) )
be-located-at-91 :arg1 ( fragments :mod garnet :quant some ) :arg2 ( knee :poss i ) :mod still
tell-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg1 ( '' :arg1-of regular-03 ) :arg2 begins ) ) :arg1 trainerin
contrast-01 :arg1 ( provide-01 :arg0 fire-01 :arg1 ( end-01 :arg1 fight-01 ) :time immediate ) :arg2 ( remain-01 :arg1 ( problem :arg1-of major-02 :example organization_name_0 :example ( and :op1 ( demand-01 :arg0 organization :arg1 ( blockade-01 :arg0 country-region :arg1 country-region_name_1 :mod israeli-egyptian ) ) :op2 ( reopening :arg1 ( and :op1 ( url-entity :value air ) :op2 ( url-entity :value reopening ) ) :location country-region_name_1 ) ) ) )
shooting :time ( after :op1 now :quant ( almost :op1 ( temporal-quantity temporal-quantity_num_0 :unit year ) ) ) :location location_name_0 :time ( before :op1 now :duration ( almost :op1 ( temporal-quantity temporal-quantity_num_1 :unit year ) ) )
suggest-01 :arg0 ( person_name_0 :arg0-of ( criticize-01 :arg1 ( film :mod telegraph ) ) ) :arg1 ( possible-01 :arg1 ( lack-01 :arg0 ( lack-01 :arg1 quality :location ( film :poss child ) ) :arg1 ( reason :arg0-of cause-01 ) ) )
follow-01 :arg1 decide-01 :arg2 ( and :op1 ( summer :mod ( large :degree most ) :arg1-of ( include-91 :arg2 ( protest-01 :mod violent :quant most :location city_name_0 ) ) ) :op2 ( place-01 :arg1 decide-01 :duration ( multiple :op1 ( temporal-quantity temporal-quantity_num_0 :unit year ) ) ) )
ask-01 :arg0 i :arg1 ( do-02 :mode interrogative :arg0 it :arg1 ( stand-up-comedytour :mode interrogative :mod again ) :time ever ) :arg2 he
obligate-01 :arg2 ( criticize-01 :arg0 ( person :arg0-of organize-01 ) :arg1 ( criticize-01 :arg0 person ) )
attempt-01 :arg0 ( person :quant ( about :op1 num_0 ) ) :arg1 ( reach-01 :arg0 person :arg1 ( residence :source ( person_name_0 :arg0-of ( have-org-role-91 :arg2 ( minister :mod prime ) ) ) ) ) :time simultaneous
include-91 :arg1 ( and :op1 ( person :quant num_0 :arg0-of ( have-org-role-91 :arg2 soldier ) ) :op2 ( civilian :quant num_1 ) ) :arg2 ( and :op1 ( civilian :quant num_0 ) :op2 ( civilian :quant num_1 ) ) :arg2-of ( include-01 :arg1 ( person :arg0-of work-01 :mod incoming ) )
obligate-01 :arg1 ( woman :mod white ) :arg2 ( involve-01 :arg1 woman :arg2 story ) :purpose ( justify-01 :arg0 woman :arg1 ( murder-01 :arg1 person_name_0 ) )
and :op1 ( prove-01 :arg0 newspaper_name_0 :arg1 ( equal-01 :arg1 that :arg2 ( equal-01 :arg1 that :arg2 ( office :mod party :arg0-of lead-01 ) :duration ( almost :op1 ( multiple :op1 ( temporal-quantity temporal-quantity_num_0 :unit decade ) ) ) ) ) ) :op2 ( thing :arg1-of ( know-02 :arg2 ( name :op1 '' :op2 enormous :op3 enormous :op4 enormous :op5 enormous ) ) )
think-01 :arg0 i :arg1 so
and :op1 ( earlier :arg1 ( person :arg0-of ( have-rel-role-91 :arg1 i :arg2 father ) ) :time ( early :degree more :mod simple ) ) :op2 ( possible-01 :arg1 ( hear-01 :arg0 you :arg1 he :manner slow ) :time then :arg1-of ( cause-01 :arg0 ( begin-01 :arg0 he :arg1 ( sing-01 :arg0 he ) ) ) :arg1-of ( cause-01 :arg0 ( possible-01 :arg1 ( consent-01 :arg0 he :arg1 aircraft-type_name_0 ) ) ) )
spots :quant several :location ( chest :part-of i )
mean-01 :arg1 ( society :mod conformal ) :arg2 ( agree-01 :arg0 ( society :mod ( society :mod this ) ) :arg1 ( gratefully :arg0 ( element :mod each :poss ( society :mod this ) ) :arg1 ( principle :poss ( gift-01 :arg0 group ) ) ) )
boy :arg1-of ( include-91 :arg2 ( picture :mod terrible :time ( after :op1 ( thing :arg1-of ( symbolize-01 :arg2 ( horror :poss location_name_0 ) ) ) ) ) )
money :quant more :mod also :domain ( get-01 :arg0 person_name_0 :arg1 ( wage-01 :arg0 person :arg1 ( thing :arg1-of ( intend-01 :arg0 person ) :mod minimum ) :condition euro ) )
contrast-01 :arg1 ( possible-01 :arg1 ( run-02 :arg0 he ) :quant multiple ) :arg2 ( do-02 :polarity - :arg0 he :arg1 ( sport :mod any ) )
find-01 :arg1 ( and :op1 ( rate-entity-91 :arg1 ( monetary-quantity monetary-quantity_num_0 :unit dollar ) :arg2 ( volume-quantity volume-quantity_num_1 :unit gallon ) ) :op2 ( rate-entity-91 :arg1 ( monetary-quantity monetary-quantity_num_1 :unit dollar ) :arg2 ( temporal-quantity temporal-quantity_num_2 :unit month ) ) :arg3 ( rate-entity-91 :arg1 ( monetary-quantity monetary-quantity_num_1 :unit dollar ) :arg2 ( temporal-quantity temporal-quantity_num_2 :unit month ) ) :arg3 ( spirit :mod ( spirit :mod '' ) :arg1-of ( range-01 :arg3 ( and :op1 '' :op2 ( practice-01 :mod finance :arg1-of ( guilty-01 :polarity - ) :mod other ) ) ) ) ) :time ( test-01 :arg1 ( year :mod this ) )
contrast-01 :arg2 ( know-01 :arg0 i :arg1 ( thing :arg1-of ( resemble-01 :arg2 ( thing :arg1-of ( know-01 :arg0 i :time already ) ) ) ) )
contrast-01
contrast-01 )
give-01 :arg0 he :arg1 ( monetary-quantity monetary-quantity_num_0 :unit dollar )
have-condition-91 :arg1 ( win-01 :arg0 ( service :mod main :mod main ) :time ( year :mod past ) ) :arg2 ( have-03 :arg0 win-01 :arg1 ( thing :arg2-of price-01 :arg1-of correct-02 ) :mod also )
and :op1 ( possible-01 :arg1 ( sniffed :arg0 ( and :op1 child :op2 ( person :mod young ) ) :arg1 ( dance :name ( name :op1 jazz :op2 jazz :op3 jazz ) ) :time always ) ) :op2 ( bambini-ballet :arg0 ( and :op1 person_name_0 :op2 ( person :mod young ) :op3 ( person :arg0-of ( have-rel-role-91 :arg1 person :arg2 child ) ) ) :arg1 ( and :op1 ( dance :mod jazz ) :op2 ( dance :arg1 person ) :op3 ( hip-hop :arg1 person :arg2 educate-01 ) ) :time always )
have-purpose-91 :arg1 ( announce-01 :arg0 person_name_0 :arg1 ( speak-01 :arg0 person :mod again :medium subject ) :time now ) :arg2 ( respect-01 :mod this )
multi-sentence :snt1 ( look-02 :arg0 it :arg1 ( sell-01 :arg1 ( service :mod video :poss company_name_0 ) :arg2 ( over :op1 ( monetary-quantity monetary-quantity_num_0 ) ) ) :time ( before :op1 now :quant ( temporal-quantity temporal-quantity_num_0 :unit month ) ) ) :snt2 ( appear-01 :arg1 ( cooperate-01 :mod of-course ) :mod of-course )
ask-02 :arg0 source :arg1 ( remain-01 :arg1 source :arg3 anonymous ) :arg1-of ( cause-01 :arg0 ( public-02 :polarity - :arg1 negotiate-01 ) )
and :op1 ( deleted :arg1 ( thing :arg2-of ( source-01 :arg0 ( person :arg0-of ( use-01 :arg1 ( person :arg0-of use-01 ) ) :mod another ) ) ) :time ( late :degree more ) ) :op2 ( replaces :arg0 ( person :mod another :arg0-of ( account-01 :arg1 ( thing :time prior ) ) ) :arg1 thing )
sight :arg1 ( lady :quant num_0 :arg1-of fix-03 :accompanier ( lady :arg1-of fix-03 ) ) :mod particular
or :op1 ( use-01 :arg1 ( thing :mod ( large :degree more ) :arg1-of ( involve-01 :arg2 ( workshop :mod skateboard ) ) ) :arg2 ( workshop :mod skateboard ) ) :op2 ( involve-01 :arg1 ( crew :name ( name :op1 goodfoot ) ) :arg2 ( workshop :arg1-of soft-02 ) )
multi-sentence :snt1 ( contrast-01 :arg1 ( change-01 :arg0 ( tragedy :mod this ) :arg1 ( life :poss i ) ) :arg2 ( change-01 :polarity - :arg0 ( tragedy :mod this ) :arg1 ( life :poss i ) ) ) :snt2 ( say-01 :arg0 she :arg1 tear )
condemn-01 :arg0 person_name_0 :arg1 ( person :arg0-of hack-04 ) :location ( thing :arg1-of ( work-12 :arg0 person ) ) :purpose ( post-01 :arg0 person :arg1 ( picture :mod chopped :arg1-of ( resemble-01 :arg2 ( sell-01 :arg1 ( product :arg1-of steal-01 :arg1-of steal-01 ) ) ) ) )
have-condition-91 :arg1 ( event :mod amr-unknown :condition ( have-03 :arg0 it :arg1 event :time yesterday ) ) :arg2 ( take-01 :arg0 it :arg1 ( vitality :poss he :mod essential ) :condition ( have-03 :arg0 it :arg1 event :time yesterday ) )
estimate-01 :arg0 ( person :arg0-of analyze-01 ) :arg1 ( profit-01 :arg0 ( profit :mod ultra ) :arg2 ( monetary-quantity monetary-quantity_num_0 :unit yuan ) )
continue-01 :arg0 person_name_0 :arg1 ( procedure :topic ( thing :arg1-of stake-01 ) )
fall-01 :arg1 ( temperature :part-of ( temperature :part-of city ) ) :arg4 ( maximum :op1 ( product-of :op1 num_0 :op2 c. ) :mod just ) :time ( after :op1 ( have-03 :arg0 ( winter :time ( week :mod last ) ) :arg1 ( dose-01 :arg2 spring ) ) ) :mod again
and :op2 ( want-01 :arg0 location_name_0 :arg1 ( make-01 :arg0 location_name_0 :arg1 money :arg2 it ) :manner exact )
multi-sentence :snt1 ( see-01 :arg0 we :arg1 ( we :location ( or :op1 ( talk-02 :arg2 num_0 :arg1 ( weather :arg1-of nice-01 ) :time ( date-entity month_date-entity_0 day_date-entity_0 ) ) :op2 ( promise-01 :arg0 we :time ( weekend :arg1-of differ-02 ) ) ) ) ) :snt2 ( and :op1 ( come-01 :arg1 ( countryside :location location_name_0 ) :arg4 back :mod still ) :op2 ( plan-01 :arg0 organisers :arg1 ( edition :mod new ) ) )
contrast-01 :arg2 ( threaten-01 :arg0 ( and :op1 ( approach-02 :arg1 compete-01 ) :op2 ( technology :mod new ) ) :arg1 ( negotiation :arg1 ( royalties :arg1-of ( connect-01 :arg2 ( danger :arg1-of special-02 ) ) ) ) :arg2 ( and :op1 ( approach-02 :arg1 compete-01 ) :op2 ( technology :mod new ) ) )
multi-sentence :snt1 ( contrast-01 :arg1 ( influence-01 :arg0 ( and :op1 ( series :name ( name :op1 documentaries ) :mod tv ) :op2 ( role :mod tv ) :op3 ( role :mod film ) ) :arg1 he :time ( decade :mod next ) ) :arg2 ( think-01 :arg0 he :arg1 ( think-01 :arg0 he :arg1 ( thing :arg1-of ( do-02 :arg0 you :time next ) ) ) ) ) :snt2 ( cause-01 :arg0 ( feel-02 :arg0 he :arg1 ( resemble-01 :arg1 it :arg2 ( or :op1 ( sit-01 :arg1 time :arg2 around ) :op2 ( play-01 :arg0 you :location spot ) ) :mod just ) ) :arg1 ( think-01 :arg0 he :arg1 ( thing :arg1-of ( do-02 :arg0 you :time next ) ) ) )
say-01 :arg0 ( person_name_0 :arg0-of ( oppress-01 :arg1-of fix-03 ) ) :arg1 ( chapel :arg1-of fix-03 )
and :op1 ( hand :part-of hand ) :op2 ( shook :arg1 hand ) :time then
and :op1 ( have-03 :arg0 person_name_0 :arg1 ( cup :quant num_0 :mod organization_name_1 ) :time ( after :op1 ( car :poss person :location ( and :op1 ( state :location ( north :part-of city_name_2 ) ) :op2 ( person :arg1-of kill-01 ) ) ) ) ) :op2 ( race :mod race )
leave-14 :mode imperative :arg0 you :arg1 ( person :arg0-of ( have-rel-role-91 :arg1 you :arg2 sister ) ) :arg2 peace
accuse-01 :arg0 ( police :location location_name_0 ) :arg1 ( man :mod old :mod old :arg1-of ( mean-01 :arg2 ( drive-01 :arg0 man ) ) ) :arg2 ( drive-01 :arg0 man )
return-01 :arg1 person_name_0 :arg4 ( through :op1 ( end-01 :arg1 ( race-02 :arg0 person :arg3 ( race-02 :arg0 person ) :location peninsula_name_1 ) ) )
and :op1 ( introduce-02 :arg0 person_name_0 :arg1 ( line :quant num_0 ) :arg3 ( speak-01 :arg3 documentary :mod last ) ) :op2 ( thrilled :domain he )
and :op1 ( come-01 :arg1 ( organization_name_0 :arg0-of ( have-rel-role-91 :arg2 patient ) ) :arg3 ( symptom :arg1-of resemble-01 ) ) :op2 ( make-18 :arg0 ( person :arg0-of ( have-rel-role-91 :arg2 patient ) ) :arg1 ( symptom :arg1-of resemble-01 ) :time ( late :degree more ) )
and :op2 ( exemplify-01 :arg0 ( have-03 :arg0 he :arg1 ( sets :medium television :poss organization_name_0 :location ( room :mod live-01 ) ) :mod still ) :arg1 ( reject-01 :arg0 he :arg1 television :mod basic ) )
play-02 :arg0 military :arg1 ( role :mod important :location country_name_0 ) :arg1-of ( cause-01 :arg0 ( and :op1 ( play-02 :arg0 military :arg1 role ) :op2 ( revolted :arg1 military :degree more :time already ) ) )
fall-01 :arg1 rain-01 :arg4 ( under :op1 city ) :time ( date-interval :op1 ( date-entity day_date-entity_0 ) :op2 ( date-entity ) ) :time ( after :op1 ( fall-01 :arg1 ( pupil :quant num_0 ) :arg4 ( under :op1 city ) :time ( after :op1 ( mm :quant num_1 :arg1-of ( come-01 :arg4 sunday :time already :time already ) ) ) ) )
and :op1 ( contribute-01 :arg0 ( '' :arg1 ( service :mod this ) :arg1-of actual-02 ) :arg2 ( rationalization :poss ( service :mod public ) ) :manner substantial ) :op2 ( become-01 :arg1 ( list-01 :arg1 ( person :arg0-of ( have-org-role-91 :arg1 ( government-organization :arg0-of govern-01 ) :arg2 ( secretary :mod vice ) ) ) :arg2 ( person :arg0-of ( have-org-role-91 :arg1 cabinet :arg2 ( secretary :mod vice ) ) ) ) :arg2 ( and :op1 ( person :arg0-of ( have-org-role-91 :arg1 cabinet :arg2 ( secretary :mod vice ) ) ) :op2 ( person :arg0-of ( have-org-role-91 :arg1 cabinet :arg2 secretary ) ) :op3 ( person :arg0-of ( have-org-role-91 :arg1 ministry :arg2 secretary ) ) :op4 ( person :arg0-of ( have-org-role-91 :arg1 ministry :arg2 secretary ) ) ) :purpose ( and :op1 decentralization :op2 plan-01 ) )
and :op2 ( clear-06 :arg1 ( deal-01 :arg0 we :arg2 ( regime :mod authoritarian ) ) )
and :op1 ( know-01 :polarity - :arg0 that :arg1 ( time :domain time :beneficiary claim-01 ) ) :op2 ( contrast-01 :arg1 ( know-01 :polarity - :arg0 that :arg1 ( time :domain time ) ) :arg2 ( certain :polarity - :degree very :prep-with complainants ) )
go-02 :arg0 ( cruise :mod norwegian ) :arg4 ( market :mod stock ) :time ( date-entity month_date-entity_0 year_date-entity_0 )
possible-01 :arg1 ( save-02 :arg0 you :arg1 ( monetary-quantity :arg1-of ( include-91 :arg2 ( monetary-quantity :arg1-of ( purchase-01 :arg0 book ) :mod new ) ) :quant ( more-than :op1 num_0 ) ) )
contrast-01
and :op1 ( fall-01 :arg1 ( 5mm :quant num_0 :mod another ) :arg4 city :time ( until :op1 ( fall-01 :arg1 ( 5mm :quant num_0 :mod another ) :arg4 city ) ) :time ( until :op1 ( fall-01 :arg1 ( 5mm :quant num_0 :mod another ) :arg4 city ) ) )
and :op1 ( seize-01 :arg1 motor ) :op2 ( confiscate-01 :arg1 motor :duration ( temporal-quantity temporal-quantity_num_0 :unit month ) )
multi-sentence :snt1 ( want-01 :arg0 we :arg1 ( show-01 :arg0 we :arg1 ( respond-01 :mod positive ) ) ) :snt2 ( say-01 :arg0 i :arg1 ( ask-02 :arg0 ( person_name_0 :arg0-of ( have-org-role-91 :arg2 defender ) :mod foreign ) :arg1 win-01 :time ( minute :ord ( ordinal-entity ordinal-entity_num_0 ) ) ) )
contact-01 :arg0 ( person_name_0 :arg1-of ( know-02 :arg2 ( name :op1 '' :op2 wunderstoff ) :time once ) ) :arg1 trigger :mod ( all :mod almost )
promise-01 :polarity - :arg0 that :arg2 city_name_0
concern-01 :arg0 ( notice-01 :arg0 we :arg1 ( mistake-02 :arg0 we ) ) :arg1 ( possible-01 :arg1 ( find-01 :arg0 we ) :arg1-of ( cause-01 :arg0 ( repeat-01 :arg0 we :arg1 ( mistake-02 :arg0 we :arg1-of ( lead-03 :arg2 ( disclose :arg1 ( event :time ( event :ord ( ordinal-entity ordinal-entity_num_0 ) ) ) ) ) ) ) ) )
and :op1 ( resemble-01 :arg1 ( project :arg1-of ( advanced-02 :arg2 ( project :arg1-of ( advanced-02 :degree far ) :location country_name_0 ) :time already ) ) :arg2 ( project :arg1-of ( advanced-02 :degree far ) ) ) :op2 ( show-01 :arg0 ( project :mod this ) :arg1 ( thing :arg1-of dream-01 :mod this ) )
propose-01 :arg0 ( improve-01 :arg1 ( service :mod ( service :mod telemedizinischen ) ) :arg1-of ( instead-of-91 :arg2 ( improve-01 :arg1 ( service :mod telemedizinischen ) ) ) ) :arg1 ( possible-01 :arg1 ( remedy :arg1 ( serve-01 :arg0 service :arg1 ( serve-01 :arg0 service :arg1 ( fly-01 :location transnational ) ) ) :purpose ( give-01 :arg0 service :arg1 ( possible-01 :arg1 ( give-01 :arg0 ( and :op1 ( person :arg0-of specialize-01 ) :op2 ( person :arg0-of ( have-org-role-91 :arg2 head-of-state ) ) :op3 ( person :arg0-of ( have-org-role-91 :arg2 head-of-state ) ) :op4 ( person :arg0-of ( have-org-role-91 :arg2 head-of-state ) ) :op5 ( person :arg0-of ( have-org-role-91 :arg2 head-of-state ) ) :location ( outside :op1 ( region :poss it ) ) ) :arg1 person ) ) ) ) )
multi-sentence :snt1 ( recommend-01 :arg1 ( and :op1 ( keep-02 :arg1 ( quiet :arg1 ( socialists :location country_name_0 ) ) ) :op2 ( tidy :arg1 ( '' :mod country ) ) ) ) :snt2 ( ally-01 :arg1 person_name_1 :mod ( important :degree most ) )
contrast-01 :arg2 ( and :op1 ( grow-01 :arg1 person_name_0 ) :op2 ( so :arg0 ( and :op1 child :op2 person ) :arg1 ( person :arg0-of ( teach-01 :arg1 ( retire-01 :arg0 person ) ) ) :arg2 ( person :arg0-of ( have-org-role-91 :arg3 judge-01 ) ) :time ( date-entity year_date-entity_0 month_date-entity_0 ) ) )
and :op2 ( intelligence :mod ausgedrÃ¼ckter :domain jazz )
act-02 :arg0 confidence :location ( direction :quant num_0 ) :location ( direction :quant num_0 ) :arg1-of ( cause-01 :arg0 ( and :op1 ( inward :arg1 ( person :arg0-of ( guard-01 :arg1 ( manage-01 :arg1 ( manage-01 :arg1 public ) ) :ord ( ordinal-entity ordinal-entity_num_1 ) ) :ord ( ordinal-entity ordinal-entity_num_1 ) ) :location company_name_0 :ord ( ordinal-entity ordinal-entity_num_1 ) ) :op2 ( voice :arg0 person :arg1 ( voice :poss ( concern-01 :arg0 public ) ) ) :op3 ( unrest :arg0 person :arg1 ( voice :poss ( concern-01 :arg0 public ) ) ) :condition ( run-out-05 :arg1 thing :manner wrong ) ) )
recommend-01 :arg1 ( house :poss council :domain ( person :arg0-of ( have-org-role-91 :arg2 ( chairman :mod new ) ) ) )
and :op1 ( have-03 :arg0 ( person :arg0-of ( have-org-role-91 :arg3 judge-01 ) ) :arg1 ( opportunity :purpose ( buy-01 :arg0 person :arg1 ( pairs :quant num_0 ) ) ) ) :op2 ( let-01 :arg0 person :arg1 ( compete-01 :arg0 ( person :quant num_0 :arg0-of rival-01 :arg0-of rival-01 ) :prep-against ( other :mod each ) ) ) :op3 ( have-condition-91 :arg1 ( compete-01 :mod ( other :mod each ) ) :arg2 violet )
band :mode imperative :arg0 you :arg1 ( district :mod city_name_0 )
contrast-01 :arg1 ( release-01 :arg1 photo ) :arg2 ( say-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg1 company_name_0 :arg2 spokeswoman ) ) :arg1 ( have-org-role-91 :arg0 person :arg1 company :arg2 spokeswoman ) :time now )
change-01 :arg1 ( thing :arg2-of ( result-01 :arg1 ( thing :arg1-of ( tax-01 :arg3 tax ) :mod ultra ) ) ) :arg2 ( rate-entity-91 :arg1 ( percentage-entity percentage-entity_num_0 ) :arg2 ( temporal-quantity temporal-quantity_num_2 :unit year ) ) :arg3 ( percentage-entity percentage-entity_num_3 )
create-01 :arg0 this :arg1 ( duopoly :mod ( unsustainable :mod almost ) :arg0-of ( require-01 :arg1 ( reform-01 :mod ( comprehensive :degree full ) ) ) )
think-01 :arg0 i :arg1 ( and :op1 ( die-01 :arg1 i ) :op2 ( lose-02 :arg0 i :arg1 ( skill :poss i :quant all ) :manner slow ) )
request-01 :arg0 person_name_0 :arg1-of ( cause-01 :arg0 ( criticize-01 :arg0 ( coalition :mod ( coalition :mod organization_name_1 ) ) :arg1 paycheck ) )
and :op1 ( have-03 :arg0 state_name_0 :arg1 ( thing :arg1-of ( tax-01 :arg3 ( income :poss corporation ) ) :arg1-of ( low-04 :degree more ) ) :location ( area :quant num_0 :mod all ) ) :op2 ( rate :mod business :arg1-of strong-02 :mod business )
have-concession-91 :arg2 ( eye :part-of he :arg1-of friendly-01 )
and :op1 ( welcome-01 :arg1 this :arg2 ( direction :mod right ) ) :op2 ( develop-02 :arg1 ( develop-02 :arg0-of ( make-02 :arg1 ( likely-01 :arg1 ( come-01 :arg1 i :arg4 ( and :op1 ( fight-01 :arg0 organization_name_0 :manner political ) :op2 ( before :op1 organization_name_1 ) ) ) :degree more ) ) ) )
have-concession-91 :arg1 ( come-01 :arg1 ( revenue :quant ( between :op1 num_0 :op2 num_1 ) ) :arg3 company ) :arg2 ( come-01 :arg1 ( revenue :poss corporation ) :arg3 ( percentage-entity percentage-entity_num_0 ) :arg4 country )
and :op1 ( work-01 :arg0 they :arg2 chain :duration ( temporal-quantity temporal-quantity_num_0 :unit year ) ) :op2 ( responsible-03 :arg0 they :arg1 ( department :mod clothing :part-of ( location :quant num_1 :location location_name_0 ) ) )
and :op1 ( devote-01 :arg0 he :arg1 he :arg2 ( task-01 :arg1 ( career :poss he ) ) ) :op2 ( and :op1 ( sick-05 :arg1 he ) :op2 ( agony :arg1 disease ) :op3 ( agony :arg1 disease ) :op4 ( treatment :arg1 disease ) :op5 ( treat-03 :arg1 he ) )
adjust-01 :arg0 you :arg1 ( camera :poss you ) :arg3 ( or :op1 photograph-01 :op2 video ) :mod also :arg1-of ( want-01 :arg0 you :arg1-of ( want-01 :arg0 you ) )
contrast-01 :arg2 ( make-02 :arg0 person_name_0 :arg1 ( make-02 :arg0 it :arg1 ( appear-01 :arg1 they :manner ( light :mod ( positive :degree more ) ) ) ) )
contrast-01 :arg1 ( person_name_0 :time late :time ( until :op1 ( reconstruct-01 :arg1 multivitamin :location ( massif :mod mountain ) ) ) :time ( until :op1 ( reconstruct-01 :arg1 multivitamin :location ( massif :mod mountain ) ) ) ) :arg2 ( development :arg1 ( develop-02 :arg1 '' :mod '' ) :location forefronts )
and :op1 ( rise-01 :arg1 she :arg4 ( politics :arg1-of high-02 ) ) :op2 ( work-01 :arg0 she :location government-organization_name_0 :arg1-of ( cause-01 :arg0 ( become-01 :arg1 ( head :part-of ( head :part-of head ) ) :arg2 ( soon :degree soon ) ) ) )
(-(
feel-01 :arg0 company_name_0 :arg1 ( thing :arg1-of fortify )
and :op1 ( inferences :arg1 ( person_name_0 :arg0-of ( have-org-role-91 :arg1 country_name_1 :arg2 president ) ) :arg2 ( defeat-01 :arg1 ( army :poss person ) :manner heavy ) :time previous ) :op2 ( announce-01 :arg0 person :arg1 ( change-01 :arg1 ( leadership :mod top :poss army ) :manner ( give-01 :polarity - :arg1 detail ) ) )
say-01 :arg0 ( person_name_0 :arg0-of ( have-org-role-91 :arg1 country_name_1 :arg2 ( minister :mod energy ) ) ) :arg1 ( schedule-01 :arg1 negotiate-01 :arg3 ( come-01 :arg1 negotiate-01 ) )
get-01 :arg0 person_name_0 :arg1 ( thing :arg1-of occasion-02 :mod sleep-01 ) :time ( after :op1 ( multiple :op1 ( temporal-quantity temporal-quantity_num_0 :unit month ) ) ) :location peninsula_name_1 :prep-with ( schoolmates :quant ( up-to :op1 num_0 ) ) :location ( hall :mod sleep-01 )
and :op1 ( easy-05 :polarity - :arg1 decide-01 :beneficiary i ) :op2 ( matured :arg1 decide-01 :duration ( several :op1 ( temporal-quantity temporal-quantity_num_0 :unit month ) ) )
contrast-01 :arg2 ( and :op1 ( continue-01 :arg1 ( person :arg0-of ( have-org-role-91 :arg3 judge-01 ) ) ) :op2 ( join-01 :arg0 person :arg1 organization_name_0 ) )
say-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg1 country_name_0 :arg2 member ) ) :arg1 ( plan-01 :polarity - :arg1 ( coup :arg1-of ( remain-01 :arg3 ( person :arg0-of ( have-org-role-91 :arg2 ( minister :mod prime ) ) ) :location country ) ) )
and :op1 ( irritation :arg1 ( asbestos :name ( name :op1 brustfell ) :mod brustfell ) ) :op2 ( possible-01 :arg1 ( trigger-01 :arg0 irritation :arg1 person_name_0 ) )
celebrate-02 :arg0 i :arg1 ( anniversary :poss they :ord ( ordinal-entity ordinal-entity_num_0 ) )
accuse-01 :arg1 person_name_0 :arg2 ( girl :arg0 girl :arg1 ( location_name_2 :purpose ( renovate-01 :arg0 girl ) ) )
base-02 :arg1 ( contact-01 :mod this :quant ( proportion :mod large ) ) :arg2 ( and :op1 ( use-01 :arg1 ( building :poss we ) :arg1-of normal-02 ) :op2 ( age-01 :arg1 contact-01 :arg2 ( temporal-quantity temporal-quantity_num_0 :unit year ) ) ) :medium ( statement :poss he )
and :op2 ( hospital :polarity - :mod just :domain it )
stay-01 :arg1 i :location gym :time always :purpose ( apologize-01 :arg0 i :arg1 ( it :location there ) )
multi-sentence :snt1 ( look-02 :arg0 ( person_name_0 :arg0-of ( have-org-role-91 :arg2 defender ) ) :arg1 it ) :snt2 ( contrast-01 :arg2 ( and :op1 ( find-01 :arg0 we :arg1 it :mod only ) :op2 ( make-18 :arg0 we :arg1 gated :mod even ) ) )
point-out-02 :arg0 ( one :arg1-of ( include-91 :arg2 ( genus :mod ( prominent :degree most ) :location city_name_0 ) ) :mod ( prominent :degree most ) ) :arg1 ( return-01 :arg1 house-01 :arg4 ( level :arg1-of normal-02 :location country_name_1 ) )
reside-01 :arg0 ( enterprise :arg1-of ( reside-01 :arg0 enterprise ) :location location_name_0 ) :arg1 ( ship :quant num_0 :part cruise ) :location location_name_0 :arg1-of ( cause-01 :arg0 ( and :op1 ( sea_name_2 :arg0 continent_name_1 :arg1 ( ship :quant num_0 :mod cruise ) :location ( route :mod cruise :location ( between :op1 country_name_3 :op2 sea_name_3 :op3 location_name_4 :op4 location_name_4 ) ) ) ) )
fear-01 :arg0 background :arg1 ( affect-01 :arg0 paycheck :arg1 ( traffic :mod border :arg1-of local-02 ) :accompanier ( country :location sea_name_1 ) )
play-11 :polarity - :arg2 jazz :concession ( even-if :op1 ( forbidden :polarity - :arg1 jazz :arg1-of direct-02 ) )
cause-01 :arg0 ( possible-01 :arg1 ( chalked :arg0 guest :mod also ) )
and :op1 ( obligate-01 :arg1 plane :arg2 ( land :mod ( or :op1 ( speed :mod wind ) :op2 ( direction :mod ( over :op1 ( distance-01 :mod short ) ) ) ) :time sudden ) ) :op2 ( obligate-01 :arg2 ( start-01 :arg0 plane ) )
and :op1 ( tell-01 :arg0 it :arg1 story :time always ) :op2 ( great :domain that )
excerpt :arg0 ( and :op1 love-01 :op2 letter ) :arg1 ( and :op1 love-01 :op2 letter :mod '' ) :arg2 person_name_0 :manner exclusive-02
contrast-01 :arg1 ( probable :domain ( fire-01 :arg0 ( approach-02 :mod this ) :arg1 ( protest-01 :location ( district :mod business :poss city_name_0 ) ) :mod probable ) ) :arg2 ( and :op1 ( activist :arg0-of ( have-org-role-91 :arg2 activist ) ) :op2 ( person :arg0-of ( have-org-role-91 :arg2 activist ) ) :time ( after :op1 ( announce-01 :arg0 activist :arg1 way ) :duration ( up-to :op1 ( temporal-quantity temporal-quantity_num_0 :unit hour ) ) ) )
contrast-01 :arg2 ( serve-01 :arg0 we :time past :condition ( learn-01 :polarity - :arg0 we :arg1 amr-unknown ) )
and :op1 ( receive-01 :arg0 ( person_name_0 :arg0-of ( have-org-role-91 :arg1 ( commission :mod ( right :mod human ) ) :arg2 chair ) ) :arg1 she :arg2 ( agree-01 :arg0 ( commission :mod ( right :mod human ) ) :arg1 ( thing :manner-of ( receive-01 :arg0 ( and :op1 person_name_2 :op2 person_name_2 ) :arg1 ( thing :quant num_1 :arg1-of ( include-91 :arg2 ( thing :quant num_1 :arg2-of ( right-05 :arg1 human ) ) ) ) ) ) ) ) :op2 ( guarantee-01 :arg0 ( and :op1 person_name_2 :op2 ( inserted :mod other ) ) :arg1 ( right-05 :arg1 union :arg2 ( or :op1 ( protect-01 :arg1 ( interest :poss union ) ) :op2 ( join-up-02 :arg0 union :arg1 '' ) ) ) ) :time ( possessed :arg0 ( lady :ord ( ordinal-entity ordinal-entity_num_0 ) :mod ( right :mod human ) ) :arg1 chair )
obligate-01 :polarity - :arg1 we :arg2 ( lose-02 :arg0 we :arg1 anything )
warn-01 :arg0 ( person :arg0-of ( lead-02 :arg1 organization_name_0 ) ) :arg1 ( person_name_1 :arg0-of ( lead-02 :arg1 organization ) ) :arg2 ( develop-02 :arg0 person :arg1 ( concept :mod bottle :prep-against ( person :arg0-of ( have-org-role-91 :arg1 government-organization_name_2 :arg2 minister ) :arg1-of relevant-01 ) ) ) :time then
and :op1 ( seek-01 :arg0 ( reason :arg0-of ( cause-01 :arg1 ( overcrowding :location religious-group_name_0 ) ) ) :arg1 ( onslaught :mod aid-01 ) ) :op2 ( possible-01 :polarity - :arg1 ( provide-01 :arg0 authority :arg1 ( place :quant enough :location ( facility :mod community ) ) ) )
contrast-01 :arg1 ( look-01 :arg0 person_name_0 :direction around ) :arg2 ( speak-01 :arg0 person_name_1 )
he :quant num_0 :domain he :time ( die-01 :arg1 he :time ( date-entity month_date-entity_0 day_date-entity_0 ) )
use-01 :arg0 ( person :arg0-of participate-01 :quant all ) :arg1 ( entrance :poss person ) :arg2 ( announce-01 :arg0 person :arg1 ( demand-01 :arg0 public ) :arg1-of public-02 ) :location forefield
look-01 :arg0 person_name_0 :arg1 ( foot :part-of person ) :time ( alone :domain it :mod again )
need-01 :polarity - :arg0 ( '' :arg1 beer ) :arg1 ( match-01 :arg0 he :arg1 ( and :op1 ( water :mod good ) :op2 commodity :op3 ( factor :arg1-of high-02 ) ) :time ( swim-01 :arg0 he :arg2 ( rate-entity-91 :arg1 num_0 :arg2 ( temporal-quantity temporal-quantity_num_0 :unit year ) :location city_name_0 ) ) )
camaraderie :mod of-course
hope-01 :arg1 ( possible-01 :arg1 ( visit-01 :arg0 he :arg1 peninsula_name_1 :time ( year :mod next ) :purpose ( meet-03 :arg0 he :arg1 city_name_0 ) ) )
contrast-01 :arg1 ( open-01 :arg0 station :arg1 ( operation :poss station :duration ( about :op1 ( temporal-quantity temporal-quantity_num_0 :unit minute ) ) ) ) :arg2 ( broadcast-01 :arg0 station :mod again :time now )
answer-01 :arg1 treasure :arg2 negative
possible-01 :arg1 ( know-01 :arg0 no-one :arg1 ( cost-01 :mode interrogative :arg1 ( mismanage-01 :mod this ) :arg2 life ) )
say-01 :arg1 ( important :domain ( possible-01 :polarity - :arg1 ( event :mod such :time ( ever :polarity - ) :mod again ) ) ) :time today
produce-01 :arg1 ( asbestos :mod globe ) :arg4 ( rate-entity-91 :arg1 ( more-than :op1 ( mass-quantity mass-quantity_num_0 :unit kilogram ) ) :arg2 ( temporal-quantity temporal-quantity_num_1 :unit year ) )
say-01 :arg0 person_name_0 :arg1 ( and :op1 ( realize-02 :arg0 it :arg1 ( document :arg1-of sick-05 :poss it ) :time ( age-01 :arg1 it :arg2 ( temporal-quantity temporal-quantity_num_0 :unit year ) ) :time ( after :op1 ( operate-01 :arg1 ( and :op1 ( achillessehnen :poss it ) :op2 ( stretch :poss it ) ) :quant several ) ) ) :op2 ( read-01 :arg0 it :arg1 ( leave-11 :arg0 it :arg1 room ) ) :op3 ( suffer-01 :arg0 it :arg1 ( leave-11 :arg0 it :arg1 room ) ) )
multi-sentence :snt1 ( need-01 :arg0 she :arg1 ( chairman :mod considerable ) ) :snt2 ( hope-01 :arg0 i :arg1 ( find-01 :arg0 she :arg1 it ) )
and :op1 ( come-01 :arg1 ( thing :arg2-of ( name-01 :arg1 ( pvc :name ( name :op1 asbestiform :op2 '' :op3 fabric ) ) ) ) :arg3 ( word :name ( name :op1 asbestiform :op2 asbestiform :op3 '' :op4 '' :op5 fabric ) ) )
and :op1 ( consult-01 :arg0 person_name_0 :arg1 ( person :mod ( old :degree more ) :arg1-of ( include-91 :arg2 ( person :mod white ) ) ) ) :op2 ( interview-01 :arg0 person :arg1 ( person :mod ( old :degree more ) :source white ) ) :op3 ( discover-01 :arg0 person :arg1 ( explain-01 :arg0 person :arg1 it ) )
and :op1 ( play-02 :arg0 military :arg1 ( role :mod important :location country_name_0 ) ) :op2 ( geputscht :arg1 military :arg1-of frequent-02 :time already )
confirm-01 :arg0 ( person :arg0-of ( confirm-01 :arg1 club ) ) :arg1 ( stand-01 :arg1 person_name_0 :arg2 ( and :op1 -rrb- :op2 ( person :arg0-of ( have-rel-role-91 :arg1 person_name_1 :arg2 friend ) ) :op3 ( person :arg0-of ( have-rel-role-91 :arg1 person :arg2 friend ) ) :op4 ( person :arg0-of ( have-rel-role-91 :arg1 person :arg2 friend ) ) :op5 ( person :arg0-of ( have-rel-role-91 :arg1 we :arg2 friend ) ) ) )
say-01 :arg0 ( thing :arg1-of say-01 ) :arg1 ( think-01 :arg0 it :arg1 ( die-01 :arg1 it ) :time ( about :op1 ( temporal-quantity temporal-quantity_num_0 :unit year ) ) )
believe-01 :arg0 i :arg1 ( have-03 :arg0 you :arg1 ( something :quant ( less :degree far ) ) )
way :arg1-of clever :purpose ( save-01 :arg1 ( book :mod teach-01 :mod university ) )
contrast-01 :arg2 ( past :domain amr-unknown :condition ( learn-01 :polarity - :arg0 we :arg2 it ) )
recommend-01 :arg1 ( let-01 :arg0 we :arg1 ( house :poss we ) ) :prep-in fact :duration ( some :op1 ( temporal-quantity temporal-quantity_num_0 :unit year ) )
cause-01 :arg0 ( take-10 :arg0 ( press-01 :arg0 we :arg2 organization_name_0 ) :arg1 ( person_name_1 :arg0-of ( have-org-role-91 :arg1 organization :arg3 ( lead-02 :arg0 we :arg1 organization :mod absolute ) ) ) :time ( week :mod this ) :location mind :mod again )
and :op1 ( fill-01 :arg0 she :arg1 ( and :op1 ( emphases :arg1 ( policy :mod foreign ) :arg2 location_name_0 ) :op2 ( become-01 :arg1 policy :arg2 ( study-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg1 ( city-district_name_1 :location country_name_2 ) :arg3 ( study-01 :arg0 person ) ) ) ) ) :manner tradition ) ) :op2 ( participate-01 :arg0 person :arg1 ( contact-01 :arg0 person :arg1 ( democrat :mod society :location country_name_5 ) ) ) :op3 ( contact-01 :arg0 person :arg1 democrat :location country_name_5 )
have-03 :arg0 ( economy :mod country_name_0 ) :arg1 ( rate-entity-91 :arg1 num_0 :arg2 ( temporal-quantity temporal-quantity_num_0 :unit year ) ) :location spring
and :op1 ( criticize-01 :arg0 ( person :arg0-of criticize-01 ) :arg1 ( race :mod polizeiverhalten ) ) :op2 ( criticize-01 :arg0 person :arg1 person_name_0 :time after )
contrast-01 :arg2 ( show-01 :arg0 photo :arg1 ( include-01 :arg1 ( and :op1 ( person :arg0-of rebel-01 ) :op2 ( person :arg0-of rebel-01 ) :op3 ( person :arg0-of ( have-org-role-91 :arg1 government-organization_name_2 :arg2 boss ) ) :op4 ( person :arg0-of ( have-org-role-91 :arg1 government-organization_name_2 :arg2 boss ) ) :op5 ( person :arg0-of ( have-org-role-91 :arg1 government-organization_name_2 :arg2 boss ) ) :op5 ( person :arg0-of ( have-org-role-91 :arg1 government-organization_name_2 :arg2 boss ) ) ) :arg2 ( location_name_3 :beneficiary ( summit :mod economy :poss government-organization_name_4 ) ) ) ) :arg2 photo
and :op1 ( person_name_0 :domain ( man :arg1-of ( include-91 :arg2 ( person :arg0-of ( change-01 :arg1 character ) ) ) :mod altogether ) ) :op2 ( change-01 :arg0 person :arg1 thing :mod even :prep-as government-organization_name_1 )
have-concession-91 :arg1 ( remember-01 :arg0 i :arg1 ( hear-01 :polarity - :arg0 i :arg1 ( hear-01 :polarity - :arg0 i :arg1 i ) ) ) :arg2 ( remember-01 :arg0 i :arg1 ( shout-01 :arg0 i :arg2 he ) )
contrast-01 :arg2 ( inappropriate :arg1 ( event_name_0 :mod this ) )
say-01 :arg1 ( remember-01 :polarity - :mode imperative :arg0 you :arg1 ( and :op1 ( intelligent :arg1 ( girl :mod intelligent ) ) :op2 ( grow-01 :arg1 ( girl :mod lucky ) ) :arg1-of ( say-01 :arg0 ( person :arg1-of neighbor-01 ) ) ) ) :arg2 person_name_0 :time ( before :op1 now :duration ( temporal-quantity temporal-quantity_num_0 :unit year ) )
disease :arg1-of ( ignore-01 :arg1-of easy-05 ) :domain ( we :quant most )
go-01 :arg1 ( topic :topic ( reform-01 :arg1 immigrate-01 ) ) :arg4 surface :mod again :time ( after :op1 ( picked :arg0 ( police :mod country_name_0 ) :arg1 ( minor :quant ( almost :op1 num_0 ) ) :location ( border-01 :arg1 country :arg2 country :location ( southwest :part-of country ) ) :time ( year :mod this ) ) ) :time ( after :op1 ( wake-up-02 :arg1 ( police :mod country ) :mod almost ) ) :time ( year :mod this ) :subevent-of ( topic :mod woman )
and :op1 ( view-01 :arg0 i :arg1 ( cable :arg0 ( cable :name ( name :op1 slammer ) :arg0-of ( connect-01 :arg1 ( listener :medium phone ) ) ) ) ) :op2 ( think-01 :arg0 i :arg1 ( have-manner-91 :arg1 this :arg2 amr-unknown ) )
cause-01 :arg1 ( possible-01 :arg1 ( possess-01 :arg0 person :arg1 ( power :mod buy-01 ) :purpose ( afford-01 :arg0 person :arg1 ( beer :mod german ) ) ) :mod also )
see-01 :polarity - :arg0 we :arg1 ( voice :poss he ) :time ever :purpose ( hear-01 :arg0 we :arg1 ( voice :poss he ) ) :arg1-of ( cause-01 :arg0 ( listen-01 :arg0 we :arg1 ( voice :poss he ) ) :mod only )
say-01 :arg0 he :arg1 this
include-91 :arg1 house :arg2 ( sell-01 :arg1 ( interest-01 :arg2 ( media :mod social ) ) ) :time ( wonder-01 :arg0 some :arg1 ( include-01 :mode interrogative :arg1 pig :arg2 ( thing :arg2-of ( price-01 :arg1 purchase-01 ) ) ) )
say-01 :arg0 she :arg1 ( cause-01 :arg0 amr-unknown :arg1 ( feel-01 :arg0 i :arg1 ( attract-01 :arg1 i :arg2 ( attract-01 :arg0 i :arg1 you ) ) :arg1-of ( cause-01 :arg0 amr-unknown ) ) :manner precise ) :manner precise
say-01 :arg1 ( idea :mod ( good :degree very ) :domain this ) :arg2 ( say-01 :arg0 ( person_name_0 :arg0-of ( have-org-role-91 :arg1 country_name_1 :arg2 ( minister :mod vice ) ) ) :arg1 ( know-01 :arg0 ( and :op1 ( person_name_1 :arg0-of ( have-org-role-91 :arg2 ( minister :mod vice ) ) ) :op2 ( person :arg0-of ( have-org-role-91 :arg1 country :arg2 ( minister :mod vice ) ) ) ) :arg1 ( thing :arg1-of ( know-02 :arg2 country_name_2 :mod exclusive-02 ) ) ) )
put-01 :arg0 you :arg1 camera :arg2 ( or :op1 photo :op2 video ) :arg1-of ( want-01 :arg0 you :arg1-of ( want-01 :arg0 you ) )
say-01 :arg0 ( person_name_0 :arg0-of ( have-org-role-91 :arg1 country_name_1 :arg2 ( minister :mod energy ) ) ) :arg1 ( schedule-01 :arg1 negotiate-01 :arg3 ( saturday :mod next ) )
have-org-role-91 :arg0 ( person_name_0 :arg0-of ( have-org-role-91 :arg1 organization_name_1 :arg2 mayor :time former ) ) :arg1 ( person :arg0-of ( have-org-role-91 :arg3 judge-01 ) ) :arg2 ( good :poss ( school :poss ( person :arg0-of ( have-org-role-91 :arg3 judge-01 ) ) ) )
say-01 :arg0 she :arg1 ( and :op1 ( become-01 :arg1 ( person :arg0-of ( have-org-role-91 :arg2 ( general :mod als ) ) ) :arg2 ( strong-02 :arg1 person :degree so ) :arg1-of ( strong-02 :degree so ) ) :op2 ( consult-01 :arg0 person :arg1 ( doctor :poss person ) ) ) :li num_0
meet-03 :arg0 person_name_0 :time yesterday :time ( after :op1 ( meet-02 :arg0 person :arg1 ( athletes :quant num_0 ) :location peninsula_name_1 ) )
get-03 :arg1 you :arg2 ( bad-04 :arg1 you :degree more ) :condition ( go-02 :arg0 you )
and :op1 ( raced :arg0 person_name_0 :arg1 wall :ord ( ordinal-entity ordinal-entity_num_0 :range ( ordinal-entity ordinal-entity_num_0 ) ) ) :op2 ( end-01 :arg0 person :arg1 ( evening :poss person ) ) :time ( ordinal-entity ordinal-entity_num_0 )
say-01 :arg0 ( person :arg0-of report-01 ) :arg1 ( and :op1 ( reach-01 :arg0 ( movement-07 :arg0 they ) :arg1 ( stage :mod new :consist-of ( disobedience :mod civil ) ) ) :op2 ( plan-01 :arg0 movement-07 :arg1 they :time ( week :arg1-of come-01 ) ) ) :medium demonstrate-01
think-01 :arg0 she :arg1 ( beat-03 :arg0 he :arg1 they )
explain-01 :arg0 ( person_name_0 :arg0-of ( have-org-role-91 :arg1 he :arg3 speak-01 ) ) :time ( late :degree more ) :arg1-of ( cause-01 :arg0 ( think-01 :arg0 person_name_1 :arg1 ( contrast-01 :arg1 ( become-01 :arg1 ( field :mod ( standing :poss ( standing :location ( east :part-of country_name_2 ) ) ) ) :arg2 ( part :part-of country_name_3 ) ) :arg2 ( obligate-01 :arg2 ( define-01 :arg1 ( status :poss person ) :mod again :purpose ( give-01 :arg1 power :arg2 ( bias-01 :arg1 ( and :op1 right :op2 interest-01 ) ) ) ) ) ) ) )
campaign-01 :arg0 person_name_0 :arg1 ( shooting :mod ( more :polarity - ) ) :time former :duration ( nearly :op1 ( temporal-quantity temporal-quantity_num_0 :unit year ) )
ready-02 :arg1 i :arg2 ( tell-01 :arg0 ( person :arg0-of ( have-rel-role-91 :arg1 ( family :arg1-of ( have-org-role-91 :arg0 person :arg2 member ) ) :arg2 member ) ) :arg1 i :arg2 ( tell-01 :arg0 ( person :arg0-of ( have-rel-role-91 :arg1 family :arg2 father ) ) :arg1 ( person :arg0-of ( have-rel-role-91 :arg1 family :arg2 father ) ) ) :time always )
and :op1 ( sought-after :arg1 ( home :poss capital ) :degree high ) :op2 ( subject-01 :arg1 home :arg2 ( increase-01 :arg1 ( thing :arg2-of price-01 :mod huge ) ) :arg1-of ( cause-01 :arg0 ( fear-01 :arg1 ( credit-02 :mod credit ) :arg1-of ( lead-03 :arg2 ( put-03 :arg1 ( limit-01 :arg1 ( loan-01 :mod mortgage ) ) ) :arg1-of wide-02 ) ) ) )
and :op1 ( have-03 :arg0 ( person_name_0 :arg0-of ( have-org-role-91 :arg1 country_name_1 :arg2 president ) ) :arg1 ( consequence :mod human ) :arg3 ( defeat-01 :arg1 separatist :manner heavy ) :time already ) :op2 ( announce-01 :arg0 ( leadership :mod ( army :mod top ) :arg1-of ( announce-01 :manner ( detail :polarity - ) ) ) :arg1 person )
need-01 :arg0 ( and :op1 ( thing :arg1-of content ) :op2 ( size :poss ( work-01 :arg0 event ) ) ) :arg1 ( make-01 :arg1 ( sem :ord ( ordinal-entity ordinal-entity_num_0 ) :arg1-of ( make-01 :arg0 organization_name_0 ) ) ) :concession ( and :op1 ( content :prep-in content ) :op2 ( size :poss work-01 ) )
state-01 :arg0 ( state :quant num_0 :arg1-of ( include-91 :arg2 ( state :quant num_1 ) ) :arg0-of ( inform-01 :arg1 ( and :op1 ( law :arg1-of resemble-01 ) :op2 ( court :mod court ) ) ) ) :arg1 ( and :op1 ( unconstitutional :domain location_name_0 ) :op2 ( direct-01 :arg0 state :arg1 ( measure-02 :mod such ) ) :time recent )
appointments :arg0 company_name_0 :arg1 ( person :arg0-of ( advise-01 :arg2 ( take-01 :arg0 person :arg1 lawyer ) ) :quant ( multiple :op1 num_0 ) ) :manner sudden
dare-01 :polarity - :arg0 ( person :arg0-of farm-01 ) :arg2 ( leave-11 :arg0 person :arg1 ( home :poss person ) )
promise-01 :arg0 ( generation :quant all ) :arg2 ( person :arg0-of organize-01 )
find-01 :arg0 ( person :arg0-of ( head-01 :arg1 company_name_0 :manner fair ) ) :arg1 ( need-01 :arg0 person :arg1 ( have-org-role-91 :arg0 person :arg1 company_name_1 :arg2 ( director :mod great ) ) :arg1-of possible-01 )
and :op1 ( search-01 :arg0 ( generation :mod new ) :arg2 ( sport :mod kind ) ) :op2 ( make-01 :arg0 generation :arg1 ( thing :arg2-of joke-01 :mod large ) ) :time now
say-01 :arg1 ( person_name_0 :time today ) :arg2 ( photo :topic ( person :location hospital ) ) :time today
big :degree too :domain ( foot :part-of you )
say-01 :arg0 ( organization_name_0 :arg0-of ( have-org-role-91 :arg2 ( agent :mod estate ) ) ) :arg1 ( pig :arg0 ( person :arg0-of own-01 ) :arg1 pig )
cost-01 :arg1 ( monetary-quantity :arg2-of cost-01 ) :arg2 you :condition ( begin-01 :arg0 you :arg1 ( word :prep-with ( person :arg0-of ( have-rel-role-91 :arg1 you :arg2 girlfriend ) ) ) )
cup
difficult :degree very :domain it
and :op1 ( leck :domain ( person :arg0-of ( broker-01 :arg1 building_name_0 ) ) ) :op2 ( believe-01 :arg0 person :arg1 ( and :op1 ( mark-01 :arg0 person :arg1 ( and :op1 ( belong-01 :arg0 person :arg1 ( all :arg1-of ( include-91 :arg2 this ) ) ) :op2 ( overgrown :arg1 person ) ) ) ) :op2 ( overgrown :arg1 person :arg2 ( weeds :arg0-of ( look-02 :arg1 ( resemble-01 :arg2 ( head :mod giant ) ) ) ) ) )
come-01 :arg1 ( rain-01 :mod big ) :time ( until :op1 ( come-01 :arg1 ( rain-01 :mod big ) ) )
great :degree great :domain history
multi-sentence :snt1 ( obligate-01 :arg1 person_name_0 :arg2 ( and :op1 ( run-01 :arg0 person :arg1 ( station :mod ( railway :mod next ) ) :frequency ( rate-entity-91 :arg1 num_0 :arg2 ( temporal-quantity temporal-quantity_num_0 :unit week ) ) :arg4 ( station :mod ( railway :mod next ) ) ) :op2 ( go-02 :arg0 person :arg4 railway ) ) ) :snt2 ( say-01 :arg0 peninsula_name_1 :arg1 ( and :op1 ( crossways :location ( city :mod whole ) :path ( city :mod whole ) :path ( city :mod whole ) ) :op2 ( evening :time evening ) ) )
recommend-01 :arg1 ( have-03 :arg0 ( person :arg0-of ( have-org-role-91 :arg1 ( ascent :mod animal ) :arg2 exhausted ) ) :arg1 rested ) :location ( foot :part-of tree )
and :op1 ( itemized :arg0 person_name_0 :arg1 ( line :quant num_0 ) :arg3 ( speak-01 :arg3 documentary :mod last ) ) :op2 ( enthused :arg1 line )
scraped :arg1 organization_name_0 :time ( vote-01 :arg1 ( sunday :location five-percent ) )
and :op2 ( contain-01 :arg0 ( and :op1 ( item :arg1-of innocent-01 :location ( home :poss we ) ) :op2 ( thing :arg1-of ( shed :arg0 we ) ) ) :arg1 ( asbestos :arg1 item ) ) :time meanwhile
shoot-02 :arg0 ( separatist :mod prorussische ) :arg1 plane :direction down
and :op1 ( update-01 :arg1 ( account :mod official :poss person_name_0 ) :arg1-of frequent-02 ) :op2 ( fame-01 :arg1 account :frequency sometimes )
contrast-01 :arg1 ( insult-01 :polarity - :arg0 ( person :arg0-of ( have-rel-role-91 :arg1 i :arg2 father ) ) :arg1 someone :time ever ) :arg2 ( love-01 :arg0 he :arg1 ( song :mod this ) )
and :op1 ( design-01 :arg0 ( person_name_0 :arg0-of ( have-org-role-91 :arg1 country_name_1 :arg2 ( photographer :mod star ) ) ) :arg1 it ) :op2 ( fame-01 :arg1 it :time ( age-01 :arg1 person :arg2 ( temporal-quantity temporal-quantity_num_0 :unit year ) :mod only ) :time ( age-01 :arg1 person :arg2 ( temporal-quantity temporal-quantity_num_1 :unit year ) ) ) :time ( after :op1 ( explode-01 :arg1 ( thing :poss i ) ) )
contrast-01 :arg1 ( hunger-01 :arg0 ( person_name_0 :arg0-of ( warlike :arg1 day ) ) :arg1 day :mod main ) :arg2 ( oppose-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg1 ( regenpause :mod every ) :arg3 '' ) ) :arg1 ( demonstrate-01 :arg0 person :arg1 ( demonstrate-01 :arg0 person :arg1 ( person_name_1 :arg0-of ( have-org-role-91 :arg2 robust ) ) :location ( arena :arg1-of soft-02 ) ) ) )
need-01 :arg0 child :arg1 ( and :op1 roots :op2 wing )
and :op1 ( site :quant num_0 :location ( heart :part-of ( reserve :name ( name :op1 biosphere ) ) ) ) :op2 ( open-01 :arg1 ( trails :quant num_1 ) :arg3 ( and :op1 hikers :op2 cyclists ) ) :time ( since :op1 that )
win-01 :arg0 ( person_name_0 :arg0-of ( win-01 :ord ( ordinal-entity ordinal-entity_num_0 :range ( year :mod this ) ) ) ) :arg2 ethnic-group_name_1 :time ( year :mod this ) :prep-with ( total-01 :arg2 ( nearly :op1 ( monetary-quantity monetary-quantity_num_2 :unit dollar :mod near ) ) )
and :op1 ( content-01 :arg1 we ) :op2 ( experience-01 :arg1 ( involve-01 :arg1 all ) :arg1-of wonderful-03 )
contrast-01 :arg1 ( tell-01 :polarity - :arg0 she :arg1 ( about :op1 ( life :location ( north :part-of ( north :part-of country_name_0 ) ) ) ) :arg2 he ) :arg2 ( doubt-01 :polarity - :arg1 ( resemble-01 :arg1 it :arg2 here :mod essential :mod just ) )
asbestos :time ( after :op1 all )
and :op1 ( inform-01 :mode imperative :arg0 you :arg1 you :arg2 ( determinations :arg1 ( business :mod ( monetary-quantity :arg1-of ( expend-01 :arg0 you ) ) ) ) :mod also ) :op2 ( be-located-at-91 :arg1 you :arg2 ( under :op1 ( fee :mod punish-01 ) ) :arg1-of ( cause-01 :arg0 ( appropriate-02 :arg1 ( letter :mod ( or :op1 ( letter :arg1-of ( low-04 :degree more ) ) :op2 ( deletion :arg1-of ( low-04 :degree more ) ) :op3 ( use-01 :arg1 trace ) ) ) ) ) )
contrast-01 :arg1 ( see-01 :arg0 i :arg1 ( thing :quant numerous :arg1-of ( see-01 :frequency often ) ) :frequency often ) :arg2 ( experience-01 :arg1 ( footsteps :arg1 ( romans :location location_name_0 ) :ord ( ordinal-entity ordinal-entity_num_0 ) ) :mod again )
'' :arg1 ( program :mod ( government-organization :arg0-of govern-01 ) :mod black-and-red ) :mod certain
gather-03 :arg0 ( person :arg0-of ( support-01 :arg1 ( person :arg0-of support-01 :mod central ) :location ( in-front-of :op1 ( headquarters :poss ( government-organization :arg0-of govern-01 ) :location city_name_0 ) ) ) ) :duration ( up-to :op1 ( temporal-quantity temporal-quantity_num_0 :unit hour ) ) :time ( date-entity year_date-entity_2 )
say-01 :arg0 he :arg1 ( cost-01 :arg1 ( book :arg1-of ( need-01 :time ( semester :mod last ) ) ) :arg2 ( monetary-quantity monetary-quantity_num_0 :unit dollar ) )
result-01 :arg2 ( examine-01 :arg1 divide-02 )
and :op1 ( lead-01 :arg0 person_name_0 :arg1 ( line :quant num_0 ) :arg3 documentary :mod last ) :op2 ( thrilled :domain he )
and :op1 ( called :arg0 i ) :op2 ( suggest-01 :arg0 i :arg1 ( possible-01 :arg1 ( sit-01 :arg1 we :arg2 together :manner together :time ( mr. :arg0 person_name_0 :arg1 person_name_1 ) ) ) )
and :op1 ( do-02 :arg0 organization_name_0 :arg1 ( bad-04 :arg1 organization :arg2 ( time :mod last ) ) ) :op2 ( say-01 :arg0 ( person_name_1 :arg0-of ( have-org-role-91 :arg2 location_name_2 ) ) :arg1 ( and :op1 ( person :arg0-of ( found-01 :arg1 organization :mod also ) ) :op2 ( age-01 :arg1 person :arg2 ( temporal-quantity temporal-quantity_num_0 :unit year ) ) :mod also ) )
contrast-01 :arg1 ( manage-02 :arg0 person_name_0 :arg1 ( '' :arg0 person :arg1 ( appear-01 :arg1 person ) ) ) :arg2 ( '' :arg0 person :arg1 thing :manner ( light :mod ( positive :degree ( more :degree little ) ) ) )
fear-01 :arg0 i :arg1 ( obligate-01 :arg2 ( operated :arg1 i :mod again ) )
contrast-01 :arg1 ( sjÃ¶berg :arg0 ( club :name ( name :op1 '' ) ) :arg1 ( and :op1 ( develop-02 :arg1 '' ) :op2 ( '' :arg1 site ) ) :location ( forest :location forefronts ) :time ( until :op1 ( have-03 :arg0 ( person :arg0-of ( have-rel-role-91 :arg1 person :arg2 friend ) ) :arg1 ( reconstruct-01 :arg1 multivitamin :location ( forest :location mountain ) ) :time ( until :op1 recent ) ) ) ) :arg2 ( have-rel-role-91 :arg0 person :arg1 multivitamin :arg2 friend :time ( until :op1 recent ) )
contrast-01 :arg1 ( hundreds :arg1 ( programmes :arg1-of special-02 ) :arg2 ( and :op1 girl :op2 ( woman :mod young ) ) :time now ) :arg2 ( nothing :beneficiary boy :mod almost )
he :quant num_0 :domain he :time ( die-01 :arg1 he :time ( date-entity month_date-entity_0 day_date-entity_0 ) )
mix-01 :arg1 soundtrack :arg2 ( and :op1 reggae :op2 rap ) :manner ( melodies :polarity - )
fail-01 :arg1 organization_name_0 :arg2 ( vote-01 :arg0 organization :arg1 ( sunday :location ( threshold :quant num_0 :mod ( percentage-entity percentage-entity_num_0 ) ) ) )
and :op1 ( have-03 :arg0 state_name_0 :arg1 ( product-of :op1 num_0 :op2 ( percentage-entity percentage-entity_num_0 ) ) :location ( area :quant num_1 :mod all ) ) :op2 ( thing :arg1-of ( tax-01 :arg3 ( tax-01 :arg3 income ) :arg1-of significant-02 ) :arg1-of significant-02 ) :op3 ( rate :mod ( tax-01 :arg3 corporation ) :arg1-of fix-03 )
prove-01 :arg1 ( objective :mod ( bike :mod red ) ) :time ( start-01 :arg0 ( and :op1 ( assembly :arg0-of ( organize-01 :arg1 assembly ) ) :op2 ( dress :mod red ) :op3 ( bike :mod red ) ) :mod still ) :time ( start-01 :arg1 ( 45 :arg1 ( amount :arg1-of ( amount-01 :arg2 ( amount :mod every ) ) ) ) :time ( after :op1 ( temporal-quantity temporal-quantity_num_0 :unit minute :mod 45 ) ) ) :arg1-of ( have-concession-91 :arg2 ( and :op1 ( tip-05 :arg1 politician :arg2 ( pro :quant half ) ) :op2 ( go-08 :arg1 politician :arg2 ( under :op1 ( temporal-quantity temporal-quantity_num_3 :unit minute ) :manner objective ) ) ) )
multi-sentence :snt1 ( amr-unknown
and :op1 ( fly-01 :arg1 ( and :op1 swords :op2 molecule :op3 hand-bells :op4 littered ) :path ( arena :arg0-of ( fear-01 :arg1 ( health :poss gladiators ) ) ) ) :op2 ( worry-02 :arg0 and :arg1 ( health :poss gladiators ) ) :time ( since :op1 crash-01 )
difficult :degree so :domain ( get-05 :arg1 you :arg2 ( place :quant all :location-of ( and :op1 ( remember-01 :arg0 you :arg1 that ) :op2 ( work-01 :arg0 you :arg1 data ) ) ) )
cause-01 :arg0 ( survive-01 :arg0 ( radio :mod next ) :mod also ) :arg1 ( survive-01 :arg0 ( cable :mod self-coiling ) :mod also )
admit-01 :arg0 ( person_name_0 :arg0-of ( have-org-role-91 :arg2 ( minister :mod pension ) ) ) :arg1 ( admit-01 :arg0 ( and :op1 ( person :arg0-of ( have-org-role-91 :arg2 ( minister :mod ( time :mod that ) ) ) ) :op2 ( person :arg0-of ( have-org-role-91 :arg2 ( minister :mod pension ) ) ) ) :arg1 ( ?? :polarity - :arg1 law ) ) :mod also
follow-01 :arg1 ( operation :mod emergency ) :arg2 ( operation :quant num_0 :mod more )
say-01 :arg0 ( candidate :mod new ) :arg1 ( and :op1 ( love-01 :arg0 candidate :arg1 ( and :op1 country :op2 ( love-01 :arg1 city_name_0 ) ) ) :op2 ( suppose-02 :arg1 candidate :arg2 ( admit-01 :arg1 and ) ) )
say-01 :arg0 person_name_0 :arg1 ( and :op1 ( lynched :arg1 ( man :quant ( at-least :op1 num_0 ) :arg1-of black-05 ) ) :op2 ( justify-01 :arg1 ( rape-01 :arg1 ( woman :mod white ) ) :time ( always :mod almost ) ) ) :li num_0
remain-01 :arg1 it :arg3 we
stay-01 :arg1 ( stay-01 :arg3 ( near-02 :arg2 surface ) )
coincidences :location there
recommend-01 :arg1 ( tolerate-01 :polarity - :arg1 ( spread-03 :arg1 ( picture :arg1-of steal-01 ) ) :manner law ) :manner law
cycle :arg0 company_name_0 :mod again :mod again
follow-01 :arg1 it :arg2 ( and :op1 ( cyclists :ord ( ordinal-entity ordinal-entity_num_0 ) ) :op2 ( a.m. :quant num_1 :mod a.m. ) )
forecast-01 :arg0 ( organization_name_0 :part-of ( estate :location estate :mod real :mod another ) ) :arg1 ( rise-01 :arg1 ( price-01 :arg1 house :location city_name_1 ) :arg3 ( percentage-entity percentage-entity_num_0 ) :arg4 ( percentage-entity percentage-entity_num_0 ) :arg4 ( percentage-entity percentage-entity_num_3 ) :time already )
surprise-01 :arg0 ( and :op1 ( wave-04 :arg1 ( breast :poss passenger ) ) :op2 ( set-02 :arg1 pleurakathether :arg2 pleurakathether ) ) :arg1 ( and :op1 ( x-ray :arg0 passenger :arg1 pleurakathether ) :op2 ( test-01 :arg0 aircraft-type :arg1 laboratory ) )
have-concession-91 :arg1 ( function-01 :polarity - :mod this :time yet ) :arg2 ( be-located-at-91 :arg1 person_name_0 :arg2 main :time already )
ask-02 :arg0 source :arg1 ( remain-01 :arg1 source :arg3 anonymous ) :arg1-of ( cause-01 :arg0 ( public-02 :polarity - :arg1 negotiate-01 ) )
utilize-01 :arg0 ( trade-01 :mod foreign ) :arg1 economy :mod also
investigate-01 :polarity - :arg1 location_name_0
cause-01 :arg0 ( cease-fire :arg1 ( and :op1 fight-01 :op2 ( issue-02 :mod important ) ) ) :arg1 ( remain-01 :arg1 ( issue-02 :arg1-of ( remain-01 :arg3 ( resolve-01 :arg1 fight-01 ) ) :example ( demand-01 :arg0 organization_name_0 :arg1 ( and :op1 ( blockade-01 :arg0 organization :arg1 country-region_name_1 :mod israeli-egyptian ) :op2 ( reopening :arg1 ( and :op1 ( url-entity :value air ) :op2 ( url-entity :value air ) ) :location country-region_name_1 ) ) ) ) )
contrast-01 :arg1 ( confident-01 :arg1 i :arg2 ( find-02 :arg0 i :arg1 ( find-01 :arg0 someone :arg1 '' ) ) ) :arg2 ( cause-01 :arg0 ( have-03 :arg0 he :arg1 ( residence :poss he :arg1-of bad-07 ) ) :arg1 i )
cancer-spots :quant several :location ( around :op1 ( chest :part-of i ) )
create-01 :arg0 ( increase-01 :arg1 ( standard :mod ( live-01 :arg0 person ) ) ) :arg1 ( market :location ( and :op1 industry :op2 ( raise-02 :arg1 ( nation :mod entire ) :arg2 ( level :mod produce-01 ) ) ) ) :manner ( increase-01 :arg1 ( standard :mod ( live-01 :arg0 person ) ) )
contrast-01 :arg1 ( share-01 :arg0 person_name_0 :arg1 ( rate-entity-91 :arg1 ( more-than :op1 ( monetary-quantity monetary-quantity_num_0 :unit dollar ) ) :arg2 ( temporal-quantity temporal-quantity_num_1 :unit year ) ) :arg3 ( person :arg0-of study-01 ) ) :arg2 ( differ-02 :arg1 ( person :arg0-of study-01 ) :arg2 ( person :arg0-of study-01 ) )
and :op1 ( fall-01 :arg1 ( shoot-02 :arg1-of sharp-02 :mod last ) :arg4 ( area :location-of ( train-01 :mod military ) ) :time ( date-entity month_date-entity_0 year_date-entity_0 ) ) :op2 ( close-01 :arg1 ( store :name ( name :op1 2005 ) ) :time ( end-01 :arg1 2005 ) :time ( after :op1 ( close-01 :arg1 ( company :mod military :duration ( temporal-quantity temporal-quantity_num_1 :unit year ) ) ) ) )
die-01 :arg1 ( person_name_0 :arg0-of author-01 ) :time ( after :op1 war_name_1 :quant ( temporal-quantity temporal-quantity_num_0 :unit year ) )
head-01 :arg0 ( person_name_0 :arg0-of ( head-01 :arg1 ( department :mod analytical :part-of fc ) ) ) :arg1 ( person :arg0-of ( head-01 :arg1 ( department :mod analytical :part-of fc ) ) )
and :op1 ( asbestos :arg1 i ) :op2 ( remain-01 :arg1 ( office :location-of ( live-01 :arg0 we ) :location-of ( and :op1 ( learn-01 :arg0 we ) :op2 ( shop :location-of ( learn-01 :arg0 we ) :location-of ( go-02 :arg0 we :arg4 shop-01 ) ) ) ) :prep-in ( house :location-of ( live-01 :arg0 we ) ) )
and :op1 ( exchange-01 :arg0 ( soldier :quant ( between :op1 num_0 :op2 num_1 ) :arg1-of ( hold-01 :location location_name_0 :arg1-of report-01 ) ) :arg1 ( person :quant num_1 :mod country_name_1 :arg0-of ( have-org-role-91 :arg1 country :arg2 soldier ) ) :arg1-of report-01 :location location_name_0 :arg1-of ( cause-01 :arg0 ( result-01 :arg1 invade-01 :arg2 ( invade-01 :arg0 country :arg1 country ) ) ) ) :op2 ( report-01 :arg0 person :medium sunday :time ( before :op1 now :quant ( temporal-quantity temporal-quantity_num_0 :unit week ) ) )
and :op1 ( shake-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg1 ( team :mod ( bank :mod ( bank :mod piggy ) :poss she ) ) ) ) :arg1 ( bronze :arg1 man ) ) :op2 ( put-01 :arg0 ( person :arg0-of speak-01 ) :arg1 ( person :arg0-of speak-01 ) :arg2 ( category :quant ( more-than :op1 num_1 ) ) )
multi-sentence :snt1 ( and :op1 ( nature :mod graphic :poss it ) :op2 ( shut-down-05 :polarity - :arg1 nature ) :domain ( time :ord ( ordinal-entity ordinal-entity_num_0 ) :location screen ) ) :snt2 ( and :op1 ( nature :mod graphic :poss it ) :op2 ( shut-down-05 :polarity - :arg1 film ) )
and :op1 ( hack-04 :arg0 mass :arg1 ( account :consist-of star ) :degree mass ) :op2 ( possible-01 :arg1 ( hacking :arg0 ( person :arg0-of apply-01 ) :arg1 ( phone :poss i ) ) )
and :op1 ( need-01 :polarity - :arg0 they :arg1 ( blame-01 :arg1 anyone ) ) :op2 ( possible-01 :polarity - :arg1 ( justify-01 :arg1 anyone ) :condition ( or :op1 ( appropriate-02 :arg1 it ) :op2 ( possible-01 :arg1 ( fix-02 :arg0 you :arg1 something ) ) ) )
say-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg1 ( government-organization_name_0 :mod country_name_1 ) :arg2 spokesman ) ) :arg1 ( position :arg0 city_name_2 :arg1 ( thing :arg2-of ( position-01 :arg1 ( and :op1 ( supply-01 :arg1 ( type :mod ( type :mod country_name_3 ) ) ) :op2 et-cetera ) :arg1-of continue-01 ) ) )
and :op1 ( decide-01 :arg0 ( fan :poss person_name_0 ) :arg1 ( smoke :mod also ) ) :op2 ( condemn-01 :arg0 fan :arg1 she :arg2 it )
transfer-01 :arg0 ( person :arg1-of black-05 :quant all ) :arg1 ( person :arg0-of ( have-org-role-91 :arg1 militia :arg2 ( official :mod security ) ) )
think-01 :arg0 i :arg1 ( and :op1 ( see-01 :arg0 ( person :quant many ) :arg1 it :time ( ordinal-entity ordinal-entity_num_0 ) ) :op2 ( learn-01 :arg0 i :arg1 ( and :op1 ( learn-01 :arg0 person :arg1 ( tragedy :poss we ) ) :op2 ( make-02 :arg0 person :arg1 ( event :time ( ever :polarity - ) ) ) ) ) ) :time ( see-01 :arg0 i :arg1 ( photo :prep-on internet ) )
compete-01 :arg0 ( person :arg0-of ( inhabit-01 :arg1 continent ) ) :arg1 ( compete-01 :location ( sphere :poss ( and :op1 good :op2 service ) ) )
die-01 :arg1 person_name_0 :location location_name_1
read-01 :mode imperative :arg0 you :arg1 ( supply-01 :arg0 country_name_0 :arg1 ( supply-01 :arg0 country :arg1 ( material :arg1-of ( distribute-01 :arg0 ( '' :name ( name :op1 '' :op2 mistral :op3 mistral ) ) ) ) ) :arg2 ( we :mod almost ) )
find-02 :arg0 ( poll-01 :arg2 ( person :arg0-of ( have-org-role-91 :arg1 organization_name_0 ) ) ) :arg1 ( believe-01 :arg0 ( person :quant num_0 :arg1-of ( include-91 :arg2 ( person :mod country_name_1 ) ) ) :arg1 ( break-up-08 :arg0 political-party :arg1 ( factions :quant several ) :time ( before :op1 ( end-01 :arg1 ( presidency :poss ( person_name_2 :arg0-of ( have-org-role-91 :arg1 government-organization_name_3 :arg2 president ) ) ) ) ) ) )
duty :poss i :domain it
ask-02 :arg0 ( person_name_0 :arg0-of ( have-org-role-91 :arg1 country_name_1 :arg2 president ) ) :arg1 ( release-01 :arg0 person :arg1 ( troop :mod country_name_2 ) :arg2 environment ) :arg2 ( person :arg0-of ( lead-02 :arg1 country ) )
show-01 :arg0 ( person :mod ethnic-group_name_0 ) :arg1 ( trace-02 :polarity - :arg1 disease ) :time subsequent
ask-02 :arg0 source :arg1 ( remain-01 :arg1 source :arg3 anonymous ) :arg1-of ( cause-01 :arg0 ( open-01 :polarity - :arg1 negotiate-01 ) )
and :op2 ( play-01 :mode imperative :arg0 we :arg1 ( video :mod genre :mod '' ) :arg1-of ( cause-01 :arg0 ( give-01 :arg0 ( girl :mod wise ) :arg1 ( process-01 :arg1 game :mod ( old :degree more ) ) :arg2 ( process-01 :arg1 game :mod ( old :degree more ) :arg1-of ( popular-02 :arg2 publication_name_0 :time already ) ) ) ) )
think-01 :arg0 we :arg1 ( secret :domain ( win-01 :mod such ) )
have-03 :arg0 ( team :mod country_name_0 ) :arg1 ( and :op1 ( bronze :quant num_0 :mod only ) :op2 ( silver :quant num_1 ) :op3 ( bronze :quant num_2 ) ) :time then
deny-01 :polarity - :arg0 ( '' :name ( name :op1 east-west :op2 east-west ) ) :arg1 ( exemplify-01 :arg0 ( produce-01 :arg1 ( product :arg0-of ( dairy :arg1 dairy ) ) :time ( since :op1 ( rise-01 :arg1 ( thing :arg2-of ( price-01 :arg1 ( thing :arg2-of ( price-01 :arg1 ( thing :quant num_0 ) ) ) ) ) ) ) ) )
leave-17 :arg1 ( claim-01 :arg0 ( court :location river_name_0 ) :arg1 ( claim-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg1 ( organization_name_1 :part-of ( organization_name_1 :part-of region ) ) :arg2 executive ) ) :arg1 ( -rrb- :polarity - :arg1 ( foundation :arg1-of ( include-91 :arg2 ( person :arg0-of ( have-org-role-91 :arg1 ( government-organization :arg0-of ( govern-01 :arg1 person_name_2 ) ) :arg2 mayor ) ) ) ) :arg2 city ) ) ) :time today
appear-01 :arg1 ( person :arg0-of ( have-org-role-91 :arg2 ( minister :mod prime ) ) ) :mod ( again :mod once )
and :op1 ( force-01 :arg1 ( doctor :mod other :quant all :location state ) :arg2 ( stop-01 :arg0 doctor :arg1 ( perform-02 :arg0 doctor :arg1 ( and :op1 procedure :op2 doctor :op3 ( safe-01 :arg1 doctor ) ) ) ) ) :op2 ( perform-02 :arg0 doctor :arg1 procedure ) :op3 ( tell-01 :arg0 doctor :arg2 group :time no-longer )
possible-01 :polarity - :arg1 ( go-02 :arg0 he :arg4 ( work-01 :arg0 he :duration ( temporal-quantity temporal-quantity_num_0 :unit month ) ) ) :time end-01
remember-01 :arg0 i :arg1 ( thing :manner-of ( want-01 :arg0 person_name_0 :arg1 ( eat-01 :arg0 person :arg1 borshch ) ) :time ( want-01 :arg0 person :arg1 ( eat-01 :arg0 person :arg1 borshch ) ) )
kill-01 :arg1 ( person :quant ( more-than :op1 1/2 ) :arg1-of ( include-91 :arg2 ( person :arg0-of ( have-rel-role-91 :arg1 they :arg2 child ) ) ) ) :time ( try-02 :arg1 ( person :quant ( more-than :op1 1/2 ) :arg0-of ( have-rel-role-91 :arg1 they :arg2 child ) ) )
contrast-01 )
have-concession-91 :arg2 ( know-01 :arg0 person_name_0 :arg1 ( know-01 :arg0 ( party :quant all ) :arg1 ( remain-01 :polarity - :arg1 peninsula_name_1 :arg3 ( platform :mod central :instrument-of ( meet-03 :arg0 ( and :op1 ( person :arg0-of ( represent-01 :arg1 ( person :arg0-of ( represent-01 :arg1 state ) ) ) ) :op2 ( person :arg0-of ( represent-01 :arg1 ( organization_name_5 :arg1-of high-02 ) ) ) ) ) :mod central ) ) ) :time ( briefing :mod final ) )
record :mod history :mod new :domain this
think-01 :arg0 he :arg1 ( do-02 :arg0 you :arg1 ( thing :arg1-of ( do-02 :arg0 you :time next ) ) :arg1-of ( cause-01 :arg0 ( think-01 :arg0 you :arg1 ( or :op1 ( time :mod next ) :op2 ( thing :arg1-of ( do-02 :arg0 you :time next ) ) ) :arg1-of ( cause-01 :arg0 ( think-01 :arg0 you :arg1 ( or :op1 time :op2 quiet :prep-to side ) :manner quiet ) ) ) ) :time ( after :op1 ( show-04 :arg1 ( company_name_0 :location ( '' :quant num_0 :mod lennyhenry.tv ) ) ) ) )
remove-01 :polarity - :arg1 person_name_0 :arg2 ( menu :part-of ( cuisine :arg1-of single-02 ) ) :time so-far :location institution
possible-01 :arg1 ( make-01 :arg1 ( account :arg0-of ( hack-04 :arg1 star ) :arg0-of ( hack-04 :arg1 star ) ) :location ( vulnerability :arg0-of ( find-01 :arg1 ( phone :poss i ) ) ) )
and :op1 ( over :domain ( period :mod tax-01 ) ) :op2 ( thing :arg2-of ( price-01 :arg1 oil ) ) :op3 ( thing :arg2-of sanction-02 ) :op4 ( problem :topic ( transit-01 :arg1 gas ) ) :op5 ( problem :topic ( transit-01 :arg1 gas ) )
multi-sentence :snt2 ( rate-entity-91 :arg1 ( rate-entity-91 :arg1 ( rate :mod game_name_0 ) :arg2 ( rate-entity-91 :arg1 num_0 :arg2 ( temporal-quantity temporal-quantity_num_1 :unit year ) ) :location country_name_1 :prep-with ( implement-01 :arg1 product :location country_name_2 ) ) ) :snt2 ( rate-entity-91 :arg1 ( rate :mod game_name_0 ) :arg2 ( rate-entity-91 :arg1 num_0 :arg2 ( temporal-quantity temporal-quantity_num_1 :unit year ) ) :location country ) :medium ( article :arg1-of ( base-02 :arg2 ( regulate-01 :arg0 state :arg1 ( activity-06 :arg0 state :arg1 trade-01 :location country ) ) ) )
emphasize-01 :arg0 ( person :arg0-of ( own-01 :arg1 ( cuisine :mod cafes :mod central :mod central ) ) ) :arg1 ( produce-01 :arg0 ( and :op1 ( product :arg0-of ( own-01 :arg1 country_name_0 ) ) :op2 ( cuisine :mod country_name_1 :mod central ) ) :arg1 product :degree more )
multi-sentence :snt1 ( and :op1 ( old :degree more :domain i :time now ) :op2 ( say-01 :arg0 i :arg1 ( possible-01 :arg1 ( cope-01 :arg0 child :arg1 ( event :arg1-of bad-07 ) :arg1-of easy-05 ) ) ) ) :snt2 ( obligate-01 :arg2 ( say-01 :arg0 i :arg1 ( true :polarity - :domain this ) ) )
prepare-01 :arg0 ( and :op1 ( person_name_0 :arg1-of smart-06 ) :op2 ( person :arg1-of smart-06 ) :op3 ( person :arg0-of ( serve-01 :arg2 ( service :mod ( formal :polarity - ) ) ) ) ) :arg1 ( report-01 :arg1 ( and :op1 ( level :arg1-of low-04 ) :op2 ( level :mod ( level :mod process-01 ) ) :location ( part :part-of country :mod that ) ) :arg1-of ( cause-01 :arg0 ( expect-01 :arg1 ( stop-01 :polarity - :arg1 ( and :op1 money :op2 power :arg0-of ( give-01 :arg1 ( and :op1 money :op2 power ) :arg2 ( eradication :arg1 and ) ) ) ) ) ) ) :duration ( temporal-quantity temporal-quantity_num_0 :unit year ) :time ( before :op1 ( describe-01 :arg1 event :arg2 ( above :op1 ( event :arg1-of ( describe-01 :arg0 ( and :op1 ( person :arg1-of smart-06 ) :op2 ( person :arg0-of ( have-org-role-91 :arg1 ( service :mod ( formal :polarity - ) ) ) ) ) ) ) ) ) )
say-01 :arg0 country_name_0 :arg1 ( reserve-01 :arg0 country :arg1 ( right-05 :arg1 country :arg2 ( protect-01 :arg0 country :arg1 ( interest :arg1-of legitimate-02 :poss country ) ) ) :purpose ( protect-01 :arg0 country :arg1 ( interest :arg1-of legitimate-02 :poss country ) ) ) :arg1-of ( say-01 :arg0 ( government-organization_name_1 :mod foreign ) )
and :op1 ( talk-01 :arg0 you :arg1 story :time always ) :op2 ( place :mod great :location-of ( do-02 :arg1 this ) :location here )
publish-01 :arg1 ( decree :arg1-of ( publish-01 :medium ( information :arg1-of legal-02 ) ) )
multi-sentence :snt1 ( say-01 :arg0 ( person :arg0-of ( author-01 :arg1 ( person_name_0 :arg0-of ( author-01 :arg1 feminist ) :arg0-of ( author-01 :arg1 feminist ) ) ) ) :arg1 ( vulnerable :degree ( more :degree much ) :domain ( person :arg0-of ( author-01 :arg1 feminist ) :arg0-of ( author-01 :arg1 feminist ) ) ) ) :snt2 ( contrast-01 :arg1 ( vulnerable :degree ( more :degree much ) :domain ( man :mod young :location country_name_2 ) ) :arg2 ( express-01 :arg0 ( remark-01 :arg0 person_name_3 :topic person_name_4 ) :arg1 ( express-01 :arg0 person :time previous ) ) )
multi-sentence :snt1 ( that :mod all ) :snt2 ( '' :mode expressive )
provide-01 :arg1 ( thing :instrument-of subsidize-01 ) :arg2 ( limit-01 :arg1 ( fund-01 :arg0 federal :arg1 ( and :op1 communicate-01 :op2 organization_name_0 ) ) )
plan-01 :arg1 ( work-01 :arg0 ( and :op1 ( person :arg0-of ( have-org-role-91 :arg1 ( session :ord ( ordinal-entity ordinal-entity_num_0 ) ) ) ) :op2 ( list :mod final :consist-of indicators ) ) :purpose ( measure-01 :arg0 person :arg1 ( effective-04 :arg0 ( organization :mod science ) ) :mod final ) ) :time ( meet-03 :ord ( ordinal-entity ordinal-entity_num_0 ) )
enter-01 :polarity - :arg0 sentence-01 :arg1 force-04
and :op1 ( explain-01 :arg0 ( country :mod this ) :arg1 ( right-05 :arg1 union :arg2 organize-01 ) ) :op2 ( explain-01 :arg0 country :arg1 ( and :op1 ( right-05 :arg1 union :arg2 organize-01 ) :op2 ( ensure-01 :arg0 country :arg1 ( engage-01 :arg1 ( union-02 :mod this ) :arg2 ( partner-01 :arg0 ( and :op1 corporation :op2 ( agency :mod ( government-organization :arg0-of govern-01 ) ) ) :mod collective ) ) ) ) ) :time ( country :mod this :topic ( country :mod other ) :topic ( thing :manner-of ( create-01 :arg1 ( society :mod civil :mod democracy ) ) ) )
cheese :mod any :time ( after :op1 embargo-01 )
say-01 :arg0 he :arg1 ( possible-01 :polarity - :arg1 ( save-02 :arg0 i :arg1 she ) )
meat :mod country_name_0 :location ( cell :mod country_name_1 ) :duration ( temporal-quantity temporal-quantity_num_0 :unit day :time-of ( temperature :quant num_0 ) )
contrast-01 :arg2 ( come-01 :arg1 ( person :arg0-of teach-01 ) :arg4 work-01 :time ( date-entity month_date-entity_0 day_date-entity_0 ) )
hard-02 :arg1 ( understand-01 :arg1 ( appeal-02 :arg2 ( obligate-01 :arg2 ( watch-01 :arg1 game ) ) ) ) :arg1-of ( cause-01 :arg0 ( hard-02 :arg1 ( understand-01 :arg1 ( appeal :arg1 game ) ) :arg1-of ( instead-of-91 :arg2 ( take-01 :arg1 game ) ) ) )
see-01 :arg0 you :arg1 ( person :mod this :arg0-of ( have-rel-role-91 :arg2 patient ) ) :frequency ( time :quant all )
and :op1 ( occupy-01 :arg0 ( person :quant some :arg0-of ( occupy-01 :arg1 movement-07 ) ) :arg1 center ) :op2 ( say-01 :arg0 person :arg1 ( demonstrate-01 :arg0 ( demonstrate-01 :arg0 person ) :arg1 ( risk-01 :arg0 person :arg2 ( business :poss city_name_0 ) ) ) )
cause-01 :arg0 ( fish :mod wild :domain it ) :arg1 ( fatty :polarity - :arg1 they :degree equal :compared-to ( salmon :arg1 they ) )
and :op2 ( succeed-01 :arg1 it )
multi-sentence :snt1 ( speak-01 :manner strict ) :snt2 ( contrast-01 :arg1 ( substance :quant num_0 :domain this ) :arg2 ( group :consist-of ( mineral :quant num_1 ) :domain this ) )
and :op1 ( publish-01 :arg1 product_name_0 ) :op2 ( become-01 :arg1 vitamin :arg2 ( ???????? :arg1 ( and :op1 company_name_0 :op2 product_name_1 ) ) )
suggest-01 :arg0 ( person_name_0 :arg0-of ( have-org-role-91 :arg1 ( person_name_1 :arg0-of ( have-org-role-91 :arg2 deputy ) ) :arg2 ( mayor :mod deputy ) ) ) :arg1 ( resign-01 :arg0 person :arg1 ( person :arg0-of ( have-org-role-91 :arg1 city :arg2 mayor ) :arg0-of ( resign-01 :arg1 person ) ) ) :time ( date-entity month_date-entity_0 day_date-entity_0 ) :location location_name_0
say-01 :arg1 ( and :op1 ( fall-01 :arg1 missile :arg4 ( sea :location ( relative-position :op1 country_name_0 :direction sea ) ) ) :op2 ( fly-01 :arg1 missile :destination ( relative-position :op1 ( distance-quantity distance-quantity_num_0 :unit kilometer ) ) ) ) :arg2 ( organization_name_1 :part-of country_name_2 )
say-01 :arg0 ( and :op1 organization_name_0 :op2 organization_name_1 :op3 ( cruise :mod norwegian ) ) :arg1 ( passenger :mod cruise :arg1-of ( include-91 :arg2 ( passenger :mod cruise :location continent_name_2 ) :arg3 ( percentage-entity :value ( percentage-entity :value ( multiple :op1 num_0 ) ) ) ) ) :arg1-of ( say-01 :arg0 ( document :mod register-02 ) :arg1-of ( cause-01 :arg0 ( offer-01 :arg0 public :arg1 ( share :arg0-of bridge-01 ) ) :ord ( ordinal-entity ordinal-entity_num_1 ) ) )
state-01 :arg0 ( person_name_0 :arg0-of ( have-org-role-91 :arg1 organization_name_1 ) ) :arg1 ( state-01 :arg0 ( government-organization :arg0-of govern-01 ) :arg1 ( issue-02 :mod this ) ) :time ( date-entity month_date-entity_0 day_date-entity_0 )
and :op1 ( study-01 :arg0 ( university_name_0 :poss university_name_0 :location peninsula_name_1 ) ) :op2 ( impact-01 :arg0 astrophysics :arg1 ( homogeneity :mod chemical :location ( flocks :mod star ) ) )
tell-01 :arg0 ( person_name_0 :arg0-of ( make-01 :arg1 propose-01 :time ( month :mod last ) ) ) :arg1 ( disgust-01 :arg0 it )
say-01 :arg1 ( oblige-02 :polarity - :arg1 i :arg2 ( answer-01 :arg0 i ) ) :arg2 person_name_0
involve-01 :arg1 ( person :quant some :arg1-of ( include-91 :arg2 they ) ) :arg2 ( measure-02 :arg1 ( detect-01 :arg1 corrupt-01 :arg1-of ( aim-02 :arg2 ( person :arg1-of ( employ-01 :arg0 ( government-organization :arg0-of govern-01 ) ) :arg2-of ( include-01 :arg1 ( person :quant num_0 :arg0-of ( have-org-role-91 :arg1 ( government-organization :arg0-of govern-01 ) :arg2 minister ) ) ) ) ) ) ) :time ( date-entity month_date-entity_0 )
say-01 :arg0 ( person :arg0-of survive-01 :arg0-of ( survive-01 :arg1 person ) ) :arg1 ( go-02 :polarity - :arg0 person :arg4 war :condition ( know-01 :arg0 person :arg1 ( situation :mod actual :domain ( situation :location country_name_0 ) ) ) )
realize-01 :arg0 i :arg1 ( obligate-01 :arg1 i :arg2 ( and :op1 ( go-out-17 :arg0 i ) :op2 ( deal-01 :arg0 i :arg2 he ) ) ) :time then
say-01 :arg1 ( and :op1 ( admit-01 :arg0 i :arg1 ( crime-02 :arg1 ( person :mod country_name_0 ) ) :li num_0 ) :op2 ( admit-01 :arg0 i :arg1 ( crime-02 :arg1 ( person :mod country_name_1 ) ) :time ( before :op1 now :quant ( long :arg1-of long-03 ) ) :time ( before :op1 now :quant ( long :arg1-of long-03 ) ) ) :op3 ( up :arg0 ( construct-01 :quant num_1 :mod ???????? ) :arg1 onions ) ) :arg2 ( ???????? :mod classic :mod classic )
and :op1 ( remove-01 :arg1 ( thing :arg2-of moisturize-01 ) :time ( late :degree more ) ) :op2 ( follow-01 :arg1 ( thing :quant num_0 ) :arg2 ( person_name_0 :arg0-of ( account-01 :arg1 ( record :mod this ) ) ) )
contrast-01 :arg1 ( and :op1 ( fall-01 :polarity - :arg1 ( account :mod this ) :arg4 ( system :arg0-of ( insure-02 :arg1 deposit ) ) :mod also ) :op2 ( have-03 :polarity - :arg0 ( exist-01 :arg1 account ) :arg1 ( concept :mod insurance ) ) :mod also ) :arg2 ( have-03 :polarity - :arg0 ( account :poss account ) )
contrast-01 :arg1 ( want-01 :arg0 he :arg1 ( say-01 :arg0 he :arg1 ( joke-01 :arg2 joke-01 ) ) ) :arg2 ( want-01 :polarity - :arg0 he :arg1 ( press :topic ( mouth :part-of he ) :prep-with ( finger :quant num_0 ) ) :time ( want-01 :polarity - :arg0 he :arg1 ( press :domain it ) ) )
and :op1 ( take-01 :arg0 ( knowingly :name ( name :op1 duo ) ) :arg1 ( name :poss he ) :time ( until :op1 then ) :arg1-of ( cause-01 :arg0 ( do-02 :arg0 knowingly :arg1 ( metallists :mod ( hairy :degree quite ) ) ) ) ) :op2 ( understand-01 :arg1 ( and :op1 ( thing :arg1-of ( think-01 :arg0 they ) ) :op2 ( blood :mod ( blood :mod amr-unknown ) ) :location ( veins :poss they ) :mod too ) )
option :domain ( option :mod good ) :condition ( do-02 :polarity - :arg0 you :arg1 ( or :op1 note :op2 damage-01 :poss ( person :mod other ) ) )
grant-01 :arg0 ( generation :consist-of ( person :mod country_name_0 ) ) :arg1 ( position-02 :arg0 we :mod basic :topic ( right :mod human ) ) :arg2 we
multi-sentence :snt1 ( cause-01 :arg0 ( reduce-01 :arg1 ( number :quant-of ( number :quant-of ( number :quant-of house-owners ) ) :mod exceptional ) ) :arg1 ( possible-01 :arg1 ( lead-03 :arg0 ( reduce-01 :arg1 ( number :quant-of ( person :arg0-of ( have-org-role-91 :arg2 ( center :mod gardening ) ) ) ) :mod exceptional ) :arg2 ( temporal-quantity temporal-quantity_num_1 :unit year ) ) ) ) :snt2 ( say-01 :arg0 ( analyze-01 :arg1 hta ) :arg1 ( thing :arg1-of ( say-01 :arg0 organization_name_0 ) ) )
say-01 :arg0 he :arg1 ( contrast-01 :arg1 ( duty :poss we :domain ( stay-01 :arg1 we :accompanier he ) ) :arg2 ( say-01 :arg0 he :arg1 ( display-01 :arg0 he :arg1 applause ) ) )
way :mod only :manner-of ( ensure-01 :arg1 ( fund-01 :arg1 ( advertising :mod advertising ) ) )
and :op1 ( have-03 :arg0 he :arg1 ( operation :quant several ) ) :op2 ( possible-01 :arg1 ( walk-01 :arg0 he ) :concession-of ( possible-01 :polarity - :arg1 ( do-02 :arg0 he :arg1 sports ) ) )
pride-01 :arg0 i :arg2 ( represent-01 :arg0 i :arg1 ( act-02 :arg1 ( expand-01 :arg1 ( right :poss ( person :arg0-of work-01 ) ) ) ) :accompanier ( thing :arg1-of ( symbolize-01 :arg2 ( person_name_1 :arg0-of ( have-org-role-91 :arg1 organization :arg2 activist ) ) ) ) ) :arg1-of ( cause-01 :arg0 amr-unknown )
believe-01 :arg0 i :arg1 ( possible-01 :arg1 ( see-01 :arg0 we :arg1 ( and :op1 ( number :quant-of ( dollar :arg1-of ( include-91 :arg2 dollar ) ) ) :op2 ( currency :poss country_name_0 :arg1-of ( near-02 :arg2 ( level :quant num_0 :arg1-of ( include-91 :arg2 ( currency :quant num_0 :mod ruble ) ) ) ) ) ) ) :time soon )
say-01 :arg0 she :arg1 ( accuse-01 :arg0 person_name_0 :arg1 person :arg2 ( involve-01 :arg1 person :arg2 crime-02 :arg1-of ( commit-02 :arg0 ( person :arg0-of ( have-rel-role-91 :arg1 person :arg2 husband :time former ) :arg0-of ( have-rel-role-91 :arg1 person :arg2 husband :time former ) ) :arg1-of allege-01 ) ) )
acknowledge-01 :arg0 organization_name_0 :arg1 ( acknowledge-01 :arg0 organization :arg1 ( contact-01 :arg0 person_name_1 :arg1 person :manner asbestos ) :mod some ) :purpose exemplify-01
and :op1 ( block-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg1 country_name_0 :arg3 judge-01 ) ) :arg1 ( enactment :poss peninsula_name_1 ) :duration temporary ) :op2 ( block-01 :arg0 ( person :arg0-of ( support-01 :arg1 person ) ) :arg1 ( and :op1 ( likely-01 :arg1 ( close-01 :arg0 person :arg1 ( clinics :quant num_0 :mod abortnyh ) :location state ) ) :op2 ( likely-01 :arg1 ( close-01 :arg0 person :arg1 ( clinics :quant num_0 :mod abortnyh :location state ) ) ) ) :duration temporary ) :location country
say-01 :arg0 person_name_0
multi-sentence :snt1 ( trigel :mode interrogative :source restaurant ) :snt2 ( ready-02 :mode interrogative :arg1 ( person :arg1-of ( include-91 :arg2 ( person :mod dishes ) :arg3 ( half :quant 1/2 :mod another ) ) ) :arg2 ( forego :arg1 person ) )
contrast-01 )
and :op1 ( be-temporally-at-91 :arg1 he :arg2 ( before :op1 now :quant ( temporal-quantity temporal-quantity_num_0 :unit year ) ) ) :op2 ( energetic :arg1 he :degree very :mod still )
rate-entity-91 :arg1 ( monetary-quantity monetary-quantity_num_0 :unit dollar ) :arg2 ( volume-quantity volume-quantity_num_1 :unit gallon )
and :op1 ( create-01 :arg1 ( music :poss they ) ) :op2 ( create-01 :arg1 ( music :poss they ) :arg3 ( less :compared-to ( person :quant ( couple :op1 ( couple :op1 ( temporal-quantity temporal-quantity_num_0 :unit year ) ) ) ) ) ) :arg1-of obvious-01
multi-sentence :snt1 ( and :op1 ( say-01 :arg0 they :arg1 ( and :op1 ( concealed :arg1 ( bathroom :poss we ) ) :op2 ( move-01 :arg1 ( person :mod old :arg0-of ( believe-01 :arg1 ( hide-01 :arg0 person :arg2 danger ) ) ) :arg2 ( person_name_0 :arg0-of ( live-01 :location here :time once ) ) ) ) ) ) :snt2 ( be-located-at-91 :arg1 ( person :mod old :arg0-of ( believe-01 :arg1 ( hide-01 :arg0 person :arg2 danger ) :time once ) ) :arg2 here )
and :op1 ( cause-01 :arg1 ( tough-02 :arg1 ( process-02 :arg1 rehearsal ) ) ) :op2 ( read-01 :arg0 i :arg1 ( temporal-quantity temporal-quantity_num_0 :unit month ) :time ( before :op1 ( put-01 :arg0 we :arg1 she :arg2 she ) ) )
date-entity month_date-entity_0 year_date-entity_0
follow-01 :arg1 ( discover-01 :arg1 fire-01 ) :arg2 ( discover-01 :arg1 ( parachutist-firefighters :quant num_0 ) :arg1-of quick-02 )
contrast-01 :arg2 ( and :op1 ( take-01 :arg1 document :arg3 account :arg1-of ( cause-01 :arg0 ( produce-01 :polarity - :arg0 ( good :arg1-of ( produce-01 :location country_name_0 ) ) :arg1 ( good :arg1-of ( produce-01 :polarity - :location country ) ) ) ) ) :op2 ( make-01 :arg0 document :arg1 ( '' :mod discount :mod '' ) :purpose ( avoid-01 :arg0 and :arg1 ( discomfort :arg1 customer :arg2 customer :arg1-of possible-01 ) ) ) )
man :mod good :domain person_name_0
intend-01 :arg0 ( authority :mod country_name_0 ) :arg1 ( rob-01 :arg0 authority :arg1 ( land :quant ( area-quantity area-quantity_num_0 :unit hectare ) :arg0-of ( belong-01 :arg1 ( authority :mod country ) ) ) )
understand-01 :arg0 i :arg1 ( want-01 :arg0 you :arg1 ( say-01 :arg0 you :arg1 ( want-01 :arg0 you :arg1 ( say-01 :arg0 you :arg1 ( and :op1 ( want-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg1 ( supervisor :poss person ) :arg2 supervisor ) ) :arg1 ( say-01 :arg0 person :arg1 anything ) ) :op2 ( want-01 :polarity - :arg0 person :arg1 ( say-01 :arg0 person :arg1 anything ) :arg2-of ( except-01 :arg1 ( person :quant num_0 :domain we :arg1-of ( effective-04 :arg0 we :degree equal :compared-to ( convince-01 :arg0 we :arg1 we ) ) ) ) ) ) ) ) ) ) :degree full
lose-02 :polarity - :arg1 ( songs :mod ( type :mod this ) ) :time no-longer :arg1-of ( cause-01 :arg0 ( aggressiveness :poss they ) )
lead-03 :arg0 that :arg1 ( introduce-02 :arg1 quota ) :arg2 quota
and :op2 ( think-01 :arg0 person_name_0 :arg1 ( relation-03 :arg0 person :arg2 ( person :arg0-of ( have-rel-role-91 :arg1 he :arg2 father ) ) ) :frequency often ) :time ( after :op1 ( die-01 :arg1 ( person :arg0-of ( have-rel-role-91 :arg1 he :arg2 mother ) ) ) )
kill-01 :arg1 ( and :op1 ( person :quant num_0 :arg0-of ( have-org-role-91 :arg2 soldier ) ) :op2 ( civilian :quant num_1 ) ) :arg2-of ( include-01 :arg1 ( person :quant num_2 :arg0-of work-01 :mod country_name_1 ) ) :location ( side :mod israeli )
and :op1 ( apartment :domain ( girl :mod petite ) ) :op2 ( show-01 :arg0 girl :arg1 ( floor :ord ( ordinal-entity ordinal-entity_num_0 ) :part-of house ) )
multi-sentence :snt1 ( solve-01 :arg0 ( government-organization :arg0-of administrate-01 :time current ) :manner differ-02 ) :snt2 ( declare-01 :arg2 it )
about :op1 num_0 :domain i :mod just
propose-01 :arg0 ( ministry :mod ( media :degree mass ) :mod ( media :degree mass ) ) :arg1 ( allocated :arg0 ministry :arg1 ( and :op1 ( company :mod tv :mod tv ) :op2 ( company :mod radio :mod radio ) :quant ( multiple :op1 num_0 ) ) )
report
look-01 :mode imperative :polarity - :arg0 you :arg1 ( and :op1 ( return-01 :arg1 you :arg3 they ) :op2 ( want-01 :polarity - :arg0 you :arg1 ( leave-15 :arg0 you :arg1 they :time ( after :op1 ( complete-01 :arg1 they ) ) ) ) :condition ( contact-01 :arg0 you :arg1 they :mod well ) :condition ( contact-01 :arg0 you :arg1 they :mod well ) )
and :op1 ( intervene-01 :arg0 ( intervene-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg1 government-organization_name_0 :arg2 ( secretary :mod press ) ) ) ) :arg1 ( decide-01 :arg0 ( person :arg0-of ( lead-02 :arg1 country_name_1 ) ) :arg1 ( behave :arg0 person :arg1 ( person :arg0-of ( lead-02 :arg1 country ) ) :arg2 ( behave :arg0 person :arg1 ( person :arg0-of ( lead-02 :arg1 country ) ) :arg1-of ( relate-01 :arg2 ( uprising :mod separatist ) ) ) ) ) ) :op2 ( open-01 :arg1 ( majority :arg3-of ( include-91 :arg1 ( population :quant num_0 ) :arg3 majority ) ) )
possible-01 :arg1 ( find-01 :arg1 ( edition :mod old ) :frequency often :arg1-of ( cause-01 :arg0 ( cost-01 :arg1 ( edition :mod last ) :arg2 ( fraction :mod ( small :degree very ) ) ) ) ) :prep-in ( case :mod such )
know-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg1 company_name_0 ) ) :arg1 ( pain-01 :arg0 ( shell :location ( around :op1 lungs ) ) )
appoint-01 :arg0 person_name_0 :arg1 ( person :mod royal :mod royal :arg0-of ( appoint-01 :arg1 person :arg2 ( thing :arg2-of moisturize-01 ) ) ) :arg2 lawyer
deal-01 :arg0 ( person :arg1-of capture-01 :arg0-of ( have-org-role-91 :arg2 militant ) ) :arg2 ( person :arg0-of ( have-org-role-91 :arg2 militant ) :arg1-of capture-01 ) :location ( region :mod location_name_0 )
contrast-01 :arg1 ( differ-02 :arg1 ( project :time present ) :mod main ) :arg2 ( explain-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg2 minister ) ) :arg1 ( contrast-01 :arg1 ( have-03 :arg0 car :arg1 ( car :arg1-of ( reach-01 :arg0 car ) :mod ( only :polarity - ) ) :time now ) :arg2 ( suppose-02 :arg1 opportunity :arg2 ( age-01 :arg1 car :arg2 ( temporal-quantity temporal-quantity_num_0 :unit year ) ) :time now :purpose ( get-01 :arg0 car :arg1 ( person :arg0-of ( deal-02 :arg1 car ) ) :arg2 ( person :arg0-of deal-02 ) ) ) ) )
visit-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg2 president ) ) :arg1 ( person_name_0 :arg1-of ( near-02 :arg2 ( border-01 :arg1 person :arg2 country-region_name_1 ) ) ) :purpose ( express-01 :arg0 person :arg1 ( support-01 :arg0 person ) )
state-01 :arg0 ( comment-01 :arg0 ( organization_name_0 :arg0-of ( head-01 :arg1 ( organization_name_1 :part-of organization_name_1 :topic ( policy :topic information ) ) :mod deputy :ord ( ordinal-entity ordinal-entity_num_0 ) ) ) ) :arg1 ( see-01 :arg0 person_name_2 :arg1 ( problem :polarity - :topic ( postponement :arg1 ( enter-01 :arg0 ( law :topic ( protect-01 :arg1 data :arg1-of personal-02 ) ) ) ) ) ) :time today
say-01 :arg0 data :arg1 ( seem-01 :arg1 ( go-02 :arg0 ( income :poss country_name_0 ) :arg4 amend-01 ) :mod also )
report-01 :arg0 ( thing :arg1-of report-01 :mod this :mod '' )
make-01 :arg0 we :arg1 ( kitchen :mod small ) :arg2 we :time ( and :op1 ( date-entity :time former ) :op2 ( date-entity :time former ) )
go-02 :arg0 he :arg1 ( skiing :location location_name_0 ) :time ( early :op1 ( date-entity year_date-entity_0 ) :degree more :mod just )
thing :quant num_0 :arg1-of ( include-91 :arg2 ( thing :arg1-of ( symbolize-01 :arg2 ( barbarism :location location_name_0 ) ) :arg0-of shock-01 ) :degree most ) :domain ( photograph-01 :arg0 he )
stink-01 :arg1 personality :arg1-of ( cause-01 :arg0 ( and :op1 ( own-01 :arg0 ( person :arg0-of ( own-01 :arg1 ( house :poss person_name_0 ) ) ) :arg1 ( house :poss ( and :op1 ( house :arg1-of ( build-01 :arg0 plant ) ) :op2 ( gun :arg1-of ( build-01 :arg0 plant ) ) :op3 ( gun :mod tidal ) ) ) ) :op2 ( keep-01 :arg0 person :arg1 ( mine :mod ural ) ) ) ) :mod indeed
take-01 :arg0 ( and :op1 ( product :mod mansion ) :op2 ( product :arg2-of sanction-02 ) ) :arg1 ( product-of :op1 ( more-than :op1 num_0 ) :op2 ( percentage-entity :quant ( more-than :op1 num_0 ) ) ) :arg1-of general-02
receive-01 :arg0 ( '' :name ( name :op1 '' :op2 peninsula_name_0 ) ) :arg1 ( license-01 :arg1 ( broadcast-01 :medium television ) ) :arg2 ( broadcast-01 :medium television )
say-01 :arg0 ( doctor :quant num_0 :mod only :arg0-of ( have-03 :arg1 abort-01 :location location_name_0 ) ) :arg1 ( have-03 :arg0 ( person :mod religious-group_name_0 ) :arg1 organization_name_1 )
spend-01 :arg0 he :arg1 ( monetary-quantity monetary-quantity_num_0 :unit dollar )
say-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg2 president ) ) :arg1 ( obligate-01 :arg2 ( sozdat?predposylki :arg1 ( and :op1 ( attract-01 :arg1 ( invest-01 :quant more ) :arg2 region ) :op2 ( form-01 :arg1 ( territory :arg1-of ( relate-01 :arg2 ( develop-02 :arg1-of advanced-02 ) ) ) ) :op3 ( compete-02 :arg1 territory :arg3 ( center :mod business :arg1-of key-02 :location ( region :mod world-region_name_0 ) ) ) ) ) )
show-01 :arg0 ( person :arg0-of ( lead-02 :arg1 ( person :arg0-of lead-02 ) ) ) :arg1 ( exemplify-01 :arg0 ( and :op1 ( behave-01 :arg0 man :arg1 courtesy :mod just ) :op2 ( plan-01 :arg0 man :arg1 ( age :mod old :mod old ) :location ( society :arg1-of high-02 ) ) ) )
contrast-01 :arg2 ( link-01 :polarity - :arg0 company_name_0 :arg1 it :arg2 ( case :poss he ) :time ( then :mod even ) )
multi-sentence :snt1 ( contrast-01 :arg1 ( sell-01 :arg1 ( good :arg1-of sell-01 ) :arg2 ( percentage-entity percentage-entity_num_0 ) :mod still ) :arg2 ( possible-01 :arg1 ( bring-01 :arg1 ( initiative :mod this ) :arg2 abroad :mod still ) ) ) :snt2 ( contrast-01 :arg1 ( possible-01 :arg1 ( bring-01 :arg1 ( initiative :mod this ) :arg2 abroad ) ) :arg2 ( step-01 :arg1 ( direction :mod this ) :arg1-of significant-02 ) )
contrast-01 :arg2 ( say-01 :arg0 ( confusion :mod this ) :arg1 ( and :op1 ( mess-up-02 :polarity - :arg0 ( and :op1 individual :op2 ( part :mod other :part-of body ) :op3 ( part :mod other ) ) :arg1 ( problem :polarity - ) ) :op2 ( problem :domain ( and :op1 ( part :mod other ) :op2 ( part :mod other ) :op3 ( part :mod other ) :op4 ( problem :polarity - :mod ( only :polarity - ) ) ) ) ) )
multi-sentence :snt1 ( conduct-01 :arg0 he :arg1 ( study-01 :arg0 ( person :arg0-of ( suggest-01 :arg1 that ) :arg0-of ( suggest-01 :arg1 ( percentage :arg1-of ( significant-02 :arg1-of ( possible-01 :polarity - ) ) ) ) ) ) ) :snt2 ( likely-01 :arg1 ( cause-01 :arg1 ( caused :arg1 ( asbestos :arg1 environment ) ) ) )
up :arg1 he :arg2 push-01 :arg1-of ( resemble-01 :arg2 ( man :mod old ) )
multi-sentence :snt2 ''
multi-sentence :snt1 ( design-01 :arg1 ( problem :mod another :arg1-of ( design-01 :arg3 ( person :quant num_0 ) ) ) :arg3 ( person :quant num_0 ) ) :snt2 ( possible-01 :arg1 ( recipes :arg0 ( and :op1 ( control-01 :arg1 ( angle :mod alone ) ) :op2 ( control-01 :arg1 angle ) ) :arg1 ( right :prep-for headache ) ) )
hope-01 :arg0 country_name_0 :arg1 ( agree-01 :arg1 ( cooperate-01 :arg0 ( country :quant num_0 ) :arg2 defend-01 ) ) :arg1-of report-01 :mod also
animal :domain ( passion :poss i :ord ( ordinal-entity ordinal-entity_num_0 ) ) :arg0-of ( cause-01 :arg1 ( go-02 :arg0 i :arg4 ( province_name_1 :mod veterinary ) ) )
contrast-01 )
use-01 :arg0 ( government-organization :arg0-of ( administrate-01 :arg1 region ) :time previous ) :arg1 ( building :mod this ) :arg2 we :time ( after :op1 ( recognizing :arg0 government-organization :arg1 ( merits :poss we ) :arg2 ( signal-07 :arg1 ( respect-01 :arg1 narcotic ) ) ) )
multi-sentence :snt1 ( look-01 :polarity - :arg0 he :arg1 revenge ) :snt2 ( exemplify-01 :arg0 ( fixated :polarity - :arg1 he :time past ) )
and :op1 ( place-01 :arg1 ( thing :arg2-of mask-01 ) :arg2 ( thing :arg2-of mask-01 ) :mod only ) :op2 ( deprived :arg1 ( space :mod all :arg1-of remain-01 :arg1-of remain-01 ) :arg2 sunlight :mod even ) :location ( above :op1 earth )
use-01 :arg1 location_name_0 :arg2 ( and :op1 office :op2 shop :op3 libraries :op4 meriyakh ) :arg1-of ( cause-01 :arg0 ( and :op1 ( amaze-01 :arg1 they :mod amazing ) :op2 ( thing :arg2-of ( characteristic-02 :arg1 they ) ) ) ) :frequency often
think-01 :arg0 he :arg1 ( die-01 :arg1 she ) :time ( after :quant ( multiple :op1 num_0 ) )
say-01 :arg0 magazine_name_0 :arg1 ( and :op1 ( lose-02 :arg0 ( and :op1 ( person :arg0-of ( have-rel-role-91 :arg1 ( person :arg0-of ( have-rel-role-91 :arg2 enemy ) ) :arg2 enemy ) ) :op2 ( person :arg0-of ( have-rel-role-91 :arg1 person :arg2 enemy ) ) :op3 ( person :arg0-of ( have-rel-role-91 :arg1 person :arg2 enemy ) ) :op4 ( person :arg0-of ( have-rel-role-91 :arg1 person :arg2 enemy ) ) :op5 ( person :quant ( more-than :op1 num_2 ) ) ) :arg1 ( person :arg1-of kill-01 ) ) :op2 ( wound-01 :arg0 lose-02 :arg1 ( person :quant ( more-than :op1 num_2 ) ) ) :op3 ( wound-01 :arg0 lose-02 :arg1 ( person :quant ( more-than :op1 num_2 ) ) ) )
exemplify-01 :arg0 ( serve-01 :arg1 ( sell-01 :arg1 ( coupons :example ( or :op1 groupon :op2 vigoda.ru ) ) ) ) :mod classic
say-01 :arg0 person_name_0 :arg1 ( introduce-02 :arg1 ( parking :arg1 ( person :arg0-of ( have-org-role-91 :arg2 capital ) ) ) ) :mod also
recommend-01 :arg1 ( and :op1 ( shut-down-05 :arg1 ( person :mod country_name_0 ) ) :op2 ( put-01 :arg0 person :arg1 country :arg2 country ) ) :arg2 ( say-01 :arg0 person :arg1 ( ally-01 :arg1 person :arg2 ( person_name_2 :arg1-of ( ally-01 :arg2 person_name_2 ) :arg1-of key-02 ) ) )
possible-01 :arg1 ( participate-01 :arg0 ( filmmakers :arg1-of local-02 ) :arg1 ( and :op1 ( class :mod master ) :op2 ( festival :location ( and :op1 theater :op2 cinema ) ) ) )
and :op1 ( plead-02 :polarity - :arg0 person_name_0 :arg1 ( guilty-01 :arg1 person ) ) :op2 ( charge-05 :arg1 person :arg2 ( charge-05 :arg1 person :mod politics ) )
and :op1 ( woman :mod white :domain need-01 ) :op2 ( confirm-01 :arg0 ( woman :mod white ) :arg1 story :purpose ( justify-01 :arg0 woman :arg1 ( lynching :arg1 lynching ) ) )
detalizirovat?sÃ¢ :arg1 document :mod still :purpose ( avoid-01 :arg0 document :arg1 ( discomfort :arg1 document :arg2 ( person :arg0-of buy-01 ) ) )
and :op1 ( subject-01 :arg1 ( house :poss ( person :arg0-of ( have-org-role-91 :arg2 capital ) ) ) :arg2 capital ) :op2 ( rise-01 :arg1 ( thing :arg2-of price-01 :arg1-of rise-01 :arg1-of rise-01 ) :manner rapid ) :arg1-of ( cause-01 :arg0 ( fear-01 :arg1 ( push-01 :arg0 ( bubble :mod credit ) :arg1 organization_name_0 :arg2 ( ensure-01 :arg0 organization :arg1 ( limit-01 :arg1 ( limit-01 :arg1 ( loan-01 :mod mortgage-01 ) :location june ) ) ) ) :arg1-of wide-02 ) )
state-01 :arg0 ( we :arg0-of ( have-org-role-91 :arg2 ( director :mod executive ) ) ) :arg1 ( choose-01 :arg0 we :arg1 organization_name_1 :arg1-of ( cause-01 :arg0 ( and :op1 ( believe-01 :arg0 we :arg1 ( community :poss we ) :arg1-of ( cause-01 :arg0 ( believe-01 :arg0 we :arg1 ( community :poss we ) ) ) ) :op2 ( share-01 :arg0 we :arg1 ( and :op1 ( value :poss we ) :op2 ( objective :arg1-of long-03 ) ) ) ) ) ) :op3 ( want-01 :arg0 they :arg1 ( help-01 :arg0 they :arg1 ( get-05 :arg1 we :arg2 there :manner ( fast :degree more ) ) ) )
remove-01 :polarity - :arg1 ( institution :mod ?????? ) :arg2 ( menu :arg1 ( cuisine :arg1-of single-02 ) ) :time yet
say-01 :arg0 ( change-01 :mod such ) :arg1 ( contribute-01 :arg0 initiative :arg2 ( and :op1 ( rapid :degree more ) :op2 ( ensure-01 :arg1 ( right-05 :arg1 ( citizen :poss country_name_0 ) :arg2 ( safe-01 :arg1 ( and :op1 ( data :mod ( data :arg1-of personal-02 ) ) :op2 ( secrecy :location ( network :mod informational-telecommunication ) ) ) ) ) ) :arg0-of effective-04 ) )
multi-sentence :snt1 ( apply-02 :arg1 this :arg2 ( good :arg1-of ( produce-01 :polarity - :location country_name_0 ) ) ) :snt2 ( and :op1 ( need-01 :arg0 ( person :arg0-of retail-01 ) :arg1 ( provide-01 :arg0 person :arg1 ( thing :arg1-of ( include-91 :arg2 ( product :arg0-of ( produce-01 :arg1 product ) :mod domestic ) ) :quant ( at-least :op1 1/2 ) ) ) :arg2 ( group :mod other :consist-of product :arg1-of ( produce-01 :location country ) ) ) :op2 ( say-01 :arg0 person :arg1 ( need-01 :arg0 ( person :arg0-of retail-01 ) :arg1 ( provide-01 :arg0 person :arg1 ( thing :arg1-of ( include-91 :arg2 ( product :arg0-of ( produce-01 :arg1 product ) ) ) ) ) ) ) )
possible-01 :polarity - :arg1 ( believe-01 :arg0 i :arg1 it )
contrast-01 )
agree-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg2 commander ) ) :arg1 ( write-01 :arg0 person :arg1 ( care-01 :arg0 person ) :time already ) :arg2 ( person :arg0-of ( have-org-role-91 :arg2 commander ) ) :time already
say-01 :arg0 she :arg1 ( and :op1 ( understand-01 :arg0 she :arg1 ( capable-01 :polarity - :arg1 it :arg2 ( walk-01 :arg0 it ) ) ) :op2 ( ask-01 :arg0 she :arg1 ( and :op1 ( capable-01 :arg1 it :arg2 ( walk-01 :arg0 it ) ) :op2 ( ask-01 :arg0 she :arg1 ( doctor :poss it ) ) ) ) :time ( carry-out-03 :arg1 it ) ) :li num_0
possible-01 :arg1 ( say-01 :arg0 he :arg1 ( contrast-01 :arg1 ( love-01 :arg0 i :arg1 you ) :arg2 ( early :degree too :domain i ) ) )
and :op1 ( go-out-17 :arg0 ( machine :quant num_0 ) :time ( during :op1 adolescence ) ) :op2 ( crash-01 :arg1 machine :destination ( push-01 :arg0 person_name_0 :arg1 ( car :mod both ) :arg2 wall ) )
follow-01 :arg1 this :arg2 ( and :op1 ( radiotherapy :arg0 ( trip-03 :arg0 person_name_0 ) :arg1 this ) :op2 ( trip-03 :arg0 ( person :arg0-of ( have-rel-role-91 :arg2 comrade ) ) :arg1 ( person :quant ( percentage-entity percentage-entity_num_0 :mod whole ) :arg0-of ( have-rel-role-91 :arg1 person :arg2 patient ) ) :duration ( temporal-quantity temporal-quantity_num_1 :unit year ) ) )
and :op1 ( nahal :arg0 ( person :arg0-of reside-01 :quant many :arg0-of reside-01 ) :arg1 ( village :arg1-of ( near-02 :arg2 ( border-01 :arg1 person :arg2 country-region_name_0 ) ) ) ) :op2 ( doubt-01 :arg0 person :arg1 ( recommend-01 :arg1 ( go-02 :arg0 person :direction back ) ) )
resemble-01 :arg2 ( head :part-of i )
and :op1 ( based :arg1-of ( base-01 :location location_name_0 :mod also ) :arg1-of ( base-01 :location location_name_0 :mod also ) :arg1-of ( base-01 :location location_name_0 :mod also ) :arg1-of ( base-01 :location location_name_0 :mod also ) :arg1-of ( base-01 :location location_name_0 :mod also ) ) :op2 ( work-01 :arg1 ( and :op1 ( install-01 :arg1 ( vessel :quant num_0 :mod cruise :arg0-of ( walk-01 :destination world-region_name_2 ) ) ) :op2 ( walk-01 :arg0 and :destination world-region_name_2 ) :op3 ( walk :arg1 and ) :op4 ( continent_name_8 :arg1 and ) :op5 et-cetera ) )
have-03 :arg0 it :arg1 ( experience-01 :arg1 ( work-01 :arg1 ( post :arg0-of lead-01 ) ) ) :mod really
hear-01 :arg0 person_name_0 :arg1 ( know-01 :arg0 person_name_1 :arg1 jazz :source ( cds :name ( name :op1 polycrates :op2 collezio ) :poss ( person :arg0-of ( have-rel-role-91 :arg1 person :arg2 father ) ) ) ) :concession ( reach-01 :arg0 person :arg1 age :time ( year :mod ( date-entity decade_date-entity_0 ) ) )
introduce-01 :arg1 ( smartphone :ord ( ordinal-entity ordinal-entity_num_0 ) :prep-with ( organization_name_1 :part-of organization_name_1 ) ) :arg2 ( num_1 :quant num_1 )
multi-sentence :snt1 ( line :mod bottom :domain ( line :mod bottom ) :frequency often :prep-with ( injure-01 :mod minor ) ) :snt2 ( possible-01 :arg1 ( catch-02 :arg1 ( person :arg0-of drive-01 :mod '' ) :arg2 ( person :arg0-of drive-01 ) ) :arg0-of ( cause-01 :arg1 ( catch-02 :arg1 organization_name_0 ) ) )
and :op1 ( involve-01 :arg1 ( ship :quant num_0 :arg1-of ( involve-01 :arg2 ( operation :mod vital ) ) ) :arg2 ( operation :mod vital ) ) :op2 ( kill-01 :arg0 ship :arg1 ( and :op1 ( vehicle :quant num_1 ) :op2 ( court :quant ( about :op1 num_1 ) ) ) )
go-02 :arg0 person_name_0 :arg4 ( ministry :topic ( culture :poss peninsula_name_1 ) ) :purpose ( learn-01 :arg0 person :arg1 ( fate :poss house ) ) :time ( before :op1 now :quant ( between :op1 ( temporal-quantity temporal-quantity_num_0 :unit year ) :op2 ( temporal-quantity temporal-quantity_num_1 :unit year ) ) )
multi-sentence :snt1 ( '' :arg0 ( meet-03 :arg0 person_name_0 :arg1 person_name_1 ) :arg1 ( suggest-01 :arg0 person :arg1 ( release-01 :arg1 ( relation-03 :arg0 person :arg2 organization_name_2 ) :arg2 organization_name_2 ) ) ) :snt2 ( say-01 :arg0 he :arg1 ( '' :arg1 ( thing :arg1-of precede-01 ) ) :time future )
and :op1 ( continue-01 :arg1 it :arg1-of ( cheap-02 :degree more ) ) :op2 ( update-01 :arg0 it :arg1 ( maximum :op1 dollar ) :mod even )
reach-01 :arg0 ( gusts :mod wind ) :arg1 ( mph :quant num_0 :location ground :location location_name_0 ) :time ( time :mod this )
and :op1 ( '' :arg1 i :arg2 i ) :op2 ( possible-01 :polarity - :arg1 ( change-01 :arg0 you :arg1 ( fact :mod this ) ) )
and :op1 ( find-01 :arg0 ( person :arg0-of research-01 ) :arg1 ( confirmation :poss ( person :arg0-of ( have-org-role-91 :arg2 ( person :arg0-of research-01 ) ) ) ) ) :op2 ( and :op1 ( get-03 :arg1 ( person :arg1-of ( strong-02 :manner physical ) ) :arg2 assault ) :op2 ( go-02 :arg0 person :arg4 assault ) :op3 ( feel-01 :arg0 person :arg1 ( entitled :arg1 person :arg2 assault ) ) :op4 ( feel-01 :arg0 person :arg1 ( entitled :arg1 person :arg2 assault ) ) :op4 ( prefer-01 :arg0 person :arg1 ( impose-01 :arg0 person :arg1 ( condition :arg0-of favor-01 :mod other ) :purpose ( resolve-01 :arg0 person :arg1 conflict-01 :manner peaceful ) ) ) )
and :op1 ( mines :arg0 ( region :mod country_name_0 ) :arg1 ( and :op1 language_name_1 :op2 factory :op3 ( plant :mod ( melting :polarity - ) ) ) :mod also ) :op2 ( produce-01 :arg0 and :arg1 ( equipment :arg1-of need-01 :arg0-of ( produce-01 :arg1 ( equipment :arg1-of need-01 ) :beneficiary ( army :poss country ) ) ) )
say-01 :arg0 nobody :arg1 ( good :degree more :domain ( mussels :mod salad ) :source ( location_name_0 :mod new :mod brasserie ) )
have-03 :arg0 ( thing :arg1-of plan-01 ) :arg1 ( thing :arg2-of ( copy-01 :arg1 ( '' :name ( name :op1 '' :op2 vedomosti ) ) ) )
demonstrate-01 :arg0 ( data :source ( company_name_0 :location country_name_1 ) :arg1-of fresh-04 ) :arg1 ( drop-01 :arg1 ( mortgage :arg0-of ( approve-01 :arg1 mortgage :time subsequent ) ) :location ( market :arg0-of house-01 ) :time subsequent )
change-01 :arg1 house :time ( since :op1 ( change-01 :polarity - :arg1 ( building :time ( date-entity century_date-entity_0 ) :ord ( ordinal-entity ordinal-entity_num_0 ) ) ) ) :condition ( consider-01 :polarity - :arg1 ( decrepit :domain building ) )
claim-01 :arg1 this :arg1-of ( cause-01 :arg0 ( and :op1 ( subject :poss ( location_name_0 :arg1-of ( subject-01 :arg2 ( policy :mod continent_name_0 ) ) ) ) :op2 ( mediate-01 :arg0 ( mediate-01 :arg0 ( crisis :mod country_name_2 ) :mod basic ) ) ) )
emphasize-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg2 minister ) ) :arg1 ( connect-01 :polarity - :arg1 it :arg2 door :arg1-of ( cause-01 :arg0 ( and :op1 ( offend-03 :mod any ) :op2 ( offend-03 :mod any ) :op3 ( person :arg0-of ( witness-01 :arg1 i ) ) ) ) )
multi-sentence :snt1 ( cause-01 :arg0 amr-unknown :arg1 ( feel-01 :arg0 we :arg1 ( thing :arg0-of ( cause-01 :arg1 ( feel-01 :arg0 we :arg1 ( consequence :arg0-of kill-01 ) :time now ) ) ) :arg1-of ( cause-01 :arg0 ( law :mod ( type :quant ( many :op1 ( temporal-quantity temporal-quantity_num_0 :unit year ) ) ) ) ) :arg1-of ( cause-01 :arg0 ( law :mod ( type :quant num_0 ) :mod ( type :quant num_0 ) ) :time eventual ) ) ) :snt2 ( tens :arg0 law :duration ( temporal-quantity temporal-quantity_num_1 :unit year ) :arg1-of typical-02 )
and :op1 ( achieve-01 :arg0 ( and :op1 '' :op2 ( thing :arg2-of result-01 ) ) :arg1 ( negotiate-01 :arg0 organization_name_0 :arg1 ( visa :name ( name :op1 facilitation ) ) :arg1-of succeed-01 ) ) :op2 ( dialogues :arg0 organization :arg1 ( and :op1 modernize-01 :op2 readmission :op3 ( list-01 :arg1 ( organization_name_1 :mod '' ) ) :op4 ( list-01 :arg1 ( and :op1 interlocutor :op2 '' ) ) ) )
and :op1 ( detain-01 :arg1 he :location location_name_0 :time ( date-entity month_date-entity_0 day_date-entity_0 ) ) :op2 ( detain-01 :arg1 he :location location_name_0 :time ( after :op1 ( accident :poss he ) ) )
amount :quant-of compensate-01 :source ( rate-entity-91 :arg1 ( monetary-quantity monetary-quantity_num_0 :unit dollar ) :arg2 ( volume-quantity volume-quantity_num_1 :unit gallon ) ) :prep-for ( cargo :quant num_1 :purpose cargo )
go-02 :arg0 person_name_0 :arg4 ( ministry :topic location_name_1 ) :time ( before :op1 now :quant ( between :op1 ( temporal-quantity temporal-quantity_num_0 :unit year ) :op2 ( temporal-quantity temporal-quantity_num_1 :unit year ) ) ) :purpose ( learn-01 :arg0 person :arg1 ( fate :poss ( home :poss person ) ) )
have-org-role-91 :arg0 person_name_0 :arg1 location_name_1 :arg2 ( prosecute-01 :arg1 person :arg1-of special-02 ) :arg1-of ( appoint-01 :arg0 ( republican :mod judge-a ) )
and :op1 ( hit-01 :arg0 this :arg1 ( confidence :arg1-of increase-01 :mod this ) ) :op2 ( hit-01 :arg0 this :arg1 ( confidence :mod ( person :arg0-of consume-01 ) ) :mod particular ) :op3 ( contributes :arg0 this :arg1 ( fact :topic ( or :op1 delay-01 :op2 ( order :mod even :mod even ) ) ) )
right-05 :arg1 they :arg2 ( dictate-01 :arg0 they :arg1 ( term :poss they ) :purpose ( and :op1 ( retailers :arg0 they ) :op2 ( price-01 :arg1 they ) ) ) :arg1-of ( cause-01 :arg0 ( force-01 :arg1 they :arg2 ( buy-01 :arg0 they :arg1 ( good :poss they ) ) ) )
cause-01 :arg0 this :arg1 ( represent-01 :arg0 i :arg1 ( report :topic ( expand-01 :arg1 ( right :poss ( person :arg0-of work-01 ) ) :manner together :accompanier ( thing :arg1-of ( symbolize-01 :arg2 ( right :mod civil ) ) ) ) ) )
contrast-01 )
and :op1 ( sorry-01 :arg1 i :arg2 ( person :quant all :arg0-of ( suffer-01 :source ( metropolis :mod this ) ) ) :degree so ) :op2 ( say-01 :arg0 person :arg1 ( person_name_0 :arg0-of ( suffer-01 :arg1 ( work-01 :arg1-of volunteer-01 ) :time ( week :mod last ) :location convent ) ) )
start-01 :arg1 ( tournaments :mod humanitarian :quant series ) :time ( after :op1 now :quant ( couple :op1 ( temporal-quantity temporal-quantity_num_0 :unit week ) ) )
agree-01 :arg0 i :arg1 ( thing :arg1-of ( report-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg2 commander ) ) :time already ) ) :arg2 ( person :arg0-of ( have-org-role-91 :arg2 commander ) ) :time already
and :op1 ( accuse-01 :arg0 person_name_0 :arg1 ( rape-01 :location hotel ) :arg2 location_name_1 ) :op2 ( pitlochry :arg0 person )
and :op1 ( position-01 :arg1 ( woman :arg1-of black-05 ) :arg2 ( position-01 :arg1 woman :arg2 ( issue-02 :mod this ) :arg1-of clear-06 ) ) :op2 ( confront-01 :arg0 woman :arg1 ( reality :mod difficult ) :frequency ( rate-entity-91 :arg3 ( temporal-quantity temporal-quantity_num_0 :unit day ) ) )
multi-sentence :snt1 ( possible-01 :arg1 ( do-02 :arg1 ( sushi :arg1-of same-01 ) :arg2 ( fish :poss we ) ) ) :snt2 ( goryachitsya :arg0 he )
obligate-01 :arg1 he :arg2 ( think-01 :arg0 he :arg1 ( location :arg4-of ( come-01 :arg1 he :arg4 ( contact-01 :arg0 he :arg1 he ) ) ) ) :manner strict
say-01 :arg0 he :arg1 ( difficult :domain ( obligate-01 :arg2 ( institution :mod institution ) ) )
outstanding :polarity - :domain situation :topic ( or :op1 ( person :mod new :arg0-of ( represent-01 :arg1 ( and :op1 person_name_0 :op2 ( person :arg0-of ( represent-01 :arg1 ( person :mod country_name_1 ) ) :arg0-of ( represent-01 :arg1 ( and :op1 ( person :arg0-of ( play-01 :arg1 ( level :mod that ) ) ) :op2 ( person :arg0-of ( have-org-role-91 :arg1 country :arg3 ( represent-01 :arg0 person :arg1 country ) ) ) :op3 ( person :arg0-of ( have-org-role-91 :arg1 country :arg3 ( represent-01 :arg0 person :arg1 country ) ) ) :op4 ( person :arg0-of ( play-01 :arg1 ( play-01 :arg0 person :arg2 ( level :mod that ) ) ) ) :op5 ( thing :arg2-of ( tattoo-01 :arg1 person :time ( before :op1 now :quant ( couple :op1 ( temporal-quantity temporal-quantity_num_0 :unit decade ) ) ) ) ) ) ) ) ) ) ) )
want-01 :arg0 we :arg1 ( gold :mod gold )
announce-01 :arg0 ( authority :mod country_name_0 ) :arg1 ( intend-01 :arg0 authority :arg1 ( join-01 :arg0 authority :arg1 ( land :quant ( area-quantity area-quantity_num_0 :unit hectare ) :arg1-of ( own-01 :arg0 government-organization_name_1 ) ) ) )
multi-sentence :snt1 organization_name_0 :snt2 ( obtain-01 :mode interrogative :arg1 ( refinery :mod oil ) :manner together :accompanier ( asset :poss organization_name_2 :mod other ) )
and :op1 country_name_0 :op2 ( person :arg0-of ( have-org-role-91 :arg1 public :arg2 official ) ) :op3 ( person :arg0-of ( have-org-role-91 :arg1 public :arg2 official ) )
contrast-01 :arg2 ( and :op1 ( champions :arg1 ( tournament :time current ) ) :op2 ( champions :arg1 person_name_0 ) )
contrast-01 :arg1 ( seek-01 :polarity - :arg0 he :arg1 revenge ) :arg2 ( fixated :polarity - :arg0 he :prep-on ( nightmare :mod last :mod this ) )
multi-sentence :snt1 ( appreciate-02 :arg0 i :arg1 ( god :arg1-of ( return-01 :arg4 i ) ) :degree so ) :snt2 ( lie-07 :arg1 ( here :location here ) :arg2 everyone :arg1-of print-01 )
show-01 :arg0 ( data :source ( bank :consist-of ( person :arg0-of ( have-org-role-91 :arg1 country_name_0 :arg2 ( bank :mod bank ) ) ) ) :arg1-of fresh-04 ) :arg1 ( drop-01 :arg1 ( mortgage :arg1-of ( approve-01 :location ( market :arg0-of house-01 ) :degree further ) :arg0-of suggest-01 ) )
take-01 :arg0 ( person_name_0 :arg0-of ( have-org-role-91 :arg2 ( minister :mod prime ) ) ) :arg1 ( person :arg0-of ( have-rel-role-91 :arg1 person :arg2 daughter ) ) :arg4 school :time ( day :mod this ) :mod tradition :arg1-of ( resemble-01 :arg2 ( and :op1 ( person :arg0-of ( have-rel-role-91 :arg1 ( person :mod country_name_1 :arg0-of ( have-rel-role-91 :arg1 person :arg2 parent ) ) :arg2 parent ) ) :op2 ( person :arg0-of ( have-rel-role-91 :arg1 person :arg2 parent ) ) ) )
and :op1 ( talk-01 :arg0 person_name_0 :arg1 ( apartment :mod ordinary :poss person ) ) :op2 ( amaze-01 :arg1 person :time ( time :arg1-of same-01 :time-of ( stand-01 :arg1 house :arg2 ( ruins :mod roman ) ) ) )
think-01 :arg0 i :arg1 ( and :op1 ( person :arg0-of ( have-rel-role-91 :arg1 they :arg2 friend ) ) :op2 ( person :arg0-of ( kill-01 :arg1 person ) ) )
obligate-01 :arg2 ( fight-01 :arg0 we :arg2 ( sky :mod peaceful ) )
large :degree most :poss union-02
multi-sentence :snt1 ( and :op1 ( '' :arg0 ( and :op1 ( person :arg0-of ( have-rel-role-91 :arg2 dd1 ) ) :op2 ( person :arg0-of ( have-rel-role-91 :arg2 dd1 ) ) :op3 ( person :arg0-of ( have-rel-role-91 :arg2 dd1 ) ) :op4 ( person :arg0-of ( have-rel-role-91 :arg2 dd1 ) ) :op5 ( person :arg0-of ( have-rel-role-91 :arg2 dd1 ) ) :op6 ( person :arg0-of ( have-rel-role-91 :arg2 dd1 ) ) :op6 ( person :arg0-of ( have-rel-role-91 :arg2 dd1 ) ) :op7 ( person :arg0-of ( have-rel-role-91 :arg2 dd1 ) ) :op8 ( person :arg0-of ( have-rel-role-91 :arg2 dd1 ) ) :op8 ( person :arg0-of ( have-rel-role-91 :arg1 person :arg2 kills ) ) :op8 ( person :arg0-of ( have-rel-role-91 :arg1 person :arg2 kills ) ) :op8 ( person :arg0-of ( have-rel-role-91 :arg1 person :arg2 kills ) ) :op8 ( person :arg0-of ( have-rel-role-91 :arg1 person :arg2 kills ) ) :op8 ( person :arg0-of ( have-rel-role-91 :arg1 person :arg2 kills ) ) :op8 ( person :arg0-of ( have-rel-role-91 :arg1 person :arg2 kills ) ) :op8 ( person :arg0-of ( have-rel-role-91 :arg1 person :arg2 '' ) ) :op8 ( person :arg0-of ( have-rel-role-91 :arg1 person :arg2 '' ) ) :op8 ( person :arg0-of ( have-rel-role-91 :arg1 person :arg2 '' ) ) :op8 ( person :arg0-of ( have-rel-role-91 :arg1 person :arg2 '' ) ) :op8 ( person :arg0-of ( have-rel-role-91 :arg1 person :arg2 '' ) ) :op8 ( person :arg0-of ( have-rel-role-91 :arg1 person :arg2 '' ) ) :op8 ( person :arg0-of ( have-rel-role-91 :arg1 person :arg2 '' ) ) :op8 ( person :arg0-of ( have-rel-role-91 :arg1 person :arg2 '' ) ) :op8 et-cetera ) ) )
plan-01 :arg1 ( thing :arg2-of price-01 :arg1-of ( increase-01 :arg2 ( percentage-entity percentage-entity_num_0 ) ) ) :time ( future :arg1-of near-02 ) :time ( future :arg1-of near-02 )
contrast-01 :arg2 ( post-01 :arg0 case-03 :arg1 ( picture :arg0-of ( demonstrate-01 :arg1 ( possible-01 :arg1 ( change-01 :arg0 event :arg1 ( thing :manner-of ( and :op1 ( make-01 :arg1 event ) :op2 ( photograph-01 :arg0 event :arg1 he :arg1-of process-01 ) ) ) ) ) ) ) )
be-temporally-at-91 :arg1 num_0 :arg2 ( after :op1 person_name_0 ) :time then
end-01 :arg1 ( meet-03 :purpose ( stone :mod foundation ) )
and :op1 ( possible-01 :arg1 ( judge-01 :arg1 ( person :arg0-of ( partner-01 :arg1 organization_name_0 ) :arg0-of ( have-org-role-91 :arg1 organization :arg3 ( head-01 :arg0 person :arg1 organization ) ) ) :manner ( well :degree very ) ) ) :op2 ( judge-01 :arg1 ( person :arg0-of ( head-01 :arg1 ( head :part-of organization ) ) ) )
charge-05 :arg0 police :arg1 man :arg2 ( refuse-01 :arg0 man :arg1 ( and :op1 ( stop-01 :arg1 man ) :op2 ( dangerous :domain man ) ) )
contrast-01 :arg2 ( believe-01 :arg0 ( person :arg1-of expert-01 ) :arg1 ( serious-02 :arg1 problem :degree ( more :degree much ) ) )
say-01 :arg0 ( person :arg1-of expert-01 ) :arg1 ( result-01 :arg1 ( place :ord ( ordinal-entity ordinal-entity_num_0 ) ) :arg2 ( consider-02 :arg1 ( lack-01 :arg1 ( train-01 :arg1-of target-01 ) ) ) )
have-03 :arg0 they :arg1 ( bill :topic subject )
lead-01 :arg0 ( team :consist-of ( person :arg0-of ( have-org-role-91 :arg1 country_name_0 :arg2 ( team :mod nation ) ) ) :mod nation ) :time ( after :op1 ( win-01 :arg0 ( and :op1 ( win-01 :arg1-of clean-04 ) :op2 ( volitional :arg1-of clean ) :op3 ( weight :arg1-of ( include-91 :arg2 ( weight :quant num_1 ) ) ) ) ) )
and :op1 ( turns :arg0 it :arg1 ( product :mod country_name_0 ) :mod still ) :op2 ( say-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg1 country_name_1 ) ) :arg1 ( product :mod country ) :mod still )
and :op1 ( over :domain season ) :op2 ( obliged :polarity - :arg0 we :arg1 ( person :arg0-of ( lead-02 :arg1 we ) ) :purpose ( participate-01 :arg0 person :arg1 match-03 ) )
use-01 :arg1 ( use-01 :arg0 ( commerce :arg1-of modern-02 :mod commerce :mod commerce :location country_name_0 ) :arg2 ( make-01 :arg1 ( and :op1 -rrb- :op2 tissue ) :mod even ) ) :location ( country :location country )
and :op1 ( finish-07 :arg0 ( and :op1 person_name_0 :op2 person_name_1 ) :arg2 ( thing :quant num_0 :arg1-of ( kill-01 :arg1-of ( cause-01 :arg0 ( revolution-03 :mod that :arg1-of ( expect-01 :arg1-of possible-01 ) ) ) ) ) )
multi-sentence :snt1 bathroom :snt2 ( live-01 :arg0 he :purpose ( and :op1 ( person :arg0-of ( have-rel-role-91 :arg1 i :arg2 grandparents ) ) :op2 ( person :arg0-of ( have-rel-role-91 :arg1 i :arg2 dad ) ) :op3 ( person :arg0-of ( have-rel-role-91 :arg1 i :arg2 husband ) ) :op4 ( person :arg0-of ( have-rel-role-91 :arg1 i :arg2 husband ) ) :op5 ( person :arg0-of ( have-rel-role-91 :arg1 i :arg2 husband ) ) :op6 ( person :arg0-of ( have-rel-role-91 :arg1 i :arg2 daughter ) ) :op7 ( person :arg0-of ( have-rel-role-91 :arg1 i :arg2 husband ) ) :op7 ( person :arg0-of ( have-rel-role-91 :arg1 i :arg2 husband ) ) ) )
and :op1 ( increase-01 :arg0 this :arg1 ( revenue :mod budget ) ) :op2 ( create-01 :arg0 ( industry :mod any ) :arg1 ( job :mod new ) ) :op3 ( introduce-01 :arg1 ( industry :mod any ) :arg2 ( expand-01 :arg1 revenue :manner ( fast :degree more :compared-to ( become-01 :arg1 industry :arg2 ( accustomed :arg1 industry ) ) ) ) )
be-located-at-91 :arg1 they :arg2 ( ambulance :location ( condition :arg1-of stable-03 :location ( hospital :mod hospital ) ) )
possible-01 :arg1 ( bring-01 :arg0 ( law :mod this ) :arg1 ( rate :mod ( tax-01 :arg3 income ) ) :arg2 ( rate-entity-91 :arg1 ( rate :mod ( tax-01 :arg3 income ) ) :arg2 ( rate-entity-91 :arg1 ( up-to :op1 num_0 ) :arg2 ( temporal-quantity temporal-quantity_num_0 :unit year ) :mod even ) ) ) :condition ( continue-01 :arg0 state :arg1 ( achieve-01 :arg0 state :arg1 ( goal :mod ( revenue :mod tax-01 ) ) :time ( year :mod next ) ) )
prove-01 :arg0 anger-01 :arg1 ( universal :degree most :domain ( and :op1 ( universal :degree most ) :op2 ( emotion :poss man ) ) )
suggest-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg3 judge-01 ) :quant some ) :arg1 ( possible-01 :arg1 ( and :op1 ( change-01 :arg0 case-03 :arg1 ( habit :mod audience ) ) :op2 ( grow-01 :arg1 ( popularity :poss ( service :mod internet :mod streaming :example organization_name_0 ) :arg1-of grow-01 ) ) ) )
and :op1 ( give-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg1 country_name_0 :arg2 diplomat ) ) :arg1 ( government-organization :arg0-of ( govern-01 :arg1 region ) ) :arg2 ( government-organization :arg0-of ( govern-01 :arg1 region ) ) :location ( forum :mod international ) ) :op2 ( give-01 :arg0 authority :arg1 ( and :op1 ( agree-01 :arg1 trade-01 ) :op2 ( policy :mod foreign ) ) :arg2 ( and :op1 ( agree-01 :arg1 trade-01 ) :op2 ( policy :mod foreign ) ) :mod essential ) :op3 ( handing :arg0 authority :arg1 ( control-01 :arg0 country :arg1 ( territory :location ( over :op1 territory ) ) ) :arg0-of ( combine-01 :arg1 ( territory :mod main :poss country_name_1 ) :arg2 country ) )
lie-07 :arg1 ( thing :arg2-of ( essence :arg1 ( offline :name ( name :op1 o2o :op2 o2o ) :mod online ) ) :mod online ) :arg2 ( attract-01 :arg0 commerce :arg1 customer :arg2 internet ) :arg0-of ( cause-01 :arg1 ( come-01 :arg1 they :arg3 ( or :op1 ( store :mod offline :mod ordinary ) :op2 ( buy-01 :arg1 ( service :mod traditional :mod other ) ) ) ) )
same-01 :arg2 ( way :mod same )
say-01 :arg1 ( and :op1 ( possible-01 :arg1 ( determine-01 :arg0 ( government-organization_name_1 :mod chemical ) :arg1 ( place :location-of ( bear-02 :arg1 she ) ) ) ) :op2 ( possible-01 :arg1 ( and :op1 ( determine-01 :arg0 ( government-organization_name_1 :mod chemical ) :arg1 ( place :location-of ( bear-02 :arg1 she ) ) ) :op2 ( ????????????? :arg1 ( ????? :mod educate-01 :poss region ) ) ) ) ) :arg2 ( leave-11 :arg0 ( political-party_name_2 :mod chemical ) )
grant-01 :arg0 ( person_name_0 :arg0-of ( have-org-role-91 :arg1 country_name_1 :arg2 president ) ) :arg1 ( citizenship :mod country ) :arg2 ( person :arg1-of fame-01 :arg0-of ( have-org-role-91 :arg1 country_name_2 :arg2 ( president :mod vice ) ) )
contrast-01 :arg2 ( turns :arg0 it :arg1 ( building :mod ( building :mod almost ) ) :time ( case :mod any ) )
contrast-01 :arg1 ( know-01 :arg0 everyone :arg1 ( undermine-01 :polarity - :arg0 ( movement-07 :arg1 trade-01 ) :arg1 ( power :poss nation ) ) :time now ) :arg2 ( increase-01 :arg0 everyone :arg1 and )
appoint-01 :arg0 ( person_name_0 :arg0-of ( have-org-role-91 :arg2 general ) ) :arg2 ( post :poss ( person_name_1 :arg0-of ( have-org-role-91 :arg2 ( minister :mod defense ) ) ) ) :mod right
say-01 :arg0 ( event :location state_name_0 ) :arg1 ( own-01 :arg0 ( or :op1 ( property :arg1-of ( include-91 :arg2 ( property :mod ( tax-01 :arg3 tax ) ) ) :mod large :mod such ) :op2 ( base :mod tax-01 :location ( around :op1 port_name_1 ) ) :op3 ( base :mod tax-01 :mod especially :location ( around :op1 port_name_1 ) ) ) :arg1 ( and :op1 ( person :arg0-of ( have-org-role-91 :arg1 ( government-organization :arg0-of govern-01 ) :arg2 ( director :mod executive ) ) ) :op2 ( person_name_2 :arg0-of ( have-org-role-91 :arg1 organization :arg2 executive ) ) :op3 ( person :arg0-of ( have-org-role-91 :arg1 organization :arg2 executive ) ) :op4 ( person :arg0-of ( have-org-role-91 :arg1 center :arg2 executive ) ) :purpose ( tax-01 :arg2 state ) ) ) :location state_name_0
contrast-01 :arg2 ( initiative :polarity - :mod radical :domain ( initiative :mod country_name_0 ) :mod certain )
multi-sentence :snt1 ( possible-01 :arg1 ( talk-01 :arg0 you :arg1 ( demand-01 :arg1 ( material :mod raw :mod domestic ) :arg1-of increase-01 ) ) :time ( late :degree more :quant ( almost :op1 ( temporal-quantity temporal-quantity_num_0 :unit month ) ) ) ) :snt2 ( say-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg1 organization_name_0 :arg2 ( president :mod vice ) ) ) :arg1 ( person_name_1 :arg0-of ( have-org-role-91 :arg1 organization :arg2 ( president :mod vice ) ) :arg0-of ( have-org-role-91 :arg1 organization :arg2 ( president :mod vice ) ) :arg0-of ( have-org-role-91 :arg1 organization :arg2 ( president :mod vice ) ) :arg0-of ( have-org-role-91 :arg1 organization :arg2 ( president :mod vice ) ) :arg0-of ( have-org-role-91 :arg1 organization :arg2 ( president :mod vice ) ) ) )
and :op1 ( become-01 :arg1 it :arg2 ( know-01 :arg0 it :arg1 ( investigate-01 :arg1 ( investigate-01 :arg1 ( and :op1 ( article :arg1-of criminal-03 ) :op2 ( article :name ( name :op1 '' ) ) ) ) ) ) ) :op2 ( article :part-of ( person :arg0-of ( have-org-role-91 :arg1 ( hometown :poss person_name_0 ) :arg2 ( mayor :mod vice ) ) ) ) :time ( date-entity month_date-entity_0 day_date-entity_0 )
alternative :arg1-of perfect-02 :domain ( service :mod this ) :beneficiary ( person :arg0-of study-01 :arg0-of ( have-03 :arg1 ( belongings :poss service ) :path ( machine :mod ( over-burdened :mod dangerously ) ) ) :mod usual )
seem-01 :arg1 ( possible-01 :polarity - :arg1 ( sure-02 :arg1 ( safe-01 :arg1 he ) ) )
event :mod all :time ( time :mod this )
introduce-02 :arg0 ( method :mod this ) :arg1 ( character :mod ( sort :mod all ) ) :manner consistent :arg1-of ( start-01 :arg1-of ( start-01 :arg1-of ( use-01 :arg1-of ( use-01 :arg1-of ( frequent-02 :degree most ) ) ) ) )
and :op1 ( come-01 :arg1 emotions :arg4 naught :manner gradual ) :op2 ( quote-01 :arg0 emotions :arg2 ( ground :arg1-of lose-02 ) :degree full ) :arg1-of practice-01
hug :polarity - :mode imperative :arg0 you :arg1 i :mod just
support-01 :arg0 ( person :arg0-of study-01 :mod school ) :arg1 ( burners :arg1 bunsen ) :location ( throughout :op1 ( country :mod whole ) ) :location ( country :mod whole )
pobezhdavshaya :arg0 person_name_0 :arg1 ( person_name_1 :arg0-of ( have-org-role-91 :arg2 gold ) ) :time ( early :degree more :mod world :mod final ) :mod again :mod again
-lrb- :arg1 ( -lrb- :mod script ) :arg2 ( find-01 :arg1 ( phone :poss i ) )
and :op1 ( propose-01 :arg0 telecommunication :arg1 ( budget-01 :arg0 ( person :quant num_0 :mod federal ) :arg1 ( monetary-quantity monetary-quantity_num_0 :unit dollar ) :arg2 ( volume-quantity volume-quantity_num_1 :unit gallon ) ) ) :op2 ( proposed :arg0 organization_name_0 :arg1 ( rate-entity-91 :arg1 ( monetary-quantity monetary-quantity_num_1 :unit dollar ) :arg2 ( volume-quantity volume-quantity_num_1 :unit gallon ) ) )
contrast-01
appoint-01 :arg1 ( person_name_0 :arg0-of ( have-org-role-91 :arg1 ( directorate :mod region :mod fund-01 ) :arg2 chief ) ) :location peninsula_name_1 :time ( until :op1 ( date-entity year_date-entity_0 month_date-entity_0 ) )
publish-01 :arg1 ( study :arg1-of ( finance-01 :arg0 organization_name_0 :arg2 ( cancer :mod conquered ) ) ) :time today :location ( journal :mod medicine :poss country_name_1 )
contrast-01 :arg1 ( have-03 :arg0 we :arg1 ( program :arg1-of special-02 :topic ( and :op1 girl :op2 ( woman :mod young ) ) ) :time now ) :arg2 ( nothing :beneficiary boy :mod almost )
sky :mod peaceful :location ( over :op1 country_name_0 )
contrast-01 )
say-01 :arg0 person_name_0 :arg1 ( and :op1 ( serve-01 :arg0 ( and :op1 ( person :quant ( at-least :op1 num_0 ) :arg1-of black-05 ) :op2 ( man :quant ( at-least :op1 num_2 ) ) ) :arg1 ( man :mod white ) :time ( before :op1 now :quant ( between :op1 ( temporal-quantity temporal-quantity_num_0 :unit year ) :op2 ( temporal-quantity temporal-quantity_num_2 :unit year ) ) ) ) :op2 ( serve-01 :arg0 person :arg2 ( woman :mod white ) :time ( always :mod almost ) ) )
cause-01 :arg0 ( know-01 :arg0 you ) :arg1 ( save-02 :arg1 ( thing :arg1-of import-01 :mod ( big :degree most ) ) :arg2 ( percentage-entity percentage-entity_num_0 ) :arg4 ( percentage-entity percentage-entity_num_0 ) )
multi-sentence :snt1 ( surprise-01 :arg0 ( call-01 :arg1 ( person :arg1-of imprison-01 ) :arg2 ( person :arg1-of imprison-01 ) ) :time now ) :snt2 ( and :op1 ( turn-01 :mode interrogative :arg0 terrorist :arg1 they :manner good ) :op2 ( give-01 :arg0 terrorist :arg1 food :arg2 they :mod well ) )
have-03 :arg0 i :arg1 ( motivation :mod huge :purpose ( reach-01 :arg0 i :arg1 ( level :mod new ) ) ) :time ( after :op1 disappoint-01 )
associate-01 :arg1 ( story :ord ( ordinal-entity ordinal-entity_num_0 ) ) :arg2 ( fact :topic ( and :op1 ( averse :polarity - :arg0 ( company :mod country_name_0 :quant many ) :arg1 ( establish-01 :arg0 company :arg1 produce-01 :location country :source ( country_name_1 :mod ( material :mod raw ) ) ) ) :op2 ( focus-01 :arg0 company :arg2 ( market :mod raw ) ) ) )
embedded :arg0 ( picture :poss country_name_0 ) :arg1 she :arg2 ( reconstruct-01 :arg1 person ) :time ( try-01 :arg0 ( person :quant num_0 ) :arg1 ( get-05 :arg1 person :arg2 gym :time ( after :op1 ( explode-01 :arg1-of explode-01 :arg1-of explode-01 ) ) ) )
and :op1 ( exceed-01 :arg0 ( cost-01 :arg1 ( person :arg0-of study-01 :quant many ) :arg2 ( rate-entity-91 :arg1 ( monetary-quantity monetary-quantity_num_0 :unit dollar ) :arg2 ( temporal-quantity temporal-quantity_num_1 :unit year ) ) ) :arg1 ( rate-entity-91 :arg1 ( monetary-quantity monetary-quantity_num_2 :unit dollar ) :arg2 ( temporal-quantity temporal-quantity_num_1 :unit year ) ) ) :op2 ( accelerate-01 :arg0 person_name_0 :arg1 ( method :mod sly :purpose ( reduce-01 :arg1 ( monetary-quantity :arg1-of expend-01 ) ) ) :time soon )
argue-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg3 judge-01 ) :quant some ) :arg1 ( truth :mod some :prep-in ( predict-01 :arg0 he :arg1-of dark-02 ) :domain ( person :arg0-of ( have-org-role-91 :arg3 judge-01 ) ) )
multi-sentence :snt1 ( consist-01 :arg1 ( thing :arg0-of ( cause-01 :arg1 ( feel-01 :arg0 we :arg1 ( consequence :arg0-of kill-01 ) :time now ) ) ) :arg2 ( and :op1 ( law :mod ( type :quant num_0 ) ) :op2 ( asbestos :mod ( type :quant num_0 ) ) :time eventual ) ) :snt2 ( leave-11 :arg0 law :time ( after :op1 now :quant ( many :op1 ( temporal-quantity temporal-quantity_num_0 :unit year ) ) ) )
and :op1 ( study-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg1 university_name_0 :arg2 university_name_0 ) ) :arg1 ( mixing :mod turbulent ) ) :op2 ( affect-01 :arg0 person :arg1 ( homogeneity :mod chemical :location ( cluster :mod stellar ) ) )
know-01 :polarity - :arg1 ( thing :arg1-of ( know-01 :polarity - ) )
contrast-01
participate-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg1 ( person :arg0-of ( have-org-role-91 :arg1 country_name_0 :arg2 capital ) ) :arg2 mayor ) ) :arg1 ( ceremony :topic ( start-01 :arg0 ( and :op1 ( ring :mod central :part-of city_name_1 ) :op2 ( ring :name ( name :op1 tskad :op2 tskad :op3 tskad ) ) ) :ord ( ordinal-entity ordinal-entity_num_0 ) ) ) :time ( ceremony :time ( date-entity month_date-entity_0 day_date-entity_0 ) )
say-01 :arg0 he :arg1 ( dragged :arg0 ( thing :arg1-of ( report-01 :arg0 you ) ) :arg1 ( thing :arg1-of ( report-01 :arg0 you ) ) )
and :op1 ( create-01 :arg0 ( raise-01 :arg1 ( standard :mod live-01 :mod millions ) ) :arg1 ( market :beneficiary industry ) ) :op2 ( lifted :arg0 union :arg1 ( nation :mod whole ) :arg2 ( level :mod fragile :mod produce-01 ) )
introduce-02 :arg0 ( organization_name_0 :mod state ) :arg1 ( bill :arg0-of ( move-01 :arg1 ( date :mod enter-01 ) :arg2 force-04 ) ) :time already :time ( date-interval :op1 ( date-entity day_date-entity_0 month_date-entity_0 year_date-entity_0 ) :op2 ( date-entity year_date-entity_1 month_date-entity_1 day_date-entity_1 ) ) :location ( brief-01 :arg1 organization )
and :op1 ( remember-01 :polarity - :li num_0 :arg1 ( anything :topic seize-01 ) :time now ) :op2 ( say-01 :arg0 i :arg1 ( and :op1 ( have-03 :arg0 ( person :arg1-of ( include-91 :arg2 person ) ) :arg1 ( anything :topic seize-01 ) ) :op2 ( blossomed :arg0 person :arg1 ( girl :mod ( little :degree most ) ) ) ) )
have-03 :arg0 ( and :op1 person_name_0 :op2 ( person :arg0-of smoke-02 :mod vitorgan ) ) :arg1 person_name_1
think-01 :arg0 ( person_name_0 :arg0-of ( have-org-role-91 :arg1 country_name_1 :arg2 ( minister :mod prime ) ) ) :arg1 ( recommend-01 :arg1 ( learn-01 :arg0 ( and :op1 ( person :arg0-of ( have-org-role-91 :arg2 ( minister :mod prime ) ) ) :op2 ( person :arg0-of ( have-org-role-91 :arg2 ( minister :mod prime ) ) ) ) :arg1 ( technology :mod new ) :purpose ( build-01 :arg0 country :arg1 ( person :arg0-of ( buy-01 :arg1 cheese ) ) ) ) :prep-in ( condition-01 :arg1 embargo-01 ) )
bring-up-02 :arg0 person_name_0 :arg1 ( number :quant-of ( person :arg0-of ( win-01 :arg1 ( tube :mod main ) :location peninsula_name_1 ) ) ) :arg4 ( rate-entity-91 :arg1 ( monetary-quantity monetary-quantity_num_1 :unit dollar :mod total ) :arg2 ( temporal-quantity temporal-quantity_num_2 :unit year ) )
multi-sentence :snt1 ( and :op2 ( give-01 :mode imperative :arg0 you :arg1 ( example :mod this ) :arg2 ( obligate-01 :arg1 ( specify-01 :polarity - :arg1 ( thing :arg2-of ( result-01 :arg1 ( thing :arg2-of ( result-01 :arg1 ( thing :arg2-of ( result-01 :arg1 ( thing :arg2-of ( result-01 :arg1 ( thing :arg2-of ( result-01 :arg1 ( thing :arg2-of ( result-01 :arg1 ( thing :arg2-of ( result-01 :arg1 ( thing :arg2-of ( result-01 :arg1 ( or :op1 '' :op2 ( thing :arg2-of ( equal-01 :arg1 ( '' :name ( name :op1 '' :op2 '' :op3 '' ) ) ) ) :op4 ( '' :name ( name :op1 '' ) ) :op5 et-cetera ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) :snt2 ( and :op1 ( possible-01 :arg1 ( have-03 :arg0 ( '' :name ( name :op1 '' :op2 '' :op3 '' ) ) :arg1 ( possible-01 :arg1 '' ) ) :op2 ( possible-01 :arg1 ( have-03 :arg0 ( '' :name ( name :op1 '' ) ) :arg1 ( may :mod '' ) :time ( before :op1 ( and :op1 ( high-02 :arg1 '' :degree more ) :op2 ( higher :arg1 '' ) ) ) ) ) ) :op3 et-cetera )
want-01 :arg0 i :arg1 ( watch-01 :arg0 i :arg1 cricket )
contrast-01 :arg1 ( set :quant ( just :op1 num_0 ) :mod just ) :arg2 ( limit-01 :arg1 ( bronze :quant ( between :op1 num_0 :op2 num_1 ) ) :arg2 ( bronze :quant num_1 :location ( tournament :poss man ) ) :arg4 ( value-interval :op1 num_0 :op2 num_2 ) )
possible-01 :polarity - :arg1 ( jeopardize :arg0 you :arg1 ( livelihood :poss we ) )
collect-01 :arg0 state_name_0 :arg1 ( monetary-quantity monetary-quantity_num_0 :unit dollar ) :arg2 ( revenue :mod ( tax-01 :arg3 income ) :poss corporation ) :location region
and :op1 ( win-01 :arg0 ( and :op1 ( person :arg0-of ( speak-01 :arg3 ( day :ord ( ordinal-entity ordinal-entity_num_0 ) ) ) ) :op2 ( person :arg0-of ( speak-01 :arg3 ( day :ord ( ordinal-entity ordinal-entity_num_0 ) ) ) ) ) :arg1 ( bronze :arg1 man ) ) :op2 ( speak-01 :arg0 ( person_name_0 :arg0-of ( speak-01 :arg3 ( over :op1 ( mass-quantity mass-quantity_num_1 :unit kilogram ) ) ) ) )
read-01 :mode imperative :arg0 you :arg1 ( and :op1 ( material :mod other ) :op2 news :op3 statistic ) :time summer
and :op1 ( dig :arg0 they :arg1 trench ) :op2 ( build-01 :arg0 they :arg1 ( and :op1 roadblocks :op2 roadblocks ) )
have-concession-91 :arg1 ( possible-01 :arg1 ( purchase-01 :arg1 ( thing :arg2-of copy-01 :mod new ) :arg3 ( rate-entity-91 :arg1 ( monetary-quantity monetary-quantity_num_0 :unit dollar ) :arg2 ( website :mod location_name_3 ) ) ) ) :arg2 ( possible-01 :arg1 ( purchase-01 :arg1 ( thing :arg2-of copy-01 :mod new ) :arg3 ( rate-entity-91 :arg1 ( monetary-quantity monetary-quantity_num_1 :unit dollar ) :arg2 ( website :mod location_name_3 ) :arg0-of ( sell-01 :arg1 textbooks ) ) ) )
hope-01 :arg0 ( person :mod country_name_0 :mod rock :arg0-of ( bring-01 :arg1 rock :arg2 club :arg1-of direct-02 ) ) :arg1 ( person :mod rock :mod rock :arg0-of ( bring-01 :arg1 rock :arg2 club :arg1-of direct-02 ) )
and :op1 ( create-01 :arg0 ( raise-01 :arg1 ( standard :mod live-01 :mod millions ) ) :arg1 ( market :beneficiary industry ) ) :op2 ( lifted :arg0 union :arg1 ( nation :mod whole ) :purpose ( do-02 :arg0 nation :arg1 ( level :mod produce-01 ) ) )
suspend-01 :arg1 ( action :mod ( license-01 :arg1 madrassa ) ) :time ( date-entity month_date-entity_0 year_date-entity_0 )
contrast-01 :arg1 ( tell-01 :arg0 woman :arg1 ( run-02 :arg0 woman :arg1-of hard-02 ) :arg2 i ) :arg2 ( possible-01 :polarity - :arg1 ( '' :arg0 i :time then ) )
help-01 :arg0 person_name_0 :prep-as ( help-01 :arg0 person )
multi-sentence :snt1 ( appreciate-02 :arg0 i :arg1 ( god :arg1-of ( return-01 :arg4 i ) ) :degree so ) :snt2 ( lie-07 :arg1 ( here :location ( here :location location_name_0 ) ) :arg2 each )
contrast-01 :arg1 ( adult :domain person_name_0 :time now ) :arg2 ( have-03 :arg0 ( publication :mod this ) :arg1 it :mod still )
reject-01 :arg0 ( company :arg0-of ( reject-01 :arg1 ( commentaries :mod any ) ) ) :arg1 this
note-01 :arg0 ( report :mod goddard ) :arg1 ( rule-03 :polarity - :arg0 ( situation :arg1-of ( accord-02 :arg2 ( rule :arg1-of differ-02 ) ) ) :arg1 situation )
cause-01 :arg0 ( possible-01 :polarity - :arg1 ( run-01 :arg0 we :arg1 ( mechanism :mod ( substitution :arg1-of import-01 ) ) ) ) :arg1 ( continue-01 :arg0 we :arg1 ( bear-01 :arg0 we :arg1 ( risk-01 :arg1 ( component :arg1-of rise-01 :arg1-of rise-01 ) ) ) ) :time ( stage :mod this )
name-01 :arg1 ( nobody :quant num_0 )
contrast-01 :arg1 ( be-located-at-91 :arg1 complain-01 :arg2 ( protect-01 :arg1 state ) ) :arg2 ( and :op1 ( release-01 :polarity - :arg1 ( content :poss it ) :duration ( multiple :op1 ( temporal-quantity temporal-quantity_num_0 :unit decade ) ) ) :op2 ( feel-01 :arg0 we :arg1 ( experiment-01 :arg1-of ( forget-01 :arg0 authority :manner simple ) ) ) )
power-01 :mode interrogative :arg0 ( and :op1 power :op2 brother )
say-01 :arg0 i :arg1 ( want-01 :polarity - :arg0 i :arg1 ( talk-01 :arg0 i :arg2 ( man :arg0-of ( bring-01 :arg1 we :arg2 we ) ) ) :mod even )
say-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg1 location_name_0 :arg2 official ) ) :arg1 ( punish-01 :polarity - :arg0 person :arg1 ( doctor :arg0-of ( make-01 :arg1 abortions ) ) :time ( until :op1 ( state-01 :arg0 person :arg1 ( and :op1 ( person :arg0-of ( have-org-role-91 :arg2 authority ) ) :op2 ( person :arg0-of ( have-org-role-91 :arg2 authority ) ) ) ) ) :time ( until :op1 ( state-01 :arg0 person :arg1 ( thing :arg2-of solve-01 ) ) ) )
state-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg1 ( person_name_0 :arg0-of ( have-org-role-91 :arg2 twitch ) ) :arg2 ceo ) ) :arg1 ( choose-01 :arg0 person :arg1 organization_name_1 :arg1-of ( cause-01 :arg0 ( and :op1 ( believe-01 :arg0 person :arg1 ( community :poss we ) ) :op2 ( share-01 :arg0 person :arg1 ( and :op1 ( value :poss we ) :op2 ( goal :arg1-of long-03 ) ) ) ) ) :arg1-of ( cause-01 :arg0 ( and :op1 ( believe-01 :arg0 person :arg1 ( community :poss we ) ) :op2 ( share-01 :arg0 person :arg1 ( and :op1 ( value :poss we ) :op2 ( goal :arg1-of long-03 ) ) ) ) ) )
announce-01 :arg0 ( government-organization :arg0-of ( govern-01 :arg1 country_name_0 ) ) :arg1 ( expand-01 :arg1 ( thing :arg2-of ( sanction-02 :arg1 country ) ) :arg3 ( and :op1 ( field :mod defend-01 ) :op2 finance :op3 ( industry :mod oil ) :op4 ( industry :mod gas ) ) ) :mod also
and :op1 ( get-05 :arg1 i :arg2 up ) :op2 ( be-located-at-91 :arg1 i :arg2 inside :purpose ( find-01 :arg0 i :arg1 ( person :arg0-of ( have-rel-role-91 :arg1 he :arg2 mother ) ) ) )
contrast-01 :arg1 ( and :op1 ( tell-01 :arg0 he :arg2 ( person :arg0-of ( head-01 :arg1 ( organization_name_0 :mod construct-01 ) ) ) :time ( before :op1 now :quant ( long :arg1-of long-03 ) ) ) :op2 ( person_name_1 :arg1 regulate-01 :time ( before :op1 now :quant long ) ) ) :arg2 ( have-03 :arg0 ( business :mod another ) :arg1 ( business :mod another ) :time ( until :op1 offer-01 ) )
appoint-01 :arg0 ( person_name_0 :mod royal :arg1-of ( appoint-01 :arg0 court ) ) :arg1 ( lawyer :mod royal ) :arg2 lawyer
quoted :polarity - :arg0 ( thing :arg1-of ( decide-01 :arg0 ( person_name_0 :arg0-of ( have-org-role-91 :arg1 ( person_name_1 :arg0-of ( have-org-role-91 :arg2 mr. ) ) :arg2 mr. ) ) ) ) :arg1 ( '' :name ( name :op1 novosti :op2 novosti :op3 novosti ) )
say-01 :arg0 he :arg1 ( plan-01 :arg1 ( upgrade-02 :arg0 ( refinery :mod oil :location location_name_0 ) ) )
appeal-02 :arg0 person_name_0 :arg1 ( meet-03 :arg0 ( person :arg0-of ( lead-02 :arg1 organization_name_1 ) ) :location city_name_2 ) :arg2 ( call-03 :arg0 person :arg1 ( measure-02 :arg0 person :arg1 ( prevent-01 :arg0 person :arg1 ( aggression :mod further :prep-against country_name_3 ) :arg2 ( person :arg0-of ( depend-01 :polarity - ) :arg0-of ( depend-01 :polarity - ) ) :time ( year :mod 23 ) ) ) ) :location city_name_2
and :op1 ( old :degree more :domain i :time now ) :op2 ( say-01 :arg0 they :arg1 ( obligate-01 :arg1 child :arg2 ( say-01 :arg0 child :arg1 ( true :polarity - :domain this ) :arg1-of easy-05 ) ) )
possible-01 :arg1 ( wait-01 :arg1 everything :time now )
cause-01 :arg0 ( realize-01 :arg0 he :arg1 ( have-03 :polarity - :arg0 he :arg1 ( and :op1 ( knowledge :quant enough ) :op2 skill ) :purpose ( cover-01 :arg0 he :arg1 ( history :poss region ) ) ) ) :arg1 ( begin-01 :arg0 he :arg1 ( collect-01 :arg0 he :arg1 material :purpose ( game :mod game ) ) )
democrat :mod ( drunk :degree most ) :location state_name_0 :domain i
and :op1 ( car :quant num_0 :domain ( car :poss i ) ) :op2 ( car :quant num_1 :mod only :domain car ) :time end-01
case :arg2-of criminal-03 :location ( location_name_0 :location court )
place :mod right :domain you :mod much
say-01 :arg0 he :arg1 ( obligate-01 :arg2 ( begin-01 :arg0 we :arg1 ( and :op1 ( talk-01 :mod substantive ) :op2 ( issue-02 :mod technical :mod ( only :polarity - ) ) ) :time immediate :location ( and :op1 ( organization :mod politics :mod society ) :op2 ( status :mod nation :poss location_name_0 ) ) :purpose ( serve-01 :arg0 we :arg1 ( interest :poss ( person :arg0-of live-01 ) ) ) ) )
' :arg0 ( and :op1 ( person :arg0-of ( own-01 :arg1 ( and :op1 ( person :arg0-of ( own-01 :arg1 location_name_0 ) ) :op2 ( person :arg0-of ( own-01 :arg1 location_name_0 ) ) ) :location ( house :poss ( person_name_1 :arg0-of ( have-rel-role-91 :arg1 person :arg2 son ) ) ) ) ) :op2 ( person :arg0-of ( have-rel-role-91 :arg1 person :arg2 son ) ) :location ( along :op1 street ) ) :arg1 ( apartments :quant num_1 :mod -rrb- ) :time former
schedule-01 :arg1 ( and :op1 ( session :mod ( person :arg0-of ( have-org-role-91 :arg2 ( person :arg1-of ( expert-01 :arg2 work-01 ) ) ) ) :arg3 ( temporal-quantity temporal-quantity_num_0 :unit year ) ) :op2 ( list :mod final :consist-of indicators ) ) :arg2 ( assess-01 :arg0 session :arg1 ( perform-01 :arg1 ( organization :mod science ) ) ) :time ( meet-03 :ord ( ordinal-entity ordinal-entity_num_0 ) )
multi-sentence :snt1 ( contrast-01 :mode interrogative :arg2 ( possible-01 :mode interrogative :arg1 ( cease-01 :arg0 i :arg1 ( recall-02 :arg0 i :arg1 ( recall-02 :arg0 i :arg1 he ) ) ) ) ) :snt2 ( say-01 :arg0 he :time yesterday ) :snt3 ( say-01 :arg0 he :time yesterday )
byline-91 :arg2 person_name_0
and :op1 ( men :arg0 ( man :arg1-of ( same-01 :arg2 ( and :op1 ( person :arg0-of smuggle-01 ) :op2 ( person :arg0-of smuggle-01 ) :op3 ( person :arg0-of smuggle-01 ) ) ) ) :arg1 ( fury :source pub :destination pub ) ) :op2 ( refuse-01 :arg0 ( person :arg0-of smuggle-01 ) :arg1 ( raise-03 :arg0 person :arg1 hand ) ) :op3 ( refuse-01 :arg0 person :arg1 ( or :op1 ( raise-03 :arg0 person :arg1 hand ) :op2 ( upset-01 :arg0 person :arg1 woman ) ) ) :time ( after :op1 that )
say-01 :arg0 bill :arg1 ( recommend-01 :arg1 ( good-04 :arg1 ( product :arg1-of ( produce-01 :arg1-of local-02 ) :quant ( at-least :op1 num_0 ) ) :arg2 ( good :mod ( kind :mod each ) ) ) ) :arg2 bill
look-01 :arg0 he :arg1 they :mod again
multi-sentence :snt1 ( report-01 :mode interrogative :arg0 you ) :snt2 ( give-01 :arg1 ( action :ord ( ordinal-entity ordinal-entity_num_0 ) ) :arg2 ( date-entity month_date-entity_0 day_date-entity_0 ) )
union-02 :arg1 union-02 :arg2 ( union-02 :arg1 union-02 :arg2 union-02 )
announce-01 :arg1 ( thing :arg1-of ( intend-01 :arg0 they ) ) :arg1-of public-02 :time ( year :mod this ) :arg1-of public-02
thing :arg0-of detail-01 :arg0-of detail-01 :location ( photo :topic ( room :arg1-of ( guide-01 :arg2 ( head :part-of ( head :part-of ( head :part-of ( head :part-of ( head :arg1-of ( base-01 :location sofa ) ) ) ) ) ) ) ) )
obligate-01 :arg2 ( bring-01 :arg1 he :arg2 ( before :op1 ( court :mod world ) ) :time ( date-entity month_date-entity_0 day_date-entity_0 ) )
and :op1 ( docile :domain society ) :op2 ( mean-01 :arg1 this :arg2 ( agree-01 :arg0 everyone :arg1 ( and :op1 ( person :arg0-of ( own-01 :arg1 he ) ) :op2 ( person :arg0-of ( have-org-role-91 :arg2 head-of-state ) ) ) :arg2 ( serious-01 :arg1 person :arg2 ( destiny :poss group ) ) ) )
say-01 :arg0 person_name_0 :arg1 ( take-01 :arg0 person :arg1 ( thing :arg1-of decide-01 :mod this ) :time ( until :op1 early ) )
suppose-01 :arg0 ( government-organization_name_0 :mod this ) :arg1 ( cause-01 :arg0 amr-unknown :arg1 ( have-03 :arg0 meat :arg1 ( flavor :mod extraordinary :mod such ) ) :manner exclusive-02 )
(-(
cause-01 :arg0 ( visit-01 :polarity - :arg0 ( person :quant many :arg1-of ( include-91 :arg2 person ) ) )
find-02 :arg0 ( scientist :arg0-of ( have-org-role-91 :arg2 scientist ) ) :arg1 ( experience-01 :arg0 scientist :arg1 ( accuracy :mod this ) :purpose ( conduct-01 :arg1 dispute-01 :time conflict-01 ) ) :prep-as ( part :part-of ( project :topic ( research-01 :arg1 ( nature :mod anger-01 ) ) :arg1-of major-02 :topic ( nature :poss anger-01 ) ) )
break-01 :arg0 ( person :arg0-of hack-04 ) :arg1 ( passwords :mod ( weak :degree more ) ) :location ( smartphones :name ( name :op1 icloud ) ) :time ( after :op1 ( appear-01 :arg1 ( picture :poss person :mod intimate ) :location ( website :poss person_name_0 ) ) )
kill-01 :arg0 ( officer :mod police :location ( person_name_0 :location state_name_1 ) ) :arg1 ( teenager :arg1-of ( arm-01 :polarity - ) ) :time ( early :op1 ( month :mod this ) :degree more )
say-01 :arg0 she :arg1 ( think-01 :polarity - :arg0 i :arg1 ( and :op1 ( talk-01 :arg0 ( person :quant lot :arg0-of ( talk-01 :arg1 ( skin :mod white ) ) ) :arg2 ( level :arg1-of ( high-02 :degree such ) ) ) :op2 ( thing :arg1-of ( say-01 :arg0 she ) ) ) ) :location feminist
keep-04 :arg0 ( person :arg0-of ( have-org-role-91 :arg1 ( person_name_0 :arg0-of fund-01 ) :arg2 ( chief :mod deputy ) ) ) :arg1 post :mod only
crash-01 :arg0 he :arg1 ( plane :arg1-of private-03 ) :location location_name_0
multi-sentence :snt1 ( consider-01 :arg0 ( government-organization :arg0-of ( govern-01 :arg1 location_name_0 ) ) :arg1 ( introduce-02 :arg0 government-organization :arg1 ( zone :arg1-of ( pay-01 :arg3 ( method :instrument-of struggle-01 ) ) ) ) ) :snt2 ( refer-01 :arg0 ( refer-01 :arg1 ( person :arg0-of ( have-org-role-91 :arg1 city_name_1 :arg2 ( mayor :mod deputy ) ) ) :arg2 ( person :arg0-of ( have-org-role-91 :arg1 city_name_1 :arg2 ( mayor :mod deputy ) ) ) ) :arg1 ( person :arg0-of ( have-org-role-91 :arg1 city :arg2 ( mayor :mod deputy ) ) ) :manner ( refer-01 :arg0 person :arg1 ( person :arg0-of ( have-org-role-91 :arg1 city :arg2 ( mayor :mod deputy ) ) ) ) )
thing :manner-of remove-01
require-01 :arg0 ( and :op1 ( committee :arg0-of ( have-org-role-91 :arg1 ( committee :mod executive ) :arg2 ( committee :mod executive ) ) ) :op2 ( safe-01 :arg1 ( and :op1 health :op2 safe-01 ) :location country_name_0 ) ) :arg1 ( license-01 :arg1 ( license-01 :arg1 ( work-01 :arg0 all ) ) )
say-01 :arg0 rule :arg1 ( obligate-01 :arg1 she :arg2 ( obtain-01 :arg0 she :arg1 ( permit-01 :arg1 ( committee :mod olympic :poss country_name_1 ) :arg1-of special-02 ) ) ) :arg1-of ( say-01 :arg0 rule )
say-01 :arg1 ( hugged :polarity - :arg0 ( person :arg0-of ( have-rel-role-91 :arg1 i :arg2 father ) ) :arg1 i :time ever ) :arg2 person_name_0
multi-sentence :snt1 ( cause-01 :arg0 ( cost-01 :arg1 ( vehicle :mod electric ) :arg1-of high-02 ) :arg1 ( low-04 :arg1 demand-01 :arg1-of ( cause-01 :arg0 ( cost-01 :arg1 ( vehicle :mod electric ) :arg2 ( monetary-quantity :arg2-of ( cost-01 :arg1 ( vehicle :mod electric ) :arg1-of high-02 ) ) :arg1-of high-02 ) ) ) ) :snt2 ( person_name_1 :arg0-of ( have-org-role-91 :arg1 organization :arg3 ( lead-02 :arg0 person ) ) )
bring-01 :arg0 ( and :op1 ( manage-01 :arg0 city_name_0 :arg1 ( person :arg0-of ( manage-01 :arg1 ( organization_name_1 :part-of ( organization_name_1 :mod country_name_2 ) ) ) ) ) :op2 ( person :arg0-of ( have-org-role-91 :arg1 organization :arg3 manage-01 ) ) :op3 ( person :arg0-of ( have-org-role-91 :arg1 organization :arg3 manage-01 ) ) :op4 ( person :arg0-of ( have-org-role-91 :arg1 organization :arg3 manage-01 ) ) :op5 ( person :arg0-of ( have-org-role-91 :arg1 organization :arg3 manage-01 ) ) :op6 ( person :arg0-of ( have-org-role-91 :arg1 organization :arg3 manage-01 ) ) :op6 ( person :arg0-of ( have-org-role-91 :arg1 organization :arg3 manage-01 ) ) :op6 ( person :arg0-of ( have-org-role-91 :arg1 organization :arg3 manage-01 ) ) :op6 ( person :arg0-of ( have-org-role-91 :arg1 organization :arg3 manage-01 ) ) :op6 ( person :arg0-of ( have-org-role-91 :arg1 organization :arg3 manage-01 ) ) :op6 ( person :arg0-of ( have-org-role-91 :arg1 organization :arg3 manage-01 ) ) :op6 ( person :arg0-of ( have-org-role-91 :arg1 organization :arg3 manage-01 ) ) :op6 ( person :arg0-of ( have-org-role-91 :arg1 organization :arg3 manage-01 ) ) :op6 ( person :arg0-of ( have-org-role-91 :arg1 organization :arg3 manage-01 ) ) :op6 ( person :arg0-of ( have-org-role-91 :arg1 organization :arg3 manage-01 ) ) :op6 ( person :arg0-of ( have-org-role-91 :arg1 organization :arg3 manage-01 ) ) :op6 ( person :arg0-of ( have-org-role-91 :arg1 organization :arg3 manage-01 ) ) :op6 ( person :arg0-of ( have-org-role-91 :arg1 organization :arg3 manage-01 ) ) :op6 ( person :arg0-of ( have-org-role-91 :arg1 organization :arg3 manage-01 ) ) :op6 ( person :arg0-of ( have-org-role-91 :arg1 organization :arg3 manage-01 ) ) :op6 ( person :arg0-of ( have-org-role-91 :arg1 organization :arg3 manage-01 ) ) :op6 ( person :arg0-of ( have-org-role-91 :arg1 organization :arg3 manage-01 ) ) :op7 ( person :arg0-of ( have-org-role-91 :arg1 department ) ) ) :arg1 ( message :topic department ) :time ( date-entity day_date-entity_0 month_date-entity_0 year_date-entity_0 )
seem-01 :arg1 ( something :arg1-of ( resemble-01 :arg2 ( evil :mod extreme :quant ( degree :mod extreme ) ) ) ) :time ( start-01 :arg1 ( and :op1 terrorist :op2 ( person :mod religious-group_name_0 ) :op3 ( person :arg0-of ( have-rel-role-91 :arg1 person :arg2 parent ) ) :op4 ( person :arg0-of ( have-rel-role-91 :arg1 person :arg2 parent ) ) :op5 ( person :arg0-of ( have-rel-role-91 :arg1 person :arg2 parent ) ) ) ) :time ( start-01 :arg1 ( percentage-entity percentage-entity_num_0 ) )
say-01 :arg0 ( measure-02 :mod this ) :arg1 ( obligate-01 :arg2 ( have-03 :arg0 ( doctor :arg0-of ( have-03 :arg1 abortions ) ) :arg1 authority :purpose ( receive-01 :arg0 doctor :arg1 ( person :arg0-of ( have-rel-role-91 :arg1 doctor :arg2 patient ) ) :arg2 ( person :arg0-of ( have-rel-role-91 :arg1 doctor :arg2 patient ) ) :location hospital :time ( after :op1 now :quant ( up-to :op1 ( multiple :op1 ( distance-quantity distance-quantity_num_0 :unit mile ) ) ) ) ) ) )
likely-01 :arg1 ( fall-01 :arg1 ( level :arg1-of target-01 :mod ( person :arg0-of consume-01 ) :quant ( percentage-entity percentage-entity_num_0 ) ) :location country_name_0 ) :arg1-of ( cause-01 :arg0 ( have-03 :arg0 country_name_1 :arg1 ( save-01 :arg0 country :mod finance :quant more ) ) )
person :arg0-of ( farm-01 :arg2 ( person :arg0-of farm-01 :mod continent_name_0 ) )
give-01 :arg0 ( and :op1 ( person :arg0-of ( have-org-role-91 :arg1 country_name_0 :arg2 diplomat ) ) :op2 ( person :arg0-of ( have-org-role-91 :arg1 country_name_1 :arg2 diplomat ) ) ) :arg1 ( government-organization :arg0-of ( govern-01 :arg1 region ) ) :arg2 ( and :op1 ( agree-01 :arg1 trade-01 ) :op2 ( policy :mod foreign ) ) :purpose ( and :op1 ( agree-01 :arg1 trade-01 ) :op2 ( policy :mod foreign ) ) :arg1-of ( cause-01 :arg0 ( give-01 :arg0 ( and :op1 ( government-organization :arg0-of ( govern-01 :arg1 country ) ) :op2 ( government-organization :arg0-of ( govern-01 :arg1 country ) ) ) :arg1 ( and :op1 ( agree-01 :arg1 trade-01 ) :op2 ( policy :mod foreign ) ) ) :arg2 ( government-organization :arg0-of ( govern-01 :arg1 region ) ) :mod essential )
head :mode interrogative
and :op1 person_name_0 :op2 ( person_name_1 :arg0-of ( have-org-role-91 :arg2 breakfast ) )
contrast-01 :arg1 ( speak-01 :polarity - :arg0 she :arg1 it :arg2 ( life :location ( world-region_name_0 :mod cold ) ) ) :arg2 ( doubt-01 :polarity - :arg0 she :arg1 ( resemble-01 :arg1 it :arg2 ( resemble-01 :arg1 it :arg2 ( resemble-01 :arg2 it ) :mod main ) ) )
important :degree most :domain ( place :location here )
and :op1 ( grow-01 :arg1 ( rate-entity-91 :arg1 ( under :op1 ( monetary-quantity monetary-quantity_num_0 :unit cent ) ) :arg2 ( temporal-quantity temporal-quantity_num_1 :unit year ) ) :arg4 ( rate-entity-91 :arg1 ( under :op1 ( monetary-quantity monetary-quantity_num_2 :unit cent ) ) :arg2 ( temporal-quantity temporal-quantity_num_2 :unit year ) ) :arg4 ( rate-entity-91 :arg1 ( under :op1 ( monetary-quantity monetary-quantity_num_2 :unit cent ) ) :arg2 ( temporal-quantity temporal-quantity_num_2 :unit year ) ) :arg4 ( rate-entity-91 :arg1 ( under :op1 ( monetary-quantity monetary-quantity_num_2 :unit cent ) ) :arg2 ( temporal-quantity temporal-quantity_num_2 :unit year ) ) ) :op2 ( raise-01 :arg0 ( kopecks :quant num_3 ) :arg1 ( data :poss ( exchange-01 :arg1 ( stock :mod city_name_0 ) ) ) )
question-01 :arg1 ( possible-01 :arg1 ( give-01 :arg0 he :arg1 ( answer-01 :mod partial ) :arg2 he ) :arg2-of ( fortunate-01 :polarity - ) )
require-01 :arg0 ( organization_name_0 :topic ( and :op1 health :op2 safe-01 :location country_name_1 ) ) :arg1 ( company :arg0-of ( work-01 :arg1 ( license-01 :arg1 and ) ) :quant all )
and :op1 ( go-02 :arg0 i :duration ( multiple :op1 ( temporal-quantity temporal-quantity_num_0 :unit minute ) ) :time ( before :op1 ( run-02 :arg0 terrorist :destination yard ) ) ) :op2 ( so :arg0 terrorist :arg1 ( boy :mod little :mod little ) :duration ( temporal-quantity temporal-quantity_num_3 :unit day ) ) :op3 ( recalled :arg0 she )
multi-sentence :snt1 ( possible-01 :arg1 ( talk-01 :arg0 you :arg1 ( and :op1 ( demand-01 :arg1 ( material :mod raw :mod domestic ) ) :op2 ( grow-01 :arg1 ( thing :arg2-of ( price-01 :arg1 ( thing :arg2-of ( price-01 :arg1 ( thing :arg2-of ( price-01 :arg1 ( thing :arg2-of ( price-01 :arg1 ( thing :arg2-of ( price-01 :arg1 ( thing :arg2-of ( price-01 :arg1 ( thing :arg2-of ( price-01 :arg1 ( thing :arg2-of ( price-01 :arg1 ( thing :arg2-of ( price-01 :arg1 ( thing :arg2-of ( price-01 :arg1 ( thing :arg2-of ( price-01 :arg1 ( thing :arg2-of ( price-01 :arg1 ( thing :arg2-of ( price-01 :arg1 ( thing :arg2-of ( price-01 :arg1 ( thing :arg2-of ( price-01 :arg1 ( thing :arg2-of ( price-01 :arg1 ( thing :arg2-of ( price-01 :arg1 ( thing :arg2-of ( price-01 :arg1 ( thing :arg2-of ( price-01 :arg1 ( thing :arg2-of ( price-01 :arg1 ( thing :arg2-of ( price-01 :arg1 ( thing :arg2-of ( price-01 :arg1 ( thing :arg2-of ( price-01 :arg1 ( thing :arg2-of ( price-01 :arg1 ( thing :arg2-of ( price-01 :arg1 ( thing :arg2-of ( price-01 :arg1 ( thing :arg2-of ( price-01 :arg1 ( thing :arg2-of ( price-01 :arg1 ( thing :arg2-of ( price-01 :arg1 ( thing :arg2-of ( price-01 :arg1 ( thing :arg2-of ( price-01 :arg1 ( thing :arg2-of ( price-01 :arg1 ( thing :arg2-of ( price-01 :arg1 ( thing :arg2-of ( price-01 :arg1 ( thing :arg2-of ( price-01 :arg1 ( thing :arg2-of ( price-01 :arg1 ( thing :arg2-of ( price-01 :arg1 ( thing :arg2-of ( price-01 :arg1 ( thing :arg2-of ( price-01 :arg1 ( thing :arg2-of ( price-01 :arg1 ( thing :arg2-of ( price-01 :arg1 ( thing :arg2-of ( price-01 :arg1 ( thing :arg2-of ( price-01 :arg1 ( thing :arg2-of ( price-01 :arg1 ( thing :arg2-of ( price-01 :arg1 ( thing :arg2-of ( price-01 :arg1 ( thing :arg2-of ( price-01 :arg1 ( thing :arg2-of ( price-01 :arg1 ( thing :arg2-of ( price-01 :arg1 ( thing :arg2-of ( price-01 :arg1 ( thing :arg2-of ( price-01 :arg1 ( thing :arg2-of ( price-01 :arg1 ( thing :arg2-of ( price-01 :arg1 ( thing :arg2-of ( price-01 :arg1 ( thing :arg2-of ( price-01 :arg1 ( thing :arg2-of ( price-01 :arg1 ( thing :arg2-of ( price-01 :arg1 ( thing :arg2-of ( price-01 :arg1 ( thing :arg2-of ( price-01 :arg1 ( thing :arg2-of ( price-01 :arg1 ( thing :arg2-of ( price-01 :arg1 ( thing :arg2-of ( price-01 :arg1 ( thing :arg2-of ( price-01 :arg1 ( thing :arg2-of ( price-01 :arg1 ( thing :arg2-of ( price-01 :arg1 ( thing :arg2-of ( price-01 :arg1 ( thing :arg2-of ( price-01 :arg1 ( thing :arg2-of ( price-01 :arg1 ( thing :arg2-of ( price-01 :arg1 ( thing :arg2-of ( price-01 :arg1 ( thing :arg2-of ( price-01 :arg1 ( thing :arg2-of ( price-01 :arg1 ( thing :arg2-of ( price-01 :arg1 ( thing :arg2-of ( price-01 :arg1 ( thing :arg2-of ( price-01 :arg1 ( thing :arg2-of ( price-01 :arg1 ( thing :arg2-of ( price-01 :arg1 ( thing :arg2-of ( price-01 :arg1 ( thing :arg2-of ( price-01 :arg1 ( thing :arg2-of
contrast-01 :arg1 ( possible-01 :arg1 ( take-01 :arg0 ( and :op1 ( situation :mod same ) :op2 ( product :mod other ) ) :arg1 ( niches :quant num_0 ) ) ) :arg2 ( case :polarity - :domain this )
record :mod ( attract-01 :arg0 ( volume :quant-of attract-01 ) :arg1 ( thing :arg2-of ( fund-01 :arg1 ( thing :arg2-of ( fund-01 :arg1 ( system :arg0-of ( pay-01 :arg1 ( monetary-quantity monetary-quantity_num_0 :unit ( dollar :mod country_name_0 ) ) ) ) :time initial ) ) ) ) ) :mod still :mod still
advise-01 :arg2 ( thing :arg2-of advise-01 ) :time ( visit-01 :arg0 ( firm :mod agrokompleks :part-of ( firm :mod agrokompleks ) ) )
play-11 :arg0 jazz :arg1-of ( have-concession-91 :arg2 ( prohibit-01 :polarity - :arg1 jazz :arg1-of explicit-03 ) )
explain-01 :arg0 person_name_0 :arg1 ( laziness :arg0 ( chef :mod chef ) :arg1 ( recipe :mod new ) :arg2 ( fish :mod ( east :mod far ) ) )
buy-01 :arg1 ( buy-01 :arg1-of use-01 )
give-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg2 ( hero :mod city-district_name_0 ) ) :quant many ) :arg1 ( and :op1 ( person :arg0-of ( have-org-role-91 :arg2 ( hero :mod city-district_name_0 ) ) ) :op2 ( person :arg0-of ( have-org-role-91 :arg1 ( and :op1 person_name_1 :op2 person_name_2 :op3 person_name_2 :op4 person_name_3 :op5 person_name_4 ) :arg2 ( and :op1 hulking :op2 spider-man ) ) ) ) :arg2 ( and :op1 ( person :arg0-of ( have-org-role-91 :arg2 city-district_name_0 ) ) :op2 ( person :arg0-of ( have-org-role-91 :arg2 spinach ) ) )
test-01 :arg0 ( bucket :consist-of ice :consist-of water ) :arg1 ( pain-01 :arg1 water )
say-01 :arg0 ( person_name_0 :arg0-of ( have-org-role-91 :arg1 madrassa :arg2 ceo ) ) :arg1 ( amount :quant-of ( amount :quant num_0 :mod ruble ) )
publish-01 :arg1 ( thing :arg1-of ( write-01 :arg0 ( person :mod atheist ) ) :arg1-of ( write-01 :arg0 rich ) ) :mod just :source ( account :poss i )
rule-01 :arg0 court :arg2 ( replace-01 :arg0 court :arg1 ( term :mod imprison-01 ) :arg2 ( term :duration ( temporal-quantity temporal-quantity_num_0 :unit year ) ) :source ( regime :mod general-02 ) ) :time ( date-entity month_date-entity_0 day_date-entity_0 )
continue-01 :arg1 ( '' :arg1 ( exchange-01 :arg1 ( stock :mod city_name_0 ) ) :arg1-of sharp-02 ) :time ( open-01 :arg1 ( exchange-01 :arg1 ( stock :location city ) ) ) :arg1-of sharp-02
acquire-01 :arg0 home :arg1 ( match-03 :mod proper :mod proper ) :time ( before :op1 now :quant ( multiple :op1 num_0 ) )
easy-05 :arg1 ( respond-01 :arg1 ( thing :arg2-of sanction-02 ) ) :mod also :arg1-of ( easy-05 :degree quite ) :mod also
say-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg1 organization_name_0 :arg2 midfielder ) ) :arg1 ( person_name_1 :arg0-of ( have-org-role-91 :arg1 organization :arg3 ( lead-02 :arg0 person ) ) ) :time ( season :mod upcoming ) :arg1-of ( say-01 :arg0 organization_name_3 )
and :op1 ( combine-01 :arg0 tragedy :arg1 ( and :op1 east :op2 world-region_name_0 ) :arg2 ( and :op1 east :op2 world-region_name_0 ) :time then ) :op2 ( hope-01 :arg0 tragedy :arg1 future :prep-under ( condition-01 :arg1 ( grief :mod heaviest ) ) )
multi-sentence :snt1 ( look-01 :mode imperative :arg0 you :arg1 ( wall :poss environmentalist ) ) :snt2 ( thick :domain they :degree ( distance-quantity distance-quantity_num_0 :unit meter ) )
have-concession-91 :arg1 ( easy-05 :polarity - :arg1 ( catch-up-04 :arg1 ( and :op1 ( company_name_0 :arg0-of ( rival-01 :arg1 country_name_1 ) ) :op2 ( company :arg0-of ( rival-01 :arg1 country ) :mod even :mod even ) ) ) :arg2 ( catch-up-04 :arg1 ( internet :poss country ) ) )
mention-01 :arg0 it :arg1 ( increase-01 :arg1 ( number :quant-of ( person :arg0-of live-01 :location ( area :mod ( area :polarity - ) ) ) ) :location ( in-front-of :op1 ( government-organization_name_0 :arg0-of ( live-01 :location ( in-front-of :op1 ( government-organization :arg0-of ( govern-01 :arg1 country_name_1 ) ) ) ) ) ) ) :arg1-of ( cause-01 :arg0 ( hinder-01 :arg0 popularity :arg1 ( threaten-01 :arg1 ( industry :mod ( garden :mod ultra ) ) :arg2 ( monetary-quantity monetary-quantity_num_0 :unit ( dollar :mod country ) ) ) ) )
talk-01 :polarity - :arg0 i :arg2 he :time ever
return-05 :arg1 ( ship-01 :arg1 beef :arg2 ( and :op1 country_name_0 :op2 local-region_name_1 :op3 country_name_2 ) )
and :op1 ( versatile :degree most :domain anger-01 ) :op2 ( functional :arg1 human )
or :op1 law :op2 pressure-01 :mod again
contrast-01 :arg1 ( need-01 :arg0 i :arg1 ( cautious-02 :arg0 i :arg1 ( knee :arg1-of ( damage-01 :arg1-of ( possible-01 :polarity - ) ) ) ) ) :arg2 ( okay-04 :arg1 i :time now )
sure-02 :arg1 ( be-located-at-91 :polarity - :arg1 you :arg2 hand )
use-01 :arg0 ( and :op1 ( person :arg0-of study-01 ) :op2 nurse :op3 doctor :op4 lad ) :arg1 ( tunnel :mod this )
old :polarity - :domain person_name_0
import-01 :arg1 ( fish :mod wield ) :arg2 ( about :op1 ( mass-quantity mass-quantity_num_0 :unit ton ) )
significant-02 :polarity - :arg1 updates :frequency sometimes
contrast-01 :arg2 ( sure-02 :arg0 i :arg1 ( possible-01 :arg1 ( and :op1 ( have-03 :arg0 you :arg1 they ) :op2 ( win-01 :arg0 you ) ) ) )
say-01 :arg0 study :arg1 ( compare-01 :arg1 ( grow-01 :arg1 phrase :location ( zone :mod euro ) ) :arg2 ( low-04 :degree more ) :time ( after :op1 now :quant ( temporal-quantity temporal-quantity_num_0 :unit month ) ) )
remember-01 :arg0 i :arg1 ( person :mod that :arg0-of ( have-rel-role-91 :arg1 i :arg2 child ) :arg1-of ( play-01 :arg0 i :location court :arg1-of ( cause-01 :arg0 ( get :polarity - :arg0 i ) ) ) )
need-01 :arg1 ( and :op1 ( develop-02 :arg1 ( criteria :purpose ( assess-01 :arg1 ( vehicle :mod electric ) ) ) ) :op2 ( decide-01 :arg1 ( thing :manner-of ( and :op1 ( use-01 :arg1 ( use-01 :arg1 vehicle ) ) :op2 ( produce-01 :arg1 vehicle ) ) ) ) )
multi-sentence :snt1 ( estimate-01 :arg0 you :arg1 ( thing :arg2-of ( result-01 :arg1 ( thing :arg2-of ( result-01 :arg1 you ) ) ) ) :arg2 ( thing :arg2-of ( result-01 :arg1 ( thing :arg2-of ( result-01 :arg1 ( thing :arg2-of ( result-01 :arg1 ( thing :arg2-of ( result-01 :arg1 ( thing :arg2-of ( result-01 :arg1 ( thing :arg2-of ( result-01 :arg1 ( thing :arg2-of ( result-01 :arg1 ( thing :arg2-of ( result-01 :arg1 ( thing :arg2-of ( result-01 :arg1 ( thing :arg2-of ( result-01 :arg1 ( thing :arg2-of ( result-01 :arg1 ( thing :arg2-of ( result-01 :arg1 ( thing :arg2-of ( result-01 :arg1 ( thing :arg2-of ( result-01 :arg1 ( thing :arg2-of ( result-01 :arg1 ( thing :arg2-of ( result-01 :arg1 ( thing :arg2-of ( result-01 :arg1 ( thing :arg2-of ( result-01 :arg1 ( thing :arg2-of ( result-01 :arg1 ( thing :arg2-of ( result-01 :arg1 ( thing :arg2-of ( result-01 :arg1 ( thing :arg2-of ( result-01 :arg1 ( thing :arg2-of ( result-01 :arg1 ( thing :arg2-of ( result-01 :arg1 ( year :mod this ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) )
tense :domain ( situation :location location_name_0 ) :degree very :time ( since :op1 ( suspend-01 :arg0 person_name_1 :arg1 ( session :mod parliament ) :arg1-of ( cause-01 :arg0 ( result-01 :arg1 ( thing :arg1-of differ-02 ) :arg2 ( government-organization :arg0-of govern-01 ) ) ) ) )
something :polarity - :arg1-of ( know-02 :arg2 ( and :op1 child :op2 ( recommend-01 :arg1 ( survive-01 :arg0 they ) ) ) ) :domain this
contrast-01 :arg2 ( win-01 :arg0 country_name_0 :arg1 ( silver :poss team ) )
and :op1 ( explain-01 :arg0 ( country :mod this ) :arg1 ( right-05 :arg1 ( union :mod labor ) :arg2 ( organization :mod labor ) ) ) :op2 ( participate-01 :arg0 ( union-02 :arg1 ( government-organization :arg0-of govern-01 :mod this ) ) :arg1 ( partner-01 :arg0 ( and :op1 corporation :op2 ( agency :mod ( government-organization :arg0-of govern-01 ) ) ) :mod collective ) :arg1-of ( equal-01 :arg2 ( partner-01 :arg0 ( and :op1 corporation :op2 ( agency :mod ( government-organization :arg0-of govern-01 ) ) ) :mod collective ) ) ) :time ( advise-01 :arg0 ( country :mod this ) :arg2 ( country :mod other ) )
contrast-01 :arg1 ( let-01 :arg0 terrorist :arg1 ( go-01 :arg1 terrorist ) ) :arg2 ( leave-14 :arg0 terrorist :arg1 ( and :op1 ( person :arg0-of ( have-rel-role-91 :arg1 person :arg2 mother ) ) :op2 ( person :arg0-of ( have-rel-role-91 :arg1 person :arg2 sister ) ) :op3 ( person :arg0-of ( have-rel-role-91 :arg1 person :arg2 sister ) ) ) :location sport :location sport )
cause-01 :arg0 ( government-organization_name_0 :mod country_name_1 ) :arg1 ( highest-ranking :arg0 ( and :op1 ( person :arg0-of ( have-org-role-91 :arg1 country :arg2 diplomat ) ) :op2 ( person :arg0-of ( have-org-role-91 :arg1 country :arg2 diplomat ) ) ) :arg1 ( and :op1 ( person :arg0-of ( have-org-role-91 :arg1 country :arg2 diplomat ) ) :op2 ( person :arg0-of ( spy-01 :arg1 country ) :location country_name_2 ) ) )
possible-01 :polarity - :arg1 ( say-01 :arg0 you :arg1 no )
complain-01 :arg0 ( person :arg0-of ( supply-01 :arg1 country_name_0 ) ) :mod main :arg1-of ( cause-01 :arg0 ( possible-01 :polarity - :arg1 ( sustainable :arg0 ( company :arg0-of supply-01 ) :arg1 ( and :op1 caliber :op2 quality ) ) ) )
summit :location military_name_0 :ord ( ordinal-entity ordinal-entity_num_0 )
contrast-01 :arg1 ( retroroca :arg0 ( person :arg0-of speak-01 ) :arg1 ( difficult :mod great ) :arg2 ( go-02 :arg0 person :arg4 ( beyond :op1 ( paradigm :mod post-modern ) ) ) ) :arg2 ( depend-01 :polarity - :arg0 ( depend-01 :polarity - :arg0 ( unit :arg0-of ( depend-01 :polarity - ) ) :arg1 ( unit :mod creative ) ) :mod great )
live-01 :arg1-of ( long-03 :degree so )
and :op1 ( include-91 :arg1 ( company :mod country_name_0 :arg2-of ( include-91 :arg1 ( and :op1 ( person :arg0-of ( develop-02 :arg1 ( properties :mod commerce :mod commerce :poss country ) ) ) :op2 ( person :arg0-of ( develop-02 :arg1 organization_name_1 :mod ( large :degree most ) ) ) :op3 ( organization_name_2 :arg0-of ( have-org-role-91 :arg1 organization :arg3 ( lead-02 :arg0 person :arg1 organization ) ) ) :op4 ( organization_name_2 :arg0-of ( have-org-role-91 :arg1 organization :arg3 ( lead-02 :arg0 person :arg1 organization ) ) ) :op5 ( organization_name_2 :arg0-of ( have-org-role-91 :arg1 organization :arg3 ( lead-02 :arg0 person :arg1 organization ) ) ) ) :mod ( large :degree most :compared-to ( and :op1 ( person :arg0-of ( develop-02 :arg1 ( properties :mod commerce ) ) ) :op2 ( person :arg0-of ( have-org-role-91 :arg1 organization :arg3 ( lead-02 :arg0 person ) ) ) :op3 ( organization_name_2 :arg0-of ( have-org-role-91 :arg1 organization :arg3 ( lead-02 :arg0 person :arg1 organization ) ) ) ) :mod ( large :degree most ) ) ) ) ) :op2 ( create-01 :arg0 company :arg1 ( company :arg0-of ( compete-02 :arg1 company :arg3 ( market :mod trade-01 :mod online :prep-with organization_name_4 ) :arg1-of possible-01 ) ) )
and :op1 ( go-02 :arg0 ( person :mod country_name_0 ) :arg4 here ) :op2 ( suffer-01 :arg0 person :arg1 ( right-05 :arg1 person :arg2 ( live-01 :arg0 person :location ( house :location location_name_0 :mod ( old :degree most ) ) ) ) ) :op3 ( remember-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg2 commander ) ) :arg1 ( person_name_1 :arg0-of ( have-org-role-91 :arg2 commander ) ) )
propose-01 :arg0 law :arg1 ( create-01 :arg1 ( list-01 :arg1 ( and :op1 ( list-01 :arg1-of ( call-01 :manner so ) ) :op2 ( system :name ( name :op1 ??????????? :op2 information :op3 information ) ) :op4 ( system :name ( name :op1 violators :op2 rights ) :mod ( data :arg1-of personal-02 ) ) ) ) ) :mod also
deliver-01 :arg0 ( dervish :name ( name :op1 '' :op2 dervish ) ) :arg1 ( assist-01 :arg2 ( military :mod country_name_0 ) ) :arg2 ( and :op1 country_name_1 :op2 country_name_2 )
and :op1 ( retreat :polarity - :arg1 ( ?????? :quant num_0 ) :mod ( even :polarity - ) ) :op2 ( capitulation :arg1 ( capitulation :mod ( style :mod radical ) ) :time ( before :op1 ( tradition :poss comic ) ) )
person :quant num_0 :arg0-of ( have-rel-role-91 :arg1 person :arg2 child ) :location ( around :op1 we )
remember-01 :mode imperative :arg0 you :arg1 ( talk-01 :arg0 we :arg1 ( mansion :arg0-of ( hold-01 :arg1 ( fund-01 :arg1 ( centre :location city ) :location street ) :arg1-of ( grant-01 :arg2 ( product-of :op1 num_0 :op2 num_1 ) ) ) ) )
have-03 :arg0 ( we :arg1-of ( include-91 :arg2 ( suffer-01 :arg1-of ( have-03 :arg0 we ) ) :arg3 most ) ) :arg1 ( leg :part-of legs ) :manner literal
and :op1 ( mean-01 :arg1 ( economy :arg0-of restore-01 ) :arg2 ( person :quant more :arg0-of ( have-rel-role-91 :arg1 economy :arg2 uncle ) ) ) :op2 ( and :op1 sell-01 :op2 ( job :mod new ) :domain economy )
show-01 :arg0 they :arg1 ( fist :arg1 she ) :condition ( care-04 :polarity - :arg0 they )
cause-01 :arg0 ( possible-01 :polarity - :arg1 ( explain-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg1 organization_name_0 :arg2 official ) ) :arg1 ( thing :arg0-of ( cause-01 :arg1 ( possible-01 :polarity - :arg1 ( explain-01 :arg0 ( department :part-of ( department :arg1-of legal-02 ) :location person_name_1 ) ) ) ) ) ) :arg1 ( call-02 :medium phone ) )
choose-01 :arg1 ( area :location-of ( construct-01 :arg1 road ) )
person_name_0 :arg0-of ( return-01 :arg1 person :arg4 track )
reach-01 :arg0 ( income :source ( service :mod ( person :arg0-of ( have-org-role-91 :arg1 organization_name_1 ) ) ) ) :arg1 ( monetary-quantity monetary-quantity_num_0 :unit dollar ) :arg2 ( monetary-quantity monetary-quantity_num_1 :unit dollar ) :time ( year :mod last :mod almost ) :arg1-of ( cause-01 :arg0 ( drop-01 :arg1 ( income :source ( office :mod ( person :arg0-of ( have-org-role-91 :arg1 organization_name_1 ) ) ) ) :time current ) )
say-01 :arg0 he :arg1 ( leave-17 :arg1 ( child :quant num_0 :arg1-of ( include-91 :arg2 ( child :arg0-of ( have-rel-role-91 :arg1 school :arg2 child ) ) ) ) :location ( region :mod other :quant ( between :op1 num_0 :op2 num_1 ) ) :location country_name_1 )
and :op2 ( clear-06 :polarity - :arg1 ( or :op1 ( win-01 :arg0 ( person :arg0-of drive-01 ) ) :op2 ( convince-01 :arg0 person :arg1 person :arg2 ( rely-01 :arg0 person :arg1 ( person :arg0-of drive-01 ) ) ) ) )
act-01 :arg0 person_name_0 :mod also :location ( styles :mod both )
and :op2 ( predict-01 :arg1 ( possible-01 :arg1 ( rise-01 :arg1 ( number :quant-of ( number :mod this ) ) :arg4 ( person :quant num_1 ) ) ) )
cause-01 :arg1 ( believe-01 :arg0 i :arg1 ( be-located-at-91 :arg1 ( company :arg0-of represent-01 :mod such ) :arg2 ( level :mod good ) ) )
cause-01 :arg0 ( and :op1 ( meet-03 :time ( meet-03 :arg0 ( negotiate-01 :arg2 ( supply-01 :arg1 gas :arg2 ( over :op1 ( supply-01 :arg1 gas ) ) ) :time future ) ) ) :op2 ( overcome-01 :arg1 ( fear-01 :arg0 organization_name_0 :arg1 ( agree-01 :arg0 country_name_1 :arg1 ( agree-01 :arg0 organization :arg1 ( agree-01 :arg0 country :arg1 ( agree-01 :arg0 organization :arg1 ( agree-01 :arg0 organization :arg1 ( agree-01 :arg0 organization :arg1 ( agree-01 :arg0 organization :arg1 ( agree-01 :arg0 organization :arg1 ( agree-01 :arg0 organization :arg1 ( agree-01 :arg0 organization :arg1 ( agree-01 :arg0 organization :arg1 ( agree-01 :arg0 organization :arg1 ( agree-01 :arg0 organization :arg1 ( agree-01 :arg0 organization :arg1 ( agree-01 :arg0 organization :arg1 ( agree-01 :arg0 organization :arg1 ( agree-01 :arg0 organization :arg1 ( agree-01 :arg0 organization :arg1 ( agree-01 :arg0 organization :arg1 ( agree-01 :arg0 organization :arg1 ( agree-01 :arg0 organization :arg1 ( agree-01 :arg0 organization :arg1 ( agree-01 :arg0 organization :arg1 ( agree-01 :arg0 organization :arg1 ( agree-01 :arg0 organization :arg1 ( agree-01 :arg0 organization :arg1 ( agree-01 :arg0 organization :arg1 ( agree-01 :arg0 organization :arg1 ( agree-01 :arg0 organization :arg1 ( agree-01 :arg0 organization :arg1 ( agree-01 :arg0 organization :arg1 ( agree-01 :arg0 organization :arg1 ( agree-01 :arg0 organization :arg1 ( agree-01 :arg0 organization :arg1 ( agree-01 :arg0 organization :arg1 ( agree-01 :arg0 organization :arg1 ( agree-01 :arg0 organization :arg1 ( agree-01 :arg0 organization :arg1 ( agree-01 :arg0 organization :arg1 ( agree-01 :arg0 organization :arg1 ( agree-01 :arg0 organization :arg1 ( agree-01 :arg0 organization :arg1 ( agree-01 :arg0 organization :arg1 ( agree-01 :arg0 organization :arg1 ( agree-01 :arg0 organization :arg1 ( agree-01 :arg0 organization :arg1 ( agree-01 :arg0 organization :arg1 ( agree-01 :arg0 organization :arg1 ( agree-01 :arg0 organization :arg1 ( agree-01 :arg0 organization :arg1 ( agree-01 :arg0 organization :arg1 ( agree-01 :arg0 organization :arg1 ( agree-01 :arg0 organization :arg1 ( agree-01 :arg0 organization :arg1 ( agree-01 :arg0 organization :arg1 ( agree-01 :arg0 organization :arg1 ( agree-01 :arg0 organization :arg1 ( agree-01 :arg0 organization :arg1 ( agree-01 :arg0 organization :arg1 ( agree-01 :arg0 organization :arg1 ( agree-01 :arg0 organization :arg1 ( agree-01 :arg0 organization :arg1 ( agree-01 :arg0 organization :arg1 ( agree-01 :arg0 organization :arg1 ( agree-01 :arg0 organization :arg1 ( agree-01 :arg0 organization :arg1 ( agree-01 :arg0 organization :arg1 ( agree-01 :arg0 organization :arg1 ( agree-01 :arg0 organization :arg1 ( agree-01 :arg0 organization :arg1 ( agree-01 :arg0 organization :arg1 peace ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) )
acknowledge-01 :arg0 organization_name_0 :arg1 ( acknowledge-01 :arg0 organization :arg1 ( contact-01 :arg0 person_name_1 :arg1 person ) ) :prep-in ( june :mod this )
person_name_0 :arg0-of ( have-org-role-91 :arg2 ( minister :topic ( and :op1 educate-01 :op2 science ) ) )
bear-02 :arg1 they :mod also
and :op1 ( be-located-at-91 :arg1 i :arg2 ( theatre :mod nation ) ) :op2 ( possible-01 :polarity - :arg1 ( believe-01 :arg0 i :arg1 it :time ( until :op1 end-01 ) :mod just ) )
and :op1 ( rise-01 :arg1 ( number :quant-of ( person :arg0-of ( use-01 :arg1 internet ) :mod country_name_0 ) ) :arg4 num_0 ) :op2 ( bring-up-02 :arg0 ( data :poss person ) :arg1 ( statistic :mod official ) :degree ( more :compared-to ( population :poss ( country :mod any :location world :arg2-of ( except-01 :arg1 country_name_1 ) ) ) ) )
say-01 :arg0 ( person :arg1-of ( expert-01 :arg2 ( person_name_0 :arg0-of ( have-org-role-91 :arg1 ( person_name_1 :arg0-of ( have-org-role-91 :arg2 professor ) ) :arg2 ( expert-01 :arg1 person :arg2 ( expert-01 :arg1 person :arg2 ( person :arg1-of expert-01 ) ) ) ) :arg0-of ( have-org-role-91 :arg2 professor ) ) ) :arg0-of ( have-org-role-91 :arg2 professor ) ) :arg1 ( die-01 :arg1 ( person :quant ( about :op1 num_1 ) ) :time ( recommend-01 :arg1 ( come-01 :arg1 ( type :quant ( between :op1 num_0 :op2 num_1 ) ) ) ) )
grow-01 :arg1 ( basket :quant num_0 ) :arg2 ( level :poss ( and :op1 ( close-01 :time previous ) :op2 ( cost-01 :arg2 num_1 ) ) )
say-01 :arg0 ( person :arg0-of ( own-01 :arg1 ( shop :mod fish ) ) ) :arg1 ( '' :arg0 ( person :arg0-of ( own-01 :arg1 ( shop :mod fish ) ) ) :arg1 ( person_name_1 :arg0-of ( own-01 :arg1 ( shop :mod fish ) ) ) :arg1-of easy-05 )
remain-01 :arg1 ( background :mod geopolitics )
multi-sentence :snt1 ( possible-01 :arg1 ( close-10 :arg1 ( slash :op1 nedozrevshie :op2 perejarene ) :arg2 ( eye :part-of you ) :mod still ) ) :snt2 ( cause-01 :arg0 amr-unknown :arg1 ( look-02 :arg0 amr-unknown :arg1 ( and :op1 ( unfroze :arg0 he :arg1 ( life :poss he ) ) :op2 ( manage-02 :arg0 they :arg1 ( and :op1 unfroze :op2 boil ) ) :frequency several ) ) )
help-01 :polarity - :arg0 we :arg1 ( woman :arg1-of black-05 ) :arg2 ( protect-01 :arg0 woman :arg1 ( and :op1 ( person :arg0-of ( have-rel-role-91 :arg1 woman :arg2 husband ) ) :op2 ( person :arg0-of ( have-rel-role-91 :arg1 woman :arg2 son ) ) ) ) :time ever
do-02 :polarity - :arg0 we :arg1 ( good :mod any )
series :name ( name :op1 tournaments :op2 begins ) :mod humanitarian :quant series :time already :time ( after :op1 now :quant ( few :op1 ( temporal-quantity temporal-quantity_num_0 :unit week ) ) )
multi-sentence :snt1 ( instead-of-91 :arg1 ( turn-02 :arg0 he :arg1 platform :arg2 platform :arg1-of quick-02 ) :arg2 ( turn-02 :arg0 he :arg1 platform :arg2 platform :time ( moment :mod real ) ) :arg1-of quick-02 ) :snt2 ( say-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg1 business ) ) :arg1 ( insiders :arg0 person :arg1 platform ) )
value-01 :arg1 ( square :location ( in-front-of :op1 ( city_name_0 :location city_name_1 ) ) ) :arg2 ( and :op1 ( green :mod business :mod business ) :op2 tree ) :location ( in-front-of :op1 square )
contrast-01 :arg2 ( sure-02 :arg0 i :arg1 ( mr :arg1 person_name_0 :arg1-of sure-02 ) :prep-in ( initiative :mod this ) )
and :op1 ( suffer-01 :arg0 person :arg1 ( much :degree so ) ) :op2 ( need-01 :arg0 person :arg1 help-01 :time now ) :op3 ( say-01 :arg0 person :arg1 ( thing :time ( read-01 :arg0 person :arg1 person_name_0 :time ( year :mod last ) :ord ( ordinal-entity ordinal-entity_num_0 ) ) ) )
exhibit-01 :arg1 ( thing :arg1-of ( achieve-01 :arg0 ( economy :poss country_name_0 :mod nation ) ) )
say-01 :arg0 person_name_0 :arg1 ( take-10 :arg0 ( realize-01 :arg1 this ) :arg1 ( take-10 :arg0 this :arg1 ( time :arg1-of long-03 :mod quite ) ) )
contrast-01 :arg2 ( say-01 :arg0 speak-01 :arg1 ( go-01 :arg1 ( case :mod only :topic ( case-03 :time accident ) ) :time ( issue-01 :arg1 ( state-01 :arg0 ( police :mod traffic ) :manner ( participate-01 :polarity - :arg0 ( police :mod traffic ) ) ) ) ) )
include-91 :arg3 num_0 :arg1 state_name_0 :arg2 ( thing :arg1-of ( tax-01 :arg3 ( thing :arg1-of ( tax-01 :arg3 ( rate-entity-91 :arg1 ( rate :mod corporation :mod same ) :arg2 ( rate-entity-91 :arg1 ( rate :mod ( corporation :mod same ) ) :arg2 ( rate-entity-91 :arg1 ( rate :mod ( corporation :mod same ) ) :arg2 ( rate-entity-91 :arg1 ( rate :mod corporation ) :arg2 ( rate-entity-91 :arg1 num_0 :arg2 ( temporal-quantity temporal-quantity_num_0 :unit month ) ) ) ) ) ) ) ) ) )
learn-01 :arg0 ( person_name_0 :arg0-of ( have-org-role-91 :arg1 ( city-district_name_1 :poss person ) :arg2 personnel ) ) :arg1 ( work-09 :arg1 it :location front )
cause-01 :arg0 ( mechanical :arg1 ( thing :manner-of ( maintain-01 :arg0 we :arg1 ( life :poss we ) ) ) ) :arg1 ( danger :mod particular :domain mesothelioma :arg1-of ( cause-01 :arg0 ( and :op1 ( maintain-01 :arg0 we :arg1 ( life :poss we ) ) :op2 ( act-02 :arg0 ( person :arg0-of ( have-rel-role-91 :arg2 kill ) ) :degree very ) ) ) )
survive-01 :arg0 ( person_name_0 :mod only ) :purpose ( survive-01 :arg0 person )
realize-01 :arg0 he :arg1 ( lack-01 :arg0 he :arg1 ( and :op1 knowledge :op2 skill ) :purpose ( cover-01 :arg0 he :arg1 ( history :poss region ) ) ) :time ( after :op1 ( start-01 :arg0 he :arg1 ( collect-01 :arg0 he :arg1 material :purpose game ) ) )
announce-01 :arg0 ( person_name_0 :arg0-of ( have-org-role-91 :arg2 ( minister :mod foreign ) ) ) :arg1 this :time today :arg1-of ( speak-01 :arg3 ( and :op1 ( person :arg0-of study-01 ) :op2 ( person :arg0-of ( teach-01 :arg1 organization_name_1 ) ) ) )
stop-01 :arg1 ( war-01 :arg1 ( country_name_0 :arg1-of ( same-01 :arg2 ( child :arg1-of ( same-01 :arg2 ( child :mod same ) ) ) ) ) ) :time now
find-01 :arg0 ( face :part-of organization_name_0 ) :arg1 ( person :arg0-of ( lead-02 :arg1 organization ) :mod such ) :arg1-of ( cause-01 :arg0 ( need-01 :arg0 ( person :arg0-of ( lead-02 :arg1 organization ) ) :arg1 ( person :arg0-of ( lead-02 :arg1 organization ) :mod such ) ) )
cause-01 :arg0 ( and :op1 ( find-01 :arg1 ( thousands :consist-of person ) :mod still ) :op2 ( continue-01 :arg1 combat-01 ) :op3 ( person :arg0-of ( have-org-role-91 :arg2 official ) ) :op4 ( person :arg0-of ( have-org-role-91 :arg2 official ) ) :op5 ( person :arg0-of ( have-org-role-91 :arg2 official ) ) :op6 ( person :arg0-of ( have-org-role-91 :arg2 official ) ) :op7 ( begin-01 :arg1 ( year :mod academia ) ) )
lesbian :mode interrogative :domain you
declare-01 :arg0 person_name_0 :arg2 ( fund-01 :arg1 ( develop-02 :arg1 world-region_name_1 ) :degree full )
fall-01 :arg1 ( organization_name_0 :arg0-of manufacture-01 :arg0-of ( partner-01 :arg1 ( country_name_2 :location ( organization_name_3 :part-of organization_name_3 ) ) :arg1-of major-02 ) ) :arg4 ( level :arg1-of ( low-04 :degree more ) ) :time ( after :op1 increase-01 :quant ( temporal-quantity temporal-quantity_num_0 :unit month ) )
bad-07 :arg1 salads :degree ( more :mod even )
contrast-01 )
contrast-01 :arg2 ( simple-02 :polarity - :arg1 ( reason :arg0-of ( cause-01 :arg1 ( suspect-01 :arg1 mesothelioma ) ) ) )
want-01 :arg0 organization_name_0 :arg1 ( accelerate-01 :arg0 organization :arg1 ( increase-01 :arg1 ( market :beneficiary ( car :mod electric ) ) ) )
understand-01 :polarity - :arg0 person_name_0 :mod still
and :op1 ( highlights :arg0 it :arg1 ( '' :mod ( diverse :degree ( more :mod little ) ) ) :mod also ) :op2 ( quote-01 :arg0 it :arg2 person_name_0 :manner ( good :degree more ) ) :op3 ( quote-01 :arg0 person :arg2 ( title-01 :arg1 person :arg2 title ) )
follow-01 :arg1 ( and :op1 ( follow-01 :arg1 ( event :time ( thing :arg0-of liberate-01 ) ) :arg2 we :mod of-course ) :op2 ( talk-01 :arg0 we :arg2 ( protest-01 :mod that :arg1-of ( arrive-01 :arg4 everywhere :source peninsula_name_1 :destination peninsula_name_1 ) ) ) ) :arg2 we
say-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg1 ( publication_name_0 :poss ( person :arg0-of ( have-org-role-91 :arg1 country_name_1 :arg2 ( minister :mod defense ) ) ) :arg2 ( minister :mod defense ) ) ) ) :arg1 ( subject-01 :arg1 ( message :topic ( person :arg0-of ( have-org-role-91 :arg1 country :arg2 diplomat ) ) ) :arg2 ( person :arg0-of ( specialize-01 :arg1 research-01 ) ) ) :medium ( page :poss ( person :arg0-of ( have-org-role-91 :arg1 country :arg2 ( minister :mod defense ) ) ) )
lacks :arg0 he :arg1 ( lack-01 :arg0 he :arg1 ( and :op1 knowledge :op2 skill ) :purpose ( illuminate :arg0 he :arg1 ( history :poss region ) ) ) :time ( after :op1 ( start-01 :arg0 he :arg1 ( collect-01 :arg0 he :arg1 material :purpose game ) ) )
concern-01 :arg0 program :arg1 ( car :quant all ) :degree ( more :compared-to ( temporal-quantity temporal-quantity_num_0 :unit year ) )
add-01 :arg0 he :arg1 ( find-01 :arg0 ( person_name_0 :arg0-of ( have-org-role-91 :arg1 ( force :mod air :mod air :location ( area :name ( name :op1 settlement ) ) ) ) ) :arg1 ( agree-01 :arg1 cease-fire ) )
and :op2 ( turn-14 :arg0 they :arg1 court :purpose compensate-01 :time then )
say-01 :arg0 ( person :mod country_name_0 :mod exact ) :arg1 ( find-01 :arg0 study :arg1 ( need-01 :arg1 ( and :op1 ( treat-03 :arg1-of ( effective-04 :degree more ) ) :op2 ( strategy :purpose prevent-01 ) :arg0-of effective-04 ) ) :concession ( location :arg1-of ( include-91 :arg2 ( location :mod brief ) ) ) :concession ( location :mod brief ) )
tense :degree very :domain situation :location location_name_0 :time ( since :op1 ( suspend-01 :arg1 ( thing :arg2-of ( result-01 :arg1 ( session :mod parliament ) ) ) ) )
and :op1 ( notice-01 :arg0 ( and :op1 city_name_0 :op2 city_name_1 ) :arg1 ( position-02 :arg0 and :arg2 ( issue-02 :arg0 country_name_2 ) :arg1-of balance-01 ) ) :op2 ( appreciate-02 :arg0 and :arg1 ( person :arg1-of expert-01 :mod belarusian ) )
brainwash-01 :arg1 person_name_0 :arg2 ( and :op1 ( hair :mod dishevelled ) :op2 ( heart :part-of ( heart :part-of ( village :location north ) ) ) ) :degree ( more :mod even ) :arg1-of ( cause-01 :arg0 ( and :op1 ( remove-01 :arg1 ( and :op1 ( hair :mod dishevelled ) :op2 ( heart :part-of ( village :mod north ) ) ) ) :op2 ( remove-01 :arg1 heart :degree severe :compared-to ( port :location peninsula_name_1 ) ) ) )
see-01 :mode imperative :arg0 you :arg1 ( condition :mod amr-unknown )
cause-01 :arg1 ( turn-down-05 :arg0 it :arg1 ( rotten :domain it ) )
cause-01 :arg0 ( toxin :arg1 industry :time ( era :mod another ) ) :arg1 ( cause-01 :arg0 it :arg1 concern-01 :mod hardly :time today )
say-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg2 ( director :mod general ) ) :arg0-of ( have-org-role-91 :arg2 ( director :mod general ) ) :arg0-of ( have-org-role-91 :arg2 ( director :mod general ) ) :arg0-of ( have-org-role-91 :arg2 ( director :mod general ) ) :arg0-of ( have-org-role-91 :arg2 ( director :mod general ) ) :arg0-of ( have-org-role-91 :arg2 ( director :mod general ) ) :arg0-of ( have-org-role-91 :arg2 ( director :mod general ) ) :arg0-of ( have-org-role-91 :arg2 ( director :mod general ) ) :arg0-of ( have-org-role-91 :arg2 ( director :mod general ) ) :arg0-of ( have-org-role-91 :arg2 ( director :mod general ) ) :arg0-of ( have-org-role-91 :arg2 ( director :mod general ) ) :arg0-of ( have-org-role-91 :arg2 ( director :mod general ) ) :arg0-of ( have-org-role-91 :arg2 ( director :mod general ) ) :arg0-of ( have-org-role-91 :arg2 ( director :mod general ) ) :arg0-of ( have-org-role-91 :arg2 ( director :mod general ) ) :arg0-of ( have-org-role-91 :arg2 ( director :mod general ) ) :arg0-of ( have-org-role-91 :arg2 ( director :mod general ) ) :arg0-of ( have-org-role-91 :arg2 ( director :mod general ) ) :arg0-of ( have-org-role-91 :arg2 ( director :mod general ) ) :arg0-of ( have-org-role-91 :arg2 ( director :mod general ) ) :arg0-of ( have-org-role-91 :arg2 ( director :mod general ) ) )
and :op1 ( result-01 :arg1 ( thing :arg2-of ( result-01 :arg1 ( research-01 :arg0 they ) ) ) :arg2 ( thing :arg2-of ( result-01 :arg1 ( research-01 :arg0 they ) ) ) ) :op2 ( possible-01 :arg1 ( find-01 :arg1 ( thing :arg2-of ( result-01 :arg1 ( research-01 :arg0 they ) ) ) ) )
bastions :arg1 ( store :name ( name :op1 fashionable :op2 city_name_0 :op3 school :op4 school :op5 school :op6 school :op7 school ) )
contrast-01 :arg1 ( continue-01 :arg0 person_name_0 ) :arg2 ( fall-01 :arg1 person :arg4 ( behind :op1 ( position :quant num_0 ) ) )
possible-01 :mode interrogative :arg1 ( love-01 :arg0 ( person :arg0-of ( have-rel-role-91 :arg1 you :arg2 father ) ) :arg1 this )
recall-02 :arg1 ( recall-02 :arg0 we :arg1 ( and :op1 ( burn-01 :arg1 ( tank :mod ( storage :mod oil ) ) ) :op2 ( building :mod ( storage :quant num_0 ) ) ) :time ( date-entity month_date-entity_0 day_date-entity_0 ) ) :arg2 we
forecast-01 :arg1 ( be-located-at-91 :arg1 location_name_0 :arg2 ( relative-position :op1 location_name_0 :quant ( maximum :op1 ( or :op1 ( person :quant ( between :op1 num_1 :op2 num_2 ) ) :op2 ( person :quant num_2 ) ) ) ) )
difficult :polarity - :domain ( see-01 :arg0 ( person :quant many ) :arg1 ( thing :manner-of ( reduce-01 :arg1 company_name_0 :manner ( size :poss ( and :op1 ( power :poss company ) :op2 finance :op3 status ) ) ) ) ) :mod ( so :polarity - )
give-01 :arg0 ( face :arg1-of ( face-01 :arg0 person_name_0 ) ) :arg1 ( reason :arg0-of ( believe-01 :arg1 ( and :op1 ( ??????????????? :arg1 ( relation-03 :arg0 organization_name_2 :arg2 organization_name_2 ) ) :op2 beyond ) ) :arg1-of ( say-01 :arg0 he ) :arg1-of ( say-01 :arg0 he ) :arg1-of ( say-01 :arg0 he ) )
contrast-01 :arg1 ( condition :mod squally ) :arg2 ( serve-01 :arg1 ( reason :quant num_0 :arg1-of ( include-91 :arg2 ( reason :arg0-of ( delay-01 :arg1 ( land-01 :arg1 organization_name_0 :arg2 city_name_1 :location country-region_name_3 ) ) ) ) ) )
contrast-01 :arg1 ( percentage-entity percentage-entity_num_0 :domain ( rate :mod corporate :mod state_name_0 ) ) :arg2 ( percentage-entity percentage-entity_num_0 :arg1-of ( high-02 :degree relative ) :domain it )
hold-04 :arg1 ( cup :mod next :mod world ) :location location_name_0 :time ( summer :mod next )
thing :manner-of ( live-01 :arg0 person :location ( house :mod old :poss location_name_0 ) )
say-01 :arg0 person_name_0 :arg1 ( good :degree most :domain ( provide-01 :arg0 ( provide-01 :arg0 i :arg1 ( regresif :degree more ) :arg2 system ) :arg1 i ) ) :arg2 ( fee :mod license-01 )
and :op1 ( be-temporally-at-91 :arg1 ( season :mod ( league :mod football ) :poss country_name_0 ) :arg2 ( product-of :op1 num_0 :op2 num_1 ) ) :op2 ( score-01 :arg1 ( between :op1 ( temporal-quantity temporal-quantity_num_0 :unit year ) :op2 ( temporal-quantity temporal-quantity_num_2 :unit minute ) ) :arg2 ( temporal-quantity temporal-quantity_num_2 :unit minute ) )
include-91 :arg1 ( and :op1 ( season :mod ( league :mod dinosaur ) :mod turkish ) :op2 ( season :quant num_1 ) ) :arg2 ( goal :quant most ) :time ( and :op1 ( date-entity decade_date-entity_0 ) :op2 ( date-entity ordinal-entity_num_3 ) :ord ( ordinal-entity ordinal-entity_num_2 ) )
say-01 :arg0 he :arg1 ( wish-01 :arg0 we :arg1 ( recover-01 :arg1 ( veteran :poss we ) :arg2 ( veteran :poss we ) ) :arg1-of ( say-01 :arg0 he ) )
and :op2 ( need-01 :arg1 ( study-01 :frequency time ) )
say-01 :arg0 he :arg1 ( and :op1 ( person_name_0 :arg0-of ( have-org-role-91 :arg2 lieutenant ) ) :op2 ( interest :mod ( good :degree most ) :poss ( person :arg0-of ( have-org-role-91 :arg1 organization_name_1 :arg2 member ) ) :purpose ( keep-04 :arg0 person :arg1 ( item :arg1-of personal-02 ) :arg2 person_name_2 ) ) ) :time ( point :mod this )
get-03 :arg1 ( game :mod rematch :poss organization_name_0 ) :arg2 lucky :mod just
contrast-01 :arg1 ( know-01 :arg1 ( kill-01 :arg1 ( person :arg1-of kill-01 ) ) ) :arg2 ( alternative :mod ( lethal :degree less ) :prep-to ( cat :mod plastic ) :arg1-of ( cause-01 :arg0 amr-unknown ) :arg1-of ( cause-01 :arg0 amr-unknown ) :arg1-of ( cause-01 :arg0 amr-unknown ) :arg1-of ( cause-01 :arg0 amr-unknown ) :arg1-of ( cause-01 :arg0 amr-unknown ) :arg1-of ( cause-01 :arg0 amr-unknown ) :arg1-of ( cause-01 :arg0 amr-unknown ) :arg1-of ( cause-01 :arg0 amr-unknown ) :arg1-of ( cause-01 :arg0 amr-unknown ) :arg1-of ( cause-01 :arg0 amr-unknown ) :arg1-of ( cause-01 :arg0 amr-unknown ) )
appear-02 :arg1 ( do-02 :arg0 ( team :consist-of ( person :arg0-of ( have-org-role-91 :arg1 ( team :poss country_name_0 ) :arg3 ( lead-02 :arg0 team :arg1 team ) ) ) ) :arg1 team :arg2 ( eklenti :quant few :mod kurnaz ) )
compare-01 :arg1 person_name_0 :arg2 ( rate-entity-91 :arg1 num_0 :arg2 ( temporal-quantity temporal-quantity_num_1 :unit month :mod just ) )
win-01 :arg0 ( rate-entity-91 :arg1 ( monetary-quantity monetary-quantity_num_0 :unit dollar ) :arg2 ( volume-quantity volume-quantity_num_1 :unit gallon ) ) :time ( date-interval :op1 ( end-01 :arg1 ( date-entity month_date-entity_0 day_date-entity_0 ) ) :op2 ( win-01 :arg0 revenue :arg2 ( percentage-entity percentage-entity_num_1 ) :arg1-of ( compare-01 :arg2 ( year :mod previous ) ) ) )
contrast-01 :arg1 ( face-01 :arg0 i :arg1 ( person :quant num_0 :arg0-of ( have-rel-role-91 :arg1 i :arg2 child ) ) :location school ) :arg2 ( interest-01 :arg1 ( person :quant num_1 :arg1-of ( interest-01 :arg2 it ) ) )
amount :mod ( large :degree most ) :arg1-of ( include-91 :arg2 ( country :arg0-of ( deferred :arg1 ( reserve :mod gas ) :location ( and :op1 country_name_0 :op2 country_name_1 :op3 country_name_2 :op4 country_name_3 :mod together ) ) ) ) :prep-for ( total-01 :arg2 ( percentage-entity percentage-entity_num_0 ) )
and :op1 ( say-01 :arg0 ( lamb :mod cute ) :arg1 ( and :op1 ( live-01 :arg0 woman :location ( phone :arg1-of mobile-02 ) ) :op2 ( probable :domain ( find-01 :arg1 ( phone :arg1-of ( include-91 :arg2 woman ) ) ) ) ) ) :op2 ( upset-01 :arg1 ( person :arg0-of ( have-rel-role-91 :arg1 woman :arg2 child ) ) )
say-01 :arg0 person_name_0 :arg1 ( and :op1 ( sad-02 :arg1 ( person :arg1-of ( kill-01 :location ( cell :part-of woman ) ) ) ) :op2 ( possible-01 :arg1 ( telefonunda :arg1 ( family :arg1-of ( kill-01 :location ( cell :part-of woman ) ) ) ) ) )
multi-sentence :snt1 ( contrast-01 :arg2 ( differ-02 :arg1 ( and :op1 person_name_0 :op2 person_name_1 ) :arg2 ( small :mod small :mod only ) :time now ) ) :snt2 ( debate-01 :polarity - :arg0 ( person :arg0-of ( oppose-01 :arg1 country_name_3 ) ) :arg1 ( factor :arg1-of key-02 :mod civil :arg1-of ( key-02 :arg2 ( and :op1 ( economy :poss organization_name_2 ) :op2 anti-capitalist ) ) ) )
possible-01 :arg1 ( increase-01 :arg1 ( rate :mod interest ) :arg3 ( balance-01 :arg1 ( thing :quant some :arg1-of expect-01 ) ) :time ( before :op1 now :duration ( temporal-quantity temporal-quantity_num_0 :unit month ) :location market ) )
multi-sentence :snt1 this :snt2 yes
multi-sentence :snt1 ( and :op1 ( defend-01 :arg0 ( person :arg0-of play-01 ) :arg1 ( person :arg0-of play-01 ) :arg1-of ( cause-01 :arg0 ( tears :arg0 person :arg1 ( incident :mod this ) :arg1-of ( cause-01 :arg0 ( tears :arg0 person :arg1 ( incident :mod this ) ) ) ) ) ) :op2 ( possible-01 :arg1 ( return-01 :arg1 person :arg4 field :duration ( at-least :op1 ( temporal-quantity temporal-quantity_num_0 :unit month :mod at-least ) ) ) ) ) :snt2 ( hopeful-03 :arg0 i :arg1 remain-01 )
multi-sentence :snt1 ( fan :domain she :mod big :prep-with ( converse-01 :arg0 person_name_0 :arg1 i :arg2 ( '' :arg0 person :arg1 i ) ) ) :snt2 ( come-01 :arg1 i :purpose ( watch-01 :arg0 i :arg1 you ) )
and :op2 ( facilitated :arg0 ( and :op1 ( permit-01 :arg1 settlement :mod permanent ) :op2 ( permit-01 :arg1 settlement :mod permanent ) ) :arg1 ( and :op1 ( thing :arg1-of require-01 ) :op2 ( process-02 :arg1 apply-01 ) ) :arg1-of ( cause-01 :arg0 ( path :consist-of insertion ) ) )
and :op2 ( and :op1 ( continue-01 :arg0 ( number :quant-of ( person :mod foreign ) ) :arg1 ( permit-01 :arg1 settlement ) ) :op2 ( obtain-01 :arg0 number :arg1 ( card :name ( name :op1 '' :op2 card :op3 card :op4 card :op5 card :op6 card :op7 card ) ) :purpose ( and :op1 ( optimise :arg1 everything ) :op2 ( process-02 :arg1 apply-01 ) ) ) )
want-01 :arg0 organization_name_0 :arg1 ( take-01 :arg0 organization :arg1 ( person_name_1 :arg0-of ( play-08 :arg1 ( half :ord ( ordinal-entity ordinal-entity_num_1 ) ) ) :ord ( ordinal-entity ordinal-entity_num_1 ) ) )
and :op1 ( feel-05 :arg1 ( muddled :mod '' ) :arg2 ( powerful-02 :degree very ) ) :op2 ( signal-07 :arg1 ( signal-07 :arg1 ( open-01 :arg1 ( up-to :op1 other ) ) :mod too ) )
contrast-01 :arg2 ( person :mod international :arg0-of report-01 ) :arg1-of ( cause-01 :arg0 ( want-01 :arg0 person :arg1 ( write-01 :arg0 person ) ) )
multi-sentence :snt1 desenler :snt2 desenler
contrast-01 :arg2 ( hear-01 :arg0 ( and :op1 ( political-party :arg0-of ( oppose-01 :arg1 organization_name_0 ) ) :op2 ( thing :arg2-of ( sound-01 :arg1 block-01 ) ) ) :arg1 ( and :op1 ( thing :arg1-of ( border-01 :arg2 ( border-01 :arg2 organization ) ) ) :op2 ( sound-01 :arg1 block-01 :arg2 block-01 ) ) :time ( hear-01 :arg0 country_name_1 ) )
hear-01 :arg1 ( thing :arg1-of ( border-01 :arg2 ( and :op1 gun :op2 block-01 ) ) :quant some :arg1-of ( close-10 :arg2 ( border-01 :arg2 ( and :op1 gun :op2 block-01 ) ) ) :time ( conflict-01 :arg0 ( oppose-01 :arg0 oppose-01 :arg1 ( voice :poss turkey ) ) ) )
cause-01 :arg0 ( hear-01 :arg0 country_name_0 :arg1 voice :time ( absent-01 :arg1 ( oppose-01 :arg1 ( and :op1 weapon :op2 block-01 ) ) ) ) :arg1 ( ?? :arg1 i :arg2 ( point :mod border ) )
and :op1 ( own-01 :arg0 ( person :arg0-of ( own-01 :arg1 ( right :mod license-01 ) ) ) :arg1 ( thing :arg2-of ( right-05 :arg1 ( license-01 :arg1 license-01 ) ) ) :time ( end-01 :arg1 ( share :quant num_0 :arg1-of private-03 ) ) )
eliminate-01 :arg1 ( and :op1 ( eliminate-01 :arg1 ( problem :mod this ) ) :op2 ( eliminate-01 :arg1 ( problem :mod this ) ) )
eliminate-01 :arg1 ( problem :mod this ) :location gut
say-01 :arg0 ( democrat :arg1-of ( include-91 :arg2 democrat :arg3 ( percentage-entity percentage-entity_num_0 ) ) ) :arg1 ( support-01 :arg0 democrat :arg1 ( candidate :poss person_name_0 :arg0-of ( lead-02 :arg1 person_name_1 ) :arg0-of ( talk-01 :arg1 ( rate-entity-91 :arg1 num_1 :arg2 ( temporal-quantity temporal-quantity_num_1 :unit year ) ) ) ) )
say-01 :arg0 he :arg1 ( make-02 :arg0 ( and :op1 ( person :arg0-of ( write-01 :arg1 film ) ) :op2 ( person :arg0-of ( write-01 :arg1 film ) ) :op3 ( person :arg0-of ( write-01 :arg1 film ) ) :op4 ( person :arg0-of ( write-01 :arg1 film ) ) :op5 ( person :arg0-of ( write-01 :arg1 film ) ) :op6 ( person :arg0-of ( write-01 :arg1 film ) ) :op7 ( person :arg0-of ( write-01 :arg1 film ) ) ) :arg1 ( thing :arg1-of ( target-01 :arg0 ( campaign-01 :arg0 we ) ) ) )
possible-01 :arg1 ( use-01 :arg1 ( song :mod street :mod street :poss person_name_0 ) :arg2 ( thing :arg1-of game ) )
multi-sentence :snt1 ( amr-unknown
contrast-01 :arg2 ( realize-01 :polarity - :arg0 ( person_name_0 :arg0-of ( have-org-role-91 :arg2 curator ) ) :arg1 this :mod even )
say-01 :arg0 person_name_0 :arg1 ( realize-01 :polarity - :arg0 person :arg1 ( exhibit-01 :arg1 this ) :mod even )
transfer-01 :arg1 ( vehicle :quant ( number :mod large ) ) :arg2 region :time then :arg1-of ( transfer-01 :arg2 ( team :poss he ) )
have-03 :arg0 ( they :quant ( multiple :op1 num_0 ) ) :arg1 ( thing :arg0-of ( gain-02 :arg1 ( copying :arg0-of ( fair :polarity - ) :arg1-of ( differ-02 :arg2 ( surfaces :quant num_1 :arg1-of differ-02 ) :mod again ) ) ) ) :manner atms
multi-sentence :snt1 ( shout-01 :mode interrogative :arg0 we :arg2 '' ) :snt2 ( deaths :mode interrogative :arg0 ( person :arg1-of die-01 ) :arg1 everything :time now )
charge-05 :arg1 ( person :quant many ) :arg2 racism :mod still :location ( news :mod other )
multi-sentence :snt1 ( say-01 :arg0 ( and :op1 ( food :mod metcash ) :op2 ( sell-01 :arg1 ( and :op1 food :op2 groceries ) ) ) :arg1 ( and :op1 ( decrease-01 :arg1 ( product-of :op1 num_0 :op2 num_3 ) ) :op2 ( decrease-01 :arg1 ( percentage-entity percentage-entity_num_0 :arg3-of ( include-91 :arg2 ( percentage-entity percentage-entity_num_3 ) ) ) ) :op3 ( decrease-01 :arg1 ( percentage-entity percentage-entity_num_2 :quant-of ( percentage-entity percentage-entity_num_2 :arg3-of ( include-91 :arg2 ( percentage-entity percentage-entity_num_3 ) ) ) ) ) :arg3 ( percentage-entity percentage-entity_num_3 ) :arg4 ( percentage-entity percentage-entity_num_3 ) ) ) :snt2 ( drop-01 :arg1 ( share :poss it :mod market ) :arg3 ( percentage-entity percentage-entity_num_3 ) :arg4 level )
cause-01 :arg0 ( need-01 :arg0 they :arg1 ( reviving :arg0 they ) ) :arg1 ( manage-02 :arg0 they :arg1 ( make-01 :arg0 they :arg1 ( laugh-01 :arg1 audience ) ) )
contrast-01 :arg1 ( hurt-01 :polarity - :arg1 she ) :arg2 ( go-08 :arg1 video :arg2 ( media :mod social :part-of fall ) )
present-01 :arg0 ( person_name_0 :arg1-of ( present-01 :time ( season :mod this ) ) ) :arg1 ( version :quant num_0 :mod version )
prepare-02 :arg0 person_name_0 :arg1 ( season :quant num_0 :mod fun :mod fun ) :arg2 ( version :duration ( temporal-quantity temporal-quantity_num_0 :unit day ) )
and :op1 ( person_name_0 :arg0 ( and :op1 ( person_name_0 :arg0-of ( have-org-role-91 :arg1 person_name_1 :arg2 ( president :mod vice ) ) ) :op2 ( person_name_2 :arg0-of ( have-org-role-91 :arg1 person_name_2 :arg2 person_name_3 ) ) :op3 ( person_name_3 :arg0-of ( have-org-role-91 :arg1 person_name_5 :arg2 president ) ) :op4 ( person_name_3 :arg0-of ( have-org-role-91 :arg1 person_name_5 :arg2 president ) ) :op5 ( person :arg0-of ( have-org-role-91 :arg1 person_name_5 :arg2 president ) ) :op6 ( person :arg0-of ( have-org-role-91 :arg1 person_name_5 :arg2 president ) ) :op6 ( person :arg0-of ( have-org-role-91 :arg1 person_name_5 :arg2 president ) ) :op7 ( person :arg0-of ( have-org-role-91 :arg1 manna :arg2 president ) ) :op8 ( person :arg0-of ( have-org-role-91 :arg1 person_name_5 :arg2 president ) ) :op8 ( person :arg0-of ( have-org-role-91 :arg1 person_name_5 :arg2 president ) ) :op8 ( person :arg0-of ( have-org-role-91 :arg1 person_name_5 :arg2 president ) ) :op8 ( person :arg0-of ( have-org-role-91 :arg1 person_name_5 :arg2 president ) ) :op8 ( person :arg0-of ( have-org-role-91 :arg1 person_name_5 :arg2 president ) ) :op8 ( person :arg0-of ( have-org-role-91 :arg1 person_name_5 :arg2 president ) ) :op8 ( person :arg0-of ( have-org-role-91 :arg1 person_name_5 :arg2 president ) ) :op8 ( person :arg0-of ( have-org-role-91 :arg1 person_name_5 :arg2 president ) ) :op8 ( person :arg0-of ( have-org-role-91 :arg1 person_name_5 :arg2 president ) ) :op8 ( person :arg0-of ( have-org-role-91 :arg1 country_name_11 :arg2 president ) ) :op8 ( person :arg0-of ( have-org-role-91 :arg1 country_name_11 :arg2 president ) ) :op8 ( person :arg0-of ( have-org-role-91 :arg1 country_name_11 :arg2 president ) ) :op8 ( person :arg0-of ( have-org-role-91 :arg1 country_name_11 :arg2 president ) ) :op8 et-cetera ) )
president :arg0 ( and :op1 ( person_name_0 :arg0-of ( have-org-role-91 :arg1 person_name_1 :arg2 president ) ) :op2 ( person_name_2 :arg0-of ( have-org-role-91 :arg1 ( person_name_3 :arg0-of ( have-org-role-91 :arg1 organization_name_5 :arg2 president ) ) :arg2 ( president :mod vice ) ) ) :op3 ( person_name_3 :arg0-of ( have-org-role-91 :arg1 organization_name_5 :arg2 president ) ) :op4 ( person_name_3 :arg0-of ( have-org-role-91 :arg1 organization_name_5 :arg2 president ) ) :op5 ( person :arg0-of ( have-org-role-91 :arg1 organization :arg2 president ) ) :op6 ( person :arg0-of ( have-org-role-91 :arg1 organization :arg2 president ) ) :op7 ( person :arg0-of ( have-org-role-91 :arg1 organization_name_5 :arg2 president ) ) :op8 ( person :arg0-of ( have-org-role-91 :arg1 organization_name_5 :arg2 president ) ) :op8 ( person :arg0-of ( have-org-role-91 :arg1 organization_name_11 :arg2 president ) ) :op8 ( person :arg0-of ( have-org-role-91 :arg1 organization_name_11 :arg2 president ) ) :op8 ( person :arg0-of ( have-org-role-91 :arg1 organization_name_11 :arg2 president ) ) :op8 ( person :arg0-of ( have-org-role-91 :arg1 organization_name_11 :arg2 president ) ) :op8 ( person :arg0-of ( have-org-role-91 :arg1 organization_name_11 :arg2 president ) ) :op8 ( person :arg0-of ( have-org-role-91 :arg1 organization_name_11 :arg2 president ) ) :op8 ( person :arg0-of ( have-org-role-91 :arg1 organization_name_11 :arg2 president ) ) :op8 ( person :arg0-of ( have-org-role-91 :arg1 organization_name_11 :arg2 president ) ) :op8 ( person :arg0-of ( have-org-role-91 :arg1 organization_name_11 :arg2 president ) ) :op8 ( person :arg0-of ( have-org-role-91 :arg1 organization_name_11 :arg2 president ) ) :op8 ( person :arg0-of ( have-org-role-91 :arg1 organization_name_11 :arg2 president ) ) :op8 ( person :arg0-of ( have-org-role-91 :arg1 organization_name_11 :arg2 president ) ) :op8 ( person :arg0-of ( have-org-role-91 :arg1 organization_name_11 :arg2 president ) ) :op8 ( person :arg0-of ( have-org-role-91 :arg1 organization_name_11 :arg2 president ) ) :op8 ( person :arg0-of ( have-org-role-91 :arg1 organization_name_11 :arg2 president ) ) :op8 et-cetera )
bad-07 :mode interrogative :arg1 i :degree so :purpose ( mÃ¼yÃ¼m :arg1 industry )
contrast-01 :arg2 ( sell-01 :arg1 ( bread :quant ( mass-quantity mass-quantity_num_0 :unit dollar ) ) :time yesterday :location ( location_name_0 :arg0-of ( have-org-role-91 :arg2 capital ) ) )
and :op1 ( believe-01 :arg0 ( and :op1 ( person :arg0-of ( have-org-role-91 :arg1 organization_name_0 ) ) :op2 ( person :arg0-of ( have-org-role-91 :arg1 club ) ) ) :arg1 ( have-03 :arg0 person :arg1 ( lesson :mod proper ) :source ( defeat-01 :arg1 country_name_1 ) ) :time ( season :mod last :mod last ) ) :op2 ( believe-01 :arg0 club :arg1 ( make-02 :polarity - :arg0 ( thing :arg1-of target-01 ) :arg1 win-01 ) )
and :op1 ( value-02 :arg0 ( and :op1 ( r :poss we ) :op2 ( team :mod this ) ) :arg1 ( and :op1 ( r :mod together ) :op2 ( team :mod together ) :prep-with r ) ) :op2 ( achieve-01 :arg0 and :arg1 ( synergy :mod certain ) :time so-far )
and :op1 ( shoot-02 :arg0 ( person_name_0 :arg0-of ( have-org-role-91 :arg1 ( university :quant num_0 ) :arg2 professor ) ) :arg1 ( person :arg0-of ( have-rel-role-91 :arg1 police :arg2 girlfriend ) ) :arg2 gun ) :op2 ( obligate-01 :arg1 police :arg2 ( come-01 :arg1 police :manner ( manner :poss ( house :arg1-of ( say-01 :arg0 ( voice :mod ( trembling :mod only ) ) ) ) ) ) )
multi-sentence :snt1 ( felek. :arg0 person_name_0 :arg1 c ) :snt2 ( die-01 :arg1 ( person :mod c ) ) :snt3 ( die-01 :arg1 person :location peninsula_name_1 :time ( date-entity month_date-entity_0 day_date-entity_0 ) )
and :op1 ( documentary :ord ( ordinal-entity ordinal-entity_num_0 ) :poss person_name_0 ) :op2 ( person_name_1 :arg0-of ( have-org-role-91 :arg2 '' ) ) :op3 ( person_name_1 :arg0-of ( have-org-role-91 :arg2 '' ) )
announce-01 :arg0 ( and :op1 organization_name_0 :op2 country_name_1 :op3 newspaper_name_4 ) :arg1 ( make-01 :arg1 exam :beneficiary ( person :arg0-of study-01 :location district ) )
and :op1 ( ideal :domain ( ula?acaks?n?z :name ( name :op1 bedeninize :op2 bedeninize ) :mod bedeninize ) ) :op2 ( give-01 :arg1 ( mass-quantity mass-quantity_num_0 :unit kilogram ) :mod also )
and :op1 ( ideal :domain ( take-01 :arg0 you :arg1 ( ula?acaks?n?z :mod bedeninize ) ) ) :op2 ( provide-01 :arg0 they :arg1 ( ula?acaklar :mod dear ) :mod also )
make-01 :arg0 ( person_name_0 :arg1-of ( include-91 :arg2 ( person :quant num_0 ) :arg3 ( score-entity :op1 num_0 :op2 num_1 ) ) ) :arg1 ( shoot-01 :quant num_0 :arg1-of ( include-91 :arg2 ( shoot-01 :quant num_2 ) ) )
say-01 :arg0 he :arg1 ( and :op1 ( do-02 :arg0 we :arg1 ( research-01 :arg1 ( thing :arg1-of report-01 ) ) :time ( since :op1 ( build-01 :arg1 ( index :mod amusement-park_name_0 :arg1-of ( rise-01 :arg2 ( product :mod domestic :arg1-of gross-03 :mod domestic ) ) :arg1-of ( begin-01 :time today ) ) ) ) ) :op2 ( decline-01 :arg1 ( thing :arg1-of ( say-01 :arg0 he ) ) :manner rapid :time ( until :op1 ( date-entity decade_date-entity_0 ) ) ) ) :li num_0
include-91 :arg1 ( rate-entity-91 :arg1 ( slice :quant ( multiple :op1 num_0 ) ) :arg2 ( temporal-quantity temporal-quantity_num_0 :unit year ) ) :arg2 ( test-01 :arg0 ( weight :poss they ) :arg1 ( course :poss ( course :arg1-of ( performed :polarity - ) ) ) )
obligate-01 :arg2 ( use-01 :arg0 ( and :op1 ( person :arg0-of depend-01 ) :op2 ( person :mod motivasyonun ) ) :arg1 ( road :arg1-of same-01 ) )
and :op1 ( sign-up-03 :arg1 location_name_0 :arg4 location_name_1 ) :op2 ( message-01 :arg0 location_name_0 ) :op3 ( marry-01 :arg1 location_name_0 ) :time ( after :op1 work-01 ) :time ( late :degree more ) :location here :time ( late :degree more )
say-01 :arg0 he :arg1 ( recommend-01 :arg1 ( take-01 :arg1 it :arg3 ( speed :poss ( step-01 :arg1-of ( need-01 :arg1-of ( say-01 :arg0 he ) ) ) ) ) ) :time yesterday
say-01 :arg0 he :arg1 ( and :op1 ( possess-01 :arg0 ( person :arg0-of ( have-rel-role-91 :arg1 person_name_0 :arg2 lawyer ) ) :arg1 match-03 :arg1-of ( cause-01 :arg0 ( attempt-01 :arg0 person :arg1 ( have-03 :arg0 person :arg1 ( drug :arg1-of ( include-91 :arg2 ( drug :poss person ) ) :quant all ) ) ) ) ) :op2 ( evidence-01 :polarity - :arg1 ( possible-01 :arg1 ( be-located-at-91 :arg1 ( thing :arg1-of innocent-01 ) :arg2 ( thing :arg1-of ( say-01 :arg0 he ) ) ) ) ) )
and :op1 ( determine :arg1 ( source-02 :arg1 money :arg1-of ( use-01 :arg2 ( elect-01 :mod full :location country_name_0 ) ) ) ) :op2 ( prepare-02 :arg1 ( law :arg1-of draft-01 :mod new ) :arg2 ( introduce-02 :arg1 ( spend-01 :arg1 cap ) ) )
exhibit-01 :arg1 exhibit-01 :location ( location_name_0 :arg0-of ( drugs elimination museum :arg1 ( art :mod plastic :mod organization_name_1 ) :location location_name_0 ) ) :arg1-of exhibit-01 :arg1-of ( say-01 :arg0 ( person :quant num_0 :arg0-of say-01 ) )
exhibit-01 :arg1 exhibit-01 :source ( place :arg1-of ( exhibit-01 :arg0 person_name_1 :arg1-of ( say-01 :arg0 ( person :quant num_0 :arg1-of say-01 ) ) ) )
multi-sentence :snt1 ( youth :li num_0 :arg1 ( youth :arg1-of ( include-91 :arg2 ( person :quant num_1 :mod country_name_0 :arg0-of ( have-rel-role-91 :arg1 i :arg2 mc ) ) ) ) :li num_0 ) :snt2 ( available-02 :arg1 ( person :quant num_1 :arg1-of ( include-91 :arg2 ( person :quant num_1 :arg0-of ( have-rel-role-91 :arg1 i :arg2 mc ) ) ) ) :arg2 ( temporal-quantity temporal-quantity_num_0 :unit year :arg2-of available-02 :arg2-of available-02 ) )
meet-03 :arg0 ( and :op1 ( person :arg0-of ( have-rel-role-91 :arg1 school :arg2 child ) ) :op2 ( person :mod young ) ) :arg1 ( love-01 :arg1 ( and :op1 music :op2 art ) ) :location ( scene :location ( outside :op1 school ) )
add-01 :arg0 he :arg1 ( start-01 :arg0 they :arg1 ( use-01 :arg0 they :arg1 ( phone :arg1-of mobile-02 :poss they ) :arg2 ( purchase-01 :arg0 they :arg1 ( product :arg1-of mobile-02 :arg0-of ( save-02 :arg1 ( increase-01 :arg1 ( sell-01 :arg1 internet ) :arg2 ( sell-01 :arg1 internet ) :mod large ) ) ) ) ) :time ( before :op1 now :quant ( temporal-quantity temporal-quantity_num_0 :unit year ) ) )
learn-01 :arg0 i :arg1 ( possible-01 :arg1 ( distilled :arg0 i :arg1 ( rule :quant num_0 :mod golden ) ) )
mariners :arg0 person_name_0 :time ( before :op1 now :quant ( over :op1 ( temporal-quantity temporal-quantity_num_0 :ord ( ordinal-entity ordinal-entity_num_0 ) ) ) ) :time ( since :op1 ( night :mod three-hit ) ) :ord ( ordinal-entity ordinal-entity_num_1 )
enter-01 :arg0 ( person :poss ( country :quant num_0 :mod this ) ) :arg1 ( country :mod ( other :mod each ) ) :condition ( turn-01 :arg0 you :arg1 door :direction off )
be-located-at-91 :arg1 ( person :quant num_0 :mod this ) :arg2 chimney :condition ( close-13 :arg1 you :arg2 ( door :poss ( country :mod ( other :mod each ) ) ) )
say-01 :arg0 he :arg1 ( '' :arg0 ( and :op1 ( person :arg0-of ( have-org-role-91 :arg1 ( firm :mod ( firm :mod manage-01 ) :poss organization_name_0 ) :arg2 chief ) ) :op2 ( person_name_1 :arg0-of ( have-org-role-91 :arg1 organization :arg2 chief :arg3 ( lead-02 :arg0 person :arg1 organization ) ) ) ) :arg1 ( talent :prep-for science ) )
say-01 :arg0 ( firm :mod manage-01 ) :arg1 ( believe-01 :arg0 ( person_name_0 :arg0-of ( head-01 :arg1 ( strategy :mod globe ) :beneficiary organization_name_1 ) ) :arg1 ( talent :domain ( process-02 :arg1 decision-making ) ) )
be-located-at-91 :arg1 he :arg2 prison :time now
and :op1 ( travel-01 :arg0 ( person :arg0-of ( write-01 :arg1 ( person :quant num_0 :arg0-of write-01 :arg1-of fame-01 ) ) :arg0-of ( have-org-role-91 :arg2 ( minister :mod prime ) ) ) :arg4 city_name_0 :time ( ahead :op1 ( visit-01 :arg0 ( person_name_1 :arg0-of ( have-org-role-91 :arg2 ( minister :mod prime ) ) ) :arg1 ( person :quant num_0 :arg0-of write-01 :arg1-of fame-01 ) ) ) :time ( week :mod next ) ) :op2 ( tell-01 :arg0 person :arg1 letter :arg2 ( person_name_2 :arg0-of ( have-org-role-91 :arg1 country :arg2 ( minister :mod prime ) ) ) )
multi-sentence :snt1 ( hocas?n :mode interrogative ) :snt2 ( and :op1 ( person_name_0 :li num_0 ) :op2 ( person_name_1 :arg0-of ( win-01 :arg1 ( title :mod football ) ) ) ) :li num_0
support-01 :polarity - :arg0 person_name_0 :arg1 ( rate-entity-91 :arg1 num_0 :arg2 ( temporal-quantity temporal-quantity_num_1 :unit month ) )
clear-06 :polarity - :arg1 ( clear-01 :arg1 pope :arg2 pope ) :time yet
or :op2 ( accept-01 :polarity - :arg0 you :arg1 ( petition-01 :arg0 i :arg1 ( meet-03 :arg0 i :arg1 person_name_0 :arg1-of ( meet-01 :polarity - :arg0 person :time yet ) ) ) )
multi-sentence :snt1 ( and :op1 ( open-01 :arg0 we :location city_name_0 :mod also ) :op2 ( ' :arg1 ( korner :name ( name :op1 '' :op2 kalayc?o?lu :op3 korner ) ) ) :mod also ) :snt2 ( m?z :mode interrogative :time first )
sweet :degree so :domain that
recommend-01 :arg1 ( and :op1 ( what :arg1 ( slash :op1 yapaca :op2 n?z ) :mod only :time past ) :op2 ( recommend-01 :arg1 ( yÃ¼rÃ¼mek :polarity - :arg1 thing ) ) ) :time now
multi-sentence :snt1 ( possible-01 :arg1 ( do-02 :arg0 you :arg1 ( thing :mod only :arg1-of ( do-02 :arg0 you :time now ) ) :purpose ( look-01 :arg0 you :time past :location ( in-front-of :op1 ( front :poss you ) ) ) ) ) :snt2 ( walk-01 :polarity - :mode imperative :arg0 you )
report-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg2 official ) ) :arg1 ( treat-03 :arg1 ( person :quant num_0 ) :mod still :location hospital )
follow-02 :arg1 ( luck :poss they ) :accompanier ( person :mod country_name_0 ) :time ( night :mod that )
and :op1 ( rise-01 :arg1 ( profit-01 :arg0 company ) :arg2 ( rate-entity-91 :arg1 ( percentage-entity percentage-entity_num_0 ) :arg2 ( temporal-quantity temporal-quantity_num_1 :unit month ) ) :arg4 ( rate-entity-91 :arg1 ( percentage-entity percentage-entity_num_3 ) :arg2 ( temporal-quantity temporal-quantity_num_1 :unit month ) ) ) :op2 ( increase-01 :arg1 ( temporal-quantity temporal-quantity_num_1 :unit month :arg1-of ( follow-01 :arg2 ( thing :arg1-of announce-01 ) ) ) )
contrast-01 :arg1 ( hopeful-03 :polarity - ) :arg2 ( try-01 :arg0 location_name_0 :arg1 ( monitor-01 :arg0 ( person :arg0-of ( monitor-01 :arg1 ( room :mod die-01 ) ) :arg0-of kill-01 ) :arg1 ( rate-entity-91 :arg1 ( under :op1 ( monetary-quantity monetary-quantity_num_0 :unit m ) ) :arg2 ( temporal-quantity temporal-quantity_num_1 :unit year ) ) :arg4 die-01 ) :condition ( event :mod this ) )
contrast-01 :arg1 ( hope-01 :arg0 i :arg1 no ) :arg2 ( contrast-01 :arg1 ( execute-01 :arg1 ( chamber :mod die-01 ) :location location_name_0 :manner ( inject-01 :mod lethal ) ) :arg2 ( execute-01 :arg1 ( person :arg0-of monitor-01 ) :location person_name_1 ) )
crunch :arg1 ( tan?y?n :mod emotional :poss he ) :time ( before :op1 ( enter-01 :arg0 he :arg1 issue-02 ) ) :arg0-of ( sure-02 :arg1 ( oldu?unuzdan :mod quiet ) )
and :op1 ( examine-01 :arg0 ( and :op1 ( person :arg0-of ( have-org-role-91 :arg2 head-of-state ) ) :op2 ( person :arg0-of ( have-org-role-91 :arg1 team :arg3 ( lead-02 :arg0 person ) ) ) ) :arg1 ( laptops :mod video ) :purpose ( capture-01 :arg0 person :arg1 ( person :arg2-of suspect-01 ) ) ) :op2 ( seize-01 :arg0 team :arg1 ( record-01 :arg1 video ) :time ( visit-01 :arg0 person :arg1 ( arrest-01 :arg1 ( person :arg2-of suspect-01 ) ) ) :time ( visit-01 :arg0 person :arg1 person ) :time ( time :mod short ) )
have-03 :arg0 ( and :op1 person_name_0 :op2 ( person_name_1 :arg0-of ( have-org-role-91 :arg2 cavani ) ) ) :arg1 celebration :time ( after :op1 ( goal :poss and :prep-with person_name_2 ) )
kill-01 :arg0 ( person_name_0 :arg1-of ( include-91 :arg2 ( policeman :mod young ) ) ) :arg1 ( policeman :mod white ) :arg1-of ( cause-01 :arg0 ( live-01 :arg0 ( and :op1 ( company :arg0-of ( make-01 :arg1 law ) :arg0-of influence-01 ) :op2 ( person :arg0-of ( have-org-role-91 :arg2 official ) ) :location ( across :op1 country ) ) :purpose ( stop-01 :arg0 and :arg1 ( practice-01 :arg0 ( person :mod color :mod color ) ) ) ) ) :location ( thing :arg2-of ( name-01 :arg1 ( person :mod young ) ) )
and :op1 ( important :domain ( kill-01 :arg0 ( officer :mod police :mod white ) :arg1 person_name_0 ) :time ( after :op1 ( kill-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg1 police :arg2 officer ) :mod white ) :arg1 ( name :poss ( person_name_1 :mod young ) ) ) ) :time ( after :op1 ( kill-01 :arg0 ( and :op1 ( person :arg0-of ( have-org-role-91 :arg1 police :arg2 officer ) ) :op2 ( person :arg0-of ( make-01 :arg1 law ) ) :location ( across :op1 country ) ) :arg1 person ) ) ) :op2 ( encourage-01 :arg0 ( and :op1 ( company :arg0-of ( make-01 :arg1 law ) ) :op2 authority ) :arg2 ( stop-01 :arg0 and :arg1 ( discriminate-02 :arg1 ( person :arg1-of ( warm-07 :degree most ) ) ) ) )
multi-sentence :snt1 ( person_name_0 :arg1-of ( bear-02 :location ( city_name_1 :arg1-of ( bear-02 :location ( city_name_1 :arg1-of ( bear-02 :location ( class :name ( name :op1 democracy ) :mod culture ) ) ) ) ) ) ) :snt2 ( return-01 :arg1 person_name_2 :arg4 peace )
say-01 :arg0 ( person :arg1-of ( bear-02 :location country_name_0 ) :mod new :arg0-of ( have-org-role-91 :arg1 ( organization_name_1 :mod work-01 ) :arg3 ( apprentice-01 :arg0 person ) ) ) :arg1 ( return-01 :arg1 ( and :op1 ( escape-01 :arg0 ( class :arg0-of work-01 :source ( class :arg0-of work-01 ) :prep-against capitalism ) ) :op2 ( return-01 :arg1 ( person :arg0-of ( have-org-role-91 :arg1 capitalism :arg2 ( capital :mod ( empire :name ( name :op1 origins ) ) ) ) :prep-against capitalism ) ) ) )
search-01 :arg1 it :time ( look-01 :arg1 ( heavy :degree safe-01 ) :beneficiary person )
explain-01 :polarity - :arg1 ( murder-01 :arg1 lamb )
take-01 :arg1 ( problem :prep-under ( thing :arg1-of ( opine-01 :arg0 ( person :prep-on ( subject :mod this ) ) ) ) ) :time ( month :mod short ) :time ( after :op1 split-01 :quant short )
say-01 :arg0 ( person :arg0-of ( struggle-02 :arg1 drug :mod also ) :arg0-of ( struggle-02 :arg1 drug :mod also ) ) :arg1 ( arrest-01 :arg1 ( person :arg0-of ( struggle-02 :arg1 drug ) ) )
discuss-01 :arg0 ( west :part-of person_name_0 ) :arg1 ( redefinition :arg0 ( church :poss ( church :mod religious-group_name_1 ) ) :arg1 ( and :op1 performers :op2 media :op3 media :arg1-of ( include-01 :arg2 ( list :consist-of ( person :arg0-of own-01 ) ) ) ) ) :time recent
say-01 :arg0 ( thing :quant num_0 :arg1-of ( include-91 :arg2 ( thing :quant num_1 ) ) ) :arg1 ( opine-01 :arg0 i :mod negative )
mean-01 :arg1 num_0 :arg2 ( thing :arg1-of opine-01 :mod negative ) :li num_1
over :domain person_name_0
multi-sentence :snt1 ( value-01 :arg1 ( and :op1 safe-01 :op2 pollution ) :arg2 ( and :op1 safe-01 :op2 pollution ) ) :snt2 ( contrast-01 :arg2 ( fun :domain ( and :op1 safe-01 :op2 pollution ) :time ( ever :polarity - ) :prep-with ( and :op1 ( room :part-of someone ) :op2 ( room :poss someone ) ) ) )
contrast-01 :arg1 ( passionate :domain we ) :arg2 ( dreaming :polarity - :arg0 we )
multi-sentence :snt1 ( cost-01 :arg1 pound :arg2 ( rate-entity-91 :arg1 ( more-than :op1 ( monetary-quantity monetary-quantity_num_0 :unit dollar ) ) :arg2 ( temporal-quantity temporal-quantity_num_1 :unit year ) ) ) :snt2 ( rise-01 :mode interrogative :arg1 ( percentage-entity percentage-entity_num_1 ) :arg3 ( percentage-entity percentage-entity_num_1 ) )
set-up-03 :arg1 ( and :op1 ( deal-01 :arg2 ( art :mod plastic ) ) :op2 ( act-02 :arg0 ( person :arg0-of act-01 ) :arg4 falan ) ) :condition ( mean-01 :polarity - :arg1 music :arg2 ( fair :polarity - :domain music :mod only ) )
use-01 :polarity - :arg1 ( fee :mod ( license-01 :arg1 license-01 ) :mod kind ) :arg2 ( make-01 :arg1 ( fee :mod license-01 :mod kind ) ) :arg1-of ( say-01 :arg0 program )
reach-01 :arg0 he :arg1 ( end-01 :arg1 ( era :mod supermodel ) )
thing :arg1-of ( export-01 :arg0 country_name_0 :arg2 ( oil :quant ( quantity :degree equal :compared-to ( thing :quant num_0 ) ) ) ) :time ( before :op1 ( sanction-02 :arg1 country ) )
contrast-01 :arg1 ( '' :arg0 ( and :op1 ( person :arg0-of ( have-org-role-91 :arg1 organization_name_0 ) ) :op2 ( person :arg0-of ( have-org-role-91 :arg2 chancellor ) ) :op3 ( person :arg0-of ( have-org-role-91 :arg2 chancellor ) ) :op4 ( person :arg0-of ( have-org-role-91 :arg2 chancellor ) ) :op5 ( person :arg0-of ( have-org-role-91 :arg2 chancellor ) ) ) :arg1 ( force-01 :arg0 person :arg1 person :arg2 ( admit-01 :arg0 person :arg1 ( idea :arg1-of bad-07 :domain it ) ) ) :mod naive :time ( week :mod this ) ) :arg2 ( '' :arg0 ( person :arg0-of ( have-org-role-91 :arg1 ( and :op1 radio :op2 television ) :arg2 chancellor ) ) :arg1 ( person :arg0-of ( have-org-role-91 :arg2 chancellor ) ) :mod naive :time ( week :mod this ) )
and :op1 ( damage-01 :arg1 ( theater :mod barbed ) ) :op2 ( be-located-at-91 :arg1 ( custody :mod police ) :arg2 custody :time now ) :op3 ( accuse-01 :arg1 ( law :mod new ) :arg2 ( commit-02 :arg0 law :arg1 crime-02 ) )
resemble-01 :arg1 i :arg2 ( have-03 :polarity - :arg0 they :arg1 camera )
produce-01 :arg0 ( and :op1 country_name_0 :op2 ( export-01 :arg1 ( and :op1 produce-01 :op2 export-01 ) :arg2 country ) ) :arg1 ( factory :name ( name :op1 chocolate :op2 chocolate :op3 factory :op4 factory :op5 factory :op6 factory :op7 factory ) :poss organization_name_2 ) :location location_name_3
and :op1 ( editor :arg0 ( index :mod sell-01 :poss organization_name_0 ) :arg1 person_name_1 ) :op2 ( say-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg1 organization :arg3 ( lead-02 :arg0 person ) ) ) :arg1 ( and :op1 ( '' :arg0 person :arg1 ( level :mod previous :mod grow-01 :time ( over :op1 ( temporal-quantity temporal-quantity_num_0 :unit year ) ) ) ) :op2 ( '' :arg1 ( level :mod ( grow-01 :time ( over :op1 ( temporal-quantity temporal-quantity_num_1 :unit year ) ) :mod especially ) ) ) ) :op3 ( have-condition-91 :arg1 ( return-01 :arg1 you ) :arg2 ( return-01 :arg1 you :arg4 ( normalise :arg0 you :arg1 everything ) ) ) )
contrast-01 :arg1 ( state-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg2 ( official :mod health ) ) ) :arg1 ( possible-01 :arg1 ( methyl :arg1 alcohol :arg2 ( alcohol :mod ethyl ) :direction forward ) ) ) :arg2 ( state-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg2 ( official :mod health ) ) ) )
multi-sentence :snt1 ( sign-01 :arg0 ( theater :quant num_0 :arg1-of ( sign-02 :arg0 ( theater :quant num_0 ) ) ) :arg1 ( show-04 :arg1 ( peace :arg1-of ( sign-02 :arg0 ( theater :quant num_0 ) ) ) ) ) :snt2 ( stand-01 :arg1 ( and :op1 ( url-entity :value bizler ) :op2 ( url-entity :value bizler ) ) :arg2 ( and :op1 field :op2 ( free-04 :arg3 work-01 ) ) :location field ) :snt3 ( stand-01 :arg1 ( and :op1 ( artists :location field ) :op2 ( free-04 :arg3 peace ) ) :arg2 ( and :op1 field :op2 free-04 :op3 et-cetera ) )
and :op1 ( protest-01 :arg0 we :arg1 ( and :op1 theatre :op2 ( art :mod perform-02 ) :prep-as ( artists :arg0-of ( work-01 :location field ) ) ) ) :op2 ( call-03 :arg0 we :arg1 ( peace :prep-in ( side :part-of ( meet-03 :arg0 ( and :op1 ( person :arg0-of ( work-01 :location field ) ) :op2 ( person :arg0-of ( work-01 :location field ) ) :op3 ( person :arg0-of ( work-01 :location field ) ) :op4 ( right-05 :arg1 person :arg2 life ) :op5 ( declare-02 :arg0 we :arg1 ( side-01 :arg0 we :arg1 ( side :part-of ( peace :arg1-of unconditional ) ) ) ) ) ) ) ) )
allow-01 :arg0 this :arg1 ( moderate-03 :arg1 i :degree more :location yeme?in ) :arg1-of ( cause-01 :arg0 ( teknikle :arg1 ( and :op1 ( article :arg1-of cellulose ) :op2 ( article :arg1-of cellulose ) ) ) )
and :op1 ( earn-01 :arg0 they :arg1 zahmetsiz ) :op2 ( be-located-at-91 :arg1 they :arg2 ( agenda :mod magazinin ) )
enormous :domain impact-01 :time ( year :mod recent )
multi-sentence :snt1 ( try-01 :mode interrogative :arg0 we :arg1 ( read-01 :arg0 we :arg1 ( e-postalar :quant all ) ) ) :snt2 ( contrast-01 :arg2 ( cause-01 :mode interrogative :arg0 ( possible-01 :arg1 ( respond-01 :arg1 herzaman :mod only :arg1-of ( cause-01 :arg0 ( possible-01 :arg1 ( respond-01 :arg1 herzaman :mod only ) ) ) ) ) :frequency ( rate-entity-91 :arg3 ( temporal-quantity temporal-quantity_num_0 :unit day ) ) ) )
and :op1 ( reminded :arg1 ( person :arg0-of ( have-org-role-91 :arg1 location_name_0 :arg2 mp ) ) :degree very ) :op2 ( answer-01 :arg0 person :arg1 ( and :op1 ( '' :arg1 person ) :op2 ( exchange-01 :arg0 person :arg1 ( measure-01 :arg1 poverty ) :manner i?neleyici ) ) :op3 ( focus-01 :arg0 person :arg2 ( difficulty :arg1-of ( face-01 :arg0 ( person :mod young ) ) ) ) :arg1-of instead-of-91 )
and :op1 ( contribute-01 :arg0 ( municipal :arg0 ( ant :name ( name :op1 songs :op2 songs ) :mod person_name_0 ) ) :arg2 event ) :op2 ( accompany :arg0 municipal :arg1 he )
comes :arg1 ( form :mod original :arg1-of ( superior-01 :arg2 ( sunrise :arg1-of local-02 ) ) ) :time today
cause-01 :arg0 ( and :op1 ( investigate-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg1 ( coach :arg1-of go-on-15 ) :arg2 ( coach :mod lit ) ) ) :arg1 person_name_0 :arg2 ( coach :mod lit :location ( around :op1 person ) ) :duration ( time :arg1-of long-03 ) ) :op2 ( disappoint-01 :arg1 person :time then ) ) :arg1 ( make-02 :arg0 person :arg1 ( license-01 :arg0 person :arg1 ( license-01 :arg1 i ) :time ( end-01 :arg1 ( desk :mod front ) ) ) )
be-temporally-at-91 :arg1 ( support-01 :arg0 person_name_0 :arg1 ( support-01 :arg0 person :arg1 ( conference :mod press ) :time ( after :op1 match-03 ) ) :arg1-of open-04 ) :time ( time :arg1-of same-01 )
say-01 :arg0 he :arg1 ( contrast-01 :arg1 ( meet-03 :polarity - :arg0 he :arg1 person_name_1 :time ever ) :arg2 ( interest-01 :arg1 ( and :op1 ( person :arg0-of ( have-rel-role-91 :arg1 lamb :arg2 daughter ) ) :op2 ( music :mod blues :arg1-of ( play-11 :arg0 he ) ) ) :arg2 ( person :arg0-of ( have-rel-role-91 :arg1 lamb :arg2 daughter ) ) ) )
cause-01 :arg0 ( extradited :arg1 situation ) :arg1 ( cause-01 :arg0 ( have-03 :polarity - :arg0 i :arg1 ( thing :mod all ) ) :arg1 situation )
state-01 :arg0 ( person_name_0 :arg0-of ( have-org-role-91 :arg1 ( research-institute_name_1 :arg0-of ( have-org-role-91 :arg2 ( secretary :mod general ) ) ) :arg2 ( secretary :mod general ) ) ) :arg1 ( work-09 :polarity - :arg1 law :arg1-of long-03 :location ( country :mod other ) :duration ( temporal-quantity temporal-quantity_num_0 :unit year ) )
compares :quant num_0 :mod sunrise :prep-with ( figure :arg1-of average-03 ) :time today
seem-01 :arg1 that :condition ( person_name_0 :polarity - person_name_0 )
hit-01 :arg0 ( person :arg0-of ( oppose-01 :arg1 we ) ) :arg1 ( person :arg0-of ( oppose-01 :arg1 we ) :arg1-of clash )
shoot-02 :arg1 ( oppose-01 :arg1 organization_name_0 )
say-01 :arg0 ( person :arg0-of sing-01 ) :arg1 ( and :op1 ( word-01 :arg0 ( person :arg0-of ( read-01 :arg1 person_name_0 ) ) :arg1 ( write-01 :arg0 person :arg1 ( live-01 :arg0 person ) ) ) :op2 ( see-01 :arg0 person :arg1 ( live-01 :arg0 person ) ) :op3 ( see-01 :arg0 person :arg1 ( person :arg0-of ( read-01 :arg1 person ) ) ) ) :frequency often
multi-sentence :snt1 ( remember-01 :arg0 i :arg1 ( thing :arg1-of ( remember-01 :arg0 i :source ( word :arg1-of beautiful-02 ) ) :arg1-of ( remember-01 :arg0 i :source ( word :arg1-of beautiful-02 ) ) ) :location here :arg1-of ( remember-01 :arg0 i :source ( word :arg1-of beautiful-02 ) ) ) :snt2 ( see-01 :polarity - :arg0 they :arg1 it ) :snt3 ( see-01 :arg0 they :arg1 it )
say-01 :arg0 he :arg1 ( and :op1 ( kill-01 :arg1 ( person :quant num_0 :arg1-of die-01 ) ) :op2 ( say-01 :arg0 he :arg1 ( die-01 :arg1 ( person :quant num_0 :arg1-of die-01 ) ) ) )
multi-sentence :snt1 ( cause-01 :arg0 this :arg1 ( come-01 :arg1 ( season :mod new :mod zarafet ) :direction back ) ) :snt2 ( come-04 :arg1 ( season :mod new :mod zarafet ) :arg2 back )
multi-sentence :snt1 ( '' :domain this :time ( season :mod new :mod ( season :mod new ) ) ) :snt2 ( '' :mode expressive )
and :op1 ( person_name_0 :arg0-of ( have-org-role-91 :arg1 ( person_name_1 :arg0-of ( have-org-role-91 :arg2 ( minister :mod prime ) ) ) :arg2 ( minister :mod prime ) ) ) :op2 ( person :arg0-of ( have-org-role-91 :arg1 ( cabinet :poss person ) :arg2 ( minister :mod prime ) ) ) :time ( before :op1 now :quant ( temporal-quantity temporal-quantity_num_0 :unit day ) ) :time ( before :op1 now :quant ( temporal-quantity temporal-quantity_num_1 :unit day ) ) :time ( before :op1 now :quant ( temporal-quantity temporal-quantity_num_1 :unit day ) )
and :op1 ( person_name_0 :arg0-of ( have-org-role-91 :arg2 mr. ) ) :op2 ( pain-01 :arg1 head ) :op3 ( state-01 :arg0 person :arg1 ( lose-02 :arg0 person :arg1 consciousness ) :time then )
multi-sentence :snt1 ( say-01 :arg0 ( person :mod young :poss person_name_0 ) :arg1 ( expect-01 :polarity - :arg0 person :arg1 ( select-01 :arg1 person :arg2 ( mete :mod gumurhan ) ) ) ) :snt2 ( prepare-02 :arg1 we :arg2 surprise-01 )
contrast-01 )
say-01 :arg0 ( thing :arg1-of draft-01 ) :arg1 ( or :op1 ( possible-01 :polarity - :arg1 ( provide-01 :arg0 ( source :mod other :location ( outside :op1 country_name_0 ) ) :arg1 ( source :mod other ) :manner ( case :mod serious ) ) ) :op2 ( cost-01 :arg1 ( produce-01 :arg0 ( and :op1 company :op2 firm ) :arg1 ( and :op1 product :op2 firm ) :mod additional ) :arg2 ( case :mod serious ) ) )
say-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg1 city_name_0 :arg2 ( minister :mod vice ) ) ) :arg1 ( leave-11 :arg0 person :arg1 you :manner alone ) :arg2 ( and :op1 ( want-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg1 organization_name_2 :arg2 minister ) ) :arg1 ( have-org-role-91 :arg0 person :arg1 ( person :arg0-of ( have-org-role-91 :arg1 organization :arg2 ( minister :mod general ) ) ) :arg2 ( friend :mod europeans ) ) ) :op2 ( say-01 :arg0 person :arg1 ( come-01 :polarity - :arg1 ( person :arg0-of ( have-org-role-91 :arg1 ( government-organization_name_4 :poss we ) :arg2 capital ) ) :arg4 ( point :mod ( leave-11 :arg0 person ) ) ) ) )
law :polarity - :domain ( law :polarity - ) :mod ( law :polarity - )
and :op1 ( develop-02 :arg1 ( and :op1 person_name_0 :op2 fair ) :prep-as ball ) :op2 ( represent-01 :arg0 ( thing :arg1-of ( know-01 :polarity - ) ) :arg1 ( option :mod attack-01 ) :concession ( even-if :op1 ( know-01 :polarity - :arg1 quality ) ) )
multi-sentence :snt1 ( and :op1 ( speak-01 :arg0 you :arg2 ( and :op1 ( speak-01 :arg0 you ) :op2 ( tutu?sa :arg0 you :arg1 ( tutu?sa :poss you ) ) ) ) :op2 ( tutu?sa :arg0 you :arg1 ( tutu?sa :name ( name :op1 kirpikleriniz :op2 s?k?yor :op3 s?k?yor ) ) ) ) :snt2 ( help-01 :arg0 organization_name_0 :arg1 person )
say-01 :arg0 he :arg1 ( important :degree very :domain ( discover-01 :arg1 ( and :op1 ( music :mod new ) :op2 ( effort :purpose ( promote-02 :arg1 ( work-01 :arg0 radio ) ) ) ) ) )
and :op1 ( person_name_0 :mod ( world :quant num_0 :mod world ) :location country_name_1 :prep-against ( play-01 :arg0 ( team :consist-of ( person :arg0-of ( play-01 :arg1 ( team :poss person_name_2 ) ) ) ) ) :mod also ) :op2 ( experience-01 :arg0 person :arg1 leg )
know-02 :arg1 he :arg2 ( person_name_0 :arg0-of ( have-org-role-91 :arg2 senator ) ) :arg1-of ( cause-01 :arg0 ( honoured :arg1 ( birth-01 :quant num_0 :mod good :mod '' ) :prep-with event ) )
anti-gun :arg0 organization_name_0 :arg1 video
have-concession-91 :arg1 ( think-01 :arg0 i :arg1 ( wrong-04 :arg1 ( thing :arg1-of ( do-02 :arg0 i ) ) ) :mod still ) :arg2 ( express-01 :arg1 ( possible-01 :arg1 ( express-01 :arg0 ( person :mod this ) :arg1 ( acknowledge-01 :arg0 person :arg1 '' ) ) ) )
change-01 :arg1 this :time now
say-01 :arg0 person_name_0 :arg1 ( '' :frequency ( rate-entity-91 :arg3 ( temporal-quantity temporal-quantity_num_0 :unit day ) ) :frequency ( rate-entity-91 :arg3 ( temporal-quantity temporal-quantity_num_0 :unit day ) ) )
mr :arg0 ( person :arg0-of ( lead-02 :arg1 continent_name_0 :mod ( old :degree most ) ) ) :arg1 person_name_1 :time ( early :op1 ( year :mod this ) :degree more ) :time ( hill :mod merdivenlerden :mod merdivenlerden )
hem?ireydi :arg1 ( company :mod online ) :mod variety
say-01 :arg0 person_name_0 :arg1 ( contrast-01 :arg1 ( belong-01 :polarity - :arg0 ( and :op1 ( person :mod country_name_1 ) :op2 ( person :arg0-of ( belong-01 :arg1 country ) ) ) :arg1 ( person :mod country ) ) :arg2 ( criticised :arg1 ( refugee :arg1-of grow-01 ) :arg2 ( refugee :arg1-of grow-01 ) ) )
multi-sentence :snt1 ( 5-rubber :mode interrogative :source location_name_0 :destination ( deficit :mod deficit ) ) :snt2 ( stankÃ¶y :arg1 ( and :op1 ( person :arg0-of ( have-org-role-91 :arg1 country_name_1 :arg2 head-of-state ) ) :op2 ( person :arg0-of ( have-org-role-91 :arg1 country_name_2 :arg2 location_name_3 ) ) :op3 ( person :arg0-of ( belong-01 :arg1 country_name_4 ) ) :op4 ( person :arg0-of ( belong-01 :arg1 country_name_4 ) ) :op5 ( person :arg0-of ( belong-01 :arg1 country_name_4 ) ) ) )
contrast-01 :arg2 ( and :op1 ( appreciate-02 :arg0 ( and :op1 country_name_0 :op2 ( person :mod country_name_1 ) ) :arg1 ( effort :purpose ( deal-01 :arg0 and :arg2 crisis ) ) ) :op2 ( contrast-01 :arg1 ( try-01 :arg0 ( and :op1 country :op2 country ) :arg1 ( deal-01 :arg0 and :arg2 crisis ) ) :arg2 ( lama :arg1 ( thing :arg2-of solve-01 :mod ( temporary :mod just ) ) ) ) )
and :op1 ( wake-up-02 :arg1 ( and :op1 person_name_0 :op2 person_name_1 :op3 person_name_2 :op4 person_name_3 :op5 person_name_4 :op6 person_name_5 :op7 person_name_6 ) ) :op2 ( take-01 :arg0 jury :arg1 ( and :op1 ( person_name_6 :arg0-of ( have-org-role-91 :arg1 person_name_6 ) ) :op2 ( person_name_6 :arg0-of ( have-org-role-91 :arg1 person_name_6 :arg2 person_name_7 ) ) ) ) :time ( wake-up-02 :arg1 candidate ) :time ( wake-up-02 :arg1 candidate )
erodes :arg0 ( and :op1 journalist :op2 ( person :arg0-of write-01 ) :op3 ( person :arg0-of write-01 ) :op4 ( society :mod turkish ) ) :arg1 ( free-04 :arg1 and :arg2 ( attack-01 :quant all ) )
possible-01 :arg1 ( respond-01 :arg0 we :arg1 ( need-01 :arg0 ( person :arg0-of consume-01 ) :arg1 ( person :arg0-of consume-01 :arg1-of differ-02 ) ) ) :source city_name_0 :destination city_name_1
contrast-01 :arg2 ( lead-02 :arg0 ( person_name_0 :arg0-of ( have-org-role-91 :arg1 ( country :arg0-of ( have-org-role-91 :arg2 ( minister :mod foreign ) ) ) :arg2 ( minister :mod foreign ) ) ) :arg1 ( border-01 :arg1 ( country :poss he ) :arg2 country_name_1 ) :time ( after :op1 ( telden :arg0 person :arg1 ( and :op1 ( stop-01 :arg0 person :arg1 ( flow-01 :arg1 ( person :arg0-of immigrate-01 ) ) ) :op2 ( plan-01 :arg0 person :arg1 ( attract-01 :arg0 person :arg1 ( theater :mod barbed ) ) :mod also ) ) ) ) )
multi-sentence :snt1 ( resemble-01 :arg1 ( resemble-01 :arg2 ( thing :arg1-of ( resemble-01 :arg2 ( thing :arg1-of ( resemble-01 :arg2 ( thing :arg1-of ( resemble-01 :arg2 ( thing :arg1-of ( resemble-01 :arg2 ( thing :arg1-of ( resemble-01 :arg2 ( thing :arg1-of ( resemble-01 :arg2 ( thing :arg1-of ( precede-01 :arg2 program ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) :snt2 ( and :op1 ( need-01 :arg0 they :arg1 ( man :mod ( especiaily :degree more ) ) ) :op2 ( be-located-at-91 :arg1 you :arg2 ( under :op1 ( rate :mod suicide :duration ( temporal-quantity temporal-quantity_num_1 :unit year ) ) ) :arg1-of ( resemble-01 :arg2 ( rate :mod suicide :duration ( temporal-quantity temporal-quantity_num_1 :unit year ) :arg1-of ( resemble-01 :arg2 this ) ) ) ) )
use-01 :arg0 ( woman :mod police ) :arg1 ( thing :arg1-of ( base-02 :arg2 day ) ) :arg2 ( say-01 :arg0 ( woman :mod police ) :arg1 ( investigate-01 :mode interrogative :arg1 ( have-03 :mode interrogative :arg0 drug :arg1 role :manner die-01 ) ) )
issue-01 :arg0 ( person_name_0 :arg0-of ( rival-01 :arg1 ( person_name_1 :arg0-of ( rival-01 :arg1 ( person_name_1 :arg0-of ( rival-01 :arg1 person ) ) ) ) ) ) :arg1 ( state-01 :arg1-of follow-04 ) :time ( date-entity year_date-entity_0 ) :location ( and :op1 ( talk-02 :arg2 location_name_0 ) :op2 ( have-frequency-91 :arg2 ( temporal-quantity temporal-quantity_num_0 :unit year ) ) )
transfers :arg0 person_name_0
and :op1 ( possible-01 :arg1 ( dundar :arg0 ( and :op1 ( imprison-01 :arg1 journalist :arg2 journalist ) :op2 ( virtue :poss rose ) ) :arg1 photo ) :op2 ( featuring :arg0 ( virtues :arg1 rose ) :arg1 photo :condition ( since :op1 ( be-located-at-91 :arg1 you :arg2 ( under :op1 ( dark :mod well ) ) ) ) ) ) :op3 ( banners :arg0 ( and :op1 ( person :arg0-of ( read-01 :arg1 photo ) ) :op2 ( person :arg0-of ( have-rel-role-91 :arg1 publication :arg2 banners ) ) :op3 ( person :arg0-of ( have-rel-role-91 :arg1 person :arg2 banners ) ) :op4 ( person :arg0-of ( have-rel-role-91 :arg1 person :arg2 banners ) ) :op5 ( person :arg0-of ( have-rel-role-91 :arg1 person :arg2 banners ) ) :op6 ( person :arg0-of ( have-rel-role-91 :arg1 person :arg2 banners ) ) :op6 ( person :arg0-of ( have-rel-role-91 :arg1 person :arg2 banners ) ) :op7 ( person :arg0-of ( have-rel-role-91 :arg1 person :arg2 banners ) ) ) )
issue-02 :arg0 ( thing :arg2-of ( price-01 :arg1 ( thing :arg2-of ( price-01 :arg1 stock ) :poss organization_name_0 ) ) ) :time ( early :op1 ( morning :mod early :part-of city_name_1 ) )
cause-01 :arg0 ( share-01 :arg0 organization_name_0 :arg1 ( thing :arg2-of ( price-01 :arg1 right ) ) ) :arg1 ( thing :arg2-of ( price-01 :arg1 right ) ) :time morning :time ( morning :mod early ) :location organization_name_1
trust-01 :arg1 organization_name_0 :arg2 country_name_1
multi-sentence :snt2 ''
contrast-01 :arg1 ( win-01 :arg0 ( person :arg0-of ( win-01 :arg1 ( match-03 :quant num_0 :mod last :poss person ) :time ( ahead :op1 ( team :consist-of ( person :arg0-of ( have-rel-role-91 :arg1 person :arg2 black-and-white ) ) ) ) ) ) :arg2 ( idmanyurdu :location ( in-front-of :op1 ( team :consist-of ( person :arg0-of ( have-rel-role-91 :arg1 person :arg2 black-and-white ) ) ) ) ) ) :arg2 ( continue-01 :arg0 person :arg1 ( lead-02 :arg0 person ) :mod also )
contrast-01 :arg1 ( possible-01 :arg1 ( and :op1 ( get-01 :arg0 they :arg1 ( license-01 :arg1 i ) ) :op2 ( need-01 :arg0 they :arg1 ( let-down-04 :arg0 they :arg1 i ) ) ) ) :arg2 ( doubt-01 :polarity - :arg0 i :arg1 ( thing :arg1-of ( think-01 :arg0 i :arg2 they ) ) )
see-01 :arg0 ( and :op1 ( person :arg0-of ( play-01 :arg1 ( thing :arg1-of ( gift-01 :arg2 organization_name_0 ) ) ) ) :op2 ( person_name_2 :arg0-of ( have-org-role-91 :arg1 person_name_2 :arg2 verad ) ) ) :arg1 ( and :op1 ( person :arg0-of ( play-01 :arg1 ( thing :arg1-of ( gift-01 :arg2 organization ) ) ) ) :op2 ( person_name_2 :arg0-of ( have-org-role-91 :arg1 person_name_2 :arg2 verad ) ) ) :arg2 ( level :arg1-of ( high-02 :degree more ) :location continent_name_3 ) :time ( month :mod last ) :arg1-of ( cause-01 :arg0 ( bring-01 :arg0 ( level :arg1-of ( high-02 :degree more ) :location continent_name_3 ) :arg1 ( rest :part-of ( corner :mod far :part-of ( person_name_4 :arg0-of ( think-01 :arg1 ( think-01 :arg0 ( anybody :arg0-of ( think-01 :arg1 ( wrong-04 :polarity - :arg1 netting ) ) ) ) ) :arg1 rest ) ) ) ) )
show-01 :arg0 report-01 :arg1 ( thing :arg2-of ( price-01 :arg1 oil :arg1-of ( cause-01 :arg0 ( cut-02 :arg1 ( monetary-quantity :arg1-of ( cost-01 :arg2 ( monetary-quantity :arg1-of ( cost-01 :arg2 ( monetary-quantity :arg1-of ( cost-01 :arg2 ( monetary-quantity :arg1-of ( cost-01 :arg2 ( monetary-quantity :arg1-of ( cost-01 :arg2 ( monetary-quantity :arg1-of ( cost-01 :arg2 ( monetary-quantity :arg1-of ( low-04 :degree more ) ) ) ) ) ) ) ) ) :mod ( large :degree most :compared-to ( monetary-quantity :arg1-of ( cost-01 :arg2 ( monetary-quantity :arg1-of ( cost-01 :arg2 ( monetary-quantity :arg1-of ( cost-01 :arg2 ( monetary-quantity :arg1-of ( cost-01 :arg2 ( monetary-quantity :arg1-of ( cost-01 :arg2 ( monetary-quantity :arg1-of ( cost-01 :arg2 ( monetary-quantity :arg1-of ( cost-01 :arg2 ( monetary-quantity :arg1-of ( low-04 :degree more ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) :arg3 ( monetary-quantity :arg2-of ( price-01 :arg1 oil ) :mod ( large :degree most ) :arg1-of ( cost-01 :arg2 ( monetary-quantity monetary-quantity_num_1 :unit dollar ) ) ) )
post-01 :arg0 ( person_name_0 :arg0-of ( have-org-role-91 :arg1 ( city :mod day ) :arg2 correspondent ) ) :arg2 ( person :arg0-of ( have-org-role-91 :arg1 ( mail :mod day ) :arg2 correspondent ) )
person_name_0 :location peninsula_name_1
show-01 :arg0 ( survey-01 :time recent :mod some ) :arg1 ( get-02 :arg0 ( person :mod country_name_0 ) :arg1 ( thing :arg2-of result-01 ) :mod ( only :polarity - ) :location here )
multi-sentence :snt1 ( write-01 :arg0 ( study :arg1-of ( conduct-01 :arg0 ( surgery-01 :arg2 ( surgery-01 :arg2 surgery-01 ) :poss person_name_0 ) ) :arg0-of ( write-01 :arg1 article ) ) :arg1 ( time :arg1-of long-03 :time-of ( manifestation :arg1 article ) ) ) :snt2 ( time :arg1-of long-03 )
multi-sentence :snt1 ( write-01 :arg0 he :arg1 ( and :op1 ( write-01 :arg0 he ) :op2 ( expert-01 :arg1 ( person :arg1-of expert-01 ) :arg2 ( surgery-01 :arg1 publication_name_1 ) ) ) :time ( after :op1 ( surgery-01 :arg1 ( surgery-01 :arg2 ( article :poss person_name_0 ) ) ) ) ) :snt2 ( say-01 :arg0 ( person :arg1-of expert-01 ) :arg1 ( take-10 :arg0 ( rate :mod mortality :mod person_name_1 ) :arg1 ( time :arg1-of long-03 ) ) )
and :op1 ( write-01 :arg0 ( person_name_0 :arg0-of write-01 :arg0-of ( write-01 :arg1 ( article :topic ( and :op1 surgery-01 :op2 ( rate :mod die-01 ) ) ) ) ) :arg1 ( time :arg1-of long-03 ) ) :op2 ( say-01 :arg0 ( person :arg1-of expert-01 ) :arg1 ( take-10 :arg0 ( surgery-01 :arg1 person_name_1 ) :arg1 ( time :arg1-of long-03 ) ) )
and :op1 ( be-located-at-91 :arg1 ( store :name ( name :op1 iga ) :poss organization_name_0 :location location_name_1 ) :arg2 location_name_1 ) :op2 ( try-01 :arg0 and :arg1 ( protect-01 :arg0 and :arg1 ( person :mod sald?r?s?ndan ) ) )
multi-sentence :snt1 person_name_0 :snt2 ( search-01 :arg0 ( person :quant num_0 :arg1-of ( include-91 :arg2 ( person :quant num_1 :arg0-of ( have-org-role-91 :arg1 organization_name_1 ) ) ) ) :arg1 ( and :op1 house :op2 room ) ) :li num_0
say-01 :arg0 ( person :quant num_0 :arg1-of ( include-91 :arg2 ( person :arg0-of ( have-org-role-91 :arg1 ( government-organization :arg0-of govern-01 ) :arg2 member ) ) ) :arg0-of ( have-org-role-91 :arg1 ( government-organization :arg0-of govern-01 ) :arg2 ( minister :mod prime ) ) :arg0-of ( have-org-role-91 :arg1 ( government-organization :arg0-of govern-01 ) :arg2 ( minister :mod prime ) ) :arg0-of ( have-org-role-91 :arg1 ( government-organization :arg0-of govern-01 ) :arg2 ( minister :mod prime ) ) :arg0-of ( have-org-role-91 :arg1 ( government-organization :arg0-of govern-01 ) :arg2 ( minister :mod prime ) ) :arg0-of ( have-org-role-91 :arg1 ( government-organization :arg0-of govern-01 ) :arg2 ( minister :mod prime ) ) :arg0-of ( have-org-role-91 :arg1 ( government-organization :arg0-of govern-01 ) :arg2 member ) ) :time ( week :mod next ) :time ( week :mod next )
name :mod ( big :degree most ) :domain person_name_0 :location ( industry :mod fashion ) :mod also :mod also
hinted :arg0 person_name_0 :arg1 public
time :time-of ( wraps :arg1 wound-01 )
plan-01 :arg1 ( and :op1 holiday :op2 leisure )
and :op1 ( come-01 :arg1 person_name_0 :arg3 ( game :mod team :mod reserve-01 ) ) :op2 ( surprise-01 :arg0 ( man :mod young :mod impress-01 :arg1-of ( talk-01 :arg0 i :arg2 he :arg1-of limit-01 ) ) :arg1 i )
list-01 :arg1 ( economy :poss ( economy :mod globe ) ) :arg2 ( concern-01 :arg1 ( economy :mod globe ) ) :arg0-of ( cause-01 :arg1 ( recommend-01 :arg1 ( factor :polarity - :prep-in ( process-02 :arg1 ( get-01 :arg1 black-04 ) ) :mod massive ) ) )
keep-04 :arg1 ( kefir :mod tok :arg1-of ( features :time ( time :arg1-of same-01 ) :mod also ) ) :arg2 ( keep-02 :arg1 ( kefir :mod tok ) )
say-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg1 ( country_name_0 :mod tennis ) :arg2 chief ) ) :arg1 ( and :op1 ( damage-01 :arg1 ( situation :mod environment :arg1-of ( damage-01 :time recent ) ) ) :op2 ( deserve-01 :arg0 person :arg1 ( praise :degree more :compared-to criticize-01 ) ) )
say-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg1 country_name_0 :arg2 president ) ) :arg1 ( and :op1 ( person :arg1-of injure-01 :arg0-of ( have-org-role-91 :arg1 ( person_name_1 :arg0-of ( have-org-role-91 :arg2 president ) ) :arg2 ( person :arg1-of injure-01 ) ) ) :op2 ( person_name_2 :arg0-of ( deserve-01 :arg1 ( praise :degree more :compared-to criticize-01 ) ) ) )
say-01 :arg0 he :arg1 ( and :op1 ( sponsor-01 :arg0 ( and :op1 person_name_0 :op2 person_name_1 ) :arg1 ( meet-03 :arg0 ( person :quant num_0 :arg1-of ( include-91 :arg2 ( person :arg0-of ( depend-01 :polarity - ) :arg0-of ( depend-01 :polarity - ) :arg0-of ( depend-01 :polarity - ) :arg0-of ( depend-01 :polarity - ) :arg0-of ( depend-01 :polarity - ) :arg0-of ( depend-01 :polarity - ) :arg0-of ( depend-01 :polarity - ) ) ) ) ) :op2 ( thing :arg1-of ( say-01 :arg0 he ) ) ) )
multi-sentence :snt1 ( say-01 :arg1 ( cease-01 :arg0 ( person_name_0 :arg0-of ( have-org-role-91 :arg1 organization_name_1 :arg2 professor ) ) :arg1 ( faculty :mod literature ) ) ) :snt2 ( investigate-01 :arg1 ( investigate-01 :mod administrate-01 ) )
say-01 :arg0 he :arg1 ( person :arg1-of black-05 :domain ( person_name_0 :arg0-of ( use-01 :arg1 mrpooni ) ) :location room :mod only ) :arg1-of ( cause-01 :arg0 ( speak-01 :arg0 person :arg1 ( diversity :poss ( people :prep-on ( '' :mod white ) ) ) ) :arg1-of ( say-01 :arg0 he ) )
and :op1 person_name_0 :op2 organization_name_1 :op3 organization_name_1
call-01 :arg0 he :arg1 product_name_0 :arg2 ( and :op1 ( person :arg0-of ( lead-02 :arg1 ( resource :mod central :mod this ) ) ) :op2 ( content :topic ( talk-01 :arg0 ( person_name_2 :arg0-of ( have-org-role-91 :arg1 city :arg2 mp ) ) :arg1 ( message-01 :arg0 person ) ) ) )
and :op2 ( and :op1 ( answer-01 :arg1 they :arg2 they ) :op2 ( write-01 :arg0 they :arg1 ( advise-01 :arg0 they :arg1 we :arg2 ( advise-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg1 ( government-organization :arg0-of ( govern-01 :arg1 country-region ) ) :arg2 ( friend :mod haz?rlanan ) ) ) ) ) ) )
event :mod amr-unknown :time ( increase-01 :arg0 government-organization_name_0 :arg1 ( rate :mod interest ) )
cause-01 :arg0 ( order-02 :arg0 ( person :arg0-of ( have-rel-role-91 :arg1 person :arg2 husband ) ) :arg1 ( person :arg0-of ( have-rel-role-91 :arg1 person :arg2 husband ) ) ) :time ( date-entity year_date-entity_0 month_date-entity_0 )
and :op1 ( be-located-at-91 :arg1 organization_name_0 :arg2 ( market :mod employ-01 ) :time ( month :mod this ) ) :op2 ( see-01 :arg0 we :arg1 ( decline-01 :arg1 ( and :op1 ( employ-01 :polarity - ) :op2 develop-01 ) ) )
multi-sentence :snt1 ( contrast-01 :arg2 ( recommend-01 :arg1 ( get-01 :arg0 ( person_name_0 :arg0-of ( get-01 :arg1 ( laugh-01 :mod last ) ) ) :arg1 ( laugh-01 :mod last ) :condition ( do-02 :polarity - :arg0 you ) ) ) ) :snt2 ( possible-01 :arg1 ( relate-01 :arg1 bachelor :arg2 information ) )
responsible-03 :arg0 ( person_name_0 :mod country_name_1 ) :arg1 ( and :op1 ( continents :quant num_0 ) :op2 ( continents :location continent_name_2 ) )
and :op1 ( return-01 :arg1 ( person :arg0-of injure-01 ) :arg3 ( injure-01 :arg1 person ) :frequency sometimes :purpose ( strengthen-01 :arg0 person :arg1 ( body :poss you ) ) :frequency sometimes ) :op2 ( possible-01 :arg1 ( live-01 :arg0 you :manner vulnerable :purpose ( injure-01 :arg1 body ) ) ) :op3 ( process-02 :arg1 ( win-01 :arg0 person_name_0 :arg1 ( fight-01 :arg0 person ) ) )
provide-01 :arg0 ( person_name_0 :arg0-of ( play-01 :arg1 football ) ) :arg1 ( model :mod permanent )
and :op1 ( seviyordum :arg0 person_name_0 :degree very :time so-far ) :op2 ( tell-01 :arg0 person :arg2 i :mod only )
encourages :arg0 ( paradise :poss country_name_0 :time ( date-entity dayperiod_date-entity_0 ) ) :manner health
and :op1 ( cause-01 :arg0 investigate-01 :arg1 ( take-01 :arg1 ( signatures :arg1-of ( take-01 :arg3 custody ) ) ) ) :op2 ( start-01 :arg1 ( remove-01 :arg1 signatures :arg2 office ) )
multi-sentence :snt1 ( and :op1 ( font :arg0 city_name_0 :arg1 ( brand :name ( name :op1 underground ) :mod underground ) ) :op2 ( turn-02 :arg0 city :arg1 brand :arg2 tank ) :op3 ( turn-02 :arg0 city :arg1 brand :arg2 tank ) ) :snt2 ( say-01 :arg0 political-party :arg1 ( travel-01 :arg0 you :arg3 ( dlr :quant num_0 :mod september ) ) )
refuse-01 :arg0 person_name_0 :arg1 ( respond-01 :arg0 person :arg1 ( thing :arg1-of comment-01 ) )
and :op1 ( shoot-02 :arg1 i :location location_name_0 ) :op2 ( have-03 :arg0 ( person :arg0-of ( have-03 :polarity - :arg1 ( person :mod young ) ) ) :arg1 ( and :op1 ( person :mod young ) :op2 ( person :arg0-of ( have-org-role-91 :arg1 revenue :arg3 teach-01 ) ) :op3 ( person :arg0-of ( have-org-role-91 :arg1 revenue :arg3 teach-01 ) ) :op4 ( person :arg0-of ( have-org-role-91 :arg1 revenue :arg3 teach-01 ) ) :op5 ( person :arg0-of ( have-org-role-91 :arg1 revenue :arg3 teach-01 ) ) ) )
say-01 :arg0 ( person_name_0 :arg0-of ( have-org-role-91 :arg1 ( person_name_1 :arg0-of ( have-org-role-91 :arg1 country :arg2 ( minister :mod foreign ) ) ) :arg2 ( minister :mod foreign ) ) ) :arg1 ( recommend-01 :arg1 ( try-01 :arg1 ( try-01 :arg1 he ) ) )
possible-01 :arg1 ( and :op1 ( limit-01 :arg1 ( move-01 :arg1 ( rate-entity-91 :arg1 ( monetary-quantity monetary-quantity_num_0 :unit dollar ) :arg2 ( volume-quantity volume-quantity_num_1 :unit gallon ) ) ) ) :op2 ( possible-01 :arg1 ( increase-01 :arg1 ( pressure-01 :manner live ) ) ) ) :arg1-of long-03
destroy-01 :arg0 ( thing :arg1-of ( say-01 :arg0 ouster ) ) :arg1 ( destroy-01 :arg0 ( mass :arg0-of pain-01 ) :arg1 ( site :mod holy ) ) :time ( before :op1 now :quant ( few :op1 ( temporal-quantity temporal-quantity_num_0 :unit day ) ) )
have-concession-91 :arg1 ( say-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg1 publication_name_0 :arg2 ( poll-01 :arg0 person ) ) :mod new ) :arg1 ( agree-01 :arg0 person :arg2 person_name_2 ) ) :arg2 ( issue-02 :arg0 relate-01 :arg1-of relate-01 ) :li num_0
charge-05 :arg1 person_name_0 :arg2 ( and :op1 ( race :quant num_0 ) :op2 ( person :quant num_2 :arg1-of ( find-01 :arg0 person ) ) )
and :op1 ( last-01 :arg1 ( period :mod short ) :arg2 ( period :mod short ) ) :op2 ( plan-01 :arg0 i :duration ( temporal-quantity temporal-quantity_num_0 :unit day ) )
and :op1 num_0 :op2 arkada?lar?n?za :op3 arkada?lar?n?za
and :op1 ( right-05 :polarity - :arg1 ( person :arg0-of ( have-org-role-91 :arg1 organization_name_0 :arg2 member ) ) :arg2 ( vote-01 :arg0 person :arg1 ( and :op1 ( person :arg0-of ( have-org-role-91 :arg2 member ) ) :op2 ( person_name_1 :arg0-of ( pressure-01 :arg1 ( raise-01 :arg0 person :arg1 rate ) ) ) ) ) ) :op2 ( refer-01 :arg0 person :arg1 ( thing :arg1-of ( decide-01 :arg3 num_0 ) ) )
multi-sentence :snt1 ( contrast-01 :arg2 ( think-01 :arg0 i :arg1 ( increase-01 :polarity - :arg0 i :arg1 ( excuse-02 :arg1 ( and :op1 ( wait-01 :arg1 they :arg2 ( wait-01 :arg1 they :arg2 ( bit :mod little ) ) ) :op2 ( provide-01 :arg0 they :arg1 enough ) ) ) ) ) ) :snt2 ( say-01 :arg0 he )
Ã¶?renildi :arg1 hotel :arg2 ( and :op1 ( person :mod foreign ) :op2 ( person :arg0-of ( have-org-role-91 :arg1 organization_name_0 :arg2 officer ) ) :op3 ( person :arg0-of ( have-org-role-91 :arg1 organization_name_1 :arg2 officer ) ) :op4 ( person :arg0-of ( have-org-role-91 :arg1 organization :arg2 officer ) ) ) :prep-in particular
move-01 :polarity - :arg1 ( person :arg0-of ( have-rel-role-91 :arg1 he :arg2 wife :time future ) :arg0-of ( have-rel-role-91 :arg1 he :arg2 wife ) ) :arg2 ( corridor :arg1 person :arg1-of same-01 ) :degree very
or :op1 ( sleep-01 :arg0 person ) :op2 ( study-01 :polarity - :arg0 person ) :manner way
or :op1 ( sleep-01 :arg0 person ) :op2 ( inspire-01 :arg0 that :arg1 person :arg2 ( class :arg0-of work-01 ) ) :manner way
contrast-01 :arg1 ( appear-01 :arg1 ( bag :mod small ) :time already :location ( face :part-of we ) :time already ) :arg2 ( reduce-01 :arg0 ( time :mod this ) :arg1 ( case-03 :arg1 ( bag :arg0-of handle-01 :mod large ) ) )
person_name_0 :mod ( culinary :degree very )
do-02 :arg0 i :arg1 ( thing :poss i ) :mod actual
give-01 :mode imperative :arg0 you :arg1 message :arg2 we
and :op1 ( put-01 :arg0 ( and :op1 ( market :mod labor ) :op2 ( market :mod labor ) ) :arg1 ( and :op1 ( market :mod labor ) :op2 inflation ) :ord ( ordinal-entity ordinal-entity_num_0 ) ) :op2 ( important :degree most :domain ( thing :arg1-of ( say-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg1 ( firm :name ( name :op1 simsar ) ) :arg2 organization_name_0 ) ) ) ) )
say-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg1 ( firm :mod trade-01 :poss organization_name_0 ) :arg2 ( chief :mod chief ) ) ) :arg1 ( thing :mod ( important :degree most ) :domain ( thing :mod ( important :degree most ) :domain ( and :op1 ( market-01 :arg1 ( and :op1 ( market :ord ( ordinal-entity ordinal-entity_num_0 ) ) :op2 ( market :mod labor ) ) ) :op2 ( thing :arg1-of ( say-01 :arg0 person_name_1 ) ) ) ) ) :manner frank
and :op1 ( speak-01 :arg0 ( person :arg0-of ( produce-01 :arg1 ( weed :mod city ) ) ) :arg2 ( person :arg0-of report-01 ) :mod also ) :op2 ( cause-01 :arg0 ( and :op1 ( person :arg0-of report-01 ) :op2 final ) :arg1 ( reason :arg0-of ( cause-01 :arg1 ( receive-01 :polarity - :arg0 ( person :ord ( ordinal-entity ordinal-entity_num_0 ) :arg0-of ( have-org-role-91 :arg2 contestants ) ) :arg1 ( awards :mod any ) ) ) ) )
burn-01 :arg0 terrorist :arg1 school :location location_name_0
high-02 :mode interrogative :polarity - :arg1 ( person :mod other )
person :mode interrogative :mod other :domain ( person :mod other )
say-01 :arg1 ( or :op1 ( '' :arg1 ( person_name_0 :arg1-of ( include-91 :arg2 ( person :arg0-of ( have-org-role-91 :arg2 general ) ) :arg3 ( percentage-entity :value num_0 ) ) ) ) :op2 ( satisfy-01 :arg0 ( person :arg0-of ( satisfy-01 :arg1 person ) ) :arg1 person ) ) :arg2 ( say-01 :arg0 person :arg1 ( be-02 :arg1 person ) ) :time ( over :op1 ( week :mod past ) )
sisteminizin :arg1 it :arg2 ( work-09 :arg1 it ) :manner health
contrast-01 :arg1 ( say-01 :arg0 they :arg1 ( strengthen-01 :arg0 they :arg1 law ) ) :arg2 ( say-01 :arg0 they )
and :op1 ( target-01 :arg0 ( thing :arg1-of ( comment-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg1 organization_name_0 :arg2 boss ) ) ) ) :arg1 ( target :mod transfer-01 :mod only :arg1-of ( set-02 :arg0 ( comment-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg1 organization :arg2 boss ) ) ) ) ) :time ( before :op1 now :quant ( some :op1 ( temporal-quantity temporal-quantity_num_0 :unit week ) ) ) ) :op2 ( insist-01 :arg0 person :arg1 ( want-01 :polarity - :arg0 person :arg1 ( undermine-01 :arg0 person :arg1 union-02 ) ) )
include-91 :arg1 ( person :arg1-of ( include-91 :arg2 ( person :arg0-of vote-01 :mod primary ) :arg3 some ) ) :arg2 ( or :op1 ( candidate :poss ( candidate :mod democracy ) ) :op2 ( candidate :poss ( party :poss or ) ) ) :mod main
come-01 :arg1 you :arg4 samand?ra
and :op1 ( feel-01 :arg0 ( and :op1 ( class :arg0-of work-01 ) :op2 ( person :arg0-of study-01 ) :op3 ( person :arg0-of study-01 ) ) :arg1 ( pretend-01 :arg0 person :arg1 ( do-02 :arg0 person ) ) ) :op2 ( cause-01 :arg0 amr-unknown :arg1 ( and :op1 ( feel-01 :arg0 person :arg1 ( pretend-01 :arg0 person :arg1 ( study-01 :arg0 person ) ) :mod usual :time always ) :op2 ( become-01 :arg1 person :arg2 ( habit :beneficiary ( person :arg0-of study-01 :arg0-of ( complete-01 :arg1 ( task :arg1-of ( become-01 :arg2 ( and :op1 ( thing :domain it ) :op2 ( hold-04 :arg1 task :time ( after :op1 now :quant ( up-to :op1 ( temporal-quantity temporal-quantity_num_0 :unit year ) ) ) ) ) ) ) ) ) ) ) ) )
have-concession-91 :arg1 ( wound-01 :arg1 ( person :arg0-of ( have-rel-role-91 :arg1 i :arg2 son ) ) :arg1-of sure-02 ) :arg2 ( possible-01 :polarity - :arg1 ( go-02 :arg0 we :arg4 home :arg1-of ( cause-01 :arg0 ( person :arg0-of ( have-rel-role-91 :arg1 i :arg2 son ) ) ) ) )
state-01 :arg0 ( organization_name_0 :arg1-of ( state-01 :arg0 government-organization_name_1 ) ) :arg1 ( admit-01 :arg0 government-organization :arg1 ( check-01 :arg1 health :arg1-of ( plan-01 :location ( framework :poss hospital ) ) ) :time previous )
contrast-01 :arg1 ( exceed-01 :polarity - :arg0 ( agency :mod news ) :arg1 ( thing :arg2-of ( characteristic-02 :arg1 ( service :mod language :mod country_name_0 ) ) ) ) :arg2 ( report-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg1 company :arg2 official ) ) :arg1 ( ban-01 :arg1 ban-01 :location abroad ) )
'' :arg1 ( story :mod love-01 :arg1-of exhibit-01 ) :time ( until :op1 ( date-entity month_date-entity_0 day_date-entity_0 ) )
say-01 :arg0 he :arg1 ( thing :arg1-of ( say-01 :arg0 he ) )
say-01 :arg0 ( person_name_0 :arg0-of ( have-org-role-91 :arg1 ( and :op1 ( person :arg0-of ( have-org-role-91 :arg2 president ) ) :op2 ( person :arg0-of ( have-org-role-91 :arg2 executive ) ) :op3 ( person :arg0-of ( have-org-role-91 :arg2 executive ) ) :op4 ( person :arg0-of ( have-org-role-91 :arg2 executive ) ) :op5 ( person :arg0-of ( have-org-role-91 :arg2 executive ) ) ) :arg0-of ( have-org-role-91 :arg1 unit :arg2 executive ) ) ) :arg1 ( and :op1 ( leave-15 :arg0 ( person :arg0-of ( have-org-role-91 :arg1 unit :arg2 executive ) :arg0-of ( have-org-role-91 :arg1 unit ) :arg0-of ( have-org-role-91 :arg1 unit ) ) :arg1 unit ) :op2 ( provide-01 :arg0 person :arg1 ( structure :arg1-of ( cost-01 :arg2 ( monetary-quantity :arg1-of ( cost-01 :arg2 ( monetary-quantity :arg1-of ( cost-01 :arg2 ( monetary-quantity :arg1-of ( cost-01 :arg2 ( monetary-quantity :arg1-of ( cost-01 :arg2 ( monetary-quantity :arg1-of ( possible-01 :polarity - ) ) ) ) ) ) ) ) ) ) ) ) ) )
lose-02 :arg0 ( person :arg0-of ( have-rel-role-91 :arg1 person_name_0 :arg2 husband ) ) :arg1 ( life :poss person ) :arg2 ( person_name_1 :arg0-of ( have-rel-role-91 :arg1 person :arg2 husband ) ) :time ( bear-02 :arg1 person )
and :op1 ( say-01 :arg0 he :arg1 ( goal :mod ( company :mod globe ) :arg0-of ( have-org-role-91 :arg1 ( board :mod globe ) :arg2 chairman ) ) :time ( meet-03 :arg1-of ( relate-01 :arg2 ( combination :poss ( company :mod globe :arg0-of hold-01 ) ) ) ) ) :op2 ( add-01 :arg0 he :arg1 ( goal :poss we :mod globe ) )
multi-sentence :snt2 ( obligate-01 :arg1 ( market :mod finance :arg1-of ( panic :degree total ) ) :arg2 ( take-01 :arg0 market :arg1 ( year :arg1-of long-03 ) ) :arg1-of ( cause-01 :arg0 ( thing :arg1-of ( decide-01 :arg0 government-organization_name_0 :prep-in ( direction :mod this ) ) ) ) )
outcome :arg0 ( person :arg0-of ( have-org-role-91 :arg2 head-of-state ) ) :arg1 ( and :op1 ( person :arg0-of ( have-org-role-91 :arg2 head-of-state ) ) :op2 ( person :arg0-of ( have-org-role-91 :arg2 head-of-state ) ) :op3 ( person :arg0-of ( have-org-role-91 :arg2 head-of-state ) ) :op4 ( person :arg0-of ( have-org-role-91 :arg2 head-of-state ) ) :op5 ( person :arg0-of ( have-org-role-91 :arg1 organization_name_0 :arg3 ( lead-02 :arg0 person ) ) ) :mod main :time ( month :mod last ) :location ( core :poss ( thing :arg1-of target-01 ) ) )
say-01 :arg0 government-organization_name_0 :arg1 ( permanent :domain ( situation :mod this ) :arg1-of ( cause-01 :arg0 ( and :op1 ( expect-01 :arg0 ( person :arg1-of ( rank-01 :arg3 ordinal-entity_num_3 ) ) :arg1 ( rate-entity-91 :arg1 ( percentage-entity percentage-entity_num_0 ) :arg2 ( temporal-quantity temporal-quantity_num_2 :unit year ) ) ) :op2 ( stand-01 :arg1 situation :arg2 ( rate-entity-91 :arg1 ( under :op1 ( monetary-quantity monetary-quantity_num_2 :unit pound ) ) :arg2 ( temporal-quantity temporal-quantity_num_2 :unit year ) ) ) ) ) )
multi-sentence :snt1 num_0 :snt2 provisions
say-01 :arg0 he :arg1 ( and :op1 ( seize-01 :arg0 ( and :op1 ( casing :consist-of boat ) :op2 gun ) :arg1 ( and :op1 ( casing :consist-of boat ) :op2 gun :arg1-of ( compare-01 :arg2 ( data :arg1-of ( find-01 :arg0 data :prep-in ( study-01 :mod ballistics ) ) ) ) ) ) :op2 ( examine-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg2 ( person :arg1-of expert-01 ) ) ) :arg1 ( problem :topic ( face-01 :arg0 person :arg1 problem ) ) :time ( examine-01 :arg0 ( and :op1 ( casing :consist-of boat ) :op2 ( person :arg0-of ( have-org-role-91 :arg2 ballistic ) ) ) :arg1 problem ) ) )
continue-01 :arg1 fight-01 :time ( until :op1 ( convince-01 :arg1 evil :arg2 evil ) )
police :location offing
and :op1 ( '' :domain it :mod stalemate ) :op2 ( get-01 :polarity - :arg0 ( person :mod country_name_0 :mod country_name_1 ) :arg1 ( anything :arg0-of ( benefit-01 :arg1 person ) ) )
write-01 :arg0 ( person :arg0-of write-01 )
lead-03 :arg2 ( popularization :arg1 bag :time current ) :time ( week :mod fashion )
contrast-01 :arg2 ( present-01 :arg1 ( and :op1 ( hand :part-of lady ) :op2 ( hand :part-of lady ) ) :arg2 ( vote-01 :arg0 lady :arg1 ( thing :arg2-of ( name-01 :arg1 person ) :ord ( ordinal-entity ordinal-entity_num_0 ) ) ) )
multi-sentence :snt1 ( amr-unknown :manner-of ( assess-01 :arg0 person :arg1 it ) ) :snt2 ( ask-02 :arg0 we :arg1 ( person :arg0-of study-01 :arg1-of ( expert-01 :arg2 educate-01 ) :arg1-of ( expert-01 :arg2 educate-01 ) ) :arg2 ( person_name_0 :arg0-of study-01 :arg1-of ( expert-01 :arg2 educate-01 ) ) )
think-01 :arg0 i :arg1 ( run-02 :arg0 he :arg1 alien )
bad-07 :polarity - :arg1 ( group :mod terrorist :mod separatist ) :arg1-of ( cause-01 :arg0 ( and :op1 ( thing :arg1-of ( bad-07 :degree ( most :mod even ) ) ) :op2 ( sÃ¶yleyemedin :mod ( schoolboy :mod even ) ) ) )
multi-sentence :snt1 ( rely-01 :arg1 ( drop-01 :arg1 ( thing :arg2-of price-01 ) ) ) :snt2 ( cause-01 :arg0 ( compete-01 :source ( monetary-quantity monetary-quantity_num_0 :unit dollar ) :arg1-of ( implement-01 :arg0 they :time now ) ) :arg1 ( drop-01 :arg1 ( thing :arg2-of price-01 ) ) )
inherently :location ( fascinated :mod both )
multi-sentence :snt1 ( say-01 :arg0 person_name_0 :arg1 ( thing :mod new :arg1-of ( overcome-01 :arg0 person ) ) :condition ( come-up-11 :arg0 person :arg1 ( work-01 :arg0 person :mod again ) ) ) :snt2 ( say-01 :arg0 he :arg1 ( develop-01 :arg1-of special-02 :arg1-of ( relate-01 :arg2 ( office :mod employ-01 ) ) :arg1-of ( follow-01 :arg2 ( thing :arg0-of ( cause-01 :arg1 ( follow-02 :arg0 he ) ) ) ) ) )
and :op2 ( side-01 :arg0 side :arg1 side :time ( feel-01 :arg0 they :arg1 comfortable-02 ) )
teach-01 :arg0 ( and :op1 ( person :arg0-of ( have-org-role-91 :arg1 ( science :mod social ) :arg2 member ) ) :op2 ( person :arg0-of ( have-org-role-91 :arg1 organization_name_0 :arg2 member ) :quant many ) ) :arg1 ( teach-01 :arg0 and :mod of-course ) :arg2 ( and :op1 ( science :mod social ) :op2 ( person :arg0-of ( have-org-role-91 :arg1 organization :arg2 member ) ) )
move-02 :arg0 ( and :op1 person_name_0 :op2 person_name_1 ) :arg1 ( topple-01 :arg0 and :arg1 ( lead-02 :arg0 ( person :arg1-of liberal-02 ) ) ) :arg1-of ( cause-01 :arg0 ( succeed-01 :polarity - :arg0 and :arg1 ( achieve-01 :arg0 and :arg1 ( increase-01 :arg1 rate-01 ) ) :time today ) )
and :op1 ( wilkinson :arg0 ( and :op1 stefanovic :op2 lisa ) :arg1 ( effort :purpose ( overthrow-01 :arg1 ( person :arg0-of ( lead-02 :arg1 ( person :arg1-of liberal-02 ) ) ) ) ) :arg2 ( effort :purpose ( overthrow-01 :arg1 ( person :arg1-of liberal-02 ) ) ) ) :op2 ( fail-01 :arg1 person :arg2 ( provide-01 :arg0 person :arg1 ( increase-01 :arg1 rate-01 ) ) )
say-01 :arg0 ( round :quant ( between :op1 num_0 :op2 num_1 ) ) :arg1 ( say-01 :arg1 ( quality :mod that ) :mod only :time past )
and :op1 ( raise-01 :arg0 organization_name_0 :arg1 ( rate :mod interest ) :arg2 ( and :op1 economy :op2 ( asset :mod finance ) ) ) :op2 ( respond-01 :arg1 ( and :op1 ( asset :mod economy ) :op2 ( asset :mod finance ) ) )
and :op1 ( find-01 :arg1 ( and :op1 ( person :arg0-of ( have-org-role-91 :arg1 scholar :arg2 scholar ) ) :op2 ( person :arg0-of ( have-org-role-91 :arg1 ( government-organization :arg0-of govern-01 ) :arg2 scholar ) ) :purpose ( call-03 :arg0 scholar :arg1 ( and :op1 peace :op2 negotiate-01 ) :time simultaneous ) ) :location location_name_0 ) :op2 ( state-01 :arg0 scholar :arg1 ( have-03 :polarity - :arg0 we :arg1 ( partner-01 :arg0 ( person :arg0-of ( have-rel-role-91 :arg1 person :arg2 partner ) ) :arg1 ( crime-02 :mod this ) ) :arg1-of ( cause-01 :arg0 ( title-01 :arg1 person :arg2 ( thing :arg1-of state-01 ) ) ) ) ) :time ( date-entity month_date-entity_0 day_date-entity_0 ) :location location_name_0
cause-01 :arg0 ( frames :domain ( cartoon :mod that ) :mod actual ) :arg1 ( part :part-of column :domain cartoon :mod actual )
rest :part-of you :time today
set :arg0 ( organization_name_0 :arg1-of ( operated :arg0 ( government-organization :arg0-of govern-01 ) ) ) :arg1 ( version :mod arabic :topic ( case-03 :arg1 case-03 ) ) :arg1-of ( cause-01 :arg0 ( blame-01 :arg1 ( side :mod only ) :arg2 organization_name_1 ) )
say-01 :arg0 ( organization_name_0 :arg1-of ( run-01 :arg0 state ) ) :arg1 ( case :polarity - :mod only :domain ( sue-02 :arg2 organization_name_1 ) ) :arg1-of ( say-01 :arg0 statement )
contrast-01 :arg1 ( meet-03 :arg0 ( person :quant num_0 :arg1-of ( include-91 :arg2 ( person :quant num_1 :arg0-of ( make-01 :arg1 ( fund :poss organization_name_0 ) ) ) ) :arg0-of ( make-01 :arg1 ( fund :poss company ) ) ) ) :arg2 ( report-01 :arg1 ( receive-01 :arg0 meet-03 :arg1 ( thing :polarity - :arg2-of fund-01 ) :arg1-of report-01 ) :time previous )
fall
give-01 :arg0 ( person_name_0 :arg0-of ( have-rel-role-91 :arg2 daughter ) ) :arg1 ( name :poss person ) :arg2 ( name :poss person )
come-03 :arg1 ( news :mod great :beneficiary ( person :arg2-of ( populate-01 :time former ) :arg2-of ( populate-01 :arg1 ( person_name_0 :arg0-of ( have-rel-role-91 :arg2 brother :time former ) ) ) ) ) :arg2 ( begin-01 :arg1 cut-02 )
space :mod main :domain it
and :op1 ( store :mod home :location home ) :op2 ( total-01 :arg1 ( and :op1 store :op2 ( number :quant-of ( person :arg1-of employ-01 ) ) :quant ( approximately :op1 num_2 ) ) :arg2 ( person :quant num_3 ) ) :location home
team :consist-of ( person :arg0-of ( have-org-role-91 :arg1 organization_name_0 :arg2 police ) ) :arg1-of ( cause-01 :arg0 ( and :op1 ( take-01 :arg1 ( information :topic ( card :mod bank ) :poss person ) :arg3 account ) :op2 ( start-01 :arg0 work-01 :arg1 ( complain-01 :arg0 person :arg1 ( complain-01 :arg0 person ) ) ) ) )
benefit-01 :arg0 ( benefit-01 :arg1 cooking ) :arg1 amr-unknown
enough :mod enough :domain ( make-01 :arg1 ( partner-01 :arg0 person_name_0 :arg2-of criminal-03 ) )
conduct-01 :arg1 ( person :arg1-of expert-01 ) :location ( e-cigarettes :location location_name_0 )
person :arg0-of ( have-org-role-91 :arg1 person_name_0 :arg2 mp ) :arg0-of ( have-org-role-91 :arg1 organization_name_1 :arg2 mp ) :arg0-of ( have-org-role-91 :arg1 company_name_2 :arg2 mp ) :arg0-of ( have-org-role-91 :arg1 company :arg2 mp ) :arg0-of ( have-org-role-91 :arg1 company :arg2 mp ) :arg0-of ( have-org-role-91 :arg1 company :arg2 mp ) :arg0-of ( have-org-role-91 :arg1 company :arg2 mp ) :arg0-of ( have-org-role-91 :arg1 company :arg2 mp ) :arg0-of ( have-org-role-91 :arg1 company :arg2 mp ) :arg0-of ( have-org-role-91 :arg1 company :arg2 mp )
connect-01 :arg1 ( person :arg0-of ( claim-01 :arg1 ( responsible-01 :arg0 person :arg1 ( group :arg1-of local-02 :mod ma?rip ) ) ) ) :arg2 criminal-organization_name_0
answer-01 :arg0 ( person :mod one ) :arg1 ( word :mod this ) :arg1-of ( instead-of-91 :arg2 ( kill-01 :arg0 person :arg1 person ) )
multi-sentence :snt1 ( and :op1 ( have-03 :arg0 ( person :mod country_name_0 ) :arg1 ( place :location-of ( have-03 :arg0 person :arg1 ( place :poss person ) ) ) ) :op2 ( have-03 :arg0 person :arg1 ( place :mod other ) ) ) :snt2 ( and :op1 ( ma?azalarla :mod other ) :op2 ( recommend-01 :arg1 ma?azalarla ) )
have-03 :arg0 ( and :op1 store :op2 restaurant :mod other ) :arg1 ( space :mod parking :poss she ) :arg1-of ( share-01 :arg0 she )
multi-sentence :snt1 ( and :op1 ( go-02 :arg0 person_name_0 :arg4 ( bbc4 :poss company_name_1 ) ) :op2 ( possible-01 :polarity - :arg1 ( do-02 :arg0 ( and :op1 ( service :arg1-of ( appropriate-02 :degree more ) ) :op2 ( service :arg1-of ( appropriate-02 :degree more ) ) ) :location here ) ) ) :snt2 ( contrast-01 :arg1 ( possible-01 :polarity - :arg1 ( do-02 :arg0 ( and :op1 ( service :mod public :arg1-of appropriate-02 ) :op2 ( service :mod public ) ) :arg1 ( monetary-quantity monetary-quantity_num_0 :unit pound ) :location here ) ) :arg2 ( add-01 :arg0 person :arg1 ( possible-01 :arg1 ( discuss-01 :arg0 person :arg1 ( subject :mod '' :arg1-of ( subject-01 :arg0 person :arg1-of possible-01 :arg1-of ( cause-01 :arg0 ( followed :arg0 anyone :arg1 person :degree total ) ) ) ) ) ) ) )
multi-sentence :snt1 ( obligate-01 :arg1 ( law :domain this ) :arg2 ( keep-04 :arg0 law :arg1 ( person :quant num_0 :mod another ) :arg2 ( law :mod state ) ) ) :snt2 ( '' :arg1 you :time ( say-01 :arg0 we :arg1 ( thing :arg1-of ( do-02 :arg0 you :arg1-of ( say-01 :arg0 they ) ) ) :time always ) )
say-01 :arg0 he :arg1 ( and :op1 ( be-located-at-91 :arg1 company :arg2 ( factory :location ( factory :location ( relative-position :op1 river_name_0 :direction country_name_1 ) ) ) :condition ( relate-01 :arg1 he :arg2 ( thing :arg2-of ( price-01 :arg1 person_name_2 ) ) ) ) :op2 ( identify-01 :arg0 we :arg1 ( monetary-quantity monetary-quantity_num_0 :unit ( dollar :mod country ) ) ) )
share-01 :arg0 organization_name_0 :arg1 ( monetary-quantity monetary-quantity_num_0 :unit dollar ) :arg2 ( sell-01 :arg1 sell-01 )
remain-01 :arg1 ( thing :arg2-of ( taste :arg1 food ) :mod distinctive ) :arg3 same-01
and :op1 ( fall-01 :arg1 ( proceeding-02 :name ( name :op1 gongundan ) ) :arg4 ( under :op1 ( monetary-quantity monetary-quantity_num_0 :unit dollar ) ) :time ( before :op1 now :quant ( about :op1 ( temporal-quantity temporal-quantity_num_1 :unit hour ) ) ) ) :op2 ( fall-01 :arg1 share :arg4 ( under :op1 ( monetary-quantity monetary-quantity_num_1 :unit dollar ) ) )
and :op1 ( person_name_0 :arg0-of ( have-org-role-91 :arg1 country_name_1 :arg2 ( minister :mod prime ) ) ) :op2 ( monetary-quantity :arg2-of ( price-01 :arg1 oil ) ) :op3 ( thing :arg2-of ( price-01 :arg1 oil ) ) :op4 ( thing :arg2-of ( price-01 :arg1 oil ) ) :op5 ( thing :arg2-of ( price-01 :arg1 oil ) )
say-01 :arg0 government-organization_name_0 :arg1 ( visit-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg1 country_name_1 :arg2 president ) ) :arg1 ( visit-01 :arg0 person :arg1 country :mod official ) :time ( end-01 :arg1 ( person_name_2 :arg1-of ( confirm-01 :arg0 person_name_2 ) ) ) :mod official ) :medium ( statement :medium tuesday )
antrenmanlarda :arg0 ( antrenmanlarda :ord ( ordinal-entity ordinal-entity_num_0 ) ) :arg1 it
and :op1 ( play-01 :arg0 they :arg1 ( goal :quant ( between :op1 num_0 :op2 num_1 ) ) :time ( week :ord ( ordinal-entity ordinal-entity_num_0 ) :part-of season ) ) :op2 ( performed :arg0 organization_name_0 :arg1 ( goal :quant num_1 :arg0-of ( rival-01 :arg1 organization ) ) )
multi-sentence :snt1 ( contrast-01 :arg2 ( do-02 :polarity - :arg0 i :arg1 any ) ) :snt2 ( and :op1 ( come-01 :arg1 i ) :op2 ( sad-02 :arg0 this ) )
multi-sentence :snt1 ( helpful-04 :arg0 ( person :arg2-of staff-01 ) :arg1 ( tell-01 :arg0 person :arg2 i ) ) :snt2 ( and :op1 ( listen-01 :arg1 person ) :op2 ( listen-01 :arg1 person ) :op3 ( listen-01 :arg0 ( person :arg0-of ( have-rel-role-91 :arg1 person :arg2 friend ) :mod ( small :degree most :mod even ) ) :arg1 ( thing :manner-of ( make-05 :arg0 i :arg1 differ-02 ) ) ) )
see-01 :arg0 i :arg1 ( thing :manner-of ( possible-01 :arg1 ( create-01 :arg0 he :arg1 ( difference :mod such ) ) ) :arg1-of ( cause-01 :arg0 ( and :op1 ( listen-01 :arg0 ( person :arg0-of ( have-rel-role-91 :arg2 friend ) ) :arg1 it ) :op2 ( listen-01 :arg0 person :arg1 it ) ) ) )
say-01 :arg0 person_name_0 :arg1 ( person :arg0-of ( have-org-role-91 :arg2 angel ) )
contrast-01 :arg1 ( warn-01 :arg0 he :arg1 ( increase-01 :arg1 ( increase-01 :arg1 market ) ) ) :arg2 ( indicate-01 :arg0 ( allow-01 :polarity - :arg1 ( rise-01 :arg1 situation ) ) :arg1 ( believe-01 :arg0 they :arg1 ( rise-01 :arg1 situation ) ) )
try-01 :arg0 i :arg1 ( see-01 :arg0 i :arg1 ( thing :manner-of ( broadcast-01 :arg0 ( service :mod public ) ) ) )
believe-01 :arg0 ( girl :arg0-of ( have-rel-role-91 :arg1 girl :arg2 friend ) ) :arg1 ( believe-01 :arg0 ( girl :arg0-of ( have-rel-role-91 :arg1 girl :arg2 friend ) ) :arg1 ( live-01 :arg0 girl :location ( relation-03 :arg0 girl :mod emotional ) ) ) :arg1-of ( have-concession-91 :arg2 ( report-01 :arg1 ( or :op1 ( information :polarity - ) :op2 ( thing :arg0-of ( evidence-01 :arg1 ( or :op1 ( information :polarity - ) :op2 ( thing :arg0-of ( evidence-01 :arg1 ( hands :polarity - ) ) ) ) ) ) ) ) )
stay-01 :arg1 ( factory :mod sugar :mod '' ) :location dormitory
return-05 :arg0 ( situation :location city_name_0 ) :arg1 ( quality :mod good :arg1-of ( rare-02 :degree most :compared-to ( game :quant most ) ) ) :time ( night :mod ( night :mod num_0 ) )
awards :arg0 ( woman :arg1-of succeed-01 ) :arg1 ( person :arg0-of ( play-01 :arg1 ( thing :arg2-of title-01 ) ) :quant ( multiple :op1 num_0 ) ) :time ( night :time-of ( talk-01 :arg0 woman :arg1 ( thing :arg0-of ( play-12 :arg2 male ) :mod male ) ) :degree most )
except-01 :arg1 ( support-01 :arg0 ( and :op1 ( person :arg0-of ( have-org-role-91 :arg1 location_name_0 :arg2 governor ) ) :op2 ( person :arg0-of ( have-org-role-91 :arg1 location_name_0 :arg2 governor ) ) ) :arg1 ( and :op1 ( person_name_3 :arg0-of ( have-org-role-91 :arg2 governor ) ) :op2 ( person_name_3 :arg0-of ( have-org-role-91 :arg1 city_name_4 :arg2 governor ) ) ) :arg2-of ( except-01 :arg1 ( rate-entity-91 :arg1 ( percentage-entity percentage-entity_num_0 ) :arg2 ( temporal-quantity temporal-quantity_num_1 :unit year ) ) ) :time now )
say-01 :arg0 i :arg1 ( help-01 :arg0 person_name_0 :arg1 i :arg2 ( government-organization :arg0-of ( administrate-01 :arg1 business ) ) ) :arg2 person_name_1
say-01 :arg0 ( thing :arg1-of ( estimate-01 :arg2 public ) ) :arg1 ( and :op1 ( harmful-02 :arg0 ( e-cigarettes :quant ( about :op1 ( percentage-entity percentage-entity_num_0 ) ) ) :arg1 ( thing :arg0-of ( evidence-01 :arg1 ( thing :arg1-of allege-01 ) ) ) :degree less :compared-to ( smoke-02 :arg1 ( thing :arg0-of ( evidence-01 :arg1 ( thing :arg1-of allege-01 ) ) ) ) ) :op2 ( base-02 :arg1 thing :arg2 ( review-01 :arg1 thing :arg0-of detail-01 ) ) )
say-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg1 ( organization_name_0 :poss public ) :arg2 '' ) ) :arg1 ( allege-01 :arg1 ( allege-01 :arg1 ( and :op1 ( thing :arg0-of evidence-01 ) :op2 ( thing :arg0-of evidence-01 ) ) :arg1-of ( base-02 :arg2 ( examine-01 :arg0-of detail-01 ) ) :arg1-of ( base-02 :arg2 ( examine-01 :arg0-of detail-01 ) ) ) )
and :op1 ( environment :domain ( or :op1 parent :op2 ( environment :mod social ) ) ) :op2 ( value-02 :arg1 ( idea :topic he :topic ( issue-02 :arg0 he :mod mutual ) ) ) :op3 ( value-02 :arg1 idea )
accompany-01 :arg0 ( comment-01 :quant num_0 :arg0 ( community :mod ( community :mod continent_name_0 ) ) ) :arg1 event :mod also :time event
and :op1 ( good :polarity - :domain ( spirit :mod ( between :op1 country_name_0 :op2 ( rest :part-of continent_name_1 ) ) ) ) :op2 ( say-01 :arg0 ( person_name_2 :arg0-of ( have-org-role-91 :arg1 country_name_3 ) ) :arg1 ( obligate-01 :arg1 organization_name_3 :arg2 ( find-01 :arg0 organization_name_3 ) ) )
answer-01 :arg2 ( sound :arg1-of open-04 ) :degree more
leader :arg0 ( person :arg0-of ( lead-02 :arg1 organization_name_0 ) ) :arg1 ( person_name_1 :arg0-of ( have-org-role-91 :arg1 organization :arg3 lead-02 ) ) :location ( brief-01 :arg1 person ) :time yesterday
and :op1 ( hold-01 :arg1 ( thing :arg1-of ( provide-01 :arg0 constitution :arg2 ( company :arg0-of ( make-01 :arg1 law ) :location location_name_0 ) ) ) :time ( week :mod this ) :location location_name_0 ) :op2 ( hold-04 :arg1 ( person :arg0-of ( have-org-role-91 :arg2 official ) ) :time ( until :op1 ( work-01 :arg0 person :medium ( text :mod new ) ) ) )
note-01 :mode imperative :arg0 you :arg1 ( issue-02 :polarity - :arg0 topic :arg1 topic :degree most :time ( place-01 :arg0 you :arg1 ( plan-01 :arg0 you ) ) )
something :mod doktorlarda
highlight-01 :arg1 ( and :op1 ( friendship :mod male ) :op2 ( moment :mod small ) )
multi-sentence :snt1 ( and :op1 ( oppose-01 :arg0 ( person_name_0 :arg1-of bright-02 ) :arg1 ( idea :topic ( referendum :topic person_name_2 ) ) ) :op2 ( oppose-01 :arg0 person :arg1 ( idea :topic person_name_2 ) ) ) :snt2 ( cause-01 :arg0 ( and :op1 ( person_name_3 :arg0-of ( give-01 :arg1 ( person :arg0-of ( use-01 :arg1 card ) ) :arg2 person ) ) :op2 ( vote-01 :arg0 person :arg1 ( vote-01 :arg0 person :arg1 ( principle :mod ( constitution :mod organization_name_4 ) ) ) ) ) :arg1 ( cancelled :arg1 person ) )
cause-01 :arg0 ( want-01 :polarity - :arg0 we :arg1 ( give-01 :arg0 we :arg1 ( thing :arg1-of ( target-01 :arg0 person_name_0 ) ) :arg2 ( protest-01 :arg0 person :arg1 ( protest-01 :arg0 person :mod whistling ) ) ) ) :arg1 ( game :arg1 game :time ( minute :ord ( ordinal-entity ordinal-entity_num_0 ) :part-of ( game :mod hickville :poss person ) ) )
use-01 :arg1 that :time period
multi-sentence :snt1 ( and :op1 ( person_name_0 :time ( before :op1 now :quant ( temporal-quantity temporal-quantity_num_0 :unit month ) ) ) :op2 ( person_name_2 :arg0-of ( have-org-role-91 :arg1 ( man :mod exact ) :arg2 man ) ) :time ( before :op1 now :quant ( temporal-quantity temporal-quantity_num_1 :unit month ) ) ) :snt2 ( and :op1 ( call-01 :arg0 i :arg1 they :arg2 ( thing :arg1-of ( do-02 :arg0 i :arg2 he :arg1-of ( return-05 :arg0 i ) ) ) ) :op2 ( say-01 :arg0 he :arg1 ( thing :arg1-of ( do-02 :arg0 i :arg2 he :arg1-of ( return-05 :arg0 i :arg1-of ( return-05 :arg0 i :arg2 ( work-01 :arg0 i :location ( stables :poss i ) ) ) ) ) ) ) )
see-01 :arg0 i :arg1 ( get-05 :arg1 crowd :arg2 song ) :arg1-of ( cause-01 :arg0 ( and :op1 ( situation :mod naive ) :op2 ( sincere :prep-in ( tarz?yla :arg1-of upcoming ) ) ) )
floor :li num_0
and :op1 ( give-01 :polarity - :arg0 police :arg1 ( thing :arg1-of plan-01 :mod this ) :arg2 ( person :arg0-of ( miss-02 :arg1 ( plan :mod this ) ) ) ) :op2 ( describe :arg0 police :arg1 person :arg2 ( attempt-01 :arg0 person :arg1 ( punish-01 :arg1 ( government-organization :arg0-of ( administrate-01 :arg1 school ) ) :manner disciplinary ) ) )
contrast-01 :arg2 ( and :op1 ( reach-01 :arg0 ( country :quant num_0 ) :arg1 deal-01 ) :op2 ( reach-01 :arg0 ( refugee :mod country_name_0 ) :arg1 ( rate-entity-91 :arg1 ( temperature-quantity :quant ( between :op1 num_1 :op2 num_1 ) ) :arg2 ( distance-quantity distance-quantity_num_0 :unit gallon ) ) :arg4 country ) )
obvious-01 :arg1 ( chef :domain this :topic ( chef :mod master ) )
hell :domain this :mod hell :arg1-of ( olman?zla :arg0 you :location cooked )
include-91 :arg1 ( and :op1 ( person :arg0-of ( process-01 :arg1 ( office :poss worship-place_name_0 ) ) :arg0-of ( have-org-role-91 :arg1 ( office :poss worship-place_name_0 ) :arg3 criminal-03 ) ) :op2 ( person :arg0-of ( have-org-role-91 :arg1 ( office :poss government-organization_name_3 ) :arg2 ( person :arg1-of expert-01 ) ) ) ) :arg2 ( or :op1 ( citizen :poss ( person :arg0-of ( have-org-role-91 :arg1 ( government-organization :arg0-of ( govern-01 :arg1 country ) ) :arg2 ( person :arg1-of ( expert-01 :arg2 identification ) ) ) ) ) :op2 ( person :arg0-of ( die-01 :arg1 person ) ) :op3 ( person :arg0-of ( die-01 :arg1 person ) ) :op4 ( person :arg0-of ( die-01 :arg1 person ) ) :op5 ( person :arg0-of ( have-rel-role-91 :arg1 person :arg2 experts ) ) :op6 ( person :arg0-of ( have-rel-role-91 :arg1 person :arg2 autopsies ) ) :op7 ( person :arg0-of ( have-rel-role-91 :arg1 person :arg2 experts ) ) )
cause-01 :arg0 ( possible-01 :arg1 ( see-01 :arg0 we :arg1 ( thing :arg1-of ( get-01 :arg0 we ) ) ) ) :arg1 ( possible-01 :arg1 ( see-01 :arg0 we :arg1 ( thing :arg1-of ( get-01 :arg0 we ) ) ) )
influence-01 :arg0 ( and :op1 ( security :mod country_name_0 ) :op2 ( security :mod country ) :op3 ( party :arg0-of rule-03 :location country_name_2 ) :op4 ( government-organization :arg0-of ( govern-01 :arg1 country_name_3 ) ) :op5 ( government-organization :arg0-of ( govern-01 :arg1 country ) ) :op6 ( government-organization :arg0-of ( govern-01 :arg1 country ) ) :op6 ( government-organization :arg0-of ( govern-01 :arg1 country ) ) :op6 ( government-organization :arg0-of ( govern-01 :arg1 country ) ) :op6 ( government-organization :arg0-of ( govern-01 :arg1 country ) ) :op6 ( government-organization :arg0-of ( govern-01 :arg1 country ) ) :op7 ( government-organization :arg0-of ( govern-01 :arg1 country ) ) :op6 ( government-organization :arg0-of ( govern-01 :arg1 country ) ) :op6 ( government-organization :arg0-of ( govern-01 :arg1 country ) ) :op7 ( government-organization :arg0-of ( govern-01 :arg1 country ) ) :op6 ( government-organization :arg0-of ( govern-01 :arg1 country ) ) :op7 ( government-organization :arg0-of ( govern-01 :arg1 country ) ) ) :arg1 ( perform-01 :mod ( disappoint-01 :degree very ) )
be-located-at-91 :arg1 ( location_name_0 :location downtown ) :arg2 ( place :mod difficult )
contrast-01 :arg2 ( possible-01 :arg1 ( ignore-01 :arg0 government-organization_name_0 :arg1 ( picture :mod globe ) :degree less ) )
reason :quant many :arg0-of ( cause-01 :arg1 ( elect-01 :arg1-of general-02 ) )
expect-01 :arg1 ( go-02 :arg0 ( person :arg0-of ( lead-02 :arg1 ( and :op1 ( person :arg0-of ( lead-02 :arg1 ( technology :mod technology ) ) ) :op2 ( person :arg0-of ( lead-02 :arg1 country_name_0 ) ) :op3 ( person :arg0-of ( lead-02 :arg1 organization ) ) :op4 ( person :arg0-of ( lead-02 :arg1 organization ) ) :op5 ( person :arg0-of ( lead-02 :arg1 organization ) ) ) ) ) :time ( before :op1 ( meet-03 :arg0 person :arg1 ( and :op1 city_name_1 :op2 ( country :quant some :arg1-of ( include-91 :arg2 country_name_2 ) ) ) ) ) :time ( before :op1 ( meet-03 :arg0 person :arg1 ( and :op1 ( person :arg0-of ( lead-02 :arg1 ( technology :mod technology ) ) ) :op2 ( person :arg0-of ( lead-02 :arg1 country ) ) ) ) ) )
(-(
say-01 :arg0 ( and :op1 ( person :arg0-of ( have-org-role-91 :arg1 ( person_name_0 :arg0-of ( have-org-role-91 :arg1 police ) ) :arg2 member ) ) :op2 ( person :arg0-of ( have-org-role-91 :arg1 police :arg2 member ) ) :op3 ( person_name_1 :arg0-of ( have-org-role-91 :arg1 police :arg2 member ) ) ) :arg1 ( and :op1 ( collapse-01 :arg1 person :time ( before :op1 ( take-01 :arg0 person :arg1 person :arg2 hospital ) ) ) :op2 ( wait-01 :arg1 person :duration ( temporal-quantity temporal-quantity_num_0 :unit hour ) ) )
multi-sentence :snt1 ( slaughter-01 :arg1 ( person :arg0-of ( commit-02 :arg1 ( crime-02 :arg1-of same-01 ) ) ) ) :snt2 ( say-01 :arg0 he )
multi-sentence :snt1 ( try-01 :arg0 ( period :instrument-of holiday ) :arg1 ( teach-01 :arg0 period :arg1 ( olman?z :mod only ) ) ) :snt2 ( and :op2 ( dinlenmenizi :mode interrogative ) )
contrast-01 :arg2 ( impress-01 :arg0 person_name_0 :arg1 i :mod also )
share-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg1 parliament :arg2 ( person :arg0-of immigrate-01 ) ) ) :arg1 ( person :arg0-of ( head-01 :arg1 parliament ) :arg0-of immigrate-01 :ord ( ordinal-entity ordinal-entity_num_0 ) ) :arg1-of ( high-02 :degree most ) :time yesterday :location ( round-05 :arg1 parliament :mod parliamentary )
and :op1 ( person_name_0 :arg0-of ( have-org-role-91 :arg1 ( person_name_1 :arg0-of ( have-org-role-91 :arg2 director ) ) :arg2 director ) ) :op2 ( person :arg0-of ( have-org-role-91 :arg2 director ) ) :op3 ( person :arg0-of ( have-org-role-91 :arg2 director ) ) :op4 ( person :arg0-of ( have-org-role-91 :arg2 director ) ) :op5 ( person :arg0-of ( have-org-role-91 :arg2 director ) ) :op6 ( person :arg0-of ( have-org-role-91 :arg2 director ) ) :op6 ( person :arg0-of ( have-org-role-91 :arg2 director ) ) :op7 ( camera :mod l )
close-01 :arg1 school :time ( start-01 :arg1 ( operation :arg1-of major-02 :time ( date-entity month_date-entity_0 day_date-entity_0 ) ) ) :location district
and :op1 ( fall-01 :arg1 ( girl :mod little ) ) :op2 ( hit-01 :arg0 girl :arg1 ( head :part-of girl ) :arg0-of ( cause-01 :arg1 ( reported :arg1 alcohol :arg2 ( sign :arg1-of ( signal-07 :arg0 ( brain :part-of ( person :arg0-of ( have-rel-role-91 :arg1 ( child :arg1-of separate-02 ) :arg2 child ) ) ) ) ) ) ) ) :op3 ( do-02 :arg0 doctor :arg1 alcohol )
and :op2 ( develop-02 :arg0 we :arg1 ( and :op1 ( industry :arg1-of ( care-03 :arg1-of personal-02 ) ) :op2 ( industry :mod various ) ) :time ( time :mod this ) )
order-01 :arg0 organization_name_0 :arg2 ( see-01 :arg0 organization :arg1 ( obligate-01 :arg2 ( be-02 :arg1 decide-01 :duration ( temporal-quantity temporal-quantity_num_0 :unit month ) ) ) )
multi-sentence :snt1 ( sell-01 :arg0 we :arg1 factory :manner moskalevsky ) :snt2 ( '' :mode expressive )
attack-01 :location location_name_0 :arg0-of ( shook :arg1 country_name_1 )
caldiero :arg0 organization_name_0 :arg1 ( and :op1 ( climber :mod rock :mod rock ) :op2 ( busboy :mod rock ) ) :time ( night :mod monday ) :manner ( win-01 :arg0 organization :arg1 ( athletes :ord ( ordinal-entity ordinal-entity_num_0 ) ) :arg2 ( program :mod ( ammonium :quant ( monetary-quantity monetary-quantity_num_1 :unit dollar ) ) ) )
multi-sentence :snt1 ( seem-01 :arg1 ( friendly-01 :arg1 ( and :op1 country_name_0 :op2 country_name_1 :example ( and :op1 country :op2 country ) ) :degree very ) ) :snt2 ( need-01 :arg0 ( detective :quant num_0 ) :arg1 ( other :mod each ) )
person :arg0-of murder-01 :domain ( person :arg0-of murder-01 )
war :mod civil
say-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg1 organization_name_0 :arg2 member ) :arg0-of ( have-org-role-91 :arg1 organization :arg2 member ) :arg0-of ( have-org-role-91 :arg1 organization :arg2 member ) ) :arg1 ( and :op1 ( and :op1 ( artists :arg1 ( and :op1 artists :op2 politics ) :degree more ) :op2 ( work-01 :mod politics :location ( outside :op1 galleries ) ) ) :op2 ( look-01 :arg0 person :arg1 ( way :instrument-of ( transport-01 :arg0 person :arg4 worship-place_name_0 ) ) ) )
and :op1 ( punish-01 :arg0 ( child :quant all :arg0-of ( punish-01 :arg1 ( person :arg0-of ( have-rel-role-91 :arg1 child :arg2 parent ) ) ) ) :arg1 time ) :op2 ( cause-01 :arg0 amr-unknown :arg1 ( lie-08 :arg0 child :time end-01 ) )
tension :mod ( between :op1 country_name_0 :op2 organization_name_1 )
mission :mod country_name_0 :arg1-of ( cause-01 :arg0 ( appear-01 :arg1 mission :time while ) )
and :op1 ( cause-01 :arg0 ( give-01 :arg1 mission :arg2 we ) :arg1 mission ) :op2 ( look-01 :arg0 it :time while )
contrast-01 :arg1 ( fall-01 :arg1 ( monetary-quantity :arg2-of ( price-01 :arg1 oil ) :mod crude ) :arg2 ( rate-entity-91 :arg1 ( monetary-quantity monetary-quantity_num_0 :unit dollar ) :arg2 ( temporal-quantity temporal-quantity_num_1 :unit day ) ) ) :arg2 ( have-03 :arg0 ( surprises :mod new ) :arg1 ( level :arg1-of ( low-04 :degree more ) ) :time final :time ( before :op1 now :duration ( temporal-quantity temporal-quantity_num_1 :unit year ) ) )
say-01 :arg0 ( and :op1 ( person :arg0-of ( have-org-role-91 :arg1 city_name_0 :arg2 ( professor :mod health :mod health ) ) :location ( and :op1 organization_name_1 :op2 ( person_name_2 :arg0-of ( have-org-role-91 :arg1 public :arg2 ( professor :mod health :mod public ) ) ) ) ) :op2 ( person_name_2 :arg0-of ( have-org-role-91 :arg1 public :arg2 ( professor :mod health :mod public ) ) ) ) :arg1 ( base-02 :arg1 ( principle :mod basic :mod ( policy :mod ( health :mod public ) ) ) :arg2 ( thing :arg0-of ( evidence-01 :arg1 effective-04 ) ) )
and :op1 ( die-01 :quant ( at-least :op1 num_0 ) ) :op2 ( die-01 :quant num_1 )
say-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg1 country_name_0 :arg3 ( lead-02 :arg0 person :arg1 country ) ) ) :arg1 ( and :op1 ( person_name_1 :arg0-of ( announce-01 :arg1 campaign-01 :time ( before :op1 now :quant ( between :op1 ( temporal-quantity temporal-quantity_num_0 :unit month ) :op2 ( temporal-quantity temporal-quantity_num_1 :unit month ) ) ) ) ) :op2 ( subject :arg1-of ( subject-01 :arg2 immigrate-01 ) ) ) :time ( since :op1 ( begin-01 :arg1 ( 2016 :arg1 ( person :arg0-of immigrate-01 :source country :mod tecavÃ¼zcÃ¼ ) ) ) )
say-01 :arg0 he :arg1 ( responsible-01 :arg0 person_name_1 :arg1 ( influx :arg1 refugee ) ) :location ( conference :arg1-of ( attend-01 :arg0 he :location location_name_0 ) )
guide-01 :arg0 phone :arg1 you :time ( rest :part-of process-02 )
contrast-01 :arg1 ( region :arg0-of emerge-02 :location-of ( dumanlar :arg0 ( force :mod security :mod turkish ) :arg1-of frequent-02 ) ) :arg2 ( look-01 :arg0 ( look-01 :arg1 ( line :mod border ) ) :arg1 ( vehicle :mod heavy ) )
play-02 :arg0 ( season :quant num_0 :mod only ) :arg1 ( match-03 :arg0 organization_name_0 :mod league )
give-01 :arg0 ( deal-01 :arg0 ( country :quant num_0 ) ) :arg1 ( person :arg0-of immigrate-01 ) :arg2 ( person :arg0-of immigrate-01 ) :location foot :arg1-of ( cause-01 :arg0 line )
publish-01 :arg1 ( person_name_0 :mod all :arg0-of ( have-rel-role-91 :arg1 comedy :arg2 friend ) ) :time ( begin-01 :arg1 end-01 )
support-01 :arg0 ( person :quant num_0 :arg1-of ( include-91 :arg2 ( percentage-entity percentage-entity_num_0 ) ) ) :arg1 it :mod only :condition ( condition :mod certain :purpose ( support-01 :arg1 candidate ) )
follow-04 :arg1 ( organization_name_0 :quant num_0 )
multi-sentence :snt2 ( differ-02 :arg1 ( situation :poss i :quant all ) :degree bit :mod also ) :snt2 ( differ-02 :arg1 ( situation :poss i :quant all ) )
say-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg2 ( person :arg1-of expert-01 ) ) ) :arg1 ( say-01 :arg0 person :arg1 ( possible-01 :arg1 ( dizginlemi :arg1 ( person :arg0-of ( show-01 :arg1 ( possible-01 :arg1 ( dizginlemi :arg1 person ) ) ) ) ) ) :arg0-of ( show-01 :arg1 ( possible-01 :arg1 ( dizginlemi :arg1 ( person :mod country_name_0 ) ) ) ) )
multi-sentence :snt1 ( have-concession-91 :arg1 ( expect-01 :polarity - :arg0 we :arg1 ( get-05 :arg0 we :arg1 ( rate :mod ( interest :arg1-of normal-02 ) ) :arg2 ( rate :mod ( interest :arg1-of low-04 ) ) ) ) :arg2 ( expect-01 :polarity - :arg0 we :arg1 ( get-05 :arg0 we :arg1 ( rate :mod ( interest :arg1-of normal-02 ) ) :arg2 ( level :mod ( interest :arg1-of low-04 ) :mod ( level :arg1-of low-04 ) ) ) ) ) :snt2 ( fear-01 :arg0 many )
cause-01 :arg0 ( have-03 :arg0 ( person :arg0-of ( want-01 :arg1 ( talk-01 :arg0 person :arg2 ( party :time yesterday :poss ( person :arg0-of ( have-org-role-91 :arg2 president ) ) ) ) ) ) :arg1 ( more :compared-to ( number :quant-of court ) ) ) :arg1 ( have-03 :arg0 person :arg1 difficulty :location hat )
see-01 :arg0 ( person_name_0 :arg0-of ( have-org-role-91 :arg2 ( -rrb- :mod right ) ) ) :arg1 ( spend-01 :arg0 ( person :arg0-of act-01 ) :arg1 ( spend-01 :arg0 person :mod ( stressful :degree quite ) ) :time ( after :op1 now :quant ( couple :op1 ( temporal-quantity temporal-quantity_num_0 :unit year ) ) ) )
initiative :name ( name :op1 peace :op2 academics :op3 peace ) :arg1-of ( cause-01 :arg0 ( support-01 :arg0 we :arg1 ( person :arg1-of academic ) ) )
cause-01 :arg0 ( have-03 :arg0 ( person :arg0-of ( have-org-role-91 :arg1 scholar :arg2 scholar ) ) :arg1 ( person :arg0-of ( have-org-role-91 :arg2 scholar ) ) :purpose ( support-01 :arg0 scholar :arg1 person ) ) :arg1 ( say-01 :arg1 ( support-01 :arg0 person :arg1 person ) )
and :op1 ( enjoy-01 :arg0 ( family :arg1-of ( have-org-role-91 :arg0 ( person :arg0-of ( have-org-role-91 :arg1 ( family :arg1-of ( have-org-role-91 :arg0 person :arg2 member ) ) :arg2 member ) ) :arg2 member ) ) :arg1 ( tie-01 :arg1 family :arg2 ( family :arg1-of ( have-org-role-91 :arg0 person :arg2 member ) ) :manner close ) ) :op2 ( charge-05 :arg1 family :arg2 ( and :op1 ( project :mod construct-01 ) :op2 many ) )
like-02 :arg0 i :arg1 ( use-01 :arg0 i :arg1 ( right-05 :arg1 i :arg2 ( appeal-01 :arg0 i ) ) ) :location here
say-01 :arg0 person_name_0 :arg1 ( try-01 :arg0 we :arg1 ( bring-01 :arg0 we :arg1 ( back :mod back ) ) ) :arg1-of ( say-01 :arg0 he )
say-01 :arg0 he :arg1 ( try-01 :arg0 we :arg1 ( bring-01 :arg0 we :arg1 ( person :arg0-of study-01 :poss we ) :arg2 ( person :arg0-of study-01 :poss we ) :mod again ) )
contrast-01 :arg1 ( scene :time then ) :arg2 ( initiate-01 :arg0 ( team :mod police :arg0-of ( flee-05 :arg1 terrorist ) ) :arg1 ( initiate-01 :arg1 ( capture-01 :arg1 ( study :mod multi-ethnic ) ) ) )
say-01 :arg0 ( person_name_0 :arg0-of ( lead-02 :arg1 state ) :arg0-of ( have-org-role-91 :arg1 state :arg2 member ) ) :arg1 ( anjiyodan :arg0 ( person_name_2 :arg0-of ( have-org-role-91 :arg1 ( organization_name_3 :arg1-of ( come-01 :arg4 hospital :purpose ( visit-01 :arg0 person :arg1 person ) ) ) ) :arg0-of ( have-org-role-91 :arg1 organization :arg2 member ) :arg0-of ( have-org-role-91 :arg1 organization :arg2 member ) :arg0-of ( have-org-role-91 :arg1 organization :arg2 member ) :arg0-of ( have-org-role-91 :arg1 organization :arg2 member ) :arg0-of ( have-org-role-91 :arg1 organization :arg2 member ) :arg0-of ( have-org-role-91 :arg1 organization :arg2 member ) :arg0-of ( have-org-role-91 :arg1 organization :arg2 member ) :arg0-of ( have-org-role-91 :arg1 organization :arg2 member ) ) )
say-01 :arg0 he :arg1 ( and :op1 ( have-03 :arg0 ( person_name_0 :arg1-of ( age-01 :arg2 ( temporal-quantity temporal-quantity_num_0 :unit year ) ) ) :arg1 k?zlar?n?n ) :op2 ( destroy-01 :arg1 girl ) :time ( age-01 :arg1 person :arg2 ( temporal-quantity temporal-quantity_num_1 :unit year ) ) )
remain-01 :arg1 ( officer :arg0-of ( have-org-role-91 :arg1 ( police :mod police ) :arg2 officer ) ) :arg3 ( dry-02 :arg1 officer ) :time ( advise-01 :arg0 officer :arg1 man )
and :op1 ( be-temporally-at-91 :arg1 ( season :mod holiday ) :arg2 ( temporal-quantity temporal-quantity_num_0 :unit month ) ) :op2 ( prepare-02 :arg1 ( company :arg0-of ( sell-01 :arg1 product ) ) :arg2 ( hire-01 :arg0 and :arg1 ( person :arg1-of employ-01 ) :purpose ( assist-01 :arg0 company :arg1 person :arg2 ( and :op1 ( send-03 :arg0 person :arg1 person ) :op2 ( distribute-01 :arg0 person ) ) ) ) )
belong-01 :arg0 ( and :op1 ( person :arg0-of ( produce-01 :arg1 building_name_0 ) :mod ( large :degree most :compared-to world ) ) :op2 ( person :arg0-of ( have-org-role-91 :arg1 country_name_0 :arg2 president ) ) :op3 ( person :arg0-of ( have-org-role-91 :arg1 country :arg2 president ) ) :op4 ( person :arg0-of ( have-org-role-91 :arg1 country :arg2 president ) ) :op5 ( person :arg0-of ( have-org-role-91 :arg1 country :arg2 president ) ) ) :arg1 ( state :quant num_0 :arg1-of ( include-91 :arg2 state ) :mod ( large :degree most :compared-to world ) )
and :op1 ( realize-01 :arg0 she :arg1 ( sleep-01 :polarity - :arg0 it ) ) :op2 ( wake-up-02 :arg1 it :arg3 phone ) :op3 ( find-01 :arg0 she :arg1 it ) :op4 ( find-01 :arg0 she :arg1 it ) :op5 ( find-01 :arg0 she :arg1 it )
multi-sentence :snt1 ( hitters :arg0 you :location ( section :mod large ) ) :snt2 ( and :op1 ( leaves :quant lot ) :op2 ( leave-13 :arg1 ( pain-01 :arg1 kÃ¶ri ) ) :op3 ( leaves :arg1 ( and :op1 fish :op2 fish :op4 fish :op5 fish :op6 fish :op7 ( food :mod commerce ) ) ) )
multi-sentence :snt1 ( amr-unknown
brainwash-01 :arg1 ( seyredebilir :name ( name :op1 seyredebilir :op2 seyredebilir ) ) :arg2 ( move-01 :arg1 bozuculuktan :arg2 home ) :arg1-of complete-02
say-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg2 official ) ) :arg1 ( and :op1 ( open-02 :arg0 police :arg1 fire :instrument ( cat :mod rubber :arg2-of ( include-01 :arg1 ( boy :arg1-of ( age-01 :arg2 ( temporal-quantity temporal-quantity_num_0 :unit year ) ) ) ) ) ) :op2 ( kill-01 :arg1 ( person :quant num_0 ) ) ) :location ( country :arg1-of ( report-01 :location country ) )
chance-02 :arg1 ( work-01 :arg0 i :arg2 he )
and :op1 ( close-01 :arg0 country_name_0 :arg1 ( border-01 :arg1 country :arg2 ( country_name_1 :location south ) ) :purpose ( cut-off-04 :arg0 country :arg1 ( flow-01 :arg1 ( person :arg0-of immigrate-01 ) ) ) ) :op2 ( declare-01 :arg0 country :arg2 ( and :op1 ( state :mod emergency ) :op2 ( person :arg0-of ( try-01 :arg1 ( enter-01 :arg0 person :arg1 country :manner ( law :polarity - ) ) ) :manner ( law :polarity - ) ) ) )
multi-sentence :snt1 ( location_name_0 :arg1-of ( include-91 :arg2 ( life :mod short ) ) ) :snt2 ( and :op1 ( play-01 :arg1 ( song :quant ( between :op1 num_0 :op2 num_2 ) ) :arg1-of long-03 ) :op2 ( fit :quant num_3 :domain ( song :quant num_3 ) ) )
pain-01 :mod also
and :op1 ( oppose-01 :arg0 we :arg1 terrorism ) :op2 ( come-01 :arg1 we :arg3 ( fact :arg1-of ( say-01 :arg0 ( individual :mod organization_name_0 ) ) ) )
perform :arg0 person_name_0 :arg1 ( surgery-01 :arg1 shoulder :arg2 shoulder ) :arg2 person_name_1 :li num_0
say-01 :arg0 police :arg1 ( flee-05 :arg0 victim :arg1 scene :purpose ( help-01 :arg0 victim :arg1 ( drive-01 :arg0 victim :arg1 multiplier ) ) )
cause-01 :arg0 ( position-01 :arg1 ( person :quant some :arg1-of ( include-91 :arg2 ( position :poss ( and :op1 ( person :arg0-of ( have-org-role-91 :arg2 head-of-state ) ) :op2 ( person :arg0-of ( have-org-role-91 :arg1 tapestries :arg2 -lrb- ) ) :op3 ( person :arg0-of ( try-01 :arg1 ( cross-02 :arg0 person :arg1 ( syria :arg0 person :arg1 ( and :op1 ( person :arg0-of ( have-rel-role-91 :arg1 person :arg2 child ) ) :op2 ( person :arg0-of ( have-rel-role-91 :arg1 person :arg2 child ) ) :op3 ( person :arg0-of ( have-rel-role-91 :arg1 person :arg2 child ) ) :op4 ( person :arg0-of ( have-rel-role-91 :arg1 person :arg2 child ) ) :op5 ( person :arg0-of ( have-rel-role-91 :arg1 person :arg2 child ) ) :op5 ( person :arg0-of ( have-rel-role-91 :arg1 person :arg2 child ) ) :op6 ( person :arg0-of ( have-rel-role-91 :arg1 person :arg2 child ) ) :op6 ( person :arg0-of ( have-rel-role-91 :arg1 person :arg2 child ) ) :op7 ( person :arg0-of ( have-rel-role-91 :arg1 person :arg2 child ) ) :op8 ( person :arg0-of ( have-rel-role-91 :arg1 person :arg2 child ) ) :op8 ( person :arg0-of ( have-rel-role-91 :arg1 person :arg2 child ) ) :op8 ( person :arg0-of ( have-rel-role-91 :arg1 person :arg2 child ) ) :op8 ( person :arg0-of ( have-rel-role-91 :arg1 person :arg2 child ) ) :op8 ( person :arg0-of ( have-rel-role-91 :arg1 person :arg2 child ) ) :op8 ( person :arg0-of ( have-rel-role-91 :arg1 person :arg2 child ) ) :op8 ( person :arg0-of ( have-rel-role-91 :arg1 person :arg2 child ) ) :op8 ( person :arg0-of ( have-rel-role-91 :arg1 person :arg2 child ) ) :op8 ( person :arg0-of ( have-rel-role-91 :arg1 person :arg2 child ) ) ) ) ) ) ) ) ) ) ) )
say-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg1 ( and :op1 person_name_0 :op2 person_name_1 ) :arg2 ( arrest-01 :arg1 person ) ) ) :arg1 ( and :op1 ( possible-01 :arg1 ( and :op1 ( person :arg0-of write-01 ) :op2 ( journalist :location country_name_2 ) :op3 ( asli :location society ) ) :purpose ( borrow-01 :arg0 and :arg1 ( duty :poss and ) ) ) :op2 ( added :arg0 ( and :op1 ( opine-01 :arg0 public ) :op2 ( thing :arg1-of ( opine-01 :arg0 public ) ) :op3 ( thing :arg1-of ( opine-01 :arg0 public ) ) ) ) )
doctor :mod tekrardan :mod also :time tomorrow
require-01 :arg0 ( thing :arg2-of ( have-part-91 :arg1 ( gas :arg1-of natural-03 :location ( sea :arg1-of deep-02 :location ( sea :arg1-of deep-02 ) ) ) :mod large ) ) :arg1 ( and :op1 ( complicate-01 :arg1 ( thing :arg2-of ( solve-01 :arg1 ( thing :arg2-of ( solve-01 :arg1 ( thing :arg1-of natural-03 ) ) ) ) ) ) :op2 ( thing :arg2-of ( solve-01 :mod expensive ) :arg1-of complicate-01 ) ) :location here :time ( wait-01 :arg1 ( try-01 :arg1 ( start-01 :arg1 ( start-01 :arg1 ( start-01 :arg1 ( and :op1 ( start :arg1 ( gas :arg1-of natural-03 :mod gas ) ) :op2 ( develop-02 :arg1 plant ) ) ) ) ) ) )
contrast-01 :arg2 ( realistic-03 :arg1 ( experience-01 :arg1-of ( experience-01 :arg0 i ) ) :time ( until :op1 ( yak?nd?k :degree very ) ) )
refer-01 :arg0 ( person_name_0 :arg1-of ( include-91 :arg2 ( person :arg0-of ( have-org-role-91 :arg1 ( person_name_1 :mod ( young :degree most ) :location city_name_2 ) :arg2 member ) ) :arg2 member ) ) :arg1 ( person :mod young :mod ( young :degree most :compared-to ( person :mod young :arg0-of ( welcome-01 :arg1 person :arg2 ( way :mod shameful :manner-of ( welcome-01 :arg1 person ) ) ) ) ) ) :arg1-of normal-02 :arg1-of ( cause-01 :arg0 ( find-01 :arg1 ( spotlight :location butter ) ) ) :arg1-of normal-02
photograph-01 :mode interrogative :arg0 ( photograph-01 :location ( country_name_1 :location country_name_2 ) ) :arg1 ( photograph-01 :location location_name_0 )
burn-01 :arg1 ( building :mod wooden )
give-01 :arg0 person_name_0 :arg1 money :arg2 ( part :part-of bleachers :mod big ) :time ( after :op1 ( give-01 :arg0 person :arg1 money :arg2 person ) )
invite-01 :arg0 ( person :arg0-of study-01 :location ( inside :op1 ( person :arg0-of study-01 ) ) ) :arg1 policy :condition ( locked :polarity - :arg1 door )
have-03 :arg0 ( other :example argue-01 ) :arg1 that
say-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg1 organization_name_0 ) ) :arg1 ( team :mod person_name_1 :arg0-of ( have-org-role-91 :arg1 organization :arg3 ( lead-02 :arg0 team :arg1 team ) ) ) :time ( night :time ( after :op1 ( win-01 :arg0 team :arg1 ( storm :mod ( old :degree ( more :degree much ) ) :arg1-of ( match-01 :arg2 ( and :op1 ( send-01 :arg1 ( '' :mod ibretlik ) :arg2 ( league :arg1-of ( describe-01 :arg0 leagues :arg2 ( game :mod '' ) ) ) ) :op2 ( '' :polarity - :arg1 '' :degree very ) ) ) ) ) ) )
gain-02 :arg1 ( thing :arg1-of ( gain-02 :arg1-of experience-01 ) ) :time now
say-01 :arg0 person_name_0 :arg1 ( thing :arg2-of ( copy-01 :arg1 ( fm :mod classic ) ) ) :li num_0
say-01 :arg0 person_name_0 :arg1 ( contrast-01 :arg1 ( give-up-07 :polarity - :arg0 person :arg1 up ) :arg2 ( continue-01 :arg1 ( push-01 :arg0 ( government-organization :arg0-of govern-01 ) :arg1 ( thing :arg1-of perform-01 ) :time ever ) ) )
say-01 :arg0 ( person_name_0 :arg0-of ( have-org-role-91 :arg2 ( person :arg0-of manage-01 ) ) ) :arg1 ( deal-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg2 ( person :arg0-of manage-01 ) ) ) :mod great )
release-01 :arg1 ( secret :poss state_name_0 ) :time ( before :op1 now :quant ( between :op1 ( temporal-quantity temporal-quantity_num_0 :unit month ) :op2 ( temporal-quantity temporal-quantity_num_1 :unit month ) ) )
s?n?zd?r :arg0 ( ?? :name ( name :op1 anlam :op2 anlam ) ) :arg1 it :time so-far
possible-01 :arg1 ( try-01 :arg0 you :arg1 ( card :mod red :domain this ) ) :time ( say-01 :arg0 i :arg1 that )
cause-01 :arg0 ( offer-01 :arg0 he :arg1 ( join-01 :arg0 he :arg1 company ) ) :arg1 ( accept-01 :polarity - :arg0 he :arg1 it )
multi-sentence :snt1 story :snt2 ( expect-01 :arg0 we :arg1 ( address :mod e-mail :poss we ) )
anger-01 :arg1 city_name_0 :mod also
and :op1 ( documentary :name ( name :op1 magazine_name_0 ) :domain he ) :op2 ( envision-01 :arg0 he :arg1 ( and :op1 ( wait-01 :arg1 we :arg2 ( person :arg0-of ( have-org-role-91 :arg1 ( family :mod royal ) :arg2 member ) ) :arg1-of ( cause-01 :arg0 ( sit-01 :arg1 we :arg2 ( family :mod royal :location ( theater :mod movie ) ) ) ) ) :op2 ( notice-01 :arg0 we :arg1 ( sit-01 :arg1 ( person :arg0-of ( have-org-role-91 :arg2 head-of-state ) ) :arg2 ( person :arg0-of ( have-org-role-91 :arg2 head-of-state ) ) ) ) ) )
exhibit-01 :arg1 map :medium ( above :op1 ( everything :mod else :arg1-of ( tuttu?una :arg0 government-organization_name_0 :arg2 ( and :op1 person_name_1 :op2 ( person_name_1 :arg0-of ( have-org-role-91 :arg2 colleagues ) ) ) ) ) )
say-01 :arg1 this :arg2 person_name_0 :time ( beat-03 :arg0 person :arg1 ( we :quant num_0 ) :arg2 ( wrestling :arg1 person ) ) :arg1-of ( cause-01 :arg0 ( hear-01 :polarity - :arg0 i :arg1 ( talk-01 :arg0 person :arg1 ( invest-01 :arg0 person ) ) ) )
obligate-01 :arg1 energy :arg2 ( use-01 :arg1 energy :purpose ( prevent-01 :arg0 energy :arg1 ( secession :source ( country :mod this ) :arg1-of ( likely-01 :degree less ) :arg1-of ( likely-01 :degree less ) :arg1-of ( cause-01 :arg0 ( likely-01 :arg1 ( make-01 :arg0 country :arg1 ( effort :purpose ( selfie :arg1 ( country :mod this ) ) ) :arg1-of ( cause-01 :arg0 ( want-01 :polarity - :arg0 country :arg1 ( tendencies :arg1 separatist ) ) ) ) :degree less ) ) ) ) )
word :arg0 ( word :quant num_0 ) :arg1 ( perform-02 :arg0 person_name_0 :arg1 ( movie :name ( name :op1 ?? :op2 ?? :op3 bahsettiren ) ) ) :arg2 ( person_name_1 :arg0-of ( have-org-role-91 :arg2 bahsettiren ) ) :manner success
report-01 :arg0 ( ministry :mod health ) :arg1 ( wound-01 :arg1 ( person :quant num_0 ) ) :arg1-of ( follow-01 :arg2 ( collapse-01 :arg1 work-of-art_name_0 ) )
divide-02 :arg1 world :arg2 region
wraps :arg0 ( trio :poss ( person :arg0-of oppress-01 ) :arg0-of ( play-08 :arg1 album ) ) :arg1 ( concert :arg0 ( trio :poss ( person :arg0-of oppress-01 ) :arg0-of ( play-08 :arg1 album ) ) ) :arg2 concert :time ( day :ord ( ordinal-entity ordinal-entity_num_0 ) )
multi-sentence :snt1 ( include-91 :arg1 ( and :op1 ( person :arg0-of perpetrate-01 ) :op2 ( person :arg0-of perpetrate-01 ) :op3 ( person :arg0-of perpetrate-01 ) :op4 ( person :arg2-of suspect-01 ) :op5 ( person :arg2-of suspect-01 ) ) :arg2 ( and :op1 ( province :arg1-of differ-02 :location country_name_0 ) :op2 ( person :arg0-of ( find-01 :arg1 ( card :name ( name :op1 '' :op2 card :op3 card :op4 card :op5 card :op6 card :op7 card :op6 card :op7 card :op8 card :op9 card :op8 card :op9 card ) ) ) ) ) ) :snt2 ( information :arg0 citizen :arg1 ( information :topic card ) )
multi-sentence :snt1 ( '' :arg0 ( person_name_0 :arg0-of ( have-org-role-91 :arg1 ( person :arg0-of ( have-org-role-91 :arg2 ( person :arg0-of ( manage-01 :arg1 tigers ) ) ) ) :arg2 ( person :arg0-of ( manage-01 :arg1 ( person :arg0-of ( manage-01 :arg1 tigers ) ) ) ) ) ) :arg1 ( whatever :mod triumph ) ) :snt2 ( '' :mode expressive )
give-01 :arg0 ( person :arg2-of ( include-01 :arg1 crisis ) :arg2-of ( include-01 :arg1 crisis ) :arg2-of ( include-01 :arg1 crisis ) :arg2-of ( include-91 :arg1 ( combat-01 :arg1 crisis ) ) :arg2-of ( include-91 :arg1 ( combat-01 :arg1 crisis ) ) :arg2-of ( include-91 :arg1 ( combat-01 :arg1 crisis ) ) :arg2-of ( include-91 :arg1 ( combat-01 :arg1 crisis ) ) ) :arg1 ( power :arg1-of wide-02 ) :arg2 authority
show-01 :arg0 ( poll-01 :location ( organization_name_1 :arg1-of ( include-91 :arg2 ( appear-01 :arg1 ( appear-01 :arg1 person_name_2 ) ) ) ) ) :arg1 ( prefer-01 :arg0 person :arg1 ( prefer-01 :arg0 person ) ) :time ( week :mod last ) :location organization
and :op1 ( use-01 :arg0 ( and :op1 ( person_name_0 :arg0-of ( have-rel-role-91 :arg1 ( person :arg0-of ( have-rel-role-91 :arg1 person :arg2 parent ) ) :arg2 parent ) ) :op2 ( person :arg0-of ( have-rel-role-91 :arg1 person :arg2 parent ) ) :op3 ( person :arg0-of teach-01 ) ) :arg1 ( theme :mod ( or :op1 ( product :mod antiseptic ) :op2 ( product :mod non-alcoholic ) ) ) ) :op2 ( advise-01 :arg0 and :arg2 ( reach-01 :arg0 and :arg1 ( reach-01 :arg0 child :arg1 child ) ) )
wound-01 :arg1 ( force :arg1-of ( back-01 :arg0 ( and :op1 ( force :arg1-of special-02 :mod country_name_0 ) :op2 ( force :arg1-of ( organize-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg2 minister ) ) ) :arg2-of ( include-91 :arg1 ( rescue-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg2 minister ) ) ) :arg2-of ( include-91 :arg1 ( rescue-01 :arg0 person :arg1 hostage ) ) ) ) :arg2-of ( include-91 :arg1 ( rescue-01 :arg0 person :arg1 hostage ) ) :arg2-of ( include-91 :arg1 ( rescue-01 :arg0 person :arg1 hostage ) ) :arg2-of ( include-91 :arg1 ( rescue-01 :arg0 person :arg1 hostage ) ) ) ) )
possible-01 :arg1 ( mean-01 :arg1 that :arg2 ( face-01 :arg0 we :arg1 ( face-01 :arg0 we :location here ) :time ( late :degree more ) ) ) :condition ( talk-01 :arg0 they :arg2 we )
develop-02 :arg1 it :mod also
multi-sentence :snt1 ( contrast-01 :arg1 ( person_name_0 :arg0-of ( have-org-role-91 :arg2 midfielder ) ) :arg2 ( vuru :mod right ) ) :snt2 ( vuru :arg0 ( and :op1 person_name_1 :op2 ( briandozier :ord ( ordinal-entity ordinal-entity_num_0 ) :name ( name :op1 solak ) ) :ord ( ordinal-entity ordinal-entity_num_0 ) ) :time ( before :op1 ( kald?rmadan :arg1 sallarken :arg2 ( make-01 :arg0 country :arg1 vuru ) ) ) )
worry-02 :arg0 they :arg1 they :arg1-of ( cause-01 :arg0 ( normal-02 :arg1 ( involve-01 :arg1 they :arg2 ( far :degree so ) ) ) )
wound-01 :arg1 ( person :quant num_0 ) :arg1-of ( cause-01 :arg0 ( bury-01 :arg1 ( body :consist-of ( person :arg0-of ( have-org-role-91 :arg1 ( family :arg1-of ( have-org-role-91 :arg0 person :arg2 member ) ) :arg2 member ) ) ) :arg2 ( bury-01 :arg1 body :arg2 ( body :mod die-01 ) :time ( after :op1 ( bring-up-02 :arg1 twink ) ) ) ) ) :time ( time :arg1-of same-01 )
discuss-01 :polarity -
multi-sentence :snt1 ( think-01 :arg0 i :arg1 ( good-04 :polarity - :arg1 ( issue-02 :mod this ) :arg2 ( issue-02 :mod this ) :degree enough ) ) :snt2 ( say-01 :arg0 he )
diva :mode expressive
want-01 :arg0 ( family :arg1-of ( include-91 :arg2 ( person :arg0-of ( have-org-role-91 :arg1 ( family :arg1-of ( have-org-role-91 :arg0 person :arg2 member ) ) :arg3 ( apprentice-01 :arg0 person ) ) ) :arg3 all ) ) :arg1 ( swim-01 :arg0 person :arg2 here )
say-01 :arg0 match-03 :arg1 ( and :op1 ( high-02 :arg1 ( and :op1 storm :op2 roosters ) :degree more :compared-to ( showdown :arg1 ( and :op1 organization_name_0 :op2 organization_name_1 ) ) ) :op2 ( higher :arg1 and :degree more ) ) :arg1-of ( point-out-02 :arg0 match-03 )
or :op1 ( bilekleriyle :mod this ) :op2 ( connect-01 :polarity - :arg2 ( sakatl?klar?yla :time previous ) )
represent-01 :arg0 amr-unknown :arg1 ( thing :quant whole ) :time ( morning :mod this )
and :op1 ( think-01 :arg0 they :arg1 ( same-01 :arg1 ( thing :arg1-of ( same-01 :arg2 ( blair :mod tony ) ) ) :frequency often :time ( time :arg1-of same-01 ) ) :frequency often ) :op2 ( cause-01 :arg0 ( understand-01 :polarity - :arg1 ( need-01 :arg0 he :arg1 ( feed-01 :arg0 he :arg2 muz ) ) ) :arg1 ( thing :arg1-of ( need-01 :arg0 he ) ) )
and :op1 ( ask-02 :arg0 ( book :arg1-of ( supply-01 :arg0 ( person :arg0-of ( have-rel-role-91 :arg1 child :arg2 child ) ) :arg2 ( person :arg0-of ( care-03 :arg1 child ) ) ) ) :arg1 ( person :arg0-of ( have-org-role-91 :arg2 ( minister :mod prime ) ) ) :arg2 ( person :arg0-of ( have-org-role-91 :arg2 ( minister :mod prime ) ) ) ) :op2 ( choose-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg2 ( minister :mod prime ) ) ) :arg1 ( choose-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg2 ( minister :mod prime ) ) ) ) )
multi-sentence :snt1 ( possible-01 :polarity - :arg1 ( understand-01 :arg0 ( person :arg0-of ( have-rel-role-91 :arg2 father ) ) :arg1 ( thing :arg2-of ( taste :arg1 life :prep-as ( person :arg0-of study-01 ) ) ) ) ) :snt2 ( possible-01 :polarity - :arg1 ( understand-01 :arg1 ( relation-03 :arg1 wrong ) ) ) :snt3 ( obligate-01 :arg2 ( think-01 :arg1 ( obligate-01 :arg2 ( point :mod this ) ) ) )
be-located-at-91 :arg1 ( pot :ord ( ordinal-entity ordinal-entity_num_0 ) :prep-with ( and :op1 water :op2 doldurulur ) :arg1-of deep-02 ) :arg2 spaces
say-01 :arg1 ( invite-01 :arg0 ( person :arg0-of visit-01 ) :arg1 ( person :arg0-of visit-01 ) :arg2 ( world :name ( name :op1 idyllic :op2 world :op3 world :op4 world :op5 world :op6 world :op7 world ) ) ) :arg2 ( person :arg0-of visit-01 )
grow-01 :arg1 lamb :location ( area :mod this )
say-01 :arg0 person_name_0 :arg1 ( possible-01 :arg1 ( define-01 :arg0 country_name_1 :arg1 ( thing :arg1-of ( recommend-01 :arg0 country ) ) :arg2 ( thing :arg2-of recommend-01 :mod grow-01 ) ) :arg1-of ( cause-01 :arg0 ( '' :arg0 ( crisis :mod finance :location company_name_3 ) :arg1 ( rate :mod benchmark :poss ( session :quant num_0 ) ) :time ( crisis :mod finance :location company_name_3 ) ) ) )
person_name_0 :arg0-of ( licks :arg1 spit )
phone-number-entity phone-number-entity_num_0
report-01 :arg0 ( magazine_name_0 :mod weekly ) :arg1 ( decide-01 :arg0 organization_name_1 :arg1 ( bring-01 :arg0 organization :arg1 ( person :quant num_0 ) :arg2 ( attack-01 :arg0 person :arg1 ( person :quant num_0 ) ) ) ) :medium internet
and :op1 ( dinner :arg0 i :arg1 i ) :op2 ( person :arg0-of ( teach-01 :arg1 i ) ) :time ( and :op1 ( stress-01 :arg0 i :arg1 ( stress-01 :arg0 i ) ) :op2 ( decline-01 :arg1 weight ) )
example :quant num_0 :arg1-of ( include-91 :arg2 ( example :arg1-of ( bad-07 :degree most ) :time ( become-01 :arg1 ( gerilemeden :mod ( precedent :polarity - ) ) :arg2 recover-01 ) ) ) :arg1-of contrary-01
and :op1 ( terrorist :arg0-of ( have-org-role-91 :arg1 criminal-organization_name_0 :arg2 terrorist ) ) :op2 ( terrorist :arg0-of ( detonating :arg1 ( control-01 :arg0 terrorist :arg1 explosive ) ) ) :manner ( control-01 :arg0 terrorist :arg1 ( vehicle :mod police :mod police ) )
multi-sentence :snt1 ( have-concession-91 :arg1 ( express-01 :arg0 ( person :quant num_0 :arg1-of ( include-91 :arg2 ( person :arg0-of ( have-org-role-91 :arg2 ( person :arg1-of ( expert-01 :arg2 trust-01 ) ) ) ) ) ) :arg1 ( rule :poss person_name_0 ) ) :arg2 ( express-01 :arg0 ( person :quant num_0 :arg1-of ( include-91 :arg2 ( person :arg0-of ( have-org-role-91 :arg2 ( person :arg1-of ( expert-01 :arg2 trust-01 ) ) ) ) ) :mod every ) :arg1 ( rule :poss person ) :degree ( more :mod certain ) :compared-to ( person :arg1-of ( include-91 :arg2 ( person :arg0-of ( have-org-role-91 :arg2 ( person :arg1-of expert-01 ) ) ) ) :arg0-of ( have-org-role-91 :arg2 ( person :arg1-of expert-01 ) ) :arg0-of ( have-org-role-91 :arg2 ( person :arg1-of expert-01 ) ) :arg0-of ( have-org-role-91 :arg2 ( person :arg1-of expert-01 ) ) :arg0-of ( have-org-role-91 :arg2 ( person :arg1-of expert-01 ) ) :arg0-of ( have-org-role-91 :arg2 ( person :arg1-of expert-01 ) ) :arg0-of ( have-org-role-91 :arg2 ( person :arg1-of expert-01 ) ) :arg0-of ( have-org-role-91 :arg2 ( person :arg1-of expert-01 ) ) :arg0-of ( have-org-role-91 :arg2 ( person :arg1-of expert-01 ) ) :arg0-of ( have-org-role-91 :arg2 ( person :arg1-of expert-01 ) ) :arg0-of ( have-org-role-91 :arg2 ( person :arg1-of expert-01 ) ) :arg0-of ( have-org-role-91 :arg2 ( person :arg1-of expert-01 ) ) :arg0-of ( have-org-role-91 :arg2 ( person :arg1-of expert-01 ) ) :arg0-of ( have-org-role-91 :arg2 ( person :arg1-of expert-01 ) ) ) ) )
multi-sentence :snt1 ( look-02 :arg0 he :arg1 ( good :mod good :arg1-of ( practice-01 :arg0 he ) :mod good ) ) :snt2 ( good :degree more :prep-in ( case :mod this ) :arg1-of ( cause-01 :arg0 ( visually :arg0 he :arg1 ( company_name_0 :arg1-of ( go-06 :arg0 he :time game ) ) ) ) )
contrast-01 :arg2 ( open-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg1 organization_name_0 :arg2 ( minister :mod vice ) ) ) :arg1 fire :arg1-of ( cause-01 :arg0 ( control-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg2 militant ) ) :arg1 ( person :arg0-of ( have-org-role-91 :arg2 militant ) ) :arg1-of ( near-02 :arg2 ( village :poss ( person :arg0-of ( have-org-role-91 :arg2 militant ) ) ) ) ) ) )
employ-01 :arg1 ( person :quant ( about :op1 num_0 ) ) :location caravan
and :op1 ( analyze-01 :arg0 ( person :arg0-of ( analyze-01 :arg1 organization_name_0 ) ) :arg1 ( person_name_1 :arg0-of ( analyze-01 :arg1 ( rate-entity-91 :arg1 ( monetary-quantity monetary-quantity_num_0 :unit dollar ) :arg2 ( volume-quantity volume-quantity_num_1 :unit gallon ) ) ) :arg2 ( rate-entity-91 :arg1 ( monetary-quantity monetary-quantity_num_1 :unit dollar ) :arg2 ( volume-quantity volume-quantity_num_1 :unit gallon ) ) ) ) :op2 ( analyst :arg0 organization :arg1 ( rate-entity-91 :arg1 ( monetary-quantity monetary-quantity_num_1 :unit dollar ) :arg2 ( volume-quantity volume-quantity_num_1 :unit gallon ) ) :time ( perakendecilerinin :arg0 organization_name_2 :time ( after :op1 now :quant ( up-to :op1 ( temporal-quantity temporal-quantity_num_2 :unit year ) ) ) ) ) :medium report
obtain-01 :arg1 ( point :mod main :arg1-of ( divide-02 :arg2 plant ) ) :li num_0
say-01 :arg0 he :arg1 ( guarantee-01 :polarity - :time tomorrow :time ( after :op1 all ) )
multi-sentence :snt1 ( contrast-01 :arg2 ( say-01 :arg0 ( person_name_0 :arg0-of ( have-org-role-91 :arg1 press ) ) :arg1 ( want-01 :polarity - :arg0 person :arg1 ( bag :mod full :consist-of an?lmas?n ) ) ) ) :snt2 ( contrast-01 :arg2 ( include-01 :polarity - :arg1 ( way :mod this ) :time ( way :mod this ) ) )
multi-sentence :snt1 ( person :mode interrogative :arg0-of ( drive-01 :arg1 taxi ) :location location_name_0 ) :snt2 ( ehmuz :mode interrogative )
multi-sentence :snt1 ( and :op1 ( accuse-01 :arg0 company_name_0 :arg1 ( deny-01 :arg0 company :arg1 ( deny-01 :arg1 ( music :mod live-01 ) :arg2 ( and :op1 commerce :op2 public ) ) ) :arg2 ( and :op1 commerce :op2 ( education :arg1-of public-02 :topic ( issue-02 :arg0 ( company :arg0-of compete-02 ) ) ) ) ) ) :snt2 ( argue-01 :arg0 he )
have-concession-91 :arg1 ( lead-01 :arg0 ( person :quant num_0 :arg1-of ( include-91 :arg2 ( person :arg1-of liberal-02 ) ) ) :location ( in-front-of :op1 ( group :mod this ) ) ) :arg2 ( lead-01 :arg0 ( point :quant num_1 ) :time now )
study-01 :duration ( temporal-quantity :quant 1/2 :unit year )
and :op2 ( lie-07 :arg1 lesson :arg2 therein )
publish-01 :arg0 ( person :arg0-of vote-01 :arg1-of ( include-91 :arg2 ( person :arg0-of vote-01 ) ) :quant ( more-than :op1 1/2 ) ) :arg1 ( say-01 :arg0 person :arg1 ( locked :arg0 person :arg1 ( vote-01 :arg0 person :arg1 person_name_0 ) ) ) :medium ( tuesday :arg1-of ( publish-01 :location ( tuesday :mod new ) ) )
infer-01 :arg1 ( order-01 :arg0 ( safe-01 :arg1 ( and :op1 country_name_0 :op2 ( south :part-of border ) ) ) :arg2 ( repaired :arg1-of abandon-01 ) )
share-01 :arg0 ( and :op1 ( mouth :part-of person_name_0 ) :op2 ( company :mod paper ) ) :arg1 ( propose-01 :arg0 organization_name_1 ) :arg2 ( thing :arg1-of ( propose-01 :arg0 organization ) ) :arg1-of ( cause-01 :arg0 ( sell-01 :arg0 company :arg1 ( percentage-entity percentage-entity_num_0 :quant-of ( thing :arg1-of ( value-01 :arg2 lose-02 ) ) ) ) :time ( after :op1 ( drop-01 :arg1 ( percentage-entity percentage-entity_num_0 :quant-of ( thing :arg1-of ( value-01 :arg2 lose-02 ) ) ) ) ) )
matter :arg1-of ( resemble-01 :arg2 ( and :op1 book :op2 ( life :arg1-of black-04 ) ) :mod still )
aspire-01 :arg1 ( hope-01 :arg1 ( surprise-01 :arg1 cloud ) )
say-01 :arg0 he :arg1 ( possible-01 :arg1 ( take-01 :arg0 we :arg1 ( person :arg0-of ( have-rel-role-91 :arg1 i :arg2 son ) ) :arg2 hospital ) :time ( late :op1 ( temporal-quantity temporal-quantity_num_0 :unit hour ) :degree more ) )
transfer-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg1 organization_name_0 :arg2 president ) :arg0-of ( have-org-role-91 :arg1 ( person_name_1 :arg0-of ( have-org-role-91 :arg1 organization :arg2 president ) ) :arg2 ( minister :mod prime ) ) ) :arg1 ( duty :purpose ( block-01 :arg1 ( fund-01 :arg1 fund ) ) ) :arg2 ( person :arg0-of ( have-org-role-91 :arg1 organization :arg2 president ) )
multi-sentence :snt1 ( white
definite :mod definite
cause-01 :arg0 ( and :op1 ( do-02 :arg1 time ) :op2 ( thing :manner-of ( and :op1 ( do-02 :arg1 time ) :op2 ( thing :manner-of and ) ) ) ) :arg1 ( amr-unknown :domain amr-unknown )
possible-01 :arg1 ( solve-01 :arg0 ( person :arg1-of miss-01 ) :arg1 ( person :quant num_0 :arg0-of study-01 :arg0-of ( have-03 :polarity - :arg1 ( test :quant lot :arg1-of practice-01 ) ) ) :time ( time :arg1-of same-01 ) :mod also )
block-01 :arg0 ( force :mod security :poss organization_name_0 ) :arg1 ( thing :arg1-of practice-01 )
send-01 :arg1 they :arg2 organization_name_0 :time ( late :degree more )
and :op1 ( include-91 :arg1 ( and :op1 person_name_0 :op2 ( thing :arg1-of ( allege-01 :arg0 person ) ) ) :arg2 ( allege-01 :arg1 ( activity-06 :arg0 country_name_2 :topic ( activity-06 :arg0 country_name_2 :arg1-of ( conduct-01 :arg0 country_name_2 ) ) ) ) ) :op2 ( expect-01 :arg1 ( tackle-01 :arg0 and :arg1 ( issue-02 :mod controversy :quant some ) ) )
and :op1 retailers :op2 ( organization_name_0 :time ( before :op1 now :quant ( between :op1 ( temporal-quantity temporal-quantity_num_0 :unit year ) :op2 ( temporal-quantity temporal-quantity_num_1 :unit year ) ) ) )
and :op1 ( start-01 :arg0 ( organization_name_0 :arg0-of ( start-01 :arg1 match-03 :manner fast ) :arg0-of ( start-01 :arg1 match-03 :manner fast :ord ( ordinal-entity ordinal-entity_num_0 ) ) :mod especially ) :arg1 match-03 ) :op2 ( affect-01 :arg0 ( thing :arg1-of ( include-91 :arg2 ( product :arg0-of play-01 ) :arg3 half ) ) :arg1 ( affect-01 :arg1 ( lead-01 :quant num_1 ) ) )
say-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg1 city_name_0 :arg2 correspondent ) :arg0-of ( have-org-role-91 :arg1 organization_name_1 :arg2 correspondent ) ) :arg1 ( remember-01 :arg0 person :arg1 ( and :op1 ( announce-01 :arg0 person :arg1 name ) :op2 ( announcing :arg0 person :arg1 ( reputation :poss person :arg1-of straight-04 ) :manner ( announce-01 :arg0 person :arg1 name ) ) ) ) :time ( begin-01 :arg1 ( date-entity dayperiod_date-entity_0 ) )
except-01 :arg1 ( die-01 :arg1 ( person :mod some ) ) :arg2-of ( except-01 :arg1 ( case-03 :arg1 alcohol ) )
and :op1 ( drop-05 :arg0 ( person_name_0 :arg1-of ( include-91 :arg2 ( person :arg1-of ( rank-01 :arg3 ( percentage-entity percentage-entity_num_0 ) ) ) :arg3 ( percentage-entity percentage-entity_num_0 ) ) ) :arg1 ball ) :op2 ( suppose-02 :arg1 number :arg2 ( cause-01 :arg0 person :arg1 ball ) )
and :op1 ( person_name_0 :arg0-of ( have-org-role-91 :arg2 ( minister :mod prime ) ) ) :op2 ( person_name_1 :arg0-of ( have-org-role-91 :arg2 ( minister :mod prime ) ) ) :purpose ( ensure-01 :arg0 person :arg1 ( want-01 :arg0 ( government-organization :arg0-of ( govern-01 :arg1 he ) ) :arg1 ( call-02 :arg0 government-organization ) ) )
recommend-01 :arg0 ( person_name_0 :arg0-of ( have-org-role-91 :arg1 ( jury :mod grand ) :arg2 member ) :ord ( ordinal-entity ordinal-entity_num_0 ) ) :arg1 ( open-01 :arg1 try-02 ) :arg3 ( person :quant num_2 :arg0-of ( have-org-role-91 :arg1 ( jury :mod grand ) :arg2 member ) )
say-01 :arg0 ( person_name_0 :arg0-of ( have-org-role-91 :arg2 general ) :arg0-of ( have-org-role-91 :arg2 general ) :arg0-of ( have-org-role-91 :arg2 general ) :arg0-of ( have-org-role-91 :arg2 general ) :arg0-of ( have-org-role-91 :arg2 general ) :arg0-of ( have-org-role-91 :arg2 general ) :arg0-of ( have-org-role-91 :arg2 general ) :arg0-of ( have-org-role-91 :arg2 general ) :arg0-of ( have-org-role-91 :arg2 general ) :arg0-of ( have-org-role-91 :arg2 general ) :arg0-of ( have-org-role-91 :arg2 general ) :arg0-of ( have-org-role-91 :arg2 general ) :arg0-of ( have-org-role-91 :arg2 general ) :arg0-of ( have-org-role-91 :arg2 general ) :arg0-of ( have-org-role-91 :arg2 general ) :arg0-of ( have-org-role-91 :arg2 general ) :arg0-of ( have-org-role-91 :arg2 general ) :arg0-of ( have-org-role-91 :arg2 general ) :arg0-of ( have-org-role-91 :arg2 general ) :arg0-of ( have-org-role-91 :arg2 general ) )
say-01 :arg0 ( organization_name_0 :arg1-of ( include-91 :arg2 ( person :arg0-of ( have-org-role-91 :arg1 ( hurricane :name ( name :op1 cape ) :mod cape ) :arg3 ( rate-entity-91 :arg1 num_0 :arg2 ( temporal-quantity temporal-quantity_num_1 :unit year ) ) ) ) ) ) :arg1 ( likely-01 :arg1 ( say-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg1 organization :arg3 ( rate-entity-91 :arg1 num_0 :arg2 ( temporal-quantity temporal-quantity_num_1 :unit year ) ) ) :arg3 ( rate-entity-91 :arg1 num_0 :arg2 ( temporal-quantity temporal-quantity_num_1 :unit year ) ) ) ) )
and :op1 ( attack-01 :arg0 ( person_name_0 :arg2-of ( include-91 :arg1 mr. ) ) :arg1 ( person :quant num_0 :arg0-of ( have-org-role-91 :arg1 game_name_1 :arg2 member ) ) ) :op2 ( ceremony :purpose ( kumpasla :arg1 ( kumpasla :arg2-of criminal-03 ) :mod too ) )
and :op1 ( fly-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg2 director ) :arg0-of ( have-org-role-91 :arg2 director ) ) :arg1 ( tempo :arg1 game ) ) :op2 ( manage-02 :arg0 person :arg1 ( ensure-01 :arg0 person :arg1 fluency ) )
announce-01 :arg0 ( person :arg0-of ( lead-02 :arg1 political-party_name_0 ) :arg0-of ( have-org-role-91 :arg1 political-party_name_1 :arg3 ( lead-02 :arg0 person :arg1 political-party ) ) ) :arg1 ( mr :arg0 person :arg1 ( phone :arg1-of mobile-02 ) ) :arg0-of ( cause-01 :arg1 ( bother-02 :polarity - :arg0 person :arg1 person :time ( arrives :arg1 speech ) ) )
say-01 :arg0 he :arg1 ( and :op1 ( person_name_0 :arg0-of ( have-rel-role-91 :arg1 person_name_1 :arg2 lawyer ) ) :op2 ( crime-02 :arg1 sex ) :arg1-of ( cause-01 :arg0 ( involve-01 :polarity - :arg1 crime-02 :arg2 ( involve-01 :arg1 ( element :mod ( sex :arg1-of significant-02 ) ) ) ) ) )
and :op1 ( walk-01 :arg0 ( salutes :name ( name :op1 artists ) :mod great ) :location stage ) :op2 ( salutes :arg0 ( person :arg0-of ( have-org-role-91 :arg1 person_name_0 :arg2 director ) ) :arg1 ( god :mod great ) ) :op3 ( burning :arg0 ( and :op1 ( person :arg0-of ( have-org-role-91 :arg2 director ) ) :op2 ( person :arg0-of ( have-org-role-91 :arg2 director ) ) :op3 ( person :arg0-of ( have-org-role-91 :arg2 director ) ) :op4 ( person :arg0-of ( have-org-role-91 :arg2 director ) ) :op5 ( person :arg0-of ( have-org-role-91 :arg2 director ) ) :op6 ( person :arg0-of ( have-org-role-91 :arg2 director ) ) :op6 ( person :arg0-of ( have-org-role-91 :arg2 director ) ) :op6 ( person :arg0-of ( have-org-role-91 :arg2 director ) ) :op6 ( person :arg0-of ( have-org-role-91 :arg2 director ) ) :op6 ( person :arg0-of ( have-org-role-91 :arg2 director ) ) :op6 ( person :arg0-of ( have-org-role-91 :arg2 director ) ) :op7 ( person :arg0-of ( want-01 :arg1 ( '' :arg0 person :arg1 ( album :poss person ) ) ) ) ) )
say-01 :arg0 person_name_0 :arg1 ( strictly :polarity - :arg0 ( team :name ( name :op1 -lsb- :op2 kyrgios :op3 kyrgios :op4 kyrgios :op5 kyrgios ) ) :arg1 ( game :mod ( strict :polarity - ) :topic game ) ) :arg1-of ( say-01 :arg0 he )
unite-01 :arg1 ( and :op1 ( company :mod beer :mod ( large :degree ( most :quant num_0 ) ) ) :op2 organization_name_0 :op3 ( person_name_1 :arg0-of ( have-org-role-91 :arg1 organization :arg3 ( lead-02 :arg0 and ) ) ) :op4 ( person :arg0-of ( have-org-role-91 :arg1 organization :arg3 ( lead-02 :arg0 and ) ) ) :op5 ( brand :mod well :example ( roof :arg1-of ( same-01 :arg2 same ) ) ) )
say-01 :arg0 ( cv :poss he :location ( website :poss organization_name_0 ) ) :arg1 ( take-01 :arg0 ( educate-01 :arg1-of ( publish-01 :location ( spring :poss organization ) ) ) :arg1 ( title :poss organization_name_1 ) )
say-01 :arg0 ( thing :arg1-of draft-01 :arg1-of ( publish-01 :medium ( field :poss ( thing :arg2-of sanction-02 ) ) ) ) :arg1 ( contrast-01 :arg1 ( have-03 :polarity - :arg0 ( and :op1 company :op2 business ) :arg1 ( and :op1 company :op2 business ) :purpose ( allow-01 :arg0 and :arg1 ( work-01 :arg0 and :accompanier country_name_0 ) ) ) :arg2 ( thing :arg1-of draft-01 :arg1-of ( publish-01 :medium ( field :poss sanction-02 ) ) ) )
and :op1 ( come-01 :arg1 he ) :op2 ( dragged :arg1 he :arg2 door )
reveal-01 :polarity - :arg1 ( die-01 :arg1 ( woman :quant num_0 :arg1-of ( include-91 :arg2 ( thing :arg2-of ( name-01 :arg1 ( woman :quant num_1 ) ) ) ) ) ) :arg1-of ( cause-01 :arg0 ( engulf :arg1 ( antiseptic :arg0-of ( contain-01 :arg1 ( substance :mod toxic ) ) ) ) ) :location ( thing :arg1-of ( contain-01 :arg0 ( thing :arg1-of ( contain-01 :arg0 ( woman :quant num_1 ) ) ) ) )
offer-01 :arg0 it :arg1 ( perspective :mod unique )
multi-sentence :snt1 ( obligate-01 :polarity - :arg1 you :arg2 ( nature :mod ( weather :mod even ) :mod ( weather :mod even ) ) ) :snt2 ( and :op1 ( boy :arg1-of ( name-01 :arg2 ( person :arg0-of ( win-01 :arg1 ( heart :part-of ( person :arg0-of ( have-rel-role-91 :arg1 he :arg2 daughter ) ) ) ) ) ) ) :op2 ( say-01 :arg0 boy :arg1 ( want-01 :arg0 person :arg1 ( see-01 :arg0 person :arg1 ( want-01 :arg0 person :arg1 ( see-01 :arg0 person :arg1 ( want-01 :arg0 person :arg1 ( see-01 :arg0 person :arg1 ( person :arg1-of ( die-01 :arg1-of ( know-01 :polarity - :arg0 love-01 ) ) ) ) ) ) ) ) ) ) )
rise-01 :arg1 ( index :mod num_0 ) :arg4 ( point :quant ( between :op1 num_0 :op2 num_2 ) :arg1-of ( increase-01 :arg2 ( percentage-entity percentage-entity_num_0 ) ) )
do-02 :arg0 we :arg1 this
complain-01 :arg0 i :arg1 he
and :op1 ( orchestra :arg0 ( organization_name_1 :part-of ( organization_name_1 :time night ) ) :arg1 ( and :op1 ( music :mod classical :mod turkish ) :op2 ( music :mod turkish ) :op3 ( music :mod turkish ) ) :arg2 together ) :op2 ( take-01 :arg0 ( arrange-01 :arg1 ( arrange-01 :arg1-of ( result-01 :arg2 light ) ) ) :arg1 stage :time ( era :mod era ) )
multi-sentence :snt1 ( be-located-at-91 :arg1 ( corner :mod another ) :arg2 ( be-located-at-91 :arg1 universe :arg2 ( corner :mod another :part-of universe ) ) ) :snt2 ( event :time now )
and :op1 ( cost-01 :arg1 ( thing :arg2-of ( price-01 :arg1 oil ) ) :arg2 ( rate-entity-91 :arg1 ( less-than :op1 ( mass-quantity mass-quantity_num_0 :unit kilogram ) ) :arg2 ( temporal-quantity temporal-quantity_num_2 :unit year ) ) ) :op2 ( manufacture-01 :arg1 ( reason :arg0-of ( cause-01 :arg1 ( manufacture-01 :arg1 ( embargo-01 :arg1 country_name_0 ) ) ) ) :mod main )
say-01 :arg0 he :arg1 ( continue-01 :arg0 we :arg1 ( determine-01 :arg0 we :arg1 ( fight-01 :arg0 we :arg1 terrorism ) ) )
appear-01 :arg1 ( person :quant num_0 :arg1-of ( include-91 :arg2 ( person :quant num_1 :arg0-of ( have-03 :arg1 ( attitude :mod positive ) ) ) ) :arg0-of ( have-03 :arg1 ( attitude :mod positive ) ) :arg1-of ( include-91 :arg2 ( person :quant num_1 :arg1-of ( include-91 :arg2 ( person :quant num_1 :arg0-of ( have-03 :arg1 ( attitude :mod positive ) ) ) ) ) ) ) :time ( middle :op1 ( declares :arg0 person_name_0 :arg1 ( candidacy :poss person ) :time ( middle :op1 ( organization_name_1 :mod just ) ) ) )
person_name_0 :mod big :arg0-of ( have-org-role-91 :arg2 ( '' :mod small ) )
contrast-01 :arg1 ( possible-01 :arg1 ( feel-01 :arg0 you :arg1 ( pain-01 :arg1 you ) :ord ( ordinal-entity ordinal-entity_num_0 :range ( before :op1 ( form :poss ( person_name_1 :arg0-of ( peak-01 :arg1 it ) ) ) ) ) ) ) :arg2 ( waste-01 :arg0 this :arg1 opportunity :time now :time now )
multi-sentence :snt1 ( contrast-01 :arg1 it :arg2 ( dokunmu?tu :arg0 person_name_0 :arg1 person ) ) :snt2 ( ball :mod only :domain ( thing :arg1-of differ-02 ) )
important :domain ( position :mod Ã¼stlendim ) :mod also
repeal-01 :arg1 ( thing :arg1-of ( call-01 :arg2 duty ) :quant series )
speak-01 :arg0 they :arg2 ( person :mod male :arg1-of ( include-91 :arg2 ( person :mod male :arg0-of ( have-rel-role-91 :arg1 they :arg2 friend ) ) ) :quant most ) :purpose ( contact-01 :arg0 they :arg1 we )
measure-02 :arg1 ( measure-02 :arg1 ( prevent-01 :arg1 ( leaking :arg1 terrorist ) ) ) :mod also
and :op2 ( possible-01 :polarity - :arg1 ( compare-01 :arg1 music :arg2 ( nothing :mod else ) ) )
find-02 :arg0 ( person :arg2-of ( include-01 :arg1 ( and :op1 ( and :op1 ( location_name_0 :mod sea ) :op2 ( person_name_1 :arg0-of ( have-org-role-91 :arg1 person_name_2 :arg2 person_name_3 ) ) :op3 ( person_name_3 :arg0-of ( have-org-role-91 :arg1 person_name_6 :arg2 person_name_3 ) ) :op4 ( person_name_3 :arg0-of ( have-org-role-91 :arg1 person_name_6 :arg2 person_name_7 ) ) :op5 ( person_name_6 :arg0-of ( have-org-role-91 :arg1 person_name_6 :arg2 person_name_7 ) ) ) ) :op2 ( person_name_3 :arg0-of ( have-org-role-91 :arg1 person_name_6 :arg2 person_name_7 ) ) :op3 ( person_name_3 :arg0-of ( have-org-role-91 :arg1 person_name_6 :arg2 person_name_7 ) ) :op4 ( person_name_6 :arg0-of ( have-org-role-91 :arg1 person_name_6 :arg2 person_name_7 ) ) :op5 ( person_name_6 :arg0-of ( have-org-role-91 :arg1 person_name_6 :arg2 person_name_7 ) ) ) ) :arg1 ( '' :arg1 ( filmmakers :quant ( more-than :op1 num_0 ) ) ) :mod also
suppress-01 :polarity - :mode imperative :arg0 we :arg1 ( thing :arg1-of feel-01 :poss you ) :time ever
contrast-01 :arg1 ( result-01 :mod this ) :arg2 ( set-up-03 :arg1 ( thing :arg1-of ( expect-01 :arg0 market ) ) :arg2 ( level :arg1-of ( high-02 :degree most ) ) :time ( since :op1 ( date-entity year_date-entity_0 month_date-entity_0 ) ) )
notice-01 :arg0 i :arg1 that :arg1-of need-01
and :op1 ( wound-01 :arg1 ( civilian :mod country_name_0 ) ) :op2 ( say-01 :arg0 police )
contrast-01 :arg2 ( increase-01 :arg1 ( increase-01 :time ( date-entity year_date-entity_0 ) ) :location ( child :arg0-of ( have-rel-role-91 :arg1 child :arg2 child ) ) :time ( date-entity year_date-entity_0 ) )
contrast-01 :arg1 ( tuesday :arg1 ( rate-entity-91 :arg1 ( day :quant num_0 ) :arg2 ( temporal-quantity temporal-quantity_num_0 :unit day ) ) :time today :arg1-of ( compare-01 :arg2 ( increase-01 :arg1 ( note-01 :arg1 rate-01 ) :degree slight ) ) ) :arg2 ( be-located-at-91 :arg1 figure :arg2 ( behind :op1 ( value-interval :op1 num_0 :op2 num_1 ) ) :mod still :arg1-of ( cause-01 :arg0 ( increase-01 :arg1 ( thing :arg2-of rate-01 ) :mod slight ) ) )
multi-sentence :snt1 ( win-01 :arg0 ( initiative :name ( name :op1 ikincide ) ) :arg1 ( prelude :mod ikincide ) ) :snt2 ( be-located-at-91 :arg1 ( and :op1 person_name_0 :op2 person_name_1 ) :arg2 ( thing :arg1-of ( involve-01 :arg2 ( thing :arg1-of ( involve-01 :arg2 ( middle :quant num_0 ) ) ) ) ) :location outside )
possible-01 :arg1 ( visit-01 :arg0 ( location_name_0 :location peninsula_name_1 ) :arg1 ( location_name_0 :location peninsula_name_1 ) ) :time ( date-entity day_date-entity_0 month_date-entity_0 year_date-entity_0 )
arrest-01 :arg0 ( police :mod country_name_0 ) :arg1 ( man :arg0-of ( hijack-01 :arg1 man :arg1-of ( crash-01 :time weekend ) ) )
man :mod great :arg0-of ( man :mod family )
see-01 :arg0 ( figure :mod this :arg0-of ( say-01 :arg1 ( grow-01 :arg1 fastest :time ( since :op1 ( product-of :op1 num_0 :op2 ( multiple :op1 num_1 ) ) ) ) ) ) :arg1 ( increase-01 :arg1 ( interest-01 :arg2 ( interest-01 :arg2 interest-01 ) ) ) :time ( time :arg1-of same-01 )
and :op1 ( open-01 :arg1 ( store :name ( name :op1 aldi ) :mod this ) :time ( year :mod next ) :location ( and :op1 ( talk-02 :arg2 num_0 :arg1 ( store :quant num_0 ) ) :op2 ( resolution :quant num_1 ) ) ) :op2 ( thing :arg1-of ( base-02 :arg2 ( thing :arg1-of ( achieve-01 :arg0 sell-01 ) :arg1-of ( base-02 :arg2 ( thing :arg1-of ( achieve-01 :arg0 sell-01 ) ) ) ) ) )
grow-03 :arg0 you :arg1 ( hÃ¼manizma :poss we )
say-01 :arg0 he :arg1 ( travelling :arg0 ( person :mod country_name_0 ) :arg1 ( person :mod country_name_1 ) :frequency often ) :location court
and :op1 ( idmanyurdu :arg0 ( tosun :name ( name :op1 tosun :op2 lakes :op3 lakes ) :mod another ) :arg1 ( company :arg0-of provide-01 :mod another ) :location ( and :op1 goal :op2 first :ord ( ordinal-entity ordinal-entity_num_0 ) ) ) :op2 ( score-01 :arg1 he :arg2 ( under :op1 ( between :op1 ( temporal-quantity temporal-quantity_num_2 :unit year ) :op2 ( temporal-quantity temporal-quantity_num_2 :unit year ) ) ) ) :time meanwhile
and :op1 ( and :op1 ( benli?ine :arg1 ( presence :poss child ) ) :op2 ( respect-01 :arg1 ( presence :poss child ) ) ) :op2 ( respect-01 :polarity - :arg0 and :arg1 ( mechanism :poss child ) ) :op3 ( become-01 :arg1 and :arg2 ( mechanism :mod defend-01 ) :purpose ( and :op1 ( preserve-01 :arg0 mechanism :arg1 ( sense-01 :arg0 anger-01 :arg1 anger-01 ) ) :op2 ( hate-01 :arg0 and :arg1 ( sense-01 :arg0 and :arg1 anger-01 ) ) ) )
define-01 :arg1 ( thing :arg2-of ( name-01 :arg1 ( thing :arg2-of ( name-01 :arg1 ( thing :arg2-of ( name-01 :arg1 ( thing :arg1-of ( flaw-01 :arg1-of ( possible-01 :polarity - ) ) ) ) ) ) ) ) ) :arg2 ( illness :mod mental )
multi-sentence :snt1 ( recommend-01 :mode interrogative :arg1 ( surgery-01 :arg2 ( surgery-01 :arg2 ( surgery-01 :arg2 surgery-01 ) :mod prime ) ) ) :snt2 ( report-01 :arg0 ( person_name_0 :mod family ) )
enough :polarity - :domain ( team :mod qualifying )
multi-sentence :snt1 ( exemplify-01 :arg0 ( ticket :mod enter-01 :arg1-of exhibit-01 ) ) :snt2 ( see-01 :arg0 it :arg1 ( store :mod small :arg1-of ( create-01 :time ( end-01 :arg1 ( space :mod gallery :mod 800-square-foot ) ) ) ) )
participate-01 :arg0 ( and :op1 ( person :arg0-of ( have-rel-role-91 :arg1 person_name_0 :arg2 wife ) ) :op2 ( person_name_1 :arg0-of ( have-rel-role-91 :arg1 person :arg2 brother ) ) ) :arg1 ( and :op1 ( star :arg1-of bright-02 ) :op2 ( grace :mod amazing ) ) :time ( ceremony :time ceremony ) :mod also
attend-01 :arg0 ( and :op1 ( person_name_0 :arg0-of ( have-rel-role-91 :arg1 ( person_name_1 :arg0-of ( have-rel-role-91 :arg1 person :arg2 wife ) ) :arg2 wife ) ) :op2 ( person_name_2 :arg0-of ( have-rel-role-91 :arg1 person :arg2 brother ) ) ) :arg1 ceremony :mod also :time ( and :op1 ( storm-02 :arg0 ( company_name_3 :mod university ) :arg1 ( star :arg1-of bright-02 ) ) :op2 ( amaze-01 :arg1 grace ) )
need-01 :arg0 we :arg1 ( use-01 :arg0 we :arg1 ( use-01 :arg1 force-04 ) )
and :op1 ( be-located-at-91 :arg1 company :arg2 ( round :mod last ) :mod only ) :op2 ( become-01 :arg1 company :arg2 ( person_name_0 :arg0-of ( manage-02 :arg1 ( caught :arg0 person :arg1 ( person_name_1 :arg0-of ( seem-01 :arg1 ( walk-01 :arg0 person :destination title ) ) ) ) ) ) )
and :op1 ( decide-01 :arg0 ( company :arg0-of win-01 ) :mod only :location ( round :mod last ) ) :op2 ( and :op1 ( become-01 :arg1 company :arg2 ( person_name_0 :mod country_name_1 ) ) :op2 ( manage-02 :arg0 company :arg1 ( catch-02 :arg0 company :arg1 pole :arg2 ( name :op1 dudu ) :arg1-of seem-01 :arg0-of ( walk-01 :destination title :arg1-of seem-01 ) ) ) )
and :op1 ( drive-02 :arg0 ( expect-01 :arg1 rise-01 ) :arg1 rise-01 :arg2 ( expect-01 :arg1 ( leave-15 :arg0 ( individual :arg0-of ( weaken-01 :arg1 ( strategy :poss ( system :mod federal ) ) ) ) :arg1 ( rate :mod this ) :time ( week :mod this ) ) ) ) :op2 ( say-01 :arg0 ( person_name_0 :arg0-of ( have-org-role-91 :arg1 organization_name_1 :arg2 chief ) ) :arg1 rise-01 )
multi-sentence :snt1 ( trigger-01 :arg0 ( expect-01 :arg1 ( rise-01 :arg1 ( strategy :poss ( system :mod federal ) ) ) ) :arg1 rise-01 ) :snt2 ( say-01 :arg0 ( person_name_0 :arg0-of ( have-org-role-91 :arg1 organization_name_1 :arg2 chief :arg3 chief ) ) :arg1 rise-01 )
say-01 :arg0 ( thing :arg1-of ( expect-01 :arg0 ( and :op1 ( person :arg0-of ( determine-01 :arg1 ( strategy :poss ( system :mod federal ) ) ) :arg0-of ( determine-01 :arg1 ( strategy :poss ( system :mod federal ) ) ) ) :op2 ( leave-15 :arg0 person :arg1 ( person_name_0 :arg0-of ( have-org-role-91 :arg1 organization_name_1 :arg2 chief ) ) ) ) ) ) :arg1 takeoff
and :op1 ( ask-02 :arg0 ( person :arg0-of ( have-rel-role-91 :arg2 relative ) ) :arg1 help-01 ) :op2 ( raise-01 :arg0 ( person :arg0-of reside-01 :source ( village :mod nearby ) ) :arg1 ( person :quant ( about :op1 num_0 :mod only ) ) ) :time immediate
and :op1 ( person :arg0-of ( have-rel-role-91 :arg1 i :arg2 girlfriend ) ) :op2 ( person :arg0-of ( have-rel-role-91 :arg1 i :arg2 mother ) ) :op3 ( person :quant num_1 :arg0-of ( have-rel-role-91 :arg1 i :arg2 child ) ) :op4 ( family :quant num_1 :arg0-of ( have-rel-role-91 :arg1 i :arg2 child ) ) :op5 ( family :quant num_1 :arg0-of ( have-rel-role-91 :arg1 i :arg2 child ) )
and :op1 ( recommend-01 :arg0 organization_name_0 :arg1 ( engage-01 :polarity - :arg0 organization :arg2 ( sport :mod this ) ) :time now ) :op2 ( good :degree more :domain ( ban-01 :arg1 it :manner altogether ) )
recommend-01 :arg0 organization_name_0 :arg1 ( do-02 :polarity - :arg0 organization :arg1 ( or :op1 ( sport :mod this ) :op2 ( good :degree more ) ) :arg1-of ( cause-01 :arg0 ( view-01 :arg0 organization :mod altogether ) ) ) :time now
'' :arg1 ( '' :mod storm ) :time ( end-01 :arg1 ( week :mod this ) ) :time ( end-01 :arg1 ( right-05 :arg1 they :arg2 ( host-01 :arg0 they :arg1 ( right-05 :arg1 ( person_name_0 :mod either ) :arg2 ( host-01 :arg0 person :arg1 ( right-05 :arg1 person :arg2 ( host-01 :arg0 person :arg1 ( right-05 :arg1 person :arg2 ( host-01 :arg0 person :arg1 ( right-05 :arg1 person :arg2 ( host-01 :arg0 person :arg1 ( right-05 :arg1 person :arg2 ( host-01 :arg0 person :arg1 ( and :op1 ( person :mod either ) :op2 ( person :arg0-of '' ) :op3 ( person :arg0-of '' ) :mod either ) :time ( night :mod next ) :location ( amusement-park_name_1 :location ( ground :name ( name :op1 stadium ) :location ( ground :name ( name :op1 stadium ) ) ) ) :time ( morning :mod next ) ) ) ) ) ) ) ) ) ) ) ) ) )
multi-sentence :snt1 ( cause-01 :arg0 ( win-01 :arg0 they :arg1 ( right-05 :arg1 they :arg2 ( host-01 :arg0 they :arg1 ( or :op1 ( location_name_0 :mod either ) :op2 ( sharks :name ( name :op1 '' ) ) ) :mod either ) ) :time ( end-01 :arg1 ( week :mod this ) ) ) ) :snt2 ( sell-01 :arg1 ticket :time ( morning :mod next ) :location ( park :mod stadium ) )
employ-01 :arg1 ( job :quant most ) :manner ( employ-01 :polarity - )
time :arg1-of same-01 :time ( time :arg1-of same-01 )
improve-01 :arg1 situation :time ( after :op1 ( downgrade :arg0 organization_name_0 :arg1 ( rate :mod interest ) ) )
say-01 :arg0 ( figure :arg1-of ( same-01 :arg2 ( figure :mod ( number :mod same ) :location country ) ) ) :arg1 ( think-01 :arg0 ( person :arg1-of ( include-91 :arg2 ( person :arg0-of ( have-org-role-91 :arg2 general ) ) :arg3 ( percentage-entity percentage-entity_num_0 ) ) ) :arg1 ( person :arg0-of ( have-org-role-91 :arg2 commander ) :arg0-of ( have-org-role-91 :arg2 commander ) :arg0-of ( have-org-role-91 :arg2 commander ) :arg0-of ( have-org-role-91 :arg2 commander ) :arg0-of ( have-org-role-91 :arg2 commander ) :arg0-of ( have-org-role-91 :arg2 commander ) :arg0-of ( have-org-role-91 :arg2 commander ) :arg0-of ( have-org-role-91 :arg2 commander ) ) :time ( week :mod last ) :location country )
multi-sentence :snt1 ( recommend-01 :arg1 ( expensive :polarity - :domain ( condition :poss house-01 ) ) ) :snt2 ( include-01 :arg1 ( thing :arg2-of ( price-01 :arg1 ( '' :name ( name :op1 finishing ) ) ) ) :arg2 ( rate-entity-91 :arg1 num_0 :arg2 ( temporal-quantity temporal-quantity_num_0 :unit second ) ) )
ask-02 :arg1 ( check-out-05 :arg0 person :arg1 ( law :topic ( protect-01 :arg1 ( information :topic ( protect-01 :arg1 ( information :topic ( child :arg0-of ( have-rel-role-91 :arg1 child :arg2 child ) ) ) ) ) ) ) ) :arg2 bible
have-03 :arg0 we :arg1 ambition :concession-of ( dreamers :polarity - :arg0 we )
allow-01 :polarity - :arg0 this :arg1 ( and :op1 ( end-01 :arg1 ( idea :mod any :arg1-of ( malmÃ¶ :arg2 ( return-01 :arg1 idea ) ) ) ) :op2 ( dispatch-01 :arg0 this :arg1 person_name_0 :arg2 ( range :mod close ) :mod only ) :op3 ( allow-01 :polarity - :arg0 person :arg1 ( increase-01 :arg0 person_name_1 :arg1 ( trouble-01 :mod final ) :time ( before :op1 ( goal :mod ( end-01 :arg1 game ) ) ) ) ) )
point-out-02 :arg0 we :arg1 ( thing :arg2-of ( name-01 :arg1 you ) :arg1-of ( send-01 :arg0 you :arg2 it :condition ( ask-02 :polarity - :arg0 we :arg1 ( specify-01 :polarity - :arg0 we :arg1 it :location ( -rrb- :quant all ) ) ) :arg2 we ) ) :arg2 ( publish :polarity - :arg0 we :arg1 ( number :mod phone :poss you ) :time ever )
rate-entity-91 :arg1 ( percentage-entity percentage-entity_num_0 ) :arg2 ( temporal-quantity temporal-quantity_num_1 :unit year ) :time ( end-01 :arg1 ( date-entity month_date-entity_0 day_date-entity_0 ) ) :arg1-of ( end-01 :time ( date-entity month_date-entity_0 day_date-entity_0 ) )
rate-entity-91 :arg1 ( percentage-entity percentage-entity_num_0 ) :arg2 ( temporal-quantity temporal-quantity_num_1 :unit year ) :time ( end-01 :arg1 ( date-entity month_date-entity_0 day_date-entity_0 ) ) :arg1-of ( end-01 :time ( date-entity month_date-entity_0 day_date-entity_0 ) )
and :op1 ( die-01 :arg1 ( person :quant ( at-least :op1 num_0 ) ) ) :op2 ( die-01 :arg1 ( person :quant ( at-least :op1 num_0 ) ) ) :location state_name_0
say-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg1 ( hometown :poss person ) :arg2 chief ) ) :arg1 ( possible-01 :arg1 ( display-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg2 ( chief :arg1-of ( high-02 :degree more ) ) ) ) :arg1 expand-01 ) )
-lrb- :arg0 ( -lrb- :arg1 ( person :arg0-of ( have-rel-role-91 :arg1 ( person :arg0-of ( have-rel-role-91 :arg1 city_name_0 :arg2 son ) ) :arg2 son ) ) :arg2 ( -rrb- :mod right ) ) :time ( after :op1 now :quant ( several :op1 ( temporal-quantity temporal-quantity_num_0 :unit year ) :mod difficult ) )
and :op1 ( interesting :degree ( more :degree much ) :domain it ) :op2 ( comment-01 :arg0 it :arg3 ( apply-01 :arg0 law :arg2 ( person :arg0-of ( have-org-role-91 :arg2 correspondent ) ) ) )
interest-01 :arg1 it :arg2 ( show-01 :arg1 ( law :poss law ) ) :degree more
say-01 :arg0 he :arg1 ( wound-01 :arg1 ( and :op1 ( person :arg0-of ( have-org-role-91 :arg1 police :arg2 officer ) ) :op2 ( civilian :quant num_0 ) ) )
believe-01 :arg0 i :arg1 ( enough :polarity - :domain ( evidence-01 :arg1 ( penalize-01 :arg2 die-01 ) ) ) :arg1-of firm-03
say-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg2 ( person :arg1-of expert-01 ) ) ) :arg1 ( show-01 :arg0 ( sell-01 :arg1 ( sell-01 :medium online ) ) :arg1 ( increase-01 :arg1 ( sell-01 :medium online ) ) :time now :time ( after :op1 ( show-01 :arg0 ( data :time ( late :degree most ) ) :arg1 ( percentage-entity percentage-entity_num_0 :mod only ) ) :time now ) )
give-01 :mode imperative :arg0 you :arg1 space :arg2 person
call-01 :arg0 ( person_name_0 :arg0-of ( have-org-role-91 :arg1 ( person_name_1 :arg0-of ( have-org-role-91 :arg1 state :arg2 ( secretary :mod state ) ) ) :arg2 ( secretary :mod state ) ) ) :arg1 ( person_name_2 :arg0-of ( have-org-role-91 :arg1 country :arg2 empress ) ) :arg2 ( discuss-01 :arg0 person :arg1 situation :location country_name_3 )
contrast-01 :arg2 ( assume-02 :arg1 ( contact-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg1 ( board :poss organization_name_0 ) :arg2 member ) ) :arg1 person_name_1 :time ( week :mod last ) ) )
and :op1 ( miss-02 :arg0 ( person :arg0-of '' ) :arg1 ( chance-02 :arg1 ( cut-02 :arg1 ( gap :prep-with ( person :arg0-of ( have-org-role-91 :arg1 organization_name_0 :arg2 '' ) ) ) ) ) ) :op2 ( take-01 :arg0 person :arg1 ( place :ord ( ordinal-entity ordinal-entity_num_0 ) ) :location playoffs :time ( after :op1 war_name_1 ) )
confident-01 :arg1 ( person :mod communism ) :arg2 ( temporal-quantity temporal-quantity_num_0 :unit hour :time ( before :op1 ( open-01 :arg1 ( station :mod polling :location ( boxes :mod ballot ) ) :arg1-of possible-01 ) ) )
buy-01 :mode imperative :arg0 you :arg1 meals :arg2 organization_name_0 :condition ( shop-01 :arg0 you )
(-(
complain-01 :arg0 i :arg2 she
and :op1 ( suppose-02 :arg1 this :arg2 ( season :arg1-of high-02 ) ) :op2 ( want-01 :polarity - :arg0 you :arg1 ( do-02 :arg0 you :arg1 ( thing :mod other ) ) )
and :op1 ( allow-01 :arg1 ( attend-01 :arg0 journalist :arg1 ( execute-01 :location country_name_0 ) ) ) :op2 ( allow-01 :arg1 ( thing :arg2-of ( result-01 :arg1 ( thing :arg2-of ( result-01 :arg1 event_name_1 ) ) ) ) ) :op3 ( decide-01 :arg0 ( person :arg0-of ( wish-01 :arg1 event_name_1 ) ) :arg1 ( select-01 :arg1 person ) )
play-02 :arg0 woman :arg1 ( role :mod large :topic ( process-02 :arg1 decision-making ) )
report
say-01 :arg0 you :arg1 ( contrast-01 :arg1 ( approach-02 :arg0 you :arg1 ( party :mod other :arg2-of ( include-01 :arg1 ( sirizu :mod sirizu ) ) ) :time ( case-03 :arg1 win-01 ) ) :arg2 ( say-01 :arg0 you :arg1 ( win-01 :arg0 ( win-01 :arg1 win-01 ) :arg2 elect-01 ) ) )
and :op1 ( support-01 :arg0 it :arg1 converse-01 ) :op2 ( help-01 :arg0 it :arg1 you :arg2 ( find-01 :arg0 you :arg1 ( and :op1 ( person :arg1-of ( like-01 :arg0 you :arg1-of ( like-01 :polarity - :arg0 you ) ) ) :op2 ( person :polarity - :arg0-of ( bother-01 :arg1 you :mod even ) ) ) ) :op3 ( handing :arg0 you :arg1 ( extinguishers :name ( name :op1 fire ) ) ) )
and :op1 ( and :op1 ( support-01 :arg0 this :arg1 converse-01 ) :op2 ( help-01 :arg0 this :arg1 ( find-01 :arg0 you :arg1 ( person :arg1-of ( like-01 :arg0 you ) ) ) ) ) :op2 ( contrast-01 :arg1 ( find-01 :arg0 this :arg1 ( person :arg1-of ( like-01 :arg0 you ) ) ) :arg2 ( and :op1 ( that :polarity - :arg1-of ( talk-01 :arg0 you :mod even :concession ( even-if :op1 ( burn-01 :arg0 you :arg1 eyelashes ) :concession ( even-if :op1 ( burn-01 :arg0 you :arg1 eyelashes ) ) :concession ( even-if :op1 ( burn-01 :arg0 you :arg1 eyelashes ) ) ) ) ) ) )
deal-01 :arg0 discuss-01 :arg2 ( experience-01 :arg0 ( and :op1 ( government-organization :arg0-of ( govern-01 :arg1 country_name_0 ) ) :op2 ( government-organization :arg0-of ( govern-01 :arg1 country_name_1 ) :arg1-of local-02 ) ) :arg1 ( and :op1 ( government-organization :arg0-of ( govern-01 :arg1 country ) ) :op2 ( government-organization :arg0-of ( govern-01 :arg1 country ) :arg1-of local-02 ) ) ) :arg1-of ( cause-01 :arg0 ( and :op1 ( guarantee-01 :arg1 ( policy :mod industry ) ) :op2 ( guarantee-01 :arg1 ( and :op1 ( guarantee-01 :arg1 ( state :poss country ) ) :op2 ( program :poss country ) ) ) ) )
important :degree so :domain ( stay-01 :arg1 it :time now )
important :degree so :domain ( stay-01 :arg1 it :time now )
believe-01 :arg0 i :arg1 ( reference-04 :arg1 ( try-01 :arg0 person_name_0 :arg1 ( sign-01 :arg0 person :arg1 ( something :arg1-of ( try-01 :arg0 person ) ) ) ) :manner ( way :polarity - :arg1-of ( suitable-04 :arg2 ( picture-01 :arg1 ( hostel :mod human ) ) ) :manner way ) )
announce-01 :arg0 ( attempt-01 :arg1 ( deal-01 :arg0 man :arg2 ( problem :topic ( campaign-01 :arg0 man :arg1 ( against :op1 ( campaign-01 :arg0 man :arg1 ( against :op1 ( campaign-01 :arg0 man :arg1 ( against :op1 ( campaign-01 :arg0 man :arg1 ( against :op1 ( campaign-01 :arg0 man :arg1 ( against :op1 ( campaign-01 :arg0 man :arg1 ( against :op1 ( campaign-01 :arg0 man :arg1 ( against :op1 ( campaign-01 :arg0 man :arg1 ( against :op1 ( campaign-01 :arg0 man :arg1 ( against :op1 ( campaign-01 :arg0 man :arg1 ( against :op1 ( campaign-01 :arg0 man :arg1 ( against :op1 ( campaign-01 :arg0 man :arg1 ( against :op1 ( campaign-01 :arg0 man :arg1 ( against :op1 ( campaign-01 :arg0 man :arg1 ( against :op1 ( campaign-01 :arg0 man :arg1 ( against :op1 ( campaign-01 :arg0 man :arg1 ( against :op1 ( campaign-01 :arg0 man :arg1 ( against :op1 ( campaign-01 :arg0 man :arg1 ( against :op1 ( campaign-01 :arg0 man :arg1 ( against :op1 ( campaign-01 :arg0 man :arg1 ( against :op1 ( campaign-01 :arg0 man :arg1 ( against :op1 ( campaign-01 :arg0 man :arg1 ( against :op1 ( campaign-01 :arg0 man :arg1 ( against :op1 ( campaign-01 :arg0 man :arg1 ( against :op1 ( campaign-01 :arg0 man :arg1 ( against :op1 ( campaign-01 :arg0 man :arg1 ( against :op1 ( campaign-01 :arg0 man :arg1 ( against :op1 ( campaign-01 :arg0 man :arg1 ( against :op1 ( campaign-01 :arg0 man :arg1 ( against :op1 ( campaign-01 :arg0 man :arg1 ( against :op1 ( campaign-01 :arg0 man :arg1 ( against :op1 ( campaign-01 :arg0 man :arg1 ( against :op1 ( campaign-01 :arg0 man :arg1 ( against :op1 ( campaign-01 :arg0 man :arg1 ( against :op1 ( campaign-01 :arg0 man :arg1 ( against :op1 ( campaign-01 :arg0 man ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) )
decrease-01 :arg1 ( moods :quant ( between :op1 num_0 :op2 num_1 ) ) :time ( after :op1 ( moods :arg1 ( end-01 :arg1 ( product-of :op1 num_0 :op2 num_1 ) ) ) )
admit-01 :arg0 ( person :arg0-of ( head-01 :arg1 organization_name_0 ) :arg0-of ( have-org-role-91 :arg1 ( person_name_1 :arg0-of ( have-org-role-91 :arg1 organization :arg3 coach ) ) :arg2 coach ) ) :arg1 ( return-01 :arg1 he :arg4 country_name_2 :purpose ( match-03 :arg0 he :arg1 ( round :ord ( ordinal-entity ordinal-entity_num_0 ) :part-of ( league :mod champions :arg1-of ( feel-01 :arg0 organization_name_3 :arg1-of special-02 ) ) ) ) )
call-01 :arg0 ( person :arg0-of ( head-01 :arg1 organization_name_0 ) :arg0-of ( have-org-role-91 :arg1 organization :arg3 ( lead-02 :arg0 person ) ) ) :arg1 ( person :arg0-of participate-01 :arg2-of ( include-01 :arg1 ( and :op1 ( divide-02 :arg1 organization_name_1 ) :op2 ( support-01 :arg1 ( negotiate-01 :mod inclusive ) :purpose ( find-01 :arg1 ( decide-01 :mod politics ) ) ) ) ) ) :mod again
say-01 :arg1 ( help-01 :arg0 they :arg1 ( attend-02 :arg0 they :arg1 ( sell-01 :arg1 ( equipment :mod ( child :mod ( law :polarity - ) ) ) ) ) :arg2 we :manner incredible ) :arg2 person_name_0
multi-sentence :snt1 ( consider-01 :arg0 ( person :arg1-of expert-01 ) :arg1 ( possible-01 :arg1 ( ban-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg2 ( person :arg1-of expert-01 ) ) ) :arg1 ( possible-01 :arg1 ( live-01 :arg0 ( person :quant num_0 ) :location facility_name_2 ) ) ) ) ) :snt2 ( and :op1 ( seem-01 :arg1 ( possible-01 :arg1 ( live-01 :arg0 ( person :quant num_0 ) :location facility_name_2 ) ) ) :op2 ( possible-01 :polarity - :arg1 ( live-01 :arg0 ( person :arg0-of visit-01 ) :location facility_name_2 ) ) )
it :mod all :topic i
and :op1 ( person :quant num_0 :arg0-of ( have-org-role-91 :arg1 crew :arg2 member ) ) :op2 ( passenger :quant num_1 )
be-located-at-91 :arg1 ( and :op1 ( person :quant num_0 :arg0-of ( have-org-role-91 :arg1 crew :arg2 member ) ) :op2 ( passenger :quant num_1 ) ) :arg2 board
multi-sentence :snt1 ( think-01 :arg0 they :arg1 ( and :op1 ( realistic-03 :arg1 ( and :op1 ( realistic-03 :arg1 corporation :degree more ) :op2 ( clever :arg1 corporation ) ) :degree more ) ) :arg2 ( and :op1 ( inform-01 :arg0 they :arg1 ( home :poss she ) :arg2 ( colors :arg1-of bright-02 ) ) :op2 ( occupy-01 :arg0 they :arg1 ( home :poss she ) :prep-with ( colors :arg1-of bright-02 ) ) ) ) :snt2 ( occupy-01 :arg1 '' :degree more )
and :op1 ( possible-01 :arg1 ( cope-01 :arg0 ( person :mod economy ) :arg1 ( rate :arg1-of ( high-02 :degree more ) ) ) ) :op2 ( and :op1 ( need-01 :arg0 person :arg1 ( rate :arg1-of ( high-02 :degree more ) ) ) :op2 ( need-01 :arg0 person :arg1 ( market :mod ( labor :mod shrinking ) ) ) :op3 ( say-01 :arg0 person :arg1 ( person_name_0 :arg0-of ( have-org-role-91 :arg1 organization_name_1 :arg2 chief ) ) ) )
cup
be-located-at-91 :arg1 ( person :arg0-of ( play-01 :arg1 tennis ) :mod czech ) :arg2 hospital :location location_name_0 :time now
say-01 :arg0 he :arg1 ( important :domain ( and :op1 ( find-01 :arg0 ( radio :quant num_0 ) :arg1 ( and :op1 ( find-01 :arg1 ( music :mod new ) ) :op2 ( promote-02 :arg1 ( product :mod new ) ) ) ) :op2 ( promote-02 :arg0 radio :arg1 ( product :mod new ) ) ) ) :mod also
have-concession-91 :arg1 ( try-01 :arg0 company :arg1 ( cope-01 :arg0 company :arg1 ( collapse-01 :arg1 ( price-01 :arg1 ( material :mod raw ) ) ) ) ) :arg2 ( and :op1 ( affect-01 :arg0 ( decline-01 :arg1 ( economy :poss country_name_0 ) ) :arg1 demand-01 ) :op2 ( create-01 :arg0 decline-01 :arg1 chaos :location ( market :mod globe ) ) )
tell-01 :arg0 person_name_0 :arg1 ( need-01 :arg0 police :arg1 ( send-01 :arg0 police :arg1 person :arg2 ( home :poss person ) ) ) :arg2 ( person :arg0-of ( have-org-role-91 :arg1 police ) )
send-01 :arg0 you :arg1 message :arg2 ( person :quant num_0 ) :condition ( outside :op1 country_name_0 )
have-concession-91 :arg1 ( and :op1 ( empire :arg1 ( and :op1 ( empire :name ( name :op1 khanate ) ) :op2 byzantium :op3 ( hordes :mod gold ) ) ) :arg2 it )
say-01 :arg0 ( bi-bi-si :mod '' ) :arg1 ( leave-11 :arg0 ( refugee :quant some ) :arg1 ( border-01 :arg1 refugee :arg2 ( and :op1 location_name_0 :op2 ( border-01 :arg2 country_name_1 ) ) ) :location ( and :op1 ( talk-02 :arg2 ( and :op1 location_name_0 :op2 ( border-01 :arg2 country ) ) ) ) )
and :op1 ( approach-02 :arg0 ( person :arg0-of ( lead-02 :arg1 ( promise-01 :arg0 person ) ) ) :arg1 ( policy :topic ( attract-01 :arg0 person :arg1 ( resource :mod collective ) :purpose ( gain-02 :arg0 person :arg1 ( idea :topic ( and :op1 person_name_0 :op2 ( person :arg0-of ( have-org-role-91 :arg2 mr. ) ) ) ) ) ) ) ) :op2 ( receive-01 :arg0 person :arg1 ( offer-01 :quant ( more-than :op1 num_0 ) ) )
report
show-01 :arg0 ( candidate :quant num_0 :arg1-of test-01 ) :arg1 ( result-01 :arg1 ( and :op1 person_name_0 :op2 person_name_1 :op3 person_name_2 ) :arg2 ( good :degree most ) )
and :op1 ( show-01 :arg0 ( statistic :topic ( person :arg0-of ( have-org-role-91 :arg2 ( person :arg1-of expert-01 ) ) ) ) :arg1 ( person :arg0-of ( write-01 :arg1 ( surgery-01 :arg2 ( research-01 :arg1 ( surgery-01 :arg2 ( surgery-01 :arg2 ( surgery-01 :arg2 ( surgery-01 :arg2 ( surgery-01 :arg2 ( surgery-01 :arg2 ( surgery-01 :arg2 ( surgery-01 :arg2 ( surgery-01 :arg2 ( surgery-01 :arg2 ( surgery-01 :arg2 ( surgery-01 :arg2 ( surgery-01 :arg2 ( surgery-01 :arg2 ( surgery-01 :arg2 ( surgery-01 :arg2 ( surgery-01 :arg2 ( surgery-01 :arg2 ( surgery-01 :arg2 ( surgery-01 :arg2 ( surgery-01 :arg2 ( surgery-01 :arg2 ( surgery-01 :arg2 ( surgery-01 :arg2 ( surgery-01 :arg2 ( surgery-01 :arg2 ( surgery-01 :arg2 ( surgery-01 :arg2 ( surgery-01 :arg2 ( surgery-01 :arg2 ( surgery-01 :arg2 ( surgery-01 :arg2 ( surgery-01 :arg2 ( surgery-01 :arg2 ( surgery-01 :arg2 ( surgery-01 :arg2 ( surgery-01 :arg2 ( surgery-01 :arg1 country_name_0 ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) )
say-01 :arg0 policy :arg1 ( support-01 :arg0 ( policy :location city_name_0 ) :arg1 dialogue-01 :mod any ) :time ( time :arg1-of same-01 )
and :op1 ( sick-05 :arg1 ( person :arg0-of ( read-01 :arg1 we ) :quant some ) ) :op2 ( fall-07 :arg1 person :arg2 cannabis ) :op3 ( want-01 :polarity - :arg0 person :arg1 ( leave-11 :arg0 person ) )
and :op1 ( offer-01 :arg0 we :arg1 concept ) :op2 ( propose-01 :arg0 we :arg1 ( change-01 :arg0 we :arg1 legislation ) ) :op3 ( quote-01 :arg0 organization_name_0 :arg2 ( person_name_1 :arg0-of ( have-org-role-91 :arg2 mr. ) ) ) :condition ( approve-01 :arg1 it )
assure-01 :arg0 it :arg1 i :arg2 ( 1970s :arg1 i ) :time ( struggling :arg0 ( struggle-02 :arg0 he :arg1 ( tv :arg0 he :medium tv ) ) :arg1 ( and :op1 ( far :degree too ) :op2 ( lose-02 :polarity - :arg1 ( post :poss he ) :location cabinet ) ) )
contrast-01 :arg2 ( doubt-01 :arg0 i :arg1 ( think-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg2 ( official :mod prison ) ) ) :arg1 ( and :op1 ( safe-01 :arg1 ( safe-01 :arg1 ( person :mod such ) ) ) :op2 ( understand-01 :arg0 person :arg1 ( identity :poss person ) ) ) ) ) :concession ( place :mod individual )
multi-sentence :snt1 ( difficult :domain match-03 :arg1-of ( cause-01 :arg0 ( possible-01 :arg1 ( hold-01 :arg0 you :arg1 ball ) ) ) ) :snt2 ( lead-01 :arg0 ( website :poss organization_name_0 :mod official ) :arg1 person_name_1 )
arrest-01 :arg1 ( person_name_0 :mod ( rich :degree more ) :location country_name_1 ) :arg2 ( threaten-01 :arg0 man :arg1 ( use-01 :arg1 weapon :location ( airport :mod siberian ) ) ) :li num_0
explain-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg1 continent_name_0 :arg2 diplomat ) :arg1-of friendly-01 ) :arg1 ( position-02 :arg0 ( and :op1 ( person :arg0-of ( have-org-role-91 :arg1 country_name_1 :arg2 ( agenda :mod self-centred ) ) ) :op2 ( person :arg0-of ( have-org-role-91 :arg1 country :arg2 member ) :quant some ) :op3 ( person :arg0-of ( have-org-role-91 :arg1 country :arg2 member ) :quant some ) :op4 ( person :arg0-of ( have-org-role-91 :arg1 organization :arg2 member ) ) :op5 ( person :arg0-of ( have-org-role-91 :arg1 organization :arg2 member ) :quant some ) ) :arg0-of ( undermine-01 :arg1 ( change-01 :arg1-of ( want-01 :polarity - :arg0 most ) ) ) ) :time recent
and :op1 ( hospitalized :domain person_name_0 :prep-with ( infect-01 :mod bacterial ) ) :op2 ( report-01 :arg0 publication_name_1 )
and :op2 ( fatigue :mode interrogative )
write-01 :arg0 organization_name_0 :arg1 ( program :topic ( introduce-02 :arg1 ( coupons :arg1 food :beneficiary ( person :mod poor ) ) ) ) :time ( early :degree more :time ( early :degree more ) )
and :op1 ( rational :polarity - :domain this :time ( until :op1 ( cubits :arg0 you :arg1 ( neighbor-01 :arg1 you :arg2 ( person :arg0-of ( have-rel-role-91 :arg1 he :arg2 wife :time future ) :arg0-of ( have-rel-role-91 :arg1 he :arg2 wife :time future ) ) ) ) ) ) :op2 ( and :op1 ( keen :arg1 they :arg2 they ) :op2 ( obligate-01 :arg1 you :arg2 ( see-01 :arg0 you :arg1 he :frequency ( rate-entity-91 :arg3 ( temporal-quantity temporal-quantity_num_0 :unit day ) ) ) ) :op3 ( possible-01 :arg1 ( watch-01 :arg0 you :arg1 he :frequency ( rate-entity-91 :arg3 ( temporal-quantity temporal-quantity_num_1 :unit day ) ) ) ) :op4 ( possible-01 :arg1 ( watch-01 :arg0 you :arg1 ( person :arg0-of ( have-rel-role-91 :arg1 you :arg2 friend ) ) :manner common ) ) )
be-located-at-91 :arg1 person_name_0 :arg2 ( place :mod this ) :duration ( many :op1 ( temporal-quantity temporal-quantity_num_0 :unit year ) )
multi-sentence :snt1 ( analogous :arg1 situation :arg2 situation ) :snt2 ( sit-01 :arg1 ( situation :mod this ) :arg2 situation :time ( '' :arg1 ( stadium :quant num_0 :mod vips ) ) )
multi-sentence :snt1 ( monitor-01 :arg0 ( person :arg0-of research-01 ) :arg1 ( level :mod ( level :mod hemoglobin ) :arg1-of ( reflect-01 :arg2 ( sugar :mod blood ) ) ) :mod also ) :snt2 ( dynamics :mode expressive )
multi-sentence :snt1 ( monitor-01 :mode interrogative :arg0 ( person :arg0-of research-01 ) :arg1 ( person :arg0-of research-01 ) :mod also ) :snt2 ( level :mod ( blood :arg1-of ( reflect-01 :arg2 ( level :mod ( sugar :mod blood ) ) :location dynamics ) ) ) :li num_0
say-01 :arg0 ( thing :arg1-of ( fund-01 :arg0 ( agency :mod ( government-organization :arg0-of govern-01 ) ) ) ) :arg1 ( include-91 :arg1 ( person :quant some :arg1-of ( include-91 :arg2 ( person :quant num_1 :arg1-of ( link-01 :arg2 ( industry :consist-of tobacco ) ) :arg1-of ( link-01 :arg2 ( industry :consist-of tobacco ) ) ) ) ) :arg2 ( person :arg0-of research-01 ) )
report-01 :arg0 ( person_name_0 :arg0-of ( have-org-role-91 :arg1 ( organization_name_1 :part-of organization_name_2 ) :arg2 lecturer ) ) :arg1 ( recommend-01 :arg1 ( base-02 :arg1 ( care-03 :arg1 health :mod fundamental ) :arg2 ( prove-01 :arg1 efficient-01 ) ) :arg1-of ( base-02 :arg2 ( thing :arg0-of ( prove-01 :arg1 efficient-01 ) ) ) )
desire-01 :arg0 ( boy :arg1-of ( name-01 :arg0 boy :arg2 ( hope-01 :arg0 boy :arg1 ( conquered :arg0 boy :arg1 ( air :poss ( girl :arg1-of ( mean-01 :arg2 ( thing :arg1-of ( do-02 :arg0 ( heart :part-of he ) ) ) ) ) ) ) ) ) ) :arg1 ( thing :arg2-of ( name-01 :arg1 ( person :arg1-of ( die-01 :arg1-of ( know-01 :polarity - ) ) :arg1-of ( die-01 :location ( thing :arg2-of ( name-01 :arg1 ( person :arg1-of ( die-01 :location ( thing :quant num_0 ) ) ) ) :arg1-of ( know-01 :polarity - ) ) ) ) ) ) :location ( url-entity :value high ) :location ( city :arg1-of ( surround-01 :arg2 ( wall :arg1-of high-02 ) ) ) :location ( city :arg1-of ( name-01 :arg2 ( wall :arg1-of high-02 ) ) )
recommend-01 :arg1 ( act-02 :arg0 ( matter :mod such ) :arg1-of ( cause-01 :arg0 ( and :op1 ( get-03 :arg1 problem :arg2 you ) :op2 ( remain-01 :arg1 problem :arg3 ( measure-02 :mod extraordinary :mod only ) ) ) ) ) :prep-in ( matter :mod such )
need-01 :arg1 ( act-02 :manner ( matter :mod such ) ) :arg1-of ( cause-01 :arg0 ( fall-01 :arg1 problem :arg2 ( measure-02 :mod extraordinary :mod only ) ) ) :prep-in ( matter :mod such )
and :op1 ( buy-01 :arg0 ( person :arg1-of ( include-91 :arg2 ( person :arg1-of ( buy-01 :arg0 person ) ) :arg3 ( percentage-entity percentage-entity_num_0 ) ) ) :arg1 ( person :arg1-of ( include-91 :arg2 person :arg3 ( percentage-entity percentage-entity_num_0 ) ) ) :time ( time :arg1-of same-01 ) ) :op2 ( willingly :arg0 person :location ( street :location center ) )
and :op1 ( buy-01 :arg0 ( person :arg1-of ( include-91 :arg2 person :arg3 ( percentage-entity percentage-entity_num_0 ) ) ) :arg1 ( and :op1 clothes :op2 shoe ) :degree ( more :compared-to ( person :arg1-of ( buy-01 :arg0 ( and :op1 clothes :op2 shoe ) ) ) ) ) :time ( time :arg1-of same-01 )
contrast-01 :arg1 ( hurt-01 :polarity - :arg1 he ) :arg2 ( scene :poss ( scene :location-of ( fall-01 :arg1 ( network :mod social ) :manner instant ) ) )
multi-sentence :snt1 ( threaten-01 :mode interrogative :arg0 ( and :op1 ( prosper-01 :arg0 we :arg1 ( network :mod computer :poss we ) ) :op2 ( life :arg1-of personal-02 ) :op3 ( security :mod nation ) ) :arg1 ( and :op1 ( prosper-01 :arg0 we :mod economy ) :op2 ( security :mod personal-02 ) :op3 ( security :mod nation ) ) :time present ) :snt2 ( state-01 :arg0 ( person_name_0 :arg0-of ( have-org-role-91 :arg1 country_name_1 ) ) )
indicate-01 :arg1 ( and :op1 ( indicate-01 :arg0 ( lamb :arg0-of ( lead-01 :arg1 ( course :quant num_0 :mod online :location organization_name_0 :location peninsula_name_1 ) ) :arg0-of ( found-01 :arg1 organization ) ) :arg1 ( go-02 :arg0 lamb :arg4 university ) ) :op2 ( believe-01 :arg0 police :arg1 ( shoot-02 :arg0 person :arg1 ( person_name_3 :arg0-of ( teach-01 :arg1 history ) :mod all ) :location ( threshold :poss ( cabinet :poss person ) ) ) ) )
and :op1 ( indicate-01 :arg0 nothing :arg1 ( have-03 :arg0 ( lamb :arg1-of ( lead-02 :arg0 ( person :quant num_0 :arg0-of ( have-org-role-91 :arg1 organization_name_0 ) ) :location peninsula_name_1 ) :arg0-of ( found-01 :arg1 organization ) ) :arg1 ( time :mod that ) :time ( time :mod that ) ) ) :op2 ( say-01 :arg0 police :arg1 ( shoot-02 :arg0 he :arg1 ( person_name_4 :arg0-of ( teach-01 :arg1 history ) :mod organization_name_3 ) :location ( threshold :poss ( cabinet :poss he ) ) ) )
look-01 :arg0 it :arg1 ( clownery :poss person_name_0 :location organization_name_1 ) :time today
multi-sentence :snt1 ( need-01 :arg0 they :arg1 ( isolate-01 :arg1 they ) :mod definite ) :snt2 ( suffer-01 :arg0 they :arg1 ( and :op1 ( suffer-01 :arg0 they :arg1 ( family :arg1-of ( have-org-role-91 :arg0 they :arg2 member ) ) ) :op2 ( suffer-01 :arg0 they :arg1 ( and :op1 ( family :arg1-of ( have-org-role-91 :arg0 they :arg2 member ) ) :op2 ( problem :topic sea :beneficiary ( staff :poss organization_name_0 ) ) ) ) ) )
reveal-01 :arg0 it :arg1 ( strengthen-01 :arg0 ( wave-04 :arg1 ultrasonic ) :arg1 ( wave-04 :arg1 ( worm :name ( name :op1 ultrasonic ) ) ) :time then )
bus :mod school
contrast-01 :arg1 ( doctor :polarity - :domain i ) :arg2 ( and :op1 ( age-01 :arg1 i :arg2 ( temporal-quantity temporal-quantity_num_0 :unit month ) ) :op2 ( possible-01 :polarity - :arg1 ( play-01 :arg0 guy :location ( stage :mod group ) ) ) )
and :op1 ( increase-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg1 organization_name_0 :arg3 ( apprentice-01 :arg0 person ) ) ) :arg1 ( expend-01 :arg0 person :arg2 ( inning :ord ( ordinal-entity ordinal-entity_num_0 ) ) ) ) :op2 ( receive-01 :arg0 ( and :op1 ( person_name_2 :arg0-of ( have-org-role-91 :arg2 catcher ) ) :op2 ( person_name_3 :arg0-of ( have-org-role-91 :arg1 duhaut :arg2 duhaut ) ) ) :arg1 ( and :op1 ( person_name_3 :arg0-of ( have-org-role-91 :arg2 catcher ) ) :op2 ( person_name_3 :arg0-of ( have-org-role-91 :arg1 otbivangego :arg2 otbivangego ) :arg1-of single-02 :mod central ) ) :arg2 ( num_1 :quant num_1 ) )
multi-sentence :snt1 ( and :op1 ( help-01 :arg0 ( team :consist-of ( person :arg0-of ( have-org-role-91 :arg1 organization_name_0 ) ) ) :arg1 ( spread-02 :arg1 they :path ( across :op1 city_name_1 ) ) :location ( across :op1 city_name_1 ) ) :op2 ( '' :arg0 team :arg1 ( set :mod gainer :consist-of ( keys :mod gainer ) ) ) ) :snt2 ( give-01 :arg0 '' :arg1 access-01 :arg2 ( space :mod advertising :location ( stop-01 :arg1 bus ) ) )
say-01 :arg0 ( and :op1 ( person :arg0-of ( have-org-role-91 :arg1 organization_name_0 :arg2 ( director :mod vice ) ) ) :op2 ( fan :mod country_name_2 ) :op3 ( fan :mod country_name_3 ) ) :arg1 ( and :op1 ( help-01 :arg0 ( reform-01 :arg1 ( sector :mod banking ) ) :arg1 ( lend-01 :arg0 reform-01 :arg1 ( economy :mod real ) ) ) :op2 ( recovery :arg0 reform-01 :arg1 ( grow-01 :arg1 economy ) ) )
say-01 :arg1 ( possess-01 :arg0 ( person_name_0 :arg0-of ( have-org-role-91 :arg1 organization_name_1 :arg3 ( lead-02 :arg0 person ) ) ) :arg1 ( style :mod ( unique :polarity - ) :mod ( only :polarity - ) ) ) :arg2 ( bright :arg1 person :mod also )
speak-01 :arg0 ( person_name_0 :arg0-of ( lead-02 :arg1 ( party :mod political-party_name_2 ) :mod new ) ) :time soon :time ( session :mod ( question-01 :arg1 ( person :arg0-of ( have-org-role-91 :arg2 ( minister :mod prime ) ) ) :arg2 person_name_1 :ord ( ordinal-entity ordinal-entity_num_0 ) ) )
report-01 :arg1 ( person :quant ( about :op1 num_0 ) :arg0-of ( manage-02 :arg1 ( save-02 :arg1 child ) ) ) :mod also
say-01 :arg0 person_name_0 :arg1 ( possible-01 :polarity - :arg1 ( compare-01 :arg1 person_name_1 :arg2 person_name_2 ) )
keep-04 :arg1 ( street :arg1-of ( include-91 :arg2 ( location_name_0 :location location_name_0 ) :arg3 ( multiple :op1 num_0 ) ) ) :arg2 ( live-01 :arg0 ( person_name_1 :arg0-of ( write-01 :arg1 literature ) :mod caucasus ) )
go-out-17 :arg0 ( person_name_0 :source organization_name_1 ) :duration ( several :op1 ( temporal-quantity temporal-quantity_num_0 :unit month ) )
hobby :arg0 ( person :arg0-of ( reside-01 :arg1 ( person :arg0-of reside-01 ) ) ) :arg1 ( and :op1 content :op2 dine-01 ) :mod popular
exemplify-01 :arg0 ( exemplify-01 :arg0 ( game :mod computer :poss ( aircraft :arg0-of ( fight-01 :arg2 role ) ) ) )
and :op2 ( go-08 :arg1 it :arg2 ( after :op1 fungus ) )
refuse-01 :arg0 person_name_0 :arg1 ( comment-01 :arg0 person )
believe-01 :arg0 they :arg1 ( fraudster :domain i ) :arg1-of clear-06
do-02 :arg1 this :purpose ( prevent-01 :arg1 ( thing :arg2-of ( price-01 :arg1 ( thing :arg2-of ( price-01 :arg1 ( thing :arg2-of ( price-01 :arg1 ( thing :arg2-of ( price-01 :arg1 ( thing :arg2-of ( price-01 :arg1 ( thing :arg2-of ( price-01 :arg1 ( thing :arg2-of ( price-01 :arg1 thing ) ) ) ) ) ) ) ) ) ) ) ) ) ) )
multi-sentence :snt1 ( and :op1 ( procedures :arg0 ( procedure :name ( name :op1 improper :op2 improper ) ) :arg1 ( and :op1 supplement :op2 warm ) :arg2 ( herbs :name ( name :op1 otvarami :op2 herbs :op3 -lrb- :op4 -lrb- :op5 secret :op6 secret :op7 edges :op8 edges :op8 edges :op8 edges :op8 edges :op8 edges :op8 edges :op8 edges :op8 edges :op8 edges :op8 edges :op8 edges :op8 edges :op8 ( move-01 :arg1 ( finger :part-of he ) ) ) ) ) ) :snt2 ( recommend-01 :arg1 ( carry-out-03 :arg1 ( move-01 :arg1 ( finger :part-of he ) ) ) )
multi-sentence :snt1 ( review-01 :arg1 ( action :mod judiciary ) :time ( date-entity month_date-entity_0 day_date-entity_0 ) ) :snt2 ( number :quant-of ( station :arg0-of ( have-org-role-91 :arg3 judge-01 ) ) )
contrast-01 :arg1 ( include-01 :arg1 ( subject :quant num_0 ) :arg2 country_name_0 ) :arg2 ( possible-01 :arg1 ( call-01 :arg0 you :arg1 ( headquarters :mod district :mod email ) :arg2 you ) )
source :mod soccer :location ( and :op1 ( source :arg1-of local-02 ) :op2 ( decline-01 :arg1 water :time now ) ) :time nowadays
extant :arg0 ( source :mod soccer ) :arg1 water :time today :mod even
and :op1 ( give-01 :arg0 he :arg1 ( die-01 :arg1 person_name_0 ) :arg2 ( person :arg0-of ( recruit-01 :arg1 person :arg2 ( die-01 :arg1 person ) ) ) ) :op2 ( advertise-01 :arg0 he :arg1 country_name_1 :manner ( united :arg0 he :arg1 ( and :op1 ( '' :mod whole ) :op2 ( nothing :mod else ) ) ) )
recommend-01 :arg1 ( help-01 :arg0 ( process-01 :arg1-of purport-01 ) :arg1 ( reduce-01 :arg0 process-01 :arg1 ( inequality :location world ) ) )
say-01 :arg0 he :arg1 ( solve-01 :arg0 ( error :arg1-of separate-02 ) :arg1 game )
cause-01 :arg0 ( fear-01 :arg0 ( person :arg0-of invest-01 ) :arg1 ( possible-01 :arg1 ( grow-01 :arg1 ( slowdown :location ( economy :poss country_name_0 ) ) ) ) ) :arg1 ( fall-01 :arg1 ( industry :arg1-of average-03 :arg1-of average-03 ) :arg2 ( product-of :op1 ( percentage-entity percentage-entity_num_0 ) :op2 ( percentage-entity percentage-entity_num_1 ) ) :arg1-of possible-01 )
leave-13 :arg0 ( shaw :arg1 ( bachelor :arg1 ( channel :name ( name :op1 ten ) ) ) ) :arg1 ( along :op1 media )
go-10 :arg1 ( show-04 :arg1 bachelor ) :arg2 wednesdays :time ( date-entity year_date-entity_0 month_date-entity_0 ) :medium ( channel :name ( name :op1 7:30 :op2 ten ) )
obligate-01 :arg2 ( recognize-02 :arg0 authority :arg1 ( settle-02 :arg0 authority :arg1 ( guest :poss city :quant all ) ) :manner urgent ) :location ( run-up :mod world )
recommend-01 :arg1 ( think-01 :arg0 authority :arg1 ( thing :manner-of ( settle-02 :arg1 ( person :arg0-of visit-01 :mod city :quant all ) ) ) :manner urgent ) :arg2 ( person :arg0-of ( have-org-role-91 :arg2 authority ) ) :manner urgent
contrast-01 :arg1 ( report-01 :arg0 ( person_name_0 :arg0-of ( have-org-role-91 :arg1 ( person_name_1 :arg0-of ( have-org-role-91 :arg1 organization ) ) ) ) :arg1 ( report-01 :arg0 person :arg1 ( conflict-01 :polarity - :arg0 person :arg1 ( conflict-01 :arg0 person_name_2 :arg1 person_name_3 ) :mod any ) ) ) :arg2 ( something :location ( mind :poss you ) :arg1-of clear-06 )
cause-01 :arg1 ( seem-01 :arg1 ( remain-01 :arg1 ( trumps :poss person_name_0 ) :arg3 ( position :arg1-of same-01 ) ) :time ( until :op1 then ) )
formalize :arg0 city_name_0 :arg1 ( refuse-01 :arg0 country_name_1 :arg1 ( cooperate-01 :arg0 country :arg1 country_name_2 :arg2 ( complete-01 :arg1 ( plant :mod ( power :mod nucleus ) :mod location_name_3 ) ) ) )
thank-01 :arg1 you
sayansk :location ( region :mod youngest :location location_name_0 )
multi-sentence :snt1 ( garden :mode interrogative :poss child ) :snt2 ( open-01 :arg1 ( person :quant num_0 :arg1-of ( attend-01 :arg0 ( child :quant num_1 ) ) ) )
accept-01 :polarity - :arg1 ( thing :mod such ) :arg1-of easy-05 :time ever
recommend-01 :arg1 ( take-01 :polarity - :arg1 ( thing :mod such ) :manner light-06 :time ever )
check-out-05 :mode imperative :arg0 you :arg1 ( person :arg0-of ( own-01 :arg1 methamphetamine ) )
multi-sentence :snt1 ( appreciate-02 :arg0 ( person :mod another ) :arg1 ( fact :topic ( soft-02 :arg1 ( head :part-of ( tunnel :mod central ) ) ) :time now ) ) :snt2 ( and :op1 ( soft-02 :arg1 ( person :arg0-of ( head-01 :arg1 ( front :mod central ) ) ) :time now ) :op2 ( say-01 :arg0 ( twist :mod ankle ) ) )
suffice-01 :arg0 ( win-01 :arg0 ( person_name_0 :arg0-of ( have-org-role-91 :arg2 -lrb- ) ) :arg1 ( number :quant-of ( person :quant num_0 :arg0-of ( have-org-role-91 :arg2 head-of-state ) ) ) ) :arg2 ( and :op1 ( win-01 :arg0 person :arg2 ( above :op1 ( person :quant num_1 :arg0-of ( have-org-role-91 :arg2 ( seat :arg1-of hot-05 ) ) ) ) ) :op2 ( person :quant num_1 :arg0-of ( have-org-role-91 :arg2 head-of-state ) ) )
and :op1 ( give-01 :arg0 ( person :quant num_0 :arg1-of ( include-91 :arg2 ( person :arg0-of play-01 :mod young :arg0-of promise-01 ) ) ) :arg1 ( gap :arg1-of ( produce-01 :arg0 person ) ) :arg2 ( person :arg0-of play-01 :mod young :quant most ) ) :op2 ( seem-01 :arg1 ( significant-02 :polarity - :arg1 gap :arg1-of ( instead-of-91 :arg2 ( significant-02 :polarity - :arg1 gap ) ) ) :arg1-of general-02 )
represent-01 :polarity - :arg0 doctor :arg1 doctor :manner absolute :time ( after :op1 ( spend-02 :arg0 ( man :mod ( old :degree more ) ) :arg1 live-01 ) )
contrast-01 :arg1 ( possible-01 :arg1 ( stay-01 :arg1 ( man :mod elderly ) :arg3 live-01 :time ( after :op1 ( temporal-quantity temporal-quantity_num_0 :unit day ) ) ) ) :arg2 ( entire :polarity - :domain doctor )
include-91 :arg1 ( and :op1 ( person :arg0-of ( lead-02 :arg1 ( person_name_0 :arg0-of lead-02 ) ) ) :op2 ( person_name_1 :arg0-of ( lead-02 :arg1 ( broadcast-01 :mod international ) ) ) ) :arg2 ( part :part-of ( broadcast-01 :mod international :quant series :arg0-of ( include-01 :arg1 ( and :op1 city_name_3 :op2 city_name_4 :op3 location_name_5 :op4 location_name_6 ) :mod also ) ) )
say-01 :arg0 he :arg1 ( recommend-01 :arg1 ( concentrate :arg0 country_name_0 :arg1 ( attract-01 :arg0 country :arg1 ( and :op1 ( person :arg0-of ( invest-01 :mod foreign ) ) :op2 ( person :arg0-of ( have-org-role-91 :arg2 ( person :arg1-of expert-01 ) ) ) ) ) ) :arg2 ( and :op1 ( attract-01 :arg0 country :arg1 ( person :arg0-of ( invest-01 :mod foreign ) ) ) :op2 ( develop-02 :arg0 country :arg1 ( policy :topic restore-01 ) ) ) :op3 ( address-02 :arg0 country :arg1 ( person :arg0-of ( participate-01 :arg1 ( meet-03 :ord ( ordinal-entity ordinal-entity_num_0 ) ) ) :arg0-of ( address-02 :arg1 ( meet-03 :arg0 ( person :arg0-of ( participate-01 :arg1 ( meet-03 :ord ( ordinal-entity ordinal-entity_num_0 ) :arg0-of ( lead-02 :arg1 organization ) :arg0-of ( lead-02 :arg1 organization :mod central ) ) ) ) ) ) ) ) )
multi-sentence :snt1 ( obligate-01 :arg1 country_name_0 :arg2 ( focus-01 :arg0 country :arg2 ( attract-01 :arg0 country :arg1 ( and :op1 ( person :arg0-of ( invest-01 :mod foreign ) ) :op2 ( person :arg1-of expert-01 ) :op3 ( person :arg0-of ( have-org-role-91 :arg2 ( person :arg1-of expert-01 ) ) ) ) ) ) ) :snt2 ( refer-01 :arg0 he :arg1 ( person :arg0-of ( participate-01 :arg1 ( meet-03 :ord ( ordinal-entity ordinal-entity_num_0 ) :arg0-of ( have-org-role-91 :arg1 ( group :arg0-of lead-01 :mod central ) ) ) ) ) :arg2 ( person :arg0-of participate-01 ) )
and :op1 ( recommend-01 :arg1 ( concentrate :arg0 country_name_0 :arg1 ( attract-01 :arg0 country :arg1 ( and :op1 ( person :arg0-of ( invest-01 :mod foreign ) ) :op2 ( person :arg0-of ( have-org-role-91 :arg2 ( person :arg1-of expert-01 ) ) ) ) ) ) ) :op2 ( say-01 :arg0 person :arg1 ( address-02 :arg0 person :arg1 ( person :arg0-of ( participate-01 :arg1 ( meet-03 :ord ( ordinal-entity ordinal-entity_num_0 ) :poss ( organization_name_1 :arg0-of ( lead-02 :arg1 organization ) ) ) ) ) ) :op3 ( address-02 :arg0 person :arg1 ( person :arg0-of ( participate-01 :arg1 ( meet-03 :ord ( ordinal-entity ordinal-entity_num_0 ) ) ) :arg0-of ( have-org-role-91 :arg1 organization :arg3 participate-01 ) ) :purpose ( reform-01 :arg0 organization :mod comprehensive ) ) )
multi-sentence :snt1 ( amr-unknown
blame-01 :arg0 person_name_0 :arg1 ( and :op1 ( spy-01 :arg0 person ) :op2 ( threaten-01 :arg0 person :arg2 ( sport :mod equestrian ) ) )
intend-01 :arg0 ( person :arg0-of ( lead-02 :arg1 ( feisbechka :name ( name :op1 '' :op2 feisbechka ) ) ) ) :arg1 ( organization_name_0 :mod country_name_1 ) :manner joint :manner joint
and :op1 ( contribute-01 :arg0 ( person_name_0 :arg0-of ( have-org-role-91 :arg2 pitcher ) ) :arg2 ( support-01 :arg0 person :arg1 ( attack-01 :arg1-of ( result-01 :arg2 ( point :quant num_0 ) :location city_name_1 ) ) ) ) :op2 ( add-01 :arg0 person :arg1 ( num_3 :mod another :location ( and :op1 ordinal-entity_num_4 :op2 num_3 ) ) :time then )
multi-sentence :snt1 ( it :domain it ) :snt2 ( need-01 :mode interrogative :arg0 you :arg1 something )
receive-01 :arg0 ( person :arg1-of convict-01 :mod other :quant ( multiple :op1 num_0 ) ) :arg1 ( course :topic ( and :op1 14 :op2 ( temporal-quantity temporal-quantity_num_0 :unit month ) ) )
contrast-01 :arg2 ( possible-01 :polarity - :arg1 ( want-01 :arg0 we :arg1 ( successes :mod real ) :time ( until :op1 ( and :op1 ( continue-01 :arg1 bloodshed ) :op2 ( feel-01 :arg0 person :arg1 ( safe-01 :arg1 person :arg1-of complete-02 ) ) ) ) ) :condition ( want-01 :arg0 we :arg1 ( successes :mod real ) ) )
charge-05 :arg1 ( commission :polarity - ) :arg2 cash
and :op1 ( be-located-at-91 :arg1 ( room :name ( name :op1 richly ) :location world-region_name_0 ) :arg2 ( meet-03 :quant num_0 :location ( above :op1 ( floors :quant num_1 ) ) ) ) :op2 ( image :name ( name :op1 wall ) :location ( above :op1 ( floors :poss country ) ) )
and :op1 ( react-01 :arg0 you ) :op2 ( obligate-01 :arg1 i :arg2 ( suffer-01 :arg0 you :arg1 consequence ) ) :op3 ( obligate-01 :arg1 i :arg2 ( live-01 :arg0 i :accompanier ( thing :arg1-of ( say-01 :arg0 i ) ) ) :time then )
need-01 :arg1 ( step-01 :arg2 ( achieve-01 :arg1 balance-01 ) )
work-01 :arg0 ( person :quant num_0 ) :location ( room :part-of city :quant all )
and :op1 ( put-01 :arg0 government-organization_name_0 :arg1 ( condition :mod such :arg1-of ( exist-01 :polarity - :time before ) ) :arg2 ( condition :mod such ) ) :op2 ( possible-01 :arg1 ( speed-01 :arg0 government-organization :arg1 recession-02 ) ) :prep-in ( case :mod this )
and :op2 ( remain-01 :arg1 he :arg3 ( favorite :arg0 he :arg1 ( fight-01 :arg2 title ) :arg1-of obvious-01 ) :time ( allow-01 :arg0 ( and :op1 person_name_0 :op2 person_name_1 ) :arg1 ( reduce-01 :arg0 person :arg1 gap :arg4 ( point :quant num_0 :mod just ) ) ) )
and :op1 ( stress-01 :arg0 lamb :arg1 ( have-03 :arg0 house :arg1 ( dog :arg0-of ( have-rel-role-91 :arg2 dd1 ) ) ) ) :op2 ( say-01 :arg0 lamb :arg1 ( possible-01 :arg1 ( find-01 :arg1 ( contact-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg1 ( family :arg1-of ( have-org-role-91 :arg0 person :arg2 member ) ) :arg2 member ) ) :arg1 ( phone :poss person ) ) ) ) )
and :op1 ( use-01 :arg0 company_name_0 :arg1 ( approach-02 :arg0 company :arg1-of personal-02 ) ) :op2 ( announce-01 :arg0 company :arg1 ( campaign-01 :arg0 company :arg1 ( collect-01 :arg0 company :arg1 ( thing :arg1-of donate-01 ) :arg2 ( blog-01 :arg0 he ) ) ) )
cost-01 :arg1 ( damage-01 :arg1 ( person :arg0-of defend-01 ) ) :arg2 ( monetary-quantity monetary-quantity_num_0 :unit ( dollar :mod renminbi ) ) :manner cumulative
contrast-01 :arg1 ( become-01 :arg1 country_name_0 :arg2 ( person :arg0-of ( lead-02 :arg1 country ) ) :time ( month :mod last ) ) :arg2 ( strengthen-01 :arg0 country :arg1 ( control-01 :arg1 border ) :purpose ( contain-01 :arg0 country :arg1 ( tide :poss country ) ) :time recent )
answer-01 :arg2 ( reside-01 :arg1 country-region_name_0 ) :time ( after :op1 now :quant ( up-to :op1 ( temporal-quantity temporal-quantity_num_0 :unit day ) ) )
answer-01 :arg2 ( reside-01 :arg1 country-region_name_0 ) :time ( after :op1 now :quant ( up-to :op1 ( temporal-quantity temporal-quantity_num_0 :unit day ) ) )
(-(
say-01 :arg0 ( thing :arg1-of guide-01 ) :arg1 ( have-03 :arg0 ( '' :name ( name :op1 '' ) :mod '' ) :arg1 ( model :topic ( attack-01 :arg1 ( game :mod attack-01 :quant several ) ) ) )
elect-01 :li num_0 :arg2 person_name_0
do-02 :arg1 this :purpose ( prevent-01 :arg1 ( provocations :arg1-of differ-02 ) )
shock-01 :arg0 ( possible-01 :arg1 ( return-01 :arg1 we :arg4 ( negotiate-01 :arg0 we :arg2 ( creditors :poss we ) ) :ord ( ordinal-entity ordinal-entity_num_0 ) ) ) :arg1-of ( cause-01 :arg0 ( expect-01 :arg0 we :arg1 ( implement-01 :arg0 we :arg1 ( implement-01 :arg1 agree-01 :mod full ) ) ) )
say-01 :arg0 person_name_0 :arg1 ( suppose-02 :arg1 ( receive-01 :arg0 ( authors :poss ( post :mod ( harm-01 :polarity - ) ) ) :arg1 country_name_1 :arg2 ( indicate-01 :arg1 ( remove-01 :arg1 ( record :poss they ) ) ) ) )
and :op1 ( note-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg1 government-organization_name_0 :arg2 member ) ) :arg1 ( and :op1 ( end-01 :arg1 immunity :location ( house :poss government-organization_name_0 ) ) :op2 ( soon :arg1 immunity :time ( as-soon-as :op1 ( come-out-09 :arg1 person ) ) ) ) ) :op2 ( valid-02 :polarity - :arg1 immunity )
contrast-01 :arg1 ( obligate-01 :arg2 ( give-01 :arg1 ( opportunity :mod same ) :arg2 ( opportunity :arg1-of ( same-01 :arg2 ( opportunity :mod same ) ) ) :mod at-least ) ) :arg2 ( depend-01 :arg0 certain :arg1 ( government-organization_name_1 :mod ( command-02 :location country ) ) )
like-02 :arg0 i :arg1 ( point-out-02 :arg0 i :arg1 ( recommend-01 :arg1 ( confused :polarity - :arg0 we :arg1 ( card :name ( name :op1 groceries :op2 groceries ) :arg1-of propose-01 ) :prep-with ( and :op1 ( deficit :mod total ) :op2 ( system :arg0-of ( distribute-01 :arg1 card ) ) :op3 ( system :arg0-of ( distribute-01 :arg1 card ) ) :op4 ( number :quant-of ( product :arg1-of receive-01 ) ) ) ) ) )
abandon-01 :arg1 ( and :op1 food :op2 water :arg1-of abandon-01 :quant some )
arrive-01 :arg1 police :arg4 place :medium ( call-02 :arg0 police )
say-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg2 official ) ) :arg1 ( contrast-01 :arg1 ( say-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg2 official ) ) :arg1 ( be-located-at-91 :arg1 ( and :op1 ( person :arg0-of study-01 ) :op2 ( bag :consist-of sand ) ) :arg2 ( behind :op1 ( push-01 :arg0 person :arg1 sand ) ) :frequency several :time ( try-01 :arg0 person :arg1 ( reach-01 :arg0 person :arg1 goal ) ) ) ) :arg2 ( try-01 :arg0 person :arg1 ( reach-01 :arg0 person :arg1 goal ) ) )
say-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg2 official ) ) :arg1 ( contrast-01 :arg1 ( say-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg2 official ) ) :arg1 ( and :op1 ( person :arg0-of study-01 ) :op2 ( person :arg0-of study-01 ) :prep-with sand :location ( behind :op1 ( back :part-of he ) ) ) ) :arg2 ( try-01 :arg0 person :arg1 ( reach-01 :arg0 person :arg1 ( goal :mod ( go-02 :arg0 person :arg4 ( surface :mod slippery ) ) ) ) ) )
participate-01 :arg0 ( person :arg2-of ( include-91 :arg1 ( and :op1 ( person :arg0-of ( have-org-role-91 :arg1 organization_name_0 :arg2 member ) ) :op2 ( person :arg0-of ( have-org-role-91 :arg1 organization :arg2 member ) ) :op3 ( person :arg0-of ( have-org-role-91 :arg1 community :arg2 member ) ) :op4 ( person :arg0-of ( have-org-role-91 :arg1 community :arg2 member ) ) :op5 ( person :arg0-of ( have-org-role-91 :arg1 community :arg2 member ) ) ) :arg2-of ( include-91 :arg1 ( and :op1 ( person :arg0-of ( have-org-role-91 :arg1 organization :arg2 member ) ) :op2 ( person :arg0-of ( have-org-role-91 :arg1 organization :arg2 member ) ) :op3 ( person :arg0-of ( have-org-role-91 :arg1 community :arg2 member ) ) :op4 ( person :arg0-of ( have-org-role-91 :arg1 community :arg2 member ) ) :op5 ( person :arg0-of ( have-org-role-91 :arg1 community :arg2 member ) ) ) ) ) ) :arg1 ( ceremony :mod mold :mod candle ) :time ( night :mod tuesday )
or :op1 ( published :arg0 we :arg1 ( name :poss you ) :manner form :arg1-of ( specify-01 :arg0 you ) ) :op2 ( publish :polarity - :arg0 we :arg1 ( request-01 :arg0 you ) )
contrast-01 :arg2 ( tell-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg1 ( government-organization_name_0 :mod shadow ) :arg2 member ) ) :arg1 ( advise-01 :arg0 person :arg1 ( person :arg0-of ( lead-02 :arg1 ( party :mod political-party_name_2 ) ) ) :arg2 ( '' :arg1 ( park_name_0 :mod nation ) ) :arg2-of ( except-01 :arg1 ( believe-01 :arg0 person :arg1 ( abolition :arg1 monarchy ) ) ) ) ) :arg2 ( person :arg0-of ( have-org-role-91 :arg1 company_name_2 :arg2 member ) )
(-(
(-(
clear-06 :arg1 ( increase-01 :arg1 ( rate :mod interest ) :arg1-of sharp-02 )
enough :polarity - :domain skill
multi-sentence :snt1 ( contrast-01 :arg2 ( answer-01 :arg0 it :arg2 question-01 ) ) :snt2 ( have-condition-91 :arg1 ( reach-01 :arg0 ( rise-01 :arg1 wood :mod last ) :arg1 ( rise-01 :arg1 wood :mod last ) :manner prompt :arg1-of ( cause-01 :arg0 ( conquered :arg0 they :arg1 heart :manner prompt ) ) :arg2 you ) )
and :op1 ( product :arg1-of reasonable-02 ) :op2 ( product :quant lot :arg1-of ( sell-01 :location bulk ) )
multi-sentence :snt1 ( contrast-01 :arg2 ( listen-01 :polarity - :arg0 he :arg1 ( preventions :poss i ) ) ) :snt2 ( declare-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg1 country_name_0 :arg2 president ) ) )
reach-01 :arg0 ( championships :time ( late :op1 ( temporal-quantity temporal-quantity_num_0 :unit year ) :degree more ) :location world ) :arg1 final :time ( late :op1 ( temporal-quantity temporal-quantity_num_1 :unit year ) :degree more ) :location ( championships :mod world ) :time already
contrast-01 :arg1 ( recommend-01 :arg1 ( reminded :domain ( train-01 :arg0 person_name_0 :arg2 ( '' :mod '' ) :time ( season :quant num_0 ) ) ) ) :arg2 ( manage-01 :polarity - :arg0 person :arg1 person :purpose ( show-01 :arg0 person :arg1 person :arg2 ( hand :mod ( good :degree most ) :location country_name_1 ) ) )
call-01 :arg0 ( character :name ( name :op1 costume :op2 cartoon ) :location country_name_0 ) :arg1 '' :arg2 ''
cause-01 :arg1 ( allow-01 :polarity - :arg0 ( win-01 :arg0 person_name_0 ) :arg1 ( catch-up-04 :arg1 person :arg2 location_name_1 ) )
cause-01 :arg1 ( allow-01 :polarity - :arg0 ( win-01 :arg0 ( woman :mod country_name_0 :arg1-of ( include-91 :arg2 ( woman :mod country_name_1 ) ) ) ) :arg1 ( overtake :arg0 win-01 :arg1 bushing ) )
have-concession-91 :arg1 ( and :op1 ( beat-03 :arg1 person_name_1 :arg2 ( attempt-01 :arg0 person :arg1 ( get-05 :arg1 person :arg2 ( base :ord ( ordinal-entity ordinal-entity_num_0 ) ) :degree more ) ) ) :op2 ( eliminate-01 :arg1 threaten-01 ) ) :arg2 ( person :arg0-of ( play-01 :mod third-base ) :arg1-of ( result-01 :arg2 ( wound :mod another ) ) )
person :arg0-of ( depend-01 :polarity - ) :arg0-of ( depend-01 :polarity - ) :arg0-of ( depend-01 :polarity - ) :arg0-of ( depend-01 :polarity - ) :arg0-of ( depend-01 :polarity - ) :arg0-of ( depend-01 :polarity - ) :arg0-of ( depend-01 :polarity - ) :arg0-of ( depend-01 :polarity - )
depend-01 :polarity - :arg0 organization_name_0 :arg1 ( structure :mod professional :arg1-of ( sponsor-01 :arg0 ( and :op1 doctor :op2 ( person :arg0-of study-01 :mod medicine ) ) ) )
multi-sentence :snt1 ( and :op1 ( develop-02 :arg1 ( business :arg0-of publish-01 ) ) :op2 ( attend-02 :arg1 business :quant much ) ) :snt2 ( attend-02 :arg0 generation :arg1 authors )
contrast-01 :arg2 ( have-03 :arg0 ( and :op1 ( person :arg0-of ( have-org-role-91 :arg2 official ) ) :op2 ( person :arg0-of ( have-org-role-91 :arg2 official ) ) ) :arg1 ( side :mod positive ) :mod at-least )
say-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg1 city_name_0 :arg2 ( president :mod vice ) ) ) :arg1 ( allow-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg3 judge-01 ) ) :arg1 ( fight-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg3 judge-01 ) ) :arg1 ( fight-01 :arg0 person :arg1 ( team :poss person ) :arg2 ( team :poss person ) :time ( win-01 :arg0 ( win-01 :arg0 ( win-01 :arg0 ( win-01 :arg0 ( win-01 :arg0 ( win-01 :arg0 ( win-01 :arg0 ( win-01 :arg0 ( win-01 :arg0 ( win-01 :arg0 ( win-01 :arg0 ( win-01 :arg0 ( win-01 :time ( date-entity decade_date-entity_0 ) ) :location city :time ( date-entity decade_date-entity_0 ) ) :mod final ) ) ) ) ) ) ) ) ) ) ) ) ) )
multi-sentence :snt1 ( signal-07 :arg0 ( and :op1 ( strengthen-01 :arg1 dollar ) :op2 ( strengthen-01 :arg1 dollar ) ) :arg1 ( signal-07 :arg1 ( adapt-01 :arg1 market :arg2 ( thing :arg2-of ( name-01 :arg1 ( policy :topic money :arg1-of ( tough-02 :degree more ) ) ) ) ) ) ) :snt2 ( write-01 :arg0 she )
prepare-01 :arg0 ministry :arg1 ( thing :arg2-of ( list-01 :arg1 ( good :arg1-of subsidized ) ) ) :purpose ( import-01 :arg1 ( good :arg1-of subsidized ) :arg2 ( import-01 :arg1 ( good :arg1-of subsidized ) :arg2 ( government-organization :arg0-of ( govern-01 :arg1 country_name_0 ) ) ) :duration temporary )
prepare-01 :arg0 ministry :arg1 ( thing :arg2-of ( list-01 :arg1 ( good :arg1-of qualify-02 ) :duration temporary ) ) :arg3 ( thing :arg2-of ( list-01 :arg1 ( good :arg1-of qualify-02 ) :duration temporary ) )
and :op1 ( want-01 :arg0 we :arg1 ( win-01 :arg0 we ) ) :op2 ( do-02 :arg0 we :arg1 it ) :concession ( regret-01 :arg0 i :arg1 ( score-01 :polarity - :arg1 we :arg2 ( goal :quant ( or :op1 num_0 :op2 num_1 ) ) ) )
and :op1 ( person_name_0 :arg0-of ( have-org-role-91 :arg1 ( organization_name_1 :arg1-of powerful-02 ) :arg2 member ) ) :op2 ( person :arg0-of ( have-org-role-91 :arg1 ( organization_name_1 :arg1-of powerful-02 ) :arg2 member ) ) :op3 ( vote-01 :arg0 person :arg1 ( raise-01 :arg0 person :arg1 rate ) ) :arg0-of ( press-01 :arg2 ( solution :quant num_0 :arg2-of ( lead-02 :arg0 person ) ) )
multi-sentence :snt1 ( be-located-at-91 :mode interrogative :arg1 this :arg2 this ) :snt2 ( report-01 :arg0 organization_name_0 :arg1 ( person :arg0-of ( assist-01 :arg2 ( person :arg0-of ( have-org-role-91 :arg2 ( minister :topic ( develop-02 :arg1 economy ) ) ) ) ) ) )
likely-01 :polarity - :arg1 ( likely-01 :arg1 ( likely-01 :polarity - :arg1 ( likely-01 :arg1 ( parents :arg0 ( person_name_0 :arg0-of ( parents :arg1 ( content :arg1-of ( name-01 :polarity - :arg2 boy ) ) :purpose ( destroy-01 :arg0 boy :arg1 ( and :op1 ( trees :name ( name :op1 vyrubschik ) ) :op2 ( trees :name ( name :op1 '' ) ) :op3 ( nahodkins :name ( name :op1 '' ) ) :op4 ( nahodkins :name ( name :op1 '' ) ) :op5 ( nahodkins :mod '' ) ) ) ) ) ) ) ) )
encourage-01 :arg0 he :arg1 they :arg1-of ( instead-of-91 :arg2 ( disruption :arg1 ( newcomers :location ( presence :poss team ) ) ) )
consensus :polarity - :topic ( thing :arg1-of ( do-02 :location ( system :mod government-organization_name_0 ) ) :arg0-of ( provoke :arg1 company_name_2 :location ( market :mod finance ) ) )
possible-01 :arg1 ( have-condition-91 :arg1 ( possible-01 :arg1 ( colony :arg1-of separate-02 ) ) :arg2 ( person :mod transgender :quant lot ) )
chance-02 :arg1 ( learn-01 :arg1 ( everything :topic ( world :mod domestic ) ) ) :mod ( precedent :polarity - )
and :op1 ( hold-04 :arg1 visit-01 :time ( date-entity month_date-entity_0 day_date-entity_0 ) :location city_name_0 ) :op2 ( visit-01 :arg1 ( visit-01 :arg0 ( person_name_1 :arg0-of ( have-org-role-91 :arg2 president ) ) :arg1 ( person :arg0-of ( have-org-role-91 :arg2 president ) ) :location city_name_2 :time ( year :mod last ) ) ) :medium statement
and :op1 ( visit-01 :arg0 person_name_0 :arg1 city_name_1 :ord ( ordinal-entity ordinal-entity_num_0 ) ) :op2 ( return-01 :arg1 person :arg4 ( visit-01 :arg0 person :arg1 ( person_name_2 :arg0-of ( have-org-role-91 :arg2 president ) ) :time ( date-entity month_date-entity_0 day_date-entity_0 ) ) ) :medium statement
multi-sentence :snt1 ( allow-01 :polarity - :arg0 ( nothing :prep-in culture ) :arg1 ( say-01 :arg0 you :arg1 ( and :op1 ( say-01 :arg0 you :arg1 ( like-01 :arg0 you :arg1 you ) ) :op2 ( want-01 :arg0 i :arg1 ( have-rel-role-91 :arg0 i :arg1 you :arg2 friend ) ) ) ) ) :snt2 ( contrast-01 :arg1 ( want-01 :arg0 i :arg1 ( leave-11 :arg0 you ) ) :arg2 ( need-01 :arg0 i :arg1 ( and :op1 ( leave-11 :arg0 i ) :op2 ( restore-01 :arg0 i :arg1 energy :arg2 you ) ) ) )
obligate-01 :arg2 ( decide-01 :arg0 ( candidate :mod this ) :arg1 decide-01 :time ( after :op1 now :quant ( up-to :op1 ( temporal-quantity temporal-quantity_num_0 :unit day ) ) ) :condition ( work-01 :arg0 candidate :location ( person :arg0-of ( have-org-role-91 :arg1 ( location_name_0 :mod city ) :arg2 deputy ) ) ) :arg1-of ( cause-01 :arg0 ( move-01 :arg0 candidate :arg2 ( candidate :mod next :topic ( list-01 :arg1 party ) ) ) ) )
great :degree so :domain ( have-03 :arg0 you :arg1 ( capable-01 :arg1 you :arg2 ( choose-01 :arg0 you :arg1 ( or :op1 ( clothes :arg1-of ( cool-04 :degree very ) ) :op2 ( behave-01 :arg1 ( or :op1 behave-01 :op2 ( behave-01 :arg0 or ) ) ) ) ) ) ) :time ( after :op1 all )
read-01 :arg0 i :arg1 ( everything :example ( and :op1 military :op2 ( story :mod history ) :op3 ( tales :mod fairy ) :op4 et-cetera ) )
recommend-01 :arg1 ( and :op1 ( involve-01 :arg1 ( thing :arg1-of decide-01 ) :arg2 ( summit :mod organization_name_0 ) ) :op2 ( recommend-01 :arg1 ( involve-01 :arg1 decide-01 ) ) )
cause-01 :arg1 ( emphasize-01 :arg0 ( government-organization :arg0-of ( administrate-01 :arg1 organization_name_0 ) ) :arg1 ( emphasize-01 :arg0 ( government-organization :arg0-of ( administrate-01 :arg1 organization ) ) :arg1 ( recommend-01 :arg1 ( focus-01 :polarity - :arg0 ( person :arg0-of invest-01 ) :arg2 ( and :op1 ( raise-01 :arg0 person :arg1 stakes ) :op2 ( borrow :arg0 ( adaptation :quant amr-unknown ) :arg1 person ) ) ) ) ) )
contrast-01 :arg1 ( sad-02 :arg1 it ) :arg2 ( pride-01 :arg0 i :arg2 child )
say-01 :arg0 ( person_name_0 :arg0-of ( have-org-role-91 :arg2 mr. ) ) :arg1 ( possible-01 :arg1 ( cost-01 :arg1 ( and :op1 revenue :op2 sell-01 ) :arg2 ( and :op1 revenue :op2 sell-01 :arg1-of ( cost-01 :arg2 ( level :arg1-of high-02 :consist-of ( monetary-quantity :arg2-of cost-01 :arg1-of fix-03 ) ) ) ) ) :arg1-of possible-01 )
and :op1 ( representations :polarity - :arg0 group_name_0 :arg1 ( collapse-01 :arg1 range ) :mod any ) :op2 ( unavailable :arg1 ( person :arg0-of ( represent-01 :arg1 country ) ) :purpose ( comment-01 :arg0 person ) )
and :op1 ( deficit :mod budget :mod ( again :mod once ) ) :op2 ( employ-01 :polarity - :arg1 country :arg1-of high-02 ) :time now
unbeaten :arg1 organization_name_0 :time ( since :quant num_0 ) :time ( since :op1 ( manage-02 :arg0 they :arg1 ( hold-01 :arg0 they :arg1 ( '' :mod invincible :mod '' ) ) ) )
and :op1 ( collect-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg1 organization_name_0 ) ) :arg1 ( person :quant num_0 ) ) :op2 ( score-01 :arg1 person :arg2 ( score-entity :op1 num_1 :op2 num_1 ) ) :time ( evening :time evening )
change-01 :arg1 ( grill :prep-with ( line :quant num_0 :mod horizontal ) ) :mod main
contrast-01 :arg2 ( need-01 :arg0 ( person :quant many :arg1-of ( resemble-01 :arg2 ( family :arg1-of ( have-org-role-91 :arg0 person :arg2 member ) ) ) ) :arg1 help-01 :manner desperate :time since )
go-03 :mode imperative :arg0 you :arg1 ( far :degree very ) :location ( place :mod another )
go-02 :mode imperative :arg0 you :arg4 elsewhere :mod ( far :degree very )
cut-back-05 :arg0 organization_name_0 :arg1 ( job :quant num_0 )
include-91 :arg1 ( and :op1 ( person :arg0-of ( reside-01 :arg1 country-region_name_0 ) :quant ( several :op1 num_0 ) ) :op2 ( person :arg0-of ( have-org-role-91 :arg1 country_name_0 :arg3 reside-01 ) ) :op3 ( person :arg0-of ( have-org-role-91 :arg1 country_name_1 :arg3 reside-01 ) ) :op4 ( person :arg0-of ( have-org-role-91 :arg1 country :arg3 reside-01 ) ) :op5 ( person :arg0-of ( have-org-role-91 :arg1 country :arg3 reside-01 ) ) ) :arg2 imprison-01
include-91 :arg1 ( and :op1 ( person :arg0-of ( reside-01 :arg1 country-region_name_0 ) :arg0-of ( have-org-role-91 :arg1 country-region_name_0 :arg3 reside-01 ) ) :op2 ( person :arg0-of ( have-org-role-91 :arg1 country-region_name_0 :arg3 reside-01 ) ) :op3 ( person :arg0-of ( have-org-role-91 :arg1 game_name_1 :arg3 reside-01 ) ) :op4 ( person :arg0-of ( have-rel-role-91 :arg1 person :arg2 residents ) ) :op5 ( person :arg0-of ( have-rel-role-91 :arg1 person :arg2 residents ) ) ) :arg2 ( imprison-01 :arg1 person :arg2 ( imprison-01 :arg2 person ) )
emphasize-01 :arg0 he :arg1 ( cause-01 :arg0 ( react-01 :arg0 ( country :location continent_name_0 :mod west ) :arg1 ( crisis :mod ( crisis :mod ( crisis :polarity - ) ) ) ) :arg1 situation :manner adequate ) :mod also
prepare-01 :arg0 ( organization_name_0 :part-of ( criminal-organization_name_0 :mod country_name_2 ) ) :arg1 ( and :op1 ( thing :arg1-of ( decide-01 :arg3 ( thing :arg1-of ( draft-01 :arg0 ( commission :mod ( economy :mod country-region ) ) :duration temporary ) ) ) ) :op2 ( duty :mod customs :arg1-of ( import-01 :arg2 ( conditional :mod full ) :duration temporary ) ) ) :op3 ( provide-01 :arg1 ( remission :mod full :mod full :poss ( duty :mod customs ) ) ) :op4 ( tax-01 :arg3 ( and :op1 rest :op2 sport ) )
and :op1 ( come-out-09 :arg1 person_name_0 :arg2 ( tigers :mod '' ) :time ( since :op1 ( acquire-01 :arg0 person :arg1 ( acquire-01 :arg0 person :arg1 ( person_name_1 :arg0-of ( have-org-role-91 :arg2 pitcher ) ) :time ( date-entity month_date-entity_0 day_date-entity_0 ) ) ) ) ) :op2 ( defeat-01 :quant num_1 :arg1 person )
good :degree most :domain self-sufficiency :time always :location i :arg0-of ( cause-01 :arg1 ( vykusite :arg0 you ) )
self-sufficiency :arg1 ( good :degree most ) :time always :arg1-of ( cause-01 :arg0 ( bite :arg1 that ) )
and :op2 ( represent-01 :polarity - :arg0 i :arg1 i :arg2 ( trainer :arg1-of ( need-01 :arg0 i ) ) )
hold-04 :arg0 i :arg1 ( meet-03 :arg0 i :arg1 ( government-organization_name_0 :poss organization_name_1 ) :time ( late :op1 ( month :mod this ) :degree more ) )
agree-01 :arg0 i :arg1 ( way :mod good :manner-of ( tell-01 :arg0 they :arg1 ( history :arg0-of detail-01 :mod ( penalize-01 :manner die-01 ) ) :arg2 it ) )
cause-01 :arg0 ( fan :domain person_name_0 :arg1-of ( include-91 :arg2 ( fan :arg0-of ( oppose-01 :arg1 person_name_1 ) ) ) ) :arg1 ( fan :arg1-of ( include-91 :arg2 ( fan :arg0-of ( oppose-01 :arg1 ( idea :topic referendum ) ) ) ) ) :degree more :arg1-of ( cause-01 :arg0 ( and :op1 ( realize-01 :polarity - :arg0 person :arg1 ( principle :poss person :topic ( favor-01 :arg1 ( organization_name_3 :mod cancelled ) ) ) ) :op2 ( bury-01 :arg0 person :arg1 ( person :arg0-of ( vote-01 :arg1 ( and :op1 country :op2 country ) ) ) :arg2 ( person :arg0-of ( win-01 :arg1 ticket ) ) ) ) )
star
and :op1 ( back-01 :arg0 person_name_0 :arg1 ( decide-01 :arg0 person :arg1 ( forgive :arg0 person :arg1 ( match-03 :mod important :arg1-of ( begin-01 :medium ( friday :mod important ) ) ) ) ) :mod also ) :op2 ( believe-01 :arg0 person :arg1 ( return-01 :arg1 ( guy :source city_name_1 ) :arg4 ( team :consist-of ( person :arg0-of ( play-01 :arg1-of long-03 ) ) ) ) )
respond-01 :arg0 ( company :arg0-of support-01 :example ( and :op1 ( and :op1 organization_name_0 :op2 organization_name_1 :op3 organization_name_2 :op4 organization_name_2 ) :op2 ( company :arg0-of ( have-org-role-91 :arg1 organization :arg3 support-01 ) ) :op3 ( company :arg0-of ( have-org-role-91 :arg1 organization :arg3 support-01 ) ) :op4 ( company :arg0-of ( have-org-role-91 :arg1 organization :arg3 manage-01 ) ) :op5 ( company :arg0-of ( manage-01 :arg1 organization ) ) ) ) :arg1 ( appeal-01 :quant all )
overtakes :arg0 person_name_0 :arg1 businessman :arg3 ( point :quant num_0 :mod whole :location ( contest :name ( name :op1 hypothetical :op2 num_1 :op3 num_1 ) ) )
get :arg1 ( thing :arg1-of think-01 :mod this )
multi-sentence :snt1 ( include-01 :arg0 person_name_0 :arg1 person_name_1 :arg2 ( book :arg1-of ( write-01 :arg0 person ) ) :medium book :arg1-of ( write-01 :arg0 person ) ) :snt2 ( excellent-02 :mode interrogative :arg1 person :prep-in ( life :mod teach-01 :poss person ) )
include-01 :arg1 ( person_name_0 :arg1-of ( include-91 :arg2 ( person_name_1 :arg0-of ( express-01 :arg1 book ) ) ) ) :arg2 ( express-01 :arg0 person :arg1 ( serious-01 :arg1 person :arg2 ( person :arg1-of ( beautiful-02 :degree most ) :arg0-of ( have-03 :arg1 ( business :arg1-of ( have-03 :arg0 person :location ( life :mod teach-01 :poss person ) ) ) ) ) ) )
and :op1 ( consider-01 :arg1 ( invalid :quant ( more-than :op1 num_0 ) ) ) :op2 ( lose-02 :arg1 ( person :quant num_1 ) )
carry-out-03 :arg0 ( attack-01 :arg1 ( and :op1 ( person :arg0-of ( have-rel-role-91 :arg2 enemy ) ) :op2 ( person :arg0-of ( have-rel-role-91 :arg1 company_name_0 :arg2 enemy ) ) ) :mod artillery ) :arg1 location_name_0 :time ( day :mod last :part-of day )
and :op1 ( lost :arg0 ( person :arg0-of ( lead-02 :arg1 ( person_name_0 :arg0-of ( have-org-role-91 :arg1 tournament ) ) ) ) :arg1 ( person :arg0-of ( lead-02 :arg1 country_name_1 ) ) :arg2 ( win-01 :polarity - :arg0 person :arg2 ( round :mod final ) ) :degree enough ) :op2 ( lose-02 :arg0 person :arg1 title :manner success )
say-01 :arg1 ( person :arg0-of author-01 ) :arg2 ( person_name_0 :arg0-of author-01 )
purchase-01 :arg0 organization_name_0 :arg1 ( percentage-entity percentage-entity_num_0 ) :arg2 ( percentage-entity percentage-entity_num_0 ) :time ( after :op1 ( announce-01 :arg0 ( giant :arg0-of mine-01 ) :arg1 ( get-01 :arg0 giant :arg1 ( monetary-quantity monetary-quantity_num_1 :unit dollar :arg1-of ( value-01 :arg2 ( monetary-quantity monetary-quantity_num_1 :unit dollar ) ) :arg1-of ( do-02 :arg2 ( strategy :purpose ( reduce-01 :arg1 ( debt :poss organization ) ) ) ) ) ) ) )
tell-01 :arg1 ( look-up-05 :arg0 person :arg1 ( class :poss person ) :direction forward ) :arg2 ( person :arg0-of study-01 )
contrast-01 :arg1 ( see-01 :arg0 most :arg1 person_name_0 :arg1-of ( instead-of-91 :arg2 ( see-01 :polarity - :arg0 person :arg1 ( man :mod honest :mod honest ) ) ) :degree most :compared-to person_name_1 ) :arg2 ( opine-01 :arg0 person :arg1 ( have-03 :polarity - :arg0 person :arg1 ( thing :arg1-of opine-01 :topic he ) ) )
rule-out-02 :polarity - :arg0 ( person :arg1-of ( arrive-01 :location continent_name_0 ) ) :arg1 ( state :mod ( militant :mod extremism ) :arg0-of ( have-org-role-91 :arg2 militant ) )
say-01 :arg0 he :arg1 ( thing :arg1-of ( comment-01 :arg3 ( motive :mod such ) ) ) :manner ''
say-01 :arg0 ( person :mod country_name_0 ) :arg1 ( possible-01 :polarity - :arg1 ( do-02 :arg0 person_name_1 :arg1 this :mod too ) )
show-01 :arg0 organization_name_0 :arg1 ( person :arg1-of ( broadcast-01 :location prime-time ) ) :arg1-of ( cause-01 :arg0 ( want-01 :arg0 person :arg1 ( gain-02 :arg0 person :arg1 ( support-01 :quant ( quantity :degree equal :compared-to ( possible-01 :arg1 gain-02 ) ) ) ) ) )
lose-03 :arg0 person_name_0 :arg1 ball :purpose ( return-02 :arg0 person :arg1 ( '' :mod panting ) :arg2 organization_name_1 :time ( ordinal-entity ordinal-entity_num_0 ) )
say-01 :arg0 ( person_name_0 :arg0-of ( head-01 :arg1 ( effort :mod ( effort :mod search-and-rescue ) ) ) ) :arg1 ( find-01 :arg1 ( helicopter :arg1-of ( catch-02 :arg2 man ) ) )
hero :domain he :beneficiary ( and :op1 ( person :arg0-of ( have-rel-role-91 :arg1 he :arg2 child ) ) :op2 ( person :arg0-of ( have-rel-role-91 :arg1 he :arg2 wife ) ) )
phone-number-entity phone-number-entity_num_0
and :op1 ( side :arg1 ( side-01 :arg0 someone :arg1 ( room :arg1-of ( locked :arg2 ( room :arg1-of ( locked :arg0 someone ) ) ) ) ) :time ( moment :mod that ) ) :op2 ( side :domain ( side-01 :arg0 someone :arg1 ( and :op1 draw-02 :op2 persecution ) ) )
cause-01 :arg0 ( high-02 :arg1 rate :arg2 ( declare-02 :arg1 ( declare-02 :arg1 ( depend-01 :polarity - :arg0 ( develop-02 :arg1 industry :manner intensive ) ) ) ) :arg1 ( become-01 :arg1 ( country :quant num_0 :arg1-of ( include-91 :arg2 ( and :op1 ( country :arg0-of ( overpopulated :degree most ) ) :op2 ( country :location ( relative-position :op1 world :quant most ) ) ) ) ) :arg2 ( temporal-quantity temporal-quantity_num_0 :unit year ) ) ) :arg1 ( high-02 :arg1 rate )
say-01 :arg0 person_name_0 :arg1 ( violate-01 :arg0 military_name_1 :arg1 ( and :op1 ( value :mod continent_name_0 ) :op2 ( law :mod international ) :quant many ) )
say-01 :arg0 ( report :mod official ) :arg1 ( attend-01 :arg0 ( and :op1 ( person_name_0 :arg0-of ( have-org-role-91 :arg2 ( minister :mod prime ) ) ) :op2 ( person :arg0-of ( have-org-role-91 :arg1 person_name_2 :arg2 minister ) ) ) :arg1 it :mod also :time ( after :op1 meet-03 ) )
think-01 :mode imperative :polarity - :arg0 you :arg1 ( start-01 :arg1 ( study-01 :arg0 he :location university ) ) :mod still :time topic
show-01 :arg0 ( poll-01 :arg0 person_name_0 ) :arg1 ( attitude :mod positive :topic ( estate :mod real :mod this ) ) :time ( before :op1 ( announce-01 :arg0 person :arg1 ( candidacy :poss person :location mid-june ) ) :mod just )
and :op1 ( lack-01 :arg0 ( professional :source ( country :mod poor ) ) :arg1 ( level :mod skill ) ) :op2 ( cooperate-01 :arg0 professional :arg1 ( person :arg1-of expert-01 ) :arg2 ( country :mod rich ) ) :time ( after :op1 war_name_0 )
and :op1 ( lack-01 :arg0 ( professional :source ( country :mod poor ) ) :arg1 ( level :mod skill ) :purpose ( cooperate-01 :arg0 professional :arg2 ( and :op1 ( person :arg0-of specialize-01 ) :op2 ( universe :source ( country :mod rich ) ) ) ) ) :time ( after :op1 ( expel-01 :arg0 professional :arg1 ( professional :source ( country :mod poor ) ) ) )
and :op1 ( die-01 :arg1 ( person :quant ( about :op1 num_0 ) ) :arg3 ( disease :arg1-of ( relate-01 :arg2 disease ) ) ) :op2 ( cost-01 :arg1 smoke-02 :arg2 ( monetary-quantity monetary-quantity_num_1 :unit ( dollar :mod government-organization_name_0 ) ) )
phone-number-entity phone-number-entity_num_0
and :op1 ( pressure-01 :arg0 i :arg1 they ) :op2 ( make-02 :arg0 i :arg1 ( responsible-01 :arg0 they :arg1 ( decide-01 :arg0 they ) ) )
change-01 :polarity - :arg1 ( employ-01 :polarity - )
contrast-01 :arg1 ( and :op1 ( build :arg1 ( area :arg1-of ( near-02 :arg2 ( future :arg1-of near-02 ) ) ) :location location_name_0 ) :op2 ( cemeteries :arg0 person_name_1 :time ( late :degree more ) :location ( part :mod other :part-of capital ) ) ) :arg2 ( future :arg1-of near-02 )
have-concession-91 :arg2 ( agree-01 :polarity - :arg0 everyone :arg1 ( determine-01 :arg0 ( and :op1 ( individual :arg0-of ( confiscate-01 :arg1 person ) ) :op2 ( individual :arg0-of ( confiscate-01 :arg1 person ) ) ) :arg1 ( person :arg0-of play-01 ) ) )
cause-01 :arg1 ( take-01 :polarity - :arg0 ( person :arg0-of ( have-rel-role-91 :arg1 you :arg2 friend ) ) :arg1 ( person :arg0-of ( have-rel-role-91 :arg1 you :arg2 friend ) ) :purpose ( drink-01 :arg0 person :location center ) ) :condition ( visit-01 :arg0 you :location comedy :time ( weekend :mod this ) )
add-01 :arg0 he :arg1 ( mean-01 :arg1 ( plan-01 :arg1 ( expand-01 :arg1 ( sports :mod jd ) ) ) :arg2 ( reduce-01 :arg1 ( reduce-01 :arg1 ( number :quant-of ( job :mod additional ) ) ) ) )
multi-sentence :snt1 ( and :op1 ( want-01 :polarity - :arg0 ( person :arg0-of ( have-rel-role-91 :arg1 i :arg2 friend ) ) :arg1 ( maintain-01 :arg0 person :arg1 ( contact-01 :arg0 person :arg1 country_name_0 :mod external ) ) ) :op2 ( leave-15 :polarity - :arg0 person :arg1 we :location ( along :op1 country_name_2 ) ) ) :snt2 ( say-01 :arg0 person :arg1 ( offer-01 :arg0 ( and :op1 ( person :arg0-of ( have-org-role-91 :arg2 minister ) ) :op2 ( person :arg0-of ( have-org-role-91 :arg2 official ) ) ) :arg1 ( say-01 :arg0 person :arg1 ( or :op1 ( remain-01 :arg1 ( and :op1 ( person :arg0-of ( have-org-role-91 :arg2 minister ) ) :op2 ( person :arg0-of ( have-org-role-91 :arg2 official ) ) :location ( capitals :quant some ) ) :manner ( understand-01 :arg0 person ) ) :op2 ( leave-11 :arg0 we ) ) ) ) )
multi-sentence :snt1 ( armor-01 :mode imperative :arg0 we ) :snt2 ( carry-out-03 :arg0 ( '' :mod ( damn :degree most ) ) :arg1 ( broadcast-01 :arg0 it :medium text ) )
multi-sentence :snt1 ( word-01 :arg0 person_name_0 :arg1 ( word-01 :arg0 person :arg1 ( question-03 :polarity - :arg0 i :arg1 ethical ) ) ) :snt2 ( comment-01 :polarity - :arg0 i :arg3 game )
debut :arg1 ( news :mod important :topic ( seventh :arg0 ( person_name_0 :arg0-of ( have-org-role-91 :arg2 rafters :time former ) ) ) ) :mod important
receive-01 :arg0 ( person_name_0 :arg0-of ( have-org-role-91 :arg1 ( service :mod news :mod country_name_2 ) :arg2 '' ) ) :arg1 ( sentence-01 :arg1 person :arg2 ( imprison-01 :arg1 person :arg2 ( colony :mod penal ) :duration ( temporal-quantity temporal-quantity_num_0 :unit year ) ) )
argue-01 :arg0 ( everyone :arg0-of ( see-01 :arg1 ( race :poss you ) :location city_name_0 ) ) :arg1 ( run-13 :arg1-of ( nice-01 :degree very ) )
receive-01 :arg0 ( victim :mod other ) :arg1 ( sum :mod this :quant half )
trick :domain this :poss ( person_name_0 :mod ( style :mod ( scum. :mod such ) ) ) :mod another :arg1-of ( mean-01 :arg2 ( protest-01 :polarity - :arg0 person :prep-against ( thing :arg2-of ( result-01 :arg1 ( thing :arg2-of ( result-01 :arg1 ( party :mod politics :arg1-of specific-02 ) ) ) ) ) ) ) :mod another
consider-01 :polarity - :arg0 ( person :arg1-of register-02 :arg1-of ( include-91 :arg2 ( person :arg0-of vote-01 :arg1-of register-02 ) :arg3 ( percentage-entity percentage-entity_num_0 ) ) ) :arg1 ( and :op1 fair :op2 credible :domain person )
engines :arg1 ( engine :mod diesel :prep-with ( volume :quant-of ( person :quant num_0 :arg0-of ( l :arg1-of high-02 ) ) ) ) :arg2 ( range :arg1-of wide-02 :consist-of speed )
and :op1 ( monday :mode expressive ) :op2 ( report-01 :arg1 ( shoot-02 :arg0 he :arg1 someone ) )
multi-sentence :snt1 ( contrast-01 :arg2 ( complain-01 :arg0 mountain :arg1 ( complain-01 :quant ( more-than :op1 num_0 ) :arg1-of differ-02 ) :time already ) ) :snt2 ( say-01 :arg0 person_name_0 :arg1 ( violate-01 :polarity - :arg1 ( vings :arg1 ( ballots :mod unaccounted ) ) ) )
let-01 :mode imperative :polarity - :arg0 you :arg1 ( forget-01 :arg0 i :arg1 it )
and :op2 ( forget-01 :mode imperative :polarity - :arg0 you :arg1 ( forget-01 :arg0 i :arg1 it ) )
make-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg2 ( person :arg0-of participate-01 ) ) ) :arg1 it :arg4 ( round :mod final ) :time ( season :mod season )
reach-01 :arg0 ( and :op1 ( person_name_0 :arg0-of ( have-org-role-91 :arg2 ( person :arg0-of participate-01 ) ) ) :op2 ( person_name_1 :arg0-of ( have-org-role-91 :arg2 ( person :arg0-of operate-01 ) ) ) ) :arg1 ( round :mod final ) :time ( during :op1 ( season :mod ( season :mod ( season :quant num_0 ) ) ) )
detain-01 :arg1 ( person :arg0-of ( detain-01 :arg1 it :time ( after :op1 now :quant ( temporal-quantity temporal-quantity_num_0 :unit year ) ) ) ) :arg2 that
die-01 :arg1 ( person :arg0-of ( inhabit-01 :arg1 ( area :location ( and :op1 location_name_0 :op2 local-region_name_1 ) ) ) :arg0-of ( collapse-01 :arg1 element ) )
and :op1 ( send-01 :arg0 each :arg1 ( person :arg0-of ( have-org-role-91 :arg2 ( person :arg1-of expert-01 ) ) ) :arg2 ( petition-01 :arg0 person :arg1 ( participate-01 :arg0 person :arg1 rating ) ) ) :op2 ( give-01 :arg1 opportunity :arg2 ( person :quant num_0 :arg0-of ( have-org-role-91 :arg1 ( company :mod other ) :arg2 executive ) ) )
soloists :arg0 ( and :op1 ( person_name_0 :arg0-of ( learning :arg1 ( folk :arg1-of perfect-02 ) ) ) :op2 ( person :arg0-of ( have-org-role-91 :arg1 ( folk :arg1-of perfect-02 ) ) ) :op3 ( person :arg0-of ( have-org-role-91 :arg2 tatar ) ) :op4 ( person :arg0-of ( have-org-role-91 :arg2 dances ) ) :op5 ( person :arg0-of ( have-org-role-91 :arg2 dances ) ) )
win-01 :arg0 person_name_0 :duration ( couple :op1 ( temporal-quantity temporal-quantity_num_0 :unit day ) )
multi-sentence :snt1 ( recognize-02 :arg0 it :arg1 that ) :snt2 ( and :op1 ( possible-01 :mode interrogative :arg1 ( better :arg0 it ) ) :op2 ( good :degree more :domain ( formulate-01 :arg1 it ) ) ) :snt3 ( contrast-01 :arg1 ( possible-01 :mode interrogative :arg1 ( formulate :arg1 it ) ) :arg2 ( consider-01 :arg1 ( just-02 :polarity - :arg1 i :prep-in ( fact :arg1-of ( make-01 :arg0 i ) ) ) ) )
opponent :arg0 ( location_name_0 :arg1-of defeat-01 :arg1-of ( celtic :arg2 ( stage :mod this ) ) ) :arg1 ( person :quant num_0 :arg0-of play-01 :arg1-of ( include-91 :arg2 ( person :quant num_0 :arg0-of play-01 :mod world-class ) ) ) :arg2 ( field :mod this ) :time ( early :op1 ( early :op1 ( date-entity decade_date-entity_0 ) ) ) :arg1-of ( cause-01 :arg0 ( and :op1 ( person :quant num_1 :arg0-of defend-01 ) :op2 ( person :quant num_1 :arg0-of defend-01 ) :op3 ( person :quant num_2 :arg0-of ( have-org-role-91 :arg2 midfielders ) ) ) :location field )
sign-02 :arg0 ( and :op1 person_name_0 :op2 ( person_name_2 :arg0-of ( have-org-role-91 :arg2 akim ) ) ) :arg1 ( agree-01 :arg1 cooperate-01 ) :time ( date-entity month_date-entity_0 day_date-entity_0 )
contrast-01 :arg1 ( possible-01 :arg1 ( see-01 :arg0 i :arg1 ( ball :mod only :arg1-of ( fly-01 :time ( direction :mod another ) ) ) ) ) :arg2 ( see-01 :polarity - :arg0 i :arg1 ( drive-01 :arg0 you :path ( under :op1 person_name_1 ) ) )
offer-01 :arg1 ( set-02 :arg0 ( set :name ( name :op1 widest :op2 widest ) ) :arg1 ( system :mod safe-01 :arg1-of activity-06 ) :manner precise :location organization_name_0 )
offer-01 :arg1 ( cx-5 :arg0 organization_name_0 :arg1 ( system :mod safe-01 :arg1-of activity-06 ) )
say-01 :arg0 ( person :arg0-of ( represent-01 :arg1 country_name_0 :time ( early :degree more ) ) :arg0-of ( represent-01 :arg1 ( person_name_1 :arg0-of ( have-org-role-91 :arg2 president :time former ) ) ) :arg0-of ( have-org-role-91 :arg1 country :arg2 president :time former ) ) :arg1 ( contrast-01 :arg1 ( change-01 :polarity - :arg0 ( and :op1 openness :op2 location_name_3 ) :arg1 ( position :poss and :topic negotiate-01 ) :manner fundamental ) :arg2 ( become-01 :arg1 ( tone :poss dialogue-01 ) :arg2 ( positive :degree more ) ) ) :time ( early :degree more :time ( early :degree more ) )
say-01 :arg0 ( thing :arg1-of report-01 ) :arg1 ( get-01 :arg0 person_name_0 :arg1 ( injure-01 :arg1 ( and :op1 head :op2 trunk :op3 hips ) :mod stupid :quant several ) )
keep-01 :arg0 person_name_0 :arg1 amusement-park_name_0 :time ( before :op1 final )
expect-01 :arg1 ( charge-05 :arg1 he :arg2 ( leave-11 :arg0 he :arg1 scene ) :arg0-of ( violate-01 :arg1 ( violate-01 :arg1 ( rule :mod traffic :mod other ) ) ) )
say-01 :arg0 ( person_name_0 :arg0-of ( have-org-role-91 :arg1 ministry :arg2 director ) :arg0-of ( have-org-role-91 :arg1 ministry :arg2 director ) ) :arg1 ( develop-02 :arg0 ministry :arg1 ( procedure :topic rehabilitation ) :beneficiary ( person :arg0-of develop-02 ) )
and :op1 ( come-01 :arg1 we :arg4 ( fact :topic ( possible-01 :arg1 ( move-01 :arg0 ( bank :mod main ) :arg2 thing ) ) ) :ord ( ordinal-entity ordinal-entity_num_0 ) ) :op2 ( say-01 :arg0 i :arg1 ( person_name_0 :mod ( fellow :mod senior ) :location ( economics :mod organization_name_1 ) ) ) :ord ( ordinal-entity ordinal-entity_num_0 )
tell-01 :arg1 ( talk-01 :polarity - :arg0 person :arg1 it :time ever ) :arg2 ( person :arg0-of ( have-org-role-91 :arg1 person_name_0 :arg2 minister ) )
and :op1 ( hard-02 :arg1 it :degree very :beneficiary i ) :op2 ( sorry-01 :arg1 i :degree very )
multi-sentence :snt1 ( cause-01 :arg1 ( expertise :domain ( expertise :mod such ) :time always :mod such ) ) :snt2 ( show-01 :arg0 they :arg1 ( need-01 :mode interrogative :arg1 ( change-01 :arg1 sex :accompanier surgery-01 ) ) :mod just )
help-01 :arg0 ( person :arg0-of sponsor-01 ) :arg1 ( celebrate-02 :arg0 person :arg1 ( day :mod city ) )
and :op1 ( provide-01 :arg0 ( person :arg0-of participate-01 :mod each ) :arg1 ( and :op1 login :op2 password ) :arg2 ( access-01 :arg0 person :arg1 site ) ) :op2 ( possible-01 :arg1 ( set-02 :arg0 person :arg1 ( evaluate-01 :arg0 person ) :arg2 ( criteria :purpose ( direction :mod ( functional :mod each ) ) ) ) )
word-01 :arg0 organization_name_0 :arg1 ( write-01 :arg0 ( person :mod country_name_1 ) :arg1 ( hieroglyphs :mod country ) ) :manner specific-02
condition :topic ( create-01 :arg1 news )
say-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg2 scientist ) ) :arg1 ( demonstrate-01 :arg0 worm :arg1 ( capable-01 :arg1 ( techniques :mod new :arg1-of ( call-01 :arg2 ( name :op1 '' :op2 monogenetic :op3 monogenetic ) ) ) :arg2 ( essence :arg1-of ( use-01 :arg2 ( and :op1 ( cell :mod certain ) :op2 ( cell :mod heart ) :op3 muscle ) :location ( outside :op1 body ) ) ) ) )
construct-01 :arg1 ( house :beneficiary ( person :arg1-of ( employ-01 :arg0 ( sector :arg1-of public-02 ) ) ) ) :prep-in perspective
woe :poss ( and :op1 ( security :mod agriculture ) :op2 ( security :mod food ) ) :arg1-of key-02
arrive-01 :arg1 ( refugee :quant ( more-than :op1 num_0 ) ) :time ( since :op1 ( begin-01 :arg1 ( september :location country ) :time already ) )
and :op1 ( speak-01 :arg0 i :location ( game :mod military :mod world :arg0-of ( take-01 :arg1 ( company_name_1 :location country ) ) ) ) :op2 ( think-01 :arg0 i :arg1 rest :time then )
benefit-01 :polarity - :arg0 ( lend-01 :arg2 ( percentage-entity percentage-entity_num_0 ) ) :arg1 anyone
topic :mod some :arg1-of ( opine-01 :arg0 you ) :arg1-of ( opine-01 :arg0 you ) :arg1-of ( opine-01 :arg0 you ) :arg1-of ( opine-01 :arg0 you )
topic :mode interrogative :mod any :arg1-of ( discuss-01 :arg0 you :arg1-of ( think-01 :arg0 ( world :mod whole ) ) )
multi-sentence :snt1 ( state-01 :arg0 ( person_name_0 :arg0-of ( have-org-role-91 :arg2 ceo ) ) :arg1 ( and :op1 ( person :arg0-of ( have-org-role-91 :arg2 chairman ) ) :op2 ( person :arg0-of ( have-org-role-91 :arg2 ceo ) ) ) ) :snt2 ( and :op1 ( work-01 :arg0 person :arg1 ( take-01 :arg0 person :arg1 ( account :mod economy ) ) ) :op2 ( compare-01 :arg1 ( condition :mod economy ) :arg2 ( and :op1 forecast-01 :op2 ( trade-01 :arg0 world ) :mod especially ) ) )
call-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg1 country_name_0 :arg2 president ) ) :arg1 ( cause :arg0-of ( cause-01 :arg1 ( animosity :arg1 world-region_name_1 ) ) ) :arg2 country_name_2
take-01 :arg1 rider :arg3 organization_name_0 :manner ( helicopter :mod serious ) :time ( after :op1 ( car :poss he :location peninsula_name_1 :time ( morning :mod saturday ) ) )
admit-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg1 state :arg2 ( governor :mod state ) ) ) :arg1 ( admit-01 :arg0 ( person_name_1 :arg0-of ( have-org-role-91 :arg1 country :arg3 speak-01 ) ) :arg1 ( destabilize-01 :arg0 country :arg1 ( situation :location world-region_name_3 ) :arg2 ( wave-04 :arg1 ( come-01 :arg1 refugee :arg4 island_name_2 ) ) ) :manner deliberate )
get-01 :arg0 he :arg1 ( feedback :mod enthusiastically :quant ( multiple :op1 ( mass-quantity mass-quantity_num_0 :unit ton ) ) ) :arg2 fan
state-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg1 ( government-organization_name_0 :location country_name_1 ) :arg2 member ) ) :arg1 ( and :op1 ( question-03 :arg0 ( person :arg0-of ( have-org-role-91 :arg2 ( minister :mod prime ) ) ) :arg1 ( cause :arg0-of ( cause-01 :arg1 ( confront-01 :arg0 person ) ) ) ) :op2 ( and :op1 ( answer-01 :arg0 person :arg1 ( thing :arg1-of answer-01 :mod ingenious ) :mod also ) :op2 ( exchange-01 :arg0 person :arg1 ( thing :arg1-of ( answer-01 :arg2 person ) ) :mod also ) :op3 ( exchange-01 :arg0 person :arg1 ( question-01 :mod serious :example ( and :op1 poverty :op2 inequality :op3 problem ) :time ( before :op1 ( person :mod young ) ) ) ) ) )
multi-sentence :snt1 ( and :mode interrogative :op1 ( be-located-at-91 :arg1 ( game :mod this ) :arg2 threshold ) :op2 ( take-01 :mode imperative :arg0 you :arg1 ( thing :arg2-of ( match-01 :arg1 ( league :location continent_name_1 ) ) ) ) ) :snt2 ( and :mode interrogative :op1 ( try-01 :mode interrogative :arg0 we :arg1 ( prepare-02 :arg1 we :arg2 ( gain-02 :arg0 we :arg1 win-01 ) :manner ( well :degree very ) ) ) )
announce-01 :arg1 ( thing :arg1-of decide-01 ) :location ( cet :quant num_0 :location thursday )
contrast-01 :arg2 ( and :op1 ( believe-01 :arg0 person_name_0 :arg1 ( person :arg0-of ( play-01 :arg1 person ) ) ) :op2 ( give-01 :arg0 person :arg1 ( opportunity :mod another :purpose ( return-02 :arg0 person :arg1 punt ) ) :arg2 person_name_1 ) :op3 ( engage-01 :arg1 person :time ( after :op1 ( injure-01 :arg1 person ) ) ) )
become-01 :arg1 ( resource :mod credit ) :arg2 ( access-01 :arg1 resource :degree more )
play-01 :arg0 he :mod cricket :mod unpredictable :arg1-of ( see-01 :arg0 we :time ( season :mod this ) ) :arg1-of ( see-01 :arg0 we :time ( season :mod this ) :time ( earn-01 :arg0 he :arg1 ( match-03 :quant num_0 :arg1-of ( match-01 :arg2 ( platform :mod bridge :arg0-of ( oppose-01 :arg1 bridge ) ) :time already ) ) ) )
contrast-01 :arg2 ( give-01 :arg0 ( and :op1 person_name_0 :op2 person_name_1 :op3 person_name_2 ) :arg1 ( hint :topic company ) :time ( meet-03 :arg0 we :arg1 ( and :op1 person :op2 person_name_2 :op3 person_name_2 ) :time ( day :mod that ) ) :time ( meet-03 :arg0 we :arg1 ( girl :quant num_0 ) ) )
reach-01 :arg1 ( attend-02 :arg1 it :mod new ) :time then
warn-01 :arg0 ( person_name_0 :arg0-of ( have-org-role-91 :arg1 country_name_1 :arg2 ( secretary :mod state ) ) ) :arg1 ( conflict-01 :arg0 ( person_name_4 :arg0-of ( have-org-role-91 :arg1 country :arg2 president ) ) :arg1 conflict-01 :location country ) :time ( converse-01 :arg0 ( person :arg0-of ( head-01 :arg1 ( person :arg0-of ( have-org-role-91 :arg1 country :arg2 ( minister :mod foreign ) ) ) :arg2 ( minister :mod foreign ) ) ) :arg1 ( support-01 :arg0 country_name_3 :arg1 ( person_name_4 :arg0-of ( have-org-role-91 :arg1 country :arg2 president ) ) ) )
look-02 :arg0 situation :arg1 ( differ-02 :arg1 ( gap :mod income ) :arg2 ( and :op1 ( develop-02 :arg1 economy ) :op2 ( rise-01 :arg1 gap ) ) ) :prep-in fact
contrast-01 :arg1 ( know-01 :polarity - :arg0 i :arg1 ( thing :manner-of ( subsidize-01 :arg1 ( theory :mod economy ) ) ) ) :arg2 ( hope-01 :arg0 i :arg1 ( justify-01 :arg1 ( measure-01 :mod this ) ) )
multi-sentence :snt1 ( cause-01 :arg1 ( try-01 :arg0 you :arg1 ( do-02 :arg0 you :arg1 ( something :arg1-of differ-02 ) ) :condition ( try-01 :arg0 you :arg1 ( do-02 :arg0 you :arg1 ( something :arg1-of differ-02 ) ) ) ) ) :snt2 ( example :quant num_0 :arg1-of ( come-01 :arg4 ( mind :poss i ) :mod actual :arg1-of ( say-01 :arg0 person_name_0 ) ) )
confirm-01 :arg0 person_name_0 :arg1 ( level :poss it )
indicate-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg2 ( person :arg1-of expert-01 ) ) ) :arg1 ( give-01 :arg0 person_name_0 :arg1 ( popularity :poss person_name_1 :arg1-of ( grow-01 :arg2 ( process-02 :arg1 nominate-01 ) ) :quant none ) :arg2 person :time ( time :mod this ) :location ( time :mod this ) )
and :op1 ( gather-03 :location location_name_0 :purpose ( meet-03 :mod amphibious ) ) :op2 ( decide-01 :arg0 organization_name_1 :arg1 ( want-01 :polarity - :arg0 person :arg1 they :mod anyway :condition ( destroy-01 :arg0 person :arg1 ( secure-02 :arg1 society ) ) ) ) :location location_name_0
or :op2 ( strolling :arg0 ( animal :mod ( small :mod such ) ) :arg1 street :mod just )
say-01 :arg0 ( organization_name_0 :arg0-of ( have-org-role-91 :arg1 movement-07 ) ) :arg1 ( group :consist-of love-01 :domain organization )
friendship :location ( heart :part-of ( battle-01 :mod this ) ) :purpose ( take-on-09 :arg0 friendship :arg1 ( challenge-01 :arg2 this ) )
note-01 :mode imperative :arg0 note :arg1 ( person :arg0-of play-01 :arg1-of ( connect-01 :arg2 ( destabilize-01 :arg1 ( shoulder :part-of ( shoulder :mod right ) ) ) ) :mod right )
and :op1 ( remove-01 :arg0 company_name_0 :arg1 ( comment-01 :arg0 company ) ) :op2 ( disparaging :arg0 company :arg1 ( and :op1 ( person :arg0-of use-01 ) :op2 refugee ) )
contrast-01 :arg1 ( good :polarity - :domain it :mod especially ) :arg2 ( fall-01 :arg1 it :arg4 ( point :arg1-of need-01 ) :arg1-of direct-02 )
form :mod ( school :mod country_name_0 ) :arg1-of possible-01 :mod ( form :mod ( school :mod country_name_2 ) ) :arg1-of possible-01 :mod only :arg1-of ( cause-01 :arg0 ( and :op1 ( bear-02 :arg1 girl ) :op2 ( complete-01 :arg0 girl :arg1 school ) ) )
contrast-01 :arg1 ( play-01 :arg0 we :mod only :time ( since :op1 then ) ) :arg2 ( level :polarity - :domain it )
(-(
say-01 :arg0 ( thing :arg1-of state-01 ) :arg1 ( make-01 :arg1 ( list :consist-of ( sector :part-of economy ) ) )
show-01 :arg0 ( exhibit-01 :arg1 ( and :op1 ( carpet :mod ( culture :mod nation ) :poss ( people :location ( and :op1 location_name_0 :op2 ( people :mod ( people :mod nation ) ) ) ) ) ) ) :arg1 ( temporal-quantity temporal-quantity_num_0 :unit hour :duration ( temporal-quantity temporal-quantity_num_2 :unit hour ) :duration ( temporal-quantity temporal-quantity_num_2 :unit hour ) ) :op2 ( show-01 :arg0 exhibit-01 :arg1 ( drugs elimination museum :duration ( temporal-quantity temporal-quantity_num_2 :unit hour ) ) :duration ( temporal-quantity temporal-quantity_num_2 :unit hour ) ) :op3 ( show-01 :arg0 ( exhibit-01 :arg1 historical-musical ) :arg1 ( temporal-quantity temporal-quantity_num_2 :unit hour ) :duration ( temporal-quantity temporal-quantity_num_2 :unit hour ) )
have-condition-91 :arg1 ( professional :domain he ) :arg2 ( smiled :domain he )
have-03 :arg0 i :arg1 ( memory :arg1-of ( associate-01 :arg2 country_name_0 ) :mod only )
and :op1 ( go-02 :mode imperative :arg0 we :arg4 dialogue-01 :direction back ) :op2 ( right-05 :arg1 we :arg2 ( practice-01 :arg0 we :arg1 ( communicate-01 :mod international ) ) )
mix-01 :arg1 ( teenager :arg3-of ( mix-01 :arg2 ( liquid :mod liquid ) ) ) :arg2 ( drink-01 :arg0 teenager :arg1-of ( strong-02 :degree more ) ) :arg1-of report-01
reportedly :arg0 teenager :arg1 ( liquid :arg1-of ( mix-01 :degree mix-01 ) ) :purpose ( get-01 :arg0 teenager :arg1 ( drink-01 :arg1-of strong-02 ) ) :arg1-of report-01
promote-01 :arg0 we :arg1 reform-01 :direction forward
and :op1 ( problem :time current :domain ( and :op1 ( situation :ord ( ordinal-entity ordinal-entity_num_0 ) ) :op2 ( problem :ord ( ordinal-entity ordinal-entity_num_0 ) ) ) ) :op2 ( make-01 :arg0 ( and :op1 ( problem :ord ( ordinal-entity ordinal-entity_num_0 ) ) :op2 ( problem :ord ( ordinal-entity ordinal-entity_num_0 ) ) ) :arg1 ( rate :mod ( interest :arg1-of increase-01 ) ) :purpose ( receive-01 :arg0 rate :arg1 ( income :mod real ) ) )
and :op1 ( turns :arg0 person_name_0 :arg1 ball :arg2 ball ) :op2 ( promise-01 :arg0 person :arg2 balls ) :op3 ( represent-01 :arg0 person :arg1 ( option :mod aggressive :poss you ) :arg1-of ( know-01 :polarity - ) )
bear-02 :arg1 girl :location ( clinics :poss city_name_0 :quant ( multiple :op1 num_0 ) )
define-01 :arg1 ( character :mod each ) :arg1-of ( contrast-01 :arg2 ( define-01 :arg1 ( personality :arg0-of ( communications :arg1 communicate-01 :arg2 friend ) ) ) )
contrast-01 :arg2 ( and :op1 ( go-01 :arg1 it :arg4 plateau :time now ) :op2 ( possible-01 :arg1 ( see-01 :arg0 you :arg1 ( decline-01 :arg1 ( grow-01 :arg1 ( grow-01 :arg1 -lrb- ) ) ) ) ) )
say-01 :arg0 company :arg1 ( and :op1 ( begin-01 :arg0 company :arg1 ( conduct-01 :arg0 company :arg1 ( interview-01 :arg1 ( person :arg0-of ( have-org-role-91 :arg2 personnel ) ) :time ( month :mod this ) ) ) ) :op2 ( increase-01 :arg0 company :arg1 ( number :quant-of ( person :arg0-of ( have-org-role-91 :arg1 company_name_1 :arg2 personnel ) ) ) :arg3 company_name_1 ) )
multi-sentence :snt1 ( googl :arg0 organization_name_0 ) :snt2 ( -rrb- :mode imperative :arg0 you :arg1 ( and :op1 ( declare-02 :arg0 ( campaign-01 :arg1 ( campaign-01 :arg1 ( donate-01 :arg0 ( country :mod humanitarian ) ) ) ) :arg1 ( monetary-quantity monetary-quantity_num_0 :unit ( dollar :mod renminbi ) :arg1-of ( help-01 :arg2 ( organization :mod humanitarian ) ) :arg0-of ( help-01 :arg1 ( take-over-12 :arg0 ( and :op1 war :op2 ( country :mod poor ) ) ) ) :arg2 ( country :mod humanitarian ) ) ) ) )
send-01 :arg0 police :arg1 ( measure-02 :arg1 ( respond-01 :arg0 police :arg1 ( action :mod aggressive :topic ( and :op1 ( person :arg0-of use-01 ) :op2 ( attempt-01 :arg0 person :arg1 ( violate-01 :arg0 person :arg1 border ) ) ) ) ) ) :arg2 ( scene :poss clashes )
and :op1 ( call-01 :polarity - :arg0 ( person :arg0-of ( have-org-role-91 :arg1 ( organization_name_0 :part-of country_name_1 ) :arg2 member ) ) :arg1 ( rate-entity-91 :arg1 num_0 :arg2 ( temporal-quantity temporal-quantity_num_0 :unit hour ) ) :time ( lose-02 :arg0 person :arg1 consciousness ) ) :op2 ( wait-01 :arg1 person :arg2 ( temporal-quantity temporal-quantity_num_1 :unit hour :time ( before :op1 ( deliver-01 :arg0 person :arg1 person :arg2 hospital ) ) ) :mod still )
cause-01 :arg1 ( state-01 :arg0 person_name_0 :arg1 ( engage-01 :arg1 ( person :arg0-of ( specialize-01 :arg1 ( network :mod social ) ) ) :arg2 ( create-01 :arg1 ( group :arg1-of special-02 :consist-of moderators ) ) :time present ) :time present )
change-01 :arg1 market :manner dramatic :time ( before :op1 now :duration ( approximately :op1 ( temporal-quantity temporal-quantity_num_0 :unit year ) ) ) :frequency ( rate-entity-91 :arg1 ( more-than :op1 ( temporal-quantity temporal-quantity_num_1 :unit year ) ) :arg2 ( temporal-quantity temporal-quantity_num_1 :unit year ) ) :arg1-of ( cause-01 :arg0 ( and :op1 ( grow-01 :arg1 market :manner ( steady :degree fair ) ) :op2 ( remain-01 :arg1 market :arg4 ( normal :degree fair ) :time ( after :op1 ( -lrb- :arg0 ( and :op1 person_name_0 :op2 ( person :arg0-of ( specialize-01 :arg1 ( strategy :mod ( trade-01 :arg1 stock ) ) ) ) :op3 ( person :arg0-of ( specialize-01 :arg1 ( strategy :mod ( trade-01 :arg1 stock ) ) ) :location organization_name_1 ) :time recent ) ) ) ) ) )
multi-sentence :snt1 ( learn-01 :arg0 you :arg1 ( thing :domain it ) ) :snt2 ( look-02 :arg0 you :arg1 ( resemble-01 :arg1 ( man :arg1-of ( like-01 :arg0 i :arg1-of ( like-01 :polarity - :arg0 i ) ) ) :arg2 ( die-01 :arg1 man ) ) )
exemplify-01 :arg0 ( exemplify-01 :arg0 organization_name_0 :mod such :mod such ) :mod ( well :mode expressive ) :mod ( well :mode expressive )
contrast-01 :arg1 ( provide-01 :arg0 ( visit-01 :arg0 ( person_name_0 :arg0-of ( have-org-role-91 :arg1 country_name_1 :arg2 president ) ) ) :arg1 ( opportunity :purpose ( expand-01 :arg0 person :arg1 ( cooperate-01 :arg0 ( and :op1 country :op2 country_name_2 ) :arg2 ( issue-02 :arg0 ( interest-01 :arg1 country :arg2 ( side :mod both ) ) :mod bilateral :mod bilateral ) ) ) ) ) :arg2 ( allow-01 :arg0 visit-01 :arg1 ( consider-02 :arg0 ( and :op1 ( person :arg0-of ( have-org-role-91 :arg1 country_name_3 :arg2 president ) ) :op2 ( person :arg0-of ( have-org-role-91 :arg1 country :arg2 president ) ) ) :arg1 ( consider-02 :arg0 and :arg1 ( topic :mod controversy ) ) ) :mod also )
say-01 :arg0 he :arg1 ( harmful-02 :arg0 ( cigarette :mod electronic ) :degree ( less :compared-to ( smoke-02 :arg0 tobacco ) ) )
help-01 :arg0 report-01 :arg1 ( prepare-01 :arg0 report-01 :arg1 ( and :op1 ( person_name_1 :arg0-of ( have-org-role-91 :arg2 head-of-state ) ) :op2 ( person :arg0-of ( have-org-role-91 :arg2 location_name_3 ) ) :op3 person_name_4 ) :location city_name_5 )
pleased :arg0 i :arg1 ( and :op1 goal :op2 ( score-01 :arg1 we :arg2 num_0 ) )
multi-sentence :snt1 ( and :op1 ( think-01 :arg0 i :arg1 ( think-01 :arg0 someone :arg1 ( and :op1 ( think-01 :arg0 someone :arg1 ( flows :arg0 someone ) ) :op2 ( know-01 :arg0 someone :arg1 ( flows :arg1 refugee ) ) ) ) ) :op2 ( and :op1 ( fortunate-01 :polarity - :arg1 ( flee-05 :arg0 someone ) :arg2 ( die-01 :arg1 person ) ) :op2 ( flee-05 :arg0 ( person :mod country_name_0 ) :arg2 die-01 ) ) ) :snt2 ( add-01 :arg0 he )
tell-01 :arg0 ( person_name_0 :arg0-of ( have-org-role-91 :arg1 ( police :mod criminal-03 ) :arg2 ( chief :mod deputy :topic investigate-01 ) ) :arg0-of ( have-org-role-91 :arg1 police :arg2 ( chief :mod deputy :topic investigate-01 ) ) :arg0-of ( have-org-role-91 :arg1 police :arg2 ( chief :mod deputy :topic investigate-01 ) ) :arg0-of ( have-org-role-91 :arg1 police :arg2 ( chief :mod deputy ) ) :arg0-of ( have-org-role-91 :arg1 police :arg2 ( chief :mod deputy ) ) :arg0-of ( have-org-role-91 :arg1 police :arg2 ( chief :mod deputy ) ) :arg0-of ( have-org-role-91 :arg1 police :arg2 ( chief :mod deputy ) ) :arg0-of ( have-org-role-91 :arg1 police :arg2 ( chief :mod deputy ) ) :arg0-of ( have-org-role-91 :arg1 police :arg2 ( chief :mod deputy ) ) :arg0-of ( have-org-role-91 :arg1 police :arg2 ( chief :mod deputy ) ) :arg0-of ( have-org-role-91 :arg1 police :arg2 chief ) :arg0-of ( have-org-role-91 :arg1 police :arg2 chief ) :arg0-of ( have-org-role-91 :arg1 police :arg2 chief ) )
expect-01 :arg1 ( and :op1 ( reduce-01 :arg0 organization_name_0 :arg1 ( job :quant num_0 ) :arg3 ( job :quant num_1 :part-of ( program :mod malicious :poss organization ) ) ) :op2 ( reduce-01 :arg1 ( reduce-01 :arg1 ( deliver-01 :arg1 service ) ) ) )
choose-01 :arg0 i :arg1 ( look-01 :arg0 i :arg1 it :manner ( emotion :polarity - ) )
multi-sentence :snt1 ( cause-01 :arg0 ( ; :polarity - :arg1 ( protocols :mod other ) ) ) :snt2 ( except :arg0 organization_name_0 :mod apparent :arg2-of ( except-01 :arg1 ( sign-01 :arg0 ( person :mod country_name_1 ) ) ) )
invest-01 :arg0 ( person :arg0-of invest-01 :mod potential ) :arg2 ( invest-01 :arg0 person :arg2 ( project :mod ( launch-01 :arg1 ( project :quant num_0 :mod ruble ) ) ) ) :mod potential
contrast-01 :arg1 ( close-10 :arg1 we :arg2 ( thing :quant num_0 ) :degree very ) :arg2 ( realist :arg0 ( side :mod other ) :arg1 period )
show-01 :arg0 poll-01 :arg1 ( enjoy-01 :arg0 person_name_0 :arg1 ( support-01 :arg0 person :arg1 ( group :consist-of ( person :arg0-of ( vote-01 :arg1 ( education :arg1-of ( high-02 :degree more ) ) ) ) ) ) :location ( group :consist-of ( person :arg0-of ( vote-01 :arg1 ( education :arg1-of ( high-02 :degree more ) ) ) ) ) ) :mod also
unites :arg0 company :arg1 ( and :op1 ( region :mod country-region_name_0 ) :op2 ( region :mod email ) :op3 ( enlarged :location ( region :arg0-of break-away-14 ) ) ) :arg2 ( and :op1 ( region :mod email ) :op2 ( region :mod spiritual ) :op3 ( lab :location east ) )
work-01 :arg0 ( and :op1 ( person :arg0-of ( have-org-role-91 :arg2 head-of-state ) ) :op2 ( person :arg1-of settle-03 ) ) :arg2-of ( include-01 :arg1 ( region :location location_name_0 ) )
turn-down-05 :arg0 ( study :arg1-of ( carry-out-03 :arg0 ( and :op1 ( person_name_0 :arg0-of ( have-org-role-91 :arg1 organization_name_1 :arg2 professor ) ) :op2 ( person :arg0-of ( have-org-role-91 :arg1 ( city_name_2 :location city_name_2 ) :arg2 professor ) ) :op3 ( person :arg0-of ( have-org-role-91 :arg1 organization :arg2 professor ) ) :op4 ( person :arg0-of ( have-org-role-91 :arg1 organization :arg2 professor ) ) :op5 ( person :arg0-of ( have-org-role-91 :arg1 organization :arg2 professor ) ) ) :arg0-of ( have-org-role-91 :arg1 organization :arg2 professor ) ) ) :arg1 ( affect-01 :arg0 ( diet :mod healthy :consist-of woman ) :arg1 ( expression :consist-of ( person :arg0-of ( have-rel-role-91 :arg1 woman :arg2 child ) ) ) :arg2 ( develop-02 :arg0 woman :arg1 ( tumours :poss woman ) ) :mod actual ) :medium ( study-01 :time recent )
find-02 :arg0 ( study :arg1-of ( conduct-01 :arg0 ( person_name_0 :location ( organization_name_1 :location state_name_2 ) :arg0-of ( have-org-role-91 :arg1 ( organization_name_1 :location state_name_2 ) :arg2 professor ) ) ) ) :arg1 ( affect-01 :arg0 ( diet :mod healthy :consist-of woman ) :arg1 ( expression :consist-of ( and :op1 ( person :arg0-of ( have-rel-role-91 :arg1 woman :arg2 child ) ) :op2 ( develop-02 :arg1 ( tumors :poss woman ) ) ) ) :mod actual ) :medium ( study-01 :time recent :arg1-of ( conduct-01 :arg0 ( person_name_3 :location city_name_4 ) ) )
say-01 :arg0 person_name_0 :arg1 ( recommend-01 :arg1 ( obligate-01 :polarity - :arg1 organization_name_1 :arg2 ( leave-11 :arg0 organization :arg1 city_name_4 :location ( range :location province_name_3 ) ) ) ) :time today
say-01 :arg0 ( person_name_0 :arg0-of ( have-org-role-91 :arg2 king ) ) :arg1 ( recommend-01 :arg1 ( leave-11 :polarity - :arg0 group :arg1 ( range :mod arrow :arg1-of ( raise-01 :arg2 solution ) ) ) ) :time today
derbent :arg1 ( city :mod only :location country_name_0 ) :time ( since :op1 ( time :mod soccer ) )
be-located-at-91 :arg1 ( person_name_0 :mod square ) :arg2 basement :location ( room :location ( room :part-of library ) :mod back )
multi-sentence :snt1 ( stand-01 :arg1 ( and :op1 ( person :arg0-of ( produce-01 :arg1 film ) ) :op2 ( person :arg0-of ( produce-01 :arg1 film ) ) ) :arg2 ( something :beneficiary film ) ) :snt2 ( and :op1 ( oppose-01 :arg0 ( and :op1 person_name_0 :op2 person_name_1 ) :arg1 person_name_2 :manner sharp ) :op2 ( say-01 :arg0 person :arg1 ( possible-01 :arg1 ( get-01 :polarity - :arg0 we :arg1 ( thing :arg1-of ( want-01 :arg0 we ) ) ) ) ) )
and :op1 ( favour :arg0 ( and :op1 person_name_0 :op2 person_name_1 ) :arg1 ( person :arg0-of ( produce-01 :arg1 film ) ) ) :op2 ( oppose-01 :arg0 person :arg1 person_name_2 :arg1-of strong-02 ) :op3 ( say-01 :arg0 person :arg1 ( get-01 :polarity - :arg0 we :arg1 ( thing :arg1-of ( want-01 :arg0 person ) ) ) :arg1-of strong-02 :time end-01 )
sell-01 :arg0 company :arg1 ( share :mod new ) :arg3 ( rate-entity-91 :arg1 ( monetary-quantity monetary-quantity_num_0 :unit cent ) :arg2 ( volume-quantity volume-quantity_num_1 :unit gallon ) ) :arg4 ( monetary-quantity :arg2-of ( price-01 :arg1 ( trade-01 :arg1 trade-01 ) ) )
say-01 :arg0 ( person :quant ( multiple :op1 num_0 :mod only ) :arg1-of ( include-91 :arg2 ( person :quant num_1 ) ) ) :arg1 ( disappoint-01 :arg1 person :arg1-of disappoint-01 :condition ( become-01 :arg1 person :arg2 candidate ) )
and :op2 ( have-concession-91 :arg1 ( anger-01 :arg0 ( same-01 :arg1 i :degree more ) :arg1 i :degree more ) :arg2 ( and :op1 ( do-02 :polarity - :arg0 i :arg1 ( thing :arg1-of ( same-01 :arg2 ( thing :arg1-of ( same-01 :arg2 ( thing :arg1-of ( same-01 :arg2 ( thing :arg1-of ( same-01 :arg2 ( thing :arg1-of ( same-01 :arg2 ( thing :arg1-of ( same-01 :arg2 ( thing :arg1-of ( same-01 :arg2 ( thing :arg1-of ( same-01 :arg2 ( thing :arg1-of ( same-01 :arg2 ( thing :quant num_0 ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) :op2 ( same-01 :arg1 thing :degree more ) ) )
purchase-01 :arg0 ( instrument :arg1-of ( include-91 :arg2 ( instrument :mod young :mod extreme ) ) ) :ord ( ordinal-entity ordinal-entity_num_0 )
use-01 :arg0 ( or :op1 ( surgery-01 :arg1 publication_name_1 ) :op2 ( surgery-01 :arg2 bariatric ) ) :arg1 ( technique :mod variety ) :purpose ( reduce-01 :arg0 or :arg1 ( size :poss monkey ) )
throw-01 :arg1 ( lack-01 :arg1 ( story :mod such ) ) :arg2 eye :arg1-of ( cause-01 :arg0 ( consider-01 :arg1 ( desperate :domain ( demand-01 :arg0 man :arg1 ( thing :arg1-of ( demand-01 :arg0 man ) ) :time ( after :op1 now :quant ( more-than :op1 ( temporal-quantity temporal-quantity_num_0 :unit year ) ) ) ) ) :mod especially ) :mod especially )
possible-01 :polarity - :arg1 ( accept-01 :arg0 ( candidate :quant none :arg1-of ( include-91 :arg2 ( or :op1 ( candidate :mod democracy ) :op2 ( candidate :mod potential ) ) ) ) :arg1 ( person :arg0-of vote-01 :mod primary :mod this ) ) :time ( month :mod last )
and :op1 ( and :op1 ( small :degree more :domain organization_name_0 ) :op2 ( focus-01 :arg0 organization :arg2 ( and :op1 organization_name_1 :op2 business ) ) :degree more :compared-to ( and :op1 current :op2 ( portfolio :arg1 business ) ) ) :op2 ( help-01 :arg0 organization :arg1 ( trend :mod company ) :arg2 ( style :mod new :mod business ) ) :arg1-of ( say-01 :arg0 person_name_2 )
multi-sentence :snt1 ( allow-01 :arg1 ( free-01 :arg1 rate-01 :arg2 ( bail-out-02 :arg1 he ) :topic ( condition :topic ( and :op1 ( surrenders :arg0 he :arg1 ( passport :mod country_name_0 :mod country_name_1 ) ) :op2 ( adapt-01 :arg1 he :arg2 ( passport :mod serbian ) ) ) ) ) ) :snt2 ( adapt-01 :arg1 ( person :quant num_0 ) :arg2 ( p.m. :quant num_0 ) :time ( until :op1 morning ) )
say-01 :arg0 police :arg1 ( go-02 :polarity - :arg0 he :arg4 jail ) :arg1-of ( say-01 :arg0 police )
multi-sentence :snt1 ( detail-01 :mode imperative :arg0 you :arg1 ( doubt-01 :arg1 ( help-01 :arg0 country_name_0 :arg1 ( read-01 :arg0 country_name_1 :arg1 ( material :poss organization_name_2 ) :arg2 ( material :poss organization_name_2 ) ) ) :degree more ) :degree more ) :snt2 ( '' :mode expressive )
multi-sentence :snt1 ( comment-01 :arg0 ( person_name_0 :arg0-of ( have-org-role-91 :arg2 minister ) ) :arg1 ( figure :mod ( last :degree very ) ) ) :snt2 ( note-01 :arg0 ( plan-01 :arg0 ( government-organization :arg0-of govern-01 ) :arg1-of ( range-01 :arg2 long-03 ) ) :arg1 ( strengthen-01 :arg1 economy ) )
contrast-01 :arg1 ( tell-01 :polarity - :arg0 ( edition :mod country_name_0 :poss ( agency :mod news ) ) :arg1 detail ) :arg2 ( say-01 :arg0 edition :arg1 ( ban-01 :arg0 ( person :arg0-of ( lead-02 :arg1 company ) ) :arg1 ( leave-11 :arg0 person :arg1 country ) ) )
and :op1 ( possible-01 :polarity - :arg1 ( pass-01 :arg0 ( and :op1 ( person :arg0-of ( have-org-role-91 :arg2 deputy ) ) :op2 ( person :arg0-of observe-01 ) :op3 ( person :arg0-of observe-01 ) ) :arg1 ( and :op1 ( person :arg0-of observe-01 ) :op2 ( person :arg0-of observe-01 ) ) ) :location inside :arg1-of long-03 ) :op2 ( show-01 :polarity - :arg0 ( and :op1 candidate :op2 ( person :arg0-of observe-01 ) :op3 ( person :arg0-of observe-01 ) ) :medium tv )
possible-01 :arg1 ( help-01 :arg0 ( person :arg0-of ( have-rel-role-91 :arg1 ( publication_name_1 :mod little ) :arg2 ( patient :mod little ) ) ) :arg1 ( surgery-01 :arg1 publication_name_1 :arg2 publication_name_1 ) )
lead-03 :arg0 ( person_name_0 :arg1-of ( include-91 :arg2 ( person :quant num_0 :mod all ) ) ) :arg2 ( and :op1 integrity :op2 ( side-01 :arg0 person_name_1 :arg1 ( quality :mod ( leadership :poss person ) ) :arg1-of strong-02 ) )
and :op1 ( '' :arg1 meet-03 :location ( across :op1 country_name_0 ) ) :op2 ( declare-01 :arg0 he )
surround-01 :arg0 mystery :arg1 woman :arg2 ( woman :arg1-of ( surrounded :arg0 mystery ) ) :time eventual
documentation :polarity - :arg0 ( person :arg0-of ( have-org-role-91 :arg1 organization_name_0 :arg3 ( apprentice-01 :arg0 person ) ) ) :arg1 ( complain-01 :arg0 organization :mod any ) :location city
discuss-01 :arg0 ( and :op1 ( problem :location location_name_0 ) :op2 ( way :instrument-of ( avoid-01 :arg1 ( lose-02 :arg1 problem ) ) ) ) :arg1 ( problem :location location_name_0 )
announce-01 :arg1 ( sentence-01 :arg2 person_name_0 ) :time ( date-entity month_date-entity_0 day_date-entity_0 )
say-01 :arg1 ( thank-01 :arg0 i :arg1 you ) :arg2 person_name_0
multi-sentence :snt1 ( play-01 :arg0 ( person :arg0-of '' :mod '' ) :mod well ) :snt2 ( have-03 :arg0 ( we :quant all ) :arg1 match-03 )
possible-01 :arg1 ( consent-01 :arg0 i :arg1 ( example :arg1-of ( relate-01 :arg2 ( person :arg0-of farm-01 ) ) ) )
understand-01 :arg0 i :arg1 ( and :op1 ( annoy-01 :arg1 ( person :quant numerous ) :degree very ) :op2 ( or :op1 ( evil :degree very :domain it ) :op2 ( detuned :arg0 fact :arg1 ( or :op1 ( evil :degree very ) :op2 ( detuned :arg0 fact ) ) ) ) )
and :op1 ( possible-01 :arg1 ( arrest-01 :arg1 he ) :time ( before :op1 ( possible-01 :arg1 ( arrest-01 :arg1 he ) ) ) :time ( before :op1 ( possible-01 :arg1 ( arrest-01 :arg1 he ) ) ) ) :op2 ( shoot-02 :arg0 lamb :arg1 ( person :quant num_0 :arg1-of ( include-91 :arg2 ( person :arg0-of ( have-rel-role-91 :arg1 he :arg2 parent ) ) ) :arg0-of ( have-rel-role-91 :arg1 he :arg2 parent ) ) :location ( relative-position :op1 ( home :poss ( person :arg0-of ( have-rel-role-91 :arg1 he :arg2 parent ) ) ) :arg0-of ( have-rel-role-91 :arg1 he :arg2 parent ) ) :location ( suburb :part-of ( person :arg0-of ( have-rel-role-91 :arg1 he :arg2 parent ) ) :location ( suburb :part-of strait ) ) ) :op3 ( tell-01 :arg0 i :arg1 ( demand-01 :arg0 ( person_name_4 :arg0-of ( have-org-role-91 :arg1 ( brooms :mod location_name_3 ) :arg2 coroner ) ) :arg2 ( person_name_4 :arg0-of ( have-org-role-91 :arg1 quidditch ) ) ) )
call-03 :arg0 ( speak-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg1 organization_name_0 :arg2 ( governor :mod vice ) ) ) ) :arg1 ( call-01 :arg0 person :arg1 ( group :arg0-of ( contact-01 :arg1 country_name_1 ) ) :arg2 country_name_2 )
complain-01 :arg0 ( person :quant many ) :arg1 ( violate-01 :arg1 violate-01 ) :time ( come-01 :arg1 elect-01 :arg3 ( represent-01 :arg0 ( person :arg0-of ( represent-01 :arg1 political-party_name_0 ) ) :arg1 ( person :arg0-of ( represent-01 :arg1 political-party ) :arg0-of ( covering :arg1 ( defraud-01 :mod '' ) :manner ( threaten-01 :arg0 person :arg1 elect-01 ) ) ) ) )
and :op1 ( provide-01 :arg0 ( manipulate-01 :mod this ) :arg1 ( structure :mod ( monetary-quantity :arg1-of ( cost-01 :arg2 ( monetary-quantity :arg1-of ( cost-01 :arg2 ( monetary-quantity :arg1-of ( cost-01 :arg2 ( monetary-quantity :arg1-of ( cost-01 :arg2 ( monetary-quantity :arg1-of ( cost-01 :arg2 ( monetary-quantity monetary-quantity_num_0 ) ) ) ) ) ) :mod this ) ) ) ) ) ) :degree more ) :op2 ( say-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg1 organization_name_0 :arg2 chairman ) ) :arg1 ( lead-02 :arg0 ( and :op1 person_name_1 :op2 ( person :arg0-of ( have-org-role-91 :arg1 organization_name_2 :arg2 ceo ) ) :op3 ( person :arg0-of ( lead-02 :arg1 organization ) :arg0-of ( lead-01 :arg1 organization :time after ) ) ) ) )
say-01 :arg0 person_name_0 :arg1 ( predominantly :arg1 ( store :poss we ) :mod still :mod still )
have-concession-91 :arg1 ( say-01 :arg0 he :arg1 ( recommend-01 :arg1 ( resign-01 :arg0 he ) :time immediate ) ) :arg2 ( want-01 :arg0 person :arg1 ( stay-01 :arg1 person ) )
introduce-02 :arg0 ( person :arg0-of ( have-org-role-91 :arg1 organization_name_0 :arg2 deputy ) ) :arg1 bill :arg1-of ( say-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg1 organization :arg2 deputy ) ) :location ( house :mod residential ) )
report-01 :arg0 ( media :degree mass ) :arg1 ( consider-01 :arg0 organization_name_0 :arg1 ( option :quant num_0 :mod ( balancing :arg1 ( budget :poss state ) ) ) )
and :op1 ( become-01 :arg1 ( thing :arg1-of ( target-01 :arg0 he ) ) :arg2 ( and :op1 ( person :arg1-of ( employ-01 :arg0 he ) ) :op2 ( person :arg1-of ( employ-01 :arg0 he ) ) ) :arg1-of ( cause-01 :arg0 ( accuse-01 :arg0 he :arg1 ( person :arg1-of ( accuse-01 :arg0 he :arg2 ( campaign-01 :arg0 person :arg1 ( against :op1 ( campaign-01 :arg0 person :arg1 ( oppose-01 :arg0 person :arg1 he :arg1-of personal-02 ) ) ) ) ) ) :arg2 ( person :arg1-of ( accuse-01 :arg0 he :arg2 ( campaign-01 :arg0 person :arg1 ( oppose-01 :arg0 person :arg1 he :arg1-of personal-02 ) ) ) ) ) ) ) :op2 ( straw :mod final :domain ( thing :arg1-of ( withdraw-01 :arg2 lady ) ) )
contrast-01 :arg2 ( end-01 :arg1 ( compete-01 :mod girl ) :manner intriguing )
cup
and :op1 ( plan-01 :arg0 organization_name_0 :arg1 ( open-01 :arg0 organization :arg1 ( store :quant num_0 :mod another ) :arg3 ( person_name_1 :arg0-of ( specialize-01 :arg1 craftsmen ) ) ) ) :op2 ( q. :arg0 plan-01 :arg1 ( and :op1 ( universe :quant num_0 :mod magazinovscladov ) :op2 ( universe :quant num_1 :mod magazinovscladov ) ) :time ( time :arg1-of same-01 ) )
or :op2 ( and :op1 ( consider-01 :arg1 ( break-01 :arg1 impress-01 ) ) :op2 ( fail-01 :arg1 consider-02 :arg2 attempt-01 ) )
or :op2 ( fail-01 :mode interrogative :arg1 ( attempt-01 :arg1 ( attempt-01 :arg1 ( attempt-01 :arg1 and ) ) ) )
say-01 :arg0 person_name_0 :arg1 ( want-01 :arg0 ( continent_name_1 :mod '' ) :arg1 ( help-01 :arg0 country :arg2 we ) )
say-01 :arg0 person_name_0 :arg1 ( matter :mod still :mod still ) :arg1-of ( say-01 :arg0 person )
contrast-01 :arg2 ( contrary-01 :arg1 ( appeal-02 :arg0 person_name_0 :arg1 ( person :mod ( communism :degree most ) :mod country_name_1 ) ) :arg2 legislation )
contrast-01 :arg1 ( react-01 :polarity - :arg0 nematodes :arg1 ( ultrasound :polarity - ) :mod usual ) :arg2 ( find-02 :arg0 person_name_0 :arg1 ( start-01 :arg0 person :arg1 ( react-01 :arg0 person ) :time ( place-01 :arg1 person :arg2 ( thing :arg0-of ( contain-01 :arg1 ( bubbles :mod microscopic ) :manner fluid ) ) ) ) )
know-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg1 ( hometown :poss person ) ) ) :arg1 ( and :op1 ( possible-01 :arg1 ( flit :arg1 predator ) ) :op2 ( sceptical :arg0 media :arg1 organization_name_0 ) :arg1-of ( cause-01 :arg0 ( running :arg0 media :arg1 ( run-02 :arg0 person_name_1 :arg1 ( referendum :poss person ) ) :arg0-of ( support-01 :arg1 ( enter-01 :arg0 we :quant ( between :op1 num_0 :op2 num_2 ) ) ) ) ) )
and :op1 ( tied :arg1 ( person :arg0-of ( have-org-role-91 :arg1 ( person :arg0-of defend-01 ) :arg2 minister :time former ) :arg0-of ( have-org-role-91 :arg2 minister :time former ) :arg0-of ( have-org-role-91 :arg2 minister :time former ) :arg0-of ( have-org-role-91 :arg2 minister :time former ) :arg0-of ( have-org-role-91 :arg2 minister :time former ) :arg0-of ( have-org-role-91 :arg2 minister :time former ) :arg0-of ( have-org-role-91 :arg2 minister :time former ) :arg0-of ( have-org-role-91 :arg2 minister :time former ) :arg0-of ( have-org-role-91 :arg2 minister :time former ) :arg0-of ( have-org-role-91 :arg2 minister :time former ) :arg0-of ( have-org-role-91 :arg2 minister :time former ) :arg0-of ( have-org-role-91 :arg2 minister :time former ) :arg0-of ( have-org-role-91 :arg2 minister :time former ) :arg0-of ( have-org-role-91 :arg2 minister :time former ) :arg0-of ( have-org-role-91 :arg2 minister :time former ) :arg0-of ( have-org-role-91 :arg2 minister :time former ) :arg0-of ( have-org-role-91 :arg2 minister :time former ) :arg0-of ( have-org-role-91 :arg2 minister :time former ) :arg0-of ( have-org-role-91 :arg2 head-of-state :time former ) ) )
have-concession-91 :arg1 ( find-02 :arg0 i :arg1 ( difficult :domain ( imagine-01 :arg1 ( implement-01 :arg1 ( system :mod this :arg1-of ( relate-01 :arg2 ( person :arg1-of convict-01 ) ) ) ) ) ) ) :arg2 ( take-10 :arg0 survey-01 :arg1 ( temporal-quantity temporal-quantity_num_0 :unit month ) )
expect-01 :arg1 ( open-01 :arg0 organization_name_0 :arg1 ( detail :topic ( strategy :poss organization :topic protect-01 ) ) :time ( day :time ( date-entity month_date-entity_0 day_date-entity_0 :time-of ( spend-01 :arg0 ( and :op1 ( product :arg0-of ( supply-01 :arg1 food ) :mod this ) :op2 ( good :mod fraudulent ) :op3 ( good :mod economy ) ) :arg1 ( strategy :poss ( person :arg0-of invest-01 ) ) ) ) ) )
offer-01 :arg0 person_name_0 :arg1 ( join-01 :arg0 person :arg1 ( coalition :mod international :arg0-of ( carry-out-03 :arg1 ( operation :arg0-of ( counter-01 :arg1 terrorism ) :prep-against ( state :mod ( religious-group_name_2 :mod country_name_1 ) ) ) ) ) )
build-01 :arg1 ( infrastructure :arg0-of ( require-01 :arg1 ( support-01 :mod systemic ) ) ) :time ( date-entity century_date-entity_0 ) :subevent-of ( center :prep-for ( industry :mod chemical ) )
say-01 :arg1 ( mr :mode expressive ) :arg2 person_name_0
and :op1 ( young :degree enough :domain person_name_0 ) :op2 ( cope-01 :arg0 person )
and :op2 ( require-01 :arg0 some :arg1 scandal )
commentators :arg1 person_name_0 :arg2 country_name_1
and :op1 ( corrected :arg0 ( person :arg0-of ( have-org-role-91 :arg2 ( member :mod vice ) ) ) :arg1 ( person :arg0-of ( have-org-role-91 :arg2 ( member :mod vice ) ) ) ) :op2 ( have-org-role-91 :arg0 person :arg1 ( person_name_0 :arg0-of ( have-org-role-91 :arg2 ( member :mod general ) ) ) :arg2 ( member :mod vice ) ) :time then
phone-number-entity phone-number-entity_num_0
say-01 :arg0 ( study :mod new ) :arg1 ( possible-01 :arg1 ( affect-01 :arg0 ( person :arg0-of ( suffer-01 :arg1 cold ) :quant ( temporal-quantity temporal-quantity_num_0 :unit year ) :mod type ) :arg1 ( temporal-quantity temporal-quantity_num_1 :unit year :mod at-least ) ) :time ( after :op1 ( surgery-01 :arg1 publication_name_1 :arg2 ( person :arg0-of ( have-org-role-91 :arg1 publication_name_1 :arg3 ( apprentice-01 :arg0 person ) ) ) ) :mod favorable ) )
good :degree more :domain ( hold-01 :arg0 ( person :arg0-of research-01 ) :arg1 ( rate-entity-91 :arg1 ( percentage-entity percentage-entity_num_0 ) :arg2 ( temporal-quantity temporal-quantity_num_1 :unit year ) ) )
contrast-01 :arg1 ( game :arg1-of special-02 :domain it ) :arg2 ( important :polarity - :degree so :domain it )
and :op2 ( have-03 :arg0 ( network :mod social ) :arg1 ( support-01 :arg1 ( organization :arg0-of ( collect-01 :arg1 ( complain-01 :arg0 ( person :arg0-of use-01 ) :arg2 ( content :mod ( law :polarity - ) ) ) ) ) ) )
bomb :mod cluster
bomb :mod cassette
say-01 :arg0 ( study :arg1-of ( conform-01 :arg2 ( study :mod swedish ) ) ) :arg1 ( rate-entity-91 :arg1 ( percentage-entity percentage-entity_num_0 ) :arg2 ( temporal-quantity temporal-quantity_num_1 :unit year ) :arg1-of ( compare-01 :arg2 ( group :arg0-of ( use-01 :arg1 ( method :mod ( traditional :degree more ) ) ) ) ) )
multi-sentence :snt1 ( lead-02 :arg0 ( location_name_0 :arg1-of ( lead-02 :arg0 ( person :arg0-of ( have-rel-role-91 :arg1 person_name_1 :arg2 '' ) ) ) ) :arg2 ( 2-1 :arg1 person ) :time ( and :op1 ( remove-01 :arg1 person ) :op2 ( lose-02 :arg0 person :arg1 3-2 ) ) ) :snt2 ( contrast-01 :arg1 ( lose-02 :arg0 person :arg1 ( card :mod red ) :time ( late :degree more ) ) :arg2 ( cancel-01 :arg0 person :arg1 ( card :mod red ) :time ( late :degree more ) ) ) :snt3 ( card :mod red :ord ( ordinal-entity ordinal-entity_num_0 ) :domain this )
sentence-01 :arg1 person_name_0 :arg2 ( thing :arg2-of sentence-01 ) :time ( until :op1 ( obtain-01 :arg0 person :arg1 ( information :topic ( service :mod social ) ) ) )
and :op1 ( know-02 :arg1 ( film :arg1-of ( know-02 :arg2 ( film :example ( and :op1 '' :op2 premonition :op3 brest ) ) ) ) :arg2 ( film :example ( and :op1 ( walk-01 :manner '' ) :op2 ( space :mod '' ) ) ) ) :op2 ( fortress :arg1 ( thing :location-of ( thaw :arg1 ( and :op1 '' :op2 '' ) ) ) )
and :op1 ( be-temporally-at-91 :arg1 ( wait-01 :arg1 government-organization_name_0 :arg2 ( end-01 :arg1 ( recession-02 :mod last ) ) ) :time ( before :op1 now :duration ( temporal-quantity temporal-quantity_num_0 :unit month ) ) ) :op2 ( end-01 :polarity - :arg1 record :time yet )
supply-01 :arg0 city_name_0 :arg1 ( equipment :mod military ) :arg2 we
be-located-at-91 :arg1 it :arg2 location_name_0 :ord ( ordinal-entity ordinal-entity_num_0 :range ( year :mod this ) )
begin-01 :arg1 ( and :op1 ( cut-02 :arg0 you :arg1 ( trees :location ( above :op1 ( tunnel :mod underground ) ) ) ) :op2 ( say-01 :arg0 ( data :mod some ) :arg1 train :arg2 ( gold :mod gold ) ) )
multi-sentence :snt1 ( start-01 :arg0 ( person :mod country_name_0 ) :arg1 ( felling :arg0 person :arg1 ( tree :location ( tunnel :mod underground ) ) ) ) :snt2 ( say-01 :arg0 some :arg1 ( train :prep-with ( gold :mod gold ) ) )
decrease-01 :arg1 ( a1c :arg1-of average-03 ) :arg3 ( about :op1 ( percentage-entity percentage-entity_num_0 ) ) :arg4 ( about :op1 ( percentage-entity percentage-entity_num_0 ) ) :time ( after :op1 surgery-01 )
maymarakis :arg1 ( crisis :mod refugee :arg1-of ( deal-01 :arg0 we :arg2 ( deal-01 :arg0 we :arg2 elect-01 :time ( after :op1 elect-01 ) ) ) ) :mod wangel
and :op1 ( turn-down-05 :arg0 it :arg1 ( place :polarity - :location-of ( spend-02 :arg1 night :accompanier hotel ) ) ) :op2 ( difficult :domain ( sleep-01 :arg0 station :arg1-of hard-02 ) )
and :op1 ( have-03 :arg0 i :arg1 ( support-01 :arg1 family ) ) :op2 ( possible-01 :arg1 ( leave-11 :arg0 i ) )
think-01 :polarity - :arg0 i :arg1 ( embrace :arg0 it :arg1 company_name_0 :manner somehow )
show-01 :arg0 ( person :arg0-of participate-01 :arg1-of ( include-91 :polarity - :arg2 ( person :arg0-of participate-01 ) ) :quant none ) :arg1 ( go-02 :arg0 person :arg4 ( stage :mod ( stage :mod ( further :polarity - ) :mod further ) ) ) :medium ( show-04 :mod this ) :arg1-of ( end-01 :mod just )
multi-sentence :snt1 ( contrast-01 :arg1 ( care-01 :arg0 ( care-03 :arg1 refugee :mod '' ) :arg1 refugee ) :arg2 ( obligate-01 :arg1 you :arg2 ( think-01 :arg0 you :arg1 ( thing :manner-of ( bring-01 :arg0 you :arg1 ( and :op1 ( world :mod real ) :op2 ( develop-02 :mod real ) :op3 ( develop-02 :mod real ) ) :arg2 ( country :mod religious-group_name_0 :mod this ) ) :arg1-of long-03 :mod also ) :time ( time :arg1-of same-01 ) ) ) ) :snt2 ( emphasize-01 :arg0 he )
say-01 :arg0 he :arg1 ( happy :domain ( couple :mod just ) )
and :op1 ( important :degree very :domain ( destroy-01 :polarity - :arg1 irk ) ) :op2 ( continue-01 :arg1 ( work-01 :arg1 future ) ) :time ( circumstance :time current )
heads :arg0 ( person :arg0-of ( head-01 :arg1 ( system :mod federal ) ) ) :arg1 ( declines :mod this ) :time ( late :degree more )
multi-sentence :snt1 ( obligate-01 :arg1 i :arg2 ( bear-01 :arg0 i :arg1 ( responsible-03 :arg0 i :arg1 it :degree full ) ) ) :snt2 ( declare-01 :arg0 he )
be-temporally-at-91 :arg1 num_0 :arg2 ( since :op1 ( age-01 :arg1 light :arg2 ( temporal-quantity temporal-quantity_num_0 :unit year ) ) )
obligate-01 :arg1 he :arg2 ( fill :arg0 he :arg1 ( document :arg1-of need-01 ) ) :condition ( call-01 :arg1 someone :arg2 refugee )
and :op1 ( feel-01 :arg0 ( person :arg1-of ( neighbor-01 :arg2 you ) ) :arg1 ( oblige-02 :arg1 person :arg2 ( apologize-01 :arg0 person :arg2 you ) ) ) :op2 ( probable :domain ( associated :arg0 ( face :part-of you ) :arg1 they :manner ( surprise :arg1 face ) ) )
recommend-01 :arg1 ( ensure-01 :arg0 we :arg1 ( or :op1 ( upgrade-02 :arg1 ( person :arg1-of ( charge-05 :arg2 ( phone :poss you ) ) ) ) :op2 ( be-located-at-91 :arg1 person :arg2 next :purpose ( prevent-01 :arg0 person :arg1 ( discharge :arg1 nail ) ) ) ) )
say-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg1 publication_name_0 ) ) :arg1 ( express-01 :arg0 person :arg1 ( thing :arg1-of opine-01 :mod this ) :arg2 journalist :location peninsula_name_1 :time ( session :mod autumn :poss organization_name_2 ) )
'' :arg0 person_name_0 :arg1 ( region :mod river_name_1 )
start-01 :arg0 company_name_0 :arg1 ( campaign-01 :arg0 company :arg1 ( collect-01 :arg0 company :arg1 ( monetary-quantity monetary-quantity_num_0 :unit ( dollar :mod renminbi ) ) :arg2 refugee ) )
and :op1 ( fill :arg0 ( person :arg0-of ( specialize-01 :arg1 stone ) ) :arg1 policeman ) :op2 ( attempt-01 :arg0 policeman :arg1 ( exploit-01 :arg0 policeman :arg1 ( fence :arg1-of ( establish-01 :location border-01 ) ) ) )
popular-02 :arg1 it :arg2 ( championship :mod football ) :degree very :mod also :purpose ( enjoy-01 :arg0 you :arg1 ( use-01 :arg1 ( house-01 :mod removable ) ) )
multi-sentence :snt1 ( approve-01 :arg0 ( government-organization :arg0-of govern-01 ) :arg1 ( thing :arg1-of ( tough-02 :degree more ) ) :arg2 ( government-organization :arg0-of govern-01 ) :time previous ) :snt2 ( transfer-01 :mode interrogative :arg0 country_name_0 :arg1 ( thing :quant num_0 ) :arg2 country_name_1 )
person :domain ( person :mod this )
and :op1 ( continue-01 :arg0 country :arg1 ( support-01 :arg0 country :arg1 organization_name_0 :manner massive ) :location ( across :op1 country ) :arg1-of ( cause-01 :arg0 ( increase-01 :arg1 ( rate :mod support-01 ) :arg3 ( percentage-entity percentage-entity_num_0 ) :arg4 ( poll-01 :mod organization_name_1 :time recent ) ) ) ) :op2 ( up-to :op1 ( between :op1 ( temporal-quantity temporal-quantity_num_1 :unit year ) :op2 ( temporal-quantity temporal-quantity_num_2 :unit year ) :arg1-of ( conduct-01 :location ( poll-01 :arg2 tuesday ) ) ) )
contrast-01 :arg1 ( say-01 :arg0 ( person :arg1-of ( include-91 :arg2 ( person :mod primary ) :arg3 ( percentage-entity :value num_0 ) ) ) :arg1 ( say-01 :arg0 person :arg1 ( support-01 :arg0 person :arg1 person_name_0 :manner enthusiastically ) ) ) :arg2 ( say-01 :arg0 ( person_name_1 :arg0-of ( have-org-role-91 :arg2 ( minister :mod prime ) ) ) :arg1 ( include-91 :arg1 ( person :arg0-of ( have-org-role-91 :arg2 ( minister :mod prime ) ) ) :arg2 ( percentage-entity percentage-entity_num_0 ) ) )
and :op1 ( close-01 :arg0 they :arg1 tuesday ) :op2 ( drop-05 :arg0 they :arg1 ( rate-entity-91 :arg1 ( percentage-entity percentage-entity_num_0 ) :arg2 ( temporal-quantity temporal-quantity_num_1 :unit year ) ) :arg4 record :time ( date-entity month_date-entity_0 day_date-entity_0 ) )
and :op1 ( certain :polarity - :mod big :prep-in ( thing :arg1-of ( consequence :beneficiary ( economy :mod country_name_0 ) ) ) :mod big ) :op2 ( have-03 :polarity - :arg0 they :arg1 data :mod almost :time ( after :op1 ( event :time ( late :degree most ) :location country ) ) :arg1-of ( tell-01 :arg0 person_name_1 ) )
possible-01 :polarity - :arg1 ( raise-01 :arg0 ( and :op1 person_name_0 :op2 person_name_1 :location city_name_2 ) :arg1 ( consequence :arg1-of ( state-01 :arg0 ( thing :arg1-of ( state-01 :arg0 ( thing :arg1-of state-01 ) ) ) ) ) :arg2 ( release-01 :arg1 ( thing :arg1-of state-01 ) ) ) :time today
confident-01 :arg1 person_name_0 :condition ( want-01 :arg0 continent_name_1 :arg1 ( tackle-01 :arg0 country :arg1 ( problem :topic refugee ) ) )
recommend-01 :arg1 ( produce-01 :polarity - :arg0 you :arg1 ( sentiment :arg0-of ( disturb :arg1 person :arg2 ( or :op1 ( sleep-01 :arg0 person ) :op2 ( learn-01 :arg0 person ) ) ) ) )
locate-01 :arg1 problem :location ( city :mod large :location ( city :mod large ) :location-of ( lead-03 :polarity - :arg0 ( develop-02 :arg1 infrastructure ) :arg2 ( and :op1 ( pesticides :arg1 city ) :op2 ( waste :domain city ) :op3 ( fill-01 :arg1 city :arg2 ( and :op1 ( pesticides :arg1 city ) :op2 ( waste :poss enterprise ) ) ) :op3 ( cut-02 :arg1 ( dwellings :quant few :arg1-of remain-01 ) :arg2 ( construct-01 :arg1 ( quarter :mod new :mod residential ) ) ) ) ) ) :mod particular
multi-sentence :snt1 ( fun :domain person_name_0 :mod still :arg0-of ( walk-01 :path ( along :op1 road ) :accompanier ( game_name_0 :mod yellow ) ) ) :snt2 ( and :op1 ( earn-01 :arg0 person_name_2 :arg1 ( match-03 :mod magical ) ) :op2 ( say-01 :polarity - :arg0 person_name_2 :arg1 ( strong-02 :arg1 ( secret :mod military :mod burzhuinam ) :degree too :source person ) ) )
multi-sentence :snt1 ( act-02 :mode interrogative :arg0 ( coach :mod head ) ) :snt2 ( be-located-at-91 :mode interrogative :arg1 person_name_0 :arg2 ( threshold :poss ( league :mod premier ) ) ) :snt3 ( note-01 :mode interrogative :arg0 you :arg1 ( diagram :arg1 ( command-02 :arg1 ( rival-01 :arg0 ( person :arg0-of ( rival-01 :arg1 country ) ) ) ) ) )
multi-sentence :snt1 ( remember-01 :arg0 i :arg1 that ) :snt2 ( contrast-01 :arg2 ( say-01 :arg0 person_name_0 :arg1 ( care-01 :polarity - :arg0 person :arg1 it ) ) ) :li num_0
trend :arg0-of favor-01 :mod also
say-01 :arg1 ( think-01 :arg0 i :arg1 ( wait-01 :arg1 we :arg2 ( get-04 :arg0 we :arg1 ( take-01 :arg0 person :arg1 it :manner serious ) ) :mod too ) ) :arg2 person_name_0
seem-01 :arg1 ( be-located-at-91 :arg1 you :arg2 minority :time ( day :mod this ) ) :condition ( know-01 :arg0 you :arg1 ( thing :manner-of ( handle-01 :arg0 you :arg1 ( or :op1 hammer :op2 deftly ) ) ) )
see-01 :mode interrogative :arg0 you :arg1 ( thing :arg0-of ( cause-01 :arg1 ( discuss-01 :arg1 ( program :mod this ) :arg1-of frequent-02 ) :arg1-of ( connect-01 :arg2 ( absence :op1 ( and :op1 ( absence :poss originality ) :op2 ( abet-01 :arg1 features ) ) ) ) ) )
problem :domain this :mod ( thorough :degree quite ) :arg1-of ( mean-01 :arg2 ( problem :topic society :domain this ) ) :mod besides
and :op1 ( speak-01 :arg0 they :arg2 ( person :arg0-of ( specialize-01 :arg1 together ) :mod both ) ) :op2 ( interest-01 :arg0 they :arg1 they )
pass-01 :arg1 ( craft :mod cyrully ) :arg2 ( generation :prep-to generation )
conduct-01 :arg1 ( site :location ( site :quant num_0 ) ) :time now
die-01 :arg1 ( chicken :quant num_0 :arg1-of ( include-91 :arg2 ( chicken :quant num_0 :arg1-of ( addict-01 :arg2 chicken ) ) ) )
replace-01 :arg0 location_name_0 :arg1 ( rate-entity-91 :arg1 ( monetary-quantity monetary-quantity_num_0 :unit dollar ) :arg2 ( temporal-quantity temporal-quantity_num_1 :unit minute ) ) :arg1-of ( cause-01 :arg0 ( possible-01 :polarity - :arg1 ( beat-01 :arg1 person_name_1 ) ) )
say-01 :arg0 person_name_0 :arg1 ( replace-01 :arg0 ( and :op1 person_name_1 :op2 ( person :arg0-of ( have-org-role-91 :arg2 ( minister :mod economics ) ) ) :op3 ( person :arg0-of ( have-org-role-91 :arg2 ( minister :mod economics ) ) ) :op4 ( person :arg0-of ( have-org-role-91 :arg2 ( minister :mod economics ) ) ) :op5 ( person :arg0-of ( have-org-role-91 :arg2 minister ) ) ) :arg1 ( issue-02 :arg0 person ) :time ( absent-01 :arg1 person :arg2 abroad ) )
and :op1 ( need-01 :arg0 you :arg1 ( care-04 :arg0 you ) :degree very ) :op2 ( focus-01 :arg0 you :arg2 ( techniques :polarity - :arg0 you :arg1 barrier ) )
exemplify-01 :arg0 ( and :op1 ( look-01 :arg0 ( person :arg1-of ( include-91 :arg2 ( person :arg1-of imprison-01 ) :arg3 ( person :arg1-of imprison-01 ) ) :quant ( multiple :op1 num_0 ) ) :arg1 man ) :op2 ( declare-02 :arg0 person :arg1 ( want-01 :arg0 person :arg1 ( change-01 :arg0 person :arg1 sex ) ) :arg1-of ( tell-01 :arg0 person_name_2 ) ) :location prison :time already )
have-concession-91 :arg1 ( and :op1 ( satisfy-01 :arg0 ( person :arg0-of vote-01 :mod primary :arg1-of personal-02 :poss person_name_0 ) :arg1 ( person :arg0-of vote-01 :mod primary :quant majority ) :arg2 ( account :mod this ) ) :op2 ( impact-01 :polarity - :arg0 person :arg1 ( opine-01 :arg0 person :topic it :mod overall ) ) ) :arg2 ( continue-01 :arg1 ( and :op1 ( account :mod email :arg1-of personal-02 :poss person ) :op2 server ) :time ( continue-01 :arg1 ( and :op1 ( account :mod email :arg1-of personal-02 :poss person ) :op2 server ) ) )
treat-01 :arg0 ( person :arg0-of visit-01 ) :arg1 ( and :op1 ( tea :name ( name :op1 poured ) ) :op2 ( person :arg0-of ( have-org-role-91 :arg2 head-of-state ) ) :op3 ( person :arg0-of ( have-org-role-91 :arg2 head-of-state ) ) :op4 ( person :arg0-of ( have-org-role-91 :arg2 head-of-state ) ) :op5 ( person :arg0-of ( have-org-role-91 :arg2 head-of-state ) ) :op6 ( person :arg0-of ( have-org-role-91 :arg2 head-of-state ) ) :op7 ( person :arg0-of ( have-org-role-91 :arg2 head-of-state ) ) :op7 ( person :arg0-of ( have-org-role-91 :arg2 head-of-state ) ) )
and :op1 ( enjoy-01 :arg0 ( tea :mod aromatic ) :arg1 ( tea :mod uttermost ) ) :op2 ( enjoy-01 :arg0 ( and :op1 ( person :arg0-of ( have-org-role-91 :arg1 organization_name_0 :arg2 member ) ) :op2 ( person_name_2 :arg0-of ( have-org-role-91 :arg1 organization :arg3 honeymoon ) ) :op3 ( person_name_2 :arg0-of ( have-org-role-91 :arg1 country_name_3 :arg2 honeymoon ) ) :op4 ( person :arg0-of ( have-org-role-91 :arg1 country_name_3 :arg2 member ) ) :op5 ( person :arg0-of ( have-org-role-91 :arg1 country_name_3 :arg2 member ) ) ) :arg1 ( part :mod uttermost ) )
call-01 :arg0 person_name_0 :arg1 ( and :op1 ( country :arg1-of ( friendly-01 :arg2 country_name_1 ) ) :op2 ( country :arg1-of ( friendly-01 :arg2 country_name_2 ) ) ) :arg2 ( and :op1 country :op2 country )
contrast-01 :arg1 ( fact :domain ( life :mod economy ) ) :arg2 ( play-01 :arg0 they :arg1 rate :frequency often :arg1-of ( cause-01 :arg0 ( raise-01 :arg0 they :arg1 rate :frequency often ) ) )
(-(
tell-01 :polarity - :arg0 he :arg1 ( and :op1 ( thing :arg1-of write-01 ) :op2 ( do-02 :polarity - :arg0 i :arg1 thing ) ) :arg2 i :concession ( even-if :op1 ( talk-01 :arg0 he ) )
multi-sentence :snt1 ( scenario :mod ( early :degree most ) :arg1-of ( write-01 :arg0 ( person_name_0 :arg1-of ( write-01 :arg0 ( person :quant num_1 :arg1-of ( write-01 :arg0 ( person :arg1-of ( write-01 :arg0 ( person :quant num_1 :arg1-of ( write-01 :arg0 ( person :arg1-of ( write-01 :arg0 ( person :quant num_1 :arg1-of ( write-01 :arg0 ( person :arg1-of ( write-01 :arg0 ( person :quant num_1 :mod country_name_1 ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) :time ( early :degree most ) ) :snt2 ( title-01 :arg1 ( person :mod country :mod country ) :arg2 ( title :mod work-01 :poss movie ) )
become-01 :arg1 ( person_name_0 :arg0-of ( assist-01 :arg2 ( and :op1 climber :op2 ( person :arg0-of assist-01 ) ) ) ) :arg2 ( company :ord ( ordinal-entity ordinal-entity_num_0 ) :arg0-of ( win-01 :arg1 show-04 ) ) :time ( night :mod monday ) :arg1-of ( cause-01 :arg0 ( show-01 :arg0 ( company :ord ( ordinal-entity ordinal-entity_num_0 ) :arg0-of ( win-01 :arg1 show-04 ) ) :arg1 ( home :mod ( monetary-quantity monetary-quantity_num_1 :unit ( dollar :mod renminbi ) ) ) ) )
solve-01 :arg0 ( country :polarity - :location continent_name_0 ) :arg1 ( and :op1 ( possible-01 :polarity - :arg1 ( cope-01 :arg0 country :manner alone :prep-with this ) ) :op2 ( country :mod ( small :degree such ) :example country_name_1 ) )
have-03 :arg0 ( person :quant num_0 :arg1-of ( include-91 :arg2 ( top :quant num_1 :mod top ) ) ) :arg1 person_name_0 :mod positive :time now
adapt-01 :arg1 ( system :mod ( drive-01 :arg1-of complete-02 ) ) :prep-under ( condition :mod country_name_0 )
intend-01 :arg0 ( person :arg1-of employ-01 :mod company_name_0 ) :arg1 ( and :op1 ( post-01 :arg0 person :arg1 post ) :op2 ( comment-01 :arg0 person :arg3 ( and :op1 ( person :arg0-of use-01 ) :op2 refugee ) :mod negative ) )
know-01 :mode interrogative :arg0 person_name_0 :arg1 ( '' :arg0 ( anything :mod else ) :arg1 ( anything :mod else ) )
use
form-02 :arg0 ( terminate-01 :arg1 ( standard :mod location_name_0 ) ) :arg1 ( address-02 :arg1 ( task :arg1-of ( address-01 :arg2 beginners ) ) )
multi-sentence :snt1 ( contrast-01 :arg2 ( difficult :degree great :domain ( service :location ( area :mod this ) ) :mod great ) ) :snt2 ( need-01 :arg0 you :arg1 ( get-01 :arg0 you :arg1 ( approvals :quant lot ) ) )
possible-01 :arg1 ( call-01 :arg1 ( season :mod this ) :arg2 ( athletes :beneficiary ( person_name_1 :location location_name_0 ) ) )
say-01 :arg0 he :arg1 ( have-03 :arg0 country_name_0 :arg1 presence :purpose ( isolate-01 :arg1 country_name_1 :mod further ) :condition ( support-01 :arg0 country :arg1 ( person_name_2 :arg0-of ( have-org-role-91 :arg1 country :arg2 president ) ) :arg1-of report-01 ) )
decline-01 :arg1 forecast-01 :concession ( increase-01 :arg1 ( rate :arg1-of ( amount-01 :arg2 ( rate-entity-91 :arg1 num_0 :arg2 ( temporal-quantity temporal-quantity_num_0 :unit year ) ) ) :arg1-of ( come-01 :arg4 force-04 :time ( date-entity month_date-entity_0 day_date-entity_0 ) ) :arg1-of ( come-01 :arg4 force-04 :time ( date-entity month_date-entity_0 year_date-entity_0 ) ) :arg2-of ( increase-01 :arg1 ( charge-05 :arg1 ( transport-01 :arg1 ( or :op1 ( transport-01 :mod heavy ) :op2 ( cargo :mod large ) :mod ( or :op1 heavy :op2 large ) ) ) ) ) ) )
and :op1 ( suffer-01 :arg0 ( person :arg0-of play-01 :mod 29-year-old ) :arg1 ( problem :topic ankle ) :duration ( temporal-quantity temporal-quantity_num_0 :unit year ) ) :op2 ( possible-01 :polarity - :arg1 ( leave-15 :arg0 person :arg1 country_name_0 :time ( summer :mod this ) ) )
contrast-01 :arg1 ( possible-01 :arg1 ( take-10 :arg0 ( develop-02 :arg0 he :arg1 time ) :arg1 time ) ) :arg2 ( need-01 :arg0 he :arg1 ( develop-02 :arg0 he :arg1 ( strategy :arg1-of coherent :consist-of ( person :arg0-of ( have-rel-role-91 :arg2 dh ) ) :prep-with press ) ) :concession ( sit-01 :arg1 person_name_0 :arg2 ( force :mod air :location country_name_1 ) :manner exact ) )
and :op1 ( prepare-02 :polarity - :arg1 ( person :arg0-of ( have-org-role-91 :arg1 ( person :arg0-of ( have-org-role-91 :arg2 minister ) ) :arg2 minister ) ) :arg2 ( and :op1 ( prepare-02 :arg1 person ) :op2 ( inform-01 :arg0 person :arg1-of bad-05 ) ) ) :op2 ( conclude-01 :arg0 person :arg1 ( and :op1 ( negotiate-01 :arg0 person ) :op2 ( conclude-01 :arg0 person :arg1 ( agree-01 :arg1 unsuccessful ) ) ) )
and :op1 ( report-01 :arg0 i :arg1 ( thing :arg2-of ( result-01 :arg1 ( thing :arg2-of ( result-01 :arg1 ( percentage-entity percentage-entity_num_0 :arg3-of ( include-91 :arg2 ( percentage-entity percentage-entity_num_0 ) ) ) ) ) ) :mod disappoint-01 ) ) :op2 ( reduce-01 :arg0 thing :arg1 ( profit-01 :arg0 service ) :arg1-of ( cause-01 :arg0 ( and :op1 ( demand-01 :arg1 ( service :mod military ) :arg1-of fall-01 ) :op2 ( increase-01 :arg1 ( increase-01 :arg1 ( transport-01 :arg1 land ) ) ) ) ) )
enter-01 :arg0 ( person_name_0 :arg0-of ( have-rel-role-91 :arg2 brother ) ) :arg1 ( man :mod naked )
say-01 :arg1 ( vote-01 :arg0 we :arg1 ( movement-07 :arg1 ( country_name_1 :location ( way :mod continent_name_0 ) ) ) :mod actual :arg1-of ( cause-01 :arg0 ( good :domain we ) ) ) :arg2 ( lead-01 :arg0 ( consequence :arg0-of devastate-01 ) :arg1 ( country :poss organization_name_2 ) :manner amr-unknown )
say-01 :arg0 person_name_0 :arg1 ( and :op1 ( recommend-01 :arg1 ( make-05 :arg0 company_name_1 :arg1 ( effort :degree more :topic ( morality :mod such ) ) ) ) :op2 ( say-01 :arg0 he :arg1 ( have-part-91 :arg1 ( thing :arg1-of ( say-01 :arg0 he ) ) :arg2 ( part :part-of they :mod only ) :arg1-of ( mean-01 :arg2 ( join-01 :arg1 ( person :arg0-of broadcast-01 :mod commerce ) :purpose ( watch-01 :arg0 person :arg1 ( available-02 :arg2 online ) ) ) ) ) ) ) :medium partner-01
version :arg1-of ( complete-02 :degree more ) :mod script :domain ( thing :arg1-of ( draft-01 :ord ( ordinal-entity ordinal-entity_num_0 ) ) ) :arg1-of ( cause-01 :arg0 ( plan-01 :arg1 film :mod final ) )
learn-01 :arg0 i :arg1 ( possible-01 :arg1 ( spread-01 :arg1 ( rule :quant num_0 :arg1-of simple-02 ) :arg2 out ) ) :arg1-of general-02
recognize-02 :arg0 ( court :poss person_name_0 ) :arg1 ( guilty-01 :arg1 ( citizen :quant num_0 ) :arg2 ( vandalism :polarity - ) :arg1-of ( cause-01 :arg0 ( be-located-at-91 :arg1 ( and :op1 ( person :arg1-of ( be-located-at-91 :arg2 ( territory :poss ( organization_name_2 :mod region ) ) ) ) :op2 ( complex :mod memorial ) :op3 ( complex :mod memorial ) :op4 ( complex :mod memorial ) ) :arg2 ( complex :mod memorial ) ) ) )
step :mod important :domain this :arg1-of ( cause-01 :arg0 ( and :op1 ( give-01 :arg0 it :arg1 ( role :arg1-of ( significant-02 :degree more ) ) :arg2 resource ) :op2 ( ensure-01 :arg0 market :arg1 ( and :op1 ( role :mod business ) :op2 ( ensure-01 :arg1 legitimacy ) :op3 ( restore-01 :arg1 and ) ) ) ) :arg1-of ( say-01 :arg0 statement ) )
and :op1 ( restore-01 :arg0 market :arg1 ( position :poss market ) :time ( month :mod this ) :degree part ) :op2 ( value-01 :arg1 ( industry :mod jones :arg1-of average-03 ) :arg2 ( below :op1 ( product-of :op1 num_0 :op2 ( percentage-entity percentage-entity_num_0 ) ) :time ( date-entity month_date-entity_0 ) ) )
and :op1 ( discover-01 :arg0 police :arg1 ( body :poss person_name_0 ) :li num_0 ) :op2 ( discover-01 :arg0 police :arg1 ( and :op1 ( body :poss person ) :op2 ( note :mod handwritten :source person_name_1 ) :op3 ( note :mod handwritten :source ( person_name_1 :quant num_1 ) ) ) )
process-01 :arg1 ( market :mod globe :mod globe ) :arg1-of specific-02
seem-01 :arg1 ( change-01 :arg0 ( thing :arg1-of precede-01 ) :arg1 ( thing :arg1-of precede-01 ) :time immediate :time ( after :op1 ( rate :ord ( ordinal-entity ordinal-entity_num_0 ) :consist-of ( rate :mod ( rate :ord ( ordinal-entity ordinal-entity_num_0 ) ) ) ) ) )
emphasize-01 :arg0 she :arg1 ( contribute-01 :arg0 this :arg1 ( building :mod new :arg0-of transport-01 :location ( outskirts :location ( outskirts :poss city ) ) ) )
cause-01 :arg1 ( suggest-01 :arg0 ( person :quant some :arg0-of ( have-org-role-91 :arg2 minister ) :mod such ) :arg1 ( plan-01 :arg0 person :arg1 ( issue-01 :arg0 person :arg1 ( remorse :arg1-of ( smuggle-01 :manner deliberate ) ) :arg2 ( style :mod snp ) :time ( campaign-01 :mod referendum :location ( country_name_0 :location ( country :quant num_0 ) ) ) ) :purpose ( outlaw-01 :arg0 person :arg1 ( process-02 :arg1 ( might :poss country_name_1 ) ) :arg2 organization_name_2 ) ) )
cause-01 :arg0 ( possible-01 :arg1 ( live-01 :arg0 ( guest :poss ( location_name_0 :arg1-of ( include-91 :arg2 ( anniversary :quant num_0 :poss location_name_0 ) ) ) ) ) :arg1 ( possible-01 :arg1 ( live-01 :arg0 ( guest :poss ( person :arg0-of ( have-org-role-91 :arg2 tournament ) ) ) :location cabins ) ) )
change-01 :arg0 ( nematode :mod small ) :arg1 direction :location amr-unknown :arg1-of ( affect-01 :arg0 ( impulse :mod sound :arg1-of ( mean-01 :arg2 ( ears :mod human ) ) ) )
thank-01 :arg0 i :arg1 ( cell :arg1-of ( connect-01 :arg1-of ( report-01 :location ( organization_name_0 :mod journal ) ) ) ) :arg2 ( wave-04 :mod sound )
possible-01 :arg1 ( return-02 :arg1 ( idea :arg1-of ( lead-01 :arg0 ( and :op1 ( continent_name_0 :arg1-of ( lead-02 :arg0 continent_name_1 ) ) :op2 ( war :quant num_0 ) ) ) ) :arg2 ( form :arg1-of differ-02 ) ) :mod great :mod great
and :op1 ( plus :op1 ( or :op1 ( plus :op1 ( percentage-entity percentage-entity_num_0 ) ) :op2 ( percentage-entity percentage-entity_num_1 ) ) ) :op2 ( hold-04 :arg1 ( thing :quant ( between :op1 num_1 :op2 num_1 ) ) )
and :op1 ( see-01 :arg0 i :arg1 person_name_0 :frequency num_0 ) :op2 ( brainwash-01 :arg1 person :arg2 i :mod definite )
multi-sentence :snt1 ( clear-06 :arg1 ( and :op1 ( clear-06 :arg1 ( labour :arg1 ( and :op1 ( person :arg0-of ( have-org-role-91 :arg2 ( general :mod market ) ) ) :op2 ( person :arg0-of ( have-org-role-91 :arg1 company_name_0 :arg3 ( lead-02 :arg0 person ) ) ) ) :mod ( important :degree most :ord ( ordinal-entity ordinal-entity_num_0 ) ) ) ) ) :op2 ( thing :mod ( important :degree most :mod primary ) :domain inflation ) ) :snt2 ( say-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg1 company_name_2 :arg3 ( lead-02 :arg0 person :arg1 company_name_2 ) ) ) :arg1 ( thing :mod ( important :degree most ) :domain inflation ) )
obligate-01 :arg2 ( and :op1 ( pleasant :arg1 ( time :mod both ) ) :op2 ( deliver-01 :arg1 time :arg2 ( around :op1 ( temporal-quantity temporal-quantity_num_0 :unit week ) ) ) )
cause-01 :arg0 ( obligate-01 :arg1 continent_name_0 :arg2 ( behave :arg0 continent_name_0 :arg1 ( way :mod such ) :condition ( possible-01 :polarity - :arg1 ( detain-01 :arg1 register-02 ) ) ) )
cause-01 :arg0 ( behaving :arg1 continent_name_0 :manner ( way :mod such ) ) :arg1 ( possible-01 :polarity - :arg1 ( detain-01 :arg1 they ) )
contrast-01 :arg1 ( drug :quant multiple :mod ( only :polarity - ) ) :arg2 ( be-located-at-91 :arg1 ( person :arg0-of ( have-rel-role-91 :arg2 patient ) ) :arg2 ( person :arg0-of ( have-rel-role-91 :arg2 patient ) ) )
show-04 :arg1 comedy
build-01 :arg1 ( screen :location ( behind :op1 screen ) :mod new ) :purpose ( upgrade-02 :arg1 ( model :poss ( person :mod ethnic-group_name_0 ) ) ) :location here
and :op1 ( line :mod new :mod semi-robotic :location ( behind :op1 apron ) ) :op2 ( fitting :arg0 line :arg1 door :purpose ( model :mod ( upgrade-02 :arg1 ( person :mod ethnic-group_name_0 ) ) ) )
detail-01 :arg0 ( and :op1 ( person :arg0-of ( have-org-role-91 :arg1 ( and :op1 ( person :arg0-of ( have-org-role-91 :arg1 state :arg2 ( person :arg0-of investigate-01 ) ) ) :op2 ( person :arg0-of ( have-org-role-91 :arg1 ( and :op1 ( person :arg0-of study-01 ) :op2 ( person :arg1-of employ-01 ) ) ) :op2 ( person :arg1-of employ-01 ) :op3 ( person :arg1-of employ-01 ) :op4 ( person :arg1-of employ-01 ) :op5 ( person :arg1-of employ-01 ) ) ) ) ) ) :arg2 ( person :arg0-of teach-01 :mod probable :mod probable )
see-01 :arg1 ( possible-01 :arg1 ( operate-01 :arg1 ( capable-01 :arg1 ( person :arg0-of ( have-org-role-91 :arg1 ( cabinet :mod electricity ) :arg2 a400m ) ) :arg2 ( address-02 :arg0 person :arg1 ( capable-01 :arg1 person :arg2 operate-01 :mod ( kind :mod further ) ) ) ) ) :arg1-of ( cause-01 :arg0 ( see-01 :arg1 ( capable-01 :arg1 ( person :arg0-of ( have-org-role-91 :arg1 ( cabinet :mod electricity ) :arg2 a400m ) ) :arg2 ( address-02 :arg0 person :arg1 ( capable-01 :arg1 person :arg2 operate-01 :mod ( kind :mod further ) ) ) ) ) ) )
possible-01 :arg1 ( downloading :arg0 you :arg1 organization_name_0 :arg2 ( send-01 :arg0 you :arg1 photograph-01 :arg2 we :purpose ( use-01 :arg0 we :arg1 ( photo :topic apply-01 ) :arg2 we ) ) )
and :op1 ( blind :arg0 person_name_0 :arg1 ( fire-01 :arg0 organization_name_1 :arg1 fire ) :manner blind-02 ) :op2 ( apologize-01 :arg0 person :arg1 ( involve-01 :arg1 person :arg2 ( faith :arg1-of ( name-01 :arg2 person ) :mod much ) ) :mod even )
opine-01 :arg0 ( person :arg0-of apply-01 ) :arg1 ( opine-01 :arg0 person )
and :op2 ( disappeared :arg0 ( image :source location_name_0 :location-of ( wait-01 :arg1 ( man :arg1-of black-05 ) ) ) :arg1 image :arg2 ( see-01 :arg0 and :arg1 ( possible-01 :mode interrogative :arg1 ( crawls :arg0 ( and :op1 ( man :arg1-of black-05 ) :op2 ( man :arg1-of black-05 ) ) ) ) ) :mod also )
want-01 :arg0 country_name_0 :arg1 ( participate-01 :arg0 country :arg1 ( thing :arg2-of solve-01 ) ) :arg1-of ( cause-01 :arg0 ( harm-01 :polarity - :arg0 country :arg1 country :arg1-of ( direct-02 :mod just ) ) )
multi-sentence :snt1 ( be-located-at-91 :arg1 ( thing :arg1-of ( be-located-at-91 :arg2 ( footage :mod illustrative ) ) ) :arg2 amr-unknown :mod main ) :snt2 ( use-01 :arg0 ( footage :mod illustrative ) :arg1 ( image :mod only :consist-of ( and :op1 child :op2 woman ) ) )
multi-sentence :snt1 ( plan-01 :arg0 i :arg1 ( meet-03 :arg0 i :arg1 ( and :op1 ( person :arg0-of ( lead-02 :arg1 government-organization_name_0 ) ) :op2 ( person :arg0-of ( represent-01 :arg1 ( person :arg0-of ( represent-01 :arg1 ( and :op1 ( political-party :arg0-of ( oppose-01 :arg1 democracy ) ) :op2 ( person :arg0-of ( represent-01 :arg1 ( oppose-01 :arg1 democracy ) ) ) :op3 ( person :arg0-of ( represent-01 :arg1 ( person :arg0-of ( oppose-01 :arg1 democracy ) ) ) ) ) ) ) ) ) ) ) ) :snt2 ( clear-06 :arg1 ( text :arg1-of clear-06 ) )
and :op1 ( joke-01 :polarity - :arg2 ( anyone :mod else ) :arg1-of ridiculous-02 ) :op2 ( absurd :mod of-course :domain ( anyone :mod else ) )
worry-02 :mode interrogative :polarity - :arg0 you :arg1 extremism :time ( before :op1 now :quant ( temporal-quantity temporal-quantity_num_0 :unit year ) )
confirm-01 :arg0 ( person :arg0-of study-01 ) :arg1 ( look-01 :arg0 person :direction forward )
treat-03 :arg1 this
multi-sentence :snt1 ( contrast-01 :arg1 ( person :arg0-of play-01 :domain ( they :mod both ) ) :arg2 ( person :arg0-of play-01 ) ) :snt2 ( contrast-01 :arg1 ( experience-01 :arg0 we :arg1 ( tour :name ( name :op1 atp ) ) ) :arg2 ( convince-01 :arg1 we :arg2 ( list-01 :arg1 ( cup :mod that ) :location ( cup :mod turn-01 :poss person_name_0 ) ) ) )
and :op1 ( remain-01 :arg1 ( thing :arg0-of incinerate-01 :mod wind ) :arg3 ( thing :arg1-of ( symbolize-01 :arg2 city ) :mod only ) ) :op2 ( rarity :location here )
and :op1 ( thing :arg2-of ( result-01 :arg1 ( sell-01 :arg0 organization_name_0 :arg1 sell-01 ) :time recent ) ) :op2 ( show-01 :arg1 ( and :op1 ( sell-01 :arg1 ( sell-01 :location country_name_1 ) ) :op2 ( begin-01 :arg1 ( rise-01 :arg1 sell-01 :mod again ) ) ) )
and :op1 ( thing :arg2-of ( result-01 :arg1 sell-01 ) :mod organization_name_0 :time ( late :degree most ) ) :op2 ( show-01 :arg1 ( and :op1 ( sell-01 :arg1 ( sell-01 :location country_name_1 ) ) :op2 ( begin-01 :arg1 ( rise-01 :arg1 sell-01 :mod again ) ) ) )
know-01 :polarity - :arg0 you :arg1 ( possible-01 :arg1 ( make-02 :arg0 it :arg1 ( friendship :poss you ) ) ) :time ever
say-01 :arg0 ( newspaper :poss person ) :arg1 ( crime-02 :polarity - :location country_name_0 ) :arg1-of ( say-01 :arg0 ( newspaper :poss person ) )
short-06 :arg1 ( person :quant num_0 :mod primary :arg0-of vote-01 :mod primary ) :arg2 ( point :quant num_1 :mod ( percentage-entity percentage-entity_num_0 ) )
owe-01 :arg0 ( person :arg0-of sail-01 :mod this ) :arg1 much :arg2 ( and :op1 ( level :arg1-of ( high-02 :degree most ) :mod ( level :arg1-of ( high-02 :degree most ) ) ) :op2 ( acids :quant num_1 :mod fat ) )
say-01 :arg0 ( person_name_0 :arg0-of ( have-org-role-91 :arg1 organization_name_1 :arg2 ( ambassador :time current ) ) :arg0-of ( have-org-role-91 :arg1 organization_name_1 ) ) :arg1 ( and :op1 ( show-01 :polarity - :arg0 person :arg1 ( match-03 :arg0 organization_name_3 :mod ( good :degree most ) ) ) :op2 ( cause-01 :arg0 amr-unknown :arg1 ( thing :arg0-of cause-01 ) ) )
review-01 :arg1 review-01 :arg1-of ( cause-01 :arg0 ( touch-01 :arg1 ( person :arg0-of train-01 ) ) )
contrast-01 :arg1 ( cause-01 :arg0 ( put-01 :arg1 case-03 :arg2 off ) ) :arg2 ( count-01 :arg1 ( accuse-01 :arg1 person_name_0 :time ( after :op1 ( end-01 :arg1 ( mandate :poss person ) ) ) ) )
contrast-01 :arg1 ( support-01 :arg0 person_name_0 :arg1 ( thing :arg1-of ( decide-01 :arg3 ( struggle-01 :mod important :arg1-of ( begin-01 :location ( and :op1 friday :op2 local-region_name_1 ) ) ) ) ) :mod also ) :arg2 ( support-01 :arg0 person :arg1 ( city_name_2 :mod native ) :purpose ( return-01 :arg1 person :arg4 team :duration long-03 ) ) :mod also
and :op1 ( test-01 :arg0 one :arg1 they :location ( laboratory :poss they ) ) :op2 ( compare-01 :arg0 one :arg1 ( thing :arg2-of ( result-01 :arg1 ( thing :arg2-of ( result-01 :arg1 ( control-01 :arg0 customer :arg1 city_name_0 ) ) ) ) ) :time then )
get-01 :arg0 ( and :op1 community :op2 community ) :arg1 ( and :op1 community :op2 ( percentage-entity percentage-entity_num_0 :arg3-of ( include-91 :arg2 state ) ) ) :time ( case-03 :arg1 cannabis )
and :op1 ( travel-01 :arg0 we :arg3 ( and :op1 ( train :arg1-of dark-02 ) :op2 bus :quant many ) ) :op2 ( experience-01 :arg0 we :arg1 ( and :op1 ( hunger-01 :arg0 we ) :op2 ( coexist-01 :arg1 we ) :op3 winter :op4 winter :op5 fear-01 ) )
and :op1 ( declares :arg0 company :arg1 ( process-02 :arg1 recruit-01 ) :time ( month :mod this ) ) :op2 ( recruit-01 :arg1 staff :time october-december )
contrast-01 :arg1 ( incline-01 :arg0 person_name_0 :arg1 ( think-01 :arg0 person :arg1 ( have-03 :arg0 ( person :arg1-of ( include-91 :arg2 ( person :arg0-of vote-01 :mod republican ) :arg3 ( percentage-entity :quant ( percentage-entity :value num_0 ) ) ) ) :arg1 ( think-01 :arg0 person :arg1 ( have-03 :arg0 ( estate :mod real ) :arg1 ( temperament :mod right :poss ( person :arg0-of ( have-org-role-91 :arg2 president ) ) ) ) ) ) ) ) :arg2 ( criticize-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg1 ( organization_name_1 :poss person ) :arg2 organization_name_2 ) ) :arg1 person ) :degree wide
and :op1 ( prevent-01 :arg0 ( elite :mod country_name_0 ) :arg1 ( homepage :poss ( plane :mod country_name_1 ) ) :arg1-of long-03 ) :op2 ( leave-11 :arg0 elite :arg1 ( room :quant all :prep-against atom ) :time then ) :op3 ( leave-15 :arg0 elite :arg1 ( person :arg0-of fight-01 :mod all :prep-against atom ) :manner quiet ) :op4 ( support-01 :arg0 ( and :op1 ( person :arg0-of ( have-org-role-91 :arg2 ( person :arg0-of migrate-01 :mod old ) ) ) :op2 ( person :arg0-of ( have-org-role-91 :arg2 head-of-state ) ) ) :arg1 ( live-01 :arg0 we ) )
contrast-01 :arg1 ( challenge-01 :arg2 ( country :poss we ) :mod big ) :arg2 ( believe-01 :arg0 i :arg1 ( possible-01 :arg1 ( become-01 :arg1 they :arg2 ( under :op1 we ) :condition ( manage-01 :arg0 we :arg1 we ) ) ) )
say-01 :arg0 he :arg1 ( contrast-01 :arg1 ( challenge-01 :arg0 ( country :poss we ) :arg1 it :arg1-of major-02 ) :arg2 ( believe-01 :arg0 i :arg1 ( possible-01 :arg1 ( benefit-01 :arg0 ( refugee :arg0-of ( integrate :arg1 refugee ) ) :condition ( refugee :domain refugee ) ) ) ) )
say-01 :arg0 he :arg1 ( contrast-01 :arg1 ( challenge-01 :arg2 ( country :poss we ) :degree great ) :arg2 ( believe-01 :arg0 i :arg1 ( possible-01 :arg1 ( become-01 :arg1 they :arg2 benefit-01 :condition ( manage-01 :arg0 we :arg1 refugee ) :condition ( manage-01 :arg0 we :arg1 refugee ) ) ) ) )
come-01 :arg1 builders :arg4 hospital :time ( year :mod next )
time :purpose decide-01
time :time-of ( decide-01 :arg1 ( rate :mod interest :beneficiary organization_name_0 ) )
fear-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg1 hotel :arg2 staff ) ) :arg1 ( speak-01 :arg0 person :arg2 person )
multi-sentence :snt1 complex :snt2 ( say-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg1 ( firm :arg0-of manufacture-01 :poss company ) :arg2 director ) ) :arg1 ( person_name_0 :arg0-of ( have-org-role-91 :arg1 ( firm :arg0-of manufacture-01 :poss company ) :arg2 director ) ) )
mean-01 :arg0 i :arg2 ( have-03 :arg0 ( person :mod both ) :arg1 humor :mod good )
duty :poss ( we :quant all ) :mod also :mod in-fact
contrast-01 :arg1 ( possible-01 :arg1 ( take-10 :arg0 ( develop-02 :arg0 he :arg1 ( strategy :arg1-of ( coherent :arg2 ( engage-01 :arg0 he :arg2 media ) ) ) ) :arg1 ( time :quant some ) ) ) :arg2 ( need-01 :arg0 he :arg1 ( develop-02 :arg0 he :arg1 ( strategy :arg1-of coherent :purpose ( engage-01 :arg0 he :arg2 media ) ) ) ) :arg1-of ( contrast-01 :arg2 ( leave-11 :arg0 ( person_name_0 :arg0-of ( seat-01 :location company_name_1 ) ) :mod certain ) )
photo :topic photo :location location_name_0
face-01 :arg0 he :arg1 ( temporal-quantity temporal-quantity_num_0 :unit year :arg1-of ( welcome-01 :arg2 bandwagon :arg1-of purport-01 ) )
contrast-01 :arg2 ( digress :arg0 i )
choose-01 :arg0 ( thing :quant all :arg1-of ( include-91 :arg2 ( thing :mod this ) ) ) :arg1 ( pocket :poss thing ) :mod certain
and :op2 ( have-purpose-91 :arg1 ( commit-01 :arg1 they :arg2 ( live-01 :arg0 they ) ) :arg2 ( level :mod top ) :mod actual )
say-01 :arg1 ( enough :domain ( let-01 :arg1 ( piece :mod paper :mod this ) ) :time ( put-01 :arg1 ( piece :mod technical :mod this ) :arg2 ( features :mod paper ) ) ) :arg2 ( person :arg0-of ( have-org-role-91 :arg2 ( dryly :mod chief ) ) )
say-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg1 ( person :arg0-of ( have-org-role-91 :arg2 chief ) ) :arg2 chief ) ) :arg1 ( include-01 :arg1 ( person :arg0-of ( have-org-role-91 :arg2 chief ) ) :arg2 ( include-01 :arg1 ( and :op1 ( person :arg0-of ( have-org-role-91 :arg2 head-of-state ) ) :op2 ( person :arg0-of ( have-org-role-91 :arg2 chief ) ) :op3 ( person :arg0-of ( have-org-role-91 :arg2 chief ) ) :op4 ( person :arg0-of ( have-org-role-91 :arg2 chief ) ) ) :mod technical ) )
contrast-01 :arg2 ( possible-01 :polarity - :arg1 ( ignore-01 :arg0 government-organization_name_0 :arg1 ( perspective :mod globe :mod ( pink :degree less ) ) ) )
say-01 :arg0 he :arg1 ( recommend-01 :arg1 ( and :op1 ( break-13 :arg0 he :arg1 ( reason :mod social ) ) :op2 ( cause-01 :arg0 ( stability :arg1-of long-03 :poss economy :location ( energy :mod large :mod domestic ) ) ) ) )
let-01 :mode imperative :arg0 you :arg1 ( see-01 :arg0 they :arg1 ( chance-02 :polarity - :arg0 they ) ) :mod definite
say-01 :arg0 person_name_0 :arg1 ( submit-01 :arg0 organization_name_2 :arg1 ( propose-01 :arg0 organization_name_2 ) :arg2 ( remove-01 :arg0 organization :arg1 ( idea :mod whole :topic ( limit-01 :arg1 waste ) ) ) ) :location ( conference :mod organization_name_1 )
break-up-08 :arg1 ( thing :arg0-of incinerate-01 ) :time ( after :op1 ( break-up-08 :arg1 ( and :op1 corrections :op2 downs :quant few ) ) )
use-01 :arg0 person :arg1 ( spoon :quant num_0 ) :frequency often :time morning
show-01 :arg0 ( research-01 :arg0 organization_name_0 :arg1-of ( lead-03 :arg2 organization_name_1 ) ) :arg1 ( show-01 :arg0 ( thing :arg1-of ( include-91 :arg2 ( respondents :arg1-of respondents ) :arg3 ( percentage-entity :value num_0 ) ) ) :arg1 ( kitchen :arg1-of warm ) )
publish-01 :mod original :arg1-of ( publish-01 :time today ) :arg1-of ( publish-01 :time today ) :mod original
and :op1 ( person_name_0 :arg0-of ( lead-02 :arg1 ( channel :quant num_0 :arg1-of ( lead-02 :arg0 person ) ) ) ) :op2 ( tell-01 :arg0 businessman :arg1 ( guilty-01 :arg1 person ) :arg1-of ( cause-01 :arg0 ( and :op1 ( ambition :poss ( person :arg0-of ( work-01 :location there ) ) ) :op2 ( believe-01 :arg0 person :arg1 ( way :mod ( good :degree most ) :domain this :purpose ( provide-01 :arg1 support-01 :arg1-of long-03 ) :domain this ) ) ) ) :arg2 company_name_1 )
have-concession-91 :arg1 ( raise-01 :arg0 government-organization_name_0 :arg1 ( rate :mod ( raise-01 :arg1 rate ) ) :frequency often ) :arg2 ( decisive :topic ( thing :manner-of ( respond-01 :arg0 ( and :op1 economy :op2 ( asset :mod finance ) ) ) ) )
intend-01 :arg0 government-organization_name_0 :arg1 ( intend-01 :arg0 government-organization :arg1 ( establish-01 :arg0 government-organization :arg1 ( base :mod air :location peninsula_name_1 ) :arg1-of ( remain-01 :arg3 ( bastion :arg0 ( person_name_2 :arg0-of ( have-org-role-91 :arg1 country :arg2 president ) ) :arg1 ( person_name_2 :arg0-of ( have-org-role-91 :arg1 country :arg2 president ) ) ) :time now ) ) )
announce-01 :arg0 organization_name_0 :arg1 ( arm :mod charitable :part-of ( company :mod internet ) :domain organization )
agree-01 :arg0 ( person :quant num_0 :arg1-of ( include-91 :arg2 ( person :quant num_1 :arg1-of republican ) ) ) :arg1 person_name_0 :arg2 ( issue-02 :arg0 immigrate-01 ) :arg1-of report-01
and :op1 ( person_name_0 :prep-with ( and :op1 nail :op2 white :op3 color :arg1-of cool-04 ) ) :op2 ( train-01 :arg0 person :arg2 ( foot :part-of person ) )
and :op1 ( read-01 :arg0 i :arg1 scenario ) :op2 ( say-01 :arg0 he :arg1 ( like-01 :arg0 he :arg1 scenario ) ) :arg1-of ( cause-01 :arg0 ( sad-02 :arg1 he ) )
and :op1 ( read-01 :arg0 i :arg1 script ) :op2 ( say-01 :arg0 he :arg1 ( like-01 :arg0 he :arg1 ( sad-02 :arg1 he ) ) )
show-01 :arg0 it :arg1 ( observations :time ( before :op1 ( hear-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg1 country_name_0 ) ) :arg1 ( club :name ( name :op1 club :op2 club :op3 club ) ) :time ( day :mod just ) :time ( before :op1 ( hear-01 :arg0 person :arg1 ( owe-01 :arg0 person :arg1 ( tens :quant ( multiple :op1 ( mass-quantity mass-quantity_num_0 :unit gram ) ) ) ) ) ) ) ) )
agree-01 :arg0 ( we :arg0-of ( have-rel-role-91 :arg1 he :arg2 partner ) ) :arg1 ( have-condition-91 :arg1 ( and :op1 ( roaches :polarity - :arg0 we :arg1 ( skin :part-of he ) :purpose ( eat-01 :arg0 we :arg1 ( skin :name ( name :op1 renegade :op2 renegade :op3 skin ) ) ) ) :op2 ( eyelashes :arg0 ( some :arg1-of ( include-91 :arg2 ( and :op1 ( eyelashes :location world-region_name_0 ) :op2 ( eyelashes :mod this ) ) ) ) ) ) :arg2 ( roaches :polarity - :arg1 we ) )
know-01 :arg0 we :arg1 ( cover-01 :polarity - :arg0 ( person :arg0-of ( have-org-role-91 :arg2 ( officer :mod ( enforce-01 :arg1 law ) ) ) ) :arg1 ( thing :arg1-of conduct-01 :mod such ) )
know-01 :arg0 we :arg1 ( affect-01 :arg0 ( negotiate-01 :mod such ) :arg1 ( negotiate-01 :mod such ) )
multi-sentence :snt1 ( possible-01 :arg1 ( calculator :arg0 you :arg1 ( bmi :poss you ) :location here ) ) :snt2 ( 1d0zqdv :quant num_0 :mod usa.gov )
and :op1 ( get-01 :polarity - :arg0 we :arg1 answer-01 ) :op2 ( cause-01 :arg0 amr-unknown :arg1 ( want-01 :arg0 we :arg1 ( release-01 :arg1 quota :arg2 ( text :mod final ) ) ) )
and :op1 ( have-03 :arg0 i :arg1 ( theory :mod another :topic ( cause :arg0-of ( cause-01 :arg1 ( rage-02 :arg0 they ) ) ) ) ) :op2 ( obligate-01 :arg1 they :arg2 ( have-03 :arg0 they :arg1 ( link-01 :arg1 they :arg2 spider ) ) :condition ( possible-01 :polarity - :arg1 ( see-01 :arg0 he ) :condition ( possible-01 :polarity - :arg1 ( see-01 :arg0 he ) ) ) ) :op3 ( expose-01 :arg1 that :arg2 ( endanger-01 :arg1 they :location anywhere ) :condition ( possible-01 :polarity - :arg1 see-01 ) )
and :op1 ( be-located-at-91 :arg1 he :arg2 here :time ( before :op1 now :duration ( temporal-quantity temporal-quantity_num_0 :unit year ) ) ) :op2 ( train-01 :arg0 he :arg2 ( team :mod great ) :manner apparent ) :arg0-of ( cause-01 :arg1 ( likely-01 :arg1 ( use-01 :polarity - :arg0 they :arg1 lose-02 :arg1-of ( cause-01 :arg0 ( possible-01 :arg1 ( use-01 :polarity - :arg1 lose-02 :arg2 he :mod little ) ) ) ) ) )
important :degree very :domain ( stay-01 :arg1 it :manner together ) :time now
contrast-01 :arg2 ( treat-01 :arg1 ( thing :arg2-of value-01 :mod this ) :arg2 ( about :op1 ( percentage-entity percentage-entity_num_0 ) ) )
agree-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg2 ( person :arg1-of expert-01 ) ) ) :arg1 ( time :quant num_0 :domain ( seed :part-of ( seed :part-of ( and :op1 vitamin :op2 ( e :quant num_1 ) ) ) ) :degree more :compared-to vitamin )
and :op1 ( have-03 :arg0 ( person :quant many :mod country_name_0 :arg1-of high-02 ) :arg1 rise-01 ) :op2 ( become-01 :arg1 ( street :arg1-of high-02 :mod country :quant many ) :arg2 ( town :mod ( distance-quantity distance-quantity_num_0 :unit meter ) ) )
say-01 :arg0 ( person :arg0-of research-01 :arg0-of ( lead-02 :arg1 ( and :op1 person_name_0 :op2 ( person :arg0-of ( have-org-role-91 :arg2 ( president :mod vice ) ) ) ) ) ) :arg1 ( contrast-01 :arg2 ( reduce-01 :polarity - :arg0 ( control-01 :arg1 glycaemic :mod ( good :degree more ) :arg1-of ( reflected :arg2 ( level :arg1-of ( high-02 :degree more ) :mod haemoglobin ) ) ) :arg1 mortality :time ( after :op1 now :quant ( temporal-quantity temporal-quantity_num_0 :unit year ) ) ) )
possible-01 :arg1 ( expect-01 :arg1 ( and :op1 ( watch-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg1 government-organization_name_0 :arg2 official ) ) :arg1 ( develop-01 :location elsewhere ) ) :op2 ( consults :arg0 ( and :op1 ( person :arg0-of ( have-org-role-91 :arg1 ( university_name_2 :mod central :mod central ) :arg2 ( person :arg1-of expert-01 ) ) ) :op2 ( person :arg0-of ( have-org-role-91 :arg2 ( person :arg1-of expert-01 ) ) ) ) :arg1 ( state :poss ( economy :mod globe ) ) :manner ( good :degree more ) :mod also ) ) ) :location world :mod still
possible-01 :arg1 ( do-02 :arg0 i :arg1 so )
and :op1 ( person_name_0 :arg0-of ( have-org-role-91 :arg2 chairman ) ) :op2 ( person :arg0-of ( have-org-role-91 :arg1 government-organization_name_1 :arg2 chairman ) ) :op3 ( person :arg0-of ( have-org-role-91 :arg1 government-organization_name_1 :arg2 chairman ) ) :op4 ( person :arg0-of ( have-org-role-91 :arg1 government-organization :arg2 chairman ) ) :op5 ( person :arg0-of ( have-org-role-91 :arg1 government-organization :arg2 chairman ) ) :op6 ( person :arg0-of ( have-org-role-91 :arg1 organization :arg2 chairman ) ) :op6 ( person :arg0-of ( have-org-role-91 :arg1 organization :arg2 chairman ) ) :op7 ( person :arg0-of ( have-org-role-91 :arg1 government-organization :arg2 chairman ) )
and :op1 ( suggest-01 :arg0 ( person_name_0 :arg0-of ( have-org-role-91 :arg2 chairman ) ) :arg1 ( '' :arg0 government-organization_name_1 :arg1 ( expand-01 :arg1 money :location market ) ) :mod mere ) :op2 ( trigger-01 :arg0 government-organization :arg1 ( spasms :location ( over :op1 world ) ) )
and :op1 ( person :mod rich ) :op2 ( person :mod rich :arg1-of soft-02 ) :op3 ( person :mod country_name_0 )
claim-01 :arg0 ( person_name_0 :arg0-of ( have-org-role-91 :arg2 mp ) ) :arg1 ( and :op1 ( recognize-02 :arg0 person :arg1 ( and :op1 ( confrontational :arg1 person :degree too ) :op2 ( refrain :arg0 person :arg1 ( reply :mod '' :mod like-minded ) ) ) ) :op2 ( refrains :arg0 person :arg1 ( trade-01 :arg1 '' ) ) :op3 ( promise-01 :arg0 person :arg2 ( focus-01 :arg0 person :arg2 ( issue-02 :mod important :example ( and :op1 poverty :op2 inequality :op3 ( thing :arg1-of ( face-01 :arg0 ( person :mod young ) ) ) ) ) ) ) :arg1-of instead-of-91 )
game :mod ( three-point :ord ( ordinal-entity ordinal-entity_num_0 :range ( since :op1 ( date-entity month_date-entity_0 ) ) ) ) :arg1-of ( cause-01 :arg0 ( hit-01 :arg0 he :arg1 game :arg2 ( against :op1 organization_name_1 ) ) )
exemplify-01 :arg0 ( obligate-01 :arg2 ( go-01 :arg1 ( percentage-entity percentage-entity_num_0 ) :arg4 ( repair-01 :arg1 damage-01 ) :time ( after :op1 ( or :op1 mine-01 :op2 ( provide-01 :arg1 ( service :purpose rescue-01 :mod year-long ) ) ) ) ) )
at-least :prep-for some
and :op1 ( suffer-01 :arg0 ( ck :prep-in ( case :mod this ) ) :arg1 ( lose-02 :arg1-of significant-02 ) ) :op2 ( possible-01 :arg1 ( bankrupt-01 :arg1 case-03 :mod even ) ) :op3 ( though :arg1 ( economy :poss it ) :mod even :concession ( shape :domain economy ) )
note-01 :mode imperative :arg0 you :arg1 ( end-01 :arg1 game :manner ( pain-01 :arg1 ( shoulder :part-of he :mod right ) ) )
say-01 :arg0 police :arg1 ( and :op1 ( leave-17 :arg1 ( motorist :polarity - ) :manner ( stop-01 :polarity - ) ) :op2 ( help-01 :arg0 police :arg1 ( person :arg1-of injure-01 ) ) )
contrast-01 :arg1 ( available-02 :polarity - :arg2 ( thing :arg0-of ( cause-01 :arg1 ( available-02 :arg2 ( person :arg0-of ( have-org-role-91 :arg1 panel :arg2 member ) ) ) ) ) ) :arg2 ( include-01 :arg1 ( person :arg0-of ( claim-01 :arg1 ( fund-01 :arg1 ( industry :mod newspaper ) ) :quant some ) :mod well ) :arg2 ( person :arg0-of ( have-org-role-91 :arg1 panel :arg2 member ) ) )
turn-02 :arg0 ( person :arg0-of ( have-org-role-91 :arg1 government-organization_name_0 :arg2 official ) ) :arg1 ( cut-02 :mod this ) :time ( late :degree more )
be-located-at-91 :arg1 ( and :op1 i :op2 ( thing_name_0 :mod other ) ) :arg2 ( temporal-quantity temporal-quantity_num_0 :unit year ) :time now
say-01 :arg1 ( and :op1 ( put-03 :arg1 ( and :op1 hammer :op2 brushes ) :arg2 ( person :arg1-of employ-01 :arg1-of ( educate-01 :location ( east :part-of continent_name_0 ) ) ) :purpose ( work-01 :arg0 person :location ( home :poss person ) ) ) :op2 ( work-01 :arg0 person :arg1 ( work-01 :arg0 person :location ( home :poss person ) ) ) )
have-concession-91 :arg2 ( face-01 :arg0 lawyer :arg1 ( thing :polarity - :arg0-of ( evidence-01 :arg1 ( and :op1 ( own-01 :arg0 he :arg1 ( quantity :arg1-of ( own-01 :arg0 he ) ) ) :op2 ( possible-01 :arg1 ( be-located-at-91 :arg1 he :arg2 cafÃ© :arg1-of complete-02 :arg1-of complete-02 ) ) ) ) ) :concession ( face-01 :arg0 he :arg1 ( sentence-01 :arg1 ( life :mod commerce :mod commerce ) :arg2 ( possess-01 :arg1 ( quality :mod commerce :mod commerce ) ) ) ) )
contrast-01 :arg2 ( say-01 :arg0 person_name_0 :arg1 ( possible-01 :arg1 ( have-03 :arg0 ( person :mod country_name_1 ) :arg1 ( advantage :quant many :compared-to ( technique :mod this ) ) ) ) )
show-01 :arg0 it :arg1 ( escalation :mod event )
say-01 :polarity - :arg0 no-one :arg1 nothing :time ( finish-01 :arg0 no-one )
go-02 :arg0 ( person :arg0-of ( have-org-role-91 :arg2 ( official :mod career ) ) ) :time before :time ( before :op1 begin-01 )
hold-01 :arg0 ( career :poss ( person :arg0-of ( have-org-role-91 :arg1 political-party_name_0 :arg2 official ) ) ) :arg1 she :time ( before :op1 begin-01 )
say-01 :arg0 ( individual :arg0-of ( depend-01 :arg1 ( problem :arg1-of specific-02 :poss ( person :arg0-of ( have-rel-role-91 :arg2 patient ) ) ) ) ) :arg1 ( cease-01 :arg0 ( and :op1 person_name_0 :op2 rehabilitation :op3 medicine ) :arg1 ( and :op1 rehabilitation :op2 rehabilitation :op3 medicine :location hospital ) )
subject-01 :arg1 ( thing :arg1-of ( subject-01 :arg2 ( pay-01 :arg0 ( person :arg0-of ( have-rel-role-91 :arg2 dh ) ) ) ) :arg2 ( person :arg0-of ( have-rel-role-91 :arg1 person :arg2 uncle ) ) ) :arg1-of ( cause-01 :arg0 ( agree-01 :arg0 person :arg1 ( limit-01 :arg1 person ) ) )
and :op1 ( obligate-01 :arg1 ( company :arg0-of insure-02 ) :arg2 ( pay-01 :arg0 company :arg1 claim-01 ) ) :op2 ( limit-01 :arg1 ( thing :arg1-of ( limit-01 :arg1-of agree-01 ) ) )
agree-01 :polarity - :arg0 ( company :arg0-of insure-02 ) :arg1 ( obligate-01 :arg1 company :arg2 ( pay-01 :arg0 company :arg1 ( entitlements :arg1 client ) ) ) :arg1-of ( cause-01 :arg0 agree-01 )
say-01 :arg0 person_name_0 :arg1 ( recommend-01 :arg1 ( use-01 :arg1 ( fee :mod licence ) :arg2 ( program :arg1-of ( make-01 :polarity - :arg0 ( person :mod other :arg0-of broadcast-01 :mod television :mod country_name_1 ) ) ) :mod only ) )
edited :arg1 ( story :mod this ) :purpose ( reflect-01 :arg1 story :arg2 ( claim-01 :arg0 police :arg1 ( and :op1 ( claim-01 :arg0 person_name_0 :arg1 ( call-03 :arg0 person :arg1 ( call-03 :arg0 person :arg1 ( line :mod emergency ) :time ( after :op1 ( kill-01 :arg0 person :arg1 person_name_1 ) ) ) ) ) :op2 ( evidence-01 :polarity - :arg1 ( sedated :arg1 person :mod actual ) ) ) :time now ) )
person :arg0-of ( have-rel-role-91 :arg1 ( person :arg0-of ( have-rel-role-91 :arg2 comrade ) ) :arg2 chief ) :time ( morning :mod good )
and :op1 ( man :mod thirty ) :op2 ( woman :quant num_0 )
suffer-01 :arg0 person_name_0 :arg1 ( leg :arg0-of break-01 ) :location ( struggle-01 :arg1 country_name_1 :arg2 ( person_name_2 :location ( world :mod world ) ) )
say-01 :arg0 ( person_name_0 :arg0-of ( have-org-role-91 :arg1 organization_name_1 :arg2 ( director :mod new :mod new ) ) :arg0-of ( own-01 :arg1 ( chain :mod home-needs ) ) :arg0-of ( have-org-role-91 :arg1 organization :arg2 ( director :mod new :mod new ) ) :arg0-of ( own-01 :arg1 ( chain :mod home-needs ) ) :arg0-of ( have-org-role-91 :arg1 organization :arg2 ( director :mod new ) ) :arg0-of ( have-org-role-91 :arg1 organization :arg2 ( director :mod new ) ) :arg0-of ( have-org-role-91 :arg1 organization :arg2 ( director :mod new ) ) :arg0-of ( have-org-role-91 :arg1 organization :arg2 ( director :mod new ) ) :arg0-of ( have-org-role-91 :arg1 organization :arg2 ( director :mod new ) ) :arg0-of ( have-org-role-91 :arg1 organization :arg2 ( director :mod new ) ) :arg0-of ( have-org-role-91 :arg1 organization :arg2 ( director :mod new ) ) :arg0-of ( have-org-role-91 :arg1 organization :arg2 ( director :mod new ) ) )
say-01 :arg0 person_name_0 :arg1 ( leaned :mod '' )
contrast-01 :arg1 ( have-03 :arg0 ( person :mod country_name_0 ) :arg1 ( year :mod ( good :degree most ) :location local-region_name_0 ) :time already ) :arg2 ( interesting :arg1 ( curriculum :mod football :mod ( interesting :degree very ) :mod football ) )
say-01 :arg0 ( file-01 :arg1 project ) :arg1 ( collect-01 :arg0 company :arg1 ( rate-entity-91 :arg1 ( more-than :op1 ( monetary-quantity monetary-quantity_num_0 :unit dollar ) ) :arg2 ( volume-quantity volume-quantity_num_1 :unit gallon ) ) ) :time ( year :mod three )
possible-01 :arg1 ( think-01 :arg0 ( person :location here ) :arg1 ( do-02 :arg0 person ) )
monitor-01 :arg0 ( person :arg0-of research-01 ) :arg1 ( level :mod ( a1c :mod hemoglobin ) :poss ( person :arg0-of ( have-rel-role-91 :arg2 patient ) ) ) :arg0-of ( reflect-01 :arg1 level :arg2 ( level :mod ( sugar :mod blood ) :arg1-of go-on-15 :location body ) ) :mod also
and :op1 ( capture-01 :arg1 he :location ( jar :mod jar ) ) :op2 ( banished :arg1 he :location ( somewhere :location ( somewhere :location somewhere ) ) )
contrast-01 :arg1 ( accept-01 :arg0 person_name_0 :arg1 ( potential :poss ( circle :mod vicious ) ) ) :arg2 ( believe-01 :arg0 person :arg1 ( improve-01 :arg1 ( area :location-of ( injure-01 :arg1-of report-01 :time ( season :mod last ) ) ) ) )
report-01 :arg0 ( and :op1 person_name_0 :op2 person_name_1 ) :arg1 location_name_3
or :op1 ( jumped :arg1 ( industry :name ( name :op1 dow ) :arg1-of average-04 ) :arg2 ( point :quant ( about :op1 num_0 ) ) ) :op2 ( percentage-entity percentage-entity_num_0 ) :op3 ( percentage-entity percentage-entity_num_1 ) :op4 ( percentage-entity percentage-entity_num_3 )
and :op1 ( gain-02 :arg0 person_name_0 :arg1 ( rate-entity-91 :arg1 num_0 :arg2 ( temporal-quantity temporal-quantity_num_0 :unit year ) ) ) :op2 ( fed :arg0 person :arg1 ( table :mod league ) )
have-part-91 :arg1 ( product :arg1-of ( prepare-01 :mod industrially ) ) :arg2 you
and :op1 ( help-01 :arg0 organization_name_0 :arg1 ( distribute-01 :arg0 organization :arg1 ( around :op1 city_name_1 ) :location ( around :op1 city_name_1 ) ) :arg2 ( rate-entity-91 :arg1 ( monetary-quantity monetary-quantity_num_0 :unit ( dollar :mod country ) ) :arg2 ( temporal-quantity temporal-quantity_num_1 :unit year ) ) ) :op2 ( key-02 :arg1 ( piece :mod ( rate-entity-91 :arg1 ( monetary-quantity monetary-quantity_num_2 :unit ( dollar :mod country ) ) :arg2 piece ) ) :arg2 piece :arg1-of ( cause-01 :arg0 ( obtain-01 :arg1 ( access-01 :arg1 ( space :mod advertising ) :location ( bus :mod advertising ) ) :location planet ) ) )
probable :domain ( find-01 :arg1 it ) :mod probable
see-01 :arg0 we :arg1 ( thing :mod cricket :arg1-of ( see-01 :arg0 we :location here :time ( start-01 :arg1 season ) ) ) :time ( win-01 :arg0 he :arg1 ( product-of :op1 num_0 :op2 ( bit :mod little ) ) )
multi-sentence :snt1 ( and :op1 ( find-01 :arg0 police :arg1 ( body :poss person_name_0 ) :manner handwritten ) :op2 ( message-01 :arg0 police :arg1 ( possible-01 :arg1 ( take-01 :arg0 i :arg1 it :arg3 ( paper :mod office :mod white ) :manner handwritten ) ) ) ) :snt2 ( and :op1 ( sorry-01 :arg1 i :degree so ) :op2 ( wish-01 :arg0 i :arg1 ( possible-01 :arg1 ( take-01 :arg0 i :arg1 it :direction back ) ) ) :op3 ( love-01 :arg0 i :arg1 person_name_1 :mod only ) :op4 ( say-01 :arg0 authority :arg1 ( letter :arg1-of ( sign-01 :arg0 authority ) :arg1-of ( sign-01 :arg0 authority ) ) ) )
and :op1 ( call-01 :arg0 person_name_0 :arg1 ( person :arg0-of ( have-org-role-91 :arg1 country_name_1 :arg3 ( apprentice-01 :arg0 person ) ) ) :arg2 ( speak-01 :arg0 person :arg1 ( immigrate-01 :arg0 person :arg1 ( campaign-01 :arg0 person :arg1 ( campaign-01 :arg0 person ) ) ) :mod still ) :time ( since :op1 ( converse-01 :arg0 person ) ) ) :op2 ( converse-01 :arg0 person :arg1 ( person :quant num_0 ) :arg2 ( temporal-quantity temporal-quantity_num_0 :unit year ) :mod still ) :time ( since :op1 ( he :mod even ) )
threaten-01 :arg0 ( company :arg0-of insure-02 ) :arg1 ( end-01 :arg1 ( and :op1 ( person :arg0-of ( have-org-role-91 :arg2 ( agent :mod travel-01 ) ) ) :op2 ( person :arg0-of ( have-org-role-91 :arg2 agent ) ) ) ) :time already :time ( come-12 :arg1 ( pay-01 :arg0 company ) )
compromise-01 :arg0 ( and :op1 price-01 :op2 security ) :arg1 it :time always
multi-sentence :snt1 ( love-01 :arg0 i :arg1 person_name_0 ) :snt2 ( person :mod only :domain she ) :snt3 ( love-01 :arg0 she :arg1 i :time ever )
multi-sentence :snt1 ( love-01 :arg0 i :arg1 person_name_0 ) :snt2 ( person :mod only :arg0-of ( love-01 :arg1 i :time ever ) :domain she )
cause-01 :arg1 ( expect-01 :polarity - :arg1 ( game :arg1-of ( go-01 :arg4 ( sets :quant num_0 ) :arg1-of possible-01 ) ) ) :location ( and :op1 ( location_name_0 :mod new ) :op2 ( humidity :arg1-of high-02 ) )
have-03 :arg0 sell-01 :arg1 ( line :mod future )
say-01 :arg0 i :arg1 ( and :op1 ( reverently :arg1 ( person :arg0-of ( have-org-role-91 :arg2 reverently ) ) ) :op2 ( zipped :arg0 person :arg1 ( uniforms :quant num_0 :name ( name :op1 jacket ) :arg1-of jacket ) ) :arg1-of quick-02 ) :time ( morning :mod good )
know-01 :polarity - :arg0 he :arg1 ( anything :topic horse )
know-01 :arg0 ( family :arg1-of extend-01 :arg2-of total-01 ) :arg1 ( have-manner-91 :arg1 amr-unknown )
reduce-01 :arg1 frame :concession ( increase-01 :arg1 ( rate :mod interest :arg1-of ( increase-01 :time ( date-entity month_date-entity_0 day_date-entity_0 ) ) :arg0-of ( affect-01 :arg1 ( premium :mod ( or :op1 heavy :op2 large ) :mod ( or :op1 heavy :op2 large ) :arg1-of ( start-01 :arg1-of ( possible-01 :polarity - ) ) ) ) ) )
multi-sentence :snt1 ( want-01 :arg0 ( background :mod ( kind :mod any ) :arg1-of ( want-01 :arg0 person_name_0 ) ) :arg1 ( convey-01 :arg0 background :arg1 ( image :mod ( kind :mod any ) :arg1-of ( want-01 :arg0 person ) ) ) ) :snt2 ( and :op1 ( remain-01 :arg1 ( report :mod discipline :arg1-of ( remain-01 :arg3 important :time ( age :poss ( and :op1 ( transmissions :medium television ) :op2 ( hotbed :mod particular ) ) ) :op2 ( swinging :arg1 ( and :op1 perspective :op2 betrayal ) ) ) ) ) )
decrease-01 :arg0 ( support-01 :arg0 she :arg1 man ) :arg1 ( and :op1 person_name_0 :op2 she ) :arg1-of significant-02 :mod only
and :op1 ( support-01 :arg0 man :arg1 man :arg1-of significant-02 ) :op2 ( lose-02 :arg0 person_name_0 :arg1 ( point :quant num_0 :mod only ) )
contrast-01 :arg2 ( country_name_0 :polarity - )
obligate-01 :arg2 ( find-01 :arg0 company :arg1 ( contract :mod new ) :arg1-of quick-02 )
mean-01 :arg1 it :arg2 ( and :op1 ( possible-01 :arg1 ( buy-01 :arg0 person :arg1 online ) ) :op2 ( possible-01 :arg1 ( make-05 :arg0 person :arg1 ( contexts :arg1-of differ-02 :example ( sofa :arg1 person ) ) ) ) )
allusions :arg0 ( person_name_0 :arg0-of ( rival-01 :arg1 movement-07 ) ) :arg1 movement-07 :arg1-of ( cause-01 :arg0 ( state-01 :arg0 person :arg1 ( nominate-01 :arg1 ( year :mod ( year :mod grammys ) ) ) ) )
contrast-01 :arg1 ( hints :arg1-of ( make-01 :location movement-07 ) ) :arg2 ( place-01 :arg1 ( nominees :arg1-of ( make-01 :location movement-07 ) ) :arg2 ( nominees :location ( album :part-of ( year :mod grammy ) ) ) )
station :mod report-01 :mod new :location ( sweep-06 :arg0 ( location_name_0 :location location_name_0 ) )
or :mode interrogative :op1 ( see-01 :arg0 you :arg1 you ) :op2 ( have-part-91 :arg1 you :arg2 ( event :mod news ) )
say-01 :arg0 ( government-organization :arg0-of govern-01 ) :arg1 ( money :purpose ( introduce-02 :arg1 ( system :mod electronic ) ) )
call-on-05 :arg0 it :arg1 ( person :arg0-of ( lead-02 :arg1 organization_name_0 ) ) :arg2 ( consider-02 :arg0 person :arg1 ( thing :arg2-of ( sanction-02 :arg1 ( and :op1 politician :op2 ( person :arg0-of ( have-org-role-91 :arg3 judge-01 ) ) :op3 ( person :arg0-of ( have-org-role-91 :arg3 judge-01 ) :arg1-of ( involve-01 :arg2 ( persecution :mod politics ) ) ) ) ) ) )
contrast-01 :arg1 ( increase-01 :arg0 minor :arg1 ( assess-01 :arg0 it :arg1 ( -rrb- :quant num_0 ) ) :mod minor :arg1-of ( compare-01 :arg2 ( and :op1 ( -lrb- :quant num_0 ) :op2 ( tuesday :quant num_1 ) ) ) ) :arg2 ( up :arg1 ( number :poss they ) :arg2 ( thursday :quant num_2 :mod last ) ) :time today
solve-01 :arg1 ( problem :mod this ) :arg2 ( wait-01 :arg1 ( problem :mod this ) :arg2 ( and :op1 ( wait-01 :arg1 problem :time ( until :op1 update-01 ) ) :op2 ( try-01 :arg1 ( try :arg1 problem ) ) ) )
multi-sentence :snt1 ( amount :mod incredible :quant-of ( and :op1 curves :op2 settings :op3 ( resource :name ( name :op1 thermex ) ) :op4 ( resource :name ( name :op1 thermex ) ) :op5 ( resource :name ( name :op1 thermex ) ) ) ) :snt2 ( allow-01 :arg1 ( respond-01 :arg0 ( and :op1 ( resource :name ( name :op1 thermex ) ) :op2 ( resource :name ( name :op1 roz?Ã­?itelnost ) ) ) :arg1 ( thing :arg1-of require-01 :arg1-of ( result-01 :arg2 ( stop-01 :arg1 reduce-01 ) ) :arg2-of ( result-01 :arg1 ( and :op1 ( stop-01 :arg1 reduce-01 ) :op2 ( need-01 :arg1 ( displacement :arg1 and ) ) ) ) ) ) :manner rapid )
oppose-01 :arg1 rule
gain-02 :arg0 wage-01 :arg1 ( sign :arg1-of picking )
contrast-01 :arg2 ( expensive :degree ( more :quant ( about :op1 1/2 ) ) :domain it )
contrast-01 :arg1 ( it :arg1-of ( say-01 :arg0 he ) ) :arg2 ( expensive :degree ( more :quant ( about :op1 1/2 ) ) :domain it )
and :op1 ( fall-01 :arg1 ( rate :mod ( employ-01 :polarity - ) ) :arg4 ( percentage-entity percentage-entity_num_0 ) :arg4 ( percentage-entity percentage-entity_num_3 ) :time ( month :mod previous ) ) :op2 ( close-10 :arg1 rate :arg2 level :arg1-of ( cause-01 :arg0 ( consider-01 :arg0 government-organization_name_0 :arg1 ( employ-01 :mod full ) ) ) )
recommend-01 :arg0 ( lady :mod country_name_0 ) :arg1 person_name_1
and :op2 ( and :op1 ( comfortable-02 :arg0 ( capital :mod especially ) :arg1 ( and :op1 country_name_0 :op2 organization_name_1 ) :arg1-of ( cause-01 :arg0 ( control-01 :arg0 ( and :op1 country :op2 organization ) :arg1 ( state :arg1-of ( include-91 :arg2 ( state :location continent_name_2 ) :arg3 most ) ) :mod actual ) ) ) )
say-01 :arg0 ( person :arg1-of ( employ-01 :manner increase-01 ) ) :arg1 ( employ-01 :arg0 person_name_0 :arg1 person :arg1-of increase-01 )
say-01 :arg0 person_name_0 :arg1 ( increase-01 :arg1 ( artisans :arg1 person ) :arg1-of increase-01 )
have-concession-91 :arg1 ( solve-01 :arg1 ( thing :arg2-of solve-01 :mod this :mod only ) ) :arg2 ( praise-01 :arg0 ( person :mod country_name_0 ) :arg1 ( effort :poss ( and :op1 country :op2 country_name_1 ) ) )
vow-01 :arg0 person_name_0 :arg1 ( avoid-01 :arg0 person :arg1 person_name_1 )
confirm-01 :arg0 he :arg1 ( affect-01 :arg0 ( diets :mod unhealthy ) :arg1 ( system :mod immune :poss child ) ) :arg2-of ( fortunate-01 :polarity - ) :mod also
name-01 :arg0 dog :arg1 ( person :arg0-of ( live-01 :location ( house :mod product_name_0 ) ) ) :arg2 ( shoulder :part-of ( person_name_0 :arg0-of ( live-01 :location ( house :mod game_name_0 ) ) ) )
consider-02 :arg0 ( person :arg0-of ( transfer-01 :arg1 ( transfer-01 :arg1 ( headquarters :poss group ) ) ) ) :arg1 ( location :location organization_name_0 ) :manner ''
include-91 :arg1 ( percentage-entity percentage-entity_num_0 ) :arg2 ( revenue :poss group )
think-01 :polarity - :arg0 i :arg1 ( undermine-01 :arg0 it :arg1 company_name_0 :manner way )
take-10 :arg0 it :arg1 ( temporal-quantity temporal-quantity_num_0 :unit day )
judge-01 :arg1 ( organization :mod street :mod street ) :time then
person_name_0 :arg0-of ( enrich-01 :arg1 world ) :arg0-of ( enrich-01 :arg1 world )
contrast-01 :arg1 ambitious :arg2 ( dreamers :arg1 we )
right-06 :mode interrogative :arg1 ( person :arg0-of ( say-01 :arg1 ( devil :domain ( devil :poss ( person :arg0-of ( favor-01 :arg1 country_name_0 ) ) ) ) ) ) :arg2 ( and :op1 aggression :op2 equality :op3 violence )
and :op1 ( focus-01 :arg0 he :arg2 ( and :op1 ( organisers :arg1 organization_name_0 ) :op2 ( integrity :poss organization ) ) ) :op2 ( base-02 :arg1 ( believe-01 :arg1 ( have-03 :arg0 they :arg1 ( campaign-01 :arg0 he :arg1 ( against :op1 ( person_name_1 :time late ) ) :time ( maintain-01 :arg1 race ) ) ) ) :arg2 he :time ( day :mod last ) )
and :op1 ( have-03 :arg0 organization_name_0 :arg1 ( thing :arg1-of ( state-01 :arg0 organization_name_1 ) ) ) :op2 ( focus-01 :arg0 organization :arg2 ( provide-01 :arg0 revenue :arg1 ( thing :arg2-of ( solve-01 :arg1 ( technology :arg1-of integrate-01 :mod technology :arg1-of integrate-01 ) ) ) ) )
multi-sentence :snt1 ( obligate-01 :arg1 ( and :op1 person_name_1 :op2 ( person_name_2 :arg0-of ( have-org-role-91 :arg2 ( president :mod vice ) ) ) ) :arg2 ( and :op1 ( person_name_2 :arg0-of ( have-org-role-91 :arg2 '' ) ) :op2 ( person_name_2 :arg0-of ( have-org-role-91 :arg1 country :arg2 opponent ) ) ) :time ( after :op1 ( date-entity :mod soon ) :location location_name_0 ) ) :snt2 ( say-01 :arg0 person_name_3 :arg1 ( and :op1 ( have-03 :arg0 person_name_4 :arg1 ( stretch :quant num_0 ) ) :op2 ( obligate-01 :arg1 i :arg2 ( befriend-01 :arg0 i :arg1 person :mod too ) ) ) )
direct-01 :arg0 ( person_name_0 :arg1-of ( direct-01 :arg0 ( person :mod original ) ) ) :arg1 ( note :quant num_0 ) :mod original :time current
open-01 :arg1 ( person :arg0-of drive-01 ) :time ( date-entity year_date-entity_0 )
have-part-91 :arg1 ( prepare-02 :arg2 annexes ) :mod essential :mod also
multi-sentence :snt1 ( recommend-01 :arg1 ( confident-01 :arg1 ( thing :arg1-of ( report-01 :arg0 ( thing :arg1-of ( report-01 :arg0 ( thing :arg1-of ( report-01 :arg0 ( thing :arg1-of ( report-01 :arg0 ( thing :arg1-of ( report-01 :arg0 ( thing :arg1-of ( report-01 :arg0 ( thing :arg1-of ( report-01 :arg0 ( thing :arg1-of ( report-01 :arg0 ( thing :arg1-of ( report-01 :arg0 ( thing :arg1-of ( report-01 :arg0 ( thing :arg1-of ( report-01 :arg0 ( thing :arg1-of ( report-01 :arg0 ( thing :arg1-of ( report-01 :arg0 ( thing :arg1-of ( report-01 :arg0 ( thing :arg1-of ( report-01 :arg0 ( thing :arg1-of ( report-01 :arg0 ( thing :arg1-of ( report-01 :arg0 ( thing :arg1-of ( report-01 :arg0 ( thing :arg1-of ( report-01 :arg0 ( thing :arg1-of ( report-01 :arg0 ( thing :arg1-of ( report-01 :arg0 ( thing :arg1-of ( report-01 :arg0 ( thing :arg1-of ( report-01 :arg0 country_name_0 ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) )
land-01 :arg1 person_name_0 :location ( elect-01 :mod nation )
multi-sentence :snt1 ( resemble-01 :mode interrogative :arg1 ( person_name_0 :arg1-of ( resemble-01 :arg2 ( person_name_1 :arg0-of ( have-org-role-91 :arg2 blair ) ) ) ) :arg2 ( person :arg0-of ( have-org-role-91 :arg1 blair ) ) :degree more ) :snt2 ( routine :mode interrogative :time ( since :op1 ( admit-01 :arg0 person :arg1 ( principle :mod ( constitution :arg1-of ( sunk :arg0 ( and :op1 ( person :mod country ) :op2 ( person :arg0-of ( vote-01 :arg1 dutch ) ) :op3 ( person :arg0-of ( vote-01 :arg1 ( card :name ( name :op1 dutch ) ) ) ) ) ) ) ) ) ) )
try-01 :arg0 ( they :quant some ) :arg1 ( mark-01 :arg0 they :arg1 ( man :arg0-of ( opine-01 :arg1-of frequent-02 ) ) )
cause-01 :arg0 ( interest-01 :arg1 public ) :arg1 ( go-01 :arg1 ( date :quant more ) :arg4 sell-01 :time ( until :op1 ( date-entity year_date-entity_0 month_date-entity_0 ) ) )
and :op1 ( take-01 :mode imperative :arg0 you :arg1 time ) :op2 ( waste :domain ( or :op1 material :op2 correction ) )
and :op2 ( be-temporally-at-91 :arg1 ( figure :mod this ) :arg2 ( stage :mod early ) )
say-01 :arg0 organization_name_0 :arg1 ( fall-01 :arg1 they :time immediate :arg1-of ( cause-01 :arg0 increase-01 ) )
multi-sentence :snt1 ( -lrb- :mode interrogative :mod urban :location location_name_0 ) :snt2 ( crucial :domain ( -rrb- :arg0 ( person :arg0-of ( have-org-role-91 :arg2 member ) ) :arg1 ( thing :arg1-of ( conclude-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg1 ( government-organization :arg0-of govern-01 ) :arg2 member ) ) ) :arg0-of ( have-org-role-91 :arg1 ( government-organization :arg0-of govern-01 ) :arg2 member ) :arg0-of ( have-org-role-91 :arg1 ( government-organization :arg0-of govern-01 ) :arg2 member ) :arg0-of ( have-org-role-91 :arg1 ( government-organization :arg0-of govern-01 ) :arg2 member ) :arg0-of ( have-org-role-91 :arg1 ( government-organization :arg0-of govern-01 ) :arg2 member ) ) :topic ( thing :arg1-of update-01 ) ) )
cause-01 :arg0 map :arg1 ( put-01 :arg0 ( and :op1 ( person_name_1 :arg0-of ( have-org-role-91 :arg1 government-organization :arg2 ( chair :mod government-organization_name_0 ) ) ) :op2 ( person :arg0-of ( have-rel-role-91 :arg1 person :arg2 colleagues ) ) ) :arg1 ( interest :mod economy :poss ( nation :mod all ) ) )
cause-01 :arg0 map :arg1 ( put-01 :arg0 ( and :op1 ( person_name_1 :arg0-of ( have-org-role-91 :arg1 government-organization :arg2 ( chair :mod government-organization_name_0 ) ) ) :op2 ( person :arg0-of ( have-rel-role-91 :arg1 person :arg2 colleagues ) ) ) :arg1 ( interest :mod economy :poss ( nation :mod all ) ) )
and :op1 ( know-01 :arg0 i :arg1 ( frustrating :degree very :domain it ) ) :op2 ( sad-02 :arg0 ( event :time current ) :degree really )
say-01 :arg0 company :arg1 ( expect-01 :arg0 company :arg1 ( grow-01 :arg1 profit-01 :time ( year :mod previous ) :arg1-of ( cause-01 :arg0 ( and :op1 ( cut-02 :arg1-of cost-01 ) :op2 ( revenue :arg1-of ( high-02 :degree more ) ) :op3 ( grow-01 :arg1 revenue :location online ) ) ) ) :mod still )
multi-sentence :snt1 ( cause-01 :arg1 ( listen-01 :polarity - :arg0 we :arg1 ( and :op1 ( thing :arg2-of ( name-01 :arg1 ( person :arg0-of ( have-org-role-91 :arg2 station ) ) ) ) :op2 ( person :arg0-of ( have-org-role-91 :arg2 head-of-state ) ) ) ) ) :snt2 ( or :op1 ( mÃ­rova :mode interrogative ) :op2 ( after :arg0 i :arg1 i ) )
possible-01 :arg1 ( handle-01 :arg0 ( person :arg0-of ( handle-01 :arg1 ( press :mod press :poss we ) ) ) :arg1 ( rate-entity-91 :arg1 ( monetary-quantity monetary-quantity_num_0 :unit pound ) :arg2 ( temporal-quantity temporal-quantity_num_1 :unit year ) ) )
say-01 :arg0 person_name_0 :arg1 ( expensive :domain tunnel :degree ( more :quant half ) :condition ( use-01 :arg1 measure-01 :arg2 ( person :quant num_0 :mod ( expensive :degree more ) ) :time ( early :degree more ) ) )
understand-01 :polarity - :arg0 i :arg1 ( case :mod ( arrange-01 :arg1 artificial ) :mod this ) :time ( before :op1 ( primÃ¡tor :arg0 he :arg1 ( project :arg1-of ( resemble-01 :arg2 ( project :time ( year :mod previous ) ) ) ) ) )
cause-01 :arg0 ( want-01 :arg0 they :arg1 ( get-01 :arg0 they :arg1 ( support-01 :arg0 they :arg1 future :arg1-of possible-01 ) ) ) :arg1 ( organization_name_0 :domain they :time ( time :mod prime ) )
legacy :arg0 ( and :op1 ( school :poss we ) :op2 ( festival :poss we ) ) :arg1 ( legacy :poss and )
and :op1 ( g :quant num_0 :arg0-of ( contain-01 :arg1 ( differ-02 :arg1 weight ) ) ) :op2 ( negligible :arg1 news :degree really )
say-01 :arg1 ( come-01 :arg1 ( person_name_0 :mod this ) :arg4 i :time now ) :arg2 ( say-01 :arg0 person :arg1 ( voice :poss chief ) )
continue-01 :arg1 ( person_name_0 :mod honest ) :manner honest :time ( over :op1 game ) :mod also
go-02 :arg0 i :arg4 ( and :op1 ( repair-01 :arg1 ( and :op1 ( equipment :mod new ) :op2 ( equipment :mod new ) ) ) :op2 ( reconstruct-01 :arg1 ( and :op1 ( equipment :mod new ) :op2 ( equipment :mod new ) ) ) ) :time ( after :op1 now :quant ( up-to :op1 ( temporal-quantity temporal-quantity_num_0 :unit year ) ) )
reject-01 :arg0 ( person :arg0-of ( author-01 :arg1 propose-01 ) :arg0-of ( reject-01 :arg1 ( criticize-01 :arg1 ( person :arg0-of oppose-01 ) ) ) ) :arg1 ( say-01 :arg0 ( person :arg0-of ( author-01 :arg1 propose-01 ) ) :arg1 ( counted :polarity - :arg0 person :arg1 ( facade :mod pink :arg0-of ( give-01 :arg1 ( project :topic ( treat-01 :arg1 ( person :mod white :mod white ) :arg2 nicknamed ) ) ) ) ) )
and :op1 ( hear-01 :arg1 girl ) :op2 ( talk-01 :arg0 girl :arg1 ( thing :manner-of ( and :op1 ( use-01 :arg0 defendant :arg1 ( computer :poss girl ) ) :op2 ( possible-01 :arg1 ( talk-01 :arg0 defendant :arg2 girl ) ) ) :op3 ( look-01 :arg0 defendant :arg1 ( young :degree ( more :degree much ) :compared-to he ) ) ) )
contrast-01 :arg2 ( do-02 :arg0 ( person :quant some :arg0-of ( try-01 :arg1 ( downloading :arg0 person :arg1 person_name_0 :arg2 ( top :part-of poll-01 ) ) ) ) :arg1 ( -rrb- :arg0 person :degree ( far :degree so ) ) )
contrast-01 :arg2 ( question-03 :arg0 ( person :arg0-of research-01 :quant several ) :arg1 ( attend-02 :arg0 data :arg1 ( between :op1 ( person :arg1-of expert-01 ) :op2 ( industry :consist-of tobacco ) :quant some ) ) )
and :op1 ( massive :domain shop ) :op2 ( take-10 :arg0 ( clambered :arg0 shop :arg1 you ) :arg1 you )
contrast-01 :arg1 ( increase-01 :polarity - :arg1 house ) :arg2 ( joy :arg0 person_name_0 :arg1 ( gas :arg1 gas :arg2 ( prepare-01 :arg1 food :beneficiary ( person :quant num_0 ) ) ) :time subsequent )
person_name_0
want-01 :polarity - :arg0 ( and :op1 country_name_0 :op2 country_name_1 :op3 country_name_2 ) :arg1 ( hear-01 :arg0 and ) :mod still
want-01 :polarity - :arg0 ( and :op1 country_name_0 :op2 country_name_1 :op3 country_name_2 :op4 country_name_3 ) :arg1 ( hear-01 :arg0 and :arg1 and ) :mod still
obligate-01 :arg1 we :arg2 ( and :op1 ( live-01 :arg0 he :frequency occasional ) :op2 ( live-01 :arg0 he :destination ( and :op1 occasional :op2 consciousness ) :arg1-of ( add-01 :arg0 we :mod only ) ) )
see-01 :arg1 ( and :op1 ( judge-01 :arg0 ( and :op1 ( person :arg0-of ( lead-02 :arg1 ( person :arg0-of lead-02 ) ) ) :op2 ( person :arg0-of ( lead-02 :arg1 they ) ) :op3 ( position-02 :arg0 person :arg2 ( person :mod other :arg0-of ( have-org-role-91 :arg2 mp ) ) ) ) :arg1 ( and :op1 ( become-01 :arg1 person :arg2 caricature ) :op2 ( require-01 :arg0 person :arg1 reform-01 ) ) ) :op2 ( require-01 :arg0 person :arg1 reform-01 ) ) :time ( since :op1 ( see-01 :arg1 ( person :arg1-of ( broadcast-01 :arg0 ( and :op1 ( person :arg0-of lead-02 ) :op2 ( person :arg0-of ( lead-02 :arg1 they ) ) ) :ord ( ordinal-entity ordinal-entity_num_0 ) ) ) ) )
end-01 :arg0 they :arg1 ( and :op1 ( decline-01 :arg1 ( percentage-entity percentage-entity_num_0 ) ) :op2 ( decline-01 :arg1 ( percentage-entity percentage-entity_num_0 ) :time ( date-entity month_date-entity_0 day_date-entity_0 ) ) )
do-02 :arg0 chief :arg1 ( well :degree very ) :time ( pull-01 :arg0 he :arg1 i :arg2 ( squad :mod squad ) )
do-02 :arg0 chief :arg1 ( well :degree very ) :time ( pull-01 :arg0 he :arg1 i :arg2 ( out-06 :arg1 i :arg2 platoon ) )
ill :arg0 doctor :arg1 ( space :purpose ( activity-06 :arg1 disease ) ) :mod passivity
tell-01 :arg2 ( wiped :mod alert-01 ) :time then
measure-01 :arg0 ( event :location ( around :op1 ( area :location ( relative-position :op1 ( area :mod mountain ) ) ) ) :location ( below :op1 ( area :mod mountain ) ) ) :arg1 ( measure-01 :arg1 ecrins :arg2 ( distance-quantity distance-quantity_num_0 :unit meter ) )
possible-01 :arg1 ( tell-01 :arg0 i :arg1 ( tolerance :quant num_0 ) :arg2 tolerance ) :time ( run-01 :arg0 controller :arg1 ( finger :part-of rivets ) )
contrast-01 :arg2 ( warn-01 :arg0 i :arg1 ( possible-01 :arg1 ( set-02 :polarity - :arg0 ( setting :arg0 ( regulate-01 :arg0 ( government-organization :arg0-of govern-01 ) ) ) :arg1 fee :arg1-of ( accord-02 :arg2 constitution ) ) ) )
prepare-02 :arg0 we :arg1 boy :arg2 ( act-02 :arg0 boy ) :arg1-of ( promise-01 :arg0 person_name_0 )
rise-01 :arg1 ( sports :mod jd ) :arg2 ( percentage-entity percentage-entity_num_0 ) :time ( after :op1 ( announce-01 :arg0 company :arg1 ( rate-entity-91 :arg1 ( percentage-entity percentage-entity_num_0 ) :arg2 ( temporal-quantity temporal-quantity_num_2 :unit year ) ) :time ( before :op1 ( tax-01 :arg3 ( tax-01 :arg3 ( monetary-quantity monetary-quantity_num_2 :unit ( yuan :mod renminbi ) ) ) ) ) ) )
give-01 :arg0 ( person :arg0-of ( have-rel-role-91 :arg1 i :arg2 parent ) ) :arg1 trust-01 :arg2 ( person :arg0-of ( have-rel-role-91 :arg1 i :arg2 parent ) )
and :op1 ( have-rel-role-91 :arg0 she :arg1 she :arg2 friend :location ( school :arg1-of high-02 ) ) :op2 ( kid :mod ( old :degree great ) :arg0-of ( tutored :arg1 she :duration ( few :op1 ( temporal-quantity temporal-quantity_num_0 :unit year ) ) ) :domain she )
match-03 :mod league :mod classic :mod classic :domain it
possible-01 :arg1 it
possible-01 :arg1 ( fatal :arg1 it :arg2 ( person :arg0-of ( have-rel-role-91 :arg1 i :arg2 child ) ) )
believe-01 :arg0 i :arg1 ( believe-01 :arg0 i :arg1 ( organization_name_1 :poss organization_name_1 ) )
and :op1 ( have-frequency-91 :arg2 ( say-01 :arg1 ( start-01 :arg1 ( treat-01 :arg1 disease :arg2 ( soon :degree more ) ) ) ) ) :op2 ( possible-01 :arg1 ( have-03 :arg0 doctor :arg1 something :purpose ( do-02 :arg0 doctor :arg1 something ) ) ) :location ( sclerosis :quant multiple )
multi-sentence :snt1 ( age-01 :arg1 ( person :quant multiple ) :arg2 ( temporal-quantity temporal-quantity_num_0 :unit year ) ) :snt2 ( possible-01 :arg1 ( influence-01 :arg0 doctor :degree more ) ) :li num_0
contrast-01 :arg2 ( become-01 :arg1 government-organization_name_0 :arg2 ( authority :mod money :location worldwide ) )
suggest-01 :arg0 person_name_0 :arg1 ( wrong-04 :arg1 ( referee :mod italian ) )
multi-sentence :snt1 ( look-02 :arg0 he :arg1 good ) :snt2 ( and :op1 ( possible-01 :polarity - :arg1 ( good :degree more :domain he ) ) :op2 ( manage-02 :arg0 he :arg1 ( bring-01 :arg0 he :arg1 it :arg2 game ) ) )
and :op1 ( look-01 :arg0 he :arg1 ( practice :arg1-of practice-01 ) ) :op2 ( possible-01 :polarity - :arg1 ( manage-02 :arg0 he :arg1 ( bring-01 :arg0 he :arg1 it :arg2 game ) ) )
multi-sentence :snt1 ( and :op1 ( look-02 :arg1 good ) :op2 ( possible-01 :polarity - :arg1 ( avoid-01 :arg1 ( good :degree more ) ) ) ) :snt2 ( and :op2 ( manage-02 :arg0 he :arg1 ( pass-03 :arg1 ( match-03 :mod next ) ) ) )
multi-sentence :snt1 ( look-02 :mode imperative :arg0 you :arg1 good ) :snt2 ( and :op1 ( blowing :mode imperative :arg0 you :arg1 ( good :degree more ) ) :op2 ( manage-02 :arg0 you :arg1 ( get-05 :arg1 you :arg2 match-03 ) ) )
say-01 :arg0 person_name_0 :arg1 ( and :op1 ( terrify-01 :arg0 film :arg1 film ) :op2 ( terrify-01 :polarity - :arg0 thing :arg1 show-04 ) ) :time ( talk-01 :arg0 we :arg1 diversity )
and :op1 ( run-01 :arg0 person_name_0 :arg1 ( base :quant num_0 ) ) :op2 ( gain-02 :arg0 person :arg1 ( and :op1 ( hits :quant num_1 ) :op2 ( strike-01 :quant num_1 ) ) )
compete-01 :arg1-of ( cause-01 :arg0 ( possible-01 :polarity - :arg1 ( overcome-01 :arg0 ( person :quant none ) :arg1 ( obstacle :quant all :location track ) ) :mod just ) ) :location ( compete-01 :arg1-of ( finish-01 :arg0 ( season :quant none ) :mod just ) )
something :arg1-of significant-02 :mod ( or :op1 ( bizarre :arg1-of significant-02 ) :op2 bizarre :op3 record-01 :location ( place :location-of ( live-01 :arg0 you ) ) )
say-01 :arg1 ( explain-01 :arg0 ( person_name_0 :arg0-of ( have-org-role-91 :arg2 mayor ) ) :arg1 ( person :arg0-of ( have-org-role-91 :arg2 mayor ) ) ) :arg2 ( '' :location ( autumn :name ( name :op1 suction :op2 strainer :op3 strainer :op4 strainer :op5 strainer :op6 strainer :op7 strainer ) ) )
and :op1 ( go-02 :arg0 i :arg4 home :time tonight ) :op2 ( sleep-01 :arg0 i :mod as-well :mod as-well )
multi-sentence :snt1 ( feel-01 :arg0 i :arg1 ( hard-02 :arg1 it :degree very ) ) :snt2 ( sorry-01 :arg1 i :degree very )
have-concession-91 :arg1 ( complain-01 :arg0 organization :arg1 ( period :mod ( rate :mod interest ) ) ) :arg2 ( organization_name_0 :arg0-of ( have-03 :arg1 money ) )
say-01 :arg0 i :arg1 ( objective :domain i :mod really )
and :op1 ( counts :arg0 ( and :op1 ( team :quant num_0 ) :op2 ( person_name_0 :arg0-of ( have-org-role-91 :arg2 forty ) ) ) :arg1 ( and :op1 ( team :quant num_0 ) :op2 ( person :arg0-of ( have-org-role-91 :arg1 ( team :name ( name :op1 forty ) ) ) ) ) ) :op2 ( sunday :arg0 and )
and :op1 ( publish-01 :arg0 ( agency :mod country_name_0 ) :arg1 ( report :name ( name :op1 '' ) :mod ( satellite :name ( name :op1 '' ) ) ) :time ( month :mod last ) ) :op2 ( describe-01 :arg0 agency :arg1 report-01 :arg2 ( review-01 :arg1 ( thing :arg0-of evidence-01 ) :mod comprehensive ) )
go-02 :arg0 ( person :arg0-of ( have-rel-role-91 :arg2 daughter ) ) :arg4 sword :arg1-of regular-02 :time already
expect-01 :arg0 ( person :arg0-of analyze-01 :frequency :age ) :arg1 ( monetary-quantity monetary-quantity_num_0 :unit ( dollar :mod country_name_0 ) )
expect-01 :arg0 ( person :quant num_0 :arg0-of analyze-01 ) :arg1 ( monetary-quantity monetary-quantity_num_1 :unit ( dollar :mod country_name_0 ) )
say-01 :arg1 ( and :op1 ( come-01 :arg1 ( person :arg0-of ( have-org-role-91 :arg2 '' ) ) ) :op2 ( say-01 :arg0 person :arg1 waiter ) ) :arg2 person_name_0
taste :polarity - :arg0 it :arg1 good :mod certain :time today
and :op1 ( person_name_0 :prep-on ( list :consist-of injure-01 ) :arg1-of ( cause-01 :arg0 ( muscle :location ( shoulder :part-of person ) ) ) ) :op2 ( recommend-01 :arg1 ( get-05 :arg1 person :arg2 game ) )
exemplify-01 :arg0 ( or :op1 person_name_0 :op2 ( maria :mod zÃ¡lo?nÃ­kovi ) ) :mod particular
multi-sentence :snt1 ( cause-01 :arg0 that :arg1 ( and :op1 ( stress-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg1 organization_name_0 :arg2 official ) ) :arg1 ( recommend-01 :arg1 ( focus-01 :polarity - :arg0 ( person :arg0-of invest-01 ) :arg2 ( person :arg0-of invest-01 ) :arg1-of ( hard-02 :degree so ) ) ) ) :op2 ( recommend-01 :arg1 ( focus-01 :polarity - :arg0 ( person :arg0-of invest-01 ) :arg2 ( person :arg0-of invest-01 ) ) ) ) ) :snt2 ( contrast-01 :arg1 ( recommend-01 :arg1 ( focus-01 :polarity - :arg0 ( person :arg0-of invest-01 ) :arg2 ( person :arg0-of invest-01 ) ) ) )
exprimÃ¡tor :arg2 court
have-concession-91 :arg1 ( give-01 :arg0 channel :arg1 ( hand :mod right ) :arg2 they ) :arg2 ( channel :mod additional :mod honest )
think-01
have-concession-91 :arg2 ( suggest-01 :arg0 ( surveys :mod new ) :arg1 ( measure-02 :polarity - :arg0 ( person :arg0-of ( have-rel-role-91 :arg2 mother ) ) :arg1 ( follow-02 :arg0 person :arg1 ( person :arg0-of ( have-rel-role-91 :arg2 mother ) ) ) :mod ( only :polarity - ) ) )
contrast-01 :arg2 ( dramatic :polarity - :degree so :domain effect :time ( as-soon-as :op1 ( increase-01 :arg1 increase-01 ) ) )
and :op1 ( hold-01 :arg0 ( police :mod country_name_0 ) :arg1 ( border-01 :arg1 police :arg2 ( organization_name_1 :arg1-of ( hold-01 :arg0 country ) ) :quant short ) ) :op2 ( make-02 :arg0 police :arg1 ( record :arg1-of ( reverse-01 :arg1-of possible-01 ) ) :arg1-of ( cause-01 :arg0 ( knock-01 :arg0 dog :arg1 refugee :arg1-of allege-01 ) ) )
and :op1 ( possible-01 :arg1 ( read-01 :arg0 scientist ) ) :op2 ( write-01 :arg0 scientist :arg1 ( activity-06 :arg1 brain ) )
contrast-01 :arg1 ( feed-01 :arg0 i :arg2 he :degree bit ) :arg2 ( close-01 :arg0 i :arg1 door :time soon :arg1-of ( cause-01 :arg0 ( think-01 :arg0 he :arg1 ( play-01 :arg0 he :location ( outside :op1 ( tiger :mod hutch :mod rabbit ) ) ) ) ) )
say-01 :arg0 coach :arg1 ( wait-01 :arg1 ( wait-01 :arg2 ( style :mod aggressive ) ) )
and :op1 ( express-01 :arg0 ( person :arg0-of ( address-02 :arg1 ( issue-02 :arg0 ( address-02 :arg1 violence ) ) ) ) :arg1 person_name_0 :time ( after :op1 ( attack-01 :quant num_0 :arg0 terrorist ) ) :mod also ) :op2 ( respond-01 :arg0 person :arg1 ( respond-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg1 ( chain :name ( name :op1 uncontrollable ) ) :arg2 ( event :mod uncontrollable ) ) ) :manner violent ) )
contrast-01 :arg2 ( latecoere :arg1 ( capacity :mod produce-01 ) :location country_name_0 )
see-01 :arg0 i :arg1 ( thing :quant all :arg1-of ( include-91 :arg2 ( game :poss they ) ) ) :time ( time :mod that )
accident :mod just
disrupt-01 :arg0 ( exist-01 :arg1 they ) :arg1 ( exist-01 :arg1 they ) :time ( over :op1 time )
stand-01 :arg1 organization_name_0 :arg2 ( alone :degree almost ) :arg1-of ( cause-01 :arg0 ( have-03 :arg0 organization :arg1 ( bias-01 :arg1 woman :arg2 ( woman :arg2-of ( include-01 :arg1 ( and :op1 ( person :arg0-of ( have-org-role-91 :arg2 executive ) ) :op2 ( person :arg0-of ( have-org-role-91 :arg2 executive ) ) ) ) ) ) ) )
stand-01 :arg1 organization_name_0 :arg2 ( alone :degree almost ) :arg1-of ( cause-01 :arg0 ( have-03 :arg0 organization :arg1 ( bias-01 :arg1 woman :arg2 woman :arg2-of ( include-01 :arg1 ( and :op1 ( person :arg0-of ( have-org-role-91 :arg2 executive ) ) :op2 ( person :arg0-of ( have-org-role-91 :arg2 ( director :mod finance ) ) ) ) ) ) ) )
keep-01 :arg1 ( person :location territory )
recommend-01 :arg1 ( show-01 :arg0 all :arg1 ( information :poss they ) ) :arg1-of ( cause-01 :arg0 ( effort :purpose ( fail-01 :arg1 i :arg2 ( fail-01 :arg1 i :degree utter ) ) ) )
and :op2 ( be-located-at-91 :arg1 ( person_name_0 :mod all ) :arg2 swim-01 )
die-01 :arg1 ( woman :quant num_0 ) :source location_name_0 :time ( after :op1 ( swallowing :arg0 ( device :mod sanitation :arg0-of ( contain-01 :arg1 ( ingredient :mod toxic ) ) :arg0-of ( contain-01 :arg1 amphetamine ) ) ) )
explain-01 :arg0 he :arg1 ( strengthen-01 :arg1 ( sell-01 :arg1 internet ) :time ( before :op1 now :quant ( temporal-quantity temporal-quantity_num_0 :unit year ) ) :time ( start-01 :arg0 customer :arg1 ( use-01 :arg0 customer :arg1 ( phone :arg1-of mobile-02 :poss sell-01 ) :arg2 ( purchase-01 :arg0 customer :arg1 phone ) ) ) )
kill-01 :arg1 ( person :quant num_0 ) :time ( after :op1 ( fire-01 :arg0 policeman :arg1 ( cat :mod rubber ) :location ( person :arg0-of protest-01 :location country_name_0 ) ) )
and :op1 ( divide-02 :arg1 ( company :quant num_0 ) :arg2 ( company :quant num_0 ) :time ( late :op1 ( year :mod this ) :degree more ) ) :op2 ( quote-01 :arg1 ( and :op1 ( exchange-01 :arg1 computer ) :op2 ( trade-01 :arg2 computer ) ) :arg2 ( and :op1 computer :op2 ( operation :name ( name :op1 faster-growing :op2 faster-growing :op3 printers ) :poss corporation ) ) )
split-01 :arg1 ( year :mod this :time ( late :op1 ( year :mod this ) :degree more ) ) :arg2 ( company :quant num_0 :arg1-of separate-02 :arg1-of ( list-01 :arg2 ( and :op1 ( exchange-01 :arg1 stock ) :op2 ( trade-01 :arg1 computer :location ( and :op1 computer :op2 ( operation :mod service :mod service :poss corporation ) :poss corporation ) ) ) ) )
accident :time accident :location ( middle :part-of ( and :op1 ( wind :arg1-of strong-02 ) :op2 rain-01 ) :time ( before :op1 now :quant ( few :op1 ( temporal-quantity temporal-quantity_num_0 :unit day ) :mod just ) ) ) :arg1-of ( cause-01 :arg0 ( obligate-01 :arg1 ( person :quant ( few :op1 ( temporal-quantity temporal-quantity_num_1 :unit day ) ) ) :arg2 ( person :mod country_name_0 :mod ( good :mod every ) :mod ( good :mod every ) ) ) )
suitable-04 :arg1 it :arg2 ( and :op1 frying :op2 grilling ) :mod also :arg1-of ( cause-01 :arg0 ( have-03 :arg0 it :arg1 ( degree :quant ( degree :arg1-of high-02 ) ) ) )
claim-01 :arg0 organization_name_0 :arg1 ( recommend-01 :arg1 ( begin-01 :arg0 ( and :op1 person :op2 ( doctor :poss and ) ) :arg1 ( take-01 :arg0 and :arg1 weight :manner serious ) :time ( after :op1 ( drop-01 :arg1 ( bmi :quant num_0 ) ) ) ) ) :mod also
remain-01 :arg1 line :arg3 ( percentage-entity percentage-entity_num_0 :arg3-of ( include-91 :arg2 ( sell-01 :arg1-of plan-01 :arg1-of plan-01 ) ) )
say-01 :arg0 she :arg1 ( get-03 :arg1 he :arg2 ( get-01 :arg0 he :arg1 it ) ) :arg1-of ( say-01 :arg0 she )
construct-01 :arg1 stem :mod controversy
need-01 :arg0 we :arg1 ( limit-01 :arg0 we :arg1 ( use-01 :arg1 force-04 ) )
play-02 :arg0 he :arg1 ( game :mod league :quant ( multiple :op1 num_0 ) ) :mod only :time ( before :op1 now :duration ( temporal-quantity temporal-quantity_num_0 :unit year ) )
test :arg1 ( television :name ( name :op1 czech :op2 television :op3 television :op4 television :op5 television :op6 television :op7 television ) )
come-01 :arg1 ( organization_name_0 :mod ( society :mod brazilian ) ) :purpose ( try-01 :arg0 organization :arg1 ( regain-01 :arg0 organization :arg1 ( knowledge :topic ( importance :domain ( feed-01 :arg0 woman :arg2 ( image :mod ( food :arg1 ( food :mod junk ) :arg1-of breast ) ) ) ) ) ) ) :manner shock-01
beside :arg0 ( few :op1 ( temporal-quantity temporal-quantity_num_0 :unit month ) :mod only ) :arg1 ( line :purpose ( assembly :arg0-of ( organize-01 :arg1 door :arg4 ( decker :mod upper :part-of strait ) :arg1-of complete-02 ) ) )
report
possible-01 :arg1 ( incurred :arg0 ( department :mod new :mod country_name_0 ) :arg1 ( department :mod new :mod country_name_1 ) )
gap :location sunrise :time today :time ( month :mod recent )
and :op1 ( operate-01 :arg1 ( person :arg0-of ( have-rel-role-91 :arg2 patient ) ) :arg1-of complete-02 ) :op2 ( operate-01 :arg1 ( case :quant num_1 ) :arg1-of complete-02 )
and :op1 ( let-01 :mode imperative :arg0 you :arg1 ( sleep-01 :arg0 they :duration ( multiple :op1 ( temporal-quantity temporal-quantity_num_0 :unit hour ) ) ) :time ( date-entity :time 8:00 ) ) :op2 ( and :op1 ( set-up-03 :mode imperative :arg0 you :arg1 ( music :poss he ) ) :op2 ( locked :arg0 they :arg1 door ) :op3 ( went :arg0 he :arg1 door ) :op4 ( go-02 :arg0 he :arg4 ( exam :mod three-hour ) ) :time then )
enable-01 :arg0 ( activity-06 :mod mold :mod this ) :arg1 ( compete-02 :arg0 we :arg1 ( monetary-quantity :arg1-of ( expend-01 :arg0 we :arg2 ( enterprise :mod new :mod organization_name_0 ) :arg1-of ( possible-01 :polarity - ) ) ) :degree more ) :arg2 ( and :op1 ( person_name_1 :arg0-of ( have-org-role-91 :arg2 ( director :mod general ) ) ) :op2 ( person :arg0-of ( have-org-role-91 :arg2 ( director :mod general ) ) ) :op3 ( person :arg0-of ( have-org-role-91 :arg1 organization :arg2 chairman ) ) :op4 ( board :arg0-of ( have-org-role-91 :arg1 organization :arg2 chairman ) :arg0-of ( have-org-role-91 :arg1 organization :arg2 chairman ) :arg0-of ( have-org-role-91 :arg1 organization :arg2 chairman ) :arg0-of ( have-org-role-91 :arg1 organization :arg2 chairman ) :arg0-of ( have-org-role-91 :arg1 organization :arg2 chairman ) :arg0-of ( have-org-role-91 :arg1 organization :arg2 chairman ) :arg0-of ( have-org-role-91 :arg1 organization :arg2 chairman ) ) )
person :arg0-of immigrate-01 :quant ( about :op1 num_0 ) :location continent_name_0
refer-01 :arg0 ( organization_name_0 :mod country_name_1 ) :arg1 ( market :name ( name :op1 wholesale ) :arg1-of ( sell-01 :arg2 public :mod also ) ) :arg2 ( organization_name_0 :mod country_name_1 ) :frequency often
say-01 :arg0 we :arg1 ( operate-01 :arg1 ( and :op1 ( spots :arg1-of hot-05 ) :op2 ( protect-01 :arg1 border ) :op3 ( operation :mod military ) ) )
and :op1 ( remain-01 :arg1 ( door :prep-to ( country :arg0-of ( produce-01 :arg1 country_name_0 ) ) ) :arg3 ( gaga :mod just ) ) :op2 ( deliver-01 :polarity - :arg0 ( person :quant num_0 ) :arg1 ( industry :mod ( organization_name_1 :mod na ) ) :location latecoere )
love-01 :arg0 i :arg1 ( girl :mod both ) :mod anyway :location ( between :op1 location_name_0 :op2 person_name_1 )
say-01 :arg1 ( and :op1 ( write-01 :arg0 ( person :arg0-of ( have-rel-role-91 :arg1 he :arg2 daughter ) ) :arg1 ( music :poss person ) ) :op2 ( sing-01 :arg0 person :arg1 ( music :poss person ) ) ) :arg2 person_name_0
multi-sentence :snt1 ( want-01 :arg0 ( person :arg0-of ( want-01 :arg1 ( wear-01 :arg0 person :arg1 ( country_name_0 :mod nezahled?nou :location continent_name_1 ) ) :arg0-of ( have-rel-role-91 :arg1 i :arg2 friend ) ) ) :arg1 ( and :op1 ( person :arg0-of ( have-org-role-91 :arg1 country :arg2 ( minister :mod short-sighted ) ) ) :op2 ( person :arg0-of ( have-org-role-91 :arg1 country :arg2 official ) ) ) :arg0-of ( suggest-01 :arg1 ( suggest-01 :arg0 person :arg1 ( get-05 :arg1 ( and :op1 ( person :arg0-of ( have-org-role-91 :arg1 country :arg2 minister ) ) :op2 ( person :arg0-of ( have-org-role-91 :arg2 official ) ) :location ( city :arg1-of major-02 :quant some ) ) :arg2 ( point :location-of ( get-05 :arg1 and :arg2 matter ) ) ) ) ) ) :snt2 ( suggest-01 :arg0 i :arg1 ( suggest-01 :arg0 person :arg1 ( get-05 :arg1 ( and :op1 ( person :arg0-of ( have-org-role-91 :arg1 country :arg2 minister ) ) :op2 ( person :arg0-of ( have-org-role-91 :arg2 official ) ) :location ( city :arg1-of major-02 :quant some ) ) :arg2 point ) ) )
and :op1 ( accuse-01 :arg0 person_name_0 :arg1 ( person_name_1 :arg0-of ( have-org-role-91 :arg2 organiser ) ) :arg2 ( try-01 :arg0 person :arg1 ( get-01 :arg0 person :arg1 ( moles :arg1-of stable-03 ) :time ( year :mod last ) ) ) ) :op2 ( threaten-01 :arg0 person :arg1 ( end-01 :arg1 ( end-01 :arg1 racing ) ) :time immediate )
contrast-01 :arg2 ( increase-01 :arg0 this :arg1 ( risk-01 :arg1 ( increase-01 :arg0 ( spaceship_name_2 :arg0-of mine-01 ) :arg1 ( monetary-quantity :arg1-of pay-01 :arg1-of ( pay-01 :arg3 compensate-01 :purpose ( reduce-01 :arg0 spaceship :arg1 ( expend-01 :arg0 spaceship :mod operate-01 ) ) ) ) ) :arg1-of ( mean-01 :arg2 ( reduce-01 :arg1 ( reduce-01 :arg1 ( number :quant-of ( person :arg1-of employ-01 ) ) ) ) :mod essential ) ) :mod really )
admit-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg2 professor ) ) :arg1 ( shoot-02 :arg0 person :arg1 ( person :arg0-of ( have-rel-role-91 :arg1 he :arg2 girlfriend ) ) ) :time ( call-02 :mod emergency )
back-01 :arg0 organization_name_0 :arg1 ( version :poss government-organization_name_1 :topic law )
include-91 :arg1 ( and :op1 ( person :arg0-of ( have-rel-role-91 :arg1 ( person :quant num_0 ) :arg2 child ) ) :op2 ( person :arg0-of ( have-rel-role-91 :arg1 person :arg2 child ) ) :op3 ( person :arg0-of ( have-rel-role-91 :arg1 person :arg2 child ) ) :op4 ( person :arg0-of ( have-rel-role-91 :arg1 person :arg2 child ) ) :op5 ( person :arg0-of ( have-rel-role-91 :arg1 person :arg2 child ) ) :time ( collapse-01 :arg1 crane ) ) :arg2 die-01
contrast-01 :arg2 ( surprise-01 :arg0 ( affair :mod ( year :mod last ) :arg1-of ( worry-01 :arg0 organization_name_0 :degree great ) ) :arg1 it )
contrast-01 :arg1 ( promise-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg1 ( organization_name_1 :poss person ) :arg2 organization_name_1 ) ) :arg1 ( introduce-02 :arg0 person :arg1 place ) :time ( as-soon-as :op1 ( possible-01 :arg1 introduce-02 ) ) ) :arg2 ( mention-01 :polarity - :arg0 person :arg1 ( or :op1 number :op2 date ) )
possible-01 :arg1 ( scare-01 :arg0 ( turbulence :time recent :location ( market :mod finance :poss world ) ) :arg1 ( government-organization_name_0 :mod wary ) :purpose ( add-02 :arg0 government-organization :arg1 government-organization :arg2 ( and :op1 ( raise-01 :arg0 government-organization :arg1 ( rate :arg1-of ( fund-01 :arg0 federal ) :mod federal ) ) :op2 ( more-than :op1 ( percentage-entity percentage-entity_num_0 :mod just ) :arg1-of ( include-91 :arg2 ( point :mod ( percentage-entity percentage-entity_num_0 ) ) ) ) ) ) :time already ) :concession ( show-01 :arg0 ( data :arg1-of ( include-91 :arg2 data :arg3 most ) ) :arg1 economy )
and :op1 ( turn-02 :arg1 ( person :arg1-of average-03 ) :arg2 ( computer :poss person ) ) :op2 ( drop-05 :arg0 person :arg1 ( website :mod ( website :quant several ) ) ) :time ( year :mod last )
obligate-01 :arg2 ( have-03 :arg0 company :arg1 ( and :op1 ( certificates :mod quality ) :op2 ( certification :arg1 ( and :op1 ( process-01 :arg1 ( produce-01 :quant num_0 :arg1-of special-02 ) ) :op2 ( card :mod qualification ) ) :beneficiary ( person :arg1-of employ-01 :arg1-of key-02 ) ) ) )
say-01 :arg0 ( person_name_0 :arg0-of ( have-org-role-91 :arg1 ( person_name_1 :mod domestic ) :arg2 ( defend-01 :mod domestic ) ) ) :arg1 ( seize-01 :arg0 authority :arg1 ( person :quant num_0 :arg0-of ( try-01 :arg1 ( cross-02 :arg0 person :arg1 border ) ) :arg0-of ( seize-01 :arg1 border :time already :location country ) ) )
affect-01 :arg0 ( change-01 :arg1 winds ) :arg1 ( more :compared-to ( government-organization_name_0 :mod just ) ) :time ( morning :mod this )
say-01 :arg0 ( organization_name_0 :arg1-of ( include-91 :arg2 ( person :arg0-of ( have-org-role-91 :arg1 country_name_1 ) ) ) ) :arg1 ( cause-01 :arg0 ( common :mod ( common :degree most ) :arg1-of ( die-01 :duration ( several :op1 ( temporal-quantity temporal-quantity_num_0 :unit year ) ) ) ) :arg1 this )
and :op1 ( factor :quant x ) :op2 ( person :arg0-of view-01 ) :op3 ( person :arg0-of view-01 ) :op4 ( person :arg0-of view-01 ) :op5 ( person :arg0-of view-01 )
and :op1 ( think-01 :arg0 i :arg1 ( and :op1 ( compete-02 :arg0 we :degree well ) :op2 ( show-01 :arg0 ( round :mod qualifying ) :arg1 ( and :op1 ( compete-02 :arg0 we :mod domestic ) :op2 ( show-01 :arg0 ( round :mod qualifying ) :arg1 ( strong-02 :arg1 we :location ( stadium :poss we ) ) ) ) ) ) ) :op2 ( say-01 :arg0 i :arg1 ( coach :arg1-of ( lose-02 :arg0 ( coach :arg1-of ( lose-02 :arg0 team :time ( season :mod this ) ) ) ) :arg0-of ( cause-01 :arg1 ( opening :arg0 team :time ( season :mod this ) ) ) ) )
order-02 :arg0 person_name_0 :arg1 order :time ( year :mod this )
and :op1 ( decide-01 :arg0 ( person :arg0-of ( have-rel-role-91 :arg1 i :arg2 grandfather ) ) :arg1 ( live-01 :arg0 ( person :arg0-of ( have-rel-role-91 :arg1 i :arg2 grandfather ) ) ) ) :op2 ( age-01 :arg1 person :arg2 ( temporal-quantity temporal-quantity_num_0 :unit year ) ) :op3 funeral
and :op2 ( important :degree most :domain ( person :arg0-of ( have-org-role-91 :arg2 president ) ) )
want-01 :arg0 organization_name_0 :arg1 ( help-01 :arg0 organization :arg1 ( expand-01 :arg0 country_name_1 :arg1 ( capacity :poss country ) :purpose ( and :op1 ( expand-01 :arg1 ( seeker :mod jihad ) ) :op2 ( strengthen-01 :arg1 ( oversight :arg1 island ) ) ) ) )
want-01 :arg0 organization_name_0 :arg1 ( help-01 :arg0 organization :arg1 ( expand-01 :arg0 country_name_1 :arg1 ( capacity :poss country ) :purpose ( and :op1 ( expand-01 :arg1 ( seekers :mod jihad ) ) :op2 ( strengthen-01 :arg1 ( supervise-01 :arg1 island ) ) ) ) )
it :mod decent :domain you :mod of-course
say-01 :arg0 ( government-organization :arg0-of govern-01 ) :arg1 ( cause-01 :arg0 ( change-01 :arg0 government-organization :arg1 ( alia :mod inter ) ) :arg1 ( react-01 :arg0 government-organization :arg2 ( situation :time current :mod economy ) ) )
go-02 :arg0 person_name_0 :arg4 country_name_1 :purpose ( view-02 :arg0 person :arg1 ( bring-01 :arg0 person :arg1 ( aid-01 :mod humanitarian ) :arg2 refugee ) )
say-01 :arg1 ( trend-01 :arg1 ( trend-01 :arg2 ( assembly :arg0-of ( have-org-role-91 :arg2 head-of-state ) ) ) ) :arg2 person_name_0
gain-02 :arg0 ( person_name_0 :arg0-of ( have-org-role-91 :arg2 ( governor :mod vice ) ) ) :arg1 ( shift-01 :arg2 ( point :quant num_0 :location ( side :mod left :part-of field ) ) )
contain-01 :arg0 ( thing :arg1-of ( decide-01 :arg3 territory ) :arg1-of question-01 ) :arg1 ( and :op1 ( distance-01 :arg1 ( land :mod type ) :arg2 ( building :mod adjacent ) :arg1-of clear-06 :arg1-of clear-06 ) :op2 ( describe-01 :arg1 ( distance-01 :arg1 ( territory :arg1-of ( concern-01 :arg0 construct-01 ) ) :arg2 ( shape :poss ( territory :arg1-of ( concern-01 :arg0 construct-01 ) ) ) ) :arg1-of ( cause-01 :arg0 ( decide-01 :arg0 ( construct-01 :arg1 construct-01 ) ) ) ) )
decide-01 :arg0 they :arg1 ( thing :arg2-of ( solve-01 :arg1 ( thing :arg2-of ( solve-01 :time ( until :op1 ( date-entity :time then ) ) ) ) ) ) :li num_0
and :op2 ( obligate-01 :arg2 ( remember-01 :arg0 you ) :arg1-of ( cause-01 :arg0 ( depend-01 :arg0 ( work-01 :arg0 they ) :arg1 ( outcome :poss person ) ) ) )
probable :time ( before :op1 now :quant ( temporal-quantity temporal-quantity_num_0 :unit week ) ) :mod probable :time ( get-05 :arg1 they :arg2 ( match-03 :mod big ) ) :mod probable
do-02 :arg0 we :arg1 ( or :op1 ( part :mod small ) :op2 component ) :arg1-of possible-01
contrast-01 :arg2 ( describe-01 :polarity - :arg1 ( thing :arg1-of link-01 :mod this :quant none ) :arg2 ( thing :arg1-of report-01 ) )
cause-01 :arg0 ( replace-01 :arg0 it :arg1 ( building :arg1-of modern-02 :arg1-of ( link-01 :arg2 income ) ) ) :arg1 ( few :op1 ( temporal-quantity temporal-quantity_num_0 :unit year ) )
multi-sentence :snt1 ( and :op1 ( sit-01 :arg1 we :arg2 theater ) :op2 ( wait-01 :arg1 we :arg2 ( arrive-01 :arg1 we :arg4 ( family :mod royal ) ) ) :time ( realize-01 :arg0 i :arg1 ( regret-01 :arg1 ( seat-01 :prep-to ( family :mod royal ) ) ) ) :time ( realize-01 :arg0 i :arg1 ( and :op1 ( empty-02 :arg1 ( seat-01 :prep-to i ) ) :op2 ( realize-01 :arg0 i :arg1 ( sit-01 :arg1 ( person_name_0 :arg0-of ( have-org-role-91 :arg2 senator ) ) :arg2 ( person :arg0-of ( have-org-role-91 :arg2 senator ) ) ) ) ) ) ) :snt2 ( '' :mode expressive )
and :op1 ( voices :arg1 ( voices :mod new ) :location ( room :mod locker ) ) :op2 ( say-01 :arg0 voices :arg1 ( possible-01 :arg1 ( and :op1 ( lighten :arg1 thing ) :op2 ( atmosphere :mod refresh ) :frequency sometimes ) ) )
say-01 :arg1 ( and :op1 ( build-01 :arg1 ( intern :poss we ) :time ( before :op1 now :quant ( temporal-quantity temporal-quantity_num_0 :unit year ) ) ) :op2 ( be-located-at-91 :arg1 he :arg2 ( under :op1 ( life :poss he ) ) ) ) :arg2 person_name_0 :time ( before :op1 now :quant ( temporal-quantity temporal-quantity_num_1 :unit year ) )
surprise-01 :arg0 ( number :quant-of ( hanging-07 :mod little :source ( surroundings :poss she ) ) ) :arg1 we :time ( think-01 :arg0 we :arg1 it )
multi-sentence :snt1 ( contrast-01 :arg1 ( think-01 :arg0 ( person :quant num_0 ) :arg1 ( have-03 :arg0 personality :arg1 personality :arg1-of effective-04 ) ) :arg2 ( think-01 :arg0 ( person :quant ( percentage-entity :value num_0 ) ) :arg1 personality :arg1-of effective-04 ) ) :snt2 ( say-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg1 publication_name_1 ) ) :arg1 ( belong-01 :polarity - :arg0 ( temperament :poss person ) :arg1 government-organization_name_0 ) )
possible-01 :arg1 ( immerse :arg0 he :arg1 he :arg0-of ( cause-01 :arg1 ( find-01 :arg1 create-01 :time always :arg1-of stunning ) ) )
contrast-01 :arg1 ( discover-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg2 scientist ) ) :arg1 ( contrast-01 :arg1 ( discover-01 :arg0 scientist :time ( before :op1 now :quant ( about :op1 ( temporal-quantity temporal-quantity_num_0 :unit year ) ) ) ) :arg2 ( discover-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg2 scientist ) ) ) ) ) :arg2 ( resemble-01 :arg1 ( something :mod ( much :degree very ) ) :arg2 ( remnant :mod breakfast ) )
say-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg2 member :time former ) :arg0-of ( have-org-role-91 :arg2 member :time former ) :arg0-of ( have-org-role-91 :arg2 member :time former ) :arg0-of ( have-org-role-91 :arg2 member :time former ) :arg0-of ( have-org-role-91 :arg2 member :time former ) :arg0-of ( have-org-role-91 :arg2 member :time former ) :arg0-of ( have-org-role-91 :arg2 member :time former ) :arg0-of ( have-org-role-91 :arg2 member :time former ) :arg0-of ( have-org-role-91 :arg2 member :time former ) :arg0-of ( have-org-role-91 :arg2 member :time former ) :arg0-of ( have-org-role-91 :arg2 member :time former ) :arg0-of ( have-org-role-91 :arg2 member :time former ) :arg0-of ( have-org-role-91 :arg2 member :time former ) :arg0-of ( have-org-role-91 :arg2 member :time former ) :arg0-of ( have-org-role-91 :arg2 member ) ) :arg1 ( organize-01 :arg0 ( citizen :arg1-of average-03 ) :arg1 ( organize-01 :arg1 property ) )
and :op1 ( warn-01 :arg0 ( person_name_0 :arg0-of ( have-org-role-91 :arg2 provisions ) ) :arg1 ( -rrb- :arg0 person :arg1 ( position-02 :arg0 ( work-01 :arg0 ( office :mod travel-01 ) ) :arg2 compete-02 ) ) ) :op2 ( person_name_1 :arg0-of ( speak-01 :arg1 ( step-01 :arg1 person :arg2 ( agency :mod travel-01 ) ) ) ) :mod also
speak-01 :arg0 ( person :location here ) :mod only :topic ( return-01 :arg1 person )
cause-01 :arg0 ( save-02 :arg0 person_name_0 :arg1 ( save-02 :arg0 person :arg1 ( area :mod organization_name_2 ) ) ) :arg1 injure-01
come-01 :arg1 ( thing :arg1-of ( symbolize-01 :arg2 community ) ) :arg4 life
say-01 :arg0 ( person_name_0 :arg1-of ( include-91 :arg2 ( woman :quant num_0 :arg1-of ( include-91 :arg2 ( woman :arg0-of lead-01 :arg0-of lead-01 ) ) ) :arg3 ( include-91 :arg1 woman :arg2 ( woman :quant num_1 :arg1-of ( include-91 :arg2 ( woman :arg0-of lead-01 :arg0-of lead-01 ) ) ) ) ) ) :arg1 ( p?estrukturovala :arg0 ( team :arg0-of ( peak-01 :arg1 she ) ) :arg1 ( team :arg0-of ( peak-01 :arg1 ( between :op1 man :op2 woman ) ) ) :mod also :mod also )
contrast-01 :arg1 ( approach-02 :arg0 ( and :op1 company :op2 company ) :arg1 ( accept-01 :arg0 company :arg1 ( person :arg0-of work-01 :time eventual ) ) ) :arg2 ( prepare-02 :arg0 company :arg1 ( accept-01 :arg0 company :arg1 ( person :arg0-of work-01 :mod temporary ) :purpose ( and :op1 ( send-03 :arg0 company :arg1 ( and :op1 shop :op2 sell-01 ) ) :op2 ( deliver-01 :arg0 company :arg1 good ) ) ) ) :time holiday
affect-01 :arg0 change-01 :arg1 ( region :quant all ) :degree great
and :op1 ( say-01 :arg0 i :arg1 ( thing :mod all :arg1-of ( pay-01 :time ( after :op1 past ) ) ) :mod all ) :op2 ( say-01 :arg0 i :arg1 ( or :op1 ( cause-01 :arg0 ( thing :arg1-of ( say-01 :arg0 person_name_0 ) ) :arg1 ( outstanding :domain person ) ) :op2 ( dispute-01 :arg0 person :arg2 ( thing :arg2-of ( obligate-01 :arg1 ( remark-01 :arg0 country ) ) :arg1-of relate-01 ) ) ) )
and :op1 ( have-03 :arg0 city :arg1 ( contract-02 :arg0 city :arg2 administrator ) ) :op2 ( have-03 :arg0 compete-02 :arg1 ( company :mod ( darothore :mod only ) :arg1-of ( contract-02 :arg2 ( council :mod city ) :time then ) ) ) :time then
and :op1 ( study-01 :arg0 ( person :arg0-of ( have-rel-role-91 :arg2 praise ) ) :arg1 pr?myslovku ) :op2 ( study-01 :arg0 person :arg1 pr?myslovku ) :op3 ( work-01 :arg0 person :manner pr?myslovku ) :op4 ( work-01 :arg0 person :location ( unit :mod piece :arg1-of average-01 ) :location ( and :op1 hundred :op2 ( percentage-entity percentage-entity_num_0 ) ) )
and :op1 ( issue-01 :arg0 ( and :op1 government-organization_name_0 :op2 ( person :arg0-of ( reside-01 :arg1 ( house :mod nearby ) ) ) ) :arg1 ( permit-01 :quant some ) :duration ( many :op1 ( temporal-quantity temporal-quantity_num_0 :unit year ) ) :time ( before :op1 ( house :arg1-of ( suppose-02 :arg2 ( differ-02 :arg1 permit-01 ) ) ) ) )
and :op1 ( rebounded :arg1 market :time ( month :mod this ) :degree slight ) :op2 ( include-91 :arg1 ( percentage-entity percentage-entity_num_0 :mod only ) :arg2 ( temporal-quantity temporal-quantity_num_1 :unit year ) :arg1-of possible-01 :time now )
and :op1 ( shoot-02 :arg0 person_name_0 :arg1 ( person :arg0-of ( have-org-role-91 :arg1 organization_name_1 :arg3 ( lead-02 :arg0 person :arg1 organization_name_2 ) ) ) :time ( after :op1 ( debut :arg0 person :arg1 ( and :op1 ( person :arg0-of ( have-org-role-91 :arg1 organization :arg3 ( lead-02 :arg0 person ) ) ) :op2 ( organization_name_2 :arg0-of ( play-01 :arg1 organization ) ) ) ) ) :time ( after :op1 ( chance-02 :arg0 person :arg1 ( chance-02 :arg0 person :arg1 win-01 :quant several ) ) ) :time ( after :op1 ( chance-02 :arg0 person :arg1 ( title :arg0 person :arg1 ( title :mod gated ) :location ( minut :quant num_0 ) ) ) ) )
raise-02 :arg1 capital :arg2 ( monetary-quantity monetary-quantity_num_0 :unit euro :arg2-of total-01 )
manage-01 :arg1 ( hospital :mod region )
or :op2 ( something :mod else )
person_name_0 :source organization_name_1 :duration ( few :op1 ( temporal-quantity temporal-quantity_num_0 :unit month ) ) :prep-for ( fracture :mod double )
study-01 :arg0 we :arg1 ( sniggered :arg1 we :quant lot ) :arg1-of ( cause-01 :arg0 ( want-01 :arg0 we :arg1 ( focus-01 :arg0 we :arg2 ( game :poss we ) :arg1-of ( adapt-01 :arg0 we :arg2 workouts :mod also ) ) :time ( time :mod this ) ) )
and :op1 ( record-01 :arg1 ( grow-01 :arg1-of ( low-04 :degree more ) ) :time ( month :mod last ) ) :op2 ( begin-01 :arg1 ( record :mod record ) ) :li num_0
and :op1 ( bad-07 :arg1 ( problem :topic nnejnov?j?Ã­ho :mod this ) :degree too ) :op2 ( and :op1 ( end-01 :arg0 person_name_0 :time ( season :mod last ) :time ( after :op1 ( injure-01 :mod ankle ) ) ) :op2 ( get-05 :arg1 person :arg2 ( form :time former ) :time ( date-entity :time p?edsezÃ³ny ) ) )
and :op1 ( contrast-01 :arg1 ( and :op1 ( leave-15 :arg0 this :arg1 ( person :arg0-of injure-01 :mod this :arg0-of injure-01 ) ) :op2 ( knock-01 :arg0 person :arg1 he :duration ( at-least :op1 ( temporal-quantity temporal-quantity_num_0 :unit month :mod at-least ) ) ) ) :op2 ( and :op1 ( remain-01 :arg1 person :arg3 positive :duration ( at-least :op1 ( temporal-quantity temporal-quantity_num_1 :unit month ) ) ) :op2 ( knock-01 :arg0 person :arg1 person :duration ( at-least :op1 ( temporal-quantity temporal-quantity_num_1 :unit month ) ) ) ) :op3 ( think-01 :arg0 person :arg1 ( possible-01 :arg1 ( play-01 :arg0 person_name_1 :mod again :time ( end-01 :arg1 season ) ) ) ) )
contrast-01 :arg1 ( and :op1 ( leave-15 :arg0 ( person :arg0-of left-back :mod this ) :arg1 ( wound-01 :arg1 person ) ) :op2 ( knock-01 :arg0 person :arg1 he :duration ( at-least :op1 ( temporal-quantity temporal-quantity_num_0 :unit month :mod at-least ) ) ) ) :arg2 ( and :op1 ( remain-01 :arg1 person_name_0 :arg3 positive ) :op2 ( think-01 :arg0 person :arg1 ( possible-01 :arg1 ( play-11 :arg0 person_name_1 :mod again :time ( end-01 :arg1 season ) ) ) ) )
leave-14 :mode imperative :arg0 you :arg1 it :arg2 i
tell-01 :arg0 ( person_name_0 :arg0-of ( have-org-role-91 :arg1 ( cabinet :mod bankrupt-01 ) :arg2 member ) ) :arg1 ( person_name_1 :arg0-of ( have-org-role-91 :arg1 ( cabinet :poss organization_name_2 ) :arg2 member ) ) :arg2 ( programme :arg0 person :arg1 ( and :op1 ( person :arg0-of ( lead-02 :arg1 country ) ) :op2 ( person :arg0-of ( have-org-role-91 :arg1 organization :arg2 member ) ) :op3 ( person :arg0-of ( have-org-role-91 :arg1 organization :arg2 member ) ) :op4 ( person :arg0-of ( have-org-role-91 :arg1 organization :arg2 member ) ) :op5 ( person :arg0-of ( have-org-role-91 :arg1 organization :arg2 member ) ) ) :arg0-of ( cause-01 :arg1 ( recommend-01 :arg1 ( abolished :arg1 monarchy ) ) ) )
be-located-at-91 :arg1 he :arg2 prison :time now
call-03 :arg1 ( open-01 :arg1 economy ) :arg2 ( world :arg1-of ( base-01 :location world ) )
study-01 :arg0 ( person_name_0 :arg1-of ( direct-01 :arg0 person :mod original ) ) :arg1 person_name_1 :mod original
possible-01 :arg1 ( return-02 :arg1 property :arg2 property ) :time ( after :op1 ( multiple :op1 num_0 ) ) :arg1-of ( cause-01 :arg0 ( turn-02 :arg1 ( claim-01 :arg0 state :arg1 ( damage-01 :arg1 ( rehabilitation :mod out-of-court ) ) ) :arg2 state ) )
hit-01 :arg0 ( wall :arg1-of ( seduced :arg0 ( voices :mod siren ) ) ) :arg1 ( wall :mod reality ) :arg2 ( want-01 :arg0 person_name_0 :arg1 ( and :op1 ( see-01 :arg0 person ) :op2 ( begin-01 :arg0 person :arg1 ( rebel-01 :arg0 person ) ) ) ) :time soon
possible-01 :arg1 ( sell-01 :arg0 ( municipality :mod new ) :arg1 ( car :mod towed ) :time ( after :quant ( up-to :op1 ( temporal-quantity temporal-quantity_num_0 :unit month ) ) ) :time ( after :op1 ( announce-01 :arg0 ( person :arg0-of ( own-01 :arg1 they ) ) ) ) )
or :op2 ( attempt-01 :mode interrogative :arg0 you :arg1 ( attempt-01 :arg0 you :arg1 ( interesting :domain this ) ) )
and :op1 ( marry-01 :arg1 he ) :op2 ( have-03 :arg0 he :arg1 ( child :quant num_0 :mod small ) )
smuggle-01 :arg0 that :arg1 ( something :mod else ) :degree entire
smuggle-01 :arg0 they :arg1 ( something :mod else ) :degree entire
and :op1 jovial :op2 pompously :op3 authoritarian :op4 arrogant
depreciating :arg0 person_name_0 :arg1 ( idea :topic ( and :op1 ( '' :arg0 person_name_1 :arg1 ( '' :mod football :mod exciting :mod exciting ) ) :op2 ( reminded :poss person ) ) ) :arg2 ( win-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg1 ( team :poss person ) :arg2 mentoru ) ) :arg1 premiership :manner ( play-01 :arg0 person :arg1 ( dissent-01 :mod '' ) :arg2 football ) )
meet-03 :medium internet :location ( va?ka :mod ( old :degree more ) :arg1-of ( talk-01 :arg0 he :arg2 ( movie :mod favorites ) ) )
fight-01 :arg0 heart :arg2 ( comment-01 :arg0 heart :arg3 person_name_0 )
time :mod next :mod too
and :op1 ( sentence-01 :arg1 ( person_name_0 :arg0-of ( confiscate-01 :arg1 ( company :mod oil ) ) ) :arg2 person_name_1 ) :op2 ( and :op1 ( confiscate-01 :arg0 person :arg1 ( company :mod oil ) ) :op2 ( limit-01 :arg1 ( effort :poss person :mod democracy ) :arg1-of limit-01 ) ) :time ( after :op1 ( challenge-01 :arg1 person :arg2 president :arg1-of open-04 ) )
say-01 :arg1 story :arg2 person_name_0
and :op1 ( take-01 :arg1 he :time tomorrow ) :op2 ( continue-01 :arg1 ( operate-01 :arg0 he :location city_name_0 ) :time then )
transfer-01 :arg1 ( or :op1 ( day :mod next ) :op2 ( continue-01 :arg1 ( operated :arg0 city_name_0 ) ) ) :time ( day :mod next )
confirm-01 :arg0 government-organization_name_0 :arg1 ( visit-01 :arg0 city_name_1 :arg1 person_name_2 )
warn-01 :arg0 person_name_0 :arg1 ( rise-01 :arg1 ( employ-01 :polarity - ) :time ( before :op1 ( rise-01 :arg1 ( employ-01 :polarity - ) ) ) )
play-02 :arg0 woman :arg1 ( role :mod big :topic ( process-02 :arg1 decision-making ) )
think-01 :arg0 i :arg1 ( enjoy-01 :arg0 ( person :arg0-of play-01 ) :arg1 it )
sit-01 :arg1 we :arg2 ( casual :degree ( more :degree very ) :compared-to ( expect-01 :arg0 we ) ) :time now
probable :domain ( continue-01 :polarity - :arg0 ( scientist :arg0-of ( have-org-role-91 :arg1 ( humanity :time ( date-entity century_date-entity_0 ) ) :arg2 scientist ) ) :arg1 ( fascinating :arg0 scientist ) :time ever )
cause-01 :arg0 ( chance-02 :arg0 ( person :arg1-of ( support-01 :arg0 ( campaign-01 :arg0 media :arg1-of go-on-15 ) ) ) :arg1 ( chance-02 :arg0 you ) :location page )
cause-01 :arg0 this :arg1 ( chance-02 :arg1 ( -rrb- :arg1 site :arg1-of ( support-01 :arg0 ( campaign-01 :arg0 media :arg1-of go-on-15 ) :arg1-of ( support-01 :arg0 ( campaign-01 :arg0 media :arg1-of go-on-15 ) ) ) ) )
and :op1 ( buy-01 :arg0 she :arg1 ( company :mod czech ) :time ( late :degree more ) ) :op2 ( come-01 :arg1 ( company :arg1-of strong-02 ) :arg4 ( contract :mod new ) )
and :op1 ( marry-01 :arg1 i :arg2 ( family :arg0-of work-01 ) ) :op2 ( marry-01 :arg1 i :arg2 ( family :quant num_0 ) ) :op3 ( forth :arg0 i :degree so )
exemplify-01 :arg0 ( recommend-01 :arg0 ( oil :mod salad ) :arg1 ( summer :arg1-of hot-05 ) ) :source location_name_0
have-concession-91 :arg1 ( achieve-01 :arg0 i :arg1 ( attract-01 :arg0 it :arg1 ( person :quant more ) ) ) :arg2 ( toyed :arg0 they :arg1 ( create-01 :arg1 ( advertising :arg1 corporation :arg1-of ( realistic-03 :degree more ) ) ) )
recommend-01 :arg1 ( seat-01 :quant num_0 :arg1-of average-04 )
say-01 :arg0 ( thing :quant all :arg1-of ( include-91 :arg2 ( thing :quant num_1 :arg1-of ( say-01 :arg0 ( thing :arg1-of ( opine-01 :arg0 ( health :poss person_name_0 ) ) ) ) ) ) ) :arg1 ( it :quant all :arg1-of ( include-91 :arg2 ( thing :quant num_1 ) ) )
turn-02 :arg0 i :arg1 i :arg2 ( thing :mod good ) :arg3 ( thing :mod good ) :arg3 person_name_0
contrast-01 :arg2 ( finish-01 :arg0 i :arg1 ( be-located-at-91 :arg1 i :arg2 there :arg2-of ( contrast-01 :arg1 ( have-03 :arg0 i :arg1 ( location :arg4-of ( have-03 :arg0 i ) ) ) ) ) ) :arg1-of ( contrast-01 :arg2 ( and :op1 ( run-02 :arg0 i :arg1 race :time already :time ( after :op1 ( run-01 :arg0 race :arg1 race :time already ) ) ) :op2 ( know-01 :arg0 i :arg1 ( location :arg4-of ( send-01 :arg1 it ) ) ) ) )
and :op1 ( throw-01 :arg0 he :arg1 ( piece :mod paper :mod little :location table ) :arg2 ( back :part-of table ) ) :op2 ( leaned :arg0 he :arg1 ( and :op1 ( chair :arg1-of fake-02 :mod usual ) :op2 ( eyes :mod evil ) :op3 ( eye :mod evil ) :op4 ( eye :mod pierce ) ) )
and :op1 ( afford-01 :arg1 item ) :op2 ( sell-01 :arg1 item :arg2 ( item :quant lot ) :mod large )
person :arg0-of play-01 :mod ( good :degree really )
help-01 :arg0 it :arg1 ( forum :mod pitching ) :arg2 ( possible-01 :arg1 ( meet-03 :arg0 ( person :arg0-of study-01 ) :arg1 ( person :mod ( professional :mod film ) ) :purpose ( and :op1 ( undergo-28 :arg1 person :arg2 ( series :quant series ) :time ( time :arg1-of same-01 ) ) :op2 ( get-01 :arg0 person :arg1 job ) ) ) ) :mod also
possible-01 :arg1 ( equate-01 :arg1 ( child :mod ( young :degree more ) ) :arg2 ( scent :arg1 device :arg0-of attract-01 ) )
and :op1 ( want-01 :arg0 ( person :arg0-of ( partner-01 :arg1 country_name_0 ) ) :arg1 ( supply-01 :arg0 person :arg2 ( or :op1 twenty :op2 ( temporal-quantity temporal-quantity_num_0 :unit year ) ) ) ) :op2 ( explain-01 :arg0 person :arg1 person )
and :op1 ( give-01 :arg0 ( promote-02 :arg1 ( open-01 :arg1 ( reform-01 :mod nascent ) ) ) :arg1 ( and :op1 ( momentum :mod new ) :op2 vitality ) :mod new ) :op2 ( say-01 :arg0 ( thing :arg1-of say-01 ) :arg1 ( space :mod new :purpose ( grow-01 :arg1 economy ) ) :mod also )
contrast-01 :arg1 ( and :op1 ( fit :domain ( they :quant ( about :op1 num_0 ) ) ) :op2 ( remain-01 :arg1 they :arg3 outside ) ) :arg2 ( remain-01 :arg1 they :arg3 outside )
have-03 :arg1 ( power :mod big ) :source ( pick-01 :arg0-of ( have-03 :arg1 ( power :mod big ) ) )
win-01 :arg0 she :arg1 ( process-02 :arg1 selection ) :arg2 ( door :mod emergency :arg0-of ( supply-01 :arg1 ( door :mod emergency ) ) )
theme :arg1-of special-02 :domain ( festival :arg1-of ( derive :arg2 ( trailer :mod festival ) ) ) :time ( year :mod each )
announce-01 :arg0 organization_name_0 :arg1 ( thing :arg2-of ( result-01 :arg1 ( reduce-01 :arg1 ( and :op1 ( percentage-entity percentage-entity_num_0 ) :op2 ( reduce-01 :mod huge ) ) ) ) :arg1-of ( cause-01 :arg0 ( and :op1 ( demand-01 :arg1 ( level :arg1-of low-04 ) ) :op2 ( increase-01 :arg1 ( expend-01 :arg2 ( division :mod ground ) ) ) ) ) )
possible-01 :arg1 ( and :op1 ( event :time yesterday ) :op2 ( event :time yesterday ) )
contrast-01 :arg1 ( possible-01 :arg1 ( and :op1 ( hard-02 :arg1 rival-01 :degree more ) :op2 ( have-03 :polarity - :arg0 that :arg1 name ) ) ) :arg2 ( person :arg0-of play-01 :arg0-of ( think-01 :arg1 ( give-up-07 :arg0 city_name_0 :arg1 ( goal :quant num_0 ) ) ) )
multi-sentence :snt1 ( possible-01 :arg1 ( guarantee-01 :arg0 i ) ) :snt2 ( and :op1 ( change-01 :arg0 we :arg1 ( and :op1 ( system :mod defensive :poss we ) :op2 technique ) :time ( year :mod last ) ) :op2 ( emphasize-01 :arg0 we :arg1 ( and :op1 ( system :mod defensive :poss we ) :op2 ( technique :poss we ) ) :time ( week :mod last ) ) :op3 ( mean-01 :arg1 we :arg2 ( point :mod ( turn-02 :arg1 we :arg2 point ) ) ) )
contrast-01 :arg1 ( say-01 :arg0 law :arg1 ( contrast-01 :arg1 ( situation :polarity - ) :arg2 ( situation :poss law ) ) ) :arg2 ( terminates :arg0 ( company :arg0-of insure-02 ) :arg1 contract )
buy-01 :arg0 amr-unknown :arg1 ( and :op1 ( person :arg0-of ( own-01 :arg1 restaurant ) ) :op2 ( person :arg0-of ( own-01 :arg1 restaurant ) ) :op3 ( person :arg0-of ( own-01 :arg1 restaurant ) :arg1-of separate-02 ) ) :mod also
contrast-01 :arg1 ( ask-01 :arg0 i :arg1 ( thing :arg1-of ( check-01 :arg0 background :mod ( comprehensive :degree most ) ) ) :frequency amr-unknown ) :arg2 ( want-01 :arg0 no-one :arg1 ( talk-01 :arg0 no-one :arg1 thing ) )
leave-17 :arg1 ( thing :arg2-of ( have-part-91 :arg1 store ) :mod good ) :arg4 ( section :mod ( freezer :mod massive ) :location-of ( possible-01 :arg1 ( find-01 :arg0 you :arg1 ( and :op1 ( leave-11 :arg1-of freeze-01 ) :op2 ( melon :mod bitter ) :op3 ( melon :mod whole ) :op4 ( and :op1 ( gut :mod pork ) :op2 ( gut :mod pork ) :op3 ( gut :mod fish ) :op4 ( balls :mod region ) :op5 ( balls :mod region ) :op6 ( balls :mod region ) :op7 ( more :mod region ) ) ) ) ) )
trend :arg1 ( trend :mod new :mod each ) :arg1-of ( cause-01 :arg0 ( lighters :arg0 ( generation :mod new :mod each ) :arg1 you :time last ) )
change-01 :arg0 association :arg1 ( thing :arg1-of ( infect-01 :arg1-of exist-01 ) :arg1-of exist-01 ) :mod also
bore-02 :arg0 ( lack-01 :arg1 ( title :mod ( title :mod country_name_0 ) ) ) :arg1 ( person_name_1 :mod country )
need-01 :arg0 we :arg1 ( do-02 :arg0 we :arg1 more :purpose ( or :op1 ( help-01 :arg0 ( country :location-of ( leave-11 :arg0 refugee ) ) ) :op2 ( delay-01 :arg1 refugee :time ( after :op1 ( leave-11 :arg0 country :arg1 country ) ) ) ) )
contrast-01 :arg2 ( run-09 :arg1 it :arg2 ( haul :arg1-of ( long-03 :degree very ) ) )
blame-01 :arg0 country_name_0 :arg1 ( blame-01 :arg1 country :arg2 ( collapse-01 :arg1 ( organization_name_1 :arg0-of construct-01 ) ) ) :manner partial
remain-01 :arg1 person_name_0 :arg3 as-well :arg1-of ( cause-01 :arg0 ( as-long-as :op1 ( remain-01 :arg1 immigrate-01 :arg3 immigrate-01 ) ) )
contrast-01 )
say-01 :arg0 i :arg1 ( contrast-01 :arg1 ( say-01 :arg0 i :arg1 goodbye :arg2 he ) :arg2 ( feel-01 :arg0 i :arg1 awful :time ( after :op1 ( coexist-01 :arg1 i :arg1-of ( long-03 :degree so ) ) ) :mod still :condition ( relative :domain i ) ) )
and :op1 ( have-03 :arg0 storm :arg1 ( break :mod this ) :time ( weekend :mod this ) ) :op2 ( win-01 :arg0 win-01 :arg1 right-05 :arg2 ( host-01 :arg0 or :arg1 ( or :op1 ( location_name_0 :location north ) :op2 ( location_name_0 :location north ) ) :mod either :time ( night :mod next ) :time ( night :mod next ) :location ( park :mod aami ) ) )
share-01 :arg0 ( and :op1 person_name_0 :op2 person_name_1 ) :arg1 ( relation-03 :arg1 light ) :arg2 ( day :mod certain )
receive-01 :arg0 ( injure-01 :mod other ) :arg1 ( half :mod that )
contrast-01 :arg2 ( talk-01 :mode imperative :arg0 you :arg1 it ) :mod still
agree-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg2 minister ) ) :arg1 ( share-01 :arg0 person :arg1 ( responsible-03 :arg0 person :arg1 ( and :op1 ( seek-01 :arg0 ( person :quant num_0 ) :arg1 ( protect-01 :arg0 person :arg1 ( protect-01 :arg1 ( and :op1 country_name_0 :op2 country_name_1 ) ) ) ) :op2 ( talk-01 :arg0 person :arg2 ( hope-01 :arg0 person :arg1 ( achieve-01 :arg0 person :arg1 ( agree-01 :arg0 person :arg1 ( achieve-01 :arg0 person :arg1 ( agree-01 :arg0 person :arg1 ( achieve-01 :arg0 person :arg1 ( agree-01 :arg0 person :arg1 ( achieve-01 :arg0 person :arg1 ( or :op1 ( refugee :quant ( more-than :op1 num_1 ) ) :op2 ( refugee :quant ( more-than :op1 num_1 ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) :arg2 ( person :arg0-of ( have-org-role-91 :arg2 minister ) )
time :arg1-of same-01 :time ( time :arg1-of same-01 )
publish :arg0 we :arg1 ( name :poss you ) :arg1-of ( cause-01 :arg0 ( provide-01 :arg0 we :arg1 ( thing :arg2-of ( name-01 :arg1 you ) ) ) ) :arg1-of ( have-condition-91 :arg2 ( ask-02 :polarity - :arg0 you :arg1 ( person :mod atheist ) :arg2 we ) )
and :op1 ( old :domain ( or :op1 ( eat-01 :arg0 he ) :op2 ( drink-01 :arg0 he ) ) :mod just ) :op2 ( turned :arg0 it :arg1 he )
thing :arg2-of result-01 :arg2-of result-01 :arg0-of ( own-01 :arg1 ( and :op1 organization_name_1 :op2 organization_name_1 ) )
that :time now
family :arg1-of ( have-org-role-91 :arg0 person_name_0 :arg2 member ) :arg1-of ( include-91 :arg2 ( family :arg0-of ( rule-03 :arg1 ( family :arg0-of rule-03 ) ) ) :duration ( multiple :op1 ( temporal-quantity temporal-quantity_num_0 :unit decade ) ) ) :arg1-of ( run-01 :arg0 ( project :mod ( construct-01 :mod large ) ) )
and :op1 ( go-02 :arg0 they ) :op2 ( go-02 :arg0 they ) :op3 ( go-02 :arg0 they )
say-01 :arg0 ( person :arg0-of ( amend-01 :arg1 amend-01 ) ) :arg1 ( crucial :domain ( person :arg0-of ( have-org-role-91 :arg1 organization_name_0 :arg2 member ) ) :time ( before :op1 ( pass-01 :arg1 ( thing :arg1-of ( conclude-01 :topic ( and :op1 ( policy :mod energy :arg1-of update-01 ) :op2 ( thing :arg1-of ( decide-01 :arg0 ( government-organization :arg0-of ( govern-01 :arg1 coal ) ) ) ) ) ) ) ) ) )
and :op1 ( remember-01 :mode imperative :arg0 you :arg1 you ) :op2 ( say-01 :arg0 you :arg1 ( obligate-01 :arg2 ( act-02 :arg0 you ) ) )
continue-01 :arg0 law :arg1 ( word-01 :arg0 city_name_0 :mod last )
refuse-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg1 company_name_0 :arg3 ( charge-05 :arg1 person ) ) ) :arg1 ( be-located-at-91 :arg1 organization_name_1 :arg2 ( ahead :op1 ( business :arg0-of ( compete-02 :arg1 ( and :op1 ( music :mod live-01 ) :op2 ( public :mod live-01 ) ) ) ) ) ) :location ground
say-01 :arg0 ( report-01 :location ( press :mod country_name_0 ) ) :arg1 ( contrast-01 :arg1 ( report-01 :arg1 ( supply-01 :arg1 ( and :op1 weapon :op2 ( equipment :mod military ) ) ) :arg2 country ) :arg2 ( since :op1 ( begin-01 :arg1 august ) ) )
125th :arg0 ( person_name_0 :arg0-of ( win-01 :arg1 ( challenger :time ( week :mod last ) :location city_name_1 ) ) ) :arg1 ( person :arg0-of play-01 :location ( location :location-of ( beat-03 :arg0 person :arg1 ( person :arg0-of play-01 :ord ( ordinal-entity ordinal-entity_num_0 ) ) :ord ( ordinal-entity ordinal-entity_num_1 ) ) ) ) :location ( -rrb- :mod atp )
and :op2 ( say-01 :arg0 ( person :arg0-of ( try-01 :arg1 ( tell-01 :arg0 we :arg1 ( story :topic ( film :poss we ) ) ) ) ) :arg1 ( story :topic ( film :poss we ) ) )
host-01 :arg0 festival :arg1 ( photograph-01 :quant num_0 ) :mod also
introduce-02 :arg0 ( person :quant num_0 ) :arg1 ( features :mod new :arg2-of ( include-01 :arg1 ( and :op1 ( person :arg0-of assist-01 :arg1-of personal-02 ) :op2 ( person :arg0-of ( assist-01 :arg2 ipad ) ) ) :arg2-of ( include-01 :arg1 ( and :op1 ( person :arg0-of assist-01 :arg1-of personal-02 ) :op2 ( person :arg0-of ( assist-01 :arg2 ipad ) ) :op3 ( person :arg0-of ( assist-01 :arg2 ipad ) ) :op4 ( person :arg0-of ( assist-01 :arg2 ipad ) ) :op5 ( person :arg0-of ( assist-01 :arg2 ( and :op1 ( accelerate-01 :arg0 person :arg1 ( system :arg0-of operate-01 ) ) :op2 ( repair-01 :arg0 person :arg1 ( system :arg0-of operate-01 ) ) :quant ( large :degree most ) ) ) ) ) ) ) ) :arg2 ( features :mod new ) :arg1-of ( sure-02 :arg0 you )
think-01 :arg0 he :arg1 ( help-01 :arg0 ( case-03 :arg1 he ) :arg1 ( procedure :prep-against ( die-01 :arg1 he ) ) :condition ( die-01 :arg1 he ) :condition ( die-01 :arg1 he ) )
contrast-01 :arg1 ( new-01 :polarity - :arg1 ( idea :mod this ) ) :arg2 ( event_name_1 :domain idea )
point-out-02 :arg0 that :arg1 ( raise-01 :arg0 government-organization_name_0 :arg1 rate :condition ( proceed-01 :arg0 politician :arg1 ( promise-01 :arg0 politician ) ) :mod only :condition ( proceed-01 :arg0 politician :arg1 promise-01 ) )
title-01 :arg1 you :arg2 ( and :op1 ( journey :arg1 you ) :op2 ( journey :arg1 you ) :op3 ( journey :arg0 you :arg1 ( -lrb- :mod accompanied :mod -rrb- ) ) )
refuse-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg1 political-party_name_0 :arg2 ( member :mod vice ) ) ) :arg1 ( and :op1 ( appear-01 :arg1 person :time ( before :op1 ( date-entity decade_date-entity_0 ) ) ) :op2 ( leave-11 :arg0 person :arg1 party :arg1-of allege-01 :purpose ( reason :mod health ) ) :time subsequent )
address-03 :arg0 ( lama :name ( name :op1 dalai ) ) :arg2 ( question-01 :arg1 ( crisis :mod refugee :location ( station_name_0 :arg0-of ( open-01 :arg1 ( centre :mod ethical ) ) ) ) ) :time ( begin-01 :arg1 ( visit-01 :arg0 he :arg1 country_name_1 :mod 10-day ) ) :location ( speech :poss he )
struggled :arg1 ( man :quant num_0 ) :arg2 ( and :op1 ( round :mod final ) :op2 location_name_0 :op3 ( person_name_1 :arg0-of ( have-org-role-91 :arg2 cameraman ) ) ) :time ( season :mod this )
say-01 :arg0 i :arg1 ( say-01 :arg0 i :arg1 ( see-01 :arg0 you :arg1 ( baby :mod this :arg0-of ( wear-01 :arg1 baby ) ) ) ) :arg2 ( say-01 :arg0 i :arg1 ( see-01 :arg0 you :arg1 ( baby :mod this :arg0-of ( wear-01 :arg1 baby ) ) ) ) :time tonight
difficult :domain ( find-01 :arg1 ( woman :mod good :arg1-of ( take-01 :arg0 we :arg2 we ) ) )
contrast-01 )
have-03 :arg0 ( person :quant ( multiple :op1 num_0 ) ) :arg1 ( view-01 :arg0 person_name_0 :mod positive ) :time now
obligate-01 :arg1 i :arg2 ( remember-01 :arg0 i :arg1 ( detail :quant all ) )
multi-sentence :snt1 ( cause-01 :arg0 ( tell-01 :arg1 ( and :op1 ( tell-01 :arg0 you :arg1 ( thing :arg1-of ( opine-01 :arg0 you :topic ( thing :arg1-of ( opine-01 :arg0 you ) ) ) ) ) :op2 ( thing :arg1-of ( opine-01 :arg0 you :prep-on corbyna ) ) :op3 ( thing :arg1-of ( opine-01 :arg0 you :prep-on corbyna ) ) :op4 ( thing :arg1-of ( opine-01 :arg0 you :medium corbyna ) ) :op5 ( thing :arg1-of ( opine-01 :arg0 you :prep-on ( thing :arg1-of ( opine-01 :arg0 you :medium ( thing :arg1-of ( opine-01 :arg0 you ) ) :manner frank ) ) ) ) ) ) ) :snt2 ( be-located-at-91 :arg1 i :arg2 ( room :part-of he :location room ) )
multi-sentence :snt1 ( story :topic ( and :op1 ( pregnancies :quant num_0 ) :op2 births ) ) :snt2 ( night :mod tuesday :time ( night :quant num_1 ) :location ( value-interval :op1 num_1 :op2 num_1 ) )
late :domain bus
clear-06 :polarity - :arg1 ( or :op1 ( accept-01 :arg0 he :arg1 petition-01 ) :op2 ( meet-03 :arg0 he :arg1 pope :time already ) )
expect-01 :arg1 ( release-01 :arg0 i :arg1 ( detail :topic ( strategy :poss it :mod defend-01 ) ) :degree more :time ( date-entity month_date-entity_0 day_date-entity_0 :time-of ( celebrate-02 :arg0 ( and :op1 ( food :poss retail-01 ) :op2 alcohol :op3 range ) :arg1 ( day :mod strategy :poss ( person :arg0-of invest-01 ) ) ) ) )
say-01 :arg0 ( media :mod country_name_0 ) :arg1 ( pregnant :domain ( seat-01 :part-of government-organization ) )
and :op1 ( take-01 :arg0 city_name_0 :arg1 advantage ) :op2 ( get-01 :arg0 city :arg1 advantage :arg2 person_name_1 )
i :mod at-least
say-01 :arg0 ( few :op1 ( temporal-quantity temporal-quantity_num_0 :unit hour ) ) :arg1 ( plan-01 :arg0 ( person_name_0 :arg0-of ( have-org-role-91 :arg1 ( and :op1 ( work-01 :arg0 person ) :op2 ( person :arg0-of ( have-org-role-91 :arg2 secretary ) ) :op3 pension ) ) ) :arg1 ( plan-01 :arg0 ( government-organization :arg0-of govern-01 ) :arg1 ( reduce-01 :arg0 government-organization :arg1 ( limit-01 :arg1 ( monetary-quantity monetary-quantity_num_1 :unit yuan ) :arg2 ( monetary-quantity monetary-quantity_num_1 :unit yuan ) ) ) :arg1-of ( clear-06 :degree very ) ) ) :time ( late :op1 ( few :op1 ( temporal-quantity temporal-quantity_num_1 :unit hour ) ) :degree more )
issue-02 :arg0 ( think-01 :arg0 you :arg1 ( recommend-01 :arg1 ( discuss-01 :arg0 world ) ) )
free-03 :polarity - :arg1 ( position-02 :arg0 ( company :arg0-of ( supply-01 :arg1 aircraft ) ) ) :manner exclusive-02
free-03 :polarity - :arg1 ( position-02 :arg0 ( company :arg0-of supply-01 :arg0-of supply-01 ) ) :manner exclusive-02
and :op1 ( catch-01 :arg1 person_name_0 :location delegate :time ( leave-11 :arg0 person :arg1 field :time ( after :op1 ( leave-15 :arg0 person :arg1 field :time ( after :op1 error ) ) ) ) ) :op2 ( tell-01 :arg0 person :arg1 ( start-01 :arg0 person :arg1 ( career :poss person :location ( organization_name_3 :part-of organization_name_3 ) ) :arg1-of ( bad-07 :degree more ) :arg1-of ( cause-01 :arg0 ( start-01 :arg0 person :arg1 ( career :poss person :location organization_name_3 ) :arg1-of ( bad-07 :degree more ) ) ) ) )
take-01 :arg0 i :arg1 it :arg3 ( play-01 :arg0 we :location home ) :arg0-of ( cause-01 :arg1 ( have-polarity-91 :arg2 - :mod definite ) )
talk-01 :polarity - :arg0 ( doctor_name_0 :mod ( person :arg0-of use-01 ) ) :arg1-of ( resemble-01 :arg2 ( sack :arg1 ( or :op1 salt :op2 geopolitics ) ) )
and :op1 ( come-01 :arg1 person_name_0 :location ( part :part-of tour ) ) :op2 ( bring-01 :arg0 person :arg1 team :arg2 ( and :op1 ( team :mod energy ) :op2 ( spark :arg1 team ) ) )
(-(
see-01 :arg0 ( person :arg0-of visit-01 ) :arg1 ( selection :poss ( film :mod ( interesting :degree most ) :topic ( and :op1 ( produce-01 :arg0 ( person :arg0-of study-01 ) ) :op2 ( animation :arg0 person ) :op3 documentary ) ) )
reflect-01 :arg1 ( table :arg1-of empty-02 ) :arg2 amr-unknown :condition ( mess :location mind )
state-01 :arg0 ( person :arg0-of prosecute-01 :arg2-of ( include-01 :arg1 ( and :op1 police :op2 court :op3 court ) ) :arg2-of ( include-91 :arg1 ( and :op1 police :op2 court :op3 office ) ) :arg2-of ( include-91 :arg1 ( and :op1 police :op2 court :op3 office ) ) :mod this :quant all ) :arg1 ( country_name_0 :mod safe-01 )
move-01 :arg1 location_name_0 :arg2 country_name_1 :arg3 country_name_2 :arg1-of ( cause-01 :arg0 ( consider-02 :arg1 ( enter-01 :arg1 organization_name_3 ) ) )
and :op1 ( move-01 :arg1 ( and :op1 ( company :arg0-of ( manufacture-01 :arg1 building_name_0 ) ) :op2 ( company :quant num_0 :arg1-of ( include-91 :arg2 ( company :mod ( tech :arg1-of high-02 ) :location country_name_1 ) ) ) ) :arg2 ( late :degree most ) ) :op2 ( base-02 :arg1 ( thing :arg2-of ( result-01 :arg1 ( thing :arg1-of ( believe-01 :arg0 company ) ) ) ) :arg2 ( thing :arg2-of result-01 :mod ( good :degree more ) ) )
say-01 :arg1 ( know-01 :polarity - :arg0 i :arg1 ( possible-01 :arg1 ( tell-01 :arg0 i ) ) ) :arg2 person_name_0
contrast-01 :arg1 ( possible-01 :arg1 ( threaten-01 :arg0 country_name_0 :arg1 ( force :arg1-of ( neighbor-01 :arg2 country ) ) :mod again :mod again :arg1-of possible-01 ) :mod again ) :arg2 ( seem-01 :arg1 ( participate-01 :arg0 he :arg1 ( part :part-of person ) :arg1-of ( increase-01 :arg1-of increase-01 ) ) :arg1-of ( cause-01 :arg0 ( seem-01 :arg1 ( participate-01 :arg0 he :arg1 reality :time always ) ) ) )
multi-sentence :snt2 ( possible-01 :arg1 ( act-01 :arg0 we :arg1 ( act-01 :arg0 they :arg1 ( spojler :arg0 amr-unknown :arg1 ( person :arg0-of ( heart :mod heart ) ) ) ) ) :condition ( have-polarity-91 :arg2 - :mod anyway ) ) :snt1 ( '' :mode interrogative :mod anyway )
multi-sentence :snt1 ( and :op1 ( person_name_0 :time ( before :op1 now :quant ( temporal-quantity temporal-quantity_num_0 :unit month ) ) ) :op2 ( person_name_1 :arg0-of ( have-org-role-91 :arg2 general ) ) :op3 ( person :arg0-of ( have-rel-role-91 :arg1 person :arg2 brown ) ) :op4 ( person :arg0-of ( have-rel-role-91 :arg1 person :arg2 brown ) ) :op5 ( person :arg0-of ( have-rel-role-91 :arg1 person :arg2 man ) ) :op6 ( person :arg0-of ( have-rel-role-91 :arg1 person :arg2 man ) ) :op6 ( person :arg0-of ( have-rel-role-91 :arg1 person :arg2 man ) ) :op7 ( person :arg0-of ( have-rel-role-91 :arg1 person :arg2 man ) ) :op7 ( person :arg0-of ( have-rel-role-91 :arg1 person :arg2 man ) ) ) :snt2 ( say-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg1 organization_name_3 ) ) :arg1 organization_name_3 )
fears :arg0 ( and :op1 ( person :arg0-of ( have-org-role-91 :arg1 organization_name_0 :arg2 member ) ) :op2 ( person_name_1 :arg0-of ( have-org-role-91 :arg1 organization :arg2 member ) ) :op3 ( person :arg0-of ( have-org-role-91 :arg1 organization :arg2 member ) ) :op4 ( person :arg0-of ( have-org-role-91 :arg1 organization :arg2 member ) ) :op5 ( person :arg0-of ( have-org-role-91 :arg1 organization :arg2 member ) ) ) :arg1 ( fear-01 :mod location_name_3 :arg1-of ( base-02 :arg2 ( survey-01 :arg1 ( person :arg0-of ( have-org-role-91 :arg2 member ) :arg0-of ( have-org-role-91 :arg2 member ) ) ) ) )
spend-01 :arg0 ( politician :mod cell ) :duration ( temporal-quantity temporal-quantity_num_0 :unit hour )
monument :mod technical :arg1-of local-02 :domain ( pump :mod chlum )
multi-sentence :snt1 ( need-01 :mode interrogative :arg0 you :arg1 he ) :snt2 ( peaches :li num_0 :arg1 ( person :quant num_0 :arg0-of ( have-rel-role-91 :arg2 dd1 ) ) ) :snt3 ( leave-11 :mode interrogative :arg0 ( person :quant num_0 :arg1-of ( include-91 :arg2 ( person :quant num_1 :arg0-of ( have-rel-role-91 :arg2 dd1 ) ) ) ) ) :snt3 ( leave-11 :mode interrogative :arg0 ( person :quant num_0 :arg0-of ( have-rel-role-91 :arg2 dd1 ) ) ) :li num_1
cause-01 :arg0 ( withdraw-01 :arg0 ( person_name_0 :arg0-of ( have-org-role-91 :arg1 organization_name_1 ) ) :arg1 ( thing :arg1-of ( propose-01 :arg0 person ) ) :arg1-of ( cause-01 :arg0 ( withdraw-01 :arg0 person :arg1 ( propose-01 :arg0 person ) ) ) ) :arg1 ( limit-01 :arg0 ( verdict :poss organization ) :arg1 ( thing :arg1-of ( propose-01 :arg0 person ) :arg0-of ( limit-01 :arg1 ( insure-02 :mod liability ) :prep-in case-03 :arg1-of ( cause-01 :arg0 ( cover-01 :polarity - :arg0 person :arg1 risk-01 ) ) ) ) )
say-01 :arg0 ( person_name_0 :arg0-of ( have-org-role-91 :arg1 state :arg2 ( secretary :mod state ) ) ) :arg1 ( plan-01 :arg0 ( government-organization :arg0-of govern-01 :arg1-of long-03 ) :arg1 foundation :purpose ( economy :arg1-of ( strong-02 :degree more ) ) ) :medium ( comment-01 :arg0 person :arg3 ( figure :time ( late :degree most ) ) )
say-01 :arg0 ( person :arg0-of ( vote-01 :arg1 ( state :mod entire ) ) :quant ( about :op1 1/2 ) ) :arg1 ( say-01 :arg0 person :arg1 ( support-01 :arg0 person :arg1 person_name_0 :condition ( become-01 :arg1 person :arg2 ( candidate :beneficiary party ) ) ) )
rate :name ( name :op1 sunrise :op2 dominates ) :mod dominates :mod sunrise :mod sunrise
and :op1 ( feel-01 :arg0 ( person :arg0-of ( have-rel-role-91 :arg1 you :arg2 roommates ) ) :arg1 ( obligate-01 :arg1 person :arg2 ( talk-01 :arg0 person :arg2 you ) ) ) :op2 ( end-up-03 :arg1 everything :arg2 ( add-02 :arg0 person :arg1 ( face :part-of you ) :arg2 ( surprise :mod tasty ) ) )
get-01 :arg0 person_name_0 :arg1 ( division :quant num_0 ) :time ( before :op1 ( win-01 :arg0 person_name_2 :arg1 ( num_1 :quant num_1 ) ) :mod just )
cause-01 :arg0 ( and :op1 ( represent-01 :arg0 ( and :op1 south :op2 west ) :arg1 ( rate-entity-91 :arg1 ( percentage-entity percentage-entity_num_0 ) :arg2 ( temporal-quantity temporal-quantity_num_1 :unit year ) ) ) :op2 ( generate-01 :arg0 and :arg1 ( turnover :arg1-of ( high-02 :degree ( more :quant much ) ) ) :compared-to ( network :name ( name :op1 metcash ) :location location_name_0 ) ) ) :arg1 ( lot :domain stake )
say-01 :arg0 ( government-organization :arg0-of govern-01 ) :arg1 ( cause-01 :arg0 ( change-01 :arg0 government-organization :arg1 ( alia :mod inter ) ) :arg1 ( react-01 :arg0 government-organization :arg2 ( situation :time current :mod economy ) ) )
and :op1 ( pension :location country_name_0 :arg1-of regular-02 ) :op2 ( rise-01 :arg1 ( and :op1 ( thing :arg2-of price-01 ) :op2 ( grow-01 :arg1 wage-01 :mod real ) ) :ord ( ordinal-entity ordinal-entity_num_0 ) )
find-02 :arg0 we :arg1 ( female :domain it ) :manner ( way :mod biometric :arg1-of ( contact-01 :arg0 ( each :arg1-of need-01 ) :arg1-of regular-02 ) )
collaborate-01 :mode imperative :arg0 you :arg1 it :arg2 ( and :op1 ( stabilize :arg1 it ) :op2 ( contain-00 :arg1 adds :manner sickness ) ) :arg1-of direct-02
need-01 :arg0 we :arg1 ( think-01 :arg0 we :arg1 ( thing :manner-of ( reduce-01 :arg1 kill-01 :location ( country :poss they ) ) ) ) :time final
thrives :arg1 it :manner unpredictable :location ( garden :poss we )
and :op2 ( saddled :arg1 ( person :quant num_0 ) :arg2 ( or :op1 six-inch :op2 ( cross-02 :arg1 gold :mod massive ) ) )
say-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg1 ( organization_name_0 :location ( person_name_1 :arg0-of ( have-org-role-91 :arg1 organization :arg2 chief ) ) :arg2 chief ) ) ) :arg1 ( hear-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg1 university :arg2 ( staff :mod university ) ) ) :arg1 shooting )
say-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg1 political-party_name_0 ) ) :arg1 ( network :consist-of ( life :arg1-of black-04 ) :domain ( network :consist-of ( life :arg1-of black-04 ) ) )
talk-01 :arg0 she :arg1 ( practice-01 :manner disciplinary ) :time meantime
rule-out-02 :polarity - :arg0 ( person_name_0 :time ( visit-01 :arg0 person :arg1 country-region_name_1 ) ) :arg1 ( base :mod air :poss country_name_2 :location country_name_2 ) :time future
contrast-01 :arg1 ( remain-01 :arg1 ( employ-01 :polarity - :mod country_name_0 ) :arg3 unchanged ) :arg2 ( rise-01 :arg1 ( rate :mod ( employ-01 :polarity - ) :mod overall ) :mod overall )
suffer-01 :arg0 organization_name_0 :arg1 ( effect :mod yes-yes )
come-01 :arg1 recession-02 :time ( after :op1 ( and :op1 ( hike :arg1 ( rate :ord ( ordinal-entity ordinal-entity_num_0 ) ) ) :op2 ( last-01 :arg1 recession-02 :arg2 ( temporal-quantity temporal-quantity_num_1 :unit month ) ) ) )
disagree-01 :arg0 we :arg1 ( quota :arg1 ( system :arg0-of ( work-01 :polarity - :arg1-of possible-01 ) ) ) :arg2 quota
multi-sentence :snt1 ( except-01 :arg1 ( and :op1 ( inform-01 :arg0 they :arg1 ( person :arg0-of ( have-org-role-91 :arg1 police :arg2 officer ) ) :arg2 ( out-06 :arg1 person :arg2 ( and :op1 ( person :arg0-of ( have-org-role-91 :arg1 police :arg2 officer ) ) :op2 ( person :arg0-of ( have-org-role-91 :arg1 police :arg2 officer ) ) :op3 ( person :arg0-of ( have-org-role-91 :arg1 police :arg2 officer ) ) :op4 ( person :arg0-of ( have-org-role-91 :arg1 police :arg2 officer ) ) :op5 ( person :arg0-of ( have-org-role-91 :arg1 police :arg2 officer ) ) :op6 ( person :arg0-of ( have-org-role-91 :arg1 police :arg2 officer ) ) :op6 ( person :arg0-of ( have-org-role-91 :arg1 police :arg2 officer ) ) :op6 ( person :arg0-of ( have-org-role-91 :arg1 police :arg2 officer ) ) :op6 ( person :arg0-of ( have-org-role-91 :arg1 police :arg2 officer ) ) :op6 ( person :arg0-of ( have-org-role-91 :arg1 police :arg2 officer ) ) :op7 ( person :arg0-of ( have-org-role-91 :arg1 police :arg2 officer ) ) ) ) ) ) ) :snt2 ( thing :arg2-of ( name-01 :arg1 ( cover-03 :arg0 individual ) ) )
clash :domain this :time ( week :mod last ) :location ( across :op1 country_name_0 ) :arg1-of ( cause-01 :arg0 ( say-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg1 ( group :mod ethnic :poss group ) :arg2 member ) ) :arg1 ( and :op1 ( establish-01 :arg0 person :arg1 ( province :mod new ) ) :op2 ( have-03 :arg0 person :arg1 ( digit :mod politics :poss person ) ) ) ) )
find-01 :arg0 ( person :arg1-of ( include-91 :arg2 ( person :arg0-of ( have-org-role-91 :arg1 organization_name_0 ) ) :arg3 ( percentage-entity :value ( percentage-entity :value num_0 ) ) ) ) :arg1 person_name_1 :mod positive :time ( after :op1 ( vote-01 :arg0 organization :arg1 organization :time ( week :mod last ) ) )
possible-01 :polarity - :arg1 ( duel :arg0 you :arg1 ( person :arg0-of play-01 :mod hockey ) :arg2 ( person :arg0-of play-01 :mod hockey :quant ( num_0 :mod hockey ) ) ) :time ( after :op1 ( lose-02 :arg0 you :arg1 ( championship :location ice ) ) )
say-01 :arg2 person_name_0
look-01 :arg1 ( thing :manner-of ( respond-01 :arg0 they :arg1 ( area :mod certain :part-of economy ) :arg1-of ( base-02 :arg2 ( trend :mod history ) ) ) )
contrast-01 :arg2 ( now :mode interrogative )
contrast-01 :arg2 ( make-01 :arg1 ( num_1 :polarity - ) )
announce-01 :arg0 she :arg1 ( have-org-role-91 :arg0 ( person_name_0 :arg0-of ( have-org-role-91 :arg2 chancellor ) ) :arg1 ( person :arg0-of ( have-org-role-91 :arg2 chancellor ) ) :time ( after :op1 ( meet-03 :arg0 person :arg1 ( premiere :mod german ) ) ) )
and :op2 ( learn-01 :arg0 i :arg1 ( and :op1 ( lead-03 :polarity - :arg0 ( interference :arg0-of ( interference :arg1 ecosystem ) ) :arg2 ( succeed-01 :arg0 interference ) ) :op2 ( replace-01 :arg1 ( person :quant num_0 :arg0-of ( have-org-role-91 :arg2 pest ) ) :arg2 ( possible-01 :arg1 ( replace-01 :arg0 ( person :quant num_0 ) :arg1 ( person :ord ( ordinal-entity ordinal-entity_num_1 ) ) ) ) ) ) )
and :op2 ( take-10 :arg0 amr-unknown :arg1 ( step :arg1-of soft-02 :domain that ) :mod exact )
ask-02 :arg0 he :arg1 ( die-01 :arg1 ( person :quant num_0 :arg1-of ( include-91 :arg2 ( person :quant num_1 :arg0-of ( witness-01 :arg1 ( die-01 :arg1 person ) ) ) ) ) ) :arg2 i
and :op1 ( suspect-01 :polarity - :arg1 ( person :arg0-of ( teach-01 :arg1 ( shoot-02 :arg0 person :arg1 ( person :arg0-of ( have-org-role-91 :arg1 organization_name_0 :arg2 ( professor :mod favorite ) ) ) :location peninsula_name_1 ) ) ) :arg2 ( suspect-01 :arg0 person :arg1 ( shoot-02 :arg0 person :arg1 ( person_name_3 :arg0-of ( have-org-role-91 :arg2 ( professor :mod favorite ) ) ) :location ( doorway :poss ( office :poss person ) ) ) ) )
focus-01 :arg1 ( launch-01 :arg1 ( music :mod company_name_0 ) ) :arg2 ( awards :mod ( music :mod company ) ) :time ( year :mod last ) :mod also
and :op1 ( receive-01 :arg0 i :arg1 ( petition-01 :arg0 i :arg2 ( person :arg0-of ( have-rel-role-91 :arg1 he :arg2 ( friend :mod ( good :degree most ) ) ) ) ) :time first ) :op2 ( agree-01 :arg0 i )
submits :arg1 ( thing :location ( around :op1 ( person :quant ( around :op1 num_0 ) ) ) ) :arg2 ( motion :beneficiary ( service :mod online :mod this ) :source location_name_0 ) :time ( after :op1 ( temporal-quantity temporal-quantity_num_0 :unit month :mod almost ) )
contrast-01 :arg2 ( have-polarity-91 :arg2 - )
cause-01 :arg0 ( arrive-01 :arg1 ( team :poss he ) :arg4 network :arg1-of ( cause-01 :arg0 ( arrive-01 :arg1 ( team :poss he ) :arg4 network :time ( after :op1 ( start-01 :arg1 ( person_name_2 :ord ( ordinal-entity ordinal-entity_num_0 ) :ord ( ordinal-entity ordinal-entity_num_2 ) :ord ( ordinal-entity ordinal-entity_num_2 ) :ord ( ordinal-entity ordinal-entity_num_2 ) :ord ( ordinal-entity ordinal-entity_num_2 ) :ord ( ordinal-entity ordinal-entity_num_2 ) :ord ( ordinal-entity ordinal-entity_num_2 ) :ord ( ordinal-entity ordinal-entity_num_2 ) :ord ( ordinal-entity ordinal-entity_num_2 ) :ord ( ordinal-entity ordinal-entity_num_2 ) :ord ( ordinal-entity ordinal-entity_num_2 ) :ord ( ordinal-entity ordinal-entity_num_2 ) :ord ( ordinal-entity ordinal-entity_num_2 ) :ord ( ordinal-entity ordinal-entity_num_2 ) ) ) ) ) ) ) :arg1 ( and :op1 ( pecking :arg0 they :arg1 ( attack-01 :arg1 they ) ) :op2 ( finish-01 :arg0 they :arg1 ( finish-07 :arg0 they :arg2 ( good :polarity - ) :mod either ) ) ) :arg1-of instead-of-91
part time :arg1 ( job :quant most )
contrast-01 :arg2 ( do-02 :arg1 it :manner success )
think-01 :arg0 i :arg1 ( believe-01 :arg0 person_name_0 :arg1 we )
predict-01 :arg0 ( person :mod economy :quant ( about :op1 1/2 ) ) :arg1 ( increase-01 :arg1 rate :time ( week :mod this ) ) :time recent
multi-sentence :snt1 ( have-org-role-91 :arg0 he :arg2 ( minister :mod right ) ) :snt2 ( attempt-01 :mode interrogative :arg0 ( person_name_0 :arg0-of ( have-org-role-91 :arg2 chancellor ) ) :arg1 ( dominate-01 :arg0 person :arg1 ( centre :mod entire :location continent_name_1 ) ) )
remembers :arg0 he :arg1 ( want-01 :arg0 he :arg1 ( live-01 :arg0 he :location ( and :op1 dignity :op2 free-04 ) ) ) :time once
game :mod good :mod only :poss he :domain ( game :quant num_1 :mod last :poss he )
say-01 :arg0 he :arg1 ( contrast-01 :arg1 ( seem-01 :arg1 ( use-01 :arg0 i :arg1 ( word :name ( name :op1 deafened :op2 deafened ) ) ) ) :arg2 ( seem-01 :arg1 ( use-01 :arg0 i :arg1 ( word :name ( name :op1 deafened :op2 deafened ) ) ) ) ) :arg2 ( radio :mod '' )
behind :op1 ( point :mod grow-01 ) :location world-region_name_0
contrast-01 :arg1 ( use-01 :arg1 ( nail :mod ( large :degree more ) ) :arg2 ( model :mod ( large :degree more ) ) ) :arg2 ( change-01 :polarity - :arg0 ( person :arg0-of ( have-rel-role-91 :arg2 dd1 ) ) )
contrast-01 :arg1 ( flavour :polarity - :domain oil :mod distinctive ) :arg2 ( say-01 :arg0 ( person_name_0 :arg0-of ( have-org-role-91 :arg1 ( firm :part-of oven ) :arg2 organization_name_1 ) ) :arg1 oil :mod great )
contrast-01 :arg2 ( feel-01 :arg0 frustrate-01 :arg1 frustrate-01 )
say-01 :arg0 he :arg1 ( contrast-01 :arg1 ( want-01 :arg0 ( and :op1 ( view-02 :quant num_0 ) :op2 ( team :mod ( every :polarity - ) ) ) :arg1 ( play-01 :arg0 team :arg1 ( style :mod football :poss he ) ) :time now ) :arg2 ( have-03 :polarity - :arg0 ( team :mod every :example ( and :op1 person_name_0 :op2 person_name_1 ) ) :arg1 ( play-01 :polarity - :arg0 team :arg1 style ) ) )
say-01 :arg0 company :arg1 ( plan-01 :arg0 company :arg1 ( hire-01 :arg0 company :arg1 ( person :arg1-of employ-01 :quant ( about :op1 num_0 ) ) :arg2 ( and :op1 store :op2 ( center :arg1-of distribute-01 ) :location ( across :op1 country ) :arg1-of ( last-01 :arg2 ( season :quant num_1 :mod last ) ) ) ) ) :mod also
(-(
refugee :quant num_0 :mod still :time ( morning :mod wednesday )
multi-sentence :snt1 ( lead-01 :arg0 organization_name_0 :arg1-of ( lead-02 :arg0 ( and :op1 person_name_1 :op2 ( lose-02 :time then ) ) ) ) :snt2 ( contrast-01 :arg1 ( lose-02 :arg1 ( card :mod red :poss person_name_2 ) :time ( late :degree more ) ) :arg2 ( revoked :arg1 ( card :mod red :poss person_name_2 ) :time ( late :degree more ) ) )
and :op2 ( collects :arg0 person_name_0 :mod also ) :mod also
say-01 :arg0 ( person_name_0 :arg0-of ( advise-01 :arg1 ( security :mod country ) :arg2 ( person :arg0-of ( advise-01 :arg2 security ) ) ) ) :arg1 ( deep-02 :arg1 ( person :quant num_0 :mod other ) :arg2 country :time already :arg1-of ( deep-02 :degree more ) :time already )
arrest-01 :arg1 police :time ( weekend :time weekend ) :arg1-of ( follow-01 :arg2 ( and :op1 ( hit-01 :arg0 police :arg2 cyclist ) :op2 ( run-02 :arg0 police :location location_name_0 ) ) )
arrest-01 :arg0 police :arg1 man :time ( over :op1 weekend ) :time ( after :op1 ( expel-01 :arg0 police :arg1 ( person :arg0-of drive-01 ) :location location_name_0 ) )
affect-01 :arg0 turmoil :arg1 complex :time ( recommend-01 :arg1 ( raise-01 :arg0 they :arg1 ( rate :mod interest ) ) )
say-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg1 ( organization_name_0 :arg0-of ( have-org-role-91 :arg1 ( person_name_1 :arg0-of ( have-org-role-91 :arg1 organization :arg3 ( lead-02 :arg0 person ) ) ) :arg2 co-founder ) ) ) :arg0-of ( have-org-role-91 :arg1 organization :arg3 ( lead-02 :arg0 person :arg1 organization ) ) :arg0-of ( have-org-role-91 :arg1 organization :arg3 co-founder ) :arg0-of ( have-org-role-91 :arg1 organization :arg3 co-founder ) :arg0-of ( have-org-role-91 :arg1 organization :arg3 co-founder ) :arg0-of ( have-org-role-91 :arg1 organization :arg3 co-founder ) :arg0-of ( have-org-role-91 :arg1 organization :arg3 co-founder ) :arg0-of ( have-org-role-91 :arg1 organization :arg3 co-founder ) :arg0-of ( have-org-role-91 :arg1 organization :arg3 co-founder ) :arg0-of ( have-org-role-91 :arg1 organization :arg3 co-founder ) :arg0-of ( have-org-role-91 :arg1 organization :arg3 co-founder ) :arg0-of ( have-org-role-91 :arg1 organization :arg3 co-founder ) :arg0-of ( have-org-role-91 :arg1 organization :arg3 co-founder ) :arg0-of ( have-org-role-91 :arg1 organization :arg3 co-founder ) :arg0-of ( have-org-role-91 :arg1 organization :arg3 co-founder ) :arg0-of ( have-org-role-91 :arg1 organization :arg3 co-founder ) :arg0-of ( have-org-role-91 :arg1 organization :arg3 co-founder ) :arg0-of ( have-org-role-91 :arg1 organization :arg3 co-founder ) :arg0-of ( have-org-role-91 :arg1 organization :arg3 co-founder ) :arg0-of ( have-org-role-91 :arg1 organization :arg3 co-founder ) :arg0-of ( have-org-role-91 :arg1 organization :arg3 co-founder ) :arg0-of ( have-org-role-91 :arg1 organization :arg3 co-founder ) :arg0-of ( have-org-role-91 :arg1 organization :arg3 co-founder ) :arg0-of ( have-org-role-91 :arg1 organization :arg3 co-founder ) :arg0-of ( have-org-role-91 :arg1 organization :arg3 co-founder ) :arg0-of ( have-org-role-91 :arg1 organization :arg3 co-founder ) :arg0-of ( have-org-role-91 :arg1 organization :arg3 co-founder ) :arg0-of ( have-org-role-91 :arg1 organization :arg3 co-founder ) :arg0-of ( have-org-role-91 :arg1 organization :arg3 co-founder ) :arg0-of ( have-org-role-91 :arg1 organization :arg3 co-founder ) :arg0-of ( have-org-role-91 :arg1 organization :arg3 co-founder ) :arg0-of ( have-org-role-91 :arg1 organization :arg3 co-founder ) )
shape :arg1 ( plan-01 :arg1 ( settlement :mod holiday :location location_name_0 ) )
ready-02 :polarity - :arg1 ( person :arg0-of ( drive-01 :arg1 car ) ) :arg2 ( rely-01 :arg0 person :arg1 ( vehicle :mod self-propelled ) :location country_name_0 :arg1-of complete-02 ) :mod anyway
ready-02 :polarity - :arg1 ( person :arg0-of drive-01 :location country_name_0 ) :arg2 ( rely-01 :arg0 person :arg1 ( vehicle :mod self-propelled ) :arg1-of complete-02 ) :mod anyway
cause-01 :arg1 ( possible-01 :arg1 ( shift-01 :arg0 it :arg1 ( route :mod ( world-region_name_0 :mod previous ) ) :arg2 ( and :op1 country_name_1 :op2 country_name_2 :op3 country_name_3 :op4 country_name_4 :op5 country_name_5 ) :time already :arg1-of ( predict-01 :arg0 ( person :arg0-of observe-01 ) :arg2 ( come-01 :arg1 ( route :mod ( further :degree little ) ) ) ) ) )
present-01 :arg1 ( person :arg0-of invest-01 ) :arg2 ( plan-01 :arg1 project :ord ( ordinal-entity ordinal-entity_num_0 ) ) :arg1-of public-02
discuss-01 :arg1 ( issue-02 :arg0 ( protect-01 :arg1 ( person :arg0-of invest-01 ) ) ) :concession ( person :polarity - country_name_0 )
and :op1 ( person_name_0 :arg0-of ( have-org-role-91 :arg2 director ) ) :op2 ( person :arg0-of ( have-org-role-91 :arg2 director ) ) :op3 ( person :arg0-of ( have-org-role-91 :arg2 director ) ) :op4 ( person :arg0-of ( have-org-role-91 :arg2 director ) ) :op5 ( person :arg0-of ( have-org-role-91 :arg2 director ) )
play-02 :arg0 person_name_0 :arg1 ( diversity :topic ( create-01 :arg1 film ) )
announce-01 :arg0 he :arg1 ( change-01 :arg1 ( position :mod goalkeeper ) )
have-concession-91 :arg2 ( question-03 :arg0 ( person :arg0-of ( vote-01 :arg1 democracy ) ) :arg1 ( question-01 :arg1 ( over :op1 eligibility ) ) :degree more ) :arg1-of have-concession-91
and :op1 ( attack-01 :arg0 ( organization_name_0 :mod ( journal :mod medicine ) ) :arg1 ( thing :arg1-of ( base-02 :arg2 ( name :op1 '' ) ) ) :time ( month :mod last ) :time ( month :mod last ) ) :op2 ( conclude-01 :arg0 he :arg1 ( conclude-01 :arg0 he :mod main ) )
attack-01 :arg1 ( organization_name_0 :mod ( journal :mod medicine ) ) :time ( month :mod last ) :arg1-of ( base-02 :arg2 ( explain-01 :arg1 ( explain-01 :arg0 he :arg1 ( conclude-01 :arg0 he :mod main ) ) ) )
agree-01 :arg0 i :arg1 ( way :mod good :manner-of ( tell-01 :arg1 ( story :mod whole :topic ( penalize-01 :manner die-01 ) ) :domain it ) )
find-01 :arg0 ( person_name_0 :arg0-of ( have-org-role-91 :arg1 organization_name_1 ) ) :arg1 ( page :mod some ) :arg3 ( neurosurgeon :time former ) :time ( after :op1 ( apologize-01 :arg0 person :arg1 ( question-03 :arg0 person :arg1 ( faith :poss organization :topic question-01 ) ) ) )
find-01 :arg0 ( person :arg0-of ( view-01 :arg1 ( person_name_0 :arg1-of rise-01 ) :time ( week :mod last ) ) ) :arg1 ( side-01 :arg0 organization_name_1 :arg1 ( side :mod some ) :time former ) :time ( after :op1 ( apologize-01 :arg0 person :arg1 that :arg2 ( faith :poss organization :topic question-01 ) ) )
person :arg0-of ( lead-02 :arg1 political-party_name_0 ) :ord ( ordinal-entity ordinal-entity_num_0 ) :arg0-of ( face-01 :arg1 person_name_2 :time ( since :op1 ( tory-leader :arg1 person :time ( decade :mod last ) :location parliament ) ) ) :domain person
sit-01 :arg1 person_name_0 :arg2 ( stage :location organization_name_1 ) :time ( before :op1 now :quant ( temporal-quantity temporal-quantity_num_0 :unit year ) )
say-01 :arg0 ( person_name_0 :arg0-of ( have-org-role-91 :arg2 president ) ) :arg1 ( need-01 :arg0 economy :arg1 ( open-up-03 :arg0 economy :arg1 ( world :mod outside ) :degree more :compared-to ( world :mod outside ) :purpose ( promote-02 :arg0 economy :arg1 grow-01 ) ) ) :arg1-of ( say-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg2 president ) ) ) :arg1-of ( say-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg2 president ) ) )
add-01 :arg0 organization_name_0 :arg1 ( recommend-01 :arg1 ( start-01 :arg0 ( and :op1 person :op2 ( doctor :poss and ) ) :arg1 ( take-01 :arg0 and :arg1 ( weight :mod serious ) ) ) :time ( once :op1 ( have-rel-role-91 :arg0 and :arg1 ( person :quant num_0 ) :arg2 patient ) ) )
lack-01 :arg0 ( access-01 :arg1 ( market :mod labour ) ) :arg1 ( thing :arg1-of ( know-02 :arg2 ( market :mod labour ) ) ) :mod big
lack-01 :arg0 ( person :mod country_name_0 ) :arg1 ( thing :arg1-of ( access-01 :arg0 ( market :mod political-party_name_2 ) ) :arg1-of major-02 )
bone :polarity - :domain it :mod as-well
bone :polarity - :domain it :mod as-well
bone :domain it :mod as-well
multi-sentence :snt1 ( cause-01 :arg0 ( market-01 :arg1 ( market :arg0-of house-01 ) ) :arg1 ( adult :mod young ) :arg1-of ( cause-01 :arg0 ( market :arg0-of house-01 ) :time no-longer ) ) :snt2 ( '' :mode expressive )
special-02 :arg1 ( play-01 :arg0 ( team :poss we ) :prep-against ( side :mod ( division :ord ( ordinal-entity ordinal-entity_num_0 ) ) ) )
something :domain ( play-01 :arg1 ( team :consist-of ( division :ord ( ordinal-entity ordinal-entity_num_0 ) ) ) ) :arg1-of special-02
fall-01 :arg1 euro :arg4 ( under :op1 ( monetary-quantity monetary-quantity_num_0 :unit dollar :mod last ) )
predominate :arg0 man :arg1 staff :time moment
person_name_0 :location clinic
stress-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg2 chancellor ) ) :arg1 ( obligate-01 :arg2 ( cope-01 :arg0 ( state :mod whole ) :arg1 ( effort :mod huge :mod ( huge :mod '' ) ) :time now ) )
recommend-01 :arg0 ( jury :mod grand :location location_name_0 ) :arg1 ( charge-05 :arg1 ( person :arg0-of murder-01 :ord ( ordinal-entity ordinal-entity_num_0 ) ) :arg2 murder-01 :ord ( ordinal-entity ordinal-entity_num_0 ) )
lead-03 :arg0 move-02 :arg2 ( charge-01 :arg2 ( about :op1 ( monetary-quantity monetary-quantity_num_0 :unit dollar ) :arg1-of ( suitable-04 :arg2 ( percentage-entity percentage-entity_num_1 ) ) ) :mod exceptional )
include-91 :arg1 ( guy :quant num_0 :arg1-of ( include-91 :arg2 ( guy :arg0-of ( bring-01 :arg1 ( wealth :arg1-of experience-01 ) ) ) ) ) :arg2 guy :arg1-of ( cause-01 :arg0 ( play-11 :arg0 he :arg2 ( condition :quant all ) ) :arg1-of ( cause-01 :arg0 ( play-11 :arg0 he :arg2 ( condition :quant all ) ) ) )
and :op1 ( interest-01 :arg1 he :arg2 ( woman :arg1-of strong-02 ) :time always ) :op2 ( smarter :arg0 ( woman :arg1-of ( differ-02 :degree bit ) ) :arg1 woman )
publish-01 :arg1 ( choose-01 :arg0 she :arg1 person_name_0 :ord ( ordinal-entity ordinal-entity_num_0 ) ) :mod original
say-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg1 organization_name_0 :arg2 president ) ) :arg1 ( know-01 :arg0 person_name_1 :arg1 ( conflict-01 :arg0 ( and :op1 lamb :op2 person_name_2 ) :arg1 ( conflict-01 :arg0 ( and :op1 lamb :op2 person_name_2 ) ) ) )
show-01 :arg0 ( show-04 :arg1 breakfast :source organization_name_0 :source ( air :poss organization ) ) :arg1 ( fall :poss person_name_2 )
(-(
see-01 :arg0 ( person :arg1-of ( include-91 :arg2 ( person :arg0-of republican ) :arg3 majority ) ) :arg1 ( problem :polarity - :domain ( temperament :poss person_name_0 ) )
be-located-at-91 :arg1 ( and :op1 ( person :arg0-of ( undergo-28 :arg1 publication_name_1 :arg2 ( surgery-01 :arg1 obesity ) ) ) :op2 ( likely-01 :arg1 ( die-01 :arg1 ( person :arg0-of ( undergo-28 :arg1 worship-place_name_0 ) ) ) ) ) :arg2 ( person :arg0-of ( undergo-28 :arg1 person :arg2 ( surgery-01 :arg1 worship-place_name_0 ) ) ) :time ( after :op1 now :quant ( about :op1 ( temporal-quantity temporal-quantity_num_0 :unit year ) ) ) :arg1-of ( compare-01 :arg2 ( group :arg0-of ( try-01 :arg1 ( method :mod conventional :quant more ) ) ) )
believe-01 :arg0 ( person :arg0-of ( vote-01 :arg1 organization_name_0 ) ) :arg1 ( real :domain person ) :condition ( put-01 :arg0 they :arg1 ( person :arg0-of ( have-org-role-91 :arg1 ( scholar :poss person ) :arg2 hats ) ) )
and :op1 ( ban-01 :arg0 organization_name_0 :arg1 organization_name_1 ) :op2 ( revoked :arg0 ( fraternity :mod nation ) :arg1 person :arg2 group )
say-01 :arg2 person_name_0
decline-01 :arg1 ( number :quant-of ( area-quantity area-quantity_num_0 :unit ( dollar :mod square ) ) ) :time ( year :mod recent ) :time ( ordinal-entity ordinal-entity_num_0 ) :location city
say-01 :arg0 ( thing :arg1-of state-01 ) :arg1 ( lead-03 :arg0 ( cut-02 :arg1 job :arg1-of expect-01 ) :arg2 ( load :quant load :mod ( more-than :op1 ( monetary-quantity monetary-quantity_num_0 :unit dollar ) ) ) ) :medium statement
and :op1 ( terminated :arg0 person_name_0 :arg1 ( problem :time current :mod this ) :arg1-of strong-02 :time ( after :op1 ( injure-01 :arg1 ( person :arg0-of ( injure-01 :arg1-of separate-02 ) ) :mod ( again :mod last ) ) ) ) :op2 ( find-01 :arg0 person :arg1 ( way :direction back :mod back ) :time then )
have-03 :arg0 person_name_0 :arg1 ( hand :quant all ) :purpose ( transfer-01 :arg0 person :arg1 refugee )
obligate-01 :arg1 person_name_0 :arg2 ( do-02 :arg0 person :arg1 ( hand :quant all ) :arg2 ( accommodation :mod refugee ) :degree full )
great :domain ( start-01 :arg0 ( club :quant num_0 :instrument-of license-01 ) :arg1 ( project :poss club ) :location ( place :poss club ) ) :degree great
contrast-01 )
and :op2 ( appear-01 :arg1 ( organization_name_0 :location ( organization_name_1 :location ( organization_name_1 :mod new ) ) ) )
add-01 :arg0 he :arg1 ( possible-01 :arg1 ( and :op1 ( muscle :domain ( application :mod other ) ) :op2 ( insulin-producing :arg1 cell ) ) )
and :op1 ( lack-01 :arg1 person_name_0 :mod also :time ( time :mod that ) ) :op2 ( become-01 :arg1 we :arg2 ( champions :arg1 continent_name_1 ) )
multi-sentence :snt1 ( thing :arg1-of announce-01 :mod important :arg1-of ( mean-01 :arg2 ( go-06 :arg1 ( thing :quant num_0 :arg1-of ( mean-01 :arg2 ( date-entity month_date-entity_0 day_date-entity_0 ) ) ) :arg2 ( date-entity month_date-entity_0 day_date-entity_0 ) ) ) ) :snt2 ( and :op1 ( reads :arg1 ( and :op1 ( railway :mod ( railway :arg1-of light-06 ) ) :op2 ( thing :quant num_1 ) ) :location ( character :poss ( and :op1 location_name_0 :op2 organization_name_1 ) :arg0-of ( converts :arg1 ( image :poss tank ) ) ) ) )
say-01 :arg0 police :arg1 ( and :op1 ( call-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg1 organization_name_0 :arg2 member ) ) :arg1 ( number :mod emergency ) :arg2 ( number :mod emergency ) :time ( after :op1 ( person_name_1 :arg0-of ( have-org-role-91 :arg1 organization :arg2 member ) ) ) ) :op2 ( wait-01 :arg1 person :arg2 hospital :time ( before :op1 ( bring-01 :arg0 person :arg1 person :arg2 hospital ) ) ) )
and :op1 ( stake :quant lot ) :op2 ( account-01 :arg1 ( percentage-entity percentage-entity_num_0 :arg3-of ( include-91 :arg2 ( shop :mod organization_name_2 ) ) ) ) :op3 ( generate-01 :arg0 and :arg1 ( profit :arg1-of ( high-02 :degree more :compared-to ( profit-01 :arg0 organization_name_3 ) ) ) )
suffer-01 :arg0 person_name_0 :arg1 ( fracture :arg1 ( leg :part-of he ) :mod double ) :arg1-of ( cause-01 :arg0 ( defeat-01 :arg1 ( city_name_1 :arg0-of ( have-org-role-91 :arg1 organization_name_2 ) ) ) )
game :mod ball :domain this :arg1-of ( want-01 :arg0 you :arg1-of ( want-01 :arg0 you ) ) :condition ( have-03 :arg0 you :arg1 ( person :arg0-of play-01 :mod ( kind :mod this ) ) )
invites :arg1 ( person_name_0 :arg0-of ( have-org-role-91 :arg2 invites ) ) :arg3 ( score-entity :op1 num_0 :op2 num_2 ) :arg4 ( idea :poss person ) :time ( date-entity day_date-entity_0 month_date-entity_0 year_date-entity_0 )
set-01 :arg0 ( heart :part-of heart ) :arg2 ( battle-01 :arg0 heart :arg1 ( comment-01 :arg0 person_name_0 ) )
contrast-01 :arg1 ( cause-01 :arg1 ( have-03 :arg0 you :arg1 ( stand :mod whisky :mod around ) :location around ) ) :arg2 ( and :op1 ( leave-15 :arg0 person :arg1 ( hand :mod this ) :arg1-of ( cause-01 :arg0 ( reach-01 :arg0 person :arg1 ( hand :part-of child ) ) ) ) :op2 ( have-condition-91 :arg1 ( way :manner-of ( consume-01 :arg1 ( alcohol :quant lot ) ) ) :arg2 ( come-out-09 :arg1 child ) ) )
have-03 :arg0 ( person :mod seven ) :arg1 ( result :arg3-of mix-01 ) :time ( evening :time evening ) :source location_name_0
kill-01 :arg1 ( person :quant num_0 ) :time ( after :op1 ( fire-01 :arg0 police :arg1 ( cat :name ( name :op1 fire :op2 rubber :op3 rubber ) ) :location ( demonstrators :location country_name_0 ) ) )
early :degree too :domain ( say-01 :arg1 ( say-01 :arg0 ( person :arg0-of ( receive-01 :arg1 ( medicine :mod non-surgical ) ) ) :arg1 ( person :arg0-of ( receive-01 :arg1 ( medicine :mod non-surgical ) ) ) :degree ( more :degree slight ) ) ) :mod still :mod still
multi-sentence :snt1 ( changed :arg0 ( person :arg0-of ( visit-01 :arg1 ( '' :name ( name :op1 exhibition :op2 '' :op3 '' :op4 '' :op5 '' :op6 '' :op7 -rrb- ) ) ) ) :arg1 ( attitude :mod ( negative :mod initial ) :poss person ) :arg2 ( look-01 :arg0 person :arg1 ( person :poss person ) ) ) :snt2 ( possible-01 :arg1 ( attitude :mod ( negative :mod initial ) :poss he ) :topic ( look-01 :arg0 he :arg1 ( person :poss he ) ) )
say-01 :arg0 ( person_name_0 :arg0-of ( have-org-role-91 :arg1 ( and :op1 ( person :arg0-of ( have-org-role-91 :arg2 ( minister :mod labor ) ) ) :op2 ( person :arg0-of ( have-org-role-91 :arg2 ( minister :mod labor ) ) ) :op3 ( person :arg0-of ( have-org-role-91 :arg2 ( minister :mod pension ) ) ) ) ) ) :arg1 ( oppose-01 :arg0 party :arg1 ( plan-01 :arg0 government-organization :arg1 ( cut-off-04 :arg0 government-organization :arg1 ( limit-01 :arg1 ( monetary-quantity monetary-quantity_num_0 :unit yuan ) :arg2 ( monetary-quantity monetary-quantity_num_1 :unit yuan ) ) :mod only ) ) :arg1-of ( clear-06 :degree very ) ) :duration ( temporal-quantity temporal-quantity_num_1 :unit hour )
say-01 :arg0 person_name_0 :arg1 ( lose-02 :arg1 ( enterprise :prep-with ( portion :part-of ( interest :mod flexible ) :arg1-of high-02 ) ) :degree most )
person :arg1-of miss-01 :source ( crime-02 :mod violent ) :source ( crime-02 :mod violent )
country :polarity - organization_name_0 :domain country_name_1 :mod ( schengen :polarity - )
country :polarity - :arg0-of ( have-org-role-91 :arg1 ( organization_name_1 :poss country ) ) :mod yet :time yet
say-01 :arg1 ( try-01 :arg0 i :arg1 ( and :op1 ( keep-01 :arg0 i :arg1 balance-01 ) :op2 ( need-01 :arg0 ( person :arg0-of play-01 ) :arg1 ( take-01 :arg0 person :arg1 ( breather :mod little ) ) ) ) ) :arg2 person_name_0
29-year-old :arg1 ( location_name_0 :location ( district :mod district ) )
and :op1 ( turn-02 :arg1 ( hill :mod so ) :arg2 down ) :op2 ( search-01 :arg1 ( space :mod new ) ) :op3 ( request-01 :arg1 ( permit-01 :arg1 build-01 ) ) :time now
belong-01 :arg0 person_name_0 :arg1 ( team :consist-of ( and :op1 ( woman :quant num_0 :arg1-of ( include-91 :arg2 ( woman :quant num_0 ) ) ) :op2 ( man :quant num_1 :arg0-of ( have-rel-role-91 :arg1 man :arg2 patient ) ) :op3 ( man :quant num_2 :arg0-of ( have-rel-role-91 :arg1 man :arg2 patient ) ) :op4 ( person :arg0-of ( have-rel-role-91 :arg1 man :arg2 patient ) ) :op5 ( person_name_1 :arg0-of ( have-rel-role-91 :arg1 man :arg2 brother ) ) ) )
wait-01 :arg1 ( person :quant ( about :op1 num_0 ) ) :arg2 ( journey :arg0 person :arg2 country_name_1 ) :location location_name_0
be-located-at-91 :arg1 ( store :mod industry :location ( city_name_0 :location ( and :op1 sea_name_1 :op2 downtown ) :quant few ) ) :arg2 ( away :op1 ( block :mod industry :location ( and :op1 sea_name_1 :op2 downtown ) ) )
offer-01 :arg0 it :arg1 ( perspective :mod unique )
sad-02 :arg1 place :degree very :condition ( leave-11 :arg0 ( person :arg0-of play-01 ) :arg1 ( injure-01 :mod type :mod this ) )
possible-01 :arg1 ( lead-03 :arg0 ( spritzer :quant few ) :arg2 ( poisoning :arg1 alcohol ) :time already ) :mod especially
possible-01 :arg1 ( cause-01 :arg0 ( blog :mod particular ) :arg1 ( splashes :consist-of alcohol :quant few ) )
possible-01 :arg1 ( lead-03 :arg0 ( splashes :quant few :mod just ) :arg2 ( poisoning :arg1 alcohol ) ) :mod particular
multi-sentence :snt1 ( look-01 :mode imperative :arg0 you :arg1 ( club :mod ( small :degree more ) ) ) :snt2 ( show-01 :arg0 stage :arg1 ( spectacle :arg1 ( and :op1 ( bands :mod bands ) :op2 ( stage :name ( name :op1 fluorine ) :mod large ) ) ) )
show-01 :arg0 stage :arg1 ( be-located-at-91 :arg1 ( and :op1 ( person :arg0-of ( have-org-role-91 :arg2 head-of-state ) ) :op2 ( person_name_0 :arg0-of ( have-org-role-91 :arg2 ( fluorescent :mod large ) ) ) ) :arg2 here :manner colorful ) :time ( since :op1 ( emerge-02 :arg0 ( club :mod ( small :degree more ) ) ) )
possible-01 :arg1 ( think-01 :arg0 person :arg1 ( be-located-at-91 :arg1 it :arg2 there ) )
result-01 :arg2 ( result :arg1 ( hair :part-of hair ) :location location_name_0 :prep-with ( and :op1 ( gusts :quant ( between :op1 num_0 :op2 num_1 ) ) :op2 ( case :arg1-of isolate-01 ) :op3 ( province_name_1 :quant ( some :op1 num_1 ) ) :mod especially ) ) :prep-in result-01
cause-01 :arg0 ( extend-01 :arg1 ( association :mod football :mod german ) :arg2 ( initiative :name ( name :op1 '' ) :mod refugee ) :purpose ( welcome-01 :arg1 ( person :arg1-of welcome-01 ) :arg2 ( temporal-quantity temporal-quantity_num_0 :unit year ) ) ) :arg1 ( extend-01 :arg1 ( association :mod football :mod german ) )
report-01 :arg1 ( lose-02 :arg0 ( person :arg0-of ( have-org-role-91 :arg1 organization_name_0 :arg2 ( executive :mod chief ) ) ) :arg1 eye :prep-in accident )
hold-04 :arg1 ( year :mod this ) :location country_name_0 :time ( year :mod this ) :arg1-of compare-01
appreciate-02 :arg0 ( and :op1 ( thing :arg2-of ( value-01 :arg1 ( system :arg0-of ( assist-01 :arg1 ( person :arg0-of drive-01 ) ) ) ) ) :op2 ( drive-02 :arg1 ( negotiators :location country_name_0 ) :manner ( automate :degree high ) ) ) :arg1 ( authors :poss ( study :location ( around :op1 ( monetary-quantity monetary-quantity_num_1 :unit euro ) ) ) )
estimate-01 :arg0 ( study :arg1-of ( estimate-01 :arg0 study ) ) :arg1 ( rate-entity-91 :arg1 ( around :op1 ( monetary-quantity monetary-quantity_num_0 :unit euro ) ) :arg2 ( around :op1 ( monetary-quantity monetary-quantity_num_1 :unit euro ) ) ) :arg2 ( and :op1 ( field :poss ( person :arg0-of drive-01 :arg0-of drive-01 ) ) :op2 ( person :arg0-of ( drive-01 :arg1 ( function :location country_name_0 ) :manner ( automate :degree high ) ) ) )
possible-01 :arg1 ( hell :domain ( someone :arg0-of ( try-01 :arg1 ( recover-02 :arg0 someone ) ) ) )
bring-01 :arg0 he :arg1 ( idea :topic ( and :op1 ( speak-01 :arg0 ( person :mod other :arg0-of ( speak-01 :time ( time :mod time ) ) ) ) :op2 ( refer-01 :arg0 person :arg1 person_name_0 :arg2 ( discuss-01 :arg0 person :arg1 problem ) ) ) ) :mod also
lead-01 :arg0 ( conflict-01 :arg0 ( union-02 :arg1 trade-01 :arg2 trade-01 ) ) :time ( before :op1 now :duration ( temporal-quantity temporal-quantity_num_0 :unit month ) ) :arg4 ( strike-01 :mod various )
and :op1 ( work-09 :polarity - :arg1 that :time no-longer ) :op2 ( explain-01 :arg0 ( person_name_0 :arg0-of ( have-org-role-91 :arg2 ( director :mod manage-01 ) ) ) :arg1 ( person_name_1 :arg0-of ( have-org-role-91 :arg2 ( director :mod manage-01 ) ) ) )
need-01 :arg0 we :arg1 ( think-01 :arg0 we :arg1 ( reduce-01 :arg1 kill-01 :location ( country :poss they ) ) ) :mod ultimate
pivotal :arg1 immigrate-01 :arg1-of public-02 :time ( before :op1 now :quant ( between :op1 ( temporal-quantity temporal-quantity_num_0 :unit month ) :op2 ( temporal-quantity temporal-quantity_num_1 :unit month ) ) ) :arg1-of public-02 :time ( since :op1 ( call-01 :arg0 person_name_0 :arg1 ( person :arg0-of immigrate-01 :source country_name_1 ) :arg2 ( campaign-01 :arg0 person :arg1 elect-01 ) ) )
person :arg1-of ( broadcast-01 :location ( wednesday :op1 ( value-interval :op1 num_0 :op2 num_1 ) ) )
say-01 :arg0 ( person_name_0 :arg0-of ( have-org-role-91 :arg1 ( person :arg0-of ( have-org-role-91 :arg2 ( minister :mod foreign ) ) ) :arg2 ( minister :mod foreign ) ) ) :arg1 ( plan-01 :arg0 ( country :poss he ) :arg1 ( construct-01 :arg1 ( fence :location ( along :op1 ( border-01 :arg1 country :arg2 country_name_1 ) ) ) ) :mod also :purpose ( stop-01 :arg0 country :arg1 ( influx :arg1 ( person :arg0-of ( use-01 :arg1 country ) ) ) ) :time ( after :op1 ( finish-01 :arg0 country :arg1 ( fence :location ( border-01 :arg2 serbian ) ) ) ) ) :time meanwhile
come-03 :arg1 ( ancestor :location location_name_0 ) :arg2 ( village :arg1-of ( called :arg2 ( person :arg0-of inhabit-01 ) ) )
cause-01 :arg1 ( bounced :arg0 island_name_0 :arg1 ( orbit-01 :location ( around :op1 planet ) ) :degree slight )
next :domain enthusiasm
next :domain enthusiasm
indicate-01 :polarity - :arg1 ( wrong-04 :arg1 anything )
contrast-01 :arg1 ( possible-01 :arg1 ( true :domain that :source ( view-01 :arg0 person_name_0 :arg1-of pure-02 ) ) ) :arg2 ( risk-01 :arg2 ( injure-01 :mod further ) :arg1-of ( cause-01 :arg0 ( try-01 :arg0 ( person :arg0-of play-01 ) :arg1 ( return-01 :arg1 person :time ( middle :op1 season ) ) ) :mod also ) )
contrast-01 :arg1 ( possible-01 :arg1 ( true :domain that :source ( view-01 :arg0 person_name_0 :arg1-of pure-02 ) ) ) :arg2 ( risk-01 :arg2 ( injure-01 :mod further ) :time ( try-01 :arg0 person :arg1 ( return-01 :arg1 person :time ( middle :op1 season ) ) ) )
refuse-01 :arg0 country_name_0 :arg1 ( '' :mod corridor )
create-01 :arg0 person_name_0 :arg1 ( thing :arg1-of ( same-01 :arg2 ( enthusiasm :arg1-of same-01 ) ) ) :mod only :arg1-of ( say-01 :arg0 person_name_1 ) :arg1-of ( say-01 :arg0 ( person :quant num_0 :arg0-of ( say-01 :arg1 ( thing :arg1-of ( same-01 :arg2 ( thing :arg1-of ( same-01 :arg2 ( thing :arg1-of ( same-01 :arg2 ( thing :arg1-of ( same-01 :arg2 ( thing :arg1-of ( same-01 :arg2 person ) ) ) ) ) ) ) ) ) ) ) ) )
be-located-at-91 :arg1 table :arg2 ( off :op1 table )
be-located-at-91 :arg1 table :arg2 ( off :op1 table )
say-01 :arg0 ( and :op1 person_name_0 :op2 person_name_1 ) :arg1 ( recommend-01 :arg1 ( receive-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg1 company :arg2 ceo ) ) :arg1 ( person :arg0-of ( have-org-role-91 :arg1 company :arg2 ceo ) ) :arg2 ( person :arg0-of ( have-org-role-91 :arg1 organization :arg3 ( study-01 :arg0 person ) ) ) :time ( early :degree more ) ) )
contrast-01 :arg1 ( use-01 :arg1 it :arg2 ( white :domain it ) ) :arg2 ( say-01 :arg0 person_name_0 :arg1 ( genuine :domain it ) :time meantime )
and :op1 ( increase-01 :arg1 ( company :prep-with ( company :arg0-of ( balance-01 :arg1 sheet :arg1-of strong-02 ) ) :prep-with ( balance-01 :arg1 sheet :arg1-of weak-02 ) ) :time ( after :op1 ( increase-01 :arg1 ( rate :mod interest :mod each ) ) ) ) :op2 ( exceed-01 :arg0 company :arg1 ( point :quant num_3 :mod ( percentage-entity percentage-entity_num_0 ) ) )
contrast-01
convince-01 :arg1 ( person :arg0-of ( have-org-role-91 :arg1 military_name_0 :arg2 ( minister :mod foreign ) ) ) :arg2 ( oblige-02 :arg1 person :arg2 ( try-01 :arg0 person :arg1 ( find-01 :arg0 person :arg1 ( sense-01 :arg0 person :arg1 ( find-01 :arg0 person :arg1 ( sense-01 :arg0 person :arg1 ( superior :arg0 person ) ) ) ) ) ) ) :degree absolute :arg1-of ( cause-01 :arg0 ( ambiguities :arg0 person :arg1 ( ambiguity :poss person ) :arg2 government-organization_name_2 :quant all ) ) :degree absolute
convince-01 :arg1 ( person :arg0-of ( have-org-role-91 :arg1 military_name_0 :arg2 ambiguity ) ) :arg2 ( obligate-01 :arg1 ( try-01 :polarity - :arg0 person :arg1 ( campaign-01 :arg0 person :arg1 ( withdraw-01 :arg0 person :arg1 ( person :arg0-of ( have-org-role-91 :arg2 ( diplomat :mod foreign ) ) ) ) ) ) ) :arg1-of firm-03 :purpose ( try-01 :arg0 person :arg1 ( everything :arg0 person :arg1 ( sense-01 :arg0 person :arg1 ( find-01 :arg0 person ) ) ) ) :arg1-of firm-03
and :op1 ( lose-02 :arg0 organization_name_0 :arg1 ( share :mod market ) :location ( state :location east ) ) :op2 ( contrast-01 :arg1 ( lose-02 :arg0 organization :arg1 ( share :mod market ) :location ( and :op1 organization_name_1 :op2 person_name_2 :mod main ) ) :arg2 ( find-02 :arg0 ( poll-01 :arg0 person_name_3 :mod recent ) :arg1 ( thread :mod ( thread :degree most ) :domain person ) ) ) :time ( time :arg1-of same-01 )
department :mod car :mod even :condition ( need-01 :arg0 you :arg1 person_name_0 )
and :op1 ( strike-01 :arg0 ( figure :mod sell-01 :mod ( new :degree most ) ) :arg1 ( thing :quant all :arg1-of expect-01 ) ) :op2 ( show-01 :arg0 figure :arg1 ( revenue :arg1-of key-02 :mod ( market :arg1-of key-02 ) :beneficiary organization_name_1 ) :mod also )
force :mod declining :domain he :mod also
cause-01 :arg1 ( say-01 :arg0 they :arg1 ( locked :arg1 he :arg2 cell :time ( until :op1 ( damages :arg1 prisoner ) ) ) )
and :op1 ( obtain-01 :arg0 ( person :quant ( half :ord ( ordinal-entity ordinal-entity_num_0 ) ) ) :arg1 organization_name_0 ) :op2 ( obtain-01 :arg0 person :arg1 ( num_3 :ord ( ordinal-entity ordinal-entity_num_2 ) :ord ( ordinal-entity ordinal-entity_num_2 ) :ord ( ordinal-entity ordinal-entity_num_2 ) :ord ( ordinal-entity ordinal-entity_num_2 ) :ord ( ordinal-entity ordinal-entity_num_2 ) :ord ( ordinal-entity ordinal-entity_num_2 ) :ord ( ordinal-entity ordinal-entity_num_2 ) :ord ( ordinal-entity ordinal-entity_num_2 ) :ord ( ordinal-entity ordinal-entity_num_2 ) ) )
and :op1 ( found-01 :arg0 ( organization_name_0 :arg1-of ( found-01 :arg2 ( name :op1 kissing :op2 -lrb- ) ) ) :arg1 ( person :mod another :arg0-of ( have-org-role-91 :arg2 member ) ) :location ( rank :poss person ) ) :op2 ( add-01 :arg0 person :arg1 ( increase-01 :arg1 ( number :quant-of ( person :arg0-of ( have-org-role-91 :arg2 member ) ) ) :arg4 ( person :quant num_0 :arg0-of play-01 ) ) ) :time ( temporal-quantity temporal-quantity_num_0 :unit month )
say-01 :arg0 person_name_0 :arg1 ( include-91 :arg1 ( man :quant majority :location ( store :poss we ) ) :arg2 it :mod still )
present-01 :arg1 ( model :mod ( concept :mod new ) :quant all ) :arg2 ( and :op1 car :op2 ( car :mod luxury :mod new ) ) :time ( year :mod this ) :mod especially :mod especially
and :op2 ( and :op1 peace :op2 security :mod ( great :degree ( more :mod even ) ) :domain ( maintain-01 :arg1 and ) )
and :op1 ( fall-01 :arg1 ( sell-01 :arg0 organization_name_0 :arg1 ( business :mod food ) :arg2 ( percentage-entity percentage-entity_num_0 ) ) :arg3 ( percentage-entity percentage-entity_num_0 ) :arg4 ( and :op1 ( percentage-entity percentage-entity_num_3 ) :op2 ( percentage-entity percentage-entity_num_2 ) ) ) :op2 ( reduce-01 :arg1 ( share :mod market ) :arg3 ( percentage-entity percentage-entity_num_3 ) :arg4 ( percentage-entity percentage-entity_num_3 ) )
cause-01 :arg0 ( goal :mod double ) :arg1 ( run-02 :arg0 ( person_name_1 :arg0-of ( have-rel-role-91 :arg2 brother ) ) :mod simple )
move-01 :arg1 ( cell :mod ( large :degree more ) ) :arg2 ( cell :mod ( large :degree more ) ) :time ( after :op1 that )
have-concession-91 :arg1 ( fear-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg1 government-organization_name_0 :arg2 official ) :arg0-of cautious-02 ) :arg1 ( fear-01 :arg0 person :arg1 this :manner ( increase-01 :arg0 person :arg1 ( rate :mod interest :topic ( bond :mod federal ) ) ) ) ) :arg2 ( fear-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg1 government-organization_name_0 :arg2 official ) ) :arg1 ( and :op1 ( increase-01 :arg0 person :arg1 ( rate :mod interest ) :manner ( increase-01 :arg0 person :arg1 ( rate :mod interest ) :purpose ( increase-01 :arg1 rate ) ) ) :op2 ( about :op1 ( percentage-entity percentage-entity_num_0 :mod only ) :domain increase-01 ) ) )
strengthen-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg3 judge-01 ) :mod constitution ) :arg1 ( right :poss ( person :arg1-of imprison-01 ) ) :frequency often
person_name_0
see-01 :arg0 this :arg1 ( and :op1 ( person :arg0-of ( have-org-role-91 :arg1 organization_name_0 :arg2 minister ) ) :op2 ( person_name_1 :arg0-of ( have-org-role-91 :arg1 organization :arg2 minister ) ) ) :concession-of ( have-polarity-91 :arg2 - :degree quite )
cause-01 :arg0 amr-unknown :arg1 ( get-03 :arg1 ( woman :quant ( many :degree so ) ) :arg2 ( sight :arg1 ( handbag :arg1-of beautiful-02 :location rapture ) ) ) :arg1-of ( cause-01 :arg0 amr-unknown ) :arg1-of ( cause-01 :arg0 amr-unknown ) :arg1-of ( cause-01 :arg0 amr-unknown )
come-01 :arg1 ( location_name_0 :location country_name_1 ) :arg4 ( temperature-quantity :quant num_0 )
say-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg1 organization_name_0 :arg2 captain ) ) :arg1 ( obligate-01 :arg1 ( person_name_1 :arg0-of ( have-org-role-91 :arg1 organization :arg2 captain ) ) :arg2 ( stand :prep-against organization_name_2 ) :time ( before :op1 ( game :prep-against organization_name_2 ) ) )
say-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg1 organization_name_0 :arg2 captain ) ) :arg1 ( obligate-01 :arg1 ( person :mod country_name_1 ) :arg2 ( stand-01 :arg1 person :arg2 ( against :op1 ( match-03 :arg0 organization_name_2 :arg1 organization_name_2 ) ) ) )
have-03 :arg0 ( person :quant ( multiple :op1 num_0 ) ) :arg1 ( opine-01 :arg0 person :mod positive ) :time now
have-rel-role-91 :arg0 ( person :arg0-of ( lead-02 :arg1 criminal-organization_name_0 :time late ) ) :arg1 person_name_1 :arg2 ( son :mod abtrÃ¼nniger :arg1-of ( enteignet :arg0 family :location ( family :quant num_0 ) ) )
announce-01 :arg1 ( list-01 :arg1 person_name_0 :arg2 ( and :op1 ( thing :arg2-of ( list-01 :arg1 ( and :op1 ( person :arg0-of ( have-org-role-91 :arg2 head-of-state ) ) :op2 ( person :arg0-of ( have-org-role-91 :arg2 ( moguls :mod media ) ) ) :op3 ( person :arg0-of ( invite-01 :arg1 person :arg2 ( visit-01 :arg0 person :arg1 pope :purpose ( discuss-01 :arg0 person :arg1 ( portrayal :poss ( religious-group_name_1 :location west ) ) ) ) ) ) ) ) ) ) ) :time recent
create-01 :arg1 ( thing :arg1-of ( list-01 :arg2 ( and :op1 sector :op2 enterprise ) :arg1-of ( apply-02 :polarity - :arg2 invest-01 ) ) ) :time ( after :op1 ( state-01 :arg1 ( thing :arg1-of state-01 :mod negative ) ) )
or :mode interrogative :op1 ( see-01 :arg0 you :arg1 event ) :op2 ( affect-01 :arg1 you )
say-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg1 street :arg2 ( spokeswoman :mod street ) ) ) :arg1 ( likely-01 :arg1 ( come-01 :arg1 ( text :poss ( office :poss person_name_0 :mod duck ) ) ) )
list-01 :arg1 ( part :part-of business :mod both ) :arg2 ( exchange-01 :arg1 stock )
could :arg0 ( appoint-01 :arg0 ( person_name_0 :arg0-of ( appoint-01 :arg1 country_name_1 :arg2 ( appoint-01 :arg0 person :arg1 person :arg2 consultant ) ) ) ) :arg1 ( coup :mod master )
and :op1 ( leave-13 :arg0 ( news :arg1-of relate-01 :mod this ) :arg1 ( squad :mod test :mod country_name_1 ) ) :op2 ( replace-01 :arg0 person_name_2 :arg1 person )
become-01 :arg1 ( refugee :mod war :quant many :location country_name_0 ) :arg2 ( and :op1 ( bottleneck :arg1-of significant-02 ) :op2 ( point :mod enter-01 ) ) :arg4 organization_name_3 :time ( month :mod recent ) :location world-region_name_2
about :op1 i :domain it :time always
offer-01 :arg0 ( rate-entity-91 :arg1 ( temporal-quantity temporal-quantity_num_0 :unit year ) :arg2 ( temporal-quantity temporal-quantity_num_1 :unit year ) ) :arg1 ( train-01 :arg2 ( cooperate-01 :mod new ) )
offer-01 :arg0 ( and :op1 ( person :arg0-of ( have-rel-role-91 :arg2 mother ) ) :op2 ( person :arg0-of ( have-rel-role-91 :arg2 mother ) ) ) :arg1 ( deposit :consist-of ( monetary-quantity monetary-quantity_num_0 :unit dollar ) ) :purpose ( secure-02 :arg0 and :arg1 ( release-01 :arg1 and ) )
and :op1 ( increase-01 :arg1 ( rate :mod rate ) ) :op2 ( and :op1 ( upset-01 :arg0 ( rise-01 :arg1 ( thing :arg1-of ( flaw-01 :arg1-of ( possible-01 :polarity - ) ) ) ) ) :op2 ( slide :arg1 economy :arg2 recession-02 ) )
say-01 :arg2 person_name_0
possible-01 :polarity - :arg1 ( accept-01 :arg1 ( idea :topic ( possible-01 :polarity - :arg1 ( accept-01 :arg0 country_name_0 :arg1 ( thing :arg2-of ( monitor-01 :arg1 border ) :arg1-of ( intensify-01 :arg0 country_name_1 ) :mod main ) ) ) ) ) :manner absolute
contrast-01 :arg1 ( face-01 :arg0 ( participate-01 :arg1 ( soldier :arg1-of ( fight-01 :arg2 ( fight-01 :location country_name_0 ) :arg1-of direct-02 ) ) :arg1-of direct-02 ) ) :arg2 ( reject-01 :arg1 ( percentage-entity percentage-entity_num_0 ) :arg2 ( percentage-entity percentage-entity_num_0 ) )
contrast-01 :arg2 ( possible-01 :arg1 ( see-01 :arg0 ( person :arg0-of ( participate-01 :arg1 market ) ) :arg1 ( enhance-01 :arg1 ( excitement :mod whole ) :arg1-of ( cause-01 :arg0 ( rise-01 :arg1 ( rate :mod interest ) ) :arg1-of possible-01 ) ) ) ) :time end-01
cause-01 :arg0 ( reduce-01 :arg1 ( reduce-01 :arg1 ( number :mod small ) ) ) :arg1 ( '' :arg1 ( reduce-01 :arg1 ( number :mod small ) ) :arg0-of ( cause-01 :arg1 ( explain-01 :arg0 person_name_0 :arg1 ( thing :arg1-of ( explain-01 :arg0 person ) ) ) ) )
and :op1 ( look-01 :arg0 you :arg1 it ) :op2 ( find-01 :arg0 you :arg1 ( message-01 :arg0 ( person :arg0-of ( have-rel-role-91 :arg1 person :arg2 mother ) ) :time immediate ) )
have-concession-91 :arg1 ( fulfill-01 :arg0 we :arg1 ( responsible-03 :arg0 we :mod nation ) ) :arg2 ( clear-06 :polarity - :arg1 ( thing :arg0-of ( evidence-01 :arg1 ( risk-01 :polarity - :arg2 ( risk-01 :arg2 smoke-02 ) ) :mod only ) ) )
multi-sentence :snt1 ( say-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg1 organization_name_0 :arg2 coach ) ) :arg1 ( person_name_1 :arg0-of ( have-org-role-91 :arg1 ( team :mod storm ) :arg2 coach ) ) :mod hardly :arg1-of ( cause-01 :arg0 ( obtain-01 :arg0 ( crew :poss person ) :arg1 ( win-01 :arg0 ( country :arg0-of ( have-org-role-91 :arg1 ( country :arg0-of ( have-org-role-91 :arg2 queen ) ) :arg2 ( country :arg0-of ( have-org-role-91 :arg2 queen ) ) ) ) :mod final ) ) ) ) :snt2 ( and :op1 ( leagues :mode interrogative ) :op2 ( say-01 :arg1 ( good :degree too ) ) )
contrast-01 :arg1 ( mean-01 :arg1 this :arg2 ( mean-01 :arg1 this :arg2 ( possible-01 :arg1 ( mean-01 :arg1 this :arg2 ( create-01 :arg1 space ) ) ) ) ) :arg2 ( make-02 :arg0 organization_name_0 :arg1 ( and :op1 ( likely-01 :arg1 ( do-02 :arg0 organization :arg1 so :manner ( streamlining :arg0 organization :arg1 thing ) ) :degree less ) :op2 ( easy-05 :arg1 ( do-02 :arg0 organization :arg1 that :condition ( use-01 :arg0 you :arg1 ( tool :arg1-of special-02 :instrument-of ( and :op1 ( reverse-01 :arg1 apps ) :op2 ( reinstall :arg1 process-02 :time ( once :op1 ( complete-01 :arg1 process-02 ) ) ) ) ) ) ) ) ) )
and :op1 ( come-01 :arg1 ( person :arg0-of ( have-rel-role-91 :arg1 he :arg2 grandfather ) ) :arg3 much :location location_name_0 ) :op2 ( person_name_1 :location here :arg0-of campaign-01 )
call-03 :arg0 location_name_0
fachamt :arg1 ( slash :op1 ( project :mod ( construct-01 :arg1 ( soil :location ( district :mod city ) ) ) :quant all ) :op2 ( project :location ( district :mod city ) ) ) :time always
have-part-91 :arg1 store :arg2 ( department :part-of ( department :mod massive :mod freezer ) :location-of ( find-01 :arg0 you :arg1 ( and :op1 ( leave-11 :arg1-of freeze-01 ) :op2 ( melon :mod bitter ) :op3 ( melon :mod bitter ) :op4 ( and :op1 ( person :arg0-of ( have-org-role-91 :arg2 head-of-state ) ) :op2 ( person :arg0-of ( have-org-role-91 :arg2 head-of-state ) ) :op3 ( person :arg0-of ( have-org-role-91 :arg2 head-of-state ) ) :op4 ( person :arg0-of ( have-org-role-91 :arg2 head-of-state ) ) :op5 ( person :arg0-of ( have-org-role-91 :arg2 head-of-state ) ) :op6 ( person :arg0-of ( have-org-role-91 :arg2 head-of-state ) ) :op7 ( person :arg0-of ( have-org-role-91 :arg2 head-of-state ) ) :op7 ( person :arg0-of ( have-org-role-91 :arg2 head-of-state ) ) :op7 ( person :arg0-of ( have-org-role-91 :arg2 head-of-state ) ) ) ) ) )
contrast-01 :arg1 ( raise-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg2 ( president :mod vice ) ) ) :arg1 ( potential :beneficiary ( person :arg0-of ( have-org-role-91 :arg2 ( president :mod ( primary :mod democracy ) ) ) ) ) :arg2 ( person :arg0-of ( have-org-role-91 :arg2 ( president :mod vice ) ) ) :location location_name_0 ) :arg2 ( believe-01 :arg0 person :arg1 ( recommend-01 :arg1 ( do-02 :polarity - :arg0 person :arg1 it ) ) ) :prep-as ( person :arg0-of ( have-org-role-91 :arg2 ( president :mod vice ) ) )
and :op1 ( child :mod refugee :domain ( child :mod refugee ) ) :op2 ( explain-01 :arg0 child :arg1 ( person_name_0 :arg0-of ( have-org-role-91 :arg1 bptk ) ) )
share-01 :arg0 organization_name_0 :arg1 ( thing :arg2-of ( tip-05 :arg1 organization ) ) :arg3 ( percentage-entity percentage-entity_num_0 :mod another )
possible-01 :arg1 ( attract-01 :arg0 ( attract-01 :arg0 ( attract-01 :arg0 person_name_0 :arg1 person ) :arg1 child ) )
night :mod all :time ( night :mod all ) :source ( border-01 :arg1 country_name_0 :arg2 way :direction away )
night :mod ( night :mod ( approximately :op1 ( distance-quantity distance-quantity_num_0 :unit kilometer ) ) ) :source ( border-01 :arg1 country_name_0 :arg2 country_name_1 )
bail-out-02 :arg1 ( rate-entity-91 :arg1 ( monetary-quantity monetary-quantity_num_0 :unit dollar ) :arg2 ( temporal-quantity temporal-quantity_num_1 :unit year ) ) :time ( after :op1 ( charge-05 :arg1 drug :arg2 drug ) )
recommend-01 :arg1 ( close-01 :arg1 ( and :op1 person_name_0 :op2 ( team :consist-of ( person :arg0-of ( have-org-role-91 :arg2 ( hospital :mod vice ) :time former ) ) ) :arg0-of ( have-org-role-91 :arg1 ( hospital :mod ( miner :polarity - ) ) :arg2 hospital :time former ) ) :time ( after :op1 now :quant ( almost :op1 ( temporal-quantity temporal-quantity_num_0 :unit year :mod almost ) ) ) :condition ( lead-03 :arg0 ( and :op1 ( lead-03 :arg0 organization_name_1 :arg2 consents ) :op2 ( lead-02 :arg0 ( person :arg0-of ( have-org-role-91 :arg1 organization :arg3 ( lead-02 :arg0 person ) :time former ) ) ) :arg2 consents ) ) )
contrast-01 :arg1 ( cut-02 :arg0 person_name_0 :arg1 ( thing :quant num_0 :arg1-of ( include-91 :arg2 ( candidate :quant num_0 ) ) ) :arg3 ( candidate :quant num_0 ) ) :arg2 ( lead-01 :arg0 ( strength :poss person_name_1 ) )
contrast-01 :arg1 ( and :op1 ( attack-01 :quant num_0 :mod good ) :op2 ( attack-01 :quant num_1 :mod good ) ) :arg2 ( focus-01 :arg1 ( reality :mod that ) :arg2 ( thing :arg2-of result-01 ) :arg1-of harsh-02 )
claim-01 :arg0 person_name_0 :arg1 ( try-01 :arg0 ( person :arg0-of ( broker-01 :arg1 building_name_0 ) :mod racing ) :arg1 ( and :op1 ( install-01 :arg0 person :arg1 spy-01 :location ( stables :poss person ) ) :op2 ( threaten-01 :arg0 person :arg1 ( quit-01 :arg0 person :arg1 race ) :time immediate ) ) :time ( year :mod last ) )
accident :quant num_0 :mod only :domain this
'' :polarity - :arg0 person_name_0 :arg1 we :degree so :mod actual :mod actual
and :op1 ( beside :arg0 here :arg1 ( information :topic purchase-01 ) :arg1-of direct-02 ) :op2 ( receive-01 :arg0 here :arg1 information :arg2 ( or :op1 ( insure-02 :arg1 ( care :mod care ) ) :op2 ( achieve-01 :arg1 ( and :op1 ( insure-02 :mod care ) :op2 ( thing :arg1-of ( achieve-01 :arg0 and ) ) ) ) ) ) :location here :arg1-of direct-02
say-01 :arg0 ( person_name_0 :arg0-of ( have-org-role-91 :arg1 ( city-district_name_1 :arg1-of ( near-02 :arg2 location_name_1 ) ) :arg2 entertainment ) ) :arg1 ( have-03 :arg0 person :arg1 ( and :op1 lamb :op2 ( night :mod prentiss ) ) :time ( end-01 :arg1 night ) :time ( end-01 :arg1 night :time ( date-entity month_date-entity_0 day_date-entity_0 ) :time ( after :op1 ( finish-07 :arg0 lamb :arg1 ( and :op1 ( career :poss person ) :op2 ( play-01 :arg0 person ) ) :location ( in-front-of :op1 ( audience :mod sparse ) ) ) ) ) )
multi-sentence :snt1 ( cause-01 :arg0 amr-unknown ) :snt2 ( want-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg3 judge-01 ) ) :arg1 ( know-01 :arg0 person ) )
say-01 :arg0 person_name_0 :arg1 ( glad-02 :arg0 ( beat-03 :arg0 someone :arg1 i ) :arg1 i :condition ( obligate-01 :arg1 i :arg2 ( beat-03 :arg0 someone :arg1 i ) ) )
have-part-91 :arg1 country_name_0 :arg2 ( country :arg0-of ( represent-01 :arg1 country :arg2 country :manner consistent :time ( since :op1 ( testimonial :arg1 ( standard :mod ( control-01 :arg1 border ) ) ) ) ) )
want-01 :arg0 no-one :arg1 ( express-01 :arg0 no-one )
want-01 :arg0 no-one :arg1 ( comment-01 :arg0 no-one :arg3 ( thing :arg0-of incinerate-01 :mod this ) )
funny :polarity - :domain ( transport-01 :arg1 animal :arg3 city_name_0 ) :mod ( and :polarity - )
say-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg1 ( and :op1 city_name_0 :op2 ( person_name_1 :arg0-of ( have-org-role-91 :arg2 '' ) ) ) ) ) :arg1 ( obligate-01 :arg2 ( place-01 :arg1 it :time ( day :arg1-of come-01 ) ) )
and :op1 ( found-01 :arg0 it :arg1 ( and :op1 ( produce-01 :arg0 ( and :op1 ( person :arg0-of ( have-org-role-91 :arg1 organization_name_0 ) ) :op2 ( person_name_2 :arg0-of ( have-org-role-91 :arg1 organization :arg3 ( lead-02 :arg0 person ) ) ) :op3 ( person_name_2 :arg0-of ( have-org-role-91 :arg1 organization :arg3 ( lead-02 :arg0 person ) ) ) ) :arg1 company ) :arg1 ( produce-01 :arg0 company :arg1 ( plant :mod electric ) ) ) :op2 ( '' :arg0 and :arg1 ( birthplace :mod location_name_4 ) ) )
say-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg1 ( police :mod federal ) :arg2 spokesman ) ) :arg1 ( person :arg0-of ( have-org-role-91 :arg1 ( police :mod federal ) :arg2 spokesman ) )
have-concession-91 :arg1 ( expand-01 :polarity - :arg1 ( expand-01 :arg1 ( thing :arg1-of hide-01 ) ) )
question-01 :arg1 ( possible-01 :polarity - :arg1 ( reply-01 :arg0 i :arg1 lamb :time no-longer ) )
and :op1 ( state-01 :arg0 ( state :mod other ) :arg1 ( strike-01 :arg0 state :arg1 country_name_0 :mod air ) ) :op2 ( find-01 :arg0 country_name_1 :arg1 ( positive :quant ( percentage-entity percentage-entity_num_0 ) ) )
and :op1 ( lose-02 :arg0 ( person :arg0-of ( control-01 :arg1 ( car :mod sports ) ) ) :arg1 ( car :mod sports ) ) :op2 ( go-02 :arg0 person :arg4 corridor )
deny-01 :arg0 it :arg1 ( portion :ord ( ordinal-entity ordinal-entity_num_0 ) :mod also )
suggest-01 :arg0 person_name_0 :arg1 ( wrong-04 :arg1 ( referee :mod italian ) )
allow-01 :arg0 ( manipulate-01 :mod this ) :arg1 ( compete-02 :arg0 ( and :op1 ( person_name_1 :arg0-of ( have-org-role-91 :arg1 organization :arg2 chairman ) ) :op2 ( person :arg0-of ( have-org-role-91 :arg1 organization :arg2 executive ) ) :op3 ( person :arg0-of ( have-org-role-91 :arg1 organization :arg2 executive ) :arg0-of ( lead-01 :arg1 unit :time ( after :op1 war_name_1 ) ) :arg0-of ( have-org-role-91 :arg1 organization :arg2 executive ) :arg0-of ( have-org-role-91 :arg1 organization :arg2 executive ) :arg0-of ( have-org-role-91 :arg1 organization :arg2 executive ) :arg0-of ( have-org-role-91 :arg1 organization :arg2 executive ) :arg0-of ( have-org-role-91 :arg1 organization :arg2 executive ) :arg0-of ( have-org-role-91 :arg1 organization :arg2 executive ) ) ) )
bring-01 :arg0 ( person :arg0-of drive-01 ) :arg1 ( person :arg1-of injure-01 ) :arg2 hospital :manner serious
cost-01 :arg1 ( monetary-quantity monetary-quantity_num_0 :unit euro ) :arg2 ( monetary-quantity monetary-quantity_num_1 :unit euro )
know-01 :polarity - :arg0 you :arg1 ( differ-02 :arg1 ( friendship :poss you ) :arg2 amr-unknown ) :time ever
multi-sentence :snt1 ( think-01 :arg0 i :arg1 ( amaze-01 :arg1 ( think-01 :arg0 i :arg1 it ) ) ) :snt2 ( earn-01 :polarity - :arg0 i :arg1 ( or :op1 ( more-than :op1 ( monetary-quantity monetary-quantity_num_0 :unit dollar ) ) :op2 ( live-01 :arg0 person_name_0 ) ) :time ever ) :snt3 ( money :quant bunch )
possible-01 :arg1 ( see-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg2 ( person :arg1-of expert-01 ) ) ) :arg1 profit-01 :manner ( thing :arg1-of ( flaw-01 :arg1-of ( high-02 :degree more ) ) ) ) :concession ( view-02 :arg0 ( person :arg1-of expert-01 ) :arg1 ( thing :manner-of ( take-01 :arg0 person :arg1 place :arg1-of quick-02 ) ) )
solve-01 :arg1 ( thing :arg2-of solve-01 ) :degree very
solve-01 :arg1 ( house :quant num_0 :mod terraced :mod storey ) :degree very
want-01 :arg0 country_name_0 :arg1 ( let-01 :arg0 country :arg1 ( pass-03 :arg1 refugee ) )
contrary-01 :arg1 he :arg2 ( fear-01 :arg0 he :mod initial ) :arg1-of ( contrary-01 :arg2 ( fear-01 :mod initial ) )
contrast-01 :arg1 ( possible-01 :arg1 ( seem-01 :arg1 ( composed :arg1 ( '' :mod email ) :manner wise :arg1-of ( cause-01 :arg0 ( close-10 :arg1 company_name_0 :arg2 ( folk :mod country_name_1 :mod ( close :degree very ) :mod ( close :degree very ) ) ) ) ) ) ) :arg2 ( possible-01 :arg1 ( composed :arg1 ( '' :mod yuhua ) :manner wise ) )
rudzinska :prep-as ( rudzinska :mod wiktoria )
and :op1 ( grant-01 :arg0 person_name_0 :arg1 ( obligate-01 :arg1 ( crew :poss it ) :arg2 ( fight-01 :arg0 crew :arg1 person_name_2 :manner desperate ) ) :purpose ( see-01 :arg0 person :arg1 ( win-01 :arg0 ( league :ord ( ordinal-entity ordinal-entity_num_0 ) :arg1-of single-02 ) :arg2 person_name_2 ) ) :purpose ( see-01 :arg0 person :arg1 ( win-01 :arg0 ( league :ord ( ordinal-entity ordinal-entity_num_0 ) :arg1-of single-02 ) ) ) :purpose ( see-01 :arg0 person :arg1 ( win-01 :arg0 ( league :ord ( ordinal-entity ordinal-entity_num_0 ) ) :arg2 person ) ) )
have-03 :arg0 country_name_0 :arg1 ( border-01 :arg1 country :arg2 country_name_1 :arg1-of long-03 :location ( relative-position :op1 country :quant ( distance-quantity distance-quantity_num_0 :unit kilometer ) ) ) :time night
have-concession-91 :arg1 ( stress-01 :arg0 he :arg1 ( solve-01 :arg1 it :duration temporary :mod only ) ) :arg2 ( praise-01 :arg0 ( person :mod country_name_0 ) :arg1 ( try-01 :arg0 country_name_1 :arg1 ( deal-01 :arg0 country :arg2 crisis ) ) )
multi-sentence :snt1 ( recommend-01 :arg1 ( touch-01 :polarity - :arg1 i ) ) :snt2 ( contrast-01 :arg1 ( recommend-01 :arg1 ( touch-01 :polarity - :arg1 i ) ) :arg2 ( float-01 :arg1 ( film :mod new :part-of ( person_name_1 :arg0-of ( have-org-role-91 :arg1 '' :arg2 '' ) ) :mod new ) :arg2 ventures :mod still ) )
multi-sentence :snt1 ( want-01 :mode interrogative :arg0 ( person :mod country_name_0 ) :arg1 ( come-01 :arg1 person ) ) :snt2 ( result-01 :mode interrogative :arg2 ( record :mod ( record :mod prognosticated ) ) :time ( year :mod one ) :manner ( fast :degree most :compared-to ( possible-01 :arg1 ( thing :arg2-of result-01 :arg1-of ( possible-01 :polarity - ) ) ) ) )
want-01 :arg0 ( person_name_0 :arg0-of ( have-org-role-91 :arg1 federal :arg2 chancellor ) ) :arg1 ( discuss-01 :arg0 person :arg1 ( situation :mod refugee ) :location country_name_2 ) :time ( date-entity day_date-entity_0 month_date-entity_0 year_date-entity_0 ) :location city_name_1
contrast-01 :arg1 ( afflicted :arg1 ( and :op1 ( die-01 :arg1 topic ) :op2 ( die-01 :arg1 die-01 ) ) :mod still ) :arg2 ( afflicted :arg1 ( experience-01 :arg0 ( person :arg0-of ( have-rel-role-91 :arg1 person_name_0 :arg2 dd2 ) ) ) :concession ( contribute-01 :arg0 ( movement-07 :arg0 hospice :arg1-of straight-04 ) :time ( year :mod last ) :degree much ) )
remain-01 :arg1 ( policeman :name ( name :op1 canning :op2 vale :op3 policeman :op4 policeman :op5 policeman :op6 policeman :op7 policeman :op8 policeman :op8 policeman :op8 policeman :op8 policeman :op9 policeman ) )
have-03 :arg0 person_name_0 :arg1 ( confident-01 :arg1 person :arg2 ( manage-01 :arg1 organization_name_1 ) )
play-02 :arg0 ( variables :quant several ) :arg1 role :mod in-fact
say-01 :arg2 person_name_0
and :op1 ( work-01 :arg0 person_name_0 :location ( bible-project :poss person ) :duration ( about :op1 ( temporal-quantity temporal-quantity_num_0 :unit year ) ) ) :op2 ( work-01 :arg0 person :arg1 ( thing :arg1-of ( choose-01 :arg0 person ) :arg1-of ( choose-01 :arg0 person ) ) :arg3 ( issue-02 :quant many :topic ( book :mod '' :poss ( book :quant all ) ) ) )
say-01 :arg0 ( person :quant multiple :arg1-of ( include-91 :arg2 ( cell :part-of cell :arg1-of separate-02 ) ) ) :arg1 ( thing :arg1-of ( decide-01 :arg3 ( thing :arg1-of ( decide-01 :arg3 num_0 ) ) ) )
contrast-01 :arg1 ( look-02 :arg0 ( majority :arg1-of ( include-91 :arg2 person_name_0 ) ) :arg1 ( honest :degree more :compared-to that ) ) :arg2 ( opine-01 :polarity - :arg0 person :arg1 ( thing :arg1-of ( opine-01 :arg0 person ) ) )
possible-01 :arg1 ( have-03 :arg0 ( and :op1 person_name_0 :op2 person_name_1 :op3 person_name_2 ) :arg1 ( unknowingly :arg0-of ( win-01 :arg1 bachelor ) ) )
say-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg2 general ) ) :arg1 ( expect-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg2 general ) ) :arg1 ( supply-01 :arg0 person :arg1 refugee :arg2 ( person :arg0-of ( have-org-role-91 :arg2 ( doctor :mod medicine ) ) ) :time so-far ) ) :arg1-of general-02
mean-01 :polarity - :arg1 organization_name_0 :arg2 ( continue-01 :arg1 update-01 ) :condition ( low-04 :arg1 charge-01 :degree too ) :arg1-of ( cause-01 :arg0 ( and :op1 ( possible-01 :arg1 ( halfway :arg0 phone :arg1 switch-01 ) ) :op2 ( lead-03 :arg0 phone :arg2 ( break-down-12 :arg1 updates ) ) ) )
and :op2 ( see-01 :arg0 i :arg1 ( die-01 :arg1 he ) )
and :op1 ( play-02 :arg0 ( '' :time ( since :op1 issue-02 ) ) :arg1 ( role :mod central ) :manner certain ) :op2 ( announce-01 :arg0 he )
say-01 :arg0 ( figure :mod ( police :mod federal ) :compared-to ( figure :mod police :mod federal ) ) :arg1 ( significant-02 :arg1 ( refugee :quant ( more :compared-to ( temporal-quantity temporal-quantity_num_0 :unit week ) ) ) :arg1-of ( begin-01 :time ( week :mod ( date-entity year_date-entity_2 ) ) ) :location city_name_0 )
say-01 :arg0 state-01
multi-sentence :snt1 ( obligate-01 :arg1 we :arg2 ( think-01 :arg0 we :time now ) :mod of-course ) :snt2 ( say-01 :arg0 ( person_name_0 :arg0-of ( have-org-role-91 :arg1 ( newspaper :mod '' ) :arg2 director ) ) :arg1 ( look-01 :arg0 person :arg1 ( commit-01 :arg1 person :mod potential ) ) )
and :op1 ( write-01 :arg0 ( person :arg0-of research-01 :mod other :quant ( multiple :op1 num_0 ) ) :location location_name_0 ) :op2 ( ask-01 :arg0 person :arg1 ( allege-01 :mode interrogative :arg1 ( build-01 :arg1 ( or :op1 sand :op2 stone ) ) ) )
and :op1 ( express-01 :arg0 i :arg1 ( condolence :poss i :topic ( letter :beneficiary ( person_name_0 :arg0-of ( have-org-role-91 :arg2 president ) ) ) ) ) :op2 ( tell-01 :arg0 i :arg1 ( way :manner-of ( solve-01 :arg1 ( problem :mod this ) ) ) :arg2 he ) :time ( after :op1 ( date-entity month_date-entity_0 day_date-entity_0 ) )
say-01 :arg0 she :arg1 ( point :arg1-of critical-02 :domain this :poss ( study :mod this ) :arg1-of ( cause-01 :arg0 ( say-01 :arg0 study :arg1 ( increase-01 :polarity - :arg1 ( risk-01 :arg2 ( or :op1 die-01 :op2 ( disease :mod kidney ) ) ) :arg1-of increase-01 ) ) ) )
include-01 :arg1 ( warn-01 :arg0 continent_name_0 :arg2 country_name_1 ) :arg2 ( warn-01 :arg1 ( risk-01 :arg0 ( risk-01 :arg2 health ) :arg2 ( organization_name_1 :arg1-of report-01 ) ) :time already ) :time ( year :mod last )
person_name_0 :quant num_0 :arg1-of ( miss-01 :duration ( several :op1 ( temporal-quantity temporal-quantity_num_0 :unit week ) ) )
and :op1 ( give-01 :arg0 ( comment-01 :arg0 he :medium ( broadcasts :mod ( popular :degree most ) :poss company_name_0 ) ) :arg1 this :arg2 ( back :prep-to ( thing :arg2-of ( head-01 :arg0 ( person_name_1 :arg0-of ( head-01 :arg1 sky :time former ) ) ) ) :arg1 this ) ) :op2 ( suggest-01 :arg0 person :arg1 ( recommend-01 :arg1 ( sell-01 :arg0 company :arg1 ( show-04 :arg1 company :example eastenders ) ) ) )
act-02 :arg0 he :time ( after :op1 ( murder-01 :arg0 person_name_0 ) ) :mod indeed :mod indeed
like-01 :arg0 i :arg1 guy
like-01 :arg0 i :arg1 guy
and :op1 ( sunday :arg1 program ) :op2 ( date-entity season_date-entity_0 ) :op3 ( date-entity season_date-entity_0 )
and :op1 ( possible-01 :arg1 ( see-01 :arg0 person :arg1 ( statistic :poss he ) :arg1-of ( include-91 :arg2 ( and :op1 ( person :quant num_0 :arg1-of ( include-91 :arg2 ( person :quant num_0 ) ) ) :op2 ( person :quant num_1 :arg1-of ( include-91 :arg2 ( person :quant num_1 ) ) ) ) ) ) ) :op2 ( think-01 :arg0 person :arg1 ( punt :domain it ) ) :op3 ( think-01 :arg0 person :arg1 ( punt :arg1 ( and :op1 ( hand :part-of person ) :op2 ( person :arg0-of train-01 ) ) :beneficiary youth ) )
fan :polarity -
instead-of-91 :arg1 ( and :op1 ( have-03 :arg0 ( person :arg0-of ( have-org-role-91 :arg2 chancellor ) ) :arg1 ( attitude :poss ( government-organization :arg0-of ( govern-01 :arg1 country_name_0 ) ) ) :arg1-of high-02 ) :op2 ( push-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg2 chancellor ) ) :arg1 ( attitude :poss ( government-organization :arg0-of ( govern-01 :arg1 organization_name_1 ) ) ) ) :arg1-of public-02 ) :arg2 ( help-01 :arg0 ( and :op1 ( help-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg1 humanity :arg2 chancellor ) ) :arg1 ( construct-01 :arg0 person :arg1 ( thing :arg0-of ( ensure-01 :arg1 humanity ) ) ) ) :op2 ( pushed :arg0 person ) ) )
and :op2 ( agree-01 :arg1 ( buy-01 :arg0 person_name_0 :arg1 house :instrument practice ) :arg1-of general-02 )
level :mod ( level :arg1-of high-02 ) :domain this
say-01 :arg0 ( person_name_0 :arg0-of ( have-org-role-91 :arg1 ( person_name_1 :arg0-of ( have-org-role-91 :arg1 location_name_0 :arg2 director ) ) :arg2 director ) ) :arg1 ( much :degree ( more :degree ( much :degree so ) :compared-to ( clothes :arg1-of ( beautiful-02 :mod just ) ) ) :domain it )
say-01 :arg0 ( person_name_0 :arg0-of ( have-org-role-91 :arg1 ( person_name_1 :arg0-of ( have-org-role-91 :arg1 location_name_0 :arg2 director ) ) :arg2 director ) ) :arg1 ( and :op1 ( more :degree ( much :degree so ) :compared-to ( clothes :arg1-of ( beautiful-02 :mod just ) ) ) :op2 ( person :arg0-of ( have-org-role-91 :arg1 location_name_0 :arg2 director ) ) :domain it )
and :op1 ( up :arg1 we ) :op2 ( float-01 :arg1 we :arg2 ( another :quant num_0 ) )
say-01 :arg1 ( favorite :arg0 ( person :mod continent_name_0 :arg1-of single-02 :mod continent_name_1 ) :arg1 ( person_name_1 :arg0-of ( rival-01 :arg1 continent ) :arg1-of single-02 ) :time ( now :polarity - ) ) :arg2 ''
listen-01 :mode imperative :polite + :arg0 you :arg1 ( series :quant series :arg1-of ( make-18 :arg0 i ) ) :condition ( want-01 :arg0 you :arg1 ( know-01 :arg0 you :arg1 ( more :topic case-03 ) ) )
launch-01 :arg1 ( sell-01 :arg1 location_name_0 ) :location continent_name_1 :location ( spring :quant num_0 )
and :op1 ( be-located-at-91 :arg1 they :arg2 ( above :op1 ( and :op1 ( end-01 :arg1 ( ornate :quant num_0 ) ) :op2 ( courtroom :arg1 ( mural :poss country_name_0 ) ) ) ) )
and :op1 ( looming :arg1 ( person :quant ( between :op1 num_0 :op2 num_1 ) ) :location ( above :op1 ( and :op1 ( end-01 :arg1 ornate ) :op2 ( end-01 :arg1 ( storey :quant num_1 ) ) ) ) ) :op2 ( mural :arg0 country_name_0 )
say-01 :arg0 ( thing :arg1-of ( estimate-01 :arg0 organization_name_0 ) ) :arg1 ( possible-01 :arg1 ( employ-01 :arg1 ( person :arg1-of ( include-91 :arg2 ( person :location country_name_1 ) :arg3 ( percentage-entity percentage-entity_num_0 ) ) ) :time ( run-13 :arg1-of long-03 ) ) )
focus-01 :arg0 ( focus-01 :arg2 ( shop :mod new ) )
list-01 :arg1 ( organization_name_0 :arg1-of ( list-01 :arg2 ( and :op1 office :op2 produce-01 ) ) :quant ( multiple :op1 num_0 ) ) :arg2 ( and :op1 young :op2 ( company :arg1-of innovate-01 ) :op3 ( company :arg1-of innovate-01 :location ( sector :mod technology ) ) ) :arg1-of ( include-91 :arg2 ( and :op1 ( building :quant num_0 :arg1-of ( include-91 :arg2 ( floors :quant num_1 :part-of ( and :op1 office :op2 produce-01 ) ) ) ) :op2 ( building :arg0-of ( produce-01 :arg1 stock ) ) ) )
multi-sentence :snt1 ( list-01 :arg1 ( and :op1 ( building :quant num_0 :arg1-of ( include-91 :arg2 ( floors :quant num_1 :mod ( exchange-01 :arg1 stock ) ) ) ) :op2 ( building :arg0-of ( produce-01 :arg1 ( exchange-01 :arg1 stock ) ) ) ) :arg2 ( and :op1 ( building :quant num_0 :arg1-of ( include-91 :arg2 ( floors :quant num_1 :poss ( exchange-01 :arg1 stock ) ) ) ) :op2 ( building :quant num_1 :arg1-of ( include-91 :arg2 ( building :quant num_1 :mod ( exchange-01 :arg1 stock ) ) ) ) ) ) :snt2 ( rented :arg0 ( organization_name_0 :arg1-of innovate-01 ) :arg1 ( company :arg1-of innovate-01 ) :arg2 ( sector :mod technology ) )
say-01 :arg0 person_name_0 :arg1 ( and :op1 ( come-01 :arg1 ( person :quant ( about :op1 num_0 ) :arg0-of ( have-rel-role-91 :arg2 patient ) ) :arg4 practice ) :op2 ( say-01 :arg0 person_name_1 :arg1 ( practice-01 :arg0 ( person :quant ( about :op1 num_1 ) :arg0-of ( have-rel-role-91 :arg2 patient ) ) :arg1 practice-01 ) ) )
appreciate-02 :arg1 they :degree very
believe-01 :arg0 ( person :arg1-of expert-01 )
have-concession-91 :arg2 ( cause-01 :arg0 ( condition :mod poor :prep-against ( state :poss city_name_0 ) ) )
cause-01 :arg0 ( condition-01 :arg1 ( detain-01 :arg1 country :arg2 country ) ) :arg1 ( sue-02 :arg0 he :mod liability )
and :op1 ( suffer-01 :arg0 victim :arg1 ( fracture :mod ( bone :mod nasal ) ) ) :op2 ( heavily :arg0 victim :arg1 game_name_0 :manner heavy :manner heavy )
possible-01 :arg1 ( clarified :arg1 ( dispute-01 :arg0 ( and :op1 enterprise :op2 ( state :arg0-of ( have-org-role-91 :arg1 organization_name_0 :arg2 member ) ) ) ) :mod also )
contrast-01 :arg1 ( bail-out-02 :arg1 person_name_0 :prep-in ( case :mod this ) ) :arg2 ( keep-04 :arg1 person :arg2 custody :purpose ( case-03 :arg1 ( case :mod outstanding :mod other ) ) )
get-03 :arg1 he :arg2 ( gratification :arg1 he :degree great ) :arg1-of ( cause-01 :arg0 ( change-01 :arg1 ( money :quant amr-unknown ) ) )
multi-sentence :snt1 ( say-01 :mode interrogative :arg0 i :arg1 ( amr-unknown :arg1-of ( desire-01 :arg0 i ) ) ) :snt2 ( contrast-01 :arg1 ( begin-01 :mode interrogative :polarity - :arg0 i ) :arg2 ( feel-01 :mode interrogative :arg0 i :arg1 ( unite-01 :arg1 i :arg2 ( pitch :mod ( good :degree quite ) :arg1-of ( create-01 :location ( inning :ord ( ordinal-entity ordinal-entity_num_0 ) ) ) ) ) ) )
say-01 :arg0 person_name_0 :arg1 ( try-01 :arg0 we :arg1 ( encourage-01 :arg0 we :arg1 ( person :arg0-of study-01 :poss we ) :arg2 ( return-01 :arg1 person ) ) )
have-03 :arg0 person_name_0 :arg1 ( problem :topic ( thing :arg1-of ( include-91 :arg2 ( thing :arg1-of ( say-01 :arg0 i ) :arg1-of ( write-01 :arg0 i ) ) ) :quant some ) )
hospitalized :arg1 then-plaintiff :duration ( temporal-quantity temporal-quantity_num_0 :unit month ) :frequency ( rate-entity-91 :arg3 ( temporal-quantity temporal-quantity_num_3 :unit hour ) :arg4 ( cell :arg1-of resemble-01 ) :location ( cell :part-of location_name_0 ) )
person_name_0 :prep-with ( percentage-entity percentage-entity_num_0 :mod only )
exemplify-01 :purpose ( exemplify-01 :arg0 ( steered :arg0 he :arg1 ( shoot-02 :arg1 location_name_0 :location ( over :op1 ( -rrb- :ord ( ordinal-entity ordinal-entity_num_0 ) ) ) ) ) )
and :op1 ( participate-01 :arg0 ( person :arg0-of ( participate-01 :arg1 market ) ) :arg1 ( temporal-quantity temporal-quantity_num_0 :unit year ) :time ( hike :arg1 ( rate :mod rate ) ) ) :op2 ( meet-03 :arg0 ( person :arg0-of ( have-org-role-91 :arg1 organization_name_1 ) ) :time ( week :mod this ) :arg1-of ( end-01 :location thursday ) )
possible-01 :polarity - :arg1 ( comply-01 :arg0 ( company :arg0-of ( provide-01 :arg1 accommodation ) ) :arg1 ( amount :mod certain :quant-of ( or :op1 rails :op2 ( size :poss skylights ) ) ) ) :time ( time :mod emergency )
tight :arg1 ( situation :location ( market :arg0-of house-01 :mod german ) )
enrich-01 :arg0 album :arg1 ( group :consist-of ( excellent-02 :arg1-of excellent-02 ) ) :prep-without audience
and :op2 ( reason :quant many :arg0-of ( cause-01 :arg1 ( obligate-01 :arg1 he :arg2 ( fight-01 :arg0 he :arg2 ( elect-01 :arg1-of general-02 ) ) ) ) )
and :op1 ( recommend-01 :arg1 ( overtake :arg0 ( person :arg0-of ( have-org-role-91 :arg1 police :arg2 officer ) ) :arg1 ( car :poss person ) :arg2 side ) :time ( drive-01 :arg0 person :arg1 ( highway :quant num_0 :arg1-of ( near-02 :arg2 location_name_0 ) ) :time ( late :degree more ) ) :time ( late :degree more ) ) :op2 ( flee-05 :arg0 person :arg1 ( car :poss person ) :arg2 side ) :op3 ( and :op1 ( run-02 :arg0 person :destination woods ) :op2 ( kill-01 :arg0 person :arg1 person :accompanier shoot-02 ) )
tell-01 :arg0 ( person_name_0 :arg0-of ( have-org-role-91 :arg1 ( organization_name_1 :part-of ( university_name_2 :location country-region_name_2 ) ) :arg3 research-01 ) ) :arg1 ( possible-01 :arg1 ( replace-01 :arg0 procedure :arg1 ( impulses :mod electricity ) :time ( day :mod one ) :location ( brain :part-of people ) :purpose ( treat-01 :arg0 procedure :arg1 ( symptom :mod ( disease :mod parkinson ) ) ) ) :time ( day :mod one ) ) :arg2 guardian
present-01 :arg0 he :arg1 ( and :op1 carrie :op2 carrie :op3 lowell ) :mod main :time ( since :op1 marched )
and :op1 ( present-01 :arg0 he :arg1 ( available-02 :arg2 theatre ) :mod main :time ( since :op1 marched ) :mod main ) :op2 ( lowell :arg0 he )
invites :mode imperative :arg0 you :arg1 you :time now :time ( ride-01 :arg0 you :arg1 ( thing :arg1-of ( dream-01 :arg0 you ) :mod product_name_0 ) )
say-01 :arg0 ( disclosure :mod full ) :arg1 ( ball :polarity - :mod crystal :mod clearest :domain ( person :arg0-of vote-01 :mod political-party_name_0 ) :time past )
more :mod even
and :op1 ( change-01 :arg1 ( stammelf :poss he ) :mod ( only :polarity - ) ) :op2 ( change-01 :arg0 he :arg1 reus-position )
multi-sentence :snt1 ( rise-01 :arg1 ( rate :mod ( interest :mod short ) ) :arg1-of ( cause-01 :arg0 ( rise-01 :arg1 ( rate :mod ( interest :mod short ) ) ) ) ) :snt2 ( and :op1 ( flatter :arg1 ( curve :mod credit ) ) :op2 ( increase-01 :arg1 volatility :arg2 ( thing :arg2-of ( characteristic-02 :arg1 market ) :mod all ) :condition ( tightens :arg0 government-organization_name_0 :arg1 ( strategy :poss government-organization ) ) ) )
show-01 :arg0 ( study :mod new ) :arg1 ( cost-01 :arg1 ( float-01 :arg1 ( area-quantity area-quantity_num_0 :unit ( meter :mod square ) ) :mod particular ) :arg2 most )
multi-sentence :snt2 ( want-01 :arg0 ( government-organization :arg0-of ( govern-01 :arg1 federal ) ) :arg1 ( and :op1 ( review-01 :arg1 ( framework :arg1-of legal-02 ) ) :op2 ( location :location-of ( adapt-01 :arg1 ( thing :arg2-of ( adapt-01 :arg1 ( develop-01 :mod new ) ) ) :arg1-of need-01 ) ) ) ) :snt1 ( saddled :polarity - :arg1 ( person :arg0-of drive-01 ) :arg2 ( risk-01 :arg0 person :arg2 ( liability :mod additional :mod any ) ) )
see-01 :mode imperative :arg0 you :arg1 ( video :name ( name :op1 anti-arms :op2 fairs ) :mod international :mod international )
contrast-01 :arg1 ( fact :domain ( life :mod economy ) ) :arg2 ( increase-01 :arg1 ( rate :mod interest ) :frequency often )
place :location-of person_name_1 :time now :mod near :time ( after :op1 ( reformation :location country ) )
and :op1 ( obligate-01 :arg1 ( person :arg0-of ( have-org-role-91 :arg1 it :arg2 member ) ) :arg2 ( account-01 :arg0 person ) ) :op2 ( important :degree very :domain ( move-02 :arg0 authority ) )
commit-01 :arg0 organization_name_0 :arg1 refugee :arg2 refugee
contrast-01 :arg2 ( and :op1 ( cheap-02 :arg1 he :degree extreme :arg1-of ( cause-01 :arg0 ( circumstance :mod ( provocative :degree extreme ) :prep-with person_name_0 ) ) ) :op2 ( think-01 :arg0 i :arg1 ( deserve-01 :arg0 he :arg1 ( credit :quant much ) ) ) )
include-91 :arg1 ( man :quant ( about :op1 num_0 ) ) :arg2 ( size :poss man )
and :op2 ( offer-01 :arg0 ( office :mod district :mod new ) :arg1 ( and :op1 prevent-01 :op2 health :op3 wellness ) :mod also )
bad-07 :mode interrogative :arg1 industry :degree so
employ-01 :arg0 ( person :arg1-of employ-01 ) :arg1 ( person :quant ( around :op1 num_0 ) ) :time ( end-01 :arg1 ( year :mod finance :quant ( between :op1 num_0 :op2 num_2 ) ) )
report-01 :arg0 ( person :arg1-of expert-01 ) :arg2 location_name_0
cup
say-01 :arg1 num_0 :arg2 ( get-01 :arg0 you :arg1 ( system :arg0-of ( operate-01 :mod new ) :mod new ) ) :time ( release-01 :arg1 organization_name_0 )
say-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg1 ( person_name_0 :arg0-of ( have-org-role-91 :arg2 director ) ) :arg2 ( director :mod vice ) ) ) :arg1 ( person_name_1 :arg0-of ( have-org-role-91 :arg2 ( director :mod vice ) ) ) :arg1-of ( cause-01 :arg0 ( and :op1 ( near-02 :arg1 ( site :arg1-of ( near-02 :arg2 ( near-02 :arg2 ( site :mod new :location city_name_2 ) ) ) ) ) :op2 ( remain-01 :arg1 and :arg3 ( building :mod historic ) ) ) )
contrast-01 :arg1 ( recover-01 :arg1 market :degree somewhat :time ( month :mod this ) ) :arg2 ( be-located-at-91 :arg1 ( percentage-entity percentage-entity_num_0 ) :arg2 ( below :op1 ( peak-01 :arg1-of possible-01 ) ) :time now )
account-01 :arg0 ( and :op1 person_name_0 :op2 person_name_1 ) :arg1 ( support-01 :arg1 ( person :arg0-of ( vote-01 :arg1 criminal-organization_name_2 ) ) :arg1-of ( include-91 :arg2 ( support-01 :arg0 person :arg1 ( person :arg0-of ( vote-01 :arg1 criminal-organization_name_2 ) ) ) :arg1-of ( include-91 :arg2 ( support-01 :arg0 person :arg1 ( person :arg0-of ( vote-01 :arg1 criminal-organization_name_2 ) ) :mod particular ) ) ) ) :time now
show-01 :arg0 ( increase-01 :arg1 wage ) :arg1 ( sign :arg1-of recover-01 )
increase-01 :arg0 wage-01 :arg1 ( sign :arg1-of recover-01 )
increase-01 :arg0 wage-01 :arg1 ( sign :arg1-of recover-01 )
say-01 :arg0 ( person :arg0-of ( support-01 :arg1 person_name_0 ) :quant ( more-than :op1 1/2 ) ) :arg1 ( choose-01 :arg0 person_name_1 :arg1 ( choose-01 :arg0 person :arg1 person_name_2 :ord ( ordinal-entity ordinal-entity_num_0 ) ) )
enter-01 :arg0 ( enter-01 :arg1 ( home :poss ( person :arg0-of study-01 ) ) ) :arg1 ( terrifying :arg1 enter-01 :degree absolute )
differ-02 :arg1 ( study-01 :arg0 organization_name_0 ) :arg2 ( disease :arg1-of ( record-01 :arg0 person_name_1 ) ) :time ( since :op1 ( before :op1 now :quant ( temporal-quantity temporal-quantity_num_0 :unit year ) ) )
and :op1 ( support-01 :arg0 ( and :op1 ( person :arg0-of ( have-org-role-91 :arg2 member ) ) :op2 ( person :arg0-of ( have-org-role-91 :arg2 member ) ) ) :arg1 ( and :op1 ( fund :purpose ( insure-02 :arg1 health ) ) :op2 ( thing :arg1-of donate-01 ) ) :arg3 ( and :op1 ( person :arg0-of ( have-org-role-91 :arg2 member ) ) :op2 ( person :arg0-of ( have-org-role-91 :arg2 member ) ) ) :arg3 ( and :op1 ( person :arg0-of ( have-org-role-91 :arg2 member ) ) :op2 ( person :arg0-of ( have-org-role-91 :arg2 member ) ) ) ) :op2 ( continue-01 :arg0 and :arg1 ( and :op1 educate-01 :op2 ( companions :mod grief ) ) )
multi-sentence :snt1 ( and :op2 ( be-located-at-91 :arg1 ( thing :arg2-of result-01 ) :arg2 ( control-01 :arg1 ( and :op1 ( pressure :mod blood ) :op2 triglycerides :op3 '' :op4 '' :arg1-of ( bad-07 :degree more ) ) ) ) ) :snt2 ( good :degree more :domain ( thing :arg2-of result-01 ) ) :snt3 ( find-01 :arg0 ( person :mod authors ) :arg1 ( person :arg1-of find-01 ) )
assure-01 :arg0 they :arg1 he :arg2 ( possible-01 :arg1 ( reached :arg0 they :arg1 ( refugee :arg1-of come-01 ) :mod still ) )
and :op1 ( person_name_0 :arg0-of ( have-org-role-91 :arg1 organization_name_2 :arg2 organization_name_2 ) ) :op2 ( person :arg0-of ( have-org-role-91 :arg1 organization :arg2 member ) ) :op3 ( person :arg0-of ( have-org-role-91 :arg1 organization :arg3 ( guilty-01 :arg1 person ) ) ) :op4 ( person :arg0-of ( have-rel-role-91 :arg1 person :arg2 child ) ) :op5 ( person :arg0-of ( have-rel-role-91 :arg1 person :arg2 child ) ) :op6 ( person :arg0-of ( have-rel-role-91 :arg1 person :arg2 child ) ) :op6 ( person :arg0-of ( have-rel-role-91 :arg1 person :arg2 child ) ) :op6 ( person :arg0-of ( have-rel-role-91 :arg1 person :arg2 child ) ) :op6 ( person :arg0-of ( have-rel-role-91 :arg1 person :arg2 child ) ) :op6 ( person :arg0-of ( have-rel-role-91 :arg1 person :arg2 child ) ) :op7 ( person :arg0-of ( have-rel-role-91 :arg1 person :arg2 child ) ) :op7 ( person :arg0-of ( have-rel-role-91 :arg1 person :arg2 child ) ) :time ( year :mod this )
say-01 :arg0 ( person :arg0-of ( participate-01 :arg1 meet-03 ) :arg1-of ( include-91 :arg2 ( person :quant num_0 :arg0-of participate-01 ) ) ) :arg1 ( contrast-01 :arg1 ( receive-01 :arg0 person :arg1 fund :arg2 ( person :arg0-of ( manufacture-01 :arg1 ( drug :mod electronic ) ) ) ) :arg2 ( fund-01 :polarity - :arg1 ( thing :arg1-of report-01 ) :time ( after :op1 ( report-01 :arg1 ( recommend-01 :arg1 ( receive-01 :arg0 ( organization_name_0 :consist-of tobacco ) :arg1 report-01 :time ( early :degree more ) ) ) ) ) ) )
injure-01 :arg1 ( person :arg0-of ( drive-01 :mod lorry ) ) :manner serious :time ( evening :mod tuesday ) :manner serious :location organization_name_0
and :op1 ( value-01 :arg1 ( enterprise :arg0-of ( lose-02 :arg1 ( percentage-entity percentage-entity_num_0 :arg3-of ( include-91 :arg2 ( value :mod market :poss enterprise ) ) ) ) ) :arg2 ( thing :arg2-of ( price-01 :arg1 market ) :arg1-of ( fall-01 :arg4 ( thing :arg2-of ( price-01 :arg1 ( material :mod raw ) ) ) ) ) :time ( year :mod this ) ) :op2 ( affect-01 :arg0 enterprise :arg1 ( thing :arg2-of ( price-01 :arg1 ( material :mod raw ) ) ) ) :time ( year :mod this )
contrast-01 :arg1 ( get-01 :arg0 you :arg1 nothing ) :arg2 ( possible-01 :arg1 ( keep-01 :arg0 you :arg1 clothes ) )
obligate-01 :arg2 ( play-01 :arg0 ( districts :mod other ) :arg1 ( part :part-of districts ) :location here )
and :op1 ( spend-02 :arg0 ( person :arg0-of ( have-org-role-91 :arg1 government-organization_name_0 :arg2 governor ) ) :arg1 ( rate-entity-91 :arg1 ( up-to :op1 ( between :op1 ( temporal-quantity temporal-quantity_num_0 :unit day ) :op2 ( temporal-quantity temporal-quantity_num_1 :unit day ) ) ) :arg2 ( temporal-quantity temporal-quantity_num_1 :unit day ) ) :location ( around :op1 ( table :mod this ) ) :time ( week :mod this ) :purpose ( decide-01 :arg0 person :arg1 decide-01 ) ) :op2 ( decide-01 :arg0 person :arg1 decide-01 :purpose ( decide-01 :arg0 person :arg1 ( raise-01 :arg0 person :arg1 ( interest :arg1-of key-02 :quant ( nearly :op1 num_1 ) ) :duration ( ordinal-entity ordinal-entity_num_1 ) ) ) )
and :op1 lightness :op2 sing-01 :prep-with ( word :mod this ) :arg1-of ( identify-01 :arg0 they )
require-01 :arg1 refugee :time ( after :op1 ( stay-01 :arg1 refugee :duration ( temporal-quantity temporal-quantity_num_0 :ord ( ordinal-entity ordinal-entity_num_0 ) :part-of ( stay-01 :arg1 you ) ) ) ) :purpose ( live-01 :arg0 refugee :arg1 ( seeker :mod malicious ) :time ( accommodation :mod initial :mod initial ) )
say-01 :arg0 she :arg1 ( '' :polarity - :domain ( person :arg0-of ( have-org-role-91 :arg1 i :arg2 president ) ) )
and :op1 ( criticize-01 :arg0 city_name_0 :arg1 ( construct-01 :arg1 settlement :arg1-of go-on-15 ) ) :op2 ( blame-01 :arg0 person_name_1 :arg1 person :arg2 ( commit-01 :arg1 person :arg2 ( process-02 :arg1 peace ) ) )
contrast-01 :arg1 ( funny :domain ( prank :mod good ) ) :arg2 ( take-10 :arg0 ( moment :mod only :time ( before :op1 ( become-01 :arg1 he :arg2 boomerang ) ) ) :arg1 ( moment :mod good ) )
and :op1 ( company :mod ( large :degree most :compared-to world ) :arg1-of ( include-91 :arg2 ( company :mod ( tech :arg1-of high-02 ) :mod ( large :degree most :compared-to world ) ) ) ) :op2 ( company :arg1-of ( include-91 :arg2 ( company :mod ( tech :arg1-of high-02 ) :mod ( large :degree most :compared-to world ) ) ) ) :time ( late :degree most ) :arg1-of ( base-02 :arg2 ( believe-01 :arg1 ( perform-02 :arg0 company :arg1 ( good :degree more ) ) ) )
spit :arg1 ( and :op1 meat :op2 potatoes ) :location ( shop :poss he ) :time ( since :op1 then )
tenable :arg1 ( date :mod this ) :arg1-of deem-01 :time ( date :mod this )
ask-01 :arg0 he :arg1 ( and :op1 ( person :arg1-of ( know-01 :polarity - ) :arg0-of ( send-01 :arg1 picture ) ) :op2 ( ask-02 :arg0 he :arg1 ( send-01 :arg0 he :arg1 ( photograph-01 :quant more ) ) :arg2 he ) ) :arg2 he
want-01 :arg0 person_name_0 :arg1 ( set-up-03 :arg0 person :arg1 ( container :location peninsula_name_1 ) :arg2 office )
have-03 :arg0 they :arg1 ( dog :arg0-of ( live-01 :location ( house :mod game_name_0 :arg1-of ( border-01 :arg2 ( bayou :location ( animal :mod gau ) ) ) ) ) )
expect-01 :arg1 ( charge-05 :arg1 he :arg2 ( and :op1 ( escape-01 :arg0 he ) :op2 ( assist-01 :arg0 ( person :arg0-of drive-01 :mod omitted ) ) :op3 ( offence :mod traffic :mod other ) ) )
support-01 :arg0 ( person_name_0 :arg0-of ( have-org-role-91 :arg1 country_name_1 :arg2 ( president :mod ( association :mod tennis ) ) ) ) :arg1 kokkinakis
support-01 :arg0 ( person_name_0 :arg0-of ( have-org-role-91 :arg1 ( association :mod tennis :mod country_name_1 ) :arg2 president ) ) :arg1 kokkinakis
and :op1 ( agree-01 :arg0 scientist :arg2 ( person :arg0-of ( have-org-role-91 :arg2 scientist ) ) ) :op2 ( need-01 :arg0 ( and :op1 ( person :arg0-of ( have-org-role-91 :arg2 scientist ) ) :op2 ( person :arg0-of ( have-org-role-91 :arg1 federal :arg2 ( minister :mod ( construct-01 :arg1 federal ) ) ) ) ) :arg1 ( give-01 :arg0 and :arg1 ( benefit :mod tax-01 :quant more ) :arg2 ( invest-01 :arg2 house-01 ) ) :mod also )
approach-02 :arg0 company_name_0 :arg1 ( and :op1 ( announce-01 :arg1 ( thing :arg1-of donate-01 ) ) :op2 ( call-03 :arg1 ( blog-01 :arg0 he ) ) ) :arg1-of ( personal-02 :arg2 ( thing :arg1-of donate-01 ) )
have-concession-91 :arg2 ( leave-11 :arg0 person_name_0 )
multi-sentence :snt1 ( say-01 :arg0 he :arg1 ( person :arg0-of ( have-rel-role-91 :arg1 person :arg2 daughter ) ) ) :snt2 ( have-rel-role-91 :arg0 person :arg1 person :arg2 ( friend :mod ( good :degree most ) ) )
house-01 :arg1 organization_name_0 :arg2 ( cell :mod small ) :time former :location ( cell :mod small )
issue-02 :polarity - :arg0 this :arg1-of major-02
prepare-02 :arg1 practice :arg2 ( boss :mod new ) :time ( date-entity month_date-entity_0 day_date-entity_0 )
fall-01 :arg1 ( thing :mod final :arg1-of decide-01 ) :time ( late :op1 ( date-entity month_date-entity_0 day_date-entity_0 ) )
affect-01 :arg0 ( lose-02 :arg1 tooth ) :arg1 ( product-of :op1 ( more-than :op1 ( percentage-entity percentage-entity_num_0 ) ) :op2 ( population :arg1-of ( include-91 :arg2 population ) ) ) :arg1-of ( cause-01 :arg0 ( affect-01 :arg0 ( lose-02 :arg1 tooth ) :arg1 ( temporal-quantity temporal-quantity_num_1 :unit year ) ) ) :location country_name_0
cost-01 :arg1 ( house :mod rectory :quant ( area-quantity area-quantity_num_0 :unit euro ) ) :arg2 street :location street
need-01 :arg0 we :arg1 ( dwelling :arg1-of suffice-01 ) :mod also :time ( after :op1 now :duration ( temporal-quantity temporal-quantity_num_0 :unit decade ) )
sell-01 :arg0 company :arg1 ( thing :arg1-of invest-01 :mod new ) :arg2 ( share :quant ( monetary-quantity monetary-quantity_num_0 :unit ( dollar :mod renminbi ) ) :arg0-of ( represent-01 :arg1 ( discount :quant ( percentage-entity percentage-entity_num_1 ) ) :arg2 ( thing :arg2-of ( price-01 :arg1-of close-01 ) ) ) )
and :op1 ( remain-01 :arg1 ( man :mod 40-year-old :source location_name_0 ) :arg3 location_name_0 ) :op2 ( condition :arg1-of stable-03 :domain man )
consider-02 :arg1 ( measure-01 :arg1 ( weight :topic ( size :topic size ) ) :mod certain ) :arg2 ( between :op1 num_0 :op2 num_1 ) :arg1-of normal-02
issue-02 :arg0 ( organisations :arg1 animal :mod various :mod various ) :frequency ( often :degree too ) :location ( attitude :poss ( animal :arg1-of circus ) )
say-01 :arg0 person_name_0 :arg1 ( need-01 :arg0 ( and :op1 business :op2 business ) :arg1 ( think-01 :arg0 and :arg1 economy ) :mod particular )
match-01 :arg0 ( and :op1 ( person :arg0-of ( have-org-role-91 :arg1 country_name_0 :arg2 ( president :mod vice ) ) ) :op2 ( refugee :mod nation :mod nation ) ) :arg1 ( team :quant num_0 :mod nation :mod nation ) :arg2 ( location_name_2 :location peninsula_name_1 )
masterpiece :arg1 ( -lrb- :name ( name :op1 '' :op2 '' :op3 -lrb- :op4 -lrb- :op5 -lrb- :op6 -lrb- :op7 -lrb- ) ) :arg2 ( feel-01 :arg0 you :arg1 ( feel-01 :arg0 you :arg1 ( -rrb- :name ( name :op1 illinoise :op2 '' :op3 '' ) :mod illinoise ) ) )
crucial :domain ( thing :arg1-of decide-01 :arg1-of ( include-91 :arg2 ( thing :mod other ) ) ) :arg1-of ( cause-01 :arg0 ( attract-01 :arg0 ( idea :topic ( person :arg0-of ( produce-01 :arg1 ( home :poss person ) :location home ) ) :mod too ) :arg1 ( sell-01 :arg0 person :mod only ) ) )
and :op1 ( report-01 :arg0 organization_name_0 :time immediate ) :op2 ( participate-01 :arg0 organization :arg1 create-01 ) :time ( seek-01 :arg0 organization :arg1 help-01 )
control-01 :arg0 ( control-01 :arg1 ( station :quant num_0 :poss organization_name_0 ) ) :arg1 ( parade-02 :location parade-02 )
play-02 :arg0 religious-group_name_0 :arg1 ( role :mod ( important :degree more ) :time future ) :arg1-of ( cause-01 :arg0 ( and :op1 ( person :mod religious-group_name_1 :domain ( refugee :quant many ) ) :op2 ( have-part-91 :arg1 religion :arg2 ( identity :poss person ) :mod important ) ) )
picked :arg0 ( person :arg0-of ( have-rel-role-91 :arg1 he :arg2 mother ) ) :arg1 adolescents
and :op1 ( publish-01 :arg0 organization_name_0 :arg1 ( report :mod basic :mod '' ) :time ( month :mod last ) ) :op2 ( describe-01 :arg0 organization :arg1 he :arg2 ( review-01 :arg1 ( thing :arg0-of evidence-01 ) :mod ( comprehensive :degree more ) ) )
say-01 :arg0 ( report :arg1-of ( publish-01 :time ( week :mod this ) ) ) :arg1 ( and :op1 ( lose-02 :arg0 ( person_name_0 :arg0-of ( analyze-01 :arg1 organization_name_1 ) ) :arg1 ( rate-entity-91 :arg1 ( monetary-quantity monetary-quantity_num_0 :unit dollar ) :arg2 ( volume-quantity volume-quantity_num_1 :unit gallon ) ) ) :op2 ( sell-01 :arg0 person :arg1 ( rate-entity-91 :arg1 ( monetary-quantity monetary-quantity_num_1 :unit dollar ) :arg2 ( volume-quantity volume-quantity_num_1 :unit gallon ) ) ) :op3 ( rate-entity-91 :arg1 ( monetary-quantity monetary-quantity_num_1 :unit dollar ) :arg2 ( volume-quantity volume-quantity_num_1 :unit gallon ) ) )
have-purpose-91 :arg2 ( repair-01 :arg0 authority :arg1 ( fence :mod ( fast :degree more ) ) )
have-concession-91 :arg2 ( and :op1 ( have-03 :polarity - :arg0 he :arg1 personality :purpose ( carry-out-03 :arg0 personality :arg1 ( duty :poss personality ) :arg1-of effective-04 ) ) :op2 ( say-01 :arg0 ( person :quant ( nearly :op1 num_1 ) :arg0-of ( have-org-role-91 :arg2 head-of-state ) ) :arg1 ( and :op1 ( fit :polarity - :domain ( temperament :poss person ) :destination government-organization_name_0 ) :op2 ( fit :polarity - :domain ( temperament :poss person ) ) ) ) )
multi-sentence :snt1 ( cause-01 :arg1 ( push-01 :arg0 i :arg1 i :time ( before :op1 ( gardening :arg1 i ) ) ) ) :snt2 ( possible-01 :arg1 ( differ-02 :arg1 i :time now ) )
be-located-at-91 :arg1 ( car :poss he ) :arg2 driveway :mod still
responsible-03 :arg0 ( person_name_0 :arg0-of ( have-org-role-91 :arg2 ( executive :mod chief ) ) ) :arg1 organization_name_2 :time future
present-01 :arg0 ( person :arg0-of research-01 ) :arg1 ( analyze-01 :arg0 person ) :time ( before :op1 ( analyses :arg0 ( person :arg0-of research-01 ) :arg1 ( person :arg0-of research-01 ) ) )
multi-sentence :snt1 ( cause-01 :arg0 ( understand-01 :polarity - :arg1 ( benefit-01 :arg1 ( thing :arg2-of fund-01 ) ) :quant many ) :mod also :arg1-of ( cause-01 :arg0 ( understand-01 :arg1 ( thing :arg2-of fund-01 ) :manner poor ) ) ) :snt2 ( and :op1 ( available-02 :arg1 ( person_name_0 :arg0-of ( head-01 :arg1 ( person :arg0-of ( head-01 :arg1 ( movement :name ( name :op1 old-age ) :mod business ) ) ) ) ) :arg2 ( person :arg0-of ( have-org-role-91 :arg1 person_name_1 :arg3 ( lead-02 :arg0 person ) ) ) :mod also ) :op2 ( available-02 :arg2 ( service :name ( name :op1 civic :op2 amadeus :op3 amadeus ) ) ) :mod also )
send-01 :mode imperative :arg0 we :arg1 ( or :op1 picture :op2 video :op3 message ) :arg2 we
send-01 :mode imperative :arg0 we :arg1 ( or :op1 picture :op2 video :op3 message ) :arg2 we :time ( date-entity day_date-entity_0 month_date-entity_0 year_date-entity_0 )
want-01 :arg0 person_name_0 :arg1 ( purchase-01 :arg0 person :arg1 dog ) :prep-in fact
person_name_0 :location city_name_1 :time current
break-01 :arg1 ( sell-01 :quant ( around :op1 ( percentage-entity percentage-entity_num_0 ) ) ) :time ( year :mod last )
contrast-01 :arg1 ( admit-01 :arg0 he :arg1 ( carry-out-03 :arg0 he :arg1 ( search :arg1 computer ) ) ) :arg2 ( say-01 :arg0 he :arg1 ( cause-01 :arg0 ( want-01 :arg0 he :arg1 ( policeman :domain he ) :purpose ( scare-01 :arg0 he :arg1 paedophile ) ) :arg1 it ) )
multi-sentence :snt1 ( and :op1 ( begin-01 :arg1 ( cooperate-01 :arg2 ( neighbor-01 :arg2 ( person :arg1-of ( neighbor-01 :arg2 person_name_0 ) :mod new ) ) ) :degree total ) :op2 ( intend-01 :arg0 person :arg1 ( cooperate-01 :arg0 person :arg1 ( person :arg1-of ( low-04 :degree more ) :arg1-of ( low-04 :degree more ) ) ) ) ) :snt2 ( matter-01 :arg1 ( runtastic :mod next ) :mod only :time time )
feel-01 :arg0 person_name_0 :arg1 ( old :degree too :prep-for ( person :mod terrible :mod terrible ) )
respond-01 :arg1 ( and :op1 ( cut-02 :arg1 ( job :mod break up ) ) :op2 ( cut-02 :arg1 job :mod massive ) ) :arg2 ( change-01 :arg1 industry )
and :op1 ( pressure-01 :arg0 i :arg1 it ) :op2 ( urge-01 :arg0 i :arg1 she :arg2 ( decide-01 :arg0 she :arg1 ( decide-01 :arg0 she ) ) )
recommend-01 :arg1 ( scheme :mod retire-01 :beneficiary ( person :arg0-of pilot-01 ) :domain talk-01 )
intervals :arg1 ( between :op1 num_0 :op2 num_1 ) :time ( begin-01 :arg1 year )
want-01 :arg0 organization_name_0 :arg1 ( save-02 :arg0 organization :arg1 money :arg2 ( organization :mod ( good :degree more ) ) ) :arg1-of ( cause-01 :arg0 ( want-01 :arg0 organization :arg1 ( save-02 :arg0 organization :arg1 money :arg2 ( organization :mod ( good :degree more ) ) ) ) )
monetary-quantity monetary-quantity_num_0 :unit euro :domain ( save-02 :arg0 organization_name_0 :arg1 ( organization :mod ( good :degree more ) ) :mod alone )
and :op1 ( combined :arg1 ( transact-01 :quant num_0 :mod ( large :degree most :compared-to world ) ) ) :op2 ( bring-01 :arg0 transact-01 :arg1 ( brand :mod together :example ( and :op1 person_name_0 :op2 person_name_1 :op3 organization_name_2 ) ) )
report
open-01 :arg1 ( office :mod new :mod accomodation ) :time recent
be-located-at-91 :arg1 teenager :arg2 ( city_name_0 :location ( around :op1 ( person_name_1 :arg1-of single-02 :location ( behind :op1 ( person_name_2 :location ( behind :op1 ( and :op1 country :op2 country ) ) ) ) ) ) ) :time present
aim-01 :arg1 ( draw-02 :arg0 ( group :arg1-of ( age-01 :arg2 ( temporal-quantity temporal-quantity_num_0 :unit year ) ) ) :arg1 ( group :mod ( age :mod every ) ) :prep-under ( spelling :arg1 ( and :op1 ( dress :arg0-of fascinate-01 ) :op2 ( dress :mod animal ) :op3 ( entertain-01 :mod unique ) ) ) )
see-01 :polarity - :arg0 ( person :arg0-of ( have-org-role-91 :arg2 ( person :arg0-of participate-01 ) ) ) :arg1 ( person :arg0-of participate-01 :arg0-of ( have-org-role-91 :arg2 ( person :arg0-of participate-01 ) ) :arg0-of ( have-org-role-91 :arg2 ( person :arg0-of participate-01 ) ) :arg0-of ( have-org-role-91 :arg2 ( person :arg0-of participate-01 ) ) ) :time ever :mod of-course :mod of-course
elect-01 :li num_0 :arg1 person_name_0 :arg2 ( ahead :op1 person_name_1 )
and :op1 ( possible-01 :arg1 ( help-01 :arg0 football ) ) :op2 ( want-01 :arg0 football :arg1 help-01 )
gathering :arg0 we :location ( in-front-of :op1 ( meet-03 :arg0 organization_name_0 :location peninsula_name_1 ) ) :arg1-of ( say-01 :arg0 person_name_2 )
rise-01 :arg1 ( rate-entity-91 :arg1 ( percentage-entity percentage-entity_num_0 ) :arg2 ( temporal-quantity temporal-quantity_num_1 :unit year ) ) :arg2 ( percentage-entity percentage-entity_num_3 )
want-01 :arg0 he :arg1 ( issue-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg1 organization_name_0 ) ) :arg1 ( person :arg0-of ( represent-01 :arg1 organization ) ) :arg2 ( person :arg0-of ( represent-01 :arg1 industry ) ) :mod also ) :mod also
say-01 :arg0 person_name_0 :arg1 ( monetary-quantity monetary-quantity_num_0 :unit euro :mod potential :domain ( company :mod energy :mod energy ) )
say-01 :arg0 organization_name_0 :arg1 ( possible-01 :arg1 ( and :op1 ( risky :domain ( backdrop :arg1 ( backdrop :mod economy :mod fragile :mod such ) ) ) :op2 ( raise-01 :arg1 ( question-01 :arg1 ( differ-02 :mode interrogative :arg1 it ) ) ) ) )
and :op1 ( possible-01 :arg1 ( and :op1 ( risky :domain ( rate :mod interest :mod ( fragile :mod such ) ) ) :op2 ( raise-01 :arg1 ( question-01 :arg1-of question-01 ) ) ) ) :op2 ( raise-01 :arg0 rate :arg1 question-01 ) :op3 ( say-01 :arg0 organization_name_0 :arg1 ( differ-02 :mode interrogative :arg1 it ) )
and :op1 ( open-01 :polarity - :arg1 ( and :op1 ( building :mod urban ) :op2 ( building :mod other ) :example ( and :op1 hint :op2 ( center :purpose ( design-01 :arg1 refugee ) ) ) ) ) :op2 ( plan-01 :arg0 ( center :part-of refugee ) :arg1 ( accommodation :poss refugee ) )
say-01 :arg1 ( think-01 :polarity - :arg0 i :arg1 ( possible-01 :arg1 it ) ) :arg2 person_name_0
have-03 :arg0 he :arg1 ( mask :mod oxygen ) :location ( room :mod locker )
and :op1 ( make-01 :arg1 ( collection :mod impress-01 ) :location ( city_name_0 :location country_name_1 ) :time previous ) :op2 ( make-01 :arg1 collect-01 :location city_name_2 )
say-01 :arg0 person_name_0 :arg1 ( accuse-01 :arg0 person :arg1 i :arg2 ( create-01 :arg0 person :arg1 ( stand :mod luxury ) :beneficiary person ) )
matter-01 :arg1 ( and :op1 tolerance :op2 ( envision-01 :arg1 ( society :arg1-of open-09 ) ) ) :arg2 it
thing :quant num_0 :domain ( learn-01 :arg0 ( person :quant all :arg0-of ( have-rel-role-91 :arg1 ( person :arg0-of ( have-rel-role-91 :arg1 you :arg2 parent ) ) :arg2 parent ) ) :arg1 ( love-01 :arg0 person :arg1 book ) :condition ( love-01 :arg0 ( person :arg0-of ( have-rel-role-91 :arg1 you :arg2 child ) ) :arg1 book ) ) :time ( before :op1 ( know-01 :arg0 you :arg1 it :mod almost ) )
contrast-01 :arg2 ( show-01 :arg0 ( series :name ( name :op1 nsu-murder ) ) :arg1 ( ignore-01 :arg0 ( and :op1 police :op2 authority ) :arg1 ( motive :mod racist ) ) :manner ( slow :degree very ) )
think-01 :arg0 i :arg1 ( chance-02 :arg0 we :arg1 ( tap :arg0 we :arg1 title ) )
device :mod torture-01 :mod ( law :polarity - ) :prep-on ( doorstep :poss you )
contrast-01 :arg1 ( deliver-01 :polarity - :arg1 ( reason :arg0-of ( cause-01 :arg1 ( deliver-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg1 panel :arg2 member ) ) :arg1 ( person :arg0-of ( have-org-role-91 :arg1 panel :arg2 member ) ) ) ) ) ) :arg2 ( champions :quant several :arg1-of ( include-91 :arg2 ( fund-01 :arg0 industry :arg1 paper :mod also ) ) )
include-91 :arg1 ( and :op1 ( team :mod ( good :degree most ) :location baseball ) :op2 ( team :mod ( league :mod country_name_0 ) ) ) :arg2 ( team :mod ( good :degree most ) :location baseball ) :time ( early :degree more )
contrast-01 :arg2 ( dishes :arg1 ( touch :arg1-of special-02 ) :mod also )
multi-sentence :snt1 ( and :op1 ( be-located-at-91 :arg1 person_name_0 :arg2 country_name_1 :mod just ) :op2 ( emphasized :arg0 person :arg1 ( thing :arg1-of ( do-02 :arg0 person ) :arg1-of single-02 :mod new :poss person ) ) ) :snt2 ( '' :li num_0 :arg1 you )
and :op1 ( miss-01 :arg1 ( unit :mod accommodation :quant ( some :op1 num_0 ) ) :time already ) :op2 ( miss-01 :arg0 ( person_name_0 :arg0-of ( author-01 :arg1 study-01 ) ) :arg1 person ) :time current
and :op1 ( lack-01 :arg0 ( person_name_0 :arg0-of ( author-01 :arg1 study-01 ) ) :arg1 ( unit :mod full ) :time current :location ( around :op1 conurbations ) :time current )
plan-01 :arg1 ( use-01 :arg1 site :arg2 ( and :op1 trade-01 :op2 industry :op3 house-01 ) )
teach-01 :arg0 he :arg1 ( course :quant num_0 :mod online :mod only ) :time ( year :mod this )
record-01 :arg0 ( venues :mod trade-01 :location ( and :op1 city_name_0 :op2 city_name_1 ) ) :arg1 ( profit :arg1-of soft-02 ) :mod also
rise-01 :arg1 sell-01 :arg2 ( percentage-entity percentage-entity_num_0 ) :arg4 ( monetary-quantity monetary-quantity_num_1 :unit dollar )
championships :arg1 ( defender :mod country_name_0 ) :location country_name_1 :mod ( extra :degree extra ) :time ( until :op1 ( date-entity month_date-entity_0 ) )
highlights :domain ( pants-outfit :arg1-of special-02 :prep-with corset ) :time ( before :quant short )
say-01 :arg0 some :arg1 ( go-01 :arg1 hype :arg4 ( far :degree too ) )
and :op1 ( watch-01 :arg0 world :arg1 world ) :op2 ( come-01 :arg1 ( and :op1 ( person :arg0-of ( have-org-role-91 :arg1 organization_name_0 ) ) :op2 ( person :arg0-of ( have-org-role-91 :arg1 organization :arg3 thursday ) ) :op3 ( person :arg0-of ( have-org-role-91 :arg1 organization :arg3 thursday ) ) :op4 ( person :arg0-of ( have-org-role-91 :arg1 organization :arg3 thursday ) ) :op5 ( person :arg0-of ( have-org-role-91 :arg1 organization :arg3 thursday ) ) ) :purpose ( decide-01 :arg0 world :arg1 ( decide-01 :arg0 world :arg1 ( make-05 :arg0 organization :arg1 ( thing :mod important :arg1-of ( decide-01 :arg3 ( ordinal-entity ordinal-entity_num_0 ) :time ( after :op1 now :quant ( nearly :op1 ( temporal-quantity temporal-quantity_num_1 :unit decade ) ) ) ) ) ) ) ) )
multi-sentence :snt1 ( and :op1 ( voice :mod cheerful ) :op2 ( leave-15 :polarity - :arg1 ( person :arg0-of ( will-02 :arg1 ( bring-01 :arg0 ( organization_name_0 :arg0-of ( will-02 :arg1 ( bring-01 :arg0 ( government-organization :arg0-of ( govern-01 :arg1 country_name_1 ) ) :arg1 ( issue-02 :mod this ) :arg2 spotlight ) ) ) ) ) ) ) ) :snt2 ( parody :arg0 ( will-02 :arg0 ( government-organization :arg0-of ( govern-01 :arg1 country ) ) :arg1 ( bring-01 :arg0 government-organization :arg1 ( issue-02 :mod this ) :arg2 spotlight ) ) :arg2 ( sell-01 :arg0 government-organization :arg1 weapon :arg2 ( regime :mod repressive ) :location ( across :op1 ( docklands :location city_name_2 ) ) ) )
incinerate-01 :arg0 ( all :arg1-of ( include-91 :arg2 this ) ) :arg1 ( pocket :poss it ) :manner certain
and :op1 ( contain-01 :arg0 ( reserve :mod federal ) :arg1 ( mandate :mod world-region_name_0 ) :mod still ) :op2 ( and :op1 ( mention-01 :polarity - :arg0 act-02 :arg1 ( stability :mod finance ) ) :op2 ( change-01 :polarity - :arg0 act-02 :arg1 ( stability :mod finance ) :time ( until :op1 change-01 ) ) :op3 ( believe-01 :polarity - :arg0 i :arg1 ( recommend-01 :arg1 ( jump :arg0 they :time ahead ) ) ) )
say-01 :arg0 ( r :mod toys ) :arg1 ( contrast-01 :arg1 ( say-01 :arg0 ( r :mod toys ) :arg1 ( and :op1 ( hire-01 :polarity - :arg1 ( person :arg0-of ( have-org-role-91 :arg2 ( staff :mod christmas-season ) ) ) :time ( year :mod last ) ) :op2 ( say-01 :arg0 ( and :op1 toy :op2 ( product :arg0-of ( have-rel-role-91 :arg1 baby :arg2 child ) ) ) :arg1 ( chance-02 :arg1 ( employ-01 :arg0 ( and :op1 ( person :arg1-of employ-01 ) :op2 ( person :arg0-of work-01 :mod seasonal ) ) :arg1 ( temporal-quantity temporal-quantity_num_0 :unit hour ) :purpose work-01 ) ) ) ) ) :arg2 ( say-01 :arg0 ( r :mod toys ) :arg1 ( hire-01 :polarity - :arg1 ( person :arg0-of ( have-org-role-91 :arg2 ( staff :mod christmas-season ) ) ) :time ( year :mod last ) ) ) )
and :op1 ( certain :polarity - :topic ( impact-01 :arg1 ( economy :poss country_name_0 ) ) :quant lot ) :op2 ( possible-01 :polarity - :arg1 ( data :arg1-of ( rely-01 :arg1-of possible-01 ) :arg0-of ( describe-01 :arg1 ( develop-01 :location country_name_1 ) :arg2 person_name_2 ) :mod almost ) )
and :op1 ( affect-01 :arg0 ( thing :arg2-of ( price-01 :arg1 ( material :mod raw ) ) :arg1-of ( affect-01 :arg0 ( monetary-quantity :arg2-of ( price-01 :arg1 ( material :mod raw ) ) ) ) ) :arg1 ( organization_name_1 :mod giant :arg1-of ( affect-01 :arg0 ( monetary-quantity :arg2-of ( price-01 :arg1 ( material :mod raw ) ) ) ) ) ) :op2 ( collect-01 :arg0 organization :arg1 ( rate-entity-91 :arg1 ( monetary-quantity monetary-quantity_num_0 :unit dollar ) :arg2 ( temporal-quantity temporal-quantity_num_1 :unit year ) ) :arg3 ( sell-01 :arg1 ( plan :mod enormous :poss he ) ) )
and :op1 ( confront-01 :arg0 ( person_name_0 :mod african :mod country_name_2 ) :arg1 ( discuss-01 :arg0 person :arg1 diversity ) ) :op2 ( say-01 :arg0 person :arg1 ( need-01 :polarity - :arg0 person :arg1 ( behind :op1 scenes ) ) )
say-01 :arg1 ( price-01 :arg1 ( area-quantity area-quantity_num_0 :unit ( yuan :mod square ) ) :arg2 ( rate-entity-91 :arg1 ( space :mod live-01 ) :arg2 ( rate-entity-91 :arg1 ( space :quant num_0 ) :arg2 ( temporal-quantity temporal-quantity_num_1 :unit year ) ) :manner ( plot-01 :polarity - ) ) ) :arg2 person_name_0
offer-01 :arg0 we :arg1 ( and :op1 ( examination :arg1-of ( ultrasound :polarity - ) ) :op2 ( time :arg1-of long-03 ) ) :arg0-of ( cause-01 :arg1 ( need-01 :arg0 we :arg1 ( room :quant num_0 :mod more ) ) )
contrast-01 :arg1 ( say-01 :arg1 ( contrast-01 :arg1 ( '' :arg1 ( weekly :mod entertainment ) ) :arg2 ( remake :polarity - ) ) ) :arg2 ( sequel :arg1 sequel :time ( after :op1 ( film :ord ( ordinal-entity ordinal-entity_num_0 ) :prep-with ( nannies :mod magical ) ) ) )
and :op1 ( want-01 :arg0 we :arg1 ( establish-01 :arg0 we :arg1 system ) ) :op2 ( declare-02 :arg0 ( trust-01 :arg1 citizen ) :arg1 ( person_name_1 :arg0-of ( have-org-role-91 :arg1 organization :arg2 ( commissioner :mod competent ) ) ) :time launch-01 )
multi-sentence :snt1 ( hear-01 :arg0 we :arg1 audience ) :snt2 ( cause-01 :arg1 ( possible-01 :arg1 ( let-down-04 :arg0 you :arg1 ( plate :mod '' ) :mod basic ) ) )
say-01 :arg1 ( hope-01 :arg0 we :arg1 ( and :op1 ( focus-01 :arg0 team :arg2 compete-02 :degree full ) :op2 ( be-located-at-91 :polarity - :arg1 team :arg2 ( around :op1 ( controversy :mod kyrgios :mod -lsb- ) ) ) ) ) :arg2 person_name_0 :time first
and :op1 ( possible-01 :arg1 ( cope-01 :arg0 economy :arg1 ( rate :arg1-of ( high-02 :degree more ) ) ) ) :op2 ( need-01 :arg0 economy :arg1 ( and :op1 ( rate :mod ( interest :arg1-of high-02 ) ) :op2 ( thing :arg1-of ( say-01 :arg0 person_name_0 ) ) :arg1-of ( cause-01 :arg0 ( tension :location ( market :mod labour ) ) ) ) ) :op3 ( say-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg1 country_name_1 :arg2 chief ) ) :arg1 ( economists :mod chief :location pantheon ) )
contrast-01 :arg1 ( cause-01 :arg1 ( need-01 :arg0 ( refugee :mod ( only :polarity - ) ) :arg1 wohnhraum :mod also ) ) :arg2 ( need-01 :arg0 ( and :op1 ( person :arg0-of ( have-rel-role-91 :arg2 mother ) :arg1-of single-02 ) :op2 ( person :arg0-of ( have-rel-role-91 :arg2 mother ) :arg1-of single-02 ) :mod also ) :arg1 refugee :mod also )
arrest-01 :arg1 ( person :arg0-of ( cut-01 :arg1 fence ) ) :ord ( ordinal-entity ordinal-entity_num_0 )
contrast-01 :arg2 ( sceptical :arg1 ( car :poss country_name_0 ) :degree ( more :degree much ) :compared-to ( or :op1 country_name_1 :op2 ( person :mod country ) ) )
say-01 :arg0 person_name_0 :arg1 ( do-02 :arg0 person :arg1 ( job :arg1-of reasonable-02 ) :manner ( help-01 :arg0 person :arg1 ( raise-01 :arg0 we :arg1 ( realize-01 :arg0 we :arg1 ( fair :topic ( sell-01 :arg1 ( device :mod torture-01 :mod ( law :polarity - ) ) ) ) ) :arg2 we ) ) )
know-01 :arg0 person_name_0 :arg1 ( person :arg0-of ( have-rel-role-91 :arg1 he :arg2 enemy ) ) :mod all
have-03 :arg0 person_name_0 :arg1 ( lamb :arg1-of ( write-01 :arg0 person :arg1-of ( write-01 :arg0 person :arg1-of ( cause-01 :arg0 ( share-01 :arg0 person :arg1 ( life :mod academia :poss person ) :arg2 person ) ) ) ) ) :medium ( book :arg1-of ( write-01 :arg0 he ) )
and :op1 ( be-located-at-91 :arg1 ( and :op1 they :op2 ( person :arg0-of ( have-rel-role-91 :arg1 they :arg2 friend ) ) ) :arg2 ( school :arg1-of high-02 ) ) :op2 ( chap :arg1 ( person :arg0-of ( try-01 :arg1 ( teach-01 :arg0 person :arg1 ( play-01 :arg0 person :mod career ) :arg2 person ) ) :mod ( old :degree more ) ) )
and :op1 ( receipts receipt :arg0 they :arg1 ( person :arg0-of ( have-org-role-91 :arg1 ( police :mod federal ) :arg2 officer ) ) ) :op2 ( pass-07 :arg1 they :arg2 ( process-02 :arg1 register-02 ) )
say-01 :arg0 ( person :arg0-of investigate-01 ) :arg1 ( total-01 :arg1 ( more-than :op1 ( monetary-quantity monetary-quantity_num_0 :unit dollar ) :arg2-of total-01 ) :arg2 ( way :mod this ) ) :manner ( way :mod this )
published :arg0 we :arg1 ( name :poss you ) :arg1-of ( cause-01 :arg0 ( ask-02 :arg0 you :arg1 ( do-02 :polarity - :arg0 we :arg1 so ) :arg2 we ) )
contrast-01 :arg1 ( ultrasound :polarity - :arg1 ( worm :mod thread ) :mod usual ) :arg2 ( note-01 :arg0 person_name_0 :arg1 ( when :arg0 ( liquid :prep-with ( bubbles :mod air :mod microscopic ) ) :arg1 they ) )
cause-01 :arg0 ( experience-01 :arg0 ( light :poss organization_name_0 ) :arg1 ( and :op1 ( stress-01 :arg0 person_name_1 :arg1 ( need-01 :arg0 person :arg1 ( perspective :mod alternative ) ) ) :op2 ( elect-01 :arg1 person :arg2 ( protagonists :arg1-of black-04 :location ( script :poss project ) ) ) ) ) :time ( experience-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg1 organization :arg3 light ) ) :arg1 ( need-01 :arg0 person :arg1 ( perspective :mod alternative ) ) )
cause-01 :arg0 ( eats :arg0 i :arg1 fruit ) :arg1 ( support-01 :arg0 i :arg1 ( and :op1 ( thing :arg1-of envision-01 ) :op2 ( system :name ( name :op1 immune ) ) :op3 ( process-01 :arg1 metabolic ) ) :location body )
have-03 :arg0 ( guy :mod one :location ( home :poss i ) ) :arg1 ( idea :topic ( door :mod unlock ) )
suffer-01 :arg0 ( person_name_0 :mod country_name_1 :mod country :mod country ) :arg1 ( injure-01 :arg1 ( leg :part-of person ) :mod serious )
designate-01 :arg0 person_name_0 :arg1 ( support-01 :arg0 person :arg1 refugee ) :arg2 ( effort :mod ( joint :mod great ) :arg1-of ( mean-01 :arg2 ( effort :mod ( joint :mod great ) ) ) )
close-01 :arg1 ( market :mod stock :mod german ) :time ( after :op1 ( and :op1 ( rudderless :arg1 market :degree large ) :op2 ( trade-01 :arg0 market :arg2 profit-01 :mod of-course ) ) )
fall-01 :arg1 share :arg2 ( about :op1 ( percentage-entity percentage-entity_num_0 ) ) :time ( before :op1 ( open-01 :arg1 ( trade-01 :arg1 trade-01 ) ) )
lie-08 :arg0 he :arg1 ( be-located-at-91 :arg1 he :arg2 ( location :arg2-of criminal-03 ) ) :prep-in ( case :arg2-of criminal-03 )
look-01 :mode imperative :arg0 you :arg1 ( dignity :mod human :poss ( man :arg1-of injure-01 ) )
and :op1 ( manage-02 :arg0 he :arg1 ( away :quant num_0 :arg1-of straight-04 ) ) :op2 ( look-01 :polarity - :arg0 he :direction back )
say-01 :arg0 police :arg1 ( phoned :arg0 lamb :arg1 ( person :arg0-of ( have-rel-role-91 :arg1 lamb :arg2 relative ) ) :time ( time :mod certain ) :purpose ( say-01 :arg0 police :arg1 ( go-02 :polarity - :arg0 person :arg4 jail ) ) )
fashionable :arg1 ( step :ord ( ordinal-entity ordinal-entity_num_0 ) :part-of door )
multi-sentence :snt1 ( like-02 :mode interrogative :arg0 person_name_0 :arg1 ( let-01 :arg0 person :arg1 ( affect-01 :arg0 it :arg1 ( person :arg0-of view-01 ) ) ) ) :snt2 ( fall-01 :mode interrogative :arg1 ( picture :arg1-of ( mean-01 :arg2 ( and :op1 ( leave-11 :arg0 picture ) :op2 ( feel-01 :arg0 picture ) ) ) ) ) :snt3 ( look-02 :arg0 picture :arg1 ( opposite :arg1 picture ) )
possible-01 :arg1 ( provide-01 :arg0 individual :arg1 ( accommodation :mod uncomplicated ) ) :medium platform
see-01 :arg0 you :arg1 ( cause-01 :arg0 amr-unknown :arg1 ( discuss-01 :polarity - :arg1 ( program :mod this ) :frequency often :arg1-of ( cause-01 :arg0 ( and :op1 original :op2 ( striking :polarity - :mod particular ) ) ) ) )
fill-01 :arg1 ( improve-01 :arg1 ( market :mod labor ) ) :arg2 ( year :mod this ) :concession ( utilize-01 :arg1 ( create-01 :arg1 ( create-01 :arg1 ( market :mod labor ) ) ) )
occupy-01 :arg0 organization_name_0 :arg1 ( team :consist-of woman :arg2-of ( include-01 :arg1 ( and :op1 ( manage-01 :arg1 team ) :op2 ( manage-01 :arg1 team ) ) ) :mod exact ) :mod almost :domain organization :mod almost
show-01 :arg0 ( poll-01 :arg0 organization_name_0 :time ( recent :degree most ) ) :arg1 person_name_2 :arg2 person_name_2 :time ( before :op1 person_name_3 )
point-out-02 :arg0 ( person :arg0-of ( have-org-role-91 :arg2 minister ) ) :arg1 ( seals :polarity - :arg0 country_name_0 :arg1 ( border-01 :arg1 country :arg2 refugee ) ) :prep-as ( person :arg0-of ( have-org-role-91 :arg2 minister ) )
cause-01 :arg1 ( warn-01 :arg0 ( government-organization :arg0-of ( govern-01 :arg1 federal ) ) :arg1 ( possible-01 :arg1 ( cause-01 :arg0 ( skulls :arg1 ( system :name ( name :op1 nervous ) ) ) :arg1 ( quantity :mod small ) :time already ) ) )
cause-01 :arg0 ( possible-01 :polarity - :arg1 ( recite-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg2 ( personnel :mod security ) ) ) :arg1 situation ) ) :arg1 ( call-02 :arg0 police :arg1 person )
contrast-01 :arg2 ( want-01 :arg0 he :arg1 ( write-01 :arg0 he :location here ) )
need-01 :polarity - :arg0 you :arg1 ( out :arg0 you :location university :prep-with ( relation-03 :arg0 you :arg2 university ) )
and :op1 ( meadow :domain ( person :arg0-of ( play-01 :mod soccer ) ) :location ( and :op1 country_name_1 :op2 country_name_1 ) ) :op2 ( hope-01 :arg0 person :arg1 ( and :op1 ( goalkeeper :arg1 person ) :op2 ( hope-01 :arg0 person :arg1 ( home :poss person ) ) ) ) :time meanwhile
arrive-01 :arg1 it :arg4 stadium :time ( before :op1 ( arrive-01 :arg1 game ) )
target-01 :arg0 ( person_name_0 :arg1-of target-01 ) :arg1 ( notice-03 :arg1 withdraw-01 )
opportunity :mod ( good :degree most ) :location ( half :ord ( ordinal-entity ordinal-entity_num_0 ) )
possible-01 :arg1 ( decide-01 :arg0 ( person :quant num_0 ) )
and :op1 ( drive-01 :arg0 ( person :arg0-of ( drive-01 :arg1 truck ) :mod old :mod old :arg1-of ( drive-01 :location ( area :mod ( industry :mod industry ) ) ) ) ) :op2 ( notice-01 :arg0 person :arg1 ( stop-01 :arg1 ( drive-01 :arg0 ( person :quant num_0 :arg0-of ( drive-01 :arg1 ( vehicle :location ahead ) ) ) ) :time ( late :degree too ) ) )
add-01 :arg0 ( person :arg0-of ( have-rel-role-91 :arg1 she :arg2 husband ) ) :arg1 ( have-03 :arg0 we :arg1 ( plot-01 :mod 6000-square-foot ) )
contrast-01 :arg1 ( describe-01 :arg0 ( person_name_0 :arg0-of ( have-org-role-91 :arg1 ( economy :poss country_name_1 ) :arg2 ( secretary :mod state ) ) ) :arg1 plan :arg2 ( thing :arg1-of plan-01 ) ) :arg2 ( progress-01 :arg1-of major-02 )
report-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg1 organization_name_0 :arg2 ( correspondent :mod news ) ) ) :arg1 ( use-01 :arg1 ( passenger :mod prison :mod even ) :arg2 race :purpose ( provide-01 :arg0 passenger :arg1 ( fence :location ( between :op1 country_name_2 :op2 country_name_3 ) ) ) )
multi-sentence :snt1 ( prohibit-01 :polarity - :arg0 ( or :op1 ( person :arg0-of ( have-org-role-91 :arg2 ( governor :mod vice ) ) ) :op2 ( person :arg0-of ( have-org-role-91 :arg2 indulgent ) ) ) :arg1 ( study-01 :arg0 ( person_name_1 :arg0-of ( have-org-role-91 :arg1 organization_name_2 :arg2 ( senator :mod interior ) ) ) :mod only ) ) :snt2 ( contrast-01 :arg1 ( have-03 :arg0 ( person :arg0-of ( have-org-role-91 :arg2 ( senator :mod interior ) ) ) :arg1 ( stand-11 :arg0 person ) :time so-far ) :arg2 ( abandon-01 :arg0 person :arg1 ( stand-11 :arg0 person ) :time now ) )
say-01 :arg0 ( information :arg1-of ( write-01 :arg0 ( and :op1 ( person :arg0-of ( have-org-role-91 :arg1 ( ministry :mod federal :part-of organization_name_0 ) :arg2 emissions ) ) :op2 ( person_name_1 :arg0-of ( have-org-role-91 :arg1 organization :arg3 information ) ) :op3 ( person :arg0-of ( have-org-role-91 :arg1 organization :arg3 information ) ) :op4 ( person :arg0-of ( have-org-role-91 :arg1 organization :arg3 information ) ) :op5 ( person :arg0-of ( have-org-role-91 :arg1 organization :arg3 information ) ) ) :arg0-of ( have-org-role-91 :arg1 organization :arg3 write-01 ) ) ) :arg1 ( amount :quant ( more-than :op1 num_0 ) :arg1-of ( amount-01 :arg2 ( temporal-quantity temporal-quantity_num_0 :unit year ) ) :location country_name_2 )
and :op1 ( shop :mod ( person :arg0-of specialize-01 :arg1-of private-03 ) ) :op2 ( trade-01 :mod wholesale :mod also )
multi-sentence :snt1 ( explain-01 :arg0 organization_name_0 :arg1 ( homepage :poss organization :topic ( value :mod maximum :arg1-of valid-02 ) ) ) :snt2 ( expect-01 :polarity - :arg1 ( thing :arg1-of expect-01 ) )
reduce-01 :arg0 organization_name_0 :arg1 job :arg3 ( up-to :op1 num_0 )
cut-02 :arg0 organization_name_0 :arg1 ( job :quant num_0 :mod further )
contrast-01 :arg2 ( shoot-02 :arg1 person_name_0 :arg2 ( percentage-entity percentage-entity_num_0 ) :time ( period :mod same ) )
contrast-01 :arg1 ( refugee :mod ( only :polarity - ) ) :arg2 ( or :op1 ( person :arg0-of ( have-rel-role-91 :arg2 mother ) :arg1-of single-02 ) :op2 ( person :arg0-of ( have-rel-role-91 :arg2 mother ) :arg1-of low-04 ) :mod also )
infer-01 :arg1 ( act-02 :arg0 public :mod this )
complete-01 :arg1 ( overhaul :arg1-of major-02 :poss ( line :name ( name :op1 '' :op2 yard :op3 yard ) :mod new :mod '' :location location_name_0 ) ) :manner official
complex :domain ( organization :consist-of ( person :quant num_0 :arg1-of strong-02 ) ) :time so-far
person :quant num_0 :domain ( area :mod ( station :mod gas ) ) :manner likewise
say-01 :arg0 ( thing :arg1-of view-01 ) :arg1 ( safe-01 :arg1 country_name_0 :manner ( safe-01 :arg1 country ) )
multi-sentence :snt1 ( say-01 :arg0 ( person_name_0 :arg0-of ( have-org-role-91 :arg1 channel :arg2 chairman :time former ) :arg0-of ( have-org-role-91 :arg1 channel :arg2 chairman :time former ) :arg0-of ( have-org-role-91 :arg1 channel :arg2 chairman :time former ) :arg0-of ( have-org-role-91 :arg1 channel :arg2 chairman :time former ) :arg0-of ( have-org-role-91 :arg1 channel :arg2 chairman :time former ) :arg0-of ( have-org-role-91 :arg1 channel :arg2 chairman :time former ) :arg0-of ( have-org-role-91 :arg1 channel :arg2 chairman :time former ) :arg0-of ( have-org-role-91 :arg1 channel :arg2 chairman :time former ) :arg0-of ( have-org-role-91 :arg1 channel :arg2 chairman :time former ) :arg0-of ( have-org-role-91 :arg1 organization :arg2 chairman :time former ) :arg0-of ( have-org-role-91 :arg1 organization :arg2 chairman :time former ) :arg0-of ( have-org-role-91 :arg1 organization :arg2 chairman :time former ) ) ) :snt1 ( say-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg1 channel :arg2 chairman :time former ) :arg0-of ( have-org-role-91 :arg1 channel :arg2 chairman :time former ) ) )
suffice-01 :polarity - :arg0 ( supply-01 :arg1 ( and :op1 ( language :mod general-02 ) :op2 ( language :mod vocational ) ) ) :arg1 ( far :degree so ) :time so-far
possible-01 :arg1 ( topped :arg1 project :mod even ) :time now
have-concession-91 :arg2 ( insist-01 :arg0 ( person_name_0 :arg0-of ( have-org-role-91 :arg2 ( minister :mod prime ) ) ) :arg1 ( and :op1 ( be-located-at-91 :arg1 ( refugee :arg1-of ( arrive-01 :arg3 ( life :mod ( good :degree more ) ) ) :arg0-of ( search-01 :arg1 ( life :mod ( good :degree more ) ) ) ) :arg2 ( refugee :polarity - :arg0-of ( require-01 :arg1 protect-01 ) :arg0-of ( stand-01 :arg1 refugee :arg2 ( state :mod other :arg0-of ( have-org-role-91 :arg1 organization_name_2 :arg2 member ) ) :arg1-of strong-02 :arg1-of strong-02 ) ) ) ) )
say-01
form-01 :arg1 ( gun :mod water ) :location ( behind :op1 ( line :mod police ) )
recommend-01 :arg1 ( expensive :polarity - :domain organization_name_0 :degree ( more :degree much ) :prep-for this ) :purpose ( sell-01 :arg1 ( model :mod volume ) :mod well )
open-up-03 :arg1 ( area :mod other ) :arg2 ( invest-01 :arg1-of private-03 ) :arg1-of ( cause-01 :arg0 ( bid-03 :arg1 ( open-01 :arg1 ( sector :mod state-controlled ) ) ) )
cause-01 :arg0 ( lack-01 :arg0 this :arg1 ( plan :mod construct-01 :mod even ) )
exist-01 :arg1 ( media :mod social ) :time ( ahead :op1 ( comment-01 :arg0 person_name_0 ) ) :time ( after :op1 discuss-01 )
highlight-01 :arg1 ( feature :arg0-of ( look-02 :arg1 ( frighteningly :arg1 human ) ) )
be-located-at-91 :arg1 refugee :arg2 location_name_0
multi-sentence :snt1 ( receive-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg1 organization_name_0 :arg3 ( assist-01 :arg0 person :arg1 ( person_name_1 :arg0-of ( have-org-role-91 :arg1 organization :arg3 ( assist-01 :arg0 person :arg1 organization ) ) ) ) ) ) :arg1 ( person :quant num_0 :arg0-of ( have-org-role-91 :arg1 organization :arg3 ( assist-01 :arg0 person :arg1 organization :mod league ) ) ) ) :snt2 ( hit-01 :arg0 ( hit-01 :arg0 ( and :op1 ( person :arg0-of ( have-org-role-91 :arg1 organization :arg3 ( assist-01 :arg0 person :arg1 organization ) ) ) :op2 ( person :arg0-of ( have-org-role-91 :arg1 organization :arg3 ( assist-01 :arg0 person :arg1 organization :mod league ) ) ) ) ) :arg1 ( think-01 :arg0 person :arg1 ( think-01 :arg0 person :arg1 ( think-01 :arg0 person :arg1 ( think-01 :arg0 person :arg1 ( think-01 :arg0 person :arg1 ( think-01 :arg0 person :arg1 ( think-01 :arg0 person :arg1 ( think-01 :arg0 person :arg1 ( think-01 :arg0 person :arg1 ( think-01 :arg0 person :arg1 ( think-01 :arg0 person :arg1 ( think-01 :arg0 person :arg1 ( think-01 :arg0 person :arg1 ( think-01 :arg0 person :arg1 ( think-01 :arg0 person :arg1 ( think-01 :arg0 person :arg1 ( think-01 :arg0 person :arg1 ( think-01 :arg0 person :arg1 ( think-01 :arg0 person :arg1 ( think-01 :arg0 person :arg1 ( think-01 :arg0 person :arg1 ( think-01 :arg0 person :arg1 ( think-01 :arg0 person :arg1 ( think-01 :arg0 person :arg1 ( think-01 :arg0 person :arg1 ( think-01 :arg0 person :arg1 ( think-01 :arg0 person :arg1 ( think-01 :arg0 person :arg1 ( think-01 :arg0 person :arg1 ( think-01 :arg0 person :arg1 ( think-01 :arg0 person :arg1 ( think-01 :arg0 person :arg1 ( think-01 :arg0 person :arg1 ( think-01 :arg0 person :arg1 ( think-01 :arg0 person :arg1 ( think-01 :arg0 person :arg1 ( think-01 :arg0 person :arg1 ( think-01 :arg0 person :arg1 ( think-01 :arg0 person :arg1 ( think-01 :arg0 person :arg1 ( think-01 :arg0 person :arg1 ( think-01 :arg0 person :arg1 ( think-01 :arg0 person :arg1 ( think-01 :arg0 person :arg1 ( think-01 :arg0 person :arg1 ( think-01 :arg0 person :arg1 ( think-01 :arg0 person :arg1 ( think-01 :arg0 person :arg1 ( think-01 :arg0 person :arg1 ( think-01 :arg0 person :arg1 ( think-01 :arg0 world :arg1 ( think-01 :arg0 world :arg1 ( think-01 :arg0 world :arg1 ( think-01 :arg0 world ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) )
contrast-01
interpreted :arg0 ( texts :arg1-of ( select-01 :arg0 person_name_0 ) ) :arg1 ( texts :mod bible ) :arg2 ( context :time current )
and :op1 ( obligate-01 :arg2 ( agree-01 :arg0 ( person :arg0-of ( represent-01 :arg1 religious-group_name_0 ) ) :arg1 ( contact-01 :arg1-of clear-06 ) ) ) :op2 ( prepare-02 :arg1 person :arg2 ( cooperate-01 :arg0 person :arg1 ( government-organization :arg0-of govern-01 :location ( area :quant many ) ) ) ) :op3 ( give-01 :arg0 person :arg1 ( control-01 :arg1 person :quant some ) :arg2 person )
postpone-01 :arg1 ( process-02 :time current )
say-01 :arg0 ( person :arg0-of analyze-01 ) :arg1 ( thing :arg1-of ( expect-01 :arg0 ( organization_name_0 :quant num_0 ) ) )
have-03 :arg0 you :arg1 ( letter :mod golden )
celebrates :arg0 person_name_0 :arg1 ( and :op1 person_name_1 :op2 person_name_2 ) :time ( after :op1 ( match-03 :arg0 person :arg1 country ) )
and :op1 ( tweeted :arg0 person_name_0 :arg1 photo ) :op2 ( explain-01 :arg0 person :arg1 ( suffer-01 :arg0 person :arg1 injure-01 :time ( throw-01 :arg1 person :arg2 bike ) ) )
say-01 :arg1 ( scary-03 :arg0 it :degree very ) :arg2 ( say-01 :arg0 i :arg1 ( scary-03 :arg0 ( person :arg0-of ( have-rel-role-91 :arg1 person_name_0 :arg2 mother ) ) :arg2 publication_name_1 ) )
and :op1 ( allergic :arg1 ( person :arg0-of teach-01 ) :degree high ) :op2 ( ban-01 :arg0 person :arg1 person :arg2 ( space :poss person ) ) :degree high
and :op1 ( cheap-02 :arg1 product ) :op2 ( sell-01 :arg1 product :arg2 ( quantity :mod large ) )
and :op2 ( redirected :arg1 ( bus :source location_name_0 ) :arg2 ( and :op1 ( direction :poss country_name_1 ) :op2 ( report-01 :arg1 ( and :op1 croatian :op2 ( media :mod serbian ) ) :location ( direction :poss country ) ) ) )
and :op1 ( be-located-at-91 :arg1 ( program :topic support-01 ) :arg2 ( program :name ( name :op1 kfw ) :mod ( bank :mod state ) ) :location city ) :op2 ( good :domain program :time already )
and :op1 ( close-01 :arg0 organization_name_0 :arg1 ( store :quant num_0 ) ) :op2 ( and :op1 ( store :quant num_0 ) :op2 ( store :name ( name :op1 q ) ) ) :time ( time :arg1-of same-01 )
say-01 :arg0 police
mix-01 :arg0 ( person :mod young ) :arg1 alcohol :arg2 ( contain-01 :arg0 alcohol :arg1 ( disinfection :arg1 ( water :mod mouth ) ) ) :arg1-of allege-01 :purpose ( get-01 :arg0 alcohol :arg1 ( hÃ¤rteres :arg1-of drink-01 ) )
over :domain crisis
benefit-01 :arg0 ( dollar :arg1-of rise-01 ) :arg1 ( outside :op1 ( person :arg0-of ( consume-01 :arg1 ( game :mod stock ) :arg1-of pure-02 ) ) ) :mod also
base-02 :arg1 ( trend :mod history ) :arg2 here :arg1-of ( cause-01 :arg0 ( possible-01 :arg1 ( react-01 :arg0 ( sector :mod some :part-of economy ) ) ) )
multi-sentence :snt2 ( write-01 :arg0 ( person :arg0-of research-01 ) ) :snt2 ( write-01 :arg0 ( person :arg0-of research-01 ) )
establish-01 :arg1 ( welfare :arg1-of ( organize-01 :arg0 ( person :mod religious-group_name_0 ) ) :arg0-of ( worry-01 :arg1 newcomers :manner professionally ) ) :mod also
and :op1 ( be-located-at-91 :arg1 ( shop :location ( in-front-of :op1 shop ) :location ( in-front-of :op1 shop ) ) :arg2 ( shop :mod other ) :location ( in-front-of :op1 shop ) :location ( in-front-of :op1 shop ) :location ( in-front-of :op1 shop ) ) :op2 ( include-91 :arg1 ( and :op1 bag :op2 bag :op3 suitcases :op4 shoe :op5 garments ) :arg2 ( monetary-quantity monetary-quantity_num_0 :unit euro ) )
contrast-01 :arg1 ( obligate-01 :arg2 ( agree-01 :arg0 government-organization_name_0 :arg1 ( use-01 :arg0 military :arg1 military :arg1-of ( expect-01 :duration ( week :mod next ) ) ) :mod still ) ) :arg2 ( tell-01 :arg0 ( person :arg0-of report-01 ) :arg1 ( and :op1 ( soldier :arg1-of arm-01 ) :op2 dog ) :arg2 ( and :op1 vehicle :op2 dog ) :time already :arg1-of ( see-01 :duration ( temporal-quantity temporal-quantity_num_0 :unit day ) ) )
contrast-01 :arg1 ( clear-06 :polarity - :arg1 ( go-02 :arg0 lamb :arg4 ( house :mod this ) ) :time immediate ) :arg2 ( say-01 :arg0 person_name_0 :arg1 ( believe-01 :arg0 person :arg1 ( know-02 :arg0 person :arg1 ( person :arg0-of ( live-01 :location there ) ) ) ) )
increase-01 :arg1 ( potential :arg1-of ( call-01 :arg2 ( location_name_0 :time past ) ) :arg2-of ( appeal-01 :arg1 ( location_name_0 :time past ) ) :arg1-of ( call-01 :manner so ) ) :mod after-all
say-01 :arg0 i :arg2 person_name_0
have-condition-91 :arg2 anything
report-01 :arg0 ( image :mod '' ) :time first
contrast-01 :arg2 ( warn-01 :arg0 he :arg1 ( enough :polarity - :domain ( stop-03 :arg1 he :arg2 ( appear-01 :arg1 he ) ) ) )
multi-sentence :snt1 ( game :mod good :domain ( game :mod organization_name_0 ) ) :snt2 ( contrast-01 :arg1 ( see-01 :polarity - :arg0 i :arg1 it :time yet ) :arg2 ( thing :arg2-of result-01 :li num_1 ) )
contrast-01 :arg1 ( work-01 :arg0 he :arg2 ( architect :mod freelance ) ) :arg2 ( work-01 :arg0 he :arg3 ( and :op1 ( person :arg0-of teach-01 ) :op2 ( person :arg0-of write-01 ) :op3 ( person :arg0-of write-01 ) ) :mod also ) :li num_0
put-01 :arg0 nobody :arg1 it :arg2 window :time ( want-01 :arg0 nobody :arg1 ( see-01 :arg0 nobody :time ever ) )
say-01 :arg0 person_name_0 :arg1 ( attend-02 :polarity - :arg0 person :arg1 ( park_name_0 :mod nation ) )
say-01 :arg0 ( person_name_0 :arg0-of ( have-org-role-91 :arg1 organization_name_1 :arg2 ( executive :mod new :mod new ) ) :arg0-of ( have-org-role-91 :arg1 organization_name_1 :arg2 ( executive :mod new ) ) ) :arg1 ( obsolete :domain ( increase-01 :arg1 ( number :quant-of ( craftsmen :mod skilled ) :source world-region_name_2 ) :mod large ) :time now )
propose-01 :arg0 organization_name_0 :arg1 ( reform-01 :arg0 organization :arg1 ( system :name ( name :op1 thestudentroom ) :time current ) :mod ( comprehensive :degree more ) ) :purpose ( defuse-01 :arg0 organization :arg1 ( dispute-01 :arg1-of ( plan-01 :arg1-of ( possible-01 :polarity - ) ) ) )
and :op1 ( grow-01 :arg1 ( group :mod printers ) :location location_name_0 ) :op2 ( dividing :arg1 ( and :op1 computer :op2 ( business :mod printer ) ) :time current :time ( year :mod this ) :arg1-of ( cause-01 :arg0 ( promise-01 :arg1 ( area :mod new :arg0-of promise-01 ) :arg2 ( area :mod new :location-of ( and :op1 ( server :mod computer ) :op2 ( storage :mod data ) ) :beneficiary company :mod as-well ) ) ) )
take-01 :arg1 ( temporal-quantity temporal-quantity_num_0 :unit month )
cause-01 :arg0 ( charge-05 :arg1 ( fish :mod peaceful :example carp ) :arg2 ( low-04 :degree so ) :arg1-of ( cause-01 :arg0 ( and :op1 ( charge-05 :arg1 fish :arg2 ( level :arg1-of plan-01 ) :time already ) :op2 ( charge-05 :arg1 fish :arg2 ( level :arg1-of plan-01 ) :time already ) ) ) )
multi-sentence :snt1 ( contrast-01 :arg1 ( ask-02 :arg0 he :arg1 ( association :mod ( rate-entity-91 :arg1 ( monetary-quantity monetary-quantity_num_0 :unit euro ) :arg2 ( temporal-quantity temporal-quantity_num_1 :unit month ) ) ) ) :arg2 ( high-02 :arg1 ( cost-01 :arg1-of actual-02 ) ) ) :snt2 ( add-01 :arg0 he )
contrast-01 :arg2 ( consistent-01 :arg1 ( person :arg0-of ( support-01 :arg1 person_name_0 ) ) :degree more :compared-to ( candidate :mod other :prep-in elect-01 ) )
thing :arg1-of ( state-01 :arg0 ( thing :arg1-of ( state-01 :arg0 ( thing :arg1-of ( state-01 :arg0 ( thing :arg1-of ( state-01 :arg0 descendant ) ) :frequency sometimes ) ) ) ) ) :mod this
opine-01 :arg0 public :arg1 this :time ( after :op1 ( come-01 :arg1 problem :arg4 light ) :quant short )
do-02 :arg0 person :arg1 ( errands :arg0 person ) :frequency sometimes :manner ( fast :degree more :frequency sometimes )
imported :arg1 ( black-friday-phenomenon :arg1-of ( import-01 :arg2 country_name_0 ) ) :arg2 ( reason :arg0-of ( cause-01 :arg1 ( sell-01 :arg1 ( sell-01 :mod declining ) ) ) )
multi-sentence :snt1 ( possible-01 :arg1 ( compute :arg0 they :arg1 ( bmi :poss you ) :location here ) ) :snt2 ( 1d0zqdv :quant num_0 :mod usa.gov )
and :op1 ( attack-01 :arg0 person_name_0 :arg1 organization_name_1 ) :op2 ( say-01 :arg0 person :arg1 ( and :op1 ( attack-01 :arg0 person :arg1 organization ) :op2 ( say-01 :arg0 person :arg1 ( original :polarity - :domain this :mod original ) ) ) )
find-01 :arg0 dropshipper :arg1 ( thing :arg1-of ( need-01 :arg0 dropshipper ) ) :prep-in ( phase :ord ( ordinal-entity ordinal-entity_num_0 ) :part-of ( boulevards :mod rhine ) )
stand-01 :arg1 ( point :mod this ) :arg2 ( part :part-of agenda :arg1-of public-02 ) :mod original
refuse-01 :arg0 ( person_name_0 :arg0-of ( have-org-role-91 :arg2 metcash ) ) :arg1 ( respond-01 :arg0 person :arg1 ( comment-01 :arg0 person ) :arg1-of public-02 )
have-03 :arg0 ( unit :arg0-of house-01 :mod each ) :arg1 ( and :op1 ( song :quant num_0 ) :op2 ( scrap-01 :arg1 unit ) :op3 ( lounge :arg0 unit ) )
need-01 :arg0 we :arg1 ( support-01 :arg0 we :arg1 celtic :mod really ) :arg1-of ( cause-01 :arg0 ( make-02 :arg0 this :arg1 ( person :arg0-of play-01 ) ) ) :mod really
stuck :arg1 ( thousands :arg1 ( refugee :mod desperate ) ) :time meantime :location ( route :location world-region_name_0 )
and :op1 ( strike :arg0 ( and :op1 ( strike-01 :mod city ) :op2 ( strike-01 :arg2 ( temporal-quantity temporal-quantity_num_0 :unit month ) ) ) :arg1 ( temporal-quantity temporal-quantity_num_1 :unit month ) ) :op2 ( stipulate-01 :arg0 and :arg1 ( debate-01 :arg1 ( thing :manner-of ( possible-01 :arg1 ( safe-01 :arg1 ( person :arg0-of ( have-rel-role-91 :arg2 patient ) ) ) ) ) :mod formal ) )
contrast-01 :arg1 ( clear-06 :polarity - :arg1 ( reach-02 :arg1 ( cat :name ( name :op1 rubber ) :arg1-of ( kill-01 :arg1-of ( possible-01 :polarity - ) ) ) ) :time immediate ) :arg2 ( seem-01 :arg1 ( cause-01 :arg1 ( die-01 :quant ( many :degree so ) ) ) )
amr-unknown :topic ( and :op1 school :op2 nurseries )
beat-03 :arg0 i :arg1 they :arg2 ( away :arg1-of straight-04 )
say-01 :arg0 company :arg1 ( expect-01 :arg0 company :arg1 ( increase-01 :arg1 ( profit-01 :arg0-of operate-01 :arg1-of ( increase-01 :arg2 ( year :mod previous ) ) ) ) :arg1-of ( cause-01 :arg0 ( and :op1 ( cut-02 :arg1 turnover ) :op2 ( rise-01 :arg1 turnover ) ) ) )
contrast-01 )
estimate-01 :arg0 we :arg1 ( contrary-01 :arg1 it :arg2 ( and :op1 ( value :mod ( democracy :mod parliament ) ) :op2 ( principle :mod ( dialogue-01 :arg1-of open-04 ) ) ) )
become-01 :arg1 ( mouth :part-of ( slash :op1 ( mouth :part-of you ) :op2 ( mouth :part-of you ) ) ) :arg2 ( voice :poss you ) :arg3 ( mouth :part-of you )
possible-01 :arg1 ( send-01 :arg0 you :arg1 they :arg2 ( number :mod international ) :time ( date-entity year_date-entity_0 month_date-entity_0 day_date-entity_0 ) ) :location ( outside :op1 ( country_name_0 :mod great ) )
multi-sentence :snt1 ( tell-01 :arg0 ( person_name_0 :arg0-of ( have-org-role-91 :arg2 ( minister :mod prime ) ) ) :arg1 ( cause-01 :arg0 amr-unknown :arg1 ( sit-01 :arg1 ( government-organization :arg0-of ( govern-01 :arg1 country_name_1 ) ) :arg2 ( heritage :mod tax-01 ) ) :arg0-of ( cause-01 :arg1 ( and :op1 ( sit-01 :arg1 ( government-organization :arg0-of ( govern-01 :arg1 country ) ) :arg2 ( heritage :mod tax ) ) :op2 ( hiding :arg0 government-organization :arg1 ( person :mod country :arg0-of ( have-rel-role-91 :arg1 government-organization :arg2 friend ) ) ) ) ) ) ) :snt2 ( and :op1 ( ask-01 :arg0 person :arg1 ( touch-01 :arg0 person :arg1 person ) ) )
multi-sentence :snt1 ( cause-01 :arg0 ( do-02 :arg0 ( person :arg0-of ( have-org-role-91 :arg1 ( speak-01 :arg0 person ) :arg2 ( minister :mod prime ) ) ) :arg1 ( and :op1 ( sit-01 :arg1 ( government-organization :arg0-of ( govern-01 :arg1 country_name_0 ) ) :arg2 ( capital :poss government-organization ) ) :op2 ( hiding :arg0 government-organization :arg1 ( law :arg0-of ( prepare-01 :arg1 ( law :arg1-of ( force-01 :arg2 ( cut-off-04 :arg0 person :arg1 ( money :arg1-of ( force-01 :arg2 ( cut-off-04 :arg1 money :arg2 state ) ) ) ) ) ) ) ) ) :time ( time :arg1-of same-01 ) ) ) ) :snt2 ( ask-01 :arg0 ( person :arg0-of ask-01 ) :arg1 person_name_1 )
produce-01 :arg0 ( one :arg1-of ( include-91 :arg2 ( organization_name_0 :mod collective ) ) ) :arg1 ( advertisement :mod parody )
say-01 :arg0 ( thing :arg1-of state-01 ) :arg1 ( create-01 :arg0 ( and :op1 sector :op2 company ) :arg1 ( list :mod negative :arg2-of ( name-01 :arg1 ( and :op1 sector :op2 company ) :arg1-of ( allow-01 :polarity - ) ) ) )
say-01 :arg0 person_name_0 :arg1 ( come-04 :polarity - :arg1 ( turmoil :time ( late :degree most ) ) :arg2 ( level :poss turmoil ) )
say-01 :arg0 person_name_0 :arg1 ( have-org-role-91 :arg0 she :arg1 resign-01 :arg2 member :time ( year :mod this ) )
say-01 :arg0 person_name_0 :arg1 ( resign-01 :arg0 person :arg1 ( resign-01 :arg0 person ) :time ( year :mod this ) )
appeal-02 :arg0 ( person :mod country_name_0 ) :arg2 ( appeal-01 :arg0 person )
multi-sentence :snt1 ( describe-01 :arg0 ( person :arg0-of ( have-03 :polarity - :arg1 ( person :mod young ) ) ) :arg1 ( person :mod young :arg1-of ( train-01 :arg2 photographer ) ) ) :snt2 ( describe-01 :arg0 ( person :arg0-of have-03 ) :arg1 ( person :mod young ) )
soon :time ( after :op1 elect-01 :duration ( temporal-quantity temporal-quantity_num_0 :unit month ) )
make-01 :arg1 ( rate-entity-91 :arg1 ( more-than :op1 1/2 ) :arg2 ( temporal-quantity temporal-quantity_num_0 :unit year ) ) :arg3 ( temporal-quantity temporal-quantity_num_1 :unit year ) :time ( be-located-at-91 :arg1 ( ministry :topic ( buy-01 :arg1 traffic ) :arg2-of total-01 ) :arg2 ( around :op1 num_0 ) )
annually :quant num_0 :domain ( start-01 :arg0 organization_name_0 :arg1 ( up :arg0 organization :arg1 ( staff :mod entire :arg2-of ( staff-01 :arg1 talk-01 ) ) ) )
entitled :arg0 ( article :arg1-of ( originate-01 :arg2 ( name :op1 dear :op2 dear :op3 dear :op4 dear ) ) )
say-01 :arg1 ( and :op1 ( reduce-01 :polarity - :arg0 ( control-01 :arg1 glycemic :mod ( good :degree more ) :mod this ) :arg1 ( rate-entity-91 :arg1 ( rate :mod mortality ) :arg2 ( temporal-quantity temporal-quantity_num_0 :unit year ) ) ) :op2 ( reduce-01 :polarity - :arg0 '' :arg1 ( rate :mod mortality ) :time ( after :op1 now :quant ( temporal-quantity temporal-quantity_num_1 :unit year ) ) ) ) :arg2 ( say-01 :arg0 ( and :op1 person_name_0 :op2 ( person :arg0-of ( have-org-role-91 :arg2 investigator ) ) :op3 ( person :arg0-of ( have-org-role-91 :arg2 investigator ) ) ) :arg1 ( and :op1 ( reduce-01 :arg0 person :arg1 ( rate :mod mortality ) ) :op2 ( reduce-01 :arg0 person :arg1 ( rate :mod mortality ) ) ) )
find-02 :arg0 ( study :mod swedish ) :arg1 ( have-03 :arg0 ( study :arg1-of ( use-01 :arg2 surgery-01 ) ) :arg1 ( period :quant ( percentage-entity percentage-entity_num_0 ) :arg1-of ( include-91 :arg2 ( period :mod 15-year :mod die-01 ) ) ) :time ( compare-01 :arg1 ( group :arg0-of ( try-01 :arg1 ( medicine :mod ( traditional :degree more ) ) ) ) :arg2 group ) )
find-02 :arg1 ( go-01 :arg1 ( surgery-01 :arg1 ( surgery-01 :arg2 ( go-01 :arg1 surgery-01 ) ) ) :arg2 ( rate-entity-91 :arg1 ( under :op1 ( monetary-quantity monetary-quantity_num_0 :unit pound ) ) :arg2 ( temporal-quantity temporal-quantity_num_1 :unit year ) ) :arg1-of ( compare-01 :arg2 ( group :arg0-of ( try-01 :arg1 ( method :mod traditional :instrument-of treat-03 ) ) ) ) ) :medium ( study-01 :mod swedish )
contrast-01 :arg1 ( go-02 :polarity - :arg0 you :arg4 ( place :mod every ) ) :arg2 ( like-02 :arg0 i :arg1 ( move-01 :arg0 i :direction forward ) )
participate-01 :mode interrogative :arg0 ( complain-01 :arg1-of ( identify-01 :arg0 ( reference-04 :arg1 ( home :mod this ) ) ) ) :arg1 compete-01
possible-01 :arg1 ( reveal-01 :arg0 ( and :op1 person_name_0 :op2 person_name_1 ) :arg1 ( person :arg0-of ( win-01 :arg1 ( series :mod bachelor ) ) ) :arg2 person_name_2 )
say-01 :arg0 ( complain-01 :location region ) :arg1 ( and :op1 ( remain-01 :arg1 ( infrastructure :arg1-of ( remain-01 :arg3 ( infrastructure :arg1-of critical-02 ) ) ) :arg4 ( infrastructure :arg1-of critical-02 ) ) :op2 ( and :op1 ( force :arg1-of arm-01 ) :op2 ( person :arg0-of ( have-rel-role-91 :arg1 country :arg2 partner ) ) :op3 ( disposal :mod oy :poss country_name_0 ) ) )
show-01 :arg0 person_name_0 :arg1 model :time yesterday
design-01 :arg1 person_name_0 :arg4 screening :time yesterday
point-out-02 :arg0 person_name_0 :arg1 ( decline-02 :arg0 ( person_name_1 :arg0-of ( have-org-role-91 :arg2 ( minister :mod prime ) ) ) :arg1 ( propose-01 :arg0 ( government-organization :arg0-of govern-01 ) :arg1 ( contract-02 :arg0 government-organization :arg1 society ) ) )
recalls :arg0 person_name_0 :arg1 ( propose-01 :arg0 ( government-organization :arg0-of ( govern-01 :arg1 ( government-organization :arg0-of ( govern-01 :arg1 ( government-organization :arg0-of govern-01 ) ) ) ) :arg0-of ( have-org-role-91 :arg2 ( minister :mod prime ) ) ) :arg1 ( good :polarity - :domain person_name_1 :mod enough ) )
wonder-02 :polarity - :arg1 ( protest-01 :arg0 ( union :mod trade-01 ) ) :mod such
waiter :arg1 ( person :arg0-of ( have-rel-role-91 :arg1 person :arg2 wife ) ) :arg2 client
seem-01 :arg1 ( raise-01 :arg0 ( bank :mod central ) :arg1 ( rate :mod interest ) :arg2 ( percentage-entity percentage-entity_num_0 ) :time ( before :op1 now :quant ( temporal-quantity temporal-quantity_num_1 :unit month ) :mod only ) ) :arg0-of ( cause-01 :arg1 ( verify-01 :arg0 bank :arg1 ( step :ord ( ordinal-entity ordinal-entity_num_0 ) :mod small ) :purpose ( tighten-01 :arg1 ( condition :mod money ) ) :arg0-of ( verify-01 :arg1 ( stability :poss ( recover-01 :arg1 country_name_0 ) ) ) ) )
high-02 :arg1 ( unit :mod express-income ) :arg1-of ( cause-01 :arg0 ( fee :mod basic :arg1-of ( high-02 :degree more ) ) ) :concession ( lower-05 :arg0 ( monetary-quantity :arg2-of ( cost-01 :arg1 labor ) :arg1-of ( high-02 :degree more ) ) :arg1 unit )
possible-01 :arg1 ( summed :arg0 ( thing :arg1-of learn-01 :mod big ) :arg1 ( rule :quant num_0 :arg1-of simple-02 ) )
possible-01 :arg1 ( say-01 :arg0 i :arg1 ( innocent-01 :arg1 person_name_0 ) )
die-01 :arg1 ( person :quant num_0 :arg1-of ( include-91 :arg2 ( person :quant num_0 ) ) :arg0-of ( have-org-role-91 :arg1 police :arg3 ( lead-02 :arg0 person :arg1 police ) ) ) :arg3 ( die-01 :arg1 person )
person :quant num_0 :arg2-of delegate-01 :source ( person :quant num_1 :arg2-of delegate-01 ) :time present
multi-sentence :snt1 ( contrast-01 :arg1 ( try-01 :arg0 ( person :arg0-of republican :quant some ) :arg1 ( hilata :arg0 person :arg1 person_name_0 :direction away ) ) :arg2 ( try-01 :arg0 person :arg1 ( hilata :arg0 person :arg1 ( kannatuskyselyjen :poss person ) :direction away ) ) ) :snt2 ( succeeded :polarity - :time yet )
opine-01 :arg0 i :arg1 ( option :domain organization_name_0 :mod real ) :time ( think-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg3 judge-01 ) ) )
opine-01 :arg0 i :arg1 ( alternative :mod genuine :domain person_name_0 ) :time ( think-01 :arg0 ( person :arg0-of ( vote-01 :arg1 republican ) ) :arg1 ( alternative :mod genuine :domain person ) )
interest-01 :arg1 location_name_0 :arg2 ( monetary-quantity monetary-quantity_num_0 :unit euro :arg1-of report-01 ) :mod also
tell-01 :arg1 ( lose-02 :arg0 country :arg1 ( hundreds :mod underage ) :arg2 ( temporal-quantity temporal-quantity_num_0 :unit year :mod each ) ) :arg2 ( and :op1 ( thing :mod other ) :op2 ( thing :arg1-of ( say-01 :arg0 organization_name_0 ) ) )
create-01 :arg0 ( person_name_0 :arg1-of ( create-01 :time ( age-01 :arg1 person :arg2 ( temporal-quantity temporal-quantity_num_0 :unit year ) ) ) ) :arg1 ( rounder :degree more )
more-than :op1 ( temporal-quantity temporal-quantity_num_0 :unit year ) :time ( after :op1 ( pay-01 :arg0 company :arg3 loan-01 ) )
multi-sentence :snt1 ( recommend-01 :arg1 ( force-01 :arg1 ( person_name_0 :arg0-of ( have-org-role-91 :arg1 organization_name_1 :arg2 uudelleenneuvottelustrategiat ) ) :arg2 ( day :prep-to ( problem :mod ( large :degree ( more :mod still ) ) ) ) :time ( day :prep-to ( problem :mod ( large :degree more :concession ( even-if :op1 ( take-01 :polarity - :arg1 account :arg3 account :concession ( even-if :op1 ( take-01 :polarity - :arg1 account :arg3 account :mod even :concession ( even-if :op1 ( take-01 :polarity - :arg1 account :arg3 account ) ) ) ) ) ) ) ) ) ) ) :snt2 ( anger-01 :arg0 ( or :op1 ( selection :poss political-party_name_3 ) :op2 ( lead-02 :arg0 ( person :arg0-of ( lead-02 :arg1 ( organization :mod central ) ) ) ) ) :arg1 ( person :arg0-of ( lead-02 :arg1 political-party_name_3 ) ) )
multi-sentence :snt1 ( grow-01 :arg1 ( strategy :mod renegotiation :poss person_name_0 ) :arg2 ( keep-04 :arg0 strategy :arg1 country_name_1 :arg2 organization_name_2 ) ) :snt2 ( grow-01 :arg1 ( and :op1 ( person :arg0-of ( lead-02 :arg1 island_name_2 ) ) :op2 ( person :arg0-of ( lead-02 :arg1 island_name_2 ) ) :op3 ( person :arg0-of ( lead-02 :arg1 ( person :arg0-of ( lead-02 :arg1 island_name_2 ) ) ) ) :op4 ( person :arg0-of ( lead-02 :arg1 ( person :arg0-of ( lead-02 :arg1 island_name_2 ) ) ) ) :op5 ( person :arg0-of ( lead-02 :arg1 ( person :arg0-of ( lead-02 :arg1 island_name_2 ) ) ) ) ) :arg2 ( person :arg0-of ( lead-02 :arg1 island_name_2 ) ) )
multi-sentence :snt1 ( got :arg0 ( delegation :mod country_name_0 ) :arg1 ( off :arg1-of ( write-01 :arg0 delegation ) ) ) :snt2 ( cause-01 :arg1 ( and :op1 ( go-back-19 :arg1 person_name_1 :arg2 ( taunting :arg0 person ) ) :op2 ( excellent-02 :arg1 person :arg1-of excellent-02 ) ) )
accuse-01 :arg0 ( report :arg1-of ( accuse-01 :arg0 ( force :arg1-of arm-01 ) :arg2 ( force :arg1-of arm-01 ) ) ) :arg1 ( and :op1 torture-01 :op2 ( violence :mod abductions ) :op3 ( violence :mod cluster ) ) :arg2 ( man :arg1-of ( likely-01 :degree less :compared-to woman ) )
know-01 :polarity - :arg1 ( possible-01 :mode interrogative :arg1 ( be-02 :arg1 ( truck :poss he ) :beneficiary country_name_0 ) )
cause-01 :arg0 ( force-01 :arg1 person_name_0 :arg2 ( exercise :arg1-of light-06 ) ) :arg1 ( say-01 :arg0 organization_name_1 :arg1 ( surprise-01 :arg1 he :arg2 surprise-01 :time ( last :op1 race ) ) )
publish-01 :arg0 person_name_0 :arg1 ( image :mod new ) :time yesterday :arg1-of ( cause-01 :arg0 ( obligate-01 :arg1 person :arg2 ( take-01 :arg0 person :arg1 film ) ) )
and :op1 ( close-10 :arg1 ( trade-01 :location ( inside :op1 ( court :mod food ) ) ) :arg2 good ) :op2 ( close-13 :arg1 ( -rrb- :arg1-of cheap-02 ) :arg2 union ) :op3 ( option :quant lot :mod takeout )
and :op1 ( close-10 :arg1 ( thing :arg1-of ( find-01 :arg1-of ( possible-01 :polarity - ) ) ) :arg2 union ) :op2 ( close-13 :arg1 ( -rrb- :arg1-of cheap-02 ) :arg2 union ) :op3 ( option :mod ( food :mod nouto :quant several ) )
include-91 :arg1 ( strike-01 :quant num_0 :arg1-of ( include-91 :arg2 ( longest :quant num_1 ) ) ) :arg2 ( strike-01 :arg2 ( longest :quant num_1 ) ) :condition ( strike-01 :polarity - :arg0 country_name_0 :arg1 country_name_1 :mod longest )
and :op1 ( high-02 :arg1 ( rate :mod ( interest :mod short-term ) ) :mod still :mod still ) :op2 ( rise-01 :arg1 ( margin :mod credit ) ) :op3 ( rise-01 :arg1 ( margin :mod credit ) ) :time ( tighten-01 :arg0 ( bank :mod central ) :arg1 ( guideline :poss bank ) )
prepare-02 :arg1 organization_name_0 :arg2 ( and :op1 ( cut-02 :arg0 organization :arg1 ( job :quant num_0 ) :arg3 ( job :quant num_1 :poss organization ) ) :op2 ( cut-02 :arg0 organization :arg1 ( effort :purpose ( cut-02 :arg1 business ) ) ) )
and :op1 ( support-01 :arg1 ( ensure-01 :arg1 ( downloaded :domain telephone ) ) ) :op2 ( stop-01 :polarity - :arg1 nail :time middle )
injure-01 :arg1 ( person_name_0 :arg1-of injure-01 ) :time ( until :op1 ( before :op1 now :duration ( temporal-quantity temporal-quantity_num_0 :unit minute ) ) )
fear-01 :mode interrogative :arg0 i
fear-01 :arg0 amr-unknown :arg1 amr-unknown
close-01 :arg1 ( road :mod rail :arg0-of ( lead-03 :arg2 square ) ) :arg4 ( rate-entity-91 :arg1 ( vehicle :quant ( around :op1 num_0 ) ) :arg2 ( temporal-quantity temporal-quantity_num_0 :unit year ) ) :arg4 ( period :quant num_1 )
lead-03 :arg0 railroads :arg2 ( close-01 :arg1 road :arg3 ( rate-entity-91 :arg1 ( vehicle :mod yuhua :quant ( about :op1 num_0 ) ) :arg2 period ) )
increase-01 :arg1 ( lead-03 :arg0 they :arg2 ( point :quant num_0 ) :location organization_name_0 )
and :op1 ( keep-01 :arg0 he :arg1 ( connect-01 :arg1 he :arg2 ( government-organization :arg0-of govern-01 ) ) ) :op2 ( create-01 :arg0 he :arg1 ( propose-01 :arg0 ( person_name_0 :arg0-of ( have-org-role-91 :arg2 ( minister :mod prime ) ) ) :arg1 ( productive-03 :arg0 ( person :arg0-of ( have-org-role-91 :arg2 ( minister :mod prime ) ) ) :arg3 ( percentage-entity :value num_0 ) ) ) )
choose-01 :arg1 ( person_name_0 :arg0-of ( nominate-01 :arg1 political-party ) ) :degree most :time ( ask-01 :arg0 person :arg1 ( choose-01 :arg0 person :arg1 ( choose-01 :arg0 person :ord ( ordinal-entity ordinal-entity_num_0 ) ) ) )
believe-01 :arg0 person_name_0 :arg1 ( operate-01 :arg1 ( operation :poss state ) )
and :op1 ( keep-01 :arg0 he :arg1 ( enthusiasm :poss he ) :manner ( check-01 :arg0 he :arg1 spy-01 ) ) :op2 ( want-01 :polarity - :arg0 he :arg1 ( envy :arg1 he ) ) :op3 ( envy :arg1 it ) :op4 ( '' :arg0 he :arg1 that ) :op5 ( '' :arg0 he :arg1 that )
and :op1 ( be-located-at-91 :arg1 they :arg2 ( custody :mod police ) :time now ) :op2 ( accuse-01 :arg1 they :arg2 ( law :arg1-of ( define-01 :arg1-of define-01 ) :mod new ) )
and :op1 ( capture-01 :arg0 police :arg1 ( fence :arg1-of ( capture-01 :arg0 police :time now ) ) ) :op2 ( accuse-01 :arg0 police :arg1 they :arg2 ( offend-03 :arg0 police :arg1 ( law :mod new ) ) )
write-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg2 ( person :arg1-of expert-01 ) ) ) :arg1 ( join-01 :arg0 ( and :op1 ( person :arg0-of ( have-org-role-91 :arg2 ( person :arg1-of expert-01 ) ) ) :op2 ( person :arg0-of ( have-org-role-91 :arg2 ( person :arg1-of expert-01 ) ) ) ) :arg1 person_name_1 :arg1-of ( cause-01 :arg0 ( thing :arg0-of ( evidence-01 :arg1 ( use-01 :arg1 ( cigarette :mod electronic ) :arg2 ( cigarette :mod electronic ) ) ) ) ) )
write-01 :arg0 ( person :arg0-of ( work-01 :arg2 ( url-entity :value -lrb- ) ) :mod country_name_0 ) :arg1 ( share-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg2 ( person :arg1-of expert-01 ) ) ) :arg1 ( location_name_0 :name ( name :op1 lancet :op2 phe :op3 phe :op4 phe :op5 phe :op6 phe :op7 phe ) :arg1-of ( use-01 :arg0 ( thing :arg0-of ( evidence-01 :arg1 ( report-01 :arg0 ( tobacco :mod electric ) ) ) ) ) ) )
applaud-01 :arg0 organization_name_0 :arg1 ( way :manner-of ( try-01 :arg0 organization :arg1 ( get-04 :arg0 organization :arg1 ( understand-01 :arg0 woman :arg1 ( importance :mod good ) :time ( lactation :arg0 ( picture :arg0-of publish-01 :consist-of ( person :arg0-of ( have-rel-role-91 :arg2 dd1 ) ) ) :arg1-of ( painted :arg2 ( food :mod depictions :mod depictions ) ) ) ) ) ) ) :manner shock-01
favor-01 :arg1 person_name_0 :time ( age-01 :arg1 person :arg2 ( temporal-quantity temporal-quantity_num_0 :unit year ) ) :time ( take-04 :arg0 ( person :arg0-of ( have-rel-role-91 :arg1 he :arg2 mother ) ) :arg1 ( prostitution :location peninsula_name_1 ) )
cause-01 :arg0 ( act-02 :manner organisations ) :arg1 ( sense-02 :polarity - :arg1 ( stop-01 :arg1 protest-01 :manner somehow ) )
sign-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg1 country_name_0 :arg3 study-01 ) ) :arg1 ( and :op1 ( person :quant num_0 :mod country_name_1 :arg0-of study-01 ) :op2 ( person :quant num_1 :mod country :arg0-of ( have-org-role-91 :arg1 country :arg3 study-01 ) ) :op3 ( person :quant num_1 :arg0-of ( have-org-role-91 :arg1 country :arg3 study-01 ) ) :op4 ( person :quant num_1 :arg0-of ( have-org-role-91 :arg1 country :arg3 study-01 ) ) :op5 ( person :arg0-of ( have-org-role-91 :arg1 organization :arg3 study-01 ) ) :op6 ( person :arg0-of ( have-org-role-91 :arg1 organization :arg3 study-01 ) ) :op6 ( person :arg0-of ( have-org-role-91 :arg1 organization :arg3 study-01 ) ) :op7 ( person :arg0-of ( have-org-role-91 :arg1 country :arg3 study-01 ) ) ) :mod also
elect-01 :arg1 person_name_0 :arg2 ( team :mod nation :example person_name_1 ) :frequency num_0 :time ( before :op1 ( select-01 :arg1 person_name_2 :frequency ( rate-entity-91 :arg1 num_1 :arg2 num_1 ) ) )
and :op1 ( reject-01 :arg0 ( country :location west ) :arg1 ( bid-03 :arg0 country_name_0 :arg1 ( person_name_1 :arg0-of ( have-org-role-91 :arg1 country :arg2 president ) ) ) :time ( before :op1 now :quant ( more-than :op1 ( temporal-quantity temporal-quantity_num_0 :unit year ) ) ) ) :op2 ( say-01 :arg0 ( person_name_2 :arg0-of ( have-org-role-91 :arg2 president ) ) :arg1 ( person_name_2 :arg0-of ( have-org-role-91 :arg2 president ) ) )
include-91 :arg1 ( person_name_0 :arg0-of ( survive-01 :arg1 ( round :mod final ) ) :quant series ) :arg2 ( section :mod final :part-of ( man :quant num_0 ) )
and :op1 ( hit-01 :arg0 ( person_name_0 :arg0-of ( have-org-role-91 :arg2 sijaislyÃ¶jÃ¤ ) ) :arg1 ( person :quant num_0 ) ) :op2 ( allow-01 :arg0 person :arg1 ( run-01 :arg0 person :arg1 ( season :ord ( ordinal-entity ordinal-entity_num_0 ) :poss person :ord ( ordinal-entity ordinal-entity_num_2 ) :poss person ) :time ( after :op1 ( middle :part-of august ) ) ) )
like-01 :arg0 i :arg1 ( person :arg0-of ( have-org-role-91 :arg2 president ) )
have-concession-91 :arg1 ( point-out-02 :arg0 they :arg1 ( and :op1 ( recover-02 :polarity - :arg0 ( economy :mod even ) :arg1 ( crisis :mod finance ) :time yet :source ( recession-02 :arg1 ( model :mod that ) :time ( before :op1 now :duration ( multiple :op1 ( temporal-quantity temporal-quantity_num_0 :unit decade ) ) ) ) ) :op2 ( heavy :arg1 economy :arg2 recession-02 :time ( before :op1 now :duration ( multiple :op1 ( temporal-quantity temporal-quantity_num_1 :unit decade ) ) ) ) ) ) :arg2 ( and :op2 ( strategists :polarity - :arg0 and :arg1 sign ) )
point-01 :arg0 ( study :arg2-of ( involve-01 :arg1 ( person :quant num_0 :mod democracy :arg0-of vote-01 ) ) ) :arg2 ( point :quant num_1 :mod ( percentage-entity percentage-entity_num_0 ) )
possible-01 :arg1 ( know-01 :polarity - :arg0 we :arg1 ( thing :quant-of ( friendship :poss you ) ) :arg1-of possible-01 ) :time ( ever :polarity - )
estimate-01 :arg0 person_name_0 :arg1 ( liikennesumppu :arg1-of ( bad-07 :degree most ) :source peninsula_name_1 )
funny :domain ( come-01 :arg1 it :time ( time :mod this ) ) :time always
period :time-of change-01 :time ( and :op1 ( turn-01 :arg1 year ) :op2 ( abolition :location ( across :op1 country ) ) )
say-01 :arg0 organization_name_0
and :op1 ( organize-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg1 organization_name_0 :arg2 capital ) :arg1-of ( organize-01 :arg0 ( capital :arg0-of ( have-org-role-91 :arg2 capital ) ) ) :arg1-of ( organize-01 :location ( list :arg0-of author-01 ) ) ) :arg1 ( person_name_1 :arg0-of ( have-org-role-91 :arg2 capital ) ) :mod also ) :op2 ( have-org-role-91 :arg0 person :arg1 organization :arg2 professor )
and :op1 ( organize-01 :arg0 ( organization_name_0 :arg1-of ( organize-01 :medium book ) :arg1-of ( base-02 :arg2 book ) ) :arg1 ( person :arg0-of ( have-org-role-91 :arg1 ( university :mod person_name_1 ) :arg2 professor ) ) :mod also ) :op2 ( person :arg1-of ( expert-01 :arg2 ( economy :mod respect-01 ) ) )
state-01 :arg0 article :arg1 ( negotiate-01 :arg0 ( and :op1 ( organization :mod train-01 ) :op2 ( thing :arg2-of ( result-01 :arg1 ( person :arg0-of ( operate-01 :mod foreign ) :mod potential ) ) ) ) :arg2 airport :time ( year :mod last ) )
overview :arg0 ( sector :mod some :part-of economy ) :arg1 ( perform-02 :arg0 sector :arg1 ( thing :arg2-of ( base-02 :arg1 economy ) ) :time past )
say-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg2 ( authority :mod prison ) ) ) :arg1 ( possible-01 :polarity - :arg1 ( witness-01 :arg0 i :arg1 ( and :op1 ( person :arg0-of witness-01 ) :op2 ( person :arg0-of ( supply-01 :arg1 company ) ) :op3 ( person :arg0-of ( supply-01 :arg1 company ) ) ) :arg0-of ( cause-01 :arg1 ( possible-01 :polarity - :arg1 ( be-02 :arg1 i :prep-with ( record :mod record :arg1-of ( see-01 :arg0 i :time ever ) ) ) ) ) ) )
contrast-01 )
contrast-01 :arg1 ( remain-01 :arg1 ( employ-01 :polarity - :location country_name_0 ) :arg3 ( person :quant num_0 ) :time ( date-interval :op1 ( date-entity decade_date-entity_0 ) :op2 ( date-entity year_date-entity_1 ) ) ) :arg2 ( rise-01 :arg1 ( rate :mod ( employ-01 :polarity - ) :location country_name_1 ) :arg2 ( person :quant num_1 :arg2-of total-01 ) )
multi-sentence :snt1 ( opponent :mod tukko :domain ( opponent :mod tukko ) ) :snt2 ( win-01 :arg0 it :arg1 ( and :op1 ( person :quant num_0 :arg0-of play-01 :mod international ) :op2 ( defend-01 :quant num_1 :mod male ) ) :arg2 ( and :op1 ( person :quant num_0 :arg0-of play-01 :mod international ) :op2 ( defend-01 :quant num_1 :mod male :arg1-of deep-02 ) ) :time ( level :mod this ) )
laugh-01 :arg0 we :frequency often
intend-01 :arg0 ( couple :arg0-of reside-01 :arg1-of ( reside-01 :arg0 couple ) ) :arg1 ( drive-01 :arg0 couple :arg1 home ) :arg1-of ( cause-01 :arg0 ( and :op1 ( person :mod young :arg0-of ( have-rel-role-91 :arg1 couple :arg2 child ) ) :op2 ( person :mod young :arg0-of ( have-rel-role-91 :arg1 couple :arg2 child ) ) ) :arg1-of ( cause-01 :arg0 ( long-03 :arg1 distance-01 :degree ( too :polarity - ) ) ) )
add-01 :arg0 person_name_0 :arg1 ( and :op1 ( shake-01 :arg1 ( image :mod phone ) ) :op2 ( shake-01 :arg1 ( and :op1 ( shake-01 :arg1 ( person :arg0-of ( have-rel-role-91 :arg1 he :arg2 mother ) ) ) :op2 ( shake-01 :arg1 image ) ) ) :time ( find-01 :arg0 person :arg1 ( image :poss phone ) ) )
contrast-01 :arg2 ( part :polarity - :domain ( supply-01 :arg0 company_name_0 :arg1 ( supply-01 :arg0 company :arg1 ( luck :mod ( company :arg0-of compete-02 :mod commerce ) ) :arg2 ( and :op1 culture :op2 media :op3 urheiluerityisvaliokunnan ) :time hear-01 ) ) :mod only ) :li num_0
lie-07 :arg1 ( and :op1 ( belt :mod gold ) :op2 ( lipstick :mod red ) ) :arg2 whole
and :op1 ( meet-02 :arg0 they :arg1 ( and :op1 ( speak-01 :arg0 they :medium phone ) :op2 ( speak-01 :arg0 they :medium phone ) ) ) :op2 ( consider-02 :arg0 they :arg1 ( titles :mod important :beneficiary person_name_0 ) )
say-01 :arg0 ( and :op1 person_name_0 :op2 person_name_1 ) :arg1 ( argue-01 :arg0 organization_name_2 :arg1 ( evidence-01 :polarity - :arg1 ( work-09 :arg1 ( cigarette :mod electronic ) :prep-as ( route :location-of ( burn-01 :arg1 ( or :op1 child :op2 non-smokers ) ) ) ) ) )
and :op1 ( cut-02 :arg0 ( concern-01 :arg1-of stall-01 :location country_name_0 ) :arg1 ( monetary-quantity :arg2-of ( price-01 :arg1 ( thing :arg2-of ( price-01 :arg1 ( thing :arg2-of ( price-01 :arg1 ( thing :arg2-of ( price-01 :arg1 ( thing :arg2-of ( price-01 :arg1 commodity ) :mod other ) ) ) ) ) ) ) ) ) :arg2 ( thing :arg2-of ( price-01 :arg1 ( thing :arg2-of ( price-01 :arg1 ( thing :arg2-of ( price-01 :arg1 ( thing :arg2-of ( price-01 :arg1 commodity ) :mod other ) ) ) ) ) ) ) :manner iron :time ( time :arg1-of same-01 ) ) :op2 ( fall-07 :arg1 concern-01 :arg2 ( between :op1 ( percentage-entity percentage-entity_num_0 ) :op2 ( percentage-entity percentage-entity_num_1 ) ) )
arrive-01 :arg1 ( customer :arg1-of ( arrive-01 :arg4 ( continent :location ( group :mod small ) ) ) )
and :op1 ( go-02 :arg0 i :arg4 inside ) :op2 ( come-out-09 :arg1 i )
and :op2 ( get-01 :polarity - :arg0 money :arg1 ( happy :mod ( great :degree more ) ) :mod really )
multi-sentence :snt1 ( possible-01 :arg1 ( conceal :arg0 ( person :arg0-of ( have-org-role-91 :arg1 organization_name_0 :arg2 coach ) ) :arg1 ( person_name_1 :arg0-of ( have-org-role-91 :arg1 organization :arg3 ( lead-02 :arg0 person :arg1 organization ) ) ) :arg2 storm :time ( after :op1 ( win-01 :arg0 person :arg1 organization_name_2 :time ( night :mod saturday ) ) ) ) :degree bare ) :snt2 ( and :op1 ( call-01 :arg0 person_name_3 :arg1 person_name_3 :arg2 ( leagues :mod ( enthusiastically :degree very ) ) ) :op2 ( say-01 :arg0 person :arg1 ( '' :arg1 ( team :quant num_0 :mod location_name_4 ) :degree very ) ) )
believe-01 :polarity - :arg0 i :arg1 ( undermine-01 :arg0 it :arg1 company_name_0 :degree at-all )
try-01 :arg1 ( have-03 :arg1 try-01 )
say-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg1 organization_name_0 :arg2 -lrb- ) ) :arg1 ( support-01 :arg0 board :arg1 ( and :op1 ( develop-02 :arg1 technology ) :op2 ( innovate-01 :arg1 technology ) :poss industry ) ) :mod also :arg1-of ( say-01 :arg0 ( press :poss organization_name_1 ) )
expect-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg2 ( official :mod health ) ) ) :arg1 ( contain-01 :arg0 product :arg1 ( or :op1 methanol :op2 ( material :arg0-of kill-01 ) :op3 ( alcohol :mod ethyl ) :arg1-of ( report-01 :arg1-of ( resemble-01 :arg2 ( ingredient :arg1-of activity-06 ) ) ) ) )
guess-01 :arg0 i :arg1 ( know-01 :arg0 person_name_0 :arg1 ( good :degree more :compared-to this ) )
suicide :mod politics :domain ( thing :arg2-of sanction-02 ) :source organization_name_0 :arg1-of ( declare-01 :arg0 person_name_1 )
suicide :mod politics :domain ( thing :arg2-of sanction-02 ) :source organization_name_0 :arg1-of ( declare-01 :arg0 person_name_1 )
say-01 :arg0 organization_name_0 :arg1 ( fall-01 :arg1 ( thing :arg1-of ( precede-01 :arg2 ( bond :mod index ) ) ) :time immediate :time ( end-01 :arg1 ( thing :arg1-of ( precede-01 :arg2 ( bond :mod dinosaur ) ) ) ) )
have-03 :arg0 ( and :op1 ( person :arg0-of ( have-org-role-91 :arg1 organization_name_0 ) ) :op2 ( person :arg0-of ( have-org-role-91 :arg1 organization :arg3 ( lead-02 :arg0 person ) ) ) :op3 ( person :arg0-of ( have-org-role-91 :arg1 organization :arg3 ( lead-02 :arg0 person ) ) ) :op4 ( person :arg0-of ( have-org-role-91 :arg1 organization :arg3 ( lead-02 :arg0 person ) ) ) :op5 ( person :arg0-of ( have-org-role-91 :arg1 organization :arg3 ( lead-02 :arg0 person ) ) ) :op6 ( person :arg0-of ( have-org-role-91 :arg1 organization :arg3 ( lead-02 :arg0 person ) ) ) :op6 ( person :arg0-of ( have-org-role-91 :arg1 organization :arg3 ( lead-02 :arg0 person ) ) ) :op6 ( person :arg0-of ( have-org-role-91 :arg1 organization :arg3 ( lead-02 :arg0 person ) ) ) :op6 ( person :arg0-of ( have-org-role-91 :arg1 organization :arg3 ( lead-02 :arg0 person ) ) ) :op6 ( person :arg0-of ( have-org-role-91 :arg1 organization :arg3 ( lead-02 :arg0 person ) ) ) :op6 ( person :arg0-of ( have-org-role-91 :arg1 organization :arg3 ( lead-02 :arg0 person ) ) ) :op6 ( person :arg0-of ( have-org-role-91 :arg1 organization :arg3 ( lead-02 :arg0 person ) ) ) :op6 ( person :arg0-of ( have-org-role-91 :arg1 organization :arg3 ( lead-02 :arg0 person ) ) ) :op6 ( person :arg0-of ( have-org-role-91 :arg2 member ) ) :op6 ( person :arg0-of ( have-org-role-91 :arg2 member ) ) :op7 ( person :arg0-of ( have-org-role-91 :arg2 member ) ) ) :arg1 ( referendum :quant num_0 )
claim-01 :arg0 ( person :arg0-of ( oppose-01 :arg1 political-party_name_0 ) ) :arg1 ( send-01 :arg0 person :arg1 ( threat :mod ( die-01 :arg1 person ) :mod anonymous ) :arg1-of ( cause-01 :arg0 ( warn-01 :arg0 person :arg1 ( boo :arg0 person :arg1 ( person_name_1 :arg0-of ( have-org-role-91 :arg2 mr ) ) :time ( speak-01 :arg0 person ) ) ) ) :mod also )
say-01 :arg0 person_name_0 :arg1 ( lead-03 :arg0 ( kotivierailutapaamiset :time ( week :mod last ) ) :arg2 ( realize-01 :arg0 person :arg1 ( possible-01 :arg1 ( '' :arg1 person_name_1 ) ) ) )
say-01 :arg0 person_name_0 :arg1 ( and :op1 ( receive-01 :arg0 ( meet-03 :time ( week :mod last ) ) :arg1 ( visit-01 :arg0 person :arg1 home ) ) :op2 ( possible-01 :arg1 ( ' :arg1 wood :mod right ) ) )
and :op1 ( close-13 :arg1 ( family :arg1-of ( have-org-role-91 :arg0 person_name_0 :arg2 member ) ) :arg2 ( family :arg1-of ( have-org-role-91 :arg0 person :arg2 member ) ) :duration ( multiple :op1 ( temporal-quantity temporal-quantity_num_0 :unit decade ) ) ) :op2 ( project :mod construct-01 :arg1-of major-02 :domain family )
suppose-01 :arg1 ( thing :arg1-of ( accuse-01 :arg2 ( thing :arg1-of accuse-01 ) ) )
say-01 :arg0 ( person :quant ( more-than :op1 num_0 ) :arg0-of ( have-org-role-91 :arg1 political-party_name_0 ) ) :arg1 ( change-01 :arg1 ( thing :arg1-of ( opine-01 :arg0 person ) ) :arg2 ( bad-04 :arg1 person :arg2 ( bad-04 :arg1 person ) ) )
and :op1 ( drive-02 :arg0 ( and :op1 location_name_0 :op2 elsewhere ) :arg1 ( participate-01 :arg0 and :arg1 ( protest-01 :arg0 country ) ) :arg2 ( protest-01 :arg0 and ) :time ( morning :mod night ) ) :op2 ( begin-01 :arg1 ( end-01 :arg1 road ) )
have-concession-91 :arg1 ( and :op1 ( pull-01 :arg0 person :arg1 capitalism :arg2 ( far :degree too ) :purpose ( conclude-01 :arg0 person ) ) :op2 ( consider-02 :arg0 person :arg1 capitalism ) ) :arg2 ( understand-01 :arg0 person_name_0 :arg1 ( revolution-03 :arg0 industry ) )
important :domain ( stay-01 :arg1 it :manner together ) :time now
and :op1 ( get-01 :arg0 ( wave :mod sound ) :arg1 ( channel :name ( name :op1 ion ) :mod this ) :purpose ( open-up-03 :arg0 apply-01 :arg1 cell ) ) :op2 ( tell-01 :arg0 ( journal :mod organization_name_0 :mod journal ) :arg1 ( report-01 :arg0 ( journal :mod journal ) ) )
and :op1 ( transport :arg0 ( transport-01 :arg1-of public-02 :arg1-of ( include-91 :arg2 ( transport-01 :mod big :mod this ) :arg1-of normal-02 ) ) :arg1 ( see-01 :arg1 everything ) :arg1-of normal-02 ) :op2 ( turn-01 :arg0 everything :time now )
include-91 :arg1 ( person_name_0 :arg1-of ( include-91 :arg2 lamb ) ) :arg2 ( write-01 :arg0 person :arg1 ( book :poss person ) :arg1-of ( cause-01 :arg0 ( praise-01 :arg0 person :arg1 ( person :arg1-of powerful-02 :arg0-of ( divide-02 :arg1 person :arg2 ( life :mod academia :poss person ) ) ) ) ) )
excuse-02 :polarity - :arg1 it :time no-longer
seem-01 :arg1 ( wrong-04 :arg1 nothing )
expect-01 :arg1 ( person :arg0-of protest-01 :mod thousand :quant several )
say-01 :arg0 ( person_name_0 :arg0-of ( have-org-role-91 :arg2 tv-speech ) ) :arg1 ( move-02 :arg1-of ( cause-01 :arg0 ( possible-01 :arg1 ( bring-01 :arg0 it :arg1 ( view :poss they ) :manner ( dissenting :polarity - :mod any ) ) ) ) )
agony :arg0 ( person :arg0-of sing-01 ) :arg1 ( chair :mod lounge :mod leelian )
try-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg1 organization_name_0 ) ) :arg1 ( protect-01 :arg0 person :arg1 organization :arg2 ( attack-01 :arg1 ( and :op1 ( south :part-of country_name_1 ) :op2 ( west :part-of country ) ) ) )
and :op1 ( come-01 :arg1 ( art :mod ( creative :degree most ) :arg1-of ( relate-01 :arg2 ( weapon :arg1-of ( relate-01 :arg2 weapon ) ) ) :mod ( creative :degree most ) :arg1-of ( relate-01 :arg2 weapon ) ) :arg3 ( inside :op1 excel ) ) :op2 ( produce-01 :arg0 ( embellished :name ( name :op1 fantastically ) :mod fantastically ) :arg1 weapon )
send-01 :arg1 ( and :op1 ( person :arg0-of ( have-rel-role-91 :arg1 comedy :arg2 friend ) ) :op2 ( person :arg0-of ( have-rel-role-91 :arg1 person :arg2 friend ) ) :op3 ( person :arg0-of ( have-rel-role-91 :arg1 person :arg2 friend ) ) :op4 ( person :arg0-of ( have-rel-role-91 :arg1 person :arg2 friend ) ) :op5 ( person :arg0-of ( have-rel-role-91 :arg1 person :arg2 friend ) ) ) :arg2 ( person :arg0-of ( have-rel-role-91 :arg1 comedy :arg2 friend ) ) :time end-01
and :op1 ( person :mod white :mod country_name_0 ) :op2 location_name_0 :op3 person_name_1
and :op1 ( end-up-03 :arg1 we :arg2 ( channel :mod this ) ) :op2 ( explain-01 :arg0 person_name_0 ) :arg1-of ( cause-01 :arg0 amr-unknown )
contrast-01 :arg2 ( question-03 :arg0 ( scientist :quant many ) :arg1 ( sustainability :arg1 ( information :arg1-of ( refer-01 :arg2 ( and :op1 ( link-01 :arg1 ( and :op1 ( industry :consist-of tobacco ) :op2 ( industry :consist-of tobacco ) :quant some ) ) ) ) ) ) )
and :op1 ( fool-01 :arg0 one :arg1 ( write-01 :arg0 one ) ) :op2 ( echoed :arg0 ( other :quant all ) )
and :op1 ( fool-01 :arg0 one :arg1 write-01 ) :op2 ( repeat-01 :arg0 ( other :quant all ) :arg1 write-01 )
thing :mod ( kind :mod this ) :arg1-of ( base-02 :arg2 ( and :op1 ( person_name_1 :arg0-of ( have-org-role-91 :arg1 country :arg2 president ) ) :op2 ( person :arg0-of ( partner-01 :arg1 country ) ) :arg1-of regular-02 ) )
estimate-01 :arg0 ( thing :arg1-of ( report-01 :arg0 ( organization_name_0 :arg0-of ( analyze-01 :arg1 ( thing :arg1-of ( report-01 :arg0 person_name_1 ) :time ( week :mod this ) ) ) ) ) ) :arg1 ( and :op1 ( lose-02 :arg0 ( retailers :poss country ) :arg1 ( rate-entity-91 :arg1 ( monetary-quantity monetary-quantity_num_0 :unit dollar ) :arg2 ( volume-quantity volume-quantity_num_1 :unit gallon ) ) ) :op2 ( lose-02 :arg0 metcash :arg1 ( rate-entity-91 :arg1 ( monetary-quantity monetary-quantity_num_1 :unit dollar ) :arg2 ( temporal-quantity temporal-quantity_num_2 :unit year ) ) :time ( by :op1 ( end-01 :arg1 num_2 ) ) ) ) :medium ( report :time ( week :mod this ) )
important :domain ( and :op1 you :op2 other ) :mod important :mod also
include-91 :arg1 organization_name_0 :arg2 ( company :mod only :arg2-of ( include-91 :arg1 ( woman :quant num_0 :arg2-of ( include-91 :arg1 ( and :op1 ( woman :arg0-of ( have-org-role-91 :arg1 country :arg2 ( person :arg0-of ( manage-01 :mod general ) ) ) ) :op2 ( person :arg0-of ( have-org-role-91 :arg2 ( director :mod finance ) ) ) ) ) ) ) ) :mod almost :mod almost
bring-01 :arg0 ( magazine_name_0 :mod organization ) :arg1 ( truth :quant num_0 :arg1-of hard-04 ) :arg2 ( person_name_1 :location ( behind :op1 scenes ) )
point-out-02 :arg0 he :arg1 ( give-01 :arg0 union-02 :arg1 ( and :op1 ( person :mod economy ) :op2 ( person :mod other ) ) :arg2 location_name_0 :time ( after :op1 now :quant ( several :op1 ( temporal-quantity temporal-quantity_num_0 :unit year ) ) ) ) :time ( time :arg1-of same-01 )
say-01 :arg0 report-01
find-02 :arg0 survey-01 :arg1 ( and :op1 ( group :arg1-of ( differ-02 :degree very ) :domain person_name_0 ) :op2 ( push-02 :arg0 person :arg1 person_name_1 :arg2 ( person :arg0-of ( vote-01 :arg1 university ) ) ) ) :mod also
find-02 :arg0 poll-01 :arg1 ( and :op1 ( do-02 :arg0 person_name_0 :arg1 ( group :arg1-of ( differ-02 :degree very ) ) ) :op2 ( replace-01 :arg0 person :arg1 ( educate-01 :arg1-of ( high-02 :degree more ) ) :arg2 ( person :arg0-of ( vote-01 :arg1 republican ) ) ) ) :mod also
drummer :arg0 person_name_0 :arg1 ( mainland :part-of ( person_name_1 :arg0-of ( rival-01 :arg1 country ) ) ) :arg2 person_name_2 :time present
multi-sentence :snt1 ( and :op1 ( shoot-02 :arg0 he :arg1 ( person :arg0-of ( have-rel-role-91 :arg1 he :arg2 girlfriend ) ) :location location_name_0 :time ( after :op1 ( shoot-02 :arg0 he :arg1 ( person :arg0-of ( have-rel-role-91 :arg1 he :arg2 girlfriend ) ) :location location_name_0 :time ( morning :mod same ) ) ) :time ( before :op1 ( shoot-02 :arg0 he :arg1 ( person :arg0-of ( have-rel-role-91 :arg1 he :arg2 girlfriend ) ) :location location_name_0 :time ( late :op1 ( temporal-quantity temporal-quantity_num_0 :unit day ) :degree more ) ) ) ) :op2 ( say-01 :arg0 person_name_1 :arg1 ( sorry-01 :arg1 person ) ) ) :snt2 ( and :op1 ( murder-01 :arg0 i ) :op2 ( possible-01 :arg1 ( cancel-01 :arg0 i :arg1 it ) ) )
release-01 :arg1 company_name_0 :time ( from :op1 ( date-entity dayperiod_date-entity_0 ) )
title-01 :arg1 ( title :mod ( expensive :degree most ) :poss country_name_0 ) :arg2 ( gamellÃ¤ :mod big :mod helanderin ) :time ( early :degree more )
sell-01 :arg0 ( person_name_0 :arg0-of ( have-rel-role-91 :arg2 comrade ) ) :arg1 device :arg1-of ( cause-01 :arg0 ( skill :arg1-of ( advanced-02 :degree most ) :beneficiary professional ) :time time )
say-01 :arg0 person_name_0 :arg1 ( pay-01 :arg0 we :arg1 bill :arg1-of ( say-01 :arg0 forum ) :time now )
obvious-01 :arg1 ( obvious-01 :arg1 ( move-01 :arg1 ( movement-07 :arg1 ( union-02 :arg1 union-02 ) ) ) :time ( before :op1 now :quant ( temporal-quantity temporal-quantity_num_0 :unit year :mod even ) ) )
obvious-01 :arg1 ( obvious-01 :arg1 ( move-01 :arg1 ( movement-07 :arg1 ( union-02 :arg1 union-02 ) ) ) :time ( before :op1 now :quant ( more-than :op1 ( temporal-quantity temporal-quantity_num_0 :unit year ) ) ) )
and :op1 ( difficult :domain ( enter-01 :arg1 game ) ) :op2 ( want-01 :arg0 i :arg1 ( go-02 :arg0 i :arg4 game :arg1-of deep-02 ) )
and :op1 ( difficult :domain ( feed-01 :arg0 location_name_0 :arg2 game ) ) :op2 ( cause-01 :arg0 amr-unknown :arg1 ( want-01 :arg0 i :arg1 ( go-02 :arg0 i :arg4 game :arg1-of deep-02 ) ) )
and :op1 ( form :arg1-of long-03 :domain person_name_0 ) :op2 ( know-01 :arg0 person :arg1 ( candelabra :prep-with ( precision :mod mathematical ) ) )
pass-01 :arg0 ( company :arg0-of ( have-03 :arg1 ( turnover :arg1-of strong-02 ) ) ) :arg1 ( company :arg0-of ( turnover :mod weak ) ) :arg2 ( and :op1 ( company :mod ( turnover :arg1-of weak-02 ) ) :op2 ( company :quant num_1 ) :op3 ( company :arg0-of ( turnover :mod weak ) ) ) :time ( after :op1 ( increase-01 :arg0 company :arg1 ( point :quant num_3 :mod ( percentage-entity percentage-entity_num_0 ) ) ) )
contrast-01 )
possible-01 :arg1 ( and :op1 ( downloading :arg0 you :arg1 ( and :op1 ( application :mod android ) :op2 equipment ) ) :op2 ( send-01 :arg0 you :arg1 ( and :op1 photograph-01 :op2 story ) :arg2 we ) )
say-01 :arg0 ( person_name_0 :arg0-of ( have-org-role-91 :arg1 city :arg2 mayor ) ) :arg1 ( and :op1 ( contact-01 :arg0 person :arg1 ( matter :topic monday ) ) :op2 ( react-01 :arg0 person :arg1-of quick-02 ) )
come-01 :arg1 ( passenger :arg1-of civilize-01 ) :arg3 ( south :part-of location_name_0 )
contrast-01 :arg2 ( claim-01 :arg0 ( person_name_0 :arg0-of ( have-org-role-91 :arg2 ( minister :mod prime ) ) ) :arg1 ( and :op1 ( look-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg2 ( person :arg0-of migrate-01 ) ) ) :arg1 ( life :mod ( good :degree more ) ) ) :op2 ( flee-05 :arg0 person :arg2 war ) :op3 ( flee-05 :arg0 person :arg2 war :arg1-of ( cause-01 :arg0 ( and :op1 ( country :mod other :arg0-of ( have-org-role-91 :arg1 organization_name_1 ) ) :op2 ( country :arg2-of ( include-91 :arg1 country_name_2 ) ) ) ) ) ) )
ask-01 :arg0 girl :arg1 ( and :op1 ( possible-01 :arg1 ( play-11 :arg0 ( girl :arg1-of ( neighbor-01 :arg2 he ) ) ) :condition ( possible-01 :arg1 ( play-11 :arg0 they :arg2 ( and :op1 drum :op2 bass ) ) ) ) :op2 ( exam :arg0 girl :time morning ) ) :arg2 ( girl :arg1-of ( neighbor-01 :arg2 he ) )
multi-sentence :snt1 ( announce-01 :arg0 enterprise :arg1 ( and :op1 ( seize-01 :arg0 enterprise :arg1 problem :purpose ( campaign-01 :arg0 enterprise :arg1 ( against :op1 ( campaign-01 :arg1 ( oppose-01 :arg1 ( person :arg0-of live-01 ) ) ) ) ) ) :op2 ( announce-01 :arg0 enterprise :arg1 problem ) ) ) :snt2 ( aim-01 :arg1 ( challenge-01 :arg1 ( culture :arg0-of ( seek-01 :arg1 help-01 :time ( need-01 :arg0 man :arg1 help-01 ) ) ) ) )
stop-01 :arg1 ( route :mod quietest )
know-01 :polarity - :arg0 i :arg1 ( deal :mod enthusiasm :topic ( enthusiasm :beneficiary ( party :mod terrible ) ) :domain ( hold-01 :arg0 ( party :mod terrible ) :arg1 debate-01 :condition ( be-located-at-91 :arg1 ( person :quant num_0 ) :arg2 ( num_1 :quant num_1 ) ) ) )
add-01 :arg0 ( center :mod weather ) :arg1 ( chance-02 :arg1 ( develop-02 :arg1 ( cyclone :mod tropical ) :time ( after :op1 now :quant ( between :op1 ( temporal-quantity temporal-quantity_num_0 :unit day ) :op2 ( temporal-quantity temporal-quantity_num_1 :unit day ) ) :op3 ( center :mod weather ) ) ) :mod also :arg1-of ( define-01 :arg1-of ( define-01 :arg1-of ( define-01 :arg2 ( middle :part-of ( and :op1 location_name_0 :op2 organization_name_1 ) ) ) ) ) :mod also :mod also )
expect-01 :arg1 ( model :poss organization_name_0 :arg1-of rise-01 ) :duration ( temporal-quantity temporal-quantity_num_0 :unit year )
based :arg0 person_name_0 :arg1 ( film :arg1-of ( base-02 :arg2 ( member :arg0-of ( found-01 :arg1 country_name_1 ) ) :time ( year :mod ( early :degree most ) ) ) ) :arg2 person_name_2
present-01 :arg0 person_name_0 :arg1 ( aid-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg1 ( person_name_1 :arg0-of ( found-01 :arg1 country ) :arg0-of ( found-01 :arg1 country ) :arg0-of ( found-01 :arg1 country ) ) :arg2 member ) ) ) :time ( year :mod early )
help-01 :arg0 ( role :poss person_name_0 :time ( early :op1 ( year :mod early ) ) ) :arg1 ( person_name_1 :arg0-of ( have-rel-role-91 :arg1 person :arg2 mother ) :arg0-of ( have-rel-role-91 :arg1 person :arg2 mother ) :arg0-of ( have-rel-role-91 :arg1 person :arg2 mother ) :arg0-of ( have-rel-role-91 :arg1 person :arg2 mother ) :arg0-of ( have-rel-role-91 :arg1 person :arg2 mother ) )
organize-01 :arg0 ( union :mod trade-01 ) :arg1 ( protest-01 :mod big ) :manner ( way :quant many ) :manner ( way :quant many ) :manner ( and :op1 ( interesting :degree most ) :op2 exceptional )
contrast-01 :arg1 ( possible-01 :arg1 ( true :domain this :prep-in ( point :mod medicine :mod view-01 ) ) ) :arg2 ( risk-01 :arg0 ( injure-01 :mod additional ) :arg2 ( person :arg0-of play-01 ) )
reserve-01 :arg1 ( person :arg1-of employ-01 :mod permanent ) :mod some
multi-sentence :snt1 ( contrast-01 :arg2 ( have-condition-91 :arg1 ( rise-01 :arg1 wood ) :arg2 ( rise-01 :polarity - :arg1 wood :mod final :condition ( rise-01 :arg1 wood ) ) ) ) :snt2 ( possible-01 :arg1 ( provide-01 :arg0 ( thing :arg1-of ( answer-01 :arg0 they ) ) :arg1 ( person :arg0-of ( win-01 :arg1 ( heart :part-of bachelor ) ) ) :mod revelation ) )
contrast-01 :arg1 ( offer-01 :arg0 website :arg1 ( candidate :arg0-of ( have-rel-role-91 :arg1 website :arg2 wife ) ) ) :arg2 ( contrast-01 :arg1 ( offer-01 :arg0 website :arg1 ( candidate :mod ( kind :mod amr-unknown ) ) :time always ) :arg2 ( prefer-01 :arg0 ( person :mod ( kind :mod amr-unknown ) ) :arg1 ( sleep-01 :arg0 person ) ) )
have-03 :arg0 publication_name_0 :arg1 ( video :location-of ( drink-01 :arg0 teenager :arg1 ( rise-01 :arg1 hops :arg1-of ( cheap-02 :degree most ) ) ) )
and :op1 ( immensely :arg0 ( person :arg0-of ( have-org-role-91 :arg1 ( person :arg0-of smuggle-01 ) :arg2 ( king :mod rich ) ) ) :arg1 ( and :op1 ( person :arg0-of smuggle-01 ) :op2 ( person :arg0-of ( have-org-role-91 :arg2 head-of-state ) ) :op3 ( person :arg0-of ( have-org-role-91 :arg2 head-of-state ) ) :op4 ( person :arg0-of ( have-org-role-91 :arg2 head-of-state ) ) :op5 ( person :arg0-of ( have-org-role-91 :arg2 head-of-state ) ) :op6 ( person :arg0-of ( have-org-role-91 :arg2 head-of-state ) ) :op7 ( person :arg0-of ( have-org-role-91 :arg2 head-of-state ) ) ) )
cause-01 :arg1 ( go-on-15 :arg1 amr-unknown )
describe-01 :arg0 ( lamb :source ( person :mod old :arg0-of ( have-rel-role-91 :arg2 friend ) ) ) :arg1 he :arg2 ( and :op1 intelligent :op2 charismatic :op3 funny )
include-91 :arg1 this :arg2 ( line :quant ( num_1 :ord ( ordinal-entity ordinal-entity_num_0 ) ) :source person_name_0 ) :time ( after :op1 ( hit-02 :arg0 he :arg1 num_2 :prep-against organization_name_1 :time ( date-entity month_date-entity_0 day_date-entity_0 ) ) )
and :op1 ( rich :degree more :domain discuss-01 ) :op2 ( possible-01 :arg1 ( approach-02 :arg1 person_name_0 :prep-without ( and :op1 ideology :op2 politics ) ) :mod also ) :time today
recommend-01 :arg1 ( stop-01 :arg0 we :arg1 ( disaster :mod this ) )
r-line :arg0 ( line :mod future :time future ) :arg1 ( station :quant num_0 ) :mod main
multi-sentence :snt1 ( amused :polarity - :arg0 ( thread :name ( name :op1 unauthorized :op2 unauthorized ) :mod this ) :arg1 city_name_0 ) :snt2 ( '' :mode expressive )
suffer-01 :arg0 ( person_name_0 :arg0-of ( stop-01 :arg1 ( develop-02 :arg1 ( turnover :poss unit ) ) ) ) :time ( before :op1 now :duration ( few :op1 ( temporal-quantity temporal-quantity_num_0 :unit year ) ) )
pend-01 :arg1 sue-02 :arg2 sue-02
keep-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg1 country_name_0 :arg2 president ) ) :arg1 ( speech :arg1-of same-01 ) :time ( before :op1 now :quant ( temporal-quantity temporal-quantity_num_0 :unit month ) )
and :op1 ( remember-01 :arg0 i :arg1 ( thing :quant num_0 :arg1-of ( include-91 :arg2 ( thing :location ( date-entity century_date-entity_0 ) ) ) ) :frequency often ) :op2 ( say-01 :arg0 person_name_0 :arg1 ( possible-01 :arg1 ( care-01 :arg0 person :arg1 ( less :degree less ) ) ) )
tell-01 :arg0 person_name_0 :arg1 ( contrast-01 :arg1 ( thing :arg1-of message-01 :arg1-of ( send-01 :arg2 ( number :arg1-of ( correspond :polarity - ) ) ) ) :arg2 ( entitled :arg1 message :arg2 ( person :arg0-of report-01 ) :time ( after :op1 speak-01 ) ) )
recover-02 :arg1 ( economy :mod ( area :mod euro ) ) :degree at-all
and :op1 ( put-01 :arg0 ( person :arg0-of ( have-rel-role-91 :arg2 mother ) ) :arg1 tie :arg2 ( around :op1 ( ear :part-of person ) ) ) :op2 ( settle-02 :arg0 person :arg1 tie :location ( around :op1 ( ear :part-of person ) ) )
locate-01 :arg1 village :location ( next-to :op1 center ) :arg0-of ( release-01 :arg1 ( family :mod main ) )
thing :quant few :arg1-of ( resemble-01 :arg2 ( security :mod personalized :location ( road :location road ) :arg0-of ( make-01 :arg1 ( idea :mod right ) :time ( time :mod right ) ) ) )
understand-01 :arg0 person_name_0 :arg1 ( indignant :arg1 ( media :mod commerce ) :manner sipilÃ¤ )
speak-01 :arg0 ( lamb :mod person_name_0 :quant ( bit :mod just ) ) :time ( speak-01 :arg0 person :arg2 police :arg1-of ( cause-01 :arg0 ( and :op1 ( shoot-02 :arg0 person :arg1 ( shoot-02 :arg1 person ) ) :op2 ( recommend-01 :arg1 ( come-01 :arg1 police :arg4 ( house :poss police ) ) ) ) ) )
language :domain ( language :mod karelian ) :mod still :arg1-of ( mean-01 :arg2 ( image :poss ( mouth :part-of ( person :arg0-of ( have-org-role-91 :arg1 ( city-district_name_1 :location sea_name_1 ) :arg2 capital ) ) ) ) )
and :op1 ( features :domain ( language :mod karelian ) :mod still ) :op2 ( image :source location_name_0 :location ( throughout :op1 location_name_0 ) )
show-01 :arg0 this :arg1 ( majority :poss ( person :arg0-of vote-01 :arg1-of ( include-91 :arg2 ( person :arg0-of vote-01 :mod republican ) :arg3 majority ) ) :purpose ( campaign-01 :arg0 person :arg1 ( campaign :mod credible ) ) ) :prep-in ( case :mod any )
show-01 :arg0 this :arg1 ( majority :domain ( majority :poss ( person :arg0-of ( vote-01 :arg1 ( campaign-01 :arg0 person_name_0 ) ) ) ) :arg3 ( campaign-01 :arg0 person ) ) :prep-in ( case :mod any )
and :op2 ( include-91 :arg1 he :arg2 num_0 :time ( season :mod last :mod ( season :quant num_1 :mod league :mod only :part-of ( game :quant num_1 :mod only ) ) ) )
and :op1 ( run-01 :arg0 continent_name_0 :arg1 ( crisis :mod refugee :arg1-of ( bad-07 :degree most ) ) :time ( since :op1 ( war :mod world :ord ( ordinal-entity ordinal-entity_num_0 ) ) ) ) :op2 ( reason :arg0-of ( cause-01 :arg1 ( war :mod civil :duration ( temporal-quantity temporal-quantity_num_1 :unit year ) ) :arg0-of ( drive-02 :arg1 ( person :quant ( more-than :op1 num_1 ) ) :arg2 ( home :poss country ) :time ( year :mod this ) ) :mod main ) )
view-02 :arg1 ( person :arg0-of ( house-01 :arg1 university ) :mod university ) :arg2 ( view-02 :arg1 ( person :arg0-of ( house-01 :arg1 university ) ) :condition ( unlock :arg1 door ) )
trip-03 :arg0 one :arg1 ( monetary-quantity monetary-quantity_num_0 :unit euro :mod ( approximately :op1 ( monetary-quantity monetary-quantity_num_1 :unit euro ) ) )
event :mod this :time ( raise-01 :arg0 ( bank :mod central :mod country_name_0 ) :arg1 ( rate :mod interest ) )
multi-sentence :snt1 ( amr-unknown :arg1-of ( include-91 :arg2 ( '' :arg1-of miss-01 :location country ) ) :quant ( less-than :op1 ( temporal-quantity temporal-quantity_num_0 :unit year ) ) ) :snt2 ( make-01 :arg0 ( person :mod country_name_0 ) :arg1 ( apply-01 :mod malicious :quant ( num_1 :mod alone ) ) :location country )
say-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg2 authority ) ) :arg1 ( have-03 :polarity - :mode imperative :arg0 you :arg1 ( or :op1 ( information :mod any ) :op2 ( thing :arg0-of ( evidence-01 :arg1 ( drama :mod ( kind :mod any ) ) ) ) ) :arg1-of ( cause-01 :arg0 ( allege-01 :arg1 ( relate-01 :arg1 lamb :arg2 ( schmidtiin :arg1 lamb ) ) ) :concession ( allege-01 :arg1 ( relate-01 :arg1 lamb :arg2 ( schmidtiin :arg1 lamb ) ) ) ) )
claim-01 :arg0 person_name_0 :arg1 ( and :op1 ( vakojaan :arg0 ( person :arg0-of ( have-org-role-91 :arg1 country_name_1 :arg2 official ) ) :arg1 ( talleihinsa :arg0 person ) :time ( year :mod last ) ) :op2 ( threaten-01 :arg0 person :arg1 ( stop-01 :arg0 person :arg1 compete-02 :time immediate ) ) )
sit-01 :arg1 ( person_name_0 :arg0-of ( have-org-role-91 :arg2 ( person :arg0-of ( manage-01 :arg1 produce-01 ) ) ) ) :arg2 ( and :op1 ( report-01 :arg0 person :arg1 ( thing :arg2-of ( list-01 :arg1 criminal-organization_name_3 ) ) ) :op2 ( thing :arg0-of ( cause-01 :arg1 ( get-01 :arg0 person_name_3 :arg1 ( money :quant more ) ) ) ) :op3 ( get-01 :arg0 person :arg1 ( money :quant more ) ) :concession ( contestant :ord ( ordinal-entity ordinal-entity_num_0 ) :arg0-of ( manage-02 :arg1 ( pass-01 :arg0 person :arg1 track ) ) ) )
say-01 :arg0 person_name_0 :arg1 ( content-01 :arg1 he :arg2 ( represent-01 :arg0 he :arg1 ( league :arg0-of ( care-03 :arg1 ( generation :time future ) :mod also ) :arg0-of ( let-01 :polarity - :arg1 ( go-01 :arg1 ( person :quant num_0 :arg1-of ( include-91 :arg2 ( person :arg0-of athletes ) ) ) :mod alone ) ) ) ) )
say-01 :arg0 ( person :arg0-of vote-01 :arg1-of register-02 :quant ( multiple :op1 num_0 ) ) :arg1 ( like-01 :polarity - :arg0 person :arg1 person_name_0 :manner ( and :op1 honest :op2 trustworthy ) )
and :op1 ( recession-02 :arg1 recession-02 ) :op2 ( reality :mod depress )
inspire-01 :arg0 ( songs :mod new ) :arg1 ( life :mod new )
inspire-01 :arg0 ( situation :mod new ) :arg1 ( songs :mod new )
do-02 :arg0 ( popularity :poss ( figure :poss organization_name_0 ) ) :arg1 u-turn
write-01 :arg0 person_name_0 :arg1 ( movie :mod rocky ) :arg1-of ( cause-01 :arg0 ( play-11 :arg0 person :arg2 ( part :mod main ) ) ) :li num_0
and :op1 ( break-01 :arg1 he :time immediate :time ( begin-01 :arg1 top ) ) :op2 ( defend-01 :arg0 he :arg1 ( case-03 :arg1 ( manage-01 :arg1 manic ) ) :time run-13 )
say-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg1 ( republican :quant num_0 ) ) ) :arg1 ( agree-01 :arg0 organization_name_0 :arg1 immigrate-01 )
say-01 :arg0 person_name_0 :arg1 ( message-01 :arg0 person :arg1 ( ask-02 :arg0 message :arg1 ( see-01 :arg0 message :arg1 ( account :mod instagram ) ) ) )
tell-01 :arg0 person_name_0 :arg1 ( receive-01 :arg0 it :arg1 ( message :arg0-of ( watch-01 :arg1 ( account :quant num_0 :mod instagram ) ) ) ) :arg2 we
attack-01 :arg0 ( police :mod country_name_0 ) :arg1 ( hundreds :arg1 refugee :arg2 ( gas :arg1-of tear ) )
start-01 :arg1 ( campaign-01 :mod grass-roots )
have-03 :arg0 ( book :mod new ) :arg1 ( attend-02 :arg1 ( book :mod new ) :location country_name_1 ) :time ( time :name ( name :op1 olympics :op2 olympics :op3 olympics ) )
strike-01 :arg1 ( metal :quant num_0 ) :mod ( important :degree most ) :arg1-of ( strike-01 :arg2 ( and :op1 ( plant :mod power ) :op2 ( plant :mod power ) ) :location ( and :op1 ( plant :quant num_1 ) :op2 ( plant :mod power ) ) )
guarantee-01 :arg1 ( guarantee-01 :arg1 ( and :op1 ( surrender-01 :arg0 he :arg1 ( passport :poss he ) ) :op2 ( apply-01 :arg0 he :arg2 ( and :op1 country_name_0 :op2 country_name_1 ) :frequency ( rate-entity-91 :arg3 ( temporal-quantity temporal-quantity_num_0 :unit day ) ) ) :op3 ( keep-01 :arg0 he :arg1 ( and :op1 iltakuuden :op2 aamukuuden ) ) ) ) :arg2 ( condition :topic ( and :op1 ( surrender-01 :arg0 he :arg1 ( passport :poss he ) ) :op2 ( apply-01 :arg0 he :arg2 police :frequency ( rate-entity-91 :arg3 ( temporal-quantity temporal-quantity_num_0 :unit day ) ) ) ) )
have-03 :arg0 ( person :mod foreign ) :arg1 ( and :op1 person_name_0 :op2 person_name_1 ) :mod also
and :op1 ( difficult :degree quite :domain it ) :op2 ( possible-01 :arg1 ( puikkia :arg1 it :arg2 ( and :op1 ( lÃ¤htÃ¶auton :arg1 lÃ¤htÃ¶hetkellÃ¤ ) :op2 ( kind :poss they ) ) ) )
contrast-01 :arg1 ( lead-01 :arg0 person_name_0 :arg1 woman :arg1-of strong-02 ) :arg2 ( reduce-01 :arg1 ( leadership :poss he ) )
likened :arg0 person_name_0 :arg1 ( fumble :poss person ) :arg2 ( origin-debut :quant num_0 ) :time ( result-01 :arg1 ( ball :mod goal :poss person ) :arg2 ( goal :mod goal :arg1-of ( result-01 :arg2 peninsula_name_1 ) ) )
contrast-01 :arg1 ( publish :arg0 we :arg1 ( name :poss you ) :arg1-of ( cause-01 :arg0 ( do-02 :arg0 we :arg1 it ) ) ) :arg2 ( publish :polarity - :arg0 we :arg1 ( address :poss you :mod email ) :time ever :condition ( deny-01 :arg0 we :arg1 it ) )
multi-sentence :snt1 ( lamented :arg0 he :arg1 ( fact :topic ( make-01 :arg0 ( and :op1 council :op2 ( person :mod country_name_0 ) :op3 ( person :mod country_name_1 ) ) :arg1 situation ) ) ) :snt2 ( possible-01 :polarity - :arg1 ( solve-01 :arg1 situation ) )
multi-sentence :snt1 ( regretted :arg0 he :arg1 ( and :op1 council :op2 ( person :mod country_name_0 ) :op3 ( division :mod ( division :mod region ) ) ) ) :snt2 ( possible-01 :polarity - :arg1 ( resolve-01 :arg1 situation ) )
tell-01 :arg0 ( organization_name_0 :location state_name_1 ) :arg1 ( tell-01 :arg0 ( person_name_3 :arg0-of ( have-org-role-91 :arg1 organization :arg2 ( scientist :mod organization_name_2 ) ) ) :arg1 ( possible-01 :arg1 ( replace-01 :arg0 ( and :op1 country :op2 country ) :arg1 country :duration ( day :mod one ) ) ) :arg2 ( measure-02 :mod invasiivinen :arg1-of ( cause-01 :arg0 ( electric :domain ( brain :mod human ) :purpose ( treat-03 :arg1 ( disease :poss parkinson ) ) ) ) ) )
give-01 :polarity - :arg0 past :arg1 ( help-01 :mod little ) :time past :time ( come-12 :arg1 economy )
help-01 :polarity - :arg0 past :mod little :time past :time ( come-12 :arg1 economy ) :mod particular
say-01 :arg0 he :arg1 ( possible-01 :arg1 ( leave-15 :arg0 that :arg1 ( opportunity :quant some :arg1-of ( include-91 :arg2 opportunity ) ) ) ) :mod also
come-01 :arg1 ( element :mod certain :poss ( movement-07 :arg0 political-party_name_0 ) ) :mod still
and :op1 ( cost-01 :arg1 ( monetary-quantity monetary-quantity_num_0 :unit euro ) :arg2 ( around :op1 ( monetary-quantity monetary-quantity_num_0 :unit euro ) ) ) :op2 ( problem :poss customer :domain ( problem :poss customer ) :condition ( run-out-05 :arg1 customer :arg2 money ) )
say-01 :arg0 person_name_0 :arg1 ( and :op1 ( educate-01 :mod adult :location school ) :op2 ( part :part-of ( study-01 :mod vocational ) :domain some ) )
contrast-01 :arg2 ( hope-01 :arg0 country_name_0 :arg1 ( hope-01 :arg0 country :arg1 ( work-09 :arg1 ( or :op1 ( neighbor-01 :arg1 it ) :op2 ( work-01 :arg0 city_name_1 ) ) :time ( future :arg1-of near-02 ) ) ) )
have-concession-91 :arg1 ( hope-01 :polarity - :mode imperative :arg0 you :arg1 ( act-01 :arg0 ( or :op1 congress :op2 city_name_1 ) :time ( future :arg1-of near-02 ) ) )
talk-01 :arg0 they :arg1 ( firm :mod old )
star
sadden :arg0 it :arg1 i :mod really
and :op2 ( make-01 :arg0 ( and :op1 organization_name_0 :op2 ( person_name_1 :arg0-of ( have-org-role-91 :arg1 organization :arg3 exemplify-01 ) ) :op3 ( person :arg0-of ( have-org-role-91 :arg1 organization :arg3 exemplify-01 ) ) :op4 ( person :arg0-of ( have-org-role-91 :arg1 organization :arg3 exemplify-01 ) ) :op5 ( person :arg0-of ( have-org-role-91 :arg1 city :arg2 yankees-caps ) ) :op6 ( person :arg0-of ( have-org-role-91 :arg1 city :arg2 yankees-caps ) ) :op6 ( person :arg0-of ( have-org-role-91 :arg1 city :arg2 yankees-caps ) ) :op7 ( person :arg0-of ( have-org-role-91 :arg1 organization :arg3 exemplify-01 ) ) ) :arg1 language_name_0 :location street ) :mod also
and :op1 ( possible-01 :arg1 ( and :op1 epÃ¤hierarkkinen :op2 emotional :op3 ( image :arg1-of personal-02 ) :domain ( image :arg1-of ( personal-02 :arg2 person_name_0 ) ) ) :arg1-of ( cause-01 :arg0 ( want-01 :arg0 ( and :op1 ( image :mod emotional ) :op2 emotional :op3 ( image :arg1-of personal-02 ) ) :arg1 ( and :op1 epÃ¤hierarkkinen :op2 emotional :op3 ( image :arg1-of personal-02 ) ) :mod even ) ) :op2 ( important :domain ( discipline :mod communicate-01 ) :mod especially :location ( forefronts :arg1 ( media :mod society ) :arg2 ( and :op1 vainoharhoille :op2 defraud-01 ) ) :mod especially ) )
take-01 :arg0 person_name_0 :arg1 this :arg1-of hard-02 :arg1-of ( cause-01 :arg0 ( and :op1 ( intend-01 :polarity - :arg1 ( hurt-01 :arg0 person :arg1 opponent ) ) :op2 ( bad-07 :arg1 injure-01 :degree really ) :time ( hear-01 :arg0 person :arg1 ( bad-07 :arg1 injure-01 :degree really ) ) ) :arg1-of ( say-01 :arg0 person_name_1 ) )
multi-sentence :snt1 ( worth :domain ( ensure-01 :arg1 ( be-located-at-91 :arg1 you :arg2 ( list :poss we :topic ( thing :quant all :arg1-of need-01 :arg0-of ( need-01 :arg1 ( do-02 :arg1 thing :time ( before :op1 downloading ) ) ) ) ) ) ) :mod also ) :snt2 ( infer-01 :arg1 ( bring-01 :arg0 ( person :quant num_0 ) :arg1 ( properties :mod new :example ( and :op1 ( person :arg0-of assist-01 :arg1-of personal-02 ) :op2 ( person :arg0-of ( assist-01 :arg2 ipad ) ) ) ) :arg2 ( properties :mod new :example ( and :op1 ( person :arg0-of assist-01 :arg1-of personal-02 ) :op2 ( amount :mod huge :quant-of productive-03 ) ) ) :op3 ( improve-01 :arg1 ( and :op1 ( speed :arg1 ( system :arg0-of operate-01 ) ) :op2 ( fix-02 :arg1 ( system :arg0-of operate-01 ) ) ) ) ) )
contrast-01 :arg2 ( question-01 :arg1 ( place :arg1-of ( include-91 :arg2 ( place :mod decimal ) :arg3 ( few :mod just ) ) ) )
contrast-01 :arg2 ( thing :arg1-of question-01 :arg1-of question-01 :arg1-of question-01 :mod only :domain ( thing :arg1-of question-01 :arg1-of question-01 ) )
and :op1 ( include-91 :arg1 he :arg2 ( thing :arg1-of ( include-91 :arg2 ( thing :arg1-of experience-01 ) :arg3 most ) ) ) :op2 ( bring-up-02 :arg0 he :arg1 ( amount :mod huge :quant-of experience-01 ) ) :arg1-of ( cause-01 :arg0 ( and :op1 ( do-02 :arg1 everything :prep-in ( situation :quant all ) ) :op2 ( oppose-01 :arg1 everything :mod ( kind :quant all ) ) ) )
say-01 :arg0 ( person_name_0 :arg0-of ( have-org-role-91 :arg1 ( person :arg0-of ( have-org-role-91 :arg2 ( minister :mod foreign ) ) ) :arg2 ( minister :mod foreign ) ) ) :arg1 ( intend-01 :arg0 country :arg1 ( erected :arg0 country :arg1 ( part :part-of ( border-01 :arg1 country :arg2 country_name_1 ) ) :arg2 ( border-01 :arg1 country :arg2 country ) :purpose ( halt-01 :arg0 country :arg1 ( flood :poss ( person :arg0-of ( use-01 :arg1 drug ) ) ) ) ) :mod also :time ( ready-02 :arg1 ( fence :location ( border-01 :arg2 country ) ) ) :time now )
support-01 :polarity - :arg0 ( percentage-entity percentage-entity_num_0 ) :arg1 he :degree at-all
say-01 :arg0 ( person_name_0 :arg1-of ( call-01 :arg2 ( call-02 :mod emergency ) ) ) :arg1 ( contrast-01 :arg1 ( kill-01 :arg0 he :arg1 ( person :arg0-of ( have-rel-role-91 :arg1 he :arg2 wife ) ) ) :arg2 ( shred :polarity - :domain ( marry-01 :arg1 they ) ) )
and :op1 ( conquered :arg0 organization_name_0 :arg1 ( heart :part-of ( person :arg0-of ( buy-01 :arg1 ( class :mod middle :mod middle ) ) ) ) ) :op2 ( drive-01 :arg0 organization :manner ( good :degree more ) :arg1-of ( cause-01 :arg0 ( and :op1 ( melutasolla :arg1-of ( low-04 :degree more ) ) :op2 ( varustelulla :arg1-of ( low-04 :degree more ) ) ) ) )
number :arg1-of ( include-91 :arg2 ( person :arg0-of view-01 ) ) :arg0-of ( have-org-role-91 :arg1 ( company :arg0-of ( have-org-role-91 :arg1 organization_name_0 ) ) :arg2 director ) :arg0-of ( have-org-role-91 :arg1 organization :arg2 director ) :arg0-of ( have-org-role-91 :arg1 organization :arg2 director ) :arg0-of ( have-org-role-91 :arg1 organization :arg2 director ) :arg0-of ( have-org-role-91 :arg1 organization :arg2 director ) :arg0-of ( have-org-role-91 :arg1 organization :arg2 director ) :arg0-of ( have-org-role-91 :arg1 organization :arg2 director )
multi-sentence :snt1 ( tell-01 :arg0 ( person_name_0 :arg0-of ( have-rel-role-91 :arg1 person :arg2 husband ) ) :arg1 ( person_name_1 :arg0-of ( have-rel-role-91 :arg1 i :arg2 husband ) ) :arg2 they :time ( before :op1 now :quant ( temporal-quantity temporal-quantity_num_0 :unit year ) ) ) :snt2 ( have-03 :arg0 they :arg1 ( person :arg0-of ( have-rel-role-91 :arg1 person :arg2 daughter ) ) :time now )
watered :arg0 ( government-organization :arg0-of ( govern-01 :arg1 city ) ) :arg1 ( thing :arg2-of ( name-01 :arg1 ( thing :arg2-of ( name-01 :arg1 street ) :mod street ) ) :mod ( radical :degree more ) ) :location ( thing :arg2-of ( name-01 :arg1 ( street :location downtown ) ) ) :direction down
possible-01 :arg1 ( and :op1 black-04 :op2 white :op3 nickel :domain location_name_0 )
stand-01 :arg1 ( rest :part-of world ) :time ( date-entity year_date-entity_0 ) :time ( meet-03 :arg0 ( bank :mod central :part-of ( bank :mod central ) ) :arg1 ( and :op1 ( temporal-quantity temporal-quantity_num_0 :unit day ) :op2 ( temporal-quantity temporal-quantity_num_1 :unit day ) ) :purpose ( make-01 :arg0 bank :arg1 ( decide-01 :arg0 bank :arg1 ( raise-01 :arg0 bank :arg1 ( rate :mod interest ) :arg2 ( ordinal-entity ordinal-entity_num_0 ) :time ( after :op1 now :quant ( nearly :op1 ( temporal-quantity temporal-quantity_num_1 :unit decade ) ) ) ) :arg1-of critical-02 ) ) )
watch-01 :arg0 ( rest :part-of world ) :arg1 ( rest :part-of world ) :time ( and :op1 ( meet-03 :arg0 government-organization_name_0 :arg1 ( and :op1 wednesday :op2 thursday ) :duration ( multiple :op1 ( temporal-quantity temporal-quantity_num_0 :unit day ) ) :purpose ( decide-01 :arg0 government-organization :arg1 ( raise-01 :arg0 government-organization :arg1 ( rate :mod interest ) ) ) ) :op2 ( decide-01 :arg0 government-organization :time ( after :op1 now :quant ( nearly :op1 ( temporal-quantity temporal-quantity_num_1 :unit decade ) ) ) ) )
multi-sentence :snt1 ( have-03 :arg0 ( company :arg0-of ( have-03 :arg1 ( return-01 :arg1 company :arg4 ( and :op1 ( stock :mod capital ) :op2 ( stock :mod low-volatility ) ) :arg1-of high-02 ) ) :arg1-of high-02 ) :arg1 ( good :degree more :compared-to ( company :mod lower-quality ) ) ) :snt2 ( and :op1 ( point :mod ( percentage-entity percentage-entity_num_0 ) :domain average-01 ) :op2 ( point :mod ( point :quant num_1 :mod ( percentage-entity percentage-entity_num_1 ) ) ) )
contrast-01 :arg1 ( adopt-01 :arg0 ( board :poss ( person :arg0-of ( have-org-role-91 :arg2 ( governor :mod vice ) ) ) ) :arg1 ( person :arg0-of ( have-org-role-91 :arg2 doctor ) ) :mod unanimous ) :arg2 ( great :degree great :domain ( expand-01 :arg1 event_name_1 ) )
possible-01 :arg1 ( name :mod hospital :domain ( thing :arg1-of gift-01 :poss he ) ) :beneficiary ( area :arg0-of lobby-01 ) :arg1-of possible-01
continue-01 :arg1 lesson :medium wednesday
have-03 :arg0 ( traffic :mod air ) :arg1 ( figure :poss traffic )
contrast-01 :arg1 ( advocate-01 :arg0 ( league :mod football :mod italian :arg0-of ( have-03 :arg1 ( level :name ( name :op1 kompuroinut ) ) ) ) :arg1 ( level :name ( name :op1 kompuroinut ) :mod football ) ) :arg2 ( advocate-01 :arg0 organization_name_0 :arg1 ( start-01 :arg0 organization :arg1 ( renovate-01 :arg0 organization :arg1 peninsula_name_1 ) ) :arg1-of strong-02 )
hope-01 :arg0 i :arg1 ( and :op1 ( sure-02 :arg0 i :arg1 that ) :op2 ( possible-01 :arg1 ( make-01 :arg0 he :arg1 career :compared-to ( deserve-01 :arg0 he ) ) ) )
cause-01 :arg1 ( possible-01 :arg1 ( equate-01 :arg1 ( recession-02 :mod next ) :arg2 ( peak-01 :arg1 ( and :op1 ( fall :ord ( ordinal-entity ordinal-entity_num_0 ) ) :op2 ( rate :mod ( market :mod finance ) ) ) :time ( before :op1 then ) ) ) )
contrast-01 :arg1 ( character :polarity - :arg1-of ( include-91 :arg2 ( character :mod ( character :polarity - ) ) ) :domain ( character :quant none ) :prep-in ( work-01 :arg0 they ) ) :arg2 ( stood :arg1 ( personalities :poss they ) :arg2 ( personalities :arg0 they :arg1 ( person :arg0-of ( have-rel-role-91 :arg1 they :arg2 friend ) ) :arg1-of clear-06 ) )
have-concession-91 :arg1 ( and :op1 ( yksikielinen :arg1 ( language :name ( name :op1 karelian ) :mod karelian ) :time ( live-01 :arg0 netizen ) ) :op2 ( change-01 :arg1 language :manner dramatic :location location_name_0 ) ) :arg2 ( yksikielinen :arg1 estuary :manner official )
have-concession-91 :arg1 ( and :op1 ( recommend-01 :arg1 ( take-01 :arg0 ( person :quant num_0 :arg1-of ( include-91 :arg2 ( person :arg1-of ( liberal-02 :mod bilingual ) ) ) ) :arg1 space :time now ) ) :op2 ( recommend-01 :arg1 ( take-01 :arg0 person :arg1 space :time ( and :op1 ( live-01 :arg0 person ) :op2 ( change-01 :arg1 person :manner drastic :mod even :location peninsula_name_1 ) ) ) ) ) :arg2 ( person :quant num_0 :arg1-of ( include-91 :arg2 ( person :arg1-of ( liberal-02 :mod bilingual ) ) :mod also ) )
say-01 :arg0 person_name_0 :arg1 ( think-01 :polarity - :arg0 person :arg1 ( bad-07 :arg1 this :beneficiary he ) )
absence :domain ( absence :poss ( person_name_0 :arg0-of ( have-org-role-91 :arg2 dull ) ) )
and :op1 ( upset-01 :arg0 he :degree very ) :op2 ( person_name_0 :arg0-of ( have-rel-role-91 :arg1 he :arg2 daughter ) ) :op3 ( person :arg0-of ( have-rel-role-91 :arg1 he :arg2 daughter ) ) :op4 ( person :arg0-of ( have-rel-role-91 :arg1 he :arg2 daughter ) )
say-01 :arg0 person_name_0 :arg1 ( contrast-01 :arg1 ( decide-01 :mod conscious :domain this ) :arg2 ( issue-02 :mod important :location here :domain this ) )
contrast-01 :arg1 ( idea :domain ball ) :arg2 ( idea :topic ( open-01 :arg0 person_name_0 :arg1 ( open-01 :arg1 typing :path person_name_1 ) :time ( get-03 :arg1 field :arg2 ( syÃ¶ttÃ¤jÃ¤ :degree extra ) ) ) )
believe-01 :arg0 person_name_0 :arg1 ( worth :domain ( look-01 :arg1 it ) ) :mod still
contrast-01 :arg2 ( support-01 :arg0 study :arg1 ( view-02 :arg1 ( korkmanin :arg0 person_name_0 ) ) )
have-concession-91 :arg2 ( believe-01 :arg0 person_name_0 :arg1 ( recommend-01 :arg1 ( familiarize-01 :arg1 you :arg2 ( name :op1 korkman ) ) ) )
bring-01 :arg1 future :time ( before :op1 now :quant ( temporal-quantity temporal-quantity_num_0 :unit year ) )
honoured :arg1 ( ceremony :mod commemoration :time yesterday ) :arg2 ( person :arg0-of ( have-org-role-91 :arg1 military_name_0 :arg2 ( person :arg0-of pilot-01 ) ) ) :time ( battle-01 :arg0 person :arg1 organization_name_1 :location ( thing :quant num_0 ) )
respect-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg1 ( service :mod mold ) :arg2 ( person :arg0-of pilot-01 ) ) ) :arg1 ( person :arg0-of ( have-org-role-91 :arg1 ( force :mod air :poss country_name_0 ) :arg2 ( person :arg0-of pilot-01 ) ) ) :location ( against :op1 ( person :quant num_0 ) )
go-02 :arg0 i :arg4 ( tank :quant all )
contact-01 :arg0 i :arg1 i :path product_name_0
contrast-01 :arg1 ( do-02 :arg0 couple :arg1 ( much :degree too ) :time past ) :arg2 ( play-02 :arg0 ( person_name_0 :ord ( ordinal-entity ordinal-entity_num_0 ) :arg0-of ( have-org-role-91 :arg1 person_name_1 ) ) :arg1 person :time now )
predict-01 :arg0 police
sound-01 :arg1 lÃ©veillÃ© :arg2 ( carts :arg1 alleyway :degree so :compared-to true :mod too )
optimat :mod new :time ( before :op1 ( end-01 :arg1 year :beneficiary ( country :poss we ) ) )
say-01 :arg0 report-01
and :op1 ( know-02 :arg0 ( organization_name_0 :arg1-of ( know-02 :arg2 ( name :op1 invincible :op2 caviarin :op3 caviarin ) ) :mod ( good :degree most ) :arg1-of ( train-01 :arg2 ( name :op1 caviarin :op2 caviarin ) ) ) :arg1 ( manage-01 :arg1 ( rule :topic ( rule :name ( name :op1 '' ) ) ) ) :time ( after :op1 ( or :op1 mud :op2 ( haude :mod clay ) ) :arg1-of ( contrary-01 :arg2 rule ) ) )
say-01 :polarity - :arg0 person_name_0 :arg1 ( likely-01 :arg1 ( exceed-01 :arg0 ( power :mod purchase-01 ) :arg1 ( monetary-quantity :arg2-of cost-01 :arg1-of ( high-02 :degree more ) ) ) )
and :op1 ( way :quant num_0 ) :op2 ( business :arg1-of succeed-01 )
multi-sentence :snt1 ( point-out-02 :arg0 ( state :location ( city_name_0 :arg0-of ( have-org-role-91 :arg1 ( organization_name_1 :part-of ( government-organization :arg0-of ( govern-01 :arg1 country_name_2 ) ) :arg2 ( president :mod vice ) ) ) ) ) :arg1 ( month :mod this ) ) :snt2 ( pointed :arg0 ( bank :mod central ) :arg1 ( unrest :mod ( market :mod finance ) :arg0-of ( contribute-01 :arg2 ( separate-02 :arg1 bank :arg2 ( factor :mod ( economy :mod basic ) ) ) ) :time past ) )
contrast-01 :arg1 ( nothing :mod nettiÃ¤ :mod of-course ) :arg2 ( declare-02 :arg0 ( suicide :mod politics ) :arg1 ( man :mod small ) :arg1-of open-04 )
include-91 :arg1 ( series :quant num_0 :arg1-of ( come-01 :arg4 mind :time ( try-01 :arg0 i :arg1 ( offer-01 :arg0 i :arg1 ( survive-01 :arg0 i ) ) ) ) ) :arg2 friend
multi-sentence :snt1 ( contrast-01 :arg2 ( and :op1 ( sit-01 :polarity - :arg1 he :arg2 there :manner way :duration ( temporal-quantity temporal-quantity_num_0 :unit hour ) ) :op2 ( sit-01 :arg1 he :arg2 there :duration ( temporal-quantity temporal-quantity_num_1 :unit hour ) ) ) ) :snt2 ( say-01 :arg0 ( person_name_0 :arg0-of exhibit-01 ) :arg1 ( bloknotille :mod pisarevski ) )
threaten-01 :arg0 tehy :arg1 ( and :op1 ( resignations :degree mass ) :op2 ( nurse :location ( thing :quant num_0 ) ) )
amr-unknown :topic amr-unknown
confirm-01 :arg0 government-organization_name_0 :arg1 ( visit-01 :arg0 government-organization :arg1 city_name_1 )
and :op1 ( debate-01 :mod good :domain ( hold-01 :arg1 ( stand :poss child ) ) ) :op2 ( listen-01 :arg1 ( thing :arg1-of ( ask-01 :arg0 he ) ) :manner careful )
and :op1 ( question-01 :arg1 ( and :op1 ( person :arg0-of ( have-org-role-91 :arg2 ( minister :mod prime ) ) ) :op2 ( person :arg0-of ( have-org-role-91 :arg2 ( minister :mod prime ) ) ) :op3 ( person :arg0-of ( have-org-role-91 :arg2 ( minister :mod prime ) ) ) :op4 ( person :arg0-of ( have-org-role-91 :arg2 ( minister :mod prime ) ) ) :op5 ( person :arg0-of ( have-org-role-91 :arg2 ( minister :mod prime ) ) ) :op6 ( person :arg0-of ( have-org-role-91 :arg2 ( minister :mod prime ) ) ) :op6 ( person :arg0-of ( have-org-role-91 :arg2 ( minister :mod prime ) ) ) :op6 ( person :arg0-of ( have-org-role-91 :arg2 ( member :mod other ) ) ) :op6 ( person :arg0-of ( have-org-role-91 :arg2 ( member :mod other ) ) ) :op7 ( person :arg0-of ( have-org-role-91 :arg2 ( member :mod other ) ) ) ) ) :op2 ( have-concession-91 :arg1 ( criticize-01 :arg0 critic :arg1 ( survey-01 :arg1 ( temporal-quantity temporal-quantity_num_1 :unit hour ) :arg1-of ( require-01 :arg0 reform-01 ) ) ) :arg2 ( criticize-01 :arg0 critic :arg1 survey-01 ) )
and :op1 ( actor :arg0 ( picture :mod motion ) :arg1 ( -rrb- :mod right ) ) :op2 ( tough-02 :arg1 ( -rrb- :mod right ) :time ( before :op1 now :duration ( few :op1 ( temporal-quantity temporal-quantity_num_0 :unit year ) ) ) ) :medium ( picture-01 :arg1 motion )
have-03 :arg0 ( person :mod country_name_0 ) :arg1 ( area :mod parking :poss person ) :arg1-of ( cause-01 :arg0 ( share-01 :arg0 person :arg1 ( and :op1 shop :op2 restaurant :mod other ) ) )
friendship :mod ( meet-03 :mod this ) :domain friendship
contrast-01 :arg2 ( say-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg2 ( person :arg1-of expert-01 ) ) ) :arg1 ( signal-07 :arg0 ( sell-01 :arg1 tasoittumisesta ) :arg1 ( rise-01 :arg1 ( percentage-entity percentage-entity_num_0 :mod only ) :location ( vuosineljÃ¤nnekselle :ord ( ordinal-entity ordinal-entity_num_1 ) ) :location ( vuosineljÃ¤nnekselle :ord ( ordinal-entity ordinal-entity_num_1 ) ) ) ) :time now )
day :mod race :domain it
prosecute-01 :arg0 ( person :quant num_0 :mod other :arg0-of ( have-org-role-91 :arg1 customs :arg2 member ) :arg2-of ( include-91 :arg1 ( person :arg0-of ( have-org-role-91 :arg1 customs :arg2 member ) ) ) :arg2-of ( include-91 :arg1 ( person :arg0-of ( have-org-role-91 :arg1 customs :arg2 member ) ) ) :arg2-of ( include-91 :arg1 ( person :arg0-of ( have-org-role-91 :arg1 customs :arg2 member ) ) ) :arg0-of ( have-org-role-91 :arg1 customs :arg2 member ) ) :arg1 ( and :op1 ( simputtamisesta :mod violent ) :op2 ( intrigues :arg2-of criminal-03 ) ) :mod also
understand-01 :polarity - :arg0 i :arg1 ( idea :topic ( and :op1 ( produce-01 :arg0 company_name_0 :arg1 ( programmes :arg1-of ( produce-01 :arg0 company :arg1-of ( possible-01 :polarity - ) ) ) ) :op2 ( say-01 :arg0 person_name_1 :arg1 ( have-org-role-91 :arg0 person :arg1 organization_name_2 :arg2 ( investigate-01 :arg1 ( investigate-01 :arg0 company :arg1 ( future :poss company ) ) ) ) ) ) )
mean-01 :arg1 ( mean-01 :arg2 ( and :op1 book :op2 ( life :arg1-of black-04 ) ) ) :mod still
send-01 :arg1 message :arg2 we
possible-01 :arg1 ( influence-01 :arg0 you :arg1 ( person :arg0-of play-01 ) ) :degree amr-unknown
contrast-01 :arg1 ( regard-01 :arg0 ( rule :arg1-of general-02 ) :arg1 person_name_0 :arg2 ( rule :arg1-of general-02 ) ) :arg2 ( opine-01 :polarity - :arg0 person :arg1 ( opine-01 :arg0 person :arg1 ( thing :arg1-of ( opine-01 :arg0 she ) ) :mod just ) )
include-91 :li num_0 :arg1 ( statistic :name ( name :op1 tigersissÃ¤ :op2 norriksen ) ) :arg2 ( statistic :quant num_1 ) :time ( after :op1 ( replace-01 :arg0 person_name_0 :arg1 person :time ( date-entity month_date-entity_0 day_date-entity_0 ) ) )
say-01 :arg0 he :arg1 ( and :op1 ( do-02 :arg0 you :arg1 ( job :poss i ) :mod just ) :op2 ( help-01 :arg0 he :arg1 person ) ) :medium book
possible-01 :arg1 ( stand-01 :arg1 ( majority :poss ( person :arg1-of ( include-91 :arg2 ( person :arg0-of ( have-org-role-91 :arg1 ( organization_name_1 :part-of organization_name_1 ) :arg3 majority ) ) :arg3 majority ) ) ) :arg2 ( and :op1 ( paint :mod war-01 ) :op2 ( enthusiasm :poss political-party_name_2 :location ( outside :op1 ( nationalist :mod fierce ) ) ) ) :manner certain :arg1-of ( opine-01 :arg0 ( thing :arg1-of opine-01 :mod this ) ) ) :mod well
and :op1 ( available-02 :arg2 ( video :topic ( and :op1 demand-01 :op2 dvd ) ) ) :op2 ( and :op1 dvd :op2 dvd :op3 ( cinemas :location company_name_1 ) )
need-01 :polarity - :arg1 ( take-on-09 :arg1 ( force-01 :arg1 publication_name_1 :arg2 ( members :arg1 language_name_0 :arg2 ( person :arg0-of ( have-org-role-91 :arg1 team :arg2 member ) ) ) ) )
question-01 :arg0 person_name_0
keep-04 :arg1 ( and :op1 person_name_0 :op2 person_name_1 :op3 ( person :arg0-of ( lead-02 :arg1-of strong-02 ) ) :op4 ( person :arg0-of lead-02 :arg1-of strong-02 ) ) :arg2 most
possible-01 :arg1 ( order-01 :arg1 ( food :arg1-of ( order-02 :arg0 ( person :mod country_name_0 :arg0-of ( have-rel-role-91 :arg1 ( person :mod country_name_2 ) :arg2 wife ) ) :arg2 wife ) ) :arg2 ( and :op1 bikini :op2 ( wear-01 :arg1 apron ) :mod just ) )
have-03 :arg0 person_name_0 :arg1 ( bulk :arg0 person :arg1 ( make-01 :arg0 person :arg1 person_name_1 ) )
work-01 :arg0 person_name_0 :arg1 ( work-01 :arg0 ( organization_name_1 :arg1-of ( include-91 :arg2 ( person :arg0-of represent-01 ) ) :arg0-of ( go-02 :arg4 ( pick-01 :arg0 person :arg1 ( and :op1 film :op2 ( material :mod other ) ) :source ( and :op1 film :op2 ( material :mod other ) ) ) ) ) ) :time summer
man :arg1-of ( include-91 :arg2 ( person :arg2-of staff-01 ) :arg3 majority ) :time today
fear-01 :polarity - :mod fear-01 :concession ( even-if :op1 ( tight :arg1 time ) )
romantic :mode interrogative :polarity - :arg1 it :condition ( change-01 :arg0 ( person :arg0-of ( have-rel-role-91 :arg2 comrade :time future ) ) :arg1 ( dormitory :arg1-of same-01 ) :arg2 you )
depart-01 :arg0 ( team :arg0-of produce-01 :mod whole ) :arg2 person_name_0 :time now
and :op1 ( see-01 :arg0 i :arg1 they :manner together ) :op2 ( chemistry :domain they )
be-located-at-91 :arg1 ( person_name_0 :mod country_name_1 ) :arg2 ( or :op1 reelect-01 :op2 replace-01 ) :location ( in-front-of :op1 num_0 )
and :op1 ( tough-02 :arg1 try-02 :degree more :compared-to ( time :mod any ) ) :op2 ( rugged :arg1 try-02 :degree more :compared-to ( time :mod any :time ( since :op1 ( depression :quant num_0 ) ) ) ) :arg1-of resemble-01
recommend-01 :arg1 ( or :op1 ( expected :arg0 ( person :arg0-of use-01 ) :arg1 ( ohimeno :arg1-of ( bad-07 :degree most ) ) ) :op2 ( try-01 :arg0 person :arg1 ( update-01 :arg0 person :arg1 person ) ) :mod either ) :purpose ( bypass :arg0 person :arg1 this )
say-01 :arg0 police :arg1 ( call-03 :arg0 ( thing :arg1-of ( call-03 :arg0 lamb :arg2 ( person :arg0-of ( have-rel-role-91 :arg1 lamb :arg2 relative ) ) ) ) :arg1 ( go-02 :polarity - :arg0 person :arg4 jail ) :arg2 person )
begin-01 :arg1 ( organization_name_0 :arg0-of ( have-org-role-91 :arg1 organization_name_1 :arg2 capital ) ) :time ( session :mod autumn :poss ( organization_name_1 :location-of ( give-01 :arg0 person_name_2 :arg1 ( comment-01 :arg1-of extensive-03 ) :arg2 ( meet-03 :location city_name_3 ) ) ) )
expect-01 :arg0 coach :arg1 ( make-18 :arg0 ( compete-01 :mod decent ) :arg1 award_name_1 )
or :op2 ( want-01 :mode interrogative :arg0 you :arg1 ( find-out-03 :arg0 you :arg1 ( thing :arg1-of ( talk-01 :arg0 they ) ) ) )
attack-01 :arg0 city_name_0 :arg1 ( person_name_1 :arg0-of ( rival-01 :arg1 country ) )
and :op1 ( reduce-01 :arg0 they :arg1 ( sense-01 :arg0 they :arg1 ( hunger-01 :arg0 they ) ) ) :op2 ( limit-01 :arg0 they :arg1 ( wave-04 :arg1 food ) )
support-01 :arg0 ( jury :mod grand :location location_name_0 )
advise-01 :arg0 police :arg1 police :arg2 ( avoid-01 :arg0 police :arg1 ( car :arg1-of private-03 :location ( city_name_0 :location downtown ) ) )
message-01 :arg0 city_name_0 :arg1 ( decide-01 :arg0 ( board :poss ( person :arg0-of ( have-org-role-91 :arg2 governor ) ) ) :arg1 ( make-01 :arg0 board :arg1 ( building :mod school ) :arg2 ( solve-01 :arg0 board :arg1 ( thing :arg2-of ( solve-01 :arg1 department ) ) :duration temporary ) ) :time already ) :medium news
possible-01 :arg1 ( use-01 :arg1 ( and :op1 text :op2 kuviasi ) :arg2 company_name_0 ) :prep-in ( case :quant some )
infer-01 :arg1 ( seem-01 :arg1 ( immigrate-01 :arg0 person_name_0 :mod ( too :mode expressive ) ) )
attack-01 :arg0 ( person :arg0-of study-01 :mod ulkomaalais ) :location ( saturday :location ( location_name_0 :time morning ) )
start-01 :arg0 i :arg1 ( and :op1 ( inventoimaan :arg1 i ) :op2 ( see-01 :arg0 i :arg1 ( location :location-of ( drop-05 :arg1 good ) ) ) )
tell-01 :arg0 he :arg1 ( and :op1 ( throw-01 :arg0 he :arg1 ( overboard :mod passenger :quant all ) ) :op2 ( order-02 :arg0 he :arg1 ( swim-01 :arg0 he :arg2 ( island :mod military_name_0 ) ) ) :time ( spotted :arg0 police :arg1 he :time once ) ) :arg2 paper
estimate-01 :arg0 location_name_0 :arg1 ( capable-01 :polarity - :arg1 ( person :arg0-of ( have-org-role-91 :arg1 ( criminal-organization_name_0 :mod business ) :arg2 -lrb- ) ) :arg2 ( talk-01 :arg0 person ) )
suggest-01 :arg0 person_name_0 :arg1 ( mistake-02 :arg0 ( person :arg0-of ( have-org-role-91 :arg1 country_name_1 :arg2 official ) ) )
change-01 :arg0 ( nematodes :mod tiny ) :arg1 direction :time ( as-soon-as :op1 ( hits :arg0 it :arg1 ( impulses :arg1-of ( high-02 :degree too :location ( ear :mod human ) ) ) ) )
contrast-01 :arg2 ( favor-01 :arg0 ( person :arg0-of ( favor-01 :arg1 person_name_0 ) ) :arg1 ( say-01 :arg0 person :arg1 ( favor-01 :arg0 person :arg1 ( book :poss person ) ) ) )
say-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg1 organization_name_0 :arg2 chairman ) ) :arg1 ( want-01 :arg0 ( person_name_1 :arg0-of ( have-org-role-91 :arg1 organization :arg2 chairman ) ) :arg1 ( see-01 :arg0 no-one :arg1 ( situation :location-of ( increase-01 :arg1 ( rate :mod interest ) ) ) ) ) :arg1-of ( say-01 :arg0 ( person_name_1 :arg0-of ( have-org-role-91 :arg1 organization :arg2 chairman ) ) )
and :op1 ( shave-01 :arg0 person_name_0 :arg2 ( face :part-of person ) :time previous ) :op2 ( dyed :arg0 person :arg1 ( hair :part-of person :arg1-of black-05 ) ) :time previous
contrast-01 :arg1 ( ambitious :domain we ) :arg2 ( haaveksi :polarity - :arg0 we )
effect :arg1-of ( see-01 :arg1-of ( quick-02 :degree pretty ) ) :location forthcoming
talk-01 :arg0 person_name_0 :arg1 ( rugby :mod exciting )
show-01 :arg0 ( research-01 :mod new ) :arg1 ( receive-01 :arg0 ( and :op1 ( person :arg0-of ( benefit-01 :arg1 ( thing :arg1-of ( lose-02 :arg0 person ) ) ) ) :op2 ( person :arg0-of ( have-03 :arg1 ( surgery-01 :arg1 person ) ) ) ) :arg1 ( surgery-01 :arg1 person :arg2 ( lose-02 :arg1 weight ) ) :time ( after :op1 now :quant ( at-least :op1 ( temporal-quantity temporal-quantity_num_0 :unit year ) ) ) )
possible-01 :arg1 ( mean-01 :arg1 this :arg2 hell ) :arg2 ( someone :arg0-of ( try-01 :arg1 ( relax :arg0 someone ) ) )
likely-01 :arg1 ( make-02 :arg0 ( blobs :arg3-of ( mix-01 :arg3-of ( mix-01 :arg3-of mix-01 ) ) ) :arg1 ( pretend-01 :arg0 person :arg1 ( pregnant :domain person :time ( knock :arg0 you :arg1 ( door :poss i ) ) ) :mod just ) )
and :op1 ( and :op1 ( jumped :arg1 ( and :op1 traders :op2 recruiters ) ) :op2 ( brand :example ( person :arg0-of ( borough :arg1 ( future :poss ( person :arg0-of ( manufacture-01 :arg1 ice ) :arg0-of ( manufacture-01 :arg1 building_name_0 ) ) ) ) ) ) ) :op2 ( sell-01 :arg0 ( person :arg0-of ( own-01 :arg1 shop ) ) :arg1 ( and :op1 ( person :arg0-of ( own-01 :arg1 shop ) ) :op2 ( person :arg0-of ( own-01 :arg1 shop ) ) ) :arg2 ( customer :mod loyalty :mod country_name_0 ) )
say-01 :arg0 ( person_name_0 :arg0-of ( have-org-role-91 :arg1 ( organization_name_1 :mod conservative ) :arg2 mp ) ) :arg1 ( compete-01 :arg0 ( and :op1 ( person :arg0-of ( have-org-role-91 :arg1 organization :arg2 mp ) ) :op2 ( person :arg0-of ( have-org-role-91 :arg1 organization :arg2 mp ) ) :op3 ( person :arg0-of ( have-org-role-91 :arg1 company_name_2 :arg2 mp ) ) :op4 ( person :arg0-of ( have-org-role-91 :arg1 organization :arg2 mp ) ) :op5 ( person :arg0-of ( have-org-role-91 :arg1 organization :arg2 mp ) ) ) :arg1 ( monetary-quantity monetary-quantity_num_0 :unit pound ) )
think-01 :arg0 ( boy :arg1-of ( arrest-01 :location ( school :location state_name_0 ) ) )
contrast-01 :arg2 ( and :op1 ( equalise :arg1 it :time now ) :op2 ( possible-01 :arg1 ( calculated :arg1 ( -rrb- :mod grow-01 ) ) ) )
report-01 :arg0 person_name_0
multi-sentence :snt1 ( side :mod ( person :arg0-of consume-01 ) ) :snt2 ( be-located-at-91 :li num_0 :arg2 ( temporal-quantity temporal-quantity_num_0 :unit year ) )
call-03 :arg0 he :arg1 ( thing :arg1-of tax-01 :mod such ) :mod really :mod all
say-01 :arg0 person_name_0 :arg1 ( contrast-01 :arg1 ( determine-01 :arg0 interim :arg1 ( message :poss person_name_1 :topic ( and :op1 country_name_2 :op2 country_name_3 :op3 country_name_4 ) ) ) :arg2 ( nothing :mod nothing ) )
catch-up-04 :arg1 we :arg2 tv :time ( date-entity season_date-entity_0 ) :arg1-of ( cause-01 :arg0 ( write-01 :arg0 ( person_name_0 :arg0-of ( have-org-role-91 :arg2 senator ) ) :arg1 ( stick :poss person ) ) ) :time ( date-entity season_date-entity_0 )
write-01 :arg0 i :arg1 ( person_name_0 :arg0-of ( have-org-role-91 :arg2 bloggari ) ) :time ( date-entity season_date-entity_0 ) :location ( around :op1 television ) :time ( date-entity season_date-entity_0 ) :frequency ( rate-entity-91 :arg3 ( temporal-quantity temporal-quantity_num_0 :unit day ) )
recommend-01 :arg1 ( make-02 :polarity - :arg0 you :arg1 ( or :op1 ( sleep-01 :arg0 person ) :op2 ( study-01 :polarity - :arg0 person ) ) )
contrast-01
cause-01 :arg0 ( blairilaisempi :arg0 person_name_0 :arg1 person :time ( come-12 :arg1 ( combat-01 :arg0 person :arg1 ( person_name_2 :mod uudelleenneuvottelutempun ) ) ) ) :arg1 ( agree-01 :arg0 person_name_3 :arg1 ( principle :mod organization_name_4 :arg1-of ( reject-01 :arg0 ( and :op1 ( person :mod country ) :op2 ( person :arg0-of ( vote-01 :arg1 dutch ) ) ) :arg2 ( out-06 :arg1 person :arg2 situation ) ) ) ) :mod in-fact
come-01 :arg1 ( man :mod 50-year-old ) :direction forward :destination ( person_name_0 :arg0-of ( have-org-role-91 :arg1 police :arg2 self ) ) :direction forward
sell-01 :arg0 company :arg1 ( share :quant ( monetary-quantity monetary-quantity_num_0 :unit ( mark :mod renminbi ) ) ) :arg1-of ( mean-01 :arg2 ( reduce-01 :arg0 company :arg1 ( reduce-01 :arg1 ( thing :arg2-of ( price-01 :arg1 ( close-01 :arg1 tuesday ) ) ) :arg3 ( percentage-entity percentage-entity_num_1 ) ) ) )
multi-sentence :snt1 ( cause-01 :arg0 ( have-03 :arg0 ( person :mod country_name_0 ) :arg1 ( right-05 :arg1 person :arg2 ( game :mod home ) :destination ( or :op1 ( location_name_0 :location north ) :op2 ( city-district_name_3 :location north ) ) ) :time already ) ) :snt2 ( sell-01 :arg1 ( ticket :mod final :mod final ) :time ( morning :mod next ) :time ( morning :mod next ) )
know-01 :polarity - :arg0 he :arg1 ( thing :manner-of ( look-01 :arg0 ( military :mod serious ) :arg1 ( way :mod alternative :instrument-of ( announce-01 :arg0 ( government-organization :arg0-of govern-01 ) :arg1 ( blackmail :mod industry ) ) ) ) ) :mod also
give-01 :polarity - :arg0 press :arg1 ( he :arg0-of ( forgive :arg1 i :time ( ever :polarity - ) ) ) :arg2 he
say-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg2 ( minister :mod prime ) ) ) :arg1 ( speak-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg2 ( minister :mod prime ) ) ) :arg1-of direct-02 :time ( multiple :op1 ( temporal-quantity temporal-quantity_num_0 :unit decade ) ) )
say-01 :arg0 ( person_name_0 :mod ( state_name_0 :mod social ) ) :arg1 ( teach-01 :arg0 person :arg1 ( help-01 :arg0 person :degree more ) :arg2 person )
have-concession-91 :arg1 ( improve-01 :arg1 game :arg1-of ( cause-01 :arg0 ( need-01 :arg1 ( against :op1 ( place :arg2-of ( include-91 :arg1 ( and :op1 organization_name_1 :op2 equality ) :arg1-of strong-02 ) ) ) ) :mod also ) ) :arg2 ( improve-01 :arg1 game :location ( final :mod ( good :degree most ) :location ( round :ord ( ordinal-entity ordinal-entity_num_0 ) ) ) :mod also )
multi-sentence :snt1 ( down-to-earth :domain person_name_0 :degree really ) :snt2 ( nice-01 :arg1 ( have-03 :arg0 person_name_1 :arg1 ( thing :arg1-of ( add-01 :arg0 person ) ) ) )
last-01 :arg1 ( score-01 :arg2 ( over :op1 ( temporal-quantity temporal-quantity_num_0 :unit minute ) ) ) :arg2 ( temporal-quantity temporal-quantity_num_1 :unit minute :mod just ) :time ( before :op1 ( end-01 :arg1 ( track :poss organization_name_0 ) ) )
set-up-03 :arg1 ( person :mod province_name_1 ) :location ( province_name_1 :location city ) :purpose ( :instrument :arg0 person :arg1 ( building :mod ( comprehensive :degree more ) ) )
carry-out-03 :arg1 lamb :manner ( educate-01 :mod science :location spring )
ask-02 :arg0 ( person :arg0-of ( have-org-role-91 :arg1 organization_name_0 ) ) :arg1 ( leave-11 :arg0 person :arg1 organization :arg1-of sick-05 ) :arg2 ( say-01 :arg0 person :arg1 ( have-03 :arg0 person :arg1 ( problem :topic health :mod ( kind :mod some ) ) ) ) :time previous
believe-01 :arg0 i :arg1 ( wrong-04 :arg1 ( execute-01 :arg1 he ) )
or :op2 ( tell-01 :mode interrogative :arg0 it :arg2 at-all )
off :arg1 ( person_name_0 :quant ( between :op1 num_0 :op2 num_1 ) ) :time ( place-01 :arg1 race :arg2 race )
parkettivalmistaja :domain kÃ¤hrs :condition ( finnish :arg1 ( location_name_0 :mod finnish ) :arg2 ( upofloorin :quant num_0 ) )
and :op1 ( come-01 :arg1 he :arg4 ( form :mod top ) ) :op2 ( run-02 :arg0 he :ord ( ordinal-entity ordinal-entity_num_0 :range ( time :mod good ) ) )
contrast-01 :arg2 ( sight :arg1 ( problem :quant some ) )
multi-sentence :snt1 ( contrast-01 :arg1 ( true :domain this :mod all ) :arg2 ( describe-01 :arg0 ( song :mod next :arg1-of ( describe-01 :arg0 person_name_0 :arg1-of suppose-01 ) ) :arg1 ( version :mod ( version :quant num_0 ) ) :arg2 ( text :quant num_0 :mod film :mod original ) :arg1-of ( instead-of-91 :arg2 ( add-02 :arg1 ( text :mod original :mod original ) :arg2 ( character :mod new ) ) ) ) ) :snt2 ( and :op1 ( character :mod new ) :op2 detail-01 )
contrast-01 :arg1 ( or :op1 coincidence :op2 ( not :polarity - ) ) :arg2 ( take-01 :mode imperative :arg0 you :arg1 ( momentum :mod palolan :mod away :source ( seisauttajilta :name ( name :op1 finnish :op2 seisauttajilta :op3 sd :op4 sd :op5 -rrb- :op6 -rrb- :op7 -rrb- ) ) ) )
drop-01 :arg1 ( profit-01 :arg0 country_name_0 ) :time ( year :mod finance )
and :op1 ( profit-01 :arg0 ( person :arg0-of ( operate-01 :location world-region_name_0 ) :arg0-of operate-01 ) :mod operate-01 ) :op2 ( calculates :arg0 person )
multi-sentence :snt1 ( contrast-01 :arg1 ( '' :arg0 ( and :op1 maoists :op2 trotskilaiset :op3 ( libertarian :mod other ) ) :arg1 ( capitalism :quant all ) ) :arg2 ( more :mod even :prep-to ( other :mod each ) ) ) :snt2 ( '' :mode expressive )
thing :arg0-of ( design-01 :arg1 interior ) :mod this
be-located-at-91 :arg1 he :arg2 ( and :op1 ( church :poss organization_name_0 ) :op2 ( capital :location country_name_1 ) :op3 ( capital :location-of ( help-01 :arg0 ( center :mod small ) :arg1 ( refugee :mod ( child :arg0-of ( have-rel-role-91 :arg1 refugee :arg2 child ) ) ) ) ) ) :mod real
possible-01 :arg1 ( find-01 :arg1 ( part :part-of ( person :arg1-of miss-01 ) ) :mod also :time ( date :mod ( late :degree more ) ) :time ( apply-01 :arg0 person :arg1 ( favor-01 :arg0 person :arg1 ( state :mod another :arg0-of ( have-org-role-91 :arg2 member ) ) ) ) ) :arg1-of resemble-01
blowing :arg1 ( winds :arg1-of change-01 ) :time ( morning :mod this ) :mod ( just :polarity - )
and :op1 ( back :prep-to ( public :mod general-02 ) :time ( before :op1 ( lavoille :arg0 public ) ) ) :op2 ( exciting :polarity - :arg1 ( break :arg1-of long-03 ) :arg2 i :mod really )
punish-01 :polarity - :arg0 person_name_0 :arg1 ( person :arg0-of play-01 :mod country )
explain-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg1 continent_name_0 :arg2 ( friend :mod diplomat ) ) ) :arg1 ( explain-01 :arg0 ( state :quant some :arg0-of ( fault-01 :polarity - :arg1 state :arg2 ( agenda :mod self-centered :poss country_name_1 ) ) :arg0-of ( full :degree full :domain ( and :op1 ( cause :arg0-of ( cause-01 :arg1 ( cause :arg0-of cause-01 ) ) ) :op2 ( change-01 :arg1 ( contract-02 :arg0 military_name_1 ) ) ) ) ) :arg2 ( part :mod ( part :degree most ) :arg1-of ( want-01 :polarity - :arg0 country ) ) ) :time ( since :op1 ( deep-02 :arg1 organization :degree so ) ) :time recent
comment-01 :arg0 ( person_name_0 :arg0-of ( have-org-role-91 :arg2 ( president-in-office :mod central ) ) ) :arg3 ( issue-02 :arg0 ( concise :arg1 product_name_1 ) )
want-01 :arg0 i :arg1 ( have-part-91 :arg1 ( season :mod season ) :arg2 ( season :mod season ) ) :arg0-of ( cause-01 :arg1 ( possible-01 :arg1 ( ad :arg0 he :arg1 ( sponsor-01 :arg0 he ) ) ) )
say-01 :arg0 person_name_0 :arg1 ( raise-01 :arg0 it :arg1 ( government-organization :arg0-of govern-01 ) :location ( in-front-of :op1 ( hand :part-of they ) ) :condition ( do-02 :polarity - :arg0 it :arg1 so ) )
say-01 :arg0 person_name_0 :arg1 ( raise-01 :arg0 it :arg1 ( front :poss you ) :condition ( do-02 :polarity - :arg0 it :arg1 so ) )
support-01 :arg0 country_name_0 :arg1 organization_name_1 :time ( period :mod war ) :mod official
service :mod public
say-01 :arg0 person_name_0 :arg1 ( serious :quant none )
and :op1 ( discuss-01 :arg1 ( board :arg1-of ( connect-01 :arg2 directors ) ) ) :op2 ( have-org-role-91 :arg0 he :arg2 member :time ( time :mod all ) )
possible-01 :arg1 ( scrap-01 :arg1 it :time ( night :mod last ) )
say-01 :arg0 ( and :op1 person_name_0 :op2 person_name_1 :op3 person_name_1 :op4 ( fan :polarity - ) ) :arg1 ( idea :arg1-of bad-07 :domain ( and :op1 ( person :arg0-of ( have-org-role-91 :arg2 ( minister :mod radio ) ) ) :op2 ( person :arg0-of ( have-org-role-91 :arg2 ( minister :mod finance ) ) ) :op3 ( person :arg0-of ( have-org-role-91 :arg2 ( minister :mod finance ) ) ) :op4 ( person :arg0-of ( have-org-role-91 :arg2 ( minister :mod finance ) ) ) :op5 ( person :arg0-of ( have-org-role-91 :arg2 ( minister :mod finance ) ) ) ) :time ( week :mod this ) )
contrast-01 :arg2 ( and :op1 ( take-01 :arg0 ( group :example ( and :op1 ( pac :mod super :poss person_name_0 ) :op2 ( organization :mod economy :mod political-party_name_1 ) ) ) :arg1 ( note :mod organization_name_2 ) ) :op2 ( start-01 :arg0 group :arg1 ( use-01 :arg0 group :arg1 money :arg2 ( decide-01 :arg0 organization :arg1 use-01 ) ) ) )
problem :polarity - :topic this :domain ( and :op1 ( team :consist-of ( guy :mod person_name_0 ) :source location_name_1 ) :op2 ( person_name_2 :arg0-of ( have-org-role-91 :arg1 guy :arg3 ( lead-02 :arg0 guy :arg1 guy ) ) ) :op3 ( rest :part-of guy ) :op4 rest )
say-01 :arg0 ( list-01 :arg1 organization_name_0 ) :arg1 ( sell-01 :arg0 organization_name_1 :arg1 ( share :mod new :mod ( approximately :op1 ( monetary-quantity monetary-quantity_num_0 :unit ( dollar :mod country ) ) ) ) :arg2 ( debt :poss organization ) ) :medium ( franchise :arg1-of ( list-01 :arg2 organization ) )
say-01 :arg0 ( person_name_0 :arg0-of ( have-org-role-91 :arg1 police ) ) :arg1 ( have-03 :arg0 lamb :arg1 ( or :op1 ( past :mod violent ) :op2 ( record :mod criminal-03 ) ) )
contrast-01 :arg2 ( enough :polarity - :domain ( prevent-01 :arg1 ( appear-01 :polarity - :arg1 he :location court ) ) ) :arg1-of ( warn-01 :arg0 he )
cause-01 :arg0 ( possible-01 :arg1 ( and :op1 ( concentrated :arg1 ( person :arg0-of ( care-03 :duration day ) ) :location ( home :mod certain ) ) :op2 ( nursery :polarity - :arg1 ( activity-06 :arg0 person ) :arg2 ( activity-06 :arg0 person ) ) ) ) :arg1 ( protest-01 :arg0 ( union :mod trade-01 ) )
contrast-01 :arg1 ( exist-01 :polarity - :arg1 ( statistic :mod ( grade :mod minor ) :arg1-of miss-01 ) :time ( year :mod this ) ) :arg2 ( obligate-01 :arg1 ( and :op1 ( number :quant-of ( person :arg0-of serve-02 ) ) :op2 ( number :quant-of ( person :arg0-of serve-02 ) ) ) :arg2 significant-02 :arg1-of ( cause-01 :arg0 ( likely-01 :arg1 ( affect-01 :arg1 ( number :quant-of ( person :arg1-of miss-01 ) ) :mod also :arg1-of ( say-01 :arg0 he ) :arg1-of significant-02 :mod also ) ) ) )
meet-03 :arg0 lamb :arg1 ( and :op1 person_name_0 :op2 person_name_1 ) :time ( before :op1 now :quant ( temporal-quantity temporal-quantity_num_0 :unit year ) )
publish-01 :arg0 ( magazine_name_0 :arg1-of ( publish-01 :arg0 ( book :medium tuesday ) ) ) :arg1 excerpts
report-01 :arg0 ( center :mod ( control-01 :arg1 self ) :location ( across :op1 country_name_0 ) ) :arg1 ( increase-01 :arg1 ( contrast-01 :arg1 ( increase-01 :arg1 ( contrast-01 :arg1 ( increase-01 :arg1 ( hand :part-of ( person :arg0-of ( have-rel-role-91 :arg2 child ) ) ) ) :arg2 ( person :arg0-of ( have-rel-role-91 :arg1 person :arg2 child ) ) :time ( after :op1 now :quant ( temporal-quantity temporal-quantity_num_0 :unit year ) ) :time ( after :op1 ( age-01 :arg1 person :arg2 ( temporal-quantity temporal-quantity_num_1 :unit year ) ) ) ) :arg2 ( person :arg0-of ( have-rel-role-91 :arg1 country_name_1 :arg2 child ) ) ) ) )
show-01 :arg0 survey-01 :arg1 ( get-01 :arg0 person_name_2 :arg1 ( support-01 :arg1 person :quant majority ) :arg3 ( case :quant ( all :mod almost ) ) ) :time ( begin-01 :arg1 ( date-entity dayperiod_date-entity_0 ) )
stop-01 :arg0 ( country :mod whole ) :arg1 ( and :op1 ( role :quant num_0 :mod small ) :op2 ( route :quant number ) )
realize-01 :arg0 you :arg1 ( and :op1 ( be-located-at-91 :arg1 ( thing :quant lot ) :arg2 lot ) :op2 ( want-01 :arg0 you :arg1 ( spend-02 :arg0 you :arg1 ( time :poss you ) ) ) )
and :op2 ( cause-01 :arg1 ( believe-01 :arg0 i :arg1 ( die-01 :arg1 he ) ) )
equal-01 :arg1 ( index :mod ( monetary-quantity :arg2-of ( price-01 :arg1 ( thing :arg2-of price-01 ) ) ) ) :arg2 ( product-of :op1 num_0 :op2 ( percentage-entity percentage-entity_num_0 ) ) :location country_name_0
person :arg0-of play-01 :mod canadiens :time ( before :op1 ( help-01 :arg0 person :arg1 significant-02 :arg2 ( hospital :arg1-of local-02 ) ) )
find-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg1 organization_name_0 ) ) :arg1 ( program :quant number :arg1-of ( use-01 :arg0 ( and :op1 ( call-02 :arg0 organization_name_1 ) :op2 ( call-02 :arg0 organization ) :op3 ( health :arg0 newspaper ) :op4 health :op5 health :op6 health :op7 health ) ) ) :arg2 mind
and :op1 ( criticize-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg2 ( president :mod vice ) ) ) :arg1 criticize-01 ) :op2 ( speculate-01 :arg0 person :arg1 ( thing :arg1-of come-01 ) )
multi-sentence :snt1 ( wonderful-03 :arg1 this ) :snt2 ( comment-01 :arg0 person_name_0 :arg3 good )
change-01 :arg1 ( time :mod this ) :time ( time :mod this )
thing :arg1-of ( dream-01 :arg0 ( organization_name_0 :part-of ( website :location estate :mod real ) ) ) :domain house :arg1-of ( dream-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg1 ( website :mod estate :mod real ) :arg3 ( apprentice-01 :arg0 person ) ) ) ) :arg0-of ( suffice-01 :arg1 ( car :quant num_0 :arg2-of ( include-91 :arg1 ( car :quant num_1 :arg1-of suffice-01 ) ) ) )
call-02 :arg0 ( report-01 :arg0 organization_name_0 ) :arg1 ( recommend-01 :arg1 ( investigate-01 :arg1 ( thing :arg1-of ( report-01 :arg0 organization ) ) :manner proper :time ( month :mod last ) :location ( force :arg1-of arm-01 ) :mod especially ) )
manner :arg1 ( person_name_0 :arg0-of ( have-org-role-91 :arg1 ( person_name_1 :arg0-of ( have-org-role-91 :arg1 organization :arg2 chairman ) ) :arg2 chairman ) ) :arg2 ( manner :mod conciliatory ) :manner conciliatory
shame-01 :arg1 ( and :op1 ( individual :arg1-of strong-02 :time ( season :mod last ) ) :op2 ( individual :arg0-of ( remembered :arg1 he :time ( before :op1 ( start-01 :arg1 season ) ) ) ) ) :mod ( big :degree most ) :mod ( big :degree most ) :domain ( season :mod this ) :arg1-of strong-02 :time ( season :mod last :mod this )
change-01 :arg0 person_name_0 :arg1 ( style :mod ( url-entity :value tuntemattominta ) )
and :op1 ( begin-01 :arg0 ( and :op1 ( person :arg0-of ( have-org-role-91 :arg1 organization_name_0 :arg2 ( head :mod vice ) ) ) :op2 ( head :arg1-of sharp-02 :mod other ) ) :arg1 ( force-01 :arg0 and :arg2 ( away :arg1-of straight-04 ) ) ) :op2 ( stand-01 :arg1 country :arg2 friday :arg1-of ( cause-01 :arg0 ( person :arg0-of work-01 :arg1-of broad-02 :arg0-of work-01 ) ) )
and :op1 ( head-02 :arg0 ( person :quant num_0 :mod nation :arg1-of ( include-91 :arg2 ( person :quant num_1 :mod nation ) ) ) :arg1 person_name_0 :time ( date-entity century_date-entity_0 ) ) :op2 ( begin-01 :arg0 some :arg1 ( think-01 :arg0 some :arg1 ( mean-01 :arg1 this :arg2 ( possible-01 :arg1 ( thing :arg2-of ( name-01 :arg1 ( property :poss king ) ) ) ) ) :manner serious ) )
possible-01 :arg1 ( test-01 :arg0 ( skill :poss he :mod country_name_0 ) :arg1 ( candidate :quant ( more-than :op1 num_0 ) ) )
probable :domain ( think-01 :polarity - :arg0 they :arg1 ( game :mod important ) ) :time ( before :op1 now :quant ( temporal-quantity temporal-quantity_num_0 :unit week ) )
expect-01 :arg1 ( discuss-01 :arg0 ( and :op1 person_name_0 :op2 person_name_1 ) :arg1 ( issue-02 :quant number :mod controversy :arg2-of ( include-01 :arg1 ( concern-01 :arg0 ( spy-01 :arg0 ( and :op1 ( spy-01 :arg0 country_name_3 :mod cyber :arg1-of allege-01 ) :op2 ( rigour :location ( water :arg2-of dispute-01 ) ) ) ) ) ) ) )
and :op1 ( pass-01 :arg0 ( start-01 :arg1 recession-02 ) :arg1 ( rate :mod ( interest :mod rapid ) :poss recession-02 ) :duration ( time :ord ( ordinal-entity ordinal-entity_num_0 ) ) ) :op2 ( last-01 :arg1 rate :arg2 ( less-than :op1 ( temporal-quantity :quant 1/2 :unit year ) ) )
have-concession-91 :arg1 ( possible-01 :arg1 ( do-02 :arg1 ( turmoil :time recent :location ( market :mod finance :mod globe ) ) :arg2 ( guard-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg1 ( bank :mod central :part-of bank ) :arg2 official ) ) :arg1 ( person :arg0-of ( have-org-role-91 :arg1 ( bank :mod central :part-of bank ) :arg2 official ) ) :degree more :time already ) :manner ( regard-01 :arg1 ( increase-01 :arg1 volatility ) :arg2 ( increase-01 :arg1 ( increase-01 :arg1 ( rate :arg1-of ( fund-01 :arg0 federal ) ) :arg3 ( percentage-entity percentage-entity_num_0 :mod even ) ) ) ) ) ) :arg2 ( show-01 :arg0 data :arg1 ( grow-01 :arg1 economy :manner steady ) )
multi-sentence :snt1 ( contrast-01 :arg1 ( effective-04 :arg0 he :degree ( more :degree much ) ) :arg2 ( effective-04 :arg0 ( and :op1 ( refer-01 :arg0 they :arg1 ( colleagues :arg0 they ) ) :op2 ( kierrepotkun :arg0 person_name_0 :arg1 person_name_1 :time ( around :op1 ( temporal-quantity temporal-quantity_num_0 :unit minute ) ) ) :mod just ) ) ) :snt1 ( contrast-01 :arg2 ( effective-04 :arg0 he :degree ( more :degree much ) ) )
choose-01 :arg0 person_name_0 :arg1 ( lead-02 :arg0 person :arg1 ( line :mod labour ) )
ask-02 :arg0 ( police :mod country_name_0 ) :arg1 ( help-01 :arg0 ( refugee :arg1-of register-02 :mod country ) :arg2 ( truck :location background ) )
show-01 :arg0 study :arg1 ( decrease-01 :arg1 ( bmi :arg1 person :arg1-of average-04 ) :arg2 ( product-of :op1 num_0 :op2 ( end-01 :arg1 ( year :ord ( ordinal-entity ordinal-entity_num_1 ) ) ) ) )
have-concession-91 :arg1 ( clear-06 :polarity - :arg1 ( clear-06 :arg1 ( contribute-01 :mode interrogative :arg0 try-02 :arg2 ( transact-01 :mod short ) :degree very ) ) )
and :op1 ( sell-01 :arg0 ( mikkonen :name ( name :op1 nlna ) :mod nlna ) :arg1 internet ) :op2 ( look-01 :mode imperative :arg0 you :arg1 ( picture :topic device ) ) :op3 ( look-01 :mode imperative :arg0 you :arg1 ( picture :topic device ) )
and :op1 ( relate-01 :polarity - :arg1 ( issue-02 :mod this ) ) :op2 ( relate-01 :polarity - :arg1 issue-02 :arg2 ( issue-02 :mod this ) ) :prep-in ( debate-01 :mod democracy )
and :op1 ( debate-01 :arg1 democracy ) :op2 ( hope-01 :arg0 i :arg1 ( relate-01 :polarity - :arg1 ( thing :mod this ) ) )
contrast-01 :arg1 ( begin-01 :arg0 ( recession-02 :mod next ) :arg1 it :manner rapid ) :arg2 ( begin-01 :arg0 ( recession-02 :mod next ) :arg1 ( rate :mod interest ) :time ( after :op1 ( raise-01 :arg0 ( and :op1 ( bank :mod central :poss country ) :op2 government-organization_name_1 ) :arg1 ( rate :mod interest ) :time ( time :ord ( ordinal-entity ordinal-entity_num_0 ) :arg1-of long-03 ) ) ) )
multi-sentence :snt1 ( and :op1 ( sequel :arg0 film :arg1 ( sequel :mod sky :mod iron ) ) :op2 ( reach-01 :arg0 film :arg1 ( race :arg1-of come-01 ) ) ) :snt2 ( reach-01 :arg0 ( film :mod ( expensive :degree most ) :mod country_name_0 ) :arg1 ( monetary-quantity monetary-quantity_num_0 :unit euro ) :location country )
say-01 :arg0 he :arg1 ( and :op1 ( get-03 :arg1 it :arg2 ( sick-05 :arg1 it ) ) :op2 ( want-01 :arg0 he :arg1 ( look-01 :arg0 he :arg1 ( picture :topic ( and :op1 rape-01 :op2 murder-01 ) ) ) ) :time ( after :op1 ( drink-01 :arg0 he :arg1 it ) ) )
and :op1 ( have-03 :arg0 i :arg1 ( support-01 :arg1 ( family :arg1-of ( have-org-role-91 :arg0 i :arg2 member ) ) ) ) :op2 ( possible-01 :arg1 ( turn-01 :arg0 i :arg1 i :direction back :prep-on this ) )
change-01 :arg1 ( service :mod rail :mod passenger :location ( between :op1 eagle ) ) :time ( date-entity month_date-entity_0 )
say-01 :arg0 rule :arg1 ( go-01 :arg1 money :arg4 person )
intend-01 :arg0 ( person_name_0 :arg0-of ( have-org-role-91 :arg2 hp ) ) :arg1 ( relocate :arg0 person :arg1 ( operation :poss person ) :manner ( way :mod such ) :arg1-of ( cause-01 :arg0 ( cost-01 :arg1 ( person :quant num_0 :arg1-of ( include-91 :arg2 ( person :arg0-of work-01 ) ) ) :arg2 low-04 ) ) )
and :op1 ( raise-01 :arg0 organization_name_0 :arg1 ( rate :mod interest ) ) :op2 ( raised :arg0 ( burst :mod finance ) :arg1 ( piece :mod finance :mod ( large :degree ( more :mod even ) ) ) :time soon )
charmer :domain he :time time
say-01 :arg0 person_name_0 :arg1 ( approach-02 :arg0 he :arg1 organization_name_1 :time already )
threaten-01 :arg0 political-party_name_0 :arg1 ( and :op1 ( security :mod nation ) :op2 ( security :mod economy ) :op3 ( security :poss ( family :arg1-of ( have-org-role-91 :arg0 we :arg2 member ) ) ) ) :arg2 ( person :arg0-of ( have-org-role-91 :arg1 ( bank :poss we ) :arg2 ( minister :mod prime ) ) )
come-01 :arg1 person_name_0 :time ( moment :mod right )
correct-02 :arg1 assumption
challenge-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg1 political-party_name_0 :arg2 chairman ) ) :arg1 ( person_name_1 :arg0-of ( have-org-role-91 :arg1 political-party :arg2 chairman ) ) :arg2 ( elect-01 :arg1-of ( include-91 :arg2 elect-01 :arg3 ( temporal-quantity :quant 1/2 :unit year ) ) )
agree-01 :arg0 ( person_name_0 :arg0-of ( have-org-role-91 :arg1 ( government-organization :arg0-of govern-01 ) :arg2 -rsb- ) ) :arg1 ( stand-01 :arg1 person :arg2 ( stand :poss person :location ( country :location friday ) ) ) :degree very :mod ( difficult :degree very )
and :op1 ( begin-01 :arg0 person_name_0 :arg1 ( reading :arg1 person ) ) :op2 ( pass-01 :arg0 person :arg1 ( juoksuttoman :ord ( ordinal-entity ordinal-entity_num_0 ) ) ) :time ( after :op1 ( replace-01 :arg0 ( person_name_1 :arg0-of ( have-org-role-91 :arg2 successor ) ) :arg1 person ) )
cool-04 :arg1 i :time then :arg1-of ( cause-01 :arg0 ( cool-04 :arg1 i ) )
contrast-01 :arg1 ( lose-02 :arg0 ( and :op1 organization_name_0 :op2 person_name_1 ) :arg1 ( share :mod market ) :arg2 ( and :op1 organization :op2 ( person_name_1 :location ( east :part-of country ) ) :mod market ) ) :arg2 ( find-02 :arg0 ( research-01 :arg0 organization_name_2 :time recent ) :arg1 ( loyalty :arg1 ( customer :poss organization_name_3 ) :degree most ) ) :time ( time :arg1-of same-01 )
say-01 :arg0 authority :arg1 ( be-located-at-91 :arg1 ( person :quant num_0 ) :arg2 hospital :mod still )
multi-sentence :snt1 ( amr-unknown
see-01 :arg0 evening :arg1 ( and :op1 ( miss-01 :arg1 ( thing :arg1-of miss-01 ) :mod exact ) :op2 ( say-01 :polarity - :arg1 ( thing :arg1-of ( say-01 :arg0 organization_name_0 ) ) ) )
possible-01 :arg1 ( talk-01 :arg0 ( person :location here ) :arg1 ( return-01 :arg1 person :arg4 rangers ) :mod just )
possible-01 :arg1 ( recite-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg2 president ) ) :arg1 ( person :arg0-of report-01 ) ) :time ( allow-01 :polarity - :arg0 country_name_0 :arg1 ( list :mod ( sanction-02 :arg0 organization_name_1 :arg1 ( politician :mod country ) :mod sanction-02 ) ) )
allow-01 :polarity - :arg0 country_name_0 :arg1 ( and :op1 ( sanction-02 :arg0 organization_name_1 :arg1 ( politician :arg1-of displace-01 :mod country_name_2 ) ) :op2 ( arrive-01 :arg1 ( arrive-01 :arg1 ( meet-03 :arg0 ( person :arg0-of ( have-org-role-91 :arg2 president ) ) :arg1-of continue-01 ) ) ) ) :time then
and :op1 ( cafes :arg1 market :time already ) :op2 ( cafes :arg1 ( cafes :name ( name :op1 rabbit :op2 cafes :op3 cafes :op4 cafes :op5 halikahvila ) ) :time already )
make-01 :arg0 i :arg1 ( bid-03 :arg0 i ) :time ( year :mod last :mod last )
recommend-01 :arg1 ( prevent-01 :arg0 it :arg1 ( see-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg1 police :arg2 thermal ) ) :arg1 ( hide-01 :arg0 person ) ) )
use-01 :polarity - :arg0 i :arg1 ( detail :mod this :quant all ) :mod again
say-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg2 president ) ) :arg1 ( care-03 :arg0 ( care-03 :arg1 ( situation :mod refugee ) ) :arg1 ( person :arg0-of participate-01 :quant all ) )
debt :mod ( big :degree most ) :topic ( history :mod economy ) :mod ( big :degree most )
contrast-01 :arg1 ( talk-01 :arg0 ( person_name_0 :arg0-of ( have-org-role-91 :arg2 ( director :mod technical ) ) ) :arg1 ( invest-01 :arg1 ( monetary-quantity monetary-quantity_num_0 :unit euro ) :arg2 ( invest-01 :mod euro ) ) :mod still ) :arg2 ( tell-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg2 ( director :mod technical ) ) ) :arg1 ( estimate-01 :arg1 price-01 :arg2 ( person :arg0-of report-01 ) ) )
begin-01 :arg1 ( guest :mod dinner :mod esteemed ) :mod only
calmed :arg1 situation :time ( until :op1 then ) :arg1-of ( cause-01 :arg0 ( result-01 :arg1 ( crisis :mod refugee ) ) )
say-01
arrange-01 :arg0 ( person :arg0-of ( broker-01 :arg1 building_name_0 ) :location location_name_0 )
claim-01 :arg0 ( person :arg0-of ( head-01 :arg1 organization_name_0 ) :arg0-of ( head-01 :arg1 ( person_name_1 :arg0-of ( have-org-role-91 :arg1 organization :arg3 head-01 ) ) ) ) :arg1 ( obligate-01 :arg1 channel :arg2 ( do-02 :arg0 channel :arg1 ( work-01 :arg0 channel :degree more :compared-to ( before :op1 ( reach-01 :arg0 channel :arg1 public ) ) ) ) ) :arg1-of ( cause-01 :arg0 ( know-02 :arg0 country :arg1 ( music :mod classical ) :degree less ) ) :time ( year :mod this )
claim-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg1 organization_name_0 :arg2 chief :arg3 ( person_name_1 :arg0-of ( claim-01 :arg1 ( obligate-01 :arg2 ( reach-01 :arg0 channel :arg1 public ) ) ) ) ) ) :arg1 ( obligate-01 :arg1 channel :arg2 ( do-02 :arg0 channel :arg1 ( work-01 :arg0 channel :degree more :compared-to ( reach-01 :arg0 channel :arg1 public ) ) :time past ) :arg1-of ( cause-01 :arg0 ( know-02 :arg0 country :arg1 ( music :mod classical ) :degree less ) ) ) :time ( year :mod this )
say-01 :arg0 organization_name_0 :arg1 ( contrast-01 :arg1 ( understand-01 :arg0 ( we :quant all ) :arg1 ( need-01 :arg0 we :arg1 rule ) ) :arg2 ( go-01 :arg1 this :arg4 ( far :degree too ) ) )
have-concession-91 :arg1 ( mandate :domain ( stability :mod economy ) :mod also :ord ( ordinal-entity ordinal-entity_num_0 ) ) :arg2 ( agree-01 :arg0 ( person :arg0-of ( lead-02 :arg1 bank ) :mod central ) )
say-01 :arg0 he :arg1 ( surprise-01 :arg1 it :condition ( raise-01 :arg0 ( bank :mod central ) :arg1 ( rate :mod interest ) :time ( now :mod right ) ) )
exemplify-01 :mode interrogative :arg0 ( disappeared :arg1 they :arg2 ( market :mod ( market :mod labour ) ) ) :mod also
start-01 :arg0 ( person :mod organization_name_0 ) :arg1 ( start-01 :arg0 person :arg1 ( and :op1 ( be-located-at-91 :arg1 person :arg2 ( under :op1 round ) ) :op2 ( lose-02 :arg0 person :arg1 ( person :arg0-of read-01 ) :arg2 ( age-01 :arg1 person :arg2 ( temporal-quantity temporal-quantity_num_0 :unit year ) ) ) ) )
believe-01 :arg0 ( government-organization :arg0-of ( govern-01 :arg1 person_name_0 ) ) :arg1 ( lead-02 :arg0 organization_name_1 )
and :op1 ( stem :arg1 ( plan :mod original ) :arg2 university_name_0 ) :op2 ( trafficking :arg0 plan-01 :arg1 traffic :mod only :prep-on ( demonstrate-01 :arg1-of ( hold-01 :arg3 ( duration :poss ( duration :poss duration ) ) ) ) )
have-concession-91 :arg1 ( person :arg0-of ( have-org-role-91 :arg1 organization_name_0 :arg2 ceo :time former ) ) :arg2 ( person :arg0-of ( have-org-role-91 :arg1 ( and :op1 business :op2 business ) :arg2 ceo :time former ) )
possible-01 :arg1 ( see-01 :arg0 ( woman :arg1-of gift-01 ) :arg1 ( woman :arg1-of gift-01 ) :arg2 heaven :mod also ) :source heaven
show-01 :arg0 it :arg1 ( interesting :domain you )
likely-01 :polarity - :arg1 ( likely-01 :arg1 ( likely-01 :polarity - :arg1 ( likely-01 :arg1 ( likely-01 :arg1 ( familiarize-01 :arg1 he :arg2 ( plot-01 :arg0 ( boy :arg1-of ( name-01 :polarity - ) :arg1-of ( name-01 :polarity - ) :arg1-of ( name-01 :polarity - ) :arg1-of ( name-01 :polarity - ) :arg1-of ( name-01 :polarity - ) :arg1-of ( name-01 :polarity - ) :arg1-of ( name-01 :polarity - ) :arg1-of ( name-01 :polarity - ) :arg1-of ( name-01 :polarity - ) :arg1-of ( name-01 :arg2 ( name :op1 thneeds :op2 thneeds :op3 thneeds :op4 once-ler :op5 once-ler :op6 once-ler :op7 once-ler ) ) ) ) ) ) ) ) )
have-purpose-91 :arg1 access-01 :arg2 ( thing :mod additional :arg0-of ( access-01 :arg1 ( thing :mod additional :arg1-of attract-01 ) ) )
include-91 :arg1 ( and :op1 ( educate-01 :mod ( school :arg1-of high-02 ) :mod ( school :arg1-of high-02 ) :mod ( school :arg1-of high-02 ) :mod ( school :arg1-of high-02 ) ) :op2 ( thing :arg1-of ( responsible-03 :arg0 ( person :arg0-of teach-01 ) ) ) ) :arg2 ( building :arg0-of ( target-01 :arg1 ( person :quant num_0 :arg1-of estimate-01 ) ) ) :time ( during :op1 attack-01 )
get-01 :arg0 ( person :quant num_0 :arg0-of sail-01 ) :arg1 ( system :arg0-of ( operate-01 :mod new ) :beneficiary organization_name_0 ) :manner amr-unknown :time ( since :op1 ( presence :poss update-01 ) )
see-01 :mode imperative :arg0 you :arg1 ( video :source ( and :op1 road :op2 ( transport-01 :mod rail ) :op3 ( passenger :mod as-well ) ) )
run-01 :arg0 organization_name_0 :arg1 ( rate-entity-91 :arg1 num_0 :arg2 ( temporal-quantity temporal-quantity_num_0 :unit year ) ) :arg3 ( person :arg0-of play-01 :mod veteran :arg0-of ( off :arg1 ( list :arg1-of injure-01 ) :time ( before :op1 ( out :op1 ( temporal-quantity temporal-quantity_num_1 :unit month ) ) :arg1-of ( cause-01 :arg0 ( low-04 :degree more :arg1-of ( cause-01 :arg0 ( low-04 :degree more ) ) ) ) ) ) )
and :op1 ( lonely :arg1 ( model :topic ( law :mod toughest :poss world ) ) ) :op2 ( compete-01 :arg0 you :mod terrible )
receive-01 :arg0 ( person :arg0-of bridge-01 ) :arg1 ( weight :arg0-of ( track-01 :arg1 ( and :op1 ( coexist-01 :arg1 baby :arg2 light ) :op2 ( yoga :arg1 baby ) ) ) ) :time ( break :op1 ( temporal-quantity temporal-quantity_num_0 :unit year :mod last ) )
budget-01 :arg0 university :arg1 ( monetary-quantity :arg1-of ( budget-01 :arg2 ( around :op1 ( product-of :op1 num_0 :op2 num_1 ) ) ) ) :arg2 university :arg1-of ( cause-01 :arg0 ( budget-01 :arg1 save-01 :arg2 ( budget :quant ( between :op1 num_1 :op2 num_1 ) ) ) )
possible-01 :arg1 ( attend-02 :arg0 ( or :op1 trust-01 :op2 ( metrics :arg1-of ( call-01 :manner so ) :mod other ) ) :arg1 ( attend-02 :arg1 or :degree less ) :mod again )
schedule-01 :arg1 ( thing :arg1-of ( precede-01 :arg2 ( person :arg0-of study-01 ) ) ) :arg3 ( wednesday :arg1 ( language :mod foreign :arg1-of ( include-91 :arg2 ( majority :location country_name_0 ) :arg3 majority ) ) ) :arg3 ( language :mod foreign )
demand-01 :arg0 ( person :arg0-of ( lead-02 :arg1 province_name_1 ) :mod province_name_1 ) :arg1 ( end-01 :arg1 ( violence :location ( country :mod this ) ) )
say-01 :arg0 person_name_0 :arg2 i
report-01 :arg0 government-organization_name_0 :arg1 ( injure-01 :arg1 ( person :quant num_0 :arg2-of ( total-01 :arg1 ( person :quant num_0 ) ) ) :mod also )
anger-01 :arg0 ( government-organization :arg0-of govern-01 :mod federal ) :arg1 they :mod also
resemble-01 :arg1 ( resemble-01 :arg2 ( chair :mod previous :poss ( person :arg0-of ( have-org-role-91 :arg2 ( minister :mod prime ) ) ) ) :arg0-of ( mark-01 :arg1 ( begin-01 :arg1 ( end-01 :arg1 ( rebel-01 :mod mÃ¤ntsÃ¤lÃ¤n ) ) ) ) ) :arg2 ( chair :mod previous :location ( chair :mod previous ) )
refer-01 :arg0 this :arg1 ( market :mod securities ) :arg2 ( market :mod securities ) :condition ( possible-01 :arg1 ( work-01 :arg0 ( bank :mod central ) :arg1 ( softening :arg0 bank :arg1 level ) ) :condition ( possible-01 :arg1 ( work-01 :arg0 ( bank :mod central ) :arg1 ( softening :arg0 bank :arg1 level ) :manner ( promise-01 :arg0 bank :arg1 ( event :mod next :time ( future :arg1-of near-02 ) ) ) ) ) )
and :op1 ( exist-01 :arg1 he :topic shoe :frequency several ) :op2 ( ensure-01 :arg0 he :arg1 ( johns :arg0 ( person :mod white :mod white ) :arg1 ( jeans :mod elegant ) :arg2 ( jeans :arg1-of low-04 ) ) )
obligate-01 :arg2 ( feel-02 :arg0 i :arg1 ( person :arg0-of act-01 :domain ( person :arg0-of ( have-03 :arg1 ( model :mod role :mod some ) ) ) ) )
pay-01 :arg0 ( faninsa :poss he ) :arg2 he
realize-01 :arg0 person_name_0 :arg1 ( and :op1 ( drama :domain drama ) :op2 ( possible-01 :arg1 ( need-01 :arg0 truth :arg1 ( color :quant bit ) ) ) ) :manner happy :mod also
suggest-01 :arg0 person_name_0 :arg1 ( and :op1 ( possible-01 :arg1 ( give-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg2 ( president :mod vice ) ) ) :arg1 ( person :arg0-of speak-01 ) :frequency sometimes ) ) :op2 ( say-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg1 government-organization_name_1 :arg2 president ) ) :arg1 ( issue-02 :arg0 this ) ) ) :mod also
multi-sentence :snt1 ( rise-01 :arg1 ( number :quant-of die-01 ) :arg4 ( another :mod yet ) :time ( end-01 :arg1 day ) ) :snt2 ( commit-02 :arg0 police :arg1 suicide )
reveal-01 :arg0 organization_name_0 :arg1 ( and :op1 ( place-01 :arg0 organization :arg1 ( order :mod ( army :mod country_name_1 ) ) :arg2 ( rate-entity-91 :arg1 num_0 :arg2 ( temporal-quantity temporal-quantity_num_0 :unit week ) ) ) :op2 ( rs :arg0 ( army :mod country ) :arg1 ( rate-entity-91 :arg1 num_0 :arg2 ( temporal-quantity temporal-quantity_num_1 :unit year ) ) ) ) :medium press
chance-02 :arg0 ( company :arg1-of separate-02 ) :arg1 ( answer-01 :arg0 company :location ( around :op1 world ) :location ( location :location-of ( need-01 :arg0 ( customer :poss we ) :arg1 ( good :degree more :compared-to world ) ) ) )
event :mod this :time ( throughout :op1 morning ) :degree most :domain this
harm-01 :mode interrogative :arg0 sector :arg1 i :degree so
and :op1 ( be-located-at-91 :arg1 ( and :op1 ( person :arg0-of ( have-rel-role-91 :arg1 he :arg2 friend ) ) :op2 ( person :arg0-of ( have-rel-role-91 :arg1 he :arg2 friend ) ) ) :arg2 ( school :arg1-of high-02 ) ) :op2 ( nice-01 :arg1 ( guy :mod ( old :degree more ) :arg0-of ( try-01 :arg1 ( teach-01 :arg0 guy :arg1 ( play-11 :arg0 guy :arg2 ( peninsula_name_1 :mod hair ) ) ) ) ) )
die-01 :arg1 ( person :mod religious-group_name_0 ) :time accident
and :op2 ( rise-01 :arg1 person_name_0 :manner ( rapid :degree very ) :arg1-of ( cause-01 :arg0 ( and :op1 ( point-out-02 :arg0 ( and :op1 person_name_1 :op2 person_name_2 ) :arg1 ( eye :arg1-of public-02 ) ) :op2 ( and :op1 ( aikuistuu :arg0 he :arg1 ( eye :arg1-of public-02 ) ) :op2 ( and :op1 ( mistake-02 :arg0 he :location ( eye :arg1-of public-02 ) ) :op2 ( and :op1 ( mistake-02 :arg0 he :location ( eye :arg1-of public-02 ) ) :op2 ( and :op1 ( mistake-02 :arg0 he :location ( eye :arg1-of public-02 ) ) :op2 ( and :op1 ( mistake-02 :arg0 he :location ( eye :arg1-of public-02 ) ) :op2 ( and :op1 ( mistake-02 :arg0 he :location ( eye :arg1-of public-02 ) ) :op2 ( and :op1 ( mistake-02 :arg0 he :location ( eye :arg1-of public-02 ) ) :op2 ( and :op1 ( mistake-02 :arg0 he :location ( eye :arg1-of public-02 ) ) :op2 ( and :op1 ( mistake-02 :arg0 he :location ( eye :arg1-of public-02 ) ) :op2 ( and :op1 ( mistake-02 :arg0 he :location ( eye :arg1-of public-02 ) ) :op2 ( believe-01 :arg0 and :arg1 ( good :degree most :domain ( and :op1 team :op2 he ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) )
say-01 :arg0 ( and :op1 ( person :arg0-of ( have-org-role-91 :arg1 person_name_0 :arg2 ( member :mod vice ) ) ) :op2 ( person_name_1 :arg0-of ( have-org-role-91 :arg1 company :arg2 member ) ) :op3 ( person :arg0-of ( have-org-role-91 :arg1 company_name_2 :arg2 member ) ) :op4 ( person :arg0-of ( have-org-role-91 :arg1 company :arg2 member ) ) :op5 ( person :arg0-of ( have-org-role-91 :arg1 company :arg2 member ) ) ) :arg1 ( urge-01 :arg0 person :arg1 ( person :arg0-of ( lead-02 :arg1 political-party ) ) :arg2 ( sing-01 :arg0 person :arg1 ( park_name_0 :mod nation ) ) :concession ( fact :topic ( recommend-01 :arg1 ( abolished :arg1 ( person :arg0-of ( have-org-role-91 :arg1 room :arg2 king ) ) ) ) ) )
and :op1 ( resolve-01 :arg1 issue-02 ) :op2 ( thursday :arg0 ( committee :mod ( market :arg1-of ( open-09 :manner so ) ) ) :arg1 ( decide-01 :arg0 committee :arg1 ( decide-01 :arg0 committee :arg1 ( issue-02 :arg0 ( meet-03 :mod two-day ) ) ) ) )
expect-01 :arg1 ( open-up-03 :arg0 ( traffic :mod rail ) :arg1 ( compete-02 :arg0 traffic ) :manner gradual )
and :op1 ( fall-01 :arg1 ( rate :mod ( employ-01 :polarity - ) ) :arg4 ( percentage-entity percentage-entity_num_0 ) :arg4 ( percentage-entity percentage-entity_num_3 ) :time ( month :mod last ) ) :op2 ( consider-01 :arg0 ( bank :mod central ) :arg1 ( limit-01 :arg1 rate :degree full ) )
possible-01 :arg1 ( hold-01 :arg0 it :arg1 ( person :quant num_0 ) ) :condition ( sulloo :arg1 boat )
location_name_0
multi-sentence :snt1 ( contrast-01 :arg2 ( tell-01 :arg0 ( person_name_0 :arg0-of ( patted :arg1 ( broadcast-program_name_0 :poss i :topic ( back :part-of organization_name_1 ) ) ) ) :arg1 ( have-03 :arg0 person :arg1 ( time :time-of ( have-03 :arg0 person :arg1 ( time :arg1-of ( have-03 :arg0 person :time no-longer ) ) ) ) ) ) :arg2 he ) :snt2 ( appear-02 :arg1 ( and :op1 ( boycott-01 :arg0 ( person_name_3 :quant num_0 :arg0-of ( have-rel-role-91 :arg1 person_name_2 :arg2 person_name_3 ) ) :arg1 strategy :mod again ) :op2 ( and :op1 ( boycott-01 :arg0 person :arg1 strategy ) :op2 ( be-02 :arg1 person :time now ) ) ) )
say-01 :arg0 ( lamb :source organization_name_0 :arg1-of ( author-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg1 organization :arg3 ( apprentice-01 :arg0 person ) ) ) ) ) :arg1 ( website :poss university :prep-on state_name_2 )
suffer-01 :arg0 ( thread :topic ( person :arg0-of ( play-01 :arg1 ( thing :arg0-of ( play-12 :arg2 organization_name_0 ) ) ) ) ) :arg1 ( thing :arg2-of ( result-01 :arg1 ( song :arg0-of offense-02 :source ( person_name_2 :arg0-of ( play-08 :arg1 organization :time former ) ) ) ) )
say-01 :arg0 he :arg1 ( have-03 :arg0 that :arg1 ( reform-01 :arg0 we :arg1 organization_name_0 ) )
compare-01 :arg1 ( team :mod research-01 ) :arg2 ( thing :arg2-of ( result-01 :arg1 ( thing :arg2-of ( result-01 :arg1 ( type :quant num_0 :arg1-of differ-02 ) ) ) ) ) :mod also
say-01 :arg0 ( person_name_0 :arg0-of ( have-org-role-91 :arg1 state :arg2 ( secretary :mod state ) :time former ) ) :arg1 ( contrast-01 :arg1 ( continue-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg1 democrat :arg2 ( secretary :mod state ) :time former ) ) :arg1 ( person :arg0-of ( head-01 :arg1 democrat ) ) ) :arg2 ( catch-up-04 :arg1 ( person_name_1 :arg0-of ( have-org-role-91 :arg2 senator ) ) :arg2 person ) )
multi-sentence :snt1 ( require-01 :arg1 ( show-04 :arg1 weekly :mod this ) ) :snt2 ( and :op1 ( theatre :mode interrogative :degree less ) :op2 ( fact :degree more ) )
contrast-01 :arg1 ( try-01 :arg0 ( government-organization :arg0-of govern-01 ) :arg1 ( myÃ¶tÃ¤sukaista :arg0 government-organization :arg1 message ) :quant lot ) :arg2 ( possible-01 :arg1 ( find-01 :arg1 ( thing :arg1-of ( include-91 :arg2 ( thing :arg1-of ( cut-02 :arg1-of recommend-01 ) :mod ( much :polarity - :degree too ) ) ) ) ) )
possible-01 :arg1 ( weird :polarity - :degree equal :compared-to weird :domain ( picture :poss ( organization_name_0 :arg0-of ( found-01 :arg1 ( person_name_1 :arg0-of ( have-org-role-91 :arg1 organization :arg3 ( lead-02 :arg0 person :arg1 organization ) ) ) ) ) ) ) :arg1-of ( cause-01 :arg0 ( possible-01 :arg1 ( seem-01 :arg1 ( offhand :arg0 i ) ) ) )
tell-01 :arg0 person_name_0 :arg1 ( and :op1 ( do-02 :arg0 ( person :arg0-of ( have-rel-role-91 :arg1 he :arg2 daughter ) ) :arg1 ( music :poss person ) ) :op2 ( sing-01 :arg0 person :arg1 ( music :poss person ) ) ) :arg2 i
say-01 :arg0 person_name_0 :arg1 ( discuss-01 :arg1 ( page :mod nato-questions ) :mod also )
say-01 :arg0 organization_name_0
and :op1 ( dissatisfied :arg1 ( person :quant 1/2 :mod country_name_0 ) :time now ) :op2 ( satisfy-01 :arg1 ( person :mod country_name_1 ) :mod only )
and :op1 ( be-located-at-91 :arg1 person :arg2 ( bus :mod minus ) ) :op2 ( go-02 :arg0 person :arg4 coast )
need-01 :arg0 i :arg1 ( try-01 :arg0 i :arg1 ( remember-01 :arg0 i :arg1 ( detail :quant all ) ) ) :mod just
keen :arg1 ( person :quant num_0 :mod vuosimalli ) :arg2 ( scene :name ( name :op1 toivolan :op2 pomoksi ) :mod toivolan ) :arg1-of report-01
cause-01 :arg0 ( crucial :domain ( let-01 :arg1 ( crisis :mod finance ) ) ) :arg1 ( find-01 :polarity - :arg0 ( person :arg1-of guilty-01 ) :arg1 ( research-01 :arg1 ( research-01 :arg1 field ) :duration ( temporal-quantity temporal-quantity_num_0 :unit decade :mod even ) ) :arg1-of need-01 )
multi-sentence :snt1 ( and :op1 ( childhood :arg0 i ) :op2 ( obligate-01 :arg1 he :arg2 ( confess :arg0 he :arg1 ( obligate-01 :arg2 ( confess :arg0 he ) ) ) ) ) :snt2 ( and :op1 ( beautiful-02 :arg1 life ) :op2 ( beautiful :arg1 life ) :op3 ( harmonious :arg1 life ) :op4 ( harmonious :arg1 life ) :op5 ( harmonious :arg1 life ) )
generate-01 :arg0 person_name_0 :arg1 ( level :arg1-of ( same-01 :arg2 ( level :mod enthusiasm :mod enthusiasm ) ) ) :arg3 ( percentage-entity percentage-entity_num_0 ) :arg4 ( level :mod enthusiasm :mod enthusiasm ) :arg1-of ( say-01 :arg0 person_name_1 ) :arg0-of ( say-01 :arg1 ( thing :arg1-of ( same-01 :arg2 ( thing :arg1-of ( same-01 :arg2 ( thing :arg1-of ( same-01 :arg2 ( thing :arg1-of ( same-01 :arg2 ( thing :arg1-of ( same-01 :arg2 ( thing :arg1-of ( same-01 :arg2 thing ) ) ) ) ) ) ) ) ) ) ) ) )
try-01 :arg0 ( person_name_0 :arg0-of ( have-org-role-91 :arg2 nepublica ) ) :arg1 ( try-02 :ord ( ordinal-entity ordinal-entity_num_0 ) :arg1-of ( run-01 :arg0 ( man :mod young :arg2-of ( accuse-01 :arg1 man ) ) ) ) :time ( session :time-of ( ask-02 :arg0 ( man :mod young :arg2-of ( accuse-01 :arg1 man ) ) :arg1 ( woman :mod young ) :arg2 ( woman :mod young ) :time ( after :op1 now :quant ( temporal-quantity temporal-quantity_num_1 :unit year ) ) ) )
and :op1 ( fall-01 :arg1 ( rate :mod ( employ-01 :arg1 country_name_0 ) ) :arg4 ( under :op1 ( product-of :op1 num_0 :op2 num_1 ) ) :time meanwhile ) :op2 ( number :quant-of ( person :arg1-of employ-01 ) ) :time meanwhile
and :op1 ( person :arg0-of play-01 :arg1-of ( include-91 :arg2 ( person :arg0-of play-01 :mod ( good :degree most ) ) ) :quant ( multiple :op1 num_0 ) ) :op2 ( bring-01 :arg0 person :arg1 ( experience-01 :quant lot ) ) :op3 ( give-01 :arg0 person :arg1 ( experience-01 :quant lot ) :arg2 ( and :op1 ( situation :mod every ) :op2 ( attack-01 :mod ( type :quant all ) ) ) )
and :op1 ( person :arg0-of play-01 :arg1-of ( include-91 :arg2 ( person :arg0-of play-01 :mod ( good :degree most ) ) ) :quant ( multiple :op1 num_0 ) ) :op2 ( bring-01 :arg0 person :arg1 ( experience-01 :mod great ) :arg1-of ( cause-01 :arg0 ( and :op1 ( play-11 :arg0 person :arg2 ( situation :mod any ) ) :op2 ( oppose-01 :arg0 person :arg1 ( attack-01 :mod ( kind :quant all ) ) ) ) ) )
and :op2 ( nice-01 :arg1 ( prabuseasca :arg1 it :time ( before :op1 ( or :op1 ( principals :arg1 ( or :op1 ( opponent :poss he ) :op2 ( opponent :poss he ) ) ) ) ) ) )
explain-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg1 continent_name_0 :arg2 diplomat ) ) :arg1 ( and :op1 ( power-01 :arg0 ( and :op1 ( thing :arg2-of ( characteristic-02 :arg1 ( agenda :poss country_name_1 ) ) ) :op2 ( state :arg1-of ( want-01 :polarity - :arg0 country ) ) ) :arg1 ( state :quant some :arg0-of ( cause-01 :arg1 internally ) ) ) :op2 ( change-01 :arg0 ( state :arg1-of ( want-01 :polarity - :arg0 most ) ) :arg1 treaty ) ) :time past
explain-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg1 continent_name_0 :arg2 diplomat ) ) :arg1 ( and :op1 ( power-01 :arg0 country_name_1 :arg1 ( state :mod some :arg0-of ( have-org-role-91 :arg1 organization :arg2 member ) ) ) :op2 ( adjust-01 :arg0 state :arg1 ( treaty :topic ( and :op1 ( thing :arg1-of ( want-01 :polarity - :arg0 person ) ) :op2 ( thing :arg1-of ( want-01 :polarity - :arg0 person ) ) ) ) ) :time past )
include-01 :arg1 ( and :op1 ( access-01 :arg1 ( access-01 :path ( across :op1 ( citizen :arg0-of ( need-01 :arg1 ( labor :arg1-of ( employ-01 :polarity - ) ) ) ) ) ) ) :op2 ( access-01 :arg0 citizen :arg1 ( institution :mod educate-01 :arg1-of ( high-02 :degree more ) ) :location country_name_0 ) ) :arg2 ( and :op1 ( access-01 :arg0 citizen :arg1 ( institution :mod educate-01 :arg1-of ( high-02 :degree more ) ) :location country ) :op2 ( identify-01 :arg1 citizen :arg2 defective ) )
send-03 :arg0 ( person :arg0-of ( lead-02 :arg1 organization_name_0 ) :mod province_name_1 ) :arg1 ( call-03 :arg0 person :arg1 ( end-01 :arg0 person :arg1 ( violence :location ( country :arg0-of ( have-rel-role-91 :arg1 refugee :arg2 mother ) ) ) ) )
say-01 :arg0 ( analyze-01 :time recent :arg1-of ( publish-01 :arg0 ( analyze-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg1 organization_name_1 :arg2 chief ) :arg0-of ( have-org-role-91 :arg1 organization_name_1 :arg2 chief ) ) ) ) ) :arg1 ( rise-01 :arg1 market :manner sharp :manner sharp :arg1-of ( cause-01 :arg0 ( and :op1 ( heading :arg0 market :arg1 ( rate-entity-91 :arg1 ( percentage-entity percentage-entity_num_0 ) :arg2 ( temporal-quantity temporal-quantity_num_1 :unit day ) ) ) :op2 ( returns :time ( after :op1 ( temporal-quantity temporal-quantity_num_3 :unit day ) ) ) ) ) :manner specific-02 ) :manner specific-02 :time ( year :mod last :mod 35 )
contrast-01 :arg1 ( contribute-01 :arg0 ( authority :mod romanian ) :arg2 ( create-01 :arg1 ( system :arg0-of ( authorize-01 :arg1 flexible ) ) ) ) :arg2 ( attend-02 :arg0 ( and :op1 ( country :arg0-of ( have-03 :arg1 ( safe-01 :mod potential ) :arg1-of possible-01 ) ) :op2 ( thing :arg1-of ( achieve-01 :arg0 source ) ) ) :arg1 ( attend-02 :arg0 citizen :arg1 citizen :mod particular ) :time ( time :arg1-of same-01 ) )
seem-01 :arg1 ( say-01 :arg0 ( person :arg0-of analyze-01 :mod organization_name_0 ) :arg1 ( event :time ( after :op1 ( increase-01 :arg1 government-organization_name_1 :time ( after :op1 ( increase-01 :arg1 government-organization_name_1 ) ) ) ) :time ( survey-01 :arg1 ( thing :arg1-of ( event :time ( after :op1 ( increase-01 :arg1 government-organization_name_1 ) ) ) ) ) :mod ( again :mod 24 ) ) ) :arg1-of ( cause-01 :arg0 ( return-01 :arg1 ( capital :arg0-of ( have-org-role-91 :arg2 capital ) ) :arg4 ( stagnant :arg0 capital :arg1 capital :duration ( temporal-quantity temporal-quantity_num_0 :unit month ) ) ) )
multi-sentence :snt1 ( seem-01 :arg1 ( tendency :arg1 ( roe :time ( after :op1 ( increase-01 :ord ( ordinal-entity ordinal-entity_num_0 :range ( after :op1 ( increase-01 :arg1 ( increase-01 :ord ( ordinal-entity ordinal-entity_num_0 ) ) ) ) ) ) ) ) ) ) :snt2 ( say-01 :arg0 ( person :arg0-of analyze-01 :mod organization_name_0 ) :arg1 ( event :time ( after :op1 ( increase-01 :arg1 government-organization_name_1 ) ) ) )
have-03 :arg0 person_name_0 :arg1 ( career :mod international :prep-as ( violinist :mod solo ) :arg0-of ( gave :arg1 ( and :op1 ( music :mod classical :example ( and :op1 organization_name_1 :op2 organization_name_2 :op3 organization_name_3 :op4 person_name_4 :op5 person_name_4 :op6 country_name_6 :op7 country_name_6 ) ) :op2 ( orchestras :mod prestigious :example ( lead-02 :arg0 ( and :op1 ( person :arg0-of ( lead-02 :arg1 organization ) ) :op2 ( person :arg0-of ( have-org-role-91 :arg1 organization :arg2 member ) ) :op3 ( person :arg0-of ( lead-02 :arg1 organization ) ) :op4 ( person :arg0-of ( lead-02 :arg1 country_name_6 ) ) :op5 ( person :arg0-of ( lead-02 :arg1 country_name_6 ) ) :op6 ( person :arg0-of ( lead-02 :arg1 country_name_6 ) ) :op7 ( person :arg0-of ( lead-02 :arg1 religious-group_name_2 ) ) :op8 ( person :arg0-of ( lead-02 :arg1 religious-group ) ) :op8 ( person :arg0-of ( lead-02 :arg1 religious-group ) ) :op8 ( person :arg0-of ( lead-02 :arg1 religious-group ) ) :op8 ( person :arg0-of ( lead-02 :arg1 religious-group ) ) :op8 ( person :arg0-of ( lead-02 :arg1 religious-group ) ) :op8 ( person :arg0-of ( lead-02 :arg1 religious-group ) ) :op8 ( person :arg0-of ( lead-02 :arg1 religious-group ) ) :op8 ( person :arg0-of ( lead-02 :arg1 religious-group ) ) :op8 ( person :arg0-of ( lead-02 :arg1 religious-group ) ) :op8 ( person :arg0-of ( lead-02 :arg1 religious-group ) ) :op8 ( person :arg0-of ( lead-02 :arg1 religious-group ) ) :op8 ( person :arg0-of ( lead-02 :arg1 religious-group ) ) :op8 ( person :arg0-of ( lead-02 :arg1 religious-group ) ) :op8 ( person :arg0-of ( lead-02 :arg1 religious-group ) ) :op8 ( person :arg0-of ( lead-02 :arg1 religious-group ) ) :op8 ( person :arg0-of ( lead-02 :arg1 religious-group ) ) :op8 ( person :mod religious-group ) :op8 ( person :mod religious-group ) :op8 ( person :mod religious-group ) :op8 ( person :mod religious-group ) :op8 ( person :mod religious-group ) :op8 ( person :mod religious-group ) :op8 ( person :mod religious-group ) :op8 ( person :mod religious-group ) :op8 ( person :mod religious-group ) :op8 ( person :mod religious-group ) :op8 ( person :mod religious-group ) :op8 ( person :mod religious-group ) :op8 ( person :mod religious-group ) :op8 ( person :mod religious-group ) :op8 ( person :mod religious-group ) :op8 ( person :mod religious-group ) :op8 ( person :mod religious-group ) :op8 ( person :mod religious-group ) :op8 ( person :mod religious-group ) :op8 ( person :mod religious-group ) ) ) ) ) ) )
make-01 :arg0 organization_name_0 :arg1 ( car-make :quant num_0 )
change-01 :arg1 situation :arg1-of ( cause-01 :arg0 ( bet-01 :arg0 ( person :quant ( multiple :op1 num_0 ) ) :arg2 person_name_0 ) )
offer-01 :arg0 person_name_0 :arg1 ( job :mod ( job :location ( firm :quant num_0 ) ) )
and :op1 ( ally-01 :arg1 ( person_name_0 :arg0-of cautious-02 :arg0-of cautious-02 :mod extreme :arg0-of cautious-02 ) :arg2 ( stay-01 :arg1 person :duration ( temporal-quantity temporal-quantity_num_0 :unit year ) ) ) :op2 ( and :op1 ( stay-01 :arg1 person :arg3 ( temporal-quantity temporal-quantity_num_1 :unit year ) ) :op2 ( want-01 :arg0 person :arg1 ( leave-15 :arg0 person :arg1 ( position :poss person ) :time ( before :op1 ( situation :poss person ) ) ) ) :op3 ( -lrb- :arg0 person_name_2 :arg1 ( person :quant num_1 :arg0-of ( stay-01 :arg1 person :arg1-of ( long-03 :degree too ) ) ) ) )
wish-01 :arg0 i :arg1 ( and :op1 ( disappointment :polarity - :arg0 i :arg1 ( anyone :location ( family :mod rugbiului ) ) ) :op2 ( come-up-11 :arg0 anyone :arg1 ( result :mod good ) :location home ) )
exemplify-01 :arg0 ( have-03 :arg0 person_name_0 :arg1 ( phenomenon :mod this ) :time ( before :op1 ( enter-01 :arg0 person :arg1 ( member :arg2-of ( have-org-role-91 :arg1 organization_name_1 ) ) :location country_name_2 ) ) :time ( before :op1 ( enter-01 :arg0 you :arg1 organization_name_3 ) ) :time ( before :op1 ( enter-01 :arg0 you :arg1 organization_name_3 ) ) :time ( before :op1 ( enter-01 :arg0 you :arg1 organization_name_3 ) ) )
exemplify-01 :arg0 ( and :op1 ( give-01 :arg0 person_name_0 :arg1 ( example :mod this ) :arg2 organization_name_1 :time before ) :op2 ( accession :arg0 person :arg1 organization_name_2 :time ( before :op1 ( accession :arg0 person :arg1 organization_name_2 :location ( and :op1 organization_name_4 :op2 ( vegetables :mod aveati ) :op3 meat :op4 meat ) ) ) ) )
and :op1 ( terminate-01 :arg0 ( person :arg0-of ( have-rel-role-91 :arg2 mother ) ) :mod also ) :op2 ( believe-01 :arg0 person :arg1 ( something :arg1-of ( resemble-01 :arg2 this ) ) :mod hardly )
need-01 :arg0 it :arg1 ( and :op1 ( know-01 :arg0 person :arg1 ( go-on-15 :arg1 thing :location there ) ) :op2 ( have-06 :arg0 person :arg1 ( and :op1 ( fairness :quant lot ) :op2 ( respect-01 :arg1 ( and :op1 institution :op2 tradition ) ) ) ) )
and :op1 ( believe-01 :polarity - :arg0 ( person :arg0-of vote-01 ) :arg1 ( person :arg0-of vote-01 ) ) :op2 ( rely-01 :polarity - :arg0 person :arg1 person )
and :op1 ( person_name_0 :arg0-of ( have-org-role-91 :arg1 ( person_name_1 :arg0-of ( have-org-role-91 :arg1 rvl :arg2 president :time former ) ) :arg2 president :time former ) ) :op2 ( person_name_2 :arg0-of ( have-org-role-91 :arg1 rvl :arg2 executive :time current ) ) :op3 ( person :arg0-of ( have-org-role-91 :arg1 rvl :arg2 executive :time current ) ) :op4 ( person :arg1-of ( know-02 :arg0 i :time today ) )
game :arg1-of excellent-02
game :arg1-of excellent-02
detain-01 :arg1 person_name_0 :arg2 ( and :op1 ( run-01 :arg0 person :arg1 ( organization_name_1 :mod ( brand :name ( name :op1 automarfar ) :mod ( brand :name ( name :op1 automarfar ) ) ) ) :location country_name_2 ) :op2 ( run-01 :arg0 person :arg1 ( person_name_3 :arg0-of ( carry-01 :arg1 plastic :beneficiary company :location country_name_4 ) ) ) :time ( year :mod 45 ) ) :op3 ( present-01 :arg1 ( temporal-quantity temporal-quantity_num_0 :unit hour ) :arg2 ( present-01 :arg1 ( propose-01 :arg1 ( detain-01 :manner preventive ) ) ) )
(-(
multi-sentence :snt1 ( and :op1 ( person :arg0-of ( have-org-role-91 :arg1 ( team :mod nation :poss country_name_0 ) :arg2 ( person :arg0-of ( manage-01 :arg1 team ) ) ) :arg0-of ( have-org-role-91 :arg1 ( team :mod nation :mod nation ) :arg2 ( person :arg0-of ( manage-01 :arg1 team ) ) ) :arg0-of ( have-org-role-91 :arg1 team :arg3 ( manage-01 :arg1 team ) ) :arg0-of ( have-org-role-91 :arg1 team :arg3 ( manage-01 :arg1 team ) ) :arg0-of ( have-org-role-91 :arg1 team :arg3 ( manage-01 :arg1 team ) ) :arg0-of ( have-org-role-91 :arg1 team :arg3 ( manage-01 :arg1 team ) ) :arg0-of ( have-org-role-91 :arg1 team :arg3 ( manage-01 :arg1 team ) ) :arg0-of ( have-org-role-91 :arg1 team :arg3 ( manage-01 :arg1 team ) ) :arg0-of ( have-org-role-91 :arg1 team :arg3 ( manage-01 :arg1 team ) ) :arg0-of ( have-org-role-91 :arg1 team :arg3 ( manage-01 :arg1 team ) ) :arg0-of ( have-org-role-91 :arg1 team :arg3 ( manage-01 :arg1 team ) ) :arg0-of ( have-org-role-91 :arg1 team :arg3 ( manage-01 :arg1 team ) ) :arg0-of ( have-org-role-91 :arg1 team :arg3 ( manage-01 :arg1 team ) ) :arg0-of ( have-org-role-91 :arg1 team :arg3 ( manage-01 :arg1 team ) ) :arg0-of ( have-org-role-91 :arg1 team :arg3 ( manage-01 :arg1 team ) ) :arg0-of ( have-org-role-91 :arg1 team :arg3 ( manage-01 :arg1 team ) ) :arg0-of ( have-org-role-91 :arg1 team :arg3 ( manage-01 :arg1 team ) ) :arg0-of ( have-org-role-91 :arg1 team :arg3 ( manage-01 :arg1 team ) ) :arg0-of ( have-org-role-91 :arg1 team :arg3 ( manage-01 :arg1 team ) ) :arg0-of ( have-org-role-91 :arg1 team :arg3 ( manage-01 :arg1 team ) ) :arg0-of ( have-org-role-91 :arg1 team :arg3 ( manage-01 :arg1 team ) ) ) )
know-02 :polarity - :arg1 ( person :arg0-of participate-01 :mod other ) :arg2 ( expertise :poss person :topic ( control-01 :arg1 tobacco ) )
know-01 :polarity - :arg0 organization_name_0 :arg1 ( thing :arg1-of ( write-01 :location ( press :arg1-of local-02 ) ) ) :time ( night :time ( before :op1 ( come-01 :arg1 i :arg4 city ) ) )
and :op1 ( be-located-at-91 :arg1 ( and :op1 he :op2 ( person_name_1 :location ( middle :op1 middle ) ) ) :arg2 ( behind :op1 he ) )
say-01 :arg0 ( poll-01 :arg0 publication_name_0 ) :arg1 ( chance-02 :arg0 ( person :quant num_0 :arg1-of ( include-91 :arg2 ( person :quant num_1 :arg1-of ( include-91 :arg2 ( person :quant num_1 ) ) ) ) ) :arg1 ( win-01 :arg0 person :arg2 ( race :mod nominate-01 ) ) :time ( week :mod last ) )
call-on-05 :arg0 ( person :arg0-of ( have-org-role-91 :arg1 organization_name_0 :arg2 chief ) ) :arg1 ( side :quant all :arg2-of ( include-91 :arg1 ( divide-02 :arg1 organization_name_1 :arg2 ( and :op1 ( unify :arg0 organization :arg1 negotiate-01 ) :op2 ( support-01 :arg0 organization :arg1 negotiate-01 :purpose ( find-01 :arg0 organization :arg1 ( solution :mod politics ) ) ) ) ) ) ) :mod again
believe-01 :arg0 ( organization_name_0 :time ( late :degree most ) :poss it ) :arg1 ( increase-01 :arg0 ( elect-01 :arg1 person_name_1 ) :arg1 ( or :op1 person_name_2 :op2 country_name_3 ) ) :time ( late :degree most )
believe-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg1 organization_name_0 :arg2 ( number :mod ( late :degree most ) ) ) ) :arg1 ( increase-01 :arg0 ( elect-01 :arg1 person_name_1 ) :arg1 ( chance-02 :arg0 person :arg1 ( message-01 :arg0 person ) ) :arg1-of ( instead-of-91 :arg2 ( exit :poss country_name_3 :source organization_name_4 ) ) ) :time ( late :degree most :poss organization )
and :op1 ( increase-01 :arg0 ( organization_name_0 :mod ( late :degree most ) :poss person_name_1 ) :arg1 ( chance-01 :arg1 ( and :op1 openness :op2 ( exit :poss country_name_3 ) ) ) ) :op2 organization_name_4
work-01 :arg0 organization_name_0 :time ( date-entity year_date-entity_0 ) :location location_name_1 :purpose ( possible-01 :arg1 ( host-01 :arg0 organization :arg1 ( pilgrims :quant many ) ) )
agree-01 :arg0 ( person :arg1-of expert-01 ) :arg1 ( possible-01 :arg1 ( lead-03 :arg0 person_name_0 :arg2 ( bid-03 :arg0 person :arg1 ( expend-01 :arg0 person ) ) ) )
believe-01 :arg0 ( person :arg0-of specialize-01 ) :arg1 ( possible-01 :arg1 ( cause-01 :arg0 ( friday :arg1-of black-05 ) :arg1 ( monetary-quantity :arg1-of expend-01 ) ) )
obligate-01 :arg2 ( demand-01 :arg0 we :degree more )
need-01 :arg0 we :arg1 ( demand-01 :arg0 we :degree more )
say-01
multi-sentence :snt1 ( focus-01 :arg1 alcohol :degree very ) :snt2 ( say-01 :arg0 ( person_name_0 :mod exact :arg0-of ( have-org-role-91 :arg1 organization_name_1 :arg2 ( director :mod medicine ) ) ) :arg1 ( have-org-role-91 :arg0 person :arg1 organization_name_2 :arg2 ( director :mod medicine ) ) :location location_name_3 )
say-01 :arg0 ( person :quant ( more-than :op1 num_0 ) :arg1-of ( include-91 :arg2 ( person :quant num_1 ) ) ) :arg1 ( change-01 :arg0 person :arg1 ( opine-01 :arg0 person :topic person_name_0 :mod negative ) ) :mod most
and :op1 ( build-01 :arg1 ( rule :arg1-of ( remarkable-02 :degree quite ) ) :mod quite ) :op2 ( rule :mod aranjand :mod aranjand ) :arg0-of ( cause-01 :arg1 ( much :degree too :domain pressure-01 :location ( country :location-of ( put-01 :arg0 ( person :arg0-of migrate-01 :mod this ) :arg1 ( foot :part-of we ) :arg2 foot :ord ( ordinal-entity ordinal-entity_num_0 ) ) ) ) )
vote-01 :arg0 government-organization_name_0 :arg1 ( and :op1 ( person_name_2 :arg0-of ( have-org-role-91 :arg1 organization :arg2 ( minister :mod prime ) ) ) :op2 ( person_name_3 :arg0-of ( have-org-role-91 :arg1 country :arg2 ( minister :mod prime ) ) ) :op3 ( person_name_3 :arg0-of ( have-org-role-91 :arg1 organization_name_4 :arg2 ( minister :mod prime ) ) ) )
upset-01 :arg0 city_name_0 :arg1 person :mod also
sense-02 :arg1 ( presence :poss organization_name_0 ) :mod common :arg1-of ( cause-01 :arg0 ( subject-01 :arg1 ( no-one :polarity - ) :arg2 ( or :op1 ( attack-01 :arg1-of personal-02 ) :op2 something :arg1-of ( resemble-01 :arg2 this ) ) ) )
possible-01 :arg1 ( and :op1 ( add-02 :arg0 they :arg2 ( person_name_0 :arg0-of ( have-org-role-91 :arg2 mayor ) ) ) :op2 ( lead-02 :arg0 person_name_1 ) )
criticize-01 :arg0 ( person :arg0-of ( lead-02 :arg1 political-party_name_0 ) ) :arg1 ( decide-01 :arg0 ( person :arg0-of ( lead-02 :arg1 political-party ) ) :arg1 ( stab-01 :arg0 person :arg1 ( park_name_0 :mod nation :mod country_name_1 ) :time ( during :op1 ( anniversary :poss ( anniversary :ord ( ordinal-entity ordinal-entity_num_0 ) :poss ( battle-01 :arg0 country :arg1 country :ord ( ordinal-entity ordinal-entity_num_0 ) ) ) ) ) ) ) :time meanwhile :arg1-of ( cause-01 :arg0 ( and :op1 ( criticize-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg2 ( legislate-01 :mod conservative ) ) :quant some ) ) :op2 ( make-18 :arg0 person :arg1 headline ) ) )
say-01 :arg0 organization_name_0 :arg1 ( expect-01 :arg0 ( person :quant few :arg1-of ( include-91 :arg2 ( person :quant num_1 :arg1-of ( include-91 :arg2 ( person :quant num_1 :arg1-of ( include-91 :arg2 ( person :quant num_1 :arg1-of ( include-91 :arg2 ( person :quant num_1 :arg2-of value-01 ) ) ) :arg3 ordinal-entity_num_3 ) ) ) ) ) ) :arg1 ( situation :arg1-of ( include-91 :arg2 ( percentage-entity percentage-entity_num_0 ) ) ) :arg3 ( percentage-entity percentage-entity_num_3 ) :concession ( even-if :op1 ( product-of :op1 ( percentage-entity percentage-entity_num_1 ) :op2 ( percentage-entity percentage-entity_num_1 ) ) ) )
harm-01 :arg0 you :arg1 you :degree more :condition ( bring-01 :arg0 you :arg1 ( person :arg0-of play-01 ) :arg2 ( person :arg0-of play-01 :arg1-of ( need-01 :polarity - ) ) )
tell-01 :arg0 ( person_name_0 :arg0-of ( have-org-role-91 :arg2 mp ) :arg0-of ( have-org-role-91 :arg2 mp ) ) :arg1 ( and :op1 ( '' :arg1 ( station :mod ( radio :mod public ) ) ) :op2 ( resembles :arg1 ( opponent :mod commerce ) :arg1-of increase-01 ) ) :arg2 ( person :arg0-of ( have-org-role-91 :arg1 company_name_1 :arg2 boss ) ) :mod also
appeal-02 :arg0 ( person_name_0 :arg0-of ( depend-01 :polarity - ) :arg0-of ( depend-01 :polarity - ) ) :arg1 ( and :op1 organization_name_1 :op2 pnl ) :arg2 ( and :op1 ( cease-01 :arg0 and :arg1 infighting ) :op2 ( shift-01 :arg0 and :arg1 agenda :arg2 treaty_name_1 ) )
say-01 :arg0 person_name_0 :arg1 ( possible-01 :arg1 ( host-01 :arg0 ( person :mod country_name_1 ) :arg1 ( event :arg1-of major-02 ) ) ) :medium ( view-01 :arg0 i )
and :op1 ( struggled :arg1 ( person :arg0-of ( play-01 :arg1 ( temporal-quantity temporal-quantity_num_0 :unit year ) ) ) :arg2 ( problem :topic ( ankle :arg0 person ) ) ) :op2 ( fail-01 :arg1 person :arg2 ( leave-11 :arg0 person :arg1 country_name_0 :time summer ) )
insult-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg3 judge-01 ) ) :arg1 ( person :arg0-of ( have-org-role-91 :arg3 judge-01 ) ) :manner amr-unknown
include-01 :arg1 ( and :op1 ( product :mod continent_name_0 ) :op2 fruit :op3 ( product :mod other ) :op4 ( product :mod other ) ) :arg2 ( product :arg1-of fresh-04 )
include-01 :arg1 ( and :op1 herbs :op2 fruit :op3 ( product :mod continent_name_0 :mod other ) ) :arg2 ( product :arg1-of fresh-04 )
have-03 :arg0 ( person :mod country_name_0 ) :arg1 ( area :location-of ( parking :arg1 ( and :op1 shop :op2 restaurant :mod other ) ) )
have-03 :arg0 lax-c :arg1 ( area :mod ( parking :mod common ) :prep-with ( and :op1 shop :op2 restaurant :mod other ) )
and :op1 ( rise-01 :arg1 ( rate :mod interest ) ) :op2 ( and :op1 ( increase-01 :arg1 ( thing :arg2-of ( value-01 :arg1 ( market :arg1-of rise-01 ) ) ) ) :op2 ( increase-01 :arg1 economy :arg4 recession-02 ) )
reveal-01 :arg1 organization_name_0 :arg2 we :arg3 ( and :op1 ( construct-01 :arg1 ( and :op1 anatomical :op2 ( construct-01 :mod outdate ) ) :op2 ( construct-01 :mod outdate ) ) ) :prep-in ( crisis :mod this )
joke-01 :arg2 joke-01
say-01 :arg0 ( person :arg1-of ( include-91 :arg2 ( person :arg0-of republican ) :arg3 ( percentage-entity percentage-entity_num_0 ) :time ( week :mod last ) ) ) :arg1 ( or :op1 ( '' :arg0 ( person :arg1-of ( include-91 :arg2 person :arg3 ( percentage-entity :value num_0 ) ) ) :arg1 ( or :op1 '' :op2 ( pleased :mod '' ) ) ) :op2 ( won :arg0 person :arg1 race ) :condition ( win-01 :arg0 person_name_2 :arg1 race :arg2 nominate-01 ) ) :time ( week :mod last )
resentment :quant much :arg1-of ( increase-01 :time ( after :op1 now :quant ( temporal-quantity temporal-quantity_num_0 :unit week :mod even ) ) )
contrast-01 :arg1 ( move-01 :arg1 we :arg3-of free-04 :arg3-of free-04 ) :arg2 ( e :arg0 ( e :frequency every :accompanier ( problem :poss she ) ) )
say-01 :arg0 ( person_name_0 :arg0-of ( have-org-role-91 :arg1 organization_name_1 :arg2 president ) ) :arg1 ( have-03 :arg0 organization_name_2 :arg1 ( history :topic ( respond-01 :arg0 organization :arg1 ( change-01 :arg0 organization :arg1 ( market :mod finance :arg0-of ( connect-01 :polarity - :arg1 ( foundation :mod economy ) :arg1-of seem-01 ) ) ) ) ) :time ( month :mod this ) )
multi-sentence :snt1 ( sexism
send-01 :arg1 ( channel :name ( name :op1 matinala ) :mod matinala ) :arg2 capital :time ( after :op1 ( defeat-01 :arg1 person_name_0 :arg2 person_name_1 ) )
multi-sentence :snt1 ( contrast-01 :arg1 ( will-02 :polarity - :arg0 ( person :mod country_name_0 ) :arg1 ( move-01 :arg0 person :arg1 ( movement-07 :arg3-of free-04 ) :location ( area :location location_name_0 ) ) ) :arg2 ( need-01 :arg1 ( change-01 :arg1 ( rule :name ( name :op1 '' ) :arg1-of ( create-01 :time ( era :arg1-of differ-02 ) ) ) ) :time now ) ) :snt2 ( and :op1 ( create-01 :arg1 ( schengen :arg1-of ( create-01 :time ( era :arg1-of differ-02 ) ) ) :time now ) :op2 ( adapt-01 :polarity - :arg1 rule :arg2 situation :time now ) )
continue-01 :arg0 ( and :op1 ( person :arg0-of ( have-rel-role-91 :arg1 ( and :op1 ( person :arg0-of ( have-rel-role-91 :arg1 location_name_0 :arg2 parent ) ) :op2 ( person :arg0-of ( have-rel-role-91 :arg1 person :arg2 parent ) ) :op3 ( person :arg0-of ( have-rel-role-91 :arg1 person :arg2 parent ) ) :op4 ( person :arg0-of ( have-rel-role-91 :arg1 person :arg2 parent ) ) :op5 ( person :arg0-of ( have-rel-role-91 :arg1 person :arg2 parent ) ) ) ) ) :op2 ( person :arg0-of ( have-rel-role-91 :arg1 person :arg2 parent ) ) :op3 ( person :arg0-of ( have-rel-role-91 :arg1 person :arg2 parent ) ) ) :arg1 ( search-01 :arg0 and :manner separate-02 :location ( location :location-of ( possible-01 :arg1 ( be-02 :arg1 and ) ) ) )
obligate-01 :arg1 they :arg2 ( concern-01 :quant num_0 :mod only :purpose ( play-11 :arg0 they :arg2 football :mod as-well ) )
have-03 :arg0 they :arg1 ( view :mod negative ) :quant ( about :op1 num_0 )
have-03 :arg0 they :arg1 ( view :mod negative ) :quant ( about :op1 num_0 )
deploy-01 :arg0 ( and :op1 ( person :quant num_1 :arg0-of ( have-rel-role-91 :arg1 person :arg2 kid ) ) :op2 ( person :quant num_2 :arg0-of ( have-rel-role-91 :arg1 person :arg2 kid ) ) :op3 ( person :quant num_2 :arg0-of ( have-rel-role-91 :arg1 person :arg2 kid ) ) :op4 ( person :quant num_2 :arg0-of ( have-rel-role-91 :arg1 person :arg2 child ) ) :op5 ( person :arg0-of ( have-rel-role-91 :arg1 person :arg2 child ) ) :op6 ( person :arg0-of ( have-rel-role-91 :arg1 person :arg2 child ) ) :op6 ( person :arg0-of ( have-rel-role-91 :arg1 person :arg2 child ) ) :op6 ( person :arg0-of ( have-rel-role-91 :arg1 person :arg2 child ) ) :op7 ( person :arg0-of ( have-rel-role-91 :arg1 person :arg2 child ) ) :op7 ( person :arg0-of ( have-rel-role-91 :arg1 person :arg2 child ) ) ) :arg1 ( person :arg0-of ( have-03 :arg1 opportunity ) :arg0-of ( have-03 :arg1 ( opportunity :arg1-of record-01 :location ( along :op1 professional ) ) ) ) :time ( stage :time ( date-entity day_date-entity_0 month_date-entity_0 year_date-entity_0 ) )
and :op1 ( hold-01 :arg0 location_name_0 :arg1 ( preselection :arg0-of ( elect-01 :arg1 ( person :quant num_1 :arg0-of ( have-rel-role-91 :arg1 ( girl :quant num_1 ) :arg2 child ) ) ) ) :time ( stage :ord ( ordinal-entity ordinal-entity_num_0 ) :part-of contest ) :time ( stage :ord ( ordinal-entity ordinal-entity_num_0 ) :part-of contest ) ) :op2 ( have-03 :arg0 ( boy :arg1-of ( include-91 :arg2 ( boy :quant num_2 ) ) :arg0-of ( have-03 :arg1 opportunity ) ) :arg1 ( opportunity :purpose ( give-01 :arg1 ( thing :arg0-of ( evidence-01 :arg1 ( studio :arg1 professional ) ) ) ) ) )
believe-01 :arg0 i :arg1 ( increase-01 :arg0 ( increase-01 :arg1 ( rate :mod this ) ) :arg1 ( determine-01 :arg0 ( increase-01 :arg1 ( rate :mod this ) :arg1-of ( near-02 :arg2 ( between :op1 ( bond :mod short-term ) :op2 ( one :arg1-of long-03 ) ) ) ) ) )
contrast-01 :arg2 ( raise-01 :arg0 ( thing :arg1-of announce-01 ) :arg1 ( issue-02 :arg0 ( possible-01 :arg1 ( become-01 :arg1 company_name_0 :arg2 ( friendly-01 :arg1 company :degree less ) ) ) ) )
contrast-01 :arg2 ( raise-01 :arg0 ( announce-01 :arg0 he ) :arg1 ( issue-02 :arg0 ( possible-01 :arg1 ( become-01 :arg1 company_name_0 :arg2 ( place :arg1-of ( friendly-01 :degree less ) ) ) ) ) )
say-01 :arg0 ( person_name_0 :arg0-of ( have-org-role-91 :arg1 ( organization_name_1 :location ( room :mod emergency ) :arg0-of ( treat-01 :arg1 person :location ( outside :op1 ( city_name_2 :location ( outside :op1 city_name_2 ) ) ) ) ) ) ) :arg1 ( age-01 :arg1 person :arg2 ( temporal-quantity temporal-quantity_num_0 :unit year ) ) :li num_0
rise-01 :arg1 profit-01 :arg2 ( percentage-entity percentage-entity_num_0 ) :arg4 ( monetary-quantity monetary-quantity_num_1 :unit ( dollar :mod country_name_0 ) )
and :op1 ( injure-01 :arg1 ( policeman :quant ( far :degree so ) ) ) :op2 ( take-01 :arg0 ( service :mod ambulance ) :arg1 ( child :quant num_1 :arg1-of injure-01 :arg1-of ( injure-01 :time ( after :op1 ( throw-01 :arg1 policeman :arg2 ( fence :purpose security ) ) ) ) ) )
contrast-01 :arg1 ( indicted :domain ( person :arg0-of ( head-01 :arg1 organization_name_0 :time former ) :arg0-of ( head-01 :arg1 organization :time former ) ) ) :arg2 ( indicted :domain ( settlement :mod ( service :arg2-of accuse-01 ) :mod other ) :time ( case :mod this ) ) :concession ( carry-out-03 :polarity - :arg1 work-01 )
and :op1 ( try-02 :arg1 ( and :op1 ( person :arg0-of ( head-01 :arg1 organization_name_0 :time former ) :arg0-of ( head-01 :arg1 organization :time former ) ) :op2 ( person_name_1 :arg0-of ( have-org-role-91 :arg1 organization_name_2 :time former ) ) :op3 organization_name_2 :op4 ( person :arg1-of ( employ-01 :time former ) ) ) :arg2 ( try-02 :arg1 or ) :time ( before :op1 now :quant ( few :op1 ( temporal-quantity temporal-quantity_num_0 :unit day ) ) ) ) :op2 ( try-02 :arg1 person :arg2 ( and :op1 ( charge-05 :arg1 person ) :op2 ( charge-05 :arg1 person :arg2 company ) ) ) :concession ( carry-out-03 :polarity - :arg1 work-01 )
airs :arg0 ( person :arg0-of ( have-rel-role-91 :arg1 comedy :arg2 friend ) ) :location comedy :time ( start-01 :arg1 ( finish-01 :arg0 person :arg1 ( episodes :quant num_0 :mod all ) ) )
person :arg0-of ( have-rel-role-91 :arg1 comedy :arg2 friend ) :mod central :arg1-of ( begin-01 :time ( begin-01 :arg1 end-01 ) )
and :op1 ( person_name_0 :arg0-of ( have-org-role-91 :arg1 ( girl :mod six-year-old ) :arg2 ( girl :mod six-year-old ) :time recent ) ) :op2 ( come-01 :arg1 girl :arg4 ( room :mod emergency :purpose treat-03 ) )
difficult :domain ( answer-01 :arg1 ( thing :manner-of ( note-01 :arg1 ( batsman :arg1 ( match-03 :arg1-of test-01 ) ) ) ) )
and :op1 ( receive-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg1 government-organization_name_0 :arg2 '' ) ) :arg1 ( person :arg0-of ( have-org-role-91 :arg1 government-organization :arg3 '' ) ) :arg2 government-organization_name_0 ) :op2 ( follow-02 :arg0 person :arg1 ( lei :quant ( around :op1 num_0 ) ) )
country_name_0 :location ( continent_name_0 :mod top )
prioritize-01 :arg1 ( thing :arg2-of respond-01 :mod immediate ) :time ( era :mod this :arg1-of ( dominate-01 :arg0 ( network :mod social :arg1-of ( dominate-01 :arg0 ( network :mod social ) ) :arg1-of ( dominate-01 :arg0 ( network :mod social ) ) ) ) ) :frequency often :time ( before :op1 ( contact-01 :arg0 network :arg1 network ) )
prioritize-01 :arg1 ( nature :mod immediate :poss respond-01 ) :frequency often :time ( before :op1 ( contact-01 :arg0 ( media :mod social :arg1-of ( dominate-01 :arg0 ( media :mod social ) ) :arg1-of ( dominate-01 :arg0 ( media :mod social ) ) :arg1-of ( dominate-01 :arg0 ( media :mod social ) ) ) :arg1 ( emphasize-01 :arg1 style ) ) )
cost-01 :arg1 ( monetary-quantity monetary-quantity_num_0 :unit euro ) :arg2 ( temporal-quantity temporal-quantity_num_1 :unit year ) :purpose ( monetary-quantity monetary-quantity_num_1 :unit euro )
have-concession-91 :arg1 ( difficult :polarity - :domain ( place :mod parking ) :mod usual ) :arg2 ( likely-01 :arg1 ( become-01 :arg1 store :arg2 tangled ) )
cause-01 :arg1 ( age-01 :arg1 it :arg2 ( temporal-quantity temporal-quantity_num_0 :unit minute :mod only ) )
multi-sentence :snt1 ( hit-01 :arg0 ( information :topic ( and :op1 leaflet :op2 nesimtirea :op3 controllers :op4 bonus :op5 bonus ) ) :arg1 he :prep-without ( hit-01 :arg0 ( information :topic ( and :op1 leaflet :op2 nesimtirea :op3 controllers ) ) :arg1 he ) ) :snt2 ( '' :mode expressive )
contrast-01 )
contrast-01 )
cup
free-03 :arg1 storm :time ( weekend :mod this ) :arg1-of ( cause-01 :arg0 ( win-01 :arg0 ( or :op1 organization_name_0 :op2 organization_name_1 ) :arg1 ( right-05 :arg1 or :arg2 ( play-11 :arg0 or :arg2 home ) :mod either ) :arg2 ( final :mod final :arg1-of ( start-01 :time ( morning :mod next ) ) ) ) )
trade-01 :mod this :time ( week :mod last ) :arg1-of ( cause-01 :arg0 ( or :op1 ( earn-01 :arg0 they :arg1 ( right-05 :arg1 they :arg2 ( play-11 :arg0 they :arg2 ( or :op1 home :op2 location_name_0 ) :location ( or :op1 home :op2 ( cowboys :mod next :mod next ) ) ) ) :op2 ( put-01 :arg0 they :arg1 ticket :arg2 ( sell-01 :arg1 ticket :arg1-of ( start-01 :time ( morning :mod next ) ) ) ) ) ) )
find-01 :arg0 it :arg1 ( and :op1 ( person :arg0-of vote-01 :quant most ) :op2 ( person_name_1 :arg0-of ( have-03 :arg1 ( quality :mod ( leadership :arg1-of strong-02 ) ) ) ) )
see-01 :arg0 ( person :arg0-of vote-01 :quant most ) :arg1 ( and :op1 person_name_0 :op2 person_name_1 :op3 person_name_2 :prep-as ( quality :mod ( leadership :arg1-of soft-02 ) ) )
multi-sentence :snt1 ( result-01 :arg2 ( result-01 :arg2 result-01 ) ) :snt2 ( devote-01 :arg1 ( event :arg1-of nice-01 ) :arg2 ( and :op1 ( pasionatilor :manner exclusive-02 ) :op2 ( specialistilor :location ( area :mod this ) ) ) :time ( year :mod this ) )
and :op1 ( tell-01 :arg1 ( possible-01 :arg1 ( give-01 :arg0 i :arg1 ( sheep :quant some ) :arg2 ( find-01 :arg0 person :arg1 ( boy :location village ) ) ) :condition ( want-01 :arg0 person :arg1 ( return-01 :arg1 person :arg4 ( village :poss person ) ) ) ) ) :op2 ( possible-01 :arg1 ( give-01 :arg0 i :arg1 ( sheep :quant some ) :arg2 ( find-01 :arg0 i :arg1 ( boy :location village ) ) ) :condition ( want-01 :arg0 person :arg1 ( return-01 :arg1 person :arg4 ( village :poss person ) ) ) :condition ( want-01 :arg0 person :arg1 ( return-01 :arg1 person :arg4 ( village :poss person ) ) ) )
say-01 :arg0 person_name_0 :arg1 ( tell-01 :arg0 ( person :arg0-of ( have-rel-role-91 :arg1 child :arg2 child ) ) :arg1 ( and :op1 ( access-01 :arg1 product :arg1-of ( frequent-02 :degree more ) ) :op2 ( access-01 :arg1 product ) :arg2-of ( fortunate-01 :polarity - ) ) :arg2-of ( fortunate-01 :polarity - ) ) :arg2 publication_name_1 :arg2-of ( fortunate-01 :polarity - )
tell-01 :arg0 ( person_name_0 :arg0-of ( have-rel-role-91 :arg1 child :arg2 child ) ) :arg1 ( and :op1 ( access-01 :arg1 ( product :mod this ) :arg1-of frequent-02 ) :op2 ( access-01 :arg0 child :arg1 product ) :arg2-of ( fortunate-01 :polarity - ) ) :arg2-of ( fortunate-01 :polarity - ) :arg2-of ( fortunate-01 :polarity - ) :arg2-of ( fortunate-01 :polarity - )
bearings :arg0 ( and :op1 street :op2 bulevarde ) :arg1 ( name :poss he ) :location country_name_0
contrast-01 :arg1 ( possible-01 :arg1 ( experience-01 :arg0 ( team :poss person_name_0 ) :degree less :compared-to ( before :op1 now :quant ( less-than :op1 ( temporal-quantity temporal-quantity_num_0 :unit year ) ) ) ) :arg1-of possible-01 :time ( before :op1 now :quant ( less-than :op1 ( temporal-quantity temporal-quantity_num_3 :unit year ) ) ) ) :arg2 ( have-03 :arg0 team :arg1 ( and :op1 ( attitude :mod positive ) :op2 ( attitude :mod positive ) ) )
suspend-01 :arg0 location_name_0 :arg1 ( cross-02 :arg1 border ) :source person_name_1 :duration ( temporal-quantity temporal-quantity_num_0 :unit day ) :time ( wake-up-02 :arg1 ( incident :mod wednesday ) )
say-01 :arg0 ( person :arg0-of ( head-01 :arg1 ( group :mod parliament :mod parliament :mod parliamentary ) ) ) :arg1 ( receive-01 :arg0 ( person :arg0-of ( head-01 :arg1 ( group :quant num_0 :arg0-of oppose-01 ) ) ) :arg1 ( message :medium text :topic ( phone :arg1-of mobile-02 ) ) :arg0-of ( warn-01 :arg1 ( disrupt-01 :polarity - :arg0 person :arg1 speech :manner ( mr :arg0 person :arg1 speak-01 ) ) ) )
say-01 :arg0 ( person :arg0-of ( head-01 :arg1 ( organization_name_0 :mod parliament ) ) ) :arg1 ( and :op1 ( change-01 :arg0 ( person :arg0-of ( head-01 :arg1 ( organization :mod parliament ) ) ) :arg1 ( message :medium text :poss person ) :medium ( phone :arg1-of mobile-02 :poss person ) ) :op2 ( warn-01 :arg0 person :arg1 ( and :op1 ( receive-01 :arg0 ( politician :quant num_0 :arg0-of oppose-01 ) :arg1 ( phone :arg1-of mobile-02 :poss politician ) ) :op2 ( warn-01 :arg0 politician :arg1 ( disrupt-01 :polarity - :arg0 ( speak-01 :arg0 person_name_2 ) :arg1 speech ) ) ) ) )
multi-sentence :snt1 ( cause-01 :arg1 ( try-01 :arg0 you :arg1 ( do-02 :arg0 you :arg1 ( something :arg1-of differ-02 ) ) :condition ( try-01 :arg0 you :arg1 ( do-02 :arg0 you :arg1 ( something :arg1-of differ-02 ) ) ) ) ) :snt2 ( example :quant num_0 :domain this :arg1-of ( come-01 :arg4 mind :time already :arg1-of ( say-01 :arg0 person_name_0 ) ) )
want-01 :arg0 we :arg1 ( get-05 :arg1 we :arg2 out :arg1-of ( quick-02 :degree most :compared-to ( possible-01 :arg1 get-05 :prep-in ( situation :mod this ) ) ) )
come-01 :arg1 ( person :quant num_0 :arg1-of ( come-01 :arg4 mind ) ) :arg4 mind :time ( try-01 :arg0 i :arg1 ( offer-01 :arg0 i :arg1 ( mechanism :quant several :consist-of ( adjust-01 :mod psychological :duration long-03 ) ) ) )
contrast-01 :arg2 ( possible-01 :arg1 ( influence-01 :arg0 he :arg1 ( develop-01 :mod important :arg0-of ( affect-01 :arg1 we :arg1-of possible-01 :arg1-of possible-01 ) ) ) )
contrast-01 :arg2 ( possible-01 :arg1 ( influence-01 :arg0 he :arg1 ( develop-01 :mod important :arg0-of ( affect-01 :arg1 we :arg1-of possible-01 :arg1-of possible-01 ) ) ) )
contact-01 :arg0 ( and :op1 ( person_name_0 :arg0-of ( have-org-role-91 :arg1 organization_name_1 :arg2 director ) ) :op2 ( person :arg0-of ( have-org-role-91 :arg1 organization_name_1 :arg2 director ) ) :op3 ( person :arg0-of ( have-org-role-91 :arg1 organization :arg2 director ) ) :op4 ( person :arg0-of ( have-org-role-91 :arg1 organization :arg2 director ) ) :op5 ( person :arg0-of ( explain-01 :arg1 ( desire-01 :arg0 person :arg1 ( find-01 :arg0 person :arg1 ( family :mod biology :arg1-of ( have-org-role-91 :arg0 person :arg2 member ) ) ) ) ) ) ) :arg1 ( person :source country_name_2 ) :time ( year :mod this )
show-01 :arg0 ( survey-01 :arg0 ( survey-01 :arg0 ( organization_name_1 :arg1-of ( conduct-01 :arg0 organization_name_1 ) ) ) ) :arg1 ( have-03 :arg0 ( person :quant ( multiple :op1 num_0 :mod only ) ) :arg1 ( view-01 :arg1 ( estate :mod real ) ) :mod positive ) :time ( before :op1 ( announce-01 :arg0 person :arg1 ( candidacy :poss person :location mid-june ) ) )
possible-01 :arg1 ( call-01 :arg0 we :arg1 ( and :op1 person_name_0 :op2 ( agenda :poss person_name_1 ) ) :arg2 '' :mod even )
decide-01 :arg0 they :mod probable :time ( week :mod next )
conclude-01 :arg0 ( poll-01 :arg0 organization_name_0 :time ( week :mod last ) :location state_name_1 ) :arg1 ( opine-01 :arg0 ( person :arg1-of ( include-91 :arg2 ( person :arg0-of ( have-org-role-91 :arg2 general ) ) :arg3 ( percentage-entity :value num_0 ) ) ) :arg1 person_name_2 :mod favorable )
contrast-01 :arg2 ( possible-01 :arg1 ( notice-01 :arg0 you :arg1 ( decrease-01 :arg1 ( grow-01 :arg1 ( grow-01 :arg1 -lrb- ) ) ) ) :time now )
say-01 :arg0 ( government-organization :arg0-of govern-01 ) :arg1 ( approve-01 :arg0 government-organization :arg1 ( strategy :mod nation :topic ( and :op1 '' :op2 ( plan-01 :arg1 ( act-02 :duration ( temporal-quantity temporal-quantity_num_0 :unit year ) ) ) ) ) :op3 ( plan-01 :arg0 government-organization :arg1 ( '' :arg0 government-organization :arg1 ( phase :mod ( effort :purpose ( effort :purpose ( modernise :arg1 ( manage-01 :arg1 ( territory :mod nation ) ) ) ) ) ) ) ) :arg1-of ( conform-01 :arg2 ( release-01 :arg1 press ) ) )
complain-01 :arg0 i :arg1 it
play-01 :quant many :mod indeed :mod indeed
need-01 :arg0 we :arg1 ( cooked :mod skilled :domain we ) :arg1-of obvious-01
obligate-01 :arg2 ( chef :mod skilful :domain you ) :arg1-of obvious-01
need-01 :arg0 we :arg1 ( cooked :mod skilled :domain we ) :arg1-of obvious-01
contrast-01 :arg1 ( remove-01 :polarity - :arg1 quota :mod really ) :arg2 ( allow-01 :mode interrogative :arg1 ( raceasca :arg1 subject :degree more ) :mod only )
contrast-01 :arg1 ( eliminate-01 :polarity - :arg1 quota :mod really ) :arg2 ( leave-17 :mode interrogative :arg1 subject :mod just )
multi-sentence :snt1 ( hope-01 :arg0 i :arg1 ( have-03 :arg0 i :arg1 ( memory :arg1-of nice-01 :prep-with they ) ) ) :snt2 ( cause-01 :arg0 ( thing :quant ( many :degree so ) ) :arg1 ( person_name_0 :arg0-of ( have-org-role-91 :arg2 confesses ) ) )
and :op1 ( allergic :arg1 ( train-01 :arg2 ( person :arg0-of teach-01 ) ) :degree very ) :op2 ( ban-01 :arg0 train-01 :arg1 he :location ( room :part-of he ) ) :degree very
use-01 :arg1 ( person :arg0-of ( vote-01 :arg1 republican ) ) :arg2 idea
and :op1 ( close-01 :arg1 border ) :op2 ( walls :arg1 wall :location ( area :location location_name_0 ) )
frustrate-01 :arg0 ( reach-01 :arg0 authority :arg1 ( culmi :mod new ) ) :arg1 frustrate-01
and :op1 ( person :quant num_0 :arg0-of ( have-rel-role-91 :arg1 i :arg2 parent ) ) :op2 ( person :quant num_0 :arg0-of ( have-rel-role-91 :arg1 i :arg2 father ) ) :domain ( person :arg0-of ( have-rel-role-91 :arg1 i :arg2 parent ) )
leave-13 :arg0 ( and :op1 voice :op2 ( image :mod animated ) ) :arg1 ( doubt-01 :polarity - :arg1 ( desire-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg1 organization_name_0 :arg2 authority ) ) :arg1 ( sell-01 :arg0 person :arg1 weapon :arg2 ( regime :mod repressive ) ) :location ( organization_name_1 :location ( province_name_4 :arg0-of ( found-01 :arg1 country ) ) ) ) ) :arg1-of ( doubt-01 :polarity - )
multi-sentence :snt1 ( leave-11 :arg0 ( and :op1 voice :op2 ( image :mod animated ) ) :arg1 ( advert :mod this ) :manner live ) :snt2 ( blade :arg0 organization_name_0 :arg1 ( desire-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg1 country_name_1 :arg2 authority ) ) :arg1 ( sell-01 :arg0 person :arg1 ( person :arg0-of ( have-org-role-91 :arg1 ( and :op1 ( regime :mod country ) :op2 ( person :arg0-of ( have-org-role-91 :arg1 country :arg2 authority ) ) ) :arg2 ( and :op1 defend-01 :op2 security ) :manner ( and :op1 defend-01 :op2 security ) :location ( forest :location city_name_2 ) ) ) ) ) )
leave-13 :arg0 ( and :op1 voice :op2 ( image :mod animated ) ) :arg1 ( doubt-01 :polarity - :arg1 ( desire-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg1 organization_name_0 :arg2 authority ) ) :arg1 ( sell-01 :arg0 person :arg1 ( regime :mod ( repressive :mod arm ) ) :arg2 organization_name_1 :path ( organization_name_1 :location ( province_name_4 :arg0-of ( found-01 :arg1 country ) ) ) ) ) :manner live )
recommend-01 :arg1 ( and :op1 ( put-01 :arg0 organization_name_0 :arg1 ( issue-02 :arg0 ( stability :mod finance ) ) :arg2 ( place :ord ( ordinal-entity ordinal-entity_num_0 ) :mod only ) :prep-in ( case :arg1-of major-02 ) ) :op2 ( say-01 :arg0 organization :arg1 ( person_name_1 :arg0-of ( have-org-role-91 :arg1 organization :arg2 member :time former ) :arg0-of ( have-org-role-91 :arg1 organization :arg2 member :time former ) :arg0-of ( have-org-role-91 :arg1 organization :arg2 member :time former ) ) ) )
view-01 :arg0 ( institution :quant all ) :arg1-of coordinate-01 :mod every :purpose ( deal-01 :arg2 ( crisis :mod refugee ) )
and :op1 ( try-01 :arg0 we :arg1 ( handle-01 :arg0 we :arg1 ( crisis :mod refugee ) ) ) :op2 ( view-01 :arg0 ( institution :quant all ) :arg1-of coordinate-01 )
contrast-01 :arg1 ( provide-01 :polarity - :arg0 they :arg1 ( thing :arg1-of argue-01 :arg1-of ( include-91 :arg2 ( country :arg0-of ( have-org-role-91 :arg1 ( person :arg0-of ( have-org-role-91 :arg2 member ) ) :arg2 member ) ) ) ) ) :arg2 ( include-91 :arg1 some :arg2 ( thing :arg1-of ( know-02 :arg2 ( produce-01 :arg1 ( cigarette :mod electronic ) ) :arg0-of ( lead-01 :arg1 ( produce-01 :arg1 ( cigarette :mod electronic ) ) ) ) :quant some :arg1-of ( include-91 :arg2 ( thing :arg1-of ( say-01 :arg0 ( industry :mod paper ) :mod even ) ) ) ) )
multi-sentence :snt1 ( terrible :domain i ) :snt2 ( hear-01 :polarity - :arg0 you :arg1 nothing :mod just )
and :op1 ( take-01 :arg1 application :time ( until :op1 ( date-entity month_date-entity_0 day_date-entity_0 ) ) ) :op2 ( want-01 :arg0 ( person :arg0-of ( want-01 :arg1 ( ask-02 :arg0 person :arg1 ( information :quant more ) ) ) ) :arg1 ( or :op1 ( address :mod phone ) :op2 ( address :mod email ) ) )
maintain-01 :arg0 person_name_0 :arg1 ( advantage :mod ( and :op1 woman :op2 modera?ilor ) ) :concession-of ( reduce-01 :arg1 advantage )
contrast-01 :arg1 ( retains :arg0 person_name_0 :arg1 advantage :arg2 woman ) :arg2 ( reduce-01 :arg1 advantage )
give-01 :arg0 ( wave-04 :arg1 ( and :op1 ( border-01 :arg1 country_name_0 :arg2 country_name_1 ) :op2 ( border-01 :arg1 country_name_2 :arg2 country ) ) ) :arg1 ( and :op1 ( border-01 :arg1 country :arg2 country ) :op2 ( border-01 :arg1 country :arg2 country ) ) :arg2 ( and :op1 ( border-01 :arg1 country :arg2 country ) :op2 ( border-01 :arg1 country :arg2 country ) )
include-91 :arg3 num_0 :arg1 ( team :mod top :arg1-of ( knock :location ( cup :mod continent_name_0 ) ) ) :arg2 pool
have-purpose-91 :arg1 ( leave-11 :arg1 ( politics :mod little ) ) :arg2 ( and :op1 ( gather :arg1 politics ) :op2 ( gather :arg1 politics ) )
time :time-of ( decide-01 :arg1 ( rate :mod interest ) :beneficiary organization_name_0 )
and :op1 ( fall-01 :arg1 ( rate :mod ( employ-01 :polarity - ) ) :arg4 ( percentage-entity percentage-entity_num_0 ) :arg4 ( percentage-entity percentage-entity_num_3 ) :time ( month :mod last ) ) :op2 ( believe-01 :arg0 government-organization_name_0 :arg1 ( employ-01 :arg1 ( person :mod political-party_name_1 ) :degree full ) )
receive-01 :arg0 he :arg1 ( and :op1 ( care-03 :arg0 he :arg1 medicine ) :op2 ( need-01 :arg0 he :arg1 oxygen ) :time ( before :op1 ( take-01 :arg1 oxygen :arg3 hospital ) ) )
consider-01 :arg1 ( or :op1 ( candidate :polarity - :mod democracy ) :op2 ( candidate :mod potential ) ) :arg1-of ( cause-01 :arg0 ( possible-01 :polarity - :arg1 ( accept-01 :arg0 ( person :arg0-of vote-01 :mod this ) :arg1 ( person :arg0-of ( represent-01 :arg1 ( party :arg0-of ( have-org-role-91 :arg2 president ) ) ) ) ) ) ) :time ( month :mod last )
be-located-at-91 :arg1 person_name_0 :arg2 ( point :quant num_0 :arg2-of ( include-91 :arg1 ( and :op1 person_name_1 :op2 person_name_2 :op3 ( point :quant num_3 ) :op4 ( point :quant num_3 ) :op5 ( point :quant num_3 ) :op6 ( point :quant num_3 ) :op7 ( point :quant num_3 :prep-to ( and :op1 person_name_5 :op2 person_name_6 :op3 person_name_6 ) ) ) ) )
cause-01 :arg0 ( offer-01 :arg0 he :arg1 ( collaborate-01 :arg0 he :arg1 person_name_0 :arg2 ( develop-02 :arg0 he :arg1 ( world :mod amphibious :poss he ) ) ) ) :arg1 ( access-01 :polarity - :arg0 he :arg1 ( artists :mod solo ) )
benefit-01 :arg0 benefit-01
benefit-01 :arg0 benefit-01
exemplify-01 :polarity - :arg0 ( possible-01 :polarity - :arg1 ( integrated :arg0 ( person :arg0-of sail-01 ) :arg1 ( person :arg0-of sail-01 ) ) :mod just )
and :op1 ( injure-01 :arg1 ( and :op1 ( police :quant ( at-least :op1 num_0 ) ) :op2 ( child :quant num_1 ) ) :arg1-of ( cause-01 :arg0 clashes ) ) :op2 ( write-01 :arg0 ( person_name_1 :arg0-of ( have-org-role-91 :arg1 country :arg2 child ) ) )
accuse-01 :arg0 organization_name_0 :arg1 organization :arg2 ( and :op1 ( thing :arg1-of ( state-01 :arg0 country_name_2 ) :arg1-of ( control-01 :polarity - ) ) :op2 ( thing :arg1-of state-01 :mod rational :mod rational ) )
remain-01 :arg1 organization_name_0 :arg3 jail-01 :arg3 ( at-least :op1 ( temporal-quantity temporal-quantity_num_0 :unit day :mod another :mod another ) ) :time ( re-discuss :arg0 person_name_1 :arg1 ( possible-01 :arg1 ( put-01 :arg0 person :arg1 person :arg2 large ) ) )
have-org-role-91 :arg0 ( person :arg0-of ( have-org-role-91 :arg1 ( government-organization_name_0 :poss country ) :arg2 member ) ) :arg1 ( person :arg0-of ( lead-02 :arg1 political-party_name_1 ) :mod new ) :manner consistent-01
say-01 :arg0 ( and :op1 ( person_name_0 :arg0-of ( have-org-role-91 :arg2 president ) ) :op2 ( person :arg0-of ( have-org-role-91 :arg2 ceo ) ) ) :arg1 ( face-01 :arg0 ( company :arg0-of ( have-org-role-91 :arg1 company ) ) :arg1 ( situation :mod economy ) :degree more :compared-to expect-01 :arg1-of ( cause-01 :arg0 ( and :op1 ( produce-01 :arg1 ( and :op1 produce-01 :op2 globe ) :mod particular ) ) ) )
listen-01 :arg1 ( file :quant series :arg1-of ( do-02 :arg0 i ) ) :condition ( want-01 :arg0 you :arg1 ( hear-01 :arg0 you :arg1 ( more :topic case-03 ) ) )
and :op1 ( receive-01 :arg0 ( money :arg1-of ( receive-01 :arg0 i ) ) :arg1 ( unit :mod medicine ) :arg2 ( use-01 :arg0 unit :arg1 they :time ( until :op1 end-01 ) ) ) :op2 ( contrast-01 :arg1 ( invest-01 :arg0 unit :arg2 ( unit :mod medicine ) ) :arg2 ( invest-01 :arg0 unit :arg2 ( and :op1 equipment :op2 technology ) :mod also :arg1-of ( cause-01 :arg0 ( start-01 :arg0 hospital :arg1 ( procure-01 :arg0 hospital ) :time already ) ) ) )
contrast-01 :arg1 ( receive-01 :arg0 ( unit :mod medicine ) :arg1 money :arg2 ( use-01 :arg0 unit :arg1 ( and :op1 ( end-01 :arg1 year ) :op2 ( develop-02 :arg1 ( develop-02 :arg1 clinics ) ) ) ) ) :arg2 ( and :op1 ( invest-01 :arg0 unit :arg2 ( device :mod medicine ) :mod also ) :op2 ( fire-01 :arg0 unit :arg1 ( device :arg1-of ( procure-01 :arg0 public ) ) :time already ) )
see-01 :polarity - :arg1 ( person_name_0 :arg1-of ( powerful-02 :degree more :compared-to it ) )
see-01 :polarity - :mode imperative :arg0 we :arg1 person_name_0 :arg2 ( strong-02 :arg1 person :degree more :compared-to he )
contrast-01 :arg1 ( and :op1 ( feel-01 :arg0 we ) :op2 ( obligate-01 :arg2 we ) ) :arg2 ( obligate-01 :arg2 ( go-01 :arg1 we :degree further ) )
advertise-01
appeal-01 :arg0 ( rhetoric :poss person_name_0 ) :arg1-of limit-01 :arg1-of ( cause-01 :arg0 ( dominate-01 :arg0 ( service :mod industry :mod new ) :arg1 ( and :op1 force :op2 ( automatizari :arg1-of extensive-03 ) ) :beneficiary industry ) ) :location ( landscaping :mod industry :mod new )
work-01 :polarity - :arg0 city :time moment
contrast-01 :arg1 ( be-located-at-91 :arg1 person_name_0 :arg2 ( in-front-of :op1 ( person_name_1 :arg1-of ( include-91 :arg2 ( figure :quant num_0 ) ) ) ) :time ( month :mod last ) ) :arg2 ( have-03 :arg0 person :arg1 ( advantage :mod slight :consist-of ( point :quant num_1 ) :location ( group :mod this ) ) :time now )
be-located-at-91 :arg1 it :arg2 par :extent almost
be-located-at-91 :arg1 it :arg2 par :extent almost
use-01 :arg0 criminal-organization_name_0 :arg1 ( phone :mod ( girl :mod 11-year-old ) ) :arg2 ( ask-02 :arg0 girl :arg1 ( image :mod ( child :arg1-of abuse-01 ) ) )
do-02 :arg0 ( candidate :mod democracy ) :arg1 ( or :op1 ( candidate :mod democracy ) :op2 ( candidate :arg1-of possible-01 ) ) :arg2 ( person :arg0-of ( vote-01 :arg1 ( party :poss party :mod primary ) ) :quant few ) :manner good
contrast-01 :arg1 ( agree-01 :arg1 it ) :arg2 ( say-01 :arg0 ( person_name_0 :arg0-of ( have-org-role-91 :arg1 organization_name_1 ) ) :arg1 ( contrast-01 :arg1 ( agree-01 :arg1 it ) :arg2 ( be-located-at-91 :arg1 ( place :ord ( ordinal-entity ordinal-entity_num_0 ) :mod only ) :arg2 group ) ) )
think-01 :arg0 i :arg1 ( wrong-04 :arg1 execute-01 )
possible-01 :polarity - :arg1 ( come-01 :arg1 everyone :arg4 continent_name_0 ) :arg1-of ( say-01 :arg0 he ) :medium ( speech :poss he )
contrast-01 :arg2 ( want-01 :arg0 he :arg1 ( report-01 :arg0 he :arg1 subject :mod international ) )
contrast-01 :arg2 ( want-01 :arg0 ( thing :arg1-of report-01 :mod international ) :arg1 ( write-01 :arg0 report :arg1 subject ) )
contrast-01 )
button :topic ( soon :degree most :compared-to soon )
intend-01 :arg0 we :arg1 ( resume-01 :arg0 we :arg1 work-01 :time ( soon :degree most :compared-to ( possible-01 :arg1 resume-01 ) ) )
contrast-01 :arg2 ( and :op1 ( character :quant several :prep-on ( intend-01 :arg1 ( candidacy :beneficiary ( person :arg0-of ( have-org-role-91 :arg1 organization_name_0 :arg2 president ) ) ) ) ) :op2 ( comment-01 :arg0 ( person_name_1 :arg0-of ( have-org-role-91 :arg1 organization :arg3 ( comment-01 :arg0 person ) ) ) ) )
possible-01 :polarity - :arg1 ( and :op1 ( revive-01 :arg1 he ) :op2 ( die-01 :arg1 he :time ( morning :mod next ) ) )
be-temporally-at-91 :arg1 violence :arg2 ( evening :location ( district :mod ( distance-quantity distance-quantity_num_0 :unit kilometer ) :mod ( distance-quantity distance-quantity_num_1 :unit kilometer ) ) )
mean-01 :polarity - :arg1 ( vote-01 :arg0 person :arg1 ( vote-01 :arg0 person ) :condition ( vote-01 :polarity - :arg0 person :arg1 we ) ) :arg2 ( say-01 :arg0 person :arg1 ( cause-01 :arg0 amr-unknown :arg1 ( interest-01 :polarity - :arg1 politics :arg2 politics :time no-longer ) ) ) :condition ( vote-01 :arg0 person :beneficiary we ) :condition ( vote-01 :arg0 person :beneficiary we )
create-01 :arg1 organization_name_0
let-01 :mode imperative :arg0 we :arg1 ( create-01 :arg1 ( continent_name_0 :arg0-of ( counter-01 :arg1 drug ) ) )
say-01 :arg0 ( thing :arg1-of ( report-01 :arg0 ( thing :arg1-of ( report-01 :arg0 person_name_0 ) ) ) ) :arg1 ( suffer-01 :arg0 person :arg1 ( and :op1 head :op2 log :op3 coapse ) :arg1-of repeat-01 )
drawn :arg1 ( person :quant num_0 :arg0-of ( use-01 :arg1 drug ) ) :arg1-of ( cause-01 :arg0 ( accuse-01 :arg1 person :arg2 ( attempt-01 :arg1 ( attempt-01 :arg0 ( state :arg0-of ( cross-02 :arg1 border ) :mod ( law :polarity - ) ) :arg1 ( state :arg0-of ( cross-02 :arg1 border ) ) ) ) ) )
and :op1 ( fall-01 :arg1 ( rate :mod employ-01 :location country_name_0 ) :arg4 ( rate-entity-91 :arg1 ( rate :mod ( employ-01 :polarity - ) ) :arg2 ( rate-entity-91 :arg1 num_0 :arg2 ( temporal-quantity temporal-quantity_num_0 :unit year ) ) ) ) :op2 ( figure :mod ( above :op1 ( product-of :op1 num_0 :op2 num_1 ) ) )
cause-01 :arg0 ( states :arg0 ( state :arg0-of ( have-org-role-91 :arg1 ( state :arg0-of ( have-org-role-91 :arg2 member ) ) :arg2 ( series :name ( name :op1 franco-german ) ) ) :quant whole ) :arg1 ( becoming :arg1 city_name_0 :arg2 ( become-01 :arg1 city_name_1 :arg2 ( thing :arg0-of ( play-12 :arg2 ( thing :arg0-of play-01 ) ) ) :arg1-of increase-01 ) ) ) :degree ( more :quant all )
cause-01 :arg0 ( states :arg1 ( state :arg0-of ( have-org-role-91 :arg1 ( state :arg0-of ( have-org-role-91 :arg2 member ) ) :arg2 ( series :mod whole ) ) ) ) :arg1 ( counter :arg1 city_name_0 :arg2 ( become-01 :arg1 city_name_1 :arg2 ( dominate-01 :arg0 city :arg1 ( -rrb- :mod actor ) ) :arg1-of increase-01 ) ) :degree more
say-01 :arg0 ( person_name_0 :arg0-of ( have-org-role-91 :arg1 ( and :op1 ( person :arg0-of research-01 ) :op2 ( person :arg0-of ( have-org-role-91 :arg1 government-organization_name_2 :arg2 official :time former ) ) :op3 ( person :arg0-of ( have-org-role-91 :arg1 government-organization_name_2 :arg2 official :time former ) ) :op4 ( person :arg0-of ( have-org-role-91 :arg1 government-organization_name_2 :arg2 official :time former ) ) ) :arg1-of experience-01 ) ) :arg1 ( decisive :degree more :domain ( and :op1 ( market-01 :arg1 ( and :op1 ( market :mod finance ) :op2 ( news :topic ( weaken-01 :arg1 ( economy :poss country ) ) ) ) ) :op2 ( news :topic ( economy :poss country ) ) ) ) :time ( week :mod recent )
face-01 :arg0 government-organization_name_0 :arg1 ( condition :mod some :arg1-of ( exist-01 :polarity - :time before ) :arg0-of ( precipitate :arg1 recession-02 :arg1-of possible-01 ) ) :time ( situation :time current ) :mod else
show-01 :arg0 earnings :arg1 ( sign :mod grow-01 )
remain-01 :arg1 ( part :part-of ( neintegrata :arg0-of ( create-01 :arg1 ( problem :topic society :arg1-of major-02 :location country_name_0 ) ) ) ) :location country_name_1
say-01 :arg0 he :arg1 ( resemble-01 :arg1 it :arg2 ( resemble-01 :arg1 it :arg2 ( opponent :mod trade-01 ) ) )
contrast-01 :arg1 ( sign-02 :arg0 ( party :quant num_0 :mod politics :arg1-of major-02 ) :arg1 ( agree-01 :arg0 party :arg2 province ) ) :arg2 ( sign-02 :arg0 ( party :quant num_0 :mod politics :arg1-of major-02 ) :arg1 ( step-01 :arg1 country :arg2 ( constitution :mod new ) ) :arg1-of major-02 :arg1-of ( contrast-01 :arg2 ( issue-02 :arg0 ( controversy :mod ( controversy :degree high ) :location country_name_0 ) :duration ( temporal-quantity temporal-quantity_num_0 :unit year ) ) ) )
say-01 :arg0 ( person_name_0 :arg0-of ( have-org-role-91 :arg2 ( ambassador :mod ajaks ) ) ) :arg1 ( send-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg1 country_name_1 :arg2 ( ambassador :mod ajaks ) ) ) :arg1 ( thing :arg1-of ( match-01 :arg2 organization_name_2 ) :mod summary ) :time no-longer )
possible-01 :arg1 ( have-rel-role-91 :arg0 ( person_name_0 :mod this ) :arg1 ( illness :poss person ) :arg2 ( wife :mod even ) )
seek-01 :arg0 location_name_0 :arg1 ( and :op1 ( get-01 :arg0 you :arg1 ( star :mod future ) ) :op2 ( between :op1 ( temporal-quantity temporal-quantity_num_0 :unit year ) :op2 ( temporal-quantity temporal-quantity_num_1 :unit year ) ) ) :time ( campaign-01 :time ( late :degree most ) :prep-to ( and :op1 ( person :arg0-of ( have-rel-role-91 :arg1 child :arg2 child ) ) :op2 ( person :arg0-of ( have-rel-role-91 :arg1 child :arg2 child ) ) :op3 ( person :arg0-of ( have-rel-role-91 :arg1 child :arg2 child ) ) :op4 ( person :arg0-of ( have-rel-role-91 :arg1 child :arg2 child ) ) :op5 ( person :arg0-of ( have-rel-role-91 :arg1 child :arg2 child ) ) :op6 ( person :arg0-of ( have-rel-role-91 :arg1 child :arg2 child ) ) :op6 ( person :arg0-of ( have-rel-role-91 :arg1 child :arg2 child ) ) :op6 ( person :arg0-of ( have-rel-role-91 :arg1 child :arg2 child ) ) :op6 ( person :arg0-of ( have-rel-role-91 :arg1 child :arg2 child ) ) :op7 ( opportunity :mod extraordinary ) ) )
benefit-01 :arg0 ( rise-01 :arg1 dollar ) :arg1 ( person :arg0-of consume-01 ) :mod also
and :op1 ( wake-up-02 :arg1 girl :time ( late :degree more ) ) :op2 ( notice-01 :arg0 girl :arg1 ( disappearance :poss phone :arg1-of ( find-01 :arg0 he :location ( hand :part-of person_name_0 ) ) ) :arg1-of ( contrast-01 :arg2 ( asleep :arg1 he ) ) )
and :op1 ( woken :arg1 girl :time ( late :degree more ) ) :op2 ( see-01 :arg0 girl :arg1 ( phone :arg1-of ( find-01 :arg0 he :location ( hand :part-of person_name_0 ) ) ) :time ( sleep-01 :arg0 he ) )
die-01 :arg1 ( person :quant num_0 :mod other ) :time ( try-01 :arg0 person :arg1 ( cross-02 :arg0 person :arg1 location_name_0 ) ) :time ( early :degree more )
discover-01 :arg1 ( fruit :arg1-of fresh-04 :location ( outside :op1 ( house :mod area ) :mod just ) )
multi-sentence :snt1 ( allow-01 :polarity - :arg0 ( nothing :prep-in ( culture :mod this ) ) :arg1 ( say-01 :arg0 you :arg1 ( and :op1 ( kill-01 :arg0 ( person :mod country_name_0 ) :arg1 you ) :op2 ( want-01 :arg0 i :arg1 ( stay-01 :arg1 i ) ) ) ) ) :snt2 ( contrast-01 :arg1 ( want-01 :arg0 i :arg1 ( stay-01 :arg1 i ) ) :arg2 ( want-01 :arg0 i :arg1 ( get-05 :arg0 i :arg1 ( energy :poss i ) :arg2 ( energy :poss i ) ) ) )
and :op1 ( have-frequency-91 :arg2 ( rate-entity-91 :arg1 ( monetary-quantity monetary-quantity_num_0 :unit ( dollar :mod country_name_0 ) ) :arg2 ( temporal-quantity temporal-quantity_num_1 :unit minute ) ) ) :op2 ( show-01 :arg0 person :arg1 ( fail-01 :arg1 person :arg2 ( beat-03 :arg0 person :arg1 person_name_1 ) ) )
and :op1 ( fair :polarity - :domain it ) :op2 ( complain-01 :arg0 i :arg2 location_name_0 :purpose ( recover-02 :arg0 i :arg1 ( money :poss i ) ) )
contrast-01 :arg1 ( lose-02 :arg0 ( news :arg1-of ( conduct-01 :arg0 ( news :mod organization_name_0 ) :time ( month :mod last ) ) ) :arg1 person_name_1 ) :arg2 ( win-01 :arg0 person_name_2 :arg1 ( point :mod ( percentage-entity percentage-entity_num_0 ) ) ) :time ( month :mod last )
deserve-01 :arg0 person_name_0 :arg1 ( and :op1 ( praise-01 :arg1 person ) :op2 ( criticised :arg0 person :arg1 ( behave-01 :arg0 person ) ) )
say-01 :arg2 person_name_0
enjoy-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg1 ( canton :part-of location_name_0 ) :arg2 ( mayor :mod interim ) ) ) :arg1 ( temporal-quantity temporal-quantity_num_0 :unit hour ) :mod only :arg1-of ( cause-01 :arg0 ( person :arg0-of prosecute-01 ) )
behave-01 :arg0 ( and :op1 ( person :mod this ) :op2 ( person :arg0-of ( have-rel-role-91 :arg1 person :arg2 child ) ) :op3 ( person :arg0-of ( have-rel-role-91 :arg1 person :arg2 child :mod old ) ) :op4 ( person :mod old :location crutches ) :op5 ( person :mod old ) ) :arg1 ( holiday :mod religious :mod great )
cause-01 :arg1 ( and :op1 ( reduce-01 :arg0 organization_name_0 :arg1 ( rate :mod ( between :op1 ( percentage-entity percentage-entity_num_0 ) :op2 ( percentage-entity percentage-entity_num_1 ) ) ) :time ( after :op1 now :quant ( temporal-quantity temporal-quantity_num_2 :unit year ) ) ) :op2 ( theory :time ( after :op1 now :quant ( few :op1 ( temporal-quantity temporal-quantity_num_1 :unit year ) ) ) ) )
contrast-01 :arg1 ( say-01 :arg0 that :arg1 ( contrast-01 :arg1 ( say-01 :arg0 that :arg1 ( contrast-01 :arg1 ( say-01 :arg0 ( person_name_0 :arg0-of ( have-org-role-91 :arg1 ( radio :mod person_name_1 ) :arg2 ( radio :mod ( radio :mod person_name_1 ) ) ) ) :arg1 ( recognize-02 :polarity - :arg0 person :arg1 ( appoint-01 :arg0 person :arg1 person_name_2 :arg2 ( and :op1 ( person :arg0-of ( have-org-role-91 :arg2 minister ) ) :op2 ( person :arg0-of ( have-org-role-91 :arg2 minister ) ) :prep-as ( and :op1 ( person :arg0-of ( have-org-role-91 :arg2 minister ) ) :op2 ( person :arg0-of ( have-org-role-91 :arg2 minister ) ) ) ) ) ) ) ) ) ) :arg2 ( idea :arg1-of bad-07 :domain it ) )
say-01 :arg0 that :arg1 ( idea :arg1-of bad-07 :domain ( person_name_0 :arg0-of ( have-org-role-91 :arg1 ( person_name_1 :arg0-of ( have-org-role-91 :arg1 radio ) ) :arg2 '' ) ) :time ( week :mod this ) :medium ( and :op1 radio :op2 tv ) :time ( struggle-02 :arg0 person :arg1 ( recognize-02 :polarity - :arg0 person :arg1 ( appoint-01 :arg0 ( person_name_3 :arg0-of ( have-org-role-91 :arg1 person_name_3 :arg2 ( minister :mod spiritual ) ) ) :arg1 ( problem :arg1-of bad-07 ) ) ) ) )
multi-sentence :snt1 ( and :op1 ( '' :domain ( renegotiation :mod '' ) ) :op2 ( achieve-01 :arg0 country_name_0 :arg1 ( nothing :topic ( thing :arg2-of value-01 ) ) ) ) :snt2 ''
share-01 :arg1 share :arg2 ( rate-entity-91 :arg1 ( monetary-quantity monetary-quantity_num_0 :unit dollar ) :arg2 ( volume-quantity volume-quantity_num_1 :unit gallon ) :arg1-of average-04 :arg1-of ( make-01 :arg0 ( person :quant num_2 :arg0-of analyze-01 :arg0-of ( respond-01 :arg1 ( survey-01 :arg0 organization_name_0 ) ) ) ) )
contrast-01 :arg1 ( and :op1 ( have-part-91 :arg1 country_name_0 :arg2 location_name_1 ) :op2 ( schengen :arg0 country :location there ) ) :arg2 ( assure-01 :arg0 country :arg1 country :arg2 ( responsible-03 :arg0 country :arg1 ( responsible-03 :arg0 ( and :op1 ( person :arg0-of use-01 ) :op2 ( rule :mod unique :topic deportation ) ) :mod unique :topic ( deportation :beneficiary ( person :arg0-of ( receive-01 :polarity - :arg1 ( rule :mod malicious ) :beneficiary ( person :arg1-of ( consider-01 :arg0 country :arg1-of consider-01 ) ) ) ) ) :mod unique ) ) )
contrast-01 :arg1 ( have-part-91 :arg1 country_name_0 :arg2 location_name_1 ) :arg2 ( contrast-01 :arg1 ( become-01 :arg1 ( thing :arg1-of ( border-01 :arg2 ( border :mod external ) ) ) :arg2 ( responsible-03 :arg0 country :manner joint ) ) :arg2 ( rule :mod unique :topic ( accept-01 :arg1 ( rule :mod deportation :arg1-of single-02 :beneficiary ( person :arg0-of ( receive-01 :polarity - :arg1 ( rule :beneficiary ( country :arg0-of ( consider-01 :arg1 ( safe-01 :arg1 and ) ) ) ) ) ) ) ) ) :prep-in ( sense-01 :arg0 country :arg1 ( responsible-03 :arg0 country :manner joint ) ) )
try-01 :arg0 some :arg1 ( label :arg0 some :arg1 he :arg2 ( politician :mod '' :mod '' :mod '' ) )
contrast-01 :arg1 ( think-01 :arg0 i :arg1 ( case :mod such :medium television ) ) :arg2 ( think-01 :arg0 i :arg1 ( possible-01 :arg1 ( be-02 :arg1 i ) ) )
and :op2 ( say-01 :arg1 amr-unknown :arg2 ( man :mod this ) ) :mod ( again :mod then )
beautiful-02 :arg1 meet-03 :arg1-of ( experience-01 :arg1-of wonderful-03 )
cause-01 :arg0 ( record-01 :arg0 ( person_name_0 :arg1-of ( record-01 :time ( evening :ord ( ordinal-entity ordinal-entity_num_0 ) ) ) ) :arg1 ( trust-01 :arg0 person :arg1 ( trust-01 :arg1 ( person :source organization_name_1 ) :arg2 ( score-entity :op1 num_1 :op2 num_2 ) :time final ) ) )
cause-01 :arg0 ( provide-01 :arg0 ( person :mod country_name_0 ) :arg1 ( confident-01 :arg1 person ) :time ( evening :ord ( ordinal-entity ordinal-entity_num_0 ) ) ) :arg1 ( confident-01 :arg1 ( organization_name_1 :mod ( wow :mode expressive ) ) :time ( end-01 :arg1 ( date-entity end-01 ) ) )
reject-01 :arg0 government-organization_name_0 :arg1 ( and :op1 ( person :arg0-of ( have-rel-role-91 :arg1 person_name_1 :arg2 wife ) ) :op2 ( person :arg0-of ( have-rel-role-91 :arg1 person :arg2 wife ) ) :op3 ( person :arg0-of ( have-rel-role-91 :arg1 person :arg2 wife ) ) ) :arg2 ( body :consist-of ( body :consist-of ( body :arg0-of ( have-org-role-91 :arg2 senator :time former ) ) ) ) :subevent-of ( lobby-01 :arg0 ( legislate-01 :arg0 government-organization_name_2 ) )
possible-01 :arg1 ( form :mod ( form :mod ( fair :degree most ) :topic ( fair :topic weapon ) ) ) :arg1-of ( cause-01 :arg0 ( offer-01 :arg0 ( person :mod country_name_0 ) :arg1 ( product :mod eufemistice :arg1-of standard-02 ) ) )
contrast-01 :arg1 ( possible-01 :polarity - :arg1 ( resist :arg0 you :arg1 heart ) ) :arg2 ( contrast-01 :arg1 ( possible-01 :polarity - :arg1 ( resist :arg0 you :arg1 heart ) ) :arg2 ( person :polarity - :arg0-of ( have-rel-role-91 :arg1 you :arg2 husband :time future ) :arg0-of ( try-01 :arg1 ( rational :polarity - :domain person ) :mod even ) ) )
criticize-01 :arg0 ( person :arg1-of expert-01 ) :arg1 ( thing :arg1-of ( decide-01 :arg0 organization_name_0 ) :topic ( cigarette :mod electronic ) )
multi-sentence :snt1 ( know-01 :arg0 you ) :snt2 ( chance-02 :arg0 you :arg1 ( succeed-01 :arg0 you :arg1 life :location life :mod almost ) :condition ( have-03 :polarity - :arg0 you :arg1 luck ) )
and :op2 ( beat-03 :arg0 person_name_0 :arg1 person :arg2 ( presence :poss ( person :arg0-of ( have-org-role-91 :arg2 ( mayor :mod vice ) ) ) ) :time ( date-entity month_date-entity_0 day_date-entity_0 ) )
think-01 :arg0 ( person :arg0-of ( have-rel-role-91 :arg2 father ) ) :arg1 person_name_0 :time already
blairite :arg0 person_name_0 :arg1 ( oppose-01 :arg0 person :arg1 ( idea :topic ( referendum :poss person_name_2 ) ) ) :degree more :compared-to ( oppose-01 :arg0 person :arg1 ( idea :topic ( abandon-01 :arg0 ( constitution :mod organization_name_3 ) :arg1 ( and :op1 ( person :arg0-of ( vote-01 :arg1 ( constitution :mod organization_name_3 ) ) ) :op2 ( person :arg0-of ( vote-01 :arg1 dutch ) ) :op3 ( person :arg0-of ( give-01 :arg1 card :arg2 out ) ) ) ) ) ) :degree more :mod in-fact
and :op1 ( take-01 :arg0 they :arg1 ( person :arg0-of ( have-org-role-91 :arg2 authority ) ) :arg2 ( find-01 :arg0 authority :arg1 cost-01 ) :time ( more-than :op1 ( temporal-quantity temporal-quantity_num_0 :unit month ) ) ) :op2 ( person :arg0-of ( have-org-role-91 :arg2 authority ) ) :op3 ( person :arg0-of ( have-org-role-91 :arg2 authority ) ) :op4 ( person :arg0-of ( have-org-role-91 :arg2 authority ) ) :op5 ( person :arg0-of ( have-org-role-91 :arg2 authority ) )
come-01 :polarity - :arg1 offer-01 :arg1-of ( cause-01 :arg0 ( convince-01 :polarity - :arg1 he :arg2 ( possible-01 :arg1 ( solve-01 :arg0 he :arg1 ( issue-02 :arg1-of ( create-01 :arg0 he ) ) :manner somehow ) ) ) )
share-01 :arg0 company :arg1 ( share :mod new ) :arg2 ( rate-entity-91 :arg1 ( monetary-quantity monetary-quantity_num_0 :unit pound ) :arg2 ( share :quant ( less-than :op1 num_1 ) :arg2-of ( price-01 :arg1 ( thing :arg2-of ( price-01 :arg1-of close-01 ) :arg1-of close-01 ) ) ) )
contrast-01 :arg1 ( lead-02 :arg0 person_name_0 :arg1 ( life :mod modest ) :concession ( come-01 :arg1 person :arg3 ( family :arg1-of ( have-org-role-91 :arg0 person :arg2 member ) :mod wealth ) ) :concession ( came :arg0 person :arg1 ( family :arg1-of ( have-org-role-91 :arg0 person :arg2 member ) ) ) ) :arg2 ( guide-01 :arg0 that :arg1 ( benchmarks :poss they :arg0-of ( guide-01 :arg1 ( thing :arg1-of ( envision-01 :mod artistic ) ) :time night ) ) )
do-02 :polarity - :arg0 i :arg1 that
multi-sentence :snt1 ( true-01 :arg1 ( need-01 :arg0 musicians :arg1 ( or :op1 educate-01 :op2 ( become-01 :arg2 soloists ) ) ) ) :snt2 ( contrast-01 :arg2 ( need-01 :polarity - :arg1 ( become-01 :arg1 ( and :op1 educate-01 :op2 soloists ) :arg2 soloists ) ) )
make-02 :arg0 we :arg1 ( work-09 :arg1 it ) :condition ( want-01 :arg0 it :arg1 ( formalizam :arg0 it :manner ( vote-01 :mod congressional ) ) )
and :op1 ( plaster :arg0 he :arg1 internet :time today ) :op2 ( receive-01 :arg0 he :arg1 ( hundreds :consist-of ( thousands :arg1 ( and :op1 atm :op2 share-01 ) ) ) )
contrast-01 )
regard :arg0 ( government-organization :arg0-of govern-01 ) :arg1 ( mean-01 :arg1 ( set-up-03 :arg1 ( activity-06 :arg1 concrete ) :arg2 ( lead-03 :arg0 activity-06 :arg2 ( create-01 :arg1 ( phenomenon :mod flexible ) :purpose ( halt-01 :arg1 ( phenomenon :mod ( person :arg0-of migrate-01 ) :arg1-of grow-01 ) ) ) ) ) ) :arg2 ( thing :quant num_0 :arg1-of plan-01 :mod action )
think-01 :arg0 ( government-organization :arg0-of govern-01 ) :arg1 ( mean-01 :arg1 government-organization :arg2 ( establish-01 :arg1 ( activity-06 :arg1 concrete :arg0-of ( lead-03 :arg2 ( create-01 :arg1 ( system :mod flexible ) :purpose ( stop-01 :arg1 ( grow-01 :arg1 migrationist ) ) ) ) ) ) ) :medium ( plan :mod action )
appalled :arg0 idea :arg1 i
say-01 :arg0 ( committee :mod investigative ) :arg1 ( have-03 :arg0 company :arg1 ( complied :arg0 company :arg1 ( standard :mod safe-01 ) :manner '' ) :arg1-of ( report-01 :arg0 company_name_0 ) :arg1-of ( report-01 :arg0 ( agency :mod press :mod saudi ) :arg1-of ( report-01 :arg0 company ) ) )
want-01 :arg0 this :arg1 ( make-01 :arg0 this :arg1 organization_name_0 )
prepare-02 :arg0 ( person :arg0-of ( play-01 :arg1 market ) ) :arg1 ( year :mod all ) :arg2 ( decide-01 :arg0 government-organization_name_0 ) :arg1-of ( cause-01 :arg0 ( decide-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg1 organization_name_1 :arg3 ( lead-02 :arg0 person ) ) ) :arg1 ( meet-03 :arg0 person :arg1 organization :time ( week :mod this ) ) :time ( week :mod this ) ) )
and :op1 ( say-01 :arg0 i :arg1 ( want-01 :arg0 we :arg1 ( talk-01 :arg0 we ) ) :mod also ) :op2 ( say-01 :arg0 we :arg1 ( and :op1 ( agree-01 :arg0 we :arg1 ( agree-01 :arg0 we :arg1 ( game :ord ( ordinal-entity ordinal-entity_num_0 ) :mod new :location location_name_0 ) ) ) :op2 ( discuss-01 :arg0 we :arg1 concrete :time then ) ) )
high-02 :arg1 ( product :mod domestic :arg1-of gross-03 :mod domestic ) :degree more :compared-to ( increase-01 :arg1 ( increase-01 :arg1 ( rate :mod interest ) ) ) :manner specific-02
and :op2 ( commentators :domain country_name_0 :mod sports :arg0-of ( want-01 :arg1 ( give-up-07 :arg0 job :time moment ) ) )
express-01 :arg0 he :arg1 ( idea :arg0-of ( allow-01 :arg1 ( speak-01 :arg0 other :arg1 ( and :op1 organization_name_0 :op2 person_name_1 :op3 ( discuss-01 :arg0 person :arg1 ( issue-02 :mod this ) ) ) ) ) ) :mod also
say-01 :arg0 ( report-01 :arg0 police ) :arg1 ( colluded :arg0 ( person :quant num_0 :arg0-of study-01 :source ( mosque :location ( north :part-of city_name_0 ) ) ) :arg1 ( person :arg0-of ( have-org-role-91 :arg1 ( university_name_2 :location ( north :part-of north ) ) :arg3 study-01 ) ) :arg2 otr?veasc ) :arg1-of ( cause-01 :arg0 ( thing :arg1-of ( report-01 :arg0 police ) ) )
nostim :time ( time :mod this ) :time ( time :mod this )
think-01 :arg0 i :arg1 ( something :arg1-of ( resemble-01 :arg2 this ) )
contrast-01 :arg1 ( raise-01 :arg0 ( organization_name_0 :mod federal ) :arg1 ( rate :mod interest ) :arg2 ( raise-01 :arg0 organization :arg1 ( rate :mod interest ) ) :frequency often ) :arg2 ( possible-01 :polarity - :arg1 ( factor :topic ( thing :manner-of ( respond-01 :arg0 ( and :op1 economy :op2 ( asset :mod finance ) ) ) ) ) )
take-01 :arg0 person_name_0 :arg1 ( and :op1 mature :op2 workshop )
call-02 :arg0 person_name_0 :arg1 ( and :op1 ( thing :arg1-of ( tax-01 :arg3 ( thing :arg1-of ( tax-01 :arg3 ( service :mod public ) ) ) ) ) :op2 ( thing :arg1-of ( tax-01 :arg3 ( thing :arg1-of tax-01 ) ) ) :op3 ( thing :arg1-of ( tax-01 :arg3 ( television :mod public ) ) ) ) :arg4 ( fee :prep-for ( television :mod ( service :mod public ) ) ) :arg1-of ( cause-01 :arg0 ( and :op1 ( change :arg1 ( procedure :topic ( control-01 :arg1 technology ) ) ) :op2 ( find-01 :arg1 ( and :op1 ( thing :arg2-of ( sanction-02 :arg1 ( thing :arg1-of ( tax-01 :arg3 tax ) ) ) ) :op2 ( and :op1 ( find-01 :arg1 thing ) :op2 ( and :op1 ( find-01 :arg1 sanction-02 ) :op2 ( penalize-01 :arg0 procedure ) ) ) ) ) ) ) :medium letter
and :op2 ( ask-01 :arg0 person_name_0 :arg1 ( and :op1 ( indexing :arg0 person :arg1 ( tax-01 :arg3 ( service :mod television :mod public ) ) ) :op2 ( modifying :arg0 person :arg1 ( thing :arg1-of tax-01 ) :arg3 ( tax-01 :arg3 ( service :mod television :mod public ) ) ) :op3 ( regulating :arg0 person :arg1 ( thing :arg1-of ( provide-01 :arg0 ( and :op1 ( thing :arg1-of ( tax-01 :arg3 ( tax :mod tv ) ) ) :op2 ( find-01 :arg1 ( and :op1 ( penalize-01 :arg2 ( tax-01 :arg3 tax ) ) :op2 ( find-01 :arg1 ( and :op1 penalize-01 :op2 penalize-01 ) ) ) ) ) ) ) ) ) ) :medium letter
market :mod continent_name_0 :mod real :domain this
detail-01 :arg0 company :arg1 company :time ( until :op1 ( and :op1 ( moment :mod this ) :op2 ( career :mod fair :arg1-of ( find-01 :location www.targuldecariere.ro ) ) ) )
drawn :arg0 organization_name_0 :arg1 ( thing :arg1-of ( draft-01 :mod original ) )
and :op1 ( person :arg0-of report-01 ) :op2 ( thing :arg1-of ( state-01 :arg0 ( thing :arg1-of involve-01 ) ) ) :op3 ( thing :arg1-of ( state-01 :arg0 ( thing :arg1-of involve-01 ) ) ) :op4 ( thing :arg1-of ( state-01 :arg0 ( thing :arg1-of involve-01 ) ) )
announce-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg2 authority ) ) :arg1 ( responsible :arg0 ( and :op1 organization_name_0 :op2 family :op3 family :arg0-of ( belong-01 :arg1 person_name_1 ) :arg0-of ( belong-01 :arg1 ( person :arg0-of ( have-org-role-91 :arg1 organization :arg3 ( lead-02 :arg0 person :arg1 organization ) ) ) ) :arg0-of ( have-org-role-91 :arg1 organization :arg3 ( lead-02 :arg0 person :arg1 organization ) ) ) :arg1 ( person :arg0-of ( have-org-role-91 :arg1 organization :arg3 ( lead-02 :arg0 person :arg1 organization ) ) ) :arg1-of ( follow-01 :arg2 ( accident :arg1-of ( follow-01 :arg2 ( accident :arg1-of ( die-01 :arg1-of ( follow-01 :arg2 accident ) ) ) ) ) ) )
play-11 :polarity - :arg0 you :arg2 ( level :mod country )
contrast-01 :arg1 ( doctor :polarity - :domain i ) :arg2 ( and :op1 ( age-01 :arg1 ( person :arg0-of ( have-rel-role-91 :arg2 doctor ) ) :arg2 ( temporal-quantity temporal-quantity_num_0 :unit month ) ) :op2 ( play-11 :polarity - :arg0 person :arg2 ( phase :mod grupelor ) ) )
cause-01 :arg1 ( possible-01 :arg1 ( plan-01 :arg0 ( person :quant some :arg0-of ( have-org-role-91 :arg2 minister ) ) :arg1 ( remark-01 :arg0 person :arg1-of ( cause-01 :arg0 ( and :op1 ( help-01 :polarity - :arg0 ( person :arg0-of ( have-org-role-91 :arg2 minister ) ) :arg1 political-party_name_0 :mod even ) :op2 ( remark-01 :arg0 person :mod style ) :op3 ( campaign-01 :arg0 person :arg1 ( speed-01 :arg0 person :arg1 ( process-02 :arg1 ( speed-01 :arg0 person :arg1 process-02 ) ) ) ) :time ( campaign-01 :arg1 ( speed-01 :arg1 process-02 ) ) ) ) ) ) )
show-01 :arg0 ( ten :arg1 ( poll-01 :quant num_0 :mod nation :mod last ) ) :arg1 ( and :op1 ( lead-03 :arg0 person_name_0 :arg2 ( figure :quant num_0 :mod ( figure :quant num_1 ) ) ) :op2 ( wonder-01 :arg0 person :arg1 ( thing :mod this :arg1-of ( mean-01 :arg2 ( chance-01 :arg1 nominate-01 :mod ( estate :mod real ) ) ) ) :manner serious ) )
reason :mode interrogative
it :topic i :mod just
say-01 :arg0 they :arg1 ( contrast-01 :arg1 ( have-03 :arg0 they :arg1 ( boundary :beneficiary ( person :arg0-of ( want-01 :arg1 ( pass-01 :arg0 person ) ) ) ) ) :arg2 ( person :polarity - :arg0-of ( want-01 :arg1 ( claim-02 :arg0 person :arg1 person ) ) ) ) :time yesterday
and :op1 ( close-01 :arg1 ( rate-entity-91 :arg1 ( percentage-entity percentage-entity_num_0 ) :arg2 ( temporal-quantity temporal-quantity_num_1 :unit year ) ) ) :op2 ( close-01 :arg1 ( percentage-entity percentage-entity_num_1 ) :arg3 ( peak-01 :mod record ) :time ( date-entity month_date-entity_0 day_date-entity_0 ) )
expect-01 :arg1 ( contrast-01 :arg1 ( expect-01 :arg1 ( monitor-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg1 government-organization_name_0 :arg2 official ) ) :arg1 progress-01 :location ( area :mod other ) ) :mod ( negative :arg1-of increase-01 ) ) :arg2 ( expect-01 :arg1 ( monitor-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg1 government-organization :arg2 official ) ) :arg1 progress-01 :location ( area :mod other ) ) :mod ( only :polarity - ) :purpose ( consult-01 :arg0 person :arg1 ( and :op1 ( bank :mod central :mod central ) :op2 ( person :arg1-of expert-01 ) ) :arg2 ( and :op1 ( bank :mod central :mod central ) :op2 ( person :arg1-of expert-01 ) ) :manner ( good :degree more ) ) ) )
expect-01 :arg1 ( monitor-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg1 government-organization_name_0 :arg2 official ) ) :arg1 ( progress-01 :arg1 ( person :arg0-of ( have-org-role-91 :arg1 government-organization :arg2 official ) ) :location ( area :mod other ) ) :mod ( only :polarity - ) ) :arg1-of ( cause-01 :arg0 ( expect-01 :arg1 ( monitor-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg1 government-organization :arg2 official ) ) :arg1 progress-01 :location ( area :mod other ) ) ) :arg1-of ( contrast-01 :arg2 ( consult-01 :arg0 person :arg1 ( and :op1 ( bank :mod central :mod central ) :op2 ( person :arg1-of expert-01 ) ) :purpose ( better :arg0 and :arg1 ( economy :poss world ) :manner ( good :degree more ) ) ) :mod also ) )
and :op1 ( play-02 :arg0 person_name_0 :arg1 match-03 ) :op2 ( do-02 :arg0 person :arg1 match-03 :mod as-well )
contrast-01 :arg1 ( consider-01 :arg0 ( democrat :mod vote-01 :arg1-of ( include-91 :arg2 ( person :arg0-of vote-01 ) :arg3 ( percentage-entity percentage-entity_num_0 ) ) ) :arg1 person_name_0 :arg2 ( chance-02 :arg1 ( win-01 :arg0 person :arg2 ( elect-01 :arg1-of general-02 ) ) ) ) :arg2 ( drop-01 :arg1 figure :arg3 ( percentage-entity percentage-entity_num_0 ) :time ( month :mod last ) )
and :op2 ( disturb-01 :mode interrogative :arg0 ( person :arg0-of ( have-rel-role-91 :arg1 he :arg2 father ) ) :arg1 ( person :arg0-of ( have-rel-role-91 :arg1 he :arg2 father ) ) )
propose-01 :arg0 ( branch :mod ( democracy :mod social ) :arg1-of ( include-91 :arg2 ( branch :mod ( democracy :mod social ) ) ) :quant ( majority :mod vast ) ) :arg1 ( and :op1 ( government-organization_name_1 :mod extraordinary ) :op2 ( government-organization_name_1 :poss organization ) :arg1-of ( monday :arg0 organization_name_2 ) ) :time ( date-entity month_date-entity_0 day_date-entity_0 )
and :op1 ( right-05 :polarity - :arg1 ( give-01 :arg1 ticket :arg2 ( prospect-02 :arg0 person_name_0 :location continent_name_1 ) ) ) :op2 ( enable-01 :arg0 person :arg1 ( support-01 :arg0 person :arg1 ( campaign-01 :arg0 person :arg1 ( campaign-01 :arg0 person :arg1 referendum ) ) ) :arg2 ( campaign-01 :arg0 person :arg1 referendum ) ) :arg1-of ( say-01 :arg0 person_name_2 )
move-01 :arg1 organization_name_0 :arg2 ( end-01 :arg1 organization_name_1 )
move-01 :arg0 person_name_0 :arg2 location_name_1
and :op1 ( appear-01 :arg1 organization_name_0 :prep-on ( scene :mod music ) ) :op2 ( ensemble :arg0 ( music :mod classical :mod only ) :arg1 ( music :mod classical :mod only :arg1-of ( conductor :polarity - ) ) :time ( time :mod that ) )
begin-01 :arg0 they :arg1 ( believe-01 :arg0 they :arg1 ( trainer :arg0 you :arg1 trainer ) ) :time ( begin-01 :arg0 they :arg1 ( believe-01 :arg0 they :arg1 ( event :mod this ) ) )
accuse-01 :arg0 person_name_0 :arg1 military_name_1 :arg2 eyebrow :time ( after :op1 ( lose-02 :arg0 person :arg1 consciousness ) )
show-01 :arg0 ( figure :quant num_0 :location poll-01 ) :arg1 ( chance-02 :arg0 person_name_0 :arg1 good )
consensus :polarity - :topic ( decide-01 :arg0 we :arg1 ( cause-01 :arg0 government-organization_name_0 :arg1 ( stable-03 :polarity - :arg1 ( market :mod finance ) ) ) )
and :op1 ( say-01 :arg0 ( person :arg0-of ( manage-02 :arg1 ( make-01 :arg0 person :arg1 ( meet-03 :mod this ) ) ) ) :arg1 ( event :mod ( kind :ord ( ordinal-entity ordinal-entity_num_0 ) ) ) ) :op2 ( do-02 :arg0 we :arg1 it :time future :time ( revolution-03 :quant all ) )
person_name_0 :arg0-of ( have-org-role-91 :arg2 mp ) :mod conservative
set-up-03 :arg0 he :arg1 ( firm :name ( name :op1 nsw ) :mod ( security :mod macro ) ) :accompanier ( person :arg0-of ( have-rel-role-91 :arg1 he :arg2 mother ) ) :time ( date-entity month_date-entity_0 year_date-entity_0 ) :time ( after :op1 ( expel-01 :arg0 he :arg1 ( person :arg0-of ( have-rel-role-91 :arg1 person_name_0 :arg2 daughter ) ) ) )
and :op1 ( recommend-01 :arg1 ( hold-02 :arg1 ( account-01 :arg0 ( and :op1 ( person :arg0-of ( have-org-role-91 :arg2 head-of-state ) ) :op2 ( person :arg0-of ( have-org-role-91 :arg1 they :arg2 member ) ) ) :arg1 ( and :op1 ( person :arg0-of ( have-org-role-91 :arg2 head-of-state ) ) :op2 ( person :arg0-of ( have-org-role-91 :arg1 they :arg2 member ) ) ) ) ) ) :op2 ( important :domain ( measure-02 :arg0 authority ) )
and :op1 ( obligate-01 :arg2 ( hold-02 :arg1 ( account-01 :arg1 ( and :op1 custom :op2 ( person :arg0-of ( have-org-role-91 :arg1 they :arg2 member ) ) ) ) ) ) :op2 ( important :domain ( measure-02 :arg0 authority ) )
see-01 :arg0 we :arg1 ( bulwark :location continent_name_0 )
multi-sentence :snt1 lord :snt2 ( and :op1 ( insist-01 :arg0 ( person_name_0 :arg0-of ( have-org-role-91 :arg2 lord ) ) :arg1 ( take-01 :arg0 person :arg1 ( and :op1 location_name_1 :op2 ( jury :mod person_name_2 ) ) ) ) :op2 ( do-02 :arg1 '' :medium ( company_name_3 :arg1-of specific-02 ) ) )
and :op1 ( suspect-01 :arg0 ( person_name_0 :mod country_name_1 ) :arg1 ( family :arg1-of ( have-org-role-91 :arg0 person :arg2 member ) ) :arg2 ( family :arg1-of ( have-org-role-91 :arg0 person :arg2 member ) ) :mod fraudulent ) :op2 ( filmandu :arg0 ( person :arg0-of ( have-rel-role-91 :arg1 person :arg2 wife ) ) :arg1 person :mod even :time ( ametit :arg1 person ) ) :op3 ( realised :arg1 ( word :poss person ) :degree hardly )
say-01 :arg0 ( he :arg0-of ( request-01 :arg1 ( family :arg1-of ( have-org-role-91 :arg0 person_name_0 :arg2 member ) ) ) ) :arg1 ( remain-01 :arg1 church :arg3 open-05 :time ( night :mod ( night :mod last ) :arg1-of ( close-01 :time ( night :mod last ) ) :arg1-of ( close-01 :time ( morning :quant num_1 ) ) ) )
and :op1 ( and :op1 ( small :degree more :domain organization_name_0 ) :op2 ( focus-01 :arg0 organization :degree more :compared-to ( hp :arg0 organization :time today ) ) ) :op2 ( and :op1 ( focus-01 :arg0 organization :arg2 ( business :arg0-of ( help-01 :arg1 business :arg2 ( style :mod business :mod business ) ) ) ) :op2 ( say-01 :arg0 person_name_1 :arg1 ( help-01 :arg0 business :arg1 business :arg2 business ) ) )
and :op1 ( and :op1 ( small :degree more :domain organization_name_0 ) :op2 ( focus-01 :arg0 organization :degree more :compared-to ( hp :arg0 organization :time today ) ) ) :op2 ( and :op1 ( focus-01 :arg0 organization :arg2 ( business :arg0-of ( help-01 :arg1 ( trend :mod ( run-01 :arg1 business ) :mod ( style :mod new ) ) ) ) ) :op2 ( say-01 :arg0 person :arg1 person_name_1 ) )
and :op1 ( bear-02 :arg1 person_name_0 :time ( date-entity year_date-entity_0 month_date-entity_0 day_date-entity_0 ) :location peninsula_name_1 ) :op2 politician :op3 journalist
say-01 :arg1 ( scary-03 :arg0 it ) :arg2 ( tell-01 :arg0 ( person_name_0 :arg0-of ( have-rel-role-91 :arg1 person_name_1 :arg2 mother ) ) :arg1 ( tell-01 :arg0 person :arg2 publication_name_2 ) )
wonder-01 :arg0 ( person :quant many ) :arg1 ( extent :degree-of ( possible-01 :arg1 ( affect-01 :arg0 we :arg1 ( choose-01 :arg0 we :arg1 ( politician :arg0-of ( have-03 :arg1 ( thing :arg1-of ( decide-01 :arg3 ( thing :arg2-of ( position-01 :arg1 politician ) ) ) ) ) ) ) ) ) ) :time ( after :op1 ( become-01 :arg1 he :arg2 ( person :arg0-of ( lead-02 :arg1 political-party_name_0 :mod new ) :location country_name_1 ) ) ) :time ( today :mod even )
and :op1 ( and :op1 ( stand-01 :arg1 organization_name_0 :arg2 organization :time then ) :op2 ( know-01 :polarity - :arg0 we :arg1 ( fall-01 :arg1 ( regime :mod person_name_1 ) ) :time now ) )
cause-01 :arg0 ( value-01 :arg1 ( thing :arg2-of ( value-01 :arg1 ( market :mod commodity ) ) ) ) :arg1 ( take-01 :arg0 company :arg1 ( thing :arg2-of ( price-01 :arg1 ( market :mod commodity ) :arg1-of fall-01 ) ) :time ( year :mod this ) :arg1-of ( cause-01 :arg0 ( and :op1 ( slumped :arg0 country_name_0 :arg1 ( activity-06 :arg1 economy :arg0-of ( counter-01 :arg1 economy ) ) ) :op2 ( cause-01 :arg1 ( disaster :location market ) ) ) ) ) :time ( year :mod this )
evolve :arg1 ( economy :poss country_name_0 ) :manner ( well :degree relative ) :arg1-of ( cause-01 :arg0 ( and :op1 ( trillions :arg1 economy :arg2 ( sheet :mod balance-01 ) ) :op2 ( generate-01 :arg1 ( level :arg1-of low-04 :consist-of inflation ) ) ) )
lie-07 :arg1 ( economy :mod country_name_0 ) :arg2 ( well :degree relative ) :arg1-of ( cause-01 :arg0 ( and :op1 ( bring-01 :arg0 recovery :arg1 ( monetary-quantity monetary-quantity_num_0 :unit dollar ) :arg2 ( sheet :mod balance-01 ) ) :op2 ( generate-01 :arg0 economy :arg1 ( level :mod inflation :arg1-of low-04 ) ) ) )
probable :domain ( tell-01 :arg0 you :arg1 ( serve-01 :arg0 you :arg2 you :condition ( cooked :arg0 you :location inside ) ) :arg2 you )
say-01 :arg0 ( person_name_0 :arg0-of ( have-org-role-91 :arg1 ( police :mod district ) :arg2 chief ) ) :arg1 ( and :op1 ( gather-03 :arg0 ( person :arg0-of protest-01 :quant ( more-than :op1 num_0 ) ) :location ( in-front-of :op1 ( station :mod police ) ) ) :op2 ( throw-01 :arg0 ( some :arg1-of ( include-91 :arg2 person ) ) :arg1 ( and :op1 rock :op2 molotov ) ) )
multi-sentence :snt1 ( play-01 :arg1 ( advertise-01 :arg1-of ( realistic-03 :degree more ) ) :manner ( advertise-01 :arg1-of ( realistic-03 :degree more ) ) ) :snt2 ( be-located-at-91 :arg1 ( and :op1 animatii :op2 ( crap :arg1-of strong-02 ) ) :arg2 ( and :op1 animatii :op2 ( crap :arg1-of strong-02 ) ) :degree more )
multi-sentence :snt1 ( contrast-01 :arg1 ( play-11 :arg0 they :arg2 ( advertising :arg1-of ( realistic-03 :degree more ) ) ) :arg2 ( imbogatindu :arg0 they :arg1 he :manner ( and :op1 ( animatii :arg1 he ) :op2 ( colours :arg1 he :arg1-of strong-02 ) ) ) ) :snt2 ( striking :degree more )
and :op1 ( person_name_0 :arg0-of ( have-org-role-91 :arg1 ( person_name_1 :arg0-of ( have-org-role-91 :arg1 organization :arg2 ( director :mod creative ) ) ) :arg2 ( director :mod creative ) ) ) :op2 ( think-01 :arg0 person :arg1 ( provide-01 :arg0 person :arg1 ( campaign-01 :arg0-of ( seek-01 :arg1 ( avoid-01 :arg0 person :arg1 ( avoid-01 :arg0 person :arg1 ( avoid-01 :arg0 person :arg1 ( '' :arg0 political-party :arg1 political-party ) ) ) ) ) ) ) )
say-01 :arg0 organization_name_0 :arg1 ( contrast-01 :arg1 ( and :op1 ( say-01 :polarity - :arg0 person :arg1 ( anything :topic issue-02 ) ) :op2 ( remain-01 :arg1 i :arg3 optimistic :duration ( time :arg1-of long-03 ) ) ) :arg2 ( reach-01 :arg0 person :arg1 ( level :mod frustrate-01 ) :frequency sometimes ) )
think-01 :arg0 i :arg1 ( continue-01 :mode interrogative :arg1 ( and :op1 ( continue-01 :arg1 ( have-org-role-91 :arg2 member ) ) :op2 ( term :time future ) ) )
say-01 :arg0 ( thing :arg1-of state-01 ) :arg1 ( produce-01 :arg0 it :arg1 ( list :mod negative :arg0-of ( identify-01 :arg1 ( and :op1 sector :op2 ( area :location-of activity-06 ) :arg0-of ( permit-01 :polarity - :arg1 invest-01 ) ) ) ) )
possible-01 :polarity - :arg1 ( pretend-01 :arg0 i :arg1 ( objective :domain i :degree total ) )
say-01 :arg0 ( percentage-entity percentage-entity_num_0 ) :arg1 ( leave-13 :arg0 that :arg1 ( open-01 :arg1 ( thing :arg1-of ( choose-01 :arg0 they ) ) ) )
have-condition-91 :arg1 ( possible-01 :arg1 ( meet-03 :arg0 we ) ) :arg2 ( talk-01 :arg0 we :arg2 we )
seem-01 :arg1 ( benefit-01 :arg0 ( change-01 :arg1 direction ) :arg1 ( benefit-01 :arg0 change-01 :ord ( ordinal-entity ordinal-entity_num_0 ) ) :time ( produce-01 :arg0 it :arg1 ( ordinal-entity ordinal-entity_num_0 ) :location dinosaur ) )
announce-01 :arg0 i :arg1 ( hire-01 :arg0 it :arg1 ( person :quant num_0 :arg0-of work-01 :mod seasonal ) :arg2 ( period :time-of holiday ) ) :time ( year :mod same )
contrast-01 :arg2 ( find-02 :arg0 they :arg1 ( and :op1 ( change-01 :arg0 they :arg1 ( clothes :poss person_name_0 ) ) :op2 ( and :op1 ( seek-01 :arg0 they :arg1 ( symptom :poss person :location company_name_1 ) ) :op2 ( contact-01 :arg0 they :arg1 he :prep-on ( level :mod nation ) ) :op3 ( lab :location ( level :mod nation ) ) :op4 ( person_name_3 :arg0-of ( have-org-role-91 :arg1 police :arg2 chief ) ) :time ( conference :mod press ) ) ) )
multi-sentence :snt1 ( define-01 :arg1 ( pressure-01 :arg1 ( between :op1 location_name_0 :op2 ( meteorologul :mod ( less :degree more ) ) ) ) :arg2 ( pressure-01 :arg1 ( between :op1 location_name_0 :op2 ( meteorologul :mod ( less :degree more ) ) ) ) :mod also ) :snt2 ( add-01 :arg0 he )
put-01 :arg0 person_name_0 :arg1 it :arg2 ( and :op1 ( collect-01 :arg0 person :arg1 some ) :op2 ( bring-01 :arg0 person :arg1 person ) )
change-01 :arg0 you :arg1 ( word :quant few :accompanier ( person :location ( around :op1 they ) ) ) :mod just
put-02 :arg1 ( mask :arg1 oxygen ) :location ( room :mod locker )
put-02 :arg1 ( mask :arg1 oxygen ) :location ( room :mod locker )
and :op1 ( play-01 :arg0 ( person :mod cricket :arg0-of ( have-03 :arg1 ( factor :quant x ) ) ) :mod cricket ) :op2 ( see-01 :arg0 we :time ( early :degree more ) :time ( season :mod this ) :time ( score-01 :arg1 he :arg2 ( against :op1 ( product-of :op1 num_0 :op2 num_1 ) ) ) )
drop-01 :arg1 ( environment :beneficiary ( person :arg0-of ( undergo-28 :arg1 ( intervene-01 :mod surgical ) ) ) ) :arg2 ( person :quant num_0 ) :time ( until :op1 ( end-01 :arg1 ( year :ord ( ordinal-entity ordinal-entity_num_1 ) :part-of study ) ) )
say-01 :arg0 ( study :mod new ) :arg1 ( possible-01 :arg1 ( maintain-01 :arg1 ( benefit-01 :arg0 ( reduce-01 :arg1 weight ) :arg1 ( surgery-01 :arg2 ( reduce-01 :arg1 surgery-01 ) ) :time ( case-03 :arg1 ( obesity :arg1-of easy-05 ) ) ) ) )
and :op1 ( create-01 :arg1 ( animal :arg1-of ( create-01 :time ( era :mod another ) ) ) :time now ) :op2 ( adapt-01 :polarity - :arg1 animal :arg2 situation :time now )
advise-01 :arg0 person_name_0 :arg1 ( and :op1 ( person :arg0-of ( have-rel-role-91 :arg1 person :arg2 parent ) ) :op2 ( person :arg0-of teach-01 ) ) :arg2 ( or :op1 ( use-01 :arg0 person :arg1 ( or :op1 product :op2 wet ) :manner ( alcohol :polarity - ) ) :op2 ( leave-15 :polarity - :arg0 person :arg1 ( hand :part-of person ) :arg1-of ( cause-01 :arg0 ( reach-01 :arg0 person :arg1 hand ) ) ) )
advise-01 :arg0 person_name_0 :arg1 ( and :op1 ( person :arg0-of ( have-rel-role-91 :arg1 person :arg2 parent ) ) :op2 ( person :arg0-of teach-01 ) ) :arg2 ( and :op1 ( use-01 :arg0 person :arg1 ( or :op1 ( and :op1 ( wipe :mod wet ) :op2 ( wipe :mod wet ) ) ) :op2 ( hand :mod detergent ) ) ) :op2 ( let-01 :polarity - :arg0 person :arg1 ( reach-01 :arg1 child ) )
believe-01 :arg0 person_name_0 :arg1 this :manner certain
and :op1 ( have-03 :arg0 we :arg1 ( activity-06 :arg1-of differ-02 ) ) :op2 ( associate-01 :arg1 we :arg2 ( institution :arg0-of ( depend-01 :arg1 ( drug :arg0-of ( depend-01 :arg1 drug ) ) :mod only ) ) :frequency often ) :location location_name_0
multi-sentence :snt1 ( contrast-01 :arg2 ( improve-01 :arg0 ( '' :mod this ) :arg1 ( '' :mod ( control-01 :arg1 self ) :arg1-of improve-01 ) ) ) :snt2 ( reduce-01 :polarity - :arg0 ( and :op1 ( person :arg0-of research-01 ) :op2 ( person :arg0-of research-01 ) ) :arg1 ( rate :mod mortality ) :time ( after :op1 now :quant ( temporal-quantity temporal-quantity_num_0 :unit year ) ) )
say-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg1 ( body :poss body ) :arg3 ( lead-02 :arg0 person :arg1 body ) ) ) :arg1 ( move-01 :arg1 ( person :mod ( world :mod ( world :mod so ) ) ) :arg2 ( organization_name_1 :part-of ( organization_name_1 :part-of body ) ) :degree ( much :degree so :compared-to ( or :op1 ( lacasului :arg1 person ) :op2 ( and :op1 openness :op2 equality ) ) ) ) :medium wednesday
say-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg1 ( person_name_0 :arg1-of ( include-91 :arg2 ( world :mod both ) :arg3 ( neinsufletit :mod body ) ) ) :arg3 ( neinsufletit :mod body ) ) ) :arg1 ( person_name_1 :arg0-of ( have-org-role-91 :arg1 ( world :mod both ) :arg3 ( neinsufletit :mod body ) ) ) :arg4 team_name_1 :arg1-of ( cause-01 :arg0 ( church :polarity - :arg0 ( church :poss person ) :arg1 ( or :op1 lacasului :op2 lacasului ) :time no-longer ) )
person :arg0-of ( have-rel-role-91 :arg1 you :arg2 friend ) :arg0-of ( have-rel-role-91 :arg1 you :arg2 friend )
cause-01 :arg0 ( issue-02 :arg0 it :mod sensitive ) :arg1 ( want-01 :polarity - :arg0 ( and :op1 ( person :mod country_name_0 ) :op2 ( person :arg0-of ( have-org-role-91 :arg1 person_name_1 ) ) ) :arg1 ( appear-01 :arg1 person :location ( country :quant many ) ) :arg1-of ( cause-01 :arg0 ( react-01 :arg0 ( person :arg0-of migrate-01 :mod organization_name_2 ) :arg1 ( '' :mod head ) ) ) )
easy-05 :arg1 ( apply-01 :arg0 foreign :arg1 ( or :op1 ( permit-01 :arg1 ( fly-01 :mod permanent ) ) :op2 ( card :mod green :arg1-of ( call-01 :manner so ) ) :op3 ( thing :arg1-of ( require-01 :arg1-of ( possible-01 :polarity - ) ) ) :op4 ( process-02 :arg1 apply-01 ) :op5 ( process-02 :arg1 apply-01 ) ) ) :degree more
report
say-01 :arg0 ( person_name_0 :arg0-of ( have-org-role-91 :arg2 ( minister :mod prime ) ) ) :arg1 ( important :domain ( and :op1 ( important :domain ( organization_name_1 :mod ( beyond :op1 ( elect-01 :arg0-of lead-02 ) ) ) ) :op2 ( message-01 :arg0 person :arg1 ( want-01 :arg0 government-organization :arg1 ( continue-01 :arg0 government-organization :arg1 ( government-organization :arg0-of govern-01 :poss government-organization ) :condition ( decide-01 :arg0 party :arg1 ( go-02 :arg0 party :arg4 political-party ) ) ) ) ) ) ) :medium ( tuesday :arg0 person )
change-01 :polarity - :arg1 it :arg1-of ( cause-01 :arg0 ( and :op1 ( have-03 :arg0 we :arg1 ( thing :arg2-of ( result-01 :arg1 ( thing :arg2-of result-01 ) ) ) :degree very ) :op2 ( situation :mod finance :domain that :time middle ) ) )
and :op2 ( have-03 :arg0 you :arg1 ( case :mod dramatic :topic ( child :arg1-of ( lie-07 :arg2 ( and :op1 country_name_0 :op2 ( thing :arg1-of ( opine-01 :arg0 public ) ) ) ) ) ) :time then )
drop-01 :arg1 ( office :mod new :poss organization_name_0 :mod new )
headquarter-01 :arg1 organization_name_0 :mod new :mod ''
talk-01 :arg0 we :arg1 ( invest-01 :mod massive ) :arg1-of ( cause-01 :arg0 ( money :quant many ) )
sure-02 :arg0 i :arg1 ( ready-02 :arg1 ( person :arg0-of play-01 ) :arg2 ( participate-01 :arg0 person :arg1 tournament ) )
rule :mod other :domain ( something :mod else )
say-01 :arg0 ( politician :mod continent_name_0 ) :arg1 ( say-01 :polarity - :arg0 politician :arg1 ( slander :polarity - :mod such ) )
receive-01 :arg0 ( injure-01 :mod other ) :arg1 ( amount :quant 1/2 :arg1-of ( include-91 :arg2 ( amount :mod that ) ) )
include-91 :arg1 ( say-01 :arg0 ( person :quant num_0 :arg1-of ( include-91 :arg2 ( person :quant num_1 ) ) ) :arg1 ( upset-01 :arg1 person ) :condition ( win-01 :arg0 person_name_0 :arg1 ( race :mod nominate-01 ) ) ) :arg2 ( person :quant num_1 :arg1-of ( include-91 :arg2 ( person :quant num_1 ) ) )
be-located-at-91 :arg1 ( and :op1 ( person :arg0-of ( have-org-role-91 :arg1 ( branch :mod outstanding :part-of political-party_name_0 ) :arg2 secretary ) ) :op2 ( person_name_1 :arg0-of ( have-org-role-91 :arg2 senator ) ) :op3 ( person_name_2 :arg0-of ( have-org-role-91 :arg2 senator ) ) :op4 ( person_name_3 :arg0-of ( have-org-role-91 :arg2 senator ) ) :op5 ( person_name_3 :arg0-of ( have-org-role-91 :arg2 senator ) ) :op6 ( person_name_3 :arg0-of ( have-org-role-91 :arg1 ( government-organization_name_4 :poss organization_name_5 ) :arg2 ( chairman :mod interim ) ) ) :op7 ( person_name_6 :arg0-of ( have-org-role-91 :arg1 party :arg2 ( chairman :mod interim ) ) ) ) :arg2 party :mod short
contrast-01 :arg1 ( rise-01 :arg1 ( revenue :mod ground :mod division ) :arg2 ( percentage-entity percentage-entity_num_0 ) ) :arg2 ( stall-01 :arg1 revenue :arg1-of ( cause-01 :arg0 ( cost-01 :arg1 revenue :arg2 ( and :op1 ( packages :mod large ) :op2 ( insurance :poss revenue ) ) :arg1-of ( high-02 :degree more ) ) :mod virtual ) )
claim-01 :arg0 man :arg1 ( damage-01 :arg0 car :arg1 ( and :op1 ( life :poss he ) :op2 ( family :arg1-of ( have-org-role-91 :arg0 he :arg2 member ) ) ) )
subject :arg1-of resemble-01
tender :arg0 political-party_name_0 :duration ( period :op1 ( temporal-quantity temporal-quantity_num_0 :unit year ) )
and :op2 ( recommend-01 :arg1 ( note-01 :arg0 we :arg1 ( job :arg1-of ( get-01 :arg0 we ) ) ) )
define-01 :polarity - :arg0 ( job :poss they ) :arg1 ( personality :poss they ) :arg1-of ( show-01 :arg0 ( person :arg0-of ( have-rel-role-91 :arg1 they :arg2 friend ) ) )
contrast-01 :arg2 ( want-01 :polarity - :arg0 you :arg1 ( go-02 :arg0 you :direction ahead ) )
equal-01 :arg1 ( number :quant-of ( person :arg0-of ( flocked :arg1 computer :purpose ( put-01 :arg0 person :arg1 ( hand :part-of person ) :arg2 bids ) ) ) ) :arg2 ( collapse-01 :arg1 ( website :poss ( website :quant several ) ) ) :time ( year :mod last )
address-03 :arg0 person_name_0 :arg2 ( question-01 :quant num_1 :arg1-of ( include-91 :arg2 ( question-01 :quant num_1 :arg1-of ( right-05 :arg2 ( examine-01 :arg0 ( and :op1 media :op2 ( person :arg0-of ( have-org-role-91 :arg1 ( government-organization :arg0-of govern-01 ) :arg2 member ) ) ) ) :manner close ) ) ) ) :ord ( ordinal-entity ordinal-entity_num_0 )
dismantle-01 :arg0 person_name_0
contrast-01 :arg2 ( and :op1 ( get-22 :arg0 i :arg1 ( point :location-of ( care-01 :polarity - :arg0 i :time anymore ) ) ) :op2 ( saddens :arg0 i :arg1 i ) )
cause-01 :arg0 ( thing :arg2-of ( obligate-01 :arg1 ( service :poss you ) ) ) :arg1 ( be-located-at-91 :arg1 you :arg2 institution :arg1-of ( cause-01 :arg0 ( thing :arg2-of ( obligate-01 :arg1 ( service :poss you ) ) ) ) :arg1-of ( say-01 :arg0 he ) :time ( after :op1 ( session :mod meet-03 :poss ( government-organization :arg0-of ( govern-01 :arg1 government-organization_name_0 ) ) :manner joint ) ) )
location_name_0
aim-02 :arg1 horror :arg2 ( person :arg0-of ( passionate :arg1 art ) :quant all ) :concession ( or :op1 age :op2 experience )
address-01 :arg1 golf-01 :arg2 ( person :mod all :arg0-of ( passionate :arg1 art ) ) :concession ( or :op1 age :op2 experience )
multi-sentence :snt1 ( look-01 :arg0 i :arg1 ( magrebieni :location ( country_name_0 :location country_name_1 ) ) ) :snt2 ( enclavizati :quant all :domain they )
and :op1 ( colleague :arg0 ( person_name_0 :arg0-of ( have-org-role-91 :arg1 ( location_name_1 :poss person ) :arg2 colleague ) ) :arg1 person :time day ) :op2 ( receive-01 :arg0 person_name_2 :arg1 ( break :arg1-of resemble-01 :prep-against country_name_3 ) ) :op3 ( have-03 :polarity - :arg0 i :arg1 problem :prep-with that )
and :op1 ( cure :arg1 ( cold :mod zaharat ) :arg2 ( percentage-entity percentage-entity_num_0 :mod just ) :arg1-of complete-02 ) :op2 ( cured :arg1 cold :arg2 ( subject :quant ( between :op1 num_0 :op2 num_1 :mod only ) ) :arg1-of complete-02 )
understand-01 :arg1 ( obligate-01 :arg2 ( give-01 :arg0 ( person :quant many ) :arg1 ( other :mod each ) ) )
remain-01 :arg1 person_name_0 :arg3 optimistic :time ( after :op1 ( event :arg1-of ( bring-01 :arg0 person :arg2 ( and :op1 ( eye :part-of person ) :op2 ( person :arg0-of play-01 ) :arg0-of ( keep-04 :arg1 person :arg2 ( under :op1 ( temporal-quantity temporal-quantity_num_0 :unit month :mod at-least ) ) ) ) ) ) ) :arg1-of ( cause-01 :arg0 ( possible-01 :arg1 ( play-01 :arg0 person_name_1 :mod again :time ( season :mod this ) ) ) )
contrast-01 :arg1 ( cause-01 :arg1 ( move-01 :arg0 we :arg2 ( threshold :mod despair :mod ( pragmatic :degree more ) ) ) ) :arg2 ( goal :arg1-of remain-01 )
cost-01 :arg1 this :arg2 all :mod certain
multi-sentence :snt1 ( good :degree more :domain ( do-02 :arg1 ( environment :mod such ) :manner ( good :degree more ) ) ) :snt2 ( say-01 :arg0 ( person :arg0-of ( analyze-01 :arg1 income ) :arg1-of fix-03 ) :arg1 ( analyze-01 :arg0 ( person_name_0 :arg0-of ( analyze-01 :arg1 income ) :arg1-of fix-03 ) :location peninsula_name_1 ) )
multi-sentence :snt1 ( possible-01 :arg1 ( calculator :arg0 you :arg1 ( accesand :mod imc ) ) ) :snt2 ( 1d0zqdv :quant num_0 :mod usa.gov )
say-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg1 city_name_0 :arg2 ( president :mod vice ) ) ) :arg1 ( take-01 :arg0 person :arg1 ( person :arg0-of play-01 :source storm ) :arg3 storm :purpose ( take-01 :arg0 person :arg1 person :arg3 ( team :name ( name :op1 throne :op2 '' :op3 '' :op4 '' :op5 final :op6 final :op7 final :op6 final :op7 final ) ) :time ( evening :mod friday ) ) )
add-01 :arg0 he :arg1 ( solve-01 :polarity - :arg0 force :arg1 ( problem :mod this ) :time ever )
iplayer :arg1-of ( make-01 :arg0 ( and :op1 organization_name_0 :op2 controllers ) )
say-01 :arg0 person_name_0 :arg1 ( and :op1 ( try-01 :arg0 ( city-district_name_1 :name ( name :op1 racing :op2 racing ) :mod racing ) :arg1 ( infiltrate :arg0 or :arg1 spy-01 ) :time ( year :mod last ) ) :op2 ( threaten-01 :arg0 or :arg2 ( withdraw-01 :arg0 or :arg2 racing ) ) :time immediate )
provide-01 :arg0 ( branch :mod ( branch :mod ground ) :poss organization_name_0 ) :arg1 ( and :op1 ( person_name_1 :arg0-of ( have-org-role-91 :arg2 head-of-state ) ) :op2 ( person_name_3 :arg0-of ( have-org-role-91 :arg2 empress ) ) :mod close ) :time ( after :op1 ( elect-01 :arg1-of internal-02 ) )
provide-01 :arg0 organization_name_0 :arg1 ( swim-01 :arg0 organization :arg2 ( courtyard :arg1 literature ) ) :time ( after :op1 ( temporal-quantity temporal-quantity_num_0 :unit year :arg1-of ( remain-01 :arg3 close-01 ) ) ) :time ( after :op1 ( temporal-quantity temporal-quantity_num_1 :unit year :arg1-of ( remain-01 :arg3 close-01 ) ) )
say-01 :arg0 he :arg1 ( serve-01 :arg0 ( service :mod civil :mod brief ) :arg1 ( service :mod civil :mod brief ) :time ( after :op1 ( transport-01 :arg1 ( island_name_0 :prep-with ( body :consist-of ( body :consist-of ( body :consist-of ( body :consist-of ( body :consist-of ( body :consist-of ( body :consist-of ( body :consist-of ( body :consist-of ( body :consist-of ( body :consist-of ( body :consist-of ( body :poss person_name_1 ) ) ) ) ) ) ) ) ) ) ) ) ) ) :arg2 ( district_name_0 :mod jihad :location-of ( hold-04 :arg1 ( and :op1 ( religioas :mod ceremonial ) :op2 military ) ) ) ) ) :time ( morning :quant num_0 ) )
and :op1 ( restore-01 :arg0 we :arg1 fence ) :op2 ( and :op1 ( strengthen-01 :arg0 we :arg1 ( security :poss country_name_0 ) ) :op2 ( protect-01 :arg0 we :arg1 ( security :poss country ) :manner ( mean :mod any ) ) :op3 ( say-01 :arg0 person :arg1 ( person_name_1 :arg0-of ( have-org-role-91 :arg1 government-organization :arg2 ( person :arg0-of ( advise-01 :arg2 security ) :arg0-of ( have-org-role-91 :arg1 government-organization :arg2 ( person :arg0-of ( advise-01 :arg2 security ) ) ) ) ) ) ) )
announce-01 :arg1 organization_name_0 :time ( decide-01 :arg0 congress )
announce-01 :arg0 organization_name_0 :time ( make-01 :arg0 organization :arg1 congress )
and :op1 ( take-out-11 :arg0 ( or :op1 ( person :arg0-of ( have-org-role-91 :arg1 ( team :mod nation ) ) ) :op2 ( person :arg0-of ( have-org-role-91 :arg1 organization_name_0 ) ) :op3 ( person_name_1 :arg0-of ( have-org-role-91 :arg1 organization :arg3 ( lead-02 :arg0 or ) ) ) ) :arg1 ( over :op1 ( temporal-quantity temporal-quantity_num_0 :unit year ) ) :time ( before :op1 now :quant ( temporal-quantity temporal-quantity_num_1 :unit year ) ) ) :op2 ( role :mod coaching :time ( future :poss ( and :op1 openness :op2 ( team :mod patroneaza ) ) ) )
and :op1 ( take-out-11 :arg0 ( or :op1 ( person :arg0-of ( have-org-role-91 :arg1 ( team :mod nation ) ) ) :op2 ( person :arg0-of ( have-org-role-91 :arg1 organization_name_0 ) ) :op3 ( person_name_1 :arg0-of ( have-org-role-91 :arg1 organization :arg3 ( lead-02 :arg0 or ) ) ) ) :arg1 ( over :op1 ( temporal-quantity temporal-quantity_num_0 :unit year ) ) :time ( after :op1 ( fortunate-01 :polarity - ) ) ) :op2 ( coach :arg0 team :arg1 team :time future )
say-01 :arg1 ( amr-unknown :location there ) :arg2 amr-unknown
mr :polarity - :arg0 ( thing :arg1-of ( decide-01 :arg0 person_name_0 ) ) :arg1 ( attend-02 :arg1 ( park_name_0 :mod nation ) )
and :op1 ( be-located-at-91 :arg1 boat :arg2 location_name_0 ) :op2 ( head-02 :arg0 boat :arg1 ( island :mod greek :mod kos ) )
say-01 :arg0 ( organization_name_0 :arg1-of ( list-01 :arg2 ( exchange-01 :arg1 stock :location city_name_1 ) ) ) :arg1 ( sell-01 :arg0 organization :arg1 ( monetary-quantity monetary-quantity_num_0 :unit ( dollar :mod new ) :arg1-of ( value-01 :arg2 ( monetary-quantity monetary-quantity_num_0 :unit ( dollar :mod country ) ) ) ) :arg2 ( pay-01 :arg0 organization :arg3 debt ) )
highlight-01 :arg0 person_name_0 :arg1 ( match-03 :arg0 ( and :op1 storm :op2 roosters ) :arg1-of ( compare-01 :arg2 ( match-03 :arg0 ( and :op1 organization_name_1 :op2 organization_name_2 ) ) ) ) :mod also
and :op1 ( strives :arg0 person_name_0 :arg1 ( music :mod classical :domain ( music :mod classical ) ) ) :op2 ( and :op1 ( have-03 :arg0 person :arg1 ( taste :mod die-01 ) ) :op2 ( taste :arg0 music :arg1 music ) :op3 ( '' :arg0 music :arg1 music ) )
lesson :arg1-of lesson
lesson :domain that
and :op1 ( high-02 :arg1 tension :location ( firm :mod old ) ) :op2 ( want-01 :polarity - :arg0 you :arg1 ( see-01 :arg0 you :arg1 ( match-03 :mod this ) ) :mod just )
contrast-01 :arg2 ( mean-01 :arg2 ( work-09 :polarity - :arg1 politiensti ) :manner simple )
contrast-01 :arg2 ( mean-01 :arg2 ( work-09 :polarity - :arg1 it :mod just ) )
reveal-01 :arg0 person_name_0 :arg1 ( thing :manner-of ( break-up-08 :arg0 he :arg1 ( team :mod nation :mod country_name_1 ) :mod last ) )
absurd :mod still :domain it :mod still
say-01 :arg0 i :arg1 ( announce-01 :arg0 i :arg1 ( run-02 :arg0 person_name_0 :arg1 office :location ( end-01 :arg1 ( meet-03 :arg0 ( organization_name_1 :part-of organization_name_2 ) ) ) ) ) :arg2 i
announce-01 :arg0 i :arg1 ( '' :mode interrogative :arg0 ( person_name_0 :arg0-of ( lead-02 :arg1 political-party ) ) :arg1 i :time ( end-01 :arg1 ( meet-03 :arg0 ( organization_name_2 :part-of organization_name_2 ) ) ) )
multi-sentence :snt1 ( '' :arg1 ( thing :arg1-of announce-01 :mod important ) :arg2 ( between :op1 ( between :op1 num_0 :op2 ( between :op1 num_0 :op2 num_1 ) ) :op2 ( date-entity month_date-entity_0 day_date-entity_0 ) ) ) :snt2 ( say-01 :arg0 i :arg1 advertise-01 :arg2 ( advertise-01 :quant num_1 :arg1-of ( use-01 :arg2 ( and :op1 ( fonturile :mod brandingul ) :op2 ( subway :poss city_name_0 ) ) ) ) ) :snt3 ( line :mod organization_name_1 )
ask-02 :arg1 ( contribute-01 :arg0 ( person :arg0-of ( deal-01 :arg2 arms ) :quant lot ) :arg2 ( stop-01 :arg0 person :arg1 ( fair :mod arm ) ) ) :arg2 ( person :arg0-of ( deal-01 :arg2 arms ) :quant lot ) :time ( year :mod this )
want-01 :arg0 i :arg1 ( know-01 :arg0 i :arg1 ( and :op1 ( person :arg0-of ( have-rel-role-91 :arg1 i :arg2 parent ) ) :op2 ( person :arg0-of ( have-rel-role-91 :arg1 i :arg2 parent ) ) :op3 ( person_name_1 :arg0-of ( have-rel-role-91 :arg1 i :arg2 parents ) ) ) )
contrast-01 :arg2 ( accept-01 :arg0 ( person :quant ( percentage-entity percentage-entity_num_0 ) :arg1-of ( include-91 :arg2 ( loan-01 :location francs ) ) ) :arg1 ( and :op1 ( accept-01 :arg0 ( person :quant ( percentage-entity :value num_0 ) :arg0-of ( loan-01 :location francs ) ) :arg1 ( loan-01 :location francs ) :arg1-of ( cause-01 :arg0 ( reduce-01 :arg1 ( balance-01 :arg1 ( and :op1 risk-01 :op2 manage-01 ) ) ) ) ) :op2 ( reduce-01 :arg1 ( reduce-01 :arg1 ( percentage-entity percentage-entity_num_0 ) :arg2 ( balance-01 :arg1 and ) ) :mod further ) ) ) :location ( hand :mod other )
make-01 :arg0 ( artists :arg1-of ( exhibit-01 :location ( and :op1 ( design-01 :arg1 ( cruel :mod drugs elimination museum ) ) :op2 location_name_0 ) ) ) :arg1 ( thread :quant num_0 )
produced :arg0 ( paper :arg1-of ( produce-01 :arg0 group ) :arg1-of ( produce-01 :arg0 group ) ) :arg1 ( thing :arg0-of ( evidence-01 :arg1 ( affect-01 :arg0 ( majority :arg1-of ( include-91 :arg2 ( criteria :arg1-of ( include-91 :arg2 criteria :arg3 majority ) ) ) ) :arg1 ( and :op1 person_name_0 :op2 ( person :arg0-of ( have-org-role-91 :arg2 capewell ) ) :op3 ( person :arg0-of ( have-org-role-91 :arg2 '' ) ) :op4 ( person :arg0-of ( have-org-role-91 :arg2 '' ) ) :op5 ( person :arg0-of ( have-org-role-91 :arg2 '' ) ) ) ) ) )
be-located-at-91 :arg1 ( and :op1 ( person :mod country_name_0 ) :op2 ( person :location country_name_1 ) :op3 ( person :mod country ) ) :arg2 ( thing :arg1-of ( match-01 :arg2 ( match-03 :location country_name_2 ) :time ( date-entity day_date-entity_0 month_date-entity_0 year_date-entity_0 ) :location ( and :op1 ( talk-02 :arg2 country :time ( date-entity month_date-entity_0 day_date-entity_0 ) ) :op2 ( be-located-at-91 :arg1 country :arg2 country :time ( date-entity month_date-entity_1 day_date-entity_1 ) :location country ) :op3 ( be-located-at-91 :arg1 country :arg2 country_name_7 ) :op4 ( be-located-at-91 :arg1 country :arg2 country_name_7 ) :op5 et-cetera ) ) :time ( date-entity month_date-entity_0 day_date-entity_0 ) :location country )
differ-02 :time today :time ( month :mod recent )
say-01 :arg0 person_name_0
ask-01 :arg0 he :arg1 ( and :op1 ( person :arg1-of ( know-01 :polarity - ) :arg0-of ( send-01 :arg1 picture ) ) :op2 ( ask-02 :arg0 person :arg1 ( send-01 :arg0 person :arg1 ( picture :mod more ) :arg2 person ) :arg2 person ) ) :arg2 ( person :arg1-of ( know-01 :polarity - ) )
contrast-01 :arg1 ( say-01 :arg0 ( person :arg0-of vote-01 :mod democrat :quant ( rate-entity-91 :arg1 num_0 :arg2 ( temporal-quantity temporal-quantity_num_0 :unit month ) ) ) :arg1 ( say-01 :arg0 person :arg1 ( support-01 :arg0 person :arg1 ( person :arg0-of vote-01 :mod democrat ) ) ) ) :arg2 ( low-04 :arg1 ( number :quant-of ( person :arg0-of vote-01 :mod republican ) :arg0-of ( say-01 :arg1 ( thing :arg1-of ( same-01 :arg2 ( product-of :op1 ( percentage-entity percentage-entity_num_0 ) :op2 ( percentage-entity percentage-entity_num_1 ) ) ) ) ) ) )
help-01 :arg0 ( exercise :mod exercise :mod this ) :arg1 ( and :op1 you :op2 person ) :arg2 ( and :op1 you :op2 person :arg1-of ( like-01 :arg0 you :arg1-of ( cause-01 :arg0 ( and :op1 ( deluge :arg1 it ) :op2 ( have-03 :arg0 ( one :arg1-of ( have-03 :arg0 you ) ) :arg1 boat ) ) ) ) )
and :op2 ( be-located-at-91 :arg1 ( class :location country_name_0 ) :arg2 ( sense-01 :arg0 class :arg1 ( and :op1 ( consistent-01 :arg1 word :degree relative ) :op2 ( consistent-01 :arg1 word :degree relative ) ) ) :time then )
multi-sentence :snt1 ( and :op2 ( be-located-at-91 :mode interrogative :arg1 ( person :mod country_name_0 ) :arg2 ( class :mod class ) :time then ) ) :snt2 ( sense :mod ( and :op1 ( consistent-01 :arg1 word :degree relative ) :op2 ( consistent-01 :arg1 word :degree relative ) ) )
and :op1 ( possible-01 :arg1 ( contain-01 :arg0 ( person :arg0-of ( have-rel-role-91 :arg2 father ) ) :arg1 ( tears :arg0 person ) ) :degree bare ) :op2 ( continue-01 :arg1 ( hand :part-of treadmill ) ) :degree bare
require-01 :arg1 ( browsing :arg1 store :mod minimum :mod minimum ) :duration ( temporal-quantity temporal-quantity_num_0 :unit hour )
cause-01 :arg0 ( sense-02 :arg1 it :mod common ) :arg1 ( cause-01 :arg0 ( go-02 :arg0 you :arg4 ( cioburi :arg1-of actual-02 ) ) :arg1 this :mod only )
say-01 :arg0 ( and :op1 person_name_0 :op2 person_name_1 ) :arg1 ( claim-01 :arg0 organization_name_2 :arg1 ( evidence-01 :polarity - :arg1 ( factor :domain ( factor :arg0-of ( cause-01 :arg1 ( smoke-02 :arg1 ( or :op1 ( person :arg0-of ( have-rel-role-91 :arg1 child :arg2 child ) ) :op2 ( '' :mod non-smokers ) ) ) ) ) ) :time so-far ) )
and :op1 ( agree-01 :polarity - :arg0 country_name_0 ) :op2 ( apply-01 :polarity - :arg0 country :arg1 ( measure-02 :arg0 country :arg1 ( or :op1 ( measure-02 :arg0 ( dog :arg0-of guard-01 ) :arg1 ( or :op1 ( fence :mod guard-01 ) :op2 ( dog :arg0-of guard-01 ) :op3 ( slash :op1 ( fence :mod theater ) :op2 ( fence :mod theater ) ) :arg2 gun ) ) ) ) )
and :op1 ( lose-02 :arg0 ( person :quant ( some :op1 num_0 ) ) :arg1 ( life :poss person ) :arg1-of ( cause-01 :arg0 ( associate-01 :arg1 person :arg2 ( disease :arg1-of ( associate-01 :arg2 smoke-02 ) ) ) ) ) :op2 ( incurred :arg0 government-organization_name_0 :arg1-of ( cause-01 :arg0 ( reach-01 :arg0 government-organization :arg1 ( monetary-quantity monetary-quantity_num_1 :unit ( dollar :mod renminbi ) ) ) ) )
clear-06 :arg1 ( want-01 :polarity - :arg0 ( person :arg0-of ( have-org-role-91 :arg1 organization_name_0 :arg2 president ) ) :arg1 ( force-01 :arg0 person :arg1 ( vote-01 :arg0 person :arg1 council ) ) )
and :op1 diet :op2 water :op3 water :location border
infer-01 :arg1 ( recommend-01 :arg1 ( do-02 :arg1 amr-unknown ) )
expect-01 :arg1 ( bury-01 :arg1 person_name_0 :arg2 ( thursday :location peninsula_name_1 ) :manner ( honours :mod military ) )
contrast-01 :arg1 ( about :polarity - :domain it :topic money ) :arg2 ( feel-01 :arg0 i :arg1 ( thing :arg1-of ( feel-01 :arg0 i :mod also ) ) )
contrast-01 :arg1 ( propose-01 :arg0 i :arg1 ( increase-01 :arg0 ( person :arg0-of ( have-rel-role-91 :arg1 she :arg2 boss ) ) :arg1 ( salary :mod substantial ) :mod substantial ) ) :arg2 ( refuse-01 :arg1 ( increase-01 :arg1 salary ) )
and :op2 ( difficult :domain ( excluzi :arg1 something :arg2 ( scenario :arg1-of possible-01 ) ) )
say-01 :polarity - :arg0 i :arg1 ( innocent-01 :arg1 person_name_0 )
meet-03 :arg0 person_name_0 :arg1 ( and :op1 ( person :arg0-of ( have-rel-role-91 :arg2 mother ) :mod biology ) :op2 ( person :arg0-of ( have-rel-role-91 :arg2 brother ) ) )
accident :time ( evening :time ( evening :mod friday ) ) :arg1-of ( cause-01 :arg0 ( crash-01 :arg1 work-of-art_name_0 :location ( side :mod east :part-of ( roof :part-of ( roof :part-of location_name_0 ) ) ) ) )
sublinaza :arg0 ( court :mod country_name_0 ) :arg1 ( and :op1 ( lack-01 :arg0 ( something :arg1-of ( include-91 :arg2 ( person :arg0-of defend-01 ) ) ) :arg1 ( quality :arg1-of moral-02 :poss ( person :arg1-of injure-01 ) ) ) :op2 ( possible-01 :polarity - :arg1 ( violate-01 :arg1 ( and :op1 ( free-04 :arg1 person :mod physical ) :op2 ( free-04 :arg1 person :mod physical ) ) :prep-under ( pretext :mod any ) :time motivation ) ) )
possible-01 :polarity - :arg1 ( come-01 :arg1 everyone :arg4 continent_name_0 )
see-01 :arg0 he :arg1 enough
amend-01 :arg1 ( family :arg1-of ( have-org-role-91 :arg0 family :arg2 member ) ) :arg1-of ( cause-01 :arg0 ( and :op1 ( information :mod erroneous :source ( and :op1 pliant :op2 controllers ) :arg0-of ( apply-02 :arg1 law :arg2 ( blood :mod '' ) ) ) ) )
throw-01 :arg0 organization_name_0 :arg1 bomb :arg2 ( interview-01 :arg1 ( person :arg0-of ( say-01 :arg1 ( try-01 :arg0 ( department :mod integrity ) :arg1 ( spy-01 :arg0 department :arg1 graphies ) ) ) ) ) :time ( early :degree more :time ( early :degree more ) )
cause-01 :arg1 ( invite-01 :polarity - :arg0 ( person :arg0-of ( have-rel-role-91 :arg1 you :arg2 friend ) ) :arg1 coffee :location location_name_0 :arg1-of ( cause-01 :arg0 amr-unknown ) :condition ( participate-01 :arg0 ( center :part-of comedy :arg1-of ( hold-04 :arg0 ( center :part-of comedy ) :time ( week :mod last ) ) :arg1-of ( hold-04 :arg0 ( center :part-of comedy ) :time ( week :mod last ) ) :arg1-of ( hold-04 :arg0 ( center :part-of comedy ) :time ( week :mod last ) ) ) ) )
mean-01 :polarity - :arg1 this :arg2 ( possible-01 :arg1 ( begin-01 :arg0 ( person :mod country_name_0 ) :arg1 ( search-01 :arg0 person :arg2 ( draftsman :mod another ) ) ) )
will-02 :arg1 ( maintain-01 :arg1 ( and :op1 balance-01 :op2 unity ) :location party ) :arg1-of broad-02
eliminate-01 :polarity - :arg0 i :arg1 ( version :mod any :mod win-01 )
and :op1 ( play-01 :arg1 ( match-03 :quant num_0 :mod test ) :prep-against ( person :quant num_1 :arg0-of ( strike-02 :mod good ) ) ) :op2 ( contrast-01 :arg1 ( judge-01 :arg1 ( person :arg0-of play-01 :mod cricket ) :arg1-of harsh-02 ) :arg2 ( judge-01 :arg1 ( person :arg0-of play-01 :mod cricket ) :arg2 ( thing :arg2-of result-01 ) :arg1-of harsh-02 ) )
start-01 :arg1 ( person_name_0 :location peninsula_name_1 ) :location location_name_1
promise-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg2 authority ) ) :arg1 ( and :op1 ( continue-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg2 authority ) ) :arg1 ( pilgrimages :arg0 person :arg1 city_name_0 ) ) :op2 ( reach-01 :arg0 ( thousands :mod pilgrims ) :arg1 town :degree further ) ) :time already
multi-sentence :snt1 ( possible-01 :arg1 ( imagine-01 :arg0 you :arg1 ( market-01 :arg0 you :arg1 ( market-01 :mod collective ) :arg2 ( musicians :mod collective ) ) ) ) :snt2 ( ask-01 :arg0 i :arg1 artists )
unites :arg0 ( family :arg1-of ( have-org-role-91 :arg0 person :arg2 member ) ) :arg1 ( destiny :poss family ) :arg2 ( face :part-of family ) :location city_name_1 :time ( begin-01 :arg1 ( begin-01 :arg0 ( family :arg1-of ( have-org-role-91 :arg0 person :arg2 member ) ) ) ) :location location_name_0 :mod ( again :mod once )
seem-01 :arg1 ( and :op1 ( accuse-01 :arg1 it :arg2 ( site :location-of crash-01 ) ) :op2 ( aid-01 :arg0 ( and :op1 ( aid-01 :ord ( ordinal-entity ordinal-entity_num_0 ) ) :op2 ( offence :mod traffic :mod other ) ) :arg2 it ) )
contrast-01 :arg2 ( set-02 :arg0 document :arg1 ( objective :mod strategy :quant several :arg1-of ( relate-01 :arg2 immigrate-01 ) :arg1-of ( relate-01 :arg2 immigrate-01 ) :example ( and :op1 ( promote-02 :arg1 ( migration :arg1-of legal-02 ) ) :op2 ( control-01 :arg1 ( wave-04 :arg1 ( and :op1 ( territory :arg1 ( territory :poss country_name_0 ) ) :op2 ( measure-02 :arg1 ( move-01 :arg1 ( measure-02 :arg1 ( move-01 :arg1 ( and :op1 ( measure-02 :arg1 ( move-01 :arg1 ( and :op1 ( measure-02 :mod away ) :op2 ( measure-02 :mod restrictive ) ) ) :arg2 ( and :op1 away :op2 ( measure-02 :arg1 ( move-01 :arg1 system ) ) ) ) ) ) ) ) ) ) ) ) ) ) :mod also :quant several )
admit-01 :polarity - :arg1 ( and :op1 ( forget-01 :arg0 i :arg1 ( eye :part-of i ) ) :op2 ( be-located-at-91 :polarity - :arg1 i :arg2 there ) ) :time ( come-12 :arg1 ( and :op1 ( person :arg0-of ( have-rel-role-91 :arg1 he :arg2 wife ) ) :op2 ( man :source location_name_0 ) ) )
and :op2 ( possible-01 :polarity - :arg1 ( and :op1 ( absorb :arg0 ( government-organization :arg0-of ( govern-01 :arg1 country_name_0 ) ) :arg1 ( fund :poss continent_name_1 ) ) :op2 ( make-01 :arg0 government-organization :arg1 ( or :op1 road :op2 road :op3 ( school :arg1-of modern-02 ) :op4 ( school :arg1-of modern-02 ) :op5 ( school :arg1-of modern-02 ) ) ) ) :op3 ( ensure-01 :arg0 government-organization :arg1 ( or :op1 ( pay-01 :arg1 job ) :op2 ( keep-02 :arg1 ( or :op1 ( pay-01 :arg1 job ) :op2 ( keep-01 :arg1 job ) ) ) ) ) )
and :op2 ( possible-01 :polarity - :arg1 ( and :op1 ( absorb :arg0 ( government-organization :arg0-of ( govern-01 :arg1 country_name_0 ) ) :arg1 ( fund :poss continent_name_1 ) ) :op2 ( make-01 :arg0 government-organization :arg1 ( or :op1 ( road :arg1-of modern-02 ) :op2 ( road :arg1-of modern-02 ) :op3 school :op4 school :op5 school ) :purpose ( ensure-01 :arg0 government-organization :arg1 ( healthcare :mod decent ) ) ) :purpose ( ensure-01 :arg0 government-organization :arg1 ( or :op1 ( pay-01 :arg1 job ) :op2 ( keep-01 :arg1 job ) ) :location home ) ) )
multi-sentence :snt1 ( report-01 :polarity - :arg0 police :arg1 incident ) :snt2 ( cause-01 :mode interrogative :arg0 ( understand-01 :arg0 ( person :arg0-of drive-01 ) :arg1 car ) :arg1 ( understand-01 :mode interrogative :arg0 person :arg1 ( and :op1 ( person :arg0-of ( have-org-role-91 :arg2 ( commissioner :mod vice ) ) ) :op2 ( person :arg0-of ( have-org-role-91 :arg2 commissioner ) ) :op3 ( person :arg0-of ( have-org-role-91 :arg2 commissioner ) ) :op4 ( person :arg0-of ( have-org-role-91 :arg2 commissioner ) ) :op5 ( person :arg0-of ( have-org-role-91 :arg2 commissioner ) ) :op6 ( person :arg0-of ( have-org-role-91 :arg2 commissioner ) ) :op7 ( person :arg0-of ( have-org-role-91 :arg2 commissioner ) ) :op7 ( person :arg0-of ( have-org-role-91 :arg2 commissioner ) ) ) ) )
subject :arg1-of resemble-01 :domain ( subject :arg1-of resemble-01 )
and :op1 ( wait-01 :arg1 ( person :mod ( age-01 :arg1 person :arg2 ( temporal-quantity temporal-quantity_num_0 :unit year ) ) ) :location line :arg1-of ( cause-01 :arg0 ( wait-01 :arg1 person :arg2 ( bier :arg0 person :arg1 church :location ( street :location side ) ) ) ) ) :op2 ( be-located-at-91 :arg1 person :arg2 person_name_0 )
expect-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg1 ( varstele :quant all ) :arg2 hundreds ) ) :arg1 ( file-01 :arg0 person :arg1 church :arg1-of ( be-located-at-91 :arg2 ( enter-01 :arg0 person :arg1 church :time ( until :op1 ( out :op1 street ) ) ) ) ) :purpose ( move-01 :arg0 person :arg2 ( person :arg0-of ( carry-01 :arg1 island_name_0 :accompanier ( person_name_0 :arg0-of ( have-org-role-91 :arg1 body :arg2 neinsufletit ) ) ) ) )
and :op1 ( mix-01 :arg1 ( thing :arg1-of gain-02 ) :arg3-of mix-01 ) :op2 ( fall-07 :arg1 thing :arg2 ( finance :quant num_0 ) )
know-01 :arg0 nobody :arg1 ( thing :manner-of ( continue-01 :arg0 they :arg1 ( quota :mod mandatory :mod mandatory ) ) ) :condition ( come-12 :arg1 it )
know-01 :arg0 no-one :arg1 ( thing :manner-of ( work-09 :arg1 quota ) :mod exact ) :condition ( possible-01 :arg1 ( reach-01 :arg1 quota ) )
say-01 :arg0 ( person :arg0-of ( lead-02 :arg1 ( group :mod parliament ) ) ) :arg1 ( worry-01 :arg0 ( threaten-01 :arg1 ( threaten-01 :arg2 politician ) ) :arg1 political-party_name_0 )
have-03 :arg0 we :arg1 ( rate-entity-91 :arg1 ( around :op1 ( monetary-quantity monetary-quantity_num_0 :unit euro ) ) :arg2 ( temporal-quantity temporal-quantity_num_1 :unit year ) ) :arg4 ( around :op1 ( monetary-quantity monetary-quantity_num_1 :unit euro ) )
say-01 :arg0 ( person :mod other :arg0-of ( have-org-role-91 :arg2 ( person :arg1-of expert-01 ) ) ) :arg1 ( increase-01 :arg0 ( increase-01 :arg1 ( rate :mod interest ) ) :arg1 ( market :mod finance ) :arg1-of ( cause-01 :arg0 ( remove-01 :arg0 rate :arg1 ( relate-01 :mod certain ) :time ( act-02 :arg0 government-organization_name_0 ) ) ) )
cause-01 :arg0 ( speak-01 :arg0 ( person_name_0 :arg0-of ( speak-01 :arg3 ( work-01 :arg0 person :arg1 ( work-01 :arg0 person ) ) ) ) ) :arg1 ( need-01 :polarity - :arg0 person :arg1 ( approach-02 :arg1-of special-02 ) :time ( introduce-02 :arg0 person :arg1 ( work-01 :arg0 person :location repertoire ) ) )
and :op1 ( speak-01 :arg0 we ) :op2 ( see-01 :arg0 we )
debut :arg1 ( debut :mod stunning :poss ( person_name_1 :arg0-of ( have-org-role-91 :arg1 organization :arg2 star :time former ) :quant series ) ) :mod main
possible-01 :arg1 ( fatal :arg1 it )
say-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg1 organization_name_0 :arg2 chief ) ) :arg1 ( solution :polarity - :mod military :location country_name_1 )
byline-91 :arg2 person_name_0
possible-01 :arg1 ( volatiliza :arg0 ( rise-01 :arg1 ( rate :mod interest ) ) :arg1 thing :time while ) :time ( month :mod recent )
and :op1 ( look-01 :arg0 he :arg1 phone ) :op2 ( find-01 :arg0 he :arg1 ( message-01 :arg0 he ) ) :time ( after :op1 ( expel-01 :arg0 he :arg1 ( person :arg0-of ( have-rel-role-91 :arg1 he :arg2 mother ) ) :time immediate ) )
sign-01 :arg0 ( organization_name_0 :arg1-of ( sign-02 :arg0 ( person :arg0-of ( have-org-role-91 :arg1 organization_name_2 :arg3 judge-01 ) ) ) ) :arg1 ( thing :arg2-of solve-01 ) :time yesterday :location ( case :mod this ) :time ( date-entity month_date-entity_0 day_date-entity_0 )
take-10 :arg0 ( turn-01 :arg0 team :arg1 ( place :ord ( ordinal-entity ordinal-entity_num_0 ) ) :mod ( good :degree more :mod even ) ) :arg1 future :time ( season :mod this ) :arg1-of ( cause-01 :arg0 ( reach-01 :arg0 team :arg1 ( place :ord ( ordinal-entity ordinal-entity_num_0 ) :mod ( less :compared-to ( person_name_0 :arg0-of ( lead-02 :arg1 team ) ) ) ) ) )
and :op1 ( take-10 :arg0 ( will-02 :arg0 team :arg1 ( future :poss ( season :mod this ) ) ) :arg1 ( and :op1 will-02 :op2 ( good :degree more ) :time ( season :mod this ) ) ) :op2 ( come-01 :arg1 team :arg3 ( point :quant num_3 ) :arg4 ( point :quant num_3 ) )
pulls :arg0 everyone :arg1 ( soul :poss they )
meet-03 :arg0 organization_name_0 :arg1 ( project :quant num_0 :arg1-of ( include-91 :arg2 project ) )
support-01 :arg0 ( democrat :mod ( person :arg0-of vote-01 ) :arg1-of ( include-91 :arg2 ( person :arg0-of vote-01 ) :arg3 ( percentage-entity percentage-entity_num_0 ) ) ) :arg1 person_name_0 :arg3 ( rate-entity-91 :arg1 ( percentage-entity percentage-entity_num_0 ) :arg2 ( temporal-quantity temporal-quantity_num_2 :unit year ) ) :time now :arg1-of ( cause-01 :arg0 ( -lrb- :arg0 ( person :ord ( ordinal-entity ordinal-entity_num_2 ) :ord ( ordinal-entity ordinal-entity_num_2 ) :ord ( ordinal-entity ordinal-entity_num_2 ) :ord ( ordinal-entity ordinal-entity_num_2 ) ) :arg1 person_name_1 ) )
add-01 :arg0 ( person_name_0 :arg0-of ( have-org-role-91 :arg2 mr. ) ) :arg1 ( call-01 :arg0 person :arg1 ( and :op1 ( person :arg0-of ( have-rel-role-91 :arg1 she :arg2 mother ) ) :op2 ( person :arg0-of ( have-rel-role-91 :arg1 she :arg2 mother ) ) ) :arg2 ( and :op1 ( person :arg0-of ( have-rel-role-91 :arg1 she :arg2 mother ) ) :op2 ( person :arg0-of ( have-rel-role-91 :arg1 she :arg2 mother ) ) ) ) :time ( find-01 :arg0 person :arg1 ( message :topic phone ) )
possible-01 :arg1 ( watch-01 :arg1 ( show-01 :arg1 ( show-01 :arg0 ( teenager :arg1-of ( drink-01 :arg0 teenager ) ) :arg1 ( create-01 :arg0 teenager :arg1 ( drink :arg1-of cheap-02 ) ) ) ) )
dezbatut :arg1 ( meet-03 :mod ( plenary :mod next ) )
associate-01 :arg1 ( person :quant some :arg1-of die-01 ) :arg2 ( detergents :arg1 alcohol )
probable :domain ( find-01 :arg1 ( thing :arg1-of find-01 ) )
contrast-01 :arg2 ( and :op1 ( manage-01 :arg1 it :manner ( well :degree extreme ) :manner ( situation :mod ( challenging :degree quite ) :location country_name_0 :prep-with person_name_1 ) ) :op2 ( think-01 :arg0 i :arg1 ( deserve-01 :arg0 it :arg1 ( deserve-01 :arg0 it :arg1 ( faith :quant much ) ) ) ) )
and :op1 ( carry-out-03 :arg0 ( person :mod religious-group_name_0 ) :arg1 ( victim :quant num_0 ) :purpose ( recruit-01 :arg0 person :arg1 ( victim :quant num_0 ) ) ) :op2 ( kill-01 :arg1 ( person :arg1-of kill-01 ) :arg1-of ( cause-01 :arg0 ( collapse-01 :arg1 ( mosque :location ( mosque :location city :mod grand ) ) ) ) ) :time ( ceremony :location ( ceremony :arg1-of ( carry-out-03 :location street ) ) )
and :op1 ( look-01 :arg0 ( person :arg0-of participate-01 :quant most :arg0-of ( look-01 :arg1 job ) ) :arg1 ( rate-entity-91 :arg1 ( more-than :op1 num_0 ) :arg2 ( temporal-quantity temporal-quantity_num_1 :unit year ) ) ) :op2 ( follow-01 :arg1 ( rate-entity-91 :arg1 ( more-than :op1 num_0 ) :arg2 ( temporal-quantity temporal-quantity_num_2 :unit month ) ) :arg2 ( rate-entity-91 :arg1 ( person :quant num_1 ) :arg2 ( temporal-quantity temporal-quantity_num_2 :unit month ) ) )
ask-02 :arg0 we :arg1 ( good :domain god ) :arg2 god
contrast-01 :arg2 ( know-01 :polarity - :arg1 ( thing :manner-of ( collapse-01 :arg1 ( interest :mod this ) :time ( after :op1 ( temporal-quantity temporal-quantity_num_0 :unit year ) ) ) ) )
multi-sentence :snt1 ( contrast-01 :arg1 ( lesson :mod humorous :arg1-of value-02 :topic ( something :arg2-of ( concealing :arg1 something ) ) ) :arg2 ( lesson :polarity - :domain ( someone :arg0-of ( have-03 :polarity - :arg1 ( and :op1 ( tooth :part-of someone ) :op2 ( tooth :part-of someone ) ) ) ) ) ) :snt2 ( ampon :mode interrogative )
contrast-01 :arg2 ( and :op1 ( masses :arg0 ( they :arg0-of ( embarked :arg1 they ) ) ) :op2 ( possible-01 :polarity - :arg1 ( return-02 :arg0 we :arg1 history ) ) )
maintain-01 :arg0 person_name_0 :arg1 ( thing :arg1-of state-01 )
and :op1 ( have-03 :arg0 ( film :arg1-of ( make-01 :arg0 ( organization_name_1 :part-of ( organization_name_1 :mod advertising ) :arg0-of ( pro :arg1 ( and :op1 bono :op2 ( door :mod graphic ) ) ) ) ) ) :arg1 ( thing :arg1-of ( view-02 :arg0 film :arg2 company :duration ( temporal-quantity temporal-quantity_num_0 :unit hour ) ) ) :time ( hour :mod 24 ) ) :op2 ( create-01 :arg0 ( and :op1 ( person :arg0-of ( have-org-role-91 :arg1 organization :arg3 ( lead-02 :arg0 person ) ) ) :op2 ( person :arg0-of ( have-org-role-91 :arg1 organization :arg3 ( lead-02 :arg0 person ) ) ) ) :arg1 ( free-03 :arg1 person ) :mod also )
know-01 :polarity - :arg0 i :arg1 ( amr-unknown :arg1-of ( have-condition-91 :arg2 ( need-01 :arg0 i :arg1 ( consider-02 :arg0 i :arg1 ( and :op1 ( person :arg1-of employ-01 ) :op2 ( person :arg1-of employ-01 ) :op3 ( person :arg1-of employ-01 ) :op4 ( person :arg1-of employ-01 ) ) ) ) ) )
be-located-at-91 :arg1 ( project :mod continent_name_0 ) :arg2 risk-01
say-01 :arg0 organization_name_0
(-(
say-01 :arg0 ( person :arg0-of ( promote-02 :arg1 and ) ) :arg1 ( and :op1 ( bring-01 :arg0 ( and :op1 congress :op2 ( reform-01 :arg0-of encourage-01 ) ) :arg1 ( and :op1 ( rhetoric :mod new ) :op2 vitality ) ) :op2 ( make-01 :arg0 reform-01 :arg1 ( room :purpose ( grow-01 :arg1 economy ) ) ) )
say-01 :arg0 person_name_0 :arg1 ( and :op1 ( bring-01 :arg0 ( and :op1 congress :op2 ( reform-01 :arg1 encourage-01 ) ) :arg1 ( and :op1 ( rhetoric :mod new ) :op2 vitality ) ) :op2 ( take-01 :arg0 reform-01 :arg1 ( place :location-of ( grow-01 :arg1 economy ) ) ) )
and :op1 ( reac?ionezi :arg0 i :arg1 consequence :frequency sometimes ) :op2 ( obligate-01 :arg1 i :arg2 ( live-01 :arg0 i :accompanier ( thing :arg1-of ( say-01 :arg0 i ) ) ) )
establish-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg1 organization_name_0 :arg2 sheiks ) ) :arg1 ( fate :poss person_name_1 )
and :op1 ( score-01 :arg1 organization_name_0 :arg2 ( match-03 :arg0 organization :arg1 organization_name_1 :mod open-01 ) ) :op2 ( help-01 :arg0 organization :arg1 organization_name_2 :arg2 ( impose-01 :arg0 organization :arg1 ( front :op1 ( location_name_3 :mod ( team :mod swedish ) ) ) ) )
convince-01 :arg0 i :arg1 ( lose-02 :arg0 they :arg1 ( patience :poss they ) :ord ( ordinal-entity ordinal-entity_num_0 ) )
take-01 :arg1 they :arg3 hospital
seek-01 :arg0 ( and :op1 person :op2 person :op3 happy ) :arg1 ( life :mod patriarchal )
obligate-01 :arg2 ( break-up-08 :arg1 ( life :poss they ) )
do-02 :polarity - :arg0 miracles
say-01 :arg0 he :arg1 ( increase-01 :arg1 ( increase-01 :arg1 ( life :poss he ) :arg3 most :prep-as chef ) ) :medium ( interview-01 :arg1 he :time recent )
cause-01 :arg1 ( contrast-01 :arg1 ( avoid-01 :arg1 ( leave-13 :arg1 ( leave-11 :arg0 person :arg1 ( whiskey :quant glass :location table ) ) ) ) :arg2 ( and :op1 ( leave-15 :arg0 person :arg1 ( detergents :mod this ) :location ( place :arg1-of access-01 ) ) :op2 ( have-condition-91 :arg1 ( way :manner-of ( consume-01 :arg1 alcohol ) ) :arg2 ( reach-01 :arg1 ( alcohol :arg1-of ( low-04 :degree more ) ) ) ) ) )
attract-01 :arg0 ( person_name_0 :arg0-of ( have-rel-role-91 :arg1 person :arg2 child ) ) :arg1 ( person :arg0-of ( have-rel-role-91 :arg1 person :arg2 child ) ) :degree most
do-02 :arg0 it
cause-01 :arg0 ( easy :arg1 ( thing :arg2-of ( reply-01 :arg1 ( see-01 :arg0 we :arg1 ( remain-01 :arg1 ( person :quant num_0 :arg1-of remain-01 :arg1-of remain-01 ) :arg3 ( rate-entity-91 :arg1 num_0 :arg2 ( temporal-quantity temporal-quantity_num_1 :unit month ) ) ) ) ) ) ) :arg1 ( differ-02 :arg1 differ-02 :degree most :arg1-of ( cause-01 :arg0 ( see-01 :arg0 we :arg1 ( remain-01 :arg1 ( person :arg1-of remain-01 :arg1-of remain-01 ) :arg3 ( rate-entity-91 :arg1 num_0 :arg2 ( temporal-quantity temporal-quantity_num_1 :unit month ) ) ) ) ) )
create-01 :arg0 she :arg1 ( and :op1 ( stable-03 :polarity - :arg1 she ) :op2 ( chaos :arg1-of ( cause-01 :arg0 ( possible-01 :polarity - :arg1 ( close-06 :arg1 she ) ) ) ) )
contrast-01 :arg2 ( solve-01 :polarity - :arg0 problem :arg1-of simple-02 )
give-01 :polarity - :arg0 person_name_0 :arg1 ultimatum
contrast-01 :arg1 ( possible-01 :polarity - :arg1 ( recognize-02 :arg0 country_name_0 :arg1 ( project :beneficiary country ) ) ) :arg2 ( plan-01 :polarity - :arg0 organization_name_1 :arg1 future :mod any )
cause-01 :arg0 ( rely-01 :arg0 ( and :op1 ( company :arg0-of ( make-01 :arg1 computer ) :mod ( large :degree most :compared-to world ) ) :op2 ( company :quant num_0 :arg1-of ( include-91 :arg2 ( company :mod technology :mod technology :location country_name_1 ) ) ) ) :arg1 ( and :op1 ( company :arg0-of ( make-01 :arg1 computer ) :mod ( large :degree most :compared-to world ) ) :op2 ( company :quant num_0 :arg1-of ( include-91 :arg2 ( company :mod technology :mod technology :location country_name_1 ) ) ) ) :time ( late :degree most ) :arg1-of ( cause-01 :arg0 ( rely-01 :arg0 and :arg1 ( idea :topic ( attend-02 :arg0 business :arg1 ( good :degree more ) ) ) ) ) )
depend-01 :arg0 it :arg1 discipline :condition ( or :op1 ( musicians :arg0 ( person :mod musician :arg0-of ( sing-01 :arg1 instrument ) ) :arg1 ( person :mod musician :arg0-of ( sing-01 :arg1 instrument ) ) ) :op2 ( singing :arg0 person :degree at-all ) )
promise-01 :arg0 we :arg2 ( rate-entity-91 :arg1 num_0 :arg2 ( temporal-quantity temporal-quantity_num_0 :unit year ) ) :arg1-of ( cause-01 :arg0 ( promise-01 :arg0 we :arg2 we :time today ) )
know-01 :polarity - :arg1 ( differ-02 :arg1 ( friendship :poss you ) :arg2 amr-unknown ) :time ever
and :op1 ( annoy-01 :arg1 someone ) :op2 ( understand-01 :arg0 i :arg1 ( try-01 :arg0 you :arg1 ( address-02 :arg0 you :arg1 problem :degree more :compared-to ( home :poss ( person :arg0-of ( have-rel-role-91 :arg1 i :arg2 colleague ) ) ) :arg0-of ( have-03 :arg1 ( methamphetamine :mod liquid ) :purpose ( punish-01 :arg1 ( person :arg1-of steal-01 :arg1-of steal-01 ) ) ) ) ) :mod still ) :condition ( proceed-01 :arg0 someone :arg1 thing )
include-91 :arg1 ( rate-entity-91 :arg1 ( temporal-quantity :quant 1/2 :unit hour ) :arg2 ( temporal-quantity temporal-quantity_num_2 :unit hour ) ) :arg2 ( and :op1 ( climbed :arg0 ( person :quant num_0 :arg0-of ( have-org-role-91 :arg2 -rrb- ) ) :arg1 ( person :arg0-of view-01 ) :mod small ) :op2 ( win-01 :arg0 person :arg2 ( person :arg0-of view-01 ) :mod small :arg1-of ( cause-01 :arg0 ( show-04 :arg1 ( and :op1 ( show-04 :arg1 person_name_0 ) :op2 ( seat-01 :arg1-of hot-05 ) ) ) ) ) )
multi-sentence :snt1 ( parazitat :arg0 ( and :op1 ( mobsters :arg0 ( class :mod politics ) :arg1 parazitat ) :op2 ( paralysed :arg0 ( class :mod politics ) :arg1 parazitat ) ) ) :snt2 ( state :location ( area :quant all ) )
say-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg1 country_name_0 ) ) :arg1 ( person_name_1 :arg0-of ( have-org-role-91 :arg2 '' ) ) :time ( conference :mod press ) :time ( after :op1 ( possible-01 :arg1 ( give-01 :arg0 country :arg1 answer-01 ) ) )
say-01 :arg0 ( democrat :mod ( person :arg0-of vote-01 ) :quant most ) :arg1 ( say-01 :arg0 democrat :arg1 ( decide-01 :arg0 democrat :arg1 ( decide-01 :arg0 democrat :arg1 ( candidate :arg1-of ( have-03 :arg0 democrat ) ) ) ) :degree too :time ( before :op1 ( start-01 :arg1 ( elect-01 :mod primary ) ) ) )
put-01 :arg0 ( person :arg1-of ( include-91 :arg2 ( person :arg1-of ( employ-01 :arg0 i ) ) :arg3 one ) ) :arg1 mud :arg2 foot
see-01 :arg0 we :arg1 ( integrate-01 :arg1 ( area :mod euro ) :mod ( great :degree more ) :arg0-of ( push-01 :arg1 ( country :arg1-of ( include-91 :arg2 ( country :location region ) :arg3 most ) ) ) :time ( and :op1 ( date-entity decade_date-entity_0 ) :op2 ( process-02 :arg1 ( decisionmaking :location continent_name_0 ) ) ) ) :mod especially :condition expect-01
multi-sentence :snt1 ( lose-02 :arg1 ( circumstance :arg1-of ( clear-06 :polarity - ) ) :location hospital :time ( circumstance :arg1-of dark-02 ) ) :snt2 ( and :op2 ( boln?vioar :mode interrogative :arg0 ( family :mod wealth :location country_name_0 ) :time ( after :op1 now :quant ( between :op1 ( temporal-quantity temporal-quantity_num_0 :unit month ) :op2 ( temporal-quantity temporal-quantity_num_1 :unit month ) :mod just ) :op3 ( adopt-01 :arg0 ( family :mod wealth :location country ) :arg1 ( family :mod wealth ) :time ( after :op1 now :quant ( temporal-quantity temporal-quantity_num_1 :unit decade ) ) :arg1-of ( cause-01 :arg0 ( know-02 :arg0 nobody :arg1 ( nothing :mod else ) ) ) ) ) ) )
say-01 :arg0 person_name_0 :arg1 ( and :op1 ( recommend-01 :arg1 ( win-01 :arg0 ( team :polarity - ) :arg1 something :location ( or :op1 cup :op2 league ) ) ) :op2 ( win-01 :polarity - :arg0 amr-unknown :arg1 ( game :arg1-of ( resemble-01 :arg2 that ) ) ) )
cause-01 :arg1 ( and :op1 ( win-01 :quant num_0 :arg0 ( person_name_0 :arg0-of ( have-org-role-91 :arg2 coach ) ) :time ( after :op1 ( temporal-quantity temporal-quantity_num_0 :unit year ) ) ) :op2 ( win-01 :arg0 ( and :op1 ( person :quant num_1 ) :op2 ( person :quant num_1 ) :op3 ( defeats :quant num_1 ) ) :time future ) )
have-concession-91 :arg1 ( and :op1 ( enter-01 :arg0 company :arg1 company ) :op2 ( terminated :arg1 ( contract-02 :mod this ) :time ( after :op1 ( pay-01 :arg0 company :arg3 ( lei :quant num_0 ) ) ) ) )
say-01 :arg0 they :arg1 ( possible-01 :arg1 ( do-02 :arg0 i :arg1 ( all :arg1-of ( do-02 :arg0 i :arg1-of possible-01 ) ) :arg2 ( and :op1 i :op2 ( person :arg0-of ( have-rel-role-91 :arg1 i :arg2 wife ) ) ) ) )
say-01 :arg0 ( person :arg0-of ( support-01 :arg1 person_name_0 ) ) :arg1 ( option :domain person_name_1 :ord ( ordinal-entity ordinal-entity_num_0 :range ( ahead :op1 person_name_2 ) ) )
accidenteze :polarity - :arg1 ( person :arg0-of play-01 :poss we ) :arg2 adversary :time ever
say-01 :arg0 ( person_name_0 :arg0-of ( have-org-role-91 :arg1 ( family :arg1-of ( have-org-role-91 :arg0 person :arg2 member ) ) :arg2 member ) ) :arg1 ( contrast-01 :arg1 ( lose-02 :arg0 ( family :quant ( many :degree too ) ) :arg1 ( life :poss family ) ) :arg2 ( lose-02 :arg0 ( person :arg0-of study-01 :quant ( at-least :op1 num_1 ) ) :arg1 ( life :poss family ) :frequency ( rate-entity-91 :arg3 ( temporal-quantity temporal-quantity_num_0 :unit year ) ) :arg1-of ( cause-01 :arg0 ( rituals :arg0 person :arg1 ( person :arg0-of ( have-rel-role-91 :arg1 person :arg2 lawyer ) ) ) ) ) ) :medium statement
obligate-01 :arg2 ( enter-01 :arg0 organization_name_0 :arg1 ( law :mod sanitary :arg0-of ( good-04 :polarity - :arg1 ( and :op1 vegetables :op2 meat ) ) ) ) :purpose ( enter-01 :arg0 organization :arg1 organization )
say-01 :arg0 person_name_0 :arg1 ( and :op1 ( opine-01 :arg0 he :arg1 ( compare-01 :arg0 opine-01 :arg1 ( game :poss opine-01 ) :time ( evening :time ( night :mod friday ) ) ) ) :op2 ( talk-01 :arg0 he :arg1 game ) )
and :op1 ( argue-01 :arg0 he :arg1 ( and :op1 ( thing :arg1-of opine-01 ) :op2 ( compare-01 :arg1 game :arg2 ( night :mod friday ) :prep-with ( game :poss we ) ) ) ) :op2 ( say-01 :arg0 person_name_0 :arg1 game )
multi-sentence :snt1 ( play-01 :arg0 person_name_0 :arg1 ( role :topic ( burn-01 :arg1 ( '' :name ( name :op1 '' :op2 '' :op3 bucatar ) ) ) ) :manner amr-unknown ) :snt2 ( dezvaluire :polarity - :domain ( actor :poss he ) )
inghitite :arg0 ( promise-01 :arg0 house-01 ) :arg1 ( amount :mod additional ) :arg1-of quick-02 :arg1-of ( cause-01 :arg0 ( back-01 :polarity - :arg0 house-01 :arg1 ( demagogues :mod populist ) ) )
and :op1 ( face-01 :arg0 we :arg1 ( situation :prep-in ( possible-01 :arg1 ( drop-01 :arg1 ( bank :arg1-of major-02 :mod central ) :arg4 ( seismic-quantity seismic-quantity_num_0 ) ) ) ) :ord ( ordinal-entity ordinal-entity_num_0 ) ) :op2 ( say-01 :arg0 person_name_0 :arg1 ( analyze-01 :arg0 chief :arg1 ( process-02 :arg1 ( normalisation :arg1 ( rate :mod interest ) ) ) ) )
and :op1 ( associate-01 :arg1 ( organization_name_0 :arg1-of ( include-91 :arg2 ( name :op1 campionului :op2 branded :op3 branded :op4 branded :op5 branded ) ) ) :arg2 ( day :time-of ( applied :arg1 race ) ) :frequency ( often :degree most ) ) :op2 ( treat-01 :arg1 ( person :arg1-of branded ) :arg2 ( day :time-of race ) :time ( after :op1 ( apply-01 :arg1 race :arg2 ( foot :part-of ( or :op1 namol :op2 clay ) :arg0-of ( violate-01 :arg1 rule ) ) ) ) )
say-01 :arg0 ( and :op1 ( person :arg0-of ( have-org-role-91 :arg1 company_name_0 :arg2 ( correspondent :mod politics ) ) ) :op2 ( person_name_1 :arg0-of ( have-org-role-91 :arg1 company :arg2 ( correspondent :mod politics ) ) ) ) :arg1 ( '' :arg1 ( differ-01 :mod politics ) :location political-party_name_2 :time ( after :op1 ( appoint-01 :arg0 person :arg1 person_name_3 :arg2 ( and :op1 ( position-01 :arg1 person :arg2 ( position-01 :arg1 person :arg2 organization_name_4 ) ) :op2 ( limit-01 :arg0 person :arg1 benefit-01 ) ) ) ) )
contrast-01 :arg2 ( and :op1 ( continue-01 :arg0 person_name_0 :arg1 ( policy :topic ( promote-02 :arg1 ( person :mod young ) ) ) ) :op2 ( appear-01 :arg1 ( name :poss team ) :time lately :location ( name :poss team ) :prep-as ( or :op1 person_name_1 :op2 brotherhood ) ) )
vote-01 :arg0 person_name_0 :arg1 ( person :arg0-of ( have-org-role-91 :arg1 organization_name_1 :arg2 president ) ) :location organization_name_1
and :op2 ( look-01 :mode imperative :arg0 you :arg1 you :time no-longer )
byline-91 :arg2 location_name_0
tell-01 :arg0 ( person_name_0 :arg0-of prosecute-01 ) :arg1 ( person :arg1-of ( addict-01 :arg2 ( scare-01 :arg1 person ) ) :domain it ) :arg2 court :location location_name_1
say-01 :arg0 ( person_name_0 :arg0-of ( have-org-role-91 :arg1 church :arg2 member ) ) :arg1 ( and :op1 ( mercy :arg1 church ) :op2 ( sit-01 :arg1 person :arg2 ( member :arg2-of ( have-org-role-91 :arg1 organization_name_1 ) ) ) :op3 ( person :arg0-of ( represent-01 :arg1 ( patriarchy :quant num_0 :arg0-of ( participate-01 :arg1 rehearsals ) ) ) :arg0-of ( have-org-role-91 :arg1 organization_name_3 :arg2 member ) ) )
ask-02 :arg0 we :arg1 ( thing :quant some :arg1-of ( qualify-02 :arg2 ( train-01 :mod physical ) :arg1-of specific-02 ) :arg1-of ( hear-01 :polarity - :arg0 i :time ever ) ) :arg2 ( thing :quant some )
find-01 :arg0 i :arg1 this :time ( before :op1 now :quant ( multiple :op1 ( temporal-quantity temporal-quantity_num_0 :unit year ) ) ) :arg1-of ( cause-01 :arg0 ( find-01 :polarity - :arg0 we :arg1 ( and :op1 creativity :op2 ( fraternity :mod human ) :location ( system :mod this ) ) ) )
and :op1 ( say-01 :arg0 they :arg1 ( serve-01 :polarity - :time ( after :op1 now :quant ( temporal-quantity temporal-quantity_num_0 :unit year ) ) ) ) :op2 ( announce-01 :arg1 ( thing :arg1-of ( announce-01 :time ( press :arg1-of cancelled ) ) ) )
possible-01 :arg1 ( and :op1 ( check-out-05 :arg0 ( person :arg1-of employ-01 ) :arg1 ( status :poss ( body :poss you ) ) ) :op2 ( advise-01 :arg0 person :arg2 ( thing :manner-of ( live-01 :arg0 ( person :arg0-of ( live-01 :arg1-of ( cause-01 :arg0 ( destroy-01 :polarity - :arg1 ( health :poss person ) ) ) ) ) ) ) ) )
cause-01 :arg1 ( and :op1 ( fear-01 :polarity - :mode imperative :arg0 you :arg1 weather :location outside ) :op2 ( depend-01 :polarity - :arg0 ( procedure :arg1-of ( include-91 :arg2 procedure :arg3 majority ) ) :arg1 ( season :mod season ) :mod especially ) )
grow-01 :arg1 broadcast-program_name_0 :arg2 ( percentage-entity percentage-entity_num_0 ) :manner june
manage-02 :arg0 she :arg1 ( win-01 :arg0 she :arg1 silver :location world ) :time ( prior :op1 that )
and :op1 ( enter-01 :arg0 she :arg1 ( team :mod youth ) :arg1-of quick-02 ) :op2 ( break-01 :arg1 she :location ( team :mod nation :mod main ) :time ( late :degree more ) )
multi-sentence :snt1 ( contrast-01 :arg1 ( need-01 :polarity - :arg1 battle-01 ) :arg2 ( organize-01 :arg0 she :arg1 ( break-through-26 :arg0 she :mod real ) ) ) :snt2 ( bring-01 :arg0 she :arg1 ( and :op1 star :op2 ( team :name ( name :op1 star ) :mod nation ) ) :arg2 ( game :mod olympic ) :purpose ( game :mod olympic :mod rio ) )
continue-01 :arg0 girl :arg1 ( swim-01 :arg0 girl ) :arg0-of ( show-01 :arg1 ( result-01 :arg2 ( level :mod nation ) :arg1-of high-02 ) )
bear-02 :arg1 ( person :arg1-of ( bear-02 :location ( family :arg1-of ( have-org-role-91 :arg0 person :arg2 member ) ) ) ) :location ( family :arg1-of ( have-org-role-91 :arg0 person :arg2 member ) ) :location ( family :arg1-of ( have-org-role-91 :arg0 person :arg2 member ) ) :location ( family :arg1-of ( have-org-role-91 :arg0 person :arg2 member ) ) :location ( family :arg1-of ( have-org-role-91 :arg0 person :arg2 member ) )
believe-01 :arg0 ( person :arg1-of expert-01 ) :arg1 ( and :op1 ( increase-01 :arg1 ( split-01 :arg1 ( relation-03 :arg0 country_name_0 :arg2 west ) ) ) :op2 ( possible-01 :arg1 ( lead-03 :arg0 split-01 :arg2 ( attempt-01 :arg1 ( change-01 :arg1 ( government-organization :arg0-of govern-01 ) :location country ) :mod new ) ) ) )
choose-01 :arg0 i :arg1 ( choose-01 :arg0 ( and :op1 turkey :op2 feto ) :arg1 ( organization :mod terrorism :arg0-of ( have-org-role-91 :arg1 ( organization :mod terrorism ) :arg2 -rrb- ) ) ) :time ( or :op1 ( soon :degree more ) :op2 ( late :degree more ) )
admit-01 :arg0 ( person :arg0-of ( support-01 :arg1 person_name_0 ) ) :arg1 ( possible-01 :arg1 ( involve-01 :arg1 coup :arg2 ( person :mod country_name_1 ) :arg1-of direct-02 :mod also ) )
contrast-01 :arg2 ( value-01 :arg1 visit-01 :arg2 ( thing :mod politics :mod additional ) :mod also )
reality :domain ( moscow :arg0-of ( have-03 :arg1 ( fear-01 :arg0 regime :arg1 ( change-01 :arg1 regime ) :mod deep-rooted ) ) ) :location mind
go-03 :mode imperative :arg0 you :arg1 ( and :op1 ( pulls :arg1 person ) :op2 ( engages :arg1 person :location ( activity-06 :mod physical :quant some ) ) )
publish-01 :arg0 authority :arg1 ( report-01 :arg0 police :arg1 ( thing :arg2-of ( have-purpose-91 :arg1 ( truck :arg1-of empty-02 :arg1-of ( truck :duration ( temporal-quantity temporal-quantity_num_0 :unit hour :time ( before :op1 ( murder-01 :mod ( bone :part-of ( person :arg0-of ( kill-01 :mod serial ) ) ) :arg1-of believe-01 ) ) ) ) ) ) ) ) :mod also :topic shelling
like-01 :arg0 he :arg1 ( play-01 :arg0 he :arg2 ( and :op1 ( person :quant num_0 :arg0-of ( have-rel-role-91 :arg1 he :arg2 brother ) ) :op2 ( sing-01 :arg0 he ) ) ) :mod also
get-03 :arg1 you :arg2 ( good :degree more )
state-01 :arg0 ( person :arg0-of ( represent-01 :arg1 ( office :poss ( person :arg0-of ( have-org-role-91 :arg1 ( office :poss ( person :arg0-of ( have-org-role-91 :arg2 governor ) ) :arg2 ( office :topic ( security :mod nation ) ) ) ) ) ) ) ) :arg1 ( receive-01 :arg0 person :arg1 ( request-01 :arg1 transport-01 :purpose ( and :op1 ( water :arg1-of high-02 ) :op2 boat :op3 sand ) ) ) :arg2 ( person :arg0-of ( represent-01 :arg1 ( office :poss ( person :arg0-of ( have-org-role-91 :arg2 governor ) ) :topic ( security :mod nation ) ) ) )
identify-01 :arg0 ( person :arg0-of ( have-rel-role-91 :arg1 ( person :arg0-of ( have-rel-role-91 :arg1 child :arg2 child ) ) :arg2 parent ) ) :arg1 he :arg2 ( cbs :arg1 person :arg2 ( brown :mod mahaz ) )
multi-sentence :snt1 ( cause-01 :arg1 ( and :op1 ( soldier :arg1-of arm-01 :quant few ) :op2 ( soldier :arg1-of arm-01 ) :arg1-of ( involve-01 :arg2 shootout ) ) ) :snt2 ( report-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg1 ( police :mod philadelphia ) :arg2 captain ) ) :arg1 ( ginaldi :arg1 ( captain :prep-with ( police :mod philadelphia ) ) ) )
obligate-01 :arg2 ( act-02 :arg0 ( person :arg0-of ( have-rel-role-91 :arg2 dh ) ) :purpose ( encourage-01 :arg0 person :arg1 ( concern-01 :arg0 ( doctor :mod junior ) ) ) :time now )
and :op1 ( produce-01 :arg0 ( ticagrelor :arg1-of ( produce-01 :arg0 ( firm :name ( name :op1 astrazeneca ) :mod country_name_0 ) ) ) :arg1 ( thing :arg2-of ( name-01 :arg1 ( firm :mod country_name_1 ) ) ) ) :op2 ( sell-01 :arg0 ticagrelor :arg1 ( risk-01 :arg2 ( make-01 :arg1 ( clot :mod blood ) ) ) :degree less )
multi-sentence :snt1 ( concern-01 :arg0 ( turn-02 :arg0 ( institution :mod state ) :arg1 ( eye :mod blind-02 ) :arg2 ( behave-01 :mod this ) ) ) :snt2 ( '' :arg0 ( correctness :mod politics :mod '' ) :arg1 ( and :op1 ethnicity :op2 religion ) )
multi-sentence :snt1 ( possible-01 :arg1 ( imagine-01 :arg0 you :arg1 ( and :op1 cbc :op2 canada ) ) ) :snt2 ( possible-01 :arg1 ( look-01 :arg0 we :arg1 ( racist :quant bunch ) ) )
bring-01 :arg0 ( person :quant none ) :arg1 he :arg2 ( taste :arg1-of bad-07 :location mouth ) :arg2-of fortunate-01
see-01 :arg0 we :arg1 ( number :quant-of ( person :arg1-of ( see-01 :arg0 we :location here :arg1-of ( believe-01 :polarity - :arg0 we ) ) ) )
say-01 :arg0 ( person :arg0-of ( head-01 :arg1 group ) :arg0-of ( have-org-role-91 :arg1 group :arg3 ( head-01 :arg0 person :arg1 group ) ) ) :arg1 ( possible-01 :polarity - :arg1 ( cooperate-01 :arg0 family :arg1 ( authority :arg1-of local-02 ) ) )
report-01 :arg0 i :arg1 ( contrast-01 :arg1 ( live-01 :arg0 ( person :quant all :arg0-of ( have-rel-role-91 :arg1 person :arg2 son ) ) :location house :time ( time :arg1-of differ-02 ) ) :arg2 ( say-01 :arg0 person :arg1 ( have-03 :arg0 ( they :quant all ) :arg1 ( more :mod little ) ) ) )
and :op1 ( use-01 :arg1 system :arg2 ( enterprise :mod food :quant all ) :time now ) :op2 ( be-located-at-91 :arg1 system :arg2 ( union-02 :arg1 enterprise :arg2 continent_name_0 ) :mod also )
say-01 :arg0 ( person :arg0-of ( lead-02 :arg1 ( democrat :location senate ) ) ) :arg1 ( convince-01 :arg0 ( candidate :poss ( person :arg0-of ( have-org-role-91 :arg2 ( president :mod vice ) ) ) ) :arg1 ( person :arg0-of ( have-org-role-91 :arg3 judge-01 ) :arg0-of ( have-org-role-91 :arg3 judge-01 ) ) :arg2 ( person :arg0-of ( have-org-role-91 :arg3 judge-01 ) :arg0-of ( have-org-role-91 :arg3 judge-01 ) ) :condition ( elect-01 :arg2 president ) )
agree-01 :arg0 he :arg1 ( and :op1 ( likely-01 :arg1 ( introverts :arg0 ( person :arg0-of ( buy-01 :arg1 record ) ) :arg1 ( person :arg0-of ( buy-01 :arg1 record ) :arg1-of ( resemble-01 :arg2 ( person :arg0-of ( buy-01 :arg1 record ) ) ) ) ) ) :op2 ( add-01 :arg0 person :arg1 ( drink-01 :arg0 i :degree total :arg1-of ( cause-01 :arg0 ( drink-01 :arg0 i :arg1 ( much :degree very ) :degree total ) ) ) ) )
lose-02 :arg0 they :arg1 ( num_0 :mod just ) :location here
multi-sentence :snt1 ( and :op1 ( defeat-01 :arg0 ( person :mod country_name_0 ) :arg1 ( person :quant num_0 ) :location semifinals :time ( early :degree more ) ) :op2 ( surpassed :arg0 ( person :mod country_name_1 ) :arg1 ( south :part-of country ) :degree slight ) ) :snt2 ( attempt-01 :arg0 ( person :mod country ) :arg1 ( attempt-01 :arg0 country ) )
likely-01 :polarity - :arg1 ( neutralize-01 :arg0 ( precipitation :time ( week :mod next ) ) )
find-02 :arg0 ( panel :consist-of thing_name_0 ) :arg1 ( contrary-01 :arg1 ( and :op1 ( duty :mod import-01 ) :op2 gearbox :op3 ( oil :mod palm ) ) :arg2 ( rule :poss organization ) )
increase-01 :arg1 ( share :poss ( pgnig :mod giant :mod country_name_0 :location country_name_1 ) ) :arg4 ( percentage-entity percentage-entity_num_0 ) :arg4 ( percentage-entity percentage-entity_num_0 ) :time ( early :degree more )
and :op1 ( feel-01 :arg0 i :arg1 ( and :op1 ( build-up-05 :arg1 gas ) :op2 ( burn-01 :arg1 eye ) :op3 ( burn-01 :arg1 eye ) ) :time ( late :op1 ( few :op1 ( temporal-quantity temporal-quantity_num_0 :unit minute ) ) :degree more ) ) :op2 ( become-01 :arg1 it :arg2 difficult ) :op3 ( quote-01 :arg0 i :arg1 ( difficult :domain ( breathe-01 :arg0 ( edition :poss ( person :arg0-of witness-01 ) ) ) ) )
amount-01 :arg1 ( monetary-quantity :arg1-of ( save-01 :arg0 ( merge-01 :arg1 pension ) ) ) :arg2 ( product-of :op1 num_0 :op2 num_1 )
and :op1 ( work-01 :arg0 ( and :op1 ( person :arg0-of retire-01 ) :op2 ( person :arg0-of retire-01 ) :op3 ( person :arg0-of retire-01 ) :op4 ( person :arg0-of retire-01 ) :op5 ( person :arg0-of retire-01 ) :op6 ( person :arg0-of retire-01 ) :op6 ( person :arg0-of retire-01 ) :op6 ( person :arg0-of retire-01 ) :op6 ( person :arg0-of retire-01 ) :op6 ( person :arg0-of retire-01 ) :op7 ( person :arg0-of ( have-org-role-91 :arg2 head-of-state ) ) :op7 ( person :arg0-of ( have-org-role-91 :arg2 head-of-state ) ) :op7 ( person :arg0-of ( have-org-role-91 :arg2 head-of-state ) ) ) ) :op2 ( obligate-01 :arg1 person :arg2 ( join-01 :arg0 person :arg1 fund :time ( before :op1 ( end-01 :arg1 ( year :mod this ) ) ) ) )
contrast-01 :arg1 ( speak-01 :polarity - :arg0 ( and :op1 purrs :op2 purrs :op3 grunts :op4 grunts :mod even ) ) :arg2 ( want-01 :arg0 he :arg1 ( strokes :arg0 he :arg1 ( dragons :arg1-of know-02 :quant all :arg1-of know-02 ) ) :time ( time :mod all ) )
and :op1 ( make-01 :arg0 change-01 :arg1 ( company :arg1-of settle-03 ) ) :op2 ( okay-04 :arg1 change-01 :time now :mod all )
have-03 :arg0 village :arg1 ( center :prep-for ( and :op1 ( ceremony :mod meditation ) :op2 ( ceremony :mod religious ) :beneficiary ( person :quant all ) ) ) :arg1-of general-02
and :op1 ( plate :domain ( awe-01 :mod each ) ) :op2 ( name :arg0 ( and :op1 country_name_0 :op2 country_name_1 :op3 portuguese ) :arg1 ( and :op1 ( thing :arg2-of ( value-01 :arg1 product ) ) :op2 ( presence :poss allergens ) ) )
take-01 :arg0 i :arg1 ( memory :quant num_0 ) :arg3 memory
cause-01 :arg0 ( result-01 :arg1 ( scheme :mod this ) :arg2 ( account :poss ( branch :mod ( branch :mod samara ) ) ) ) :arg1 ( steal-01 :quant ( more-than :op1 num_0 ) :arg1-of ( steal-01 :mod ruble ) )
form-01 :arg1 ( tube :quant ( over :op1 ( distance-quantity distance-quantity_num_0 :unit kilometer ) ) ) :location country_name_0 :time ( holiday :mod ( summer :mod short ) )
and :op1 ( appear-01 :arg1 ( information :arg1-of ( pakistani :arg2 ( name :op1 peshawar :op2 mi-17 :op3 landed ) :location ( logar :location ( east :part-of strait ) ) ) ) ) :op2 ( cause-01 :arg0 ( problem :mod technical ) :arg1 ( appeared :arg1 information ) )
explode-01 :quant series :location ( resorts :mod ( person :arg0-of tour-01 ) :location ( resorts :mod country_name_0 ) )
and :op1 ( study-01 :arg0 ( person :mod country_name_0 ) :ord ( ordinal-entity ordinal-entity_num_0 ) ) :op2 ( determine-01 :arg0 person :arg1 ( action :mod further :purpose ( or :op1 ( accept-01 :arg0 person :arg1 thing ) :op2 ( challenge-01 :arg0 person :arg1 thing ) ) ) :time then )
injure-01 :arg1 ( person :quant num_0 :mod another ) :arg1-of injure-01
hope-01 :arg0 we :arg1 ( and :op1 ( arrive-01 :arg1 ( person :mod country_name_0 ) :arg1-of quick-02 ) :op2 ( provide-01 :arg0 person :arg1 ( assist-01 :mod professional :arg1-of need-01 :quant all ) ) ) :time ( call-02 :arg0 you :arg1 ambulance )
open-01 :arg0 i :arg1 ( scoring :time ( game :ord ( ordinal-entity ordinal-entity_num_0 ) :arg1-of ( include-91 :arg2 ( game :mod awkward :arg1-of ( range-01 :arg2 ( short :mod short ) ) ) ) ) ) :time ( evening :mod thursday )
and :op1 ( difficult :domain ( keep-04 :arg1 ( country :mod this ) :arg2 ( collapse-01 :arg1 country ) :time always ) ) :op2 ( hard-02 :arg1 ( say-01 :arg0 ( person :arg0-of ( head-01 :arg1 ( project :name ( name :op1 '' :op2 africa :op3 africa ) ) ) :arg0-of ( head-01 :arg1 project ) ) :arg1 ( person :arg0-of ( head-01 :arg1 project ) :arg0-of ( have-org-role-91 :arg1 ( group :mod research-01 :mod international ) :arg3 head-01 ) ) ) )
cooperate-01 :arg0 ( and :op1 ( person :arg0-of ( have-org-role-91 :arg1 ( military :mod country_name_0 ) :arg2 personnel ) ) :op2 ( person :arg0-of ( have-org-role-91 :arg1 intelligence :arg2 personnel ) ) :op3 ( person :arg0-of ( have-org-role-91 :arg1 intelligence :arg2 personnel ) ) :op4 ( person :arg0-of ( have-org-role-91 :arg1 intelligence :arg2 personnel ) ) :op5 ( person :arg0-of ( have-org-role-91 :arg1 intelligence :arg2 personnel ) ) ) :arg1 ( and :op1 ( fight-01 :arg0 person :arg1 ( threaten-01 :arg0 terrorist :location region ) ) :op2 ( receive-01 :polarity - :arg0 ( country :polarity - :location fame-01 :mod virtual ) :arg1 ( support-01 :arg1 west :mod such ) ) ) :manner close
multi-sentence :snt1 ( bring-up-02 :arg0 he :arg1 ( criticize-01 :arg0 he :mod universal ) :time ( after :op1 ( bring-up-02 :arg0 he :arg1 ( criticize-01 :arg0 he :mod universal ) ) ) :time ( after :op1 ( bring-up-02 :arg0 he :arg1 ( criticize-01 :arg0 he :mod universal ) ) ) ) :snt2 ( and :op1 ( explain-01 :arg0 he :arg1 ( thing :arg1-of ( comment-01 :arg0 he ) ) :time ( late :degree more ) ) :op2 ( say-01 :arg0 he :arg1 ( '' :domain i ) ) )
winced :mod kou
and :op1 ( focus-01 :arg0 ( legacy :poss they ) :arg2 ( and :op1 calories :op2 nutrition ) :mod constant ) :op2 ( say-01 :arg0 i :arg1 ( use-01 :arg1 science :manner amr-unknown :location cooking ) )
be-located-at-91 :arg1 ( and :op1 person_name_0 :op2 ( person :arg0-of ( have-org-role-91 :arg2 grigoryan ) ) ) :arg2 ( final :location ( shooting :source ( rifle :mod small-caliber ) ) )
and :op1 ( support-01 :arg0 person_name_0 :arg1 rule ) :op2 ( name-01 :arg0 person :arg1 ( person :arg0-of invest-01 ) :arg2 ( rate-entity-91 :arg1 ( more-than :op1 ( monetary-quantity monetary-quantity_num_0 :unit dollar ) ) :arg2 ( temporal-quantity temporal-quantity_num_1 :unit year ) ) :arg0-of ( guarantee-01 :arg1 ( pay-01 :arg0 ( person :arg0-of invest-01 ) :arg1 ( rate-entity-91 :arg1 ( more-than :op1 ( monetary-quantity monetary-quantity_num_1 :unit dollar ) ) :arg2 ( temporal-quantity temporal-quantity_num_1 :unit year ) ) ) ) )
say-01 :arg0 he :arg1 ( safe-01 :arg1 ( say-01 :arg0 he :arg1 ( visit-01 :arg0 ( person :arg0-of tour-01 :mod country_name_0 :quant ( number :time ( year :mod last ) ) ) :arg1 ( person :arg0-of tour-01 :mod country_name_1 ) :time ( year :mod last ) ) ) )
and :op1 ( appear-01 :arg1 ( information :topic ( neskorodov :mod dismissal ) ) :mod only :time ( evening :mod thursday ) ) :op2 ( cause-01 :polarity - :arg0 information :arg1 ( resonance :arg1-of wide-02 :location media ) )
and :op1 ( receive-01 :arg0 industry :arg1 ( order-01 :arg0 industry :arg2 ( tens :quant ( multiple :op1 ( mass-quantity mass-quantity_num_0 :unit gram ) ) ) :arg1-of long-03 ) ) :op2 ( know-02 :arg1 ( money :mod big ) :arg2 ( love-01 :arg1 peace ) )
come-01 :arg1 you :arg3 ( person :arg0-of ( have-rel-role-91 :arg1 you :arg2 significant-other ) )
expect-01 :arg0 ( demonstrate-01 :mod exceptional :mod exceptional ) :arg1 ( prepare-02 :arg0 demonstrate-01 :arg2 ( prepare-02 :arg2 rio ) :manner gradual ) :time ( after :op1 ( demonstrate-01 :mod exceptional :mod really ) )
and :op1 ( reduce-01 :arg1 ( demand-01 :arg1 market ) :arg1-of significant-02 ) :op2 ( reduce-01 :arg1 ( and :op1 num_0 :op2 electricity :op3 electricity :op4 num_1 ) :arg1-of significant-02 ) :condition ( leave-11 :arg0 ( plant :mod this :mod both ) :arg1 market )
take-01 :arg0 ( meet-03 :arg0 ( union-02 :arg1 country_name_0 :arg2 ( government-organization :arg0-of ( govern-01 :arg1 country_name_1 ) ) :mod executive ) ) :arg1 ( decide-01 :arg1 ( post-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg1 ( team :mod nation :mod country ) :arg2 chief ) ) :arg1 ( person :arg0-of ( have-org-role-91 :arg1 ( team :mod nation :mod country ) :arg2 chief ) ) :location ( cherchesov :mod ( stanislav :mod football ) ) ) )
aimed :arg1 ( g-class :arg1-of ( aim-02 :arg2 ( achieve-01 :arg1 ( efficient-01 :arg1-of ( high-02 :degree very ) ) ) ) ) :location country_name_0
mean-01 :arg1 it :arg2 ( emerge-01 :arg0 country_name_0 :arg1 crisis )
perform-01 :polarity - :arg0 she :manner ( well :degree equal :compared-to ( like-01 :arg0 she ) )
cause-01 :arg0 ( and :op1 ( show-01 :arg0 ( government-organization :arg0-of ( govern-01 :arg1 ( government-organization :arg0-of ( govern-01 :arg1 country_name_0 ) ) ) ) :arg1 ( thing :mod iron ) ) :op2 ( put-01 :arg0 government-organization :arg1 thing :arg2 ( and :op1 order :op2 anatoly :op3 ( member :arg2-of ( have-org-role-91 :arg1 ( committee :mod state :mod state ) ) :arg0-of ( have-org-role-91 :arg1 ( committee :mod state :mod state ) :arg2 member ) ) :op4 ( member :arg0-of ( have-org-role-91 :arg1 ( committee :mod state ) :arg2 member ) ) :op5 et-cetera ) ) )
break-up-08 :arg1 ( putin :name ( name :op1 mr. :op2 putin ) ) :location ( tirade :arg1-of anger-01 ) :arg0-of ( accuse-01 :arg1 putin :arg2 ( ankara :arg1 ( blow-14 :arg1 moscow ) :time back ) )
possible-01 :arg1 ( return-02 :arg0 we :arg1 ( brand :mod this ) :mod again ) :arg0-of ( cause-01 :arg1 ( think-01 :arg0 i :arg1 time ) )
mark-01 :arg0 this :arg1 ( mark-01 :arg0 this :arg1 ( help-01 :arg0 he :arg1 ( win-01 :arg0 he :ord ( ordinal-entity ordinal-entity_num_0 ) ) :arg2 ( track :arg1-of ( addict-01 :arg2 he ) :arg1-of ( train-01 :arg2 ( gosden :mod john ) ) ) ) )
contrast-01 :arg2 ( lead-01 :arg0 ( frankie :mod frankie ) :arg1 ( winners :location country_name_0 ) :arg1-of ( cause-01 :arg0 ( great :domain ( see-01 :arg0 i ) ) ) )
know-03 :arg0 nobody :time yet
contrast-01 :arg2 ( state-01 :arg0 ( thing :arg1-of state-01 :mod official ) :arg1 ( meet-03 :arg0 ( man :arg1-of ( include-91 :arg2 ( person :arg0-of ( have-org-role-91 :arg2 ( president :mod potential ) ) ) :arg3 ( person :arg0-of ( have-org-role-91 :arg2 ( president :mod potential ) ) ) :manner sudden ) ) :arg1 ( skepticism :mod great ) :manner sudden ) )
operation :domain ( complete-01 :arg1 ( close-01 :arg1 ( between :op1 viaduct :op2 bridge ) ) ) :concession ( and :op1 ( size :poss bridge :mod massive ) :op2 ( weight :poss bridge ) ) :concession ( operate-01 :arg1 ( and :op1 ( size :poss bridge ) :op2 ( weight :poss bridge ) ) )
see-01 :polarity - :arg0 company :arg1 ( play-02 :arg0 ( data :mod initial ) :arg1 ( data :arg1-of pass-03 ) :mod simple )
music_name_0 :location base
multi-sentence :snt1 ( contrast-01 :arg2 ( sign-01 :polarity - :arg0 ( person :mod ordinary :mod ordinary :mod just ) :arg1 language ) ) :snt2 ( say-01 :arg0 she :arg1 ( bother-01 :arg0 ( edmund :arg0 he ) :arg1 ( gestures :poss he ) ) )
and :op1 ( provide-01 :arg0 we :arg1 ( and :op1 free-03 :op2 ( class :name ( name :op1 inexpensive ) :arg1-of free-04 ) ) :time already :location ( organization :poss i ) ) :op2 ( and :op1 ( blacks :arg0 ( class :name ( name :op1 inexpensive :op2 youngsters ) ) :arg1 ( class :name ( name :op1 gymnastics :op2 youngsters ) :mod most :mod youngsters ) ) :op2 ( raise-02 :arg0 class :arg1 ( and :op1 ( champions :mod nation ) :op2 ( champions :mod international ) ) ) ) :location ( organization :poss i ) :time already
multi-sentence :snt1 ( say-01 :arg0 i :arg1 ( say-01 :arg0 i :arg1 ( die-01 :arg1 ( person :source country_name_0 :arg1-of ( resemble-01 :arg2 ( person :mod country_name_1 ) ) ) ) :mod just ) ) :snt2 ( say-01 :mode interrogative :arg0 i :arg1 ( die-01 :mode interrogative :arg1 ( person :source country ) ) )
know-01 :polarity - :arg0 ( person :arg0-of buy-01 ) :arg1 ( be-located-at-91 :arg1 ( person :arg0-of buy-01 ) :arg2 away :time ( bared :arg0 woman :arg1 ( person :arg0-of ( have-rel-role-91 :arg1 woman :arg2 panties ) ) :purpose ( try-01 :arg0 woman :arg1 ( on :arg0 woman :arg1 ( panties :poss woman ) ) ) ) :location ( floor :location ( middle :part-of primark ) ) )
and :op1 ( leave-17 :arg1 ( wall :name ( name :op1 gaping ) ) :arg3 ( holes :mod gaping ) ) :op2 ( opened :arg1 ( wall :location ( and :op1 floor :op2 wall ) ) :manner graffiti )
horrified :arg1 ( person :arg0-of tour-01 :location portugal ) :time ( touch-01 :arg0 ( aircraft :mod military :mod low-flying ) :arg1 beach :mod almost )
and :op1 ( become-01 :arg1 inspect-01 :arg2 ( activity-06 :arg1-of ( activity-06 :degree more ) ) ) :op2 ( face-01 :arg0 business :arg1 ( fines :quant ( up-to :op1 num_0 ) ) )
multi-sentence :snt1 ( agree-01 :arg0 he :arg1 ( likely-01 :arg1 ( introverts :arg0 ( person :arg0-of ( buy-01 :arg1 record ) ) :arg1 ( person :arg0-of ( buy-01 :arg1 record ) ) :degree most :arg1-of ( likely-01 :degree most ) ) ) ) :snt2 ( drink-01 :polarity - :arg0 i :arg1 ( much :degree very ) )
warms :arg1 air :arg4 ( temperature-quantity :quant num_0 ) :arg4 ( temperature-quantity :quant ( volume-quantity volume-quantity_num_0 :unit gallon ) )
investigate-01 :arg0 ( department :name ( name :op1 privolzhskoye :op2 privolzhskoye ) :arg0-of ( have-org-role-91 :arg1 ( department :name ( name :op1 tfr ) ) :arg2 department ) ) :arg1 ( thing :arg0-of ( cause-01 :arg1 ( land-01 :arg1-of hard-04 ) ) )
last-01 :arg1 ( regime :arg1-of special-02 ) :arg2 ( temporal-quantity temporal-quantity_num_0 :unit day )
offer-01 :arg0 ( government-organization :arg0-of govern-01 ) :arg1 ( agree-01 :arg0 government-organization :arg1 ( term :mod ( draft :name ( name :op1 sukhoi :op2 gold :op3 gold :op4 gold :op5 gold :op6 gold :op7 gold :op6 gold :op7 gold :op6 gold :op7 gold ) ) ) )
introduce-01 :arg1 project :arg2 ( they :quant ( multiple :op1 num_0 ) ) :time ( evening :mod wednesday )
contrast-01 :arg2 ( launch-01 :arg0 group :arg1 ( merge-01 :arg1 group ) :time ( late :degree more :quant much :compared-to ( company :arg0-of ( compete-02 :arg1 group ) ) ) )
have-03 :arg0 ( location :arg2-of ( location :poss ( team :mod country_name_0 ) ) ) :arg1 ( center :mod medicine :arg1-of ( ready-02 :arg2 ( provide-01 :arg0 team :arg1 ( person :arg0-of ( reside-01 :arg1 house ) :arg2-of ( include-01 :arg1 ( and :op1 relaxing :op2 sport ) ) ) ) ) :time ( time :mod any ) ) :mod of-course
headquarter-01 :arg1 ( delegation :poss we ) :domain ( center :poss ( delegation :poss we ) )
carries :arg0 person_name_0 :arg1 ( care-01 :arg0 person :arg1 ( athletes :poss ( team :name ( name :op1 abc ) :mod country_name_2 ) ) :mod spiritual ) :arg2 ( blessing :poss ( and :op1 moscow :op2 ( russia :quant all ) ) )
and :op1 ( picked :arg0 i :arg1 cod :arg1-of personal-02 ) :op2 ( steamed :arg0 i :arg1 ( meatballs :mod tomato ) :location ( sauce :mod tomato ) )
contrast-01 :arg1 ( formulate-01 :arg1 ( thing :arg1-of answer-01 ) :manner ( precise :degree such ) :manner ( way :mod such ) ) :arg2 ( sentences :arg1 answer-01 :arg2 ( sentence-01 :arg2 dissuade :quant several ) :arg1-of strong-02 )
and :op2 ( possible-01 :arg1 ( amount :quant-of ( tax-01 :arg3 ( budget :poss ( tax-01 :arg3 ( level :quant all ) ) ) ) ) :arg4 ( ruble :quant num_0 :mod ruble ) :time ( after :op1 ( commissioning :arg1 ( gok :mod gok ) ) ) )
contrast-01
musician :polarity - :domain he :mod professional
say-01 :arg0 source :arg1 ( sure-02 :arg0 ( and :op1 ( agency :mod fbi ) :op2 ( agency :mod intelligence :mod other ) ) :arg1 ( involve-01 :arg1 and :arg2 ( attack-01 :mod cyber ) ) :mod almost )
and :op1 ( find-01 :arg0 i :arg1 ( confirmation :poss ( claim-01 :mod this ) ) ) :op2 ( find-02 :arg0 i :arg1 ( and :op1 ( abuse-01 :arg0 company :arg1 ( thing :arg2-of ( position-01 :arg1 ( thing :arg1-of claim-01 :mod this ) ) ) ) :op2 ( find-01 :arg0 company :arg1 ( and :op1 ( abuse-02 :arg0 company :arg1 ( thing :arg2-of ( position-01 :arg1 company ) ) ) :op2 ( force-01 :arg0 company :arg1 company :arg2 ( install-01 :arg0 company :arg1 ( application :mod other ) :manner together :prep-with ( store :name ( name :op1 google ) ) :manner together ) ) ) ) ) )
and :op1 ( continue-01 :arg0 ( person :arg1-of ( employ-01 :arg0 organization ) ) :arg1 ( monitor-01 :arg0 person :arg1 situation :location ( point :quant num_0 :location ( border-01 :arg1 ( and :op1 ( person :arg0-of ( have-org-role-91 :arg2 head-of-state ) ) :op2 ( person :arg0-of ( have-org-role-91 :arg2 head-of-state ) ) :op3 ( person :arg0-of ( have-org-role-91 :arg2 head-of-state ) ) :op4 ( person :arg0-of ( have-org-role-91 :arg2 head-of-state ) ) :op5 ( person :arg0-of ( have-org-role-91 :arg2 head-of-state ) ) ) ) ) ) )
and :op1 ( grow-01 :arg1 she :location blue ) :op2 ( take-01 :arg0 she :arg1 ( stick :mod hockey ) ) :op3 ( play-02 :arg0 ( sisters :mod ( old :degree more ) :poss she ) :arg1 ( sport :mod this ) :time ( age-01 :arg1 she :arg2 ( temporal-quantity temporal-quantity_num_0 :unit year ) ) ) :op4 ( join-01 :arg0 she :arg1 ( team :mod nation ) :time ( age-01 :arg1 she :arg2 ( temporal-quantity temporal-quantity_num_2 :unit year ) ) ) :op4 ( become-01 :arg1 ( team :mod nation ) :arg2 ( thing :arg0-of ( play-12 :arg2 youngest ) :poss she ) :time history )
contrast-01 :arg1 ( approach-02 :arg0 ( person :arg0-of ( have-org-role-91 :arg1 country_name_0 ) ) :arg1 game :manner ( win-01 :polarity - :arg0 person :arg1-of single-02 ) ) :arg2 ( show-01 :arg0 team :arg1 ( and :op1 ( tight :arg1 person :arg0-of surprise-01 ) :op2 ( keep-01 :arg0 person :arg1 ( product-of :op1 num_0 :op2 num_0 ) :time ( until :op1 ( end-01 :arg1 ( period :ord ( ordinal-entity ordinal-entity_num_1 ) ) ) :time ( take-04 :arg0 person :arg1 initiative ) ) ) ) )
and :op1 ( seem-01 :arg1 ( possible-01 :polarity - :arg1 ( avoid-01 :arg1 ( event :location ( janeiro :mod de ) ) ) ) ) :op2 ( possible-01 :polarity - :arg1 ( avoid-01 :arg1 ( and :op1 compete-02 :op2 ( thing :arg1-of aspire-01 ) :domain this ) ) )
and :op1 ( grow-01 :arg1 ( tension :location ( along :op1 ( border :prep-with ( border-01 :arg2 location_name_0 ) ) ) ) ) :op2 ( claim-01 :arg0 ( border :mod controversy ) :arg1 ( live-01 :arg0 ( border :mod this ) ) ) :time ( time :arg1-of same-01 )
(-(
phone-number-entity phone-number-entity_num_0 :time once
coffee :mod drink :mod ( again :mod now ) :concession ( order-02 :arg0 she :arg1 ( tea :mod blended ) :arg1-of ( instead-of-91 :arg2 ( ice-tea :arg1-of regular-02 :mod another ) ) )
tell-01 :arg0 person_name_0 :arg1 ( want-01 :arg0 he :arg1 ( experiment-01 :arg0 he :arg1 ( dishes :mod new ) :location menu ) ) :arg2 he
add-01 :arg0 ( person :arg0-of ( have-rel-role-91 :arg1 person :arg2 husband ) ) :arg1 ( message-01 :arg0 person :arg1 ( thing :manner-of eat-01 ) :mod also )
make-18 :arg1 ( calculation :quant all )
say-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg1 political-party_name_0 ) ) :arg1 ( return-01 :arg1 i :arg4 turkey :condition ( confirm-01 :arg1 ( charge-05 :quant some :arg1-of ( include-91 :arg2 charge-05 ) ) ) ) :mod also
participate-01 :arg0 ( person :arg0-of study-01 :mod hundred :quant several ) :arg1 demonstrate-01 :purpose ( express-01 :arg0 person :arg1 ( concern-01 :arg0 plan-01 ) )
contrast-01 :arg1 ( policy :mod ideal :domain this ) :arg2 ( policy :mod ideal :domain this ) :arg1-of ( cause-01 :arg0 ( and :op1 ( background :mod ( corrupt-01 :arg1 rampant ) ) :op2 ( lack-01 :arg1 ( compete-02 :arg0 background :arg1 ( industry :mod defense :part-of instrument ) :arg1-of normal-02 ) ) ) )
admit-01 :arg0 i :arg1 ( fall-01 :arg1 intentionally :arg4 track :time ( after :op1 ( start-01 :arg1 unsuccessful ) ) ) :time ( after :op1 ( triumph :location ( relative-position :op1 ( value-interval :op1 num_0 :op2 hoy ) ) ) )
discuss-01 :arg0 he :arg1 ( discuss-01 :arg0 he :time yesterday ) :time ( demand-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg2 official ) ) :arg1 ( measure-01 :arg0 person :arg1 ( weight :poss person ) ) )
include-01 :arg1 ( and :op1 ( person :arg0-of campbell ) :op2 ( person :arg0-of evangelista ) :op3 ( person :arg0-of kate ) :op4 ( person :arg0-of kate ) ) :arg2 ( woman :time previous )
create-01 :arg0 we :arg1 ( and :op1 ( job :quant num_0 :mod new ) :op2 ( job :quant num_1 :mod new ) :op3 ( job :quant num_1 :mod new ) ) :arg0-of ( end-01 :arg1 ( end-01 :arg1 ( employ-01 :polarity - ) :location ( around :op1 airport ) ) ) :mod only
recommend-01 :arg1 ( call-01 :arg0 ( someone :arg0-of ( have-03 :arg1 ( information :topic ( incident :arg1-of ( near-02 :arg2 ( near-02 :arg2 walrus ) ) ) ) ) ) :arg1 police :arg2 ( or :op1 ( person :quant num_0 ) :op2 ( person :quant num_1 ) ) )
obligate-01 :arg2 ( right-05 :arg1 he :arg2 ( vote-01 :arg0 he ) :time ( decide-01 :arg0 he :arg1 ( decide-01 :arg0 he :arg1 ( affect-01 :arg0 ( work-01 :arg1 team ) :arg1 ( work-01 :arg0 team ) ) ) ) :mod also )
exhaustible :polarity - :arg1 ( resource :arg1-of key-02 :mod namibia :quant all )
and :op1 ( boyadzhiev :arg0 ( person :arg0-of ( head-01 :arg1 ( excavation :location ( yunatsite :name ( name :op1 telle ) ) ) ) ) :arg1 ( find-01 :arg0 person :arg1 ( bc :location 4600 ) ) ) :op2 ( state-01 :arg0 person :arg1 ( over :op1 ( gold :mod varna :duration ( at-least :op1 ( temporal-quantity temporal-quantity_num_0 :unit year ) ) ) ) )
and :op1 ( brother :arg0 ( and :op1 ( person :arg0-of ( have-rel-role-91 :arg1 victim :arg2 brother ) ) :op2 ( person :arg0-of ( have-rel-role-91 :arg1 victim :arg2 galicia ) ) :op3 ( person :arg0-of ( have-rel-role-91 :arg1 victim :arg2 galicia ) ) :op4 ( channel :name ( name :op1 louis ) ) :op5 ( channel :name ( name :op1 louis :op2 radio ) ) ) :arg1 ( work-01 :arg0 person :arg1-of ( dream-01 :arg0 person ) ) :time past ) :op2 ( obtain-01 :arg0 person :arg1 ( work-01 :arg0 person :arg1-of ( dream-01 :arg0 person ) ) :time ( before :op1 now :quant ( temporal-quantity temporal-quantity_num_0 :unit month ) ) ) :manner frank
and :op1 ( thing :arg1-of ( think-01 :arg0 we ) ) :op2 ( person :arg0-of ( have-rel-role-91 :arg1 we :arg2 friend ) ) :op3 ( person :arg0-of ( have-rel-role-91 :arg1 we :arg2 friend ) ) :op4 ( person :arg0-of ( have-rel-role-91 :arg1 we :arg2 friend ) ) :op5 ( person :arg0-of ( have-rel-role-91 :arg1 we :arg2 friend ) )
say-01 :arg0 person_name_0 :arg1 ( possible-01 :polarity - :arg1 ( imagine-01 :arg0 ( someone :arg0-of ( desire-01 :arg1 ( cause-01 :arg0 someone :arg1 ( pain-01 :arg1 ( person :mod junior :arg0-of ( have-rel-role-91 :arg1 someone :arg2 brother ) ) ) ) ) ) :arg1 someone ) )
state-01 :arg0 ( they :location ( bank :mod central :part-of country ) ) :arg1 ( maximum :op1 ( transfer-01 :arg0 ( agency :mod news :mod international :mod international ) :arg1 sum ) )
communicated :arg0 it :arg1 ( and :op1 ( product :arg1-of gross-03 :mod domestic :quant ( between :op1 num_0 :op2 num_1 ) ) :op2 ( product :arg1-of gross-03 :mod domestic ) :op3 num_3 :op4 num_3 ) :time previous :time ( end-01 :arg1 ( debt :quant num_0 :mod ( government-organization :arg0-of govern-01 ) ) )
contrast-01 :arg2 ( test-01 :arg0 email-01 :arg1 ( order :quant ( percentage-entity percentage-entity_num_0 ) ) )
require-01 :arg0 ( observance :arg1 ( water :mod mineral ) ) :arg1 ( recommend-01 :arg1 ( drink-01 :arg1 water ) :time ( time :arg1-of specific-02 ) :arg1-of ( cause-01 :arg0 ( and :op1 ( temperature :arg1-of need-01 ) :op2 ( temperature :arg1-of specific-02 ) ) ) )
be-temporally-at-91 :arg1 ( index :mod this ) :arg2 ( since :op1 ( begin-01 :arg1 ( index :mod num_0 ) ) )
say-01 :arg0 ( data :mod data :time ( late :degree most ) ) :arg1 ( compare-01 :arg1 ( economy :poss country_name_0 ) :arg2 ( percentage-entity percentage-entity_num_0 ) :direction down )
remain-01 :arg1 ( recession-02 :location ( economy :poss country_name_0 ) ) :time past
differ-02 :arg1 ( history :poss ( change-01 :arg1 citizenship ) ) :time ( case :mod each )
sport :domain ( gymnast :quant num_0 :mod additional ) :mod ( time :mod this ) :mod ( time :mod this ) :mod ( time :mod this )
acknowledge-01 :arg0 ( person :arg0-of ( play-01 :arg1 planet ) :mod ( good :degree most ) ) :arg1 ( birth-01 :arg1 ( person :arg0-of ( have-rel-role-91 :arg2 son ) ) ) :manner literal :time ( year :mod literal )
gambit :mod turkish
and :op1 ( fall-01 :arg1 ( thing :arg1-of suspect-01 :quant all ) :arg2 ( person :quant ( about :op1 num_0 ) ) ) :op2 ( prove-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg2 servicemen ) ) :arg1 ( and :op1 ( person :arg0-of teach-01 ) :op2 scientist ) )
change-01 :arg1 situation :time ( time :mod ( small :degree extreme ) )
multi-sentence :snt1 ( and :op1 ( other :domain other ) :op2 ( small :degree more :domain ( care-03 :arg0 ( individual :arg0-of ( care-03 :arg1 bank ) ) :arg1 ( individual :arg1-of private-03 :arg0-of ( obtain-01 :arg1 bank :degree more :compared-to ( influence-01 :arg0 bank ) ) ) ) ) ) :snt2 ( and :op1 coutts :op2 adam :op3 company :op4 company :op5 ( bank :mod military ) :time ( date-entity decade_date-entity_0 ) )
multi-sentence :snt1 ( and :op2 ( possible-01 :mode interrogative :arg1 ( finish-01 :polarity - :arg0 he :arg1 ( period :mod some ) :time yet ) ) ) :snt2 ( say-01 :arg0 it :arg1 ( want-01 :arg0 he :arg1 ( continue-01 :arg0 he :arg1 ( participate-01 :arg0 he :arg1 competition ) :mod at-least ) ) :time previous )
contrast-01 :arg2 ( appear-02 :arg1 ( appear-02 :arg1 ( succeed-01 :arg0 ( and :op1 ( application :arg0-of ( unite-01 :arg1 ( and :op1 ( reality :mod physical ) :op2 ( reality :mod virtual ) :prep-with ( activity-06 :mod physical :location ( world :mod real ) ) ) ) ) :op2 ( help-01 :arg1 ( activity-06 :arg0 ( person :quant many ) :arg2 ( activity-06 :arg0 person ) ) ) :manner ( grow-01 :arg1 and :manner health :manner health ) ) ) ) )
multi-sentence :snt1 ( prevailing :arg1 ( temporal-quantity temporal-quantity_num_0 :unit year ) :arg2 sport :arg1-of ( cause-01 :arg0 ( form :poss sport ) ) :time ( before :op1 now :duration ( temporal-quantity temporal-quantity_num_3 :unit year ) ) ) :snt2 ( and :op1 ( win-01 :arg0 ( win-01 :arg1 ( gold :quant num_0 :arg1-of ( include-91 :arg2 ( gold :mod ( stunning :mod such ) ) ) ) ) :arg2 ( program :name ( name :op1 diligently ) :mod ( stunning :mod such ) ) ) :op2 ( named :arg0 ( person :arg1-of ( see-01 :arg0 i :frequency sometimes ) ) ) )
duty :topic ( act-02 :mod flood ) :location ( south :part-of ( expect-01 :arg1 ( act-02 :mod flood ) ) ) :time ( since :op1 ( continue-01 :arg1 rain-01 :location ( region :arg1-of mobile-02 ) ) )
indicate-01 :arg0 ( khansford :arg1 ( water :arg1-of ( be-located-at-91 :arg2 ( house :poss water :quant ( more-than :op1 num_0 ) ) :mod usual ) ) ) :arg1 ( rise-01 :arg1 water :time ( after :op1 now :quant ( up-to :op1 ( temporal-quantity temporal-quantity_num_0 :unit foot ) ) ) )
contrast-01 :arg1 ( and :op1 ( speak-01 :arg0 ( and :op1 ( person :arg0-of ( have-rel-role-91 :arg2 grandmother ) ) :op2 ( person :arg0-of ( have-rel-role-91 :arg2 grandfather ) ) ) ) :op2 ( obtain-01 :arg0 person :arg1 ( wound-01 :arg1 person :quant numerous ) ) ) :arg2 ( be-located-at-91 :arg1 person :arg2 consciousness :time ( transport-01 :arg0 person :arg1 it :arg4 hospital ) )
report-01 :arg0 ( person :arg0-of inspect-01 ) :arg1 ( cbs :arg0 ( person :quant several :arg1-of arm-01 ) :mod apparent ) :arg2 ( person :arg0-of inspect-01 )
cause-01 :arg0 amr-unknown :arg1 ( need-01 :arg1 ( and :op1 simon :op2 gabbi :op3 laurie ) )
trained :arg0 ( person_name_0 :arg0-of ( have-org-role-91 :arg1 ( baylzs :poss person ) :arg2 trainer ) ) :arg1 ( sportswomen :poss person ) :arg2 ( moment :mod that ) :time ( moment :mod that ) :arg1-of ( cause-01 :arg0 ( start-01 :arg0 person :arg1 gymnastics ) )
examine-01 :arg1 version :purpose ( require-01 :arg1 ( vote-01 :arg1 ( card :mod identity :time present ) :time ( before :op1 vote-01 ) ) )
multi-sentence :snt1 ( amr-unknown
multi-sentence :snt1 ( acknowledge-01 :arg0 it :arg1 ( guilty-01 :arg1 it ) :arg1-of ( doubt-01 :time absence ) ) :snt2 ( be-located-at-91 :mode interrogative :arg1 ( standard :mod criminal-03 ) :arg2 ( thing :arg0-of reason-01 ) )
multi-sentence :snt1 ( and :op1 ( selection :domain this ) :op2 ( selection :arg1 word :arg2 we ) :domain this ) :snt2 ( pity :domain ( proizoshlo :mod this ) )
multi-sentence :snt1 ( want-01 :arg0 i :arg1 ( use-01 :arg0 i :arg1 moment :purpose ( apologize-01 :arg0 i :arg2 ( comment-01 :arg0 i :arg3 commentary ) ) ) ) :snt2 ( say-01 :arg0 he :arg1 ( thing :arg2-of ( characteristic-02 :arg1 ( game :mod olympic ) ) ) :medium ( infringe-01 :arg1 ( game :mod olympic ) ) )
multi-sentence :snt1 ( say-01 :arg0 ( person :arg0-of ( have-rel-role-91 :arg1 ( person :quant num_0 :arg0-of ( have-rel-role-91 :arg1 person_name_0 :arg2 child ) ) :arg2 mother ) ) :arg1 ( person :arg0-of ( have-rel-role-91 :arg1 ( person :quant num_0 :arg0-of ( have-rel-role-91 :arg1 ( person :quant num_0 :arg0-of ( have-rel-role-91 :arg1 ( person :quant num_0 :arg0-of ( have-rel-role-91 :arg1 person :arg2 child ) ) :arg2 child ) ) :arg2 mother ) ) :time ( time :mod this ) ) ) :time ( time :mod this ) :location store ) :snt2 ( and :op2 ( leave-11 :mode interrogative :arg0 you :arg1 store ) )
infer-01 :arg1 ( obligate-01 :arg2 ( be-located-at-91 :arg1 hand :arg2 ( framework :poss ( person :quant num_0 ) ) :time recent ) )
nothing :mod ( nothing :compared-to this )
multi-sentence :snt1 ( say-01 :arg0 ( communicate-01 :mod regulator ) :arg1 ( akb :mode interrogative :mod ao ) ) :snt2 ( gazstroybank :mode interrogative :arg1-of ( connect-01 :arg2 ( arrange-01 :arg1 ( resource :mod cash ) :arg1-of ( connect-01 :arg2 ( asset :mod cash ) ) ) ) )
multi-sentence :snt1 ( network :mod ( store :name ( name :op1 steys ) ) ) :snt2 ( book :mod new :arg1-of ( mean-01 :arg2 ( sell-01 :arg1 ( book :mod ( news :mod urban ) ) ) ) ) :li num_0
multi-sentence :snt1 ( source
probable :domain ( request-01 :arg0 i :arg1 ( stop-01 :arg0 camera :arg1 ( scene :arg1-of follow-01 ) ) :arg1-of ( cause-01 :arg0 ( and :op1 ( situated :arg1 i :arg2 ( person :location ( some :arg1-of ( include-91 :arg2 ( store :mod this ) ) ) :manner close ) ) :op2 ( attempt-01 :arg0 i :arg1 ( estimate-01 :arg0 i :arg1 ( and :op1 ( age :poss they ) :op2 ( attitude :mod emotional ) ) :arg2 ( aid-01 :arg2 observation ) ) ) ) ) )
pairs :arg1 ( and :op1 ( person :arg0-of tour-01 ) :op2 ( person :arg0-of tour-01 ) :op3 ( person :arg0-of tour-01 ) :op4 ( person :arg0-of tour-01 ) :op5 ( person :arg0-of tour-01 ) )
contrast-01 :arg1 ( good :domain it ) :arg2 ( spend-01 :polarity - :arg0 it :arg1 money )
say-01 :arg0 he :arg1 ( convey-01 :arg0 spaces :arg1 ( and :op1 refugee :op2 ( person :arg0-of volunteer-01 ) ) :manner blunt-02 )
multi-sentence :snt1 ( and :op1 ( add-01 :arg0 i :arg1 ( rate-entity-91 :arg1 num_0 :arg2 ( more-than :op1 ( temporal-quantity temporal-quantity_num_0 :unit year ) ) ) ) :op2 ( be-located-at-91 :arg1 i :arg2 ( under :op1 ( temporal-quantity temporal-quantity_num_1 :unit minute ) ) ) ) :snt2 ( half :mode interrogative )
strong-02 :arg1 we :time phase
multi-sentence :snt1 ( amr-unknown
report
explode-01 :time ( birthday :poss ( queen :poss ( person :arg0-of ( have-org-role-91 :arg1 country_name_0 :arg2 queen ) ) ) )
equal-01 :polarity - :arg1 ( presence :location ( capital :arg0-of ( have-org-role-91 :arg2 capital ) ) :ord ( ordinal-entity ordinal-entity_num_0 ) ) :arg2 ( product-of :op1 ( less-than :op1 num_1 ) :op2 ( percentage-entity percentage-entity_num_1 ) )
cause-01 :arg0 ( possible-01 :arg1 ( and :op1 ( call-01 :arg0 ( person :arg0-of lead-02 :quant several ) :arg1 ( person :arg0-of lead-02 ) :arg2 ( asset :poss person ) ) :op2 ( call-01 :arg0 person :arg1 ( person :arg0-of ( have-org-role-91 :arg2 personnel ) ) :arg2 ( fund-01 :arg1 ( sphere :mod influence-01 ) ) ) ) :arg1 ( designations :arg0 ( person :arg0-of ( have-org-role-91 :arg2 personnel ) ) :arg1 ( fund-01 :arg0 person :arg1 group ) ) )
multi-sentence :snt1 ( work-01 :mode interrogative :arg0 you ) :snt2 ( and :op1 ( pite :mode interrogative :arg0 ( and :op1 ( lowry :name ( name :op1 tandem ) ) :op2 ( dragon :name ( name :op1 tandem ) ) ) :arg1 ( project :mod ambitious :mod ambitious ) ) :op2 ( enter-01 :arg0 ( and :op1 ( lowry :name ( name :op1 tandem ) ) :op2 ( scenario :name ( name :op1 lowry ) ) ) :arg1 ( project :mod new :mod ambitious :topic ( boy :arg1 ( barry :mod james ) ) ) ) )
leave-11 :arg0 i :arg1-of ( see-01 :arg0 ( eye :part-of he ) ) :ord ( ordinal-entity ordinal-entity_num_0 )
include-91 :polarity - :arg1 ( person :quant num_0 :arg0-of tour-01 :mod foreign ) :arg2 ( person :arg0-of tour-01 :mod foreign )
confirm-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg1 ( company_name_0 :quant num_0 ) :arg2 member ) ) :arg1 ( discuss-01 :arg1 ( project :mod this ) )
state-01 :arg0 they :arg1 ( remove-01 :arg0 they :arg1 ( function-01 :mod this ) ) :arg1-of ( cause-01 :arg0 ( and :op1 ( communicate-01 :arg1-of extend-01 :location ( and :op1 ( reportings :location ( and :op1 verge :op2 motherboard ) ) :op2 ( indignation :location ( and :op1 verge :op2 motherboard ) ) ) ) :op2 ( motherboard :arg1 track ) ) )
add-01 :arg0 i :arg1 ( goal :mod final :time ( middle :op1 ( period :ord ( ordinal-entity ordinal-entity_num_0 ) ) ) )
multi-sentence :snt1 ( establish-01 :mode interrogative :arg1 ( person :mod old ) ) :snt2 ( willow :mode interrogative )
possible-01 :arg1 ( solve-01 :arg1 ( thing :arg1-of question-01 :ord ( ordinal-entity ordinal-entity_num_0 ) :topic pension ) :time ( after :op1 now :quant ( temporal-quantity temporal-quantity_num_1 :unit week ) ) )
say-01 :arg0 ( person :arg0-of criticize-01 :arg2-of ( include-01 :arg1 ( candidate :source ( and :op1 ( person :arg0-of ( have-org-role-91 :arg1 political-party_name_0 :arg2 president ) ) :op2 ( person :arg0-of ( have-org-role-91 :arg1 political-party :arg3 ( lead-02 :arg0 person ) ) ) :op3 ( person :arg0-of ( have-org-role-91 :arg1 political-party :arg3 ( lead-02 :arg0 person ) ) ) :op4 ( person :arg0-of ( have-org-role-91 :arg1 political-party :arg3 ( lead-02 :arg0 person ) ) ) :op5 ( person :arg0-of ( have-org-role-91 :arg1 political-party :arg3 ( lead-02 :arg0 person ) ) ) ) ) ) ) :arg1 ( raise-01 :arg0 ( fail-01 :arg1 person :arg2 ( state :poss person ) ) :arg1 ( and :op1 ( operation :mod business :poss person ) :op2 ( operation :mod business :poss person ) ) :arg2-of ( include-01 :arg1 ( and :op1 country :op2 country ) ) )
consist-01 :arg1 ( thing :ord ( ordinal-entity ordinal-entity_num_0 ) :arg1-of ( consist-01 :arg2 ( thing :arg2-of title-01 ) ) ) :arg2 ( thing :quant num_1 :arg1-of ( consist-01 :arg2 ( thing :arg2-of title-01 ) ) ) :time ( before :op1 ( destroy-01 :arg0 ( and :op1 ( elephant :arg1-of destroy-01 ) :op2 ( proceeds :arg1-of ( supply-01 :arg2 horn ) ) ) ) )
say-01 :arg0 ( thing :quant num_0 :arg1-of ( include-91 :arg2 ( priority :mod basic :mod ( cooperate-01 :arg2 country_name_0 ) ) ) ) :arg1 ( extend-01 :arg1 trade-01 :mod further ) :mod certain
multi-sentence :snt1 ( exemplify-01 :mode interrogative :arg0 develop-01 ) :snt2 ( and :op1 ( begin-01 :mode imperative :arg0 you :mod still ) :op2 ( introduce-01 :arg1 i :arg2 ( build-01 :arg1 it ) ) :op3 ( introduce-01 :arg1 it :arg2 ( build-01 :arg1 it ) ) )
multi-sentence :snt1 ( be-located-at-91 :mode interrogative :arg2 location_name_1 ) :snt2 ( cleaning :mode interrogative :arg1-of ( cause-01 :arg0 ( step-01 :arg2 ( manage-01 :arg1 ( person :arg0-of ( have-org-role-91 :arg1 country_name_0 :arg2 troop ) ) ) ) :arg1-of complete-02 ) )
state-01 :arg0 country_name_0 :arg1 ( right-06 :arg1 ( win-01 :time ( before :op1 now :quant ( up-to :op1 ( temporal-quantity temporal-quantity_num_0 :unit year ) ) ) ) :manner unexpected :time ( before :op1 ( win-01 :arg0 country ) ) ) :time ( after :op1 ( state-01 :arg0 country :arg1 ( state-01 :arg0 country :arg1 ( right :topic ( fifth :arg1 ( gold :quant num_0 gold gold :mod gold :poss he ) ) ) ) ) )
state-01 :arg0 ( company :mod country_name_0 ) :arg1 ( contrast-01 :arg1 ( conclude-01 :arg0 company :arg1 ( contract-02 :arg0 company :arg1 ( come-01 :arg1 company :arg4 force-04 :time ( year :mod this ) ) :arg1-of ( obligate-01 :arg2 ( come-01 :arg1 company :arg4 force-04 :time ( year :mod this ) ) ) ) ) :arg2 ( obligate-01 :arg2 ( explain-01 :arg0 company :arg1 it :arg0-of ( cause-01 :arg1 ( contract-02 :arg1 it ) ) ) ) )
multi-sentence :snt1 ( write-01 :arg0 ( person_name_0 :arg0-of ( represent-01 :arg1 ( person :arg0-of ( represent-01 :arg1 ( person :arg0-of ( represent-01 :arg1 country_name_1 ) ) ) ) ) ) :arg1 that ) :snt2 ( and :op1 ( form :mod ( fight-01 :arg0 ( association :arg1-of ( blokirovshchikov :arg2 ( and :op1 ( code :arg1-of open-09 ) :op2 ( code :arg1-of open-09 ) ) ) :mod mutual ) ) :mod mutual ) :op2 ( possible-01 :arg1 ( solve-01 :arg0 facebook :time soon :time soon ) ) ) :medium ( blog-01 :arg0 he )
importance :domain ( have-03 :arg0 law_name_0 :arg1 ( importance :prep-for ( process-02 :mod this ) ) ) :arg0-of ( cause-01 :arg1 ( important :domain ( support-01 :arg0 ( government-organization :arg0-of govern-01 ) :arg1 ( free-04 :arg1 speak-01 ) :arg1-of strong-02 ) ) )
multi-sentence :snt1 ( amr-unknown
say-01 :arg0 ( person :arg0-of ( represent-01 :arg1 country_name_0 :arg2 permanent :mod permanent ) ) :arg1 ( useful-05 :arg1 ( meet-03 :arg0 ( person :arg0-of ( have-org-role-91 :arg1 ( council :mod security :mod country_name_1 ) :arg2 peninsula_name_2 ) ) :mod last ) :arg2 interfax )
say-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg1 country_name_0 :arg3 ( lead-02 :arg0 person :arg1 country_name_1 ) ) ) :arg1 ( defeat-01 :arg1 ( person :quant num_0 :arg1-of ( include-91 :arg2 ( person :quant num_1 :arg1-of ( include-91 :arg2 ( person :quant num_1 :arg0-of daniel ) ) ) ) ) :arg3 ( final :quant ( between :op1 num_0 :op2 num_2 ) ) :arg4 ( final :quant-of ( game :name ( name :op1 olympic :op2 num_3 :op3 num_3 :op4 num_3 :op5 num_3 :op6 num_3 :op7 num_3 ) ) ) )
say-01 :arg0 ( bank :mod central :poss country ) :arg1 ( peak-01 :arg1 ( amount :mod this ) :mod historic )
conclude-01 :arg0 ( team :mod international :consist-of critic ) :arg1 ( live-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg1 ( team :mod international ) :arg3 ( apprentice-01 :arg0 person ) ) ) :arg1-of ( cause-01 :arg0 ( possible-01 :arg1 ( live-01 :arg0 ( person :arg0-of ( live-01 :arg1-of ( possible-01 :polarity - ) ) ) :time ( about :op1 ( temporal-quantity temporal-quantity_num_0 :unit year ) ) :arg1-of possible-01 ) ) ) )
report-01 :arg0 ( person_name_0 :arg0-of ( have-org-role-91 :arg1 country_name_1 :arg2 president ) ) :arg1 ( decree :arg0-of ( change-01 :arg1 ( composition :poss ( council :mod security :poss ( country_name_1 :mod security ) ) ) ) )
apply-02 :arg1 ( and :op1 ( person :arg0-of ( have-org-role-91 :arg2 ( agent :mod chemical ) ) ) :op2 ( person :arg0-of ( have-org-role-91 :arg2 ( agent :mod chemical ) ) ) :op3 ( person :arg0-of ( have-org-role-91 :arg2 ( agent :mod chemical ) ) ) :op4 ( soap :mod green ) ) :arg2 ( person :arg0-of ( have-org-role-91 :arg2 ( agent :mod chemical ) ) ) :time ( end-01 :arg1 summer ) :mod only
contrast-01
contrast-01 :arg2 ( possible-01 :arg1 ( assume-02 :arg0 one :arg1 ( and :op1 ( expect-01 :arg1 ( slow-01 :arg0 ( portion :part-of ( fall-01 :arg1 ( economy :poss country_name_0 ) ) ) :arg1 ( product-of :op1 ( percentage-entity percentage-entity_num_0 ) :op2 ( percentage-entity percentage-entity_num_1 ) ) ) ) ) :op2 ( say-01 :arg0 ( person :arg0-of analyze-01 ) :arg1 ( rogov :arg0 ( person :arg0-of analyze-01 ) :arg1 ( rogov :name ( name :op1 clubs :op2 irina ) ) ) ) ) :arg1-of general-02 )
emigrated :arg0 ( family :arg1-of ( have-org-role-91 :arg0 she :arg2 member ) ) :arg1 ( family :arg1-of ( have-org-role-91 :arg0 she :arg2 member ) ) :arg2 country_name_0 :duration ( temporal-quantity temporal-quantity_num_0 :unit year :mod only ) :time ( naste :arg1 naste )
and :op2 ( example :mod such :poss country )
say-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg2 '' ) ) :arg1 ( try-01 :arg0 he :arg1 ( get-01 :arg0 he :arg1 ( benefit-01 :arg0 ( and :op1 ( person :arg0-of ( have-org-role-91 :arg2 head-of-state ) ) :op2 ( person :arg0-of ( have-org-role-91 :arg2 '' ) ) ) :mod maximum ) ) )
vote-01 :arg0 ( and :op1 doctor :op2 ( person :arg0-of study-01 :mod junior :location july ) ) :arg1 ( abolition :arg1 transact-01 ) :subevent-of ( agree-01 :arg0 and :arg1 ( contract-02 :arg0 and ) )
reject-01 :arg0 ( person :arg1-of ( include-91 :arg2 ( person :arg0-of ( participate-01 :arg1 ( agent :mod secret ) ) ) ) :quant ( percentage-entity :value num_0 ) ) :arg1 she
cause-01 :arg0 ( receive-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg2 ( president :mod vice ) ) ) :arg1 ( apology :arg1-of ( demand-01 :arg0 person :source ( person :arg0-of ( have-org-role-91 :arg2 president ) ) ) ) :mod only ) :time end-01
keep-04 :arg1 this :arg2 ( moscow :arg0-of ( have-03 :arg1 ( fear-01 :arg1 ( change-01 :arg1 regime ) :arg1-of deep-02 ) ) ) :location mind
possible-01 :arg1 ( speak-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg2 president ) ) :arg1 topic :mod even :time ( after :op1 ( give-01 :arg0 ( person :quant num_0 :arg0-of ( have-org-role-91 :arg2 president ) ) :arg1 ( conference :mod press ) :time ( after :op1 ( temporal-quantity temporal-quantity_num_0 :unit hour :mod near ) ) ) ) ) :arg1-of possible-01
contrast-01 :arg1 ( prefer-01 :arg0 he :arg1 difficulty :time ( before :op1 now :quant ( multiple :op1 ( temporal-quantity temporal-quantity_num_0 :unit year ) ) ) :time ( return-01 :arg1 he :time ( after :op1 ( disqualification :duration ( temporal-quantity temporal-quantity_num_1 :unit month ) ) ) ) ) :arg2 ( show-01 :arg0 he :arg1 ( and :op1 ( challenge-01 :arg0 he :arg1 ( challenge-01 :arg0 he :arg1 ( challenge-01 :arg0 he ) ) ) :op2 ( return-01 :arg1 he :arg4 form ) ) )
have-org-role-91 :arg0 he :arg1 ( and :op1 ( organization_name_0 :arg0-of ( have-org-role-91 :arg1 country_name_1 :arg2 member :time former ) ) :op2 ( member :arg2-of ( have-org-role-91 :arg1 ( service :mod security :mod state ) ) ) :op3 ( member :arg2-of ( have-org-role-91 :arg1 ( service :mod ( security :mod state ) ) ) ) ) :arg2 member
operation :mod virtuoso :arg0-of ( use-01 :arg1 ( tolerances :mod ( precise :degree extreme ) :purpose assembly ) ) :concession ( and :op1 ( size :poss ( linkages :arg0 ( and :op1 bridge :op2 bridge ) :mod massive ) :op2 ( weight :poss linkages ) ) )
have-concession-91 :arg2 ( possible-01 :polarity - :arg1 ( underestimated :arg1 ( exercise :mod physical ) ) )
and :op1 ( baylz :arg0 ( and :op1 ( person :mod country_name_0 ) :op2 ( person :mod left ) :op3 ( person :mod left ) ) :arg1 ( petting :mod simone ) :time ( after :op1 ( win-01 :arg0 person :arg1 ( and :op1 gold :op2 silver ) :mod respective :time ( after :op1 ( win-01 :arg0 person :arg1 ( and :op1 gold :op2 silver ) ) ) ) ) :time ( after :op1 ( win-01 :arg0 person :arg1 ( and :op1 gold :op2 silver ) :arg2 ( final :part-of ( individual :mod female ) ) ) ) ) :op2 ( aug. :arg0 ( and :op1 country_name_1 :op2 country :op3 et-cetera ) :time ( summer :mod ( summer :quant num_0 ) :location ( olympics :mod summer ) ) )
know-01 :arg0 you :arg1 ( good :degree more :domain everything :beneficiary you )
say-01 :arg0 ( agency :mod country_name_0 ) :arg1 ( possible-01 :arg1 ( nahlynute :arg0 ( snow :quant ( between :op1 num_0 :op2 num_1 ) ) :arg1 area ) )
tell-01 :arg0 family :arg1 ( expect-01 :arg1 ( recover-02 :arg0 he :arg1 station ) ) :arg2 station
and :op1 ( arrest-01 :polarity - ) :op2 ( scans :arg0 police :arg1 ( video :arg0-of surveil-01 ) :arg1-of report-01 )
provide-01 :arg0 ( combination :mod this ) :arg1 ( health :mod good ) :arg2 ( and :op1 ( health :mod good ) :op2 ( succeed-01 :arg1 health ) :op3 ( succeed-01 :arg1 health ) :op4 work-01 )
say-01 :arg0 ( thing :arg1-of ( report-01 :arg0 ( government-organization :arg0-of govern-01 ) ) :arg0-of devastate-01 ) :arg1 ( lead-03 :arg0 ( culture :mod politics ) :arg2 ( close-01 :arg1 eye ) :arg1-of ( result-01 :arg2 ( falsification :arg1 ( community :mod religious-group_name_0 ) :arg1-of ( spread-02 :arg1-of wide-02 ) ) ) )
say-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg1 ( community :arg1-of local-02 ) :arg2 secretary :time former ) :arg0-of ( have-org-role-91 :arg1 ( community :arg1-of local-02 ) :arg2 secretary :time former ) :arg0-of ( have-org-role-91 :arg1 ( community :arg1-of local-02 ) :arg2 secretary :time former ) :arg0-of ( have-org-role-91 :arg1 ( community :arg1-of local-02 ) :arg2 secretary :time former ) :arg0-of ( have-org-role-91 :arg1 ( community :arg1-of local-02 ) :arg2 secretary :time former ) :arg0-of ( have-org-role-91 :arg1 ( community :arg1-of local-02 ) :arg2 secretary :time former ) :arg0-of ( have-org-role-91 :arg1 ( community :arg1-of local-02 ) :arg2 secretary :time former ) :arg0-of ( have-org-role-91 :arg1 ( community :arg1-of local-02 ) :arg2 secretary :time former ) :arg0-of ( have-org-role-91 :arg1 ( community :arg1-of local-02 ) :arg2 secretary :time former ) :arg0-of ( have-org-role-91 :arg1 ( community :arg1-of local-02 ) :arg2 secretary :time former ) )
criticize-01 :arg0 he :arg1 ( check-01 :arg0 he :arg1 ( check :mod ticks :location ( relative-position :op1 city :quant ( distance-quantity distance-quantity_num_0 :unit kilometer ) ) ) ) :mod also
find-01 :location ( room :quant several :location home ) :arg1-of possible-01
safe-01 :arg1 ( food :beneficiary astronaut ) :time then
google :arg1 ( oshtrafuet :name ( name :op1 oshtrafuet :op2 oshtrafuet ) ) :mod oshtrafuet
say-01 :arg0 he :arg1 ( thing :arg1-of ( include-91 :arg2 ( thing :arg1-of ( get-01 :arg0 i :time ( end-01 :arg1 1970s ) ) ) ) :quant much :arg1-of ( include-91 :arg2 ( thing :arg1-of ( get-01 :arg0 i :time ( or :op1 ( person :quant num_0 :domain i ) :op2 ( person :quant num_1 :domain i ) ) ) ) ) ) :arg1-of ( say-01 :arg0 he ) :arg1-of ( say-01 :arg0 he )
recommend-01 :arg1 ( demolished :arg1 ( place :mod this ) :arg1-of ( cause-01 :arg0 ( and :op1 ( economy :domain they :arg0-of ( pay-01 :polarity - :arg3 tax ) :domain they ) :op2 ( cause-01 :arg0 ( and :op1 fire :op2 ( risk-01 :arg2 health ) ) :arg1 place ) ) ) )
estimate-01 :arg0 ( and :op1 ( institution :quant num_0 :mod charitable ) :op2 ( institution :mod charitable ) :op3 ( and :op1 refugee :op2 l ) ) :arg1 ( and :op1 ( grow-03 :arg1 number :location ( alongside :op1 ( person :quant ( more-than :op1 num_1 ) ) ) ) :op2 ( person :quant ( more-than :op1 num_1 ) ) ) :time history :time ( after :op1 ( increase-01 :arg1 ( arrivals :mod new ) :time summer ) :arg1-of sharp-02 )
hold-04 :arg0 ( and :op1 libraries :op2 library ) :arg1 ( meet-03 :time ( day :time-of ( and :op1 ( cinema :mod country_name_2 ) :op2 ( day :mod even :mod even ) ) ) ) :time ( week :mod this )
and :op1 ( williams :arg1 ( thing :arg1-of ( think-01 :arg0 they ) :ord ( ordinal-entity ordinal-entity_num_0 ) ) :time ( moment :mod next ) ) :op2 ( spend-02 :arg0 amr-unknown :arg1 ( more :mod little :compared-to usual ) ) :op3 ( attempt-01 :arg0 amr-unknown :arg1 ( overcome-01 :arg0 amr-unknown :arg1 ( feel-01 :arg0 they :arg1 ( feel-01 :arg0 they ) ) ) ) :time ( moment :mod next )
advertise-01 :arg1 we :manner heavy
become-01 :arg1 it :arg2 ( know-01 :arg1 ( bomb :quant num_0 :arg1-of ( plant-01 :arg2 ( gas :quant num_0 ) ) ) ) :time soon
contrast-01 :arg1 ( bathroom :quant ( between :op1 num_0 :op2 num_1 ) ) :arg2 ( thing :quant num_1 )
use-01 :arg1 ( mosque :quant number :location kazan ) :arg2 country_name_1 :time previous :time ( time :arg1-of same-01 )
contrast-01 :arg2 ( realize-01 :polarity - :arg0 ( we :quant ( about :op1 ( percentage-entity percentage-entity_num_0 ) ) ) :arg1 ( language :mod tatar ) )
share-01 :arg0 pope :arg1 ( concept :mod vatican ) :arg2 ( slash :op1 refugee :op2 refugee )
and :op1 ( accumulate-01 :arg0 i :arg1 ( popularity :poss ( play :name ( name :op1 '' :op2 '' ) ) ) ) :op2 ( juliet :arg0 ( shakespeare :mod william ) :arg1 popularity )
except-01 :arg1 ( and :op1 ( produce-01 :arg0 ( database :mod ( person :arg0-of hack-04 ) :quant ( num_0 :arg0-of hack-04 ) ) :arg1 ( picture :mod entertainment ) ) :op2 ( responsible-03 :arg0 ( picture :arg1-of ( transfer-01 :arg2 dprk ) ) ) )
argue-01 :arg0 ( company :mod country_name_0 ) :arg1 ( give-01 :arg0 country :arg1 ( access-01 :arg1 ( thing :arg2-of ( access-01 :arg1 ( thing :arg2-of ( compose-01 :arg1 ( and :op1 ( application :mod predustanovku ) :op2 ( application :mod predustanovku ) ) :arg2 ( person :arg0-of develop-02 :mod other ) :mod particular ) ) ) ) ) :arg2 ( person :arg0-of ( produce-01 :arg1 thing ) ) )
obligate-01 :arg1 he :arg2 ( answer-01 :arg0 he :arg2 ( extent :mod full :poss law :prep-against ( case-03 :arg1-of criminal-03 ) ) ) :time now
damage-01 :arg1 ( person :quant num_0 :arg0-of ( reside-01 :arg1 ( region :mod volgograd ) ) ) :manner severe :arg2-of fortunate-01 :arg2-of fortunate-01
say-01 :arg0 ( statistic :mod nation ) :arg1 ( rate-entity-91 :arg1 ( percentage-entity percentage-entity_num_0 ) :arg2 ( temporal-quantity temporal-quantity_num_1 :unit month ) :location july )
allow-01 :arg1 ( and :op1 ( change-01 :arg0 ( person :arg0-of use-01 ) :arg1 ( rate-entity-91 :arg1 ( person :arg0-of use-01 ) :arg2 ( rate-entity-91 :arg1 ( person :quant ( approximately :op1 num_0 ) :arg0-of use-01 ) :arg2 ( temporal-quantity temporal-quantity_num_0 :unit day ) ) :purpose ( change-01 :arg0 person :arg1 reality ) ) ) :op2 ( play-01 :arg0 person :arg1 ( way :instrument-of ( and :op1 ( change-01 :arg0 person :arg1 reality ) :op2 ( play-01 :arg0 person :manner absurd :manner absurd ) ) ) ) )
reject-01 :arg1 ( compare-01 :arg2 anime ) :degree total
multi-sentence :snt1 ( and :op1 ( resign-01 :arg0 ( person_name_0 :arg0-of ( resign-01 :arg1 country_name_1 ) ) :time april ) :op2 ( replace-01 :arg1 person :arg2 ( gene :part-of ( command-02 :mod central ) ) ) ) :snt2 ( votel :mode expressive )
contrast-01 :arg1 ( recommend-01 :arg1 ( achieve-01 :arg1 ( goal :quant num_0 ) :manner ( game :quant num_0 ) ) ) :arg2 ( say-01 :arg0 i :arg1 ( sure-02 :polarity - :arg1 ( have-condition-91 :arg1 ( sure-02 :polarity - :arg1 ( do-02 :mode interrogative :arg0 it :arg1 ( something :arg1-of ( resemble-01 :arg2 this ) ) ) :arg2 it ) ) ) )
contrast-01 )
close-10 :arg1 ( sport :mod this ) :arg2 ( sport :mod dzenu ) :degree most
and :op1 ( competitions :arg0 ( woman :arg0-of ( have-org-role-91 :arg1 woman ) ) :arg1 woman ) :op2 ( take-01 :arg0 finale :arg1 place :time ( date-entity year_date-entity_0 ) :time then ) :op3 ( broadcast-01 :arg0 ( person :mod country_name_0 ) :duration ( temporal-quantity temporal-quantity_num_1 :unit hour ) :mod also )
kill-01 :arg1 ( person :quant many :arg0-of ( have-org-role-91 :arg2 protestants ) ) :concession ( and :op1 ( number :mod ( small :degree more :compared-to ( number :mod recent ) ) :compared-to ( number :mod ( small :degree more :compared-to ( month :mod recent ) ) ) ) :op2 ( pass-01 :arg1 ( period :mod this ) :arg1-of ( quick-02 :degree relative ) ) )
multi-sentence :snt1 ( difficult :domain ( pass-03 :arg1 ( '' :mod ( rope :mod tight ) :mod this ) ) ) :snt2 ( say-01 :arg0 i :arg1 ( difficult :domain ( pass-03 :arg1 abdi ) ) )
multi-sentence :snt1 ( raise-01 :arg0 he :arg1 ( criticize-01 :mod universal ) :time ( end-01 :arg1 ( after :op1 ( raise-01 :arg0 he :arg1 ( criticize-01 :mod universal ) ) ) ) :mod virtual ) :snt2 ( and :op1 ( explain-01 :arg0 he :arg1 ( thing :arg1-of ( comment-01 :arg0 he ) ) :time ( late :degree more ) ) :op2 ( say-01 :arg0 he :arg1 ( joking :domain i :mod of-course ) ) ) :snt3 ( joking :arg1 i :mod of-course )
buffets :arg1 ( table :mod country_name_0 ) :time ( before :op1 ( depression :location ( area :mod rural ) :mod especially ) )
forget :arg1 ( technique :quant many :arg1-of ( include-91 :arg2 ( technique :mod culinary ) ) ) :time ( as-soon-as :op1 ( be-located-at-91 :arg1 country :arg2 ( foot :part-of country ) :mod again ) )
and :op1 ( call-01 :arg1 ( mousse :mod prunes ) :arg2 ( mousse :mod prunes ) ) :op2 ( add-01 :arg0 i :arg1 ( thing :arg2-of ( name-01 :arg1 ( thing :arg2-of ( name-01 :arg1 ( thing :arg2-of ( name-01 :arg1 ( name :op1 catchy ) ) ) ) ) ) ) )
lead-01 :arg0 ( data :mod such ) :arg1 ( tens :mod turkish ) :medium ( interview-01 :arg1 ( journalist :arg1-of local-02 ) )
possible-01 :arg1 ( see-01 :arg0 ( person :arg0-of ( participate-01 :arg1 protest-01 ) :quant some ) :arg1 ( write-01 :arg0 person :arg1 ( wall :poss ( person_name_0 :arg0-of ( have-org-role-91 :arg2 ( president :mod interim ) ) ) ) ) )
meet-03 :arg0 ( we :quant all ) :time ( before :op1 now :duration ( temporal-quantity temporal-quantity_num_0 :unit month ) )
say-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg2 head-of-state ) ) :arg1 ( enjoy-01 :arg0 i :time now :mod just )
and :op1 ( call-01 :arg0 we :arg1 ( and :op1 ( person :arg0-of ( have-org-role-91 :arg2 ( minister :mod justice ) ) ) :op2 ( person :arg0-of ( have-org-role-91 :arg2 senator ) ) :op3 ( person :arg0-of ( have-org-role-91 :arg2 senator ) ) ) :arg2 ( cut-02 :arg1 fund-01 :mod this ) :time immediate ) :op2 ( cause-01 :arg1 ( possible-01 :arg1 ( get-01 :arg0 person :arg1 ( assist-01 :arg1-of need-01 ) :time ( face-01 :arg0 person :arg1 ( problem :arg1-of legal-02 ) ) ) ) )
contrast-01 )
and :op1 ( confirm-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg2 executive ) :arg0-of ( have-org-role-91 :arg2 executive ) ) :arg1 news ) :op2 ( notice-01 :arg0 person :arg1 ( start-01 :arg0 club :arg1 ( look-01 :arg0 club :arg1 ( coach :mod new ) :time immediate ) ) )
announce-01 :arg0 ( unit :arg0-of specialize-01 ) :arg1 ( do-02 :arg0 ( unit :consist-of ( person :arg0-of specialize-01 ) :arg0-of ( work-01 :arg1 ( machine :mod serial ) ) ) :arg1 ( thing :quant num_0 :arg1-of ( design-01 :manner exclusive-02 ) ) ) :manner official
express-01 :arg0 magazine_name_0 :arg1 ( regret-01 :arg0 facebook :arg1 ( and :op1 ( policy :mod such ) :op2 ( promise-01 :arg2 ( solve-01 :arg1 problem ) ) ) )
identify-01 :arg1 ( body :arg1-of ( find-01 :arg0 body :time ( morning :mod wednesday ) ) ) :arg2 ( and :op1 ( reside-01 :arg0 ( person :arg0-of ( reside-01 :arg1 political-party_name_0 ) :arg0-of ( have-org-role-91 :arg2 francisco ) ) :arg1 ( office :poss ( person :arg0-of ( have-org-role-91 :arg1 ( government-organization :arg0-of ( govern-01 :arg1 state ) ) :arg2 ( office :mod medicine ) ) ) ) :manner frank ) :op2 ( report-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg2 ( galicia :mod frankly ) ) ) :arg1 ( office :poss ( person :arg0-of ( have-org-role-91 :arg2 ( office :mod medicine ) ) ) ) ) ) :time ( morning :mod wednesday )
multi-sentence :snt1 ( find-01 :arg0 he :arg1 apartment ) :snt2 ( and :op1 ( meet-02 :arg0 he :arg1 girl ) :op2 ( meet-02 :arg0 he :arg1 girl ) :op3 ( tell-01 :arg0 ( galicia :name ( name :op1 '' :op2 luis ) ) :arg1 girl ) )
state-01 :arg0 ( person_name_0 :arg0-of ( represent-01 :arg1 ( rf :location country_name_1 ) :mod permanent ) ) :arg1 ( and :op1 ( helpful-04 :arg0 ( meet-03 :arg0 ( council :mod security :mod country ) :time past ) ) :op2 ( report-01 :arg0 ( report-01 :mod interfax ) ) :time past )
show-01 :arg0 research-01 :arg1 ( reduce-01 :arg0 ( person :quant ( percentage-entity :value num_0 ) ) :arg1 ( age :mod biology :poss person ) :time ( stay-01 :arg1 person :location spa ) )
have-condition-91 :arg1 ( increase-01 :arg1 ( percentage-entity percentage-entity_num_0 ) :time ( since :op1 ( begin-01 :arg1 year ) ) ) :arg2 ( look-01 :arg0 you :arg1 ( dynamics :arg1 ( rate :mod ( exchange-01 :arg1-of long-03 ) ) ) )
lose-02 :arg1 elena :location ( bout :quant num_0 :name ( name :op1 olympics ) ) :location ( bout :poss she :ord ( ordinal-entity ordinal-entity_num_1 ) )
multi-sentence :snt1 ( action :mod ( just :polarity - ) :domain this ) :snt2 ( focus-01 :arg2 ( combat-01 :arg1 corruption ) )
believe-01 :arg0 ( person :arg1-of expert-01 ) :arg1 ( and :op1 ( mounting :arg1 ( split-01 :arg1 ( relation-03 :arg0 country_name_0 :arg2 west ) ) :arg1-of increase-01 ) :op2 ( lead-03 :arg0 split-01 :arg2 ( attempt-01 :arg1 ( change-01 :arg1 power :location country ) :mod new ) ) )
and :op2 ( predict-01 :arg0 ( television :mod state ) :arg1 ( and :op1 ( fruit :arg1-of ( cheap-02 :degree more ) ) :op2 vegetables ) :time ( as-soon-as :op1 ( allow-01 :arg1 ( return-01 :arg1 ( import-01 :arg1 ( product :mod agriculture ) ) ) ) ) )
have-03 :arg0 ( person :quant num_0 ) :arg1 ( differ-01 :arg1-of significant-02 ) :mod still :concession ( display-01 :arg0 public :arg1 reconciliation )
and :op1 ( include-91 :arg1 ( thing :quant num_0 :arg1-of ( include-91 :arg2 ( era :arg1-of modern-02 ) ) ) :arg2 ( era :arg1-of modern-02 ) ) :op2 ( surprise-01 :polarity - :arg0 ( reach-01 :arg0 he :arg1 mark-01 ) :arg1 ( reach-01 :arg0 ( few :degree so ) :arg1 he ) )
believe-01 :arg1 ( possible-01 :arg1 ( president :arg0 ( person :arg0-of ( have-org-role-91 :arg1 country_name_0 :arg2 president ) ) :arg1 ( person :arg0-of ( have-org-role-91 :arg1 country_name_1 :arg2 president ) ) :time ( after :op1 ( term :ord ( ordinal-entity ordinal-entity_num_0 ) :mod ( term :ord ( ordinal-entity ordinal-entity_num_1 ) ) :prep-for ( constitution :mod putin ) :ord ( ordinal-entity ordinal-entity_num_1 ) ) ) ) ) :time once
return-01 :arg1 show-04 :arg4 ( season :ord ( ordinal-entity ordinal-entity_num_0 ) :poss show-04 ) :time ( season :ord ( ordinal-entity ordinal-entity_num_0 ) )
represent-01 :arg0 it :arg1 ( art :mod building :arg1-of ( modern-02 :degree most ) ) :prep-in ( project :mod amazing :mod this )
propose-01 :arg0 ( thing :arg1-of ( achieve-01 :mod this ) ) :arg1 she :medium ( league :arg1-of ( same-01 :arg2 ( athletes :arg1-of ( rare-02 :degree most ) :example ( and :op1 ( person :arg0-of ( raise-03 :arg1 ( sports :poss person ) ) ) :op2 ( person :arg0-of ( raise-03 :arg1 ( sports :poss person ) ) ) ) ) ) )
and :op1 ( earn-01 :arg0 ( person :arg0-of ( earn-01 :arg1 ( gold :ord ( ordinal-entity ordinal-entity_num_0 ) ) :location tuesday ) ) :arg1 ( gold :ord ( ordinal-entity ordinal-entity_num_0 ) :location tuesday ) ) :op2 ( become-01 :arg1 person :arg2 ( chord :mod final :arg1-of beautiful-02 :beneficiary ( coordinator :poss ( team :mod nation ) ) ) )
love-01 :arg0 you :arg1 ( and :op1 ( person :arg0-of ( have-rel-role-91 :arg1 you :arg2 child ) ) :op2 ( person :arg0-of ( have-rel-role-91 :arg1 you :arg2 child ) ) ) :arg0-of ( love-01 :arg1 you )
say-01 :arg0 person_name_0 :arg1 ( possible-01 :arg1 ( flood :arg0 ( person :mod country_name_1 ) :arg1 ( home :quant many ) :location ( area :mod suburban :arg1-of ( near-02 :arg2 baton ) ) ) )
say-01 :arg0 ( and :op1 ( person :arg0-of ( have-rel-role-91 :arg2 grandmother ) ) :op2 ( person :arg0-of ( have-rel-role-91 :arg2 grandfather ) ) ) :arg1 ( contrast-01 :arg1 ( receive-01 :arg0 ( and :op1 ( person :arg0-of ( have-org-role-91 :arg2 head-of-state ) ) :op2 ( person :arg0-of ( have-rel-role-91 :arg2 grandfather ) ) :op3 ( person :arg0-of ( have-rel-role-91 :arg2 grandfather ) ) :op4 ( person :arg0-of ( have-rel-role-91 :arg2 grandfather ) ) :op5 ( person :arg0-of ( have-rel-role-91 :arg2 grandfather ) ) ) :arg1 ( wound-01 :arg1 person ) ) :arg2 ( conscious :polarity - :time-of ( transport-01 :arg1 person :arg3 hospital ) ) )
thank-01 :arg0 i :arg1 you :arg2 ( demonstrate-01 :arg0 you :arg1 ( demonstrate-01 :arg0 woman :arg1 ( and :op1 ( win-01 :arg0 woman :arg1 ( gold :mod olympic ) ) :op2 ( strong :arg1 ( girl :quant ( many :degree so ) :arg1-of differ-02 ) ) :op3 ( woman :mod young :arg1-of succeed-01 ) :op4 ( woman :mod young :arg1-of succeed-01 ) ) ) :mod serious :mod this ) :prep-to you
think-01 :arg0 person_name_0 :arg1 ( turned :arg1 ( microphone :poss he ) :time ( begin-01 :arg0 he :arg1 ( express-01 :arg0 he :arg1 ( opine-01 :arg0 he :arg1 ( thing :arg1-of ( opine-01 :arg0 he ) ) :time ( end-01 :arg1 ( style :poss ( woman :mod final ) :mod ( between :op1 ( temporal-quantity temporal-quantity_num_0 :unit year ) :op2 ( temporal-quantity temporal-quantity_num_1 :unit year ) ) ) ) ) ) ) )
and :op1 ( combined :arg0 ( and :op1 ( system :name ( name :op1 immune ) :poss country ) :op2 ( system :name ( name :op1 vomiting ) ) ) :arg1 ( and :op1 ( system :name ( name :op1 immune ) :mod immune :poss country ) :op2 ( reflex :mod serious ) ) ) :op2 ( licking :arg0 country :arg1 ( some :arg1-of ( include-91 :arg2 ( place :arg1-of ( dirty-02 :degree most ) :arg1-of ( include-91 :arg2 ( place :arg1-of ( dirty-02 :degree most ) ) ) ) ) ) :location ( url-entity :value europe ) )
and :op1 ( count-01 :arg0 ( and :op1 ( person :quant num_0 :mod young :arg0-of ( have-org-role-91 :arg2 rays ) ) :op2 ( person :quant num_1 :mod young :arg0-of ( have-rel-role-91 :arg1 man :arg2 child ) ) :op3 ( man :quant num_1 :arg0-of ( have-rel-role-91 :arg1 man :arg2 child ) ) :op4 ( man :quant num_1 :arg0-of ( have-rel-role-91 :arg1 man :arg2 child ) ) :op5 ( man :quant num_1 :arg0-of ( have-rel-role-91 :arg1 man :arg2 child ) ) :op6 ( man :quant num_3 :arg0-of ( have-rel-role-91 :arg1 man :arg2 child ) ) :op6 ( man :quant num_3 ) :op6 ( woman :quant num_3 ) :op6 ( woman :quant num_3 ) :op6 ( woman :quant num_3 ) :op6 ( woman :quant num_3 ) :op6 ( woman :quant num_3 ) :op7 ( woman :quant num_3 ) :op8 ( woman :quant num_3 ) :op8 ( woman :quant num_3 ) :op8 ( woman :quant num_3 ) :op7 ( woman :quant num_3 ) ) )
have-03 :arg0 ( person :arg1-of ( author-01 :arg0 i ) ) :arg1 ( collection :poss person ) :arg1-of ( cause-01 :arg0 ( rid-01 :arg0 person :arg1 ( collection :poss person ) :arg2 ( around :op1 ( or :op1 ( person :quant ( around :op1 num_0 ) ) :op2 ( person :quant num_1 ) :mod usual ) ) ) )
multi-sentence :snt1 ( cause-01 :arg0 ( nothing :polarity - :domain we ) :arg1 ( thank-01 :arg0 we :arg1 you :arg2 he :mod huge ) ) :snt2 ( coach :mod ( good :degree most :compared-to world ) :domain he )
set-02 :arg0 this :arg1 ( rhythm :mod tight ) :arg2 ( rhythm :mod tight :arg1-of ( match-01 :arg2 ( company :arg0-of ( compete-02 :arg1 company ) ) :arg1-of possible-01 :time ever ) )
withdraw-01 :arg1 ( product :arg1-of ban-01 :quant ( about :op1 ( mass-quantity mass-quantity_num_0 :unit kilogram ) ) ) :arg2 sell-01 :mod ( alone :ord ( ordinal-entity ordinal-entity_num_0 ) )
continue-01 :arg1 ( consult-01 :arg0 ( person :arg0-of ( represent-01 :arg1 ( and :op1 ( person :arg0-of ( represent-01 :arg1 ( person :arg0-of ( represent-01 :arg1 ( person :arg0-of ( represent-01 :arg1 country_name_0 ) ) ) ) ) ) :op2 ( person :arg0-of ( represent-01 :arg1 ( establish-01 :arg1 ( '' :mod humanitarian :mod '' ) ) ) ) ) ) ) )
design-01 :arg1 ( create-01 :arg1 ( '' :mod humanitarian :mod '' ) ) :arg3 ( provide-01 :arg0 create-01 :arg1 ( condition :purpose ( and :op1 ( deliver-01 :arg1 ( and :op1 ( person :arg0-of serve-02 ) :op2 food :op3 ( food :arg1-of ( necessity :arg2 city ) ) ) ) ) ) )
and :op1 ( visit-01 :arg0 ( person :quant num_0 ) :arg1 country ) :op2 ( visit-01 :arg0 person :arg1 country :quant num_3 ) :li num_1
and :op1 ( appoint-01 :arg0 military :arg1 ( person :arg0-of ( have-org-role-91 :arg1 military :arg2 ( minister :mod prime ) ) ) :degree full :arg1-of ( cause-01 :arg0 ( support-01 :arg0 military :arg1 ( system :arg0-of ( counter-01 :arg1 ( house :mod upper :poss parliament ) ) ) :degree full ) ) ) :op2 ( role :arg1-of significant-02 :domain ( person :arg0-of ( have-org-role-91 :arg2 ( minister :mod prime ) ) ) )
begin-01 :arg1 ( develop-01 :arg2 condition ) :prep-in ( log :mod suh )
multi-sentence :snt1 ( contrasts :arg0 ( weight-bearing :poss they ) :arg1 ( memory :mod '' :topic ( disease :mod infectious ) :topic ( disease :mod infectious ) ) :beneficiary sing-01 ) :snt2 ( aid-01 :arg0 ( and :op1 ( body :mod foreign ) :op2 ( body :mod foreign ) :op3 heat ) :arg2 ( and :op1 ( body :mod foreign ) :op2 ( body :mod foreign ) :op3 ( heat :name ( name :op1 fractures ) ) :op4 et-cetera ) )
multi-sentence :snt1 ( turns :mode expressive :mod well ) :snt2 ( have-03 :arg0 they :arg1 ( chapel :poss they ) )
choose-01 :arg0 i :arg1 ( cod :location ( and :op1 pair :op2 ( fridges :mod tomato ) ) ) :arg1-of personal-02
say-01 :arg0 ( service :mod security :mod federal ) :arg1 ( file-01 :arg0 ( service :mod security :mod federal ) :arg1 ( sue-02 :arg1 ( claim-01 :arg1 ( damage-01 :arg1 ( amount :quant-of ( roubles :quant num_0 ) ) ) ) ) )
see-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg1 he :arg2 president ) ) :arg1 ( person :arg0-of ( have-org-role-91 :arg1 ( coup :arg1-of attempt-01 :mod military ) :arg2 organizer ) ) :time ( be-located-at-91 :arg1 person :arg2 ( under :op1 num_0 ) )
express-01 :arg0 ( person_name_0 :arg0-of ( have-org-role-91 :arg1 country_name_1 :arg2 president ) ) :arg1 ( hope-01 :arg0 person :arg1 ( contribute-01 :arg0 ( person :arg0-of ( head-01 :arg1 ( government-organization :arg0-of ( administrate-01 :arg1 state ) ) :mod new ) ) :arg2 ( work-01 :arg0 person :arg1-of ( have-org-role-91 :arg0 person :arg2 member ) ) ) )
state-01 :arg0 ( thing :arg1-of ( report-01 :arg0 ( person :arg0-of ( lead-02 :arg1 country_name_0 ) ) ) ) :arg1 ( meet-03 :arg0 ( person :arg0-of ( lead-02 :arg1 country_name_1 ) ) :time ( meet-03 :arg0 person :arg1 ( and :op1 ( predecessor :poss person ) :op2 ( predecessor :poss person ) ) ) )
explain-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg1 ( person :arg0-of ( have-org-role-91 :arg2 ( mayor :mod rwanda ) ) ) :arg2 mayor ) ) :arg1 ( and :op1 ( rule-out-02 :polarity - :arg0 ( person :arg0-of ( have-org-role-91 :arg2 ( mayor :mod ( clothing :mod such ) ) ) ) :arg1 ( rule :topic ( and :op1 decent :op2 ( principle :mod secularism ) ) ) ) :op2 ( rule-out-02 :polarity - :arg0 person :arg1 ( and :op1 hygiene :op2 safe-01 ) ) )
explode-01 :quant num_0 :location ( city_name_0 :mod resort ) :time ( early :degree more )
and :op1 ( produce-01 :mode imperative :arg0 you :arg1 gift :accompanier tip-05 ) :op2 ( watches :arg1 ( -lrb- :arg2-of ( include-01 :arg1 ( and :op1 ( one :arg1-of ( man-01 :polarity - ) ) :op2 ( one :arg1-of ( size-01 :arg2 medium ) ) ) ) ) :mod main :time ( since :op1 ( -rrb- :quant num_0 ) ) )
cause-01 :arg0 ( consider-02 :arg0 ( person :arg0-of ( hack-04 :arg1 democrat ) :mod democrat ) :arg1 ( thing :arg2-of ( sanction-02 :arg0 person :arg1 ( thing :arg2-of ( sanction-02 :arg1 person ) ) ) ) )
amount :quant-of ( damage-01 :arg1-of ( draw-02 :arg2 ( roubles :quant num_0 ) ) ) :arg2-of total-01
and :op1 ( terminate-01 :arg0 she :arg1 ball :arg1-of long-03 :prep-on ( side :mod left :part-of field ) ) :op2 ( go-08 :arg1 spiral :arg2 ( under :op1 middle ) :time then ) :op3 ( give-01 :arg0 spiral :arg1 ( advantage :mod ( give-01 :arg1 advantage :arg2 person ) ) :arg2 ( person :mod country_name_0 ) )
contrast-01 :arg1 ( be-located-at-91 :arg1 we :arg2 ( position :mod good ) :time ( now :mod right ) ) :arg2 ( depend-01 :arg0 it :arg1 ( result-01 :arg1 ( game :mod saturday ) :arg2 amr-unknown ) )
ally-01 :polarity - :arg1 ( and :op1 irrigation :op2 amhara ) :arg1-of natural-03
force-01 :arg1 she :arg2 ( out-06 :arg1 she :arg2 ( window :mod shop :location ( avenue :mod bedford ) ) ) :arg1-of natural-03
contrast-01 :arg1 ( possible-01 :arg1 ( serve-01 :arg0 coffee :arg1 beer :time no-longer ) ) :arg2 ( prepare-02 :arg0 they :arg1 ( juices :mod squeezed ) :time now )
add-01 :arg0 ( person :arg0-of ( have-rel-role-91 :arg1 she :arg2 husband ) ) :arg1 ( message-01 :arg0 person :arg1 ( thing :manner-of eat-01 ) :mod also )
advise-01 :arg0 they :arg1 woman :arg2 ( become-01 :arg1 woman :arg2 ( contribute-01 :arg0 woman :arg2 ( budget :poss ( and :op1 newspaper :op2 magazine ) ) ) ) :purpose ( and :op1 ( take-out-11 :arg0 they :arg1 challenge-01 ) :op2 ( convert-01 :arg0 they :arg1 ( storm :arg1-of ( resemble-01 :arg2 ( spaghetti :arg1 ( spaghetti :mod proverbial ) :arg2 fabric ) ) ) :arg2 ( fabric :mod proverbial ) ) )
stuffed :arg1 everything :arg2 ( plunged :arg1 spoon :arg2 ( and :op1 knitted :op2 brown :op3 ( substance :mod sticky ) ) )
say-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg2 ambassador ) ) :arg1 ( achieve-01 :arg1 trade-01 :manner ( and :op1 ( supply-01 :arg1 ( and :op1 product_name_0 :op2 ( vehicle :mod ground ) :op3 weapon ) ) ) )
and :op1 ( begin-01 :arg1 ( develop-02 :arg1 ( mortex :name ( name :op1 mortex :op2 mortex ) ) ) :location ( thing :quant num_0 ) ) :op2 ( expect-01 :arg1 ( thing :arg1-of ( expect-01 :arg0 ( person :quant num_1 ) ) ) )
contrast-01 :arg1 ( set :arg0 kenny :arg1 ( record :mod olympic ) :time ( before :op1 now :quant ( between :op1 ( temporal-quantity temporal-quantity_num_0 :unit year ) :op2 ( temporal-quantity temporal-quantity_num_1 :unit year ) ) ) ) :arg2 ( surpassed :arg0 ( zealand :mod new :location ( round :ord ( ordinal-entity ordinal-entity_num_0 ) ) ) :arg1 norm )
and :op1 ( renounce-01 :arg0 he :arg1 ( thing :arg1-of comment-01 ) :time ( late :degree more ) ) :op2 ( appeal-02 :arg0 he :arg2 ( company :arg0-of ( compete-02 :arg1 country_name_0 ) ) )
release-01 :arg1 ( year :mod ( release-01 :arg1 year ) )
show-01 :arg0 model :arg1 ( history :poss venus :arg1-of ( resemble-01 :arg2 ( develop-02 :arg0 ( person :arg0-of specialize-01 ) :arg1 ( study-01 :arg0 person ) :time previous ) ) )
suggest-01 :arg0 ( speeds :mod ( new :degree most ) :mod rotation ) :arg1 ( star :mod ( star :degree more :compared-to ( star :mod massive :quant less ) ) )
declare-02 :arg0 he :arg1 ( depart-01 :arg0 he :arg2 ( post :poss he ) ) :time ( after :op1 ( perform-02 :arg0 he :arg1 ( perform-02 :arg0 ( team :mod nation :poss country_name_0 :location euro ) :mod farewell ) ) )
and :op2 ( educate-01 :mod secondary :arg1-of free-03 :time ( since :op1 num_0 ) )
resource :arg1-of key-02 :mod ( namibia :polarity - ) :domain ( resource :arg1-of key-02 :quant all )
contrast-01 :arg1 ( have-03 :polarity - :arg0 nomads :arg1 city ) :arg2 ( and :op1 horse :op2 weapon :domain they )
contrast-01 :arg2 ( survive-01 :polarity - :arg0 ( they :quant many ) ) :time ( year :mod this )
increase-01 :arg1 ( size :poss ( debt :arg1-of public-02 ) ) :arg4 record :mod record
and :op1 ( easy-05 :arg1 ( extend-01 :arg1 ( dam :poss carbake ) ) :mod also ) :op2 ( and :op1 ( warm :arg1 ( water :arg1-of warm ) ) :op2 ( solve-01 :arg1 water ) :op3 ( solve-01 :arg1 ( soil :mod fertile ) ) :op4 ( feed-01 :arg2 ( soil :mod fertile ) :prep-under bush ) )
school :mod ( sports :mod volgograd ) :domain ( school :mod volgograd )
and :op1 ( receive-01 :arg0 she :arg1 ( citizenship :mod swiss ) ) :op2 ( begin-01 :arg0 she :arg1 ( perform-02 :arg0 she :arg1 ( flag :mod red-white ) ) ) :li num_0
mean-01 :arg1 this :arg2 ( go-01 :arg1 ( and :op1 ( change-01 :arg1 house ) :op2 finance :op3 ( issue-02 :mod other ) ) :arg4 ( thing :arg1-of ( opine-01 :arg0 ( person :arg0-of own-01 ) ) ) )
multi-sentence :snt1 ( action :arg1-of single-02 :mod ( just :polarity - ) :domain this ) :snt2 ( target-01 :arg1 ( fight-01 :arg1 corrupt-01 ) )
approach-02 :arg0 ( slash :op1 ( person :arg0-of ( have-org-role-91 :arg2 head-of-state ) ) :op2 ( person :arg0-of ( have-org-role-91 :arg2 head-of-state ) ) :op3 ( person :arg0-of ( have-org-role-91 :arg2 head-of-state ) ) :op4 ( person :arg0-of ( have-org-role-91 :arg2 head-of-state ) ) ) :arg1 this
and :op1 ( watch-01 :arg0 apple :arg1 ( person :arg0-of ( use-01 :arg1 35,000 ) :mod that ) :arg1-of apple :time ( after :op1 ( launch-01 :arg1 game :quant ( up-to :op1 ( between :op1 ( temporal-quantity temporal-quantity_num_0 :unit day ) :op2 ( launch-01 :arg1 game ) ) ) ) ) ) :op2 ( jumped :arg1 ( number :quant-of ( person :arg1-of ( tracked :arg0 they ) ) ) :arg2 ( percentage-entity percentage-entity_num_3 ) :arg4 ( percentage-entity percentage-entity_num_3 ) ) :time recent
contrast-01 :arg2 ( go-01 :arg1 ( woe :poss ( person :mod country_name_0 ) ) :arg4 street :purpose ( do-02 :arg0 person :arg1 ( thing :arg1-of ( love-01 :arg0 person ) ) ) )
cover-02 :arg1 ( health :quant num_0 :consist-of health ) :arg2 ( and :op1 ( move-01 :arg1 ( and :op1 air :op2 sunlight ) :arg2 ( and :op1 air :op2 sunlight ) :arg1-of fresh-04 ) ) :manner ( way :mod this )
and :op1 ( distance-01 :arg1 ( person :quant num_0 :arg1-of ( include-91 :arg2 ( person :quant num_0 ) ) ) :arg2 ( distance-01 :arg1 person :arg2 ( and :op1 silver :op2 ( person :arg0-of ( have-rel-role-91 :arg1 person :arg2 comrade ) ) :op3 ( person :arg0-of ( have-rel-role-91 :arg1 person :arg2 comrade ) ) :op4 ( person :arg0-of ( have-rel-role-91 :arg1 person :arg2 comrade ) ) :op5 ( person :arg0-of ( have-rel-role-91 :arg1 person :arg2 comrade ) ) :op6 ( person :arg0-of ( have-rel-role-91 :arg1 person :arg2 daughter ) ) :op6 ( person :arg0-of ( have-rel-role-91 :arg1 person :arg2 daughter ) ) :op7 ( person :arg0-of ( have-rel-role-91 :arg1 person :arg2 comrade ) ) :op7 ( person :arg0-of ( have-rel-role-91 :arg1 person :arg2 comrade ) ) ) ) )
hugging :arg1 ( and :op1 ( person :mod country_name_0 ) :op2 ( person :mod left ) :op3 ( person :mod left ) ) :time ( after :op1 ( win-01 :arg0 person :arg1 ( and :op1 gold :op2 silver :mod respective ) :time ( after :op1 ( win-01 :arg0 ( and :op1 gold :op2 silver ) :arg1 ( and :op1 gold :op2 silver ) :arg2 ( final :quant num_0 :arg1-of ( olympics :time summer ) :location ( and :op1 ( talk-02 :arg2 ( and :op1 ( janeiro :name ( name :op1 de ) ) :op2 ( person :arg0-of ( have-org-role-91 :arg1 country_name_1 ) ) :op3 et-cetera ) ) ) ) ) ) ) )
multi-sentence :snt1 ( and :op1 war_name_0 :op2 ( exercise :mod freestyle ) :location-of ( defend :arg0 bayles :arg1 ( title :poss ( title :poss world ) ) ) ) :snt2 veil
report-01 :arg0 police :arg1 ( boy :arg0-of ( registering :arg1 ( shooting :ord ( ordinal-entity ordinal-entity_num_0 ) ) :location ( 6-year-old :location city ) :time ( week :mod this ) ) )
report-01 :arg0 ( person :arg0-of investigate-01 ) :arg1 ( appear-02 :arg1 ( shooting :domain ( man :arg1-of arm-01 :quant several ) ) ) :arg2 ( person :arg0-of investigate-01 )
contrast-01 :arg2 ( and :op1 ( sport :mod expensive :domain ( sport :mod expensive ) ) :op2 ( support-01 :arg0 ( person :arg0-of ( have-rel-role-91 :arg1 ( person :arg0-of ( have-rel-role-91 :arg1 ( person :arg0-of ( have-rel-role-91 :arg1 ( person :arg0-of ( have-rel-role-91 :arg1 ( person :arg0-of ( have-rel-role-91 :arg1 ( person :arg0-of ( have-rel-role-91 :arg1 ( person :arg0-of ( have-rel-role-91 :arg1 ( person :arg0-of ( have-rel-role-91 :arg1 ( person :arg0-of ( have-rel-role-91 :arg1 ( person :arg0-of ( have-rel-role-91 :arg1 ( person :arg0-of ( have-rel-role-91 :arg1 ( person :arg0-of ( have-rel-role-91 :arg1 ( person :arg0-of ( have-rel-role-91 :arg1 ( person :arg0-of ( have-rel-role-91 :arg2 parent ) ) :arg2 parent ) ) :arg2 parent ) ) :arg2 parent ) ) :arg2 parent ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) :arg2 ( and :op1 ( person :arg0-of train-01 ) :op2 ( person :arg0-of ( have-org-role-91 :arg1 ( family :arg1-of ( have-org-role-91 :arg0 person :arg2 member ) ) ) ) :op3 ( person :arg0-of ( have-org-role-91 :arg1 ( family :arg1-of ( have-org-role-91 :arg0 person :arg2 member ) ) ) ) :op4 ( person :arg0-of ( have-org-role-91 :arg1 ( family :arg1-of ( have-org-role-91 :arg0 person :arg2 member ) ) ) ) :op5 ( person :arg0-of ( have-org-role-91 :arg1 ( family :arg1-of ( have-org-role-91 :arg0 person :arg2 member ) ) ) ) ) ) ) ) ) :prep-in reality
and :op1 ( translated :arg1 ( group :consist-of doctor :ord ( ordinal-entity ordinal-entity_num_0 ) ) :time ( before :op1 ( translated :arg1 ( group :consist-of doctor :ord ( ordinal-entity ordinal-entity_num_0 ) ) :arg2 ( contract :mod new ) ) ) ) :op2 ( progress-01 :arg1 ( outcome :arg1-of need-01 ) )
multi-sentence :snt1 ( have-03 :arg0 ( person :arg0-of ( have-org-role-91 :arg1 cabinet :arg2 member :time former ) :arg0-of ( have-org-role-91 :arg1 cabinet :arg2 member :time former ) :arg0-of ( have-org-role-91 :arg1 cabinet :arg2 member :time former ) :arg0-of ( have-org-role-91 :arg1 cabinet :arg2 member :time former ) :arg0-of ( have-org-role-91 :arg1 cabinet :arg2 member :time former ) :arg0-of ( have-org-role-91 :arg1 cabinet :arg2 member :time former ) :arg0-of ( have-org-role-91 :arg1 cabinet :arg2 member :time former ) :arg0-of ( have-org-role-91 :arg1 cabinet :arg2 member :time former ) :arg0-of ( have-org-role-91 :arg1 cabinet :arg2 member :time former ) :arg0-of ( have-org-role-91 :arg1 cabinet :arg2 member :time former ) :arg0-of ( have-org-role-91 :arg1 cabinet :arg2 member :time former ) :arg0-of ( have-org-role-91 :arg1 cabinet :arg2 member :time former ) :arg0-of ( have-org-role-91 :arg1 cabinet :arg2 member :time former ) :arg0-of ( have-org-role-91 :arg1 cabinet :arg2 member :time former ) :arg0-of ( have-org-role-91 :arg1 cabinet :arg2 member :time former ) :arg0-of ( have-org-role-91 :arg1 cabinet :arg2 member :time former ) :arg0-of ( have-org-role-91 :arg1 cabinet :arg2 member :time former ) :arg0-of ( have-org-role-91 :arg1 cabinet :arg2 member :time former ) :arg0-of ( have-org-role-91 :arg1 cabinet :arg2 member ) ) )
recommend-01 :arg1 ( indicate-01 :arg0 ( person :arg0-of vote-01 ) :arg1 ( and :op1 ( name :poss person ) :op2 ( address :poss person ) ) :mod just ) :time moment
multi-sentence :snt1 ( and :op1 ( represent-01 :arg0 you :arg1 ( and :op1 cbc :op2 canada ) ) :op2 ( make-02 :arg0 you :arg1 ( like-01 :arg0 we :arg1 ( racist :quant bunch ) ) ) ) :snt2 ( disgust :mod > :mod hash )
multi-sentence :snt1 ( make-02 :mode imperative :arg0 we :arg1 ( clear-06 :arg1 ( treat-01 :arg0 ( comment-01 :arg0 country_name_0 ) :arg1 ( perform-01 :arg1 swimmer ) ) ) ) :snt2 personality
say-01 :arg0 i :arg1 ( and :op1 ( disrespect :polarity - ) :op2 ( sorry-01 :arg1 i ) ) :arg2 person_name_0
use-01 :arg0 he :arg1 luminometer :arg2 ( and :op1 ( show-01 :arg0 he :arg1 person ) :op2 ( thing :arg1-of ( do-02 :arg0 he ) ) ) :time ( before :op1 ( licking :mod every ) )
fly-01 :arg1 ( force :mod air :mod military :mod military ) :destination ( low-04 :degree incredible ) :destination ( low-04 :degree incredible )
contrast-01 :arg1 ( grabbed :arg0 dan :arg1 ( try-01 :arg0 country_name_0 :arg1 ( make-01 :arg0 country :arg1 ( touchdown :location ( corner :mod left ) ) ) ) ) :arg2 ( go-06 :arg1 game :arg2 ( island :location ( relative-position :op1 ( sea :location south ) ) ) :arg1-of ( cause-01 :arg0 ( and :op1 ( sing-01 :arg0 ( fan :arg1-of ( sing-01 :arg0 fan ) ) :arg1 game ) :op2 ( dance :arg0 fan ) ) ) )
contrast-01 :arg1 ( journey :arg0 it ) :arg2 ( make-02 :arg0 it :arg1 ( more :degree bit ) )
detain-01 :arg1 ( person :quant several ) :arg2 ( suspect-01 :arg1 ( organize-01 :arg1 explode-01 ) ) :time already
contrast-01 :arg1 ( fall-01 :arg1 ( grow-01 :arg1 ( grow-01 :arg1 economy ) ) :arg2 ( rate-entity-91 :arg1 ( percentage-entity percentage-entity_num_0 ) :arg2 ( temporal-quantity temporal-quantity_num_2 :unit year ) ) :arg4 ( value-interval :op1 num_0 :op2 num_2 ) :arg4 ( value-interval :op1 num_0 :op2 num_2 ) :arg4 ( value-interval :op1 num_0 :op2 num_2 ) ) :arg2 ( remain-01 :arg1 ( and :op1 ( person :arg0-of ( have-org-role-91 :arg2 head-of-state ) ) :op2 ( person :arg0-of ( have-org-role-91 :arg1 ( industry :quant few :arg0-of ( show-01 :arg1 develop-01 ) ) ) ) ) :arg2 tourism ) :time ( after :op1 ( come-01 :arg1 ( junta :mod military ) :arg4 power ) )
contrast-01 :arg2 ( know-01 :arg0 we :arg1 ( and :op1 ( relate-01 :polarity - :arg1 ( incident :mod this ) :arg2 ( terrorism :mod ( kind :mod any ) ) :arg1-of ( direct-02 :polarity - ) ) :op2 ( try-01 :arg0 we :arg1 ( establish-01 :arg0 we :arg1 ( identities :poss ( person :location ( behind :op1 they ) ) ) ) ) :mod exact ) )
distinguishable :arg1 it :arg2 ( paradise :mod ( slender :mod another ) :mod another ) :time ( late :op1 ( temporal-quantity temporal-quantity_num_0 :unit year ) :degree more )
and :op1 ( be-located-at-91 :arg1 ( village :mod ( south :mod such ) ) :arg2 ( area :mod ( south :mod such ) ) :location ( side :quant num_0 :part-of ( mountain :location mountain ) ) ) :op2 ( place :location-of ( break-01 :arg1 water ) ) :domain ( village :mod olympic )
contrast-01 :arg2 ( south-australia :arg1 basketball )
say-01 :arg1 ( obligate-01 :arg2 ( rebuilt :arg1 it ) ) :arg2 imam
cause-01 :arg0 ( language :mod native :poss i :domain ( language :mod tatar :poss i ) :arg1-of ( conclude-01 :arg0 i ) ) :arg1 ( easy-05 :arg1 it :degree more :beneficiary i )
recall-02 :mode imperative :arg0 we :arg1 ( recall-02 :arg1 ( case :quant num_0 :arg2-of criminal-03 ) )
multi-sentence :snt1 ( and :op1 ( note-01 :arg1 it :time recent ) :op2 ( have-org-role-91 :arg0 ( person :arg0-of ( have-org-role-91 :arg1 ( city-district_name_1 :mod chelyabinsk ) :arg2 governor ) ) :arg1 ( person :arg0-of ( visit-01 :arg1 ( numbers :mod july :quant ( number :ord ( ordinal-entity ordinal-entity_num_0 ) ) ) ) ) ) ) :snt2 ( '' :mode expressive )
state-01 :arg0 person_name_0
and :op1 ( celebrating :arg1 ( person :quant num_0 :mod country_name_0 ) :time ( since :op1 ( date-entity decade_date-entity_0 ) ) :li num_1 ) :op2 ( consider-01 :arg1 holiday :manner official ) :li num_1
create-01 :arg0 he :arg1 ( baggage :beneficiary ( and :op1 ( person :arg0-of ( have-org-role-91 :arg1 country_name_0 :arg2 aristocracy ) ) :op2 ( person :arg0-of ( have-org-role-91 :arg1 country_name_1 :arg2 member ) ) :op3 ( person :arg0-of ( have-org-role-91 :arg1 ( family :arg1-of ( have-org-role-91 :arg0 person :arg2 member ) ) ) ) ) ) :time ( end-01 :arg1 ( century :ord ( ordinal-entity ordinal-entity_num_0 ) ) )
oblige-02 :arg1 they :arg2 ( identify-01 :arg0 they :arg1 ( person :arg0-of use-01 ) :arg2 ( person :arg0-of use-01 ) :arg1-of ( base-02 :arg2 ( contain-01 :arg1 ( information :topic ( operate-01 :arg1 telecommunication ) ) ) ) :arg1-of ( base-02 :arg2 ( thing :arg1-of ( contain-01 :arg0 ( and :op1 ( person :arg0-of ( operate-01 :arg1 telecommunication ) ) :op2 ( contract-02 :arg0 person ) ) ) ) ) )
reported :arg1 ( bus :mod fly-01 ) :arg2 ( person :location ( station_name_0 :arg0-of ( have-org-role-91 :arg1 ( ministry :name ( name :op1 cabin ) ) ) ) ) :location ( and :op1 ( talk-02 :arg2 ( service :mod press :poss ( ministry :mod country_name_0 :location country_name_1 ) ) ) :op2 ( feodosia :arg1 ( bus :mod fly-01 ) :arg2 ( person :location cabin ) ) )
argue-01 :arg0 he :arg1 ( feel-02 :arg0 ( person :arg0-of analyze-01 ) :arg1 ( feel-02 :arg0 ( person :arg0-of ( lead-02 :arg1 ( committee :mod central ) ) ) :arg1 ( represent-01 :arg0 ( person :arg0-of ( lead-02 :arg1 ( committee :mod central ) ) ) :arg1 ( represent-01 :arg0 person :arg1 person :arg2 ( view-02 :arg0 person :arg1 ( threaten-01 :arg0 ( state :mod religious-group_name_0 ) :arg2 ( state :mod religious-group_name_1 ) :arg1-of ( optimistic :degree more ) :arg1-of ( know-02 :arg2 ( or :op1 isis :op2 isil ) :mod also ) ) ) ) ) ) ) :concession ( contain-01 :polarity - :arg0 it :arg1 ( thing :arg0-of ( evidence-01 :arg1 ( order-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg1 ( government-organization :arg0-of ( administrate-01 :arg1 country_name_2 ) ) :arg2 member ) ) ) ) ) )
say-01 :arg0 person_name_0 :arg1 ( want-01 :arg0 person :arg1 ( and :op1 ( experiment-01 :arg0 person :arg1 person ) :op2 ( introduce-02 :arg0 person :arg1 ( dishes :mod new ) :medium menu ) ) )
enough :quant num_0 :domain ( deploy-01 :arg1 elephant :arg2 ( side :mod other ) ) :mod usual
lead-02 :arg0 ( data :mod such :arg2-of ( lead-02 :arg0 ( person :arg0-of ( head-01 :arg1 ( person :arg0-of ( have-org-role-91 :arg2 ( minister :mod foreign ) ) ) ) ) ) ) :arg1 ( journalist :arg1-of local-02 ) :time converse-01
and :op1 ( arabs :domain ( person :arg1-of ( include-91 :arg2 ( guest :poss we ) :arg3 most ) ) ) :op2 ( demand-01 :arg0 person :arg1 ( remove-01 :arg1 ( code :mod country_name_1 ) ) :arg1-of ( conform-01 :arg2 ( employee :poss hotel ) ) )
say-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg2 ambassador ) ) :arg1 ( achieve-01 :arg1 ( increase-01 :arg1 trade-01 ) :manner ( and :op1 ( supply-01 :arg1 ( and :op1 product_name_0 :op2 ( vehicle :mod ground ) :op3 weapon ) ) ) )
continue-01 :arg0 state :arg1 ( twist :arg0 state :arg1 language_name_0 :location ( complex :mod industry ) )
believe-01 :arg0 ( person_name_0 :arg0-of ( have-org-role-91 :arg1 ( government-organization_name_1 :mod portal ) :arg3 kornev ) ) :arg1 ( cause-01 :arg0 ( break-down-12 :arg1 ( term :poss project ) ) :arg1 ( dismissal :mod neskorov ) )
admit-01 :arg0 i :arg1 ( fall-01 :arg1 hindes :arg4 track :time ( after :op1 ( fail-01 :arg1-of fail-01 ) ) ) :time ( after :op1 ( triumph :location ( relative-position :op1 ( value-interval :op1 num_0 :op2 hoy ) ) ) )
cause-01 :arg0 ( have-03 :arg0 they :arg1 ( period :mod ( terminate-01 :arg1 contract-02 ) ) ) :arg1 ( end-01 :arg1 contract-02 :mod in-fact :prep-in fact )
help-01 :arg0 ( mission :mod ( late :degree most ) :mod ( late :degree most ) :mod space ) :arg1 ( collect-01 :arg0 astronomers :arg1 ( catalogues :mod ( speed :poss ( star :location pleiades ) ) :arg1-of ( complete-02 :degree most ) ) )
measure-02 :arg1 ( speed :poss ( rotation :mod ( star :mod each ) ) ) :time ( between :op1 ( date-entity decade_date-entity_0 ) :op2 ( date-entity year_date-entity_1 ) ) :subevent-of ( emergence :arg1 ( spots :mod star :mod recognisable ) )
and :op1 ( cause-01 :arg0 amr-unknown :arg1 ( improve-01 :polarity - :arg1 ( g :quant num_0 :mod 571-strong :accompanier ( aerodynamics :mod tank ) ) ) ) :op2 ( up-to :op1 ( between :op1 ( temporal-quantity temporal-quantity_num_0 :unit year ) :op2 ( up-to :op1 num_1 ) ) ) :mod indeed
and :op1 ( take-01 :arg1 ( person :quant some :arg0-of ( have-rel-role-91 :arg1 person :arg2 parent ) ) :arg3 ( country :mod another ) ) :op2 ( leave-11 :polarity - :arg0 person :arg1 ( thing :arg1-of choose-01 ) )
find-01 :arg0 ( person :arg0-of '' ) :arg1 ( athletes :quant ( at-least :op1 num_0 ) :arg0-of ( decide-01 :arg1 ( change-01 :arg0 athletes :arg1 ( citizenship :poss country :mod country_name_0 ) ) ) )
and :op1 ( bear-02 :arg1 ( person :arg0-of ( have-org-role-91 :arg2 maria ) ) :location ( city_name_0 :location ( yaroslavl :ord ( ordinal-entity ordinal-entity_num_0 ) ) ) ) :op2 ( meet-02 :arg0 person :arg1 ( swim-01 :arg0 person ) )
continue-01 :arg0 girl :arg1 ( lesson :arg1-of ( swim-01 :arg0 girl ) :mod simultaneous ) :arg0-of ( show-01 :arg1 ( result-01 :arg1 ( level :mod nation ) :arg2 ( level :mod nation ) ) )
and :op1 ( appoint-01 :arg0 ( person :arg0-of ( head-01 :arg1 state ) ) :arg1 ( decree :arg0-of ( have-org-role-91 :arg1 ( government-organization :arg0-of ( administrate-01 :arg1 country_name_0 ) ) :arg2 vaino ) ) :arg2 ( vaino :arg0 person :arg1 ( government-organization :arg0-of ( administrate-01 :arg1 country_name_2 ) ) ) ) :op2 ( say-01 :arg0 person :arg1 ( decree :arg1-of ( sign-02 :arg0 ( and :op1 putin :op2 ( website :poss person ) ) ) ) )
turn-14 :arg0 ( idea :mod new ) :arg1 ( populism :arg1-of cheap-02 ) :condition ( and :op1 ( diplomacy :mod diplomacy ) :op2 neznamo :quant all )
contrast-01 :arg1 ( collect-01 :arg0 ( person :arg0-of ( own-01 :arg1 population ) ) :arg1 money :arg2 population ) :arg2 ( and :op1 ( pay-01 :polarity - :arg0 ( company :arg0-of ( provide-01 :arg1 service ) ) ) :op2 ( spend-01 :arg0 company :arg1 company :arg3 ( need-01 :arg0 company :arg1 company ) ) ) :prep-as ( person :arg0-of ( own-01 :arg1 ( code :arg2-of criminal-03 ) ) )
contrast-01 :arg2 ( lead-01 :arg0 ( franks :mod franks ) :arg1 ( winners :location country_name_0 ) :arg1-of ( cause-01 :arg0 ( great :domain ( see-01 :arg0 i ) ) ) )
contrast-01 :arg1 ( evacuated :arg1 ( person :arg0-of reside-01 ) :location ( churches :quant num_0 ) ) :arg2 ( zatoplyaetsya :arg0 ( they :mod both ) :time now )
trained :arg0 ( person_name_0 :arg0-of ( have-org-role-91 :arg2 burman ) ) :arg1 ( athletes :poss person ) :arg2 ( and :op1 biles :op2 coach :op3 maggie ) :time ( since :op1 ( go-02 :arg0 person :arg4 war_name_0 ) ) :mod aimee
say-01 :arg1 ( need-01 :arg1 ( provide-01 :arg1 ( protect-01 :arg1 informant :mod ( good :degree most ) ) ) ) :arg2 it
say-01 :arg0 i :arg1 ( die-01 :arg1 ( person :arg1-of ( die-01 :arg1-of ( cause-01 :arg0 ( speak-01 :arg0 person :arg1 ( speak-01 :topic ( person :mod country_name_0 :mod country_name_1 ) ) ) ) ) ) ) :arg2 ( person :arg0-of ( speak-01 :arg3 ( speak-01 :arg0 person :topic ( swimmer :arg1 person ) ) ) )
cup
floor :location ( house :poss ( sell-01 :arg1 drug :time past ) )
and :op1 ( search-01 :arg0 police :arg1 house ) :op2 ( find-01 :arg0 police :arg1 house ) :op3 ( find-01 :arg0 police :arg1 house ) :op4 ( find-01 :arg0 police :arg1 ( cannabis :quant ( more-than :op1 ( mass-quantity mass-quantity_num_0 :unit gram ) ) ) :mod as-well :arg1-of appropriate-02 )
say-01 :arg0 ( person_name_0 :arg0-of ( lead-02 :arg1 ( democrat :location senate ) ) ) :arg1 ( convince-01 :arg0 person :arg1 ( person :arg0-of ( have-org-role-91 :arg3 judge-01 ) :arg0-of ( nominate-01 :arg1 ( person :arg0-of ( have-org-role-91 :arg3 judge-01 ) ) ) :arg0-of ( have-org-role-91 :arg3 judge-01 ) ) :arg2 ( person :arg0-of ( have-org-role-91 :arg3 judge-01 ) ) :condition ( elect-01 :arg2 president ) )
detain-01 :arg1 ( person :source ( and :op1 ( citizen :quant number ) :op2 ( citizen :mod country_name_0 ) ) ) :arg2 ( assist-01 :arg0 person :arg1 person :arg2 ( prepare-01 :arg1 ( act-02 :arg0 terrorist ) ) )
and :op1 ( reside-01 :arg0 ( person :arg0-of ( reside-01 :arg1 ( region :mod zaporozhye ) ) ) :arg1 ( person :arg1-of ( detain-01 :arg2 ( suspect-01 :arg1 ( organize-01 :arg1 attack-01 :location crimea ) ) ) ) :time former ) :op2 ( admit-01 :arg0 person :arg1 ( guilt :arg0 person ) :time ( interrogate-01 :arg2 person ) )
and :op1 ( confirm-01 :arg0 ( court :mod district ) :arg1 ( violate-01 :arg1 ( require-01 :arg1 ( spread-02 :arg1 ( thing :arg1-of ( require-01 :arg1-of establish-01 ) :arg1-of ( spread-02 :arg1-of establish-01 ) ) ) ) ) ) :op2 ( decide-01 :arg0 court :arg1 ( appoint-01 :arg0 court :arg1 ( punish-01 :arg1 ( person :arg0-of ( have-rel-role-91 :arg1 ( product :mod information ) :arg2 child ) ) ) ) ) :op3 ( decide-01 :arg0 court :arg1 ( appoint-01 :arg0 court :arg1 ( punish-01 :arg1 ( thing :quant num_0 :arg2-of ( copy-01 :arg1 ( product :arg1-of print-01 ) ) ) ) :arg2 ( manage-01 :arg1 rospotrebnadzor ) ) )
notice-01 :arg0 he :arg1 ( wave-04 :arg1 ( wave-04 :arg1 ( person :arg1-of ( be-located-at-91 :arg2 ( and :op1 ( influence-01 :arg0 person :arg1 media ) :op2 ( feel-01 :arg0 person :arg1 ( duty :purpose ( buy-01 :arg0 person :arg1 ( record :mod old :poss person ) ) ) ) ) ) :mod new ) ) )
multi-sentence :snt1 ( contrast-01 :arg1 ( simple-02 :arg1 ( listen-01 :arg1 ( music :prep-on ( or :op1 computer :op2 ( device :mod other ) ) ) ) ) :arg2 ( simple-02 :arg1 ( woe :poss vinyl ) ) ) :snt2 ( immersed :arg1 she :manner ( thing :arg1-of ( fill-01 :arg2 love-01 :manner sigh ) ) )
rule-01 :arg0 ( court :mod country_name_0 ) :arg1-of ( contrast-01 :arg2 ( say-01 :arg0 court :arg1 ( thing :polarity - :arg1-of ( base-02 :arg2 ( and :op1 ( manage-01 :arg0 person :arg1 ( store :quant num_0 :arg1-of light-06 ) ) :op2 ( say-01 :arg0 court :arg1 ( understand-01 :arg1 ( problem :topic ( '' :mod calais ) ) :degree full ) ) ) ) ) ) )
contrast-01 :arg1 ( attempt-01 :arg0 ( person :mod country_name_0 ) :arg1 ( attempt-01 :arg0 person :arg1 ( make-01 :arg0 person :arg1 ( touchdown :location ( corner :mod left ) ) ) ) ) :arg2 ( go-01 :arg1 game :arg4 ( way :poss ( and :op1 ( sing-01 :arg0 ( fan :arg1-of ( sing-01 :arg0 fan ) ) ) :op2 ( flags :arg0 fan ) :op3 ( dancing :arg0 fan ) ) :arg1-of long-03 ) )
announce-01 :arg0 ( person_name_0 :arg0-of ( have-org-role-91 :arg1 ( board :arg0-of hold-01 ) :arg2 ( chairman :mod deputy ) ) ) :arg1 this
say-01 :arg0 he :arg1 ( and :op1 ( emboldened :arg0 army :arg1 ( crisis :mod politics :arg1-of go-on-15 ) ) :op2 ( lack-01 :arg0 army :arg1 ( negotiate-01 :arg0 ( government-organization :arg0-of govern-01 ) ) ) ) :medium move-02
multi-sentence :snt1 ( get-01 :arg0 ( keys :source ( person :arg0-of ( have-org-role-91 :arg1 product_name_1 :arg2 ( director :mod multivitamin ) ) ) ) :arg1 ( person :mod ( again :mod once ) :arg0-of ( have-org-role-91 :arg2 director ) ) :mod ( again :mod once ) ) :snt2 ( '' :arg0 ( story :topic ( person :arg0-of ( have-org-role-91 :arg2 ( director :mod dear ) ) ) ) )
present-01 :arg1 ( journalist :name ( name :op1 alexander :op2 alexander ) :mod rbc ) :arg2 ( charge-05 :mod new )
have-03 :arg0 ( team :mod nation :mod country_name_0 ) :arg1 ( location :location-of ( ready-02 :arg1 team :arg2 ( provide-01 :arg0 team :arg1 ( person :arg0-of ( reside-01 :arg1 country_name_1 :mod home ) :arg2-of ( include-01 :arg1 ( and :op1 relaxing :op2 ( massage :mod sports ) ) ) ) ) ) :time ( moment :mod any ) ) :mod of-course
believe-01 :arg0 i :arg1 ( decide-01 :arg0 they :arg1 ( have-06 :arg0 they :arg1 ( temporal-quantity temporal-quantity_num_0 :unit hour :mod quiet ) :arg1-of direct-02 :prep-on ( rungs :mod cold ) ) ) :time ( moment :mod any )
multi-sentence :snt1 ( question-01 :location country_name_0 ) :snt2 ( attack-01 :arg0 girl :arg1 i :source wada )
birthplace :arg0 ( sport :mod whole ) :arg1 ( sport :arg1-of record-01 :mod whole ) :manner somehow
and :op2 ( accuse-01 :arg0 ( article :quant ( multiple :op1 num_0 ) :arg1-of ( include-91 :arg2 ( code :arg2-of criminal-03 :poss ( and :op1 ( acquire-01 :arg0 criminal-organization_name_0 :arg1 ( acquire-01 :arg1 ( -rrb- :mod ammunition ) ) ) :op2 ( possess-01 :arg1 ( -rrb- :mod ammunition ) ) ) ) ) ) :arg1 krivolap )
find-01 :arg0 ( person_name_0 :arg1-of ( originate-01 :arg2 defraud-01 :arg1-of ( know-01 :polarity - ) ) :arg0-of ( allow-01 :arg1 ( produce-01 :arg0 person :arg1 ( charge-01 :mod additional ) ) ) :arg1-of ( know-01 :polarity - ) ) :arg1 defraud-01
and :op1 ( company_name_0 :mod serious :domain this ) :op2 ( break-01 :polarity - :arg0 this :arg1 term :time ever )
receive-01 :arg0 ( coffers :mod federal ) :arg1 ( monetary-quantity monetary-quantity_num_1 :unit dollar :arg1-of ( cost-01 :arg2 ( monetary-quantity monetary-quantity_num_1 :unit dollar ) ) ) :arg2 ( term :mod entire :poss project ) :time ( since :op1 ( begin-01 :arg1 ( and :op1 ( construct-01 :arg1 ( stage :mod ( stage :ord ( ordinal-entity ordinal-entity_num_0 ) ) ) ) :op2 ( infringe-01 :arg1 ( stage :ord ( ordinal-entity ordinal-entity_num_0 ) ) ) ) ) )
and :op1 ( person :arg0-of author-01 ) :op2 ( person :arg0-of author-01 ) :op3 ( person :arg0-of author-01 ) :op4 ( person :arg0-of author-01 ) :op5 ( person :arg0-of author-01 )
order-01 :arg0 ( person_name_0 :arg0-of ( have-org-role-91 :arg2 premier ) :arg0-of ( have-org-role-91 :arg2 premier ) ) :arg2 ( take-01 :arg0 person :arg1 ( measure-02 :arg1 security :mod additional ) :purpose ( and :op1 ( prevent-01 :arg0 person :arg1 ( explode-01 :mod new ) ) :op2 ( exclude-01 :arg0 person :arg1 ( casualty :arg1-of possible-01 ) ) ) )
sell-01 :arg1 ( copy-01 :quant all ) :arg3 day
consider-02 :arg0 ( person :arg0-of ( have-org-role-91 :arg1 country_name_0 :arg2 official ) ) :arg1 ( sanction-02 :arg0 person :arg1 ( thing :arg2-of ( sanction-02 :arg1 ( and :op1 ( server :arg0-of hack-04 :poss ( party :mod democracy ) ) :op2 ( journal :name ( name :op1 wall :op2 street :op3 street ) ) :op4 ( journal :name ( name :op1 wall :op2 street ) ) ) ) ) ) :arg2 ( source :arg0-of ( cite-01 :arg1 source ) )
note-01 :arg0 ( note :name ( name :op1 wsj ) ) :arg1 ( prefer-01 :arg0 state :arg1 ( specify-01 :polarity - :arg0 state :arg1 ( thing :arg2-of ( name-01 :arg1 ( person :arg0-of ( carry-out-03 :arg1 ( attack-01 :arg0-of hack-04 ) ) ) ) ) ) :mod usual )
accident :mod terrible :time ( during :op1 evening ) :time ( evening :mod evening ) :location ( area :poss ( tract :name ( name :op1 cornus :op2 tash :op3 crimean ) ) )
share-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg3 judge-01 ) :mod other ) :arg1 ( thing :arg1-of ( view-01 :arg0 she ) ) :arg2 ( express-01 :arg0 person :arg1 ( respond-01 :polarity - :arg0 person :arg2 ( thing :arg1-of ( include-91 :arg2 ( thing :arg1-of ( question-01 :arg0 she ) :quant most ) ) ) ) )
open-01 :arg0 ( goal :quant num_0 :arg1-of match-01 :arg1-of ( end-01 :accompanier ( win-01 :arg0 country_name_0 :arg2 ( over :op1 ( product-of :op1 num_0 :op2 num_1 ) ) ) ) ) :arg1 ( goal :quant num_3 :ord ( ordinal-entity ordinal-entity_num_0 ) :beneficiary ( team :poss ( woman :mod country_name_1 :mod country ) ) ) :time ( win-01 :arg0 ( person :mod country ) :arg1 ( team :poss country ) :arg2 ( ordinal-entity ordinal-entity_num_1 ) )
meet-03 :arg0 ( and :op1 ( team :mod country_name_0 ) :op2 ( team :mod country_name_1 ) ) :time ( game :mod final :part-of ( round :ord ( ordinal-entity ordinal-entity_num_0 ) ) )
and :op1 ( video :source protest-01 ) :op2 ( shoot-02 :arg1-of allege-01 :time ( end-01 :arg1 ( year :mod last ) ) ) :op3 ( show-01 :arg1 ( beat-03 :arg0 ( person :arg0-of ( have-org-role-91 :arg1 security :arg2 officer ) ) :arg1 ( man :mod young ) :arg2 sticks :time ( put-01 :arg0 person :arg1 ( hand :part-of person ) :arg2 ( hand :part-of person ) ) ) )
try-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg1 country_name_0 :arg2 trumps ) ) :arg1 ( downplayed :arg0 person :arg1 ( conflict-01 :arg0 person :arg1 ( headquarters :poss person :mod elect-01 ) :mod last ) ) :arg0-of ( claim-01 :arg1 ( joked :arg0 ( and :op1 ( person :arg0-of ( have-org-role-91 :arg2 president ) ) :op2 ( person :arg0-of ( have-org-role-91 :arg2 head-of-state ) ) :op3 ( person :arg0-of ( have-org-role-91 :arg1 ( group_name_0 :mod terrorist ) :arg3 ( apprentice-01 :arg0 person ) ) ) ) :arg1 ( '' :arg0 ( and :op1 ( person :arg0-of ( have-org-role-91 :arg2 president ) ) :op2 ( person :arg0-of ( have-org-role-91 :arg1 ( group_name_0 :mod terrorist ) ) ) ) ) :time ( week :mod this ) ) )
visit-01 :arg0 ( person_name_0 :arg0-of ( have-org-role-91 :arg2 faithfully ) :mod another ) :arg1 ( '' :name ( name :op1 '' :op2 willow ) ) :time ( since :op1 ( date-entity decade_date-entity_0 ) )
say-01 :arg0 he :arg1 ( and :op1 ( come-01 :arg1 i :time ( after :op1 now :quant ( temporal-quantity temporal-quantity_num_0 :unit minute ) ) ) :op2 ( prepare-02 :arg0 i :arg1 i :arg2 ( and :op1 ( prepare-01 :arg0 i :arg1 ( bagel :arg0 i ) :accompanier ( stuff :quant all ) ) :op2 ( stuff :mod all ) ) ) )
and :op1 ( confessed :arg0 person_name_0 :arg1 ( want-01 :arg0 person :arg1 experiment-01 ) ) :op2 ( introduce-02 :arg0 person :arg1 ( dishes :mod new :location menu ) )
and :op1 ( use-01 :arg0 ( person :arg0-of ( campaign-01 :arg1 environment ) ) :arg1 ( way :mod ( conventional :polarity - ) ) :purpose ( prevent-01 :arg0 person :arg1 ( wander :mod elephants ) ) :manner ( way :mod ( conventional :polarity - ) ) :purpose ( prevent-01 :arg0 person :arg1 ( wander :mod elephants ) ) )
and :op1 ( consequence :arg1-of ( take-01 :arg0 ( government-organization :arg0-of ( govern-01 :arg1 country-region ) ) :time ( year :mod this ) ) :arg1-of ( take-01 :arg0 ( government-organization :arg0-of ( govern-01 :arg1 country_name_1 ) ) ) ) :op2 ( renew-01 :polarity - :arg0 move-02 :arg1 ( thing :instrument-of ( subsidize-01 :arg1 ( thing :instrument-of ( support-01 :arg1 plant ) ) ) ) )
say-01 :arg0 ( company :arg0-of ( supply-01 :arg1 ( plant :mod large :location ( lower :name ( name :op1 latrobe ) :mod large ) ) ) ) :arg1 ( expect-01 :arg0 company :arg1 ( step-01 :arg1 ( person :quant num_0 :mod other :arg0-of own-01 ) :arg2 ( terminate :arg0 person :arg1 contract ) :mod also ) )
recommend-01 :arg1 ( lose-02 :arg0 ( centre :arg1-of legal-02 :mod this ) :arg1 ( thing :arg1-of ( include-91 :arg2 ( fund-01 :arg0 federal ) :arg3 ( percentage-entity :value num_0 ) ) ) ) :time ( year :mod next )
account-01 :arg0 ( person :arg0-of ( use-01 :arg1 ( device :arg1-of mobile-02 ) ) ) :arg1 ( revenue :poss company_name_0 :arg1-of ( include-91 :arg2 ( revenue :poss company ) :arg3 ( percentage-entity percentage-entity_num_0 ) ) ) :arg3 ( person :arg0-of ( use-01 :arg1 ( device :arg1-of mobile-02 ) ) ) :time now
suggest-01 :arg0 scientist :arg1 ( explain-01 :arg0 ( atmosphere :mod dense :poss scientist ) :arg1 ( speed :mod ( rotation :mod small ) :mod venus ) ) :time previous
organize-01 :arg0 ( strike-01 :arg1 ( group :consist-of wood :mod wood ) ) :arg1 ( platform :location ( north :part-of north ) :arg1-of ( run-01 :arg0 ( shell :mod royal :mod royal ) ) )
hold-04 :arg0 we :arg1 ( meet-03 :quant several :time ( day :mod full ) :duration ( few :op1 ( temporal-quantity temporal-quantity_num_0 :unit week ) ) ) :arg1-of ( start-01 :time ( begin-01 :arg1 ( problem :topic ( eye :arg1-of fresh-04 ) ) ) )
suggest-01 :arg0 ( speed :mod new :mod rotation ) :arg1 ( star :mod ( massive :degree more :compared-to ( star :mod massive :quant less ) ) )
talk-01 :arg0 nobody :arg1 ( build-01 :arg1 ( wall :arg0-of ( separate-02 :arg1 country :arg2 ( and :op1 ( neighbor-01 :arg1 country :arg2 poor ) :op2 ( corrupt-01 :arg1-of corrupt-01 :arg1-of corrupt-01 ) ) ) ) ) :location location_name_0
multi-sentence :snt1 ( and :op2 ( got :arg0 ( person :mod top :arg0-of ( have-org-role-91 :arg2 top ) ) :arg1 ( person :mod white ) :location ( along :op1 ( and :op1 boards :op2 ( 20-inch :arg1-of special-02 ) ) ) ) ) :snt2 ( '' :arg0 ( detail :mod some :topic ( painted :arg1 body :arg2 ( metallic :mod gold :mod white :mod white ) ) :mod some ) )
cause-01 :arg1 ( ad :arg1 ( technology :mod new :poss adblock :arg0-of ( effective-04 :arg1 ( effective-04 :arg0 technology :arg1 ( time :mod short ) ) ) ) )
and :op1 ( wait-01 :polarity - :arg1 ( person :mod this ) :arg2 ( slash :op1 mail :op2 ( realize-01 :polarity - :arg0 person :arg1 it ) ) ) :op2 ( fall-07 :arg1 person :arg2 ( seismic-quantity seismic-quantity_num_0 :arg1-of ( cause-01 :arg0 ( consequence :mod ensuing :quant all ) ) ) )
say-01 :arg0 person_name_0 :arg1 ( imagine-01 :arg0 person :arg1 ( imagine-01 :arg0 person :arg1 ( anyone :arg0-of ( want-01 :arg1 ( hurt-01 :arg0 anyone :arg1 ( person :mod ( young :degree more ) :arg0-of ( have-rel-role-91 :arg1 he :arg2 ( brother :mod ( young :degree more ) ) ) ) ) ) ) :degree total ) )
equal-01 :arg1 ( size :poss ( debt :mod italian ) ) :arg2 ( product-of :op1 num_0 :op2 ( monetary-quantity monetary-quantity_num_1 :unit euro ) )
ahead :mod grow-01
exemplify-01 :arg0 ( reduce-01 :arg1 ( pressure-01 :arg1 price-01 ) )
decline-02 :arg0 ( trade-01 :mod foreign ) :arg1 ( rate-entity-91 :arg1 ( rate-entity-91 :arg1 num_0 :arg2 ( temporal-quantity temporal-quantity_num_0 :unit year ) ) :arg2 ( rate-entity-91 :arg1 num_1 :arg2 ( temporal-quantity temporal-quantity_num_2 :unit year ) ) :arg1-of possible-01 )
contrast-01 :arg2 ( say-01 :arg1 ( wrong-04 :arg1 ( person :arg0-of ( have-rel-role-91 :arg1 we :arg2 coaches ) ) :arg2 ( person :arg0-of ( have-rel-role-91 :arg1 we :arg2 coaches ) ) ) )
true-01 :arg1 ( occupy-01 :arg0 ( person :mod country_name_0 ) :arg1 ( place :ord ( ordinal-entity ordinal-entity_num_0 ) ) :mod only :purpose ( hit-01 :arg0 person :arg1 final :arg2 ( tournament :arg1-of personal-02 ) ) ) :mod true
and :op1 ( grant-01 :arg0 she :arg1 ( citizenship :mod swiss ) ) :op2 ( begin-01 :arg0 she :arg1 ( speak-01 :arg0 she :prep-under ( flag :mod red ) ) ) :li num_0
cause-01 :arg0 ( and :op1 ( have-03 :arg0 he :arg1 ( tie-01 :arg1 he :arg2 west ) :quant lot ) :op2 ( have-org-role-91 :arg0 he :arg1 ( perspective :mod military ) :arg2 member ) ) :arg1 ( think-01 :arg0 i :arg1 ( try-01 :arg0 ( person :mod country_name_0 ) :arg1 ( maintain-01 :arg0 person :arg1 ( relation-03 :arg0 person :arg2 west ) ) ) ) :source ( perspective :mod military )
multi-sentence :snt1 ( and :op1 ( coincidence :polarity - :arg1 ( person :arg0-of ( have-org-role-91 :arg2 ( politician :mod turkish ) ) ) ) :op2 ( declare-02 :arg0 person :arg1 ( will-02 :arg0 person :arg1 ( change-01 :arg0 person :arg1 ( position :poss person ) :arg2 ( issue-02 :quant number :location syria ) ) ) ) :op3 ( declare-02 :arg0 person :arg1 ( relation-03 :arg0 person :arg2 country_name_0 ) :purpose ( engage-01 :arg0 person :arg1 ( person :mod country ) :arg2 country ) ) :op4 ( explain-01 :arg0 person :arg1 ( step :mod next ) :arg2 ( relation-03 :arg0 country_name_1 :arg2 country ) ) ) :snt2 ( glazov :arg1 ( step :mod next ) :arg2 ( relation-03 :arg0 country :arg2 country ) )
visit-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg2 president ) ) :arg1 ( and :op1 ( person :arg0-of ( have-org-role-91 :arg2 president ) ) :op2 ( person :arg1-of fame-01 ) ) :mod ( good :degree very ) :time now
and :op1 ( include-91 :arg3 num_0 :arg1 ( era :mod ( era :arg1-of modern-02 ) ) :arg2 ( era :arg1-of modern-02 ) ) :op2 ( surprise-01 :polarity - :arg1 ( reach-01 :arg0 he :arg1 ( point :mod this ) :arg1-of ( reach-01 :arg0 ( few :op1 ( temporal-quantity temporal-quantity_num_0 :unit month ) ) ) ) )
and :op1 ( earn-01 :arg0 i :arg1 ( gold :ord ( ordinal-entity ordinal-entity_num_0 ) :location tuesday ) ) :op2 ( become-01 :arg1 ( gold :ord ( ordinal-entity ordinal-entity_num_0 ) ) :arg2 ( chord :mod final :arg1-of beautiful-02 :beneficiary ( party :mod farewell :arg0-of ( coordinator :arg1 ( team :mod nation :mod ( nation :mod nation ) ) ) ) ) )
reach-01 :arg0 ( person :arg0-of ( reach-01 :arg1 ( attack-01 :quant num_0 ) :time already ) ) :arg1 ( risk-01 :arg2 ( get-01 :arg1 another ) :mod ( great :degree more ) )
phone-number-entity phone-number-entity_num_0
go-08 :arg1 ( fan :poss ( olympics :quant num_0 :arg1-of olympics :time ( week :mod this ) ) ) :arg2 ( prevost :arg1 ( prevost :name ( name :op1 circuit :op2 circuit :op3 circuit :op4 circuit :op5 circuit :op6 prevost :op7 prevost ) :arg0-of ( resemblance :arg1 ( resemblance :arg1 cambridge :arg2 duchess ) ) ) ) :time ( week :mod this )
and :op2 ( and :op1 ( find-out-03 :arg0 i :arg1 ( madness :arg1 society ) ) :op2 ( admit-01 :arg0 i :arg1 ( look-02 :arg0 he :arg1 ( resemble-01 :arg1 he :arg2 ( resemble-01 :arg1 he :arg2 ( kid :domain he ) ) ) ) ) :prep-in fact )
and :op1 ( continue-01 :arg0 she :arg1 search-01 ) :op2 ( measure-01 :arg0 she :arg1 ( pairs :quant ( multiple :op1 num_0 ) ) :time eventual :location ( mall :name ( name :op1 bouverie ) :location bouverie ) )
contrast-01 :arg1 ( endanger-01 :arg1 ( around :op1 world ) ) :arg2 ( possible-01 :arg1 ( help-01 :arg0 ( video :mod this :source country_name_0 ) :arg1 ( make-02 :arg0 video :arg1 ( more :degree ( more :degree little ) :beneficiary you ) ) ) )
forcibly :arg0 ( house-01 :arg0-of house-01 ) :arg1 ( and :op1 she :op2 ( home :poss ( person :arg0-of ( have-rel-role-91 :arg1 she :arg2 partner ) ) ) ) :time ( week :mod this ) :time ( after :op1 ( grant-01 :arg1 ( period :arg1-of extend-01 :consist-of ( depart-01 :arg1-of voluntary-02 ) ) :arg2 ( depart-01 :arg1-of voluntary-02 ) ) )
say-01 :arg0 she :arg1 ( message :domain this :beneficiary ( person :arg0-of ( feel-01 :arg1 ( possible-01 :arg1 ( behave :arg0 person :arg1 ( and :op1 ( person :arg0-of prosecute-01 ) :op2 ( person :arg1-of ( victimize-01 :arg0 ( behave-01 :mod such ) ) ) ) ) ) ) ) )
and :op1 ( post-01 :arg1 it :arg2 ( site :name ( name :op1 rospotrebnadzor ) ) ) :op2 ( print-01 :arg1 version :arg2 ( and :op1 ( version :arg1-of print-01 ) :op2 ( version :arg1-of print-01 ) ) ) :time then
fined :domain ( network :mod book :mod new ) :purpose ( sell-01 :arg0 network :arg1 ( book :mod kramer :mod stace ) :time ( before :op1 ( suicide :poss i ) ) ) :arg1-of ( cause-01 :arg0 ( report-01 :arg0 ( agency_name_0 :mod news :mod city ) ) )
contrast-01 :arg2 ( thing :arg2-of result-01 :domain ( thing :arg2-of result-01 ) )
say-01 :arg1 ( see-01 :mode imperative :arg0 we ) :arg2 okay-04
say-01 :arg0 he :arg1 ( thing :arg1-of ( include-91 :arg2 ( thing :arg1-of ( get-01 :arg0 i ) ) ) :quant much :arg1-of ( get-01 :arg0 i :arg1-of ( get-01 :arg0 i :arg1-of ( get-01 :arg0 i :time ( or :op1 ( person :quant num_1 :domain i ) :op2 ( person :quant num_2 :domain i ) :op3 ( thing :arg1-of ( say-01 :arg0 he ) :mod probable ) ) ) ) ) ) :li num_0
say-01 :arg0 he :arg1 ( sell-01 :arg0 ( customer :mod '' :arg0-of ( sell-01 :arg1 ( vinyl :poss customer ) :arg2 ( buy-01 :arg0 customer :arg1 ( record :poss customer ) ) ) ) :time now )
include-91 :arg1 ( place :quant num_0 :arg1-of ( threaten-01 :arg2 demolition ) :arg0-of ( have-rel-role-91 :arg1 child :arg2 child ) ) :arg2 ( place :location-of ( and :op1 ( work-01 :polarity - :arg0 child :arg1 profit-01 ) :op2 ( offer-01 :arg0 ( and :op1 ( class :mod country_name_0 ) :op2 ( class :mod country ) :op3 ( class :mod country ) ) :arg1 ( and :op1 ( class :mod country_name_1 ) :op2 ( class :mod country ) :op3 ( class :mod country ) ) :purpose ( hundreds :arg1 ( minor :mod vulnerable ) :location camp ) ) ) )
include-91 :arg1 ( and :op1 ( person :quant num_0 :arg1-of ( include-91 :arg2 ( person :quant num_1 ) ) ) :op2 ( person :quant num_1 :arg1-of ( include-91 :arg2 ( person :quant num_1 :arg0-of ( have-rel-role-91 :arg1 i :arg2 neighbourhood ) ) ) ) :op3 ( person :arg0-of ( have-rel-role-91 :arg1 i :arg2 library-affiliate ) ) :op4 ( person :arg0-of ( have-rel-role-91 :arg1 i :arg2 presentation ) ) :op5 ( person :arg0-of ( have-rel-role-91 :arg1 i :arg2 presentation ) ) ) :arg2 ( presentation :mod cruise ) :time today
and :op1 ( come-01 :arg1 defeat-01 :arg3 ( poor :polarity - :degree ( too :polarity - ) :location silver ) ) :op2 ( possible-01 :arg1 ( pride-01 :arg0 ( person :ord ( ordinal-entity ordinal-entity_num_0 ) :arg0-of ( have-org-role-91 :arg1 country_name_0 ) ) :arg2 ( and :op1 ( poor :degree ( too :polarity - ) ) :op2 ( person :ord ( ordinal-entity ordinal-entity_num_0 ) :arg0-of ( have-org-role-91 :arg1 country_name_2 ) ) :op3 ( person :ord ( ordinal-entity ordinal-entity_num_1 ) :arg0-of ( have-org-role-91 :arg1 country :arg3 ( lead-02 :arg0 person ) ) ) :op4 ( person :arg0-of ( have-org-role-91 :arg1 country :arg3 ( lead-02 :arg0 person ) ) ) :op5 ( person :arg0-of ( have-org-role-91 :arg1 country :arg3 ( lead-02 :arg0 person ) ) ) :op6 ( person :arg0-of ( have-org-role-91 :arg1 ( africa :mod south ) :arg3 ( africa :mod new ) ) ) :op7 ( africa :location road ) ) ) )
' :arg0 i :arg1 ( ask-02 :arg0 i :arg1 ( or :op1 ( partner-01 :mod ( good :degree more ) ) :op2 ( coach :mod ( good :degree more ) ) ) :arg2 ( coach :mod ( good :degree more ) ) )
prohibit-01 :arg1 ( import-01 :arg1 ( and :op1 ( product :mod agriculture ) :op2 ( material :mod raw ) ) :arg2 ( and :op1 ( and :op1 ( material :mod agriculture ) :op2 ( material :mod raw ) ) :source country_name_0 ) :op2 ( and :op1 ( material :mod raw ) :op2 ( material :mod raw ) :op3 ( and :op1 ( material :mod raw ) :op2 ( material :mod raw ) ) ) ) :arg2 ( import-01 :arg1 and :arg2 country_name_3 )
investment :arg0 ( and :op1 ( person :arg0-of ( head-01 :arg1 ( union-02 :arg1 ( government-organization_name_0 :mod goldminers ) ) ) ) :op2 ( person :arg0-of ( head-01 :arg1 ( union :name ( name :op1 sergei ) ) ) ) :op3 ( person :arg0-of ( head-01 :arg1 ( government-organization :arg0-of ( govern-01 :arg1 country-region ) ) ) ) :op4 ( person :arg0-of ( head-01 :arg1 ( government-organization :arg0-of ( govern-01 :arg1 country-region ) ) ) ) :op5 ( person :arg0-of ( head-01 :arg1 ( government-organization :arg0-of ( govern-01 :arg1 country-region ) ) ) ) ) :arg1 ( monetary-quantity monetary-quantity_num_0 :unit ( dollar :mod december ) ) :arg3 ( monetary-quantity monetary-quantity_num_1 :unit ( dollar :mod december ) )
possible-01 :polarity - :arg1 ( buy-01 :arg0 ( person :mod country_name_0 ) :arg1 ( rate-entity-91 :arg1 ( more-than :op1 ( percentage-entity percentage-entity_num_0 ) ) :arg2 ( temporal-quantity temporal-quantity_num_1 :unit year ) ) :arg1-of ( deploy-01 :arg1-of ( activity-06 :arg0 group ) ) ) :time ( until :op1 recent )
call-01 :arg0 ( person :arg0-of ( have-rel-role-91 :arg1 he :arg2 buddy ) ) :arg1 ( person :arg0-of ( have-rel-role-91 :arg1 he :arg2 buddy ) ) :arg2 ( and :op1 ( person :arg0-of ( have-rel-role-91 :arg1 he :arg2 buddy ) ) :op2 ( person :arg0-of ( have-rel-role-91 :arg1 he :arg2 buddy ) ) :op3 ( person :arg0-of ( have-rel-role-91 :arg1 he :arg2 buddy ) ) :op4 ( person :arg0-of ( have-rel-role-91 :arg1 he :arg2 buddy ) ) :op5 ( person :arg0-of ( have-rel-role-91 :arg1 he :arg2 buddy ) ) :op7 ( person :arg0-of ( have-rel-role-91 :arg1 he :arg2 buddy ) ) )
turn-down-05 :arg0 ( dragon :mod giant :mod giant ) :arg1 ( scary-03 :polarity - :arg2 ( and :op1 ( bulldog :mod good ) :op2 ( wingspan :mod world-region_name_3 ) :op3 ( capable-01 :arg2 ( become-01 :arg1 dragon :arg2 world-region_name_0 ) ) ) ) :mod also
contrast-01 :arg1 ( begin-01 :arg0 ( and :op1 ( image :mod visual :poss elliot ) :op2 ( manner :poss he ) ) :arg1 ( weeping :arg0 and :arg1 ( stream :quant num_0 :mod emotional ) ) :time ( moment :arg1-of ( tense :degree most ) :mod such ) ) :arg2 ( begin-01 :arg0 adult :arg1 ( weeping :arg0 they :arg1 ( stream :quant num_0 ) ) :time ( moment :arg1-of ( tense :degree most ) :mod such ) )
do-02 :arg0 i :arg1 ( thing :mod good ) :arg2 i :arg1-of ( last-01 :arg2 ( temporal-quantity temporal-quantity_num_0 :unit second ) )
and :op2 ( threaten-01 :arg1 ( move-01 :arg1 furniture ) )
hope-01 :arg1 ( match-01 :arg0 ( man :mod young :arg1-of ( shout-01 :arg2 ( news :mod great ) :time first ) ) :arg2 ( semi-finals :arg0 man :arg1 gold :time future ) ) :mod of-course :mod of-course
describe-01 :arg0 ( person :arg0-of ( head-01 :arg1 ( urals :location south ) ) ) :arg1 ( change-01 :arg0 person :arg1 ( place :arg1-of ( take-01 :accompanier enterprise ) ) ) :arg2 enterprise :time ( since :op1 ( move-01 :arg1 ( karabashmed :mod '' ) :arg2 ( group :mod hoam ) ) )
construct-01 :arg0 ( activity-06 :arg1 ( modernize-01 :arg1 '' ) :mod main ) :arg1 ( workshop :poss ( workshop :mod new ) ) :purpose ( capture-01 :arg0 activity-06 :arg1 ( up-to :op1 ( percentage-entity percentage-entity_num_0 :arg3-of ( include-91 :arg2 ( gas :mod metallurgical ) ) ) ) ) :time ( year :mod recent )
and :op1 ( help-01 :arg0 ( enterprise :mod country_name_0 ) :arg1 ( repair-01 :arg0 enterprise :arg1 school ) ) :op2 ( maintain-01 :arg0 enterprise :arg1 ( and :op1 school :op2 kindergartens :op3 ( facility :mod sports ) :op4 ( facility :mod sports ) :op5 ( facility :arg1-of recreation-02 :arg0-of ( improve-01 :arg1 territory ) ) ) )
arrest-01 :arg1 blueberries :time ( until :op1 ( arrest-01 :quant num_0 ) )
out-06 :arg1 ( part :part-of saga :mod new ) :arg2 ( before :op1 ( end-01 :arg1 ( multiple :op1 num_0 ) ) ) :location country_name_0
and :op1 ( grow-01 :arg1 she :location ( blue :name ( name :op1 blue ) ) :location ( blue :name ( name :op1 blue ) ) :time ( ordinal-entity ordinal-entity_num_0 ) ) :op2 ( take-01 :arg0 she :arg1 ( stick :mod hockey ) :time ( date-entity dayperiod_date-entity_0 ) ) :op3 ( play-02 :arg0 ( siblings :mod ( old :degree more ) :poss she ) :arg1 ( sport :mod this ) :time ( age-01 :arg1 she :arg2 ( temporal-quantity temporal-quantity_num_2 :unit year ) ) ) :op4 ( become-01 :arg1 ( team :mod nation ) :arg2 ( thing :arg0-of ( play-12 :arg2 youngest ) :poss she ) :time history )
thing :arg1-of ( resemble-01 :arg2 ( thing :arg1-of ( precede-01 :arg2 ( name :op1 swimmer :op2 swimmer :op3 triatlonistu :op4 triatlonistu ) ) ) ) :arg1-of burn-01
shabby :arg1 ( shop :mod coffee :name ( name :op1 '' :op2 '' :op3 coffee ) ) :arg2 ( shop :mod coffee :arg0-of ( have-03 :polarity - :arg1 ( coffee :mod good ) :arg1-of ( contrast-01 :arg2 ( have-03 :arg0 shop :arg1 coffee :duration ( temporal-quantity temporal-quantity_num_0 :unit year ) ) ) :mod only ) )
squeezed :arg1 ( customer :quant many :arg1-of ( include-91 :arg2 ( customer :time former ) ) ) :arg2 ( jamsberga :name ( name :op1 uil :op2 jamsberga :op3 jamsberga ) :arg1-of ( share-01 :arg0 he ) ) :mod also
consider-01 :arg0 couple :arg1 ( point :arg1-of ( start-01 :arg1-of ( possible-01 :polarity - ) ) :purpose ( discuss-01 :arg1 food :location depression ) :domain couple ) :time ( order-01 :arg0 ( person :arg0-of report-01 ) )
say-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg1 ( person_name_0 :arg0-of ( have-org-role-91 :arg2 ( person :arg0-of ( advise-01 :arg2 elect-01 ) ) ) ) :arg3 ( advise-01 :arg0 person ) ) ) :arg1 ( continue-01 :arg0 ( and :op1 ( person :arg0-of ( have-org-role-91 :arg2 hillary ) ) :op2 ( person :arg0-of ( have-org-role-91 :arg2 kane ) ) ) :arg1 ( set-02 :arg0 and :arg1 ( standard :mod ( motive :mod finance ) ) ) ) :medium ( statement :arg1-of ( state-01 :arg0 person_name_1 ) )
call-01 :arg0 ( and :op1 ( businessman :mod new ) :op2 ( attorneys :poss he ) ) :arg1 ( audit-01 :arg1 ( service :mod revenue :mod public ) ) :arg2 ( reason :arg0-of ( cause-01 :arg1 ( refuse-01 :arg0 he :arg1 ( publish :arg0 he :arg1 ( returns :poss he ) ) ) ) )
device :arg0-of launch-01 :arg0-of ( shoots :arg1 ( candles :mod roman ) :location air ) :arg0-of ( produce-01 :arg1 ( explode-01 :arg1-of bright-02 ) ) :domain ( measure-01 :mod extreme )
or :op1 ( retire-01 :arg0 ( company :arg0-of ( have-org-role-91 :arg1 ( company :arg0-of defend-01 ) :arg2 directors ) ) :arg2 ( position :poss ( and :op1 ( person :arg0-of ( have-org-role-91 :arg1 party ) ) :op2 ( person :arg0-of ( have-org-role-91 :arg1 party ) ) :op3 ( person :arg0-of ( have-org-role-91 :arg1 party :arg3 ( lead-02 :arg0 company ) ) ) ) ) ) :op2 ( transfer-01 :arg1 ( agree-01 :arg0 party ) :arg2 ( job :mod another ) )
result-01 :arg1 ( thing :mod this ) :arg2 ( future :poss ( plant :arg1-of ( go-on-15 :duration ( several :op1 ( temporal-quantity temporal-quantity_num_0 :unit year ) ) ) ) ) :arg1-of ( cause-01 :arg0 ( and :op1 ( strength :poss ( dollar :mod country_name_0 ) ) :op2 ( thing :arg2-of ( price-01 :arg1 ( product :poss plant ) ) ) :time ( late :degree more ) ) )
hope-01 :arg0 ( person :arg0-of ( represent-01 :arg1 country_name_0 ) ) :arg1 ( slow :domain ( respond-01 :arg1 ( request-01 :arg1 ( comment-01 :arg0 person ) ) ) )
suggest-01 :arg0 ( speeds :mod ( new :degree most ) ) :arg1 ( sympathize-01 :arg0 ( star :mod massive :quant more ) :arg1 slower :compared-to ( star :mod ( small :degree more ) ) )
and :op1 ( observe-01 :arg0 we :arg1 ( person :mod that :arg0-of ( prevail-01 :manner slow ) ) ) :op2 ( observe-01 :arg0 we :arg1 that :mod ( massive :degree more :mod usual ) ) :op3 ( say-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg2 head-of-state ) ) :arg1 ( person :arg0-of ( have-org-role-91 :arg2 head-of-state ) ) :mod usual :mod usual :arg1-of ( say-01 :arg0 person ) )
information :arg0-of ( cause-01 :arg1 ( rate-entity-91 :arg1 ( monetary-quantity monetary-quantity_num_0 :unit euro ) :arg2 ( temporal-quantity temporal-quantity_num_1 :unit year ) ) )
declining :arg1 it :arg2 ( trend-01 :arg1 ( trend-01 :arg2 ( grow-01 :arg1 ( inequality :mod international ) ) :mod international ) )
probable :domain ( thing :mod ( big :degree most ) :mod ( big :degree most ) :arg1-of ( mean-01 :arg2 ( found-more :arg1 ( artifacts :mod gold :quant ( quantity :quant ( quantity :quant ( product-of :op1 num_0 :op2 num_1 ) :unit ( yuan :mod renminbi ) ) ) ) ) ) ) :mod probable :mod probable
new-01 :arg1 ( person :mod another :mod country_name_0 :mod country_name_1 :mod another )
and :op1 ( think-01 :arg0 i :arg1 ( useful-05 :arg1 discuss-01 :arg2 we ) ) :op2 ( provide-01 :arg0 we :arg1 ( information :topic ( event :topic ( event :mod amr-unknown ) ) ) )
increase-01 :arg1 ( size :poss ( debt :mod state ) ) :arg4 ( record-breaking :arg1 debt )
increase-01 :arg1 ( percentage-entity percentage-entity_num_0 :arg3-of ( include-91 :arg2 ( percentage-entity percentage-entity_num_0 :time current ) ) ) :arg4 ( percentage-entity percentage-entity_num_3 ) :time current :arg1-of ( estimate-01 :arg2 ( percentage-entity percentage-entity_num_1 :arg1-of ( include-91 :arg2 ( percentage-entity percentage-entity_num_1 ) ) ) )
admit-01 :arg0 lawyer :arg1 ( attend-02 :arg1 ( right :arg0-of house-01 :location university ) :degree ( little :degree very ) )
multi-sentence :snt1 ( action :arg1-of single-02 :mod ( just :polarity - ) :domain this ) :snt2 ( target-01 :arg1 ( fight-01 :arg1 corruption ) )
and :op1 ( meet-03 :arg0 ( person :arg0-of ( lead-02 :arg1 ( and :op1 ( person :arg0-of ( lead-02 :arg1 country_name_0 ) ) :op2 ( person :arg0-of ( lead-02 :arg1 country_name_1 ) ) ) ) ) :arg1 ( and :op1 ( restore-01 :arg0 person :arg1 hand ) :op2 ( declare-01 :arg0 person :arg2 hand ) ) ) :op2 ( declare-01 :arg0 person :arg2 ( end-01 :arg1 ( war-01 :arg0 ( and :op1 word :op2 ( sanction-02 :arg1 economy ) ) :mod official ) :mod official ) )
and :op1 ( accuse-01 :arg1 ( person :arg0-of ( have-org-role-91 :arg2 ( official :mod senior ) ) ) :arg2 ( person :arg0-of ( have-org-role-91 :arg2 ( official :mod senior ) ) ) :arg3 ( person :arg0-of ( have-org-role-91 :arg2 ( official :mod senior ) ) ) :arg3 ( person :arg0-of ( have-org-role-91 :arg2 ( official :mod senior ) ) ) :arg3 ( person :arg0-of ( have-org-role-91 :arg2 ( official :mod senior ) ) ) :arg3 ( person :arg0-of ( have-org-role-91 :arg2 ( official :mod senior ) ) ) :arg3 ( person :arg0-of ( have-org-role-91 :arg2 ( official :mod senior ) ) ) :arg3 ( person :arg0-of ( have-org-role-91 :arg2 ( official :mod senior ) ) ) :arg3 ( person :arg0-of ( have-org-role-91 :arg2 ( official :mod senior ) ) ) :arg3 ( person :arg0-of ( have-org-role-91 :arg2 ( official :mod senior ) ) ) :arg3 ( person :arg0-of ( have-org-role-91 :arg2 ( official :mod senior ) ) ) :arg3 ( person :arg0-of ( have-org-role-91 :arg2 ( official :mod senior ) ) ) )
tell-01 :arg0 he :arg1 ( and :op1 ( become-01 :arg1 ( brand :name ( name :op1 rbs ) :mod ( brand :name ( name :op1 rbs ) ) ) :arg2 ( brand :mod invest-01 :poss we ) :time eventual ) :op2 ( busy :domain ( person :quant num_0 :arg2-of ( staff-01 :arg1 we ) ) ) :arg1-of ( cause-01 :arg0 ( become-01 :arg1 we :arg2 ( bank :part-of brand :quant more ) :time now ) ) ) :arg2 person_name_0
achieve-01 :arg0 person_name_0 :arg1 ( win-01 :arg0 ( person :quant num_0 :mod country_name_1 :mod country ) :location newmarket )
struggle-02 :arg0 ( man :quant num_0 ) :arg1 ( reach-01 :arg0 man :arg1 ( place :mod safe-01 ) ) :concession ( continue-01 :arg1 ( go-02 :arg0 ( ship :poss man ) ) )
contrast-01 :arg1 ( have-03 :arg0 ( engine :part-of boat ) :arg1 ( blurring :mod emergency ) ) :arg2 ( take-01 :arg1 engine :arg3 ( person :arg0-of ( manage-02 :arg1 boat :time ( overhauled :arg1 boat ) ) ) :manner somehow )
multi-sentence :snt1 ( and :op1 ( wait-01 :arg1 ( person :quant num_0 :mod last ) :location country_name_0 ) :op2 ( compete-01 :arg0 ( rest :part-of ( area :mod this ) ) :mod ( much :polarity - :degree so ) :location ( area :mod this ) ) ) :snt2 ( and :op1 ( much :degree so ) :op2 ( thing :quant-of ( thing :arg1-of expect-01 :mod inflated ) ) )
and :op1 ( walk-01 :arg0 he :instrument outside ) :op2 ( ride-01 :arg0 he :arg1 bike )
say-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg1 ( person_name_0 :arg0-of ( have-org-role-91 :arg1 country_name_1 :arg2 governor ) ) :arg2 edwards ) ) :arg1 ( and :op1 ( contact-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg1 ( authority :arg1-of local-02 ) :arg2 official ) ) :arg1 ( person :arg0-of ( have-org-role-91 :arg1 ( authority :arg1-of local-02 ) :arg2 official ) ) :manner constant ) :op2 ( go-01 :arg1 aid-01 :arg4 ( parishes :arg1-of affect-01 ) :time already ) )
identify-01 :arg0 ( and :op1 ( person :arg0-of ( have-rel-role-91 :arg1 ( person :arg0-of ( have-rel-role-91 :arg2 child ) ) :arg2 grandmother ) ) :op2 ( person :arg0-of ( have-rel-role-91 :arg1 person :arg2 grandfather ) ) :op3 ( person :arg0-of ( have-rel-role-91 :arg1 person :arg2 grandfather ) ) :op4 ( person :arg0-of ( have-rel-role-91 :arg1 person :arg2 grandfather ) ) :op5 ( person :arg0-of ( have-rel-role-91 :arg1 person :arg2 grandfather ) ) ) :arg1 he :arg2 ( philadelphia :mod cbs )
and :op1 ( be-located-at-91 :arg1 boy :arg2 hospital :prep-in ( condition :arg1-of critical-02 ) ) :op2 ( experience-01 :arg0 boy :arg1 ( operation :quant several ) )
find-02 :arg1 ( shoot-02 :arg1 child :location ( seat :mod front :part-of car ) :location ( next-to :op1 ( and :op1 ( condition :arg1-of critical-02 ) :op2 ( report-01 :arg1 station ) ) ) )
and :op1 ( meet-03 :arg0 ( person :arg0-of ( have-org-role-91 :arg1 country_name_0 ) ) :arg1 ( attempt-01 :arg0 person :arg1 ( act-02 :arg0 person ) ) ) :op2 ( silent :arg0 bid-03 :arg1 ( part :part-of ( government-organization :arg0-of govern-01 ) :arg2-of total-01 ) :frequency sometimes )
say-01 :arg0 i :arg1 ( leave-11 :arg0 ( and :op1 ( person :arg0-of ( have-org-role-91 :arg1 ( team :mod male :poss we ) :arg2 member ) ) :op2 ( person :arg0-of ( have-org-role-91 :arg1 ( team :mod male :poss we ) :arg2 member ) ) :op3 ( person :arg0-of ( have-org-role-91 :arg1 ( team :mod male :poss we ) :arg2 member ) ) :op4 ( person :arg0-of ( have-org-role-91 :arg1 ( team :mod male :poss we ) :arg2 member ) ) :op5 ( person :arg0-of ( have-org-role-91 :arg1 ( team :mod male :poss we ) :arg2 member ) ) ) :arg2 ( person :arg0-of ( have-rel-role-91 :arg1 team :arg2 child ) ) )
and :op2 ( and :op1 ( fortunate-01 :polarity - :arg2 ( choose-01 :arg1 word ) ) :op2 ( fortunate-01 :polarity - :arg1 thing :arg2 ( thing :arg1-of ( say-01 :arg0 he ) ) :degree very ) )
multi-sentence :snt1 ( establish-01 :arg0 ( order :poss ( ministry :topic ( and :op1 health :op2 society ) ) ) :arg1 ( and :op1 ( thing :arg2-of ( condition-01 :arg1 extradite-01 ) ) :op2 ( condition-01 :arg1 extradite-01 ) ) :time ( time :arg1-of same-01 ) ) :snt2 ( 45n :mode interrogative )
and :op1 ( age-01 :arg1 ( person :arg0-of ( have-org-role-91 :arg1 ( family :arg1-of ( have-org-role-91 :arg0 person :arg2 member ) ) :arg2 member ) ) :arg2 ( temporal-quantity temporal-quantity_num_0 :unit year ) ) :op2 ( say-01 :arg0 ( family :arg1-of ( have-org-role-91 :arg0 person :arg2 member ) ) :arg1 ( kill-01 :arg1 she :time ( plan-01 :arg0 he :arg1 ( and :op1 ( leave-15 :arg0 he :arg1 ( country :mod military ) ) :op2 ( return-01 :arg1 he :arg4 england ) ) ) :mod just ) )
admit-01 :arg0 ( person :arg0-of ( reside-01 :arg1 ( region :mod zaporizhzhya ) ) :arg0-of ( reside-01 :arg1 ( suspect-01 :arg1 ( organize-01 :arg1 ( attack-01 :arg0 terrorist :location crimea ) ) ) ) ) :arg1 ( guilt :arg0 person ) :time ( early :degree more :time ( early :degree more ) )
argue-01 :arg0 ( authority :mod country_name_0 ) :arg1 ( argue-01 :arg0 authority :arg1 ( recommend-01 :arg1 ( possible-01 :arg1 ( capable-01 :arg1 state :arg2 ( demolition :arg0 state :arg1 ( store :quant num_0 :mod home-made :arg2-of ( include-91 :arg1 ( and :op1 ( person :location ( inside :op1 ( and :op1 ( person :arg0-of ( sell-01 :arg1 good ) ) :op2 ( person :arg0-of ( have-rel-role-91 :arg1 person :arg2 child ) ) :op3 ( person :arg0-of ( have-rel-role-91 :arg1 person :arg2 child ) ) :op4 ( person :arg0-of ( sell-01 :arg1 ( tea :mod energy ) ) ) :op5 ( person :arg0-of ( sell-01 :arg1 ( tea :arg1-of ( cost-01 :arg2 ( monetary-quantity monetary-quantity_num_1 :unit cent ) ) ) :arg3 ( monetary-quantity monetary-quantity_num_1 :unit cent ) ) ) ) ) ) ) ) ) ) ) ) ) ) :time ( week :mod this ) :location court
seize-01 :arg1 ( product :arg1-of ban-01 :quant ( about :op1 ( mass-quantity mass-quantity_num_0 :unit ton ) ) ) :arg1-of ( include-91 :arg2 ( product :arg1-of ban-01 :quant ( about :op1 ( mass-quantity mass-quantity_num_1 :unit ton ) ) ) )
find-02 :arg0 ( panel :mod thing_name_0 ) :arg1 ( and :op1 ( duty :mod import-01 :mod country_name_1 :topic ( and :op1 paper :op2 refrigerator :op3 ( oil :mod palm ) ) ) :op2 ( contradictions :arg1 ( rule :poss organization ) ) )
say-01 :arg0 ( we :arg0-of ( let-01 :arg1 ( apologize-01 :arg0 we :arg1 ( and :op1 ( government-organization :arg0-of ( govern-01 :arg1 country_name_0 ) ) :op2 ( government-organization :arg0-of ( govern-01 :arg1 country_name_1 ) ) :op3 ( government-organization :arg0-of ( govern-01 :arg1 country ) ) :op4 ( government-organization :arg0-of ( govern-01 :arg1 country ) ) :op5 ( government-organization :arg0-of ( govern-01 :arg1 country ) ) ) ) ) ) :arg1 ( decide-01 :arg0 ( authority :mod resolution ) :arg1 ( extend-01 :polarity - :arg0 authority :arg1 contract-02 :arg2 ( supply-01 :arg0 authority :arg1 gas :arg2 country ) ) )
evacuated :arg1 they :arg2 ( place :mod safe-01 ) :arg1-of quick-02
be-located-at-91 :arg1 ( area :mod ( south :mod such ) :arg1-of ( fill-01 :arg2 ( side :quant num_0 :part-of mountain ) ) ) :arg2 ( area :mod sleep-01 :arg1-of ( fill-01 :arg2 ( side :quant num_0 :part-of mountain ) ) ) :arg1-of ( fill-01 :arg2 water )
contrast-01 :arg1 ( ridiculous-02 :arg1 ( wardrobe :arg0 trust-01 ) :mod of-course ) :arg2 ( possible-01 :arg1 ( put-02 :arg1 thing ) )
support-01 :arg0 ( committee :arg0-of ( have-org-role-91 :arg1 ( city-district_name_1 :part-of world ) :arg2 executive ) ) :arg1 ( thing :arg1-of decide-01 ) :arg1-of ( activity-06 :arg0 ( committee :mod executive :part-of world ) ) :arg1-of ( activity-06 :arg0 ( committee :mod executive :part-of world ) )
multi-sentence :snt1 ( show-01 :arg0 allah :arg1 ( way :direction out :part-of ( situation :mod this ) ) ) :snt2 ( conclude-01 :arg0 he )
suspect-01 :arg1 ( involve-01 :arg1 shukÃ¼r ) :arg2 ( involve-01 :arg1 shukÃ¼r )
spend-01 :arg0 he :arg1 ( career :poss he :arg1-of ( include-91 :arg2 ( career :poss he ) :arg3 most ) )
appear-02 :arg1 ( ready-02 :arg1 ( person :mod country_name_0 ) :arg2 ( and :op1 ( responsible-03 :arg0 person :arg1 ( responsible-03 :arg0 person :arg1 society ) ) :op2 ( attend-02 :arg0 person :arg1 ( aspect :mod environment :poss ( business :poss person ) ) :degree more ) ) )
and :op1 ( significant-02 :arg1 ( economy :poss ( enterprise :mod industry :mod country ) ) ) :op2 ( ensured :arg0 economy :arg1 ( life :poss ( city :mod whole ) ) :mod actual ) :time ( time :mod country_name_0 )
say-01 :arg0 ( person :arg0-of ( have-rel-role-91 :arg1 he :arg2 wife ) ) :arg1 ( be-located-at-91 :arg1 ( person :arg0-of ( have-rel-role-91 :arg1 man :arg2 wife ) ) :arg2 ( ordinal-entity ordinal-entity_num_0 ) :time ( hit-02 :arg0 blue :arg1 ( blue :quant num_1 ) ) )
obligate-01 :arg1 he :arg2 ( answer-01 :arg0 he :arg1 ( steal-01 :arg1 ( rule :quant all :mod law ) :arg1-of ( initiate-01 :arg0 ( case-03 :arg1-of criminal-03 ) :prep-against ( person :arg0-of ( have-org-role-91 :arg2 head-of-state ) ) ) ) ) :time now
activity-06 :polarity - :arg0 ( person :arg0-of observe-01 ) :location ( border-01 :arg1 person :arg2 ( border-01 :arg1 person :arg2 crimea ) )
criticize-01 :arg1 ( lens :mod snapchat ) :time past :time ( accuse-01 :arg1 they :arg2 ( apply-02 :arg1 ( apply-01 :arg1 ( or :op1 ( ad :arg1 ( skin :arg1-of dark-02 :poss face ) ) :op2 ( encourage-01 :arg1 ( person :arg0-of sing-01 ) :arg2 ( ideal :mod beauty ) ) ) ) ) )
and :op1 ( claim-01 :arg0 ( team :mod both ) :arg1 ( and :op1 ( claim-01 :arg0 ( team :mod both ) :arg1 quarter-finals ) :op2 ( determine-01 :arg0 ( thing :arg2-of ( result-01 :arg1 game ) ) :arg1 ( place :ord ( ordinal-entity ordinal-entity_num_0 ) ) :location ( group :consist-of ( team :consist-of ( person :quant num_1 :arg0-of ( have-org-role-91 :arg1 team ) ) ) ) ) ) ) :op2 ( person :ord ( ordinal-entity ordinal-entity_num_2 ) :ord ( ordinal-entity ordinal-entity_num_2 ) )
recommend-01 :arg1 ( go-01 :arg1 ( person :arg2-of ( staff-01 :arg1 medal ) ) :arg4 ( and :op1 ( high-02 :degree more ) :op2 ( high-02 :degree more ) :op3 ( pursue-01 :arg1 gold ) :op4 ( finish-07 :arg0 person :arg2 finish-07 :frequency sometimes ) ) ) :arg2 medal
engage-01 :arg1 ( shop :name ( name :op1 the :op2 sheri :op3 sheri ) :arg0-of ( take-01 :arg1 ( place :mod verb ) ) ) :arg2 ( sell-01 :arg1 soap :location ( form :mod cakes ) )
table :mod swedish :domain ( table :mod country_name_0 :mod especially ) :time ( before :op1 ( depressia :arg1 table ) )
cause-01 :arg0 ( step :mod this ) :arg1 ( anger-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg2 director ) ) :arg1 ( person :arg0-of ( have-org-role-91 :arg2 director ) ) :mod ( great :degree ( more :mod even ) ) )
add-01 :arg0 code :arg1 ( adds :domain code ) :time now
possible-01 :arg1 ( see-01 :arg1 ( person :arg0-of protest-01 :quant some ) :arg2 ( write-01 :arg0 person :arg1 ( wall :poss ( person_name_0 :arg0-of ( have-org-role-91 :arg2 president ) ) :duration temporary ) ) )
say-01 :arg0 he :arg1 ( and :op1 ( recommend-01 :arg0 i :arg1 ( visit-01 :arg0 i :arg1 ( city :location ( and :op1 ( city :mod isfahan ) :op2 ( chirac :mod chirac ) :op3 ( yam :location ( condition :mod good ) ) ) ) ) ) :arg1-of personal-02 ) :op2 ( say-01 :arg0 he )
and :op1 ( receive-01 :arg0 industry :arg1 ( order-01 :arg0 industry :arg2 ( tens :quant ( multiple :op1 ( mass-quantity mass-quantity_num_0 :unit gram ) ) ) :arg1-of long-03 ) ) :op2 ( know-01 :arg1 ( money :mod big :arg1-of ( know-02 :arg2 amusement-park_name_0 ) ) )
say-01 :arg1 ( enjoy-01 :arg0 i :arg1 it :time now :mod just ) :arg2 person_name_0
debranches :arg0 it :arg1 ( jacobs :arg1 it )
and :op1 ( resume-01 :arg0 ( person :location north ) :arg1 ( talk-01 :arg0 person ) ) :op2 ( stop-01 :arg0 person :arg1 ( strike-01 :arg0 person ) )
begin-01 :arg0 ( index :mod urban ) :arg1 ( consult-01 :arg0 index :arg1 ( around :op1 ( process-01 :arg1 metal ) ) ) :time ( date-entity :ord ( ordinal-entity ordinal-entity_num_0 ) )
appear-01 :arg1 ( and :op1 ( find-01 :arg1 ( fact :mod new ) ) :op2 ( fact :mod new ) ) :arg1-of ( cause-01 :arg0 ( change-01 :arg0 and :arg1 ( notion :mod usual :poss military_name_2 ) ) )
have-concession-91 :arg1 ( promise-01 :arg2 ( promise-01 :arg0 ( person :arg0-of own-01 ) :arg1 ( budget-01 :arg0 ( person :arg0-of own-01 ) :arg1 ( level :quant num_0 :arg1-of ( include-91 :arg2 ( person :arg0-of own-01 ) ) ) :arg2 ( level :quant num_1 :location ( relative-position :op1 ( value-interval :op1 num_0 :op2 num_1 ) ) ) ) ) ) :arg2 ( and :op1 ( quality :poss machine :mod dynamic ) :op2 ( quality :poss machine ) )
change-01 :arg0 ( inspect-01 :arg1 tax-01 ) :arg1 ( order :consist-of ( tax-01 :arg2 property ) )
deploy-01 :arg1 63-year-old :arg2 ( represent-01 :arg0 ( and :op1 environment :op2 ( problem :topic transport-01 ) ) :arg1-of special-02 ) :time now
and :op1 ( graduated :arg0 he :arg1 ( section :name ( name :op1 mgimo :op2 -rrb- :op3 -rrb- ) :mod international :arg0-of ( -lrb- :arg1 ( section :name ( name :op1 mgimo ) :mod international ) ) ) ) :op2 ( serve-01 :arg0 he :location ( embassy :mod tokyo ) ) :location ( tallinn :quant num_0 :mod ( capital :mod estonian ) )
volunteer-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg2 president ) ) :arg1 ( volunteer-01 :arg1 ( item :arg1-of private-03 ) ) :time ( and :op1 ( meet-03 :arg0 person :arg1 president ) :op2 ( release-01 :arg1 ( television :mod state ) ) )
contrast-01 :arg2 ( transfer-01 :arg1 ( task :mod that ) :arg2 person_name_0 )
and :op1 ( receive-01 :arg0 ( woman :ord ( ordinal-entity ordinal-entity_num_0 ) :mod country_name_0 :mod country_name_1 ) :arg1 ( award-01 :arg1 award_name_1 :arg1-of general-02 ) ) :op2 ( announce-01 :arg0 woman :arg1 ( and :op1 ( generously :arg0 woman ) :op2 ( good :degree most :arg1-of ( include-91 :arg2 ( time :quant all ) ) ) ) )
know-01 :arg0 you :arg1 ( good :degree more :domain it :beneficiary you )
phone-number-entity phone-number-entity_num_0
continue-01 :arg0 ( person :arg0-of rescuers ) :arg1 ( save-02 :arg0 person :arg1 person :arg2 ( raid-01 :arg1 water :location ( and :op1 ( and :op1 ( accidents :mod amite ) :op2 ( accidents :mod wilkinson ) ) ) :op2 ( accidents :location ( southwest :part-of strait ) ) ) )
say-01 :arg0 person_name_0 :arg1 ( report-01 :arg0 ( person :arg0-of observe-01 :arg1-of ( near-02 :arg2 livingston ) ) :arg1 ( rain-01 :quant num_0 :arg1-of rain-01 ) :time ( morning :mod friday ) )
offer-01 :arg0 ( explode-01 :mod this ) :arg1 ( benefit-01 :arg1 ( and :op1 health :op2 school :op3 ( succeed-01 :arg0 and ) ) :duration long-03 )
and :op1 ( delay-01 :arg1 ( strike-01 :mod routine :quant ( almost :op1 num_0 ) ) :time ( end-01 :arg1 ( date-entity decade_date-entity_0 ) ) ) :op2 ( force-01 :arg1 ( and :op1 nurse :op2 consultants ) :arg2 ( look-01 :arg0 and ) :time ( after :op1 ( doctor :mod ( strike-01 :arg0 doctor :arg1 doctor ) ) ) )
cause-01 :arg0 ( culture :mod politics :arg1-of ( present-01 :time today ) ) :arg1 ( person :arg0-of vote-01 :arg1-of ( spread-02 :arg1-of wide-02 ) ) :location ( community :mod religious-group_name_0 ) :time today
say-01 :arg0 ( person_name_0 :arg0-of ( have-rel-role-91 :arg1 ( child :quant num_0 :arg0-of ( have-rel-role-91 :arg1 child :arg2 mother ) ) :arg2 mother ) ) :arg1 ( have-03 :arg0 woman :arg1 ( re-clothes :arg1 woman ) :time ( after :op1 ( try-01 :arg0 woman :arg1 ( and :op1 ( weapon :arg1-of internal-02 :poss woman ) :op2 ( go-out-17 :arg0 woman ) ) :manner ( anything :polarity - ) ) ) )
talk-01 :arg0 we :arg1 ( and :op1 ( mizrachi :arg0 ( person :arg0-of ( have-org-role-91 :arg1 ( criminal-organization_name_0 :mod new :name ( name :op1 york-based ) :mod new ) :arg2 chief ) ) :arg2 ( learn :mod chief ) ) :op2 ( learn-01 :arg0 person :arg1 ( thing :manner-of ( picked :arg1 ( robberies :arg1-of arm-01 ) ) ) ) )
bedroom :arg1-of dirty-02 :location ( house :poss house :quant ( multiple :op1 num_0 ) )
and :op1 ( devastate :arg0 ( fire-02 :arg1 power ) :arg1 ( part :mod certain :part-of ( mainland :part-of strait ) ) ) :op2 ( cause-01 :arg0 fire :arg1 ( die-01 :quant num_0 :location ( island :mod madeira ) ) ) :time ( summer :mod this )
say-01 :arg0 person_name_0 :arg1 ( hope-01 :arg0 we :arg1 ( and :op1 ( risky :domain ( situation :mod this ) :purpose ( go-02 :arg0 situation :arg4 ( zone :mod war ) :prep-as ( and :op1 satellite :op2 ( vastness :beneficiary other ) ) ) ) :op2 ( pretend-01 :arg0 person :arg1 ( make-01 :arg0 person :arg1 ( choose-01 :mod this ) ) ) ) )
have-concession-91 :arg1 ( have-condition-91 :arg1 ( try-01 :arg0 i :arg1 ( stop-01 :arg0 i :arg1 camera :beneficiary ( part :mod next ) ) ) :arg2 ( try-01 :arg0 i :arg1 ( find-01 :arg0 i :arg1 ( thing :arg1-of aspire-01 :topic ( part :mod next ) ) ) ) ) :arg2 ( try-01 :arg0 i :arg1 ( find-01 :arg0 i :arg1 ( information :topic ( and :op1 ( age :poss they ) :op2 ( situation :mod emotional ) ) :path ( standing :arg1-of ( near-02 :arg2 ( store :mod this :quant some ) ) ) ) ) )
think-01 :arg0 i :arg1 ( story :poss i :domain that )
protest-01 :arg0 ( person_name_0 :arg1-of ( ally-01 :arg2 ( we :arg1-of ( ally-01 :arg2 we :arg1-of long-03 ) ) ) ) :mod nesil
ally-01 :arg1 ( and :op1 ( nation :arg1-of ( stable-03 :degree most ) :location continent_name_0 ) :op2 ( economy :poss country ) ) :arg2 west :time ( before :op1 now :duration ( temporal-quantity temporal-quantity_num_0 :unit decade ) )
elect-01 :arg1 ( and :op1 ( person :arg0-of ( have-org-role-91 :arg1 country_name_0 :arg2 ( minister :mod prime :mod new ) ) ) :op2 ( person :arg0-of ( have-org-role-91 :arg2 ( minister :mod prime :mod new ) ) ) :op3 ( person :arg0-of ( have-org-role-91 :arg2 ( minister :mod prime :mod new ) ) ) :op4 ( person :arg0-of ( have-org-role-91 :arg2 ( minister :mod prime :mod new ) ) ) :op5 ( person :arg0-of ( have-org-role-91 :arg2 ( minister :mod prime :mod new ) ) ) )
order-01 :arg0 she :arg1 ( and :op1 ( -lrb- :quant num_0 :mod -lrb- ) :op2 ( cheese :name ( name :op1 cream :op2 cheese :op3 sandwiches ) ) ) :arg2 ( and :op1 ( -rrb- :quant num_0 :mod -rrb- ) :op2 ( cheese :name ( name :op1 cream ) ) :op3 ( sandwich :name ( name :op1 olive ) ) :op4 ( sandwiches :name ( name :op1 olive :op2 olive ) ) )
try-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg3 judge-01 ) ) :arg1 ( catch-up-04 :arg1 person :arg2 gilead ) :arg1-of ( cause-01 :arg0 ( try-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg3 judge-01 ) ) :arg1 ( gilead :arg0 person :arg1 ( generation :mod c :mod ( new :degree most ) :arg0-of ( improve-01 :arg1 ( product-of :op1 ( more-than :op1 ( percentage-entity percentage-entity_num_0 ) ) :op2 ( person :arg0-of ( have-rel-role-91 :arg2 patient ) ) ) :arg1-of possible-01 ) ) ) ) )
express-01 :arg0 ( speech :location location_name_0 ) :arg1 problem
allow-01 :arg0 ( person :mod country_name_0 ) :arg1 ( search-01 :arg0 person :arg1 ( thing :arg1-of ( call-01 :arg0 person ) ) ) :arg1-of instead-of-91
rise-01 :arg1 ( sell-01 :arg0-of house-01 ) :arg2 ( rate-entity-91 :arg1 ( monetary-quantity monetary-quantity_num_0 :unit pound ) :arg2 ( volume-quantity volume-quantity_num_1 :unit gallon ) ) :arg4 ( rate-entity-91 :arg1 ( monetary-quantity monetary-quantity_num_2 :unit dollar ) :arg2 ( volume-quantity volume-quantity_num_1 :unit gallon ) )
multi-sentence :snt1 ( recommend-01 :arg1 ( increase-01 :arg1 ( thing :arg2-of price-01 ) :arg3 ( rate-entity-91 :arg1 num_0 :arg2 ( temporal-quantity temporal-quantity_num_0 :unit year ) ) ) :prep-in fact ) :snt2 ( say-01 :arg0 ( person :arg0-of develop-02 ) :arg1 ( do-02 :mode interrogative :arg0 you :arg1 ( opportunity :mod darbe ) ) )
and :op1 ( complain-01 :arg0 we :arg1 ( and :op1 ( complain-01 :arg0 we :mod such ) :op2 ( information :topic ( and :op1 bank :op2 ( bank :name ( name :op1 ' ) ) :op3 ( bank :name ( name :op1 company-based ) ) ) ) ) :mod such ) :op2 ( followers :arg0 we :arg1 ( line :mod complain-01 ) )
yine
deal-01 :polarity - :arg0 police :arg2 ( job :mod another ) :duration ( temporal-quantity temporal-quantity_num_0 :unit day )
begin-01 :arg1 ( face-01 :arg0 ( person :arg0-of ( struggle-02 :arg1 ( finish-01 :arg0 person :arg1 ( terrorism :arg1-of ( finish-01 :arg0 person ) ) :duration ( more-than :op1 ( temporal-quantity temporal-quantity_num_0 :unit year ) ) ) ) ) :arg1 ( day :time-of ( fail-01 :arg1 person :arg2 ( destroy-01 :arg0 person :arg1 ( person :arg0-of ( lead-02 :arg1 ( person :arg0-of lead-02 :arg1-of organize-01 ) ) ) :manner ( fight-01 :mod this ) ) ) ) )
point :location-of ( strand :mod big :location bridge )
transfer-01 :arg1 incident :arg1-of ( instead-of-91 :arg2 incident )
possible-01 :arg1 ( take-10 :arg0 ( return-01 :arg1 ( person :arg0-of ( kill-01 :arg1 ( person :arg0-of mine-01 ) ) ) ) :arg1 ( temporal-quantity temporal-quantity_num_0 :unit month ) )
and :op1 ( know-02 :arg1 ( this :mod all ) :arg2 ( opine-01 :arg0 public ) ) :op2 ( say-01 :arg0 ( person_name_0 :arg0-of ( have-org-role-91 :arg2 minister ) ) :arg1 ( and :op1 ( person :arg0-of ( have-org-role-91 :arg2 minister ) ) :op2 ( person :arg0-of ( have-org-role-91 :arg2 minister ) ) :arg0-of ( have-org-role-91 :arg2 minister ) :arg0-of ( have-org-role-91 :arg2 minister ) :arg0-of ( have-org-role-91 :arg2 minister ) :arg0-of ( have-org-role-91 :arg2 minister ) ) :location ( and :op1 media :op2 ( world :mod business ) :mod also ) )
give-01 :arg0 ( turk :location here ) :arg1 ( person :arg0-of ( have-rel-role-91 :arg1 they :arg2 child ) ) :arg2 ( person :arg0-of ( have-rel-role-91 :arg1 they :arg2 child ) ) :time ( before :op1 now :quant ( temporal-quantity temporal-quantity_num_0 :unit year ) ) :degree total
return-01 :arg1 ( person :mod country_name_0 ) :arg4 ( canakkale :arg0 person ) :time now :arg1-of ( cause-01 :arg0 ( and :op1 ( thrace :arg1 city :arg2 ( and :op1 human :op2 society :mod other ) ) ) )
possible-01 :arg1 ( try-01 :arg0 ( team :mod football ) ) :time meanwhile
extended :arg0 ( person :arg0-of ( have-org-role-91 :arg2 ( president :mod vice ) ) ) :arg1 ( friendship :poss person ) :arg2 fenerbahce
turn-down-05 :arg0 it :arg1 ( cover-01 :arg1 ( animal :arg0-of ( filmed :arg1 2-year-old ) ) )
transfer-01 :arg1 ( and :op1 police :op2 health :op3 firefighter ) :arg1-of ( instead-of-91 :arg2 ( thing :arg2-of tip-05 ) )
assessed :domain all
point :polarity - :arg1-of ( cause-01 :arg0 ( as-long-as :op1 ( produce-01 :arg0 ( union-02 :arg1 opine-01 ) :arg1 ( thing :arg2-of result-01 ) :mod actual ) ) )
discover-01 :arg0 ( and :op1 child :op2 child ) :arg1 ( baggage :arg1 car )
bring-01 :arg0 he :arg1 ( injure-01 :arg1 car ) :arg2 ( narince :arg1 he )
and :op1 ( announce-01 :arg0 ( person :arg0-of ( speak-01 :time ( event :mod press :location country_name_0 ) :time ( day :mod last ) :location ( city_name_1 :arg0-of ( have-org-role-91 :arg1 country :arg2 capital ) ) ) ) :arg1 ( plan-01 :arg1 ( launch-01 :arg1 ( and :op1 ( ram :name ( name :op1 6gb ) ) :op2 ( memory :name ( name :op1 128gb ) ) ) ) ) :manner official ) :op2 ( note-01 :arg0 person :arg1 ( model :quant num_0 ) )
set-up-03 :arg1 ( captain :mod hakan :arg1-of ( close-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg1 tax-01 :arg3 inspect-01 ) ) :arg3 ( person :arg0-of ( have-org-role-91 :arg1 ( ministry :topic ( control-01 :arg1 tax ) ) :arg2 ( board :topic ( control-01 :arg1 tax ) ) ) :arg1-of ( close-01 :arg0 ( investigate-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg1 ( ministry :topic ( control-01 :arg1 tax ) ) :arg2 ( board :mod finance ) ) ) ) ) ) ) ) :location ( province_name_1 :mod city ) :mod also
and :op2 ( possible-01 :arg1 ( return-01 :arg1 ( person :arg0-of ( have-rel-role-91 :arg1 we :arg2 patient ) ) :arg4 ( life :arg1-of normal-02 :poss person ) ) :time ( day :mod next ) )
and :op1 ( criticize-01 :arg0 ( and :op1 ( model :mod original :poss ( city-district_name_1 :mod original ) ) :op2 ( model :name ( name :op1 stephanie ) :mod original :poss ( company_name_1 :mod original ) ) ) :arg1 ( and :op1 jenner :op2 hadid ) ) :op2 ( call-01 :arg0 and :arg1 and :arg2 time-screaming ) :op3 ( call-01 :arg0 and :arg1 time-screaming :arg2 time-screaming )
say-01 :arg0 person_name_0 :arg1 ( bad-07 :arg1 situation :degree ( more :quant much ) :condition ( recover-01 :polarity - :arg1 ( decide-01 :arg0 ( government-organization :arg0-of govern-01 :mod federal ) ) ) )
multi-sentence :snt1 ( bordini :arg0 ( person_name_0 :arg0-of ( have-org-role-91 :arg2 president ) ) :arg1 ( person :arg0-of ( have-org-role-91 :arg2 president ) ) :arg2 ( person :arg0-of ( have-org-role-91 :arg2 president ) ) ) :snt2 ( and :op1 ( try-02 :arg1 ( person :arg0-of ( have-org-role-91 :arg2 president ) ) ) :op2 ( try-02 :arg1 person :arg2 ( court :mod general-02 ) ) :op3 ( crash-01 :arg1 ( -rrb- :mod -lrb- ) ) )
suspect-01 :arg1 ( detain-01 :arg1 ( person :arg2-of suspect-01 ) ) :arg2 ( person :arg0-of teach-01 ) :location ( school :arg1-of close-01 :location ( school :arg1-of close-01 ) )
arrest-01 :arg1 ( person_name_0 :arg1-of ( arrest-01 :location ( erzurum :mod erzurum ) ) )
say-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg2 ( chakirapeker :mod '' ) ) ) :arg1 ( indifference :domain ( code :mod this ) :mod ( big :degree most ) :location boat )
include-01 :arg1 ( and :op1 ( person :prep-in ( case :mod both ) ) :op2 ( person :arg1-of ( convict-01 :arg2 ( normal-02 :arg1 person ) ) ) ) :arg2 ( person :arg0-of drive-01 ) :arg1-of ( cause-01 :arg0 ( normal-02 :arg1 ( expect-01 :polarity - :arg0 person :arg1 ( spread-02 :arg1 highway :location highway :time shave-01 ) ) ) )
cause-01 :arg1 ( discover-01 :arg1 ( temperature :quant ( few :mod only ) :arg1-of ( discover-01 :time today ) ) :compared-to world :time today )
award-01 :arg1 ( award-01 :arg1 ( award-01 :arg1 adams ) ) :arg2 ( coordinator :mod ( good :degree most ) ) :time ( season :mod ( season :ord ( ordinal-entity ordinal-entity_num_0 ) :part-of ( season :quant num_1 ) ) )
cut-02 :arg0 ( group :consist-of wood ) :arg1 ( percentage-entity percentage-entity_num_0 ) :time ( year :mod this ) :arg1-of ( cause-01 :arg0 ( pressure-01 :arg0 ( pressure-01 :mod negative :location market ) ) )
ask-02 :arg0 ( person :arg0-of ( represent-01 :arg1 ( doctor :arg0-of assist-01 ) ) ) :arg1 ( allow-01 :arg0 union :arg1 ( dispute-01 :arg2 business :arg1-of ( relate-01 :arg2 ( dispute-01 :arg2 contract-02 :mod new ) ) ) ) :arg2 ( person :arg0-of ( represent-01 :arg1 ( doctor :arg0-of assist-01 ) ) )
tell-01 :arg0 ( person_name_0 :arg0-of bbc ) :arg1 ( associate-01 :arg1 ( brand :name ( name :op1 rbs :op2 brand ) ) :arg2 ( goal :mod globe :poss bank ) ) :arg2 scotland
cause-01 :arg0 ( and :op1 ( find-01 :arg1 ( person :quant num_0 :arg1-of ( include-91 :arg2 ( person :quant num_1 :arg0-of gymnasts ) ) ) ) :op2 ( find-01 :arg1 ( person :quant num_1 :mod only :arg0-of ( have-org-role-91 :arg1 ( team :name ( name :op1 marta ) ) :time ( year :mod last ) ) ) ) ) :arg1 ( '' :arg1 ( person :quant num_0 :mod final :arg1-of ( include-91 :arg2 ( person :quant num_1 :arg0-of gymnasts ) ) ) )
and :op1 ( enhances :arg1 ( strength :poss body ) :arg2 ( and :op1 strength :op2 dissent-01 :op3 ( coordinate-01 :arg1 body ) ) ) :op2 ( thing :arg2-of ( characteristic-02 :arg1 body ) ) :op3 ( thing :arg2-of ( characteristic-02 :arg1 ( angle :mod mental ) ) )
contain-01 :arg0 report :arg1 ( thing :arg1-of state-01 :arg1-of follow-04 ) :arg1-of ( follow-01 :arg2 ( state-01 :arg0 ( and :op1 ( community :mod ( minority :mod ethnic ) :mod some ) :op2 ( community :mod especially ) :op3 ( person :mod young ) :op4 ( person :mod young ) :op5 ( person :mod young ) ) :arg1 ( thing :arg0-of ( evidence-01 :arg1 ( issue-01 :arg0 person :arg1 ( thing :arg0-of ( evidence-01 :arg1 ( issue-01 :arg0 person ) ) ) ) ) ) ) )
and :op1 ( traveler :arg0 country_name_0 :arg1 ( place :name ( name :op1 dirtiest ) :arg1-of ( include-91 :arg2 ( place :name ( name :op1 dirtiest ) ) ) :quant some ) ) :op2 ( test-01 :arg0 country :arg1 ( and :op1 ( system :name ( name :op1 immune ) ) :op2 ( system :name ( name :op1 gagged ) ) ) :mod serious )
approach :arg0 ( aircraft :mod military :mod almost ) :arg1 sun :location ( level :mod touch-01 ) :location ( image :mod dramatic ) :location ( image :mod dramatic )
contrast-01 :arg2 ( try-01 :arg0 they :arg1 ( find-01 :arg0 they :arg1 ( model :mod new :mod ( generation :mod new ) :arg1-of ( inspire-01 :arg0 ( nu :quant num_0 :mod nu ) ) ) ) :arg1-of ( instead-of-91 :arg2 ( try-01 :arg0 ( and :op1 ( person :arg1-of fame-01 ) :op2 ( person :mod naked ) ) ) ) )
say-01 :arg0 ( system :name ( name :op1 wez ) ) :arg1 ( offend-01 :arg0 ( system :mod ( pay-01 :arg3 tax ) ) :arg1 ( customer :mod senior :quant some ) :mod particular )
have-concession-91 :arg1 ( reflect-01 :polarity - :arg1 ( image :mod this ) :arg2 ( quality :poss win-01 ) :manner accurate ) :arg2 ( see-01 :arg0 we :arg1 ( athletes :quant num_0 :arg1-of wonderful-03 :location ( surface :location swan ) ) )
promote-02 :arg1 that :arg2 i
and :op1 ( be-located-at-91 :arg1 i :arg2 hospital ) :op2 ( have-concession-91 :arg1 ( walk-01 :arg0 i :destination ( and :op1 ( person :quant num_0 ) :op2 ( person :quant num_1 ) :op3 ( yards :quant num_2 ) :op4 ( yards :quant num_2 ) ) ) :arg2 ( say-01 :arg0 they :arg1 it ) )
start-01 :arg1 it :manner amr-unknown
and :op1 ( call-01 :arg0 i :arg1 process-02 :arg2 process-02 ) :op2 ( watch-01 :arg0 i :arg1 process-02 )
cause-01 :arg0 ( wish-01 :duration long-03 ) :arg1 ( be-located-at-91 :arg1 ( person :mod country_name_0 ) :arg2 we :time always )
protest-01 :arg0 youth :degree full
think-01 :arg0 he :arg1 ( genius :domain he :mod tactical :arg0-of ( see-01 :polarity - :arg1 ( possible-01 :arg1 ( see-01 :arg0 everyone ) ) ) )
continue-01 :arg0 country_name_0 :arg1 ( accuse-01 :arg0 country :arg1 ( media :mod news ) :arg2 ( and :op1 ( word :mod every ) :op2 ( act-02 :arg0 media ) ) ) :time ( prior :op1 ( hold-04 :arg1 impasse :location ( pennsylvania :location friday ) ) )
advantage :mod other :prep-to ( location :mod new )
say-01 :arg0 he :arg1 ( think-01 :arg0 he :arg1 ( possible-01 :arg1 ( close-06 :arg1 we :arg2 war_name_0 :time ( as-soon-as :op1 ( possible-01 :arg1 move-01 ) ) ) :arg1-of ( cause-01 :arg0 ( and :op1 ( sector :poss ( person :arg0-of ( lead-02 :arg1 ( country :quant num_0 ) ) ) ) :op2 ( sector :part-of ( country :quant num_0 ) ) ) :manner ( fast :degree very ) ) ) )
pay-01 :arg1 ( fee :mod transfer-01 :mod ( monetary-quantity monetary-quantity_num_0 :unit euro ) ) :arg3 ( person :arg0-of ( play-01 :arg1 ( club :name ( name :op1 porto ) ) ) ) :arg3 ( temporal-quantity temporal-quantity_num_1 :unit year )
and :op1 feÃ¶ :op2 gulen :op3 gulen
assume-02 :arg0 we :arg1 ( get-05 :arg1 we :arg2 ( out-06 :arg1 we :arg2 there :degree total ) )
have-org-role-91 :arg0 ( person_name_0 :arg0-of ( have-org-role-91 :arg1 ( office :mod branch ) :arg2 ( office :mod branch ) ) ) :arg1 ( person :arg2-of suspect-01 :quant ( about :op1 num_0 ) :arg2-of suspect-01 :arg1-of ( detain-01 :arg2 custody ) ) :arg2 ( office :mod branch :part-of ( fight-01 :arg1 ( crime-02 :mod finance ) ) )
determine-01 :arg1 ( person :arg0-of ( have-org-role-91 :arg1 ( department :mod ( intelligence :mod security ) ) :arg2 president ) )
arrest-01 :arg1 ( and :op1 ( person :quant num_0 ) :op2 ( person :quant num_1 ) :op3 ( person :quant num_1 :arg0-of ( have-org-role-91 :arg1 police :arg2 police ) ) :op4 ( person :quant num_2 :arg0-of ( have-org-role-91 :arg1 police :arg2 police ) ) :op5 ( person :quant num_2 :arg0-of ( have-org-role-91 :arg1 ( police :mod adana ) ) ) )
struggle-02 :arg1 ( and :op1 ( end-01 :arg1 ( terror :name ( name :op1 pkk ) ) ) :op2 ( begin-01 :arg1 ( face-01 :arg1 ( day :time-of ( possible-01 :polarity - :arg1 ( destroy-01 :arg0 he :arg1 ( person :arg0-of ( lead-02 :arg1 organization ) ) :location ( struggle-01 :mod this ) ) ) ) ) ) ) :duration ( more-than :op1 ( temporal-quantity temporal-quantity_num_0 :unit year ) )
and :op1 ( seize-01 :arg1 ( pdy :name ( name :op1 / :op2 / ) ) :arg2 ( mass-quantity mass-quantity_num_0 :unit kilogram ) :time ( operate-01 :arg1 ( structuring :poss businessman ) ) ) :op2 ( confiscate-01 :arg1 pdy :time ( ship-01 :arg1 ship-01 :arg2 pennsylvania ) )
trap-01 :arg1 ( person :arg2-of suspect-01 :arg1-of ( include-91 :arg2 ( person :arg2-of suspect-01 ) ) :quant ( multiple :op1 num_0 ) ) :arg2 ( avenue :arg1 sovereignty ) :time ( after :op1 ( apprentice-01 :arg0 person ) )
initiate-01 :arg1 ( review-01 :arg1 event )
target-01 :arg0 ( person :arg0-of work-01 :time former ) :arg1 ( and :op1 ( woman :arg1-of ( addict-01 :arg2 life ) ) :op2 ( person :arg1-of ( addict-01 :arg2 drug ) ) ) :location ( murder-01 :arg1 person )
say-01 :arg0 ( and :op1 businessman :op2 dvd :op3 ( person :arg0-of ( have-org-role-91 :arg2 officer ) ) ) :arg1 ( work-01 :arg0 and :location ( level :arg1-of differ-02 ) ) :arg1-of ( conform-01 :arg2 ( and :op1 ( position :poss and ) :op2 ( support-01 :arg0 and ) ) )
evaluated :domain this :mod all
say-01 :arg0 he :arg1 ( release-01 :arg1 ( person :quant num_0 ) :mod also :arg1-of ( say-01 :arg0 he ) )
take-01 :mode imperative :arg0 you :arg1 road :arg3 ( and :op1 ( mountain :location ( mountain :mod wind ) ) :op2 ( sea :arg1-of black-04 ) :op3 ( experience-01 :arg1 ( thrills :mod new ) :location ( and :op1 ( route :name ( name :op1 adventures ) ) :op2 ( route :name ( name :op1 adrenaline-filled ) ) ) :location ( and :op1 ( route :name ( name :op1 adventures ) ) :op2 ( route :name ( name :op1 adrenaline-filled ) ) ) ) )
show-01 :arg0 ( attitude :poss kenny ) :arg1 ( possible-01 :polarity - :arg1 ( repetition :arg0 ( repetition :arg1 ( record :quant num_0 :mod gold-winning :poss country_name_0 ) ) :arg1 ( record :quant num_0 :mod gold-winning ) ) )
kill-01 :quant num_0 :location shootout
and :op1 ( patrol-01 :arg0 ( vehicle :mod police :arg1-of ( near-02 :arg2 ( mosque :arg1-of ( near-02 :arg2 ( mosque :mod barracks ) ) ) ) ) :arg1 ( street :name ( name :op1 eyyÃ¼bi :op2 district :op3 district :op4 district :op5 district :op6 district :op7 district ) :arg1-of ( attack-01 :arg1-of ( possible-01 :polarity - ) ) ) :time ( morning :mod ( date-entity morning ) ) )
make-01 :arg0 we :arg1 ( arrange-01 :arg1 ( recover-02 :arg0 you :arg1 ( thing :arg1-of ( arrange-01 :arg0 you ) ) :arg2 you :time ( past :op1 past ) ) :arg1-of extensive-03 ) :mod also :arg1-of ( cause-01 :arg0 ( and :op1 ( develop-02 :arg1 economy ) :op2 ( increase-01 :arg1 produce-01 ) :op3 ( provide-01 :arg1 produce-01 :mod ( kind :quant all ) ) :prep-for ( area :mod ( employ-01 :mod new ) ) ) )
look-01 :arg0 police :arg1 ( person :arg0-of ( witness-01 :arg1 ( collision :arg1 ( vehicle :quant few ) :location highway :time ( early :op1 ( date-entity decade_date-entity_0 ) ) ) ) ) :time ( event :arg1-of seem-01 :arg1-of seem-01 )
possible-01 :mode interrogative :arg1 ( avoid-01 :arg1 event_name_1 )
share-01 :arg0 ( person :arg0-of research-01 ) :arg1 ( thing :arg2-of ( result-01 :arg1 ( model :topic ( climate :mod new ) :mod new ) ) ) :arg2 ( article :mod research-01 :mod geophysical )
pressure-01 :arg1 ( company :mod energy ) :arg1-of ( cause-01 :arg0 ( decide-01 :arg0 ( person :mod country_name_0 ) :arg1 ( leave-15 :arg0 person :arg1 ( union-02 :arg1 continent_name_1 :arg2 june ) ) ) )
say-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg2 ( galicia :mod louis ) ) ) :arg1 ( way :manner-of ( connect-01 :arg1 we :arg2 family :time always ) :domain ( connect-01 :arg1 we :arg2 family :time always ) )
change-01 :arg1 ( idea :topic country_name_0 ) :time ( since :op1 festival_name_0 )
consensus :arg1-of clear-06 :topic ( determine-01 :arg1 ( zemy :mod common :location syria ) )
become-01 :arg1 ( slash :op1 ( brand :mod globe ) :op2 ( brand :name ( name :op1 rbs ) ) ) :arg2 ( brand :mod globe ) :prep-as bank
and :op1 ( visit-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg2 ( minister :mod economy ) ) ) :arg1 facility :time today ) :op2 ( include-91 :arg1 ( person :quant num_0 :arg1-of ( include-91 :arg2 ( person :ord ( ordinal-entity ordinal-entity_num_1 ) ) ) ) :arg2 ( walk-01 :arg0 person :destination bridge ) )
responsible-03 :arg0 ( we :quant all ) :arg1 ( scale :mod engineer-01 :mod engineer-01 :arg1-of ( use-01 :arg2 ( construct-01 :arg1 ( bridge :mod this ) ) :quant ( more-than :op1 num_0 ) ) ) :arg1-of personal-02
see-01 :arg1 he :arg2 ( disappoint-01 :arg0 ( home :mod family ) :arg1 ( home :mod family ) :extent ( less :compared-to ( fire-01 :arg1 ( drone :mod gold ) ) ) )
and :op1 ( shaken :domain person_name_0 :arg1-of ( cause-01 :arg0 ( wait-01 :arg1 person :arg2 ( trouble-01 :arg0 person :mod final ) ) ) ) :op2 ( envision-01 :arg0 ( and :op1 ( thing :arg1-of ( envision-01 :arg0 person ) ) :op2 ( thing :arg1-of ( envision-01 :arg0 person ) ) :time once ) :arg1 ( real :domain person ) ) :op3 ( set-02 :arg0 ( and :op1 ( person :mod red ) :op2 ( person :arg0-of blue ) ) :arg1 eye )
say-01 :arg0 police :arg1 ( appear-02 :arg1 ( rob-01 :polarity - :arg0 ( person :quant num_0 :mod this :arg0-of murder-01 ) ) :arg1-of ( cause-01 :arg0 ( receive-01 :polarity - :arg0 ( adult :mod aggressive ) :arg1 ( confiscation :arg1 ( or :op1 victim :op2 ( monetary-quantity monetary-quantity_num_1 :unit dollar ) ) ) ) ) )
create-01 :arg0 ( firm :name ( name :op1 united :op2 kingdom ) :arg1-of ( create-01 :arg0 ( firm :name ( name :op1 brilique :op2 kingdom :op3 commerce :op4 commerce :op5 commerce :op6 commerce :op7 commerce :op6 commerce :op7 commerce ) ) ) ) :arg1 ( possible-01 :arg1 ( reduce-01 :arg1 ( risk-01 :mod this ) ) )
write-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg1 cabinet :arg2 minister :time former ) :arg0-of ( have-org-role-91 :arg1 cabinet :arg2 minister :time former ) :arg0-of ( have-org-role-91 :arg1 cabinet :arg2 minister :time former ) :arg0-of ( have-org-role-91 :arg1 cabinet :arg2 minister :time former ) :arg0-of ( have-org-role-91 :arg1 cabinet :arg2 minister :time former ) :arg0-of ( have-org-role-91 :arg1 cabinet :arg2 minister :time former ) :arg0-of ( have-org-role-91 :arg1 cabinet :arg2 minister :time former ) :arg0-of ( have-org-role-91 :arg1 cabinet :arg2 minister :time former ) )
strengthen-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg2 personnel ) ) :arg1 ( education :poss ( person :arg0-of vote-01 ) ) :purpose ( sanction-02 :arg0 person :arg1 ( rule-03 :arg0 cabinet ) )
race :arg1-of ( include-91 :arg2 ( race :arg1-of ( free-04 :arg2 4x200m ) :mod byron ) ) :li num_0
probable :domain ( worry-01 :arg0 ( thing :arg1-of report-01 ) :arg1 i :mod probable :time ( incorporated :arg0 they :arg1 ( fee :quant series :mod nova :mod bossa ) ) )
reach-01 :arg0 sky :arg1 num_0 :manner sky
and :op1 ( clear-06 :arg1 ( justices :arg1 justices ) :degree quite ) :op2 ( race-02 :arg0 ( series :mod ( precedent :polarity - ) :mod ( precedent :polarity - ) ) :ord ( ordinal-entity ordinal-entity_num_0 ) )
and :op2 ( possible-01 :arg1 ( interpreted :arg1 it :arg2 ( level :arg1-of ( high-02 :degree more ) :consist-of ( person :mod young :arg0-of ( oppose-01 :arg1 ( person :mod other :arg0-of oppose-01 ) ) ) :arg1-of wide-02 ) ) )
resemble-01 :arg1 ( resemble-01 :arg1 ( thing :arg2-of ( title-01 :arg1 olympic ) ) :arg2 ( battalion :mod fierce ) ) :arg2 ( battalion :mod fierce )
complain-01 :arg0 ( person :quant many ) :arg1 ( use-01 :arg1 land :arg2 ( pressure-01 :arg1 ( coalition :arg0-of rule-03 ) ) ) :quant many
contrast-01 :arg2 ( clear-06 :arg1 ( stop-01 :polarity - :arg1 ( rise-01 :arg1 ( blood :poss ( government-organization :arg0-of ( govern-01 :arg1 country_name_0 ) ) ) ) ) )
and :op1 ( right-06 :arg1 ( book :mod ( late :degree most ) :poss ( person :arg0-of ( have-org-role-91 :arg1 country_name_0 :arg2 suey ) ) ) :time ( late :degree most ) ) :op2 ( tell-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg2 ziegelman ) ) :arg1 ( '' :quant num_0 :name ( name :op1 orchards :op2 orchards :op3 orchards ) ) :arg2 ( '' :quant num_0 :name ( name :op1 orchards :op2 orchards :op3 num_0 ) ) ) :op4 ( describe-01 :arg0 person :arg1 life :arg2 ( lives :location ( flows :location ( east :part-of east ) ) ) )
hesitant :arg0 everybody :arg1 coffee
date :mod case-03 :prep-to ( and :op1 ( property :poss ( person :arg0-of ( have-org-role-91 :arg2 head-of-state ) ) ) :op2 ( person :arg0-of ( have-org-role-91 :arg2 merck ) ) :op3 ( person :arg0-of ( have-org-role-91 :arg2 merck ) ) :op4 ( person :arg0-of ( have-org-role-91 :arg2 merck ) ) :op5 ( person :arg0-of ( have-org-role-91 :arg2 head-of-state ) ) :op6 ( person :arg0-of ( have-org-role-91 :arg2 head-of-state ) ) :op7 ( person :arg0-of ( have-org-role-91 :arg2 head-of-state ) ) )
and :op1 ( hiding :arg1 ( trumps :mod donald ) :arg2 ( behind :op1 ( spring :arg1-of fake-02 ) ) ) :op2 ( take-01 :arg1 trumps :direction back :direction back ) :arg1-of ( resemble-01 :polarity - :arg2 this )
share-01 :arg0 we :arg1 ( thing :arg1-of offer-01 :mod this ) :arg2 tff
catch-01 :arg0 ( police :arg1-of ( come-01 :time ( before :op1 incident ) ) ) :arg1 ( terrorist :mod this )
hear-01 :polarity - :arg0 we :arg1 ( shift-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg2 ( minister :mod prime ) ) ) :arg1 ( shift-01 :arg0 person ) ) :mod at-least
alcohol :domain i
and :op1 ( realize-01 :arg0 he :arg1 ( meet-03 :arg0 they :arg1 ( person :arg0-of ( have-org-role-91 :arg1 ( institution :mod new :arg1-of public-02 ) :arg2 executive ) ) :purpose ( future :poss ( generation :mod new ) ) ) ) :op2 ( say-01 :arg0 he :arg1 ( divorced :arg1 protocol :arg2 ( and :op1 child :op2 ( person :mod young ) ) ) )
contrast-01
say-01 :arg0 ( person :arg0-of reside-01 :mod mahalle ) :arg1 ( leave-11 :arg0 woman :arg1 house :time ( before :op1 now :quant ( about :op1 ( temporal-quantity temporal-quantity_num_0 :unit month ) ) ) :arg1-of ( cause-01 :arg0 ( and :op1 ( repression :arg1 ( person :arg0-of ( have-rel-role-91 :arg1 woman :arg2 wife ) ) ) :op2 ( coexist-01 :arg1 woman :arg2 thing ) ) ) )
send-01 :arg0 we :arg1 ( person :arg0-of ( represent-01 :arg1 ( person :arg0-of ( represent-01 :arg1 ( person :arg0-of represent-01 :mod senior ) ) ) :mod senior ) ) :arg2 ( person :arg0-of ( represent-01 :arg1 ( person :arg0-of represent-01 :mod senior ) ) ) :duration ( few :op1 ( temporal-quantity temporal-quantity_num_0 :unit year ) )
and :op1 ( be-located-at-91 :arg1 we :arg2 ( side :part-of ( country :mod this ) ) ) :op2 ( say-01 :arg0 he :arg1 ( issue-02 :arg0 ( issue-02 :arg0 ( issue-02 :arg0 ( club :mod all ) ) ) ) )
say-01 :arg0 person_name_0 :arg1 ( put-01 :polarity - :arg1 ( animal :arg1-of ( liberal-02 :time ( year :mod last ) ) ) :arg2 sell-01 :mod also )
and :op1 ( direct-01 :arg0 ( person :arg0-of ( lead-02 :arg1 ( person :arg0-of lead-02 ) ) ) :arg1 ( property :arg1-of organize-01 ) :arg2 ( property :location pensilia ) ) :op2 ( add-01 :arg0 person :arg1 ( clear-06 :arg1 ( organize-01 :arg1 ( contract-02 :arg1 ( contract-02 :quant ( about :op1 num_0 ) ) :location country_name_0 ) :manner close :arg1-of ( equip-01 :arg2 ( organize-01 :arg1 contract ) ) ) ) )
and :op1 ( thing :arg1-of ( symbolize-01 :arg2 ( parliament :mod turkish ) :time today ) :domain ( trip-03 :arg0 i :arg1 ( parliament :mod turkish ) :time today ) ) :op2 ( be-located-at-91 :arg1 we :arg2 ( hand :part-of ( democracy :mod turkish ) ) )
and :op1 ( close-01 :arg0 i :arg1 door :mod again ) :op2 ( take-01 :arg0 i :arg1 door :arg3 ( village :mod narinje ) )
live-01 :arg0 he :accompanier ( person_name_0 :arg1-of ( know-02 :arg2 ( life :poss he ) ) :arg1-of ( know-02 :arg2 ( life :poss he ) ) :location-of ( build-01 :arg0 he :arg1 ( plastic :quant num_0 :mod plastic ) ) ) :location facebook
consist-01 :arg1 ( system :mod this ) :arg2 ( and :op1 ( phase :quant num_0 :arg1-of major-02 ) :op2 ( phase :quant num_0 :mod small ) )
pay-01 :arg0 we :arg1 ( monetary-quantity :arg2-of cost-01 :mod heavy ) :arg2 nation :time ( night :mod that )
and :op1 ( break-01 :arg0 we :arg1 ( record :mod olympic ) ) :op2 ( beat-01 :arg0 we :arg1 ( champions :mod world ) )
and :op1 ( express-01 :arg0 i :arg1 ( concern-01 :arg0 ( plan-01 :arg1 ( establish-01 :arg1 ( and :op1 ( fund :mod this ) :op2 ( law :arg1-of draft-01 :topic ( commission :mod budget ) ) ) ) :op2 ( law :arg1-of draft-01 :topic ( commission :mod budget ) ) ) ) :time ( come-12 :arg1 ( plan-01 :arg1 ( establish-01 :arg1 ( and :op1 fund-01 :op2 law :mod this ) :topic ( commission :mod budget ) ) ) ) ) :op2 ( say-01 :arg0 he :arg1 ( and :op1 ( concern-01 :arg0 law ) :op2 ( discuss-01 :arg1 and :manner thorough ) ) )
aim-01 :arg0 fund-01 :arg1 ( finance-01 :arg0 fund-01 :arg1 ( project :arg1-of major-02 ) )
kill-01 :arg1 ( person :quant num_0 :arg0-of ( attack-01 :arg1 car ) ) :prep-in ( principle :mod kahta :mod adiyaman )
recommend-01 :arg1 ( and :op1 ( spirit :mod olympic ) :op2 ( expand-01 :arg1 heathrow ) )
case :quant num_0 :arg1-of resemble-01 :time ( before :op1 now :duration ( temporal-quantity temporal-quantity_num_0 :unit year ) ) :arg0-of ( show-01 :arg1 ( responsible-01 :polarity - :arg0 person :arg1 responsible-01 ) )
and :op1 ( possible-01 :arg1 ( find-out-03 :arg0 he ) ) :op2 ( and :op1 ( out-06 :arg1 he :arg2 water ) :op2 ( sake :polarity - :arg1 water ) )
resemble-01 :arg1 attempt-01 :arg2 ( get-05 :polarity - :arg1 attempt-01 :arg2 vaccine :time ever )
interview-01 :arg1 ( person :arg0-of mr ) :location ( round-05 :arg1 ( compete-02 :arg3 ( and :op1 customer :op2 staff ) :location inverness-shire ) )
presided :arg0 ( putin :name ( name :op1 mr. :op2 putin ) ) :arg1 ( period :ord ( ordinal-entity ordinal-entity_num_0 ) :time-of ( possible-01 :arg1 ( have-org-role-91 :arg0 ( person :arg0-of ( have-org-role-91 :arg2 president ) ) :arg1 ( person :arg0-of ( have-org-role-91 :arg2 president ) ) :arg2 ( person :arg0-of ( have-org-role-91 :arg2 president ) ) :time ( after :op1 ( term :ord ( ordinal-entity ordinal-entity_num_1 ) :poss mr. ) ) ) ) ) :mod also
cause-01 :arg0 ( play-01 :arg0 ( and :op1 ( person :mod young ) :op2 ( person :arg0-of ( have-rel-role-91 :arg1 person :arg2 child ) ) ) ) :arg1 ( sorry-01 :arg1 ( person :quant most ) :time ( before :op1 now :duration ( temporal-quantity temporal-quantity_num_0 :unit year ) ) ) :time ( play-01 :arg0 ( and :op1 ( person :mod young ) :op2 ( person :arg0-of ( have-rel-role-91 :arg1 person :arg2 child ) ) ) )
down :direction ( down :op1 slope )
go-02 :arg0 we :arg4 ( time :mod ( exciting :degree really ) )
result-01 :arg1 ( vote-01 :arg2 ( person :arg0-of ( have-org-role-91 :arg2 president ) ) ) :arg2 ( person :arg2-of ( suspect-01 :arg1 ( or :op1 ( person :quant num_0 :arg2-of suspect-01 :mod gaming ) :op2 ( person :arg2-of ( suspect-01 :arg1 ( identification :arg1-of fake-02 ) ) ) ) ) )
say-01 :arg0 he :arg1 ( decide-01 :arg0 ( institute :mod elect-01 ) :arg1 ( charge-05 :polarity - :arg1 ( allege-01 :arg1 ( and :op1 corruption :op2 ( activity-06 :mod ( law :polarity - ) ) :beneficiary ( and :op1 ( person :arg0-of ( represent-01 :arg1 he ) ) :op2 ( person :arg0-of ( represent-01 :arg1 he ) ) ) :arg1-of repeat-01 ) ) ) )
and :op1 ( apply-02 :arg1 ( technique :arg1-of resemble-01 ) :arg2 ( line :name ( name :op1 fire ) ) ) :op2 ( possible-01 :arg1 ( shoot :arg0 ( person :arg0-of betray-01 ) :arg1 weapon :time no-longer ) ) :time ( approaching :arg1 ( person :arg1-of arm-01 ) )
and :op1 ( include-91 :arg1 it :arg2 ( milk :arg1-of general-02 :location station ) ) :op2 ( test-01 :arg0 they :arg1 ( system :name ( name :op1 immune ) ) :arg2 ( task :mod this ) :mod definite )
think-01 :arg0 i :arg1 ( show-01 :arg0 film :arg1 ( understand-01 :arg0 we :arg1 ( thing :mod great ) ) ) :mod also
return-05 :arg0 ( aspect :quant num_0 :poss ( return-01 :mod this ) ) :arg1 ( aspect :mod '' :arg1-of ( sound-01 :arg2 ( and :op1 ( count-01 :arg1 ( data :arg1-of ( mean-01 :arg2 ( data :quant num_1 :mod middle-aged ) ) ) ) :op2 ( work-01 :arg0 ( man :quant num_1 :arg1-of ( include-91 :arg2 ( man :quant num_1 :mod middle-aged ) ) :arg0-of ( work-01 :location ( jonny :op1 ( value-interval :op1 num_2 :op2 num_2 ) ) ) ) ) ) ) )
reject-01 :arg0 ( court :mod country_name_0 ) :arg1 ( offer-01 :arg1 ( demolition :location ( camp :mod refugee :mod country_name_1 ) ) )
create-01 :arg0 this :arg1 ( pressure-01 :quant ( much :degree too ) )
announce-01 :arg0 ( person_name_0 :arg0-of ( have-org-role-91 :arg2 trumps ) ) :arg1 ( allege-01 :arg1 ( '' :arg1 person ) ) :arg1-of ( cause-01 :arg0 ( thing :arg1-of allege-01 :mod '' ) )
contrast-01 :arg1 ( receive-01 :arg0 ( person :name ( name :op1 mr. :op2 rosenthal ) ) :arg1 ( order :mod usual ) :time still ) :arg2 ( receive-01 :arg0 ( and :op1 ( figure :mod bacon ) :op2 egg :op3 cheese ) :arg1 ( change-01 :quant some ) :frequency sometimes :frequency sometimes :frequency sometimes )
and :op1 ( say-01 :arg0 ( store :name ( name :op1 juice ) :arg1-of local-02 ) :arg1 ( store :name ( name :op1 breakfast ) :arg1-of local-02 ) ) :op2 ( say-01 :arg0 and :arg1 ( want-01 :arg0 and :arg1 ( sell-01 :arg0 and :arg1 store ) ) )
multi-sentence :snt1 ( explain-01 :arg0 person_name_0 :arg1 ( thing :arg0-of ( cause-01 :arg1 ( desire-01 :arg0 and :arg1 ( write-01 :arg0 and :arg1 ( issue-02 :mod this ) ) ) ) ) ) :snt2 ( say-01 :arg1 ( time :time-of ( become-01 :arg1 food :arg2 ( center :beneficiary ( person :mod country_name_1 ) ) ) ) )
say-01 :arg0 ( couple :arg0-of ( write-01 :arg1 book ) ) :arg1 ( throw-01 :polarity - :arg1 concept :arg2 out :time ever ) :arg1-of ( say-01 :arg0 ( write-01 :arg0 couple :arg1 book ) )
and :op1 ( have-03 :arg0 ( family :arg1-of ( have-org-role-91 :arg0 dropshipper :arg2 member ) ) :arg1 ( thing :arg1-of ( pay-01 :arg3 tax ) :arg1-of average-03 ) :arg3 ( about :op1 ( percentage-entity percentage-entity_num_0 ) ) ) :op2 ( about :op1 ( percentage-entity percentage-entity_num_0 :quant-of ( rate :mod tax-01 :arg1-of combine-01 ) ) ) :time current :location ( york :mod new )
contrast-01 :arg2 ( and :op1 ( arrest-01 :arg1 ( person :quant num_0 ) ) :op2 ( arrest-01 :arg1 ( person :quant num_0 ) :arg2-of ( include-01 :arg1 ( and :op1 ( chamber :arg1-of ( include-91 :arg2 ( chamber :part-of ( and :op1 ( person :arg0-of ( have-org-role-91 :arg2 ( president :mod commerce ) ) ) :op2 ( person :quant num_1 ) ) ) ) ) ) ) ) :op2 ( release-01 :arg1 ( person :quant num_1 ) ) :op3 ( release-01 :arg1 ( condition :topic ( control-01 :arg1 criminal-03 ) ) ) ) :location ( hand :part-of other )
monetary-quantity monetary-quantity_num_0 :unit ( dollar :mod country_name_0 )
close-01 :arg1 ( vessel :mod this ) :arg4 ( traffic :mod sea ) :duration ( nearly :op1 ( temporal-quantity temporal-quantity_num_0 :unit year ) ) :arg1-of ( cause-01 :arg0 ( construct-01 :arg1 ( threshold :arg1-of ( conduct-01 :arg0 ( istanbul :name ( name :op1 istanbul :op2 metropolitan :op3 metropolitan :op4 ibb :op5 -rrb- :op6 -rrb- :op7 -rrb- ) ) ) ) ) )
curious-01 :arg0 this :arg1 amr-unknown
distribute-01 :arg1 ( thing :arg1-of donate-01 ) :arg2 victim
say-01 :arg0 he :arg1 ( important :domain ( and :op1 ( country :poss we ) :op2 ( health :poss he ) ) :beneficiary he ) :arg2 he
cause-01 :arg0 ( and :op1 ( lose-02 :arg1 property ) :op2 ( lose-02 :arg1 property ) :arg0-of ( cause-01 :polarity - :arg1 tsunami ) ) :arg1 ( afterwards :quant short )
arrive-01 :arg1 ( person :arg0-of ( have-rel-role-91 :arg1 ( person :arg0-of ( have-rel-role-91 :arg1 ( person :arg0-of ( have-rel-role-91 :arg1 ( person :arg0-of ( have-rel-role-91 :arg1 ( person :arg0-of ( have-rel-role-91 :arg1 ( person :arg0-of ( have-rel-role-91 :arg1 ( person :arg0-of ( have-rel-role-91 :arg1 ( person :arg0-of ( have-rel-role-91 :arg1 ( person :arg0-of ( have-rel-role-91 :arg1 ( person :arg0-of ( have-rel-role-91 :arg1 ( person :arg0-of ( have-rel-role-91 :arg1 ( person :arg0-of ( have-rel-role-91 :arg1 ( person :arg0-of ( have-rel-role-91 :arg1 ( person :arg0-of ( have-rel-role-91 :arg1 ( person :arg0-of ( have-rel-role-91 :arg1 ( person :arg0-of ( have-rel-role-91 :arg1 person :arg2 boyfriend ) ) :arg2 boyfriend ) ) :arg2 boyfriend ) ) :arg2 kemal ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) :time ( date-entity dayperiod_date-entity_0 ) )
say-01 :arg0 ( information :source ( url-entity :value plotters ) ) :arg1 ( begin-01 :arg1 ( shooting :arg1-of direct-02 ) :time ( during :op1 ( begin-01 :arg1 ( read-01 :arg0 they :arg1 sala ) :quant short ) ) :arg1-of direct-02 )
research-01 :arg1 ( die-01 :arg1 ( person :mod young ) )
think-01 :arg0 we :arg1 ( act-02 :arg1-of internal-02 :domain this )
signal-07 :arg1 ( monitor-01 :arg1 society :mod of-course ) :mod also
and :op1 ( live-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg1 victim :arg2 member ) ) :mod also ) :op2 ( live-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg1 victim :arg2 member ) ) )
bronze :arg1 bronze :location ( seismic-quantity seismic-quantity_num_0 :arg1-of ( come-03 :arg2 ( country_name_0 :arg0-of ( defeat-01 :arg1 ( country :quant num_0 ) ) ) :mod simple ) )
detain-01 :arg1 ( person :quant num_0 :arg2-of suspect-01 :arg1-of ( detain-01 :location ( office :poss ( person :arg0-of prosecute-01 ) ) ) ) :arg2 ( arrest-01 :arg1 person ) :time ( after :op1 ( transfer-01 :arg1 ( thing :arg1-of ( state-01 :arg0 person ) ) :arg2 ( division :mod criminal-03 :mod sultans ) ) )
address-01 :arg0 ( and :op1 ( person :quant num_0 :arg0-of ( have-org-role-91 :arg3 judge-01 ) ) :op2 ( person :arg0-of prosecute-01 ) ) :arg2 ( proceeding-02 :mod search-01 ) :arg1-of possible-01
and :op1 ( arrest-01 :arg1 ( person :arg0-of ( have-org-role-91 :arg2 colonel ) :arg0-of ( have-org-role-91 :arg2 colonel ) :arg0-of ( have-org-role-91 :arg2 colonel ) ) ) :op2 ( detain-01 :arg1 person :location ankara ) :op3 ( detain-01 :arg1 person :location ( ankara :location-of ( decide-01 :arg0 person :arg1 ( catch-up-04 :arg1 person :arg2 ( operation :prep-against ( and :op1 ( person :arg0-of ( have-org-role-91 :arg2 head-of-state ) ) :op2 ( person :arg0-of ( have-org-role-91 :arg2 head-of-state ) ) :op3 ( person :arg0-of ( have-org-role-91 :arg2 head-of-state ) ) :op4 ( person :arg0-of ( have-org-role-91 :arg2 head-of-state ) ) :op5 ( person :arg0-of ( have-org-role-91 :arg2 head-of-state ) ) ) ) ) ) ) )
' :arg0 i :degree total :arg1-of ( mean-01 :arg2 ( as-long-as :op1 ( opine-01 :arg0 i :arg1 matter :mod actual ) ) )
and :op1 ( condemn-01 :arg0 ( republic :mod religious-group_name_0 ) :arg1 ( attempt-01 :arg0 coup ) :time ( hour :ord ( ordinal-entity ordinal-entity_num_0 ) :part-of ( attempt-01 :arg0 coup ) ) ) :op2 ( case :arg1-of ( same-01 :arg2 ( side :part-of ( and :op1 ( person :mod country_name_1 ) :op2 ( government-organization :arg0-of govern-01 ) ) :time always ) ) )
and :op1 ( go-02 :arg0 i :arg4 ( nephew :poss i ) :time then ) :op2 ( look-01 :arg0 i :arg1 car :location ( car :poss i ) )
say-01 :arg0 guy :arg1 ( put-01 :polarity - :arg0 i :arg1 ( luggage :poss i ) :arg2 i ) :mod also
create-01 :arg0 addict-01 :arg1 ( rate-entity-91 :arg1 num_0 :arg2 ( temporal-quantity temporal-quantity_num_0 :unit year ) :arg1-of ( develop-02 :arg3 ( platform :arg1-of ( succeed-01 :degree high ) ) ) )
and :op1 ( vacuum :domain ( retire-01 :arg0 ( person :arg0-of retire-01 ) ) :mod also ) :op2 ( try-01 :arg0 ( person :mod matt ) :arg1 ( filled :arg0 person ) ) :mod also
possible-01 :arg1 ( be-located-at-91 :arg1 ( alcoa :location portland ) :arg2 ( risk-01 :arg2 ( business :quant num_0 ) ) )
file-01 :arg1 sue-02 :arg3 ( rate-entity-91 :arg1 ( day :quant num_0 ) :arg2 ( temporal-quantity temporal-quantity_num_0 :unit day ) ) :time ( after :op1 ( respond-01 :arg0 ( candidate :poss ( person :arg0-of ( have-org-role-91 :arg1 family_name_0 :arg2 president ) ) ) :arg1 ( and :op1 ( person :arg0-of ( own-01 :arg1 gun ) :arg0-of ( own-01 :arg1 gun ) ) :op2 ( person :arg0-of ( support-01 :arg1 gun ) ) :op3 ( person :arg0-of ( support-01 :arg1 gun ) ) :op4 ( person :arg0-of ( support-01 :arg1 gun ) ) :op5 ( person :arg0-of ( have-org-role-91 :arg3 judge-01 ) ) :op6 ( person :arg0-of ( have-org-role-91 :arg3 judge-01 ) ) :op7 ( person :arg0-of ( have-org-role-91 :arg3 judge-01 ) ) :op7 ( person :arg0-of ( have-org-role-91 :arg3 judge-01 ) ) ) ) )
evidence-01 :arg1 ( operate-01 :arg1 drug )
issue-01 :arg0 ( delegation :poss court ) :arg1 ( warrant :beneficiary ( and :op1 ( defendant :mod top ) :op2 ( gulen :name ( name :op1 fethullah :op2 gulen :op3 ekinci :op4 omar :op5 gamsoncu :op6 gamsoncu :op7 gamsoncu ) ) ) )
and :op1 ( terminate-01 :arg0 and :arg1 car ) :op2 ( leave-11 :arg0 and :arg1 car :manner happy )
mention-01 :arg0 ( thing :arg1-of ( mention-01 :time ( open-01 :arg1 crisis ) ) ) :arg1 ( thing :arg1-of ( border-01 :arg2 ( and :op1 syria :op2 ( plane :mod military :mod country_name_0 ) :arg0-of ( shoot-02 :arg1 ( plane :mod military :mod country_name_1 ) ) ) ) ) :prep-in ( thing :arg1-of ( state-01 :time ( open-01 :arg1 crisis ) ) )
clear-06 :arg1 ( consensus :polarity - :domain ( ground :mod common :location country_name_0 ) )
contrast-01 :arg2 ( move-01 :arg1 ( person_name_0 :arg1-of ( ally-01 :arg2 country_name_1 :manner close ) :mod another ) )
and :op1 ( be-temporally-at-91 :arg1 num_0 :arg2 ( after :op1 ( become-01 :arg1 he :arg2 ( minister :mod prime ) ) ) ) :op2 ( become-01 :arg1 he :arg2 ( minister :mod prime ) :time ( before :op1 ( return-01 :arg1 he :arg4 president :mod again ) ) ) :li num_0
secret :mod secret :mod secret
future :poss ( picciuto :mod shaky ) :location-of ( burden-01 :arg1 recalls :arg2 recalls )
and :op1 ( hansford :arg0 ( and :op1 he :op2 ( person :arg0-of ( have-org-role-91 :arg1 ( family :arg1-of disable-01 ) :arg2 member ) ) ) :arg1 ( and :op1 he :op2 ( person :arg0-of ( have-org-role-91 :arg1 ( family :arg1-of disable-01 ) :arg2 member ) ) ) ) :op2 ( person :arg0-of ( have-org-role-91 :arg1 ( family :arg1-of disable-01 ) :arg2 member ) )
multi-sentence :snt1 ( put-01 :arg0 ( person :arg0-of work-01 :mod emergency ) :arg1 ( truck :mod large ) :arg2 ( and :op1 ( person :arg0-of work-01 :mod emergency ) :op2 ( person :arg0-of work-01 :mod emergency ) :op3 ( person :arg0-of work-01 :mod emergency ) ) ) :snt2 ( lead-01 :arg0 ( thing :arg1-of ( say-01 :arg0 he ) ) )
contrast-01 :arg1 ( evacuated :domain ( person :arg0-of reside-01 ) ) :arg2 ( dominate-01 :arg0 ( person :quant num_0 :mod churches ) :arg1 water :time moment :mod also )
possible-01 :arg1 ( surveyed :arg0 ( thing :arg1-of report-01 ) :arg1 ( and :op1 ( defraud-01 :arg1 ( and :op1 immigrate-01 :op2 welfare ) ) :op2 ( defraud-01 :arg1 ( and :op1 immigrate-01 :op2 welfare ) ) ) :time ( time :arg1-of same-01 ) :purpose ( prevent-01 :arg0 thing :arg1 ( use-01 :arg1 ( use-01 :arg1 record-01 ) :arg2 ( control-01 :arg1 drug ) ) :mod also ) :time ( time :arg1-of same-01 ) )
vote-01 :arg0 ( anyone :arg0-of ( vote-01 :arg1 ( person :quant num_0 ) ) ) :arg1 ( vote-01 :arg0 anyone :arg1 ( prevent-01 :arg1 ( parmaklar?na :mod permanent ) ) ) :time ( until :op1 ( after :op1 ( implement-01 :arg1 ink ) ) )
say-01 :arg0 he :arg1 ( decide-01 :arg0 ( and :op1 ( camp :mod elect-01 ) :op2 ( person :arg0-of ( represent-01 :arg1 rahman ) ) :op3 ( person :arg0-of represent-01 ) :op4 ( person :arg0-of represent-01 ) :op5 ( person :arg0-of represent-01 ) ) :arg1 ( have-03 :arg0 and :arg1 ( and :op1 ( activity-06 :arg0 and ) :op2 ( activity-06 :arg0 and :mod ( law :polarity - ) ) ) ) ) :arg1-of ( say-01 :arg0 he )
multi-sentence :snt1 ( tell-01 :arg0 he :arg1 ( post :mod huffington ) :arg2 ( and :op1 ( hair :domain i ) :op2 ( sakal :arg0 i :arg1 ( large :degree very ) :arg2-of ( except-01 :arg1 ( large :degree very :domain i ) ) ) ) ) :snt2 ( think-01 :arg0 i :arg1 ( think-01 :arg0 i :arg1 same-01 ) )
multi-sentence :snt2 ( content-01 :arg1 ( person :quant num_0 :arg0-of use-01 ) :arg2 ( person :mod other ) :degree very )
say-01 :arg0 i :arg1 ( feel-01 :arg0 i :arg1 ( thing :manner-of ( feel-01 :arg0 it :arg1 ( thing :manner-of ( feel-01 :arg0 it :arg1 ( thing :manner-of ( feel-01 :arg0 it :arg1 ( thing :manner-of ( feel-01 :arg0 it :arg1 ( thing :manner-of ( feel-01 :arg0 it :arg1 ( thing :manner-of ( feel-01 :arg0 it :arg1 ( thing :manner-of ( feel-01 :arg0 it :arg1 ( thing :manner-of ( feel-01 :arg0 it :arg1 ( thing :manner-of ( feel-01 :arg0 it :arg1 ( thing :manner-of ( feel-01 :arg0 it :arg1 ( thing :manner-of ( feel-01 :arg0 it :arg1 ( thing :manner-of ( feel-05 :arg1 it ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) )
and :op1 ( hailed :arg1 ( release-01 :arg1 ( person :arg0-of ( return-01 :arg1 person :arg4 relieve-01 ) ) ) ) :op2 ( hail-02 :arg1 ( life :poss person ) :arg2 ( life :poss person ) )
multi-sentence :snt1 ( implement-01 :arg0 this :arg1 ( n?z :mod ??? ) ) :snt2 ( slightly :mode interrogative :degree slight )
study-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg1 government-organization_name_0 :arg2 ( general :mod general ) ) ) :arg1 intelligence :mod also
know-01 :arg1 ( and :op1 ( know-01 :arg0 ( person :mod country_name_0 ) :arg1 ( 4-0 :arg0 ( and :op1 ( person :arg0-of ( lead-02 :arg1 country_name_2 ) ) :op2 ( person :quant num_0 :location country ) ) :time ( after :op1 ( unbeaten :arg1 person ) ) ) :time now ) :op2 ( be-located-at-91 :arg1 person :arg2 ( under :op1 track ) :time ( after :op1 ( unbeaten :arg0 person :arg1 ( track :prep-with ( place :poss we :location group ) :ord ( ordinal-entity ordinal-entity_num_1 ) ) ) ) ) )
multi-sentence :snt1 ( bullshit-01 :mode interrogative :domain this ) :snt2 ( bam :mode interrogative )
be-located-at-91 :arg1 ( person :arg0-of work-01 ) :arg2 ( person :arg0-of work-01 ) :time now
legalize-01 :arg1 we :arg1-of complete-02
use-01 :arg0 ( verb :time former :mod even ) :arg1 ( infringe-01 :arg1 lights ) :location here
say-01 :arg0 he :arg1 ( determined-02 :polarity - :arg0 ( person_name_0 :arg0-of ( have-org-role-91 :arg2 mÃ¼davimlerin :time former ) ) :arg1 ( thing :arg1-of differ-02 ) :time ( late :op1 ( temporal-quantity temporal-quantity_num_0 :unit month ) :degree more ) )
contrast-01 :arg2 ( and :op1 ( coffee :mod now ) :op2 ( begin-01 :arg1 coffee :time ( day :mod last :part-of coffee ) :arg1-of ( instead-of-91 :arg2 ( testifying :arg1 coffee :arg2 ( Ã§iya :mod new :arg0-of ( choose-01 :arg1 thing_name_0 ) ) ) ) ) )
and :op1 ( think-01 :mode interrogative :arg0 you :arg1 there :time before ) :op2 ( be-located-at-91 :arg1 you :arg2 country )
multi-sentence :snt1 ( and :op1 ( '' :mode interrogative :frequency ( rate-entity-91 :arg3 ( temporal-quantity temporal-quantity_num_0 :unit day ) ) :frequency ( rate-entity-91 :arg3 ( temporal-quantity temporal-quantity_num_0 :unit day ) ) ) :op2 ( understand-01 :polarity - :arg0 i :arg1 ( thing :arg1-of ( say-01 :arg0 he ) ) ) :frequency ( rate-entity-91 :arg3 ( temporal-quantity temporal-quantity_num_1 :unit day ) ) ) :snt2 ( haz?rlarlard :mode interrogative :arg1-of ( say-01 :arg0 he ) ) :snt3 ( say-01 :arg0 he :arg1 ( amr-unknown :arg1-of ( say-01 :arg0 he ) ) )
write-01 :arg0 he :arg1 ( thing :arg1-of answer-01 :arg1-of ( write-01 :arg0 he ) ) :manner ( dismay :arg0 he :arg1 answer-01 )
agree-01 :arg0 we :arg1 ( thing :arg2-of ( price-01 :arg1 ( thing :arg2-of price-01 ) ) :location ( relative-position :op1 ( east :part-of strait ) ) )
and :op1 ( value-01 :arg1 ( monetary-quantity monetary-quantity_num_0 :unit pound :arg1-of ( include-91 :arg2 ( station :mod ( season :mod new ) :mod ( season :mod new ) ) ) ) :arg2 ( station :mod ( season :mod new ) ) :location area :time present ) :op2 ( create-01 :arg0 ( person :arg0-of study-01 ) :arg1 ( and :op1 ( space :quant ( between :op1 num_1 :op2 num_1 ) ) :op2 ( discount :ord ( ordinal-entity ordinal-entity_num_2 ) :ord ( ordinal-entity ordinal-entity_num_2 ) :ord ( ordinal-entity ordinal-entity_num_2 ) :ord ( ordinal-entity ordinal-entity_num_2 ) :ord ( ordinal-entity ordinal-entity_num_2 ) ) ) :time ( announce-01 :arg1 and ) )
write-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg2 ( person :arg1-of expert-01 ) ) ) :arg1 ( cut-02 :arg1 presence :location ( thing :arg1-of ( report-01 :arg0 ( person :arg1-of expert-01 ) ) ) )
multi-sentence :snt1 ( detain-01 :arg1 ( figure :mod finance ) :location ( head :part-of ( directorate :mod directorate ) ) ) :snt2 ( question-01 :arg1 ube )
contrast-01 :arg2 ( signal-07 :arg1 incident :quant lot :time incident )
alg?layamad?k :arg0 we
multi-sentence :snt1 ( mavi :mode interrogative :arg0 ( person :arg0-of ( have-org-role-91 :arg1 ( political-party_name_0 :mod ak :part-of parliament ) :arg2 member ) ) :arg1 ( person :arg0-of ( have-org-role-91 :arg1 parliament :arg2 member ) :arg0-of ( have-org-role-91 :arg1 parliament :arg2 member ) :arg0-of ( have-org-role-91 :arg1 parliament :arg2 member ) :arg0-of ( have-org-role-91 :arg1 parliament :arg2 member ) :arg0-of ( have-org-role-91 :arg1 parliament :arg2 member ) :arg0-of ( have-org-role-91 :arg1 parliament :arg2 member ) :arg0-of ( have-org-role-91 :arg1 organization :arg2 member ) :arg0-of ( have-org-role-91 :arg1 organization :arg2 member ) :arg0-of ( have-org-role-91 :arg1 organization :arg2 member ) :arg0-of ( have-org-role-91 :arg1 organization :arg2 member ) :arg0-of ( have-org-role-91 :arg1 organization :arg2 member ) :arg0-of ( have-org-role-91 :arg1 organization :arg2 member ) :arg0-of ( have-org-role-91 :arg1 organization :arg2 member ) :arg0-of ( have-org-role-91 :arg1 organization :arg2 member ) :arg0-of ( have-org-role-91 :arg1 organization :arg2 member ) :arg0-of ( have-org-role-91 :arg1 organization :arg2 member ) :arg0-of ( have-org-role-91 :arg1 organization :arg2 member ) :arg0-of ( have-org-role-91 :arg1 organization :arg2 member ) ) ) :snt2 ( seek-01 :arg1 ( aÃ§?kgÃ¶z :arg1 aÃ§?kgÃ¶z ) )
be-located-at-91 :arg1 ( and :op1 ( person :quant num_0 :arg1-of ( include-91 :arg2 ( person :quant num_1 :arg0-of ( have-org-role-91 :arg2 professor ) ) ) ) :op2 ( person :arg0-of ( have-org-role-91 :arg2 professor ) ) :op3 ( person :arg0-of ( have-org-role-91 :arg2 professor ) ) :op4 ( person :arg0-of ( have-org-role-91 :arg2 professor ) ) :op5 ( person :arg0-of ( have-org-role-91 :arg2 professor ) ) :op6 ( person :arg0-of ( have-org-role-91 :arg2 professor ) ) :op6 ( person :arg0-of ( have-org-role-91 :arg2 professor ) ) :op7 ( person :arg0-of ( have-org-role-91 :arg2 professor ) ) ) :arg2 custody
and :op1 ( kill-01 :arg1 ( and :op1 ( person :arg0-of ( have-org-role-91 :arg2 ( president :mod vice ) ) ) :op2 ( person :arg0-of ( have-org-role-91 :arg2 president ) ) ) :location ( and :op1 ( talk-02 :arg2 ( and :op1 ( person :arg0-of retire-01 :arg0-of ( have-org-role-91 :arg1 political-party_name_0 ) ) :op2 ( person :ord ( ordinal-entity ordinal-entity_num_0 ) :arg0-of ( have-org-role-91 :arg2 president ) ) ) ) ) :op2 ( come-01 :arg1 it :arg3 ( someone :arg1-of ( do-02 :arg0 ( someone :arg1-of ( suggest-01 :manner fetÃ¶ ) ) ) ) ) )
contrast-01 :arg1 ( fire-01 :arg1 ( centre :mod medicine :mod bay?nd?r ) ) :arg2 ( business :poss everyone )
wish-01 :arg0 ( wish-01 :arg1 this ) :arg1 ( choosing :arg1 tree ) :manner ( helm :poss tomb )
rate :mod mortality :beneficiary ( person :mod young ) :topic ( research-01 :arg1 ( try-02 :arg1 person ) )
multi-sentence :snt1 ( and :op1 ( move-01 :arg1 ( satellite :name ( name :op1 celestial ) :mod ( satellite :name ( name :op1 celestial ) ) ) :arg2 ( speed :part-of ( visual :mod ( around :mod 60 ) ) ) :time ( around :op1 ( temporal-quantity temporal-quantity_num_0 :unit second ) ) ) :op2 ( reason-01 :arg1 ( visual :mod this ) ) ) :snt2 ( voiced :arg1 ( sky :location ( light :poss ( place :quant all ) ) ) :manner apparent :time night )
multi-sentence :snt1 ( ??? :arg0 ( and :op1 ( person_name_0 :arg0-of ( lead-02 :arg1 coup ) ) :op2 ( person :arg0-of ( lead-02 :arg1 coup ) ) :op3 ( person :arg0-of ( lead-02 :arg1 coup ) ) :op4 ( person :arg0-of ( lead-02 :arg1 coup ) ) :op5 ( person :arg0-of ( lead-02 :arg1 coup ) ) ) :arg1 ( and :op1 ( person :arg0-of ( lead-02 :arg1 coup ) ) :op2 ( person :arg0-of ( lead-02 :arg1 coup ) ) :op3 ( person :arg0-of ( lead-02 :arg1 coup ) ) :op4 ( person :arg0-of ( lead-02 :arg1 coup ) ) :op5 ( person :arg0-of ( lead-02 :arg1 coup ) ) ) :time ( after :op1 ( coup :time ( date-entity dayperiod_date-entity_0 ) :ord ( ordinal-entity ordinal-entity_num_0 ) :part-of ( person :arg0-of ( represent-01 :arg1 organization :arg1-of high-02 ) ) ) ) ) :snt2 ( contains :mode interrogative :arg1 ( lack-01 :arg1 ( abnormal :polarity - ) ) )
while :arg0 ( continent_name_0 :mod last :ord ( ordinal-entity ordinal-entity_num_0 ) ) :arg1 ( metres :ord ( ordinal-entity ordinal-entity_num_0 ) :ord ( ordinal-entity ordinal-entity_num_2 ) :ord ( ordinal-entity ordinal-entity_num_2 ) :ord ( ordinal-entity ordinal-entity_num_2 ) :ord ( ordinal-entity ordinal-entity_num_2 ) :ord ( ordinal-entity ordinal-entity_num_2 ) ) :time ( attempt-01 :arg1 shooting )
and :op1 politics :op2 trade-01 :op3 transport-01 :op4 energy :op5 energy :op6 ( person :quant num_0 )
and :op1 fire-01 :op2 ( issue-02 :arg0 fikiriz ) :op3 ( issue-02 :arg0 fikiriz )
contrast-01 :arg2 ( remain-01 :arg1 ( person :arg0-of ( cross-02 :arg1 baggage ) ) :arg3 ( include-91 :arg1 person :arg2 baggage ) )
and :op1 ( level :arg1-of ( high-02 :degree most ) :time ( early :op1 ( month :mod this ) :degree more ) ) :op2 ( announce-01 :arg1 ( note :mod galaxies ) )
and :op2 ( age-01 :arg1 ( person :quant num_0 :arg1-of ( age-01 :arg2 ( temporal-quantity temporal-quantity_num_0 :unit year ) ) :mod each ) :arg2 ( see-01 :arg1 ( procedure :mod this :arg1-of ( see-01 :arg0 you :condition ( disease :mod eye :arg1-of expert-01 ) ) ) :mod also ) )
and :op1 ( femoral :domain they :arg1-of deep-02 ) :op2 ( ven :arg1 ( and :op1 femoral :op2 ( name :poss you ) ) ) :arg1-of deep-02
multi-sentence :snt1 ( cause-01 :arg0 this :arg1 ( lose-02 :arg0 we :arg1 ( win-01 :arg0 race :location olympics ) ) :mod again ) :snt2 ( incredible :domain it :mod really )
possible-01 :arg1 ( practice-01 :arg0 ( practice :arg1-of same-01 ) :arg1 he :condition ( return-01 :arg1 he :arg4 city ) ) :mod again
exemplify-01 :arg0 ( sivas :location ( village :location village ) )
Ã¶rnek
and :op2 ( keep-02 :arg0 we :arg1 ( find-01 :arg0 we :arg1 ( house :poss ( and :op1 ( person :mod white ) :op2 blue ) :quant all ) ) )
say-01 :arg0 he :arg1 ( send-03 :arg1 treasure :direction down )
include-91 :arg1 ( and :op1 ( rate-entity-91 :arg1 num_0 :arg2 ( temporal-quantity temporal-quantity_num_0 :unit year ) ) :op2 ( car :poss ( person :arg0-of ( have-rel-role-91 :arg1 ( person :arg0-of ( have-rel-role-91 :arg1 ( person :arg0-of ( have-rel-role-91 :arg1 ( person :arg0-of ( have-rel-role-91 :arg1 ( person :arg0-of ( have-rel-role-91 :arg1 ( person :arg0-of ( have-rel-role-91 :arg1 ( person :arg0-of ( have-rel-role-91 :arg1 ( person :arg0-of ( have-rel-role-91 :arg1 ( person :arg0-of ( have-rel-role-91 :arg1 ( person :arg0-of ( have-rel-role-91 :arg1 ( person :arg0-of ( have-rel-role-91 :arg1 ( person :arg0-of ( have-rel-role-91 :arg1 ( person :arg0-of ( have-rel-role-91 :arg1 ( person :arg0-of ( have-rel-role-91 :arg1 ( person :arg0-of ( have-rel-role-91 :arg1 ( person :arg0-of ( have-rel-role-91 :arg1 ( person :arg0-of ( have-rel-role-91 :arg1 ( person :arg0-of ( have-rel-role-91 :arg1 ( person :arg0-of ( have-rel-role-91 :arg1 ( person :arg0-of ( have-rel-role-91 :arg1 ( person :arg0-of ( have-rel-role-91 :arg1 ( person :arg0-of ( have-rel-role-91 :arg1 ( person :arg0-of ( have-rel-role-91 :arg1 ( person :arg0-of ( have-rel-role-91 :arg1 ( person :arg0-of ( have-rel-role-91 :arg1 ( person :arg0-of ( have-rel-role-91 :arg2 father ) ) :arg2 father ) ) :arg2 father ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) )
contrast-01 :arg1 ( lack-01 :arg0 ( control-01 :arg1 ( fund-01 :arg1 restore-01 ) ) :arg1 ( fund-01 :arg1 ( support-01 :arg1 mine-01 ) ) :arg1-of ( cause-01 :arg0 ( meet-03 :mod year-end ) ) ) :arg2 ( discuss-01 :polarity - :arg1 ( change-01 :mod any ) :mod again )
say-01 :arg0 he :arg1 ( signal-07 :arg0 we :arg1 confidence ) :arg1-of ( cause-01 :arg0 ( and :op1 ( meet-03 :arg0 ( person :arg0-of ( have-org-role-91 :arg1 ( board :part-of board ) :arg2 ( chairman :mod spiritual ) ) ) :arg1 ( invest-01 :arg0 person :arg2 ( country :poss we ) :quant ( multiple :op1 ( monetary-quantity monetary-quantity_num_0 :unit pound ) ) ) :time ( future :poss ( country :poss we ) ) ) :op2 ( signal-07 :arg0 we :arg1 confident-01 ) ) ) :time ( meet-03 :arg0 person :arg1 ( person :arg0-of ( have-org-role-91 :arg1 board :arg2 chairman ) ) )
phone-number-entity phone-number-entity_num_0
tem?zlenmes :mode interrogative :name ( name :op1 g?r :op2 devletten :op3 devletten :op4 devletten :op5 devletten :op6 tem?zlenmes :op7 tem?zlenmes )
and :op1 ( right-06 :arg1 ( place :mod this ) :arg2 car ) :op2 ( ramadan :arg0 ( person :source ( across :op1 ( person :mod big :arg0-of ( have-rel-role-91 :arg2 brother ) ) ) ) :op3 ( person :source ( across :op1 ( person :mod big :arg0-of ( have-rel-role-91 :arg2 brother ) ) ) ) ) :arg1 ( new :poss he :mod new )
possible-01 :arg1 ( produce-01 :arg0 ( and :op1 ( person :arg0-of ( have-org-role-91 :arg2 scientist ) ) :op2 ( person :arg0-of ( have-org-role-91 :arg2 scientist ) ) :op3 ( person :arg0-of ( have-org-role-91 :arg2 scientist ) ) :op4 ( person :arg0-of ( have-org-role-91 :arg2 scientist ) ) :op5 ( person :arg0-of ( have-org-role-91 :arg2 scientist ) ) ) :arg1 ( and :op1 ( vehicle :arg1-of resemble-01 ) :op2 ( person :arg0-of ( have-org-role-91 :arg2 scientist ) ) ) :time past :manner ( use-01 :arg0 person :arg1 model :arg2 ( explore-01 :arg0 person :arg1 model ) ) )
start-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg2 ( negotiators :mod chief ) ) ) :arg1 ( start-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg2 ( negotiators :mod chief ) ) ) :arg1 ( start-01 :arg0 person ) :mod new ) :arg1-of ( cause-01 :arg0 ( and :op1 ( suspend-01 :arg1 strike-01 ) :op2 ( round-05 :arg1 talk-01 :mod new ) ) )
feel-01 :arg0 i :arg1 ( and :op1 ( relieved :arg1 i ) :op2 ( light :degree so ) )
say-01 :arg0 ( thing :arg1-of ( state-01 :arg0 ( thing :arg1-of ( state-01 :arg0 ( thing :arg1-of report-01 ) ) ) ) ) :arg1 ( play-02 :arg0 ( character :arg1-of ( play-02 :arg0 ( group :consist-of ( agent :mod ( person :arg0-of ( have-org-role-91 :arg2 agent ) ) ) ) ) ) :arg1 ( character :arg0-of detail-01 :topic ( thing :manner-of ( history :time ( history :poss program ) ) ) ) )
reduce-01 :arg1 ( use-01 :arg1 ( and :op1 influence-01 :op2 innovate-01 ) ) :time ( over :op1 time )
continue-01 :arg0 ( person :arg0-of rescue-01 ) :arg1 ( save-02 :arg0 person :arg1 water :arg2 ( and :op1 amit :op2 ( accidents :mod wilkinson ) ) ) :location ( raid-01 :location southwest )
say-01 :arg0 he :arg1 ( allow-01 :arg1 ( return-01 :arg1 ( water :mod '' ) :arg4 home :time ( start-01 :arg0 he :arg1 ( withdraw-01 :arg0 he ) ) ) )
cause-01 :arg0 ( belong-01 :arg0 ( weapon :mod assault ) :arg1 ( weapon :mod assault ) :location ( weapon :mod assault :arg1-of ( belong-01 :arg0 ( style :arg1-of differ-02 ) ) ) ) :arg1 ( weapon :mod assault )
person :arg0-of ( have-org-role-91 :arg1 ( government-organization :arg0-of govern-01 ) :arg2 mayor :time former ) :quant lot :time ( year :mod last ) :time ( after :op1 ( suspend-01 :arg1 report-01 ) )
buy-01 :arg0 ( and :op1 ( person :arg0-of ( have-org-role-91 :arg2 official ) ) :op2 ( person :arg0-of ( have-org-role-91 :arg2 activist ) ) ) :arg1 ( paper :poss you :mod paper ) :arg1-of ( send-01 :arg0 ( and :op1 ( person :arg0-of ( have-org-role-91 :arg2 official ) ) :op2 ( person :arg0-of ( have-org-role-91 :arg2 activist ) ) ) :arg1-of ( send-01 :arg0 ( and :op1 ( person :arg0-of ( have-org-role-91 :arg2 official ) ) :op2 ( person :arg0-of ( have-org-role-91 :arg2 activist ) ) ) :arg1-of ( send-01 :arg0 ( and :op1 ( person :arg0-of ( have-org-role-91 :arg2 official ) ) :op2 activist ) ) ) )
and :op1 ( blows :arg0 whistle :arg1 ( britain :mod great :location ( room :arg1-of suppose-01 ) ) ) :op2 ( start-01 :arg0 i :arg1 ( celebrating :arg0 whistled :arg1 ( way :poss whistled ) :manner ( way :poss whistled ) ) )
create-01 :arg1 ( pressure-01 :quant lot )
say-01 :arg0 he :arg1 ( reflect-01 :arg1 ( article :topic ( and :op1 ( diversity :purpose ( and :op1 ( diversity :mod process-01 ) :op2 ( diversity :mod race ) ) ) ) :arg2 ( and :op1 ( diversity :mod process-01 ) :op2 ( diversity :mod race ) ) ) ) :medium phone :medium phone
leave-17 :arg1 ( scouts :mod other :mod country_name_0 ) :degree large :arg1-of ( cause-01 :arg0 ( complain-01 :arg0 he :arg1 ( view :poss they ) ) :degree large )
and :op1 ( '' :arg0 ( thing :arg1-of report-01 ) :arg1 ( thing :arg1-of report-01 ) :location ( half :ord ( ordinal-entity ordinal-entity_num_0 ) :arg1-of ( include-91 :arg2 ( thing :quant num_1 :arg1-of ( include-91 :arg2 num_1 :arg3 num_1 ) ) ) ) ) :op2 ( state-01 :arg0 ( thing :arg1-of state-01 ) :arg1 ( positive :mod ( positive :degree more ) :arg1-of ( call-01 :arg2 ( rate :arg1-of significant-02 ) ) ) )
review-01 :arg0 ( intelligence :arg1-of ( review-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg2 general ) :arg0-of ( have-org-role-91 :arg2 general ) :arg0-of ( have-org-role-91 :arg2 general ) :arg0-of ( have-org-role-91 :arg2 general ) :arg0-of ( have-org-role-91 :arg2 general ) :arg0-of ( have-org-role-91 :arg2 general ) ) ) ) :arg1 government-organization_name_0
and :op2 ( endanger-01 :arg1 it )
claim-01 :arg0 ( person_name_0 :arg0-of ( have-org-role-91 :arg1 language_name_1 :arg3 isis ) ) :arg1 ( direction :name ( name :op1 k?lar :op2 k?lar :op3 k?lar :op4 direction :op5 direction :op6 direction :op7 direction ) )
want-01 :arg0 person_name_0 :arg1 ( continue-01 :arg0 person :arg1 that :mod again )
cash :prep-to ( news :mod economy :source ( fetÃ¶ :mod izmirli ) )
choose-01 :arg3 ( temporal-quantity temporal-quantity_num_0 :unit year )
choose-01 :arg0 ( person :arg0-of ( use-01 :arg1 ( credit :mod house-01 ) ) :quant ( majority :mod vast ) ) :arg1 ( plan :arg1-of ( pay-01 :duration long-03 ) )
person :arg0-of ( have-org-role-91 :arg1 ( person :arg0-of ( have-org-role-91 :arg1 political-party_name_0 :arg2 president ) ) :arg2 torun )
possible-01 :arg1 ( have-03 :arg0 we :arg1 ( again :mod again ) )
add-01 :arg0 he :arg1 ball :time now
pay-01 :arg1 ( temporal-quantity temporal-quantity_num_0 :unit year :purpose ( transfer-01 :arg1 ( monetary-quantity monetary-quantity_num_0 :unit euro ) :arg2 ( person :arg0-of ( play-01 :arg1 club ) :mod puerto ) ) ) :duration temporary
say-01 :arg0 he :arg1 ( or :op2 ( go-02 :mode imperative :arg0 you :extent far ) )
probable :domain ( end-01 :arg0 amr-unknown :arg1 ( service :mod military :poss he ) )
neighbor-01 :arg1 ( person :arg1-of ( neighbor-01 :arg2 country_name_0 ) ) :arg2 country_name_1
give-01 :arg0 ( and :op1 lawyer :op2 family ) :arg1 ( and :op1 ( thing :arg0-of evidence-01 ) :op2 ( struggle-01 :arg1-of legal-02 ) ) :arg2 ( and :op1 ( thing :arg0-of evidence-01 ) :op2 ( struggle-01 :arg1-of legal-02 ) ) :time ( late :op1 ( temporal-quantity temporal-quantity_num_0 :unit year ) :degree more ) :time ( after :op1 ( open-01 :arg1 ( investigate-01 :mod murder-01 ) ) )
behind :location there :mod of-course
attempt-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg1 ( coup :mod terrorist :mod country_name_0 ) :arg2 member ) ) :arg1 ( process-02 :arg1 gÃ¼len ) :time ( after :op1 ( begin-01 :arg1 ( process-02 :arg1 ( float-01 :arg1 ( and :op1 ( ministry :topic defend-01 ) :op2 ( force :arg1-of arm-01 :mod nation ) ) ) ) ) )
multi-sentence :snt1 ( die-01 :arg1 i :time ( date-interval :op1 ( until :op1 ( between :op1 ( between :op1 ( temporal-quantity temporal-quantity_num_0 :unit year ) :op2 ( temporal-quantity temporal-quantity_num_1 :unit year ) ) ) ) :op2 ( die-01 :arg1 i :time ( moment :mod any ) ) ) ) :snt2 ( cause-01 :arg0 amr-unknown :arg1 ( and :op1 ( watch-01 :arg0 ( soldier :mod that ) :arg1 ( person :arg0-of ( watch-01 :arg1 ( person :arg0-of ( have-org-role-91 :arg2 president ) ) ) :arg0-of ( watch-01 :arg1 ( person :arg0-of ( have-org-role-91 :arg2 president ) ) ) ) ) :op2 ( thing :arg1-of ( say-01 :arg0 he ) ) ) ) :snt3 ( say-01 :arg0 he :arg1 ( and :op1 ( watch-01 :arg0 soldier :arg1 ( thing :arg1-of ( charge-05 :arg2 situation ) ) ) :op2 ( thing :arg1-of ( say-01 :arg0 he ) ) ) )
and :op1 ( call-02 :arg0 they :arg1 i ) :op2 ( go-02 :arg0 they :arg3 engage-01 :location ( ankara :mod hilton :mod hilton ) )
say-01 :arg0 coup :arg1 ( target-01 :arg0 coup :arg1 ( person :quant ( about :op1 num_0 ) :arg0-of ( target-01 :arg1 ( person :arg0-of speak-01 ) :arg1-of direct-02 :time ( after :op1 ( start-01 :arg0 person :arg1 shooting ) :quant short ) ) ) )
scene :location-of meteor
cause-01 :arg1 ( come-01 :arg1 ( and :op1 ( worship-place_name_0 :location ( province_name_1 :mod politics :location ( city-district_name_2 :mod politics ) ) ) :op2 ( adoption :polarity - ) ) :arg4 station )
use-01 :arg1 ( airport :mod military ) :arg1-of ( cause-01 :arg0 ( have-03 :arg1 ( depths :quant lot :location ( airport :mod ( airport :mod rize ) ) ) ) )
emerge-01 :arg0 ( and :op1 ( person :arg0-of play-01 :mod football :mod turkish ) :op2 ( converse-01 :arg0 ( person :mod nation :arg0-of play-01 ) :arg2 ( take-01 :arg0 person :arg1 place :location ( fethullahÃ§?s :name ( name :op1 fetÃ¶ ) :mod fetÃ¶ ) ) ) ) :li num_0
game :ord ( ordinal-entity ordinal-entity_num_0 :range ( ordinal-entity ordinal-entity_num_0 ) )
make-02 :arg0 coach :arg1 ( car :mod desperate )
learn-01 :arg0 i :arg1 ( accident :poss i :prep-on phone ) :arg2 ( do-02 :arg0 i :arg1 ( grandson :arg0 i ) :arg2 i )
transfer-01 :arg1 ( operation :mod safe-01 ) :time ( after :op1 ( transfer-01 :arg1 he :arg2 court ) )
and :op1 ( night :domain ( night :mod another ) ) :op2 ( complain-01 :arg0 ( trifokal :mod lenses ) )
and :op1 ( factor :mod primary :arg1-of ( long-03 :arg2 ( temporal-quantity temporal-quantity_num_0 :unit hour ) ) ) :op2 ( increase-01 :arg1 ( hour :mod work-01 :arg1-of long-03 ) ) :op3 ( increase-01 :arg1 ( temporal-quantity temporal-quantity_num_1 :unit hour ) :arg3 ( thing :arg1-of ( stop-01 :arg1-of long-03 ) ) )
heirs :arg1 ( fail-01 :arg2 ( and :op1 ( develop-01 :arg2 ( person :quant num_0 ) ) :op2 ( develop-02 :arg1 fail-01 ) ) )
news :mod 6a
and :op1 ( problem :domain ( problem :topic beijing ) ) :op2 ( person :arg0-of ( play-01 :arg1-of expert-01 ) ) :op3 ( replace-01 :arg1 ( person :arg1-of expert-01 ) )
possible-01 :polarity - :arg1 ( win-01 :arg0 ( record :poss country_name_0 ) :arg1 ( stand-11 :quant num_0 :arg1-of ( adopt-01 :manner ( stand-11 :arg0 country :arg1 ( oppose-01 :arg0 country :arg1 ( hoy :mod hoy ) ) ) ) ) )
patrol-01 :arg0 ( fire :name ( name :op1 pkk :op2 fire :op3 fire :op4 fire :op5 fire :op6 fire :op7 fire ) ) :arg1 car
and :op1 ( fund-01 :arg0 ( fund-01 :arg0 ( government-organization :arg0-of govern-01 ) :mod invest-01 ) :arg1 ( fund :purpose ( fund-01 :arg1 ( project :arg1-of long-03 ) ) ) :purpose ( fund-01 :arg0 fund-01 :arg1 ( project :arg1-of long-03 ) ) ) :op2 ( recommend-01 :arg1 ( discuss-01 :arg1 ( thing :arg0-of oppose-01 ) :arg2 ( direction :poss ( bill :part-of ( bill :name ( name :op1 omnibus ) ) ) ) :mod also ) )
come-01 :arg1 we :arg1-of ( long-03 :arg2 ( temporal-quantity temporal-quantity_num_0 :unit year ) )
continue-01 :arg0 ( sector :mod banking :poss we ) :arg1 ( work-01 :arg0 sector :manner health :manner health )
say-01 :arg0 he :arg1 ( continue-01 :arg0 ( and :op1 you :op2 country ) :arg1 ( and :op1 ( continue-01 :arg0 ( and :op1 you :op2 ( government-organization :arg0-of ( govern-01 :arg1 you ) ) ) :arg1 ( remove-01 :arg0 and :arg1 ( obstacle :location ( in-front-of :op1 ( front :poss you ) ) ) ) ) :op2 ( continue-01 :arg0 ( and :op1 you :op2 ( government-organization :arg0-of ( govern-01 :arg1 you ) ) ) :arg1 ( remove-01 :arg0 and :arg1 ( thing :arg1-of ( say-01 :arg0 he ) ) ) ) ) )
and :op1 ( adding :arg0 ( and :op1 ( law :arg1-of ( include-91 :arg2 ( law :arg1-of ( finish-01 :arg0 we :location ( ministry :mod economy ) ) ) ) :quant ( multiple :op1 num_0 ) ) :op2 ( regulate-01 :arg1-of ( finish-01 :arg0 we :location ( ministry :mod economy ) ) ) ) :arg1 ( thing :arg1-of decide-01 :mod final ) :mod also :time ( date :mod ( late :degree more ) ) ) :op2 ( and :op1 ( came :arg1 ( thing :quant num_0 :arg1-of ( include-91 :arg2 ( law :arg0-of ( represent-01 :arg1 ( country :mod this ) ) :arg0-of ( represent-01 :arg1 ( country :mod this ) ) :arg0-of ( represent-01 :arg1 ( country :mod this ) ) :arg0-of ( represent-01 :arg1 ( country :mod this ) ) :arg0-of ( represent-01 :arg1 ( country :mod this ) ) :arg0-of ( represent-01 :arg1 ( country :mod this ) ) :arg0-of ( represent-01 :arg1 ( country :mod this ) ) :arg0-of ( represent-01 :arg1 ( country :mod this ) ) ) ) ) ) )
need-01 :arg1 ( reform-01 :arg1 ( and :op1 climate :op2 administrate-01 ) ) :arg1-of ( cause-01 :arg0 ( declare-02 :arg1 ( reform-01 :arg1 structure :mod ( serious :degree very ) ) :time so-far ) )
multi-sentence :snt1 ( approved :arg0 ( person :arg0-of ( have-org-role-91 :arg2 president ) ) :arg1 ( law :name ( name :op1 tayyip ) :mod international ) :manner erdogan ) :snt2 ( approve-01 :li num_0 :arg1 ( law :mod international ) ) :li num_0
find-01 :arg1 ( and :op1 ( person :arg0-of ( have-rel-role-91 :arg2 lawyer ) ) :op2 ( person :arg0-of ( have-rel-role-91 :arg1 person :arg2 lawyer ) ) :op3 ( person :arg0-of ( have-rel-role-91 :arg1 person :arg2 lawyer ) ) :op4 ( person :arg0-of ( have-rel-role-91 :arg1 person :arg2 lawyer ) ) :op5 ( person :arg0-of ( have-rel-role-91 :arg1 person :arg2 lawyer ) ) :op6 ( person :arg0-of ( have-rel-role-91 :arg1 person :arg2 lawyer ) ) :op6 ( person :arg0-of ( have-rel-role-91 :arg1 person :arg2 lawyer ) ) :op6 ( person :arg0-of ( have-rel-role-91 :arg1 person :arg2 lawyer ) ) :op7 ( person :arg0-of ( have-rel-role-91 :arg1 person :arg2 lawyer ) ) )
stage-01 :arg1 ( group :mod ( service :mod oil ) :mod ( service :mod oil ) ) :location ( platform :mod sea :location north :arg1-of ( operated :manner gradual ) )
say-01 :arg0 he :arg1 ( act-02 :arg0 ( union :mod trade-01 ) :arg3 ( percentage-entity percentage-entity_num_0 ) :arg4 ( protest-01 :arg0 union :arg1 wage-01 ) :time ( since :op1 ( act-02 :ord ( ordinal-entity ordinal-entity_num_0 ) ) ) )
represent-01 :arg0 this :arg1 ( break :topic ( star :mod ( old :degree more ) ) ) :location ( field :mod ( magnetic :arg1 star ) )
demand-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg2 president ) ) :arg1 ( receive-01 :arg1 apology ) :mod ultimate :mod ultimate
say-01 :arg0 he :arg1 ( incident :mod such :arg0-of ( cause-01 :arg1 ( take-01 :arg0 i :arg1 ( incident :mod such ) :location presentation ) ) )
say-01 :arg0 he :arg1 ( and :op1 ( construct-01 :arg1 ( parade-02 :mod queensferry ) ) :op2 ( symbolic :arg1 ( and :op1 ( moment :mod historic ) :op2 ( moment :arg1-of symbolize-01 ) ) ) )
multi-sentence :snt1 ( fortunate-01 :polarity - ) :snt2 ( and :op1 ( be-located-at-91 :arg1 we :arg2 ( path :mod right ) :time ( until :op1 ( reach-01 :arg0 it :arg1 ( gusts :arg1 ( uzakla?m :mod wind :mod wind ) :arg1-of strong-02 ) ) ) ) )
multi-sentence :snt1 ( wonderful :polarity - :arg1 ( and :op1 technology :op2 technology :op3 ( other :mod each ) ) :purpose ( act-02 :arg0 and :location ( air :arg1-of open-09 ) ) ) :snt2 ( wonderful-03 :arg1 ( and :op1 technology :op2 technology ) :mod really )
multi-sentence :snt1 ( develop-02 :arg1 ( and :op1 ( develop-01 :arg2 apple ) :op2 ( monitor-01 :arg1 ( kullan?c?y :quant num_0 ) ) :op3 ( enforce-01 :arg1 ( kullan?c?y :quant num_0 ) ) ) :time ( before :op1 ( play-01 :arg0 he :location ( post :mod washington ) ) ) ) :snt2 ( rise-01 :arg1 ( rate :quant-of person ) :arg3 ( rate-entity-91 :arg1 ( rate-entity-91 :arg1 ( day :quant ( between :op1 num_0 :op2 num_1 ) ) :arg2 ( temporal-quantity temporal-quantity_num_0 :unit day ) ) :arg4 ( rate-entity-91 :arg1 ( rate :mod ( person :quant num_1 ) ) :arg2 ( rate-entity-91 :arg1 ( rate :mod ( person :quant num_1 ) ) :arg2 ( rate-entity-91 :arg1 ( rate :quant-of person ) :arg2 ( temporal-quantity temporal-quantity_num_2 :unit day ) ) ) ) ) )
say-01 :arg0 ( thing :arg1-of state-01 ) :arg1 ( be-located-at-91 :arg1 ( house :poss settlement ) :arg2 ( area :location-of settlement ) :time ( early :op1 ( month :mod this ) :degree more ) ) :arg1-of ( say-01 :arg0 political-party_name_0 )
say-01 :arg0 he :arg1 ( language :arg1-of sign-01 :domain ( and :op1 ( language :arg1-of sign-01 ) :op2 ( language :arg1-of sign-01 ) ) ) :arg2 person_name_0
amr-unknown :domain amr-unknown
and :op1 ( victim :polarity - :domain ( other :quant num_0 ) ) :op2 ( police :arg0 police :arg1 ( person :quant num_1 :arg1-of ( include-91 :arg2 ( person :arg0-of attack-01 ) ) ) :arg2 ( or :mode interrogative :op1 ( look-01 :arg0 person ) :op2 ( look-01 :polarity - :arg0 person ) ) )
say-01 :arg0 he :arg1 ( and :op1 ( be-located-at-91 :arg1 ( person :arg0-of specialize-01 :arg1-of arm-01 :quant ( more-than :op1 num_0 ) ) :arg2 ( person :arg0-of specialize-01 :arg1-of arm-01 ) ) :op2 ( activity-06 :arg0 ( person :arg0-of ( have-org-role-91 :arg2 ( commissioner :mod '' ) ) ) :location ( station :mod gas ) ) )
and :op1 ( watchdog :mod nhs :arg1-of nice-01 ) :op2 ( problem :arg1-of nice-01 ) :op3 ( problem :arg1-of nice-01 ) :op4 ( problem :topic cardiovascular ) :purpose ( reduce-01 :arg0 and :arg1 ( risk-01 :arg2 ( recommend-01 :arg1 ( restore-01 :arg0 person :arg1 ( thing :arg1-of ( recommend-01 :arg0 person ) ) :time ( after :op1 now :quant ( up-to :op1 ( temporal-quantity temporal-quantity_num_0 :unit year ) ) ) ) ) ) )
say-01 :arg0 he :arg1 ( bad-07 :arg1 it :degree very :purpose ( think-01 :arg0 i :arg1 it ) :arg1-of ( cause-01 :arg0 ( tell-01 :arg0 he :arg1 it :arg2 i ) ) :time ( go-02 :arg0 i :arg4 home ) :time ( go-02 :arg0 i :arg4 home ) ) :mod ( kÃ¼lot :mode expressive )
infer-01 :arg1 ( obligate-01 :arg2 ( give-01 :arg0 ( person :quant num_0 :arg1-of ( include-91 :arg2 ( way :arg1-of ( secure-02 :degree most ) :purpose ( avoid-01 :arg1 soygundan ) ) ) ) :arg1 ( give-01 :arg1 money :arg2 person ) ) )
multi-sentence :snt1 ( and :op1 ( wright :mode interrogative :arg1 ( and :op1 wright :op2 ( gezerek :mod world ) :op3 ( thing :arg1-of wonderful-03 ) ) ) :op2 ( things :arg1 and ) ) :snt2 ( test-01 :mode interrogative :arg0 you )
multi-sentence :snt2 ( period :arg1-of extend-01 :time ( after :op1 ( see-01 :arg0 he :arg1 ( and :op1 he :op2 ( person :arg0-of ( have-rel-role-91 :arg1 person :arg2 husband ) ) ) ) ) :time ( week :mod this ) :time ( after :op1 ( see-01 :arg0 he :arg1 ( and :op1 he :op2 ( person :arg0-of ( have-rel-role-91 :arg1 person :arg2 husband ) ) ) :time ( week :mod this ) ) ) )
have-concession-91 :arg1 ( say-01 :arg0 he :arg1 ( take-01 :polarity - :arg1 no-one :arg3 ( alone :degree that ) ) :arg1-of ( cause-01 :arg0 ( be-located-at-91 :arg1 smoke :arg2 ( under :op1 usual ) :arg1-of ( cause-01 :arg0 ( poor :domain smoke :arg1-of ( cause-01 :arg0 ( poor :domain smoke ) ) ) ) ) :compared-to usual :arg1-of ( cause-01 :arg0 ( poor :domain smoke ) ) ) )
say-01 :arg0 ( person :arg0-of ( have-rel-role-91 :arg1 person :arg2 child ) ) :arg1 ( person :arg0-of ( have-rel-role-91 :arg1 person :arg2 child ) :domain this :arg1-of ( include-91 :arg2 ( process-02 :arg1 closure ) ) :quant some :arg1-of ( include-91 :arg2 ( process-02 :arg1 closure ) ) ) :arg1-of ( say-01 :arg0 ( person :arg0-of ( have-rel-role-91 :arg1 person :arg2 child ) ) :arg1-of ( say-01 :arg0 person ) ) :arg1-of ( send-01 :arg2 ( person :arg0-of ( have-rel-role-91 :arg2 child ) ) )
contrast-01 :arg1 ( intervene-01 :arg0 ( mitchell :arg1-of wonderful-03 :example ( prevent-01 :arg0 ( Ã¼Ã§Ã¼ncÃ¼yÃ¼ :mod mountain ) :arg1 that ) ) ) :arg2 ( delay-01 :quant number :mod only )
suggest-01 :arg1 ( match-03 :arg0 country_name_0 :arg1 country_name_1 :arg1-of ( tough-02 :degree most ) :arg1-of ( match-01 :arg2 ( name :op1 south :op2 africa ) :location ( face :part-of face ) ) ) :arg1-of ( cause-01 :arg0 ( suggest-01 :arg1 ( point :arg1-of single-02 :domain country ) ) ) :time ( begin-01 :arg1 day )
chance-02 :arg1 ( watch-01 :arg1 ( architecture :mod dramatic :consist-of ( person :mod ordinary :mod ordinary ) ) )
and :op1 ( receive-01 :arg0 ( and :op1 ( person :arg0-of ( have-org-role-91 :arg2 gee ) ) :op2 ( person :arg0-of ( have-org-role-91 :arg2 schwartzman ) ) :quant ( num_0 :mod bertram ) ) :arg1 ( discuss-01 :arg0 person ) ) :op2 ( and :op1 ( receive-01 :arg0 person :arg1 ( thing :arg1-of discuss-01 ) ) :op2 ( share-01 :arg0 person :arg1 ( thing :arg1-of ( plan-01 :arg0 person ) ) :arg2 gÃ¶rsellerini ) )
multi-sentence :snt1 ( mercekleri :mode interrogative :arg0 ( person :mod other :arg1-of ( back-01 :arg0 ( other :mod other ) ) :arg1-of ( back-01 :arg0 ( other :mod other ) ) ) :arg1 ( or :op1 ( skin :arg1-of black-04 ) :op2 ( slash :op1 ( skin :name ( name :op1 beyazla?t?r?lm ) ) :op2 ( slash :op1 ( skin :arg1-of black-04 ) :op2 ( slash :op1 ( skin :arg1-of black-04 ) :op2 ( slash :op1 ( skin :arg1-of black-04 ) :op2 ( slash :op1 ( skin :mod beyazla?t?r?lm ) :op2 ( ?? :mod beyazla?t?r?lm ) ) ) ) ) ) ) :time past ) :snt2 ( charge-05 :mode interrogative )
participate-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg1 ( committee :mod ( intelligence :mod house ) ) :arg2 member ) :arg0-of ( have-org-role-91 :arg1 ( committee :mod intelligence :mod intelligence ) :arg2 member ) ) :arg1 ( thing :arg1-of ( conclude-01 :arg1-of ( reach-01 :arg0 ( arm :part-of ( person :arg0-of work-01 ) :arg0-of work-01 ) ) :quant some ) )
possible-01 :arg1 ( promise-01 :arg0 i :mod great ) :location ( middle :part-of ( Ã§?lg?nl :name ( name :op1 ??? :op2 ??? :op3 ??? :op4 general :op5 general :op6 general :op7 soon ) ) )
include-91 :arg3 num_0 :arg1 continent_name_0 :arg2 ( and :op1 ( economy :arg1-of ( stable-03 :degree most ) ) :op2 ( economy :arg1-of ( grow-01 :manner rapid ) ) :op3 ( sound-01 :arg2 ( ally-01 :arg2 west ) ) ) :time ( decade :mod past )
and :op1 ( out-06 :arg1 person :arg2 street :time ( week :mod last :mod just ) ) :op2 ( call-03 :arg0 person :arg1 ( change-01 :arg1 politics :mod fundamental ) )
Ã¶zellikti :arg1 ( home :poss ( economy :mod this ) :quant majority )
and :op1 ( have-org-role-91 :arg0 ( person_name_0 :arg1-of ( include-91 :arg2 ( person :arg0-of ( have-org-role-91 :arg1 game_name_1 :arg2 member ) ) :arg3 most ) ) :arg1 ( fee :mod ( rate-entity-91 :arg1 ( about :op1 ( monetary-quantity monetary-quantity_num_0 :unit dollar ) ) :arg2 ( volume-quantity volume-quantity_num_1 :unit gallon ) ) ) :arg2 ( institution :mod charity :arg2-of ( include-91 :arg1 ( and :op1 ( person :arg0-of ( have-org-role-91 :arg2 ( minister :mod spiritual ) :time former ) ) :op2 ( person :arg0-of ( have-org-role-91 :arg2 ( minister :mod foreign ) :time former ) ) :op3 ( person :arg0-of ( have-org-role-91 :arg2 ( minister :mod foreign ) :time former ) ) :op4 ( person :arg0-of ( have-org-role-91 :arg2 ( minister :mod foreign ) :time former ) ) :op5 ( person :arg0-of ( have-org-role-91 :arg2 ( minister :mod foreign ) :time former ) ) :op6 ( person :arg0-of ( have-org-role-91 :arg2 ( minister :mod foreign ) :time former ) ) :op6 ( person :arg0-of ( have-org-role-91 :arg2 ( minister :mod foreign ) :time former ) ) :op7 ( person :arg0-of ( have-org-role-91 :arg2 ( minister :mod foreign ) :time former ) ) ) ) ) )
write-01 :arg0 person_name_0
need-01 :polarity - :arg1 ( izah :arg1 this )
rise-01 :arg1 ( trade-01 :arg0 country_name_0 :arg2 country_name_1 ) :arg2 ( percentage-entity percentage-entity_num_0 )
uyar?n :arg1 ( overthrow-01 :arg1 aran?zda )
and :op1 ( unity :arg1 ( and :op1 ( unity :mod turkish ) :op2 ( beraberli?ine :location ( flags :mod turkish ) ) ) ) :op2 ( table :purpose ( effort :purpose ( do-02 :arg1 it ) ) )
and :op1 ( use-01 :arg0 ( fetÃ¶ :name ( name :op1 '' :op2 fetÃ¶ ) ) :arg1 ( person :arg0-of help-01 ) :mod also ) :op2 ( open-01 :arg0 person :arg1 ( eye :part-of everyone ) ) :time ( after :op1 ( 15th :mod july ) )
say-01 :arg0 he :arg1 ( contrast-01 :arg1 ( have-03 :arg0 ( person :quant some :arg1-of ( include-91 :arg2 ( person :arg0-of cables ) ) ) :arg1 ( publication :arg1-of ( base-01 :location cables ) ) :mod also ) :arg2 ( say-01 :arg0 he ) )
order-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg2 governor ) ) :arg2 ( block-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg2 governor ) ) :arg1 ( and :op1 ( person :mod sovereign ) :op2 ( person :arg0-of ( have-org-role-91 :arg2 governor ) ) ) :arg1-of ( show-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg2 governor ) ) ) )
detain-01 :arg1 ( person :arg0-of ( have-org-role-91 :arg2 ( office :mod public ) ) ) :arg2 ( thing :arg2-of ( name-01 :arg1 ( person :arg0-of ( have-org-role-91 :arg2 professor ) ) ) ) :time ( operate-01 :arg1 ( office :poss ( person :arg0-of ( have-org-role-91 :arg2 ( governor :mod public ) ) ) ) )
and :op1 ( cut-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg1 ( person :arg0-of ( have-org-role-91 :arg1 province :arg2 ( director :mod health ) ) ) :arg2 ( director :mod health ) ) ) :arg1 ( and :op1 ( cut-01 :arg0 person :arg1 ( person :mod young ) ) :op2 ( person :mod young :arg0-of ( found-01 :arg1 person :arg2 ( habit :arg1-of bad-07 ) ) ) ) ) :op2 ( report-01 :arg0 person )
continue-01 :arg1 ( post :poss they ) :arg1-of ( cause-01 :arg0 ( relation-03 :arg0 ( person :arg0-of ( have-org-role-91 :arg2 officer ) ) :arg2 ( person :arg0-of ( have-org-role-91 :arg2 officer ) ) ) )
multi-sentence :snt2 ( fire :location ( place :mod this ) ) :snt3 ( fire :location ( place :mod this ) )
bridge :location ( on :op1 there ) :arg1-of major-02
and :op1 ( marched :arg1 ( country :quant num_0 :arg1-of ( include-91 :arg2 ( country :quant num_0 ) ) ) :arg2 street ) :op2 ( reported :arg0 ( person :arg0-of ( have-org-role-91 :arg1 police :arg2 direnmedi?ini ) ) :arg1 street :location street ) :op3 ( report-01 :arg0 police )
include-91 :li num_0 :arg1 ( person :quant num_0 ) :arg2 ( bridge :location ( bridge :quant num_1 ) )
take-10 :arg0 it :time ( until :op1 ( late :op1 ( temporal-quantity temporal-quantity_num_0 :unit hour ) ) )
issue-02 :arg0 country_name_0 :quant lot
issue-02 :arg0 region :mod also
say-01 :arg0 he :arg1 ( thing :mod important :domain ( get-01 :arg1 result-01 ) )
say-01 :arg0 he :arg1 ( and :op1 ( launch-01 :arg0 ( person :arg0-of ( lead-02 :arg1 ( campaign-01 :arg0 person :arg1 ( campaign-01 :arg0 person :arg1 ( campaign :name ( name :op1 kerem ) :mod red ) ) ) ) ) :arg1 ( campaign-01 :arg0 person :arg1 ( and :op1 ( festival :arg0 person :arg1 ( festival :mod '' ) ) :op2 ( offer-01 :arg0 person :arg1 ( etleri :arg0 person ) ) ) ) ) :op2 ( offer-01 :arg0 person :arg1 ( etleri :arg1 person ) :manner ( way :mod way ) ) ) :arg2 ( person :arg0-of ( donate-01 :arg2 ( campaign-01 :arg0 person :arg1 press ) ) )
multi-sentence :snt1 ( '' :domain this :time ( throughout :op1 year ) ) :snt2 ( add-01 :arg0 he )
crash-01 :arg1 ( bridge :name ( name :op1 mehmet :op2 mehmet :op3 bridge :op4 bridge :op5 bridge :op6 bridge :op7 bridge ) )
say-01 :arg0 scene :arg1 ( scene :mod ( ankara :arg1 ( bridge :arg0-of ( attain :arg1 highway ) ) :time ( after :op1 now :quant ( temporal-quantity temporal-quantity_num_0 :unit hour ) :location ( line :location ( line :arg1-of explode-01 ) ) ) ) )
say-01 :arg0 ( thing :arg1-of state-01 ) :arg1 ( thing :arg1-of state-01 :quant ( much :degree so ) ) :medium statement
expect-01 :arg0 ( office :poss ( person :arg0-of ( have-org-role-91 :arg2 ( office :mod public ) ) ) ) :arg1 ( immune :arg1 ( and :op1 sakarya :op2 ( immune :name ( name :op1 hakan ) ) :op3 ( immune :mod hakan ) ) :arg2 ( decide-01 :arg1 ( detain-01 :arg1 he ) ) )
system :name ( name :op1 contaminated :op2 report :op3 report ) :arg0-of ( merged :arg1 ( system :name ( name :op1 toplardamar :op2 toplardamar ) ) :arg1-of ( mean-01 :arg2 ( system :name ( name :op1 toplardamar :op2 toplardamar ) ) :mod just ) :arg0-of ( system :name ( name :op1 toplardamar ) ) )
and :op1 ( have-03 :arg0 ( person :mod country_name_0 ) :arg1 person :time previous ) :op2 ( disqualified :arg0 person :arg1 person :arg2 ( potential :poss ( person :mod country_name_1 :arg0-of ( have-org-role-91 :arg2 vazgeÃ§memi?ti ) ) ) ) :time now
begin-01 :arg0 we :arg1 ( project :mod this :prep-as ( exemplify-01 :arg0 ( place :arg1-of ( call-01 :arg2 ( name :op1 alaca :op2 ?? ) ) ) ) )
multi-sentence :snt1 ( result-01 :arg1 ( launch-01 :arg1 investigate-01 ) :arg2 ( result-01 :arg1 investigate-01 :arg2 ( investigate-01 :arg1 investigate-01 :time ( after :op1 ( launch-01 :arg1 investigate-01 :time ( after :op1 ( launch-01 :arg1 investigate-01 ) ) ) ) ) ) ) :snt2 ( and :op1 ( explain-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg2 ( president :mod vice ) :time former ) ) :arg1-of long-03 ) :op2 ( arrest-01 :arg1 ( person :arg0-of ( have-org-role-91 :arg2 ( chamber :mod adana ) :time former ) ) :arg1-of long-03 ) )
include-91 :arg1 ( and :op1 ( arrest-01 :arg1 ( person :quant num_0 ) ) :op2 ( arrest-01 :arg1 ( person :quant num_0 ) ) ) :arg2 ( investigate-01 :arg1 investigate-01 )
transfer-01 :arg1 ( and :op1 yildirim :op2 ( person :arg0-of ( have-rel-role-91 :arg1 he :arg2 wife ) ) ) :arg2 ( transfer-01 :arg1 car )
sit-01 :arg1 sit-01 :arg2 ( control-01 :arg1 ( reconstruct-01 :arg1 fund ) )
have-purpose-91 :arg1 ( finance-01 :arg1 ( project :arg1-of major-02 ) ) :arg2 goal
multi-sentence :snt1 ( contrast-01 :arg1 ( '' :arg0 ( bankam?z :mod central ) :arg1 ( rate-entity-91 :arg1 num_0 :arg2 ( temporal-quantity temporal-quantity_num_0 :unit year ) ) ) :arg2 ( need-01 :arg0 ( need-01 :arg1 ( end-01 :arg1 ( market :mod ( exchange-01 :mod foreign ) ) ) ) :arg1 ( and :op1 ( end-01 :arg1 ( market :mod ( exchange-01 :mod foreign ) ) ) :op2 ( reduce-01 :arg1 ( monetary-quantity monetary-quantity_num_1 :unit dollar ) ) ) ) ) :snt2 ( rezervimiz :arg1-of gross-03 :mod ( more-than :op1 ( monetary-quantity monetary-quantity_num_1 :unit dollar ) ) )
say-01 :arg0 ( person_name_0 :arg0-of ( have-org-role-91 :arg2 ( minister :mod economy ) ) ) :arg1 ( and :op1 ( emerge-02 :arg0 ( person :arg0-of ( have-org-role-91 :arg2 ( minister :mod economy ) ) ) :arg3 ( attempt-01 :arg1 coup ) ) :op2 ( add-01 :arg0 person :arg1 ( declare-01 :arg0 ( government-organization :arg0-of govern-01 ) :arg2 ( campaign-01 :arg0 government-organization :arg1 ( issue-02 :mod this ) ) ) ) ) :li num_0
estimate-01 :arg0 he :arg1 ( resemble-01 :arg1 it :arg2 ( resemble-01 :arg1 it :arg2 that ) ) :arg1-of ( say-01 :arg0 he )
border-01 :arg1 ( thing :arg1-of ( border-01 :arg2 ( border-01 :arg2 ( border-01 :arg1 country_name_0 :arg2 country_name_1 ) ) ) ) :arg2 ( thing :arg1-of ( border-01 :arg2 ( border-01 :arg1 country :arg2 ( border-01 :arg1 country :arg2 ( border-01 :arg1 country :arg2 country ) ) ) ) :arg1-of ( near-02 :arg2 ( and :op1 ( control-01 :arg1 ( border-01 :arg2 country ) ) :op2 ( control-01 :arg1 ( air :quant num_0 :arg1-of separate-02 :mod air :arg1-of separate-02 ) ) ) ) )
and :op1 ( say-01 :arg0 ( study :arg1-of ( study-01 :arg0 ( person :quant ( nearly :op1 num_0 ) ) :mod globe ) ) :arg1 ( person :quant num_1 ) :time ( year :mod last ) ) :op2 ( say-01 :arg0 study :arg1 ( number :quant-of ( person :arg0-of ( use-01 :arg1 ( software :mod ( kind :mod this ) ) ) :arg0-of ( use-01 :arg1 ( software :mod ( kind :mod this ) ) ) ) ) )
cause-01 :arg0 ( thing :arg2-of ( price-01 :arg1 oil ) :arg1-of low-04 ) :arg1 ( decide-01 :arg0 ( company :mod energy ) :arg1 ( leave-15 :arg0 ( company :mod energy ) :arg1 ( legacy :mod ( situation :mod economy ) :arg1-of ( pressure-01 :arg1-of ( cause-01 :arg0 ( monetary-quantity :arg2-of ( price-01 :arg1 oil ) :arg1-of low-04 ) ) ) ) ) )
change-01 :arg1 ( rbs :quant all ) :arg2 rbs :arg2-of ( except-01 :arg1 ( and :op1 ( case-03 :arg1 country_name_0 ) :op2 ( quote-01 :arg1 ( exchange-01 :arg1 ( and :op1 ( exchange-01 :arg1 stock ) :op2 ( exchange-01 :arg1 stock ) ) ) ) ) )
follow-02 :arg0 he :arg1 ( trace :consist-of ( and :op1 richards :op2 smith :op3 lester :op4 lester :op5 pat :op6 willie :op7 willie ) )
push-02 :arg0 ( person :arg0-of ( act-01 :arg1 ( act-01 :arg0 person ) ) ) :arg2 ( person :arg0-of ( act-01 :arg1 ( have-org-role-91 :arg2 deputy ) ) ) :time ( since :op1 ( date-entity decade_date-entity_0 ) )
and :op1 ( announce-01 :arg0 ( person_name_0 :arg0-of ( have-org-role-91 :arg2 putin ) ) :arg1 ( like-02 :arg0 person :arg1 ( and :op1 ( withdraw-01 :arg0 person :arg1 ( job :poss person ) :arg2 ( office :mod ivanov :location country_name_1 ) ) :op2 ( propose-01 :arg0 person :arg1 ( vaino :arg0 person :arg1 person ) ) ) ) ) :op2 ( propose-01 :arg0 person :arg1 ( vaino :arg0 person :arg1 person ) ) :medium ( channel :name ( name :op1 mr. ) )
be-located-at-91 :arg1 ( and :op1 ( person :arg0-of ( have-org-role-91 :arg2 actress ) ) :op2 ( comedy :mod ( status :mod greg ) ) ) :arg2 program :time ( since :op1 ( seize-01 :ord ( ordinal-entity ordinal-entity_num_0 :range ( seize-01 :ord ( ordinal-entity ordinal-entity_num_0 ) ) ) ) )
struggle-02 :arg0 ( man :quant num_0 ) :arg1 ( swim-01 :arg0 man :arg2 ( area :mod safe-01 ) ) :arg1-of ( cause-01 :arg0 ( continue-01 :arg1 ( way :poss man ) ) )
create-01 :arg0 ( firm :name ( name :op1 astrazeneca :op2 astrazeneca ) :arg1-of ( create-01 :arg0 ( firm :name ( name :op1 brilique ) :mod country_name_0 ) ) ) :arg1 ( risk-01 :mod this ) :manner ( reduce-01 :arg0 firm :arg1 ( world-region :mod clots ) )
'' :arg0 ( macfarlane :name ( name :op1 cbc :op2 macfarlane ) ) :arg1 ( 14-year-old :arg1 ( 14-year-old :poss he ) :arg1-of ( resemble-01 :arg2 ( '' :arg1 pig ) ) ) :mod just
possible-01 :polarity - :arg1 ( help-02 :arg0 ( person :arg0-of ( use-01 :arg1 ( person :arg0-of use-01 ) ) ) :arg1 person :time ( hear-01 :arg0 person :arg1 ( thing :manner-of ( byron :arg1 ( macdonald :mod byron ) ) ) ) )
think-01 :arg0 i :arg1 ( show-01 :arg0 we :arg1 ( sense-01 :arg0 we :arg1 humor :mod great ) :arg2 we ) :time ( time :arg1-of same-01 )
meet-03 :arg0 ( person :arg1-of ( neighbor-01 :arg2 relieved ) :arg0-of ( tell-01 :arg1 ( turn-02 :arg1 ( life :poss person ) :arg2 ( throat :part-of person ) ) ) :arg2 person )
reveal-01 :arg0 ( survey-01 :arg1 ( survey-01 :time ( before :op1 now :duration ( temporal-quantity temporal-quantity_num_0 :unit month ) ) ) ) :arg1 album :time yet
have-concession-91 :arg1 ( show-01 :arg0 i :arg1 ( accurate :domain ( thing :arg2-of ( result-01 :arg1 ( thing :arg2-of ( result-01 :arg1 ( store :name ( name :op1 yougov ) ) ) ) ) ) :degree ( equal :compared-to ( store :mod record :poss ( store :name ( name :op1 soho ) ) ) ) ) :arg1-of ( cause-01 :arg0 ( count-01 :polarity - :arg0 they :arg1 ( number :quant-of ( and :op1 ( person :mod female ) :op2 ( person :arg0-of ( enthusiasts :arg1 ( or :op1 store :op2 ( forum :mod online ) ) :mod actual ) ) ) ) ) ) )
offer-01 :arg0 ( and :op1 store :op2 restaurant ) :arg1 ( and :op1 ( thing :arg2-of shelter-01 ) :op2 ( food :arg1-of free-04 ) ) :arg4 person :arg1-of need-01 :frequency often
dominate-01 :arg0 ( medal :name ( name :op1 silver :op2 medal :op3 medal :op4 medal :op5 medal :op6 medal :op7 medal ) ) :arg1 country_name_2
start-01 :arg1 it
and :op1 ( team :arg0-of ( have-org-role-91 :arg1 ( team :name ( name :op1 quarter-finals ) ) ) :mod both ) :op2 ( determine-01 :arg0 match-03 :arg1 ( person :arg0-of ( win-01 :ord ( ordinal-entity ordinal-entity_num_0 ) ) :arg0-of ( finish-01 :arg1 ( match-03 :arg0 ( group :mod six-team ) :ord ( ordinal-entity ordinal-entity_num_1 ) ) ) ) )
allow-01 :arg0 ( person :mod country_name_0 ) :arg1 ( take-01 :arg0 you :arg1 break :arg3 all )
insist-01 :arg0 person_name_0 :arg1 ( serious-02 :polarity - :arg1 ( and :op1 ( person_name_1 :arg0-of ( have-org-role-91 :arg2 president ) ) :op2 ( metropolis :mod hillary ) ) :time ( claim-01 :arg0 person :arg1 ( '' :arg0 ( and :op1 ( person :arg0-of ( have-org-role-91 :arg2 president ) ) :op2 ( person :arg0-of ( have-org-role-91 :arg1 ( group :mod terrorist :part-of state ) ) ) ) :arg1 ( person :arg0-of ( have-org-role-91 :arg1 ( group :mod terrorist :poss ( state :mod terrorist ) ) ) :arg0-of ( try-01 :arg1 ( remove-01 :arg0 person :arg1 ( dispute-01 :mod last :location ( around :op1 campaign-01 ) ) ) ) ) ) ) :time ( before :op1 now :duration ( few :op1 ( temporal-quantity temporal-quantity_num_0 :unit week ) ) ) )
say-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg2 ambassador ) ) :arg1 ( increase-01 :arg1 ( interest-01 :arg1 ( company :mod country_name_0 ) ) :manner dramatic :time ( since :op1 ( remove-01 :arg1 ( sanction-02 :arg1 country_name_2 :mod international ) ) ) )
contrast-01 :arg2 ( detain-01 :arg1 ( person :quant num_0 ) :arg1-of ( cause-01 :arg0 ( connect-01 :arg1 person :arg2 ( investigate-01 :arg1 ( coup :arg1-of attempt-01 ) ) :arg2-of ( include-01 :arg1 ( head :part-of ( and :op1 ( person :arg0-of ( head-01 :arg1 ( chamber :mod commerce :mod commerce ) ) ) :op2 ( person :quant num_1 :arg1-of ( include-91 :arg2 ( person :quant num_1 :arg1-of ( arrest-01 :arg2 ( condition :topic ( control-01 :arg1 forensic ) ) ) ) ) ) ) ) ) ) :time ( date-entity dayperiod_date-entity_0 ) ) )
obligate-01 :arg2 ( put-01 :arg0 ( bank :quant all ) :arg1 ( hand :part-of bank ) :arg2 stone )
break-up-08 :arg1 ( temporal-quantity temporal-quantity_num_0 :unit year ) :arg3 kabata
and :op1 ( take-01 :arg1 traffic :arg3 underground ) :op2 ( provide-01 :arg1 ( flow-01 :arg1 ( pedestrian :arg1-of continue-01 ) ) :location ( along :op1 coast ) )
support-01 :arg0 ( campaign-01 :mod 1-month ) :arg1 bank :manner ( rate :mod ( interest :mod ultra ) ) :mod also
van :arg1 robin :degree slight
and :op1 ( know-01 :polarity - :arg0 i :arg1 ( thing :quant num_0 ) ) :op2 ( and :op1 ( spread-02 :arg1 ( thing :quant num_0 ) :arg1-of wide-02 ) :op2 ( be-located-at-91 :arg1 ( and :op1 ( person :arg0-of ( have-org-role-91 :arg2 ( commander :mod general ) ) ) :op2 ( person :arg0-of ( have-org-role-91 :arg1 ( and :op1 ( person :arg0-of ( have-org-role-91 :arg2 ( commander :mod general ) ) ) :op2 ( person :arg0-of ( have-org-role-91 :arg2 lieutenant ) ) :op3 ( person :arg0-of ( have-org-role-91 :arg2 lieutenant ) ) :op4 ( person :arg0-of ( have-org-role-91 :arg2 lieutenant ) ) :op5 ( person :arg0-of ( have-org-role-91 :arg2 lieutenant ) ) ) :arg0-of ( have-org-role-91 :arg2 lieutenant ) ) ) ) ) )
feel-01 :arg0 i :arg1 ( give-up-07 :arg0 i :arg1 ( owned :arg0 i ) ) :time ( moment :mod that )
hold-04 :arg1 meet-03 :time ( advance-01 :arg1 ( day :quant num_0 :mod this ) :arg1-of ( accept-01 :arg2 center ) )
reflected :arg1 ( project :mod this ) :time ( after :op1 ( and :op1 ( july :quant num_0 ) :op2 ( party :mod ak ) :op3 ( mhp :prep-against ( coup :mod ( unity :mod nation ) ) ) ) )
safe-01 :arg1 you :accompanier ( justice :mod turkish )
and :op1 ( person_name_0 :location prison :arg1-of ( be-located-at-91 :arg2 prison :purpose ( crime-02 :mod another ) ) :arg0-of ( say-01 :arg1 ( involve-01 :arg1 person :arg2 ( die-01 :arg1 person ) ) ) ) :op2 ( sentence-01 :arg1 person :arg2 ( imprison-01 :arg1 person :arg2 ( die-01 :arg1 person ) ) ) :op3 ( and :op1 ( sentence-01 :arg1 person :arg2 ( imprison-01 :arg1 person :arg2 ( commit-02 :arg0 person :arg1 crime-02 ) ) ) :op2 ( direct-01 :arg0 person :arg1 ( person :arg0-of ( have-org-role-91 :arg1 judiciary :arg2 authority ) ) ) )
claim-01 :arg1 ( prevent-01 :arg1 ( intelligence :arg1-of ( give-01 :arg0 ( m?t :location ( footsteps :poss ( person :arg0-of ( lead-02 :arg1 ( organization :mod terrorism ) ) ) ) ) ) ) :arg2 ( hit-01 :arg1 ( sÃ¶nmezate :mod gÃ¶khan ) ) )
contrast-01 :arg1 ( have-org-role-91 :arg0 ( person :quant num_0 :arg0-of ( have-org-role-91 :arg2 officer ) ) :arg1 ( person :quant num_0 :arg0-of ( have-org-role-91 :arg2 officer ) ) :arg2 ( person :quant num_1 :arg0-of ( have-org-role-91 :arg2 officer ) ) :time recent ) :arg2 ( make-18 :arg0 ( and :op1 ( person :arg0-of ( have-org-role-91 :arg2 general ) ) :op2 ( person :mod country_name_0 :mod country_name_1 ) ) :arg1 ( person :arg0-of ( have-org-role-91 :arg2 officer ) ) )
have-concession-91 :arg1 ( finish-01 :arg0 i ) :arg2 ( center :mod medicine :location location_name_0 )
recommend-01 :arg1 ( open-01 :arg1 ( tomb :mod turkes ) :mod again )
say-01 :arg1 ( include-91 :arg1 ( person :quant num_0 :arg1-of ( include-91 :arg2 ( person :arg0-of sail-01 ) ) ) :arg2 ( history :mod california ) ) :arg2 person_name_0
mention-01 :arg0 i :arg1 ( be-located-at-91 :arg1 this :arg2 university_name_0 )
multi-sentence :snt1 ( connect-01 :arg1 ( person :arg0-of play-01 :mod football :quant some ) :arg2 ( and :op1 ( person :arg0-of play-01 :mod football :mod some ) :op2 ( person :arg0-of manage-01 ) :source ( and :op1 club :op2 hakan ) ) :arg1-of direct-02 ) :snt2 Ã¼kÃ¼r
important :degree very :domain animal :mod also :mod also
transmitted :arg1 ( instruct-01 :mod this ) :arg2 ( meet-03 :accompanier ( and :op1 gÃ¼len :op2 poconos ) :mod face-to-face ) :mod usual
multi-sentence :snt1 ( ask-01 :arg1 ( allege-01 :arg1 ( capture-01 :arg1 ( and :op1 person_name_0 :op2 ( person :arg0-of ( Ã¶ksÃ¼z :arg1 adil ) ) ) :location georgia ) ) ) :snt2 ( right-06 :polarity - :arg1 ( information :mod this ) :time moment )
meet-03 :location ( august :quant num_0 )
state-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg1 ( government-organization_name_0 :mod red ) :arg2 president ) ) :arg1 ( start-01 :arg0 person :arg1 ( mobilization :arg1 ( meat :name ( name :op1 sacrificial :op2 meat :op3 meat :op4 meat :op5 meat :op6 meat :op7 meat ) ) :op7 ( convert-01 :arg1 meat :arg2 canister :manner ( manner :mod hygienic ) ) ) :mod great )
possible-01 :arg1 ( pay-01 :arg0 ( citizen :poss we ) :arg1 ( monetary-quantity :arg2-of ( cost-01 :arg1 sacrifice-01 ) ) :manner ( mean-01 :arg1 ( number :mod ( crescent :mod red ) :quant number ) :arg2 ( bank :name ( name :op1 ziraat ) ) ) )
spend-02 :arg0 ( sowa :arg1-of fame-01 ) :arg1 ( temporal-quantity temporal-quantity_num_0 :unit year :arg1-of ( include-91 :arg2 ( building :arg0-of ( build-01 :arg1 ecology ) ) ) ) :time ( before :op1 now :duration ( temporal-quantity temporal-quantity_num_2 :unit year ) )
locate-01 :arg1 ( system :name ( name :op1 reserves ) :arg1-of ( use-01 :arg2 ( surgery-01 :arg2 heart ) :arg1-of possible-01 ) :arg1-of ( use-01 :arg2 ( surgery-01 :arg2 heart ) ) ) :location ( around :op1 ( and :op1 wrist :op2 ( wrist :part-of wrist ) ) )
and :polarity - :op1 ( thing :domain ( match-03 :mod this ) :ord ( ordinal-entity ordinal-entity_num_0 ) ) :op2 ( game :mod last :topic ( compete-01 :arg0 ( club :quant num_1 :mod outstanding :poss we ) ) ) :op3 ( leave-11 :arg0 match-03 :time ( behind :op1 ( date-entity century_date-entity_0 ) ) )
superior-01 :polarity - :arg1 ( person :arg0-of oppose-01 ) :arg2 ( other :mod each ) :time ( face :part-of ( face :part-of num_0 ) )
hope-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg1 ( person :arg0-of ( have-org-role-91 :arg1 country_name_0 :arg2 spokesman ) ) :arg2 spokesman ) ) :arg1 ( return-01 :polarity - :arg1 person :arg4 ( message :arg0-of ( ask-02 :arg1 ( comment-01 :arg0 person ) ) ) :arg1-of quick-02 )
watch-01 :arg0 we :arg1 ( house :prep-with ( and :op1 ( paint :mod white ) :op2 blue ) ) :time ( go-02 :arg0 we :arg4 bodrum )
budget-01 :polarity - :arg0 you :arg1 it :arg1-of ( cause-01 :arg0 amr-unknown )
and :op1 ( leave-15 :arg0 he :arg1 ( and :op1 ( person :arg0-of guard-01 ) :op2 car ) ) :op2 ( return-01 :arg1 he :arg4 ( country :poss he ) :manner happy )
phone-number-entity phone-number-entity_num_0
say-01 :arg0 company :arg1 ( provide-01 :arg0 ( cut-02 :mod additional ) :arg1 ( space :arg1-of ( need-01 :purpose ( get-05 :arg1 company :arg2 ( period :arg1-of trouble-01 :location market ) ) ) ) )
say-01 :arg0 he :arg1 ( need-01 :arg0 we :arg1 ( economy :arg0-of effective-04 :beneficiary majority :beneficiary ( and :op1 ( sea :location north ) :op2 ( country :mod whole ) ) ) ) :medium ( thing :arg1-of state-01 )
contrast-01 :arg2 ( possible-01 :polarity - :arg1 ( say-01 :arg1 ( spread-03 :arg0 he :arg1 ( temperature :mod any ) ) :mod even ) )
say-01 :arg0 ( person_name_0 :arg0-of ( win-01 :arg1 ( titles :quant num_0 ) :time previous ) ) :arg1 ( situation :arg1-of special-02 :domain this )
dismiss-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg1 country_name_0 :arg2 putin ) ) :arg1 ( person :mod country_name_1 ) :arg1-of special-02
include-91 :arg1 ( and :op1 ( steel :quant ( volume-quantity volume-quantity_num_0 :unit kilogram ) ) :op2 ( concrete :quant ( mass-quantity mass-quantity_num_1 :unit kilogram ) ) ) :arg2 ( and :op1 concrete :op2 ( support-01 :quant num_2 ) )
and :op1 ( show-01 :arg0 this :arg1 ( person :arg0-of specialize-01 :arg1-of arm-01 :quant multiple ) ) :op2 ( activity-06 :arg0 ( person_name_0 :arg0-of ( have-org-role-91 :arg2 ( commissioner :mod philadelphia ) ) ) :location station )
contrast-01 :arg2 ( propose-01 :arg0 i :arg1 ( propose-01 :arg1 ( give-01 :arg1 ( risk-01 :arg2 person ) :arg2 person :time ( after :op1 now :quant ( up-to :op1 ( temporal-quantity temporal-quantity_num_0 :unit year ) ) ) :purpose ( reduce-01 :arg0 person :arg1 ( risk-01 :arg2 ( problem :topic cardiovascular ) ) ) :degree further ) ) )
and :op1 ( excite-01 :arg1 i :degree more ) :op2 ( turned :arg1 i :arg1-of ( resemble-01 :arg2 pig ) :arg1-of ( resemble-01 :arg2 pig ) ) :degree more
person :arg0-of tour-01 :location ( and :op1 sun :op2 ( person :arg0-of tour-01 ) :op3 ( shock-01 :arg0 ( life :poss person ) ) )
indicate-01 :arg0 ( say-01 :arg0 she :arg1 ( say-01 :arg0 she :arg1 ( give-up-07 :polarity - :arg0 that :arg1 ( candidate :beneficiary ( candidate :beneficiary ( court :mod c ) ) :condition elect-01 ) ) ) )
have-03 :arg0 they :arg1 break :time ( before :op1 ( deciding :arg0 they :arg1 ( thing :arg1-of ( do-02 :time future ) ) ) )
contrast-01 :arg1 ( inspire-01 :arg0 ( memory :mod bottom ) :arg1 ( line :mod bottom ) ) :arg2 ( say-01 :arg0 ( person :arg0-of observe-01 :quant some ) :arg1 ( say-01 :arg0 ( person :arg0-of observe-01 :quant some ) :arg1 ( product_name_1 :mod race :domain line ) ) )
announce-01 :arg1 ( thing :arg2-of ( result-01 :arg1 congress ) :mod preliminary ) :time ( by :op1 ( date-entity dayperiod_date-entity_0 ) ) :medium tuesday
progress-01 :arg1 ( person :mod country_name_0 ) :mod surprise-01 :location here :time ( after :op1 ( olympics :arg0 person :arg1 ( win-01 :arg0 person :arg1 ( team :quant num_0 :mod last ) ) ) )
cause-01 :arg0 ( factor :mod ( factor :quant few :time now ) ) :arg1 ( feel-01 :arg0 bitter :arg1 ( boiled :arg1 ( boiled :location surface ) :duration ( temporal-quantity temporal-quantity_num_0 :unit year ) ) )
say-01 :arg0 he :arg1 ( and :op1 ( close-01 :arg0 he :arg1 door ) :op2 ( drink-01 :arg0 he :arg1 coffee :duration period ) )
say-01 :arg0 he :arg1 ( and :op1 ( possible-01 :polarity - :arg1 ( go-02 :arg0 i :arg4 vetted ) :time ever :frequency ( rate-entity-91 :arg3 ( temporal-quantity temporal-quantity_num_0 :unit day ) ) ) :op2 ( prepare-02 :arg0 i :arg1 i :arg2 ( order-01 :arg0 i :arg2 ( each :arg1-of ( include-91 :arg2 they ) ) ) ) ) :time ( day :mod every :mod ( percentage-entity percentage-entity_num_0 ) )
possible-01 :arg1 ( find-01 :arg0 that :arg1 ( favourites :mod old :poss they :mod old ) :beneficiary ( customer :quant most ) :arg1-of possible-01 )
write-01 :arg0 ( person :quant some :arg1-of ( participate-01 :arg0 protest-01 ) :arg0-of protest-01 ) :arg1 ( posting :prep-against ( wall :poss ( person :arg0-of ( have-org-role-91 :arg2 ( president :mod interim ) ) ) ) )
send-01 :arg1 money :arg2 ( form :poss ( member :arg2-of ( have-org-role-91 :arg1 organization ) ) ) :time ( send-01 :arg1 money :arg2 ( gulen :polarity - :arg1 money ) )
affect-01 :arg0 ( rate :mod interest ) :arg1 positive :mod also
and :op2 ( close-01 :arg0 he :arg1 ( press :arg1-of ( last-01 :arg2 ( temporal-quantity temporal-quantity_num_0 :unit minute ) ) ) )
questionnaire :arg1 ( thing :arg2-of ( price-01 :arg1 ( and :op1 fortress :op2 ( west :part-of east ) ) ) )
after :op1 ( begin-01 :arg1 galaxies )
begin-01 :arg0 ( channel :quant num_0 :arg1-of ( range-01 :arg2 ( range-01 :arg3 ( range-01 :arg3 ( person :arg2-of staff-01 ) ) ) :arg1-of wide-02 ) ) :arg1 ( work-01 :arg0 channel :purpose ( cut-off-04 :arg0 we :arg1 tsunami ) )
think-01 :arg0 we :arg1 ( contrast-01 :arg1 ( have-03 :polarity - :arg0 we :arg1 news :source home ) :arg2 ( come-01 :arg1 ( instruct-01 :arg2 ( and :op1 we :op2 we ) ) :arg4 ( moment :mod exact ) ) ) :location ( word :quant num_0 :arg1-of ( include-91 :arg2 ( word :part-of shooting ) ) )
help-01 :arg0 i :arg1 ( and :op1 ( have-03 :polarity - :arg0 we :arg1 ( time :arg1-of hard-04 ) ) :op2 ( print-01 :arg0 we :arg1 ( thing :arg1-of answer-01 ) ) ) :arg2 we
be-located-at-91 :arg1 they :arg2 ( under :op1 ( hand :part-of we ) )
and :op1 ( operate-01 :arg1 ( operation :name ( name :op1 izmir ) :mod finance :mod country_name_0 ) ) :op2 ( carry-out-03 :arg1 operation :location ( university :location-of ( detain-01 :arg1 university :arg2 ( address :poss ( person :quant num_0 :arg2-of suspect-01 :source university ) ) ) ) :location ( university :location izmir ) )
accuse-01 :arg1 ( person :arg0-of ( have-org-role-91 :arg1 family :arg2 member ) ) :arg2 ( mess-up-02 :arg0 person :arg1 ( finger :part-of ( finger :part-of person ) ) :time ( and :op1 show-04 :op2 ( try-02 :arg1 finger ) ) ) :time previous
complete-01 :arg1 ( investigate-01 :mod comprehensive ) :time ( before :op1 ( complete-01 :arg1 investigate-01 ) )
and :op1 ( lie :arg1 we ) :op2 ( register-02 :arg1 we ) :time ( before :op1 ( age-01 :arg1 we :arg2 ( temporal-quantity temporal-quantity_num_0 :unit day ) ) )
multi-sentence :snt1 ( possible-01 :arg1 ( owe-01 :arg0 they :arg1 ( gratitude :poss they ) :arg2 ( person :arg0-of ( visit-01 :arg1 they ) ) ) :mod also ) :snt2 ( ask-02 :arg0 ( god :mod that ) :arg1 ( settle-03 :arg1 he ) :arg2 he )
incident :time-of ( take-01 :arg0 ( work-01 :arg1 review-01 ) :arg1 ( and :op1 ( break-01 :arg1 ( bag :mod ( part :mod bone ) ) ) :op2 ( take-01 :arg1 incident :arg3 ( institution :mod forensic ) ) ) )
result-01 :arg1 ( thing :arg2-of ( result-01 :arg1 ( research-01 :arg0 family :arg1-of miss-01 ) ) ) :arg2 ( thing :arg2-of ( result-01 :arg1 ( research-01 :arg0 ( person :arg0-of ( have-rel-role-91 :arg1 ( person :arg0-of ( have-rel-role-91 :arg1 ( person :arg0-of ( have-rel-role-91 :arg1 ( person :arg0-of ( have-rel-role-91 :arg1 ( person :arg0-of ( have-rel-role-91 :arg1 ( person :arg0-of ( have-rel-role-91 :arg1 ( person :arg0-of ( have-rel-role-91 :arg1 ( person :arg0-of ( have-rel-role-91 :arg2 boyfriend ) ) :arg2 boyfriend ) ) :arg2 s. ) ) :arg2 s. ) ) ) ) ) ) ) ) ) ) ) ) )
say-01 :arg0 ( information :arg1-of receive-01 ) :arg1 ( take-01 :arg1 ( person :quant num_0 :arg1-of ( include-91 :arg2 ( person :arg0-of ( attend-01 :arg1 ( festival :mod youth ) :time ( date-entity decade_date-entity_0 ) ) ) ) ) :arg3 hospital )
say-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg1 ( publication_name_0 :poss ( and :op1 ( manage-01 :arg1 prison ) :op2 pension ) :arg2 spokesman ) ) ) :arg1 ( kill-01 :arg1 ( person :quant num_0 :arg1-of imprison-01 :arg1-of ( determine-01 :time yet :arg1-of ( cause-01 :arg0 ( cause-01 :arg0 ( prison :location city ) :arg1 ( prison :location city ) ) ) ) ) )
measure-02 :arg1 ( oppose-01 :arg1 ( '' :location macedonia ) )
multi-sentence :snt1 ( get-05 :mode imperative :arg0 we :arg1 party :arg2 inside ) :snt2 ( say-01 :mode imperative :arg0 we :arg1 ( possible-01 :arg1 ( take-01 :arg0 ( slash :op1 we :op2 country ) :arg1 outside ) ) )
say-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg2 ( athletes :mod nation ) ) ) :arg1 ( goodbye :prep-to olympics :domain ( person :mod nation :arg0-of ( have-org-role-91 :arg2 olympics ) ) :mod ( overall :ord ( ordinal-entity ordinal-entity_num_0 ) ) )
play-01 :arg0 ( we :quant ( multiple :op1 num_0 ) :poss we ) :arg1-of ( cause-01 :arg0 ( play-11 :arg0 we :arg2 ( olympics :quant num_1 :arg1-of ( mean-01 :arg2 ( vs :arg1 match-03 ) ) ) ) )
and :op1 ( category :domain ( win-01 :arg0 ( company :arg0-of ( win-01 :arg1 ( ezekiel :name ( name :op1 ezekiel ) :mod uefa ) ) ) ) :arg2 ( ordinal-entity ordinal-entity_num_0 ) :time ( career :poss he ) ) :op2 ( serve-01 :arg0 ( person :arg0-of ( serve-01 :arg1 ( final :mod international ) ) ) :arg2 ( final :mod international ) )
say-01 :arg0 ( thing :arg1-of state-01 ) :arg1 ( thing :arg1-of state-01 )
struggle-01 :arg0 ( and :op1 politics :op2 commerce :op3 transport-01 :op4 energy :op5 energy ) :arg2 terrorism
shouting :location i
complain-01 :polarity - :arg0 i :arg1 pill
include-91 :arg1 this :arg2 ( child :quant num_0 :arg1-of ( include-91 :arg2 ( child :mod this ) ) )
sport :mod new :mod this :arg0-of ( reveal-01 :arg1 ( potential :domain ( reveal-01 :arg1 ( potential :poss ( motorcycles :arg1-of actual-02 :arg1-of ( touring :arg2 ( and :op1 ( improve-01 :arg1 motor ) :op2 ( improve-01 :arg1 special ) ) ) ) ) ) ) )
shut-down-05 :arg0 ( person :arg0-of ( have-org-role-91 :arg1 ( ministry :mod ( ministry :mod finance ) :poss ( group_name_0 :mod sakarya ) ) ) ) :arg1 ( person :arg0-of ( have-org-role-91 :arg2 ( person :arg0-of inspect-01 ) ) ) :location ( class :arg1-of ( close-01 :arg0 ( investigate-01 :arg0 person ) ) ) :location ( province_name_1 :location ( province_name_1 :mod city ) )
disease :domain ( disease :arg1-of ( increase-01 :time ( year :mod recent ) ) )
start-01 :arg0 ( government-organization :arg0-of ( govern-01 :arg1 federal ) ) :arg1 ( fund-01 :arg0 ( government-organization :arg0-of ( govern-01 :arg1 federal ) ) :arg1 ( rate-entity-91 :arg1 num_0 :arg2 ( temporal-quantity temporal-quantity_num_0 :unit year ) ) :arg1-of ( mean-01 :arg2 ( force-01 :arg1 ( person :arg0-of ( reside-01 :arg1 ( island :mod rhode ) ) ) :arg2 ( out-06 :arg1 person :arg2 top :manner ( help-01 :polarity - :arg0 person :arg1 ( issue-02 :arg0 ( complex :mod more ) :arg1-of legal-02 ) ) ) ) ) )
exemplify-01 :arg0 ( and :op1 ( content-01 :arg1 they :arg2 village :degree very ) :op2 ( add-02 :arg0 ( and :op1 person :op2 ( person :location village ) ) :arg2 ( last :mod last ) ) )
and :op1 ( look-01 :arg0 we :arg1 ( incident :mod this ) ) :op2 ( look-01 :arg0 we :arg1 ( incident :mod this ) )
phone-number-entity phone-number-entity_num_0
die-01 :quant num_0
design-01 :arg1 model :arg3 ( determine-01 :arg0 model :arg1 ( home :domain ( thing :arg1-of ( resemble-01 :arg2 ( thing :arg1-of ( resemble-01 :arg2 ( thing :arg1-of ( resemble-01 :arg2 ( thing :arg2-of ( condition-01 :arg1 ( thing :arg1-of ( resemble-01 :arg2 ( thing :arg1-of ( resemble-01 :arg2 ( thing :arg1-of ( resemble-01 :arg2 ( thing :arg1-of ( resemble-01 :arg2 ( thing :arg1-of ( resemble-01 :arg2 ( thing :location world ) :time once ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) )
and :op1 ( evaporated :arg1 ( thing :arg1-of ( mean-01 :arg2 ( steam :polarity - ) ) ) ) :op2 ( destroy-01 :arg0 ( cooler :arg1 water ) :arg1 thing )
and :op1 ( give-01 :arg0 plate :arg1 ( way :manner-of ( bonds :arg0 we :arg1 family ) ) :arg2 we :time always ) :op2 ( prepare-02 :arg0 plate :arg1 we :arg2 ( make-01 :arg0 we :arg1 dinner ) ) :op3 ( say-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg2 '' ) ) :arg1 ( galicia :mod louis ) )
and :op1 ( obligate-01 :arg1 we :arg2 ( forget-01 :polarity - :arg0 we :arg1 that ) ) :op2 ( fear-01 :arg0 we :arg1 ( possible-01 :polarity - :arg1 ( avoid-01 :arg0 this :arg1 ( carry-01 :arg0 this :arg1 attitude ) ) :mod also ) )
contrast-01 :arg2 ( and :op1 ( last-01 :arg1 ( divide-02 :arg1-of go-on-15 ) :arg2 ( multiple :op1 ( temporal-quantity temporal-quantity_num_0 :unit month ) ) :arg1-of clear-06 :duration ( multiple :op1 ( temporal-quantity temporal-quantity_num_1 :unit month ) ) ) :op2 ( shoot-02 :arg0 country_name_0 :arg1 country_name_1 :time ( after :op1 ( shoot-02 :arg0 country :arg1 country :arg1-of ( cause-01 :arg0 ( potential :domain ( start-01 :arg1 ( converse-01 :arg1 ( person :quant num_0 :arg0-of lead-02 ) :mod definite :mod definite ) ) ) ) ) ) ) )
contrast-01 :arg2 ( think-01 :arg0 i :arg1 ( see-01 :arg0 you :arg1 ( see-01 :arg0 you :arg1 ( change-01 :quant ( lot :degree more ) ) ) ) )
say-01 :arg0 ( thing :source ( url-entity :value kremlin :part-of ( url-entity :value kremlin ) ) ) :arg1 ( ivanov :arg0 ( challenging :mod this ) :arg1 ( possible-01 :arg1 ( call-01 :arg0 you :arg1 you :arg2 ( thing :arg1-of ( call-01 :arg0 you :arg2 ( thing :arg1-of ( call-01 :arg0 you :arg2 i :duration ( temporal-quantity temporal-quantity_num_0 :unit year ) ) ) ) ) ) :mod even ) :arg1-of ( cause-01 :arg0 ( excerpt :arg1 ( website :poss ( person_name_0 :arg0-of ( have-org-role-91 :arg1 country_name_1 ) ) ) ) ) )
expect-01 :arg1 ( return-01 :arg1 ( program :ord ( ordinal-entity ordinal-entity_num_0 ) :part-of program ) :arg4 screen :time ( season :ord ( ordinal-entity ordinal-entity_num_1 ) ) )
and :op1 ( combine-01 :arg0 ( person :arg0-of engineer-01 ) :arg1 ( and :op1 gated :op2 viaduct ) :arg2 ( north :part-of strait ) ) :op2 ( connect-01 :arg1 person :arg2 ( bridge :mod this ) :time now )
possible-01 :arg1 ( obtain-01 :arg0 you :arg1 ( person :mod some :mod ( new :mod even ) ) :time ( hunt :arg0 person ) )
down :direction ( down :op1 perfection )
contrast-01 :arg2 ( reach-01 :arg1 ( point :quant some :arg1-of ( include-91 :arg2 ( point :mod turn-02 ) ) ) :manner slow )
and :op1 ( continue-01 :arg0 ( and :op1 ( person :arg0-of reside-01 ) :op2 ( authority :mod other ) ) :arg1 ( discuss-01 :arg0 we :arg2 ( and :op1 committee :op2 ( ministry :topic ( health :mod reconnaissance ) ) ) ) :time ( before :op1 now :duration ( between :op1 ( temporal-quantity temporal-quantity_num_0 :unit month ) :op2 ( temporal-quantity temporal-quantity_num_1 :unit month ) ) ) ) :op2 ( continue-01 :arg0 ( and :op1 ( person :arg0-of reside-01 ) :op2 ( ministry :topic health ) ) :arg1 ( and :op1 committee :op2 ( ministry :topic health ) ) :manner ( manner :mod positive ) :purpose ( concern-01 :arg0 and :arg1 and ) )
say-01 :arg0 ( person_name_0 :arg0-of ( have-org-role-91 :arg2 eric ) ) :arg1 ( alarm-01 :arg0 ( thing :arg1-of ( decide-01 :arg3 ( thing :arg1-of ( decide-01 :arg3 ( thing :arg1-of ( decide-01 :arg3 ( thing :arg1-of ( decide-01 :arg3 ( thing :arg1-of ( decide-01 :arg3 ( thing :arg1-of ( decide-01 :arg3 ( thing :arg1-of ( decide-01 :arg3 ( thing :arg1-of ( decide-01 :arg3 ( thing :arg1-of ( decide-01 :arg3 ( thing :arg1-of ( decide-01 :arg3 ( thing :arg1-of ( decide-01 :arg3 ( thing :arg1-of ( decide-01 :arg3 ( thing :arg1-of ( decide-01 :arg3 court ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) )
and :op1 ( greeted :domain ( process-02 :arg1 life ) ) :op2 ( relieved :arg0 ( person :arg1-of neighbor-01 :arg0-of ( turn-02 :arg1 person :arg2 message ) ) :arg1 she )
significant-02 :arg1 ( emotional :arg1-of allege-01 )
additions :arg0 ( and :op1 ( village :mod maa ) :op2 ( village :time ( late :degree most ) ) ) :arg1 game :time ( after :op1 now :quant ( temporal-quantity temporal-quantity_num_0 :unit year ) ) :manner ( need-01 :polarity - :arg1 ( decorate :arg1 ( worshipped :degree too ) ) )
' :arg0 i :arg1 ( say-01 :arg0 i :arg1 ( race-02 :arg0 i :mod last :mod this ) ) :degree total
and :op1 ( twisted :arg1 ( field :prep-with ball ) ) :op2 ( throw-01 :arg0 you :arg1 ball :arg2 goal ) :op3 ( make-18 :arg0 ( person :mod country_name_0 ) :arg1 ( num_0 :arg2-of ( lead-01 :arg0 person ) ) :time then )
and :op1 ( identify-01 :arg0 ( person :arg0-of analyze-01 ) :arg1 ( sign :ord ( ordinal-entity ordinal-entity_num_0 ) :mod unrest ) ) :op2 ( appease-01 :arg0 person :arg1 ( person :arg0-of ( oppose-01 :arg1 they ) ) ) :op3 ( say-01 :arg0 person :arg1 ( expert-01 :arg1 ( person :arg1-of expert-01 ) :arg2 deactivation ) )
say-01 :arg0 he :arg1 ( and :op1 ( add-02 :arg0 ( person :arg0-of ( have-org-role-91 :arg2 head-of-state ) ) :arg1 ( item :mod new ) :arg2 menu ) :op2 ( want-01 :arg0 person :arg1 ( change-01 :arg0 person :arg1 item ) ) )
say-01 :arg0 he :arg1 ( thing :arg1-of ( say-01 :arg0 he ) :arg1-of ( mean-01 :arg2 ( thing :arg1-of ( say-01 :arg0 he ) :arg1-of ( mean-01 :arg2 ( thing :arg1-of ( say-01 :arg0 he ) ) ) ) ) :location ( table :mod dinner ) :location ( table :mod dinner ) )
re-were :arg1 country :arg2 ( foot :part-of country ) :time ( after :op1 ( sidelined :arg1 ( method :quant most :arg1-of ( include-91 :arg2 ( method :arg0-of ( make-01 :arg1 food :time crisis ) ) ) ) ) )
impact-01 :arg0 interest-01 :arg1 ( sell-01 :mod discount ) :mod positive
stipulate-01 :arg0 ( thing :arg1-of ( call-01 :arg2 ( and :op1 ( person :arg0-of ( have-org-role-91 :arg2 president ) ) :op2 ( rate :mod interest ) ) ) ) :arg1 ( thing :arg1-of ( call-01 :arg2 ( and :op1 ( person :arg0-of ( have-org-role-91 :arg2 president ) ) :op2 ( rate :mod interest ) ) ) )
have-rel-role-91 :arg0 i :arg1 ( person :arg0-of ( have-org-role-91 :arg1 ( bank :arg1-of public-02 ) :arg2 friend ) ) :arg2 friend
loan-01 :arg1-of personal-02 :prep-for ( business :arg1-of ( relate-01 :arg2 sensation ) )
cause-01 :arg0 ( attempt-01 :arg0 ( coup :quant num_0 :mod july ) :arg1 ( fetullahci :arg1 ( organization :mod terrorism :arg0-of ( participate-01 :arg1 ( summit :arg1-of ( organize-01 :arg0 ( contractor :mod construct-01 ) :time summit ) ) ) ) ) :time ( converse-01 :arg0 we :arg2 ( newspaper :poss we ) ) ) :time meantime :time ( late :degree more )
and :op1 ( complain-01 :arg0 we :arg1 ( and :op1 ( complain-01 :arg0 we :arg1 ( thing :arg2-of ( name-01 :arg1 bank ) ) ) :op2 ( information :topic ( person :arg1-of ( name-01 :arg2 bank ) ) ) ) ) :op2 ( give-01 :arg0 we :arg1 ( some :arg1-of ( include-91 :arg2 ( line :mod ( complain-01 :arg0 bank ) ) ) ) :arg2 apply-01 )
possible-01 :arg1 ( prolonged :arg1 season :time ( until :op1 ( end-01 :arg1 ( or :op1 company_name_1 :op2 language_name_1 ) ) ) )
reach-01 :arg1 ( agree-01 :arg1 ( cut-02 :arg1 ( thing :arg1-of pay-01 :mod this ) ) )
give-01 :arg1 ( nani :arg1-of ( luis :arg2 luis ) :mod martyr ) :arg2 ( war :prep-with person_name_0 )
go-10 :arg1 pereira :arg2 fenerbahce
and :op1 ( split-01 :arg1 ( butterfly :name ( name :op1 butterfly :op2 butterfly ) ) :location country_name_0 :arg1-of ( show-01 :arg0 ( favorites :quant ( between :op1 ( temporal-quantity temporal-quantity_num_0 :unit minute ) :op2 ( temporal-quantity temporal-quantity_num_1 :unit year ) ) ) ) ) :op2 ( reach-01 :arg1 ( temporal-quantity temporal-quantity_num_3 :unit second ) )
kill-01 :arg1 ( and :op1 ( person :quant num_0 :arg0-of ( have-rel-role-91 :arg2 guardhouse ) ) :op2 ( person :arg0-of ( have-rel-role-91 :arg1 person :arg2 friend ) ) ) :arg1-of ( think-01 :arg0 i ) :arg1-of ( think-01 :arg0 i ) :arg1-of ( think-01 :arg0 i ) :arg1-of ( think-01 :arg0 i ) :arg1-of ( think-01 :arg0 i ) :arg1-of ( think-01 :arg0 i ) :arg1-of ( think-01 :arg0 i ) :arg1-of ( think-01 :arg0 i ) :arg1-of ( think-01 :arg0 i ) :arg1-of ( think-01 :arg0 i ) :arg1-of ( think-01 :arg0 i ) :arg1-of ( think-01 :arg0 i ) :arg1-of ( think-01 :arg0 i ) :arg1-of ( think-01 :arg0 i ) :arg1-of ( think-01 :arg0 i ) :arg1-of ( think-01 :arg0 i ) :arg1-of ( think-01 :arg0 i ) :arg1-of ( think-01 :arg0 i ) :arg1-of ( think-01 :arg0 i ) :time ( think-01 :arg0 i )
cause-01 :arg1 ( write-01 :arg0 we :arg1 ( screen :mod entire ) :manner ( move :polarity - ) )
claim-01 :arg0 that :arg1 ( commit-02 :arg0 they :arg1 suicide :manner ( stick-01 :arg0 they :arg1 ( gun :poss he ) :arg2 ( rate-entity-91 :arg1 ( gun :poss he ) :arg2 gun ) ) )
and :op1 ( screens :arg0 ( screens :quant num_0 :name ( name :op1 atv :op2 atv :op3 mÃ¼ge ) ) :arg1 ( program :name ( name :op1 kemal ) :arg1-of ( kemal :arg2 ( program :name ( name :op1 kemal ) ) ) ) :arg2 ( program :name ( name :op1 kemal :op2 kemal :op3 s. :op4 brother :op5 hussein :op6 s. :op7 s. ) ) ) :op2 ( report-01 :arg1 ( work-01 :arg1 work-01 :location ( digging :arg1-of ( own-01 :arg0 state ) ) ) ) :op3 ( have-03 :arg1 ( report :topic work-01 ) )
and :op1 ( cause-01 :arg0 ( pressure-01 :arg0 ( pressure-01 :arg0 ( person :arg0-of ( have-rel-role-91 :arg1 woman :arg2 husband ) ) ) ) :arg1 house :time ( before :op1 now :quant ( about :op1 ( temporal-quantity temporal-quantity_num_0 :unit month ) ) ) ) :op2 ( state-01 :arg0 person :arg1 that )
contrast-01 :arg1 this :arg2 ( victim :poss ( person :arg0-of rebel-01 :location ( passport :poss animal ) ) :domain ( citizen :poss we ) )
competition :location ( stadium :mod olympic :location ( stadium :name ( name :op1 de :op2 de :op3 janeiro ) ) ) :time ( end-01 :arg1 ( shoot-02 :arg1 woman ) )
article :part-of article
see-01 :arg1 ( thing :arg2-of ( have-part-91 :arg1 ( thing :arg1-of ( find-01 :arg0 we :time so-far ) :arg1-of ( use-01 :arg0 we :time so-far ) ) ) :arg1-of ( see-01 :arg0 we :time so-far ) ) :domain this :mod besides
seem-01 :arg1 ( strengthen-01 :arg1 ( position :poss they ) :time ( after :op1 coup :quant ( up-to :op1 ( temporal-quantity temporal-quantity_num_0 :unit year ) ) ) )
arrest-01 :arg1 ( and :op1 ( person :arg0-of ( have-org-role-91 :arg1 ( organization :mod terrorism ) :arg2 member ) ) :op2 ( person :arg0-of ( have-org-role-91 :arg1 ( organization :mod terrorism ) :arg2 member ) ) :op3 ( person :arg0-of ( have-org-role-91 :arg1 ( organization :mod terrorism ) :arg2 member ) ) :op4 ( person :arg0-of ( have-org-role-91 :arg1 organization :arg2 member ) ) :op5 ( person :arg0-of ( have-org-role-91 :arg1 organization :arg2 member ) ) :op6 ( person :arg0-of ( have-org-role-91 :arg1 organization :arg2 member ) ) :op7 ( person :arg0-of ( have-org-role-91 :arg1 organization :arg2 member ) ) )
have-03 :arg0 we :arg1 ( between :op1 ( person :mod country_name_0 ) :op2 ( person :mod country_name_1 ) :quant lot )
agree-01 :arg0 we :arg1 ( issue-02 :quant many :example ( government-organization :arg0-of ( govern-01 :arg1 country_name_0 ) ) ) :arg2 ( and :op1 ( integrity :mod territory ) :op2 ( integrity :mod border ) :source ( and :op1 country_name_1 :op2 ( organization :mod other :mod terrorist ) ) )
and :op1 bag :op2 toys :op3 shit-01 :op4 ( screwdriver :arg1 bag ) :op5 ( nail :arg1 bag :example ( output :mod material ) )
learn-01 :arg1 ( contain-01 :arg0 suspend-01 :arg1 ( contain-01 :arg1 suspend-01 ) )
and :op1 ( vein :arg0 ( femoral :name ( name :op1 femoral ) :mod femoral ) :arg1 ( name :op1 femoral :op2 vein :op3 superficial ) ) :op2 ( take-01 :arg0 femoral :arg1 name :arg3 this )
show-01 :arg0 ( adopt-01 :arg1 ( attitude :poss ( win-01 :arg0 ( person :quant num_0 :arg0-of ( win-01 :arg1 ( golds :quant num_0 ) ) :arg1-of single-02 ) ) ) ) :arg1 ( possible-01 :polarity - :arg1 ( dream-01 :arg1-of repeat-01 ) )
possible-01 :arg1 ( risk-01 :arg1 business :arg2 risk-01 ) :time ( until :op1 ( possible-01 :arg1 ( risk-01 :arg2 ( facility :mod portland :mod alcoa ) ) ) )
and :op1 ( lose-02 :arg0 ( person :arg0-of ( have-org-role-91 :arg1 organization_name_0 :arg2 smelter ) ) :arg1 money ) :op2 ( face-01 :arg0 person :arg1 ( risk-01 :arg2 closure ) )
and :op1 ( painted :arg0 we :arg1 ( house :mod all :location ( and :op1 white :op2 blue ) ) ) :op2 ( blue :name ( name :op1 blue :op2 colors ) )
team :arg0-of ( realize-01 :arg1 ( come-01 :arg1 police :arg4 ( door :mod back :arg1-of ( want-01 :arg0 he ) ) ) ) :time ( enter-01 :arg0 team :arg1 restaurant )
kill-01 :arg1 ( officer :quant num_0 :mod police ) :arg1-of ( cause-01 :arg0 ( attack-01 :arg1 vehicle ) )
use-01 :arg1 ( fund :mod this ) :arg2 ( account-01 :arg0 fund :arg1 ( thing :manner-of ( ask-01 :arg0 he :arg1 ( one :polarity - ) ) ) )
multi-sentence :snt1 ( do-02 :arg0 we :arg1 ( this :mod all ) ) :snt2 ( and :op1 ( move-01 :arg0 we :arg2 ( principle :mod democracy ) ) :op2 ( rule-03 :arg0 law ) :op3 ( rule-03 :arg0 law ) )
and :op1 ( wrong-04 :arg1 ( person :arg0-of ( doubt-01 :arg1 ( see-01 :arg0 person :arg1 ( wrong-04 :arg1 person ) ) ) ) :li num_0 ) :op2 ( wrong-04 :arg1 person :arg2 heathrow ) :li num_0
and :op1 ( be-located-at-91 :polarity - :arg1 ( person :quant ( few :mod only ) ) :arg2 olympics :mod also ) :op2 ( project :mod infrastructure :domain it )
constitute-01 :arg0 ( person :arg0-of ( use-01 :arg1 ( device :arg1-of mobile-02 ) ) :quant ( multiple :op1 num_0 ) ) :arg1 ( revenue :mod advertise-01 :poss company_name_0 ) :arg3 ( advertise-01 :arg1-of mobile-02 ) :time now
discuss-01 :arg1 ( person :arg0-of drive-01 :arg1-of ( involve-01 :arg2 incident ) :quant some :arg1-of ( involve-01 :arg2 incident ) ) :arg2 ( and :op1 ( state-01 :arg0 person :arg1 ( possible-01 :polarity - :arg1 ( detected :arg1 person ) ) ) :op2 ( ask-02 :arg0 person :arg1 ( contact-01 :arg0 person :arg1 ( everyone :arg1-of involve-01 ) ) :arg2 person ) )
contrast-01 :arg1 ( and :op1 ( earn-01 :arg0 club :arg1 ( point :quant num_0 ) ) :op2 ( enable-01 :arg0 team :arg1 ( finish-07 :arg0 we :arg2 we :time first ) :arg2 we ) ) :arg2 ( and :op1 ( defeat-01 :arg1 ( person :arg1-of defeat-01 ) :location ( round-05 :arg1 ( era :name ( name :op1 playoffs ) ) :ord ( ordinal-entity ordinal-entity_num_1 ) ) :ord ( ordinal-entity ordinal-entity_num_1 ) ) :op2 ( miss-02 :arg0 team :arg1 game :time ( year :mod both ) ) )
say-01 :arg0 i :arg1 ( contrast-01 :arg1 ( live-01 :arg0 person :location ( house :poss guest ) :time at-first ) :arg2 ( get-03 :arg1 everything :arg2 ( good :degree more ) :time recent ) )
say-01 :arg0 ( person_name_0 :arg0-of ( have-org-role-91 :arg2 ( minister :mod health ) ) ) :arg1 ( enforce-01 :arg1 contract-02 :manner england :manner england ) :arg1-of ( follow-01 :arg2 vote-01 )
difficult :domain ( possible-01 :polarity - :arg1 ( trust-01 :arg1 ( trust-01 :mod real ) ) )
think-01 :arg1 ( possible-01 :arg1 ( serve-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg1 mr. :arg2 ( president :mod vice ) ) ) :arg1 ( person :arg0-of ( have-org-role-91 :arg2 president ) ) :time ( after :op1 ( term :ord ( ordinal-entity ordinal-entity_num_0 ) ) ) ) :arg1-of ( cause-01 :arg0 ( unconstitutional :domain ( term :ord ( ordinal-entity ordinal-entity_num_1 ) ) ) ) ) :time once
serve-01 :arg0 person_name_0 :arg1 ( person :arg0-of ( have-org-role-91 :arg1 country_name_1 :arg2 ( minister :mod prime ) ) ) :time ( before :op1 ( and :op1 ( person :arg0-of ( have-org-role-91 :arg2 president ) ) :op2 ( person :arg0-of ( have-org-role-91 :arg2 president ) ) :quant ( half :quant 1/2 ) ) )
and :op1 ( install-01 :arg1 ( rate-entity-91 :arg1 ( under :op1 ( monetary-quantity monetary-quantity_num_0 :unit pound ) ) :arg2 ( temporal-quantity temporal-quantity_num_1 :unit year ) ) :time now ) :op2 ( poured :arg1 ( thing :arg2-of ( mean-01 :arg1 ( thing :arg2-of ( mean-01 :arg1 ( thing :arg2-of ( mean-01 :arg1 ( thing :arg2-of ( mean-01 :arg1 ( thing :arg2-of ( mean-01 :arg1 ( thing :arg2-of ( mean-01 :arg1 ( thing :arg2-of ( mean-01 :arg1 ( thing :arg2-of ( mean-01 :arg1 ( thing :arg2-of ( mean-01 :arg1 ( thing :arg2-of ( mean-01 :arg1 ( thing :arg2-of ( mean-01 :arg1 ( thing :arg2-of ( mean-01 :arg1 ( thing :arg2-of ( mean-01 :arg1 ( thing :arg2-of ( mean-01 :arg1 ( thing :arg2-of ( mean-01 :arg1 decks ) :mod all ) ) ) ) :mod last ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) :time now )
contrast-01 :arg1 ( resemble-01 :arg1 ( perform-01 :mod lesman ) :arg2 ( revenge :time ( before :op1 now :quant ( up-to :op1 ( temporal-quantity temporal-quantity_num_0 :unit year ) ) ) ) :degree bit ) :arg2 ( lose-02 :arg1 perform-01 :arg2 ( decider :arg1 perform-02 ) )
call-03 :arg0 ( person :arg0-of ( have-org-role-91 :arg1 ( person_name_0 :arg0-of ( have-org-role-91 :arg2 ( executive :mod emplers ) ) ) :arg2 ( executive :mod chief ) ) ) :arg1 ( stage :mod any :mod further ) :arg2 ( doctor :mod junior )
use-01 :arg1 ( thing :manner-of use-01 ) :arg2 ( protect-01 :arg1 person :arg2 ( attack-01 :instrument gun ) )
justice :domain ( person :arg0-of ( have-org-role-91 :arg1 ( court :mod country_name_0 ) :arg3 ( justice :mod chief ) ) ) :arg3 ( person :arg0-of ( have-org-role-91 :arg1 ( court :mod country_name_1 ) :arg3 justice ) ) :arg4 ( district :mod columbia )
and :op2 ( orient :arg1 we :arg2 woman )
threaten-01 :arg0 ( person :quant num_0 :arg1-of ( include-91 :arg2 ( person :arg0-of ( have-rel-role-91 :arg1 ( person :arg0-of ( have-rel-role-91 :arg2 kid ) ) :arg2 kid ) ) ) :arg0-of ( offer-01 :arg1 ( advise-01 :arg0 person :arg1 ( and :op1 ( person :quant num_1 ) :op2 ( person :mod country_name_0 ) :op3 ( person :arg0-of ( have-rel-role-91 :arg1 person :arg2 child ) ) :op4 ( person :arg0-of ( have-rel-role-91 :arg1 person :arg2 child ) ) :op5 ( person :arg0-of ( have-rel-role-91 :arg1 person :arg2 child ) ) :op5 ( person :arg0-of ( have-rel-role-91 :arg1 person :arg2 child ) ) :op6 ( person :arg0-of ( have-rel-role-91 :arg1 person :arg2 child ) ) :op7 ( person :arg0-of ( have-rel-role-91 :arg1 person :arg2 child ) ) :op7 ( person :arg0-of ( have-rel-role-91 :arg1 person :arg2 child ) ) ) :arg0-of ( advise-01 :arg2 ( hundreds :arg0 person :arg1 ( minor :mod vulnerable :mod unaccompanied ) :location camp ) ) ) ) )
come-01 :arg1 ( and :op1 ( person :arg0-of ( lead-02 :arg1 ( team :mod province ) ) ) :op2 ( person :arg0-of ( lead-02 :arg1 ( team :mod province ) ) ) :op3 ( person :arg0-of ( lead-02 :arg1 team ) ) :op4 ( person :arg0-of ( lead-02 :arg1 team ) ) :op5 ( person :arg0-of ( lead-02 :arg1 team ) ) :op6 ( person :arg0-of ( lead-02 :arg1 team ) ) :op6 ( person :arg0-of ( lead-02 :arg1 team ) ) :op7 ( person :arg0-of ( lead-02 :arg1 ( team :mod province ) ) ) ) :time ( time :mod this ) :mod ( only :polarity - )
multi-sentence :snt1 ( say-01 :arg0 she :arg1 ( make-01 :arg0 ( person :arg0-of ( have-rel-role-91 :arg1 she :arg2 daughter ) ) :arg1 ( toys :poss she ) :frequency often ) ) :snt2 ( and :op1 ( good :domain she ) :op2 ( good :domain she ) :op3 ( possible-01 :arg1 ( lifelike :arg1 she :time always ) ) )
possible-01 :arg1 ( interest-01 :polarity - :arg2 ( force :mod air ) ) :concession ( possible-01 :arg1 ( help-01 :arg0 ( military_name_0 :arg1-of steady-01 :consist-of ( electrons :arg1-of free-04 ) ) :arg1 ( listen-01 :arg0 person :arg1 ( person :arg0-of ( listen-01 :arg1 ( station :mod radio :mod university ) ) ) ) ) )
participate-01 :arg0 ( and :op1 he :op2 ( person :arg0-of ( have-rel-role-91 :arg1 he :arg2 daughter ) ) ) :arg1 ( show-04 :mod variety :example ( and :op1 ( go-02 :arg0 ( person :arg0-of ( have-rel-role-91 :arg1 he :arg2 daughter ) ) ) :op2 ( attend-02 :arg0 ( '' :mod romantic ) :arg1 ( attend-02 :arg1 person ) ) ) )
follow-01 :arg1 ( and :op1 ( person :arg0-of report-01 ) :op2 ( person :arg0-of report-01 ) :op3 ( person :arg0-of report-01 ) :op4 ( person :arg0-of report-01 ) :op5 ( person :arg0-of report-01 ) ) :arg2 ( person :arg0-of ( have-org-role-91 :arg1 ( team :arg0-of serve-01 :mod country_name_0 :mod country_name_1 ) :arg3 ( lead-02 :arg0 person :arg1 location_name_0 ) ) ) :arg3 ( score-entity :op1 num_0 :op2 num_1 )
location :mod remote :domain village :location ( relative-position :op1 ( area :mod urban ) :quant ( some :op1 num_0 ) ) :arg0-of ( cause-01 :arg1 ( inconvenience :arg1 ( person :quant many :mod elderly :arg0-of ( have-rel-role-91 :arg2 patient ) ) :arg1-of ( cause-01 :arg0 ( and :op1 economy :op2 transport-01 :op3 ( limit-01 :mod physical ) ) ) ) )
contrast-01 :arg1 ( provide-01 :arg0 we :arg1 ( service :poss ( and :op1 doctor :op2 b-super ) ) ) :arg2 ( provide-01 :arg0 ( team :mod other ) :arg1 ( service :mod ( medicine :arg3-of free-04 ) :arg1-of free-03 ) :location ( village :location ( village :location wuzhou ) ) :mod also )
and :op1 ( have-part-91 :arg1 ( this :mod only ) :arg2 ( healthy :domain this ) ) :op2 ( carry-out-03 :arg1 ( activity-06 :mod other ) :time ( come-01 :arg1 ( day :arg1-of come-01 ) ) )
say-01 :arg0 ( forecast-01 :arg0 ( forecast-01 :arg0 tower :arg1 ( develop-02 :arg1 ( and :op1 trade-01 :op2 economy ) ) ) ) :arg1 ( and :op1 ( grow-01 :arg1 ( economy :location river_name_0 ) :arg3 ( rate-entity-91 :arg1 num_0 :arg2 num_1 ) ) :op2 ( grow-01 :arg1 economy :arg2 ( above :op1 ( level :mod that ) ) :mod essential ) )
ceremony :mod ( open-02 :arg1 ( ceremony :mod ( open-02 :arg1 ( ceremony :mod ( open-02 :arg1 ( game :mod ( open-02 :arg1 ( game :mod ( open-02 :arg1 ( game :mod ( open-02 :arg1 ( game :mod ( open-02 :arg1 ( game :mod ( open-02 :arg1 ( game :mod ( open-02 :arg1 ( game :mod ( open-02 :arg1 ( game :mod ( open-02 :arg1 ( game :mod ( open-02 :arg1 ( game :mod ( open-02 :arg1 ( game :mod ( open-02 :arg1 ( game :mod ( open-02 :arg1 ( game :mod ( open-02 :arg1 ( game :mod ( open-02 :arg1 ( game :mod ( open-02 :arg1 ( game :mod ( open-02 :arg1 ( game :mod ( open-02 :arg1 ( game :mod ( open-02 :arg1 ( game :mod ( open-02 :arg1 ( game :mod ( open-02 :arg1 ( game :mod ( open-02 :arg1 ( game :mod ( open-02 :arg1 ( game :mod ( open-02 :arg1 ( game :mod ( open-02 :arg1 ( game :mod ( open-02 :arg1 ( game :mod ( open-02 :arg1 ( game :mod ( open-02 :arg1 ( game :mod ( open-02 :arg1 ( game :mod ( open-02 :arg1 ( game :mod ( open-02 :arg1 ( game :mod ( open-02 :arg1 ( game :mod ( open-02 :arg1 ( game :mod ( open-02 :arg1 ( game :mod ( open-02 :arg1 ( game :mod ( open-02 :arg1 ( game :mod ( open-02 :arg1 ( game :mod ( open-02 :arg1 ( game :mod ( open-02 :arg1 ( game :mod ( open-02 :arg1 ( game :mod ( open-02 :arg1 ( game :mod ( open-02 :arg1 ( game :mod ( open-02 :arg1 ( game :mod ( open-02 :arg1 ( game :mod ( open-02 :arg1 ( game :mod ( open-02 :arg1 ( game :mod ( open-02 :arg1 ( game :mod ( open-02 :arg1 ( game :mod ( open-02 :arg1 ( game :mod ( open-02 :arg1 ( game :mod ( open-02 :arg1 ( game :mod ( open-02 :arg1 ( game :mod ( open-02 :arg1 ( game :mod ( open-02 :arg1 ( game :mod ( open-02 :arg1 ( game :mod ( open-02 :arg1 ( game :mod ( open-02 :arg1 ( game :mod ( open-02 :arg1 ( game :mod ( open-02 :arg1 ( game :mod ( open-02 :arg1 ( game :mod ( open-02 :arg1 ( game :mod ( open-02 :arg1 ( game :mod ( open-02 :arg1 ( game :mod ( open-02 :arg1 ( game :mod ( open-02 :arg1 ( game :mod ( open-02 :arg1 ( game :mod ( open-02 :arg1 ( game :mod ( open-02 :arg1 ( game :mod ( open-02 :arg1 ( game :mod ( open-02 :arg1 ( game :mod ( open-02 :arg1 ( game :mod ( open-02 :arg1 ( game :mod ( open-02 :arg1 ( game :mod ( open-02 :arg1 ( game :mod ( open-02 :arg1 ( game :mod ( open-02 :arg1 ( game :mod ( open-02 :arg1 ( game :mod ( open-02 :arg1 ( game :mod ( open-02 :arg1 ( game :mod ( open-02 :arg1 ( game :mod ( open-02 :arg1 ( game :mod ( open-02 :arg1 ( game
find-01 :arg0 ( try-02 :arg0 ( court :poss person ) :arg1 ( and :op1 ( court :mod ( district :mod wollongong ) ) :op2 ( person :arg0-of ( have-org-role-91 :arg2 head-of-state ) ) :op3 ( person :arg0-of ( have-org-role-91 :arg2 head-of-state ) ) :op4 ( person :arg0-of ( have-org-role-91 :arg2 head-of-state ) ) :op5 ( person :arg0-of ( have-org-role-91 :arg2 head-of-state ) ) :op6 ( person :arg0-of ( have-org-role-91 :arg2 head-of-state ) ) :op6 ( person :arg0-of ( have-org-role-91 :arg2 head-of-state ) ) :op6 ( person :arg0-of ( have-org-role-91 :arg2 head-of-state ) ) :op6 ( person :arg0-of ( have-org-role-91 :arg2 head-of-state ) ) :op6 ( person :arg0-of ( have-org-role-91 :arg2 head-of-state ) ) :op6 ( person :arg0-of ( have-org-role-91 :arg2 head-of-state ) ) :op6 ( person :arg0-of ( have-org-role-91 :arg2 head-of-state ) ) :op6 ( person :arg0-of ( have-org-role-91 :arg2 head-of-state ) ) :op6 ( person :arg0-of ( have-org-role-91 :arg2 head-of-state ) ) :op6 ( person :arg0-of ( have-org-role-91 :arg2 head-of-state ) ) :op6 ( person :arg0-of ( have-org-role-91 :arg2 head-of-state ) ) :op7 ( person :arg0-of ( have-org-role-91 :arg2 head-of-state ) ) ) ) :arg1 ( send-01 :arg0 person :arg1 ( information :mod fraudulent ) :arg2 ( send-01 :arg0 person :arg1 ( information :mod fraudulent ) :arg2 ( area :mod urban ) ) )
and :op1 ( important :degree great :domain ( lead-02 :arg0 ( person :arg0-of ( lead-02 :arg1 ( police :mod ( security :mod public ) ) ) ) ) :arg2 ( importance :degree great ) ) :op2 ( organize-01 :arg0 person :arg1 ( team :consist-of ( person :arg0-of ( have-org-role-91 :arg1 ( police :mod lean ) :arg2 officer ) ) :purpose ( carry-out-03 :arg0 team :arg1 investigate-01 ) ) :time immediate ) :time ( during :op1 case-03 )
succeed-01 :polarity - :arg0 they :arg1 ( league :name ( name :op1 rugby :op2 rugby :op3 rugby ) :mod international :mod international ) :time ( before :op1 now :quant ( multiple :op1 ( temporal-quantity temporal-quantity_num_0 :unit year ) ) )
touch-01 :arg0 ( team :mod country_name_0 ) :arg1 ball :degree bare
contrast-01 :arg1 ( include-91 :arg1 ( and :op1 ( man :mod another :location boat ) :op2 ( coach :name ( name :op1 coach ) ) :op3 ( person :arg0-of ( have-org-role-91 :arg2 coach ) ) :op4 ( person :arg0-of ( have-org-role-91 :arg2 coach ) ) :op5 ( person :arg0-of ( have-org-role-91 :arg2 coach ) ) :op5 ( person :arg0-of ( have-org-role-91 :arg2 coach ) :ord ( ordinal-entity ordinal-entity_num_1 ) :arg0-of ( have-org-role-91 :arg1 ( team :ord ( ordinal-entity ordinal-entity_num_1 ) :arg0-of ( have-org-role-91 :arg1 ( woman :ord ( ordinal-entity ordinal-entity_num_1 ) ) :arg2 ( woman :ord ( ordinal-entity ordinal-entity_num_1 ) ) ) :arg0-of ( have-org-role-91 :arg1 ( team :ord ( ordinal-entity ordinal-entity_num_1 ) :arg0-of ( have-org-role-91 :arg1 ( woman :ord ( ordinal-entity ordinal-entity_num_2 ) ) :arg2 ( woman :ord ( ordinal-entity ordinal-entity_num_2 ) ) ) ) ) ) ) ) ) ) :arg2 ( include-91 :arg1 they :arg2 ( they :mod another ) )
cause-01 :arg0 ( write-01 :arg0 ( person_name_0 :arg0-of ( analyze-01 :arg1 intelligence ) :mod central ) :arg1 ( and :op1 ( write-01 :arg0 ( person :arg0-of ( analyze-01 :arg1 intelligence ) :mod central ) :arg1 ( article :mod research-01 ) :time ( before :op1 now :quant ( more-than :op1 ( temporal-quantity temporal-quantity_num_0 :unit decade ) ) ) ) :op2 ( insist-01 :arg0 ( person :arg0-of ( analyze-01 :arg1 intelligence ) :mod central ) :arg1 ( and :op1 ( send-01 :arg0 person :arg1 ( troop :mod small ) :arg2 country ) :op2 ( consider-02 :arg0 person :arg1 ( invade-01 :arg1 ( troop :mod small ) ) :arg2 country ) :degree bare ) ) ) )
and :op1 ( die-01 :arg1 ( company :mod healthcare :arg1-of ( include-91 :arg2 ( company :mod healthcare :mod internet-based ) :arg3 ( about :op1 ( percentage-entity percentage-entity_num_0 ) ) ) ) :mod also :time ( after :op1 now :quant ( up-to :op1 ( temporal-quantity temporal-quantity_num_1 :unit year ) ) ) :mod also ) :op2 ( exist-01 :polarity - :arg1 ( company :arg1-of ( include-91 :arg2 ( company :mod healthcare :mod internet-based ) :arg3 ( about :op1 ( percentage-entity percentage-entity_num_1 ) ) ) ) ) :op3 ( say-01 :arg0 data :arg1 ( exist-01 :polarity - :arg1 company :time no-longer ) )
compete-01 :arg0 kvitova :arg1 ( ticket :prep-for ( ticket :mod final ) ) :concession ( berth :arg1 ( final :mod another ) :arg2 ( between :op1 keith :op2 corbell ) )
(-(
and :op1 ( express-01 :arg0 ( person :arg0-of author-01 :arg0-of ( author-01 :arg1 ( documentary :name ( name :op1 '' ) :mod ( holocaust :mod nucleus ) ) ) ) :arg1 ( disappoint-01 :arg1 person :location ( hotel :mod kempinski ) ) ) :op2 ( publish-01 :arg0 person :arg1 ( letter :arg1-of open-09 ) :location ( report-01 :arg0 country_name_0 :mod frankfurt ) )
clash :arg0 ( person :arg0-of study-01 ) :arg1 police :arg2 police :time ( protest-01 :arg0 person :arg1 ( reform-01 :arg1 ( system :mod educate-01 :mod public :poss ( government-organization :arg0-of govern-01 ) ) :location ( system :name ( name :op1 sao ) :arg1-of public-02 :poss ( government-organization :arg0-of govern-01 ) ) ) )
replace-01 :arg0 ( cyclist :name ( name :op1 23-year-old :op2 glasgow :op3 cyclist :op4 cyclist :op5 cyclist :op6 cyclist :op7 cyclist ) ) :arg1 he :time ( beat-03 :arg0 ( person :mod young :arg0-of ( have-org-role-91 :arg1 political-party_name_0 ) ) :arg1 ( team :mod new :mod country_name_1 :mod new ) :arg2 ( reputation :poss person ) ) :time ( beat-03 :arg0 ( person :mod young ) :arg1 ( team :mod new :mod zealand ) :arg2 reputation )
match-03 :mod just :domain ( medal :mod gold :beneficiary ( team :mod country_name_0 :arg0-of ( win-01 :arg1 ( drone :mod gold :quant ( multiple :op1 num_0 ) ) :location ( and :op1 ( olympics :mod beijing ) :op2 ( olympics :location beijing ) ) ) ) )
and :op1 ( affect-01 :arg0 ( act-02 :arg0 ( person :arg0-of ( have-rel-role-91 :arg1 person :arg2 parent ) ) ) :arg1 ( grow-01 :arg1 child ) ) :op2 ( imitating :arg0 ( person :arg0-of ( have-rel-role-91 :arg1 person :arg2 parent ) ) :arg1 ( person :arg0-of ( have-rel-role-91 :arg1 person :arg2 parent ) ) :arg1-of ( say-01 :arg0 ( person :arg0-of ( have-rel-role-91 :arg1 person :arg2 parent ) ) :arg1-of ( say-01 :arg0 ( person :arg0-of ( have-rel-role-91 :arg1 person :arg2 parent ) ) ) :arg0-of ( have-rel-role-91 :arg1 person :arg2 parent ) :arg0-of ( have-rel-role-91 :arg1 person :arg2 parent ) :arg0-of ( have-rel-role-91 :arg1 person :arg2 parent ) :arg0-of ( have-rel-role-91 :arg1 person :arg2 parent ) :arg0-of ( have-rel-role-91 :arg1 person :arg2 parent ) ) )
cause-01 :arg0 ( implement-01 :polarity - :arg0 ( implement-01 :arg1 ( measure-02 :arg1 ( protect-01 :arg1 trade-01 ) ) ) :arg1 ( solve-01 :arg1 ( develop-02 :arg1 ( industry :mod aerospace :mod globe ) ) :mod fundamental ) ) :arg1 ( shock :arg0 implement-01 :arg1 ( order :mod international ) :degree further )
contract-02 :arg1 james :time ( season :quant num_0 :mod official :mod official )
say-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg1 ( community :mod community :mod community ) :arg2 ( director :mod vice ) ) ) :arg1 ( turn-02 :arg1 ( person :arg1-of ( include-91 :arg2 person ) ) :arg2 away :time ( year :mod each ) ) :arg1-of ( say-01 :arg0 ( report-01 :arg0 ( community :mod ( community :mod ( community :mod nation ) :mod ( late :degree most ) ) ) ) )
charge-05 :arg1 ( officer :arg0-of ( have-org-role-91 :arg1 police :arg2 officer ) ) :arg2 ( die-01 :arg1 officer ) :arg1-of ( cause-01 :arg0 ( and :op1 ( accuse-01 :arg1 ( man :arg1-of ( accuse-01 :arg2 ( hit-01 :arg0 man :arg1 man ) ) :quant ( multiple :op1 num_0 ) ) :arg2 ( hit-01 :arg0 man :arg1 man ) ) :op2 ( cause-01 :arg0 man :arg1 ( die-01 :arg1 man :location ( motorway :arg1-of ( near-02 :arg2 pareena ) ) ) ) ) ) :time ( year :mod last )
win-01 :arg0 ( gymnast :name ( name :op1 19-year-old ) :mod country_name_0 :mod country_name_1 ) :arg1 ( championship :mod opera ) :arg2 thursday :arg0-of ( demonstrate-01 :arg1 ( talent :poss person :mod world-leading ) :location city_name_4 )
contrast-01 :arg2 ( lead-01 :arg0 ( captain :mod 22-year-old :arg1-of ( '' :arg0 ( person :mod country_name_0 ) ) ) :arg1 way ) :time ( time :mod this )
tell-01 :arg0 ( person :arg0-of investigate-01 ) :arg1 ( look-02 :arg0 it :arg1 ( resemble-01 :arg1 it :arg2 ( crossfire :mod gunmen ) ) ) :arg2 ( person :arg0-of investigate-01 )
suggest-01 :arg0 ( thing :arg0-of evidence-01 :mod '' ) :arg1 ( pressure-01 :arg0 ( and :op1 ( country :mod senior :arg0-of ( have-org-role-91 :arg1 ( community :mod ( background :mod bangladesh ) ) :arg2 member :mod senior ) ) :op2 ( country :mod especially :arg0-of ( have-org-role-91 :arg1 ( community :mod ( background :mod bangladesh ) ) :arg2 member :mod senior ) ) :op3 ( pressure-01 :arg0 ( and :op1 ( person :arg0-of ( have-org-role-91 :arg1 ( community :mod ( background :mod bangladesh ) ) :arg2 member ) ) :op2 ( person :mod especially :arg0-of ( have-org-role-91 :arg1 community :arg2 member ) ) :op3 ( person :mod young :arg0-of ( have-org-role-91 :arg1 community :arg2 member ) ) :op4 ( person :mod young :arg0-of ( allow-01 :arg1 ( vote-01 :arg0 person ) ) ) ) ) :arg1 ( thing :arg1-of report-01 ) ) ) :medium report
say-01 :arg0 ( person_name_0 :arg0-of study-01 :arg0-of study-01 ) :arg1 ( expect-01 :arg1 ( age-01 :arg1 ( person :arg1-of ( age-01 :arg2 ( temporal-quantity temporal-quantity_num_0 :unit year ) ) ) :arg2 ( between :op1 ( temporal-quantity temporal-quantity_num_1 :unit year ) :op2 ( temporal-quantity temporal-quantity_num_1 :unit year ) ) :arg4 ( distance-quantity distance-quantity_num_1 :unit meter ) ) )
multi-sentence :snt2 ( come-04 :arg1 ( thing :arg0-of ( refine-01 :arg1 ( piece :quant num_0 :mod ( speed :arg1-of high-02 ) :consist-of ( and :op1 ( rail :mod ( speed :arg1-of high-02 ) ) :op2 ( accessory :mod interior ) ) :purpose ( purchase-01 :arg1 ( right :mod emission ) ) ) ) ) :arg2 ( thing :arg0-of ( refine-01 :arg1 ( and :op1 ( rail :mod ( speed :arg1-of high-02 ) ) :op2 ( accessory :mod interior ) ) ) ) :mod also ) :time ( day :arg1-of same-01 )
form-01 :arg0 ( economy :mod collective :mod new :location ( south :part-of strait ) ) :arg1 ( develop-02 :arg1 ( and :op1 ( develop-02 :arg1 ( and :op1 ( stock :mod enterprise ) :op2 ( stock :mod enterprise ) :op3 ( develop-02 :arg1 agriculture ) :op4 ( develop-02 :manner joint ) ) ) ) ) :time present :mod main
target-01 :arg0 ( launch-01 :arg0 country_name_0 :arg1 launch-01 ) :arg1 ( and :op1 ( want-01 :arg0 country :arg1 ( and :op1 around :op2 land-01 :op3 ( patrol-01 :arg0 country ) ) ) :op2 ( land-01 :arg1 country ) :op3 ( patrol-01 :arg0 country ) :op4 ( task :mod this ) :degree considerable )
and :op1 num_0 :op2 num_1 :op3 ( survey-01 :arg0 ( survey-01 :arg1 news ) :arg1 ( person :arg2-of ( staff-01 :arg1 ( person :arg0-of ( have-org-role-91 :arg2 ( doctor :mod corridor ) ) ) ) ) ) :li num_1
multi-sentence :snt1 ( possible-01 :arg1 ( ' :arg1 ( person :arg0-of consume-01 ) :arg2 ( monetary-quantity monetary-quantity_num_0 :unit yuan :mod only ) ) ) :snt2 ( possible-01 :arg1 ( buy-01 :arg0 you :arg1 ( ' :mod iphone7 ) ) )
say-01 :arg0 ( person :arg0-of merchandise-01 :mod country_name_0 ) :arg1 ( increase-01 :arg0 ( increase-01 :arg1 ( thing :arg1-of ( include-91 :arg2 ( license-01 :arg1 license-01 ) :arg3 ( percentage-entity percentage-entity_num_0 ) ) ) ) :arg1 ( increase-01 :arg1 ( share :poss company ) :arg4 ( and :op1 ( share :quant ( approximately :op1 num_2 ) ) :op2 ( share :quant ( approximately :op1 num_2 ) ) ) ) :op3 ( account-01 :arg0 increase-01 :arg1 ( share :quant num_3 ) :arg3 ( bank :name ( name :op1 shanghai ) :mod develop-02 ) ) ) :arg1-of ( say-01 :arg0 ( person :arg0-of merchandise-01 :mod country_name_1 ) )
multi-sentence :snt1 ( and :op1 ( office :quant num_0 :mod ticket :location ( and :op1 north :op2 ( side :mod south :part-of ( city-district_name_2 :location north ) ) ) ) :op2 ( side :mod north :part-of ( area :mod outbound ) ) ) :snt2 ( and :op1 ( ticket :quant num_1 :mod ticket ) :op2 ( machine :quant num_2 :mod ticket :mod automatic ) )
reach-01 :arg0 ( quality :poss ( export-01 :arg0 country_name_0 :arg1 oil :arg2 ( country :mod foreign ) ) ) :arg1 ( level :arg1-of same-01 ) :manner gradual :arg1-of ( cause-01 :arg0 ( -lrb- :arg0 country :arg1 ( -rrb- :mod quality :arg1-of ( high-02 :degree most ) :poss world ) ) )
marked :arg1 ( packaging :mod sunscreen ) :arg2 ( and :op1 ( spf :arg1 ( index :mod uvb :poss we ) ) :op2 ( have-03 :arg0 ( index :poss we :mod common ) :arg1 ( product-of :op1 num_0 :op2 so ) ) ) :arg1-of general-02
contrast-01 :arg1 ( appear-01 :arg1 ( appear-01 :arg1 ( person :arg0-of ( have-rel-role-91 :arg2 liu ) ) :arg1-of beautiful-02 ) :arg0-of ( cause-01 :arg1 ( remembered :domain person :arg1-of quick-02 ) ) ) :arg2 ( lay-off-02 :arg0 person :arg1 ( future :poss person ) :arg2 ( circle :mod entertainment ) :mod also )
say-01 :arg0 ( url-entity :value lingshui ) :arg1 ( begin-01 :arg0 ( sector :mod transport-01 :arg0-of ( counter-01 :arg1 traffic ) ) :arg1 ( begin-01 :arg0 sector :arg1 ( operation :mod ( law :polarity - ) :arg1-of ( total-01 :arg2 ( operation :quant num_0 :mod passenger :mod passenger ) ) :arg2-of total-01 ) :time ( year :mod this ) ) :time ( year :mod this ) )
tell-01 :arg0 doctor :arg1 ( want-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg2 doctor ) ) :arg1 ( cure :arg0 person :arg1 ( likely-01 :polarity - ) ) ) :arg2 ( possible-01 :arg1 ( alleviated :arg1 ( adhere-02 :arg1 medication ) :mod usual ) )
embarrassing :arg1 ( situation :poss country_name_0 ) :degree more :arg1-of ( cause-01 :arg0 ( choose-01 :arg0 ( person :quant ( between :op1 num_0 :op2 num_1 ) ) :arg1 ( compete-01 :arg0 person :arg1 ( and :op1 simmons :op2 enbid ) :time ( season :mod new ) :purpose ( play-11 :arg0 he :arg2 right ) ) :time ( season :mod last ) ) ) :degree more
multi-sentence :snt1 ( oh :mode expressive ) :snt2 ( bring-01 :arg0 james :arg1 ( trophy :ord ( ordinal-entity ordinal-entity_num_0 ) :mod professional :mod professional :ord ( ordinal-entity ordinal-entity_num_0 ) ) :time ( before :op1 now :duration ( temporal-quantity temporal-quantity_num_2 :unit year ) ) )
break-01 :arg0 ( person :mod country_name_0 ) :arg1 ( line :mod defensive :poss ( team :mod country_name_1 ) :arg1-of straight-04 ) :arg4 ( line :mod scoring ) :time then
inspire-01 :arg0 cancer :arg1 ( and :op1 graff :op2 heather )
and :op1 ( receive-01 :arg0 ( and :op1 ( person :arg0-of ( have-org-role-91 :arg2 graff ) ) :op2 ( person :arg0-of ( have-org-role-91 :arg2 steinning ) ) :op3 ( person :arg0-of ( have-org-role-91 :arg2 steinning ) ) :op4 ( person :arg0-of ( have-org-role-91 :arg2 steinning ) ) :op5 ( person :arg0-of ( have-org-role-91 :arg2 steinning ) ) :op6 ( person :arg0-of ( have-org-role-91 :arg2 steinning ) ) :op6 ( person :arg0-of ( have-org-role-91 :arg2 steinning ) ) :op6 ( person :arg0-of ( have-org-role-91 :arg2 steinning ) ) :op6 ( person :arg0-of ( have-org-role-91 :arg2 steinning ) ) :op6 ( person :arg0-of ( have-org-role-91 :arg2 steinning ) ) :op6 ( person :arg0-of ( have-org-role-91 :arg2 steinning ) ) :op6 ( person :arg0-of ( have-org-role-91 :arg2 steinning ) ) :op6 ( person :arg0-of ( have-org-role-91 :arg2 steinning ) ) :op6 ( person :arg0-of ( have-org-role-91 :arg2 steinning ) ) :op6 ( person :arg0-of ( have-org-role-91 :arg2 steinning ) ) :op7 ( person :arg0-of ( have-org-role-91 :arg2 steinning ) ) ) ) :arg1 ( thing :arg2-of mean-01 :arg1-of ( remarkable-02 :degree more ) )
live-01 :arg0 i :location hospital :concession-of ( walk-01 :arg0 i :destination ( around :op1 ( value-interval :op1 num_0 :op2 num_1 :op3 ( foot :quant num_2 ) ) ) :mod still ) :concession ( live-01 :arg0 i :location hospital )
drop-01 :arg1 ( monetary-quantity :arg2-of price-01 ) :arg3 ( and :op1 ( clothing :mod clothing ) :op2 furniture :op3 ( appliances :mod home ) :op4 ( maintain-01 :arg1 home ) :op5 ( maintain-01 :arg1 ( rate-entity-91 :arg1 ( percentage-entity percentage-entity_num_0 ) :arg2 ( temporal-quantity temporal-quantity_num_2 :unit year ) ) ) )
contrast-01 )
possible-01 :polarity - :arg1 ( match-01 :arg1 ( and :op1 oil :op2 baked ) :mod simple )
hope-01 :arg0 i :arg1 ( and :op1 ( organize-01 :arg0 company :arg1 ( activity-06 :arg0 company :mod such ) :time ( late :degree more ) ) :op2 ( organize-01 :arg0 ( person :mod ( young :degree more ) :mod ( young :degree more ) ) :arg1 ( and :op1 communicate-01 :op2 exchange-01 ) ) )
and :op1 ( express-01 :arg0 ( person :arg0-of author-01 :arg0-of ( author-01 :arg1 ( documentary :name ( name :op1 '' ) :mod ethnic-group ) ) ) :arg1 ( disappoint-01 :arg0 ( documentary :name ( name :op1 '' ) ) :arg1 ( hotel :mod kempinski ) ) ) :op2 ( express-01 :arg0 person :arg1 ( disappoint-01 :arg0 ( and :op1 ( hotel :mod kempinski ) :op2 ( letter :mod kempinski ) ) :arg1 ( letter :arg1-of open-09 ) ) )
possible-01 :arg1 ( call-01 :arg0 guest :arg1 country_name_0 :arg2 ( center :part-of ( hotel :arg1-of ( call-01 :arg2 hotel ) ) ) ) :arg1-of instead-of-91
and :op1 ( mean-01 :arg1 ( educate-01 :arg1 family :mod good ) :arg2 ( need-01 :arg0 ( person :arg0-of ( have-rel-role-91 :arg1 ( person :arg0-of ( have-rel-role-91 :arg1 person :arg2 child ) ) :arg2 child ) ) :arg1 ( person :arg0-of ( have-rel-role-91 :arg1 person :arg2 child ) ) :arg1-of regular-02 ) ) :op2 ( give-01 :arg0 person :arg1 ( care-03 :arg0 person :arg1 child ) :arg2 ( person :arg0-of ( have-rel-role-91 :arg1 person :arg2 child ) ) ) :op3 ( need-01 :arg0 person :arg1 ( teach-01 :arg0 person :arg1 ( develop-02 :arg0 person :arg1 ( demeanor :arg1-of civilize-01 ) ) ) :arg2 ( person :arg0-of ( have-rel-role-91 :arg1 person :arg2 child ) ) :purpose ( and :op1 ( develop-02 :arg0 person :arg1 ( demeanor :arg1-of civilize-01 ) ) :op2 ( enhance-01 :arg0 person :arg1 ( know-01 :arg0 person :arg1 ( know-01 :arg0 person :arg1 ( know-01 :arg0 person :arg1 ( know-01 :arg0 person :arg1 ( know-01 :arg0 person :arg1 ( know-01 :arg0 person :arg1 ( know-01 :arg0 person :arg1 ( know-01 :arg0 person :arg1 ( know-01 :arg0 person :arg1 ( know-01 :arg0 person :arg1 ( know-01 :arg0 person :arg1 ( know-01 :arg0 person :arg1 ( know-01 :arg0 person :arg1 ( know-01 :arg0 person :arg1 ( know-01 :arg0 person :arg1 ( know-01 :arg0 person :arg1 ( know-01 :arg0 person :arg1 ( know-01 :arg0 person :arg1 ( know-01 :arg0 person :arg1 ( know-01 :arg0 person :arg1 ( know-01 :arg0 person :arg1 ( know-01 :arg0 person :arg1 ( know-01 :arg0 person :arg1 ( know-01 :arg0 person :arg1 ( know-01 :arg0 person :arg1 ( know-01 :arg0 person :arg1 ( know-01 :arg0 person :arg1 ( know-01 :arg0 person :arg1 ( know-01 :arg0 person :arg1 ( know-01 :arg0 person :arg1 ( know-01 :arg0 person :arg1 ( know-01 :arg0 person :arg1 ( know-01 :arg0 person :arg1 ( know-01 :arg0 person :arg1 ( know-01 :arg0 person :arg1 ( know-01 :arg0 person :arg1 ( know-01 :arg0 person :arg1 ( know-01 :arg0 person :arg1 ( know-01 :arg0 person :arg1 ( know-01 :arg0 person :arg1 ( know-01 :arg0 person :arg1 ( know-01 :arg0 person :arg1 ( know-01 :arg0 person :arg1 ( know-01 :arg0 person :arg1 ( know-01 :arg0 person :arg1 ( know-01 :arg0 person :arg1 ( know-01 :arg0 person :arg1 ( know-01 :arg0 person :arg1 ( know-01 :arg0 person :arg1 ( know-01 :arg0 person :arg1 ( know-01 :arg0 person :arg1 ( know-01 :arg0 person :arg1 ( know-01 :arg0 person :arg1 ( know-01 :arg0 person :arg1 ( know-01 :arg0 person :arg1 ( know-01 :arg0 person :arg1 ( know-01 :arg0 person :arg1 ( know-01 :arg0 person :arg1 ( know-01 :arg0 person :arg1 ( know-01 :arg0 person :arg1 ( know-01 :arg0 person :arg1 ( know-01 :arg0 person :arg1 ( know-01 :arg0 person :arg1 ( know-01 :arg0 person :arg1 ( know-01 :arg0 person :arg1 ( know-01 :arg0 person :arg1 ( know-01 :arg0 person :arg1 ( know-01 :arg0 person :arg1 ( know-01 :arg0 person :arg1 ( know-01 :arg0 person :arg1 ( know-01 :arg0 person :arg1 ( know-01 :arg0 person :arg1 ( know-01 :arg0 person :arg1 ( know-01 :arg0 person :arg1
threaten-01 :polarity - :arg0 ( resist-01 :arg0 individual :arg1 ( and :op1 self-exposure :op2 ( experience-01 :arg0 he :mod emotional ) ) ) :arg1 ( and :op1 ( self-awareness :poss individual ) :op2 ( self-esteem :arg0 individual ) ) :arg2 individual
accident :time ( morning :mod thursday ) :location ( motorway :arg1-of ( near-02 :arg2 moore ) :arg1-of ( near-02 :arg2 moore ) )
and :op2 ( say-01 :arg0 ( and :op1 ( person :arg0-of ( have-org-role-91 :arg1 ( person :arg0-of ( have-rel-role-91 :arg2 son ) ) :arg2 spokesman ) ) :op2 ( person :arg0-of ( have-rel-role-91 :arg1 person :arg2 daughter ) ) ) :arg1 ( '' :arg1 they :manner ( die-01 :arg1 they :manner frank ) :degree very ) )
use-01 :arg0 ( detective :mod brand ) :arg1 ( rbs :purpose ( protect-01 :arg1 ( brand :mod ( person :arg0-of consume-01 ) :mod other :arg0-of consume-01 ) ) ) :time ( time :mod that )
and :op1 ( prominent :degree more :mod other ) :op2 ( brand :mod banking :arg1-of private-03 :mod ( small :degree more ) :example ( and :op1 ( bank :mod ( capital :mod macro ) ) :op2 ( bank :name ( name :op1 adam ) ) :op3 company_name_0 :op4 company :op5 ( bank :mod military :mod holt ) ) )
say-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg2 ( executive :mod chief ) ) :arg0-of ( have-org-role-91 :arg2 ( executive :mod chief ) ) :arg0-of ( have-org-role-91 :arg2 ( executive :mod chief ) ) :arg0-of ( have-org-role-91 :arg2 ( executive :mod chief ) ) :arg0-of ( have-org-role-91 :arg2 ( executive :mod chief ) ) :arg0-of ( have-org-role-91 :arg2 ( executive :mod chief ) ) :arg0-of ( have-org-role-91 :arg2 ( executive :mod chief ) ) :arg0-of ( have-org-role-91 :arg2 ( executive :mod chief ) ) ) :arg1 ( time :time-of ( become-01 :arg1 it :arg2 ( bank :mod multi-brand ) ) )
appoint-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg1 ( agency :mod security :mod ( security :mod nation ) ) :arg2 director ) ) :arg1 ( person :arg0-of ( have-org-role-91 :arg2 deputy ) ) :time ( end-01 :arg1 num_0 ) :time ( end-01 :arg1 ( person :arg0-of ( have-org-role-91 :arg1 ( service :mod security :mod federal ) :arg2 director ) ) )
hope-01 :arg0 i :arg1 ( possible-01 :arg1 ( explain-01 :arg0 someone :arg1 ( thing :arg0-of ( cause-01 :arg1 ( appear-01 :arg1 ( fish :quant num_1 :mod this ) ) ) ) ) ) :arg1-of ( post-01 :arg0 ( and :op1 ( person :arg0-of ( live-01 :location sea ) :quant ( about :op1 num_0 ) ) :op2 ( video :topic ( scene :mod strange :location periscope ) ) ) )
and :op1 ( own-01 :arg0 ( person :arg0-of ( own-01 :arg1 ( music :mod latin ) ) :arg2-of ( include-91 :arg1 ( sign-01 :arg0 person ) ) ) :arg1 ( string :mod floor ) ) :op2 ( listen-01 :arg0 person :arg1 ( music :mod latin ) :arg1-of ( cause-01 :arg0 ( listen-01 :arg0 person :arg1 ( thing :arg2-of ( shelter-01 :arg3 rio ) :mod one-street ) :frequency often ) ) )
help-01 :arg0 ( person :mod country_name_0 ) :arg1 ( achieve-01 :arg0 ( team :mod country_name_1 ) :arg1 ( titles :quant num_0 ) :location ( project :mod opera :mod individual :mod individual ) ) :arg2 ( team :mod country )
hope-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg2 minister ) ) :arg1 ( end-01 :arg1 ( dispute-01 :arg2 ( change-01 :arg1 ( contract :arg0-of emerge-02 :poss ( person :arg0-of ( have-org-role-91 :arg2 minister ) ) ) ) ) ) :time initial
easy-05 :arg1 ( accuse-01 :arg1 ( thing :arg1-of ( provide-01 :arg0 law ) ) :arg2 ( easy-05 :arg1 ( accuse-01 :arg1 person :arg2 ( concern-01 :arg0 ( crime-02 :arg1 ( person :mod country_name_0 ) ) :arg1-of ( accord-02 :arg2 ( bias-01 :arg1 person ) ) ) ) ) )
discover-01 :arg0 ( netizen :quant many ) :arg1 ( discover-01 :arg0 ( netizen :arg0-of ( have-rel-role-91 :arg1 netizen :arg2 netizens ) ) :arg1 ( person :arg0-of ( have-rel-role-91 :arg1 netizens :arg2 ( brother :mod twin ) ) ) :mod simple :mod simple ) :arg1-of quick-02
and :op1 ( come-01 :arg1 ( enterprise :quant number ) :arg4 ( center :mod trade-01 :mod emission ) :purpose ( submit-01 :arg0 enterprise :arg1 ( right :mod ( right :mod emission ) ) ) ) :op2 ( pay-01 :arg0 ( person :arg0-of ( use-01 :arg1 requisitions ) ) :arg1 ( fee :mod ( person :arg0-of use-01 ) ) ) :time ( date-entity decade_date-entity_0 )
say-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg1 ( publication_name_0 :poss we ) :arg3 ( apprentice-01 :arg0 person ) ) ) :arg1 ( possible-01 :arg1 ( receive-01 :arg0 ( rest :part-of ( city :poss we ) ) :arg1 ( temperature-quantity :quant ( degree :arg1-of differ-02 ) :arg1-of ( differ-02 :arg2 ( temperature :quant ( degree :arg1-of high-02 ) ) ) ) ) )
increase-01 :arg1 ( year :mod ( between :op1 ( temporal-quantity temporal-quantity_num_0 :unit year ) :op2 ( temporal-quantity temporal-quantity_num_1 :unit year ) ) ) :arg2 ( encryption :poss ( continent_name_0 :mod central ) ) :duration ( temporal-quantity temporal-quantity_num_1 :unit year )
have-purpose-91 :arg1 ( plan-01 :arg1 ( and :op1 ( meet-01 :arg1 ( need-01 :arg1 ( develop-02 :time future ) ) ) :op2 ( plan :mod construct-01 :arg1-of ( integrate-01 :arg2 railway ) ) ) ) :arg2 ( center :part-of ( station :mod ( construct-01 :mod new ) :arg1-of ( integrate-01 :arg2 ( center :part-of ( station :mod construct-01 :mod new ) ) ) ) ) :purpose ( build-01 :arg0 plan-01 :arg1 ( park :mod nucleus :arg1-of integrate-01 :mod ( railway :mod new ) ) )
aim-02 :arg1 ( product :arg1-of ( aim-02 :arg2 ( name :op1 uva ) ) ) :arg2 ( and :op1 ( express-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg2 general ) ) :arg1 ( role :arg0-of effective-04 :arg0-of ( effective-04 :degree more ) ) ) :op2 ( express-01 :arg0 ( person :quant ( more-than :op1 num_0 ) ) :arg1 ( period :arg1-of extend-01 :consist-of ( protect-01 :arg0-of effective-04 ) ) ) ) :arg1-of ( aim-02 :arg2 uva )
contrast-01
quote-01 :arg0 ( agency_name_0 :mod news :mod '' ) :arg1 ( include-91 :arg1 ( rate :mod inflation ) :arg2 ( percentage-entity percentage-entity_num_0 ) :time ( year :ord ( ordinal-entity ordinal-entity_num_0 ) :part-of ( year :mod this ) ) ) :arg2 ( agency :mod central )
list-01 :arg1 ( tiger :name ( name :op1 siberian ) :arg1-of ( -rrb- :arg0 ( government-organization_name_0 :mod world ) ) :arg0-of ( iucn :arg1 ( list :mod red :consist-of ( species :arg1-of endanger-01 ) ) ) ) :arg2 ( species :arg1-of endanger-01 ) :time current
show-01 :arg0 ( ministry :topic ( monitor-01 :arg0 ( and :op1 ( person :mod country_name_0 ) :op2 ( person :mod country_name_1 ) :op3 ( person :arg0-of ( have-org-role-91 :arg1 country :arg3 monitor-01 ) ) :op4 ( person :arg0-of ( have-org-role-91 :arg1 country :arg3 monitor-01 ) ) :op5 ( person :arg0-of ( have-org-role-91 :arg1 country :arg3 ( lead-02 :arg0 person ) ) ) ) ) ) :arg1 ( include-91 :arg1 ( and :op1 ( person :quant ( between :op1 num_1 :op2 num_1 :mod only ) ) :op2 ( person :quant num_3 :arg0-of ( have-org-role-91 :arg2 head-of-state ) ) ) :arg2 ( and :op1 ( tigers :mod wild ) :op2 num_3 :location ( northeast :location northeast ) ) )
show-01 :arg0 ( analyze-01 :arg0 they ) :arg1 ( last-01 :arg1 ( expectancy :mod life :mod ( big :degree most ) ) :arg2 ( temporal-quantity temporal-quantity_num_0 :unit year :mod 120 ) )
have-concession-91 :arg1 ( appear-02 :arg1 ( and :op1 ( go-01 :arg1 process-02 :direction up ) :op2 ( down :arg1 rate ) ) ) :arg2 ( rate :mod ( exchange-01 :arg1 ( against :op1 ( dollar :quant ( over :op1 num_0 ) ) ) ) :arg1-of repeat-01 ) :time ( time :arg1-of same-01 )
contrast-01 :arg1 ( underdeveloped :degree relative :domain ( '' :arg1 politics ) ) :arg2 ( high-02 :arg1 ( number :quant-of ( country :arg0-of ( cause-01 :arg1 ( and :op1 ( regard-01 :arg0 country_name_0 :arg1 ( field :mod ticket :mod big :mod big ) :arg2 ( field :mod ticket :mod big ) ) :op2 ( analyze-01 :arg0 country :arg1 ( person :arg1-of expert-01 ) :location country ) ) ) :time always ) ) )
follow-01 :arg1 audience :arg2 ( and :op1 ( story :topic ( story :arg1-of fame-01 ) ) :op2 ( sing-01 :arg0 ( sing-01 :arg0 ( person :arg0-of act-01 ) ) ) :op3 ( smile :mod warm ) :frequency sometimes )
watch-01 :arg0 ( person :arg0-of ( watch-01 :arg1 ( perform-01 :mod opera :mod peking ) :time ( before :op1 now :quant ( temporal-quantity temporal-quantity_num_0 :unit year ) ) ) ) :arg1 ( show-04 :arg1 ( person :arg0-of ( have-rel-role-91 :arg1 person :arg2 daughter ) ) ) :time ( before :op1 now :quant ( temporal-quantity temporal-quantity_num_1 :unit year ) )
and :op1 ( have-03 :arg0 ( person :mod country_name_0 :arg1-of ( use-01 :arg2 ( top :quant num_0 ) ) ) :arg1 country_name_1 :location ( top :quant num_0 ) ) :op2 ( seasons :arg1 ( career :mod ( good :degree most ) :mod this ) :arg2 ( career :poss person ) ) :time past
serve-01 :arg0 ( person :arg1-of expert-01 ) :arg1 ( person :arg1-of expert-01 ) :arg2 ( person :arg1-of expert-01 :arg0-of ( participate-01 :arg1 ( activity-06 :arg0 ( fan :arg1-of local-02 :mod various ) ) ) ) :time then
exciting :degree really :time time
and :op1 ( person_name_0 :arg0-of ( work-01 :arg2 ( and :op1 ( person :arg0-of ( have-org-role-91 :arg2 ( person :arg0-of ( manage-01 :arg1 product ) ) ) ) :op2 ( person :arg0-of ( engineer-01 :arg1 product ) ) ) ) ) :op2 ( decide-01 :arg0 person :arg1 ( and :op1 ( delete :arg0 person :arg1 ( account :mod snapchat :poss person ) ) :op2 ( encourage-01 :arg0 person :arg1 person :arg2 ( do-02 :arg0 person :arg1 same-01 ) ) ) ) :medium ( thursday :arg1 person )
say-01 :arg0 she :arg1 ( think-01 :arg0 she :arg1 ( think-01 :arg0 she :arg1 ( and :op1 ( lack-01 :arg0 ( controversy :mod race ) :arg1 ( diversity :mod race ) ) :op2 ( lack-01 :arg1 ( process-02 :arg1 recruit-01 ) ) ) ) :arg2 ( article :arg1-of ( write-01 :purpose ( and :op1 process-01 :op2 ( interview-01 :mod telephone ) ) ) ) )
and :op1 ( boycott-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg1 ( intelligence :arg1-of ( high-02 :degree more ) :arg0-of ( have-org-role-91 :arg1 intelligence :arg2 official ) ) :arg2 official ) ) :arg1 ( product :mod intelligence :poss command-02 ) ) :op2 ( threaten-01 :arg0 ( threaten-01 :arg0 ( state :mod religious-group_name_0 ) ) :arg1 ( threaten-01 :arg0 ( state :mod country_name_1 ) ) )
multi-sentence :snt1 ( reflect-01 :arg1 it :arg2 ( way :manner-of ( eat-01 :arg0 country_name_0 ) ) :mod also ) :snt2 ( add-01 :arg0 i :arg1 ( and :op1 ( person :arg0-of ( have-rel-role-91 :arg1 person :arg2 husband ) ) :op2 ( person :arg0-of ( have-rel-role-91 :arg1 person :arg2 husband ) ) :op3 ( person :arg0-of ( have-rel-role-91 :arg1 person :arg2 husband ) ) :op4 ( person :arg0-of ( have-rel-role-91 :arg1 person :arg2 husband ) ) ) )
explain-01 :arg0 person_name_0 :arg1 ( cause-01 :arg0 amr-unknown :arg1 ( become-01 :arg1 ( and :op1 he :op2 ( person :arg0-of ( have-rel-role-91 :arg1 he :arg2 wife ) ) ) :arg2 ( topic :arg1-of major-02 :consist-of ( person :mod country_name_1 ) ) :time ( time :mod that ) ) )
detached :arg1 he :arg2 person :arg1-of obvious-01
multi-sentence :snt1 ( and :op1 ( call-01 :arg1 it :arg2 ( fruit :arg1-of ( dry-02 :mod butter ) ) ) :op2 ( say-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg2 ziegman ) ) :arg1 ( thing :arg2-of ( name-01 :arg1 ( trick :mod common ) ) ) ) ) :snt2 ( '' :arg0 ( trick :mod usual ) :arg1 ( trick :mod usual ) :arg2 trick )
suggest-01 :arg0 ( person :arg0-of ( have-rel-role-91 :arg1 ( person :mod ( old :degree more ) ) :arg2 ( friend :mod ( old :degree more ) ) ) ) :arg1 ( try-01 :polarity - :arg0 person :arg1 ( stay-01 :arg1 person :time late :purpose ( watch-01 :arg0 person :arg1 ( game :mod olympic ) ) :mod especially ) ) :arg2 ( history :topic ( disease :mod cardiovascular ) :mod especially )
multi-sentence :snt1 ( and :op1 ( provide-01 :arg0 company :arg1 ( and :op1 ( relaxed :arg1 we :mod such ) :op2 happy :op3 ( platform :mod harmonious ) ) :arg2 we ) :op2 ( and :op1 happy :op2 happy :op3 ( platform :mod harmonious ) ) ) :snt2 ( and :op1 ( meaningful :mod ( much :degree very ) ) :op2 ( interesting :domain platform ) )
and :op1 ( earn-01 :arg0 ( couple :mod dropshipper ) :arg1 ( rate-entity-91 :arg1 ( monetary-quantity monetary-quantity_num_0 :unit dollar ) :arg2 ( volume-quantity volume-quantity_num_1 :unit gallon ) ) ) :op2 ( pay-01 :arg0 couple :arg1 ( tax-01 :arg3 ( tax-01 :arg3 federal ) ) :arg3 ( percentage-entity percentage-entity_num_3 ) )
and :op1 ( hold-04 :arg0 person_name_0 :arg1 ( rally-01 :location country_name_1 ) :time ( week :mod last ) ) :op2 ( ask-02 :arg0 person :arg1 ( and :op1 ( meet-03 :arg0 person ) :op2 ( exchange-01 :arg0 person :arg1 ( returns :mod ( exchange-01 :arg1 tax-01 ) ) ) ) :arg2 person ) :time ( week :mod last )
and :op1 ( point-01 :arg0 ( post :name ( name :op1 '' ) :mod another ) :arg2 ( face :part-of hotel ) :degree total ) :op2 ( point-out-02 :arg0 post :arg1 ( street :mod main :location ( street :arg1-of fame-01 :location ( street :arg1-of fame-01 ) ) ) )
multi-sentence :snt1 ( cause-01 :arg1 ( have-03 :arg0 he :arg1 ( and :op1 ( drone :mod gold ) :op2 ( medal :mod gold ) :frequency ( rate-entity-91 :arg3 ( temporal-quantity temporal-quantity_num_0 :unit year ) ) ) ) ) :snt2 ( seem-01 :arg1 ( day :mod holy :poss ( and :op1 ( world :mod ( sports :mod country_name_0 ) ) :op2 ( redgrave :mod country_name_1 ) :op3 ( farra :mod country ) :op4 ( bannister :mod roger ) :op5 ( bannister :mod roger ) ) :time ( day :time-of day ) ) )
say-01 :arg0 ( person_name_0 :arg0-of ( have-org-role-91 :arg1 ( government-organization :arg0-of ( govern-01 :arg1 country_name_1 ) ) :arg2 officer-in-charge ) ) :arg1 ( and :op1 ( restore-01 :arg1 society :manner gradual ) :op2 ( and :op1 ( decline-01 :arg1 ( rate :mod factor :poss ( industry :quant some ) ) ) :op2 ( increase-01 :arg1 ( difficulty :topic ( and :op1 produce-01 :op2 operation ) ) ) ) ) :time ( year :mod recent )
increase-01 :arg0 ( area :mod this ) :arg1 ( convenience :poss ( person :arg0-of ( have-rel-role-91 :arg1 they :arg2 child ) ) ) :purpose ( examine-01 :arg0 ( person :arg0-of ( have-rel-role-91 :arg1 they :arg2 child ) ) :arg1 ( examine-01 :arg1 ( enter-01 :arg0 ( college :mod nation ) ) :location ( level :arg1-of local-02 ) :prep-under ( condition :arg1-of relevant-01 ) ) )
say-01 :arg0 person_name_0 :arg1 ( and :op1 ( write-01 :arg0 company :arg1 ( value-01 :arg1 ( monetary-quantity monetary-quantity_num_0 :unit dollar ) :arg2 ( contract-02 :arg1 ( activity-06 :arg0 activity-06 ) ) ) ) :op2 ( thing :arg1-of ( expect-01 :arg0 company ) ) )
and :op1 ( exceed-01 :arg0 ( lack-01 :arg1 ( fund-01 :arg1 ( service :mod community :arg1-of legal-02 ) ) ) :arg1 limit-01 :time already ) :op2 ( face-01 :arg0 lack-01 :arg1 ( cut-02 :mod further ) :time now )
say-01 :arg0 person_name_0 :arg1 ( get-03 :arg1 situation :arg2 ( bad-04 :arg1 situation :degree more ) :mod only :condition ( change-01 :polarity - :arg0 ( government-organization :arg0-of govern-01 :mod federal ) :arg1 ( decide-01 :arg1-of exist-01 ) ) )
contrast-01 :arg2 ( continue-01 :arg0 ( person :name ( name :op1 mr. :op2 putin ) ) :arg1 ( explain-01 :arg0 person :arg1 ( forgotten :arg1-of ( have-03 :polarity - :arg0 person ) ) ) )
say-01 :arg0 ( officer :arg0-of ( have-org-role-91 :arg1 ( person :arg0-of ( have-org-role-91 :arg2 ( officer :mod ( executive :mod chief ) ) ) ) :arg2 officer ) ) :arg1 ( cause-01 :arg0 ( seek-01 :arg0 ( person :arg0-of ( seek-01 :arg1 ( become-01 :arg1 person :arg2 ( service :mod ( good :degree more ) ) :location ( bank :part-of customer ) ) ) ) :arg1 ( become-01 :arg1 person :arg2 ( bank :mod multi-brand ) ) ) )
and :op1 ( pull-01 :arg0 ( person :arg0-of dettori ) :arg1 predilections :time ( after :op1 ( achieve-01 :arg0 person ) ) ) :op2 ( cause-01 :arg0 person :arg1 ( invite-01 :arg0 person :arg1 audience :arg2 ( cheer :arg0 person :arg1 audience ) ) )
contrast-01 :arg2 ( view-02 :arg0 ( view-02 :mod official ) :arg1 ( choose-01 :arg0 ( candidate :poss ( candidate :arg0-of ( have-org-role-91 :arg2 president ) ) ) :arg1 ( wielding :arg0 candidate :arg1 ( policy :topic environment :poss country_name_0 ) ) :manner sudden ) )
and :op1 ( witness-01 :arg0 we :arg1 ( work-01 :arg1 engineer-01 :mod ( great :degree so ) ) :location ( project :mod ( great :degree so ) ) ) :op2 ( constructs :arg1 ( bridge :mod this ) :arg2 ( use-01 :arg0 bridge :arg1 ( and :op1 ( product :mod concretes ) :op2 ( product :mod aerospace ) :quant ( over :op1 num_0 ) ) ) :mod only )
say-01 :arg0 ( person_name_0 :arg0-of ( have-org-role-91 :arg1 ( project :mod ( construct-01 :arg1 bridge ) ) :arg2 ( director :mod ( construct-01 :arg1 bridge ) ) ) ) :arg1 ( matter :polarity - :arg1 ( project :mod bridge ) :arg1-of significant-02 )
tell-01 :arg0 ( person :arg0-of investigate-01 ) :arg1 ( seem-01 :arg1 ( fire-01 :arg0 ( person :arg0-of investigate-01 ) ) ) :arg2 ( person :arg0-of investigate-01 )
need-01 :arg0 we :arg1 ( and :op1 simon :op2 gabrielle :op3 larry ) :arg1-of ( cause-01 :arg0 amr-unknown )
realize-01 :arg0 ( person :arg0-of play-01 :mod this ) :arg1 ( hit-01 :arg0 ( and :op1 ( media :mod ( relation-03 :arg0 public ) ) :op2 ( acknowledge-01 :arg0 person :arg1 ( person :mod young :mod some ) ) ) :arg1 ( likely-01 :arg1 ( plum :mod small ) ) ) :prep-in fact
located :arg1 ( female :mod this ) :location ( folkestone :arg1 ( shop :poss ( center :instrument-of shop-01 ) ) ) :time then
indicate-01 :arg0 police :arg1 ( pursue-01 :arg0 police :arg1 ( lessee :arg0-of ( defies :arg1 ( rule :mod renter ) ) ) )
indicate-01 :arg0 ( and :op1 ( person :arg0-of ( have-org-role-91 :arg1 ( police :mod country_name_0 ) :arg2 authorities ) ) :op2 ( person :arg0-of ( have-org-role-91 :arg1 police :arg2 authority ) ) :op3 ( person :arg0-of ( have-org-role-91 :arg1 police :arg2 authority ) ) :op4 ( person :arg0-of ( have-org-role-91 :arg1 police :arg2 authority ) ) :op5 ( person :arg0-of ( have-org-role-91 :arg1 police :arg2 authority ) ) ) :arg1 ( continue-01 :arg1 ( pursue-01 :arg0 ( pursue-01 :mod this ) :arg1 ( rule :name ( name :op1 renter ) :arg0-of ( issue-01 :arg1 ( lessee :arg0-of ( issue-01 :arg1 ( warn-01 :arg1-of suppose-01 ) :arg2 other ) ) ) ) ) )
solve-01 :arg0 ( monetary-quantity monetary-quantity_num_0 :unit ( yuan :mod renminbi ) :mod this ) :arg1 ( matter :mod urgent :poss i )
report
and :op1 ( reach-01 :arg0 ( and :op1 middle :op2 ( low-04 :degree more ) ) :arg1 ( compete-01 :duration ( day :mod same ) ) ) :op2 ( seem-01 :arg1 ( remote :degree very ) :arg2 final )
like-01 :arg0 ( and :op1 ( person :quant num_0 :arg0-of ( have-org-role-91 :arg2 ( minister :mod prime :mod prime ) ) ) :op2 ( person :quant num_0 :arg0-of ( have-org-role-91 :arg2 ( minister :mod prime :mod prime ) ) ) ) :arg1 ( take-01 :arg0 ( person :quant num_0 :arg0-of ( have-org-role-91 :arg2 ( minister :mod prime :mod female ) ) ) :arg1 ( place :arg1-of hot-05 ) :purpose ( form-01 :arg0 person :arg1 ( thing :arg2-of have-concession-91 ) ) )
believe-01 :arg0 i :arg1 ( donate-01 :arg0 ( nobody :arg1-of ( produce-01 :time today ) ) :arg1 ( donate-01 :arg0 party :arg1 money :arg2 you ) :arg1-of ( long-03 :degree so ) :mod also :arg1-of ( cause-01 :arg0 ( and :op1 ( confiscate-01 :arg0 party :arg1 ( take-01 :arg0 party :arg1 money :extent entire ) ) :op2 ( possible-01 :arg1 ( request-01 :arg0 party :arg1 ( and :op1 support-01 :op2 support-01 ) :arg1-of ( cause-01 :arg0 ( have-03 :polarity - :arg0 party :arg1 ( opportunity :mod really :purpose ( want-01 :arg1 '' ) ) ) ) ) ) ) ) )
and :op2 ( claim-01 :arg0 ( source :mod message :quant many ) :arg1 ( and :op1 ( cancel-01 :arg0 ( source :mod new :mod ( generation :mod new ) ) :arg1 ( connect-01 :arg1 ( person :quant num_0 :arg0-of ( have-org-role-91 :arg2 head-of-state ) ) ) ) :op2 ( use-01 :arg0 person :arg1 ( and :op1 ( connectivity :arg1 person ) :op2 ( charge-01 :arg0 person ) ) ) :op3 ( increase-01 :arg0 person :arg1 ( person :ord ( ordinal-entity ordinal-entity_num_1 ) :arg0-of speak-01 ) :purpose ( provide-01 :arg0 person :arg1 space :purpose apple ) ) ) )
multi-sentence :snt1 ( include-91 :li num_0 :arg1 ( value-interval :op1 num_0 :op2 num_1 ) :arg2 ( approximately :op1 num_2 ) :purpose ( carry-01 :arg0 num_1 :arg1 ( bus :mod ( person :arg0-of tour-01 ) :location ( around :op1 ( hotel :mod kaibinsiji ) ) ) ) ) :snt2 ( go-01 :arg1 ( vehicle :mod this ) :arg4 ( tianchi :arg0 ( group :mod individual :mod individual ) :arg1 ( group :consist-of tour-01 :mod individual ) ) :mod most )
and :op1 ( toucan :domain ( grecia :mod female ) ) :op2 ( lend-01 :arg0 ( body :mod whole ) :arg1 ( breath :mod rain-01 ) )
multi-sentence :snt1 ( technology :polarity - :time future :domain '' ) :snt2 ( enter-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg2 ( director :mod vice ) ) ) :arg1 ( life :poss person ) :time ( accept-01 :arg0 person :arg1 ( person :arg0-of report-01 :mod international :mod country_name_0 ) ) :time ( accept-01 :arg0 person :arg1 ( person :arg0-of report-01 :mod international :mod country_name_1 ) ) )
multi-sentence :snt1 ( worry-01 :arg0 ( thing :arg2-of price-01 :arg1-of ( rise-01 :arg2 ( thing :arg2-of price-01 ) :mod again ) ) :arg1 ( possible-01 :arg1 ( resume-01 :arg0 ( beam :quant number :mod ( coal :mod small ) ) :arg1 ( work-01 :arg1 work-01 ) ) ) ) :snt2 ( produce-01 :mode interrogative :arg0 ( person :quant number ) )
cause-01 :arg0 ( factor :mod ( factor :mod surface ) :mod this ) :arg1 ( convey-01 :polarity - :arg0 ( government-organization :arg0-of govern-01 :arg1-of ( lead-02 :arg0 ( government-organization :arg0-of govern-01 ) ) ) :arg1 ( transformation :mod fundamental ) :time ( past :op1 past ) )
suggest-01 :arg0 police :arg1 ( obligate-01 :arg1 ( person :mod residential ) :arg2 ( choose-01 :arg0 person :arg1 ( product :mod aerospace :arg1-of hard-04 :mod ( quality :arg1-of hard-04 ) ) ) ) :time ( obligate-01 :arg1 person :arg2 ( and :op1 ( land-01 :arg1 person :location ( family :arg1-of ( have-org-role-91 :arg0 person :arg2 member ) ) ) :op2 ( door :topic ( choose-01 :arg1 ( window :mod security ) ) ) ) )
contrast-01 :arg1 ( enter-01 :arg0 ( person :mod country_name_0 ) :arg1 ( road :quant ( between :op1 num_0 :op2 num_1 ) ) :purpose ( begin-01 :arg0 person :time early ) ) :arg2 ( initiate-01 :arg0 person :arg1 ( africa :arg0 person :arg1 ( and :op1 ( develop-02 :arg0 person :arg1 ( conference :arg1-of ( begin-01 :arg0 country ) ) ) :op2 ( coincidence :polarity - :domain this ) ) ) )
propose-01 :arg0 ( court :mod ( sea :mod haikou ) ) :arg1 ( guarantee-01 :arg0 court :arg1 that :time ( before :op1 ( dawn :arg0 court :arg1 ( boat :mod linkao ) :time ( before :op1 ( dawn :arg1 boat ) ) ) ) )
multi-sentence :snt1 ( look-02 :arg0 ( '' :medium online :mod this ) :arg1 ( holiday :arg1-of special-02 :mod this ) ) :snt2 ( cause-01 :arg1 ( feel-01 :arg0 you :arg1 ( fresh-04 :arg1 you :degree very ) ) )
watch-01 :arg0 ( person_name_0 :arg0-of ( peking :arg1 opera ) ) :arg1 ( watch-01 :arg0 person :arg1 ( person :arg0-of ( have-rel-role-91 :arg1 person :arg2 daughter ) ) ) :time ( before :op1 now :quant ( multiple :op1 ( temporal-quantity temporal-quantity_num_0 :unit year ) ) )
say-01 :arg1 ( move-01 :arg1 ( medal :mod gold ) :degree most ) :arg2 ( exaggeration :polarity - :degree most )
possible-01 :arg1 ( visit-01 :arg0 ( person :arg0-of participate-01 ) :arg1 ( and :op1 ( room :mod exhibit-01 ) :op2 ( room :mod cactus ) :op3 ( restroom :mod cactus ) ) )
and :op1 ( know-01 :arg0 she :arg1 ( obtain-01 :arg0 ( team :consist-of ( person :arg0-of ( have-org-role-91 :arg1 ( team :mod country_name_0 ) :arg3 ( lead-02 :arg0 team ) ) ) ) :arg1 ( team :mod country_name_1 ) ) ) :op2 ( defeat-01 :polarity - :arg1 ( person :arg1-of ( include-91 :arg2 ( person :arg0-of ( have-org-role-91 :arg1 group :arg3 ( lead-02 :arg0 person ) ) ) ) ) :arg3 group :time first :time after )
say-01 :arg0 ( person_name_0 :arg0-of ( have-org-role-91 :arg2 zigman ) ) :arg1 ( '' :arg1 ( person :arg0-of ( have-03 :arg1 ( and :op1 joys :op2 sorrows ) ) :domain this ) )
play-02 :arg0 ( gentleman :mod kuwait ) :arg1 ( role :mod moue )
contrast-01 :arg1 ( possible-01 :arg1 ( free :arg0 ( person :arg0-of ( have-rel-role-91 :arg2 mother ) ) :arg1 ( temporal-quantity temporal-quantity_num_0 :unit hour ) :arg2 ( interrogated :arg0 person :arg1 ( doctor :mod head :mod head ) ) ) :mod ( only :polarity - ) ) :arg2 ( possible-01 :arg1 ( detect-01 :arg0 ( direction :arg1-of pay-01 :mod direction ) :arg1 medicine :arg4 interrogated ) :mod also )
express-01 :arg0 ( newspaper :mod this ) :arg1 ( join-01 :arg0 ( code :mod israeli ) :arg1 list-01 ) :mod also
multi-sentence :snt1 ( obligate-01 :arg1 i :arg2 ( do-02 :arg0 i :arg1 ( person :arg0-of tour-01 :mod country_name_0 ) :arg1-of frequent-02 ) ) :snt2 ( see-01 :arg0 i :arg1 ( arrive-01 :arg1 they :arg4 ( content-01 :arg1 country_name_1 ) ) )
contrast-01 :arg2 ( satisfy-01 :polarity - :arg0 ( condition :mod this ) ) :time present
indicate-01 :arg0 ( reduce-01 :arg0 company :arg1 ( thing :arg2-of amplify-01 ) ) :arg1 ( drop-01 :arg0 company :arg1 ( difficult :domain ( drop-01 :arg0 market :arg1 market ) ) )
and :op1 ( raise-01 :arg0 ( surveys :mod kepler ) :arg1 ( star :mod cluster ) ) :op2 ( raise-01 :arg0 surveys :arg1 ( star :mod cluster ) )
contrast-01 )
continue-01 :arg1 ( take-01 :arg0 ( drug :mod this ) :arg1 ( temporal-quantity temporal-quantity_num_0 :unit month ) :time ( after :op1 ( attack-01 :mod heart :arg0-of ( reduce-01 :arg1 ( risk-01 :arg2 ( or :op1 stroke :op2 ( attack-01 :mod heart ) ) ) ) ) ) )
and :op1 ( apologize-01 :arg0 channel ) :op2 ( issue-01 :arg0 channel :arg1 state-01 ) :time soon :mod also
throw-01 :arg1 ( and :op1 junk :op2 ( toys :mod old ) ) :arg2 ( side :part-of flat )
and :op1 ( search-01 :arg0 police :arg1 house ) :op2 ( find-01 :arg0 police :arg1 ( cannabis :mod 70dock ) ) :op3 ( find-01 :arg0 police :arg1 ( and :op1 scale :op2 drug :op3 ( monetary-quantity monetary-quantity_num_1 :unit ( yuan :mod renminbi ) ) ) :mod also )
and :op1 ( demand-01 :arg0 ( project :arg0-of ( belong-01 :arg1 ( enterprise :mod process-01 :arg1-of ( low-04 :degree more ) ) ) :arg0-of ( belong-01 :arg1 ( enterprise :mod process-01 :arg1-of ( low-04 :degree more ) ) ) ) :arg1 ( rate-entity-91 :arg1 ( monetary-quantity monetary-quantity_num_0 :unit ( ton :mod renminbi ) ) :arg2 ( temporal-quantity temporal-quantity_num_1 :unit year ) ) ) :op2 ( -rrb- :arg1 ( -rrb- :quant ( between :op1 ( mass-quantity ammonia :unit ton ) :op2 ( mass-quantity ammonia :unit ton ) ) ) )
contrast-01 :arg2 ( and :op1 ( return-01 :arg1 ( person :mod country_name_0 ) :arg4 xiamen ) :op2 ( return-01 :arg1 person :arg4 xiamen ) :time ( after :op1 ( repeated :arg0 ( coach :name ( name :op1 coach :op2 coach ) :poss person ) :arg1 ( work-01 :arg0 person ) ) ) )
produce-01 :arg0 ( and :op1 ( person :arg0-of ( have-org-role-91 :arg2 ( investigate-01 :arg0 person ) ) ) :op2 ( person :arg0-of ( have-org-role-91 :arg2 ( doctor :mod corridor ) ) ) :op3 ( person :arg0-of ( have-org-role-91 :arg1 ( doctor :mod corridor ) :arg3 ( apprentice-01 :arg0 person ) ) ) ) :arg1 ( person :arg1-of ( broadcast-01 :arg0 ( doctor :mod corridor ) ) ) :li num_1
contrast-01 )
exhibit-01 :arg1 ( exhibit-01 :mod this ) :arg4 ( audience :mod globe ) :time ( absent-01 :arg1 ( and :op1 country :op2 ( country :arg1-of target-01 ) :location ( along :op1 road ) ) :mod especially )
have-concession-91 :arg1 ( relation-03 :arg0 ( industry :arg1-of target-01 ) :arg2 ( industry :mod cannabis ) :arg1-of direct-02 ) :arg2 ( target-01 :polarity - :arg0 ( industry :arg1-of target-01 :ord ( ordinal-entity ordinal-entity_num_0 ) ) :arg1 ( industry :mod coal ) )
have-concession-91 :arg1 ( free-04 :arg1 he :mod ( only :polarity - ) ) :arg2 ( path :mod sole :mod also :domain ( choose-01 :arg0 you :arg1 ( retire-01 :arg0 you :destination ( circle :mod entertainment ) :time ( time :mod this ) ) ) :concession ( even-if :op1 ( choose-01 :arg0 you :arg1 ( retire-01 :arg0 you :destination ( circle :mod entertainment ) :time ( time :mod this ) ) ) ) )
and :op1 ( continent_name_2 :domain ( clashes :location ( conflict-01 :quant num_0 ) ) :mod also ) :op2 ( drive-02 :arg0 ( person :mod other :arg0-of drive-01 ) :arg1 ( home :poss person ) :location ( home :poss person ) :location ( home :poss person ) )
multi-sentence :snt1 ( fear-01 :arg0 i :time now ) :snt2 ( scare-01 :arg0 ( tell-01 :arg0 ( person :arg0-of ( have-rel-role-91 :arg1 i :arg2 child ) ) :arg1 ( break-01 :arg1 ( heart :part-of i ) ) ) ) :snt3 ( say-01 :arg0 he :arg1 ( break-01 :arg1 ( heart :part-of i ) ) )
list-01 :arg1 ( tiger :location northeast ) :arg2 ( and :op1 ( species :arg1-of endanger-01 ) :op2 ( species :arg1-of endanger-01 ) :op3 ( species :arg1-of endanger-01 ) ) :time now
focus-01 :arg0 ( research-01 :time current ) :arg2 ( change-01 :arg1 ( area :example ( and :op1 ( politics :mod politics :mod globe ) :op2 economy :op3 culture :op4 culture :op5 culture ) ) ) :arg1-of ( cause-01 :arg0 ( change-01 :arg0 ( change-01 :mod this ) :arg1 ( and :op1 ( govern-01 :mod nation ) :op2 ( govern-01 :mod globe ) :op3 ( govern-01 :mod globe ) ) ) )
multi-sentence :snt1 ( and :op1 ( perform-01 :arg1-of brilliant-01 ) :op2 music :op3 light :op4 stage ) :snt2 ( impress-01 :arg1 i )
have-concession-91 :arg1 ( indicate-01 :arg0 ( person :arg0-of observe-01 :quant some ) :arg1 ( have-03 :arg0 person :arg1 ( colors :mod ethnic ) ) ) :arg2 ( indicate-01 :arg0 ( person :arg0-of observe-01 :mod some ) :arg1 ( inspire-01 :arg0 ( thing :mod this ) :arg1 thing_name_0 ) )
and :op1 ( book :mod country_name_0 :domain ( book :name ( name :op1 mr. :op2 krugman :op3 krugman ) :mod last ) :location ( book :ord ( ordinal-entity ordinal-entity_num_0 ) ) ) :op2 ( tell-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg2 zizman ) ) :arg1 ( story :topic life :arg1-of ( slum-tenants :arg0 ( food :location ( orchards :quant num_1 ) ) ) ) :arg2 life ) :medium ( book :ord ( ordinal-entity ordinal-entity_num_0 ) )
and :op1 ( convert-01 :arg1 ( yard :name ( name :op1 '' ) :arg1-of black-04 ) :arg2 ( field :name ( name :op1 '' ) :mod '' ) ) :op2 ( convert-01 :arg1 ( spires :name ( name :op1 red-brick ) ) :arg2 ( sports :arg1-of modern-02 ) )
share-01 :arg0 ( police :mod country_name_0 ) :arg1 ( paradise :poss police ) :arg2 ( tour-01 :arg0 police :arg1 country_name_1 ) :time ( tour-01 :arg0 police :arg1 police :time ( tour-01 :arg0 police :arg1 police ) ) :time ( day :arg1-of same-01 ) :mod also
expect-01 :arg1 ( and :op1 ( continue-01 :arg1 ( operate-01 :arg1 agl ) ) :op2 ( say-01 :arg0 i :arg1 ( venture :mod joint :arg1-of ( mean-01 :arg2 ( continue-01 :arg0 ( person :mod country_name_0 ) :arg1 ( produce-01 :arg0 person :arg1 ( demand-01 :arg1 electricity ) ) ) ) ) ) )
state-01 :arg0 person_name_0 :arg1 ( and :op1 ( reduce-01 :arg0 ( thing :arg2-of ( value-01 :arg1 contract-02 ) ) :arg1 ( activity-06 :arg0 company ) ) :op2 ( value-01 :arg1 ( monetary-quantity monetary-quantity_num_0 :unit ( yuan :mod dollar ) ) :arg2 contract-02 ) )
and :op1 ( wrong-02 :arg1 ( question-01 :arg1 ( thing :arg1-of question-01 :mod that ) ) :arg2 ( suspect-01 :arg1 ( game :quant num_0 :mod olympic ) ) ) :op2 ( prove-01 :arg0 question-01 :arg1 ( wrong :domain ( suspect-01 :arg1 ( project :mod heathrow ) ) ) )
expect-01 :arg1 ( exceed-01 :arg0 ( monetary-quantity :arg1-of expend-01 :arg1-of ( expend-01 :arg2 ( project :mod new :location north :mod north ) ) ) :arg1 ( monetary-quantity monetary-quantity_num_0 :unit dollar ) ) :time ( expect-01 :arg1 ( exceed-01 :arg0 project :arg1 ( monetary-quantity monetary-quantity_num_1 :unit dollar :arg1-of ( amount-01 :arg2 ( approximately :op1 ( monetary-quantity monetary-quantity_num_1 :unit dollar ) ) ) ) :time ( year :mod last ) ) ) :mod 2016
express-01 :arg0 we :arg1 ( sympathize-01 :arg0 we :arg1 ( and :op1 ( family :arg1-of ( have-org-role-91 :arg0 we :arg2 member ) ) :op2 ( person :arg0-of ( have-rel-role-91 :arg1 we :arg2 friend ) ) ) :arg1-of deep-02 ) :location ( sorrow :mod this )
occupy-01 :arg1 ( person :arg0-of ( have-org-role-91 :arg2 president ) ) :arg1-of succeed-01 :time ( occupy-01 :arg1 ( person :arg0-of ( have-org-role-91 :arg2 president ) ) )
cause-01 :arg0 ( start-01 :arg0 i :location here :time ( before :op1 now :quant ( temporal-quantity temporal-quantity_num_0 :unit year ) ) ) :arg1 i
serve-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg1 country_name_0 :arg2 ( minister :mod prime ) ) ) :arg1 ( person :arg0-of ( have-org-role-91 :arg1 country_name_1 :arg2 ( minister :mod prime ) ) ) :time ( prior :op1 ( and :op1 ( resumption :poss ( person :arg0-of ( have-org-role-91 :arg2 president ) ) ) :op2 ( person :arg0-of ( have-org-role-91 :arg2 president ) ) :quant ( temporal-quantity :quant 1/2 :unit year ) ) )
say-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg1 mr. :arg3 mortimer ) ) :arg1 ( and :op1 ( effective-04 :arg0 ( act-02 :arg0 ( government-organization :arg0-of ( govern-01 :arg1 country_name_0 ) ) ) :arg1 ( pressure-01 :arg0 action :arg1 ( and :op1 team :op2 service :mod full ) ) :degree little ) :op2 ( contrary-01 :arg1 action :arg2 fear-01 ) :op3 ( concern-01 :arg0 action :arg1 ( and :op1 ( person :arg0-of ( have-rel-role-91 :arg2 patient ) ) :op2 ( family :arg1-of ( have-org-role-91 :arg0 person :arg2 member ) ) :op3 ( family :arg1-of ( have-org-role-91 :arg0 person :arg2 member ) ) ) ) )
believe-01 :arg0 ( person :arg0-of ( use-01 :arg1 internet ) :mod other ) :arg1 ( select-01 :arg1 ( person :arg0-of ( use-01 :arg1 internet ) :mod other ) :mod actual :arg1-of ( say-01 :arg0 he :medium online ) )
person :arg0-of ( have-org-role-91 :arg3 judge-01 ) :arg0-of ( have-org-role-91 :arg3 judge-01 ) :arg0-of ( have-org-role-91 :arg3 judge-01 ) :arg0-of ( have-org-role-91 :arg3 judge-01 ) :arg0-of ( have-org-role-91 :arg3 judge-01 ) :arg0-of ( have-org-role-91 :arg3 judge-01 ) :arg0-of ( have-org-role-91 :arg3 judge-01 ) :arg0-of ( have-org-role-91 :arg3 judge-01 ) :arg0-of ( have-org-role-91 :arg3 judge-01 ) :arg0-of ( have-org-role-91 :arg3 judge-01 ) :arg0-of ( have-org-role-91 :arg3 judge-01 ) :arg0-of ( have-org-role-91 :arg3 judge-01 ) :arg0-of ( have-org-role-91 :arg3 judge-01 ) :arg0-of ( have-org-role-91 :arg3 judge-01 ) :arg0-of ( have-org-role-91 :arg3 judge-01 ) :arg0-of ( have-org-role-91 :arg3 judge-01 ) :arg0-of ( have-org-role-91 :arg3 judge-01 ) :arg0-of ( have-org-role-91 :arg3 judge-01 )
and :op1 ( fund-01 :arg1 ( monetary-quantity monetary-quantity_num_0 :unit yuan :mod this ) ) :op2 ( solve-01 :arg1 ( need-01 :arg0 i ) )
say-01 :arg0 ( person :arg0-of ( have-rel-role-91 :arg1 ( person :arg0-of ( have-rel-role-91 :arg1 person :arg2 parent ) ) :arg2 parent ) ) :arg1 ( and :op1 ( hard-02 :arg1 ( say-01 :arg0 ( person :arg0-of ( have-rel-role-91 :arg1 person :arg2 parent ) ) :arg1 ( hard-02 :arg1 person ) ) ) :op2 ( content-01 :arg1 person :arg2 ( content-01 :arg1 person ) ) :arg1-of rare-02 )
and :op1 ( enter-01 :arg0 ( police :mod central :part-of ( state :ord ( ordinal-entity ordinal-entity_num_0 ) ) ) :arg1 ( prison :mod region :mod leyte ) ) :op2 ( kill-01 :arg0 police :arg1 ( person :arg0-of ( attempt-01 :arg1 ( attempt-01 :arg0 person :arg1 ( have-org-role-91 :arg0 person :arg1 police ) ) ) :mod '' ) ) :time yesterday
move-01 :arg0 ( documentary :name ( name :op1 paula ) :arg1-of fame-01 :arg0-of ( have-org-role-91 :arg2 director ) ) :arg1 ( story :topic greecia ) :arg2 ( and :op1 ( person :arg0-of ( have-org-role-91 :arg2 ( director :mod documentary ) ) :arg1-of fame-01 ) :op2 ( merge-01 :arg1 ( channel :mod news ) ) ) :degree ( more :degree far )
fall :domain ( fall-01 :arg1 ( capital :mod foreign ) :arg3 ( develop-02 :arg1 ( product :arg1-of gross-03 :mod domestic :poss country_name_0 ) ) )
step-01 :arg2 ( say-01 :arg1 ( thing :arg2-of ( value-01 :arg1 ( thing :arg1-of ( precede-01 :arg2 brain ) ) ) ) :arg1-of complete-02 ) :li num_0
and :op1 ( affect-01 :arg0 ( lens :mod this ) :arg1 ( thing :arg2-of ( characteristic-02 :arg1 passivation ) ) ) :op2 ( produce-01 :arg0 thing :arg1 ( self :quant ( more-than :op1 num_0 ) :arg1-of pass-03 ) )
and :op1 ( issue-01 :polarity - :arg0 company :arg1 data :arg2 ( diversity :poss ( person :arg1-of employ-01 ) ) ) :op2 ( say-01 :arg0 company :arg1 ( company :arg1-of private-03 :domain data ) )
know-01 :arg0 she :arg1 ( and :op1 ( achieve-01 :arg0 ( state :arg0-of check-01 ) :arg1 ( thing :quant num_0 :arg1-of ( win-01 :arg0 state :arg2 ( game :mod olympic ) ) ) ) :op2 ( compete-01 :arg0 state :arg2 ( team :ord ( ordinal-entity ordinal-entity_num_1 ) :location thursday ) ) )
be-located-at-91 :arg1 ( team :mod that ) :arg2 ( team :mod that )
replace-01 :arg1 ( fruit :arg1-of fresh-04 ) :arg2 fruit :arg1-of ( cheap-02 :degree more )
have-part-91 :arg1 ( radar :mod this ) :arg2 ( missile :mod ballistics ) :time early :purpose ( monitor-01 :arg0 system :arg1 ( missile :mod country_name_0 ) )
become-01 :arg1 features :arg2 ( problem :arg1-of major-02 :topic ( campaign-01 :arg0 president ) )
support-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg2 president ) ) :arg1 ( thing :arg1-of propose-01 :mod this ) :mod also
good :degree most :domain team :time always
issue-02 :arg0 ( permit-01 :arg1 ( permit-01 :arg1 ( day :mod work-01 :quant ( up-to :op1 num_0 ) ) ) ) :arg1-of clear-06
multi-sentence :snt1 ( and :op2 ( account-01 :arg0 ( consume-01 :arg1 electricity ) :arg1 ( rate-entity-91 :arg1 ( about :op1 ( monetary-quantity monetary-quantity_num_0 :unit pound ) ) :arg2 ( thing :arg0-of ( refine-01 :arg1 electricity ) ) ) ) ) :snt2 ( possible-01 :arg1 ( react-01 :arg0 chain ) )
and :op1 ( exceed-01 :arg0 ( lack-01 :arg1 ( fund :purpose ( service :mod community :arg1-of legal-02 ) ) ) :arg1 limit-01 :arg1-of long-03 ) :op2 ( face-01 :arg0 lack-01 :arg1 ( cut-02 :arg1 fund :degree further ) :time now )
respond-01 :polarity - :arg0 ( spokesmen :mod trumps ) :arg1 ( news :mod this )
start-01 :arg0 ( tribune :name ( name :op1 geneva ) ) :arg1 ( investigate-01 :arg1 ( tribune :mod ( event :mod ( event :mod conventional ) :mod ( event :mod conventional ) ) ) )
contrast-01 :arg1 ( possible-01 :arg1 ( be-located-at-91 :arg1 ( area :arg1-of dry-08 :poss venus ) :arg2 earth ) ) :arg2 ( and :op1 ( enough :quant enough :domain ( change-01 :arg1 water ) ) :op2 ( change-01 :arg0 area :arg1 life ) :op3 ( prevent-01 :arg0 area :arg1 life :manner fast ) )
expose-01 :arg1 ( and :op1 ( temperature :arg1-of high-02 ) :op2 ( ultraviolets :mod ultraviolet ) ) :arg2 ( and :op1 ( temperature :arg1-of high-02 ) :op2 ( ultraviolets :time ( after :op1 now :quant ( multiple :op1 ( temporal-quantity temporal-quantity_num_0 :unit year ) ) ) ) ) :concession ( possible-01 :arg1 ( exist-01 :arg1 ( person :mod country_name_0 ) :arg1-of exist-01 ) )
boom :arg0 they :arg1 ( person :arg0-of tour-01 :mod mediterranean ) :time ( end-01 :arg1 season )
appoint-01 :arg1 ( person_name_0 :arg0-of ( have-org-role-91 :arg2 deputy ) :arg0-of ( have-org-role-91 :arg2 deputy ) :arg0-of ( have-org-role-91 :arg2 deputy ) :arg0-of ( have-org-role-91 :arg2 deputy ) ) :arg2 ( successor :poss person )
and :op1 ( close-10 :arg1 ( fan :mod bridge :arg1-of ( near-02 :arg2 ( near-02 :arg2 ( bridgeheads :quant num_0 :part-of bridge ) ) ) ) :arg2 ( complete-01 :arg1 fan ) :time now ) :op2 ( lead-01 :arg0 bridge :arg1 project :degree kind-of )
multi-sentence :snt1 ( age-01 :arg1 ( person :mod old ) :arg2 ( temporal-quantity temporal-quantity_num_0 :unit year ) :time ( before :op1 now :duration ( temporal-quantity temporal-quantity_num_1 :unit year ) ) ) :snt2 ( and :op1 ( spread-01 :arg1 news :arg2 ( virus :location twitter ) ) :op2 ( be-02 :arg1 news ) )
declare-02 :arg0 ( person_name_0 :arg0-of ( have-org-role-91 :arg1 research-institute_name_1 ) ) :arg1 ( say-01 :arg0 person :arg1 ( duty :mod religion :domain ( duty :mod religion ) :purpose ( oppose-01 :arg0 person :arg1 person ) ) ) :arg1-of report-01 :time ( campaign-01 :arg0 person )
and :op1 ( begin-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg2 zhao ) ) :arg1 ( try-02 :arg1 ( material :mod apply-01 ) :arg2 ( try-02 :arg1 ( and :op1 ( person :ord ( ordinal-entity ordinal-entity_num_0 ) :arg0-of apply-01 ) :op2 ( person :arg0-of ( have-org-role-91 :arg2 trade-01 ) ) :ord ( ordinal-entity ordinal-entity_num_0 ) ) ) :mod preliminary :purpose ( try-02 :arg1 ( apply-02 :arg1 ( apply-01 :arg1 apply-01 ) ) :ord ( ordinal-entity ordinal-entity_num_0 ) ) ) ) :op2 ( impact-01 :arg0 ( environment :mod ( center :part-of settlement ) ) :arg1 ( project :topic construct-01 ) :time ( after :op1 ( impact-01 :arg0 ( and :op1 ( date-entity year_date-entity_1 ) :op2 ( date-entity year_date-entity_2 ) ) ) ) )
become-01 :arg1 ( and :op1 ( benefit-01 :arg0 ( reduce-01 :arg1 ( thing :arg1-of ( behave-01 :arg0 ( government-organization :arg0-of govern-01 ) ) ) ) ) :op2 ( reduce-01 :arg1 pollutant :arg2 ( behave-01 :arg0 ( government-organization :arg0-of govern-01 ) :arg1-of hanging-07 ) ) ) :arg1 ( behave-01 :arg0 enterprise :arg1 ( protect-01 :arg0 enterprise :arg1 ( and :op1 environment :op2 nature :op3 ( health :mod public ) ) ) ) :arg2 ( behave-01 :arg1 ( market :mod conscious ) )
organize-01 :arg0 ( person :mod country_name_0 ) :arg1 ( team :quant num_0 :arg0-of research-01 ) :purpose ( and :op1 ( participate-01 :arg0 team :arg1 ( research-01 :arg1 city ) ) :op2 ( prepare-02 :arg0 team :arg2 topic ) :op3 ( prepare-01 :arg0 team :arg1 topic ) ) :location mid-august
provide-01 :polarity - :arg0 ( authority :mod prison ) :arg1 ( instruct-01 :arg0-of detail-01 :arg2-of ( include-01 :arg1 ( thing :manner-of ( give-01 :arg1 ( hand :arg1-of imprison-01 ) :arg2 ( person :arg1-of imprison-01 ) ) ) ) )
and :op1 ( cause-01 :arg0 ( adjust-01 :arg1 economy :arg1-of deep-02 :mod still ) :arg1 ( complicate-01 :arg1 situation :degree so ) ) :op2 ( complicate-01 :arg1 situation :degree so :arg0-of ( cause-01 :arg1 ( expect-01 :polarity - :arg1 ( pressure-01 :arg0 ( recovery :arg1 ( economy :poss world ) ) :mod ( large :degree relative :mod still ) ) ) ) )
involve-01 :arg1 ( and :op1 ( technology :name ( name :op1 printing ) ) :op2 ( technology :name ( name :op1 chuck ) ) ) :arg2 ( design-01 :arg1 beaks ) :mod also :mod 3d
include-91 :arg1 ( thing :arg0-of ( cause-01 :arg1 ( pollution :mod environment ) ) :quant ( multiple :op1 num_0 ) ) :arg2 ( produce-01 :arg1 ( product :mod oil ) :arg1-of high-02 )
and :op1 ( publish-01 :arg1 ( paper :mod this ) :purpose ( ensure-01 :arg1 ( fair :domain ( action :mod ( person :arg0-of study-01 ) ) ) ) ) :op2 ( and :op1 ( open-01 :arg1 paper ) :op2 ( open-01 :arg1 paper ) :op3 ( accept-01 :arg1 ( supervise-01 :arg1 ( person :arg0-of read-01 ) ) :arg1-of ( base-02 :arg2 ( information :arg1-of public-02 ) ) ) :time today )
and :op2 ( increase-01 :arg0 ( population :mod new ) :arg1 ( population :mod new ) ) :time ( period :mod same )
multi-sentence :snt1 ( invest-01 :location location_name_0 :arg1-of ( compare-01 :arg2 ( product-of :op1 num_0 :op2 ( temporal-quantity temporal-quantity_num_0 :unit year ) ) ) ) :snt2 ( '' :mode expressive )
cause-01 :arg0 ( and :op1 ( activity-06 :arg0 ( person :mod both ) ) :op2 ( become-01 :arg1 person :arg2 ( familiarize-01 :arg1 person ) :time soon ) ) :arg1 ( meet-03 :location ( group :mod large ) )
person :arg0-of study-01 :location ( and :op1 ( university :location ( and :op1 ( school :mod central :mod country_name_0 ) :op2 ( school :location south :mod country_name_1 ) ) ) )
multi-sentence :snt1 ( miss-01 :arg1 ( boy :mod little ) ) :snt2 ( throw-01 :arg0 ( girl :mod little ) :arg1 water :arg2 water :mod only :purpose ( reveal-01 :arg0 girl :arg1 ( and :op1 ( head :mod small :poss girl ) :op2 ( sinking :arg0 girl :arg1 ( head :part-of she :mod small ) :time ( time :direction down ) ) ) :op3 ( jumped :arg1 girl :arg2 ( river :arg1-of ( learn-01 :arg0 girl :arg2 swim-01 ) ) ) ) )
attempt-01 :polarity - :arg0 defendant :arg1 ( and :op1 ( cause-01 :arg0 defendant :arg1 consequence ) :op2 ( recommend-01 :arg1 ( adopt-01 :arg0 defendant :arg1 ( punish-01 :arg1-of light-06 ) ) ) ) :time ( case-03 :arg1 ( person :arg1-of arrest-01 :arg1-of arrest-01 ) )
say-01 :arg0 ( attorney :name ( name :op1 forestry ) :poss country ) :arg1 ( task :mod ( urgent :degree most ) :domain ( task :mod ( urgent :degree most ) :beneficiary ( and :op1 ( person :mod country_name_0 :mod country_name_1 ) :op2 ( research-institute_name_1 :mod leopards ) :op3 ( protect-01 :arg1 leopard ) :op4 ( protect-01 :arg0 country :arg1 protect-01 ) :op5 ( protect-01 :arg0 and :arg1 protect-01 ) :mod also ) ) :beneficiary ( and :op1 ( tiger :mod country_name_2 ) :op2 ( and :op1 ( attorney :name ( name :op1 abc ) ) :op2 ( population :mod leopard ) ) :mod also ) )
file-01 :arg0 ( person :arg0-of ( have-rel-role-91 :arg1 victim :arg2 relative ) ) :arg1 ( apply-01 :arg2 court :mod full ) :arg2 court :time ( early :op1 ( hour :mod early :part-of ( july :quant num_1 ) ) ) :arg1-of ( cause-01 :arg0 ( expiration :arg1 ( period :mod detain-01 :poss ( authority :mod sea ) ) ) )
and :op1 ( inspire-01 :arg0 ( cancer :topic cancer ) :arg1 ( and :op1 graf :op2 heather ) ) :op2 ( win-01 :arg0 and :arg1 ( medal :mod gold ) :location ( rowing :mod rowing ) )
headquarter-01 :arg0 military :arg1 ( operation :mod military :location ( and :op1 world-region_name_1 :op2 ( company_name_3 :mod central ) ) ) :mod military
indicate-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg2 official ) ) :arg1 ( conclude-01 :arg0 ( team :poss ( person :arg0-of ( have-org-role-91 :arg2 ( president :mod vice ) ) ) ) :arg1 ( reduce-01 :polarity - :arg0 ( strike-01 :arg1 ( refinery :mod ( state :mod state ) ) :mod air ) :arg1 ( income :poss ( organization :mod terrorism ) ) :arg1-of significant-02 ) :time ( since :op1 ( build-01 :arg0 ( organization :mod terrorism ) :arg1 ( refinery :mod oil :arg0-of ( continue-01 :arg1 ( sell-01 :arg1 oil :location ( market :arg1-of black-07 ) ) :arg1-of ( contrary-01 :arg2 ( thing :arg1-of state-01 :arg1-of declare-02 ) ) ) ) ) ) ) :time ( year :mod last )
trust-01 :arg1 ( and :op1 she :op2 ( person :arg0-of ( have-rel-role-91 :arg1 she :arg2 teammates ) ) ) :li num_0
and :op1 ( quick-02 :arg1 ( service :mod new ) :arg1-of quick-02 ) :op2 ( and :op1 ( respect-01 :arg1 ( citizen :arg0-of ( protect-01 :arg1 ( privacy :poss citizen ) ) ) ) :op2 ( protect-01 :arg1 ( citizen :arg1-of ( mean-01 :arg2 ( and :op1 ( day :ord ( ordinal-entity ordinal-entity_num_1 ) ) :op2 ( service :mod all-weather ) :op3 ( service :mod all-time ) ) ) ) ) )
attend-01 :arg0 ( and :op1 ( person :arg0-of ( have-org-role-91 :arg1 country_name_0 :arg2 ( secretary :mod defense ) ) ) :op2 ( person :arg0-of ( have-org-role-91 :arg1 country_name_1 :arg2 ( secretary :mod defense ) ) ) :op3 ( person :arg0-of ( have-org-role-91 :arg1 country :arg2 ( minister :mod foreign ) ) ) :op4 ( person :arg0-of ( have-org-role-91 :arg1 country :arg2 ( minister :mod defense ) ) ) :op5 ( person :arg0-of ( have-org-role-91 :arg1 country :arg2 ( minister :mod defense ) ) ) :op6 ( person :arg0-of ( have-org-role-91 :arg1 country :arg2 ( minister :mod defense ) ) ) :op6 ( person :arg0-of ( have-org-role-91 :arg1 country :arg2 ( minister :mod defense ) ) ) :op6 ( person :arg0-of ( have-org-role-91 :arg1 country :arg2 ( minister :mod defense ) ) ) :op7 ( person :arg0-of ( have-org-role-91 :arg1 country :arg2 ( minister :mod defense ) ) ) ) :arg1 ( conference :mod press )
say-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg3 judge-01 ) :location ( district :poss country_name_0 ) ) :arg1 ( obligate-01 :polarity - :arg1 ( person :arg0-of ( have-org-role-91 :arg1 country_name_1 :arg3 judge-01 ) ) :arg2 ( bear-01 :arg0 person :arg1 ( monetary-quantity :arg2-of ( cost-01 :arg1 defend-01 ) ) ) ) :medium ( sue-02 :arg0 person )
transfer-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg1 ( paulo :mod sÃ£o ) :arg2 governor ) ) :arg1 ( plan-01 :arg1 ( and :op1 ( school :quant num_0 :arg1-of public-02 ) :op2 ( person :quant num_1 :arg0-of study-01 ) ) ) :purpose ( save-01 :arg0 person :arg1 money ) :purpose ( save-01 :arg0 person :arg1 money )
impact-01 :arg0 ( industry :mod ( taxi :mod tradition ) :arg1-of local-02 ) :arg1 ( industry :mod ( taxi :mod tradition ) :arg1-of local-02 ) :time ( enter-01 :arg0 uber :arg1 ( market :arg1-of standard-02 ) :duration ( up-to :op1 ( temporal-quantity temporal-quantity_num_0 :unit year ) ) )
and :op1 ( focus-01 :arg0 ( person :arg0-of tour-01 :mod international ) :arg2 ( attract-01 :arg0 person :arg1 ( person :arg0-of tour-01 :mod international ) ) ) :op2 ( want-01 :arg0 we :arg1 ( improve-01 :arg0 we :arg1 ( capacity :poss we ) :purpose ( match-01 :arg0 we :arg1 ( status :poss ( island :mod international :mod tourism ) ) ) ) )
receive-01 :arg0 surrey :arg1 ( and :op1 ( point :quant num_3 ) :op2 ( rebounds :quant num_3 ) :op3 ( assists :quant num_3 ) ) :prep-in ( game :quant ( between :op1 num_0 :op2 num_1 ) )
and :op1 ( supply-01 :arg0 ( company :arg0-of ( supply-01 :arg1 power ) :mod electric :poss company ) :arg1 factory :arg2 factory ) :op2 ( invalidated :arg1 ( contract :name ( name :op1 portland :op2 portland :op3 portland :op4 portland :op5 portland :op6 portland :op7 portland ) :poss company_name_1 ) :arg2 factory :time current )
say-01 :arg0 ( person :arg0-of ( head-01 :arg1 ( center :mod ( community :mod ( community :mod queensland ) :arg1-of legal-02 ) ) ) ) :arg1 ( reject-01 :arg1 ( person :arg0-of ( head-01 :arg1 ( center :mod community :arg1-of legal-02 ) ) ) :frequency ( rate-entity-91 :arg3 ( temporal-quantity temporal-quantity_num_0 :unit year ) ) :arg1-of ( conform-01 :arg2 ( association :mod community :mod ( late :degree most ) :poss community ) ) )
find-02 :arg1 ( die-01 :arg1 ( person :quant num_0 :arg0-of ( move-01 :arg1 ( francisco :mod san ) :mod just ) ) ) :arg1-of ( cause-01 :arg0 ( founded :arg1 ( mall :arg1-of local-02 ) :time ( week :mod this ) ) )
and :op1 ( good :domain ( resumption :poss ( dialogue-01 :arg0 ( person :arg0-of ( lead-02 :arg1 ( country :quant num_0 ) ) ) ) ) :mod certain ) :op2 ( bring-up-02 :arg0 ( person :arg0-of ( lead-02 :arg1 ( organization :quant num_0 ) ) ) :arg1 ( and :op1 ( temporal-quantity temporal-quantity_num_0 :unit month ) :op2 ( disaster :arg1-of major-02 ) ) ) :mod certain :mod certain :domain ( resumption :poss dialogue-01 )
contrast-01 :arg1 ( good-04 :arg1 ( character :poss he ) :arg2 ( horse :mod country_name_0 ) ) :arg2 ( jockey :mod incredible :domain ( character :poss he ) )
represent-01 :arg0 ( field :mod country_name_0 ) :arg1 ( field :mod country_name_1 ) :arg1-of typical-02 :time ( before :op1 now :duration ( multiple :op1 ( temporal-quantity temporal-quantity_num_0 :unit decade ) ) )
contrast-01 :arg1 ( game :mod last :mod still ) :arg2 ( compete-02 :polarity - :arg0 ( and :op1 biles :op2 ( duck :mod other ) ) :arg1-of ( instead-of-91 :arg2 ( contest :mod ( between :op1 biles :op2 ( thing :mod great ) ) ) ) )
say-01 :arg0 i :arg1 ( apologize-01 :arg0 they :arg2 ( person :quant ( more-than :op1 num_0 ) :mod other :arg0-of ( protest-01 :arg1 ( interpretation :poss ( person :arg0-of ( protest-01 :arg1 ( interpretation :mod byron ) ) ) ) ) ) ) :arg2 person_name_0 :time then
and :op1 ( continue-01 :arg1 ( promote-02 :arg1 ( reform-01 :arg1 ( share-01 :arg1 community ) ) ) ) :op2 ( encourage-01 :arg0 step :arg1 ( person :arg0-of farm-01 ) :arg2 ( and :op1 ( develop-02 :arg0 person :arg1 ( develop-02 :mod joint ) ) :op2 ( establish-01 :arg0 person :arg1 ( mechanism :mod ( operation :mod ( operation :mod democracy ) ) :location ( level :location village ) ) ) ) )
and :op1 ( generate-01 :arg0 ( industry :mod tourism ) :arg1 revenue ) :op2 ( reach-01 :arg0 revenue :arg1 ( percentage-entity percentage-entity_num_0 :quant-of ( product :arg1-of gross-03 :mod domestic ) ) ) :op3 ( reach-01 :arg0 revenue :arg1 ( percentage-entity percentage-entity_num_3 ) :location num_3 )
contrast-01 )
contrast-01
and :op1 ( accumulate-01 :arg0 team :arg1 ( experience-01 :arg1 ( research-01 :arg1-of continue-01 ) :mod rich ) :time first ) :op2 ( follow-01 :arg1 team :arg2 ( train-01 :mod science :arg0-of ( need-01 :arg1 ( consult-01 :arg1 team :arg2 ( term :arg1-of long-03 ) ) ) ) )
show-01 :arg0 ( person :arg0-of ( surgery-01 :arg2 surgery-01 ) ) :arg1 ( print-01 :arg0 person :arg1 ( bird :mod plastic ) :arg1-of print-01 ) :location ( conference :mod press ) :location ( conference :mod press ) :location ( conference :mod press )
have-concession-91 :arg1 ( and :op1 ( move-01 :arg1 it :arg2 ( birdhouses :mod luxury ) ) :op2 ( meet-03 :arg0 it :arg1 ( person :arg0-of ( care-01 :arg1 it ) :arg0-of ( care-01 :arg1 it ) ) ) ) :arg2 ( proclaims :arg1 ( day :mod this ) :mod ( only :polarity - ) )
and :op1 ( kill-01 :arg0 police :arg1 ( person :arg1-of suspect-01 ) :time ( before :op1 ( come-01 :arg1 person :arg4 power :time ( year :mod last ) ) ) :ord ( ordinal-entity ordinal-entity_num_0 ) ) :op2 ( come-01 :arg1 person_name_0 :arg4 power :time ( year :mod last ) )
take-10 :arg0 ( operation :mod ( market :arg1-of pure-02 ) ) :arg1 ( way :manner-of ( operation :mod ( market :arg1-of pure-02 ) ) ) :mod ( edmond :mod old ) :location ( relative-position :op1 north :direction north )
say-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg1 ( agency :mod news :mod '' :poss country_name_0 ) :arg3 ( temporal-quantity temporal-quantity_num_0 :unit month ) ) ) :arg1 ( rate-entity-91 :arg1 ( rate :mod inflation ) :arg2 ( temporal-quantity temporal-quantity_num_1 :unit year ) )
and :op1 ( over :domain ( rehearsal :arg1 ( ceremony :mod ( open-02 :arg1 open-01 ) ) ) ) :op2 ( hold-04 :arg1 ( perform-02 :mod formal ) :time ( morning :mod tomorrow ) ) :time present
win-01 :arg0 ( team :mod fiji ) :arg1 ( medal :mod gold ) :arg2 ( perform-02 :arg0 team :arg1 ( and :op1 ( perform-02 :arg0 team :arg1 ( and :op1 ( control-01 :arg0 team :arg1 ( and :op1 ( control-01 :arg0 team :arg1 ( and :op1 ( control-01 :arg0 team ) :op2 ( break-01 :arg1 team ) :op3 ( cooperate-01 :arg0 team ) :op4 ( run-01 :arg0 team :arg1 power ) :op5 ( run-01 :arg0 team :arg1 power ) :op6 ( run-01 :arg0 team :arg1 power ) :op7 ( power :ord ( ordinal-entity ordinal-entity_num_0 ) :location country ) ) ) ) ) ) ) ) )
multi-sentence :snt1 ( contrast-01 :arg1 ( help-01 :arg0 ( brown :mod kyle ) :arg1 ( lead-01 :arg0 brown ) ) :arg2 ( score-01 :arg1 person_name_0 :arg2 good ) :ord ( ordinal-entity ordinal-entity_num_0 ) ) :snt2 ( half :mode interrogative )
journey :arg1 ( journey :arg0-of ( make-02 :arg1 ( journey :time ( no-longer :mod little ) ) ) )
important :domain ( affect-01 :polarity - :arg0 ( opponent :poss you ) :arg1 it ) :mod really
and :op1 ( change-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg1 ( team :mod congressional :mod country_name_0 ) :arg2 official ) ) :arg1 ( report-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg1 ( team :mod central :part-of command-02 ) :arg2 official ) ) ) ) :op2 ( describe-01 :arg0 person :arg1 ( war-01 :location ( and :op1 country :op2 ( state :mod religious-group ) ) ) :arg2 ( thing :arg1-of report-01 ) ) :medium ( report :arg1-of ( release-01 :arg0 ( team :mod congressional ) ) )
say-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg2 official ) ) :arg1 ( conclude-01 :arg0 ( team :poss ( person :arg0-of ( have-org-role-91 :arg2 ( official :mod general ) ) ) ) :arg1 ( reduce-01 :polarity - :arg0 ( strike-01 :arg1 ( refinery :mod state ) :mod air ) :arg1 ( income :mod finance :poss ( organization :mod terrorism ) ) :arg1-of significant-02 ) :arg1-of ( cause-01 :arg0 ( build-01 :arg0 ( organization :mod terrorism ) :arg1 ( refinery :mod oil :purpose ( continue-01 :arg1 ( sell-01 :arg1 oil :location ( market :arg1-of black-04 ) :arg1-of ( differ-02 :degree quite ) ) ) ) ) ) ) :time ( year :mod last )
multi-sentence :snt1 ( interest-01 :arg2 ( note-01 :arg1 ( respond-01 :arg0 ( government-organization :arg0-of govern-01 ) :arg2 ( person :arg0-of hunger-01 ) ) ) :mod particular ) :snt2 ( possible-01 :arg1 ( handle-01 :arg0 i :arg1 ( anything :mod else ) :degree total ) )
say-01 :arg0 low-04 :arg1 ( and :op1 ( prompt-01 :arg0 ( price-01 :arg1 oil :arg1-of low-04 ) :arg1 ( refiner :mod globe ) :purpose ( produce-01 :arg0 refiner :arg1 ( oil :arg1-of ( distribute-01 :degree more ) ) ) ) :op2 ( facilitate-01 :arg0 thing :arg1 ( oversupply :arg1 market ) ) ) :medium ( report :mod monthly ) :mod also
enter-01 :arg0 ( and :op1 ( support-01 :arg0 country :arg1 ( system :mod medicine :poss country ) ) :op2 ( support-01 :arg0 country :arg1 ( system :mod ( manage-01 :arg1 chain ) :arg1-of integrate-01 ) ) ) :arg1 ( hospital :mod all ) :manner gradual :time ( year :mod recent ) :manner gradual
win-01 :arg0 ( person :arg0-of ( have-rel-role-91 :arg1 i :arg2 lawyer ) ) :arg2 ( compete-01 :purpose ( patent-01 :arg1 ( c :mod c :mod c ) ) ) :location ( compete-01 :mod c )
say-01 :arg0 person_name_0 :arg1 ( and :op1 ( receive-01 :arg0 person :arg1 ( audit-01 :mod irs ) :mod also ) :op2 ( fear-01 :arg0 person :arg1 ( fear-01 :polarity - :arg0 ( person :arg0-of vote-01 ) ) ) )
write-01 :arg0 i :manner ???
and :op1 ( have-03 :arg0 ( person :quant num_0 :arg0-of have-03 ) :arg1 knife :prep-with ( tramp :mod another ) ) :op2 ( kill-01 :arg0 knife :arg1 knife )
have-03 :polarity - :arg0 ( person :quant num_0 :arg1-of ( include-91 :arg2 ( person :arg0-of play-01 :mod young ) ) ) :arg1 ( line :mod outside ) :concession ( person :arg0-of play-01 :mod ( young :degree most ) :domain ( person :quant num_0 ) :time now )
say-01 :arg0 person_name_0 :arg1 ( become-01 :arg1 situation :arg2 ( bad-04 :arg1 situation :degree more ) :condition ( change-01 :polarity - :arg0 ( government-organization :arg0-of govern-01 :mod federal ) :arg1 ( decide-01 :arg1-of exist-01 ) ) )
light :quant num_0 :domain ( cluster :mod pleiades ) :source earth
have-03 :arg0 they :arg1 ( effect :instrument-of brake-01 :topic star ) :time ( pass-07 :arg1 they :arg2 ( field :mod magnet :poss star ) )
tell-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg2 mcewan ) ) :arg1 ( commit-01 :arg1 ( sentiment :poss ( brand :name ( name :op1 scotland :op2 brand ) :mod royal :poss ( brand :name ( name :op1 scotland ) :mod royal ) ) ) :arg2 ( ambition :mod globe :poss sentiment ) :time ever ) :arg2 person_name_0
contrast-01 :arg1 ( provide-01 :arg0 ( bank :mod royal :part-of country_name_0 ) :arg1 ( customer :mod country_name_1 ) ) :arg2 ( reply-01 :polarity - :arg0 bank :arg1 customer )
multi-sentence :snt1 ( tell-01 :arg0 he :arg2 ( branch :mod country_name_0 ) ) :snt2 ( become-01 :arg1 ( brand :name ( name :op1 employee :op2 brand ) :mod royal ) :arg2 ( brand :mod ( person :arg0-of ( invest-01 :arg2 ( person :arg0-of invest-01 ) ) ) ) :mod also :arg1-of ( cause-01 :arg0 ( sense-02 :arg1 ( become-01 :arg1 we :arg2 ( brand :quant many :part-of bank ) ) ) :mod also ) )
tell-01 :arg0 ( person_name_0 :arg0-of ( have-org-role-91 :arg1 country_name_1 :arg2 putin ) ) :arg1 ( and :op1 ( demand-01 :arg0 person :arg1 resign-01 ) :op2 ( recommend-01 :arg0 person :arg1 ( jean :arg0 ( jean :name ( name :op1 mr. :op2 mr. ) ) :arg1 ( pick-01 :arg0 person :arg1 ( any :arg1-of ( include-91 :arg2 person ) ) ) ) ) ) :arg2 ( television :name ( name :op1 mr. :op2 television :op3 television ) )
find-01 :arg0 scene :arg1 ( scene :arg0-of ( offense-02 :arg1 shell ) :quant lot :arg1-of ( inferred :arg2 ( use-01 :arg0 they :arg1 ( weapon :arg0-of offense-02 :arg1-of differ-02 ) ) ) )
and :op1 ( consult-01 :arg0 ( we :arg1-of ( include-91 :arg2 we :arg3 ( slash :op1 ( distance-quantity distance-quantity_num_0 :unit york ) :op2 ( distance-quantity distance-quantity_num_1 :unit -rrb- ) ) ) :mod new :mod york ) ) :op2 ( learn-01 :arg0 we :arg1 ( thing :manner-of ( deal-01 :arg2 ( person :arg0-of ( specialize-01 :arg1 gun ) ) :manner close ) ) )
sound-01 :mode interrogative :arg2 ( complicate-01 :degree very )
say-01 :arg0 he :arg1 ( unfit :domain ( person :arg0-of ( have-org-role-91 :arg2 president ) ) )
and :op1 ( spirit :mod ( thing :arg1-of ( opine-01 :arg0 ( thing :arg1-of ( opine-01 :arg0 ( thing :arg1-of ( opine-01 :arg0 ( thing :arg1-of ( opine-01 :arg0 ( thing :arg1-of ( opine-01 :arg0 ( thing :arg1-of ( opine-01 :arg0 ( thing :arg1-of ( opine-01 :arg0 ( thing :arg1-of ( opine-01 :arg0 ( thing :arg1-of ( opine-01 :arg0 ( thing :arg1-of ( opine-01 :arg0 ( thing :arg1-of ( opine-01 :arg0 ( thing :arg1-of ( opine-01 :time present ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) :op2 ( policy :mod inconsistent :mod inconsistent ) :op3 ( measure-02 :arg1-of modify-01 :arg1-of modify-01 ) )
bring-01 :arg0 ( park :location district ) :arg1 ( home :mod ( old :degree ( most :quant num_0 ) ) ) :arg2 home :time ( before :op1 now :quant ( few :op1 ( temporal-quantity temporal-quantity_num_0 :unit day ) ) ) :mod just :arg1-of ( replace-01 :arg2 ( screen :quant num_1 :mod big :mod ( distance-quantity distance-quantity_num_1 :unit inch ) ) )
multi-sentence :snt1 ( tell-01 :arg0 ( person :arg0-of ( have-rel-role-91 :arg1 he :arg2 mother ) ) :arg1 ( person :arg0-of report-01 ) :arg2 ( person :arg0-of report-01 ) :location ( hesitation :poss person ) ) :snt2 ( guest :mode interrogative :mod c ) :snt3 ( guest :mod c )
expo :arg0 ( and :op1 ( person :arg0-of ( have-org-role-91 :arg1 villager ) ) :op2 ( person :arg0-of visit-01 ) ) :arg1 ( and :op1 villager :op2 ( person :arg0-of visit-01 ) ) :arg2 ( and :op1 villager :op2 ( person :arg0-of visit-01 ) ) :manner official :time recent
multi-sentence :snt1 ( amr-unknown
multi-sentence :snt1 ( say-01 :arg0 ( person :arg0-of ( enforce-01 :arg1 ( law :arg0-of ( enforce-01 :arg1 ( law :mod tourism ) ) ) ) ) :frequency ( rate-entity-91 :arg1 num_0 :arg2 ( temporal-quantity temporal-quantity_num_0 :unit day ) ) :purpose ( check-out-05 :arg0 person :arg1 situation ) ) :snt2 ( and :op1 ( matter-01 :polarity - :arg1 ( travel-01 :arg0 vehicle ) ) :op2 ( matter-01 :polarity - :arg1 ( travel-01 :arg0 vehicle ) :time ( once :op1 ( hurt-01 :arg0 group :arg1 group ) ) ) )
and :op1 ( train-01 :arg0 military :arg2 sun :time ( before :op1 now :quant ( between :op1 ( temporal-quantity temporal-quantity_num_0 :unit hour ) :op2 ( temporal-quantity temporal-quantity_num_1 :unit hour ) ) ) :purpose ( have-03 :arg0 military :arg1 ( effect :arg1-of ( last-01 :arg2 ( temporal-quantity temporal-quantity_num_1 :unit hour ) ) ) ) ) :op2 ( lazy :domain sunscreens :degree total )
state :mod blanking :domain ( athletes :quant all ) :time ( after :op1 ( stepping :arg1 athletes :arg2 ( field :mod new ) ) )
multi-sentence :snt1 ( mention-01 :polarity - :arg1 ( setbacks :arg1 ( career :mod sports ) :extent ( compared :degree slight ) :compared-to ( and :op1 ( liang :mod yutian ) :op2 ( xuan :mod liu ) :op3 ( person :mod other ) :op4 ( person :mod other ) :op5 ( person :mod other ) :op5 ( person :mod other ) :op6 ( person :mod other ) :op6 ( person :mod other ) :op6 ( person :mod other ) :op6 ( person :mod other ) :op6 ( person :mod other ) :op6 ( person :mod other ) :op7 ( person :mod other ) ) ) ) :snt2 ( probable :domain ( immeasurable :arg1 ( image :mod sports ) ) )
combine-01 :arg1 ( mechanism :arg1-of ( pay-01 :arg3 pay-01 ) ) :arg2 ( date :time ( after :op1 ( complete-01 :arg1 ( business :mod pay-01 ) :purpose ( undertake :arg1 ( work-01 :arg0 business ) ) ) ) )
ride-01 :arg0 ( and :op1 ( commission :mod elderly ) :op2 ( bureau :mod ( finance :mod city ) ) :op3 ( bureau :mod city ) ) :arg1 ( bus :mod city ) :arg2 ( notice-03 :arg1 ( policy :mod prefer-01 ) :time ( year :mod ( date-entity decade_date-entity_0 ) :arg1-of ( implement-01 :manner official ) ) ) :time ( before :op1 now :quant ( between :op1 ( temporal-quantity :unit year ) :op2 ( temporal-quantity temporal-quantity_num_1 :unit year ) ) )
show-01 :arg0 ( data :quant num_0 :arg0-of monitor-01 :time ( late :degree most ) :arg0-of monitor-01 ) :arg1 ( be-located-at-91 :arg1 ( and :op1 ( person :arg0-of ( monitor-01 :arg1 data ) ) :op2 ( person :location ( relative-position :op1 river_name_0 :quant ( multiple :op1 num_1 ) ) ) ) :arg2 ( distance-quantity distance-quantity_num_0 :unit kilometer :mod only ) )
transfer-01 :arg0 ( person :arg2-of suspect-01 :arg1-of involve-01 ) :arg1 ( person :arg2-of suspect-01 :arg1-of involve-01 ) :arg2 ( prosecute-01 :arg0 person :arg1 ( person :arg0-of prosecute-01 ) ) :time recent
and :op1 ( watch-01 :arg0 i :arg1 ( perform-01 :arg0 ( person :arg0-of ( have-rel-role-91 :arg1 ( person :arg0-of ( have-rel-role-91 :arg1 he :arg2 daughter ) ) :arg2 daughter ) ) :arg2 ( person :arg0-of ( have-rel-role-91 :arg1 he :arg2 daughter ) ) ) :time ( before :op1 now :quant ( temporal-quantity temporal-quantity_num_0 :unit year ) ) ) :op2 ( watch-01 :arg0 i :arg1 ( perform-01 :arg0 ( person :arg0-of ( have-rel-role-91 :arg1 he :arg2 daughter ) ) :arg1 show-04 ) )
and :op1 ( achieve-01 :arg0 ( liu :name ( name :op1 mr. :op2 liu ) :mod pilot-01 ) :arg1 ( result :mod initial ) ) :op2 ( create-01 :arg0 liu :arg1 ( experience-01 :mod good ) ) :op3 ( give-01 :arg0 ( practice-01 :mod good ) :arg1 ( practice :mod good ) )
race :mod ( line :mod ( security :mod nation ) :location ( out :op1 ( line :mod bottom ) ) :domain ( line :name ( name :op1 fernando :op2 small-angle ) ) :arg1-of continue-01 :mod even ) :time ( after :op1 ( temporal-quantity temporal-quantity_num_0 :unit minute ) ) :arg1-of continue-01 :mod even
and :op1 ( restrict-01 :arg0 ( person :mod country_name_0 ) :arg1 area :time ( before :op1 ( shoveled :mod vicious :purpose ( grab-01 :arg1 ( violate-01 :arg1 ( metz :mod kerry ) ) ) ) ) ) :op2 ( receive-01 :arg0 he :arg1 ( card :mod yellow ) :arg1-of just-02 )
have-03 :arg0 we :arg1 ( roll :arg1-of complete-02 )
provide-01 :arg0 ( and :op1 ( thing :arg1-of ( learn-01 :medium online ) :arg2-of ( include-01 :arg1 ( and :op1 ( thing :arg1-of ( learn-01 :medium online ) ) :op2 ( discuss-01 :mod academia ) :op3 ( exchange-01 :mod academia ) ) ) ) :op2 ( thing :arg1-of discuss-01 :mod academia ) :op3 ( exchange-01 :mod academia ) ) :arg1 ( or :op1 ( relation-03 :arg0 doctor :arg1-of legal-02 ) :op2 ( support-01 :arg1 ( and :op1 support-01 :op2 ( service :mod other ) ) :op3 ( service :mod other ) :arg1-of legal-02 ) ) :location ( hospital :mod same )
have-condition-91 :arg1 ( increase-01 :arg1 ( function-01 :arg0 ( system :name ( name :op1 immune ) ) :mod even ) ) :arg2 ( increase-01 :arg1 ( function-01 :arg0 ( system :name ( name :op1 immune ) ) :mod even ) :arg1-of ( cause-01 :arg0 ( and :op1 ( function-01 :arg0 ( cancer :mod immune ) ) :op2 ( suffer-01 :arg0 ( system :name ( name :op1 immune ) ) :mod even ) ) ) )
multi-sentence :snt1 ( rate-entity-91 :arg1 num_0 :arg2 ( temporal-quantity temporal-quantity_num_0 :unit month ) ) :snt2 ( compete-02 :arg0 ( ring :mod num_5 ) :arg1 ( compete-01 :mod olympic ) :purpose ( win-01 :arg0 ring :arg1 ( medal :mod gold ) ) ) :li num_1
cause-01 :arg0 ( enforce-01 :arg0 ( team :name ( name :op1 olympics :op2 olympics ) :mod country_name_0 ) :arg1 ( dominance :arg1 team :degree somewhat ) :time ( after :op1 ( head-02 :arg0 ( team :mod country_name_1 :mod country ) :arg1 ( rio :arg1 team :degree somewhat ) ) ) ) :arg1 ( enforce-01 :arg1 ( and :op1 beijing :op2 london ) )
and :op2 ( feel-01 :arg0 she :arg1 ( and :op1 ( relax :arg0 she ) :op2 ( regain-01 :arg0 she :arg1 free-04 ) ) :time ( once :op1 ( situation :arg1-of ( trap-01 :arg2 that ) ) ) )
and :op1 ( be-located-at-91 :arg1 ( thing :mod this ) :arg2 plant :time ( after :op1 now :duration ( few :op1 ( temporal-quantity temporal-quantity_num_0 :unit year ) ) ) :purpose ( predict-01 :arg1 predict-01 ) ) :op2 ( cause-01 :arg0 ( produce-01 :arg0 ( plant :mod plant ) :arg1 ( thing :arg2-of price-01 ) ) :time recent )
multi-sentence :snt1 ( say-01 :arg0 i :arg1 ( be-located-at-91 :arg1 company :arg2 ( under :op1 ( monetary-quantity monetary-quantity_num_0 :unit ( dollar :mod renminbi ) ) ) ) ) :snt2 ( expect-01 :mode interrogative :arg1 ( written :arg1 ( monetary-quantity monetary-quantity_num_1 :unit ( dollar :mod renminbi ) ) ) )
reduce-01 :arg1 ( demand-01 :arg1 ( market :mod power ) ) :degree great :condition ( close-01 :arg1 ( factory :quant num_0 ) )
obvious-01 :arg1 ( obvious-01 :arg1 ( obvious-01 :arg1 benefit-01 ) )
multi-sentence :snt1 ( club :polarity - :mod big :domain this ) :snt2 ( -rrb- :polarity - :arg1 ( race :mod royal :mod royal :mod royal ) :time ( night :mod friday ) :mod only )
say-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg1 ( government-organization :arg0-of govern-01 ) :arg2 ( person :arg1-of employ-01 ) ) ) :arg1 ( and :op1 ( person :arg0-of ( have-org-role-91 :arg2 ( president :mod manage-01 ) ) ) :op2 ( person :arg1-of ( employ-01 :arg0 ( government-organization :arg0-of govern-01 ) ) ) ) :time ( late :degree more :time ( late :degree more ) )
and :op1 ( be-located-at-91 :polarity - :arg1 ( victim :quant num_0 :mod other ) :arg2 car ) :op2 ( investigate-01 :arg0 police :arg1 ( wound-01 :mode interrogative :arg1 gunmen ) )
have-concession-91 :arg2 ( say-01 :arg0 he :arg1 ( open-01 :arg1 ( door :part-of he ) :time always ) :time ( month :mod last :mod just ) )
say-01 :arg0 person_name_0 :arg1 ( recommend-01 :arg1 ( focus-01 :arg0 person :arg2 ( protect-01 :arg1 whistleblower ) ) )
say-01 :arg2 person_name_0
say-01 :arg0 he :arg1 ( show-01 :arg0 ( thing :arg0-of evidence-01 :mod '' ) :arg1 ( and :op1 ( person :arg0-of ( have-org-role-91 :arg2 ( member :mod senior ) ) ) :op2 ( person :arg0-of ( have-org-role-91 :arg1 community :arg2 ( member :mod senior ) ) ) :op3 ( person :arg0-of ( have-org-role-91 :arg1 community :arg2 ( member :mod senior ) ) ) :op4 ( person :mod young :arg0-of ( have-org-role-91 :arg1 community :arg2 member ) ) :op5 ( person :mod young :arg0-of ( allow-01 :arg1 ( vote-01 :arg0 person ) ) ) ) ) :medium report
multi-sentence :snt1 ( describe-01 :arg1 ( teenager :arg1-of ( include-91 :arg2 ( teenager :mod country_name_0 :mod final ) :arg3 ( distance-quantity distance-quantity_num_0 :unit meter ) ) ) :arg2 ( teenager :mod country_name_1 :mod final :mod final ) :arg1-of ( resemble-01 :arg2 this ) :arg1-of ( resemble-01 :arg2 this ) :arg1-of ( resemble-01 :arg2 this ) ) :snt2 ( mistake-02 :arg0 ( girl :mod country ) :mod silly )
destroy-01 :arg0 ( family :location ( house :location cornwall ) ) :arg1 ( project :time former ) :location ( outside :op1 ( tash :mod tash ) )
got :arg0 we :time early :arg1-of ( cause-01 :arg0 ( quiet :polarity - :arg1 we :arg2 here ) )
multi-sentence :snt1 ( add-01 :arg0 he :arg1 ( regret-01 :arg1 ( '' :polarity - :arg1 ( and :op1 ( behave-01 :arg0 ( family :arg1-of ( have-org-role-91 :arg0 she :arg2 member ) ) ) :op2 ( behave-01 :arg0 ( family :arg1-of ( have-org-role-91 :arg0 she :arg2 member ) ) ) ) ) ) ) :snt2 ( approach-02 :arg0 ( person :arg0-of house-01 ) :mod final )
need-01 :arg0 we :arg1 ( show-01 :arg0 we :arg1 ( and :op1 ( feel-01 :arg0 ( and :op1 woman :op2 man ) :arg1 ( and :op1 woman :op2 man ) ) :op2 ( timeless :arg0 and ) :op3 ( nudity :arg0 and ) :time ( time :mod this ) :arg1-of ( say-01 :arg0 briefing ) ) )
say-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg1 political-party_name_0 ) ) :arg1 ( expect-01 :arg1 ( head-01 :arg0 ( person :arg1-of ( age-01 :arg2 ( temporal-quantity temporal-quantity_num_0 :unit year ) ) ) :arg1 ( shark :arg0 person :arg1 ( shark :quant ( between :op1 num_1 :op2 num_1 ) ) :time ( age-01 :arg1 person :arg2 ( temporal-quantity temporal-quantity_num_0 :unit year ) ) ) :time ( age-01 :arg1 person :arg2 ( temporal-quantity temporal-quantity_num_2 :unit year ) ) ) )
and :op1 ( put-01 :arg0 ( temporal-quantity temporal-quantity_num_0 :unit year ) :arg1 ( regulate-01 :arg1-of ( put-01 :arg2 ( rule :location-of place ) ) ) :arg2 ( rule :location-of place ) :time recent ) :op2 ( upgrade-02 :arg1 ( '' :mod '' ) :arg4 ( '' :op1 '' ) )
and :op1 ( submit-01 :arg0 ( xiuping :name ( name :op1 zhao ) ) :arg1 ( apply-02 :arg1 environment ) :arg2 ( and :op1 ( project :mod construct-01 ) :op2 ( project :mod construct-01 ) :op3 ( material :mod other ) :location ( city_name_0 :location country_name_1 ) ) ) :op2 ( begin-01 :arg1 ( conduct-01 :arg0 and :arg1 ( material :mod apply-01 :mod preliminary ) ) )
and :op1 ( make-01 :arg1 num_0 :arg3 num_1 :arg3 num_1 ) :op2 ( pay-01 :polarity - :arg0 ( person :arg0-of ( have-org-role-91 :arg1 ( unit :arg1-of exist-01 ) ) ) :arg2 royalties ) :li num_1
say-01 :arg0 she :arg1 ( make-02 :arg0 ( and :op1 ( person :arg0-of ( have-rel-role-91 :arg1 she :arg2 daughter ) ) :op2 ( person :arg0-of ( have-rel-role-91 :arg1 she :arg2 daughter ) ) :op3 ( person :arg0-of ( have-rel-role-91 :arg1 she :arg2 daughter ) ) :op4 ( person :arg0-of ( have-rel-role-91 :arg1 she :arg2 daughter ) ) :op5 ( person :arg0-of ( have-rel-role-91 :arg1 she :arg2 daughter ) ) ) :arg1 ( and :op1 ( good :domain she ) :op2 ( come-01 :arg1 she :arg4 life :time always ) ) )
and :op1 ( report-01 :arg0 ( media :mod country_name_0 ) :arg1 ( peak-01 :arg1 ( information :mod medicine :arg1-of excessive-02 :arg1-of ( call-01 :manner so ) ) ) ) :op2 ( support-01 :polarity - :arg1 ( thing :arg0-of evidence-01 ) )
say-01 :arg0 ( person :arg0-of ( play-01 :arg1 ( water :mod country_name_0 ) ) ) :arg1 ( thing :arg0-of ( play-12 :arg2 water ) :mod country_name_1 ) :time ( after :op1 ( sting :arg1 ( eye :part-of person ) ) )
say-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg1 ( -rrb- :name ( name :op1 olympics :op2 olympics :op3 olympics ) :arg0-of ( have-org-role-91 :arg1 political-party_name_0 :arg2 spokesman ) ) :arg2 spokesman ) ) :arg1 ( be-located-at-91 :arg1 ( water :mod ( pool :arg0-of sing-01 ) ) :arg2 ( level :mod ( bone :part-of alkaline ) ) :time ( afternoon :mod first ) :time first )
understand-01 :arg1 ( obligate-01 :arg1 ( department :mod ( enforce-01 :arg1 law ) ) :arg2 ( travel-01 :arg0 department :location ( and :op1 ( park :location west ) :op2 ( tourism :mod red ) :op3 ( tourism :mod red :example ( districts :mod retail-01 ) ) ) ) )
say-01 :arg0 ( bureau :poss ( statistic :topic ( statistic :mod ( weather :arg1-of hot-05 ) ) ) ) :arg1 ( obligate-01 :arg1 i :arg2 ( receive-01 :arg0 ( person :quant all ) :arg1 allowance :arg2 ( temperature-quantity :quant ( volume-quantity volume-quantity_num_0 :unit gallon ) ) ) )
and :op1 ( person :arg0-of ( spontaneously :arg1 person ) ) :op2 ( do-02 :arg0 person :arg1 ( good :degree most :poss person ) :purpose ( try-01 :arg0 person :arg1 ( help-01 :arg0 person :degree equal :compared-to ( possible-01 :arg1 help-01 :time ( before :op1 ( live-01 :arg0 ( person :arg0-of injure-01 ) ) ) ) ) ) )
channel :name ( name :op1 river :op2 flows :op3 flows ) :mod old :location ( channel :name ( name :op1 grand :op2 canal :op3 nanyanghu :op4 nanyanghu :op5 nanyanghu :op6 canal :op7 canal ) )
and :op1 ( study-01 :arg0 ( person :arg1-of ( expert-01 :arg2 ( plan-01 :mod urban ) ) ) :location there :purpose ( learn-01 :arg0 person :arg1 ( design-01 :arg1 ( architectural :arg1-of local-02 ) ) ) ) :op2 ( man :arg0-of ( travel-01 :arg2 man ) )
direct-01 :arg0 ( person :arg1-of ( host-01 :arg0 ( person :mod sports ) ) ) :arg1 game :time ( day :mod 13 ) :time ( ceremony :mod ( open-02 :arg1 open-01 ) ) :location ( province_name_0 :arg1-of ( host-01 :arg0 ( person :mod sports ) ) )
review-01 :arg0 ( person :arg1-of suspect-01 ) :arg1 ( office :poss ( person :arg0-of ( have-org-role-91 :arg2 ( office :mod district ) ) ) :purpose ( prosecute-01 :arg1 person ) ) :time ( before :op1 now :quant ( few :op1 ( temporal-quantity temporal-quantity_num_0 :unit day ) ) )
and :op1 ( pull-01 :arg0 ( person :mod country_name_0 :mod country_name_1 ) :arg1 ( project :topic ( perform-02 :arg0 person ) ) :arg2 ( project :topic ( perform-02 :arg0 person :arg1 ( thing :arg1-of ( key-02 :arg2 ( thing :arg1-of ( perform-01 :arg1-of ( key-02 :arg2 ( monetary-quantity monetary-quantity_num_0 :unit ( dollar :mod country ) ) ) ) ) ) ) ) ) :time ( year :mod ( exchange-01 :arg1-of ( key-02 :arg2 '' ) ) ) ) :op2 ( performances :arg0 ( person :mod nation :mod country ) :arg1 ( game :quant num_2 ) :location country )
and :op1 ( get-02 :arg0 ( person :quant num_0 :arg2-of ( total-01 :arg1 ( career :mod athletic ) ) ) :arg1 ( champion :mod world ) :time ( after :op1 now :quant ( temporal-quantity temporal-quantity_num_0 :unit year ) ) ) :op2 ( become-01 :arg1 person :arg2 ( history :poss country_name_0 :ord ( ordinal-entity ordinal-entity_num_1 ) ) :purpose ( win-01 :arg0 country :arg1 ( drone :mod gold :quant num_2 :mod gold ) :arg2 person ) )
and :op1 ( have-03 :arg0 thompson :arg1 ( use-01 :arg1 ( top :quant ( between :op1 num_0 :op2 num_1 ) ) ) ) :op2 ( good :degree most :domain ( career :poss he :mod ( season :mod last ) :domain this ) )
and :op1 ( shot :arg1 ( shoot-02 :arg1-of ( low :arg2 ( leave-17 :arg1 ( area :arg1-of penalize-01 ) ) ) ) :arg3 ( percentage-entity percentage-entity_num_0 ) :arg4 ( leave-17 :arg1 ( area :arg1-of penalize-01 ) ) ) :op2 ( ball :arg1 ( deflecting :name ( name :op1 ball :op2 calderon :op3 calderon ) ) )
undergo-28 :arg1 ( person :mod williams ) :arg2 cancer :li num_0
solyariya :arg1 ( and :op1 graf :op2 heather ) :time ( after :op1 now :quant ( temporal-quantity temporal-quantity_num_0 :unit year ) :mod outstanding )
explain-01 :arg0 company :arg1 ( and :op1 ( pay-01 :arg0 thing_name_0 :arg3 ( role :mod comic ) ) :op2 ( pay-01 :arg0 thing_name_0 :arg3 ( role :mod comic ) ) )
and :op1 ( decide-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg2 ( person :arg0-of ( manage-01 :arg1 product ) ) ) ) :arg1 ( remove-01 :arg0 person :arg1 ( account :mod snapchat :poss person ) ) ) :op2 ( encourage-01 :arg0 person :arg1 other :arg2 ( do-02 :arg0 person :arg1 same-01 ) ) :location ( process-01 :arg1 ( and :op1 ( person :arg0-of ( have-org-role-91 :arg2 ( person :arg0-of ( manage-01 :arg1 product ) ) ) ) :op2 ( person :arg0-of ( engineer-01 :arg1 product ) ) ) )
say-01 :arg0 ( thing :arg1-of report-01 :arg1-of ( release-01 :arg0 ( and :op1 ( person :arg0-of ( have-org-role-91 :arg2 ( official :mod ( command-02 :mod central ) ) ) ) :op2 ( person :arg0-of ( have-org-role-91 :arg2 official ) ) :op3 ( person :arg0-of ( have-org-role-91 :arg2 official ) ) :op4 ( person :arg0-of ( have-org-role-91 :arg2 official ) ) :op5 ( person :arg0-of ( have-org-role-91 :arg2 official ) ) ) ) ) :arg1 ( and :op1 ( change-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg2 ( official :mod ( command-02 :mod central ) ) ) ) :arg1 ( report-01 :arg0 intelligence ) ) :op2 ( fight-01 :arg0 person :arg1 ( situation :mod war ) :location ( and :op1 country_name_0 :op2 country_name_1 ) ) ) :op3 ( optimistic :domain ( situation :mod war ) :degree more :mod actual )
historians :arg0 ( couple :arg0-of ( live-01 :location ( heights :mod brooklyn ) ) ) :arg1 couple
fruit :arg1-of cheap-02 :domain ( fruit :arg1-of fresh-04 ) :arg1-of cheap-02
state-01 :arg0 ( state :arg0-of ( have-org-role-91 :arg1 ( state :arg0-of ( have-org-role-91 :arg2 member ) ) :arg2 member ) ) :arg1 ( fail-01 :arg1 ( agree-01 :arg0 ( state :arg0-of ( have-org-role-91 :arg1 ( state :arg0-of ( have-org-role-91 :arg2 member ) ) :arg2 member ) ) :arg1 ( agree-01 :arg0 state :arg1 ( reach-01 :arg0 state :arg1 agree-01 ) :mod any ) ) :time last )
s. :arg0 ( and :op1 ( person :arg0-of ( have-org-role-91 :arg2 ( secretary :mod defense ) ) ) :op2 ( person :arg0-of ( have-org-role-91 :arg1 state :arg2 ( secretary :mod state ) ) ) :op3 ( person :arg0-of ( have-org-role-91 :arg1 country_name_0 :arg2 ( secretary :mod vice ) ) ) :op4 ( person :arg0-of ( have-org-role-91 :arg1 country_name_1 :arg2 ( minister :mod foreign ) ) ) :op5 ( person :arg0-of ( have-org-role-91 :arg1 country :arg2 ( minister :mod foreign ) ) ) :op6 ( person :arg0-of ( have-org-role-91 :arg1 country :arg2 ( minister :mod foreign ) ) ) :op6 ( person :arg0-of ( have-org-role-91 :arg1 country :arg2 ( minister :mod foreign ) ) ) :op7 ( person :arg0-of ( have-org-role-91 :arg1 country :arg2 ( minister :mod foreign ) ) ) :op7 ( person :arg0-of ( have-org-role-91 :arg1 country :arg2 ( minister :mod foreign ) ) ) ) :arg1 ( attend-01 :arg0 and :arg1 ( conference :mod press ) )
become-01 :arg1 ( tax-01 :arg2 ( person :arg0-of ( have-org-role-91 :arg2 president ) ) ) :arg2 ( problem :mod huge )
say-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg1 political-party_name_0 ) ) :arg1 ( contrast-01 :arg1 ( audit-01 :arg1 he :mod also :mod also ) :arg2 ( fear-01 :arg0 ( person :arg0-of vote-01 ) :arg1 ( person :arg0-of ( have-org-role-91 :arg2 ( authority :mod tax ) ) ) ) )
and :op1 ( khan :arg0 ( person :arg0-of ( have-03 :arg1 ( and :op1 ( old :domain person ) :op2 ( person :arg0-of ( have-03 :polarity - :arg1 knife ) ) :op3 ( person :arg0-of ( have-03 :polarity - :arg1 knife ) ) :op4 ( person :arg0-of ( have-03 :arg1 knife ) ) :op5 ( person :arg0-of ( have-03 :arg1 knife ) ) ) ) ) )
multi-sentence :snt1 ( and :op1 ( deal-01 :arg0 i :arg2 ( person :arg0-of tour-01 :mod country_name_0 ) :frequency often ) :op2 ( see-01 :arg0 i :arg1 ( content-01 :arg1 person :arg2 ( person :arg0-of tour-01 :mod country_name_1 ) ) ) ) :snt2 ( content-01 :arg1 ( person :arg0-of tour-01 :mod country ) :degree very )
contrast-01 :arg1 ( have-03 :arg0 ( team :consist-of ( man :quant num_0 :arg1-of ( include-91 :arg2 ( man :quant num_0 :mod ( young :degree most ) :mod ( young :degree most ) ) ) ) ) :arg1 ( capable-01 :arg1 team :arg2 ( saric :arg0 team :location outside ) ) :concession ( be-located-at-91 :arg1 ( team :consist-of ( man :quant num_0 ) ) :arg2 ( person :arg0-of play-01 :mod ( young :degree extreme ) ) ) ) :arg2 ( be-located-at-91 :arg1 ( team :consist-of ( man :quant num_0 ) ) :arg2 ( stock :mod ( person :arg0-of play-01 :mod ( young :degree extreme ) ) ) )
contrast-01 :arg1 ( say-01 :arg0 ( company :arg0-of ( have-org-role-91 :arg1 company ) ) :arg1 ( contract-02 :arg1 ( contract-02 :arg1 contract-02 :arg1-of ( cause-01 :arg0 ( come-04 :arg1 contract-02 :arg2 force-04 :time ( year :mod this ) ) ) ) ) ) :arg2 ( explain-01 :polarity - :arg0 company :arg1 ( thing :arg0-of ( cause-01 :arg1 contract-02 ) ) )
respond-01 :arg0 ( person_name_0 :arg0-of ( have-org-role-91 :arg2 ( director :mod operate-01 ) ) ) :arg1 ( consume-01 :arg0 ( energy :mod amphibious :mod ultra ) :arg1 ( factory :quant ( about :op1 num_0 ) :unit megawatt ) :arg2 ( factory :quant ( about :op1 num_1 ) :unit megawatt ) ) :time ( early :op1 ( date-entity year_date-entity_0 ) :degree more )
say-01 :arg0 ( person :arg0-of prosecute-01 ) :arg1 ( determine-01 :arg0 ( person :arg0-of prosecute-01 ) :arg1 this )
contrast-01 :arg2 ( think-01 :arg0 i :arg1 ( implies :arg0 he :arg1 ( something :arg1-of opposite-01 ) :mod enthusiasm ) )
tell-01 :arg0 ( family :arg1-of ( have-org-role-91 :arg0 he :arg2 member ) ) :arg1 ( expect-01 :arg1 ( recover-02 :arg1 child ) ) :arg2 ( family :arg1-of ( have-org-role-91 :arg0 he :arg2 member ) )
and :op1 ( got :arg0 we :time ( month :mod last ) ) :op2 ( say-01 :arg0 he :arg1 ( open-01 :arg1 ( door :part-of he ) ) ) :mod ( so :mod even )
find-02 :arg0 court :arg1 ( and :op1 ( abuse-02 :arg0 ( abuse-02 :arg1 ( community :mod religious-group_name_0 ) :arg1-of ( ridiculous-02 :degree very ) ) :arg1 ( feel-01 :arg0 ( community :mod religious-group_name_1 ) :arg1 ( feel-01 :arg0 ( community :mod religious-group_name_1 ) :arg1 religion :time ( date-entity decade_date-entity_0 ) ) ) ) :op2 ( allege-01 :arg1 ( allege-01 :arg1 allege-01 ) ) )
deal-01 :arg0 ( deal-01 :arg1-of come-01 ) :arg2 ( launch-01 :arg1 ( right :mod pollution ) :arg1-of ( mean-01 :arg2 ( and :op1 ( level :ord ( ordinal-entity ordinal-entity_num_0 ) :mod ( level :ord ( ordinal-entity ordinal-entity_num_0 ) ) :mod ( level :ord ( ordinal-entity ordinal-entity_num_0 ) ) ) :op2 ( level :mod nation :mod ( level :mod nation ) ) :location province ) ) ) :mod also
say-01 :arg0 ( person_name_0 :arg0-of ( live-01 :location apartment :duration ( temporal-quantity temporal-quantity_num_0 :unit year ) ) ) :arg1 ( ' :arg1 it :arg1-of ( resemble-01 :arg2 ( fall-01 :arg1 bomb :arg4 off ) ) )
have-concession-91 :arg1 ( difficult :domain ( landing :arg1 ( atmosphere :mod martian ) :location ground ) ) :arg2 ( ( many :degree ( so :polarity - ) :mod ( speed :arg1-of ( high-02 :degree such ) ) ) )
decide-01 :arg0 ( side :quant num_0 ) :arg1 ( violate-01 :arg0 ( and :op1 ( person :arg0-of ( have-org-role-91 :arg2 head-of-state ) ) :op2 ( person :arg0-of ( have-org-role-91 :arg2 head-of-state ) ) ) :arg1 ( reputation :poss ( reputation :poss ( reputation :poss person ) ) :time ( date-entity decade_date-entity_0 ) ) ) :time ( try-02 :arg1 person )
and :op1 ( be-temporally-at-91 :arg1 it :arg2 ( before :op1 now :quant ( half :mod half ) ) ) :op2 ( mouth :arg1 ( mouth :mod die-01 ) ) :op3 ( life :mod new ) :time now
wary :domain ( and :op1 ( rise-01 :arg1 ( company :mod oil :mod country_name_0 ) ) :op2 ( rise-01 :arg1 ( refinery :arg1-of ( know-02 :arg2 ( name :op1 '' ) :time ( date-entity decade_date-entity_0 ) ) ) ) :mod particular ) :mod particular
and :op1 ( possible-01 :arg1 ( impact-01 :arg0 ( factor :quant many :location ( outside :op1 court ) ) :arg1 future :mod great ) ) :op2 ( interest-01 :arg1 he :arg2 ( enter-01 :arg0 he :arg1 ( circle :mod entertainment ) ) :degree more :time now )
and :op2 ( king :arg0 ( person :arg0-of ( lead-02 :arg1 country_name_0 :arg2 ( group :quant num_0 :mod olympic ) ) ) :arg1 ( person :arg0-of ( lead-02 :arg1 country_name_1 ) ) :mod also )
and :op1 ( produce-01 :arg0 group :arg1 tree :purpose ( ensure-01 :arg0 tree :arg1 ( affect-01 :arg0 tree :arg1 tree :arg1-of long-03 ) ) :mod also ) :op2 ( distribute-01 :arg0 group :arg1 ( person :quant num_0 :mod ( school :mod primary ) :arg0-of study-01 ) ) :op3 ( provide-01 :arg0 group :arg1 ( technical :arg1-of long-03 :arg1-of ( guide-01 :arg2 ( and :op1 ( person :arg0-of teach-01 ) :op2 ( person :arg0-of ( have-rel-role-91 :arg1 person :arg2 parent ) ) ) ) ) )
ceremony :mod ( open-02 :arg1 ( ceremony :mod ( open-02 :arg1 ( game :mod ( open-02 :arg1 ( game :mod ( open-02 :arg1 ( game :mod ( open-02 :arg1 ( game :mod ( open-02 :arg1 ( game :mod ( open-02 :arg1 ( game :mod ( open-02 :arg1 ( game :mod ( open-02 :arg1 ( game :mod ( open-02 :arg1 ( game :mod ( open-02 :arg1 ( game :mod ( open-02 :arg1 ( game :mod ( open-02 :arg1 ( game :mod ( open-02 :arg1 ( game :mod ( open-02 :arg1 ( game :mod ( open-02 :arg1 ( game :mod ( open-02 :arg1 ( game :mod ( open-02 :arg1 ( game :mod ( open-02 :arg1 ( game :mod ( open-02 :arg1 ( game :mod ( open-02 :arg1 ( game :mod ( open-02 :arg1 ( game :mod ( open-02 :arg1 ( game :mod ( open-02 :arg1 ( game :mod ( open-02 :arg1 ( game :mod ( open-02 :arg1 ( game :mod ( open-02 :arg1 ( game :mod ( open-02 :arg1 ( game :mod ( open-02 :arg1 ( game :mod ( open-02 :arg1 ( game :mod ( open-02 :arg1 ( game :mod ( open-02 :arg1 ( game :mod ( open-02 :arg1 ( game :mod ( open-02 :arg1 ( game :mod ( open-02 :arg1 ( game :mod ( open-02 :arg1 ( game :mod ( open-02 :arg1 ( game :mod ( open-02 :arg1 ( game :mod ( open-02 :arg1 ( game :mod ( open-02 :arg1 ( game :mod ( open-02 :arg1 ( game :mod ( open-02 :arg1 ( game :mod ( open-02 :arg1 ( game :mod ( open-02 :arg1 ( game :mod ( open-02 :arg1 ( game :mod ( open-02 :arg1 ( game :mod ( open-02 :arg1 ( game :mod ( open-02 :arg1 ( game :mod ( open-02 :arg1 ( game :mod ( open-02 :arg1 ( game :mod ( open-02 :arg1 ( game :mod ( open-02 :arg1 ( game :mod ( open-02 :arg1 ( game :mod ( open-02 :arg1 ( game :mod ( open-02 :arg1 ( game :mod ( open-02 :arg1 ( game :mod ( open-02 :arg1 ( game :mod ( open-02 :arg1 ( game :mod ( open-02 :arg1 ( game :mod ( open-02 :arg1 ( game :mod ( open-02 :arg1 ( game :mod ( open-02 :arg1 ( game :mod ( open-02 :arg1 ( game :mod ( open-02 :arg1 ( game :mod ( open-02 :arg1 ( game :mod ( open-02 :arg1 ( game :mod ( open-02 :arg1 ( game :mod ( open-02 :arg1 ( game :mod ( open-02 :arg1 ( game :mod ( open-02 :arg1 ( game :mod ( open-02 :arg1 ( game :mod ( open-02 :arg1 ( game :mod ( open-02 :arg1 ( game :mod ( open-02 :arg1 ( game :mod ( open-02 :arg1 ( game :mod ( open-02 :arg1 ( game :mod ( open-02 :arg1 ( game :mod ( open-02 :arg1 ( game :mod ( open-02 :arg1 ( game :mod ( open-02 :arg1 ( game :mod ( open-02 :arg1 ( game :mod ( open-02 :arg1 ( game :mod ( open-02 :arg1 ( game :mod ( open-02 :arg1 ( game
and :op1 ( result-01 :polarity - :arg1 ( and :op1 ( person :arg1-of accuse-01 ) :op2 ( attitude :mod ( good :degree more ) ) ) :arg2 crime-02 ) :op2 ( suggest-01 :arg0 person :arg1 ( recommend-01 :arg1 ( give-01 :arg1 ( thing :arg1-of opine-01 ) :arg2 ( punish-01 :arg1 thing ) ) ) )
suck-01 :arg0 ( and :op1 ( person :arg0-of ( have-org-role-91 :arg2 professor ) ) :op2 ( person :arg0-of ( have-org-role-91 :arg2 ( president :mod vice ) ) ) :op3 ( person :arg0-of ( have-org-role-91 :arg2 ( president :mod vice ) ) ) ) :arg1 ( and :op1 ( college :mod politics ) :op2 ( college :mod ( manage-01 :arg1-of public-02 ) ) )
score-01 :arg1 person_name_0 :arg2 ( wing :mod right ) :mod again :time ( after :op1 ( temporal-quantity temporal-quantity_num_0 :unit minute :mod only ) )
maintain-01 :arg0 they :arg1 ( record :mod record :mod record ) :manner absolute
possible-01 :arg1 ( turn-01 :arg0 you :arg1 you :arg4 ( or :op1 pineapple :op2 dog :op3 character :op4 character ) )
say-01 :arg0 ( person :arg0-of anda ) :arg1 ( possible-01 :polarity - :arg1 ( accept-01 :arg0 ( and :op1 ( person :arg0-of analyze-01 ) :op2 ( person :arg0-of analyze-01 ) ) :arg1 ( thing :arg1-of opine-01 :arg1-of differ-02 ) ) )
multi-sentence :snt1 ( meet-02 :arg0 they :arg1 ( shop :mod sandwich :time ( date-entity decade_date-entity_0 ) ) :time ( after :op1 ( show-01 :arg0 they :arg1 ( food :quant some ) ) ) ) :snt2 ( open-01 :arg1 ( swim-01 :location ( area :mod iron ) ) :arg1-of simple-02 )
cause-01 :arg0 ( attack-01 :arg1 ( and :op1 ( man :mod jin ) :op2 ( person :arg0-of ( injure-01 :arg1 he ) ) :op3 ( person :arg0-of ( injure-01 :arg1 he ) ) :op4 ( person :arg0-of ( injure-01 :arg1 he ) ) :op5 ( person :arg0-of ( injure-01 :arg1 he ) ) ) ) :arg1 ( deal :mod great )
promote-01 :arg1 ( culture :mod strategy :mod strategy :time ( date-entity decade_date-entity_0 ) ) :arg2 ( and :op1 ( person :quant num_0 ) :op2 ( person :quant num_1 ) :op3 ( person :quant num_2 ) :op4 ( person :quant num_2 ) :op5 et-cetera ) :arg1-of ( publish-01 :location ( report :instrument-of evaluate-01 :mod military :poss country_name_0 ) ) :time ( prior :op1 this )
date :mod case-03 :time ( back :op1 ( and :op1 ( date-entity decade_date-entity_0 ) :op2 ( charge-05 :arg1 ( other :mod each ) :arg2 ( other :mod each ) ) ) ) :arg1-of ( claim-01 :arg0 ( person :arg1-of ( claim-01 :arg0 ( other :mod each ) ) :arg0-of ( effective-04 :arg1 ( work-01 :arg1 laboratory :time ( date-entity decade_date-entity_0 ) ) ) ) )
multi-sentence :snt1 ( make-02 :arg0 it :arg1 ( flattered :arg0 i :arg1 i ) ) :snt2 ( say-01 :arg0 i :arg1 ( contrast-01 :arg1 ( say-01 :arg0 i :arg1 ( contrast-01 :arg1 ( bike :mod bike ) :arg2 ( age-01 :arg2 ( temporal-quantity temporal-quantity_num_0 :unit year ) ) ) ) ) )
and :op1 ( meet-01 :arg0 ( person :quant num_0 ) :arg1 ( need-01 :arg0 ( team :mod police :mod police ) :arg1 ( patrol-01 :arg0 team :arg1 ( attract-01 :arg1 team :mod main ) ) ) ) :op2 ( help-01 :arg0 team :arg1 ( person :arg0-of visit-01 ) ) :op3 ( guide-01 :arg0 team :arg1 person )
launch-01 :arg1 ( series :quant series ) :time ( before :op1 long ) :mod also
multi-sentence :snt1 ( expect-01 :arg0 i :arg1 ( continue-01 :arg0 ( factory :mod portland ) :arg1 ( operate-01 :arg0 factory ) ) ) :snt2 ( say-01 :arg0 ( venture :mod joint ) :arg1 ( continue-01 :arg1 ( produce-01 :arg0 refinery :arg1 ( demand-01 :arg1 electricity ) ) ) )
project :domain ( project :mod infrastructure :beneficiary ( person :mod most ) ) :beneficiary ( person :mod ethnic-group ) :arg1-of ( resemble-01 :arg2 olympics )
and :op1 ( kill-01 :arg1 woman ) :op2 ( kill-01 :arg1 woman )
tell-01 :arg0 lawyer :arg1 ( and :op1 ( be-located-at-91 :arg1 ( investigate-01 :arg2-of criminal-03 ) :arg2 way :time now ) :op2 ( process-02 :arg1 ( event :mod routine ) :mod routine :domain this ) ) :arg2 lawyer
result-01 :arg1 ( temperature :quant ( few :op1 ( volume-quantity volume-quantity_num_0 :unit gallon ) ) ) :arg2 ( few :op1 ( temporal-quantity temporal-quantity_num_1 :unit month ) :mod actual ) :compared-to ( thing :arg2-of ( result-01 :arg1 aircraft-type_name_0 ) )
compare-01 :arg1 ( star :arg1-of ( compare-01 :arg2 ( dancer :mod ( large :degree more ) ) ) ) :arg2 ( dancer :mod ( small :degree more :compared-to ( dancer :mod ( small :degree more ) ) ) )
italian :arg0 ( person :mod professional :mod professional :ord ( ordinal-entity ordinal-entity_num_0 ) :arg0-of ( score-01 :arg1 ( milestone :mod this ) :arg2 ( field :mod plain ) ) ) :ord ( ordinal-entity ordinal-entity_num_0 )
use-01 :arg0 it :arg1 ( and :op1 ( steel :quant ( mass-quantity mass-quantity_num_0 :unit ( ton :mod ( mass-quantity mass-quantity_num_1 :unit ton ) ) ) ) :op2 ( concrete :quant ( mass-quantity mass-quantity_num_1 :unit ton ) ) :op3 ( concrete :quant num_2 ) )
contrast-01 :arg1 ( game :quant num_0 :mod still :mod still ) :arg2 ( contest :mod ( much :polarity - :degree so ) :compared-to ( and :op1 ( byers :arg1 ( and :op1 byers :op2 other ) ) :op2 ( pressure :arg1 ( thing :arg1-of expect-01 :mod great ) ) ) )
multi-sentence :snt1 ( claim-01 :arg0 ( person :quant num_0 :arg0-of use-01 :mod twitter ) :arg1 ( hope-01 :arg0 person :arg1 ( and :op1 solo :op2 ( carpenter :mod jennifer ) ) :mod also ) ) :snt2 ( look-02 :arg0 ( carpenter :mod '' ) :arg1 ( same-01 :mod exact ) :mod actual )
mcdonald :arg1 ( byron :mod narrator :poss woman ) :time ( end-01 :arg1 ( freestyle :poss woman ) ) :time ( think-01 :arg0 he :arg1 ( turned :arg1 ( microphone :poss he ) ) )
and :op2 ( face-01 :arg0 we :arg1 woman )
possible-01 :arg1 ( and :op1 ( submit-01 :arg0 model :arg1 photo :arg2 online ) :op2 ( apply-01 :arg0 model :arg2 ( recruit-01 :arg0 public :arg1 ( and :op1 angeles :op2 ( york :mod new ) ) :location person ) ) )
have-03 :arg0 ( country_name_0 :arg1-of ( include-91 :arg2 ( person :arg0-of pilot-01 ) ) ) :arg1 ( and :op1 ( region :mod -lrb- ) :op2 ( region :quant num_1 :mod other ) :op3 ( region :quant num_1 :mod other ) ) :purpose ( implement-01 :arg0 country :arg1 ( implement-01 :mod full ) ) :time now
report
estimate-01 :arg0 ( person :arg0-of ( cross-02 :arg1 red ) :mod country_name_0 ) :arg1 ( have-03 :polarity - :arg0 ( person :arg0-of ( have-03 :arg1 ( person :quant ( between :op1 num_0 :op2 num_1 ) ) ) ) :arg1 ( person :quant ( between :op1 num_0 :op2 num_1 ) :arg1-of ( include-91 :arg2 ( person :quant num_1 :arg1-of ( include-91 :arg2 ( person :quant num_1 :arg0-of ( reside-01 :arg1 ( person :arg0-of ( reside-01 :arg1 ( community :mod nearby ) ) ) ) ) :duration temporary ) ) ) ) :duration temporary )
say-01 :arg0 ( thing :arg1-of ( require-01 :arg0 ( and :op1 ( thing :arg1-of ( require-01 :arg0 ( mainland :part-of customs ) ) ) :op2 ( thing :arg1-of ( require-01 :arg0 ( journeys :arg0 mainland ) ) ) ) ) ) :arg1 ( and :op1 ( possible-01 :arg1 ( sentence-01 :arg1 ( person :arg0-of ( have-org-role-91 :arg1 ( mainland :part-of country_name_1 ) :arg2 non-travellers ) ) :arg2 ( imprison-01 :arg1 person :arg2 ( good :poss person ) ) ) ) :op2 ( contrary-01 :arg1 person :arg2 ( declare-02 :arg1 person ) :time ( time :time-of ( and :op1 ( enter-01 :arg0 person ) :op2 ( offload-01 :arg2 person ) ) ) ) )
possible-01 :arg1 ( import-01 :arg0 ( '' :name ( name :op1 '' ) :mod refinery ) :arg1 ( oil :mod crude ) :arg2 ( and :op1 ( import-01 :arg1 oil :arg1-of low-04 ) :op2 ( oil :mod crude :poss country ) :op3 ( quality :poss ( product :mod oil :poss country ) ) ) :time ( after :op1 ( obtain-01 :arg0 country :arg1 ( permit-01 :arg1 import-01 ) ) ) :mod also )
and :op1 ( be-located-at-91 :arg1 ( person :arg0-of ( have-rel-role-91 :arg1 ( person :mod country_name_0 ) :arg2 uncle ) ) :arg2 ( crash-01 :arg1 plane :location ( airport :mod international ) ) ) :op2 ( win-01 :arg0 ( win-01 :time ( week :mod this ) ) :arg1 ( rate-entity-91 :arg1 ( monetary-quantity monetary-quantity_num_0 :unit dollar ) :arg2 ( volume-quantity volume-quantity_num_1 :unit gallon ) ) :location ( airport :mod same ) )
simple-02 :polarity - :arg1 capacity :purpose ( control-01 :arg1 ( control-01 :arg2-of total-01 ) ) :mod after-all
multi-sentence :snt2 ( enjoy-01 :arg0 ( account :mod foreign :location line ) :arg1 ( offer-01 :mod this ) :mod also ) :snt3 ( enjoy-01 :arg0 ( person :mod elderly ) :arg1 ( offer-01 :mod this ) )
important :degree great :domain ( lead-02 :arg0 ( person :arg0-of ( lead-02 :arg1 ( police :mod public ) ) ) :arg1 ( organization :mod immediate :arg0-of ( have-org-role-91 :arg1 police ) ) :arg2 ( organization :mod immediate ) :purpose ( launch-01 :arg0 person :arg1 investigate-01 ) ) :time ( after :op1 case-03 )
multi-sentence :snt1 ( oh :mode expressive ) :snt2 ( brought :arg1 ( sports :ord ( ordinal-entity ordinal-entity_num_0 ) :mod professional :mod professional ) :time ( year :mod last ) )
contrast-01 :arg1 ( likely-01 :arg1 ( and :op1 ( fall-01 :arg1 data :arg4 further ) :op2 ( take-01 :arg0 data :arg1 ( burden-01 :arg1 data ) :degree further ) ) :time ( season :arg1-of regular-03 ) ) :arg2 ( and :op1 ( easy-05 :arg1 data :degree further ) :op2 ( take-01 :arg0 he :arg1 ( thing :arg1-of ( include-91 :arg2 ( thing :arg1-of ( burden-01 :arg2 owen ) ) ) ) :mod still ) )
say-01 :arg0 introduce-02 :arg1 ( and :op1 ( fall :arg1 ( image :mod league :mod ( league :mod bundesliga ) :poss ( and :op1 ( person :arg0-of ( have-org-role-91 :arg2 ambassador ) ) :op2 ( person :arg0-of ( have-org-role-91 :arg2 ambassador ) ) :op3 ( person :arg0-of ( have-org-role-91 :arg2 ambassador ) ) :op4 ( person :arg0-of ( have-org-role-91 :arg2 ambassador ) ) :op5 ( person :arg0-of ( have-org-role-91 :arg2 ambassador ) ) ) ) :location ( and :op1 island_name_1 :op2 continent_name_0 ) :purpose ( launch-01 :arg0 and :arg1 ( tour :mod product_name_1 ) ) ) :op2 ( open-01 :arg0 and :arg1 ( tour :name ( name :op1 legendary ) :mod legendary ) ) )
and :op1 ( have-03 :arg0 i :arg1 ( cancer :mod bladder ) ) :op2 ( operated :arg0 they :arg1 i )
or :op1 ( equal-01 :arg1 ( index :mod ( person :arg0-of consume-01 ) ) :arg2 ( product-of :op1 num_0 :op2 num_1 ) ) :op2 ( rate-entity-91 :arg1 ( percentage-entity percentage-entity_num_0 ) :arg2 ( temporal-quantity temporal-quantity_num_2 :unit year ) ) :op3 ( rate :mod ( inflation :mod monthly ) )
write-01 :arg0 ( person_name_0 :arg0-of ( analyze-01 :arg1 intelligence ) :mod ( more :compared-to ( before :op1 now :quant ( more-than :op1 ( temporal-quantity temporal-quantity_num_0 :unit year ) ) ) ) ) :arg1 ( criticize-01 :arg0 ( person :arg0-of ( analyze-01 :arg1 intelligence ) :mod central ) :arg1 ( article :mod research-01 ) :time ( before :op1 now :quant ( more-than :op1 ( temporal-quantity temporal-quantity_num_1 :unit year ) ) ) ) :time ( write-01 :arg0 ( person :arg0-of ( analyze-01 :arg1 command-02 ) :mod central ) :arg1 ( and :op1 ( send-01 :arg0 person :arg1 ( troop :mod small-scale ) :arg2 country ) :op2 ( consider-01 :arg0 person :arg1 ( declare-02 :arg1 ( invade-01 :quant num_0 ) ) :mod little ) ) )
interest-01 :arg1 ( note-01 :arg1 ( respond-01 :arg0 ( government-organization :arg0-of govern-01 ) :arg1 ( thing :arg1-of ( respond-01 :arg0 ( person :arg0-of hunger-01 ) :arg2 ( person :arg0-of hunger-01 ) ) :example ( person :arg0-of ( have-org-role-91 :arg2 president ) ) ) :example ( person :arg0-of ( have-org-role-91 :arg2 president ) ) ) :arg1-of ( cause-01 :arg0 ( possible-01 :polarity - :arg1 ( control-01 :arg0 i :arg1 ( attitude :mod '' ) ) ) ) ) :mod particular
and :op2 ( ibaby :arg0 ( and :op1 ( person :arg0-of ( have-org-role-91 :arg1 ( organization :mod grass-roots ) :arg2 ( person :arg1-of expert-01 ) ) ) :op2 ( person :arg0-of ( have-org-role-91 :arg2 doctor ) ) :op3 ( person :arg0-of ( have-org-role-91 :arg2 doctor ) ) :op4 ( person :arg0-of ( have-org-role-91 :arg2 doctor ) ) :op5 ( person :arg0-of ( have-org-role-91 :arg2 doctor ) ) ) :arg1 ( form :mod ( break-01 :arg1 ( restrict-01 :mod brief ) ) ) :time ( end-01 :arg1 ( organization :poss ( person :arg1-of expert-01 ) ) ) )
and :op1 ( lack-01 :polarity - :arg0 ( lack-01 :arg1 ( professionalism :location ( and :op1 ( company :mod internet ) :op2 ( company :mod data ) ) ) ) :arg1 ( enter-01 :arg0 and :arg1-of same-01 ) )
multi-sentence :snt1 ( cause-01 :arg1 ( need-01 :arg0 ( person :location ( in-front-of :op1 ( person :arg0-of ( have-rel-role-91 :arg1 child :arg2 child ) ) ) ) :arg1 ( model :mod good :mod good ) ) ) :snt2 ( possible-01 :arg1 ( help-01 :arg0 this :arg1 ( person :arg0-of ( have-rel-role-91 :arg1 person :arg2 child ) ) :arg2 ( shape :arg0 person :arg1 ( mind :mod ( good :degree more ) ) ) ) :op3 ( let-01 :arg0 person :arg1 ( good :degree more :domain person ) ) :arg1-of ( direct-02 :polarity - ) )
sign-02 :arg0 ( person :mod country_name_0 ) :arg1 ( contract :quant num_0 :mod ( monetary-quantity monetary-quantity_num_0 :unit dollar ) ) :time ( since :op1 ( decide-01 :arg0 person :arg1 ( regain-01 :arg0 person :arg1 ( cavaliers :arg1 person ) ) ) )
say-01 :arg0 ( thing :arg1-of state-01 :mod joint ) :arg1 ( possible-01 :arg1 ( confirm-01 :arg0 ( and :op1 ( group :consist-of wood ) :op2 unite-01 :op3 ( union :mod rmt ) ) :arg1 ( agree-01 :arg0 and :arg1 ( restart-01 :arg0 we :arg1 ( process-02 :arg1 ( dispute-01 :arg2 dispute-01 ) :time current ) ) ) ) )
say-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg2 pleiades ) ) :arg1 ( laid :arg0 person :arg1 groundwork :arg2 ( theory :topic ( theory :mod two-way ) :beneficiary ( and :op1 ( person :mod young ) :op2 ( star :arg1-of age-01 ) ) ) )
and :op1 ( make-01 :arg0 ( person :quant num_0 ) :arg1 ( career :mod career ) ) :op2 ( win-01 :arg0 ( win-01 :quant num_1 :arg0 person ) :arg2 ( succeed-01 :arg0 person ) )
witness-01 :arg0 ( we :quant all ) :arg1 ( work-01 :arg1 engineer-01 :mod engineer-01 :arg0-of ( use-01 :arg1 ( and :op1 concrete :op2 steel :quant ( more-than :op1 ( mass-quantity mass-quantity_num_0 :unit ton ) ) ) :purpose ( construct-01 :arg1 bridge ) ) )
cause-01 :arg1 ( possible-01 :arg1 ( see-01 :arg1 ( and :op1 ( man :arg1-of arm-01 :quant number :location ( state :mod war ) ) :op2 ( person :arg0-of ( have-org-role-91 :arg1 ( police :mod philadelphia ) :arg2 ginaldi ) ) :op3 ( person :arg0-of ( have-org-role-91 :arg1 ( police :mod philadelphia ) :arg2 ginaldi ) ) :op4 ( person :arg0-of ( have-org-role-91 :arg1 ( police :mod philadelphia ) :arg2 ginaldi ) ) :op5 ( person :arg0-of ( have-org-role-91 :arg1 ( police :mod philadelphia ) :arg2 ginaldi ) ) ) ) )
call-03 :arg0 he :arg1 ( increase-01 :arg0 he :arg1 ( access-01 :arg0 media :arg1 ( and :op1 ( document :mod conference ) :op2 ( thing :arg1-of ( decide-01 :arg0 ( or :op1 ( committee :mod unofficial ) :op2 ( group :arg0-of work-01 ) ) ) ) ) ) ) :arg2 media
pursue-01 :arg0 ( person :mod country_name_0 :arg0-of ( look-02 :arg1 ( princess :arg1 ( kate :location ( olympics :quant num_0 :mod rio ) ) ) ) ) :arg1 audience :manner heavy :time ( week :mod this )
and :op2 ( think-01 :arg0 i :arg1 ( and :op1 ( long-03 :arg1 it :degree very ) :op2 ( tell-01 :arg0 ( person :arg0-of brady ) :arg1 ( post :mod huffington ) ) ) )
say-01 :arg0 ( candidate :poss ( person_name_0 :arg0-of ( have-org-role-91 :arg1 political-party_name_1 :arg2 president ) ) ) :arg1 ( and :op1 ( candidate :poss ( person :arg0-of ( have-org-role-91 :arg2 president ) ) ) :op2 ( person :arg0-of ( have-org-role-91 :arg1 political-party_name_1 :arg2 ( president :mod vice ) ) ) :op3 ( person :arg0-of ( have-org-role-91 :arg1 government-organization_name_3 :arg2 president ) ) :op4 ( person :arg0-of ( have-org-role-91 :arg1 government-organization_name_3 :arg2 president ) ) )
mission :poss ( country :poss we ) :domain ( and :op1 ( achieve-01 :arg0 ( country :poss we ) :arg1 ( and :op1 circular :op2 land-01 :op3 ( patrol-01 :arg0 country ) ) :time ( ever :polarity - ) ) :op2 ( propose-01 :arg1 ( achieve-01 :arg1 ( and :op1 ( person :mod circle ) :op2 land ) :time ( once :op1 ( fail-01 :arg1 land-01 ) ) ) ) )
say-01 :arg0 he :arg1 ( serve-01 :arg0 he :arg1 ( thing :arg1-of ( base-02 :arg2 ( commission :arg0-of ( up :arg1 ( case-03 :arg1 ( case-03 :mod ( party :mod inappropriate ) ) :time past ) ) ) ) ) :time past ) :op3 ( use-01 :arg0 commission :arg1 ( experience-01 :arg1 ( huntsman :arg1-of relevant-01 ) ) )
contrast-01 :arg1 ( shy :arg1 ( person :arg0-of ( enter-01 :arg1 ( home :mod new ) ) :arg0-of ( enter-01 :arg1 ( home :mod new ) :time first ) ) ) :arg2 ( become-01 :arg1 person :arg2 ( and :op1 ( rational :polarity - ) :op2 ( rolling :location water ) :op3 ( eat-01 :arg0 person :arg1 ( grapes :prep-with ( beak :mod new ) ) ) ) :time soon )
and :op1 ( possible-01 :arg1 ( reduce-01 :arg0 this :arg1 ( risk-01 :arg0 this :arg2 ( harm-01 :arg0 ( harm-01 :arg1 sex :mod further ) :arg1 ( harm-01 :arg1 sex :degree further ) ) ) ) ) :op2 ( tell-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg1 ( agency :mod news ) :arg2 langger ) ) :arg1 this )
and :op2 ( grow-01 :arg1 ( number :quant-of ( population :arg1-of natural-03 ) ) :mod new :time ( period :mod same ) )
and :op1 ( crash-01 :arg1 ( person :arg0-of ( have-rel-role-91 :arg1 ( person :mod country_name_0 ) :arg2 uncle ) ) :location location_name_0 :time ( week :mod last ) ) :op2 ( make-01 :arg0 person :arg1 ( tube :quant ( monetary-quantity monetary-quantity_num_0 :unit dollar ) ) :location ( airport :mod same ) :time ( week :mod this ) )
and :op1 ( collect-01 :arg1 ( tolls :mod basic ) :arg2 ( monetary-quantity monetary-quantity_num_0 :unit ( yuan :mod renminbi ) ) ) :op2 ( collect-01 :arg1 ( tolls :mod mileage ) :arg2 ( monetary-quantity monetary-quantity_num_1 :unit ( yuan :mod renminbi ) ) )
and :op1 ( be-located-at-91 :arg1 ( platform :mod social :mod online ) :arg2 ( circle :mod communicate-01 ) ) :op2 ( establish-01 :arg0 platform :arg1 ( sense-01 :arg0 person :arg1 loneliness ) ) :location surface
tell-01 :arg0 doctor :arg1 ( likely-01 :arg1 ( cure :arg1 ( bronchitis :mod chronic ) :degree less ) ) :arg2 ( possible-01 :arg1 ( eased :arg1 ( use-01 :arg1 drug ) ) )
say-01 :arg0 ( forecast-01 :arg0 ( forecast-01 :arg0 ( department :part-of ( and :op1 ( department :mod trade-01 ) :op2 ( department :mod ( develop-02 :arg1 economy ) ) ) ) ) ) :arg1 ( reach-01 :arg0 ( grow-01 :arg1 ( economy :poss country ) ) :arg1 ( percentage-entity percentage-entity_num_0 ) :time ( above :op1 ( level :mod this ) :mod basic ) )
and :op1 ( change-01 :arg1 ( monetary-quantity monetary-quantity_num_0 :unit yuan ) :time ( since :op1 ( introduce-02 :arg1 ( reform-01 :arg1 remittance :mod new ) ) ) :time ( since :op1 ( introduce-02 :arg1 ( reform-01 :arg1 remittance :mod new ) ) ) ) :op2 ( value-01 :arg1 ( percentage-entity percentage-entity_num_0 ) :arg2 ( temporal-quantity temporal-quantity_num_1 :unit year ) :time ( middle :op1 year ) )
and :op1 ( accept-01 :arg0 ( fund-01 :arg1 money :mod international ) :arg1 ( thing :arg2-of ( fund-01 :arg1 money ) :mod international ) :time ( year :mod this ) ) :op2 ( accept-01 :arg0 ( fund-01 :arg1 money :mod international ) :arg1 ( thing :arg2-of ( right-05 :arg1 ( rights :arg1 ( right :arg1-of special-02 ) :arg1-of special-02 ) ) ) ) :time ( year :mod this )
say-01 :arg0 she :arg1 ( possible-01 :arg1 ( see-01 :arg1 ( ceremony :topic ( and :op1 ( scale :mod such ) :op2 ( worship :arg1-of organize-01 ) :mod ( scale :mod such ) ) ) ) :prep-in ( metropolis :mod ( busy :mod such ) :mod such ) )
say-01 :arg0 he :arg1 ( participate-01 :arg0 ( team :quant num_0 :arg2-of ( include-91 :arg1 ( team :quant num_0 :arg0-of ( participate-01 :arg1 ( association :mod ( only :polarity - ) ) ) :arg2-of ( include-91 :arg1 ( association :mod ( only :polarity - ) ) ) ) ) ) :arg1 ( cooperate-01 :arg0 ( school :quant some ) :arg2 ( allow-01 :arg0 ( person :arg0-of study-01 ) :arg1 ( participate-01 :arg0 person ) ) :mod also ) ) :mod also
understand-01 :arg1 ( include-01 :arg1 ( thing :arg2-of ( list-01 :arg1 ( heritage :name ( name :op1 '' ) :mod ( heritage :mod culture ) :name ( name :op1 '' ) :mod ( heritage :name ( name :op1 '' ) :mod ( heritage :mod culture ) :mod nation ) ) ) ) :arg2 ( thing :arg2-of ( list-01 :arg1 ( heritage :mod culture :mod culture ) ) ) )
say-01 :arg0 person_name_0 :arg1 ( common :polarity - :domain it :location ( table :mod dinner ) )
focus-01 :arg0 ( and :op1 ( company :mod ( healthcare :mod internet ) :quant many ) :op2 ( company :arg0-of ( tillage :arg1 ( side :mod both ) ) :arg1-of deep-02 ) ) :arg2 i :time initial
want-01 :arg0 ( person :mod country_name_0 ) :arg1 ( find-01 :arg0 person :arg1 ( thing :arg2-of ( list-01 :arg1 ( morality :mod phone :arg1-of ( provide-01 :arg0 hotel ) ) ) ) ) :time ( stay-01 :arg1 person :time recent )
say-01 :arg0 newspaper :arg1 ( add-02 :arg1 ( code :poss country_name_0 ) :arg2 list-01 ) :mod also
multi-sentence :snt1 ( resemble-01 :arg1 it :arg2 ( london :arg1 it ) ) :snt2 ( say-01 :arg0 he :arg1 platform )
apply-01 :arg0 facility_name_0 :arg1 ( apply-01 :arg1 execute-01 ) :time ( after :op1 ( fail-01 :arg1 judge-01 :arg2 force-04 ) ) :time ( after :op1 ( fail-01 :arg1 he :arg2 ( comply-01 :arg0 he :arg1 ( thing :arg2-of sentence-01 ) ) ) )
possible-01 :arg1 ( face-01 :arg0 ( person :quant num_0 :arg0-of work-01 :source ( plant :name ( name :op1 alcoa :op2 portland ) ) ) :arg1 ( employ-01 :polarity - ) )
say-01 :arg0 company :arg1 ( reduce-01 :arg0 company :arg1 ( monetary-quantity monetary-quantity_num_0 :unit ( yuan :mod renminbi ) :arg1-of ( activity-06 :arg0 company ) ) )
resemble-01 :arg1 ( model :arg1-of ( simulation :arg2 ( and :op1 ( scientist :mod previous ) :op2 ( scientist :mod previous ) ) ) ) :arg2 model
resign-01 :mode imperative :arg0 you :arg1 ( coach :mod avalanche )
end-01 :arg1 crisis
ridiculed :arg1 it :condition ( aspire-01 :arg0 we :arg1 ( become-01 :arg1 we :arg2 ( bank :mod big ) :prep-with ( brand :quant lot ) ) )
suppose-02 :arg1 he :arg2 ( start-01 :arg0 he :arg1 ( have-org-role-91 :arg0 he :arg1 ( school :ord ( ordinal-entity ordinal-entity_num_0 ) ) :arg2 ( school :mod primary :arg1-of local-02 ) ) )
resemble-01 :arg1 team :arg2 ( team :mod country_name_0 ) :time final
expand-01 :arg0 we :arg1 ( detroit :arg0 we :arg1 ( hometown :arg0 ( hometown :poss i ) :arg2 ( and :op1 ( provide-01 :arg0 ( person :mod young :arg0-of ( deserve-01 :arg1 ( opportunity :arg1-of learn-01 :mod this ) ) ) :arg1 ( opportunity :arg1-of learn-01 :mod this ) ) :op2 ( benefit-01 :arg0 ( sport :arg1-of remarkable-02 :mod this ) :arg1 person ) ) ) ) :location country_name_0
want-01 :arg0 ( person :mod country_name_0 ) :arg1 ( get-03 :arg1 person :arg2 ( pay-01 :arg0 ( doctor :quant num_0 :mod junior :arg1-of ( involve-01 :arg2 contract-02 ) ) :time ( weekend :mod ( good :degree more ) ) ) )
make-02 :arg0 ( culture :mod computer ) :arg1 ( defraud-01 :arg0 ( and :op1 ( defraud-01 :arg1 ( area :mod religious-group_name_0 ) ) :op2 ( defraud-01 :location ( area :mod religious-group_name_1 ) ) ) )
easy-05 :arg1 ( accuse-01 :arg0 law :arg1 ( person :arg0-of ( concern-01 :arg1 ( person :mod country_name_0 ) ) ) :arg1-of ( accord-02 :arg2 ( bias-01 :arg1 person ) ) ) :degree more
strengthen-01 :arg1 train-01 :purpose ( ensure-01 :arg1 ( enforce-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg2 staff ) ) :arg1 ( require-01 :arg1 ( go-02 :arg0 person :arg4 ( vote-01 :arg0 person :arg1 ( person :arg0-of vote-01 ) ) ) :manner strict ) ) )
plan-01 :arg0 they :arg1 ( look-01 :arg0 they :arg1 ( model :mod ( generation :mod new ) :consist-of ( model :name ( name :op1 2017nu :op2 muses ) :arg1-of ( 2017nu :polarity - ) ) ) ) :time ( time :mod this )
and :op1 ( differ-02 :arg1 ( coach :mod each ) :arg2 ( person :arg0-of play-01 ) ) :op2 ( see-01 :arg0 i :arg1 ( beautiful-02 :arg1 ( hand :part-of ( person :arg0-of play-01 ) ) :degree very ) :time ( see-01 :arg0 i :arg1 ( and :op1 ( beautiful-02 :arg1 ( hand :part-of ( person :arg0-of play-01 ) ) ) :op2 ( beautiful-02 :arg1 hand :degree very ) :time ( once :op1 now ) ) ) )
and :op1 ( gather-03 :arg0 ( and :op1 ( person :arg0-of ( have-org-role-91 :arg2 head-of-state ) ) :op2 ( person :arg0-of ( have-org-role-91 :arg1 family :arg2 member ) ) :op3 ( person :arg0-of ( have-org-role-91 :arg1 family :arg2 member ) ) :op4 ( person :arg0-of ( have-org-role-91 :arg1 family :arg2 member ) ) :op5 ( person :arg0-of ( have-org-role-91 :arg1 family :arg2 member ) ) ) ) :op2 ( possible-01 :arg1 ( go-02 :arg0 ( holiday :mod only ) :arg4 home :mod usual ) )
multi-sentence :snt1 ( talk-01 :arg0 i :arg1 ( medal :mod gold :poss she ) :arg2 ( medal :mod gold :poss she ) :time ( after :op1 ( ceremony :mod award_name_1 :mod archery :poss woman ) ) ) :snt2 ( possible-01 :arg1 ( bring-up-02 :arg0 this :arg1 ( thing :arg2-of result-01 :mod good ) ) ) :snt3 satisfaction
understand-01 :arg1 ( inspect-01 :arg0 ( department :mod ( enforce-01 :arg1 law ) :mod tourism ) :arg1 ( place :location-of ( concentrated :arg1 ( person :arg0-of tour-01 ) :location ( and :op1 ( park :location west ) :op2 ( mountain :mod red ) ) ) ) :time already )
and :op1 ( rush-01 :arg1 ( unit :quant many ) :arg2 ( temperature :arg1-of ( temperature :arg1-of high-02 ) ) ) :op2 ( say-01 :arg0 ( group_name_0 :mod safe-01 ) :arg1 ( accord-02 :polarity - :arg1 practice-01 :arg2 ( method :time current ) ) ) :time past
call-03 :arg1 ( and :op1 ( law :arg0-of ( protect-01 :arg1 animal ) :arg1-of ( tough-02 :degree more ) ) :op2 ( penalize-01 :arg2 abuser :mod ( great :degree more ) ) )
up :arg1 ( person :arg2-of staff-01 ) :time ( before :op1 ( overthrow-01 :arg0 person :arg1 ( person :arg0-of ( have-org-role-91 :arg2 head-of-state ) ) ) ) :frequency ( rate-entity-91 :arg3 ( temporal-quantity temporal-quantity_num_0 :unit day ) :purpose ( prevent-01 :arg0 person :arg1 infect-01 ) )
and :op1 ( be-located-at-91 :arg1 ( platform :mod social :mod network ) :arg2 ( circle :consist-of communicate-01 ) ) :op2 ( establish-01 :arg0 platform :arg1 ( sense-01 :arg1 loneliness ) ) :location surface
and :op1 ( hiding :arg1 you :arg2 ( avoid :arg0 i :arg1 you ) ) :op2 ( contrast-01 :arg1 ( have-03 :arg0 you :arg1 ( room :mod ( only :polarity - ) :purpose ( have-03 :arg0 you :arg1 room ) ) ) :arg2 ( give-01 :arg0 i :arg1 ( and :op1 time :op2 space :mod ( other :mod each ) ) :arg2 ( think-01 :arg0 i :arg1 ( and :op1 word :op2 deed ) ) ) )
learn-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg1 ( network :mod sea :mod country_name_0 :mod country_name_1 ) :arg3 report-01 ) ) :arg1 ( accept-01 :arg0 police :arg1 ( report-01 :arg1 ( case :quant num_0 ) ) :time now ) :arg1-of ( cause-01 :arg0 ( and :op1 ( accept-01 :arg0 police :arg1 ( report-01 :arg1 ( case :quant num_0 ) ) :time now ) :op2 ( investigate-01 :arg1 ( case :quant num_0 :arg1-of involve-01 ) ) :op3 ( investigate-01 :arg1 et-cetera :degree further ) ) :time now )
hold-02 :arg1 ( exchange-01 :arg1 view-02 ) :mod also :arg1-of ( cause-01 :arg0 ( and :op1 ( party :arg1-of interest-01 :location ( organization :mod extremism ) ) :op2 ( activity-06 :arg1 terrorism ) ) )
contrast-01 :arg2 ( fail-01 :arg1 ( person_name_0 :mod country_name_1 ) :time ( late :op1 ( temporal-quantity temporal-quantity_num_0 :unit year ) :degree more ) :time ( before :op1 now :quant ( temporal-quantity temporal-quantity_num_3 :unit year ) ) )
and :op1 ( spend-02 :arg0 ( couple :quant ( couple :op1 ( temporal-quantity temporal-quantity_num_0 :unit hour ) ) ) :arg1 ( temporal-quantity temporal-quantity_num_3 :unit hour ) :location ( scene :poss event ) ) :op2 ( experience-01 :arg0 couple :arg1 ( be-located-at-91 :arg1 couple :arg2 ( laptop :arg1-of mobile-02 :mod mini-flower ) ) )
and :op1 ( have-org-role-91 :arg0 he :arg1 ( newspaper :mod day :poss person ) :arg2 ( secretary :mod deputy ) ) :li num_1
multi-sentence :snt2 ''
and :op1 ( last-01 :arg1 ( score-01 :arg1 ( league :mod premier ) :arg2 ( leagues :mod premier ) ) :mod also ) :op2 ( lead-01 :arg0 ( person :quant num_1 ) )
say-01 :arg0 ( art :mod country_name_0 :mod country_name_1 ) :arg1 ( and :op1 ( comfortable-02 :polarity - :arg1 country :mod at-least ) :op2 ( comfortable-02 :polarity - :arg1 art :mod at-least ) ) :medium newspaper_name_5
say-01 :arg0 she :arg1 ( know-01 :arg0 i :arg1 ( anything :topic it ) :degree total ) :arg1-of ( say-01 :arg0 she )
include-01 :arg1 ( and :op1 ( discuss-01 :arg1 ( and :op1 ( thing :arg1-of ( learn-01 :medium online ) ) :op2 ( discuss-01 :mod academia ) :op3 ( exchange-01 :arg1 society ) :op4 ( and :op1 hospital :op2 ( department :mod same ) ) ) :op2 ( and :op1 ( support-01 :arg1 ( department :mod same ) ) :op2 ( support-01 :arg1 ( department :mod same ) ) :op3 ( support-01 :arg0 doctor :arg1 ( and :op1 ( support-01 :arg1 ( relation-03 :arg0 ( relation-03 :arg0 ( relation-03 :arg0 ( relation-03 :arg0 ( relation-03 :arg0 ( and :op1 ( relation-03 :arg0 ( relation-03 :arg0 ( relation-03 :arg0 ( relation-03 :arg0 ( relation-03 :arg0 ( relation-03 :arg0 ( relation-03 :arg0 ( relation-03 :arg0 ( relation-03 :arg0 ( relation-03 :arg0 ( relation-03 :arg0 ( relation-03 :arg0 ( relation-03 :arg0 ( relation-03 :arg0 ( relation-03 :arg0 ( relation-03 :arg0 ( relation-03 :arg0 ( relation-03 :arg0 ( relation-03 :arg0 ( relation-03 :arg0 ( relation-03 :arg0 country_name_0 ) :arg2 ( life :arg1-of personal-02 ) ) ) :arg2 ( life :arg1-of personal-02 ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) :op2 ( discuss-01 :mod academia ) ) ) ) ) ) ) ) ) ) ) ) ) ) :arg2 ( thing :arg1-of ( learn-01 :medium online ) )
and :op1 ( relate-01 :arg1 ( level :mod ( compete-02 :arg3 compete-02 ) ) :arg2 ( foundation :poss ( sports :mod nation ) ) :manner close ) :op2 ( depend-01 :arg0 ( sport :poss ( country :mod whole ) ) :arg1 ( sport :mod whole ) ) :op3 ( depend-01 :arg0 ( sport :poss ( country :mod whole ) ) :arg1 ( condition :poss field ) )
and :op1 ( reach-01 :arg0 ( thing :arg1-of ( contribute-01 :arg2 ( rate-entity-91 :arg1 ( monetary-quantity monetary-quantity_num_0 :unit dollar ) :arg2 ( volume-quantity volume-quantity_num_1 :unit gallon ) ) ) ) :arg1 ( rate-entity-91 :arg1 ( monetary-quantity monetary-quantity_num_1 :unit dollar ) :arg2 ( volume-quantity volume-quantity_num_1 :unit gallon ) ) :arg4 ( rate-entity-91 :arg1 ( monetary-quantity monetary-quantity_num_1 :unit dollar ) :arg2 ( volume-quantity volume-quantity_num_1 :unit gallon ) ) ) :op2 ( reach-01 :arg0 ( fee :mod speak-01 :poss ( person :arg0-of ( have-org-role-91 :arg2 president :time former ) :arg0-of ( have-org-role-91 :arg2 president :time former ) ) ) :arg1 ( rate-entity-91 :arg1 ( monetary-quantity monetary-quantity_num_2 :unit dollar :mod near ) :arg2 ( volume-quantity volume-quantity_num_1 :unit gallon ) ) ) :op3 ( schuster :arg0 ( book :topic ( tenure :poss state :location ( department :mod state ) ) ) :arg1 ( rate-entity-91 :arg1 ( monetary-quantity monetary-quantity_num_2 :unit dollar ) :arg2 ( volume-quantity volume-quantity_num_1 :unit gallon ) ) )
say-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg2 official ) ) :arg1 ( hope-01 :arg0 we :arg1 ( possible-01 :arg1 ( draw-02 :arg0 hotel :arg1 ( thing :arg1-of ( conclude-01 :mod right ) ) ) ) )
and :op1 ( ' :arg0 ( person :arg0-of ( have-rel-role-91 :arg1 ( person :arg0-of ( have-rel-role-91 :arg1 ( person :arg0-of ( have-rel-role-91 :arg1 ( person :arg0-of ( have-rel-role-91 :arg1 ( person :arg0-of ( have-rel-role-91 :arg1 ( person :arg0-of ( have-rel-role-91 :arg1 ( person :arg0-of ( have-rel-role-91 :arg1 ( person :arg0-of ( have-rel-role-91 :arg2 son ) ) :arg2 son ) ) :arg2 son ) ) :arg2 parent ) ) ) ) ) ) ) ) ) ) :arg1 ( grow-01 :arg1 ( person :arg0-of ( have-rel-role-91 :arg1 person :arg2 parent ) ) ) ) :op2 ( imitating :arg0 person :arg1 ( person :arg0-of ( have-rel-role-91 :arg1 person :arg2 parent ) ) ) :op3 ( person :arg0-of ( have-rel-role-91 :arg1 person :arg2 parent ) ) :op4 ( person :arg0-of ( have-rel-role-91 :arg1 person :arg2 parent ) ) :op5 ( person :mod ( kind :mod amr-unknown ) :arg0-of ( have-rel-role-91 :arg1 person :arg2 parent ) )
and :op2 ( feel-01 :arg0 she :arg1 ( and :op1 relaxed :op2 ( free-04 :arg1 she ) ) :time ( once :op1 ( leave-15 :arg0 he :arg1 ( situation :arg1-of ( trap-01 :arg2 he ) ) ) ) )
and :op1 ( land :mod official :time ( season :mod next ) ) :op2 ( join-01 :arg1 ( team :quant num_3 :mod philadelphia ) ) :mod official :time ( season :mod next :mod nba )
tell-01 :arg0 ( he :arg0-of ( have-org-role-91 :arg1 ( and :op1 ( doctor :mod primary ) :op2 ( person :arg0-of study-01 :mod medicine ) ) :arg2 member ) ) :arg1 ( and :op1 ( good :domain deal-01 ) :op2 ( recommend-01 :arg1 ( accept-01 :arg1 deal-01 ) ) ) :arg2 member :time ( session :mod pre-voting :consist-of ( and :op1 ( person :quant num_0 :arg0-of ( have-org-role-91 :arg1 ( doctor :mod primary ) :arg2 member ) ) :op2 ( person :arg0-of ( study-01 :arg1 medicine ) ) ) )
reverse-01 :arg1 ( opine-01 :arg0 country_name_0 :arg1-of public-02 ) :mod also :time ( since :op1 november )
use-01 :arg0 it :arg1 ( and :op1 ( steel :quant ( mass-quantity mass-quantity_num_0 :unit ( ton :mod ( mass-quantity mass-quantity_num_1 :unit ton ) ) ) ) :op2 ( concrete :quant ( mass-quantity mass-quantity_num_1 :unit ton ) ) :op3 ( concrete :quant num_2 ) )
and :op1 ( person_name_0 :arg0-of ( visit-01 :arg1 scene :time today ) :arg0-of ( visit-01 :arg1 scene :time today ) ) :op2 ( become-01 :arg1 person :arg2 ( board-01 :arg0 person :arg1 bridge ) :ord ( ordinal-entity ordinal-entity_num_1 ) )
show-01 :arg0 dragon :arg1 ( backbone :mod ( engineer-01 :mod civil ) ) :arg1-of concern-01
include-91 :arg1 ( person :quant num_0 :arg1-of ( shoot-02 :location ( area :mod germantown ) ) ) :arg2 brown
accuse-01 :arg0 ( and :op1 ( person :arg0-of ( have-org-role-91 :arg1 ( cabinet :poss person ) :arg2 minister :time former ) ) :op2 ( person :arg0-of ( have-org-role-91 :arg1 cabinet :arg2 minister :time former ) ) :op3 ( person :arg0-of ( have-org-role-91 :arg1 cabinet :arg2 minister :time former ) ) :op4 ( person :arg0-of ( have-org-role-91 :arg1 cabinet :arg2 minister :time former ) ) :op5 ( person :arg0-of ( have-org-role-91 :arg1 cabinet :arg2 minister :time former ) ) :op6 ( person :arg0-of ( have-org-role-91 :arg1 cabinet :arg2 minister :time former ) ) :op6 ( person :arg0-of ( have-org-role-91 :arg1 cabinet :arg2 minister :time former ) ) :op6 ( person :arg0-of ( have-org-role-91 :arg1 cabinet :arg2 minister :time former ) ) :op6 ( person :arg0-of ( have-org-role-91 :arg1 cabinet :arg2 minister :time former ) ) :op7 ( person :arg0-of ( have-org-role-91 :arg1 cabinet :arg2 minister :time former ) ) ) :arg1 ( thing :arg0-of ( evidence-01 :arg1 ( abuse-01 :arg1 elect-01 ) ) )
contrast-01 )
and :op1 ( swimmer :arg0 ( person :mod country_name_0 :arg0-of ( have-org-role-91 :arg1 country_name_1 :arg2 swimmer ) ) :arg1 ( person :arg0-of ( have-org-role-91 :arg1 country :arg3 lead-02 ) ) :ord ( ordinal-entity ordinal-entity_num_0 ) ) :op2 ( aide :arg0 person :arg1 ( gap :mod canadian ) ) :op3 ( narrowed :arg0 ( team :mod canadian ) :arg1 gap :arg2 country :time then ) :ord ( ordinal-entity ordinal-entity_num_0 )
say-01 :arg0 ( person :arg1-of neighbor-01 ) :arg1 ( and :op1 ( see-01 :arg0 person :arg1 ( fight-01 :arg0 person :location street ) :frequency often ) :op2 ( call-01 :arg0 person :arg1 police :arg2 street :frequency often ) )
say-01 :arg0 ( person_name_0 :arg0-of ( lead-02 :arg1 ( person :arg0-of ( have-org-role-91 :arg2 ( president :mod vice ) ) ) ) ) :arg1 ( choose-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg2 ( president :mod next ) ) ) :arg1 ( replace-01 :arg0 man :arg1 ( person :arg0-of ( have-org-role-91 :arg3 judge-01 ) ) :arg2 ( person :arg0-of ( have-org-role-91 :arg3 judge-01 ) ) ) )
locate-01 :arg1 ( move-01 :arg1 environment :arg2 ( level :poss ( area :mod new :location plant ) ) ) :arg1-of complete-02 :time ( end-01 :arg1 ( year :mod last ) )
piloted :arg1 pilot-01 :arg2 ( province :quant num_1 :example ( and :op1 ( and :op1 ( district :mod zhejiang ) :op2 ( district :mod -lrb- ) ) ) :op2 ( implement-01 :arg1 pilot-01 :degree full ) ) :time ( since :op1 num_0 )
say-01 :arg0 he :arg1 ( extend-01 :arg1 force :arg2 country_name_0 :condition ( attack-01 :polarity - :arg0 force :arg1 ( force :mod extremism ) ) ) :mod also
and :op1 ( halfway :arg1 ( bingbin :name ( name :op1 zhang ) ) :direction ( down :op1 middle ) ) :op2 ( seem-01 :arg1 ( away :op1 final :domain bingbin ) ) :time ( game :mod day )
tell-01 :arg0 person_name_0 :arg1 ( person :arg0-of report-01 ) :arg2 ( person :arg0-of report-01 ) :time always :arg1-of ( resemble-01 :arg2 ( and :op1 ( person :arg0-of report-01 ) :op2 ( person :mod quiet :arg0-of ( have-rel-role-91 :arg1 person :arg2 child ) ) :op3 ( person :arg0-of ( have-rel-role-91 :arg1 person :arg2 child ) ) ) :time always )
and :op1 ( resemble-01 :arg1 ( way :manner-of ( explore-01 :arg1 ( person :arg0-of ( have-org-role-91 :arg2 head-of-state ) ) ) ) :arg2 ( and :op1 ( detecting :arg1 person ) :op2 ( be-located-at-91 :arg1 person :arg2 around :direction around ) :op3 ( travel-01 :arg0 person :direction around :direction around ) :op4 ( travel-01 :arg0 person :direction around ) :op5 ( travel-01 :arg0 person :arg4 ( goal :mod ( land-01 :arg1-of man-01 ) ) ) ) ) :op2 ( achieve-01 :arg0 person :arg1 ( goal :mod ( land-01 :arg1-of man-01 ) ) :time final )
and :op1 ( investigate-01 :arg0 committee ) :op2 ( impose-01 :arg0 committee :arg1 ( penalize-01 :arg1-of ( accord-02 :arg2 ( term :mod reference-04 ) ) ) :arg1-of ( accord-02 :arg2 ( term :mod reference-04 ) ) :arg1-of ( accord-02 :arg2 ( term :mod reference-04 ) ) ) :arg1-of ( accord-02 :arg2 ( term :mod reference-04 ) )
contrast-01 :arg1 ( obligate-01 :arg1 ( authority :mod prison ) :arg2 ( publish :arg0 authority :arg1 ( thing :arg2-of ( name-01 :arg1 ( person :arg1-of ( imprison-01 :arg1-of decease ) ) ) ) ) ) :arg2 ( include-01 :arg1 ( country :quant num_0 :mod country_name_0 ) :arg2 ( report-01 :medium television ) )
and :op1 ( station :mod passenger :mod old :domain ( station :mod passenger :mod old ) ) :op2 ( arrive-01 :arg1 station :arg4 ( station :mod urumqi ) :location ( station :mod urumqi :arg1-of ( base-02 :arg2 step-by-step ) ) ) :li num_0
determine-01 :arg0 ( and :op1 ( thing :arg1-of ( perform-01 :arg0 he ) ) :op2 ( thing :arg1-of ( achieve-01 :arg0 he ) :mod ( good :degree most :compared-to world ) ) ) :arg1 ( likely-01 :polarity - :arg1 ( neutralize-01 :arg0 he :arg1 ( break-through-26 :arg0 he :arg1 ( project :mod this ) ) ) :mod also ) :prep-in ( fact :mod ningzhi )
and :op1 ( communicate-01 :arg0 friend :arg2 ( person :arg0-of ( have-rel-role-91 :arg1 person :arg2 friend ) ) :frequency often ) :op2 ( because :arg0 ( person :arg0-of ( have-rel-role-91 :arg1 person :arg2 friend ) ) :arg1 ( person :arg0-of ( have-rel-role-91 :arg1 person :arg2 friend ) ) :time ( late :degree more :quant some ) :time ( late :degree more ) :location ( group :mod large :consist-of ( converse-01 :arg1 person :arg2 ( word :quant few ) ) ) :time ( late :degree more ) :mod again )
hear-01 :arg0 ( villager :quant many ) :arg1 ( wait-01 :arg1 ( person :arg0-of ( have-org-role-91 :arg1 villager :arg2 ( person :arg1-of expert-01 ) ) ) :location village :time ( morning :mod early ) )
continue-01 :arg0 ( bank :consist-of ( person :mod country_name_0 ) :poss person ) :arg1 ( carry-out-03 :arg0 person :arg1 ( renewal :arg1 ( license-01 :arg1 business ) :arg1-of ( accord-02 :arg2 law ) ) )
say-01 :arg0 ( system :mod ( value :mod socialist ) ) :arg1 ( career :arg1-of long-03 :domain ( system :arg1-of long-03 :prep-with ( system :mod ( value :mod socialist ) ) ) :arg0-of ( have-org-role-91 :arg1 organization_name_0 :arg2 member ) :arg0-of ( have-org-role-91 :arg1 country_name_1 :arg2 member ) :arg0-of ( have-org-role-91 :arg1 organization :arg2 member ) )
mark-01 :arg0 ( anniversary :ord ( ordinal-entity ordinal-entity_num_0 ) :mod ( establish-01 :arg1 ( relation-03 :arg0 country_name_0 :arg1 diplomacy :arg2 country_name_1 ) ) ) :arg1 ( hold-04 :arg1 ( exchange-01 :arg1 culture :quant more ) :location ( and :op1 country :op2 mexico ) ) :time ( year :mod next )
and :op1 ( area :location ( in-front-of :op1 ( area :name ( name :op1 ferocious :op2 shoveled :op3 shoveled ) ) ) :location ( in-front-of :op1 ( area :name ( name :op1 ferocious :op2 shoveled :op3 shoveled ) ) ) ) :op2 ( wang :arg0 ( and :op1 he :op2 ( agitation :mod emotional :poss he ) ) :arg2 ( card :mod yellow ) )
order-01 :arg0 ( person :arg0-of report-01 ) :arg2 ( piece :mod baking ) :arg1-of ( cause-01 :arg0 ( think-01 :arg0 couple :arg1 ( suitable-04 :arg1 ( dishes :mod this ) :arg2 ( discuss-01 :arg1 diet :time depression ) ) ) )
and :op1 ( offer-01 :arg0 company :arg1 ( platform :mod ( relaxing :mod such ) :mod such ) ) :op2 ( and :op1 happy :op2 happy :op3 ( platform :mod harmonious ) )
facility :mod ( sports :arg1-of public-02 ) :mod complemented
contrast-01 :arg1 ( medal :mod only :domain it :time day ) :arg2 ( receive-01 :arg0 ( team :mod country_name_0 ) :arg1 ( news :mod good :mod other ) )
explain-01 :arg0 ( police :mod ( tour :name ( name :op1 moscow ) ) ) :arg1 ( person :arg0-of ( have-rel-role-91 :arg1 police :arg2 patient ) ) :arg2 ( person :arg0-of ( have-rel-role-91 :arg1 police :arg2 patient ) ) :arg0-of ( cause-01 :arg1 ( leave-11 :arg0 person :arg1 ( ice :mod facility_name_0 ) :arg1-of deep-02 ) ) :time ( come-01 :arg1 ( person :arg0-of tour-01 ) :purpose ( consult-01 :arg0 person ) )
and :op1 ( journalist :mod new :mod country_name_0 :mod country_name_1 ) :op2 ( find-01 :arg1 ( province :quant ( at-least :op1 num_0 ) ) :location ( province :arg1-of ( mean-01 :arg2 ( and :op1 hebei :op2 jilin :op3 tianjin :op4 jiangxi :op5 sichuan :op6 sichuan :op7 beijing :op8 beijing :op10 beijing ) ) ) )
end-01 :arg1 ( thing :arg2-of ( tattoo-01 :arg1 ( thing :arg1-of fix-03 :arg1-of fix-03 ) ) )
keep-01 :arg0 ( group_name_0 :mod community ) :arg1 ( door :quant num_0 )
say-01 :arg0 ( police :mod country_name_0 ) :arg1 ( and :op1 ( lie-07 :arg1 woman :arg2 highway :time ( late :op1 ( night :time late ) ) ) :op2 ( tossed :arg0 car :arg1 woman ) )
say-01 :arg0 he :arg1 ( fear-01 :arg0 ( person :arg0-of own-01 :mod individual :arg0-of ( buy-01 :arg1 ( block :mod cell ) ) :arg0-of ( cause-01 :arg1 ( and :op1 ( affect-01 :arg0 person :arg1 ( thing :arg2-of ( price-01 :arg1 ( car :poss person ) ) ) ) :op2 ( doubted :arg0 person :arg1 ( have-03 :arg0 ( person :mod other ) :arg1 ( heart :arg1-of private-03 ) ) ) ) ) ) )
say-01 :arg0 ( committee :arg0-of ( have-org-role-91 :arg1 ( doctor :mod junior ) ) ) :arg1 ( resolve-01 :polarity - :arg0 ( person :arg0-of ( have-org-role-91 :arg2 minister ) ) :arg1 contract )
need-01 :arg0 you :arg1 ( complete-01 :arg0 you :arg1 ( remain-01 :arg1 ( thing :arg1-of remain-01 :arg1-of remain-01 ) :arg3 ( or :op1 north :op2 ( near-02 :arg2 land ) ) ) ) :time ( after :op1 ( and :op1 ( install-01 :arg1 ( install-01 :arg1 ( board :mod last :mod pavement ) ) ) :op2 ( connect-01 :arg1 install-01 :arg2 ( boards :mod bridge :location north ) ) ) )
have-concession-91 :arg1 ( say-01 :arg0 they :arg1 ( contrast-01 :arg1 ( wound-01 :arg1 ( and :op1 ( person :arg0-of ( have-org-role-91 :arg2 head-of-state ) ) :op2 ( leg :part-of person ) :op3 arm :op4 abdomen ) ) :arg2 ( awake :arg1 child :arg2 ( deliver-01 :arg0 child :arg1 ( doctor :mod medicine ) ) ) ) )
suggest-01 :arg0 report :arg1 ( coating :arg1 ( ink :mod unbroken ) :arg2 ( finger :part-of ( person :arg0-of vote-01 ) ) :purpose ( prevent-01 :arg0 coating :arg1 ( vote-01 :arg2 vote-01 ) ) ) :mod even
include-91 :polarity - :arg1 ( thing :quant num_0 :arg1-of ( include-91 :arg2 ( person :mod only ) ) ) :arg2 ( find-02 :arg1 ( see-01 :arg0 ( person :mod other ) :arg1 ( see-01 :arg0 person :arg1 ( thing :arg1-of differ-02 :mod this ) :arg1-of resemble-01 :mod also ) ) )
apologize-01 :arg0 ( speak-01 :arg0 ( person :arg0-of speak-01 :mod olympic :arg0-of speak-01 ) ) :arg2 ( thing :arg1-of ( comment-01 :arg0 ( pig :name ( name :op1 '' :op2 '' ) :mod country_name_0 ) :manner '' ) )
comment :arg0 ( and :op1 ( person :arg2-of ( staff-01 :arg1 ( corporation :mod ( broadcast-01 :mod canadian ) ) ) ) :op2 ( person :arg0-of ( have-org-role-91 :arg1 corporation :arg3 broadcast-01 ) ) :op3 ( person :arg0-of ( have-org-role-91 :arg1 corporation :arg3 broadcast-01 ) ) :op4 ( person :arg0-of ( have-org-role-91 :arg1 corporation :arg3 broadcast-01 ) ) :op5 ( person :arg0-of ( have-org-role-91 :arg1 corporation :arg3 broadcast-01 ) ) :op6 ( person :arg0-of ( have-org-role-91 :arg1 corporation :arg3 broadcast-01 ) ) :op6 ( person :arg0-of ( have-org-role-91 :arg1 corporation :arg3 broadcast-01 ) ) :op6 ( person :arg0-of ( have-org-role-91 :arg1 corporation :arg3 broadcast-01 ) ) :op6 ( person :arg0-of ( have-org-role-91 :arg1 corporation :arg3 broadcast-01 ) ) :op6 ( person :arg0-of ( have-org-role-91 :arg1 corporation :arg3 broadcast-01 ) ) :op7 ( game :name ( name :op1 olympic :op2 olympic :op3 olympic ) ) ) :arg1 wednesday
shock-01 :arg0 ( and :op1 tone :op2 wording :poss commentators ) :arg1 ( audience :mod whole ) :time ( after :op1 ( react-01 :arg0 they :arg1 network :arg1-of quick-02 ) )
contrast-01 :arg1 ( possible-01 :arg1 ( reach-01 :arg1 ( temperature :quant ( number :mod ( large :degree most ) :arg1-of ( include-91 :arg2 ( temperature :quant ( monetary-quantity monetary-quantity_num_1 :unit yuan ) ) ) ) ) :arg3 ( monetary-quantity monetary-quantity_num_1 :unit yuan :arg2-of ( include-91 :arg1 ( monetary-quantity monetary-quantity_num_1 :unit yuan :arg2-of ( include-91 :arg1 ( monetary-quantity monetary-quantity_num_1 :unit yuan :arg2-of ( include-91 :arg1 ( monetary-quantity monetary-quantity_num_1 :unit yuan :arg2-of ( include-91 :arg1 ( monetary-quantity monetary-quantity_num_1 :unit yuan :arg2-of ( include-91 :arg1 ( monetary-quantity monetary-quantity_num_1 :unit yuan :arg2-of ( include-91 :arg1 ( monetary-quantity monetary-quantity_num_1 :unit yuan :arg2-of ( include-91 :arg1 ( monetary-quantity monetary-quantity_num_1 :unit yuan :arg2-of ( include-91 :arg1 ( monetary-quantity monetary-quantity_num_1 :unit yuan :arg2-of ( include-91 :arg1 ( monetary-quantity monetary-quantity_num_1 :unit yuan :arg2-of ( include-91 :arg1 ( monetary-quantity monetary-quantity_num_1 :unit yuan :arg2-of ( include-91 :arg1 ( monetary-quantity monetary-quantity_num_1 :unit yuan :arg2-of ( include-91 :arg1 ( monetary-quantity monetary-quantity_num_1 :unit yuan :arg2-of ( include-91 :arg1 ( monetary-quantity monetary-quantity_num_1 :unit yuan ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) :time ( month :mod last ) ) :arg2 ( temperature :polarity - :arg1-of high-02 )
say-01 :arg0 ( survey-01 :arg1 ( habit :mod social ) ) :arg1 ( use-01 :arg0 ( person :arg1-of ( include-91 :arg2 ( person :arg0-of study-01 :mod college ) :arg3 ( percentage-entity percentage-entity_num_0 ) ) ) :arg1 ( rate-entity-91 :arg1 ( more-than :op1 ( temporal-quantity temporal-quantity_num_1 :unit hour ) ) :arg2 ( temporal-quantity temporal-quantity_num_1 :unit hour ) ) :duration ( more-than :op1 ( temporal-quantity temporal-quantity_num_1 :unit hour ) ) :duration ( temporal-quantity temporal-quantity_num_1 :unit hour ) )
hold-04 :arg0 committee :arg1 ( conference :mod press ) :purpose ( introduce-02 :arg0 committee :arg1 ( event :mod ( and :op1 ( event :mod organisational ) :op2 ( event :mod ( open-01 :arg1 compete-01 ) ) ) ) ) :li num_0
significant-02 :arg1 ( cooperate-01 :arg0 country_name_0 :arg1 ( and :op1 ( research-institute_name_1 :location northeast ) :op2 ( company_name_4 :location northeast ) ) ) :arg1-of significant-02
show-01 :arg0 ( analyze-01 :arg0 they ) :arg1 ( and :op1 ( estimate-01 :arg1 ( life :mod shark :mod ( big :degree most ) ) :arg2 ( temporal-quantity temporal-quantity_num_0 :unit year ) ) :op2 ( age-01 :arg1 life :arg2 ( temporal-quantity temporal-quantity_num_1 :unit year ) ) )
and :op2 ( mature :arg1 ( shark :name ( name :op1 greenland :op2 greenland ) :mod female ) :arg1-of allege-01 :time ( and :op1 ( about :op1 ( about :op1 ( temporal-quantity temporal-quantity_num_0 :unit year ) ) ) :op2 ( age-01 :arg2 ( temporal-quantity temporal-quantity_num_1 :unit year ) :mod at-least ) ) )
and :op1 ( arrive-01 :arg1 ( person :arg0-of ( have-rel-role-91 :arg1 ( person :quant num_0 :arg0-of ( have-org-role-91 :arg1 ( crew :quant num_0 :arg1-of die-01 ) :arg2 relative ) ) :arg2 ( person :arg0-of ( have-rel-role-91 :arg1 person :arg2 relative ) ) ) ) :arg4 ( court :mod sea ) ) :op2 ( file-01 :arg0 person :arg1 ( apply-01 :arg1 ( seize-01 :arg1 ( carrier :arg2-of suspect-01 ) ) ) )
rage-02 :arg0 ( person_name_0 :arg0-of ( have-org-role-91 :arg1 ( university :location country_name_1 ) :arg2 ( director :mod vice ) ) ) :location ( university :location ( and :op1 ( university :mod peking ) :op2 ( person :arg0-of ( have-org-role-91 :arg2 ( director :mod deputy ) ) ) :op3 ( person :arg0-of ( have-org-role-91 :arg1 university :arg2 secretary-general ) ) :op4 ( person :arg0-of ( have-org-role-91 :arg1 university :arg2 secretary-general ) ) :op5 ( person :arg0-of ( have-org-role-91 :arg1 university :arg2 secretary-general ) ) ) :purpose ( govern-01 :arg0 person :arg1 university :mod globe ) )
change-01 :arg0 person_name_0 :arg1 ( and :op1 change-01 :op2 ( xiaobin :mod zhang ) :op3 ( ming :location ( lord :mod old ) ) ) :time ( minute :ord ( ordinal-entity ordinal-entity_num_0 ) )
and :op1 ( seem-01 :arg1 ( bear-02 :arg1 ( person :quant num_0 ) :accompanier ( person :quant num_0 ) ) ) :op2 ( louddle :arg1 ( team :mod country_name_0 ) :mod still )
multi-sentence :snt1 ( be-located-at-91 :arg1 salon :arg2 ( under :op1 ( value-interval :op1 num_0 :op2 num_1 ) ) ) :snt2 ( : :arg0 ( art :name ( name :op1 salle :op2 deco :op3 school ) :arg0-of ( have-org-role-91 :arg1 ( school :mod southwest :part-of ( movement :name ( name :op1 bullocks ) ) :time former ) ) ) :arg2 ( blankd :quant num_2 :mod wilshire ) )
bring-01 :arg0 she :arg1 ball :arg2 ( side :mod left :part-of pitch ) :time then :arg1-of ( cause-01 :arg0 ( and :op1 ( cut-02 :arg1 ( middle :part-of middle ) ) :op2 ( pull-01 :arg0 she :arg2 net ) :op3 ( and :op1 ( pull-01 :arg0 she :arg2 net ) :op2 ( lead-01 :arg0 ( team :quant num_0 ) ) ) ) )
like-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg2 president ) ) :arg1 ( cuisine :ord ( ordinal-entity ordinal-entity_num_0 ) :example ( and :op1 ( sauce :name ( name :op1 liver ) ) :op2 ( fish :name ( name :op1 maryland ) ) ) ) :prep-as ( person :mod atheist )
have-condition-91 :arg1 ( possible-01 :arg1 ( mistake-02 :arg0 ( person :arg0-of ( have-org-role-91 :arg2 president ) ) :arg1-of same-01 ) ) :arg2 ( encourage-01 :polarity - :arg0 ( person :arg0-of ( have-rel-role-91 :arg2 wife ) ) :arg1 he :arg2 ( set-02 :arg0 person :arg1 example :arg2 ( diet :poss person ) ) )
have-03 :arg0 doctor :arg1 ( plate :quant num_0 :purpose ( continue-01 :arg0 doctor :arg1 ( and :op1 doctor :op2 doctor :op3 doctor ) :purpose help-01 ) ) :time present
and :op1 ( divide-02 :arg1 ( person :arg0-of ( have-org-role-91 :arg2 head-of-state ) ) :arg2 ( piece :quant num_0 ) ) :op2 ( divide-02 :arg1 person :arg2 ( and :op1 ( health :poss person ) :op2 ( person :mod pharmaceutical ) :op3 ( person :mod pharmaceutical ) :op4 ( hospital :mod future ) ) )
say-01 :arg0 ( person :arg0-of ( assist-01 :arg1 person_name_0 :arg2 campaign-01 ) :arg0-of ( have-org-role-91 :arg2 palmeyi ) ) :arg1 ( continue-01 :arg1 ( pole :mod ( transparent :mod finance ) :mod finance ) ) :medium statement
contrast-01 :arg1 ( encourage-01 :polarity - :arg0 country_name_0 :arg1 ( export-01 :arg1 aerospace ) ) :arg2 ( adopt-01 :arg0 country :arg1 ( series :consist-of aerospace :quant series :purpose ( control-01 :arg0 country :arg1 ( export-01 :arg1 steel ) ) :mod practical ) :mod also )
and :op1 ( increase-01 :arg0 ( exist-01 :arg1 ( ingredient :mod market ) ) :arg1 ( efficient-01 :arg1 ( ingredient :mod market ) ) ) :op2 ( increase-01 :arg0 exist-01 :arg1 ( efficient-01 :arg1 ( factor :mod factor ) ) ) :op3 ( increase-01 :arg1 ( establish-01 :arg1 ( condition :mod ( market :mod fair ) :mod fair ) ) )
receive-01 :arg0 ( person :mod mr ) :arg1 ( total-01 :arg2 ( and :op1 ( point :quant num_3 ) :op2 ( rebounds :quant num_3 ) :op3 ( assists :quant num_3 ) ) ) :prep-in ( game :quant ( num_1 :ord ( ordinal-entity ordinal-entity_num_0 ) ) )
and :op1 ( show-01 :arg0 ( person_name_0 :arg0-of ( have-org-role-91 :arg2 governor ) ) :arg1 ( capable-01 :arg1 person :arg2 ( pull-out-02 :arg0 person :arg1 space :arg2 pitch ) ) :ord ( ordinal-entity ordinal-entity_num_0 ) ) :op2 ( possible-01 :arg1 ( shoot :arg0 person :arg1 ( basket :part-of ( line :mod three-point ) ) :time ( after :op1 ( remove-01 :arg1 ( blockage :poss person ) ) ) ) ) :ord ( ordinal-entity ordinal-entity_num_0 )
and :op1 ( lose-02 :arg0 ( person :arg0-of ( have-org-role-91 :arg1 company :arg2 smelter ) ) :arg1 money :time now ) :op2 ( face-01 :arg0 person :arg1 ( risk-01 :arg2 ( close-01 :arg1 it ) ) )
contrast-01 :arg1 ( venture :mod joint :domain factory :prep-with ( and :op1 organization_name_0 :op2 ( company :mod alumina ) ) ) :arg2 ( hold-01 :arg0 ( and :op1 ( group :poss country_name_1 :mod citic ) :op2 ( society :mod wushong :poss country ) ) :arg1 share :mod also )
benefit-01 :arg0 game :arg1 east
ask-02 :arg1 ( accept-01 :arg0 ( person :arg0-of ( represent-01 :arg1 ( doctor :mod junior ) ) ) :arg1 ( measure-02 :mod collective :mod new :arg0-of ( hold-01 :arg1 ( kiistassaan :poss person ) :medium ( agree-01 :mod new ) ) ) ) :arg2 ( person :arg0-of ( represent-01 :arg1 ( doctor :mod junior ) ) )
good :degree more :domain ( and :op1 ( person :arg0-of lead-02 ) :op2 ( person :quant num_0 :arg0-of lead-02 ) ) :mod again :arg1-of ( cause-01 :arg0 ( speak-01 :arg0 person :arg1 term :mod even ) ) :arg1-of sure-02 :time ( after :op1 ( temporal-quantity temporal-quantity_num_0 :unit year :time ( after :op1 ( temporal-quantity temporal-quantity_num_3 :unit year ) ) ) ) :arg0-of ( cause-01 :arg1 ( good :degree more :domain ( person :quant num_0 :arg0-of lead-02 ) :mod again ) )
lose-02 :arg0 ( bank :mod royal :part-of country_name_0 ) :arg1 ( customer :mod external )
jockey :ord ( ordinal-entity ordinal-entity_num_0 ) :purpose ( reach-01 :arg0 ( milestone :mod that ) :arg1 race )
contrast-01 :arg1 ( hope-01 :arg0 i :arg1 ( involve-01 :arg1 i :time ( until :op1 end-01 ) ) ) :arg2 ( possible-01 :polarity - :arg1 ( involve-01 :arg1 i :time ( until :op1 end-01 ) ) )
and :op1 ( join-01 :arg0 ( person :arg0-of engineer-01 ) :arg1 ( cross-02 :arg0 ( person :arg0-of engineer-01 ) :arg1 ( cross-02 :arg0 person :arg1 decker ) ) ) :op2 ( leave-11 :arg0 person :location ( behind :op1 ( thing :arg2-of ( extend-01 :arg1 bridge :time now ) ) ) )
and :op1 dumb :op2 ( subsides :mod operate-01 ) :arg1-of ( cause-01 :arg0 ( of-course :mod of-course ) )
champion :domain ( and :op1 ( balance-01 :arg1 ( and :op1 ( exercise :mod beams ) :op2 ( exercise :mod floor ) ) ) :op2 ( wait-01 :arg1 world ) )
propose-01 :arg0 report :arg1 ( imperishable :arg1 ( vote-01 :arg1 ( finger :part-of person ) ) ) :mod even :arg0-of ( cause-01 :arg1 ( possible-01 :arg1 ( vote-01 :arg0 no-one :frequency several ) ) ) :mod even
say-01 :arg0 person_name_0 :arg1 ( find-01 :arg1 ( thing :arg0-of ( evidence-01 :arg1 defraud-01 ) :mod all ) :location ( over :op1 country ) )
obligate-01 :arg2 ( apologize-01 :arg0 ( person :mod country_name_0 ) :arg1 ( apologize-01 :arg0 person :arg2 ( person :mod country_name_1 ) ) )
contrast-01 :arg2 ( and :op1 ( inappropriate :arg1 ( choose-01 :arg1 word ) ) :op2 ( fortunate-01 :polarity - :arg1 thing :arg2 ( thing :arg1-of word-01 ) :degree very ) )
aghast :arg0 ( customer :mod primarkin ) :arg1 ( woman :arg0-of ( brazenly :arg1 atoned :arg2 ( middle :part-of ( trade-01 :arg1 trade-01 ) ) ) )
and :op1 ( phenomenon :mod globe :domain ( phenomenon :mod intestinal ) ) :op2 ( allow-01 :arg0 ( documentary :mod this ) :arg1 ( tell-01 :arg0 documentary :arg1 ( more :topic ( person :arg0-of consume-01 ) ) :arg2 we ) )
say-01 :li num_0 :arg1 ( bother-02 :arg0 they :arg1 anyone :degree total )
contrast-01 :arg1 ( question-01 :polarity - :arg1 ( thing :mod ( only :polarity - ) :mod ( only :polarity - ) ) ) :arg2 ( include-01 :arg1 ( and :op1 ( likely-01 :arg1 ( keep-01 :arg0 ( person :arg0-of ( have-rel-role-91 :arg1 person :arg2 parent ) ) :arg1 ( thing :arg1-of feel-01 :poss person ) :location ( inside :op1 ( rate-entity-91 :arg1 ( percentage-entity percentage-entity_num_0 ) :arg2 ( temporal-quantity temporal-quantity_num_2 :unit year ) ) ) :arg2 ( rate-entity-91 :arg1 ( percentage-entity percentage-entity_num_3 ) :arg2 ( temporal-quantity temporal-quantity_num_2 :unit year ) ) ) ) :op2 ( attempt-01 :arg0 ( person :arg0-of ( have-rel-role-91 :arg1 person :arg2 parent ) ) :arg1 ( -lrb- :arg0 person ) ) ) )
multi-sentence :snt1 ( listen-01 :arg1 ( music :mod ( or :op1 computer :op2 ( something :mod else ) :mod either ) ) :arg1-of easy-05 ) :snt2 ( sighs :mode expressive )
cause-01 :arg0 ( and :op1 ( decorations :domain they :mod only ) :op2 ( high-02 :arg1 some :degree so :arg0-of ( cause-01 :arg1 ( possible-01 :polarity - :arg1 circuits ) ) ) ) :arg1 ( see-01 :arg0 no-one :arg1 them-perhaps )
become-01 :arg1 food :arg2 ( cheap-02 :arg1 food :degree more ) :beneficiary ( and :op1 ( person :arg0-of ( consume-01 :arg1 ( and :op1 ( person :arg0-of consume-01 ) :op2 ( person :arg0-of ( produce-01 :arg1 ( and :op1 ( person :arg0-of consume-01 ) :op2 ( person :arg0-of ( produce-01 :arg1 ( and :op1 ( person :arg0-of consume-01 ) :op2 ( person :arg0-of ( produce-01 :arg1 ( and :op1 ( person :arg0-of consume-01 ) :op2 ( person :arg0-of ( produce-01 :arg1 thing ) ) ) ) ) ) ) ) ) ) ) ) ) ) )
price-01 :arg1 ( ban-01 :arg1 ( import-01 :arg1 food ) :arg1-of ( impose-01 :arg0 ( weight :poss country_name_0 ) :arg2 country_name_1 ) ) :arg2 ( thing :arg2-of ( price-01 :arg1 ( import-01 :arg1 food ) ) ) :time now
say-01 :arg0 ( thing :arg2-of ( price-01 :arg1 ( food :arg1-of sell-01 ) ) ) :arg1 ( thing :arg2-of ( price-01 :arg1 ( food :arg1-of ( sell-01 :location country_name_0 ) ) ) )
contrast-01 :arg1 ( decide-01 :arg0 they :arg1 ( detail :topic detail ) ) :arg2 ( tell-01 :arg0 plan-01 :arg1 ( target :mod official ) )
say-01 :arg0 ( department :part-of ( person :mod ethnic-group_name_1 ) ) :arg1 ( reduce-01 :polarity - :arg1 ( service :mod customer ) )
allow-01 :arg1 ( sit-01 :arg1 ( and :op1 ( person :arg0-of ( have-org-role-91 :arg1 ( person :arg0-of ( have-org-role-91 :arg2 ( personnel :mod general ) ) ) :arg2 personnel ) ) :op2 ( person :arg0-of ( have-org-role-91 :arg1 army :arg2 personnel ) ) ) :arg2 ( place :arg1-of empty-02 ) ) :arg1-of ( contrast-01 :arg2 ( allow-01 :polarity - :arg1 ( and :op1 ( need-01 :arg0 ( person :arg0-of organize-01 ) :arg1 money ) :op2 ( try-01 :arg0 person :arg1 ( get-04 :arg0 person :arg1 ( sell-01 :arg0 person :arg1 ticket ) :time ( until :op1 ( moment :mod last ) ) ) ) ) ) :prep-in rio )
hit-01 :arg0 ( cities :arg0 ( city :mod great ) :arg1-of ( bad-05 :degree most ) ) :arg1 ( situation :poss you ) :arg1-of ( bad-05 :degree most )
describe-01 :arg0 police :arg1 ( government-organization :arg0-of govern-01 ) :time ( expect-01 :arg0 police :arg1 ( rise-01 :arg1 ( and :op1 turku :op2 helsinki :op3 oulu ) :arg4 ( top :part-of compare-01 ) ) )
give-01 :arg0 i :arg1 ( protect-01 :mod ( good :degree more ) ) :arg2 ( protect-01 :arg1 ( form :mod other :quant many :mod other ) )
steal-01 :arg0 ( part :part-of buy-01 ) :arg1 bicycle :manner ( know-01 :polarity - :arg0 part :arg1 bicycle ) :mod probable
possible-01 :arg1 ( doubt-01 :arg1 ( part :part-of it ) )
and :op1 ( interest :domain ( interest-01 :arg2 ( type :mod olympic ) ) :degree most :time so-far ) :op2 ( open-01 :arg0 ( race :ord ( ordinal-entity ordinal-entity_num_0 ) :part-of day ) :arg1 ( war_name_0 :mod artistic ) ) :op3 ( reach-01 :arg0 ( person :quant ( half :degree almost ) :arg0-of view-01 ) :arg1 ( channel :name ( name :op1 artistic ) ) )
say-01 :arg0 he :arg1 ( bsb :arg0 ( person_name_0 :arg0-of ( have-org-role-91 :arg1 country_name_1 :arg3 ( lead-02 :arg0 person ) ) ) :arg1 ( thing :arg1-of ( design-01 :arg3 ( destroy-01 :arg0 person :arg1 ( tourism :poss country ) ) ) ) :arg1-of ( cause-01 :arg0 ( attack-01 :quant all :location ( area :mod ( person :arg0-of tour-01 ) ) ) ) )
something :time always
way :manner-of ( prevent-01 :arg1 ( kerryttÃ¤isivÃ¤t :arg0 person :arg1 ( person :arg0-of ( have-org-role-91 :arg1 ( power :arg0-of ( depend-01 :polarity - ) ) :arg2 president ) ) :arg2 person ) )
game :mod olympic :domain this :arg0-of ( separate-02 :arg1 i :arg2 other )
win-01 :arg0 ( win-01 :arg1 gold :location ( generation :ord ( ordinal-entity ordinal-entity_num_0 ) :part-of ( type :mod same ) ) ) :arg1 ( cup :mod gold ) :time ( time :arg1-of same-01 )
stir :arg1 it :arg2 scratch :condition ( come-12 :arg1 ( host-01 :arg0 it :arg1 ( -rrb- :arg1-of ( dressing :arg2 dressing ) ) ) )
and :op1 ( reside-01 :arg0 ( person :arg0-of reside-01 :mod perniÃ¶ssÃ¤ ) :arg1 ( market :name ( name :op1 irtokarkkeja :op2 k-city ) ) :manner thursday ) :op2 ( buy-01 :arg0 person :arg1 ( market :name ( name :op1 k-city :op2 k-city ) ) ) :time ( hit-02 :arg0 ( signal-07 :arg1 eye ) :arg1 eye )
remembers :arg0 ( station :mod vetted ) :arg1 woman :arg2 ( thing :arg1-of word-01 )
contrast-01 :arg2 ( want-01 :arg0 we :arg1 ( grow-03 :arg0 we :arg1 ( much :degree too ) ) :arg1-of ( cause-01 :arg0 ( resemble-01 :arg1 ( resemble-01 :arg1 mass :arg2 ( bus :mod huge ) :arg1-of ( control-01 :arg0 ( herd :mod cattle ) ) ) :arg2 mass ) ) )
have-03 :arg0 ( person :mod country_name_0 ) :arg1 ( turnover :mod ( about :op1 num_0 ) ) :time ( year :mod last )
say-01 :arg0 ( thing :arg1-of ( estimate-01 :arg0 ( authority :arg1-of local-02 ) ) ) :arg1 ( possible-01 :arg1 ( organization :arg2-of criminal-03 ) :mod also )
say-01 :arg2 person_name_0
recalls :arg1 book :time ( date-entity decade_date-entity_0 )
learn-01 :arg0 i :arg1 ( impose-01 :polarity - :arg0 ( time :quant all ) :arg1 ( and :op1 total :op2 peak-01 ) )
idea :topic ( depend-01 :polarity - :arg0 ( number :quant-of job ) :arg1 ( number :quant-of ( number :quant-of ( person :arg0-of work-01 ) ) ) :mod still ) :manner ( way :quant many ) :mod still
ensitietoja :arg1 ( develop-02 :arg1 ( market :location estate :mod real ) ) :time already
use-01 :arg1 information :arg2 ( market-01 :arg1-of target-01 :mod client )
contrast-01 :arg1 ( lose-02 :arg0 ( man :arg1-of ( man-01 :polarity - ) :mod ( tech :arg1-of high-02 ) ) :arg1 ( cover-01 :arg0 man :arg1 ( thing :arg2-of ( cover-01 :arg0 ( person :arg0-of ( have-rel-role-91 :arg1 man :arg2 dd1 ) ) :arg1-of quick-02 ) ) ) ) :arg2 ( flame :arg1 ( returns :purpose ( cover-01 :arg1 ( '' :arg1-of soft-02 ) :time ( as-soon-as :op1 ( '' :arg1 lelulta ) ) ) ) )
contrast-01 :arg1 ( possible-01 :arg1 ( long-03 :arg1 hour :arg2 ( temporal-quantity temporal-quantity_num_0 :unit hour ) ) ) :arg2 ( tyÃ¶osuudet :arg1-of activity-06 :time ( before :op1 now :duration ( couple :op1 ( temporal-quantity temporal-quantity_num_1 :unit hour ) :mod only ) ) )
aim-01 :arg1 ( attract-01 :arg0 campaign-01 :arg1 ( person :mod country_name_0 ) :purpose ( start-01 :arg0 person :arg1 ( lights :arg1 ( lights :mod north ) :time early :time early ) ) ) :medium report
hold-04 :arg0 i :arg1 ( and :op1 ( read-01 :arg1 ( and :op1 ( read-01 :arg1 game ) :op2 puruissa :op3 ( support-01 :arg1 ( line :arg0-of run-02 ) ) ) :op2 ( support-01 :arg1 ( line :arg0-of run-02 ) ) :op3 ( support-01 :arg1 ( line :mod gold ) :manner ( win-01 :arg0 and :arg1 ( medal :mod gold ) :location ( medal :ord ( ordinal-entity ordinal-entity_num_0 ) :location ( medal :ord ( ordinal-entity ordinal-entity_num_0 ) ) :location medal ) ) ) ) )
and :op1 ( feel-01 :polarity - :arg0 ( thing :mod this ) :arg1 ( thing :arg0-of ( appall-01 :arg1 that ) ) ) :op2 ( mean-01 :arg1 game :arg2 something :mod really )
multi-sentence :snt1 ( look-01 :arg0 we :arg1 ( and :op1 ( good :domain we ) :op2 ( abet-01 :arg0 we :arg1 race ) ) :mod only :time today ) :snt2 ( and :op1 ( fireworks :arg0 we :arg1 race ) :op2 ( fireworks :arg0 we :arg1 race ) :op3 ( cause-01 :arg1 ( do-02 :arg0 we ) ) )
attend-01 :arg0 ( person_name_0 :arg0-of ( have-org-role-91 :arg2 glover ) ) :time ( month :mod next ) :time ( marry-01 :arg1 person :arg2 ( adventurer :mod tv :mod adventurer ) )
have-concession-91 :arg1 ( thing :arg1-of propose-01 :mod tax-01 ) :arg2 ( find-01 :arg1 ( criticize-01 :arg1 award_name_1 ) )
age-01 :arg1 ( person :arg0-of ( own-01 :arg1 web ) ) :arg2 background
multi-sentence :snt1 ( almodovar-the :arg0 i :arg1 ( film :arg1-of ( include-91 :arg2 ( film :mod particular ) :frequency often ) ) :arg2 humor :frequency often ) :snt2 ( distance-01 :arg1 ( person :arg0-of ( have-org-role-91 :arg2 head-of-state ) ) :mod fair )
accurate :domain almodovar :concession-of ( improve-01 :polarity - :arg0 ( scene :time current :poss ( scene :time current ) ) :arg1 ( improve-01 :arg1 viritelmÃ¤t :mod particular ) )
and :op1 ( sucked :arg1 truck :arg2 ( bend :poss ( kaartuvassa :mod left ) :direction out ) ) :op2 ( crash-01 :arg1 truck :location ( side :part-of ditches ) )
and :op1 josban :op2 juniper :op3 river
be-temporally-at-91 :arg1 ( rate :mod ( inflation :arg1-of average-04 ) :arg1-of average-03 ) :arg2 ( rate-entity-91 :arg1 ( percentage-entity percentage-entity_num_0 ) :arg2 ( temporal-quantity temporal-quantity_num_1 :unit year ) ) :time ( date-interval :op1 ( date-entity decade_date-entity_0 ) :op2 ( date-entity dayperiod_date-entity_1 ) ) :arg1-of ( compare-01 :arg2 ( product-of :op1 ( temporal-quantity temporal-quantity_num_1 :unit month ) :op2 ( temporal-quantity temporal-quantity_num_1 :unit month ) :arg1-of ( compare-01 :arg2 ( name :op1 july :op2 -rrb- :op3 -rrb- ) ) ) )
multi-sentence :snt1 ( create-01 :arg0 ( intelligence :arg1-of ( include-91 :arg2 ( intelligence :mod ( intelligence :mod country_name_0 ) ) :arg3 ( between :op1 num_0 :op2 ( temporal-quantity temporal-quantity_num_0 :unit year ) ) ) ) :arg1 ( and :op1 ( isolate-01 :arg1 force ) :op2 ( isolate-01 :arg1 force :degree too ) ) ) :snt2 ( say-01 :arg0 ( democrat :arg0-of lead-01 :poss committee ) :medium statement )
multi-sentence :snt1 ( day :time ( after :op1 ( make-01 :arg1 ( goal :quant num_0 ) :location ( triumph :poss team :location ( country_name_0 :mod country_name_2 ) ) ) ) :time ( day :mod ( after :op1 ( make-01 :arg1 ( goal :quant num_0 ) :location ( triumph :poss team ) ) ) ) ) :snt2 ( goal :quant num_3 :ord ( ordinal-entity ordinal-entity_num_0 ) :poss ( team :name ( name :op1 ' :op2 num_3 :op3 num_3 :op4 num_3 :op5 num_3 :op6 num_3 :op7 num_3 ) ) )
and :op1 ( appoint-01 :arg1 ( person :mod country_name_0 :mod country_name_1 ) :arg2 ( coach :mod new :mod head ) :time ( year :arg1-of follow-01 ) ) :op2 ( begin-01 :arg1 ( change-01 :arg1 thing ) )
oppose-01 :arg0 ( person :source ( north :part-of north ) :mod north ) :arg1 ( person :source ( north :part-of north ) )
use-01 :arg1 trumps :time past
contrast-01 :arg2 ( believe-01 :arg0 i :arg1 ( and :op1 ( know-01 :arg0 i :arg1 ( know-01 :arg0 he :arg1 ( thing :arg1-of ( opine-01 :arg0 it ) ) ) ) :op2 ( know-01 :arg0 i :arg1 ( vague :domain they :arg1-of ( cause-01 :arg0 ( possible-01 :arg1 ( equate-01 :arg1 they :arg2 ( lenses :mod altogether ) ) ) ) ) ) ) :mod also )
and :op1 ( start-01 :arg0 he :arg1 ( verb :quant num_0 ) ) :op2 ( be-located-at-91 :arg1 he :arg2 there :time ( until :op1 end-01 ) )
taste :arg1 fire :mod historic :domain ( concept :mod square )
come-04 :arg1 it :arg2 ( incident :mod ( hat :mod wind ) )
have-concession-91 :arg2 ( and :op1 ( hiding :arg1 ( trumps :mod donald ) :arg2 ( behind :op1 ( pretexts :mod false ) ) ) :op2 ( publish-01 :arg1 ( thing :arg1-of ( publish-01 :time previous ) :arg1-of ( publish-01 :time previous ) ) ) )
multi-sentence :snt1 ( and :op1 ( continue-01 :arg1 ( compete-01 :arg0 woman :arg1-of equal-01 ) ) :op2 ( end-01 :arg1 ( and :op1 trott :op2 ( trott :name ( name :op1 laura ) ) :op3 ( shand :name ( name :op1 rowsell ) ) :op4 ( shand :name ( name :op1 rowsell ) ) :op5 ( shand :name ( name :op1 rowsell ) ) :op6 ( shand :name ( name :op1 rowsell ) ) :op6 ( katie :name ( name :op1 rowsell ) ) :op6 ( katie :name ( name :op1 rowsell ) ) :op6 ( katie :name ( name :op1 rowsell ) ) :op7 ( katie :name ( name :op1 archibald :op2 archibald ) ) ) ) ) :snt2 ( stop-01 :arg0 ( person :mod stage ) :arg1 ( time :mod record ) )
tell-01 :arg0 ( person_name_0 :arg0-of ( have-org-role-91 :arg2 ( director :mod executive ) ) ) :arg1 ( tell-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg2 ( director :mod executive ) ) ) :arg1 ( and :op1 ( electricity :quant ( about :op1 num_0 ) ) :op2 ( electricity :quant ( about :op1 num_1 ) ) ) ) :arg2 ( person :arg0-of analyze-01 ) :time ( week :mod past ) :subevent-of agl
model :domain he :prep-for ( jacobs :mod marc )
lose-02 :arg0 ( person :quant ( number :mod this ) :arg1-of legal-02 ) :arg1 ( fund-01 :arg0 federal :quant ( percentage-entity :value num_0 ) ) :time ( year :mod next ) :arg1-of legal-02
selection :arg1 ( person :quant many :arg2-of ( include-01 :arg1 ( heathrow :mod heathrow ) ) ) :arg2 ( few :op1 ( temporal-quantity temporal-quantity_num_0 :unit month ) :mod ( just :polarity - ) )
claim-01 :arg0 magazine_name_0 :arg1 ( worry-01 :arg1 ( filter :mod new :mod adblockin ) :arg1-of ( cause-01 :arg0 ( prevent-01 :arg0 they :arg1 ( portion :part-of ( site :mod other ) ) ) ) ) :medium ( url-entity :value thursday )
contrast-01 :arg1 ( try-01 :arg1 ( enter-01 :arg0 ( person :quant number :arg0-of drive-01 ) :arg1 enter-01 :time already ) ) :arg2 ( tell-01 :arg1 ( and :op1 ( appeal-02 :arg0 all :arg2 ( person :arg0-of ( witness-01 :arg1 incident ) :arg0-of ( witness-01 :arg1 incident ) ) ) :op2 ( come-01 :arg1 person :direction forward ) ) :arg2 police )
multi-sentence :snt1 ( cause-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg1 police :arg2 negligence ) ) :arg1 ( die-01 :arg1 person ) :time ( year :mod last ) ) :snt2 ( cause-01 :arg0 ( negligence :arg0 ( negligence :poss ( person :arg0-of ( have-rel-role-91 :arg2 negligence ) ) :time ( after :op1 ( hit-02 :arg0 person :arg1 ( kill-01 :arg0 person :arg1 man ) :time ( after :op1 ( kill-01 :arg0 person :arg1 man :time ( after :op1 ( kill-01 :arg0 person :arg1 man ) ) ) ) ) ) ) ) :arg1 ( night :quant num_0 ) :time ( after :op1 now :quant ( num_1 :op1 num_1 ) ) )
multi-sentence :snt1 ( contrast-01 :arg2 ( refer-01 :arg0 ( simulation :quant most ) :arg1 ( fact :topic ( possible-01 :arg1 ( thin-03 :arg1 venuksella ) ) ) ) ) :snt2 ( possible-01 :arg1 ( rotating :arg1 ( atmosphere :mod terrestrial ) :mod still ) )
refer-01 :arg0 ( and :op1 ( person :arg0-of ( have-rel-role-91 :arg1 victim :arg2 brother ) ) :op2 ( channel :name ( name :op1 san ) ) :op3 ( channel :name ( name :op1 san ) ) :op4 ( channel :name ( name :op1 san ) ) :op5 ( channel :name ( name :op1 san ) ) :op6 ( channel :name ( name :op1 san ) ) :op6 ( channel :name ( name :op1 san ) ) :op6 ( channel :name ( name :op1 san ) ) :op6 ( channel :name ( name :op1 san ) ) :op6 ( channel :name ( name :op1 san ) ) :op6 ( channel :name ( name :op1 san ) ) :op6 ( channel :name ( name :op1 san ) ) :op6 ( channel :name ( name :op1 san ) ) :op6 ( channel :name ( name :op1 san ) ) :op6 ( channel :name ( name :op1 san ) ) :op6 ( channel :name ( name :op1 san ) ) :op6 ( channel :name ( name :op1 san ) ) :op6 ( channel :name ( name :op1 san ) ) :op7 ( person :arg0-of ( have-rel-role-91 :arg1 victim :arg2 child ) ) ) :arg1 ( accident :arg1-of ( dream-01 :arg0 he ) ) :time ( before :op1 now :quant ( temporal-quantity temporal-quantity_num_1 :unit month ) )
contrast-01 :arg2 ( say-01 :arg0 ( thing :arg1-of report-01 ) :arg1 ( and :op1 ( speak-01 :arg0 ( person :arg0-of ( speak-01 :arg1 ( lose-02 :arg0 person :arg1 ( putin :name ( name :op1 ' ) ) ) ) ) :frequency ( rate-entity-91 :arg2 ( temporal-quantity temporal-quantity_num_0 :unit day ) ) ) :op2 ( say-01 :arg0 report-01 ) ) )
multi-sentence :snt1 ( cause-01 :arg1 ( allow-01 :arg0 ( meet-03 :mod this :location coast ) :arg1 ( and :op1 ( russia :arg0 ( and :op1 ( person :arg0-of ( have-org-role-91 :arg1 country_name_0 ) ) :op2 ( presentation :poss ( unify-01 :arg1 country_name_1 :arg2 non-turkish ) ) ) :arg1 ( presentation :poss ( unify-01 :arg1 country :arg2 non-turkish ) ) ) :op2 ( presentation :poss ( unify-01 :arg1 country :arg2 non-turkish ) ) ) ) ) :snt2 ( feel-02 :arg0 ( country :quant num_0 ) :arg1 ( feel-02 :arg0 ( country :quant num_0 ) :arg1 ( and :op1 ( treat-03 :arg1 country ) :op2 ( mistreating :arg0 country :arg1 force ) ) ) )
lose-03 :arg0 ( bank :mod royal :part-of country_name_0 ) :location ( outside :op1 country )
use-01 :arg0 ( strategy :poss bank ) :arg1 ( body :mod rb2 :part-of ( kind :mod this ) ) :arg2 ( protect-01 :arg0 body :arg1 ( finance-01 :arg1 ( person :arg0-of consume-01 :mod other ) ) )
contrast-01 :arg1 ( and :op1 ( elegant :domain he ) :op2 ( strong-02 :arg1 he ) ) :arg2 ( attitude :mod tactical :poss he :domain he :location ( room :mod mental :mod other ) )
and :op1 ( differ-01 :arg2 ( thing :arg2-of view-01 ) ) :op2 ( thing :arg2-of ( position-01 :arg1 ( thing :arg1-of view-01 ) ) ) :mod creative
cause-01 :arg0 ( permit-01 :arg0 ( permit-01 :arg1 ( permit-01 :arg1 ( work-01 :arg0 team ) ) ) :mod minimum :mod only :location ( direction :mod both ) ) :arg1 ( factor :arg0-of demand-01 )
postponed :domain ( presence :poss ( game :location ( country :mod other ) ) ) :arg1-of ( cause-01 :arg0 ( overseeing :arg0 ( server :poss server ) :arg1 game ) ) :time subsequent
contrast-01 :arg2 ( result-01 :arg1 ( disruption :mod country_name_0 ) :arg2 ( disruption :arg0 ( person :arg0-of ( have-rel-role-91 :arg1 she :arg2 mother ) ) :arg1 ( person :arg0-of ( have-rel-role-91 :arg1 person :arg2 mother ) ) :manner heavy ) :arg1-of ( resemble-01 :polarity - :arg2 ( part :mod large :part-of ( age :poss person ) ) ) )
facilitated :domain situation
valid-02 :arg1 ( flooding :mod this ) :time ( until :op1 ( majority :arg1 ( majority :poss country_name_0 ) ) )
say-01 :arg0 ( person_name_0 :arg0-of ( have-org-role-91 :arg1 controller ) ) :arg1 ( possible-01 :arg1 ( flood :arg0 ( person :mod both ) :arg1 ( house :quant number :location ( area :mod suburban :arg1-of ( close-10 :arg2 ( rougen :mod baton ) ) ) ) ) )
say-01 :arg0 ( person_name_0 :arg0-of ( have-org-role-91 :arg2 ( chair :mod ground ) ) ) :arg1 ( rescued :arg0 ( and :op1 authority :op2 ( person :arg1-of ( islanded :arg0 water ) ) ) :arg1 ( person :quant num_0 ) )
wonderful-03 :arg1 that
say-01 :arg0 ( person_name_0 :prep-on ( ground :location-of ( campaign-01 :arg1 elect-01 :arg0-of lead-01 ) ) ) :arg1 ( obligate-01 :arg1 ( person :mod religious-group_name_1 :mod religious-group_name_1 :mod religious-group ) :arg2 ( vote-01 :arg0 person :arg1 person ) )
contrast-01 )
consult-01 :mode imperative :arg0 you :arg1 ( person :arg0-of ( coloured :arg1 ( person :mod young :arg0-of ( have-rel-role-91 :arg1 person :arg2 child ) ) ) :arg0-of ( have-rel-role-91 :arg1 person :arg2 child ) ) :arg0-of ( cause-01 :arg1 ( consult-01 :arg0 person :arg1 ( person :mod young :arg0-of ( have-rel-role-91 :arg1 person :arg2 child ) ) ) )
request-01 :arg0 ( person :mod country_name_0 ) :arg1 ( forgive :arg0 person :arg1 ( time :quant ( more-than :op1 num_0 ) :arg0-of ( ignore-01 :arg1 ( thing :arg1-of comment-01 ) ) ) )
say-01 :arg0 ( person_name_0 :arg0-of ( have-rel-role-91 :arg1 ( person :quant num_0 :arg0-of ( have-rel-role-91 :arg1 child :arg2 child ) ) :arg2 mother ) ) :arg1 ( and :op1 ( drop-05 :arg1 ( person :arg0-of ( have-rel-role-91 :arg1 woman :arg2 mother ) ) :mod again ) :op2 ( walk-01 :arg0 person :direction away :manner ( buy-01 :polarity - :arg0 woman :arg1 anything ) ) :time ( after :op1 ( argue-02 :arg0 person :arg1 ( woman :mod secret ) :arg2 ( woman :mod secret ) ) ) ) :time ( time :arg1-of same-01 )
try-01 :polarity - :arg0 she :arg1 ( find-01 :arg0 she :arg1 ( place :mod university ) :arg1-of ( cause-01 :arg0 ( standing :mod simple ) :manner simple ) ) :mod at-least
(-(
speak-01 :arg0 we :arg1 ( york :mod new :arg0-of ( mizrachi :arg1 ( federation :mod krav :mod krav ) :purpose ( find-out-03 :arg0 we :arg1 ( thing :manner-of ( deal-01 :arg0 ( person :arg0-of ( withdraw-01 :arg1 robbers ) ) :arg2 neighbourhood ) ) ) ) )
and :op1 ( set-01 :arg0 ( trip-03 :arg0 country_name_0 ) :arg1 ( system :name ( name :op1 immune ) :poss country ) :arg2 ( system :name ( name :op1 immune ) :poss country ) ) :op2 ( challenge-01 :arg0 trip-03 :arg1 ( system :name ( name :op1 immune ) :poss country ) :manner serious ) :op3 ( challenge-01 :arg0 trip-03 :arg1 ( and :op1 ( system :name ( name :op1 immune ) :arg1-of ( direct-02 :degree most ) ) :op2 ( seat :arg1-of ( include-91 :arg2 ( seat :arg1-of ( direct-02 :arg1-of ( direct-02 :degree most ) ) ) ) :quant some ) ) )
and :op1 ( combine-01 :arg1 ( person :arg0-of ( have-org-role-91 :arg2 activist ) :arg1-of ( include-91 :arg2 ( person :arg0-of ( have-org-role-91 :arg2 activist ) :arg1-of land-01 ) :arg3 ( percentage-entity percentage-entity_num_0 ) ) ) :arg2 ( prosper-01 :arg0 ( activist :arg0-of ( have-org-role-91 :arg1 dairy ) ) ) ) :op2 ( say-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg2 activist ) :arg1-of ( include-91 :arg2 ( person :arg0-of ( have-org-role-91 :arg2 activist ) :arg1-of land-01 ) :arg3 ( percentage-entity percentage-entity_num_3 ) ) ) :arg1 ( and :op1 ( prosper-01 :arg0 ( activist :arg0-of ( have-org-role-91 :arg1 dairy ) ) ) :op2 ( welfare :mod intensive ) ) ) :op3 ( say-01 :arg0 ( person :quant ( percentage-entity percentage-entity_num_3 ) :arg0-of ( use-01 :arg1 ( access-01 :arg1 methamphetamine ) ) ) :arg1 person :mod at-least )
(-(
and :op1 ( come-up-11 :arg0 police :arg1 ( raid-01 :arg1 raid-01 ) ) :op2 ( find-01 :arg0 police :arg1 ( and :op1 ( person :quant ( more-than :op1 num_1 ) ) :op2 ( person :quant ( more-than :op1 num_1 ) ) :op3 ( person :quant ( more-than :op1 num_1 ) ) :op4 ( person :quant ( more-than :op1 num_1 ) ) :op5 et-cetera ) )
result-01 :arg1 ( externation :mod externation ) :arg2 ( product-of :op1 ( temporal-quantity temporal-quantity_num_0 :unit month ) :op2 ( temporal-quantity temporal-quantity_num_1 :unit month ) )
allocate-01 :arg1 ( activity-06 :arg0 ( police :mod everyday ) ) :arg2 ( location :location-of ( need-01 :arg1 activity-06 :degree most ) ) :path ( information :arg1-of ( compile-01 :arg0 service ) )
intelligence :location ( outside :op1 region )
say-01 :arg1 ( and :op1 ( woman :quant num_0 :mod young ) :op2 ( woman :quant num_1 :mod young ) :op3 ( man :quant num_1 :mod middle-aged ) ) :arg2 ( person :arg0-of ( have-rel-role-91 :arg2 sister ) ) :arg1-of ( follow-01 :arg2 ( person :arg0-of ( have-rel-role-91 :arg1 person :arg2 sister ) ) )
have-03 :arg0 we :arg1 ( person :arg0-of ( say-01 :arg1 ( have-03 :polarity - :arg0 i :arg1 meltager ) ) )
and :op1 ( come-01 :arg1 it ) :op2 ( surprise-01 :arg0 ( likely-01 :arg1 ( use-01 :arg0 ( section :arg1-of ( include-91 :arg2 population ) ) :arg1 ( thing :quant num_0 :arg0-of ( use-01 :arg1 ( game :mod luxury :example minels ) ) ) :degree more ) ) )
notice-01 :arg0 we :arg1 ( thing :arg2-of ( price-01 :arg1 ( thing :arg2-of price-01 :arg2-of ( price-01 :arg1 ( thing :arg2-of ( price-01 :arg1 ( thing :arg2-of ( price-01 :arg1 ( thing :arg2-of price-01 ) ) ) ) ) ) ) ) )
prove-01 :arg0 ( shark :arg1-of average-03 ) :arg1 ( at-least :op1 ( temporal-quantity temporal-quantity_num_0 :unit year ) :mod at-least )
explain-01 :arg0 message :arg1 ( thing :arg2-of ( base-02 :arg1 ( act-02 :arg1-of ( inform-01 :arg0 ( police :arg1-of ( inform-01 :arg0 police :arg2 ( city :quant num_0 :mod ( big :degree most ) :arg1-of ( include-91 :arg2 ( city :quant num_0 :mod ( big :degree most ) ) ) ) ) ) ) ) ) ) :time ( year :mod this ) :time ( year :mod this ) :location ( thing :arg1-of ( base-02 :arg2 ( act-02 :arg1-of ( inform-01 :arg0 police ) ) ) )
difficult :degree extreme :domain ( say-01 :arg1 ( steal-01 :arg1 ( thing :arg0-of ( cause-01 :arg1 ( steal-01 :location ( turkey :location elsewhere ) ) ) ) ) ) :degree extreme
base-02 :arg1 ( good :domain that ) :arg2 ( and :op1 ( temporal-quantity temporal-quantity_num_0 :unit hour ) :op2 ( temporal-quantity temporal-quantity_num_2 :unit hour ) :op3 ( rate-entity-91 :arg1 num_1 :arg2 num_1 :arg3 num_1 ) ) :time ( come-01 :arg1 it :arg3 ( temporal-quantity temporal-quantity_num_2 :unit hour ) :arg4 ( and :op1 ( temporal-quantity temporal-quantity_num_2 :unit hour ) :op2 ( temporal-quantity temporal-quantity_num_2 :unit hour ) :op3 ( rate-entity-91 :arg1 num_1 :arg2 num_1 ) ) )
tax-01 :arg2 ( tax-01 :arg3 tax )
see-01 :arg0 embassy :arg1 ( finns :location ( hua :mod particular ) :purpose ( obtain-01 :arg1 ( information :topic ( situation :location city ) ) ) )
say-01 :arg0 he :arg1 ( recommend-01 :arg1 ( fuel :polarity - :arg0 we :arg1 ( person :mod fuel ) :degree more ) )
win-01 :frequency num_0 :arg0 she :time ( between :op1 ( time :mod last ) :op2 ( year :mod last ) ) :frequency ( rate-entity-91 :arg1 num_0 :arg2 ( temporal-quantity temporal-quantity_num_0 :unit year ) )
and :op1 tsunami :op2 ( bomb-01 :time ( year :mod last ) :location bangkok ) :time then
say-01 :arg0 ( newspaper_name_0 :mod brazilian ) :arg1 ( take-01 :arg0 ( officer :mod country_name_1 ) :arg1 ( corps :mod international :mod country ) :arg3 ( appeal-02 :arg0 officer :arg2 ( court :mod international ) ) )
think-01 :arg0 he :arg1 ( point :polarity - :domain that )
argue-01 :arg1 ( prevent-01 :arg0 this :arg1 infect-01 )
explain-01 :li num_0 :arg1 ( possible-01 :arg1 ( live-01 :arg0 ( person :mod ambitious ) :manner ( way :arg0-of ( bring-up-02 :arg1 ( life :poss person ) :duration ( temporal-quantity temporal-quantity_num_0 :unit year :mod further ) ) ) ) )
multi-sentence :snt1 ( regretted :arg0 ( damage-01 :arg1 ( service :mod ( business :mod mail ) ) ) :arg1 ( operate-01 :arg1 ( service :mod business :mod mail ) ) ) :snt2 ( sanom :mode expressive )
hope-01 :arg0 ( family :arg1-of ( have-org-role-91 :arg0 woman :arg2 member ) ) :arg1 ( remember-01 :arg0 family :arg1 victim :arg1-of ( instead-of-91 :arg2 ( and :op1 flower :op2 ( adresions :arg1 ( work-01 :arg0 police ) ) ) ) ) :time ( before :op1 now :quant ( temporal-quantity temporal-quantity_num_0 :unit week ) )
have-rel-role-91 :arg0 that :arg1 that :arg2 ( friend :mod good )
contrast-01 :arg1 ( possible-01 :arg1 ( model :mod little :domain i ) ) :arg2 ( possible-01 :arg1 ( maintain-01 :arg0 we :arg1 ( spirit :mod flow-01 ) ) :time ( time :arg1-of same-01 ) )
face-01 :arg0 ( person :quant num_0 ) :arg1 ( situation :mod overall )
shock-01 :arg1 ( person :mod economy ) :time ( voice :poss person )
behave-01 :arg0 ( room :mod indigenous :quant amr-unknown ) :condition ( cut-back-05 :arg0 they )
build-01 :arg1 ( building :arg0-of ( fund-01 :arg1 aberdeen ) )
increase-01 :arg0 we :arg1 ( fund :arg1-of increase-01 )
and :op1 ( number :arg1-of ( include-91 :arg2 ( thing :quant num_0 :arg1-of ( fund-01 :arg0 property ) ) ) :domain this :arg1-of ( high-02 :degree most ) ) :op2 ( say-01 :arg0 i :arg1 ( fund-01 :arg0 ( building :arg1-of ( fund-01 :arg0 ( property :mod country_name_0 ) ) :quant all ) :arg1 ( thing :arg2-of ( fund-01 :arg1 property ) ) ) )
live-01 :arg0 ( city :arg1-of moral-02 ) :arg1-of complete-02 :time already :concession moral-02
cause-01 :polarity - :arg0 ( finalize-01 :arg1 ( thing :arg2-of ( fund-01 :arg1 ( property :mod country_name_0 :mod ( big :degree most ) :location country_name_2 ) ) ) ) :arg1 ( finalize-01 :arg1 ( thing :arg1-of ( fund-01 :arg0 ( trade-01 :arg1 ( build-01 :arg1 ( trade-01 :quant num_1 :arg1 building ) ) ) ) ) :time day )
say-01
sunti :arg1 ( and :op1 ( person :arg0-of ( have-org-role-91 :arg1 police :arg2 ( person :arg1-of expert-01 ) ) ) :op2 ( person :arg0-of ( have-org-role-91 :arg1 ( force :mod military ) :arg2 ( person :arg1-of expert-01 ) ) ) ) :arg2 ( heorla :mod mrs ) :mod also
possible-01 :arg1 ( see-01 :arg1 ( heila :mod heila ) :time ( after :op1 now :duration ( temporal-quantity temporal-quantity_num_0 :unit year ) ) :condition ( plan-01 :arg1 everything :arg1-of ( conform-01 :arg2 ( thing :arg1-of plan-01 ) ) ) )
contrast-01
recommend-01 :arg1 ( collect-01 :polarity - :arg0 we :arg1 ( rate-entity-91 :arg1 ( under :op1 num_0 ) :arg2 ( temporal-quantity temporal-quantity_num_0 :unit year ) ) ) :arg2 we
true :domain this :mod particular :arg1-of ( cause-01 :arg0 ( and :op1 ( rotation :source ( sector :quant num_0 ) ) :op2 ( equal-01 :arg1 ( sector :source ( sector :quant num_0 ) ) :arg2 ( equal-01 :arg1 sector ) ) ) )
base-02 :arg1 ( person :quant num_0 :arg0-of sing-01 ) :arg2 ( person :arg0-of sing-01 )
and :op1 ( increase-01 :arg1 ( hand :part-of we ) :arg2 ( middle :part-of ( term :mod parliament ) ) :ord ( ordinal-entity ordinal-entity_num_0 ) ) :op2 ( recognize-02 :arg0 i :arg1 ( possible-01 :polarity - :arg1 ( comply-01 :arg0 ( government-organization :arg0-of govern-01 ) :arg1 ( programme :arg0 government-organization ) ) ) ) :ord ( ordinal-entity ordinal-entity_num_0 )
reject-01 :arg1 ( debt-friendliness :arg1-of ( propose-01 :arg0 left ) ) :arg1-of ( cause-01 :arg0 ( consider-01 :arg1 ( consider-02 :polarity - :arg1 it ) ) )
understand-01 :arg0 ( and :op1 meet-03 :op2 meet-03 :op3 ( person :mod fundamental :arg0-of responsible-01 ) ) :arg1 that
bring-01 :arg0 ( blow-14 :arg1 ( person :arg0-of drive-01 ) ) :arg1 ( person :quant num_0 :arg0-of drive-01 )
investigate-01 :arg1 case-03 :arg2 ( threaten-01 :arg1 ( safe-01 :arg1 road ) :arg1-of reasonable-02 ) :prep-in particular
mention-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg1 ( association :mod parafesty ) :arg2 chairman ) ) :arg1 ( and :op1 ( access-01 :arg1 festival :manner finance ) :op2 ( possible-01 :arg1 ( hold-04 :arg1 event :time ( year :arg1-of come-01 ) ) ) )
see-01 :arg0 study-01 :arg1 ( enough :mod small :domain ( pass-01 :arg1 ( skin :part-of skin ) ) )
change-01 :arg0 family :arg1 ( anniversary :poss year ) :manner helsinki
cause-01 :arg0 ( be-located-at-91 :arg1 ( adult :quant series ) :arg2 ( often :degree very ) :frequency ( often :degree very ) ) :arg1 ( fine-04 :arg1 ( play-01 :arg1 ( tunnel :mod hasu ) ) )
and :op1 ( involve-01 :arg1 ( family :quant all :arg0-of ( have-rel-role-91 :arg1 ( company :mod team ) :arg2 father ) ) :arg1-of strong-02 ) :op2 ( president-in-office :arg1 ( person :arg0-of ( have-rel-role-91 :arg1 ( company :mod team ) :arg2 mother ) ) :arg1-of long-03 )
volley :arg0 ( hasul :mod essÃ© ) :arg1 species :arg1-of natural-03 :time past
allow-01 :arg0 ( line :mod work-01 :poss it ) :arg1 ( use-01 :arg0 ( person :arg0-of use-01 :mod day :quant ( approximately :op1 num_0 ) ) :arg1 ( person :arg0-of use-01 :mod day ) :arg2 ( way :instrument-of ( and :op1 ( reality :mod modifying ) :op2 identity ) :manner ( way :mod ( laughable :mod almost ) ) ) ) :manner ( line :mod work-01 :poss it )
and :op1 ( positive :domain ( and :op1 ( releases :mod press ) :op2 ( thing :arg1-of opine-01 ) :quant many ) ) :op2 ( positive :domain ( and :op1 ( thing :arg1-of opine-01 ) :op2 ( thing :arg1-of opine-01 ) :op3 ( thing :arg1-of opine-01 ) ) :degree ( more :degree much ) :compared-to ( event :time event ) )
know-01 :arg0 he :arg1 ( and :op1 ( be-located-at-91 :arg1 ( person :mod country_name_0 ) :arg2 ( between :op1 ( situation :quant num_0 ) :op2 ( situation :poss person ) ) ) :op2 ( share-01 :arg0 person :arg1 ( place :ord ( ordinal-entity ordinal-entity_num_1 ) :poss ( group :poss person :prep-with ( country :arg0-of ( have-03 :arg1 blessing :time ( after :op1 ( overcome-01 :arg0 person :arg1 ( and :op1 ( person :mod country_name_1 ) :op2 ( person :mod country ) :op3 country ) ) :mod still ) ) ) ) ) ) )
species :domain this :arg1-of ( cause-01 :arg0 ( possible-01 :polarity - :arg1 ( accept-01 :arg0 ( everyone :mod this ) :arg1 ( and :op1 tolls :op2 dissent-01 :op3 calculation :op4 et-cetera ) :mod universal ) ) ) :mod ( further :op1 ( point :mod treaty_name_0 ) )
contrast-01 :arg2 ( possible-01 :arg1 ( change-01 :arg1 that ) )
say-01 :arg0 ( person :arg0-of analyze-01 ) :arg1 ( put-01 :arg0 demonstrate-01 :arg1 ( and :op1 country_name_0 :op2 ( west :part-of country ) ) :arg2 ( position :mod clumsy ) )
be-located-at-91 :arg1 rice :arg2 there
say-01 :arg0 couple :arg1 ( gain-02 :arg0 couple :arg1 ( understand-01 :arg1 ( holder :arg0-of ( eat-01 :arg1 ( person :arg0-of ( have-rel-role-91 :arg2 mother ) ) ) :arg0-of ( exemplify-01 :arg1 ( possible-01 :polarity - :arg1 ( let-down-04 :arg0 person :arg1 food ) ) ) :mod ( good :degree more ) ) ) ) :medium ( write-01 :arg0 couple :arg1 book )
raise-01 :arg0 he :arg1 problem :arg2 ( adjust-01 :arg0 he :arg1 ( economy :poss he ) :location michigan )
offer-01 :arg0 ( person :mod country_name_0 ) :arg1 ( opportunity :purpose ( play-11 :arg0 person :arg2 country_name_1 :path ( centre :mod telephone :poss person ) ) ) :arg1-of contrary-01
say-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg1 ( glaswoglane :name ( name :op1 23-year-old ) ) :arg2 skinner ) ) :arg1 ( flattery :domain ( compare-01 :arg1 ' ) )
overcome-01 :arg1 it :instrument floor
contrast-01 :arg1 ( medal-competition :domain this :mod only :duration day ) :arg2 ( news :mod ( good :degree more ) :beneficiary country_name_0 :domain this )
and :op1 ( resembles :arg0 ( thread :mod this ) :arg1 ( coffee :quant more :arg1-of ( include-91 :arg2 ( coffee :mod coffee ) ) ) ) :op2 ( attract-01 :arg0 thread :arg1 ( number :mod enormous :quant ( number :mod enormous ) :arg1-of ( -rrb- :time ( year :mod last ) ) ) )
and :op2 ( start-01 :arg0 television :arg1 ( see-01 :arg0 he :arg1 ( and :op1 kourtyye :op2 ( child :mod this ) ) :mod only ) :time ( time :mod leisure ) )
die-01 :arg1 he :location site
burn-01 :arg1 ( water :arg1-of ( burn-01 :arg0 ( ocean :name ( name :op1 ultraviolet :op2 light :op3 light :op4 light :op5 light ) ) ) )
say-01 :arg0 ( person_name_0 :arg0-of ( have-org-role-91 :arg2 ( minister :mod health ) ) ) :arg1 ( superior-01 :arg1 agreement :arg2 ( doctor :mod country ) ) :time ( after :op1 vote-01 )
relieved :arg1 ( and :op1 ( company :arg0-of ( operate-01 :arg1-of local-02 ) ) :op2 ( company :mod charter :mod charter ) ) :time ( continue-01 :arg1 fly-01 :time eventual ) :mod definite
contrast-01 :arg1 ( issue-02 :arg1-of key-02 :domain ( issue-02 :arg1-of key-02 ) ) :arg2 ( reconciled :arg0 ( person :mod country_name_0 ) :arg1 person :arg2 ( role :mod peacemaker ) :time recent :arg1-of ( contrast-01 :arg2 ( support-01 :arg0 person :arg1 ( side :arg0-of oppose-01 :arg0-of support-01 ) ) ) )
cite-01 :arg0 he :arg1 ( person :quant num_0 :arg1-of ( include-91 :arg2 ( person :quant num_1 :arg1-of ( trust-01 :arg0 he :arg1-of ( trust-01 :arg0 he ) ) ) ) ) :time ( rise-01 :arg1 putin :arg4 power )
contrast-01 :arg2 ( go-08 :arg1 everything :arg2 good ) :arg2-of fortunate-01
multi-sentence :snt1 ( explain-01 :mode interrogative :arg0 ( person :arg0-of play-01 ) :arg1 ( use-01 :arg0 person :arg1 Ã¤lypuhelimiaan ) :time ( look-01 :arg0 person :arg1 ( pokÃ©mon :arg1-of ( tracked :arg0 gps ) ) ) ) :snt2 ( and :op1 ( -rrb- :mode interrogative :mod phone ) :op2 ( -rrb- :mod phone ) )
and :op2 ( know-01 :polarity - :arg0 he :mod still )
attack-01 :arg0 ( attack-01 :arg1-of ( come-01 :arg3 ( weapon :mod altogether ) ) :arg1-of ( come-01 :arg3 ( weapon :mod altogether ) ) ) :arg1 ( place :location-of event )
and :op1 ( receive-01 :arg0 ( person :arg0-of ( receive-01 :arg1 ( scene :quant num_0 ) :time already ) ) :arg1 ( scene :quant num_0 ) :time already ) :op2 ( risk-01 :arg2 ( get-01 :arg1 another ) )
recommend-01 :arg1 ( develop-02 :arg0 we :arg1 ( ticagreloria :mod preliminary ) :purpose ( possible-01 :arg1 ( increase-01 :arg0 we :arg1 ( option :mod ( treat-03 :arg1 we :arg2 person ) ) :purpose ( possible-01 :arg1 ( increase-01 :arg0 we :arg1 ( option :mod treat-03 :arg2-of ( available-02 :arg1 person ) :arg1-of ( useful-05 :arg2 person :mod potential ) ) ) ) ) ) )
set-02 :arg0 ( set :duration ( temporal-quantity temporal-quantity_num_0 :unit year ) ) :arg1 ( request-01 :arg1 ( mail :mod automatic ) ) :arg2 vote-01
multi-sentence :snt1 ( amr-unknown
allow-01 :arg0 this :arg1 ( defend-01 :arg0 you :arg1 ( attack-01 :arg1-of arm-01 ) )
multi-sentence :snt1 ( say-01 :arg0 he :arg1 ( thing :arg1-of ( say-01 :arg0 he ) ) ) :snt2 ( and :op1 ( kid :domain i :topic ( health :poss i ) :degree pretty ) :op2 ( put-01 :arg0 i :arg1 ( mouth :part-of i ) :arg2 ( mouth :part-of i ) :manner ( kind :mod all ) ) :op3 ( kuraisesta :arg0 i :arg1 water ) )
see-01 :arg0 we :arg1 police :location here :frequency ( many :degree incredible )
cause-01 :arg0 ( quiet :polarity - :arg1 we :degree so ) :arg1 ( get-05 :arg1 we :arg2 up )
phone-number-entity phone-number-entity_num_0
destroy-01 :arg1 ( part :part-of ( mainland :part-of country_name_0 ) ) :time ( summer :mod this ) :arg1-of ( cause-01 :arg0 ( and :op1 ( destroy-01 :arg0 ( mainland :part-of ( mainland :part-of country_name_2 ) ) :arg1 ( person :quant num_0 :arg1-of die-01 ) ) :op2 ( die-01 :arg1 island ) ) )
use-01 :arg1 ( and :op1 shortened :op2 measure-02 ) :arg2 ( purchase-01 :arg1 ( person :arg0-of ( have-rel-role-91 :arg2 patient ) ) ) :arg1-of possible-01
put-01 :arg0 authors :arg1 ( door :mod apartment ) :arg2 ( or :op1 stick :op2 pin :op3 piece ) :arg1-of ( cause-01 :arg0 ( experimenting :arg1 ( person :arg0-of reside-01 ) :mod actual ) ) :location here
block-01 :arg0 organization_name_0 :arg1 ( confirmation :poss ( person_name_1 :arg0-of ( have-org-role-91 :arg2 president ) ) ) :time ( since :op1 ( appoint-01 :arg0 ( person_name_1 :arg0-of ( have-org-role-91 :arg2 president ) ) :arg1 person :arg2 marched ) )
say-01 :arg0 ( person :arg0-of ( represent-01 :arg1 ( person :arg0-of represent-01 ) ) ) :arg1 ( and :op1 ( speak-01 :polarity - :arg0 person :arg2 person_name_0 :arg1-of direct-02 ) :op2 ( speculate-01 :arg1 person ) ) :time ( late :degree more )
love-01 :arg0 ( man :mod middle-aged ) :arg1 vinyl
multi-sentence :snt1 ( have-03 :arg0 we :arg1 ( person :arg0-of ( say-01 :arg1 ( person :arg0-of ( say-01 :arg1 say-01 ) ) ) ) ) :snt2 ( have-03 :arg0 i :arg1 ( thing :mod record ) )
multi-sentence :snt1 ( contrast-01 :arg2 ( possible-01 :arg1 ( mean-01 :arg1 ( receive-01 :arg0 ( beam :mod this ) :arg1 ( money :quant more ) :arg2 industry ) ) ) :arg2 ( possible-01 :arg1 ( mean-01 :arg1 ( receive-01 :arg0 ( beam :mod this ) :arg1 ( money :quant more ) :arg2 industry ) ) ) ) :snt2 ( complain-01 :polarity - :arg0 i :arg1 ( much :polarity - ) )
affect-01 :arg0 ( compete-01 :arg1-of intensify-01 ) :arg1 ( thing :arg2-of price-01 :arg2-of price-01 ) :mod also
grÃ¶nlanninhai :arg1 ( swim-01 :arg2 ( along :op1 north east ) )
say-01 :arg0 ( person :arg0-of ( sell-01 :arg1 sell-01 ) ) :arg1 ( reduce-01 :polarity - :arg1 ( number :quant-of sell-01 ) ) :arg0-of ( cause-01 :arg1 ( suffer-01 :polarity - :arg0 ( service :mod customer ) ) )
phone-number-entity phone-number-entity_num_0
contrast-01 :arg1 ( start-01 :arg1 ( friday :arg1 rio ) ) :arg2 ( allow-01 :arg1 ( showcase :arg0 ( individual :mod top :poss world ) :arg1 ( skill :poss individual ) :arg2 ( audience :arg1-of empty-02 ) ) )
terminate-01 :arg0 ( website :poss foundation ) :arg1 ( holder :arg1 ( right-05 :arg2 ( acquire-01 :arg1 ( information :arg2-of name-01 ) :location ( map :mod same ) ) ) ) :arg1-of ( find-01 :arg1-of possible-01 )
contrast-01 :arg1 ( risk-01 :arg2 ( work-09 :arg1 foundation :manner somehow ) ) :arg2 ( recommend-01 :arg1 ( possible-01 :polarity - :arg1 work-09 ) )
try-01 :mode imperative :arg0 you :arg1 ( jury :arg0 ( jury :mod ( peer :degree so ) ) :arg1 ( prevent-01 :arg0 jury :arg1 ( person :mod young ) :arg2 crime-02 ) ) :location helsinki
letter :quant num_0 :arg1-of ( include-91 :arg2 ( organization :arg0-of ( trumps :arg1 ( trumps :arg1 ( andrew :name ( name :op1 republican :op2 andrew ) ) ) ) ) )
satisfy-01 :arg0 ( and :op1 ( person :arg0-of ( have-org-role-91 :arg2 ( chief :mod yle ) ) ) :op2 ( person :arg0-of ( have-org-role-91 :arg2 recalls ) ) ) :arg1 ( thing :arg2-of rate-01 ) :arg2 ( and :op1 ( thing :arg2-of rate-01 ) :op2 recalls ) :arg1-of ( cause-01 :arg0 ( divide-02 :arg1 ( person :arg0-of view-01 ) :arg2 ( olympics :arg1 ( instrument :arg1-of differ-02 ) :ord ( ordinal-entity ordinal-entity_num_0 ) ) ) )
satisfy-01 :arg0 ( and :op1 ( person :arg0-of ( have-org-role-91 :arg2 ( minister :mod prime ) ) ) :op2 ( person :arg0-of ( have-org-role-91 :arg2 ( minister :mod prime ) ) ) :op3 ( person :arg0-of ( have-org-role-91 :arg2 ( minister :mod prime ) ) ) ) :arg1 ( and :op1 ( person :arg0-of ( have-org-role-91 :arg2 ( minister :mod prime ) ) ) :op2 ( person :arg0-of ( have-org-role-91 :arg2 ( minister :mod prime ) ) ) ) :arg2 ( and :op1 ( person :arg0-of ( have-org-role-91 :arg2 ( minister :mod prime ) ) ) :op2 ( person :arg0-of ( have-org-role-91 :arg2 ( minister :mod prime ) ) ) )
contrast-01 :arg1 ( reason :polarity - :arg0-of ( cause-01 :arg1 ( cancel-01 :arg0 person :arg1 ( journey :arg0 person :arg2 explode-01 ) ) ) :domain ( plan-01 :arg0 ( person :arg0-of tour-01 :mod country_name_0 ) :arg1 ( cancel-01 :arg0 person :arg1 explode-01 ) ) ) :arg2 ( recommend-01 :arg1 ( follow-02 :arg0 ( person :mod country_name_1 ) :arg1 ( thing :arg1-of say-01 ) ) )
attraction :arg0 ( authority :arg1-of local-02 ) :arg1 ( and :op1 ( person :arg0-of ( have-org-role-91 :arg2 authority ) :arg1-of local-02 ) :op2 ( person :arg2-of ( total-01 :arg1 ( bomb :quant num_0 ) :time yesterday ) :arg2-of total-01 ) ) :time ( turn-01 :arg0 ( authority :arg1-of local-02 ) :arg1 ( bomb :quant num_0 ) :time yesterday )
say-01 :arg0 he :arg1 ( have-purpose-91 :arg1 ( have-purpose-91 :arg2 ( destroy-01 :arg1 ( tourism :poss country ) ) ) :arg2 ( have-purpose-91 :arg1 ( attack-01 :mod all ) :arg2 ( area :mod ( person :arg0-of tour-01 ) ) ) )
have-org-role-91 :arg0 ( person :arg0-of ( have-org-role-91 :arg2 professor ) ) :arg2 professor
say-01 :arg0 person_name_0 :arg1 ( contrast-01 :arg1 ( possible-01 :polarity - :arg1 ( base-02 :arg1 ( access-01 :arg1 document ) :arg2 ( guideline :poss authority ) ) ) :arg2 ( base-02 :arg1 access-01 :arg2 law ) )
remain-01 :arg1 ( car :mod passenger :arg0-of ( carry-01 :arg1 ( woman :mod 1972-born ) ) ) :arg3 pin :location ( car :poss car )
tell-01 :arg0 he :arg1 ( want-01 :arg0 he :arg1 ( get-01 :arg0 he :arg1 ( weight :arg1-of normal-02 :arg1-of ( cost-01 :arg2 ( monetary-quantity monetary-quantity_num_0 :unit pound ) :time then ) ) ) ) :arg2 ( press :time evening ) :time ( tell-01 :arg0 he :arg2 press )
multi-sentence :snt1 ( and :op1 ( return-01 :arg1 ( person :arg0-of ( respect-01 :arg1 ( and :op1 ( right :mod democracy ) :op2 ( right :mod human ) ) ) ) :arg4 ( and :op1 ( thing :arg2-of ( right-05 :arg1 democracy ) ) :op2 ( right :mod human ) ) ) :op2 ( write-01 :arg0 person :arg1 ( and :op1 ( person :arg0-of ( have-org-role-91 :arg2 ( minister :mod prime ) ) ) :op2 ( person :arg0-of ( have-org-role-91 :arg2 ( minister :mod prime ) ) ) :op3 ( person :arg0-of ( have-org-role-91 :arg2 ( minister :mod foreign ) ) ) :op4 ( person :arg0-of ( have-org-role-91 :arg2 ( minister :mod foreign ) ) ) :op5 ( person :arg0-of ( have-org-role-91 :arg2 ( minister :mod foreign ) ) ) :op6 ( person :arg0-of ( have-org-role-91 :arg2 ( minister :mod foreign ) ) ) :op7 ( person :arg0-of ( have-org-role-91 :arg2 journalist ) ) ) ) ) :snt2 ( reply :arg0 journalist )
replace-01 :arg0 ( person :arg0-of ( lead-02 :arg1 ( persecution :mod anton ) ) ) :arg1 ( person :arg0-of ( lead-02 :arg1 ( communist :mod communist ) ) ) :arg2 ( person :arg0-of ( lead-02 :arg1 ( persecution :mod anton ) ) )
possible-01 :arg1 ( watch-01 :arg0 you :arg1 it :location here ) :condition ( display-01 :polarity - :arg1 thing :manner proper )
say-01 :arg0 political-party_name_0 :arg1 ( tell-01 :polarity - :arg1 ( train-01 :arg1-of require-01 ) :arg2 mission )
find-01 :arg0 ( risk-01 :arg2 health ) :arg1 ( or :op1 ( thing :arg1-of ( symbolize-01 :arg2 ( thing :arg1-of enable-01 ) ) ) :op2 ( thing :arg2-of ( be-located-at-91 :arg1 ( or :op1 ( url-entity :value limit-value ) :op2 ( url-entity :value basement ) ) :op3 ( url-entity :value basement ) :op4 ( window :purpose ( room :mod live-01 ) ) :op5 ( window :purpose ( room :mod live-01 ) ) ) ) ) :arg2 ( room :part-of ( room :part-of laundry ) )
belong-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg2 sillanpÃ¤Ã¤ ) ) :arg1 ( artists :name ( name :op1 finnish ) :mod finnish ) :duration ( more-than :op1 ( temporal-quantity temporal-quantity_num_0 :unit year ) )
cause-01 :arg0 ( listen-01 :polarity - :arg0 ( person :mod economy ) :arg1 ( interest :mod common ) :arg1-of ( cause-01 :arg0 ( represent-01 :arg0 ( person :mod economy ) :arg1 ( person :mod elite :mod elite ) ) ) ) :arg1 ( have-condition-91 :arg1 ( care-01 :polarity - :arg0 person ) :arg2 ( represent-01 :arg0 ( person :mod economy ) :arg1 ( kind :mod elite ) ) )
have-condition-91 :arg1 ( job :quant amr-unknown ) :arg2 ( go-02 :arg0 they :direction away )
warn-01 :arg0 ( person :arg0-of invest-01 ) :arg1 ( possible-01 :arg1 ( obligate-01 :arg1 ( person :arg0-of invest-01 ) :arg2 ( fund-01 :arg0 person :arg1 ( catch-up-04 :arg1 person ) :location ( side :quant num_0 ) ) ) ) :time ( week :mod this )
play-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg1 customs :arg3 inspect-01 ) :arg0-of ( have-org-role-91 :arg1 customs :arg3 inspect-01 ) ) :arg0-of ( cause-01 :arg1 ( play-11 :arg0 person :arg2 ( toy :mod favorite :poss person ) ) )
and :op1 ( duty :poss ( search-01 :arg1 ( and :op1 arm :op2 explosive ) :ord ( ordinal-entity ordinal-entity_num_0 ) ) ) :op2 ( place-01 :arg1 duty :arg2 ( work-01 :location ( airport :mod helsinki-vantaa ) ) :time ( year :mod next ) )
need-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg2 ropsille ) ) :arg1 ( attacker :mod new ) :time ( move-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg2 king ) :arg0-of ( have-org-role-91 :arg2 king ) ) :arg1 ( person :arg0-of ( have-org-role-91 :arg2 king ) ) :arg2 ( person :arg0-of ( have-org-role-91 :arg2 king ) ) )
and :op1 ( part :part-of ( fan :mod female ) :arg1-of ( instead-of-91 :arg2 ( make-01 :arg0 fan :arg1 ( excuse-02 :arg0 fan :arg2 actor ) ) ) ) :op2 ( instructed :polarity - :arg0 fan :arg1 criticize-01 )
and :op1 ( know-01 :arg0 ( person :quant few ) :arg1 ( begins :arg1 ( season :mod ( lights :mod north ) ) :time early ) ) :op2 ( continue-01 :arg0 person :arg1 spring :arg1-of long-03 )
and :op1 num_0 :op2 ( touch-01 :arg0 country_name_0 :arg1 ball :degree bare ) :li num_0
multi-sentence :snt1 ( have-03 :arg0 boat :arg1 ( vote-01 :arg2 num_0 :arg1 boat ) :concession ( even-if :op1 ( rowing :arg1 they :manner together ) ) ) :snt2 ( present :mod all :time present :time ( hang-01 :arg0 duo :arg1 ( medal :mod gold :ord ( ordinal-entity ordinal-entity_num_1 ) :poss ( woman :ord ( ordinal-entity ordinal-entity_num_2 ) :arg0-of ( compete-02 :arg1 ( woman :ord ( ordinal-entity ordinal-entity_num_2 ) :arg0-of ( compete-02 :arg1 ( woman :ord ( ordinal-entity ordinal-entity_num_2 ) :arg0-of ( compete-02 :arg1 woman ) :ord ( ordinal-entity ordinal-entity_num_2 ) ) :location country_name_0 ) ) ) ) ) ) ) :snt3 ( possible-01 :arg1 ( reach-01 :arg0 woman :arg1 ( achieve-01 :mod such ) ) )
set :arg0 couple :arg1 ( rhythm :mod rough :arg1-of ( reach-01 :polarity - :arg0 ( company :arg0-of ( compete-02 :arg1 company ) ) ) )
contrast-01 :arg1 ( resign-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg2 ( minister :mod prime ) ) ) :arg1 ( person :arg0-of ( have-org-role-91 :arg2 ( minister :mod prime ) ) ) :arg3 ( scandal :mod scandal ) ) :arg2 ( enough :polarity - :domain ( person :arg0-of protest-01 ) )
promise-01 :arg0 ( person_name_0 :arg0-of ( have-org-role-91 :arg1 he :arg3 ( apprentice-01 :arg0 person ) ) ) :time ( time :mod that ) :purpose ( organize-01 :arg0 person :arg1 ( elect-01 :mod parliamentary :mod new :location autumn ) )
and :op1 ( good :domain ( idea :arg0-of ( promote-02 :arg1 ( status :mod email :poss ( change-01 :arg1 generation ) ) ) :arg0-of ( promote-02 :arg1 ( status :mod email ) ) ) ) :op2 ( comment-01 :arg0 idea :arg3 ( person :arg0-of ( own-01 :arg1 land ) :mod central ) ) :op3 ( have-org-role-91 :arg0 ( person_name_0 :arg0-of ( own-01 :arg1 country_name_1 ) ) :arg2 ( director :mod spiritual ) )
say-01 :arg0 ( person :arg1-of ( include-91 :arg2 ( person :arg0-of ( represent-01 :arg1 ( person :arg0-of own-01 ) ) ) :arg3 ( percentage-entity :value num_0 ) ) :arg1-of ( include-91 :arg2 ( person :arg0-of ( represent-01 :arg1 ( movement :name ( name :op1 victoria ) ) ) ) ) ) :arg1 ( qualifications :arg0 ( person :arg0-of ( represent-01 :arg1 web ) :arg1-of ( include-91 :arg2 ( person :arg0-of ( represent-01 :arg1 web ) ) :arg3 ( percentage-entity :value num_0 ) ) ) :arg2 ( person :arg0-of ( represent-01 :arg1 web ) ) )
and :op1 ( act-02 :arg1-of strong-02 :domain ( and :op1 ( music :mod good ) :op2 low-key :op3 ( music :mod good :mod some ) ) :arg1-of strong-02 ) :op2 ( film :arg1 ( music :mod good :quant some ) :arg1-of ( cause-01 :arg0 ( ingredient :mod ingredient :mod quite ) ) )
rise-01 :arg1 ( debt :arg1-of ( present-01 :arg2 ( debt :mod ( government-organization :arg0-of govern-01 ) ) ) :arg0-of ( exceed-01 :arg1 ( threshold :quant num_0 :mod ( percentage-entity percentage-entity_num_0 ) ) ) ) :time ( after :op1 now :duration ( temporal-quantity temporal-quantity_num_2 :unit decade ) )
move-01 :arg0 man :arg1 yard :instrument ( tractor :arg1 man )
have-condition-91 :arg1 ( and :op1 ( boy :mod juniper ) :op2 ( boy :mod juniper ) :op3 ( boy :mod river ) ) :arg2 ( team :mod nation :mod country_name_0 )
be-located-at-91 :arg1 ( together :prep-with ( tent :mod big ) ) :arg2 show-04
announce-01 :arg1 ( rate :mod inflation ) :time ( ordinal-entity ordinal-entity_num_0 :range ( ordinal-entity ordinal-entity_num_0 ) )
have-concession-91 :arg1 ( and :op1 ( interviewed :arg0 ( person :quant many :arg1-of ( interview-01 :arg0 i ) ) :arg1 ( person :arg1-of ( interview-01 :arg0 i ) ) :degree total :time ( before :op1 now :duration ( temporal-quantity temporal-quantity_num_0 :unit year ) ) ) :op2 ( attend-02 :arg0 ( person :arg1-of ( include-91 :arg2 person :arg3 many ) ) :arg1 ( realize-01 :arg0 person :arg1 ( aware :arg1 species :degree total ) ) ) ) :arg2 ( sport :domain ( sport :poss trampolines ) :time ( before :op1 now :duration ( temporal-quantity temporal-quantity_num_1 :unit year ) ) )
multi-sentence :snt1 ( try-01 :arg0 ( person :mod country_name_0 ) :arg1 ( suppress-01 :arg0 person :arg1 ( campaign-01 :arg0 person :arg1 ( take-over-12 :arg0 person :arg1 ( dispute-01 :arg0 person :arg2 country_name_1 ) :time ( late :degree most ) ) ) ) ) :snt2 ( insist-01 :arg0 ( person :mod religious-group ) :arg1 ( group :mod terrorism :mod state :domain ( and :op1 ( person :arg0-of ( have-org-role-91 :arg2 president ) ) :op2 ( person :mod country ) ) ) )
multi-sentence :snt1 ( mocked :mode interrogative :arg0 he ) :snt2 ( say-01 :arg0 ( person :arg0-of ( try-01 :arg1 ( get-05 :arg0 person :arg1 person :arg2 out ) ) ) :arg1 ( succeed-01 :polarity - :arg0 person ) )
cause-01 :arg0 ( democrat :mod some ) :arg1 ( cause-01 :arg0 democrat :arg1 ( unfit :arg0 democrat :arg1 ( person :arg0-of ( have-org-role-91 :arg2 president ) ) :mod new ) )
contrast-01 :arg1 ( make-01 :arg0 rosenthal :arg1 ( order :mod usual ) :time still ) :arg2 ( cause-01 :arg0 ( bagel :arg1 he :arg2 ( and :op1 bacon :op2 egg :op3 cheese ) ) :arg1 he :frequency sometimes )
direct-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg1 ( agency :mod ( home :mod home ) :mod federal ) :arg2 ( director :mod ( home :mod home ) ) ) ) :arg1 ( habit :mod eat-01 :poss country ) :degree ( more :compared-to ( or :op1 ( before :op1 ( before :op1 now ) ) :op2 ( after :op1 ( after :op1 ( after :op1 ( or :op1 ( before :op1 now ) :op2 after ) ) ) ) ) ) :arg2 ( person :arg1-of ( expert-01 :arg2 ( economy :mod home ) ) :example ( and :op1 ( person :arg0-of ( have-org-role-91 :arg2 ( person :arg1-of ( expert-01 :arg2 ( economy :mod home ) ) ) ) ) :op2 ( person :arg0-of ( have-org-role-91 :arg1 ( agency :mod home :mod home :mod home ) :arg2 director ) ) ) )
try-01 :arg0 ( person :mod country_name_0 ) :arg1 ( catch-02 :arg1 person :arg2 ( gilead :arg0-of ( dominates :arg1 market :arg2 ( generation :mod drug :mod c :mod c :arg1-of ( improve-01 :arg1-of possible-01 :arg1-of ( possible-01 :arg1-of possible-01 :arg1-of ( improve-01 :arg1-of possible-01 :arg1-of ( cause-01 :arg0 ( disease :mod geopolitics :mod this ) :arg1-of clear-06 ) ) ) ) ) ) ) )
and :op1 ( date :mod sue-02 :time ( back :op1 ( date-entity decade_date-entity_0 ) ) ) :op2 ( challenge-01 :arg0 sue-02 :arg1 ( other :mod each ) :arg2 court :arg3 ( court :mod ( other :mod each ) ) :arg4 court :purpose ( substance :arg1-of activity-06 :arg1-of ( base-02 :arg2 ( own-01 :arg0 laboratory ) ) ) )
and :op1 ( include-91 :arg1 ( rate-entity-91 :arg1 ( rate :mod ( tax-01 :arg2 federal ) :arg1-of actual-02 ) :arg2 ( rate-entity-91 :arg1 ( percentage-entity percentage-entity_num_0 ) :arg2 ( temporal-quantity temporal-quantity_num_1 :unit year ) ) ) :op2 ( rate-entity-91 :arg1 ( rate :mod tax-01 :arg1-of actual-02 ) :arg2 ( approximately :op1 num_3 ) ) ) :time today
and :op1 ( man :arg1-of ( catch-02 :arg2 ( person :mod country_name_0 ) ) ) :op2 ( catch-01 :arg1 ( person :mod country_name_1 ) :location ( in-front-of :op1 ( country :arg0-of ( understand-01 :arg1 potential :time now ) ) ) )
multi-sentence :snt1 ( say-01 :arg0 ( person_name_0 :arg0-of ( have-org-role-91 :arg2 senator ) ) ) :snt2 ( enjoy-01 :arg0 i :arg1 ( this :mod just ) )
rise-01 :arg1 ( thing :arg1-of feel-01 :mod this ) :arg4 ( surface :part-of ( cover-01 :arg1 ( vogue :mod jenner ) ) ) :mod again
phone-number-entity phone-number-entity_num_0
cause-01 :arg0 ( block-01 :arg1 advertise-01 ) :arg1 ( focus-01 :arg0 ( cause-01 :arg0 amr-unknown :arg1 ( focus-01 :arg0 we :arg2 ( build-01 :arg0 we :arg1 advertise-01 ) :arg0-of ( give-01 :arg1 ( person :arg0-of manage-01 ) :arg2 ( person :arg0-of manage-01 ) ) ) :arg1-of instead-of-91 ) )
contrast-01 :arg1 ( question-01 :arg1 ( person :arg0-of drive-01 :mod event-related :quant several ) :time already ) :arg2 ( tell-01 :arg0 person :arg1 ( and :op1 ( appeal-02 :arg0 person :arg2 person ) :op2 ( witness-01 :arg0 person :arg1 ( person :arg0-of witness-01 ) :purpose ( make-02 :arg0 person :arg1 ( know-01 :arg0 person :arg1 ( know-01 :arg0 person ) ) ) ) :arg2 police ) )
suggest-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg2 scientist ) ) :arg1 ( speed :arg0 ( speed :poss person ) :arg1 ( atmosphere :mod thick :poss person ) ) :time previous
expose-01 :arg1 it :arg2 ( and :op1 heat :op2 ( light :arg1-of ultra violet ) ) :duration ( several :op1 ( temporal-quantity temporal-quantity_num_0 :unit year ) ) :concession ( likely-01 :arg1 ( habitable :arg1 it :degree most ) )
slow :arg0 they :arg1 star :time ( pass-02 :arg0 ( winds :mod this ) :path ( field :mod ( reverse-01 :arg1 star ) ) )
and :op2 ( say-01 :arg0 ( and :op1 ( person :arg0-of ( have-rel-role-91 :arg2 son ) ) :op2 ( person :arg0-of ( represent-01 :arg1 daughter ) ) ) :arg1 ( and :op1 ( '' :arg1 they ) :op2 ( '' :arg0 ( die-01 :arg1 he ) :arg1 they ) ) )
and :op1 country_name_0 :op2 country_name_1 :op3 ( consortium :mod outside )
motive :mod economy :mod also
guarantee-01 :arg1 ( receive-01 :arg0 ( person :arg0-of ( lead-02 :arg1 country_name_0 ) ) :arg1 ( person :arg0-of ( lead-02 :arg1 country_name_1 ) ) :arg1-of ( cause-01 :arg0 ( call-01 :arg0 person :arg1 ( company :mod revolution-03 ) :arg2 ( support-01 :arg0 person :arg1 ( authority :arg1-of designate-01 ) ) ) ) )
avoid-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg1 political-party_name_0 :arg2 president ) ) :arg1 ( answer-01 :arg0 person :arg1 ( thing :arg1-of ( question-01 :arg0 person ) ) ) :time ( choose-01 :arg0 person :arg1 ( emphasize :arg0 person :arg1 person ) ) :manner deliberate
abandon-01 :arg0 it :arg1 ( goal :mod this ) :time ( after :op1 ( collapse-01 :arg1 bank :time ( before :op1 now :quant ( nearly :op1 ( temporal-quantity temporal-quantity_num_0 :unit year ) ) ) ) )
win-01 :arg0 ( and :op1 ( win-01 :arg0 dettori :arg2 newcomer ) :op2 ( win-01 :quant num_0 :arg0 win-01 ) ) :arg2 ( and :op1 newcomer :op2 achieves )
say-01 :arg0 ( person_name_0 :arg0-of ( win-01 :time ( early :degree more ) ) :arg0-of ( win-01 :time ( early :degree more ) ) ) :arg1 ( special-02 :arg1 this )
ask-02 :arg0 ( person :arg0-of ( reside-01 :arg1 country_name_0 ) ) :arg1 ( identify-01 :arg0 person :arg1 ( fish :arg1-of ( appear-01 :location ( garden :poss person ) ) ) ) :arg2 ( person :arg1-of ( reside-01 :arg0 person ) )
say-01 :arg0 ( person_name_0 :arg0-of ( head-01 :arg1 ( project :topic ( bank-01 :mod bridge ) :arg0-of ( cross-02 :arg1 bridge ) ) ) ) :arg1 ( '' :arg1 ( barrier :ord ( ordinal-entity ordinal-entity_num_0 ) :location ( project :mod bridge :mod any ) ) :time always :arg1-of major-02 )
multi-sentence :snt1 ( help-01 :arg0 activity-06 :arg1 ( manage-01 :arg1 ( and :op1 ( manage-01 :arg1 weight ) :op2 ( pressure :mod ( blood :arg1-of high-02 ) ) :op3 cold ) ) ) :snt2 ( rich :degree too :domain ( benefit-01 :arg1 it ) :location here )
say-01 :arg0 he :arg1 ( true :polarity - :domain ( thing :arg1-of ( say-01 :arg0 he ) ) :mod of-course :mod of-course )
remembers :arg0 picciuto :arg1 ( load :quant load :time future :mod certain )
and :op2 ( know-01 :polarity - :arg0 he :mod still )
say-01 :arg0 he :arg1 ( contrast-01 :arg1 ( report-01 :arg0 he :arg1 flooding ) :arg2 ( report-01 :polarity - :arg1 ( frustrate-01 :arg0 ( far :arg1 house ) :time so-far ) ) )
benefit-01 :arg0 ( attack-01 :arg1 heart :quant ( multiple :op1 ( monetary-quantity monetary-quantity_num_0 :unit pound ) ) ) :arg1 ( medication :quant ( multiple :op1 ( monetary-quantity monetary-quantity_num_0 :unit pound ) ) ) :time ( after :op1 ( advise-01 :arg0 authority :arg1 authority :arg2 ( give-01 :arg1 ( thing :arg1-of ( give-01 :arg2 person :arg1-of long-03 ) ) :arg2 person ) ) )
have-03 :arg0 ( scene :quant num_0 ) :arg1 ( risk-01 :arg2 ( get-01 :arg1 num_0 ) :arg1-of increase-01 ) :time already
say-01 :arg0 ( person_name_0 :arg0-of ( have-org-role-91 :arg2 mizrach ) ) :arg1 ( obligate-01 :arg1 you :arg2 ( turn-14 :arg0 you :arg1 ( and :op1 ( see-01 :arg0 you :arg1 ( betray-01 :arg0 you ) ) :op2 ( clear-06 :arg1 ( '' :arg1 ( line :name ( name :op1 fire ) ) ) ) ) :time first ) :condition ( approach-02 :arg0 you :arg1 church ) )
case :mod ( amazing :degree very ) :domain this :arg1-of ( cause-01 :arg0 ( and :op1 ( extreme :degree extreme :domain behave-01 ) :op2 ( horrified :arg0 action :arg1 ( neighbor-01 :arg1 they ) :arg1-of sure-02 ) ) )
and :op1 ( be-located-at-91 :arg1 aircraft :arg2 ( fly-01 :purpose train-01 ) ) :op2 ( ask-02 :arg1 ( identify-01 :arg0 pilot-01 :arg1 ( boat :mod fishing ) ) :arg2 part )
step-01 :arg2 ( approach-02 :mod new ) :time ( before :op1 now :quant ( temporal-quantity temporal-quantity_num_0 :unit year ) )
say-01 :arg0 ( person_name_0 :arg0-of ( have-org-role-91 :arg2 senator ) ) :arg1 ( convince-01 :arg0 person :arg1 ( person :arg0-of ( have-org-role-91 :arg3 judge-01 ) :mod democracy ) :arg2 ( person :arg0-of ( have-org-role-91 :arg3 judge-01 ) :arg0-of ( have-org-role-91 :arg3 judge-01 ) ) :condition ( elect-01 :arg1 person :arg2 president ) )
note-01 :arg0 you :arg1 ( base-02 :arg1 ( claim-01 :mod this ) :arg2 ( base-02 :arg1 claim-01 :arg2 ( information :arg1-of actual-02 ) ) ) :time ( before :op1 ( rush-01 :arg1 you :arg2 ( section :arg1-of comment-01 :arg1-of ( write-01 :arg0 ( and :op1 ( person :arg1-of ( write-01 :arg0 ( person :arg0-of ( insult-01 :arg1 nicknamed ) :arg1-of ( write-01 :arg0 ( person :arg0-of ( insult-01 :arg1 nicknamed ) :arg1-of ( write-01 :arg0 ( person :arg0-of ( insult-01 :arg1 nicknamed ) :arg1-of ( write-01 :arg0 ( person :arg0-of ( insult-01 :arg1 nicknamed ) :arg1-of ( write-01 :arg0 ( person :arg0-of ( insult-01 :arg1 country-region ) :arg1-of ( write-01 :arg0 ( person :arg0-of ( insult-01 :arg1 country-region ) :arg1-of ( write-01 :arg0 ( person :arg0-of ( insult-01 :arg1 country-region ) :arg1-of ( write-01 :arg0 ( person :arg0-of ( insult-01 :arg1 country-region ) :arg1-of ( write-01 :arg0 ( person :arg0-of ( insult-01 :arg1 country-region ) :arg1-of ( write-01 :arg0 ( person :arg0-of ( insult-01 :arg1 country-region ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) )
think-01 :arg0 i :arg1 ( possible-01 :arg1 ( or :op1 ( filling :arg1 ( gap :mod ( or :op1 gap :op2 ( kind :mod some ) ) :topic ( item :arg1-of ( own-01 :arg0 state ) ) ) ) :op2 ( consolation :mod ( kind :mod some ) ) ) )
become-01 :arg1 food :arg2 ( expensive :quant ( percentage-entity percentage-entity_num_0 ) ) :time meanwhile :arg1-of ( cause-01 :arg0 ( become-01 :arg1 food :arg2 ( expensive :degree more ) ) ) :time meanwhile
fall-01 :arg1 ( thing :arg2-of ( price-01 :arg1 food ) ) :arg4 ( fast :degree more :compared-to country_name_0 ) :mod only
rise-01 :arg1 ( thing :arg2-of ( price-01 :arg1 food ) ) :manner sharp :time ( begin-01 :arg1 num_0 )
multi-sentence :snt1 ( recommend-01 :arg1 ( and :op1 ( halved :arg1 ( level :arg1-of average-04 ) :arg2 ( level :arg1-of average-04 ) ) :op2 ( continue-01 :arg1 ( thing :arg2-of ( price-01 :arg1 ( thing :arg2-of price-01 ) ) ) ) ) :condition ( want-01 :arg0 we :arg1 ( reach-01 :arg0 we :arg1 ( level :arg2-of ( price-01 :arg1 food ) :mod old ) :prep-in ( price-01 :arg1 food ) ) ) ) :snt2 ( write-01 :arg0 ( lehtinen :mod '' ) )
hailing :location ( along :op1 north )
multi-sentence :snt1 ( cause-01 :arg0 ( result-01 :arg1 negotiate-01 :arg2 ( negotiate-01 :arg2 ( negotiate-01 :quant ( about :op1 num_0 ) ) ) ) :arg1 ( reduce-01 :arg1 ( job :quant ( about :op1 num_0 ) ) ) ) :snt2 ( say-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg1 political-party_name_0 ) ) :arg1 stockmann )
cause-01 :arg0 ( succeed-01 :arg0 ( chain :mod clothing :poss country_name_0 ) ) :arg1 ( improve-01 :arg1 ( profit-01 :arg0 profit-01 :ord ( ordinal-entity ordinal-entity_num_0 ) ) )
summery :arg1 temperature :degree very :time no-longer :location ( country :quant whole :location ( country :mod whole ) )
explain-01 :polarity - :arg0 coach :arg1 ( situation :beneficiary ( person :arg0-of ( have-org-role-91 :arg2 officer ) ) ) :arg1-of ( cause-01 :arg0 ( fear-01 :arg0 person :arg1 ( person :arg0-of report-01 ) ) )
steal-01 :arg1 bike :arg2 ( courtyard :part-of building ) :time ( before :op1 now :quant ( temporal-quantity temporal-quantity_num_0 :unit year ) )
say-01 :arg1 ( message-01 :arg0 you :arg1 ( continue-01 :arg0 you :arg1 ( way :poss you ) ) :arg1-of ( say-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg2 lovio ) ) ) ) :arg2 person_name_0
look-01 :arg0 i :arg1 ( person :arg0-of ( have-org-role-91 :arg2 president ) ) :purpose ( make-02 :arg0 person :arg1 ( go-01 :arg1 ( economy :poss we ) :arg3 everyone :mod well ) )
say-01 :arg0 ( person :arg0-of view-01 ) :arg1 ( start-01 :arg0 ( person :arg0-of view-01 ) :arg1 ( close-10 :arg1 number :arg2 close ) )
inarijÃ¤rvi :arg1 ( lake :arg1-of deep-02 :mod other ) :arg2 ( and :op1 ( -rrb- :quant ( distance-quantity distance-quantity_num_0 :unit meter ) ) :op2 ( suvasvesi :quant ( between :op1 num_1 :op2 num_1 ) ) )
heated :arg0 matter :arg1 ( and :op1 ( person :arg0-of ( represent-01 :arg1 parliament ) :arg0-of ( have-org-role-91 :arg1 parliament :arg2 minister ) ) :op2 ( person :arg0-of ( have-org-role-91 :arg1 parliament :arg2 minister ) ) :op3 ( person :arg0-of ( have-org-role-91 :arg1 parliament :arg2 minister ) ) :op4 ( person :arg0-of ( have-org-role-91 :arg1 parliament :arg2 minister ) ) :op5 ( person :arg0-of ( have-org-role-91 :arg1 parliament :arg2 minister ) ) )
say-01 :arg0 ( agency_name_0 :mod news :mod police ) :arg1 ( rule-out-02 :arg1 ( terrorism :mod religious-group_name_0 ) :mod also )
multi-sentence :snt1 ( contrast-01 :arg1 ( possible-01 :polarity - :arg1 ( have-polarity-91 :arg2 - ) ) :arg2 ( point :mod all :domain ( and :op1 ( do-02 :arg0 ( swimmers :mod this ) :arg1 ( thing :manner-of ( do-02 :arg0 ( swimmers :mod this ) ) ) ) :op2 ( amr-unknown :manner-of ( make-05 :arg0 they ) ) ) ) ) :snt2 ( okay-04 :arg1 ( grumble :arg0 i :arg1 skelton ) )
believe-01 :arg1 ( link-01 :arg1 detainees :arg2 ( organization :mod ( extremism :mod isis ) ) )
lose-02 :arg1 ( thing :quant num_0 :arg1-of lose-02 ) :time ( start-01 :arg1 ( win-01 :arg0 ( spain :mod tournament ) :arg2 ( point :quant num_1 ) ) )
consider-01 :arg1 ( protest-01 :mod protracted )
find-02 :arg1 coffee :arg2 ( protect-01 :arg1 ( and :op1 ( cancers :quant some ) :op2 ( cold :mod ( type :quant num_0 ) ) :op3 ( disease :mod parkinson ) ) )
recommend-01 :arg1 ( have-03 :arg0 he :arg1 orgasm :mod also ) :purpose ( gain-02 :arg0 person :arg1 ( year :mod extra ) :prep-in ( life :poss person ) )
show-01 :arg0 picture :arg1 ( change-01 :arg1 ( lotta :mod enormous ) :time ( over :op1 ( temporal-quantity temporal-quantity_num_0 :unit year ) ) )
drop-05 :arg0 ( person :mod country_name_0 ) :arg1 ( project :name ( name :op1 '' ) :mod last ) :time ( before :op1 now :quant ( multiple :op1 ( mass-quantity mass-quantity_num_0 :unit pound ) ) )
say-01 :arg0 ( media :mod country_name_0 ) :arg1 ( pay-01 :arg0 ( person :arg0-of ( play-01 :arg1 ( thing :arg1-of ( gift-01 :arg2 ( name :op1 italian :op2 italian ) ) ) ) ) :arg3 ( person :arg0-of ( play-01 :arg1 italian ) :mod italian ) )
have-purpose-91 :arg1 ( and :op1 ( achieve-01 :arg1 ( level :arg1-of need-01 ) ) :op2 ( act-02 :arg1-of ( conform-01 :arg2 ( regulate-01 :mod official ) ) ) ) :arg2 ( say-01 :arg0 ( regulate-01 :mod official ) :arg1 ( have-org-role-91 :arg0 ( person :arg0-of ( have-org-role-91 :arg2 ( director :mod vice ) ) ) :arg1 event :arg2 ( director :mod vice ) ) ) :frequency often
possible-01 :arg1 ( use-01 :arg1 it :arg2 ( create-01 :arg1 ( thing :arg2-of ( creek :arg1 ( thing :arg1-of ( resemble-01 :arg2 ( construct-01 :arg1 ( tent :mod that ) ) ) ) ) ) ) )
and :op1 ( it :location ( bartenders :quant num_0 :arg1-of ( include-91 :arg2 ( bartenders :mod ( big :degree most ) ) ) ) ) :op2 ( tell-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg2 swedish ) ) :arg1 ( aftonbladet :mod hooligans ) )
say-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg2 head-of-state ) ) :arg1 ( fight-01 :arg0 person :arg2 ( fight-01 :arg0 person :arg1 duty :mod only :time ( after :op1 ( hijack-01 :arg0 person :arg1 ( person :arg0-of ( have-org-role-91 :arg2 ( soldier :mod military ) ) ) :duration ( several :op1 ( temporal-quantity temporal-quantity_num_0 :unit month ) ) ) ) ) ) :arg1-of ( say-01 :arg0 person_name_0 )
(-(
include-91 :arg1 ( thing :arg1-of ( precede-01 :arg2 ( name :op1 finnish :op2 favorite ) ) ) :arg2 ( artists :arg1-of ( favorite :time ( over :op1 ( temporal-quantity temporal-quantity_num_0 :unit year ) ) ) )
curly :mod finance
have-03 :arg0 ( person :quant many ) :arg1 ( idea :topic ( depend-01 :polarity - :arg0 ( number :quant-of ( person :arg1-of employ-01 ) ) :arg1 ( number :quant-of ( person :arg1-of employ-01 ) ) :mod almost ) ) :mod still
say-01 :arg0 ( person_name_0 :arg0-of ( have-org-role-91 :arg2 ( director :mod vice ) ) ) :arg1 ( positive :mod main :domain ( friendship :source program ) )
paradise :domain ( channel :arg0-of ( effective-04 :degree most ) )
update-01 :arg1 rate-01 :arg1-of update-01
say-01 :arg0 ( group :time ( date-entity decade_date-entity_0 ) ) :arg1 ( inform-01 :arg0 group :arg1 ( customer :poss it ) :arg2 change-01 )
go-01 :polarity - :arg1 it :time ( sit-01 :arg1 it :arg2 ( next-to :op1 ( box :mod middle ) ) )
touch-01 :arg0 ( and :op1 ( person :quant num_0 ) :op2 ( person :mod country_name_0 ) ) :arg1 ball :degree bare
frosting :arg1 ( paint :poss ( viliame :name ( name :op1 last-minute :op2 viliame ) ) ) :location ( ice :part-of ( ice :part-of country_name_0 ) :arg0-of ( need-01 :polarity - :arg1 peeled ) )
attend-01 :arg0 ( person :mod country_name_0 ) :arg1 wedding :time ( month :mod next ) :time ( marry-01 :arg1 person :arg2 ( adventurer :medium tv :mod tv ) )
age-01 :arg1 background :arg2 ( population :arg1-of ( age-01 :arg2 ( temporal-quantity temporal-quantity_num_0 :unit year ) ) )
say-01 :arg0 ( study :arg1-of ( publish-01 :medium ( journal :mod science ) ) ) :arg1 ( confirm-01 :arg1 ( age :consist-of ice ) :arg2 ( person :arg0-of ( live-01 :location world ) :mod longest ) )
and :op1 ( write-01 :arg0 i :arg1 ( manuscript :location ( laureate :name ( name :op1 nobel ) :mod nobel ) ) ) :op2 ( base-02 :arg1 almodÃ³var :arg2 ( novel :quant num_1 :mod alice :mod alice ) )
and :op1 ( benefit-01 :arg0 ( and :op1 ( pension :mod nation ) :op2 ( pension :mod nation ) :op3 ( employ-01 :mod basic :quant ( all :mod near ) ) ) :arg1 ( index :mod ( pension :mod nation ) ) ) :op2 ( cut-02 :arg1 ( percentage-entity percentage-entity_num_0 ) )
contrast-01 :arg2 ( say-01 :arg0 i :arg1 ( expect-01 :arg0 ( party :arg0-of rule-03 ) :arg1 treaty_name_0 ) :concession ( result-01 :arg1 ( elect-01 :time previous ) :arg2 ( rate-entity-91 :arg1 num_0 :arg2 ( temporal-quantity temporal-quantity_num_1 :unit month ) :compared-to ( elect-01 :mod parliamentary ) ) ) )
and :op1 ( drifted :arg1 truck :arg2 ( left :mod curving :arg1-of ( out :arg2 way ) ) ) :op2 ( fall-07 :arg1 truck :arg2 ( ditches :arg1 truck ) )
cause-01 :arg1 ( pollution :mod air :domain ( cause-01 :arg1 skin ) )
be-located-at-91 :arg1 ( top :mod ( big :degree too ) :mod ( big :degree too ) ) :arg2 ( and :op1 ( jumpsuit :mod ( big :degree too ) ) :op2 ( pads :name ( name :op1 knee :op2 knee :op3 glittering ) ) :op4 ( aces :mod glittering ) :time ( after :op1 ( point :mod point ) ) )
help-01 :arg0 ( person :arg0-of ( have-rel-role-91 :arg1 they :arg2 dad ) ) :arg1 ( and :op1 ( help-01 :arg0 person ) :op2 ( advise :arg0 person :arg1 ( experience-01 :arg0 person ) ) ) :arg2 ( person :arg0-of ( have-rel-role-91 :arg1 they :arg2 dad ) )
and :op2 ( wonder-01 :arg0 they :arg1 ( possible-01 :arg1 ( signal-07 :arg0 ( polemics :mod this ) :arg1 ( problem :mod ( big :degree more ) ) :arg2 diversity ) ) )
say-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg1 ( art :mod korean-american ) :arg2 ( person :arg0-of study-01 :mod art ) ) ) :arg1 ( and :op1 ( '' :arg1 ( person :arg0-of ( have-org-role-91 :arg2 lenses ) ) :mod at-least ) :op2 ( comfortable-02 :polarity - :arg1 person :mod at-least ) ) :medium ( email-01 :arg0 person :arg2 ( person :arg0-of ( study-01 :arg1 photo ) :arg0-of ( have-org-role-91 :arg1 ( art :mod korean-american ) :arg3 study-01 ) ) )
possible-01 :arg1 ( mean-01 :arg0 ( and :op1 ( huge :mod huge :poss ( person :arg0-of ( have-rel-role-91 :arg2 ( parent :mod ( old :degree more ) ) ) ) ) :op2 ( person :mod ( old :degree more ) :arg0-of ( have-rel-role-91 :arg1 person :arg2 parent ) ) ) :arg2 ( likely-01 :arg1 ( expect-01 :arg0 person :arg1 ( attitude :mod understand-01 ) ) :degree ( more :mod even ) ) )
report-01 :arg0 day :arg1 ( thing :arg2-of ( result-01 :arg1 ( inquire-01 :arg0 ( veteran :mod congressional ) ) :mod provisional ) )
make-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg1 team :arg3 ( lead-02 :arg0 person ) ) ) :arg1 ( team :name ( name :op1 ground-hockey :op2 num_3 :op3 num_3 :op4 num_3 :op5 num_3 :op6 num_3 :op7 num_3 ) ) :time ( after :op1 ( win-01 :arg0 ( person :mod country_name_0 ) :arg1 ( half :ord ( ordinal-entity ordinal-entity_num_0 ) :poss woman ) ) ) :time ( win-01 :arg0 ( person :mod country_name_1 ) :location country )
add-01 :arg0 person_name_0 :arg1 ( goal :mod last :location ( middle :part-of ( batch :ord ( ordinal-entity ordinal-entity_num_0 ) ) ) )
multi-sentence :snt1 ( obligate-01 :arg1 i :arg2 ( admit-01 :arg0 i :arg1 ( expert-01 :polarity - :arg1 i :arg2 ( expert-01 :arg1 i :arg2 ( expert-01 :polarity - :arg1 i ) ) ) ) :location here ) :snt2 ( fan :mod ( world-region_name_3 :mod just ) :domain i )
rush-01 :arg1 ( person :arg0-of ( demand-01 :arg1 ( change-01 :arg1 politics :mod radical ) ) ) :arg2 street :time ( week :mod last ) :mod alone
and :op1 ( country_name_0 :domain ( country :mod ( populous :degree most :compared-to ( country :mod ( populous :degree most ) ) ) ) ) :op2 ( appreciate-02 :arg0 ( country :location west ) :arg1 ( stability :poss country ) ) :time ( after :op1 ( nigeria :arg1 country ) )
multi-sentence :snt1 ( grow-01 :arg1 ( tension :location ( border-01 :arg2 ( thing :arg1-of ( border-01 :arg2 eritrea ) ) ) ) :time ( time :arg1-of same-01 ) ) :snt2 ( and :op1 ( struggle-01 :arg1 ( struggle-01 :mod this ) ) :op2 ( demand-01 :arg0 ( border :mod controversy ) :arg1 ( live-01 :arg0 ( and :op1 ( border :mod this ) :op2 ( border :mod controversy ) ) ) ) )
contrast-01 :arg2 ( think-01 :arg0 i :arg1 ( and :op1 ( cunning :arg0 he :arg1 ( thing :arg1-of ( state-01 :arg0 he ) ) ) :op2 ( know-01 :arg0 i :arg1 ( vague :arg1 they :degree enough :arg1-of ( cause-01 :arg0 ( lens :quant several ) ) ) ) ) :mod also )
open-01 :arg1 ( conference_name_0 :name ( name :op1 revive-01 ) ) :mod last :location ( relative-position :op1 ( location :quant ( less-than :op1 ( distance-quantity distance-quantity_num_0 :unit mile ) :mod original ) ) )
say-01 :arg0 ( person_name_0 :arg0-of ( have-org-role-91 :arg2 hillary ) ) :arg1 ( set-02 :arg0 ( and :op1 ( person :arg0-of ( have-org-role-91 :arg2 hillary ) ) :op2 ( person :arg0-of ( have-org-role-91 :arg2 tim ) ) ) :arg1 ( benchmark :prep-for ( motive :mod finance ) ) ) :medium statement
say-01 :arg0 person_name_0 :arg1 ( and :op1 ( have-03 :arg0 he :arg1 ( audit-01 :arg1 tax-01 ) :mod also ) :op2 ( scare-01 :polarity - :arg0 ( person :arg0-of vote-01 ) :arg1 trumps ) )
call-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg2 ( ambassador :mod israeli ) ) ) :arg1 case-03 :arg2 ( injustice :mod great ) :arg1-of ( report-01 :arg0 ( zeitung :name ( name :op1 zuddeutsche :op2 zeitung ) ) )
grow-01 :arg1 ( business :mod ( between :op1 country_name_0 :op2 country_name_1 ) ) :arg2 ( percentage-entity percentage-entity_num_0 ) :manner sudden
increase-01 :arg1 ( import-01 :arg0 country_name_0 :arg2 country_name_1 ) :arg2 ( percentage-entity percentage-entity_num_0 ) :arg4 ( rate-entity-91 :arg1 ( monetary-quantity monetary-quantity_num_1 :unit dollar ) :arg2 ( volume-quantity volume-quantity_num_1 :unit gallon ) )
anchored :arg0 ( 23-year-old :poss ( man :mod young :arg0-of ( pride-01 :arg2 ( man :mod young ) ) ) ) :arg1 ( legend :arg1 ( legend :poss ( man :mod young :arg0-of ( pride-01 :arg1 man :time ( knock :arg1 man :arg2 ( line :name ( name :op1 finish ) ) ) ) ) ) :arg0-of ( win-01 :arg1 ( win-01 :arg0 man :arg2 ( team :mod new :mod zealand ) ) ) ) :manner anchored
do-02 :arg1 this :time ( appear-01 :arg1 hindes ) :mod just
include-91 :arg1 ( value-interval :op1 num_0 :op2 num_1 ) :arg2 ( record :mod world :arg0-of ( win-01 :arg1 ( record :mod world ) ) )
say-01 :arg0 person_name_0 :arg1 ( '' :arg1 it :time already :purpose ( reduce-01 :arg1 ( thing :arg2-of ( value-01 :arg1 contract ) ) :arg3 ( monetary-quantity monetary-quantity_num_0 :unit ( yuan :mod renminbi ) ) :location ( book :poss it ) ) )
lay :arg1 victim :time ( middle :op1 night )
expect-01 :arg1 ( invest-01 :arg0 ( sea :location north ) :arg1 ( rate-entity-91 :arg1 ( less-than :op1 ( monetary-quantity monetary-quantity_num_0 :unit dollar ) ) :arg2 ( project :mod new ) ) :arg2 ( project :mod new :arg1-of ( cost-01 :arg2 ( around :op1 ( monetary-quantity monetary-quantity_num_2 :unit dollar ) ) ) ) )
find-01 :arg0 ( chef :quant num_0 :age ( temporal-quantity temporal-quantity_num_0 :unit year ) ) :source ( province_name_1 :mod language_name_1 ) :source ( province_name_1 :mod asleep )
reflect :arg0 he :arg1 opposite :manner enthusiasm
and :op1 ( do-02 :arg0 ( person :arg1-of ( ally-01 :arg2 country_name_0 ) ) :arg1 ( putin :mod vladimir ) :arg2 ( ally :mod adjacent ) :arg1-of long-03 ) :op2 ( move-01 :arg0 person :arg1 ( security :mod soviets ) :arg2 kgb ) :arg1-of long-03
multi-sentence :snt1 ( mrd :quant num_0 ) :snt2 ( expect-01 :arg1 ( ready-02 :arg1 ( project :mod pound ) :arg2 ( ready-02 :arg1 project ) :time now ) )
multi-sentence :snt1 ( and :op1 ( watch-01 :arg0 each :arg1 ( person :arg0-of use-01 :mod 35,000 ) ) :op2 ( tell-01 :arg0 each :arg1 ( rate-entity-91 :arg1 ( day :mod together ) :arg2 ( rate-entity-91 :arg1 ( point :quant num_0 :mod human ) :arg2 ( temporal-quantity temporal-quantity_num_0 :unit year ) ) :arg3 ( point :quant ( between :op1 num_0 :op2 num_1 ) ) ) :time ( day :mod together ) ) ) :snt2 ( score-01 :arg1 ( person :arg0-of use-01 ) :arg2 ( point :quant ( point :quant num_0 ) ) :location ( person :arg0-of use-01 ) )
and :op1 ( soaring :arg0 he :arg1 ( point :mod beams ) ) :op2 ( exceed-01 :arg0 he :arg1 this :manner ( let-01 :arg0 he :arg1 ( parterre :quant num_1 ) ) )
possible-01 :arg1 ( do-02 :polarity - :arg0 ( person :mod country_name_0 ) :arg1 this :time ( fire-01 :arg0 person :arg1 huts :time first ) )
let-01 :polarity - :mode imperative :arg0 you :arg1 such
and :op1 ( or :op1 ( sit-01 :polarity - :arg1 ( person :mod country_name_0 ) :arg2 ( temporal-quantity temporal-quantity_num_0 :unit year ) ) :op2 ( crept :polarity - :arg1 person ) ) :op2 ( speak-01 :polarity - :arg0 person :mod even )
multi-sentence :snt1 ( teach-01 :arg0 we :arg1 ( sign-01 :arg0 he :arg1 language ) :arg2 he ) :snt2 ( tell-01 :mode imperative :arg0 you :arg2 newsille )
do-02 :arg0 ( vigil :mod flood ) :arg1 ( force-04 :arg2 saturday ) :time ( until :op1 ( louisiana :mod great :location ( south :part-of strait ) ) )
inspire-01 :arg0 ( and :op1 ( person :arg0-of ( have-org-role-91 :arg1 team :arg3 ( lead-02 :arg0 person ) ) ) :op2 ( person :arg0-of ( have-org-role-91 :arg2 biles ) ) :op3 ( person :arg0-of ( have-org-role-91 :arg2 head-of-state ) ) :op4 ( person :arg0-of ( have-org-role-91 :arg2 head-of-state ) ) :op5 ( person :arg0-of ( have-org-role-91 :arg2 head-of-state ) ) :op6 ( person :arg0-of ( have-org-role-91 :arg2 head-of-state ) ) :op7 ( person :arg0-of ( have-org-role-91 :arg2 head-of-state ) ) :op7 ( person :arg0-of ( have-org-role-91 :arg2 head-of-state ) ) ) :arg1 ( person :arg0-of ( inspire-01 :arg1 ( girl :mod coloured :quant many ) ) ) :location ( here :location ( here :mod also ) ) :ord ( ordinal-entity ordinal-entity_num_0 )
multi-sentence :snt1 ( katolinen :arg0 ( and :op1 ( person :arg0-of ( have-org-role-91 :arg1 ( team :mod this ) :arg2 koostumus ) ) :op2 ( person :arg0-of ( have-org-role-91 :arg2 jew ) ) :op3 ( person :arg0-of ( have-org-role-91 :arg2 head-of-state ) ) :op4 ( person :arg0-of ( have-org-role-91 :arg2 head-of-state ) ) :op5 ( person :arg0-of ( have-org-role-91 :arg2 head-of-state ) ) :op6 ( person :arg0-of ( have-org-role-91 :arg2 head-of-state ) ) :op6 ( person :arg0-of ( have-org-role-91 :arg2 head-of-state ) ) :op6 ( person :arg0-of ( have-org-role-91 :arg2 head-of-state ) ) :op7 ( person :arg0-of ( have-org-role-91 :arg2 head-of-state ) ) ) ) :snt2 ( proud :mode expressive )
superior-01 :arg1 ( thursday :mod each ) :arg2 ( woman :mod ( golden :mod individual ) :mod individual ) :location moniottelu
and :op1 ( walk-01 :arg0 they :destination ( path :mod same :quant all ) ) :op2 ( walk :arg0 they :arg1 ( path :mod same ) ) :op3 ( achieve-01 :arg0 they :arg1 olympiajoukkue ) :op4 ( achieve-01 :arg0 they :arg1 olympiajoukkue )
and :op1 ( let-01 :arg0 ( inspire-01 :arg0 ( team :poss ( team :mod this ) ) ) :arg1 war_name_0 ) :op2 ( begin-01 :arg1 ( eminent :arg1 ( girl :mod this ) ) )
recommend-01 :arg1 ( cause-01 :arg0 ( recommend-01 :arg1 ( possible-01 :arg1 ( increase-01 :arg1 ( ticagreloria :mod tentatively ) ) ) ) :arg1 ( possible-01 :arg1 ( increase-01 :arg0 ( ticagreloria :mod tentatively ) :arg1 ( option :quant multiple :arg1-of ( treat-03 :arg2 ( feasibly :arg1 human :arg2 human ) ) ) ) ) )
worry-02 :arg0 i :arg1 ( worry-02 :arg0 ( institution :mod state ) :arg1 ( correct-02 :polarity - :arg1 ( behave-01 :arg0 ( and :op1 ( institution :mod state ) :op2 ( institution :mod state ) ) :manner political :manner politics :arg1-of ( cause-01 :arg0 ( and :op1 ( correct-02 :arg1 ( thing :arg1-of ( relate-01 :arg2 ( flow-01 :arg1 religion ) ) ) :mod also ) :op2 ( '' :arg1 religion ) ) ) ) ) )
reckon :arg0 ( reckon :name ( name :op1 mac :op2 mac :op3 mac :op4 mac :op5 mac :op6 mac :op7 mac ) ) :arg1 ( microphone :arg0 he ) :time ( begin-01 :arg0 he :arg1 ( share-01 :arg0 he :arg1 ( something :arg1-of ( opine-01 :arg0 ( woman :arg1-of ( opine-01 :arg0 he ) ) ) ) :arg2 ( final :mod final ) ) )
multi-sentence :snt1 ( complain-01 :mode imperative :arg0 you :arg1-of question-01 ) :snt2 ( sorry-01 :arg1 i :arg2 ( see-01 :arg0 i :arg1 ( work-01 :arg1 work-01 ) ) )
and :op1 ( ask-01 :arg0 ( company :arg0-of ( set-02 :medium tv ) ) :arg1 gift-01 :mod also ) :op2 ( publish-01 :arg0 thing :arg1 opine-01 )
speak-01 :arg0 we :arg1 ( and :op1 ( mizrachin :arg1 ( york :name ( name :op1 maga :op2 krav :op3 rhon :op4 rhon :op5 rhon :op6 rhon :op7 ply ) ) ) :op2 ( thing :manner-of ( wielding :arg1 ( robbers :name ( name :op1 rods :op2 ply ) ) :location close-range ) ) )
luck :polarity - :domain ( luck :poss he ) :arg1-of ( cause-01 :arg0 ( leave-11 :polarity - :arg0 he :arg1 he :mod evil :mod evil ) )
and :op1 ( come-01 :arg1 ( person :arg0-of ( have-org-role-91 :arg2 wrightista ) ) :arg4 ( around :op1 world ) :manner well ) :op2 ( eat :arg0 person :arg1 ( matter :arg1-of wonderful-03 :mod also ) :mod also )
and :op1 ( resettled :arg0 family :location elsewhere :time now ) :op2 ( believe-01 :arg1 ( live-01 :arg0 family :location yksityismajoitus ) )
increase-01 :arg1 ( increase-01 :arg1 ( '' :mod arra ) ) :mod also :mod also :arg1-of ( resemble-01 :arg2 ( fall-01 :arg1 machine :arg4 ( under :op1 ( '' :arg1 machine ) ) ) )
result-01 :arg1 ( thing :arg2-of result-01 ) :arg2 ( monetary-quantity monetary-quantity_num_0 :unit euro ) :location ( vuosipuolisko :ord ( ordinal-entity ordinal-entity_num_1 ) )
work-01 :arg0 they :arg1 ( garb :mod civilian ) :mod all
and :op1 ( establish-01 :arg0 ( reform-01 :arg0 country_name_0 ) :arg1 ( and :op1 ( establish-01 :arg0 country :arg1 ( centre :quant num_0 :mod intelligence :mod crime-02 ) ) :op2 ( establish-01 :arg0 country :arg1 ( unit :quant num_0 :mod intelligence :mod ( less :degree so ) ) ) ) ) :op2 ( include-91 :arg1 reform-01 :arg2 ( unit :mod police :poss ( department :mod police ) :poss department ) )
be-located-at-91 :arg2 next :time ( once :op1 ( leave-15 :arg1 thieves ) )
do-02 :arg0 i :arg1 this
face-01 :arg0 ( report :mod news ) :arg1 ( likely-01 :arg1 ( say-01 :arg0 ( thing :arg1-of report-01 :mod news ) :arg1 ( worry-01 :arg0 ( pile :mod bossa ) :arg1 ( pile :mod bossa ) ) ) )
and :op1 ( obligate-01 :arg2 ( tax-01 :arg2 ( thing :arg2-of ( price-01 :arg1 ( thing :arg2-of ( price-01 :arg1 food ) ) ) :mod old ) ) ) :op2 ( obligate-01 :arg2 ( tax-01 :arg3 ( thing :arg2-of ( price-01 :arg1 ( thing :arg2-of ( price-01 :arg1 ( thing :arg2-of ( price-01 :arg1 ( thing :arg2-of ( price-01 :arg1 ( thing :arg2-of ( price-01 :arg1 ( thing :arg2-of ( price-01 :arg1 ( thing :arg2-of ( price-01 :arg1 ( thing :arg2-of ( price-01 :arg1 ( thing :arg2-of ( price-01 :arg1 ( thing :arg2-of ( price-01 :arg1 ( thing :arg2-of ( price-01 :arg1 ( thing :arg2-of ( price-01 :arg1 ( thing :arg2-of ( price-01 :arg1 ( thing :arg2-of ( price-01 :arg1 ( thing :arg2-of ( price-01 :arg1 ( thing :arg2-of ( price-01 :arg1 ( thing :arg2-of ( price-01 :arg1 ( thing :arg2-of ( price-01 :arg1 ( thing :arg2-of ( price-01 :arg1 ( thing :arg2-of ( price-01 :arg1 food ) ) ) ) ) ) ) ) ) ) :mod old :mod old ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) :time final ) ) )
start-01 :arg0 ( person :mod country_name_0 ) :arg1 ( efficient-01 :arg1 person ) :time ( early :degree more ) :arg1-of ( cause-01 :arg0 ( have-purpose-91 :arg1 ( achieve-01 :arg0 person :arg1 ( monetary-quantity monetary-quantity_num_0 :unit euro ) :arg2 ( monetary-quantity monetary-quantity_num_1 :unit euro ) ) ) )
expect-01 :arg1 ( positive :domain ( amend-01 :arg1-of amend-01 ) :time ( year :mod this ) )
place :arg1-of empty-02 :mod forenoon :location ( place :arg1-of empty-02 )
and :op1 ( mean-01 :arg2 num_0 :arg1 ( day :mod each ) ) :op2 ( helsing :quant ( some :op1 num_1 :mod only ) ) :time ( year :mod each )
and :op1 ( take-01 :arg0 they :arg1 ( more :mod also ) :mod also ) :op2 ( announce-01 :arg0 ( person :source victim :arg1-of ( announce-01 :arg0 victim ) ) :arg1 ( person :arg0-of steal-01 ) :mod only )
and :op1 ( drawn :arg1 ( ice :part-of ( thieves :name ( name :op1 thieves :op2 thieves ) ) ) :frequency ( rate-entity-91 :arg3 ( temporal-quantity temporal-quantity_num_0 :unit week ) ) :arg3 ( or :op1 action :op2 ( work-01 :arg0 police ) ) ) :op2 ( tell-01 :arg0 ( person :mod old :arg0-of ( have-org-role-91 :arg2 head-of-state ) ) :arg1 ( constable :mod old :mod constable ) )
oppose-01 :arg0 he :arg1 ( vapaakauppasopimus :location city_name_0 ) :time current :arg1-of ( cause-01 :arg0 support-01 )
multi-sentence :snt1 ( reason :ord ( ordinal-entity ordinal-entity_num_0 ) :arg0-of ( cause-01 :arg1 ( interest :mod lukewarm ) ) :arg0-of ( cause-01 :arg1 ( obligate-01 :arg2 ( do-02 :arg0 ( person :mod country_name_0 ) :arg1 ( reason :mod ( traditional :mod certain ) ) :condition ( obligate-01 :arg2 ( take-01 :arg1 ( game :mod ( surprise-01 :mod any ) ) ) ) ) ) ) ) :snt2 ( pompsahtanut :arg1 interest-01 )
have-03 :arg0 apply-01 :arg1 ( time :quant num_0 )
tense :arg1-of ( resemble-01 :arg2 ( thing :arg1-of ( tax-01 :arg3 ( tax-01 :arg3 tax ) ) ) )
say-01 :arg0 person_name_0 :arg1 ( come-04 :arg1 ( thing :arg1-of voluntary-02 :mod that ) :arg2 ( thing :arg1-of ( tax-01 :arg3 ( thing :arg1-of ( see-01 :arg0 ( thing :arg1-of ( see-01 :arg0 ( thing :arg1-of ( tax-01 :arg3 tax ) ) ) ) ) ) ) ) :mod also )
let-01 :arg0 ( embassy :poss country_name_0 ) :arg1 ( finnish :arg0 ( thing :arg1-of comment-01 :mod something ) :arg1 ( thing :arg1-of comment-01 :mod something ) :path ( scent :mod pommi-isku ) )
try-01 :arg0 embassy :arg1 ( aspire :arg0 embassy :arg1 ( hinissa :mod particular :arg0-of ( let-01 :arg1 ( situation :poss ( city :mod information ) ) ) ) )
do-02 :arg0 ( and :op1 ( woman :arg1-of local-02 ) :op2 ( woman :arg1-of local-02 ) :quant ( over :op1 num_0 ) ) :arg1 ( person :arg0-of tour-01 :mod foreign :quant ( num_1 :mod anyway ) )
worry-02 :polarity - :arg0 ( office :name ( name :op1 phuket :op2 real-estate ) :mod business :poss country_name_0 ) :arg1 ( property :arg1-of ( same-01 :arg2 ( property :arg1-of ( run-01 :arg0 club ) :arg0-of ( run-01 :arg1 ( esa :name ( name :op1 esa ) :arg0-of ( run-01 :arg1 club ) ) ) ) ) ) :arg4 tourism :mod also
lie-07 :arg1 ( office :poss ( person :arg0-of ( have-org-role-91 :arg2 ( office :mod company_name_0 ) ) ) ) :arg2 ( harvests :quant few :location ( place :location-of explode-01 ) )
achieve-01 :arg0 ( thing :arg1-of ( same-01 :arg2 ( thing :arg1-of ( achieve-01 :arg0 ( thing :ord ( ordinal-entity ordinal-entity_num_0 ) :arg1-of ( same-01 :arg2 ( thing :arg1-of ( achieve-01 :arg0 ( thing :ord ( ordinal-entity ordinal-entity_num_0 ) ) ) ) ) ) ) ) ) ) :arg1 ( neljÃ¤s :arg1-of succeed-03 ) :time ( thing :arg1-of same-01 )
have-concession-91 :arg1 ( have-polarity-91 :arg2 - )
and :op1 ( arrest-01 :arg1 ( person :quant ( bit :polarity - ) :mod other ) ) :op2 ( arrest-01 :arg1 ( person :quant num_0 ) :time ( before :op1 ( multivitamin :domain this ) ) )
site :location ( along :op1 terrorism ) :location ( along :op1 terrorism ) :arg1-of ( cause-01 :arg0 ( suppress-01 :arg0 person :arg1 ( person :arg1-of ( hear-01 :arg0 person :arg2 ( group :arg1-of same-01 ) :time already :time already ) ) ) )
violate-01 :arg0 tuula :arg1 palpably
prove-01 :arg0 ( matter :mod this ) :arg1 ( and :op1 ( afferent :arg1 ( life :poss person ) ) :op2 ( live-01 :arg0 person :duration ( temporal-quantity temporal-quantity_num_0 :unit year ) ) )
multi-sentence :snt1 ( forssa :arg0 i :arg1-of ( direct-02 :polarity - ) ) :snt2 ( directly :arg0 i :arg1-of ( cause-01 :arg0 ( hit-01 :arg0 ( thing :arg1-of ( respond-01 :arg0 i ) ) :arg1 ( right :poss lorry ) ) ) )
multi-sentence :snt1 ( congestion :polarity - :arg1 joll :mod so ) :snt2 ( sign-up-03 :arg1 i )
and :op1 ( -rrb- :arg0 ( person :arg0-of ( have-org-role-91 :arg2 ( minister :mod foreign ) ) ) :arg1 ( person :arg0-of ( have-org-role-91 :arg2 ( minister :mod foreign ) ) ) :arg2 ( person :arg0-of ( have-org-role-91 :arg2 ( minister :mod foreign ) ) ) :mod also ) :op2 ( do-02 :arg0 ( person :arg0-of ( have-org-role-91 :arg2 ( minister :mod foreign ) ) ) :arg1 ( person :arg0-of ( have-org-role-91 :arg2 ( minister :mod foreign ) ) ) :arg2 ( person :arg0-of ( have-org-role-91 :arg2 ( minister :mod foreign ) ) ) :mod also )
multi-sentence :snt1 ( ask-02 :arg0 ( person :arg0-of ( have-org-role-91 :arg1 person_name_0 ) ) :arg1 ( transfer-01 :arg0 person :arg1 ( task :ord ( ordinal-entity ordinal-entity_num_0 ) ) :arg2 ( task :ord ( ordinal-entity ordinal-entity_num_0 ) ) :mod also ) ) :snt2 ( tell-01 :arg0 country_name_1 :time today )
tell-01 :arg0 ( detonate :mod this ) :arg1 ( and :op1 ( begin-01 :arg0 you :arg1 ( leave-11 :arg0 you ) ) :op2 ( resume-01 :arg0 you :arg1 hotel ) :op3 ( tell-01 :arg0 ( person :arg0-of ( represent-01 :arg1 police ) :mod police ) :arg1 ( cnn :arg0 ( person :arg0-of ( represent-01 :arg1 police ) ) :arg1 ( person :arg0-of ( represent-01 :arg1 police ) ) ) ) ) :time ( time :arg1-of same-01 )
be-located-at-91 :arg1 ( bomb :quant num_0 :arg1-of local-02 ) :arg2 ( bomb :quant num_0 :location surat ) :time ( morning :mod next )
tell-01 :arg1 ( war-01 :arg2 ( situation :prep-in situation ) ) :arg2 ( mission :mod combat-01 :time ( after :op1 ( cheat-03 :arg0 ( person :arg0-of ( have-org-role-91 :arg2 head-of-state ) ) :arg1 ( person :arg0-of ( have-org-role-91 :arg2 head-of-state ) ) ) :quant ( multiple :op1 ( temporal-quantity temporal-quantity_num_0 :unit month :mod just ) ) ) )
superior-01 :arg1 ( and :op1 ( person :arg0-of ( have-rel-role-91 :arg1 he :arg2 husband :time former ) ) :op2 ( person :arg0-of ( have-rel-role-91 :arg1 he :arg2 husband :time former ) ) :op3 ( person :arg0-of ( have-rel-role-91 :arg1 he :arg2 husband :time former ) ) :op4 ( person :arg0-of ( have-rel-role-91 :arg1 he :arg2 husband :time former ) ) :op5 ( person :arg0-of ( have-rel-role-91 :arg1 he :arg2 husband :time former ) ) :op6 ( person :arg0-of ( have-rel-role-91 :arg1 he :arg2 husband :time former ) ) :op7 ( person :arg0-of ( have-rel-role-91 :arg1 he :arg2 husband :time former ) ) :op7 ( person :arg0-of ( have-rel-role-91 :arg1 he :arg2 husband :time former ) ) )
tell-01 :arg0 ( person :arg0-of sell-01 :mod besides ) :arg1 ( tell-01 :arg0 person :arg1 ( monetary-quantity monetary-quantity_num_0 :unit euro ) :arg2 ( person :arg0-of sell-01 ) :mod also ) :arg2 ( person :arg0-of sell-01 )
obligate-01 :arg1 woman :arg2 ( and :op1 ( abandon-01 :arg0 woman :arg1 ( citizenship :poss ( person :arg0-of ( have-org-role-91 :arg2 head-of-state ) ) ) ) :op2 ( give-01 :arg0 woman :arg1 ( thing :arg2-of recommend-01 :mod good ) :arg2 ( thing :arg2-of recommend-01 :mod good ) ) ) :mod also
tell-01 :arg1 ( resemble-01 :polarity - :arg1 ( thing :arg1-of ( resemble-01 :arg2 ( thing :arg1-of ( resemble-01 :arg2 ( thing :arg1-of ( resemble-01 :arg2 ( thing :arg1-of ( resemble-01 :arg2 ( thing :arg1-of ( resemble-01 :arg2 ( thing :arg1-of ( resemble-01 :arg2 ( thing :arg1-of ( word-01 :arg0 ( song :mod ( commissioned :polarity - ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) :arg2 ( thing :arg1-of ( resemble-01 :arg2 sillanpÃ¤Ã¤ ) ) ) :arg2 book
work-01 :arg0 they :mod this
and :op1 ( coordinate-01 :arg1 ( education :arg1-of ( do-02 :arg2 ( name :op1 customs :op2 koirakoulu ) ) ) :time to-date ) :op2 ( coordinate-01 :arg1 educate-01 )
exchange-01 :arg1 ( exchange-01 :arg1 iceland ) :arg2 ( government-organization :arg0-of govern-01 )
multi-sentence :snt1 ( say-01 :arg1 ( express-01 :arg0 they :arg1 ( express-01 :arg0 they :arg1 ( linkages :mod religious ) ) ) :mod also ) :snt2 ( target-01 :arg0 each :arg1 ( thing :arg1-of target-01 ) )
and :op1 ( end-01 :arg1 ( rate-entity-91 :arg1 num_0 :arg2 ( temporal-quantity temporal-quantity_num_0 :unit year ) ) :arg1-of organize-01 :time final ) :op2 ( kill-01 :arg1 ( man :quant ( over :op1 num_1 ) :arg1-of ( age-01 :arg2 ( temporal-quantity temporal-quantity_num_0 :unit year ) ) ) )
phone-number-entity phone-number-entity_num_0
concern-01 :arg0 model :arg1 he :mod ( small :mod only ) :arg1-of ( cause-01 :arg0 ( concern-01 :arg0 model :arg1 he ) )
come-01 :arg1 ( car :mod country_name_0 :mod country_name_1 ) :arg4 ( and :op1 ( lead-02 :arg0 car ) :op2 ( aircraft :mod country ) :op3 ( ship :mod country ) ) :purpose ( monitor-01 :arg0 car :location ( anywhere :location ( country :location country :mod new ) ) )
start-01 :arg0 he :time ( before :op1 ( birth-01 :arg1 ( person :arg0-of ( have-rel-role-91 :arg1 he :arg2 father ) ) ) ) :time ( meet-03 :arg0 he :arg1 ( person :arg0-of ( have-rel-role-91 :arg1 ( person :arg0-of ( have-rel-role-91 :arg2 father :time future ) :arg0-of ( have-rel-role-91 :arg2 father ) ) :arg2 ( -rrb- :name ( name :op1 grao :op2 grao ) ) :time future ) ) )
determine-01 :arg0 they :arg1 ( thing :quant num_0 :arg1-of ( save-01 :arg0 they ) ) :time already
rate-entity-91 :arg1 num_0 :arg6 num_1 :arg2 ( temporal-quantity temporal-quantity_num_0 :unit year )
phone-number-entity phone-number-entity_num_0
hear-01 :arg0 ( person :mod each :arg0-of ( have-org-role-91 :arg2 head-of-state ) :arg1-of local-02 :location ( in-front-of :op1 ( front :name ( name :op1 essi :op2 essi ) :location ( in-front-of :op1 ( value-interval :op1 num_0 :op2 essi ) ) ) ) ) :arg1 ( volley :mod finland ) :time ( from :op1 ( lead-01 :arg0 i :duration ( multiple :op1 ( temporal-quantity temporal-quantity_num_0 :unit year ) ) ) )
contrast-01 :arg1 ( move-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg2 anime ) ) :arg1 ( source :mod inspirations ) :arg2 thing_name_0 ) :arg2 ( person :arg0-of observe-01 :mod racist )
simple-02 :arg1 ( skill :mod wring :arg1-of ( mean-01 :arg2 ( produce-01 :arg0 they :arg1 ( dinner :quant ( over :op1 num_0 ) :arg1-of improve-01 ) ) ) ) :arg1-of simple-02
multi-sentence :snt1 ( and :op1 ( give-01 :arg0 each :arg1 ( eye :part-of ( person :arg0-of use-01 ) ) :arg2 ( eye :part-of ( person :arg0-of use-01 ) ) ) :op2 ( rotund :arg1 ( tooth :part-of person ) :mod also ) ) :snt2 ( call-01 :arg0 ( person :arg0-of criticize-01 :mod any ) :arg1 ( racist :mod such ) :arg2 ( face :part-of ( human :mod continent_name_0 ) ) :arg0-of ( cause-01 :arg1 yellowfaceksi ) ) :time ( week :mod this )
ban-01 :arg0 they :manner compare-01 :ord ( ordinal-entity ordinal-entity_num_0 )
multi-sentence :snt1 ( increase-01 :arg1 ( claim-01 :arg0 he ) ) :snt2 ( difficult :domain ( claim-01 :arg0 ( person :arg0-of '' ) :arg1 ( compare-01 :arg0 person :arg1 ( thing :arg1-of ( effect-03 :arg0 ( caricature :arg0 ( continent_name_0 :arg1-of gross-03 :mod humanitarian ) :mod also ) ) ) ) ) )
say-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg1 ( person_name_0 :age ( temporal-quantity temporal-quantity_num_0 :unit year ) :arg0-of ( have-org-role-91 :arg2 zhu ) ) :arg2 zhu ) ) :arg1 ( difficult :domain ( do-02 :arg0 ( and :op1 ( person :arg0-of ( use-01 :arg1 ( picture :arg1-of ( guilty-01 :polarity - ) ) ) ) :op2 ( person :arg0-of ( have-org-role-91 :arg2 zhu ) ) :op3 ( person :arg0-of ( have-org-role-91 :arg2 zhu ) ) :op4 ( person :arg0-of ( have-org-role-91 :arg2 zhu ) ) :op5 ( person :arg0-of ( have-org-role-91 :arg2 zhu ) ) ) :arg1 ( difficult :mod subtlety ) :time ( prior :op1 snapchatin ) ) ) :medium ( interview-01 :arg1 person )
and :op1 ( transport-01 :arg0 he :arg1 ( field :arg1-of long-03 ) :time ( before :op1 now :quant long ) ) :op2 ( take-01 :arg0 he :arg1 ( leaderships :quant num_0 :mod country_name_0 ) ) :time ( before :op1 now :quant long )
silent :arg0 ( street :location city ) :arg1-of typical-02 :mod also
and :op1 ( use-01 :arg0 you :arg1 ( journalist :mod same :arg1-of same-01 ) ) :op2 ( buy-01 :arg0 you :arg1 ( machine :mod espresso :arg1-of buy-01 ) )
say-01 :arg0 he :arg1 ( need-01 :arg0 ( person :mod country_name_0 ) :arg1 ( let-01 :arg0 person :arg1 ( smell :arg0 person :arg1 ( '' :mod that ) ) ) )
and :op1 ( eat-01 :arg0 ( recession-02 :quant many ) :arg1 ( way :mod right ) :time early ) :op2 ( reach-01 :arg0 recession-02 :arg1 ( foot :mod old ) )
contrast-01 :arg1 ( manage-01 :arg0 ( city :mod '' ) :arg1 manage-01 :degree total :time now ) :arg2 ( and :op1 ( examine-01 :arg0 city :arg1 ( '' :mod that ) ) :op2 ( tell-01 :arg0 he :arg2 reuters ) )
appeal-02 :arg0 ( businessman :name ( name :op1 trumps :op2 trumps ) :mod new :mod country_name_0 ) :arg1 ( reason :arg0-of ( cause-01 :arg1 ( spread-03 :arg1 ( thing :arg0-of ( cause-01 :arg1 ( spread-03 :arg1 declarations ) ) ) ) ) ) :arg2 lawyer
write-01 :arg0 i
have-concession-91 :arg1 ( hopeful-03 :arg0 ( person :arg0-of ( have-org-role-91 :arg2 ambassador ) ) :manner consistent :time ( before :op1 now :quant ( few :op1 ( temporal-quantity temporal-quantity_num_0 :unit month ) ) ) ) :arg2 ( same-01 :arg1 ( visit-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg2 ambassador ) ) :arg1 country_name_0 ) )
multi-sentence :snt1 ( mean-01 :arg1 ( and :op1 ( do-02 :arg0 each :arg1 ( temporal-quantity temporal-quantity_num_0 :unit year ) :mod exact ) :op2 ( born :arg0 each ) ) :arg2 ( do-02 :arg0 each :arg1 ( product-of :op1 num_0 :op2 ( temporal-quantity temporal-quantity_num_1 :unit year ) :mod exact ) ) ) :snt2 ( -lrb- :arg0 each :arg1 ( sport :poss country_name_0 ) :mod also ) :snt3 ( -lrb- :arg0 ( and :op1 country_name_1 :op2 country_name_2 ) :arg1 ( and :op1 redgraven :op2 ( birthday :name ( name :op1 mo ) ) ) :mod also :mod also )
presence :mod lemonaden :time ( year :mod past ) :location ( along :op1 ( career :mod some :arg1-of strong-02 ) )
multi-sentence :snt1 ( and :op1 ( let-01 :arg0 ( company :arg0-of ( have-03 :arg1 ( money :source ( and :op1 ( company :arg0-of ( have-org-role-91 :arg2 head-of-state ) ) :op2 ( person :arg0-of ( prevent-01 :arg1 programme ) ) :op3 ( person :arg0-of ( prevent-01 :arg1 programme ) ) :op4 ( person :arg0-of ( prevent-01 :arg1 programme ) ) :op5 ( person :arg0-of ( prevent-01 :arg1 programme ) ) ) ) ) ) :arg1 ( cat :name ( name :op1 '' ) ) :mod also :mod also ) ) :snt2 ( say-01 :arg0 i :arg1 ( some :mod such ) :arg2 ( company :mod preparative ) )
phone-number-entity phone-number-entity_num_0
argue-01 :arg0 ( thing :arg1-of ( list-01 :arg2 ( rate-entity-91 :arg1 ( under :op1 ( temporal-quantity temporal-quantity_num_0 :unit minute ) ) :arg2 ( temporal-quantity temporal-quantity_num_1 :unit minute ) ) ) ) :arg1 ( convey-01 :arg0 they :manner slow :arg1-of ( resemble-01 :arg2 ( asters :mod massive :degree less ) ) )
and :op1 ( describe-01 :arg0 they :arg1 ( plejadien :mod last ) :arg2 ( rate-entity-91 :arg1 ( article :quant num_0 ) :arg2 ( temporal-quantity temporal-quantity_num_0 :unit minute ) ) ) :op2 ( publish-01 :arg0 he :arg1 ( article :quant num_0 :arg1-of ( publish-01 :time soon ) :arg1-of ( publish-01 :time soon :location graphic ) ) )
lead-03 :arg0 ( media :mod state-controlled ) :arg2 ( astonishing :arg1 ankara ) :duration ( multiple :op1 ( temporal-quantity temporal-quantity_num_0 :unit month ) )
absorbs :arg0 person_name_0 :arg1 ( hurrauksia :mod taluttaa ) :time ( raise-01 :arg0 person :arg1 issue-02 :time ( after :op1 win-01 ) )
work-09 :arg1 it :manner amr-unknown
phone-number-entity phone-number-entity_num_0
and :op1 ( break-up-08 :arg1 he :arg3 ( tears :arg0 he ) ) :op2 ( close-01 :arg1 ( journey :arg0 he :arg1-of long-03 ) :time ( moment :mod this ) )
bring-01 :arg0 we :arg1 ( and :op1 ( person :arg0-of ( live-01 :location community ) :arg0-of ( live-01 :location community ) ) :op2 ( person :arg0-of ( live-01 :location community ) ) :op3 ( person :arg0-of ( live-01 :location community ) :quant many ) ) :arg2 ( person :arg0-of ( live-01 :location community ) )
and :op1 ( transfer-01 :arg1 progress-01 :time ( before :op1 ( transfer-01 :arg1 ( group :consist-of doctor :ord ( ordinal-entity ordinal-entity_num_0 ) ) :arg2 ( agree-01 :mod new ) ) ) :time ( transfer-01 :arg1 ( group :ord ( ordinal-entity ordinal-entity_num_0 ) :consist-of doctor ) ) ) :op2 ( obligate-01 :arg2 ( make-05 :arg1 progress-01 ) )
block-01 :arg0 ( hyytymistÃ¤ :mod blood ) :arg1 ( medicine :name ( name :op1 ticagrelor ) ) :purpose ( reduce-01 :arg0 hyytymistÃ¤ :arg1 ( risk-01 :arg2 ( scenes :mod heart ) ) )
possible-01 :arg1 ( cause-01 :arg0 it :arg1 ( verihyytymÃ¤n :arg1 ( heart :part-of heart ) :arg0-of ( cause-01 :arg1 ( attack-01 :mod heart ) ) ) ) :condition ( expend-01 :arg0 i )
make-01 :arg0 he :arg1 ( cause-01 :arg0 ( vote-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg1 ( community :mod religious-group_name_0 ) :arg2 member :arg1-of ( rank-01 :arg1-of high-02 ) ) ) ) :arg1 ( vote-01 :arg0 person :arg1 ( candidate :poss ( choose-01 :arg0 person ) ) ) ) :arg1-of specific-02
resemble-01 :arg1 ( and :op1 kasvonmuoto :op2 eye ) :arg2 ( and :op1 kasvonmuoto :op2 eye ) :mod indeed :mod indeed :mod indeed
and :op1 ( stand-01 :arg1 woman :arg2 ( middle :part-of ( floor :mod trade-01 ) ) ) :op2 ( take-01 :arg0 woman :arg1 ( couple :arg0-of ( sukkahousunsa :arg1 sukkahousunsa ) :poss couple ) ) :op3 ( put-01 :arg0 woman :arg1 couple :arg2 foot ) :op4 ( solve-01 :arg0 woman :arg1 foot )
and :op1 ( heittelimme :arg1 ( idea :mod ( crazy-03 :arg1 air ) :quant lot ) ) :op2 ( come-up-11 :arg0 we :arg1 ( idea :topic ( ianille :name ( name :op1 ' :op2 soitetaanpa :op3 ianille ) ) ) )
vow-01 :arg0 ( person :mod country_name_0 ) :arg1 ( varusmiestÃ¤ :quant num_0 )
direct-01 :arg1 ( and :op1 analysoiman :op2 ( help-01 :arg1 ( gather-03 :duration day ) ) ) :arg2 ( location :location-of ( need-01 :arg1 ( thing :arg1-of need-01 :quant most ) ) )
possible-01 :arg1 ( or :op1 ( do-02 :arg1 ( sarjoittamista :mod either ) ) :op2 ( base-02 :arg1 person :arg2 person ) :arg0-of ( depend-01 :arg1 ( information :mod more :domain one :beneficiary police ) ) )
contrast-01 :arg1 ( go-02 :polarity - :arg0 ( person :arg0-of work-01 :mod rta-service ) :arg4 town ) :arg2 ( julkistakaan :polarity - :arg1 ( work-01 :arg0 person ) :degree entire )
and :op1 ( age-01 :arg1 he :arg2 ( temporal-quantity temporal-quantity_num_0 :unit year ) ) :op2 ( say-01 :arg0 ( family :arg1-of ( have-org-role-91 :arg0 he :arg2 member ) ) :arg1 ( die-01 :arg1 he :time ( plan-01 :arg0 they :arg1 ( depart-01 :arg0 they :arg2 ( country :location military_name_0 ) ) ) ) :mod just )
foppissa :arg1 ( foppissa :quant ( entire :mod almost ) ) :time ( arrive-01 :arg1 i :arg4 ( audience :mod ( diverse :degree ( more :degree much ) ) ) ) :time now
do-02 :arg0 he :arg1 ( do-02 :polarity - :arg0 he :arg1 ( money :quant much ) )
say-01 :arg0 ( thing :arg1-of ( send-01 :arg2 ( name :op1 amsterdam ) ) ) :arg1 ( disaster :domain ( closure :arg1 ( '' :mod amsterdam ) ) :beneficiary ( person :mod this :quant some :arg1-of ( age-01 :arg2 ( temporal-quantity temporal-quantity_num_0 :unit year :mod only ) ) ) ) :medium ( letter :arg1-of ( send-01 :arg2 person_name_0 ) )
and :op1 ( fall-01 :arg1 ( thing :arg2-of ( price-01 :arg1 food ) ) :arg2 country_name_0 :time ( year :mod last ) ) :op2 ( fall-01 :arg1 ( thing :arg2-of ( price-01 :arg1 food ) ) :arg4 ( country :arg0-of ( have-03 :arg1 ( rate :arg1-of ( resemble-01 :arg2 ( rate :arg1-of ( pay-01 :arg3 ( rate :arg1-of pay-01 ) ) ) ) ) ) ) ) :time ( year :mod last )
contrast-01 :arg1 ( hotbed :arg1 food ) :arg2 ( cheap-02 :polarity - :arg1 food :mod still :concession ( decline-01 :arg1 ( thing :arg2-of ( price-01 :arg1 food ) ) :manner abundance ) )
turned :arg1 ( rout :mod sharks :arg1-of average-03 ) :time ( after :op1 now :quant ( at-least :op1 ( temporal-quantity temporal-quantity_num_0 :unit year ) ) )
begin-01 :arg1 ( tehokkuusohjelman :arg1-of ( design-01 :arg3 ( achieve-01 :arg1 ( thing :arg1-of ( save-01 :time ( year :mod this ) ) ) ) ) ) :time already
deficit :quant num_0 :time ( year :mod last ) :location ( across :op1 ( product-of :op1 num_0 :op2 whole ) )
and :op1 ( be-located-at-91 :arg1 ( and :op1 ( cup :mod world ) :op2 ( cup :mod world ) ) :arg2 ( way :ord ( ordinal-entity ordinal-entity_num_0 ) ) :time ( year :mod last ) :location ( cup :mod world ) ) :op2 ( be-located-at-91 :arg1 and :arg2 ( under :op1 rio ) )
be-located-at-91 :arg1 amr-unknown :arg2 all
right :mode interrogative :domain all
want-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg1 country_name_0 :arg2 member ) ) :arg1 ( channelled :arg1 ( money :poss party ) ) :arg1-of ( instead-of-91 :arg2 campaign-01 )
possible-01 :arg1 ( prevent-01 :arg0 ( koristeinen :name ( name :op1 trumps :op2 koristeinen :op3 koristeinen :op4 koristeinen :op5 koristeinen ) ) :arg1 ( anchored :mod trumps ) :time immediate :arg1-of possible-01 :mod only )
multi-sentence :snt1 ( possible-01 :arg1 ( get-01 :arg0 ( network :name ( name :op1 '' ) ) :arg1 ( thing :mod this ) :time ( until :op1 ( late :degree more ) ) ) ) :snt2 pokkinen
say-01 :arg0 ( agency_name_0 :mod news ) :arg1 ( and :op1 ( rule-out-02 :arg0 ( terrorism :mod religious-group_name_0 ) :arg1 ( terrorism :mod religious-group_name_1 ) ) :op2 ( tell-01 :arg0 ( police :mod country_name_2 ) :arg1 terrorism ) )
injure-01 :arg1 ( person :quant ( at-least :op1 num_0 ) ) :arg1-of ( cause-01 :arg0 attack-01 ) :location net
state :arg0-of crash-01
dominate-01 :arg0 ( awash :poss woman ) :arg1 biles :time ( before :op1 now :duration ( few :op1 ( temporal-quantity temporal-quantity_num_0 :unit year ) ) )
concern-01 :polarity - :arg0 ( attack-01 :arg1 ( and :op1 ( person :arg0-of ( have-rel-role-91 :arg2 child ) ) :op2 ( person :arg0-of ( have-rel-role-91 :arg1 person :arg2 child ) ) :op3 ( person :arg0-of ( have-rel-role-91 :arg1 person :arg2 child ) ) :op4 ( person :arg0-of ( have-rel-role-91 :arg1 person :arg2 child ) ) :op5 ( person :arg0-of ( have-rel-role-91 :arg1 person :arg2 child ) ) ) ) :arg1 ( impact-01 :arg0 ( attack-01 :arg1 tourism ) :arg1 tourism )
boltin :name ( name :op1 olympianÃ¤ytÃ¶s :op2 begins :op3 begins :op4 begins :op5 begins :op6 begins :op7 begins )
report-01 :arg0 research-institute_name_0 :arg1 ( give-01 :arg0 ( danekova :name ( name :op1 naisestejuoksija :op2 silvia ) ) :arg1 ( sign :arg1-of ( include-91 :arg2 ( sign :arg0-of ( signal-07 :arg1 epo ) ) ) :quant ( multiple :op1 num_0 ) ) )
contrast-01 :arg1 ( oppose-01 :arg0 ( person :mod country_name_0 ) :arg1 ( want-01 :arg0 person :arg1 sÃ¤vÃ¤yttÃ¤Ã¤ ) ) :arg2 ( stress-01 :arg0 person :arg1 ( want-01 :polarity - :arg0 person :arg1 ( person :arg0-of play-01 :mod main :domain person ) ) )
same-01 :arg1 police :arg2 ( and :op1 ( arrest-01 :arg1 ( person :quant num_0 :mod other ) ) :op2 ( arrest-01 :arg1 ( person :quant num_1 ) :time ( before :op1 ( release-01 :arg1 person ) ) ) )
and :op1 ( package :domain police ) :op2 ( leaking :arg1 police :arg2 ( halliin :arg1-of public-02 ) :time ( until :op1 then ) )
say-01 :arg1 ( and :op1 ( leave-11 :arg0 he :arg1 ( thing :arg2-of ( result-01 :arg1 ( and :op1 kolari :op2 ( karkasivat :mod other ) ) ) ) ) :op2 ( say-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg1 ( wilenius :name ( name :op1 finnish ) ) :arg2 wilenius ) ) :arg1 he ) ) :arg2 stranded
say-01 :arg0 study :arg1 ( possible-01 :arg1 ( extend-01 :arg0 ( use-01 :arg1 hammaslangan :arg1-of regular-02 ) :arg1 ( life :poss person ) ) )
get-01 :arg0 we :arg1 ( load :quant more ) :time ( receive-01 :arg0 mail )
post :arg0 ( post :name ( name :op1 kuljetuspalvelujen :op2 kuljetuspalvelujen ) ) :arg1 ( damage-01 :arg1 ( business :arg0-of ( responsible-01 :arg1 ( sanomille :time evening ) ) ) )
multi-sentence :snt1 ( hard-02 :arg1 motivation ) :snt2 ( hehkuttaa :quant num_0 )
tell-01 :arg1 review-01 :arg2 ( and :op1 ( do-02 :arg0 victim :arg1 ( standing :mod elÃ¤inlÃ¤Ã¤kÃ¤riasemalla :mod sipoon ) :purpose work-01 ) :op2 ( carry-out-03 :arg0 victim :location ( out :op1 there ) :mod also ) )
report-01 :arg0 person :arg1 news :time first
contrast-01 :arg1 ( possible-01 :arg1 ( megalomaniac :arg0 i :degree little ) :arg1-of possible-01 ) :arg2 ( possible-01 :arg1 ( maintain-01 :arg0 we :arg1 ( flow-01 :arg1 ( live-01 :arg0 we :arg1-of ( cause-01 :arg0 risk-01 ) ) ) :time ( time :arg1-of same-01 ) ) :time ( time :arg1-of same-01 ) )
tell-01 :arg0 police :arg1 ( find-01 :arg0 police :arg1 ( bomb :quant ( at-least :op1 num_0 ) :arg0-of ( have-03 :polarity - :arg1 time :time yet ) ) :arg1-of report-01 ) :arg2 person_name_0 :arg1-of report-01
use-01 :arg1 ( action :mod military ) :time already :condition need-01 :condition need-01
possible-01 :arg1 ( contaminated :arg1 ( house :mod lÃ¤nsipuolella :location air ) :arg2 ( estimate-01 :arg1 ( get-05 :arg2 ( inside :op1 inside ) ) :mod too ) )
say-01 :arg0 ( court :mod appeal-01 ) :arg1 ( neglected :polarity - :arg1 ( person :arg0-of buy-01 ) ) :medium ( rule-01 :arg0 court )
have-concession-91 :arg1 ( guess-01 :polarity - :arg0 i :arg1 ( obligate-01 :arg2 ( laulettu :polarity - :arg1 initiative ) ) :time immediate ) :arg2 ( valtaiseksi :mod substantial :mod substantial )
and :op1 job :op2 house-01 :op3 ( service :arg1-of public-02 ) :domain they
contrast-01 :arg1 ( fund :polarity - :mod massive :mod massive :arg1-of normal-02 ) :arg2 ( possible-01 :arg1 ( need-01 :arg1 thing ) :time now )
estimate-01 :arg0 he :arg1 ( or :op1 ( fall-01 :arg1 ( fund :arg1-of ( fund-01 :arg0 low-04 ) :mod this ) :arg2 ( percentage-entity percentage-entity_num_0 ) ) :op2 ( less :degree ( less :mod even ) ) )
contrast-01 :arg1 ( close-01 :polarity - :arg0 they :arg1 trade-01 :mod actual ) :arg2 ( change-01 :arg0 they :arg1 ( thing :arg2-of price-01 ) )
live-01 :arg0 ( city :arg0-of ( have-org-role-91 :arg2 head-of-state ) ) :degree full :concession ( live-01 :arg0 city )
and :op1 ( fall-01 :arg1 pound ) :op2 ( go-02 :arg0 ( leadership :mod country_name_0 ) :arg4 exchange-01 )
use-01 :arg1 data :arg2 ( market-01 :arg1-of target-01 )
collect-01 :arg0 ( ostotietoja :name ( name :op1 tuotekohtaisia ) ) :arg1 ( k-group :poss ostotietoja :mod only )
and :op1 ( receive-01 :arg0 ( person :mod country_name_0 ) :arg1 ( ordinal-entity ordinal-entity_num_0 ) ) :op2 ( get-01 :arg0 person :arg1 holiday )
and :op1 ( card :name ( name :op1 trumps :op2 trumps ) :domain aurora ) :op2 ( link-01 :arg1 they :arg2 ( and :op1 ( sydÃ¤ntalveen :arg1-of strong-02 ) :op2 ( landscapes :mod lumisiin ) ) )
lured :arg1 ( thing :arg2-of ( include-91 :arg1 ( thing :mod other ) ) :arg2-of total-01 ) :arg2-of total-01
change-01 :arg0 it :arg1 ( bit :mod little )
email-address-entity :value iceland :domain ( exchange-01 :arg1 ( paper :mod panama ) )
secured :arg1 ( and :op1 ( e.coli :arg1 water ) :op2 ( enterokokkipitoisuudet :arg1 water ) ) :arg2 wednesday :time ( fall-01 :arg1 ( bakteeripitoisuudet :mod reviewing ) :arg4 below )
and :op1 ( receive-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg1 political-party_name_0 ) ) :arg1 rule-01 ) :op2 ( say-01 :arg0 ( thing :arg1-of state-01 :mod explanatory ) :arg1 ( have-org-role-91 :arg0 person :arg2 director ) )
say-01 :arg1 ( publish-01 :arg1 novellit ) :arg2 person_name_0
multi-sentence :snt1 ( invest-01 :arg0 ( person :arg0-of ( invest-01 :arg2 country_name_0 ) ) :arg2 dialogue-01 ) :snt2 ( tasapaksun :mod ( bit :degree ( bit :mod little ) ) :domain result-01 )
continue-01 :arg1 koulutusleikkaukset
woman :quant num_0 :mod old :arg1-of ( miss-01 :time ( until :op1 ( lahdenkylÃ¤ssÃ¤ :time ( date-entity year_date-entity_0 ) ) :location south ) )
have-org-role-91 :arg0 ( team :mod nation ) :arg1 ( team :mod nation ) :arg2 floorball
and :op1 ( play-01 :arg0 i :location ( company :arg0-of ( have-org-role-91 :arg1 ( university :mod floorball ) :arg2 university ) ) ) :op2 ( passed :arg1 ( josbassa :quant num_1 :arg1-of follow-01 ) )
contrast-01 :arg1 ( take-01 :arg0 ( person :mod young :arg0-of farm-01 ) :arg1 ( person :arg0-of farm-01 :mod young ) :li num_0 ) :arg2 ( believe-01 :arg0 person :arg1 ( positive :domain it :beneficiary future :mod also :location ( area :mod rural ) ) ) :li num_0
multi-sentence :snt1 ( share-01 :arg0 ( person :arg0-of observe-01 :quant some ) :arg1 ( thing :arg1-of ( opine-01 :arg0 person ) ) ) :snt2 ( file-01 :arg0 ( person :arg0-of observe-01 :quant some ) :arg1 ( complain-01 :arg0 person ) )
say-01 :arg0 ( and :op1 ( person :mod country_name_0 ) :op2 democrat ) :arg1 ( find-01 :polarity - :arg0 and :arg1 ( thing :arg0-of ( evidence-01 :arg1 ( try-01 :arg0 ( house :mod white ) :arg1 ( pressure-01 :arg0 house :arg1 ( conclusions :arg0 house :arg1 ( thing :arg1-of ( conclude-01 :arg0 ( or :op1 set :op2 ( kerrontaan :mod politics ) ) ) ) ) ) ) ) ) )
contrast-01 :arg1 ( report-01 :arg1 ( thing :polarity - :arg1-of discover-01 :mod this ) ) :arg2 ( tell-01 :arg1 ( discover-01 :arg1 this ) :arg2 headquarters )
say-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg2 ( bam :mod '' ) ) ) :arg1 ( change-01 :arg1 ( and :op1 culture :op2 ( change-01 :mod spiritual ) :op3 ( change-01 :mod physical ) ) )
contrast-01 :arg2 ( cause-01 :arg0 ( thing :arg0-of ( cause-01 :arg1 ( possible-01 :arg1 ( wear-01 :arg1 game :degree bit ) ) ) ) :mod also )
start-01 :arg1 ( send-01 :arg1 final :arg2 ( part :part-of ( ohjelmistoaan :time ( afternoon :mod last ) ) ) ) :time ( day :mod both )
say-01 :arg0 ( person :arg0-of ( witness-01 :arg1 eye ) ) :arg1 ( shoot-02 :arg1 ( person :arg0-of ( have-org-role-91 :arg2 demonstrators ) ) :arg1-of ( cause-01 :arg0 ( clashes :arg0 police :arg1 person ) ) )
and :op1 ( quiet :domain ( street :location city ) ) :op2 ( safe-01 :arg1 street ) :op3 clean-04
try-01 :arg0 ( person :mod country_name_0 ) :arg1 ( return-01 :arg1 person :arg4 subject ) :mod ( again :mod once )
use-01 :arg0 it :arg1 ( lights :mod verbin :mod old ) :mod even
ruskeaa :arg1 rice
and :op1 ( call-01 :arg1 ( person_name_0 :arg0-of ( have-org-role-91 :arg2 ziegelman ) ) :arg2 luumuvaahdoksi ) :op2 ( add-01 :arg0 person :arg1 ( reflected :arg1 ( trick :arg1-of moderate-03 ) :arg2 name ) )
multi-sentence :snt1 ( appeal-02 :arg0 ( businessman :mod newyorkilainen ) :arg2 ( cause :arg0-of ( cause-01 :arg1 audit-01 ) ) ) :snt2 ( refuse-01 :arg0 ( person :time ( date-entity decade_date-entity_0 ) ) :arg1 ( published :arg0 person :arg1 ( returns :mod tax-01 ) ) :time ( date-entity decade_date-entity_0 ) )
and :op1 ( be-located-at-91 :arg1 ( meet-03 :arg0 dropshipper :arg1 ( system :name ( name :op1 omahassa :op2 nebraska ) ) ) :arg2 ( system :name ( name :op1 omahassa ) ) :time ( week :mod last ) ) :op2 ( challenge-01 :arg2 ( meet-03 :purpose ( and :op1 ( meet-01 :arg1 veroilmoituksia ) :op2 ( exchange-01 :arg1 veroilmoituksia ) ) ) )
contrast-01 :arg1 ( continue-01 :arg0 ( company :mod country_name_0 ) :arg1 ( link-01 :arg1 company :arg2 country :arg1-of exist-01 ) ) :arg2 ( ready-02 :arg1 ( company :mod new ) :arg2 ( come-01 :arg1 company :arg4 market ) )
rise-01 :arg1 ( export-01 :arg0 country_name_0 :arg2 country_name_1 ) :arg2 ( rate-entity-91 :arg1 ( percentage-entity percentage-entity_num_0 ) :arg2 ( volume-quantity volume-quantity_num_1 :unit gallon ) )
do-02 :arg0 i :arg1 ( reputation :poss i :mod ( good :degree most ) :poss i ) :location here :mod just
good :degree most :domain ambergris :time always
contrast-01 :arg2 ( have-03 :arg0 he :arg1 ( image :mod ( good :degree pretty ) :arg1-of ( mean-01 :arg2 ( category :ord ( ordinal-entity ordinal-entity_num_0 ) ) ) ) :condition ( be-located-at-91 :arg1 that :arg2 ( under :op1 ( image :mod ( generation :arg0-of ( lehti :arg1 menestysmalliksi ) ) ) ) ) )
and :op1 ( raise-01 :arg0 ( earl :name ( name :op1 phillip :op2 phillip :op3 '' :op4 '' :op5 '' :op6 '' :op7 '' ) ) :arg1 pistoolin ) :op2 ( put-01 :arg0 '' :arg1 pistoolin :arg2 ( context :poss ( person :arg0-of ( oppose-01 :arg1 political-party_name_0 ) :arg0-of oppose-01 ) ) ) :op3 ( express-01 :arg0 '' :arg1 action )
succeed-01 :polarity - :arg0 ( attempt-01 :arg1 ( reach-01 :arg1 phillipiÃ¤ ) )
publish-01 :arg0 company_name_0 :arg1 ( website :arg0-of ( say-01 :arg1 ( possible-01 :arg1 ( upgrade-02 :arg0 ( person :arg0-of use-01 ) :arg1 ( programme :arg0 person :arg1 ( block-01 :arg0 person :arg1 programme ) :purpose ( block-01 :arg0 person :arg1 advertisement ) ) :time ( once :op1 ( again :mod once :mod ( again :mod once ) ) ) ) ) ) :location website ) :time ( after :op1 ( announce-01 :arg0 company :arg1 ( prevent-01 :arg0 ( person :arg0-of use-01 ) :arg1 ( possible-01 :arg1 ( upgrade-02 :arg0 ( person :arg0-of use-01 ) :arg1 ( programme :arg0 person ) ) ) ) ) )
say-01 :arg0 company_name_0 :arg1 ( difficult :degree more :domain ( see-01 :arg1 ( thing :arg2-of ( have-part-91 :arg1 ( page :mod page ) ) ) ) :degree more ) :medium ( url-entity :value tuesday )
and :op1 ( bear-02 :arg1 ( star :quant many :arg1-of ( include-91 :arg2 star ) ) :time ( before :op1 now :quant ( around :op1 ( temporal-quantity temporal-quantity_num_0 :unit year ) ) ) ) :op2 ( have-purpose-91 :arg1 star :arg2 ( achieve-01 :arg1 aikuisuuden ) :time now )
recommend-01 :arg1 ( thing :arg1-of ( condition-01 :arg2 ( thing :arg2-of ( condition-01 :arg1 ( contract :arg1-of propose-01 ) ) ) ) :arg0-of ( resign-01 :arg1 ( person :arg0-of ( represent-01 :arg1 doctor :mod new ) :arg0-of ( represent-01 :arg1 doctor :mod new ) ) ) ) :time ( after :op1 vote-01 )
contrast-01 :arg2 ( show-01 :arg0 ( peculated :mod putin :mod putin ) :arg1 ( forgotten :polarity - ) )
multi-sentence :snt1 ( win-01 :arg0 ( person :mod country_name_0 ) :time ( after :op1 war_name_1 :quant ( multiple :op1 num_0 ) ) ) :snt2 ( predilecton :mode interrogative :prep-with horse )
outcome :mode interrogative :domain ( link-01 :arg1 ( struggle-01 :arg2 power ) )
say-01 :arg0 ( thing :arg1-of ( remark-01 :arg0 person_name_0 ) ) :arg1 ( say-01 :arg0 person :arg1 ( contrast-01 :arg1 ( ask-01 :arg0 person :arg1 ( thing :arg2-of ( position-01 :arg1 person ) :mod this ) ) :arg2 ( say-01 :arg0 person :arg1 ( possible-01 :arg1 ( say-01 :arg0 one :arg1 ( thing :arg2-of ( position-01 :arg1 ( post :mod problematic ) :time ( after :op1 now :quant ( up-to :op1 ( temporal-quantity temporal-quantity_num_0 :unit year ) ) ) ) ) :mod even ) ) ) ) )
disappoint-01 :arg1 it :condition ( return-01 :arg1 they :arg4 ( spring :mod home :poss they ) ) :condition ( return-01 :arg1 they :arg4 ( spring :mod home :poss they ) )
and :op1 ( victim :quant num_0 :mod other :location car ) :op2 ( investigate-01 :arg0 police ) :op3 ( include-91 :arg1 victim :arg2 there )
explain-01 :arg0 ( and :op1 ( technology :mod health ) :op2 knappett ) :arg1 ( and :op1 ( technology :mod health :poss nice-01 ) :op2 ( thing :arg2-of ( available-02 :arg1 ( person :arg1-of ( include-91 :arg2 ( person :arg1-of ( release-01 :arg1-of ( face-01 :arg0 ( person :arg1-of ( include-91 :arg2 person :arg3 ( percentage-entity percentage-entity_num_0 ) ) ) :arg3 ( more-than :op1 ( percentage-entity percentage-entity_num_0 ) ) ) :arg1-of ( face-01 :arg0 ( person :arg1-of ( include-91 :arg2 ( person :arg1-of ( release-01 :arg1-of ( face-01 :arg0 person ) ) ) ) ) ) ) ) ) ) ) ) ) :op3 ( face-01 :arg0 person :arg1 ( consequence :mod severe ) :frequency often ) :arg1-of ( cause-01 :arg0 ( and :op1 ( technology :mod health :poss nice-01 ) :op2 knappett ) )
have-purpose-91 :arg1 ( opportunity :purpose ( check-01 :arg1 ( person :arg0-of vote-01 ) ) ) :arg2 ( person :arg0-of vote-01 ) :time ( before :op1 vote-01 )
use-01 :arg0 ( person :mod country_name_0 :mod only ) :arg1 ( station :mod polling :mod country_name_1 :mod only ) :arg2-of ( except-01 :arg1 ( -rrb- :location country ) )
and :op1 ( star :mod football :arg1-of ( resemble-01 :arg2 ( and :op1 ( shape :mod face ) :op2 eye ) :mod indeed ) ) :op2 ( dexter :arg1 and )
multi-sentence :snt1 ( say-01 :arg0 i :arg1 ( cbc :mode interrogative :arg0 ( person :mod country_name_0 ) :arg1 ( person :quant num_0 :arg0-of ( have-org-role-91 :arg1 country_name_1 :arg2 theismann ) ) :arg1-of direct-02 :mod just ) ) :snt2 ( '' :mode interrogative )
and :op1 ( regret-01 :arg0 we :arg1 ( thing :arg1-of comment-01 :mod such ) :degree ( much :degree very ) ) :op2 ( say-01 :arg0 she :arg1 ( thing :arg1-of comment-01 :mod such ) )
amr-unknown :manner-of protect-01
(-(
say-01 :arg0 he :arg1 ( and :op1 ( possible-01 :arg1 ( record :mod ( record :mod good ) :mod good ) ) :op2 ( win-01 :arg0 person ) )
contrast-01 :arg1 ( and :op1 ( nice-01 :arg1 he ) :op2 ( natural-03 :arg1 photo ) :concession ( even-if :op1 ( photo :domain photograph-01 ) ) ) :arg2 ( challenge-01 :arg2 he )
know-02 :arg1 ( person :arg0-of fight-01 :mod state :quant amr-unknown ) :arg2 ( know-02 :polarity - :arg1 person )
lie-08 :arg0 ( woman :mod finance :mod finance ) :arg1-of ( cause-01 :arg0 ( government-organization :arg0-of govern-01 :mod sÃ¡nchez-led :domain it ) )
introduce-02 :arg0 ( government-organization :arg0-of administrate-01 ) :arg1 ( thing :arg2-of ( recommend-01 :arg1 ( control-01 :arg0 ( control-01 :arg1 nation ) :arg1 ( thing :arg2-of ( recommend-01 :arg1 ( develop-02 :arg1 infrastructure ) ) :quant all :arg1-of ( include-91 :arg2 ( control-01 :arg0 ( control-01 :arg1 infrastructure ) ) ) :arg1 ( thing :arg2-of ( recommend-01 :arg1 ( develop-02 :arg1 infrastructure ) ) ) ) ) ) :time now )
multi-sentence :snt1 ( amr-unknown
list-01 :arg1 ( person :arg1-of ( die-01 :location ( between :op1 ( boy :arg2-of ( include-91 :arg1 ( boy :arg1-of ( age-01 :arg2 ( temporal-quantity temporal-quantity_num_0 :unit year ) ) ) ) :arg2-of ( include-91 :arg1 ( boy :arg2-of ( include-91 :arg1 ( boy :arg1-of ( age-01 :arg2 ( temporal-quantity temporal-quantity_num_1 :unit year ) ) ) ) ) ) :arg2-of ( include-91 :arg1 ( family :arg1-of ( age-01 :arg2 ( temporal-quantity temporal-quantity_num_1 :unit year ) ) ) ) :arg2-of ( include-91 :arg1 ( family :arg1-of ( age-01 :arg2 ( temporal-quantity temporal-quantity_num_1 :unit year ) ) ) ) :arg2-of ( include-91 :arg1 ( family :arg1-of ( have-org-role-91 :arg0 boy :arg2 member ) ) ) :arg2-of ( include-91 :arg1 ( family :arg1-of ( have-org-role-91 :arg0 boy :arg2 member ) ) ) ) ) ) )
equal-01 :arg1 ( amount :quant-of ( resource :mod fish ) ) :arg2 ( resource :mod ( reconstruct-01 :arg1 fish ) )
have-03 :arg0 he :arg1 ( thing :arg1-of decide-01 ) :time ( until :op1 ( decide-01 :arg0 he :arg1 ( decide-01 :arg0 he :arg1 ( skipping :arg0 he :arg1 ( and :op1 ( season :mod senior ) :op2 ( programme :mod resource ) :poss he ) ) ) ) )
possible-01 :arg1 ( parazynski :arg1 it )
approve-01 :arg0 organization_name_0 :arg1 ( approve-01 :arg1 garlanda ) :time ( since :op1 ( obama :arg0 president :arg1 ( risers :poss president ) ) )
explain-01 :arg0 court :arg1 ( essential :domain ( business :mod small :mod this ) :arg1-of ( cause-01 :arg0 ( provide-01 :arg0 ( and :op1 ( government-organization :arg0-of govern-01 ) :op2 ( group :arg0-of aid-01 ) ) :arg1 ( need-01 :polarity - :arg1 ( rise-01 :arg1 ( number :quant-of ( person :arg0-of reside-01 ) ) ) ) ) ) )
have-03 :arg0 ( and :op1 ( person :ord ( ordinal-entity ordinal-entity_num_0 ) :arg0-of ( have-org-role-91 :arg2 head-of-state ) ) :op2 ( person :arg0-of ( have-org-role-91 :arg2 head-of-state ) ) :op3 ( person :arg0-of ( have-org-role-91 :arg2 head-of-state ) ) :op4 ( person :arg0-of ( have-org-role-91 :arg2 head-of-state ) ) :op5 ( person :arg0-of ( have-org-role-91 :arg2 head-of-state ) ) :op6 ( person :arg0-of ( have-org-role-91 :arg2 head-of-state ) ) :op6 ( person :arg0-of ( have-org-role-91 :arg2 head-of-state ) ) :op7 ( person :arg0-of ( have-org-role-91 :arg2 head-of-state ) ) ) :arg1 ( role :arg1-of special-02 )
say-01 :arg1 ( possible-01 :arg1 ( agree-01 :arg0 she ) :condition ( offer-01 :arg0 she :arg1 ( stand-01 :arg1 she :arg2 ( candidate :beneficiary post ) ) :time today ) ) :medium ( interview-01 :arg1 ( radio :mod latvian ) :time today )
argue-01 :arg0 ( person :arg0-of criticize-01 ) :arg1 ( consistent-01 :polarity - :arg1 ( thing :arg1-of ( decide-01 :arg0 person ) ) :arg2 ( decide-01 :arg0 person :arg1 ( and :op1 ( decide-01 :arg0 person :arg1 ( rule :mod common ) ) :op2 ( fail-01 :arg1 person :arg2 ( apply-01 :arg0 person :arg1 ( life :mod real ) ) :time then ) ) ) )
cause-01 :arg0 ( possible-01 :arg1 ( ieskaloti :arg1 ( water :mod waste :time ( facility_name_0 :mod heavy ) ) ) ) :arg1 ( infer-01 :arg1 ( quality :mod male :domain it ) )
cause-01 :arg0 that :arg1 ( understand-01 :arg0 i :arg1 ( desire-01 :arg0 you :arg1 ( change-01 :arg0 you :arg1 rural ) ) )
and :op1 ( have-03 :arg0 we :arg1 ( cup :mod world :quant some ) ) :op2 ( be-located-at-91 :arg1 frame :arg2 frame :mod also )
contrast-01 :arg1 ( it :polarity - :arg1-of ( mean-01 :arg2 ( thing :domain it ) ) ) :arg2 ( word-01 :arg0 ( journalist :mod sports ) :arg1 it )
tell-01 :arg1 ( depend-01 :arg0 everything :arg1 everything ) :arg2 everything :time ( year :mod last )
refer-01 :arg0 ( image :arg1-of ( link-01 :arg2 group ) :arg1-of ( link-01 :arg2 group ) ) :arg1 ( and :op1 ( call-02 :arg0 image ) :op2 ( objects :arg0 image ) ) :arg2 ( image :arg1-of ( link-01 :arg2 group ) )
tell-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg1 ( person :arg0-of ( have-org-role-91 :arg2 ( minister :mod prime ) ) ) :arg2 ( spokesman :mod prime ) ) ) :arg1 ( compete-01 :mod new :domain ( post :mod vacant :poss ( service :mod revenue ) ) ) :arg2 person_name_0
and :op1 ( tend-02 :polarity - :arg1 ( population :poss it ) :arg2 ( and :op1 rain-01 :op2 snow ) ) :op2 ( recommend-01 :arg1 ( free-04 :polarity - :arg1 ( and :op1 car :op2 deluxe :op3 communicate-01 :op4 communicate-01 ) ) )
say-01 :arg0 he :arg1 ( and :op1 ( playgrounds :arg1-of broad-02 :domain ( ship :prep-with ( element :mod various :part-of ( and :op1 blackberry :op2 loud :op3 ( apartment :mod loud ) ) ) ) ) )
possible-01 :arg1 ( lead-03 :arg0 ( explode-01 :mod this ) :arg2 cop )
contain-01 :arg0 ( process-01 :arg1 ( and :op1 meat :op2 egg ) ) :arg1 ( and :op1 ( iron :arg1-of exist-01 ) :op2 ( mineral :mod other ) :arg1-of ( easy-05 :degree more ) :mod other )
multi-sentence :snt1 ( amr-unknown
state-01 :arg0 report :arg1 ( state-01 :arg0 ( and :op1 ( thing :arg1-of report-01 ) :op2 ( thing :arg1-of state-01 ) :op3 ( report-01 :arg0 ( and :op1 ( thing :arg1-of state-01 ) :op2 ( thing :arg1-of state-01 ) ) :ord ( ordinal-entity ordinal-entity_num_0 ) :arg1-of ( include-91 :arg2 ( thing :quant num_1 :arg1-of ( include-91 :arg2 ( thing :quant num_1 :arg1-of ( include-91 :arg2 ( thing :quant num_1 :arg1-of ( state-01 :arg0 ( and :op1 ( releases :mod press ) :op2 ( thing :arg1-of state-01 ) :op3 ( report-01 :arg0 press ) ) ) ) ) ) ) ) ) ) :ord ( ordinal-entity ordinal-entity_num_0 ) ) )
publish-01 :arg0 ( democrat :mod intelligence :mod intelligence ) :arg1 ( report-01 :arg0 political-party_name_0 ) :arg0-of ( agree-01 :arg1 ( thing :arg1-of ( report-01 :arg0 ( force :mod task ) ) :quant some ) )
contrast-01 :arg2 ( know-01 :arg0 she :arg1 ( result-01 :arg1 ( game :mod olympic :mod country_name_0 ) :arg2 ( product-of :op1 num_0 :op2 num_1 :domain ( game :mod olympic :mod country_name_1 ) :arg0-of ( give-01 :arg1 ( group :poss they ) :arg2 ( group :poss they ) :time ( after :op1 ( win-01 :arg0 ( win-01 :arg0 country :arg2 country ) :arg2 country ) ) ) ) ) )
say-01 :arg1 this :arg2 guy :time early :ord ( ordinal-entity ordinal-entity_num_0 :range ( ordinal-entity ordinal-entity_num_0 ) ) :arg0-of ( cause-01 :arg1 ( break-up-08 :arg1 guy :arg3 ( game :quant num_1 :mod each ) ) )
contrast-01 :arg1 ( '' :arg0 ( paper :name ( name :op1 kou :op2 '' ) ) :arg1 ( risk-01 :arg2 ( describe-01 :arg1 ( cuisine :mod country_name_0 ) :arg2 country ) ) ) :arg2 ( ' :arg0 ( paper :name ( name :op1 ziegelmane :op2 ziegelmane ) :mod ziegelmane ) :arg1 life :path ( under :op1 ( east :part-of manhattan ) ) )
walls :arg0 ( and :op1 ( person :arg0-of ( have-org-role-91 :arg2 demonstrators ) ) :op2 ( person :arg0-of ( have-org-role-91 :arg2 head-of-state ) ) :quant some ) :arg2 ( message :prep-against ( message :prep-against ( person :arg0-of ( have-org-role-91 :arg2 ( president :mod interim ) ) ) ) )
begin-01 :arg1 ( replace-01 :arg1 ( and :op1 ( person :arg0-of specialize-01 ) :op2 ( person :arg0-of specialize-01 ) :op3 ( person :arg0-of specialize-01 ) :op4 ( person :arg0-of specialize-01 ) ) :arg2 ( person :arg0-of specialize-01 ) )
cause-01 :arg0 ( have-03 :arg0 treaty :arg1 ( multiple :op1 ( temporal-quantity temporal-quantity_num_0 :unit month ) ) ) :arg1 ( cause-01 :arg1 ( be-located-at-91 :arg1 treaty :arg2 force-04 ) )
reduce-01 :arg0 ( government-organization :arg0-of ( govern-01 :arg1 federal ) ) :arg1 ( fund-01 :arg0 government-organization :arg1 ( rate-entity-91 :arg1 num_1 :arg2 ( temporal-quantity temporal-quantity_num_0 :unit month ) ) ) :arg1-of ( mean-01 :arg2 ( need-01 :arg0 ( government-organization :arg0-of ( govern-01 :arg1 federal ) ) :arg1 ( address-02 :arg0 government-organization :arg1 ( problem :arg1-of ( address-02 :arg0 population ) :arg1-of ( address-02 :arg0 population ) ) :manner ( assist-01 :polarity - :arg1 government-organization ) ) ) ) :li num_0
possible-01 :polarity - :arg1 ( succeed-01 :arg0 ( attempt-01 :arg1 contact-01 ) )
start-01 :arg0 i :arg1 ( sports :arg0 i )
so :time ( middle :op1 night )
attack-01 :arg0 magazine_name_0 :arg1 ( person :quant num_0 :arg0-of ( have-rel-role-91 :arg1 park :arg2 child ) ) :manner sexual
contrast-01 :arg1 ( plan-01 :arg0 family :arg1 ( go-02 :arg0 family :arg4 ( festivals :arg1 music :location belgium ) ) ) :arg2 ( possible-01 :polarity - :arg1 ( calculated :arg1 customer :location ( reservation :arg1-of ( mean-01 :arg2 ( and :op1 ( possible-01 :arg1 ( consult-01 :arg0 customer :arg1 customer ) :time no-longer ) :op2 ( purchase-01 :arg1 ticket :arg3 ( monetary-quantity monetary-quantity_num_0 :unit euro ) ) ) ) ) ) )
you :mod either
ceremony :mod room :location nybc
and :op1 ( have-03 :arg0 he :arg1 ( stone :mod rolling :mod '' ) :time ( ask-01 :arg1 relation-03 ) ) :op2 ( reply-01 :arg0 he :arg1 ( good :domain they :degree really ) ) :time ( ask-01 :arg1 relation-03 )
and :op1 ( pressure-01 :arg1 ( company :mod energy ) :arg1-of ( cause-01 :arg0 ( fall-01 :arg1 ( price-01 :arg1 oil ) ) ) ) :op2 ( compounded :arg0 ( decide-01 :arg0 country_name_0 :arg1 ( leave-15 :arg0 country :arg1 ( union-02 :arg1 continent_name_1 ) ) ) :arg1 situation )
demand-01 :arg0 ( doctor :mod new ) :arg1 ( demand-01 :arg0 ( person :arg0-of ( represent-01 :arg1 ( union :poss person ) ) ) :arg1 ( protest-01 :arg0 union ) :purpose ( launch-01 :arg0 union :arg1 protest-01 :manner ( dispute-01 :arg2 ( contract :mod new ) ) ) )
contrast-01 :arg2 ( meet-03 :arg0 ( meet-03 :time ( date-entity year_date-entity_0 ) ) :mod main :purpose ( forget-01 :arg0 meet-03 :arg1 past ) )
anger-01 :arg0 ( respond-01 :arg1 ( coup :arg1-of attempt-01 ) :arg1-of weak-02 ) :arg1 location_name_0 :location west
announce-01 :arg0 ( person :quant num_0 :arg0-of ( have-org-role-91 :arg2 president ) ) :arg1 ( discuss-01 :polarity - :arg0 person :arg1 issue-02 ) :condition ( want-01 :arg0 you :arg1 ( disclose :arg0 you :arg1 ( and :op1 ( want-01 :arg0 you :arg1 ( disclose :arg0 you :arg1 information ) :degree total ) :op2 ( want-01 :arg0 you :arg1 ( disclose :arg0 you :arg1 information ) ) ) ) ) :time ( after :op1 ( temporal-quantity temporal-quantity_num_0 :unit hour ) )
and :op1 ( represent-01 :arg0 he :arg1 he :arg1-of reasonable-02 ) :op2 ( attract-01 :arg0 he :arg1 ( fan :mod ( type :mod this ) ) :duration ( temporal-quantity temporal-quantity_num_0 :unit year ) )
expect-01 :arg1 ( complete-01 :arg1 ( project :mod ( monetary-quantity monetary-quantity_num_0 :unit ( dollar :mod renminbi ) ) ) :time now :arg1-of ( cause-01 :arg0 ( possible-01 :arg1 ( complete-01 :arg1 project ) ) ) )
postponed :domain we :purpose ( connect :arg0 we :arg1 ( part :part-of ( or :op1 land :op2 viaduktu ) :location north ) ) :arg1-of ( follow-01 :arg2 ( path :poss ( phase :mod last :poss installation ) ) )
cause-01 :arg0 ( have-03 :arg0 ( person :mod country_name_0 ) :arg1 ( rate-entity-91 :arg1 num_0 :arg2 ( temporal-quantity temporal-quantity_num_0 :unit year ) ) ) :arg1 ( and :op1 ( have-frequency-91 :arg2 ( approximately :op1 ( mass-quantity mass-quantity_num_1 :unit kilogram ) ) ) :op2 ( j?pavelk :arg1 ( bed :quant ( around :op1 num_1 ) ) ) )
obligate-01
plan-01 :arg0 ( doctor :mod young ) :arg1 ( deploy-01 :arg0 doctor :arg1 ( strike-01 :quant more ) ) :time ( after :op1 ( expel-01 :arg0 doctor :arg1 ( thing :arg1-of offer-01 ) ) )
confront-01 :arg0 ( attempt-01 :arg1 ( resolve-01 :arg1 ( problem :topic negotiate-01 ) ) ) :arg1 ( and :op1 ( engage-01 :arg0 ( government-organization :arg0-of govern-01 ) :arg2 ( unwillingness :poss government-organization ) ) :op2 ( complete-01 :arg0 government-organization :arg1 ( amusement-park_name_0 :arg1-of complete-02 ) :frequency sometimes ) )
promote-02 :arg0 ( culture :mod ( correctness :mod politics ) ) :arg1 defraud-01 :time ( elect-01 :location ( community :mod religious-group_name_0 ) )
find-02 :arg0 court :arg1 ( say-01 :arg0 court :arg1 ( and :op1 ( '' :arg0 ( and :op1 ( community :mod religious-group_name_0 ) :op2 ( envision-01 :mod religious ) :poss we ) :arg1 ( and :op1 ( community :mod religious-group_name_1 ) :op2 ( envision-01 :mod religious ) :poss we ) ) :op2 ( accuse-01 :arg0 and :arg1 and :arg2 ( and :op1 racism :op2 islamophobia ) ) ) )
and :op1 ( ban-01 :arg0 ( ban-01 :arg1 ( person :arg0-of ( campaign-01 :mod politics ) ) ) :arg1 ( vote-01 :arg0 ( and :op1 ( person :arg0-of ( campaign-01 :mod politics ) ) :op2 ( person :arg0-of ( have-org-role-91 :arg2 activist ) ) ) :arg1 vote-01 ) ) :op2 ( vote-01 :arg0 person :arg1 ( vote-01 :arg0 person :arg1 mail ) )
surprise-01 :arg1 ( person :quant num_0 :arg0-of use-01 ) :arg2 surprise-01
and :op1 ( inflicts :arg1 ( and :op1 ( pressure-01 :arg1 weapon ) :op2 ( take-01 :arg1 bow :arg3 ( against :op1 i ) ) ) :time ( time :arg1-of same-01 ) ) :op2 ( and :op1 ( hand :part-of i ) :op2 ( hand :part-of i ) :domain ( and :op1 ( hand :part-of i ) :op2 ( hand :part-of he ) ) ) :op3 ( go :arg0 he :arg1 he :degree further )
say-01 :arg0 person_name_0 :arg1 ( and :op1 ( k?vu?ies :arg0 they :arg1 street :arg1-of regular-02 ) :op2 ( call-01 :arg1 they :arg2 police :manner constant ) )
possible-01 :polarity - :arg1 ( rectify-01 :arg1 ( morning :mod this ) )
say-01 :arg0 she :arg1 ( and :op1 ( warn-01 :arg0 she :arg2 ( person :arg0-of ( believe-01 :arg1 ( possible-01 :arg1 ( behave :arg0 they :arg1-of ( want-01 :arg0 they ) ) ) ) ) ) :op2 ( consequence :polarity - :time then ) ) :manner likewise
task :mod main :poss company :domain ( continue-01 :arg1 ( increase-01 :arg1 ( and :op1 turnover :op2 profit-01 :mod both ) ) ) :time ( year :mod this ) :mod also
multi-sentence :snt1 ( bullshit-01 :mode interrogative ) :snt2 ( uzkars :mode interrogative )
multi-sentence :snt1 ( contrast-01 :arg1 ( proclaimed :arg0 ( state :mod latvian ) :arg1 zemgals ) :arg2 ( describe-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg2 ( president :mod vice ) ) ) :arg1 ( person :arg0-of ( have-org-role-91 :arg2 ( president :ord ( ordinal-entity ordinal-entity_num_0 ) :arg0-of ( have-org-role-91 :arg2 president ) ) ) ) :arg2 ( person :arg0-of ( have-org-role-91 :arg2 ( president :ord ( ordinal-entity ordinal-entity_num_0 ) :arg0-of ( have-org-role-91 :arg2 president ) ) ) ) :degree wide ) ) :snt2 ( and :op1 ( akstes :arg0 ( person :arg0-of ( have-org-role-91 :arg2 ( president :mod vice ) ) ) :arg1 ( person :arg0-of ( have-org-role-91 :arg2 ( president :mod vice ) ) ) ) )
multi-sentence :snt1 ( presidency :arg0 ( person :arg0-of ( have-org-role-91 :arg2 ( president :mod vice ) ) ) :arg1 ( person :arg0-of ( have-org-role-91 :arg2 ( president :mod vice ) ) ) :arg3 ( score-entity :op1 num_0 :op2 num_1 ) :time ( until :op1 ( end-01 :arg1 year ) ) :mod also ) :snt2 ( and :op1 ( mean-02 :arg0 ( person :arg0-of ( have-org-role-91 :arg1 country_name_0 ) ) :arg1 ( recognition :mod full ) ) :op2 ( include-01 :arg1 ( and :op1 ( recognition :mod full ) :op2 ( include-01 :arg1 ( nation :mod ( nation :mod democracy ) :location country_name_1 ) ) ) :arg2 ( recognition :mod full ) ) )
have-concession-91 :arg1 ( pass-07 :arg1 he :arg2 ( thing :quant num_2 ) ) :arg2 ( pass-07 :arg1 he :arg2 away )
highlight-01 :arg0 ( protagonists :arg1 film ) :arg1 ( issue-02 :arg0 ( film :mode interrogative :arg0 ( person :arg0-of ( have-rel-role-91 :arg1 ( person :arg0-of ( have-rel-role-91 :arg1 ( person :arg0-of ( have-rel-role-91 :arg1 ( person :arg0-of ( have-rel-role-91 :arg1 ( person :arg0-of ( have-rel-role-91 :arg1 ( person :arg0-of ( have-rel-role-91 :arg1 ( person :arg0-of ( have-rel-role-91 :arg1 ( person :arg0-of ( have-rel-role-91 :arg1 ( person :arg0-of ( have-rel-role-91 :arg1 ( person :arg0-of ( have-rel-role-91 :arg1 ( person :arg0-of ( have-rel-role-91 :arg1 ( person :arg0-of ( have-rel-role-91 :arg1 ( person :arg0-of ( have-rel-role-91 :arg1 ( person :arg0-of ( have-rel-role-91 :arg1 ( person :arg0-of ( have-rel-role-91 :arg1 ( person :arg0-of ( have-rel-role-91 :arg1 ( person :arg0-of ( have-rel-role-91 :arg1 ( person :arg0-of ( have-rel-role-91 :arg1 ( person :arg0-of ( have-rel-role-91 :arg1 ( person :arg0-of ( have-rel-role-91 :arg1 ( person :arg0-of ( have-rel-role-91 :arg1 ( person :arg0-of ( have-rel-role-91 :arg1 ( person :arg0-of ( have-rel-role-91 :arg1 ( person :arg0-of ( have-rel-role-91 :arg1 ( person :arg0-of ( have-rel-role-91 :arg1 ( person :arg0-of ( have-rel-role-91 :arg1 ( person :arg0-of ( have-rel-role-91 :arg1 ( person :arg0-of ( have-rel-role-91 :arg1 person :arg2 parent ) ) :arg2 parent ) ) :arg2 parent ) ) :arg2 parents ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) )
menbi?u :arg0 ( state :mod religious-group_name_0 ) :arg1 ( over :op1 num_0 )
and :op1 ( reviewing :domain ( he :accompanier ( person :arg0-of research-01 :mod other :location ( university :arg1-of free-04 ) :mod other ) ) :time current ) :op2 ( manage-02 :arg0 he :arg1 ( approve-01 :arg0 they :arg1 ( case :quant num_0 :mod only ) ) :time so-far )
pone :arg0 ( person :arg0-of ( have-org-role-91 :arg1 ( committee :mod executive :part-of lok ) :arg2 member ) ) :arg1 ( blame-01 :arg1 person :arg2 ( sport :mod olympic :arg1-of organize-01 :arg1-of organize-01 ) ) :arg2 ( person :arg0-of ( have-org-role-91 :arg1 ( committee :mod executive :part-of lok ) :arg2 member ) ) :arg1-of strong-02
and :op1 ( take-01 :arg0 festival :arg1 ( place :name ( name :op1 sus?jas ) ) ) :op2 ( neeksist?jo?a :arg0 ( and :op1 ( person :arg0-of ( have-org-role-91 :arg2 head-of-state :time former ) ) :op2 ( person :arg0-of ( have-org-role-91 :arg2 head-of-state :time former ) ) :op3 ( person :arg0-of ( have-org-role-91 :arg2 head-of-state :time former ) ) :op4 ( person :arg0-of ( have-org-role-91 :arg2 head-of-state :time former ) ) :op5 et-cetera ) )
fin?lbrauciens :location ( on :op1 river ) :mod decisive
block-01 :arg0 ( party :mod organization_name_0 ) :arg1 ( approve-01 :mod garlanda ) :time ( since :op1 ( nominate-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg2 president ) ) :arg1 he ) )
say-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg2 authority ) ) :arg1 ( and :op1 ( demolished :arg0 country :arg1 country ) :op2 ( offer-01 :arg0 country :arg1 ( and :op1 ( cut-off-04 :arg0 person :arg1 ( good :arg1-of ( cost-01 :arg2 ( monetary-quantity monetary-quantity_num_1 :unit cent ) ) ) ) :op2 ( offer-01 :arg0 person :arg1 ( cut-off-04 :arg0 person :arg1 ( rate-entity-91 :arg1 ( monetary-quantity monetary-quantity_num_1 :unit cent ) :arg2 ( volume-quantity volume-quantity_num_1 :unit gallon ) ) ) :op3 ( simply :arg1 tea :arg2 ( restaurant :name ( name :op1 pa?izveidotos ) :mod euro :quant some ) ) ) ) ) ) :time ( hear-01 :arg0 authority :arg1 this :time ( week :mod this ) :location ( thing :arg1-of ( say-01 :arg0 authority ) ) )
(-(
multi-sentence :snt1 ( expose-01 :arg1 ( site :quant num_0 :arg1-of ( include-91 :arg2 ( site :poss ( person :arg0-of ( have-rel-role-91 :arg2 ( kid :mod book ) ) ) ) ) ) :arg2 ( risk-01 :arg2 demolition ) ) :snt2 ( and :op1 ( person :arg0-of ( have-rel-role-91 :arg1 ( person :mod country_name_0 ) :arg2 kid ) ) :op2 ( person :arg0-of ( have-rel-role-91 :arg1 person :arg2 kid ) ) :op3 ( person :arg0-of ( have-rel-role-91 :arg1 person :arg2 kid ) ) :op4 ( person :arg0-of ( have-rel-role-91 :arg1 person :arg2 kid ) ) :op5 ( person :arg0-of ( have-rel-role-91 :arg1 person :arg2 kid ) ) :op6 ( person :arg0-of ( have-rel-role-91 :arg1 person :arg2 kid ) ) :op6 ( person :arg0-of ( have-rel-role-91 :arg1 person :arg2 kid ) ) :op7 ( advise-01 :arg0 person :arg1 ( issue-02 :arg0 ( minor :mod vulnerable ) ) ) )
contrast-01 :arg1 ( pain-01 :arg1 defeat-01 ) :arg2 ( amaze-01 :arg1 grow-01 )
start-01 :arg0 ( person :mod country_name_0 ) :arg1 match-03 :prep-against ( technique :mod ( force :mod country_name_1 ) :purpose fun )
result-01 :arg1 ( and :op1 ( person :quant num_0 ) :op2 ( team :mod country_name_0 ) ) :arg2 ( go-06 :polarity - :arg0 ( team :mod country_name_1 ) :mod even :mod even )
contrast-01 :arg1 ( possible-01 :arg1 ( begin-01 :arg0 ( person :mod country_name_0 ) :arg1 ( celebrate-02 :arg0 person ) ) ) :arg2 ( person :mod country_name_1 :time ( after :op1 ( lose-02 :arg0 person :arg1 ( capable-01 :arg1 person :arg2 ( sit-down-02 :arg1 person ) :mod just ) ) ) )
and :op1 ( confirm-01 :arg0 this :arg1 ( mean-01 :arg1 it :arg2 ( much :degree so ) :beneficiary we ) :mod only ) :op2 ( work-01 :arg0 ( and :op1 i :op2 robin :op3 robin ) )
say-01 :arg0 she :arg1 ( feel-01 :arg0 she :arg1 it :arg1-of reasonable-02 )
reduce-01 :arg1 ( deficit :mod budget :time ( year :mod this ) ) :arg4 ( and :op1 ( percentage-entity percentage-entity_num_0 ) :op2 ( percentage-entity percentage-entity_num_1 ) :op3 ( product :arg1-of gross-03 :mod domestic :quant ( percentage-entity num_3 ) ) ) :time ( year :mod this )
site :location riga :mod also
time :quant num_0 :mod another :time-of ( work-01 :arg0 ( person :arg0-of ( lead-02 :arg1 you ) ) )
contrast-01 :arg1 ( possible-01 :arg1 ( try-01 :arg0 you :arg1 ( haraldu :arg0 you :arg1 ( reg?u :mod reg?u ) ) ) ) :arg2 ( win-01 :arg0 you :arg1 ( good :degree more :compared-to ( version :mod this ) ) :arg1-of ( contrast-01 :arg2 ( show-01 :arg0 you :arg1 ( good :degree more :compared-to ( version :mod this ) ) :arg1-of ( contrast-01 :arg2 ( show-01 :arg0 version :arg1 ( stage :mod ( good :degree more :compared-to ( version :mod this ) ) ) ) ) ) ) )
contrast-01 :arg1 ( safe-01 :arg1 island_name_0 :degree enough ) :arg2 ( obligate-01 :arg2 ( lose-03 :polarity - :arg0 vigilance :location here :mod too ) )
and :op1 ( exciting :degree so :topic ( building :mod this ) :topic ( building :mod this ) ) :op2 ( assesses :arg0 ( opera :mod '' ) :arg1 ( and :op1 ( '' :mod opera ) :op2 ( '' :name ( name :op1 opera ) ) :op3 ( person :arg0-of ( drive-01 :arg1 muzik?lais ) ) :op4 ( person :arg0-of ( drive-01 :arg1 muzik?lais ) ) :op5 ( person :arg0-of ( drive-01 :arg1 muzik?lais ) ) :op6 ( person :arg0-of ( drive-01 :arg1 muzik?lais ) ) :op7 ( person :arg0-of ( drive-01 :arg1 muzik?lais ) ) :op7 ( person :arg0-of ( drive-01 :arg1 muzik?lais ) ) ) )
and :op1 ( acknowledge-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg1 ( person_name_0 :arg0-of ( have-org-role-91 :arg2 ( director :mod vice ) ) ) :arg2 ( director :mod vice ) ) ) :arg1 ( create-01 :arg0 ( and :op1 ( person :arg0-of ( have-org-role-91 :arg2 ( authority :arg1-of local-02 ) ) ) :op2 ( person :arg0-of ( have-org-role-91 :arg2 general ) ) ) :arg1 ( deal :mod good ) ) ) :op2 ( contrast-01 :arg1 ( welcome-01 :arg0 ( authority :arg1-of local-02 ) :arg1 ( idea :mod this ) ) :arg2 ( agree-01 :arg0 ( authority :arg1-of local-02 ) :arg1 ( thing :arg1-of suggest-01 ) ) )
contrast-01 :arg1 ( possible-01 :arg1 ( help-01 :arg0 ( combination :mod ( product :mod diet ) ) :arg1 ( reduce-01 :arg0 product :arg1 ( weight :mod blood ) ) ) ) :arg2 ( determined-02 :arg0 product :arg1 ( promote-02 :arg0 product :arg1 ( process-01 :arg1 bodily :mod altogether ) ) :mod also )
fat :prep-with ( food :mod ( rich :arg1-of protein ) )
show-01 :arg0 report :arg1 ( and :op1 ( thing :arg1-of report-01 ) :op2 ( thing :arg1-of state-01 ) :op3 ( report-01 :arg0 ( and :op1 ( thing :arg1-of state-01 ) :op2 ( thing :arg1-of state-01 ) :op3 ( report-01 :arg0 ( and :op1 ( thing :arg1-of state-01 ) :op2 ( thing :arg1-of state-01 ) ) :ord ( ordinal-entity ordinal-entity_num_0 ) ) ) :arg1 ( image :mod positive :arg1-of significant-02 ) :mod actual ) )
bad-07 :arg1 surprise-01 :degree ( so :polarity - ) :arg0-of surprise-01
multi-sentence :snt1 ( write-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg1 country_name_0 :arg3 ( write-01 :arg0 person ) ) ) :arg1 ( cost-01 :arg1 ( or :op1 ( monetary-quantity :arg1-of tax-01 ) :op2 ( thing :arg1-of tax-01 ) ) :arg2 ( or :op1 ( thing :arg1-of tax-01 ) :op2 ( thing :arg1-of tax-01 ) ) :mod ( little :degree very ) ) :op2 ( pay-01 :polarity - :arg0 person :arg3 ( column :mod business :mod new ) ) :op3 ( pay-01 :arg0 person :arg3 ( column :mod business :mod new ) ) :op4 ( report-01 :arg0 person :arg1 ( change-01 :arg1 nothing :time today ) ) ) :snt2 ( change-01 :arg1 nothing :time today )
demand-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg2 director ) ) :arg1 ( explain-01 :arg0 ( staff :location hotel ) )
resonance :arg1 ( event :mod this ) :arg1-of ( broad-02 :degree rather ) :location internet :arg1-of ( cause-01 :arg0 ( call-02 :arg0 person :arg1 internet ) )
use-01 :arg0 police :arg1 ( and :op1 ( cat :mod rubber ) :op2 gas ) :arg2 ( person :arg0-of study-01 )
graffiti :arg0 ( person :quant some :arg1-of ( include-91 :arg2 ( person :arg0-of ( have-org-role-91 :arg2 demonstrators ) ) ) ) :arg1 wall :arg2 ( message :prep-against ( message :prep-against ( person :arg0-of ( have-org-role-91 :arg2 ( president :mod interim ) ) ) ) )
manage-02 :arg0 they :arg1 it :time ( minute :mod last )
contrast-01 :arg1 ( fight-01 :arg2 drone :mod only :time ( day :mod that ) ) :arg2 ( news :polarity - :mod ( good :degree ( only :polarity - ) :beneficiary country_name_2 :domain they ) )
hope-01 :arg0 ( delegation :mod country_name_0 ) :arg1 ( and :op1 ( team :mod country_name_1 :mod cycling ) :op2 ( team :mod cycling :mod country ) ) :time middle
news :arg1 ( news :arg1-of ( become-01 :arg2 tradition :mod also :arg1-of possible-01 :mod also ) :arg0-of ( go-06 :arg1 ( and :op1 tractors :op2 motorcycles ) ) )
and :op2 ( come-01 :arg1 ( stage :mod wet ) :arg4 beings :mod also )
and :op1 ( excellent-02 :arg1 ( team :arg1-of excellent-02 :arg0-of ( lead-03 :arg2 ( monetary-quantity monetary-quantity_num_0 :unit ( dollar :mod renminbi ) :arg1-of ( value-01 :arg2 ( monetary-quantity monetary-quantity_num_1 :unit pound ) ) :arg1-of ( value-01 :arg2 ( monetary-quantity monetary-quantity_num_1 :unit pound ) ) :arg1-of ( value-01 :arg2 ( monetary-quantity monetary-quantity_num_1 :unit pound ) ) ) ) ) :arg3 ( monetary-quantity monetary-quantity_num_1 :unit ( mark :mod renminbi ) :arg1-of ( value-01 :arg2 ( monetary-quantity monetary-quantity_num_1 :unit pound ) ) ) ) :op2 ( and :op1 ( name-01 :arg1 team :arg2 ( district_name_0 :mod airport :mod ( good :degree most ) :location world ) ) :op2 ( end-01 :arg1 ( between :op1 ( temporal-quantity temporal-quantity_num_2 :unit year ) :op2 ( temporal-quantity temporal-quantity_num_2 :unit year ) ) :location world ) )
and :op1 ( blue :arg0 ( blue :name ( name :op1 lag?na ) :mod '' ) :arg1 ( container :mod experiment-01 :ord ( ordinal-entity ordinal-entity_num_1 ) ) :arg2 country_name_0 ) :op2 ( expand-01 :arg0 blue :arg1 ( agree-01 :arg1 ( cooperate-01 :arg2 ( chain :consist-of supermarket :mod new :location country_name_1 ) ) :mod cooperate-01 ) ) :li num_0
apply-02 :polarity - :arg1 ( thing :arg1-of restrict-01 :mod this ) :arg2 ( and :op1 ( person :arg0-of participate-01 ) :op2 ( transport-01 :arg1-of public-02 ) )
look-01 :arg0 model :arg1 ( topography :mod venus ) :mod also
and :op1 ( plej?des :arg1 it :degree so ) :op2 ( serve-01 :arg0 it :arg1 ( laboratory :mod space :mod great :location-of ( possible-01 :arg1 ( compare-01 :arg0 you :arg1 ( thing :arg2-of ( characteristic-02 :arg1 star ) ) :arg2 ( speeds :arg1 star ) ) ) ) )
announce-01 :arg0 ( police :mod country_name_0 ) :arg1 ( and :op1 ( recognize-02 :arg0 police :arg1 ( die-01 :arg1 he ) ) :op2 ( investigate-01 :arg1 ( die-01 :arg1 he ) :time current ) )
meet-03 :arg0 ( and :op1 ( person :arg0-of ( lead-02 :arg1 country_name_0 ) ) :op2 ( person :arg0-of ( lead-02 :arg1 country_name_1 ) ) ) :arg1 ( and :op1 ( restore-01 :arg0 and :arg1 hand ) :op2 ( tell-01 :arg0 and :arg1 ( and :op1 ( word :quant ( about :op1 ( temporal-quantity temporal-quantity_num_0 :unit month ) ) ) :op2 ( thing :arg2-of ( sanction-02 :arg1 country ) ) ) :arg2 ( end-01 :arg1 war ) ) )
make-01 :arg0 ( tv :mod this ) :arg1 ( and :op1 fruit :op2 ( thing :arg2-of price-01 ) ) :arg1-of ( cause-01 :arg0 ( revert :arg1 ( and :op1 ( thing :arg2-of ( price-01 :arg1 fruit ) ) :op2 ( thing :arg2-of price-01 ) ) ) ) :time ( week :mod this )
improve-01 :arg1 situation :arg1-of ( cause-01 :arg0 ( hit-01 :arg0 ( aircraft :quant num_0 :arg0-of ( have-org-role-91 :arg1 country_name_0 :arg2 member ) ) :arg1 situation :arg1-of ( cause-01 :arg0 ( negotiate-01 :arg0 ( person :quant num_0 :arg0-of lead-02 ) :mod at-least ) ) ) :time ( after :op1 ( hit-02 :arg0 ( aircraft :arg0-of ( combat-01 :arg1 combat-01 ) ) :arg1 ( and :op1 ( relation-03 :arg0 country :arg2 country ) :op2 ( disaster :mod potential ) ) ) ) :time ( after :op1 ( hit-02 :arg0 ( aircraft :arg0-of ( combat-01 :arg1 combat-01 ) ) :arg1 ( and :op1 ( relation-03 :arg0 country :arg2 country ) :op2 ( disaster :mod potential ) ) ) ) )
and :op1 ( cheerful :domain he :arg1-of ( perfect-02 :arg2 ( race :mod country_name_0 ) ) ) :op2 ( jockey :domain he :arg1-of brilliant-01 )
appear-01 :arg1 ( fish :mod horrendous :location ( city_name_0 :mod ( garden :polarity - ) ) )
illusion :domain it :mod just :concession ( raise-01 :arg0 ( rotation :quant num_0 ) :arg1 ( lead-02 :arg0 i ) :degree slight )
find-01 :arg1 ( side :mod both :part-of ( person :arg0-of ( have-org-role-91 :arg2 head-of-state ) ) )
contrast-01 :arg1 ( hit-01 :arg0 ( boat :arg0-of stray-01 ) :arg1 ( girl :mod 6-year-old ) ) :arg2 ( play-01 :arg0 she :location ( in-front-of :op1 ( house :poss he :location ( district :mod vestouklein ) ) ) )
and :op1 ( spend-01 :arg1 ( athletes :mod club :mod this ) :arg3 all ) :op2 ( contribute-01 :arg0 athletes :arg2 ( family :arg1-of ( have-org-role-91 :arg0 he :arg2 member ) ) :arg1-of long-03 )
find-01 :arg0 we :arg1 ( chance-02 :arg0 ( person :arg0-of ( have-org-role-91 :arg1 ( hometown :poss i ) :arg2 general ) ) :arg1 ( provide-01 :arg0 person :arg1 ( chance-02 :arg0 person :arg1 ( know-01 :arg0 person :arg1 ( sport :mod great :mod this ) ) ) ) :arg2 ( person :arg0-of ( have-org-role-91 :arg1 ( hometown :poss i ) :arg2 general ) ) :manner detroit )
possible-01 :arg1 ( examine-01 :arg0 ( person :mod country_name_0 ) :arg1 register-02 :manner ( thorough :degree more ) :purpose ( prevent-01 :arg0 person :arg1 ( use-01 :arg1 ( and :op1 ( roll :mod elect-01 ) :op2 ( defraud-01 :arg0 elect-01 ) ) :arg2 elect-01 ) :manner ( thorough :degree more ) ) :mod also ) :medium message
and :op1 ( confirm-01 :arg0 ( popularity :mod ( great :degree ( more :mod even ) ) ) :arg1 ( thing :quant num_0 :arg1-of ( include-91 :arg2 ( thing :arg1-of ( popular-02 :arg2 ( thing :quant num_1 :arg1-of ( popular-02 :arg2 ( name :op1 greg :op2 ruterford ) ) ) ) ) ) ) :time ( year :mod this ) ) :op2 ( undoubtedly :arg0 ( similarity :name ( name :op1 breathtaking :op2 similarity :op3 actor :op4 actor :op5 actor :op6 patrick :op7 actor ) ) :arg1 ( harris :mod patrick ) ) :time ( year :mod this )
multi-sentence :snt1 ( apologize-01 :arg0 ( person :arg1-of ( lead-02 :arg0 ( person :arg1-of ( broadcast-01 :arg2 ( live-01 :arg0 person ) ) ) ) :arg0-of ( apologize-01 :arg1 ( thing :arg1-of ( comment-01 :arg0 ( person :arg0-of live-01 ) ) ) ) ) :arg1 ( sorry-01 :arg1 person :arg2 ( come-01 :arg1 person :arg3 ( thing :arg2-of ( result-01 :arg1 swim-01 ) ) ) ) :time ( soon :op1 ( after :op1 ( after :op1 ( temporal-quantity temporal-quantity_num_0 :unit year ) ) ) ) ) :snt2 ( '' :arg1 ( thing :arg1-of ( comment-01 :arg3 ( thing :arg2-of ( result-01 :arg1 swim-01 ) ) ) ) :mod just :location here )
and :op1 ( watch-01 :arg0 everyone :arg1 ( panties :poss she ) ) :op2 ( like-01 :polarity - :arg0 they :arg1 she :arg1-of ( cause-01 :arg0 ( put-01 :arg0 she :arg1 she :arg2 ( back :op1 shelf ) :mod just ) ) )
multi-sentence :snt1 ( wake-up-02 :arg1 we :arg1-of ( cause-01 :arg0 ( quiet :domain it :degree so :location here ) ) ) :snt2 ( accustomed :polarity - :arg1 we :arg2 it )
plan-01 :arg0 ( park :mod water :location ( city :arg0-of ( have-org-role-91 :arg1 marseille ) ) ) :arg1 ( event :arg1-of private-02 ) :time ( week :mod this ) :arg1-of ( cause-01 :arg0 ( and :op1 ( right :mod right :domain ( measure-02 :mod such ) ) :op2 ( leave-15 :arg0 ( person :mod ( circle :mod politics ) ) :arg1 ( circle :mod politics ) ) ) ) :time ( week :mod this )
task :mod main :poss company :domain ( continue-01 :arg1 ( increase-01 :arg1 ( and :op1 ( turnover :mod both ) :op2 ( profit :mod both ) ) ) ) :time ( year :mod this ) :mod also
turns :arg0 ( person_name_0 :arg0-of ( have-org-role-91 :arg2 20030112 ) ) :arg1 ( temporal-quantity temporal-quantity_num_0 :unit year ) :time ( since :op1 ( bear-02 :arg1 ( person :arg0-of ( have-org-role-91 :arg2 president ) :arg0-of ( have-org-role-91 :arg2 president ) ) :ord ( ordinal-entity ordinal-entity_num_0 ) ) )
correct-02 :arg1 ( rest :part-of event_name_1 ) :degree very :time always
tell-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg2 ( president :mod vice ) ) ) :arg1 historians :time ( after :op1 ( take-over-12 :arg0 ( person :arg0-of ( have-org-role-91 :arg2 ( president :mod vice ) ) ) :arg1 ( tradition :mod this ) ) ) :time ( time :mod that )
visit-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg2 ( president :mod vice ) ) ) :arg1 ( and :op1 ( recognition :mod full :poss ( country :location sea_name_1 ) ) :op2 ( nation :mod democracy :location ( north :part-of north ) ) ) :mod also :mod also :li num_0
multi-sentence :snt1 ( face-01 :arg0 i :arg1 ( fact :topic ( anger-01 :arg0 ( anger-01 :arg0 ( anger-01 :arg0 ( anger-01 :arg0 ( anger-01 :arg0 ( anger-01 :arg0 ( anger-01 :arg0 ( anger-01 :arg0 ( anger-01 :arg0 ( anger-01 :arg0 ( anger-01 :arg0 ( anger-01 :arg0 ( anger-01 :arg0 ( anger-01 :arg0 ( anger-01 :arg0 ( anger-01 :arg0 ( anger-01 :arg0 ( anger-01 :arg0 ( anger-01 :arg0 ( anger-01 :arg0 ( anger-01 :arg0 ( anger-01 :arg0 ( anger-01 :arg0 ( anger-01 :arg0 ( anger-01 :arg0 ( anger-01 :arg0 ( anger-01 :arg0 ( anger-01 :arg0 ( anger-01 :arg0 ( anger-01 :arg0 ( anger-01 :arg0 ( anger-01 :arg0 ( anger-01 :arg0 ( anger-01 :arg0 ( anger-01 :arg0 ( anger-01 :arg0 ( anger-01 :arg0 ( anger-01 :arg0 child ) ) ) ) ) ) ) ) ) ) ) ) ) ) :arg1 i ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) )
have-condition-91 :arg1 ( moment :time ( start-01 :arg0 you :arg1 ( fall-01 :arg1 ( person :arg0-of ( have-rel-role-91 :arg1 you :arg2 partner ) ) :arg4 ( under :op1 you ) :purpose ( detail-01 :arg0 you ) ) ) ) :arg2 ( recommend-01 :arg1 ( explore-01 :arg0 you :arg1 ( field :mod other :arg0-of ( have-rel-role-91 :arg1 you :arg2 partner ) ) :purpose ( see-01 :arg0 you :arg1 ( or :op1 ( missing :arg0 you :arg1 he ) :op2 ( think-01 :arg0 you :arg1 ( or :op1 ( person :arg0-of ( have-rel-role-91 :arg1 you :arg2 partner ) ) :op2 ( person :mod especially :arg0-of ( want-01 :arg1 ( see-01 :arg0 you :arg1 he :time anymore ) :mod even ) ) ) ) ) ) ) )
include-91 :arg1 ( and :op1 ( person :arg0-of ( have-org-role-91 :arg1 art :arg3 ( drugs elimination museum :mod nation ) ) ) :op2 ( person :arg0-of ( have-org-role-91 :arg1 art :arg3 ( apprentice-01 :arg0 person ) ) ) :op3 ( person :arg0-of ( have-org-role-91 :arg1 art :arg3 ( apprentice-01 :arg0 person ) ) ) :op4 ( person :arg0-of ( have-org-role-91 :arg1 art :arg3 ( apprentice-01 :arg0 person ) ) ) :op5 ( person :arg0-of ( have-org-role-91 :arg1 art :arg3 ( apprentice-01 :arg0 person ) ) ) :arg1-of broad-02 ) :arg2 ( exhibition :arg1 ( and :op1 ( person :quant num_0 ) :op2 ( birthday :ord ( ordinal-entity ordinal-entity_num_1 ) ) :location ( level :mod international ) ) :time ( day :mod unesco ) )
report
person :arg1-of ( include-91 :arg2 ( person :arg1-of imprison-01 ) :arg3 ( around :op1 num_0 ) ) :time ( late :degree more )
and :op1 ( place-01 :arg0 ( city :arg0-of ( have-org-role-91 :arg1 country_name_0 :arg2 capital ) ) :arg1 ( person :quant num_0 :mod continent_name_1 :arg0-of ( have-org-role-91 :arg1 country :arg2 capital ) ) :location ( summit :name ( name :op1 -rrb- ) :mod continent_name_1 :mod ( formal :polarity - ) ) ) :op2 ( attend-01 :arg0 ( state :quant all :arg2-of ( except-01 :arg1 country_name_2 ) ) :arg1 country )
opine-01 :arg0 i :arg1 ( and :op1 ( approve-01 :arg0 ( committee :mod executive ) :arg1 ( circle :consist-of ( person :quant num_0 ) ) ) :op2 ( take-01 :polarity - :arg0 committee :arg1 ( person :quant num_1 :arg1-of ( include-91 :arg2 person ) ) ) ) :medium ( view-01 :arg0 i )
report-01 :arg0 agency :arg1 ( thursday :arg0 agency :arg1 ( weight :quant ( up-to :op1 ( mass-quantity mass-quantity_num_0 :unit kilogram ) ) ) :condition ( lose-02 :arg1 ( lose-02 :arg0 he :arg1 ( fight-01 :arg0 he :ord ( ordinal-entity ordinal-entity_num_1 ) :arg0-of ( experienced :arg1 ( borodavk :name ( name :op1 eugene :op2 eugene :op3 eugene ) ) ) ) ) ) ) :time already
divide-02 :arg1 ( game :mod olympic ) :arg2 ( and :op1 ( sets-archery :quant num_0 :mod medal ) :op2 gearbox :op3 ( cycling :mod track ) :op4 ( cycling :mod equestrian ) :op5 ( fencing :arg1 game ) :op6 ( shooting :arg1 game ) :op7 ( swimming :arg1 game ) :op8 ( weightlifting :arg1 game ) :op8 ( swim-01 :arg0 and ) :op8 ( weightlifting :arg0 and ) :op8 ( weightlifting :arg0 and ) :op8 ( weightlifting :arg0 and ) :op8 ( weightlifting :arg0 and ) :op8 ( weightlifting :arg0 and ) ) :time today
point-out-02 :arg0 ( office :poss person_name_0 ) :arg1 ( obligate-01 :arg1 ( company :mod this ) :arg2 ( pull-01 :arg1 company ) :arg1-of ( cause-01 :arg0 ( and :op1 ( form-01 :arg0 company :arg1 ( economy :mod and ) ) :op2 ( pay-01 :polarity - :arg0 company :arg1 ( thing :arg1-of tax-01 ) ) :op3 ( cause-01 :arg0 and :arg1 ( and :op1 fire :op2 ( risk-01 :arg2 sanitary ) ) ) ) ) )
and :op1 ( increase-01 :arg1 ( lead-02 :arg0 ( person :quant ( half :ord ( ordinal-entity ordinal-entity_num_0 ) ) ) ) :degree further ) :op2 ( end-01 :arg1 ( half :ord ( ordinal-entity ordinal-entity_num_0 ) ) )
critical-02 :arg1 ( cleanliness :location ( gulf :mod riga ) )
explain-01 :arg0 ( council :mod ( city :arg0-of ( have-org-role-91 :arg2 capital ) ) ) :arg1 ( difficult :domain ( fight-01 :arg1 ( person :arg0-of visit-01 :mod slovenly ) ) :degree quite ) :time ( day :mod every )
pleased :arg0 i :arg1 ( perform-02 :arg0 you :arg1 ( duty :arg1-of ( superior-01 :arg2 you ) :poss you ) )
rearranged :arg0 ( person_name_0 :arg0-of ( have-org-role-91 :arg2 president ) ) :arg1 ( elite :arg0-of rule-03 ) :time ( before :op1 ( elect-01 :arg1-of come-01 :quant ( multiple :op1 num_0 ) ) )
lose-02 :arg0 ( person :mod all ) :arg1 ( board :mod all )
stay-on-02 :arg1 we :time no-longer
zhongnanhai :arg0 ( culture :mod first-vef ) :arg1 ( and :op1 ( access-01 :arg1 ( home :mod home ) ) :op2 ( improve-01 :arg1 ( home :mod home ) ) )
and :op1 ( groups :polarity - :arg0 group :arg1 group :manner ( above :op1 ( act-02 :manner musicians :example ( and :op1 hugo :op2 wave-04 :op3 stern :op4 ( stark :name ( name :op1 ?? ) ) :op5 ( stark :name ( name :op1 ?? ) ) :op6 ( talis :name ( name :op1 ?? ) ) :op6 ( talis :name ( name :op1 ?? ) ) :op6 ( talis :name ( name :op1 ?? ) ) :op6 ( talis :name ( name :op1 ?? ) ) :op7 ( talis :name ( name :op1 ainars :op2 talis ) ) :op8 ( talis :name ( name :op1 ?? ) ) :op8 ( talis :name ( name :op1 leo ) ) :op8 ( talis :name ( name :op1 leo ) ) :op8 ( talis :name ( name :op1 guntars ) ) :op8 ( talis :name ( name :op1 guntars ) ) :op8 ( talis :name ( name :op1 guntars ) ) :op8 et-cetera ) ) ) )
and :op1 ( show-01 :arg0 ( and :op1 ( respond-01 :arg1 ( life :mod human ) :manner frank ) :op2 ( problem :topic kaj ) :degree most ) ) :op2 ( inspire-01 :arg0 and :arg1 he :mod next )
be-located-at-91 :arg1 ( city :arg0-of ( have-org-role-91 :arg1 country_name_0 :arg2 capital ) ) :arg2 ( side :part-of ( road :part-of ( man :mod die-01 ) ) )
and :op1 ( contain-01 :arg0 ( and :op1 oatmeal :op2 berries ) :arg1 ( fiber :arg1-of ( accord-02 :arg2 ( thing :arg1-of ( conclude-01 :arg0 scientist :arg1-of ( control-01 :arg0 ( company_name_2 :arg1-of ( control-01 :arg0 ( company_name_2 :arg1-of ( control-01 :arg0 grel?n ) ) ) ) ) ) ) ) ) ) :op2 ( infer-01 :arg1 ( feel-01 :arg0 and :arg1 ( hunger-01 :arg0 scientist ) ) )
and :op2 ( contain-01 :arg0 ( thing :arg1-of ( contain-01 :arg0 ( reduce-01 :arg1 weight ) ) ) :arg1 ( build-up :arg1 fat ) :mod also )
cause-01 :arg1 ( essential :domain ( eat-01 :arg1 ( food :mod sweet ) :time immediate :time ( after :op1 rose ) ) )
and :op1 ( take-10 :arg0 ( treat-03 :arg1 meat :arg2 ( and :op1 egg :op2 heat ) ) :arg1 ( protein :arg1-of natural-03 ) :direction away ) :op2 ( make-02 :arg0 treat-03 :arg1 ( digestible :arg1-of ( easy-05 :degree more ) ) )
multi-sentence :snt1 ( and :op1 ( create-01 :arg0 ( person :arg0-of ( use-01 :arg1 ( person :arg0-of ( use-01 :arg1 ( person :arg0-of use-01 ) ) ) ) ) :arg1 ( image :mod such ) ) :op2 ( remain-01 :polarity - :arg1 ( thing :mod such ) :arg3 ( person :arg0-of ( use-01 :arg1 ( person :arg0-of use-01 ) ) ) ) :time today ) :snt2 ( interview :arg1 ( thing :mod such ) :medium ( interview-01 :arg1 ( katie :name ( name :op1 25-year-old ) ) ) )
and :op1 ( criticize-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg1 company_name_0 ) ) :arg1 ( manage-01 :arg1 company ) :arg2 ( manage-01 :arg0 company :arg1 ( man :mod white ) :mod primary ) ) :op2 ( close-01 :arg0 person :arg1 ( article :poss person ) :manner ( deletesnapchat :arg1 person ) :time then )
multi-sentence :snt1 ( news :time ( late :degree most ) :topic ( tell-01 :arg1 ( report-01 :arg0 intelligence :arg1 ( reflect-01 :arg1 ( report-01 :arg0 intelligence :arg0-of ( confirm-01 :arg1 ( person :arg0-of ( have-org-role-91 :arg2 ( executive :arg1-of high-02 ) ) ) :arg2 ( person :arg0-of ( have-org-role-91 :arg2 ( executive :mod ranking ) ) ) ) :arg0-of ( confirm-01 :arg1 ( fight-01 :arg0 we :arg2 ( positive :degree more ) ) ) ) ) ) ) :arg2 you ) :snt2 ( show-01 :arg1 ( thing :mod ( good :degree more :compared-to ( show-01 :arg1 ( thing :mod ( good :degree more :compared-to ( analyze-01 :arg0 intelligence :arg1 intelligence ) ) ) ) ) ) :arg1-of regular-02 )
progressed :arg0 ( report :arg1-of ( publish-01 :medium ( url-entity :value thursday ) ) ) :arg1 case-03 :time case-03
and :op2 ( do-02 :arg1 so )
make-01 :arg1 ( and :op1 ( ingredient :mod basic ) :op2 ( ingredient :mod other :arg0-of ( enrich-01 :arg1 concept ) ) ) :arg2 they
multi-sentence :snt1 ( tell-01 :arg0 lord :arg1 amr-unknown :arg2 amr-unknown ) :snt2 ( love-01 :arg0 he :arg1 ( cuisine :mod continent_name_0 :example ( sauce :mod cucumber ) ) )
initiate-01 :arg1 case-03 :time ( and :op1 ( initiate-01 :arg1 case-03 ) :op2 ( bring-01 :arg0 ( and :op1 gilead :op2 merck ) :arg1 proceeding-02 :prep-against ( other :mod each ) ) :manner ( try-01 :arg0 and :arg1 ( obtain-01 :arg0 and :arg1 ( own-01 :arg1 ( component :arg1-of ( develop-02 :mod new ) :arg1-of ( develop-02 :mod new ) ) ) :mod main ) ) )
hope-01 :arg0 ( delegation :mod country_name_0 ) :arg1 ( hope-01 :arg0 ( team :mod country_name_1 ) :arg1 ( include-91 :arg1 ( and :op1 ( team :mod country ) :op2 ( team :poss country ) ) :arg2 ( period :mod ( game :mod olympic ) ) ) )
project :mod infrastructure :arg0-of ( benefit-01 :arg1 ( community :mod entire ) :arg1-of ( instead-of-91 :arg2 ( benefit-01 :arg0 project :arg1 individual ) ) ) :arg1-of ( resemble-01 :arg2 olympics )
and :op1 ( initiate-01 :arg1 ( investigate-01 :arg2-of criminal-03 ) :mod also :prep-in ( case :mod this ) :mod also ) :op2 ( say-01 :arg0 ( edition :name ( name :op1 de :op2 de :op3 de ) ) :arg1 ( person :arg0-of ( have-rel-role-91 :arg1 person :arg2 lawyer ) ) )
multi-sentence :snt1 ( adds :domain ( adds :mod hofsteller ) ) :snt2 ( learn-01 :arg0 it :arg1 ( person :arg0-of prosecute-01 ) )
cause-01 :arg1 ( play-11 :arg0 i :arg1-of bad-05 :condition ( lose-03 :arg0 we ) )
cause-01 :arg1 ( express-01 :arg0 i :arg1 ( and :op1 ( involve-01 :arg1 ( and :op1 create-01 :op2 legislation :arg1-of ( involve-01 :arg2 ( and :op1 create-01 :op2 legislate-01 ) ) ) :arg2 part :arg1-of ( activity-06 :arg0 it ) ) :op2 ( submit-01 :arg0 it :arg1 ( thing :arg1-of ( propose-01 :arg0 they ) ) :arg2 ( thing :arg1-of ( propose-01 :arg0 they ) ) ) ) )
and :op1 ( send-01 :arg0 ( blue :name ( name :op1 lagoon :op2 lagoon ) ) :arg1 ( container :mod experiment-01 :ord ( ordinal-entity ordinal-entity_num_1 ) ) :arg2 country_name_0 ) :op2 ( expand-01 :arg0 blue :arg1 ( and :op1 ( outlet :mod market ) :op2 ( outlets :mod market ) ) :arg4 country :time ( year :mod this ) ) :op3 ( sign-02 :arg0 blue :arg1 ( agree-01 :arg1 cooperate-01 :arg2 ( chain :consist-of supermarket :mod new :location country_name_1 ) ) :time ( year :mod this ) )
succeed-01 :arg0 ( antonenko :mod ( opera :mod metropolitan ) ) :arg1 ( role :poss ( prince :location ( '' :name ( name :op1 '' :op2 mermaid :op3 mermaid ) ) ) ) :degree great
multi-sentence :snt1 ( possible-01 :arg1 ( make-02 :arg0 ( person :arg0-of hack-04 :arg0-of ( crack :arg1 ( computer :mod ( democrat :mod country_name_0 ) :mod country_name_1 ) ) ) :arg1 ( attack-01 :mod cyber :mod other :quant several ) ) ) :snt2 ( uzlauzu :arg0 ( and :op1 ( person :arg0-of ( have-org-role-91 :arg2 commander :time former ) :arg0-of ( have-org-role-91 :arg2 commander :time former ) :arg0-of ( have-org-role-91 :arg2 commander :time former ) ) :op2 ( person :arg0-of ( have-org-role-91 :arg2 commander :time former ) :arg0-of ( have-org-role-91 :arg2 commander ) ) :op3 ( person :arg0-of ( have-org-role-91 :arg2 commander :time former ) :arg0-of ( have-org-role-91 :arg2 commander ) ) :op4 ( person :arg0-of ( have-org-role-91 :arg2 commander :time former ) :arg0-of ( have-org-role-91 :arg2 commander ) ) :op5 ( person :arg0-of ( have-org-role-91 :arg2 commander ) ) :op6 ( person :arg0-of ( have-org-role-91 :arg2 thursday ) ) :op7 ( person :arg0-of ( have-org-role-91 :arg1 ( news :mod news :mod business ) :arg2 thursday ) ) ) )
venus :arg1 ( brighter :quant ( about :op1 num_0 ) ) :time ( early :op1 sun )
(-(
say-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg2 spokesman ) ) :arg1 ( and :op1 ( team :mod small :domain we ) :op2 ( work-01 :arg0 we :arg1 ( family :arg1-of ( have-org-role-91 :arg0 he :arg2 member ) ) ) ) :op3 ( say-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg2 spokesman ) ) :arg1 ( person :arg0-of ( have-org-role-91 :arg2 spokesman ) ) )
say-01 :arg0 ( website :mod ( url-entity :value kremlin ) :location country_name_0 ) :arg1 ( lead-02 :arg0 he :arg1 ( and :op1 ( protocol :mod president ) :op2 ( government-organization :arg0-of ( govern-01 :arg1 ( government-organization :arg0-of govern-01 ) :arg1-of employ-01 ) ) ) :time ( late :degree more ) )
obligate-01
charge-05 :arg1 ( person :arg0-of ( have-org-role-91 :arg1 ( police :mod criticises ) :arg2 lilan ) ) :arg1-of strong-02 :time case-03
say-01 :arg1 ( see-01 :polarity - :arg0 i :arg1 ( thing :quant lot :arg1-of ( include-91 :arg2 ( thing :arg2-of ( except-01 :arg1 ( thing :arg2-of ( except-01 :arg1 ( edition :name ( name :op1 huffington ) ) ) ) ) ) ) ) :arg1-of personal-02 ) :arg2 person_name_0 :arg1-of personal-02
and :op1 ( fortunate-01 :polarity - :arg1 ( choose-01 :arg1 word ) ) :op2 ( sorry-01 :arg1 we :arg2 ( event :mod it ) :degree very )
and :op1 ( broken :arg1 ( and :op1 gr?d?s :op2 ( holes :location wall ) ) :degree ( wide :degree too ) ) :op2 ( barely :arg1 wall :arg2 graffiti )
say-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg1 ( security :mod district ) :arg2 ( chief :mod ( security :mod district ) ) ) ) :arg1 ( cooperate-01 :polarity - :arg0 family :arg1 ( authority :mod security :arg1-of local-02 ) )
say-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg1 political-party_name_0 ) ) :arg1 ( person :quant num_0 :domain he :arg1-of ( close-10 :arg2 person ) ) :arg1-of ( say-01 :arg0 person )
he :mod ( after :op1 ( netiec?s :arg0 he :arg1 it :manner simple ) )
think-01 :mode imperative :arg0 you :arg1 ( betrayal :mod small :time already )
register-02 :arg1 ( accidents :mod traffic :quant ( num_0 :mod road ) :arg0-of ( suffer-01 :arg1 ( person :quant num_1 ) ) ) :time ( day :mod last )
say-01 :arg0 ( study :mod new ) :arg1 ( contrast-01 :arg1 ( possible-01 :arg1 ( high-02 :arg1 ( number :quant-of ( thing :arg1-of ( border-01 :arg2 ( yoke :mod communism ) :time former ) ) ) :degree ( more :quant much ) :compared-to ( estimate-01 :time previous ) ) ) :arg2 ( doubt-01 :arg1 ( address-02 :polarity - :arg1 ( number :quant-of victim :mod true ) ) ) )
multi-sentence :snt1 ( contrast-01 :mode interrogative ) :snt2 ( convince-01 :mode interrogative :arg1 you :arg2 ( draw-02 :arg0 that :arg1 ( distinction :topic ( person :mod elderly :arg1-of ( die-01 :arg1-of possible-01 :arg1-of ( cause-01 :arg0 ( result-01 :arg1 ( treat-03 :arg1 person ) :arg2 ( person :mod elderly ) :arg1-of ( cause-01 :arg0 ( and :op1 ( face-01 :arg0 person :arg1 ( treat-03 :arg1 person ) ) :op2 ( wait-01 :arg1 person :arg2 ( wait-01 :arg1 person :arg2 ( bus :location border-01 ) ) ) ) ) ) ) ) ) ) ) )
multi-sentence :snt1 ( know-01 :arg0 i :arg1 ( know-01 :arg0 i :arg1 ( thing :arg0-of ( cause-01 :arg1 ( room :polarity - :mod ( enough :polarity - ) ) :mod exact ) ) ) ) :snt2 ( say-01 :arg0 i :arg1 ( appreciate-02 :polarity - :arg0 society :arg1 ( and :op1 criminal-organization_name_0 :op2 ( person :arg0-of ( have-org-role-91 :arg1 criminal-organization_name_0 :arg2 president ) ) :op3 ( person :arg0-of ( have-org-role-91 :arg1 criminal-organization :arg2 president ) ) :op4 ( person :arg0-of ( have-org-role-91 :arg1 criminal-organization :arg2 president ) ) :op5 ( person :arg0-of ( have-org-role-91 :arg1 criminal-organization :arg2 president ) ) ) ) )
guarantee-01 :arg0 ( company :arg0-of ( provide-01 :arg1 information ) ) :arg1 guarantee-01
sign-01 :arg0 ( person :quant ( more-than :op1 num_0 ) ) :arg1 ( petition-01 :arg0 person :arg1 ( protect-01 :arg1 ( person :arg0-of ( have-rel-role-91 :arg1 child :arg2 child ) ) ) )
contrast-01 :arg1 ( pain-01 :arg1 ( defeat-01 :mod this ) ) :arg2 ( surprise-01 :arg1 surprise-01 )
result-01 :arg1 num_0 :arg2 ( and :op1 ( person :quant num_1 ) :op2 ( team :mod country_name_0 ) :op3 ( team :mod country_name_1 ) ) :mod ( even :polarity - )
think-01 :arg0 ( think-01 :ord ( ordinal-entity ordinal-entity_num_0 ) ) :arg1 ( and :op1 frustrate-01 :op2 irritation :domain ( and :op1 frustrate-01 :op2 irritation :arg0-of ( speak-01 :degree ( more :compared-to usual ) ) ) :time ( morning :mod that ) ) :time ( after :op1 win-01 )
say-01 :arg0 ( unit :mod ( military :mod royal ) :location country_name_0 ) :arg1 ( contrast-01 :arg1 ( tough-02 :arg1 this :time ( week :arg1-of tough-02 ) ) :arg2 ( mean-01 :arg1 this :arg2 lot ) )
multi-sentence :snt1 ( and :op2 ( intend-01 :mode interrogative :arg0 you ) ) :snt2 ( intend-01 :mode interrogative :arg0 you :arg1 ( and :op1 ( discuss-01 :arg0 you ) :op2 ( show-01 :arg0 you :arg1 ( image :arg0-of ( show-01 :arg1 ( design-01 :arg1 ( and :op1 ( design-01 :arg1 gudhue ) :op2 ( design-01 :arg1 gudhue ) :quant ( multiple :op1 num_1 ) ) ) :op3 ( restoration :arg0 ( and :op1 ( person :quant num_1 :arg0-of mine-01 ) :op2 ( person :arg0-of extort-01 ) ) :arg2 team ) ) ) ) ) )
except-01 :arg1 ( and :op1 ( site :location liepaja ) :op2 ( site :quant some :location kurzeme ) ) :arg2 ( and :op1 beach :op2 ( site :quant some :location kurzeme ) )
and :op1 ( '' :arg0 ( figure :arg1-of average-03 ) :arg1 ( figure :arg1-of average-03 :quant ( all :op1 num_0 ) :arg1-of ( include-91 :arg2 ( area :name ( name :op1 riga :op2 bathing :op3 iem :op4 iem :op5 iem :op6 iem :op7 iem ) ) ) ) ) :op2 ( meet-01 :arg0 figure :arg1 ( or :op1 ( thing :arg1-of target-01 ) :op2 ( target :name ( name :op1 ?? ) ) :op3 ( thing :arg1-of target-01 ) ) :arg2-of ( fortunate-01 :polarity - ) ) :arg2-of ( fortunate-01 :polarity - ) :arg1-of ( mean-01 :arg2 ( and :op1 ( meet-01 :arg0 ( figure :arg1-of average-03 ) :arg1 ( and :op1 ( thing :arg1-of target-01 ) :op2 ( target :name ( name :op1 ?? ) ) ) ) :op2 ( target :arg1-of target-01 ) ) :arg2-of ( fortunate-01 :polarity - ) )
leave-14 :mode interrogative :arg0 it :arg1 office
cause-01 :arg1 ( convince-01 :arg0 i :arg1 ( and :op1 ( ready-02 :arg1 he :arg2 job ) :op2 ( ready-02 :arg1 he :arg2 job ) :time ( after :op1 ( and :op1 ( character :mod professional :mod all ) :op2 ( character :arg1-of personal-02 ) ) ) ) )
vaino :arg0 ( family :arg0-of ( belong-01 :arg1 ( elite :mod ( party :mod country_name_0 ) ) ) ) :arg1 vaino
multi-sentence :snt1 significant-02 :snt2 ( obligate-01 :arg2 ( take-01 :arg0 you :arg1 part :arg3 ( class :mod weight :mod another ) ) :arg1-of significant-02 ) :snt3 ( obligate-01 :arg2 ( participate-01 :arg0 you :arg1 ( class :mod ( weight :mod another ) ) :compared-to usual ) :arg1-of ( cause-01 :arg0 ( category :mod weight :destination ( up-to :op1 ( mass-quantity mass-quantity_num_0 :unit kilogram ) ) ) ) )
multi-sentence :snt1 ( want-01 :polarity - :arg0 no-one :arg1 ( die-01 :arg1 no-one ) :arg1-of ( cause-01 :arg0 ( want-01 :polarity - :arg0 no-one :arg1 ( die-01 :arg1 no-one ) ) ) ) :snt2 ( korta :mode interrogative :location ( throughout :op1 ( match-03 :mod whole ) ) )
and :op1 ( flight :arg1 ( ?? :name ( name :op1 d?te :op2 d?te :op3 d?te ) ) :arg2 ( floor :ord ( ordinal-entity ordinal-entity_num_0 ) :arg1-of ( close-10 :arg2 network :degree too ) ) ) :op2 ( remain-01 :arg1 ( floor :ord ( ordinal-entity ordinal-entity_num_0 ) ) :arg4 ( and :op1 network :op2 samoilovam ) :arg1-of ( cause-01 :arg0 ( version :mod ( little :degree very ) :mod ( version :mod ( little :degree very ) ) ) ) )
include-91 :arg1 multivitamin :arg2 ( room :quant several :arg2-of ( include-01 :arg1 ( and :op1 ( person :quant num_0 :arg0-of view-01 ) :op2 ( person :arg0-of view-01 ) :op3 ( building :arg1-of ( reduce-01 :arg2 ( reduce-01 :arg1 person ) ) ) ) ) )
and :op1 ( '' :arg0 ( person :arg0-of ( have-org-role-91 :arg1 ( church :mod religious-group_name_0 ) :arg2 metropol?ts ) ) :arg1 ( church :mod religious-group_name_1 ) :medium ( interview-01 :arg1 person :mod seimas ) ) :op2 ( obligate-01 :arg2 ( be-located-at-91 :arg1 person :arg2 ( heart :part-of ( message :mod frank ) ) :condition ( want-01 :arg0 we :arg1 ( make-01 :arg0 we :arg1 ( force :mod life ) ) ) ) )
presides :arg1 ( day :time previous ) :arg2 ( worship :mod vig?lijas :mod festive )
show-01 :arg0 ( cameras :arg0-of surveil-01 :arg0-of surveil-01 ) :arg1 ( and :op1 ( person :arg0-of ( drive-01 :arg1 car ) ) :op2 ( person :arg0-of ( drive-01 :arg1 car ) ) :purpose ( access-01 :arg0 person :arg1 victim ) :time then )
be-located-at-91 :arg1 ( and :op1 ( location :name ( name :op1 paspilgtina ) :mod small ) :op2 ( location :name ( name :op1 paspilgtina ) ) ) :arg2 ( location :location-of ( shores :arg1 ( and :op1 ( port :mod passenger ) :op2 ( ship :mod cruise ) ) ) ) :location ( shore :poss ( ku?ot?jiem :mod small ) )
show-01 :arg0 study-01 :arg1 ( possible-01 :arg1 ( help-01 :arg0 ( person :arg0-of study-01 ) :arg1 ( rid-01 :arg0 person :arg1 fat :location ( area :mod abdominal ) ) ) )
cause-01 :arg1 ( important :domain ( eat-01 :polarity - :arg1 they :time ( after :op1 meals ) ) )
possible-01 :arg1 ( combine-01 :arg1 protein :arg2 ( amount :mod ( small :degree very ) :mod ( small :degree very ) ) )
multi-sentence :snt1 ( help-01 :mode interrogative :arg0 ( vitamin :mod c ) :arg1 ( change-01 :arg0 vitamin :arg1 not-asinsrado ) ) :snt2 ( iron :mode expressive ) :snt3 ( cause-01 :arg1 ( iron :arg0 ( organism :poss we ) :arg1 ( easy-05 :arg1 ( absorb :arg0 we ) :degree more ) ) )
open-01 :arg0 ( person :arg0-of play-01 :mod ceturdienas ) :arg1 ( thing :arg2-of result-01 ) :arg0-of ( achieve-01 :arg1 ( goal :mod ( half :ord ( ordinal-entity ordinal-entity_num_0 ) ) :arg1-of ( shoot-01 :arg2 ( distance-01 :arg2 close ) ) ) )
contrast-01 :arg1 ( start-01 :arg0 country_name_0 :arg1 game :manner ( win-01 :polarity - :arg0 country :location ( account :poss he ) ) ) :arg2 ( and :op1 ( tough-02 :arg1 ( team :poss they ) :degree very ) :op2 ( hold-01 :arg0 team :arg1 ( result :arg1-of civilize-01 ) :time ( until :op1 ( period :ord ( ordinal-entity ordinal-entity_num_0 ) :ord ( ordinal-entity ordinal-entity_num_2 ) :ord ( ordinal-entity ordinal-entity_num_2 ) ) ) ) )
ap?da :mode imperative :arg0 you :arg1 ( few :op1 ( temporal-quantity temporal-quantity_num_0 :unit month ) )
decide-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg3 judge-01 ) :mod district ) :arg1 ( receive-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg3 judge-01 ) ) :arg1 ( thing :arg2-of ( cost-01 :arg1 ( lawyer :arg0-of ( pay-01 :arg1 ( patent-01 :arg1 patent-01 :prep-against ( organization_name_0 :mod pharmaceutical ) ) ) ) ) ) )
say-01 :arg0 person_name_0 :arg1 ( and :op1 ( carry-out-03 :arg0 ( person :arg0-of vote-01 ) :arg1 ( person :arg0-of vote-01 ) ) :op2 ( fear-01 :arg0 person :arg1 ( person :arg0-of vote-01 ) :arg1-of ( instead-of-91 :arg2 ( authority :mod tax ) ) ) )
multi-sentence :snt1 ( gathered :arg1 ( game :mod 6a ) :time ( after :op1 ( gather-03 :mod 6a ) :quant all ) ) :snt2 ( start-01 :arg1 ( start-01 :arg1 celebration ) )
multi-sentence :snt1 ( and :op1 ( wrong-02 :arg1 ( sceptics :mod sceptics ) :arg2 num_0 ) :op2 ( case :mod heathrow :mod also ) ) :snt2 ( true :polarity - :domain they )
and :op1 ( come-01 :arg1 time :purpose ( and :op1 ( revival :arg0 we :arg1 ( spirit :mod olympic ) ) :op2 ( expand-01 :arg0 we :arg1 heathrow ) :op3 ( ensure-01 :arg0 we :arg1 ( future :poss ( trade-01 :arg0 we ) ) ) ) ) :op2 ( possible-01 :arg1 ( pride-01 :arg0 country_name_0 :arg2 country_name_1 ) )
multi-sentence :snt1 ( say-01 :arg0 ( person :mod country_name_0 ) :arg1 ( ne?rt?k :domain person ) :time ( before :op1 ( date-entity :time already ) ) ) :snt2 ( possible-01 :arg1 ( be-02 :arg1 amr-unknown ) )
opine-01 :arg0 ( thing :arg1-of ( opine-01 :arg0 ( thing :arg1-of ( opine-01 :arg0 ( person :arg1-of expert-01 ) ) ) ) ) :arg1 ( and :op1 ( possible-01 :arg1 ( operate-01 :polarity - :arg0 ( apartments :quant num_0 ) ) ) :op2 ( be-located-at-91 :arg1 thing :arg2 ( flat :mod dmitry ) ) ) :arg1-of long-03
multi-sentence :snt1 ( hotel :mode interrogative :poss park ) :snt2 ( fund-01 :arg0 ( and :op1 ( person :arg0-of ( own-01 :arg1 clinics ) ) :op2 ( person :arg0-of ( own-01 :arg1 clinics ) ) :op3 ( person :arg0-of ( own-01 :arg1 clinics ) ) :op4 ( person :arg0-of ( own-01 :arg1 clinics ) ) :op5 ( person :arg0-of ( own-01 :arg1 clinics ) ) :op6 ( person :arg0-of ( own-01 :arg1 clinics ) ) :op6 ( person :arg0-of ( own-01 :arg1 clinics ) ) :op6 ( person :arg0-of ( own-01 :arg1 clinics ) ) :op6 ( person :arg0-of ( own-01 :arg1 clinics ) ) :op6 ( person :arg0-of ( own-01 :arg1 clinics ) ) :op6 ( person :arg0-of ( own-01 :arg1 clinics ) ) :op6 ( person :arg0-of ( own-01 :arg1 clinics ) ) :op7 ( person :arg0-of ( own-01 :arg1 clinics ) ) ) )
multi-sentence :snt1 ( succeed-01 :arg0 ( person :quant num_0 :mod anto?enko ) :arg1 ( succeed-01 :arg0 person :arg1 ( role :mod ( prince :mod ( opera :mod metropolitan ) ) ) :mod great ) ) :snt2 ( '' :mode interrogative )
undermine-01 :arg0 ( person_name_0 :mod beatles ) :arg1 ( ono :mod joko )
pain-01 :arg1 it :degree too :condition ( see-01 :arg0 you :arg1 ( animal :mod domestic :poss animal ) )
result-01 :arg1 ( temperature :arg1-of moderate-03 :mod climate ) :arg2 ( few :op1 ( volume-quantity volume-quantity_num_0 :unit gallon ) ) :time fact :arg1-of ( cause-01 :arg0 ( temperature :part-of earth :time today ) )
return-01 :arg1 ( person :arg0-of ( work-01 :arg1 oil ) :location north ) :arg4 ( table :mod negotiate-01 )
state-01 :arg1 ( agree-01 :arg0 ( and :op1 ( group :consist-of wood ) :op2 unite-01 :op3 ( union :mod rmt ) ) :arg1 ( resume-01 :arg0 and :arg1 ( talk-01 :arg0 group :arg1 ( resolve-01 :arg1 dispute-01 ) ) ) )
and :op1 ( cut-02 :arg0 shell :arg1 ( wage :poss person ) :time already ) :op2 ( announce-01 :arg0 shell :arg1 ( plan-01 :arg1 ( stop-01 :arg1 ( and :op1 ( operation :mod oil ) :op2 ( operation :mod gas :arg1-of natural-03 :location ( country :quant num_0 ) ) ) ) :purpose ( optimise :arg0 and :arg1 ( work-01 :arg0 and ) :purpose ( merge-01 :arg1 ( deal-01 :arg0 group :arg1 group :arg2 energy :arg1-of major-02 ) ) ) ) ) :time meanwhile
multi-sentence :snt1 ( hope-01 :arg0 we :arg1 ( compare-01 :arg1 ( thing :arg2-of ( result-01 :arg1 ( thing :arg2-of ( result-01 :arg1 ( thing :arg2-of ( result-01 :arg1 ( thing :arg2-of ( result-01 :arg1 ( thing :arg2-of ( result-01 :arg1 ( thing :arg2-of ( result-01 :arg1 ( thing :arg2-of ( result-01 :arg1 ( thing :arg2-of ( result-01 :arg1 ( thing :arg2-of ( result-01 :arg1 ( thing :arg2-of ( result-01 :arg1 ( thing :arg2-of ( result-01 :arg1 ( thing :arg2-of ( result-01 :arg1 ( thing :arg2-of ( result-01 :arg1 ( thing :arg2-of ( result-01 :arg1 ( thing :arg2-of ( result-01 :arg1 ( thing :arg2-of ( result-01 :arg1 ( thing :arg2-of ( result-01 :arg1 ( thing :arg2-of ( result-01 :arg1 ( thing :arg2-of ( result-01 :arg1 ( thing :arg2-of ( result-01 :arg1 ( thing :arg2-of ( result-01 :arg1 ( thing :arg2-of ( result-01 :arg1 ( thing :arg2-of ( result-01 :arg1 ( thing :arg2-of ( result-01 :arg1 ( thing :arg2-of ( result-01 :arg1 ( thing :arg2-of ( result-01 :arg1 ( thing :arg2-of ( result-01 :arg1 ( thing :arg2-of ( result-01 :arg1 ( thing :arg2-of ( result-01 :arg1 ( thing :arg2-of ( result-01 :arg1 ( thing :arg2-of ( result-01 :arg1 ( thing :arg2-of ( result-01 :arg1 ( thing :arg2-of ( result-01 :arg1 ( thing :arg2-of ( result-01 :arg1 ( thing :arg2-of ( result-01 :arg1 ( thing :arg2-of ( result-01 :arg1 ( thing :arg2-of ( result-01 :arg1 ( thing :arg2-of ( result-01 :arg1 ( thing :arg2-of ( result-01 :arg1 ( thing :arg2-of ( result-01 :arg1 ( thing :arg2-of ( result-01 :arg1 ( thing :arg2-of ( result-01 :arg1 ( thing :arg2-of ( result-01 :arg1 ( thing :arg2-of ( result-01 :arg1 ( thing :arg2-of ( result-01 :arg1 ( thing :arg2-of ( result-01 :arg1 ( system :mod solar ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) :degree more ) ) ) ) ) )
thank-01 :arg0 i :arg1 ( and :op1 ( close-10 :arg1 ( laboratory :mod ( space :mod great ) ) :arg2 ( laboratory :mod space :mod great ) ) :op2 ( be-located-at-91 :arg1 star :arg2 ( laboratory :mod space :mod great :location-of ( compare-01 :arg1 star :arg2 ( perform-01 :arg1 ( perform-02 :arg0 star :arg1 speed ) ) ) ) ) )
say-01 :arg0 ( person :arg1-of ( find-01 :location ( supermarket :mod westphan ) ) :arg1-of ( find-01 :location ( supermarket :mod westphan ) ) :arg1-of ( find-01 :location ( supermarket :mod westphan ) ) ) :arg1 ( court :mod san :mod san )
claim-01 :arg0 i :arg1 ( know-01 :arg0 i :arg1 ( know-01 :arg0 i :arg1 ( know-01 :arg0 i :arg1 ( amr-unknown :arg1-of ( resemble-01 :arg2 ( go-02 :arg0 i :arg4 ( across :op1 ( person :mod ( young :degree more ) :arg0-of ( have-rel-role-91 :arg1 he :arg2 ( brother :mod ( young :degree more ) ) ) ) ) ) ) ) :degree total ) ) )
report
contrast-01 :arg2 ( differ-01 :arg0 ( country :quant num_0 ) :arg1-of significant-02 :mod still :concession ( show-04 :arg1-of public-02 ) )
jack :arg0 ( jack :ord ( ordinal-entity ordinal-entity_num_0 ) ) :arg1 ( thing :arg2-of result-01 )
adopt-01 :arg0 ( girl :arg1-of ( discover-01 :arg0 ( country :ord ( ordinal-entity ordinal-entity_num_0 ) :arg0-of ( have-rel-role-91 :arg1 ( person :arg0-of ( have-rel-role-91 :arg1 ( person :arg0-of ( have-rel-role-91 :arg1 ( person :arg0-of ( have-rel-role-91 :arg1 ( person :arg0-of ( have-rel-role-91 :arg1 ( person :arg0-of ( have-rel-role-91 :arg1 ( person :arg0-of ( have-rel-role-91 :arg1 ( person :arg0-of ( have-rel-role-91 :arg1 ( person :arg0-of ( have-rel-role-91 :arg1 ( person :arg0-of ( have-rel-role-91 :arg1 ( person :arg0-of ( have-rel-role-91 :arg1 ( person :arg0-of ( have-rel-role-91 :arg1 ( person :arg0-of ( have-rel-role-91 :arg1 ( person :arg0-of ( have-rel-role-91 :arg1 ( person :arg0-of ( have-rel-role-91 :arg1 ( person :arg0-of ( have-rel-role-91 :arg1 ( person :arg0-of ( have-rel-role-91 :arg1 ( person :arg0-of ( have-rel-role-91 :arg1 ( person :arg0-of ( have-rel-role-91 :arg1 ( person :arg0-of ( have-rel-role-91 :arg1 ( person :arg0-of ( have-rel-role-91 :arg1 ( person :arg0-of ( have-rel-role-91 :arg1 ( person :arg0-of ( have-rel-role-91 :arg1 ( person :arg0-of ( have-rel-role-91 :arg1 ( person :arg0-of ( have-rel-role-91 :arg1 ( person :arg0-of ( have-rel-role-91 :arg1 ( person :arg0-of ( have-rel-role-91 :arg1 ( person :arg0-of ( have-rel-role-91 :arg1 ( person :arg0-of ( have-rel-role-91 :arg1 ( person :arg0-of ( have-rel-role-91 :arg1 ( person :arg0-of ( have-rel-role-91 :arg1 ( person :arg0-of ( have-rel-role-91 :arg1 ( person :arg0-of ( have-rel-role-91 :arg1 ( person :arg0-of ( have-rel-role-91 :arg1 ( person :arg0-of ( have-rel-role-91 :arg1 ( person :arg0-of ( have-rel-role-91 :arg2 mother ) ) :arg2 mother ) ) :arg2 mother ) ) :arg2 mother ) ) :arg2 mother ) ) :location ( boy :mod sports ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) )
write-01 :arg1 ( person :arg0-of serve-02 :mod this ) :duration ( temporal-quantity temporal-quantity_num_0 :unit month ) :time already :time ( after :op1 ( heart :part-of heart ) ) :arg0-of ( reduce-01 :arg1 ( risk-01 :arg2 ( heart :arg1-of repeat-01 ) ) )
commissioned :arg1 report :time ( after :op1 ( scandal :arg1-of ( connect-01 :arg2 ( city :mod tauerhamletas ) ) ) )
say-01 :arg0 i :arg1 ( assume-02 :arg0 i :arg1 ( take-on-09 :arg0 ( shop :location shop ) :arg1 ( clothes :source shop ) :time ( after :op1 ( depart-01 :arg0 she ) ) ) )
combated :arg0 ( group :consist-of ( group :consist-of ( person :arg0-of ( have-org-role-91 :arg1 ( and :op1 ( trade-01 :mod acropolis ) :op2 ( person :arg0-of ( have-org-role-91 :arg2 entertainment ) ) :op3 ( person :arg0-of ( have-org-role-91 :arg2 head-of-state ) ) :op4 ( person :arg0-of ( have-org-role-91 :arg2 head-of-state ) ) :op5 ( person :arg0-of ( have-org-role-91 :arg2 head-of-state ) ) :op5 ( person :arg0-of ( have-org-role-91 :arg2 head-of-state ) ) :op6 ( person :arg0-of ( have-org-role-91 :arg2 head-of-state ) ) :op6 ( person :arg0-of ( have-org-role-91 :arg2 head-of-state ) ) :op6 ( person :arg0-of ( have-org-role-91 :arg2 head-of-state ) ) :op7 ( person :arg0-of ( have-org-role-91 :arg2 head-of-state ) ) :op7 ( person :arg2-of staff-01 :arg0-of ( partner-01 :arg1 political-party_name_0 ) ) ) ) ) ) ) :arg1 ( group :consist-of ( group :consist-of ( group :consist-of acropolis ) ) )
have-condition-91 :arg1 ( obligate-01 :arg2 ( take-01 :arg0 we :arg1 ( account-01 :arg1 ( change-01 :arg1-of ( change-01 :arg1-of ( possible-01 :polarity - ) ) ) ) ) ) :arg2 ( depend-01 :arg0 change-01 :arg1 ( thing :arg1-of same-01 ) ) :condition ( case :domain this )
wheeled :arg1 bag :arg2 ( and :op1 document :op2 ( phone :arg1-of mobile-02 ) )
and :op1 ( terrify-01 :arg0 ( vacancy :arg0 ( person :arg0-of ( have-rel-role-91 :arg1 child :arg2 child ) ) :arg1-of legal-02 ) :arg1 law ) :op2 ( go-02 :arg0 person :arg4 point )
say-01 :arg0 i :arg1 ( and :op1 ( appeal-02 :arg0 he :arg2 ( criminal-organization_name_0 :mod international :arg0-of ( -rrb- :arg1 -rrb- ) ) ) :op2 ( call-03 :arg0 he :arg1 ( send-01 :polarity - :arg0 he :arg1 ( athletes :mod any ) :arg2 latvia ) ) :time ( before :op1 ( approve-01 :arg0 ( person :arg0-of participate-01 ) :arg1 ( person :arg0-of participate-01 ) ) ) :time ( before :op1 ( approve-01 :polarity - :arg1 ( person :arg0-of participate-01 ) ) ) )
possible-01 :polarity - :arg1 ( tell-01 :arg0 i :arg1 ( cause-01 :arg0 amr-unknown :arg1 ( be-located-at-91 :arg1 he :arg2 ( game :mod olympic ) :arg1-of ( cause-01 :arg0 ( likely-01 :arg1 ( be-02 :arg1 he ) ) ) ) ) )
be-located-at-91 :arg1 we :arg2 ( game :mod olympic :ord ( ordinal-entity ordinal-entity_num_0 ) )
contrast-01 :arg1 ( receive-01 :arg0 ( traveller :name ( name :op1 uash :op2 traveller ) :mod olympic ) :arg1 day :time ( announce-01 :arg1 ( composition :poss ( delegation :mod latvian ) ) :manner official ) ) :arg2 ( tell-01 :arg1 ( safe-01 :arg1 it :degree quite :time ( since :op1 ( date-entity year_date-entity_0 ) ) ) :arg2 ( tell-01 :arg0 he :arg1 ( safe-01 :arg1 it ) :time ( late :degree more ) ) )
divide-02 :arg1 ( game :mod olympic ) :arg2 ( and :op1 ( shoot-02 :quant num_0 :mod lovely ) :op2 ( shoot-02 :mod lovely ) :op3 ( cycling :mod tread ) :op4 ( cycling :mod tread ) :op5 ( judging :arg1 game ) :op6 ( judging :arg1 game ) :op7 ( scourge :arg1 game ) :op8 ( scourge :arg1 game ) :op8 ( scourge :arg1 game ) :op8 ( scourge :arg1 game ) :op8 ( scourge :arg1 game ) :op8 ( scourge :arg1 game ) :op8 ( scourge :arg1 game ) :op8 ( scourge :arg1 game ) :op8 ( scourge :arg1 game ) )
and :op1 ( arrive-01 :arg1 ( person :arg0-of buy-01 :mod potential ) ) :op2 ( boarding :arg1 person ) :op3 ( go-02 :arg0 person ) :time ( time :arg1-of same-01 )
role :arg1-of special-02 :domain ( and :op1 ( mortality :mod globe ) :op2 ( mortality :name ( name :op1 helsinki ) :mod globe ) :op3 ( mortality :mod gold ) ) :arg1-of special-02 :purpose ( lagoa :arg1 ( lagoa :mod estation ) )
contrast-01 :arg1 ( be-located-at-91 :arg1 she :arg2 ( hand :part-of ( viljamsa :mod robin ) :arg0-of ( inspire-01 :arg1 she :arg2 ( medal :mod gold :ord ( ordinal-entity ordinal-entity_num_1 ) :mod ( gold :ord ( ordinal-entity ordinal-entity_num_1 ) ) :mod ( gold :ord ( ordinal-entity ordinal-entity_num_1 ) ) :mod ( gold :ord ( ordinal-entity ordinal-entity_num_1 ) ) ) ) ) ) :arg2 ( become-01 :arg1 boat :arg2 ( female :ord ( ordinal-entity ordinal-entity_num_2 ) :arg0-of ( succeed-01 :arg1 ( succeed-01 :mod such ) ) ) )
issue-01 :arg0 ( commission :mod continent_name_0 ) :arg1 ( opine-01 :arg0 commission :arg1 ( implement-01 :polarity - :arg0 and :arg1 ( measure-02 :arg1-of suffice-01 ) :purpose ( reduce-01 :arg0 and :arg1 ( level :mod deficit :arg1-of ( include-91 :arg2 ( product :arg1-of gross-03 :mod domestic :arg1-of gross-03 :mod domestic :poss ( product :arg1-of gross-03 :mod domestic ) :arg1-of gross-03 :mod domestic ) ) ) ) ) ) :arg2 ( commission :mod continent_name_1 )
beaches :arg1 ( source :mod main ) :arg1-of ( cause-01 :arg0 ( and :op1 ( plastic :arg1 ( waste :quant ( more-than :op1 1/2 ) :arg1-of ( include-91 :arg2 waste ) ) ) :op2 ( waste :arg1-of differ-02 :source ( stage :mod already :time already :time ( stage :mod ( stage :mod already ) ) ) ) :op3 ( possible-01 :arg1 ( identify-01 :arg0 they :arg1 ( and :op1 smoke :op2 smoke :op3 military_name_0 :op4 ulme ) :time no-longer ) ) ) )
advocate-01 :arg0 ( figure :arg1-of average-03 ) :arg1 ( and :op1 ( figure :arg1-of ( include-91 :arg2 ( figure :quant num_0 :name ( name :op1 riga ) ) ) ) :op2 ( site :name ( name :op1 daugavgrivu ) ) :op3 vecca :op4 vecca ) :arg2-of ( fortunate-01 :polarity - ) :arg2-of ( fortunate-01 :polarity - ) :arg1-of ( cause-01 :arg0 ( or :op1 ( desire-01 :arg0 figure :arg1 ( reduce-01 :arg0 figure :arg1 ( number :quant-of ( unit :mod waste ) ) ) ) :op2 ( target-01 :arg0 figure :arg1 ( number :quant-of ( unit :consist-of waste ) ) ) ) :op3 ( advocate-01 :arg0 environment :arg1 environment ) )
and :op1 ( good :domain ( quality :quant num_0 :mod water :mod bathing ) ) :op2 ( limit-01 :polarity - :arg1 ( limit-01 :arg1 quality ) ) :time now
report-01 :arg1 ( concert :arg1 ( culture :mod latvian ) :time ( before :op1 ( hijack-01 :arg0 building :arg1 building :time immediate ) ) ) :li num_0
multi-sentence :snt1 ( see-01 :arg1 exhibit-01 :source ( value-interval :op1 num_0 :op2 num_1 ) ) :snt2 ( august :mode expressive )
and :op1 ( select-01 :arg1 ( transport-01 :arg1-of public-02 ) ) :op2 ( rebuilt :arg1 ( proportion :quant-of ( transport-01 :arg1-of public-02 ) ) )
multi-sentence :snt1 ( contain-01 :arg0 ( and :op1 ( person :arg0-of ( have-org-role-91 :arg2 ( scientist :mod canadian ) ) ) :op2 ( person :arg0-of ( have-org-role-91 :arg2 scientist ) ) :op3 ( person :arg0-of ( have-org-role-91 :arg2 scientist ) ) :op4 ( person :arg0-of ( have-org-role-91 :arg2 scientist ) ) :op5 ( person :arg0-of ( have-org-role-91 :arg2 scientist ) ) ) :arg1 ( and :op1 ( control-01 :arg0 ( and :op1 ( person :arg0-of ( have-org-role-91 :arg2 scientist ) ) :op2 ( person :arg0-of ( have-org-role-91 :arg2 scientist ) ) :op3 ( person :arg0-of ( have-org-role-91 :arg2 scientist ) ) :op4 ( person :arg0-of ( have-org-role-91 :arg2 scientist ) ) :op5 ( person :arg0-of ( have-org-role-91 :arg2 scientist ) ) :op6 ( person :arg0-of ( have-org-role-91 :arg2 scientist ) ) :op6 ( person :arg0-of ( have-org-role-91 :arg2 scientist ) ) :op6 ( person :arg0-of ( have-org-role-91 :arg2 scientist ) ) :op7 ( person :arg0-of ( have-org-role-91 :arg2 scientist ) ) ) ) ) ) :snt2 ( sense-02 :arg1 salutes :mod also )
operating :arg1 ( environment :mod alkaline ) :mod only :location ( environment :mod alkaline )
multi-sentence :snt1 ( apply-02 :arg1 this :arg2 fresh-04 :mod also :arg1-of fresh-04 :mod also ) :snt2 ( contain-01 :arg0 this :arg1 ( -rrb- :quant ( quantity :mod large ) :arg1-of ( contain-01 :arg0 proteins :manner protein :prep-with ( source-02 :arg1 ( -lrb- :mod avocados ) :mod whole ) ) ) )
make-02 :arg0 ( process-01 :arg1 ( and :op1 meat :op2 egg ) ) :arg1 ( easy-05 :arg1 produce-01 :degree more ) :arg1-of ( cause-01 :arg0 ( and :op1 ( produce-01 :arg0 product :arg1 product ) :op2 ( substances :arg0 ( and :op1 product :op2 ( substance :mod other :mod mineral ) ) :arg1 product ) ) )
lenses :arg1 ( instrument :arg0-of ( generate-01 :arg1 ( rate-entity-91 :arg1 ( more-than :op1 num_0 ) :arg2 ( temporal-quantity temporal-quantity_num_0 :unit day ) ) ) )
explain-01 :arg0 she :arg1 ( have-03 :arg0 they :arg1 ( problem :topic ( relate-01 :arg1 they :arg2 ( policy :mod ( employ-01 :polarity - ) ) :arg1-of ( enough :polarity - :purpose ( support-01 :arg1 ( diversity :mod race ) ) ) ) ) ) :location ( interview-01 :arg1 i :mod telephone )
announce-01 :arg0 congress :arg1 ( amend-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg1 military :arg2 official ) ) :arg1 ( report-01 :arg1 ( person :mod religious-group_name_0 ) ) )
base :mod military :location ( state_name_0 :arg0-of ( oversee-01 :arg1 ( operation :mod military :location ( and :op1 world-region_name_1 :op2 center ) ) ) :arg0-of ( oversee-01 :arg1 ( operation :mod military :location ( and :op1 world-region_name_1 :op2 center ) ) ) )
report-01 :arg1 ( launch-01 :arg0 ( directorate-general :poss government-organization_name_0 ) :arg1 investigate-01 :time ( after :op1 ( complain-01 :arg0 ( person :arg0-of analyze-01 :mod citycom ) ) ) ) :time ( date-entity dayperiod_date-entity_0 )
compatible :polarity - :arg1 ( nut :arg1-of low-04 :consist-of butter )
try-01 :arg0 ( person :mod country_name_0 ) :arg1 ( find-01 :arg0 person :arg1 ( list :consist-of ( morality :name ( name :op1 israeli :op2 telephony ) :location ( list :location hotel ) ) ) ) :time ( visit-01 :time recent )
tell-01 :arg0 ( somebody :mod else ) :arg1 ( locate-01 :arg1 hotel :location ( street :name ( name :op1 kurfurstendamm :op2 street :op3 street ) ) :location ( street :name ( name :op1 kurfurstendamm :op2 street ) ) ) :arg2 ( house :poss ( kauniebot :mod '' ) )
manage-02 :arg0 they :arg1 ( get-05 :arg1 they :arg2 they :time ( minute :mod last ) )
and :op1 ( sprint :domain country_name_0 :time today ) :op2 ( continue-01 :arg1 ( day :mod next ) )
say-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg1 country_name_0 :arg3 ( lead-02 :arg0 person ) ) ) :arg1 ( and :op1 ( spend-01 :arg0 ( person :arg0-of ( analyze-01 :arg1 portland ) ) :arg1 ( rate-entity-91 :arg1 num_0 :arg2 ( temporal-quantity temporal-quantity_num_0 :unit year ) ) ) :op2 ( spend-01 :arg0 ( person :arg0-of analyze-01 ) :arg1 ( energy :quant num_1 :mod megaavatus ) ) :time ( after :op1 ( estimate-01 :arg0 ( person :arg0-of analyze-01 ) :arg1 ( spend-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg2 ( person :arg0-of analyze-01 ) ) ) ) ) ) :time ( week :mod last ) )
call-03 :arg0 we :arg1 ( suspend-01 :arg0 we :arg1 ( reduce-01 :arg1 ( fund-01 :arg1 fund ) ) ) :time immediate :purpose ( suspend-01 :arg0 we :arg1 ( reduce-01 :arg1 fund-01 ) ) :arg0-of ( cause-01 :arg1 ( possible-01 :arg1 ( obtain-01 :arg0 ( person :arg0-of ( need-01 :arg1 assist-01 :arg1-of legal-02 ) ) :arg1 ( obtain-01 :arg0 person :arg1 assist-01 ) ) ) )
add-01 :arg0 i :arg1 ( clarified :arg1 ( person :arg0-of prosecute-01 ) )
call-03 :arg0 ( anyone :arg0-of ( have-03 :arg1 ( information :topic ( morges :arg1-of ( near-02 :arg2 morges ) ) ) ) ) :arg1 ( contact-01 :arg0 anyone :arg1 police :manner ( or :op1 ( person :quant num_0 ) :op2 ( person :quant num_1 ) ) )
report
and :op1 ( rise-01 :arg1 ( sentiment :mod ( person :arg0-of invest-01 ) :location world ) :time ( morning :mod friday ) :time ( morning :mod friday ) ) :op2 ( positive :domain ( sentiment :mod ( person :arg0-of invest-01 ) :arg0-of ( step :arg1 ( expect-01 :arg1 ( act-01 :arg0 ( winners :mod oil :mod ( large :degree most ) :location september ) :arg1 ( market :mod oil :mod world ) ) ) ) ) )
infer-01 :arg1 ( obligate-01 :arg2 ( care-04 :arg0 ( person :arg0-of drive-01 ) :mod particular :arg1-of ( cause-01 :arg0 ( route :mod road :arg1-of differ-02 :domain ( route :mod road :arg1-of differ-02 ) ) ) ) )
tell-01 :arg1 ( thing :arg1-of ( do-02 :arg0 girl ) ) :arg2 girl
contrast-01 :arg1 ( expect-01 :arg1 ( thing :arg1-of ( opine-01 :arg0 ( thing :arg1-of ( opine-01 :arg0 ( thing :arg1-of ( opine-01 :arg0 ( thing :arg1-of ( opine-01 :arg0 ( thing :arg1-of ( opine-01 :arg0 ( thing :arg1-of ( opine-01 :arg0 ( thing :arg1-of ( opine-01 :arg0 ( thing :arg1-of ( opine-01 :arg0 ( thing :arg1-of ( opine-01 :arg0 ( thing :arg1-of ( opine-01 :arg0 ( thing :arg1-of ( opine-01 :arg0 ( thing :arg1-of ( opine-01 :arg0 ( thing :arg1-of ( opine-01 :arg0 ( thing :arg1-of ( opine-01 :arg0 ( thing :arg1-of ( opine-01 :arg0 ( thing :arg1-of ( opine-01 :arg0 ( thing :arg1-of ( opine-01 :arg0 ( thing :arg1-of ( opine-01 :arg0 ( thing :arg1-of ( opine-01 :arg0 ( thing :arg1-of ( opine-01 :arg0 ( thing :arg1-of ( opine-01 :arg0 ( thing :arg1-of ( opine-01 :arg0 ( thing :arg1-of ( opine-01 :arg0 ( thing :arg1-of ( opine-01 :arg0 ( thing :arg1-of ( opine-01 :arg0 ( thing :arg1-of ( opine-01 :arg0 ( thing :arg1-of ( opine-01 :arg0 ( thing :arg1-of ( opine-01 :arg0 ( thing :arg1-of ( opine-01 :arg0 person ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) )
and :op1 ( wellness :domain ( stage :ord ( ordinal-entity ordinal-entity_num_0 ) ) ) :op2 ( open-01 :arg1 ( clinic :mod ( negative :mod good ) ) :arg1-of ( cause-01 :arg0 ( schedule-01 :arg1 ( launch-01 :arg1 hotel ) :arg3 ( num_1 :quant num_2 ) ) ) )
create-01 :arg0 ( person_name_0 :arg0-of ( have-org-role-91 :arg2 mccreevy ) ) :arg1 ( sense-01 :arg0 person :arg1 ( threaten-01 :arg0 ( group :mod legendary ) ) )
and :op1 ( compare-01 :arg1 ( star :arg1-of ( compare-01 :arg2 deed ) ) :arg2 ( fruit :quant ( more :degree more ) ) ) :op2 ( buy-01 :arg0 ( and :op1 ( fruit :mod small ) :op2 ( number :quant-of ( plant :mod fruit ) ) ) :arg1 ( fruit :quant more ) )
give-01 :arg0 ( and :op1 ( person :arg0-of ( have-org-role-91 :arg2 rebuls ) ) :op2 ( person :arg0-of ( have-org-role-91 :arg2 colleagues ) ) ) :arg1 ( presentation :arg1 ( speed :poss ( star :arg1-of ( publish-01 :location ( forum :quant num_0 :mod new ) ) :arg1-of ( publish-01 :location ( forum :mod astronomy ) ) :quant short ) ) ) :arg2 ( presentation :arg0-of detail-01 )
avoid-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg1 ( person :arg0-of ( have-org-role-91 :arg2 president ) ) :arg2 ( president :mod vice ) ) ) :arg1 ( question-01 :arg1 ( differ-02 :arg1 ( between :op1 ( country :quant num_0 ) :op2 ( person :arg0-of ( have-org-role-91 :arg2 president ) ) ) :arg1-of separate-02 :mod only ) ) :arg2 ( person :arg0-of ( have-org-role-91 :arg2 ( president :mod vice ) ) )
expect-01 :arg1 ( and :op1 applause :op2 gazes ) :time ( after :op1 ( return-01 :arg1 and :arg3 win-01 ) )
postpone :arg0 we :arg1 ( link-01 :arg1 ( section :mod north :mod north ) :arg2 ( or :op1 land :op2 viaduct ) ) :time ( after :op1 ( hijack-01 :arg0 we :arg1 ( and :op1 ( support :arg1 road :mod last ) :op2 ( connect-01 :arg1 road :arg2 ( tower :mod north ) ) ) ) )
emerge-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg1 ( team :name ( name :op1 '' :op2 captain ) :mod country_name_0 ) :arg2 captain ) ) :arg2 ( lead-01 :arg0 person :mod compelling ) :time ( time :mod this )
include-91 :arg1 ( person :quant num_0 :arg1-of ( shoot-02 :location ( city_name_0 :mod jermantown ) ) ) :arg2 ( person :quant num_1 )
say-01 :arg0 person_name_0 :arg1 ( find-01 :arg1 ( child :arg0-of ( have-rel-role-91 :arg1 child :arg2 child ) ) :location ( next-to :op1 ( car :arg1-of ( be-located-at-91 :arg2 ( condition :arg1-of critical-02 ) ) ) ) )
and :op1 ( become-01 :arg1 ( duglasa :mod gaby ) :arg2 ( champions :arg1 duglasa ) ) :op2 ( possible-01 :arg1 ( glued :arg1 duglasa ) ) :time ( game :mod previous :mod olympic )
treat-03 :arg1 we :arg2 ( possible-01 :arg1 ( extend-01 :arg0 we :arg1 ( opportunity :purpose treat-03 ) :arg2 ( thousands :arg0 we :arg1 ( person :arg0-of ( cause-01 :arg1 ( beneficiaries :arg1 person ) ) ) ) ) ) :arg1-of ( cause-01 :arg0 ( treat-03 :arg1 ( person :mod country_name_0 ) :arg2 ticagreloria ) )
cause-01 :arg0 ( fear-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg1 ( government-organization :arg0-of govern-01 ) :arg2 minister :time former ) ) :arg1 ( ignore-01 :arg0 person :arg1 ( sign :arg1-of ( signal-07 :arg0 defraud-01 ) ) ) ) :arg1 ( ignore-01 :arg0 person :arg1 ( sign :arg1-of ( signal-07 :arg0 defraud-01 ) ) :arg1-of ( cause-01 :arg0 ( fear-01 :arg0 person :arg1 ( offend-01 :arg0 person :arg1 ( minority :mod ethnic ) ) ) ) )
say-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg1 ( government-organization :arg0-of ( govern-01 :arg1 country_name_0 ) ) :arg2 ( secretary :mod vice ) :time former ) :arg0-of ( have-org-role-91 :arg1 ( movement-07 :arg1 corrupt-01 ) :arg2 member :time former ) :arg0-of ( have-org-role-91 :arg1 ( movement-07 :arg1 corrupt-01 ) :arg2 member :time former ) :arg0-of ( have-org-role-91 :arg1 ( movement-07 :arg1 corrupt-01 ) :arg2 member ) ) :arg1 ( recommend-01 :arg1 ( allow-01 :arg1 ( allow-01 :arg1 ( deploy-01 :arg0 police :arg1 ( person :arg0-of guard-01 ) :arg2 ( outside :op1 ( station :mod polling ) ) :purpose ( protect-01 :arg0 person :arg1 ( person :arg0-of ( vote-01 :arg1 intimidated ) ) ) ) ) ) )
find-02 :arg1 ( guilty-01 :arg1 he :arg1-of ( base-02 :arg2 ( thing :arg0-of evidence-01 :mod continent_name_2 ) ) :arg1-of ( base-02 :arg2 ( thing :arg0-of evidence-01 :mod continent_name_2 ) ) )
and :op1 ( regret-01 :arg0 we :arg1 ( thing :arg1-of comment-01 :mod such ) :degree ( much :degree very ) ) :op2 ( come-03 :arg1 comment-01 :arg2 ( ether :arg1-of direct-02 ) )
contrast-01
buy-01 :arg0 company :arg1 ( plate :arg1-of ( sailing :arg2 ( monetary-quantity monetary-quantity_num_0 :unit euro ) ) )
turn-02 :polarity - :arg0 we :arg1 ( aggression :poss we ) :arg2 other :arg1-of ( cause-01 :arg0 ( know-02 :arg0 we :arg1 ( way :mod other :mod various :instrument-of ( coping :prep-with ( emotions :mod this ) ) ) ) )
expect-01 :arg1 ( arrive-01 :arg1 ( and :op1 ( environment :mod latvian ) :op2 gearbox :op3 ( centre :mod meteorology ) ) :arg4 latvia :location ( friday :location ( place :quant some ) ) ) :mod also
multi-sentence :snt1 ( and :op1 ( complete-01 :arg1 ( construct-01 :arg1-of ( co-financed :arg0 ( fund-01 :arg1 cohesion ) ) ) ) :op2 ( put-01 :arg1 construct-01 :arg2 service :time ( end-01 :arg1 ( year :mod last ) ) ) ) :snt2 ( include-91 :li num_0 :arg1 it :arg2 it )
list-01 :arg0 ( person_name_0 :arg0-of ( have-org-role-91 :arg1 checkpoint :arg3 ( apprentice-01 :arg0 person ) ) ) :arg1 ( case :mod suicide :quant all :topic ( person :arg0-of ( guard-01 :arg1 border ) :location east ) ) :mod also :concession ( link-01 :mode interrogative :arg1 person :arg2 ( service :poss person ) :arg1-of direct-02 )
have-concession-91 :arg1 ( converse-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg1 political-party_name_0 :arg2 president ) ) :arg1 ( desire-01 :arg0 person :arg1 ( make-01 :arg0 person :arg1 sportsmen :time ( before :op1 start-01 ) ) :mod routine ) ) :arg2 ( follow-01 :arg1 ( information :arg1-of ( available-02 :arg2 ( name :op1 leta :op2 leta ) :time ( before :op1 start-01 :quant ( couple :op1 ( temporal-quantity temporal-quantity_num_0 :unit day ) ) ) ) ) :arg2 ( tears :arg1 information ) )
say-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg1 criminal-organization_name_0 :arg2 president ) ) :arg1 ( and :op1 ( important :degree very :mod also :domain ( issue-02 :arg0 drowning ) :mod also ) :op2 ( speak-01 :arg0 person :arg1 ( and :op1 ( speak-01 :arg0 person ) :op2 ( speak-01 :arg0 person :time ( after :op1 now :quant ( almost :op1 ( temporal-quantity temporal-quantity_num_0 :unit week ) ) ) ) ) ) )
multi-sentence :snt1 ( and :op1 ( manage-02 :arg0 ( person :arg0-of ( have-org-role-91 :arg1 ( team :mod country_name_0 ) :arg3 ( lead-02 :arg0 person ) ) ) :arg1 ( point :beneficiary ( good :poss ( team :mod country_name_1 ) ) ) ) :op2 ( carry-01 :arg0 person :arg1 ( ground :quant num_0 ) ) :op3 ( achieve-01 :arg0 person :arg1 ( result-01 :arg1 num_0 :arg2 num_1 ) ) ) :snt2 ( contrast-01 :arg1 ( lose-02 :arg1 game :time already ) :arg2 ( and :op1 ( sing-01 :arg0 ( fan :mod ( salesmen :mod sea ) :location south ) ) :op2 ( dance :arg0 fan :location trick ) ) )
want-01 :arg0 i :arg1 ( say-01 :arg0 i :arg1 ( race :mod last :poss i :domain this ) :degree total )
multi-sentence :snt1 ( and :op1 ( place-01 :arg1 meet-03 :arg2 ( rate-entity-91 :arg1 num_0 :arg2 ( temporal-quantity temporal-quantity_num_0 :unit year ) ) :arg3 ( value-interval :op1 num_0 :op2 num_2 ) ) :op2 ( moderne :arg0 meet-03 :arg1 ( school :arg1-of legal-02 ) :arg2 ( value-interval :op1 num_2 :op2 num_2 ) ) ) :snt2 ( bullocks :arg0 art :arg1 ( school :arg1-of legal-02 ) :time former ) :snt3 ( bullets :arg0 art :arg1 ( rate-entity-91 :arg1 ( under :op1 num_3 ) :arg2 ( temporal-quantity temporal-quantity_num_2 :unit year ) ) )
cause-01 :arg0 ( collect-01 :arg0 ( waste :mod city :arg1-of differ-02 ) :arg1 ( and :op1 ( waste :mod city ) :op2 ( remnant :mod picnic ) ) ) :time ( year :mod this )
tell-01 :arg0 ( person :mod country_name_0 ) :arg1 ( and :op1 ( leave-15 :arg0 person :arg1 post ) :op2 ( continue-01 :arg0 person :arg1 ( represent-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg2 president ) :arg1-of special-02 ) :arg1 ( and :op1 ( protect-01 :arg1 nature ) :op2 ecology :op3 transport-01 ) :arg1-of special-02 ) ) ) :arg2 ( media :mod country_name_1 )
satisfy-01 :arg0 ( way :arg0 you :arg1 ( entrust :mod duty ) :arg2 you ) :arg1 i
contrast-01 :arg1 ( become-01 :arg1 person_name_0 :arg2 ( person :arg0-of ( have-org-role-91 :arg1 country_name_1 :arg2 ( minister :mod defense ) ) ) :li num_0 ) :arg2 ( and :op1 ( become-01 :arg1 person :arg2 ( person :arg0-of ( have-org-role-91 :arg1 country :arg2 ( minister :mod defense ) ) ) ) :op2 ( responsible-03 :arg0 person :arg1 ( develop-02 :arg1 ( and :op1 ( company :mod ( industry :mod defense ) :mod country ) :op2 ( export-01 :arg1 arm ) ) ) ) :time already ) :li num_0
and :op2 ( contacting :arg1 we :frequency ( rate-entity-91 :arg3 ( temporal-quantity temporal-quantity_num_0 :unit day ) ) :frequency ( rate-entity-91 :arg3 ( temporal-quantity temporal-quantity_num_1 :unit day ) ) )
sound-01 :arg1 ( and :op1 porgium :op2 besa ) :arg2 liepaja :time ( after :op1 ( break-up-08 :mod 10-year ) )
and :op1 ( exciting :degree most :domain ( construct-01 :mod this ) ) :op2 ( appreciate-02 :arg0 ( and :op1 ( conductor :mod music :mod opera ) :op2 ( '' :name ( name :op1 besa ) ) :op3 ( pogba :name ( name :op1 diritive ) ) ) :arg1 opera )
say-01 :arg0 ( figure :mod country_name_0 ) :arg1 ( have-03 :arg0 ( person :arg0-of ( have-org-role-91 :arg2 capital ) ) :arg1 ( percentage :arg1-of ( high-02 :degree most ) :arg1-of ( include-91 :arg2 woman ) ) :location ( place :ord ( ordinal-entity ordinal-entity_num_0 ) ) :location ( place :ord ( ordinal-entity ordinal-entity_num_0 ) :arg1-of ( include-91 :arg2 ( city :mod ( large :degree most :compared-to ( city :quant num_1 :arg1-of ( include-91 :arg2 ( woman :quant num_1 ) ) ) ) ) ) ) )
and :op1 ( terminate-01 :arg0 protein :arg1 ( process-02 :arg1 digestive ) ) :op2 ( provide-01 :arg0 protein :arg1 ( sense-01 :arg1 slice ) :time ( time :arg1-of long-03 ) ) :time ( time :arg1-of same-01 )
possible-01 :arg1 ( increase-01 :arg0 you :arg1 ( infringe-01 :arg1 ( non-bloated :mod non-bloated ) ) :manner ( use-01 :arg0 you :arg1 ( product :arg0-of ( contain-01 :arg1 ( product :mod c :example ( and :op1 oranges :op2 tomatoes :op3 berries ) ) ) ) ) :arg1-of significant-02 )
add-02 :mode imperative :arg0 you :arg1 they :arg2 ( and :op1 ( fat :mod healthy ) :op2 ( oil :example ( or :op1 olive :op2 ( oil :mod linseed ) ) ) )
and :op1 ( criticize-01 :arg0 ( person_name_0 :arg0-of ( consist-01 :arg1 ( man :mod white ) :arg3 most ) ) :arg1 ( lead-02 :arg0 company ) ) :op2 ( conclude-01 :arg0 person :arg1 ( thing :arg1-of ( suitable-04 :arg2 ( hat :mod deletesnapc ) ) ) :time then )
state-01 :arg0 ( house :poss congress ) :arg1 ( amend-01 :arg0 ( and :op1 ( person :arg0-of ( represent-01 :arg1 ( person :arg0-of ( represent-01 :arg1 ( command-02 :mod central ) ) ) ) ) :op2 ( person :arg0-of ( represent-01 :arg1 ( person :arg0-of ( represent-01 :arg1 ( person :arg0-of command-02 :mod central ) ) ) ) ) ) :arg1 ( report-01 :arg1 ( and :op1 ( state :location country ) :op2 ( state :location country ) ) :degree ( more :degree far ) :compared-to it :mod actual ) ) :medium ( statement :arg1-of ( issue-01 :medium ( url-entity :value thursday ) ) )
express-01 :arg0 ( person :arg0-of ( analyze-01 :arg1 intelligence ) :mod central ) :arg1 ( express-01 :arg0 ( person :arg0-of ( analyze-01 :arg1 intelligence ) :mod central :arg1-of ( set-up-03 :arg0 ( and :op1 ( committee :mod arm-01 ) :op2 ( committee :mod intelligence ) :op3 ( finance :mod defense ) ) ) :mod interim ) :arg1 ( report-01 :arg0 ( and :op1 committee :op2 committee :op3 ( finance :mod defense ) ) ) :arg0-of ( indicate-01 :arg1 ( succeed-01 :arg0 ( person :arg0-of lead-02 :mod ( lead-02 :arg0 person ) ) :arg1 ( fight-01 :arg0 person :arg1 ( state :mod religious-group_name_0 ) ) ) ) )
tell-01 :arg0 ( person :arg0-of ( represent-01 :arg1 organization_name_0 ) :arg0-of ( have-org-role-91 :arg1 organization :arg3 represent-01 ) ) :arg1 story :arg2 ( and :op1 ( possible-01 :polarity - :arg1 ( accept-01 :arg1 ( action :poss ( person :arg0-of ( have-org-role-91 :arg2 soldier ) ) ) ) ) :op2 ( suffer-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg2 soldier ) ) :condition ( get-01 :arg0 ( person :arg0-of ( have-rel-role-91 :arg1 we :arg2 dd2 ) ) :arg1 ( report-01 :mod false ) ) ) )
take-01 :arg0 ( company :arg0-of ( win-01 :arg1 ( place :ord ( ordinal-entity ordinal-entity_num_0 ) ) ) ) :arg1 ( meet-03 :arg0 company :arg1 ( person :arg0-of ( lead-02 :arg1 ( group :mod other ) ) :arg1-of strong-02 ) ) :time ( no-longer :mod little )
game :arg1-of ( dry-02 :ord ( ordinal-entity ordinal-entity_num_0 ) ) :domain this :poss ( state :arg0-of check-01 ) :location ( each :arg1-of ( include-91 :arg2 ( game :quant num_1 :mod each ) ) )
shuddered :mod mr
disappeared :arg1 ( diameter :poss ( era :mod depression ) :quant most ) :time ( as-soon-as :op1 ( recover-01 :arg1 ( economy :poss country ) ) )
gain-02 :arg0 event :arg1 ( resonance :arg1-of ( wide-02 :degree quite ) :location internet ) :mod also :location ( internet :location-of ( dubbed :arg0 person :arg1 it ) )
begin-01 :arg1 problem :time ( try-01 :arg0 ( person :mod country_name_0 ) :arg1 ( kill-01 :arg0 person :arg1 ( person :arg0-of study-01 ) ) :arg1-of ( result-01 :arg2 ( use-01 :arg0 police :arg1 ( and :op1 ( cat :mod rubber ) :op2 gas ) ) ) )
play-02 :arg0 ( athletes :mod 23-year-old ) :arg1 ( role :mod important :topic race ) :arg0-of ( pride-01 :arg2 race ) :arg0-of ( pride-01 :arg1 ( and :op1 ( person :arg0-of ( have-org-role-91 :arg2 head-of-state ) ) :op2 ( person :arg0-of ( have-org-role-91 :arg2 head-of-state ) ) :op3 ( person :arg0-of ( have-org-role-91 :arg2 head-of-state ) ) :op4 ( person :arg0-of ( have-org-role-91 :arg2 head-of-state ) ) :op5 ( person :arg0-of ( have-org-role-91 :arg2 head-of-state ) ) :op5 ( person :arg0-of ( have-org-role-91 :arg2 head-of-state ) ) :op6 ( person :arg0-of ( have-org-role-91 :arg2 head-of-state ) ) :op7 ( person :arg0-of ( have-org-role-91 :arg2 head-of-state ) ) ) )
and :op1 ( work-01 :arg0 ( slaughterhouses :name ( name :op1 alpha ) :mod alpha ) :arg1 ( lose-02 :arg1 slaughterhouses ) ) :op2 ( possible-01 :arg1 ( close-01 :arg1 slaughterhouses ) )
multi-sentence :snt1 ( need-01 :arg1 ( compete-02 :arg3 ( criteria :arg1-of ( judge-01 :arg0 ( candidate :quant all ) ) ) :arg1-of ( clear-06 :degree most ) ) ) :snt2 ( say-01 :arg0 ( text :part-of petition-01 ) )
clear-06 :polarity - :arg1 ( thing :arg1-of ( intend-01 :arg0 candidate ) :beneficiary ( service :mod revenue ) )
contrast-01 :arg1 ( expect-01 :arg1 ( approve-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg1 ( service :mod revenue :poss ( person :arg0-of ( have-org-role-91 :arg2 ( minister :mod finance ) ) ) :arg2 ( minister :mod finance ) ) ) ) :arg1 ( post :mod new ) :time ( week :mod last ) ) ) :arg2 ( vote-01 :arg0 ( person :quant all :arg0-of ( have-org-role-91 :arg1 political-party_name_0 :arg2 ( minister :mod general :mod unity ) ) :arg0-of ( have-org-role-91 :arg1 party :arg2 ( minister :mod general ) ) :arg0-of ( have-org-role-91 :arg1 party :arg2 minister ) :arg0-of ( have-org-role-91 :arg1 party :arg2 minister ) :arg0-of ( have-org-role-91 :arg1 party :arg2 minister ) :arg0-of ( have-org-role-91 :arg1 party :arg2 minister ) :arg0-of ( have-org-role-91 :arg1 party :arg2 minister ) :arg0-of ( have-org-role-91 :arg1 party :arg2 minister ) :arg0-of ( have-org-role-91 :arg1 party :arg2 minister ) :arg0-of ( have-org-role-91 :arg1 party :arg2 minister ) :arg0-of ( have-org-role-91 :arg1 party :arg2 minister ) :arg0-of ( have-org-role-91 :arg1 party :arg2 minister ) :arg0-of ( have-org-role-91 :arg1 party :arg2 minister ) :arg0-of ( have-org-role-91 :arg1 party :arg2 minister ) :arg0-of ( have-org-role-91 :arg1 party :arg2 minister ) :arg0-of ( have-org-role-91 :arg1 party :arg2 minister ) :arg0-of ( have-org-role-91 :arg1 party :arg2 minister ) :arg0-of ( have-org-role-91 :arg1 party :arg2 minister ) :arg0-of ( have-org-role-91 :arg1 party :arg2 minister ) ) :duration ( temporal-quantity temporal-quantity_num_1 :unit week ) )
find-01 :arg0 ( man :arg1-of ( trap-01 :arg2 man ) ) :arg1 ( weapon :mod gas :arg1-of ( find-01 :arg0 man ) )
contrast-01 :arg1 ( express-01 :arg0 she :arg1 ( option :polarity - :arg1-of ( easy-05 :arg1-of ( easy-05 :polarity - ) ) :domain it ) ) :arg2 ( experience-01 :arg0 ( person :arg0-of ( have-rel-role-91 :arg1 she :arg2 relative ) ) :arg1 ( pressure-01 :mod emotional :mod serious ) :concession ( carry-out-03 :polarity - :arg0 person :arg1 ( act-02 :mod reprehensible :mod any ) ) :time ( week :mod last ) )
say-01 :arg0 ( thing :arg1-of ( report-01 :arg0 ( thing :arg1-of ( report-01 :arg0 company ) ) ) ) :arg1 ( work-01 :arg0 company :arg1-of ( cause-01 :arg0 ( reason :quant several :arg2-of ( include-01 :arg1 ( short-06 :arg1 ( and :op1 ( withdraw-01 :arg1 ( bank :name ( name :op1 unicredit ) ) :arg2 ( market :name ( name :op1 baltic ) ) ) :op2 ( interrupting :arg1 ( line :mod credit-02 :arg1-of exist-01 ) ) :op3 ( leave-13 :arg1 ( belt :name ( name :op1 blue ) ) :manner ( contract-02 :polarity - :arg1 ( contract-02 :arg0 blue ) ) ) ) ) ) ) ) :location ( company :quant num_0 ) )
prevent-01 :arg0 ( withdraw-01 :arg1 bank :arg2 bank ) :arg1 company :arg2 ( implement-01 :arg0 company :arg1 ( project :arg0-of ( support-01 :arg1 ( government-organization :arg0-of ( govern-01 :arg1 continent_name_0 ) ) ) :arg0-of ( allow-01 :arg1 ( purchase-01 :arg0 factory :arg1 ( and :op1 ( equipment :mod produce-01 :mod new ) :op2 ( infrastructure :mod modernise ) :mod new ) ) ) ) ) :mod also
and :op1 ( possible-01 :arg1 ( meet-03 :mod this ) :time ( during :op1 show-04 ) ) :op2 ( feel-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg2 ( kerivica :mod iva ) ) :arg1-of excellent-02 ) :arg1 ( and :op1 ( person :quant num_0 ) :op2 ( role :arg1-of excellent-02 :mod zar ) ) )
and :op1 ( continue-01 :arg1 ( cool :arg1 ( temperature :mod water ) ) :time ( time :arg1-of cool-04 ) ) :op2 ( be-located-at-91 :arg1 ( and :op1 ( rivers :quant all ) :op2 ( and :op1 rivers :op2 lake ) :quant all ) :arg2 ( below :op1 sea ) ) :op3 ( say-01 :arg0 data :arg1 ( data :source ( and :op1 ( environment :mod latvian ) :op2 gearbox :op3 ( centre :mod meteorology ) ) ) )
look-01 :arg0 ( police :mod berkshire :poss city ) :arg1 ( attacker :arg0-of ( abuse-01 :arg1 ( girl :quant num_0 :mod six-year-old ) :manner sexual :location ( park :mod entertainment ) ) :arg0-of ( '' :arg1 ( mail :mod day :arg1-of report-01 ) ) )
study-01 :arg0 ( unit :mod vocal :part-of ( music :mod music :mod ( academy :mod music ) ) ) :location ( unit :mod vocal :part-of music )
say-01 :arg0 ( news :mod bloomberg ) :arg1 ( carry-out-03 :arg0 ( person :arg0-of hack-04 :mod same :arg0-of hack-04 :arg0-of ( hack-04 :arg1 dnc ) ) :arg1 ( attack-01 :mod cyber :mod this ) )
contrast-01 :arg1 ( admit-01 :arg0 ( person :arg0-of author-01 :arg0-of ( author-01 :arg1 ( submarine :mod yellow :mod '' ) ) ) :arg1 ( and :op1 ( contact-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg1 group :arg2 member :time former ) :arg0-of ( have-org-role-91 :arg1 group :arg2 member ) ) :arg1 he :arg1-of regular-02 :time now ) :op2 ( approve-01 :arg0 ( person :arg0-of ( author-01 :arg1 ( studio :arg1-of record-01 ) ) ) :arg1 ( plan-01 :arg1 ( work-01 :arg1 ( studio :arg1-of record-01 ) ) ) :frequency occasional ) ) :mod also ) :arg2 ( have-03 :arg0 ( person :arg0-of author-01 ) :arg1 ( work-01 :arg0 person ) )
recommend-01 :arg1 ( possible-01 :arg1 ( influence-01 :arg0 he :arg1 ( thing :arg1-of ( relate-01 :arg2 ( perform-01 :arg0 team ) ) ) ) :mod also )
and :op1 ( appreciate-02 :arg0 we :arg1 ( everything :arg1-of organize-01 ) ) :op2 ( wish-01 :arg0 we :arg1 ( good :degree most :domain he :time future ) )
multi-sentence :snt1 ( get-01 :arg0 winds :arg1 ( star :location ( field :mod reverse-01 ) ) ) :snt2 ( have-03 :arg0 they :arg1 brake-01 :location star )
tell-01 :arg0 publication_name_0 :arg1 ( help-01 :arg0 ( star :poss ( person :arg0-of ( have-rel-role-91 :arg2 brother ) ) ) :arg1 ( build-01 :arg0 person :arg1 ( model :mod theoretical ) :purpose ( star :mod star ) ) :location ( direction :mod both ) ) :arg2 we
think-01 :arg0 we :arg1 ( and :op1 ( person :arg0-of ( have-rel-role-91 :arg1 we :arg2 friend ) ) :op2 ( family :arg1-of ( have-org-role-91 :arg0 we :arg2 member ) ) ) :time ( difficult :mod this )
promise-01 :arg0 he :arg1 ( improve-01 :arg0 ( relation-03 :arg0 country_name_0 :arg2 country ) :arg1 ( level :mod pre-crisis :mod ( only :polarity - ) ) :concession ( high-02 :arg1 relation-03 :degree ( more :mod even ) ) ) :mod also
change-01 :arg1 ( position-02 :arg0 country_name_0 :arg1-of public-02 ) :time ( since :op1 november )
clear-06 :arg0 ( gain-02 :arg0 location_name_0 :arg1 ( reconciliation :mod peace ) ) :arg1 everyone
win-01 :arg0 ( person_name_0 :arg0-of ( win-01 :arg2 detori ) ) :time ( after :op1 ( win-01 :quant num_0 :arg0 person :arg2 ( rate-entity-91 :arg1 ( under :op1 num_0 ) :arg2 ( temporal-quantity temporal-quantity_num_0 :unit year ) ) ) )
jockey :ord ( ordinal-entity ordinal-entity_num_0 ) :arg0-of ( fight-01 :arg2 ( race :mod ( sprinta :mod horse ) ) ) :domain ( 45-year-old :ord ( ordinal-entity ordinal-entity_num_0 ) )
and :op1 ( feel-01 :arg0 i :arg1 relieved ) :op2 ( appreciate-02 :arg0 i :degree very )
appoint-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg2 deputy ) ) :arg1 ( person :arg0-of ( have-org-role-91 :arg2 deputy ) :arg1-of ( charge-05 :arg2 ( person :arg0-of ( have-org-role-91 :arg2 deputy ) ) ) :arg0-of ( have-org-role-91 :arg2 deputy ) ) :arg1-of instead-of-91
have-org-role-91 :arg0 he :arg1 ( and :op1 organization_name_0 :op2 ( person :arg0-of ( have-org-role-91 :arg1 country_name_1 :arg2 ( officer :mod ( security :mod nation ) ) :time former ) ) :op3 ( officer :mod ( security :mod nation ) :arg1-of ( resemble-01 :arg2 putin ) ) )
tell-01 :arg0 ( person_name_0 :arg0-of ( have-org-role-91 :arg2 investigator ) ) :arg1 ( likely-01 :arg1 ( involve-01 :arg1 gun :arg2 ( shooters :quant number ) ) ) :arg2 cbs
need-01 :arg0 we :arg1 ( and :op1 avenue :op2 gabia :op3 lauria ) :arg1-of ( cause-01 :arg0 amr-unknown )
enter-01 :arg0 ( and :op1 simona :op2 gabija :op3 laurija ) :arg1 ( team :mod olympic :example ( and :op1 alija :op2 medisona ) )
contrast-01 )
(-(
and :op1 ( go-02 :arg0 she :purpose ( look-01 :arg0 she :arg1 ( and :op1 ( clothing :mod bouverie ) :op2 ( centre :purpose shop-01 :location folkeston ) ) ) ) :op2 ( have-03 :arg0 she :arg1 ( biks :quant num_0 :mod another ) )
and :op1 ( obligate-01 :arg2 ( and :op1 ( put-01 :arg1 pressure-01 :arg2 weapon ) :op2 ( take-01 :arg0 pressure-01 :arg1 ( blow-14 :arg1 he :arg2 ( over :op1 breast ) ) ) ) :time ( time :arg1-of same-01 ) ) :op2 ( take-01 :arg0 pressure-01 :arg1 ( and :op1 ( gun :poss he ) :op2 ( step-01 :arg1 he :arg2 ( play-11 :arg0 he :arg2 he ) ) ) :time final )
say-01 :arg0 ( person_name_0 :arg0-of house-01 :arg0-of house-01 ) :arg1 ( concern-01 :polarity - :arg0 house-01 )
and :op1 ( raid-01 :arg0 police :arg1 house ) :op2 ( find-01 :arg0 police :arg1 house ) :op3 ( find-01 :arg0 police :arg1 ( and :op1 ( rifle :quant ( more-than :op1 ( mass-quantity mass-quantity_num_0 :unit gram ) ) ) :op2 ( mass-quantity mass-quantity_num_1 :unit pound ) :op3 ( mass-quantity mass-quantity_num_1 :unit pound ) :op4 ( monetary-quantity monetary-quantity_num_2 :unit pound ) ) )
buy-01 :arg0 company :arg1 ( monetary-quantity monetary-quantity_num_0 :unit euro ) :arg3 ( equipment :mod sawing )
implement-01 :arg0 ( service :mod rural :mod rural ) :arg1 purchase-01
contrast-01 :arg1 ( expect-01 :arg1 ( enter-01 :arg0 ( group :name ( name :op1 shikari :op2 '' :op3 '' ) :mod such ) :arg1 ( '' :source ( country_name_0 :arg1-of ( expect-01 :time ( year :mod last ) ) ) ) :source country_name_2 :arg1-of ( expect-01 :time ( year :mod last ) ) ) ) :arg2 ( maxim :arg0 ( panki :name ( name :op1 panki :op2 panki :op3 dj :op4 dj :op5 dj :op6 dj :op7 dj ) ) :arg1 ( maxim :source group ) )
cause-01 :arg0 ( suspect-01 :polarity - :arg1 ( or :op1 irregularities :op2 corrupt-01 ) ) :arg1 ( live-01 :arg1 ( life :mod peaceful ) )
possible-01 :arg1 ( remove-01 :arg1 ( person :mod country_name_0 ) :arg2 ( list :consist-of ( athletes :arg1-of ban-01 ) ) :time ( year :mod this ) )
perched :polarity - :arg1 we :arg2 they :arg1-of ( cause-01 :arg0 ( and :op1 ( flee-05 :arg0 they :arg2 ( pitch :arg1-of ( fleeing :arg0 they :arg2 civilian ) ) ) :op2 ( picked :arg0 they :arg1 civilian ) :op3 ( have-org-role-91 :arg0 he :arg1 ( council :mod military ) :arg2 spokesman ) ) )
include-91 :arg1 ( person :arg0-of ( have-org-role-91 :arg2 head-of-state ) ) :arg2 ( victim :mod new :part-of ( wall :mod berlin ) )
contrast-01 :arg2 ( significant-02 :arg1 it :mod still :arg1-of significant-02 :mod still )
tell-01 :arg0 ( person :mod country_name_0 :mod both ) :arg1 ( cause-01 :arg0 amr-unknown :arg1 ( be-located-at-91 :arg1 he :arg2 olympics :arg1-of ( cause-01 :arg0 ( likely-01 :arg1 ( owe-01 :arg1 he :arg2 jakubovsky ) ) ) ) ) :arg2 we :degree total
report-01 :arg1 ( lose-02 :arg1 ( weight :poss ( up-to :op1 ( up-to :op1 ( mass-quantity mass-quantity_num_0 :unit kilogram ) ) ) ) :arg2 ( fight-01 :arg0 he :arg2 ( famous :location ( borodavko :mod jevgeny ) ) :ord ( ordinal-entity ordinal-entity_num_1 ) ) ) :arg1-of report-01
say-01 :arg0 ( person :arg0-of ( play-01 :arg1 ( thing :arg1-of ( gift-01 :arg2 ( person :arg0-of ( have-rel-role-91 :arg1 ( person :arg0-of ( have-rel-role-91 :arg1 ( person :arg0-of ( have-rel-role-91 :arg2 brother ) ) :arg2 brother ) ) :arg2 rugby-15 ) ) ) :arg0-of ( have-rel-role-91 :arg1 person :arg2 brother ) ) ) :arg0-of ( have-rel-role-91 :arg1 person :arg2 brother ) ) :arg1 ( and :op1 ( win-01 :arg0 team :arg2 ( and :op1 ( win-01 :arg0 team ) :op2 ( silver :mod another :mod silver ) ) :arg1-of excellent-02 ) )
difficult :domain ( achieve-01 :arg0 ( objective :mod this ) :arg1 ( and :op1 ( agree-01 :arg0 party :arg1 ( consult-01 :arg0 party :arg1 government-organization ) ) :op2 ( likely-01 :arg1 ( obligate-01 :arg1 party :arg2 ( hold-01 :arg0 party :arg1 ( elect-01 :mod parliamentary :mod early ) :time ( after :op1 now :duration ( ordinal-entity ordinal-entity_num_0 ) ) ) :arg1-of possible-01 ) :arg1-of ( increase-01 :arg1-of increase-01 ) ) ) :mod particular ) :mod particular
conclude-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg2 activist ) ) :arg1 ( increase-01 :arg1 ( number :quant-of ( rubbish :arg1-of ( leave-11 :arg0 ( population :arg1-of ( include-91 :arg2 ( person :arg0-of ( have-org-role-91 :arg2 activist ) ) ) ) ) ) ) :time ( year :ord ( ordinal-entity ordinal-entity_num_0 ) :part-of ( walk-01 :location ( along :op1 road ) ) ) )
contrast-01 :arg1 ( possible-01 :arg1 ( warn-01 :mod new :quant some ) :arg1-of possible-01 ) :arg2 ( think-01 :arg0 i :arg1 ( think-01 :arg0 i :arg1 ( change-01 :arg0 this :arg1 situation ) :degree total ) )
contrast-01 :arg2 ( highlight-01 :arg1 ( post :mod ( important :degree very ) :domain ( administrate-01 :arg0 ( government-organization :arg0-of ( administrate-01 :arg1 president ) ) :arg1 ( person :quant num_0 :arg1-of ( include-91 :arg2 ( person :arg0-of ( influence-01 :degree most ) :location country ) ) ) ) ) )
cause-01 :arg1 ( conclude-01 :arg0 ( race :mod sparring :poss country_name_0 ) )
find-01 :arg1 ( part :part-of beach ) :location ( hotel :location kopakaban ) :arg1-of resemble-01
justify-01 :arg1 risk-01 :time this
contrast-01 :arg1 ( safe-01 :arg1 island_name_0 :extent ( enough :mod favelas ) ) :arg2 ( recommend-01 :polarity - :arg1 ( be-located-at-91 :arg1 ( vigilance :poss lose-02 ) :arg2 here :mod too ) )
lay-off-02 :arg1 ( stone :mod basic :part-of ( idea :mod this ) :mod sort :poss city ) :arg2 ( create-01 :arg1 ( monument :name ( name :op1 dzeen :op2 dzeen :op3 dzeen ) :arg0-of ( stand-01 :arg1 rozentam :arg2 drugs elimination museum ) ) )
report-01 :arg1 ( held :arg0 ( culture :name ( name :op1 vef :op2 culture :op3 culture ) :mod culture ) :arg1 ( gig :mod farewell ) :time ( before :op1 now :quant ( more-than :op1 ( temporal-quantity temporal-quantity_num_0 :unit year ) ) ) :time ( before :op1 now :quant ( more-than :op1 ( temporal-quantity temporal-quantity_num_1 :unit year ) ) ) :manner collective :time ( before :op1 ( anticipate-01 :arg1 ( settle-02 :arg1 building ) :time immediate ) ) )
exhibition :arg0 ( beam :mod stock :poss drugs elimination museum ) :arg1 exhibit-01
exhibit-01 :arg1 exhibit-01 :source ( company_name_1 :quant ( between :op1 num_0 :op2 num_1 ) )
include-91 :arg1 ( product-of :op1 num_0 :op2 num_1 ) :arg2 ( product-of :op1 num_0 :op2 num_1 ) :time ( after :op1 ( pci :arg1 ( product-of :op1 num_0 :op2 num_1 ) :arg1-of ( compare-01 :arg2 ( year :mod previous ) ) :arg1-of ( compare-01 :arg2 ( year :mod previous ) ) ) )
write-01 :arg0 it :arg1 ( ushakov :arg1 ( risk-01 :arg2 ( risk-01 :arg2 damage-01 ) :mod any ) :arg1-of ( contrast-01 :arg2 ( look-02 :arg0 ( and :op1 '' :op2 '' ) :arg1 ( lashes :arg0 and ) ) ) ) :medium ( page :mod this :mod facebook ) :mod also
and :op1 ( contain-01 :arg0 ( and :op1 ( person :arg0-of ( have-org-role-91 :arg2 ( scientist :mod canadian ) ) ) :op2 ( person :arg0-of ( have-org-role-91 :arg2 ( scientist :mod canadian ) ) ) ) :arg1 ( fibre :arg1-of ( control-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg2 scientist ) ) ) ) ) :op2 ( cause-01 :arg0 greens :arg1 ( sense-01 :arg0 person :arg1 ( hunger-01 :arg0 person ) ) )
or :op1 ( monosaccharides :arg1 fruit ) :op2 ( disaccharides :quant ( or :op1 num_0 :op2 num_1 ) ) :domain fruit
lie-08 :arg0 ( person :arg0-of ( lead-02 :arg1 ( top :arg1-of organize-01 ) ) ) :mod manage-01
detail-01 :arg0 ( report :mod this :topic ( and :op1 ( cover-03 :arg1 ( command-02 :mod central ) ) :op2 ( analyze-01 :arg1 ( effort :mod country_name_0 ) :purpose ( prepare-01 :arg0 country :arg1 ( force :mod country ) :location ( and :op1 ( talk-02 :arg2 num_0 ) :op2 ( force :quant num_1 ) ) ) ) ) ) :manner detail-01
say-01 :arg0 ( person :arg0-of ( represent-01 :arg1 democrat ) :mod democrat ) :arg1 ( limit-01 :arg1 ( report-01 :arg0 intelligence :arg1 ( relate-01 :arg1 ( report-01 :arg1 ( relate-01 :arg2 ( and :op1 isis :op2 ( force :mod security :mod country_name_0 ) ) ) ) :arg2 intelligence ) ) :arg2 ( thing :arg1-of ( report-01 :arg0 he ) ) ) :medium ( report :poss he )
play-02 :arg0 country_name_0 :arg1 ( role :arg1-of significant-02 :topic ( open-01 :arg1 ( issue-02 :arg0 ( intelligence :mod state :mod state ) ) ) ) :mod also
prepare-02 :arg0 woman :arg1 woman :arg2 ( eat-01 :arg0 woman :arg1 ( and :op1 ( husbands-workers :poss woman ) :op2 ( swim-01 :arg0 woman ) :op3 ( dinner :arg0 woman :arg1 woman ) ) :arg0-of ( cause-01 :arg1 ( prepare-02 :arg1 woman :arg2 ( sacepings :arg1-of fresh-04 ) ) ) )
and :op1 ( disprove-01 :arg0 they :arg1 ( hostage :quant ( more-than :op1 num_0 ) :mod civilian :arg1-of ( capture-01 :arg0 gunman ) :arg1-of ( capture-01 :arg0 gunman ) ) ) :op2 ( tell-01 :arg0 gunman :arg1 ( ally-01 :arg1 ( council :mod news :mod sds ) :arg2 ( council :mod news ) ) )
cite-01 :arg0 ( and :op1 ( person :arg0-of ( have-org-role-91 :arg2 ( trumps :mod business-maker ) ) ) :op2 ( person :arg0-of ( have-rel-role-91 :arg1 he :arg2 lawyer ) ) :op3 ( person :arg0-of ( have-rel-role-91 :arg1 he :arg2 lawyer ) ) :op4 ( person :arg0-of ( have-rel-role-91 :arg1 he :arg2 lawyer ) ) :op5 ( person :arg0-of ( have-rel-role-91 :arg1 he :arg2 lawyer ) ) ) :arg1 ( audit-01 :arg1 ( service :mod nation ) )
call-03 :arg0 ( person_name_0 :arg1-of ( called :arg2 ( name :op1 hathaway :op2 hathaway ) ) ) :arg1 ( trumps :arg0 person :arg1 ( thing :arg1-of tax-01 ) ) :time ( week :mod last ) :time ( appear-01 :arg1 country_name_1 :location omah )
say-01 :arg0 person_name_0 :arg1 ( and :op1 ( carry-out-03 :arg0 ( audit-01 :arg1 revenue ) :arg1 he :mod also ) :op2 ( fear-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg2 ( authority :mod tax ) ) ) :arg1 person ) )
victories :polarity - :mod ( good :degree more )
time :quant num_0
blessing :domain ( parade-02 :arg1-of ( become-01 :arg2 tradition :mod also ) :arg0-of ( go-06 :arg1 ( and :op1 tractors :op2 motorcycles :mod both ) ) )
incident :time-of ( place-01 :arg1 incident :time ( after :op1 ( shave-01 :arg0 incident :arg2 ( road :mod a1 :arg1-of ( near-02 :arg2 ( morges :mod vo ) ) ) ) ) )
and :op1 ( '' :arg0 ( thing :arg1-of decide-01 ) :arg1 ( market :mod gas ) ) :op2 ( establish-01 :arg1 ( framework :arg1-of legal-02 ) ) :op3 ( establish-01 :arg1 ( framework :arg1-of legal-02 ) )
talk-01 :arg0 we :arg1 ( change-01 :arg0 we :arg1 term ) :time ( week :mod just :mod just )
say-01 :arg0 he :arg1 ( lead-03 :arg0 ( discuss-01 :arg1 ( candidacy :poss she ) ) :arg2 ( controversy :arg1-of ( possible-01 :polarity - :mod also ) ) ) :mod also
cause-01 :arg0 ( rise-01 :arg1 ( index :mod ( exchange-01 :arg1 stock ) :location continent_name_0 ) ) :arg1 ( rise-01 :arg1 ( monetary-quantity :arg2-of ( price-01 :arg1 oil ) :arg1-of strong-02 ) ) :mod also
contrast-01 :arg1 ( expect-01 :arg1 ( thing :arg1-of ( opine-01 :arg0 ( thing :arg1-of ( opine-01 :arg0 ( thing :arg1-of ( opine-01 :arg0 ( thing :arg1-of ( opine-01 :arg0 ( thing :arg1-of ( opine-01 :arg0 ( thing :arg1-of ( opine-01 :arg0 ( thing :arg1-of ( opine-01 :arg0 ( thing :arg1-of ( opine-01 :arg0 ( thing :arg1-of ( opine-01 :arg0 ( thing :arg1-of ( opine-01 :arg0 ( thing :arg1-of ( opine-01 :arg0 ( thing :arg1-of ( opine-01 :arg0 ( thing :arg1-of ( opine-01 :arg0 ( thing :arg1-of ( opine-01 :arg0 ( thing :arg1-of ( opine-01 :arg0 ( thing :arg1-of ( opine-01 :arg0 ( thing :arg1-of ( opine-01 :arg0 ( thing :arg1-of ( opine-01 :arg0 ( thing :arg1-of ( opine-01 :arg0 ( thing :arg1-of ( opine-01 :arg0 ( thing :arg1-of ( opine-01 :arg0 ( thing :arg1-of ( opine-01 :arg0 ( thing :arg1-of ( opine-01 :arg0 ( thing :arg1-of ( opine-01 :arg0 ( thing :arg1-of ( opine-01 :arg0 ( thing :arg1-of ( opine-01 :arg0 ( thing :arg1-of ( opine-01 :arg0 ( thing :arg1-of ( opine-01 :arg0 ( thing :arg1-of ( opine-01 :arg0 ( thing :arg1-of ( opine-01 :arg0 person ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) )
contrast-01 )
tell-01 :arg0 he :arg1 ( good :domain they :mod really ) :arg2 ( tell-01 :arg0 ( person :arg0-of sing-01 ) :arg1 ( good :domain person :degree really ) ) :time ( ask-01 :arg0 person :arg1 ( relation-03 :arg0 person :arg2 ( person :quant num_0 ) ) )
accuse-01 :arg1 ( person :arg1-of ( accuse-01 :arg2 ( have-03 :arg0 person :arg1 ( dag :poss person ) ) ) ) :arg2 ( back :part-of person )
broadcast-01 :arg0 ( television :name ( name :op1 government-controlled :op2 television ) :mod television ) :arg1 ( assassination :mod violent :prep-against ankara ) :duration ( several :op1 ( temporal-quantity temporal-quantity_num_0 :unit month ) )
cause-01 :arg0 ( thing :arg2-of ( sanction-02 :arg0 country_name_0 ) ) :arg1 ( lose-02 :arg1 ( thing :arg2-of ( sanction-02 :arg0 country_name_1 ) ) :mod massive :arg1-of ( cause-01 :arg0 ( provide-01 :arg0 ( rule :arg1-of ( rule-03 :arg0 rule ) ) :arg1 ( person :arg0-of tour-01 :mod ( ammonium :quant several ) :mod country ) :arg2 ( temporal-quantity temporal-quantity_num_0 :unit year ) ) :mod particular ) )
name-02 :arg0 he :arg1 ( thing :arg1-of ( include-91 :arg2 ( person :quant num_0 ) ) ) :arg2 ( person :quant num_0 :arg1-of ( trust-01 :arg0 he ) ) :time ( come-12 :arg1 ( power-01 :arg0 he ) )
get-03 :arg1 ( billsa :mod simona ) :arg2 woman
adopt-01 :arg0 ( girl :arg1-of ( adopt-01 :arg0 ( person :arg0-of ( have-rel-role-91 :arg1 girl :arg2 grandparents ) ) ) ) :arg1 ( girl :arg0-of ( have-rel-role-91 :arg1 girl :arg2 grandparents ) ) :time ( and :op1 ( baby :arg0-of ( have-rel-role-91 :arg1 girl :arg2 child ) ) :op2 ( person :arg0-of ( have-rel-role-91 :arg1 girl :arg2 mother ) ) :op3 ( person :arg0-of ( have-rel-role-91 :arg1 girl :arg2 mother ) ) :op4 ( person :arg0-of ( have-rel-role-91 :arg1 girl :arg2 mother ) ) :op5 ( person :arg0-of ( have-rel-role-91 :arg1 girl :arg2 mother ) ) :op6 ( person :arg0-of ( have-rel-role-91 :arg1 girl :arg2 mother ) ) :op6 ( person :arg0-of ( have-rel-role-91 :arg1 girl :arg2 mother ) ) :op7 ( person :arg0-of ( have-rel-role-91 :arg1 girl :arg2 mother ) ) )
multi-sentence :snt1 ( sport :mod expensive :domain ( sport :arg1-of practice-01 ) ) :snt2 ( and :op1 ( train-01 :arg0 ( person :arg0-of ( pay-01 :arg3 ( club :name ( name :op1 workouts ) :arg1-of private-03 ) ) :arg0-of ( have-rel-role-91 :arg1 person :arg2 parent ) ) :arg2 ( club :name ( name :op1 -lrb- ) :arg1-of private-03 ) ) :op2 ( support-01 :arg0 ( person :arg0-of ( have-rel-role-91 :arg1 person :arg2 parent ) ) :arg1 ( and :op1 ( person :arg0-of ( pay-01 :arg3 workouts ) ) :op2 ( person :arg0-of ( pay-01 :arg3 ( and :op1 workouts :op2 room :op3 uniforms :op4 uniforms :op5 uniforms :op6 hotel :op7 ( monetary-quantity :arg1-of expend-01 :mod other ) ) ) ) ) ) )
contrast-01 :arg2 ( recommend-01 :arg1 ( use-01 :arg0 you :arg1 ( prepare-02 :mod this ) :time ( date-entity year_date-entity_0 ) :time ( after :op1 ( attack-01 :arg0 heart :arg1 ( risk-01 :arg2 ( disease :mod cardiovascular ) ) :degree further ) ) ) )
multi-sentence :snt1 ( concern-01 :arg0 ( attend-02 :polarity - :arg0 ( authority :mod region ) :arg1 ( problem :mod this ) ) ) :snt2 ( possible-01 :arg1 ( offend-01 :arg0 ( correctness :mod politics ) :arg1 ( and :op1 ( interest :mod ethnic ) :op2 ( interest :mod religious ) ) ) )
set-02 :arg0 ( set :mod three-year ) :arg1 ( limit-01 :arg1 ( request-01 :arg1 ( vote-01 :mod automatic :mod automatic ) ) )
convict-01 :arg1 he :arg2 ( guilty-01 :arg1 he :arg2 ( standard :mod ( thing :arg0-of ( evidence-01 :arg1 ( law :arg2-of criminal-03 ) ) :arg1-of ( base-02 :arg2 ( thing :arg0-of evidence-01 :mod conclusive ) ) ) ) )
understand-01 :polarity - :arg0 idiot :arg1 ( be-located-at-91 :arg1 idiot :arg2 air :mod still )
multi-sentence :snt1 ( tell-01 :arg0 he :arg1 ( and :op1 ( obligate-01 :arg1 i :arg2 ( take-01 :arg0 i :arg1 moment ) ) :op2 ( apologize-01 :arg0 i :arg2 ( comment-01 :arg0 i :arg3 ( style :mod ( style :arg1-of free-04 ) :poss woman ) :time yesterday ) ) ) ) :snt2 ( compete-02 :arg0 i :arg3 ( thing :mod ( style :arg1-of free-03 ) :poss woman ) :time yesterday )
and :op1 ( take-out-11 :arg0 she :arg1 ( panties :mod shelf :poss he ) ) :op2 ( take-out-11 :arg0 she :arg1 ( and :op1 ( tights :poss he ) :op2 ( trousers :arg1 he ) ) ) :op3 ( spotted :arg0 she :arg1 they :location spot )
say-01 :arg0 ( person_name_0 :arg0-of ( have-org-role-91 :arg1 country_name_1 :arg3 ( temporal-quantity temporal-quantity_num_0 :unit year ) ) ) :arg1 ( idea :topic ( buy-01 :arg0 someone :arg1 ( clothes :arg1-of ( and :op1 ( dressing :arg1 ( person :mod another ) ) :op2 ( washed :polarity - :arg1 clothes ) ) ) ) ) :time ( year :mod 33 )
say-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg1 ( person_name_0 :arg0-of ( have-org-role-91 :arg1 country_name_1 :arg2 spokesman ) ) :arg2 spokesman ) ) :arg1 ( realize-01 :arg0 person :arg1 ( incident :time-of ( incident :arg0-of ( place-01 :arg1 ( place :quant num_0 ) ) ) ) )
marked :arg1 ( wall :mod home :quant many )
state-01 :arg0 ( and :op1 ( person :arg0-of ( have-org-role-91 :arg1 ( police :mod country_name_0 ) :arg2 spokeswoman ) ) :op2 ( person :arg0-of ( have-org-role-91 :arg1 police :arg2 spokeswoman ) ) :op3 ( person :arg0-of ( have-org-role-91 :arg1 police :arg2 spokeswoman ) ) :op4 ( person :arg0-of ( have-org-role-91 :arg1 police :arg2 spokeswoman ) ) :op5 ( person :arg0-of ( have-org-role-91 :arg1 police :arg2 spokeswoman ) ) ) :arg1 ( warn-01 :arg0 ( person :mod other :arg0-of ( continue-01 :arg1 ( violate-01 :arg0 person :arg1 rule ) ) :mod other ) :arg1-of clear-06 )
recommend-01 :arg1 ( remain-01 :arg1 ( profit-01 :time ( year :mod last ) ) :arg3 ( remain-01 :arg1 profit-01 ) ) :time meanwhile
multi-sentence :snt1 ( possible-01 :arg1 ( and :op1 ( be-located-at-91 :arg1 we :arg2 ( and :op1 ( anger-01 :arg0 ( anger-01 :arg0 we ) ) :op2 ( suppress-01 :arg0 we :arg1 we ) :op3 ( keep-02 :arg0 we :arg1 ( and :op1 ( person :arg0-of ( have-rel-role-91 :arg1 we :arg2 friend ) ) :op2 ( person :arg0-of ( have-rel-role-91 :arg1 we :arg2 relative ) ) :op3 ( person :arg0-of ( have-rel-role-91 :arg1 we :arg2 relative ) ) :op4 ( person :mod other :arg0-of ( have-rel-role-91 :arg1 we :arg2 relative ) ) :op5 ( person :arg0-of ( have-rel-role-91 :arg1 we :arg2 relative ) ) :op5 ( person :arg0-of ( have-rel-role-91 :arg1 we :arg2 relative ) ) :op7 ( person :arg0-of ( have-rel-role-91 :arg1 we :arg2 relative ) ) ) ) ) ) ) :op2 ( way :polarity - :mod ( good :degree most ) :domain ( smoke :arg1-of ( do-02 :arg0 we :mod usual :mod usual ) ) ) ) :snt2 ( go-02 :mode imperative :arg0 you :arg4 team_name_1 )
and :op1 ( be-located-at-91 :arg1 ( person :arg0-of ( have-rel-role-91 :arg1 child :arg2 child ) ) :arg2 ( here :mod right ) :arg1-of complete-02 :time ( moment :mod this ) ) :op2 ( and :op1 ( spontaneous :arg1 they ) :op2 ( be-located-at-91 :arg1 they :arg2 ( hand :part-of ( emotions :mod various ) ) :frequency often ) )
named :arg0 ( society :mod friendship :mod finnish-latvian ) :arg1 ( society :name ( name :op1 rozentals-seura :op2 rozentals-seura :op3 rozentals-seura ) ) :time ( after :op1 ( offer-01 :arg0 ( person :arg0-of ( travel-01 :mod small ) :arg0-of travel-01 :mod small ) :arg1 ( '' :arg0 person :arg1 ( person :arg0-of travel-01 :mod small ) :instrument ( heart :location ( '' :mod latvia ) ) ) ) :time ( after :op1 ( offer-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg1 ( city-district_name_1 :mod small ) :arg3 ( apprentice-01 :arg0 person ) ) ) :arg1 ( exhibition :arg0 person :arg1 ( heart :mod ( art :mod nation ) :mod latvian ) ) ) ) :time ( time :arg1-of same-01 ) )
event :time now :mod official
release-01 :arg0 ( person :mod religious-group_name_0 ) :arg1 ( person :arg1-of imprison-01 :quant ( about :op1 num_0 ) ) :time ( late :degree more )
increase-01 :arg1 ( security :location facility ) :arg1-of ( cause-01 :arg0 threaten-01 )
say-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg1 criminal-organization_name_0 :arg2 president ) ) :arg1 ( and :op1 ( important :degree very :domain ( issue-02 :arg0 drowning ) ) :op2 ( talk-01 :arg0 person :arg1 ( program :mod such ) :time ( after :op1 now :quant ( nearly :op1 ( between :op1 ( temporal-quantity temporal-quantity_num_0 :unit week ) :op2 ( temporal-quantity temporal-quantity_num_2 :unit week ) ) ) ) ) )
include-91 :arg1 ( thing :quant num_0 :arg1-of ( compensate-01 :arg2 ( program :name ( name :op1 latvenergo ) ) ) ) :arg2 ( program :topic ( recovery :arg1 ( resource :mod fish ) ) )
and :op1 ( possible-01 :arg1 ( set-02 :arg0 ( person :mod country_name_0 ) :arg1 ( point :mod ( record :mod new :mod nation ) :mod new ) :arg2 ( point :quant num_0 ) ) ) :op2 ( win-01 :arg0 person :arg1 ( place :ord ( ordinal-entity ordinal-entity_num_1 ) ) :location ( compete-01 :name ( name :op1 prestigious ) :location ( gecis :location austria ) ) )
report-01 :arg0 agency :arg1 ( be-located-at-91 :arg1 ( borodavko :name ( name :op1 latvian :op2 eugene :op3 eugene :op4 eugene :op5 eugene :op6 eugene :op7 eugene ) ) :arg2 ( fight-01 :arg1 ( class :mod weight ) :arg2 ( mass-quantity mass-quantity_num_0 :unit kilogram ) ) ) :time already
justice :domain ( person_name_0 :arg0-of ( have-org-role-91 :arg1 ( court :mod district :mod country_name_1 ) :arg2 chief ) )
tries :arg0 ( person :arg0-of buy-01 ) :location ( out :op1 motor )
end-01 :arg1 ( perform-02 :arg0 ( team :consist-of ( person :arg0-of ( have-org-role-91 :arg1 ( team :mod country_name_0 ) :arg2 ( series :name ( name :op1 rugby-7 ) ) ) ) :mod spectacular ) ) :arg4 thursday :time ( end-01 :arg1 ( division :mod fiji :mod rio ) ) :time ( defeat-01 :arg0 ( division :name ( name :op1 rio ) :mod fiji ) :arg1 they :prep-with ( trouble-01 :arg1 ( race :quant num_0 :mod final :arg0-of fascinate-01 ) :location ( stadium :mod deodoro ) ) )
contrast-01 :arg1 ( win-01 :arg0 ( win-01 :arg0 country_name_0 :arg2 ( score-entity :op1 num_0 :op2 num_1 ) ) :arg1 ( between :op1 ( temporal-quantity temporal-quantity_num_0 :unit year ) :op2 ( temporal-quantity temporal-quantity_num_2 :unit year ) ) ) :arg2 ( contrast-01 :arg1 ( win-01 :arg0 ( team :mod both ) :arg1 ( ground :location-of ( lose-02 :arg0 ( team :mod both ) :arg1 ground :location ground ) ) ) :arg2 ( lose-02 :arg0 ( team :mod both ) :arg1 ( point :quant ( few :mod just ) ) ) ) :time ( day :ord ( ordinal-entity ordinal-entity_num_0 ) )
think-01 :arg0 i :arg1 ( and :op1 ( williams :arg1 amr-unknown :degree very :time ( morning :mod all ) ) :op2 ( speak-01 :arg0 amr-unknown :arg1 ( more :compared-to ( usual :polarity - ) :mod usual ) ) ) :time ( after :op1 win-01 )
say-01 :arg0 she :arg1 ( regret-01 :arg1 ( thing :arg1-of feel-01 ) )
threaten-01 :arg0 ( capable-01 :polarity - :arg1 ( set-up-03 :arg1 ( government-organization :arg0-of govern-01 ) ) ) :arg2 ( capable-01 :arg1 ( reduce-01 :arg1 ( deficit :mod budget ) ) ) :prep-in spain
mean-01 :arg1 this :arg2 ( need-01 :arg0 ( government-organization :arg0-of ( govern-01 :arg1 ( country :mod this ) ) ) :arg1 ( implement-01 :arg0 government-organization :arg1 ( measure-02 :arg1-of ( include-91 :arg2 ( product :arg1-of gross-03 :mod domestic ) :arg3 ( percentage-entity percentage-entity_num_0 ) ) ) :time ( year :mod this ) ) :location ( framework :poss ( program :mod stability ) ) )
complicate-01 :arg1 situation :degree ( more :degree much ) :time ( case-03 :arg1 spain )
beaches :arg1 ( beaches :arg1-of dirty-02 ) :mod also :location riga
explain-01 :arg0 ( person :arg0-of ( organize-01 :arg1 campaign-01 ) ) :arg1 ( and :op1 ( everywhere :location everywhere ) :op2 ( signal-07 :arg1 ( or :op1 warn-01 :op2 prohibit-01 ) ) :location everywhere ) :mod also
multi-sentence :snt1 ( and :op1 ( '' :arg0 ( figure :arg1-of average-03 ) :arg1 ( place :quant num_0 :mod bathing :mod all ) :location ( and :op1 ( place :name ( name :op1 riga ) ) :op2 vakarbulli :op3 vec ) :arg2-of ( fortunate-01 :polarity - ) ) :op2 ( exceed-01 :arg0 figure :arg1 ( or :op1 desire-01 :op2 target-01 ) ) :arg2-of ( fortunate-01 :polarity - ) ) :snt2 ( advocate-01 :arg0 i :arg1 ( advocate-01 :arg1 ( move-01 :arg1 ( number :quant-of ( unit :mod waste ) ) :arg2 ( unit :quant num_2 ) ) ) )
advocate-01 :arg0 ( person :arg0-of ( head-01 :arg1 ( government-organization :arg0-of ( administrate-01 :arg1 president ) ) ) ) :arg1 ( thing :arg2-of ( position-01 :arg1 ( person :arg0-of ( head-01 :arg1 ( government-organization :arg0-of ( administrate-01 :arg1 president ) ) ) ) ) )
familiarize-01 :arg1 we :arg2 ( eduardovich :mod anton ) :duration ( time :arg1-of long-03 )
rage-02 :location ( sand :mod rio )
look-up-05 :arg0 we :arg1 ( match-03 :name ( name :op1 beaches :op2 volleyball :op3 pedro :op4 pedro :op5 pedro :op6 solberg :op7 solberg ) ) :direction forward :time evening
run :arg0 ( intrigueing :arg1 game ) :arg1 ( losers :arg1 game )
possible-01 :arg1 ( find-01 :arg1 ( form :mod sporty ) )
cause-01 :arg1 ( possible-01 :polarity - :arg1 ( comfortable-02 :polarity - :arg0 view-01 :arg1 they ) )
multi-sentence :snt1 ( differ-02 :arg1 ( see-01 :arg1 ( and :op1 ( bad-07 :polarity - :arg1 ( boy :mod this ) ) :op2 ( hair :arg1-of ( mean-01 :arg2 hair ) ) :op3 ( boy :mod this ) ) :arg1-of significant-02 ) :arg2 ( stereotype :mod usual :poss ( stage :name ( name :op1 stage ) :mod stage ) ) ) :snt2 ( say-01 :arg0 ( person_name_0 :arg0-of ( have-org-role-91 :arg2 '' ) ) :arg1 ( vaver :arg1 music ) )
high-02 :arg1 this :degree most :arg1-of ( cause-01 :arg0 ( be-located-at-91 :arg1 ( and :op1 ( thing :quant num_0 ) :op2 ( broadcast-program_name_0 :ord ( ordinal-entity ordinal-entity_num_1 ) ) ) :arg2 ( above :op1 thing ) :time ( since :op1 ( expel-01 :arg1 ( year :mod previous ) ) ) ) :time ( before :op1 now :quant ( approximately :op1 ( temporal-quantity temporal-quantity_num_2 :unit year ) ) ) )
and :op1 ( fall-01 :arg1 ( thing :arg2-of ( price-01 :arg1 ( thing :arg2-of price-01 ) ) ) :arg3 ( and :op1 clothing :op2 ( equipment :name ( name :op1 footwear ) ) :op3 ( equipment :name ( name :op1 household ) ) :op4 ( home :poss house-01 ) :op5 ( home :arg1-of regular-03 ) :op6 ( home :arg1-of regular-03 ) :op7 ( home :arg1-of regular-03 ) ) ) :op2 ( health :arg1 ( health :quant ( between :op1 num_0 :op2 num_2 ) ) )
understand-01 :arg0 you :arg1 amr-unknown
explode-01 :arg0-of ( effective-04 :arg1 ( lose-02 :arg1 weight ) ) :mod such
need-01 :arg1 ( produce-01 :arg1 ( hemoglobin :arg0-of ( provide-01 :arg1 ( supply-01 :arg1 oxygen :arg2 ( and :op1 muscle :op2 brain ) ) ) ) ) :mod iron
blurred :arg1 ( skill :mod image-distorting :arg0-of ( generate-01 :arg1 ( rate-entity-91 :arg1 ( more-than :op1 num_0 ) :arg2 ( temporal-quantity temporal-quantity_num_0 :unit day ) ) ) )
(-(
receive-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg1 country_name_0 ) ) :arg1 ( monetary-quantity :arg1-of expend-01 :arg1-of legal-02 ) :arg2 ( fight-01 :arg1 ( patent-01 :arg1 ( patent-01 :mod c :mod c ) ) )
and :op1 ( round :ord ( ordinal-entity ordinal-entity_num_0 ) ) :op2 ( final :time today ) :domain ( and :op1 ( round :ord ( ordinal-entity ordinal-entity_num_0 ) ) :op2 ( final :arg1-of ( include-91 :arg2 ( day :ord ( ordinal-entity ordinal-entity_num_1 ) ) ) ) ) :location ( center :location-of attend-02 ) :mod definite
multi-sentence :snt1 ( come-across-21 :arg0 ( art :name ( name :op1 amateurs :op2 collectives ) :source ( region :name ( name :op1 engure ) ) ) :arg1 ( campsites :arg1 art ) ) :snt2 ( impress-01 :arg0 ( perform-01 :arg0 ( person :arg1-of differ-02 ) :arg1-of ( perform-01 :arg0 ( person :arg1-of differ-02 ) ) :arg1-of ( perform-01 :arg0 ( person :arg1-of differ-02 ) ) ) :arg1 ( and :op1 ( '' :name ( name :op1 '' ) :mod red ) :op2 ( golden :mod '' :poss ( person :mod young ) ) ) )
contrast-01 :arg1 ( obstacle :time always :purpose overcome-01 ) :arg2 ( overcome-01 :arg0 hittower :arg1 everything :time so-far )
say-01 :arg0 ( report-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg1 ( police :poss country_name_0 ) :arg3 ( report-01 :arg0 person ) ) ) ) :arg1 ( want-01 :arg0 ( woman :arg1-of ( include-91 :arg2 woman ) ) :arg1 ( commit-02 :arg0 woman :arg1 suicide ) :manner desperate :location ( road :location-of ( flee-05 :arg0 woman :arg1 she ) ) )
die-01 :arg1 she :location scene
and :op1 ( count-01 :arg1 ( number :quant-of ( person :quant num_0 :arg0-of ( pairs :arg1 ( point :mod small ) ) ) ) :arg1-of follow-04 :time ( after :op1 ( suffer-01 :arg0 ( lose-02 :arg0-of advise-01 ) :arg1 ( match-03 :mod this ) ) ) ) :op2 ( favorable :degree most :domain ( duet :mod latvian ) ) :arg1-of follow-04
possible-01 :arg1 ( and :op1 ( regard-01 :arg1 riga :arg2 ( and :op1 ( begin-01 :arg1 begin-01 ) :op2 ( inspire-01 :arg0 ( career :poss ( career :name ( name :op1 celebrated :op2 cinema :op3 zar ) ) ) ) ) ) )
seem-01 :arg1 ( guilty-01 :arg1 treaty_name_0 ) :manner sudden
find-01 :arg0 ( person :quant num_0 :arg0-of ( have-org-role-91 :arg2 president ) ) :arg1 ( hadn :arg0 person :arg1 issue-02 :mod even :mod even ) :time ( after :op1 ( discuss-01 :duration ( more-than :op1 ( temporal-quantity temporal-quantity_num_0 :unit hour ) ) ) )
abandon-01 :arg0 it :arg1 they :time ( since :op1 ( and :op1 ( before :op1 now :quant ( nearly :op1 ( temporal-quantity temporal-quantity_num_0 :unit year ) ) ) :op2 ( need-01 :arg1 assist-01 ) ) )
contrast-01 :arg1 ( available-02 :arg1 ( person :mod country_name_0 :mod ethnic-group_name_1 ) :arg2 ( customer :mod country_name_1 ) ) :arg2 ( win-01 :arg0 ( public :arg1-of public-02 ) :arg1-of public-02 )
multi-sentence :snt1 ( say-01 :arg0 i :arg1 ( have-03 :polarity - :arg0 we :arg1 ( ambition :mod globe ) :time no-longer ) ) :snt2 ( have-03 :arg0 we :arg1 ( ambition :arg1-of local-02 ) )
know-03 :arg0 nobody :arg1 that
accompany-01 :arg0 ( music :mod latin :arg1-of ( fit :arg2 ( next :op1 street :location ( next-to :op1 street ) :location ( next-to :op1 street ) ) ) ) :arg1 ( perform-02 :arg0 she :arg1 ( move-01 :arg3-of free-04 ) )
find-01 :arg1 ( gun :mod gun :mod only :arg0-of ( belong-01 :arg1 ( weapon :arg1-of differ-02 ) ) ) :location scene :time event
and :op1 ( need-01 :arg0 ( person :arg0-of ( have-rel-role-91 :arg2 dh ) ) :arg1 ( act-02 :arg0 person :time now ) ) :op2 ( stop-03 :arg0 person :arg1 ( person :mod ( doctor :mod young ) ) :arg2 ( doctor :mod young ) )
multi-sentence :snt1 ( and :op1 ( person :arg0-of ( have-org-role-91 :arg1 ( government-organization :arg0-of govern-01 ) :arg2 minister :time former ) ) :op2 ( person :arg0-of ( have-org-role-91 :arg1 ( government-organization :arg0-of govern-01 ) :arg2 minister :time former ) ) :op3 ( person :arg0-of ( have-org-role-91 :arg1 ( government-organization :arg0-of govern-01 ) :arg2 minister :time former ) ) :op4 ( person :arg0-of ( have-org-role-91 :arg1 ( government-organization :arg0-of govern-01 ) :arg2 minister :time former ) ) :op5 ( person :arg0-of ( have-org-role-91 :arg1 government-organization :arg2 minister :time former ) ) :op6 ( person :arg0-of ( have-org-role-91 :arg1 government-organization :arg2 minister :time former ) ) :op7 ( person :arg0-of ( have-org-role-91 :arg1 government-organization :arg2 minister :time former ) :arg0-of ( ignore-01 :arg1 ( sign :arg1-of ( signal-07 :arg0 person ) ) ) ) ) :snt2 ( fear-01 :arg0 person :arg1 ( offend-01 :arg0 person :arg1 ( minority :mod ethnic ) ) )
say-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg1 ( government-organization :arg0-of ( govern-01 :arg1 country_name_0 ) ) :arg2 ( secretary :mod vice ) :time former ) :arg0-of ( have-org-role-91 :arg1 ( movement-07 :arg1 corrupt-01 ) :arg2 member :time former ) :arg0-of ( have-org-role-91 :arg1 ( movement-07 :arg1 corrupt-01 ) :arg2 member :time former ) :arg0-of ( have-org-role-91 :arg1 ( movement-07 :arg1 corrupt-01 ) :arg2 member :time former ) :arg0-of ( have-org-role-91 :arg2 member ) ) :arg1 ( recommend-01 :arg1 ( allow-01 :arg1 ( deploy-01 :arg0 police :arg1 ( person :arg0-of guard-01 ) :arg2 ( outside :op1 ( station :mod polling ) :purpose ( protect-01 :arg0 person :arg1 ( person :arg0-of ( vote-01 :arg1 kidnap-01 ) ) ) ) ) ) )
apologize-01 :arg0 ( person :mod country_name_0 ) :arg1 ( person :quant ( more-than :op1 num_0 ) :arg0-of ( respond-01 :arg1 ( twitter :arg0 person :arg1 ( comment-01 :mod this ) ) ) )
say-01 :arg1 ( and :op1 ( mean-02 :arg0 i :arg1 ( say-01 :arg0 i :arg1 ( mean-02 :arg0 i :arg1 ( show-04 :arg1 i ) :degree total ) ) ) :op2 ( sorry-01 :arg1 i :arg2 ( event :mod it ) :mod really ) ) :arg2 person_name_0
multi-sentence :snt1 ( go-02 :arg0 they :time final ) :snt2 ( wonderful-03 :arg1 they :location here )
found-01 :arg1 ( person :quant num_0 )
say-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg1 ( person :arg1-of local-02 :arg0-of ( have-org-role-91 :arg2 official ) ) :arg2 official ) ) :arg1 ( and :op1 ( wear-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg1 ( city_name_0 :location south :mod country_name_1 ) :arg2 mayor ) ) :arg1 ( swimsuits :arg0 person :arg1 ( swimsuits :mod burkini ) :location ( beach :mod this ) :arg1-of ( complete-02 :degree almost ) ) ) :op2 ( reminiscent :arg0 ( person :arg0-of ( have-org-role-91 :arg2 official ) :arg1-of local-02 ) :arg1 person ) )
and :op1 ( aspire :arg0 he :arg1 it :degree total ) :op2 ( aspire :arg0 he :arg1 glory :degree total :mod just )
cause-01 :arg0 ( know-01 :arg0 we :arg1 ( and :op1 ( event :beneficiary we ) :op2 ( thing :manner-of ( deal-01 :arg0 we :arg2 it ) ) ) :mod usual ) :arg1 ( angry :domain adult )
decide-01 :arg0 you :arg1 ( spend-01 :arg0 you :arg1 ( life :poss you ) :manner together )
capture-01 :arg0 ( state :mod religious-group_name_0 ) :arg1 ( person :quant num_0 :mod civilian :arg0-of reside-01 ) :location syria
know-01 :polarity - :arg1 ( flee-05 :arg0 ( person :arg0-of fight-01 :mod state :quant amr-unknown ) )
inform-01 :arg0 police :arg1 ( court :mod orphans ) :arg2 ( court :mod orphans :arg0-of ( decide-01 :arg1 ( fate :poss child :time future ) :mod also ) ) :time immediate
bias-01 :arg1 ( security :location facility ) :arg1-of ( cause-01 :arg0 ( threaten-01 :arg1 ( security :location facility ) ) )
say-01 :arg0 government-organization_name_0
tell-01 :arg0 i :arg1 ( cause-01 :arg0 amr-unknown :arg1 ( be-located-at-91 :arg1 he :arg2 ( thing :arg0-of ( cause-01 :arg1 ( likely-01 :arg1 ( be-02 :arg1 he :arg1-of ( cause-01 :arg0 ( yakubovsky :arg1 he ) ) ) ) ) ) ) :degree total ) :arg2 person_name_0
and :op1 ( work-01 :arg0 i :location here ) :op2 ( spend-02 :arg0 i :arg1 ( time :poss i ) ) :op3 ( try-01 :arg0 i :arg1 ( realize-02 :arg0 i :arg1 ( program :mod four-year ) ) ) :location here :arg1-of ( emerge-01 :arg0 i )
and :op1 ( carry-out-03 :arg1 ( introduce-02 :arg1 ( and :op1 ( juvenile :mod fish ) :op2 larvae ) ) :location ( and :op1 presence :op2 ( volume :name ( name :op1 numerical ) :arg1-of ( mean-01 :arg2 ( and :op1 ( species :mod scientifically ) :op2 ( body :poss species ) ) ) ) ) ) :time ( year :mod each )
announce-01 :arg0 i :arg1 ( confident-01 :arg1 he :arg2 ( choose-01 :arg0 dropshipper :arg1 garland ) ) :time ( conference :poss he ) :time ( conference :poss he )
judge-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg3 judge-01 ) ) :arg1 ( court :mod district :mod country_name_1 ) :arg2 chief
say-01 :arg0 he :arg1 ( fit :polarity - :domain ( person :arg0-of ( have-org-role-91 :arg2 president ) ) ) :mod also
contrast-01 :arg1 ( prevent-01 :arg0 ( technique :name ( name :op1 mitchell ) :mod great ) :arg1 ( nakaravam :name ( name :op1 german ) ) :arg2 ( point :quant num_0 ) ) :arg2 ( affect-01 :arg0 fire-01 :arg1 ( thing :arg2-of result-01 ) :mod only )
possible-01 :arg1 ( look-01 :arg0 ( person :arg0-of visit-01 ) :arg1 ( and :op1 ( room :location center ) :op2 ( room :mod exhibit-01 ) :op3 ( room :mod tea ) :op4 ( room :mod tea ) ) )
complicate-01 :arg1 situation :degree ( more :degree much ) :prep-in ( case :mod spain )
explain-01 :arg0 ( council :mod ( city :arg0-of ( have-org-role-91 :arg2 capital ) ) ) :arg1 ( difficult :domain ( fight-01 :arg1 ( area :mod bathing ) ) :frequency ( rate-entity-91 :arg3 ( temporal-quantity temporal-quantity_num_0 :unit day ) ) ) :degree quite
and :op1 ( right :mod right :domain ( quality :poss water ) :mod all ) :op2 ( satisfactory :arg1 quality :location everywhere ) :time ( year :mod this )
multi-sentence :snt1 ( announce-01 :arg0 i :arg1 change-01 ) :snt2 ( and :op1 ( welcome :arg0 ( and :op1 we :op2 you ) :arg1 ( and :op1 ( respect-01 :arg0 ( and :op1 we :op2 you ) :arg1 ( and :op1 ( person :arg0-of ( have-org-role-91 :arg2 head-of-state ) ) :op2 ( person :arg0-of ( work-01 :arg1 respected ) ) ) ) :op2 ( work-01 :arg0 you :manner together :duration ( many :op1 ( temporal-quantity temporal-quantity_num_0 :unit year ) ) ) ) :op2 ( work-01 :arg0 you :manner success :duration ( many :op1 ( temporal-quantity temporal-quantity_num_1 :unit year ) ) ) ) )
raise-01 :arg1 ( link-01 :arg1 ( step-01 :mod this ) :arg2 ( fight-01 :arg2 ( power :location ( elite :mod politics :poss country_name_0 ) ) ) ) :arg1-of ( view-02 :arg0 ( elect-01 :arg1 ( council :mod state :location country ) ) )
refer-01 :arg1 person_name_0 :arg2 ( modify-01 :arg1 person :arg2 ( position-02 :arg0 person :arg2 ( person :arg0-of ( have-org-role-91 :arg2 president ) ) :arg1-of possible-01 ) ) :arg0-of ( cause-01 :arg1 ( claim-01 :arg1 ( want-01 :arg0 person :arg1 ( take-01 :arg0 person :arg1 ( position :poss ( person :arg0-of ( represent-01 :arg1 ( person :arg0-of ( represent-01 :arg1 ( and :op1 ( protect-01 :arg1 nature ) :op2 transport-01 ) ) ) ) ) ) ) ) ) )
blame-01 :arg1 ( blame-01 :arg1 ( elite :mod ( party :mod country_name_0 ) ) )
contrast-01 :arg1 ( have-03 :arg0 he :arg1 ( opponent :mod ( captivated :degree more ) ) ) :arg2 ( possible-01 :arg1 ( surprise-01 :arg0 ( time :mod ambitious ) ) )
have-concession-91 :arg1 ( resemble-01 :arg1 outcome :arg2 ( stay-01 :arg1 he :duration ( or :op1 ( temporal-quantity temporal-quantity_num_0 :unit minute ) :op2 ( temporal-quantity temporal-quantity_num_1 :unit year ) ) ) )
miss-01 :arg0 ( metropolis :mod latvian ) :arg1 ( ambition :mod most ) :time ( recent :degree most ) :arg2-of ( fortunate-01 :polarity - )
and :op1 ( have-rel-role-91 :polarity - :arg0 i :arg1 ( person :arg0-of ( have-rel-role-91 :arg2 friend ) ) :arg2 friend :time ever ) :op2 ( cause-01 :arg0 ( differ-02 :arg1 no-one :degree too ) :arg1 no-one )
be-located-at-91 :arg1 ( and :op1 ( barrier :mod 100-meter ) :op2 ( thing :arg1-of rise-01 ) ) :arg2 ( behind :op1 ( record :arg1-of personal-02 :poss she ) )
and :op1 ( plan-01 :arg0 it :arg1 ( select-01 :arg1 ( and :op1 ( interior :poss building ) :op2 ( wall :poss building ) :op3 ( improve-01 :arg1 stage ) :op4 ( improve-01 :arg1 stage ) :op5 ( improve-01 :arg1 stage ) ) ) ) :op2 ( arranged :arg0 it :arg1 ( communicate-01 :arg0 building :mod engineer-01 :mod internal-02 ) )
say-01 :arg0 ( person_name_0 :arg0-of ( have-org-role-91 :arg1 ( service :mod ( revenue :mod state ) ) :arg2 director general general ) ) :arg1 ( government :arg0 ( and :op1 ( person :arg0-of ( have-org-role-91 :arg2 professor ) ) :op2 ( person :arg0-of ( have-org-role-91 :arg2 professor ) ) :op3 ( person :arg0-of ( have-org-role-91 :arg2 professor ) ) :op4 ( person :arg0-of ( have-org-role-91 :arg2 professor ) ) :op5 ( person :arg0-of ( have-org-role-91 :arg2 professor ) ) :op6 ( person :arg0-of ( have-org-role-91 :arg2 professor ) ) :op6 ( person :arg0-of ( have-org-role-91 :arg2 professor ) ) :op6 ( person :arg0-of ( have-org-role-91 :arg2 professor ) ) :op6 ( person :arg0-of ( have-org-role-91 :arg2 professor ) ) :op6 ( person :arg0-of ( have-org-role-91 :arg2 professor ) ) :op6 ( person :arg0-of ( have-org-role-91 :arg2 professor ) ) :op6 ( person :arg0-of ( have-org-role-91 :arg2 professor ) ) :op6 ( person :arg0-of ( have-org-role-91 :arg2 professor ) ) :op7 ( person :arg0-of ( have-org-role-91 :arg2 professor ) ) ) )
and :op1 ( congested :degree most :domain country :mod main ) :op2 ( plan-01 :arg0 we :arg1 ( make-02 :arg0 we :arg1 ( motorways :arg0 ( country :quant all ) :arg1 ( condition :mod good ) :mod main ) ) )
and :op1 ( contain-01 :arg0 i :arg1 ( and :op1 water :op2 fibre ) ) :op2 ( contribute-01 :arg0 i :arg2 ( feel-01 :arg0 i :arg1 ( thing :arg1-of ( feel-01 :arg0 i ) ) ) )
add-02 :arg0 ( add-02 :arg2 vitamin ) :arg1 ( or :op1 ( salmon :mod rich ) :op2 ( no-dose :mod sardines ) ) :arg2 ( thing :arg2-of ( source-01 :arg1 calcium ) :mod good ) :time ( sandwich :arg1 cooking :arg2 salmon )
decline-02 :arg0 ( person :arg0-of ( decline-02 :arg1 ( discuss-01 :arg0 person :arg1 ( originate-01 :arg1 person :arg2 ( person :arg1-of employ-01 ) ) ) ) ) :arg1 ( contrast-01 :arg1 ( discuss-01 :arg0 person :arg1 ( person :arg1-of ( originate-01 :arg2 it ) ) ) :arg2 ( hire-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg1 company :arg2 spokesman ) ) :arg1 ( person :arg0-of specialize-01 :arg2-of staff-01 :arg0-of ( focus-01 :arg2 ( bring-01 :arg0 person :arg1 ( minority :mod race ) :arg2 ( person :arg0-of specialize-01 ) ) :arg0-of ( represent-01 :arg1 ( person :arg0-of specialize-01 ) :location ( location :poss company ) :degree total ) ) ) ) )
prepare-02 :arg1 woman :arg2 ( and :op1 ( eat-01 :arg0 woman :arg1 ( and :op1 ( husbands-workers :poss woman ) :op2 ( swim-01 :arg0 woman ) :op3 ( dinner :arg0 woman ) ) ) :op2 ( swim-01 :arg0 woman ) :op3 ( dinner :arg0 woman :arg1 woman ) )
judge-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg3 judge-01 ) :mod district ) :arg1 ( right-05 :arg1 person :arg2 ( claim-01 :arg0 person :arg1 ( compensate-01 :arg0 person :arg2 ( monetary-quantity :arg1-of ( expend-01 :arg0 person :arg2 ( defend-01 :arg0 person :arg1 case-03 ) :arg1-of legal-02 ) ) ) ) ) :arg2 ( person :arg0-of ( have-org-role-91 :arg3 judge-01 ) :location ( district :mod country_name_1 ) ) :time ( hear-01 :arg0 person :arg1 thursday )
explain-01 :arg0 hotel :arg1 ( thing :arg1-of ( decide-01 :arg3 ( hotel :location hotel ) ) :domain it )
incident :polarity - :mod such
receive-01 :arg0 ( center :arg1-of legal-02 :mod this ) :arg1 ( fund-01 :quant ( percentage-entity percentage-entity_num_0 ) ) :time ( so-far :op1 ( year :mod next ) ) :time ( year :mod next )
intend-01 :polarity - :arg0 candidate :arg1 ( do-02 :arg0 candidate :arg1 ( thing :arg1-of ( do-02 :arg0 candidate ) ) )
follow-01 :arg1 ( process-02 :arg1 ( open-01 :arg1 ( market :mod gas ) ) ) :arg2 ( position :mod ( trader :mod potential ) )
restrict-01 :arg1 traffic :arg1-of extensive-03 :location ( neighborhood :mod aglonian )
sing-01 :arg0 ( and :op1 ( role :mod othello ) :op2 ( opera :mod ( garden :polarity - ) ) ) :arg1 ( role :mod ( garden :degree ( more :mod covent ) ) ) :time ( late :degree more )
and :op1 ( confirm-01 :arg0 ( and :op1 ( person :arg0-of ( have-org-role-91 :arg2 ( president :mod vice ) ) ) :op2 ( person :arg0-of ( have-org-role-91 :arg2 ( person :arg0-of ( manage-01 :mod general ) ) ) ) ) :arg1 news ) :op2 ( announce-01 :arg0 person :arg1 ( start-01 :arg0 club :arg1 ( look-01 :arg0 club :arg1 ( coach :mod new ) ) :time immediate ) )
help-01 :arg0 ( data :mod new ) :arg1 ( understand-01 :arg1 ( thing :arg0-of ( cause-01 :arg1 ( and :op1 ( cut-01 :arg1 ( star :prep-in ( constellation :mod this ) ) ) :op2 ( cut-01 :arg1 ( speed :mod star :mod star :arg1-of ( apply-02 :arg2 planet ) ) :manner way ) ) ) ) )
measure-02 :arg0 ( and :op1 ( speed :poss ( rotation :mod each ) ) :op2 ( speed :poss ( rotation :mod each ) ) ) :arg1 time :time ( between :op1 ( appear-01 :arg1 ( appear-01 :arg1 ( area :mod star :mod recognizable ) ) ) :op2 et-cetera )
call-02 :mode imperative :arg0 you :arg1 sfpd :condition ( have-03 :arg0 you :arg1 ( information :mod any ) )
contrast-01 :arg2 ( and :op1 ( disappear-01 :arg1 ( train :mod conventional :arg0-of ( sponsor-01 :arg1 ( and :op1 wagons :op2 towed ) ) ) :arg3 ( and :op1 czech :op2 ( railway :mod globe ) ) :manner gradual :time ( year :mod recent ) ) :op2 ( replace-01 :arg0 ( or :op1 ( unit :mod email ) :op2 ( unit :mod electric ) ) :arg1 and ) )
obligate-01 :arg2 ( reach-01 :arg0 ( person :arg0-of ( own-01 :arg1 billboard ) ) :arg1 ( advertisements :arg0 person :arg1 advertisements ) ) :time first
and :op1 ( contrast-01 :arg2 ( change-01 :arg0 it :arg1 name ) ) :op2 ( deal-01 :arg0 it :arg2 nothing )
contrast-01 :arg1 ( person :mod nation :mod ( only :polarity - ) ) :arg2 ( and :op1 ( policy :mod region :mod ( sensitive :degree very ) :mod region :mod also ) :op2 ( theme :mod ( schizophrenic :degree somewhat ) :mod ( sensitive :degree somewhat ) ) )
reaped :arg0 ( person :arg0-of farm-01 ) :arg1 ( commodity :quant ( multiple :op1 ( mass-quantity mass-quantity_num_0 :unit ton ) ) )
and :op1 ( estimate-01 :arg1 ( pessimistic :time ( before :op1 now :quant ( temporal-quantity temporal-quantity_num_0 :unit month ) ) ) ) :op2 ( assume-02 :arg1 ( drop-01 :arg1 ( decimal :mod decimal ) :prep-against last ) )
average-01 :arg1 ( thing :arg1-of harvest-01 :mod last ) :arg2 ( above :op1 average-01 )
include-91 :arg1 ( field :quant num_0 :mod ( few :degree more ) ) :arg2 ( person :arg0-of farm-01 ) :time ( year :mod this )
rich :domain ( harvest-01 :arg1 poppy :time ( year :mod this ) ) :manner rich
say-01 :arg0 police :arg1 ( have-03 :arg0 they :arg1 ( and :op1 cannabis :op2 sticks :op3 machetes :location ( hand :part-of they ) ) )
pay-01 :arg0 they :arg1 ( income :quant ( percentage-entity :value num_0 ) ) :arg3 ( tax-01 :arg3 tax ) :arg2-of total-01
say-01 :arg0 ( organization :mod health :mod world ) :arg1 ( cycled :arg0 ( person :arg0-of ( -rrb- :arg1 virus ) :arg0-of ( -rrb- :arg1 virus ) ) )
win-01 :arg0 it :degree total :manner ( help-01 :polarity - :arg0 ( person :mod religious-group_name_0 ) )
intend-01 :arg0 it :arg1 ( ensure-01 :arg0 it :arg1 ( preached :arg1 ( imams :mod only :arg0-of ( schooled :arg1 ( and :op1 mosque :op2 modlitebnÃ¡chs ) ) ) ) ) :prep-in particular
go-01 :arg1 ( pilgrimages :mod traditional ) :arg4 ( around :op1 num_0 ) :arg4 ( around :op1 num_0 ) :time ( year :mod every )
gesture :arg1-of ( end-01 :time crisis ) :domain it
contrast-01 :arg2 ( show-01 :arg0 ( cold :mod persistent ) :arg1 ( have-03 :arg0 ( person :arg0-of ( lead-02 :arg1 country_name_0 ) ) :arg1 nothing ) )
contrast-01 :arg2 ( good :degree more :mod certain :domain ( speak-01 :arg0 ( person :arg0-of lead-02 ) :mod again :mod at-least ) :time ( after :op1 ( and :op1 ( temporal-quantity temporal-quantity_num_0 :unit month :arg1-of open-09 ) :op2 ( risk-01 :arg2 ( catastrophe :mod utterly ) ) ) ) )
change-01 :arg1 ( all :arg1-of ( mean-01 :arg2 ( and :op1 ( headquarters :arg1 ( and :op1 headquarters :op2 ( encoding :mod ( exchange-01 :arg1 stock ) ) ) ) :op2 ( encoding :arg1 ( exchange-01 :arg1 stock ) ) ) ) ) :arg2 natwest
multi-sentence :snt2 ( lead-03 :arg0 ( company :arg0-of win-01 ) :arg2 ( finish-07 :arg0 company :arg2 num_0 ) )
criticism :poss person_name_0
contrast-01 )
multi-sentence :snt1 ( sorry-01 :arg1 i :arg2 ( event :mod this ) ) :snt2 ( say-01 :arg0 he :arg1 ( thing :arg1-of state-01 ) )
say-01 :arg0 ( person_name_0 :arg0-of ( head-01 :arg1 ( constructors :mod bridge :arg0-of ( cross-02 :arg1 bridge ) ) ) ) :arg1 ( milestone :mod important :domain ( closure :arg1 ( construct-01 :arg1 ( bridge :mod each ) ) :ord ( ordinal-entity ordinal-entity_num_0 ) ) :time always )
say-01 :arg1 ( happy :domain ( man :quant num_0 ) ) :arg2 ( content-01 :arg1 ( man :quant num_0 ) )
say-01 :arg0 ( person :arg0-of ( have-rel-role-91 :arg1 ( person :arg0-of ( have-rel-role-91 :arg2 lawyer ) ) :arg2 lawyer ) ) :arg1 ( thing :arg1-of ( respond-01 :arg1-of ( possible-01 :polarity - ) ) :domain this )
say-01 :arg0 person_name_0 :arg1 ( sympathized :arg1 he :arg2 ( hitler :mod adolf ) )
estimate-01 :arg1 ( person :arg0-of specialize-01 ) :arg2 ( person :arg0-of specialize-01 ) :location ( republic :mod czech )
person :arg0-of ( practise :arg1 ( risk-01 :arg2 ( or :op1 cancer :op2 depression ) ) ) :arg1-of regular-02
push-02 :arg0 ( person :quant some :arg0-of ( look-01 :arg1 ( excuse-02 :arg0 person :arg1 complain-01 ) ) ) :mod of-course :mod of-course
possible-01 :arg1 ( ' :arg0 i :arg1 this :degree total )
say-01 :arg0 she :arg1 ( ready-02 :polarity - :arg1 you :arg2 that ) :arg1-of ( say-01 :arg0 she )
multi-sentence :snt1 ( couldn :arg0 he :arg1 ( or :op1 ( sit-01 :arg1 he :degree total ) :op2 ( crawls :arg0 he ) :time ( until :op1 ( age-01 :arg1 he :arg2 num_0 ) ) ) ) :snt2 ( and :op2 ( talk-01 :polarity - :arg0 he :mod still ) )
multi-sentence :snt1 ( teach-01 :arg0 we :arg1 ( language :arg1-of sign-01 ) :arg2 he ) :snt2 ( say-01 :arg0 i :arg1 ( and :op1 ( sign-01 :arg0 we :arg1 ( language :arg1-of sign-01 ) ) :op2 ( say-01 :arg0 i :arg1 ( picciutovÃ¡ :arg1 ( news :topic ( news :mod cbs ) ) ) ) ) )
see-01 :arg0 i :arg1 ( water :location ( place :quant several :location-of ( see-01 :arg0 i :arg1 she :time ( before :op1 ( see-01 :polarity - :arg0 i :arg1 she :time ( before :op1 ( see-01 :arg0 i :arg1 she :time ( before :op1 ( see-01 :arg0 i :arg1 she :time before ) ) ) ) ) ) ) ) )
contrast-01 :arg1 ( age-01 :arg1 ( man :quant num_0 :arg1-of ( age-01 :arg2 ( temporal-quantity temporal-quantity_num_0 :unit year ) ) ) :arg2 ( condition :arg1-of critical-02 ) ) :arg2 ( victim :quant num_1 :mod other :location ( condition :mod stabilize ) )
and :op1 house :op2 vehicle :quant several :mod also :location area
and :op1 ( strengthen-01 :arg0 he :arg1 ( presence :poss ( person :arg1-of black-05 ) ) :mod also ) :op2 ( latinskoameri?anek :arg0 he :arg1 ( sport :poss ( sport :mod this ) ) )
cause-01 :arg0 ( and :op1 ( compose-01 :arg1 ( team :arg0-of gymnast ) :arg2 ( athletes :mod female :quant ( only :op1 num_1 ) ) ) :op2 ( and :op1 ( compose-01 :arg1 ( team :arg0-of gymnasts ) :arg2 ( athletes :quant num_1 :mod female :mod only ) ) :op2 ( year :domain this :time ( year :mod last :time-of ( train :mod karolyiovÃ¡ ) ) ) ) ) :domain they
multi-sentence :snt1 ( thank-01 :arg0 i :arg1 you :arg2 ( and :op1 you :op2 simone :op3 aly :op4 laurie :op5 madison :op6 madison :op7 ( win-01 :arg0 you :arg2 ( and :op1 ( person :arg0-of ( have-rel-role-91 :arg2 power ) ) :op2 ( person :arg0-of ( win-01 :arg1 ( gold :mod olympic ) ) ) ) ) ) ) :snt2 ( and :op1 ( thank-01 :arg0 i :arg1 you :arg2 motivate ) :op2 ( thank-01 :arg0 i :arg1 you :arg2 motivate ) ) :op3 ( thank-01 :arg0 i :arg1 you :arg2 motivate ) :op4 ( thank-01 :arg0 i :arg1 you :arg2 motivate )
hope-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg2 minister ) ) :arg1 ( cease-01 :arg0 ( person :quant num_0 :arg1-of ( include-91 :arg2 ( person :quant num_1 :mod young :arg0-of ( attend-01 :arg1 elect-01 ) :arg0-of ( attend-01 :arg1 elect-01 ) ) ) :arg0-of ( have-org-role-91 :arg2 ( doctor :mod young ) ) :arg0-of ( have-org-role-91 :arg2 ( doctor :mod young ) ) :arg0-of ( have-org-role-91 :arg2 ( doctor :mod young ) ) :arg0-of ( have-org-role-91 :arg2 ( doctor :mod young ) ) :arg0-of ( have-org-role-91 :arg2 ( doctor :mod young ) ) :arg0-of ( have-org-role-91 :arg2 ( doctor :mod young ) ) :arg0-of ( have-org-role-91 :arg2 doctor ) ) )
and :op2 ( open-01 :arg1 ( option :mod this ) :time still :concession ( promise-01 :arg0 ( person :arg0-of ( have-rel-role-91 :arg2 dd2 ) ) :time ( month :mod last ) ) )
pleased :arg0 we :arg1 ( possible-01 :arg1 ( extend-01 :arg0 we :arg1 ( option :purpose treat-03 :arg2-of ( available-02 :arg1 ( person :quant many :arg0-of ( benefit-01 :arg1 ( person :arg0-of ( benefit-01 :arg1 person :arg1-of possible-01 ) ) :arg1-of possible-01 ) ) ) ) :mod preliminary ) :prep-in ( recommend-01 :arg1 ( extend-01 :arg0 we :arg1 ( option :mod treat-03 ) :mod preliminary ) ) )
express-01 :arg0 he :arg1 ( concern-01 :arg0 ( defraud-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg2 correspondent ) ) :arg1 ( claim-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg1 ( community :mod religious-group_name_0 ) :arg2 ( member :mod ( old :degree more ) ) ) ) :arg1 ( vote-01 :arg0 person :arg1 ( candidate :arg1-of ( choose-01 :arg0 person ) ) ) ) ) :mod particular )
criticize-01 :arg0 it :arg1 ( check-01 :name ( name :op1 box :op2 box :op3 box :op4 box :op5 box :op6 box :op7 box ) ) :arg2 ( department :mod register-02 :part-of ( person :arg0-of vote-01 ) :location town ) :mod also
have-03 :arg0 ( and :op1 ( star :arg1-of hope-01 ) :op2 ( series :name ( name :op1 dexter :op2 series :op3 series :op4 series :op5 series :op6 series :op7 series ) ) ) :arg1 ( and :op1 face :op2 ( shape :mod eye ) :arg1-of resemble-01 :mod really )
write-01 :arg0 ( person_name_0 :arg0-of ( use-01 :mod another ) ) :arg1 ( ' :mod ( wow :mode expressive ) )
contrast-01 :arg1 ( possible-01 :arg1 ( seem-01 :arg1 ( creepy :arg1 ( idea :topic ( button :mod lick ) :arg0-of ( flusher :arg1 ( thousands :arg1 ( person :mod other ) ) ) ) ) :degree utter ) ) :arg2 ( harmful-02 :arg0 ( sink :mod kitchen ) :arg1 continent_name_2 :degree ( more :mod actual ) )
famous :arg1 ( and :op1 ( test-01 :arg1 ( resilience :poss ( gut :part-of she ) :location ( around :op1 world ) ) ) :op2 ( eat-01 :arg1 strange ) :op3 ( amaze-01 :arg1 thing ) :op4 ( amaze-01 :arg1 thing ) )
confirm-01 :arg0 he :arg1 ( reputation :poss he :location film ) :manner certain
and :op1 ( easy-05 :arg1 ( thing :quant some ) :arg1-of natural-03 ) :op2 ( get-03 :arg1 other :arg2 ( hard-02 :arg1 thing :degree pretty ) )
glad-02 :arg0 ( thing :arg1-of dirty-02 :arg1-of ( make-01 :arg0 they ) :quant some ) :arg1 i
say-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg1 ( publication_name_0 :poss ( house-01 :mod country_name_1 ) ) :arg3 ( manage-01 :arg1 person ) ) ) :arg1 ( fail-01 :arg1 family :arg2 ( cooperate-01 :arg0 family :arg1 ( authority :arg1-of local-02 ) ) )
say-01 :arg0 ( and :op1 ( person :arg0-of ( have-org-role-91 :arg1 police :arg2 denovu ) ) :op2 ( person :arg0-of ( have-org-role-91 :arg1 police ) ) ) :arg1 ( message-01 :arg0 ( person :mod other :arg0-of ( continue-01 :arg1 ( violate-01 :arg0 person :arg1 rule ) ) ) :arg1-of clear-06 )
and :op1 ( be-located-at-91 :arg1 aircraft :arg2 ( fly-01 :arg1-of practice-01 ) ) :op2 ( ask-02 :arg1 ( identify-01 :arg0 pilot-01 :arg1 ( vessel :mod fishing ) :arg2 ( part :part-of train-01 ) ) )
kill-01 :arg1 ( person :arg0-of ( join-01 :arg1 person ) :arg0-of ( join-01 :arg1 person ) )
say-01 :arg0 he :arg1 ( ' :arg1 ( didn :mod trumps ) :arg2 office :degree total )
contrast-01 :arg2 ( true :domain ( thing :arg2-of result-01 ) )
look-01 :mode imperative :arg0 we :arg1 it
multi-sentence :snt1 ( probable :domain ( ask-02 :arg0 i :arg1 ( stop-01 :arg0 camera :arg1 ( filming :arg0 camera ) :time while ) ) ) :snt2 ( and :op1 ( build-01 :arg0 i :arg1 ( close-10 :arg1 i :arg2 ( store :mod various :location ( store :mod this ) ) ) ) :op2 ( try-01 :arg0 i :arg1 ( see-01 :arg0 i :arg1 ( and :op1 ( age :poss they ) :op2 ( mood :mod emotional ) ) ) ) )
and :op1 ( be-temporally-at-91 :arg1 num_0 :arg2 ( before :op1 now :quant ( multiple :op1 ( temporal-quantity temporal-quantity_num_0 :unit year ) ) ) ) :op2 ( over :domain brno :time now )
contrast-01 :arg1 ( have-03 :arg0 ( person :arg0-of ( have-org-role-91 :arg2 ( king :mod championships ) ) ) :arg1 ( place :ord ( ordinal-entity ordinal-entity_num_0 ) :mod only ) :time ( year :mod last ) ) :arg2 ( become-01 :arg1 he :arg2 ( king :mod znaka?skÃ½m ) )
and :op1 ( sjÃ¶strÃ¶movÃ¡ :arg1 ( sjÃ¶strÃ¶movÃ¡ :ord ( ordinal-entity ordinal-entity_num_0 ) :arg0-of ( win-01 :arg1 ( race :quant ( between :op1 num_1 :op2 num_1 ) ) ) ) :location ( record :mod world ) ) :op2 ( win-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg2 rio ) ) :arg1 ( race :quant ( between :op1 num_1 :op2 num_1 ) ) :mod still )
contrast-01 :arg2 ( think-01 :arg0 i :arg1 ( prepare-02 :arg0 we :arg1 we :arg2 ( prepare-01 :arg0 we :arg1 ( good :degree most ) :arg1-of possible-01 ) ) )
inform-01 :arg0 ( and :op1 ( person :arg0-of ( have-org-role-91 :arg1 ( office :mod ( broadcast-01 :mod nation ) ) :arg2 secretary-general ) ) :op2 ( commission :mod telecommunication ) :op3 ( commission :mod telecommunication ) ) :arg1 ( fact :polarity - )
recommend-01 :arg1 ( appear-01 :arg1 ( sim :arg1-of special-02 :beneficiary foreign ) :time ( after :op1 now :quant ( up-to :op1 ( temporal-quantity temporal-quantity_num_0 :unit year ) ) ) ) :arg2 ( person :mod foreign )
contrast-01 :arg2 ( cause-01 :arg0 ( possible-01 :arg1 ( start-01 :arg0 ( person :arg0-of tour-01 :quant most ) :arg1 ( look-01 :arg0 person :arg1 ( sim :arg1-of local-02 ) :time ( stay-01 :arg1 person :location country_name_0 ) ) ) ) :arg1 ( differ-02 :arg1 ( price-01 :arg1-of ( compare-01 :arg2 ( rate :mod ( person :arg0-of ( operate-01 :arg1-of local-02 ) ) ) ) ) :arg2 ( rate :mod ( person :arg0-of ( operate-01 :arg1-of local-02 ) ) ) ) )
subject-01 :arg1 ( abuse-02 :arg1 system :mod any ) :arg2 ( punish-01 :mod undetermined )
suffice-01 :arg0 ( and :op1 ( spaces :arg1 conditions ) :op2 ( consult-01 :arg1 house ) ) :arg1 ( house :arg0-of ( disqualified :arg1 ( building :mod ( old :degree more ) ) :mod essential ) )
begin-01 :arg1 ( feel-02 :arg0 i :arg1 ( suffocating :arg1 i :time ( date-entity dayperiod_date-entity_0 ) ) )
interesting :domain ( mention-01 :arg0 you :arg1 ( negativity :mod just ) )
' :arg1 ( thing :mod such ) :arg2 ( thing :mod such ) :degree total
touch-01 :arg0 it :arg1 i :degree quite
perceive-01 :arg0 you :arg1 it :manner amr-unknown
and :op1 ( work-09 :arg1 it :arg2 ( relation-03 :arg0 it :mod main ) :time already ) :op2 ( simpler :arg1 it :arg2 ( way :direction ( between :op1 village ) ) )
start-01 :arg0 they :arg1 ( prepare-01 :arg0 they :arg1 ( ltd :name ( name :op1 shippansee :op2 shippansee ) :arg0-of ( use-01 :arg1 ( packages :mod transport-01 ) :arg2 ( between :op1 ( metropolises :mod world ) :op2 ( aircraft :mod especially ) :op3 ( aircraft :mod especially ) ) ) ) ) :li num_0
form-01 :arg0 this :arg1 battlefield
and :op2 ( be-located-at-91 :polarity - :arg2 there )
exemplify-01 :arg0 ( dry-02 :arg1 ( injure-01 :mod all :arg1-of ( threaten-01 :arg2 ( jump :arg1-of plan-01 ) ) ) ) :condition ( dry-02 :arg1 ( injuries :mod all ) )
and :op1 ( base-02 :arg1 he :arg2 ( thing :quant num_0 :arg1-of ( base-02 :arg2 num_0 ) ) :arg1-of regular-02 ) :op2 ( leave-11 :arg0 he :arg1 ( person :quant num_1 :arg1-of buy-01 ) :time always )
write-01 :arg0 ( person :arg0-of ( have-rel-role-91 :arg1 he :arg2 wife :time former ) :arg0-of ( have-rel-role-91 :arg1 he :arg2 wife :time former ) :arg0-of ( have-rel-role-91 :arg1 he :arg2 wife :time former ) :arg0-of ( have-rel-role-91 :arg1 he :arg2 wife :time former ) ) :arg1 ( diary :arg1 ( person :arg0-of ( depend-01 :polarity - ) :arg0-of ( depend-01 :polarity - ) ) )
and :op1 ( paper :arg1-of allow-01 ) :op2 ( filling :arg1 ( and :op1 ( filling :mod vegetable ) :op2 wraps ) )
and :op1 ( defeat-01 :arg1 ( country_name_0 :arg1-of ( include-91 :arg2 ( person :quant num_1 ) ) ) :arg3 ( score-entity :op1 num_0 :op2 num_1 ) :time ( before :op1 that :mod even ) ) :op2 ( climbed :arg0 ( person :mod country ) :arg1 ( africa :location south ) :manner tight :arg1-of ( cause-01 :arg0 ( differ-02 :arg1 ( boundary :quant num_2 ) ) ) )
contrast-01 :arg1 ( africans :arg0 ( person :arg0-of ( have-org-role-91 :arg2 head-of-state ) ) :arg1 ( half :ord ( ordinal-entity ordinal-entity_num_0 ) ) :purpose ( lead-01 :arg0 person ) ) :arg2 ( and :op1 ( break-01 :arg1 ( leg :part-of person :mod dazzling ) :path ( line :mod defensive ) :path ( line :mod defensive ) ) :op2 ( score-01 :arg1 person :arg2 ( half :ord ( ordinal-entity ordinal-entity_num_1 ) :location snow ) ) )
race-02 :arg0 ( and :op1 glover :op2 heather ) :time ( after :op1 now :quant ( temporal-quantity temporal-quantity_num_0 :unit year ) :mod only )
take-10 :arg0 ( find-out-03 :arg0 i :arg1 ( champion :domain i :mod olympic ) ) :arg1 it :duration ( about :op1 ( temporal-quantity temporal-quantity_num_0 :unit month ) )
and :op1 ( meet-03 :arg0 ( society :name ( name :op1 architecture :op2 / ) :location ( south :part-of country_name_0 ) ) :arg1 ( meet-03 :arg0 ( and :op1 ( person :arg0-of ( have-org-role-91 :arg2 ( schwartzmanem :mod arnold ) ) ) :op2 ( person :arg0-of ( have-org-role-91 :arg2 gee ) ) :op3 ( person :arg0-of ( have-org-role-91 :arg1 ( library :mod new ) :arg3 authors ) ) :op4 ( person :arg0-of ( have-org-role-91 :arg1 ( library :mod new ) :arg3 ( lead-02 :arg0 person ) ) ) :op5 ( person :arg0-of ( have-org-role-91 :arg1 ( library :mod new ) :arg3 ( lead-02 :arg0 person ) ) ) ) ) :arg1 ( history :poss ( art :poss country ) ) )
multi-sentence :snt1 ( instead-of-91 :arg2 ( let-01 :mode imperative :arg0 person :arg1 ( take-01 :arg0 person :arg1 they :arg3 free-03 ) ) ) :snt2 ( say-01 :arg0 i :arg1 ( r :mod taximafie :arg1-of ( taximafie :arg2 ( indictment :mod groundbreaking ) ) ) )
smuggle-01 :arg1 that
and :op1 ( study-01 :arg0 he :location ( academy :mod film :mod miroslav :location pÃ­sek ) ) :op2 ( subsequently :arg0 he :location ( university :mod bata :location zlÃ­n ) :time subsequent )
drive-02 :arg0 taxi :arg1 ( person :arg0-of tour-01 :mod foreign ) :arg2 ( place :arg1-of ( same-01 :arg2 ( place :arg1-of ( show-01 :arg0 ( or :op1 ( bridge :mod charles ) :op2 ( street :location pa?Ã­?skÃ¡ ) ) ) ) ) ) :mod still
yes :mod exact
lose-02 :arg1 ( fight-01 :ord ( ordinal-entity ordinal-entity_num_0 ) ) :arg2 ( kvitova :arg0 ( person :arg0-of ( succumb :arg1 ( surprise :mod portorikÃ¡nskÃ©mu ) :time ( after :op1 ( value-interval :op1 num_1 :op2 num_2 :op3 num_2 :op4 num_3 ) ) ) ) )
multi-sentence :snt1 ( kvitova :time ( after :op1 while ) ) :snt2 ( afÃ¡?ivÃ¡ :arg0 ( person :arg0-of ( have-rel-role-91 :arg1 he :arg2 uncle ) ) )
and :op1 ( dictators :arg1 ( nation :quant num_1 :mod great :mod great ) ) :op2 ( regimes :arg1 regime ) :op3 ( come-04 :arg1 regime :arg2 power ) :time ( date-entity century_date-entity_0 )
specific-02 :arg1 this :arg2 ( nation :mod this ) :arg1-of ( cause-01 :arg0 ( guilty-01 :arg1 we :arg2 ( nation :mod this ) :arg1-of resemble-01 ) )
and :op1 ( bankrupt-01 :arg1 ( economy :poss country_name_0 ) :arg1-of long-03 ) :op2 ( bankruptcy :arg1 ( economy :poss country ) :arg1-of long-03 :mod main )
parasites :mod dangerous :location ( smoked :mod albert )
appear-01 :arg1 symptom :duration ( temporal-quantity temporal-quantity_num_0 :unit week ) :time ( after :op1 ( eat-01 :arg0 symptom :arg1 ( fish :arg1-of ( infect-01 :arg2 heat-treated ) :mod inadequate ) ) )
hope-01 :arg0 they :arg1 ( meet-03 :arg0 they :arg1 ( person :arg0-of study-01 :time former ) :mod again )
and :op1 ( publish-01 :arg1 ( group :consist-of ( person :arg0-of ( broker-01 :arg1 building_name_0 ) ) :quant number ) ) :op2 ( allow-01 :arg0 drugs elimination museum :arg1 ( come-01 :arg1 person :arg4 ( hunt :arg0 person :arg1 ( person :quant some ) ) ) :mod still )
and :op1 ( criticize-01 :arg0 ( person_name_0 :arg0-of ( have-org-role-91 :arg2 zhuovÃ¡ ) ) :arg1 ( white :mod vast ) ) :op2 ( end-01 :arg1 ( and :op1 ( society :arg0-of lead-02 ) :op2 article :arg1-of complete-02 ) )
remain-01 :arg1 ( location_name_0 :mod ( large :degree ( most :ord ( ordinal-entity ordinal-entity_num_0 ) ) ) ) :arg3 ( control-01 :arg1 ( state :mod religious-group_name_0 ) )
and :op1 ( team :arg0-of ( qualify-02 :arg1 ( person :arg1-of ( qualify-02 :arg2 quarterfinals ) ) ) :mod both ) :op2 ( decide-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg1 ( team :consist-of ( team :quant num_0 ) ) ) ) :arg1 ( end-up-03 :arg1 group :arg2 ( place :ord ( ordinal-entity ordinal-entity_num_1 ) :ord ( ordinal-entity ordinal-entity_num_1 ) ) ) )
ahead :op1 ( railway :mod olympic ) :mod usual
and :op1 ( reflected :arg1 ( or :op1 he :op2 she ) :condition ( be-located-at-91 :arg1 they :arg2 ( weightless :mod state ) ) ) :op2 ( flies :arg1 or ) :op3 ( effortlessly :arg1 or :mod again :time then )
allow-01 :arg0 ( approach-02 :mod this ) :arg1 ( and :op1 ( push-01 :arg0 you :arg1 ( infringe-01 :arg1 ( thing :arg1-of state-01 :mod politics ) ) ) :op2 ( moderate-03 :arg1 thing :arg2 need-01 ) )
oplakali :arg0 ( person :arg1-of local-02 ) :arg1 it :arg2 ( lose-02 :arg1 ( city :location aboard ) :mod last )
say-01 :arg0 she :arg1 ( thing :arg1-of ( resemble-01 :arg2 ( thing :arg1-of ( resemble-01 :arg2 ( and :op1 coffee :op2 culture ) ) :domain i ) ) )
want-01 :arg0 ( person :arg1-of local-02 :arg0-of ( produce-01 :arg1 fruit ) :arg1-of local-02 ) :arg1 ( and :op1 ( into :arg1 person ) :op2 ( sell-01 :arg0 person :arg1 coffee ) )
and :op1 ( donate-01 :arg0 dropshipper :arg1 ( rate-entity-91 :arg1 ( monetary-quantity monetary-quantity_num_0 :unit dollar ) :arg2 ( volume-quantity volume-quantity_num_1 :unit gallon ) ) :arg4 charity ) :op2 ( donate-01 :arg0 dropshipper :arg1 ( rate-entity-91 :arg1 ( monetary-quantity monetary-quantity_num_2 :unit dollar :mod ( volume-quantity volume-quantity_num_1 :unit gallon ) ) :arg2 ( volume-quantity volume-quantity_num_1 :unit gallon ) ) :arg4 charity ) :op3 ( admit-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg2 ( secretary :mod state ) :time former ) ) :arg1 ( rate-entity-91 :arg1 ( monetary-quantity monetary-quantity_num_2 :unit dollar :arg1-of ( cost-01 :arg2 ( monetary-quantity monetary-quantity_num_2 :unit dollar ) ) ) :arg2 ( volume-quantity volume-quantity_num_1 :unit gallon ) :location ( tenure :poss person :location ( tenure :poss state ) ) ) )
instead-of-91 :arg1 ( offer-01 :arg0 ( person :mod country_name_0 ) :arg1 ( call-01 :arg0 person :arg1 country_name_1 :arg2 ( centre :arg1-of ( call-01 :arg2 name ) ) ) ) :arg1-of instead-of-91
cause-01 :arg0 ( meet-03 :arg0 ( person :arg0-of study-01 ) :arg1 ( demonstrate-01 :arg0 person :arg1 ( reform-01 :arg0 ( government-organization :arg0-of govern-01 ) :arg1 ( system :mod educate-01 :arg1-of public-02 ) ) ) :time ( meet-03 :arg0 ( person :arg0-of study-01 ) ) ) :arg1 ( and :op1 ( person :arg0-of study-01 ) :op2 ( person :arg0-of ( have-org-role-91 :arg1 police ) ) :location ( paulo :mod san ) )
possible-01 :arg1 ( see-01 :arg0 ( person :arg0-of ( participate-01 :arg1 demonstrate-01 ) :quant some :arg1-of ( include-91 :arg2 ( person :arg0-of ( participate-01 :arg1 demonstrate-01 ) ) ) ) :arg1 ( thing :manner-of ( sprayed :arg0 person :arg1 ( wall :arg1 wall ) :arg2 ( person :arg0-of ( have-org-role-91 :arg2 ( president :mod temporary ) ) ) ) ) )
say-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg1 country_name_0 :arg2 ( ambassador :location country_name_1 ) ) ) :arg1 ( rise-01 :arg1 ( turnover :mod levana ) :arg2 ( percentage-entity percentage-entity_num_0 ) :time ( after :op1 ( abolition :arg1 ( thing :arg2-of ( sanction-02 :arg1 ( and :op1 moscow :op2 tehran ) ) ) ) ) )
appear-01 :arg1 hindes :time just
state-01 :arg0 i :arg1 ( contract-02 :arg1 treaty :arg1-of ( call-01 :manner so ) :arg1-of ( enter-01 :arg0 ( force :arg1-of ( enter-01 :arg0 ( person :quant num_0 ) ) ) ) )
multi-sentence :snt1 ( follow-01 :arg1 ( discover-01 :arg1 ( page :arg0-of ( cover-01 :arg1 ( page :arg2-of cover-01 ) ) ) ) :arg2 ( or :op1 ( -lrb- :mod bizarre ) :op2 ( sequel :mod simple ) ) :beneficiary ( government-organization :arg0-of ( administrate-01 :arg1 country_name_0 ) ) ) :snt2 ( stage-01 :arg0 they :arg1 video :arg1-of ( cause-01 :arg0 ( and :op1 ( family :mod whole :arg0-of ( have-org-role-91 :arg1 ( family :mod whole ) :arg2 member ) ) :op2 ( person :arg0-of ( have-rel-role-91 :arg1 kardashian-jenner :arg2 uncle ) ) :op3 ( person :arg0-of ( have-rel-role-91 :arg1 person :arg2 uncle ) ) :op4 ( person :arg0-of ( have-rel-role-91 :arg1 person :arg2 uncle ) ) :op5 ( person :arg0-of ( have-rel-role-91 :arg1 person :arg2 uncle ) ) :op6 ( person :arg0-of ( have-rel-role-91 :arg1 person :arg2 uncle ) ) :op7 ( person :arg0-of ( have-rel-role-91 :arg1 person :arg2 uncle ) ) ) ) )
cause-01 :arg0 ( look-01 :arg0 we :arg1 ( era :mod september :quant ( number :mod september ) ) ) :arg1 ( enter-01 :arg0 we :arg1 ( era :mod new ) :mod certain )
and :op1 ( seymorovÃ¡ :arg0 ( secret :name ( name :op1 stephanie ) :mod original :location ( station_name_0 :arg0-of ( have-org-role-91 :arg2 june ) ) ) :arg1 ( and :op1 jenner :op2 hadidovou ) ) :op2 ( dubbed :arg0 secret :arg1 ( '' :mod time-hookers ) ) :op3 ( dubbed :arg0 and :arg1 time-hookers )
flared :arg1 ( thing :arg1-of feel-01 :mod this ) :arg2 ( news :topic ( appear-01 :arg1 ( vogue :arg1 vogue ) ) ) :mod again
supermodel :arg0 he :arg1 word :mod truest
prepare-02 :arg1 ( service :mod community :arg1-of legal-02 :arg1-of ( tense :time already :degree so ) ) :arg2 ( cut-02 :arg1 service :degree further )
action :topic ( campaign-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg2 member ) ) :arg1-of allege-01 ) :time ( after :op1 ( point-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg1 staff :arg2 member ) ) :arg1 weapon :arg1-of allege-01 ) )
and :op1 ( obligate-01 :polarity - :arg1 ( weapon :mod country_name_0 ) :arg2 ( cause-01 :arg0 weapon :arg1 ( damage-01 :arg1 weapon ) ) ) :op2 ( say-01 :arg0 weapon :arg1 apply-01 )
say-01 :arg1 ( and :op1 ( experience-01 :polarity - :arg0 person :arg1 person ) :op2 ( want-01 :arg0 we :arg1 ( solve-01 :arg0 we :arg1 ( problem :mod this ) ) ) ) :arg2 ( person :arg0-of ( have-org-role-91 :arg2 ( minister :mod facebook ) ) ) :medium ( statement :mod email )
lay :arg0 victim :arg1 highway :time ( middle :op1 night )
multi-sentence :snt1 ( contrast-01 :arg1 ( hear-01 :arg1 ( person :arg0-of drive-01 :quant several ) :time already ) :arg2 ( hear-01 :arg0 police :arg1 ( and :op1 ( person :arg0-of drive-01 :mod this ) :op2 ( person :mod other :arg0-of ( witness-01 :arg1 accident ) :arg0-of ( witness-01 :arg1 accident ) ) ) ) ) :snt2 ( and :op1 ( call-02 :arg0 police :arg1 ( person :arg0-of drive-01 :mod this ) ) :op2 ( person :mod other :arg0-of ( witness-01 :arg1 accident ) :arg0-of ( witness-01 :arg1 accident ) :quant all ) )
multi-sentence :snt1 ( bene :mode interrogative ) :snt2 ( and :op1 ( invite-01 :mode imperative :arg0 you :arg1 ( cooperate-01 :arg0 ( and :op1 ( kubicek :name ( name :op1 ji?Ã­ ) ) :op2 ( jirÃ¡nek :name ( name :op1 artists ) ) ) ) :arg2 ( cooperate-01 :arg2 ( and :op1 ji?Ã­ :op2 artists ) ) ) :op2 ( create-01 :arg0 they :arg1 film :manner together ) )
popular-02 :arg1 ( drink :quant ( multiple :op1 num_0 ) ) :arg2 ( top :quant num_1 ) :arg1-of general-02 :arg1-of general-02
say-01 :arg0 ( person :arg0-of ( lead-02 :arg1 party ) ) :arg1 ( contrast-01 :arg1 ( strike-01 :arg1 ( strike-01 :arg1-of ( cause-01 :arg0 ( wage :beneficiary ( person :arg0-of ( work-01 :arg1 oil ) :location ( north :part-of north ) ) ) ) ) ) :arg2 ( meet-01 :arg0 ( party :quant all ) :arg1 ( round-05 :arg1 negotiate-01 :mod new ) ) )
multi-sentence :snt1 ( pressure-01 :arg1 ( company :mod energy ) :arg1-of ( cause-01 :arg0 ( price-01 :arg1 ( oil :arg1-of low-04 ) :arg2 ( monetary-quantity :arg2-of ( price-01 :arg1 oil ) :arg1-of low-04 ) ) ) ) :snt2 ( decide-01 :arg0 ( person :mod country_name_0 ) :arg1 ( leave-15 :arg0 person :arg1 ( union-02 :arg1 continent_name_1 ) ) )
say-01 :arg0 ( thing :arg1-of state-01 ) :arg1 ( need-01 :arg0 we :arg1 ( economy :arg0-of ( work-09 :arg1 ( thing :arg1-of state-01 ) ) :mod ( only :polarity - ) ) :location ( across :op1 country ) )
multi-sentence :snt1 ( concern-01 :arg0 ( like-02 :arg0 i :arg1 ( work-01 :arg0 i :arg1-of ( like-02 :arg0 i :purpose ( work-01 :arg0 i ) ) ) :arg1-of ( like-02 :arg0 i :arg1-of ( like-02 :arg0 i :arg1-of ( like-02 :arg0 i :arg1-of ( like-02 :arg0 i ) ) ) ) ) :arg1 ( hospital :mod only :arg1-of ( be-located-at-91 :arg2 ( hospital :arg1-of empty-02 ) ) ) :time now ) :snt2 ( possible-01 :arg1 ( possible-01 :arg1 ( make-01 :arg1 room :location ( another :location-of ( like-02 :arg0 i :arg1 work-01 ) ) ) ) )
multi-sentence :snt1 ( invest-01 :mode interrogative :arg0 ( person :arg0-of ( plan-01 :arg1 vehicle ) ) :arg2 ( invest-01 :arg0 person :arg2 ( rate-entity-91 :arg1 ( up-to :op1 ( up-to :op1 ( up-to :op1 ( between :op1 ( temporal-quantity temporal-quantity_num_0 :unit hour ) :op2 ( temporal-quantity temporal-quantity_num_1 :unit hour ) ) ) ) :arg2 ( temporal-quantity temporal-quantity_num_1 :unit hour ) ) ) ) ) :snt2 ( possible-01 :arg1 ( exemplify-01 :arg0 ( purchase-01 :arg0 carrier :arg1 ( up-to :op1 ( between :op1 ( temporal-quantity temporal-quantity_num_2 :unit hour ) :op2 ( temporal-quantity temporal-quantity_num_1 :unit hour ) ) ) ) ) :op3 ( contract-02 :arg1 carrier :arg2 ( purchase-01 :arg1 ( unit :mod electric ) :purpose ( train :mod ( fast :degree more ) :location ( along :op1 route ) ) ) ) )
and :op1 ( win-01 :arg0 ( law :mod new ) ) :op2 ( help-01 :arg0 law :degree total )
point-out-02 :arg0 critic :arg1 ( remain-01 :arg1 ( rule :purpose ( combat-01 :arg1 ( and :op1 ( law :polarity - ) :op2 ( transfer-01 :arg1-of easy-05 ) ) ) ) )
multi-sentence :snt1 ( and :op1 ( case :mod back ) :op2 ( cost-01 :arg2 ( more-than :op1 more ) ) :mod back ) :snt2 ( place :mod other )
and :op1 ( high-02 :arg1 ( crop :consist-of poppy ) :arg2 ( product-of :op1 num_0 :op2 ( percentage-entity percentage-entity_num_0 ) ) :time ( year :mod this ) ) :op2 ( and :op1 ( high-02 :arg1 crop :arg2 ( percentage-entity percentage-entity_num_0 ) :time ( year :mod last ) ) :op2 ( apos :arg1 crop :time ( date-entity decade_date-entity_1 ) ) )
have-concession-91 :arg1 ( signal-07 :arg1 ( rate-entity-91 :arg1 ( thing :arg1-of incinerate-01 :arg1-of ( low-04 :degree more ) ) :arg2 ( rate-entity-91 :arg1 ( mass-quantity mass-quantity_num_0 :unit ton ) :arg2 ( mass-quantity mass-quantity_num_1 :unit ton ) ) ) )
contrast-01 :arg1 ( return-01 :arg1 hektarovÃ½ ) :arg2 ( about :op1 ( percentage-entity percentage-entity_num_0 ) :domain it )
kill-01 :arg0 ( person :mod religious-group_name_0 ) :arg1 ( and :op1 ( defend-01 :manner consistent ) :op2 ( person :arg0-of ( have-rel-role-91 :arg2 doctor ) ) )
have-03 :arg0 ( case-03 :mod polio ) :arg1 ( case :mod polio ) :mod again
tell-01 :arg0 ( person_name_0 :arg0-of ( have-org-role-91 :arg1 ( zaffran :mod polio ) :arg2 director ) ) :arg1 ( start-01 :arg1 ( vaccination :location nigeria ) :time ( week :mod next ) ) :arg2 ( person :arg0-of ( have-org-role-91 :arg2 director ) )
expose-01 :arg1 ( person :quant all :arg0-of ( strike-02 :arg1-of force-01 ) ) :arg2 ( violence :mod physical :mod severe ) :time ( be-located-at-91 :arg1 person :arg2 vatican )
say-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg2 pope ) ) :arg1 ( and :op1 pope :op2 ( person :arg0-of ( have-org-role-91 :arg2 pope ) ) :op3 ( person :arg0-of ( have-org-role-91 :arg2 pope ) ) :op4 ( person :arg0-of ( have-org-role-91 :arg2 spokesman ) ) :op5 ( person :arg0-of ( have-org-role-91 :arg2 spokesman ) ) ) :purpose ( and :op1 ( attract-01 :arg0 you :arg1 ( attend-02 :arg1 ( traffic-01 :arg1 human ) ) ) :op2 ( strengthen-01 :arg0 you :arg1 ( fight-01 :arg1 he ) ) )
call-03 :arg0 ( person :mod country_name_0 ) :arg1 ( fate :poss person ) :arg2 ( fate :poss society ) :arg1-of frequent-02
foundation :domain ( foundation :mod religious-group_name_0 :mod country_name_1 :mod new ) :arg1-of key-02 :arg0-of ( ensure-01 :arg1 ( revive-01 :arg1 ( goal :mod this ) ) )
cause-01 :arg0 ( mention-01 :arg0 i :arg1 ( thing :arg0-of ( cause-01 :arg1 crisis ) :mod real ) ) :arg1 ( thing :ord ( ordinal-entity ordinal-entity_num_0 ) :arg1-of ( mention-01 :medium ( speech :poss i ) ) :domain ( aircraft :arg0-of fight-01 :mod country_name_0 :arg0-of fight-01 :location ( border-01 :arg1 country_name_1 :arg2 country ) ) )
and :op1 ( italian :arg1 ( and :op1 italian :op2 apos ) :time ( date-entity decade_date-entity_0 ) :ord ( ordinal-entity ordinal-entity_num_0 ) ) :op2 ( achieve-01 :arg0 jockey :arg1 ( outcome :mod this ) :location ( race :mod flat ) )
and :op1 ( ask-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg1 ( station :medium television :poss country_name_0 ) :arg2 putin ) ) :arg1 ( ask-02 :arg0 person :arg1 ( release-01 :arg0 person :arg1 post ) :arg2 person ) ) :op2 ( recommend-01 :arg0 person :arg1 ( replace-01 :arg0 person :arg1 person :arg2 ( replace-01 :arg0 person :arg1 person ) :mod just ) )
and :op1 he :op2 apos :op3 apos :op4 ll
gibson :arg0 ( person :arg0-of ( play-01 :arg1 ( agent :arg1-of special-02 ) ) :arg0-of ( have-org-role-91 :arg2 ( agent :mod general ) ) ) :time ( before :op1 ( announce-01 :arg1 ( fire-01 :arg0 he ) ) )
have-concession-91 :arg1 ( complete-01 :arg1 ( and :op1 ( size :poss viaduct ) :op2 ( platform :poss bridge ) ) ) :arg2 ( complete-01 :arg1 ( and :op1 ( size :poss viaduct ) :op2 ( platform :poss bridge ) ) ) :concession ( complete-01 :arg1 ( and :op1 ( size :poss viaduct ) :op2 ( weight :poss bridge ) ) )
cause-01 :arg0 ( total-01 :arg1 ( concrete :arg1-of ( include-91 :arg2 ( area :mod total :part-of bridge ) :arg3 ( percentage-entity :quant ( more-than :op1 num_0 ) ) ) ) :arg2 ( area :arg2-of total-01 :part-of bridge ) :time now ) :arg1 ( cast :arg1 ( platform :mod whole ) :arg2 ( country_name_1 :location bridge ) )
thing :arg2-of ( tip-05 :arg1 engineer-01 ) :domain ( closure :mod this ) :topic ( project :mod amazing :mod this )
contrast-01 :arg2 ( and :op1 ( benefit-01 :arg0 benefit-01 :arg1 benefit-01 ) :op2 ( end-01 :arg1 benefit-01 :degree total ) )
multi-sentence :snt1 ( cause-01 :arg1 ( pokrÃ½vÃ¡te :arg0 ( person :quant num_0 :arg0-of ( have-rel-role-91 :arg2 dd2 ) ) :arg1 ( and :op1 ( air :mod air ) :op2 ( air :arg1-of fresh-04 ) ) ) ) :snt2 ( and :op2 ( fun :domain fun ) )
contrast-01 :arg1 ( possible-01 :arg1 ( monitor-01 :arg0 ( and :op1 ( phone :arg1-of smart-06 :example ( phone :arg1-of smart-06 ) ) :op2 ( phone :arg1-of smart-06 :example fitbit ) ) :arg1 ( activity-06 :arg0 we ) ) ) :arg2 ( give-01 :polarity - :mode imperative :arg0 you :arg1 ( reason :arg0-of ( cause-01 :arg1 ( do-02 :arg1 anything ) ) ) :arg2 we :time ( game :mod this ) )
-rrb- :arg0 ( bilesovÃ¡ :name ( name :op1 bilesovÃ¡ :op2 bilesovÃ¡ :op3 -lrb- ) ) :arg1 ( -rrb- :name ( name :op1 thursday :op2 -rrb- ) ) :medium thursday :time ( perform-01 :arg1 ( balance-01 :arg1 balance :location ( sport :arg1-of ( olympics :time summer ) :location ( sport :name ( name :op1 de :op2 de :op3 janeiro ) ) :time summer ) ) )
multi-sentence :snt1 ( -lrb- :arg0 ( and :op1 ( person :arg0-of ( have-org-role-91 :arg2 head-of-state ) ) :op2 ( person :arg0-of leave-11 ) :op3 ( person :arg0-of leave-11 ) :op4 ( person :arg0-of left ) :op5 ( person :arg0-of left ) ) :arg1 ( other :mod each ) :time ( after :op1 ( win-01 :arg0 person :arg1 ( and :op1 gold :op2 silver ) :location ( final :part-of ( vÃ­ceboje :mod female ) ) ) :time ( after :op1 ( win-01 :arg0 person :arg1 ( and :op1 gold :op2 silver ) :location ( final :part-of ( vÃ­ceboje :mod female ) ) ) ) ) ) :snt2 ( janeiro :arg0 ( and :op1 ( apos :time summer ) :op2 ( date-entity decade_date-entity_0 ) ) :location thursday )
toll :arg1 ( manipulate-01 :arg1 emotional ) :arg2 ( future :mod emotional ) :time ( choose :op1 ( future :mod certain ) )
multi-sentence :snt1 ( say-01 :arg0 police :arg1 ( shoot-02 :arg0 police :arg1 ( boy :mod six-year-old ) ) ) :snt2 ( shooting :ord ( ordinal-entity ordinal-entity_num_0 :range ( temporal-quantity temporal-quantity_num_0 :unit year ) ) :domain ( shoot-02 :arg1 ( boy :arg1-of ( age-01 :arg2 ( temporal-quantity temporal-quantity_num_1 :unit year ) ) ) :location city ) :time already )
report-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg2 ( station :arg0-of investigate-01 ) ) ) :arg1 ( probable :domain ( shootout :arg1 ( man :arg1-of arm-01 :quant number ) :mod probable ) )
and :op2 ( inspire-01 :arg0 ( and :op1 ( person :quant num_1 :arg1-of ( include-91 :arg2 ( person :quant num_1 :arg0-of ( have-org-role-91 :arg1 team ) ) ) ) :op2 ( person :arg0-of ( have-org-role-91 :arg1 ( team :name ( name :op1 simon ) ) ) ) :op3 ( person :arg0-of ( have-org-role-91 :arg1 ( team :name ( name :op1 gabby ) ) ) ) :op4 ( person :arg0-of ( have-org-role-91 :arg2 head-of-state ) ) :op5 ( person :arg0-of ( have-org-role-91 :arg2 head-of-state ) ) :op6 ( person :arg0-of ( have-org-role-91 :arg2 head-of-state ) ) :op6 ( person :arg0-of ( have-org-role-91 :arg2 head-of-state ) ) :op7 ( person :arg0-of ( have-org-role-91 :arg2 head-of-state ) ) :op7 ( person :mod color :quant ( many :degree so ) ) ) )
and :op1 ( practice-01 :arg0 ( club :mod this ) :arg1 ( and :op1 ( practice :quant all ) :op2 ( family :arg1-of ( have-org-role-91 :arg0 he :arg2 member ) ) ) ) :op2 ( commit-01 :arg1 family :arg1-of long-03 :mod essential )
say-01 :arg0 ( doctor :mod ( person :arg0-of ( have-org-role-91 :arg1 ( doctor :mod young ) :arg2 mccourtovÃ¡ ) ) ) :arg1 ( have-03 :arg0 ( doctor :mod young ) :arg1 ( concern-01 :arg0 ( contract-02 :arg1 ( and :op1 ( crisis :time current ) :op2 ( thing :arg0-of ( cause-01 :arg1 ( treat-03 :arg1 ( person :quant all :arg0-of ( have-org-role-91 :arg2 head-of-state ) ) ) :mod fair ) ) ) :arg1-of ( cause-01 :arg0 ( increase-01 :arg1 ( crisis :time current :mod all ) ) ) ) :mod serious ) ) :time ( night :mod last )
multi-sentence :snt1 ( and :op1 ( '' :arg1 it ) :op2 ( cool-04 :arg1 it ) :op3 ( look-02 :arg1 good ) :op4 ( look-02 :arg1 good ) :op5 ( look-02 :arg1 good ) ) :snt2 ( cause-01 :arg1 ( think-01 :arg0 i :arg1 ( and :op1 that :op2 ( apos :time ( date-entity decade_date-entity_0 ) ) ) ) )
think-01 :arg0 ( person_name_0 :arg0-of ( have-org-role-91 :arg2 senator ) ) :arg1 ( and :op1 ( turned :arg1 ( microphone :poss person ) :time ( end-01 :arg1 woman ) :time ( end-01 :arg1 woman ) ) :op2 ( start-01 :arg0 person :arg1 ( spouting :arg0 person :arg1 ( opine-01 :arg0 person ) ) :time ( date-entity decade_date-entity_0 ) ) )
multi-sentence :snt1 ( write-01 :arg0 person_name_0 :medium twitter ) :snt2 ( swimmer :mode interrogative ) :snt3 ( swimmer :mode interrogative :arg1 ( swimmer :source country_name_1 ) ) :snt3 ( up :mode interrogative )
regrets :arg0 it :arg1 ( speak-01 :polarity - :arg0 word :location air ) :manner honest :manner honest
and :op1 ( put-01 :arg0 she :arg1 ( size :poss she ) :arg2 down ) :op2 ( and :op1 ( take-out-11 :arg0 she :arg1 ( panties :poss she ) ) :op2 ( return-01 :arg1 she :arg4 ( on :op1 shelf ) :direction back ) )
say-01 :mode interrogative :arg0 amr-unknown :arg1 ( amr-unknown amr-unknown amr-unknown amr-unknown amr-unknown amr-unknown amr-unknown amr-unknown amr-unknown amr-unknown amr-unknown amr-unknown amr-unknown amr-unknown amr-unknown amr-unknown amr-unknown amr-unknown amr-unknown amr-unknown amr-unknown amr-unknown amr-unknown amr-unknown amr-unknown amr-unknown amr-unknown amr-unknown amr-unknown amr-unknown amr-unknown amr-unknown amr-unknown amr-unknown amr-unknown amr-unknown amr-unknown amr-unknown amr-unknown amr-unknown amr-unknown amr-unknown amr-unknown amr-unknown amr-unknown amr-unknown amr-unknown amr-unknown amr-unknown amr-unknown amr-unknown amr-unknown amr-unknown amr-unknown amr-unknown amr-unknown amr-unknown amr-unknown amr-unknown amr-unknown amr-unknown amr-unknown amr-unknown amr-unknown amr-unknown amr-unknown amr-unknown amr-unknown amr-unknown amr-unknown amr-unknown amr-unknown amr-unknown amr-unknown amr-unknown amr-unknown amr-unknown amr-unknown amr-unknown amr-unknown amr-unknown amr-unknown amr-unknown amr-unknown amr-unknown amr-unknown amr-unknown amr-unknown amr-unknown amr-unknown amr-unknown amr-unknown amr-unknown amr-unknown amr-unknown amr-unknown amr-unknown amr-unknown amr-unknown amr-unknown amr-unknown amr-unknown amr-unknown amr-unknown amr-unknown amr-unknown amr-unknown amr-unknown amr-unknown amr-unknown amr-unknown amr-unknown amr-unknown amr-unknown amr-unknown amr-unknown amr-unknown amr-unknown amr-unknown amr-unknown amr-unknown amr-unknown amr-unknown amr-unknown amr-unknown amr-unknown amr-unknown amr-unknown amr-unknown amr-unknown amr-unknown amr-unknown amr-unknown amr-unknown amr-unknown amr-unknown amr-unknown amr-unknown amr-unknown amr-unknown amr-unknown amr-unknown amr-unknown amr-unknown amr-unknown amr-unknown amr-unknown amr-unknown amr-unknown amr-unknown amr-unknown amr-unknown amr-unknown amr-unknown amr-unknown amr-unknown amr-unknown amr-unknown amr-unknown amr-unknown amr-unknown amr-unknown amr-unknown amr-unknown amr-unknown amr-unknown amr-unknown amr-unknown amr-unknown amr-unknown amr-unknown amr-unknown amr-unknown amr-unknown amr-unknown amr-unknown amr-unknown amr-unknown amr-unknown amr-unknown amr-unknown amr-unknown amr-unknown amr-unknown amr-unknown amr-unknown amr-unknown amr-unknown amr-unknown amr-unknown amr-unknown amr-unknown amr-unknown amr-unknown amr-unknown ) amr-unknown amr-unknown amr-unknown amr-unknown amr-unknown amr-unknown amr-unknown amr-unknown amr-unknown amr-unknown amr-unknown amr-unknown amr-unknown amr-unknown amr-unknown amr-unknown amr-unknown amr-unknown amr-unknown amr-unknown amr-unknown amr-unknown amr-unknown amr-unknown amr-unknown amr-unknown amr-unknown amr-unknown amr-unknown amr-unknown amr-unknown amr-unknown amr-unknown amr-unknown
cause-01 :arg0 ( thing :quant none :location ( mouth :part-of he ) ) :arg1 ( leave-15 :arg0 he :arg1 ( nothing :arg1-of ( bad-07 :degree more :compared-to ( taste :arg1-of bad-07 ) ) ) ) :arg2-of fortunate-01
make-01 :arg0 we :arg1 ( idea :arg1-of crazy-03 :quant lot :arg0-of ( end-01 :arg1 ( '' :arg1-of ( call-01 :arg0 we :arg2 '' ) ) ) )
phone-number-entity phone-number-entity_num_0
engulfed :arg0 ( person :arg0-of tour-01 :mod frightened ) :arg1 ( person :arg0-of tour-01 :mod frightened ) :time ( moment :time-of ( landed :arg1 ( jet :name ( name :op1 crowded ) :arg1-of low-04 ) :location above ) )
multi-sentence :snt1 ( amr-unknown
multi-sentence :snt1 ( say-01 :arg0 ( and :op1 ( person :arg0-of ( have-org-role-91 :arg2 head-of-state ) ) :op2 ( person :arg0-of ( have-org-role-91 :arg2 apos ) ) :op3 ( person :arg0-of ( want-01 :polarity - :arg1 ( enjoy-01 :arg0 person :arg1 ( originality :mod physical ) ) ) ) ) :arg1 ( person :arg0-of ( want-01 :arg1 ( enjoy-01 :arg0 person :arg1 ( originality :mod physical ) ) ) :time ( date-entity decade_date-entity_0 ) ) ) :snt2 ( contrast-01 :arg2 ( want-01 :arg0 amr-unknown :arg1 ( enjoy-01 :arg0 amr-unknown :arg1 ( originality :mod ( complain-01 :mod physical ) ) ) ) )
say-01 :arg0 he :arg1 ( '' :degree so ) :arg1-of ( say-01 :arg0 he )
notice-01 :arg0 he :arg1 ( and :op1 ( affect-01 :arg0 ( wave-04 :arg1 media ) :arg1 ( person :arg1-of ( affect-01 :arg0 ( wave-04 :arg1 media ) ) ) :mod new ) :op2 ( feel-01 :arg0 person :arg1 ( force-01 :arg1 person :arg2 ( buy-01 :arg0 person :arg1 ( record :mod gramophone :mod old :poss person ) ) ) ) ) :mod also
contrast-01 :arg1 ( look-02 :arg0 ( they :quant none ) :arg1 ( haunting :mod mental :mod mental ) :mod particular ) :arg2 ( hard-02 :arg1 ( guess-01 :arg0 they :time ( and :op1 you :op2 ( stand-01 :arg1 you :arg2 ( stand-01 :arg1 you :arg2 ( next-to :op1 someone ) :duration forever ) ) ) ) )
thing :arg2-of ( base-02 :arg1 ( collect-01 :arg1 record :arg1-of average-04 :mod any ) ) :domain ( and :op1 ( person_name_0 :arg1-of ( mean-01 :arg2 ( name :op1 adele :op2 adele :op3 mac :op4 mac :op5 mac :op6 mac :op7 mac ) ) ) )
multi-sentence :snt1 ( look-01 :arg0 nobody :arg1 it :arg1-of ( cause-01 :arg0 ( and :op1 ( be-located-at-91 :arg1 they :arg2 decoration :mod just ) :op2 ( high-02 :arg1 some :degree so :topic wall ) ) ) ) :snt2 ( and :op1 ( possible-01 :arg1 ( achieve :arg0 they ) ) :op2 ( achieve-01 :arg0 they :arg1 ( achieve-01 :arg0 they ) :degree total ) )
and :op1 ( help-01 :arg0 charity :arg1 ( and :op1 refugess :op2 l :op3 apos ) :arg2 charity ) :op2 ( estimate-01 :arg0 charity :arg1 ( number :quant-of refugee :location camp ) :time ( after :op1 ( rise-01 :arg1 ( rise-01 :mod steep ) :arg4 ( more-than :op1 num_0 ) :time ( before :op1 now :duration ( time :mod all ) ) ) ) )
and :op2 ( experience-01 :mode imperative :arg0 you :arg1 ( good :degree more :compared-to ( place :mod last ) ) :time ( date-entity decade_date-entity_0 ) )
look-02 :arg0 it :arg1 amr-unknown
look-up-05 :arg0 you :arg1 ( one :mod nahrÃ¡va?skÃ© ) :manner amr-unknown
receive-01 :arg0 ( baby :arg0-of ( have-rel-role-91 :arg1 baby :arg2 child ) ) :arg1 ( oh :ord ( ordinal-entity ordinal-entity_num_0 ) :part-of ( history :poss world ) )
be-temporally-at-91 :arg2 ( date-entity decade_date-entity_0 ) :ord ( ordinal-entity ordinal-entity_num_0 )
contrast-01 :arg2 ( and :op1 ( win-01 :arg0 i :location court ) :op2 ( know-01 :arg0 i :arg1 ( thing :arg0-of ( cause-01 :arg1 ( recommend-01 :arg1 ( answer-01 :arg0 i :arg1 ( thing :arg1-of question-01 :mod that ) :mod still ) ) ) ) ) )
play-11 :arg0 you :arg2 ( court :mod small ) :manner amr-unknown
cause-01 :arg0 ( play-01 :arg0 we :arg1 ( game :quant num_0 :mod last ) :location group ) :arg1 ( recommend-01 :arg1 ( shift-01 :arg1 scheme :time before ) )
contrast-01 :arg1 ( rule :mod new :domain ( apply-02 :arg1 ( rule :mod new ) :arg2 ( passport :mod email ) ) ) :arg2 ( decide-01 :arg0 ( person :mod country_name_0 ) :arg1 ( get-01 :arg0 person :arg1 ( sim :source ( operate-01 :arg1-of local-02 :quant ( multiple :op1 num_0 ) ) ) ) )
and :op1 amr-unknown :op2 apos :op3 ( live-01 :arg0 you :time ( before :op1 ( move-01 :arg0 you :arg2 location_name_0 ) ) )
cause-01 :arg0 amr-unknown :arg1 ( decide-01 :arg0 you :arg1 ( move-01 :arg0 you :arg2 country ) ) :time then
come-01 :arg1 it :arg4 i :mod ( negative :mod ( negative :degree so ) )
multi-sentence :snt1 ( possible-01 :arg1 ( have-polarity-91 :arg2 - :arg1 ( person :mod some ) ) ) :snt2 ( cause-01 :arg0 ( and :op1 it :op2 apos ) :arg1 ( much :polarity - :degree so :compared-to ( person :arg0-of tour-01 ) ) )
and :op1 ( win-01 :arg0 they ) :op2 ( apos :arg0 they ) :op3 ( let-01 :arg0 they :arg1 ( get-03 :arg1 anyone :arg2 ( close-10 :arg1 anyone :degree so ) ) :degree total )
or :op1 store :op2 food :mod even
tell-01 :arg0 he :arg1 ( go-02 :polarity - :arg0 i :arg4 province_name_1 ) :arg2 i
fear-01 :mode interrogative :arg0 you :arg1 ( something :arg1-of ( resemble-01 :arg2 that ) :arg1-of ( resemble-01 :arg2 that ) :arg1-of ( resemble-01 :arg2 that ) ) :location location_name_0 :mod also
contrast-01 :arg1 ( approach-02 :arg0 we :arg1-of differ-02 ) :arg2 ( respect-01 :arg0 we :arg1 ( other :mod each ) )
and :op1 ( didn :arg0 i :arg1 ( else :mod else ) ) :op2 ( feel-01 :arg0 i :arg1 ( good :degree so ) )
want-01 :arg0 they :arg1 ( compete-01 :arg0 they :manner airlines )
want-01 :arg0 no-one :arg1 ( find-01 :arg0 no-one :arg1 ( note :topic ( and :op1 ( obligate-01 :arg1 you :arg2 ( pick-01 :arg0 you :arg1 package :location branch ) ) :op2 ( day :time ( after :quant num_0 ) ) ) ) )
and :op1 ( app :arg0 i ) :op2 ( start-01 :arg0 i :time ( year :mod last ) ) :op3 ( start-01 :arg0 i :time ( year :mod this ) :arg1-of possible-01 )
have-concession-91 :arg1 ( and :op1 ( assume-02 :polarity - :arg0 i :arg1 ( liability :prep-under ( law :arg2-of criminal-03 ) ) ) :op2 ( responsible-03 :polarity - :arg0 package :arg1 ( and :op1 ( law :mod criminal-03 ) :op2 ( law :polarity - ) :op3 ( thing :arg1-of ( responsible-03 :arg0 i ) ) :op4 ( thing :arg1-of ( know-01 :arg0 i ) ) :manner ( law :polarity - ) ) ) ) :arg2 ( assume-02 :arg0 package :arg1 ( and :op1 ( law :mod criminal-03 ) :op2 ( law :polarity - ) ) )
contrast-01 :arg1 ( and :op1 we :op2 apos ) :arg2 ( strong-02 :arg1 ( look-01 :arg0 ( person :arg0-of invest-01 ) :arg1 ( person :arg0-of invest-01 ) :arg2 ( market :mod ( czech :polarity - ) ) ) :arg1-of ( cause-01 :arg0 ( and :op1 ( recommend-01 :arg1 ( conduct-01 :arg0 amr-unknown :arg1 ( market :mod ( czech :polarity - ) ) ) ) :op2 ( become-01 :arg1 amr-unknown :arg2 ( and :op1 ( go-back-19 :arg1 amr-unknown :arg2 ( product :mod globe ) ) :op2 ( become-01 :arg1 amr-unknown :arg2 ( thing :mod ( great :degree such ) :location ( market :example ( and :op1 airbnb :op2 uber ) ) ) ) ) ) ) ) )
cause-01 :polarity - :arg0 ( include-01 :arg1 ( possible-01 :arg1 ( use-01 :arg0 run-02 :arg1 ( colossus :mod martial ) ) ) :mod also ) :arg1 ( possible-01 :arg1 ( free-04 :arg1 movement-07 ) )
and :op1 they :op2 apos :op3 apos :op4 ll :op5 ll
exemplify-01 :arg0 ( possible-01 :arg1 ( and :op1 ( consult-01 :arg0 it :arg1 platform ) :op2 ( close-01 :arg0 it :arg1 platform ) :op3 ( close-01 :arg0 it :arg1 ( door :mod heavy ) ) ) ) :prep-in ( example :quant num_0 )
and :op1 ( be-from-91 :arg1 ( thing :quant num_0 :arg1-of ( include-91 :arg2 ( thing :quant num_0 ) ) ) :arg2 company ) :op2 ( firm :polarity - :mod yet :mod yet )
have-concession-91 :arg1 ( believe-01 :arg0 i :arg1 ( control-01 :arg0 ( person :arg0-of ( have-rel-role-91 :arg1 i :arg2 wife ) ) :arg1 ( mind-05 :arg0 person ) ) ) :arg2 ( possible-01 :arg1 ( and :op1 you :op2 apos ) )
and :op1 ( possible-01 :arg1 i ) :op2 ( apos :arg0 i :mod ( such :mod just ) ) :arg1-of possible-01
ask-01 :arg0 i :arg1 ( obligate-01 :arg1 he :arg2 ( say-01 :arg0 he :arg1 thing ) ) :arg2 he
and :op1 ( ; :arg0 i :arg1 ( guy :mod kind :arg0-of ( didn :arg1 i ) ) ) :op2 ( apos :arg0 i :arg1 ( guy :mod kind :arg0-of ( didn :arg1 i :degree total ) ) ) :op3 ( problem :polarity - :domain ( meet-02 :arg0 i :arg1 someone ) ) :op4 ( find-01 :mode imperative :arg0 you :arg1 woman :manner alone ) :op5 ( find-01 :arg0 i :arg1 woman :manner alone )
and :op1 ( have-03 :arg0 they :arg1 ( pilgrimages :mod traditional ) :time ( year :mod every ) ) :op2 ( move-01 :arg1 move-01 :arg2 ( about :op1 num_0 ) ) :time ( year :mod every )
write-01 :arg0 ( person :arg0-of ( have-rel-role-91 :arg1 he :arg2 wife :time former ) :arg0-of ( have-rel-role-91 :arg1 he :arg2 wife :time former ) :arg1-of ( identify-01 :polarity - ) ) :arg1 ( person :arg0-of ( depend-01 :polarity - ) :arg0-of ( depend-01 :polarity - ) :arg0-of ( depend-01 :polarity - ) )
and :op2 ( cause-01 :arg1 ( smells :arg0 ( bone :part-of ( and :op1 ( belly :mod pork ) :op2 ( supermarket :mod pork ) :op3 et-cetera ) ) :time summer ) )
suffice-01 :arg0 ( and :op1 ( prepare-02 :arg1 ( and :op1 ( material :mod raw :mod ( quality :mod good ) ) :op2 ( thing :arg2-of ( adopt-01 :arg1 ( move-02 :mod good :quant few ) ) ) ) ) :op2 ( thing :arg2-of ( adopt-01 :arg1 ( move-02 :mod good :quant few ) ) ) ) :arg1 ( and :op1 ( fun :domain prepare-02 ) :op2 ( food :arg1 food :mod really :mod really ) )
travel-01 :arg0 ( country_name_0 :mod great ) :direction ( way :arg1-of long-03 )
multi-sentence :snt1 ( hard-02 :mode interrogative :arg1 ( admire :arg1 it :degree absolute ) ) :snt2 ( approach-02 :mode interrogative :arg0 approach-02 )
take-10 :arg0 decide-01 :arg1 decide-01 :time ( before :op1 ( decide-01 :arg0 they :arg1 ( thing :arg1-of ( do-02 :arg0 they :time next ) ) ) )
multi-sentence :snt1 ( and :op1 it :op2 apos ) :snt2 ( that :arg0-of ( watch-01 :arg1 ( other :mod each ) ) :time ( date-entity decade_date-entity_0 ) :mod just )
pieced :mod whole
multi-sentence :snt1 ( tracked :arg0 i :arg1 ( exemplify-01 :arg0 ( and :op1 ( station :mod train :mod main :destination doesn ) :op2 ( apos :arg1 station ) ) ) ) :snt2 ( and :op1 ( doesn :arg0 ( person :arg0-of ( drive-01 :arg1 taxi ) ) :arg1 ( person :arg0-of ( drive-01 :arg1 taxi ) ) ) :op2 ( wait-01 :arg1 person :arg2 ( person :arg0-of ( drive-01 :arg1 taxi ) ) :arg1-of ( resemble-01 :arg2 ( person :arg0-of ( drive-01 :arg1 taxi ) ) ) ) )
and :op2 ( percentage :mod ( small :degree very ) :domain it )
and :op1 ( be-located-at-91 :arg1 ( location :mod this ) :frequency ( rate-entity-91 :arg3 ( temporal-quantity temporal-quantity_num_0 :unit day ) ) ) :op2 ( violate-01 :arg0 decree :arg1 decree :frequency ( rate-entity-91 :arg3 ( temporal-quantity temporal-quantity_num_1 :unit day ) ) )
wrong-02 :arg1 that :condition ( take-04 :arg0 i :arg1 it :arg2 ( accomplishment :domain that ) ) :arg1-of ( cause-01 :arg0 ( and :op1 ( goal :poss i :domain that ) :op2 ( be-02 :arg1 i :time always ) ) )
possible-01 :polarity - :arg1 ( satisfy-01 :arg1 that )
have-concession-91 :arg1 ( want-01 :arg0 they :arg1 ( thing :arg1-of ( want-01 :arg0 they :mod really ) ) :arg1-of ( clear-06 :degree very ) ) :arg2 ( hold-04 :arg0 ( and :op1 ( person :arg0-of ( have-org-role-91 :arg2 mayor ) ) :op2 ( person :arg0-of ( have-org-role-91 :arg2 mayor ) ) :op3 ( person :arg0-of ( have-org-role-91 :arg2 mayor ) ) :op4 ( person :arg0-of ( have-org-role-91 :arg2 mayor ) ) :op5 ( person :arg0-of ( have-org-role-91 :arg2 mayor ) ) :op6 ( person :arg0-of ( have-org-role-91 :arg2 mayor ) ) :op6 ( person :arg0-of ( have-org-role-91 :arg2 mayor ) ) :op6 ( person :arg0-of ( have-org-role-91 :arg2 mayor ) ) :op6 ( person :arg0-of ( have-org-role-91 :arg2 mayor ) ) :op7 ( person :arg0-of ( have-org-role-91 :arg2 mayor ) ) ) )
and :op2 ( surprise-01 :arg1 we :time ( after :op1 ( town :mod old :mod town ) ) ) :arg1-of ( cause-01 :arg0 ( and :op1 ( surprise-01 :arg1 ( person :arg1-of ( same-01 :arg2 ( thing :arg1-of aspire-01 ) ) ) :time ( date-entity decade_date-entity_0 ) ) :op2 ( apos :arg1 person ) ) )
have-condition-91 :arg1 ( obligate-01 :arg1 he :arg2 ( from :arg1 he :arg2 ( folds :poss he ) ) :concession ( even-if :op1 ( obligate-01 :arg1 he :arg2 ( put-01 :arg0 he :arg1 scalpel :arg2 ( down :op1 scalpel ) :frequency sometimes ) ) ) ) :arg2 he
inspection :arg1 they :manner ( inspect-01 :manner ( close :degree more ) ) :location ( columns :mod marble )
multi-sentence :snt1 ( want-01 :arg0 i :arg1 ( politician :arg1-of experience-01 :arg0-of ( experience-01 :arg1 ( job :mod difficult :mod this ) ) ) ) :snt2 ( say-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg1 ( commission :mod continent_name_0 ) :arg2 ( chief :mod vice ) ) ) :arg1 ( and :op1 ( example :mod ( good :degree more ) :topic ( and :op1 ( elite :arg1-of ( call-01 :manner so ) ) :op2 ( elite :mod continent_name_1 ) ) :mod ( good :degree more ) ) ) :op2 ( find-01 :arg0 we :arg1 ( difficult :domain ( negotiate-01 :arg0 ( condition :mod ( commission :mod continent_name_0 ) ) :mod main ) ) ) ) :snt3 ( leave-13 :arg0 ( leave-11 :arg0 ( condition :mod ( commission :mod continent_name_0 ) ) :arg1 ( britain :mod great :source priority ) ) )
federalist :domain ( barnier :mod continent_name_0 )
consider-01 :arg1 ( surprise-01 :arg1 ( person_name_0 :arg0-of ( represent-01 :time current ) :arg0-of ( represent-01 :time current ) :arg0-of ( represent-01 :arg1 ( government-organization :arg0-of ( administrate-01 :time current ) ) ) ) :degree quite )
multi-sentence :snt1 ( and :op1 kvitovÃ¡ :op2 deblistky ) :snt2 ( have-03 :arg0 ( person :mod country_name_0 ) :arg1 ( final :purpose ( play-11 :arg0 person ) ) )
and :op1 ( fight-01 :arg0 she :arg2 end-01 ) :op2 ( believe-01 :arg0 she :arg1 that :time ( game :ord ( ordinal-entity ordinal-entity_num_0 ) :poss they :mod top ) )
deal-01 :arg0 ( deal-01 :mod ( good :degree most ) :mod ( good :degree most ) ) :arg2 sedmiboje
and :op1 ( putinovskÃ©hu :arg1 ( and :op1 ( person :arg0-of ( have-org-role-91 :arg2 head-of-state ) ) :op2 ( person :arg0-of ( have-org-role-91 :arg2 head-of-state ) ) :op3 ( person :arg0-of ( have-org-role-91 :arg2 head-of-state ) ) :op4 ( person :arg0-of ( have-org-role-91 :arg2 head-of-state ) ) :op5 ( person :arg0-of ( have-org-role-91 :arg2 head-of-state ) ) :op6 ( person :arg0-of ( have-org-role-91 :arg2 head-of-state ) ) :op7 ( person :arg0-of ( have-org-role-91 :arg2 head-of-state ) ) ) )
rate-entity-91 :arg1 ( rate :mod ( inflation :arg1-of average-04 ) :arg1-of average-03 ) :arg2 ( rate-entity-91 :arg1 ( under :op1 ( between :op1 ( temporal-quantity temporal-quantity_num_0 :unit month ) :op2 ( temporal-quantity temporal-quantity_num_2 :unit month ) ) ) :arg2 ( temporal-quantity temporal-quantity_num_2 :unit month ) :arg1-of ( compare-01 :arg2 ( product-of :op1 num_0 :op2 num_1 ) :time ( before :op1 now :duration ( temporal-quantity temporal-quantity_num_2 :unit month ) ) ) :arg1-of ( compare-01 :arg2 ( product-of :op1 num_0 :op2 num_1 ) ) )
add-01 :arg0 he :arg1 ( possible-01 :arg1 ( and :op1 ( wasn :arg1 it ) :op2 ( possible-01 :polarity - :arg1 ( caught :arg1 it ) :degree total :prep-without ( risk-01 :arg2 ( catch-02 :arg1 they ) ) ) ) )
know-02 :polarity - :arg1 ( fate :mod kadizinÃ½ch )
multiple :op1 ( temporal-quantity temporal-quantity_num_0 :unit year ) :domain ( multiple :op1 ( temporal-quantity temporal-quantity_num_1 :unit year ) ) :location ( and :op1 ( city-district_name_2 :location region :mod region ) :op2 ( seat-01 :part-of argyll ) )
mistake :mode imperative :arg0 you :arg1 publish :time immediate
offer-01 :arg0 company :arg1 ( explain-01 :arg0 company ) :arg1-of ( cause-01 :arg0 ( and :op1 ( show-04 :arg1 ( character :mod ( url-entity :value animÃ© ) ) ) :op2 ( caricature :polarity - :arg1 thing ) ) )
go-01 :arg1 ( fail-01 :arg1 ( person :arg0-of lead-02 ) ) :arg2 ( top :part-of ( person :arg1-of organize-01 ) :mod all )
and :op1 ( i :arg0 i ) :op2 ( apos :polarity - :arg1 ( person :quant num_0 :arg1-of ( include-91 :arg2 ( person :arg0-of ( take-01 :arg1 ( wickets :poss person ) ) ) ) ) )
contrast-01 )
obligate-01 :arg1 i :arg2 ( admit-01 :arg0 i :arg1 ( contrast-01 :arg1 ( admit-01 :arg0 i :arg1 ( expert-01 :polarity - :arg1 i :arg2 ( expert-01 :arg1 i :arg2 ( expert-01 :arg1 i :arg2 ( expert-01 :arg1 i :arg2 ( expert-01 :arg1 i :arg2 ( expert-01 :polarity - :arg1 i :arg2 ( expert-01 :arg1 i :arg2 ( expert-01 :arg1 i :arg2 ( expert-01 :arg1 i :arg2 ( expert-01 :arg1 i :arg2 ( expert-01 :polarity - :arg1 i :arg2 ( expert-01 :arg1 i :arg2 ( expert-01 :arg1 i :arg2 ground ) :mod only ) ) ) ) ) ) ) ) ) ) ) ) ) ) )
multi-sentence :snt1 ( compete-01 :mode interrogative :arg0 you ) :snt2 ( athletes :source ( and :op1 ( country :quant num_0 ) :op2 ( man :quant num_1 ) :op3 ( woman :quant num_1 ) ) )
call-03 :arg0 ( person :arg0-of ( have-org-role-91 :arg1 organization_name_0 :arg2 ( commissioner :mod high-02 ) ) ) :arg1 ( investigate-01 :manner thorough ) :time now
work-01 :arg0 ( and :op1 ( service :mod military :mod country_name_0 ) :op2 ( service :mod intelligence :mod country_name_1 ) ) :manner close :purpose ( eliminate-01 :arg0 and :arg1 ( risk-01 :arg1 ( attack-01 :arg0 terrorist :location area ) :arg2 ( and :op1 ( eliminate-01 :arg1 ( risk-01 :arg0 terrorist :arg2 ( attack-01 :arg0 terrorist :location area ) ) ) :op2 ( receive-01 :arg0 ( country :quant ( few :degree very ) ) :arg1 ( help-01 :mod such ) :arg2 west ) ) ) )
multi-sentence :snt1 ( amhar :mode interrogative :quant many ) :snt2 ( and :op1 ( believe-01 :mode interrogative :arg0 you :arg1 ( dominate-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg1 ( tigraj :mod ethnic ) :arg2 member ) ) :arg1 country_name_0 ) ) :op2 ( believe-01 :arg0 i :arg1 ( dominate-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg1 ( tigraj :mod ethnic ) :arg2 member ) ) :arg1 country ) ) :manner wrong )
die-01 :arg1 ( person :arg0-of ( cause-01 :arg1 unrest ) ) :ord ( ordinal-entity ordinal-entity_num_0 )
find-out-03 :arg0 i :arg1 ( thing :arg1-of ( like-01 :arg0 i :arg1-of ( like-02 :arg0 i ) ) ) :arg1-of ( say-01 :arg0 she ) :arg1-of ( say-01 :arg0 she )
say-01 :arg0 he :arg1 ( and :op1 ( come-01 :arg1 ( and :op1 i :op2 ( person :arg0-of ( have-org-role-91 :arg2 apos ) ) :op3 ( person :arg0-of ( have-rel-role-91 :arg1 i :arg2 apos ) ) :op4 ( person :arg0-of ( have-rel-role-91 :arg1 i :arg2 apos ) ) :op5 ( person :arg0-of ( have-rel-role-91 :arg1 i :arg2 apos ) ) :op6 ( person :arg0-of ( have-rel-role-91 :arg1 i :arg2 bun ) ) :op6 ( person :arg0-of ( have-rel-role-91 :arg1 i :arg2 bun ) ) :op6 ( person :arg0-of ( have-rel-role-91 :arg1 i :arg2 bun ) ) :op7 ( person :arg0-of ( have-rel-role-91 :arg1 i :arg2 bun ) ) ) ) :location here :frequency ( rate-entity-91 :arg3 ( temporal-quantity temporal-quantity_num_0 :unit day ) ) )
and :op1 ( offer-01 :arg0 ( customer :quant num_0 :arg1-of ( include-91 :arg2 ( customer :mod new ) ) ) :arg1 ( thing :arg1-of ( offer-01 :arg0 customer ) ) ) :op2 ( say-01 :arg0 i :arg1 ( want-01 :arg0 he :arg1 ( find-01 :arg0 he :arg1 place :purpose ( exposed :arg0 he :arg1 she :time soon ) ) ) :op3 ( feel-01 :arg0 he :arg1 ( feel-01 :arg0 he :arg1 place ) :arg2 he :time soon ) )
phone-number-entity phone-number-entity_num_0
say-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg2 meatballs ) ) :arg1 ( '' :arg1 ( meatballs :mod '' ) :degree very )
multi-sentence :snt1 strange :snt2 ( recommend-01 :arg1 ( take-01 :arg0 you :arg1 ( or :op1 taste :op2 ( sense :mod ( common :mod even ) ) ) :location cooking ) )
probable :domain ( make-02 :arg0 ( roosevelt :arg0 ( person :arg0-of ( have-org-role-91 :arg2 president ) ) :arg1 ( set-02 :arg0 person :arg1 ( example :arg0-of ( exemplify-01 :arg1 ( stomach :arg0 person ) ) ) ) ) :arg2 ( person :arg0-of ( have-org-role-91 :arg2 president ) ) ) :mod probable
cite-01 :arg0 ( and :op1 ( businessman :source ( york :mod new ) ) :op2 ( businessman :source ( york :mod new ) ) ) :arg1 ( and :op1 ( businessman :mod ( department :mod treasury ) :mod country_name_0 ) :op2 ( audit-01 :arg0 department :arg1 ( thing :arg0-of ( cause-01 :arg1 ( refuse-01 :arg0 department :arg1 ( release-01 :arg0 department :arg1 ( returns :mod tax-01 ) ) ) ) ) ) )
and :op1 ( shines :arg1 ( elephant :arg1-of pass-03 ) :ord ( ordinal-entity ordinal-entity_num_0 ) ) :op2 ( run-01 :arg0 elephant :arg1 car ) :ord ( ordinal-entity ordinal-entity_num_1 )
leaned :arg0 ( person :arg0-of ( have-org-role-91 :arg2 ( director :mod country_name_0 ) ) ) :arg1 code :arg2 ( remove-01 :arg0 person :arg1 code :purpose ( request-01 :arg0 person :arg1 ( request-01 :arg0 person :arg1 ( request-01 :arg0 person :arg1 ( request-01 :arg0 person :arg1 ( request-01 :arg0 person :arg1 ( request-01 :arg0 person :arg1 ( request-01 :arg0 person :arg1 ( request-01 :arg0 person :arg1 ( request-01 :arg0 person :arg1 ( request-01 :arg0 person :arg1 ( request-01 :arg0 person :arg1 ( request-01 :arg0 person :arg1 ( request-01 :arg0 person :arg1 ( request-01 :arg0 person :arg1 ( request-01 :arg0 person :arg1 ( request-01 :arg0 person :arg1 ( request-01 :arg0 person :arg1 ( request-01 :arg0 person :arg1 ( request-01 :arg0 person :arg1 ( request-01 :arg0 person :arg1 ( request-01 :arg0 person :arg1 ( request-01 :arg0 person :arg1 ( request-01 :arg0 person :arg1 ( request-01 :arg0 person :arg1 ( request-01 :arg0 person :arg1 ( request-01 :arg0 person :arg1 ( request-01 :arg0 person :arg1 ( request-01 :arg0 person :arg1 ( request-01 :arg0 person :arg1 ( request-01 :arg0 person :arg1 '' ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) )
win-01 :arg0 ( and :op1 ( win-01 :time ( before :op1 now :quant ( between :op1 ( temporal-quantity temporal-quantity_num_0 :unit year ) :op2 ( temporal-quantity temporal-quantity_num_1 :unit year ) ) ) ) ) :arg2 ( win-01 :arg0 win-01 :arg1 ( fifth :poss ( drone :quant num_0 gold gold :mod gold :poss he ) ) )
contrast-01 :arg1 ( and :op1 ( hindes :arg1 ( person :arg0-of ( have-rel-role-91 :arg2 hoye ) ) :time ( before :op1 now :quant ( up-to :op1 ( temporal-quantity temporal-quantity_num_0 :unit year ) ) ) ) :op2 ( achieve-01 :arg0 person :arg1 ( record :mod olympic :location qualification ) ) ) :arg2 ( take-over-12 :arg0 leotard :arg1 ( round :ord ( ordinal-entity ordinal-entity_num_0 ) :part-of ( zealand :mod new ) ) )
multi-sentence :snt1 ( amr-unknown :li num_0 ) :snt2 ( say-01 :arg0 ( person_name_0 :arg1-of ( age-01 :arg2 ( temporal-quantity temporal-quantity_num_0 :unit year ) ) ) :arg1 ( and :op1 ( '' :arg1 it ) :op2 ( apos :arg1 it :time ( date-entity decade_date-entity_0 ) ) :op3 ( comparison :arg1 it :manner compare-01 ) ) )
say-01 :arg0 he :arg1 ( thing :arg1-of ( say-01 :arg0 he ) ) :beneficiary we :condition ( and :op1 ( wasn :arg1 it ) :op2 ( apos :arg1 it :degree total ) )
include-01 :arg1 ( or :op1 ( person :arg0-of campbell ) :op2 ( person :arg0-of campbell ) :op3 ( person :arg0-of kate ) :op4 ( person :arg0-of kate ) ) :arg2 ( woman :arg1-of ( appear-01 :time past ) )
sell-01 :arg0 he :arg1 ( lauder :mod estee )
lose-02 :arg0 ( person :arg0-of assist-01 :arg1-of legal-02 :mod this ) :arg1 ( person :arg1-of ( include-91 :arg2 ( person :arg0-of ( govern-01 :arg1 federal ) ) :arg3 ( percentage-entity :value num_0 ) ) :mod another ) :time ( year :mod next )
come-01 :arg1 action :time ( after :op1 ( cause-01 :arg0 ( say-01 :arg0 ( candidate :poss political-party_name_0 ) :arg1 ( possible-01 :arg1 ( act-02 :arg0 ( person :arg0-of ( have-org-role-91 :arg2 president ) ) :arg0-of ( cause-01 :arg1 ( possible-01 :arg1 ( act-02 :arg0 person :arg1-of ( cause-01 :arg0 ( amend-01 :arg1 ( and :op1 ( person :arg0-of own-01 ) :op2 ( person :arg0-of ( own-01 :arg1 weapon ) ) ) :arg1-of ( regulate-01 :time ( amend-01 :ord ( ordinal-entity ordinal-entity_num_0 ) ) ) ) ) ) ) ) ) ) ) ) ) :arg1 ( possible-01 :arg1 ( nominate-01 :arg0 person :arg1 ( person :arg0-of ( have-org-role-91 :arg3 judge-01 ) ) ) )
and :op2 ( do-02 :mode imperative :arg0 you :arg1 it :mod again :arg0-of ( cause-01 :arg1 ( create-01 :arg0 we :arg1 ( opportunity :beneficiary ( and :op1 ( person :arg1-of local-02 ) :op2 business ) :location ( publication_name_1 :mod heathrow ) ) ) ) )
and :op1 ( publish-01 :arg0 ( person :arg0-of ( use-01 :arg1 ( website :poss person ) ) ) :arg1 ( website :poss person ) :medium ( website :poss person :mod desktop ) ) :op2 ( publish-01 :arg0 person :arg1 ( website :poss person ) :arg1-of ( cause-01 :arg0 ( possible-01 :arg1 ( and :op1 ( update-01 :arg0 ( person :arg0-of use-01 ) :arg1 filter :location ( programme :poss person ) ) :op2 ( block-01 :arg0 person :arg1 ( advertising :location ( network :mod society ) ) :mod again ) ) ) ) ) :time ( after :op1 ( announce-01 :arg0 magazine_name_0 :arg1 ( block-01 :arg0 person :arg1 ( filter :location ( website :poss person :mod desktop ) ) ) ) )
fact :domain ( show-01 :arg0 ( network :mod social :mod ( large :degree most :compared-to world ) :mod ( large :degree most :compared-to world ) ) :arg1 ( show-01 :arg0 network :arg1 ( problem :topic ( block-01 :arg1 industry ) ) ) :mod just )
indicate-01 :arg0 ( state-01 :arg0 police ) :arg1 ( and :op1 ( utilize-01 :arg0 female :arg1 ( '' :mod desperate :mod desperate ) :location road ) :op2 ( run-01 :arg0 female :arg1 ( car :quant few ) ) )
clear-06 :arg1 ( and :op1 ( age-01 :arg1 victim :arg2 ( temporal-quantity temporal-quantity_num_0 :unit year ) ) :op2 ( hit-01 :arg0 ( car :quant several :arg2-of ( include-01 :arg1 truck ) ) :arg1 woman ) )
city :arg0-of harm-01
contrast-01 :arg2 ( rational :polarity - :domain ( person :mod country_name_0 :domain it ) )
multi-sentence :snt1 ( ah :mode interrogative ) :snt2 ( and :op1 ( say-01 :mode interrogative :arg0 i :arg1 ( rate-entity-91 :arg1 ( about :op1 ( monetary-quantity monetary-quantity_num_0 :unit pound ) ) :arg2 ( and :op1 ( more :quant ( about :op1 num_0 ) ) :op2 ( monetary-quantity monetary-quantity_num_1 :unit pound ) ) ) ) )
and :op1 ( heating :arg1 surface :arg2 surface ) :op2 ( create-01 :arg0 ( behave :arg1-of ( resemble-01 :arg2 umbrella ) ) :arg1 ( and :op1 umbrella :op2 ( surface :source ( heat :arg1-of excessive-02 ) ) ) )
publish-01 :arg1 ( thing :arg2-of ( result-01 :arg1 ( thing :arg2-of ( result-01 :arg1 ( model :topic climate :mod new ) ) ) ) ) :arg3 ( person :arg0-of research-01 ) :location ( letter :mod research-01 :mod ( url-entity :value geophysical ) )
meet-01 :polarity - :arg1 ( condition :mod this ) :time current
claim-01 :arg0 ( person :arg0-of ( lead-02 :arg1 party ) :mod top ) :arg1 ( punishable-02 :arg2 ( strike-01 :arg2 ( wage :mod oil :location ( north :part-of north ) ) ) ) :concession ( party :quant all :mod together :purpose negotiate-01 :mod together )
multi-sentence :snt1 ( hope-01 :arg0 we :arg1 that :manner ( compare-01 :arg0 we :arg1 ( thing :arg2-of ( result-01 :arg1 ( thing :arg2-of ( result-01 :arg1 ( thing :arg2-of ( result-01 :arg1 ( thing :arg2-of ( result-01 :arg1 ( thing :arg2-of ( result-01 :arg1 ( thing :arg2-of ( result-01 :arg1 ( thing :arg2-of ( result-01 :arg1 ( thing :arg2-of ( result-01 :arg1 ( thing :arg2-of ( result-01 :arg1 ( thing :arg2-of ( result-01 :arg1 ( thing :arg2-of ( result-01 :arg1 ( thing :arg2-of ( result-01 :arg1 ( thing :arg2-of ( result-01 :arg1 ( thing :arg2-of ( result-01 :arg1 ( thing :arg2-of ( result-01 :arg1 ( thing :arg2-of ( result-01 :arg1 ( thing :arg2-of ( result-01 :arg1 ( thing :arg2-of ( result-01 :arg1 ( thing :arg2-of ( result-01 :arg1 ( thing :arg2-of ( result-01 :arg1 ( thing :arg2-of ( result-01 :arg1 ( thing :arg2-of ( result-01 :arg1 ( thing :arg2-of ( result-01 :arg1 ( thing :arg2-of ( result-01 :arg1 ( thing :arg2-of ( result-01 :arg1 ( thing :arg2-of ( result-01 :arg1 ( thing :arg2-of ( result-01 :arg1 ( thing :arg2-of ( result-01 :arg1 ( thing :arg2-of ( result-01 :arg1 ( thing :arg2-of ( result-01 :arg1 ( thing :arg2-of ( result-01 :arg1 ( thing :arg2-of ( result-01 :arg1 ( thing :arg2-of ( result-01 :arg1 ( thing :arg2-of ( result-01 :arg1 ( thing :arg2-of ( result-01 :arg1 ( thing :arg2-of ( result-01 :arg1 ( system :mod ( system :mod solar ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) )
say-01 :arg0 she :arg1 ( contrast-01 :arg1 ( see-01 :arg0 we :arg1 ( star :mod ( massive :degree more ) ) :manner ( slow :degree more ) ) :arg2 ( see-01 :arg0 we :arg1 ( star :domain ( star :mod ( massive :degree more ) ) :arg1-of ( quick-02 :degree most :compared-to ( possible-01 :arg1 spinning ) ) ) ) ) :arg1-of ( say-01 :arg0 she ) :arg1-of ( say-01 :arg0 she )
describe-01 :arg0 ( and :op1 ( person :arg0-of ( have-rel-role-91 :arg1 she :arg2 colleagues ) ) :op2 ( person :arg0-of ( have-rel-role-91 :arg1 she :arg2 colleagues ) ) ) :arg1 ( analyze-01 :arg1 ( speed :poss ( rotation :quant num_0 ) ) :time ( late :degree most ) :arg1-of ( publish-01 :time soon :location ( journal :mod astronomical ) ) ) :manner detail-01
say-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg2 galicia ) ) :arg1 ( begin-01 :arg1 ( thrived :arg1 he :arg2 thrive :time recent ) :manner frank )
follow-01 :arg1 ( journal :mod online :poss newspaper ) :arg2 ( story :topic ( billboard :location ( south :part-of ( strait :mod south ) ) ) ) :arg1-of ( cause-01 :arg0 ( motorists :arg1 ( motorists :mod ( only :polarity - ) :arg0-of ( walk-01 :location trees ) ) :arg2 ( park :mod olympic :mod also ) ) :time now )
say-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg1 person_name_0 :arg2 ( spokeswoman :mod vice ) ) ) :arg1 ( and :op1 ( respond-01 :polarity - :arg0 company :arg1 ( call-03 :arg0 company :arg1 ( remove-01 :arg1 case-03 :arg1-of write-01 ) ) ) :op2 ( put-01 :arg1 case-03 :arg2 table :time ( then :op1 ( probable :domain case-03 ) ) ) )
include-91 :arg1 ( and :op1 ( company :arg2-of suspect-01 :mod that ) :op2 ( company :arg1-of ( fail-01 :arg2 ( contact-01 :arg0 company ) ) ) ) :arg2 commerz
and :op1 ( let-01 :arg0 ( person :mod civil :arg0-of serve-01 ) :arg1 ( send-01 :arg0 person :arg1 letter :arg2 ( company :mod horrendous :arg0-of ( billboard :arg1 ( house :poss person ) ) ) ) :time meanwhile ) :op2 ( base-02 :arg1 ( firm :mod new :location-of ( base-02 :arg1 ( firm :mod new ) :arg1-of report-01 ) ) :arg2 ( person :mod civil :arg0-of serve-01 ) ) :time meanwhile :time ( begin-01 :arg1 ( take-01 :arg0 person :arg1 ( interest-01 :arg1 ( advertising :mod leipzig ) ) ) )
contrast-01 :arg2 ( thing :arg1-of ( symbolize-01 :arg2 ( and :op1 rape-01 :op2 poppy ) :time ( year :mod this ) ) :arg1-of ( high-02 :degree more ) )
estimate-01 :arg1 ( percentage-entity percentage-entity_num_0 :arg3-of ( include-91 :arg2 ( commodity :mod ( important :degree most ) :beneficiary republic ) ) ) :arg2 ( percentage-entity percentage-entity_num_0 ) :time ( year :mod this ) :arg1-of estimate-01
say-01 :arg0 police
say-01 :arg0 ( thing :arg1-of ( say-01 :arg0 political-party_name_0 ) ) :arg1 ( reminiscent :arg1 ( plan :mod territory ) )
come-03 :arg1 ( toddlers :quant num_0 :arg1-of affect-01 ) :arg2 ( refugee :source ( and :op1 ( part :part-of ( liberated :mod new ) ) :op2 ( haram :mod new ) ) )
and :op1 ( want-01 :arg0 ( meet-03 :mod this ) :arg1 ( attend-02 :arg0 you :arg1 ( traffic-01 :arg1 human ) ) ) :op2 ( call-03 :arg0 you :arg1 ( intensification :arg1 ( fight-01 :arg2 he ) ) ) :prep-with ( meet-03 :mod this )
exemplify-01 :arg0 ( have-03 :arg0 he :arg1 ( swim-01 :arg0 he :arg2 ( refugee :mod country_name_0 :arg0-of ( arrive-01 :arg1 ( and :op1 ( refugee :mod country ) :op2 ( refugee :mod country ) ) :arg1-of ( cause-01 :arg0 ( petition-01 :arg0 he :arg1-of personal-02 ) ) ) ) ) ) :purpose exemplify-01
vote-01 :arg0 ( and :op1 doctor :op2 ( person :arg0-of study-01 :mod junior :location river_name_0 ) ) :arg1 ( reject-01 :arg0 and :arg1 ( agree-01 :arg0 and :arg1 ( agree-01 :arg0 and ) ) )
have-03 :arg0 ( thing :arg2-of ( sanction-02 :arg0 country_name_0 ) ) :arg1 ( thing :arg2-of ( sanction-02 :arg1 country_name_1 :arg1-of hard-02 ) ) :arg1-of ( cause-01 :arg0 ( notably :arg1 ( cancellation :mod charter :arg0-of ( carry-01 :arg1 ( person :mod country :quant several :mod country :arg0-of tour-01 ) :arg4 ( coast :mod turkey ) :time ( year :mod each ) ) ) ) :degree most )
and :op1 ( concern-01 :arg1 ( and :op1 ( company :arg0-of operate-01 ) :op2 ( company :mod charter ) ) :location here :arg1-of sure-02 ) :op2 ( relieved :arg1 ( and :op1 ( company :arg0-of operate-01 ) :op2 ( company :mod charter ) ) :time ( resume-01 :arg1 fly-01 ) :condition need-01 )
anger-01 :arg0 ( see-01 :arg1 ( thing :arg1-of ( respond-01 :arg2 coup ) ) :mod feeble ) :arg1 location_name_0
email-address-entity :value scotland :domain ( bank :mod royal :part-of country_name_0 )
say-01 :arg0 i :arg1 ( try-01 :arg0 we :arg1 ( aim-02 :arg0 we :arg2 ( scene :mod domestic ) :time no-longer ) ) :time now
contrast-01 :arg1 ( and :op1 ( stylish :arg1 he ) :op2 ( strong-02 :arg1 he ) ) :arg2 ( fiction :arg0 he :arg1 he :mod tactical :arg1-of ( except-01 :arg2 ( riders :mod other :location weigh in ) ) )
and :op1 ( gain-02 :arg0 ( person :arg0-of ( use-01 :arg1 pokÃ©mon ) ) :arg1 ( person :arg0-of use-01 :quant more :compared-to ( person :arg0-of use-01 ) ) :time ( after :op1 now :quant ( few :op1 ( temporal-quantity temporal-quantity_num_0 :unit day ) ) ) ) :op2 ( have-03 :arg0 ( person :arg0-of ( use-01 :arg1 twitter ) :quant ( almost :op1 many ) ) :arg1 person )
work-09 :arg1 it :manner amr-unknown
multi-sentence :snt1 ( and :op1 ( seek-01 :arg0 ( campaign-01 :arg1-of public-02 :quant many ) :arg1 ( find-01 :arg0 person :arg1 ( and :op1 ( person :arg0-of ( find-01 :arg1 ( person :quant num_0 ) ) ) :op2 ( person :arg0-of ( have-org-role-91 :arg2 '' ) ) :op3 ( person :arg0-of ( have-rel-role-91 :arg1 person :arg2 '' ) ) :op4 ( person :arg0-of ( have-rel-role-91 :arg1 person :arg2 '' ) ) :op5 ( person :arg0-of ( have-rel-role-91 :arg1 person :arg2 '' ) ) :op6 ( person :arg0-of ( have-rel-role-91 :arg1 person :arg2 '' ) ) :op6 ( person :arg0-of ( have-rel-role-91 :arg1 person :arg2 '' ) ) :op7 ( person :arg0-of ( have-rel-role-91 :arg1 person :arg2 '' ) ) :op7 ( person :arg0-of ( have-rel-role-91 :arg1 person :arg2 '' ) ) ) ) ) ) :snt2 ( cause-01 :arg0 ( focus-01 :arg0 ( message :quant most :arg1-of ( include-91 :arg2 message ) ) :arg2 ( person :arg0-of ( look-02 :arg1 ( good :degree total ) ) ) ) )
forget-01 :mode imperative :arg0 you :arg1 excitement
immune :arg1 ( biles :mod simone ) :arg2 ( this :mod all )
insist-01 :arg0 person_name_0 :arg1 ( look-01 :polarity - :arg0 she :arg1 she :time ever :time ( and :op1 ( journey :arg0 she :arg2 top :arg1-of long-03 ) :op2 ( true :polarity - :domain she :degree entire ) ) )
and :op1 ( sitting :arg0 he :arg1 ( or :op1 ( sit-01 :arg1 he :degree total ) :op2 ( crawls :arg0 he ) ) :time ( until :op1 ( age-01 :arg1 he :arg2 num_0 ) ) ) :op2 ( talks :arg0 he :arg1 ( talk-01 :mod total ) :mod still )
possible-01 :arg1 ( differ-02 :arg1 ( and :op1 symptom :op2 prognosis ) )
toll :arg1 ( bottle :mod emotional ) :arg2 ( buy-01 :arg1 ( future :mod certain ) )
report-01 :arg0 ( service :name ( name :op1 -lrb- :op2 -lrb- ) :mod ( weather :mod nation ) ) :arg1 ( and :op1 ( pouring :arg1 ( rivers :quant number :location ( southeast :part-of strait ) ) :manner precise ) :op2 ( threaten-01 :arg1 ( flooding :arg1-of wide-02 ) ) :time ( after :op1 ( downpours :mod extreme ) ) )
picking :arg0 ( person :arg0-of ( have-org-role-91 :arg2 rescuers ) ) :arg1 ( person :source ( water :mod torrential ) ) :arg2 ( and :op1 ( water :location amite ) :op2 ( wilkinson :location ( south west :mod mississippi ) ) ) :mod still
say-01 :arg0 ( person :arg0-of ( have-rel-role-91 :arg1 he :arg2 wife ) ) :arg1 ( level :arg1-of ( high-02 :degree most ) :domain this :arg1-of ( experience-01 :time ever :time ( before :op1 now :duration ( temporal-quantity temporal-quantity_num_0 :unit year ) ) ) )
say-01 :arg0 police :arg1 ( shoot-02 :arg1 ( boy :mod 6-year-old ) :time ( week :mod this ) )
mean-01 :arg1 that :arg2 something
have-concession-91 :arg1 ( open-01 :arg1 ( option :mod this ) :time still ) :arg2 ( pledge-01 :arg0 ( person :arg0-of ( have-rel-role-91 :arg2 dd2 ) ) :time ( month :mod last ) )
and :op1 ( postpone-01 :arg1 ( and :op1 ( operation :quant ( nearly :op1 num_0 ) :mod routine ) :op2 ( visit-01 :quant num_1 :mod routine ) ) :time ( strike-01 :time ( end-01 :arg1 ( date-entity decade_date-entity_0 ) ) ) ) :op2 ( call-01 :arg1 ( person :arg0-of specialize-01 ) :arg2 ( doctor :arg2-of ( include-91 :arg1 ( person :arg0-of protest-01 ) ) ) )
say-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg2 ( director :mod vice ) ) :arg0-of ( have-org-role-91 :arg2 ( director :mod vice ) ) ) :arg1 ( and :op1 ( person :arg1-of ( include-91 :arg2 ( person :arg0-of ( have-rel-role-91 :arg2 patient ) ) ) :arg0-of ( suffer-01 :arg1 heart ) ) :op2 ( suffer-01 :arg0 amr-unknown :arg1 ( or :op1 ( attack-01 :mod heart :mod another ) :op2 stroke :arg0-of ( suffer-01 :arg1 ( or :op1 ( attack-01 :mod heart :mod another ) :op2 stroke ) :frequency often ) ) ) :concession ( available-02 :arg2 ( thing :arg2-of ( treat-03 :arg1 ( technology :purpose health ) ) ) ) )
call-03 :arg0 it :arg1 ( access-01 :arg0 press :arg1 document :mod ( great :degree more ) :arg1-of ( take-01 :arg0 ( or :op1 ( group :mod committees ) :op2 ( group :arg0-of study-01 ) ) ) ) :arg2 press
criticize-01 :arg0 he :arg1 ( check-01 :arg0 ( person :arg0-of ( check-01 :arg1 box ) :arg0-of ( check-01 :arg1 box ) ) :arg2 ( department :mod register-02 ) :location ( city :location city ) ) :mod also
and :op1 infatuation :op2 kate :op3 ( doppelgangers :mod other ) :op4 ( figure :mod other ) :op5 ( figure :mod well )
say-01 :arg0 ( person :arg0-of ( suppose-02 :arg1 person :arg2 ( bring-01 :arg0 person :arg1 ( revive-01 :arg1 ( revival :mod '' ) :arg2 ( team :name ( name :op1 cbc ) :arg0-of ( favor-01 :arg1 country-region ) ) ) ) ) ) :arg1 ( fool-01 :arg0 you :arg1 ( 14-year-old :mod little :source ( and :op1 country_name_0 :op2 country_name_1 ) ) )
and :op1 ( stand-01 :arg1 she :arg2 ( middle :part-of store ) ) :op2 ( take-out-11 :arg0 she :arg1 ( panties :arg0 she :arg1 ( and :op1 ( tights :poss she ) :op2 ( panties :arg1 she ) ) ) ) :op3 ( put-01 :arg0 she :arg1 they :arg2 on )
say-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg1 ( person :arg0-of ( have-org-role-91 :arg2 spokesperson ) ) :arg2 spokesperson ) ) :arg1 ( know-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg2 spokesperson ) ) :arg1 ( incident :time-of ( incident :location ( store :name ( name :op1 tuesday :op2 tuesday :op3 num_0 ) ) :location ( store :name ( name :op1 tuesday :op2 tuesday :op3 num_0 ) ) ) ) )
recommend-01 :arg1 ( have-03 :arg0 you :arg1 ( hand :quant ( less-than :op1 num_0 ) ) ) :arg1-of compare-01
think-01 :arg0 i :arg1 ( sense-01 :arg0 i :arg1 film :mod great ) :mod also
say-01 :arg0 ( magazine_name_0 :mod treats ) :arg1 ( calendars :arg0 ( and :op1 woman :op2 man ) :arg1 ( and :op1 woman :op2 woman ) )
and :op1 ( work-01 :arg0 ( magazine_name_0 :mod treats ) :manner close :prep-with ( release-01 :arg1 ( quarter :quant num_0 ) ) ) :op2 ( inspire-01 :arg0 ( snow :mod pirelli :part-of 1970s ) :arg1 ( release-01 :arg1 ( quarter :quant num_0 ) ) :manner close )
cause-01 :arg1 ( look-01 :mode imperative :arg0 we :arg1 it )
staircase :arg1 ( wall :arg1-of ( cover-01 :arg0 ( and :op1 person_name_0 :op2 ( winehouse :name ( name :op1 amy :op2 winehouse :op3 winehouse :op4 fleetwood :op5 fleetwood :op6 maca :op7 maca ) ) ) ) ) :arg2 left :arg1-of ( cause-01 :arg0 ( covered :arg1 ( and :op1 ( music :mod broadcast-program_name_1 ) :op2 ( music :mod classical ) :op3 ( thing :arg2-of ( base-02 :arg1 ( collect-01 :arg1 ( record :mod phonograph ) ) :arg1-of average-01 :mod any ) ) ) ) )
say-01 :arg0 ( person_name_0 :arg0-of study-01 :arg0-of study-01 ) :arg1 ( show-01 :arg0 footage :arg1 ( female :arg1-of ( age-01 :arg2 ( between :op1 ( temporal-quantity temporal-quantity_num_0 :unit year ) :op2 ( temporal-quantity temporal-quantity_num_1 :unit year ) ) ) ) )
think-01 :arg0 he :arg1 ( die-01 :arg1 he )
deal-01 :arg0 you :arg2 it :manner amr-unknown
multi-sentence :snt1 ( contrast-01 :arg2 ( have-03 :arg0 i :arg1 ( anything :arg0-of ( have-to-do-with-04 :arg1 ( anything :arg1-of ( do-02 :arg2 he ) ) ) ) ) ) :snt2 ( get-05 :arg1 i :time early )
multi-sentence :snt1 ( cool-04 :arg1 he :degree pretty ) :snt2 ( tall :domain kid ) :snt3 ( tall :domain kid )
say-01 :arg1 ( possible-01 :arg1 ( beat-03 :arg0 we :arg1 country_name_0 :arg2 country_name_1 ) ) :arg2 ( possible-01 :arg1 ( beat-03 :arg0 we :arg1 country :arg2 country ) )
differ-02 :arg1 that :arg2 province_name_1
have-03 :arg0 he :arg1 ( thing :arg1-of aspire-01 :quant lot ) :arg0-of ( cause-01 :arg1 ( prepare-02 :arg1 we :mod ( well :degree pretty ) :time ( after :op1 that ) ) )
block-01 :arg0 ( block :name ( name :op1 rusky :op2 birlov ) ) :arg1 ( store :name ( name :op1 pre-season ) ) :location ( playoffs :mod pre-season ) :location ( oh :mode expressive )
and :op2 ( need-01 :arg0 police :arg1 warrant :condition ( need-01 :arg0 police :arg1 ( monitor-01 :arg0 police :arg1 ( person :mod particular ) ) ) )
charge-05 :arg1 he :arg2 crime-02 :condition ( monitor-01 :arg0 ( company :arg0-of serve-01 :arg0-of serve-01 ) :arg1 ( location :arg2-of ( be-located-at-91 :arg1 ( order :mod court ) ) ) )
mention-01 :polarity - :arg1 ( problematic :location ( and :op1 ( house :mod old ) :op2 ( problem :topic ( and :op1 floor :op2 ( perform-01 :arg1 ( energy :arg1-of high-02 ) ) :op3 ( thing :arg1-of resemble-01 ) ) ) ) )
and :op1 ( set :arg0 we :arg1 ( thing :arg1-of ( expect-01 :arg0 we :source design-01 ) ) ) :op2 ( show-01 :arg0 we :arg1 ( element :mod some :topic interior :arg1-of ( like-02 :arg0 we :arg1-of ( like-02 :arg0 we :destination ( design-01 :arg1 ( design-01 :arg1 ( or :op1 carpet :op2 paintings ) ) ) ) ) ) ) :time begin-01
use-01 :arg1 granite :arg2 ( and :op1 ( counter-01 :arg1 kitchen ) :op2 ( lining :arg1 ( wall :mod fireplace ) ) )
possible-01 :arg1 ( rebuking :arg1 ( rebuking :mod only ) :arg2 floor ) :time ( prove-01 :arg1 ( delicate :arg1 ( wood :mod walnut ) :arg2 ( household :prep-with dog ) :degree too ) )
include-01 :arg1 ( and :op1 pool :op2 hot ) :arg2 it :mod also
contrast-01 :arg1 ( attuned :arg1 ( person :arg0-of ( have-org-role-91 :arg2 general ) ) :arg1-of general-02 ) :arg2 ( get-03 :arg1 it :arg2 ( bad-04 :arg1 it :degree more ) :time lately )
possible-01 :arg1 ( find-01 :polarity - :arg0 ( person :mod some ) :arg1 it :time ( arrive-01 :arg1 person ) ) :arg1-of ( cause-01 :arg0 ( see-01 :arg0 person :arg1 ( see-01 :arg0 person :arg1 it :manner ( much :degree so ) ) ) )
work-01 :arg0 i :arg1 ( website :mod travel-01 ) :time while :time ( after :op1 ( work-01 :location air ) )
contrast-01 :arg1 ( like-02 :arg0 i :arg1 ( learn-01 :arg0 i :arg1 ( person :mod country_name_0 ) ) ) :arg2 ( have-03 :arg0 i :arg1 ( time :quant much :mod that ) )
possible-01 :mode interrogative :arg1 ( cause-01 :arg0 ( religious-group_name_0 :domain you ) )
multi-sentence :snt1 ( riding :arg0 ( ride-01 :arg0 country_name_0 :location ( sea :name ( name :op1 de :op2 de :op3 janiero ) ) ) :arg1 ( veronica :name ( name :op1 yachtsman :op2 kozelski :op3 kozelski :op4 kozelski :op5 kozelski :op6 kozelski :op7 kozelski ) ) ) :snt2 fencl
want-01 :arg0 no-one :arg1 ( find-01 :arg0 no-one :arg1 ( note :location ( mailbox :purpose ( pick-01 :arg0 no-one :arg1 ( package :location branch ) ) ) ) :time ( day :time first :time ( after :op1 ( ordinal-entity ordinal-entity_num_0 ) ) ) )
contrast-01 :arg2 ( intend-01 :polarity - :arg0 someone :arg1 ( and :op1 ( circumvent :arg0 someone :arg1 ( and :op1 ( authority :mod finance ) :op2 ( thing :arg1-of tax-01 ) ) ) ) )
cause-01 :arg0 ( have-03 :arg0 ( person :mod country_name_0 ) :arg1 ( picture :location app ) ) :arg1 ( possible-01 :arg1 ( see-01 :arg0 ( person :mod country_name_1 ) :arg1 ( thing :arg1-of ( want-01 :arg0 person ) ) ) )
and :op1 ( put-01 :arg0 you :arg1 ( sweatshirt :arg1-of dark-02 ) :arg2 ( hand :part-of couriers ) ) :op2 ( be-02 :arg1 it )
and :op1 ( ltd :mod basic :domain ( ltd :mod shippansee ) ) :op2 ( upgrade-02 :arg1 ( person :quant num_0 :mod other ) :manner ( way :poss person ) )
create-01 :arg1 transfer-01 :time ( say-01 :arg0 we :arg1 ( and :op1 ( possible-01 :arg1 ( interesting :domain ( person :arg0-of ( own-01 :arg1 nation ) ) :degree ( more :degree far ) ) ) :op2 ( learn-01 :arg0 we :arg1 ( be-located-at-91 :arg1 ( republic :mod czech ) :arg2 republic :mod at-least ) ) ) )
and :op1 ( possible-01 :arg1 ( see-01 :arg0 one :arg1 ( location :location ( around :op1 city ) ) ) ) :op2 ( come-01 :arg1 one :arg4 it ) :op3 ( see-01 :arg0 one :arg1 ( obligate-01 :arg2 ( and :op1 ( deliver-01 :arg1 order ) :op2 ( abet-01 :arg1 ship-01 ) ) ) )
and :op2 ( possible-01 :arg1 ( and :op1 ( assessed :arg1 result-01 :time ( after :op1 now :quant ( multiple :op1 ( temporal-quantity temporal-quantity_num_0 :unit month ) ) ) ) :op2 ( bring-01 :arg0 bonusweb :arg1 you :arg2 you :time first :time ( after :op1 war_name_1 ) ) ) )
and :op2 ( reveal-01 :arg0 company :arg1 ( thing :quant num_0 :arg1-of ( include-91 :arg2 ( thing :arg0-of publish-01 ) ) ) )
contrast-01 :arg2 ( deny-01 :arg0 she :arg1 it :time ( tell-01 :arg0 i :arg1 ( thing :arg1-of go-on-15 ) :arg2 she ) )
get-01 :arg0 i :arg1 ( keys :poss i ) :arg0-of ( decide-01 :arg1 ( catch-up-04 :arg1 they :arg2 there ) )
and :op1 ( operated :arg0 ( they :quant ( multiple :op1 num_0 ) ) :arg1 space ) :op2 ( attack-01 :arg0 they :arg1 ( temple :mod ethnic-group_name_0 ) :time ( late :degree more ) )
and :op1 ( healthy :degree too :domain nothing ) :op2 ( nothing :mod too :arg1-of ( cause-01 :arg0 ( except-01 :arg1 ( or :op1 salad :op2 roasted ) ) ) )
probable :domain ( know-01 :arg0 she :arg1 ( nori :mod particular :mod particular ) ) :mod probable
race-02 :arg0 they :mod absolute :mod absolute :arg1-of ( cause-01 :arg0 ( remain-01 :arg1 they :arg3 ( insurmountable :arg1 they ) ) )
have-03 :arg0 ( and :op1 ( crews :mod new ) :op2 ( denmark :mod denmark ) ) :arg1 ( reserve :mod ( large :degree very ) :mod ( large :degree very ) ) :time ( begin-01 :arg1 ( approaching :arg1 ( and :op1 ( zealand :mod new ) :op2 denmark ) ) )
and :op1 ( likely-01 :arg1 ( bring-01 :arg0 they :arg1 person :arg2 ( free-04 :arg1 person ) ) :degree more ) :op2 ( say-01 :arg0 person :arg1 ( rubins :arg1 ( hunter :mod taxi-mafia ) :arg2 ( indictment :mod deluxe ) ) )
sense-02 :polarity - :arg1 ( put-01 :arg1 someone :arg2 jail :location jail :mod especially )
cause-01 :arg1 ( and :op1 ( let-01 :mode imperative :arg0 you :arg1 ( card :mod good ) :time now ) :op2 ( roll :arg0 they :arg1 person :arg3 free-03 ) )
picked :arg0 they :arg1 ( person :quant ( few :mod just ) :source ( group :mod big :mod big ) )
give-01 :arg0 i :arg1 video :arg2 they :frequency ( rate-entity-91 :arg3 ( temporal-quantity temporal-quantity_num_0 :unit day ) )
and :op1 ( washed :arg1 ( water :arg1-of clean-04 ) :arg2 ( water :arg1-of clean-04 ) :degree most :compared-to ( possible-01 :polarity - :arg1 chemistry ) ) :op2 ( good :degree more :arg1-of ( long-03 :degree more ) )
surrounded :arg1 ( tombstone :location ( in-front-of :op1 she ) ) :location ( in-front-of :op1 she ) :time ( after :op1 ( need-01 :arg0 you :arg1 ( and :op1 ( climbed :arg0 you ) :op2 ( down :op1 ( time :quant ( multiple :op1 ( temporal-quantity temporal-quantity_num_0 :unit time ) ) ) ) ) ) )
state-01 :arg0 she :arg1 ( recommend-01 :arg1 ( meticulously :arg0 ( and :op1 ( person :arg0-of ( have-rel-role-91 :arg2 patient ) ) :op2 ( person :arg0-of ( have-rel-role-91 :arg2 patient ) ) :op3 ( person :arg0-of ( have-rel-role-91 :arg2 patient ) ) ) :arg1 ( environment :mod work-01 ) ) )
say-01 :arg0 ( thing :arg1-of ( report-01 :time ( after :op1 that ) ) ) :arg1 ( begin-01 :arg0 ( report-01 :arg0 ( service :name ( name :op1 remembrance :op2 remembrance ) :mod state :part-of ( office :poss city :location ( fryer :name ( name :op1 fryer ) ) ) ) ) :arg1 ( thing :arg1-of report-01 ) :time ( after :op1 that ) ) :time ( after :op1 that )
question-01 :arg1 that :mod of-course :mod of-course
pleased :arg0 i :arg1 ( accept-01 :arg0 ( person :arg0-of ( have-rel-role-91 :arg1 i :arg2 friend ) ) :arg1 ( and :op1 ( task :mod important :mod this ) :op2 ( task :mod challenging ) :mod this ) ) :degree very
conceived :arg0 he :arg1 it :arg1-of ( cause-01 :arg0 ( possible-01 :arg1 ( take-01 :arg0 he :arg1 it :arg3 ( enemy :arg0-of ( have-rel-role-91 :arg1 he :arg2 enemy ) :arg0-of ( have-rel-role-91 :arg1 he :arg2 enemy ) :arg0-of ( have-rel-role-91 :arg1 he :arg2 enemy ) :arg0-of ( have-rel-role-91 :arg1 he :arg2 enemy ) :arg0-of ( have-rel-role-91 :arg1 he :arg2 enemy ) :arg0-of ( have-rel-role-91 :arg1 he :arg2 enemy ) :arg0-of ( have-rel-role-91 :arg1 he :arg2 enemy ) :arg0-of ( have-rel-role-91 :arg1 he :arg2 enemy ) ) ) ) )
and :op1 ( specificity :polarity - :domain this :poss ( nation :mod this :mod just ) ) :op2 ( guilty-01 :arg1 we :manner resemble-01 )
great :polarity - :degree great :time ( after :op1 ( lose-02 :arg1 ( war :mod cold :location country_name_0 ) ) )
and :op2 ( fear-01 :arg0 stranger )
grow-01 :arg1 ( grow-01 :arg1 tension )
say-01 :arg1 ( involve-01 :arg1 ( service :mod intelligence :mod country_name_0 ) :arg2 ( operation :mod attack-01 ) )
say-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg1 ( person_name_0 :arg0-of ( have-org-role-91 :arg1 country_name_1 :arg2 ( spokesman :mod general ) ) ) :arg2 ( spokesman :mod general ) ) ) :arg1 ( underway :domain ( downloading :arg1 ( stock :source ( product :arg0-of ( unsold :arg1 product ) ) ) ) :time current )
multi-sentence :snt1 ( case :quant many :location ( out :op1 there ) ) :snt2 ( realize-01 :arg0 person :arg1 ( thing :manner-of ( and :op1 ( thing :arg1-of ( differ-02 :arg2 ( promise-01 :arg0 person :arg1 ( propaganda :mod state :mod religious-group_name_0 ) ) ) ) :op2 ( want-01 :arg0 person :arg1 ( come-01 :arg1 person :direction back ) ) :op3 ( state-01 :arg0 person :arg1 ( further :degree further ) ) ) ) )
and :op2 ( be-located-at-91 :arg1 ( site :quant num_0 :arg1-of ( include-91 :arg2 ( site :arg1-of ( fame-01 :arg1-of ( possible-01 :polarity - ) ) ) ) ) :arg2 prison )
contrast-01 :arg2 ( raise-01 :arg0 ( accuse-01 :time ( year :mod last ) ) :arg1 ( thing :arg0-of ( mark-01 :arg1 ( possible-01 :arg1 ( rely-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg2 president ) ) :arg1 ( person :arg0-of ( have-org-role-91 :arg2 ( staff :mod central ) ) ) :arg2 ( person :arg0-of ( have-org-role-91 :arg2 ( staff :mod central ) ) ) :purpose ( evaluation :arg0 person :arg1 ( operation :mod military :location ( and :op1 country_name_0 :op2 country_name_1 :op3 local-region_name_1 :op4 ( crisis :mod other ) ) :manner constant ) ) ) ) ) ) )
turnaround :arg1-of complete-02
jump :arg0 ( champions :name ( name :op1 aspiring ) :mod huge ) :arg1 ( and :op1 ( up :arg1 they :arg2 ( heights :quant ( up-to :op1 num_0 ) ) ) :op2 ( showcases :arg1 report-01 :arg2 ( element :quant few :name ( name :op1 -lrb- ) ) ) :op3 ( reports :arg1 report-01 ) ) :time ( before :op1 ( land-01 :arg1 they :arg2 ( foot :part-of they ) :mod again ) ) :mod ( trampolines :mode expressive )
contrast-01 :arg1 ( try-01 :arg0 they :arg1 ( catch-up-04 :arg1 they :arg2 ( or :op1 ( line :name ( name :op1 finish ) ) :op2 ( wall :arg1-of start-01 ) ) :mod ( just :polarity - ) ) ) :arg2 ( line :mod imaginary :mod another :example ( or :op1 world :op2 ( record :mod olympic ) ) )
and :op1 ( nobler :domain ( endeavor :mod this :mod unanimous ) ) :op2 ( suffice-01 :arg0 endeavor :degree bit ) :op3 ( suffice-01 :arg0 endeavor :arg1 ( bring-01 :arg0 endeavor :arg1 ( person :arg0-of view-01 ) :arg2 ( tears :arg0 person ) ) )
try-01 :arg0 ( person_name_0 :arg0-of ( say-01 :arg1 ( didn :arg0 person :arg1 ( controversy :mod ( late :degree most ) :arg1-of ( mean-01 :arg2 ( campaign-01 :arg0 person ) ) ) ) ) ) :arg1 ( didn :arg0 person :arg1 ( controversy :mod ( late :degree most ) :arg1-of ( mean-01 :arg2 ( say-01 :arg0 person :arg1 ( didn :arg0 ( and :op1 ( person :arg0-of ( have-org-role-91 :arg2 president ) ) :op2 ( person :arg0-of ( have-org-role-91 :arg2 ( minister :mod general ) ) ) :op3 ( person :arg0-of ( have-org-role-91 :arg1 ( group :mod state :mod state :mod state :mod state ) ) ) ) :time ( week :mod this ) ) :frequency several :time ( insist-01 :arg0 person ) ) ) ) )
and :op1 ( repeat-01 :arg1 ( claim-01 :arg1 ( old :domain ( claim-01 :arg1 old ) ) ) ) :op2 ( say-01 :arg0 i :arg1 ( serious-01 :arg1 he :arg2 ( thing :arg2-of ( accuse-01 :arg0 he ) ) ) :time ( interview-01 :arg1 he :quant several ) )
say-01 :arg0 she :arg1 ( stop-01 :arg0 she :arg1 coffee :time while :arg1-of complete-02 :time ( close-01 :arg1 verb ) )
multi-sentence :snt1 ( miss-02 :arg0 i :arg1 smell ) :snt2 ( say-01 :arg0 he )
fear-01 :arg0 ( diet :mod new ) :arg1 ( and :op1 ( spread-03 :arg0 it :arg1 ( food :mod horrendous ) ) :op2 ( spread-03 :arg1 ( food :source ( and :op1 meatballs :op2 food ) :example ( and :op1 meatballs :op2 food ) ) ) :arg1-of ( cause-01 :arg0 ( possible-01 :arg1 ( hide-01 :arg0 county :arg1 ( ingredient :mod non-aesthetic ) :prep-under ( layer :consist-of ( sauce :mod creamy ) ) ) ) ) )
probable :domain ( mistake-02 :arg0 ( person :arg0-of ( have-org-role-91 :arg2 president ) ) :arg1-of same-01 :condition ( allow-01 :arg0 ( person :arg0-of ( have-rel-role-91 :arg1 he :arg2 wife ) ) :arg1 ( set-02 :arg0 person :arg1 ( example :poss person ) :arg2 ( monkey :poss person ) ) :degree total ) ) :mod probable
make-01 :arg0 ( person :mod young ) :arg1 fun :arg2 person
look-02 :arg0 show-04 :arg1 ( resemble-01 :arg1 show-04 :arg2 ( do-02 :arg0 we :arg1 show-04 ) )
combing :arg1 ( force :mod ( democracy :mod country_name_0 ) ) :time now :time ( after :op1 ( depart-01 :arg0 ( group :consist-of ( militant :arg0-of ( hide-01 :location city ) ) ) ) ) :time now
show-01 :arg0 ( returns :quant num_0 :mod tax-01 :poss dropshipper ) :arg1 ( make-01 :arg0 they :arg1 ( monetary-quantity monetary-quantity_num_1 :unit dollar :mod just ) :arg3 ( monetary-quantity monetary-quantity_num_1 :unit dollar :mod just ) ) :arg1-of ( resemble-01 :polarity - :arg2 ( person :mod country_name_0 :mod country_name_1 ) )
day :mod world :domain ( protect-01 :arg1 ( animal :mod this ) ) :time ( day :mod world )
multi-sentence :snt1 ( see-01 :arg0 we :arg1 ( change-01 :arg1 ( behave-01 :arg1 ( community :mod this ) ) ) :time ( since :op1 ( develop-02 :arg0 they :arg1 this ) ) ) :snt2 ( confident-01 :arg1 person :arg2 ( possible-01 :arg1 ( keep-02 :arg0 person :arg1 ( elephants :arg0 person :arg1 ( field :poss person ) :manner ( hurt-01 :polarity - :arg0 person :arg1 person ) ) ) :degree ( more :degree much ) ) ) :medium statement
wrapped :arg1 ( and :op1 ( powder :arg1-of ( mix-01 :arg2 salt ) ) :op2 ( end-01 :arg1 salt ) :op3 ( end-01 :arg1 salt ) :op4 ( end-01 :arg1 petard ) :op5 ( end-01 :arg1 ( wick :mod only ) ) )
say-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg2 ambassador ) ) :arg1 ( surge :topic ( trade-01 :arg0 country_name_0 :arg2 country_name_1 ) ) :time ( since :op1 ( lifted :arg1 ( thing :arg2-of ( sanction-02 :arg1 country :mod international ) :prep-against country ) ) )
win-01 :arg0 ( and :op1 ( win-01 :arg0 country_name_0 :time ( before :op1 now :quant ( up-to :op1 ( temporal-quantity temporal-quantity_num_0 :unit year ) ) ) ) :op2 ( win-01 :arg0 country :arg1 ( fifth :arg1 ( drone :quant num_0 gold gold :mod gold :poss he ) ) ) )
say-01 :arg0 he :arg1 ( good-04 :arg1 it :arg2 ( good :degree total ) :beneficiary we :arg1-of ( say-01 :arg0 he ) )
contrast-01 :arg2 ( and :op1 ( likely-01 :polarity - :arg1 ( neutralize-01 :arg0 ( person :arg1-of ( describe-01 :arg0 magazine_name_0 ) :arg1-of ( describe-01 :arg0 forum ) ) :arg1 ( category :ord ( ordinal-entity ordinal-entity_num_0 ) ) ) ) :op2 ( fall-07 :arg1 she :arg2 ( category :mod ( good :degree very ) ) ) )
difficult :arg1-of ( cause-01 :arg0 ( involve-01 :arg1 she :arg2 ( show-04 :arg1 reality ) ) ) :time always
lose-02 :arg0 ( center :mod aid-01 :arg1-of legal-02 :mod this ) :arg1 ( include-91 :arg1 ( percentage-entity percentage-entity_num_0 :mod additional ) :arg2 ( fund-01 :arg0 federal ) ) :time ( year :mod next )
call-on-05 :arg0 we :arg1 ( and :op1 ( person :arg0-of ( have-org-role-91 :arg2 da ) ) :op2 ( person :arg0-of ( have-org-role-91 :arg2 senator ) ) :op3 ( person :arg0-of ( have-org-role-91 :arg2 senator ) ) :op4 ( person :arg0-of ( have-org-role-91 :arg2 senator ) ) :op5 ( person :arg0-of ( have-org-role-91 :arg2 senator ) ) ) :arg2 ( prevent-01 :arg0 person :arg1 ( need-01 :arg0 person :arg1 ( get-04 :arg0 person :arg1 ( get-05 :arg1 person :arg2 ( trouble :arg1-of legal-02 ) ) ) ) :mod this ) :time immediate
and :op1 ( describe-01 :arg1 incident :arg2 ( court :mod state ) :location ( court :mod state ) :location ( court :mod state ) ) :op2 ( filed :arg1 ( software :mod software :time former ) :location state )
say-01 :arg0 ( campaign-01 :arg0 ( person :arg0-of campaign-01 ) ) :arg1 ( and :op1 ( take-01 :arg0 media :arg1 ( word :poss he ) :arg3 context ) :op2 ( defend-01 :polarity - :arg0 ( person :mod country_name_0 ) :arg1 violence ) )
attempt-01 :arg1 ( attempt-01 :arg1 ( get-01 :arg1 ( comment-01 :arg3 phillip ) ) )
multi-sentence :snt1 ( and :op1 ( wrong-04 :arg1 ( doubters :quant num_0 ) ) :op2 ( wrong-04 :arg1 doubters :mod even :prep-in ( case :mod heathrow ) ) ) :snt2 ( wrong-04 :arg1 it )
expand-01 :arg1 expand-01 :purpose ( create-01 :arg0 expand-01 :arg1 ( and :op1 ( job :quant num_0 :mod new ) :op2 ( grow-01 :arg1 economy ) :op3 ( grow-01 :arg1 economy ) ) ) :purpose ( and :op1 ( leave-15 :arg0 expand-01 :arg1 ( skill :mod skill ) ) :op2 ( employ-01 :arg0 expand-01 :arg1 ( and :op1 ( around :op1 airport ) :op2 ( across :op1 airport ) ) ) )
report-01 :arg0 newspaper :arg1 ( decide-01 :arg0 ( person :arg0-of ( involve-01 :arg1 ( person :arg0-of ( walk-01 :path ( along :op1 highway ) ) ) ) :quant ( multiple :op1 num_0 ) :arg1-of involve-01 ) :arg1 ( possible-01 :polarity - :arg1 ( expect-01 :arg0 person :arg1 ( cross-02 :arg0 person :arg1 highway :location ( middle :part-of night ) ) ) ) ) :prep-in ( case :mod both )
succeed-01 :arg0 fiji :arg1 ( succeed-01 :arg0 fiji :mod historic )
' :arg0 i :arg1 ( love-01 :arg0 i :arg1 she :degree total )
remarkable-02 :arg1 ( enforce-01 :arg1 they ) :arg1-of ( cause-01 :arg0 ( differ-02 :arg1 enforce-01 :manner physical ) )
multi-sentence :snt1 ( and :op1 ( study-01 :arg0 i :arg1 ( and :op1 ( study-01 :arg0 i ) :op2 ( devote-01 :arg1 i :arg2 finance ) ) ) :op2 ( devote-01 :arg1 i :arg2 finance ) ) :snt2 ( have-03 :arg0 i :arg1 ( match-03 :mod ( boxing :mod charity ) ) :purpose exemplify-01 )
and :op1 ( answer-01 :arg0 he :ord ( ordinal-entity ordinal-entity_num_0 ) ) :op2 ( wait-01 :arg1 he :arg2 ( chance-02 :arg0 he ) ) :time always :ord ( ordinal-entity ordinal-entity_num_0 )
multi-sentence :snt1 ( contrast-01 :arg2 ( say-01 :arg0 ( person :arg0-of ( have-rel-role-91 :arg1 victim :arg2 brother ) ) :arg1 ( think-01 :polarity - :arg0 person :arg1 ( want-01 :arg0 person :arg1 ( hurt-01 :arg0 person :arg1 he ) ) ) ) ) :snt2 ( succeed-01 :arg0 he :time final )
say-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg1 ( family :arg1-of ( have-org-role-91 :arg0 person :arg2 member ) ) :arg2 member ) ) :arg1 ( and :op1 ( food :domain he :time always ) :op2 ( make-02 :arg0 he :arg1 ( dinner :arg1 he ) ) :time ( want-01 :arg0 he :arg1 ( touch-01 :arg0 he :arg1 ( family :arg1-of ( have-org-role-91 :arg0 he :arg2 member ) ) ) ) :time always )
carry-01 :arg0 carrier :arg1 ( carrier :quant num_0 :arg1-of ( include-91 :arg2 ( car :mod this ) ) ) :arg3 ( thing :arg2-of ( shelter-01 :arg3 july ) )
cause-01 :arg0 ( obligate-01 :arg1 office :arg2 ( determine-01 :arg0 office :arg1 ( stand :mod ( law :polarity - ) ) ) :manner accurate ) :arg1 this
estimate-01 :arg1 ( crop :consist-of rape-01 ) :arg2 ( product-of :op1 num_0 :op2 ( more-than :op1 ( temporal-quantity temporal-quantity_num_0 :unit year ) ) )
show-01 :arg0 ( person :arg0-of write-01 ) :arg1 ( strana :mod another )
earn-01 :arg0 ( person_name_0 :arg0-of ( have-rel-role-91 :arg2 comrade ) ) :arg1 ( rate-entity-91 :arg1 ( monetary-quantity monetary-quantity_num_0 :unit dollar ) :arg2 ( temporal-quantity temporal-quantity_num_1 :unit year ) )
pay-01 :arg0 they :arg3 ( percentage-entity percentage-entity_num_0 :arg3-of ( include-91 :arg2 income ) ) :arg2-of total-01
find-01 :arg1 ( case :quant 1/2 :arg1-of ( include-91 :arg2 ( case :mod polio :quant all :location world ) ) ) :location nigeria
say-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg1 ( person :arg0-of ( have-org-role-91 :arg2 pope ) ) :arg2 spokeswoman ) ) :arg1 ( want-01 :arg0 person :arg1 ( attract-01 :arg0 person :arg1 ( and :op1 ( traffic-01 :arg1 ( shoe :mod human ) ) :op2 ( call-03 :arg1 ( intensification :arg1 ( fight-01 :arg2 he ) ) ) ) ) )
and :op1 ( stand-01 :arg1 ( riders :quant num_0 :mod riders ) :arg2 up ) :op2 ( track-winner :arg1 ( track-winner :mod ( good :degree most ) :time present ) :time ( ordinal-entity ordinal-entity_num_1 ) :time present )
cause-01 :arg0 ( receive-01 :arg0 ( person :mod country_name_0 ) :arg1 ( apology :arg1-of ( ask-02 :arg0 person :arg2 ( person :arg0-of ( have-org-role-91 :arg2 president ) ) ) ) ) :mod only :time ( after :op1 all )
contrast-01 :arg1 ( use-01 :arg0 ( customer :mod country_name_0 ) :arg1 ( bank :mod royal ) ) :arg2 ( trigger-01 :polarity - :arg0 customer :arg1 ( business :mod new ) )
contrast-01 :arg2 ( and :op1 ( drive-01 :arg0 ( person :mod country_name_0 ) :arg1 ( company :arg0-of ( win-01 :arg1 ( career :poss person ) :arg3 most ) ) ) :op2 ( something :mod real :domain person ) ) :manner frank
consequence :mode interrogative :arg1-of ( struggle-01 :arg2 power ) :domain this
landed :location ( garden :poss fish )
multi-sentence :snt1 ( bullshit-01 :mode interrogative ) :snt2 ( have-polarity-91 :arg2 - )
die-01 :arg1 girl :time ( raid-01 :arg0 ( force :arg1-of ( ally-01 :arg2 world-region_name_0 ) ) :arg1 girl :mod air )
contrast-01 :arg1 ( and :op1 ( base-02 :arg1 ( educate-01 :arg1-of ( high-02 :degree more ) ) :arg2 good ) :op2 ( indicator :mod overall :domain ( and :op1 intelligence :op2 educability :poss candidate ) ) ) :arg2 ( have-03 :polarity - :arg0 and :arg1 ( much :topic develop-02 ) :frequency often )
demand-01 :arg0 ( person :arg0-of ( manage-01 :arg1 project ) ) :mod also
available-02 :arg2 ( swim-01 :manner health :location ( and :op1 locality :op2 breakfast :op3 dinner :quant some ) ) :frequency ( rate-entity-91 :arg3 ( temporal-quantity temporal-quantity_num_0 :unit day ) )
increase-01 :arg1 ( number :quant-of ( step-01 :arg2 ( person :arg1-of average-03 ) ) ) :arg1-of significant-02 :time ( day :mod this ) :arg1-of ( cause-01 :arg0 ( increase-01 :arg1 ( game :mod this ) ) )
effort :prep-without ( effort :manner ( effort :polarity - ) )
and :op1 ( leave-15 :arg0 person_name_0 :arg1 ( and :op1 ( -rrb- :arg1 person ) :op2 ( embrace :arg0 person :arg1 ( medal :name ( name :op1 silver ) :mod gold ) ) ) ) :op2 ( embrace :arg0 person :arg1 ( medal :name ( name :op1 silver ) :mod gold ) :location ( multiboy :mod summer :location ( olympics :mod summer ) :location ( olympics :mod summer ) :location ( olympics :mod summer ) :location ( olympics :mod summer ) ) )
have-03 :arg0 ( person :mod country_name_0 ) :arg1 ( message :topic ( person :mod ( child :quant all :arg0-of ( suffer-01 :arg1-of ( cause-01 :arg0 ( malformations :arg0 ( virus :name ( name :op1 congenital :op2 congenital ) ) ) ) ) ) ) )
say-01 :arg0 ( person :arg0-of observe-01 :arg1-of ( near-02 :arg2 ( name :op1 livinston ) ) ) :arg1 ( fall-01 :arg1 ( centimeter :quant num_0 :mod yuhua ) :arg4 ( through :op1 ( temporal-quantity temporal-quantity_num_0 :unit year ) ) )
report
say-01 :arg0 he :arg1 ( contrast-01 :arg1 ( report-01 :arg1 ( flooding :mod ( home :quant few ) ) ) :arg2 ( report-01 :arg1 ( thing :arg1-of report-01 ) ) )
enter-01 :arg0 he :arg1 ( school :mod ( class :ord ( ordinal-entity ordinal-entity_num_0 ) :part-of ( school :mod elementary ) ) )
and :op1 ( need-01 :arg1 progress-01 ) :op2 ( need-01 :arg1 progress-01 ) :time ( before :op1 ( go-01 :arg1 ( group :consist-of doctor :ord ( ordinal-entity ordinal-entity_num_0 ) :mod only ) :prep-under ( treaty :mod new ) ) )
and :op1 ( meet-03 :arg0 ( person :arg0-of ( have-org-role-91 :arg1 ( government-organization :arg0-of govern-01 ) ) ) :arg1 bid-03 :purpose ( resolve-01 :arg0 person :arg1 ( dispute-01 :arg2 negotiate-01 ) ) ) :op2 ( meet-03 :arg0 person :arg1 ( amusement-park_name_0 :mod deafening ) :frequency often :prep-with ( government-organization :arg0-of govern-01 ) )
say-01 :arg0 he :arg1 ( and :op1 ( rahman :arg1 ( and :op1 rahman :op2 ( agent :poss he ) ) :purpose ( and :op1 corruption :op2 ( practice-01 :mod ( law :polarity - ) ) ) ) :op2 ( say-01 :arg0 he ) )
and :op1 ( oppose-01 :arg0 ( person :quant ( multiple :op1 num_0 ) :arg1-of ( popular-02 :arg2 ( temporal-quantity temporal-quantity_num_0 :unit year ) ) ) :arg1 ( year :mod this ) :time ( year :mod this ) ) :op2 ( oppose-01 :arg0 ( person :mod country_name_0 :mod country_name_1 ) :arg1 ( harris :mod patrick :mod neil ) ) :time ( year :mod this )
believe-01 :arg0 person_name_0 :arg1 ( off :domain ( microphone :poss he ) :time ( begin-01 :arg0 he :arg1 ( shed :arg0 he :arg1 ( thing :arg1-of ( opine-01 :arg0 he ) ) :time ( end-01 :arg1 ( stage :poss woman :mod ( style :quant num_0 :arg1-of free-03 ) ) ) ) ) )
test-01 :arg0 he :arg1 ( system :mod immune :poss he ) :manner safe :time ( after :op1 ( mission :mod this ) ) :manner safe
force-01 :arg0 ( and :op1 house-01 :op2 ( person :arg0-of ( have-rel-role-91 :arg1 she :arg2 partner ) ) :op3 ( person :arg0-of ( have-rel-role-91 :arg1 she :arg2 partner ) ) :op4 ( person :arg0-of ( have-rel-role-91 :arg1 she :arg2 partner ) ) :op5 ( person :arg0-of ( have-rel-role-91 :arg1 she :arg2 partner ) ) :op6 ( person :arg0-of ( have-rel-role-91 :arg1 she :arg2 partner ) ) :op6 ( person :arg0-of ( have-rel-role-91 :arg1 she :arg2 partner ) ) :op6 ( person :arg0-of ( have-rel-role-91 :arg1 she :arg2 partner ) ) :op7 ( person :arg0-of ( have-rel-role-91 :arg1 she :arg2 partner ) ) ) :arg1 house :time ( week :mod this ) :time ( after :op1 ( given :arg1 and :mod additional :purpose ( move :arg1 and :manner volunteer-01 ) ) )
hope-01 :arg0 i :arg1 ( and :op1 ( bring-01 :arg0 ( step :mod this ) :arg1 ( comfort :quant bit ) :arg2 ( neighbor-01 :arg1 we :arg2 we ) ) :op2 ( carry-01 :arg0 ( time :arg1-of same-01 ) :arg1 ( message :topic ( tolerate-01 :polarity - :arg0 we :arg1 ( behave-01 :arg0 non-social ) ) ) :time ( time :arg1-of same-01 ) ) )
say-01 :arg0 ( person :arg0-of ( lead-02 :arg1 organization_name_0 ) :arg0-of ( have-org-role-91 :arg1 organization :arg3 lead-02 ) ) :arg1 ( convince-01 :arg0 person :arg1 ( candidate :poss ( person :arg0-of ( have-org-role-91 :arg2 ( president :mod vice ) ) ) :arg1-of ( garland :arg2 ( court :mod supreme ) ) ) :condition elect-01 )
contrast-01 )
multi-sentence :snt1 ( watch-01 :arg0 i :arg1 camera :arg1-of ( cause-01 :arg0 ( and :op1 ( walk-01 :arg0 i :destination ( street :mod busy :arg1-of ( gray :mod busy ) ) :arg1-of wide-02 ) :op2 ( and :op1 ( stop-01 :arg0 i :arg1 ( hand :part-of i ) ) :op2 ( and :op1 ( pull-01 :arg0 i :arg2 ( hand :part-of i ) ) :op2 ( and :op1 ( pull-01 :arg0 i :arg2 ( hand :part-of i ) ) :op2 ( and :op1 ( pull-01 :arg0 i :arg2 hand ) :op2 ( pulling :arg0 i ) ) ) ) ) ) ) ) :snt2 ( look-01 :mode imperative :arg0 we :arg1 it )
say-01 :arg0 he :arg1 ( sell-01 :arg0 customer :arg1 ( thing :arg2-of mask-01 :mod record :poss customer ) :time now :arg1-of ( cause-01 :arg0 ( sell-01 :arg0 customer :arg1 ( thing :arg2-of mask-01 :mod record :poss customer ) ) :time now ) )
have-concession-91 :arg1 ( and :op1 ( take-01 :polarity - :arg0 they :arg1 ( thing :arg2-of ( result-01 :arg1 ( store :name ( name :op1 yougov ) ) ) ) :manner ( at-least :op1 ( store :mod record ) ) ) :op2 ( take-01 :polarity - :arg0 they :arg1 ( thing :arg2-of ( result-01 :arg1 ( store :name ( name :op1 vinyl ) ) ) :mod ( at-least :op1 ( store :mod record ) ) :arg0-of ( exist-01 :arg1 ( and :op1 ( store :mod record ) :op2 ( forum :mod online ) ) :mod actual ) ) ) ) :arg2 ( thing :arg2-of ( result-01 :arg1 ( thing :arg2-of ( result-01 :arg1 yougov ) ) ) )
possible-01 :polarity - :arg1 ( and :op1 ( bankrupt-01 :arg1 ( person_name_0 :arg0-of ( win-01 :arg1 ( double :mod doubles ) ) ) ) :op2 ( win-01 :arg0 person :arg1 ( double :mod double ) :mod also ) )
race-02 :arg0 ( person :arg0-of ( win-01 :arg1 ( race :mod two-breasted ) ) ) :arg3 ( medal :ord ( ordinal-entity ordinal-entity_num_0 ) :mod olympic :arg1-of ( age-01 :arg2 ( temporal-quantity temporal-quantity_num_1 :unit year ) ) )
say-01 :arg1 ( disappoint-01 :arg1 we ) :arg2 ( disappoint-01 :arg1 we )
remember-01 :polarity - :arg0 i :arg1 that
recommend-01 :arg1 ( apply-02 :arg1 ( rule :mod new ) :arg2 ( passports :quant all :arg0-of ( decide-01 :arg1 ( acquire-01 :arg0 person :arg1 ( sim :source ( operate-01 :arg1-of local-02 ) ) ) ) ) :time ( stay-01 :arg1 person :location country_name_0 ) )
contrast-01 :arg1 ( person :arg0-of tour-01 :mod ( only :polarity - ) :prep-for ( person :arg0-of tour-01 ) ) :arg2 ( work-01 :arg0 person :arg1 ( work-01 :arg0 person :arg1 ( work-01 :arg0 person :arg1 ( or :op1 ( exemplify-01 :arg0 person ) :op2 ( marrying :arg1 person ) ) ) ) :mod also )
contrast-01 :arg1 ( know-01 :arg0 they :arg1 ( number :mod phone ) ) :arg2 ( person :polarity - :arg0-of own-01 )
mention-01 :polarity - :arg1 ( problematic :location ( and :op1 ( house :mod old ) :op2 ( problem :arg1-of ( swinging :arg2 floor ) ) :op3 ( demand-01 :arg1 ( energy :arg1-of high-02 ) ) :op4 so ) )
access-01 :arg0 ( person :quant num_0 :arg1-of ( include-91 :arg2 ( person :arg0-of build-01 ) ) :arg0-of ( benefit-01 :arg1 ( apartment :mod entire ) :degree very ) ) :arg1 ( access-01 :arg0 person :arg1 ( bathroom :mod main ) :arg4 ( pool :name ( name :op1 rooftop ) ) :arg1-of direct-02 :mod also )
cause-01 :arg0 ( spirit :mod person ) :mod especially
contrast-01 :arg1 ( operate-01 :arg0 we :location prague :mod only :time so-far ) :arg2 ( like-02 :arg0 we :arg1 ( extend-01 :arg0 we :arg1 it :arg3 ( europe :mod central :quant whole ) ) )
and :op1 ( tell-01 :arg0 ( person :arg0-of ( lead-02 :arg1 i ) ) :arg1 ( person :arg0-of ( lead-02 :arg1 ( team :mod football :mod country_name_0 ) ) ) :arg2 i :time ( once :op1 ( tell-01 :arg0 ( team :mod football :mod country_name_1 ) :arg1 something ) ) ) :op2 ( say-01 :arg0 person :arg1 ( contrast-01 :arg1 ( person :polarity - :mod country :domain person ) :arg2 ( person :mod country :domain person ) ) )
and :op2 ( religious-group_name_0 :mod ( just :polarity - ) )
cause-01 :arg1 ( say-01 :arg0 i :arg1 ( recommend-01 :arg1 ( hide-01 :arg0 i :arg1-of ( cause-01 :arg0 amr-unknown ) ) :arg1-of ( cause-01 :arg0 amr-unknown ) ) :time ( read-01 :arg0 i :arg1 ( pass-01 :arg2 ( person :arg0-of ( have-rel-role-91 :arg1 he :arg2 prophet ) ) ) :arg0-of ( cause-01 :arg1 ( tell-01 :arg0 god :arg1 ( person :arg0-of ( have-rel-role-91 :arg1 person :arg2 child ) ) :arg2 ( hide-01 :arg0 person :arg1 ( wives :poss person ) :arg2 ( sight :poss other ) ) ) ) ) )
contrast-01 :arg2 ( and :op1 ( respect-01 :arg0 i :arg1 that :time ( go-02 :arg0 i :arg4 ( or :op1 ( person :mod country_name_0 ) :op2 ( person :mod saudi ) ) ) ) :op2 ( take-01 :arg0 i :arg1 it ) :time ( go-02 :arg0 i :arg4 ( or :op1 ( person :mod country_name_1 ) :op2 ( person :mod saudi ) ) ) )
contrast-01 :arg1 ( think-01 :arg0 i :arg1 territory_name_0 :time while ) :arg2 ( fine-04 :arg1 i :location location_name_0 )
want-01 :arg0 no-one :arg1 ( find-01 :arg0 no-one :arg1 ( ticket :arg0-of ( say-01 :arg1 ( want-01 :arg0 he :arg1 ( pick-01 :arg0 he :arg1 ( ship-01 :location branch ) ) ) ) ) :time ( day :time ( after :op1 ( product-of :op1 num_0 :op2 num_1 ) :time ( early :degree more ) ) ) )
cause-01 :arg0 ( important :domain ( need-01 :arg0 i :arg1 package :duration ( temporal-quantity temporal-quantity_num_0 :unit hour ) ) ) :arg1 ( wait-01 :arg1 i :arg2 home :time ( time :mod that ) )
and :op1 ( want-01 :arg0 we :arg1 ( service :mod ( good :degree more ) ) :manner ( fast :degree more ) ) :op2 ( and :op1 ( fast :degree more ) :op2 ( service :mod ( fast :degree more ) :arg0-of ( hurt-01 :polarity - :arg1 ( and :op1 anyone :op2 ( send-03 :arg1 ingredient :arg3 compete-02 ) ) ) ) )
have-03 :arg0 we :arg1 ( and :op1 ( person :quant num_0 :arg0-of merchandise-01 ) :op2 ( person :mod small ) :op3 ( person :mod small ) :op4 ( person :mod big ) :op5 ( person :mod big ) :op6 ( person :mod big :mod beers ) )
cause-01 :arg0 ( have-03 :arg0 ( person :mod country_name_0 ) :arg1 option :purpose ( take-01 :arg0 person :arg1 picture ) ) :arg1 ( see-01 :arg0 person :arg1 ( thing :arg1-of ( want-01 :arg0 person ) ) ) :mod plus
and :op1 ( come-out-09 :arg1 amr-unknown :arg2 idea ) :op2 ( take-10 :arg0 ( run-02 :arg0 amr-unknown ) :arg1 service )
contrast-01 :arg1 ( know-01 :arg0 we :arg1 ( run-13 :arg1-of long-03 ) ) :arg2 ( want-01 :arg0 we :arg1 ( create-01 :arg0 we :arg1 ( product :mod ( good :degree really ) ) :beneficiary people ) )
make-02 :arg0 this :arg1 ( look-02 :arg0 this :arg1 battlefield )
contrast-01 :arg2 ( and :op1 ( want-01 :arg0 i :arg1 ( caress :arg0 i :arg1 she ) :frequency sometimes ) :op2 ( leave-11 :polarity - :arg0 she ) )
contrast-01 :arg1 ( possible-01 :arg1 ( prepare-01 :arg0 you :arg1 it :location home ) ) :arg2 ( have-03 :arg0 ( ginger :name ( name :op1 pink :op2 gari ) :mod real ) :arg1 ( flavor :mod unique :arg1-of sharp-02 ) :arg1-of ( cause-01 :arg0 ( recipes :arg1 ( and :op1 ( vinegar :mod vinegar ) :op2 ginger :quant several ) ) ) )
include-91 :arg3 num_0 :arg1 it :arg2 ( type :mod ( type :mod ( important :degree most ) :arg1-of ( produce-01 :arg0 ( and :op1 chopping :op2 press-01 :op3 ( nori :arg1-of ( call-01 :manner so ) ) ) :arg1-of ( mean-01 :arg2 ( slides :arg1 ( produce-01 :arg1 sushi ) :arg1-of intend-01 ) ) ) ) ) :location country_name_0
have-concession-91 :arg1 ( defeat-01 :arg0 i :arg1 ( team :mod 15-member ) :manner ( health :mod full ) )
lose-02 :arg0 they :arg1 ( match-03 :frequency ( rate-entity-91 :arg3 ( temporal-quantity temporal-quantity_num_0 :unit year ) ) ) :time ( before :op1 now :quant ( temporal-quantity temporal-quantity_num_1 :unit year ) ) :subevent-of ( lead-02 :arg0 ( person :arg0-of lead-02 ) )
begin-01 :arg1 ( magnificently :arg0 ( breaches :poss ( person :mod country_name_0 :arg0-of ( have-org-role-91 :arg1 country_name_1 ) ) ) )
resemble-01 :arg1 ( resemble-01 :arg1 ( run-02 :arg0 ( and :op1 ( person :arg0-of ( have-org-role-91 :arg2 captain ) ) :op2 ( person :mod other :arg0-of ( have-org-role-91 :arg2 teammates ) ) ) ) :arg2 ( behind :op1 ( range-01 :arg1 bus :arg2 ( and :op1 ( move-01 :arg1 bus ) :op2 ( lead-02 :arg0 ( person :mod world :arg0-of ( lead-02 :arg1 world ) ) :arg2 ( behind :op1 corner ) ) ) ) ) ) :arg2 ( run-02 :arg0 and )
think-01 :arg0 they :arg1 ( less :degree less :compared-to usual :arg1-of ( cause-01 :arg0 ( try-01 :arg0 he :arg1 ( handle-01 :arg0 he :arg1 ( anxiety :poss he ) ) ) ) ) :time ( after :op1 ( win-01 :arg0 they ) ) :time ( after :op1 ( win-01 :arg0 they ) )
make-01 :arg0 you :arg1 ( report-01 :arg1 ( and :op1 ( discover-01 :arg0 you :arg1 ( practice-01 :mod fraudulent ) ) :op2 ( person :arg1-of ( suppose-02 :arg2 ( be-located-at-91 :arg1 person :arg2 court ) ) ) ) )
and :op1 ( study-01 :arg0 he :location ( academy :name ( name :op1 miroslav :op2 academy :op3 academy ) :mod ond?Ã­?ek :location pÃ­sek ) ) :op2 ( be-located-at-91 :arg1 he :arg2 ( university :mod bata :location zlÃ­n ) :time then )
watch-01 :arg0 police :arg1 she :duration ( multiple :op1 ( temporal-quantity temporal-quantity_num_0 :unit month ) )
try-01 :mode interrogative :arg0 you :arg1 ( confront-01 :arg0 you :arg1 they :arg1-of direct-02 )
go-01 :arg1 ( release-01 :arg1 ( part :mod last :part-of series ) ) :duration ( several :op1 ( temporal-quantity temporal-quantity_num_0 :unit month ) )
multi-sentence :snt1 ( and :op1 ( easy-05 :polarity - :arg1 it ) :op2 ( fast :polarity - :domain it :degree ( fast :polarity - ) ) ) :snt2 ( draw-02 :arg0 ( trost :name ( name :op1 restorant :op2 vanesa ) :source ( url-entity :value old?ichov ) ) :arg2 ( work-01 :arg0 she ) )
and :op1 ( be-temporally-at-91 :arg1 ( index :mod ( index :mod new ) ) :arg2 ( high :mod new ) :time now ) :op2 ( account-01 :arg0 ( percentage-entity percentage-entity_num_0 ) :arg1 ( percentage-entity percentage-entity_num_0 ) :time ( since :op1 ( begin-01 :arg1 year ) ) :time already ) :li num_0
dismiss-01 :arg1 ( person :arg0-of ( have-org-role-91 :arg1 country_name_0 ) ) :time ( request-01 :arg0 person )
and :op1 ( fight-01 :arg0 ( person :arg0-of ( succumb :arg1 ( puerto :arg0 person ) ) ) :ord ( ordinal-entity ordinal-entity_num_0 ) ) :op2 ( surprise-01 :arg0 ( fight-01 :arg0 person :arg1 ( person :arg0-of ( have-org-role-91 :arg2 puerto ) ) ) :arg1 ( person :quant num_1 :arg0-of ( have-org-role-91 :arg2 succumbed ) ) :time ( after :op1 ( value-interval :op1 num_1 :op2 num_2 :op3 num_2 :op4 num_3 ) ) )
have-condition-91 :arg1 ( go-01 :arg1 ( society :mod german ) :arg4 ( self-reflection :mod profound ) ) :arg2 ( ignore-01 :polarity - :arg0 country_name_0 :arg1 country_name_1 )
carry-out-03 :arg0 ( and :op1 country_name_0 :op2 soviets ) :arg1 ( atrocity :location ( or :op1 occupy-01 :op2 ( area :arg1-of abandon-01 ) ) )
bring-01 :arg0 this :arg1 ( and :op1 ( reflection :mod true ) :op2 ( infringe-01 :arg1 society ) ) :arg2 society
benefit-01 :arg0 amr-unknown :arg1 ( grow-01 :arg1 ( tension :location ( around :op1 port_name_1 ) ) )
and :op1 ( thing :arg2-of ( price-01 :arg1 ( thing :arg2-of ( price-01 :arg1 ( and :op1 ( product :consist-of tobacco ) :op2 ( product :consist-of tobacco ) ) ) :op2 ( product :consist-of tobacco ) :op3 water :op4 electricity :op5 electricity :op6 ( fuel :mod other ) ) ) ) :time ( level :mod same )
and :op1 ( base-02 :arg1 ( consume-01 :arg0 ( person :arg0-of consume-01 ) :arg2 ( problem :topic health ) ) :time ( after :op1 ( consume-01 :arg0 person :arg1 ( piece :mod ( smoke-02 :arg1 health ) ) :manner wild ) ) :time ( after :op1 ( consume-01 :arg0 person :arg1 ( piece :mod ( smoke-02 :arg1 health ) ) :manner wild ) ) ) :op2 ( check-01 :arg0 person :arg1 ( store :name ( name :op1 albert ) :location ( and :op1 square :op2 na ) ) )
and :op1 ( withdraw-01 :arg0 we :arg1 batch :time immediate ) :op2 ( downloaded :arg0 we :arg1 ( batch :mod other :quant all :part-of ( item :mod this ) ) :mod also )
paradise :topic ( turn-02 :arg1 ( person :mod country_name_0 ) :arg2 ( girl :location ( hell :location earth ) ) ) :arg1-of ( cause-01 :arg0 ( escape-01 :polarity - :arg0 person ) )
and :op1 ( have-03 :arg0 they :arg1 ( order :purpose ( shoot :arg0 they :manner ( think-01 :polarity - :arg0 they ) ) ) ) :op2 ( quote-01 :arg0 they :arg2 ( person :arg0-of ( have-rel-role-91 :arg1 ( family :arg1-of ( have-org-role-91 :arg0 ( girl :arg1-of deceased ) :arg2 telegraph ) ) :arg2 telegraph ) ) )
try-01 :arg0 ( person :arg1-of imprison-01 :quant many ) :arg1 ( escape-01 :arg0 person )
company :polarity - :mod only :arg0-of ( exceed-01 :arg1 ( limit-01 :arg1 culture :mod this ) ) :domain snapchat
say-01 :arg0 ( thing :arg1-of ( report-01 :arg0 ( group :arg0-of work-01 :arg1-of ( set-up-03 :arg0 ( and :op1 ( committee :arg0-of ( have-org-role-91 :arg1 ( force :arg1-of arm-01 ) :arg2 chairman ) ) :op2 ( committee :arg0-of ( have-org-role-91 :arg1 intelligence ) ) :op3 ( service :mod intelligence ) ) :mod preliminary ) ) ) ) :arg1 ( '' :arg0 ( person :arg0-of ( analyze-01 :arg1 intelligence ) :mod central ) :arg1 ( assess-01 :arg0 person :arg1 ( effort :poss person ) :purpose ( defeat-01 :arg0 person :arg1 ( state :mod religious-group_name_0 ) ) ) :arg1-of wide-02 ) :arg1-of ( conform-01 :arg2 ( thing :arg1-of ( report-01 :arg0 ( group :arg0-of work-01 :arg0-of ( have-org-role-91 :arg1 ( committee :mod ( force :arg1-of arm-01 ) ) :arg2 chairman ) ) :mod preliminary ) ) )
lead-03 :arg0 ( crash-01 :arg1 organization ) :arg2 ( top :poss organization )
publish-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg1 ( service :mod intelligence ) :arg2 member ) ) :arg1 ( thing :arg1-of ( include-91 :arg2 ( thing :arg1-of ( conclude-01 :arg0 ( group :arg0-of work-01 :mod republican ) ) :quant some ) ) ) :arg2 ( person :arg0-of ( have-org-role-91 :arg1 ( service :mod intelligence ) :arg2 member ) )
shines :polarity - :arg0 ( fire :name ( name :op1 fire :op2 fire ) ) :mod as-well :mod as-well
luck :arg1-of bad-07 :mod another :mod another :arg1-of ( cause-01 :arg0 ( seem-01 :arg1 ( suited :arg1 ( ear :part-of uninitiated ) :degree more :compared-to ( university :arg1 ( ear :part-of uninitiated ) :arg2 university ) ) ) )
most :domain this :time ( and :op1 olympics :op2 ( approach-02 :arg0 zen ) )
and :op1 ( denounce-01 :arg1 many :arg2 ( imprison-01 :arg2 many ) ) :op2 ( or :op1 imprison-01 :op2 imprison-01 :op3 ( kill-01 :arg1 many ) )
and :op1 ( complain-01 :quant many ) :op2 ( concern-01 :arg1 ( everything :source controversy :mod controversy ) :time ( after :op1 ( control-01 :arg1 ( power :poss ( coalition :arg0-of rule-03 ) ) :degree absolute ) ) )
multi-sentence :snt1 ( rise-01 :arg1 ( pressure-01 :arg1 ( border-01 :arg2 location_name_0 ) ) :time ( time :arg1-of same-01 ) ) :snt2 ( mark-01 :arg0 ( controversy :location ( along :op1 ( inaccurately :mod this ) ) ) :arg1 ( hundreds :arg1 ( life :location june ) ) )
die-01 :arg1 ( person :arg0-of ( cause-01 :arg1 turmoil ) ) :ord ( ordinal-entity ordinal-entity_num_0 )
and :op2 ( endanger-01 :arg1 ethnic :mod dangerous )
phone-number-entity phone-number-entity_num_0
sell-01 :arg1 ( and :op1 peanuts :op2 geopolitics :op3 lunch )
and :op1 ( favorite :polarity - :arg1 it :arg2 ( table :mod evening ) ) :op2 ( say-01 :arg0 ( person :arg0-of '' ) :arg1 ( coe :arg1 andrew ) )
rule-01 :arg0 ( court :mod district ) :arg1-of ( rule-01 :arg0 ( court :mod district ) ) :arg1-of ( rule-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg3 judge-01 ) ) :arg2 ( person :arg0-of ( pay-01 :arg1 ( fee :mod patent-01 :prep-against ( person :arg0-of ( manufacture-01 :arg1 drug ) :arg0-of ( manufacture-01 :arg1 drug ) ) ) ) ) )
and :op1 ( say-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg1 ( city-district_name_1 :mod hillary ) :arg2 adjuster ) ) :arg1 ( move-02 :arg0 person ) ) :op2 ( follow :arg0 person :arg1 ( thing :arg1-of ( tax-01 :arg3 ( thing :arg1-of ( tax-01 :arg3 ( candidate :mod democracy ) ) ) ) ) )
news :quant more :topic kevin
multi-sentence :snt1 ( use-01 :arg0 nature :arg1 ( way :instrument-of ( prevent-01 :arg1 ( elephants :arg1 ( dwellings :mod human ) :arg2 ( go-02 :arg4 ( go-02 :arg4 ( dwellings :mod human ) ) ) ) ) ) ) :snt2 ( throw-01 :arg0 they :arg1 ( fill-01 :arg2 ( powder :mod country_name_1 ) ) )
attempt-01 :arg0 ( person :mod country_name_0 ) :arg1 ( find-01 :arg0 person :arg1 ( code :location code ) :purpose ( make-18 :arg0 person :arg1 hotel ) ) :time ( stay-01 :arg1 person :time recent )
say-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg2 ambassador ) ) :arg1 ( increase-01 :arg1 ( interest-01 :arg2 ( company :mod country_name_0 :arg0-of ( trade-01 :location country ) ) ) ) :time ( since :op1 ( lifted :arg1 ( thing :arg2-of ( sanction-02 :arg1 country :mod international ) :prep-against country ) ) )
contrast-01 :arg1 ( hindes :arg1 hindes :degree slight :location ( behind :op1 ( lap :poss he ) ) ) :arg2 ( and :op1 ( push-01 :arg1 hindes :arg2 forward ) :op2 ( retained :arg0 he :arg1 ( lead-01 :arg0 he ) ) )
and :op1 ( bradley :arg1 ( bradley :name ( name :op1 ed :op2 bradley :op3 clancy :op4 doull :op5 doull :op6 doull :op7 doull ) ) :op7 ( person :arg1-of ( qualify-02 :arg2 ( squad :mod four-kilometer ) ) ) )
follow-01 :arg1 ( move-02 :mod this ) :arg2 ( speculate-01 :arg1 ( future :poss business ) :duration ( several :op1 ( temporal-quantity temporal-quantity_num_0 :unit year ) ) ) :arg1-of ( cause-01 :arg0 ( respond-01 :arg1 ( and :op1 ( dollar :mod country_name_0 :arg1-of strong-02 ) :op2 ( thing :arg2-of ( price-01 :arg1 produce-01 ) ) ) :time recent ) )
say-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg2 spokesman ) ) :arg1 ( oppose-01 :arg0 company :arg1 ( filter :mod advertising ) :arg1-of ( cause-01 :arg0 ( advertise-01 :arg1 ( and :op1 ( application :arg0-of ( organize-01 :arg1 social ) :arg1-of mobile-02 ) :op2 instagram ) :arg1-of mobile-02 ) ) )
find-02 :arg0 court :arg1 ( and :op1 ( officers :arg0 ( person :arg0-of ( have-org-role-91 :arg1 police :arg2 officer ) :arg0-of ( respond-01 :arg1 ( call-02 :mod emergency ) ) :arg0-of ( have-org-role-91 :arg1 police :arg2 officer ) :arg0-of ( have-org-role-91 :arg1 police :arg2 officer ) :arg0-of ( have-org-role-91 :arg1 police :arg2 officer ) :arg0-of ( have-org-role-91 :arg1 police :arg2 officer ) :arg0-of ( have-org-role-91 :arg1 police :arg2 officer ) :arg0-of ( have-org-role-91 :arg1 police :arg2 officer ) :arg0-of ( have-org-role-91 :arg1 police :arg2 officer ) :arg0-of ( have-org-role-91 :arg1 police :arg2 officer ) :arg0-of ( have-org-role-91 :arg1 police :arg2 officer ) :arg0-of ( have-org-role-91 :arg1 police :arg2 officer ) :arg0-of ( have-org-role-91 :arg1 police :arg2 officer ) :arg0-of ( have-org-role-91 :arg1 police :arg2 officer ) ) ) )
and :op1 ( lucrative :degree very :domain ( person :arg0-of ( have-rel-role-91 :arg1 person :arg2 uncle ) ) ) :op2 ( interest-01 :arg1 person :arg2 ( thing :arg2-of ( price-01 :arg1 ( service :mod travel-01 ) :arg1-of ( high-02 :degree more ) ) ) ) :op3 ( spend-01 :arg0 person :arg3 ( and :op1 ( standard :mod travel-01 ) :op2 ( spend-01 :arg1 ( person :mod other ) ) ) :arg1-of ( high-02 :degree more ) )
fulfill-01 :arg0 ( parade-02 :time ( year :mod this ) :arg1-of ( attend-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg1 ( government-organization_name_1 :arg1-of ( attend-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg1 government-organization_name_1 ) ) :time ( year :mod recent ) ) ) ) ) ) :arg1-of ( attend-01 :arg0 ( person :arg0-of ( betray-01 :arg1 ( person :quant num_0 ) ) ) ) :arg0-of ( have-org-role-91 :arg1 ( person :mod gay ) :arg3 most ) ) :arg1 parade-02 :time ( year :mod recent )
and :op1 ( have-03 :arg0 ( girl :mod country_name_0 ) :arg1 ( person :arg0-of ( have-rel-role-91 :arg1 girl :arg2 friend ) ) ) :op2 ( content-01 :arg1 girl :arg2 she )
and :op1 ( escape-01 :arg0 i ) :op2 ( leave-13 :arg0 i :arg1 ( atmosphere :mod dense :mod only :consist-of ( dioxide :arg1 ( gas :mod country_name_0 ) ) ) ) :arg1-of ( cause-01 :arg0 ( know-01 :arg0 we :arg1 it :time today ) )
describe-01 :arg0 ( and :op1 ( person :arg0-of ( have-org-role-91 :arg2 rebull ) ) :op2 ( person :arg0-of ( have-rel-role-91 :arg1 she :arg2 colleagues ) ) ) :arg1 ( analyze-01 :arg1 speed ) :arg2 ( analyze-01 :arg1 speed ) :time ( late :degree most ) :arg1-of ( publish-01 :location ( journal :mod astronomical ) )
contrast-01 )
contrast-01 :arg1 ( need-01 :polarity - :arg0 we :arg1 ( and :op1 tears :op2 compassion :op3 ( prayers :mod even ) ) ) :arg2 ( need-01 :arg0 we :arg1 ( and :op1 ( create-01 :arg0 we :arg1 ( zone :mod no-fly :location ( over :op1 ( river_name_0 :mod east ) ) ) ) :op2 ( stop-01 :arg0 we :arg1 ( action :mod international ) :purpose ( stop-01 :arg0 we :arg1 attack-01 ) ) ) :op3 ( need-01 :arg0 we :arg1 ( action :mod international ) :purpose ( ensure-01 :arg0 we :arg1 ( re-encircled :polarity - :arg1 ( halab :mod that ) ) ) ) )
contrast-01 :arg1 ( and :op1 ( watch-01 :arg0 world :arg1 world ) :op2 ( observe-01 :arg0 world :arg1 ( thing :manner-of ( syria :arg1 complex ) ) ) ) :arg2 ( do-02 :arg0 world :arg1 little :purpose ( protect-01 :arg0 it :arg1 we ) )
multi-sentence :snt1 ( it :mod either :mod either ) :snt2 ( want-01 :arg0 i :arg1 ( be-02 :arg1 we ) )
dare-01 :polarity - :arg1 they :arg2 ( speak-01 :arg0 they :arg1 experience :arg1-of open-04 ) :arg1-of ( cause-01 :arg0 ( big :degree too :domain shame-01 ) )
worsening :arg1 situation :location ( market :arg0-of house-01 ) :concession ( this :mod this )
assume-02 :arg1 ( use-01 :arg0 suspect-01 :arg1 ( vehicle :quant several :arg2-of ( include-01 :arg1 ( and :op1 ( nissan :mod brown :time ( late :op1 ( date-entity decade_date-entity_0 ) ) ) :op2 ( cadillac :mod white ) :op3 ( cadillac :mod white ) ) ) ) )
include-91 :arg1 ( and :op1 ( person :arg0-of ( have-rel-role-91 :arg1 he :arg2 wife ) ) :op2 ( person :arg0-of ( have-rel-role-91 :arg1 he :arg2 wife ) ) ) :arg2 ( person :arg0-of ( save-02 :arg1 ( friday :arg1-of ( near-02 :arg2 gloster ) ) ) )
say-01 :arg1 ( and :op1 ( woken :arg0 we :arg1 water ) :op2 ( flooded :arg0 we :arg1 water ) ) :arg2 person_name_0
say-01 :arg0 he :arg1 ( possible-01 :arg1 ( return-01 :arg1 they :arg4 ( home :poss they ) ) :time ( as-soon-as :op1 ( start-01 :arg1 ( go-01 :arg1 water :direction back ) ) ) )
and :op1 ( limit-01 :arg1 ( information :topic ( and :op1 ( effective-04 :arg1 blood ) :op2 ( safe-01 :arg1 ticagrelor ) ) ) :arg2 ( period :consist-of ( up-to :op1 ( up-to :op1 ( between :op1 ( temporal-quantity temporal-quantity_num_0 :unit year ) :op2 ( temporal-quantity temporal-quantity_num_1 :unit year ) ) ) ) ) ) :op2 ( recommend-01 :polarity - :arg1 ( treat-03 :arg1 ( loan-01 :arg1-of draft-01 ) :time ( beyond :op1 ( period :mod this ) ) ) )
realize-01 :polarity - :arg0 idiot :arg1 ( show-04 :arg1 idiot :mod still )
person :arg0-of tour-01 :time ( after :op1 ( fly-01 :mod military :destination ( over :op1 ( jet :name ( name :op1 portugal ) ) ) ) )
multi-sentence :snt1 ( do-02 :arg0 he :arg1 truth :mod else ) :snt2 ( '' :mode expressive )
win-01 :arg0 country :arg1 ( drone :mod most ) :time ( championship :arg0 ( world :quant num_0 :mod world ) :location beijing )
work-01 :arg0 ( magazine_name_0 :mod treats ) :arg1 ( release-01 :arg0 bellemere :arg1 ( snow :quant num_0 :mod pirelli-inspired ) :arg3 ( score-entity :op1 num_0 :op2 num_1 ) )
win-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg2 spd ) ) :arg1 ( percentage-entity percentage-entity_num_0 ) :arg1-of clear-06 :time ( before :op1 ( between :op1 ( temporal-quantity temporal-quantity_num_2 :unit year ) :op2 ( temporal-quantity temporal-quantity_num_2 :unit year ) ) ) :arg1-of clear-06
contrast-01 :arg2 ( and :op1 ( brand :name ( name :op1 volkswagen ) :mod volkswagen ) :op2 ( brand :name ( name :op1 volkswagen ) ) :op3 ( brand :name ( name :op1 volkswagen ) :mod especially ) ) :arg1-of ( cause-01 :arg0 ( announce-01 :arg0 ( company :arg1-of list-01 :mod dax ) :arg1 sell-01 ) )
and :op2 ( vote-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg2 spokesperson ) ) :arg1 ( leave-11 :arg0 person :arg1 ( person :arg0-of ( have-org-role-91 :arg2 spokesperson ) ) :mod also ) :location ( turkey :arg1-of ( surround-01 :arg2 ( situation :arg1-of ( surround-01 :arg2 coup ) ) ) ) )
and :op1 ( perspective :polarity - :topic ( consume-01 :arg1 fuel ) ) :op2 ( co2 :arg1 ( or :op1 ( power :arg1-of standard-02 ) :op2 ( power :mod engine ) ) ) :time ( after :op1 ( woe :poss vehicle ) )
find-02 :arg0 survey-01 :arg1 ( have-03 :arg0 ( person :quant num_0 :arg1-of ( include-91 :arg2 ( person :arg0-of ( buy-01 :arg1 record :time ever ) ) ) ) :arg1 ( play-01 :arg0 person :mod record :arg1-of ( use-01 :polarity - :arg0 person :time ever ) ) ) :mod also :arg1-of ( cause-01 :arg0 ( have-03 :arg0 ( person :arg1-of ( include-91 :arg2 ( person :quant num_1 :arg0-of ( buy-01 :arg1 record :mod record ) ) ) ) :arg1 ( play-01 :mod record ) ) )
have-concession-91 :arg1 ( watch-01 :arg0 i :arg1 ( group :consist-of ( girl :mod young :mod teenage :arg0-of ( work-01 :arg2 ( around :op1 ( cameras :mod polaroid ) ) ) ) ) :time ( before :op1 ( consider-02 :arg0 ( and :op1 ( person :arg0-of ( have-rel-role-91 :arg1 person :arg2 father ) ) :op2 ( person :arg0-of ( have-rel-role-91 :arg1 person :arg2 daughter ) ) ) :arg1 ( buy-01 :arg0 person :arg1 ( person :arg0-of play-01 :mod record :mod crosley ) ) ) ) ) :arg2 ( appear-02 :arg1 ( design-01 :arg0 i :arg1 ( hotpants :mod jeans ) ) )
multi-sentence :snt1 ( absolute :domain ( enforce-01 :arg1 they ) :degree absolute :mod absolute ) :snt2 ( commit-01 :arg1 they :mod ( precedent :polarity - ) :mod ( precedent :polarity - ) :mod also )
take-01 :arg0 couple :arg1 time :duration ( temporal-quantity temporal-quantity_num_0 :unit year :time ( before :op1 ( take-01 :arg0 couple :arg1 ( decide-01 :arg0 couple :arg1 ( future :poss couple ) ) ) ) )
clear-06 :arg0 ( line :mod official ) :arg1 ( schedule-01 :arg1 ( business :mod '' ) :arg3 ( '' :mod usual ) ) :time ( before :op1 ( duel :arg1 ( between :op1 ( between :op1 ( between :op1 ( temporal-quantity temporal-quantity_num_0 :unit year ) :op2 ( temporal-quantity temporal-quantity_num_1 :unit year ) ) ) ) :arg2 ( supercup :location location_name_0 ) ) )
thank-01 :arg0 i :arg1 ( person_name_0 :arg0-of ( present-01 :arg1 ( title-01 :arg1 person :arg2 ( title :ord ( ordinal-entity ordinal-entity_num_1 ) ) ) ) ) :mod especially
contrast-01 :arg2 ( recognisable :polarity - :arg1 ( control-01 :arg1 ( terrorism :arg1-of legal-02 ) ) )
leave-11 :arg0 ( person_name_0 :arg0-of ( have-org-role-91 :arg1 ( board :name ( name :op1 arno :op2 supervisory :op3 mahert ) ) :arg2 chairman ) ) :arg1 ( board :mod supervisory ) :arg2 ( affect-01 :arg1 ( september :quant num_0 ) ) :time already
say-01 :arg0 person_name_0 :arg1 ( '' :polarity - :arg1 ( fruits :poss event_name_1 ) :time yet :time ( after :op1 ( temporal-quantity temporal-quantity_num_0 :unit year ) ) )
exemplify-01 :arg0 ( impact-01 :arg0 ( base :arg1-of ( distribute-01 :mod small ) ) :arg1 ( expend-01 :arg2 ( repair-01 :arg1 ( monetary-quantity monetary-quantity_num_0 :unit euro ) :arg1-of need-01 ) ) :mod serious )
have-03 :polarity - :arg0 we :arg1 ( work-01 :arg1-of ( have-03 :arg0 we :time now ) )
become-01 :arg1 ( and :op1 ( person :arg0-of protest-01 ) :op2 ( person :arg0-of protest-01 ) :op3 ( hate-01 :arg0 person :arg1 tigray ) ) :arg2 ( common :arg1-of increase-01 :location ( media :mod social ) ) :time ( month :mod last )
and :op1 ( teams :arg1 ( team :consist-of woman ) :arg2 ( feldarmen :mod male ) ) :op2 ( serve-01 :arg0 team :arg2 ( and :op1 breakfast :op2 swim-01 :op3 dinner ) )
make-01 :arg0 it :arg1 ( figure :arg1-of symbolize-01 :mod shining :location ( horror :poss war ) )
and :op1 ( do-02 :arg0 ( person :arg0-of research-01 ) :arg1 ( remain-01 :arg1 ( person :arg0-of research-01 ) ) :time still :location ( monkey :poss animal ) :time today ) :op2 ( find-01 :arg0 ( person :arg0-of research-01 :arg1-of ( remain-01 :arg3 ( name :op1 seals ) ) ) :arg1 ( jaw :poss ( bear-02 :arg1 ( polar :mod young ) ) ) )
cause-01 :arg0 ( require-01 :polarity - :arg0 law :arg1 ( do-02 :arg0 candidate :arg1 so ) ) :arg1 ( customary :arg0 ( candidate :poss president ) :arg1 ( candidate :poss president ) )
lifted :arg0 ( interest-01 :arg1 ( company :location country_name_0 :location country_name_1 ) ) :arg1 ( increase-01 :arg1 ( thing :arg2-of ( sanction-02 :arg0 ( company :location country :location country ) ) ) :manner sharp ) :time ( since :op1 ( inform-01 :arg1 ( sanction-02 :mod international :prep-against country ) ) )
say-01 :arg2 person_name_0
go-08 :arg1 it :arg2 ( through :op1 ( train :prep-to horb ) ) :time ( afternoon :mod ( date-entity year_date-entity_0 ) )
and :op2 ( win-01 :arg0 ( trio :mod country_name_0 ) :arg1 ( duell :prep-with gold ) )
conclude-01 :arg0 i :arg1 ( point :mod point :arg1-of ( lead-03 :arg2 ( closure :arg1 ( plant :mod power :mod anglesea ) :time ( year :mod last ) ) ) ) :li num_0
and :op1 ( jenner :arg0 ( secret-model :name ( name :op1 secret-model :op2 secret-model :op3 stephanie :op4 stephanie :op5 stephanie ) :poss company_name_1 ) :arg1 ( and :op1 jenner :op2 colleague ) ) :op2 ( call-01 :arg0 and :arg1 and :arg2 mistpieces ) :op3 ( call-01 :arg0 and :arg1 and :arg2 mistpieces ) :op4 ( call-01 :arg0 and :arg1 and :arg2 mistpieces )
and :op1 ( come-01 :arg1 charge-01 :time ( after :op1 ( trigger-01 :arg0 ( candidate :poss ( person :arg0-of ( have-org-role-91 :arg2 president ) ) ) :arg1 ( crowd :arg0-of ( have-org-role-91 :arg1 ( person :arg0-of ( own-01 :arg1 firearm ) ) :arg2 ( and :op1 ( person :arg0-of ( own-01 :arg1 firearm ) ) :op2 ( person :arg0-of ( own-01 :arg1 firearm ) ) ) :ord ( ordinal-entity ordinal-entity_num_0 ) ) ) ) ) :time ( after :op1 ( trigger-01 :arg0 ( candidate :poss ( person :arg0-of ( have-org-role-91 :arg2 president ) ) ) :arg1 ( crowd :location north ) ) ) ) :op2 ( recommend-01 :arg1 ( act-02 :arg0 ( person :arg0-of ( have-org-role-91 :arg3 judge-01 ) ) ) )
contrast-01 :arg1 ( obstacle :time always ) :arg2 ( answer-01 :arg2 ( question-01 :frequency every :arg1-of ( raise-01 :arg0 he ) ) )
say-01 :arg0 ( study :arg1-of ( carry-out-03 :arg0 study :time ( year :mod last ) ) ) :arg1 ( be-located-at-91 :arg1 ( person :quant ( around :op1 num_0 ) :location ( around :op1 ( person :quant ( around :op1 num_0 ) ) ) :arg0-of ( display-01 :arg1 display ) ) :arg2 ( more-than :op1 ( product-of :op1 num_1 :op2 num_1 ) ) )
and :op1 ( warms :arg0 this :arg1 surface ) :op2 ( produce-01 :arg0 this :arg1 rain-01 ) :arg0-of ( cause-01 :arg1 ( create-01 :arg0 this :arg1 ( monkey :arg0-of ( act-02 :mod thick ) :arg0-of ( act-02 :arg1 ( shield :arg1 surface :arg2 ( part :part-of ( heat :location sun ) :mod large ) ) ) ) ) )
and :op1 ( lay-off-02 :arg0 shell :arg1 ( and :op1 ( thousands :arg1 person :arg2 part ) :op2 ( announce-01 :arg0 shell :arg1 ( plan-01 :arg0 person :arg1 ( abandon-01 :arg0 person :arg1 ( activity-06 :arg0 person :arg1 ( abandon-01 :arg0 person :arg1 ( activity-06 :arg0 person :arg1 ( and :op1 oil :op2 gas ) ) :location ( country :quant num_0 ) ) ) ) ) ) ) ) :op2 ( announce-01 :arg0 shell :arg1 ( activity-06 :arg0 shell :arg1 ( abandon-01 :arg0 and :arg1 ( activity-06 :arg0 country :arg1 ( and :op1 oil :op2 gas ) ) :location ( country :quant num_0 ) ) ) :time ( since :op1 ( rationalises :arg0 shell :arg1 ( activity-06 :arg0 group :mod business ) ) ) )
expect-01 :arg1 ( rate-entity-91 :arg1 ( monetary-quantity monetary-quantity_num_0 :unit dollar ) :arg2 ( project :mod new ) :location location_name_0 ) :arg1-of ( cause-01 :arg0 ( expect-01 :arg1 ( around :op1 ( monetary-quantity monetary-quantity_num_1 :unit dollar :arg1-of ( cost-01 :arg2 ( over :op1 ( monetary-quantity monetary-quantity_num_1 :unit dollar ) ) ) ) ) :time ( before :op1 now :duration ( temporal-quantity temporal-quantity_num_2 :unit year ) ) ) )
multi-sentence :snt1 ( understand-01 :polarity - :arg0 i :arg1 ( thing :arg0-of ( cause-01 :arg1 ( draw-02 :polarity - :arg0 athletes :arg1 ( thing :arg1-of conclude-01 :mod right ) ) ) ) ) :snt2 ( say-01 :arg0 he :arg1 ( '' :arg1 ( person :quant ( many :mod so ) ) :time already ) )
exemplify-01 :arg0 ( obligate-01 :arg2 ( participate-01 :polarity - :arg0 ( person :quant all :source ( nation :mod ( tracted :polarity - ) ) ) :arg1 part ) )
say-01 :arg1 ( make-01 :polarity - :arg0 you :arg1 ( swim-01 :arg0 you ) :mod only ) :arg2 person_name_0
have-condition-91 :arg1 ( recommend-01 :arg1 ( realize-01 :arg0 you :arg1 this ) ) :arg2 ( recommend-01 :arg1 ( realize-01 :arg0 you :arg1 this ) :arg1-of ( cause-01 :arg0 ( possible-01 :arg1 ( complain-01 :arg0 someone :arg1 ( sentiment :location there ) ) ) :mod just ) )
responsible-03 :arg0 ( person :arg1-of liberal-02 ) :arg1 ( service :arg1-of connect-01 )
responses :arg1 ( thing :arg2-of ( respond-01 :arg0 moscow ) ) :time time
cause-01 :arg0 ( receive-01 :arg0 ( person_name_0 :arg0-of ( have-org-role-91 :arg2 president ) ) :arg1 ( apology :source ( person :arg0-of ( have-org-role-91 :arg2 president ) ) :arg1-of ( hear-01 :arg0 person :arg1-of ( want-01 :arg0 person ) ) ) :mod only ) :time ( after :op1 all )
interview-01 :arg1 mcewan :time ( tour-01 :arg0 ( and :op1 customer :op2 staff ) :arg1 ( and :op1 customer :op2 staff ) :mod sighting )
see-01 :polarity - :arg0 company :arg1 ( go-01 :arg1 ( data :mod raw ) :arg4 ( increase-01 :arg0 data :arg1 ( perform-02 :arg0 data ) ) :mod only )
and :op1 ( lose-02 :arg0 she :arg1 ( contest :mod multi-campaign ) :degree total :time ( since :op1 ( summer :mod num_0 ) ) ) :op2 ( win-01 :arg0 win-01 :arg1-of ( cause-01 :arg0 ( as-long-as :op1 ( want-01 :arg0 series :arg1 biles ) ) ) )
say-01 :arg0 she :arg1 ( true :polarity - :domain amr-unknown :mod of-course :mod of-course )
likely-01 :arg1 ( reach-01 :arg0 ( and :op1 ( comite :arg1-of ( near-02 :arg2 ( near-02 :arg2 baton ) ) ) :op2 ( amite :mod river :arg1-of ( near-02 :arg2 denham ) ) ) :arg1 ( level :mod record ) :time ( over :op1 weekend ) )
and :op1 ( close-01 :arg1 ( road :quant ( nearly :op1 num_0 ) ) :arg1-of ( cause-01 :arg0 flooding ) ) :op2 ( and :op1 ( provide-01 :arg1 ( road :quant ( nearly :op1 num_0 ) ) :arg2 ( person :arg0-of reside-01 ) ) :op2 ( hope-01 :arg0 person :arg1 ( keep-01 :arg0 person :arg1 part ) ) :op3 ( hope-01 :arg0 person :arg1 ( keep-04 :arg0 person :arg1 water :arg2 ( and :op1 ( home :poss person ) :op2 ( shop :poss person ) ) ) ) ) :location city_name_0
leave-13 :arg0 ( culture :mod politics ) :arg1 ( defraud-01 :arg1 elect-01 ) :location ( area :mod religious-group_name_0 )
and :op1 ( resettled :arg1 family ) :op2 ( believe-01 :arg1 ( live-01 :arg0 family :location ( thing :arg2-of ( shelter-01 :arg1-of private-02 ) ) :time now ) )
mattress :arg1-of dirty-02 :location ( song :quant num_0 :arg1-of ( include-91 :arg2 ( song :poss house ) ) ) :time ( after :op1 ( deleted :location floor ) )
contrast-01 :arg2 ( fact :domain ( implement-01 :arg1 ( require-01 :arg1 ( implement-01 :arg1 ( and :op1 ( law :mod passenger ) :op2 ( law :mod gun ) ) :quant several ) ) ) )
multi-sentence :snt1 ( '' :ord ( ordinal-entity ordinal-entity_num_0 ) ) :snt2 ( free-03 :arg1 ( num_1 :quant num_1 ) )
possible-01 :arg1 ( become-01 :arg1 this :arg2 ( problem :topic ( bank :mod small ) ) :condition ( oppose-01 :arg0 this :arg1 ( money :arg1-of free-03 ) ) )
issue-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg2 fiji ) ) :arg1 ( and :op1 ( handle-01 :arg1 ( and :op1 ( force :arg1-of ( run-01 :arg0 line ) ) :op2 ( force :mod raw ) :op3 ( force :mod raw ) :op4 ( force :mod raw ) :op5 ( force :mod raw ) ) ) :arg2 ( win-01 :arg0 and :arg2 gold :ord ( ordinal-entity ordinal-entity_num_0 ) ) )
contrast-01 :arg1 ( stop-01 :arg0 ( wise :mod hevorraging ) :arg1 ( reach-01 :arg0 ( nakarawa :mod leone ) :arg1 ( gated :ord ( ordinal-entity ordinal-entity_num_0 ) ) ) ) :arg2 ( hold-02 :arg1 ( fiji :arg1 fiji :mod only ) )
praise-01 :arg0 ( and :op1 ( person :arg0-of ( have-org-role-91 :arg2 ( part :mod rupert ) ) ) :op2 ( person :arg0-of ( have-org-role-91 :arg2 part ) ) :op3 ( person :arg0-of ( have-org-role-91 :arg2 head-of-state ) ) :op4 ( person :arg0-of ( have-org-role-91 :arg2 head-of-state ) ) :op5 ( person :arg0-of ( work-01 :arg2 he :duration ( temporal-quantity temporal-quantity_num_1 :unit year ) ) ) ) :arg1 ( wart :mod water )
plan-01 :arg0 ( commission :mod continent_name_0 ) :arg1 ( ask-01 :arg0 commission :arg1 ( person :arg0-of ( produce-01 :arg1 steel ) :arg0-of ( use-01 :arg1 gas :arg2 ( generate :arg0 person :arg1 ( consume-01 :arg0 person :arg1 electricity ) :purpose ( generate-01 :arg0 person :arg1 electricity :purpose ( consume-01 :arg0 person :arg1 electricity ) ) ) ) ) :arg2 ( commission :mod continent_name_1 ) :time initial )
possible-01 :arg1 ( join-up-02 :arg0 you :arg1-of easy-05 ) :source ( circle :mod ( chorus :mod senior ) )
and :op1 ( excited :arg0 ( thing :arg1-of ( differ-02 :arg2 ( middling :mod less ) ) ) :arg1 ( animal :mod young ) :arg2 ( animal :mod young ) :manner heavy ) :op2 ( say-01 :arg0 i :arg1 ( or :op1 ( unperceptible :arg1 animal :mod either ) :op2 ( important :polarity - :domain animal ) ) ) :op3 ( say-01 :arg0 i :arg1 ( konerding :arg0 ( biologists :name ( name :op1 biologists :op2 wiebke ) :mod biologists ) :arg1 mhh ) )
issue-01 :arg1 ( warrant :mod arrest-01 ) :prep-against ( sÃ¼kr :arg1 ( star :mod football :time former ) ) :location turkey
go-01 :arg1 ( year :mod this ) :arg4 ( account :poss ( favorite :arg1 gold :mod great ) ) :time ( year :mod this )
and :op1 ( say-01 :arg0 police :arg1 ( and :op1 ( kill-01 :arg1 ( person :quant ( about :op1 num_0 ) ) ) :op2 ( injure-01 :arg1 ( person :quant ( about :op1 num_0 ) ) ) ) ) :op2 ( injure-01 :arg1 ( person :quant ( about :op1 num_0 ) :arg2-of ( include-01 :arg1 ( and :op1 ( person :quant num_1 ) :op2 ( person :quant num_1 ) :op3 ( person :quant num_1 ) :op4 ( person :quant num_1 ) ) ) ) )
multi-sentence :snt1 ( include-91 :li num_0 :arg1 sell-01 :arg2 ( percentage-entity percentage-entity_num_0 ) ) :snt2 ( sell-01 :arg1 sell-01 :arg2 ( below :op1 ( level :arg1-of ( include-91 :arg2 ( percentage-entity percentage-entity_num_0 ) ) ) ) )
possible-01 :arg1 ( compensate-01 :arg0 it :arg2 ( or :op1 over :op2 ( discover-01 :mod cyber ) ) :time ( date-interval :op1 ( date-entity decade_date-entity_0 ) :op2 ( date-entity year_date-entity_1 ) ) ) :mod also
add-01 :arg0 i :arg1 ( disappear-01 :arg1 ( community :mod market ) :location ( plant :location sewage :arg1-of major-02 ) :time ( before :op1 now :duration ( temporal-quantity temporal-quantity_num_0 :unit year ) ) ) :time ( time :arg1-of same-01 )
value-01 :arg1 this :arg1-of ( high-02 :degree most ) :arg1-of ( cause-01 :arg0 ( and :op1 ( -rrb- :quant num_0 :time ( since :op1 ( date-entity decade_date-entity_0 ) ) ) :op2 ( city-district_name_3 :ord ( ordinal-entity ordinal-entity_num_1 ) ) :ord ( ordinal-entity ordinal-entity_num_1 ) ) ) :time ( since :op1 ( record-01 :arg1 ( year :mod last ) ) )
flaws :arg1 ( person :arg0-of lead-02 ) :arg2 ( top :part-of organization )
contrast-01 :arg1 ( recommend-01 :arg1 ( admit-01 :arg0 i :arg1 ( expert-01 :polarity - :arg1 i :arg2 ( expert-01 :arg1 i :arg2 ( expert-01 :arg1 i ) ) ) ) ) :arg2 ( recommend-01 :arg1 ( admit-01 :arg0 i :arg1 ( person :arg1-of expert-01 :domain i ) ) )
show-01 :arg0 ( poll-01 :arg0 publication_name_0 :arg1 ( journal :name ( name :op1 / :op2 street :op3 / ) :mod street :part-of organization_name_1 ) :mod new ) :arg1 ( lead-03 :arg0 poll-01 :arg2 ( lead-01 :arg0 ( state :location ( and :op1 north :op2 virginia :op3 colorado :op4 race :op5 race ) ) :mod big ) )
multi-sentence :snt1 ( tense :domain ( diet :mod budget :mod new :example ( and :op1 bread :op2 casserole ) :example ( and :op1 bread :op2 casserole ) ) ) :snt2 ( and :op1 ( become-01 :arg1 ( casserole :example ( and :op1 bread :op2 casserole ) ) :arg2 ( food :mod basic ) ) :op2 ( note-01 :arg0 i :arg1 ( possible-01 :arg1 ( hide-01 :arg0 '' :arg1 ( ingredient :mod unappetising ) :prep-under ( sauce :mod creamy ) ) ) ) )
contrast-01 :arg2 ( recommend-01 :arg1 ( invest-01 :arg0 ( animal :mod ( large :degree very ) ) :arg1 ( resource :poss animal ) :arg2 ( life :arg1-of long-03 ) ) )
and :op1 ( prove-01 :arg0 method :arg1 ( promote-02 :arg0 method :arg1 ( and :op1 effective-04 :op2 foundation ) :time ( before :op1 now :quant ( temporal-quantity temporal-quantity_num_0 :unit year ) ) ) ) :op2 ( up :arg0 method :arg1 ( promote-02 :arg0 ( syndicate :location ( north :part-of country ) ) :arg1 ( method :quant num_0 :instrument-of ( step-01 :arg2 ( protect-01 :arg1 ( home :poss animal ) ) ) ) :manner ( step-01 :polarity - :arg1 animal ) ) )
and :op1 ( and :op1 ( relieved :arg1-of ( warm-07 :degree more ) ) :op2 happy ) :time ( late :op1 ( date-entity year_date-entity_0 ) :degree more ) :op2 ( pass-07 :arg1 minis :arg2 ( gated :arg1 mercy ) )
jenner :arg1 ( edition :mod september :mod vogue )
say-01 :arg0 study :arg1 ( use-01 :arg0 ( study :arg1-of ( publish-01 :arg0 ( and :op1 ( person :quant ( about :op1 num_0 ) ) :op2 ( person :quant ( about :op1 num_1 ) ) ) ) ) :arg1 ( display :quant ( nearly :op1 num_1 ) ) :time ( year :mod last ) :location ( around :op1 world ) )
receive-01 :arg0 ( and :op1 ( person :arg0-of ( marry-01 :arg1 person :arg2 actress ) ) :op2 ( person :arg0-of ( madonna :arg1 ( star :mod pop :mod pop ) ) ) ) :arg1 ( sympathize-01 :arg0 person :arg1 ( fan :source ( sox :name ( name :op1 yankee-arch-rival :op2 red :op3 red ) :mod red ) ) ) :arg2 ( person :arg0-of view-01 ) :time ( after :op1 all )
responsible-03 :arg0 ( person_name_0 :arg0-of ( responsible-01 :arg1 ( case :mod positive ) ) ) :arg1 ( ordinal-entity ordinal-entity_num_0 ) :time ( history :ord ( ordinal-entity ordinal-entity_num_0 :range history ) )
know-02 :arg1 ( case-03 :arg1 ( '' :name ( name :op1 zielinski :op2 zielinski ) :name ( name :op1 zielinski :op2 zielinski ) :name ( name :op1 zielinski :op2 '' :op3 '' ) ) ) :mod also :arg1-of ( cause-01 :arg0 ( test-01 :arg0 ( olympic :name ( name :op1 london-based :op2 olympic ) :mod london-based ) :arg1 ( positive :arg1-of ( mean-01 :arg2 ( between :op1 ( temporal-quantity temporal-quantity_num_0 :unit day ) :op2 ( temporal-quantity temporal-quantity_num_3 :unit day ) ) ) ) ) ) :mod also
explain-01 :arg0 they :arg1 ( victim :poss they ) :manner ( email-01 :arg0 they :arg2 ( thing :manner-of ( possible-01 :arg1 ( pay-01 :arg0 they :arg1 ( and :op1 ( website :mod support-01 :arg1-of ( access-01 :arg3-of free-04 ) ) :op2 ( website :mod ( support-01 :arg3-of free-04 ) ) :op3 ( file :arg0-of exemplify-01 ) ) ) ) ) )
and :op1 ( come-01 :arg1 ( option :mod treat-03 ) :arg3 ( or :op1 ( thing :mod other ) :op2 ( change-01 :mod behavioral ) :op3 ( trip-03 :name ( name :op1 behavioral ) ) :op4 ( apprentice-01 :arg0 ( person :arg0-of ( have-rel-role-91 :arg2 dd1 ) ) ) :op5 ( person :arg0-of ( have-rel-role-91 :arg2 dd1 ) ) :op6 ( person :arg0-of ( have-rel-role-91 :arg2 dd1 ) ) :op6 ( person :arg0-of ( have-rel-role-91 :arg2 dd1 ) ) :op7 ( person :arg0-of ( have-rel-role-91 :arg2 dd1 ) ) :op6 ( person :arg0-of ( have-rel-role-91 :arg2 dd1 ) ) :op7 ( person :arg0-of ( have-rel-role-91 :arg2 dd1 ) ) :op7 ( person :arg0-of ( have-rel-role-91 :arg2 dd1 ) ) :op7 ( person :arg0-of ( have-rel-role-91 :arg2 dd1 ) ) ) )
and :op1 ( admit-01 :arg0 ( we :arg0-of ( win-01 :arg2 ( athletes :quant num_0 :mod outstanding :mod other ) ) ) :arg1 ( be-located-at-91 :arg1 ( and :op1 ( person :arg0-of win-01 ) :op2 ( person :arg0-of win-01 ) ) :arg2 ( northwest :part-of ( sports :mod german ) ) ) )
ridden :arg1 frankie :time already :time ( after :op1 now :quant ( nearly :op1 ( temporal-quantity temporal-quantity_num_0 :unit year ) ) ) :arg1-of ( cause-01 :arg0 great )
expect-01 :arg1 ( complete-01 :arg1 ( project :mod ( monetary-quantity monetary-quantity_num_0 :unit ( dollar :mod country_name_0 ) ) ) :manner ( possible-01 :arg1 complete-01 ) )
possible-01 :arg1 ( solve-01 :arg1 problem )
announce-01 :arg0 police :arg1 ( result-01 :polarity - :arg1 ( rob-01 :arg0 ( person :arg0-of murder-01 ) ) :arg2 ( or :op1 ( person :arg0-of traffic-01 ) :op2 ( person :arg0-of ( possess-01 :arg1 ( possess-01 :arg1 ( victim :quant num_1 :mod adult ) ) ) ) ) )
say-01 :arg0 person_name_0 :arg1 ( request-01 :arg0 ( municipal :mod tangihapoa ) :arg1 ( tens :arg1 sandbags ) )
and :op1 ( be-located-at-91 :polarity - :arg1 ( victim :quant num_0 :mod other ) :arg2 car ) :op2 ( investigate-01 :arg0 police :arg1 ( possible-01 :mode interrogative :arg1 ( be-located-at-91 :arg1 they :arg2 ( under :op1 ( man :arg1-of injure-01 :arg1-of ( include-91 :arg2 ( man :arg0-of perpetrate-01 ) ) ) ) ) :mod just ) )
include-91 :arg1 ( and :op1 ( person :arg1-of ( manufacture-01 :arg0 ( company :mod country_name_0 ) ) :arg1-of ( manufacture-01 :arg0 ( company :mod country_name_1 ) ) ) :op2 ( person :arg1-of displace-01 :arg1-of ( manufacture-01 :arg0 ( company :mod country ) ) ) ) :arg2 ( thing :arg2-of ( name-01 :arg1 ( thing :arg2-of ( name-01 :arg1 company ) ) ) ) :arg1-of ( cause-01 :arg0 ( possible-01 :polarity - :arg1 ( neutralize-01 :arg0 ( risk-01 :mod this ) :arg1 ( likely-01 :polarity - :arg1 ( neutralize-01 :arg0 ( person :mod ( atheist :mod blood ) ) :arg1 person :degree more ) ) ) ) )
multi-sentence :snt1 ( concern-01 :arg1 ( know-01 :arg0 ( institution :mod state ) :arg1 ( behave-01 :arg0 institution :mod such ) ) ) :snt2 ( ignore-01 :arg0 ( and :op1 ( institution :mod state ) :op2 ( person :mod religion :mod religion ) ) :arg1 ( behave-01 :mod such ) )
and :op1 ( get-02 :arg0 ( person :mod archery ) :arg1 ( madness :location ( media :mod social ) ) ) :op2 ( admit-01 :arg0 person :arg1 ( hear-01 :arg0 person :time ( since :op1 ( childhood :poss person :arg1-of ( look-02 :arg0 person :arg1-of ( look-02 :arg0 person ) ) ) ) ) ) :mod indeed
say-01 :arg0 person_name_0 :arg1 ( and :op1 ( see-01 :arg0 person :arg1 ( fight-01 :arg0 person :arg2 street ) ) :op2 ( obligate-01 :arg1 person :arg2 ( call-01 :arg0 person :arg1 police :arg2 street :arg1-of regular-02 ) ) )
(-(
panic :arg1 ( person :arg0-of tour-01 :location beach ) :time ( and :op1 ( come-03 :arg1 aircraft :arg2 darkness ) :op2 ( low-04 :arg1 aircraft :degree incredible :degree incredible ) )
and :op1 ( withdraw-01 :arg1 they :arg2 grandstand ) :op2 ( leave-13 :arg0 leave-11 :arg1 ( person :arg0-of ( protest-01 :arg1 they ) ) :manner ( alone :degree fair ) )
multi-sentence :snt1 ( throw-01 :arg0 i :arg1 ( person :quant num_0 :arg0-of rival-01 :arg0-of ( rival-01 :arg1 ( camp :mod republican :poss person ) ) ) :arg2 ( succeed-01 :arg0 person :arg1 ( succeed-01 :arg0 government-organization_name_0 ) ) :time now ) :snt2 doubt-01
say-01 :arg2 person_name_0
and :op1 ( go-02 :arg0 ( he :mod country_name_0 :mod country_name_1 ) :arg4 ( station :arg0-of ( control-01 :arg1 country-region ) ) ) :op2 ( and :op1 ( spent :arg0 he :arg1 ( rotich :mod ferguson ) ) :op2 ( and :op1 ( made :arg1 he ) :op2 ( sign-01 :arg0 he :arg1 ( rotich :mod ferguson ) ) :op3 ( explain-01 :arg0 he :arg1 ( explain-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg1 country :arg2 ( executive :mod chief ) ) ) :arg1 ( mission :name ( name :op1 de ) :mod ( executive :mod chief ) ) ) ) ) )
and :op1 ( age-01 :arg1 ( person :mod old ) :arg2 ( temporal-quantity temporal-quantity_num_0 :unit year ) ) :op2 ( die-01 :arg1 person ) :time ( after :op1 ( plan-01 :arg0 person :arg1 ( and :op1 ( leave-15 :arg0 person :arg1 ( country :mod military_name_0 ) ) :op2 ( return-01 :arg1 person :arg4 england ) ) :quant short ) )
think-01 :arg0 he :arg1 ( do-02 :arg0 it :arg1 snow :mod as-well ) :mod apparent
open-01 :arg1 street :mod ( small :mod only ) :arg0-of ( cause-01 :arg1 ( open-01 :arg1 street :mod again :time now ) ) :location ( 27 :mod b )
lack-01 :arg1 ( customer :source ( and :op1 hechingen :op2 balingen :op3 rottweil ) )
present-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg2 ( minister :mod interior ) ) ) :arg1 ( package :mod ( security :mod thick ) ) :time ( after :op1 ( attack-01 :time recent ) )
and :op2 ( campaigning :mode expressive )
say-01 :arg0 ( person_name_0 :arg0-of ( have-org-role-91 :arg1 bank :arg2 ( executive :mod bank ) ) ) :arg1 ( '' :arg1 ( customer :quant num_0 :mod only :arg0-of ( cost-01 :arg1 ( monetary-quantity monetary-quantity_num_1 :unit euro ) :arg2 ( account :mod day ) ) ) )
headlines :arg1-of ( make-01 :arg0 ( and :op1 ( person :mod thuringer ) :op2 ( person :mod thuringer ) :op3 ( land :mod altenburger ) ) ) :prep-with ( branch :mod skatbank :poss and ) :manner ( rate :mod ( interest :mod criminal-03 ) )
and :op1 ( be-located-at-91 :arg1 ( person :arg0-of tour-01 ) :arg2 ( around :op1 num_0 ) ) :op2 ( person :arg0-of tour-01 ) :op3 ( person :arg0-of tour-01 ) :op4 ( person :arg0-of tour-01 ) :op5 ( person :arg0-of tour-01 )
horrified :arg1 ( industry :mod advertising ) :time already
and :op1 ( twitch :domain ( platform :arg1-of know-01 ) ) :op2 ( youtube :arg1 platform )
contrast-01 )
possible-01 :arg1 ( uphold-01 :arg1 ( supply-01 :arg1 newbrun ) :mod only :arg1-of ( cause-01 :arg0 ( fill-01 :arg0 you :arg1 ( container :mod high-profile :mod ( town :mod petton ) ) :arg2 hoses ) ) )
multi-sentence :snt1 ( and :op1 ( go-01 :arg1 person_name_0 :accompanier ( person :arg0-of ( have-rel-role-91 :arg1 person :arg2 son ) ) :arg1-of open-04 ) :op2 ( turns :arg0 person :arg1 ( person :arg0-of ( have-rel-role-91 :arg1 person :arg2 parent ) ) :arg2 ( person :arg0-of ( have-rel-role-91 :arg1 person :arg2 parent ) ) :arg1-of open-04 ) ) :snt2 ( have-03 :arg0 you :arg1 courage :purpose ( talk-01 :arg0 you :arg1 courage ) )
possible-01 :arg1 ( or :op1 ( bear-02 :arg1 ( person :mod this ) ) :op2 ( develop-02 :arg1 person :arg3 ( maturity :mod gender ) ) )
blame-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg1 state :arg2 president ) ) :arg1 ( person :arg0-of ( have-org-role-91 :arg1 state :arg2 president ) :arg1-of ( blame-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg1 state :arg2 president ) ) :arg2 ( attempt-01 :arg0 coup ) ) ) :arg2 ( person :arg0-of support-01 )
contrast-01 )
acknowledge-01 :arg0 ( court :mod international ) :arg1 ( bronze :arg1 bronze :location ( bronze :arg1 ( game :quant num_0 :mod olympic ) ) ) :mod also
expect-01 :arg1 ( address-02 :arg0 propaganda :arg1 person :manner emotionally )
say-01 :arg0 she :arg1 ( believe-01 :arg0 she :arg1 ( reflect-01 :arg1 ( controversy :mod race ) :arg2 ( and :op1 ( lack-01 :arg1 diversity ) :op2 ( practice-01 :arg1 diversity ) ) :location snapchat ) ) :medium ( interview-01 :medium phone )
say-01 :arg0 ( thing :arg2-of ( right-05 :arg1 human ) ) :arg1 ( thing :arg2-of ( respond-01 :arg0 ( government-organization :arg0-of govern-01 ) ) )
contrast-01 :arg2 ( change-01 :arg1 that :arg1-of straight-04 :mod also )
give-01 :arg0 ( and :op1 ( person_name_0 :arg0-of ( have-org-role-91 :arg1 ( york :mod new ) :arg2 mayor :time former ) ) :op2 ( person :arg0-of ( have-org-role-91 :arg1 ( university_name_2 :mod new ) :arg2 mayor :time former ) ) :op3 ( person :arg0-of ( have-org-role-91 :arg2 mayor :time former ) ) :op4 ( person :arg0-of ( have-org-role-91 :arg2 mayor :time former ) ) :op5 ( person :arg0-of ( have-org-role-91 :arg2 mayor :time former ) :quant ( multiple :op1 num_0 ) ) ) :arg1 ( trouble :mod great ) :arg2 ( defend-01 :arg0 and :arg1 candidate :medium ( interview-01 :arg1 candidate :time today ) )
meal :topic ( crisis :mod economy :location ( concept :mod rich ) )
cause-01 :arg0 ( prefer-01 :arg0 they :arg1 ( temperature :mod water :location ( around :op1 ( temperature-quantity :quant num_0 ) ) ) ) :arg1 ( be-located-at-91 :arg1 they :arg2 surface :mod only :time winter )
measure-02 :arg0 ( person :arg0-of ( have-rel-role-91 :arg1 she :arg2 timeless ) ) :arg1 they :time ( equip-01 :arg0 they :arg1 ( animal :quant num_0 ) :arg2 ( person :arg0-of broadcast-01 ) :time ( before :op1 war_name_1 ) )
possible-01 :arg1 ( or :op1 ( sleeping :arg0 they :arg1 animal :location ( bottom :poss ( seas :consist-of ice ) ) ) :op2 ( search-01 :arg0 animal :arg1 ( person :arg0-of torture-01 :arg0-of ( torture-01 :source ( park_name_0 :arg1-of ( high-02 :degree more ) ) ) ) ) ) :arg1-of possible-01
focus-01 :arg0 council :arg2 ( focus-01 :arg0 council :arg2 ( meet-03 :time recent ) ) :manner ( issue-02 :arg0 building )
and :op1 ( increase-01 :arg1 ( import-01 :arg0 country_name_0 :location country_name_1 ) :arg2 ( rate-entity-91 :arg1 num_0 :arg2 ( rate-entity-91 :arg1 num_0 :arg2 ( temporal-quantity temporal-quantity_num_1 :unit year ) ) ) ) :op2 ( draw-02 :arg0 import-01 :arg2 ( rate-entity-91 :arg1 ( monetary-quantity monetary-quantity_num_1 :unit dollar ) :arg2 ( volume-quantity volume-quantity_num_1 :unit gallon ) ) ) :mod particular
and :op1 ( examine-01 :arg1 ( destinations :mod ( pilgrimages :mod various ) :mod various ) ) :op2 ( decide-01 :arg0 you :arg1 ( and :op1 ( examine-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg2 head-of-state ) ) :arg1 ( city :arg0-of ( have-org-role-91 :arg2 freiburg ) ) :time eventual :time ( year :mod this ) ) :op2 ( offer-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg2 mercy ) ) :arg1 ( targets :arg1-of special-02 :arg1-of ( target-01 :arg2 ( gated :location ( munster :mod fribourg ) ) ) ) ) :time ( year :mod this ) ) )
come-01 :arg1 we :manner ( bad-05 :degree so ) :arg0-of ( cause-01 :arg1 ( win-01 :arg0 we :mod again :purpose ( win-01 :arg0 we :mod again :location olympics ) ) )
sell-01 :arg0 ( and :op1 she :op2 ( sisters :poss they :quant all ) ) :arg1 ( picture :poss ( person :arg0-of ( have-rel-role-91 :arg1 they :arg2 husband ) ) :mod respective :mod respective )
time :time-of ( and :op1 ( look-01 :arg1 ( need-01 :arg1 community ) ) :op2 ( invest-01 :arg0 ( community :mod customer :poss they ) :arg2 ( work-01 :mod important :mod this ) ) ) :time now
multi-sentence :snt1 ( v. :arg0 procedure :arg1 ( trumps :arg0 ( person :arg0-of ( have-org-role-91 :arg2 president ) ) :arg1 ( person :arg0-of ( have-org-role-91 :arg2 president ) ) :arg2 ( person :arg0-of ( have-org-role-91 :arg2 president ) ) ) ) :snt2 ( 16-c-14300 :arg0 ( court :mod c ) :arg1 ( person :arg0-of ( have-org-role-91 :arg2 president ) ) )
and :op1 ( appreciate-02 :arg0 we :arg1 ( everyone :arg1-of ( do-02 :arg0 we :arg1-of ( organize-01 :arg0 we ) ) ) ) :op2 ( want-01 :arg0 we :arg1 ( good :degree most :mod only :prep-for future ) )
multi-sentence :snt1 ( contrast-01 :arg1 ( have-03 :arg0 passenger :arg1 ( space :quant lot :location ( row :ord ( ordinal-entity ordinal-entity_num_1 ) ) ) ) :arg2 ( have-03 :arg0 passenger :arg1 ( space :quant lot :location ( row :ord ( ordinal-entity ordinal-entity_num_1 ) ) ) ) ) :snt2 ( look-02 :arg0 passenger :arg1 tight :degree total )
case :topic disease
and :op1 ( loosing :arg1 you :duration forever ) :op2 ( wake-up-02 :arg1 you :duration ( temporal-quantity temporal-quantity_num_0 :unit hour ) :time night ) :op3 ( wake-up-02 :arg1 you :duration ( temporal-quantity temporal-quantity_num_1 :unit hour ) :time ( before :op1 ( possible-01 :arg1 ( think-01 :arg0 ( rings :mod stage ) :arg1 ( sleep-01 :arg0 you ) :time no-longer ) ) :time night ) )
short-06 :polarity - :arg2 sympathetic
cause-01 :arg0 ( obligate-01 :arg1 you :arg2 ( change-01 :arg0 self :arg1 ( fear-01 :arg0 self :arg1 regime :mod deep-seated ) ) ) :arg1 ( this :domain this )
contrast-01 :arg1 ( avoid-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg2 president ) ) :arg1 ( question-01 :arg1 ( differ-01 :arg0 person :arg2 answer-01 ) ) :manner vehement ) :arg2 ( decide-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg2 president ) ) :arg1 answer-01 )
contrast-01 :arg1 ( available-02 :arg2 ( bank :mod royal :part-of country_name_0 ) :mod only ) :arg2 ( available-02 :polarity - :arg2 customer )
include-91 :arg1 person_name_0 :arg2 ( circle :mod ( circle :mod trust-01 ) :mod ( close :degree most ) ) :duration ( many :op1 ( temporal-quantity temporal-quantity_num_0 :unit year ) )
obligate-01 :arg1 ( man :quant num_0 ) :arg2 ( swim-01 :arg0 man :arg1 ( difficulty :topic security ) ) :concession ( boat :poss you :source ( strength :poss you :mod strength ) )
and :op1 ( recovering :arg1 she ) :op2 ( search-01 :arg0 police :arg2 ( person :arg1-of suspect-01 ) )
and :op1 ( do-02 :arg0 i :arg1 this :arg2 ( team :mod olympic ) :purpose ( introduce-01 :arg0 i ) ) :op2 ( reason :quant ( more-than :op1 num_0 ) ) :domain this
and :op1 ( fall-01 :arg1 ( eric :name ( name :op1 sir :op2 eric ) ) :arg4 ( police :mod metropolitan ) ) :op2 ( find-02 :arg0 i :arg1 ( amaze-01 :arg1 ( and :op1 ( case-03 :mod hamlets ) :op2 ( case :arg1-of ( make-01 :polarity - ) ) ) ) )
have-concession-91 :arg1 ( watch-01 :arg0 you :arg1 ( video :mod this ) ) :arg2 ( watch-01 :arg0 you :arg1 ( video :mod this ) :purpose ( see-01 :arg0 you :arg1 ( thing :manner-of ( turn-01 :arg0 you :direction around :beneficiary ( person :arg0-of ( rob-01 :arg1 you ) ) ) ) ) )
and :op1 ( underwent :arg0 ( slash :op1 ( system :name ( name :op1 traveler ) :mod country_name_0 ) :op2 ( system :name ( name :op1 gagged ) :poss he ) ) :arg1 ( test-01 :mod serious ) :arg4 ( test :mod serious ) ) :op2 ( test-01 :arg0 country :arg1 ( test-01 :mod serious ) ) :arg1-of ( cause-01 :arg0 ( and :op1 ( licked :arg0 he :arg1 ( some :arg1-of ( include-91 :arg2 dirtiest ) ) ) :op2 ( place :arg1-of ( include-91 :arg2 ( place :arg0-of disgust-01 :quant most ) ) ) ) )
provide-01 :arg0 company :arg1 ( wright :name ( name :op1 mr. :op2 gefilus :op3 gefilus :op4 gefilus :op5 gefilus :op6 gefilus :op7 gefilus ) ) :arg2 ( and :op1 ( assistance :arg1 ( and :op1 ( url-entity :value acid ) :op2 ( vitamin :mod c ) ) ) :op2 ( assist-01 :arg2 ( assist-01 :arg2 ( promote-02 :arg1 ( and :op1 ( continent_name_2 :arg1-of intestinal ) :op2 ( system :name ( name :op1 immune ) ) ) ) ) ) )
say-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg2 spokesman ) ) :arg1 ( insist-01 :arg0 ( force :mod air ) :arg1 ( compromised :polarity - :arg1 security :time ( time :mod any ) ) :arg1-of ( cause-01 :arg0 ( visibility :mod poor :arg1-of ( cause-01 :arg0 ( wildfires :mod poor :arg1-of ( deep-02 :degree more :compared-to usual ) ) ) ) ) )
exercise :arg0 ( agency :mod world :mod country_name_0 ) :time ( before :op1 summer :quant lot ) :purpose ( and :op1 ( establish-01 :arg0 agency :arg1 ( law :mod anti-doping ) ) :op2 ( establish-01 :arg0 agency :arg1 ( law :arg0-of ( function-01 :arg1 function-01 ) ) ) )
and :op1 ( presents :arg0 ( festival :mod ( west :part-of dinosaur ) ) :arg1 ( and :op1 tony :op2 maria ) :arg2 ( and :op1 tony :op2 maria ) ) :op2 ( resemble-01 :arg1 story :arg2 ( and :op1 romeo :op2 juliet ) ) :time ( year :mod shakespeare )
feel-01 :arg0 i :arg1 ( feel-01 :arg0 i :arg1 ( feel-01 :arg0 i :arg1 ( few :op1 ( temporal-quantity temporal-quantity_num_0 :unit month ) ) :time ( before :op1 now :duration ( few :op1 ( temporal-quantity temporal-quantity_num_1 :unit month ) ) ) ) :arg2 ( ordinal-entity ordinal-entity_num_1 ) :mod certain )
and :op2 ( have-03 :arg0 he :arg1 ( concern-01 :arg0 constitution ) :time ( case-03 :arg1 ( ban-01 :mod burqa ) ) )
and :op2 ( cause-01 :arg0 ( change-01 :arg0 ( condition :mod economy :quant some ) :arg1 ( thing :arg2-of ( purchase-01 :arg0 ( condition :mod economy ) ) ) :arg1 ( purchase-01 :arg0 condition ) ) )
group :arg1-of ( age-01 :arg2 ( temporal-quantity temporal-quantity_num_0 :unit year ) ) :domain ( group :consist-of ( person :arg0-of ( buy-01 :arg1 ( person :arg0-of buy-01 ) ) ) ) :mod in-fact
multi-sentence :snt1 ( contrast-01 :arg1 ( listen-01 :arg1 ( music :source ( or :op1 computer :op2 ( other :mod any ) ) ) ) :arg2 ( easy-05 :arg1 ( listen-01 :arg1 music ) :manner ( way :mod any :mod other ) ) ) :snt2 ( contact-01 :arg0 she :instrument ( sigh :mod lovestruck ) )
multi-sentence :snt1 ( hope-01 :mode imperative :arg0 you :arg1 ( / :arg1 ( angelique :name ( name :op1 -lrb- :op2 -lrb- :op3 kiel :op4 kiel :op5 kiel :op6 kiel :op7 kiel ) ) ) ) :snt2 ( chance-02 :arg1 ( jump :arg1 ( round :mod semi-final ) ) :time still )
and :op1 ( standstill :polarity - ) :op2 ( obligate-01 :arg1 you :arg2 ( innovation :arg0 you ) :time always :arg1-of ( cause-01 :arg0 ( mean-01 :arg1 water :arg2 ( and :op1 life :op2 water :domain water :degree most ) ) ) )
and :op1 ( work-01 :arg0 he :instrument ( blood :mod heart :quant lot :purpose ( purpose :mod water :poss he ) ) ) :op2 ( live-01 :arg0 he :arg1 ( water :mod ( literal :polarity - ) ) :condition ( even-if :op1 ( company :poss he ) ) )
threaten-01 :arg0 ( industry :mod aerospace ) :arg1 ( cost-01 :arg1 ( monetary-quantity monetary-quantity_num_0 :unit euro :mod additional ) :arg2 ( rate-entity-91 :arg1 ( monetary-quantity monetary-quantity_num_1 :unit euro :mod additional ) :arg2 ( temporal-quantity temporal-quantity_num_2 :unit year ) ) )
give-01 :arg0 this :arg1 ( influence-01 :arg0 military :mod great ) :arg2 ( year :arg1-of come-01 )
say-01 :arg0 person_name_0 :arg1 ( coordinate-01 :arg0 ( decide-01 :arg0 ( office :poss he ) :manner close ) :arg1 decide-01 )
possible-01 :polarity - :arg1 ( stop-01 :arg1 company :time ( after :op1 ( shock-01 :arg0 ( travel-01 :arg0 he ) :arg1 ( travel-01 :arg0 he :mod travel-01 ) :time ( after :op1 ( travel-01 :arg0 he :arg1 ( travel-01 :arg0 he ) ) ) ) ) :mod also :ord ( ordinal-entity ordinal-entity_num_0 ) )
oblige-02 :arg1 ( market :mod market ) :arg2 ( base-02 :arg1 ( asset :arg1-of legal-02 ) :arg2 ( operate-01 :arg1 cost-covering ) )
multi-sentence :snt1 ( include-91 :arg1 ( and :op1 ( sector :arg1-of ( include-91 :arg2 num_0 :arg3 num_0 ) ) :op2 ( sector :mod commerce ) :op3 ( sector :mod industrial ) :op4 reuth :op5 azendorf :op6 lopp :op7 zultenberg ) :arg2 ( and :op1 ( sector :mod commerce ) :op2 ( sector :mod commerce ) ) ) :snt2 ( and :op1 ( obligate-01 :arg1 ( person :quant num_0 ) :arg2 ( attack-01 :arg0 person :arg1 citizen ) ) :op2 ( neudorf :arg0 ( and :op1 ( sector :mod commerce ) :op2 neudorf :op3 reuth :op4 azendorf :op5 zultenberg ) :location purse ) )
decide-01 :arg0 ( team :mod both ) :arg1 ( thing :arg1-of ( become-01 :arg2 ( thing :arg1-of ( become-01 :arg2 ( thing :quant num_0 :arg2-of ( include-91 :arg1 ( and :op1 ( team :quant num_1 :mod each ) :op2 ( place :ord ( ordinal-entity ordinal-entity_num_2 ) :ord ( ordinal-entity ordinal-entity_num_2 ) :ord ( ordinal-entity ordinal-entity_num_2 ) :mod each ) ) ) ) ) ) ) ) :time already
miss-02 :arg0 you :arg1 ( olympics :location ( thing :quant num_0 ) ) :arg1-of ( cause-01 :arg0 ( possible-01 :polarity - :arg1 ( qualify :arg0 they :arg1 squad ) ) )
open-01 :arg1 ( scoring :time ( night :ord ( ordinal-entity ordinal-entity_num_0 ) ) :prep-with ( range-01 :arg3 ( range-01 :arg3 close ) ) ) :time ( night :mod thursday )
kill-01 :arg1 ( person :arg0-of protest-01 :quant many :arg1-of ( include-91 :arg2 ( person :arg0-of protest-01 ) ) ) :time end-01 :concession ( and :op1 ( less :compared-to ( few :op1 ( temporal-quantity temporal-quantity_num_0 :unit month ) ) ) :op2 ( go-08 :arg1 riot-01 :arg2 ( under :op1 riot-01 ) :arg1-of ( quick-02 :degree relative ) ) )
take-01 :arg0 you :arg1 ( path :direction up ) :time ( after :op1 ( move-01 :arg0 they :arg2 greenpoint ) )
contrast-01 :arg1 ( praise-01 :arg0 he :arg1 ( house :poss ( farm :mod farm ) :arg1-of simple-02 ) ) :arg2 ( praise-01 :arg0 he :arg1 ( and :op1 ( house :mod farm :mod ( farm :arg1-of simple-02 ) ) :op2 ( kitchen :poss he ) ) )
and :op1 ( move-01 :arg0 they ) :op2 ( coe :arg0 they :arg1 ( dessert :arg1-of ( prepare-02 :arg0 they :location home ) ) ) :op3 ( roosevelt :arg0 ( person :arg0-of ( have-org-role-91 :arg2 president ) ) :arg1 ( swim-01 :arg0 person ) :arg2 ( person :arg0-of ( have-org-role-91 :arg2 president ) ) :arg4 home ) :time ( after :op1 ( expel-01 :arg1 person ) )
repeat-01 :arg0 i :arg1 ( thing :quant num_0 :arg1-of reference-04 )
think-01 :arg0 i :arg1 ( see-01 :arg0 god :arg1 i :manner martyr ) :condition ( die-01 :arg1 i )
create-01 :arg0 ( plan-01 :arg1 ( use-01 :arg1 land ) :mod new ) :arg1 ( plan-01 :arg1 ( use-01 :arg1 land ) :location sub-areas ) :arg1-of ( associate-01 :arg2 ( and :op1 ( establish-01 :arg1 ( business :mod additional ) ) :op2 ( create-01 :arg1 job ) :op3 ( create-01 :arg1 job ) :op4 ( create-01 :arg1 job ) :op5 ( create-01 :arg1 job ) ) )
have-concession-91 :arg1 ( say-01 :arg0 i :arg1 ( and :op1 ( remain-01 :arg1 ( person :arg0-of ( research-01 :arg1 economy ) ) :arg3 ( person :arg0-of ( research-01 :arg1 economy ) ) ) :op2 ( person :arg0-of ( research-01 :arg1 economy ) :mod ( important :degree most ) ) ) )
include-01 :arg1 ( and :op1 ( person :arg0-of campbell ) :op2 ( person :arg0-of campbell ) :op3 ( person :arg0-of kate ) :op4 ( person :arg0-of kate ) :op5 ( person :arg0-of kate ) ) :arg2 ( woman :arg2-of cover-01 ) :time already
and :op1 ( indicted :arg1 ( campaign-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg2 ( york :mod new ) ) ) ) :arg2 ( inaction :arg1-of allege-01 ) :time ( after :op1 ( inform-01 :arg1 person :arg2 ( person :arg0-of ( have-org-role-91 :arg1 ( campaign-01 :arg0 person :arg1 ( campaign-01 :arg0 person :arg1 ( campaign-01 :arg0 person :arg1 ( campaign-01 :arg0 person :arg1 ( campaign-01 :arg0 person :arg1 ( campaign-01 :arg0 person :arg1 ( campaign-01 :arg0 person :arg1 ( campaign-01 :arg0 person :arg1 ( campaign-01 :arg0 person :arg1 ( campaign-01 :arg0 person :arg1 ( campaign-01 :arg0 person :arg1 ( oppose-01 :arg0 person :arg1 north ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) :op2 ( direct-01 :arg0 i :arg1 gun :location ( on :op1 road ) )
come-01 :arg1 indictment :time ( after :op1 ( cause-01 :arg0 ( candidate :poss ( person :arg0-of ( have-org-role-91 :arg1 republican :arg2 president ) ) ) :arg1 ( and :op1 ( shoot-02 :arg0 ( folk :ord ( ordinal-entity ordinal-entity_num_0 ) :arg0-of ( shoot-02 :arg1 ( person :arg0-of ( own-01 :arg1 gun ) ) ) ) :arg1 ( and :op1 ( person :arg0-of ( own-01 :arg1 gun ) ) :op2 ( person :arg0-of ( own-01 :arg1 gun ) ) ) ) :op2 ( recommend-01 :arg1 ( appoint-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg3 judge-01 ) ) :arg1 ( person :arg0-of ( have-org-role-91 :arg3 judge-01 ) ) ) ) ) ) ) :time ( after :op1 ( cause-01 :arg0 ( candidate :poss ( person :arg0-of ( have-org-role-91 :arg2 president ) ) ) :arg1 ( crowd :location north ) ) :mod just )
write-01 :arg0 ( person :arg0-of ( post-01 :arg1 ( post :mod ben :poss ( person :arg0-of ( have-org-role-91 :arg2 ( governor :mod vice ) ) ) ) ) ) :arg1 ( and :op1 ( '' :arg1 ( battle-01 :arg0 ( community :mod ( source :arg1-of open-04 ) :mod ad-blocking ) :mod ( kind :mod this ) ) :time already ) :op2 ( possible-01 :arg1 ( come-01 :arg1 facebook :prep-with ( solution :mod new ) :time soon ) ) ) :medium ( post :mod blog :poss ( person :arg0-of ( speak-01 :arg3 ( speak-01 :arg0 person ) ) ) )
and :op1 ( fulfilled :arg0 i :arg1 ( duty :poss i :prep-as ( and :op1 ( coach :mod head ) :op2 ( person :arg0-of ( have-org-role-91 :arg2 ( president :mod vice ) ) ) :op3 ( person :arg0-of ( have-org-role-91 :arg2 ( president :mod vice ) ) ) :op4 ( person :arg0-of ( have-org-role-91 :arg2 ( president :mod vice ) ) ) :op5 ( person :arg0-of ( have-org-role-91 :arg2 ( president :mod vice ) ) ) :op5 ( person :arg0-of ( have-org-role-91 :arg2 ( president :mod vice ) ) ) :op6 ( person :arg0-of ( have-org-role-91 :arg2 head-of-state ) ) :op7 ( person :arg0-of ( have-org-role-91 :arg2 head-of-state ) ) ) ) :time ( year :mod last ) ) :op2 ( say-01 :arg0 i :arg1 ( roy :mod 50-year-old :medium statement ) )
hope-01 :arg0 we :arg1 ( tell-01 :arg0 we :arg1 ( and :op1 ( compare-01 :arg0 we :arg1 ( thing :arg2-of ( result-01 :arg1 ( thing :arg2-of ( result-01 :arg1 ( star :mod star :mod other ) ) ) ) ) :arg2 we :manner ( compare-01 :arg1 ( thing :arg2-of ( result-01 :arg1 ( star :mod star ) ) ) ) :arg2 we ) :op2 ( history :mod even :poss ( system :mod solar ) ) :op3 ( scientist :mod research-01 ) :op4 ( scientist :mod research-01 ) :op5 ( scientist :mod research-01 ) :location ( and :op1 ( center :mod ( process-01 :arg1 infrared ) ) :op2 ( center :mod ( analyze-01 :arg1 infrared ) :location location_name_0 ) ) :time ( release-01 :arg1 press ) ) )
miss-02 :arg0 she :arg1 ( bronze :arg1 bronze ) :location ( place :ord ( ordinal-entity ordinal-entity_num_0 ) :location ( place :ord ( ordinal-entity ordinal-entity_num_0 ) ) ) :location ( place :ord ( ordinal-entity ordinal-entity_num_0 ) :location final )
say-01 :arg0 ( pattern :arg1-of simple-02 ) :arg1 ( contrast-01 :arg1 ( seek-01 :arg0 ransomware :arg1 ( look-01 :arg0 you :arg1 ( file :arg1-of modify-01 :mod recent :example ( or :op1 word :op2 excel :op3 database :op4 database :op5 ( file :mod database ) ) :example ( and :op1 image :op2 video ) ) ) :arg1-of specific-02 ) :arg2 ( pattern :arg1-of simple-02 ) )
say-01 :arg0 person_name_0 :arg1 ( include-01 :arg1 ( and :op1 ( appear-01 :arg1 ( and :op1 ( person :mod ( small :degree more ) ) :op2 ( person :mod ( small :degree more ) ) :op3 ( person :arg0-of ( have-org-role-91 :arg2 branding ) ) ) ) :op2 ( possible-01 :arg1 ( change-01 :arg1 and ) ) ) :arg2 ( '' :arg1 ( scope :poss supply-01 ) ) )
obligate-01 :arg1 state :arg2 ( and :op1 ( prudently :arg0 state ) :op2 ( determine-01 :arg0 state :time ( time :arg1-of same-01 :time-of ( threaten-01 :arg0 terrorist ) ) ) )
say-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg1 political-party_name_0 :arg2 ( boss :mod left ) ) ) :arg1 ( and :op1 ( contradiction :arg1 ( ied :mod '' ) ) :op2 ( intensification :arg1 ( right-05 :arg2 ( bring-01 :arg1 ( person :location ( country :mod this ) ) ) ) ) )
rain-01 :arg1-of ( instead-of-91 :arg2 ( star :mod shooting ) )
exemplify-01 :arg0 ( or :op1 ( case-03 :arg1 ( laboratories :arg1 ( laboratory :name ( name :op1 sleeping :op2 physicians :op3 daytime ) ) ) :op2 ( rate :mod dropouts ) :op3 ( case-03 :mod dropouts ) :op4 ( find-01 :arg0 you :arg1 ( cause :arg0-of ( cause-01 :arg1 ( dyslexia :arg1 fietze ) ) ) ) :mod total ) ) :time ( case-03 :arg1 ( snoring :mod pathological ) )
attack-01 :arg1 ( building :quant many :arg1-of ( include-91 :arg2 ( building :location riga ) ) ) :arg1-of ( cause-01 :arg0 ( thing :arg1-of ( symbolize-01 :arg2 ( develop-01 :mod this ) ) ) ) :arg1-of ( cause-01 :arg0 ( or :op1 ( have-03 :arg0 they :arg1 ( or :op1 ( slice :name ( name :op1 insert ) ) :op2 ( slash :op1 inserted :op2 freshly ) :arg1-of ( throw-01 :arg2 ( color :mod color ) ) ) ) ) )
see-01 :arg1 ( person :arg0-of ( have-rel-role-91 :arg1 ( person :quant num_0 :arg0-of ( have-rel-role-91 :arg1 person :arg2 son ) ) :arg2 mother ) ) :arg2 ( person :arg0-of ( have-rel-role-91 :arg1 person :arg2 mother ) :arg1-of single-02 :arg0-of ( have-rel-role-91 :arg1 person :arg2 mother ) ) :time ( day :mod day :poss she )
and :op2 ( give-01 :arg0 he :arg1 ( money :mod aircraft-type_name_0 ) :arg2 ( monetary-quantity monetary-quantity_num_0 :unit euro ) )
contrast-01 :arg2 ( say-01 :arg0 he :arg1 ( differ-02 :arg1 he :degree quite ) )
contrast-01 :arg2 ( say-01 :arg0 ( person_name_0 :mod other ) :arg1 ( have-03 :arg0 state :arg1 ( task :mod certain ) ) :arg1-of ( cause-01 :arg0 ( obligate-01 :arg1 state :arg2 ( and :op1 ( open-up-03 :arg0 state :arg1 opportunity ) :op2 ( need-01 :arg0 state :arg1 ( money :beneficiary it ) ) ) ) ) )
contrast-01 :arg2 ( want-01 :polarity - :arg0 ( person :mod both ) :arg1 ( isolate :arg0 person :arg1 we :arg2 ( trade-01 :mod international ) ) :concession-of ( protect-01 :arg0 ( job :mod country_name_0 ) :arg1 ( job :mod country_name_1 ) :manner simple ) ) :time ( time :arg1-of same-01 )
say-01 :arg0 ( person :arg0-of ( believe-01 :arg1 end-01 ) :arg0-of ( believe-01 :arg1 end-01 :time ( as-soon-as :op1 ( arrive-01 :arg1 person :arg4 country_name_0 ) ) ) ) :arg1 ( wrong-04 :arg1 person )
and :op1 ( important :degree very :domain ( and :op1 man :op2 woman ) ) :op2 ( house-01 :arg1 ( and :op1 man :op2 woman ) :manner separate-02 ) :medium ( study :arg1-of ( publish-01 :arg0 committee ) )
and :op1 ( recommend-01 :arg1 ( separate-02 :arg1 ( person :mod especially ) :arg2 woman ) :mod especially ) :op2 ( study-01 :arg0 study )
contrast-01 :arg2 ( say-01 :arg0 ( thing :arg1-of report-01 ) :arg1 ( spoke :arg0 ( person :arg0-of ( have-rel-role-91 :arg1 he :arg2 ( friend :mod dear :mod dear ) ) ) :arg1 ( person :arg0-of ( have-rel-role-91 :arg1 he :arg2 ( friend :mod dear ) ) ) :arg1-of repeat-01 ) :arg1-of repeat-01 )
available-02 :polarity - :arg2 ( bank :mod royal :part-of country_name_0 ) :time no-longer :location ( outside :op1 country ) :time no-longer
watch-01 :arg0 someone :arg1 ( man :mod this ) :time today
thing :arg1-of brilliant-01 :mod whole
say-01 :arg0 ( person_name_0 :arg0-of ( have-org-role-91 :arg2 senator ) ) :arg1 ( possible-01 :arg1 ( flood :domain ( rivers :mod both ) :location ( forest :arg1-of ( near-02 :arg2 baton ) ) ) )
and :op1 ( receive-01 :arg0 ( club :mod this ) :arg1 ( train-01 :arg2 they :extent entire ) ) :op2 ( commit-01 :arg1 this :arg2 ( commit-01 :arg1 family :arg2 family :arg1-of long-03 ) ) :location ( club :mod this )
pleased :arg0 we :arg1 ( possible-01 :arg1 ( expand-01 :arg0 we :arg1 ( option :mod treat-03 :arg2-of available-02 ) :arg3 ( person :arg0-of ( benefit-01 :arg1 ( person :arg1-of ( benefit-01 :arg0 it :arg1-of possible-01 ) ) ) ) ) ) :manner ( recommendation :mod preliminary )
and :op1 ( excite-01 :arg1 i :degree too ) :op2 ( die-01 :arg1 ( person :arg1-of ( resemble-01 :arg2 pig ) ) ) :mod too
add-01 :arg0 person_name_0 :arg1 ( try-01 :arg0 ( person :arg1-of employ-01 ) :arg1 ( pull-out-02 :arg0 person :arg1 ( garments :arg1-of ( out-06 :arg2 sell-01 ) ) :time ( after :op1 ( go-08 :arg1 person :arg2 ( good :mod just ) ) ) ) )
say-01 :arg2 person_name_0
say-01 :arg0 ( report-01 :arg0 press ) :arg1 ( threaten-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg1 party ) ) :arg1 ( cancel-01 :arg0 person :arg1 fund :arg3 ( support-01 :arg0 person :arg1 ( campaign-01 :arg0 person :arg1 elect-01 ) ) ) :arg1-of ( cause-01 :arg0 ( recommend-01 :arg1 ( thing :arg2-of ( result-01 :arg1 survey-01 ) :mod ( good :degree more ) ) ) ) )
contrast-01 :arg1 ( speak-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg2 sulz ) ) :arg1 ( '' :mod ( slight :degree slight ) :arg1-of ( decline-01 :location ( maier :name ( name :op1 autohaus ) ) ) ) :mod also ) :arg2 ( admit-01 :arg0 person :arg1 ( miss-01 :arg1 ( track :arg1-of ( run-09 :arg2 track ) ) ) :mod also )
sell-01 :arg0 ( brand :name ( name :op1 vw :op2 brand :op3 brand :op4 brand :op5 brand ) ) :arg1 ( rate-entity-91 :arg1 ( percentage-entity percentage-entity_num_0 ) :arg2 ( temporal-quantity temporal-quantity_num_1 :unit month ) ) :time ( month :mod previous ) :location july
and :op2 ( impact-01 :arg0 ( vote-01 :arg0 ( coup :arg1-of ( surround-01 :arg2 coup ) ) ) :arg1 ( withdraw-01 :arg1 ( person :arg0-of ( have-org-role-91 :arg2 spokeswoman ) ) ) :mod also )
claim-01 :arg0 they :arg1 ( and :op1 ( provide-01 :arg0 ( and :op1 ( shop :mod provisional ) :op2 restaurant ) :arg1 accommodation :frequency often ) :op2 ( provide-01 :arg0 and :arg1 and :arg1-of need-01 ) ) :mod also
listen-01 :arg1 ( industry :mod advertising ) :time already
multi-sentence :snt1 ( cause-01 :arg1 ( steal-01 :arg1 it :manner ( mode :polarity - ) :mod simple ) ) :snt2 ( cause-01 :arg1 ( and :op1 ( wheels :arg0 ( and :op1 ( person :arg0-of ( have-org-role-91 :arg2 head-of-state ) ) :op2 ( person :arg0-of ( have-org-role-91 :arg2 head-of-state ) ) ) :manner way :mod also :mod also ) ) )
and :op1 ( promote-02 :arg0 ( water :arg1-of drink-01 :mod ( water :arg1-of drink-01 ) :location ( kottendorf :name ( name :op1 veitsteingruppe :op2 purification :op3 bretbrunn ) ) ) :arg1 ( and :op1 ( annually :quant ( about :op1 ( distance-quantity distance-quantity_num_0 :unit meter ) ) ) :op2 ( supply-01 :arg1 water ) ) :arg2 ( person :arg0-of inhabit-01 :quant ( about :op1 num_1 ) ) )
cause-01 :arg0 ( possible-01 :arg1 ( travel-01 :arg0 ( person :mod country_name_0 ) :arg4 car ) ) :time meanwhile
stagger :arg1 ( industry :mod steel :mod german ) :arg2 ( monetary-quantity :arg2-of cost-01 :mod additional ) :source ( monetary-quantity :arg2-of cost-01 :mod additional )
contrast-01 :arg1 ( true-01 :arg1 ( apply-02 :arg1 ( state :arg1-of exile-01 :arg1-of ( impose-01 :duration initial :duration ( temporal-quantity temporal-quantity_num_0 :unit day ) :time initial ) ) ) ) :arg2 ( affect-01 :polarity - :arg0 this :arg1 ( life :poss ( turk :quant most ) ) :mod almost )
and :op1 ( let-01 :arg0 ( we :name ( name :op1 tichon :op2 -lrb- ) :name ( name :op1 -lrb- :op2 -lrb- ) :name ( name :op1 -lrb- :op2 hammer ) :name ( name :op1 -lrb- :op2 hammer ) :name ( name :op1 -lrb- ) :name ( name :op1 -lrb- :op2 hammer ) ) :arg1 hammer ) :op2 ( -rrb- :arg1 it :mod hardly :arg0-of ( recognize-02 :arg1 ( possible-01 :arg1 ( recognize-02 :arg0 amr-unknown :arg1 ( crap :quant ( many :degree so ) ) ) ) ) )
benefit-01 :arg0 ( have-03 :arg0 ( militia :arg0-of ( take-01 :arg1 power :time ( after :op1 ( unrest :mod bloody :mod bloody :location ( thing :quant num_0 ) ) ) ) ) :arg1 ( restore-01 :arg0 militia :arg1 ( and :op1 stability :op2 order ) ) )
and :op1 ( create-01 :arg0 ( and :op1 ( person :quant num_0 ) :op2 ( person :quant num_1 ) ) :arg1 ( process-02 :arg1 ( prepare-01 :arg1 intelligence :location ( and :op1 ( talk-02 :arg2 ( and :op1 ( person :arg0-of ( have-org-role-91 :arg2 head-of-state ) ) :op2 ( person :arg0-of ( have-org-role-91 :arg1 ( service :mod security :mod country_name_0 ) :arg2 member ) ) :op3 ( democrat :mod top-ranking :location ( and :op1 committee :op2 ( person :arg0-of ( have-org-role-91 :arg1 committee :arg2 member ) ) :op3 ( person :arg0-of ( have-org-role-91 :arg1 organization :arg2 member ) ) :op4 ( person :arg0-of ( have-org-role-91 :arg1 organization :arg2 member ) ) :op5 ( person :arg0-of ( have-org-role-91 :arg1 organization :arg2 member ) ) ) ) ) ) ) ) ) ) :op2 ( announce-01 :arg0 person :medium opine-01 )
and :op1 ( repressed :arg0 ( government-organization :arg0-of govern-01 :mod ( right :mod human ) ) :arg1 ( government-organization :arg0-of govern-01 ) :manner consistent ) :op2 ( restrict-01 :arg1 ( oppose-01 :arg1 country ) :arg1-of effective-04 ) :concession ( even-if :op1 ( even-if :op1 ( anything :domain country_name_0 ) ) )
speak-01 :arg0 person_name_0 :arg1 ( situation :mod economy ) :location peninsula_name_1 :time ( week :mod this ) :location peninsula_name_1
think-01 :arg0 i :arg1 ( and :op1 ( include-91 :arg1 ( method :quant num_0 :arg1-of ( include-91 :arg2 ( method :poss he ) ) ) :arg2 ( test-01 :arg0 he :arg1 ( thing :manner-of ( receive-01 :arg0 ( fan :poss he ) :arg1 ( message :mod certain :arg1-of ( receive-01 :arg0 ( fan :poss he ) ) ) ) ) ) ) :op2 ( clarify-10 :arg0 i :arg1 ( thing :manner-of ( go-08 :arg1 ( react-01 :arg0 ( person_name_0 :arg1-of ( expert-01 :arg2 communicate-01 ) ) ) ) :arg2 ( person :arg1-of ( expert-01 :arg2 communicate-01 ) :arg0-of ( observe :arg1 ( language :poss ( candidate :mod both ) ) ) ) ) :time then ) )
show-01 :arg0 ( survey-01 :arg0 ( survey-01 :arg0 publication_name_0 :arg1 ( organization_name_2 :part-of ( organization_name_2 :part-of organization_name_2 ) ) ) :mod new ) :arg1 ( lead-03 :arg0 survey-01 :arg2 ( lead-01 :arg0 ( state :location ( and :op1 country :op2 country :op3 colorado :op4 race ) ) :mod great ) )
include-01 :arg1 ( and :op1 ( prepare-02 :arg2 ( era :mod this ) ) :op2 ( prepared :arg1 ziegelman :arg2 ( butter :mod peanuts ) ) :time ( era :mod this ) ) :arg2 ( search-01 :arg0 she :arg2 book ) :mod also
and :op1 ( call-01 :arg1 it :arg2 ( whipped :mod prune ) ) :op2 ( add-01 :arg0 i :arg1 ( trick :domain it :mod common :purpose ( give-01 :arg1 ( name :mod modest ) :arg2 thing_name_0 ) ) )
sight :arg1-of rare-02
pay-01 :arg0 they :arg1 ( rate-entity-91 :arg1 ( rate :mod federal :arg0-of effective-04 ) :arg2 ( product-of :op1 num_0 :op2 num_1 ) )
increase-01 :arg1 ( import-01 :arg0 country_name_0 :arg2 country_name_1 ) :arg2 ( percentage-entity percentage-entity_num_0 ) :arg4 ( rate-entity-91 :arg1 ( monetary-quantity monetary-quantity_num_1 :unit dollar ) :arg2 ( volume-quantity volume-quantity_num_1 :unit gallon ) )
and :op1 ( fishing :mod other :location ( pond :mod nearby ) ) :op2 ( evenings :arg1 ( evenings :mod final ) :time fire :location ( and :op1 fire :op2 final ) )
and :op1 ( burkhardt :arg1 ( and :op1 burkhardt :op2 heidi ) :arg2 ( and :op1 ( dinner :mod tasty ) :op2 ( dinner :arg1-of strong-02 ) ) ) :op2 ( breakfast :arg1 and )
refer-01 :arg0 ( person :arg0-of analyze-01 ) :arg1 ( thing :arg1-of ( state-01 :arg0 ( person_name_0 :arg0-of ( head-01 :arg1 operation ) ) :time ( early :op1 ( week :mod this ) :degree more ) :degree more ) ) :arg2 ( and :op1 ( rate-entity-91 :arg1 ( electricity :quant ( about :op1 ( mass-quantity mass-quantity_num_0 :unit kilogram ) ) ) :arg2 ( temporal-quantity temporal-quantity_num_1 :unit year ) ) :op2 ( rate-entity-91 :arg1 ( electricity :quant ( about :op1 num_1 ) ) :arg2 ( temporal-quantity temporal-quantity_num_2 :unit year ) ) )
attract-01 :arg0 ( thing :arg0-of refine-01 :arg1-of ( resemble-01 :arg2 ( thing :arg1-of ( resemble-01 :arg2 ( book :mod image ) ) ) ) ) :arg1 ( page :quant ( number :mod large ) :arg1-of ( include-91 :arg2 ( fashionista :name ( name :op1 laut :op2 laut ) ) ) :quant ( number :mod large ) ) :source ( page :quant num_1 :part-of ( -rrb- :name ( name :op1 wÃ¤lzers ) ) )
and :op1 ( come-03 :arg1 decisive :arg2 ( market :mod mass ) :mod only :time ( begin-01 :arg1 ( multiple :op1 num_0 ) ) ) :op2 ( announce-01 :arg0 ceo :arg1 ( job :arg1-of ( announce-01 :arg0 ceo ) :arg1-of ( announce-01 :medium ( introduce-02 :arg1 ( iphones :arg1 iphones ) ) ) ) )
say-01 :arg0 ( thing :arg1-of state-01 :mod joint ) :arg1 ( possible-01 :arg1 ( confirm-01 :arg0 ( and :op1 unite-01 :op2 ( union :mod rmt ) ) :arg1 ( agree-01 :arg0 we :arg1 ( restart-01 :arg0 we :arg1 ( process-02 :arg1 settlement ) :arg2 ( dispute-01 :time current ) ) ) ) :manner joint )
star :quant many :location ( cluster :mod star :mod this :arg1-of ( originate-01 :arg2 around :time ( before :op1 now :quant ( around :op1 ( temporal-quantity temporal-quantity_num_0 :unit year ) ) ) ) ) :time now :arg1-of ( cause-01 :arg0 ( reach-01 :arg1 ( age :mod adult ) ) )
stars :arg0 ( star :mod this ) :arg1 ( star :quant ( amount :mod large ) :quant ( amount :mod large ) ) :time ( peak-01 :arg1 rate )
star :mod ( baseball :mod controversy )
reduce-01 :arg1 ( lock :arg1-of legal-02 ) :arg4 ( encounters :quant num_0 ) :time ( after :op1 ( reduce-01 :arg1 ( dispute-01 :arg1-of legal-02 ) ) )
contrast-01 :arg1 ( target-01 :arg1 ( person :arg1-of private-03 :arg0-of use-01 ) ) :arg2 ( change-01 :arg1 ( attack-01 :arg0 company ) :time ( month :mod last ) :manner fast )
engine :mod another :domain ( engine :name ( name :op1 1.5-liter :op2 petrol ) :prep-with ( hp :quant num_0 :name ( name :op1 / :op2 num_1 :op3 num_1 ) ) )
available-02 :arg2 ( connectivity :mod full ) :arg3 ( equipment :mod top :example ( and :op1 touchscreen :op2 nautical :op3 ( intend-01 :mod app ) :op4 more ) )
offer-01 :arg0 ( person :mod country_name_0 ) :arg1 ( car :mod versatile ) :manner honda
go-02 :arg0 you :arg4 bed :time ( time :arg1-of normal-02 :poss you ) :time ( after :op1 war_name_0 )
exist-01 :polarity - :arg1 ( and :op1 ( designer :arg1 ( and :op1 ( door :mod interior ) :op2 ( door :mod interior ) :poss ( and :op1 ( person :arg0-of ( have-org-role-91 :arg2 head-of-state ) ) :op2 ( person :arg0-of ( have-org-role-91 :arg1 police :arg2 police ) ) ) ) :op2 ( person :arg0-of ( have-org-role-91 :arg1 police :arg3 ( lead-02 :arg0 person ) ) ) ) ) :arg1-of ( obvious-01 :degree so )
multi-sentence :snt1 ( amr-unknown
multi-sentence :snt1 ( value-interval :op1 num_0 :op2 num_1 ) :snt2 ( sport :domain sport )
distance :arg1 ( langer :mod bernhard ) :arg2 ( animal :mod large )
strike-01 :arg2 ( person :arg0-of assist-01 )
and :op1 ( distribute-01 :arg1 ( thing :arg1-of distribute-01 ) ) :op2 ( accuse-01 :arg1 country_name_0 :arg2 ( ankara :arg1 country :mod backs ) )
have-org-role-91 :arg0 he :arg1 ( and :op1 ( person :arg0-of ( have-org-role-91 :arg2 ( minister :mod prime :mod prime ) ) ) :op2 ( secretary :mod defense ) ) :time ( before :op1 ( have-org-role-91 :arg0 he :arg2 ( minister :mod deputy :mod prime ) ) )
arrive-01 :arg1 ( putin :arg1 power ) :arg3 ( person :quant ( multiple :op1 num_0 ) :arg1-of ( familiarize-01 :arg2 ( person :quant num_1 :arg1-of ( familiarize-01 :arg2 he :degree most ) ) ) )
request-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg1 ( banff :mod banff ) :arg3 ( apprentice-01 :arg0 person ) ) ) :arg1 ( assist-01 :arg0 person :arg1 fish :arg2 ( identification :poss fish ) )
obligate-01 :arg2 ( think-01 :arg1 ( get-05 :arg1 you :arg2 facility_name_2 :mod again :destination ( apply-02 :arg1 ( price-01 :arg1-of fix-03 ) ) ) )
ask-01 :arg0 i :arg1 amr-unknown :arg2 amr-unknown :manner constant
contrast-01 :arg1 ( use-01 :arg1 ( system :name ( name :op1 flood :op2 flood ) ) :arg2 ( system :name ( name :op1 flood ) ) :time ( early :op1 ( date-entity decade_date-entity_0 ) ) ) :arg2 ( rain-01 :location ( area :arg1-of mobile-02 :mod ( further :degree more ) ) )
say-01 :arg0 ( man :arg1-of ( include-91 :arg2 ( man :arg0-of observe-01 ) ) ) :arg1 ( and :op1 ( person :arg0-of observe-01 :arg1-of ( close-10 :arg2 ( close-10 :arg1 man :arg2 ( rain-01 :quant num_0 :mod duty ) :time tomorrow ) ) :arg1-of ( close-10 :arg2 close ) ) :op2 ( person :arg0-of observe-01 ) )
draw-02 :arg0 ( and :op1 ( nadal :arg1 ( star :mod tennis ) ) :op2 ( actor :name ( name :op1 josh ) ) :op3 ( hartnett :name ( name :op1 josh :op2 josh ) ) ) :arg2 ( and :op1 ( nadal :mod tennis ) :op2 ( hartnett :name ( name :op1 josh :op2 josh :op3 josh ) ) ) :arg1-of continue-01 :mod further
and :op1 ( hope-01 :arg0 i :arg1 ( have-03 :arg0 ( and :op1 ( person :quant num_0 ) :op2 ( person :name ( name :op1 dexter ) ) ) :arg1 ( and :op1 ( form :mod form ) :op2 ( eye :part-of person ) ) :arg1-of ( resemble-01 :arg2 ( face-01 :arg0 person :arg1 ( and :op1 form :op2 eye ) ) ) ) :mod actual )
multi-sentence :snt1 ( write-01 :arg0 ( person :arg0-of ( use-01 :arg1 twitter ) :mod another ) :arg1 ( write-01 :arg0 person ) ) :snt2 ( byronmacdonald :mode interrogative :mod wow )
live-01 :arg0 family :location house :arg1-of ( cause-01 :arg0 ( call-01 :arg1 family :arg2 ( temporal-quantity temporal-quantity_num_0 :unit year ) :location house :arg1-of regular-02 ) )
hope-01 :arg0 i :arg1 ( and :op1 ( donate-01 :arg0 ( develop-01 :mod this ) ) :op2 ( message-01 :arg0 i :arg1 ( tolerate-01 :polarity - :arg1 ( behave-01 :arg0 ( person :arg0-of anti-social ) :mod some ) ) ) )
multi-sentence :snt1 ( multi-sentence :snt1 ( amr-unknown
say-01 :arg2 person_name_0
win-01 :arg0 ( athletes :arg1-of light-06 :poss country ) :arg1 ( drone :mod light ) :location ( wm :quant num_0 :location peking )
convince-01 :arg0 ( person_name_0 :arg0-of ( have-org-role-91 :arg1 ( democrat :part-of senate ) :arg2 anfÃ¼hrer ) ) :arg1 ( nominate-01 :arg0 ( surgeon :mod hillary ) :arg1 ( person :arg0-of ( have-org-role-91 :arg3 judge-01 ) ) :arg3 ( gericht :arg1-of ( high-02 :degree most ) ) ) :arg2 ( person :arg0-of ( have-org-role-91 :arg1 democrat :arg3 ( lead-02 :arg0 person :arg1 democrat ) ) )
eddy :mod recall :location ( around :op1 term )
effect-03 :arg0 ( change-01 :arg1 car ) :arg1 ( effect-03 :polarity - :arg0 change-01 :mod negative ) :mod of-course
believe-01 :arg0 ( person :quant num_0 :arg1-of ( work-09 :arg2 ( person :arg0-of ( have-rel-role-91 :arg2 sister ) ) ) ) :arg1 ( believe-01 :arg0 i :arg1 ( apply-02 :arg1 ( customer :quant many :arg1-of ( meet-01 :arg0 ( customer :quant many ) ) ) :arg2 ( profile :mod yougov ) ) :mod also ) :li num_0
court :mod country_name_0
implement-01 :arg0 they :arg1 ( and :op1 ( accommodation :mod ( offer-01 :arg0 ( and :op1 ( business :mod provisional ) :op2 restaurant ) ) :op2 ( offer-01 :arg0 ( person :mod emergency ) :arg1 and :mod emergency ) :frequency often ) )
multi-sentence :snt1 ( amr-unknown
and :op1 ( go-06 :arg0 i :arg1 ( offer-01 :arg0 it ) :arg2 ( thing :arg1-of ( offer-01 :arg0 it ) ) :mod only ) :op2 ( have-03 :arg0 i :arg1 ( person :quant ( more-than :op1 num_0 ) :arg0-of use-01 ) )
multi-sentence :snt1 ( and :op1 ( change-01 :arg0 political-party_name_0 :arg1 ( time :quant 1/2 ) :arg2 ( time :quant 1/2 ) ) :op2 ( close-01 :arg0 country :arg1 ( gap :mod fijianische ) ) :op3 ( close-01 :arg0 country :arg1 ( gap :mod fijianische ) :time ( after :op1 now :quant ( half :ord ( ordinal-entity ordinal-entity_num_0 ) ) ) ) ) :snt2 ( good :arg1 ( thing :arg2-of ( condition-01 :arg1 ( time :ord ( ordinal-entity ordinal-entity_num_0 ) ) ) ) :time ( until :op1 ( after :op1 ( zwischenplay :mod brillianten :consist-of fiji ) ) ) )
human :mod ( old :degree more ) :arg0-of ( live-01 :manner alone :manner ( way :mod such ) ) :arg0-of ( cause-01 :arg1 ( concentrate :polarity - :arg0 human :arg1 human :mod only ) )
and :op1 ( show-01 :arg0 ( study-01 :mod some :arg0-of ( react-01 :arg1 ( sensitively :degree more ) :prep-to ( person :arg0-of mine-01 ) ) ) :arg1 ( equal-01 :arg1 woman :arg2 ( or :mode interrogative :op1 ( mothers :arg1 it :time already ) :op2 ( report-01 :polarity - :arg0 woman ) ) :arg1-of complete-02 ) :mod also ) :op2 ( report-01 :arg0 study-01 :arg1 ( scheumann :mod biologists ) )
and :op1 ( refer-01 :arg0 ( world :mod old :mod old ) :arg1 ( income :poss ( supplement :mod food ) ) ) :op2 ( fail-01 :arg1 ( barrier :poss ( agency :mod world :arg0-of ( have-org-role-91 :arg1 ( agency :mod world ) ) ) ) :arg2 milder ) :op3 ( run-02 :arg0 ( july :quant num_0 ) :time already )
activity-06 :arg1 streetscooter :location ( road :quant ( between :op1 num_0 :op2 num_1 ) )
multi-sentence :snt1 ( process :mode interrogative :arg1 ( process-02 :mod this ) ) :snt2 ( delay-01 :mode interrogative :arg0 ( and :op1 ( person :arg0-of analyze-01 ) :op2 ( person :arg0-of analyze-01 ) ) :arg1 ( thing :arg1-of ( opine-01 :arg0 ( thing :arg1-of ( opine-01 :arg0 ( thing :arg1-of ( opine-01 :arg0 ( thing :arg1-of ( opine-01 :arg0 ( thing :arg1-of ( opine-01 :arg0 ( thing :arg1-of ( opine-01 :arg0 ( thing :arg1-of ( opine-01 :arg0 ( thing :arg1-of ( opine-01 :arg0 ( thing :arg1-of ( opine-01 :arg0 ( thing :arg1-of ( opine-01 :arg0 ( thing :arg1-of ( opine-01 :arg0 i ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) )
and :op1 ( come-01 :arg1 ( year :quant num_0 ) :arg3 it ) :op2 ( go-08 :arg1 everything :arg2 wrong ) :time then
contrast-01 :arg2 ( feel-01 :arg0 i :arg1 ( amr-unknown :time ( watch-01 :arg0 i :arg1 ( play-02 :arg0 ( something :mod this ) :arg1 something ) ) ) :mod also )
say-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg1 ( radio :mod conservative ) :arg2 moderator ) ) :arg1 ( help-01 :arg0 person :arg1 ( want-01 :arg0 person :arg1 ( weaken-01 :arg0 person :arg1 ( state-01 :arg0 person :arg1 ( want-01 :arg0 person :arg1 ( know-01 :arg0 person :arg1 ( want-01 :arg0 person :arg1 ( know-01 :arg0 person :arg1 ( want-01 :arg0 person :arg1 ( know-01 :arg0 person :arg1 ( want-01 :arg0 person :arg1 ( know-01 :arg0 person :arg1 ( want-01 :arg0 person :arg1 ( know-01 :arg0 person :arg1 ( want-01 :arg0 person :arg1 ( know-01 :arg0 person :arg1 ( want-01 :arg0 person :arg1 ( know-01 :arg0 person :arg1 ( want-01 :arg0 person :arg1 ( know-01 :arg0 person :arg1 ( want-01 :arg0 person :arg1 ( know-01 :arg0 person ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) :arg2 ( radio :mod conservative )
and :op1 ( have-condition-91 :arg1 ( animal :arg1-of ( long-03 :arg2 ( distance-quantity distance-quantity_num_0 :unit kilometer :mod full ) ) ) :arg2 ( depend-01 :arg0 animal :arg1 animal ) ) :op2 ( half :degree most :compared-to ( speed :mod ( speed :mod maximum ) :prep-with ( speed :mod this ) ) ) :condition ( depend-01 :arg0 it :arg1 it )
say-01 :arg0 ( person :arg0-of research-01 :arg1-of ( know-02 :arg2 ( person :arg0-of research-01 ) ) ) :arg1 ( know-01 :arg0 person )
have-condition-91 :arg1 ( get-01 :arg0 ( person :mod ethnic-group_name_0 ) :arg1 ( generation :mod new :mod only ) ) :arg2 ( get-01 :arg0 ( person :mod ethnic-group_name_0 ) :arg1 ( generation :mod new :mod only ) )
indicate-01 :arg0 ( and :op1 ( person :arg0-of ( have-org-role-91 :arg2 head-of-state ) ) :op2 ( person :arg0-of ( have-org-role-91 :arg2 lawyer ) ) :op3 ( lawyer :poss person ) ) :arg1 ( inspect-01 :arg1 tax-01 ) :arg2 ( reason :arg0-of ( cause-01 :arg1 ( refuse-01 :arg0 ( office :mod revenue ) ) ) )
cause-01 :arg0 ( stand-01 :arg1 ( and :op1 ( round :ord ( ordinal-entity ordinal-entity_num_0 ) ) :op2 ( round :quant num_1 :mod final ) ) :time today :time ( day :ord ( ordinal-entity ordinal-entity_num_2 ) :part-of ( wettbewers :arg1-of ( stand-01 :arg2 security ) ) ) ) :arg1 focus-01
request-01 :arg0 we :arg1 ( and :op1 ( person :arg0-of ( have-org-role-91 :arg1 ( person :arg0-of ( have-org-role-91 :arg1 federal :arg2 ( minister :mod federal ) ) ) :arg2 ( minister :mod chief ) ) ) :op2 ( person :arg0-of ( have-org-role-91 :arg1 federal :arg2 ( minister :mod federal ) ) ) :op3 ( person :arg0-of ( have-org-role-91 :arg1 ( country :arg0-of ( have-org-role-91 :arg2 queen ) ) :arg2 ( minister :topic justice ) ) ) :op4 ( person :arg0-of ( have-org-role-91 :arg1 ( country :arg0-of ( have-org-role-91 :arg2 queen ) ) :arg2 ( minister :topic justice ) ) ) :op5 ( person :arg0-of ( have-org-role-91 :arg1 ( country :arg0-of ( have-org-role-91 :arg2 queen ) ) :arg2 ( minister :mod vice ) ) ) ) :purpose ( waiving :arg0 we :arg1 ( cut-02 :mod this ) ) :arg0-of ( cause-01 :arg1 ( possible-01 :arg1 ( receive-01 :arg0 person :arg1 ( assist-01 :arg1-of legal-02 ) ) ) )
time :time-of ( view-02 :arg1 ( need-01 :arg0 ( and :op1 ( center :mod community :mod community ) :op2 ( community :mod customer :poss they ) ) :arg1 ( work-01 :arg0 ( government-organization :arg0-of govern-01 ) :arg1 ( work-01 :mod important :mod this ) ) ) ) :time now
accuse-01 :arg0 ( campaign-01 :mod elect-01 :mod trumps ) :arg1 ( person :arg1-of employ-01 ) :time ( after :op1 ( pull-01 :arg0 ( weapon :arg1-of allege-01 ) :arg1 ( person :arg1-of employ-01 ) ) )
and :op2 ( come-01 :arg1 ( person :arg0-of ( provide-01 :arg1 ( and :op1 ( company :arg0-of provide-01 ) :op2 ( group :mod telecommunication ) ) ) :time current :mod well ) )
announce-01 :arg0 ( person_name_0 :arg1-of ( publish-01 :time ( after :op1 adolescence :quant ( between :op1 ( temporal-quantity temporal-quantity_num_0 :unit day ) :op2 ( temporal-quantity temporal-quantity_num_1 :unit day ) :mod only ) ) ) ) :arg1 ( announce-01 :arg0 ( office :mod post :mod post ) :arg1 ( possible-01 :arg1 ( update-01 :arg0 ( person :arg0-of use-01 ) :arg1 ( filter :poss office :location program ) :purpose ( block-01 :arg0 person :arg1 ( advertisements :location ( network :mod society ) ) :arg1-of possible-01 ) ) ) ) :time ( after :op1 ( expel-01 :arg0 person :arg1 ( blockings :mod broadcast-program_name_0 ) :location ( side :mod desktop :poss person ) ) ) :mod plus
multi-sentence :snt1 ( want-01 :polarity - :arg0 amr-unknown :arg1 ( invest-01 :arg0 amr-unknown :arg2 ( much :degree so ) ) ) :snt2 ( start-01 :arg1 ( car :arg1-of ( start-01 :arg3 ( monetary-quantity monetary-quantity_num_0 :unit euro ) ) ) :arg3 ( monetary-quantity monetary-quantity_num_1 :unit euro ) )
multi-sentence :snt1 ( cause-01 :arg0 ( endanger-01 :arg1 ( traffic :mod air :arg1-of ( average-01 :arg2 ( traffic :mod air ) ) :arg1-of ( average-01 :arg2 ( traffic :mod air ) ) ) ) :arg1 ( az :arg0 ( court :mod region :arg1-of ( high-02 :degree more ) ) :arg1 ( az :quant ( between :op1 num_0 :op2 num_1 ) ) ) ) :snt2 ( u :li num_1 :arg1 ( / :quant num_1 ) )
have-03 :polarity - :arg0 ( person :quant num_0 ) :arg1 ( investigate-01 :arg0 person ) :mod actual
multi-sentence :snt1 ( amr-unknown
recommend-01 :arg1 ( hold-01 :arg0 ( person :quant num_0 ) :arg1 it :mod also ) :arg2 country :mod exact
recognize-02 :arg0 ( person :quant ( around :op1 num_0 ) :arg0-of ( have-org-role-91 :arg1 ( person :arg0-of ( have-org-role-91 :arg2 ( official :mod civilian ) ) ) :arg2 official ) ) :arg1 gang :mod again :arg0-of ( admit-01 :arg1 ( policeman :arg0-of ( admit-01 :arg1 policeman :source ( crime-02 :time past ) ) ) ) :mod again
and :op1 ( commit-02 :arg0 ( and :op1 ( woman :quant num_0 ) :op2 ( man :quant num_0 ) ) :arg1 ( and :op1 ( woman :quant num_0 ) :op2 ( man :quant num_0 ) ) :time since :time ( middle :op1 ( middle :part-of ( year :mod this ) ) ) ) :op2 ( thereby :arg1 and :arg2 ( level :mod community ) :mod particular )
multi-sentence :snt1 ( concern-01 :arg0 ( act-02 :arg0 ( person :arg0-of ( concern-01 :arg1 violence ) ) ) :arg1 she ) :snt2 ( appeasing :polarity - :domain ( person :mod ( certain :polarity - ) ) )
say-01 :arg0 ( and :op1 ( person :arg0-of ( have-org-role-91 :arg1 ( person :arg0-of ( have-rel-role-91 :arg2 son ) ) :arg2 spokesman ) ) :op2 ( person :arg0-of ( have-rel-role-91 :arg1 person :arg2 daughter ) ) ) :arg1 ( and :op1 ( shock-01 :arg1 they ) :op2 ( destroy-01 :arg1 they :location ground ) )
wage-01 :arg0 ( wage-01 :arg1 ( monetary-quantity monetary-quantity_num_0 :unit dollar ) :mod minimum :time current )
conduct-01 :arg0 ( media :mod state-controlled ) :arg1 ( attack-01 :arg1 ankara :mod full ) :duration ( multiple :op1 ( temporal-quantity temporal-quantity_num_0 :unit month ) )
differ-02 :mod ( big :degree most ) :arg1-of ( contrast-01 :arg2 ( serve-01 :arg0 ( and :op1 country_name_0 :op2 ( person :arg0-of ( support-01 :arg1 ( side :arg0-of oppose-01 ) ) ) ) :arg1 ( side :arg0-of oppose-01 ) ) ) :mod ( big :degree most )
claim-01 :arg0 ( man :mod both ) :arg1 ( resign-01 :arg0 ( man :mod both ) :arg1 ( request-01 :arg0 man ) ) :medium ( meet-03 :arg0 ( person :arg0-of ( have-org-role-91 :arg2 president ) ) :medium television )
lead-03 :arg0 ( rise-01 :arg1 game :arg1-of ( significant-02 :arg1-of ( possible-01 :polarity - ) ) ) :arg2 ( rise :arg1 game ) :frequency ( rate-entity-91 :arg3 ( temporal-quantity temporal-quantity_num_0 :unit day ) ) :location we
say-01 :arg0 station :arg1 ( spotted :arg1 boy :location ( seat :mod front :part-of ( car :arg1-of ( be-located-at-91 :arg2 ( condition :arg1-of critical-02 ) ) ) ) )
possible-01 :arg1 ( witness-01 :arg0 ( person :mod world ) :arg1 ( perform-02 :arg0 ( world :mod three-time ) :arg1 ( and :op1 biles :op2 douglas :op3 douglas ) :mod incredible ) :arg1-of ( cause-01 :arg0 ( deliver-01 :arg0 world :arg1 ( unexpected :mod gymastic ) ) ) ) :time now
become-01 :arg1 he :arg2 ( fair :prep-to ( reputation :poss he ) ) :medium film
and :op1 ( fascinate-01 :arg0 ( something :arg1-of ( see-01 :arg0 you ) ) ) :op2 ( explain-01 :arg0 something :arg1 ( benefit-01 :arg1 ( person :mod probiotics ) ) :mod also )
multi-sentence :snt1 ( have-03 :arg0 we :arg1 ( problem :mod huge :topic utah ) ) :snt2 ( say-01 :arg0 ( person :arg0-of ( ask-01 :arg1 ( support-01 :arg0 person :arg1 he :topic ( state :arg1-of key-02 :example ( or :op1 ohio :op2 florida :op3 virginia ) ) ) ) ) :arg1 ( problem :mod huge ) )
multi-sentence :snt1 ( do-02 :arg0 he :arg1 truth ) :snt2 ( tell-01 :mode imperative :arg0 you :arg1 truth )
threaten-01 :arg0 ( threaten-01 :arg0 country_name_0 :mod subsequent ) :time ( after :op1 ( affair :mod doping :ord ( ordinal-entity ordinal-entity_num_0 ) :location olympics ) )
work-01 :arg0 ( magazine_name_0 :mod treats ) :arg1 ( bring :arg0 magazines :arg1 ( snow :quant num_0 :mod pirelli-inspired ) :arg3 ( score-entity :op1 num_0 :op2 num_1 ) )
and :op1 ( be-located-at-91 :arg1 ( business :mod family ) :arg2 here :time final ) :op2 ( refer-01 :arg0 business :arg1 ( history :arg1-of long-03 ) )
doubt-01 :polarity - :arg1 ( return-01 :arg1 he :arg4 work-01 :time ( after :op1 ( end-01 :arg1 ( work-01 :arg1 transnational ) ) ) )
contrast-01 :arg2 ( status :mod tolerance :prep-with terror :domain amr-unknown )
meet-01 :arg0 ( slash :op1 ( person :arg0-of ( have-org-role-91 :arg2 vw ) ) :op2 ( person :arg0-of kba ) ) :arg1 ( thing :arg2-of ( obligate-01 :arg1 ( commission :mod investigative :poss i ) ) )
make-01 :arg0 ( and :op1 ( rate :mod ( interest :arg1-of penalize-01 ) ) :op2 ( land :mod thuringian ) :op3 ( land :mod altenburger ) ) :arg1 headlines :arg2 ( branch :mod skatbank :poss and ) :arg1-of ( cause-01 :arg0 ( and :op1 ( rate :mod ( interest :arg1-of penalize-01 ) :arg1-of ( cost-01 :arg2 ( monetary-quantity monetary-quantity_num_0 :unit euro ) ) ) :op2 ( land :mod thuringian ) ) )
and :op1 ( stuart :arg0 ( person :source ( and :op1 ( person :arg0-of ( have-rel-role-91 :arg1 i :arg2 sister ) ) :op2 ( person :quant num_1 :mod young :arg0-of ( have-rel-role-91 :arg1 i :arg2 sister ) ) :op3 ( man :quant num_2 :mod young ) :op4 ( man :quant num_2 :mod young ) :op5 ( man :quant num_2 :mod young ) ) ) :arg1 i :arg2 ( and :op1 ( number :quant-of ( data :mod ( data :name ( name :op1 -lrb- ) ) ) ) :op2 ( man :quant num_1 :mod young ) :op3 ( man :quant num_2 ) :op4 ( man :quant num_2 ) :op5 ( man :quant num_2 ) :op6 ( man :quant num_3 ) :op6 ( man :quant num_3 ) :op6 ( man :quant num_3 ) :op6 ( man :quant num_3 ) :op7 ( man :arg1-of ( age-01 :arg2 ( temporal-quantity temporal-quantity_num_2 :unit hour ) ) ) :op7 ( woman :quant num_3 ) ) )
multi-sentence :snt1 ( resemble-01 :arg1 we :arg2 ( person :arg0-of ( work-01 :arg2 society ) :poss they ) ) :snt2 ( have-03 :arg0 we :arg1 ( person :arg2-of ( staff-01 :arg1 ( person :mod record ) ) ) )
multi-sentence :snt1 ( stop-01 :arg0 i :arg1 ( business :mod ( generation :mod new ) :mod ( generation :mod new ) :mod ( generation :mod new ) ) ) :snt2 ( outfitters :mode expressive )
and :op1 ( lower-05 :arg1 it :arg2 ( operation :name ( name :op1 measure ) ) :manner simple ) :op2 ( lower-05 :arg1 it :arg2 ( operation :name ( name :op1 smooth ) :arg1-of smooth :mod also ) ) :prep-in order
introduce-02 :arg0 ( person :arg0-of ( have-org-role-91 :arg1 political-party_name_0 ) ) :arg1 ( change-01 :mod fundamental ) :arg2 ( and :op1 ( change-01 :arg0 person :arg1 ( gap :mod fijian ) ) :op2 ( close-01 :arg0 person :arg1 ( gap :mod fijian ) ) :duration ( temporal-quantity temporal-quantity_num_0 :unit minute :mod whole ) ) :time ( until :op1 ( go-06 :arg0 tuisova :arg1 ( midplay :arg1-of brilliant-01 :arg1-of ( run-01 :arg0 fiji ) ) ) )
contrast-01 :arg1 ( affect-01 :arg0 ( duty :mod import-01 :topic ( import-01 :arg1 import-01 ) ) :arg1 effect ) :arg2 ( emerge-02 :arg0 ( puzzle-01 :arg1 economy :location country_name_0 ) )
and :op1 ( sing-01 :arg0 ( seniors :degree most ) :arg1 ant ) :op2 ( share-01 :arg0 i :arg1 ( thing :arg2-of ( tattoo-01 :arg1 ( music :name ( name :op1 describing ) ) ) ) )
and :op1 ( -lrb- :arg1 ( rate-entity-91 :arg1 num_0 :arg2 ( temporal-quantity temporal-quantity_num_0 :unit year ) ) :arg2 ( -lrb- :name ( name :op1 jamaica :op2 jamaica :op3 jamaica :op4 world :op5 world :op6 world :op7 world ) ) ) :op2 ( obligate-01 :arg1 ( and :op1 ( champion :name ( name :op1 two-time ) ) :op2 ( world :mod seven-time ) ) :arg2 ( sit-down-02 :arg1 and ) :time ( after :op1 ( prove-01 :arg1 ( take-01 :arg1 it :arg3 oxycodon ) ) ) ) :li num_0
have-03 :arg0 she :arg1 ( toothaches :arg1-of strong-02 ) :time ( after :op1 ( surgery-01 :arg1 she :arg2 ( defend-01 :arg0 she :arg1 29-year-old ) ) )
say-01 :arg0 police :arg1 ( and :op1 ( kill-01 :arg1 ( person :mod country_name_0 ) ) :op2 ( injure-01 :arg1 ( person :quant ( about :op1 num_0 ) ) :arg2-of ( include-01 :arg1 ( and :op1 ( person :quant num_1 ) :op2 ( person :quant num_1 :mod ethnic-group_name_1 ) :op3 ( person :quant num_1 :mod ethnic-group_name_1 ) :op4 ( person :quant num_1 :arg0-of ( have-org-role-91 :arg2 head-of-state ) ) ) ) ) )
say-01 :arg0 person_name_0 :arg1 ( agree-01 :arg0 ( authority :poss he ) :arg1 ( office :mod nation ) :manner close )
know-02 :polarity - :arg1 ( person :arg2-of suspect-01 :arg1-of ( include-91 :arg2 ( person :arg2-of ( suspect-01 :arg1 ( attack-01 :mod asylum-shelter ) ) :quant many ) ) ) :arg2 ( or :op1 ( person :arg2-of criminal-03 ) :op2 ( person :arg0-of ( support-01 :arg1 ( scene :mod right ) ) ) :manner political )
prepare-02 :arg1 ( person :mod all :arg0-of ( have-org-role-91 :arg2 habite ) ) :arg2 ( race :mod big ) :arg1-of ( cause-01 :arg0 prepare-02 )
lead-03 :arg0 gfk :time ( after :op1 disappoint-01 )
detail-01 :mode imperative :arg0 you :arg1 ( want-01 :arg0 you :arg1 ( call-01 :arg0 you :arg1 ( person :arg0-of ( have-org-role-91 :arg1 corporation :arg2 ( governor :mod vice ) ) ) :arg2 friday ) :degree total )
report-01 :arg0 ( report :mod anonymous :arg1-of ( create-01 :arg0 ( and :op1 ( person :arg0-of ( have-org-role-91 :arg1 ( committee :mod ( force :arg1-of arm-01 ) :arg0-of ( have-org-role-91 :arg1 ( committee :mod ( force :arg1-of arm-01 ) ) :arg2 member ) ) :arg2 member ) ) :op2 ( person :arg0-of ( have-org-role-91 :arg1 ( committee :mod intelligence ) :arg2 member ) ) :op3 ( person :arg0-of ( have-org-role-91 :arg1 ( agency :mod intelligence ) :arg2 member ) ) :op4 ( report-01 :arg0 ( person :arg0-of ( analyze-01 :arg1 intelligence ) :mod central ) ) :op5 ( report-01 :arg0 ( person :arg0-of ( analyze-01 :arg1 intelligence ) :mod central ) ) ) ) :arg1 ( change-01 :arg0 ( person :arg0-of ( analyze-01 :arg1 intelligence ) :mod central ) :arg1 ( fight-01 :arg0 person :arg1 ( state :mod religious-group_name_0 ) ) :manner anonymous ) )
contrast-01 :arg1 ( ' :arg0 they :arg1 ( or :op1 ( line :name ( name :op1 finishing ) ) :op2 ( point :arg1-of start-01 ) :op3 ( point :arg1-of start-01 ) :mod just ) ) :arg2 ( goal :mod ( hitch :mod another ) :mod another :domain ( or :op1 world :op2 olympics ) )
broadcast-01 :arg0 ( person :mod independent ) :arg1 ( temporal-quantity temporal-quantity_num_0 :unit hour :mod final ) :arg2 ( block-01 :arg1 ( block :quant num_0 ) :time ( afternoon :mod last ) )
feel-02 :arg0 ( and :op1 ( person :arg0-of ( have-org-role-91 :arg1 ( group :mod ethnic :part-of ( group :mod ethnic ) ) :arg2 member ) ) :op2 ( person :arg0-of ( have-org-role-91 :arg1 ( group :mod ethnic :part-of tigridge ) :arg2 member ) ) :op3 ( person :arg0-of ( have-org-role-91 :arg1 ( group :mod ethnic :part-of tigridge ) :arg2 member ) ) :op4 ( person :arg0-of ( have-org-role-91 :arg1 ( group :mod ethnic ) :arg2 member ) ) :op5 ( person :arg0-of ( have-org-role-91 :arg1 ( group :mod ethnic ) :arg2 member ) ) ) :arg1 ( and :op1 military :op2 trade-01 :op3 trade-01 :op4 politics )
contrast-01 :arg2 ( bring-up-02 :arg0 ( person :arg0-of ( have-org-role-91 :arg1 ( henchmen :name ( name :op1 mr. :op2 trumps ) ) :arg2 henchmen ) ) :arg1 ( person :arg0-of ( protest-01 :arg1 fellow ) :mod fellow :mod fellow :poss person ) :arg2 ( situation :arg1-of comfortable-02 ) :purpose ( face-01 :arg0 person :arg1 he ) :concession ( thing :manner-of ( provocative :domain ( thing :arg1-of ( state-01 :arg0 he ) ) ) ) :arg1-of ( cause-01 :arg0 ( focus-01 :arg0 ( thing :arg1-of ( state-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg2 president ) ) ) ) ) ) )
use-01 :arg0 ( person :mod country_name_0 ) :arg1 ( distributor :arg1-of ( same-01 :arg2 ( distributor :mod same ) ) ) :arg2 ( model :mod same )
be-temporally-at-91 :arg1 ( diameter :poss she ) :arg2 ( announce-01 :arg0 they :arg1 ( animal :quant num_0 :accompanier station ) :time ( before :op1 ( spitsbergen-altitude :arg1 animal ) ) )
recommend-01 :arg1 ( invest-01 :arg0 ( animal :mod ( large :degree very ) ) :arg1 ( resource :poss animal ) :arg2 ( life :arg1-of long-03 ) ) :arg1-of instead-of-91
available-02 :arg2 ( passport :arg1-of ( call-01 :manner so ) ) :location country_name_0 :time now
contrast-01 :arg1 ( home :domain luxembourg :prep-to ( industry :mod fund-01 :mod large ) ) :arg2 ( infrastructure :mod dublin )
support-01 :arg0 person_name_0 :arg1 ( scheme :arg1-of ( name-01 :arg2 ( and :op1 ( person :arg0-of invest-01 ) :op2 ( person :arg0-of invest-01 ) ) :arg0-of ( ensure-01 :arg1 ( earn-01 :arg0 ( person :arg0-of invest-01 ) :arg1 ( rate-entity-91 :arg1 ( more-than :op1 ( monetary-quantity monetary-quantity_num_0 :unit dollar ) ) :arg2 ( temporal-quantity temporal-quantity_num_1 :unit year ) ) :arg3 ( rate-entity-91 :arg1 ( more-than :op1 num_1 ) :arg2 ( temporal-quantity temporal-quantity_num_1 :unit year ) ) ) ) ) )
multi-sentence :snt1 ( review-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg1 ( roots :mod country_name_0 ) :arg2 director ) :arg0-of ( have-org-role-91 :arg1 company_name_1 :arg2 director ) ) :arg1 ( review-01 :arg0 media :arg1 media ) :time ( after :op1 ( have-03 :arg0 person :arg1 betrayed ) ) ) :snt2 ( list-01 :arg0 ( guest :mod arab ) :arg1-of ( conform-01 :arg2 employee ) :arg1-of ( conform-01 :arg2 employee ) )
and :op1 ( spend-02 :arg0 ( and :op1 ( person :arg0-of ( have-rel-role-91 :arg2 child ) ) :op2 ( person :arg0-of ( have-rel-role-91 :arg1 person :arg2 child ) ) ) :arg1 ( and :op1 ( person :arg0-of ( have-rel-role-91 :arg1 child :arg2 child ) ) :op2 ( person :arg0-of ( have-rel-role-91 :arg1 person :arg2 child ) ) :op3 ( person :arg0-of ( have-rel-role-91 :arg1 person :arg2 child ) ) :op4 ( person :arg0-of ( have-rel-role-91 :arg1 person :arg2 child ) ) :op5 ( person :arg0-of ( have-rel-role-91 :arg1 person :arg2 child ) ) :op6 ( person :arg0-of ( have-rel-role-91 :arg1 person :arg2 child ) ) :op6 ( person :arg0-of ( have-rel-role-91 :arg1 person :arg2 child ) ) :op7 ( person :arg0-of ( have-rel-role-91 :arg1 child :arg2 child ) ) ) ) :op2 ( release-01 :arg1 ( person :arg0-of ( have-rel-role-91 :arg1 child :arg2 child ) ) :time ( summer :arg1-of near-02 ) )
say-01 :arg0 person_name_0 :arg1 ( feel-05 :arg1 it :arg2 ( flags :mod ( country_name_1 :mod whole ) :location ( grandstand :arg1-of ( resemble-01 :arg2 london ) ) ) )
bad-07 :arg1 we :degree so :arg0-of ( cause-01 :arg1 ( win-01 :arg0 we :mod again :purpose ( win-01 :arg0 we :mod again :location olympics ) ) )
contrast-01 :arg1 ( be-located-at-91 :arg1 they :arg2 ( behind :op1 ( between :op1 ( percentage-entity percentage-entity_num_0 ) :op2 ( percentage-entity percentage-entity_num_1 ) ) ) :mod still ) :arg2 ( leave-11 :arg0 they :arg1 ( rate-entity-91 :arg1 ( percentage-entity percentage-entity_num_2 ) :arg2 ( temporal-quantity temporal-quantity_num_2 :unit year ) ) :time ( before :op1 ( leave-17 :arg1 ( percentage-entity percentage-entity_num_2 :quant-of ( percentage-entity percentage-entity_num_2 ) ) ) ) )
contrast-01 :arg1 ( ioc :polarity - :time ( history :ord ( ordinal-entity ordinal-entity_num_0 :range history ) ) :time history ) :arg2 ( cas :arg1 ( sanctioning :arg1 ( athletes :mod ( case :mod positive ) ) ) )
visit-01 :arg0 ( person :arg1-of ( age-01 :arg2 ( temporal-quantity temporal-quantity_num_0 :unit year ) ) ) :arg1 ( house :mod small ) :arg1-of ( initiate-01 :arg0 ( and :op1 ( initiate-01 :arg0 ( person :mod country_name_0 ) :arg1 '' ) :op2 ( initiate-01 :arg0 ( person :arg1-of ( age-01 :arg2 ( temporal-quantity temporal-quantity_num_0 :unit year ) ) ) :arg1 ( house :mod small ) ) ) ) :time ( during :op1 ( initiate-01 :arg1 ( journey :arg0 ( person :arg0-of ( have-org-role-91 :arg2 '' ) ) ) ) )
recommend-01 :arg1 ( and :op1 ( get-05 :arg1 amr-unknown :arg2 mess ) :op2 ( event :mod amr-unknown ) )
implicate-01 :arg1 ( differ-01 :arg2 ( and :op1 energy :op2 ( policy :topic climate ) ) )
have-part-91 :arg1 ( violence :mod sex ) :arg2 ( live-01 :arg0 woman :manner alone ) :mod almost
looks :arg0 he :arg1 room :instrument ( eye :mod big )
tell-01 :arg0 amr-unknown :arg1 ( end-01 :arg1 ( end-01 :arg1 they ) :time ( as-soon-as :op1 ( arrive-01 :arg1 they :arg4 island_name_2 ) ) ) :arg2 bahr
multi-sentence :snt2 ( accommodation :quant num_0 :mod central :domain ( accommodation :mod central ) :beneficiary woman )
appoint-01 :arg1 ( person :arg0-of ( have-org-role-91 :arg1 ( service :mod security :mod federal ) :arg2 chairman ) ) :arg2 ( person :arg0-of ( have-org-role-91 :arg2 deputy ) ) :time ( late :op1 ( date-entity decade_date-entity_0 ) ) :li num_0
say-01 :arg0 he :arg1 ( and :op1 ( '' :domain this :mod historic ) :op2 ( moment :arg1-of symbolize-01 :arg1-of symbolize-01 :domain this ) )
deploy-01 :arg1 ( system :arg0-of warn-01 :mod flood ) :arg2 ( across :op1 ( part :mod large :part-of ( south :part-of strait ) ) ) :time ( until :op1 ( saturday :arg1 system ) )
say-01 :arg0 person_name_0 :arg1 ( and :op1 ( spread-01 :arg1 flood :manner rapid :arg1-of ( cause-01 :arg0 ( continue-01 :arg1 ( rain-01 :mod heavy ) ) ) ) :op2 ( consider-02 :arg0 ( authority :mod that ) :arg1 ( instruct-01 :arg0 authority :arg1 person ) ) )
offer-01 :arg0 ( explode-01 :mod this ) :arg1 ( benefit-01 :arg1 ( and :op1 ( person :mod school ) :op2 ( person :mod school ) :op3 ( succeed-01 :arg0 professional ) ) )
glad-02 :arg0 ( leak-01 :arg1 film :arg1-of dirty-02 :mod this :quant some ) :arg1 i
find-01 :arg0 ( person :arg1-of ( employ-01 :arg0 house-01 ) ) :arg1 property :location ( condition :mod irreparable ) :time ( after :op1 ( remove-01 :arg1 person :arg2 ( estate :poss person ) ) )
bank :mod safe-01 :mod usual :prep-for republican :domain utah
multi-sentence :snt1 ( and :op2 ( shouting :arg1 this ) ) :snt2 ( or :op1 ( succeed-01 :arg0 this :mod either ) :op2 ( make-02 :arg0 this :arg1 ( holiday :arg1-of ( nice-01 :arg1-of long-03 ) ) ) )
obligate-01 :arg2 ( leave-14 :arg0 i :arg1 race :arg2 person :mod just ) :time ( until :op1 ( and :op1 ( between :op1 num_0 :op2 num_1 :op3 final ) :op2 ( day :mod final :part-of day ) :op3 ( day :mod final :part-of day ) ) )
say-01 :arg0 ( person_name_0 :arg0-of ( have-org-role-91 :arg1 country_name_1 :arg2 ( chairman :mod vice ) ) ) :arg1 ( mÃ¼ller :arg0 ( person :arg0-of ( have-org-role-91 :arg1 state :arg2 chairman ) ) :arg1 mÃ¼ller )
surprise-01 :polarity - :arg0 ( call-03 :arg0 ( agency :mod security ) :arg1 ( and :op1 ( surveil-01 :arg1 video ) :op2 ( staff :mod security ) ) ) :mod also
and :op2 ( buy-01 :arg1 ( market :mod core :quant some ) :location ( market :mod core :quant some ) )
multi-sentence :snt1 ( danger :degree ( too :mod far ) :domain ( leave-14 :arg1 ( cash :location ( tresses :name ( name :op1 raiffeisenbank ) ) ) ) :manner simple ) :snt2 ( and :op1 ( experience-01 :arg0 i :arg1 ( overaults :quant num_0 ) :time already ) :op2 ( want-01 :arg0 i :arg1 ( say-01 :arg0 ( board :mod bank ) :arg1 i :degree total ) ) )
have-03 :arg0 i :arg1 ( or :op1 ( around :op1 ( person :quant ( around :op1 num_0 ) ) ) :op2 ( plates :quant num_1 ) )
multi-sentence :snt1 ( stop-01 :arg0 i :arg1 ( business :mod ( generation :mod new ) :mod ( generation :mod new ) :mod ( generation :mod new ) ) ) :snt2 ( outfitters :mode expressive )
say-01 :arg0 he :arg1 ( offer-01 :arg0 area :arg1 ( between :op1 refugee :op2 ( person :arg0-of volunteer-01 ) ) )
find-01 :arg0 ( and :op1 ( person :arg0-of ( went :ord ( ordinal-entity ordinal-entity_num_0 ) ) :arg0-of ( go-02 :arg4 history ) ) :op2 ( person :arg0-of ( have-org-role-91 :arg2 stanning ) ) :op3 ( person :arg0-of ( have-org-role-91 :arg2 stanning ) ) :op4 ( person :arg0-of ( have-org-role-91 :arg2 stanning ) ) :op5 ( person :arg0-of ( have-org-role-91 :arg2 stanning ) ) :op6 ( person :arg0-of ( have-org-role-91 :arg2 stanning ) ) :op6 ( person :arg0-of ( have-org-role-91 :arg2 stanning ) ) :op6 ( person :arg0-of ( have-org-role-91 :arg2 stanning ) ) :op6 ( person :arg0-of ( have-org-role-91 :arg2 stanning ) ) :op6 ( person :arg0-of ( have-org-role-91 :arg2 stanning ) ) :op6 ( person :arg0-of ( have-org-role-91 :arg2 stanning ) ) :op6 ( person :arg0-of ( have-org-role-91 :arg2 stanning ) ) :op6 ( person :arg0-of ( have-org-role-91 :arg2 stanning ) ) :op6 ( person :arg0-of ( have-org-role-91 :arg2 stanning ) ) :op6 ( person :arg0-of ( have-org-role-91 :arg2 stanning ) ) :op6 ( person :arg0-of ( have-org-role-91 :arg2 stanning ) ) :op6 ( person :arg0-of ( have-org-role-91 :arg2 stanning ) ) :op7 ( person :arg0-of ( have-org-role-91 :arg2 stanning ) ) ) :arg1 ( mean :mod extra )
multi-sentence :snt1 ( have-concession-91 :arg1 ( all-present :quant num_0 :arg1-of ( sit-01 :arg2 ruder ) ) :arg2 ( those :arg0 they :arg1 ( gold :mod ( robin :ord ( ordinal-entity ordinal-entity_num_1 ) ) :ord ( ordinal-entity ordinal-entity_num_1 ) ) :location ( history :poss ( woman :mod tax ) :ord ( ordinal-entity ordinal-entity_num_1 ) :location local-region_name_0 ) ) ) :snt2 ( sport :domain ( woman :ord ( ordinal-entity ordinal-entity_num_2 ) :ord ( ordinal-entity ordinal-entity_num_2 ) ) :purpose ( set-02 :arg0 woman :arg1 ( benchmark :mod such ) ) )
and :op1 ( sing-01 :arg0 ( person :arg0-of ( sing-01 :arg1 ant ) :quant most ) :location ant ) :op2 ( share-01 :arg0 person :arg1 ( infringe-01 :arg1 music :accompanier ( person :mod like-minded ) ) :arg1-of ( describe-01 :arg0 person ) )
possible-01 :arg1 ( or :op1 ( innate :arg1 ( capable-01 :mod this ) ) :op2 ( develop-02 :arg1 ( maturity :mod gender ) ) )
issue-01 :arg0 ( person :arg0-of prosecute-01 ) :arg1 ( warrant :mod arrest-01 :prep-against ( sÃ¼kÃ¼r :mod star :time former ) )
determine-01 :arg0 doping :arg1 headline :location ( olympics :mod rio ) :mod still
plan-01 :arg0 ( slash :op1 ( journey :arg0 she ) :op2 ( home :poss she ) ) :arg1 she :time early
clear-06 :polarity - :arg1 ( clear-06 :arg1 ( attack-01 :arg1 group :location ( behind :op1 attack-01 ) ) ) :mod still
kill-01 :arg1 ( person :quant num_0 ) :arg1-of ( cause-01 :arg0 ( attack-01 :arg1 ( worship-place_name_0 :mod popular :arg1-of ( include-91 :arg2 ( person :arg0-of tour-01 :mod foreign ) :arg3 most ) ) ) ) :time ( before :op1 now :quant ( over :op1 ( over :op1 ( temporal-quantity temporal-quantity_num_0 :unit year ) :mod just ) ) )
and :op1 ( come-01 :arg1 bus :arg4 ( right :poss street ) ) :op2 ( slipped :arg0 ( person :arg0-of ( have-org-role-91 :arg1 ( police :mod aurich ) :arg2 spokeswoman ) ) :arg1 bus )
win-01 :arg0 i :arg1 ( match-03 :ord ( ordinal-entity ordinal-entity_num_0 ) ) :arg2 ( field :mod field :poss woman )
contrast-01 :arg1 ( compete-01 :location here :arg1-of obvious-01 ) :arg2 ( contrast-01 :arg1 ( compete-01 :polarity - :location here :arg1-of obvious-01 ) :arg2 ( attack-01 :polarity - :arg1 ( and :op1 ( dreamy :mod ( dreamy :mod just ) ) :op2 ( dreamy :arg1 elegant ) :op3 et-cetera ) :time ( during :op1 exercise ) ) )
and :op1 ( lack-01 :arg0 ( regime :time current ) :arg1 ( skill :mod fundamental :mod this ) ) :op2 ( say-01 :arg0 ( person :arg0-of ( analyze-01 :arg1 conflict-01 ) ) :arg1 ( person :arg0-of ( analyze-01 :arg1 conflict-01 ) ) )
and :op1 ( live-01 :arg0 ( person :quant num_0 ) :location ( multivitamin :mod william ) :time former ) :op2 ( visit-01 :arg0 person :arg1 verb :arg1-of regular-02 ) :li num_0
try-01 :arg0 ( and :op1 ( person :arg0-of calorie-rich ) :op2 ( satisfaction :mod nourishing ) ) :arg1 ( or :op1 ( taste :arg1 person ) :op2 ( taste :arg1 person :manner ( healthy :degree ( more :mod even ) ) ) )
average-01 :arg1 ( economy :mod house :quant many ) :arg2 it
take-01 :arg0 i :arg1 ( time :quant num_0 )
know-01 :arg0 ( person :arg0-of research-01 ) :arg1 ( little :topic ( lifestyle :mod greenland ) :mod little )
cause-01 :arg0 ( make-01 :arg0 ( person :arg0-of research-01 ) :arg1 ( and :op1 ( remain-01 :arg1 ( person :arg0-of research-01 ) ) :op2 ( find-01 :arg0 ( person :arg0-of research-01 ) :arg1 ( remain-01 :arg1 ( person :arg0-of research-01 ) ) ) ) :arg1 ( swallowed :arg0 another :arg1 ( bone :part-of ( bear-02 :arg1 polar ) :mod young ) ) ) :mod anyway
say-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg1 country_name_0 :arg2 troop ) ) :arg1 ( regain-01 :arg0 person :arg1 ( control-01 :arg1 ( manbij :mod full ) :source ( state :mod religious-group_name_1 ) ) )
and :op1 ( plunged :arg0 person_name_0 :arg1 issue-02 :time already ) :op2 ( post-01 :arg0 person :arg1 video :medium internet ) :op3 ( call-03 :arg0 ( person :arg1-of ( rank-01 :arg1-of high-02 ) :arg1-of ( rank-01 :arg1-of high-02 ) ) :arg1 ( release-01 :arg1 person ) )
and :op1 ( fishing :arg1 ( highlight-01 :arg1 leisure :mod other ) :location ( pond :mod nearby ) ) :op2 ( evening :arg1 evenings :time ( evening :name ( name :op1 fire ) :mod final ) )
possible-01 :arg1 ( win-01 :arg0 you :arg1 it :arg2 ( colleagues :arg0 he ) )
consult-01 :arg0 he :arg1 he :arg2 ( person :arg0-of represent-01 ) :time yesterday :time ( call-03 :arg0 he :arg1 ( measure-01 :arg0 he :arg1 ( size :poss he ) :arg2 he ) )
wrong-04 :arg1 ( attempt-01 :arg1 ( contact-01 :arg1 philip ) ) :mod just
and :op1 ( surveys :arg0 ( government-organization_name_0 :mod this ) :arg1 ( insa :mod ( research-01 :arg1 opine-01 ) ) ) :op2 ( -lrb- :arg0 ( newspaper :name ( name :op1 '' :op2 '' :op3 '' :op4 '' :op5 '' :op6 '' :op7 '' ) ) )
represent-01 :arg1 ( person :arg0-of ( have-org-role-91 :arg2 deputy ) ) :location ( chamber :part-of ( person :arg0-of ( have-org-role-91 :arg2 deputy ) ) :ord ( ordinal-entity ordinal-entity_num_0 :range ( ordinal-entity ordinal-entity_num_0 ) ) )
megabytes :quant num_0 :domain ( memory :name ( name :op1 built in :op2 memory ) ) :time initial :arg1-of ( cause-01 :arg0 ( resolution :quant num_1 :arg1-of ( include-91 :arg2 ( selfies :quant num_1 ) :time now ) ) )
experience-01 :arg0 ( doctor_name_0 :mod ( phone :mod cell ) :mod finns ) :arg1 ( disaster :mod ( precedent :polarity - ) ) :time eventual :arg1-of ( sell-01 :arg2 microsoft )
and :op1 ( person :quant ( many :degree very ) ) :op2 ( person :quant ( many :degree very ) ) :time today :location online
operate-01 :arg1 ( and :op1 apple :op2 continent_name_0 ) :arg1-of ( resemble-01 :arg2 samsung ) :time now
and :op1 ( block-01 :arg0 ( person :arg0-of ( use-01 :arg1 advertise-01 ) ) :arg1 ( block-01 :arg1 advertise-01 :location ( page :mod desktop :poss person ) ) :time ( after :op1 ( announce-01 :arg0 person :arg1 ( block-01 :arg0 person :arg1 ( block-01 :arg1 advertise-01 :location ( page :mod desktop :poss person ) ) ) ) ) ) :op2 ( release-01 :arg0 person :arg1 ( say-01 :arg0 person :arg1 ( possible-01 :arg1 ( update-01 :arg0 ( person :arg0-of use-01 ) :arg1 ( filter :poss person ) :location program :purpose ( block-01 :arg0 person :arg1 ( advertising :location ( network :mod society ) ) :mod again ) ) ) ) )
say-01 :arg0 he :arg1 ( important :domain ( economy :mod region ) )
cause-01 :arg1 ( recommend-01 :arg1 ( contact-01 :arg0 you :arg1 doctor :time first ) :time ( problem :topic sleep-01 ) )
and :op1 ( surprise-01 :arg0 ( person :arg0-of reside-01 ) :arg1 ( person :quant num_0 ) ) :op2 ( suggest-01 :arg0 person :arg1 ( conventional :polarity - ) )
multi-sentence :snt1 ( give-01 :arg0 ( way :poss he :destination ( connect :arg0 he :arg1 ( family :arg1-of ( have-org-role-91 :arg0 he :arg2 member ) ) :arg2 ( family :arg1-of ( have-org-role-91 :arg0 he :arg2 member ) ) ) ) :arg1 we :arg2 ( we :arg0-of ( have-org-role-91 :arg1 ( family :arg1-of ( have-org-role-91 :arg0 he :arg2 member ) ) :arg2 member ) ) :time always ) :snt2 ( say-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg2 head-of-state ) ) :arg1 ( person :arg0-of ( have-org-role-91 :arg2 head-of-state ) ) )
contrast-01 :arg2 ( say-01 :arg0 dropshipper :arg1 ( have-03 :arg0 state :arg1 ( task :mod certain :instrument-of ( perform-02 :arg0 state ) ) ) :arg0-of ( cause-01 :arg1 ( and :op1 ( have-03 :arg0 state :arg1 opportunity ) :op2 ( need-01 :arg0 state :arg1 money :beneficiary it ) ) ) )
and :op1 ( have-03 :arg0 we :arg1 ( list :arg1-of ( wait-01 :arg1-of long-03 ) ) :time ( since :op1 ( be-located-at-91 :arg1 it :arg2 around ) ) ) :op2 ( say-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg1 political-party_name_0 ) ) :arg1 we :arg1-of long-03 )
say-01 :arg0 person_name_0 :arg1 ( fail-01 :arg1 ( person :arg0-of ( have-org-role-91 :arg2 minister ) ) :arg2 ( address-02 :arg0 person :arg1 ( concern-01 :arg0 treaty ) ) )
multi-sentence :snt1 ( opine-01 :arg0 i :arg1 ( order-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg1 ( government-organization :arg0-of ( administrate-01 :arg1 country_name_0 ) ) :arg2 ( chairman :mod vice ) ) ) :arg2 ( chairman :arg2-of ( have-org-role-91 :arg1 ( government-organization :arg0-of ( administrate-01 :arg1 country_name_1 ) ) ) ) ) :manner ( reason :polarity - ) ) :snt2 ( '' :mode expressive )
include-91 :arg1 ( thing :arg1-of ( include-91 :arg2 ( thing :arg0-of ( cover-01 :arg1 blower ) ) ) :quant ( num_1 :ord ( ordinal-entity ordinal-entity_num_0 ) ) :arg0-of ( cover-01 :arg1 ( around :op1 ( photograph-01 :quant num_2 :location bridge :mod each ) ) ) ) :arg2 ( closures :quant num_1 :mod '' )
contrast-01 :arg2 ( compensate-01 :arg0 you :arg2 ( lose-02 :arg1 ( home :arg1-of cheap-02 :quant ( some :op1 num_0 ) ) ) :manner amr-unknown :time ( after :op1 now :duration ( few :op1 ( temporal-quantity temporal-quantity_num_0 :unit year ) ) ) )
and :op1 ( possible-01 :polarity - :arg1 ( and :op1 ( sit-01 :arg1 i ) :op2 ( crawls :arg0 i ) :time ( until :op1 ( live-01 :arg0 he :ord ( ordinal-entity ordinal-entity_num_0 ) ) ) ) ) :op2 ( possible-01 :polarity - :arg1 ( speak-01 :arg0 he :mod still ) )
cause-01 :arg0 ( have-03 :arg0 ( person :mod country_name_0 ) :arg1 ( cause :arg0-of ( cause-01 :arg1 ( infect-01 :arg1 person :example ( or :op1 ( measles :arg1 person ) :op2 ( zikavirus :arg1 person ) :time pregnancy ) ) ) ) ) :arg1 ( have-03 :arg0 person :arg1 ( cause :arg0-of cause-01 ) :mod profound )
say-01 :arg0 he :arg1 ( warn-01 :arg0 ( person :mod another :arg0-of ( live-01 :mod nearby ) ) )
and :op1 ( phenomenon :mod globe :domain ( and :op1 ( phenomenon :mod globe ) :op2 ( phenomenon :mod globe ) ) ) :op2 ( possible-01 :arg1 ( provide-01 :arg0 we :arg1 ( person :arg0-of consume-01 ) :arg2 ( information :quant more ) :manner interesting ) )
say-01 :arg0 person_name_0 :arg1 ( expect-01 :arg0 person :arg1 ( confiscate-01 :arg0 madrassa :arg1 ( '' :mod garland ) :prep-with ( temperature-quantity :quant ( degree :quant some ) ) ) ) :time ( conference :mod telephone )
multi-sentence :snt1 ( need-01 :arg0 we :arg1 ( return-01 :arg1 we :arg4 ( and :op1 ( depiction :arg1 ( nudity :mod timeless ) ) :op2 ( feel-01 :arg0 ( and :op1 woman :op2 man :mod both ) :arg1 comfortable-02 ) ) ) ) :snt2 ( say-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg1 ( body :mod female ) :arg3 shaw ) ) :arg1 ( and :op1 ( comfortable-02 :arg0 ( image :mod this ) :arg1 ( release-01 :arg1 ( body :mod female ) ) ) :op2 ( feel-01 :arg0 and :arg1 ( inspire-01 :arg0 image :arg1 ( release-01 :arg1 ( body :mod female ) ) :mod press ) ) ) )
multi-sentence :snt1 strange :snt2 ( allow-01 :polarity - :arg1 ( choose-01 :arg0 ( person :arg1-of local-02 ) :arg1 ( choose-01 :arg0 person :arg1 ( day :poss country ) ) ) )
sense-02 :polarity - :arg1 it
and :op1 ( spend-02 :polarity - :arg0 they :arg1 ( stroll :mod thursday :poss they ) :manner certain :path ( shop :poss ( street :mod berwick ) ) ) :op2 ( leave-11 :arg0 they :manner ( plates :arg0 they :arg1 ( and :op1 ( look-01 :arg0 they :arg1 uncanny ) :op2 ( look-01 :arg0 they :arg1 uncanny ) ) ) :arg1-of ( cause-01 :arg0 ( mimic :arg0 they :arg1 ( and :op1 ( look-01 :arg0 they :arg1 uncanny ) :op2 ( look :arg0 they :arg1 ( presenter :mod false :arg0-of ( rise-01 :arg1 ( shoulders :mod ( over :op1 ( man :mod middle-aged ) ) ) ) ) ) ) ) ) )
contrast-01 )
and :op1 ( put-01 :arg0 ( person :arg0-of veremalua ) :arg1 ( touchdown :location ( corner :mod right ) ) :arg2 touchdown ) :op2 ( stand-01 :arg1 person :arg2 ( person :quant num_1 :mod political-party_name_0 ) ) :time ( minute :ord ( ordinal-entity ordinal-entity_num_0 ) )
pressure-01 :arg0 ( and :op1 ( tacklings :arg1 ( team :mod country_name_0 ) :arg1-of weak-02 :degree further ) :op2 ( storm-02 :arg0 team :arg1 ( line :purpose ( make-01 :arg0 team :arg1 gated ) ) ) ) :arg1 ( ravouvou :mod vatemo :mod further )
and :op1 ( gold :quant ( more :polarity - ) :compared-to ( game :mod this ) ) :op2 ( want-01 :arg0 they :arg1 ( thing :arg1-of ( want-01 :arg0 they ) ) )
say-01 :arg0 person_name_0 :arg1 ( and :op1 ( weighed :arg1 ( reform-01 :arg1 ( and :op1 ( trade-01 :arg1 trade-01 ) :op2 climate :op3 ( target :mod employ-01 ) ) ) :op2 ( target :mod ( employ-01 :polarity - ) ) :op3 ( target :mod ( employ-01 :polarity - ) ) ) :arg2 ( person :arg0-of ( have-org-role-91 :arg1 metall :arg2 ( chief :name ( name :op1 metall ) ) ) :arg0-of ( have-org-role-91 :arg2 ( chief :mod metall ) ) ) :location frankfurt )
expect-01 :arg0 association :arg1 ( increase-01 :arg1 ( emission :arg1-of ( come-01 :time ( after :op1 now :duration ( multiple :op1 ( temporal-quantity temporal-quantity_num_0 :unit month ) ) ) :arg1-of improve-01 ) ) )
contrast-01 :arg1 ( suffer-01 :arg0 she :arg1 ( wound-01 :arg1 she ) ) :arg2 ( possible-01 :arg1 ( leave-11 :arg0 she ) :time already )
contrast-01 )
company :polarity - :mod only :arg0-of ( cross-02 :arg1 ( theater :mod culture :mod this ) ) :domain snapchat
multi-sentence :snt1 ( have-03 :arg0 it :arg1 potential ) :snt2 ( contrast-01 :arg1 ( impact-01 :arg0 ( citation :mod never-ending :poss he ) :arg1 ( citation :mod cartoonish :poss ( impact-01 :arg0 he ) ) ) :arg2 ( grace :domain ( and :op1 ( grace :poss ( and :op1 tournament :op2 idiot ) ) :op2 ( grace :poss ( and :op1 tournament :op2 idiot ) ) ) :mod essential ) )
have-concession-91 :arg1 ( seem-01 :arg1 ( patent-01 :arg1 patent-01 ) :arg2 ( age :arg1-of high-02 ) )
and :op1 ( probable :domain ( determine-01 :arg0 ( animal :arg1-of ( include-91 :arg2 ( animal :prep-with ( centimetres :mod 392 ) ) ) ) :arg1 ( and :op1 ( person :arg1-of ( age-01 :arg2 ( temporal-quantity temporal-quantity_num_0 :unit year ) ) ) :op2 ( age :mod sexually ) ) ) :time ( since :op1 ( age-01 :arg1 animal :arg2 ( temporal-quantity temporal-quantity_num_1 :unit year ) ) ) ) :op2 ( determine-01 :arg1 ( person :arg0-of ( have-org-role-91 :arg2 sharks ) ) :time ( after :op1 now :quant ( temporal-quantity temporal-quantity_num_2 :unit year ) ) :manner apparent )
cite-01 :arg0 ( and :op1 ( person :arg0-of ( have-org-role-91 :arg2 ( authority :mod tax ) ) ) :op2 ( person :arg0-of ( have-rel-role-91 :arg1 person :arg2 lawyer ) ) ) :arg1 ( audit-01 :arg0 ( authority :mod tax ) :arg1-of ( cause-01 :arg0 ( reason :arg0-of ( cause-01 :arg1 ( refuse-01 :arg0 person ) ) ) ) )
storm-02 :arg0 ( person :mod country_name_0 :mod country_name_1 ) :arg1 home :arg2 home :arg1-of ( cause-01 :arg0 ( win-01 :arg0 person :arg1 gold :arg2 person ) )
create-01 :arg0 ( retire-01 :arg0 ( person :arg0-of retire-01 ) ) :arg1 ( gap :arg0-of ( cause-01 :arg1 ( try-01 :arg0 ( person :arg0-of retire-01 ) :arg1 ( close-10 :arg1 person ) ) ) )
come-01 :arg1 they :arg3 ( goal :quant num_0 :mod goal )
and :op1 ( reality :mod ( kardashian :mod just ) ) :op2 ( kendall :arg1 ( issue-02 :arg0 ( issue-02 :arg0 september ) ) )
have-03 :arg0 ( law :mod community ) :arg1 ( person :quant num_0 ) :time ( year :mod each )
memory :arg1 ( memory :mod built in ) :time initial :arg1-of ( cause-01 :arg0 ( resolution :quant ( about :op1 num_1 ) :arg1-of ( last-01 :arg2 ( about :op1 ( temporal-quantity :quant num_1 :unit year ) ) ) :prep-with ( resolution :arg1-of high-02 ) ) )
and :op1 ( have-purpose-91 :arg1 ( create-01 :arg1 ( and :op1 ( job :quant num_0 :mod new ) :op2 ( grow-01 :arg1-of ( possible-01 :polarity - ) ) ) ) :arg2 ( and :op1 ( job :quant num_0 :mod new ) :op2 ( grow-01 :arg1-of ( possible-01 :polarity - ) ) ) ) :op2 ( leave-13 :arg0 and :arg1 ( legacy :mod ( and :op1 ( person :mod country_name_0 ) :op2 ( person :mod country_name_1 :mod whole ) ) ) )
announce-01 :arg0 magazine_name_0 :arg1 ( change-01 :arg0 ( page :poss it ) :arg1 ( course :poss it ) :purpose ( make-02 :arg0 it :arg1 ( difficult :degree more :domain ( detect-01 :arg1 ( thing :arg2-of ( have-part-91 :arg1 page ) ) ) ) ) ) :medium ( url-entity :value tuesday )
and :op1 ( resign-01 :arg0 ( person_name_0 :arg0-of ( have-org-role-91 :arg2 roy ) ) :arg1 ( and :op1 coach :op2 ( person :arg0-of ( have-org-role-91 :arg2 ( president :mod vice ) ) ) :op3 ( person :arg0-of ( have-org-role-91 :arg2 ( president :mod vice ) ) ) :op4 ( person :arg0-of ( have-org-role-91 :arg2 ( president :mod vice ) ) ) :op5 ( person :arg0-of ( have-org-role-91 :arg2 ( president :mod vice ) ) ) :op6 ( person :arg0-of ( have-org-role-91 :arg2 ( president :mod vice ) ) ) :op6 ( person :arg0-of ( have-org-role-91 :arg2 ( president :mod vice ) ) ) :op7 ( person :arg0-of ( have-org-role-91 :arg2 ( president :mod vice ) ) ) ) )
honored :arg1 roy :time ( season :quant num_0 :mod debut :poss he ) :time ( season :mod debut :poss he ) :subevent-of ( win-01 :arg0 ( company :arg0-of ( win-01 :arg1 ( coach :mod ( good :degree most ) ) ) ) )
contrast-01 :arg2 ( want-01 :arg0 he :arg1 ( seek-01 :arg0 he :arg1 ( solve-01 :arg1 ( thing :arg2-of ( solve-01 :arg1 ( thing :manner-of ( reduce-01 :arg1 ( vulnerability :poss citizen ) :arg2 ( thing :manner-of ( reduce-01 :arg1 ( vulnerability :poss citizen ) ) ) ) ) ) ) ) ) :arg1-of ( cause-01 :arg0 ( view-01 :arg0 he :manner mental ) ) )
have-purpose-91 :arg1 ( plan-01 :arg1 ( use-01 :arg1 ( person :arg0-of ( have-org-role-91 :arg1 covert :arg2 ( person :arg0-of investigate-01 ) ) ) ) ) :arg2 ( prosecute-01 :arg0 person :arg1 ( person :arg2-of criminal-03 ) :location ( area :arg1-of specific-02 :part-of ( -lrb- :mod internet ) ) )
and :op1 ( possible-01 :polarity - :arg1 ( ban-01 :arg0 you :arg1 ( everything :arg1-of ( oppose-01 :arg0 you ) ) ) ) :op2 ( reject-01 :arg0 i :arg1 ( wear-01 :arg1 burqa ) )
report-01 :arg1 ( obligate-01 :arg2 ( report-01 :arg1 ( temporal-quantity temporal-quantity_num_0 :unit month :time ( before :op1 ( start-01 :arg0 he :arg1 ( and :op1 ( agency :mod nation :mod nation ) :op2 ( -rrb- :name ( name :op1 -lrb- ) ) ) :ord ( ordinal-entity ordinal-entity_num_0 ) ) ) ) ) ) :condition ( want-01 :arg0 he :arg1 ( start-01 :arg0 he :arg1 language_name_0 ) )
total-01 :arg1 ( more-than :op1 num_0 ) :arg2 ( more-than :op1 num_0 )
mention-01 :arg1 ( street :polarity - :mod other ) :frequency ( often :degree so ) :accompanier ( person :arg0-of ( '' :arg1 ( violence :mod military :mod military_name_0 ) ) ) :frequency ( often :degree so )
and :op1 ( need-01 :arg1 ( invest-01 :arg2 ( and :op1 trumps :op2 trumps :op3 moon ) ) ) :op2 ( say-01 :arg0 and :arg1 ( eloquently :mod almost ) )
possible-01 :arg1 ( discuss-01 :arg1 ( thing :arg1-of discuss-01 ) :mod still )
matter :domain this :mod of-course :arg1-of ( cause-01 :arg0 ( have-03 :arg0 it :arg1 ( fear-01 :arg1 ( change-01 :arg1 regime ) :mod deep-seated ) ) )
be-located-at-91 :arg1 ( and :op1 ( person :arg0-of ( starred :time previous ) ) :op2 ( person :arg0-of ( have-org-role-91 :arg2 greg ) ) :op3 ( person :arg0-of ( have-org-role-91 :arg2 greg ) ) ) :arg2 he :time ( since :op1 ( series :op1 series :quant ( num_1 :op1 num_1 ) ) )
like-02 :arg0 i :arg1 ( thank-01 :arg0 i :arg1 ( and :op1 authors :op2 ( person :arg0-of ( produce-01 :arg1 ( crew :arg1-of wonderful-03 :poss we ) ) ) :op3 ( person :arg0-of act-01 ) :op4 ( crew :arg1-of wonderful-03 :poss we ) :op5 ( fan :mod ( good :degree most ) :mod especially ) ) :arg2 series :mod only ) :mod just
have-concession-91 :arg1 ( require-01 :arg0 ( complete-01 :arg1 ( closure :arg1 ( between :op1 viaduct :op2 ( decker :mod bridge ) ) ) ) :arg1 ( tolerances :mod ( precise :degree extreme ) :prep-for fit ) ) :arg2 ( and :op1 ( size :poss bridge :mod massive ) :op2 ( weight :poss bridge ) )
and :op1 ( be-located-at-91 :arg1 it :arg2 ( area :mod residential :location ( in-front-of :op1 house ) :location ( in-front-of :op1 house ) ) ) :op2 ( tell-01 :arg0 ( howard :mod '' ) :arg1 ( company_name_1 :mod cbs ) :time ( early :op1 ( month :mod this ) :degree more ) )
and :op2 ( have-03 :arg0 ( team :mod this ) :arg1 ( and :op1 ( turners :quant num_1 ) :op2 ( biles :name ( name :op1 simone ) ) :op3 ( douglas :name ( name :op1 gabby ) ) :op4 ( douglas :name ( name :op1 gabby ) ) :op5 ( '' :name ( name :op1 lauren :op2 '' ) ) ) :arg0-of ( inspire-01 :arg1 ( girl :mod young :quant many :mod ( color :mod skin :mod other ) ) ) )
and :op1 ( obligate-01 :arg2 ( act-02 :arg0 ( person :arg0-of ( have-rel-role-91 :arg2 dh ) ) :time now ) ) :op2 ( consult-01 :arg0 person :arg1 ( concern-01 :arg0 ( doctor :arg0-of ( assist-01 :arg1 doctor ) ) ) )
change-01 :arg1 ( law :arg0-of ( stipulate-01 :arg1 ( charge-05 :arg1 ( person :mod country_name_0 ) :arg2 ( bias-01 :arg1 person ) ) ) )
doubt-01 :arg0 ( person :quant num_0 :arg1-of ( include-91 :arg2 ( person :quant num_1 :arg1-of ( popular-02 :arg2 ( popular :degree most ) ) ) :time ( since :op1 ( age-01 :arg1 person :arg2 ( temporal-quantity temporal-quantity_num_0 :unit year ) ) ) ) ) :arg1 ( center :quant ( more :mod even ) ) :time ( year :mod this ) :arg1-of ( cause-01 :arg0 ( and :op1 ( rising :arg0 country_name_0 :arg1 ( rutherford :name ( name :op1 greg :op2 greg :op3 neil :op4 patrick :op5 patrick :op6 harris :op7 patrick ) ) ) ) )
and :op1 ( come-01 :arg1 ( criticize-01 :arg1 ( macdonald :mod byron ) ) :manner fast ) :op2 ( hard-02 :arg1 criticize-01 )
compare-01 :arg1 ( number :quant-of ( slash :op1 ( hand :arg1-of freshly ) :op2 hand ) ) :arg2 ( less-than :op1 num_0 ) :manner compare-01
phone-number-entity phone-number-entity_num_0
destroy-01 :arg0 i :arg1 ( part :part-of ( mainland :part-of country_name_0 ) :arg0-of ( kill-01 :arg1 ( person :quant num_0 ) :location ( island :mod madeira ) :mod also ) ) :time ( summer :mod this )
cause-01 :arg0 ( know-01 :arg0 ( and :op1 person_name_0 :op2 ( company :arg0-of ( have-org-role-91 :arg1 company ) ) ) :arg1 ( thing :manner-of convince-01 ) :degree total :mod still ) :arg1 ( didn :arg1 ( and :op1 person :op2 company ) :mod still )
and :op1 ( gajek :arg1 ( front :mod silke ) :arg2 ( houseboat :path ( lake :mod mecklenburgian ) ) :mod just ) :op2 ( find-02 :arg1 ( beautiful-02 :arg1 it ) :mod still )
cause-01 :arg0 ( treat-03 :arg1 ( person :arg0-of ( have-rel-role-91 :arg2 patient ) ) ) :arg1 ( obligate-01 :arg2 ( do-02 :arg0 this :arg1 amr-unknown :arg2 ( and :op1 security :op2 terror ) :mod actual ) )
sell-01 :arg0 ( brand :name ( name :op1 vw ) ) :arg1 ( rate-entity-91 :arg1 ( vehicle :quant num_0 :mod ( few :degree more ) ) :arg2 ( temporal-quantity temporal-quantity_num_0 :unit year ) ) :arg2 ( car :time ( date-entity year_date-entity_0 ) ) :time ( year :mod same ) :mod globe
result-01 :mode interrogative :arg2 ( thing :arg2-of ( result-01 :arg1 yougov ) )
multi-sentence :snt1 ( like-01 :arg0 we :arg1 ( person :arg0-of ( work-01 :arg2 society ) :poss they ) ) :snt2 ( infuriated :arg1 ( employee :source ( stack :mod record ) ) )
argue-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg1 court :arg2 authority ) ) :arg1 ( recommend-01 :arg1 ( empowered :arg1 state :arg2 ( and :op1 ( bring-01 :arg0 state :arg1 ( shop :quant num_0 :mod temporary :location ( inside :op1 ( person :location ( inside :op1 ( and :op1 ( person :arg0-of ( sell-01 :arg1 good ) ) :op2 ( person :arg0-of smoke-02 ) :op3 ( person :arg0-of ( sell-01 :arg1 ( tea :mod energy ) ) ) :op4 ( person :arg0-of ( sell-01 :arg1 tea ) ) :op5 ( person :arg0-of ( sell-01 :arg1 tea ) ) :op5 ( person :arg0-of ( sell-01 :arg1 tea ) ) :op6 ( person :arg0-of ( sell-01 :arg1 tea ) ) :op7 ( rate-entity-91 :arg1 ( monetary-quantity monetary-quantity_num_1 :unit cent ) :arg2 ( volume-quantity volume-quantity_num_1 :unit gallon ) ) ) ) :arg2 ( monetary-quantity monetary-quantity_num_1 :unit euro ) ) ) ) ) ) ) ) :time ( week :mod this ) :location person_name_0
say-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg1 ( staff :poss state_name_0 ) :arg2 ( executive :mod vice ) ) ) :arg1 ( move-01 :arg1 ( and :op1 ( person :arg0-of ( have-org-role-91 :arg1 ( headquarters :poss state_name_0 ) :arg2 ( executive :mod chief ) ) ) :op2 ( person :arg0-of ( have-org-role-91 :arg2 ( executive :mod chief ) ) ) :op3 ( person :arg0-of ( have-org-role-91 :arg2 ( executive :mod chief ) ) ) :op4 ( person :arg0-of ( have-org-role-91 :arg2 ( executive :mod chief ) ) ) :op5 ( person :arg0-of ( have-org-role-91 :arg2 ( executive :mod chief ) ) ) ) :time ( so-far :op1 ( date-entity decade_date-entity_0 ) ) )
and :op1 ( twitch :arg1 ( platform :mod well ) ) :op2 ( youtube :arg1 platform )
multi-sentence :snt1 ( find-01 :arg0 ( and :op1 ( strike-01 :ord ( ordinal-entity ordinal-entity_num_0 :range ( ordinal-entity ordinal-entity_num_0 ) ) ) :op2 ( hieve :quant num_1 :arg1-of hard-04 :arg0-of ( go-06 :arg1 history :time history ) ) :op3 ( stanning :mod heather ) ) :arg1 ( significant-02 :arg1 ( moment :mod golden :poss and ) :time ( moment :mod golden :poss and ) ) ) :snt2 ( significant-02 :arg1 ( added :mod golden ) )
expect-01 :arg1 ( rise-01 :arg1 ( rise-01 :arg1-of rise-01 ) :time ( after :op1 now :duration ( temporal-quantity temporal-quantity_num_0 :unit month ) ) :arg1-of ( cause-01 :arg0 ( situation :arg1-of improve-01 ) ) )
have-03 :arg0 she :arg1 ( toothache :arg1-of strong-02 ) :time ( after :op1 ( surgery-01 :arg1 she :arg2 ( defend-01 :arg0 she :arg1 29-year-old ) ) )
and :op1 ( be-located-at-91 :arg1 ( and :op1 ( person :quant ( over :op1 num_0 ) ) :op2 ( man :quant num_1 :mod fastest :location world ) ) :arg2 ( far :degree so ) ) :time ( year :mod this )
and :op1 ( learn-01 :arg0 i :arg1 ( swim-01 :arg0 you :arg2 ( temporal-quantity temporal-quantity_num_0 :unit month ) :time ( before :op1 war_name_1 ) ) :mod only ) :op2 ( complete-01 :polarity - :arg0 i :arg1 ( distance-01 :arg1 i :arg1-of long-03 :mod such :time ( before :op1 contest ) ) )
see-01 :arg0 i :arg1 ( threaten-01 :arg1 elect-01 :arg2 elect-01 )
and :op1 ( fall-01 :arg1 ( thing :arg2-of price-01 ) :arg4 ( and :op1 ( clothing :mod clothing ) :op2 ( -lrb- :quant ( percentage-entity :value num_0 ) ) ) ) :op2 ( footwear :arg0 thing :arg1 ( and :op1 ( person :mod furniture ) :op2 ( person :mod furniture ) :op3 ( person :mod furniture ) :op4 ( person :arg0-of ( have-org-role-91 :arg2 head-of-state ) ) :op5 ( person :arg0-of ( have-org-role-91 :arg2 head-of-state ) ) :op6 ( person :arg0-of ( have-org-role-91 :arg2 head-of-state ) ) :op7 ( person :arg0-of ( have-org-role-91 :arg2 head-of-state ) ) :op7 ( person :arg0-of ( have-org-role-91 :arg2 head-of-state ) ) ) )
feel-02 :arg0 ( and :op1 ( person :arg0-of ( have-org-role-91 :arg1 ( group :mod ethnic :mod tigray ) :arg2 member ) ) :op2 ( person :arg0-of ( have-org-role-91 :arg1 ( group :mod ethnic :mod tigray ) :arg2 member ) ) ) :arg1 ( and :op1 ( person :arg0-of ( have-org-role-91 :arg1 ( group :mod ethnic :mod tigray ) :arg2 member ) ) :op2 ( person :arg0-of ( dominate-01 :arg1 ( and :op1 military :op2 intelligence :op3 trade-01 :op4 politics ) ) ) ) :manner evident
contrast-01 :arg2 ( say-01 :arg0 person_name_0 :arg1 ( sarcastic :arg1 he :manner simple ) )
and :op1 ( holder :arg1 ( whale :name ( name :op1 211-year-old :op2 greenland :op3 greenland ) :mod greenland :mod 211-year-old :location ( bacon :arg1-of ( put-01 :arg0 bacon :arg2 supermarket ) ) ) ) :op2 ( catch-02 :arg1 whale :arg2 state_name_0 )
contrast-01 :arg1 ( have-03 :arg0 ( person :mod country_name_0 ) :arg1 ( industry :mod fund-01 :mod large ) ) :arg2 ( bad-07 :arg1 it :degree more :time ( come-12 :arg1 infrastructure ) )
and :op2 ( offer-01 :arg0 i :arg1 ( quality :mod ( quality :arg1-of ( high-02 :degree more :compared-to life ) ) ) :arg1-of ( cause-01 :arg0 ( and :op1 ( care-03 :arg1 health :mod good ) :op2 infrastructure :op3 ( crime-02 :quant ( less :degree equal ) ) ) ) )
spark :arg0 incident :arg1 ( thing :mod ( big :degree pretty ) :location internet ) :arg1-of ( cause-01 :arg0 ( call-02 :arg0 person :arg1 ( thing :quant whole ) ) )
say-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg2 ambassador ) ) :arg1 ( interest-01 :arg1 ( company :mod country_name_0 :location ( shop :location country ) ) :arg2 sharp ) :time ( since :op1 ( lifted :arg1 ( thing :arg2-of ( sanction-02 :arg1 country :mod international ) ) :mod international ) )
multi-sentence :snt1 ( hesitating :domain ( greens :mod greens ) ) :snt2 ( rate-entity-91 :arg1 ( rate-entity-91 :arg1 ( rate-entity-91 :arg1 num_0 :arg2 ( temporal-quantity temporal-quantity_num_0 :unit year ) ) :arg2 ( temporal-quantity temporal-quantity_num_1 :unit day ) ) :arg4 ( rate-entity-91 :arg1 ( under :op1 num_1 ) :arg2 ( temporal-quantity temporal-quantity_num_1 :unit day ) ) :location ( country :location weigh in ) )
follow-01 :arg1 this :arg2 ( business :mod well-running :poss ( company :arg0-of ( provide-01 :arg1 ( and :op1 ( company :arg0-of provide-01 ) :op2 ( company :mod telecommunication ) ) ) ) )
expose-01 :arg1 ( and :op1 heat :op2 ( light :mod ultraviolet ) :quant ( much :degree too ) ) :concession ( believe-01 :arg1 ( habitable :arg1 it :time ( before :op1 now :duration ( several :op1 ( temporal-quantity temporal-quantity_num_0 :unit year ) ) ) ) )
pressure-01 :arg1 ( company :mod energy ) :arg1-of ( cause-01 :arg0 ( and :op1 ( low-04 :arg1 ( thing :arg2-of ( price-01 :arg1 oil ) :arg1-of ( low-04 :degree more ) ) :arg2 ( monetary-quantity :arg2-of ( price-01 :arg1 oil ) :arg1-of ( low-04 :degree more ) ) ) :op2 ( situation :mod economy :arg1-of ( exacerbated :arg0 decide-01 :arg2 ( leave-15 :arg0 company :arg1 ( union-02 :arg1 continent_name_0 ) ) ) ) ) )
expect-01 :arg1 ( spend-01 :arg1 ( project :mod new :arg1-of ( spend-01 :arg3 ( project :mod new :location location_name_0 ) :arg3 ( about :op1 ( monetary-quantity monetary-quantity_num_0 :unit dollar ) ) ) ) :arg4 ( over :op1 ( monetary-quantity monetary-quantity_num_1 :unit dollar ) :arg1-of average-01 :time ( before :op1 now :duration ( temporal-quantity temporal-quantity_num_2 :unit year ) ) ) ) :location 2016
tested :arg0 test-01 :arg1 ( hr-v :quant ( between :op1 num_0 :op2 num_1 ) ) :arg1-of ( cause-01 :arg0 ( accelerates :arg1 ( torque :quant ( between :op1 num_0 :op2 num_1 ) ) ) :arg1-of ( cause-01 :arg0 ( torque :arg1 ( torque :mod ( speed :arg1-of wide-02 ) ) ) ) )
go-02 :arg0 you :arg4 bed :time ( time :arg1-of normal-02 :poss he ) :time ( after :op1 ( dressing :arg1 you ) )
manage-02 :arg0 ( person :arg0-of ( have-org-role-91 :arg1 ( police :mod country_name_0 ) :arg2 ( person :arg0-of investigate-01 ) ) ) :arg1 ( arrest-01 :arg1 ( and :op1 ( woman :quant num_0 ) :op2 ( man :quant num_0 ) ) :arg1-of ( age-01 :arg2 ( between :op1 ( temporal-quantity temporal-quantity_num_0 :unit year ) :op2 ( temporal-quantity temporal-quantity_num_2 :unit year ) ) ) )
rule-01 :arg0 ( court :mod administrate-01 :mod berlin ) :arg2 ( and :op1 ( law :polarity - ) :op2 ( person :arg0-of ( work-01 :arg2 construct-01 ) ) :op3 ( person :arg0-of ( work-01 :arg2 construct-01 ) ) :op4 ( person :arg0-of ( work-01 :arg2 construct-01 ) ) :op5 ( person :arg0-of ( work-01 :arg2 construct-01 ) ) :op6 ( person :arg0-of ( work-01 :arg2 construct-01 ) ) :op7 ( person :arg0-of ( reside-01 :arg1 ( person :arg0-of reside-01 ) ) ) )
see-01 :arg0 she :arg1 ( and :op1 ( person :arg0-of act-01 ) :op2 ( person :arg0-of ( have-org-role-91 :arg1 ( agency :mod refugee :mod refugee ) :arg2 authority ) ) :op3 ( person :arg0-of ( have-org-role-91 :arg1 ( agency :mod refugee :mod refugee ) :arg2 authority ) ) :op4 ( person :arg0-of ( have-org-role-91 :arg2 authority ) ) :op5 ( anyone :mod else ) )
cause-01 :arg1 ( need-01 :arg1 ( offer-01 :arg1 ( and :op1 ( thing :arg1-of ( resemble-01 :arg2 sports ) ) :op2 ( contact-01 :accompanier ( and :op1 ( person :arg1-of local-02 ) :op2 ( language :mod especially ) ) ) ) ) )
wake-up-02 :arg1 someone :time today :topic ( man :mod this )
and :op1 ( attack-01 :arg0 man :arg1 ( ex-girlfriend :poss man ) :manner hamburg-harburg :prep-with knife ) :op2 ( injure-01 :arg1 man :manner severe )
contrast-01 )
contrast-01 :arg2 ( mean-01 :polarity - :arg1 this :arg2 ( possible-01 :polarity - :arg1 ( find-01 :arg1 compromise-01 :time yet ) ) )
contrast-01 :arg1 ( indicate-01 :arg0 ( person :arg0-of ( have-rel-role-91 :arg2 grandparents ) ) :arg1 ( suffer-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg2 head-of-state ) ) :arg1 ( wound-01 :arg1 person :quant several :arg2-of ( include-01 :arg1 ( and :op1 ( person :arg0-of ( have-org-role-91 :arg2 head-of-state ) ) :op2 ( person :arg0-of leg ) :op3 ( person :arg0-of ( have-org-role-91 :arg2 head-of-state ) ) :op4 ( person :arg0-of ( have-org-role-91 :arg2 head-of-state ) ) :op5 ( person :arg0-of ( have-org-role-91 :arg2 head-of-state ) ) ) ) ) ) ) :arg2 ( conscious :polarity - :domain person :poss ( transport-01 :arg0 person :arg1 hospital ) )
see-01 :arg0 ( strike-01 :time ( end-01 :arg1 ( date-entity decade_date-entity_0 ) ) ) :arg1 ( and :op1 ( operate-01 :quant ( nearly :op1 num_0 ) :mod routine ) :op2 ( appointments :quant num_1 ) :op3 ( person :arg0-of ( specialize-01 :arg1 medicine ) ) :op4 ( person :arg0-of ( specialize-01 :arg1 medicine ) ) :op5 ( person :arg0-of ( specialize-01 :arg1 medicine ) ) ) :purpose ( provide-01 :arg0 strike-01 :arg1 cover-03 :arg2 ( line :mod picket ) )
lead-03 :arg0 ( culture :mod ( correctness :mod politics ) ) :arg2 ( defraud-01 :arg1 ( community :mod religious-group_name_0 ) :arg1-of ( spread-02 :arg1-of wide-02 ) ) :arg1-of ( cause-01 :arg0 ( ignore-01 :arg0 ( report-01 :arg0 ( government-organization :arg0-of govern-01 ) :arg0-of devastate-01 ) :time today ) )
crazy-03 :arg1 ( and :op1 ( biker-doppelganger :arg1 ( and :op1 ( biker-doppelganger :poss country_name_0 ) :op2 ( athletes :arg1-of fame-01 :mod other :arg1-of fame-01 :mod other ) ) ) :op2 ( athletes :mod olympic :arg1-of fame-01 :mod other ) )
say-01 :arg1 ( possible-01 :arg1 ( go-06 :arg0 ( gymnast :name ( name :op1 gymnast :op2 gymnast ) :mod country_name_0 :mod country_name_1 ) :arg1 ( eye :part-of person :mod large ) ) ) :arg2 ( possible-01 :arg1 ( go-06 :arg1 ( doppelganger :arg1 ( doppelganger :arg0-of ( rival-01 :arg1 cuban-american ) ) ) ) )
and :op1 ( represent-01 :arg0 you :arg1 ( and :op1 cbc :op2 canada ) ) :op2 ( make-02 :arg0 you :arg1 ( look-02 :arg0 ( we :mod all ) :arg1 racist ) )
and :op1 ( interview-01 :arg0 ( person :arg1-of ( include-91 :arg2 ( person :quant all :arg1-of ( include-91 :arg2 ( person :quant all :arg0-of ( favor-01 :arg1 political-party_name_0 ) ) :arg3 ( percentage-entity percentage-entity_num_0 ) ) ) :mod particular ) ) :arg1 ( product :arg0-of ( contain-01 :arg1 ( product :arg0-of brave-02 ) ) ) :manner particular ) :op2 ( say-01 :arg0 ( percentage-entity percentage-entity_num_0 ) :arg1 ( thing :arg0-of ( contain-01 :arg1 ( product :arg0-of brave-02 :mod lactic ) ) :mod at-least ) ) :time ( survey-01 :arg0 ( and :op1 ( person :arg0-of ( have-org-role-91 :arg2 head-of-state ) ) :op2 ( person :arg0-of ( have-org-role-91 :arg2 intestines ) ) :op3 ( person :quant num_2 :arg1-of ( include-91 :arg2 ( person :quant num_2 ) ) ) ) :mod particular )
moment :time-of ( start-01 :arg0 ( person :arg0-of tour-01 :mod frightened ) :arg1 ( panic-01 :arg1 person ) :time ( after :op1 ( fly-01 :arg1 jet :destination ( beach :mod full ) ) ) )
say-01 :arg2 person_name_0
exclude-01 :arg1 ( athletes :arg1-of light-06 :poss country_name_0 ) :arg2 ( game :mod summer ) :time then
resemble-01 :arg1 ( resemble-01 :arg1 she :arg2 ( character :mod italian :poss i ) :degree very :arg1-of ( cause-01 :arg0 ( have-03 :arg0 i :arg1 ( laughs :mod roman ) ) ) ) :arg2 she
feel-01 :polarity - :arg0 i :arg1 safe-01 :manner safe-01 :time ( month :ord ( ordinal-entity ordinal-entity_num_0 :range ( month :mod recent ) ) )
and :op2 ( recommend-01 :arg1 ( protect-01 :arg0 ( system :mod alarm-01 :mod built in ) :arg1 ( flasher :arg0 system ) ) )
obligate-01 :arg2 ( appear-01 :arg1 ( person :arg0-of ( have-rel-role-91 :arg1 she :arg2 ( backwill :mod tv ) ) ) :time ( week :mod next ) :mod in-fact )
consider-01 :arg1 ( '' :arg1 ( association :mod ( country_name_0 :degree most ) :mod country_name_2 ) )
do-02 :arg0 she :arg1 something :arg2 ( and :op1 ( health :poss she ) :op2 ( mind :poss she ) ) :manner way
say-01 :arg1 ( go-02 :arg0 you :arg3 ( connect-01 :arg1 you :arg2 ( explode-01 :location hua ) ) )
say-01 :arg0 ( and :op1 ( person :arg0-of ( have-org-role-91 :arg1 junta :arg2 ( minister :mod junta ) ) ) :op2 ( person :arg0-of ( have-org-role-91 :arg2 ( minister :mod prime ) ) ) ) :arg1 ( contrast-01 :arg1 ( attempt-01 :arg1 bomb ) :arg2 ( and :op1 ( move-01 :arg1 country :arg2 stability ) :op2 ( improve-01 :arg1 ( and :op1 ( situation :mod economy ) :op2 tourism ) ) ) )
cooperate-01 :polarity - :arg0 this :arg1 ( cause :arg1-of ( cause-01 :arg0 ( cause :quant num_0 ) ) )
schedule-01 :arg1 ( salons :arg1 publication_name_2 :arg3 ( product-of :op1 num_0 :op2 num_1 ) :location ( moderne :name ( name :op1 salle :op2 southwestern :op3 wilshire :op4 wilshire :op5 blvd :op6 blvd :op7 blvd ) ) ) :arg3 ( score-entity :op1 num_0 :op2 num_1 )
suggest-01 :arg0 ( person :arg0-of ( have-org-role-91 :arg1 ( journal-then :name ( name :op1 mr. :op2 street ) :mod male ) :arg2 dooley ) ) :arg1 ( expect-01 :arg0 ( and :op1 ( person :arg0-of ( have-org-role-91 :arg2 head-of-state ) ) :op2 ( person :mod male :arg0-of ( have-org-role-91 :arg2 athletes-as ) ) ) :arg1 ( and :op1 ( air-ringing :arg0 person ) :op2 ( base :mod new :mod fan :poss person ) ) ) :condition ( possible-01 :arg1 ( achieve-01 :arg0 ( and :op1 ( person :arg0-of ( have-org-role-91 :arg1 game_name_1 ) ) :op2 ( person :arg0-of ( objectification :arg1 male ) :mod male ) ) :arg1 consciousness :mod only ) )
came :arg1 ( call-03 :arg1 ( change-01 :arg1 politics ) ) :arg2 ( resist-01 :arg0 ( government-organization :arg0-of govern-01 ) :arg1 ( resist-01 :arg0 government-organization :manner violent ) )
meat :arg1-of ( focus-01 :arg2 ( cuisine :mod country_name_0 ) :duration ( temporal-quantity temporal-quantity_num_0 :unit year ) ) :arg1-of ( become-01 :arg2 ( luxury :arg1-of rare-02 ) )
cause-01 :arg0 ( lose-02 :arg0 heat :arg1 heat ) :arg1 ( large :degree ( more :degree much ) :compared-to ( elephant :arg1 elephant ) )
say-01 :arg0 ( person_name_0 :arg0-of ( have-org-role-91 :arg1 ( bank :mod central :part-of ( bank :mod central :part-of country_name_1 ) ) :arg2 -rrb- ) ) :arg1 ( and :op1 ( responsible-03 :arg0 ( person :arg0-of ( have-org-role-91 :arg1 ( bank :mod central :part-of country_name_2 ) :arg3 ( apprentice-01 :arg0 person ) ) ) :arg1 ( and :op1 ( responsible-03 :arg0 person :arg1 ( policy :mod money ) ) :op2 ( oversight :arg0 person :arg1 ( bank :mod ( large :degree most ) :example ( and :op1 ( supervise-01 :arg1 ( insure-02 :arg1 ( insure-02 :mod continent_name_0 ) ) ) :op2 ( supervise-01 :arg1 ( and :op1 ( supervise-01 :arg1 ( insure-02 :arg1 continent_name_0 ) ) :op2 ( council :mod risk-01 ) ) ) ) ) ) ) ) ) :arg2 frankfurt
sell-01 :arg0 she :arg1 ( picture :poss she ) :arg2 ( person :arg0-of ( have-rel-role-91 :arg1 she :arg2 daughter ) ) :purpose ( love-01 :arg0 she :arg1 forum )
and :op1 ( dismiss-01 :arg0 ( person :arg0-of ( leave-15 :arg1 ( and :op1 ( person :arg0-of ( leave-15 :arg1 ( relation-03 :arg0 person :arg2 ( and :op1 ( person :arg0-of ( traffic-01 :arg1 violence ) ) :op2 ( person :arg0-of ( oppress-01 :arg1 ( debt :arg0-of oppress-01 ) ) ) ) ) ) ) :op2 ( person :arg0-of work-01 ) :op3 ( person :arg0-of work-01 ) :op4 ( person :arg0-of work-01 ) :op5 ( person :arg0-of work-01 ) ) ) ) :arg1 ( problem :arg1-of legal-02 ) ) :op2 ( show-01 :arg0 ( survey-01 :mod this ) :arg1 ( possible-01 :arg1 ( get-01 :arg0 person :arg1 ( help-01 :arg0 person ) :degree total ) ) )
megabytes :arg1 ( memory :mod built in ) :time initial :arg1-of ( cause-01 :arg0 ( resolution :quant ( about :op1 num_1 ) :arg1-of high-02 ) :time today )
sell-01 :arg1 ( unit :quant ( about :op1 num_0 ) ) :manner ( and :op1 ( samsung :arg1 unit ) :op2 ( apple :arg1 unit ) )
look-02 :arg0 ( german :frequency ( rate-entity-91 :arg3 ( temporal-quantity temporal-quantity_num_0 :unit day ) ) ) :arg1 ( day :mod ( phone :arg1-of mobile-02 ) :poss he ) :frequency ( rate-entity-91 :arg3 ( temporal-quantity temporal-quantity_num_0 :unit day ) )
know-02 :arg1 ( risk-01 :arg2 ransomware ) :arg2 ( company :quant many :arg0-of ( better :arg1 ( data :poss company ) :manner ( good :degree more ) ) ) :time now
say-01 :arg0 he :arg1 ( violate-01 :polarity - :arg0 he :arg1 ( duty :mod information :poss he ) )
reach-01 :arg0 ( backlog :mod backlog ) :arg1 ( bridge :location ( and :op1 ( path :mod albersloher ) :op2 beyond ) )
night :mod restful
and :op1 ( feel-02 :arg0 ( person :quant many ) :arg1 ( feel-02 :arg0 person :arg1 ( or :op1 ( unsatisfactory :arg1 ( sleep-01 :arg0 person ) ) :op2 ( inadequate :domain person ) ) ) :mod particular ) :op2 ( say-01 :arg0 person :arg1 ( and :op1 ( wagonman :arg0 ( person :arg0-of ( have-org-role-91 :arg1 ( board :mod ( house :mod german ) ) :arg2 member ) ) :arg1 ( person :arg0-of ( have-org-role-91 :arg1 ( board :mod ( house :mod german ) ) :arg2 member ) ) :arg2 ( practice :arg1-of ( low-04 :degree more ) ) ) :op2 ( varel :arg1 person ) ) )
comment-01 :arg0 ( person_name_0 :arg0-of ( have-org-role-91 :arg2 deibler :time former ) :arg0-of ( have-org-role-91 :arg2 deibler :time former ) :arg0-of ( have-org-role-91 :arg2 deibler :time former ) :arg0-of ( have-org-role-91 :arg2 deibler :time former ) :arg0-of ( have-org-role-91 :arg2 deibler :time former ) :arg0-of ( have-org-role-91 :arg2 deibler ) )
see-01 :arg0 she :arg1 ( and :op1 ( person :arg0-of act-01 ) :op2 ( refugee :arg0-of ( assist-01 :arg2 refugee ) ) :op3 ( government-organization :arg0-of administrate-01 ) :op4 ( government-organization :arg0-of administrate-01 ) :op5 ( person :mod else :arg0-of ( involve-01 :arg1 person ) ) )
suggest-01 :arg0 ( client :source ( group :arg0-of work-01 ) ) :arg1 ( more :domain ( person :arg0-of volunteer-01 ) :compared-to ( person :arg0-of ( have-org-role-91 :arg1 ( group :arg0-of work-01 ) ) ) :degree ( more :compared-to ( person :arg0-of ( have-org-role-91 :arg1 ( group_name_0 :arg0-of work-01 ) ) ) ) :arg0-of ( have-03 :arg1 ( problem :mod ( above :op1 ( problem :quant all ) ) ) ) :time now )
and :op1 ( invade-01 :arg1 ( man :quant num_0 :arg1-of ( know-01 :polarity - ) ) :location ( apartment :location ( house :name ( name :op1 lime ) :location ( house :name ( name :op1 lime ) ) :time ( morning :mod friday ) ) ) ) :op2 ( invaded :arg1 ( man :quant num_2 :mod a.m. ) )
say-01 :arg0 ( profit :time ( before :op1 ( increase-01 :arg1 ( and :op1 interest-01 :op2 tax-01 ) ) ) ) :arg1 ( monetary-quantity monetary-quantity_num_0 :unit euro :arg1-of ( amount-01 :arg2 ( monetary-quantity monetary-quantity_num_1 :unit euro ) ) )
